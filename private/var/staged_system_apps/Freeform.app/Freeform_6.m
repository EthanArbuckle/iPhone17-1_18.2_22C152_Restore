uint64_t sub_1007221E8()
{
  unsigned char *v0;
  uint64_t result;

  result = 0x6564496472616F62;
  switch(*v0)
  {
    case 1:
      result = 0x656C746974;
      break;
    case 2:
      result = 0x6465726168537369;
      break;
    case 3:
      result = 0x746964457473616CLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_100722284@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_10072500C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1007222AC(uint64_t a1)
{
  unint64_t v2 = sub_100723F08();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1007222E8(uint64_t a1)
{
  unint64_t v2 = sub_100723F08();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100722324()
{
  uint64_t result = 0x7972617262696CLL;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x7265646C6F66;
      break;
    case 2:
      uint64_t result = 0x6472616F62;
      break;
    case 3:
      uint64_t result = 0x42676E69646E6570;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1007223B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1007251F0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1007223DC(uint64_t a1)
{
  unint64_t v2 = sub_100723E60();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100722418(uint64_t a1)
{
  unint64_t v2 = sub_100723E60();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100722454(uint64_t a1)
{
  unint64_t v2 = sub_100723F5C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100722490(uint64_t a1)
{
  unint64_t v2 = sub_100723F5C();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1007224CC(uint64_t a1)
{
  unint64_t v2 = sub_100724004();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100722508(uint64_t a1)
{
  unint64_t v2 = sub_100724004();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100722544()
{
  uint64_t v1 = 0x656C746974;
  if (*v0 != 1) {
    uint64_t v1 = 0x746964457473616CLL;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x696669746E656469;
  }
}

uint64_t sub_1007225A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1007253B4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1007225C8(uint64_t a1)
{
  unint64_t v2 = sub_100723EB4();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100722604(uint64_t a1)
{
  unint64_t v2 = sub_100723EB4();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100722640@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100721048(a1, a2);
}

uint64_t sub_100722658(void *a1)
{
  return sub_1007204C4(a1);
}

Swift::Int sub_100722670()
{
  return Hasher._finalize()();
}

Swift::Int sub_1007226B4()
{
  return Hasher._finalize()();
}

uint64_t sub_1007226F4()
{
  return sub_100722784(&qword_10167CBC8, (void (*)(uint64_t))type metadata accessor for CRLSELibraryViewModel.Item);
}

uint64_t sub_10072273C()
{
  return sub_100722784(&qword_10167CBD0, (void (*)(uint64_t))type metadata accessor for CRLSEBoardIdentifier);
}

uint64_t sub_100722784(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1007227CC()
{
  unint64_t result = qword_10167CBE0;
  if (!qword_10167CBE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10167CBE0);
  }
  return result;
}

uint64_t sub_100722820(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_100722880(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100522D34((uint64_t *)&unk_10168D410);
    sub_100722784(a2, (void (*)(uint64_t))type metadata accessor for CRLSELibraryViewModeItemNode);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100722914()
{
  uint64_t v1 = 0x6C61636F6CLL;
  if (*v0 != 1) {
    uint64_t v1 = 0x64756F6C4369;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x6C616963657073;
  }
}

uint64_t sub_100722968@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100725518(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_100722990(uint64_t a1)
{
  unint64_t v2 = sub_100726764();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1007229CC(uint64_t a1)
{
  unint64_t v2 = sub_100726764();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100722A08(uint64_t a1)
{
  unint64_t v2 = sub_1007267B8();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100722A44(uint64_t a1)
{
  unint64_t v2 = sub_1007267B8();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100722A80(uint64_t a1)
{
  unint64_t v2 = sub_10072680C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100722ABC(uint64_t a1)
{
  unint64_t v2 = sub_10072680C();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100722AF8(uint64_t a1)
{
  unint64_t v2 = sub_100726860();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100722B34(uint64_t a1)
{
  unint64_t v2 = sub_100726860();

  return CodingKey.debugDescription.getter(a1, v2);
}

void *sub_100722B70@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_100725660(a1);
  if (!v2) {
    *a2 = (_BYTE)result;
  }
  return result;
}

uint64_t sub_100722B9C(void *a1)
{
  return sub_100721E7C(a1, *v1);
}

uint64_t sub_100722BB8(void *a1, uint64_t a2)
{
  uint64_t v41 = a2;
  uint64_t v3 = sub_1005057FC(&qword_10167CE70);
  uint64_t v39 = *(void *)(v3 - 8);
  uint64_t v40 = v3;
  __chkstk_darwin(v3, v4);
  v38 = (char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1005057FC(&qword_10167CE78);
  uint64_t v36 = *(void *)(v6 - 8);
  uint64_t v37 = v6;
  __chkstk_darwin(v6, v7);
  v35 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1005057FC(&qword_10167CE80);
  uint64_t v33 = *(void *)(v9 - 8);
  uint64_t v34 = v9;
  __chkstk_darwin(v9, v10);
  v32 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1005057FC(&qword_10167CE88);
  uint64_t v30 = *(void *)(v12 - 8);
  uint64_t v31 = v12;
  __chkstk_darwin(v12, v13);
  v15 = (char *)&v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_1005057FC(&qword_10167CE90);
  uint64_t v29 = *(void *)(v16 - 8);
  __chkstk_darwin(v16, v17);
  v19 = (char *)&v29 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_1005057FC(&qword_10167CE98);
  uint64_t v21 = *(void *)(v20 - 8);
  __chkstk_darwin(v20, v22);
  v24 = (char *)&v29 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10050F848(a1, a1[3]);
  sub_10072656C();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  switch((char)v41)
  {
    case 1:
      char v43 = 1;
      sub_1007266BC();
      KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
      (*(void (**)(char *, uint64_t))(v30 + 8))(v15, v31);
      return (*(uint64_t (**)(char *, uint64_t))(v21 + 8))(v24, v20);
    case 2:
      char v44 = 2;
      sub_100726668();
      v25 = v32;
      KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
      uint64_t v27 = v33;
      uint64_t v26 = v34;
      goto LABEL_7;
    case 3:
      char v45 = 3;
      sub_100726614();
      v25 = v35;
      KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
      uint64_t v27 = v36;
      uint64_t v26 = v37;
      goto LABEL_7;
    case 4:
      char v46 = 4;
      sub_1007265C0();
      v25 = v38;
      KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
      uint64_t v27 = v39;
      uint64_t v26 = v40;
LABEL_7:
      (*(void (**)(char *, uint64_t))(v27 + 8))(v25, v26);
      break;
    default:
      char v42 = 0;
      sub_100726710();
      KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
      (*(void (**)(char *, uint64_t))(v29 + 8))(v19, v16);
      break;
  }
  return (*(uint64_t (**)(char *, uint64_t))(v21 + 8))(v24, v20);
}

uint64_t sub_1007230BC(uint64_t a1)
{
  unint64_t v2 = sub_100726710();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1007230F8(uint64_t a1)
{
  unint64_t v2 = sub_100726710();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100723134()
{
  uint64_t result = 0x6472616F426C6C61;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x73746E65636572;
      break;
    case 2:
      uint64_t result = 0x657469726F766166;
      break;
    case 3:
      uint64_t result = 0x646572616873;
      break;
    case 4:
      uint64_t result = 0x796C746E65636572;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1007231E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100725BD0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_100723210(uint64_t a1)
{
  unint64_t v2 = sub_10072656C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10072324C(uint64_t a1)
{
  unint64_t v2 = sub_10072656C();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100723288(uint64_t a1)
{
  unint64_t v2 = sub_100726668();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1007232C4(uint64_t a1)
{
  unint64_t v2 = sub_100726668();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100723300(uint64_t a1)
{
  unint64_t v2 = sub_1007265C0();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10072333C(uint64_t a1)
{
  unint64_t v2 = sub_1007265C0();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100723378(uint64_t a1)
{
  unint64_t v2 = sub_1007266BC();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1007233B4(uint64_t a1)
{
  unint64_t v2 = sub_1007266BC();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1007233F0(uint64_t a1)
{
  unint64_t v2 = sub_100726614();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10072342C(uint64_t a1)
{
  unint64_t v2 = sub_100726614();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100723468@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_100725E24(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_100723494(void *a1)
{
  return sub_100722BB8(a1, *v1);
}

uint64_t sub_1007234B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CRLSEBoardIdentifier(0);
  __chkstk_darwin(v4 - 8, v5);
  uint64_t v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8, v9);
  uint64_t v11 = (char *)&v20 - v10;
  char v12 = static UUID.== infix(_:_:)();
  sub_100723CE8(a1, (uint64_t)v11, type metadata accessor for CRLSEBoardIdentifier);
  sub_100723CE8(a2, (uint64_t)v7, type metadata accessor for CRLSEBoardIdentifier);
  if (v12)
  {
    uint64_t v13 = *(int *)(type metadata accessor for CRLSEBoardIdentifierStorage(0) + 20);
    uint64_t v14 = *(void *)&v11[v13];
    uint64_t v15 = *(void *)&v11[v13 + 8];
    uint64_t v16 = &v7[v13];
    if (v14 == *(void *)v16 && v15 == *((void *)v16 + 1)) {
      char v18 = 1;
    }
    else {
      char v18 = _stringCompareWithSmolCheck(_:_:expecting:)();
    }
  }
  else
  {
    char v18 = 0;
  }
  sub_100722820((uint64_t)v7, type metadata accessor for CRLSEBoardIdentifier);
  sub_100722820((uint64_t)v11, type metadata accessor for CRLSEBoardIdentifier);
  return v18 & 1;
}

uint64_t sub_100723608(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UUID();
  uint64_t v76 = *(void *)(v4 - 8);
  uint64_t v77 = v4;
  __chkstk_darwin(v4, v5);
  v71 = (char *)&v70 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7, v8);
  v70 = (char *)&v70 - v9;
  uint64_t v10 = type metadata accessor for CRLSEBoardIdentifier(0);
  __chkstk_darwin(v10 - 8, v11);
  uint64_t v75 = (uint64_t)&v70 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13, v14);
  uint64_t v74 = (uint64_t)&v70 - v15;
  __chkstk_darwin(v16, v17);
  uint64_t v73 = (uint64_t)&v70 - v18;
  __chkstk_darwin(v19, v20);
  uint64_t v72 = (uint64_t)&v70 - v21;
  uint64_t v22 = type metadata accessor for CRLSELibraryViewModel.Item(0);
  __chkstk_darwin(v22, v23);
  v25 = (char *)&v70 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26, v27);
  uint64_t v29 = (char *)&v70 - v28;
  __chkstk_darwin(v30, v31);
  uint64_t v33 = (unsigned __int8 *)&v70 - v32;
  __chkstk_darwin(v34, v35);
  uint64_t v37 = (unsigned __int8 *)&v70 - v36;
  uint64_t v38 = sub_1005057FC(&qword_10167CC10);
  __chkstk_darwin(v38 - 8, v39);
  uint64_t v41 = (char *)&v70 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v43 = &v41[*(int *)(v42 + 56)];
  sub_100723CE8(a1, (uint64_t)v41, type metadata accessor for CRLSELibraryViewModel.Item);
  sub_100723CE8(a2, (uint64_t)v43, type metadata accessor for CRLSELibraryViewModel.Item);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_100723CE8((uint64_t)v41, (uint64_t)v33, type metadata accessor for CRLSELibraryViewModel.Item);
      if (swift_getEnumCaseMultiPayload() != 1) {
        goto LABEL_16;
      }
      int v44 = *v33;
      goto LABEL_11;
    case 2u:
      sub_100723CE8((uint64_t)v41, (uint64_t)v29, type metadata accessor for CRLSELibraryViewModel.Item);
      uint64_t v45 = sub_1005057FC((uint64_t *)&unk_10169B720);
      swift_bridgeObjectRelease();
      uint64_t v46 = (uint64_t)&v29[*(int *)(v45 + 80)];
      if (swift_getEnumCaseMultiPayload() != 2)
      {
        sub_100522F00(v46, &qword_101672EB0);
        sub_100722820((uint64_t)v29, type metadata accessor for CRLSEBoardIdentifier);
        goto LABEL_16;
      }
      swift_bridgeObjectRelease();
      uint64_t v47 = v72;
      sub_100723D50((uint64_t)v29, v72, type metadata accessor for CRLSEBoardIdentifier);
      uint64_t v48 = v73;
      sub_100723D50((uint64_t)v43, v73, type metadata accessor for CRLSEBoardIdentifier);
      char v49 = static UUID.== infix(_:_:)();
      uint64_t v50 = v74;
      sub_100723CE8(v47, v74, type metadata accessor for CRLSEBoardIdentifier);
      uint64_t v51 = v75;
      sub_100723CE8(v48, v75, type metadata accessor for CRLSEBoardIdentifier);
      if (v49)
      {
        uint64_t v52 = *(int *)(type metadata accessor for CRLSEBoardIdentifierStorage(0) + 20);
        uint64_t v53 = *(void *)(v50 + v52);
        uint64_t v54 = *(void *)(v50 + v52 + 8);
        v55 = (void *)(v51 + v52);
        if (v53 == *v55 && v54 == v55[1]) {
          char v56 = 1;
        }
        else {
          char v56 = _stringCompareWithSmolCheck(_:_:expecting:)();
        }
      }
      else
      {
        char v56 = 0;
      }
      uint64_t v68 = (uint64_t)&v43[*(int *)(v45 + 80)];
      sub_100722820(v51, type metadata accessor for CRLSEBoardIdentifier);
      sub_100722820(v50, type metadata accessor for CRLSEBoardIdentifier);
      sub_100722820(v48, type metadata accessor for CRLSEBoardIdentifier);
      sub_100722820(v47, type metadata accessor for CRLSEBoardIdentifier);
      sub_100522F00(v68, &qword_101672EB0);
      uint64_t v67 = v46;
      goto LABEL_20;
    case 3u:
      sub_100723CE8((uint64_t)v41, (uint64_t)v25, type metadata accessor for CRLSELibraryViewModel.Item);
      uint64_t v57 = sub_1005057FC((uint64_t *)&unk_10168D400);
      swift_bridgeObjectRelease();
      uint64_t v58 = (uint64_t)&v25[*(int *)(v57 + 64)];
      if (swift_getEnumCaseMultiPayload() == 3)
      {
        swift_bridgeObjectRelease();
        uint64_t v59 = (uint64_t)&v43[*(int *)(v57 + 64)];
        uint64_t v60 = v76;
        v61 = *(void (**)(char *, char *, uint64_t))(v76 + 32);
        v62 = v70;
        v63 = v25;
        uint64_t v64 = v77;
        v61(v70, v63, v77);
        v65 = v71;
        v61(v71, v43, v64);
        char v56 = static UUID.== infix(_:_:)();
        v66 = *(void (**)(char *, uint64_t))(v60 + 8);
        v66(v65, v64);
        v66(v62, v64);
        sub_100522F00(v59, &qword_101672EB0);
        uint64_t v67 = v58;
LABEL_20:
        sub_100522F00(v67, &qword_101672EB0);
LABEL_21:
        sub_100722820((uint64_t)v41, type metadata accessor for CRLSELibraryViewModel.Item);
      }
      else
      {
        sub_100522F00(v58, &qword_101672EB0);
        (*(void (**)(char *, uint64_t))(v76 + 8))(v25, v77);
LABEL_16:
        sub_100522F00((uint64_t)v41, &qword_10167CC10);
        char v56 = 0;
      }
      return v56 & 1;
    default:
      sub_100723CE8((uint64_t)v41, (uint64_t)v37, type metadata accessor for CRLSELibraryViewModel.Item);
      if (swift_getEnumCaseMultiPayload()) {
        goto LABEL_16;
      }
      int v44 = *v37;
LABEL_11:
      char v56 = v44 == *v43;
      goto LABEL_21;
  }
}

uint64_t sub_100723CE8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_100723D50(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

unint64_t sub_100723DB8()
{
  unint64_t result = qword_10167CC20;
  if (!qword_10167CC20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10167CC20);
  }
  return result;
}

unint64_t sub_100723E0C()
{
  unint64_t result = qword_10167CC48;
  if (!qword_10167CC48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10167CC48);
  }
  return result;
}

unint64_t sub_100723E60()
{
  unint64_t result = qword_10167CC80;
  if (!qword_10167CC80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10167CC80);
  }
  return result;
}

unint64_t sub_100723EB4()
{
  unint64_t result = qword_10167CC88;
  if (!qword_10167CC88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10167CC88);
  }
  return result;
}

unint64_t sub_100723F08()
{
  unint64_t result = qword_10167CC90;
  if (!qword_10167CC90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10167CC90);
  }
  return result;
}

unint64_t sub_100723F5C()
{
  unint64_t result = qword_10167CCA0;
  if (!qword_10167CCA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10167CCA0);
  }
  return result;
}

unint64_t sub_100723FB0()
{
  unint64_t result = qword_10167CCA8;
  if (!qword_10167CCA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10167CCA8);
  }
  return result;
}

unint64_t sub_100724004()
{
  unint64_t result = qword_10167CCB0;
  if (!qword_10167CCB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10167CCB0);
  }
  return result;
}

unint64_t sub_100724058()
{
  unint64_t result = qword_10167CCB8;
  if (!qword_10167CCB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10167CCB8);
  }
  return result;
}

uint64_t sub_1007240AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1005057FC(&qword_101672EB0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_100724114()
{
  unint64_t result = qword_10167CCF0;
  if (!qword_10167CCF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10167CCF0);
  }
  return result;
}

unint64_t sub_100724168()
{
  unint64_t result = qword_10167CCF8;
  if (!qword_10167CCF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10167CCF8);
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLSELibraryViewModel.Item.CodingKeys()
{
  return &type metadata for CRLSELibraryViewModel.Item.CodingKeys;
}

ValueMetadata *type metadata accessor for CRLSELibraryViewModel.Item.LibraryCodingKeys()
{
  return &type metadata for CRLSELibraryViewModel.Item.LibraryCodingKeys;
}

ValueMetadata *type metadata accessor for CRLSELibraryViewModel.Item.FolderCodingKeys()
{
  return &type metadata for CRLSELibraryViewModel.Item.FolderCodingKeys;
}

unsigned char *_s8Freeform21CRLSELibraryViewModelV4ItemO10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1007242C4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLSELibraryViewModel.Item.BoardCodingKeys()
{
  return &type metadata for CRLSELibraryViewModel.Item.BoardCodingKeys;
}

ValueMetadata *type metadata accessor for CRLSELibraryViewModel.Item.PendingBoardCodingKeys()
{
  return &type metadata for CRLSELibraryViewModel.Item.PendingBoardCodingKeys;
}

ValueMetadata *type metadata accessor for CRLSEBoardIdentifierStorage.CodingKeys()
{
  return &type metadata for CRLSEBoardIdentifierStorage.CodingKeys;
}

unsigned char *_s8Freeform21CRLSELibraryViewModelV4ItemO17LibraryCodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1007243C0);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLSEBoardIdentifier.CodingKeys()
{
  return &type metadata for CRLSEBoardIdentifier.CodingKeys;
}

unsigned char *_s8Freeform27CRLSEBoardIdentifierStorageV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1007244C4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLSELibraryViewModeItemNode.CodingKeys()
{
  return &type metadata for CRLSELibraryViewModeItemNode.CodingKeys;
}

ValueMetadata *type metadata accessor for CRLSELibraryViewModel.Folder()
{
  return &type metadata for CRLSELibraryViewModel.Folder;
}

ValueMetadata *type metadata accessor for CRLSELibraryViewModel()
{
  return &type metadata for CRLSELibraryViewModel;
}

ValueMetadata *type metadata accessor for CRLSELibraryViewModel.Library()
{
  return &type metadata for CRLSELibraryViewModel.Library;
}

unint64_t sub_100724538()
{
  unint64_t result = qword_10167CD00;
  if (!qword_10167CD00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10167CD00);
  }
  return result;
}

unint64_t sub_100724590()
{
  unint64_t result = qword_10167CD08;
  if (!qword_10167CD08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10167CD08);
  }
  return result;
}

unint64_t sub_1007245E8()
{
  unint64_t result = qword_10167CD10;
  if (!qword_10167CD10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10167CD10);
  }
  return result;
}

unint64_t sub_100724640()
{
  unint64_t result = qword_10167CD18;
  if (!qword_10167CD18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10167CD18);
  }
  return result;
}

unint64_t sub_100724698()
{
  unint64_t result = qword_10167CD20;
  if (!qword_10167CD20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10167CD20);
  }
  return result;
}

unint64_t sub_1007246F0()
{
  unint64_t result = qword_10167CD28;
  if (!qword_10167CD28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10167CD28);
  }
  return result;
}

unint64_t sub_100724748()
{
  unint64_t result = qword_10167CD30;
  if (!qword_10167CD30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10167CD30);
  }
  return result;
}

unint64_t sub_1007247A0()
{
  unint64_t result = qword_10167CD38;
  if (!qword_10167CD38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10167CD38);
  }
  return result;
}

unint64_t sub_1007247F8()
{
  unint64_t result = qword_10167CD40;
  if (!qword_10167CD40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10167CD40);
  }
  return result;
}

unint64_t sub_100724850()
{
  unint64_t result = qword_10167CD48;
  if (!qword_10167CD48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10167CD48);
  }
  return result;
}

unint64_t sub_1007248A8()
{
  unint64_t result = qword_10167CD50;
  if (!qword_10167CD50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10167CD50);
  }
  return result;
}

unint64_t sub_100724900()
{
  unint64_t result = qword_10167CD58;
  if (!qword_10167CD58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10167CD58);
  }
  return result;
}

unint64_t sub_100724958()
{
  unint64_t result = qword_10167CD60;
  if (!qword_10167CD60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10167CD60);
  }
  return result;
}

unint64_t sub_1007249B0()
{
  unint64_t result = qword_10167CD68;
  if (!qword_10167CD68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10167CD68);
  }
  return result;
}

unint64_t sub_100724A08()
{
  unint64_t result = qword_10167CD70;
  if (!qword_10167CD70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10167CD70);
  }
  return result;
}

unint64_t sub_100724A60()
{
  unint64_t result = qword_10167CD78;
  if (!qword_10167CD78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10167CD78);
  }
  return result;
}

unint64_t sub_100724AB8()
{
  unint64_t result = qword_10167CD80;
  if (!qword_10167CD80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10167CD80);
  }
  return result;
}

unint64_t sub_100724B10()
{
  unint64_t result = qword_10167CD88;
  if (!qword_10167CD88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10167CD88);
  }
  return result;
}

unint64_t sub_100724B68()
{
  unint64_t result = qword_10167CD90;
  if (!qword_10167CD90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10167CD90);
  }
  return result;
}

unint64_t sub_100724BC0()
{
  unint64_t result = qword_10167CD98;
  if (!qword_10167CD98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10167CD98);
  }
  return result;
}

unint64_t sub_100724C18()
{
  unint64_t result = qword_10167CDA0;
  if (!qword_10167CDA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10167CDA0);
  }
  return result;
}

unint64_t sub_100724C70()
{
  unint64_t result = qword_10167CDA8;
  if (!qword_10167CDA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10167CDA8);
  }
  return result;
}

unint64_t sub_100724CC8()
{
  unint64_t result = qword_10167CDB0;
  if (!qword_10167CDB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10167CDB0);
  }
  return result;
}

unint64_t sub_100724D20()
{
  unint64_t result = qword_10167CDB8;
  if (!qword_10167CDB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10167CDB8);
  }
  return result;
}

unint64_t sub_100724D78()
{
  unint64_t result = qword_10167CDC0;
  if (!qword_10167CDC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10167CDC0);
  }
  return result;
}

unint64_t sub_100724DD0()
{
  unint64_t result = qword_10167CDC8;
  if (!qword_10167CDC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10167CDC8);
  }
  return result;
}

uint64_t sub_100724E24(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1835365481 && a2 == 0xE400000000000000;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E6572646C696863 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_100724F08(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x4955556472616F62 && a2 == 0xE900000000000044;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6D614E72656E776FLL && a2 == 0xE900000000000065)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_10072500C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6564496472616F62 && a2 == 0xEF7265696669746ELL;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656C746974 && a2 == 0xE500000000000000 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6465726168537369 && a2 == 0xE800000000000000 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x746964457473616CLL && a2 == 0xEA00000000006465)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_1007251F0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x7972617262696CLL && a2 == 0xE700000000000000;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7265646C6F66 && a2 == 0xE600000000000000 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6472616F62 && a2 == 0xE500000000000000 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x42676E69646E6570 && a2 == 0xEC0000006472616FLL)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_1007253B4(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x696669746E656469 && a2 == 0xEA00000000007265
    || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656C746974 && a2 == 0xE500000000000000 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x746964457473616CLL && a2 == 0xEA00000000006465)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v5 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v5) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_100725518(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6C616963657073 && a2 == 0xE700000000000000;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6C61636F6CLL && a2 == 0xE500000000000000 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x64756F6C4369 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

void *sub_100725660(void *a1)
{
  uint64_t v2 = sub_1005057FC(&qword_10167CE30);
  uint64_t v29 = *(void *)(v2 - 8);
  uint64_t v30 = v2;
  __chkstk_darwin(v2, v3);
  uint64_t v33 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = sub_1005057FC(&qword_10167CE38);
  uint64_t v28 = *(void *)(v31 - 8);
  __chkstk_darwin(v31, v5);
  uint64_t v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1005057FC(&qword_10167CE40);
  uint64_t v27 = *(void *)(v8 - 8);
  __chkstk_darwin(v8, v9);
  uint64_t v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1005057FC(&qword_10167CE48);
  uint64_t v32 = *(void *)(v12 - 8);
  __chkstk_darwin(v12, v13);
  uint64_t v15 = (uint64_t *)((char *)&v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10050F848(a1, a1[3]);
  sub_100726764();
  uint64_t v16 = (uint64_t)v34;
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v16) {
    goto LABEL_7;
  }
  uint64_t v26 = v8;
  uint64_t v17 = v33;
  uint64_t v34 = a1;
  uint64_t v18 = v15;
  uint64_t v19 = KeyedDecodingContainer.allKeys.getter();
  if (*(void *)(v19 + 16) != 1)
  {
    uint64_t v21 = type metadata accessor for DecodingError();
    swift_allocError();
    uint64_t v15 = v22;
    sub_1005057FC(&qword_1016771E0);
    void *v15 = &type metadata for CRLSELibraryViewModel.Library;
    KeyedDecodingContainer.codingPath.getter();
    DecodingError.Context.init(codingPath:debugDescription:underlyingError:)();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v21 - 8) + 104))(v15, enum case for DecodingError.typeMismatch(_:), v21);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(void *, uint64_t))(v32 + 8))(v18, v12);
    a1 = v34;
LABEL_7:
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)a1);
    return v15;
  }
  uint64_t v15 = (void *)*(unsigned __int8 *)(v19 + 32);
  if (*(unsigned char *)(v19 + 32))
  {
    if (v15 == 1)
    {
      char v36 = 1;
      sub_10072680C();
      KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)();
      uint64_t v20 = v32;
      (*(void (**)(char *, uint64_t))(v28 + 8))(v7, v31);
      swift_bridgeObjectRelease();
      (*(void (**)(void *, uint64_t))(v20 + 8))(v18, v12);
    }
    else
    {
      char v37 = 2;
      sub_1007267B8();
      KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)();
      uint64_t v24 = v32;
      (*(void (**)(char *, uint64_t))(v29 + 8))(v17, v30);
      swift_bridgeObjectRelease();
      (*(void (**)(void *, uint64_t))(v24 + 8))(v18, v12);
    }
  }
  else
  {
    char v35 = 0;
    sub_100726860();
    KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)();
    (*(void (**)(char *, uint64_t))(v27 + 8))(v11, v26);
    swift_bridgeObjectRelease();
    (*(void (**)(void *, uint64_t))(v32 + 8))(v18, v12);
  }
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v34);
  return v15;
}

uint64_t sub_100725BD0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6472616F426C6C61 && a2 == 0xE900000000000073;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x73746E65636572 && a2 == 0xE700000000000000 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x657469726F766166 && a2 == 0xE900000000000073 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x646572616873 && a2 == 0xE600000000000000 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x796C746E65636572 && a2 == 0xEF646574656C6544)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v6) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

uint64_t sub_100725E24(void *a1)
{
  uint64_t v47 = sub_1005057FC(&qword_10167CDD0);
  uint64_t v40 = *(void *)(v47 - 8);
  __chkstk_darwin(v47, v2);
  uint64_t v50 = (char *)&v37 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = sub_1005057FC(&qword_10167CDD8);
  uint64_t v46 = *(void *)(v43 - 8);
  __chkstk_darwin(v43, v4);
  char v49 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1005057FC(&qword_10167CDE0);
  uint64_t v44 = *(void *)(v6 - 8);
  uint64_t v45 = v6;
  __chkstk_darwin(v6, v7);
  uint64_t v48 = (char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1005057FC(&qword_10167CDE8);
  uint64_t v41 = *(void *)(v9 - 8);
  uint64_t v42 = v9;
  __chkstk_darwin(v9, v10);
  uint64_t v12 = (char *)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1005057FC(&qword_10167CDF0);
  uint64_t v39 = *(void *)(v13 - 8);
  __chkstk_darwin(v13, v14);
  uint64_t v16 = (char *)&v37 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_1005057FC(&qword_10167CDF8);
  uint64_t v18 = *(void *)(v17 - 8);
  __chkstk_darwin(v17, v19);
  uint64_t v21 = (uint64_t)&v37 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = a1[3];
  uint64_t v51 = a1;
  sub_10050F848(a1, v22);
  sub_10072656C();
  uint64_t v23 = v52;
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (!v23)
  {
    uint64_t v52 = v16;
    uint64_t v37 = v13;
    uint64_t v38 = v18;
    uint64_t v24 = v12;
    uint64_t v26 = v48;
    uint64_t v25 = v49;
    uint64_t v27 = v50;
    uint64_t v28 = v21;
    uint64_t v29 = KeyedDecodingContainer.allKeys.getter();
    if (*(void *)(v29 + 16) == 1)
    {
      uint64_t v21 = *(unsigned __int8 *)(v29 + 32);
      switch(*(unsigned char *)(v29 + 32))
      {
        case 1:
          uint64_t v36 = v38;
          char v54 = 1;
          sub_1007266BC();
          KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)();
          (*(void (**)(char *, uint64_t))(v41 + 8))(v24, v42);
          goto LABEL_12;
        case 2:
          uint64_t v36 = v38;
          char v55 = 2;
          sub_100726668();
          KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)();
          (*(void (**)(char *, uint64_t))(v44 + 8))(v26, v45);
LABEL_12:
          swift_bridgeObjectRelease();
          uint64_t v30 = v36;
          goto LABEL_10;
        case 3:
          uint64_t v30 = v38;
          char v56 = 3;
          sub_100726614();
          KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)();
          (*(void (**)(char *, uint64_t))(v46 + 8))(v25, v43);
          goto LABEL_13;
        case 4:
          char v57 = 4;
          sub_1007265C0();
          KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)();
          (*(void (**)(char *, uint64_t))(v40 + 8))(v27, v47);
          swift_bridgeObjectRelease();
          (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v28, v17);
          break;
        default:
          uint64_t v30 = v38;
          char v53 = 0;
          sub_100726710();
          uint64_t v31 = v52;
          KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)();
          (*(void (**)(char *, uint64_t))(v39 + 8))(v31, v37);
LABEL_13:
          swift_bridgeObjectRelease();
LABEL_10:
          (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v28, v17);
          break;
      }
    }
    else
    {
      uint64_t v32 = type metadata accessor for DecodingError();
      uint64_t v21 = swift_allocError();
      uint64_t v34 = v33;
      sub_1005057FC(&qword_1016771E0);
      *uint64_t v34 = &type metadata for CRLSELibraryViewModel.Folder;
      KeyedDecodingContainer.codingPath.getter();
      DecodingError.Context.init(codingPath:debugDescription:underlyingError:)();
      (*(void (**)(void *, void, uint64_t))(*(void *)(v32 - 8) + 104))(v34, enum case for DecodingError.typeMismatch(_:), v32);
      swift_willThrow();
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v28, v17);
    }
  }
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v51);
  return v21;
}

unint64_t sub_10072656C()
{
  unint64_t result = qword_10167CE00;
  if (!qword_10167CE00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10167CE00);
  }
  return result;
}

unint64_t sub_1007265C0()
{
  unint64_t result = qword_10167CE08;
  if (!qword_10167CE08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10167CE08);
  }
  return result;
}

unint64_t sub_100726614()
{
  unint64_t result = qword_10167CE10;
  if (!qword_10167CE10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10167CE10);
  }
  return result;
}

unint64_t sub_100726668()
{
  unint64_t result = qword_10167CE18;
  if (!qword_10167CE18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10167CE18);
  }
  return result;
}

unint64_t sub_1007266BC()
{
  unint64_t result = qword_10167CE20;
  if (!qword_10167CE20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10167CE20);
  }
  return result;
}

unint64_t sub_100726710()
{
  unint64_t result = qword_10167CE28;
  if (!qword_10167CE28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10167CE28);
  }
  return result;
}

unint64_t sub_100726764()
{
  unint64_t result = qword_10167CE50;
  if (!qword_10167CE50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10167CE50);
  }
  return result;
}

unint64_t sub_1007267B8()
{
  unint64_t result = qword_10167CE58;
  if (!qword_10167CE58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10167CE58);
  }
  return result;
}

unint64_t sub_10072680C()
{
  unint64_t result = qword_10167CE60;
  if (!qword_10167CE60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10167CE60);
  }
  return result;
}

unint64_t sub_100726860()
{
  unint64_t result = qword_10167CE68;
  if (!qword_10167CE68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10167CE68);
  }
  return result;
}

unsigned char *_s8Freeform21CRLSELibraryViewModelV7LibraryOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100726980);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLSELibraryViewModel.Library.CodingKeys()
{
  return &type metadata for CRLSELibraryViewModel.Library.CodingKeys;
}

ValueMetadata *type metadata accessor for CRLSELibraryViewModel.Library.SpecialCodingKeys()
{
  return &type metadata for CRLSELibraryViewModel.Library.SpecialCodingKeys;
}

ValueMetadata *type metadata accessor for CRLSELibraryViewModel.Library.LocalCodingKeys()
{
  return &type metadata for CRLSELibraryViewModel.Library.LocalCodingKeys;
}

ValueMetadata *type metadata accessor for CRLSELibraryViewModel.Library.ICloudCodingKeys()
{
  return &type metadata for CRLSELibraryViewModel.Library.ICloudCodingKeys;
}

unsigned char *_s8Freeform21CRLSELibraryViewModelV6FolderOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100726AB4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLSELibraryViewModel.Folder.CodingKeys()
{
  return &type metadata for CRLSELibraryViewModel.Folder.CodingKeys;
}

ValueMetadata *type metadata accessor for CRLSELibraryViewModel.Folder.AllBoardsCodingKeys()
{
  return &type metadata for CRLSELibraryViewModel.Folder.AllBoardsCodingKeys;
}

ValueMetadata *type metadata accessor for CRLSELibraryViewModel.Folder.RecentsCodingKeys()
{
  return &type metadata for CRLSELibraryViewModel.Folder.RecentsCodingKeys;
}

ValueMetadata *type metadata accessor for CRLSELibraryViewModel.Folder.FavoritesCodingKeys()
{
  return &type metadata for CRLSELibraryViewModel.Folder.FavoritesCodingKeys;
}

ValueMetadata *type metadata accessor for CRLSELibraryViewModel.Folder.SharedCodingKeys()
{
  return &type metadata for CRLSELibraryViewModel.Folder.SharedCodingKeys;
}

ValueMetadata *type metadata accessor for CRLSELibraryViewModel.Folder.RecentlyDeletedCodingKeys()
{
  return &type metadata for CRLSELibraryViewModel.Folder.RecentlyDeletedCodingKeys;
}

unint64_t sub_100726B40()
{
  unint64_t result = qword_10167CEC0;
  if (!qword_10167CEC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10167CEC0);
  }
  return result;
}

unint64_t sub_100726B98()
{
  unint64_t result = qword_10167CEC8;
  if (!qword_10167CEC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10167CEC8);
  }
  return result;
}

unint64_t sub_100726BF0()
{
  unint64_t result = qword_10167CED0;
  if (!qword_10167CED0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10167CED0);
  }
  return result;
}

unint64_t sub_100726C48()
{
  unint64_t result = qword_10167CED8;
  if (!qword_10167CED8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10167CED8);
  }
  return result;
}

unint64_t sub_100726CA0()
{
  unint64_t result = qword_10167CEE0;
  if (!qword_10167CEE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10167CEE0);
  }
  return result;
}

unint64_t sub_100726CF8()
{
  unint64_t result = qword_10167CEE8;
  if (!qword_10167CEE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10167CEE8);
  }
  return result;
}

unint64_t sub_100726D50()
{
  unint64_t result = qword_10167CEF0;
  if (!qword_10167CEF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10167CEF0);
  }
  return result;
}

unint64_t sub_100726DA8()
{
  unint64_t result = qword_10167CEF8;
  if (!qword_10167CEF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10167CEF8);
  }
  return result;
}

unint64_t sub_100726E00()
{
  unint64_t result = qword_10167CF00;
  if (!qword_10167CF00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10167CF00);
  }
  return result;
}

unint64_t sub_100726E58()
{
  unint64_t result = qword_10167CF08;
  if (!qword_10167CF08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10167CF08);
  }
  return result;
}

unint64_t sub_100726EB0()
{
  unint64_t result = qword_10167CF10;
  if (!qword_10167CF10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10167CF10);
  }
  return result;
}

unint64_t sub_100726F08()
{
  unint64_t result = qword_10167CF18;
  if (!qword_10167CF18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10167CF18);
  }
  return result;
}

unint64_t sub_100726F60()
{
  unint64_t result = qword_10167CF20;
  if (!qword_10167CF20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10167CF20);
  }
  return result;
}

unint64_t sub_100726FB8()
{
  unint64_t result = qword_10167CF28;
  if (!qword_10167CF28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10167CF28);
  }
  return result;
}

unint64_t sub_100727010()
{
  unint64_t result = qword_10167CF30;
  if (!qword_10167CF30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10167CF30);
  }
  return result;
}

unint64_t sub_100727068()
{
  unint64_t result = qword_10167CF38;
  if (!qword_10167CF38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10167CF38);
  }
  return result;
}

unint64_t sub_1007270C0()
{
  unint64_t result = qword_10167CF40;
  if (!qword_10167CF40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10167CF40);
  }
  return result;
}

unint64_t sub_100727118()
{
  unint64_t result = qword_10167CF48;
  if (!qword_10167CF48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10167CF48);
  }
  return result;
}

unint64_t sub_100727170()
{
  unint64_t result = qword_10167CF50;
  if (!qword_10167CF50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10167CF50);
  }
  return result;
}

unint64_t sub_1007271C8()
{
  unint64_t result = qword_10167CF58;
  if (!qword_10167CF58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10167CF58);
  }
  return result;
}

unint64_t sub_100727220()
{
  unint64_t result = qword_10167CF60;
  if (!qword_10167CF60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10167CF60);
  }
  return result;
}

unint64_t sub_100727278()
{
  unint64_t result = qword_10167CF68;
  if (!qword_10167CF68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10167CF68);
  }
  return result;
}

id sub_1007274F8()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLWPRepHelper();
  return [super dealloc];
}

uint64_t type metadata accessor for CRLWPRepHelper()
{
  return self;
}

void sub_100727560(void *a1)
{
  NSString v2 = String._bridgeToObjectiveC()();
  id v3 = [self animationWithKeyPath:v2];

  [a1 transform];
  CGFloat m11 = v47.m11;
  CGFloat m12 = v47.m12;
  CGFloat m13 = v47.m13;
  CGFloat m14 = v47.m14;
  CGFloat m21 = v47.m21;
  CGFloat m22 = v47.m22;
  CGFloat m23 = v47.m23;
  CGFloat m24 = v47.m24;
  CGFloat m32 = v47.m32;
  CGFloat m31 = v47.m31;
  CGFloat m34 = v47.m34;
  CGFloat m33 = v47.m33;
  CGFloat m42 = v47.m42;
  CGFloat m41 = v47.m41;
  CGFloat m44 = v47.m44;
  CGFloat m43 = v47.m43;
  CATransform3DScale(&v46, &v47, 1.34, 1.34, 1.0);
  long long v28 = *(_OWORD *)&v46.m11;
  long long v27 = *(_OWORD *)&v46.m13;
  long long v26 = *(_OWORD *)&v46.m21;
  long long v25 = *(_OWORD *)&v46.m23;
  long long v24 = *(_OWORD *)&v46.m31;
  long long v23 = *(_OWORD *)&v46.m33;
  long long v22 = *(_OWORD *)&v46.m41;
  CGFloat v21 = v46.m43;
  CGFloat v20 = v46.m44;
  [a1 transform];
  long long v37 = *(_OWORD *)&v47.m11;
  long long v36 = *(_OWORD *)&v47.m13;
  long long v35 = *(_OWORD *)&v47.m21;
  long long v34 = *(_OWORD *)&v47.m23;
  long long v33 = *(_OWORD *)&v47.m31;
  long long v32 = *(_OWORD *)&v47.m33;
  long long v31 = *(_OWORD *)&v47.m41;
  CGFloat v30 = v47.m43;
  CGFloat v29 = v47.m44;
  sub_1005057FC((uint64_t *)&unk_10167BEF0);
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_10117DF40;
  type metadata accessor for CATransform3D(0);
  uint64_t v14 = v13;
  *(void *)(v12 + 56) = v13;
  uint64_t v15 = (CGFloat *)swift_allocObject();
  *(void *)(v12 + 32) = v15;
  v15[2] = m11;
  v15[3] = m12;
  v15[4] = m13;
  v15[5] = m14;
  v15[6] = m21;
  v15[7] = m22;
  v15[8] = m23;
  v15[9] = m24;
  v15[10] = m31;
  v15[11] = m32;
  v15[12] = m33;
  v15[13] = m34;
  v15[14] = m41;
  v15[15] = m42;
  v15[16] = m43;
  v15[17] = m44;
  *(void *)(v12 + 88) = v14;
  uint64_t v16 = swift_allocObject();
  *(void *)(v12 + 64) = v16;
  *(_OWORD *)(v16 + 16) = v28;
  *(_OWORD *)(v16 + 32) = v27;
  *(_OWORD *)(v16 + 48) = v26;
  *(_OWORD *)(v16 + 64) = v25;
  *(_OWORD *)(v16 + 80) = v24;
  *(_OWORD *)(v16 + 96) = v23;
  *(_OWORD *)(v16 + 112) = v22;
  *(CGFloat *)(v16 + 128) = v21;
  *(CGFloat *)(v16 + 136) = v20;
  *(void *)(v12 + 120) = v14;
  uint64_t v17 = swift_allocObject();
  *(void *)(v12 + 96) = v17;
  *(_OWORD *)(v17 + 16) = v37;
  *(_OWORD *)(v17 + 32) = v36;
  *(_OWORD *)(v17 + 48) = v35;
  *(_OWORD *)(v17 + 64) = v34;
  *(_OWORD *)(v17 + 80) = v33;
  *(_OWORD *)(v17 + 96) = v32;
  *(_OWORD *)(v17 + 112) = v31;
  *(CGFloat *)(v17 + 128) = v30;
  *(CGFloat *)(v17 + 136) = v29;
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v3 setValues:isa];

  [v3 setRemovedOnCompletion:1];
  [v3 setDuration:0.25];
  NSString v19 = String._bridgeToObjectiveC()();
  [a1 addAnimation:v3 forKey:v19];
}

uint64_t sub_100727930()
{
  return _swift_deallocObject(v0, 144, 7);
}

void sub_100727940()
{
  swift_beginAccess();
  Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = Strong;
    id v2 = [Strong viewIfLoaded];
    if (v2)
    {
      id v3 = v2;
      id v4 = [v2 window];

      if (v4)
      {
        id v5 = [v4 windowScene];
        if (v5)
        {
          unsigned int v6 = v5;
          id v7 = [v5 delegate];

          if (v7)
          {
            type metadata accessor for CRLiOSSceneDelegate();
            uint64_t v8 = (void *)swift_dynamicCastClass();
            if (v8)
            {
              [v8 qa_importFileFor:v1];

              swift_unknownObjectRelease();
              return;
            }
            swift_unknownObjectRelease();
          }
        }
      }
    }
  }
}

void sub_100727A5C()
{
  id v0 = objc_allocWithZone((Class)type metadata accessor for CRLFileReadWriteUserOptionsViewController());
  sub_1009F9EF8((uint64_t)v9);
  uint64_t v1 = (void *)UIHostingController.init(rootView:)();
  uint64_t v2 = swift_allocObject();
  swift_unknownObjectWeakInit();
  id v3 = v1;
  swift_retain();
  id v4 = (void (*)(unsigned char *, void))dispatch thunk of UIHostingController.rootView.modify();
  uint64_t v6 = *(void *)(v5 + 32);
  *(void *)(v5 + 32) = sub_10072A0B4;
  *(void *)(v5 + 40) = v2;
  sub_1005174AC(v6);
  v4(v9, 0);

  swift_release();
  swift_beginAccess();
  Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v8 = Strong;
    [Strong presentViewController:v3 animated:1 completion:0];
  }
}

void sub_100727B80()
{
  uint64_t v0 = sub_1005057FC(&qword_1016842F0);
  __chkstk_darwin(v0 - 8, v1);
  id v3 = &v16[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  uint64_t v4 = swift_projectBox();
  swift_beginAccess();
  sub_100522E9C(v4, (uint64_t)v3, &qword_1016842F0);
  id v5 = objc_allocWithZone((Class)type metadata accessor for CRLHandwritingDebugViewController(0));
  uint64_t v6 = swift_bridgeObjectRetain();
  id v7 = sub_10073D50C(v6, (uint64_t)v3);
  uint64_t v8 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v9 = v7;
  swift_retain();
  uint64_t v10 = (void (*)(unsigned char *, void))dispatch thunk of UIHostingController.rootView.modify();
  uint64_t v12 = *v11;
  *uint64_t v11 = (uint64_t)sub_10072A0B4;
  v11[1] = v8;
  sub_1005174AC(v12);
  v10(v16, 0);

  swift_release();
  swift_beginAccess();
  Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v14 = Strong;
    [Strong presentViewController:v9 animated:1 completion:0];
  }
}

void sub_100727D28()
{
  swift_beginAccess();
  Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = Strong;
    [Strong dismissViewControllerAnimated:1 completion:0];
  }
}

uint64_t sub_100727D8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = sub_1005057FC(&qword_101672BB0);
  __chkstk_darwin(v6 - 8, v7);
  uint64_t v9 = &v19[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v11 = (void *)result;
    swift_beginAccess();
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      uint64_t v13 = Strong;
      *((void *)&v21 + 1) = swift_getObjectType();
      *(void *)&long long v20 = v13;
    }
    else
    {
      long long v20 = 0u;
      long long v21 = 0u;
    }
    uint64_t v14 = type metadata accessor for TaskPriority();
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v9, 1, 1, v14);
    sub_100522E9C((uint64_t)&v20, (uint64_t)v19, &qword_101672BF0);
    type metadata accessor for MainActor();
    id v15 = v11;
    uint64_t v16 = static MainActor.shared.getter();
    uint64_t v17 = (void *)swift_allocObject();
    v17[2] = v16;
    v17[3] = &protocol witness table for MainActor;
    v17[4] = v15;
    sub_10052E248((uint64_t)v19, (uint64_t)(v17 + 5));
    sub_1005912D0((uint64_t)v9, a5, (uint64_t)v17);

    swift_release();
    return sub_100522F00((uint64_t)&v20, &qword_101672BF0);
  }
  return result;
}

void sub_100727F5C(uint64_t a1, uint64_t a2)
{
  uint64_t v76 = type metadata accessor for CharacterSet();
  *(void *)&long long v82 = *(void *)(v76 - 8);
  __chkstk_darwin(v76, v3);
  uint64_t v75 = (char *)v67 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v87 = type metadata accessor for URLComponents();
  uint64_t v5 = *(void *)(v87 - 8);
  __chkstk_darwin(v87, v6);
  uint64_t v8 = (char *)v67 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1005057FC(&qword_101672E90);
  __chkstk_darwin(v9 - 8, v10);
  uint64_t v12 = (char *)v67 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for URL();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13, v15);
  uint64_t v17 = (char *)v67 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v71 = sub_1005057FC(&qword_101677100);
  uint64_t v18 = *(void *)(v71 - 8);
  uint64_t v20 = __chkstk_darwin(v71, v19);
  uint64_t v70 = (uint64_t)v67 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20, v22);
  long long v24 = (char *)v67 - v23;
  swift_beginAccess();
  if (swift_unknownObjectWeakLoadStrong())
  {
    v81 = v17;
    uint64_t v25 = *(void *)(a2 + 24);
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v27 = (*(uint64_t (**)(uint64_t, uint64_t))(v25 + 8))(ObjectType, v25);
    swift_unknownObjectRelease();
    uint64_t v28 = *(void *)(v27 + 16);
    if (v28)
    {
      uint64_t v89 = v13;
      v86 = v12;
      uint64_t v29 = v27;
      uint64_t v30 = v27 + ((*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80));
      v85 = (void (**)(char *, uint64_t))(v5 + 8);
      uint64_t v84 = *(void *)(v18 + 72);
      v83 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48);
      uint64_t v74 = (void (**)(char *, uint64_t, uint64_t))(v14 + 32);
      uint64_t v73 = (void (**)(char *, uint64_t))(v82 + 8);
      uint64_t v72 = (void (**)(char *, uint64_t))(v14 + 8);
      v67[1] = v29;
      swift_bridgeObjectRetain();
      long long v82 = xmmword_10117E810;
      long long v68 = xmmword_10117DF40;
      v69 = v8;
      v88 = v24;
      do
      {
        sub_100522E9C(v30, (uint64_t)v24, &qword_101677100);
        URLComponents.init()();
        URLComponents.scheme.setter();
        URLComponents.host.setter();
        sub_1005057FC(&qword_10167CFC0);
        type metadata accessor for URLQueryItem();
        *(_OWORD *)(swift_allocObject() + 16) = v82;
        uint64_t v90 = UUID.uuidString.getter();
        uint64_t v91 = v31;
        swift_bridgeObjectRetain();
        v32._countAndFlagsBits = 58;
        v32._object = (void *)0xE100000000000000;
        String.append(_:)(v32);
        swift_bridgeObjectRelease();
        uint64_t v33 = v90;
        uint64_t v34 = v91;
        long long v35 = (uint64_t *)&v24[*(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20)];
        uint64_t v36 = *v35;
        long long v37 = (void *)v35[1];
        uint64_t v90 = v33;
        uint64_t v91 = v34;
        swift_bridgeObjectRetain();
        v38._countAndFlagsBits = v36;
        v38._object = v37;
        String.append(_:)(v38);
        swift_bridgeObjectRelease();
        URLQueryItem.init(name:value:)();
        swift_bridgeObjectRelease();
        URLComponents.queryItems.setter();
        uint64_t v39 = (uint64_t)v86;
        URLComponents.url.getter();
        (*v85)(v8, v87);
        uint64_t v40 = v89;
        if ((*v83)(v39, 1, v89) == 1)
        {
          sub_100522F00(v39, &qword_101672E90);
        }
        else
        {
          uint64_t v41 = v81;
          (*v74)(v81, v39, v40);
          uint64_t v90 = URL.absoluteString.getter();
          uint64_t v91 = v42;
          uint64_t v43 = v75;
          static CharacterSet.urlQueryAllowed.getter();
          sub_10052E310();
          uint64_t v44 = StringProtocol.addingPercentEncoding(withAllowedCharacters:)();
          uint64_t v46 = v45;
          (*v73)(v43, v76);
          swift_bridgeObjectRelease();
          if (v46)
          {
            uint64_t v79 = v46;
            uint64_t v80 = v44;
            if (qword_10166F9C8 != -1) {
              swift_once();
            }
            swift_beginAccess();
            id v77 = (id)static OS_os_log.crlDefault;
            sub_1005057FC((uint64_t *)&unk_101672B40);
            uint64_t inited = swift_initStackObject();
            *(_OWORD *)(inited + 16) = v68;
            uint64_t v48 = *(int *)(v71 + 48);
            uint64_t v49 = v70;
            uint64_t v50 = (void *)(v70 + v48);
            uint64_t v51 = &v88[v48];
            v78 = type metadata accessor for CRLBoardIdentifier;
            sub_10072A1E8((uint64_t)v88, v70, type metadata accessor for CRLBoardIdentifier);
            uint64_t v53 = *(void *)v51;
            uint64_t v52 = *((void *)v51 + 1);
            *uint64_t v50 = v53;
            v50[1] = v52;
            *(void *)(inited + 56) = &type metadata for String;
            unint64_t v54 = sub_100528BE4();
            *(void *)(inited + 64) = v54;
            *(void *)(inited + 32) = v53;
            *(void *)(inited + 40) = v52;
            id v77 = v77;
            swift_bridgeObjectRetain();
            uint64_t v90 = UUID.uuidString.getter();
            uint64_t v91 = v55;
            swift_bridgeObjectRetain();
            v56._countAndFlagsBits = 58;
            v56._object = (void *)0xE100000000000000;
            String.append(_:)(v56);
            swift_bridgeObjectRelease();
            uint64_t v57 = *v35;
            uint64_t v58 = (void *)v35[1];
            swift_bridgeObjectRetain();
            v59._countAndFlagsBits = v57;
            v59._object = v58;
            String.append(_:)(v59);
            swift_bridgeObjectRelease();
            uint64_t v60 = v90;
            uint64_t v61 = v91;
            *(void *)(inited + 96) = &type metadata for String;
            *(void *)(inited + 104) = v54;
            *(void *)(inited + 72) = v60;
            *(void *)(inited + 80) = v61;
            *(void *)(inited + 136) = &type metadata for String;
            *(void *)(inited + 144) = v54;
            uint64_t v62 = v79;
            *(void *)(inited + 112) = v80;
            *(void *)(inited + 120) = v62;
            sub_10072A250(v49, v78);
            uint64_t v63 = static os_log_type_t.default.getter();
            id v64 = v77;
            sub_100BAC898((uint64_t)v77, (uint64_t)&_mh_execute_header, v63, (uint64_t)"Selected board title: %@, identifier: %@, deep link URL: %@", 59, 2, inited);
            swift_setDeallocating();
            sub_1005057FC(&qword_101672B50);
            swift_arrayDestroy();

            (*v72)(v81, v89);
            uint64_t v8 = v69;
          }
          else
          {
            sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"crl_qaMenu(for:sender:)", 23, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/App/CRLiOSQAMenu.swift", 80, 2, 153, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
            sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"crl_qaMenu(for:sender:)", 23, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/App/CRLiOSQAMenu.swift", 80, 2, 153);
            (*v72)(v41, v40);
          }
        }
        long long v24 = v88;
        sub_100522F00((uint64_t)v88, &qword_101677100);
        v30 += v84;
        --v28;
      }
      while (v28);
      swift_bridgeObjectRelease_n();
    }
    else
    {
      swift_bridgeObjectRelease();
      if (qword_10166F9C8 != -1) {
        swift_once();
      }
      swift_beginAccess();
      id v65 = (id)static OS_os_log.crlDefault;
      uint64_t v66 = static os_log_type_t.default.getter();
      sub_100BAC898((uint64_t)v65, (uint64_t)&_mh_execute_header, v66, (uint64_t)"Nothing selected.", 17, 2, (uint64_t)_swiftEmptyArrayStorage);
    }
  }
}

uint64_t sub_10072898C()
{
  uint64_t v30 = type metadata accessor for CRLBoardCRDTData(0) - 8;
  __chkstk_darwin(v30, v1);
  uint64_t v3 = (char *)&v27 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for UUID();
  __chkstk_darwin(v4 - 8, v5);
  uint64_t v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1005057FC(&qword_10167CFC8);
  uint64_t v8 = (int *)(sub_1005057FC(&qword_101677100) - 8);
  unint64_t v9 = (*(unsigned __int8 *)(*(void *)v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v8 + 80);
  uint64_t v10 = swift_allocObject();
  uint64_t v29 = v10;
  *(_OWORD *)(v10 + 16) = xmmword_10117E810;
  uint64_t v11 = v10 + v9;
  uint64_t v28 = (void *)(v10 + v9 + v8[14]);
  uint64_t v12 = *(void *)(v0 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_editingCoordinator);
  uint64_t v13 = OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard;
  uint64_t v14 = *(char **)(v12 + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard);
  uint64_t v15 = OBJC_IVAR____TtC8Freeform8CRLBoard_data;
  uint64_t v16 = *(void *)&v14[OBJC_IVAR____TtC8Freeform8CRLBoard_data] + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
  swift_beginAccess();
  sub_10072A1E8(v16, (uint64_t)v3, type metadata accessor for CRLBoardCRDTData);
  uint64_t v27 = v14;
  swift_retain();
  sub_1005057FC(&qword_101674550);
  CRRegister.wrappedValue.getter();
  sub_10072A250((uint64_t)v3, type metadata accessor for CRLBoardCRDTData);
  swift_release();
  uint64_t v17 = (uint64_t *)(*(void *)&v14[v15] + OBJC_IVAR____TtC8Freeform12CRLBoardData_ownerName);
  uint64_t v18 = *v17;
  unint64_t v19 = v17[1];
  swift_bridgeObjectRetain();
  sub_100753370((uint64_t)v7, v18, v19, v11);

  uint64_t v20 = *(char **)(v12 + v13);
  uint64_t v21 = *(void *)&v20[OBJC_IVAR____TtC8Freeform8CRLBoard_data] + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
  swift_beginAccess();
  sub_10072A1E8(v21, (uint64_t)v3, type metadata accessor for CRLBoardCRDTData);
  uint64_t v22 = v20;
  sub_1005057FC(&qword_101674450);
  CRRegister.wrappedValue.getter();
  uint64_t v23 = v31;
  uint64_t v24 = v32;
  sub_10072A250((uint64_t)v3, type metadata accessor for CRLBoardCRDTData);

  long long v26 = v28;
  uint64_t result = v29;
  *uint64_t v28 = v23;
  v26[1] = v24;
  return result;
}

double *sub_100728C78()
{
  uint64_t result = (double *)[v0 view];
  if (result)
  {
    uint64_t v2 = result;
    id v3 = [result window];

    if (v3)
    {
      id v4 = [v3 windowScene];

      if (v4)
      {
        id v5 = [v4 delegate];

        if (v5)
        {
          type metadata accessor for CRLiOSSceneDelegate();
          if (swift_dynamicCastClass())
          {
            if (sub_100A701F0())
            {
              type metadata accessor for CRLiOSFolderGridViewController();
              if (swift_dynamicCast())
              {
                uint64_t v6 = sub_100D6F5C0();
                swift_unknownObjectRelease();

                return v6;
              }
            }
          }
          swift_unknownObjectRelease();
        }
      }
    }
    return _swiftEmptyArrayStorage;
  }
  __break(1u);
  return result;
}

Class sub_100728DC0(void *a1, uint64_t a2)
{
  uint64_t v94 = a2;
  uint64_t v93 = sub_1005057FC(&qword_1016842F0);
  __chkstk_darwin(v93, v3);
  v92 = (char *)&v88 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  UIMenuElementSize v101 = (UIMenuElementSize)_swiftEmptyArrayStorage;
  v99 = &type metadata for CRLFeatureFlags;
  unint64_t v5 = sub_1005396A8();
  unint64_t v100 = v5;
  LOBYTE(v98[0]) = 9;
  char v6 = isFeatureEnabled(_:)();
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v98);
  uint64_t v7 = &selRef_shouldHitTestWithFill;
  if (v6)
  {
    unint64_t v95 = v5;
    type metadata accessor for CRLiOSBoardViewController();
    if (swift_dynamicCastClass())
    {
      sub_10050BF48(0, (unint64_t *)&qword_101672600);
      id v8 = a1;
      NSString v9 = String._bridgeToObjectiveC()();
      id v10 = [self systemImageNamed:v9];

      uint64_t v11 = swift_allocObject();
      swift_unknownObjectWeakInit();
      uint64_t v12 = swift_allocObject();
      swift_unknownObjectWeakInit();
      uint64_t v13 = swift_allocObject();
      *(void *)(v13 + 16) = v11;
      *(void *)(v13 + 24) = v12;
      id v14 = (id)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)((v101 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v101 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
    }
    sub_10050BF48(0, (unint64_t *)&qword_101672600);
    NSString v15 = String._bridgeToObjectiveC()();
    uint64_t v16 = self;
    id v17 = [v16 systemImageNamed:v15];

    swift_allocObject();
    swift_unknownObjectWeakInit();
    id v18 = (id)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)((v101 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v101 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
    NSString v19 = String._bridgeToObjectiveC()();
    id v20 = [v16 systemImageNamed:v19];

    swift_allocObject();
    swift_unknownObjectWeakInit();
    id v21 = (id)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    uint64_t v7 = &selRef_shouldHitTestWithFill;
    if (*(void *)((v101 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v101 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();

    unint64_t v5 = v95;
  }
  v99 = &type metadata for CRLPencilAndPaperFeatureFlags;
  unint64_t v100 = sub_1005C5D40();
  LOBYTE(v98[0]) = 0;
  char v22 = isFeatureEnabled(_:)();
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v98);
  if ((v22 & 1) == 0
    || (v99 = &type metadata for CRLFeatureFlags,
        unint64_t v100 = v5,
        LOBYTE(v98[0]) = 15,
        char v23 = isFeatureEnabled(_:)(),
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v98),
        (v23 & 1) == 0))
  {
    v99 = &type metadata for CRLFeatureFlags;
    unint64_t v100 = v5;
    LOBYTE(v98[0]) = 14;
    char v24 = isFeatureEnabled(_:)();
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v98);
    if ((v24 & 1) == 0) {
      goto LABEL_53;
    }
  }
  type metadata accessor for CRLiOSBoardViewController();
  uint64_t v25 = swift_dynamicCastClass();
  if (!v25)
  {
LABEL_53:
    v99 = &type metadata for CRLFeatureFlags;
    unint64_t v100 = v5;
    LOBYTE(v98[0]) = 10;
    char v66 = isFeatureEnabled(_:)();
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v98);
    if (v66)
    {
      type metadata accessor for CRLiOSBoardViewController();
      if (swift_dynamicCastClass())
      {
        sub_10050BF48(0, (unint64_t *)&qword_101672600);
        uint64_t v67 = a1;
        id v68 = a1;
        NSString v69 = String._bridgeToObjectiveC()();
        id v70 = [self v7[473] v69];

        uint64_t v71 = swift_allocObject();
        swift_unknownObjectWeakInit();
        uint64_t v72 = swift_allocObject();
        swift_unknownObjectWeakInit();
        uint64_t v73 = swift_allocObject();
        *(void *)(v73 + 16) = v71;
        *(void *)(v73 + 24) = v72;
        id v74 = (id)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)((v101 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v101 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();

        a1 = v67;
      }
    }
    swift_getObjectType();
    uint64_t v75 = swift_conformsToProtocol2();
    uint64_t v76 = a1;
    if (v75) {
      uint64_t v77 = v75;
    }
    else {
      uint64_t v77 = 0;
    }
    if (v75) {
      v78 = v76;
    }
    else {
      v78 = 0;
    }
    if (v78)
    {
      sub_10050BF48(0, (unint64_t *)&qword_101672600);
      id v79 = v76;
      NSString v80 = String._bridgeToObjectiveC()();
      id v81 = [self v7[473] v80];

      *(void *)(swift_allocObject() + 24) = v77;
      swift_unknownObjectWeakInit();
      id v82 = (id)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)((v101 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v101 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
    }
    UIMenuElementSize v32 = v101;
    if (!((unint64_t)v101 >> 62))
    {
      if (!*(void *)((v101 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
LABEL_74:
        swift_bridgeObjectRelease();
        return 0;
      }
LABEL_70:
      sub_10050BF48(0, &qword_101673A80);
      NSString v83 = String._bridgeToObjectiveC()();
      uint64_t v84 = (objc_class *)[self v7[473] v83];

      v85._countAndFlagsBits = 16721;
      v85._object = (void *)0xE200000000000000;
      v102.value.super.Class isa = v84;
      v102.is_nil = 0;
      return UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v85, (Swift::String_optional)0, v102, (UIMenuIdentifier_optional)1, 0xFFFFFFFFFFFFFFFFLL, v32, v87).super.super.isa;
    }
LABEL_73:
    swift_bridgeObjectRetain();
    uint64_t v86 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v86) {
      goto LABEL_74;
    }
    goto LABEL_70;
  }
  unint64_t v95 = v5;
  uint64_t v89 = v25;
  long long v26 = *(void **)(v25 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interactiveCanvasController);
  uint64_t v91 = a1;
  id v96 = a1;
  id v90 = v26;
  id v27 = [v26 infosForCurrentSelectionPath];
  uint64_t v7 = (char **)static Set._unconditionallyBridgeFromObjectiveC(_:)();

  int64_t v28 = 0;
  unint64_t v97 = (unint64_t)_swiftEmptyArrayStorage;
  uint64_t v29 = 1 << *((unsigned char *)v7 + 32);
  uint64_t v30 = -1;
  if (v29 < 64) {
    uint64_t v30 = ~(-1 << v29);
  }
  uint64_t v31 = v7 + 7;
  UIMenuElementSize v32 = v30 & (unint64_t)v7[7];
  int64_t v33 = (unint64_t)(v29 + 63) >> 6;
  if (v32) {
    goto LABEL_38;
  }
LABEL_20:
  int64_t v34 = v28 + 1;
  if (__OFADD__(v28, 1))
  {
    __break(1u);
LABEL_72:
    __break(1u);
    goto LABEL_73;
  }
  UIMenuElementSize v32 = (UIMenuElementSize)v96;
  if (v34 < v33)
  {
    unint64_t v35 = (unint64_t)v31[v34];
    ++v28;
    if (v35) {
      goto LABEL_33;
    }
    int64_t v28 = v34 + 1;
    if (v34 + 1 >= v33) {
      goto LABEL_39;
    }
    unint64_t v35 = (unint64_t)v31[v28];
    if (v35) {
      goto LABEL_33;
    }
    int64_t v28 = v34 + 2;
    if (v34 + 2 >= v33) {
      goto LABEL_39;
    }
    unint64_t v35 = (unint64_t)v31[v28];
    if (v35)
    {
LABEL_33:
      UIMenuElementSize v32 = (v35 - 1) & v35;
      for (unint64_t i = __clz(__rbit64(v35)) + (v28 << 6); ; unint64_t i = v40 | (v28 << 6))
      {
        sub_10050BF84((uint64_t)&v7[6][40 * i], (uint64_t)v98);
        v38.Class isa = AnyHashable._bridgeToObjectiveC()().isa;
        sub_10050BFE0((uint64_t)v98);
        type metadata accessor for CRLFreehandDrawingItem();
        if (swift_dynamicCastClass())
        {
          uint64_t v39 = v38.isa;
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
          if (*(void *)((v97 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v97 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          }
          specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized Array._endMutation()();

          if (v32 == UIMenuElementSizeSmall) {
            goto LABEL_20;
          }
        }
        else
        {

          if (v32 == UIMenuElementSizeSmall) {
            goto LABEL_20;
          }
        }
LABEL_38:
        unint64_t v40 = __clz(__rbit64(v32));
        v32 &= v32 - 1;
      }
    }
    int64_t v36 = v34 + 3;
    if (v36 < v33)
    {
      unint64_t v35 = (unint64_t)v31[v36];
      if (v35)
      {
        int64_t v28 = v36;
        goto LABEL_33;
      }
      while (1)
      {
        int64_t v28 = v36 + 1;
        if (__OFADD__(v36, 1)) {
          goto LABEL_72;
        }
        if (v28 >= v33) {
          break;
        }
        unint64_t v35 = (unint64_t)v31[v28];
        ++v36;
        if (v35) {
          goto LABEL_33;
        }
      }
    }
  }
LABEL_39:
  swift_release();
  v98[0] = _swiftEmptyArrayStorage;
  uint64_t v93 = swift_allocBox();
  uint64_t v42 = v41;
  uint64_t v43 = type metadata accessor for PKDrawing();
  uint64_t v44 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v43 - 8) + 56);
  v44(v42, 1, 1, v43);
  unint64_t v45 = v97;
  if (v97 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v46 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v46 = *(void *)((v97 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (v46 >= 1)
  {
    sub_1006E2010(v45);
    uint64_t v7 = &selRef_shouldHitTestWithFill;
LABEL_50:
    sub_10050BF48(0, (unint64_t *)&qword_101672600);
    NSString v59 = String._bridgeToObjectiveC()();
    id v60 = [self v7[473] v59];

    uint64_t v61 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v62 = (void *)v32;
    uint64_t v63 = v98[0];
    id v64 = (void *)swift_allocObject();
    v64[2] = v63;
    v64[3] = v93;
    v64[4] = v61;
    swift_retain();
    id v65 = (id)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)((v101 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v101 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
    swift_release();

    a1 = v91;
    unint64_t v5 = v95;
    goto LABEL_53;
  }
  id v47 = [v90 layerHost];
  if (!v47) {
    goto LABEL_48;
  }
  uint64_t v48 = v47;
  if (([v47 respondsToSelector:"asiOSCVC"] & 1) == 0)
  {
    swift_unknownObjectRelease();
LABEL_48:
    swift_bridgeObjectRelease();
    goto LABEL_49;
  }
  id v49 = [v48 asiOSCVC];
  swift_unknownObjectRelease();
  Class result = (Class)[v49 smartSelectionManager];
  if (result)
  {
    Class v51 = result;
    swift_bridgeObjectRelease();
    id v52 = [(objc_class *)v51 drawingForHandwritingDebugging];

    uint64_t v53 = (uint64_t)v92;
    static PKDrawing._unconditionallyBridgeFromObjectiveC(_:)();

    v44(v53, 0, 1, v43);
    sub_100729E44(v53, v42);
LABEL_49:
    unint64_t v54 = *(void **)(*(void *)(*(void *)(v89
                                           + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_editingCoordinator)
                               + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard)
                   + OBJC_IVAR____TtC8Freeform8CRLBoard_rootContainer);
    uint64_t v55 = self;
    id v56 = v54;
    id v57 = [v55 allDrawingItemsDescendedFromContainer:v56];
    type metadata accessor for CRLFreehandDrawingItem();
    unint64_t v58 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    sub_1006E2010(v58);
    uint64_t v7 = &selRef_shouldHitTestWithFill;
    UIMenuElementSize v32 = (UIMenuElementSize)v96;
    goto LABEL_50;
  }
  __break(1u);
  return result;
}

uint64_t sub_100729D3C()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 32, 7);
}

void sub_100729D74(uint64_t a1)
{
  sub_100727F5C(a1, v1);
}

uint64_t sub_100729D80(uint64_t a1)
{
  return sub_100727D8C(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), (uint64_t)&unk_1015117C0, (uint64_t)&unk_10167CFB8);
}

uint64_t sub_100729DB8()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100729DF0()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

void sub_100729E38()
{
}

uint64_t sub_100729E44(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1005057FC(&qword_1016842F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

void sub_100729EAC()
{
}

void sub_100729EB4()
{
}

uint64_t sub_100729EC0(uint64_t a1)
{
  return sub_100727D8C(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), (uint64_t)&unk_101511748, (uint64_t)&unk_10167CFB0);
}

uint64_t sub_100729EFC(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_100528488;
  return sub_100E62E88(a1, v4, v5, v6, (uint64_t)(v1 + 5));
}

Class sub_100729FC0(void *a1)
{
  sub_10050BF48(0, (unint64_t *)&qword_101674470);
  NSString v2 = String._bridgeToObjectiveC()();
  uint64_t v3 = (objc_class *)[self systemImageNamed:v2];

  v4.value._countAndFlagsBits = 16721;
  v4.value._object = (void *)0xE200000000000000;
  v9.value.super.Class isa = v3;
  v9.is_nil = 0;
  v10.value.super.super.Class isa = 0;
  v5.super.super.Class isa = UIBarButtonItem.init(title:image:primaryAction:menu:)(v4, v9, v10, v11).super.super.isa;
  uint64_t v6 = v5.super.super.isa;
  Class v7 = sub_100728DC0(a1, (uint64_t)v5.super.super.isa);

  if (v7)
  {
    [(objc_class *)v6 setMenu:v7];
    uint64_t v6 = v7;
  }
  else
  {
    v5.super.super.Class isa = 0;
  }

  return v5.super.super.isa;
}

void sub_10072A0B4()
{
}

uint64_t sub_10072A0D4()
{
  swift_unknownObjectRelease();

  if (*(void *)(v0 + 64)) {
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v0 + 40);
  }

  return _swift_deallocObject(v0, 72, 7);
}

uint64_t sub_10072A124(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  Class v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *Class v7 = v2;
  v7[1] = sub_100528D08;
  return sub_100E64EF4(a1, v4, v5, v6, (uint64_t)(v1 + 5));
}

uint64_t sub_10072A1E8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_10072A250(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t type metadata accessor for CRLQuickInspectorElementProvider()
{
  return self;
}

uint64_t sub_10072A2E4()
{
  return sub_10072B128(&qword_10167D080, (void (*)(uint64_t))type metadata accessor for CRLiOSBoardEntity);
}

uint64_t type metadata accessor for CRLiOSBoardEntity()
{
  uint64_t result = qword_10167D198;
  if (!qword_10167D198) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10072A378()
{
  return sub_10072B128(&qword_10167D088, (void (*)(uint64_t))type metadata accessor for CRLiOSBoardEntity);
}

uint64_t sub_10072A3C0()
{
  return sub_10072B128(&qword_10167D090, (void (*)(uint64_t))type metadata accessor for CRLiOSBoardEntity);
}

unint64_t sub_10072A40C()
{
  unint64_t result = qword_10167D098;
  if (!qword_10167D098)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10167D098);
  }
  return result;
}

uint64_t sub_10072A460()
{
  return sub_10072B128(&qword_10167D0A0, (void (*)(uint64_t))type metadata accessor for CRLBoardIdentifier);
}

uint64_t sub_10072A4A8()
{
  sub_1005057FC(&qword_101673B50);
  AnyHashable.init<A>(_:)();
  type metadata accessor for AppDependencyManager();
  static AppDependencyManager.shared.getter();
  qword_10171A510 = AppDependency.__allocating_init(key:manager:)();
  qword_10171A530 = type metadata accessor for CRLBoardEntityQueryPerformer();
  unk_10171A538 = &off_10152F878;
  sub_1005767BC(qword_10171A518);
  if (qword_10166FB50 != -1) {
    swift_once();
  }
  swift_beginAccess();
  id v0 = (id)static OS_os_log.appIntents;
  return Logger.init(_:)();
}

uint64_t sub_10072A5C0@<X0>(uint64_t *a1@<X8>)
{
  sub_1005057FC(&qword_101673B50);
  AnyHashable.init<A>(_:)();
  type metadata accessor for AppDependencyManager();
  static AppDependencyManager.shared.getter();
  *a1 = AppDependency.__allocating_init(key:manager:)();
  a1[4] = type metadata accessor for CRLBoardEntityQueryPerformer();
  a1[5] = (uint64_t)&off_10152F878;
  sub_1005767BC(a1 + 1);
  if (qword_10166FB50 != -1) {
    swift_once();
  }
  swift_beginAccess();
  id v2 = (id)static OS_os_log.appIntents;
  return Logger.init(_:)();
}

uint64_t sub_10072A6DC()
{
  uint64_t v0 = sub_1005057FC(&qword_101673B40);
  __chkstk_darwin(v0 - 8, v1);
  uint64_t v3 = (char *)v17 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[0] = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v4 = *(void *)(v17[0] - 8);
  __chkstk_darwin(v17[0], v5);
  Class v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for Locale();
  __chkstk_darwin(v8 - 8, v9);
  uint64_t v10 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v10 - 8, v11);
  uint64_t v12 = type metadata accessor for LocalizedStringResource();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12, v14);
  uint64_t v15 = type metadata accessor for TypeDisplayRepresentation();
  sub_100568B28(v15, qword_10171A540);
  sub_100556B74(v15, (uint64_t)qword_10171A540);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  (*(void (**)(char *, void, void))(v4 + 104))(v7, enum case for LocalizedStringResource.BundleDescription.main(_:), v17[0]);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v3, 1, 1, v12);
  return TypeDisplayRepresentation.init(name:numericFormat:)();
}

uint64_t sub_10072A9C4@<X0>(uint64_t a1@<X8>)
{
  if (qword_10166EED8 != -1) {
    swift_once();
  }

  return sub_10072E008((uint64_t)&qword_10171A510, a1);
}

uint64_t sub_10072AA30()
{
  return sub_10072B128(&qword_10167D0A8, (void (*)(uint64_t))type metadata accessor for CRLiOSBoardEntity);
}

uint64_t sub_10072AA78()
{
  return sub_10072B128(&qword_10167D0B0, (void (*)(uint64_t))type metadata accessor for CRLiOSBoardEntity);
}

uint64_t sub_10072AAC0()
{
  return sub_10072B128(&qword_10167D0B8, (void (*)(uint64_t))type metadata accessor for CRLiOSBoardEntity);
}

uint64_t sub_10072AB08()
{
  return sub_10072B128(&qword_10167D0C0, (void (*)(uint64_t))type metadata accessor for CRLiOSBoardEntity);
}

uint64_t sub_10072AB50()
{
  return sub_10072B128(&qword_10167D0C8, (void (*)(uint64_t))type metadata accessor for CRLBoardIdentifier);
}

uint64_t sub_10072AB98@<X0>(uint64_t a1@<X8>)
{
  return sub_1005689B8(v1, a1, type metadata accessor for CRLBoardIdentifier);
}

uint64_t sub_10072ABD0@<X0>(uint64_t a1@<X8>)
{
  if (qword_10166EEE0 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for TypeDisplayRepresentation();
  uint64_t v3 = sub_100556B74(v2, (uint64_t)qword_10171A540);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);

  return v4(a1, v3, v2);
}

unint64_t sub_10072AC7C()
{
  unint64_t result = qword_10167D0D0;
  if (!qword_10167D0D0)
  {
    sub_100522D34(&qword_10167D0D8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10167D0D0);
  }
  return result;
}

uint64_t sub_10072ACD8(uint64_t a1)
{
  uint64_t v2 = sub_10072B128(qword_10167D0F8, (void (*)(uint64_t))type metadata accessor for CRLiOSBoardEntity);

  return static AppEntity.defaultResolverSpecification.getter(a1, v2);
}

uint64_t sub_10072AD54()
{
  return sub_10072B128(&qword_10167D0E0, (void (*)(uint64_t))type metadata accessor for CRLiOSBoardEntity);
}

uint64_t sub_10072AD9C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  v22[1] = a2;
  uint64_t v4 = sub_1005057FC(&qword_10167D138);
  __chkstk_darwin(v4 - 8, v5);
  Class v7 = (char *)v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1005057FC(&qword_101673B40);
  __chkstk_darwin(v8 - 8, v9);
  uint64_t v11 = (char *)v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for LocalizedStringResource();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12, v14);
  uint64_t v16 = (char *)v22 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17, v18);
  id v20 = (char *)v22 - v19;
  swift_bridgeObjectRetain();
  LocalizedStringResource.init(stringLiteral:)();
  (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v16, v20, v12);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v11, 1, 1, v12);
  sub_10072DFA0(v2 + *(int *)(a1 + 24), (uint64_t)v7);
  DisplayRepresentation.init(title:subtitle:image:)();
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v20, v12);
}

uint64_t sub_10072AFB4(uint64_t a1)
{
  uint64_t v2 = sub_10072B128(&qword_10167D0C0, (void (*)(uint64_t))type metadata accessor for CRLiOSBoardEntity);

  return InstanceDisplayRepresentable.localizedStringResource.getter(a1, v2);
}

unint64_t sub_10072B034()
{
  unint64_t result = qword_10167D0E8;
  if (!qword_10167D0E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10167D0E8);
  }
  return result;
}

unint64_t sub_10072B08C()
{
  unint64_t result = qword_10167D0F0;
  if (!qword_10167D0F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10167D0F0);
  }
  return result;
}

uint64_t sub_10072B0E0()
{
  return sub_10072B128(qword_10167D0F8, (void (*)(uint64_t))type metadata accessor for CRLiOSBoardEntity);
}

uint64_t sub_10072B128(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10072B170(uint64_t a1)
{
  v2[9] = a1;
  v2[10] = v1;
  sub_1005057FC(&qword_10167D138);
  v2[11] = swift_task_alloc();
  uint64_t v3 = type metadata accessor for CRLiOSBoardEntity();
  v2[12] = v3;
  v2[13] = *(void *)(v3 - 8);
  v2[14] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for CRLBoardEntity();
  v2[15] = v4;
  v2[16] = *(void *)(v4 - 8);
  v2[17] = swift_task_alloc();
  return _swift_task_switch(sub_10072B2BC, 0, 0);
}

uint64_t sub_10072B2BC()
{
  sub_10050F848((void *)(v0[10] + 8), *(void *)(v0[10] + 32));
  AppDependency.wrappedValue.getter();
  v0[5] = &type metadata for CRLBoardLibraryProvidingDependency;
  v0[6] = &off_10152F800;
  uint64_t v1 = (void *)swift_task_alloc();
  v0[18] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_10072B398;
  uint64_t v2 = v0[9];
  return sub_100E33408(v2, (uint64_t)(v0 + 2));
}

uint64_t sub_10072B398(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 152) = a1;
  *(void *)(v3 + 160) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v4 = sub_10072B61C;
  }
  else
  {
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v3 + 16);
    uint64_t v4 = sub_10072B4B4;
  }
  return _swift_task_switch(v4, 0, 0);
}

uint64_t sub_10072B4B4()
{
  uint64_t v1 = *(void *)(v0 + 152);
  uint64_t v2 = *(void *)(v1 + 16);
  *(void *)(v0 + 168) = v2;
  if (v2)
  {
    uint64_t v4 = *(void *)(v0 + 128);
    uint64_t v3 = *(void *)(v0 + 136);
    int v5 = *(_DWORD *)(v4 + 80);
    *(_DWORD *)(v0 + 208) = v5;
    uint64_t v6 = *(void *)(v4 + 72);
    *(void *)(v0 + 184) = 0;
    *(void *)(v0 + 192) = _swiftEmptyArrayStorage;
    *(void *)(v0 + 176) = v6;
    sub_1005689B8(v1 + ((v5 + 32) & ~(unint64_t)v5), v3, (uint64_t (*)(void))type metadata accessor for CRLBoardEntity);
    Class v7 = (void *)swift_task_alloc();
    *(void *)(v0 + 200) = v7;
    *Class v7 = v0;
    v7[1] = sub_10072B6AC;
    uint64_t v8 = *(void *)(v0 + 136);
    v7[14] = *(void *)(v0 + 88);
    v7[15] = v8;
    return _swift_task_switch(sub_10072C2F0, 0, 0);
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v9 = *(uint64_t (**)(double *))(v0 + 8);
    return v9(_swiftEmptyArrayStorage);
  }
}

uint64_t sub_10072B61C()
{
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v0 + 16);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10072B6AC()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_10072B7A8, 0, 0);
}

uint64_t sub_10072B7A8()
{
  uint64_t v1 = *(void *)(v0 + 112);
  uint64_t v2 = *(void *)(v0 + 88);
  uint64_t v3 = *(void *)(v0 + 96);
  sub_1005689B8(*(void *)(v0 + 136), v1, type metadata accessor for CRLBoardIdentifier);
  EntityProperty.wrappedValue.getter();
  uint64_t v4 = *(void *)(v0 + 64);
  int v5 = (void *)(v1 + *(int *)(v3 + 20));
  *int v5 = *(void *)(v0 + 56);
  v5[1] = v4;
  sub_10072DED4(v2, v1 + *(int *)(v3 + 24));
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  unint64_t v7 = *(void *)(v0 + 192);
  if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
    unint64_t v7 = sub_100F64048(0, *(void *)(v7 + 16) + 1, 1, *(void *)(v0 + 192));
  }
  unint64_t v9 = *(void *)(v7 + 16);
  unint64_t v8 = *(void *)(v7 + 24);
  if (v9 >= v8 >> 1) {
    unint64_t v7 = sub_100F64048(v8 > 1, v9 + 1, 1, v7);
  }
  uint64_t v10 = *(void *)(v0 + 168);
  uint64_t v11 = *(void *)(v0 + 136);
  uint64_t v13 = *(void *)(v0 + 104);
  uint64_t v12 = *(void *)(v0 + 112);
  uint64_t v14 = *(void *)(v0 + 184) + 1;
  *(void *)(v7 + 16) = v9 + 1;
  sub_10072DF3C(v12, v7+ ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80))+ *(void *)(v13 + 72) * v9);
  sub_1005F6324(v11);
  if (v14 == v10)
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v15 = *(uint64_t (**)(unint64_t))(v0 + 8);
    return v15(v7);
  }
  else
  {
    uint64_t v17 = *(void *)(v0 + 176);
    uint64_t v18 = *(void *)(v0 + 184) + 1;
    *(void *)(v0 + 184) = v18;
    *(void *)(v0 + 192) = v7;
    sub_1005689B8(*(void *)(v0 + 152)+ ((*(unsigned __int8 *)(v0 + 208) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 208))+ v17 * v18, *(void *)(v0 + 136), (uint64_t (*)(void))type metadata accessor for CRLBoardEntity);
    uint64_t v19 = (void *)swift_task_alloc();
    *(void *)(v0 + 200) = v19;
    void *v19 = v0;
    v19[1] = sub_10072B6AC;
    uint64_t v20 = *(void *)(v0 + 136);
    v19[14] = *(void *)(v0 + 88);
    v19[15] = v20;
    return _swift_task_switch(sub_10072C2F0, 0, 0);
  }
}

uint64_t sub_10072BA24()
{
  v1[9] = v0;
  sub_1005057FC(&qword_10167D138);
  v1[10] = swift_task_alloc();
  uint64_t v2 = type metadata accessor for CRLiOSBoardEntity();
  v1[11] = v2;
  v1[12] = *(void *)(v2 - 8);
  v1[13] = swift_task_alloc();
  uint64_t v3 = type metadata accessor for CRLBoardEntity();
  v1[14] = v3;
  v1[15] = *(void *)(v3 - 8);
  v1[16] = swift_task_alloc();
  return _swift_task_switch(sub_10072BB70, 0, 0);
}

uint64_t sub_10072BB70()
{
  sub_10050F848((void *)(v0[9] + 8), *(void *)(v0[9] + 32));
  AppDependency.wrappedValue.getter();
  v0[5] = &type metadata for CRLBoardLibraryProvidingDependency;
  v0[6] = &off_10152F800;
  uint64_t v1 = (void *)swift_task_alloc();
  v0[17] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_10072BC44;
  return sub_100E33DC8((uint64_t)(v0 + 2));
}

uint64_t sub_10072BC44(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 144) = a1;
  *(void *)(v3 + 152) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v4 = sub_10072BEC8;
  }
  else
  {
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v3 + 16);
    uint64_t v4 = sub_10072BD60;
  }
  return _swift_task_switch(v4, 0, 0);
}

uint64_t sub_10072BD60()
{
  uint64_t v1 = *(void *)(v0 + 144);
  uint64_t v2 = *(void *)(v1 + 16);
  *(void *)(v0 + 160) = v2;
  if (v2)
  {
    uint64_t v4 = *(void *)(v0 + 120);
    uint64_t v3 = *(void *)(v0 + 128);
    int v5 = *(_DWORD *)(v4 + 80);
    *(_DWORD *)(v0 + 200) = v5;
    uint64_t v6 = *(void *)(v4 + 72);
    *(void *)(v0 + 176) = 0;
    *(void *)(v0 + 184) = _swiftEmptyArrayStorage;
    *(void *)(v0 + 168) = v6;
    sub_1005689B8(v1 + ((v5 + 32) & ~(unint64_t)v5), v3, (uint64_t (*)(void))type metadata accessor for CRLBoardEntity);
    unint64_t v7 = (void *)swift_task_alloc();
    *(void *)(v0 + 192) = v7;
    *unint64_t v7 = v0;
    v7[1] = sub_10072BF58;
    uint64_t v8 = *(void *)(v0 + 128);
    v7[14] = *(void *)(v0 + 80);
    v7[15] = v8;
    return _swift_task_switch(sub_10072C2F0, 0, 0);
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    unint64_t v9 = *(uint64_t (**)(double *))(v0 + 8);
    return v9(_swiftEmptyArrayStorage);
  }
}

uint64_t sub_10072BEC8()
{
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v0 + 16);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10072BF58()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_10072C054, 0, 0);
}

uint64_t sub_10072C054()
{
  uint64_t v1 = *(void *)(v0 + 104);
  uint64_t v2 = *(void *)(v0 + 80);
  uint64_t v3 = *(void *)(v0 + 88);
  sub_1005689B8(*(void *)(v0 + 128), v1, type metadata accessor for CRLBoardIdentifier);
  EntityProperty.wrappedValue.getter();
  uint64_t v4 = *(void *)(v0 + 64);
  int v5 = (void *)(v1 + *(int *)(v3 + 20));
  *int v5 = *(void *)(v0 + 56);
  v5[1] = v4;
  sub_10072DED4(v2, v1 + *(int *)(v3 + 24));
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  unint64_t v7 = *(void *)(v0 + 184);
  if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
    unint64_t v7 = sub_100F64048(0, *(void *)(v7 + 16) + 1, 1, *(void *)(v0 + 184));
  }
  unint64_t v9 = *(void *)(v7 + 16);
  unint64_t v8 = *(void *)(v7 + 24);
  if (v9 >= v8 >> 1) {
    unint64_t v7 = sub_100F64048(v8 > 1, v9 + 1, 1, v7);
  }
  uint64_t v10 = *(void *)(v0 + 160);
  uint64_t v11 = *(void *)(v0 + 128);
  uint64_t v13 = *(void *)(v0 + 96);
  uint64_t v12 = *(void *)(v0 + 104);
  uint64_t v14 = *(void *)(v0 + 176) + 1;
  *(void *)(v7 + 16) = v9 + 1;
  sub_10072DF3C(v12, v7+ ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80))+ *(void *)(v13 + 72) * v9);
  sub_1005F6324(v11);
  if (v14 == v10)
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v15 = *(uint64_t (**)(unint64_t))(v0 + 8);
    return v15(v7);
  }
  else
  {
    uint64_t v17 = *(void *)(v0 + 168);
    uint64_t v18 = *(void *)(v0 + 176) + 1;
    *(void *)(v0 + 176) = v18;
    *(void *)(v0 + 184) = v7;
    sub_1005689B8(*(void *)(v0 + 144)+ ((*(unsigned __int8 *)(v0 + 200) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 200))+ v17 * v18, *(void *)(v0 + 128), (uint64_t (*)(void))type metadata accessor for CRLBoardEntity);
    uint64_t v19 = (void *)swift_task_alloc();
    *(void *)(v0 + 192) = v19;
    void *v19 = v0;
    v19[1] = sub_10072BF58;
    uint64_t v20 = *(void *)(v0 + 128);
    v19[14] = *(void *)(v0 + 80);
    v19[15] = v20;
    return _swift_task_switch(sub_10072C2F0, 0, 0);
  }
}

uint64_t sub_10072C2D0(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 112) = a1;
  *(void *)(v2 + 120) = a2;
  return _swift_task_switch(sub_10072C2F0, 0, 0);
}

uint64_t sub_10072C2F0()
{
  *(void *)(v0 + 128) = type metadata accessor for MainActor();
  *(void *)(v0 + 136) = static MainActor.shared.getter();
  uint64_t v2 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_10072C388, v2, v1);
}

uint64_t sub_10072C388()
{
  swift_release();
  id v1 = [self sharedApplication];
  id v2 = [v1 delegate];
  *(void *)(v0 + 144) = v2;

  if (v2)
  {
    type metadata accessor for CRLiOSAppDelegate();
    *(void *)(v0 + 152) = swift_dynamicCastClassUnconditional();
    uint64_t v3 = sub_10072C460;
    uint64_t v4 = 0;
    uint64_t v5 = 0;
  }
  else
  {
    __break(1u);
  }
  return _swift_task_switch(v3, v4, v5);
}

uint64_t sub_10072C460()
{
  *(void *)(v0 + 160) = static MainActor.shared.getter();
  uint64_t v2 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_10072C4EC, v2, v1);
}

uint64_t sub_10072C4EC()
{
  uint64_t v1 = *(void *)(v0 + 152);
  swift_release();
  uint64_t v2 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform17CRLiOSAppDelegate_boardPreviewImageCache);
  *(void *)(v0 + 168) = v2;
  id v3 = v2;
  swift_unknownObjectRelease();
  return _swift_task_switch(sub_10072C578, 0, 0);
}

uint64_t sub_10072C578()
{
  if (v0[21])
  {
    uint64_t v7 = (uint64_t (*)(uint64_t, double))((char *)&dword_101677498 + dword_101677498);
    uint64_t v1 = (void *)swift_task_alloc();
    v0[22] = v1;
    *uint64_t v1 = v0;
    v1[1] = sub_10072C6A0;
    uint64_t v2 = v0[15];
    return v7(v2, 2.0);
  }
  else
  {
    uint64_t v4 = v0[14];
    uint64_t v5 = type metadata accessor for DisplayRepresentation.Image();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v4, 1, 1, v5);
    uint64_t v6 = (uint64_t (*)(void))v0[1];
    return v6();
  }
}

uint64_t sub_10072C6A0(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 184) = a1;
  *(void *)(v3 + 192) = v1;
  swift_task_dealloc();
  if (v1) {
    uint64_t v4 = sub_10072C8D0;
  }
  else {
    uint64_t v4 = sub_10072C7B4;
  }
  return _swift_task_switch(v4, 0, 0);
}

void sub_10072C7B4()
{
  uint64_t v1 = (UIImage *)[*(id *)(v0 + 184) UIImage];
  uint64_t v2 = UIImagePNGRepresentation(v1);

  if (v2)
  {
    uint64_t v3 = *(void **)(v0 + 184);
    uint64_t v4 = *(void **)(v0 + 168);
    uint64_t v5 = *(void *)(v0 + 112);
    static Data._unconditionallyBridgeFromObjectiveC(_:)();

    DisplayRepresentation.Image.init(data:isTemplate:)();
    uint64_t v6 = type metadata accessor for DisplayRepresentation.Image();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v5, 0, 1, v6);
    uint64_t v7 = *(void (**)(void))(v0 + 8);
    v7();
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_10072C8D0()
{
  if (qword_10166FB38 != -1) {
    swift_once();
  }
  uint64_t v1 = (void *)v0[21];
  uint64_t v2 = v0[14];
  uint64_t v3 = v0[15];
  swift_beginAccess();
  uint64_t v4 = (void *)static OS_os_log.sceneManagement;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117E810;
  id v6 = v4;
  uint64_t v17 = UUID.uuidString.getter();
  uint64_t v18 = v7;
  swift_bridgeObjectRetain();
  v8._countAndFlagsBits = 58;
  v8._object = (void *)0xE100000000000000;
  String.append(_:)(v8);
  swift_bridgeObjectRelease();
  unint64_t v9 = (uint64_t *)(v3 + *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20));
  uint64_t v10 = *v9;
  uint64_t v11 = (void *)v9[1];
  swift_bridgeObjectRetain();
  v12._countAndFlagsBits = v10;
  v12._object = v11;
  String.append(_:)(v12);
  swift_bridgeObjectRelease();
  *(void *)(inited + 56) = &type metadata for String;
  *(void *)(inited + 64) = sub_100528BE4();
  *(void *)(inited + 32) = v17;
  *(void *)(inited + 40) = v18;
  uint64_t v13 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v6, (uint64_t)&_mh_execute_header, v13, (uint64_t)"CRLiOSBoardEntity: failed to get thumbnail for board: %@", 56, 2, inited);
  swift_errorRelease();

  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  uint64_t v14 = type metadata accessor for DisplayRepresentation.Image();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v2, 1, 1, v14);
  uint64_t v15 = (uint64_t (*)(void))v0[1];
  return v15();
}

uint64_t sub_10072CB08(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_10072CB9C;
  return sub_10072B170(a1);
}

uint64_t sub_10072CB9C(uint64_t a1)
{
  uint64_t v7 = *v2;
  uint64_t v4 = swift_task_dealloc();
  uint64_t v5 = *(uint64_t (**)(uint64_t))(v7 + 8);
  if (!v1) {
    uint64_t v4 = a1;
  }
  return v5(v4);
}

uint64_t sub_10072CC9C(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 24) = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_1006D883C;
  return sub_10072BA24();
}

unint64_t sub_10072CD30()
{
  unint64_t result = qword_10167D110;
  if (!qword_10167D110)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10167D110);
  }
  return result;
}

unint64_t sub_10072CD88()
{
  unint64_t result = qword_10167D118;
  if (!qword_10167D118)
  {
    sub_100522D34(qword_10167D120);
    sub_10072B128(&qword_10167D0B8, (void (*)(uint64_t))type metadata accessor for CRLiOSBoardEntity);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10167D118);
  }
  return result;
}

uint64_t sub_10072CE2C(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  unint64_t v6 = sub_10072A40C();
  *uint64_t v5 = v2;
  v5[1] = sub_100528488;
  return EntityQuery.results()(a1, a2, v6);
}

uint64_t destroy for CRLiOSBoardEntity.BoardQuery(uint64_t a1)
{
  uint64_t v1 = a1 + 8;
  swift_release();

  return _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v1);
}

uint64_t initializeWithCopy for CRLiOSBoardEntity.BoardQuery(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v3 = a2 + 8;
  long long v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 32) = v4;
  uint64_t v5 = v4;
  unint64_t v6 = **(void (***)(uint64_t, uint64_t, uint64_t))(v4 - 8);
  swift_retain();
  v6(a1 + 8, v3, v5);
  return a1;
}

void *assignWithCopy for CRLiOSBoardEntity.BoardQuery(void *a1, void *a2)
{
  uint64_t v3 = a2 + 1;
  *a1 = *a2;
  swift_retain();
  swift_release();
  sub_10054BB2C(a1 + 1, v3);
  return a1;
}

uint64_t assignWithTake for CRLiOSBoardEntity.BoardQuery(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(a1 + 8);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  return a1;
}

uint64_t getEnumTagSinglePayload for SelectionData(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 48)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SelectionData(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)unint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 48) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLiOSBoardEntity.BoardQuery()
{
  return &type metadata for CRLiOSBoardEntity.BoardQuery;
}

uint64_t *sub_10072D0F8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v23 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v23 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for UUID();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20);
    unint64_t v9 = (uint64_t *)((char *)a1 + v8);
    uint64_t v10 = (uint64_t *)((char *)a2 + v8);
    uint64_t v11 = v10[1];
    *unint64_t v9 = *v10;
    v9[1] = v11;
    uint64_t v12 = *(int *)(a3 + 20);
    uint64_t v13 = *(int *)(a3 + 24);
    uint64_t v14 = (uint64_t *)((char *)a1 + v12);
    uint64_t v15 = (uint64_t *)((char *)a2 + v12);
    uint64_t v16 = v15[1];
    *uint64_t v14 = *v15;
    v14[1] = v16;
    uint64_t v17 = (char *)a1 + v13;
    uint64_t v18 = (char *)a2 + v13;
    uint64_t v19 = type metadata accessor for DisplayRepresentation.Image();
    uint64_t v20 = *(void *)(v19 - 8);
    uint64_t v21 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v21(v18, 1, v19))
    {
      uint64_t v22 = sub_1005057FC(&qword_10167D138);
      memcpy(v17, v18, *(void *)(*(void *)(v22 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v17, v18, v19);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
    }
  }
  return a1;
}

uint64_t sub_10072D2E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  type metadata accessor for CRLBoardIdentifierStorage(0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v5 = a1 + *(int *)(a2 + 24);
  uint64_t v6 = type metadata accessor for DisplayRepresentation.Image();
  uint64_t v9 = *(void *)(v6 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v5, 1, v6);
  if (!result)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(v9 + 8);
    return v8(v5, v6);
  }
  return result;
}

uint64_t sub_10072D40C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  uint64_t v10 = v9[1];
  *uint64_t v8 = *v9;
  v8[1] = v10;
  uint64_t v11 = *(int *)(a3 + 20);
  uint64_t v12 = *(int *)(a3 + 24);
  uint64_t v13 = (void *)(a1 + v11);
  uint64_t v14 = (void *)(a2 + v11);
  uint64_t v15 = v14[1];
  *uint64_t v13 = *v14;
  v13[1] = v15;
  uint64_t v16 = (void *)(a1 + v12);
  uint64_t v17 = (const void *)(a2 + v12);
  uint64_t v18 = type metadata accessor for DisplayRepresentation.Image();
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v19 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v20(v17, 1, v18))
  {
    uint64_t v21 = sub_1005057FC(&qword_10167D138);
    memcpy(v16, v17, *(void *)(*(void *)(v21 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v19 + 16))(v16, v17, v18);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
  }
  return a1;
}

uint64_t sub_10072D5A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  *uint64_t v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v10 = *(int *)(a3 + 20);
  uint64_t v11 = (void *)(a1 + v10);
  uint64_t v12 = (void *)(a2 + v10);
  *uint64_t v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v13 = *(int *)(a3 + 24);
  uint64_t v14 = (void *)(a1 + v13);
  uint64_t v15 = (void *)(a2 + v13);
  uint64_t v16 = type metadata accessor for DisplayRepresentation.Image();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v17 + 48);
  int v19 = v18(v14, 1, v16);
  int v20 = v18(v15, 1, v16);
  if (!v19)
  {
    if (!v20)
    {
      (*(void (**)(void *, void *, uint64_t))(v17 + 24))(v14, v15, v16);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v17 + 8))(v14, v16);
    goto LABEL_6;
  }
  if (v20)
  {
LABEL_6:
    uint64_t v21 = sub_1005057FC(&qword_10167D138);
    memcpy(v14, v15, *(void *)(*(void *)(v21 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v17 + 16))(v14, v15, v16);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
  return a1;
}

uint64_t sub_10072D7BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = type metadata accessor for CRLBoardIdentifierStorage(0);
  *(_OWORD *)(a1 + *(int *)(v7 + 20)) = *(_OWORD *)(a2 + *(int *)(v7 + 20));
  uint64_t v8 = *(int *)(a3 + 24);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (const void *)(a2 + v8);
  uint64_t v11 = type metadata accessor for DisplayRepresentation.Image();
  uint64_t v12 = *(void *)(v11 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
  {
    uint64_t v13 = sub_1005057FC(&qword_10167D138);
    memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v12 + 32))(v9, v10, v11);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  return a1;
}

uint64_t sub_10072D928(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (uint64_t *)(a2 + v7);
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  *uint64_t v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  uint64_t v12 = *(int *)(a3 + 20);
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (uint64_t *)(a2 + v12);
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  *uint64_t v13 = v16;
  v13[1] = v15;
  swift_bridgeObjectRelease();
  uint64_t v17 = *(int *)(a3 + 24);
  uint64_t v18 = (void *)(a1 + v17);
  int v19 = (void *)(a2 + v17);
  uint64_t v20 = type metadata accessor for DisplayRepresentation.Image();
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v22 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v21 + 48);
  int v23 = v22(v18, 1, v20);
  int v24 = v22(v19, 1, v20);
  if (!v23)
  {
    if (!v24)
    {
      (*(void (**)(void *, void *, uint64_t))(v21 + 40))(v18, v19, v20);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v21 + 8))(v18, v20);
    goto LABEL_6;
  }
  if (v24)
  {
LABEL_6:
    uint64_t v25 = sub_1005057FC(&qword_10167D138);
    memcpy(v18, v19, *(void *)(*(void *)(v25 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v21 + 32))(v18, v19, v20);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
  return a1;
}

uint64_t sub_10072DB1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10072DB30);
}

uint64_t sub_10072DB30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for CRLBoardIdentifier(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else if (a2 == 0x7FFFFFFF)
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
  else
  {
    uint64_t v11 = sub_1005057FC(&qword_10167D138);
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a3 + 24);
    return v12(v14, a2, v13);
  }
}

uint64_t sub_10072DC64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10072DC78);
}

uint64_t sub_10072DC78(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for CRLBoardIdentifier(0);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else if (a3 == 0x7FFFFFFF)
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v11 = sub_1005057FC(&qword_10167D138);
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a4 + 24);
    return v12(v14, a2, a2, v13);
  }
  return result;
}

void sub_10072DDAC()
{
  type metadata accessor for CRLBoardIdentifierStorage(319);
  if (v0 <= 0x3F)
  {
    sub_10072DE7C();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_10072DE7C()
{
  if (!qword_10167D1A8)
  {
    type metadata accessor for DisplayRepresentation.Image();
    unint64_t v0 = type metadata accessor for Optional();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_10167D1A8);
    }
  }
}

uint64_t sub_10072DED4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1005057FC(&qword_10167D138);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10072DF3C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CRLiOSBoardEntity();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10072DFA0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1005057FC(&qword_10167D138);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10072E008(uint64_t a1, uint64_t a2)
{
  *(void *)a2 = *(void *)a1;
  uint64_t v3 = a2 + 8;
  uint64_t v4 = a1 + 8;
  long long v5 = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(a2 + 32) = v5;
  uint64_t v6 = v5;
  uint64_t v7 = **(void (***)(uint64_t, uint64_t, uint64_t))(v5 - 8);
  swift_retain();
  v7(v3, v4, v6);
  return a2;
}

uint64_t sub_10072E0AC()
{
  return swift_release();
}

uint64_t sub_10072E170(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for CRLUSDZAssetDataStruct(0);
  __chkstk_darwin(v4 - 8, v5);
  uint64_t v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8, v9);
  uint64_t v11 = (char *)&v26 - v10;
  __chkstk_darwin(v12, v13);
  uint64_t v15 = (char *)&v26 - v14;
  if (!*(void *)(v1 + OBJC_IVAR____TtC8Freeform12CRLBoardItem_transactionContext)
    && (uint64_t v16 = (void *)swift_unknownObjectWeakLoadStrong()) != 0
    && (uint64_t v17 = v16, v18 = (*(uint64_t (**)(void))((swift_isaMask & *v16) + 0x2F0))(), v17, (v18 & 1) != 0))
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"_guardTransaction()", 19, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLTransactions/CRLTransactable.swift", 91, 2, 76, (uint64_t)"Attempting to mutate a CRLTransactable without a CRLTransactableContext set", 75, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_100586FD4((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Attempting to mutate a CRLTransactable without a CRLTransactableContext set");
    sub_1005871AC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"_guardTransaction()", 19, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLTransactions/CRLTransactable.swift", 91, 2, 76);
    SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v24, v25);
    uint64_t result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
  else
  {
    sub_1007337EC(a1, (uint64_t)v15, type metadata accessor for CRLUSDZAssetDataStruct);
    sub_1007337EC((uint64_t)v15, (uint64_t)v11, type metadata accessor for CRLUSDZAssetDataStruct);
    swift_beginAccess();
    sub_1007337EC((uint64_t)v11, (uint64_t)v7, type metadata accessor for CRLUSDZAssetDataStruct);
    swift_retain();
    sub_1005057FC((uint64_t *)&unk_10167D2A0);
    CRRegister.wrappedValue.setter();
    sub_100733290((uint64_t)v11, type metadata accessor for CRLUSDZAssetDataStruct);
    swift_endAccess();
    sub_100733290((uint64_t)v15, type metadata accessor for CRLUSDZAssetDataStruct);
    swift_release();
    uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
    if (!Strong
      || (uint64_t v20 = Strong,
          char v21 = (*(uint64_t (**)(void))((swift_isaMask & *Strong) + 0x2F0))(),
          v20,
          (v21 & 1) == 0))
    {
      uint64_t v22 = *(void **)(v2 + OBJC_IVAR____TtC8Freeform11CRLUSDZItem__posterAssetPayload);
      *(void *)(v2 + OBJC_IVAR____TtC8Freeform11CRLUSDZItem__posterAssetPayload) = 0;
    }
    return sub_100733290(a1, type metadata accessor for CRLUSDZAssetDataStruct);
  }
  return result;
}

id sub_10072E57C()
{
  uint64_t v1 = type metadata accessor for CRLUSDZAssetDataStruct(0);
  uint64_t v2 = v1 - 8;
  __chkstk_darwin(v1, v3);
  uint64_t v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1005057FC((uint64_t *)&unk_10167D2B0);
  __chkstk_darwin(v6 - 8, v7);
  uint64_t v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for CRLAssetData();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10, v12);
  uint64_t v14 = (char *)&v17 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  swift_retain();
  sub_1005057FC((uint64_t *)&unk_10167D2A0);
  CRRegister.wrappedValue.getter();
  swift_endAccess();
  swift_release();
  sub_100522E9C((uint64_t)&v5[*(int *)(v2 + 28)], (uint64_t)v9, (uint64_t *)&unk_10167D2B0);
  sub_100733290((uint64_t)v5, type metadata accessor for CRLUSDZAssetDataStruct);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
  {
    sub_100522F00((uint64_t)v9, (uint64_t *)&unk_10167D2B0);
    return 0;
  }
  else
  {
    sub_10073373C((uint64_t)v9, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
    id v15 = sub_100B04160(0.5, (uint64_t)v14, v0);
    sub_100733290((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
  }
  return v15;
}

void *sub_10072E910()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for CRLUSDZAssetDataStruct(0);
  __chkstk_darwin(v2, v3);
  uint64_t v5 = (char *)&v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1005057FC((uint64_t *)&unk_10167D2B0);
  __chkstk_darwin(v6 - 8, v7);
  uint64_t v9 = (char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for CRLAssetData();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10, v12);
  uint64_t v14 = (char *)&v37 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v15 = *(void **)&v0[OBJC_IVAR____TtC8Freeform11CRLUSDZItem__posterAssetPayload];
  uint64_t v16 = v15;
  if (!v15)
  {
    uint64_t v41 = OBJC_IVAR____TtC8Freeform11CRLUSDZItem__posterAssetPayload;
    swift_beginAccess();
    swift_retain();
    sub_1005057FC((uint64_t *)&unk_10167D2A0);
    CRRegister.wrappedValue.getter();
    swift_endAccess();
    swift_release();
    sub_100522E9C((uint64_t)&v5[*(int *)(v2 + 20)], (uint64_t)v9, (uint64_t *)&unk_10167D2B0);
    sub_100733290((uint64_t)v5, type metadata accessor for CRLUSDZAssetDataStruct);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
    {
      sub_100522F00((uint64_t)v9, (uint64_t *)&unk_10167D2B0);
      uint64_t v16 = 0;
    }
    else
    {
      sub_10073373C((uint64_t)v9, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
      uint64_t v17 = (char *)[v1 store];
      uint64_t v18 = *(void *)&v17[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetManagerLock];
      os_unfair_lock_lock(*(os_unfair_lock_t *)(v18 + 16));
      uint64_t v19 = OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetManager;
      uint64_t v20 = *(void **)&v17[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetManager];
      if (v20)
      {
        id v21 = *(id *)&v17[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetManager];
      }
      else
      {
        Class v40 = (Class)type metadata accessor for CRLAssetManager();
        uint64_t v22 = (char *)objc_allocWithZone(v40);
        uint64_t v39 = &v22[OBJC_IVAR____TtC8Freeform15CRLAssetManager_store];
        swift_unknownObjectWeakInit();
        uint64_t v23 = OBJC_IVAR____TtC8Freeform15CRLAssetManager_lock;
        type metadata accessor for CRLUnfairLock();
        uint64_t v24 = swift_allocObject();
        NSObject v38 = v17;
        Swift::String v25 = v22;
        uint64_t v26 = (_DWORD *)swift_slowAlloc();
        *uint64_t v26 = 0;
        *(void *)(v24 + 16) = v26;
        atomic_thread_fence(memory_order_acq_rel);
        *(void *)&v22[v23] = v24;
        *(void *)&v25[OBJC_IVAR____TtC8Freeform15CRLAssetManager_assets] = _swiftEmptyDictionarySingleton;
        uint64_t v27 = OBJC_IVAR____TtC8Freeform15CRLAssetManager_owners;
        *(void *)&v25[v27] = [self mapTableWithKeyOptions:517 valueOptions:0];
        *(void *)&v25[OBJC_IVAR____TtC8Freeform15CRLAssetManager_garbageCollectionWorkItem] = 0;
        int64_t v28 = v38;
        swift_unknownObjectWeakAssign();

        v42.receiver = v25;
        v42.super_class = v40;
        id v29 = [super init];

        uint64_t v30 = *(void **)&v17[v19];
        *(void *)&v17[v19] = v29;
        id v21 = v29;

        uint64_t v20 = 0;
      }
      uint64_t v31 = *(os_unfair_lock_s **)(v18 + 16);
      id v32 = v20;
      os_unfair_lock_unlock(v31);

      uint64_t v16 = (void *)sub_100F453C8(v14, v1, v21);
      int64_t v33 = *(void **)&v1[v41];
      *(void *)&v1[v41] = v16;
      id v34 = v16;

      sub_100733290((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
    }
  }
  id v35 = v15;
  return v16;
}

id sub_10072ED64(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4)
{
  sub_10072F00C((uint64_t)v55);
  sub_10051B3EC((uint64_t)v55, (uint64_t)&v56, (uint64_t *)&unk_101676320);
  if (v57) {
    return 0;
  }
  CGFloat x = v56.origin.x;
  CGFloat y = v56.origin.y;
  CGFloat width = v56.size.width;
  CGFloat height = v56.size.height;
  v58.origin.CGFloat x = 0.0;
  v58.origin.CGFloat y = 0.0;
  v58.size.CGFloat width = 0.0;
  v58.size.CGFloat height = 0.0;
  if (CGRectEqualToRect(v56, v58)) {
    return 0;
  }
  uint64_t v13 = *(uint64_t (**)(uint64_t))(**(void **)(v4 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData)
                                          + 288);
  uint64_t v14 = swift_retain();
  id v15 = (void *)v13(v14);
  swift_release();
  [v15 boundsBeforeRotation];
  CGFloat v49 = x;
  CGFloat v50 = v16;
  double v18 = v17;
  CGFloat v51 = v17;
  CGFloat v52 = a2;
  CGFloat v53 = a3;
  double v20 = v19;
  double v22 = v21;
  double v23 = v16;

  sub_100066AC4(v18, v20, v22, v23, v49, y, width, height);
  CGFloat v25 = v24;
  CGFloat v27 = v26;
  double v29 = v28;
  CGFloat v31 = v30;
  sub_1000672D8(0, v28, v30, a1, v52, v53, a4);
  CGFloat v33 = v32 / v29;
  double v34 = sub_100065738(v25, v27, v29, v31);
  sub_10006736C(v51, v20, v22, v50, v34, v35, v33);
  double v37 = v36;
  double v39 = v38;
  double v41 = v40;
  double v43 = v42;
  double v44 = sub_100065738(a1, v52, v53, a4);
  double v46 = sub_100064680(v44, v45, v34);
  double v47 = sub_100064698(v37, v39, v46);
  return [objc_allocWithZone((Class)CRLCanvasInfoGeometry) initWithPosition:v47 size:v48];
}

uint64_t sub_10072F00C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = type metadata accessor for CRLUSDZAssetDataStruct(0);
  uint64_t v3 = v2 - 8;
  __chkstk_darwin(v2, v4);
  uint64_t v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  swift_retain();
  sub_1005057FC((uint64_t *)&unk_10167D2A0);
  CRRegister.wrappedValue.getter();
  swift_endAccess();
  swift_release();
  uint64_t v7 = (float32x2_t *)&v6[*(int *)(v3 + 36)];
  float32x2_t v8 = *v7;
  float32x2_t v9 = v7[1];
  __int8 v10 = v7[2].i8[0];
  uint64_t result = sub_100733290((uint64_t)v6, type metadata accessor for CRLUSDZAssetDataStruct);
  float64x2_t v12 = 0uLL;
  float64x2_t v13 = 0uLL;
  if ((v10 & 1) == 0)
  {
    float64x2_t v12 = vcvtq_f64_f32(v8);
    float64x2_t v13 = vcvtq_f64_f32(v9);
  }
  *(float64x2_t *)a1 = v12;
  *(float64x2_t *)(a1 + 16) = v13;
  *(unsigned char *)(a1 + 32) = v10;
  return result;
}

id sub_10072F1DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v59 = a4;
  uint64_t v54 = a2;
  uint64_t v5 = type metadata accessor for CRLBoardItemParentAffinity();
  __chkstk_darwin(v5 - 8, v6);
  float32x2_t v8 = (char *)&v51 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1005057FC((uint64_t *)&unk_101683E10);
  __chkstk_darwin(v9, v10);
  float64x2_t v12 = (char *)&v51 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1005057FC((uint64_t *)&unk_101674520);
  __chkstk_darwin(v13 - 8, v14);
  uint64_t v55 = (uint64_t)&v51 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16, v17);
  CGFloat v53 = (char *)&v51 - v18;
  __chkstk_darwin(v19, v20);
  uint64_t v57 = (uint64_t)&v51 - v21;
  __chkstk_darwin(v22, v23);
  uint64_t v58 = (uint64_t)&v51 - v24;
  __chkstk_darwin(v25, v26);
  uint64_t v52 = (uint64_t)&v51 - v27;
  __chkstk_darwin(v28, v29);
  CGFloat v31 = (char *)&v51 - v30;
  uint64_t v56 = v4;
  swift_retain();
  double v32 = sub_100F92B68(1);
  swift_release();
  uint64_t v33 = (uint64_t)v32 + *(void *)(*v32 + 632);
  swift_beginAccess();
  sub_100522E9C(v33, (uint64_t)v12, (uint64_t *)&unk_101683E10);
  swift_retain();
  uint64_t v34 = sub_1005057FC((uint64_t *)&unk_101683E30);
  CRRegister.wrappedValue.getter();
  sub_100522E9C((uint64_t)v8, (uint64_t)v31, (uint64_t *)&unk_101674520);
  sub_100733290((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for CRLBoardItemParentAffinity);
  sub_100522F00((uint64_t)v12, (uint64_t *)&unk_101683E10);
  swift_release();
  id v35 = v32;
  uint64_t v36 = (uint64_t)v62;
  sub_100F92ED8(v59);
  if (v36)
  {
    sub_100522F00((uint64_t)v31, (uint64_t *)&unk_101674520);
    swift_release();
  }
  else
  {
    uint64_t v37 = v58;
    sub_100522E9C(v54, v58, (uint64_t *)&unk_101674520);
    uint64_t v62 = v31;
    sub_100522E9C((uint64_t)v31, v57, (uint64_t *)&unk_101674520);
    uint64_t v38 = type metadata accessor for UUID();
    uint64_t v39 = *(void *)(v38 - 8);
    int v40 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v39 + 48))(v37, 1, v38);
    uint64_t v41 = v52;
    uint64_t v42 = (uint64_t)v53;
    uint64_t v59 = v34;
    if (v40 == 1)
    {
      sub_10051B3EC(v57, v52, (uint64_t *)&unk_101674520);
      swift_retain();
      sub_100522F00(v58, (uint64_t *)&unk_101674520);
    }
    else
    {
      swift_retain();
      sub_100522F00(v57, (uint64_t *)&unk_101674520);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v39 + 32))(v41, v58, v38);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v39 + 56))(v41, 0, 1, v38);
    }
    sub_100522E9C(v41, v42, (uint64_t *)&unk_101674520);
    swift_beginAccess();
    uint64_t v43 = v55;
    sub_100522E9C(v42, v55, (uint64_t *)&unk_101674520);
    double v44 = (void (*)(unsigned char *, void))CRRegister.wrappedValue.modify();
    sub_10068EA54(v43, v45);
    v44(v61, 0);
    sub_100522F00(v42, (uint64_t *)&unk_101674520);
    swift_endAccess();
    sub_100522F00(v41, (uint64_t *)&unk_101674520);
    swift_release();
    double v46 = *(void **)(v56 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_store);
    double v47 = (char *)objc_allocWithZone((Class)type metadata accessor for CRLUSDZItem());
    *(void *)&v47[OBJC_IVAR____TtC8Freeform11CRLUSDZItem__posterAssetPayload] = 0;
    *(void *)&v47[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_store] = v46;
    *(void *)&v47[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData] = v32;
    double v48 = (objc_class *)type metadata accessor for CRLBoardItemBase(0);
    v60.receiver = v47;
    v60.super_class = v48;
    id v49 = v46;
    id v35 = [super init];
    sub_100522F00((uint64_t)v62, (uint64_t *)&unk_101674520);
  }
  return v35;
}

id sub_10072F7F4()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for CRLUSDZItemCRDTData(0);
  __chkstk_darwin(v2 - 8, v3);
  uint64_t v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1005057FC((uint64_t *)&unk_101683E10);
  __chkstk_darwin(v6 - 8, v7);
  uint64_t v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (**(_UNKNOWN *****)(v0 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData) == &off_1016A38A8) {
    uint64_t v10 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
  }
  else {
    uint64_t v10 = 0;
  }
  uint64_t v11 = (uint64_t)v10 + *(void *)(*v10 + 632);
  swift_beginAccess();
  sub_100522E9C(v11, (uint64_t)v9, (uint64_t *)&unk_101683E10);
  uint64_t v12 = (uint64_t)v10 + qword_10171CD20;
  swift_beginAccess();
  sub_1007337EC(v12, (uint64_t)v5, type metadata accessor for CRLUSDZItemCRDTData);
  uint64_t v13 = v10[4];
  uint64_t v14 = v10[5];
  uint64_t v17 = v10 + 2;
  uint64_t v16 = v10[2];
  uint64_t v15 = v17[1];
  type metadata accessor for CRLUSDZItemData(0);
  uint64_t v18 = swift_allocObject();
  sub_10073373C((uint64_t)v5, v18 + qword_10171CD20, type metadata accessor for CRLUSDZItemCRDTData);
  sub_10051B3EC((uint64_t)v9, v18 + *(void *)(*(void *)v18 + 632), (uint64_t *)&unk_101683E10);
  uint64_t v19 = sub_10068B398(v15, v13, v14, v16);
  uint64_t v20 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_store);
  uint64_t v21 = (char *)objc_allocWithZone((Class)type metadata accessor for CRLUSDZItem());
  *(void *)&v21[OBJC_IVAR____TtC8Freeform11CRLUSDZItem__posterAssetPayload] = 0;
  *(void *)&v21[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_store] = v20;
  *(void *)&v21[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData] = v19;
  uint64_t v22 = (objc_class *)type metadata accessor for CRLBoardItemBase(0);
  v25.receiver = v21;
  v25.super_class = v22;
  id v23 = v20;
  return [super init];
}

uint64_t sub_10072FA84(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for CRLUSDZItemCRDTData(0);
  __chkstk_darwin(v3, v4);
  uint64_t v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7, v8);
  uint64_t v10 = (char *)&v28 - v9;
  uint64_t v11 = sub_1005057FC(&qword_10167D2D8);
  __chkstk_darwin(v11 - 8, v12);
  uint64_t v14 = (char *)&v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for CRLUSDZItem();
  uint64_t v15 = swift_dynamicCastClass();
  if (v15)
  {
    uint64_t v16 = v15;
    uint64_t v30 = a1;
    swift_unknownObjectRetain();
    uint64_t v29 = sub_100CF6354(v16, v1);
    uint64_t v17 = *(_UNKNOWN *****)(v1 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
    if (*v17 != &off_1016A38A8) {
      uint64_t v17 = 0;
    }
    uint64_t v18 = (uint64_t)v17 + qword_10171CD20;
    swift_beginAccess();
    sub_1007337EC(v18, (uint64_t)v10, type metadata accessor for CRLUSDZItemCRDTData);
    uint64_t v19 = *(_UNKNOWN *****)(v16 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
    if (*v19 != &off_1016A38A8) {
      uint64_t v19 = 0;
    }
    uint64_t v20 = (uint64_t)v19 + qword_10171CD20;
    swift_beginAccess();
    sub_1007337EC(v20, (uint64_t)v6, type metadata accessor for CRLUSDZItemCRDTData);
    sub_1007337A4(&qword_10167D2F0, (void (*)(uint64_t))type metadata accessor for CRLUSDZItemCRDTData);
    CRStruct_1.actionUndoingDifference(from:)();
    sub_100733290((uint64_t)v6, type metadata accessor for CRLUSDZItemCRDTData);
    sub_100733290((uint64_t)v10, type metadata accessor for CRLUSDZItemCRDTData);
    uint64_t v21 = sub_1005057FC((uint64_t *)&unk_10167D2E0);
    uint64_t v22 = *(void *)(v21 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v14, 1, v21) == 1)
    {
      sub_100522F00((uint64_t)v14, &qword_10167D2D8);
      memset(v31, 0, sizeof(v31));
      uint64_t v32 = 1;
    }
    else
    {
      uint64_t v32 = v21;
      id v23 = sub_1005767BC(v31);
      (*(void (**)(uint64_t *, char *, uint64_t))(v22 + 32))(v23, v14, v21);
    }
    uint64_t v24 = v29;
    swift_beginAccess();
    sub_10057D560((uint64_t)v31, 8);
    swift_endAccess();
    swift_unknownObjectRelease();
    return v24;
  }
  else
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"createUndoingMutations(fromSnapshot:)", 37, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLUSDZItem.swift", 82, 2, 149, (uint64_t)"Tried to generate undo from mismatched type", 43, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_100586FD4((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Tried to generate undo from mismatched type");
    sub_1005871AC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"createUndoingMutations(fromSnapshot:)", 37, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLUSDZItem.swift", 82, 2, 149);
    SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v26, v27);
    uint64_t result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
  return result;
}

uint64_t sub_10072FEFC()
{
  uint64_t v1 = sub_1005057FC(&qword_10167D2F8);
  uint64_t v52 = *(void *)(v1 - 8);
  __chkstk_darwin(v1, v2);
  uint64_t v4 = (char *)&v48 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5, v6);
  uint64_t v8 = (char *)&v48 - v7;
  uint64_t v51 = type metadata accessor for CRLUSDZItemCRDTData(0);
  __chkstk_darwin(v51, v9);
  uint64_t v11 = (char *)&v48 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12, v13);
  uint64_t v15 = (char *)&v48 - v14;
  uint64_t v16 = sub_1005057FC(&qword_10167D300);
  __chkstk_darwin(v16 - 8, v17);
  uint64_t v19 = (char *)&v48 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20, v21);
  id v23 = (char *)&v48 - v22;
  type metadata accessor for CRLUSDZItem();
  uint64_t v24 = swift_dynamicCastClass();
  if (v24)
  {
    uint64_t v25 = v24;
    uint64_t v53 = v1;
    uint64_t v54 = v23;
    id v49 = v4;
    CGFloat v50 = v8;
    type metadata accessor for CRLBoardItemBase(0);
    if (swift_dynamicCastClass())
    {
      CKRecordID v26 = *(_UNKNOWN *****)(v0 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
      if (*v26 != &off_1016A38A8) {
        CKRecordID v26 = 0;
      }
      uint64_t v27 = (uint64_t)v26 + qword_10171CD20;
      swift_beginAccess();
      sub_1007337EC(v27, (uint64_t)v15, type metadata accessor for CRLUSDZItemCRDTData);
      uint64_t v28 = *(_UNKNOWN *****)(v25 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
      if (*v28 != &off_1016A38A8) {
        uint64_t v28 = 0;
      }
      uint64_t v29 = (uint64_t)v28 + qword_10171CD20;
      swift_beginAccess();
      sub_1007337EC(v29, (uint64_t)v11, type metadata accessor for CRLUSDZItemCRDTData);
      sub_1007337A4(&qword_10167D308, (void (*)(uint64_t))type metadata accessor for CRLUSDZItemCRDTData);
      swift_unknownObjectRetain();
      uint64_t v30 = (uint64_t)v54;
      CRType.observableDifference(from:)();
      sub_100733290((uint64_t)v11, type metadata accessor for CRLUSDZItemCRDTData);
      sub_100733290((uint64_t)v15, type metadata accessor for CRLUSDZItemCRDTData);
      sub_100522E9C(v30, (uint64_t)v19, &qword_10167D300);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v52 + 48))(v19, 1, v53) == 1)
      {
        CGFloat v31 = &qword_10167D300;
        uint64_t v32 = (uint64_t)v19;
      }
      else
      {
        uint64_t v33 = (uint64_t)v50;
        sub_10051B3EC((uint64_t)v19, (uint64_t)v50, &qword_10167D310);
        uint64_t v34 = (uint64_t)v49;
        sub_100522E9C(v33, (uint64_t)v49, &qword_10167D310);
        uint64_t v35 = type metadata accessor for CRValueObservableDifference();
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 48))(v34, 1, v35) != 1)
        {
          sub_100522F00(v34, &qword_10167D310);
          uint64_t v36 = sub_100F61B70(0, 1, 1, _swiftEmptyArrayStorage);
          unint64_t v40 = *((void *)v36 + 2);
          unint64_t v39 = *((void *)v36 + 3);
          if (v40 >= v39 >> 1) {
            uint64_t v36 = sub_100F61B70((double *)(v39 > 1), v40 + 1, 1, v36);
          }
          *((void *)v36 + 2) = v40 + 1;
          uint64_t v41 = &v36[2 * v40];
          v41[4] = 3.95615552e252;
          v41[5] = -5.98008217e197;
          sub_100522F00(v33, &qword_10167D2F8);
          if (*((void *)v36 + 2)) {
            goto LABEL_12;
          }
          goto LABEL_16;
        }
        sub_100522F00(v33, &qword_10167D2F8);
        CGFloat v31 = &qword_10167D310;
        uint64_t v32 = v34;
      }
      sub_100522F00(v32, v31);
      uint64_t v36 = _swiftEmptyArrayStorage;
      if (*(void *)&_swiftEmptyArrayStorage[2])
      {
LABEL_12:
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v55 = _swiftEmptyDictionarySingleton;
        sub_100972448((uint64_t)v36, 8, isUniquelyReferenced_nonNull_native);
        uint64_t v38 = v55;
        swift_unknownObjectRelease();
        swift_bridgeObjectRelease();
LABEL_17:
        sub_100522F00(v30, &qword_10167D300);
        return (uint64_t)v38;
      }
LABEL_16:
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
      uint64_t v38 = _swiftEmptyDictionarySingleton;
      goto LABEL_17;
    }
    swift_unknownObjectRetain();
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"createSpecificDataObservableDeltas(fromSnapshot:)", 49, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLBoardItem.swift", 83, 2, 835, (uint64_t)"Tried to create observable deltas from mismatched type", 54, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_100586FD4((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Tried to create observable deltas from mismatched type");
    uint64_t v43 = "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLBoardItem.swift";
    uint64_t v44 = 83;
    uint64_t v45 = 835;
  }
  else
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"createSpecificDataObservableDeltas(fromSnapshot:)", 49, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLUSDZItem.swift", 82, 2, 161, (uint64_t)"Tried to create observable deltas from mismatched type", 54, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_100586FD4((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Tried to create observable deltas from mismatched type");
    uint64_t v43 = "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLUSDZItem.swift";
    uint64_t v44 = 82;
    uint64_t v45 = 161;
  }
  sub_1005871AC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"createSpecificDataObservableDeltas(fromSnapshot:)", 49, 2, (uint64_t)v43, v44, 2, v45);
  SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v46, v47);
  uint64_t result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1007305F0(uint64_t a1)
{
  uint64_t v3 = sub_1005057FC(&qword_10167D2D8);
  __chkstk_darwin(v3 - 8, v4);
  uint64_t v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7, v8);
  uint64_t v10 = (char *)&v25 - v9;
  uint64_t v11 = sub_1005057FC((uint64_t *)&unk_10167D2E0);
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11, v13);
  uint64_t v15 = (char *)&v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = sub_10088B69C(a1);
  if (!v1)
  {
    uint64_t v17 = (uint64_t *)(a1 + OBJC_IVAR____TtC8Freeform31CRLTransactableUndoingMutations_values);
    swift_beginAccess();
    uint64_t v18 = *v17;
    if (*(void *)(v18 + 16))
    {
      swift_bridgeObjectRetain();
      unint64_t v19 = sub_100956360(8);
      if (v20)
      {
        sub_100522E9C(*(void *)(v18 + 56) + 32 * v19, (uint64_t)&v26, &qword_101672BF0);
      }
      else
      {
        uint64_t v26 = 0;
        uint64_t v27 = 0;
        uint64_t v28 = 0;
        uint64_t v29 = 1;
      }
      swift_bridgeObjectRelease();
      if (v29 != 1)
      {
        sub_10051B3EC((uint64_t)&v26, (uint64_t)v30, &qword_101672BF0);
        if (v31)
        {
          int v23 = swift_dynamicCast();
          uint64_t v24 = *(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56);
          v24(v10, v23 ^ 1u, 1, v11);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) != 1)
          {
            (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v15, v10, v11);
            (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v6, v15, v11);
            v24(v6, 0, 1, v11);
            swift_beginAccess();
            type metadata accessor for CRLUSDZItemCRDTData(0);
            sub_1007337A4(&qword_10167D2F0, (void (*)(uint64_t))type metadata accessor for CRLUSDZItemCRDTData);
            swift_retain();
            CRStruct_1.apply(_:)();
            swift_endAccess();
            swift_release();
            sub_100522F00((uint64_t)v6, &qword_10167D2D8);
            return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v15, v11);
          }
          return sub_100522F00((uint64_t)v10, &qword_10167D2D8);
        }
        uint64_t v21 = &qword_101672BF0;
        uint64_t v22 = (uint64_t *)v30;
LABEL_9:
        sub_100522F00((uint64_t)v22, v21);
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v10, 1, 1, v11);
        return sub_100522F00((uint64_t)v10, &qword_10167D2D8);
      }
    }
    else
    {
      uint64_t v26 = 0;
      uint64_t v27 = 0;
      uint64_t v28 = 0;
      uint64_t v29 = 1;
    }
    uint64_t v21 = (uint64_t *)&unk_1016725E0;
    uint64_t v22 = &v26;
    goto LABEL_9;
  }
  return result;
}

uint64_t sub_100730A0C(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  uint64_t v120 = sub_1005057FC(&qword_10167D2D0);
  __chkstk_darwin(v120, v8);
  uint64_t v119 = (uint64_t)&v109 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1005057FC((uint64_t *)&unk_10167D2B0);
  __chkstk_darwin(v10 - 8, v11);
  uint64_t v112 = (uint64_t)&v109 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13, v14);
  uint64_t v16 = (char *)&v109 - v15;
  __chkstk_darwin(v17, v18);
  uint64_t v122 = (uint64_t)&v109 - v19;
  v134 = (int *)type metadata accessor for CRLUSDZAssetDataStruct(0);
  __chkstk_darwin(v134, v20);
  v118 = (char *)&v109 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22, v23);
  v117 = (char *)&v109 - v24;
  __chkstk_darwin(v25, v26);
  v131 = (char *)&v109 - v27;
  uint64_t v28 = type metadata accessor for CRLAssetData();
  uint64_t v29 = *(void *)(v28 - 8);
  __chkstk_darwin(v28, v30);
  uint64_t v110 = (uint64_t)&v109 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v32, v33);
  uint64_t v116 = (uint64_t)&v109 - v34;
  __chkstk_darwin(v35, v36);
  uint64_t v115 = (uint64_t)&v109 - v37;
  uint64_t v126 = v38;
  v123 = v16;
  switch(a3)
  {
    case 8:
      uint64_t result = swift_bridgeObjectRelease();
      goto LABEL_4;
    default:
      char v40 = _stringCompareWithSmolCheck(_:_:expecting:)();
      uint64_t result = swift_bridgeObjectRelease();
      if (v40)
      {
LABEL_4:
        uint64_t v41 = *(void *)(a2 + 16);
        if (!v41) {
          return result;
        }
        uint64_t v114 = OBJC_IVAR____TtC8Freeform11CRLUSDZItem__posterAssetPayload;
        uint64_t v127 = a1 + OBJC_IVAR____TtC8Freeform14CRLPropertyMap_data;
        v113 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v29 + 48);
        swift_bridgeObjectRetain();
        uint64_t v109 = a2;
        uint64_t v42 = (void *)(a2 + 40);
        long long v111 = xmmword_10117E810;
        uint64_t v43 = v130;
        uint64_t v121 = a4;
        while (1)
        {
          uint64_t v45 = *(v42 - 1);
          uint64_t v44 = *v42;
          BOOL v46 = v45 == 0x7461447465737361 && v44 == 0xE900000000000061;
          if (!v46 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
          {
            sub_1005057FC((uint64_t *)&unk_101672B40);
            uint64_t inited = swift_initStackObject();
            *(_OWORD *)(inited + 16) = v111;
            *(void *)(inited + 56) = &type metadata for String;
            *(void *)(inited + 64) = sub_100528BE4();
            *(void *)(inited + 32) = v45;
            *(void *)(inited + 40) = v44;
            swift_bridgeObjectRetain();
            sub_1005598CC(inited, (uint64_t)"populatePropertyMap(_:observedDifferenceLabels:withPropertyKey:snapshot:)", 73, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLUSDZItem.swift", 82, 2, 219);
            swift_setDeallocating();
            sub_1005057FC(&qword_101672B50);
            uint64_t v43 = v130;
            swift_arrayDestroy();
            goto LABEL_7;
          }
          uint64_t v125 = v41;
          type metadata accessor for CRLUSDZItem();
          uint64_t v47 = swift_dynamicCastClass();
          if (!v47)
          {
            sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"populatePropertyMap(_:observedDifferenceLabels:withPropertyKey:snapshot:)", 73, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLUSDZItem.swift", 82, 2, 197, (uint64_t)"Snapshot should be a USDZ item.", 31, 2u, (uint64_t)_swiftEmptyArrayStorage);
            sub_100586FD4((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Snapshot should be a USDZ item.");
            sub_1005871AC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"populatePropertyMap(_:observedDifferenceLabels:withPropertyKey:snapshot:)", 73, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLUSDZItem.swift", 82, 2, 197);
            SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v107, v108);
            _assertionFailure(_:_:file:line:flags:)();
            __break(1u);
            JUMPOUT(0x100731F78);
          }
          uint64_t v48 = v47;
          id v49 = *(void **)((char *)v43 + v114);
          *(void *)((char *)v43 + v114) = 0;
          swift_unknownObjectRetain();

          uint64_t v132 = v48;
          v129.n128_u64[0] = OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData;
          swift_beginAccess();
          swift_retain();
          uint64_t v50 = sub_1005057FC((uint64_t *)&unk_10167D2A0);
          uint64_t v51 = (uint64_t)v131;
          CRRegister.wrappedValue.getter();
          swift_endAccess();
          swift_release();
          uint64_t v52 = v115;
          sub_1007337EC(v51, v115, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
          sub_100733290(v51, type metadata accessor for CRLUSDZAssetDataStruct);
          uint64_t v133 = OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData;
          swift_beginAccess();
          swift_retain();
          v128.n128_u64[0] = v50;
          CRRegister.wrappedValue.getter();
          swift_endAccess();
          swift_release();
          uint64_t v53 = v116;
          sub_1007337EC(v51, v116, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
          sub_100733290(v51, type metadata accessor for CRLUSDZAssetDataStruct);
          char v54 = static UUID.== infix(_:_:)();
          v124 = v42;
          if ((v54 & 1) == 0) {
            break;
          }
          uint64_t v55 = *(int *)(v126 + 20);
          uint64_t v56 = *(void *)(v52 + v55);
          uint64_t v57 = *(void *)(v52 + v55 + 8);
          uint64_t v58 = (void *)(v53 + v55);
          if ((v56 != *v58 || v57 != v58[1]) && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
            break;
          }
          char v59 = sub_100ED60AC(*(void *)(v52 + *(int *)(v126 + 24)), *(void *)(v53 + *(int *)(v126 + 24)));
          sub_100733290(v53, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
          sub_100733290(v52, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
          if ((v59 & 1) == 0) {
            goto LABEL_21;
          }
LABEL_22:
          swift_beginAccess();
          swift_retain();
          uint64_t v60 = (uint64_t)v131;
          CRRegister.wrappedValue.getter();
          swift_endAccess();
          swift_release();
          uint64_t v61 = v134;
          uint64_t v62 = v122;
          sub_100522E9C(v60 + v134[5], v122, (uint64_t *)&unk_10167D2B0);
          sub_100733290(v60, type metadata accessor for CRLUSDZAssetDataStruct);
          swift_beginAccess();
          swift_retain();
          CRRegister.wrappedValue.getter();
          swift_endAccess();
          swift_release();
          uint64_t v63 = (uint64_t)v123;
          sub_100522E9C(v60 + v61[5], (uint64_t)v123, (uint64_t *)&unk_10167D2B0);
          sub_100733290(v60, type metadata accessor for CRLUSDZAssetDataStruct);
          uint64_t v64 = v119;
          uint64_t v65 = v119 + *(int *)(v120 + 48);
          sub_100522E9C(v62, v119, (uint64_t *)&unk_10167D2B0);
          sub_100522E9C(v63, v65, (uint64_t *)&unk_10167D2B0);
          uint64_t v66 = v62;
          uint64_t v67 = *v113;
          uint64_t v68 = v126;
          if ((*v113)(v64, 1, v126) != 1)
          {
            uint64_t v70 = v112;
            sub_100522E9C(v64, v112, (uint64_t *)&unk_10167D2B0);
            unsigned int v71 = v67(v65, 1, v68);
            uint64_t v72 = v70;
            NSString v69 = &qword_10167D2D0;
            if (v71 != 1)
            {
              uint64_t v73 = v110;
              sub_10073373C(v65, v110, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
              if (static UUID.== infix(_:_:)())
              {
                if ((uint64_t v74 = *(int *)(v126 + 20),
                      uint64_t v75 = *(void *)(v72 + v74),
                      uint64_t v76 = *(void *)(v72 + v74 + 8),
                      uint64_t v77 = (void *)(v73 + v74),
                      v75 == *v77)
                  && v76 == v77[1]
                  || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
                {
                  char v78 = sub_100ED60AC(*(void *)(v72 + *(int *)(v126 + 24)), *(void *)(v73 + *(int *)(v126 + 24)));
                  sub_100733290(v73, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
                  sub_100522F00((uint64_t)v123, (uint64_t *)&unk_10167D2B0);
                  sub_100522F00(v122, (uint64_t *)&unk_10167D2B0);
                  sub_100733290(v72, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
                  sub_100522F00(v64, (uint64_t *)&unk_10167D2B0);
                  if (v78) {
                    goto LABEL_37;
                  }
                  goto LABEL_36;
                }
              }
              sub_100733290(v73, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
              NSString v69 = (uint64_t *)&unk_10167D2B0;
            }
            sub_100522F00((uint64_t)v123, (uint64_t *)&unk_10167D2B0);
            sub_100522F00(v122, (uint64_t *)&unk_10167D2B0);
            sub_100733290(v72, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
LABEL_35:
            sub_100522F00(v64, v69);
LABEL_36:
            *((void *)&v137 + 1) = &type metadata for Bool;
            LOBYTE(v136) = 1;
            sub_100522E9C((uint64_t)&v136, (uint64_t)v135, &qword_101672BF0);
            swift_beginAccess();
            sub_10057D61C((uint64_t)v135, 0x28uLL);
            swift_endAccess();
            sub_100522F00((uint64_t)&v136, &qword_101672BF0);
            goto LABEL_37;
          }
          sub_100522F00(v63, (uint64_t *)&unk_10167D2B0);
          sub_100522F00(v66, (uint64_t *)&unk_10167D2B0);
          NSString v69 = &qword_10167D2D0;
          if (v67(v65, 1, v68) != 1) {
            goto LABEL_35;
          }
          sub_100522F00(v64, (uint64_t *)&unk_10167D2B0);
LABEL_37:
          swift_beginAccess();
          swift_retain();
          uint64_t v80 = (uint64_t)v131;
          CRRegister.wrappedValue.getter();
          swift_endAccess();
          swift_release();
          id v81 = v134;
          __n128 v129 = *(__n128 *)(v80 + v134[6]);
          sub_100733290(v80, type metadata accessor for CRLUSDZAssetDataStruct);
          swift_beginAccess();
          swift_retain();
          CRRegister.wrappedValue.getter();
          swift_endAccess();
          swift_release();
          __n128 v128 = *(__n128 *)(v80 + v81[6]);
          sub_100733290(v80, type metadata accessor for CRLUSDZAssetDataStruct);
          uint64_t v82 = CRL3DRotation.rawValue.getter(v129);
          unint64_t v84 = v83;
          uint64_t v85 = CRL3DRotation.rawValue.getter(v128);
          unint64_t v87 = v86;
          LOBYTE(v80) = sub_1008D44A8(v82, v84, v85, v86);
          uint64_t v43 = v130;
          sub_100510084(v85, v87);
          sub_100510084(v82, v84);
          if ((v80 & 1) == 0)
          {
            swift_beginAccess();
            swift_retain();
            uint64_t v88 = (uint64_t)v131;
            CRRegister.wrappedValue.getter();
            swift_endAccess();
            swift_release();
            __n128 v129 = *(__n128 *)(v88 + v134[6]);
            sub_100733290(v88, type metadata accessor for CRLUSDZAssetDataStruct);
            *((void *)&v137 + 1) = &type metadata for CRL3DRotation;
            *(void *)&long long v136 = swift_allocObject();
            *(__n128 *)(v136 + 16) = v129;
            sub_100522E9C((uint64_t)&v136, (uint64_t)v135, &qword_101672BF0);
            swift_beginAccess();
            sub_10057D61C((uint64_t)v135, 0x32uLL);
            swift_endAccess();
            sub_100522F00((uint64_t)&v136, &qword_101672BF0);
          }
          swift_beginAccess();
          swift_retain();
          uint64_t v89 = (uint64_t)v117;
          CRRegister.wrappedValue.getter();
          swift_endAccess();
          swift_release();
          uint64_t v90 = v89 + v134[7];
          uint64_t v92 = *(void *)v90;
          uint64_t v91 = *(void *)(v90 + 8);
          char v93 = *(unsigned char *)(v90 + 16);
          sub_100733290(v89, type metadata accessor for CRLUSDZAssetDataStruct);
          double v94 = 0.0;
          double v95 = 0.0;
          double v96 = 0.0;
          double v97 = 0.0;
          uint64_t v41 = v125;
          if ((v93 & 1) == 0)
          {
            double v94 = *(float *)&v92;
            double v95 = *((float *)&v92 + 1);
            double v96 = *(float *)&v91;
            double v97 = *((float *)&v91 + 1);
          }
          swift_beginAccess();
          swift_retain();
          uint64_t v98 = (uint64_t)v118;
          CRRegister.wrappedValue.getter();
          swift_endAccess();
          swift_release();
          uint64_t v99 = v98 + v134[7];
          uint64_t v100 = *(void *)v99;
          uint64_t v101 = *(void *)(v99 + 8);
          int v102 = *(unsigned __int8 *)(v99 + 16);
          sub_100733290(v98, type metadata accessor for CRLUSDZAssetDataStruct);
          if (v102 == 1)
          {
            if ((v93 & 1) == 0) {
              goto LABEL_46;
            }
          }
          else
          {
            if (v93) {
              goto LABEL_46;
            }
            v143.size.CGFloat height = *((float *)&v101 + 1);
            v143.size.CGFloat width = *(float *)&v101;
            v143.origin.CGFloat y = *((float *)&v100 + 1);
            v143.origin.CGFloat x = *(float *)&v100;
            v142.origin.CGFloat x = v94;
            v142.origin.CGFloat y = v95;
            v142.size.CGFloat width = v96;
            v142.size.CGFloat height = v97;
            if (!CGRectEqualToRect(v142, v143))
            {
LABEL_46:
              sub_10072F00C((uint64_t)v138);
              sub_10051B3EC((uint64_t)v138, (uint64_t)v139, (uint64_t *)&unk_101676320);
              if (v140)
              {
                long long v137 = 0u;
                long long v136 = 0u;
              }
              else
              {
                type metadata accessor for CGRect(0);
                *((void *)&v137 + 1) = v103;
                uint64_t v104 = swift_allocObject();
                *(void *)&long long v136 = v104;
                long long v105 = v139[1];
                *(_OWORD *)(v104 + 16) = v139[0];
                *(_OWORD *)(v104 + 32) = v105;
              }
              uint64_t v42 = v124;
              sub_100522E9C((uint64_t)&v136, (uint64_t)v135, &qword_101672BF0);
              swift_beginAccess();
              sub_10057D61C((uint64_t)v135, 0x33uLL);
              swift_endAccess();
              sub_100522F00((uint64_t)&v136, &qword_101672BF0);
              swift_unknownObjectRelease();
              goto LABEL_7;
            }
          }
          swift_unknownObjectRelease();
          uint64_t v42 = v124;
LABEL_7:
          v42 += 2;
          if (!--v41) {
            return swift_bridgeObjectRelease();
          }
        }
        sub_100733290(v53, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
        sub_100733290(v52, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
LABEL_21:
        *((void *)&v137 + 1) = &type metadata for Bool;
        LOBYTE(v136) = 1;
        sub_100522E9C((uint64_t)&v136, (uint64_t)v135, &qword_101672BF0);
        swift_beginAccess();
        sub_10057D61C((uint64_t)v135, 0x12uLL);
        swift_endAccess();
        sub_100522F00((uint64_t)&v136, &qword_101672BF0);
        goto LABEL_22;
      }
      swift_getObjectType();
      v106 = v130;
      return sub_100892474(a1, a2, a3, a4, v106);
  }
}

double *sub_100732000()
{
  uint64_t v1 = sub_1005057FC((uint64_t *)&unk_101676160);
  __chkstk_darwin(v1 - 8, v2);
  uint64_t v4 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for UTType();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5, v7);
  uint64_t v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v10 = v0;
  sub_100BE5F04((uint64_t)v4);

  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_100522F00((uint64_t)v4, (uint64_t *)&unk_101676160);
    return _swiftEmptyArrayStorage;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v9, v4, v5);
    sub_1005057FC((uint64_t *)&unk_101672610);
    uint64_t v11 = swift_allocObject();
    *(_OWORD *)(v11 + 16) = xmmword_10117E810;
    *(void *)(v11 + 32) = UTType.identifier.getter();
    *(void *)(v11 + 40) = v12;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  }
  return (double *)v11;
}

void sub_100732404()
{
  sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"aspectRatioLocked", 17, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLUSDZItem.swift", 82, 2, 269, (uint64_t)"Should not try to set aspectRatioLocked of an item which returns false from canAspectRatioLockBeChangedByUser.", 110, 2u, (uint64_t)_swiftEmptyArrayStorage);
  sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"aspectRatioLocked", 17, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLUSDZItem.swift", 82, 2, 269);
}

void sub_100732558()
{
}

id sub_100732568()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLUSDZItem();
  return [super dealloc];
}

uint64_t sub_1007325B0()
{
  return type metadata accessor for CRLUSDZItem();
}

uint64_t type metadata accessor for CRLUSDZItem()
{
  uint64_t result = qword_10167D230;
  if (!qword_10167D230) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100732604()
{
  return swift_updateClassMetadata2();
}

uint64_t sub_100732650@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = type metadata accessor for CRLUSDZAssetDataStruct(0);
  __chkstk_darwin(v2 - 8, v3);
  uint64_t v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  swift_retain();
  sub_1005057FC((uint64_t *)&unk_10167D2A0);
  CRRegister.wrappedValue.getter();
  swift_endAccess();
  swift_release();
  sub_1007337EC((uint64_t)v5, a1, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
  sub_100733290((uint64_t)v5, type metadata accessor for CRLUSDZAssetDataStruct);
  uint64_t v6 = type metadata accessor for CRLAssetData();
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(a1, 0, 1, v6);
}

id sub_100732850(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, __n128 a7)
{
  __n128 v116 = a7;
  uint64_t v124 = a5;
  uint64_t v125 = a4;
  uint64_t v121 = a1;
  uint64_t v109 = a6;
  sub_10051B3EC(a6, (uint64_t)v129, (uint64_t *)&unk_101676320);
  double v9 = *(double *)&v129[1];
  double v97 = *(double *)v129;
  double v10 = *(double *)&v129[2];
  double v11 = *(double *)&v129[3];
  v117 = (int *)type metadata accessor for CRLUSDZAssetDataStruct(0);
  __chkstk_darwin(v117, v12);
  uint64_t v114 = (uint64_t)&v96 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v119 = sub_1005057FC((uint64_t *)&unk_10167D2A0);
  uint64_t v115 = *(void *)(v119 - 8);
  __chkstk_darwin(v119, v14);
  v113 = (char *)&v96 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_1005057FC((uint64_t *)&unk_10167D2B0);
  __chkstk_darwin(v16 - 8, v17);
  uint64_t v111 = (uint64_t)&v96 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = type metadata accessor for CRLAssetData();
  __chkstk_darwin(v19 - 8, v20);
  uint64_t v110 = (uint64_t)&v96 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v105 = type metadata accessor for CRLUSDZItemCRDTData(0);
  __chkstk_darwin(v105, v22);
  v118 = (char *)&v96 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24, v25);
  uint64_t v120 = (uint64_t)&v96 - v26;
  uint64_t v27 = type metadata accessor for UUID();
  uint64_t v28 = *(void *)(v27 - 8);
  __chkstk_darwin(v27, v29);
  uint64_t v101 = (char *)&v96 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v107 = sub_1005057FC((uint64_t *)&unk_101683E10);
  __chkstk_darwin(v107, v31);
  uint64_t v112 = (uint64_t)&v96 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v33, v34);
  uint64_t v36 = (char *)&v96 - v35;
  uint64_t v37 = sub_1005057FC((uint64_t *)&unk_101674520);
  __chkstk_darwin(v37 - 8, v38);
  uint64_t v100 = (uint64_t)&v96 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v40, v41);
  uint64_t v43 = (char *)&v96 - v42;
  uint64_t v99 = type metadata accessor for CRLBoardItemParentAffinity();
  __chkstk_darwin(v99, v44);
  BOOL v46 = (char *)&v96 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v49 = __chkstk_darwin(v47, v48);
  uint64_t v122 = (uint64_t)&v96 - v50;
  v123 = v36;
  if (a3) {
    id v51 = a3;
  }
  else {
    id v51 = [objc_allocWithZone((Class)CRLCanvasInfoGeometry) init];
  }
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v28 + 16))(v43, a2, v27, v49);
  uint64_t v108 = v28;
  uint64_t v98 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v28 + 56);
  v98(v43, 0, 1, v27);
  id v52 = v51;
  id v104 = a3;
  [v52 position];
  float v54 = v53;
  float v56 = v55;
  [v52 size];
  float v58 = v57;
  float v60 = v59;
  [v52 angle];
  float v62 = v61;
  unsigned __int8 v63 = [v52 widthValid];
  unsigned __int8 v64 = [v52 heightValid];
  unsigned __int8 v65 = [v52 horizontalFlip];
  unsigned __int8 v66 = [v52 verticalFlip];
  uint64_t v102 = a2;
  unsigned __int8 v67 = v66;
  id v106 = v52;

  uint64_t v68 = v100;
  sub_100522E9C((uint64_t)v43, v100, (uint64_t *)&unk_101674520);
  uint64_t v103 = v27;
  v98(v46, 1, 1, v27);
  uint64_t v69 = v99;
  *(void *)&v46[*(int *)(v99 + 24)] = _swiftEmptyDictionarySingleton;
  sub_10068EA54(v68, (uint64_t)v46);
  uint64_t v70 = &v46[*(int *)(v69 + 20)];
  *(float *)uint64_t v70 = v54;
  *((float *)v70 + 1) = v56;
  *((float *)v70 + 2) = v58;
  *((float *)v70 + 3) = v60;
  *((float *)v70 + 4) = v62;
  v70[20] = v63;
  v70[21] = v64;
  v70[22] = v65;
  v70[23] = v67;
  *((void *)v70 + 3) = _swiftEmptyDictionarySingleton;
  uint64_t v71 = v122;
  sub_10073373C((uint64_t)v46, v122, (uint64_t (*)(void))type metadata accessor for CRLBoardItemParentAffinity);
  sub_100522F00((uint64_t)v43, (uint64_t *)&unk_101674520);
  sub_1007337EC(v71, (uint64_t)v46, (uint64_t (*)(void))type metadata accessor for CRLBoardItemParentAffinity);
  sub_10051A41C(v128);
  sub_10051B3EC((uint64_t)v128, (uint64_t)v132, (uint64_t *)&unk_101683E20);
  uint64_t v72 = (uint64_t)v101;
  UUID.init()();
  sub_100FC2584(v72, (uint64_t)v46, 0, 0, 0, 0xE000000000000000, (uint64_t)v132, (uint64_t)v123);
  sub_10051B3EC(v109, (uint64_t)&v130, (uint64_t *)&unk_101676320);
  unint64_t v73 = 0;
  unint64_t v74 = 0;
  char v75 = v131;
  if ((v131 & 1) == 0)
  {
    *(float *)&unsigned int v76 = v97;
    *(float *)&unsigned int v77 = v9;
    *(float *)&unsigned int v78 = v10;
    *(float *)&unsigned int v79 = v11;
    unint64_t v73 = v76 | ((unint64_t)v77 << 32);
    unint64_t v74 = v78 | ((unint64_t)v79 << 32);
  }
  uint64_t v80 = v110;
  sub_1007337EC(v125, v110, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
  uint64_t v81 = v111;
  sub_100522E9C(v124, v111, (uint64_t *)&unk_10167D2B0);
  uint64_t v82 = (uint64_t)v118;
  *(void *)&v118[*(int *)(v105 + 20)] = _swiftEmptyDictionarySingleton;
  uint64_t v83 = v114;
  sub_1007337EC(v80, v114, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
  unint64_t v84 = v117;
  sub_100522E9C(v81, v83 + v117[5], (uint64_t *)&unk_10167D2B0);
  *(__n128 *)(v83 + v84[6]) = v116;
  uint64_t v85 = v83 + v84[7];
  *(void *)uint64_t v85 = v73;
  *(void *)(v85 + 8) = v74;
  *(unsigned char *)(v85 + 16) = v75;
  *(void *)(v83 + v84[8]) = _swiftEmptyDictionarySingleton;
  sub_1007337A4((unint64_t *)&unk_10167D2C0, (void (*)(uint64_t))type metadata accessor for CRLUSDZAssetDataStruct);
  unint64_t v86 = v113;
  CRRegister.init(_:)();
  sub_100522F00(v81, (uint64_t *)&unk_10167D2B0);
  v117 = (int *)type metadata accessor for CRLAssetData;
  sub_100733290(v80, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
  (*(void (**)(uint64_t, char *, uint64_t))(v115 + 32))(v82, v86, v119);
  uint64_t v87 = v120;
  sub_10073373C(v82, v120, type metadata accessor for CRLUSDZItemCRDTData);
  char v127 = 1;
  uint64_t v88 = (uint64_t)v123;
  sub_1005057FC((uint64_t *)&unk_101689310);
  CRRegister.wrappedValue.setter();
  uint64_t v89 = v112;
  sub_100522E9C(v88, v112, (uint64_t *)&unk_101683E10);
  sub_1007337EC(v87, v82, type metadata accessor for CRLUSDZItemCRDTData);
  type metadata accessor for CRLUSDZItemData(0);
  uint64_t v90 = swift_allocObject();
  sub_10073373C(v82, v90 + qword_10171CD20, type metadata accessor for CRLUSDZItemCRDTData);
  sub_10051B3EC(v89, v90 + *(void *)(*(void *)v90 + 632), (uint64_t *)&unk_101683E10);
  uint64_t v91 = sub_10068B398(0x2000000000000, 0x2000400000000, 0x1000000000000, 2);
  uint64_t v92 = (char *)objc_allocWithZone((Class)type metadata accessor for CRLUSDZItem());
  *(void *)&v92[OBJC_IVAR____TtC8Freeform11CRLUSDZItem__posterAssetPayload] = 0;
  *(void *)&v92[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_store] = v121;
  *(void *)&v92[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData] = v91;
  char v93 = (objc_class *)type metadata accessor for CRLBoardItemBase(0);
  v126.receiver = v92;
  v126.super_class = v93;
  id v94 = [super init];

  sub_100522F00(v124, (uint64_t *)&unk_10167D2B0);
  sub_100733290(v125, (uint64_t (*)(void))v117);
  (*(void (**)(uint64_t, uint64_t))(v108 + 8))(v102, v103);
  sub_100733290(v87, type metadata accessor for CRLUSDZItemCRDTData);
  sub_100522F00(v88, (uint64_t *)&unk_101683E10);
  sub_100733290(v122, (uint64_t (*)(void))type metadata accessor for CRLBoardItemParentAffinity);
  return v94;
}

uint64_t sub_100733290(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void sub_1007332F0()
{
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {

    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"scaleDownSizeToFit(within:board:)", 33, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLUSDZItem.swift", 82, 2, 303, (uint64_t)"Should not scale down size on media info with a parent!", 55, 2u, (uint64_t)_swiftEmptyArrayStorage);
    LOBYTE(v61) = 2;
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"scaleDownSizeToFit(within:board:)", 33, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLUSDZItem.swift", 82, 2, 303);
    [self logFullBacktrace:@"Should not scale down size on media info with a parent!" 55 v61];
  }
  uint64_t v2 = OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData;
  uint64_t v3 = *(uint64_t (**)(uint64_t))(**(void **)(v0 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData)
                                         + 288);
  uint64_t v4 = swift_retain();
  uint64_t v5 = (void *)v3(v4);
  swift_release();
  [v5 boundsBeforeRotation];
  double v7 = v6;
  double v9 = v8;

  double v10 = sub_100064070();
  CGFloat v69 = v11;
  CGFloat v70 = v10;
  double v13 = v12;
  CGFloat v68 = v14;
  sub_10072F00C((uint64_t)v71);
  sub_10051B3EC((uint64_t)v71, (uint64_t)&v72, (uint64_t *)&unk_101676320);
  if (v73) {
    goto LABEL_13;
  }
  CGFloat x = v72.origin.x;
  CGFloat y = v72.origin.y;
  CGFloat width = v72.size.width;
  CGFloat height = v72.size.height;
  v74.origin.CGFloat x = 0.0;
  v74.origin.CGFloat y = 0.0;
  v74.size.CGFloat width = 0.0;
  v74.size.CGFloat height = 0.0;
  if (CGRectEqualToRect(v72, v74)) {
    goto LABEL_13;
  }
  uint64_t v19 = *(uint64_t (**)(uint64_t))(**(void **)(v0 + v2) + 288);
  uint64_t v20 = swift_retain();
  uint64_t v21 = (void *)v19(v20);
  swift_release();
  [v21 boundsBeforeRotation];
  double v22 = v7;
  double v24 = v23;
  double v66 = v9;
  CGFloat v67 = v13;
  double v26 = v25;
  CGFloat v63 = v27;
  CGFloat v64 = v25;
  double v28 = v27;
  double v65 = v22;
  double v30 = v29;
  CGFloat v62 = v29;

  sub_100066AC4(v24, v26, v28, v30, x, y, width, height);
  CGFloat v32 = v31;
  CGFloat v34 = v33;
  double v36 = v35;
  CGFloat v38 = v37;
  sub_1000672D8(0, v35, v37, v70, v67, v69, v68);
  CGFloat v40 = v39 / v36;
  double v41 = sub_100065738(v32, v34, v36, v38);
  sub_10006736C(v24, v64, v63, v62, v41, v42, v40);
  double v44 = v43;
  double v46 = v45;
  double v48 = v47;
  double v50 = v49;
  double v51 = sub_100065738(v70, v67, v69, v68);
  double v53 = sub_100064680(v51, v52, v41);
  double v54 = sub_100064698(v44, v46, v53);
  id v56 = [objc_allocWithZone((Class)CRLCanvasInfoGeometry) initWithPosition:v54 size:v55];
  if (!v56)
  {
LABEL_13:
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"scaleDownSizeToFit(within:board:)", 33, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLUSDZItem.swift", 82, 2, 308, (uint64_t)"Unable to compute info geometry.", 32, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"scaleDownSizeToFit(within:board:)", 33, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLUSDZItem.swift", 82, 2, 308);
  }
  else
  {
    double v57 = v56;
    [v56 boundsBeforeRotation];
    if (v59 < v65 || v58 < v66) {
      sub_10088AA40(v57);
    }
  }
}

uint64_t sub_10073371C()
{
  return _swift_deallocObject(v0, 32, 15);
}

uint64_t sub_10073372C()
{
  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_10073373C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1007337A4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1007337EC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

void sub_100733854(uint64_t a1, uint64_t a2, void (*a3)(void *))
{
  if (a2)
  {
    uint64_t v4 = (void *)_convertErrorToNSError(_:)();
    if (qword_10166F9D8 != -1) {
      swift_once();
    }
    swift_beginAccess();
    uint64_t v5 = (void *)static OS_os_log.crlError;
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_10117E810;
    id v7 = v5;
    id v8 = [v4 localizedDescription];
    uint64_t v9 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v11 = v10;

    *(void *)(inited + 56) = &type metadata for String;
    *(void *)(inited + 64) = sub_100528BE4();
    *(void *)(inited + 32) = v9;
    *(void *)(inited + 40) = v11;
    uint64_t v12 = static os_log_type_t.default.getter();
    sub_100BAC898((uint64_t)v7, (uint64_t)&_mh_execute_header, v12, (uint64_t)"Error performing encryption repair. Error: %@", 45, 2, inited);
    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();

    id v13 = v4;
    a3(v4);
  }
  else
  {
    if (qword_10166F9C8 != -1) {
      swift_once();
    }
    swift_beginAccess();
    id v14 = (id)static OS_os_log.crlDefault;
    uint64_t v15 = static os_log_type_t.default.getter();
    sub_100BAC898((uint64_t)v14, (uint64_t)&_mh_execute_header, v15, (uint64_t)"Successfully repaired encryption.", 33, 2, (uint64_t)_swiftEmptyArrayStorage);

    a3(0);
  }
}

uint64_t type metadata accessor for CRLAccountSecurityUpgradeHelper()
{
  return self;
}

id sub_100733AA0()
{
  id result = [self defaultStore];
  if (result)
  {
    uint64_t v1 = result;
    id v2 = [result aa_primaryAppleAccount];

    if (v2)
    {
      id v3 = [v2 aa_altDSID];
      if (v3)
      {
        uint64_t v4 = v3;
        uint64_t v5 = static String._unconditionallyBridgeFromObjectiveC(_:)();

        return (id)v5;
      }
    }
    else
    {
      sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"altDSID", 7, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLAccountSecurityUpgradeHelper.swift", 98, 2, 37, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"altDSID", 7, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLAccountSecurityUpgradeHelper.swift", 98, 2, 37);
    }
    return 0;
  }
  __break(1u);
  return result;
}

void sub_100733BF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_100733AA0();
  if (v6)
  {
    id v7 = objc_allocWithZone((Class)CDPUIDeviceToDeviceEncryptionFlowContext);
    NSString v8 = String._bridgeToObjectiveC()();
    id v9 = [v7 initWithAltDSID:v8];

    id v10 = [self mainBundle];
    NSString v11 = String._bridgeToObjectiveC()();
    NSString v12 = String._bridgeToObjectiveC()();
    id v13 = [v10 localizedStringForKey:v11 value:v12 table:0];

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    NSString v14 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v9 setFeatureName:v14];

    [v9 setDeviceToDeviceEncryptionUpgradeType:0];
    [v9 setDeviceToDeviceEncryptionUpgradeUIStyle:0];
    [v9 setSecurityUpgradeContext:AKSecurityUpgradeContextGeneric];
    swift_bridgeObjectRelease();
    [v9 setPresentingViewController:a1];
    if (qword_10166F9C8 != -1) {
      swift_once();
    }
    swift_beginAccess();
    id v15 = (id)static OS_os_log.crlDefault;
    uint64_t v16 = static os_log_type_t.default.getter();
    sub_100BAC898((uint64_t)v15, (uint64_t)&_mh_execute_header, v16, (uint64_t)"Attempting to repair encryption settings.", 41, 2, (uint64_t)_swiftEmptyArrayStorage);

    id v17 = [objc_allocWithZone((Class)CDPUIDeviceToDeviceEncryptionHelper) initWithContext:v9];
    uint64_t v18 = swift_allocObject();
    *(void *)(v18 + 16) = a2;
    *(void *)(v18 + 24) = a3;
    aBlock[4] = sub_100733FEC;
    aBlock[5] = v18;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = *(void *)"";
    aBlock[2] = sub_1007E1A4C;
    aBlock[3] = &unk_1015118F8;
    uint64_t v19 = _Block_copy(aBlock);
    swift_retain();
    swift_release();
    [v17 performDeviceToDeviceEncryptionStateRepairWithCompletion:v19];
    _Block_release(v19);
  }
  else
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"presentEncryptionHelper(on:completion:)", 39, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLAccountSecurityUpgradeHelper.swift", 98, 2, 27, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"presentEncryptionHelper(on:completion:)", 39, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLAccountSecurityUpgradeHelper.swift", 98, 2, 27);
  }
}

uint64_t sub_100733FB4()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

void sub_100733FEC(uint64_t a1, uint64_t a2)
{
  sub_100733854(a1, a2, *(void (**)(void *))(v2 + 16));
}

uint64_t sub_100733FF4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100734004()
{
  return swift_release();
}

void sub_10073400C(void *a1, void *a2)
{
  id v3 = v2;
  id v6 = [v3 manager];
  if (v6)
  {
    id v7 = v6;
    id v8 = [v3 containerView];
    Class isa = (Class)[v8 constraints];

    if (!isa)
    {
      sub_10050BF48(0, (unint64_t *)&qword_101674200);
      static Array._unconditionallyBridgeFromObjectiveC(_:)();
      Class isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
    }
    id v114 = self;
    [v114 deactivateConstraints:isa];

    sub_1005057FC(&qword_10167D448);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_10117E800;
    strcpy((char *)(inited + 32), "containerView");
    *(_WORD *)(inited + 46) = -4864;
    *(void *)(inited + 48) = [v3 containerView];
    *(void *)(inited + 56) = 0x77656956647568;
    *(void *)(inited + 64) = 0xE700000000000000;
    *(void *)(inited + 72) = [v3 hudView];
    *(void *)(inited + 80) = 0x6569566C6562616CLL;
    *(void *)(inited + 88) = 0xE900000000000077;
    *(void *)(inited + 96) = a1;
    strcpy((char *)(inited + 104), "accessoryView");
    *(_WORD *)(inited + 118) = -4864;
    *(void *)(inited + 120) = a2;
    id v11 = a1;
    id v112 = a2;
    unint64_t v12 = sub_100A38BC0(inited);
    [v7 maxTextWidth];
    double v14 = v13;
    [v11 setNumberOfLines:0];
    [v11 sizeThatFits:v14];
    double v16 = v15;
    [v11 setNumberOfLines:3];
    id v17 = [v11 font];
    if (v17)
    {
      uint64_t v18 = v17;
      float v19 = v16;
      [v17 lineHeight];
      double v21 = v20;

      float v22 = v21;
      uint64_t v23 = lroundf(v19 / v22);
      [v7 maxTextWidth];
      double v25 = v24;
      if (v23 >= 2) {
        double v26 = 12.0;
      }
      else {
        double v26 = 10.0;
      }
      if (v23 <= 2)
      {
        uint64_t v110 = v23;
        float v36 = 22.0;
        double v37 = &selRef_firstTapLocation;
      }
      else
      {
        [v7 maxTextWidth];
        double v25 = v26 + v27 + 22.0;
        [v112 setHidden:1];
        [v11 setNumberOfLines:0];
        [v11 sizeThatFits:v25];
        double v29 = v28;
        [v11 setNumberOfLines:3];
        id v30 = [v11 font];
        if (!v30)
        {
LABEL_32:
          __break(1u);
          return;
        }
        double v31 = v30;
        float v32 = v29;
        [v30 lineHeight];
        double v34 = v33;

        float v35 = v34;
        float v36 = 0.0;
        double v37 = &selRef_firstTapLocation;
        uint64_t v110 = lroundf(v32 / v35);
        if (v110 < 3) {
          double v26 = 10.0;
        }
        else {
          [v11 setAdjustsFontSizeToFitWidth:1];
        }
      }
      [v11 sizeThatFits:v25];
      double v41 = v40;
      sub_1005057FC(&qword_10167D450);
      uint64_t v42 = swift_initStackObject();
      *(_OWORD *)(v42 + 16) = xmmword_10117E800;
      *(void *)(v42 + 32) = 0x676E6964646170;
      *(void *)(v42 + 40) = 0xE700000000000000;
      id v43 = objc_allocWithZone((Class)NSNumber);
      LODWORD(v44) = 20.0;
      *(void *)(v42 + 48) = [v43 initWithFloat:v44];
      *(void *)(v42 + 56) = 0x676E6963617073;
      *(void *)(v42 + 64) = 0xE700000000000000;
      float v45 = v26;
      id v46 = objc_allocWithZone((Class)NSNumber);
      *(float *)&double v47 = v45;
      *(void *)(v42 + 72) = [v46 initWithFloat:v47];
      *(void *)(v42 + 80) = 0x7464695774786574;
      *(void *)(v42 + 88) = 0xE900000000000068;
      id v48 = objc_allocWithZone((Class)NSNumber);
      *(float *)&double v41 = v41;
      LODWORD(v49) = LODWORD(v41);
      *(void *)(v42 + 96) = [v48 initWithFloat:v49];
      *(void *)(v42 + 104) = 0xD000000000000012;
      *(void *)(v42 + 112) = 0x800000010124AF50;
      id v50 = objc_allocWithZone((Class)NSNumber);
      *(float *)&double v51 = v36;
      *(void *)(v42 + 120) = [v50 initWithFloat:v51];
      unint64_t v52 = sub_100A38BCC(v42);
      unint64_t v119 = (unint64_t)_swiftEmptyArrayStorage;
      NSString v53 = String._bridgeToObjectiveC()();
      sub_100ED2340(v52);
      swift_bridgeObjectRelease();
      Class v54 = Dictionary._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      sub_100ED2354(v12);
      swift_bridgeObjectRelease();
      Class v55 = Dictionary._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      id v56 = [v114 constraintsWithVisualFormat:v53 options:0 metrics:v54 views:v55];

      sub_10050BF48(0, (unint64_t *)&qword_101674200);
      unint64_t v57 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

      sub_1006E0CA0(v57);
      id v58 = [v3 v37[426]];
      uint64_t v59 = sub_10050BF48(0, (unint64_t *)&qword_1016725F0);
      uint64_t v118 = v59;
      v117[0] = v58;
      long long v115 = 0u;
      long long v116 = 0u;
      [v7 maxHUDWidth];
      id v61 = sub_1009D1E6C(v117, 7, -1, &v115, 7, 1.0, v60);
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)((v119 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v119 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      uint64_t v109 = v61;
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
      id v62 = [v3 v37[426]];
      id v63 = [v62 trailingAnchor];

      id v64 = [v3 containerView];
      id v65 = [v64 trailingAnchor];

      id v66 = [v63 constraintGreaterThanOrEqualToAnchor:v65];
      id v67 = v66;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)((v119 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v119 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      uint64_t v108 = v67;
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
      uint64_t v68 = type metadata accessor for CRLLabelView_mi();
      uint64_t v118 = v68;
      v117[0] = v11;
      id v69 = v11;
      id v70 = [v3 v37[426]];
      *((void *)&v116 + 1) = v59;
      *(void *)&long long v115 = v70;
      id v111 = sub_1009D1E6C(v117, 10, 0, &v115, 10, 1.0, 0.0);
      uint64_t v118 = v59;
      v117[0] = v112;
      id v71 = v112;
      id v72 = [v3 v37[426]];
      *((void *)&v116 + 1) = v59;
      *(void *)&long long v115 = v72;
      id v73 = sub_1009D1E6C(v117, 10, 0, &v115, 10, 1.0, 0.0);
      uint64_t v118 = v59;
      v117[0] = v71;
      long long v115 = 0u;
      long long v116 = 0u;
      CGRect v74 = v37;
      id v75 = v71;
      id v76 = sub_1009D1E6C(v117, 8, 0, &v115, 8, 1.0, 22.0);
      id v77 = [v3 v74[426]];
      uint64_t v118 = v59;
      *((void *)&v116 + 1) = v59;
      v117[0] = v77;
      *(void *)&long long v115 = v75;
      if (v110 <= 2) {
        double v78 = 18.0;
      }
      else {
        double v78 = 38.0;
      }
      id v79 = v75;
      id v80 = sub_1009D1E6C(v117, 8, 0, &v115, 8, 1.0, v78);
      uint64_t v118 = v68;
      v117[0] = v69;
      id v81 = v69;
      id v82 = [v3 v74[426]];
      *((void *)&v116 + 1) = v59;
      *(void *)&long long v115 = v82;
      id v113 = sub_1009D1E6C(v117, 8, -1, &v115, 8, 1.0, 0.0);
      id v83 = [v3 heightConstraint];

      if (!v83)
      {
        unsigned int v84 = [v3 showing];
        double v85 = 56.0;
        if (!v84) {
          double v85 = 0.0;
        }
        [v3 setHeight:v85];
        id v86 = [v3 containerView];
        uint64_t v118 = v59;
        v117[0] = v86;
        long long v115 = 0u;
        long long v116 = 0u;
        [v3 height];
        id v88 = sub_1009D1E6C(v117, 8, 0, &v115, 8, 1.0, v87);
        [v3 setHeightConstraint:v88];
      }
      id v89 = [v3 containerView];
      uint64_t v118 = v59;
      v117[0] = v89;
      id v90 = [v3 v74[426]];
      *((void *)&v116 + 1) = v59;
      *(void *)&long long v115 = v90;
      id v91 = sub_1009D1E6C(v117, 7, 0, &v115, 7, 1.0, 0.0);
      id v92 = [v3 v74[426]];
      id v93 = [v92 topAnchor];

      id v94 = [v3 containerView];
      id v95 = [v94 topAnchor];

      id v96 = [v93 constraintEqualToAnchor:v95];
      sub_1005057FC((uint64_t *)&unk_101676C10);
      uint64_t v97 = swift_initStackObject();
      *(_OWORD *)(v97 + 16) = xmmword_10117E9C0;
      *(void *)(v97 + 32) = v111;
      *(void *)(v97 + 40) = v73;
      *(void *)(v97 + 48) = v76;
      *(void *)(v97 + 56) = v80;
      id v98 = v111;
      id v99 = v73;
      id v100 = v76;
      id v101 = v80;
      id v102 = [v3 heightConstraint];
      if (v102)
      {
        *(void *)(v97 + 64) = v102;
        *(void *)(v97 + 72) = v113;
        *(void *)(v97 + 80) = v91;
        *(void *)(v97 + 88) = v96;
        v117[0] = v97;
        specialized Array._endMutation()();
        unint64_t v103 = v117[0];
        id v104 = v113;
        id v105 = v91;
        id v106 = v96;
        sub_1006E0CA0(v103);
        Class v107 = Array._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease();
        [v114 activateConstraints:v107];

        swift_unknownObjectRelease();
        return;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_32;
  }
  if (qword_10166F9F8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  id v38 = (id)static OS_os_log.crlStatusHUD;
  uint64_t v39 = static os_log_type_t.error.getter();
  sub_100BAC898((uint64_t)v38, (uint64_t)&_mh_execute_header, v39, (uint64_t)"Trying to layout views without a manager", 40, 2, (uint64_t)_swiftEmptyArrayStorage);
}

uint64_t sub_100735180()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1005057FC(&qword_101672EB0);
  __chkstk_darwin(v2 - 8, v3);
  uint64_t v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for Date();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6, v8);
  id v10 = (char *)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = v1 + OBJC_IVAR____TtC8Freeform41CRLCollaboratorBaseStatusHUDController_mi_timeStartedShowing;
  swift_beginAccess();
  sub_100541258(v11, (uint64_t)v5);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1) {
    return sub_100517604((uint64_t)v5);
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v10, v5, v6);
  Date.timeIntervalSinceNow.getter();
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v10, v6);
}

void sub_100735400()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for Date();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2, v4);
  uint64_t v6 = (char *)aBlock - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1005057FC(&qword_101672EB0);
  __chkstk_darwin(v7 - 8, v8);
  id v10 = (char *)aBlock - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&double v13 = __chkstk_darwin(v11, v12).n128_u64[0];
  double v15 = (char *)aBlock - v14;
  if (v0[OBJC_IVAR____TtC8Freeform41CRLCollaboratorBaseStatusHUDController_mi_showing] == 1
    && v0[OBJC_IVAR____TtC8Freeform41CRLCollaboratorBaseStatusHUDController_mi_shouldAutoHide] == 1)
  {
    uint64_t v16 = OBJC_IVAR____TtC8Freeform41CRLCollaboratorBaseStatusHUDController_mi_hideTimer;
    [*(id *)&v0[OBJC_IVAR____TtC8Freeform41CRLCollaboratorBaseStatusHUDController_mi_hideTimer] invalidate];
    id v17 = *(void **)&v0[v16];
    *(void *)&v0[v16] = 0;

    id v18 = sub_100735E08();
    float v19 = (void *)(*(uint64_t (**)(void))((swift_isaMask & *(void *)v0) + 0x2C0))();
    sub_10073400C(v18, v19);

    Date.init()();
    (*(void (**)(char *, void, uint64_t, uint64_t))(v3 + 56))(v15, 0, 1, v2);
    uint64_t v20 = (uint64_t)&v0[OBJC_IVAR____TtC8Freeform41CRLCollaboratorBaseStatusHUDController_mi_timeStartedShowing];
    swift_beginAccess();
    sub_1005E8B94((uint64_t)v15, v20);
    swift_endAccess();
    sub_100541258(v20, (uint64_t)v10);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v10, 1, v2) == 1)
    {
      sub_100517604((uint64_t)v10);
      double v21 = 0.0;
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v6, v10, v2);
      Date.timeIntervalSinceNow.getter();
      double v23 = fabs(v22);
      (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
      double v24 = *(double *)&v1[OBJC_IVAR____TtC8Freeform41CRLCollaboratorBaseStatusHUDController_mi_maximumShowDuration];
      double v21 = 0.0;
      if (v23 < v24) {
        double v21 = v24 - v23;
      }
    }
    uint64_t v25 = swift_allocObject();
    *(void *)(v25 + 16) = v1;
    aBlock[4] = sub_10073625C;
    aBlock[5] = v25;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = *(void *)"";
    aBlock[2] = sub_10051CE64;
    aBlock[3] = &unk_101511948;
    double v26 = _Block_copy(aBlock);
    double v27 = self;
    double v28 = v1;
    id v29 = [v27 timerWithTimeInterval:0 repeats:v26 block:v21];
    _Block_release(v26);
    swift_release();
    id v30 = *(void **)&v1[v16];
    *(void *)&v1[v16] = v29;

    double v31 = *(void **)&v1[v16];
    if (v31)
    {
      float v32 = self;
      id v33 = v31;
      id v34 = [v32 mainRunLoop];
      [v34 addTimer:v33 forMode:NSRunLoopCommonModes];
    }
  }
}

void sub_100735820(uint64_t a1, uint64_t a2)
{
  sub_1009D18F4(0);
  uint64_t v3 = OBJC_IVAR____TtC8Freeform41CRLCollaboratorBaseStatusHUDController_mi_hideTimer;
  [*(id *)(a2 + OBJC_IVAR____TtC8Freeform41CRLCollaboratorBaseStatusHUDController_mi_hideTimer) invalidate];
  uint64_t v4 = *(void **)(a2 + v3);
  *(void *)(a2 + v3) = 0;
}

void sub_100735A84()
{
}

void sub_100735AE0()
{
}

void sub_100735BB4(uint64_t a1)
{
  if ((*((unsigned char *)v1 + OBJC_IVAR____TtC8Freeform41CRLCollaboratorBaseStatusHUDController_mi_setupDone) & 1) == 0)
  {
    *((unsigned char *)v1 + OBJC_IVAR____TtC8Freeform41CRLCollaboratorBaseStatusHUDController_mi_setupDone) = 1;
    sub_100E38C64(a1);
    uint64_t v2 = OBJC_IVAR____TtC8Freeform41CRLCollaboratorBaseStatusHUDController_mi_hudView;
    id v3 = *(id *)((char *)v1 + OBJC_IVAR____TtC8Freeform41CRLCollaboratorBaseStatusHUDController_mi_hudView);
    id v4 = sub_100735E08();
    [v3 addSubview:v4];

    uint64_t v5 = *(uint64_t (**)(void))((swift_isaMask & *v1) + 0x2C0);
    id v6 = *(id *)((char *)v1 + v2);
    uint64_t v7 = (void *)v5();
    [v6 addSubview:v7];

    [*(id *)((char *)v1 + OBJC_IVAR____TtC8Freeform41CRLCollaboratorBaseStatusHUDController_mi_containerView) addSubview:*(void *)((char *)v1 + v2)];
    id v8 = sub_100735E08();
    id v9 = (id)v5();
    sub_10073400C(v8, v9);
  }
}

id sub_100735E08()
{
  uint64_t v1 = OBJC_IVAR____TtC8Freeform41CRLCollaboratorBaseStatusHUDController_mi____lazy_storage____label;
  uint64_t v2 = *(void **)((char *)v0
                + OBJC_IVAR____TtC8Freeform41CRLCollaboratorBaseStatusHUDController_mi____lazy_storage____label);
  if (v2)
  {
    id v3 = *(id *)((char *)v0
               + OBJC_IVAR____TtC8Freeform41CRLCollaboratorBaseStatusHUDController_mi____lazy_storage____label);
  }
  else
  {
    (*(void (**)(void))((swift_isaMask & *v0) + 0x2B8))();
    id v4 = (void *)sub_100EBD9C4();
    swift_bridgeObjectRelease();
    [v4 setTranslatesAutoresizingMaskIntoConstraints:0];
    uint64_t v5 = *(void **)((char *)v0 + v1);
    *(void *)((char *)v0 + v1) = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v6 = v2;
  return v3;
}

id sub_100735FBC()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLCollaboratorBaseStatusHUDController_mi();
  return [super dealloc];
}

uint64_t sub_1007360D4()
{
  return type metadata accessor for CRLCollaboratorBaseStatusHUDController_mi();
}

uint64_t type metadata accessor for CRLCollaboratorBaseStatusHUDController_mi()
{
  uint64_t result = qword_10167D438;
  if (!qword_10167D438) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_100736128()
{
  sub_1005E873C();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t sub_100736224()
{
  return _swift_deallocObject(v0, 24, 7);
}

void sub_10073625C(uint64_t a1)
{
  sub_100735820(a1, *(void *)(v1 + 16));
}

uint64_t sub_100736264(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100736274()
{
  return swift_release();
}

uint64_t sub_1007366E4()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1005057FC(&qword_101672EB0);
  __chkstk_darwin(v2 - 8, v3);
  uint64_t v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for Date();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6, v8);
  id v10 = (char *)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = v1 + OBJC_IVAR____TtC8Freeform39CRLTransientStartEndFollowHUDController_timeStartedShowing;
  swift_beginAccess();
  sub_100541258(v11, (uint64_t)v5);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1) {
    return sub_100522F00((uint64_t)v5, &qword_101672EB0);
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v10, v5, v6);
  Date.timeIntervalSinceNow.getter();
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v10, v6);
}

void sub_10073696C()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for Date();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2, v4);
  uint64_t v6 = (char *)aBlock - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1005057FC(&qword_101672EB0);
  __chkstk_darwin(v7 - 8, v8);
  id v10 = (char *)aBlock - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&double v13 = __chkstk_darwin(v11, v12).n128_u64[0];
  double v15 = (char *)aBlock - v14;
  if (v1[OBJC_IVAR____TtC8Freeform39CRLTransientStartEndFollowHUDController_showing] == 1
    && v1[OBJC_IVAR____TtC8Freeform39CRLTransientStartEndFollowHUDController_shouldAutoHide] == 1)
  {
    uint64_t v16 = OBJC_IVAR____TtC8Freeform39CRLTransientStartEndFollowHUDController_hideTimer;
    [*(id *)&v1[OBJC_IVAR____TtC8Freeform39CRLTransientStartEndFollowHUDController_hideTimer] invalidate];
    id v17 = *(void **)&v1[v16];
    *(void *)&v1[v16] = 0;

    Date.init()();
    (*(void (**)(char *, void, uint64_t, uint64_t))(v3 + 56))(v15, 0, 1, v2);
    uint64_t v18 = (uint64_t)&v1[OBJC_IVAR____TtC8Freeform39CRLTransientStartEndFollowHUDController_timeStartedShowing];
    swift_beginAccess();
    sub_1005E8B94((uint64_t)v15, v18);
    swift_endAccess();
    sub_100541258(v18, (uint64_t)v10);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v10, 1, v2) == 1)
    {
      sub_100522F00((uint64_t)v10, &qword_101672EB0);
      double v19 = 0.0;
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v6, v10, v2);
      Date.timeIntervalSinceNow.getter();
      double v21 = fabs(v20);
      (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
      double v22 = *(double *)&v1[OBJC_IVAR____TtC8Freeform39CRLTransientStartEndFollowHUDController_maximumShowDuration];
      BOOL v23 = v21 < v22;
      double v24 = v22 - v21;
      if (v23) {
        double v19 = v24;
      }
      else {
        double v19 = 0.0;
      }
    }
    uint64_t v25 = self;
    uint64_t v26 = swift_allocObject();
    *(void *)(v26 + 16) = v1;
    aBlock[4] = sub_10073923C;
    aBlock[5] = v26;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = *(void *)"";
    aBlock[2] = sub_10051CE64;
    aBlock[3] = &unk_101511A28;
    double v27 = _Block_copy(aBlock);
    double v28 = v1;
    swift_release();
    id v29 = [v25 scheduledTimerWithTimeInterval:0 repeats:v27 block:v19];
    _Block_release(v27);
    id v30 = *(void **)&v1[v16];
    *(void *)&v1[v16] = v29;
  }
}

void sub_100736CC0(uint64_t a1, uint64_t a2)
{
  sub_1009D191C(0);
  uint64_t v3 = OBJC_IVAR____TtC8Freeform39CRLTransientStartEndFollowHUDController_hideTimer;
  [*(id *)(a2 + OBJC_IVAR____TtC8Freeform39CRLTransientStartEndFollowHUDController_hideTimer) invalidate];
  uint64_t v4 = *(void **)(a2 + v3);
  *(void *)(a2 + v3) = 0;
}

uint64_t sub_100736F9C()
{
  uint64_t v1 = sub_1005057FC(&qword_101687FD0);
  __chkstk_darwin(v1 - 8, v2);
  uint64_t v4 = (char *)&v36 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for PersonNameComponents();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5, v7);
  uint64_t v9 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v10 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform39CRLTransientStartEndFollowHUDController_followingParticipantInfo);
  if ((*(unsigned char *)(v0 + OBJC_IVAR____TtC8Freeform39CRLTransientStartEndFollowHUDController_followingParticipantInfo + 8) & 1) == 0)
  {
    v10;
    sub_1007014C4((uint64_t)v4);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
    {
      sub_100522F00((uint64_t)v4, &qword_101687FD0);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v9, v4, v5);
      double v21 = self;
      Class isa = PersonNameComponents._bridgeToObjectiveC()().super.isa;
      id v23 = [v21 localizedStringFromPersonNameComponents:isa style:1 options:0];

      uint64_t v24 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v26 = v25;

      if ((v26 & 0x2000000000000000) != 0) {
        uint64_t v27 = HIBYTE(v26) & 0xF;
      }
      else {
        uint64_t v27 = v24 & 0xFFFFFFFFFFFFLL;
      }
      (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
      if (v27) {
        goto LABEL_14;
      }
      swift_bridgeObjectRelease();
    }
    uint64_t v24 = sub_100701F80();
    unint64_t v26 = v28;
LABEL_14:
    id v29 = [self mainBundle];
    NSString v30 = String._bridgeToObjectiveC()();
    NSString v31 = String._bridgeToObjectiveC()();
    id v32 = [v29 localizedStringForKey:v30 value:v31 table:0];

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t v33 = swift_allocObject();
    *(_OWORD *)(v33 + 16) = xmmword_10117E810;
    *(void *)(v33 + 56) = &type metadata for String;
    *(void *)(v33 + 64) = sub_100528BE4();
    *(void *)(v33 + 32) = v24;
    *(void *)(v33 + 40) = v26;
    uint64_t v34 = String.init(format:_:)();
    swift_bridgeObjectRelease();
    sub_1007389C0(v10, 0);
    return v34;
  }
  int v11 = *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC8Freeform39CRLTransientStartEndFollowHUDController_isStartFollow);
  id v12 = [self mainBundle];
  unint64_t v13 = 0xD00000000000002BLL;
  if (v11 == 1)
  {
    unint64_t v14 = 0xD0000000000000BFLL;
    unint64_t v35 = 0x800000010124B340;
    double v15 = "%d people started following along with you.";
  }
  else
  {
    unint64_t v14 = 0xD0000000000000BDLL;
    unint64_t v35 = 0x800000010124B250;
    double v15 = "%d people stopped following along with you.";
  }
  unint64_t v16 = (unint64_t)(v15 - 32) | 0x8000000000000000;
  v17._countAndFlagsBits = 0;
  v17._object = (void *)0xE000000000000000;
  NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v13, (Swift::String_optional)0, (NSBundle)v12, v17, *(Swift::String *)&v14);

  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_10117E810;
  *(void *)(v18 + 56) = &type metadata for Int;
  *(void *)(v18 + 64) = &protocol witness table for Int;
  *(void *)(v18 + 32) = v10;
  uint64_t v19 = static String.localizedStringWithFormat(_:_:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v19;
}

id sub_100737428()
{
  id v0 = [self labelColor];
  id v1 = [self systemFontOfSize:13.0 weight:UIFontWeightRegular];
  sub_1005057FC((uint64_t *)&unk_101687FB0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117D8C0;
  *(void *)(inited + 32) = NSFontAttributeName;
  uint64_t v3 = sub_10050BF48(0, (unint64_t *)&qword_101695490);
  *(void *)(inited + 40) = v1;
  *(void *)(inited + 64) = v3;
  *(void *)(inited + 72) = NSForegroundColorAttributeName;
  *(void *)(inited + 104) = sub_10050BF48(0, (unint64_t *)&qword_101687FC0);
  *(void *)(inited + 80) = v0;
  uint64_t v4 = NSFontAttributeName;
  id v5 = v1;
  uint64_t v6 = NSForegroundColorAttributeName;
  id v7 = v0;
  sub_100A38A68(inited);
  sub_100736F9C();
  id v8 = objc_allocWithZone((Class)NSAttributedString);
  NSString v9 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_100515BF8();
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v11 = [v8 initWithString:v9 attributes:isa];

  return v11;
}

void sub_1007375FC()
{
  uint64_t v1 = v0;
  uint64_t v104 = OBJC_IVAR____TtC8Freeform39CRLTransientStartEndFollowHUDController_hudView;
  id v2 = [*(id *)(v0 + OBJC_IVAR____TtC8Freeform39CRLTransientStartEndFollowHUDController_hudView) subviews];
  uint64_t v101 = sub_10050BF48(0, (unint64_t *)&qword_1016725F0);
  unint64_t v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
    if (!v4) {
      goto LABEL_10;
    }
  }
  else
  {
    uint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (!v4) {
      goto LABEL_10;
    }
  }
  if (v4 < 1)
  {
    __break(1u);
    goto LABEL_35;
  }
  for (uint64_t i = 0; i != v4; ++i)
  {
    if ((v3 & 0xC000000000000001) != 0) {
      id v6 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v6 = *(id *)(v3 + 8 * i + 32);
    }
    id v7 = v6;
    [v6 removeFromSuperview];
  }
LABEL_10:
  swift_bridgeObjectRelease_n();
  if (*(unsigned char *)(v1 + OBJC_IVAR____TtC8Freeform39CRLTransientStartEndFollowHUDController_followingParticipantInfo + 8))
  {
    NSString v8 = String._bridgeToObjectiveC()();
    NSString v9 = self;
    id v10 = [v9 colorNamed:v8];

    if (!v10)
    {
LABEL_36:
      __break(1u);
      return;
    }
    id v11 = [v9 systemGrayColor];
    id v12 = v11;
    if (*(unsigned char *)(v1 + OBJC_IVAR____TtC8Freeform39CRLTransientStartEndFollowHUDController_isStartFollow)) {
      id v13 = v10;
    }
    else {
      id v13 = v11;
    }
    id v14 = [self configurationWithHierarchicalColor:v13];
    NSString v15 = String._bridgeToObjectiveC()();
    id v16 = [self imageNamed:v15];

    if (v16)
    {
      id v17 = [v16 imageWithConfiguration:v14];
    }
    else
    {
      id v17 = 0;
    }
    id v26 = [objc_allocWithZone((Class)UIImageView) initWithImage:v17];
    [v26 setTranslatesAutoresizingMaskIntoConstraints:0];
    [v26 setContentMode:1];
    id v27 = *(id *)(v1 + v104);
    [v27 addSubview:v26];
  }
  else
  {
    uint64_t v18 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform39CRLTransientStartEndFollowHUDController_followingParticipantInfo);
    id v19 = objc_allocWithZone((Class)CNAvatarViewController);
    double v20 = v18;
    id v21 = [v19 init];
    double v22 = *(void **)&v20[OBJC_IVAR____TtC8Freeform27CRLCollaborationParticipant_cnContact];
    if (v22)
    {
      sub_1005057FC((uint64_t *)&unk_101676C10);
      uint64_t v23 = swift_allocObject();
      *(_OWORD *)(v23 + 16) = xmmword_101177E70;
      *(void *)(v23 + 32) = v22;
      v106[0] = v23;
      specialized Array._endMutation()();
      sub_10050BF48(0, (unint64_t *)&qword_10167C580);
      id v24 = v22;
      Class isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      [v21 setContacts:isa];
    }
    id v26 = [v21 view];
    [v26 setTranslatesAutoresizingMaskIntoConstraints:0];
    [*(id *)(v1 + v104) addSubview:v26];

    sub_1007389C0(v18, 0);
  }
  id v28 = v26;
  id v29 = [v28 leadingAnchor];
  id v30 = [*(id *)(v1 + v104) leadingAnchor];
  id v31 = [v29 constraintEqualToAnchor:v30 constant:8.0];

  [v31 setActive:1];
  id v32 = [v28 widthAnchor];
  id v33 = [v32 constraintEqualToConstant:26.0];

  [v33 setActive:1];
  id v34 = [v28 heightAnchor];
  id v35 = [v34 constraintEqualToConstant:26.0];

  [v35 setActive:1];
  id v36 = [v28 centerYAnchor];
  id v37 = [*(id *)(v1 + v104) centerYAnchor];
  id v38 = [v36 constraintEqualToAnchor:v37];

  [v38 setActive:1];
  id v39 = [objc_allocWithZone((Class)UIStackView) init];
  [v39 setAlignment:1];
  [v39 setAxis:1];
  [v39 setDistribution:4];
  [v39 setSpacing:3.0];
  [v39 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v102 = v39;
  [*(id *)(v1 + v104) addSubview:v39];
  id v40 = sub_1007383FC();
  double v41 = self;
  id v42 = v40;
  id v43 = [v41 labelColor];
  [v42 setTextColor:v43];

  [v42 setNumberOfLines:2];
  id v44 = v42;
  id v45 = sub_100737428();
  if (v45)
  {
    id v46 = v45;
  }
  else
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"setupAndLayoutAdaptableView()", 29, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLApplication/CRLTransientStartEndFollowHUDController.swift", 114, 2, 254, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    LOBYTE(v100) = 2;
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"setupAndLayoutAdaptableView()", 29, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLApplication/CRLTransientStartEndFollowHUDController.swift", 114, 2, 254);
    id v47 = objc_allocWithZone((Class)NSAttributedString);
    NSString v48 = String._bridgeToObjectiveC()();
    id v46 = [v47 initWithString:v48 invalid nil found when unwrapping value:39 v100];
  }
  [v44 setAttributedText:v46];

  id v103 = v28;
  id v49 = [v102 leadingAnchor];
  id v50 = [v103 trailingAnchor];
  id v51 = [v49 constraintEqualToAnchor:v50 constant:8.0];

  [v51 setActive:1];
  id v52 = [v102 trailingAnchor];
  id v53 = [*(id *)(v1 + v104) trailingAnchor];
  id v54 = [v52 constraintEqualToAnchor:v53 constant:-20.0];

  [v54 setActive:1];
  id v55 = [v102 topAnchor];
  id v56 = [*(id *)(v1 + v104) topAnchor];
  id v57 = [v55 constraintEqualToAnchor:v56];

  [v57 setActive:1];
  id v58 = [v102 bottomAnchor];
  id v59 = [*(id *)(v1 + v104) bottomAnchor];
  id v60 = [v58 constraintEqualToAnchor:v59];

  [v60 setActive:1];
  [v102 addArrangedSubview:v44];
  [v44 setTextAlignment:0];
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (!Strong)
  {
    uint64_t v68 = &selRef_invalidateSizedImageIfNeededForBakedMaskPathFromBlock_;
    double v75 = 50.0;
    double v74 = 66.0;
    goto LABEL_31;
  }
  [Strong maxTextWidth];
  double v63 = v62;
  swift_unknownObjectRelease();
  [v44 setNumberOfLines:0];
  [v44 sizeThatFits:v63];
  double v65 = v64;
  [v44 setNumberOfLines:3];
  id v66 = [v44 font];
  if (!v66)
  {
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  id v67 = v66;
  uint64_t v68 = &selRef_invalidateSizedImageIfNeededForBakedMaskPathFromBlock_;
  float v69 = v65;
  [v66 lineHeight];
  double v71 = v70;

  float v72 = v71;
  uint64_t v73 = lroundf(v69 / v72);
  double v74 = 66.0;
  if (v73 == 1)
  {
    double v74 = 56.0;
    double v75 = 40.0;
  }
  else
  {
    double v75 = 50.0;
  }
LABEL_31:
  uint64_t v76 = OBJC_IVAR____TtC8Freeform39CRLTransientStartEndFollowHUDController_height;
  *(double *)(v1 + OBJC_IVAR____TtC8Freeform39CRLTransientStartEndFollowHUDController_height) = v74;
  id v77 = [*(id *)(v1 + v104) heightAnchor];
  id v78 = [v77 constraintEqualToConstant:v75];

  [v78 setActive:1];
  id v79 = v68;
  id v80 = [*(id *)(v1 + v104) v68[478]];
  uint64_t v81 = OBJC_IVAR____TtC8Freeform39CRLTransientStartEndFollowHUDController_containerView;
  id v82 = [*(id *)(v1 + OBJC_IVAR____TtC8Freeform39CRLTransientStartEndFollowHUDController_containerView) v79[478]];
  id v83 = [v80 constraintEqualToAnchor:v82];

  [v83 setActive:1];
  id v84 = [*(id *)(v1 + v104) topAnchor];
  id v85 = [*(id *)(v1 + v81) topAnchor];
  id v86 = [v84 constraintEqualToAnchor:v85];

  [v86 setActive:1];
  id v87 = [*(id *)(v1 + v104) trailingAnchor];
  id v88 = [*(id *)(v1 + v81) trailingAnchor];
  id v89 = [v87 constraintEqualToAnchor:v88];

  [v89 setActive:1];
  id v90 = [*(id *)(v1 + v81) heightAnchor];
  id v91 = [v90 constraintEqualToConstant:*(double *)(v1 + v76)];

  [v91 setActive:1];
  sub_10050BF48(0, (unint64_t *)&qword_101674200);
  id v92 = *(void **)(v1 + v81);
  v106[3] = v101;
  v106[0] = v92;
  memset(v105, 0, sizeof(v105));
  double v93 = *(double *)(v1 + v76);
  id v94 = v92;
  id v95 = sub_1009D1E6C(v106, 8, 0, v105, 8, 1.0, v93);
  id v96 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform39CRLTransientStartEndFollowHUDController_heightConstraint);
  *(void *)(v1 + OBJC_IVAR____TtC8Freeform39CRLTransientStartEndFollowHUDController_heightConstraint) = v95;

  id v97 = [*(id *)(v1 + v104) layer];
  [v97 setMasksToBounds:0];

  id v98 = [*(id *)(v1 + v104) layer];
  [v98 setCornerCurve:kCACornerCurveContinuous];

  id v99 = [*(id *)(v1 + v104) layer];
  [v99 setCornerRadius:20.0];
}

id sub_1007383FC()
{
  uint64_t v1 = OBJC_IVAR____TtC8Freeform39CRLTransientStartEndFollowHUDController____lazy_storage____label;
  id v2 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform39CRLTransientStartEndFollowHUDController____lazy_storage____label);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC8Freeform39CRLTransientStartEndFollowHUDController____lazy_storage____label);
  }
  else
  {
    sub_100736F9C();
    uint64_t v4 = (void *)sub_100EBD9C4();
    swift_bridgeObjectRelease();
    [v4 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    id v2 = 0;
  }
  id v6 = v2;
  return v3;
}

id sub_1007385EC()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLTransientStartEndFollowHUDController();
  return [super dealloc];
}

uint64_t sub_100738724()
{
  return type metadata accessor for CRLTransientStartEndFollowHUDController();
}

uint64_t type metadata accessor for CRLTransientStartEndFollowHUDController()
{
  uint64_t result = qword_10167D4D8;
  if (!qword_10167D4D8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_100738778()
{
  sub_1005E873C();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t initializeBufferWithCopyOfBuffer for FollowingParticipantInfo(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  char v4 = *(unsigned char *)(a2 + 8);
  sub_1007389A4(*(id *)a2, v4);
  *(void *)a1 = v3;
  *(unsigned char *)(a1 + 8) = v4;
  return a1;
}

id sub_1007389A4(id result, char a2)
{
  if ((a2 & 1) == 0) {
    return result;
  }
  return result;
}

void destroy for FollowingParticipantInfo(uint64_t a1)
{
}

void sub_1007389C0(id a1, char a2)
{
  if ((a2 & 1) == 0) {
}
  }

uint64_t assignWithCopy for FollowingParticipantInfo(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  char v4 = *(unsigned char *)(a2 + 8);
  sub_1007389A4(*(id *)a2, v4);
  id v5 = *(void **)a1;
  char v6 = *(unsigned char *)(a1 + 8);
  *(void *)a1 = v3;
  *(unsigned char *)(a1 + 8) = v4;
  sub_1007389C0(v5, v6);
  return a1;
}

uint64_t assignWithTake for FollowingParticipantInfo(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  char v4 = *((unsigned char *)a2 + 8);
  id v5 = *(void **)a1;
  char v6 = *(unsigned char *)(a1 + 8);
  *(void *)a1 = v3;
  *(unsigned char *)(a1 + 8) = v4;
  sub_1007389C0(v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for FollowingParticipantInfo(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 9)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 1) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for FollowingParticipantInfo(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)uint64_t result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 9) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 9) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 8) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_100738AEC(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 8);
}

uint64_t sub_100738AF4(uint64_t result, char a2)
{
  *(unsigned char *)(result + 8) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for FollowingParticipantInfo()
{
  return &type metadata for FollowingParticipantInfo;
}

char *sub_100738B10(uint64_t a1, void *a2, uint64_t a3, char a4, double a5)
{
  id v10 = objc_allocWithZone((Class)type metadata accessor for CRLTransientStartEndFollowHUDController());
  id v11 = a2;
  id v12 = (char *)sub_100738F44(a1, a2, 0, a3, a4, v10);
  swift_getObjectType();
  swift_deallocPartialClassInstance();
  id v13 = (double *)&v12[OBJC_IVAR____TtC8Freeform39CRLTransientStartEndFollowHUDController_canvasWidth];
  *id v13 = a5;
  *((unsigned char *)v13 + 8) = 0;
  if (v12[OBJC_IVAR____TtC8Freeform39CRLTransientStartEndFollowHUDController_setupDone] == 1)
  {
    id v14 = v12;
  }
  else
  {
    v12[OBJC_IVAR____TtC8Freeform39CRLTransientStartEndFollowHUDController_setupDone] = 1;
    NSString v15 = v12;
    sub_100E38C64();
    uint64_t v16 = OBJC_IVAR____TtC8Freeform39CRLTransientStartEndFollowHUDController_hudView;
    id v17 = *(id *)&v15[OBJC_IVAR____TtC8Freeform39CRLTransientStartEndFollowHUDController_hudView];
    id v18 = sub_1007383FC();
    [v17 addSubview:v18];

    [*(id *)&v15[OBJC_IVAR____TtC8Freeform39CRLTransientStartEndFollowHUDController_containerView] addSubview:*(void *)&v15[v16]];
    sub_1007375FC();
  }
  id v19 = [objc_allocWithZone((Class)UITapGestureRecognizer) initWithTarget:v12 action:"touchedHUDWithSender:"];
  [v19 setNumberOfTapsRequired:1];
  [*(id *)&v12[OBJC_IVAR____TtC8Freeform39CRLTransientStartEndFollowHUDController_hudView] addGestureRecognizer:v19];

  uint64_t v20 = sub_100736F9C();
  uint64_t v22 = v21;

  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  uint64_t v23 = (uint64_t *)&v12[OBJC_IVAR____TtC8Freeform39CRLTransientStartEndFollowHUDController_accessibilityAnnouncement];
  *uint64_t v23 = v20;
  v23[1] = v22;
  swift_bridgeObjectRelease();
  return v12;
}

char *sub_100738D34(uint64_t a1, void *a2, uint64_t a3, char a4, double a5)
{
  id v10 = objc_allocWithZone((Class)type metadata accessor for CRLTransientStartEndFollowHUDController());
  id v11 = (char *)sub_100738F44(a1, a2, 1, a3, a4, v10);
  swift_getObjectType();
  swift_deallocPartialClassInstance();
  id v12 = (double *)&v11[OBJC_IVAR____TtC8Freeform39CRLTransientStartEndFollowHUDController_canvasWidth];
  *id v12 = a5;
  *((unsigned char *)v12 + 8) = 0;
  if (v11[OBJC_IVAR____TtC8Freeform39CRLTransientStartEndFollowHUDController_setupDone] == 1)
  {
    id v13 = v11;
  }
  else
  {
    v11[OBJC_IVAR____TtC8Freeform39CRLTransientStartEndFollowHUDController_setupDone] = 1;
    id v14 = v11;
    sub_100E38C64();
    uint64_t v15 = OBJC_IVAR____TtC8Freeform39CRLTransientStartEndFollowHUDController_hudView;
    id v16 = *(id *)&v14[OBJC_IVAR____TtC8Freeform39CRLTransientStartEndFollowHUDController_hudView];
    id v17 = sub_1007383FC();
    [v16 addSubview:v17];

    [*(id *)&v14[OBJC_IVAR____TtC8Freeform39CRLTransientStartEndFollowHUDController_containerView] addSubview:*(void *)&v14[v15]];
    sub_1007375FC();
  }
  id v18 = [objc_allocWithZone((Class)UITapGestureRecognizer) initWithTarget:v11 action:"touchedHUDWithSender:"];
  [v18 setNumberOfTapsRequired:1];
  [*(id *)&v11[OBJC_IVAR____TtC8Freeform39CRLTransientStartEndFollowHUDController_hudView] addGestureRecognizer:v18];

  uint64_t v19 = sub_100736F9C();
  uint64_t v21 = v20;

  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  uint64_t v22 = (uint64_t *)&v11[OBJC_IVAR____TtC8Freeform39CRLTransientStartEndFollowHUDController_accessibilityAnnouncement];
  *uint64_t v22 = v19;
  v22[1] = v21;
  swift_bridgeObjectRelease();
  return v11;
}

id sub_100738F44(uint64_t a1, void *a2, char a3, uint64_t a4, char a5, unsigned char *a6)
{
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();
  *(void *)&a6[OBJC_IVAR____TtC8Freeform39CRLTransientStartEndFollowHUDController_type] = 2;
  *(void *)&a6[OBJC_IVAR____TtC8Freeform39CRLTransientStartEndFollowHUDController_minimumShowDuration] = 0x3FF0000000000000;
  *(void *)&a6[OBJC_IVAR____TtC8Freeform39CRLTransientStartEndFollowHUDController_maximumShowDuration] = 0x4014000000000000;
  id v10 = &a6[OBJC_IVAR____TtC8Freeform39CRLTransientStartEndFollowHUDController_timeStartedShowing];
  uint64_t v11 = type metadata accessor for Date();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v10, 1, 1, v11);
  *(void *)&a6[OBJC_IVAR____TtC8Freeform39CRLTransientStartEndFollowHUDController_hideTimer] = 0;
  a6[OBJC_IVAR____TtC8Freeform39CRLTransientStartEndFollowHUDController_shouldAutoHide] = 1;
  a6[OBJC_IVAR____TtC8Freeform39CRLTransientStartEndFollowHUDController_showing] = 0;
  a6[OBJC_IVAR____TtC8Freeform39CRLTransientStartEndFollowHUDController_animating] = 0;
  a6[OBJC_IVAR____TtC8Freeform39CRLTransientStartEndFollowHUDController_hiding] = 0;
  id v12 = &a6[OBJC_IVAR____TtC8Freeform39CRLTransientStartEndFollowHUDController_accessibilityAnnouncement];
  *id v12 = 0;
  v12[1] = 0;
  a6[OBJC_IVAR____TtC8Freeform39CRLTransientStartEndFollowHUDController_swipable] = 1;
  *(void *)&a6[OBJC_IVAR____TtC8Freeform39CRLTransientStartEndFollowHUDController_swipeGestureRecognizer] = 0;
  a6[OBJC_IVAR____TtC8Freeform39CRLTransientStartEndFollowHUDController_hideOnTouch] = 0;
  a6[OBJC_IVAR____TtC8Freeform39CRLTransientStartEndFollowHUDController_setupDone] = 0;
  *(void *)&a6[OBJC_IVAR____TtC8Freeform39CRLTransientStartEndFollowHUDController_height] = 0x4045000000000000;
  *(void *)&a6[OBJC_IVAR____TtC8Freeform39CRLTransientStartEndFollowHUDController_width] = 0;
  *(void *)&a6[OBJC_IVAR____TtC8Freeform39CRLTransientStartEndFollowHUDController_heightConstraint] = 0;
  *(void *)&a6[OBJC_IVAR____TtC8Freeform39CRLTransientStartEndFollowHUDController_constraints] = _swiftEmptyArrayStorage;
  id v13 = &a6[OBJC_IVAR____TtC8Freeform39CRLTransientStartEndFollowHUDController_canvasWidth];
  *(void *)id v13 = 0;
  v13[8] = 1;
  uint64_t v14 = OBJC_IVAR____TtC8Freeform39CRLTransientStartEndFollowHUDController_isStartFollow;
  a6[OBJC_IVAR____TtC8Freeform39CRLTransientStartEndFollowHUDController_isStartFollow] = 0;
  *(void *)&a6[OBJC_IVAR____TtC8Freeform39CRLTransientStartEndFollowHUDController____lazy_storage____label] = 0;
  swift_unknownObjectWeakAssign();
  uint64_t v15 = &a6[OBJC_IVAR____TtC8Freeform39CRLTransientStartEndFollowHUDController_followingParticipantInfo];
  *(void *)uint64_t v15 = a2;
  a3 &= 1u;
  v15[8] = a3;
  swift_unknownObjectWeakAssign();
  a6[v14] = a5;
  id v16 = objc_allocWithZone((Class)UIView);
  id v17 = a6;
  sub_1007389A4(a2, a3);
  id v18 = [v16 initWithFrame:0.0, 0.0, 0.0, 0.0];
  *(void *)&v17[OBJC_IVAR____TtC8Freeform39CRLTransientStartEndFollowHUDController_hudView] = v18;
  id v19 = [objc_allocWithZone((Class)UIView) initWithFrame:0.0, 0.0, 0.0, 0.0];
  *(void *)&v17[OBJC_IVAR____TtC8Freeform39CRLTransientStartEndFollowHUDController_containerView] = v19;

  v21.receiver = v17;
  v21.super_class = (Class)type metadata accessor for CRLTransientStartEndFollowHUDController();
  return [super init];
}

uint64_t sub_100739204()
{
  return _swift_deallocObject(v0, 24, 7);
}

void sub_10073923C(uint64_t a1)
{
  sub_100736CC0(a1, *(void *)(v1 + 16));
}

uint64_t sub_100739244(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100739254()
{
  return swift_release();
}

uint64_t sub_100739278(uint64_t a1)
{
  sub_100557A70(a1, (uint64_t)v4);
  if (!v5)
  {
    sub_10052E2B0((uint64_t)v4);
    goto LABEL_5;
  }
  type metadata accessor for CRLSceneInfo();
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_5:
    char v1 = 0;
    return v1 & 1;
  }
  char v1 = static UUID.== infix(_:_:)();

  return v1 & 1;
}

uint64_t sub_10073966C()
{
  return swift_unknownObjectRetain();
}

uint64_t sub_10073980C@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_10073A0F4((unint64_t *)&unk_10167D540, (void (*)(uint64_t))type metadata accessor for CRLSceneInfo);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  *a2 = *(void *)(v3 + OBJC_IVAR____TtC8Freeform12CRLSceneInfo__parentInfo);
  return swift_unknownObjectRetain();
}

uint64_t sub_1007398C0()
{
  return swift_unknownObjectRelease();
}

uint64_t sub_100739A74()
{
  swift_getKeyPath();
  sub_10073A0F4((unint64_t *)&unk_10167D540, (void (*)(uint64_t))type metadata accessor for CRLSceneInfo);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  return *(void *)(v0 + OBJC_IVAR____TtC8Freeform12CRLSceneInfo__editorClass);
}

uint64_t sub_100739C34@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_10073A0F4((unint64_t *)&unk_10167D540, (void (*)(uint64_t))type metadata accessor for CRLSceneInfo);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  uint64_t result = swift_release();
  *a2 = *(void *)(v3 + OBJC_IVAR____TtC8Freeform12CRLSceneInfo__editorClass);
  return result;
}

uint64_t sub_100739CE4()
{
  return swift_release();
}

id sub_100739DE0()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLSceneInfo();
  return [super dealloc];
}

uint64_t sub_100739EF0()
{
  return type metadata accessor for CRLSceneInfo();
}

uint64_t type metadata accessor for CRLSceneInfo()
{
  uint64_t result = qword_10167D530;
  if (!qword_10167D530) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100739F44()
{
  uint64_t result = type metadata accessor for UUID();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for ObservationRegistrar();
    if (v2 <= 0x3F) {
      return swift_updateClassMetadata2();
    }
  }
  return result;
}

void sub_10073A03C()
{
  *(void *)(*(void *)(v0 + 16) + OBJC_IVAR____TtC8Freeform12CRLSceneInfo__editorClass) = *(void *)(v0 + 24);
}

uint64_t sub_10073A058()
{
  return sub_10073A070();
}

uint64_t sub_10073A070()
{
  *(void *)(*(void *)(v0 + 16) + OBJC_IVAR____TtC8Freeform12CRLSceneInfo__parentInfo) = *(void *)(v0 + 24);
  swift_unknownObjectRetain();
  return swift_unknownObjectRelease();
}

unint64_t sub_10073A0B4()
{
  unint64_t result = qword_101690720;
  if (!qword_101690720)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_101690720);
  }
  return result;
}

uint64_t sub_10073A0F4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_10073A13C()
{
}

uint64_t sub_10073A154@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t sub_10073A160()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_10073A218@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_10073EF10(&qword_10167D910, (void (*)(uint64_t))type metadata accessor for DrawingRecognition);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  swift_beginAccess();
  *a2 = *(void *)(v3 + 32);
  return swift_bridgeObjectRetain();
}

uint64_t sub_10073A2D8()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_10073A3B8(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 32) = a2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

void *sub_10073A420(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v4 = v3;
  ObservationRegistrar.init()();
  v4[4] = _swiftEmptyArrayStorage;
  v4[2] = a1;
  v4[3] = a2;
  uint64_t v23 = (double **)(v4 + 4);
  swift_bridgeObjectRetain_n();
  NSString v8 = sub_1006BA36C(a3);
  swift_bridgeObjectRelease();
  v26[0] = (uint64_t)v8;
  sub_10073E358(v26);
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(v26[0] + 16);
  if (v9)
  {
    uint64_t v22 = (uint64_t)v4;
    id v10 = (uint64_t *)(swift_retain() + 40);
    do
    {
      if (*(void *)(a3 + 16))
      {
        uint64_t v12 = *(v10 - 1);
        uint64_t v11 = *v10;
        swift_bridgeObjectRetain_n();
        unint64_t v13 = sub_100955F50(v12, v11);
        if (v14)
        {
          uint64_t v15 = (uint64_t *)(*(void *)(a3 + 56) + 16 * v13);
          uint64_t v24 = *v15;
          uint64_t v25 = v15[1];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          swift_getKeyPath();
          v26[0] = (uint64_t)v4;
          sub_10073EF10(&qword_10167D910, (void (*)(uint64_t))type metadata accessor for DrawingRecognition);
          swift_bridgeObjectRetain();
          ObservationRegistrar.access<A, B>(_:keyPath:)();
          swift_release();
          v26[0] = (uint64_t)v4;
          swift_getKeyPath();
          ObservationRegistrar.willSet<A, B>(_:keyPath:)();
          swift_release();
          swift_beginAccess();
          id v16 = (double *)v4[4];
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          v4[4] = v16;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            id v16 = sub_100F6407C(0, *((void *)v16 + 2) + 1, 1, v16);
            *uint64_t v23 = v16;
          }
          unint64_t v19 = *((void *)v16 + 2);
          unint64_t v18 = *((void *)v16 + 3);
          if (v19 >= v18 >> 1)
          {
            id v16 = sub_100F6407C((double *)(v18 > 1), v19 + 1, 1, v16);
            *uint64_t v23 = v16;
          }
          *((void *)v16 + 2) = v19 + 1;
          uint64_t v20 = &v16[4 * v19];
          *((void *)v20 + 4) = v12;
          *((void *)v20 + 5) = v11;
          *((void *)v20 + 6) = v24;
          *((void *)v20 + 7) = v25;
          swift_endAccess();
          int v4 = (void *)v22;
          v26[0] = v22;
          swift_getKeyPath();
          ObservationRegistrar.didSet<A, B>(_:keyPath:)();
          swift_bridgeObjectRelease();
          swift_release();
        }
        else
        {
          swift_bridgeObjectRelease_n();
        }
      }
      v10 += 2;
      --v9;
    }
    while (v9);
    swift_bridgeObjectRelease();
    swift_release_n();
  }
  else
  {
    swift_release();
    swift_bridgeObjectRelease();
  }
  return v4;
}

uint64_t sub_10073A718()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v1 = v0 + OBJC_IVAR____TtC8FreeformP33_66D629DA838D5AC12739A350302C62AE18DrawingRecognition___observationRegistrar;
  uint64_t v2 = type metadata accessor for ObservationRegistrar();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  return swift_deallocClassInstance();
}

uint64_t sub_10073A7C8()
{
  return type metadata accessor for DrawingRecognition(0);
}

uint64_t type metadata accessor for DrawingRecognition(uint64_t a1)
{
  return sub_100512D5C(a1, qword_10167D580);
}

uint64_t sub_10073A7F0()
{
  uint64_t result = type metadata accessor for ObservationRegistrar();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_10073A898@<X0>(void *a1@<X8>)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 24);
  *a1 = *(void *)(*(void *)v1 + 16);
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t sub_10073A8A8@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  id v43 = a2;
  uint64_t v3 = sub_1005057FC((uint64_t *)&unk_10167D940);
  uint64_t v41 = *(void *)(v3 - 8);
  uint64_t v42 = v3;
  __chkstk_darwin(v3, v4);
  id v40 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6, v7);
  id v44 = (char *)&v37 - v8;
  uint64_t v39 = static VerticalAlignment.center.getter();
  uint64_t v9 = a1[3];
  id v46 = (void *)a1[2];
  uint64_t v47 = v9;
  sub_10052E310();
  swift_bridgeObjectRetain();
  uint64_t v10 = Text.init<A>(_:)();
  uint64_t v12 = v11;
  char v14 = v13 & 1;
  static Font.title3.getter();
  uint64_t v15 = Text.font(_:)();
  uint64_t v17 = v16;
  char v19 = v18;
  swift_release();
  sub_1006A7D28(v10, v12, v14);
  swift_bridgeObjectRelease();
  uint64_t v20 = Text.underline(_:color:)();
  uint64_t v37 = v21;
  uint64_t v38 = v22;
  char v24 = v23 & 1;
  sub_1006A7D28(v15, v17, v19 & 1);
  swift_bridgeObjectRelease();
  swift_getKeyPath();
  id v46 = a1;
  sub_10073EF10(&qword_10167D910, (void (*)(uint64_t))type metadata accessor for DrawingRecognition);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  swift_beginAccess();
  uint64_t v45 = a1[4];
  swift_bridgeObjectRetain();
  sub_1005057FC(&qword_10167D950);
  sub_100523288(&qword_10167D958, &qword_10167D950);
  sub_10073F038();
  sub_10073F08C();
  uint64_t v25 = v44;
  ForEach<>.init(_:content:)();
  id v27 = v40;
  uint64_t v26 = v41;
  id v28 = *(void (**)(char *, char *, uint64_t))(v41 + 16);
  uint64_t v29 = v42;
  v28(v40, v25, v42);
  id v30 = v43;
  uint64_t v31 = v38;
  *id v43 = v39;
  v30[1] = 0;
  *((unsigned char *)v30 + 16) = 1;
  uint64_t v32 = v37;
  v30[3] = v20;
  v30[4] = v32;
  LOBYTE(v25) = v24;
  *((unsigned char *)v30 + 40) = v24;
  v30[6] = v31;
  id v33 = v30;
  uint64_t v34 = sub_1005057FC(&qword_10167D970);
  v28((char *)v33 + *(int *)(v34 + 48), v27, v29);
  sub_10073F0E0(v20, v32, (char)v25);
  id v35 = *(void (**)(char *, uint64_t))(v26 + 8);
  swift_bridgeObjectRetain();
  v35(v44, v29);
  v35(v27, v29);
  sub_1006A7D28(v20, v32, (char)v25);
  return swift_bridgeObjectRelease();
}

uint64_t sub_10073AC60@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v2 = a1[1];
  uint64_t v3 = a1[2];
  uint64_t v4 = a1[3];
  *a2 = *a1;
  a2[1] = v2;
  a2[2] = v3;
  a2[3] = v4;
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t sub_10073ACB0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1005057FC(&qword_10167D928);
  __chkstk_darwin(v3 - 8, v4);
  uint64_t v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *v1;
  *(void *)uint64_t v6 = static HorizontalAlignment.center.getter();
  *((void *)v6 + 1) = 0;
  v6[16] = 1;
  uint64_t v8 = sub_1005057FC(&qword_10167D930);
  sub_10073A8A8(v7, (uint64_t *)&v6[*(int *)(v8 + 44)]);
  LOBYTE(v7) = static Edge.Set.bottom.getter();
  EdgeInsets.init(_all:)();
  uint64_t v10 = v9;
  uint64_t v12 = v11;
  uint64_t v14 = v13;
  uint64_t v16 = v15;
  sub_100522E9C((uint64_t)v6, a1, &qword_10167D928);
  uint64_t v17 = a1 + *(int *)(sub_1005057FC(&qword_10167D938) + 36);
  *(unsigned char *)uint64_t v17 = (_BYTE)v7;
  *(void *)(v17 + 8) = v10;
  *(void *)(v17 + 16) = v12;
  *(void *)(v17 + 24) = v14;
  *(void *)(v17 + 32) = v16;
  *(unsigned char *)(v17 + 40) = 0;
  return sub_100522F00((uint64_t)v6, &qword_10167D928);
}

uint64_t sub_10073ADC8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  *(void *)&long long v47 = a3;
  *((void *)&v47 + 1) = a4;
  *(void *)&__src[0] = a1;
  *((void *)&__src[0] + 1) = a2;
  sub_10052E310();
  swift_bridgeObjectRetain();
  uint64_t v5 = Text.init<A>(_:)();
  uint64_t v7 = v6;
  char v9 = v8 & 1;
  static Font.body.getter();
  uint64_t v10 = Text.font(_:)();
  uint64_t v12 = v11;
  char v14 = v13;
  swift_release();
  sub_1006A7D28(v5, v7, v9);
  swift_bridgeObjectRelease();
  uint64_t v15 = Text.bold()();
  uint64_t v17 = v16;
  char v19 = v18 & 1;
  sub_1006A7D28(v10, v12, v14 & 1);
  swift_bridgeObjectRelease();
  static Edge.Set.leading.getter();
  EdgeInsets.init(_all:)();
  static Alignment.leading.getter();
  sub_1007B5820(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, __src, 0.0, 1, 0.0, 1);
  sub_1006A7D28(v15, v17, v19);
  swift_bridgeObjectRelease();
  long long v69 = __src[8];
  long long v70 = __src[9];
  long long v71 = __src[10];
  long long v72 = __src[11];
  long long v65 = __src[4];
  long long v66 = __src[5];
  long long v67 = __src[6];
  long long v68 = __src[7];
  long long v61 = __src[0];
  long long v62 = __src[1];
  long long v63 = __src[2];
  long long v64 = __src[3];
  __src[0] = v47;
  swift_bridgeObjectRetain();
  uint64_t v20 = Text.init<A>(_:)();
  uint64_t v22 = v21;
  char v24 = v23 & 1;
  static Font.body.getter();
  uint64_t v25 = Text.font(_:)();
  uint64_t v27 = v26;
  LOBYTE(v12) = v28;
  swift_release();
  char v29 = v12 & 1;
  sub_1006A7D28(v20, v22, v24);
  swift_bridgeObjectRelease();
  uint64_t v30 = Text.italic()();
  uint64_t v32 = v31;
  LOBYTE(v12) = v33 & 1;
  sub_1006A7D28(v25, v27, v29);
  swift_bridgeObjectRelease();
  static Edge.Set.leading.getter();
  EdgeInsets.init(_all:)();
  static Alignment.leading.getter();
  sub_1007B5820(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, __src, 0.0, 1, 0.0, 1);
  sub_1006A7D28(v30, v32, v12);
  swift_bridgeObjectRelease();
  long long v57 = __src[8];
  long long v58 = __src[9];
  long long v59 = __src[10];
  long long v60 = __src[11];
  long long v53 = __src[4];
  long long v54 = __src[5];
  long long v55 = __src[6];
  long long v56 = __src[7];
  long long v49 = __src[0];
  long long v50 = __src[1];
  long long v51 = __src[2];
  long long v52 = __src[3];
  v73[8] = v69;
  v73[9] = v70;
  v73[10] = v71;
  v73[11] = v72;
  v73[4] = v65;
  v73[5] = v66;
  v73[6] = v67;
  v73[7] = v68;
  v73[0] = v61;
  v73[1] = v62;
  v73[2] = v63;
  v73[3] = v64;
  long long v34 = __src[8];
  long long v35 = __src[9];
  v74[8] = __src[8];
  v74[9] = __src[9];
  long long v36 = __src[10];
  long long v37 = __src[11];
  v74[10] = __src[10];
  v74[11] = __src[11];
  long long v38 = __src[4];
  long long v39 = __src[5];
  v74[4] = __src[4];
  v74[5] = __src[5];
  long long v40 = __src[6];
  long long v41 = __src[7];
  v74[6] = __src[6];
  v74[7] = __src[7];
  long long v42 = __src[0];
  long long v43 = __src[1];
  v74[0] = __src[0];
  v74[1] = __src[1];
  long long v45 = __src[2];
  long long v44 = __src[3];
  v74[2] = __src[2];
  v74[3] = __src[3];
  __src[8] = v69;
  __src[9] = v70;
  __src[10] = v71;
  __src[11] = v72;
  __src[4] = v65;
  __src[5] = v66;
  __src[6] = v67;
  __src[7] = v68;
  __src[0] = v61;
  __src[1] = v62;
  __src[2] = v63;
  __src[3] = v64;
  __src[20] = v34;
  __src[21] = v35;
  __src[22] = v36;
  __src[23] = v37;
  __src[16] = v38;
  __src[17] = v39;
  __src[18] = v40;
  __src[19] = v41;
  __src[12] = v42;
  __src[13] = v43;
  __src[14] = v45;
  __src[15] = v44;
  memcpy(a5, __src, 0x180uLL);
  v76[8] = v57;
  v76[9] = v58;
  v76[10] = v59;
  v76[11] = v60;
  v76[4] = v53;
  v76[5] = v54;
  v76[6] = v55;
  v76[7] = v56;
  v76[0] = v49;
  v76[1] = v50;
  v76[2] = v51;
  v76[3] = v52;
  sub_10073F154((uint64_t)v73);
  sub_10073F154((uint64_t)v74);
  sub_10073F194((uint64_t)v76);
  v77[8] = v69;
  v77[9] = v70;
  v77[10] = v71;
  v77[11] = v72;
  v77[4] = v65;
  v77[5] = v66;
  v77[6] = v67;
  v77[7] = v68;
  v77[0] = v61;
  v77[1] = v62;
  v77[2] = v63;
  v77[3] = v64;
  return sub_10073F194((uint64_t)v77);
}

void *sub_10073B304@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1;
  uint64_t v4 = v1[1];
  uint64_t v6 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v7 = static HorizontalAlignment.center.getter();
  sub_10073ADC8(v3, v4, v6, v5, __src);
  v18[392] = 1;
  memcpy(&v18[7], __src, 0x180uLL);
  LOBYTE(v5) = static Edge.Set.bottom.getter();
  EdgeInsets.init(_all:)();
  uint64_t v9 = v8;
  uint64_t v11 = v10;
  uint64_t v13 = v12;
  uint64_t v15 = v14;
  char v19 = 0;
  *(void *)a1 = v7;
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 1;
  uint64_t result = memcpy((void *)(a1 + 17), v18, 0x187uLL);
  *(unsigned char *)(a1 + 408) = v5;
  *(void *)(a1 + 416) = v9;
  *(void *)(a1 + 424) = v11;
  *(void *)(a1 + 432) = v13;
  *(void *)(a1 + 440) = v15;
  *(unsigned char *)(a1 + 448) = v19;
  return result;
}

uint64_t sub_10073B3EC()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_10073B490@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_10073EF10(&qword_10167D8E8, (void (*)(uint64_t))type metadata accessor for CRLHandwritingDebugModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  *a2 = *(void *)(v3 + 16);
  return swift_bridgeObjectRetain();
}

uint64_t sub_10073B53C()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_10073B61C(uint64_t a1)
{
  uint64_t v1 = a1;
  uint64_t v2 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v4 = v3;
  if (!*(void *)(v1 + 16))
  {
    swift_bridgeObjectRetain();
    goto LABEL_6;
  }
  uint64_t v5 = v2;
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_100955F50(v5, v4);
  if ((v7 & 1) == 0)
  {
LABEL_6:
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  uint64_t v8 = *(void *)(*(void *)(v1 + 56) + 8 * v6);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  type metadata accessor for DrawingRecognition(0);
  swift_allocObject();
  sub_10073A420(0xD00000000000001ALL, 0x800000010124B7C0, v8);
  swift_retain();
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) < *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    goto LABEL_4;
  }
LABEL_32:
  specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
LABEL_4:
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  uint64_t v9 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  sub_10095C580(v9, v10);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v1 = a1;
LABEL_7:
  int64_t v11 = 0;
  uint64_t v12 = v1 + 64;
  uint64_t v13 = 1 << *(unsigned char *)(v1 + 32);
  uint64_t v14 = -1;
  if (v13 < 64) {
    uint64_t v14 = ~(-1 << v13);
  }
  unint64_t v15 = v14 & *(void *)(v1 + 64);
  int64_t v16 = (unint64_t)(v13 + 63) >> 6;
  if (v15)
  {
LABEL_10:
    unint64_t v17 = __clz(__rbit64(v15));
    v15 &= v15 - 1;
    unint64_t v18 = v17 | (v11 << 6);
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v19 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
LABEL_31:
      __break(1u);
      goto LABEL_32;
    }
    if (v19 >= v16) {
      goto LABEL_29;
    }
    unint64_t v20 = *(void *)(v12 + 8 * v19);
    ++v11;
    if (!v20)
    {
      int64_t v11 = v19 + 1;
      if (v19 + 1 >= v16) {
        goto LABEL_29;
      }
      unint64_t v20 = *(void *)(v12 + 8 * v11);
      if (!v20)
      {
        int64_t v11 = v19 + 2;
        if (v19 + 2 >= v16) {
          goto LABEL_29;
        }
        unint64_t v20 = *(void *)(v12 + 8 * v11);
        if (!v20) {
          break;
        }
      }
    }
LABEL_24:
    unint64_t v15 = (v20 - 1) & v20;
    unint64_t v18 = __clz(__rbit64(v20)) + (v11 << 6);
LABEL_25:
    uint64_t v22 = (uint64_t *)(*(void *)(v1 + 48) + 16 * v18);
    uint64_t v23 = *v22;
    uint64_t v24 = v22[1];
    uint64_t v25 = *(void *)(*(void *)(v1 + 56) + 8 * v18);
    type metadata accessor for DrawingRecognition(0);
    swift_allocObject();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_10073A420(v23, v24, v25);
    swift_retain();
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
    swift_release();
    if (v15) {
      goto LABEL_10;
    }
  }
  int64_t v21 = v19 + 3;
  if (v21 < v16)
  {
    unint64_t v20 = *(void *)(v12 + 8 * v21);
    if (!v20)
    {
      while (1)
      {
        int64_t v11 = v21 + 1;
        if (__OFADD__(v21, 1)) {
          goto LABEL_31;
        }
        if (v11 >= v16) {
          goto LABEL_29;
        }
        unint64_t v20 = *(void *)(v12 + 8 * v11);
        ++v21;
        if (v20) {
          goto LABEL_24;
        }
      }
    }
    int64_t v11 = v21;
    goto LABEL_24;
  }
LABEL_29:
  swift_release();
  uint64_t KeyPath = swift_getKeyPath();
  __chkstk_darwin(KeyPath, v27);
  sub_10073EF10(&qword_10167D8E8, (void (*)(uint64_t))type metadata accessor for CRLHandwritingDebugModel);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_10073BA04()
{
  swift_bridgeObjectRelease();
  uint64_t v1 = v0 + OBJC_IVAR____TtC8Freeform24CRLHandwritingDebugModel___observationRegistrar;
  uint64_t v2 = type metadata accessor for ObservationRegistrar();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  return swift_deallocClassInstance();
}

uint64_t sub_10073BAAC()
{
  return type metadata accessor for CRLHandwritingDebugModel(0);
}

uint64_t type metadata accessor for CRLHandwritingDebugModel(uint64_t a1)
{
  return sub_100512D5C(a1, qword_10167D688);
}

uint64_t sub_10073BAD4()
{
  uint64_t result = type metadata accessor for ObservationRegistrar();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for CRLHandwritingDebugViewController(uint64_t a1)
{
  return sub_100512D5C(a1, (uint64_t *)&unk_10167D768);
}

uint64_t sub_10073BB94()
{
  return swift_initClassMetadata2();
}

uint64_t sub_10073BBE4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v46 = a2;
  uint64_t v47 = type metadata accessor for ToolbarTitleDisplayMode();
  uint64_t v45 = *(void *)(v47 - 8);
  __chkstk_darwin(v47, v3);
  long long v44 = (char *)&v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1005057FC(&qword_10167D858);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5, v7);
  uint64_t v9 = (char *)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1005057FC(&qword_10167D838);
  __chkstk_darwin(v10, v11);
  uint64_t v13 = (char *)&v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = sub_1005057FC(&qword_10167D830);
  uint64_t v41 = *(void *)(v40 - 8);
  __chkstk_darwin(v40, v14);
  int64_t v16 = (char *)&v40 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_1005057FC(&qword_10167D828);
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v42 = v17;
  uint64_t v43 = v18;
  __chkstk_darwin(v17, v19);
  int64_t v21 = (char *)&v40 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = a1;
  static Axis.Set.vertical.getter();
  sub_1005057FC(&qword_10167D868);
  sub_10073E040();
  ScrollView.init(_:showsIndicators:content:)();
  char v22 = static Edge.Set.all.getter();
  EdgeInsets.init(_all:)();
  uint64_t v24 = v23;
  uint64_t v26 = v25;
  uint64_t v28 = v27;
  uint64_t v30 = v29;
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v13, v9, v5);
  uint64_t v31 = &v13[*(int *)(v10 + 36)];
  *uint64_t v31 = v22;
  *((void *)v31 + 1) = v24;
  *((void *)v31 + 2) = v26;
  *((void *)v31 + 3) = v28;
  *((void *)v31 + 4) = v30;
  v31[40] = 0;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  uint64_t v48 = a1;
  uint64_t v32 = sub_1005057FC(&qword_10167D840);
  unint64_t v33 = sub_10073DF98();
  uint64_t v34 = sub_100523288(&qword_10167D860, &qword_10167D840);
  View.toolbar<A>(content:)();
  sub_100522F00((uint64_t)v13, &qword_10167D838);
  LocalizedStringKey.init(stringLiteral:)();
  uint64_t v50 = v10;
  uint64_t v51 = v32;
  unint64_t v52 = v33;
  uint64_t v53 = v34;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v36 = v40;
  View.navigationTitle(_:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v41 + 8))(v16, v36);
  long long v37 = v44;
  static ToolbarTitleDisplayMode.inline.getter();
  uint64_t v50 = v36;
  uint64_t v51 = OpaqueTypeConformance2;
  swift_getOpaqueTypeConformance2();
  uint64_t v38 = v42;
  View.toolbarTitleDisplayMode(_:)();
  (*(void (**)(char *, uint64_t))(v45 + 8))(v37, v47);
  return (*(uint64_t (**)(char *, uint64_t))(v43 + 8))(v21, v38);
}

uint64_t sub_10073C108@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v23 = a2;
  uint64_t v24 = sub_1005057FC(&qword_10167D890);
  uint64_t v3 = *(void *)(v24 - 8);
  __chkstk_darwin(v24, v4);
  uint64_t v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_1005057FC(&qword_10167D8E0);
  __chkstk_darwin(v21, v7);
  uint64_t v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_1005057FC(&qword_10167D880);
  uint64_t v10 = *(void *)(v22 - 8);
  __chkstk_darwin(v22, v11);
  uint64_t v13 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = *(void *)(a1 + 48);
  swift_getKeyPath();
  uint64_t v25 = v14;
  sub_10073EF10(&qword_10167D8E8, (void (*)(uint64_t))type metadata accessor for CRLHandwritingDebugModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  unint64_t v15 = *(void *)(v14 + 16);
  if (v15 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v18 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v18) {
      goto LABEL_3;
    }
  }
  else if (*(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_3:
    swift_getKeyPath();
    uint64_t v25 = v14;
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    uint64_t v25 = *(void *)(v14 + 16);
    swift_bridgeObjectRetain();
    sub_1005057FC(&qword_10167D8F0);
    sub_100523288(&qword_10167D8F8, &qword_10167D8F0);
    sub_10073E154();
    sub_10073EF10(&qword_10167D900, (void (*)(uint64_t))type metadata accessor for DrawingRecognition);
    ForEach<>.init(_:content:)();
    uint64_t v16 = v24;
    (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v9, v6, v24);
    swift_storeEnumTagMultiPayload();
    sub_100523288(&qword_10167D878, &qword_10167D880);
    sub_10073E0E0();
    _ConditionalContent<>.init(storage:)();
    return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v6, v16);
  }
  LocalizedStringKey.init(stringLiteral:)();
  Label<>.init(_:systemImage:)();
  uint64_t v19 = v22;
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v9, v13, v22);
  swift_storeEnumTagMultiPayload();
  sub_100523288(&qword_10167D878, &qword_10167D880);
  sub_10073E0E0();
  _ConditionalContent<>.init(storage:)();
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v13, v19);
}

uint64_t sub_10073C5C0@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  *a2 = *a1;
  return swift_retain();
}

uint64_t sub_10073C5CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v33 = a2;
  uint64_t v3 = sub_1005057FC(&qword_10167D8A0);
  __chkstk_darwin(v3, v4);
  uint64_t v6 = (char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1005057FC(&qword_10167D8A8);
  uint64_t v31 = *(void *)(v7 - 8);
  uint64_t v32 = v7;
  __chkstk_darwin(v7, v8);
  uint64_t v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11, v12);
  uint64_t v14 = (char *)&v29 - v13;
  uint64_t v15 = type metadata accessor for ToolbarItemPlacement();
  __chkstk_darwin(v15 - 8, v16);
  uint64_t v34 = sub_1005057FC(&qword_10167D8B0);
  uint64_t v17 = *(void *)(v34 - 8);
  __chkstk_darwin(v34, v18);
  uint64_t v20 = (char *)&v29 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  static ToolbarItemPlacement.topBarLeading.getter();
  uint64_t v37 = a1;
  sub_1005057FC(&qword_10167A588);
  sub_1006A7908();
  uint64_t v30 = v20;
  ToolbarItem<>.init(placement:content:)();
  static ToolbarItemPlacement.topBarTrailing.getter();
  uint64_t v36 = a1;
  sub_1005057FC(&qword_10167D8B8);
  sub_10073E1C0();
  ToolbarItem<>.init(placement:content:)();
  static ToolbarItemPlacement.topBarTrailing.getter();
  uint64_t v35 = a1;
  ToolbarItem<>.init(placement:content:)();
  uint64_t v21 = &v6[*(int *)(v3 + 48)];
  uint64_t v22 = &v6[*(int *)(v3 + 64)];
  (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v6, v20, v34);
  uint64_t v23 = v31;
  uint64_t v24 = *(void (**)(char *, char *, uint64_t))(v31 + 16);
  uint64_t v25 = v21;
  uint64_t v26 = v32;
  v24(v25, v14, v32);
  v24(v22, v10, v26);
  TupleToolbarContent.init(_:)();
  uint64_t v27 = *(void (**)(char *, uint64_t))(v23 + 8);
  v27(v10, v26);
  v27(v14, v26);
  return (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v30, v34);
}

uint64_t sub_10073C968@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v39 = a2;
  uint64_t v3 = sub_1005057FC(&qword_10167A598);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v36 = v3;
  uint64_t v37 = v4;
  __chkstk_darwin(v3, v5);
  uint64_t v7 = (char *)v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = sub_1005057FC(&qword_10167A5B8);
  uint64_t v35 = *(void *)(v38 - 8);
  __chkstk_darwin(v38, v8);
  uint64_t v34 = (char *)v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = LocalizedStringKey.init(stringLiteral:)();
  uint64_t v32 = v11;
  uint64_t v33 = v10;
  v30[1] = v12;
  uint64_t v31 = v13;
  uint64_t v14 = *a1;
  uint64_t v15 = a1[2];
  uint64_t v16 = a1[4];
  uint64_t v17 = swift_allocObject();
  long long v18 = *((_OWORD *)a1 + 1);
  *(_OWORD *)(v17 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v17 + 32) = v18;
  *(_OWORD *)(v17 + 48) = *((_OWORD *)a1 + 2);
  *(void *)(v17 + 64) = a1[6];
  sub_1005173A0(v14);
  sub_1005173A0(v15);
  sub_1005173A0(v16);
  swift_retain();
  Button<>.init(_:action:)();
  static Font.Weight.bold.getter();
  sub_100523288(&qword_10167A5A0, &qword_10167A598);
  uint64_t v19 = v34;
  uint64_t v20 = v36;
  View.fontWeight(_:)();
  (*(void (**)(char *, uint64_t))(v37 + 8))(v7, v20);
  uint64_t v21 = static Color.accentColor.getter();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v23 = v35;
  uint64_t v24 = v39;
  uint64_t v25 = v19;
  uint64_t v26 = v19;
  uint64_t v27 = v38;
  (*(void (**)(uint64_t, char *, uint64_t))(v35 + 16))(v39, v25, v38);
  uint64_t v28 = (uint64_t *)(v24 + *(int *)(sub_1005057FC(&qword_10167A588) + 36));
  *uint64_t v28 = KeyPath;
  v28[1] = v21;
  return (*(uint64_t (**)(char *, uint64_t))(v23 + 8))(v26, v27);
}

uint64_t sub_10073CC50@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v34 = a2;
  uint64_t v3 = sub_1005057FC((uint64_t *)&unk_10167D8D0);
  uint64_t v32 = *(void *)(v3 - 8);
  uint64_t v33 = v3;
  __chkstk_darwin(v3, v4);
  uint64_t v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = LocalizedStringKey.init(stringLiteral:)();
  uint64_t v9 = v8;
  char v11 = v10;
  uint64_t v13 = v12;
  uint64_t v14 = *a1;
  uint64_t v15 = a1[4];
  uint64_t v16 = a1[5];
  uint64_t v28 = a1[2];
  uint64_t v29 = v16;
  uint64_t v17 = a1[6];
  uint64_t v30 = v15;
  uint64_t v31 = v17;
  uint64_t v18 = swift_allocObject();
  long long v19 = *((_OWORD *)a1 + 1);
  *(_OWORD *)(v18 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v18 + 32) = v19;
  *(_OWORD *)(v18 + 48) = *((_OWORD *)a1 + 2);
  *(void *)(v18 + 64) = a1[6];
  uint64_t v35 = v7;
  uint64_t v36 = v9;
  char v37 = v11 & 1;
  uint64_t v38 = v13;
  unint64_t v39 = 0xD000000000000014;
  unint64_t v40 = 0x800000010124B720;
  sub_1005173A0(v14);
  sub_1005173A0(v28);
  sub_1005173A0(v30);
  swift_retain();
  sub_1005057FC(&qword_10167D880);
  sub_100523288(&qword_10167D878, &qword_10167D880);
  Button.init(action:label:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v20 = static Color.accentColor.getter();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v23 = v32;
  uint64_t v22 = v33;
  uint64_t v24 = v34;
  (*(void (**)(uint64_t, char *, uint64_t))(v32 + 16))(v34, v6, v33);
  uint64_t v25 = (uint64_t *)(v24 + *(int *)(sub_1005057FC(&qword_10167D8B8) + 36));
  uint64_t *v25 = KeyPath;
  v25[1] = v20;
  return (*(uint64_t (**)(char *, uint64_t))(v23 + 8))(v6, v22);
}

uint64_t sub_10073CED8@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v34 = a2;
  uint64_t v3 = sub_1005057FC((uint64_t *)&unk_10167D8D0);
  uint64_t v32 = *(void *)(v3 - 8);
  uint64_t v33 = v3;
  __chkstk_darwin(v3, v4);
  uint64_t v31 = (char *)v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = LocalizedStringKey.init(stringLiteral:)();
  uint64_t v8 = v7;
  char v10 = v9;
  uint64_t v12 = v11;
  uint64_t v13 = *a1;
  uint64_t v14 = a1[2];
  uint64_t v15 = a1[4];
  v28[1] = a1[5];
  uint64_t v29 = v15;
  uint64_t v30 = a1[6];
  uint64_t v16 = swift_allocObject();
  long long v17 = *((_OWORD *)a1 + 1);
  *(_OWORD *)(v16 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v16 + 32) = v17;
  *(_OWORD *)(v16 + 48) = *((_OWORD *)a1 + 2);
  *(void *)(v16 + 64) = a1[6];
  uint64_t v35 = v6;
  uint64_t v36 = v8;
  char v37 = v10 & 1;
  uint64_t v38 = v12;
  uint64_t v39 = 0x6C632E776F727261;
  unint64_t v40 = 0xEF657369776B636FLL;
  sub_1005173A0(v13);
  sub_1005173A0(v14);
  sub_1005173A0(v29);
  swift_retain();
  sub_1005057FC(&qword_10167D880);
  sub_100523288(&qword_10167D878, &qword_10167D880);
  uint64_t v18 = v31;
  Button.init(action:label:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v19 = static Color.accentColor.getter();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v21 = v32;
  uint64_t v22 = v34;
  uint64_t v23 = v18;
  uint64_t v24 = v18;
  uint64_t v25 = v33;
  (*(void (**)(uint64_t, char *, uint64_t))(v32 + 16))(v34, v23, v33);
  uint64_t v26 = (uint64_t *)(v22 + *(int *)(sub_1005057FC(&qword_10167D8B8) + 36));
  *uint64_t v26 = KeyPath;
  v26[1] = v19;
  return (*(uint64_t (**)(char *, uint64_t))(v21 + 8))(v24, v25);
}

uint64_t sub_10073D17C()
{
  return NavigationStack.init<>(root:)();
}

uint64_t sub_10073D2F4()
{
  uint64_t v1 = sub_1005057FC(&qword_1016842F0);
  __chkstk_darwin(v1 - 8, v2);
  uint64_t v4 = (char *)v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for PKDrawing();
  uint64_t v6 = *(void *)(v5 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v4, 1, 1, v5);
  type metadata accessor for CRLFreehandDrawingItem();
  uint64_t v7 = v0;
  v8.super.Class isa = Array._bridgeToObjectiveC()().super.isa;
  Class isa = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) != 1)
  {
    Class isa = PKDrawing._bridgeToObjectiveC()().super.isa;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v4, v5);
  }
  id v10 = [objc_allocWithZone((Class)CRLHandwritingRecognitionStatusHelper) initWithFreehandDrawingItems:v8.super.isa andConsolidatedDrawing:isa];

  *(void *)&v7[qword_10167D760] = v10;
  type metadata accessor for CRLHandwritingDebugModel(0);
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = _swiftEmptyArrayStorage;
  ObservationRegistrar.init()();
  memset(v13, 0, sizeof(v13));
  uint64_t v14 = v11;
  return UIHostingController.init(coder:rootView:)();
}

uint64_t sub_10073D4E4(uint64_t a1, uint64_t a2, void *a3)
{
  id v3 = a3;
  return sub_10073D2F4();
}

char *sub_10073D50C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1005057FC(&qword_1016842F0);
  __chkstk_darwin(v4 - 8, v5);
  uint64_t v7 = (char *)v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100522E9C(a2, (uint64_t)v7, &qword_1016842F0);
  type metadata accessor for CRLFreehandDrawingItem();
  NSArray v8 = v2;
  v9.super.Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  uint64_t v10 = type metadata accessor for PKDrawing();
  uint64_t v11 = *(void *)(v10 - 8);
  Class isa = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v7, 1, v10) != 1)
  {
    Class isa = PKDrawing._bridgeToObjectiveC()().super.isa;
    (*(void (**)(char *, uint64_t))(v11 + 8))(v7, v10);
  }
  id v13 = [objc_allocWithZone((Class)CRLHandwritingRecognitionStatusHelper) initWithFreehandDrawingItems:v9.super.isa andConsolidatedDrawing:isa];

  *(void *)&v8[qword_10167D760] = v13;
  type metadata accessor for CRLHandwritingDebugModel(0);
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = _swiftEmptyArrayStorage;
  ObservationRegistrar.init()();
  memset(v28, 0, sizeof(v28));
  uint64_t v29 = v14;
  uint64_t v15 = (void *)UIHostingController.init(rootView:)();
  uint64_t v16 = swift_allocObject();
  swift_unknownObjectWeakInit();
  id v17 = v15;
  swift_retain();
  uint64_t v18 = (void (*)(_OWORD *, void))dispatch thunk of UIHostingController.rootView.modify();
  uint64_t v20 = *(void *)(v19 + 32);
  *(void *)(v19 + 32) = sub_10073DF48;
  *(void *)(v19 + 40) = v16;
  sub_1005174AC(v20);
  v18(v28, 0);

  swift_release();
  uint64_t v21 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v22 = (char *)v17;
  swift_retain();
  uint64_t v23 = (void (*)(_OWORD *, void))dispatch thunk of UIHostingController.rootView.modify();
  uint64_t v25 = *(void *)(v24 + 16);
  *(void *)(v24 + 16) = sub_10073DF6C;
  *(void *)(v24 + 24) = v21;
  sub_1005174AC(v25);
  v23(v28, 0);

  swift_release();
  uint64_t v26 = *(void **)&v22[qword_10167D760];
  [v26 setDelegate:v22];
  [v26 refresh];

  sub_100522F00(a2, &qword_1016842F0);
  return v22;
}

void sub_10073D83C(uint64_t a1, SEL *a2)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v4 = (void *)Strong;
    id v5 = *(id *)(Strong + qword_10167D760);

    [v5 *a2];
  }
}

void sub_10073D8BC()
{
}

id sub_10073D8CC()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLHandwritingDebugViewController(0);
  [super dealloc];
}

void sub_10073D904(uint64_t a1)
{
}

void sub_10073D914()
{
}

void sub_10073D944()
{
}

uint64_t sub_10073D974()
{
  return type metadata accessor for CRLHandwritingDebugViewController(0);
}

uint64_t sub_10073D97C()
{
  dispatch thunk of UIHostingController.rootView.getter();
  swift_retain();
  sub_1005174AC(v4);
  sub_1005174AC(v5);
  sub_1005174AC(v6);
  swift_release();
  id v1 = [*(id *)(v0 + qword_10167D760) recognitionStatusStrings];
  sub_1005057FC(&qword_10167D908);
  uint64_t v2 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

  sub_10073B61C(v2);
  swift_release();
  return swift_bridgeObjectRelease();
}

void sub_10073DA74(void *a1)
{
  id v1 = a1;
  sub_10073D97C();
}

uint64_t destroy for CRLHandwritingDebugView(void *a1)
{
  if (*a1) {
    swift_release();
  }
  if (a1[2]) {
    swift_release();
  }
  if (a1[4]) {
    swift_release();
  }

  return swift_release();
}

void *initializeWithCopy for CRLHandwritingDebugView(void *a1, void *a2)
{
  if (*a2)
  {
    uint64_t v4 = a2[1];
    *a1 = *a2;
    a1[1] = v4;
    swift_retain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  uint64_t v5 = a2[2];
  if (v5)
  {
    uint64_t v6 = a2[3];
    a1[2] = v5;
    a1[3] = v6;
    swift_retain();
  }
  else
  {
    *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
  }
  uint64_t v7 = a2[4];
  if (v7)
  {
    uint64_t v8 = a2[5];
    a1[4] = v7;
    a1[5] = v8;
    swift_retain();
  }
  else
  {
    *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
  }
  a1[6] = a2[6];
  swift_retain();
  return a1;
}

void *assignWithCopy for CRLHandwritingDebugView(void *a1, void *a2)
{
  uint64_t v4 = *a2;
  if (*a1)
  {
    if (v4)
    {
      uint64_t v5 = a2[1];
      *a1 = v4;
      a1[1] = v5;
      swift_retain();
      swift_release();
      goto LABEL_8;
    }
    swift_release();
  }
  else if (v4)
  {
    uint64_t v6 = a2[1];
    *a1 = v4;
    a1[1] = v6;
    swift_retain();
    goto LABEL_8;
  }
  *(_OWORD *)a1 = *(_OWORD *)a2;
LABEL_8:
  uint64_t v7 = a2[2];
  if (a1[2])
  {
    if (v7)
    {
      uint64_t v8 = a2[3];
      a1[2] = v7;
      a1[3] = v8;
      swift_retain();
      swift_release();
      goto LABEL_15;
    }
    swift_release();
  }
  else if (v7)
  {
    uint64_t v9 = a2[3];
    a1[2] = v7;
    a1[3] = v9;
    swift_retain();
    goto LABEL_15;
  }
  *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
LABEL_15:
  uint64_t v10 = a2[4];
  if (!a1[4])
  {
    if (v10)
    {
      uint64_t v12 = a2[5];
      a1[4] = v10;
      a1[5] = v12;
      swift_retain();
      goto LABEL_22;
    }
LABEL_21:
    *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
    goto LABEL_22;
  }
  if (!v10)
  {
    swift_release();
    goto LABEL_21;
  }
  uint64_t v11 = a2[5];
  a1[4] = v10;
  a1[5] = v11;
  swift_retain();
  swift_release();
LABEL_22:
  a1[6] = a2[6];
  swift_retain();
  swift_release();
  return a1;
}

void *assignWithTake for CRLHandwritingDebugView(void *a1, void *a2)
{
  uint64_t v4 = *a2;
  if (*a1)
  {
    if (v4)
    {
      uint64_t v5 = a2[1];
      *a1 = v4;
      a1[1] = v5;
      swift_release();
      goto LABEL_8;
    }
    swift_release();
  }
  else if (v4)
  {
    uint64_t v6 = a2[1];
    *a1 = v4;
    a1[1] = v6;
    goto LABEL_8;
  }
  *(_OWORD *)a1 = *(_OWORD *)a2;
LABEL_8:
  uint64_t v7 = a2[2];
  if (a1[2])
  {
    if (v7)
    {
      uint64_t v8 = a2[3];
      a1[2] = v7;
      a1[3] = v8;
      swift_release();
      goto LABEL_15;
    }
    swift_release();
  }
  else if (v7)
  {
    uint64_t v9 = a2[3];
    a1[2] = v7;
    a1[3] = v9;
    goto LABEL_15;
  }
  *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
LABEL_15:
  uint64_t v10 = a2[4];
  if (!a1[4])
  {
    if (v10)
    {
      uint64_t v12 = a2[5];
      a1[4] = v10;
      a1[5] = v12;
      goto LABEL_22;
    }
LABEL_21:
    *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
    goto LABEL_22;
  }
  if (!v10)
  {
    swift_release();
    goto LABEL_21;
  }
  uint64_t v11 = a2[5];
  a1[4] = v10;
  a1[5] = v11;
  swift_release();
LABEL_22:
  a1[6] = a2[6];
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for CRLHandwritingDebugView(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 56)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 48);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CRLHandwritingDebugView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 56) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 48) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 56) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLHandwritingDebugView()
{
  return &type metadata for CRLHandwritingDebugView;
}

ValueMetadata *type metadata accessor for DrawingRecognition.RecognitionStatus()
{
  return &type metadata for DrawingRecognition.RecognitionStatus;
}

uint64_t sub_10073DEF4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10073DF10()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_10073DF48()
{
  sub_10073D83C(v0, (SEL *)&selRef_refresh);
}

void sub_10073DF6C()
{
  sub_10073D83C(v0, (SEL *)&selRef_copyDebugStringToPasteboard);
}

uint64_t sub_10073DF90@<X0>(uint64_t a1@<X8>)
{
  return sub_10073BBE4(*(void *)(v1 + 16), a1);
}

unint64_t sub_10073DF98()
{
  unint64_t result = qword_10167D848;
  if (!qword_10167D848)
  {
    sub_100522D34(&qword_10167D838);
    sub_100523288(&qword_10167D850, &qword_10167D858);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10167D848);
  }
  return result;
}

uint64_t sub_10073E038@<X0>(uint64_t a1@<X8>)
{
  return sub_10073C108(*(void *)(v1 + 16), a1);
}

unint64_t sub_10073E040()
{
  unint64_t result = qword_10167D870;
  if (!qword_10167D870)
  {
    sub_100522D34(&qword_10167D868);
    sub_100523288(&qword_10167D878, &qword_10167D880);
    sub_10073E0E0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10167D870);
  }
  return result;
}

unint64_t sub_10073E0E0()
{
  unint64_t result = qword_10167D888;
  if (!qword_10167D888)
  {
    sub_100522D34(&qword_10167D890);
    sub_10073E154();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10167D888);
  }
  return result;
}

unint64_t sub_10073E154()
{
  unint64_t result = qword_10167D898;
  if (!qword_10167D898)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10167D898);
  }
  return result;
}

uint64_t sub_10073E1A8@<X0>(uint64_t a1@<X8>)
{
  return sub_10073C5CC(*(void *)(v1 + 16), a1);
}

uint64_t sub_10073E1B0@<X0>(uint64_t a1@<X8>)
{
  return sub_10073C968(*(uint64_t **)(v1 + 16), a1);
}

uint64_t sub_10073E1B8@<X0>(uint64_t a1@<X8>)
{
  return sub_10073CC50(*(uint64_t **)(v1 + 16), a1);
}

unint64_t sub_10073E1C0()
{
  unint64_t result = qword_10167D8C0;
  if (!qword_10167D8C0)
  {
    sub_100522D34(&qword_10167D8B8);
    sub_100523288(&qword_10167D8C8, (uint64_t *)&unk_10167D8D0);
    sub_100523288(&qword_10167A5A8, &qword_10167A5B0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10167D8C0);
  }
  return result;
}

uint64_t sub_10073E284@<X0>(uint64_t a1@<X8>)
{
  return sub_10073CED8(*(uint64_t **)(v1 + 16), a1);
}

uint64_t sub_10073E290()
{
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 48);
  if (v1) {
    return v1();
  }
  return result;
}

uint64_t sub_10073E2C0()
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();

  return Label<>.init(_:systemImage:)();
}

Swift::Int sub_10073E358(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_100F6A15C(v2);
  }
  uint64_t v3 = *(void *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  Swift::Int result = sub_10073E3C4(v5);
  *a1 = v2;
  return result;
}

Swift::Int sub_10073E3C4(uint64_t *a1)
{
  Swift::Int v3 = a1[1];
  Swift::Int result = _minimumMergeRunLength(_:)(v3);
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_152;
    }
    if (v3) {
      return sub_10073EAB0(0, v3, 1, a1);
    }
    return result;
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_160;
  }
  Swift::Int v105 = result;
  id v102 = a1;
  if (v3 < 2)
  {
    uint64_t v8 = _swiftEmptyArrayStorage;
    __dst = (char *)&_swiftEmptyArrayStorage[4];
    if (v3 != 1)
    {
      unint64_t v12 = *(void *)&_swiftEmptyArrayStorage[2];
      uint64_t v11 = _swiftEmptyArrayStorage;
LABEL_118:
      id v94 = v11;
      uint64_t v104 = v8;
      if (v12 >= 2)
      {
        uint64_t v95 = *v102;
        do
        {
          unint64_t v96 = v12 - 2;
          if (v12 < 2) {
            goto LABEL_147;
          }
          if (!v95) {
            goto LABEL_159;
          }
          id v97 = v94;
          double v98 = v94[2 * v96 + 4];
          double v99 = v94[2 * v12 + 3];
          sub_10073EB80((char *)(v95 + 16 * *(void *)&v98), (char *)(v95 + 16 * *(void *)&v94[2 * v12 + 2]), v95 + 16 * *(void *)&v99, __dst);
          if (v1) {
            break;
          }
          if (*(uint64_t *)&v99 < *(uint64_t *)&v98) {
            goto LABEL_148;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            id v97 = sub_100F69F28((uint64_t)v97);
          }
          if (v96 >= *((void *)v97 + 2)) {
            goto LABEL_149;
          }
          uint64_t v100 = &v97[2 * v96 + 4];
          *uint64_t v100 = v98;
          v100[1] = v99;
          unint64_t v101 = *((void *)v97 + 2);
          if (v12 > v101) {
            goto LABEL_150;
          }
          memmove(&v97[2 * v12 + 2], &v97[2 * v12 + 4], 16 * (v101 - v12));
          id v94 = v97;
          *((void *)v97 + 2) = v101 - 1;
          unint64_t v12 = v101 - 1;
        }
        while (v101 > 2);
      }
LABEL_115:
      swift_bridgeObjectRelease();
      v104[2] = 0.0;
      return swift_bridgeObjectRelease();
    }
    uint64_t v104 = _swiftEmptyArrayStorage;
  }
  else
  {
    uint64_t v6 = v5 >> 1;
    uint64_t v7 = static Array._allocateBufferUninitialized(minimumCapacity:)();
    *(void *)(v7 + 16) = v6;
    uint64_t v104 = (double *)v7;
    __dst = (char *)(v7 + 32);
  }
  Swift::Int v9 = 0;
  uint64_t v10 = *a1;
  uint64_t v103 = v10 + 8;
  uint64_t v11 = _swiftEmptyArrayStorage;
  Swift::Int v106 = v3;
  while (1)
  {
    Swift::Int v13 = v9++;
    if (v9 >= v3) {
      goto LABEL_46;
    }
    uint64_t v14 = (uint64_t *)(v10 + 16 * v9);
    uint64_t v15 = *v14;
    uint64_t v16 = v14[1];
    id v17 = (void *)(v10 + 16 * v13);
    if (v15 == *v17 && v16 == v17[1])
    {
      Swift::Int v20 = v13 + 2;
      if (v13 + 2 >= v3) {
        goto LABEL_45;
      }
      int v19 = 0;
    }
    else
    {
      int v19 = _stringCompareWithSmolCheck(_:_:expecting:)();
      Swift::Int v20 = v13 + 2;
      if (v13 + 2 >= v3) {
        goto LABEL_36;
      }
    }
    uint64_t v21 = (void *)(v103 + 16 * v20);
    do
    {
      uint64_t v23 = (void *)(v10 + 16 * v9);
      if (*(v21 - 1) == *v23 && *v21 == v23[1])
      {
        if (v19) {
          goto LABEL_37;
        }
      }
      else if ((v19 ^ _stringCompareWithSmolCheck(_:_:expecting:)()))
      {
        goto LABEL_36;
      }
      v21 += 2;
      Swift::Int v22 = v20 + 1;
      Swift::Int v9 = v20;
      Swift::Int v20 = v22;
    }
    while (v22 < v3);
    Swift::Int v20 = v22;
LABEL_36:
    Swift::Int v9 = v20;
    if (v19)
    {
LABEL_37:
      if (v20 < v13) {
        goto LABEL_155;
      }
      if (v13 < v20)
      {
        uint64_t v25 = 16 * v20;
        uint64_t v26 = 16 * v13;
        Swift::Int v27 = v20;
        Swift::Int v28 = v13;
        do
        {
          if (v28 != --v27)
          {
            if (!v10) {
              goto LABEL_158;
            }
            uint64_t v29 = v10 + v25;
            uint64_t v30 = *(void *)(v10 + v26);
            uint64_t v31 = *(void *)(v10 + v26 + 8);
            *(_OWORD *)(v10 + v26) = *(_OWORD *)(v10 + v25 - 16);
            *(void *)(v29 - 16) = v30;
            *(void *)(v29 - 8) = v31;
          }
          ++v28;
          v25 -= 16;
          v26 += 16;
        }
        while (v28 < v27);
      }
LABEL_45:
      Swift::Int v9 = v20;
    }
LABEL_46:
    if (v9 < v3)
    {
      if (__OFSUB__(v9, v13)) {
        goto LABEL_151;
      }
      if (v9 - v13 < v105) {
        break;
      }
    }
LABEL_67:
    if (v9 < v13) {
      goto LABEL_146;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v11 = sub_100F697E0(0, *((void *)v11 + 2) + 1, 1, (uint64_t)v11);
    }
    unint64_t v41 = *((void *)v11 + 2);
    unint64_t v40 = *((void *)v11 + 3);
    unint64_t v12 = v41 + 1;
    if (v41 >= v40 >> 1) {
      uint64_t v11 = sub_100F697E0((double *)(v40 > 1), v41 + 1, 1, (uint64_t)v11);
    }
    *((void *)v11 + 2) = v12;
    uint64_t v42 = v11 + 4;
    uint64_t v43 = &v11[2 * v41 + 4];
    *(void *)uint64_t v43 = v13;
    *((void *)v43 + 1) = v9;
    if (v41)
    {
      Swift::Int v107 = v9;
      while (1)
      {
        unint64_t v44 = v12 - 1;
        if (v12 >= 4)
        {
          uint64_t v49 = &v42[2 * v12];
          uint64_t v50 = *((void *)v49 - 8);
          uint64_t v51 = *((void *)v49 - 7);
          BOOL v55 = __OFSUB__(v51, v50);
          uint64_t v52 = v51 - v50;
          if (v55) {
            goto LABEL_135;
          }
          uint64_t v54 = *((void *)v49 - 6);
          uint64_t v53 = *((void *)v49 - 5);
          BOOL v55 = __OFSUB__(v53, v54);
          uint64_t v47 = v53 - v54;
          char v48 = v55;
          if (v55) {
            goto LABEL_136;
          }
          unint64_t v56 = v12 - 2;
          long long v57 = &v42[2 * v12 - 4];
          uint64_t v59 = *(void *)v57;
          uint64_t v58 = *((void *)v57 + 1);
          BOOL v55 = __OFSUB__(v58, v59);
          uint64_t v60 = v58 - v59;
          if (v55) {
            goto LABEL_138;
          }
          BOOL v55 = __OFADD__(v47, v60);
          uint64_t v61 = v47 + v60;
          if (v55) {
            goto LABEL_141;
          }
          if (v61 >= v52)
          {
            id v79 = &v42[2 * v44];
            uint64_t v81 = *(void *)v79;
            uint64_t v80 = *((void *)v79 + 1);
            BOOL v55 = __OFSUB__(v80, v81);
            uint64_t v82 = v80 - v81;
            if (v55) {
              goto LABEL_145;
            }
            BOOL v72 = v47 < v82;
            goto LABEL_105;
          }
        }
        else
        {
          if (v12 != 3)
          {
            uint64_t v73 = *((void *)v11 + 4);
            uint64_t v74 = *((void *)v11 + 5);
            BOOL v55 = __OFSUB__(v74, v73);
            uint64_t v66 = v74 - v73;
            char v67 = v55;
            goto LABEL_99;
          }
          uint64_t v46 = *((void *)v11 + 4);
          uint64_t v45 = *((void *)v11 + 5);
          BOOL v55 = __OFSUB__(v45, v46);
          uint64_t v47 = v45 - v46;
          char v48 = v55;
        }
        if (v48) {
          goto LABEL_137;
        }
        unint64_t v56 = v12 - 2;
        long long v62 = &v42[2 * v12 - 4];
        uint64_t v64 = *(void *)v62;
        uint64_t v63 = *((void *)v62 + 1);
        BOOL v65 = __OFSUB__(v63, v64);
        uint64_t v66 = v63 - v64;
        char v67 = v65;
        if (v65) {
          goto LABEL_140;
        }
        long long v68 = &v42[2 * v44];
        uint64_t v70 = *(void *)v68;
        uint64_t v69 = *((void *)v68 + 1);
        BOOL v55 = __OFSUB__(v69, v70);
        uint64_t v71 = v69 - v70;
        if (v55) {
          goto LABEL_143;
        }
        if (__OFADD__(v66, v71)) {
          goto LABEL_144;
        }
        if (v66 + v71 >= v47)
        {
          BOOL v72 = v47 < v71;
LABEL_105:
          if (v72) {
            unint64_t v44 = v56;
          }
          goto LABEL_107;
        }
LABEL_99:
        if (v67) {
          goto LABEL_139;
        }
        double v75 = &v42[2 * v44];
        uint64_t v77 = *(void *)v75;
        uint64_t v76 = *((void *)v75 + 1);
        BOOL v55 = __OFSUB__(v76, v77);
        uint64_t v78 = v76 - v77;
        if (v55) {
          goto LABEL_142;
        }
        if (v78 < v66) {
          goto LABEL_15;
        }
LABEL_107:
        unint64_t v83 = v44 - 1;
        if (v44 - 1 >= v12)
        {
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
LABEL_153:
          __break(1u);
          goto LABEL_154;
        }
        uint64_t v84 = v10;
        if (!v10) {
          goto LABEL_157;
        }
        id v85 = v11;
        id v86 = &v42[2 * v83];
        uint64_t v87 = *(void *)v86;
        id v88 = v42;
        unint64_t v89 = v44;
        id v90 = &v42[2 * v44];
        double v91 = v90[1];
        uint64_t v92 = v84;
        sub_10073EB80((char *)(v84 + 16 * *(void *)v86), (char *)(v84 + 16 * *(void *)v90), v84 + 16 * *(void *)&v91, __dst);
        if (v1) {
          goto LABEL_115;
        }
        if (*(uint64_t *)&v91 < v87) {
          goto LABEL_132;
        }
        if (v89 > *((void *)v85 + 2)) {
          goto LABEL_133;
        }
        *(void *)id v86 = v87;
        v88[2 * v83 + 1] = v91;
        unint64_t v93 = *((void *)v85 + 2);
        if (v89 >= v93) {
          goto LABEL_134;
        }
        uint64_t v11 = v85;
        unint64_t v12 = v93 - 1;
        memmove(v90, v90 + 2, 16 * (v93 - 1 - v89));
        uint64_t v42 = v88;
        *((void *)v85 + 2) = v93 - 1;
        uint64_t v10 = v92;
        Swift::Int v9 = v107;
        if (v93 <= 2) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v12 = 1;
LABEL_15:
    Swift::Int v3 = v106;
    if (v9 >= v106)
    {
      uint64_t v8 = v104;
      goto LABEL_118;
    }
  }
  if (__OFADD__(v13, v105)) {
    goto LABEL_153;
  }
  if (v13 + v105 >= v3) {
    Swift::Int v32 = v3;
  }
  else {
    Swift::Int v32 = v13 + v105;
  }
  if (v32 >= v13)
  {
    if (v9 != v32)
    {
      uint64_t v33 = (void *)(v10 + 16 * v9);
      do
      {
        uint64_t v34 = (uint64_t *)(v10 + 16 * v9);
        uint64_t v35 = *v34;
        uint64_t v36 = v34[1];
        Swift::Int v37 = v13;
        uint64_t v38 = v33;
        do
        {
          BOOL v39 = v35 == *(v38 - 2) && v36 == *(v38 - 1);
          if (v39 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
            break;
          }
          if (!v10) {
            goto LABEL_156;
          }
          uint64_t v35 = *v38;
          uint64_t v36 = v38[1];
          *(_OWORD *)uint64_t v38 = *((_OWORD *)v38 - 1);
          *(v38 - 1) = v36;
          *(v38 - 2) = v35;
          v38 -= 2;
          ++v37;
        }
        while (v9 != v37);
        ++v9;
        v33 += 2;
      }
      while (v9 != v32);
      Swift::Int v9 = v32;
    }
    goto LABEL_67;
  }
LABEL_154:
  __break(1u);
LABEL_155:
  __break(1u);
LABEL_156:
  __break(1u);
LABEL_157:
  __break(1u);
LABEL_158:
  __break(1u);
LABEL_159:
  __break(1u);
LABEL_160:
  Swift::Int result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10073EAB0(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  if (a3 != a2)
  {
    uint64_t v4 = a3;
    uint64_t v6 = result;
    uint64_t v7 = *a4;
    uint64_t v8 = *a4 + 16 * a3;
LABEL_5:
    Swift::Int v9 = (uint64_t *)(v7 + 16 * v4);
    Swift::Int result = *v9;
    uint64_t v10 = v9[1];
    uint64_t v11 = v6;
    unint64_t v12 = (uint64_t *)v8;
    while (1)
    {
      BOOL v13 = result == *(v12 - 2) && v10 == *(v12 - 1);
      if (v13 || (Swift::Int result = _stringCompareWithSmolCheck(_:_:expecting:)(), (result & 1) == 0))
      {
LABEL_4:
        ++v4;
        v8 += 16;
        if (v4 == a2) {
          return result;
        }
        goto LABEL_5;
      }
      if (!v7) {
        break;
      }
      Swift::Int result = *v12;
      uint64_t v10 = v12[1];
      *(_OWORD *)unint64_t v12 = *((_OWORD *)v12 - 1);
      *(v12 - 1) = v10;
      *(v12 - 2) = result;
      v12 -= 2;
      if (v4 == ++v11) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_10073EB80(char *__src, char *a2, unint64_t a3, char *__dst)
{
  uint64_t v4 = __dst;
  uint64_t v6 = a2;
  uint64_t v7 = __src;
  int64_t v8 = a2 - __src;
  int64_t v9 = a2 - __src + 15;
  if (a2 - __src >= 0) {
    int64_t v9 = a2 - __src;
  }
  uint64_t v10 = v9 >> 4;
  uint64_t v11 = a3 - (void)a2;
  uint64_t v12 = a3 - (void)a2 + 15;
  if ((uint64_t)(a3 - (void)a2) >= 0) {
    uint64_t v12 = a3 - (void)a2;
  }
  uint64_t v13 = v12 >> 4;
  Swift::Int v27 = __src;
  uint64_t v26 = __dst;
  if (v10 >= v12 >> 4)
  {
    if (v11 >= -15)
    {
      if (__dst != a2 || &a2[16 * v13] <= __dst) {
        memmove(__dst, a2, 16 * v13);
      }
      id v17 = &v4[16 * v13];
      uint64_t v25 = v17;
      Swift::Int v27 = v6;
      if (v7 < v6 && v11 >= 16)
      {
        uint64_t v18 = (char *)(a3 - 16);
        int v19 = v6;
        while (1)
        {
          Swift::Int v20 = v18 + 16;
          uint64_t v21 = *((void *)v19 - 2);
          uint64_t v22 = *((void *)v19 - 1);
          v19 -= 16;
          BOOL v23 = *((void *)v17 - 2) == v21 && *((void *)v17 - 1) == v22;
          if (v23 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
          {
            uint64_t v25 = v17 - 16;
            if (v20 < v17 || v18 >= v17 || v20 != v17) {
              *(_OWORD *)uint64_t v18 = *((_OWORD *)v17 - 1);
            }
            int v19 = v6;
            v17 -= 16;
            if (v6 <= v7) {
              goto LABEL_50;
            }
          }
          else
          {
            if (v20 != v6 || v18 >= v6) {
              *(_OWORD *)uint64_t v18 = *(_OWORD *)v19;
            }
            Swift::Int v27 = v19;
            if (v19 <= v7) {
              goto LABEL_50;
            }
          }
          v18 -= 16;
          uint64_t v6 = v19;
          if (v17 <= v4) {
            goto LABEL_50;
          }
        }
      }
      goto LABEL_50;
    }
  }
  else if (v8 >= -15)
  {
    if (__dst != __src || &__src[16 * v10] <= __dst) {
      memmove(__dst, __src, 16 * v10);
    }
    uint64_t v14 = &v4[16 * v10];
    uint64_t v25 = v14;
    if ((unint64_t)v6 < a3 && v8 >= 16)
    {
      do
      {
        BOOL v15 = *(void *)v6 == *(void *)v4 && *((void *)v6 + 1) == *((void *)v4 + 1);
        if (v15 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
        {
          if (v7 != v4) {
            *(_OWORD *)uint64_t v7 = *(_OWORD *)v4;
          }
          v4 += 16;
          uint64_t v26 = v4;
          uint64_t v16 = v6;
        }
        else
        {
          uint64_t v16 = v6 + 16;
          if (v7 < v6 || v7 >= v16 || v7 != v6) {
            *(_OWORD *)uint64_t v7 = *(_OWORD *)v6;
          }
        }
        v7 += 16;
        if (v4 >= v14) {
          break;
        }
        uint64_t v6 = v16;
      }
      while ((unint64_t)v16 < a3);
      Swift::Int v27 = v7;
    }
LABEL_50:
    sub_100F69B9C((void **)&v27, (const void **)&v26, &v25);
    return 1;
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10073EE28()
{
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 32);
  if (v1) {
    return v1();
  }
  return result;
}

uint64_t sub_10073EE58()
{
  return sub_10073E2C0();
}

uint64_t sub_10073EE70()
{
  if (v0[2]) {
    swift_release();
  }
  if (v0[4]) {
    swift_release();
  }
  if (v0[6]) {
    swift_release();
  }
  swift_release();

  return _swift_deallocObject(v0, 72, 7);
}

uint64_t sub_10073EED8()
{
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 16);
  if (v1) {
    return v1();
  }
  return result;
}

uint64_t sub_10073EF10(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10073EF58()
{
  return sub_10073EF70();
}

uint64_t sub_10073EF70()
{
  *(void *)(*(void *)(v0 + 16) + 16) = *(void *)(v0 + 24);
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_10073EFB4()
{
  return sub_10073A3B8(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

ValueMetadata *type metadata accessor for CRLDrawingRecognitionView()
{
  return &type metadata for CRLDrawingRecognitionView;
}

uint64_t sub_10073EFE0()
{
  return sub_100523288(&qword_10167D918, &qword_10167D920);
}

uint64_t sub_10073F01C()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_10073F038()
{
  unint64_t result = qword_10167D960;
  if (!qword_10167D960)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10167D960);
  }
  return result;
}

unint64_t sub_10073F08C()
{
  unint64_t result = qword_10167D968;
  if (!qword_10167D968)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10167D968);
  }
  return result;
}

uint64_t sub_10073F0E0(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_retain();
  }
  else {
    return swift_bridgeObjectRetain();
  }
}

ValueMetadata *type metadata accessor for CRLHandwritingRecognitionStatusView()
{
  return &type metadata for CRLHandwritingRecognitionStatusView;
}

uint64_t sub_10073F100()
{
  return sub_10073F20C(&qword_10167D978, &qword_10167D938, &qword_10167D980, &qword_10167D928);
}

uint64_t sub_10073F138()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10073F154(uint64_t a1)
{
  return a1;
}

uint64_t sub_10073F194(uint64_t a1)
{
  return a1;
}

uint64_t sub_10073F1D4()
{
  return sub_10073F20C(&qword_10167D988, &qword_10167D990, &qword_10167D998, (uint64_t *)&unk_10167D9A0);
}

uint64_t sub_10073F20C(unint64_t *a1, uint64_t *a2, unint64_t *a3, uint64_t *a4)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100522D34(a2);
    sub_100523288(a3, a4);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_10073F2AC(char *a1)
{
  uint64_t v2 = sub_1005057FC(&qword_101678470);
  __chkstk_darwin(v2 - 8, v3);
  uint64_t v5 = (char *)&v95 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t inserted = type metadata accessor for CRLBoardInsertStyleData(0);
  __chkstk_darwin(inserted - 8, v7);
  int64_t v9 = (char *)&v95 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for UUID();
  __chkstk_darwin(v10 - 8, v11);
  uint64_t v13 = (char *)&v95 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1006DAC64();
  swift_unknownObjectRetain();
  UUID.init()();
  type metadata accessor for CRLTransactionContext(0);
  uint64_t v14 = swift_allocObject();
  uint64_t v134 = sub_1007940B4((uint64_t)a1, 0, 1, (uint64_t)v13, 1, v14);
  uint64_t v15 = *(void *)&a1[OBJC_IVAR____TtC8Freeform8CRLBoard_data] + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
  swift_beginAccess();
  uint64_t v16 = type metadata accessor for CRLBoardCRDTData(0);
  sub_10073FDAC(v15 + *(int *)(v16 + 28), (uint64_t)v9);
  id v17 = (objc_class *)type metadata accessor for CRLBoardItemFactory();
  uint64_t v18 = (char *)objc_allocWithZone(v17);
  *(void *)&v18[OBJC_IVAR____TtC8Freeform19CRLBoardItemFactory_board] = a1;
  sub_10073FDAC((uint64_t)v9, (uint64_t)&v18[OBJC_IVAR____TtC8Freeform19CRLBoardItemFactory_insertStyleSettings]);
  v113.receiver = v18;
  v113.super_class = v17;
  int v19 = a1;
  id v20 = [super init];
  sub_10073FE10((uint64_t)v9);
  uint64_t v21 = type metadata accessor for AttributedString();
  uint64_t v22 = *(void *)(v21 - 8);
  BOOL v23 = *(void (**)(id, uint64_t, uint64_t))(v22 + 56);
  uint64_t v106 = v22 + 56;
  Swift::Int v107 = v23;
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v23)(v5, 1, 1, v21);
  id v110 = v20;
  id v24 = sub_100F3DA18(4, 0, 0, 0, 0x4082C00000000000, 0x406F400000000000, 0, 0, 1u, (void *)1, (void *)1, (void *)1, (void *)1, (uint64_t)v5);
  id v108 = v5;
  sub_10065ABCC((uint64_t)v5);
  uint64_t v25 = OBJC_IVAR____TtC8Freeform8CRLBoard_rootContainer;
  Swift::Int v105 = v19;
  uint64_t v26 = *(void **)&v19[OBJC_IVAR____TtC8Freeform8CRLBoard_rootContainer];
  uint64_t v104 = sub_1005057FC((uint64_t *)&unk_101676C10);
  uint64_t v27 = swift_allocObject();
  long long v103 = xmmword_101177E70;
  *(_OWORD *)(v27 + 16) = xmmword_101177E70;
  *(void *)(v27 + 32) = v24;
  *(void *)&long long v111 = v27;
  specialized Array._endMutation()();
  uint64_t v28 = v111;
  id v29 = v26;
  id v30 = v24;
  uint64_t v31 = NSNotFound.getter();
  uint64_t v102 = sub_1005057FC((uint64_t *)&unk_101683E00);
  uint64_t inited = swift_initStackObject();
  long long v101 = xmmword_10117E810;
  *(_OWORD *)(inited + 16) = xmmword_10117E810;
  *(void *)(inited + 32) = v31;
  *(void *)(inited + 40) = v28;
  unint64_t v33 = sub_100A45CB0((void *)inited);
  swift_setDeallocating();
  swift_bridgeObjectRetain();
  uint64_t v34 = sub_1005057FC(&qword_10169DFA0);
  uint64_t v35 = v134;
  uint64_t v100 = v34;
  swift_arrayDestroy();
  uint64_t v36 = v109;
  sub_10084BFA8(v33, v35);
  if (v36)
  {
    swift_release();

LABEL_5:
    swift_bridgeObjectRelease();
LABEL_6:
    swift_bridgeObjectRelease();
    return;
  }

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  id v98 = self;
  id v37 = [v98 blackColor];
  id v97 = self;
  uint64_t v38 = [v97 strokeWithColor:v37 width:3.0];

  BOOL v39 = self;
  uint64_t v109 = 0;
  id v40 = [v39 simpleArrow];
  id v41 = [v39 simpleArrow];
  uint64_t v42 = v21;
  uint64_t v43 = (uint64_t)v108;
  uint64_t v99 = v42;
  v107(v108, 1, 1);
  id v44 = v110;
  id v45 = sub_100F3DA18(1, 0, 0, 0, 0x4069000000000000, 0x407F400000000000, 0, 0x4073B00000000000, 0, v38, (void *)1, v40, v41, v43);

  sub_10065ABCC(v43);
  uint64_t v96 = v25;
  uint64_t v46 = *(void **)&v105[v25];
  uint64_t v47 = swift_allocObject();
  *(_OWORD *)(v47 + 16) = v103;
  *(void *)(v47 + 32) = v45;
  *(void *)&long long v111 = v47;
  specialized Array._endMutation()();
  uint64_t v48 = v111;
  id v29 = v46;
  id v30 = v45;
  uint64_t v49 = NSNotFound.getter();
  uint64_t v50 = swift_initStackObject();
  *(_OWORD *)(v50 + 16) = v101;
  uint64_t v51 = v44;
  *(void *)(v50 + 32) = v49;
  *(void *)(v50 + 40) = v48;
  unint64_t v52 = sub_100A45CB0((void *)v50);
  uint64_t v53 = v134;
  swift_setDeallocating();
  swift_bridgeObjectRetain();
  swift_arrayDestroy();
  uint64_t v54 = v109;
  sub_10084BFA8(v52, v53);
  if (v54)
  {
    swift_release();

    goto LABEL_5;
  }
  uint64_t v109 = 0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  id v55 = [v98 orangeColor];
  unint64_t v56 = [v97 strokeWithColor:v55 width:3.0];

  id v57 = [self yellowColor];
  uint64_t v58 = (uint64_t)v108;
  ((void (*)(id, uint64_t, uint64_t, uint64_t))v107)(v108, 1, 1, v99);
  uint64_t v59 = v56;
  id v60 = v57;
  id v61 = sub_100F3DA18(11, 0, 0, 0, 0x4082C00000000000, 0x407C200000000000, 0, 0, 1u, v56, v57, (void *)1, (void *)1, v58);

  sub_10065ABCC(v58);
  type metadata accessor for CRLWPShapeItem();
  uint64_t v62 = swift_dynamicCastClassUnconditional();
  uint64_t v63 = OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage;
  uint64_t v64 = *(void **)(v62 + OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage);
  if (!v64)
  {
    __break(1u);
    goto LABEL_16;
  }
  uint64_t v65 = v62;
  Swift::Int v107 = (void (*)(id, uint64_t, uint64_t))v59;
  id v108 = v60;
  id v66 = v64;
  sub_1009011A8(0xD00000000000002FLL, 0x800000010124B7E0);

  char v67 = *(void **)(v65 + v63);
  if (!v67)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  uint64_t KeyPath = swift_getKeyPath();
  id v69 = v67;
  sub_10090059C(0, 4, &v114);
  long long v132 = v115;
  uint64_t v70 = v114;
  uint64_t v133 = v116;
  long long v111 = v115;
  uint64_t v112 = v116;
  sub_100E93AA4(1, 0, KeyPath);

  swift_release();
  sub_1006436E8((id *)&v132);

  uint64_t v71 = *(void **)(v65 + v63);
  if (!v71)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  uint64_t v72 = swift_getKeyPath();
  id v73 = v71;
  sub_10090059C(0, 4, &v117);
  long long v130 = v118;
  uint64_t v74 = v117;
  uint64_t v131 = v119;
  long long v111 = v118;
  uint64_t v112 = v119;
  sub_100E93AD0(1103626240, 0, v72);

  swift_release();
  sub_1006436E8((id *)&v130);

  double v75 = *(void **)(v65 + v63);
  if (!v75)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  uint64_t v76 = swift_getKeyPath();
  id v77 = v75;
  sub_10090059C(0, 4, &v120);
  long long v128 = v121;
  uint64_t v78 = v120;
  uint64_t v129 = v122;
  long long v111 = v121;
  uint64_t v112 = v122;
  sub_100E93AFC(1, 0, v76);

  swift_release();
  sub_1006436E8((id *)&v128);

  id v79 = *(void **)(v65 + v63);
  if (!v79)
  {
LABEL_19:
    __break(1u);
    return;
  }
  uint64_t v80 = swift_getKeyPath();
  id v81 = v79;
  sub_10090059C(0, 4, &v123);
  long long v126 = v124;
  uint64_t v82 = v123;
  uint64_t v127 = v125;
  long long v111 = v124;
  uint64_t v112 = v125;
  sub_100E93B28(1, 0, v80);

  swift_release();
  sub_1006436E8((id *)&v126);

  unint64_t v83 = *(void **)&v105[v96];
  uint64_t v84 = swift_allocObject();
  *(_OWORD *)(v84 + 16) = v103;
  *(void *)(v84 + 32) = v65;
  *(void *)&long long v111 = v84;
  specialized Array._endMutation()();
  uint64_t v85 = v111;
  id v86 = v83;
  id v87 = v61;
  uint64_t v88 = NSNotFound.getter();
  uint64_t v89 = swift_initStackObject();
  *(_OWORD *)(v89 + 16) = v101;
  *(void *)(v89 + 32) = v88;
  *(void *)(v89 + 40) = v85;
  unint64_t v90 = sub_100A45CB0((void *)v89);
  swift_setDeallocating();
  swift_bridgeObjectRetain();
  swift_arrayDestroy();
  uint64_t v91 = v134;
  uint64_t v92 = v109;
  sub_10084BFA8(v90, v134);
  unint64_t v93 = v107;
  if (v92)
  {
    swift_release();

    swift_bridgeObjectRelease();
    goto LABEL_6;
  }

  swift_bridgeObjectRelease();
  uint64_t v94 = swift_bridgeObjectRelease();
  (*(void (**)(uint64_t))(*(void *)v91 + 720))(v94);

  swift_release();
}

uint64_t sub_10073FDAC(uint64_t a1, uint64_t a2)
{
  uint64_t inserted = type metadata accessor for CRLBoardInsertStyleData(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(inserted - 8) + 16))(a2, a1, inserted);
  return a2;
}

uint64_t sub_10073FE10(uint64_t a1)
{
  uint64_t inserted = type metadata accessor for CRLBoardInsertStyleData(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(inserted - 8) + 8))(a1, inserted);
  return a1;
}

id sub_10073FE6C(uint64_t a1, double a2, double a3, double a4, double a5)
{
  uint64_t v11 = (uint64_t *)&v5[OBJC_IVAR____TtC8Freeform24CRLCommandRecaptureScene_actionString];
  uint64_t v12 = self;
  uint64_t v13 = v5;
  id v14 = [v12 mainBundle];
  NSString v15 = String._bridgeToObjectiveC()();
  NSString v16 = String._bridgeToObjectiveC()();
  NSString v17 = String._bridgeToObjectiveC()();
  id v18 = [v14 localizedStringForKey:v15 value:v16 table:v17];

  uint64_t v19 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v21 = v20;

  *uint64_t v11 = v19;
  v11[1] = v21;
  uint64_t v22 = &v13[OBJC_IVAR____TtC8Freeform24CRLCommandRecaptureScene_sceneID];
  uint64_t v23 = type metadata accessor for UUID();
  uint64_t v24 = *(void *)(v23 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v24 + 16))(v22, a1, v23);
  uint64_t v25 = (double *)&v13[OBJC_IVAR____TtC8Freeform24CRLCommandRecaptureScene_newSavedRect];
  double *v25 = a2;
  v25[1] = a3;
  v25[2] = a4;
  v25[3] = a5;

  v28.receiver = v13;
  v28.super_class = (Class)type metadata accessor for CRLCommandRecaptureScene();
  [super init];
  (*(void (**)(uint64_t, uint64_t))(v24 + 8))(a1, v23);
  return v26;
}

uint64_t sub_100740070(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t result = sub_10103405C(a1, (uint64_t)&off_10152A280);
  if (!v4)
  {
    uint64_t v8 = v3 + OBJC_IVAR____TtC8Freeform24CRLCommandRecaptureScene_sceneID;
    unint64_t v9 = *(void *)(v3 + OBJC_IVAR____TtC8Freeform24CRLCommandRecaptureScene_newSavedRect);
    unint64_t v10 = *(void *)(v3 + OBJC_IVAR____TtC8Freeform24CRLCommandRecaptureScene_newSavedRect + 8);
    unint64_t v11 = *(void *)(v3 + OBJC_IVAR____TtC8Freeform24CRLCommandRecaptureScene_newSavedRect + 16);
    unint64_t v12 = *(void *)(v3 + OBJC_IVAR____TtC8Freeform24CRLCommandRecaptureScene_newSavedRect + 24);
    swift_beginAccess();
    type metadata accessor for CRLBoardCRDTData(0);
    swift_retain();
    v13.n128_u64[0] = v9;
    v14.n128_u64[0] = v10;
    v15.n128_u64[0] = v11;
    v16.n128_u64[0] = v12;
    char v17 = sub_10066AD54(v8, v13, v14, v15, v16);
    swift_endAccess();
    swift_release();
    if (v17)
    {
      return sub_101023724(a1, (uint64_t)&off_10152A280, a3);
    }
    else
    {
      sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"commit(with:transaction:undoable:)", 34, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandRecaptureScene.swift", 96, 2, 25, (uint64_t)"Can't recapture saved rect on a scene that doesn't exist.", 57, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_100586FD4((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Can't recapture saved rect on a scene that doesn't exist.");
      sub_1005871AC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"commit(with:transaction:undoable:)", 34, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandRecaptureScene.swift", 96, 2, 25);
      SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v18, v19);
      uint64_t result = _assertionFailure(_:_:file:line:flags:)();
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_1007402A8()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC8Freeform24CRLCommandRecaptureScene_sceneID;
  uint64_t v2 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  return swift_bridgeObjectRelease();
}

id sub_100740328()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLCommandRecaptureScene();
  return [super dealloc];
}

uint64_t sub_1007403E4()
{
  return type metadata accessor for CRLCommandRecaptureScene();
}

uint64_t type metadata accessor for CRLCommandRecaptureScene()
{
  uint64_t result = qword_10167D9D8;
  if (!qword_10167D9D8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100740438()
{
  uint64_t result = type metadata accessor for UUID();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1007404DC()
{
  uint64_t v1 = *(void *)(*v0 + OBJC_IVAR____TtC8Freeform24CRLCommandRecaptureScene_actionString);
  swift_bridgeObjectRetain();
  return v1;
}

NSString sub_10074051C()
{
  NSString result = String._bridgeToObjectiveC()();
  qword_10171A680 = (uint64_t)result;
  return result;
}

NSString sub_100740554()
{
  NSString result = String._bridgeToObjectiveC()();
  qword_10171A688 = (uint64_t)result;
  return result;
}

id sub_10074058C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  swift_beginAccess();
  uint64_t v6 = swift_bridgeObjectRetain();
  uint64_t v7 = (char *)sub_1007408F4(v6);
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(v2 + 64);
  if (*(void *)(v8 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v9 = sub_100955F50(a1, a2);
    if (v10) {
      unint64_t v11 = *(void *)(*(void *)(v8 + 56) + 8 * v9);
    }
    else {
      unint64_t v11 = 0;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    unint64_t v11 = 0;
  }
  if (qword_10166FB98 != -1) {
    swift_once();
  }
  swift_beginAccess();
  unint64_t v12 = (void *)static OS_os_log.suspendResumeCollaboration;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117DF40;
  if (__OFADD__(v7, 1))
  {
    __break(1u);
    goto LABEL_20;
  }
  __n128 v14 = (void *)inited;
  *(void *)(inited + 56) = &type metadata for Int;
  *(void *)(inited + 64) = &protocol witness table for Int;
  *(void *)(inited + 32) = v7 + 1;
  if (__OFADD__(v11, 1))
  {
LABEL_20:
    __break(1u);
LABEL_21:
    swift_once();
    goto LABEL_13;
  }
  *(void *)(inited + 96) = &type metadata for Int;
  *(void *)(inited + 104) = &protocol witness table for Int;
  *(void *)(inited + 72) = v11 + 1;
  *(void *)(inited + 136) = &type metadata for String;
  unint64_t v11 = sub_100528BE4();
  v14[18] = v11;
  v14[14] = a1;
  v14[15] = a2;
  id v15 = v12;
  swift_bridgeObjectRetain();
  uint64_t v16 = static os_log_type_t.info.getter();
  sub_100BAC898((uint64_t)v15, (uint64_t)&_mh_execute_header, v16, (uint64_t)"Suspend collaboration, suspend count: %lu total, %lu for reason (%@)", 68, 2, (uint64_t)v14);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  if (v7)
  {
LABEL_18:
    swift_beginAccess();
    sub_100740A28(a1, a2);
    return (id)swift_endAccess();
  }
  uint64_t v7 = (char *)[self defaultCenter];
  if (qword_10166EEE8 != -1) {
    goto LABEL_21;
  }
LABEL_13:
  id result = [v7 postNotificationName:qword_10171A680 object:v3];
  uint64_t v18 = *(void *)(v3 + 48);
  BOOL v19 = __OFADD__(v18, 1);
  uint64_t v20 = v18 + 1;
  if (!v19)
  {
    *(void *)(v3 + 48) = v20;
    if (v20 == 1)
    {
      if (swift_unknownObjectWeakLoadStrong()) {
        swift_unknownObjectRelease();
      }
    }
    uint64_t v21 = (void *)static OS_os_log.suspendResumeCollaboration;
    uint64_t v22 = swift_initStackObject();
    *(_OWORD *)(v22 + 16) = xmmword_10117E810;
    *(void *)(v22 + 56) = &type metadata for String;
    *(void *)(v22 + 64) = v11;
    *(void *)(v22 + 32) = a1;
    *(void *)(v22 + 40) = a2;
    swift_bridgeObjectRetain();
    id v23 = v21;
    uint64_t v24 = static os_log_type_t.info.getter();
    sub_100BAC898((uint64_t)v23, (uint64_t)&_mh_execute_header, v24, (uint64_t)"Suspend collaboration (%@)", 26, 2, v22);
    swift_setDeallocating();
    swift_arrayDestroy();

    goto LABEL_18;
  }
  __break(1u);
  return result;
}

uint64_t sub_1007408F4(uint64_t a1)
{
  uint64_t v1 = a1 + 64;
  uint64_t v2 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v3 = -1;
  if (v2 < 64) {
    uint64_t v3 = ~(-1 << v2);
  }
  unint64_t v4 = v3 & *(void *)(a1 + 64);
  int64_t v5 = (unint64_t)(v2 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  uint64_t v7 = 0;
  int64_t v8 = 0;
  do
  {
    if (v4)
    {
      unint64_t v9 = __clz(__rbit64(v4));
      v4 &= v4 - 1;
      unint64_t v10 = v9 | (v8 << 6);
    }
    else
    {
      int64_t v13 = v8 + 1;
      if (__OFADD__(v8, 1)) {
        goto LABEL_23;
      }
      if (v13 >= v5)
      {
LABEL_21:
        swift_release();
        return v7;
      }
      unint64_t v14 = *(void *)(v1 + 8 * v13);
      ++v8;
      if (!v14)
      {
        int64_t v8 = v13 + 1;
        if (v13 + 1 >= v5) {
          goto LABEL_21;
        }
        unint64_t v14 = *(void *)(v1 + 8 * v8);
        if (!v14)
        {
          int64_t v8 = v13 + 2;
          if (v13 + 2 >= v5) {
            goto LABEL_21;
          }
          unint64_t v14 = *(void *)(v1 + 8 * v8);
          if (!v14)
          {
            int64_t v15 = v13 + 3;
            if (v15 >= v5) {
              goto LABEL_21;
            }
            unint64_t v14 = *(void *)(v1 + 8 * v15);
            if (!v14)
            {
              while (1)
              {
                int64_t v8 = v15 + 1;
                if (__OFADD__(v15, 1)) {
                  goto LABEL_24;
                }
                if (v8 >= v5) {
                  goto LABEL_21;
                }
                unint64_t v14 = *(void *)(v1 + 8 * v8);
                ++v15;
                if (v14) {
                  goto LABEL_20;
                }
              }
            }
            int64_t v8 = v15;
          }
        }
      }
LABEL_20:
      unint64_t v4 = (v14 - 1) & v14;
      unint64_t v10 = __clz(__rbit64(v14)) + (v8 << 6);
    }
    uint64_t v11 = *(void *)(*(void *)(result + 56) + 8 * v10);
    BOOL v12 = __OFADD__(v7, v11);
    v7 += v11;
  }
  while (!v12);
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
  return result;
}

uint64_t sub_100740A28(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = (void **)v2;
  swift_bridgeObjectRetain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  int64_t v8 = (void *)*v2;
  uint64_t v22 = v8;
  *unint64_t v4 = (void *)0x8000000000000000;
  unint64_t v10 = sub_100955F50(a1, a2);
  uint64_t v11 = v8[2];
  BOOL v12 = (v9 & 1) == 0;
  uint64_t v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
    goto LABEL_13;
  }
  char v3 = v9;
  if (v8[3] >= v13)
  {
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      goto LABEL_14;
    }
  }
  else
  {
    sub_100966EB8(v13, isUniquelyReferenced_nonNull_native);
    unint64_t v14 = sub_100955F50(a1, a2);
    if ((v3 & 1) != (v15 & 1))
    {
      uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
      __break(1u);
      return result;
    }
    unint64_t v10 = v14;
  }
  while (1)
  {
    *unint64_t v4 = v8;
    swift_bridgeObjectRelease();
    uint64_t v16 = (uint64_t)*v4;
    if ((v3 & 1) == 0)
    {
      sub_10097AD24(v10, a1, a2, 0, *v4);
      swift_bridgeObjectRetain();
    }
    uint64_t v17 = *(void *)(v16 + 56);
    uint64_t v18 = *(void *)(v17 + 8 * v10);
    BOOL v19 = __OFADD__(v18, 1);
    uint64_t v20 = v18 + 1;
    if (!v19) {
      break;
    }
LABEL_13:
    __break(1u);
LABEL_14:
    sub_10097FF18();
    int64_t v8 = v22;
  }
  *(void *)(v17 + 8 * v10) = v20;

  return swift_bridgeObjectRelease();
}

void sub_100740B84()
{
  if (qword_10166FB98 != -1) {
    swift_once();
  }
  swift_beginAccess();
  id v1 = (id)static OS_os_log.suspendResumeCollaboration;
  uint64_t v2 = static os_log_type_t.debug.getter();
  sub_100BAC898((uint64_t)v1, (uint64_t)&_mh_execute_header, v2, (uint64_t)"suspend collaboration for contextSet", 36, 2, (uint64_t)_swiftEmptyArrayStorage);

  if ((*(unsigned char *)(v0 + 40) & 1) == 0)
  {
    swift_beginAccess();
    uint64_t v3 = swift_bridgeObjectRetain();
    sub_10057C498(v3);
    swift_endAccess();
    if (swift_unknownObjectWeakLoadStrong()) {
      swift_unknownObjectRelease();
    }
  }
}

void sub_100740C8C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_1005057FC(&qword_101672BB0);
  __chkstk_darwin(v6 - 8, v7);
  uint64_t v46 = (uint64_t)v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v9 = (uint64_t **)(v2 + 64);
  swift_beginAccess();
  uint64_t v10 = swift_bridgeObjectRetain();
  uint64_t v11 = sub_1007408F4(v10);
  swift_bridgeObjectRelease();
  uint64_t v12 = *(void *)(v2 + 64);
  if (*(void *)(v12 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v13 = sub_100955F50(a1, a2);
    if (v14) {
      uint64_t v15 = *(void *)(*(void *)(v12 + 56) + 8 * v13);
    }
    else {
      uint64_t v15 = 0;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v15 = 0;
  }
  uint64_t v16 = sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  long long v48 = xmmword_10117E810;
  *(_OWORD *)(inited + 16) = xmmword_10117E810;
  *(void *)(inited + 56) = &type metadata for String;
  unint64_t v49 = sub_100528BE4();
  *(void *)(inited + 64) = v49;
  *(void *)(inited + 32) = a1;
  *(void *)(inited + 40) = a2;
  swift_bridgeObjectRetain();
  if (v15 <= 0)
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"resumeCollaboration(withReason:)", 32, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLApplication/CRLSuspendResumeCoordinator.swift", 102, 2, 139, (uint64_t)"Resume collaboration without matching suspendCollaboration for reason (%@)", 74, 2u, inited);
    sub_1005598CC(inited, (uint64_t)"resumeCollaboration(withReason:)", 32, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLApplication/CRLSuspendResumeCoordinator.swift", 102, 2, 139);
  }
  swift_bridgeObjectRelease();
  if (qword_10166FB98 != -1) {
    swift_once();
  }
  uint64_t v18 = &static OS_os_log.suspendResumeCollaboration;
  swift_beginAccess();
  BOOL v19 = (void *)static OS_os_log.suspendResumeCollaboration;
  uint64_t v20 = swift_initStackObject();
  *(_OWORD *)(v20 + 16) = xmmword_10117DF40;
  if (__OFSUB__(v11, 1))
  {
    __break(1u);
    goto LABEL_27;
  }
  uint64_t v18 = (uint64_t *)v20;
  *(void *)(v20 + 56) = &type metadata for Int;
  *(void *)(v20 + 64) = &protocol witness table for Int;
  *(void *)(v20 + 32) = v11 - 1;
  if (__OFSUB__(v15, 1))
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  uint64_t v47 = v16;
  *(void *)(v20 + 96) = &type metadata for Int;
  *(void *)(v20 + 104) = &protocol witness table for Int;
  *(void *)(v20 + 72) = v15 - 1;
  unint64_t v21 = v49;
  *(void *)(v20 + 136) = &type metadata for String;
  *(void *)(v20 + 144) = v21;
  *(void *)(v20 + 112) = a1;
  *(void *)(v20 + 120) = a2;
  swift_bridgeObjectRetain();
  id v22 = v19;
  uint64_t v23 = static os_log_type_t.info.getter();
  sub_100BAC898((uint64_t)v22, (uint64_t)&_mh_execute_header, v23, (uint64_t)"Resume collaboration, suspend count: %lu total, %lu for reason (%@)", 67, 2, (uint64_t)v18);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  if (v15 >= 1)
  {
    swift_beginAccess();
    sub_1007412EC(a1, a2);
    swift_endAccess();
    swift_bridgeObjectRelease();
    uint64_t v18 = *v9;
    uint64_t v24 = swift_bridgeObjectRetain();
    uint64_t v25 = sub_1007408F4(v24);
    swift_bridgeObjectRelease();
    if (!v25)
    {
      uint64_t v26 = *(void *)(v3 + 48);
      uint64_t v27 = v26 - 1;
      if (!__OFSUB__(v26, 1))
      {
        uint64_t v28 = a1;
        *(void *)(v3 + 48) = v27;
        sub_100C37A6C(v27, -1, (uint64_t)&_mh_execute_header, (uint64_t)"resumeIncoming()", 16, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLApplication/CRLSuspendResumeCoordinator.swift", 102, 2u, 192);
        if (!*(void *)(v3 + 48))
        {
          uint64_t Strong = swift_unknownObjectWeakLoadStrong();
          if (Strong)
          {
            uint64_t v30 = Strong;
            if (*(unsigned char *)(Strong
                          + OBJC_IVAR____TtCC8Freeform15CRLBoardLibrary9BoardInfo_hasPausedIncomingDatabaseUpdate) == 1)
            {
              *(unsigned char *)(Strong + OBJC_IVAR____TtCC8Freeform15CRLBoardLibrary9BoardInfo_hasPausedIncomingDatabaseUpdate) = 0;
              sub_100F075A4();
            }
            uint64_t v31 = (uint64_t *)(v30 + OBJC_IVAR____TtCC8Freeform15CRLBoardLibrary9BoardInfo_realTimeSyncSession);
            swift_beginAccess();
            uint64_t v32 = *v31;
            if (*v31)
            {
              uint64_t v33 = v31[2];
              uint64_t v45 = v31[3];
              uint64_t v34 = v31[1];
              uint64_t v35 = type metadata accessor for TaskPriority();
              (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 56))(v46, 1, 1, v35);
              uint64_t v36 = (void *)swift_allocObject();
              v36[2] = 0;
              v36[3] = 0;
              v36[4] = v32;
              v36[5] = v34;
              uint64_t v37 = v45;
              v36[6] = v33;
              v36[7] = v37;
              v44[1] = v33;
              v44[2] = v34;
              sub_100741A58(v32);
              swift_retain();
              swift_retain();
              swift_retain();
              swift_bridgeObjectRetain();
              uint64_t v38 = v46;
              sub_100B107F4(v46, (uint64_t)&unk_10167DBB0, (uint64_t)v36);
              swift_release();
              sub_100741AB8(v32);
              sub_1005E52F0(v38);
            }
            swift_unknownObjectRelease();
          }
        }
        BOOL v39 = (void *)static OS_os_log.suspendResumeCollaboration;
        uint64_t v40 = swift_initStackObject();
        *(_OWORD *)(v40 + 16) = v48;
        unint64_t v41 = v49;
        *(void *)(v40 + 56) = &type metadata for String;
        *(void *)(v40 + 64) = v41;
        *(void *)(v40 + 32) = v28;
        *(void *)(v40 + 40) = a2;
        swift_bridgeObjectRetain();
        id v42 = v39;
        uint64_t v43 = static os_log_type_t.info.getter();
        sub_100BAC898((uint64_t)v42, (uint64_t)&_mh_execute_header, v43, (uint64_t)"Resume collaboration (%@)", 25, 2, v40);
        swift_setDeallocating();
        swift_arrayDestroy();

        uint64_t v18 = (uint64_t *)[self defaultCenter];
        if (qword_10166EEF0 == -1) {
          goto LABEL_24;
        }
        goto LABEL_29;
      }
LABEL_28:
      __break(1u);
LABEL_29:
      swift_once();
LABEL_24:
      [v18 postNotificationName:qword_10171A688 object:v3];
    }
  }
}

uint64_t sub_1007412EC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v4 = *v2;
  if (!*(void *)(v4 + 16)) {
    return 0;
  }
  uint64_t v6 = a1;
  unint64_t v7 = sub_100955F50(a1, a2);
  if ((v8 & 1) == 0) {
    return 0;
  }
  uint64_t v9 = *(void *)(*(void *)(v4 + 56) + 8 * v7);
  uint64_t v10 = v9 - 1;
  if (v9 < 1) {
    return 0;
  }
  swift_bridgeObjectRetain();
  if (v10)
  {
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v13 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_1009756F0(v10, v6, a2, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v13;
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_10095C4A0(v6, a2);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  return v6;
}

uint64_t sub_1007413DC()
{
  uint64_t v1 = sub_1005057FC(&qword_101672BB0);
  __chkstk_darwin(v1 - 8, v2);
  uint64_t v4 = &v14[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  swift_beginAccess();
  *(void *)(v0 + 72) = &_swiftEmptySetSingleton;
  swift_bridgeObjectRelease();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v6 = result;
    if (*(unsigned char *)(result + OBJC_IVAR____TtCC8Freeform15CRLBoardLibrary9BoardInfo_hasPausedIncomingDatabaseUpdate) == 1)
    {
      *(unsigned char *)(result + OBJC_IVAR____TtCC8Freeform15CRLBoardLibrary9BoardInfo_hasPausedIncomingDatabaseUpdate) = 0;
      sub_100F075A4();
    }
    unint64_t v7 = (uint64_t *)(v6 + OBJC_IVAR____TtCC8Freeform15CRLBoardLibrary9BoardInfo_realTimeSyncSession);
    swift_beginAccess();
    uint64_t v8 = *v7;
    if (*v7)
    {
      uint64_t v10 = v7[2];
      uint64_t v9 = v7[3];
      uint64_t v11 = v7[1];
      uint64_t v12 = type metadata accessor for TaskPriority();
      (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v4, 1, 1, v12);
      uint64_t v13 = (void *)swift_allocObject();
      v13[2] = 0;
      _OWORD v13[3] = 0;
      v13[4] = v8;
      v13[5] = v11;
      v13[6] = v10;
      v13[7] = v9;
      sub_100741A58(v8);
      swift_retain();
      swift_retain();
      swift_retain();
      swift_bridgeObjectRetain();
      sub_100B107F4((uint64_t)v4, (uint64_t)&unk_10167DBA8, (uint64_t)v13);
      swift_release();
      sub_100741AB8(v8);
      sub_1005E52F0((uint64_t)v4);
    }
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1007415C8(uint64_t a1)
{
  if (*(unsigned char *)(v1 + 40) == 1)
  {
    if (qword_10166FB98 != -1) {
      goto LABEL_32;
    }
    goto LABEL_3;
  }
  uint64_t v6 = *(void *)(v1 + 32);
  swift_beginAccess();
  uint64_t v7 = *(void *)(v1 + 72);
  swift_bridgeObjectRetain();
  uint64_t v8 = *(void *)(sub_100F2621C(a1, v7) + 16);
  swift_release();
  if (v8)
  {
    if (qword_10166FB98 != -1) {
      swift_once();
    }
    swift_beginAccess();
    id v9 = (id)static OS_os_log.suspendResumeCollaboration;
    uint64_t v10 = static os_log_type_t.debug.getter();
    sub_100BAC898((uint64_t)v9, (uint64_t)&_mh_execute_header, v10, (uint64_t)"Incoming Suspended for matching context", 39, 2, (uint64_t)_swiftEmptyArrayStorage);

    char v4 = 1;
    return v4 & 1;
  }
  uint64_t v1 = a1 + 56;
  uint64_t v11 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(a1 + 56);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  swift_bridgeObjectRetain();
  char v4 = 0;
  int64_t v15 = 0;
  while (1)
  {
    if (v13)
    {
      unint64_t v16 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v17 = v16 | (v15 << 6);
      goto LABEL_12;
    }
    int64_t v19 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
      __break(1u);
      goto LABEL_31;
    }
    if (v19 >= v14) {
      goto LABEL_28;
    }
    unint64_t v20 = *(void *)(v1 + 8 * v19);
    ++v15;
    if (!v20)
    {
      int64_t v15 = v19 + 1;
      if (v19 + 1 >= v14) {
        goto LABEL_28;
      }
      unint64_t v20 = *(void *)(v1 + 8 * v15);
      if (!v20)
      {
        int64_t v15 = v19 + 2;
        if (v19 + 2 >= v14) {
          goto LABEL_28;
        }
        unint64_t v20 = *(void *)(v1 + 8 * v15);
        if (!v20) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v13 = (v20 - 1) & v20;
    unint64_t v17 = __clz(__rbit64(v20)) + (v15 << 6);
LABEL_12:
    sub_10052E538(*(void *)(a1 + 48) + 48 * v17, (uint64_t)v23);
    uint64_t v18 = v24;
    sub_10058EF74((uint64_t)v23);
    v4 |= (v18 & ~v6) != 0;
  }
  int64_t v21 = v19 + 3;
  if (v21 >= v14)
  {
LABEL_28:
    swift_release();
    return v4 & 1;
  }
  unint64_t v20 = *(void *)(v1 + 8 * v21);
  if (v20)
  {
    int64_t v15 = v21;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v15 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v15 >= v14) {
      goto LABEL_28;
    }
    unint64_t v20 = *(void *)(v1 + 8 * v15);
    ++v21;
    if (v20) {
      goto LABEL_27;
    }
  }
LABEL_31:
  __break(1u);
LABEL_32:
  swift_once();
LABEL_3:
  swift_beginAccess();
  id v2 = (id)static OS_os_log.suspendResumeCollaboration;
  uint64_t v3 = static os_log_type_t.debug.getter();
  sub_100BAC898((uint64_t)v2, (uint64_t)&_mh_execute_header, v3, (uint64_t)"Incoming Suspended for all", 26, 2, (uint64_t)_swiftEmptyArrayStorage);

  char v4 = *(void *)(v1 + 48) > 0;
  return v4 & 1;
}

uint64_t sub_1007418B8()
{
  sub_100523398(v0 + 16);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for CRLSuspendResumeCoordinator()
{
  return self;
}

uint64_t getEnumTagSinglePayload for CRLMiniFormatterStrokeDataProvider.StrokeChangingState(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 9)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for CRLSuspendResumeConfiguration(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)uint64_t result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 9) = v3;
  return result;
}

ValueMetadata *type metadata accessor for CRLSuspendResumeConfiguration()
{
  return &type metadata for CRLSuspendResumeConfiguration;
}

uint64_t sub_100741984(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  id v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *id v9 = v2;
  v9[1] = sub_100528D08;
  return sub_100F074FC(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_100741A58(uint64_t result)
{
  if (result)
  {
    swift_retain();
    swift_retain();
    swift_retain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_100741AB8(uint64_t result)
{
  if (result)
  {
    swift_release();
    swift_release();
    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_100741B1C()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 64, 7);
}

uint64_t sub_100741B74(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  id v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *id v9 = v2;
  v9[1] = sub_100528488;
  return sub_100F074FC(a1, v4, v5, v6, v7, v8);
}

uint64_t storeEnumTagSinglePayload for CRLMiniFormatterStrokeDataProvider.StrokeChangingState(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)uint64_t result = 0;
    *(unsigned char *)(result + 8) = 0;
    *(_DWORD *)uint64_t result = a2 - 1;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 9) = v3;
  return result;
}

uint64_t sub_100741C78(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 8)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_100741C94(uint64_t result, int a2)
{
  if (a2)
  {
    *(void *)uint64_t result = (a2 - 1);
    *(unsigned char *)(result + 8) = 1;
  }
  else
  {
    *(unsigned char *)(result + 8) = 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLSuspendResumeConfiguration.SupensionTargetKind()
{
  return &type metadata for CRLSuspendResumeConfiguration.SupensionTargetKind;
}

char *CRLiOSPencilMediator.__allocating_init(interactiveCanvasController:)(void *a1)
{
  char v3 = objc_allocWithZone(v1);
  v3[OBJC_IVAR____TtC8Freeform20CRLiOSPencilMediator_wasTeardownCalled] = 0;
  uint64_t v4 = &v3[OBJC_IVAR____TtC8Freeform20CRLiOSPencilMediator_prefersPencilOnlyDrawingKeyPath];
  *uint64_t v4 = 0xD000000000000018;
  v4[1] = 0x8000000101235F10;
  v3[OBJC_IVAR____TtC8Freeform20CRLiOSPencilMediator_hasPencilBeenUsedForCurrentPencilMode] = 0;
  *(void *)&v3[OBJC_IVAR____TtC8Freeform20CRLiOSPencilMediator_currentPencilModeType] = 0;
  *(void *)&v3[OBJC_IVAR____TtC8Freeform20CRLiOSPencilMediator__lastPencilModeType] = 0;
  v3[OBJC_IVAR____TtC8Freeform20CRLiOSPencilMediator_hasFingerBeenUsedForFreehandDrawingSession] = 0;
  v3[OBJC_IVAR____TtC8Freeform20CRLiOSPencilMediator_hasIndirectTouchBeenUsedForFreehandDrawingSession] = 0;
  swift_unknownObjectUnownedInit();
  v14.receiver = v3;
  v14.super_class = v1;
  [super init];
  uint64_t v6 = self;
  uint64_t v7 = (char *)v5;
  id v8 = [v6 standardUserDefaults];
  NSString v9 = String._bridgeToObjectiveC()();
  id v10 = [v8 integerForKey:v9];

  *(void *)&v7[OBJC_IVAR____TtC8Freeform20CRLiOSPencilMediator__lastPencilModeType] = sub_100743DB0((unint64_t)v10);
  sub_10050BF48(0, (unint64_t *)&unk_10167DC00);
  ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
  NSString v12 = String._bridgeToObjectiveC()();
  [ObjCClassFromMetadata addObserver:v7 forKeyPath:v12 options:0 context:0];

  return v7;
}

char *CRLiOSPencilMediator.init(interactiveCanvasController:)(void *a1)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  v1[OBJC_IVAR____TtC8Freeform20CRLiOSPencilMediator_wasTeardownCalled] = 0;
  uint64_t v4 = &v1[OBJC_IVAR____TtC8Freeform20CRLiOSPencilMediator_prefersPencilOnlyDrawingKeyPath];
  *uint64_t v4 = 0xD000000000000018;
  v4[1] = 0x8000000101235F10;
  v1[OBJC_IVAR____TtC8Freeform20CRLiOSPencilMediator_hasPencilBeenUsedForCurrentPencilMode] = 0;
  *(void *)&v1[OBJC_IVAR____TtC8Freeform20CRLiOSPencilMediator_currentPencilModeType] = 0;
  *(void *)&v1[OBJC_IVAR____TtC8Freeform20CRLiOSPencilMediator__lastPencilModeType] = 0;
  v1[OBJC_IVAR____TtC8Freeform20CRLiOSPencilMediator_hasFingerBeenUsedForFreehandDrawingSession] = 0;
  v1[OBJC_IVAR____TtC8Freeform20CRLiOSPencilMediator_hasIndirectTouchBeenUsedForFreehandDrawingSession] = 0;
  swift_unknownObjectUnownedInit();
  v14.receiver = v1;
  v14.super_class = ObjectType;
  id v5 = [super init];
  uint64_t v6 = self;
  uint64_t v7 = (char *)v5;
  id v8 = [v6 standardUserDefaults];
  NSString v9 = String._bridgeToObjectiveC()();
  id v10 = [v8 integerForKey:v9];

  *(void *)&v7[OBJC_IVAR____TtC8Freeform20CRLiOSPencilMediator__lastPencilModeType] = sub_100743DB0((unint64_t)v10);
  sub_10050BF48(0, (unint64_t *)&unk_10167DC00);
  ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
  NSString v12 = String._bridgeToObjectiveC()();
  [ObjCClassFromMetadata addObserver:v7 forKeyPath:v12 options:0 context:0];

  return v7;
}

void sub_100742084()
{
  v0[OBJC_IVAR____TtC8Freeform20CRLiOSPencilMediator_wasTeardownCalled] = 0;
  uint64_t v1 = &v0[OBJC_IVAR____TtC8Freeform20CRLiOSPencilMediator_prefersPencilOnlyDrawingKeyPath];
  *uint64_t v1 = 0xD000000000000018;
  v1[1] = 0x8000000101235F10;
  v0[OBJC_IVAR____TtC8Freeform20CRLiOSPencilMediator_hasPencilBeenUsedForCurrentPencilMode] = 0;
  *(void *)&v0[OBJC_IVAR____TtC8Freeform20CRLiOSPencilMediator_currentPencilModeType] = 0;
  *(void *)&v0[OBJC_IVAR____TtC8Freeform20CRLiOSPencilMediator__lastPencilModeType] = 0;
  v0[OBJC_IVAR____TtC8Freeform20CRLiOSPencilMediator_hasFingerBeenUsedForFreehandDrawingSession] = 0;
  v0[OBJC_IVAR____TtC8Freeform20CRLiOSPencilMediator_hasIndirectTouchBeenUsedForFreehandDrawingSession] = 0;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

Swift::Void __swiftcall CRLiOSPencilMediator.teardown()()
{
  uint64_t v1 = OBJC_IVAR____TtC8Freeform20CRLiOSPencilMediator_wasTeardownCalled;
  if (*(unsigned char *)(v0 + OBJC_IVAR____TtC8Freeform20CRLiOSPencilMediator_wasTeardownCalled) == 1)
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"teardown()", 10, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLiOSPencilMediator.swift", 91, 2, 47, (uint64_t)"Should not call teardown() twice.", 33, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"teardown()", 10, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLiOSPencilMediator.swift", 91, 2, 47);
  }
  *(unsigned char *)(v0 + v1) = 1;
  sub_10050BF48(0, (unint64_t *)&unk_10167DC00);
  ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
  id v3 = String._bridgeToObjectiveC()();
  [ObjCClassFromMetadata removeObserver:v0 forKeyPath:v3];
}

id CRLiOSPencilMediator.__deallocating_deinit()
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  if ((v0[OBJC_IVAR____TtC8Freeform20CRLiOSPencilMediator_wasTeardownCalled] & 1) == 0)
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"deinit", 6, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLiOSPencilMediator.swift", 91, 2, 54, (uint64_t)"Must call teardown() before CRLiOSPencilMediator is deinitialized.", 66, 2u, (uint64_t)_swiftEmptyArrayStorage);
    LOBYTE(v5) = 2;
    id v3 = "Must call teardown() before CRLiOSPencilMediator is deinitialized.";
    uint64_t v4 = 66;
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"deinit", 6, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLiOSPencilMediator.swift", 91, 2, 54);
  }
  v6.receiver = v0;
  v6.super_class = ObjectType;
  return [super dealloc:v3, v4, v5];
}

uint64_t sub_100742538()
{
  uint64_t Strong = (void *)swift_unknownObjectUnownedLoadStrong();
  id v1 = [Strong layerHost];

  if (v1)
  {
    if ([v1 respondsToSelector:"asiOSCVC"])
    {
      id v2 = [v1 asiOSCVC];
      swift_unknownObjectRelease();
      return (uint64_t)v2;
    }
    swift_unknownObjectRelease();
  }
  sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"cvc", 3, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLiOSPencilMediator.swift", 91, 2, 58, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
  sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"cvc", 3, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLiOSPencilMediator.swift", 91, 2, 58);
  uint64_t result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

id CRLiOSPencilMediator.prefersPencilOnlyDrawing.getter()
{
  return [self prefersPencilOnlyDrawing];
}

void CRLiOSPencilMediator.setCurrentPencilModeType(_:)(unint64_t a1)
{
  uint64_t v2 = OBJC_IVAR____TtC8Freeform20CRLiOSPencilMediator_currentPencilModeType;
  uint64_t v3 = *(void *)(v1 + OBJC_IVAR____TtC8Freeform20CRLiOSPencilMediator_currentPencilModeType);
  if (v3 != a1)
  {
    if (v3)
    {
      if (*(unsigned char *)(v1 + OBJC_IVAR____TtC8Freeform20CRLiOSPencilMediator_hasPencilBeenUsedForCurrentPencilMode) == 1) {
        *(unsigned char *)(v1 + OBJC_IVAR____TtC8Freeform20CRLiOSPencilMediator_hasPencilBeenUsedForCurrentPencilMode) = 0;
      }
      if (*(unsigned char *)(v1 + OBJC_IVAR____TtC8Freeform20CRLiOSPencilMediator_hasFingerBeenUsedForFreehandDrawingSession) == 1) {
        *(unsigned char *)(v1 + OBJC_IVAR____TtC8Freeform20CRLiOSPencilMediator_hasFingerBeenUsedForFreehandDrawingSession) = 0;
      }
      if (*(unsigned char *)(v1
                    + OBJC_IVAR____TtC8Freeform20CRLiOSPencilMediator_hasIndirectTouchBeenUsedForFreehandDrawingSession) == 1)
        *(unsigned char *)(v1 + OBJC_IVAR____TtC8Freeform20CRLiOSPencilMediator_hasIndirectTouchBeenUsedForFreehandDrawingSession) = 0;
    }
    *(void *)(v1 + v2) = a1;
    if (a1) {
      sub_100742780(a1);
    }
  }
}

void sub_100742780(unint64_t a1)
{
  if (a1)
  {
    *(void *)(v1 + OBJC_IVAR____TtC8Freeform20CRLiOSPencilMediator__lastPencilModeType) = a1;
    id v3 = [self standardUserDefaults];
    if (a1 >= 3)
    {
      type metadata accessor for CRLiOSPencilModeType(0);
      _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)();
      __break(1u);
    }
    else
    {
      uint64_t v4 = v3;
      id v5 = String._bridgeToObjectiveC()();
      [v4 setInteger:a1 forKey:v5];
    }
  }
  else
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"lastPencilModeType", 18, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLiOSPencilMediator.swift", 91, 2, 134, (uint64_t)"Should not set lastPencilModeType to none.", 42, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"lastPencilModeType", 18, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLiOSPencilMediator.swift", 91, 2, 134);
  }
}

void CRLiOSPencilMediator.setNextPencilModeType(_:)(unint64_t a1)
{
  if (a1)
  {
    sub_100742780(a1);
  }
  else
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"setNextPencilModeType(_:)", 25, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLiOSPencilMediator.swift", 91, 2, 113, (uint64_t)"Should not call setNextPencilModeType() with modeType none.", 59, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"setNextPencilModeType(_:)", 25, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLiOSPencilMediator.swift", 91, 2, 113);
  }
}

uint64_t CRLiOSPencilMediator.lastPencilModeTypeForArchivingOnly.getter()
{
  return *(void *)(v0 + OBJC_IVAR____TtC8Freeform20CRLiOSPencilMediator__lastPencilModeType);
}

void CRLiOSPencilMediator.markPencilUsed(for:)(uint64_t a1)
{
  if (a1)
  {
    if ((*(unsigned char *)(v1 + OBJC_IVAR____TtC8Freeform20CRLiOSPencilMediator_hasPencilBeenUsedForCurrentPencilMode) & 1) == 0)
    {
      *(unsigned char *)(v1 + OBJC_IVAR____TtC8Freeform20CRLiOSPencilMediator_hasPencilBeenUsedForCurrentPencilMode) = 1;
      sub_100743EE4(a1);
    }
  }
  else
  {
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"markPencilUsed(for:)", 20, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLiOSPencilMediator.swift", 91, 2, 159);
  }
}

Swift::Void __swiftcall CRLiOSPencilMediator.fingerUsedForFreehandDrawingMode()()
{
  if ((*(unsigned char *)(v0 + OBJC_IVAR____TtC8Freeform20CRLiOSPencilMediator_hasFingerBeenUsedForFreehandDrawingSession) & 1) == 0)
  {
    *(unsigned char *)(v0 + OBJC_IVAR____TtC8Freeform20CRLiOSPencilMediator_hasFingerBeenUsedForFreehandDrawingSession) = 1;
    uint64_t v1 = self;
    NSString v2 = String._bridgeToObjectiveC()();
    _s8Freeform23CRLAnalyticsFeatureUsedC14featurePayload3forSDySSSo8NSObjectCGAA0bC4NameO_tFZ_0(7);
    sub_10050BF48(0, (unint64_t *)&qword_101672E50);
    Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v1 sendEventInDomain:v2 lazily:1 eventPayload:isa];
  }
}

Swift::Void __swiftcall CRLiOSPencilMediator.indirectTouchUsedForFreehandDrawingMode()()
{
  if ((*(unsigned char *)(v0 + OBJC_IVAR____TtC8Freeform20CRLiOSPencilMediator_hasIndirectTouchBeenUsedForFreehandDrawingSession) & 1) == 0)
  {
    *(unsigned char *)(v0 + OBJC_IVAR____TtC8Freeform20CRLiOSPencilMediator_hasIndirectTouchBeenUsedForFreehandDrawingSession) = 1;
    uint64_t v1 = self;
    NSString v2 = String._bridgeToObjectiveC()();
    _s8Freeform23CRLAnalyticsFeatureUsedC14featurePayload3forSDySSSo8NSObjectCGAA0bC4NameO_tFZ_0(8);
    sub_10050BF48(0, (unint64_t *)&qword_101672E50);
    Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v1 sendEventInDomain:v2 lazily:1 eventPayload:isa];
  }
}

uint64_t CRLiOSPencilMediator.pencilModeToBeginFromToolbarItem.getter()
{
  uint64_t v1 = (void *)sub_100742538();
  id v2 = [v1 delegate];

  if (!v2)
  {
    __break(1u);
LABEL_19:
    type metadata accessor for CRLiOSPencilModeType(0);
    goto LABEL_21;
  }
  if (([v2 respondsToSelector:"currentDocumentMode"] & 1) == 0)
  {
    swift_unknownObjectRelease();
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"pencilModeToBeginFromToolbarItem", 32, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLiOSPencilMediator.swift", 91, 2, 217, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"pencilModeToBeginFromToolbarItem", 32, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLiOSPencilMediator.swift", 91, 2, 217);
    return 0;
  }
  id v3 = [v2 currentDocumentMode];
  swift_unknownObjectRelease();
  if ([v3 pencilModeType])
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"pencilModeToBeginFromToolbarItem", 32, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLiOSPencilMediator.swift", 91, 2, 221, (uint64_t)"It is invalid to ask the mediator for the pencilModeToBeginFromToolbarItem when in a pencil-centric document mode.", 114, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"pencilModeToBeginFromToolbarItem", 32, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLiOSPencilMediator.swift", 91, 2, 221);
LABEL_5:

    return 0;
  }
  unint64_t v5 = *(void *)(v0 + OBJC_IVAR____TtC8Freeform20CRLiOSPencilMediator__lastPencilModeType);
  if (v5 >= 2)
  {
    if (v5 == 2)
    {
      unsigned __int8 v7 = [self _canShowHandwritingTool];

      if ((v7 & 1) == 0) {
        return 1;
      }
      return 2;
    }
    goto LABEL_19;
  }
  uint64_t v6 = sub_100743924();
  switch(v6)
  {
    case 0:
      goto LABEL_5;
    case 1:

      return 1;
    case 2:

      return 2;
  }
  type metadata accessor for CRLiOSPencilBehavior(0);
LABEL_21:
  uint64_t result = _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)();
  __break(1u);
  return result;
}

void CRLiOSPencilMediator.pencilBehaviorOutsideModes(at:)()
{
  uint64_t v0 = (void *)sub_100742538();
  id v1 = [v0 delegate];

  if (v1)
  {
    if ([v1 respondsToSelector:"currentDocumentMode"])
    {
      id v2 = [v1 currentDocumentMode];
      swift_unknownObjectRelease();
      if ([v2 pencilModeType])
      {
        sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"pencilBehaviorOutsideModes(at:)", 31, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLiOSPencilMediator.swift", 91, 2, 236, (uint64_t)"It is invalid to ask the mediator for the pencilBehaviorOutsideModes when in a pencil-centric document mode.", 108, 2u, (uint64_t)_swiftEmptyArrayStorage);
        sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"pencilBehaviorOutsideModes(at:)", 31, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLiOSPencilMediator.swift", 91, 2, 236);
      }
      else
      {
        sub_100743404();
      }
    }
    else
    {
      swift_unknownObjectRelease();
      sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"pencilBehaviorOutsideModes(at:)", 31, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLiOSPencilMediator.swift", 91, 2, 232, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"pencilBehaviorOutsideModes(at:)", 31, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLiOSPencilMediator.swift", 91, 2, 232);
    }
  }
  else
  {
    __break(1u);
  }
}

void sub_100743404()
{
  uint64_t v1 = v0;
  id v2 = (void *)sub_100742538();
  id v3 = [v2 delegate];

  if (v3)
  {
    if (([v3 respondsToSelector:"currentDocumentMode"] & 1) == 0)
    {
      swift_unknownObjectRelease();
      sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"p_pencilBehavior(at:)", 21, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLiOSPencilMediator.swift", 91, 2, 244, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"p_pencilBehavior(at:)", 21, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLiOSPencilMediator.swift", 91, 2, 244);
      return;
    }
    id v4 = [v3 currentDocumentMode];
    swift_unknownObjectRelease();
    unint64_t v5 = (void *)sub_100742538();
    unsigned __int8 v6 = [v5 shouldSelectAndScrollWithApplePencil];

    if ((v6 & 1) != 0 && [v4 pencilModeType])
    {
      unint64_t v7 = *(void *)(v1 + OBJC_IVAR____TtC8Freeform20CRLiOSPencilMediator__lastPencilModeType);
      if (v7 == 2)
      {
LABEL_18:
        [self _canShowHandwritingTool];

        return;
      }
      if (v7 <= 1)
      {
LABEL_7:
        sub_100743924();

        return;
      }
    }
    else
    {
      id v8 = (void *)sub_100742538();
      unsigned int v9 = [v8 shouldSelectAndScrollWithApplePencil];

      if (v9) {
        goto LABEL_14;
      }
      id v10 = (void *)sub_100742538();
      unsigned int v11 = [v10 shouldPreventDefaultPencilBehaviors];

      if (v11) {
        goto LABEL_14;
      }
      if ([v4 wantsToPreventStandardPencilBehaviors]) {
        goto LABEL_14;
      }
      uint64_t Strong = (void *)swift_unknownObjectUnownedLoadStrong();
      id v13 = sub_100E82A24(2);
      int64_t v15 = v14;

      if (v13)
      {
        id v16 = v13;
        unsigned int v17 = [v16 worksWithStylus];
        sub_1007440F4(v13, v15);

        if (v17)
        {
LABEL_14:

          return;
        }
      }
      unint64_t v18 = *(void *)(v1 + OBJC_IVAR____TtC8Freeform20CRLiOSPencilMediator__lastPencilModeType);
      if (v18 == 2) {
        goto LABEL_18;
      }
      if (v18 < 2) {
        goto LABEL_7;
      }
    }
    type metadata accessor for CRLiOSPencilModeType(0);
    _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)();
    __break(1u);
    goto LABEL_18;
  }
  __break(1u);
}

BOOL CRLiOSPencilMediator.shouldAllowPencilKitHoverPreview(at:)()
{
  sub_100743404();
  uint64_t v1 = v0;
  uint64_t Strong = (void *)swift_unknownObjectUnownedLoadStrong();
  id v3 = [Strong freehandDrawingToolkit];

  if (v3)
  {
    int v4 = sub_100BE4D7C();

    BOOL v5 = v4 == 8;
  }
  else
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"shouldAllowPencilKitHoverPreview(at:)", 37, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLiOSPencilMediator.swift", 91, 2, 274, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"shouldAllowPencilKitHoverPreview(at:)", 37, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLiOSPencilMediator.swift", 91, 2, 274);
    BOOL v5 = 1;
  }
  return v1 == 1 && v5;
}

BOOL CRLiOSPencilMediator.shouldAllowNativeHoverPreview(at:)()
{
  sub_100743404();
  return (unint64_t)(v0 - 1) < 2;
}

uint64_t sub_100743924()
{
  uint64_t Strong = (void *)swift_unknownObjectUnownedLoadStrong();
  id v1 = [Strong freehandDrawingToolkit];

  if (v1)
  {
    unsigned __int8 v2 = [v1 canBeginFreehandDrawingMode];

    if (v2) {
      return 1;
    }
  }
  int v4 = (void *)sub_100742538();
  unsigned int v5 = [v4 wantsSystemInputAssistantForScribble];

  if (v5) {
    return 2;
  }
  else {
    return 0;
  }
}

void CRLiOSPencilMediator.observeValue(forKeyPath:of:change:context:)(uint64_t a1, NSString a2, uint64_t a3, Class isa, uint64_t a5)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  sub_100557A70(a3, (uint64_t)v24);
  if (!v25)
  {
    sub_10052E2B0((uint64_t)v24);
    goto LABEL_15;
  }
  sub_1005057FC(&qword_10167DC10);
  if ((swift_dynamicCast() & 1) == 0 || v22[1] != sub_10050BF48(0, (unint64_t *)&unk_10167DC00))
  {
LABEL_15:
    if (!a2) {
      goto LABEL_17;
    }
    goto LABEL_16;
  }
  if (!a2) {
    goto LABEL_17;
  }
  BOOL v12 = *(void *)&v5[OBJC_IVAR____TtC8Freeform20CRLiOSPencilMediator_prefersPencilOnlyDrawingKeyPath] == a1
     && *(void *)&v5[OBJC_IVAR____TtC8Freeform20CRLiOSPencilMediator_prefersPencilOnlyDrawingKeyPath + 8] == (void)a2;
  if (!v12 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
  {
LABEL_16:
    a2 = String._bridgeToObjectiveC()();
LABEL_17:
    sub_100557A70(a3, (uint64_t)v24);
    uint64_t v15 = v25;
    if (v25)
    {
      id v16 = sub_10050F848(v24, v25);
      uint64_t v17 = *(void *)(v15 - 8);
      __n128 v18 = __chkstk_darwin(v16, v16);
      unint64_t v20 = (char *)v22 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, __n128))(v17 + 16))(v20, v18);
      uint64_t v21 = _bridgeAnythingToObjectiveC<A>(_:)();
      (*(void (**)(char *, uint64_t))(v17 + 8))(v20, v15);
      _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v24);
      if (!isa)
      {
LABEL_20:
        v23.receiver = v5;
        v23.super_class = ObjectType;
        [super observeValueForKeyPath:a2 ofObject:v21 change:isa context:a5];

        swift_unknownObjectRelease();
        return;
      }
    }
    else
    {
      uint64_t v21 = 0;
      if (!isa) {
        goto LABEL_20;
      }
    }
    type metadata accessor for NSKeyValueChangeKey(0);
    sub_100744078();
    Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
    goto LABEL_20;
  }
  id v13 = (void *)sub_100742538();
  id v14 = [v13 delegate];

  if (v14)
  {
    if ([v14 respondsToSelector:"prefersPencilOnlyDrawingDidChange"]) {
      [v14 prefersPencilOnlyDrawingDidChange];
    }
    swift_unknownObjectRelease();
  }
  else
  {
    __break(1u);
  }
}

unint64_t sub_100743DB0(unint64_t a1)
{
  unint64_t v1 = a1;
  if (a1 >= 3)
  {
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_10117E810;
    *(void *)(inited + 56) = &type metadata for Int;
    *(void *)(inited + 64) = &protocol witness table for Int;
    *(void *)(inited + 32) = v1;
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"init(userDefaultsRepresentation:)", 33, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLiOSPencilMediator.swift", 91, 2, 443, (uint64_t)"Unexpected user defaults representation for last pencil mode: %i", 64, 2u, inited);
    sub_1005598CC(inited, (uint64_t)"init(userDefaultsRepresentation:)", 33, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLiOSPencilMediator.swift", 91, 2, 443);
    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();
    return 0;
  }
  return v1;
}

void sub_100743EE4(uint64_t a1)
{
  switch(a1)
  {
    case 1:
      unint64_t v1 = self;
      NSString v2 = String._bridgeToObjectiveC()();
      uint64_t v3 = 9;
LABEL_5:
      _s8Freeform23CRLAnalyticsFeatureUsedC14featurePayload3forSDySSSo8NSObjectCGAA0bC4NameO_tFZ_0(v3);
      sub_10050BF48(0, (unint64_t *)&qword_101672E50);
      Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      [v1 sendEventInDomain:v2 lazily:1 eventPayload:isa];

      return;
    case 2:
      unint64_t v1 = self;
      NSString v2 = String._bridgeToObjectiveC()();
      uint64_t v3 = 10;
      goto LABEL_5;
    case 0:
      _assertionFailure(_:_:file:line:flags:)();
      __break(1u);
      break;
  }
  type metadata accessor for CRLiOSPencilModeType(0);
  _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)();
  __break(1u);
}

unint64_t sub_100744078()
{
  unint64_t result = qword_101670F88;
  if (!qword_101670F88)
  {
    type metadata accessor for NSKeyValueChangeKey(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101670F88);
  }
  return result;
}

uint64_t type metadata accessor for CRLiOSPencilMediator()
{
  return self;
}

void sub_1007440F4(void *a1, void *a2)
{
  if (a1)
  {
  }
}

void sub_100744134()
{
  if (qword_10166FAF0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v0 = (void *)static OS_os_log.crlPencilHover;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117D8C0;
  *(void *)(inited + 56) = &type metadata for String;
  unint64_t v2 = sub_100528BE4();
  *(void *)(inited + 32) = 0x776569766572702ALL;
  *(void *)(inited + 64) = v2;
  *(void *)(inited + 40) = 0xE800000000000000;
  *(void *)&long long v6 = 0;
  *((void *)&v6 + 1) = 0xE000000000000000;
  id v3 = v0;
  _StringGuts.grow(_:)(16);
  v4._countAndFlagsBits = 0x5377656976657270;
  v4._object = (void *)0xEE00203A65746174;
  String.append(_:)(v4);
  _print_unlocked<A, B>(_:_:)();
  *(void *)(inited + 96) = &type metadata for String;
  *(void *)(inited + 104) = v2;
  *(_OWORD *)(inited + 72) = v6;
  uint64_t v5 = static os_log_type_t.debug.getter();
  sub_100BAC898((uint64_t)v3, (uint64_t)&_mh_execute_header, v5, (uint64_t)"%@ %@", 5, 2, inited);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();
}

void sub_100744324(unsigned __int8 *a1)
{
  uint64_t v2 = v1;
  if (*a1 == *(unsigned __int8 *)(*((void *)a1 + 10)
                                 + OBJC_IVAR____TtC8Freeform23CRLiOSPencilHoverStates_currentHoverToolType))
  {
    id v3 = (double *)(v1 + OBJC_IVAR____TtC8Freeform30CRLiOSPencilHoverToolPreviewer_previewState);
    if (*(unsigned char *)(v1 + OBJC_IVAR____TtC8Freeform30CRLiOSPencilHoverToolPreviewer_previewState + 24))
    {
      if (*(unsigned char *)(v1 + OBJC_IVAR____TtC8Freeform30CRLiOSPencilHoverToolPreviewer_previewState + 24) == 1)
      {
        double v5 = *v3;
        double v6 = v3[1];
        double v7 = v3[2];
        if (qword_10166FAF0 != -1) {
          swift_once();
        }
        swift_beginAccess();
        id v8 = (void *)static OS_os_log.crlPencilHover;
        sub_1005057FC((uint64_t *)&unk_101672B40);
        uint64_t inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = xmmword_10117D8C0;
        *(void *)(inited + 56) = &type metadata for String;
        unint64_t v10 = sub_100528BE4();
        *(void *)(inited + 32) = 0x776569766572702ALL;
        *(void *)(inited + 64) = v10;
        *(void *)(inited + 40) = 0xE800000000000000;
        id v11 = v8;
        _StringGuts.grow(_:)(23);
        v12._countAndFlagsBits = 0x676E697265766F68;
        v12._object = (void *)0xE900000000000020;
        String.append(_:)(v12);
        type metadata accessor for CGPoint(0);
        _print_unlocked<A, B>(_:_:)();
        v13._countAndFlagsBits = 0x74657366664F7A20;
        v13._object = (void *)0xEA0000000000203ALL;
        String.append(_:)(v13);
        v14._countAndFlagsBits = Double.description.getter();
        String.append(_:)(v14);
        swift_bridgeObjectRelease();
        *(void *)(inited + 96) = &type metadata for String;
        *(void *)(inited + 104) = v10;
        *(void *)(inited + 72) = 0;
        *(void *)(inited + 80) = 0xE000000000000000;
        uint64_t v15 = static os_log_type_t.debug.getter();
        sub_100BAC898((uint64_t)v11, (uint64_t)&_mh_execute_header, v15, (uint64_t)"%@ %@", 5, 2, inited);
        swift_setDeallocating();
        sub_1005057FC(&qword_101672B50);
        swift_arrayDestroy();

        sub_10074496C(a1, v5, v6, v7);
      }
      else
      {
        if (qword_10166FAF0 != -1) {
          swift_once();
        }
        swift_beginAccess();
        uint64_t v24 = (void *)static OS_os_log.crlPencilHover;
        sub_1005057FC((uint64_t *)&unk_101672B40);
        uint64_t v25 = swift_initStackObject();
        *(_OWORD *)(v25 + 16) = xmmword_10117D8C0;
        *(void *)(v25 + 56) = &type metadata for String;
        unint64_t v26 = sub_100528BE4();
        *(void *)(v25 + 32) = 0x776569766572702ALL;
        *(void *)(v25 + 64) = v26;
        *(void *)(v25 + 40) = 0xE800000000000000;
        id v27 = v24;
        _StringGuts.grow(_:)(23);
        v28._countAndFlagsBits = 0x676E697265746E65;
        v28._object = (void *)0xE900000000000020;
        String.append(_:)(v28);
        type metadata accessor for CGPoint(0);
        _print_unlocked<A, B>(_:_:)();
        v29._countAndFlagsBits = 0x74657366664F7A20;
        v29._object = (void *)0xEA0000000000203ALL;
        String.append(_:)(v29);
        v30._countAndFlagsBits = Double.description.getter();
        String.append(_:)(v30);
        swift_bridgeObjectRelease();
        *(void *)(v25 + 96) = &type metadata for String;
        *(void *)(v25 + 104) = v26;
        *(void *)(v25 + 72) = 0;
        *(void *)(v25 + 80) = 0xE000000000000000;
        uint64_t v31 = static os_log_type_t.debug.getter();
        sub_100BAC898((uint64_t)v27, (uint64_t)&_mh_execute_header, v31, (uint64_t)"%@ %@", 5, 2, v25);
        swift_setDeallocating();
        sub_1005057FC(&qword_101672B50);
        swift_arrayDestroy();

        static Date.timeIntervalSinceReferenceDate.getter();
        *(void *)(v2 + OBJC_IVAR____TtC8Freeform30CRLiOSPencilHoverToolPreviewer_enteringTimeIntervals) = v32;
        sub_100744C34((uint64_t)a1);
      }
    }
    else
    {
      if (qword_10166FAF0 != -1) {
        swift_once();
      }
      swift_beginAccess();
      uint64_t v19 = (void *)static OS_os_log.crlPencilHover;
      sub_1005057FC((uint64_t *)&unk_101672B40);
      uint64_t v20 = swift_initStackObject();
      *(_OWORD *)(v20 + 16) = xmmword_10117D8C0;
      *(void *)(v20 + 56) = &type metadata for String;
      unint64_t v21 = sub_100528BE4();
      *(void *)(v20 + 32) = 0x776569766572702ALL;
      *(void *)(v20 + 40) = 0xE800000000000000;
      *(void *)(v20 + 96) = &type metadata for String;
      *(void *)(v20 + 104) = v21;
      *(void *)(v20 + 64) = v21;
      *(void *)(v20 + 72) = 0xD00000000000002ELL;
      *(void *)(v20 + 80) = 0x800000010124C3D0;
      id v22 = v19;
      uint64_t v23 = static os_log_type_t.debug.getter();
      sub_100BAC898((uint64_t)v22, (uint64_t)&_mh_execute_header, v23, (uint64_t)"%@ %@", 5, 2, v20);
      swift_setDeallocating();
      sub_1005057FC(&qword_101672B50);
      swift_arrayDestroy();
    }
  }
  else
  {
    id v16 = self;
    [v16 begin];
    [v16 setDisableActions:1];
    uint64_t v17 = *(void **)(v2 + OBJC_IVAR____TtC8Freeform30CRLiOSPencilHoverToolPreviewer_shapeLayer);
    __n128 v18 = *(void **)(v2 + OBJC_IVAR____TtC8Freeform30CRLiOSPencilHoverToolPreviewer_imageLayer);
    [v17 setPath:0];
    [v17 setHidden:1];
    [v18 removeFromSuperlayer];
    [v16 commit];
  }
}

id sub_10074496C(unsigned __int8 *a1, double a2, double a3, double a4)
{
  double v5 = v4;
  if (*a1 == *(unsigned __int8 *)(*((void *)a1 + 10)
                                 + OBJC_IVAR____TtC8Freeform23CRLiOSPencilHoverStates_currentHoverToolType))
  {
    if (*((double *)a1 + 1) != a2
      || (*((double *)a1 + 2) == a3 ? (BOOL v7 = *((double *)a1 + 3) == a4) : (BOOL v7 = 0),
          !v7
       || (id result = (id)static Date.timeIntervalSinceReferenceDate.getter(),
           v9 - *(double *)&v4[OBJC_IVAR____TtC8Freeform30CRLiOSPencilHoverToolPreviewer_enteringTimeIntervals] < 0.2)))
    {
      unint64_t v10 = self;
      [v10 begin];
      [v10 setDisableActions:1];
      id v11 = *(void **)&v4[OBJC_IVAR____TtC8Freeform30CRLiOSPencilHoverToolPreviewer_imageLayer];
      static Date.timeIntervalSinceReferenceDate.getter();
      uint64_t v12 = OBJC_IVAR____TtC8Freeform30CRLiOSPencilHoverToolPreviewer_enteringTimeIntervals;
      double v14 = v13 - *(double *)&v4[OBJC_IVAR____TtC8Freeform30CRLiOSPencilHoverToolPreviewer_enteringTimeIntervals];
      float v15 = 1.0;
      if (v14 < 0.2)
      {
        static Date.timeIntervalSinceReferenceDate.getter();
        float v15 = v16 - *(double *)&v4[v12];
      }
      sub_10074533C(a1, v11, v15);
      uint64_t v17 = swift_allocObject();
      long long v18 = *((_OWORD *)a1 + 3);
      *(_OWORD *)(v17 + 56) = *((_OWORD *)a1 + 2);
      *(_OWORD *)(v17 + 72) = v18;
      *(_OWORD *)(v17 + 88) = *((_OWORD *)a1 + 4);
      long long v19 = *((_OWORD *)a1 + 1);
      *(_OWORD *)(v17 + 24) = *(_OWORD *)a1;
      *(void *)(v17 + 16) = v4;
      *(void *)(v17 + 104) = *((void *)a1 + 10);
      *(_OWORD *)(v17 + 40) = v19;
      v25[4] = sub_100745BAC;
      v25[5] = v17;
      v25[0] = _NSConcreteStackBlock;
      v25[1] = *(void *)"";
      v25[2] = sub_100679958;
      v25[3] = &unk_101511F30;
      uint64_t v20 = _Block_copy(v25);
      unint64_t v21 = v5;
      sub_100745BC8((uint64_t)a1);
      swift_release();
      [v10 setCompletionBlock:v20];
      _Block_release(v20);
      return [v10 commit];
    }
  }
  else
  {
    id v22 = self;
    [v22 begin];
    [v22 setDisableActions:1];
    uint64_t v23 = *(void **)&v5[OBJC_IVAR____TtC8Freeform30CRLiOSPencilHoverToolPreviewer_shapeLayer];
    uint64_t v24 = *(void **)&v5[OBJC_IVAR____TtC8Freeform30CRLiOSPencilHoverToolPreviewer_imageLayer];
    [v23 setPath:0];
    [v23 setHidden:1];
    [v24 removeFromSuperlayer];
    return [v22 commit];
  }
  return result;
}

id sub_100744C34(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(void *)(a1 + 24);
  double v5 = &v1[OBJC_IVAR____TtC8Freeform30CRLiOSPencilHoverToolPreviewer_previewState];
  *(_OWORD *)double v5 = *(_OWORD *)(a1 + 8);
  *((void *)v5 + 2) = v4;
  v5[24] = 0;
  sub_100744134();
  double v6 = self;
  [v6 begin];
  [v6 setDisableActions:1];
  BOOL v7 = *(void **)&v1[OBJC_IVAR____TtC8Freeform30CRLiOSPencilHoverToolPreviewer_imageLayer];
  static Date.timeIntervalSinceReferenceDate.getter();
  uint64_t v8 = OBJC_IVAR____TtC8Freeform30CRLiOSPencilHoverToolPreviewer_enteringTimeIntervals;
  double v10 = v9 - *(double *)&v1[OBJC_IVAR____TtC8Freeform30CRLiOSPencilHoverToolPreviewer_enteringTimeIntervals];
  float v11 = 1.0;
  if (v10 < 0.2)
  {
    static Date.timeIntervalSinceReferenceDate.getter();
    float v11 = v12 - *(double *)&v1[v8];
  }
  sub_10074533C((unsigned __int8 *)a1, v7, v11);
  uint64_t v13 = swift_allocObject();
  long long v14 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(v13 + 56) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(v13 + 72) = v14;
  *(_OWORD *)(v13 + 88) = *(_OWORD *)(a1 + 64);
  long long v15 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v13 + 24) = *(_OWORD *)a1;
  *(void *)(v13 + 16) = v1;
  *(void *)(v13 + 104) = *(void *)(a1 + 80);
  *(_OWORD *)(v13 + 40) = v15;
  v19[4] = sub_100745BAC;
  v19[5] = v13;
  v19[0] = _NSConcreteStackBlock;
  v19[1] = *(void *)"";
  v19[2] = sub_100679958;
  v19[3] = &unk_101511F80;
  double v16 = _Block_copy(v19);
  id v17 = v2;
  sub_100745BC8(a1);
  swift_release();
  [v6 setCompletionBlock:v16];
  _Block_release(v16);
  return [v6 commit];
}

void sub_100744E08()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC8Freeform30CRLiOSPencilHoverToolPreviewer_previewState;
  if (*(unsigned __int8 *)(v0 + OBJC_IVAR____TtC8Freeform30CRLiOSPencilHoverToolPreviewer_previewState + 24) < 2u)
  {
    if (qword_10166FAF0 != -1) {
      swift_once();
    }
    swift_beginAccess();
    uint64_t v2 = (void *)static OS_os_log.crlPencilHover;
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_10117D8C0;
    *(void *)(inited + 56) = &type metadata for String;
    unint64_t v4 = sub_100528BE4();
    *(void *)(inited + 32) = 0x776569766572702ALL;
    *(void *)(inited + 40) = 0xE800000000000000;
    *(void *)(inited + 96) = &type metadata for String;
    *(void *)(inited + 104) = v4;
    *(void *)(inited + 64) = v4;
    *(void *)(inited + 72) = 0x676E6974697865;
    *(void *)(inited + 80) = 0xE700000000000000;
    id v5 = v2;
    uint64_t v6 = static os_log_type_t.debug.getter();
    sub_100BAC898((uint64_t)v5, (uint64_t)&_mh_execute_header, v6, (uint64_t)"%@ %@", 5, 2, inited);
    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();

    *(void *)uint64_t v1 = 0;
    *(void *)(v1 + 8) = 0;
    *(void *)(v1 + 16) = 0;
    *(unsigned char *)(v1 + 24) = 2;
    sub_100744134();
    BOOL v7 = self;
    [v7 begin];
    [v7 setDisableActions:1];
    uint64_t v8 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform30CRLiOSPencilHoverToolPreviewer_shapeLayer);
    double v9 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform30CRLiOSPencilHoverToolPreviewer_imageLayer);
    [v8 setPath:0];
    [v8 setHidden:1];
    [v9 removeFromSuperlayer];
    [v7 commit];
    *(void *)uint64_t v1 = 1;
    *(void *)(v1 + 8) = 0;
    *(void *)(v1 + 16) = 0;
    *(unsigned char *)(v1 + 24) = 2;
    sub_100744134();
  }
}

id sub_100745080()
{
  uint64_t v1 = OBJC_IVAR____TtC8Freeform30CRLiOSPencilHoverToolPreviewer_shapeLayer;
  id v2 = objc_allocWithZone((Class)CAShapeLayer);
  id v3 = v0;
  *(void *)&v0[v1] = [v2 init];
  uint64_t v4 = OBJC_IVAR____TtC8Freeform30CRLiOSPencilHoverToolPreviewer_imageLayer;
  *(void *)&v3[v4] = [objc_allocWithZone((Class)CALayer) init];
  id v5 = &v3[OBJC_IVAR____TtC8Freeform30CRLiOSPencilHoverToolPreviewer_previewState];
  *(void *)id v5 = 2;
  *((void *)v5 + 1) = 0;
  *((void *)v5 + 2) = 0;
  v5[24] = 2;
  uint64_t v6 = OBJC_IVAR____TtC8Freeform30CRLiOSPencilHoverToolPreviewer_enteringTimeIntervals;
  static Date.timeIntervalSinceReferenceDate.getter();
  *(void *)&v3[v6] = v7;

  v9.receiver = v3;
  v9.super_class = (Class)type metadata accessor for CRLiOSPencilHoverToolPreviewer();
  return [super init];
}

BOOL sub_10074514C(double *a1, double *a2)
{
  return *a1 == *a2 && a1[1] == a2[1] && a1[2] == a2[2];
}

uint64_t sub_10074517C(uint64_t a1, uint64_t a2)
{
  return sub_100745AC4(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(unsigned char *)(a1 + 24), *(void *)a2, *(void *)(a2 + 8), *(void *)(a2 + 16), *(unsigned char *)(a2 + 24));
}

id sub_1007451C4()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLiOSPencilHoverToolPreviewer();
  return [super dealloc];
}

uint64_t type metadata accessor for CRLiOSPencilHoverToolPreviewer()
{
  return self;
}

uint64_t getEnumTagSinglePayload for CRLiOSPencilHoverToolPreviewer.PreviewState(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE && *(unsigned char *)(a1 + 25)) {
    return (*(_DWORD *)a1 + 254);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 24);
  if (v3 <= 2) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for CRLiOSPencilHoverToolPreviewer.PreviewState(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(unsigned char *)(result + 24) = 0;
    *(void *)id result = a2 - 254;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 25) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 25) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 24) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1007452F8(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 24) <= 1u) {
    return *(unsigned __int8 *)(a1 + 24);
  }
  else {
    return (*(_DWORD *)a1 + 2);
  }
}

uint64_t sub_100745310(uint64_t result, unsigned int a2)
{
  uint64_t v2 = a2 - 2;
  if (a2 >= 2)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    LOBYTE(a2) = 2;
    *(void *)id result = v2;
  }
  *(unsigned char *)(result + 24) = a2;
  return result;
}

ValueMetadata *type metadata accessor for CRLiOSPencilHoverToolPreviewer.PreviewState()
{
  return &type metadata for CRLiOSPencilHoverToolPreviewer.PreviewState;
}

void sub_10074533C(unsigned __int8 *a1, id a2, float a3)
{
  int v4 = v3;
  double v7 = *((double *)a1 + 3);
  if (v7 + -0.8 > 0.0) {
    double v8 = (v7 + -0.8) / -0.2 + 1.0;
  }
  else {
    double v8 = 1.0;
  }
  float v9 = v8;
  float v10 = v9 * a3;
  double v11 = *((double *)a1 + 6);
  CGColorRef CopyWithAlpha = CGColorCreateCopyWithAlpha(*((CGColorRef *)a1 + 4), v11);
  double v12 = *((double *)a1 + 1);
  double v13 = *((double *)a1 + 2);
  uint64_t v33 = *a1;
  sub_10074589C(*a1, v12, v13, *((double *)a1 + 5) * *((double *)a1 + 7));
  id v34 = v14;
  [v3 setFillColor:0];
  [v3 setStrokeColor:0];
  *(float *)&double v15 = v10;
  [v3 setOpacity:v15];
  if (qword_10166FAF0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  double v16 = (void *)static OS_os_log.crlPencilHover;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117D8C0;
  *(void *)(inited + 56) = &type metadata for String;
  unint64_t v18 = sub_100528BE4();
  *(void *)(inited + 32) = 0x776569766572702ALL;
  *(void *)(inited + 64) = v18;
  *(void *)(inited + 40) = 0xE800000000000000;
  id v19 = v16;
  _StringGuts.grow(_:)(23);
  v20._countAndFlagsBits = 0x3A74657366664F7ALL;
  v20._object = (void *)0xE900000000000020;
  String.append(_:)(v20);
  v21._countAndFlagsBits = Double.description.getter();
  String.append(_:)(v21);
  swift_bridgeObjectRelease();
  v22._countAndFlagsBits = 0x7974696361706F20;
  v22._object = (void *)0xEA0000000000203ALL;
  String.append(_:)(v22);
  [v4 opacity];
  Float.write<A>(to:)();
  *(void *)(inited + 96) = &type metadata for String;
  *(void *)(inited + 104) = v18;
  *(void *)(inited + 72) = 0;
  *(void *)(inited + 80) = 0xE000000000000000;
  uint64_t v23 = static os_log_type_t.debug.getter();
  sub_100BAC898((uint64_t)v19, (uint64_t)&_mh_execute_header, v23, (uint64_t)"%@ %@", 5, 2, inited);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  [a2 removeFromSuperlayer];
  uint64_t v24 = (void *)*((void *)a1 + 9);
  if (v24)
  {
    id v25 = v24;
    unint64_t v26 = v34;
    [v34 bounds];
    [a2 setFrame:];
    [a2 setPosition:v12 v13];
    id v27 = [v25 CGImage];
    [a2 setContents:v27];

    *(float *)&double v28 = v11;
    [a2 setOpacity:v28];
    [a2 setContentsGravity:kCAGravityResizeAspectFill];
    Swift::String v29 = &selRef_addSublayer_;
    CGColorRef v30 = CopyWithAlpha;
  }
  else
  {
    [v4 setLineWidth:0.5];
    uint64_t v31 = &selRef_setFillColor_;
    CGColorRef v30 = CopyWithAlpha;
    [v4 setFillColor:CopyWithAlpha];
    [v4 setStrokeColor:CopyWithAlpha];
    uint64_t v32 = 0;
    switch(v33)
    {
      case 3:
      case 4:
        uint64_t v32 = 0;
        uint64_t v31 = &selRef_setStrokeColor_;
        goto LABEL_12;
      case 5:
        [v4 setLineWidth:1.0];
        uint64_t v32 = 0;
        goto LABEL_12;
      case 6:
        uint64_t v32 = *((void *)a1 + 8);
        goto LABEL_12;
      case 7:
LABEL_12:
        [v4 *v31:v32];
        goto LABEL_13;
      case 8:
        sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"update(with:imageLayer:additionalAlphaFactor:)", 46, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLiOSPencilHoverToolPreviewer.swift", 101, 2, 185, (uint64_t)"Unsupported type should have been filtered out before update.", 61, 2u, (uint64_t)_swiftEmptyArrayStorage);
        sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"update(with:imageLayer:additionalAlphaFactor:)", 46, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLiOSPencilHoverToolPreviewer.swift", 101, 2, 185);
        unint64_t v26 = v34;
        goto LABEL_16;
      default:
LABEL_13:
        unint64_t v26 = v34;
        a2 = [v34 CGPath:v32];
        Swift::String v29 = &selRef_setPath_;
        id v25 = a2;
        break;
    }
  }
  [v4 *v29:a2];

  if ([v4 isHidden]) {
    [v4 setHidden:0];
  }
LABEL_16:
}

void sub_10074589C(char a1, double a2, double a3, double a4)
{
  switch(a1)
  {
    case 1:
    case 2:
    case 3:
    case 6:
    case 7:
      double v4 = sub_10006402C(a2, a3, a4);
      if (!objc_msgSend(self, "bezierPathWithOvalInRect:", v4, v5, v6, v7))
      {
        __break(1u);
        goto LABEL_4;
      }
      break;
    case 5:
      sub_100B75408(a2, a3);
      break;
    case 8:
      sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"previewPath(point:width:)", 25, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLiOSPencilHoverToolPreviewer.swift", 101, 2, 208, (uint64_t)"Unsupported type should have been filtered out before preview.", 62, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"previewPath(point:width:)", 25, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLiOSPencilHoverToolPreviewer.swift", 101, 2, 208);
      id v12 = objc_allocWithZone((Class)CRLBezierPath);
      [v12 init];
      break;
    default:
LABEL_4:
      double v8 = sub_10006402C(a2, a3, a4);
      if (!objc_msgSend(self, "bezierPathWithOvalInRect:", v8, v9, v10, v11))
      {
        __break(1u);
        JUMPOUT(0x100745AA0);
      }
      return;
  }
}

uint64_t sub_100745AC4(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8)
{
  if (a4)
  {
    if (a4 != 1)
    {
      if (a3 | a2 | a1)
      {
        if (a1 != 1 || a3 | a2)
        {
          if (a8 == 2 && a5 == 2 && !(a7 | a6)) {
            return 1;
          }
        }
        else if (a8 == 2 && a5 == 1 && !(a7 | a6))
        {
          return 1;
        }
      }
      else if (a8 == 2 && !(a7 | a6 | a5))
      {
        return 1;
      }
      return 0;
    }
    if (a8 != 1) {
      return 0;
    }
  }
  else if (a8)
  {
    return 0;
  }
  BOOL v8 = *(double *)&a1 == *(double *)&a5;
  if (*(double *)&a2 != *(double *)&a6) {
    BOOL v8 = 0;
  }
  return *(double *)&a3 == *(double *)&a7 && v8;
}

uint64_t sub_100745BB0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100745BC0()
{
  return swift_release();
}

uint64_t sub_100745BC8(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 32);
  unsigned int v3 = *(void **)(a1 + 64);
  double v4 = *(void **)(a1 + 80);
  id v5 = *(id *)(a1 + 72);
  id v6 = v4;
  id v7 = v2;
  id v8 = v3;
  return a1;
}

uint64_t sub_100745C14()
{
  return _swift_deallocObject(v0, 112, 7);
}

void sub_100745C6C()
{
  uint64_t v1 = *(void *)(v0 + 48);
  uint64_t v2 = *(void *)(v0 + 16) + OBJC_IVAR____TtC8Freeform30CRLiOSPencilHoverToolPreviewer_previewState;
  *(_OWORD *)uint64_t v2 = *(_OWORD *)(v0 + 32);
  *(void *)(v2 + 16) = v1;
  *(unsigned char *)(v2 + 24) = 1;
  sub_100744134();
}

ValueMetadata *type metadata accessor for CRLiOSPencilHoverToolPreviewer.HoverPoint()
{
  return &type metadata for CRLiOSPencilHoverToolPreviewer.HoverPoint;
}

id sub_100745CD0(void *a1, void *a2)
{
  id v3 = a1;
  id v4 = a2;
  id v5 = sub_100F9BC38(v3, v4);
  id v6 = v5;
  if (*((unsigned char *)v5 + OBJC_IVAR____TtC8Freeform33CRLUndownloadedAssetDrawingHelper_type) != 2)
  {
    id v7 = v5;
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"init(imageRep:asset:)", 21, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLImageUndownloadedAssetDrawingHelper.swift", 109, 2, 33, (uint64_t)"Non image undownloaded asset should be only handled by CRLUndownloadedAssetDrawingHelper.", 89, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"init(imageRep:asset:)", 21, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLImageUndownloadedAssetDrawingHelper.swift", 109, 2, 33);
  }
  return v6;
}

void sub_100745E34(CGContext *a1, CGFloat a2, CGFloat a3, CGFloat a4, CGFloat a5)
{
  uint64_t v6 = v5;
  uint64_t v12 = type metadata accessor for CGPathFillRule();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12, v14);
  double v16 = (char *)&v40 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong) {
    return;
  }
  unint64_t v18 = (void *)Strong;
  CGContextSaveGState(a1);
  id v19 = (CGColor *)[*(id *)(v5 + OBJC_IVAR____TtC8Freeform33CRLUndownloadedAssetDrawingHelper_backgroundColor) CGColor];
  CGContextSetFillColorWithColor(a1, v19);

  v41.origin.CGFloat x = a2;
  v41.origin.CGFloat y = a3;
  v41.size.CGFloat width = a4;
  v41.size.CGFloat height = a5;
  CGContextFillRect(a1, v41);
  id v20 = [self bezierPathWithRect:a2, a3, a4, a5];
  if (!v20)
  {
    __break(1u);
    goto LABEL_18;
  }
  Swift::String v21 = v20;
  Swift::String v22 = (const CGPath *)[v20 CGPath];

  if (!v22)
  {
LABEL_18:
    __break(1u);
    return;
  }
  CGContextAddPath(a1, v22);

  (*(void (**)(char *, void, uint64_t))(v13 + 104))(v16, enum case for CGPathFillRule.winding(_:), v12);
  CGContextRef.clip(using:)();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v16, v12);
  if (sub_1007468E8(a4, a5))
  {
    sub_100F9CFCC();
    sub_100F9D624();
    id v23 = objc_allocWithZone((Class)NSAttributedString);
    NSString v24 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    type metadata accessor for Key(0);
    sub_100515BF8();
    Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    CFAttributedStringRef v26 = (const __CFAttributedString *)[v23 initWithString:v24 attributes:isa];

    id v27 = CTLineCreateWithAttributedString(v26);
    CGRect BoundsWithOptions = CTLineGetBoundsWithOptions(v27, 0);
    CGFloat v28 = CGRectGetWidth(BoundsWithOptions)
        + *(double *)(v6 + OBJC_IVAR____TtC8Freeform33CRLUndownloadedAssetDrawingHelper_sidePadding)
        + *(double *)(v6 + OBJC_IVAR____TtC8Freeform33CRLUndownloadedAssetDrawingHelper_sidePadding);
    id v29 = [v18 layout];
    id v30 = [v29 geometry];
    [v30 size];
    double v32 = v31;

    double v33 = sub_100064070();
    if (v28 <= v32) {
      sub_100746614(a1, v33, v34, v35, v36);
    }
    else {
      sub_100746324(a1, v33, v34, v35, v36);
    }
  }
  else
  {
    sub_100746324(a1, a2, a3, a4, a5);
  }
  CGContextRestoreGState(a1);
  uint64_t v37 = *(void **)(v6 + OBJC_IVAR____TtC8Freeform33CRLUndownloadedAssetDrawingHelper_asset);
  if (v37)
  {
    sub_100458B68(a1, v37);
  }
  else
  {
    if (qword_10166FBD8 != -1) {
      swift_once();
    }
    swift_beginAccess();
    id v38 = (id)static OS_os_log.assetManagement;
    uint64_t v39 = static os_log_type_t.error.getter();
    sub_100BAC898((uint64_t)v38, (uint64_t)&_mh_execute_header, v39, (uint64_t)"CRLImageUndowloadedAssetDrawingHelper: draw(in ctx, with originalImageRect) called without a valid Asset. This might mean your generated Image is not updating correctly", 168, 2, (uint64_t)_swiftEmptyArrayStorage);

    unint64_t v18 = v38;
  }
}

void sub_100746324(CGContext *a1, CGFloat a2, CGFloat a3, CGFloat a4, CGFloat a5)
{
  CGContextSaveGState(a1);
  double v11 = sub_100F9C4FC();
  if (v10)
  {
    uint64_t v12 = v10;
    double v13 = v11;
    double v14 = sub_100065738(a2, a3, a4, a5);
    sub_10006402C(v14, v15, v13);
    id v34 = v12;
    if (!sub_1007468E8(a4, a5))
    {
      uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
      if (Strong)
      {
        id v17 = Strong;
        id v18 = [Strong layout];

        if (v18)
        {
          self;
          id v19 = (void *)swift_dynamicCastObjCClass();
          if (v19 && (id v20 = [v19 maskLayout]) != 0)
          {
            Swift::String v21 = v20;
            id v22 = [v20 geometry];
            [v22 frame];
            CGFloat v24 = v23;
            CGFloat v26 = v25;

            id v27 = [v21 geometry];
            [v27 size];

            CGContextTranslateCTM(a1, v24, v26);
            double v28 = sub_100064070();
            double v32 = sub_100065738(v28, v29, v30, v31);
            sub_10006402C(v32, v33, v13);
          }
          else
          {
          }
        }
      }
    }
    CGContextRef.draw(_:in:byTiling:)();
    CGContextRestoreGState(a1);
  }
  else
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"drawImage(in:rect:)", 19, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLImageUndownloadedAssetDrawingHelper.swift", 109, 2, 88, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"drawImage(in:rect:)", 19, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLImageUndownloadedAssetDrawingHelper.swift", 109, 2, 88);
  }
}

void sub_100746614(CGContext *a1, CGFloat a2, CGFloat a3, CGFloat a4, CGFloat a5)
{
  tCGFloat x = *(double *)(v5 + OBJC_IVAR____TtC8Freeform33CRLUndownloadedAssetDrawingHelper_sidePadding);
  double v35 = a4 - (tx + tx);
  sub_100F9CFCC();
  sub_100F9D624();
  id v10 = objc_allocWithZone((Class)NSAttributedString);
  NSString v11 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_100515BF8();
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  CFAttributedStringRef v13 = (const __CFAttributedString *)[v10 initWithString:v11 attributes:isa];

  double v14 = CTLineCreateWithAttributedString(v13);
  CGRect BoundsWithOptions = CTLineGetBoundsWithOptions(v14, 0);
  CGFloat x = BoundsWithOptions.origin.x;
  CGFloat y = BoundsWithOptions.origin.y;
  CGFloat width = BoundsWithOptions.size.width;
  CGFloat height = BoundsWithOptions.size.height;
  double v19 = CGRectGetWidth(BoundsWithOptions);
  v40.origin.CGFloat x = x;
  v40.origin.CGFloat y = y;
  v40.size.CGFloat width = width;
  v40.size.CGFloat height = height;
  double v20 = CGRectGetHeight(v40);

  if (v35 < v19) {
    double v20 = v20 + v20;
  }
  sub_100065738(a2, a3, a4, a5);
  double v22 = v21 + v20 * -0.5;
  CGContextSaveGState(a1);
  id v37 = sub_100F9C898(a2, a3, a4, a5);
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    CGFloat v24 = Strong;
    id v25 = [Strong info];

    if (v25)
    {
      type metadata accessor for CRLImageItem();
      if (swift_dynamicCastClass())
      {
        CGFloat v26 = (void *)sub_100A3653C();
        id v27 = v26;
        swift_unknownObjectRelease();
        if (v26)
        {
          id v28 = [v27 geometry];
          [v28 position];
          double v30 = v29;
          double v32 = v31;

          double v33 = tx + v30;
          double v22 = v22 + v32;
          goto LABEL_10;
        }
      }
      else
      {
        swift_unknownObjectRelease();
      }
    }
  }
  double v33 = tx;
LABEL_10:
  CGContextTranslateCTM(a1, v33, v22);
  [v37 drawInContext:a1];
  CGContextRestoreGState(a1);
}

BOOL sub_1007468E8(double a1, double a2)
{
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v5 = Strong;
    id v6 = [Strong info];

    if (v6)
    {
      type metadata accessor for CRLImageItem();
      if (swift_dynamicCastClass())
      {
        id v7 = (void *)sub_100A3653C();
        id v8 = v7;
        swift_unknownObjectRelease();
        if (v7)
        {
          id v9 = [v8 pathSource];
          self;
          id v10 = (void *)swift_dynamicCastObjCClass();
          if (v10)
          {
            unsigned __int8 v11 = [v10 shouldShowKnob];

            if (v11) {
              return 0;
            }
          }
          else
          {

            id v21 = [v8 pathSource];
            unsigned int v22 = [v21 isRectangular];

            if (!v22) {
              return 0;
            }
          }
        }
      }
      else
      {
        swift_unknownObjectRelease();
      }
    }
  }
  uint64_t v12 = (void *)swift_unknownObjectWeakLoadStrong();
  if (!v12) {
    return 1;
  }
  CFAttributedStringRef v13 = v12;
  id v14 = [v12 layout];
  id v15 = [v14 geometry];

  [v15 size];
  double v17 = v16;
  double v19 = v18;

  return sub_1000640C4(v17, v19, a1, a2, 1.0);
}

id sub_100746B00()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLImageUndownloadedAssetDrawingHelper();
  return [super dealloc];
}

uint64_t type metadata accessor for CRLImageUndownloadedAssetDrawingHelper()
{
  return self;
}

id sub_100746BA4(uint64_t a1, char a2)
{
  uint64_t v5 = objc_allocWithZone(v2);
  id v6 = &v5[OBJC_IVAR____TtC8Freeform43CRLCommandFreehandDrawingProhibitClustering_id];
  uint64_t v7 = type metadata accessor for UUID();
  uint64_t v8 = *(void *)(v7 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v6, a1, v7);
  v5[OBJC_IVAR____TtC8Freeform43CRLCommandFreehandDrawingProhibitClustering_prohibitsClustering] = a2;
  v11.receiver = v5;
  v11.super_class = v2;
  [super init];
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(a1, v7);
  return v9;
}

void sub_100746F44(void *a1, uint64_t a2, unsigned __int8 a3)
{
  Class isa = UUID._bridgeToObjectiveC()().super.isa;
  id v7 = [a1 getBoardItemForUUID:isa];

  if (!v7) {
    goto LABEL_7;
  }
  type metadata accessor for CRLFreehandDrawingItem();
  uint64_t v8 = swift_dynamicCastClass();
  if (!v8)
  {

LABEL_7:
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"commit(with:transaction:undoable:)", 34, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandFreehandDrawingProhibitClustering.swift", 115, 2, 27, (uint64_t)"Unable to retrieve freehand drawing item.", 41, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_100586FD4((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Unable to retrieve freehand drawing item.");
    sub_1005871AC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"commit(with:transaction:undoable:)", 34, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandFreehandDrawingProhibitClustering.swift", 115, 2, 27);
    SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v12, v13);
    _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
    return;
  }
  uint64_t v9 = v8;
  id v10 = v7;
  sub_10103405C(v9, (uint64_t)&off_101518040);

  if (v3)
  {
  }
  else
  {
    sub_1009DF888();
    id v11 = v10;
    sub_101023724(v9, (uint64_t)&off_101518040, a3);
  }
}

uint64_t sub_100747170()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC8Freeform43CRLCommandFreehandDrawingProhibitClustering_id;
  uint64_t v2 = type metadata accessor for UUID();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);

  return v3(v1, v2);
}

id sub_1007471DC()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLCommandFreehandDrawingProhibitClustering();
  return [super dealloc];
}

uint64_t sub_100747280()
{
  return type metadata accessor for CRLCommandFreehandDrawingProhibitClustering();
}

uint64_t type metadata accessor for CRLCommandFreehandDrawingProhibitClustering()
{
  uint64_t result = qword_10167DCD8;
  if (!qword_10167DCD8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1007472D4()
{
  uint64_t result = type metadata accessor for UUID();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_10074736C(uint64_t a1, char a2, uint64_t a3)
{
  *(void *)(v4 + 136) = a3;
  *(void *)(v4 + 144) = v3;
  *(unsigned char *)(v4 + 184) = a2;
  *(void *)(v4 + 128) = a1;
  return _swift_task_switch(sub_100747394, 0, 0);
}

uint64_t sub_100747394()
{
  uint64_t v1 = *(unsigned __int8 *)(v0 + 184);
  uint64_t v3 = *(void **)(v0 + 128);
  uint64_t v2 = *(void *)(v0 + 136);
  sub_10050BF48(0, &qword_10167DE10);
  sub_1005057FC((uint64_t *)&unk_101676C10);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_101177E70;
  *(void *)(v4 + 32) = v3;
  double v20 = (void *)v4;
  specialized Array._endMutation()();
  id v5 = v3;
  v22.value._rawValue = v20;
  v22.is_nil = 0;
  v6.super.super.super.super.Class isa = CKFetchRecordZoneChangesOperation.init(recordZoneIDs:configurationsByRecordZoneID:)(v22, v23).super.super.super.super.isa;
  *(CKFetchRecordZoneChangesOperation *)(v0 + 152) = v6;
  [(objc_class *)v6.super.super.super.super.isa setQualityOfService:v2];
  [(objc_class *)v6.super.super.super.super.isa setQueuePriority:8];
  [(objc_class *)v6.super.super.super.super.isa setShouldFetchAssetContents:v1];
  if (qword_10166FB88 != -1) {
    swift_once();
  }
  id v7 = *(objc_class **)(v0 + 144);
  uint64_t v8 = *(void **)(v0 + 128);
  swift_beginAccess();
  uint64_t v9 = (void *)static OS_os_log.dataSync;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117E810;
  id v11 = v9;
  id v12 = [v8 zoneName];
  uint64_t v13 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v15 = v14;

  *(void *)(inited + 56) = &type metadata for String;
  *(void *)(inited + 64) = sub_100528BE4();
  *(void *)(inited + 32) = v13;
  *(void *)(inited + 40) = v15;
  uint64_t v16 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v11, (uint64_t)&_mh_execute_header, v16, (uint64_t)"Fetching records for zoneID: %{public}@", 39, 2, inited);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  double v17 = (CKFetchRecordZoneChangesOperation *)swift_task_alloc();
  *(void *)(v0 + 160) = v17;
  v17[2].super.super.super.super.Class isa = v6.super.super.super.super.isa;
  v17[3].super.super.super.super.Class isa = v7;
  double v18 = (void *)swift_task_alloc();
  *(void *)(v0 + 168) = v18;
  *double v18 = v0;
  v18[1] = sub_10074767C;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v0 + 112, 0, 0, 0xD000000000000032, 0x800000010124C970, sub_10074B150, v17, &_s15FetchResultDataVN);
}

uint64_t sub_10074767C()
{
  *(void *)(*(void *)v1 + 176) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_100747800;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_100747798;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100747798()
{
  uint64_t v1 = *(void *)(v0 + 112);
  uint64_t v2 = *(void *)(v0 + 120);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8);
  return v3(v1, v2);
}

uint64_t sub_100747800()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10074786C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[10] = a3;
  v4[11] = a4;
  v4[8] = a1;
  v4[9] = a2;
  return _swift_task_switch(sub_100747890, 0, 0);
}

uint64_t sub_100747890()
{
  v0[6].i64[1] = 0;
  v0[7].i64[0] = 0;
  int8x16_t v6 = v0[4];
  v0[6].i64[0] = v6.i64[0];
  id v1 = (id)v6.i64[0];
  uint64_t v2 = (int8x16_t *)swift_task_alloc();
  v0[7].i64[1] = (uint64_t)v2;
  v2[1] = vextq_s8(v6, v6, 8uLL);
  uint64_t v3 = (void *)swift_task_alloc();
  v0[8].i64[0] = (uint64_t)v3;
  uint64_t v4 = sub_10050BF48(0, &qword_101672C00);
  *uint64_t v3 = v0;
  v3[1] = sub_1007479BC;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(&v0[1], 0, 0, 0xD000000000000013, 0x800000010124CB50, sub_10074B580, v2, v4);
}

uint64_t sub_1007479BC()
{
  *(void *)(*(void *)v1 + 136) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_100747B5C;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_100747AD8;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100747AD8()
{
  uint64_t v1 = *(void **)(v0 + 104);
  uint64_t v2 = *(void *)(v0 + 16);

  swift_release();
  uint64_t v3 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v3(v2);
}

uint64_t sub_100747B5C()
{
  uint64_t v1 = *(void *)(v0 + 136);
  swift_task_dealloc();
  *(void *)(v0 + 24) = v1;
  swift_errorRetain();
  sub_1005057FC(&qword_101672BD0);
  type metadata accessor for CKError(0);
  int v2 = swift_dynamicCast();
  id v3 = *(id *)(v0 + 104);
  if (!v2)
  {
    uint64_t v7 = *(void **)(v0 + 96);
    swift_willThrow();

    goto LABEL_6;
  }

  uint64_t v4 = *(void **)(v0 + 32);
  *(void *)(v0 + 48) = v4;
  *(void *)(v0 + 144) = v4;
  sub_10074B4AC();
  id v3 = v4;
  _BridgedStoredNSError.code.getter();
  unint64_t v5 = *(void *)(v0 + 40);
  if (v5 > 0x24)
  {
LABEL_16:

    swift_errorRelease();
    id v28 = *(void **)(v0 + 96);
    goto LABEL_17;
  }
  if (((1 << v5) & 0x117B040B20) != 0)
  {
    int8x16_t v6 = *(void **)(v0 + 96);

    swift_willThrow();
LABEL_6:

    swift_release();
LABEL_7:
    uint64_t v8 = *(uint64_t (**)(void))(v0 + 8);
    return v8();
  }
  if (v5 != 14)
  {
    if (v5 == 21)
    {
      uint64_t v10 = *(void *)(v0 + 72);
      id v11 = [*(id *)(v0 + 96) recordID];
      *(void *)(v0 + 152) = v11;
      sub_1005057FC((uint64_t *)&unk_101676C10);
      uint64_t v12 = swift_allocObject();
      *(_OWORD *)(v12 + 16) = xmmword_101177E70;
      *(void *)(v12 + 32) = v11;
      specialized Array._endMutation()();
      id v13 = objc_allocWithZone((Class)CKFetchRecordsOperation);
      sub_10050BF48(0, &qword_10167BED0);
      id v14 = v11;
      Class isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      id v16 = [v13 initWithRecordIDs:isa];
      *(void *)(v0 + 160) = v16;

      [v16 setQualityOfService:25];
      [v16 setQueuePriority:8];
      double v17 = (void *)swift_task_alloc();
      *(void *)(v0 + 168) = v17;
      void v17[2] = v16;
      v17[3] = v14;
      v17[4] = v10;
      double v18 = (void *)swift_task_alloc();
      *(void *)(v0 + 176) = v18;
      uint64_t v19 = sub_10050BF48(0, (unint64_t *)&qword_10167C060);
      *double v18 = v0;
      v18[1] = sub_1007480B4;
      unint64_t v20 = 0xD00000000000001ALL;
      unint64_t v21 = 0x800000010124CB30;
      Swift::OpaquePointer_optional v22 = sub_10074B894;
      uint64_t v23 = v0 + 56;
      CGFloat v24 = v17;
      goto LABEL_20;
    }
    goto LABEL_16;
  }
  uint64_t v25 = related decl 'e' for CKErrorCode.serverRecord.getter();
  if (!v25)
  {
LABEL_24:
    double v35 = *(void **)(v0 + 96);

    id v36 = v3;
    swift_willThrow();

    swift_errorRelease();
    swift_release();
    goto LABEL_7;
  }
  CGFloat v26 = (void *)v25;
  self;
  uint64_t v27 = swift_dynamicCastObjCClass();
  if (!v27)
  {

    goto LABEL_24;
  }
  id v28 = (void *)v27;
  (*(void (**)(void))(v0 + 80))();
  double v29 = *(void **)(v0 + 96);
  id v37 = v26;

  swift_errorRelease();
LABEL_17:
  uint64_t v30 = *(void *)(v0 + 112);
  double v31 = *(void **)(v0 + 144);
  if (v30 == 2)
  {
    swift_willThrow();

    swift_release();
    goto LABEL_7;
  }

  *(void *)(v0 + 104) = *(void *)(v0 + 144);
  *(void *)(v0 + 112) = v30 + 1;
  *(void *)(v0 + 96) = v28;
  uint64_t v32 = *(void *)(v0 + 72);
  uint64_t v33 = swift_task_alloc();
  *(void *)(v0 + 120) = v33;
  *(void *)(v33 + 16) = v32;
  *(void *)(v33 + 24) = v28;
  id v34 = (void *)swift_task_alloc();
  *(void *)(v0 + 128) = v34;
  uint64_t v19 = sub_10050BF48(0, &qword_101672C00);
  *id v34 = v0;
  v34[1] = sub_1007479BC;
  unint64_t v21 = 0x800000010124CB50;
  Swift::OpaquePointer_optional v22 = sub_10074B580;
  uint64_t v23 = v0 + 16;
  unint64_t v20 = 0xD000000000000013;
  CGFloat v24 = (void *)v33;
LABEL_20:
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v23, 0, 0, v20, v21, v22, v24, v19);
}

uint64_t sub_1007480B4()
{
  *(void *)(*(void *)v1 + 184) = v0;
  swift_task_dealloc();
  if (v0)
  {
    int v2 = sub_100748444;
  }
  else
  {
    swift_task_dealloc();
    int v2 = sub_1007481D0;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1007481D0()
{
  uint64_t v1 = *(void **)(v0 + 152);

  int v2 = *(void **)(v0 + 56);
  self;
  uint64_t v3 = swift_dynamicCastObjCClass();
  if (!v3)
  {
    uint64_t v8 = *(void **)(v0 + 144);
    uint64_t v9 = *(void **)(v0 + 96);

    id v10 = v8;
    swift_willThrow();

    swift_errorRelease();
LABEL_7:
    swift_release();
    goto LABEL_8;
  }
  uint64_t v4 = (void *)v3;
  uint64_t v5 = *(void *)(v0 + 184);
  (*(void (**)(void))(v0 + 80))();
  int8x16_t v6 = *(void **)(v0 + 144);
  uint64_t v7 = *(void **)(v0 + 96);
  if (v5)
  {

    swift_errorRelease();
    swift_release();
LABEL_8:
    id v14 = *(uint64_t (**)(void))(v0 + 8);
    return v14();
  }
  id v11 = v2;

  swift_errorRelease();
  uint64_t v12 = *(void *)(v0 + 112);
  if (v12 == 2)
  {
    id v13 = *(void **)(v0 + 144);
    swift_willThrow();

    goto LABEL_7;
  }

  *(void *)(v0 + 104) = *(void *)(v0 + 144);
  *(void *)(v0 + 112) = v12 + 1;
  *(void *)(v0 + 96) = v4;
  uint64_t v16 = *(void *)(v0 + 72);
  uint64_t v17 = swift_task_alloc();
  *(void *)(v0 + 120) = v17;
  *(void *)(v17 + 16) = v16;
  *(void *)(v17 + 24) = v4;
  double v18 = (void *)swift_task_alloc();
  *(void *)(v0 + 128) = v18;
  uint64_t v19 = sub_10050BF48(0, &qword_101672C00);
  *double v18 = v0;
  v18[1] = sub_1007479BC;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v0 + 16, 0, 0, 0xD000000000000013, 0x800000010124CB50, sub_10074B580, v17, v19);
}

uint64_t sub_100748444()
{
  int v2 = *(void **)(v0 + 144);
  uint64_t v1 = *(void **)(v0 + 152);
  uint64_t v3 = *(void **)(v0 + 96);

  swift_task_dealloc();
  swift_errorRelease();
  swift_release();
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_1007484F0(uint64_t a1)
{
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = v1;
  return _swift_task_switch(sub_100748510, 0, 0);
}

uint64_t sub_100748510()
{
  sub_1005057FC((uint64_t *)&unk_101676C10);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_101177E70;
  long long v10 = *(_OWORD *)(v0 + 24);
  *(void *)(v1 + 32) = v10;
  specialized Array._endMutation()();
  id v2 = objc_allocWithZone((Class)CKFetchRecordsOperation);
  sub_10050BF48(0, &qword_10167BED0);
  id v3 = (id)v10;
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v5 = [v2 initWithRecordIDs:isa];
  *(void *)(v0 + 40) = v5;

  [v5 setQualityOfService:25];
  [v5 setQueuePriority:8];
  uint64_t v6 = swift_task_alloc();
  *(void *)(v0 + 48) = v6;
  *(void *)(v6 + 16) = v5;
  *(_OWORD *)(v6 + 24) = v10;
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v0 + 56) = v7;
  uint64_t v8 = sub_10050BF48(0, (unint64_t *)&qword_10167C060);
  *uint64_t v7 = v0;
  v7[1] = sub_100748704;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v0 + 16, 0, 0, 0xD00000000000001ALL, 0x800000010124CB30, sub_10074B340, v6, v8);
}

uint64_t sub_100748704()
{
  *(void *)(*(void *)v1 + 64) = v0;
  swift_task_dealloc();
  if (v0)
  {
    id v2 = sub_100748888;
  }
  else
  {
    swift_task_dealloc();
    id v2 = sub_100748820;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100748820()
{
  uint64_t v1 = *(void *)(v0 + 16);
  id v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v2(v1);
}

uint64_t sub_100748888()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1007488F4(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5 = sub_1005057FC(&qword_10167DE38);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  __n128 v9 = __chkstk_darwin(v5, v8);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v6 + 16))((char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v5, v9);
  unint64_t v10 = (*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v11 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v11 + v10, (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v5);
  sub_100748B54(a3, (uint64_t)sub_10074B61C, v11);
  return swift_release();
}

void sub_100748A3C(void *a1, char a2)
{
  if (a2)
  {
    swift_errorRetain();
    sub_1005057FC(&qword_10167DE38);
    CheckedContinuation.resume(throwing:)();
  }
  else
  {
    self;
    if (swift_dynamicCastObjCClass())
    {
      id v3 = a1;
      sub_1005057FC(&qword_10167DE38);
      CheckedContinuation.resume(returning:)();
    }
    else
    {
      type metadata accessor for CKError(0);
      id v4 = a1;
      sub_1008CE410((uint64_t)_swiftEmptyArrayStorage);
      sub_10074B4AC();
      _BridgedStoredNSError.init(_:userInfo:)();
      sub_1005057FC(&qword_10167DE38);
      CheckedContinuation.resume(throwing:)();
      sub_100541080(a1, 0);
    }
  }
}

uint64_t sub_100748B54(void *a1, uint64_t a2, uint64_t a3)
{
  id v4 = v3;
  id v8 = [a1 recordID];
  sub_10050BF48(0, &qword_10167DE40);
  sub_1005057FC((uint64_t *)&unk_101676C10);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_101177E70;
  *(void *)(v9 + 32) = a1;
  uint64_t v17 = (void *)v9;
  specialized Array._endMutation()();
  id v10 = a1;
  v19.value._rawValue = v17;
  v19.is_nil = 0;
  Class isa = CKModifyRecordsOperation.init(recordsToSave:recordIDsToDelete:)(v19, v20).super.super.super.super.isa;
  [(objc_class *)isa setQualityOfService:25];
  [(objc_class *)isa setQueuePriority:8];
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = _swiftEmptyDictionarySingleton;
  swift_retain();
  CKModifyRecordsOperation.perRecordSaveBlock.setter();
  uint64_t v13 = (void *)swift_allocObject();
  v13[2] = v12;
  _OWORD v13[3] = v8;
  v13[4] = a2;
  v13[5] = a3;
  v13[6] = v10;
  id v14 = v10;
  swift_retain();
  id v15 = v8;
  swift_retain();
  CKModifyRecordsOperation.modifyRecordsResultBlock.setter();
  [v4 addOperation:isa];

  return swift_release();
}

void sub_100748D1C(uint64_t a1, char a2, uint64_t a3, void *a4, void (*a5)(void *, uint64_t), uint64_t a6, void *a7)
{
  swift_beginAccess();
  uint64_t v13 = *(void *)(a3 + 16);
  if (*(void *)(v13 + 16))
  {
    id v14 = a4;
    unint64_t v15 = sub_100956CAC((uint64_t)v14);
    if (v16)
    {
      uint64_t v17 = *(void *)(v13 + 56) + 16 * v15;
      double v18 = *(void **)v17;
      uint64_t v19 = *(unsigned __int8 *)(v17 + 8);
      swift_endAccess();
      sub_100626B48(v18, v19);

      a5(v18, v19);
      sub_100541080(v18, v19);
      return;
    }
  }
  swift_endAccess();
  if (a2)
  {
    swift_errorRetain();
    a5((void *)a1, 1);
    sub_100541074(a1, 1);
  }
  else
  {
    if (qword_10166F9C8 != -1) {
      swift_once();
    }
    swift_beginAccess();
    Swift::OpaquePointer_optional v20 = (void *)static OS_os_log.crlDefault;
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_10117E810;
    id v22 = v20;
    v23._countAndFlagsBits = CKRecord.recordType.getter();
    String.append(_:)(v23);
    swift_bridgeObjectRelease();
    v24._countAndFlagsBits = 0x203A444920;
    v24._object = (void *)0xE500000000000000;
    String.append(_:)(v24);
    id v25 = [a7 recordID];
    id v26 = [v25 recordName];

    uint64_t v27 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    double v29 = v28;

    v30._countAndFlagsBits = v27;
    v30._object = v29;
    String.append(_:)(v30);
    swift_bridgeObjectRelease();
    *(void *)(inited + 56) = &type metadata for String;
    *(void *)(inited + 64) = sub_100528BE4();
    *(void *)(inited + 32) = 0x203A65707954;
    *(void *)(inited + 40) = 0xE600000000000000;
    uint64_t v31 = static os_log_type_t.error.getter();
    sub_100BAC898((uint64_t)v22, (uint64_t)&_mh_execute_header, v31, (uint64_t)"Encountered internal CloudKit logic error when saving a record %{public}@", 73, 2, inited);
    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();

    type metadata accessor for CKError(0);
    sub_1008CE410((uint64_t)_swiftEmptyArrayStorage);
    sub_10074B4AC();
    _BridgedStoredNSError.init(_:userInfo:)();
    a5((void *)0x203A65707954, 1);
  }
}

uint64_t sub_100749028(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  uint64_t v8 = sub_1005057FC(&qword_10167DE28);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  __chkstk_darwin(v8, v11);
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = &_swiftEmptyDictionarySingleton;
  swift_retain();
  CKFetchRecordsOperation.perRecordResultBlock.setter();
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))((char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v8);
  unint64_t v13 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = v12;
  *(void *)(v14 + 24) = a3;
  (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v14 + v13, (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v8);
  swift_retain();
  id v15 = a3;
  CKFetchRecordsOperation.fetchRecordsResultBlock.setter();
  [a4 addOperation:a2];
  return swift_release();
}

uint64_t sub_1007491E0(uint64_t a1, char a2, uint64_t a3, void *a4)
{
  swift_beginAccess();
  uint64_t v7 = *(void *)(a3 + 16);
  if (!*(void *)(v7 + 16)) {
    goto LABEL_6;
  }
  id v8 = a4;
  unint64_t v9 = sub_100956CAC((uint64_t)v8);
  if ((v10 & 1) == 0)
  {

LABEL_6:
    swift_endAccess();
    if ((a2 & 1) == 0)
    {
      if (qword_10166F9C8 != -1) {
        swift_once();
      }
      swift_beginAccess();
      uint64_t v14 = (void *)static OS_os_log.crlDefault;
      sub_1005057FC((uint64_t *)&unk_101672B40);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_10117E810;
      id v16 = v14;
      id v17 = [a4 recordName];
      uint64_t v18 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v20 = v19;

      *(void *)(inited + 56) = &type metadata for String;
      *(void *)(inited + 64) = sub_100528BE4();
      *(void *)(inited + 32) = v18;
      *(void *)(inited + 40) = v20;
      uint64_t v21 = static os_log_type_t.error.getter();
      sub_100BAC898((uint64_t)v16, (uint64_t)&_mh_execute_header, v21, (uint64_t)"Encountered internal CloudKit logic error when fetching a record ID: %{public}@", 79, 2, inited);
      swift_setDeallocating();
      sub_1005057FC(&qword_101672B50);
      swift_arrayDestroy();

      type metadata accessor for CKError(0);
      sub_1008CE410((uint64_t)_swiftEmptyArrayStorage);
      sub_10074B4AC();
      _BridgedStoredNSError.init(_:userInfo:)();
      sub_1005057FC(&qword_10167DE28);
      return CheckedContinuation.resume(throwing:)();
    }
    swift_errorRetain();
LABEL_11:
    sub_1005057FC(&qword_10167DE28);
    return CheckedContinuation.resume(throwing:)();
  }
  uint64_t v11 = *(void *)(v7 + 56) + 16 * v9;
  uint64_t v12 = *(void **)v11;
  char v13 = *(unsigned char *)(v11 + 8);
  swift_endAccess();
  sub_100626B48(v12, v13);

  if (v13) {
    goto LABEL_11;
  }
  sub_1005057FC(&qword_10167DE28);
  return CheckedContinuation.resume(returning:)();
}

uint64_t sub_100749464(uint64_t a1, uint64_t a2, void *a3)
{
  id v17 = a3;
  uint64_t v5 = sub_1005057FC(&qword_10167DE18);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  __chkstk_darwin(v5, v8);
  unint64_t v9 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = _swiftEmptyDictionarySingleton;
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = _swiftEmptyArrayStorage;
  swift_retain();
  CKFetchRecordZoneChangesOperation.recordWasChangedBlock.setter();
  swift_retain();
  CKFetchRecordZoneChangesOperation.recordWithIDWasDeletedBlock.setter();
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v9, a1, v5);
  unint64_t v12 = (*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  unint64_t v13 = (v7 + v12 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v14 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v14 + v12, v9, v5);
  *(void *)(v14 + v13) = v10;
  *(void *)(v14 + ((v13 + 15) & 0xFFFFFFFFFFFFFFF8)) = v11;
  swift_retain();
  swift_retain();
  CKFetchRecordZoneChangesOperation.fetchRecordZoneChangesResultBlock.setter();
  [v17 addOperation:a2];
  swift_release();
  return swift_release();
}

uint64_t sub_10074968C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = (double **)(a4 + 16);
  if (qword_10166FB88 != -1) {
    swift_once();
  }
  swift_beginAccess();
  id v8 = (id)static OS_os_log.dataSync;
  uint64_t v9 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v8, (uint64_t)&_mh_execute_header, v9, (uint64_t)"Fetching deletion", 17, 2, (uint64_t)_swiftEmptyArrayStorage);

  swift_beginAccess();
  uint64_t v10 = *v7;
  id v11 = a1;
  swift_bridgeObjectRetain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *uint64_t v7 = v10;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    uint64_t v10 = sub_100F6418C(0, *((void *)v10 + 2) + 1, 1, v10);
    *uint64_t v7 = v10;
  }
  unint64_t v14 = *((void *)v10 + 2);
  unint64_t v13 = *((void *)v10 + 3);
  if (v14 >= v13 >> 1)
  {
    uint64_t v10 = sub_100F6418C((double *)(v13 > 1), v14 + 1, 1, v10);
    *uint64_t v7 = v10;
  }
  *((void *)v10 + 2) = v14 + 1;
  id v15 = &v10[3 * v14];
  *((void *)v15 + 4) = v11;
  *((void *)v15 + 5) = a2;
  *((void *)v15 + 6) = a3;
  return swift_endAccess();
}

uint64_t sub_100749810(uint64_t a1, char a2)
{
  if (qword_10166FB88 != -1) {
    swift_once();
  }
  swift_beginAccess();
  id v4 = (id)static OS_os_log.dataSync;
  uint64_t v5 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v4, (uint64_t)&_mh_execute_header, v5, (uint64_t)"fetchRecordZoneChangesResultBlock", 33, 2, (uint64_t)_swiftEmptyArrayStorage);

  if (a2)
  {
    uint64_t v9 = (void *)static OS_os_log.dataSync;
    sub_10074B334(a1, 1);
    id v10 = v9;
    uint64_t v11 = static os_log_type_t.error.getter();
    sub_100BAC898((uint64_t)v10, (uint64_t)&_mh_execute_header, v11, (uint64_t)"fetchRecordZoneChangesResultBlock : failure", 43, 2, (uint64_t)_swiftEmptyArrayStorage);

    sub_1005057FC(&qword_10167DE18);
    return CheckedContinuation.resume(throwing:)();
  }
  else
  {
    id v6 = (id)static OS_os_log.dataSync;
    uint64_t v7 = static os_log_type_t.default.getter();
    sub_100BAC898((uint64_t)v6, (uint64_t)&_mh_execute_header, v7, (uint64_t)"fetchRecordZoneChangesResultBlock : success", 43, 2, (uint64_t)_swiftEmptyArrayStorage);

    swift_beginAccess();
    swift_beginAccess();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1005057FC(&qword_10167DE18);
    return CheckedContinuation.resume(returning:)();
  }
}

uint64_t sub_100749A00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v6[6] = a5;
  v6[7] = v5;
  v6[4] = a3;
  v6[5] = a4;
  v6[2] = a1;
  v6[3] = a2;
  return _swift_task_switch(sub_100749A28, v5, 0);
}

uint64_t sub_100749A28()
{
  uint64_t v2 = v0[5];
  unint64_t v1 = v0[6];
  uint64_t v4 = v0[3];
  unint64_t v3 = v0[4];
  id v5 = [objc_allocWithZone((Class)CKShare) initWithRecordZoneID:v0[2]];
  v0[8] = v5;
  static CKShare.SystemFieldKey.shareType.getter();
  uint64_t v12 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v13 = v6;
  sub_10050BF48(0, &qword_101672C00);
  CKRecordKeyValueSetting.subscript.setter();
  uint64_t v7 = (void *)swift_allocObject();
  v0[9] = v7;
  v7[2] = v4;
  v7[3] = v3;
  v7[4] = v2;
  v7[5] = v1;
  v7[6] = v5;
  sub_1005FA2A0(v2, v1);
  swift_bridgeObjectRetain();
  id v8 = v5;
  sub_100749E9C((int)v8, v4, v3, v2, v1, v8);
  id v9 = [*(id *)(v0[7] + 112) privateCloudDatabase:v12, v13];
  v0[10] = v9;
  swift_retain();
  id v10 = (void *)swift_task_alloc();
  v0[11] = v10;
  *id v10 = v0;
  v10[1] = sub_100749C7C;
  v10[10] = sub_10074B55C;
  v10[11] = v7;
  v10[8] = v8;
  v10[9] = v9;
  return _swift_task_switch(sub_100747890, 0, 0);
}

uint64_t sub_100749C7C(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 96) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = *(void *)(v4 + 56);
    uint64_t v6 = sub_100749E28;
  }
  else
  {
    uint64_t v7 = *(void *)(v4 + 56);

    *(void *)(v4 + 104) = a1;
    uint64_t v6 = sub_100749DBC;
    uint64_t v5 = v7;
  }
  return _swift_task_switch(v6, v5, 0);
}

uint64_t sub_100749DBC()
{
  uint64_t v1 = (void *)v0[8];
  swift_release();

  uint64_t v2 = (uint64_t (*)(uint64_t))v0[1];
  uint64_t v3 = v0[13];
  return v2(v3);
}

uint64_t sub_100749E28()
{
  uint64_t v1 = *(void **)(v0 + 64);

  swift_release();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_100749E9C(int a1, uint64_t a2, unint64_t a3, uint64_t a4, unint64_t a5, id a6)
{
  if (a3)
  {
    swift_bridgeObjectRetain();
    static CKShare.SystemFieldKey.title.getter();
    uint64_t v17 = a2;
    unint64_t v18 = a3;
    sub_10050BF48(0, &qword_101672C00);
    CKRecordKeyValueSetting.subscript.setter();
  }
  if (a5 >> 60 != 15)
  {
    sub_100510D4C(a4, a5);
    static CKShare.SystemFieldKey.thumbnailImageData.getter();
    uint64_t v17 = a4;
    unint64_t v18 = a5;
    sub_100510D4C(a4, a5);
    sub_10050BF48(0, &qword_101672C00);
    CKRecordKeyValueSetting.subscript.setter();
    sub_100514260(a4, a5);
  }
  uint64_t result = [a6 size:v17, v18];
  if (result > 0x100000)
  {
    if (qword_10166F9C8 != -1) {
      swift_once();
    }
    swift_beginAccess();
    uint64_t v12 = (void *)static OS_os_log.crlDefault;
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_10117E810;
    id v14 = v12;
    id v15 = [a6 size];
    *(void *)(inited + 56) = &type metadata for Int;
    *(void *)(inited + 64) = &protocol witness table for Int;
    *(void *)(inited + 32) = v15;
    uint64_t v16 = static os_log_type_t.error.getter();
    sub_100BAC898((uint64_t)v14, (uint64_t)&_mh_execute_header, v16, (uint64_t)"Guard CKShare size %d <= 1MB", 28, 2, inited);
    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();

    sub_10074B704();
    swift_allocError();
    return swift_willThrow();
  }
  return result;
}

uint64_t sub_10074A114(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return _swift_task_switch(sub_10074A134, v1, 0);
}

uint64_t sub_10074A134()
{
  uint64_t v2 = (void *)v0[2];
  uint64_t v1 = v0[3];
  sub_10050BF48(0, &qword_10167BED0);
  uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v5 = v4;
  id v6 = v2;
  v7._countAndFlagsBits = v3;
  v7._object = v5;
  Class isa = CKRecordID.init(recordName:zoneID:)(v7, (CKRecordZoneID)v6).super.isa;
  v0[4] = isa;
  v0[5] = [*(id *)(v1 + 112) privateCloudDatabase];
  sub_1005057FC((uint64_t *)&unk_101676C10);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_101177E70;
  *(void *)(v9 + 32) = isa;
  uint64_t v13 = v9;
  specialized Array._endMutation()();
  v0[6] = v13;
  id v10 = isa;
  uint64_t v11 = (void *)swift_task_alloc();
  v0[7] = v11;
  *uint64_t v11 = v0;
  v11[1] = sub_10074A2A8;
  return CKDatabase.modifyRecords(saving:deleting:savePolicy:atomically:)(_swiftEmptyArrayStorage, v13, 0, 1);
}

uint64_t sub_10074A2A8()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 64) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 24);
    uint64_t v4 = sub_10074A464;
  }
  else
  {
    uint64_t v5 = *(void **)(v2 + 40);
    uint64_t v6 = *(void *)(v2 + 24);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    uint64_t v4 = sub_10074A400;
    uint64_t v3 = v6;
  }
  return _swift_task_switch(v4, v3, 0);
}

uint64_t sub_10074A400()
{
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10074A464()
{
  uint64_t v1 = (void *)v0[5];
  uint64_t v2 = (void *)v0[4];
  swift_bridgeObjectRelease();

  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t sub_10074A4D4(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return _swift_task_switch(sub_10074A4F4, v1, 0);
}

uint64_t sub_10074A4F4()
{
  uint64_t v1 = *(void **)(*(void *)(v0 + 24) + 112);
  id v2 = [*(id *)(v0 + 16) ownerName];
  uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v5 = v4;

  if (v3) {
    BOOL v6 = 0;
  }
  else {
    BOOL v6 = v5 == 0xE000000000000000;
  }
  if (!v6 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
  {
    if (v3 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v5 == v7)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      char v9 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if ((v9 & 1) == 0)
      {
        id v10 = &selRef_sharedCloudDatabase;
        goto LABEL_14;
      }
    }
  }
  id v10 = &selRef_privateCloudDatabase;
LABEL_14:
  uint64_t v11 = *(void **)(v0 + 16);
  id v12 = [v1 *v10];
  *(void *)(v0 + 32) = v12;
  swift_bridgeObjectRelease();
  sub_10050BF48(0, &qword_10167BED0);
  uint64_t v13 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  id v15 = v14;
  id v16 = v11;
  v17._countAndFlagsBits = v13;
  v17._object = v15;
  Class isa = CKRecordID.init(recordName:zoneID:)(v17, (CKRecordZoneID)v16).super.isa;
  *(void *)(v0 + 40) = isa;
  uint64_t v19 = (void *)swift_task_alloc();
  *(void *)(v0 + 48) = v19;
  void *v19 = v0;
  v19[1] = sub_10074A6E4;
  v19[3] = isa;
  v19[4] = v12;
  return _swift_task_switch(sub_100748510, 0, 0);
}

uint64_t sub_10074A6E4(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 56) = a1;
  *(void *)(v3 + 64) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v4 = *(void *)(v3 + 24);
    uint64_t v5 = sub_10074A89C;
  }
  else
  {
    uint64_t v6 = *(void *)(v3 + 24);

    uint64_t v5 = sub_10074A80C;
    uint64_t v4 = v6;
  }
  return _swift_task_switch(v5, v4, 0);
}

uint64_t sub_10074A80C()
{
  self;
  uint64_t v1 = swift_dynamicCastObjCClass();
  if (!v1)
  {

    uint64_t v1 = 0;
  }
  id v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v2(v1);
}

uint64_t sub_10074A89C()
{
  uint64_t v1 = *(void **)(v0 + 32);

  id v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_10074A904()
{
  *(void *)(v1 + 128) = v0;
  return _swift_task_switch(sub_10074A924, v0, 0);
}

uint64_t sub_10074A924()
{
  uint64_t v1 = *(void **)(v0[16] + 112);
  v0[2] = v0;
  v0[7] = v0 + 15;
  v0[3] = sub_10074AA24;
  uint64_t v2 = swift_continuation_init();
  v0[10] = _NSConcreteStackBlock;
  v0[11] = 0x40000000;
  v0[12] = sub_10074AC54;
  v0[13] = &unk_1015120A0;
  v0[14] = v2;
  [v1 fetchUserRecordIDWithCompletionHandler:v0 + 10];
  return _swift_continuation_await(v0 + 2);
}

uint64_t sub_10074AA24()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 48);
  *(void *)(*v0 + 136) = v2;
  uint64_t v3 = *(void *)(v1 + 128);
  if (v2) {
    uint64_t v4 = sub_10074ABE8;
  }
  else {
    uint64_t v4 = sub_10074AB44;
  }
  return _swift_task_switch(v4, v3, 0);
}

uint64_t sub_10074AB44()
{
  uint64_t v1 = *(void **)(v0 + 120);
  id v2 = [v1 recordName];

  uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v5 = v4;

  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8);
  return v6(v3, v5);
}

uint64_t sub_10074ABE8()
{
  swift_willThrow();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10074AC54(uint64_t a1, void *a2, void *a3)
{
  uint64_t v3 = *(void *)(a1 + 32);
  if (a3)
  {
    sub_1005057FC(&qword_101672BD0);
    uint64_t v5 = swift_allocError();
    *uint64_t v6 = a3;
    id v7 = a3;
    a1 = v3;
    a2 = (void *)v5;
    return _swift_continuation_throwingResumeWithError(a1, a2);
  }
  if (!a2)
  {
    __break(1u);
    return _swift_continuation_throwingResumeWithError(a1, a2);
  }
  **(void **)(*(void *)(v3 + 64) + 40) = a2;
  id v8 = a2;

  return swift_continuation_throwingResume();
}

uint64_t sub_10074AD14(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return _swift_task_switch(sub_10074AD34, v1, 0);
}

uint64_t sub_10074AD34()
{
  id v1 = [*(id *)(v0 + 16) currentUserParticipant];
  if (v1 && (uint64_t v2 = v1, v3 = [v1 role], v2, v3 == (id)1))
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"leaveShare(_:)", 14, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Sync/CRLZoneShareController.swift", 87, 2, 342, (uint64_t)"Can not leave a share if you own it.", 36, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"leaveShare(_:)", 14, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Sync/CRLZoneShareController.swift", 87, 2, 342);
    uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
    return v4();
  }
  else
  {
    uint64_t v6 = *(void **)(v0 + 16);
    *(void *)(v0 + 32) = [*(id *)(*(void *)(v0 + 24) + 112) sharedCloudDatabase];
    sub_1005057FC((uint64_t *)&unk_101676C10);
    uint64_t v7 = swift_allocObject();
    *(_OWORD *)(v7 + 16) = xmmword_101177E70;
    *(void *)(v7 + 32) = [v6 recordID];
    specialized Array._endMutation()();
    *(void *)(v0 + 40) = v7;
    id v8 = (void *)swift_task_alloc();
    *(void *)(v0 + 48) = v8;
    *id v8 = v0;
    v8[1] = sub_10074AF78;
    return CKDatabase.modifyRecords(saving:deleting:savePolicy:atomically:)(_swiftEmptyArrayStorage, v7, 0, 1);
  }
}

uint64_t sub_10074AF78()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 56) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 24);
    uint64_t v4 = sub_10074B0C4;
  }
  else
  {
    uint64_t v5 = *(void *)(v2 + 24);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v4 = sub_10074A400;
    uint64_t v3 = v5;
  }
  return _swift_task_switch(v4, v3, 0);
}

uint64_t sub_10074B0C4()
{
  id v1 = *(void **)(v0 + 32);
  swift_bridgeObjectRelease();

  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t type metadata accessor for CRLZoneShareController()
{
  return self;
}

uint64_t sub_10074B150(uint64_t a1)
{
  return sub_100749464(a1, *(void *)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t sub_10074B158()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10074B190(void *a1, void *a2, char a3)
{
  return sub_10067E374(a1, a2, a3 & 1, v3);
}

uint64_t sub_10074B1B0(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_10074968C(a1, a2, a3, v3);
}

uint64_t sub_10074B1B8()
{
  uint64_t v1 = sub_1005057FC(&qword_10167DE18);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, v6 + 8, v5);
}

uint64_t sub_10074B278(uint64_t a1, char a2)
{
  char v3 = a2 & 1;
  sub_1005057FC(&qword_10167DE18);

  return sub_100749810(a1, v3);
}

uint64_t sub_10074B334(uint64_t a1, char a2)
{
  if (a2) {
    return swift_errorRetain();
  }
  return result;
}

uint64_t sub_10074B340(uint64_t a1)
{
  return sub_100749028(a1, *(void *)(v1 + 16), *(void **)(v1 + 24), *(void **)(v1 + 32));
}

uint64_t sub_10074B34C()
{
  uint64_t v1 = sub_1005057FC(&qword_10167DE28);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 32) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_release();

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_10074B424(uint64_t a1, char a2)
{
  char v4 = a2 & 1;
  sub_1005057FC(&qword_10167DE28);
  uint64_t v5 = *(void *)(v2 + 16);
  uint64_t v6 = *(void **)(v2 + 24);

  return sub_1007491E0(a1, v4, v5, v6);
}

unint64_t sub_10074B4AC()
{
  unint64_t result = qword_101670DF8;
  if (!qword_101670DF8)
  {
    type metadata accessor for CKError(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101670DF8);
  }
  return result;
}

uint64_t sub_10074B504()
{
  swift_bridgeObjectRelease();
  unint64_t v1 = *(void *)(v0 + 40);
  if (v1 >> 60 != 15) {
    sub_100510084(*(void *)(v0 + 32), v1);
  }

  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_10074B55C(int a1)
{
  return sub_100749E9C(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(id *)(v1 + 48));
}

uint64_t sub_10074B580(uint64_t a1)
{
  return sub_1007488F4(a1, *(void *)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t sub_10074B588()
{
  uint64_t v1 = sub_1005057FC(&qword_10167DE38);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

void sub_10074B61C(void *a1, char a2)
{
  char v3 = a2 & 1;
  sub_1005057FC(&qword_10167DE38);

  sub_100748A3C(a1, v3);
}

uint64_t sub_10074B6A0()
{
  swift_release();

  swift_release();

  return _swift_deallocObject(v0, 56, 7);
}

void sub_10074B6F0(uint64_t a1, char a2)
{
  sub_100748D1C(a1, a2 & 1, *(void *)(v2 + 16), *(void **)(v2 + 24), *(void (**)(void *, uint64_t))(v2 + 32), *(void *)(v2 + 40), *(void **)(v2 + 48));
}

unint64_t sub_10074B704()
{
  unint64_t result = qword_10167DE48;
  if (!qword_10167DE48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10167DE48);
  }
  return result;
}

ValueMetadata *_s15FetchResultDataVMa()
{
  return &_s15FetchResultDataVN;
}

unsigned char *storeEnumTagSinglePayload for CRLZoneShareControllerError(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x10074B804);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLZoneShareControllerError()
{
  return &type metadata for CRLZoneShareControllerError;
}

unint64_t sub_10074B840()
{
  unint64_t result = qword_10167DE50;
  if (!qword_10167DE50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10167DE50);
  }
  return result;
}

id sub_10074B8A0()
{
  id v0 = objc_allocWithZone((Class)CAMediaTimingFunction);
  LODWORD(v1) = 1045220557;
  LODWORD(v2) = 0.25;
  LODWORD(v3) = 1.0;
  id result = [v0 initWithControlPoints:v1 :0.0 :v2 :v3];
  qword_10167DE60 = (uint64_t)result;
  return result;
}

id sub_10074B8EC()
{
  id v0 = objc_allocWithZone((Class)CAMediaTimingFunction);
  LODWORD(v1) = 1045220557;
  LODWORD(v2) = 0.25;
  LODWORD(v3) = 1.0;
  id result = [v0 initWithControlPoints:v1 :0.0 :v2 :v3];
  qword_10167DE68 = (uint64_t)result;
  return result;
}

id sub_10074B938()
{
  id v0 = objc_allocWithZone((Class)CAMediaTimingFunction);
  LODWORD(v1) = 1045220557;
  LODWORD(v2) = 0.25;
  LODWORD(v3) = 1.0;
  id result = [v0 initWithControlPoints:v1 :0.0 :v2 :v3];
  qword_10167DE70 = (uint64_t)result;
  return result;
}

id sub_10074B984()
{
  id v0 = objc_allocWithZone((Class)CAMediaTimingFunction);
  LODWORD(v1) = 1045220557;
  LODWORD(v2) = 0.25;
  LODWORD(v3) = 1.0;
  id result = [v0 initWithControlPoints:v1 :0.0 :v2 :v3];
  qword_10167DE78 = (uint64_t)result;
  return result;
}

void sub_10074B9D0()
{
  qword_10167DE80 = 0x3FF0000000000000;
}

void sub_10074B9E0()
{
  qword_10167DE88 = 0x4079000000000000;
}

void sub_10074B9F0()
{
  qword_10167DE90 = 0x4043000000000000;
}

void sub_10074BA00()
{
  qword_10167DE98 = 0;
}

id sub_10074BA0C()
{
  id v0 = objc_allocWithZone((Class)CAMediaTimingFunction);
  LODWORD(v1) = 1045220557;
  LODWORD(v2) = 0.25;
  LODWORD(v3) = 1.0;
  id result = [v0 initWithControlPoints:v1 :0.0 :v2 :v3];
  qword_10167DEA0 = (uint64_t)result;
  return result;
}

id sub_10074BA58()
{
  id v0 = objc_allocWithZone((Class)CAMediaTimingFunction);
  LODWORD(v1) = 1045220557;
  LODWORD(v2) = 0.25;
  LODWORD(v3) = 1.0;
  id result = [v0 initWithControlPoints:v1 :0.0 :v2 :v3];
  qword_10167DEA8 = (uint64_t)result;
  return result;
}

double sub_10074BAA4(uint64_t a1)
{
  return sub_10074BB54(a1, &qword_10166EF68, (double *)&qword_10167DED0, &qword_10167DEB0);
}

double sub_10074BAD0(uint64_t a1)
{
  return sub_10074BB54(a1, &qword_10166EF70, (double *)&qword_10167DED8, &qword_10167DEB8);
}

double sub_10074BAFC(uint64_t a1)
{
  return sub_10074BB54(a1, &qword_10166EF78, (double *)&qword_10167DEE0, &qword_10167DEC0);
}

double sub_10074BB28(uint64_t a1)
{
  return sub_10074BB54(a1, &qword_10166EF80, (double *)&qword_10167DEE8, &qword_10167DEC8);
}

double sub_10074BB54(uint64_t a1, void *a2, double *a3, void *a4)
{
  if (*a2 != -1) {
    swift_once();
  }
  double result = *a3;
  *a4 = *(void *)a3;
  return result;
}

void sub_10074BB9C()
{
  qword_10167DED0 = 0x3FF0000000000000;
}

void sub_10074BBAC()
{
  qword_10167DED8 = 0x4079000000000000;
}

void sub_10074BBBC()
{
  qword_10167DEE0 = 0x4043000000000000;
}

void sub_10074BBCC()
{
  qword_10167DEE8 = 0;
}

id sub_10074BBD8()
{
  id v0 = objc_allocWithZone((Class)CAMediaTimingFunction);
  LODWORD(v1) = 1045220557;
  LODWORD(v2) = 0.25;
  LODWORD(v3) = 1.0;
  id result = [v0 initWithControlPoints:v1 :0.0 :v2 :v3];
  qword_10167DEF0 = (uint64_t)result;
  return result;
}

id sub_10074BC24()
{
  id v0 = objc_allocWithZone((Class)CAMediaTimingFunction);
  LODWORD(v1) = 1045220557;
  LODWORD(v2) = 0.25;
  LODWORD(v3) = 1.0;
  id result = [v0 initWithControlPoints:v1 :0.0 :v2 :v3];
  qword_10167DEF8 = (uint64_t)result;
  return result;
}

void sub_10074BC70()
{
  qword_10167DF00 = 0x3FF0000000000000;
}

void sub_10074BC80()
{
  qword_10167DF08 = 0x407F400000000000;
}

void sub_10074BC94()
{
  qword_10167DF10 = 0x4047000000000000;
}

void sub_10074BCA4()
{
  qword_10167DF18 = 0;
}

id sub_10074BCB0()
{
  id v0 = objc_allocWithZone((Class)CAMediaTimingFunction);
  LODWORD(v1) = 1045220557;
  LODWORD(v2) = 0.25;
  LODWORD(v3) = 1.0;
  id result = [v0 initWithControlPoints:v1 :0.0 :v2 :v3];
  qword_10167DF20 = (uint64_t)result;
  return result;
}

id sub_10074BCFC()
{
  id v0 = objc_allocWithZone((Class)CAMediaTimingFunction);
  LODWORD(v1) = 1045220557;
  LODWORD(v2) = 0.25;
  LODWORD(v3) = 1.0;
  id result = [v0 initWithControlPoints:v1 :0.0 :v2 :v3];
  qword_10167DF28 = (uint64_t)result;
  return result;
}

id sub_10074BD48()
{
  id v0 = objc_allocWithZone((Class)CAMediaTimingFunction);
  LODWORD(v1) = 1045220557;
  LODWORD(v2) = 0.25;
  LODWORD(v3) = 1.0;
  id result = [v0 initWithControlPoints:v1 :0.0 :v2 :v3];
  qword_10167DF30 = (uint64_t)result;
  return result;
}

id sub_10074BD94()
{
  id result = [self blackColor];
  qword_10167DF38 = (uint64_t)result;
  return result;
}

void sub_10074BDD0()
{
  qword_10167DF40 = 0x4018000000000000;
}

uint64_t sub_10074BDE0(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = sub_1005057FC(&qword_101672BB0);
  __chkstk_darwin(v10 - 8, v11);
  uint64_t v91 = (uint64_t)&v77 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v13 = *(unsigned __int8 *)(v5
                           + OBJC_IVAR____TtC8Freeform40CRLBoardViewControllerAnimatedTransition_didCallPerformTransitionAnimation);
  *(unsigned char *)(v5 + OBJC_IVAR____TtC8Freeform40CRLBoardViewControllerAnimatedTransition_didCallPerformTransitionAnimation) = 1;
  if (v13 == 1) {
    goto LABEL_60;
  }
  uint64_t v88 = a3;
  uint64_t v89 = a4;
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = _swiftEmptyArrayStorage;
  id v15 = (unint64_t *)(v14 + 16);
  [a1 bounds];
  double v17 = v16;
  double v19 = v18;
  double v21 = v20;
  double v23 = v22;
  if (qword_10166EFD0 != -1) {
    swift_once();
  }
  Swift::String v24 = (void *)qword_10167DF38;
  id v25 = (objc_class *)type metadata accessor for EncapsulatedColorView();
  id v26 = objc_allocWithZone(v25);
  uint64_t v27 = sub_100750A1C(v24, v17, v19, v21, v23);
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)((*v15 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v15 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  uint64_t v28 = v5 + OBJC_IVAR____TtC8Freeform40CRLBoardViewControllerAnimatedTransition_thumbnailScreenRect;
  char v29 = *(unsigned char *)(v5 + OBJC_IVAR____TtC8Freeform40CRLBoardViewControllerAnimatedTransition_thumbnailScreenRect + 32);
  id v87 = v27;
  if (v29)
  {
    Swift::String v30 = 0;
  }
  else
  {
    double v32 = *(double *)(v28 + 16);
    double v31 = *(double *)(v28 + 24);
    if (qword_10166ED90 != -1) {
      swift_once();
    }
    id v33 = [(id)qword_10171A168 UIColor];
    id v34 = objc_allocWithZone(v25);
    Swift::String v30 = sub_100750A1C(v33, 0.0, 0.0, v32, v31);
    double v35 = v30;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)((*v15 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v15 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
  }
  uint64_t v36 = OBJC_IVAR____TtC8Freeform40CRLBoardViewControllerAnimatedTransition_thumbnailImageView;
  id v37 = *(void **)(v5 + OBJC_IVAR____TtC8Freeform40CRLBoardViewControllerAnimatedTransition_thumbnailImageView);
  if (v37)
  {
    id v38 = v37;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)((*v15 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v15 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
  }
  id v39 = a2;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)((*v15 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v15 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  id v84 = [a1 layer];
  if (v30) {
    id v85 = [v30 layer];
  }
  else {
    id v85 = 0;
  }
  CGRect v40 = *(void **)(v5 + v36);
  uint64_t v90 = v14;
  if (v40) {
    id v83 = [v40 layer];
  }
  else {
    id v83 = 0;
  }
  id v86 = v39;
  id v82 = [v39 layer];
  if (v30)
  {
    uint64_t v41 = qword_10166EFD8;
    id v42 = v30;
    if (v41 != -1) {
      swift_once();
    }
    double v43 = *(double *)&qword_10167DF40;
    id v44 = [*(id *)&v42[OBJC_IVAR____TtC8FreeformP33_22C834EA6031CC5FD96573982091823D21EncapsulatedColorView_colorView] layer];
    if (!v44) {
      goto LABEL_58;
    }
    uint64_t v45 = v44;
    [v44 setCornerRadius:v43];
  }
  uint64_t v46 = *(void **)(v5 + v36);
  if (v46)
  {
    uint64_t v47 = qword_10166EFD8;
    long long v48 = v46;
    if (v47 != -1) {
      swift_once();
    }
    double v49 = *(double *)&qword_10167DF40;
    id v50 = [*(id *)&v48[OBJC_IVAR____TtC8FreeformP33_22C834EA6031CC5FD96573982091823D21EncapsulatedImageView_imageView] layer];
    if (!v50) {
      goto LABEL_59;
    }
    uint64_t v51 = v50;
    [v50 setCornerRadius:v49];
  }
  unint64_t v52 = *v15;
  unint64_t v53 = v52 >> 62;
  if (*(unsigned char *)(v5 + OBJC_IVAR____TtC8Freeform40CRLBoardViewControllerAnimatedTransition_isPushing) != 1)
  {
LABEL_46:
    if (v53)
    {
      swift_bridgeObjectRetain_n();
      uint64_t v58 = _CocoaArrayWrapper.endIndex.getter();
      if (v58) {
        goto LABEL_48;
      }
    }
    else
    {
      uint64_t v58 = *(void *)((v52 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain_n();
      if (v58)
      {
LABEL_48:
        if (v58 >= 1)
        {
          for (uint64_t i = 0; i != v58; ++i)
          {
            if ((v52 & 0xC000000000000001) != 0) {
              id v60 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
            }
            else {
              id v60 = *(id *)(v52 + 8 * i + 32);
            }
            id v61 = v60;
            [a1 addSubview:v60];
          }
          goto LABEL_55;
        }
        __break(1u);
        goto LABEL_57;
      }
    }
LABEL_55:
    swift_bridgeObjectRelease_n();
    uint64_t v62 = type metadata accessor for TaskPriority();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v62 - 8) + 56))(v91, 1, 1, v62);
    uint64_t v63 = swift_allocObject();
    swift_unknownObjectWeakInit();
    type metadata accessor for MainActor();
    id v81 = v30;
    swift_retain();
    uint64_t v80 = v87;
    id v79 = v86;
    uint64_t v65 = v88;
    uint64_t v64 = v89;
    sub_1005173A0(v88);
    id v66 = v85;
    id v87 = (char *)v85;
    id v77 = v30;
    uint64_t v67 = v90;
    swift_retain();
    id v78 = a1;
    id v68 = v82;
    id v69 = v84;
    id v70 = v83;
    id v86 = v83;
    uint64_t v71 = static MainActor.shared.getter();
    uint64_t v72 = (void *)swift_allocObject();
    v72[2] = v71;
    v72[3] = &protocol witness table for MainActor;
    v72[4] = v63;
    v72[5] = v65;
    id v73 = v79;
    v72[6] = v64;
    v72[7] = v73;
    v72[8] = v68;
    v72[9] = v69;
    uint64_t v74 = v80;
    v72[10] = v80;
    v72[11] = v70;
    v72[12] = v66;
    v72[13] = v67;
    id v75 = v78;
    v72[14] = v77;
    v72[15] = v75;
    swift_release();
    sub_1005912D0(v91, (uint64_t)&unk_10167E118, (uint64_t)v72);

    swift_release();
    return swift_release();
  }
  if (!v53)
  {
    uint64_t v54 = *(void *)((v52 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain_n();
    if (v54) {
      goto LABEL_38;
    }
LABEL_45:
    swift_bridgeObjectRelease_n();
    goto LABEL_46;
  }
  swift_bridgeObjectRetain_n();
  uint64_t v54 = _CocoaArrayWrapper.endIndex.getter();
  if (!v54) {
    goto LABEL_45;
  }
LABEL_38:
  if (v54 >= 1)
  {
    for (uint64_t j = 0; j != v54; ++j)
    {
      if ((v52 & 0xC000000000000001) != 0) {
        id v56 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v56 = *(id *)(v52 + 8 * j + 32);
      }
      id v57 = v56;
      [v56 setHidden:1];
    }
    goto LABEL_45;
  }
LABEL_57:
  __break(1u);
LABEL_58:
  __break(1u);
LABEL_59:
  __break(1u);
LABEL_60:
  uint64_t result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10074C65C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  *(void *)(v8 + 1136) = v16;
  *(_OWORD *)(v8 + 1120) = v15;
  *(_OWORD *)(v8 + 1104) = v14;
  *(_OWORD *)(v8 + 1088) = v13;
  *(void *)(v8 + 1080) = a8;
  *(void *)(v8 + 1072) = a7;
  *(void *)(v8 + 1064) = a6;
  *(void *)(v8 + 1056) = a5;
  *(void *)(v8 + 1048) = a4;
  type metadata accessor for MainActor();
  *(void *)(v8 + 1144) = static MainActor.shared.getter();
  uint64_t v10 = dispatch thunk of Actor.unownedExecutor.getter();
  *(void *)(v8 + 1152) = v10;
  *(void *)(v8 + 1160) = v9;
  return _swift_task_switch(sub_10074C728, v10, v9);
}

uint64_t sub_10074C728()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  *(void *)(v0 + 1168) = Strong;
  if (Strong)
  {
    uint64_t v2 = swift_allocObject();
    *(void *)(v0 + 1176) = v2;
    *(unsigned char *)(v2 + 16) = 0;
    double v3 = sub_1006C9744((uint64_t)_swiftEmptyArrayStorage, 0.0);
    *(void *)(v0 + 1032) = v4;
    *(double *)(v0 + 1040) = v3;
    uint64_t v5 = (void *)swift_task_alloc();
    *(void *)(v0 + 1184) = v5;
    *uint64_t v5 = v0;
    v5[1] = sub_10074C850;
    return sub_10074F3AC();
  }
  else
  {
    swift_release();
    uint64_t v7 = *(uint64_t (**)(void))(v0 + 8);
    return v7();
  }
}

uint64_t sub_10074C850()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 1160);
  uint64_t v3 = *(void *)(v1 + 1152);
  return _swift_task_switch(sub_10074C970, v3, v2);
}

uint64_t sub_10074C970()
{
  id v110 = (uint64_t *)(v0 + 272);
  uint64_t v1 = *(void *)(v0 + 1168);
  uint64_t v2 = *(void **)(v0 + 1072);
  swift_release();
  sub_10074D520(v2, v1, v0 + 232);
  long long v111 = (uint64_t *)(v0 + 312);
  id v114 = (long long *)(v0 + 392);
  if (*(void *)(v0 + 256))
  {
    sub_10053974C((long long *)(v0 + 232), v0 + 192);
    uint64_t v4 = *(void *)(v0 + 216);
    uint64_t v3 = *(void *)(v0 + 224);
    uint64_t v5 = sub_10050F848((void *)(v0 + 192), v4);
    *(void *)(v0 + 536) = v4;
    uint64_t v6 = *(void *)(v3 + 24);
    *(void *)(v0 + 544) = v6;
    uint64_t v7 = sub_1005767BC((uint64_t *)(v0 + 512));
    (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v4 - 8) + 16))(v7, v5, v4);
    sub_1006C959C((uint64_t)v7, (uint64_t *)(v0 + 1032), v4, v6);
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v0 + 512);
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v0 + 192);
  }
  else
  {
    sub_100522F00(v0 + 232, &qword_10167E120);
  }
  uint64_t v8 = *(void *)(v0 + 1168);
  uint64_t v9 = *(void **)(v0 + 1136);
  uint64_t v10 = *(void **)(v0 + 1096);
  uint64_t v11 = *(void **)(v0 + 1088);
  uint64_t v12 = *(void **)(v0 + 1080);
  [v12 sublayerTransform];
  [v12 anchorPoint];
  uint64_t v108 = v14;
  uint64_t v109 = v13;
  [v12 frame];
  uint64_t v106 = v16;
  uint64_t v107 = v15;
  [v12 setAnchorPoint:0.0, 0.0];
  sub_10074E4B4(v11, v12, 0, v8, v9, v110);
  uint64_t v18 = *(void *)(v0 + 296);
  uint64_t v17 = *(void *)(v0 + 304);
  double v19 = sub_10050F848(v110, v18);
  *(void *)(v0 + 336) = v18;
  uint64_t v20 = *(void *)(v17 + 24);
  *(void *)(v0 + 344) = v20;
  double v21 = sub_1005767BC(v111);
  (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v18 - 8) + 16))(v21, v19, v18);
  sub_1006C959C((uint64_t)v21, (uint64_t *)(v0 + 1032), v18, v20);
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v111);
  sub_10074D520(v10, v8, (uint64_t)v114);
  double v22 = (uint64_t *)(v0 + 1032);
  if (*(void *)(v0 + 416))
  {
    sub_10053974C(v114, v0 + 352);
    uint64_t v23 = *(void *)(v0 + 376);
    uint64_t v24 = *(void *)(v0 + 384);
    id v25 = sub_10050F848((void *)(v0 + 352), v23);
    *(void *)(v0 + 496) = v23;
    uint64_t v26 = *(void *)(v24 + 24);
    *(void *)(v0 + 504) = v26;
    uint64_t v27 = sub_1005767BC((uint64_t *)(v0 + 472));
    (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v23 - 8) + 16))(v27, v25, v23);
    sub_1006C959C((uint64_t)v27, (uint64_t *)(v0 + 1032), v23, v26);
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v0 + 472);
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v0 + 352);
  }
  else
  {
    sub_100522F00((uint64_t)v114, &qword_10167E120);
  }
  uint64_t v28 = *(void *)(v0 + 1168);
  uint64_t v29 = OBJC_IVAR____TtC8Freeform40CRLBoardViewControllerAnimatedTransition_thumbnailImageView;
  Swift::String v30 = *(void **)(v28 + OBJC_IVAR____TtC8Freeform40CRLBoardViewControllerAnimatedTransition_thumbnailImageView);
  if (v30)
  {
    id v31 = v30;
    sub_10074D520(v31, v28, v0 + 592);
    if (*(void *)(v0 + 616))
    {
      sub_10053974C((long long *)(v0 + 592), v0 + 912);
      uint64_t v32 = *(void *)(v0 + 936);
      uint64_t v33 = *(void *)(v0 + 944);
      id v34 = sub_10050F848((void *)(v0 + 912), v32);
      *(void *)(v0 + 576) = v32;
      uint64_t v35 = *(void *)(v33 + 24);
      *(void *)(v0 + 584) = v35;
      uint64_t v36 = sub_1005767BC((uint64_t *)(v0 + 552));
      (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v32 - 8) + 16))(v36, v34, v32);
      uint64_t v37 = (uint64_t)v36;
      double v22 = (uint64_t *)(v0 + 1032);
      sub_1006C959C(v37, (uint64_t *)(v0 + 1032), v32, v35);

      _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v0 + 552);
      _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v0 + 912);
    }
    else
    {

      sub_100522F00(v0 + 592, &qword_10167E120);
    }
    uint64_t v38 = *(void *)(v28 + v29);
    uint64_t v28 = *(void *)(v0 + 1168);
    if (v38)
    {
      id v39 = *(void **)(v0 + 1104);
      if (v39)
      {
        CGRect v40 = *(void **)(v0 + 1136);
        uint64_t v41 = *(void **)(v0 + 1088);
        id v42 = v39;
        [v42 setAnchorPoint:0.0, 0.0];
        sub_10074E4B4(v41, v42, 1, v28, v40, (uint64_t *)(v0 + 832));
        uint64_t v43 = *(void *)(v0 + 856);
        uint64_t v44 = *(void *)(v0 + 864);
        uint64_t v45 = sub_10050F848((void *)(v0 + 832), v43);
        *(void *)(v0 + 896) = v43;
        uint64_t v46 = *(void *)(v44 + 24);
        *(void *)(v0 + 904) = v46;
        uint64_t v47 = sub_1005767BC((uint64_t *)(v0 + 872));
        (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v43 - 8) + 16))(v47, v45, v43);
        sub_1006C959C((uint64_t)v47, v22, v43, v46);

        _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v0 + 872);
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v0 + 832);
        uint64_t v28 = *(void *)(v0 + 1168);
      }
    }
  }
  long long v48 = *(void **)(v0 + 1112);
  if (v48)
  {
    double v49 = *(void **)(v0 + 1136);
    id v50 = *(void **)(v0 + 1088);
    id v51 = v48;
    [v51 setAnchorPoint:0.0, 0.0];
    sub_10074E4B4(v50, v51, 0, v28, v49, (uint64_t *)(v0 + 752));
    uint64_t v52 = *(void *)(v0 + 776);
    uint64_t v53 = *(void *)(v0 + 784);
    uint64_t v54 = sub_10050F848((void *)(v0 + 752), v52);
    *(void *)(v0 + 816) = v52;
    uint64_t v55 = *(void *)(v53 + 24);
    *(void *)(v0 + 824) = v55;
    id v56 = sub_1005767BC((uint64_t *)(v0 + 792));
    (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v52 - 8) + 16))(v56, v54, v52);
    sub_1006C959C((uint64_t)v56, v22, v52, v55);

    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v0 + 792);
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v0 + 752);
  }
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v58 = Strong;
    sub_10074D520(Strong, *(void *)(v0 + 1168), v0 + 672);
    if (*(void *)(v0 + 696))
    {
      sub_10053974C((long long *)(v0 + 672), v0 + 632);
      uint64_t v59 = *(void *)(v0 + 656);
      uint64_t v60 = *(void *)(v0 + 664);
      id v61 = sub_10050F848((void *)(v0 + 632), v59);
      *(void *)(v0 + 736) = v59;
      uint64_t v62 = *(void *)(v60 + 24);
      *(void *)(v0 + 744) = v62;
      uint64_t v63 = sub_1005767BC((uint64_t *)(v0 + 712));
      (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v59 - 8) + 16))(v63, v61, v59);
      sub_1006C959C((uint64_t)v63, v22, v59, v62);

      _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v0 + 712);
      _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v0 + 632);
    }
    else
    {

      sub_100522F00(v0 + 672, &qword_10167E120);
    }
  }
  *(unsigned char *)(*(void *)(v0 + 1176) + 16) = 1;
  uint64_t v64 = *(void *)(v0 + 1032);
  uint64_t v65 = *(void *)(v64 + 16);
  if (v65)
  {
    id v66 = (void *)(v64 + 32);
    swift_bridgeObjectRetain();
    do
    {
      uint64_t v67 = v66[3];
      uint64_t v68 = v66[4];
      sub_10050F848(v66, v67);
      uint64_t v69 = (*(uint64_t (**)(uint64_t, uint64_t))(v68 + 40))(v67, v68);
      sub_1006E1FC0(v69);
      v66 += 5;
      --v65;
    }
    while (v65);
    swift_bridgeObjectRelease();
  }
  double v70 = _swiftEmptyArrayStorage[2];
  if (v70 != 0.0)
  {
    uint64_t v71 = (void *)(v0 + 432);
    uint64_t v72 = (void *)(v0 + 952);
    uint64_t v73 = v0 + 16;
    uint64_t v74 = v0 + 104;
    id v75 = &_swiftEmptyArrayStorage[4];
    uint64_t v112 = v0;
    uint64_t v115 = v0 + 952;
    do
    {
      sub_1005498A4((uint64_t)v75, (uint64_t)v71);
      uint64_t v76 = *(void *)(v0 + 456);
      uint64_t v77 = *(void *)(v0 + 464);
      sub_10050F848(v71, v76);
      (*(void (**)(uint64_t, uint64_t))(v77 + 80))(v76, v77);
      if (*(void *)(v0 + 96))
      {
        long long v78 = *(_OWORD *)(v73 + 48);
        *(_OWORD *)(v74 + 32) = *(_OWORD *)(v73 + 32);
        *(_OWORD *)(v74 + 48) = v78;
        *(_OWORD *)(v74 + 64) = *(_OWORD *)(v73 + 64);
        *(void *)(v74 + 80) = *(void *)(v73 + 80);
        long long v79 = *(_OWORD *)(v73 + 16);
        *(_OWORD *)uint64_t v74 = *(_OWORD *)v73;
        *(_OWORD *)(v74 + 16) = v79;
        uint64_t v80 = *(void *)(v0 + 456);
        uint64_t v81 = *(void *)(v0 + 464);
        sub_10050F848(v71, v80);
        uint64_t v82 = (*(uint64_t (**)(uint64_t, uint64_t))(v81 + 64))(v80, v81);
        if (v82)
        {
          id v83 = (void *)v82;
          sub_100522E9C(v74, (uint64_t)v72, &qword_101672BF0);
          uint64_t v84 = *(void *)(v0 + 976);
          if (v84)
          {
            id v85 = sub_10050F848(v72, *(void *)(v0 + 976));
            uint64_t v86 = *(void *)(v84 - 8);
            uint64_t v87 = swift_task_alloc();
            (*(void (**)(uint64_t, void *, uint64_t))(v86 + 16))(v87, v85, v84);
            uint64_t v88 = _bridgeAnythingToObjectiveC<A>(_:)();
            (*(void (**)(uint64_t, uint64_t))(v86 + 8))(v87, v84);
            swift_task_dealloc();
            _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v115);
          }
          else
          {
            uint64_t v88 = 0;
          }
          swift_bridgeObjectRetain();
          NSString v89 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease();
          [v83 setValue:v88 forKeyPath:v89];

          uint64_t v0 = v112;
          swift_unknownObjectRelease();

          uint64_t v72 = (void *)v115;
        }
        sub_1005499B8(v74);
      }
      else
      {
        sub_100522F00(v73, (uint64_t *)&unk_101684000);
      }
      _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v71);
      v75 += 5;
      --*(void *)&v70;
    }
    while (v70 != 0.0);
  }
  swift_bridgeObjectRelease();
  uint64_t v90 = *(void *)(v0 + 1176);
  uint64_t v91 = *(void **)(v0 + 1168);
  uint64_t v92 = *(void **)(v0 + 1128);
  uint64_t v93 = *(void *)(v0 + 1120);
  uint64_t v94 = *(void **)(v0 + 1096);
  uint64_t v95 = *(void **)(v0 + 1080);
  uint64_t v96 = *(void *)(v0 + 1064);
  uint64_t v97 = *(void *)(v0 + 1056);
  uint64_t v105 = *(void *)(v0 + 1032);
  double v113 = *(double *)(v0 + 1040);
  id v98 = (void *)swift_allocObject();
  v98[2] = v91;
  void v98[3] = v95;
  v98[4] = v116;
  v98[5] = v117;
  v98[6] = v118;
  v98[7] = v119;
  v98[8] = v120;
  v98[9] = v121;
  v98[10] = v122;
  v98[11] = v123;
  v98[12] = v124;
  v98[13] = v125;
  v98[14] = v126;
  v98[15] = v127;
  v98[16] = v128;
  v98[17] = v129;
  v98[18] = v130;
  v98[19] = v131;
  v98[20] = v109;
  v98[21] = v108;
  v98[22] = v107;
  v98[23] = v106;
  v98[24] = v92;
  v98[25] = v94;
  v98[26] = v97;
  v98[27] = v96;
  v98[28] = v90;
  swift_retain();
  id v99 = v91;
  id v100 = v95;
  id v101 = v94;
  sub_1005173A0(v97);
  id v102 = v92;
  swift_retain();
  sub_1008573AC(0, 1, 1, (uint64_t)sub_100751224, v93, (uint64_t)sub_100751294, (uint64_t)v98, v105, v113);
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v110);
  swift_beginAccess();
  if ((*(unsigned char *)(v90 + 16) & 1) == 0 && v97) {
    (*(void (**)(void))(v0 + 1056))(0);
  }

  swift_release();
  long long v103 = *(uint64_t (**)(void))(v0 + 8);
  return v103();
}

void sub_10074D520(void *a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  id v6 = [a1 layer];
  sub_10050BF48(0, (unint64_t *)&qword_101672E50);
  if ((static NSObject.== infix(_:_:)() & 1) == 0)
  {
    if (static NSObject.== infix(_:_:)())
    {
      uint64_t v17 = *(void *)(a2 + OBJC_IVAR____TtC8Freeform40CRLBoardViewControllerAnimatedTransition_thumbnailImageView);
      int v18 = *(unsigned __int8 *)(a2 + OBJC_IVAR____TtC8Freeform40CRLBoardViewControllerAnimatedTransition_isPushing);
      uint64_t v19 = type metadata accessor for CRLBasicLayerAnimation();
      *(void *)(a3 + 24) = v19;
      *(void *)(a3 + 32) = sub_1007519F4(&qword_10167E128, (void (*)(uint64_t))type metadata accessor for CRLBasicLayerAnimation);
      uint64_t v9 = sub_1005767BC((uint64_t *)a3);
      if (!v17)
      {
        if (v18)
        {
          v82[0] = 0x3E4CCCCD00000000;
          char v83 = 6;
          uint64_t v60 = qword_10166EF88;
          id v61 = v6;
          if (v60 != -1) {
            swift_once();
          }
          uint64_t v62 = (void *)qword_10167DEF0;
        }
        else
        {
          v82[0] = 1045220557;
          char v83 = 6;
          uint64_t v73 = qword_10166EFB8;
          id v61 = v6;
          if (v73 != -1) {
            swift_once();
          }
          uint64_t v62 = (void *)qword_10167DF20;
        }
        id v12 = v62;
        UUID.init()();
        swift_unknownObjectWeakInit();
        uint64_t v74 = (char *)v9 + *(int *)(v19 + 28);
        uint64_t v75 = type metadata accessor for CRLLayerAnimationDisplayLink.Handler();
        uint64_t v76 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v75 - 8) + 56);
        v76(v74, 1, 1, v75);
        v76((char *)v9 + *(int *)(v19 + 32), 1, 1, v75);
        swift_unknownObjectWeakAssign();

        sub_100549A0C((uint64_t)v82, (uint64_t)(v9 + 3));
        long long v16 = xmmword_10118C5E0;
        goto LABEL_59;
      }
      if (!v18)
      {
        v82[0] = 1045220557;
        char v83 = 6;
        uint64_t v68 = qword_10166EF38;
        id v69 = v6;
        if (v68 != -1) {
          swift_once();
        }
        id v12 = (id)qword_10167DEA0;
        UUID.init()();
        swift_unknownObjectWeakInit();
        double v70 = (char *)v9 + *(int *)(v19 + 28);
        uint64_t v71 = type metadata accessor for CRLLayerAnimationDisplayLink.Handler();
        uint64_t v72 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v71 - 8) + 56);
        v72(v70, 1, 1, v71);
        v72((char *)v9 + *(int *)(v19 + 32), 1, 1, v71);
        swift_unknownObjectWeakAssign();

        sub_100549A0C((uint64_t)v82, (uint64_t)(v9 + 3));
        long long v16 = xmmword_10118C5D0;
        goto LABEL_59;
      }
      v82[0] = 0x3E4CCCCD00000000;
      char v83 = 6;
      uint64_t v20 = qword_10166EEF8;
      id v21 = v6;
      if (v20 != -1) {
        swift_once();
      }
      double v22 = (void *)qword_10167DE60;
      goto LABEL_31;
    }
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    if (Strong
      && (uint64_t v24 = (void *)Strong,
          sub_10050BF48(0, (unint64_t *)&qword_1016725F0),
          id v25 = a1,
          char v26 = static NSObject.== infix(_:_:)(),
          v25,
          v25,
          v24,
          (v26 & 1) != 0))
    {
      if (*(void *)(a2 + OBJC_IVAR____TtC8Freeform40CRLBoardViewControllerAnimatedTransition_thumbnailImageView))
      {
        int v27 = *(unsigned __int8 *)(a2 + OBJC_IVAR____TtC8Freeform40CRLBoardViewControllerAnimatedTransition_isPushing);
        uint64_t v28 = type metadata accessor for CRLBasicLayerAnimation();
        *(void *)(a3 + 24) = v28;
        *(void *)(a3 + 32) = sub_1007519F4(&qword_10167E128, (void (*)(uint64_t))type metadata accessor for CRLBasicLayerAnimation);
        uint64_t v9 = sub_1005767BC((uint64_t *)a3);
        if (v27 == 1)
        {
          v82[0] = 1065353216;
          char v83 = 6;
          uint64_t v29 = qword_10166EF00;
          id v30 = v6;
          if (v29 != -1) {
            swift_once();
          }
          id v12 = (id)qword_10167DE68;
          UUID.init()();
          swift_unknownObjectWeakInit();
          id v31 = (char *)v9 + *(int *)(v28 + 28);
          uint64_t v32 = type metadata accessor for CRLLayerAnimationDisplayLink.Handler();
          uint64_t v33 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56);
          v33(v31, 1, 1, v32);
          v33((char *)v9 + *(int *)(v28 + 32), 1, 1, v32);
          swift_unknownObjectWeakAssign();

          sub_100549A0C((uint64_t)v82, (uint64_t)(v9 + 3));
          long long v16 = xmmword_10118C5B0;
        }
        else
        {
          v82[0] = 0x3F80000000000000;
          char v83 = 6;
          uint64_t v77 = qword_10166EF40;
          id v78 = v6;
          if (v77 != -1) {
            swift_once();
          }
          id v12 = (id)qword_10167DEA8;
          UUID.init()();
          swift_unknownObjectWeakInit();
          long long v79 = (char *)v9 + *(int *)(v28 + 28);
          uint64_t v80 = type metadata accessor for CRLLayerAnimationDisplayLink.Handler();
          uint64_t v81 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v80 - 8) + 56);
          v81(v79, 1, 1, v80);
          v81((char *)v9 + *(int *)(v28 + 32), 1, 1, v80);
          swift_unknownObjectWeakAssign();

          sub_100549A0C((uint64_t)v82, (uint64_t)(v9 + 3));
          long long v16 = xmmword_10118C5A0;
        }
        goto LABEL_59;
      }
    }
    else
    {
      uint64_t v40 = OBJC_IVAR____TtC8Freeform40CRLBoardViewControllerAnimatedTransition_thumbnailImageView;
      uint64_t v41 = *(void **)(a2 + OBJC_IVAR____TtC8Freeform40CRLBoardViewControllerAnimatedTransition_thumbnailImageView);
      if (!v41
        || (sub_10050BF48(0, (unint64_t *)&qword_1016725F0),
            id v42 = a1,
            id v43 = v41,
            char v44 = static NSObject.== infix(_:_:)(),
            v42,
            v43,
            (v44 & 1) == 0))
      {
        _assertionFailure(_:_:file:line:flags:)();
        __break(1u);
        return;
      }
      if (*(void *)(a2 + v40)
        && *(unsigned char *)(a2 + OBJC_IVAR____TtC8Freeform40CRLBoardViewControllerAnimatedTransition_isPushing) == 1)
      {
        uint64_t v19 = type metadata accessor for CRLBasicLayerAnimation();
        *(void *)(a3 + 24) = v19;
        *(void *)(a3 + 32) = sub_1007519F4(&qword_10167E128, (void (*)(uint64_t))type metadata accessor for CRLBasicLayerAnimation);
        uint64_t v9 = sub_1005767BC((uint64_t *)a3);
        v82[0] = 1065353216;
        char v83 = 6;
        uint64_t v45 = qword_10166EF08;
        id v21 = v6;
        if (v45 != -1) {
          swift_once();
        }
        double v22 = (void *)qword_10167DE70;
LABEL_31:
        id v12 = v22;
        UUID.init()();
        swift_unknownObjectWeakInit();
        uint64_t v46 = (char *)v9 + *(int *)(v19 + 28);
        uint64_t v47 = type metadata accessor for CRLLayerAnimationDisplayLink.Handler();
        long long v48 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v47 - 8) + 56);
        v48(v46, 1, 1, v47);
        v48((char *)v9 + *(int *)(v19 + 32), 1, 1, v47);
        swift_unknownObjectWeakAssign();

        sub_100549A0C((uint64_t)v82, (uint64_t)(v9 + 3));
        long long v16 = xmmword_10118C5C0;
LABEL_59:
        *(_OWORD *)(v9 + 1) = v16;
        *uint64_t v9 = (uint64_t)v12;
        v9[36] = 0;
        *((_DWORD *)v9 + 74) = 131586;
        return;
      }
    }

    *(void *)(a3 + 32) = 0;
    *(_OWORD *)a3 = 0u;
    *(_OWORD *)(a3 + 16) = 0u;
    return;
  }
  int v7 = *(unsigned __int8 *)(a2 + OBJC_IVAR____TtC8Freeform40CRLBoardViewControllerAnimatedTransition_isPushing);
  if (!*(void *)(a2 + OBJC_IVAR____TtC8Freeform40CRLBoardViewControllerAnimatedTransition_thumbnailImageView))
  {
    uint64_t v34 = type metadata accessor for CRLBasicLayerAnimation();
    *(void *)(a3 + 24) = v34;
    *(void *)(a3 + 32) = sub_1007519F4(&qword_10167E128, (void (*)(uint64_t))type metadata accessor for CRLBasicLayerAnimation);
    uint64_t v9 = sub_1005767BC((uint64_t *)a3);
    if (v7)
    {
      v82[0] = 0x3F80000000000000;
      char v83 = 6;
      uint64_t v35 = qword_10166EF90;
      id v36 = v6;
      if (v35 != -1) {
        swift_once();
      }
      id v12 = (id)qword_10167DEF8;
      UUID.init()();
      swift_unknownObjectWeakInit();
      uint64_t v37 = (char *)v9 + *(int *)(v34 + 28);
      uint64_t v38 = type metadata accessor for CRLLayerAnimationDisplayLink.Handler();
      id v39 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 56);
      v39(v37, 1, 1, v38);
      v39((char *)v9 + *(int *)(v34 + 32), 1, 1, v38);
      swift_unknownObjectWeakAssign();

      sub_100549A0C((uint64_t)v82, (uint64_t)(v9 + 3));
      long long v16 = xmmword_10118C610;
    }
    else
    {
      v82[0] = 1065353216;
      char v83 = 6;
      uint64_t v63 = qword_10166EFC0;
      id v64 = v6;
      if (v63 != -1) {
        swift_once();
      }
      id v12 = (id)qword_10167DF28;
      UUID.init()();
      swift_unknownObjectWeakInit();
      uint64_t v65 = (char *)v9 + *(int *)(v34 + 28);
      uint64_t v66 = type metadata accessor for CRLLayerAnimationDisplayLink.Handler();
      uint64_t v67 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v66 - 8) + 56);
      v67(v65, 1, 1, v66);
      v67((char *)v9 + *(int *)(v34 + 32), 1, 1, v66);
      swift_unknownObjectWeakAssign();

      sub_100549A0C((uint64_t)v82, (uint64_t)(v9 + 3));
      long long v16 = xmmword_10118C600;
    }
    goto LABEL_59;
  }
  if (*(unsigned char *)(a2 + OBJC_IVAR____TtC8Freeform40CRLBoardViewControllerAnimatedTransition_isPushing))
  {
    uint64_t v8 = type metadata accessor for CRLBasicLayerAnimation();
    *(void *)(a3 + 24) = v8;
    *(void *)(a3 + 32) = sub_1007519F4(&qword_10167E128, (void (*)(uint64_t))type metadata accessor for CRLBasicLayerAnimation);
    uint64_t v9 = sub_1005767BC((uint64_t *)a3);
    v82[0] = 0x3F80000000000000;
    char v83 = 6;
    uint64_t v10 = qword_10166EF10;
    id v11 = v6;
    if (v10 != -1) {
      swift_once();
    }
    id v12 = (id)qword_10167DE78;
    UUID.init()();
    swift_unknownObjectWeakInit();
    uint64_t v13 = (char *)v9 + *(int *)(v8 + 28);
    uint64_t v14 = type metadata accessor for CRLLayerAnimationDisplayLink.Handler();
    uint64_t v15 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56);
    v15(v13, 1, 1, v14);
    v15((char *)v9 + *(int *)(v8 + 32), 1, 1, v14);
    swift_unknownObjectWeakAssign();

    sub_100549A0C((uint64_t)v82, (uint64_t)(v9 + 3));
    long long v16 = xmmword_10118C5F0;
    goto LABEL_59;
  }
  uint64_t v49 = type metadata accessor for CRLSpringLayerAnimation();
  *(void *)(a3 + 24) = v49;
  *(void *)(a3 + 32) = sub_1007519F4((unint64_t *)&unk_10167E130, (void (*)(uint64_t))type metadata accessor for CRLSpringLayerAnimation);
  id v50 = sub_1005767BC((uint64_t *)a3);
  v82[0] = 1065353216;
  char v83 = 6;
  uint64_t v51 = qword_10166EF58;
  id v52 = v6;
  if (v51 != -1) {
    swift_once();
  }
  uint64_t v53 = qword_10167DEC0;
  if (qword_10166EF60 != -1) {
    swift_once();
  }
  uint64_t v54 = qword_10167DEC8;
  if (qword_10166EF48 != -1) {
    swift_once();
  }
  uint64_t v55 = qword_10167DEB0;
  if (qword_10166EF50 != -1) {
    swift_once();
  }
  uint64_t v56 = qword_10167DEB8;
  UUID.init()();
  swift_unknownObjectWeakInit();
  id v57 = (char *)v50 + *(int *)(v49 + 28);
  uint64_t v58 = type metadata accessor for CRLLayerAnimationDisplayLink.Handler();
  uint64_t v59 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v58 - 8) + 56);
  v59(v57, 1, 1, v58);
  v59((char *)v50 + *(int *)(v49 + 32), 1, 1, v58);
  swift_unknownObjectWeakAssign();

  sub_100549A0C((uint64_t)v82, (uint64_t)(v50 + 5));
  v50[4] = 0;
  *id v50 = v53;
  v50[1] = v54;
  v50[2] = v55;
  v50[3] = v56;
  v50[38] = 0;
  *((_DWORD *)v50 + 78) = 131586;
}

uint64_t sub_10074E4B4@<X0>(id a1@<X1>, void *a2@<X0>, char a3@<W2>, uint64_t a4@<X3>, void *a5@<X4>, uint64_t *a6@<X8>)
{
  [a1 bounds];
  double v14 = v13;
  CGFloat v16 = v15;
  double v17 = v11;
  double v18 = v12;
  uint64_t v19 = (double *)(a4 + OBJC_IVAR____TtC8Freeform40CRLBoardViewControllerAnimatedTransition_thumbnailScreenRect);
  if (*(unsigned char *)(a4 + OBJC_IVAR____TtC8Freeform40CRLBoardViewControllerAnimatedTransition_thumbnailScreenRect + 32))
  {
    double v20 = sub_1000646A4(v11, v12, 0.75);
    CGFloat v22 = v21;
    [a5 bounds];
    double v27 = sub_100065A10(0.0, 0.0, v20, v22, v23, v24, v25, v26);
    double v29 = v28;
    double v31 = v30;
    double v33 = v32;
  }
  else
  {
    double v31 = v19[2];
    double v33 = v19[3];
    double v27 = *v19;
    double v29 = v19[1];
    if (a3)
    {
      [a2 frame];
      double v27 = sub_100065A10(0.0, 0.0, v34, v35, v27, v29, v31, v33);
      double v29 = v36;
      double v31 = v37;
      double v33 = v38;
      double v39 = sub_100067200(v37, v38, v17, v18);
      double v14 = sub_100065A10(0.0, 0.0, v39, v40, v14, v16, v17, v18);
      CGFloat v16 = v41;
      double v17 = v42;
      double v18 = v43;
    }
  }
  int v44 = *(unsigned __int8 *)(a4 + OBJC_IVAR____TtC8Freeform40CRLBoardViewControllerAnimatedTransition_isPushing);
  if (*(unsigned char *)(a4 + OBJC_IVAR____TtC8Freeform40CRLBoardViewControllerAnimatedTransition_isPushing)) {
    CGFloat v45 = v14;
  }
  else {
    CGFloat v45 = v27;
  }
  if (*(unsigned char *)(a4 + OBJC_IVAR____TtC8Freeform40CRLBoardViewControllerAnimatedTransition_isPushing)) {
    CGFloat v46 = v16;
  }
  else {
    CGFloat v46 = v29;
  }
  if (*(unsigned char *)(a4 + OBJC_IVAR____TtC8Freeform40CRLBoardViewControllerAnimatedTransition_isPushing)) {
    double v47 = v17;
  }
  else {
    double v47 = v31;
  }
  if (*(unsigned char *)(a4 + OBJC_IVAR____TtC8Freeform40CRLBoardViewControllerAnimatedTransition_isPushing)) {
    double v48 = v18;
  }
  else {
    double v48 = v33;
  }
  if (*(unsigned char *)(a4 + OBJC_IVAR____TtC8Freeform40CRLBoardViewControllerAnimatedTransition_isPushing)) {
    CGFloat v49 = v27;
  }
  else {
    CGFloat v49 = v14;
  }
  if (*(unsigned char *)(a4 + OBJC_IVAR____TtC8Freeform40CRLBoardViewControllerAnimatedTransition_isPushing)) {
    CGFloat v50 = v29;
  }
  else {
    CGFloat v50 = v16;
  }
  if (*(unsigned char *)(a4 + OBJC_IVAR____TtC8Freeform40CRLBoardViewControllerAnimatedTransition_isPushing)) {
    double v51 = v31;
  }
  else {
    double v51 = v17;
  }
  if (*(unsigned char *)(a4 + OBJC_IVAR____TtC8Freeform40CRLBoardViewControllerAnimatedTransition_isPushing)) {
    double v52 = v33;
  }
  else {
    double v52 = v18;
  }
  sub_100751484(a2, 0, (uint64_t)&v115, v49, v50, v51, v52, v45, v46, v47, v48);
  uint64_t v54 = v115;
  uint64_t v53 = v116;
  uint64_t v56 = v117;
  uint64_t v55 = v118;
  uint64_t v58 = v119;
  uint64_t v57 = v120;
  uint64_t v60 = v121;
  uint64_t v59 = v122;
  uint64_t v90 = v123;
  uint64_t v91 = v124;
  uint64_t v92 = v125;
  uint64_t v93 = v126;
  uint64_t v94 = v127;
  uint64_t v95 = v128;
  uint64_t v96 = v129;
  uint64_t v97 = v130;
  uint64_t v98 = v131;
  uint64_t v99 = v132;
  uint64_t v100 = v133;
  uint64_t v101 = v134;
  uint64_t v102 = v135;
  uint64_t v103 = v136;
  uint64_t v104 = v137;
  uint64_t v105 = v138;
  uint64_t v106 = v139;
  uint64_t v107 = v140;
  uint64_t v108 = v141;
  uint64_t v109 = v142;
  uint64_t v110 = v143;
  uint64_t v111 = v144;
  uint64_t v112 = v145;
  uint64_t v113 = v146;
  if (!*(void *)(a4 + OBJC_IVAR____TtC8Freeform40CRLBoardViewControllerAnimatedTransition_thumbnailImageView))
  {
    if (!v44)
    {
      uint64_t v82 = type metadata accessor for CRLBasicLayerAnimation();
      a6[3] = v82;
      a6[4] = sub_1007519F4(&qword_10167E128, (void (*)(uint64_t))type metadata accessor for CRLBasicLayerAnimation);
      char v83 = sub_1005767BC(a6);
      uint64_t v115 = v54;
      uint64_t v116 = v53;
      uint64_t v117 = v56;
      uint64_t v118 = v55;
      uint64_t v119 = v58;
      uint64_t v120 = v57;
      uint64_t v121 = v60;
      uint64_t v122 = v59;
      uint64_t v123 = v90;
      uint64_t v124 = v91;
      uint64_t v125 = v92;
      uint64_t v126 = v93;
      uint64_t v127 = v94;
      uint64_t v128 = v95;
      uint64_t v129 = v96;
      uint64_t v130 = v97;
      uint64_t v131 = v98;
      uint64_t v132 = v99;
      uint64_t v133 = v100;
      uint64_t v134 = v101;
      uint64_t v135 = v102;
      uint64_t v136 = v103;
      uint64_t v137 = v104;
      uint64_t v138 = v105;
      uint64_t v139 = v106;
      uint64_t v140 = v107;
      uint64_t v141 = v108;
      uint64_t v142 = v109;
      uint64_t v143 = v110;
      uint64_t v144 = v111;
      uint64_t v145 = v112;
      uint64_t v146 = v113;
      char v147 = 52;
      sub_1006006C8((uint64_t)&v115, (uint64_t)v114);
      uint64_t v84 = qword_10166EFC8;
      id v85 = a2;
      if (v84 != -1) {
        swift_once();
      }
      id v86 = (id)qword_10167DF30;
      UUID.init()();
      swift_unknownObjectWeakInit();
      uint64_t v87 = (char *)v83 + *(int *)(v82 + 28);
      uint64_t v88 = type metadata accessor for CRLLayerAnimationDisplayLink.Handler();
      NSString v89 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v88 - 8) + 56);
      v89(v87, 1, 1, v88);
      v89((char *)v83 + *(int *)(v82 + 32), 1, 1, v88);
      swift_unknownObjectWeakAssign();

      sub_100549A0C((uint64_t)v114, (uint64_t)(v83 + 3));
      *(_OWORD *)(v83 + 1) = xmmword_10118C620;
      *char v83 = (uint64_t)v86;
      v83[36] = 0;
      *((_DWORD *)v83 + 74) = 131586;
      return sub_10054BD5C((uint64_t)&v115);
    }
    uint64_t v61 = type metadata accessor for CRLSpringLayerAnimation();
    a6[3] = v61;
    a6[4] = sub_1007519F4((unint64_t *)&unk_10167E130, (void (*)(uint64_t))type metadata accessor for CRLSpringLayerAnimation);
    uint64_t v62 = sub_1005767BC(a6);
    uint64_t v115 = v54;
    uint64_t v116 = v53;
    uint64_t v117 = v56;
    uint64_t v118 = v55;
    uint64_t v119 = v58;
    uint64_t v120 = v57;
    uint64_t v121 = v60;
    uint64_t v122 = v59;
    uint64_t v123 = v90;
    uint64_t v124 = v91;
    uint64_t v125 = v92;
    uint64_t v126 = v93;
    uint64_t v127 = v94;
    uint64_t v128 = v95;
    uint64_t v129 = v96;
    uint64_t v130 = v97;
    uint64_t v131 = v98;
    uint64_t v132 = v99;
    uint64_t v133 = v100;
    uint64_t v134 = v101;
    uint64_t v135 = v102;
    uint64_t v136 = v103;
    uint64_t v137 = v104;
    uint64_t v138 = v105;
    uint64_t v139 = v106;
    uint64_t v140 = v107;
    uint64_t v141 = v108;
    uint64_t v142 = v109;
    uint64_t v143 = v110;
    uint64_t v144 = v111;
    uint64_t v145 = v112;
    uint64_t v146 = v113;
    char v147 = 52;
    sub_1006006C8((uint64_t)&v115, (uint64_t)v114);
    uint64_t v72 = qword_10166EFA8;
    id v73 = a2;
    if (v72 != -1) {
      swift_once();
    }
    uint64_t v74 = qword_10167DF10;
    if (qword_10166EFB0 != -1) {
      swift_once();
    }
    uint64_t v75 = qword_10167DF18;
    if (qword_10166EF98 != -1) {
      swift_once();
    }
    uint64_t v76 = qword_10167DF00;
    if (qword_10166EFA0 != -1) {
      swift_once();
    }
    uint64_t v77 = qword_10167DF08;
LABEL_59:
    UUID.init()();
    swift_unknownObjectWeakInit();
    long long v79 = (char *)v62 + *(int *)(v61 + 28);
    uint64_t v80 = type metadata accessor for CRLLayerAnimationDisplayLink.Handler();
    uint64_t v81 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v80 - 8) + 56);
    v81(v79, 1, 1, v80);
    v81((char *)v62 + *(int *)(v61 + 32), 1, 1, v80);
    swift_unknownObjectWeakAssign();

    sub_100549A0C((uint64_t)v114, (uint64_t)(v62 + 5));
    v62[4] = 0;
    uint64_t *v62 = v74;
    v62[1] = v75;
    v62[2] = v76;
    v62[3] = v77;
    v62[38] = 0;
    *((_DWORD *)v62 + 78) = 131586;
    return sub_10054BD5C((uint64_t)&v115);
  }
  uint64_t v61 = type metadata accessor for CRLSpringLayerAnimation();
  a6[3] = v61;
  a6[4] = sub_1007519F4((unint64_t *)&unk_10167E130, (void (*)(uint64_t))type metadata accessor for CRLSpringLayerAnimation);
  uint64_t v62 = sub_1005767BC(a6);
  if (!v44)
  {
    uint64_t v115 = v54;
    uint64_t v116 = v53;
    uint64_t v117 = v56;
    uint64_t v118 = v55;
    uint64_t v119 = v58;
    uint64_t v120 = v57;
    uint64_t v121 = v60;
    uint64_t v122 = v59;
    uint64_t v123 = v90;
    uint64_t v124 = v91;
    uint64_t v125 = v92;
    uint64_t v126 = v93;
    uint64_t v127 = v94;
    uint64_t v128 = v95;
    uint64_t v129 = v96;
    uint64_t v130 = v97;
    uint64_t v131 = v98;
    uint64_t v132 = v99;
    uint64_t v133 = v100;
    uint64_t v134 = v101;
    uint64_t v135 = v102;
    uint64_t v136 = v103;
    uint64_t v137 = v104;
    uint64_t v138 = v105;
    uint64_t v139 = v106;
    uint64_t v140 = v107;
    uint64_t v141 = v108;
    uint64_t v142 = v109;
    uint64_t v143 = v110;
    uint64_t v144 = v111;
    uint64_t v145 = v112;
    uint64_t v146 = v113;
    char v147 = 52;
    sub_1006006C8((uint64_t)&v115, (uint64_t)v114);
    uint64_t v78 = qword_10166EF78;
    id v73 = a2;
    if (v78 != -1) {
      swift_once();
    }
    uint64_t v74 = qword_10167DEE0;
    if (qword_10166EF80 != -1) {
      swift_once();
    }
    uint64_t v75 = qword_10167DEE8;
    if (qword_10166EF68 != -1) {
      swift_once();
    }
    uint64_t v76 = qword_10167DED0;
    if (qword_10166EF70 != -1) {
      swift_once();
    }
    uint64_t v77 = qword_10167DED8;
    goto LABEL_59;
  }
  uint64_t v115 = v54;
  uint64_t v116 = v53;
  uint64_t v117 = v56;
  uint64_t v118 = v55;
  uint64_t v119 = v58;
  uint64_t v120 = v57;
  uint64_t v121 = v60;
  uint64_t v122 = v59;
  uint64_t v123 = v90;
  uint64_t v124 = v91;
  uint64_t v125 = v92;
  uint64_t v126 = v93;
  uint64_t v127 = v94;
  uint64_t v128 = v95;
  uint64_t v129 = v96;
  uint64_t v130 = v97;
  uint64_t v131 = v98;
  uint64_t v132 = v99;
  uint64_t v133 = v100;
  uint64_t v134 = v101;
  uint64_t v135 = v102;
  uint64_t v136 = v103;
  uint64_t v137 = v104;
  uint64_t v138 = v105;
  uint64_t v139 = v106;
  uint64_t v140 = v107;
  uint64_t v141 = v108;
  uint64_t v142 = v109;
  uint64_t v143 = v110;
  uint64_t v144 = v111;
  uint64_t v145 = v112;
  uint64_t v146 = v113;
  char v147 = 52;
  if (qword_10166EF28 != -1) {
    swift_once();
  }
  uint64_t v63 = qword_10167DE90;
  if (qword_10166EF30 != -1) {
    swift_once();
  }
  uint64_t v64 = qword_10167DE98;
  if (qword_10166EF18 != -1) {
    swift_once();
  }
  uint64_t v65 = qword_10167DE80;
  if (qword_10166EF20 != -1) {
    swift_once();
  }
  uint64_t v66 = qword_10167DE88;
  id v67 = a2;
  UUID.init()();
  swift_unknownObjectWeakInit();
  uint64_t v68 = (char *)v62 + *(int *)(v61 + 28);
  uint64_t v69 = type metadata accessor for CRLLayerAnimationDisplayLink.Handler();
  double v70 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v69 - 8) + 56);
  v70(v68, 1, 1, v69);
  v70((char *)v62 + *(int *)(v61 + 32), 1, 1, v69);
  swift_unknownObjectWeakAssign();

  uint64_t result = sub_100549A0C((uint64_t)&v115, (uint64_t)(v62 + 5));
  v62[4] = 0;
  uint64_t *v62 = v63;
  v62[1] = v64;
  v62[2] = v65;
  v62[3] = v66;
  v62[38] = 0;
  *((_DWORD *)v62 + 78) = 131586;
  return result;
}

uint64_t sub_10074F160(uint64_t a1)
{
  swift_beginAccess();
  unint64_t v2 = *(void *)(a1 + 16);
  if (!(v2 >> 62))
  {
    uint64_t v3 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain_n();
    if (v3) {
      goto LABEL_3;
    }
    return swift_bridgeObjectRelease_n();
  }
  swift_bridgeObjectRetain_n();
  uint64_t result = _CocoaArrayWrapper.endIndex.getter();
  uint64_t v3 = result;
  if (!result) {
    return swift_bridgeObjectRelease_n();
  }
LABEL_3:
  if (v3 >= 1)
  {
    for (uint64_t i = 0; i != v3; ++i)
    {
      if ((v2 & 0xC000000000000001) != 0) {
        id v6 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v6 = *(id *)(v2 + 8 * i + 32);
      }
      int v7 = v6;
      [v6 setHidden:0];
    }
    return swift_bridgeObjectRelease_n();
  }
  __break(1u);
  return result;
}

id sub_10074F260(uint64_t a1, id a2, _OWORD *a3, void *a4, void *a5, uint64_t (*a6)(void), double a7, double a8, double a9, double a10, uint64_t a11, uint64_t a12)
{
  long long v22 = a3[1];
  v28[0] = *a3;
  v28[1] = v22;
  long long v23 = a3[3];
  void v28[2] = a3[2];
  _OWORD v28[3] = v23;
  long long v24 = a3[5];
  v28[4] = a3[4];
  v28[5] = v24;
  long long v25 = a3[7];
  v28[6] = a3[6];
  v28[7] = v25;
  [a2 setTransform:v28];
  [a2 setAnchorPoint:a7, a8];
  [a2 frame];
  [a2 setFrame:a9, a10];
  CGFloat v26 = *(void **)(a1 + OBJC_IVAR____TtC8Freeform40CRLBoardViewControllerAnimatedTransition_thumbnailImageView);
  if (v26) {
    [v26 removeFromSuperview];
  }
  if (a4) {
    [a4 removeFromSuperview];
  }
  id result = [a5 removeFromSuperview];
  if (a6)
  {
    swift_beginAccess();
    return (id)a6(*(unsigned __int8 *)(a12 + 16));
  }
  return result;
}

uint64_t sub_10074F3AC()
{
  v1[20] = v0;
  v1[21] = type metadata accessor for CRLBoardPreviewImageCache.Item(0);
  v1[22] = swift_task_alloc();
  type metadata accessor for CRLBoardIdentifier(0);
  v1[23] = swift_task_alloc();
  sub_1005057FC((uint64_t *)&unk_101676310);
  v1[24] = swift_task_alloc();
  uint64_t v2 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  v1[25] = v2;
  v1[26] = *(void *)(v2 - 8);
  v1[27] = swift_task_alloc();
  v1[28] = swift_task_alloc();
  type metadata accessor for MainActor();
  v1[29] = static MainActor.shared.getter();
  uint64_t v4 = dispatch thunk of Actor.unownedExecutor.getter();
  v1[30] = v4;
  v1[31] = v3;
  return _swift_task_switch(sub_10074F53C, v4, v3);
}

uint64_t sub_10074F53C()
{
  uint64_t v1 = v0[20];
  uint64_t v2 = v1 + OBJC_IVAR____TtC8Freeform40CRLBoardViewControllerAnimatedTransition_thumbnailScreenRect;
  if ((*(unsigned char *)(v1 + OBJC_IVAR____TtC8Freeform40CRLBoardViewControllerAnimatedTransition_thumbnailScreenRect + 32) & 1) != 0
    || (v0[32] = *(void *)(v2 + 24),
        v0[33] = *(void *)(v2 + 16),
        uint64_t v3 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform40CRLBoardViewControllerAnimatedTransition_thumbnailImageView),
        (v0[34] = v3) == 0))
  {
    swift_release();
    goto LABEL_6;
  }
  uint64_t v4 = v0[25];
  uint64_t v5 = v0[26];
  uint64_t v6 = v0[24];
  sub_100522E9C(v1 + OBJC_IVAR____TtC8Freeform40CRLBoardViewControllerAnimatedTransition_folderItemViewModel, v6, (uint64_t *)&unk_101676310);
  int v7 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v6, 1, v4);
  uint64_t v8 = v0[24];
  if (v7 == 1)
  {
    swift_release();
    sub_100522F00(v8, (uint64_t *)&unk_101676310);
LABEL_6:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v9 = (uint64_t (*)(void))v0[1];
    return v9();
  }
  uint64_t v11 = v0[20];
  sub_100750EC0(v0[24], v0[28], type metadata accessor for CRLBoardLibraryViewModel.Item);
  double v12 = *(void **)(v11 + OBJC_IVAR____TtC8Freeform40CRLBoardViewControllerAnimatedTransition_boardPreviewImageCache);
  v0[35] = v12;
  if (!v12)
  {
    uint64_t v23 = v0[28];
    id v24 = v3;
    sub_100750F90(v23, type metadata accessor for CRLBoardLibraryViewModel.Item);
    swift_release();

    goto LABEL_6;
  }
  sub_100750F28(v0[28], v0[27], type metadata accessor for CRLBoardLibraryViewModel.Item);
  if (swift_getEnumCaseMultiPayload() != 2)
  {
    uint64_t v25 = v0[28];
    uint64_t v26 = v0[27];
    id v27 = v3;
    id v28 = v12;
    sub_100750F90(v25, type metadata accessor for CRLBoardLibraryViewModel.Item);
    swift_release();

    sub_100750F90(v26, type metadata accessor for CRLBoardLibraryViewModel.Item);
    goto LABEL_6;
  }
  uint64_t v13 = v0[27];
  uint64_t v15 = v0[22];
  uint64_t v14 = v0[23];
  uint64_t v16 = v0[20];
  sub_1005057FC(&qword_101677100);
  id v17 = v3;
  v12;
  swift_bridgeObjectRelease();
  sub_100750EC0(v13, v14, type metadata accessor for CRLBoardIdentifier);
  [self crl_screenScale];
  double v19 = v18;
  sub_100750F28(v14, v15, type metadata accessor for CRLBoardIdentifier);
  swift_storeEnumTagMultiPayload();
  if (*(unsigned char *)(v16 + OBJC_IVAR____TtC8Freeform40CRLBoardViewControllerAnimatedTransition_isGridLayout)) {
    uint64_t v20 = 2;
  }
  else {
    uint64_t v20 = 0;
  }
  double v21 = (void *)swift_task_alloc();
  v0[36] = v21;
  *double v21 = v0;
  v21[1] = sub_10074F8CC;
  uint64_t v22 = v0[22];
  return sub_100619494(v22, v20, 0, 1, v19);
}

uint64_t sub_10074F8CC(uint64_t a1)
{
  uint64_t v4 = *(void **)v2;
  uint64_t v5 = *(void *)(*(void *)v2 + 176);
  *(void *)(*(void *)v2 + 296) = v1;
  swift_task_dealloc();
  sub_100750F90(v5, type metadata accessor for CRLBoardPreviewImageCache.Item);
  if (v1)
  {
    uint64_t v6 = v4[30];
    uint64_t v7 = v4[31];
    uint64_t v8 = sub_10074FD08;
  }
  else
  {
    v4[38] = a1;
    uint64_t v6 = v4[30];
    uint64_t v7 = v4[31];
    uint64_t v8 = sub_10074FA2C;
  }
  return _swift_task_switch(v8, v6, v7);
}

uint64_t sub_10074FA2C()
{
  uint64_t v1 = (void *)*((void *)v0 + 38);
  swift_release();
  if (v1)
  {
    uint64_t v2 = (char *)*((void *)v0 + 34);
    double v4 = v0[32];
    double v3 = v0[33];
    id v5 = v1;
    id v6 = [v5 UIImage];
    uint64_t v7 = *(void **)&v2[OBJC_IVAR____TtC8FreeformP33_22C834EA6031CC5FD96573982091823D21EncapsulatedImageView_imageView];
    [v7 setImage:v6];
    [v2 bounds];
    [v7 setFrame:];

    [v5 size];
    double v9 = v8;
    double v11 = v10;

    double v12 = sub_100067200(v9, v11, v3, v4);
    double v14 = v13;
  }
  else
  {
    double v14 = v0[32];
    double v12 = v0[33];
  }
  uint64_t v15 = (void *)*((void *)v0 + 34);
  uint64_t v16 = (void *)*((void *)v0 + 35);
  id v17 = self;
  sub_1005057FC((uint64_t *)&unk_101676C10);
  uint64_t v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_10117DF50;
  id v19 = [v15 widthAnchor];
  id v20 = [v19 constraintEqualToConstant:v12];

  *(void *)(v18 + 32) = v20;
  id v21 = [v15 heightAnchor];
  id v22 = [v21 constraintEqualToConstant:v14];

  *(void *)(v18 + 40) = v22;
  specialized Array._endMutation()();
  sub_10050BF48(0, (unint64_t *)&qword_101674200);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v17 activateConstraints:isa, v18];

  [v15 layoutIfNeeded];
  uint64_t v24 = *((void *)v0 + 28);
  sub_100750F90(*((void *)v0 + 23), type metadata accessor for CRLBoardIdentifier);
  sub_100750F90(v24, type metadata accessor for CRLBoardLibraryViewModel.Item);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v25 = (uint64_t (*)(void))*((void *)v0 + 1);
  return v25();
}

uint64_t sub_10074FD08()
{
  swift_release();
  if (qword_10166F9C8 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[37];
  uint64_t v2 = (void *)v0[35];
  uint64_t v16 = (void *)v0[34];
  swift_beginAccess();
  double v3 = (void *)static OS_os_log.crlDefault;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117D8C0;
  id v5 = v3;
  uint64_t v6 = sub_100DD71D4();
  uint64_t v8 = v7;
  *(void *)(inited + 56) = &type metadata for String;
  unint64_t v9 = sub_100528BE4();
  *(void *)(inited + 64) = v9;
  *(void *)(inited + 32) = v6;
  *(void *)(inited + 40) = v8;
  v0[19] = v1;
  swift_errorRetain();
  sub_1005057FC(&qword_101672BD0);
  uint64_t v10 = String.init<A>(describing:)();
  *(void *)(inited + 96) = &type metadata for String;
  *(void *)(inited + 104) = v9;
  *(void *)(inited + 72) = v10;
  *(void *)(inited + 80) = v11;
  uint64_t v12 = static os_log_type_t.error.getter();
  sub_100BAC898((uint64_t)v5, (uint64_t)&_mh_execute_header, v12, (uint64_t)"Transition animation could not resolve thumbnail for board %@ (error: %@)", 73, 2, inited);

  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  swift_errorRelease();
  uint64_t v13 = v0[28];
  sub_100750F90(v0[23], type metadata accessor for CRLBoardIdentifier);
  sub_100750F90(v13, type metadata accessor for CRLBoardLibraryViewModel.Item);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  double v14 = (uint64_t (*)(void))v0[1];
  return v14();
}

id sub_10074FF7C()
{
  return sub_100750418(type metadata accessor for CRLBoardViewControllerAnimatedTransition);
}

uint64_t sub_100750018()
{
  return type metadata accessor for CRLBoardViewControllerAnimatedTransition(0);
}

uint64_t type metadata accessor for CRLBoardViewControllerAnimatedTransition(uint64_t a1)
{
  return sub_100512D5C(a1, (uint64_t *)&unk_10167DFC0);
}

void sub_100750040()
{
  sub_10057351C();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_100750108(void *a1)
{
  id v3 = [a1 viewControllerForKey:UITransitionContextFromViewControllerKey];
  if (!v3)
  {
LABEL_8:
    uint64_t v10 = [a1 transitionWasCancelled] ^ 1;
    [a1 completeTransition:v10];
    return;
  }
  double v4 = v3;
  id v5 = [a1 viewControllerForKey:UITransitionContextToViewControllerKey];
  if (!v5)
  {
LABEL_7:

    goto LABEL_8;
  }
  uint64_t v6 = v5;
  if ((*(unsigned char *)(v1 + OBJC_IVAR____TtC8Freeform40CRLBoardViewControllerAnimatedTransition_isPushing) & 1) == 0)
  {
    id v11 = [v4 view];
    if (v11)
    {
      uint64_t v8 = v11;
      id v9 = [v6 view];
      if (v9) {
        goto LABEL_13;
      }
LABEL_18:
      __break(1u);
      return;
    }
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  id v7 = [v5 view];
  if (!v7)
  {
    __break(1u);
    goto LABEL_17;
  }
  uint64_t v8 = v7;
  id v9 = [v4 view];
  if (!v9)
  {
    __break(1u);
    goto LABEL_7;
  }
LABEL_13:
  id v14 = v9;
  [v9 bounds];
  [v8 setFrame:];
  id v12 = [a1 containerView];
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = a1;
  swift_unknownObjectRetain();
  sub_10074BDE0(v12, v8, (uint64_t)sub_100750E64, v13);

  swift_release();
}

id sub_100750400()
{
  return sub_100750418(type metadata accessor for CRLiOSBoardViewControllerAnimatedTransition);
}

id sub_100750418(uint64_t (*a1)(void))
{
  v3.receiver = v1;
  v3.super_class = (Class)a1(0);
  return [super dealloc];
}

uint64_t sub_100750458()
{
  return type metadata accessor for CRLiOSBoardViewControllerAnimatedTransition(0);
}

uint64_t type metadata accessor for CRLiOSBoardViewControllerAnimatedTransition(uint64_t a1)
{
  return sub_100512D5C(a1, (uint64_t *)&unk_10167E008);
}

uint64_t sub_100750480()
{
  return swift_updateClassMetadata2();
}

char *sub_1007504B8(double a1, double a2, double a3, double a4)
{
  id v9 = objc_allocWithZone((Class)type metadata accessor for EncapsulatedImageView.NoIntrinsicContentSizeImageView());
  uint64_t v10 = v4;
  id v11 = [v9 initWithFrame:0.0, 0.0, 0.0, 0.0];
  *(void *)&v10[OBJC_IVAR____TtC8FreeformP33_22C834EA6031CC5FD96573982091823D21EncapsulatedImageView_imageView] = v11;
  [v11 setTranslatesAutoresizingMaskIntoConstraints:0];
  [v11 setContentMode:1];
  id v12 = [v11 layer];

  if (qword_10166ED90 != -1) {
    swift_once();
  }
  id v13 = [(id)qword_10171A168 CGColor];
  [v12 setBackgroundColor:v13];

  [v12 setMasksToBounds:1];
  v20.receiver = v10;
  v20.super_class = (Class)type metadata accessor for EncapsulatedImageView();
  id v14 = [super initWithFrame:a1, a2, a3, a4];
  [v14 setTranslatesAutoresizingMaskIntoConstraints:0];
  [v14 setUserInteractionEnabled:0];
  id v15 = [v14 layer];
  [v15 setMasksToBounds:0];

  id v16 = [v14 layer];
  id v17 = [self clearColor];
  id v18 = [v17 CGColor];

  [v16 setBackgroundColor:v18];
  [v14 addSubview:*(void *)&v14[OBJC_IVAR____TtC8FreeformP33_22C834EA6031CC5FD96573982091823D21EncapsulatedImageView_imageView]];

  return v14;
}

id sub_100750994()
{
  return sub_100750418((uint64_t (*)(void))type metadata accessor for EncapsulatedImageView.NoIntrinsicContentSizeImageView);
}

id sub_1007509AC()
{
  return sub_100750418((uint64_t (*)(void))type metadata accessor for EncapsulatedImageView);
}

uint64_t type metadata accessor for EncapsulatedImageView()
{
  return self;
}

uint64_t type metadata accessor for EncapsulatedImageView.NoIntrinsicContentSizeImageView()
{
  return self;
}

char *sub_100750A1C(void *a1, double a2, double a3, double a4, double a5)
{
  *(void *)&v5[OBJC_IVAR____TtC8FreeformP33_22C834EA6031CC5FD96573982091823D21EncapsulatedColorView_color] = a1;
  id v11 = objc_allocWithZone((Class)UIView);
  id v12 = v5;
  id v13 = a1;
  id v14 = [v11 initWithFrame:0.0, 0.0, a4, a5];
  *(void *)&v12[OBJC_IVAR____TtC8FreeformP33_22C834EA6031CC5FD96573982091823D21EncapsulatedColorView_colorView] = v14;

  v26.receiver = v12;
  v26.super_class = (Class)type metadata accessor for EncapsulatedColorView();
  id v15 = [super initWithFrame:a2, a3, a4, a5];
  uint64_t v16 = OBJC_IVAR____TtC8FreeformP33_22C834EA6031CC5FD96573982091823D21EncapsulatedColorView_colorView;
  id v17 = *(void **)&v15[OBJC_IVAR____TtC8FreeformP33_22C834EA6031CC5FD96573982091823D21EncapsulatedColorView_colorView];
  id v18 = v15;
  [v17 setTranslatesAutoresizingMaskIntoConstraints:0];
  id result = (char *)[v17 layer];
  if (result)
  {
    objc_super v20 = result;
    id v21 = [*(id *)&v18[OBJC_IVAR____TtC8FreeformP33_22C834EA6031CC5FD96573982091823D21EncapsulatedColorView_color] CGColor];
    [v20 setBackgroundColor:v21];

    [v18 setUserInteractionEnabled:0];
    [v18 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v22 = [v18 layer];
    [v22 setMasksToBounds:0];

    uint64_t v23 = *(void **)&v15[v16];
    uint64_t v24 = v18;
    id v25 = v23;
    [v24 addSubview:v25];

    return v24;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_100750DA4()
{
  return sub_100750418((uint64_t (*)(void))type metadata accessor for EncapsulatedColorView);
}

uint64_t type metadata accessor for EncapsulatedColorView()
{
  return self;
}

uint64_t sub_100750E2C()
{
  swift_unknownObjectRelease();

  return _swift_deallocObject(v0, 24, 7);
}

id sub_100750E64(char a1)
{
  uint64_t v2 = *(void **)(v1 + 16);
  if (a1) {
    uint64_t v3 = [*(id *)(v1 + 16) transitionWasCancelled] ^ 1;
  }
  else {
    uint64_t v3 = 0;
  }

  return [v2 completeTransition:v3];
}

uint64_t sub_100750EC0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_100750F28(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_100750F90(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_100750FF0()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100751028()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100751060()
{
  swift_unknownObjectRelease();
  swift_release();
  if (*(void *)(v0 + 40)) {
    swift_release();
  }

  swift_release();

  return _swift_deallocObject(v0, 128, 7);
}

uint64_t sub_1007510F8(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  uint64_t v9 = v1[7];
  uint64_t v10 = v1[8];
  id v11 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v11;
  *id v11 = v2;
  v11[1] = sub_100528488;
  return sub_10074C65C(a1, v4, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_100751214()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100751224()
{
  return sub_10074F160(v0);
}

uint64_t sub_10075122C()
{
  if (*(void *)(v0 + 208)) {
    swift_release();
  }
  swift_release();

  return _swift_deallocObject(v0, 232, 7);
}

id sub_100751294()
{
  return sub_10074F260(*(void *)(v0 + 16), *(id *)(v0 + 24), (_OWORD *)(v0 + 32), *(void **)(v0 + 192), *(void **)(v0 + 200), *(uint64_t (**)(void))(v0 + 208), *(double *)(v0 + 160), *(double *)(v0 + 168), *(double *)(v0 + 176), *(double *)(v0 + 184), *(void *)(v0 + 216), *(void *)(v0 + 224));
}

id sub_1007512B4(char a1, unsigned __int8 a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  int v11 = a2;
  swift_unknownObjectWeakInit();
  uint64_t v12 = OBJC_IVAR____TtC8Freeform40CRLBoardViewControllerAnimatedTransition_thumbnailImageView;
  *(void *)&v6[OBJC_IVAR____TtC8Freeform40CRLBoardViewControllerAnimatedTransition_thumbnailImageView] = 0;
  uint64_t v13 = (double *)&v6[OBJC_IVAR____TtC8Freeform40CRLBoardViewControllerAnimatedTransition_animationGroup];
  id v14 = v6;
  double v15 = sub_1006C9744((uint64_t)_swiftEmptyArrayStorage, 0.0);
  *(void *)uint64_t v13 = v16;
  v13[1] = v15;
  v14[OBJC_IVAR____TtC8Freeform40CRLBoardViewControllerAnimatedTransition_didCallPerformTransitionAnimation] = 0;
  v14[OBJC_IVAR____TtC8Freeform40CRLBoardViewControllerAnimatedTransition_isPushing] = a1;
  v14[OBJC_IVAR____TtC8Freeform40CRLBoardViewControllerAnimatedTransition_isGridLayout] = (v11 == 2) | a2 & 1;
  sub_1005FCB30(a3, (uint64_t)&v14[OBJC_IVAR____TtC8Freeform40CRLBoardViewControllerAnimatedTransition_thumbnailScreenRect]);
  swift_unknownObjectWeakAssign();
  sub_100522E9C(a5, (uint64_t)&v14[OBJC_IVAR____TtC8Freeform40CRLBoardViewControllerAnimatedTransition_folderItemViewModel], (uint64_t *)&unk_101676310);
  *(void *)&v14[OBJC_IVAR____TtC8Freeform40CRLBoardViewControllerAnimatedTransition_boardPreviewImageCache] = a6;
  sub_1005FCB30(a3, (uint64_t)v26);
  if (v26[32])
  {
    id v17 = a6;
    id v18 = 0;
  }
  else
  {
    id v19 = objc_allocWithZone((Class)type metadata accessor for EncapsulatedImageView());
    id v20 = a6;
    id v18 = [v19 initWithFrame:0.0, 0.0, 0.0, 0.0];
  }
  id v21 = *(void **)&v6[v12];
  *(void *)&v6[v12] = v18;

  v14[OBJC_IVAR____TtC8Freeform40CRLBoardViewControllerAnimatedTransition_usesSublayerTransform] = 0;
  v25.receiver = v14;
  v25.super_class = (Class)type metadata accessor for CRLBoardViewControllerAnimatedTransition(0);
  [super init];
  sub_100522F00(a5, (uint64_t *)&unk_101676310);
  return v22;
}

__n128 sub_100751484@<Q0>(void *a1@<X0>, char a2@<W1>, uint64_t a3@<X8>, CGFloat a4@<D0>, CGFloat a5@<D1>, double a6@<D2>, double a7@<D3>, CGFloat a8@<D4>, CGFloat a9@<D5>, double a10@<D6>, double a11@<D7>)
{
  [a1 frame];
  CGFloat v15 = v14;
  CGFloat v17 = v16;
  double v19 = v18;
  double v21 = v20;
  [a1 anchorPoint];
  double v23 = v22;
  double v25 = v24;
  v89.origin.CGFloat x = v15;
  v89.origin.CGFloat y = v17;
  v89.size.CGFloat width = v19;
  v89.size.CGFloat height = v21;
  if (CGRectGetWidth(v89) <= 0.0
    || (v90.origin.CGFloat x = v15, v90.origin.y = v17, v90.size.width = v19, v90.size.height = v21, CGRectGetHeight(v90) <= 0.0))
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"transforms(for:from:to:usesSublayerTransform:)", 46, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/CRLBoardViewControllerAnimatedTransition.swift", 116, 2, 233, (uint64_t)"The layer's rect must have a size greater than 0.", 49, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"transforms(for:from:to:usesSublayerTransform:)", 46, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/CRLBoardViewControllerAnimatedTransition.swift", 116, 2, 233);
  }
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t v26 = swift_allocObject();
  *(_OWORD *)(v26 + 16) = xmmword_10117D8C0;
  uint64_t v27 = self;
  id v28 = [v27 valueWithCGPoint:0.0, 0.0];
  uint64_t v29 = sub_10050BF48(0, (unint64_t *)&qword_10167AF10);
  *(void *)(v26 + 56) = v29;
  unint64_t v30 = sub_10060E27C();
  *(void *)(v26 + 64) = v30;
  *(void *)(v26 + 32) = v28;
  [a1 anchorPoint];
  id v31 = [v27 valueWithCGPoint:];
  *(void *)(v26 + 96) = v29;
  *(void *)(v26 + 104) = v30;
  *(void *)(v26 + 72) = v31;
  if (v23 != 0.0 || v25 != 0.0)
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"transforms(for:from:to:usesSublayerTransform:)", 46, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/CRLBoardViewControllerAnimatedTransition.swift", 116, 2, 234, (uint64_t)"The view's anchor point is expected to be %@, but it's actually %@. Animations may appear incorrect.", 100, 2u, v26);
    sub_1005598CC(v26, (uint64_t)"transforms(for:from:to:usesSublayerTransform:)", 46, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/CRLBoardViewControllerAnimatedTransition.swift", 116, 2, 234);
  }
  swift_bridgeObjectRelease();
  double v86 = v21;
  if (a2)
  {
    [a1 sublayerTransform];
    CGFloat m11 = v88.m11;
    CGFloat m12 = v88.m12;
    CGFloat m13 = v88.m13;
    CGFloat m14 = v88.m14;
    CGFloat m21 = v88.m21;
    CGFloat m22 = v88.m22;
    CGFloat m23 = v88.m23;
    CGFloat m24 = v88.m24;
    CGFloat m31 = v88.m31;
    CGFloat m32 = v88.m32;
    CGFloat m33 = v88.m33;
    CGFloat m34 = v88.m34;
    CGFloat m41 = v88.m41;
    CGFloat m42 = v88.m42;
    CGFloat m43 = v88.m43;
    double v47 = v19;
    CGFloat m44 = v88.m44;
  }
  else
  {
    [a1 transform];
    CATransform3DTranslate(&v87, &v88, v19 * (v23 + -0.5), v21 * (v25 + -0.5), 0.0);
    CGFloat m11 = v87.m11;
    CGFloat m12 = v87.m12;
    CGFloat m13 = v87.m13;
    CGFloat m14 = v87.m14;
    CGFloat m21 = v87.m21;
    CGFloat m22 = v87.m22;
    CGFloat m23 = v87.m23;
    CGFloat m24 = v87.m24;
    CGFloat m31 = v87.m31;
    CGFloat m32 = v87.m32;
    CGFloat m33 = v87.m33;
    CGFloat m34 = v87.m34;
    CGFloat m41 = v87.m41;
    CGFloat m42 = v87.m42;
    CGFloat m43 = v87.m43;
    CGFloat m44 = v87.m44;
    double v47 = v19;
  }
  CGFloat v60 = m23;
  CGFloat v61 = m24;
  CGFloat v62 = m31;
  CGFloat v63 = m32;
  CGFloat v64 = m33;
  CGFloat v65 = m34;
  CGFloat v66 = m41;
  CGFloat v67 = m42;
  CGFloat v68 = m43;
  CGFloat v69 = m44;
  v88.CGFloat m11 = m11;
  v88.CGFloat m12 = m12;
  v88.CGFloat m13 = m13;
  v88.CGFloat m14 = m14;
  v88.CGFloat m21 = m21;
  v88.CGFloat m22 = m22;
  v88.CGFloat m23 = m23;
  v88.CGFloat m24 = m24;
  v88.CGFloat m31 = m31;
  v88.CGFloat m32 = m32;
  v88.CGFloat m33 = m33;
  v88.CGFloat m34 = m34;
  v88.CGFloat m41 = m41;
  v88.CGFloat m42 = m42;
  v88.CGFloat m43 = m43;
  v88.CGFloat m44 = m44;
  CGFloat v49 = m14;
  CGFloat v50 = m21;
  CATransform3DTranslate(&v87, &v88, a4, a5, 0.0);
  CATransform3D v88 = v87;
  CATransform3DScale(&v87, &v88, a6 / v47, a7 / v86, 1.0);
  long long v81 = *(_OWORD *)&v87.m11;
  long long v79 = *(_OWORD *)&v87.m13;
  *(_OWORD *)tya = *(_OWORD *)&v87.m21;
  *(_OWORD *)txa = *(_OWORD *)&v87.m23;
  long long v73 = *(_OWORD *)&v87.m31;
  long long v72 = *(_OWORD *)&v87.m33;
  long long v71 = *(_OWORD *)&v87.m41;
  CGFloat v51 = v87.m44;
  CGFloat v70 = v87.m43;
  v88.CGFloat m11 = m11;
  v88.CGFloat m12 = m12;
  v88.CGFloat m13 = m13;
  v88.CGFloat m14 = v49;
  v88.CGFloat m21 = v50;
  v88.CGFloat m22 = m22;
  v88.CGFloat m23 = v60;
  v88.CGFloat m24 = v61;
  v88.CGFloat m31 = v62;
  v88.CGFloat m32 = v63;
  v88.CGFloat m33 = v64;
  v88.CGFloat m34 = v65;
  v88.CGFloat m41 = v66;
  v88.CGFloat m42 = v67;
  v88.CGFloat m43 = v68;
  v88.CGFloat m44 = v69;
  CATransform3DTranslate(&v87, &v88, a8, a9, 0.0);
  CATransform3D v88 = v87;
  CATransform3DScale(&v87, &v88, a10 / v47, a11 / v86, 1.0);
  __n128 result = *(__n128 *)&v87.m11;
  long long v53 = *(_OWORD *)&v87.m13;
  long long v54 = *(_OWORD *)&v87.m21;
  long long v55 = *(_OWORD *)&v87.m23;
  long long v56 = *(_OWORD *)&v87.m31;
  long long v57 = *(_OWORD *)&v87.m33;
  long long v58 = *(_OWORD *)&v87.m41;
  long long v59 = *(_OWORD *)&v87.m43;
  *(_OWORD *)a3 = v81;
  *(_OWORD *)(a3 + 16) = v79;
  *(_OWORD *)(a3 + 32) = *(_OWORD *)tya;
  *(_OWORD *)(a3 + 48) = *(_OWORD *)txa;
  *(_OWORD *)(a3 + 64) = v73;
  *(_OWORD *)(a3 + 80) = v72;
  *(_OWORD *)(a3 + 96) = v71;
  *(CGFloat *)(a3 + 112) = v70;
  *(CGFloat *)(a3 + 120) = v51;
  *(__n128 *)(a3 + 128) = result;
  *(_OWORD *)(a3 + 144) = v53;
  *(_OWORD *)(a3 + 160) = v54;
  *(_OWORD *)(a3 + 176) = v55;
  *(_OWORD *)(a3 + 192) = v56;
  *(_OWORD *)(a3 + 208) = v57;
  *(_OWORD *)(a3 + 224) = v58;
  *(_OWORD *)(a3 + 240) = v59;
  return result;
}

uint64_t sub_1007519F4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

id sub_100751A3C(char a1)
{
  *(void *)&v1[OBJC_IVAR____TtC8Freeform14CRLWPListStyle____lazy_storage___listFontColor] = 1;
  *(_OWORD *)&v1[OBJC_IVAR____TtC8Freeform14CRLWPListStyle____lazy_storage___fontName] = xmmword_10118C770;
  uint64_t v2 = &v1[OBJC_IVAR____TtC8Freeform14CRLWPListStyle____lazy_storage___writingDirection];
  *(void *)uint64_t v2 = 0;
  v2[8] = 1;
  *(void *)&v1[OBJC_IVAR____TtC8Freeform14CRLWPListStyle____lazy_storage___listLabelGeometries] = 0;
  *(void *)&v1[OBJC_IVAR____TtC8Freeform14CRLWPListStyle____lazy_storage___listLabelIndents] = 0;
  *(void *)&v1[OBJC_IVAR____TtC8Freeform14CRLWPListStyle____lazy_storage___listLabelNumbers] = 0;
  *(void *)&v1[OBJC_IVAR____TtC8Freeform14CRLWPListStyle____lazy_storage___listLabelTieredNumbers] = 0;
  *(void *)&v1[OBJC_IVAR____TtC8Freeform14CRLWPListStyle____lazy_storage___listLabelStrings] = 0;
  *(void *)&v1[OBJC_IVAR____TtC8Freeform14CRLWPListStyle____lazy_storage___listLabelTypes] = 0;
  *(void *)&v1[OBJC_IVAR____TtC8Freeform14CRLWPListStyle____lazy_storage___listTextIndents] = 0;
  *(void *)&v1[OBJC_IVAR____TtC8Freeform14CRLWPListStyle____lazy_storage___shadow] = 1;
  v1[OBJC_IVAR____TtC8Freeform14CRLWPListStyle_listType] = a1;
  v4.receiver = v1;
  v4.super_class = (Class)type metadata accessor for CRLWPListStyle();
  return [super init];
}

id sub_100751B14(uint64_t a1)
{
  return sub_100751B54(a1, 0, &qword_10171A6A0);
}

id sub_100751B24(uint64_t a1)
{
  return sub_100751B54(a1, 1, &qword_10171A6A8);
}

id sub_100751B34(uint64_t a1)
{
  return sub_100751B54(a1, 2, &qword_10171A6B0);
}

id sub_100751B44(uint64_t a1)
{
  return sub_100751B54(a1, 3, &qword_10171A6B8);
}

id sub_100751B54(uint64_t a1, char a2, void *a3)
{
  id v5 = objc_allocWithZone((Class)type metadata accessor for CRLWPListStyle());
  id result = sub_100751A3C(a2);
  *a3 = result;
  return result;
}

id sub_100751BD0(uint64_t a1)
{
  switch(a1)
  {
    case 9:
      sub_100752D84();
      if (v1)
      {
        swift_bridgeObjectRetain();
        Class isa = String._bridgeToObjectiveC()();
        goto LABEL_22;
      }
      return 0;
    case 18:
      objc_super v4 = &OBJC_IVAR____TtC8Freeform14CRLWPListStyle____lazy_storage___shadow;
      id v5 = (void (*)(void))sub_100752F20;
      goto LABEL_8;
    case 28:
      return [objc_allocWithZone((Class)NSNumber) initWithInteger:sub_100751FA0()];
    case 53:
      objc_super v4 = &OBJC_IVAR____TtC8Freeform14CRLWPListStyle____lazy_storage___listFontColor;
      id v5 = (void (*)(void))sub_100522AD8;
LABEL_8:
      uint64_t v6 = (void *)sub_100752EAC(v4, v5);
      uint64_t v3 = v6;
      if (v6) {
        id v7 = v6;
      }
      return v3;
    case 54:
      unint64_t v8 = sub_100751FD0();
      unint64_t v9 = v8;
      if (v8 >> 62)
      {
        _bridgeCocoaArray<A>(_:)();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v10 = v8 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain();
        dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
        if (!swift_dynamicCastMetatype())
        {
          uint64_t v15 = *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
          if (v15)
          {
            double v16 = (void *)(v10 + 32);
            do
            {
              if (!*v16) {
                break;
              }
              ++v16;
              --v15;
            }
            while (v15);
          }
        }
        swift_bridgeObjectRelease();
      }
      goto LABEL_17;
    case 56:
      uint64_t v11 = (uint64_t)sub_100752050();
      goto LABEL_21;
    case 57:
      uint64_t v12 = sub_1007520A0();
      goto LABEL_19;
    case 58:
      uint64_t v13 = sub_1007520C0();
      Class isa = sub_100A55DEC(v13);
      goto LABEL_22;
    case 59:
      sub_100752140();
LABEL_17:
      Class isa = Array._bridgeToObjectiveC()().super.isa;
      goto LABEL_22;
    case 60:
      uint64_t v12 = sub_1007521E8();
LABEL_19:
      Class isa = sub_100752DC0(v12);
      goto LABEL_22;
    case 61:
      uint64_t v11 = sub_100752290();
LABEL_21:
      Class isa = sub_100A55CF8(v11);
LABEL_22:
      uint64_t v3 = isa;
      swift_bridgeObjectRelease();
      break;
    default:
      sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"boxedValue(for:)", 16, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/Style/CRLWPStyleProxy.swift", 87, 2, 47, (uint64_t)"Requesting value for invalid property", 37, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"boxedValue(for:)", 16, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/Style/CRLWPStyleProxy.swift", 87, 2, 47);
      uint64_t v3 = 0;
      swift_unknownObjectRetain();
      break;
  }
  return v3;
}

uint64_t sub_100751FA0()
{
  uint64_t v1 = (unsigned char *)(v0 + OBJC_IVAR____TtC8Freeform14CRLWPListStyle____lazy_storage___writingDirection);
  if (*(unsigned char *)(v0 + OBJC_IVAR____TtC8Freeform14CRLWPListStyle____lazy_storage___writingDirection + 8) != 1) {
    return *(void *)v1;
  }
  uint64_t result = -1;
  *(void *)uint64_t v1 = -1;
  v1[8] = 0;
  return result;
}

uint64_t sub_100751FD0()
{
  uint64_t v1 = OBJC_IVAR____TtC8Freeform14CRLWPListStyle____lazy_storage___listLabelGeometries;
  if (*(void *)(v0 + OBJC_IVAR____TtC8Freeform14CRLWPListStyle____lazy_storage___listLabelGeometries))
  {
    uint64_t v2 = *(void *)(v0 + OBJC_IVAR____TtC8Freeform14CRLWPListStyle____lazy_storage___listLabelGeometries);
  }
  else
  {
    uint64_t v2 = sub_100C37F48([objc_allocWithZone((Class)CRLWPListLabelGeometry) init], 9);
    *(void *)(v0 + v1) = v2;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  return v2;
}

_UNKNOWN **sub_100752050()
{
  if (*(void *)(v0 + OBJC_IVAR____TtC8Freeform14CRLWPListStyle____lazy_storage___listLabelIndents))
  {
    uint64_t v1 = *(_UNKNOWN ***)(v0 + OBJC_IVAR____TtC8Freeform14CRLWPListStyle____lazy_storage___listLabelIndents);
  }
  else
  {
    uint64_t v1 = &off_101503F78;
    *(void *)(v0 + OBJC_IVAR____TtC8Freeform14CRLWPListStyle____lazy_storage___listLabelIndents) = &off_101503F78;
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1007520A0()
{
  return sub_100752208(&OBJC_IVAR____TtC8Freeform14CRLWPListStyle____lazy_storage___listLabelNumbers, (void (*)(void))type metadata accessor for CRLWPListNumberType);
}

uint64_t sub_1007520C0()
{
  uint64_t v1 = OBJC_IVAR____TtC8Freeform14CRLWPListStyle____lazy_storage___listLabelTieredNumbers;
  if (*(void *)(v0 + OBJC_IVAR____TtC8Freeform14CRLWPListStyle____lazy_storage___listLabelTieredNumbers))
  {
    uint64_t v2 = *(void *)(v0 + OBJC_IVAR____TtC8Freeform14CRLWPListStyle____lazy_storage___listLabelTieredNumbers);
  }
  else
  {
    uint64_t v2 = static Array._allocateBufferUninitialized(minimumCapacity:)();
    *(void *)(v2 + 16) = 9;
    *(void *)(v2 + 32) = 0;
    *(unsigned char *)(v2 + 40) = 0;
    *(void *)(v0 + v1) = v2;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  return v2;
}

void *sub_100752140()
{
  uint64_t v1 = OBJC_IVAR____TtC8Freeform14CRLWPListStyle____lazy_storage___listLabelStrings;
  if (*(void *)(v0 + OBJC_IVAR____TtC8Freeform14CRLWPListStyle____lazy_storage___listLabelStrings))
  {
    uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform14CRLWPListStyle____lazy_storage___listLabelStrings);
  }
  else
  {
    uint64_t v2 = (void *)static Array._allocateBufferUninitialized(minimumCapacity:)();
    v2[2] = 9;
    v2[4] = 10649826;
    v2[5] = 0xA300000000000000;
    v2[6] = 10649826;
    v2[7] = 0xA300000000000000;
    v2[8] = 10649826;
    v2[9] = 0xA300000000000000;
    v2[10] = 10649826;
    v2[11] = 0xA300000000000000;
    v2[12] = 10649826;
    v2[13] = 0xA300000000000000;
    v2[14] = 10649826;
    v2[15] = 0xA300000000000000;
    v2[16] = 10649826;
    v2[17] = 0xA300000000000000;
    v2[18] = 10649826;
    v2[19] = 0xA300000000000000;
    v2[20] = 10649826;
    v2[21] = 0xA300000000000000;
    *(void *)(v0 + v1) = v2;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_1007521E8()
{
  return sub_100752208(&OBJC_IVAR____TtC8Freeform14CRLWPListStyle____lazy_storage___listLabelTypes, (void (*)(void))type metadata accessor for CRLWPListLabelType);
}

uint64_t sub_100752208(uint64_t *a1, void (*a2)(void))
{
  uint64_t v3 = *a1;
  uint64_t v4 = *(void *)(v2 + *a1);
  if (v4)
  {
    uint64_t v5 = v4;
  }
  else
  {
    a2();
    uint64_t v5 = static Array._allocateBufferUninitialized(minimumCapacity:)();
    *(void *)(v5 + 16) = 9;
    *(_OWORD *)(v5 + 32) = 0u;
    *(_OWORD *)(v5 + 48) = 0u;
    *(_OWORD *)(v5 + 64) = 0u;
    *(_OWORD *)(v5 + 80) = 0u;
    *(void *)(v5 + 96) = 0;
    *(void *)(v2 + v3) = v5;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  return v5;
}

uint64_t sub_100752290()
{
  uint64_t v1 = OBJC_IVAR____TtC8Freeform14CRLWPListStyle____lazy_storage___listTextIndents;
  if (*(void *)(v0 + OBJC_IVAR____TtC8Freeform14CRLWPListStyle____lazy_storage___listTextIndents))
  {
    uint64_t v2 = *(void *)(v0 + OBJC_IVAR____TtC8Freeform14CRLWPListStyle____lazy_storage___listTextIndents);
  }
  else
  {
    uint64_t v2 = static Array._allocateBufferUninitialized(minimumCapacity:)();
    *(void *)(v2 + 16) = 9;
    *(_OWORD *)(v2 + 32) = 0u;
    *(_OWORD *)(v2 + 48) = 0u;
    *(_DWORD *)(v2 + 64) = 0;
    *(void *)(v0 + v1) = v2;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  return v2;
}

void sub_100752344()
{
  sub_100522AD8(*(id *)(v0 + OBJC_IVAR____TtC8Freeform14CRLWPListStyle____lazy_storage___listFontColor));
  sub_100752D70(*(void *)(v0 + OBJC_IVAR____TtC8Freeform14CRLWPListStyle____lazy_storage___fontName), *(void *)(v0 + OBJC_IVAR____TtC8Freeform14CRLWPListStyle____lazy_storage___fontName + 8));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform14CRLWPListStyle____lazy_storage___shadow);

  sub_100522AD8(v1);
}

id sub_100752408()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLWPListStyle();
  return [super dealloc];
}

uint64_t type metadata accessor for CRLWPListStyle()
{
  return self;
}

uint64_t sub_1007525DC()
{
  uint64_t result = sub_1007521E8();
  uint64_t v1 = *(void *)(result + 16);
  if (!v1) {
    goto LABEL_8;
  }
  uint64_t v2 = *(void *)(result + 32);
  if (v2)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return v2;
  }
  if (v1 == 1)
  {
LABEL_8:
    uint64_t v2 = 0;
    goto LABEL_9;
  }
  uint64_t v3 = 5;
  while (1)
  {
    uint64_t v4 = v3 - 3;
    if (__OFADD__(v3 - 4, 1)) {
      break;
    }
    uint64_t v2 = *(void *)(result + 8 * v3);
    if (v2) {
      goto LABEL_9;
    }
    ++v3;
    if (v4 == v1) {
      goto LABEL_8;
    }
  }
  __break(1u);
  return result;
}

void *sub_100752678(void *result, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  if (a3 <= 8)
  {
    uint64_t v6 = result;
    uint64_t result = (void *)a4();
    if (a3 < 0)
    {
      __break(1u);
    }
    else if (result[2] > (unint64_t)a3)
    {

      return (void *)swift_bridgeObjectRelease();
    }
    __break(1u);
  }
  return result;
}

double *sub_1007526FC(float a1, float a2)
{
  sub_1006BB644(0, 9, 0);
  uint64_t v4 = 0;
  uint64_t result = _swiftEmptyArrayStorage;
  double v6 = _swiftEmptyArrayStorage[2];
  do
  {
    unint64_t v8 = result;
    unint64_t v7 = *((void *)result + 3);
    if (*(void *)&v6 >= v7 >> 1)
    {
      sub_1006BB644(v7 > 1, *(void *)&v6 + 1, 1);
      uint64_t result = v8;
    }
    *((void *)result + 2) = *(void *)&v6 + 1;
    *((float *)result + (*(void *)&v6)++ + 8) = (float)((float)v4++ * a1) * a2;
  }
  while (v4 != 9);
  return result;
}

char *sub_1007527C8(void *a1, float a2)
{
  id v4 = objc_allocWithZone((Class)type metadata accessor for CRLWPListStyle());
  uint64_t v5 = (char *)sub_100751A3C(0);
  type metadata accessor for CRLWPListLabelType(0);
  uint64_t v6 = static Array._allocateBufferUninitialized(minimumCapacity:)();
  *(void *)(v6 + 16) = 9;
  *(_OWORD *)(v6 + 32) = 0u;
  *(_OWORD *)(v6 + 48) = 0u;
  *(_OWORD *)(v6 + 64) = 0u;
  *(_OWORD *)(v6 + 80) = 0u;
  *(void *)(v6 + 96) = 0;
  *(void *)&v5[OBJC_IVAR____TtC8Freeform14CRLWPListStyle____lazy_storage___listLabelTypes] = v6;
  swift_bridgeObjectRelease();
  type metadata accessor for CRLWPListNumberType(0);
  uint64_t v7 = static Array._allocateBufferUninitialized(minimumCapacity:)();
  *(void *)(v7 + 16) = 9;
  *(_OWORD *)(v7 + 32) = 0u;
  *(_OWORD *)(v7 + 48) = 0u;
  *(_OWORD *)(v7 + 64) = 0u;
  *(_OWORD *)(v7 + 80) = 0u;
  *(void *)(v7 + 96) = 0;
  *(void *)&v5[OBJC_IVAR____TtC8Freeform14CRLWPListStyle____lazy_storage___listLabelNumbers] = v7;
  swift_bridgeObjectRelease();
  *(void *)&v5[OBJC_IVAR____TtC8Freeform14CRLWPListStyle____lazy_storage___listLabelIndents] = sub_1007526FC(1.5, a2);
  swift_bridgeObjectRelease();
  v8.i32[1] = 0;
  *(float *)v8.i32 = a2 * 0.0;
  int32x2_t v14 = v8;
  uint64_t v9 = static Array._allocateBufferUninitialized(minimumCapacity:)();
  *(void *)(v9 + 16) = 9;
  int32x4_t v10 = vdupq_lane_s32(v14, 0);
  *(int32x4_t *)(v9 + 32) = v10;
  *(int32x4_t *)(v9 + 48) = v10;
  *(_DWORD *)(v9 + 64) = v14.i32[0];
  *(void *)&v5[OBJC_IVAR____TtC8Freeform14CRLWPListStyle____lazy_storage___listTextIndents] = v9;
  swift_bridgeObjectRelease();
  uint64_t v11 = *(void **)&v5[OBJC_IVAR____TtC8Freeform14CRLWPListStyle____lazy_storage___listFontColor];
  *(void *)&v5[OBJC_IVAR____TtC8Freeform14CRLWPListStyle____lazy_storage___listFontColor] = a1;
  id v12 = a1;
  sub_100522AD8(v11);
  return v5;
}

char *sub_10075292C(void *a1, float a2)
{
  id v4 = objc_allocWithZone((Class)type metadata accessor for CRLWPListStyle());
  uint64_t v5 = (char *)sub_100751A3C(1);
  type metadata accessor for CRLWPListLabelType(0);
  uint64_t v6 = static Array._allocateBufferUninitialized(minimumCapacity:)();
  int64x2_t v7 = vdupq_n_s64(3uLL);
  *(void *)(v6 + 16) = 9;
  *(int64x2_t *)(v6 + 32) = v7;
  *(int64x2_t *)(v6 + 48) = v7;
  *(int64x2_t *)(v6 + 64) = v7;
  *(int64x2_t *)(v6 + 80) = v7;
  *(void *)(v6 + 96) = 3;
  *(void *)&v5[OBJC_IVAR____TtC8Freeform14CRLWPListStyle____lazy_storage___listLabelTypes] = v6;
  swift_bridgeObjectRelease();
  type metadata accessor for CRLWPListNumberType(0);
  uint64_t v8 = static Array._allocateBufferUninitialized(minimumCapacity:)();
  *(void *)(v8 + 16) = 9;
  *(_OWORD *)(v8 + 32) = 0u;
  *(_OWORD *)(v8 + 48) = 0u;
  *(_OWORD *)(v8 + 64) = 0u;
  *(_OWORD *)(v8 + 80) = 0u;
  *(void *)(v8 + 96) = 0;
  *(void *)&v5[OBJC_IVAR____TtC8Freeform14CRLWPListStyle____lazy_storage___listLabelNumbers] = v8;
  swift_bridgeObjectRelease();
  *(void *)&v5[OBJC_IVAR____TtC8Freeform14CRLWPListStyle____lazy_storage___listLabelIndents] = sub_1007526FC(1.5, a2);
  swift_bridgeObjectRelease();
  *(float *)v9.i32 = a2 * 1.5;
  int32x2_t v15 = v9;
  uint64_t v10 = static Array._allocateBufferUninitialized(minimumCapacity:)();
  *(void *)(v10 + 16) = 9;
  int32x4_t v11 = vdupq_lane_s32(v15, 0);
  *(int32x4_t *)(v10 + 32) = v11;
  *(int32x4_t *)(v10 + 48) = v11;
  *(_DWORD *)(v10 + 64) = v15.i32[0];
  *(void *)&v5[OBJC_IVAR____TtC8Freeform14CRLWPListStyle____lazy_storage___listTextIndents] = v10;
  swift_bridgeObjectRelease();
  id v12 = *(void **)&v5[OBJC_IVAR____TtC8Freeform14CRLWPListStyle____lazy_storage___listFontColor];
  *(void *)&v5[OBJC_IVAR____TtC8Freeform14CRLWPListStyle____lazy_storage___listFontColor] = a1;
  id v13 = a1;
  sub_100522AD8(v12);
  return v5;
}

char *sub_100752A94(void *a1, double a2)
{
  id v3 = objc_allocWithZone((Class)type metadata accessor for CRLWPListStyle());
  id v4 = (char *)sub_100751A3C(2);
  type metadata accessor for CRLWPListLabelType(0);
  uint64_t v5 = static Array._allocateBufferUninitialized(minimumCapacity:)();
  int64x2_t v6 = vdupq_n_s64(2uLL);
  *(void *)(v5 + 16) = 9;
  *(int64x2_t *)(v5 + 32) = v6;
  *(int64x2_t *)(v5 + 48) = v6;
  *(int64x2_t *)(v5 + 64) = v6;
  *(int64x2_t *)(v5 + 80) = v6;
  *(void *)(v5 + 96) = 2;
  *(void *)&v4[OBJC_IVAR____TtC8Freeform14CRLWPListStyle____lazy_storage___listLabelTypes] = v5;
  swift_bridgeObjectRelease();
  int64x2_t v7 = (void *)static Array._allocateBufferUninitialized(minimumCapacity:)();
  v7[2] = 9;
  v7[4] = 45;
  v7[5] = 0xE100000000000000;
  v7[6] = 45;
  v7[7] = 0xE100000000000000;
  v7[8] = 45;
  v7[9] = 0xE100000000000000;
  v7[10] = 45;
  v7[11] = 0xE100000000000000;
  v7[12] = 45;
  v7[13] = 0xE100000000000000;
  v7[14] = 45;
  v7[15] = 0xE100000000000000;
  v7[16] = 45;
  v7[17] = 0xE100000000000000;
  v7[18] = 45;
  v7[19] = 0xE100000000000000;
  v7[20] = 45;
  v7[21] = 0xE100000000000000;
  *(void *)&v4[OBJC_IVAR____TtC8Freeform14CRLWPListStyle____lazy_storage___listLabelStrings] = v7;
  swift_bridgeObjectRelease();
  *(void *)&v4[OBJC_IVAR____TtC8Freeform14CRLWPListStyle____lazy_storage___listLabelIndents] = sub_1007526FC(1.5, *(float *)&a2);
  swift_bridgeObjectRelease();
  uint64_t v8 = static Array._allocateBufferUninitialized(minimumCapacity:)();
  *(void *)(v8 + 16) = 9;
  int32x4_t v9 = vdupq_lane_s32(*(int32x2_t *)&a2, 0);
  *(int32x4_t *)(v8 + 32) = v9;
  *(int32x4_t *)(v8 + 48) = v9;
  *(_DWORD *)(v8 + 64) = LODWORD(a2);
  *(void *)&v4[OBJC_IVAR____TtC8Freeform14CRLWPListStyle____lazy_storage___listTextIndents] = v8;
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void **)&v4[OBJC_IVAR____TtC8Freeform14CRLWPListStyle____lazy_storage___listFontColor];
  *(void *)&v4[OBJC_IVAR____TtC8Freeform14CRLWPListStyle____lazy_storage___listFontColor] = a1;
  id v11 = a1;
  sub_100522AD8(v10);
  return v4;
}

char *sub_100752C00(void *a1, double a2)
{
  id v3 = objc_allocWithZone((Class)type metadata accessor for CRLWPListStyle());
  id v4 = (char *)sub_100751A3C(3);
  type metadata accessor for CRLWPListLabelType(0);
  uint64_t v5 = static Array._allocateBufferUninitialized(minimumCapacity:)();
  int64x2_t v6 = vdupq_n_s64(2uLL);
  *(void *)(v5 + 16) = 9;
  *(int64x2_t *)(v5 + 32) = v6;
  *(int64x2_t *)(v5 + 48) = v6;
  *(int64x2_t *)(v5 + 64) = v6;
  *(int64x2_t *)(v5 + 80) = v6;
  *(void *)(v5 + 96) = 2;
  *(void *)&v4[OBJC_IVAR____TtC8Freeform14CRLWPListStyle____lazy_storage___listLabelTypes] = v5;
  swift_bridgeObjectRelease();
  int64x2_t v7 = (void *)static Array._allocateBufferUninitialized(minimumCapacity:)();
  v7[2] = 9;
  v7[4] = 10649826;
  v7[5] = 0xA300000000000000;
  v7[6] = 10649826;
  v7[7] = 0xA300000000000000;
  v7[8] = 10649826;
  v7[9] = 0xA300000000000000;
  v7[10] = 10649826;
  v7[11] = 0xA300000000000000;
  v7[12] = 10649826;
  v7[13] = 0xA300000000000000;
  v7[14] = 10649826;
  v7[15] = 0xA300000000000000;
  v7[16] = 10649826;
  v7[17] = 0xA300000000000000;
  v7[18] = 10649826;
  v7[19] = 0xA300000000000000;
  v7[20] = 10649826;
  v7[21] = 0xA300000000000000;
  *(void *)&v4[OBJC_IVAR____TtC8Freeform14CRLWPListStyle____lazy_storage___listLabelStrings] = v7;
  swift_bridgeObjectRelease();
  *(void *)&v4[OBJC_IVAR____TtC8Freeform14CRLWPListStyle____lazy_storage___listLabelIndents] = sub_1007526FC(1.5, *(float *)&a2);
  swift_bridgeObjectRelease();
  uint64_t v8 = static Array._allocateBufferUninitialized(minimumCapacity:)();
  *(void *)(v8 + 16) = 9;
  int32x4_t v9 = vdupq_lane_s32(*(int32x2_t *)&a2, 0);
  *(int32x4_t *)(v8 + 32) = v9;
  *(int32x4_t *)(v8 + 48) = v9;
  *(_DWORD *)(v8 + 64) = LODWORD(a2);
  *(void *)&v4[OBJC_IVAR____TtC8Freeform14CRLWPListStyle____lazy_storage___listTextIndents] = v8;
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void **)&v4[OBJC_IVAR____TtC8Freeform14CRLWPListStyle____lazy_storage___listFontColor];
  *(void *)&v4[OBJC_IVAR____TtC8Freeform14CRLWPListStyle____lazy_storage___listFontColor] = a1;
  id v11 = a1;
  sub_100522AD8(v10);
  return v4;
}

uint64_t sub_100752D70(uint64_t a1, uint64_t a2)
{
  if (a2 != 1) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_100752D84()
{
  uint64_t v1 = (void *)(v0 + OBJC_IVAR____TtC8Freeform14CRLWPListStyle____lazy_storage___fontName);
  uint64_t result = *(void *)(v0 + OBJC_IVAR____TtC8Freeform14CRLWPListStyle____lazy_storage___fontName);
  if (*(void *)(v0 + OBJC_IVAR____TtC8Freeform14CRLWPListStyle____lazy_storage___fontName + 8) == 1)
  {
    *uint64_t v1 = 0;
    v1[1] = 0;
    sub_100752D70(result, 1);
    return 0;
  }
  return result;
}

Class sub_100752DC0(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    specialized ContiguousArray.reserveCapacity(_:)();
    id v3 = (uint64_t *)(a1 + 32);
    do
    {
      uint64_t v4 = *v3++;
      [objc_allocWithZone((Class)NSNumber) initWithUnsignedInteger:v4];
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
      --v1;
    }
    while (v1);
  }
  sub_100752EE0();
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  return isa;
}

uint64_t sub_100752EAC(uint64_t *a1, void (*a2)(void))
{
  uint64_t v3 = *a1;
  uint64_t result = *(void *)(v2 + *a1);
  if (result == 1)
  {
    *(void *)(v2 + v3) = 0;
    a2();
    return 0;
  }
  return result;
}

unint64_t sub_100752EE0()
{
  unint64_t result = qword_101684330;
  if (!qword_101684330)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_101684330);
  }
  return result;
}

uint64_t sub_100752F24(void *a1)
{
  a1[1] = sub_100752FF0((unint64_t *)&unk_101677290, (void (*)(uint64_t))type metadata accessor for CRLBoardIdentifier);
  a1[2] = sub_100752FF0((unint64_t *)&unk_1016772E0, (void (*)(uint64_t))type metadata accessor for CRLBoardIdentifier);
  uint64_t result = sub_100752FF0(&qword_10167D0C8, (void (*)(uint64_t))type metadata accessor for CRLBoardIdentifier);
  a1[3] = result;
  return result;
}

uint64_t type metadata accessor for CRLBoardIdentifier(uint64_t a1)
{
  return sub_100512D5C(a1, qword_10167E3E0);
}

uint64_t sub_100752FF0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100753038()
{
  uint64_t v1 = 0xD000000000000012;
  uint64_t v2 = (uint64_t *)(v0 + *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20));
  uint64_t v4 = *v2;
  uint64_t v3 = (void *)v2[1];
  uint64_t v5 = (void *)0x800000010123FE90;
  if (*v2) {
    BOOL v6 = 0;
  }
  else {
    BOOL v6 = v3 == (void *)0xE000000000000000;
  }
  if (!v6 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
  {
    swift_bridgeObjectRetain();
    uint64_t v1 = v4;
    uint64_t v5 = v3;
  }
  uint64_t v11 = UUID.uuidString.getter();
  v7._countAndFlagsBits = 15418;
  v7._object = (void *)0xE200000000000000;
  String.append(_:)(v7);
  v8._countAndFlagsBits = v1;
  v8._object = v5;
  String.append(_:)(v8);
  swift_bridgeObjectRelease();
  v9._countAndFlagsBits = 62;
  v9._object = (void *)0xE100000000000000;
  String.append(_:)(v9);
  return v11;
}

uint64_t sub_100753118@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_1005057FC((uint64_t *)&unk_101674160);
  __chkstk_darwin(v5 - 8, v6);
  Swift::String v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for CRLProto_Data(0);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9, v11);
  id v13 = (uint64_t *)((char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v14 = type metadata accessor for CRLBoardIdentifierStorage(0);
  __chkstk_darwin(v14 - 8, v15);
  CGFloat v17 = (char *)&v22 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for CRLProto_BoardIdentifier(0);
  sub_1005CC4F0(a1 + *(int *)(v18 + 20), (uint64_t)v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    *(_OWORD *)id v13 = xmmword_101180360;
    UnknownStorage.init()();
    sub_100522F00((uint64_t)v8, (uint64_t *)&unk_101674160);
  }
  else
  {
    sub_100756D24((uint64_t)v8, (uint64_t)v13, type metadata accessor for CRLProto_Data);
  }
  uint64_t v19 = *v13;
  unint64_t v20 = v13[1];
  sub_100510D4C(*v13, v20);
  sub_100756F38((uint64_t)v13, type metadata accessor for CRLProto_Data);
  sub_100753724(v19, v20, (uint64_t)v17);
  uint64_t result = sub_100756F38(a1, type metadata accessor for CRLProto_BoardIdentifier);
  if (!v2) {
    return sub_100756D24((uint64_t)v17, a2, type metadata accessor for CRLBoardIdentifierStorage);
  }
  return result;
}

uint64_t sub_100753370@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v23 = a4;
  uint64_t v7 = type metadata accessor for UUID();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7, v9);
  uint64_t v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for CRLBoardIdentifierStorage(0);
  __chkstk_darwin(v12, v13);
  uint64_t v15 = (char *)&v22 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v11, a1, v7);
  if (static String._unconditionallyBridgeFromObjectiveC(_:)() == a2 && v16 == a3)
  {
    swift_bridgeObjectRelease();
    uint64_t v19 = v23;
  }
  else
  {
    char v18 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    uint64_t v19 = v23;
    if ((v18 & 1) == 0) {
      goto LABEL_9;
    }
  }
  swift_bridgeObjectRelease();
  a2 = 0;
  a3 = 0xE000000000000000;
LABEL_9:
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(a1, v7);
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v15, v11, v7);
  unint64_t v20 = &v15[*(int *)(v12 + 20)];
  *(void *)unint64_t v20 = a2;
  *((void *)v20 + 1) = a3;
  return sub_100756D24((uint64_t)v15, v19, type metadata accessor for CRLBoardIdentifierStorage);
}

uint64_t sub_100753578@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  if ((a2 || a3 != 0xE000000000000000) && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
  {
    if (static String._unconditionallyBridgeFromObjectiveC(_:)() == a2 && v8 == a3)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      char v10 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if ((v10 & 1) == 0) {
        goto LABEL_12;
      }
    }
  }
  sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"init(boardUUID:globallyScopedOwnerName:)", 40, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLBoardIdentifier.swift", 90, 2, 31, (uint64_t)"globallyScopedOwnerName must be globally scoped.", 48, 2u, (uint64_t)_swiftEmptyArrayStorage);
  sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"init(boardUUID:globallyScopedOwnerName:)", 40, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLBoardIdentifier.swift", 90, 2, 31);
LABEL_12:
  uint64_t v11 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 32))(a4, a1, v11);
  uint64_t result = type metadata accessor for CRLBoardIdentifierStorage(0);
  uint64_t v13 = (void *)(a4 + *(int *)(result + 20));
  *uint64_t v13 = a2;
  v13[1] = a3;
  return result;
}

uint64_t sub_100753724@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v7 = type metadata accessor for UUID();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7, v9);
  uint64_t v11 = (char *)&v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v12 = a2 >> 62;
  switch(a2 >> 62)
  {
    case 1uLL:
      LODWORD(v13) = HIDWORD(a1) - a1;
      if (__OFSUB__(HIDWORD(a1), a1))
      {
        __break(1u);
LABEL_45:
        __break(1u);
LABEL_46:
        __break(1u);
        goto LABEL_47;
      }
      uint64_t v13 = (int)v13;
LABEL_6:
      if (v13 < 16)
      {
LABEL_7:
        sub_1007566F4();
        swift_allocError();
        *CGFloat v17 = 0;
        swift_willThrow();
        return sub_100510084(a1, a2);
      }
      uint64_t v18 = Data.subdata(in:)();
      UUID.init(crl_data:)(v18, v19);
      if (v3) {
        return sub_100510084(a1, a2);
      }
      if (v12)
      {
        if (v12 == 1)
        {
          LODWORD(v21) = HIDWORD(a1) - a1;
          if (!__OFSUB__(HIDWORD(a1), a1))
          {
            uint64_t v21 = (int)v21;
            goto LABEL_16;
          }
          goto LABEL_46;
        }
        uint64_t v23 = *(void *)(a1 + 16);
        uint64_t v22 = *(void *)(a1 + 24);
        BOOL v16 = __OFSUB__(v22, v23);
        uint64_t v21 = v22 - v23;
        if (v16)
        {
LABEL_47:
          __break(1u);
          goto LABEL_48;
        }
      }
      else
      {
        uint64_t v21 = BYTE6(a2);
      }
LABEL_16:
      if (v21 >= 17)
      {
        if (!v12)
        {
          uint64_t v24 = BYTE6(a2);
          goto LABEL_24;
        }
        if (v12 != 1)
        {
          uint64_t v28 = *(void *)(a1 + 16);
          uint64_t v27 = *(void *)(a1 + 24);
          uint64_t v24 = v27 - v28;
          if (!__OFSUB__(v27, v28)) {
            goto LABEL_24;
          }
LABEL_49:
          __break(1u);
LABEL_50:
          __break(1u);
        }
        if (!__OFSUB__(HIDWORD(a1), a1))
        {
          uint64_t v24 = HIDWORD(a1) - (int)a1;
LABEL_24:
          if (v24 < 16)
          {
            __break(1u);
            swift_release();
            swift_release();
            __break(1u);
            sub_100510084(v47, v48);
            __break(1u);
            JUMPOUT(0x100753CC4);
          }
          uint64_t v29 = Data.subdata(in:)();
          uint64_t v31 = v29;
          unint64_t v48 = v30;
          switch(v30 >> 62)
          {
            case 1uLL:
              uint64_t v38 = (int)v29;
              uint64_t v47 = v29;
              uint64_t v39 = v29 >> 32;
              if (v29 >> 32 < (int)v29) {
                goto LABEL_50;
              }
              uint64_t v40 = v30 & 0x3FFFFFFFFFFFFFFFLL;
              swift_retain();
              uint64_t v25 = sub_100756748(v38, v39, v40, (void *(*)(uint64_t *__return_ptr, uint64_t, uint64_t))sub_100756ABC);
              unint64_t v26 = v41;
              sub_100510084(v47, v48);
LABEL_32:
              unint64_t v42 = v48;
              if (v26)
              {
                uint64_t v43 = v47;
              }
              else
              {
                uint64_t v31 = v47;
                uint64_t v51 = v47;
                unint64_t v52 = v48;
                sub_100510D4C(v47, v48);
                sub_1005057FC(&qword_10167E458);
                if (swift_dynamicCast())
                {
                  uint64_t v47 = v31;
                  sub_10053974C(v49, (uint64_t)v53);
                  uint64_t v46 = v55;
                  sub_10050F848(v53, v54);
                  if (dispatch thunk of _HasContiguousBytes._providesContiguousBytesNoCopy.getter())
                  {
                    uint64_t v46 = v55;
                    sub_10050F848(v53, v54);
                    dispatch thunk of _HasContiguousBytes.withUnsafeBytes<A>(_:)();
                    sub_100510084(v47, v48);
                    unint64_t v26 = *((void *)&v49[0] + 1);
                    uint64_t v25 = *(void *)&v49[0];
                    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v53);
                    goto LABEL_42;
                  }
                  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v53);
                  uint64_t v31 = v47;
                }
                else
                {
                  uint64_t v50 = 0;
                  memset(v49, 0, sizeof(v49));
                  sub_100522F00((uint64_t)v49, &qword_10167E460);
                }
                uint64_t v36 = sub_1007567F8(v31, v48);
LABEL_40:
                uint64_t v25 = v36;
                uint64_t v43 = v31;
                unint64_t v26 = v37;
                unint64_t v42 = v48;
              }
              sub_100510084(v43, v42);
LABEL_42:
              sub_100510084(a1, a2);
              break;
            case 2uLL:
              uint64_t v32 = v30 & 0x3FFFFFFFFFFFFFFFLL;
              uint64_t v33 = *(void *)(v29 + 24);
              uint64_t v47 = *(void *)(v29 + 16);
              swift_retain();
              swift_retain();
              uint64_t v46 = v32;
              uint64_t v34 = sub_100756748(v47, v33, v32, (void *(*)(uint64_t *__return_ptr, uint64_t, uint64_t))sub_100756ABC);
              uint64_t v47 = v31;
              uint64_t v25 = v34;
              unint64_t v26 = v35;
              swift_release();
              swift_release();
              goto LABEL_32;
            case 3uLL:
              memset(v53, 0, 14);
              goto LABEL_29;
            default:
              v53[0] = v29;
              LOWORD(v53[1]) = v30;
              BYTE2(v53[1]) = BYTE2(v30);
              BYTE3(v53[1]) = BYTE3(v30);
              BYTE4(v53[1]) = BYTE4(v30);
              BYTE5(v53[1]) = BYTE5(v30);
LABEL_29:
              uint64_t v36 = static String._fromUTF8Repairing(_:)();
              goto LABEL_40;
          }
          goto LABEL_43;
        }
LABEL_48:
        __break(1u);
        goto LABEL_49;
      }
      sub_100510084(a1, a2);
      uint64_t v25 = 0;
      unint64_t v26 = 0xE000000000000000;
LABEL_43:
      (*(void (**)(uint64_t, char *, uint64_t))(v8 + 32))(a3, v11, v7);
      uint64_t result = type metadata accessor for CRLBoardIdentifierStorage(0);
      int v44 = (uint64_t *)(a3 + *(int *)(result + 20));
      *int v44 = v25;
      v44[1] = v26;
      return result;
    case 2uLL:
      uint64_t v15 = *(void *)(a1 + 16);
      uint64_t v14 = *(void *)(a1 + 24);
      BOOL v16 = __OFSUB__(v14, v15);
      uint64_t v13 = v14 - v15;
      if (!v16) {
        goto LABEL_6;
      }
      goto LABEL_45;
    case 3uLL:
      goto LABEL_7;
    default:
      uint64_t v13 = BYTE6(a2);
      goto LABEL_6;
  }
}

uint64_t sub_100753CE4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  uint64_t v25 = a3;
  uint64_t v5 = sub_1005057FC((uint64_t *)&unk_101674520);
  __chkstk_darwin(v5 - 8, v6);
  uint64_t v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for UUID();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9, v11);
  uint64_t v13 = (char *)&v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = a1;
  uint64_t v27 = a2;
  sub_10052E310();
  uint64_t v14 = StringProtocol<>.split(separator:maxSplits:omittingEmptySubsequences:)();
  unint64_t v15 = *(void *)(v14 + 16);
  if (v15)
  {
    uint64_t result = swift_bridgeObjectRelease();
    if (!*(void *)(v14 + 16))
    {
      __break(1u);
      goto LABEL_13;
    }
    swift_bridgeObjectRetain();
    static String._fromSubstring(_:)();
    swift_bridgeObjectRelease();
  }
  UUID.init(uuidString:)();
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    swift_bridgeObjectRelease();
    sub_100522F00((uint64_t)v8, (uint64_t *)&unk_101674520);
    sub_1007566F4();
    swift_allocError();
    *CGFloat v17 = 1;
    return swift_willThrow();
  }
  uint64_t v18 = *(uint64_t (**)(char *, char *, uint64_t))(v10 + 32);
  uint64_t result = v18(v13, v8, v9);
  if (v15 <= 1)
  {
    swift_bridgeObjectRelease();
    uint64_t v19 = 0;
    unint64_t v21 = 0xE000000000000000;
    goto LABEL_10;
  }
  if (*(void *)(v14 + 16) < 2uLL)
  {
LABEL_13:
    __break(1u);
    return result;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v19 = static String._fromSubstring(_:)();
  unint64_t v21 = v20;
  swift_bridgeObjectRelease();
LABEL_10:
  uint64_t v22 = v25;
  v18(v25, v13, v9);
  uint64_t result = type metadata accessor for CRLBoardIdentifierStorage(0);
  uint64_t v23 = (uint64_t *)&v22[*(int *)(result + 20)];
  *uint64_t v23 = v19;
  v23[1] = v21;
  return result;
}

uint64_t sub_100753FC0()
{
  uint64_t v0 = type metadata accessor for String.Encoding();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0, v2);
  uint64_t v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = UUID.crl_data()();
  uint64_t v12 = v5;
  unint64_t v13 = v6;
  type metadata accessor for CRLBoardIdentifierStorage(0);
  if (String.count.getter() >= 1)
  {
    static String.Encoding.utf8.getter();
    uint64_t v7 = String.data(using:allowLossyConversion:)();
    unint64_t v9 = v8;
    (*(void (**)(char *, uint64_t))(v1 + 8))(v4, v0);
    if (v9 >> 60 == 15)
    {
      sub_1007566F4();
      swift_allocError();
      *uint64_t v10 = 2;
      swift_willThrow();
      sub_100510084(v12, v13);
    }
    else
    {
      Data.append(_:)();
      sub_100514260(v7, v9);
      return v12;
    }
  }
  return v5;
}

uint64_t sub_100754168@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v16 = a2;
  uint64_t v4 = type metadata accessor for CRLBoardIdentifierStorage(0);
  __chkstk_darwin(v4, v5);
  uint64_t v18 = (uint64_t)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1005057FC(&qword_10167E470);
  uint64_t v17 = *(void *)(v7 - 8);
  __chkstk_darwin(v7, v8);
  uint64_t v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for CRLGloballyScopedBoardIdentifier(0);
  __chkstk_darwin(v11 - 8, v12);
  uint64_t v14 = (char *)&v16 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10050F848(a1, a1[3]);
  sub_100756CD0();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (!v2)
  {
    sub_100752FF0(&qword_10167E420, (void (*)(uint64_t))type metadata accessor for CRLBoardIdentifierStorage);
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v10, v7);
    sub_100756D24(v18, (uint64_t)v14, type metadata accessor for CRLBoardIdentifierStorage);
    sub_100756D24((uint64_t)v14, v16, type metadata accessor for CRLGloballyScopedBoardIdentifier);
  }
  return _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)a1);
}

uint64_t sub_1007543D4(uint64_t a1)
{
  unint64_t v2 = sub_100756CD0();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100754410(uint64_t a1)
{
  unint64_t v2 = sub_100756CD0();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10075444C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100754168(a1, a2);
}

uint64_t sub_100754464(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_100754838(a1, a2, a3, &qword_10167E480, (void (*)(void))sub_100756CD0);
}

uint64_t sub_1007544AC(uint64_t a1, uint64_t a2)
{
  return sub_100756D8C(a1, a2, type metadata accessor for CRLGloballyScopedBoardIdentifier, type metadata accessor for CRLGloballyScopedBoardIdentifier, type metadata accessor for CRLGloballyScopedBoardIdentifier) & 1;
}

uint64_t sub_100754504@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v16 = a2;
  uint64_t v4 = type metadata accessor for CRLBoardIdentifierStorage(0);
  __chkstk_darwin(v4, v5);
  uint64_t v18 = (uint64_t)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1005057FC(&qword_10167E4B0);
  uint64_t v17 = *(void *)(v7 - 8);
  __chkstk_darwin(v7, v8);
  uint64_t v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for CRLBoardIdentifier(0);
  __chkstk_darwin(v11 - 8, v12);
  uint64_t v14 = (char *)&v16 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10050F848(a1, a1[3]);
  sub_100756FEC();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (!v2)
  {
    sub_100752FF0(&qword_10167E420, (void (*)(uint64_t))type metadata accessor for CRLBoardIdentifierStorage);
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v10, v7);
    sub_100756D24(v18, (uint64_t)v14, type metadata accessor for CRLBoardIdentifierStorage);
    sub_100756D24((uint64_t)v14, v16, type metadata accessor for CRLBoardIdentifier);
  }
  return _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)a1);
}

uint64_t sub_10075476C(uint64_t a1)
{
  unint64_t v2 = sub_100756FEC();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1007547A8(uint64_t a1)
{
  unint64_t v2 = sub_100756FEC();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1007547E4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100754504(a1, a2);
}

uint64_t sub_1007547FC(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_100754838(a1, a2, a3, &qword_10167E4A0, (void (*)(void))sub_100756FEC);
}

uint64_t sub_100754838(void *a1, uint64_t a2, uint64_t a3, uint64_t *a4, void (*a5)(void))
{
  uint64_t v7 = sub_1005057FC(a4);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7, v9);
  uint64_t v11 = (char *)&v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10050F848(a1, a1[3]);
  a5();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  type metadata accessor for CRLBoardIdentifierStorage(0);
  sub_100752FF0(&qword_10167E428, (void (*)(uint64_t))type metadata accessor for CRLBoardIdentifierStorage);
  KeyedEncodingContainer.encode<A>(_:forKey:)();
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v11, v7);
}

uint64_t sub_1007549B8()
{
  return sub_100752FF0(&qword_10167E1D0, (void (*)(uint64_t))type metadata accessor for CRLBoardIdentifier);
}

Swift::Int sub_100754A00()
{
  return Hasher._finalize()();
}

uint64_t sub_100754ABC()
{
  type metadata accessor for UUID();
  sub_100752FF0((unint64_t *)&qword_1016770E0, (void (*)(uint64_t))&type metadata accessor for UUID);
  dispatch thunk of Hashable.hash(into:)();
  type metadata accessor for CRLBoardIdentifierStorage(0);
  swift_bridgeObjectRetain();
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_100754B74()
{
  return Hasher._finalize()();
}

uint64_t sub_100754C2C(uint64_t a1, uint64_t a2)
{
  return sub_100756D8C(a1, a2, type metadata accessor for CRLBoardIdentifier, type metadata accessor for CRLBoardIdentifier, type metadata accessor for CRLBoardIdentifier) & 1;
}

Swift::Int sub_100754C84(uint64_t a1)
{
  Hasher.init(_seed:)();
  type metadata accessor for UUID();
  sub_100752FF0((unint64_t *)&qword_1016770E0, (void (*)(uint64_t))&type metadata accessor for UUID);
  dispatch thunk of Hashable.hash(into:)();
  type metadata accessor for CRLBoardIdentifierStorage(0);
  swift_bridgeObjectRetain();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  Hasher._combine(_:)(*(unsigned char *)(v1 + *(int *)(a1 + 20)));
  return Hasher._finalize()();
}

void sub_100754D5C(uint64_t a1, uint64_t a2)
{
  type metadata accessor for UUID();
  sub_100752FF0((unint64_t *)&qword_1016770E0, (void (*)(uint64_t))&type metadata accessor for UUID);
  dispatch thunk of Hashable.hash(into:)();
  type metadata accessor for CRLBoardIdentifierStorage(0);
  swift_bridgeObjectRetain();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  Hasher._combine(_:)(*(unsigned char *)(v2 + *(int *)(a2 + 20)));
}

Swift::Int sub_100754E24(uint64_t a1, uint64_t a2)
{
  Hasher.init(_seed:)();
  type metadata accessor for UUID();
  sub_100752FF0((unint64_t *)&qword_1016770E0, (void (*)(uint64_t))&type metadata accessor for UUID);
  dispatch thunk of Hashable.hash(into:)();
  type metadata accessor for CRLBoardIdentifierStorage(0);
  swift_bridgeObjectRetain();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  Hasher._combine(_:)(*(unsigned char *)(v2 + *(int *)(a2 + 20)));
  return Hasher._finalize()();
}

void *sub_100754F00(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (void *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for UUID();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20);
    uint64_t v9 = (void *)((char *)a1 + v8);
    uint64_t v10 = (void *)((char *)a2 + v8);
    uint64_t v11 = v10[1];
    *uint64_t v9 = *v10;
    v9[1] = v11;
    *((unsigned char *)a1 + *(int *)(a3 + 20)) = *((unsigned char *)a2 + *(int *)(a3 + 20));
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t type metadata accessor for CRLBoardIdentifierStorage(uint64_t a1)
{
  return sub_100512D5C(a1, qword_10167E350);
}

uint64_t sub_100755010(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  uint64_t v10 = v9[1];
  *uint64_t v8 = *v9;
  v8[1] = v10;
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1007550AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  *uint64_t v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_10075515C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = type metadata accessor for CRLBoardIdentifierStorage(0);
  *(_OWORD *)(a1 + *(int *)(v7 + 20)) = *(_OWORD *)(a2 + *(int *)(v7 + 20));
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_1007551EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (uint64_t *)(a2 + v7);
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  *uint64_t v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_10075528C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1007552A0);
}

uint64_t sub_1007552A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for CRLBoardIdentifier(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unsigned int v10 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 2) {
      return ((v10 + 2147483646) & 0x7FFFFFFF) + 1;
    }
    else {
      return 0;
    }
  }
}

uint64_t sub_100755370(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100755384);
}

uint64_t sub_100755384(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for CRLBoardIdentifier(0);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unsigned int v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(unsigned char *)(a1 + *(int *)(a4 + 20)) = a2 + 1;
  }
  return result;
}

uint64_t type metadata accessor for CRLBoardIdentifierAndValue(uint64_t a1)
{
  return sub_100512D5C(a1, qword_10167E230);
}

uint64_t sub_100755460(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100755730(a1, a2, a3, type metadata accessor for CRLBoardIdentifierStorage);
}

uint64_t sub_100755484(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  type metadata accessor for CRLBoardIdentifierStorage(0);

  return swift_bridgeObjectRelease();
}

uint64_t sub_100755510(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100755524);
}

uint64_t sub_100755528(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10075553C);
}

uint64_t type metadata accessor for CRLGloballyScopedBoardIdentifier(uint64_t a1)
{
  return sub_100512D5C(a1, qword_10167E2C0);
}

uint64_t sub_100755564(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100755578);
}

uint64_t sub_100755578(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_10075563C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100755650);
}

uint64_t sub_100755650(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for UUID();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  }
  return result;
}

uint64_t sub_100755710(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100755730(a1, a2, a3, (uint64_t (*)(uint64_t))&type metadata accessor for UUID);
}

uint64_t sub_100755730(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t))
{
  uint64_t result = a4(319);
  if (v5 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1007557C4(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = type metadata accessor for CRLBoardIdentifierStorage(0);
  int v5 = *(_DWORD *)(*(void *)(v4 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = v4;
    uint64_t v7 = type metadata accessor for UUID();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(v6 + 20);
    uint64_t v9 = (uint64_t *)((char *)a1 + v8);
    unint64_t v10 = (uint64_t *)((char *)a2 + v8);
    uint64_t v11 = v10[1];
    *uint64_t v9 = *v10;
    v9[1] = v11;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_1007558A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  uint64_t v5 = *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20);
  uint64_t v6 = (void *)(a1 + v5);
  uint64_t v7 = (void *)(a2 + v5);
  uint64_t v8 = v7[1];
  *uint64_t v6 = *v7;
  v6[1] = v8;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_100755928(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a1, a2, v4);
  uint64_t v5 = *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20);
  uint64_t v6 = (void *)(a1 + v5);
  uint64_t v7 = (void *)(a2 + v5);
  *uint64_t v6 = *v7;
  v6[1] = v7[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1007559C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
  uint64_t v5 = type metadata accessor for CRLBoardIdentifierStorage(0);
  *(_OWORD *)(a1 + *(int *)(v5 + 20)) = *(_OWORD *)(a2 + *(int *)(v5 + 20));
  return a1;
}

uint64_t sub_100755A38(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a1, a2, v4);
  uint64_t v5 = *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20);
  uint64_t v6 = (void *)(a1 + v5);
  uint64_t v7 = (uint64_t *)(a2 + v5);
  uint64_t v9 = *v7;
  uint64_t v8 = v7[1];
  *uint64_t v6 = v9;
  v6[1] = v8;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_100755AC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100755AD4);
}

uint64_t sub_100755AD8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CRLBoardIdentifierStorage(0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t sub_100755B44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100755B58);
}

uint64_t sub_100755B5C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CRLBoardIdentifierStorage(0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

uint64_t sub_100755BCC()
{
  uint64_t result = type metadata accessor for CRLBoardIdentifierStorage(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_100755C58(void *a1)
{
  uint64_t v3 = sub_1005057FC(&qword_10167E498);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3, v5);
  uint64_t v7 = &v9[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10050F848(a1, a1[3]);
  sub_100756F98();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  v9[15] = 0;
  type metadata accessor for UUID();
  sub_100752FF0(&qword_101671E70, (void (*)(uint64_t))&type metadata accessor for UUID);
  KeyedEncodingContainer.encode<A>(_:forKey:)();
  if (!v1)
  {
    type metadata accessor for CRLBoardIdentifierStorage(0);
    v9[14] = 1;
    KeyedEncodingContainer.encode(_:forKey:)();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v7, v3);
}

uint64_t sub_100755E10@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v26 = a2;
  uint64_t v4 = type metadata accessor for UUID();
  uint64_t v28 = *(void *)(v4 - 8);
  uint64_t v29 = v4;
  __chkstk_darwin(v4, v5);
  uint64_t v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_1005057FC(&qword_10167E488);
  uint64_t v27 = *(void *)(v30 - 8);
  __chkstk_darwin(v30, v8);
  unint64_t v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for CRLBoardIdentifierStorage(0);
  __chkstk_darwin(v11, v12);
  uint64_t v14 = (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10050F848(a1, a1[3]);
  sub_100756F98();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v2) {
    return _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)a1);
  }
  uint64_t v25 = v14;
  uint64_t v15 = v27;
  uint64_t v16 = v28;
  char v32 = 0;
  sub_100752FF0(&qword_101671E58, (void (*)(uint64_t))&type metadata accessor for UUID);
  uint64_t v17 = v29;
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v25, v7, v17);
  char v31 = 1;
  uint64_t v18 = KeyedDecodingContainer.decode(_:forKey:)();
  uint64_t v20 = v19;
  (*(void (**)(char *, uint64_t))(v15 + 8))(v10, v30);
  uint64_t v22 = (uint64_t)v25;
  uint64_t v21 = v26;
  uint64_t v23 = (uint64_t *)&v25[*(int *)(v11 + 20)];
  *uint64_t v23 = v18;
  v23[1] = v20;
  sub_100756ED0(v22, v21, type metadata accessor for CRLBoardIdentifierStorage);
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)a1);
  return sub_100756F38(v22, type metadata accessor for CRLBoardIdentifierStorage);
}

uint64_t sub_100756164(uint64_t a1)
{
  unint64_t v2 = sub_100756F98();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1007561A0(uint64_t a1)
{
  unint64_t v2 = sub_100756F98();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1007561DC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100755E10(a1, a2);
}

uint64_t sub_1007561F4(void *a1)
{
  return sub_100755C58(a1);
}

Swift::Int sub_10075620C()
{
  return Hasher._finalize()();
}

uint64_t sub_1007562CC()
{
  type metadata accessor for UUID();
  sub_100752FF0((unint64_t *)&qword_1016770E0, (void (*)(uint64_t))&type metadata accessor for UUID);
  dispatch thunk of Hashable.hash(into:)();
  swift_bridgeObjectRetain();
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_100756380()
{
  return Hasher._finalize()();
}

uint64_t sub_10075643C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((static UUID.== infix(_:_:)() & 1) == 0) {
    return 0;
  }
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = *(void *)(a1 + v6);
  uint64_t v8 = *(void *)(a1 + v6 + 8);
  uint64_t v9 = (void *)(a2 + v6);
  if (v7 == *v9 && v8 == v9[1]) {
    return 1;
  }

  return _stringCompareWithSmolCheck(_:_:expecting:)();
}

uint64_t sub_1007564C4()
{
  return sub_100752FF0(&qword_10167E418, (void (*)(uint64_t))type metadata accessor for CRLBoardIdentifierStorage);
}

uint64_t sub_10075650C(void *a1)
{
  a1[1] = sub_100752FF0(&qword_10167E420, (void (*)(uint64_t))type metadata accessor for CRLBoardIdentifierStorage);
  a1[2] = sub_100752FF0(&qword_10167E428, (void (*)(uint64_t))type metadata accessor for CRLBoardIdentifierStorage);
  uint64_t result = sub_100752FF0(&qword_10167E430, (void (*)(uint64_t))type metadata accessor for CRLBoardIdentifierStorage);
  a1[3] = result;
  return result;
}

uint64_t sub_1007565B8()
{
  return sub_100752FF0(&qword_10167E438, (void (*)(uint64_t))type metadata accessor for CRLGloballyScopedBoardIdentifier);
}

uint64_t sub_100756600(void *a1)
{
  a1[1] = sub_100752FF0(&qword_101671E50, (void (*)(uint64_t))type metadata accessor for CRLGloballyScopedBoardIdentifier);
  a1[2] = sub_100752FF0(&qword_101671E68, (void (*)(uint64_t))type metadata accessor for CRLGloballyScopedBoardIdentifier);
  uint64_t result = sub_100752FF0(&qword_10167E440, (void (*)(uint64_t))type metadata accessor for CRLGloballyScopedBoardIdentifier);
  a1[3] = result;
  return result;
}

uint64_t sub_1007566AC()
{
  return sub_100752FF0(&qword_10167E448, (void (*)(uint64_t))type metadata accessor for CRLBoardIdentifierAndValue);
}

unint64_t sub_1007566F4()
{
  unint64_t result = qword_10167E450;
  if (!qword_10167E450)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10167E450);
  }
  return result;
}

uint64_t sub_100756748(uint64_t a1, uint64_t a2, uint64_t a3, void *(*a4)(uint64_t *__return_ptr, uint64_t, uint64_t))
{
  uint64_t result = __DataStorage._bytes.getter();
  uint64_t v9 = result;
  if (result)
  {
    uint64_t result = __DataStorage._offset.getter();
    if (__OFSUB__(a1, result))
    {
LABEL_15:
      __break(1u);
      return result;
    }
    v9 += a1 - result;
  }
  BOOL v10 = __OFSUB__(a2, a1);
  uint64_t v11 = a2 - a1;
  if (v10)
  {
    __break(1u);
    goto LABEL_15;
  }
  uint64_t v12 = __DataStorage._length.getter();
  if (v12 >= v11) {
    uint64_t v13 = v11;
  }
  else {
    uint64_t v13 = v12;
  }
  uint64_t v14 = v9 + v13;
  if (v9) {
    uint64_t v15 = v14;
  }
  else {
    uint64_t v15 = 0;
  }
  uint64_t result = (uint64_t)sub_1007568AC(v9, v15, a4);
  if (v4) {
    return v16;
  }
  return result;
}

uint64_t sub_1007567F8(uint64_t a1, unint64_t a2)
{
  sub_100510D4C(a1, a2);
  sub_100756900(a1, a2);
  sub_100510084(a1, a2);
  uint64_t v4 = static String._fromUTF8Repairing(_:)();
  swift_release();
  return v4;
}

uint64_t sub_100756870@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = static String._fromUTF8Repairing(_:)();
  *a1 = result;
  a1[1] = v3;
  return result;
}

void *sub_1007568AC(uint64_t a1, uint64_t a2, void *(*a3)(uint64_t *__return_ptr, uint64_t, uint64_t))
{
  if (a1) {
    uint64_t v4 = a2 - a1;
  }
  else {
    uint64_t v4 = 0;
  }
  uint64_t result = a3(&v6, a1, v4);
  if (!v3) {
    return (void *)v6;
  }
  return result;
}

double *sub_100756900(uint64_t a1, unint64_t a2)
{
  uint64_t v4 = type metadata accessor for Data.Iterator();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4, v6);
  uint64_t v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = _swiftEmptyArrayStorage;
  switch(a2 >> 62)
  {
    case 1uLL:
      if (__OFSUB__(HIDWORD(a1), a1)) {
        goto LABEL_12;
      }
      uint64_t v10 = HIDWORD(a1) - (int)a1;
LABEL_6:
      if (v10)
      {
        if (v10 >= 1)
        {
          sub_1005057FC(&qword_10167E468);
          uint64_t v9 = (double *)swift_allocObject();
          size_t v13 = j__malloc_size_0(v9);
          *((void *)v9 + 2) = v10;
          *((void *)v9 + 3) = 2 * v13 - 64;
        }
        sub_100510D4C(a1, a2);
        uint64_t v14 = Data._copyContents(initializing:)();
        sub_100510084(a1, a2);
        (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
        if (v14 != v10)
        {
          __break(1u);
LABEL_12:
          __break(1u);
LABEL_13:
          __break(1u);
          JUMPOUT(0x100756AACLL);
        }
      }
      return v9;
    case 2uLL:
      uint64_t v12 = *(void *)(a1 + 16);
      uint64_t v11 = *(void *)(a1 + 24);
      uint64_t v10 = v11 - v12;
      if (!__OFSUB__(v11, v12)) {
        goto LABEL_6;
      }
      goto LABEL_13;
    case 3uLL:
      return v9;
    default:
      uint64_t v10 = BYTE6(a2);
      goto LABEL_6;
  }
}

uint64_t sub_100756ABC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = static String._fromUTF8Repairing(_:)();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_100756AF8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CRLBoardIdentifier(0);
  __chkstk_darwin(v4 - 8, v5);
  uint64_t v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8, v9);
  uint64_t v11 = (char *)&v22 - v10;
  char v12 = static UUID.== infix(_:_:)();
  sub_100756ED0(a1, (uint64_t)v11, type metadata accessor for CRLBoardIdentifier);
  sub_100756ED0(a2, (uint64_t)v7, type metadata accessor for CRLBoardIdentifier);
  if (v12)
  {
    uint64_t v13 = *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20);
    uint64_t v14 = *(void *)&v11[v13];
    uint64_t v15 = *(void *)&v11[v13 + 8];
    uint64_t v16 = &v7[v13];
    if (v14 == *(void *)v16 && v15 == *((void *)v16 + 1))
    {
      sub_100756F38((uint64_t)v7, type metadata accessor for CRLBoardIdentifier);
      sub_100756F38((uint64_t)v11, type metadata accessor for CRLBoardIdentifier);
    }
    else
    {
      char v18 = _stringCompareWithSmolCheck(_:_:expecting:)();
      sub_100756F38((uint64_t)v7, type metadata accessor for CRLBoardIdentifier);
      sub_100756F38((uint64_t)v11, type metadata accessor for CRLBoardIdentifier);
      char v19 = 0;
      if ((v18 & 1) == 0) {
        return v19 & 1;
      }
    }
    uint64_t v20 = type metadata accessor for CRLBoardIdentifierAndValue(0);
    char v19 = *(unsigned char *)(a1 + *(int *)(v20 + 20)) ^ *(unsigned char *)(a2 + *(int *)(v20 + 20)) ^ 1;
  }
  else
  {
    sub_100756F38((uint64_t)v7, type metadata accessor for CRLBoardIdentifier);
    sub_100756F38((uint64_t)v11, type metadata accessor for CRLBoardIdentifier);
    char v19 = 0;
  }
  return v19 & 1;
}

unint64_t sub_100756CD0()
{
  unint64_t result = qword_10167E478;
  if (!qword_10167E478)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10167E478);
  }
  return result;
}

uint64_t sub_100756D24(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_100756D8C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void), uint64_t (*a4)(void), uint64_t (*a5)(void))
{
  uint64_t v9 = a3(0);
  __chkstk_darwin(v9 - 8, v10);
  char v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13, v14);
  uint64_t v16 = (char *)&v25 - v15;
  char v17 = static UUID.== infix(_:_:)();
  sub_100756ED0(a1, (uint64_t)v16, a4);
  sub_100756ED0(a2, (uint64_t)v12, a4);
  if (v17)
  {
    uint64_t v18 = *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20);
    uint64_t v19 = *(void *)&v16[v18];
    uint64_t v20 = *(void *)&v16[v18 + 8];
    uint64_t v21 = &v12[v18];
    if (v19 == *(void *)v21 && v20 == *((void *)v21 + 1)) {
      char v23 = 1;
    }
    else {
      char v23 = _stringCompareWithSmolCheck(_:_:expecting:)();
    }
  }
  else
  {
    char v23 = 0;
  }
  sub_100756F38((uint64_t)v12, a5);
  sub_100756F38((uint64_t)v16, a5);
  return v23 & 1;
}

uint64_t sub_100756ED0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_100756F38(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_100756F98()
{
  unint64_t result = qword_10167E490;
  if (!qword_10167E490)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10167E490);
  }
  return result;
}

unint64_t sub_100756FEC()
{
  unint64_t result = qword_10167E4A8;
  if (!qword_10167E4A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10167E4A8);
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLBoardIdentifier.CodingKeys()
{
  return &type metadata for CRLBoardIdentifier.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for CRLBoardIdentifierStorage.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100757120);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLBoardIdentifierStorage.CodingKeys()
{
  return &type metadata for CRLBoardIdentifierStorage.CodingKeys;
}

unsigned char *_s8Freeform18CRLBoardIdentifierV10CodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1007571F4);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLGloballyScopedBoardIdentifier.CodingKeys()
{
  return &type metadata for CRLGloballyScopedBoardIdentifier.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for CRLBoardIdentifierCodingError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1007572F8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLBoardIdentifierCodingError()
{
  return &type metadata for CRLBoardIdentifierCodingError;
}

unint64_t sub_100757334()
{
  unint64_t result = qword_10167E4B8;
  if (!qword_10167E4B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10167E4B8);
  }
  return result;
}

unint64_t sub_10075738C()
{
  unint64_t result = qword_10167E4C0;
  if (!qword_10167E4C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10167E4C0);
  }
  return result;
}

unint64_t sub_1007573E4()
{
  unint64_t result = qword_10167E4C8;
  if (!qword_10167E4C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10167E4C8);
  }
  return result;
}

unint64_t sub_10075743C()
{
  unint64_t result = qword_10167E4D0;
  if (!qword_10167E4D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10167E4D0);
  }
  return result;
}

unint64_t sub_100757494()
{
  unint64_t result = qword_10167E4D8;
  if (!qword_10167E4D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10167E4D8);
  }
  return result;
}

unint64_t sub_1007574EC()
{
  unint64_t result = qword_10167E4E0;
  if (!qword_10167E4E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10167E4E0);
  }
  return result;
}

unint64_t sub_100757544()
{
  unint64_t result = qword_10167E4E8;
  if (!qword_10167E4E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10167E4E8);
  }
  return result;
}

unint64_t sub_10075759C()
{
  unint64_t result = qword_10167E4F0;
  if (!qword_10167E4F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10167E4F0);
  }
  return result;
}

unint64_t sub_1007575F4()
{
  unint64_t result = qword_10167E4F8;
  if (!qword_10167E4F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10167E4F8);
  }
  return result;
}

unint64_t sub_10075764C()
{
  unint64_t result = qword_10167E500;
  if (!qword_10167E500)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10167E500);
  }
  return result;
}

id sub_100757A4C()
{
  uint64_t v1 = OBJC_IVAR____TtC8Freeform28CRLSEExtensionContextManager____lazy_storage___presentedItemOperationQueue;
  unint64_t v2 = *(void **)(v0
                + OBJC_IVAR____TtC8Freeform28CRLSEExtensionContextManager____lazy_storage___presentedItemOperationQueue);
  if (v2)
  {
    id v3 = *(id *)(v0
               + OBJC_IVAR____TtC8Freeform28CRLSEExtensionContextManager____lazy_storage___presentedItemOperationQueue);
  }
  else
  {
    id v4 = [objc_allocWithZone((Class)NSOperationQueue) init];
    NSString v5 = String._bridgeToObjectiveC()();
    [v4 setName:v5];

    [v4 setMaxConcurrentOperationCount:1];
    [v4 setQualityOfService:17];
    unsigned int v6 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    unint64_t v2 = 0;
  }
  id v7 = v2;
  return v3;
}

id sub_100757C64()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLSEExtensionContextManager();
  return [super dealloc];
}

uint64_t sub_100757D08()
{
  return type metadata accessor for CRLSEExtensionContextManager();
}

uint64_t type metadata accessor for CRLSEExtensionContextManager()
{
  uint64_t result = qword_10167E5B0;
  if (!qword_10167E5B0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_100757D5C()
{
  sub_100757DF8();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_100757DF8()
{
  if (!qword_10167E5C0)
  {
    type metadata accessor for URL();
    unint64_t v0 = type metadata accessor for Optional();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_10167E5C0);
    }
  }
}

uint64_t sub_100757E50(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1005057FC(&qword_101672E90);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

id sub_100757FD8()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLiOSBoardItemQuickLookPreviewViewController();
  return [super dealloc];
}

uint64_t type metadata accessor for CRLiOSBoardItemQuickLookPreviewViewController()
{
  return self;
}

void sub_1007580B8(void *a1, uint64_t a2)
{
  sub_1005057FC(&qword_1016743E0);
  uint64_t v4 = type metadata accessor for URL();
  uint64_t v5 = *(void *)(v4 - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_10117E810;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v5 + 16))(v7 + v6, a2, v4);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v9 = [self mainBundle];
  NSString v10 = String._bridgeToObjectiveC()();
  NSString v11 = String._bridgeToObjectiveC()();
  NSString v12 = String._bridgeToObjectiveC()();
  id v13 = [v9 localizedStringForKey:v10 value:v11 table:v12];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  id v14 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [a1 replaceCanvasElementInfo:0 withFilesAtURLs:isa allowedTypes:0 actionString:v14 completion:0];
}

uint64_t sub_1007585C0(const char *a1, uint64_t a2)
{
  sub_100557A70(a2, (uint64_t)v24);
  uint64_t v4 = v25;
  if (v25)
  {
    uint64_t v5 = sub_10050F848(v24, v25);
    uint64_t v6 = *(void *)(v4 - 8);
    __n128 v7 = __chkstk_darwin(v5, v5);
    id v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, __n128))(v6 + 16))(v9, v7);
    uint64_t v10 = _bridgeAnythingToObjectiveC<A>(_:)();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v4);
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v24);
  }
  else
  {
    uint64_t v10 = 0;
  }
  NSString v11 = (objc_class *)type metadata accessor for CRLiOSBoardItemQuickLookPreviewViewController();
  v23.receiver = v2;
  v23.super_class = v11;
  unsigned __int8 v12 = [super canPerformAction:a1 withSender:v10];
  swift_unknownObjectRelease();
  id v13 = NSStringFromSelector(a1);
  uint64_t v14 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v16 = v15;

  if (v14 == 0x6572507478656E5FLL && v16 == 0xEC00000077656976) {
    goto LABEL_6;
  }
  if (_stringCompareWithSmolCheck(_:_:expecting:)())
  {
    unsigned __int8 v12 = 0;
    if (v14 != 0x6953656C67676F74 || v16 != 0xEE003A7261626564) {
      goto LABEL_7;
    }
    goto LABEL_12;
  }
  if (v14 != 0xD000000000000010 || v16 != 0x800000010124D770)
  {
    char v20 = _stringCompareWithSmolCheck(_:_:expecting:)();
    BOOL v22 = v14 == 0x6953656C67676F74 && v16 == 0xEE003A7261626564;
    if ((v20 & 1) == 0)
    {
      if (!v22) {
        goto LABEL_7;
      }
LABEL_12:
      swift_bridgeObjectRelease();
      char v18 = 1;
      return v18 & 1;
    }
    if (v22) {
      goto LABEL_12;
    }
  }
LABEL_6:
  unsigned __int8 v12 = 0;
LABEL_7:
  char v17 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  char v18 = v17 | v12;
  return v18 & 1;
}

void sub_100758A0C()
{
  uint64_t v1 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1, v3);
  CGFloat v61 = (char *)&v50 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for DispatchQoS();
  uint64_t v60 = *(void *)(v5 - 8);
  __chkstk_darwin(v5, v6);
  uint64_t v8 = (char *)&v50 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1005057FC(&qword_101672E90);
  __chkstk_darwin(v9 - 8, v10);
  unsigned __int8 v12 = (char *)&v50 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for URL();
  uint64_t v14 = *(void *)(*(void *)(v13 - 8) + 64);
  __chkstk_darwin(v13, v15);
  uint64_t v16 = (char *)&v50 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17, v18);
  uint64_t v21 = (char *)&v50 - v20;
  if (*(unsigned char *)(v0 + OBJC_IVAR____TtC8Freeform45CRLiOSBoardItemQuickLookPreviewViewController_shouldSaveMarkedUpItem) == 1)
  {
    uint64_t v58 = v2;
    uint64_t v59 = v19;
    uint64_t v57 = v5;
    uint64_t v22 = OBJC_IVAR____TtC8Freeform45CRLiOSBoardItemQuickLookPreviewViewController_previewItem;
    uint64_t v23 = *(void *)(v0 + OBJC_IVAR____TtC8Freeform45CRLiOSBoardItemQuickLookPreviewViewController_previewItem);
    if (v23 && (type metadata accessor for CRLFileRepPlaceHolder(), (uint64_t v24 = swift_dynamicCastClass()) != 0))
    {
      uint64_t v54 = v1;
      id v25 = *(id *)(v24 + OBJC_IVAR____TtC8Freeform21CRLFileRepPlaceHolder_fileRep);
      swift_unknownObjectRetain();
      id v56 = v25;
      id v26 = [v25 interactiveCanvasController];
      if (v26)
      {
        id v27 = v26;
        uint64_t v55 = v23;
        id v28 = [v26 editorController];
        if (v28)
        {
          uint64_t v29 = v28;
          id v53 = v27;
          id v30 = [v28 mostSpecificCurrentEditorOfClass:0];
          if (v30)
          {
            void aBlock[6] = &OBJC_PROTOCOL___CRLMediaReplacing;
            uint64_t v31 = swift_dynamicCastObjCProtocolConditional();
            if (v31)
            {
              uint64_t v51 = v31;
              id v52 = v30;

              char v32 = *(void **)(v0 + v22);
              if (!v32)
              {
                __break(1u);
                return;
              }
              id v33 = [v32 previewItemURL];
              id v34 = v53;
              if (v33)
              {
                unint64_t v35 = v33;
                static URL._unconditionallyBridgeFromObjectiveC(_:)();

                uint64_t v36 = v59;
                unint64_t v37 = *(void (**)(char *, char *, uint64_t))(v59 + 32);
                v37(v12, v16, v13);
                (*(void (**)(char *, void, uint64_t, uint64_t))(v36 + 56))(v12, 0, 1, v13);
                if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48))(v12, 1, v13) != 1)
                {
                  v37(v21, v12, v13);
                  sub_100656064();
                  uint64_t v38 = (void (*)(unint64_t, char *, uint64_t))v37;
                  uint64_t v50 = static OS_dispatch_queue.main.getter();
                  (*(void (**)(char *, char *, uint64_t))(v36 + 16))(v16, v21, v13);
                  unint64_t v39 = (*(unsigned __int8 *)(v36 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80);
                  uint64_t v40 = swift_allocObject();
                  *(void *)(v40 + 16) = v51;
                  v38(v40 + v39, v16, v13);
                  aBlock[4] = sub_1007599C0;
                  aBlock[5] = v40;
                  aBlock[0] = _NSConcreteStackBlock;
                  aBlock[1] = *(void *)"";
                  aBlock[2] = sub_100679958;
                  aBlock[3] = &unk_101512650;
                  unint64_t v41 = _Block_copy(aBlock);
                  swift_unknownObjectRetain();
                  swift_release();
                  static DispatchQoS.unspecified.getter();
                  aBlock[0] = _swiftEmptyArrayStorage;
                  sub_100522CDC();
                  sub_1005057FC((uint64_t *)&unk_1016725D0);
                  sub_10056B494();
                  unint64_t v42 = v61;
                  uint64_t v43 = v54;
                  dispatch thunk of SetAlgebra.init<A>(_:)();
                  int v44 = (void *)v50;
                  OS_dispatch_queue.async(group:qos:flags:execute:)();
                  _Block_release(v41);
                  swift_unknownObjectRelease();

                  swift_unknownObjectRelease();
                  (*(void (**)(char *, uint64_t))(v58 + 8))(v42, v43);
                  (*(void (**)(char *, uint64_t))(v60 + 8))(v8, v57);
                  (*(void (**)(char *, uint64_t))(v36 + 8))(v21, v13);
                  return;
                }
              }
              else
              {
                (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v59 + 56))(v12, 1, 1, v13);
              }
              sub_100522F00((uint64_t)v12, &qword_101672E90);
              if (qword_10166F9D8 != -1) {
                swift_once();
              }
              swift_beginAccess();
              id v45 = (id)static OS_os_log.crlError;
              uint64_t v49 = static os_log_type_t.default.getter();
              sub_100BAC898((uint64_t)v45, (uint64_t)&_mh_execute_header, v49, (uint64_t)"Cannot get previewItemURL", 25, 2, (uint64_t)_swiftEmptyArrayStorage);
              swift_unknownObjectRelease();

              swift_unknownObjectRelease();
              goto LABEL_22;
            }
          }

          swift_unknownObjectRelease();
          id v27 = v53;
        }
        if (qword_10166F9D8 != -1) {
          swift_once();
        }
        swift_beginAccess();
        id v45 = (id)static OS_os_log.crlError;
        uint64_t v48 = static os_log_type_t.default.getter();
        sub_100BAC898((uint64_t)v45, (uint64_t)&_mh_execute_header, v48, (uint64_t)"Cannot get Media Replacing Editor", 33, 2, (uint64_t)_swiftEmptyArrayStorage);
        swift_unknownObjectRelease();
      }
      else
      {
        if (qword_10166F9D8 != -1) {
          swift_once();
        }
        swift_beginAccess();
        id v45 = (id)static OS_os_log.crlError;
        uint64_t v47 = static os_log_type_t.default.getter();
        sub_100BAC898((uint64_t)v45, (uint64_t)&_mh_execute_header, v47, (uint64_t)"Cannot get ICC in QLPreview", 27, 2, (uint64_t)_swiftEmptyArrayStorage);
        swift_unknownObjectRelease();
      }
    }
    else
    {
      if (qword_10166F9D8 != -1) {
        swift_once();
      }
      swift_beginAccess();
      id v45 = (id)static OS_os_log.crlError;
      uint64_t v46 = static os_log_type_t.default.getter();
      sub_100BAC898((uint64_t)v45, (uint64_t)&_mh_execute_header, v46, (uint64_t)"Cannot get fileRep in QLPreview", 31, 2, (uint64_t)_swiftEmptyArrayStorage);
    }
LABEL_22:
  }
}

uint64_t sub_100759278()
{
  uint64_t v1 = OBJC_IVAR____TtC8Freeform45CRLiOSBoardItemQuickLookPreviewViewController_previewOriginView;
  [*(id *)(v0 + OBJC_IVAR____TtC8Freeform45CRLiOSBoardItemQuickLookPreviewViewController_previewOriginView) removeFromSuperview];
  uint64_t v2 = *(void **)(v0 + v1);
  *(void *)(v0 + v1) = 0;

  uint64_t v3 = *(void (**)(uint64_t))(v0
                                      + OBJC_IVAR____TtC8Freeform45CRLiOSBoardItemQuickLookPreviewViewController_onDismiss);
  uint64_t v4 = swift_retain();
  v3(v4);

  return swift_release();
}

uint64_t sub_1007592EC(void *a1)
{
  uint64_t v2 = type metadata accessor for UTType();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2, v4);
  uint64_t v6 = (char *)&v44 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1005057FC(&qword_101672E90);
  __chkstk_darwin(v7 - 8, v8);
  uint64_t v10 = (char *)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for CRLFileRepPlaceHolder();
  uint64_t v11 = swift_dynamicCastClass();
  if (!v11)
  {
    if (qword_10166F9D8 != -1) {
      swift_once();
    }
    swift_beginAccess();
    id v24 = (id)static OS_os_log.crlError;
    uint64_t v25 = static os_log_type_t.default.getter();
    sub_100BAC898((uint64_t)v24, (uint64_t)&_mh_execute_header, v25, (uint64_t)"Cannot get fileRep in QLPreview", 31, 2, (uint64_t)_swiftEmptyArrayStorage);

    return 0;
  }
  unsigned __int8 v12 = *(void **)(v11 + OBJC_IVAR____TtC8Freeform21CRLFileRepPlaceHolder_fileRep);
  swift_unknownObjectRetain();
  id v13 = v12;
  id v14 = [v13 interactiveCanvasController];
  if (!v14)
  {
    if (qword_10166F9D8 != -1) {
      swift_once();
    }
    swift_beginAccess();
    id v26 = (id)static OS_os_log.crlError;
    uint64_t v27 = static os_log_type_t.default.getter();
    sub_100BAC898((uint64_t)v26, (uint64_t)&_mh_execute_header, v27, (uint64_t)"Cannot get ICC in QLPreview", 27, 2, (uint64_t)_swiftEmptyArrayStorage);
    swift_unknownObjectRelease();

    return 0;
  }
  uint64_t v15 = v14;
  uint64_t v16 = (char *)[v14 editingCoordinator];
  if (!v16)
  {
    if (qword_10166F9D8 != -1) {
      swift_once();
    }
    swift_beginAccess();
    id v28 = (id)static OS_os_log.crlError;
    uint64_t v29 = static os_log_type_t.default.getter();
    sub_100BAC898((uint64_t)v28, (uint64_t)&_mh_execute_header, v29, (uint64_t)"Cannot get the main board in QLPreview", 38, 2, (uint64_t)_swiftEmptyArrayStorage);
    swift_unknownObjectRelease();

    return 0;
  }
  uint64_t v17 = v16;
  uint64_t v45 = v3;
  uint64_t v18 = (char *)*(id *)&v16[OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard];

  id v46 = v18;
  uint64_t v19 = *(void **)(*(void *)&v18[OBJC_IVAR____TtC8Freeform8CRLBoard_shareState] + 16);
  if (!v19) {
    goto LABEL_18;
  }
  swift_retain();
  id v20 = v19;
  id v21 = [v20 currentUserParticipant];
  if (v21)
  {
    uint64_t v22 = v21;
    id v23 = [v21 permission];
    swift_release();

    if (v23 == (id)2) {
      goto LABEL_25;
    }
LABEL_18:
    id v31 = [a1 previewItemURL];
    if (v31)
    {
      char v32 = v31;
      static URL._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v33 = type metadata accessor for URL();
      uint64_t v34 = *(void *)(v33 - 8);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v34 + 56))(v10, 0, 1, v33);
      id v35 = objc_allocWithZone((Class)NSItemProvider);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48))(v10, 1, v33) == 1)
      {
        unint64_t v37 = 0;
      }
      else
      {
        URL._bridgeToObjectiveC()(v36);
        unint64_t v37 = v39;
        (*(void (**)(char *, uint64_t))(v34 + 8))(v10, v33);
      }
    }
    else
    {
      uint64_t v38 = type metadata accessor for URL();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 56))(v10, 1, 1, v38);
      id v35 = objc_allocWithZone((Class)NSItemProvider);
      unint64_t v37 = 0;
    }
    id v40 = [v35 initWithContentsOfURL:v37];

    if (v40)
    {
      static UTType.pdf.getter();
      UTType.identifier.getter();
      (*(void (**)(char *, uint64_t))(v45 + 8))(v6, v2);
      NSString v41 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      unsigned int v42 = [v40 hasRepresentationConformingToTypeIdentifier:v41 fileOptions:0];

      swift_unknownObjectRelease();
      return v42;
    }
    goto LABEL_25;
  }
  id v30 = [v20 publicPermission];
  swift_release();

  if (v30 != (id)2) {
    goto LABEL_18;
  }
LABEL_25:
  swift_unknownObjectRelease();

  return 0;
}

uint64_t sub_1007598F4()
{
  uint64_t v1 = type metadata accessor for URL();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

void sub_1007599C0()
{
  uint64_t v1 = *(void *)(type metadata accessor for URL() - 8);
  uint64_t v2 = *(void **)(v0 + 16);
  uint64_t v3 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));

  sub_1007580B8(v2, v3);
}

uint64_t sub_100759A24(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100759A34()
{
  return swift_release();
}

unint64_t sub_100759A40()
{
  unint64_t result = qword_10167E7A0;
  if (!qword_10167E7A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10167E7A0);
  }
  return result;
}

unint64_t sub_100759A98()
{
  unint64_t result = qword_10167E7A8;
  if (!qword_10167E7A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10167E7A8);
  }
  return result;
}

uint64_t sub_100759AEC()
{
  return *(void *)(swift_getOpaqueTypeConformance2() + 8);
}

uint64_t sub_100759B20()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100759B3C@<X0>(uint64_t *a1@<X8>)
{
  CGFloat v70 = a1;
  uint64_t v69 = type metadata accessor for InputConnectionBehavior();
  uint64_t v72 = *(void *)(v69 - 8);
  __chkstk_darwin(v69, v1);
  CGFloat v68 = &v49[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v3 = sub_1005057FC(&qword_101673B38);
  __chkstk_darwin(v3 - 8, v4);
  CGFloat v64 = &v49[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v6, v7);
  CGFloat v67 = &v49[-v8];
  uint64_t v9 = sub_1005057FC(&qword_101691F20);
  __chkstk_darwin(v9 - 8, v10);
  CGFloat v63 = &v49[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v12 = sub_1005057FC(&qword_101673B40);
  __chkstk_darwin(v12 - 8, v13);
  uint64_t v15 = &v49[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v16 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16, v18);
  id v20 = &v49[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v21 = type metadata accessor for Locale();
  __chkstk_darwin(v21 - 8, v22);
  uint64_t v23 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v23 - 8, v24);
  uint64_t v25 = type metadata accessor for LocalizedStringResource();
  uint64_t v60 = v25;
  uint64_t v71 = *(void *)(v25 - 8);
  __chkstk_darwin(v25, v26);
  CGFloat v66 = &v49[-((v27 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v28, v29);
  CGFloat v65 = &v49[-v30];
  uint64_t v62 = sub_1005057FC(&qword_101673B48);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t v31 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  uint64_t v33 = v17 + 104;
  char v32 = *(void (**)(unsigned char *, uint64_t, uint64_t))(v17 + 104);
  v32(v20, enum case for LocalizedStringResource.BundleDescription.main(_:), v16);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  unsigned int v50 = v31;
  uint64_t v51 = v16;
  v32(v20, v31, v16);
  uint64_t v53 = v33;
  id v52 = v32;
  uint64_t v54 = v15;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  uint64_t v34 = *(void (**)(unsigned char *, void, uint64_t, uint64_t))(v71 + 56);
  v71 += 56;
  CGFloat v61 = v34;
  v34(v15, 0, 1, v25);
  uint64_t v35 = type metadata accessor for CRLBoardEntity();
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 56))(v63, 1, 1, v35);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  v32(v20, v31, v16);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  uint64_t v36 = v67;
  IntentDialog.init(_:)();
  uint64_t v37 = type metadata accessor for IntentDialog();
  uint64_t v57 = v37;
  unint64_t v39 = (void (**)(void, void, void, void))(*(void *)(v37 - 8) + 56);
  uint64_t v58 = (void (*)(unsigned char *, uint64_t, uint64_t, uint64_t))*v39;
  uint64_t v38 = v58;
  uint64_t v59 = v39;
  v58(v36, 0, 1, v37);
  v38(v64, 1, 1, v37);
  unsigned int v55 = enum case for InputConnectionBehavior.default(_:);
  id v40 = *(void (**)(void))(v72 + 104);
  v72 += 104;
  id v56 = (void (*)(unsigned char *, void, uint64_t))v40;
  v40(v68);
  sub_1005F63D4((unint64_t *)&qword_101673B60, (void (*)(uint64_t))type metadata accessor for CRLBoardEntity);
  NSString v41 = v54;
  uint64_t *v70 = IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:)();
  sub_1005057FC(&qword_101675F68);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t v42 = v50;
  uint64_t v43 = v51;
  uint64_t v44 = v52;
  v52(v20, v50, v51);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  v44(v20, v42, v43);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  v61(v41, 0, 1, v60);
  uint64_t v75 = 0;
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  v44(v20, v42, v43);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  uint64_t v45 = v67;
  IntentDialog.init(_:)();
  v58(v45, 0, 1, v57);
  v56(v68, v55, v69);
  uint64_t v46 = IntentParameter<>.init(title:description:default:supportedTypeIdentifiers:requestValueDialog:inputConnectionBehavior:)();
  uint64_t v47 = v70;
  v70[1] = v46;
  sub_1005057FC(&qword_101673B50);
  unint64_t v73 = 0xD00000000000001FLL;
  unint64_t v74 = 0x800000010123B260;
  AnyHashable.init<A>(_:)();
  type metadata accessor for AppDependencyManager();
  static AppDependencyManager.shared.getter();
  v47[2] = AppDependency.__allocating_init(key:manager:)();
  v47[6] = (uint64_t)&type metadata for CRLInsertFilesToBoardIntentPerformer;
  v47[7] = (uint64_t)&off_101510A18;
  uint64_t result = swift_allocObject();
  v47[3] = result;
  *(void *)(result + 40) = &type metadata for CRLAppIntentsBoardItemsImporter;
  *(void *)(result + 48) = &off_101519C28;
  return result;
}

uint64_t sub_10075A56C(uint64_t a1)
{
  v2[10] = a1;
  v2[11] = v1;
  v2[12] = type metadata accessor for CRLBoardEntity();
  v2[13] = swift_task_alloc();
  v2[14] = swift_task_alloc();
  sub_1005057FC(&qword_101673B38);
  v2[15] = swift_task_alloc();
  uint64_t v3 = type metadata accessor for LocalizedStringResource.BundleDescription();
  v2[16] = v3;
  v2[17] = *(void *)(v3 - 8);
  v2[18] = swift_task_alloc();
  type metadata accessor for Locale();
  v2[19] = swift_task_alloc();
  type metadata accessor for String.LocalizationValue();
  v2[20] = swift_task_alloc();
  type metadata accessor for LocalizedStringResource();
  v2[21] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for IntentDialog();
  v2[22] = v4;
  v2[23] = *(void *)(v4 - 8);
  v2[24] = swift_task_alloc();
  sub_1005057FC((uint64_t *)&unk_101676160);
  v2[25] = swift_task_alloc();
  sub_1005057FC((uint64_t *)&unk_10167C0E0);
  v2[26] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for IntentFile();
  v2[27] = v5;
  v2[28] = *(void *)(v5 - 8);
  v2[29] = swift_task_alloc();
  v2[30] = swift_task_alloc();
  return _swift_task_switch(sub_10075A848, 0, 0);
}

uint64_t sub_10075A848()
{
  uint64_t result = IntentParameter.wrappedValue.getter();
  uint64_t v2 = v0[7];
  uint64_t v42 = _swiftEmptyArrayStorage;
  uint64_t v3 = v0[28];
  uint64_t v39 = *(void *)(v2 + 16);
  if (v39)
  {
    unint64_t v4 = 0;
    NSString v41 = (uint64_t (**)(char *, uint64_t, uint64_t))(v3 + 32);
    uint64_t v33 = (uint64_t (**)(void, void))(v3 + 8);
    uint64_t v34 = _swiftEmptyArrayStorage;
    uint64_t v32 = v0[7];
    uint64_t v37 = v0[28];
    while (1)
    {
      if (v4 >= *(void *)(v2 + 16))
      {
        __break(1u);
        return result;
      }
      uint64_t v6 = v0[26];
      uint64_t v5 = v0[27];
      unint64_t v7 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
      uint64_t v8 = *(void *)(v3 + 72);
      (*(void (**)(uint64_t, unint64_t, uint64_t))(v3 + 16))(v6, v2 + v7 + v8 * v4, v5);
      uint64_t v36 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v3 + 56);
      v36(v6, 0, 1, v5);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v6, 1, v5) == 1) {
        goto LABEL_21;
      }
      uint64_t v9 = v0[25];
      uint64_t v10 = *v41;
      (*v41)((char *)v0[30], v0[26], v0[27]);
      IntentFile.type.getter();
      uint64_t v11 = type metadata accessor for UTType();
      uint64_t v12 = *(void *)(v11 - 8);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v9, 1, v11) == 1) {
        break;
      }
      uint64_t v31 = v10;
      sub_1005057FC(&qword_101675F70);
      *(_OWORD *)(swift_allocObject() + 16) = xmmword_10117D8C0;
      static UTType.image.getter();
      static UTType.movie.getter();
      UTType.identifier.getter();
      NSString v13 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      id v14 = [self typeWithIdentifier:v13];

      uint64_t v35 = v0[25];
      if (!v14)
      {
        sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"crl_conforms(toAnyUTType:)", 26, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLUtility/CRLUTIUtilities.swift", 86, 2, 14, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
        sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"crl_conforms(toAnyUTType:)", 26, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLUtility/CRLUTIUtilities.swift", 86, 2, 14);
        swift_bridgeObjectRelease();
        (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v35, v11);
        uint64_t v2 = v32;
        goto LABEL_4;
      }
      Class isa = Array._bridgeToObjectiveC()().super.isa;
      unsigned __int8 v16 = [v14 crl_conformsToAnyUTType:isa];

      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v35, v11);
      uint64_t v2 = v32;
      uint64_t v3 = v37;
      if (v16)
      {
        v31((char *)v0[29], v0[30], v0[27]);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1006BB9C4(0, *((void *)v34 + 2) + 1, 1);
          uint64_t v34 = v42;
        }
        unint64_t v18 = *((void *)v34 + 2);
        unint64_t v17 = *((void *)v34 + 3);
        if (v18 >= v17 >> 1)
        {
          sub_1006BB9C4(v17 > 1, v18 + 1, 1);
          uint64_t v34 = v42;
        }
        uint64_t v19 = v0[29];
        uint64_t v20 = v0[27];
        *((void *)v34 + 2) = v18 + 1;
        uint64_t result = v31((char *)v34 + v7 + v18 * v8, v19, v20);
        uint64_t v42 = v34;
        uint64_t v2 = v32;
        goto LABEL_6;
      }
LABEL_5:
      uint64_t result = (*v33)(v0[30], v0[27]);
LABEL_6:
      if (v39 == ++v4)
      {
        v36(v0[26], 1, 1, v0[27]);
        goto LABEL_21;
      }
    }
    sub_100522F00(v0[25], (uint64_t *)&unk_101676160);
LABEL_4:
    uint64_t v3 = v37;
    goto LABEL_5;
  }
  uint64_t v34 = _swiftEmptyArrayStorage;
  (*(void (**)(void, uint64_t, uint64_t, void))(v3 + 56))(v0[26], 1, 1, v0[27]);
LABEL_21:
  uint64_t v21 = v0[26];
  swift_bridgeObjectRelease();
  sub_100522F00(v21, (uint64_t *)&unk_10167C0E0);
  v0[31] = v34;
  IntentParameter.wrappedValue.getter();
  uint64_t v22 = *(void *)(v0[8] + 16);
  swift_bridgeObjectRelease();
  sub_10060E550(v22, *((void *)v34 + 2), (uint64_t)&_mh_execute_header, (uint64_t)"perform()", 9, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/AppIntents/Intents/Content Insertion/CRLInsertPhotosToBoardIntent.swift", 125, 2u, 74);
  if (*((void *)v34 + 2))
  {
    sub_10050F848((void *)(v0[11] + 24), *(void *)(v0[11] + 48));
    IntentParameter.wrappedValue.getter();
    AppDependency.wrappedValue.getter();
    v0[5] = &type metadata for CRLBoardLibraryProvidingDependency;
    v0[6] = &off_10152F800;
    uint64_t v23 = (void *)swift_task_alloc();
    v0[32] = v23;
    *uint64_t v23 = v0;
    v23[1] = sub_10075B0CC;
    uint64_t v24 = v0[14];
    return sub_1006FB6D8((uint64_t)v34, v24, (uint64_t)(v0 + 2));
  }
  else
  {
    uint64_t v25 = v0[23];
    uint64_t v38 = v0[24];
    uint64_t v40 = v0[22];
    uint64_t v26 = v0[17];
    uint64_t v27 = v0[18];
    uint64_t v28 = v0[15];
    uint64_t v29 = v0[16];
    swift_release();
    String.LocalizationValue.init(stringLiteral:)();
    static Locale.current.getter();
    (*(void (**)(uint64_t, void, uint64_t))(v26 + 104))(v27, enum case for LocalizedStringResource.BundleDescription.main(_:), v29);
    LocalizedStringResource.init(_:table:locale:bundle:comment:)();
    IntentDialog.init(_:)();
    IntentParameter.projectedValue.getter();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v25 + 16))(v28, v38, v40);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v25 + 56))(v28, 0, 1, v40);
    type metadata accessor for AppIntentError();
    sub_1005F63D4(&qword_101675F98, (void (*)(uint64_t))&type metadata accessor for AppIntentError);
    swift_allocError();
    IntentParameter.needsValueError(_:)();
    swift_release();
    sub_100522F00(v28, &qword_101673B38);
    swift_willThrow();
    (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v38, v40);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v30 = (uint64_t (*)(void))v0[1];
    return v30();
  }
}

uint64_t sub_10075B0CC()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 264) = v0;
  swift_task_dealloc();
  if (v0)
  {
    sub_1005F6324(*(void *)(v2 + 112));
    swift_release();
    uint64_t v3 = sub_10075B3D0;
  }
  else
  {
    uint64_t v4 = v2 + 16;
    uint64_t v5 = *(void *)(v2 + 112);
    swift_bridgeObjectRelease();
    swift_release();
    sub_1005F6324(v5);
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v4);
    uint64_t v3 = sub_10075B22C;
  }
  return _swift_task_switch(v3, 0, 0);
}

uint64_t sub_10075B22C()
{
  uint64_t v1 = v0[13];
  IntentParameter.wrappedValue.getter();
  v0[9] = IntentParameter.projectedValue.getter();
  sub_1005F63D4((unint64_t *)&qword_101675F88, (void (*)(uint64_t))type metadata accessor for CRLBoardEntity);
  sub_1005F6380();
  static IntentResult.result<A, B>(value:opensIntent:)();
  swift_release();
  sub_1005F6324(v1);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = (uint64_t (*)(void))v0[1];
  return v2();
}

uint64_t sub_10075B3D0()
{
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v0 + 16);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10075B4D8()
{
  uint64_t v0 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0, v2);
  uint64_t v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for Locale();
  __chkstk_darwin(v5 - 8, v6);
  uint64_t v7 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v7 - 8, v8);
  uint64_t v9 = type metadata accessor for LocalizedStringResource();
  sub_100568B28(v9, qword_10171A6C8);
  sub_100556B74(v9, (uint64_t)qword_10171A6C8);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v4, enum case for LocalizedStringResource.BundleDescription.main(_:), v0);
  return LocalizedStringResource.init(_:table:locale:bundle:comment:)();
}

uint64_t sub_10075B6D0()
{
  uint64_t v0 = sub_1005057FC(&qword_10167E7D8);
  __chkstk_darwin(v0 - 8, v1);
  uint64_t v2 = sub_1005057FC(&qword_10167E7E0);
  __chkstk_darwin(v2, v3);
  sub_10075BABC();
  ParameterSummaryString.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v4._countAndFlagsBits = 543450177;
  v4._object = (void *)0xE400000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v4);
  swift_getKeyPath();
  sub_1005057FC(&qword_10167E7E8);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)();
  swift_release();
  v5._countAndFlagsBits = 544175136;
  v5._object = (void *)0xE400000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v5);
  swift_getKeyPath();
  sub_1005057FC(&qword_10167E7F0);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)();
  swift_release();
  v6._countAndFlagsBits = 0;
  v6._object = (void *)0xE000000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v6);
  ParameterSummaryString.init(stringInterpolation:)();
  return IntentParameterSummary.init(_:table:)();
}

uint64_t sub_10075B8B4@<X0>(uint64_t a1@<X8>)
{
  if (qword_10166F000 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for LocalizedStringResource();
  uint64_t v3 = sub_100556B74(v2, (uint64_t)qword_10171A6C8);
  Swift::String v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);

  return v4(a1, v3, v2);
}

uint64_t sub_10075B960(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_100528488;
  return sub_10075A56C(a1);
}

uint64_t sub_10075B9FC(uint64_t a1)
{
  unint64_t v2 = sub_10075BABC();

  return static AppIntent.persistentIdentifier.getter(a1, v2);
}

ValueMetadata *type metadata accessor for CRLInsertPhotosToBoardIntent()
{
  return &type metadata for CRLInsertPhotosToBoardIntent;
}

uint64_t sub_10075BA48()
{
  return sub_100523288(&qword_10167E7B8, &qword_10167E7C0);
}

uint64_t sub_10075BA84()
{
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v0 + 16);

  return _swift_deallocObject(v0, 56, 7);
}

unint64_t sub_10075BABC()
{
  unint64_t result = qword_10167E7C8;
  if (!qword_10167E7C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_10167E7C8);
  }
  return result;
}

uint64_t sub_10075BB10@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_10075BB3C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

id sub_10075BC9C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLiOSApplication();
  [super dealloc];
}

uint64_t type metadata accessor for CRLiOSApplication()
{
  return self;
}

uint64_t sub_10075BD08(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UUID();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  __chkstk_darwin(v4, v7);
  uint64_t v8 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1005057FC(&qword_101672BB0);
  __chkstk_darwin(v9 - 8, v10);
  uint64_t v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v12, 1, 1, v13);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v8, a2, v4);
  type metadata accessor for MainActor();
  swift_retain();
  uint64_t v14 = static MainActor.shared.getter();
  unint64_t v15 = (*(unsigned __int8 *)(v5 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  unsigned __int8 v16 = (char *)swift_allocObject();
  *((void *)v16 + 2) = v14;
  *((void *)v16 + 3) = &protocol witness table for MainActor;
  *((void *)v16 + 4) = a1;
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(&v16[v15], v8, v4);
  sub_1005912D0((uint64_t)v12, (uint64_t)&unk_10167EA58, (uint64_t)v16);
  return swift_release();
}

uint64_t sub_10075BEF8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = _s15AppExRepBackendC12BackendStateOMa(0);
  __chkstk_darwin(v4, v5);
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10076D4D8(v2, (uint64_t)v7, _s15AppExRepBackendC12BackendStateOMa);
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result == 2)
  {
    long long v15 = *(_OWORD *)v7;
    long long v20 = *((_OWORD *)v7 + 1);
    long long v21 = v15;
    long long v16 = *((_OWORD *)v7 + 2);
    long long v18 = *((_OWORD *)v7 + 3);
    long long v19 = v16;
    long long v17 = *((_OWORD *)v7 + 4);
    uint64_t v14 = *((void *)v7 + 10);

    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    uint64_t result = swift_unknownObjectRelease();
    long long v13 = v17;
    long long v12 = v18;
    long long v11 = v19;
    long long v10 = v20;
    long long v9 = v21;
  }
  else if (result == 1)
  {
    long long v9 = *(_OWORD *)v7;
    long long v10 = *((_OWORD *)v7 + 1);
    long long v11 = *((_OWORD *)v7 + 2);
    long long v12 = *((_OWORD *)v7 + 3);
    long long v13 = *((_OWORD *)v7 + 4);
    uint64_t v14 = *((void *)v7 + 10);
  }
  else
  {
    uint64_t result = sub_10076D540((uint64_t)v7, _s15AppExRepBackendC12BackendStateOMa);
    uint64_t v14 = 0;
    long long v9 = 0uLL;
    long long v10 = 0uLL;
    long long v11 = 0uLL;
    long long v12 = 0uLL;
    long long v13 = 0uLL;
  }
  *(_OWORD *)a1 = v9;
  *(_OWORD *)(a1 + 16) = v10;
  *(_OWORD *)(a1 + 32) = v11;
  *(_OWORD *)(a1 + 48) = v12;
  *(_OWORD *)(a1 + 64) = v13;
  *(void *)(a1 + 80) = v14;
  return result;
}

uint64_t sub_10075C06C(uint64_t a1)
{
  v2[9] = a1;
  v2[10] = v1;
  _s15AppExRepBackendC12BackendStateOMa(0);
  v2[11] = swift_task_alloc();
  type metadata accessor for MainActor();
  v2[12] = static MainActor.shared.getter();
  uint64_t v4 = dispatch thunk of Actor.unownedExecutor.getter();
  v2[13] = v4;
  v2[14] = v3;
  return _swift_task_switch(sub_10075C130, v4, v3);
}

uint64_t sub_10075C130()
{
  uint64_t v2 = v0[10];
  uint64_t v1 = v0[11];
  uint64_t v3 = *(void *)(v2 + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE15AppExRepBackend__backendState);
  sub_10076D4D8(v0[9], v1, _s15AppExRepBackendC12BackendStateOMa);
  uint64_t v4 = *(void (**)(uint64_t))(*(void *)v3 + 136);
  swift_retain();
  v4(v1);
  swift_release();
  uint64_t v5 = v2 + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE15AppExRepBackend_delegate;
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  v0[15] = Strong;
  if (Strong)
  {
    uint64_t v7 = v0[10];
    uint64_t v8 = *(void *)(v5 + 8);
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v10 = v7 + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE15AppExRepBackend_uuid;
    sub_10075C584(v0 + 2);
    uint64_t v14 = (uint64_t (*)(uint64_t, void *, uint64_t, uint64_t))(*(void *)(v8 + 16) + **(int **)(v8 + 16));
    long long v11 = (void *)swift_task_alloc();
    v0[16] = v11;
    *long long v11 = v0;
    v11[1] = sub_10075C33C;
    return v14(v10, v0 + 2, ObjectType, v8);
  }
  else
  {
    swift_release();
    swift_task_dealloc();
    long long v13 = (uint64_t (*)(void))v0[1];
    return v13();
  }
}

uint64_t sub_10075C33C()
{
  uint64_t v2 = *(void **)v1;
  *(void *)(*(void *)v1 + 136) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = v2[13];
    uint64_t v4 = v2[14];
    uint64_t v5 = sub_10075C4E4;
  }
  else
  {
    swift_unknownObjectRelease();
    sub_10076E600(v2 + 2, (void (*)(void, void, void, void, void, void, void))sub_100767658);
    uint64_t v3 = v2[13];
    uint64_t v4 = v2[14];
    uint64_t v5 = sub_10075C478;
  }
  return _swift_task_switch(v5, v3, v4);
}

uint64_t sub_10075C478()
{
  swift_release();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10075C4E4()
{
  swift_release();
  sub_10076E600((void *)(v0 + 16), (void (*)(void, void, void, void, void, void, void))sub_100767658);
  swift_unknownObjectRelease();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10075C584@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = _s15AppExRepBackendC12BackendStateOMa(0);
  __chkstk_darwin(v4, v5);
  uint64_t v7 = (uint64_t *)((char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = *(void (**)(uint64_t))(**(void **)(v1
                                                    + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE15AppExRepBackend__backendState)
                                      + 128);
  uint64_t v9 = swift_retain();
  v8(v9);
  swift_release();
  uint64_t result = swift_getEnumCaseMultiPayload();
  unint64_t v11 = 0x8000000000000000;
  uint64_t v12 = 0;
  unint64_t v13 = 0;
  uint64_t v14 = 0;
  uint64_t v15 = 0;
  uint64_t v16 = 0;
  uint64_t v17 = 0;
  switch((int)result)
  {
    case 1:
      uint64_t v18 = *v7;
      long long v19 = (void *)v7[2];
      uint64_t v29 = v7[1];
      uint64_t v30 = v18;
      uint64_t v12 = v7[4];
      unint64_t v13 = v7[5];
      uint64_t v14 = v7[6];
      uint64_t v15 = v7[7];
      uint64_t v16 = v7[8];
      unint64_t v11 = v7[9];
      uint64_t v17 = v7[10];
      swift_release();

      swift_release();
      uint64_t result = swift_release();
      if (!(v11 >> 62))
      {
        uint64_t result = sub_100767658(v12, v13, v14, v15, v16, v11);
        unint64_t v13 = 0;
        uint64_t v14 = 0;
        uint64_t v15 = 0;
        uint64_t v16 = 0;
        uint64_t v17 = 0;
        unint64_t v11 = 0x8000000000000000;
        uint64_t v12 = 2;
      }
      break;
    case 2:
      uint64_t v20 = *v7;
      uint64_t v21 = v7[1];
      uint64_t v22 = (void *)v7[2];
      uint64_t v12 = v7[4];
      unint64_t v13 = v7[5];
      uint64_t v14 = v7[6];
      uint64_t v15 = v7[7];
      uint64_t v16 = v7[8];
      unint64_t v11 = v7[9];
      uint64_t v17 = v7[10];
      uint64_t v29 = v7[11];
      uint64_t v30 = v20;
      uint64_t v27 = v7[12];
      uint64_t v28 = v21;
      uint64_t v23 = v7[13];
      uint64_t v24 = (void *)v7[14];
      uint64_t v25 = v23;
      id v26 = v22;
      swift_release();

      swift_release();
      swift_release();

      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      uint64_t result = swift_unknownObjectRelease();
      if (!(v11 >> 62))
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t result = sub_100767658(v12, v13, v14, v15, v16, v11);
        unint64_t v11 = *(unsigned __int8 *)(*(void *)(v2
                                             + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE15AppExRepBackend_metalLayer)
                                 + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE10MetalLayer_hasDrawnFrame);
      }
      break;
    case 3:
      uint64_t v15 = 0;
      uint64_t v16 = 0;
      uint64_t v17 = 0;
      uint64_t v12 = *v7;
      unint64_t v13 = v7[1];
      unint64_t v11 = 0x4000000000000000;
      uint64_t v14 = *((unsigned __int8 *)v7 + 16);
      break;
    case 4:
      break;
    default:
      uint64_t result = sub_10076D540((uint64_t)v7, _s15AppExRepBackendC12BackendStateOMa);
      unint64_t v13 = 0;
      uint64_t v14 = 0;
      uint64_t v15 = 0;
      uint64_t v16 = 0;
      uint64_t v17 = 0;
      uint64_t v12 = 1;
      break;
  }
  *a1 = v12;
  a1[1] = v13;
  a1[2] = v14;
  a1[3] = v15;
  a1[4] = v16;
  a1[5] = v11;
  a1[6] = v17;
  return result;
}

uint64_t sub_10075C85C(uint64_t a1)
{
  v2[19] = a1;
  v2[20] = v1;
  type metadata accessor for MainActor();
  v2[21] = static MainActor.shared.getter();
  uint64_t v4 = dispatch thunk of Actor.unownedExecutor.getter();
  v2[22] = v4;
  v2[23] = v3;
  return _swift_task_switch(sub_10075C8F4, v4, v3);
}

uint64_t sub_10075C8F4()
{
  if (qword_10166FB00 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[19];
  uint64_t v2 = v0[20];
  swift_beginAccess();
  uint64_t v3 = (void *)static OS_os_log.crlThreeDimensionalObjects;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117D8C0;
  id v5 = v3;
  UUID.uuidString.getter();
  String.index(_:offsetBy:)();
  String.subscript.getter();
  swift_bridgeObjectRelease();
  uint64_t v6 = static String._fromSubstring(_:)();
  uint64_t v8 = v7;
  swift_bridgeObjectRelease();
  *(void *)(inited + 56) = &type metadata for String;
  unint64_t v9 = sub_100528BE4();
  *(void *)(inited + 64) = v9;
  *(void *)(inited + 32) = v6;
  *(void *)(inited + 40) = v8;
  unint64_t v10 = sub_100AD0F58();
  *(void *)(inited + 96) = &type metadata for String;
  *(void *)(inited + 104) = v9;
  *(void *)(inited + 72) = v10;
  *(void *)(inited + 80) = v11;
  uint64_t v12 = static os_log_type_t.debug.getter();
  sub_100BAC898((uint64_t)v5, (uint64_t)&_mh_execute_header, v12, (uint64_t)"(AppEx:CoreRE) [%{public}@] loadScene(%@)", 41, 2, inited);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  uint64_t v13 = swift_task_alloc();
  v0[24] = v13;
  *(void *)(v13 + 16) = v2;
  *(void *)(v13 + 24) = v1;
  uint64_t v14 = (void *)swift_task_alloc();
  v0[25] = v14;
  *uint64_t v14 = v0;
  v14[1] = sub_10075CB74;
  return sub_100761260((uint64_t)v14, 0x6E65635364616F6CLL, 0xEB00000000292865, dword_10167EA00);
}

uint64_t sub_10075CB74()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 208) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 176);
    uint64_t v4 = *(void *)(v2 + 184);
    id v5 = sub_10075CCF4;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v3 = *(void *)(v2 + 176);
    uint64_t v4 = *(void *)(v2 + 184);
    id v5 = sub_10075CC90;
  }
  return _swift_task_switch(v5, v3, v4);
}

uint64_t sub_10075CC90()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10075CCF4()
{
  swift_release();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10075CD64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[55] = a3;
  v3[47] = a2;
  sub_1005057FC(&qword_10167EA10);
  v3[56] = swift_task_alloc();
  uint64_t v4 = sub_1005057FC(&qword_10167EA18);
  v3[57] = v4;
  v3[58] = *(void *)(v4 - 8);
  v3[59] = swift_task_alloc();
  uint64_t v5 = sub_1005057FC(&qword_10167EA20);
  v3[60] = v5;
  v3[61] = *(void *)(v5 - 8);
  v3[62] = swift_task_alloc();
  type metadata accessor for CRLUSDRendering.SceneRequest(0);
  v3[63] = swift_task_alloc();
  uint64_t v6 = _s15AppExRepBackendC12BackendStateOMa(0);
  v3[64] = v6;
  v3[65] = *(void *)(v6 - 8);
  v3[66] = swift_task_alloc();
  v3[67] = swift_task_alloc();
  v3[68] = swift_task_alloc();
  v3[69] = swift_task_alloc();
  v3[70] = swift_task_alloc();
  v3[71] = swift_task_alloc();
  v3[72] = swift_task_alloc();
  v3[73] = swift_task_alloc();
  v3[74] = swift_task_alloc();
  v3[75] = swift_task_alloc();
  v3[76] = type metadata accessor for MainActor();
  v3[77] = static MainActor.shared.getter();
  uint64_t v8 = dispatch thunk of Actor.unownedExecutor.getter();
  v3[78] = v8;
  v3[79] = v7;
  return _swift_task_switch(sub_10075CFF0, v8, v7);
}

uint64_t sub_10075CFF0()
{
  uint64_t v1 = *(void *)(v0 + 376);
  sub_10075F8B8();
  *(CFTimeInterval *)(v0 + 640) = CACurrentMediaTime();
  uint64_t v2 = OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE15AppExRepBackend__backendState;
  *(void *)(v0 + 648) = OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE15AppExRepBackend__backendState;
  uint64_t v3 = *(void (**)(uint64_t))(**(void **)(v1 + v2) + 128);
  uint64_t v4 = swift_retain();
  v3(v4);
  swift_release();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v5 = *(void **)(v0 + 600);
      uint64_t v6 = (void *)v5[2];
      uint64_t v7 = v5[4];
      unint64_t v8 = v5[5];
      uint64_t v9 = v5[6];
      uint64_t v10 = v5[7];
      uint64_t v11 = v5[8];
      unint64_t v12 = v5[9];
      swift_release();

      swift_release();
      swift_release();
      sub_100767658(v7, v8, v9, v10, v11, v12);
      goto LABEL_5;
    case 2u:
      uint64_t v13 = *(void **)(v0 + 600);
      uint64_t v14 = (void *)v13[2];
      uint64_t v15 = v13[4];
      unint64_t v16 = v13[5];
      uint64_t v17 = v13[6];
      uint64_t v18 = v13[7];
      uint64_t v19 = v13[8];
      unint64_t v20 = v13[9];
      unsigned int v50 = (void *)v13[14];
      swift_release();

      swift_release();
      swift_release();
      sub_100767658(v15, v16, v17, v18, v19, v20);

      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      goto LABEL_5;
    case 3u:
      uint64_t v26 = *(void *)(v0 + 584);
      uint64_t v27 = *(void *)(v0 + 528);
      uint64_t v28 = *(void *)(v0 + 376);
      sub_1007676B8(**(void **)(v0 + 600), *(void *)(*(void *)(v0 + 600) + 8), *(unsigned char *)(*(void *)(v0 + 600) + 16));
      swift_storeEnumTagMultiPayload();
      uint64_t v29 = *(void *)(v1 + v2);
      sub_10076D4D8(v27, v26, _s15AppExRepBackendC12BackendStateOMa);
      uint64_t v30 = *(void (**)(uint64_t))(*(void *)v29 + 136);
      swift_retain();
      v30(v26);
      swift_release();
      uint64_t v31 = v28 + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE15AppExRepBackend_delegate;
      if (swift_unknownObjectWeakLoadStrong())
      {
        uint64_t v32 = *(void *)(v0 + 376);
        uint64_t v33 = *(void *)(v31 + 8);
        uint64_t ObjectType = swift_getObjectType();
        uint64_t v35 = v32 + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE15AppExRepBackend_uuid;
        sub_10075C584((uint64_t *)(v0 + 16));
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v33 + 8))(v35, v0 + 16, ObjectType, v33);
        swift_unknownObjectRelease();
        sub_10076E600((void *)(v0 + 16), (void (*)(void, void, void, void, void, void, void))sub_100767658);
      }
      sub_10076D540(*(void *)(v0 + 528), _s15AppExRepBackendC12BackendStateOMa);
      uint64_t v36 = (void *)swift_task_alloc();
      *(void *)(v0 + 864) = v36;
      *uint64_t v36 = v0;
      v36[1] = sub_10075F3BC;
      uint64_t v37 = *(void *)(v0 + 440);
      return sub_10075C85C(v37);
    case 4u:
      uint64_t v38 = *(void *)(v0 + 592);
      uint64_t v39 = *(void *)(v0 + 584);
      uint64_t v40 = *(void *)(v0 + 376);
      sub_10076D4D8(*(void *)(v0 + 440), v38, type metadata accessor for CRLUSDRendering.SceneRequest);
      swift_storeEnumTagMultiPayload();
      uint64_t v41 = *(void *)(v1 + v2);
      sub_10076D4D8(v38, v39, _s15AppExRepBackendC12BackendStateOMa);
      uint64_t v42 = *(void (**)(uint64_t))(*(void *)v41 + 136);
      swift_retain();
      v42(v39);
      swift_release();
      uint64_t v43 = OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE15AppExRepBackend_delegate;
      *(void *)(v0 + 656) = OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE15AppExRepBackend_delegate;
      uint64_t v44 = v40 + v43;
      if (swift_unknownObjectWeakLoadStrong())
      {
        uint64_t v45 = *(void *)(v0 + 376);
        uint64_t v46 = *(void *)(v44 + 8);
        uint64_t v47 = swift_getObjectType();
        uint64_t v48 = v45 + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE15AppExRepBackend_uuid;
        sub_10075C584((uint64_t *)(v0 + 384));
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v46 + 8))(v48, v0 + 384, v47, v46);
        swift_unknownObjectRelease();
        sub_10076E600((void *)(v0 + 384), (void (*)(void, void, void, void, void, void, void))sub_100767658);
      }
      sub_10076D540(*(void *)(v0 + 592), _s15AppExRepBackendC12BackendStateOMa);
      type metadata accessor for CRLUSDRenderingExtensionConnector();
      swift_initStaticObject();
      uint64_t v49 = (void *)swift_task_alloc();
      *(void *)(v0 + 664) = v49;
      *uint64_t v49 = v0;
      v49[1] = sub_10075D644;
      return sub_100A093C4();
    default:
      sub_10076D540(*(void *)(v0 + 600), _s15AppExRepBackendC12BackendStateOMa);
LABEL_5:
      uint64_t v21 = *(void *)(v0 + 440);
      uint64_t v22 = swift_task_alloc();
      *(void *)(v0 + 832) = v22;
      *(void *)(v22 + 16) = v21;
      uint64_t v23 = swift_task_alloc();
      *(void *)(v0 + 840) = v23;
      *(void *)(v23 + 16) = v21;
      uint64_t v24 = (void *)swift_task_alloc();
      *(void *)(v0 + 848) = v24;
      void *v24 = v0;
      v24[1] = sub_10075F15C;
      return sub_100760220((uint64_t)sub_10076D9FC, v22, (uint64_t)&unk_10167EA30, v23);
  }
}

uint64_t sub_10075D644(uint64_t a1)
{
  uint64_t v4 = (void *)*v2;
  uint64_t v5 = (void *)*v2;
  v4[84] = a1;
  v4[85] = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v6 = v4[79];
    uint64_t v7 = v4[78];
    return _swift_task_switch(sub_10075F4F8, v7, v6);
  }
  else
  {
    unint64_t v8 = (void *)v4[47];
    uint64_t v13 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_10167EA38 + dword_10167EA38);
    swift_retain();
    id v9 = v8;
    uint64_t v10 = (void *)swift_task_alloc();
    v4[86] = v10;
    *uint64_t v10 = v5;
    v10[1] = sub_10075D7FC;
    uint64_t v11 = v4[47];
    return v13(a1, v11);
  }
}

uint64_t sub_10075D7FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = (void *)*v5;
  uint64_t v7 = (void *)*v5;
  v7[87] = a1;
  v7[88] = a2;
  v7[89] = a3;
  v7[90] = a4;
  v7[91] = v4;
  swift_task_dealloc();
  uint64_t v8 = v6[79];
  uint64_t v9 = v6[78];
  if (v4) {
    uint64_t v10 = sub_10075DF40;
  }
  else {
    uint64_t v10 = sub_10075D950;
  }
  return _swift_task_switch(v10, v9, v8);
}

uint64_t sub_10075D950()
{
  uint64_t v1 = *(void (**)(uint64_t))(**(void **)(*(void *)(v0 + 376) + *(void *)(v0 + 648)) + 128);
  uint64_t v2 = swift_retain();
  v1(v2);
  swift_release();
  if (swift_getEnumCaseMultiPayload())
  {
    uint64_t v3 = *(void **)(v0 + 712);
    uint64_t v4 = *(void *)(v0 + 576);
    swift_release();
    swift_release();
    swift_release();
    swift_release();

    swift_release();
    sub_10076D540(v4, _s15AppExRepBackendC12BackendStateOMa);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
    return v5();
  }
  else
  {
    sub_10076DB40(*(void *)(v0 + 576), *(void *)(v0 + 504), type metadata accessor for CRLUSDRendering.SceneRequest);
    if (qword_10166FB00 != -1) {
      swift_once();
    }
    uint64_t v32 = *(void **)(v0 + 712);
    uint64_t v33 = *(void *)(v0 + 720);
    uint64_t v7 = *(void *)(v0 + 696);
    double v8 = *(double *)(v0 + 640);
    uint64_t v34 = *(void *)(v0 + 648);
    uint64_t v35 = *(void *)(v0 + 584);
    uint64_t v9 = *(void *)(v0 + 568);
    uint64_t v10 = *(void *)(v0 + 376);
    uint64_t v31 = *(void *)(v0 + 704);
    swift_beginAccess();
    uint64_t v11 = (void *)static OS_os_log.crlThreeDimensionalObjects;
    *(void *)(v0 + 736) = sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_10117D8C0;
    uint64_t v13 = OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE15AppExRepBackend_uuid;
    *(void *)(v0 + 744) = OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE15AppExRepBackend_uuid;
    uint64_t v14 = v10 + v13;
    id v15 = v11;
    uint64_t v30 = v14;
    UUID.uuidString.getter();
    String.index(_:offsetBy:)();
    String.subscript.getter();
    swift_bridgeObjectRelease();
    uint64_t v16 = static String._fromSubstring(_:)();
    uint64_t v18 = v17;
    swift_bridgeObjectRelease();
    *(void *)(inited + 56) = &type metadata for String;
    unint64_t v19 = sub_100528BE4();
    *(void *)(v0 + 752) = v19;
    *(void *)(inited + 64) = v19;
    *(void *)(inited + 32) = v16;
    *(void *)(inited + 40) = v18;
    CFTimeInterval v20 = CACurrentMediaTime();
    *(void *)(inited + 96) = &type metadata for Double;
    *(void *)(inited + 104) = &protocol witness table for Double;
    *(CFTimeInterval *)(inited + 72) = (v20 - v8) * 1000.0;
    uint64_t v21 = static os_log_type_t.debug.getter();
    sub_100BAC898((uint64_t)v15, (uint64_t)&_mh_execute_header, v21, (uint64_t)"(AppEx:CoreRE) [%{public}@] loadScene() +%{public}.0fms: extension renderer connected", 85, 2, inited);
    swift_setDeallocating();
    *(void *)(v0 + 760) = sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();

    *(void *)uint64_t v9 = v7;
    *(void *)(v9 + 8) = v31;
    *(void *)(v9 + 16) = v32;
    *(void *)(v9 + 24) = v33;
    *(void *)(v9 + 32) = 1;
    *(_OWORD *)(v9 + 40) = 0u;
    *(_OWORD *)(v9 + 56) = 0u;
    *(_OWORD *)(v9 + 72) = xmmword_10118D180;
    swift_storeEnumTagMultiPayload();
    uint64_t v22 = *(void *)(v10 + v34);
    sub_10076D4D8(v9, v35, _s15AppExRepBackendC12BackendStateOMa);
    uint64_t v23 = *(void (**)(uint64_t))(*(void *)v22 + 136);
    swift_retain();
    swift_retain();
    id v24 = v32;
    swift_retain();
    swift_retain();
    v23(v35);
    swift_release();
    if (swift_unknownObjectWeakLoadStrong())
    {
      uint64_t v25 = *(void *)(*(void *)(v0 + 376) + *(void *)(v0 + 656) + 8);
      uint64_t ObjectType = swift_getObjectType();
      sub_10075C584((uint64_t *)(v0 + 320));
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v25 + 8))(v30, v0 + 320, ObjectType, v25);
      swift_unknownObjectRelease();
      sub_10076E600((void *)(v0 + 320), (void (*)(void, void, void, void, void, void, void))sub_100767658);
    }
    uint64_t v27 = *(void *)(v0 + 672);
    sub_10076D540(*(void *)(v0 + 568), _s15AppExRepBackendC12BackendStateOMa);
    sub_10075F9C0(v27);
    *(void *)(v0 + 768) = static MainActor.shared.getter();
    uint64_t v29 = dispatch thunk of Actor.unownedExecutor.getter();
    *(void *)(v0 + 776) = v29;
    *(void *)(v0 + 784) = v28;
    return _swift_task_switch(sub_10075E084, v29, v28);
  }
}

uint64_t sub_10075DF40()
{
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10075E084()
{
  uint64_t v1 = v0[88];
  uint64_t v2 = v0[63];
  uint64_t v3 = swift_task_alloc();
  v0[99] = v3;
  *(void *)(v3 + 16) = v1;
  *(void *)(v3 + 24) = v2;
  uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_10167E9C0 + dword_10167E9C0);
  uint64_t v4 = (void *)swift_task_alloc();
  v0[100] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_10075E184;
  return v6(0x6E65635364616F6CLL, 0xED0000293A5F2865, (uint64_t)sub_10076DB24, v3);
}

uint64_t sub_10075E184()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 808) = v0;
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 784);
  uint64_t v4 = *(void *)(v2 + 776);
  if (v0) {
    uint64_t v5 = sub_10075E808;
  }
  else {
    uint64_t v5 = sub_10075E2DC;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_10075E2DC()
{
  swift_release();
  uint64_t v1 = *(void *)(v0 + 632);
  uint64_t v2 = *(void *)(v0 + 624);
  return _swift_task_switch(sub_10075E344, v2, v1);
}

uint64_t sub_10075E344()
{
  uint64_t v1 = *(void *)(v0 + 584);
  uint64_t v2 = *(void (**)(uint64_t))(**(void **)(*(void *)(v0 + 376) + *(void *)(v0 + 648)) + 128);
  uint64_t v3 = swift_retain();
  v2(v3);
  swift_release();
  char v4 = sub_10075FB84(v1);
  sub_10076D540(v1, _s15AppExRepBackendC12BackendStateOMa);
  if (v4)
  {
    uint64_t v5 = *(void *)(v0 + 752);
    uint64_t v27 = *(void **)(v0 + 712);
    double v6 = *(double *)(v0 + 640);
    uint64_t v28 = *(void *)(v0 + 504);
    swift_release();
    uint64_t v7 = (void *)static OS_os_log.crlThreeDimensionalObjects;
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_10117D8C0;
    id v9 = v7;
    UUID.uuidString.getter();
    String.index(_:offsetBy:)();
    String.subscript.getter();
    swift_bridgeObjectRelease();
    uint64_t v10 = static String._fromSubstring(_:)();
    uint64_t v12 = v11;
    swift_bridgeObjectRelease();
    *(void *)(inited + 56) = &type metadata for String;
    *(void *)(inited + 64) = v5;
    *(void *)(inited + 32) = v10;
    *(void *)(inited + 40) = v12;
    CFTimeInterval v13 = CACurrentMediaTime();
    *(void *)(inited + 96) = &type metadata for Double;
    *(void *)(inited + 104) = &protocol witness table for Double;
    *(CFTimeInterval *)(inited + 72) = (v13 - v6) * 1000.0;
    uint64_t v14 = static os_log_type_t.debug.getter();
    sub_100BAC898((uint64_t)v9, (uint64_t)&_mh_execute_header, v14, (uint64_t)"(AppEx:CoreRE) [%{public}@] loadScene() +%{public}.0fms: scene loaded", 69, 2, inited);
    swift_setDeallocating();
    swift_arrayDestroy();

    swift_release();
    swift_release();

    swift_release();
    swift_release();
    sub_10076D540(v28, type metadata accessor for CRLUSDRendering.SceneRequest);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    id v15 = *(uint64_t (**)(void))(v0 + 8);
    return v15();
  }
  else
  {
    uint64_t v18 = *(void *)(v0 + 464);
    uint64_t v17 = *(void *)(v0 + 472);
    uint64_t v19 = *(void *)(v0 + 456);
    CFTimeInterval v20 = *(uint64_t (**)(uint64_t))(**(void **)(*(void *)(v0 + 376) + *(void *)(v0 + 648)) + 152);
    uint64_t v21 = swift_retain();
    uint64_t v22 = v20(v21);
    swift_release();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 16))(v17, v22 + *(void *)(*(void *)v22 + 96), v19);
    swift_release();
    AsyncStream.makeAsyncIterator()();
    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v17, v19);
    uint64_t v23 = static MainActor.shared.getter();
    *(void *)(v0 + 816) = v23;
    id v24 = (void *)swift_task_alloc();
    *(void *)(v0 + 824) = v24;
    void *v24 = v0;
    v24[1] = sub_10075EA00;
    uint64_t v25 = *(void *)(v0 + 480);
    uint64_t v26 = *(void *)(v0 + 448);
    return AsyncStream.Iterator.next(isolation:)(v26, v23, &protocol witness table for MainActor, v25);
  }
}

uint64_t sub_10075E808()
{
  swift_release();
  uint64_t v1 = *(void *)(v0 + 632);
  uint64_t v2 = *(void *)(v0 + 624);
  return _swift_task_switch(sub_10075E870, v2, v1);
}

uint64_t sub_10075E870()
{
  uint64_t v1 = (void *)v0[89];
  uint64_t v2 = v0[63];
  swift_release();
  swift_release();
  swift_release();

  swift_release();
  swift_release();
  sub_10076D540(v2, type metadata accessor for CRLUSDRendering.SceneRequest);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t sub_10075EA00()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_release();
  uint64_t v2 = *(void *)(v1 + 632);
  uint64_t v3 = *(void *)(v1 + 624);
  return _swift_task_switch(sub_10075EB44, v3, v2);
}

uint64_t sub_10075EB44()
{
  uint64_t v1 = *(void *)(v0 + 448);
  if ((*(unsigned int (**)(uint64_t, uint64_t, void))(*(void *)(v0 + 520) + 48))(v1, 1, *(void *)(v0 + 512)) == 1)
  {
LABEL_23:
    (*(void (**)(void, void))(*(void *)(v0 + 488) + 8))(*(void *)(v0 + 496), *(void *)(v0 + 480));
    uint64_t v23 = *(void *)(v0 + 752);
    uint64_t v35 = *(void **)(v0 + 712);
    double v24 = *(double *)(v0 + 640);
    uint64_t v39 = *(void *)(v0 + 504);
    swift_release();
    uint64_t v25 = (void *)static OS_os_log.crlThreeDimensionalObjects;
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_10117D8C0;
    id v27 = v25;
    UUID.uuidString.getter();
    String.index(_:offsetBy:)();
    String.subscript.getter();
    swift_bridgeObjectRelease();
    uint64_t v28 = static String._fromSubstring(_:)();
    uint64_t v30 = v29;
    swift_bridgeObjectRelease();
    *(void *)(inited + 56) = &type metadata for String;
    *(void *)(inited + 64) = v23;
    *(void *)(inited + 32) = v28;
    *(void *)(inited + 40) = v30;
    CFTimeInterval v31 = CACurrentMediaTime();
    *(void *)(inited + 96) = &type metadata for Double;
    *(void *)(inited + 104) = &protocol witness table for Double;
    *(CFTimeInterval *)(inited + 72) = (v31 - v24) * 1000.0;
    uint64_t v32 = static os_log_type_t.debug.getter();
    sub_100BAC898((uint64_t)v27, (uint64_t)&_mh_execute_header, v32, (uint64_t)"(AppEx:CoreRE) [%{public}@] loadScene() +%{public}.0fms: scene loaded", 69, 2, inited);
    swift_setDeallocating();
    swift_arrayDestroy();

    swift_release();
    swift_release();

    swift_release();
    swift_release();
    sub_10076D540(v39, type metadata accessor for CRLUSDRendering.SceneRequest);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v33 = *(uint64_t (**)(void))(v0 + 8);
    return v33();
  }
  uint64_t v2 = *(void *)(v0 + 560);
  uint64_t v3 = *(void *)(v0 + 552);
  sub_10076DB40(v1, v2, _s15AppExRepBackendC12BackendStateOMa);
  sub_10076D4D8(v2, v3, _s15AppExRepBackendC12BackendStateOMa);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    uint64_t v12 = *(void *)(v0 + 536);
    sub_10076D4D8(*(void *)(v0 + 552), v12, _s15AppExRepBackendC12BackendStateOMa);
    CFTimeInterval v13 = *(void **)(v12 + 16);
    unint64_t v37 = *(void *)(v12 + 40);
    uint64_t v38 = *(void *)(v12 + 32);
    uint64_t v14 = *(void *)(v12 + 56);
    uint64_t v36 = *(void *)(v12 + 48);
    uint64_t v15 = *(void *)(v12 + 64);
    unint64_t v11 = *(void *)(v12 + 72);
    uint64_t v16 = *(void *)(v12 + 80);
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();

    swift_release();
    swift_release();

    swift_release();
    if (v11 >> 62 == 2)
    {
      uint64_t v8 = v36;
      unint64_t v7 = v37;
      uint64_t v9 = v14;
      uint64_t v10 = v15;
      if (v16)
      {
        uint64_t v6 = v38;
      }
      else
      {
        uint64_t v6 = v38;
        if (v11 == 0x8000000000000000) {
          goto LABEL_12;
        }
      }
    }
    else
    {
      unint64_t v7 = v37;
      uint64_t v6 = v38;
      LOBYTE(v8) = v36;
      uint64_t v9 = v14;
      uint64_t v10 = v15;
    }
LABEL_21:
    sub_100767658(v6, v7, v8, v9, v10, v11);
    goto LABEL_22;
  }
  if (EnumCaseMultiPayload != 1)
  {
LABEL_22:
    uint64_t v22 = *(void *)(v0 + 560);
    sub_10076D540(*(void *)(v0 + 552), _s15AppExRepBackendC12BackendStateOMa);
    sub_10076D540(v22, _s15AppExRepBackendC12BackendStateOMa);
    goto LABEL_23;
  }
  uint64_t v5 = *(void *)(v0 + 544);
  sub_10076D4D8(*(void *)(v0 + 552), v5, _s15AppExRepBackendC12BackendStateOMa);
  swift_release();
  swift_release();

  swift_release();
  uint64_t v6 = *(void *)(v5 + 32);
  unint64_t v7 = *(void *)(v5 + 40);
  uint64_t v8 = *(void *)(v5 + 48);
  uint64_t v9 = *(void *)(v5 + 56);
  uint64_t v10 = *(void *)(v5 + 64);
  unint64_t v11 = *(void *)(v5 + 72);
  if (!(v11 >> 62))
  {
    sub_100767658(v6, v7, v8, v9, v10, *(void *)(v5 + 72));
    goto LABEL_17;
  }
  if (v11 >> 62 != 2 || *(void *)(v5 + 80) || v11 != 0x8000000000000000) {
    goto LABEL_21;
  }
LABEL_12:
  if (v6 != 2 || v8 | v7 | v9 | v10) {
    goto LABEL_21;
  }
LABEL_17:
  uint64_t v17 = *(void *)(v0 + 560);
  sub_10076D540(*(void *)(v0 + 552), _s15AppExRepBackendC12BackendStateOMa);
  sub_10076D540(v17, _s15AppExRepBackendC12BackendStateOMa);
  uint64_t v18 = static MainActor.shared.getter();
  *(void *)(v0 + 816) = v18;
  uint64_t v19 = (void *)swift_task_alloc();
  *(void *)(v0 + 824) = v19;
  void *v19 = v0;
  v19[1] = sub_10075EA00;
  uint64_t v20 = *(void *)(v0 + 480);
  uint64_t v21 = *(void *)(v0 + 448);
  return AsyncStream.Iterator.next(isolation:)(v21, v18, &protocol witness table for MainActor, v20);
}

uint64_t sub_10075F15C()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 856) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 632);
    uint64_t v4 = *(void *)(v2 + 624);
    uint64_t v5 = sub_10075F768;
  }
  else
  {
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v3 = *(void *)(v2 + 632);
    uint64_t v4 = *(void *)(v2 + 624);
    uint64_t v5 = sub_10075F28C;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_10075F28C()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10075F3BC()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 872) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 632);
  uint64_t v4 = *(void *)(v2 + 624);
  if (v0) {
    uint64_t v5 = sub_10075F630;
  }
  else {
    uint64_t v5 = sub_10076EDD8;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_10075F4F8()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10075F630()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10075F768()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10075F8B8()
{
  uint64_t v1 = v0;
  uint64_t v2 = (uint64_t *)(*(void *)(v0 + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE15AppExRepBackend_metalLayer)
                 + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE10MetalLayer_textureData);
  uint64_t v3 = *v2;
  uint64_t v4 = v2[1];
  uint64_t v5 = v2[2];
  uint64_t v6 = (void *)v2[3];
  *(_OWORD *)uint64_t v2 = 0u;
  *((_OWORD *)v2 + 1) = 0u;
  sub_10076E18C(v3, v4, v5, v6);
  sub_1009EA62C();
  swift_allocObject();
  swift_unknownObjectWeakInit();
  swift_retain();
  sub_1005057FC(&qword_10167EA78);
  sub_10076E1F4();
  uint64_t v7 = Publisher<>.sink(receiveValue:)();
  swift_release();
  swift_release();
  *(void *)(v1 + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE15AppExRepBackend_firstFrameRenderedSubscription) = v7;
  return swift_release();
}

uint64_t sub_10075F9C0(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v3 = swift_allocObject();
  swift_weakInit();
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = v2;
  *(void *)(v4 + 24) = v3;
  uint64_t v5 = *(void **)(a1 + 16);
  CFTimeInterval v13 = sub_10076DC58;
  uint64_t v14 = v4;
  uint64_t v9 = _NSConcreteStackBlock;
  uint64_t v10 = *(void *)"";
  unint64_t v11 = sub_100679958;
  uint64_t v12 = &unk_101512898;
  uint64_t v6 = _Block_copy(&v9);
  swift_retain();
  swift_release();
  [v5 setInterruptionHandler:v6];
  _Block_release(v6);
  CFTimeInterval v13 = sub_10076DC58;
  uint64_t v14 = v4;
  uint64_t v9 = _NSConcreteStackBlock;
  uint64_t v10 = *(void *)"";
  unint64_t v11 = sub_100679958;
  uint64_t v12 = &unk_1015128C0;
  uint64_t v7 = _Block_copy(&v9);
  swift_retain();
  swift_release();
  [v5 setInvalidationHandler:v7];
  _Block_release(v7);
  return swift_release();
}

uint64_t sub_10075FB84(uint64_t a1)
{
  uint64_t v2 = _s15AppExRepBackendC12BackendStateOMa(0);
  __chkstk_darwin(v2, v3);
  uint64_t v5 = (uint64_t *)((char *)&v38 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v6, v7);
  uint64_t v9 = (char *)&v38 - v8;
  __chkstk_darwin(v10, v11);
  CFTimeInterval v13 = (char *)&v38 - v12;
  sub_10076D4D8(a1, (uint64_t)&v38 - v12, _s15AppExRepBackendC12BackendStateOMa);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    sub_10076D4D8((uint64_t)v13, (uint64_t)v5, _s15AppExRepBackendC12BackendStateOMa);
    uint64_t v25 = (void *)v5[2];
    uint64_t v26 = v5[4];
    unint64_t v40 = v5[5];
    uint64_t v41 = v26;
    uint64_t v27 = v5[7];
    uint64_t v39 = v5[6];
    uint64_t v28 = v5[8];
    unint64_t v29 = v5[9];
    uint64_t v30 = v5[10];
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    CFTimeInterval v31 = (void *)v5[14];
    swift_release();

    swift_release();
    swift_release();

    if (v29 >> 62)
    {
      LOBYTE(v17) = v39;
      unint64_t v16 = v40;
      BOOL v33 = v29 >> 62 == 2 && v30 == 0 && v29 == 0x8000000000000000;
      uint64_t v15 = v41;
      if (v33 && v41 == 2 && (v39 | v40 | v27 | v28) == 0) {
        goto LABEL_34;
      }
    }
    else
    {
      unint64_t v16 = v40;
      uint64_t v15 = v41;
      LOBYTE(v17) = v39;
    }
    uint64_t v18 = v27;
    uint64_t v19 = v28;
    unint64_t v20 = v29;
LABEL_38:
    sub_100767658(v15, v16, v17, v18, v19, v20);
    goto LABEL_39;
  }
  if (EnumCaseMultiPayload != 1)
  {
LABEL_39:
    uint64_t v36 = 1;
    goto LABEL_40;
  }
  sub_10076D4D8((uint64_t)v13, (uint64_t)v9, _s15AppExRepBackendC12BackendStateOMa);
  swift_release();
  swift_release();

  swift_release();
  uint64_t v15 = *((void *)v9 + 4);
  unint64_t v16 = *((void *)v9 + 5);
  uint64_t v17 = *((void *)v9 + 6);
  uint64_t v18 = *((void *)v9 + 7);
  uint64_t v19 = *((void *)v9 + 8);
  unint64_t v20 = *((void *)v9 + 9);
  if (!(v20 >> 62))
  {
    sub_100767658(v15, v16, v17, v18, v19, v20);
    uint64_t v36 = 0;
    goto LABEL_40;
  }
  if (v20 >> 62 != 2
    || *((void *)v9 + 10) != 0
    || v20 != 0x8000000000000000
    || v15 != 2
    || (v17 | v16 | v18 | v19) != 0)
  {
    goto LABEL_38;
  }
LABEL_34:
  uint64_t v36 = 0;
LABEL_40:
  sub_10076D540((uint64_t)v13, _s15AppExRepBackendC12BackendStateOMa);
  return v36;
}

uint64_t sub_10075FE20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[2] = a3;
  v6[3] = a6;
  v6[4] = type metadata accessor for MainActor();
  v6[5] = static MainActor.shared.getter();
  v6[6] = static MainActor.shared.getter();
  uint64_t v8 = dispatch thunk of Actor.unownedExecutor.getter();
  v6[7] = v8;
  v6[8] = v7;
  return _swift_task_switch(sub_10075FEC8, v8, v7);
}

uint64_t sub_10075FEC8()
{
  uint64_t v1 = swift_task_alloc();
  *(void *)(v0 + 72) = v1;
  *(_OWORD *)(v1 + 16) = *(_OWORD *)(v0 + 16);
  uint64_t v4 = (uint64_t (*)(uint64_t, unint64_t, void (*)(void **, uint64_t), uint64_t))((char *)&dword_10167E9C0 + dword_10167E9C0);
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 80) = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_10075FFC0;
  return v4(0x6E65635364616F6CLL, 0xED0000293A5F2865, sub_10076EE00, v1);
}

uint64_t sub_10075FFC0()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 88) = v0;
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 64);
  uint64_t v4 = *(void *)(v2 + 56);
  if (v0) {
    uint64_t v5 = sub_10076019C;
  }
  else {
    uint64_t v5 = sub_100760118;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_100760118()
{
  swift_release();
  uint64_t v1 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_10076EDD4, v1, v0);
}

uint64_t sub_10076019C()
{
  swift_release();
  uint64_t v1 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_10076EE44, v1, v0);
}

uint64_t sub_100760220(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[12] = a4;
  v5[13] = v4;
  v5[10] = a2;
  v5[11] = a3;
  v5[9] = a1;
  type metadata accessor for CRLUSDRendering.SceneRequest(0);
  v5[14] = swift_task_alloc();
  v5[15] = _s15AppExRepBackendC12BackendStateOMa(0);
  v5[16] = swift_task_alloc();
  v5[17] = swift_task_alloc();
  v5[18] = swift_task_alloc();
  type metadata accessor for MainActor();
  v5[19] = static MainActor.shared.getter();
  uint64_t v7 = dispatch thunk of Actor.unownedExecutor.getter();
  v5[20] = v7;
  v5[21] = v6;
  return _swift_task_switch(sub_100760338, v7, v6);
}

uint64_t sub_100760338()
{
  uint64_t v1 = v0[13];
  uint64_t v2 = OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE15AppExRepBackend__backendState;
  uint64_t v3 = *(void (**)(uint64_t))(**(void **)(v1
                                                    + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE15AppExRepBackend__backendState)
                                      + 128);
  uint64_t v4 = swift_retain();
  v3(v4);
  swift_release();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v19 = (uint64_t *)v0[18];
      uint64_t v21 = *v19;
      uint64_t v20 = v19[1];
      uint64_t v22 = v19[2];
      uint64_t v23 = v19[3];
      uint64_t v24 = v19[4];
      unint64_t v25 = v19[5];
      uint64_t v26 = v19[6];
      uint64_t v27 = v19[7];
      uint64_t v28 = v19[8];
      unint64_t v29 = v19[9];
      goto LABEL_7;
    case 2u:
      uint64_t v30 = (uint64_t *)v0[18];
      uint64_t v21 = *v30;
      uint64_t v20 = v30[1];
      uint64_t v22 = v30[2];
      uint64_t v23 = v30[3];
      unint64_t v40 = v30[5];
      uint64_t v42 = v30[4];
      uint64_t v31 = v30[7];
      uint64_t v38 = v30[8];
      uint64_t v39 = v30[6];
      unint64_t v37 = v30[9];
      uint64_t v32 = (void *)v30[14];
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();

      unint64_t v25 = v40;
      uint64_t v24 = v42;
      uint64_t v28 = v38;
      LOBYTE(v26) = v39;
      uint64_t v27 = v31;
      unint64_t v29 = v37;
LABEL_7:
      sub_100767658(v24, v25, v26, v27, v28, v29);
      v0[24] = v22;
      v0[25] = v23;
      v0[22] = v21;
      v0[23] = v20;
      uint64_t v43 = (uint64_t (*)(void *, uint64_t, uint64_t, uint64_t, uint64_t))(v0[11] + *(int *)v0[11]);
      BOOL v33 = (void *)swift_task_alloc();
      v0[26] = v33;
      *BOOL v33 = v0;
      v33[1] = sub_1007607A0;
      return v43(v0 + 28, v21, v20, v22, v23);
    case 3u:
      uint64_t v35 = v0[18];
      swift_release();
      sub_1007676B8(*(void *)v35, *(void *)(v35 + 8), *(unsigned char *)(v35 + 16));
      goto LABEL_12;
    case 4u:
      swift_release();
LABEL_12:
      uint64_t v18 = 1;
      break;
    default:
      uint64_t v5 = v0[18];
      uint64_t v7 = v0[16];
      uint64_t v6 = v0[17];
      uint64_t v8 = v0[14];
      uint64_t v41 = v0[13];
      uint64_t v9 = (void (*)(uint64_t))v0[9];
      swift_release();
      sub_10076DB40(v5, v8, type metadata accessor for CRLUSDRendering.SceneRequest);
      v9(v8);
      sub_10076D4D8(v8, v6, type metadata accessor for CRLUSDRendering.SceneRequest);
      swift_storeEnumTagMultiPayload();
      uint64_t v10 = *(void *)(v1 + v2);
      sub_10076D4D8(v6, v7, _s15AppExRepBackendC12BackendStateOMa);
      uint64_t v11 = *(void (**)(uint64_t))(*(void *)v10 + 136);
      swift_retain();
      v11(v7);
      swift_release();
      uint64_t v12 = v41 + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE15AppExRepBackend_delegate;
      if (swift_unknownObjectWeakLoadStrong())
      {
        uint64_t v13 = v0[13];
        uint64_t v14 = *(void *)(v12 + 8);
        uint64_t ObjectType = swift_getObjectType();
        uint64_t v16 = v13 + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE15AppExRepBackend_uuid;
        sub_10075C584(v0 + 2);
        (*(void (**)(uint64_t, void *, uint64_t, uint64_t))(v14 + 8))(v16, v0 + 2, ObjectType, v14);
        swift_unknownObjectRelease();
        sub_10076E600(v0 + 2, (void (*)(void, void, void, void, void, void, void))sub_100767658);
      }
      uint64_t v17 = v0[14];
      sub_10076D540(v0[17], _s15AppExRepBackendC12BackendStateOMa);
      sub_10076D540(v17, type metadata accessor for CRLUSDRendering.SceneRequest);
      uint64_t v18 = 0;
      break;
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v36 = (uint64_t (*)(uint64_t))v0[1];
  return v36(v18);
}

uint64_t sub_1007607A0()
{
  uint64_t v2 = *(void **)v1;
  *(void *)(*(void *)v1 + 216) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = v2[20];
    uint64_t v4 = v2[21];
    uint64_t v5 = sub_100760974;
  }
  else
  {
    uint64_t v6 = (void *)v2[24];
    swift_release();
    swift_release();

    swift_release();
    uint64_t v3 = v2[20];
    uint64_t v4 = v2[21];
    uint64_t v5 = sub_1007608DC;
  }
  return _swift_task_switch(v5, v3, v4);
}

uint64_t sub_1007608DC()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1(0);
}

uint64_t sub_100760974()
{
  uint64_t v1 = *(void **)(v0 + 192);
  swift_release();
  swift_release();

  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_100760A3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[13] = a4;
  v5[14] = v4;
  v5[11] = a2;
  v5[12] = a3;
  v5[10] = a1;
  type metadata accessor for CRLUSDRendering.SceneRequest(0);
  v5[15] = swift_task_alloc();
  v5[16] = _s15AppExRepBackendC12BackendStateOMa(0);
  v5[17] = swift_task_alloc();
  v5[18] = swift_task_alloc();
  v5[19] = swift_task_alloc();
  type metadata accessor for MainActor();
  v5[20] = static MainActor.shared.getter();
  uint64_t v7 = dispatch thunk of Actor.unownedExecutor.getter();
  v5[21] = v7;
  v5[22] = v6;
  return _swift_task_switch(sub_100760B54, v7, v6);
}

uint64_t sub_100760B54()
{
  void (*v9)(uint64_t *__return_ptr, uint64_t);
  uint64_t v10;
  void (*v11)(uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t ObjectType;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  void *v32;
  void *v33;
  uint64_t v35;
  uint64_t (*v36)(uint64_t);
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t (*v43)(void *, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v44;
  void *v45;
  uint64_t v46;

  uint64_t v45 = v0;
  uint64_t v1 = v0[14];
  uint64_t v2 = OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE15AppExRepBackend__backendState;
  uint64_t v3 = *(void (**)(uint64_t))(**(void **)(v1
                                                    + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE15AppExRepBackend__backendState)
                                      + 128);
  uint64_t v4 = swift_retain();
  v3(v4);
  swift_release();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v19 = (uint64_t *)v0[19];
      uint64_t v21 = *v19;
      uint64_t v20 = v19[1];
      uint64_t v22 = v19[2];
      uint64_t v23 = v19[3];
      uint64_t v24 = v19[4];
      unint64_t v25 = v19[5];
      uint64_t v26 = v19[6];
      uint64_t v27 = v19[7];
      uint64_t v28 = v19[8];
      unint64_t v29 = v19[9];
      goto LABEL_7;
    case 2u:
      uint64_t v30 = (uint64_t *)v0[19];
      uint64_t v21 = *v30;
      uint64_t v20 = v30[1];
      uint64_t v22 = v30[2];
      uint64_t v23 = v30[3];
      unint64_t v40 = v30[5];
      uint64_t v42 = v30[4];
      uint64_t v31 = v30[7];
      uint64_t v38 = v30[8];
      uint64_t v39 = v30[6];
      unint64_t v37 = v30[9];
      uint64_t v32 = (void *)v30[14];
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();

      unint64_t v25 = v40;
      uint64_t v24 = v42;
      uint64_t v28 = v38;
      LOBYTE(v26) = v39;
      uint64_t v27 = v31;
      unint64_t v29 = v37;
LABEL_7:
      sub_100767658(v24, v25, v26, v27, v28, v29);
      v0[25] = v22;
      v0[26] = v23;
      v0[23] = v21;
      v0[24] = v20;
      uint64_t v43 = (uint64_t (*)(void *, uint64_t, uint64_t, uint64_t, uint64_t))(v0[12] + *(int *)v0[12]);
      BOOL v33 = (void *)swift_task_alloc();
      v0[27] = v33;
      *BOOL v33 = v0;
      v33[1] = sub_100760FC0;
      return v43(v0 + 9, v21, v20, v22, v23);
    case 3u:
      uint64_t v35 = v0[19];
      swift_release();
      sub_1007676B8(*(void *)v35, *(void *)(v35 + 8), *(unsigned char *)(v35 + 16));
      goto LABEL_12;
    case 4u:
      swift_release();
LABEL_12:
      uint64_t v18 = 1;
      break;
    default:
      uint64_t v5 = v0[19];
      uint64_t v7 = v0[17];
      uint64_t v6 = v0[18];
      uint64_t v8 = v0[15];
      uint64_t v41 = v0[14];
      uint64_t v9 = (void (*)(uint64_t *__return_ptr, uint64_t))v0[10];
      swift_release();
      sub_10076DB40(v5, v8, type metadata accessor for CRLUSDRendering.SceneRequest);
      v9(&v44, v8);
      sub_10076D4D8(v8, v6, type metadata accessor for CRLUSDRendering.SceneRequest);
      swift_storeEnumTagMultiPayload();
      uint64_t v10 = *(void *)(v1 + v2);
      sub_10076D4D8(v6, v7, _s15AppExRepBackendC12BackendStateOMa);
      uint64_t v11 = *(void (**)(uint64_t))(*(void *)v10 + 136);
      swift_retain();
      v11(v7);
      swift_release();
      uint64_t v12 = v41 + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE15AppExRepBackend_delegate;
      if (swift_unknownObjectWeakLoadStrong())
      {
        uint64_t v13 = v0[14];
        uint64_t v14 = *(void *)(v12 + 8);
        uint64_t ObjectType = swift_getObjectType();
        uint64_t v16 = v13 + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE15AppExRepBackend_uuid;
        sub_10075C584(v0 + 2);
        (*(void (**)(uint64_t, void *, uint64_t, uint64_t))(v14 + 8))(v16, v0 + 2, ObjectType, v14);
        swift_unknownObjectRelease();
        sub_10076E600(v0 + 2, (void (*)(void, void, void, void, void, void, void))sub_100767658);
      }
      uint64_t v17 = v0[15];
      sub_10076D540(v0[18], _s15AppExRepBackendC12BackendStateOMa);
      sub_10076D540(v17, type metadata accessor for CRLUSDRendering.SceneRequest);
      uint64_t v18 = v44;
      break;
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v36 = (uint64_t (*)(uint64_t))v0[1];
  return v36(v18);
}

uint64_t sub_100760FC0()
{
  uint64_t v2 = *(void **)v1;
  *(void *)(*(void *)v1 + 224) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = v2[21];
    uint64_t v4 = v2[22];
    uint64_t v5 = sub_100761198;
  }
  else
  {
    uint64_t v6 = (void *)v2[25];
    swift_release();
    swift_release();

    swift_release();
    uint64_t v3 = v2[21];
    uint64_t v4 = v2[22];
    uint64_t v5 = sub_1007610FC;
  }
  return _swift_task_switch(v5, v3, v4);
}

uint64_t sub_1007610FC()
{
  swift_release();
  uint64_t v1 = *(void *)(v0 + 72);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v2(v1);
}

uint64_t sub_100761198()
{
  uint64_t v1 = *(void **)(v0 + 200);
  swift_release();
  swift_release();

  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_100761260(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  uint64_t v7 = v5;
  v7[47] = a3;
  v7[48] = v4;
  v7[46] = a2;
  v7[49] = _s15AppExRepBackendC12BackendStateOMa(0);
  v7[50] = swift_task_alloc();
  v7[51] = swift_task_alloc();
  v7[52] = type metadata accessor for MainActor();
  v7[53] = static MainActor.shared.getter();
  uint64_t v11 = (uint64_t (*)(uint64_t))((char *)a4 + *a4);
  uint64_t v9 = (void *)swift_task_alloc();
  v7[54] = v9;
  *uint64_t v9 = v7;
  v9[1] = sub_1007613B0;
  return v11(a1);
}

uint64_t sub_1007613B0()
{
  *(void *)(*(void *)v1 + 440) = v0;
  swift_task_dealloc();
  uint64_t v3 = dispatch thunk of Actor.unownedExecutor.getter();
  if (v0) {
    uint64_t v4 = sub_100761580;
  }
  else {
    uint64_t v4 = sub_100761508;
  }
  return _swift_task_switch(v4, v3, v2);
}

uint64_t sub_100761508()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100761580()
{
  swift_release();
  if (qword_10166FB00 != -1) {
    swift_once();
  }
  uint64_t v1 = *(void *)(v0 + 440);
  uint64_t v2 = *(void *)(v0 + 376);
  uint64_t v3 = *(void *)(v0 + 384);
  uint64_t v28 = *(void *)(v0 + 368);
  swift_beginAccess();
  uint64_t v4 = (void *)static OS_os_log.crlThreeDimensionalObjects;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117DF40;
  uint64_t v6 = v3 + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE15AppExRepBackend_uuid;
  id v29 = v4;
  uint64_t v27 = v6;
  UUID.uuidString.getter();
  String.index(_:offsetBy:)();
  String.subscript.getter();
  swift_bridgeObjectRelease();
  uint64_t v7 = static String._fromSubstring(_:)();
  uint64_t v9 = v8;
  swift_bridgeObjectRelease();
  *(void *)(inited + 56) = &type metadata for String;
  unint64_t v10 = sub_100528BE4();
  *(void *)(inited + 32) = v7;
  *(void *)(inited + 40) = v9;
  *(void *)(inited + 96) = &type metadata for String;
  *(void *)(inited + 104) = v10;
  *(void *)(inited + 64) = v10;
  *(void *)(inited + 72) = v28;
  *(void *)(inited + 80) = v2;
  swift_getErrorValue();
  swift_bridgeObjectRetain();
  uint64_t v11 = Error.localizedDescription.getter();
  *(void *)(inited + 136) = &type metadata for String;
  *(void *)(inited + 144) = v10;
  *(void *)(inited + 112) = v11;
  *(void *)(inited + 120) = v12;
  uint64_t v13 = static os_log_type_t.error.getter();
  sub_100BAC898((uint64_t)v29, (uint64_t)&_mh_execute_header, v13, (uint64_t)"(AppEx:CoreRE) [%{public}@] %{public}@ error: %{public}@", 56, 2, inited);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  *(void *)(v0 + 360) = v1;
  swift_errorRetain();
  sub_1005057FC(&qword_101672BD0);
  if (swift_dynamicCast())
  {
    uint64_t v14 = *(void *)(v0 + 296);
    uint64_t v15 = *(void *)(v0 + 304);
    char v16 = *(unsigned char *)(v0 + 312);
  }
  else
  {
    *(void *)(v0 + 336) = *(void *)(v0 + 440);
    swift_errorRetain();
    if (swift_dynamicCast())
    {
      uint64_t v14 = *(void *)(v0 + 320);
      uint64_t v15 = *(void *)(v0 + 328);
      char v16 = 4;
    }
    else
    {
      swift_getErrorValue();
      uint64_t v14 = Error.localizedDescription.getter();
      char v16 = 2;
    }
  }
  uint64_t v17 = *(void *)(v0 + 400);
  uint64_t v18 = *(void *)(v0 + 408);
  uint64_t v19 = *(void *)(v0 + 384);
  *(void *)uint64_t v18 = v14;
  *(void *)(v18 + 8) = v15;
  *(unsigned char *)(v18 + 16) = v16;
  swift_storeEnumTagMultiPayload();
  uint64_t v20 = *(void *)(v19 + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE15AppExRepBackend__backendState);
  sub_10076D4D8(v18, v17, _s15AppExRepBackendC12BackendStateOMa);
  uint64_t v21 = *(void (**)(uint64_t))(*(void *)v20 + 136);
  swift_retain();
  v21(v17);
  swift_release();
  uint64_t v22 = v19 + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE15AppExRepBackend_delegate;
  if (swift_unknownObjectWeakLoadStrong())
  {
    uint64_t v23 = *(void *)(v22 + 8);
    uint64_t ObjectType = swift_getObjectType();
    sub_10075C584((uint64_t *)(v0 + 16));
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v23 + 8))(v27, v0 + 16, ObjectType, v23);
    swift_unknownObjectRelease();
    sub_10076E600((void *)(v0 + 16), (void (*)(void, void, void, void, void, void, void))sub_100767658);
  }
  sub_10076D540(*(void *)(v0 + 408), _s15AppExRepBackendC12BackendStateOMa);
  swift_willThrow();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v25 = *(uint64_t (**)(void))(v0 + 8);
  return v25();
}

uint64_t sub_1007619D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[2] = a3;
  v6[3] = a6;
  v6[4] = type metadata accessor for MainActor();
  v6[5] = static MainActor.shared.getter();
  v6[6] = static MainActor.shared.getter();
  uint64_t v8 = dispatch thunk of Actor.unownedExecutor.getter();
  v6[7] = v8;
  v6[8] = v7;
  return _swift_task_switch(sub_100761A78, v8, v7);
}

uint64_t sub_100761A78()
{
  uint64_t v1 = swift_task_alloc();
  *(void *)(v0 + 72) = v1;
  *(_OWORD *)(v1 + 16) = *(_OWORD *)(v0 + 16);
  uint64_t v4 = (uint64_t (*)(uint64_t, unint64_t, void (*)(void **, uint64_t), uint64_t))((char *)&dword_10167E9C0 + dword_10167E9C0);
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 80) = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_100761B70;
  return v4(0x6353657461647075, 0xEF293A5F28656E65, sub_10076D934, v1);
}

uint64_t sub_100761B70()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 88) = v0;
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 64);
  uint64_t v4 = *(void *)(v2 + 56);
  if (v0) {
    uint64_t v5 = sub_100761DB0;
  }
  else {
    uint64_t v5 = sub_100761CC8;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_100761CC8()
{
  swift_release();
  uint64_t v1 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_100761D4C, v1, v0);
}

uint64_t sub_100761D4C()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100761DB0()
{
  swift_release();
  uint64_t v1 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_100761E34, v1, v0);
}

uint64_t sub_100761E34()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100761E98(uint64_t a1, char a2)
{
  *(unsigned char *)(v3 + 112) = a2;
  *(void *)(v3 + 16) = a1;
  *(void *)(v3 + 24) = v2;
  *(void *)(v3 + 32) = type metadata accessor for MainActor();
  *(void *)(v3 + 40) = static MainActor.shared.getter();
  uint64_t v5 = dispatch thunk of Actor.unownedExecutor.getter();
  *(void *)(v3 + 48) = v5;
  *(void *)(v3 + 56) = v4;
  return _swift_task_switch(sub_100761F38, v5, v4);
}

uint64_t sub_100761F38()
{
  char v1 = *(unsigned char *)(v0 + 112);
  uint64_t v2 = *(void *)(v0 + 16);
  sub_1005057FC(&qword_10167E9D0);
  uint64_t v3 = swift_allocObject();
  *(void *)(v0 + 64) = v3;
  *(_OWORD *)(v3 + 16) = xmmword_10117E810;
  *(void *)(v3 + 32) = v2;
  *(unsigned char *)(v3 + 40) = v1;
  *(void *)(v0 + 72) = static MainActor.shared.getter();
  uint64_t v5 = dispatch thunk of Actor.unownedExecutor.getter();
  *(void *)(v0 + 80) = v5;
  *(void *)(v0 + 88) = v4;
  return _swift_task_switch(sub_100762004, v5, v4);
}

uint64_t sub_100762004()
{
  id v1 = *(id *)(v0 + 24);
  swift_bridgeObjectRetain();
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 96) = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_1007620CC;
  uint64_t v3 = *(void *)(v0 + 64);
  uint64_t v4 = *(void *)(v0 + 24);
  return sub_10076C450(0xD000000000000010, 0x800000010124DD50, v4, v4, v3);
}

uint64_t sub_1007620CC()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *(void **)(*v1 + 24);
  *(void *)(*v1 + 104) = v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();

  uint64_t v4 = *(void *)(v2 + 88);
  uint64_t v5 = *(void *)(v2 + 80);
  if (v0) {
    uint64_t v6 = sub_1007622B0;
  }
  else {
    uint64_t v6 = sub_100762244;
  }
  return _swift_task_switch(v6, v5, v4);
}

uint64_t sub_100762244()
{
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v1 = *(void *)(v0 + 48);
  uint64_t v2 = *(void *)(v0 + 56);
  return _swift_task_switch(sub_100761D4C, v1, v2);
}

uint64_t sub_1007622B0()
{
  swift_release();
  uint64_t v1 = *(void *)(v0 + 48);
  uint64_t v2 = *(void *)(v0 + 56);
  return _swift_task_switch(sub_100762314, v1, v2);
}

uint64_t sub_100762314()
{
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100762384(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[34] = a6;
  v7[35] = a7;
  v7[33] = a3;
  v7[36] = type metadata accessor for MainActor();
  v7[37] = static MainActor.shared.getter();
  uint64_t v9 = dispatch thunk of Actor.unownedExecutor.getter();
  v7[38] = v9;
  v7[39] = v8;
  return _swift_task_switch(sub_100762424, v9, v8);
}

uint64_t sub_100762424()
{
  if (qword_10166FB00 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v1 = (void *)static OS_os_log.crlThreeDimensionalObjects;
  v0[40] = sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117D8C0;
  v0[41] = OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE15AppExRepBackend_uuid;
  id v3 = v1;
  UUID.uuidString.getter();
  String.index(_:offsetBy:)();
  String.subscript.getter();
  swift_bridgeObjectRelease();
  uint64_t v4 = static String._fromSubstring(_:)();
  uint64_t v6 = v5;
  swift_bridgeObjectRelease();
  *(void *)(inited + 56) = &type metadata for String;
  unint64_t v7 = sub_100528BE4();
  v0[42] = v7;
  *(void *)(inited + 64) = v7;
  *(void *)(inited + 32) = v4;
  *(void *)(inited + 40) = v6;
  swift_bridgeObjectRetain();
  uint64_t v8 = Array.description.getter();
  uint64_t v10 = v9;
  swift_bridgeObjectRelease();
  *(void *)(inited + 96) = &type metadata for String;
  *(void *)(inited + 104) = v7;
  *(void *)(inited + 72) = v8;
  *(void *)(inited + 80) = v10;
  uint64_t v11 = static os_log_type_t.debug.getter();
  sub_100BAC898((uint64_t)v3, (uint64_t)&_mh_execute_header, v11, (uint64_t)"(AppEx:CoreRE) [%{public}@] BEGIN performActions(%{public}@)", 60, 2, inited);
  swift_setDeallocating();
  v0[43] = sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  v0[44] = static MainActor.shared.getter();
  uint64_t v13 = dispatch thunk of Actor.unownedExecutor.getter();
  v0[45] = v13;
  v0[46] = v12;
  return _swift_task_switch(sub_100762684, v13, v12);
}

uint64_t sub_100762684()
{
  uint64_t v1 = v0[35];
  uint64_t v2 = v0[33];
  uint64_t v3 = swift_task_alloc();
  v0[47] = v3;
  *(void *)(v3 + 16) = v2;
  *(void *)(v3 + 24) = v1;
  uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_10167E9C0 + dword_10167E9C0);
  uint64_t v4 = (void *)swift_task_alloc();
  v0[48] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_10076277C;
  return v6(0xD000000000000012, 0x800000010124DDB0, (uint64_t)sub_10076D718, v3);
}

uint64_t sub_10076277C()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 392) = v0;
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 368);
  uint64_t v4 = *(void *)(v2 + 360);
  if (v0) {
    uint64_t v5 = sub_1007628D4;
  }
  else {
    uint64_t v5 = sub_10076299C;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_1007628D4()
{
  swift_release();
  uint64_t v1 = *(void *)(v0 + 304);
  uint64_t v2 = *(void *)(v0 + 312);
  return _swift_task_switch(sub_100762938, v1, v2);
}

uint64_t sub_100762938()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10076299C()
{
  swift_release();
  uint64_t v1 = *(void *)(v0 + 304);
  uint64_t v2 = *(void *)(v0 + 312);
  return _swift_task_switch(sub_100762A00, v1, v2);
}

uint64_t sub_100762A00()
{
  uint64_t v1 = *(void *)(v0 + 336);
  swift_release();
  uint64_t v2 = (void *)static OS_os_log.crlThreeDimensionalObjects;
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117D8C0;
  id v4 = v2;
  UUID.uuidString.getter();
  String.index(_:offsetBy:)();
  String.subscript.getter();
  swift_bridgeObjectRelease();
  uint64_t v5 = static String._fromSubstring(_:)();
  uint64_t v7 = v6;
  swift_bridgeObjectRelease();
  *(void *)(inited + 56) = &type metadata for String;
  *(void *)(inited + 64) = v1;
  *(void *)(inited + 32) = v5;
  *(void *)(inited + 40) = v7;
  swift_bridgeObjectRetain();
  uint64_t v8 = Array.description.getter();
  uint64_t v10 = v9;
  swift_bridgeObjectRelease();
  *(void *)(inited + 96) = &type metadata for String;
  *(void *)(inited + 104) = v1;
  *(void *)(inited + 72) = v8;
  *(void *)(inited + 80) = v10;
  uint64_t v11 = static os_log_type_t.debug.getter();
  sub_100BAC898((uint64_t)v4, (uint64_t)&_mh_execute_header, v11, (uint64_t)"(AppEx:CoreRE) [%{public}@] END performActions(%{public}@) END", 62, 2, inited);
  swift_setDeallocating();
  swift_arrayDestroy();

  uint64_t v12 = *(uint64_t (**)(void))(v0 + 8);
  return v12();
}

uint64_t sub_100762BC8(uint64_t a1, uint64_t a2, float a3)
{
  *(float *)(v3 + 328) = a3;
  *(void *)(v3 + 224) = a1;
  *(void *)(v3 + 232) = a2;
  type metadata accessor for MainActor();
  *(void *)(v3 + 240) = static MainActor.shared.getter();
  uint64_t v5 = dispatch thunk of Actor.unownedExecutor.getter();
  *(void *)(v3 + 248) = v5;
  *(void *)(v3 + 256) = v4;
  return _swift_task_switch(sub_100762C64, v5, v4);
}

uint64_t sub_100762C64()
{
  if (qword_10166FB00 != -1) {
    swift_once();
  }
  int v1 = *(_DWORD *)(v0 + 328);
  swift_beginAccess();
  uint64_t v2 = (void *)static OS_os_log.crlThreeDimensionalObjects;
  *(void *)(v0 + 264) = sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117E810;
  *(void *)(v0 + 272) = OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE15AppExRepBackend_uuid;
  id v4 = v2;
  UUID.uuidString.getter();
  String.index(_:offsetBy:)();
  String.subscript.getter();
  swift_bridgeObjectRelease();
  uint64_t v5 = static String._fromSubstring(_:)();
  uint64_t v7 = v6;
  swift_bridgeObjectRelease();
  *(void *)(inited + 56) = &type metadata for String;
  unint64_t v8 = sub_100528BE4();
  *(void *)(v0 + 280) = v8;
  *(void *)(inited + 64) = v8;
  *(void *)(inited + 32) = v5;
  *(void *)(inited + 40) = v7;
  uint64_t v9 = static os_log_type_t.debug.getter();
  sub_100BAC898((uint64_t)v4, (uint64_t)&_mh_execute_header, v9, (uint64_t)"(AppEx:CoreRE) [%{public}@] BEGIN takeSnapshot()", 48, 2, inited);
  swift_setDeallocating();
  *(void *)(v0 + 288) = sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  uint64_t v10 = swift_task_alloc();
  *(void *)(v0 + 296) = v10;
  *(_DWORD *)(v10 + 16) = v1;
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v0 + 304) = v11;
  *uint64_t v11 = v0;
  v11[1] = sub_100762EDC;
  return sub_100760A3C((uint64_t)sub_100505AEC, 0, (uint64_t)&unk_10167E980, v10);
}

uint64_t sub_100762EDC(uint64_t a1)
{
  id v4 = *(void **)v2;
  *(void *)(*(void *)v2 + 312) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = v4[31];
    uint64_t v6 = v4[32];
    uint64_t v7 = sub_100763204;
  }
  else
  {
    v4[40] = a1;
    swift_task_dealloc();
    uint64_t v5 = v4[31];
    uint64_t v6 = v4[32];
    uint64_t v7 = sub_100763008;
  }
  return _swift_task_switch(v7, v5, v6);
}

uint64_t sub_100763008()
{
  uint64_t v1 = v0[40];
  uint64_t v2 = v0[35];
  uint64_t v15 = (void *)v0[28];
  swift_release();
  if (v1 == 1) {
    uint64_t v3 = 0;
  }
  else {
    uint64_t v3 = v1;
  }
  id v4 = (void *)static OS_os_log.crlThreeDimensionalObjects;
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117D8C0;
  id v6 = v4;
  UUID.uuidString.getter();
  String.index(_:offsetBy:)();
  String.subscript.getter();
  swift_bridgeObjectRelease();
  uint64_t v7 = static String._fromSubstring(_:)();
  uint64_t v9 = v8;
  swift_bridgeObjectRelease();
  *(void *)(inited + 56) = &type metadata for String;
  *(void *)(inited + 64) = v2;
  *(void *)(inited + 32) = v7;
  *(void *)(inited + 40) = v9;
  unint64_t v10 = 0x6572206567616D69;
  if (!v3) {
    unint64_t v10 = 0xD000000000000011;
  }
  unint64_t v11 = 0x800000010124DCB0;
  if (v3) {
    unint64_t v11 = 0xEE0064656E727574;
  }
  *(void *)(inited + 96) = &type metadata for String;
  *(void *)(inited + 104) = v2;
  *(void *)(inited + 72) = v10;
  *(void *)(inited + 80) = v11;
  uint64_t v12 = static os_log_type_t.debug.getter();
  sub_100BAC898((uint64_t)v6, (uint64_t)&_mh_execute_header, v12, (uint64_t)"(AppEx:CoreRE) [%{public}@] END takeSnapshot() (%@)", 51, 2, inited);
  swift_setDeallocating();
  swift_arrayDestroy();

  void *v15 = v3;
  uint64_t v13 = (uint64_t (*)(void))v0[1];
  return v13();
}

uint64_t sub_100763204()
{
  swift_release();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100763274(uint64_t a1, float a2, uint64_t a3, uint64_t a4)
{
  *(float *)(v4 + 104) = a2;
  *(void *)(v4 + 16) = a1;
  *(void *)(v4 + 24) = a4;
  *(void *)(v4 + 32) = type metadata accessor for MainActor();
  *(void *)(v4 + 40) = static MainActor.shared.getter();
  *(void *)(v4 + 48) = static MainActor.shared.getter();
  uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
  *(void *)(v4 + 56) = v6;
  *(void *)(v4 + 64) = v5;
  return _swift_task_switch(sub_100763320, v6, v5);
}

uint64_t sub_100763320()
{
  int v1 = *(_DWORD *)(v0 + 104);
  uint64_t v2 = swift_task_alloc();
  *(void *)(v0 + 72) = v2;
  *(_DWORD *)(v2 + 16) = v1;
  uint64_t v5 = (uint64_t (*)(unint64_t, unint64_t, void (*)(void **, uint64_t), uint64_t))((char *)&dword_10167E990 + dword_10167E990);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 80) = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_100763410;
  return v5(0xD000000000000011, 0x800000010124DD10, sub_10076D5A0, v2);
}

uint64_t sub_100763410(uint64_t a1)
{
  uint64_t v4 = *(void **)v2;
  *(void *)(*(void *)v2 + 88) = v1;
  swift_task_dealloc();
  if (v1)
  {
    swift_task_dealloc();
    uint64_t v5 = v4[7];
    uint64_t v6 = v4[8];
    uint64_t v7 = sub_100761DB0;
  }
  else
  {
    v4[12] = a1;
    swift_task_dealloc();
    uint64_t v5 = v4[7];
    uint64_t v6 = v4[8];
    uint64_t v7 = sub_100763558;
  }
  return _swift_task_switch(v7, v5, v6);
}

uint64_t sub_100763558()
{
  swift_release();
  uint64_t v1 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_1007635DC, v1, v0);
}

uint64_t sub_1007635DC()
{
  uint64_t v1 = v0[12];
  uint64_t v2 = (void *)v0[2];
  swift_release();
  *uint64_t v2 = v1;
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t sub_10076364C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_1005057FC(&qword_101672BB0);
  __chkstk_darwin(v3 - 8, v4);
  uint64_t v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v6, 1, 1, v7);
  type metadata accessor for MainActor();
  swift_retain();
  uint64_t v8 = static MainActor.shared.getter();
  uint64_t v9 = (void *)swift_allocObject();
  v9[2] = v8;
  v9[3] = &protocol witness table for MainActor;
  v9[4] = a2;
  sub_1005912D0((uint64_t)v6, (uint64_t)&unk_10167EA90, (uint64_t)v9);
  return swift_release();
}

uint64_t sub_100763764(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[12] = a4;
  v4[13] = _s15AppExRepBackendC12BackendStateOMa(0);
  v4[14] = swift_task_alloc();
  type metadata accessor for MainActor();
  v4[15] = static MainActor.shared.getter();
  uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_10076382C, v6, v5);
}

uint64_t sub_10076382C()
{
  swift_release();
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v2 = (char *)Strong;
    if (*(unsigned char *)(*(void *)(Strong + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE15AppExRepBackend_metalLayer)
                  + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE10MetalLayer_hasDrawnFrame) == 1)
    {
      uint64_t v3 = *(void (**)(uint64_t))(**(void **)(Strong
                                                        + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE15AppExRepBackend__backendState)
                                          + 128);
      uint64_t v4 = swift_retain();
      v3(v4);
      swift_release();
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      uint64_t v6 = (void *)v0[14];
      if (EnumCaseMultiPayload != 2)
      {

        sub_10076D540((uint64_t)v6, _s15AppExRepBackendC12BackendStateOMa);
        goto LABEL_11;
      }
      uint64_t v7 = (void *)v6[2];
      unint64_t v8 = v6[5];
      uint64_t v9 = v6[6];
      uint64_t v10 = v6[7];
      uint64_t v11 = v6[8];
      unint64_t v20 = v6[9];
      uint64_t v21 = v6[4];
      uint64_t v12 = (void *)v6[14];
      swift_release();
      swift_release();

      swift_release();
      sub_100767658(v21, v8, v9, v10, v11, v20);
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();

      uint64_t v13 = &v2[OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE15AppExRepBackend_delegate];
      if (swift_unknownObjectWeakLoadStrong())
      {
        uint64_t v14 = *((void *)v13 + 1);
        uint64_t ObjectType = swift_getObjectType();
        uint64_t v16 = &v2[OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE15AppExRepBackend_uuid];
        sub_10075C584(v0 + 2);
        (*(void (**)(char *, void *, uint64_t, uint64_t))(v14 + 8))(v16, v0 + 2, ObjectType, v14);
        swift_unknownObjectRelease();
        sub_10076E600(v0 + 2, (void (*)(void, void, void, void, void, void, void))sub_100767658);
      }
      uint64_t v17 = OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE15AppExRepBackend_firstFrameRenderedSubscription;
      if (*(void *)&v2[OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE15AppExRepBackend_firstFrameRenderedSubscription])
      {
        swift_retain();
        AnyCancellable.cancel()();
        swift_release();
      }
      *(void *)&v2[v17] = 0;
      swift_release();
    }
  }
LABEL_11:
  swift_task_dealloc();
  uint64_t v18 = (uint64_t (*)(void))v0[1];
  return v18();
}

uint64_t sub_100763ADC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1005057FC(&qword_101672BB0);
  __chkstk_darwin(v4 - 8, v5);
  uint64_t v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v7, 1, 1, v8);
  type metadata accessor for MainActor();
  swift_retain();
  swift_retain();
  uint64_t v9 = static MainActor.shared.getter();
  uint64_t v10 = (void *)swift_allocObject();
  v10[2] = v9;
  v10[3] = &protocol witness table for MainActor;
  v10[4] = a1;
  v10[5] = a2;
  sub_1005912D0((uint64_t)v7, (uint64_t)&unk_10167EA48, (uint64_t)v10);
  return swift_release();
}

uint64_t sub_100763C00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[15] = a4;
  v5[16] = a5;
  v5[17] = _s15AppExRepBackendC12BackendStateOMa(0);
  v5[18] = swift_task_alloc();
  v5[19] = swift_task_alloc();
  v5[20] = swift_task_alloc();
  type metadata accessor for MainActor();
  v5[21] = static MainActor.shared.getter();
  uint64_t v7 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_100763CE4, v7, v6);
}

uint64_t sub_100763CE4()
{
  swift_release();
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v2 = (char *)Strong;
    swift_beginAccess();
    uint64_t v3 = swift_weakLoadStrong();
    if (!v3)
    {

      goto LABEL_14;
    }
    uint64_t v4 = v3;
    uint64_t v5 = OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE15AppExRepBackend__backendState;
    uint64_t v6 = *(void (**)(uint64_t))(**(void **)&v2[OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE15AppExRepBackend__backendState]
                                        + 128);
    uint64_t v7 = swift_retain();
    v6(v7);
    swift_release();
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      unint64_t v20 = (uint64_t *)v0[20];
      uint64_t v10 = *v20;
      uint64_t v13 = (void *)v20[2];
      uint64_t v14 = v20[4];
      unint64_t v15 = v20[5];
      uint64_t v16 = v20[6];
      uint64_t v17 = v20[7];
      uint64_t v18 = v20[8];
      unint64_t v19 = v20[9];
    }
    else
    {
      if (EnumCaseMultiPayload != 2)
      {
        uint64_t v29 = v0[20];

        swift_release();
        sub_10076D540(v29, _s15AppExRepBackendC12BackendStateOMa);
        goto LABEL_14;
      }
      uint64_t v9 = (uint64_t *)v0[20];
      uint64_t v10 = *v9;
      uint64_t v11 = (void *)v9[2];
      unint64_t v36 = v9[5];
      uint64_t v37 = v9[4];
      uint64_t v34 = v9[7];
      uint64_t v35 = v9[6];
      unint64_t v32 = v9[9];
      uint64_t v33 = v9[8];
      uint64_t v12 = (void *)v9[14];
      swift_unknownObjectRelease();
      uint64_t v13 = v11;
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();

      unint64_t v15 = v36;
      uint64_t v14 = v37;
      uint64_t v17 = v34;
      LOBYTE(v16) = v35;
      unint64_t v19 = v32;
      uint64_t v18 = v33;
    }
    sub_100767658(v14, v15, v16, v17, v18, v19);
    swift_release();

    swift_release();
    swift_release();
    if (v10 == v4)
    {
      uint64_t v22 = v0[18];
      uint64_t v21 = v0[19];
      *(_OWORD *)uint64_t v21 = xmmword_10118C770;
      *(unsigned char *)(v21 + 16) = 4;
      swift_storeEnumTagMultiPayload();
      uint64_t v23 = *(void *)&v2[v5];
      sub_10076D4D8(v21, v22, _s15AppExRepBackendC12BackendStateOMa);
      uint64_t v24 = *(void (**)(uint64_t))(*(void *)v23 + 136);
      swift_retain();
      v24(v22);
      swift_release();
      unint64_t v25 = &v2[OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE15AppExRepBackend_delegate];
      if (swift_unknownObjectWeakLoadStrong())
      {
        uint64_t v26 = *((void *)v25 + 1);
        uint64_t ObjectType = swift_getObjectType();
        uint64_t v28 = &v2[OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE15AppExRepBackend_uuid];
        sub_10075C584(v0 + 2);
        (*(void (**)(char *, void *, uint64_t, uint64_t))(v26 + 8))(v28, v0 + 2, ObjectType, v26);
        swift_unknownObjectRelease();
        sub_10076E600(v0 + 2, (void (*)(void, void, void, void, void, void, void))sub_100767658);
      }
      sub_10076D540(v0[19], _s15AppExRepBackendC12BackendStateOMa);
    }

    swift_release();
  }
LABEL_14:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v30 = (uint64_t (*)(void))v0[1];
  return v30();
}

uint64_t sub_100764074(uint64_t a1, uint64_t a2, char a3)
{
  *(void *)(v4 + 264) = v3;
  *(unsigned char *)(v4 + 536) = a3;
  *(void *)(v4 + 200) = a2;
  *(void *)(v4 + 104) = a1;
  sub_10076E5A4(a2, v4 + 272);
  uint64_t v5 = *(void *)(v4 + 280);
  *(void *)(v4 + 328) = *(void *)(v4 + 272);
  *(void *)(v4 + 392) = v5;
  long long v6 = *(_OWORD *)(v4 + 304);
  *(_OWORD *)(v4 + 400) = *(_OWORD *)(v4 + 288);
  *(_OWORD *)(v4 + 416) = v6;
  *(void *)(v4 + 432) = *(void *)(v4 + 320);
  *(void *)(v4 + 440) = _s15AppExRepBackendC12BackendStateOMa(0);
  *(void *)(v4 + 448) = swift_task_alloc();
  *(void *)(v4 + 456) = swift_task_alloc();
  *(void *)(v4 + 464) = swift_task_alloc();
  *(void *)(v4 + 472) = swift_task_alloc();
  *(void *)(v4 + 480) = swift_task_alloc();
  *(void *)(v4 + 488) = swift_task_alloc();
  type metadata accessor for MainActor();
  *(void *)(v4 + 496) = static MainActor.shared.getter();
  uint64_t v8 = dispatch thunk of Actor.unownedExecutor.getter();
  *(void *)(v4 + 504) = v8;
  *(void *)(v4 + 512) = v7;
  return _swift_task_switch(sub_1007641B4, v8, v7);
}

uint64_t sub_1007641B4()
{
  uint64_t v1 = *(void *)(v0 + 264) + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE15AppExRepBackend_uuid;
  if ((static UUID.== infix(_:_:)() & 1) == 0) {
    goto LABEL_8;
  }
  uint64_t v2 = *(void *)(v0 + 488);
  uint64_t v3 = *(void *)(v0 + 264);
  uint64_t v4 = OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE15AppExRepBackend__backendState;
  uint64_t v5 = *(void (**)(uint64_t))(**(void **)(v3
                                                    + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE15AppExRepBackend__backendState)
                                      + 128);
  uint64_t v6 = swift_retain();
  v5(v6);
  swift_release();
  sub_10075BEF8(v0 + 112);
  sub_10076D540(v2, _s15AppExRepBackendC12BackendStateOMa);
  sub_10076E770(v0 + 112);
  sub_10076E870(v0 + 112, v0 + 16);
  if (!*(void *)(v0 + 16))
  {
    uint64_t v18 = *(void *)(v0 + 472);
    uint64_t v17 = *(void *)(v0 + 480);
    unint64_t v19 = *(void (**)(uint64_t))(**(void **)(v3 + v4) + 128);
    uint64_t v20 = swift_retain();
    v19(v20);
    swift_release();
    sub_10076D4D8(v17, v18, _s15AppExRepBackendC12BackendStateOMa);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    sub_10076D540(v18, _s15AppExRepBackendC12BackendStateOMa);
    sub_10076D540(v17, _s15AppExRepBackendC12BackendStateOMa);
    if (EnumCaseMultiPayload != 3
      || (sub_10076E5A4(*(void *)(v0 + 200), v0 + 208), *(void *)(v0 + 248) >> 62 != 1))
    {
LABEL_8:
      swift_release();
      sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"_rendererStateChanged(_:state:acknowledge:)", 43, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/USD Rendering/CoreRE/CRLUSDRendering+CoreRE_AppExRepBackend.swift", 135, 2, 436, (uint64_t)"Unexpected remote USD renderer state change.", 44, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"_rendererStateChanged(_:state:acknowledge:)", 43, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/USD Rendering/CoreRE/CRLUSDRendering+CoreRE_AppExRepBackend.swift", 135, 2, 436);
      goto LABEL_19;
    }
  }
  uint64_t v7 = *(void (**)(uint64_t))(**(void **)(v3 + v4) + 128);
  uint64_t v8 = swift_retain();
  v7(v8);
  swift_release();
  int v9 = swift_getEnumCaseMultiPayload();
  if (v9 == 2)
  {
    uint64_t v22 = *(long long **)(v0 + 456);
    uint64_t v23 = *(void *)(v0 + 464);
    uint64_t v55 = *(void *)(v0 + 432);
    uint64_t v24 = *(void *)(v0 + 416);
    uint64_t v53 = *(void *)(v0 + 424);
    uint64_t v26 = *(void *)(v0 + 400);
    uint64_t v25 = *(void *)(v0 + 408);
    uint64_t v27 = *(void *)(v0 + 392);
    uint64_t v28 = *(void *)(v0 + 328);
    id v56 = *(void **)(v0 + 200);
    long long v46 = v22[1];
    long long v47 = *v22;
    long long v49 = *(long long *)((char *)v22 + 104);
    long long v51 = *(long long *)((char *)v22 + 88);
    sub_100767658(*((void *)v22 + 4), *((void *)v22 + 5), *((void *)v22 + 6), *((void *)v22 + 7), *((void *)v22 + 8), *((void *)v22 + 9));
    *(_OWORD *)uint64_t v23 = v47;
    *(_OWORD *)(v23 + 16) = v46;
    *(void *)(v23 + 32) = v28;
    *(void *)(v23 + 40) = v27;
    *(void *)(v23 + 48) = v26;
    *(void *)(v23 + 56) = v25;
    *(void *)(v23 + 64) = v24;
    *(void *)(v23 + 72) = v53;
    *(void *)(v23 + 80) = v55;
    *(_OWORD *)(v23 + 88) = v51;
    *(_OWORD *)(v23 + 104) = v49;
  }
  else
  {
    if (v9 != 1)
    {
      uint64_t v29 = *(void *)(v0 + 456);
      uint64_t v30 = *(void (**)(uint64_t))(**(void **)(v3 + v4) + 128);
      uint64_t v31 = swift_retain();
      v30(v31);
      swift_release();
      sub_10076D540(v29, _s15AppExRepBackendC12BackendStateOMa);
      goto LABEL_12;
    }
    uint64_t v10 = *(long long **)(v0 + 456);
    uint64_t v11 = *(void *)(v0 + 464);
    uint64_t v54 = *(void *)(v0 + 432);
    uint64_t v12 = *(void *)(v0 + 416);
    uint64_t v52 = *(void *)(v0 + 424);
    uint64_t v14 = *(void *)(v0 + 400);
    uint64_t v13 = *(void *)(v0 + 408);
    uint64_t v15 = *(void *)(v0 + 392);
    uint64_t v16 = *(void *)(v0 + 328);
    id v56 = *(void **)(v0 + 200);
    long long v48 = v10[1];
    long long v50 = *v10;
    sub_100767658(*((void *)v10 + 4), *((void *)v10 + 5), *((void *)v10 + 6), *((void *)v10 + 7), *((void *)v10 + 8), *((void *)v10 + 9));
    *(_OWORD *)uint64_t v11 = v50;
    *(_OWORD *)(v11 + 16) = v48;
    *(void *)(v11 + 32) = v16;
    *(void *)(v11 + 40) = v15;
    *(void *)(v11 + 48) = v14;
    *(void *)(v11 + 56) = v13;
    *(void *)(v11 + 64) = v12;
    *(void *)(v11 + 72) = v52;
    *(void *)(v11 + 80) = v54;
  }
  swift_storeEnumTagMultiPayload();
  sub_10076E600(v56, (void (*)(void, void, void, void, void, void, void))sub_1007673E8);
LABEL_12:
  if (*(unsigned char *)(v0 + 536) == 1)
  {
    unint64_t v32 = (void *)swift_task_alloc();
    *(void *)(v0 + 520) = v32;
    void *v32 = v0;
    v32[1] = sub_100764834;
    uint64_t v33 = *(void *)(v0 + 464);
    return sub_10075C06C(v33);
  }
  uint64_t v35 = *(void *)(v0 + 488);
  uint64_t v36 = *(void *)(v0 + 464);
  uint64_t v37 = *(void *)(v0 + 448);
  uint64_t v38 = *(void *)(v0 + 264);
  swift_release();
  sub_10076D4D8(v36, v37, _s15AppExRepBackendC12BackendStateOMa);
  uint64_t v39 = *(void *)(v3 + v4);
  sub_10076D4D8(v37, v35, _s15AppExRepBackendC12BackendStateOMa);
  unint64_t v40 = *(void (**)(uint64_t))(*(void *)v39 + 136);
  swift_retain();
  v40(v35);
  swift_release();
  uint64_t v41 = v38 + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE15AppExRepBackend_delegate;
  if (swift_unknownObjectWeakLoadStrong())
  {
    uint64_t v42 = *(void *)(v41 + 8);
    uint64_t ObjectType = swift_getObjectType();
    sub_10075C584((uint64_t *)(v0 + 336));
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v42 + 8))(v1, v0 + 336, ObjectType, v42);
    swift_unknownObjectRelease();
    sub_10076E600((void *)(v0 + 336), (void (*)(void, void, void, void, void, void, void))sub_100767658);
  }
  uint64_t v44 = *(void *)(v0 + 464);
  sub_10076D540(*(void *)(v0 + 448), _s15AppExRepBackendC12BackendStateOMa);
  sub_10076D540(v44, _s15AppExRepBackendC12BackendStateOMa);
LABEL_19:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v45 = *(uint64_t (**)(void))(v0 + 8);
  return v45();
}

uint64_t sub_100764834()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 528) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 512);
  uint64_t v4 = *(void *)(v2 + 504);
  if (v0) {
    uint64_t v5 = sub_100764A3C;
  }
  else {
    uint64_t v5 = sub_100764970;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_100764970()
{
  uint64_t v1 = *(void *)(v0 + 464);
  swift_release();
  sub_10076D540(v1, _s15AppExRepBackendC12BackendStateOMa);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_100764A3C()
{
  uint64_t v1 = *(void *)(v0 + 464);
  swift_release();
  sub_10076D540(v1, _s15AppExRepBackendC12BackendStateOMa);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

void sub_100764B08(uint64_t a1, void *a2)
{
  uint64_t v5 = type metadata accessor for UUID();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  __chkstk_darwin(v5, v8);
  uint64_t v9 = sub_1005057FC(&qword_101672BB0);
  __chkstk_darwin(v9 - 8, v10);
  uint64_t v12 = (char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (static UUID.== infix(_:_:)())
  {
    uint64_t v33 = a1;
    id v34 = v2;
    uint64_t v35 = v12;
    uint64_t v36 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v37 = v5;
    uint64_t v13 = a2;
    if (qword_10166FB00 != -1) {
      swift_once();
    }
    swift_beginAccess();
    uint64_t v14 = (void *)static OS_os_log.crlThreeDimensionalObjects;
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_10117D8C0;
    id v16 = v14;
    UUID.uuidString.getter();
    String.index(_:offsetBy:)();
    String.subscript.getter();
    swift_bridgeObjectRelease();
    uint64_t v17 = static String._fromSubstring(_:)();
    uint64_t v19 = v18;
    swift_bridgeObjectRelease();
    *(void *)(inited + 56) = &type metadata for String;
    unint64_t v20 = sub_100528BE4();
    *(void *)(inited + 64) = v20;
    *(void *)(inited + 32) = v17;
    *(void *)(inited + 40) = v19;
    sub_10076E5A4((uint64_t)v13, (uint64_t)v38);
    sub_10076E600(v13, (void (*)(void, void, void, void, void, void, void))sub_1007673E8);
    uint64_t v21 = String.init<A>(describing:)();
    *(void *)(inited + 96) = &type metadata for String;
    *(void *)(inited + 104) = v20;
    *(void *)(inited + 72) = v21;
    *(void *)(inited + 80) = v22;
    uint64_t v23 = static os_log_type_t.debug.getter();
    sub_100BAC898((uint64_t)v16, (uint64_t)&_mh_execute_header, v23, (uint64_t)"(AppEx:CoreRE) [%{public}@] new remote state: %{public}@", 56, 2, inited);
    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();

    uint64_t v24 = type metadata accessor for TaskPriority();
    uint64_t v25 = (uint64_t)v35;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v35, 1, 1, v24);
    uint64_t v26 = v36;
    uint64_t v27 = v37;
    (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v36, v33, v37);
    type metadata accessor for MainActor();
    sub_10076E600(v13, (void (*)(void, void, void, void, void, void, void))sub_1007673E8);
    id v28 = v34;
    uint64_t v29 = static MainActor.shared.getter();
    unint64_t v30 = (*(unsigned __int8 *)(v6 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
    uint64_t v31 = (char *)swift_allocObject();
    *((void *)v31 + 2) = v29;
    *((void *)v31 + 3) = &protocol witness table for MainActor;
    *((void *)v31 + 4) = v28;
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(&v31[v30], v26, v27);
    sub_10076E5A4((uint64_t)v13, (uint64_t)&v31[(v7 + v30 + 15) & 0xFFFFFFFFFFFFFFF0]);
    sub_1005912D0(v25, (uint64_t)&unk_10167EAF0, (uint64_t)v31);
    swift_release();
  }
  else
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"rendererStateChanged(_:state:)", 30, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/USD Rendering/CoreRE/CRLUSDRendering+CoreRE_AppExRepBackend.swift", 135, 2, 463, (uint64_t)"Unexpected remote USD renderer UUID.", 36, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"rendererStateChanged(_:state:)", 30, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/USD Rendering/CoreRE/CRLUSDRendering+CoreRE_AppExRepBackend.swift", 135, 2, 463);
  }
}

uint64_t sub_100764FE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[2] = type metadata accessor for MainActor();
  v6[3] = static MainActor.shared.getter();
  uint64_t v9 = (void *)swift_task_alloc();
  v6[4] = v9;
  *uint64_t v9 = v6;
  v9[1] = sub_1007650A8;
  return sub_100764074(a5, a6, 0);
}

uint64_t sub_1007650A8()
{
  *(void *)(*(void *)v1 + 40) = v0;
  swift_task_dealloc();
  uint64_t v3 = dispatch thunk of Actor.unownedExecutor.getter();
  if (v0) {
    uint64_t v4 = sub_100765204;
  }
  else {
    uint64_t v4 = sub_10053DDE4;
  }
  return _swift_task_switch(v4, v3, v2);
}

uint64_t sub_100765204()
{
  swift_release();
  swift_errorRelease();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100765270(uint64_t a1, uint64_t a2)
{
  v3[32] = a2;
  v3[33] = v2;
  v3[31] = a1;
  uint64_t v4 = type metadata accessor for UUID();
  v3[34] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v3[35] = v5;
  v3[36] = *(void *)(v5 + 64);
  v3[37] = swift_task_alloc();
  sub_1005057FC(&qword_101672BB0);
  v3[38] = swift_task_alloc();
  return _swift_task_switch(sub_10076536C, 0, 0);
}

uint64_t sub_10076536C()
{
  uint64_t v31 = v0;
  if (static UUID.== infix(_:_:)())
  {
    if (qword_10166FB00 != -1) {
      swift_once();
    }
    uint64_t v22 = v0[35];
    uint64_t v23 = v0[38];
    uint64_t v25 = v0[34];
    uint64_t v26 = v0[37];
    uint64_t v27 = (void *)v0[33];
    uint64_t v28 = v0[36];
    uint64_t v29 = (void *)v0[32];
    uint64_t v24 = v0[31];
    swift_beginAccess();
    uint64_t v1 = (void *)static OS_os_log.crlThreeDimensionalObjects;
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_10117DF40;
    id v3 = v1;
    UUID.uuidString.getter();
    String.index(_:offsetBy:)();
    String.subscript.getter();
    swift_bridgeObjectRelease();
    uint64_t v4 = static String._fromSubstring(_:)();
    uint64_t v6 = v5;
    swift_bridgeObjectRelease();
    *(void *)(inited + 56) = &type metadata for String;
    unint64_t v7 = sub_100528BE4();
    *(void *)(inited + 64) = v7;
    *(void *)(inited + 32) = v4;
    *(void *)(inited + 40) = v6;
    sub_10076E5A4((uint64_t)v29, (uint64_t)(v0 + 2));
    sub_10076E600(v29, (void (*)(void, void, void, void, void, void, void))sub_1007673E8);
    uint64_t v8 = String.init<A>(describing:)();
    *(void *)(inited + 96) = &type metadata for String;
    *(void *)(inited + 104) = v7;
    *(void *)(inited + 72) = v8;
    *(void *)(inited + 80) = v9;
    Hasher.init(_seed:)();
    sub_100AD39B4((uint64_t)v30);
    Swift::Int v10 = Hasher._finalize()();
    *(void *)(inited + 136) = &type metadata for Int;
    *(void *)(inited + 144) = &protocol witness table for Int;
    *(void *)(inited + 112) = v10 % 10000;
    uint64_t v11 = static os_log_type_t.debug.getter();
    sub_100BAC898((uint64_t)v3, (uint64_t)&_mh_execute_header, v11, (uint64_t)"(AppEx:CoreRE) [%{public}@] new remote state: %{public}@", 56, 2, inited);
    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();

    uint64_t v12 = type metadata accessor for TaskPriority();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v23, 1, 1, v12);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v22 + 16))(v26, v24, v25);
    type metadata accessor for MainActor();
    sub_10076E600(v29, (void (*)(void, void, void, void, void, void, void))sub_1007673E8);
    id v13 = v27;
    uint64_t v14 = static MainActor.shared.getter();
    unint64_t v15 = (*(unsigned __int8 *)(v22 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80);
    id v16 = (char *)swift_allocObject();
    *((void *)v16 + 2) = v14;
    *((void *)v16 + 3) = &protocol witness table for MainActor;
    *((void *)v16 + 4) = v13;
    (*(void (**)(char *, uint64_t, uint64_t))(v22 + 32))(&v16[v15], v26, v25);
    sub_10076E5A4((uint64_t)v29, (uint64_t)&v16[(v28 + v15 + 15) & 0xFFFFFFFFFFFFFFF0]);
    uint64_t v17 = sub_1006D9104(v23, (uint64_t)&unk_10167EAD0, (uint64_t)v16);
    v0[39] = v17;
    uint64_t v18 = (void *)swift_task_alloc();
    v0[40] = v18;
    uint64_t v19 = sub_1005057FC(&qword_101672BD0);
    *uint64_t v18 = v0;
    v18[1] = sub_1007658B8;
    return Task.value.getter(v19, v17, (char *)&type metadata for () + 8, v19, &protocol self-conformance witness table for Error);
  }
  else
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"rendererStateChangedWithAcknowledge(_:state:)", 45, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/USD Rendering/CoreRE/CRLUSDRendering+CoreRE_AppExRepBackend.swift", 135, 2, 485, (uint64_t)"Unexpected remote USD renderer UUID.", 36, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"rendererStateChangedWithAcknowledge(_:state:)", 45, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/USD Rendering/CoreRE/CRLUSDRendering+CoreRE_AppExRepBackend.swift", 135, 2, 485);
    swift_task_dealloc();
    swift_task_dealloc();
    unint64_t v20 = (uint64_t (*)(void))v0[1];
    return v20();
  }
}

uint64_t sub_1007658B8()
{
  *(void *)(*(void *)v1 + 328) = v0;
  swift_task_dealloc();
  if (v0)
  {
    swift_release();
    uint64_t v2 = sub_100765A48;
  }
  else
  {
    uint64_t v2 = sub_1007659D4;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1007659D4()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100765A48()
{
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100765AB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[2] = type metadata accessor for MainActor();
  v6[3] = static MainActor.shared.getter();
  uint64_t v9 = (void *)swift_task_alloc();
  v6[4] = v9;
  *uint64_t v9 = v6;
  v9[1] = sub_100765B7C;
  return sub_100764074(a5, a6, 1);
}

uint64_t sub_100765B7C()
{
  *(void *)(*(void *)v1 + 40) = v0;
  swift_task_dealloc();
  uint64_t v3 = dispatch thunk of Actor.unownedExecutor.getter();
  if (v0) {
    uint64_t v4 = sub_10076EE3C;
  }
  else {
    uint64_t v4 = sub_10076EE48;
  }
  return _swift_task_switch(v4, v3, v2);
}

uint64_t sub_100765CD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v6[27] = a5;
  v6[28] = v5;
  v6[25] = a3;
  v6[26] = a4;
  v6[24] = a2;
  v6[29] = _s15AppExRepBackendC12BackendStateOMa(0);
  v6[30] = swift_task_alloc();
  v6[31] = swift_task_alloc();
  type metadata accessor for MainActor();
  v6[32] = static MainActor.shared.getter();
  uint64_t v8 = dispatch thunk of Actor.unownedExecutor.getter();
  v6[33] = v8;
  v6[34] = v7;
  return _swift_task_switch(sub_100765DB8, v8, v7);
}

uint64_t sub_100765DB8()
{
  uint64_t v1 = *(void (**)(uint64_t))(**(void **)(v0[28]
                                                    + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE15AppExRepBackend__backendState)
                                      + 128);
  uint64_t v2 = swift_retain();
  v1(v2);
  swift_release();
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    uint64_t v5 = (long long *)v0[31];
    long long v41 = v5[1];
    long long v42 = *v5;
    uint64_t v39 = *((void *)v5 + 5);
    uint64_t v40 = *((void *)v5 + 4);
    uint64_t v37 = *((void *)v5 + 7);
    uint64_t v38 = *((void *)v5 + 6);
    uint64_t v35 = *((void *)v5 + 9);
    uint64_t v36 = *((void *)v5 + 8);
    uint64_t v34 = *((void *)v5 + 10);
    uint64_t v6 = (void *)*((void *)v5 + 14);
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();

    goto LABEL_5;
  }
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v4 = (long long *)v0[31];
    long long v41 = v4[1];
    long long v42 = *v4;
    uint64_t v39 = *((void *)v4 + 5);
    uint64_t v40 = *((void *)v4 + 4);
    uint64_t v37 = *((void *)v4 + 7);
    uint64_t v38 = *((void *)v4 + 6);
    uint64_t v35 = *((void *)v4 + 9);
    uint64_t v36 = *((void *)v4 + 8);
    uint64_t v34 = *((void *)v4 + 10);
LABEL_5:
    if (qword_10166FB00 != -1) {
      swift_once();
    }
    uint64_t v7 = v0[30];
    uint64_t v33 = (void *)v0[27];
    uint64_t v32 = v0[26];
    uint64_t v8 = (void *)v0[24];
    uint64_t v29 = v0[28];
    uint64_t v31 = v0[25];
    swift_beginAccess();
    uint64_t v9 = (void *)static OS_os_log.crlThreeDimensionalObjects;
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_10117DF40;
    id v11 = v9;
    UUID.uuidString.getter();
    String.index(_:offsetBy:)();
    String.subscript.getter();
    swift_bridgeObjectRelease();
    uint64_t v12 = static String._fromSubstring(_:)();
    uint64_t v14 = v13;
    swift_bridgeObjectRelease();
    *(void *)(inited + 56) = &type metadata for String;
    *(void *)(inited + 64) = sub_100528BE4();
    *(void *)(inited + 32) = v12;
    *(void *)(inited + 40) = v14;
    id v15 = [v8 width];
    *(void *)(inited + 96) = &type metadata for Int;
    *(void *)(inited + 104) = &protocol witness table for Int;
    *(void *)(inited + 72) = v15;
    id v16 = [v8 height];
    *(void *)(inited + 136) = &type metadata for Int;
    *(void *)(inited + 144) = &protocol witness table for Int;
    *(void *)(inited + 112) = v16;
    uint64_t v17 = static os_log_type_t.debug.getter();
    sub_100BAC898((uint64_t)v11, (uint64_t)&_mh_execute_header, v17, (uint64_t)"(AppEx:CoreRE) [%{public}@] new texture data received (%{public}lu x %{public}lu)", 81, 2, inited);
    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();

    uint64_t v18 = (uint64_t *)(*(void *)(v29 + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE15AppExRepBackend_metalLayer)
                    + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE10MetalLayer_textureData);
    uint64_t v19 = v18[1];
    uint64_t v30 = *v18;
    uint64_t v20 = v18[2];
    uint64_t v21 = (void *)v18[3];
    *uint64_t v18 = (uint64_t)v8;
    v18[1] = v31;
    v18[2] = v32;
    v18[3] = (uint64_t)v33;
    swift_unknownObjectRetain_n();
    swift_unknownObjectRetain_n();
    swift_unknownObjectRetain_n();
    id v22 = v33;
    sub_10076E18C(v30, v19, v20, v21);
    sub_1009EA62C();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();

    *(_OWORD *)uint64_t v7 = v42;
    *(_OWORD *)(v7 + 16) = v41;
    *(void *)(v7 + 32) = v40;
    *(void *)(v7 + 40) = v39;
    *(void *)(v7 + 48) = v38;
    *(void *)(v7 + 56) = v37;
    *(void *)(v7 + 64) = v36;
    *(void *)(v7 + 72) = v35;
    *(void *)(v7 + 80) = v34;
    *(void *)(v7 + 88) = v8;
    *(void *)(v7 + 96) = v31;
    *(void *)(v7 + 104) = v32;
    *(void *)(v7 + 112) = v22;
    swift_storeEnumTagMultiPayload();
    swift_unknownObjectRetain();
    swift_unknownObjectRetain();
    swift_unknownObjectRetain();
    id v23 = v22;
    uint64_t v24 = (void *)swift_task_alloc();
    v0[35] = v24;
    void *v24 = v0;
    v24[1] = sub_100766348;
    uint64_t v25 = v0[30];
    return sub_10075C06C(v25);
  }
  uint64_t v27 = v0[31];
  swift_release();
  sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"_rendererSharedTextureChanged(_:textureData:)", 45, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/USD Rendering/CoreRE/CRLUSDRendering+CoreRE_AppExRepBackend.swift", 135, 2, 520, (uint64_t)"Unexpected state for receiving texture data.", 44, 2u, (uint64_t)_swiftEmptyArrayStorage);
  sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"_rendererSharedTextureChanged(_:textureData:)", 45, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/USD Rendering/CoreRE/CRLUSDRendering+CoreRE_AppExRepBackend.swift", 135, 2, 520);
  sub_10076D540(v27, _s15AppExRepBackendC12BackendStateOMa);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v28 = (uint64_t (*)(void))v0[1];
  return v28();
}

uint64_t sub_100766348()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 288) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 272);
  uint64_t v4 = *(void *)(v2 + 264);
  if (v0) {
    uint64_t v5 = sub_100766518;
  }
  else {
    uint64_t v5 = sub_100766484;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_100766484()
{
  uint64_t v1 = *(void *)(v0 + 240);
  swift_release();
  sub_10076D540(v1, _s15AppExRepBackendC12BackendStateOMa);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_100766518()
{
  uint64_t v1 = *(void *)(v0 + 240);
  swift_release();
  sub_10076D540(v1, _s15AppExRepBackendC12BackendStateOMa);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_1007665AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v6[6] = a5;
  v6[7] = v5;
  v6[4] = a3;
  v6[5] = a4;
  v6[2] = a1;
  v6[3] = a2;
  uint64_t v7 = type metadata accessor for UUID();
  v6[8] = v7;
  uint64_t v8 = *(void *)(v7 - 8);
  v6[9] = v8;
  v6[10] = *(void *)(v8 + 64);
  v6[11] = swift_task_alloc();
  sub_1005057FC(&qword_101672BB0);
  v6[12] = swift_task_alloc();
  return _swift_task_switch(sub_1007666AC, 0, 0);
}

uint64_t sub_1007666AC()
{
  if (static UUID.== infix(_:_:)())
  {
    uint64_t v2 = v0[11];
    uint64_t v1 = v0[12];
    uint64_t v3 = v0[9];
    uint64_t v25 = v0[10];
    uint64_t v26 = v1;
    uint64_t v5 = (void *)v0[7];
    uint64_t v4 = v0[8];
    uint64_t v24 = v4;
    uint64_t v6 = v0[5];
    uint64_t v7 = v0[4];
    uint64_t v22 = v0[3];
    id v23 = (void *)v0[6];
    uint64_t v8 = v0[2];
    uint64_t v9 = type metadata accessor for TaskPriority();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v1, 1, 1, v9);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v2, v8, v4);
    type metadata accessor for MainActor();
    id v10 = v5;
    swift_unknownObjectRetain();
    uint64_t v11 = v7;
    swift_unknownObjectRetain();
    swift_unknownObjectRetain();
    id v12 = v23;
    uint64_t v13 = static MainActor.shared.getter();
    unint64_t v14 = (*(unsigned __int8 *)(v3 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
    id v15 = (char *)swift_allocObject();
    *((void *)v15 + 2) = v13;
    *((void *)v15 + 3) = &protocol witness table for MainActor;
    *((void *)v15 + 4) = v10;
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 32))(&v15[v14], v2, v24);
    id v16 = &v15[(v25 + v14 + 7) & 0xFFFFFFFFFFFFFFF8];
    *(void *)id v16 = v22;
    *((void *)v16 + 1) = v11;
    *((void *)v16 + 2) = v6;
    *((void *)v16 + 3) = v12;
    uint64_t v17 = sub_1006D9104(v26, (uint64_t)&unk_10167EAA8, (uint64_t)v15);
    v0[13] = v17;
    uint64_t v18 = (void *)swift_task_alloc();
    v0[14] = v18;
    uint64_t v19 = sub_1005057FC(&qword_101672BD0);
    *uint64_t v18 = v0;
    v18[1] = sub_1007669E0;
    return Task.value.getter(v19, v17, (char *)&type metadata for () + 8, v19, &protocol self-conformance witness table for Error);
  }
  else
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"rendererSharedTextureChanged(_:textureData:)", 44, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/USD Rendering/CoreRE/CRLUSDRendering+CoreRE_AppExRepBackend.swift", 135, 2, 529, (uint64_t)"Unexpected remote USD renderer UUID.", 36, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"rendererSharedTextureChanged(_:textureData:)", 44, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/USD Rendering/CoreRE/CRLUSDRendering+CoreRE_AppExRepBackend.swift", 135, 2, 529);
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v20 = (uint64_t (*)(void))v0[1];
    return v20();
  }
}

uint64_t sub_1007669E0()
{
  *(void *)(*(void *)v1 + 120) = v0;
  swift_task_dealloc();
  if (v0)
  {
    swift_release();
    uint64_t v2 = sub_100766B70;
  }
  else
  {
    uint64_t v2 = sub_100766AFC;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100766AFC()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100766B70()
{
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100766BDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[2] = type metadata accessor for MainActor();
  v8[3] = static MainActor.shared.getter();
  uint64_t v13 = (void *)swift_task_alloc();
  v8[4] = v13;
  *uint64_t v13 = v8;
  v13[1] = sub_100766CCC;
  return sub_100765CD8(a5, a6, a7, a8, v16);
}

uint64_t sub_100766CCC()
{
  *(void *)(*(void *)v1 + 40) = v0;
  swift_task_dealloc();
  uint64_t v3 = dispatch thunk of Actor.unownedExecutor.getter();
  if (v0) {
    uint64_t v4 = sub_100766E8C;
  }
  else {
    uint64_t v4 = sub_100766E28;
  }
  return _swift_task_switch(v4, v3, v2);
}

uint64_t sub_100766E28()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100766E8C()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100766FD0()
{
  return _s15AppExRepBackendCMa(0);
}

uint64_t _s15AppExRepBackendCMa(uint64_t a1)
{
  return sub_100512D5C(a1, (uint64_t *)&unk_10167E878);
}

uint64_t sub_100766FF8()
{
  uint64_t result = type metadata accessor for UUID();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t *sub_1007670C8(uint64_t *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v23 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v23 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v7 = type metadata accessor for URL();
        (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
        uint64_t v8 = (int *)type metadata accessor for CRLUSDRendering.SceneRequest(0);
        uint64_t v9 = v8[5];
        id v10 = (uint64_t *)((char *)a1 + v9);
        uint64_t v11 = (void *)((char *)a2 + v9);
        uint64_t v12 = *v11;
        unint64_t v13 = v11[1];
        sub_100510D4C(*v11, v13);
        *id v10 = v12;
        v10[1] = v13;
        uint64_t v14 = v8[6];
        uint64_t v15 = (char *)a1 + v14;
        uint64_t v16 = (char *)a2 + v14;
        long long v17 = *((_OWORD *)v16 + 3);
        *((_OWORD *)v15 + 2) = *((_OWORD *)v16 + 2);
        *((_OWORD *)v15 + 3) = v17;
        *((void *)v15 + 8) = *((void *)v16 + 8);
        long long v18 = *((_OWORD *)v16 + 1);
        *(_OWORD *)uint64_t v15 = *(_OWORD *)v16;
        *((_OWORD *)v15 + 1) = v18;
        uint64_t v19 = v8[7];
        uint64_t v20 = (_OWORD *)((char *)a1 + v19);
        uint64_t v21 = (_OWORD *)((char *)a2 + v19);
        long long v22 = v21[1];
        *uint64_t v20 = *v21;
        v20[1] = v22;
        swift_storeEnumTagMultiPayload();
        break;
      case 1u:
        uint64_t v25 = a2[1];
        *a1 = *a2;
        a1[1] = v25;
        uint64_t v27 = (void *)a2[2];
        uint64_t v26 = a2[3];
        a1[2] = (uint64_t)v27;
        a1[3] = v26;
        unint64_t v28 = a2[5];
        uint64_t v29 = a2[6];
        uint64_t v30 = a2[7];
        uint64_t v31 = a2[8];
        unint64_t v51 = a2[9];
        uint64_t v53 = a2[4];
        uint64_t v32 = a2[10];
        swift_retain();
        swift_retain();
        id v33 = v27;
        swift_retain();
        sub_1007673E8(v53, v28, v29, v30, v31, v51);
        a1[4] = v53;
        a1[5] = v28;
        a1[6] = v29;
        a1[7] = v30;
        a1[8] = v31;
        a1[9] = v51;
        a1[10] = v32;
        swift_storeEnumTagMultiPayload();
        break;
      case 2u:
        uint64_t v34 = a2[1];
        *a1 = *a2;
        a1[1] = v34;
        uint64_t v36 = (void *)a2[2];
        uint64_t v35 = a2[3];
        a1[2] = (uint64_t)v36;
        a1[3] = v35;
        unint64_t v37 = a2[5];
        uint64_t v38 = a2[6];
        uint64_t v39 = a2[7];
        uint64_t v40 = a2[8];
        unint64_t v50 = a2[9];
        uint64_t v52 = a2[4];
        uint64_t v54 = a2[10];
        swift_retain();
        swift_retain();
        id v41 = v36;
        swift_retain();
        sub_1007673E8(v52, v37, v38, v39, v40, v50);
        a1[4] = v52;
        a1[5] = v37;
        a1[6] = v38;
        a1[7] = v39;
        a1[8] = v40;
        a1[9] = v50;
        uint64_t v42 = a2[11];
        uint64_t v43 = a2[12];
        a1[10] = v54;
        a1[11] = v42;
        uint64_t v45 = a2[13];
        uint64_t v44 = (void *)a2[14];
        a1[12] = v43;
        a1[13] = v45;
        a1[14] = (uint64_t)v44;
        swift_unknownObjectRetain();
        swift_unknownObjectRetain();
        swift_unknownObjectRetain();
        id v46 = v44;
        swift_storeEnumTagMultiPayload();
        break;
      case 3u:
        uint64_t v47 = *a2;
        unint64_t v48 = a2[1];
        char v49 = *((unsigned char *)a2 + 16);
        sub_100767448(v47, v48, v49);
        *a1 = v47;
        a1[1] = v48;
        *((unsigned char *)a1 + 16) = v49;
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(v6 + 64));
        break;
    }
  }
  return a1;
}

uint64_t sub_1007673E8(uint64_t result, unint64_t a2, char a3, uint64_t a4, uint64_t a5, unint64_t a6)
{
  if (a6 >> 62 == 1)
  {
    return sub_100767448(result, a2, a3);
  }
  else if (!(a6 >> 62))
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_100767448(uint64_t result, unint64_t a2, char a3)
{
  switch(a3)
  {
    case 0:
    case 1:
    case 2:
    case 3:
    case 5:
      uint64_t result = swift_bridgeObjectRetain();
      break;
    case 4:
      uint64_t result = sub_1007674A0(result, a2);
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1007674A0(uint64_t a1, unint64_t a2)
{
  if (a2 >= 2) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

void sub_1007674B4(uint64_t a1)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      uint64_t v2 = type metadata accessor for URL();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
      uint64_t v3 = (uint64_t *)(a1 + *(int *)(type metadata accessor for CRLUSDRendering.SceneRequest(0) + 20));
      uint64_t v4 = *v3;
      unint64_t v5 = v3[1];
      sub_100510084(v4, v5);
      break;
    case 1u:
      swift_release();
      swift_release();

      swift_release();
      uint64_t v6 = *(void *)(a1 + 32);
      unint64_t v7 = *(void *)(a1 + 40);
      uint64_t v8 = *(void *)(a1 + 48);
      uint64_t v9 = *(void *)(a1 + 56);
      uint64_t v10 = *(void *)(a1 + 64);
      unint64_t v11 = *(void *)(a1 + 72);
      sub_100767658(v6, v7, v8, v9, v10, v11);
      break;
    case 2u:
      swift_release();
      swift_release();

      swift_release();
      sub_100767658(*(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72));
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      uint64_t v12 = *(void **)(a1 + 112);

      break;
    case 3u:
      uint64_t v13 = *(void *)a1;
      unint64_t v14 = *(void *)(a1 + 8);
      char v15 = *(unsigned char *)(a1 + 16);
      sub_1007676B8(v13, v14, v15);
      break;
    default:
      return;
  }
}

uint64_t sub_100767658(uint64_t result, unint64_t a2, char a3, uint64_t a4, uint64_t a5, unint64_t a6)
{
  if (a6 >> 62 == 1)
  {
    return sub_1007676B8(result, a2, a3);
  }
  else if (!(a6 >> 62))
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1007676B8(uint64_t result, unint64_t a2, char a3)
{
  switch(a3)
  {
    case 0:
    case 1:
    case 2:
    case 3:
    case 5:
      uint64_t result = swift_bridgeObjectRelease();
      break;
    case 4:
      uint64_t result = sub_100767710(result, a2);
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_100767710(uint64_t a1, unint64_t a2)
{
  if (a2 >= 2) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t *sub_100767724(uint64_t *a1, void *a2, uint64_t a3)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      uint64_t v6 = type metadata accessor for URL();
      (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
      unint64_t v7 = (int *)type metadata accessor for CRLUSDRendering.SceneRequest(0);
      uint64_t v8 = v7[5];
      uint64_t v9 = (uint64_t *)((char *)a1 + v8);
      uint64_t v10 = (void *)((char *)a2 + v8);
      uint64_t v11 = *v10;
      unint64_t v12 = v10[1];
      sub_100510D4C(*v10, v12);
      *uint64_t v9 = v11;
      v9[1] = v12;
      uint64_t v13 = v7[6];
      unint64_t v14 = (char *)a1 + v13;
      char v15 = (char *)a2 + v13;
      long long v16 = *((_OWORD *)v15 + 3);
      *((_OWORD *)v14 + 2) = *((_OWORD *)v15 + 2);
      *((_OWORD *)v14 + 3) = v16;
      *((void *)v14 + 8) = *((void *)v15 + 8);
      long long v17 = *((_OWORD *)v15 + 1);
      *(_OWORD *)unint64_t v14 = *(_OWORD *)v15;
      *((_OWORD *)v14 + 1) = v17;
      uint64_t v18 = v7[7];
      uint64_t v19 = (_OWORD *)((char *)a1 + v18);
      uint64_t v20 = (_OWORD *)((char *)a2 + v18);
      long long v21 = v20[1];
      _OWORD *v19 = *v20;
      v19[1] = v21;
      goto LABEL_7;
    case 1u:
      uint64_t v22 = a2[1];
      *a1 = *a2;
      a1[1] = v22;
      uint64_t v24 = (void *)a2[2];
      uint64_t v23 = a2[3];
      a1[2] = (uint64_t)v24;
      a1[3] = v23;
      unint64_t v25 = a2[5];
      uint64_t v26 = a2[6];
      uint64_t v27 = a2[7];
      uint64_t v28 = a2[8];
      unint64_t v49 = a2[9];
      uint64_t v51 = a2[4];
      uint64_t v29 = a2[10];
      swift_retain();
      swift_retain();
      id v30 = v24;
      swift_retain();
      sub_1007673E8(v51, v25, v26, v27, v28, v49);
      a1[4] = v51;
      a1[5] = v25;
      a1[6] = v26;
      a1[7] = v27;
      a1[8] = v28;
      a1[9] = v49;
      a1[10] = v29;
      goto LABEL_7;
    case 2u:
      uint64_t v31 = a2[1];
      *a1 = *a2;
      a1[1] = v31;
      id v33 = (void *)a2[2];
      uint64_t v32 = a2[3];
      a1[2] = (uint64_t)v33;
      a1[3] = v32;
      unint64_t v34 = a2[5];
      uint64_t v35 = a2[6];
      uint64_t v36 = a2[7];
      uint64_t v37 = a2[8];
      unint64_t v48 = a2[9];
      uint64_t v50 = a2[4];
      uint64_t v52 = a2[10];
      swift_retain();
      swift_retain();
      id v38 = v33;
      swift_retain();
      sub_1007673E8(v50, v34, v35, v36, v37, v48);
      a1[4] = v50;
      a1[5] = v34;
      a1[6] = v35;
      a1[7] = v36;
      a1[8] = v37;
      a1[9] = v48;
      uint64_t v39 = a2[11];
      uint64_t v40 = a2[12];
      a1[10] = v52;
      a1[11] = v39;
      uint64_t v42 = a2[13];
      id v41 = (void *)a2[14];
      a1[12] = v40;
      a1[13] = v42;
      a1[14] = (uint64_t)v41;
      swift_unknownObjectRetain();
      swift_unknownObjectRetain();
      swift_unknownObjectRetain();
      id v43 = v41;
      goto LABEL_7;
    case 3u:
      uint64_t v44 = *a2;
      unint64_t v45 = a2[1];
      char v46 = *((unsigned char *)a2 + 16);
      sub_100767448(v44, v45, v46);
      *a1 = v44;
      a1[1] = v45;
      *((unsigned char *)a1 + 16) = v46;
LABEL_7:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

uint64_t *sub_1007679F4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_10076D540((uint64_t)a1, _s15AppExRepBackendC12BackendStateOMa);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v6 = type metadata accessor for URL();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
        unint64_t v7 = (int *)type metadata accessor for CRLUSDRendering.SceneRequest(0);
        uint64_t v8 = v7[5];
        uint64_t v9 = (uint64_t *)((char *)a1 + v8);
        uint64_t v10 = (uint64_t *)((char *)a2 + v8);
        uint64_t v11 = *v10;
        unint64_t v12 = v10[1];
        sub_100510D4C(*v10, v12);
        *uint64_t v9 = v11;
        v9[1] = v12;
        uint64_t v13 = v7[6];
        unint64_t v14 = (char *)a1 + v13;
        char v15 = (char *)a2 + v13;
        *(_OWORD *)unint64_t v14 = *(_OWORD *)v15;
        long long v16 = *((_OWORD *)v15 + 1);
        long long v17 = *((_OWORD *)v15 + 2);
        long long v18 = *((_OWORD *)v15 + 3);
        *((void *)v14 + 8) = *((void *)v15 + 8);
        *((_OWORD *)v14 + 2) = v17;
        *((_OWORD *)v14 + 3) = v18;
        *((_OWORD *)v14 + 1) = v16;
        uint64_t v19 = v7[7];
        uint64_t v20 = (_OWORD *)((char *)a1 + v19);
        long long v21 = (_OWORD *)((char *)a2 + v19);
        long long v22 = v21[1];
        *uint64_t v20 = *v21;
        v20[1] = v22;
        goto LABEL_8;
      case 1u:
        *a1 = *a2;
        a1[1] = a2[1];
        uint64_t v23 = (void *)a2[2];
        a1[2] = (uint64_t)v23;
        a1[3] = a2[3];
        unint64_t v24 = a2[5];
        uint64_t v25 = a2[6];
        uint64_t v26 = a2[7];
        uint64_t v27 = a2[8];
        unint64_t v43 = a2[9];
        uint64_t v45 = a2[4];
        uint64_t v28 = a2[10];
        swift_retain();
        swift_retain();
        id v29 = v23;
        swift_retain();
        sub_1007673E8(v45, v24, v25, v26, v27, v43);
        a1[4] = v45;
        a1[5] = v24;
        a1[6] = v25;
        a1[7] = v26;
        a1[8] = v27;
        a1[9] = v43;
        a1[10] = v28;
        goto LABEL_8;
      case 2u:
        *a1 = *a2;
        a1[1] = a2[1];
        id v30 = (void *)a2[2];
        a1[2] = (uint64_t)v30;
        a1[3] = a2[3];
        unint64_t v31 = a2[5];
        uint64_t v32 = a2[6];
        uint64_t v33 = a2[7];
        uint64_t v34 = a2[8];
        unint64_t v44 = a2[9];
        uint64_t v46 = a2[4];
        uint64_t v42 = a2[10];
        swift_retain();
        swift_retain();
        id v35 = v30;
        swift_retain();
        sub_1007673E8(v46, v31, v32, v33, v34, v44);
        a1[4] = v46;
        a1[5] = v31;
        a1[6] = v32;
        a1[7] = v33;
        a1[8] = v34;
        a1[9] = v44;
        a1[10] = v42;
        a1[11] = a2[11];
        a1[12] = a2[12];
        a1[13] = a2[13];
        uint64_t v36 = (void *)a2[14];
        a1[14] = (uint64_t)v36;
        swift_unknownObjectRetain();
        swift_unknownObjectRetain();
        swift_unknownObjectRetain();
        id v37 = v36;
        goto LABEL_8;
      case 3u:
        uint64_t v38 = *a2;
        unint64_t v39 = a2[1];
        char v40 = *((unsigned char *)a2 + 16);
        sub_100767448(v38, v39, v40);
        *a1 = v38;
        a1[1] = v39;
        *((unsigned char *)a1 + 16) = v40;
LABEL_8:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

uint64_t _s15AppExRepBackendC12BackendStateOMa(uint64_t a1)
{
  return sub_100512D5C(a1, qword_10167E8F8);
}

char *sub_100767D40(char *a1, char *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v6 = type metadata accessor for URL();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
    unint64_t v7 = (int *)type metadata accessor for CRLUSDRendering.SceneRequest(0);
    *(_OWORD *)&a1[v7[5]] = *(_OWORD *)&a2[v7[5]];
    uint64_t v8 = v7[6];
    uint64_t v9 = &a1[v8];
    uint64_t v10 = &a2[v8];
    long long v11 = *((_OWORD *)v10 + 3);
    *((_OWORD *)v9 + 2) = *((_OWORD *)v10 + 2);
    *((_OWORD *)v9 + 3) = v11;
    *((void *)v9 + 8) = *((void *)v10 + 8);
    long long v12 = *((_OWORD *)v10 + 1);
    *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
    *((_OWORD *)v9 + 1) = v12;
    uint64_t v13 = v7[7];
    unint64_t v14 = &a1[v13];
    char v15 = &a2[v13];
    long long v16 = *((_OWORD *)v15 + 1);
    *(_OWORD *)unint64_t v14 = *(_OWORD *)v15;
    *((_OWORD *)v14 + 1) = v16;
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

char *sub_100767E40(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_10076D540((uint64_t)a1, _s15AppExRepBackendC12BackendStateOMa);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
    else
    {
      uint64_t v6 = type metadata accessor for URL();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      unint64_t v7 = (int *)type metadata accessor for CRLUSDRendering.SceneRequest(0);
      *(_OWORD *)&a1[v7[5]] = *(_OWORD *)&a2[v7[5]];
      uint64_t v8 = v7[6];
      uint64_t v9 = &a1[v8];
      uint64_t v10 = &a2[v8];
      long long v11 = *((_OWORD *)v10 + 3);
      *((_OWORD *)v9 + 2) = *((_OWORD *)v10 + 2);
      *((_OWORD *)v9 + 3) = v11;
      *((void *)v9 + 8) = *((void *)v10 + 8);
      long long v12 = *((_OWORD *)v10 + 1);
      *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
      *((_OWORD *)v9 + 1) = v12;
      uint64_t v13 = v7[7];
      unint64_t v14 = &a1[v13];
      char v15 = &a2[v13];
      long long v16 = *((_OWORD *)v15 + 1);
      *(_OWORD *)unint64_t v14 = *(_OWORD *)v15;
      *((_OWORD *)v14 + 1) = v16;
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_100767F64()
{
  uint64_t result = type metadata accessor for CRLUSDRendering.SceneRequest(319);
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t sub_100768008@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE15AppExRepBackend_uuid;
  uint64_t v4 = type metadata accessor for UUID();
  unint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t sub_10076807C(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_100528D08;
  return sub_10075C85C(a1);
}

uint64_t sub_100768110(uint64_t a1)
{
  v2[2] = a1;
  v2[3] = v1;
  type metadata accessor for MainActor();
  v2[4] = static MainActor.shared.getter();
  uint64_t v4 = dispatch thunk of Actor.unownedExecutor.getter();
  v2[5] = v4;
  v2[6] = v3;
  return _swift_task_switch(sub_1007681A8, v4, v3);
}

uint64_t sub_1007681A8()
{
  id v1 = *(id *)(v0 + 24);
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 56) = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_100768268;
  uint64_t v4 = *(void *)(v0 + 16);
  uint64_t v3 = *(void *)(v0 + 24);
  return sub_10076BB3C(0x6353657461647075, 0xED00002928656E65, v3, v3, v4);
}

uint64_t sub_100768268()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *(void **)(*v1 + 24);
  *(void *)(*v1 + 64) = v0;
  swift_task_dealloc();

  uint64_t v4 = *(void *)(v2 + 48);
  uint64_t v5 = *(void *)(v2 + 40);
  if (v0) {
    uint64_t v6 = sub_100768420;
  }
  else {
    uint64_t v6 = sub_1007683BC;
  }
  return _swift_task_switch(v6, v5, v4);
}

uint64_t sub_1007683BC()
{
  swift_release();
  id v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100768420()
{
  swift_release();
  id v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100768484(uint64_t a1, char a2)
{
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_100528488;
  return sub_100761E98(a1, a2);
}

uint64_t sub_100768528(uint64_t a1)
{
  v2[2] = a1;
  v2[3] = v1;
  type metadata accessor for MainActor();
  v2[4] = static MainActor.shared.getter();
  uint64_t v4 = dispatch thunk of Actor.unownedExecutor.getter();
  v2[5] = v4;
  v2[6] = v3;
  return _swift_task_switch(sub_1007685C0, v4, v3);
}

uint64_t sub_1007685C0()
{
  id v1 = *(id *)(v0 + 24);
  swift_bridgeObjectRetain();
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 56) = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_100768680;
  uint64_t v4 = *(void *)(v0 + 16);
  uint64_t v3 = *(void *)(v0 + 24);
  return sub_10076C450(0xD000000000000010, 0x800000010124DD50, v3, v3, v4);
}

uint64_t sub_100768680()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *(void **)(*v1 + 24);
  *(void *)(*v1 + 64) = v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();

  uint64_t v4 = *(void *)(v2 + 48);
  uint64_t v5 = *(void *)(v2 + 40);
  if (v0) {
    uint64_t v6 = sub_10076EE40;
  }
  else {
    uint64_t v6 = sub_10076EE4C;
  }
  return _swift_task_switch(v6, v5, v4);
}

uint64_t sub_1007687F8(float a1)
{
  *(void *)(v2 + 16) = v1;
  *(float *)(v2 + 72) = a1;
  type metadata accessor for MainActor();
  *(void *)(v2 + 24) = static MainActor.shared.getter();
  uint64_t v4 = dispatch thunk of Actor.unownedExecutor.getter();
  *(void *)(v2 + 32) = v4;
  *(void *)(v2 + 40) = v3;
  return _swift_task_switch(sub_100768894, v4, v3);
}

uint64_t sub_100768894()
{
  id v1 = *(id *)(v0 + 16);
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 48) = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_100768958;
  uint64_t v3 = *(void *)(v0 + 16);
  float v4 = *(float *)(v0 + 72);
  return sub_10076CCBC(0x70616E53656B6174, 0xEE002928746F6873, v3, v3, v4);
}

uint64_t sub_100768958(uint64_t a1)
{
  float v4 = *(void **)v2;
  uint64_t v5 = *(void **)(*(void *)v2 + 16);
  *(void *)(*(void *)v2 + 56) = v1;
  swift_task_dealloc();

  if (v1)
  {
    uint64_t v6 = v4[4];
    uint64_t v7 = v4[5];
    uint64_t v8 = sub_100768B08;
  }
  else
  {
    v4[8] = a1;
    uint64_t v6 = v4[4];
    uint64_t v7 = v4[5];
    uint64_t v8 = sub_100768AA0;
  }
  return _swift_task_switch(v8, v6, v7);
}

uint64_t sub_100768AA0()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(uint64_t))(v0 + 8);
  uint64_t v2 = *(void *)(v0 + 64);
  return v1(v2);
}

uint64_t sub_100768B08()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100768B70(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_100528D08;
  return sub_100765270(a1, a2);
}

uint64_t sub_100768C14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  long long v11 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v11;
  *long long v11 = v5;
  v11[1] = sub_100528D08;
  return sub_1007665AC(a1, a2, a3, a4, a5);
}

uint64_t sub_100768CD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[6] = a3;
  v5[7] = a4;
  v5[4] = a1;
  v5[5] = a2;
  v5[3] = v4;
  v5[8] = type metadata accessor for MainActor();
  v5[9] = static MainActor.shared.getter();
  uint64_t v7 = dispatch thunk of Actor.unownedExecutor.getter();
  v5[10] = v7;
  v5[11] = v6;
  return _swift_task_switch(sub_100768D7C, v7, v6);
}

uint64_t sub_100768D7C()
{
  long long v8 = *(_OWORD *)(v0 + 48);
  uint64_t v1 = static MainActor.shared.getter();
  *(void *)(v0 + 96) = v1;
  uint64_t v2 = swift_task_alloc();
  *(void *)(v0 + 104) = v2;
  *(void *)(v2 + 16) = v0 + 24;
  *(_OWORD *)(v2 + 24) = v8;
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 112) = v3;
  uint64_t v4 = type metadata accessor for CRLUSDRendererExtensionShared.AsyncRendererSenderProxy(0);
  *uint64_t v3 = v0;
  v3[1] = sub_100768E94;
  uint64_t v5 = *(void *)(v0 + 32);
  uint64_t v6 = *(void *)(v0 + 40);
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v0 + 16, v1, &protocol witness table for MainActor, v5, v6, sub_10076E0E4, v2, v4);
}

uint64_t sub_100768E94()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 120) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 80);
    uint64_t v4 = *(void *)(v2 + 88);
    uint64_t v5 = sub_10076EDD0;
  }
  else
  {
    swift_release();
    swift_task_dealloc();
    uint64_t v3 = *(void *)(v2 + 80);
    uint64_t v4 = *(void *)(v2 + 88);
    uint64_t v5 = sub_10076EDC8;
  }
  return _swift_task_switch(v5, v3, v4);
}

uint64_t sub_100768FB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[6] = a3;
  v5[7] = a4;
  v5[4] = a1;
  v5[5] = a2;
  v5[3] = v4;
  v5[8] = type metadata accessor for MainActor();
  v5[9] = static MainActor.shared.getter();
  uint64_t v7 = dispatch thunk of Actor.unownedExecutor.getter();
  v5[10] = v7;
  v5[11] = v6;
  return _swift_task_switch(sub_10076905C, v7, v6);
}

uint64_t sub_10076905C()
{
  long long v8 = *(_OWORD *)(v0 + 48);
  uint64_t v1 = static MainActor.shared.getter();
  *(void *)(v0 + 96) = v1;
  uint64_t v2 = swift_task_alloc();
  *(void *)(v0 + 104) = v2;
  *(void *)(v2 + 16) = v0 + 24;
  *(_OWORD *)(v2 + 24) = v8;
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 112) = v3;
  uint64_t v4 = sub_1005057FC(&qword_101673D88);
  *uint64_t v3 = v0;
  v3[1] = sub_100769178;
  uint64_t v5 = *(void *)(v0 + 32);
  uint64_t v6 = *(void *)(v0 + 40);
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v0 + 16, v1, &protocol witness table for MainActor, v5, v6, sub_10076D5BC, v2, v4);
}

uint64_t sub_100769178()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 120) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 80);
    uint64_t v4 = *(void *)(v2 + 88);
    uint64_t v5 = sub_100769304;
  }
  else
  {
    swift_release();
    swift_task_dealloc();
    uint64_t v3 = *(void *)(v2 + 80);
    uint64_t v4 = *(void *)(v2 + 88);
    uint64_t v5 = sub_10076929C;
  }
  return _swift_task_switch(v5, v3, v4);
}

uint64_t sub_10076929C()
{
  swift_release();
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v2(v1);
}

uint64_t sub_100769304()
{
  swift_release();
  swift_release();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10076937C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[5] = a3;
  v5[6] = a4;
  v5[3] = a1;
  v5[4] = a2;
  uint64_t v5[2] = v4;
  v5[7] = type metadata accessor for MainActor();
  v5[8] = static MainActor.shared.getter();
  uint64_t v7 = dispatch thunk of Actor.unownedExecutor.getter();
  v5[9] = v7;
  v5[10] = v6;
  return _swift_task_switch(sub_100769420, v7, v6);
}

uint64_t sub_100769420()
{
  long long v7 = *(_OWORD *)(v0 + 40);
  uint64_t v1 = static MainActor.shared.getter();
  *(void *)(v0 + 88) = v1;
  uint64_t v2 = swift_task_alloc();
  *(void *)(v0 + 96) = v2;
  *(void *)(v2 + 16) = v0 + 16;
  *(_OWORD *)(v2 + 24) = v7;
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 104) = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_100769534;
  uint64_t v4 = *(void *)(v0 + 24);
  uint64_t v5 = *(void *)(v0 + 32);
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v0 + 120, v1, &protocol witness table for MainActor, v4, v5, sub_10076E124, v2, &type metadata for Int32);
}

uint64_t sub_100769534()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 112) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 72);
    uint64_t v4 = *(void *)(v2 + 80);
    uint64_t v5 = sub_1007696C0;
  }
  else
  {
    swift_release();
    swift_task_dealloc();
    uint64_t v3 = *(void *)(v2 + 72);
    uint64_t v4 = *(void *)(v2 + 80);
    uint64_t v5 = sub_100769658;
  }
  return _swift_task_switch(v5, v3, v4);
}

uint64_t sub_100769658()
{
  swift_release();
  uint64_t v1 = *(unsigned int *)(v0 + 120);
  uint64_t v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v2(v1);
}

uint64_t sub_1007696C0()
{
  swift_release();
  swift_release();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

void sub_100769738(uint64_t a1, uint64_t a2, void (*a3)(void *, uint64_t))
{
  uint64_t v6 = sub_1005057FC((uint64_t *)&unk_10168BEC0);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  __n128 v10 = __chkstk_darwin(v6, v9);
  long long v11 = *(void **)(a2 + 16);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v7 + 16))((char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v6, v10);
  unint64_t v12 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v13 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v13 + v12, (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v6);
  aBlock[4] = sub_10076E100;
  aBlock[5] = v13;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = *(void *)"";
  aBlock[2] = sub_10076A140;
  aBlock[3] = &unk_1015129D8;
  unint64_t v14 = _Block_copy(aBlock);
  id v15 = v11;
  swift_release();
  id v16 = [v15 remoteObjectProxyWithErrorHandler:v14];

  _Block_release(v14);
  _bridgeAnyObjectToAny(_:)();
  swift_unknownObjectRelease();
  sub_100522D7C((uint64_t)aBlock, (uint64_t)v20);
  sub_10057BCD8();
  swift_dynamicCast();
  v20[0] = v19;
  id v17 = v19;
  a3(v20, a1);

  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)aBlock);
}

void sub_1007699A4(uint64_t a1, uint64_t a2, void (*a3)(void *, uint64_t), uint64_t a4, uint64_t *a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v23 = a4;
  unint64_t v24 = a3;
  uint64_t v12 = sub_1005057FC(a5);
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(void *)(v13 + 64);
  __n128 v16 = __chkstk_darwin(v12, v15);
  id v17 = *(void **)(a2 + 16);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v13 + 16))((char *)&v23 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v12, v16);
  unint64_t v18 = (*(unsigned __int8 *)(v13 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  uint64_t v19 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v13 + 32))(v19 + v18, (char *)&v23 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), v12);
  aBlock[4] = a7;
  aBlock[5] = v19;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = *(void *)"";
  aBlock[2] = sub_10076A140;
  aBlock[3] = a8;
  uint64_t v20 = _Block_copy(aBlock);
  swift_unknownObjectRetain();
  swift_release();
  id v21 = [v17 remoteObjectProxyWithErrorHandler:v20, v23];
  swift_unknownObjectRelease();
  _Block_release(v20);
  _bridgeAnyObjectToAny(_:)();
  swift_unknownObjectRelease();
  sub_100522D7C((uint64_t)aBlock, (uint64_t)v26);
  sub_10057BCD8();
  swift_dynamicCast();
  v26[0] = v25;
  id v22 = v25;
  v24(v26, a1);

  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)aBlock);
}

uint64_t sub_100769C00(uint64_t a1, uint64_t a2, void (*a3)(void *, uint64_t))
{
  uint64_t v6 = sub_1005057FC(&qword_10167EA68);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  __n128 v10 = __chkstk_darwin(v6, v9);
  long long v11 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = *(void **)(a2 + 16);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v7 + 16))(v11, a1, v6, v10);
  unint64_t v13 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v14 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v14 + v13, v11, v6);
  aBlock[4] = sub_10076E118;
  aBlock[5] = v14;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = *(void *)"";
  aBlock[2] = sub_10076A140;
  aBlock[3] = &unk_101512A28;
  uint64_t v15 = _Block_copy(aBlock);
  swift_unknownObjectRetain();
  swift_release();
  id v16 = [v12 remoteObjectProxyWithErrorHandler:v15];
  swift_unknownObjectRelease();
  _Block_release(v15);
  _bridgeAnyObjectToAny(_:)();
  swift_unknownObjectRelease();
  sub_100522D7C((uint64_t)aBlock, (uint64_t)v21);
  sub_10057BCD8();
  swift_dynamicCast();
  v21[0] = v20;
  id v17 = v20;
  a3(v21, a1);

  return _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)aBlock);
}

uint64_t sub_100769E88(uint64_t a1, uint64_t a2, void (*a3)(void *, uint64_t), uint64_t a4, uint64_t *a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v25 = a4;
  uint64_t v26 = a3;
  uint64_t v12 = sub_1005057FC(a5);
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(void *)(v13 + 64);
  __n128 v16 = __chkstk_darwin(v12, v15);
  id v17 = *(void **)(a2 + 16);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v13 + 16))((char *)&v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v12, v16);
  unint64_t v18 = (*(unsigned __int8 *)(v13 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  uint64_t v19 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v13 + 32))(v19 + v18, (char *)&v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), v12);
  aBlock[4] = a7;
  aBlock[5] = v19;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = *(void *)"";
  aBlock[2] = sub_10076A140;
  aBlock[3] = a8;
  id v20 = _Block_copy(aBlock);
  id v21 = v17;
  swift_release();
  id v22 = [v21 remoteObjectProxyWithErrorHandler:v20 v25];

  _Block_release(v20);
  _bridgeAnyObjectToAny(_:)();
  swift_unknownObjectRelease();
  sub_100522D7C((uint64_t)aBlock, (uint64_t)v28);
  sub_10057BCD8();
  swift_dynamicCast();
  v28[0] = v27;
  id v23 = v27;
  v26(v28, a1);

  return _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)aBlock);
}

uint64_t sub_10076A0F8(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  return CheckedContinuation.resume(throwing:)();
}

void sub_10076A140(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void (**)(void))(a1 + 32);
  swift_retain();
  id v4 = a2;
  v3();
  swift_release();
}

uint64_t sub_10076A1A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[5] = a3;
  v5[6] = a4;
  v5[3] = a1;
  v5[4] = a2;
  v5[7] = type metadata accessor for MainActor();
  v5[8] = static MainActor.shared.getter();
  uint64_t v5[2] = v4;
  v5[9] = static MainActor.shared.getter();
  uint64_t v7 = dispatch thunk of Actor.unownedExecutor.getter();
  v5[10] = v7;
  v5[11] = v6;
  return _swift_task_switch(sub_10076A264, v7, v6);
}

uint64_t sub_10076A264()
{
  long long v7 = *(_OWORD *)(v0 + 40);
  uint64_t v1 = static MainActor.shared.getter();
  *(void *)(v0 + 96) = v1;
  uint64_t v2 = swift_task_alloc();
  *(void *)(v0 + 104) = v2;
  *(void *)(v2 + 16) = v0 + 16;
  *(_OWORD *)(v2 + 24) = v7;
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 112) = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_10076A368;
  uint64_t v4 = *(void *)(v0 + 24);
  uint64_t v5 = *(void *)(v0 + 32);
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v3, v1, &protocol witness table for MainActor, v4, v5, sub_10076EB08, v2, (char *)&type metadata for () + 8);
}

uint64_t sub_10076A368()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 120) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 80);
    uint64_t v4 = *(void *)(v2 + 88);
    uint64_t v5 = sub_10076A574;
  }
  else
  {
    swift_release();
    swift_task_dealloc();
    uint64_t v3 = *(void *)(v2 + 80);
    uint64_t v4 = *(void *)(v2 + 88);
    uint64_t v5 = sub_10076A48C;
  }
  return _swift_task_switch(v5, v3, v4);
}

uint64_t sub_10076A48C()
{
  swift_release();
  uint64_t v1 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_10076A510, v1, v0);
}

uint64_t sub_10076A510()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10076A574()
{
  swift_release();
  swift_release();
  swift_task_dealloc();
  uint64_t v1 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_10076A614, v1, v0);
}

uint64_t sub_10076A614()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10076A678(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[5] = a3;
  v5[6] = a4;
  v5[3] = a1;
  v5[4] = a2;
  v5[7] = type metadata accessor for MainActor();
  v5[8] = static MainActor.shared.getter();
  uint64_t v5[2] = v4;
  v5[9] = static MainActor.shared.getter();
  uint64_t v7 = dispatch thunk of Actor.unownedExecutor.getter();
  v5[10] = v7;
  v5[11] = v6;
  return _swift_task_switch(sub_10076A734, v7, v6);
}

uint64_t sub_10076A734()
{
  long long v7 = *(_OWORD *)(v0 + 40);
  uint64_t v1 = static MainActor.shared.getter();
  *(void *)(v0 + 96) = v1;
  uint64_t v2 = swift_task_alloc();
  *(void *)(v0 + 104) = v2;
  *(void *)(v2 + 16) = v0 + 16;
  *(_OWORD *)(v2 + 24) = v7;
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 112) = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_10076A838;
  uint64_t v4 = *(void *)(v0 + 24);
  uint64_t v5 = *(void *)(v0 + 32);
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v3, v1, &protocol witness table for MainActor, v4, v5, sub_10076D734, v2, (char *)&type metadata for () + 8);
}

uint64_t sub_10076A838()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 120) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 80);
    uint64_t v4 = *(void *)(v2 + 88);
    uint64_t v5 = sub_10076A9E0;
  }
  else
  {
    swift_release();
    swift_task_dealloc();
    uint64_t v3 = *(void *)(v2 + 80);
    uint64_t v4 = *(void *)(v2 + 88);
    uint64_t v5 = sub_10076A95C;
  }
  return _swift_task_switch(v5, v3, v4);
}

uint64_t sub_10076A95C()
{
  swift_release();
  uint64_t v1 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_10076EDDC, v1, v0);
}

uint64_t sub_10076A9E0()
{
  swift_release();
  swift_release();
  swift_task_dealloc();
  uint64_t v1 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_10076EE38, v1, v0);
}

uint64_t sub_10076AA80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[5] = a3;
  v5[6] = a4;
  v5[3] = a1;
  v5[4] = a2;
  v5[7] = type metadata accessor for MainActor();
  v5[8] = static MainActor.shared.getter();
  uint64_t v5[2] = v4;
  v5[9] = static MainActor.shared.getter();
  uint64_t v7 = dispatch thunk of Actor.unownedExecutor.getter();
  v5[10] = v7;
  v5[11] = v6;
  return _swift_task_switch(sub_10076AB3C, v7, v6);
}

uint64_t sub_10076AB3C()
{
  long long v7 = *(_OWORD *)(v0 + 40);
  uint64_t v1 = static MainActor.shared.getter();
  *(void *)(v0 + 96) = v1;
  uint64_t v2 = swift_task_alloc();
  *(void *)(v0 + 104) = v2;
  *(void *)(v2 + 16) = v0 + 16;
  *(_OWORD *)(v2 + 24) = v7;
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 112) = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_10076A838;
  uint64_t v4 = *(void *)(v0 + 24);
  uint64_t v5 = *(void *)(v0 + 32);
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v3, v1, &protocol witness table for MainActor, v4, v5, sub_10076E088, v2, (char *)&type metadata for () + 8);
}

uint64_t sub_10076AC40(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = _s15AppExRepBackendC12BackendStateOMa(0);
  __chkstk_darwin(v4, v5);
  uint64_t v32 = (uint64_t)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = sub_1005057FC(&qword_10167EB08);
  uint64_t v7 = *(void *)(v36 - 8);
  __chkstk_darwin(v36, v8);
  __n128 v10 = (uint64_t *)((char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v11 = sub_1005057FC(&qword_10167EA18);
  uint64_t v34 = *(void *)(v11 - 8);
  uint64_t v35 = v11;
  __chkstk_darwin(v11, v12);
  uint64_t v14 = (char *)&v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1005057FC(&qword_10167EB10);
  __chkstk_darwin(v15 - 8, v16);
  unint64_t v18 = (char *)&v31 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19, v20);
  id v22 = (char *)&v31 - v21;
  uint64_t v23 = v2 + *(void *)(*(void *)v2 + 88);
  uint64_t v33 = a1;
  sub_10076D4D8(a1, v23, _s15AppExRepBackendC12BackendStateOMa);
  uint64_t v24 = sub_1005057FC(&qword_10167EB18);
  uint64_t v25 = *(void *)(v24 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v25 + 56))(v22, 1, 1, v24);
  *__n128 v10 = 1;
  (*(void (**)(void *, void, uint64_t))(v7 + 104))(v10, enum case for AsyncStream.Continuation.BufferingPolicy.bufferingNewest<A>(_:), v36);
  id v37 = v22;
  uint64_t v27 = v34;
  uint64_t v26 = v35;
  AsyncStream.init(_:bufferingPolicy:_:)();
  (*(void (**)(uint64_t, char *, uint64_t))(v27 + 16))(v2 + *(void *)(*(void *)v2 + 96), v14, v26);
  sub_10076EB6C((uint64_t)v22, (uint64_t)v18);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v25 + 48))(v18, 1, v24);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v25 + 32))(v2 + *(void *)(*(void *)v2 + 104), v18, v24);
    uint64_t v29 = v33;
    sub_10076D4D8(v33, v32, _s15AppExRepBackendC12BackendStateOMa);
    sub_1005057FC(&qword_10167EB20);
    swift_allocObject();
    uint64_t v30 = CurrentValueSubject.init(_:)();
    sub_10076D540(v29, _s15AppExRepBackendC12BackendStateOMa);
    (*(void (**)(char *, uint64_t))(v27 + 8))(v14, v26);
    *(void *)(v2 + *(void *)(*(void *)v2 + 112)) = v30;
    sub_10076EBD4((uint64_t)v22);
    return v2;
  }
  return result;
}

uint64_t sub_10076B068(uint64_t a1, uint64_t a2)
{
  sub_10076EBD4(a2);
  uint64_t v4 = sub_1005057FC(&qword_10167EB18);
  uint64_t v7 = *(void *)(v4 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(a2, a1, v4);
  uint64_t v5 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v7 + 56);

  return v5(a2, 0, 1, v4);
}

id sub_10076B144(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v21[1] = a1;
  uint64_t v22 = ~a3;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v6 = _s15AppExRepBackendC12BackendStateOMa(0);
  __chkstk_darwin(v6, v7);
  uint64_t v9 = (char *)v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10, v11);
  uint64_t v13 = (char *)v21 - v12;
  uint64_t v14 = &v3[OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE15AppExRepBackend_delegate];
  *(void *)&v3[OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE15AppExRepBackend_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  uint64_t v15 = OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE15AppExRepBackend__backendState;
  swift_storeEnumTagMultiPayload();
  sub_10076D4D8((uint64_t)v13, (uint64_t)v9, _s15AppExRepBackendC12BackendStateOMa);
  sub_1005057FC(&qword_10167EB00);
  swift_allocObject();
  uint64_t v16 = v3;
  uint64_t v17 = sub_10076AC40((uint64_t)v9);
  sub_10076D540((uint64_t)v13, _s15AppExRepBackendC12BackendStateOMa);
  *(void *)&v3[v15] = v17;
  *(void *)&v16[OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE15AppExRepBackend_firstFrameRenderedSubscription] = 0;
  UUID.init()();
  *((void *)v14 + 1) = a2;
  swift_unknownObjectWeakAssign();
  *(void *)&v16[OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE15AppExRepBackend_flags] = v22 & 1 | a3 & 0xFFFFFFFFFFFFFFFDLL;
  id v18 = [objc_allocWithZone((Class)_s10MetalLayerCMa()) init];
  *(void *)&v16[OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE15AppExRepBackend_metalLayer] = v18;
  id v19 = v18;
  [v19 setFrame:0.0, 0.0, 300.0, 300.0];

  v24.receiver = v16;
  v24.super_class = ObjectType;
  return [super init];
}

uint64_t sub_10076B360(uint64_t a1, uint64_t a2)
{
  v2[4] = a1;
  v2[5] = a2;
  uint64_t v3 = type metadata accessor for UUID();
  v2[6] = v3;
  uint64_t v4 = *(void *)(v3 - 8);
  v2[7] = v4;
  v2[8] = *(void *)(v4 + 64);
  v2[9] = swift_task_alloc();
  v2[10] = swift_task_alloc();
  v2[11] = type metadata accessor for MainActor();
  v2[12] = static MainActor.shared.getter();
  uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
  v2[13] = v6;
  v2[14] = v5;
  return _swift_task_switch(sub_10076B470, v6, v5);
}

uint64_t sub_10076B470()
{
  id receiver = v0[5].receiver;
  id v2 = v0[3].receiver;
  Class super_class = v0[3].super_class;
  Class v4 = v0[2].super_class;
  uint64_t v5 = (char *)v4 + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE15AppExRepBackend_uuid;
  uint64_t v6 = (objc_class *)*((void *)super_class + 2);
  v0[7].Class super_class = v6;
  v0[8].id receiver = (id)(((unint64_t)super_class + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000);
  ((void (*)(id, char *, id))v6)(receiver, v5, v2);
  uint64_t v7 = (objc_class *)type metadata accessor for CRLUSDRendererExtensionShared.RendererDelegateReceiverProxy();
  uint64_t v8 = (char *)objc_allocWithZone(v7);
  *(void *)&v8[OBJC_IVAR____TtCO8Freeform29CRLUSDRendererExtensionShared29RendererDelegateReceiverProxy_delegate + 8] = 0;
  *(void *)(swift_unknownObjectWeakInit() + 8) = &off_101512728;
  swift_unknownObjectWeakAssign();
  v0[1].id receiver = v8;
  v0[1].Class super_class = v7;
  swift_retain();
  uint64_t v9 = (objc_class *)[v0 + 1 init];
  v0[8].Class super_class = v9;
  v0[9].id receiver = *(id *)((char *)v4 + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE15AppExRepBackend_flags);
  uint64_t v10 = v9;
  v0[9].Class super_class = (Class)static MainActor.shared.getter();
  uint64_t v12 = dispatch thunk of Actor.unownedExecutor.getter();
  v0[10].id receiver = (id)v12;
  v0[10].Class super_class = v11;
  return _swift_task_switch(sub_10076B5BC, v12, v11);
}

uint64_t sub_10076B5BC()
{
  uint64_t v2 = v0[17];
  uint64_t v1 = v0[18];
  uint64_t v3 = v0[10];
  Class v4 = (void *)swift_task_alloc();
  v0[22] = v4;
  v4[2] = v3;
  v4[3] = v2;
  v4[4] = v1;
  uint64_t v7 = (char *)&dword_10167EA50 + dword_10167EA50;
  uint64_t v5 = (void *)swift_task_alloc();
  v0[23] = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_10076B6BC;
  return ((uint64_t (*)(unint64_t, unint64_t, void (*)(void **, uint64_t), void *))v7)(0xD00000000000002CLL, 0x800000010124DEF0, sub_10076DD68, v4);
}

uint64_t sub_10076B6BC(uint64_t a1)
{
  Class v4 = *(void **)v2;
  *(void *)(*(void *)v2 + 192) = v1;
  swift_task_dealloc();
  if (v1)
  {
    swift_task_dealloc();
    uint64_t v5 = v4[20];
    uint64_t v6 = v4[21];
    uint64_t v7 = sub_10076BA08;
  }
  else
  {
    v4[25] = a1;
    swift_task_dealloc();
    uint64_t v5 = v4[20];
    uint64_t v6 = v4[21];
    uint64_t v7 = sub_10076B804;
  }
  return _swift_task_switch(v7, v5, v6);
}

uint64_t sub_10076B804()
{
  swift_release();
  uint64_t v1 = *(void *)(v0 + 104);
  uint64_t v2 = *(void *)(v0 + 112);
  return _swift_task_switch(sub_10076B868, v1, v2);
}

uint64_t sub_10076B868()
{
  uint64_t v1 = (void (*)(uint64_t, uint64_t, uint64_t))v0[15];
  uint64_t v2 = v0[9];
  uint64_t v3 = v0[10];
  uint64_t v4 = v0[7];
  uint64_t v5 = v0[6];
  uint64_t v15 = (void *)v0[5];
  uint64_t v16 = (void *)v0[17];
  uint64_t v6 = v0[4];
  swift_release();
  v1(v2, v3, v5);
  unint64_t v7 = (*(unsigned __int8 *)(v4 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = v6;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v4 + 32))(v8 + v7, v2, v5);
  type metadata accessor for AnyCancellable();
  swift_allocObject();
  swift_retain();
  swift_retain();
  uint64_t v9 = AnyCancellable.init(_:)();

  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  swift_release();
  swift_release();

  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v0[1];
  uint64_t v11 = v0[25];
  uint64_t v12 = v0[17];
  uint64_t v13 = v0[4];
  return v10(v13, v11, v12, v9);
}

uint64_t sub_10076BA08()
{
  uint64_t v1 = (void *)v0[17];
  swift_release();

  uint64_t v2 = v0[13];
  uint64_t v3 = v0[14];
  return _swift_task_switch(sub_10076BA74, v2, v3);
}

uint64_t sub_10076BA74()
{
  uint64_t v1 = (void *)v0[17];
  uint64_t v2 = v0[10];
  uint64_t v3 = v0[6];
  uint64_t v4 = v0[7];
  uint64_t v5 = (void *)v0[5];
  swift_release();
  swift_release_n();

  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v6 = (uint64_t (*)(void))v0[1];
  return v6();
}

uint64_t sub_10076BB3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[49] = a4;
  v5[50] = a5;
  v5[47] = a2;
  v5[48] = a3;
  v5[46] = a1;
  v5[51] = _s15AppExRepBackendC12BackendStateOMa(0);
  v5[52] = swift_task_alloc();
  v5[53] = swift_task_alloc();
  v5[54] = type metadata accessor for MainActor();
  v5[55] = static MainActor.shared.getter();
  v5[56] = static MainActor.shared.getter();
  uint64_t v7 = dispatch thunk of Actor.unownedExecutor.getter();
  v5[57] = v7;
  v5[58] = v6;
  return _swift_task_switch(sub_10076BC2C, v7, v6);
}

uint64_t sub_10076BC2C()
{
  uint64_t v1 = v0[50];
  uint64_t v2 = swift_task_alloc();
  v0[59] = v2;
  *(void *)(v2 + 16) = v1;
  uint64_t v3 = swift_task_alloc();
  v0[60] = v3;
  *(void *)(v3 + 16) = v1;
  uint64_t v4 = (void *)swift_task_alloc();
  v0[61] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_10076BD24;
  return sub_100760220((uint64_t)sub_10076D810, v2, (uint64_t)&unk_10167E9E8, v3);
}

uint64_t sub_10076BD24(char a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 496) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = *(void *)(v4 + 456);
    uint64_t v6 = *(void *)(v4 + 464);
    uint64_t v7 = sub_10076BF5C;
  }
  else
  {
    *(unsigned char *)(v4 + 313) = a1;
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v5 = *(void *)(v4 + 456);
    uint64_t v6 = *(void *)(v4 + 464);
    uint64_t v7 = sub_10076BE58;
  }
  return _swift_task_switch(v7, v5, v6);
}

uint64_t sub_10076BE58()
{
  swift_release();
  uint64_t v1 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_10076BEDC, v1, v0);
}

uint64_t sub_10076BEDC()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(uint64_t))(v0 + 8);
  uint64_t v2 = *(unsigned char *)(v0 + 313) & 1;
  return v1(v2);
}

uint64_t sub_10076BF5C()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_10076BFFC, v1, v0);
}

uint64_t sub_10076BFFC()
{
  swift_release();
  if (qword_10166FB00 != -1) {
    swift_once();
  }
  uint64_t v1 = *(void *)(v0 + 496);
  uint64_t v2 = *(void *)(v0 + 376);
  uint64_t v3 = *(void *)(v0 + 384);
  uint64_t v28 = *(void *)(v0 + 368);
  swift_beginAccess();
  uint64_t v4 = (void *)static OS_os_log.crlThreeDimensionalObjects;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117DF40;
  uint64_t v6 = v3 + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE15AppExRepBackend_uuid;
  id v29 = v4;
  uint64_t v27 = v6;
  UUID.uuidString.getter();
  String.index(_:offsetBy:)();
  String.subscript.getter();
  swift_bridgeObjectRelease();
  uint64_t v7 = static String._fromSubstring(_:)();
  uint64_t v9 = v8;
  swift_bridgeObjectRelease();
  *(void *)(inited + 56) = &type metadata for String;
  unint64_t v10 = sub_100528BE4();
  *(void *)(inited + 32) = v7;
  *(void *)(inited + 40) = v9;
  *(void *)(inited + 96) = &type metadata for String;
  *(void *)(inited + 104) = v10;
  *(void *)(inited + 64) = v10;
  *(void *)(inited + 72) = v28;
  *(void *)(inited + 80) = v2;
  swift_getErrorValue();
  swift_bridgeObjectRetain();
  uint64_t v11 = Error.localizedDescription.getter();
  *(void *)(inited + 136) = &type metadata for String;
  *(void *)(inited + 144) = v10;
  *(void *)(inited + 112) = v11;
  *(void *)(inited + 120) = v12;
  uint64_t v13 = static os_log_type_t.error.getter();
  sub_100BAC898((uint64_t)v29, (uint64_t)&_mh_execute_header, v13, (uint64_t)"(AppEx:CoreRE) [%{public}@] %{public}@ error: %{public}@", 56, 2, inited);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  *(void *)(v0 + 360) = v1;
  swift_errorRetain();
  sub_1005057FC(&qword_101672BD0);
  if (swift_dynamicCast())
  {
    uint64_t v14 = *(void *)(v0 + 296);
    uint64_t v15 = *(void *)(v0 + 304);
    char v16 = *(unsigned char *)(v0 + 312);
  }
  else
  {
    *(void *)(v0 + 336) = *(void *)(v0 + 496);
    swift_errorRetain();
    if (swift_dynamicCast())
    {
      uint64_t v14 = *(void *)(v0 + 320);
      uint64_t v15 = *(void *)(v0 + 328);
      char v16 = 4;
    }
    else
    {
      swift_getErrorValue();
      uint64_t v14 = Error.localizedDescription.getter();
      char v16 = 2;
    }
  }
  uint64_t v17 = *(void *)(v0 + 416);
  uint64_t v18 = *(void *)(v0 + 424);
  uint64_t v19 = *(void *)(v0 + 384);
  *(void *)uint64_t v18 = v14;
  *(void *)(v18 + 8) = v15;
  *(unsigned char *)(v18 + 16) = v16;
  swift_storeEnumTagMultiPayload();
  uint64_t v20 = *(void *)(v19 + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE15AppExRepBackend__backendState);
  sub_10076D4D8(v18, v17, _s15AppExRepBackendC12BackendStateOMa);
  uint64_t v21 = *(void (**)(uint64_t))(*(void *)v20 + 136);
  swift_retain();
  v21(v17);
  swift_release();
  uint64_t v22 = v19 + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE15AppExRepBackend_delegate;
  if (swift_unknownObjectWeakLoadStrong())
  {
    uint64_t v23 = *(void *)(v22 + 8);
    uint64_t ObjectType = swift_getObjectType();
    sub_10075C584((uint64_t *)(v0 + 16));
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v23 + 8))(v27, v0 + 16, ObjectType, v23);
    swift_unknownObjectRelease();
    sub_10076E600((void *)(v0 + 16), (void (*)(void, void, void, void, void, void, void))sub_100767658);
  }
  sub_10076D540(*(void *)(v0 + 424), _s15AppExRepBackendC12BackendStateOMa);
  swift_willThrow();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v25 = *(uint64_t (**)(void))(v0 + 8);
  return v25();
}

uint64_t sub_10076C450(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[49] = a4;
  v5[50] = a5;
  v5[47] = a2;
  v5[48] = a3;
  v5[46] = a1;
  v5[51] = _s15AppExRepBackendC12BackendStateOMa(0);
  v5[52] = swift_task_alloc();
  v5[53] = swift_task_alloc();
  v5[54] = type metadata accessor for MainActor();
  v5[55] = static MainActor.shared.getter();
  v5[56] = static MainActor.shared.getter();
  uint64_t v7 = dispatch thunk of Actor.unownedExecutor.getter();
  v5[57] = v7;
  v5[58] = v6;
  return _swift_task_switch(sub_10076C540, v7, v6);
}

uint64_t sub_10076C540()
{
  uint64_t v1 = swift_task_alloc();
  *(void *)(v0 + 472) = v1;
  *(_OWORD *)(v1 + 16) = *(_OWORD *)(v0 + 392);
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 480) = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_10076C620;
  return sub_100760220((uint64_t)SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:), 0, (uint64_t)&unk_10167E9B0, v1);
}

uint64_t sub_10076C620(char a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 488) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = *(void *)(v4 + 456);
    uint64_t v6 = *(void *)(v4 + 464);
    uint64_t v7 = sub_10076C7D0;
  }
  else
  {
    *(unsigned char *)(v4 + 313) = a1;
    swift_task_dealloc();
    uint64_t v5 = *(void *)(v4 + 456);
    uint64_t v6 = *(void *)(v4 + 464);
    uint64_t v7 = sub_10076C74C;
  }
  return _swift_task_switch(v7, v5, v6);
}

uint64_t sub_10076C74C()
{
  swift_release();
  uint64_t v1 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_10076EDCC, v1, v0);
}

uint64_t sub_10076C7D0()
{
  swift_release();
  swift_task_dealloc();
  uint64_t v1 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_10076C868, v1, v0);
}

uint64_t sub_10076C868()
{
  swift_release();
  if (qword_10166FB00 != -1) {
    swift_once();
  }
  uint64_t v1 = *(void *)(v0 + 488);
  uint64_t v2 = *(void *)(v0 + 376);
  uint64_t v3 = *(void *)(v0 + 384);
  uint64_t v28 = *(void *)(v0 + 368);
  swift_beginAccess();
  uint64_t v4 = (void *)static OS_os_log.crlThreeDimensionalObjects;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117DF40;
  uint64_t v6 = v3 + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE15AppExRepBackend_uuid;
  id v29 = v4;
  uint64_t v27 = v6;
  UUID.uuidString.getter();
  String.index(_:offsetBy:)();
  String.subscript.getter();
  swift_bridgeObjectRelease();
  uint64_t v7 = static String._fromSubstring(_:)();
  uint64_t v9 = v8;
  swift_bridgeObjectRelease();
  *(void *)(inited + 56) = &type metadata for String;
  unint64_t v10 = sub_100528BE4();
  *(void *)(inited + 32) = v7;
  *(void *)(inited + 40) = v9;
  *(void *)(inited + 96) = &type metadata for String;
  *(void *)(inited + 104) = v10;
  *(void *)(inited + 64) = v10;
  *(void *)(inited + 72) = v28;
  *(void *)(inited + 80) = v2;
  swift_getErrorValue();
  swift_bridgeObjectRetain();
  uint64_t v11 = Error.localizedDescription.getter();
  *(void *)(inited + 136) = &type metadata for String;
  *(void *)(inited + 144) = v10;
  *(void *)(inited + 112) = v11;
  *(void *)(inited + 120) = v12;
  uint64_t v13 = static os_log_type_t.error.getter();
  sub_100BAC898((uint64_t)v29, (uint64_t)&_mh_execute_header, v13, (uint64_t)"(AppEx:CoreRE) [%{public}@] %{public}@ error: %{public}@", 56, 2, inited);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  *(void *)(v0 + 360) = v1;
  swift_errorRetain();
  sub_1005057FC(&qword_101672BD0);
  if (swift_dynamicCast())
  {
    uint64_t v14 = *(void *)(v0 + 296);
    uint64_t v15 = *(void *)(v0 + 304);
    char v16 = *(unsigned char *)(v0 + 312);
  }
  else
  {
    *(void *)(v0 + 336) = *(void *)(v0 + 488);
    swift_errorRetain();
    if (swift_dynamicCast())
    {
      uint64_t v14 = *(void *)(v0 + 320);
      uint64_t v15 = *(void *)(v0 + 328);
      char v16 = 4;
    }
    else
    {
      swift_getErrorValue();
      uint64_t v14 = Error.localizedDescription.getter();
      char v16 = 2;
    }
  }
  uint64_t v17 = *(void *)(v0 + 416);
  uint64_t v18 = *(void *)(v0 + 424);
  uint64_t v19 = *(void *)(v0 + 384);
  *(void *)uint64_t v18 = v14;
  *(void *)(v18 + 8) = v15;
  *(unsigned char *)(v18 + 16) = v16;
  swift_storeEnumTagMultiPayload();
  uint64_t v20 = *(void *)(v19 + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE15AppExRepBackend__backendState);
  sub_10076D4D8(v18, v17, _s15AppExRepBackendC12BackendStateOMa);
  uint64_t v21 = *(void (**)(uint64_t))(*(void *)v20 + 136);
  swift_retain();
  v21(v17);
  swift_release();
  uint64_t v22 = v19 + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE15AppExRepBackend_delegate;
  if (swift_unknownObjectWeakLoadStrong())
  {
    uint64_t v23 = *(void *)(v22 + 8);
    uint64_t ObjectType = swift_getObjectType();
    sub_10075C584((uint64_t *)(v0 + 16));
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v23 + 8))(v27, v0 + 16, ObjectType, v23);
    swift_unknownObjectRelease();
    sub_10076E600((void *)(v0 + 16), (void (*)(void, void, void, void, void, void, void))sub_100767658);
  }
  sub_10076D540(*(void *)(v0 + 424), _s15AppExRepBackendC12BackendStateOMa);
  swift_willThrow();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v25 = *(uint64_t (**)(void))(v0 + 8);
  return v25();
}

uint64_t sub_10076CCBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, float a5)
{
  v5[49] = a3;
  v5[47] = a1;
  v5[48] = a2;
  v5[50] = _s15AppExRepBackendC12BackendStateOMa(0);
  v5[51] = swift_task_alloc();
  v5[52] = swift_task_alloc();
  v5[53] = type metadata accessor for MainActor();
  v5[54] = static MainActor.shared.getter();
  uint64_t v8 = (void *)swift_task_alloc();
  v5[55] = v8;
  *uint64_t v8 = v5;
  v8[1] = sub_10076CDD0;
  return sub_100762BC8((uint64_t)(v5 + 42), a4, a5);
}

uint64_t sub_10076CDD0()
{
  *(void *)(*(void *)v1 + 448) = v0;
  swift_task_dealloc();
  uint64_t v3 = dispatch thunk of Actor.unownedExecutor.getter();
  if (v0) {
    uint64_t v4 = sub_10076CFB0;
  }
  else {
    uint64_t v4 = sub_10076CF28;
  }
  return _swift_task_switch(v4, v3, v2);
}

uint64_t sub_10076CF28()
{
  swift_release();
  uint64_t v1 = *(void *)(v0 + 336);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v2(v1);
}

uint64_t sub_10076CFB0()
{
  swift_release();
  if (qword_10166FB00 != -1) {
    swift_once();
  }
  uint64_t v1 = *(void *)(v0 + 448);
  uint64_t v2 = *(void *)(v0 + 384);
  uint64_t v3 = *(void *)(v0 + 392);
  uint64_t v28 = *(void *)(v0 + 376);
  swift_beginAccess();
  uint64_t v4 = (void *)static OS_os_log.crlThreeDimensionalObjects;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117DF40;
  uint64_t v6 = v3 + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE15AppExRepBackend_uuid;
  id v29 = v4;
  uint64_t v27 = v6;
  UUID.uuidString.getter();
  String.index(_:offsetBy:)();
  String.subscript.getter();
  swift_bridgeObjectRelease();
  uint64_t v7 = static String._fromSubstring(_:)();
  uint64_t v9 = v8;
  swift_bridgeObjectRelease();
  *(void *)(inited + 56) = &type metadata for String;
  unint64_t v10 = sub_100528BE4();
  *(void *)(inited + 32) = v7;
  *(void *)(inited + 40) = v9;
  *(void *)(inited + 96) = &type metadata for String;
  *(void *)(inited + 104) = v10;
  *(void *)(inited + 64) = v10;
  *(void *)(inited + 72) = v28;
  *(void *)(inited + 80) = v2;
  swift_getErrorValue();
  swift_bridgeObjectRetain();
  uint64_t v11 = Error.localizedDescription.getter();
  *(void *)(inited + 136) = &type metadata for String;
  *(void *)(inited + 144) = v10;
  *(void *)(inited + 112) = v11;
  *(void *)(inited + 120) = v12;
  uint64_t v13 = static os_log_type_t.error.getter();
  sub_100BAC898((uint64_t)v29, (uint64_t)&_mh_execute_header, v13, (uint64_t)"(AppEx:CoreRE) [%{public}@] %{public}@ error: %{public}@", 56, 2, inited);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  *(void *)(v0 + 368) = v1;
  swift_errorRetain();
  sub_1005057FC(&qword_101672BD0);
  if (swift_dynamicCast())
  {
    uint64_t v14 = *(void *)(v0 + 296);
    uint64_t v15 = *(void *)(v0 + 304);
    char v16 = *(unsigned char *)(v0 + 312);
  }
  else
  {
    *(void *)(v0 + 344) = *(void *)(v0 + 448);
    swift_errorRetain();
    if (swift_dynamicCast())
    {
      uint64_t v14 = *(void *)(v0 + 320);
      uint64_t v15 = *(void *)(v0 + 328);
      char v16 = 4;
    }
    else
    {
      swift_getErrorValue();
      uint64_t v14 = Error.localizedDescription.getter();
      char v16 = 2;
    }
  }
  uint64_t v17 = *(void *)(v0 + 408);
  uint64_t v18 = *(void *)(v0 + 416);
  uint64_t v19 = *(void *)(v0 + 392);
  *(void *)uint64_t v18 = v14;
  *(void *)(v18 + 8) = v15;
  *(unsigned char *)(v18 + 16) = v16;
  swift_storeEnumTagMultiPayload();
  uint64_t v20 = *(void *)(v19 + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE15AppExRepBackend__backendState);
  sub_10076D4D8(v18, v17, _s15AppExRepBackendC12BackendStateOMa);
  uint64_t v21 = *(void (**)(uint64_t))(*(void *)v20 + 136);
  swift_retain();
  v21(v17);
  swift_release();
  uint64_t v22 = v19 + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE15AppExRepBackend_delegate;
  if (swift_unknownObjectWeakLoadStrong())
  {
    uint64_t v23 = *(void *)(v22 + 8);
    uint64_t ObjectType = swift_getObjectType();
    sub_10075C584((uint64_t *)(v0 + 16));
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v23 + 8))(v27, v0 + 16, ObjectType, v23);
    swift_unknownObjectRelease();
    sub_10076E600((void *)(v0 + 16), (void (*)(void, void, void, void, void, void, void))sub_100767658);
  }
  sub_10076D540(*(void *)(v0 + 416), _s15AppExRepBackendC12BackendStateOMa);
  swift_willThrow();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v25 = *(uint64_t (**)(void))(v0 + 8);
  return v25();
}

uint64_t sub_10076D400(uint64_t a1, uint64_t a2, uint64_t a3)
{
  float v8 = *(float *)(v3 + 16);
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  *uint64_t v9 = v4;
  v9[1] = sub_100528D08;
  return sub_100763274(a1, v8, a2, a3);
}

uint64_t sub_10076D4D8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_10076D540(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void sub_10076D5A0(void **a1, uint64_t a2)
{
  sub_1007C8740(a1, a2, *(float *)(v2 + 16));
}

void sub_10076D5BC(uint64_t a1)
{
  sub_1007699A4(a1, **(void **)(v1 + 16), *(void (**)(void *, uint64_t))(v1 + 24), *(void *)(v1 + 32), &qword_10167E998, (uint64_t)&unk_101512790, (uint64_t)sub_10076D618, (uint64_t)&unk_1015127A8);
}

uint64_t sub_10076D60C()
{
  return sub_1006FA134(&qword_10167E998);
}

uint64_t sub_10076D618(uint64_t a1)
{
  return sub_10076D79C(a1, &qword_10167E998);
}

uint64_t sub_10076D624(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10076D634()
{
  return swift_release();
}

uint64_t sub_10076D63C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v13 = *(void *)(v5 + 16);
  uint64_t v12 = *(void *)(v5 + 24);
  uint64_t v14 = (void *)swift_task_alloc();
  *(void *)(v6 + 16) = v14;
  *uint64_t v14 = v6;
  v14[1] = sub_100528D08;
  return sub_100762384(a1, a2, a3, a4, a5, v13, v12);
}

void sub_10076D718(id *a1, uint64_t a2)
{
  sub_1007C84B8(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24));
}

void sub_10076D734(uint64_t a1)
{
  sub_1007699A4(a1, **(void **)(v1 + 16), *(void (**)(void *, uint64_t))(v1 + 24), *(void *)(v1 + 32), &qword_10167F0F0, (uint64_t)&unk_1015127E0, (uint64_t)sub_10076D790, (uint64_t)&unk_1015127F8);
}

uint64_t sub_10076D784()
{
  return sub_1006FA134(&qword_10167F0F0);
}

uint64_t sub_10076D790(uint64_t a1)
{
  return sub_10076D79C(a1, &qword_10167F0F0);
}

uint64_t sub_10076D79C(uint64_t a1, uint64_t *a2)
{
  uint64_t v5 = *(void *)(sub_1005057FC(a2) - 8);
  return sub_10076A0F8(a1, v2 + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80)), a2);
}

__n128 sub_10076D810(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + 16);
  uint64_t v3 = a1 + *(int *)(type metadata accessor for CRLUSDRendering.SceneRequest(0) + 24);
  *(_OWORD *)uint64_t v3 = *(_OWORD *)v2;
  __n128 result = *(__n128 *)(v2 + 16);
  long long v5 = *(_OWORD *)(v2 + 32);
  long long v6 = *(_OWORD *)(v2 + 48);
  *(void *)(v3 + 64) = *(void *)(v2 + 64);
  *(_OWORD *)(v3 + 32) = v5;
  *(_OWORD *)(v3 + 48) = v6;
  *(__n128 *)(v3 + 16) = result;
  return result;
}

uint64_t sub_10076D864(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v12 = *(void *)(v5 + 16);
  uint64_t v13 = (void *)swift_task_alloc();
  *(void *)(v6 + 16) = v13;
  *uint64_t v13 = v6;
  v13[1] = sub_100528488;
  return sub_1007619D0(a1, a2, a3, a4, a5, v12);
}

void sub_10076D934(void **a1, uint64_t a2)
{
  sub_1007C7DCC(a1, a2, *(void *)(v2 + 16), *(long long **)(v2 + 24));
}

uint64_t sub_10076D950(uint64_t a1)
{
  uint64_t v5 = *(void *)(v1 + 16);
  uint64_t v4 = *(void *)(v1 + 24);
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v6;
  *uint64_t v6 = v2;
  v6[1] = sub_100528D08;
  return sub_10075CD64(a1, v5, v4);
}

uint64_t sub_10076D9FC(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 16);
  sub_10076D540(a1, type metadata accessor for CRLUSDRendering.SceneRequest);
  return sub_10076D4D8(v3, a1, type metadata accessor for CRLUSDRendering.SceneRequest);
}

uint64_t sub_10076DA54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v12 = *(void *)(v5 + 16);
  uint64_t v13 = (void *)swift_task_alloc();
  *(void *)(v6 + 16) = v13;
  *uint64_t v13 = v6;
  v13[1] = sub_100528D08;
  return sub_10075FE20(a1, a2, a3, a4, a5, v12);
}

void sub_10076DB24(void **a1, uint64_t a2)
{
}

uint64_t sub_10076DB40(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_10076DBA8()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10076DBE0()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10076DC18()
{
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10076DC58()
{
  return sub_100763ADC(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_10076DC60()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_10076DCA8(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v6 = v1[5];
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_100528D08;
  return sub_100763C00(a1, v4, v5, v7, v6);
}

void sub_10076DD68(void **a1, uint64_t a2)
{
  sub_100A0DEE0(a1, a2, v2[2], v2[3], v2[4]);
}

uint64_t sub_10076DD88()
{
  uint64_t v1 = type metadata accessor for UUID();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_10076DE54()
{
  uint64_t v1 = *(void *)(type metadata accessor for UUID() - 8);
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));

  return sub_10075BD08(v2, v3);
}

uint64_t sub_10076DEB8()
{
  uint64_t v1 = type metadata accessor for UUID();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 40) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_unknownObjectRelease();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_10076DF8C(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for UUID() - 8);
  uint64_t v5 = v1[2];
  uint64_t v6 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v8 = (uint64_t)v1 + ((*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_100528D08;
  return sub_100A0E73C(a1, v5, v6, v7, v8);
}

uint64_t sub_10076E088(uint64_t a1)
{
  return sub_100769E88(a1, **(void **)(v1 + 16), *(void (**)(void *, uint64_t))(v1 + 24), *(void *)(v1 + 32), &qword_10167F0F0, (uint64_t)&unk_101512970, (uint64_t)sub_10076D790, (uint64_t)&unk_101512988);
}

uint64_t sub_10076E0D8()
{
  return sub_1006FA134(&qword_10167F0F0);
}

void sub_10076E0E4(uint64_t a1)
{
  sub_100769738(a1, **(void **)(v1 + 16), *(void (**)(void *, uint64_t))(v1 + 24));
}

uint64_t sub_10076E0F4()
{
  return sub_1006FA134((uint64_t *)&unk_10168BEC0);
}

uint64_t sub_10076E100(uint64_t a1)
{
  return sub_10076D79C(a1, (uint64_t *)&unk_10168BEC0);
}

uint64_t sub_10076E10C()
{
  return sub_1006FA134(&qword_10167EA68);
}

uint64_t sub_10076E118(uint64_t a1)
{
  return sub_10076D79C(a1, &qword_10167EA68);
}

uint64_t sub_10076E124(uint64_t a1)
{
  return sub_100769E88(a1, **(void **)(v1 + 16), *(void (**)(void *, uint64_t))(v1 + 24), *(void *)(v1 + 32), &qword_10168BF60, (uint64_t)&unk_101512A60, (uint64_t)sub_10076E180, (uint64_t)&unk_101512A78);
}

uint64_t sub_10076E174()
{
  return sub_1006FA134(&qword_10168BF60);
}

uint64_t sub_10076E180(uint64_t a1)
{
  return sub_10076D79C(a1, &qword_10168BF60);
}

void sub_10076E18C(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  if (a1)
  {
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
  }
}

uint64_t sub_10076E1EC(uint64_t a1)
{
  return sub_10076364C(a1, v1);
}

unint64_t sub_10076E1F4()
{
  unint64_t result = qword_10167EA80;
  if (!qword_10167EA80)
  {
    sub_100522D34(&qword_10167EA78);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_10167EA80);
  }
  return result;
}

uint64_t sub_10076E250()
{
  swift_unknownObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_10076E290(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_100528D08;
  return sub_100763764(a1, v4, v5, v6);
}

uint64_t sub_10076E344()
{
  uint64_t v1 = type metadata accessor for UUID();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 40) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_unknownObjectRelease();

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();

  return _swift_deallocObject(v0, v6 + 32, v5);
}

uint64_t sub_10076E450(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for UUID() - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = v1[2];
  uint64_t v7 = v1[3];
  uint64_t v8 = v1[4];
  uint64_t v9 = (uint64_t)v1 + v5;
  uint64_t v10 = (void *)((char *)v1 + ((*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v11 = *v10;
  uint64_t v12 = v10[1];
  uint64_t v13 = v10[2];
  uint64_t v14 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v14;
  *uint64_t v14 = v2;
  v14[1] = sub_100528D08;
  return sub_100766BDC(a1, v6, v7, v8, v9, v11, v12, v13);
}

uint64_t sub_10076E5A4(uint64_t a1, uint64_t a2)
{
  return a2;
}

void *sub_10076E600(void *a1, void (*a2)(void, void, void, void, void, void, void))
{
  return a1;
}

uint64_t sub_10076E644(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for UUID() - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = v1[2];
  uint64_t v7 = v1[3];
  uint64_t v8 = v1[4];
  uint64_t v9 = (uint64_t)v1 + v5;
  uint64_t v10 = (uint64_t)v1 + ((*(void *)(v4 + 64) + v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v11;
  *uint64_t v11 = v2;
  v11[1] = sub_100528D08;
  return sub_100765AB4(a1, v6, v7, v8, v9, v10);
}

uint64_t sub_10076E770(uint64_t a1)
{
  return a1;
}

uint64_t sub_10076E7C4(uint64_t result, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, unint64_t a6, char a7, uint64_t a8, uint64_t a9, unint64_t a10)
{
  if (result)
  {
    swift_release();
    swift_release();

    swift_release();
    return sub_100767658(a5, a6, a7, a8, a9, a10);
  }
  return result;
}

uint64_t sub_10076E870(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1005057FC(&qword_10167EAE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10076E8DC()
{
  uint64_t v1 = type metadata accessor for UUID();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 40) & ~v3;
  uint64_t v5 = v3 | 0xF;
  unint64_t v6 = (*(void *)(v2 + 64) + v4 + 15) & 0xFFFFFFFFFFFFFFF0;
  swift_unknownObjectRelease();

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  sub_100767658(*(void *)(v0 + v6), *(void *)(v0 + v6 + 8), *(void *)(v0 + v6 + 16), *(void *)(v0 + v6 + 24), *(void *)(v0 + v6 + 32), *(void *)(v0 + v6 + 40));

  return _swift_deallocObject(v0, v6 + 56, v5);
}

uint64_t sub_10076E9DC(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for UUID() - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = v1[2];
  uint64_t v7 = v1[3];
  uint64_t v8 = v1[4];
  uint64_t v9 = (uint64_t)v1 + v5;
  uint64_t v10 = (uint64_t)v1 + ((*(void *)(v4 + 64) + v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v11;
  *uint64_t v11 = v2;
  v11[1] = sub_100528488;
  return sub_100764FE0(a1, v6, v7, v8, v9, v10);
}

void sub_10076EB08(uint64_t a1)
{
  sub_1007699A4(a1, **(void **)(v1 + 16), *(void (**)(void *, uint64_t))(v1 + 24), *(void *)(v1 + 32), &qword_10167F0F0, (uint64_t)&unk_101512B50, (uint64_t)sub_10076D790, (uint64_t)&unk_101512B68);
}

uint64_t sub_10076EB58()
{
  return sub_1006FA134(&qword_10167F0F0);
}

uint64_t sub_10076EB64(uint64_t a1)
{
  return sub_10076B068(a1, *(void *)(v1 + 16));
}

uint64_t sub_10076EB6C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1005057FC(&qword_10167EB10);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10076EBD4(uint64_t a1)
{
  uint64_t v2 = sub_1005057FC(&qword_10167EB10);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t _s15AppExRepBackendC18RendererConnectionVwxx(uint64_t a1)
{
  swift_release();
  swift_release();

  return swift_release();
}

void *_s15AppExRepBackendC18RendererConnectionVwcp(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  unint64_t v5 = (void *)a2[2];
  uint64_t v4 = a2[3];
  a1[2] = v5;
  a1[3] = v4;
  swift_retain();
  swift_retain();
  id v6 = v5;
  swift_retain();
  return a1;
}

void *_s15AppExRepBackendC18RendererConnectionVwca(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  uint64_t v4 = (void *)a2[2];
  unint64_t v5 = (void *)a1[2];
  a1[2] = v4;
  id v6 = v4;

  a1[3] = a2[3];
  swift_retain();
  swift_release();
  return a1;
}

uint64_t _s15AppExRepBackendC18RendererConnectionVwta(uint64_t a1, _OWORD *a2)
{
  *(_OWORD *)a1 = *a2;
  swift_release();

  *(_OWORD *)(a1 + 16) = a2[1];
  swift_release();
  return a1;
}

ValueMetadata *_s15AppExRepBackendC18RendererConnectionVMa()
{
  return &_s15AppExRepBackendC18RendererConnectionVN;
}

void sub_10076EE00(void **a1, uint64_t a2)
{
}

NSString sub_10076EE50()
{
  NSString result = String._bridgeToObjectiveC()();
  qword_10171A6E8 = (uint64_t)result;
  return result;
}

void sub_10076EE88(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = (void *)type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  uint64_t v5 = *(v4 - 1);
  uint64_t v7 = __chkstk_darwin(v4, v6);
  uint64_t v9 = (uint64_t)&v51 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __chkstk_darwin(v7, v10);
  uint64_t v59 = (uint64_t)&v51 - v12;
  uint64_t v14 = __chkstk_darwin(v11, v13);
  uint64_t v60 = (uint64_t)&v51 - v15;
  uint64_t v17 = __chkstk_darwin(v14, v16);
  uint64_t v57 = (char *)&v51 - v18;
  uint64_t v20 = __chkstk_darwin(v17, v19);
  uint64_t v22 = (char *)&v51 - v21;
  uint64_t v24 = __chkstk_darwin(v20, v23);
  uint64_t v26 = (char *)&v51 - v25;
  uint64_t v28 = __chkstk_darwin(v24, v27);
  uint64_t v30 = (char *)&v51 - v29;
  __chkstk_darwin(v28, v31);
  uint64_t v33 = (char *)&v51 - v32;
  sub_10076F9F8(a1, (uint64_t)&v51 - v32);
  if (swift_getEnumCaseMultiPayload() != 2)
  {
    sub_10076FA5C((uint64_t)v33, type metadata accessor for CRLBoardLibraryViewModel.Item);
    goto LABEL_14;
  }
  uint64_t v55 = a1;
  uint64_t v58 = sub_1005057FC(&qword_101677100);
  swift_bridgeObjectRelease();
  sub_10076FA5C((uint64_t)v33, type metadata accessor for CRLBoardIdentifier);
  CGFloat v61 = v2 + 2;
  swift_beginAccess();
  uint64_t v34 = v2[2];
  uint64_t v35 = *(void *)(v34 + 16);
  if (!v35)
  {
    uint64_t v39 = 0;
    goto LABEL_13;
  }
  uint64_t v52 = v9;
  uint64_t v53 = v5;
  uint64_t v54 = v2;
  unint64_t v36 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v9 = *(void *)(v5 + 72);
  swift_bridgeObjectRetain();
  unint64_t v37 = 0;
  unint64_t v56 = v36;
  unint64_t v38 = v36;
  while (1)
  {
    sub_10076F9F8(v34 + v38, (uint64_t)v30);
    sub_10076F9F8((uint64_t)v30, (uint64_t)v26);
    if (swift_getEnumCaseMultiPayload() == 2) {
      break;
    }
    sub_10076FA5C((uint64_t)v26, type metadata accessor for CRLBoardLibraryViewModel.Item);
    sub_10076FA5C((uint64_t)v30, type metadata accessor for CRLBoardLibraryViewModel.Item);
    ++v37;
    v38 += v9;
    if (v35 == v37)
    {
      swift_bridgeObjectRelease();
      uint64_t v39 = *(void *)(*v61 + 16);
LABEL_12:
      uint64_t v5 = v53;
      uint64_t v2 = v54;
      uint64_t v9 = v52;
      if (v39 < v35) {
        goto LABEL_46;
      }
LABEL_13:
      sub_100F4D770(v35, v39);
      swift_endAccess();
      a1 = v55;
LABEL_14:
      sub_10076F9F8(a1, v9);
      uint64_t v4 = v2 + 2;
      swift_beginAccess();
      uint64_t v26 = (char *)v2[2];
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v2[2] = v26;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
LABEL_40:
        uint64_t v26 = (char *)sub_100F6273C(0, *((void *)v26 + 2) + 1, 1, (unint64_t)v26);
        *uint64_t v4 = v26;
      }
      unint64_t v44 = *((void *)v26 + 2);
      unint64_t v43 = *((void *)v26 + 3);
      if (v44 >= v43 >> 1)
      {
        uint64_t v26 = (char *)sub_100F6273C(v43 > 1, v44 + 1, 1, (unint64_t)v26);
        *uint64_t v4 = v26;
      }
      *((void *)v26 + 2) = v44 + 1;
      sub_10076FB20(v9, (uint64_t)&v26[((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(void *)(v5 + 72) * v44], type metadata accessor for CRLBoardLibraryViewModel.Item);
      swift_endAccess();
      id v45 = [self defaultCenter];
      if (qword_10166F008 != -1) {
        swift_once();
      }
      [v45 postNotificationName:qword_10171A6E8 object:v2];

      return;
    }
  }
  swift_bridgeObjectRelease();
  sub_10076FA5C((uint64_t)v26, type metadata accessor for CRLBoardIdentifier);
  sub_10076FA5C((uint64_t)v30, type metadata accessor for CRLBoardLibraryViewModel.Item);
  swift_bridgeObjectRelease();
  uint64_t v39 = v37 + 1;
  if (__OFADD__(v37, 1)) {
    goto LABEL_47;
  }
  uint64_t v2 = v61;
  uint64_t v40 = *v61;
  unint64_t v41 = *(void *)(*v61 + 16);
  if (v39 == v41)
  {
LABEL_11:
    uint64_t v35 = v37;
    goto LABEL_12;
  }
  unint64_t v46 = v9 + v38;
  unint64_t v47 = v37 + 1;
  uint64_t v5 = (uint64_t)v57;
  while (1)
  {
    if (v47 >= v41)
    {
      __break(1u);
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    sub_10076F9F8(v40 + v46, (uint64_t)v22);
    sub_10076F9F8((uint64_t)v22, v5);
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      swift_bridgeObjectRelease();
      sub_10076FA5C(v5, type metadata accessor for CRLBoardIdentifier);
      sub_10076FA5C((uint64_t)v22, type metadata accessor for CRLBoardLibraryViewModel.Item);
      goto LABEL_34;
    }
    uint64_t v26 = (char *)type metadata accessor for CRLBoardLibraryViewModel.Item;
    sub_10076FA5C(v5, type metadata accessor for CRLBoardLibraryViewModel.Item);
    sub_10076FA5C((uint64_t)v22, type metadata accessor for CRLBoardLibraryViewModel.Item);
    if (v47 != v37) {
      break;
    }
LABEL_33:
    if (__OFADD__(v37++, 1)) {
      goto LABEL_39;
    }
LABEL_34:
    uint64_t v39 = v47 + 1;
    if (__OFADD__(v47, 1)) {
      goto LABEL_38;
    }
    uint64_t v40 = *v2;
    unint64_t v41 = *(void *)(*v2 + 16);
    ++v47;
    v46 += v9;
    if (v39 == v41) {
      goto LABEL_11;
    }
  }
  if ((v37 & 0x8000000000000000) == 0)
  {
    uint64_t v26 = (char *)*v2;
    unint64_t v48 = *(void *)(*v2 + 16);
    if (v37 >= v48) {
      goto LABEL_42;
    }
    sub_10076F9F8((uint64_t)&v26[v56 + v37 * v9], v60);
    if (v47 >= v48) {
      goto LABEL_43;
    }
    sub_10076F9F8((uint64_t)&v26[v46], v59);
    char v49 = swift_isUniquelyReferenced_nonNull_native();
    *CGFloat v61 = v26;
    if ((v49 & 1) == 0)
    {
      uint64_t v26 = (char *)sub_100F68774((unint64_t)v26);
      *CGFloat v61 = v26;
    }
    uint64_t v5 = (uint64_t)v57;
    if (v37 >= *((void *)v26 + 2)) {
      goto LABEL_44;
    }
    sub_10076FB88(v59, (uint64_t)&v26[v56 + v37 * v9]);
    uint64_t v2 = v61;
    if (v47 >= *(void *)(*v61 + 16)) {
      goto LABEL_45;
    }
    sub_10076FB88(v60, *v61 + v46);
    goto LABEL_33;
  }
  __break(1u);
LABEL_42:
  __break(1u);
LABEL_43:
  __break(1u);
LABEL_44:
  __break(1u);
LABEL_45:
  __break(1u);
LABEL_46:
  __break(1u);
LABEL_47:
  __break(1u);
}

uint64_t sub_10076F538@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3, v5);
  uint64_t v7 = &v15[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = (unint64_t *)(v1 + 16);
  swift_beginAccess();
  if (!*(void *)(*(void *)(v1 + 16) + 16))
  {
    uint64_t v14 = 1;
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 56))(a1, v14, 1, v3);
  }
  id v9 = [self defaultCenter];
  if (qword_10166F008 != -1) {
    swift_once();
  }
  [v9 postNotificationName:qword_10171A6E8 object:v1];

  swift_beginAccess();
  unint64_t v10 = *(void *)(v1 + 16);
  if (!*(void *)(v10 + 16))
  {
    __break(1u);
LABEL_11:
    uint64_t result = sub_100F68774(v10);
    unint64_t v10 = result;
    uint64_t v12 = *(void *)(result + 16);
    if (v12) {
      goto LABEL_7;
    }
    goto LABEL_12;
  }
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  if ((result & 1) == 0) {
    goto LABEL_11;
  }
  uint64_t v12 = *(void *)(v10 + 16);
  if (v12)
  {
LABEL_7:
    uint64_t v13 = v12 - 1;
    sub_10076FB20(v10+ ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))+ *(void *)(v4 + 72) * (v12 - 1), (uint64_t)v7, type metadata accessor for CRLBoardLibraryViewModel.Item);
    *(void *)(v10 + 16) = v13;
    *uint64_t v8 = v10;
    sub_10076FB20((uint64_t)v7, a1, type metadata accessor for CRLBoardLibraryViewModel.Item);
    swift_endAccess();
    uint64_t v14 = 0;
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 56))(a1, v14, 1, v3);
  }
LABEL_12:
  __break(1u);
  return result;
}

uint64_t sub_10076F75C(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3, v5);
  uint64_t v7 = &v21[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = type metadata accessor for CRLBoardIdentifier(0);
  __chkstk_darwin(v8 - 8, v9);
  uint64_t v11 = &v21[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10076F9F8(a1, (uint64_t)v7);
  if (swift_getEnumCaseMultiPayload() != 2)
  {
    uint64_t v19 = type metadata accessor for CRLBoardLibraryViewModel.Item;
    uint64_t v20 = (uint64_t)v7;
    goto LABEL_8;
  }
  sub_1005057FC(&qword_101677100);
  swift_bridgeObjectRelease();
  sub_10076FB20((uint64_t)v7, (uint64_t)v11, type metadata accessor for CRLBoardIdentifier);
  uint64_t v12 = (unint64_t *)(v1 + 16);
  swift_beginAccess();
  uint64_t v13 = *(void *)(v1 + 16);
  swift_bridgeObjectRetain();
  unint64_t v14 = sub_100DD5064((uint64_t)v11, v13);
  char v16 = v15;
  swift_bridgeObjectRelease();
  if ((v16 & 1) == 0)
  {
    swift_beginAccess();
    unint64_t v17 = *v12;
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    *uint64_t v12 = v17;
    if (result)
    {
      if ((v14 & 0x8000000000000000) == 0) {
        goto LABEL_5;
      }
    }
    else
    {
      uint64_t result = sub_100F68774(v17);
      unint64_t v17 = result;
      *uint64_t v12 = result;
      if ((v14 & 0x8000000000000000) == 0)
      {
LABEL_5:
        if (v14 < *(void *)(v17 + 16))
        {
          sub_10076FABC(a1, v17+ ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))+ *(void *)(v4 + 72) * v14);
          swift_endAccess();
          uint64_t v19 = type metadata accessor for CRLBoardIdentifier;
          uint64_t v20 = (uint64_t)v11;
LABEL_8:
          sub_10076FA5C(v20, v19);
          return 1;
        }
        goto LABEL_13;
      }
    }
    __break(1u);
LABEL_13:
    __break(1u);
    return result;
  }
  sub_10076FA5C((uint64_t)v11, type metadata accessor for CRLBoardIdentifier);
  return 0;
}

uint64_t type metadata accessor for CRLNavigationStack()
{
  return self;
}

uint64_t sub_10076F9F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10076FA5C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_10076FABC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_10076FB20(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_10076FB88(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_10076FBEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v27 = a3;
  uint64_t v28 = a4;
  uint64_t v29 = a2;
  uint64_t v7 = sub_1005057FC((uint64_t *)&unk_101674520);
  __chkstk_darwin(v7 - 8, v8);
  uint64_t v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for UUID();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11, v13);
  char v15 = (char *)&v27 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)(v4 + 24) = 0;
  swift_unknownObjectWeakInit();
  *(void *)(v4 + 32) = 0;
  *(void *)(v4 + 136) = 0;
  uint64_t v16 = OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE10RepBackend_acknowledgeQueue;
  type metadata accessor for CRLUSDRendering.TaskQueue();
  uint64_t v17 = swift_allocObject();
  swift_defaultActor_initialize();
  *(void *)(v17 + 128) = _swiftEmptyArrayStorage;
  *(_OWORD *)(v17 + 112) = xmmword_10118D2A0;
  *(void *)(v4 + v16) = v17;
  uint64_t v18 = v4 + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE10RepBackend_lastSentAcknowledgedRenderState;
  *(_OWORD *)uint64_t v18 = 0u;
  *(_OWORD *)(v18 + 16) = 0u;
  *(void *)(v18 + 32) = 0;
  *(_OWORD *)(v18 + 40) = xmmword_10118D2B0;
  if (qword_10166F430 != -1) {
    swift_once();
  }
  sub_1005107BC(a1, (uint64_t)v10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    UUID.init()();
    sub_100522F00((uint64_t)v10, (uint64_t *)&unk_101674520);
    (*(void (**)(uint64_t, char *, uint64_t))(v12 + 32))(v4 + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE10RepBackend_uuid, v15, v11);
  }
  else
  {
    uint64_t v19 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
    v19(v15, v10, v11);
    v19((char *)(v4 + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE10RepBackend_uuid), v15, v11);
  }
  *(void *)(v4 + 24) = v27;
  swift_unknownObjectWeakAssign();
  char v20 = v28;
  *(void *)(v4 + 40) = v28;
  *(void *)(v4 + 48) = 0;
  *(void *)(v4 + 56) = 0;
  *(void *)(v4 + 64) = 0;
  *(void *)(v4 + 72) = 0xC000000000000000;
  *(_OWORD *)(v4 + 80) = 0u;
  *(_OWORD *)(v4 + 96) = 0u;
  *(_OWORD *)(v4 + 112) = 0u;
  *(void *)(v4 + 128) = 0;
  uint64_t v21 = a1;
  if ((v20 & 2) != 0)
  {
    id v22 = [objc_allocWithZone((Class)_s10MetalLayerCMa()) init];
    uint64_t v23 = *(void **)(v4 + 32);
    *(void *)(v5 + 32) = v22;
    uint64_t v24 = (char *)v22;

    [v24 setFrame:CGRectMake(0.0, 0.0, 300.0, 300.0)];
    uint64_t v30 = *(void *)&v24[OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE10MetalLayer_frameNumber];
    swift_allocObject();
    swift_weakInit();
    swift_retain();
    sub_1005057FC(&qword_10167EA78);
    sub_10076E1F4();
    uint64_t v25 = Publisher<>.sink(receiveValue:)();

    swift_unknownObjectRelease();
    swift_release();
    sub_100522F00(v21, (uint64_t *)&unk_101674520);
    swift_release();
    *(void *)(v5 + 136) = v25;
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    sub_100522F00(a1, (uint64_t *)&unk_101674520);
  }
  return v5;
}

void *sub_10076FFBC()
{
  uint64_t v0 = sub_1005057FC(&qword_101672BB0);
  __chkstk_darwin(v0 - 8, v1);
  uint64_t v3 = (char *)&v23 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = (void *)swift_weakLoadStrong();
  if (result)
  {
    uint64_t v5 = result;
    uint64_t v6 = (void *)result[4];
    if (!v6) {
      return (void *)swift_release();
    }
    if ((*((unsigned char *)v6 + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE10MetalLayer_hasDrawnFrame) & 1) != 0
      && (unint64_t v7 = result[9], v7 >> 62 == 1))
    {
      uint64_t v8 = result[15];
      uint64_t v9 = result[16];
      uint64_t v10 = result[13];
      uint64_t v11 = result[14];
      uint64_t v12 = result[12];
      uint64_t v28 = result[11];
      uint64_t v29 = v12;
      uint64_t v33 = result[10];
      uint64_t v34 = v10;
      uint64_t v13 = result[8];
      unint64_t v35 = result[7];
      unint64_t v14 = v35;
      uint64_t v15 = result[6];
      uint64_t v24 = v13;
      uint64_t v25 = v15;
      unint64_t v26 = v7;
      uint64_t v16 = type metadata accessor for TaskPriority();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v3, 1, 1, v16);
      uint64_t v27 = type metadata accessor for MainActor();
      uint64_t v32 = v9;
      uint64_t v31 = v8;
      uint64_t v30 = v11;
      sub_100770860(v15, v14, v13, v7);
      id v17 = v6;
      LOBYTE(v9) = v24;
      uint64_t v18 = v25;
      unint64_t v19 = v26;
      sub_100770860(v25, v35, v24, v26);
      uint64_t v20 = static MainActor.shared.getter();
      uint64_t v21 = (void *)swift_allocObject();
      void v21[2] = v20;
      v21[3] = &protocol witness table for MainActor;
      void v21[4] = v18;
      sub_1005912D0((uint64_t)v3, (uint64_t)&unk_10167EDC8, (uint64_t)v21);
      sub_1007708C8(v18, v35, v9, v19);
      swift_release();
      if (!v5[17]) {
        goto LABEL_9;
      }
    }
    else
    {
      id v22 = v6;
      if (!v5[17])
      {
LABEL_9:

        v5[17] = 0;
        swift_release();
        return (void *)swift_release();
      }
    }
    swift_retain();
    AnyCancellable.cancel()();
    swift_release();
    goto LABEL_9;
  }
  return result;
}

uint64_t sub_100770294()
{
  v0[2] = type metadata accessor for MainActor();
  v0[3] = static MainActor.shared.getter();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[4] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_10053DCA8;
  return sub_100B4AD40();
}

uint64_t sub_100770340()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1005057FC(&qword_101672BB0);
  __chkstk_darwin(v2 - 8, v3);
  uint64_t v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v6 = *(void *)(v0 + 72);
  if (v6 >> 62 == 1)
  {
    long long v17 = *(_OWORD *)(v0 + 112);
    uint64_t v7 = *(void *)(v0 + 104);
    uint64_t v18 = *(void *)(v0 + 96);
    uint64_t v19 = v7;
    unint64_t v9 = *(void *)(v0 + 56);
    uint64_t v8 = *(void *)(v0 + 64);
    uint64_t v10 = *(void *)(v0 + 48);
    uint64_t v11 = type metadata accessor for TaskPriority();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v5, 1, 1, v11);
    type metadata accessor for MainActor();
    swift_retain_n();
    uint64_t v12 = static MainActor.shared.getter();
    uint64_t v13 = (void *)swift_allocObject();
    v13[2] = v12;
    _OWORD v13[3] = &protocol witness table for MainActor;
    v13[4] = v10;
    sub_1005912D0((uint64_t)v5, (uint64_t)&unk_10167EDD8, (uint64_t)v13);
    sub_1007708C8(v10, v9, v8, v6);
    swift_release();
  }
  sub_100523398(v1 + 16);

  sub_1007708C8(*(void *)(v1 + 48), *(void *)(v1 + 56), *(void *)(v1 + 64), *(void *)(v1 + 72));
  swift_release();
  uint64_t v14 = v1 + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE10RepBackend_uuid;
  uint64_t v15 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8))(v14, v15);
  swift_release();
  sub_100776E98(*(void *)(v1 + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE10RepBackend_lastSentAcknowledgedRenderState), *(void *)(v1 + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE10RepBackend_lastSentAcknowledgedRenderState + 8), *(void *)(v1 + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE10RepBackend_lastSentAcknowledgedRenderState + 16), *(void *)(v1 + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE10RepBackend_lastSentAcknowledgedRenderState + 24), *(void *)(v1 + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE10RepBackend_lastSentAcknowledgedRenderState + 32), *(void *)(v1 + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE10RepBackend_lastSentAcknowledgedRenderState + 40));
  return v1;
}

uint64_t sub_1007705A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 16) = a4;
  type metadata accessor for MainActor();
  *(void *)(v4 + 24) = static MainActor.shared.getter();
  uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_10077063C, v6, v5);
}

uint64_t sub_10077063C()
{
  swift_release();
  if (qword_10166F430 != -1) {
    swift_once();
  }
  sub_1008D55E0(*(void *)(v0 + 16));
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1007706DC()
{
  sub_100770340();

  return swift_deallocClassInstance();
}

uint64_t sub_100770734()
{
  return _s10RepBackendCMa();
}

uint64_t _s10RepBackendCMa()
{
  uint64_t result = qword_10167EC58;
  if (!qword_10167EC58) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100770788()
{
  uint64_t result = type metadata accessor for UUID();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_100770860(uint64_t result, unint64_t a2, char a3, unint64_t a4)
{
  if (a4 >> 62 == 2) {
    return sub_100767448(result, a2, a3);
  }
  if ((a4 >> 62) <= 1) {
    return swift_retain();
  }
  return result;
}

uint64_t _s10RepBackendC12BackendStateOwxx(uint64_t *a1)
{
  return sub_1007708C8(*a1, a1[1], a1[2], a1[3]);
}

uint64_t sub_1007708C8(uint64_t result, unint64_t a2, char a3, unint64_t a4)
{
  if (a4 >> 62 == 2) {
    return sub_1007676B8(result, a2, a3);
  }
  if ((a4 >> 62) <= 1) {
    return swift_release();
  }
  return result;
}

uint64_t *_s10RepBackendC12BackendStateOwcp(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  unint64_t v4 = a2[1];
  uint64_t v5 = a2[2];
  unint64_t v6 = a2[3];
  uint64_t v7 = a2[4];
  uint64_t v8 = a2[5];
  uint64_t v9 = a2[6];
  uint64_t v10 = a2[7];
  uint64_t v11 = a2[8];
  uint64_t v13 = a2[9];
  uint64_t v14 = a2[10];
  sub_100770860(*a2, v4, v5, v6);
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  a1[4] = v7;
  a1[5] = v8;
  a1[6] = v9;
  a1[7] = v10;
  a1[8] = v11;
  a1[9] = v13;
  a1[10] = v14;
  return a1;
}

uint64_t *_s10RepBackendC12BackendStateOwca(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  unint64_t v4 = a2[1];
  uint64_t v5 = a2[2];
  unint64_t v6 = a2[3];
  uint64_t v7 = a2[4];
  uint64_t v8 = a2[5];
  uint64_t v9 = a2[6];
  uint64_t v10 = a2[7];
  uint64_t v11 = a2[8];
  uint64_t v17 = a2[9];
  uint64_t v18 = a2[10];
  sub_100770860(*a2, v4, v5, v6);
  uint64_t v12 = *a1;
  unint64_t v13 = a1[1];
  uint64_t v14 = a1[2];
  unint64_t v15 = a1[3];
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  a1[4] = v7;
  a1[5] = v8;
  a1[6] = v9;
  a1[7] = v10;
  a1[8] = v11;
  a1[9] = v17;
  a1[10] = v18;
  sub_1007708C8(v12, v13, v14, v15);
  return a1;
}

__n128 _s10RepBackendC12BackendStateOwtk(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  __n128 result = *(__n128 *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 64);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  *(__n128 *)(a1 + 32) = result;
  return result;
}

uint64_t _s10RepBackendC12BackendStateOwta(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 80);
  uint64_t v4 = *(void *)a1;
  unint64_t v6 = *(void *)(a1 + 8);
  uint64_t v5 = *(void *)(a1 + 16);
  unint64_t v7 = *(void *)(a1 + 24);
  long long v8 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v8;
  long long v9 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v9;
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(void *)(a1 + 80) = v3;
  sub_1007708C8(v4, v6, v5, v7);
  return a1;
}

uint64_t _s10RepBackendC12BackendStateOwet(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 88)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unsigned int v2 = *(_DWORD *)(a1 + 20);
  if (v2 > 0x80000000) {
    int v3 = ~v2;
  }
  else {
    int v3 = -1;
  }
  return (v3 + 1);
}

double _s10RepBackendC12BackendStateOwst(uint64_t a1, int a2, int a3)
{
  if (a2 < 0)
  {
    double result = 0.0;
    *(_OWORD *)(a1 + 72) = 0u;
    *(_OWORD *)(a1 + 56) = 0u;
    *(_OWORD *)(a1 + 40) = 0u;
    *(_OWORD *)(a1 + 24) = 0u;
    *(_OWORD *)(a1 + 8) = 0u;
    *(void *)a1 = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(a1 + 88) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)a1 = 0;
      *(void *)(a1 + 8) = 0;
      *(void *)(a1 + 16) = (unint64_t)-a2 << 32;
      double result = 0.0;
      *(_OWORD *)(a1 + 24) = 0u;
      *(_OWORD *)(a1 + 40) = 0u;
      *(_OWORD *)(a1 + 56) = 0u;
      *(_OWORD *)(a1 + 72) = 0u;
      return result;
    }
    *(unsigned char *)(a1 + 88) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t sub_100770BD0(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 24) >> 62;
  if (v1 == 3) {
    return (*(_DWORD *)a1 + 3);
  }
  else {
    return v1;
  }
}

uint64_t sub_100770BEC(uint64_t result)
{
  *(void *)(result + 24) &= 0x3FFFFFFFFFFFFFFFuLL;
  return result;
}

uint64_t sub_100770BFC(uint64_t result, uint64_t a2)
{
  if (a2 < 3)
  {
    *(void *)(result + 16) = *(unsigned int *)(result + 16);
    *(void *)(result + 24) = a2 << 62;
  }
  else
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)double result = (a2 - 3);
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)(result + 48) = 0u;
    *(_OWORD *)(result + 64) = 0u;
    *(void *)(result + 80) = 0;
    *(void *)(result + 24) = 0xC000000000000000;
  }
  return result;
}

ValueMetadata *_s10RepBackendC12BackendStateOMa()
{
  return &_s10RepBackendC12BackendStateON;
}

ValueMetadata *_s10RepBackendC5FlagsVMa()
{
  return &_s10RepBackendC5FlagsVN;
}

unint64_t sub_100770C5C()
{
  unint64_t result = qword_10167ED18;
  if (!qword_10167ED18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10167ED18);
  }
  return result;
}

unint64_t sub_100770CB4()
{
  unint64_t result = qword_10167ED20;
  if (!qword_10167ED20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10167ED20);
  }
  return result;
}

unint64_t sub_100770D0C()
{
  unint64_t result = qword_10167ED28;
  if (!qword_10167ED28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10167ED28);
  }
  return result;
}

unint64_t sub_100770D64()
{
  unint64_t result = qword_10167ED30;
  if (!qword_10167ED30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10167ED30);
  }
  return result;
}

uint64_t sub_100770DB8(uint64_t a1)
{
  sub_100776DB4(a1, (uint64_t)v7);
  sub_100776DB4(a1, (uint64_t)&v8);
  uint64_t v3 = 0;
  switch(v9 >> 62)
  {
    case 1uLL:
      v9 &= 0x3FFFFFFFFFFFFFFFuLL;
      uint64_t v3 = v8.n128_u64[0];
      swift_retain();
      break;
    case 2uLL:
      v9 &= 0x3FFFFFFFFFFFFFFFuLL;
      sub_100776EC0(&v8, &v10);
      uint64_t v3 = 0;
      break;
    case 3uLL:
      break;
    default:
      uint64_t v3 = 0;
      v9 &= 0x3FFFFFFFFFFFFFFFuLL;
      break;
  }
  if (*(void *)(v1 + 72) >> 62 == 1)
  {
    uint64_t v4 = *(void *)(v1 + 48);
    swift_retain();
    if (v3) {
      goto LABEL_7;
    }
    return swift_release();
  }
  uint64_t v4 = 0;
  if (!v3) {
    return swift_release();
  }
LABEL_7:
  if (!v4 || v3 != v4)
  {
    uint64_t v5 = qword_10166F430;
    swift_retain();
    if (v5 != -1) {
      swift_once();
    }
    swift_retain();
    sub_1008D55E0(v3);
    swift_release();
    swift_release();
  }
  return swift_release_n();
}

uint64_t sub_100770F28()
{
  uint64_t v1 = v0;
  uint64_t v2 = *(void *)(v0 + 48);
  unint64_t v3 = 0x8000000000000000;
  uint64_t v4 = 0;
  unint64_t v5 = 0;
  uint64_t v6 = 0;
  uint64_t v7 = 0;
  uint64_t v8 = 0;
  uint64_t v9 = 0;
  switch(*(void *)(v1 + 72) >> 62)
  {
    case 1:
      uint64_t v4 = *(void *)(v2 + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE11ClientScene_sceneDescription);
      unint64_t v5 = *(void *)(v2 + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE11ClientScene_sceneDescription + 8);
      uint64_t v6 = *(void *)(v2 + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE11ClientScene_sceneDescription + 16);
      uint64_t v7 = *(void *)(v2 + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE11ClientScene_sceneDescription + 24);
      uint64_t v8 = *(void *)(v2 + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE11ClientScene_sceneDescription + 32);
      unint64_t v3 = *(unsigned __int8 *)(v2
                              + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE11ClientScene_sceneDescription
                              + 40);
      uint64_t v9 = *(void *)(v2 + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE11ClientScene_sceneDescription + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      break;
    case 2:
      uint64_t v6 = *(unsigned __int8 *)(v1 + 64);
      unint64_t v5 = *(void *)(v1 + 56);
      sub_100767448(v2, v5, *(unsigned char *)(v1 + 64));
      uint64_t v7 = 0;
      uint64_t v8 = 0;
      uint64_t v9 = 0;
      unint64_t v3 = 0x4000000000000000;
      uint64_t v4 = v2;
      break;
    case 3:
      break;
    default:
      unint64_t v5 = 0;
      uint64_t v6 = 0;
      uint64_t v7 = 0;
      uint64_t v8 = 0;
      uint64_t v9 = 0;
      uint64_t v4 = 2;
      break;
  }
  unint64_t v32 = v3;
  char v33 = v6;
  v36[0] = v4;
  v36[1] = v5;
  v36[2] = v6;
  v36[3] = v7;
  v36[4] = v8;
  v36[5] = v3;
  v36[6] = v9;
  uint64_t v10 = v7;
  if (qword_10166FB00 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v11 = (void *)static OS_os_log.crlThreeDimensionalObjects;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117D8C0;
  uint64_t v13 = v1 + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE10RepBackend_uuid;
  id v31 = v11;
  UUID.uuidString.getter();
  uint64_t v34 = v1;
  String.index(_:offsetBy:)();
  String.subscript.getter();
  swift_bridgeObjectRelease();
  uint64_t v14 = static String._fromSubstring(_:)();
  uint64_t v16 = v15;
  swift_bridgeObjectRelease();
  *(void *)(inited + 56) = &type metadata for String;
  unint64_t v17 = sub_100528BE4();
  *(void *)(inited + 64) = v17;
  *(void *)(inited + 32) = v14;
  *(void *)(inited + 40) = v16;
  sub_10076E5A4((uint64_t)v36, (uint64_t)v35);
  sub_1007673E8(v4, v5, v33, v10, v8, v32);
  uint64_t v18 = String.init<A>(describing:)();
  *(void *)(inited + 96) = &type metadata for String;
  *(void *)(inited + 104) = v17;
  *(void *)(inited + 72) = v18;
  *(void *)(inited + 80) = v19;
  uint64_t v20 = static os_log_type_t.debug.getter();
  sub_100BAC898((uint64_t)v31, (uint64_t)&_mh_execute_header, v20, (uint64_t)"(CoreRE) [%{public}@] new state: %{public}@", 43, 2, inited);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  if (swift_unknownObjectWeakLoadStrong())
  {
    uint64_t v21 = *(void *)(v34 + 24);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, void *, uint64_t, uint64_t))(v21 + 8))(v13, v36, ObjectType, v21);
    swift_unknownObjectRelease();
  }
  sub_100767658(v4, v5, v33, v10, v8, v32);
  uint64_t v23 = v34 + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE10RepBackend_lastSentAcknowledgedRenderState;
  uint64_t v24 = *(void *)(v34 + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE10RepBackend_lastSentAcknowledgedRenderState);
  unint64_t v25 = *(void *)(v34
                  + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE10RepBackend_lastSentAcknowledgedRenderState
                  + 8);
  uint64_t v26 = *(void *)(v34
                  + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE10RepBackend_lastSentAcknowledgedRenderState
                  + 16);
  uint64_t v27 = *(void *)(v34
                  + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE10RepBackend_lastSentAcknowledgedRenderState
                  + 24);
  uint64_t v28 = *(void *)(v34
                  + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE10RepBackend_lastSentAcknowledgedRenderState
                  + 32);
  unint64_t v29 = *(void *)(v34
                  + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE10RepBackend_lastSentAcknowledgedRenderState
                  + 40);
  *(_OWORD *)uint64_t v23 = 0u;
  *(_OWORD *)(v23 + 16) = 0u;
  *(void *)(v23 + 32) = 0;
  *(_OWORD *)(v23 + 40) = xmmword_10118D2B0;
  return sub_100776E98(v24, v25, v26, v27, v28, v29);
}

uint64_t sub_1007712C8()
{
  v1[3] = v0;
  type metadata accessor for MainActor();
  v1[4] = static MainActor.shared.getter();
  uint64_t v3 = dispatch thunk of Actor.unownedExecutor.getter();
  v1[5] = v3;
  v1[6] = v2;
  return _swift_task_switch(sub_100771360, v3, v2);
}

uint64_t sub_100771360()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 24)
                 + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE10RepBackend_acknowledgeQueue);
  *(void *)(v0 + 56) = v1;
  swift_weakInit();
  return _swift_task_switch(sub_1007713DC, v1, 0);
}

uint64_t sub_1007713DC()
{
  static Task<>.checkCancellation()();
  uint64_t v1 = *(void *)(v0 + 56);
  unint64_t v2 = sub_100776E38();
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 64) = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_10077150C;
  uint64_t v4 = *(void *)(v0 + 56);
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v3, v1, v2, 0xD000000000000013, 0x800000010124E2C0, sub_100776E90, v4, (char *)&type metadata for () + 8);
}

uint64_t sub_10077150C()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 72) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 56);
  if (v0) {
    uint64_t v4 = sub_100771738;
  }
  else {
    uint64_t v4 = sub_100771638;
  }
  return _swift_task_switch(v4, v3, 0);
}

uint64_t sub_100771638()
{
  uint64_t v1 = v0[9];
  uint64_t v2 = static Task<>.checkCancellation()();
  if (v1)
  {
    uint64_t v5 = v0[7];
    uint64_t v6 = *(void *)(v5 + 120);
    BOOL v7 = __OFSUB__(v6, 1);
    uint64_t v8 = v6 - 1;
    if (v7)
    {
      __break(1u);
    }
    else
    {
      *(void *)(v5 + 120) = v8;
      sub_100AD7FDC();
      v0[12] = v1;
      uint64_t v3 = v0[5];
      uint64_t v4 = v0[6];
      uint64_t v2 = (uint64_t)sub_100771988;
    }
    return _swift_task_switch(v2, v3, v4);
  }
  else
  {
    uint64_t v9 = (void *)swift_task_alloc();
    v0[10] = v9;
    *uint64_t v9 = v0;
    v9[1] = sub_100771758;
    return sub_100775A90((uint64_t)v9, (uint64_t)(v0 + 2));
  }
}

uint64_t sub_100771738()
{
  v0[12] = v0[9];
  return _swift_task_switch(sub_100771988, v0[5], v0[6]);
}

uint64_t sub_100771758()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 88) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 56);
  if (v0) {
    uint64_t v4 = sub_100771908;
  }
  else {
    uint64_t v4 = sub_100771884;
  }
  return _swift_task_switch(v4, v3, 0);
}

uint64_t sub_100771884(uint64_t (*a1)(), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3[7];
  uint64_t v5 = *(void *)(v4 + 120);
  BOOL v6 = __OFSUB__(v5, 1);
  uint64_t v7 = v5 - 1;
  if (v6)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v4 + 120) = v7;
    sub_100AD7FDC();
    swift_weakDestroy();
    a2 = v3[5];
    a3 = v3[6];
    a1 = sub_1005A5EF8;
  }
  return _swift_task_switch(a1, a2, a3);
}

uint64_t sub_100771908(uint64_t (*a1)(), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3[7];
  uint64_t v5 = *(void *)(v4 + 120);
  BOOL v6 = __OFSUB__(v5, 1);
  uint64_t v7 = v5 - 1;
  if (v6)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v4 + 120) = v7;
    sub_100AD7FDC();
    v3[12] = v3[11];
    a2 = v3[5];
    a3 = v3[6];
    a1 = sub_100771988;
  }
  return _swift_task_switch(a1, a2, a3);
}

uint64_t sub_100771988()
{
  swift_release();
  swift_weakDestroy();
  swift_errorRelease();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100771A00(uint64_t a1)
{
  v2[19] = a1;
  v2[20] = v1;
  type metadata accessor for MainActor();
  v2[21] = static MainActor.shared.getter();
  uint64_t v4 = dispatch thunk of Actor.unownedExecutor.getter();
  v2[22] = v4;
  v2[23] = v3;
  return _swift_task_switch(sub_100771A98, v4, v3);
}

uint64_t sub_100771A98()
{
  if (qword_10166FB00 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[19];
  uint64_t v2 = v0[20];
  swift_beginAccess();
  uint64_t v3 = (void *)static OS_os_log.crlThreeDimensionalObjects;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117D8C0;
  id v5 = v3;
  UUID.uuidString.getter();
  String.index(_:offsetBy:)();
  String.subscript.getter();
  swift_bridgeObjectRelease();
  uint64_t v6 = static String._fromSubstring(_:)();
  uint64_t v8 = v7;
  swift_bridgeObjectRelease();
  *(void *)(inited + 56) = &type metadata for String;
  unint64_t v9 = sub_100528BE4();
  *(void *)(inited + 64) = v9;
  *(void *)(inited + 32) = v6;
  *(void *)(inited + 40) = v8;
  unint64_t v10 = sub_100AD0F58();
  *(void *)(inited + 96) = &type metadata for String;
  *(void *)(inited + 104) = v9;
  *(void *)(inited + 72) = v10;
  *(void *)(inited + 80) = v11;
  uint64_t v12 = static os_log_type_t.debug.getter();
  sub_100BAC898((uint64_t)v5, (uint64_t)&_mh_execute_header, v12, (uint64_t)"(CoreRE) [%{public}@] loadScene(%@)", 35, 2, inited);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  uint64_t v13 = swift_task_alloc();
  v0[24] = v13;
  *(void *)(v13 + 16) = v2;
  *(void *)(v13 + 24) = v1;
  uint64_t v14 = (void *)swift_task_alloc();
  v0[25] = v14;
  *uint64_t v14 = v0;
  v14[1] = sub_10075CB74;
  return sub_1007731B0((uint64_t)v14, 0x6E65635364616F6CLL, 0xEB00000000292865, dword_10167EDA0);
}

uint64_t sub_100771D18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[51] = a2;
  v3[52] = a3;
  sub_1005057FC(&qword_101672E90);
  v3[53] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for URL();
  v3[54] = v4;
  v3[55] = *(void *)(v4 - 8);
  v3[56] = swift_task_alloc();
  v3[57] = swift_task_alloc();
  v3[58] = swift_task_alloc();
  v3[59] = swift_task_alloc();
  v3[60] = type metadata accessor for MainActor();
  v3[61] = static MainActor.shared.getter();
  uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
  v3[62] = v6;
  v3[63] = v5;
  return _swift_task_switch(sub_100771E68, v6, v5);
}

uint64_t sub_100771E68()
{
  uint64_t v1 = *(void *)(v0 + 432);
  uint64_t v2 = *(void *)(v0 + 440);
  if (*(unsigned char *)(*(void *)(v0 + 408) + 40))
  {
    uint64_t v4 = *(void *)(v0 + 416);
    uint64_t v5 = *(void *)(v0 + 424);
    type metadata accessor for CRLUSDRendering.SceneRequest(0);
    uint64_t v3 = *(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16);
    v3(v5, v4, v1);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v2 + 56))(v5, 0, 1, v1);
    URL.init(resolvingBookmarkData:options:relativeTo:bookmarkDataIsStale:)();
    sub_100522F00(v5, &qword_101672E90);
    uint64_t v6 = *(void *)(v0 + 464);
    uint64_t v7 = *(void *)(v0 + 472);
    uint64_t v8 = *(void *)(v0 + 432);
    unint64_t v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 + 440) + 32);
    v9(v6, *(void *)(v0 + 456), v8);
    v9(v7, v6, v8);
  }
  else
  {
    uint64_t v3 = *(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16);
    v3(*(void *)(v0 + 472), *(void *)(v0 + 416), *(void *)(v0 + 432));
  }
  uint64_t v11 = *(void *)(v0 + 440);
  uint64_t v10 = *(void *)(v0 + 448);
  uint64_t v12 = *(void *)(v0 + 432);
  uint64_t v13 = *(void *)(v0 + 416);
  v3(v10, *(void *)(v0 + 472), v12);
  type metadata accessor for CRLUSDRendering.LoadReceipt(0);
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + OBJC_IVAR____TtCO8Freeform15CRLUSDRendering11LoadReceipt_entityLoadRequest) = 0;
  *(void *)(v0 + 512) = v14;
  *(void *)(v14 + OBJC_IVAR____TtCO8Freeform15CRLUSDRendering11LoadReceipt_cancellable) = 0;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 32))(v14 + OBJC_IVAR____TtCO8Freeform15CRLUSDRendering11LoadReceipt_url, v10, v12);
  *(void *)(v14 + OBJC_IVAR____TtCO8Freeform15CRLUSDRendering11LoadReceipt_entityLoadRequest) = 0;
  swift_release();
  *(void *)(v14 + OBJC_IVAR____TtCO8Freeform15CRLUSDRendering11LoadReceipt_cancellable) = 0;
  swift_release();
  uint64_t v15 = v13 + *(int *)(type metadata accessor for CRLUSDRendering.SceneRequest(0) + 24);
  *(_DWORD *)(v0 + 744) = *(_DWORD *)v15;
  uint64_t v16 = *(void *)(v15 + 24);
  *(void *)(v0 + 384) = *(void *)(v15 + 16);
  *(void *)(v0 + 392) = v16;
  *(void *)(v0 + 520) = *(void *)(v15 + 32);
  *(void *)(v0 + 528) = *(void *)(v15 + 40);
  *(void *)(v0 + 536) = *(void *)(v15 + 48);
  *(void *)(v0 + 544) = *(void *)(v15 + 56);
  *(void *)(v0 + 552) = *(void *)(v15 + 64);
  swift_retain();
  *(void *)(v0 + 560) = static MainActor.shared.getter();
  uint64_t v18 = dispatch thunk of Actor.unownedExecutor.getter();
  *(void *)(v0 + 568) = v18;
  *(void *)(v0 + 576) = v17;
  return _swift_task_switch(sub_1007721F8, v18, v17);
}

uint64_t sub_1007721F8()
{
  uint64_t v1 = *(void *)(v0 + 552);
  long long v10 = *(_OWORD *)(v0 + 536);
  uint64_t v2 = *(void *)(v0 + 528);
  uint64_t v3 = *(void *)(v0 + 520);
  long long v9 = *(_OWORD *)(v0 + 384);
  uint64_t v4 = *(unsigned int *)(v0 + 744);
  uint64_t v5 = *(void *)(v0 + 512);
  uint64_t v6 = *(void *)(v0 + 408);
  sub_100776DB4(v6 + 48, v0 + 16);
  unint64_t v13 = *(void *)(v6 + 56);
  uint64_t v14 = *(void *)(v6 + 48);
  uint64_t v12 = *(void *)(v6 + 64);
  unint64_t v11 = *(void *)(v6 + 72);
  *(void *)(v6 + 48) = v5;
  *(void *)(v6 + 56) = 0;
  *(void *)(v6 + 64) = v4;
  *(void *)(v6 + 72) = 0;
  *(_OWORD *)(v6 + 80) = v9;
  *(void *)(v6 + 96) = v3;
  *(void *)(v6 + 104) = v2;
  *(_OWORD *)(v6 + 112) = v10;
  *(void *)(v6 + 128) = v1;
  swift_retain_n();
  sub_100776DDC((void *)(v0 + 16), (void (*)(void, void, void, void, void, void, void, void, void, void, void))sub_100770860);
  sub_1007708C8(v14, v13, v12, v11);
  sub_100770DB8(v0 + 16);
  swift_release();
  sub_100776DDC((void *)(v0 + 16), (void (*)(void, void, void, void, void, void, void, void, void, void, void))sub_1007708C8);
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v0 + 584) = v7;
  *uint64_t v7 = v0;
  v7[1] = sub_1007723B4;
  return sub_1007712C8();
}

uint64_t sub_1007723B4()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 576);
  uint64_t v3 = *(void *)(v1 + 568);
  return _swift_task_switch(sub_1007724D4, v3, v2);
}

uint64_t sub_1007724D4()
{
  swift_release();
  swift_release();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 592) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_100772578;
  return sub_100AD6C3C();
}

uint64_t sub_100772578(uint64_t a1)
{
  uint64_t v3 = *v2;
  uint64_t v4 = *v2;
  *(void *)(v4 + 600) = a1;
  *(void *)(v4 + 608) = v1;
  swift_task_dealloc();
  uint64_t v5 = *(void *)(v3 + 504);
  uint64_t v6 = *(void *)(v3 + 496);
  if (v1) {
    uint64_t v7 = sub_1007730E0;
  }
  else {
    uint64_t v7 = sub_1007726C0;
  }
  return _swift_task_switch(v7, v6, v5);
}

uint64_t sub_1007726C0()
{
  if (qword_10166FB00 != -1) {
    swift_once();
  }
  uint64_t v1 = *(void **)(v0 + 408);
  swift_beginAccess();
  uint64_t v2 = (void *)static OS_os_log.crlThreeDimensionalObjects;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117E810;
  id v4 = v2;
  UUID.uuidString.getter();
  String.index(_:offsetBy:)();
  String.subscript.getter();
  swift_bridgeObjectRelease();
  uint64_t v5 = static String._fromSubstring(_:)();
  uint64_t v7 = v6;
  swift_bridgeObjectRelease();
  *(void *)(inited + 56) = &type metadata for String;
  *(void *)(inited + 64) = sub_100528BE4();
  *(void *)(inited + 32) = v5;
  *(void *)(inited + 40) = v7;
  uint64_t v8 = static os_log_type_t.debug.getter();
  sub_100BAC898((uint64_t)v4, (uint64_t)&_mh_execute_header, v8, (uint64_t)"(CoreRE) [%{public}@] loadScene(): entity loaded", 48, 2, inited);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  uint64_t v9 = v1[6];
  *(void *)(v0 + 616) = v9;
  unint64_t v10 = v1[7];
  *(void *)(v0 + 624) = v10;
  uint64_t v11 = v1[8];
  *(void *)(v0 + 632) = v11;
  unint64_t v12 = v1[9];
  *(void *)(v0 + 640) = v12;
  uint64_t v13 = v1[10];
  *(void *)(v0 + 648) = v13;
  uint64_t v14 = v1[11];
  *(void *)(v0 + 656) = v14;
  uint64_t v15 = v1[12];
  *(void *)(v0 + 664) = v15;
  uint64_t v16 = v1[13];
  *(void *)(v0 + 672) = v16;
  uint64_t v17 = v1[14];
  *(void *)(v0 + 680) = v17;
  uint64_t v18 = v1[15];
  *(void *)(v0 + 688) = v18;
  uint64_t v19 = v1[16];
  *(void *)(v0 + 696) = v19;
  if (v12 >> 62)
  {
    uint64_t v35 = *(void *)(v0 + 472);
    uint64_t v21 = *(void *)(v0 + 440);
    uint64_t v34 = *(void *)(v0 + 432);
    sub_100770860(v9, v10, v11, v12);
    swift_release();
    swift_release();
    swift_release();
    sub_1007708C8(v9, v10, v11, v12);
    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v35, v34);
    goto LABEL_7;
  }
  uint64_t v20 = *(void *)(v0 + 512);
  *(_DWORD *)(v0 + 288) = v11;
  *(void *)(v0 + 304) = v13;
  *(void *)(v0 + 312) = v14;
  *(void *)(v0 + 320) = v15;
  *(void *)(v0 + 328) = v16;
  *(void *)(v0 + 336) = v17;
  *(void *)(v0 + 344) = v18;
  *(void *)(v0 + 352) = v19;
  if (v20 != v9)
  {
    (*(void (**)(void, void))(*(void *)(v0 + 440) + 8))(*(void *)(v0 + 472), *(void *)(v0 + 432));
    swift_release();
    swift_release();
    swift_release();
LABEL_7:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    id v22 = *(uint64_t (**)(void))(v0 + 8);
LABEL_8:
    return v22();
  }
  char v33 = v11;
  uint64_t v24 = qword_10166F430;
  swift_retain();
  if (v24 != -1) {
    swift_once();
  }
  uint64_t v25 = *(void *)(v0 + 608);
  uint64_t v26 = *(double **)(v0 + 600);
  uint64_t v27 = *(void *)(v0 + 408);
  swift_retain();
  uint64_t v28 = sub_1008D5A04(v27, v26, v0 + 288);
  *(void *)(v0 + 704) = v28;
  if (v25)
  {
    (*(void (**)(void, void))(*(void *)(v0 + 440) + 8))(*(void *)(v0 + 472), *(void *)(v0 + 432));
    swift_release();
    sub_1007708C8(v9, v10, v33, v12);
    swift_release();
    swift_release();
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    id v22 = *(uint64_t (**)(void))(v0 + 8);
    goto LABEL_8;
  }
  uint64_t v29 = v28;
  uint64_t v30 = *(void *)(v0 + 512);
  swift_release();
  *(void *)(v29 + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE11ClientScene_loadReceipt) = v30;
  swift_retain();
  swift_release();
  swift_retain();
  *(void *)(v0 + 712) = static MainActor.shared.getter();
  uint64_t v32 = dispatch thunk of Actor.unownedExecutor.getter();
  *(void *)(v0 + 720) = v32;
  *(void *)(v0 + 728) = v31;
  return _swift_task_switch(sub_100772C5C, v32, v31);
}

uint64_t sub_100772C5C()
{
  uint64_t v1 = v0[88];
  uint64_t v2 = v0[51];
  sub_100776DB4(v2 + 48, (uint64_t)(v0 + 22));
  unint64_t v3 = *(void *)(v2 + 56);
  uint64_t v4 = *(void *)(v2 + 64);
  unint64_t v5 = *(void *)(v2 + 72);
  uint64_t v8 = *(void *)(v2 + 48);
  *(void *)(v2 + 48) = v1;
  *(void *)(v2 + 56) = 0;
  *(void *)(v2 + 64) = 0;
  *(void *)(v2 + 72) = 0x4000000000000000;
  *(_OWORD *)(v2 + 80) = 0u;
  *(_OWORD *)(v2 + 96) = 0u;
  *(void *)(v2 + 128) = 0;
  *(_OWORD *)(v2 + 112) = 0u;
  swift_retain_n();
  sub_100776DDC(v0 + 22, (void (*)(void, void, void, void, void, void, void, void, void, void, void))sub_100770860);
  sub_1007708C8(v8, v3, v4, v5);
  sub_100770DB8((uint64_t)(v0 + 22));
  swift_release();
  sub_100776DDC(v0 + 22, (void (*)(void, void, void, void, void, void, void, void, void, void, void))sub_1007708C8);
  uint64_t v6 = (void *)swift_task_alloc();
  v0[92] = v6;
  *uint64_t v6 = v0;
  v6[1] = sub_100772DE8;
  return sub_1007712C8();
}

uint64_t sub_100772DE8()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 728);
  uint64_t v3 = *(void *)(v1 + 720);
  return _swift_task_switch(sub_100772F08, v3, v2);
}

uint64_t sub_100772F08()
{
  swift_release();
  swift_release();
  uint64_t v1 = *(void *)(v0 + 496);
  uint64_t v2 = *(void *)(v0 + 504);
  return _swift_task_switch(sub_100772F78, v1, v2);
}

uint64_t sub_100772F78()
{
  unint64_t v1 = v0[80];
  uint64_t v2 = v0[79];
  unint64_t v3 = v0[78];
  uint64_t v4 = v0[77];
  uint64_t v9 = v0[59];
  uint64_t v5 = v0[55];
  uint64_t v8 = v0[54];
  swift_release();
  swift_release();
  swift_release();
  sub_1007708C8(v4, v3, v2, v1);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v9, v8);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v6 = (uint64_t (*)(void))v0[1];
  return v6();
}

uint64_t sub_1007730E0()
{
  uint64_t v1 = v0[59];
  uint64_t v2 = v0[54];
  uint64_t v3 = v0[55];
  swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_1007731B0(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  v5[51] = a3;
  v5[52] = v4;
  v5[50] = a2;
  v5[53] = type metadata accessor for MainActor();
  v5[54] = static MainActor.shared.getter();
  uint64_t v10 = (uint64_t (*)(uint64_t))((char *)a4 + *a4);
  uint64_t v8 = (void *)swift_task_alloc();
  v5[55] = v8;
  *uint64_t v8 = v5;
  v8[1] = sub_1007732BC;
  return v10(a1);
}

uint64_t sub_1007732BC()
{
  *(void *)(*(void *)v1 + 448) = v0;
  swift_task_dealloc();
  uint64_t v3 = dispatch thunk of Actor.unownedExecutor.getter();
  if (v0) {
    uint64_t v4 = sub_100773478;
  }
  else {
    uint64_t v4 = sub_100773414;
  }
  return _swift_task_switch(v4, v3, v2);
}

uint64_t sub_100773414()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100773478()
{
  swift_release();
  if (qword_10166FB00 != -1) {
    swift_once();
  }
  uint64_t v1 = *(void *)(v0 + 448);
  uint64_t v2 = *(void *)(v0 + 408);
  uint64_t v21 = *(void *)(v0 + 400);
  swift_beginAccess();
  uint64_t v3 = (void *)static OS_os_log.crlThreeDimensionalObjects;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117DF40;
  id v22 = v3;
  UUID.uuidString.getter();
  String.index(_:offsetBy:)();
  String.subscript.getter();
  swift_bridgeObjectRelease();
  uint64_t v5 = static String._fromSubstring(_:)();
  uint64_t v7 = v6;
  swift_bridgeObjectRelease();
  *(void *)(inited + 56) = &type metadata for String;
  unint64_t v8 = sub_100528BE4();
  *(void *)(inited + 32) = v5;
  *(void *)(inited + 40) = v7;
  *(void *)(inited + 96) = &type metadata for String;
  *(void *)(inited + 104) = v8;
  *(void *)(inited + 64) = v8;
  *(void *)(inited + 72) = v21;
  *(void *)(inited + 80) = v2;
  swift_getErrorValue();
  swift_bridgeObjectRetain();
  uint64_t v9 = Error.localizedDescription.getter();
  *(void *)(inited + 136) = &type metadata for String;
  *(void *)(inited + 144) = v8;
  *(void *)(inited + 112) = v9;
  *(void *)(inited + 120) = v10;
  uint64_t v11 = static os_log_type_t.error.getter();
  sub_100BAC898((uint64_t)v22, (uint64_t)&_mh_execute_header, v11, (uint64_t)"(CoreRE) [%{public}@] %{public}@ error: %{public}@", 50, 2, inited);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  *(void *)(v0 + 392) = v1;
  swift_errorRetain();
  sub_1005057FC(&qword_101672BD0);
  if (swift_dynamicCast())
  {
    uint64_t v12 = *(void *)(v0 + 328);
    unint64_t v13 = *(void *)(v0 + 336);
    unsigned int v14 = *(unsigned __int8 *)(v0 + 344);
  }
  else
  {
    *(void *)(v0 + 368) = *(void *)(v0 + 448);
    swift_errorRetain();
    if (swift_dynamicCast())
    {
      uint64_t v12 = *(void *)(v0 + 352);
      unint64_t v13 = *(void *)(v0 + 360);
      unsigned int v14 = 4;
    }
    else
    {
      swift_getErrorValue();
      uint64_t v12 = Error.localizedDescription.getter();
      unint64_t v13 = v15;
      unsigned int v14 = 2;
    }
  }
  uint64_t v16 = *(void *)(v0 + 416);
  sub_100776DB4(v16 + 48, v0 + 16);
  unint64_t v17 = *(void *)(v16 + 56);
  uint64_t v18 = *(void *)(v16 + 64);
  unint64_t v23 = *(void *)(v16 + 72);
  uint64_t v24 = *(void *)(v16 + 48);
  *(void *)(v16 + 48) = v12;
  *(void *)(v16 + 56) = v13;
  *(void *)(v16 + 64) = v14;
  *(void *)(v16 + 72) = 0x8000000000000000;
  *(_OWORD *)(v16 + 80) = 0u;
  *(_OWORD *)(v16 + 96) = 0u;
  *(void *)(v16 + 128) = 0;
  *(_OWORD *)(v16 + 112) = 0u;
  sub_100767448(v12, v13, v14);
  sub_100767448(v12, v13, v14);
  sub_100776DDC((void *)(v0 + 16), (void (*)(void, void, void, void, void, void, void, void, void, void, void))sub_100770860);
  sub_1007708C8(v24, v17, v18, v23);
  sub_100770DB8(v0 + 16);
  sub_1007676B8(v12, v13, v14);
  sub_100776DDC((void *)(v0 + 16), (void (*)(void, void, void, void, void, void, void, void, void, void, void))sub_1007708C8);
  sub_100770F28();
  sub_1007676B8(v12, v13, v14);
  swift_willThrow();
  uint64_t v19 = *(uint64_t (**)(void))(v0 + 8);
  return v19();
}

uint64_t sub_1007738B0(uint64_t a1)
{
  long long v3 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(v2 + 136) = *(_OWORD *)(a1 + 32);
  *(_DWORD *)(v2 + 328) = *(_DWORD *)a1;
  uint64_t v4 = *(void *)(a1 + 16);
  *(void *)(v2 + 120) = *(void *)(a1 + 24);
  *(void *)(v2 + 128) = v1;
  *(void *)(v2 + 104) = a1;
  *(void *)(v2 + 112) = v4;
  *(_OWORD *)(v2 + 152) = v3;
  *(void *)(v2 + 168) = *(void *)(a1 + 64);
  *(void *)(v2 + 176) = type metadata accessor for MainActor();
  *(void *)(v2 + 184) = static MainActor.shared.getter();
  uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
  *(void *)(v2 + 192) = v6;
  *(void *)(v2 + 200) = v5;
  return _swift_task_switch(sub_100773970, v6, v5);
}

uint64_t sub_100773970()
{
  uint64_t v1 = (void *)v0[16];
  uint64_t v2 = v1[6];
  v0[26] = v2;
  unint64_t v3 = v1[7];
  v0[27] = v3;
  uint64_t v4 = v1[8];
  v0[28] = v4;
  unint64_t v5 = v1[9];
  v0[29] = v5;
  v0[30] = v1[10];
  v0[31] = v1[11];
  v0[32] = v1[12];
  v0[33] = v1[13];
  v0[34] = v1[14];
  v0[35] = v1[15];
  v0[36] = v1[16];
  if (v5 >> 62 == 1)
  {
    unint64_t v15 = v3;
    uint64_t v8 = v0[13];
    char v16 = v4;
    swift_retain();
    swift_release();
    uint64_t v9 = v2 + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE11ClientScene_configuration;
    *(_OWORD *)uint64_t v9 = *(_OWORD *)v8;
    long long v10 = *(_OWORD *)(v8 + 16);
    long long v11 = *(_OWORD *)(v8 + 32);
    long long v12 = *(_OWORD *)(v8 + 48);
    *(void *)(v9 + 64) = *(void *)(v8 + 64);
    *(_OWORD *)(v9 + 32) = v11;
    *(_OWORD *)(v9 + 48) = v12;
    *(_OWORD *)(v9 + 16) = v10;
    sub_1007708C8(v2, v15, v16, v5);
  }
  else
  {
    if (!(v5 >> 62))
    {
      sub_100770860(v2, v3, v4, v5);
      swift_retain_n();
      v0[37] = static MainActor.shared.getter();
      uint64_t v7 = dispatch thunk of Actor.unownedExecutor.getter();
      v0[38] = v7;
      v0[39] = v6;
      return _swift_task_switch(sub_100773B7C, v7, v6);
    }
    swift_release();
  }
  unint64_t v13 = (uint64_t (*)(void))v0[1];
  return v13();
}

uint64_t sub_100773B7C()
{
  unint64_t v1 = *(void *)(v0 + 232);
  unint64_t v2 = *(void *)(v0 + 216);
  uint64_t v3 = *(void *)(v0 + 224);
  uint64_t v4 = *(void *)(v0 + 208);
  uint64_t v5 = *(void *)(v0 + 168);
  uint64_t v6 = *(void *)(v0 + 136);
  uint64_t v7 = *(void *)(v0 + 144);
  long long v12 = *(_OWORD *)(v0 + 112);
  long long v13 = *(_OWORD *)(v0 + 152);
  uint64_t v8 = *(void *)(v0 + 128);
  uint64_t v9 = *(unsigned int *)(v0 + 328);
  sub_100776DB4(v8 + 48, v0 + 16);
  unint64_t v16 = *(void *)(v8 + 56);
  uint64_t v17 = *(void *)(v8 + 48);
  unint64_t v14 = *(void *)(v8 + 72);
  uint64_t v15 = *(void *)(v8 + 64);
  *(void *)(v8 + 48) = v4;
  *(void *)(v8 + 56) = 0;
  *(void *)(v8 + 64) = v9;
  *(void *)(v8 + 72) = 0;
  *(_OWORD *)(v8 + 80) = v12;
  *(void *)(v8 + 96) = v6;
  *(void *)(v8 + 104) = v7;
  *(_OWORD *)(v8 + 112) = v13;
  *(void *)(v8 + 128) = v5;
  sub_100770860(v4, v2, v3, v1);
  sub_100770860(v4, v2, v3, v1);
  sub_100776DDC((void *)(v0 + 16), (void (*)(void, void, void, void, void, void, void, void, void, void, void))sub_100770860);
  sub_1007708C8(v17, v16, v15, v14);
  sub_100770DB8(v0 + 16);
  sub_1007708C8(v4, v2, v3, v1);
  sub_100776DDC((void *)(v0 + 16), (void (*)(void, void, void, void, void, void, void, void, void, void, void))sub_1007708C8);
  long long v10 = (void *)swift_task_alloc();
  *(void *)(v0 + 320) = v10;
  *long long v10 = v0;
  v10[1] = sub_100773E20;
  return sub_1007712C8();
}

uint64_t sub_100773E20()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 312);
  uint64_t v3 = *(void *)(v1 + 304);
  return _swift_task_switch(sub_100773F40, v3, v2);
}

uint64_t sub_100773F40()
{
  uint64_t v2 = v0[28];
  unint64_t v1 = v0[29];
  uint64_t v4 = v0[26];
  unint64_t v3 = v0[27];
  swift_release();
  sub_1007708C8(v4, v3, v2, v1);
  uint64_t v5 = v0[24];
  uint64_t v6 = v0[25];
  return _swift_task_switch(sub_10077400C, v5, v6);
}

uint64_t sub_10077400C()
{
  unint64_t v1 = v0[29];
  unint64_t v2 = v0[27];
  uint64_t v3 = v0[28];
  uint64_t v4 = v0[26];
  swift_release();
  sub_1007708C8(v4, v2, v3, v1);
  sub_1007708C8(v4, v2, v3, v1);
  uint64_t v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

uint64_t sub_100774108(uint64_t a1)
{
  v2[2] = a1;
  v2[3] = v1;
  type metadata accessor for MainActor();
  v2[4] = static MainActor.shared.getter();
  uint64_t v4 = dispatch thunk of Actor.unownedExecutor.getter();
  v2[5] = v4;
  v2[6] = v3;
  return _swift_task_switch(sub_1007741A0, v4, v3);
}

uint64_t sub_1007741A0()
{
  uint64_t v1 = (void *)v0[3];
  uint64_t v2 = v1[6];
  v0[7] = v2;
  unint64_t v3 = v1[7];
  v0[8] = v3;
  uint64_t v4 = v1[8];
  v0[9] = v4;
  unint64_t v5 = v1[9];
  v0[10] = v5;
  v0[11] = v1[10];
  v0[12] = v1[11];
  v0[13] = v1[12];
  v0[14] = v1[13];
  v0[15] = v1[14];
  v0[16] = v1[15];
  v0[17] = v1[16];
  if (v5 >> 62 == 1)
  {
    uint64_t v6 = *(void *)(v0[2] + 16);
    v0[18] = v6;
    if (v6)
    {
      sub_100770860(v2, v3, v4, v5);
      v0[19] = 0;
      uint64_t v7 = v0[2];
      int v8 = *(unsigned __int8 *)(v7 + 40);
      swift_bridgeObjectRetain();
      switch(v8)
      {
        case 2:
          uint64_t v9 = (void *)swift_task_alloc();
          v0[21] = v9;
          *uint64_t v9 = v0;
          v9[1] = sub_100774700;
          uint64_t result = sub_100B495F0();
          break;
        case 3:
          unint64_t v14 = (void *)swift_task_alloc();
          v0[22] = v14;
          *unint64_t v14 = v0;
          v14[1] = sub_100774820;
          uint64_t result = sub_100B49A1C();
          break;
        case 4:
          uint64_t v15 = (void *)swift_task_alloc();
          v0[24] = v15;
          void *v15 = v0;
          v15[1] = sub_100774A60;
          uint64_t result = sub_100B4A428();
          break;
        case 5:
          unint64_t v16 = (void *)swift_task_alloc();
          v0[23] = v16;
          *unint64_t v16 = v0;
          v16[1] = sub_100774940;
          uint64_t result = sub_100B49DE8();
          break;
        default:
          double v12 = *(double *)(v7 + 32);
          long long v13 = (void *)swift_task_alloc();
          v0[20] = v13;
          *long long v13 = v0;
          v13[1] = sub_1007745E0;
          uint64_t result = sub_100B48F18(v8 & 1, v12);
          break;
      }
      return result;
    }
    unint64_t v17 = v3;
    char v18 = v4;
    swift_retain();
    swift_release();
    sub_1007708C8(v2, v17, v18, v5);
  }
  else
  {
    swift_release();
  }
  long long v11 = (uint64_t (*)(void))v0[1];
  return v11();
}

uint64_t sub_1007745E0()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 48);
  uint64_t v3 = *(void *)(v1 + 40);
  return _swift_task_switch(sub_100777308, v3, v2);
}

uint64_t sub_100774700()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 48);
  uint64_t v3 = *(void *)(v1 + 40);
  return _swift_task_switch(sub_100777308, v3, v2);
}

uint64_t sub_100774820()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 48);
  uint64_t v3 = *(void *)(v1 + 40);
  return _swift_task_switch(sub_100777308, v3, v2);
}

uint64_t sub_100774940()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 48);
  uint64_t v3 = *(void *)(v1 + 40);
  return _swift_task_switch(sub_100777308, v3, v2);
}

uint64_t sub_100774A60()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 48);
  uint64_t v3 = *(void *)(v1 + 40);
  return _swift_task_switch(sub_100774B80, v3, v2);
}

uint64_t sub_100774B80()
{
  uint64_t v1 = v0[19] + 1;
  if (v1 == v0[18])
  {
    uint64_t v3 = v0[9];
    unint64_t v2 = v0[10];
    uint64_t v5 = v0[7];
    unint64_t v4 = v0[8];
    swift_bridgeObjectRelease();
    swift_release();
    sub_1007708C8(v5, v4, v3, v2);
    uint64_t v6 = (uint64_t (*)(void))v0[1];
    return v6();
  }
  else
  {
    v0[19] = v1;
    uint64_t v8 = v0[2] + 16 * v1;
    switch(*(unsigned char *)(v8 + 40))
    {
      case 2:
        uint64_t v9 = (void *)swift_task_alloc();
        v0[21] = v9;
        *uint64_t v9 = v0;
        v9[1] = sub_100774700;
        uint64_t result = sub_100B495F0();
        break;
      case 3:
        long long v13 = (void *)swift_task_alloc();
        v0[22] = v13;
        *long long v13 = v0;
        v13[1] = sub_100774820;
        uint64_t result = sub_100B49A1C();
        break;
      case 4:
        unint64_t v14 = (void *)swift_task_alloc();
        v0[24] = v14;
        *unint64_t v14 = v0;
        v14[1] = sub_100774A60;
        uint64_t result = sub_100B4A428();
        break;
      case 5:
        uint64_t v15 = (void *)swift_task_alloc();
        v0[23] = v15;
        void *v15 = v0;
        v15[1] = sub_100774940;
        uint64_t result = sub_100B49DE8();
        break;
      default:
        double v10 = *(double *)(v8 + 32);
        char v11 = *(unsigned char *)(v8 + 40) & 1;
        double v12 = (void *)swift_task_alloc();
        v0[20] = v12;
        *double v12 = v0;
        v12[1] = sub_1007745E0;
        uint64_t result = sub_100B48F18(v11, v10);
        break;
    }
  }
  return result;
}

uint64_t sub_100774F40(float a1)
{
  *(void *)(v2 + 16) = v1;
  *(float *)(v2 + 160) = a1;
  type metadata accessor for MainActor();
  *(void *)(v2 + 24) = static MainActor.shared.getter();
  uint64_t v4 = dispatch thunk of Actor.unownedExecutor.getter();
  *(void *)(v2 + 32) = v4;
  *(void *)(v2 + 40) = v3;
  return _swift_task_switch(sub_100774FDC, v4, v3);
}

uint64_t sub_100774FDC()
{
  uint64_t v1 = *(void **)(v0 + 16);
  *(void *)(v0 + 48) = v1[6];
  *(void *)(v0 + 56) = v1[7];
  *(void *)(v0 + 64) = v1[8];
  unint64_t v2 = v1[9];
  *(void *)(v0 + 72) = v2;
  *(void *)(v0 + 80) = v1[10];
  *(void *)(v0 + 88) = v1[11];
  *(void *)(v0 + 96) = v1[12];
  *(void *)(v0 + 104) = v1[13];
  *(void *)(v0 + 112) = v1[14];
  *(void *)(v0 + 120) = v1[15];
  *(void *)(v0 + 128) = v1[16];
  if (v2 >> 62 == 1)
  {
    swift_retain();
    uint64_t v3 = (void *)swift_task_alloc();
    *(void *)(v0 + 136) = v3;
    *uint64_t v3 = v0;
    v3[1] = sub_100775120;
    float v4 = *(float *)(v0 + 160);
    return sub_100B4A6DC(v4);
  }
  else
  {
    swift_release();
    uint64_t v6 = *(uint64_t (**)(void))(v0 + 8);
    return v6(0);
  }
}

uint64_t sub_100775120(uint64_t a1)
{
  float v4 = *(void **)v2;
  *(void *)(*(void *)v2 + 144) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = v4[4];
    uint64_t v6 = v4[5];
    uint64_t v7 = sub_10077531C;
  }
  else
  {
    v4[19] = a1;
    uint64_t v5 = v4[4];
    uint64_t v6 = v4[5];
    uint64_t v7 = sub_100775248;
  }
  return _swift_task_switch(v7, v5, v6);
}

uint64_t sub_100775248()
{
  uint64_t v2 = v0[8];
  unint64_t v1 = v0[9];
  uint64_t v4 = v0[6];
  unint64_t v3 = v0[7];
  swift_release();
  sub_1007708C8(v4, v3, v2, v1);
  uint64_t v5 = v0[19];
  uint64_t v6 = (uint64_t (*)(uint64_t))v0[1];
  return v6(v5);
}

uint64_t sub_10077531C()
{
  sub_1007708C8(v0[6], v0[7], v0[8], v0[9]);
  swift_release();
  unint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_1007753A8(void *a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = sub_1005057FC(&qword_101672BB0);
  *(void *)&double v12 = __chkstk_darwin(v10 - 8, v11).n128_u64[0];
  unint64_t v14 = (char *)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v15 = [a1 device];
  uint64_t v16 = *(void **)(v4 + 32);
  if (v16)
  {
    uint64_t v34 = a4;
    unint64_t v17 = v16;
    id v18 = [v17 device];
    id v19 = v18;
    if (v18)
    {
      id v20 = [v18 registryID];
      swift_unknownObjectRelease();
    }
    else
    {
      id v20 = 0;
    }
    uint64_t v35 = v14;
    uint64_t v36 = v5;
    id v21 = [v15 registryID];
    if (!v19 || v20 != v21) {
      [v17 setDevice:v15];
    }
    id v22 = &v17[OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE10MetalLayer_textureData];
    uint64_t v23 = *(void *)&v17[OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE10MetalLayer_textureData];
    uint64_t v24 = *(void *)&v17[OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE10MetalLayer_textureData + 8];
    id v33 = v15;
    uint64_t v25 = *(void *)&v17[OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE10MetalLayer_textureData + 16];
    uint64_t v26 = *(void **)&v17[OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE10MetalLayer_textureData + 24];
    *(void *)id v22 = a1;
    *((void *)v22 + 1) = a2;
    a4 = v34;
    *((void *)v22 + 2) = a3;
    *((void *)v22 + 3) = a4;
    swift_unknownObjectRetain_n();
    swift_unknownObjectRetain_n();
    swift_unknownObjectRetain_n();
    id v27 = a4;
    sub_10076E18C(v23, v24, v25, v26);
    sub_1009EA62C();

    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    unint64_t v14 = v35;
    uint64_t v5 = v36;
  }
  uint64_t v28 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v14, 1, 1, v28);
  type metadata accessor for MainActor();
  swift_unknownObjectRetain();
  swift_retain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  id v29 = a4;
  uint64_t v30 = static MainActor.shared.getter();
  uint64_t v31 = (void *)swift_allocObject();
  v31[2] = v30;
  uint64_t v31[3] = &protocol witness table for MainActor;
  v31[4] = v5;
  v31[5] = a1;
  v31[6] = a2;
  v31[7] = a3;
  v31[8] = v29;
  sub_1005912FC((uint64_t)v14, (uint64_t)&unk_10167EDB8, (uint64_t)v31);
  swift_unknownObjectRelease();
  return swift_release();
}

uint64_t sub_100775658(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[6] = a7;
  v8[7] = a8;
  v8[4] = a5;
  v8[5] = a6;
  v8[2] = a1;
  v8[3] = a4;
  type metadata accessor for MainActor();
  v8[8] = static MainActor.shared.getter();
  uint64_t v10 = dispatch thunk of Actor.unownedExecutor.getter();
  v8[9] = v10;
  v8[10] = v9;
  return _swift_task_switch(sub_1007756F8, v10, v9);
}

uint64_t sub_1007756F8()
{
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  *(void *)(v0 + 88) = Strong;
  if (Strong)
  {
    uint64_t v2 = *(void *)(v0 + 24);
    uint64_t v3 = *(void *)(v2 + 24);
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v13 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v3 + 24)
                                                                                                + **(int **)(v3 + 24));
    uint64_t v5 = v2 + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE10RepBackend_uuid;
    uint64_t v6 = (void *)swift_task_alloc();
    *(void *)(v0 + 96) = v6;
    *uint64_t v6 = v0;
    v6[1] = sub_100775878;
    uint64_t v7 = *(void *)(v0 + 48);
    uint64_t v8 = *(void *)(v0 + 56);
    uint64_t v9 = *(void *)(v0 + 32);
    uint64_t v10 = *(void *)(v0 + 40);
    return v13(v5, v9, v10, v7, v8, ObjectType, v3);
  }
  else
  {
    swift_release();
    **(unsigned char **)(v0 + 16) = 1;
    uint64_t v12 = *(uint64_t (**)(void))(v0 + 8);
    return v12();
  }
}

uint64_t sub_100775878()
{
  uint64_t v2 = *v1;
  swift_task_dealloc();
  if (v0)
  {
    swift_errorRelease();
    swift_unknownObjectRelease();
    uint64_t v3 = *(void *)(v2 + 72);
    uint64_t v4 = *(void *)(v2 + 80);
    uint64_t v5 = sub_100775A24;
  }
  else
  {
    swift_unknownObjectRelease();
    uint64_t v3 = *(void *)(v2 + 72);
    uint64_t v4 = *(void *)(v2 + 80);
    uint64_t v5 = sub_1007759BC;
  }
  return _swift_task_switch(v5, v3, v4);
}

uint64_t sub_1007759BC()
{
  swift_release();
  **(unsigned char **)(v0 + 16) = 0;
  unint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100775A24()
{
  swift_release();
  **(unsigned char **)(v0 + 16) = 1;
  unint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100775A90(uint64_t a1, uint64_t a2)
{
  v2[83] = a2;
  type metadata accessor for MainActor();
  v2[84] = static MainActor.shared.getter();
  uint64_t v4 = dispatch thunk of Actor.unownedExecutor.getter();
  v2[85] = v4;
  v2[86] = v3;
  return _swift_task_switch(sub_100775B2C, v4, v3);
}

uint64_t sub_100775B2C()
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  v0[87] = Strong;
  if (!Strong) {
    goto LABEL_18;
  }
  uint64_t v2 = Strong;
  uint64_t v3 = *(void *)(Strong + 48);
  unint64_t v4 = 0x8000000000000000;
  uint64_t v5 = 0;
  uint64_t v70 = (uint64_t)(v0 + 54);
  unint64_t v6 = 0;
  uint64_t v7 = 0;
  uint64_t v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  switch(*(void *)(Strong + 72) >> 62)
  {
    case 1:
      uint64_t v11 = v3 + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE11ClientScene_sceneDescription;
      uint64_t v5 = *(void *)(v3 + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE11ClientScene_sceneDescription);
      unint64_t v12 = *(void *)(v3 + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE11ClientScene_sceneDescription + 8);
      uint64_t v13 = *(void *)(v3 + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE11ClientScene_sceneDescription + 16);
      uint64_t v8 = *(void *)(v11 + 24);
      uint64_t v14 = *(void *)(v11 + 32);
      unint64_t v15 = *(unsigned __int8 *)(v11 + 40);
      uint64_t v16 = *(void *)(v11 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v10 = v16;
      uint64_t v9 = v14;
      unint64_t v6 = v12;
      unint64_t v4 = v15;
      uint64_t v7 = v13;
      break;
    case 2:
      uint64_t v7 = *(unsigned __int8 *)(Strong + 64);
      unint64_t v17 = *(void *)(Strong + 56);
      sub_100767448(v3, v17, *(unsigned char *)(Strong + 64));
      unint64_t v6 = v17;
      uint64_t v8 = 0;
      uint64_t v9 = 0;
      uint64_t v10 = 0;
      unint64_t v4 = 0x4000000000000000;
      uint64_t v5 = v3;
      break;
    case 3:
      break;
    default:
      unint64_t v6 = 0;
      uint64_t v7 = 0;
      uint64_t v8 = 0;
      uint64_t v9 = 0;
      uint64_t v10 = 0;
      uint64_t v5 = 2;
      break;
  }
  v0[94] = v10;
  v0[93] = v4;
  v0[92] = v9;
  v0[91] = v8;
  v0[90] = v7;
  v0[89] = v6;
  v0[88] = v5;
  v0[54] = v5;
  v0[55] = v6;
  v0[56] = v7;
  v0[57] = v8;
  v0[58] = v9;
  v0[59] = v4;
  v0[60] = v10;
  uint64_t v18 = OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE10RepBackend_lastSentAcknowledgedRenderState;
  v0[95] = OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE10RepBackend_lastSentAcknowledgedRenderState;
  uint64_t v69 = v2;
  id v19 = (uint64_t *)(v2 + v18);
  uint64_t v21 = *v19;
  unint64_t v20 = v19[1];
  uint64_t v23 = v19[2];
  uint64_t v22 = v19[3];
  uint64_t v24 = v19[4];
  unint64_t v25 = v19[5];
  uint64_t v26 = v19[6];
  unint64_t v72 = v4;
  char v74 = v7;
  unint64_t v68 = v6;
  uint64_t v71 = v8;
  uint64_t v65 = v22;
  uint64_t v67 = v9;
  if (v25 >> 1 == 0xFFFFFFFF)
  {
    unint64_t v27 = v6;
    char v62 = v23;
    uint64_t v63 = v24;
    unint64_t v28 = v4;
    sub_1007673E8(v5, v6, v7, v8, v9, v4);
    sub_100776E98(v5, v27, v7, v8, v9, v28);
    sub_100776E98(v21, v20, v62, v65, v63, v25);
  }
  else
  {
    v0[44] = v21;
    v0[45] = v20;
    v0[46] = v23;
    v0[47] = v22;
    v0[48] = v24;
    v0[49] = v25;
    v0[50] = v26;
    unint64_t v29 = v6;
    char v30 = v7;
    char v31 = v23;
    uint64_t v32 = v22;
    uint64_t v33 = v8;
    uint64_t v34 = v24;
    sub_1007673E8(v5, v6, v30, v33, v9, v4);
    sub_100776EAC(v21, v20, v31, v32, v34, v25);
    char v64 = sub_100AD8F5C(v70, (uint64_t)(v0 + 44));
    sub_100776E98(v21, v20, v31, v65, v34, v25);
    sub_100767658(v5, v29, v74, v71, v9, v72);
    if (v64)
    {
      swift_release();
      sub_100767658(v5, v68, v74, v71, v9, v72);
      goto LABEL_18;
    }
  }
  if (qword_10166FB00 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v35 = (void *)static OS_os_log.crlThreeDimensionalObjects;
  v0[96] = sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117D8C0;
  uint64_t v37 = OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE10RepBackend_uuid;
  v0[97] = OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE10RepBackend_uuid;
  uint64_t v38 = v69 + v37;
  id v66 = v35;
  UUID.uuidString.getter();
  String.index(_:offsetBy:)();
  String.subscript.getter();
  swift_bridgeObjectRelease();
  uint64_t v39 = static String._fromSubstring(_:)();
  uint64_t v41 = v40;
  swift_bridgeObjectRelease();
  *(void *)(inited + 56) = &type metadata for String;
  unint64_t v42 = sub_100528BE4();
  v0[98] = v42;
  *(void *)(inited + 64) = v42;
  *(void *)(inited + 32) = v39;
  *(void *)(inited + 40) = v41;
  sub_10076E5A4(v70, (uint64_t)(v0 + 64));
  sub_1007673E8(v5, v68, v74, v71, v67, v72);
  uint64_t v43 = String.init<A>(describing:)();
  *(void *)(inited + 96) = &type metadata for String;
  *(void *)(inited + 104) = v42;
  *(void *)(inited + 72) = v43;
  *(void *)(inited + 80) = v44;
  uint64_t v45 = static os_log_type_t.debug.getter();
  sub_100BAC898((uint64_t)v66, (uint64_t)&_mh_execute_header, v45, (uint64_t)"(CoreRE) [%{public}@] new state (with acknowledge): %{public}@", 62, 2, inited);
  swift_setDeallocating();
  v0[99] = sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  uint64_t v46 = swift_unknownObjectWeakLoadStrong();
  v0[100] = v46;
  if (v46)
  {
    uint64_t v47 = *(void *)(v69 + 24);
    uint64_t ObjectType = swift_getObjectType();
    unint64_t v73 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v47 + 16) + **(int **)(v47 + 16));
    char v49 = (void *)swift_task_alloc();
    v0[101] = v49;
    *char v49 = v0;
    v49[1] = sub_1007761C4;
    return v73(v38, v70, ObjectType, v47);
  }
  swift_release();
  uint64_t v51 = v0[94];
  uint64_t v52 = (uint64_t *)(v0[87] + v0[95]);
  uint64_t v53 = *v52;
  unint64_t v54 = v52[1];
  uint64_t v55 = v52[2];
  uint64_t v56 = v52[3];
  uint64_t v57 = v52[4];
  unint64_t v58 = v52[5];
  long long v59 = *((_OWORD *)v0 + 45);
  long long v60 = *((_OWORD *)v0 + 46);
  *(_OWORD *)uint64_t v52 = *((_OWORD *)v0 + 44);
  *((_OWORD *)v52 + 1) = v59;
  *((_OWORD *)v52 + 2) = v60;
  v52[6] = v51;
  sub_100776E98(v53, v54, v55, v56, v57, v58);
LABEL_18:
  swift_release();
  CGFloat v61 = (uint64_t (*)(void))v0[1];
  return v61();
}

uint64_t sub_1007761C4()
{
  uint64_t v2 = *(void **)v1;
  *(void *)(*(void *)v1 + 816) = v0;
  swift_task_dealloc();
  swift_unknownObjectRelease();
  if (v0)
  {
    sub_100767658(v2[88], v2[89], v2[90], v2[91], v2[92], v2[93]);
    uint64_t v3 = v2[86];
    uint64_t v4 = v2[85];
    uint64_t v5 = sub_1007763C8;
  }
  else
  {
    uint64_t v3 = v2[86];
    uint64_t v4 = v2[85];
    uint64_t v5 = sub_100776324;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_100776324()
{
  swift_release();
  uint64_t v1 = *(void *)(v0 + 752);
  uint64_t v2 = (uint64_t *)(*(void *)(v0 + 696) + *(void *)(v0 + 760));
  uint64_t v3 = *v2;
  unint64_t v4 = v2[1];
  uint64_t v5 = v2[2];
  uint64_t v6 = v2[3];
  uint64_t v7 = v2[4];
  unint64_t v8 = v2[5];
  long long v9 = *(_OWORD *)(v0 + 720);
  long long v10 = *(_OWORD *)(v0 + 736);
  *(_OWORD *)uint64_t v2 = *(_OWORD *)(v0 + 704);
  *((_OWORD *)v2 + 1) = v9;
  *((_OWORD *)v2 + 2) = v10;
  v2[6] = v1;
  sub_100776E98(v3, v4, v5, v6, v7, v8);
  swift_release();
  uint64_t v11 = *(uint64_t (**)(void))(v0 + 8);
  return v11();
}

uint64_t sub_1007763C8()
{
  uint64_t v1 = *(void *)(v0 + 816);
  uint64_t v2 = *(void *)(v0 + 784);
  swift_release();
  uint64_t v3 = (void *)static OS_os_log.crlThreeDimensionalObjects;
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117D8C0;
  id v5 = v3;
  UUID.uuidString.getter();
  String.index(_:offsetBy:)();
  String.subscript.getter();
  swift_bridgeObjectRelease();
  uint64_t v6 = static String._fromSubstring(_:)();
  uint64_t v8 = v7;
  swift_bridgeObjectRelease();
  *(void *)(inited + 56) = &type metadata for String;
  *(void *)(inited + 64) = v2;
  *(void *)(inited + 32) = v6;
  *(void *)(inited + 40) = v8;
  swift_getErrorValue();
  uint64_t v9 = Error.localizedDescription.getter();
  *(void *)(inited + 96) = &type metadata for String;
  *(void *)(inited + 104) = v2;
  *(void *)(inited + 72) = v9;
  *(void *)(inited + 80) = v10;
  uint64_t v11 = static os_log_type_t.debug.getter();
  sub_100BAC898((uint64_t)v5, (uint64_t)&_mh_execute_header, v11, (uint64_t)"(CoreRE) [%{public}@] error sending state: %{public}@", 53, 2, inited);
  swift_setDeallocating();
  swift_arrayDestroy();

  *(void *)(v0 + 632) = v1;
  swift_errorRetain();
  sub_1005057FC(&qword_101672BD0);
  if (swift_dynamicCast())
  {
    uint64_t v12 = *(void *)(v0 + 592);
    unint64_t v13 = *(void *)(v0 + 600);
    unsigned int v14 = *(unsigned __int8 *)(v0 + 608);
  }
  else
  {
    *(void *)(v0 + 640) = *(void *)(v0 + 816);
    swift_errorRetain();
    if (swift_dynamicCast())
    {
      uint64_t v12 = *(void *)(v0 + 616);
      unint64_t v13 = *(void *)(v0 + 624);
      unsigned int v14 = 4;
    }
    else
    {
      swift_getErrorValue();
      uint64_t v12 = Error.localizedDescription.getter();
      unint64_t v13 = v15;
      unsigned int v14 = 2;
    }
  }
  uint64_t v16 = *(void *)(v0 + 696);
  sub_100776DB4(v16 + 48, v0 + 16);
  unint64_t v17 = *(void *)(v16 + 56);
  uint64_t v18 = *(void *)(v16 + 64);
  unint64_t v21 = *(void *)(v16 + 72);
  uint64_t v22 = *(void *)(v16 + 48);
  *(void *)(v16 + 48) = v12;
  *(void *)(v16 + 56) = v13;
  *(void *)(v16 + 64) = v14;
  *(void *)(v16 + 72) = 0x8000000000000000;
  *(_OWORD *)(v16 + 80) = 0u;
  *(_OWORD *)(v16 + 96) = 0u;
  *(void *)(v16 + 128) = 0;
  *(_OWORD *)(v16 + 112) = 0u;
  sub_100767448(v12, v13, v14);
  sub_100767448(v12, v13, v14);
  sub_100776DDC((void *)(v0 + 16), (void (*)(void, void, void, void, void, void, void, void, void, void, void))sub_100770860);
  sub_1007708C8(v22, v17, v18, v21);
  sub_100770DB8(v0 + 16);
  sub_1007676B8(v12, v13, v14);
  sub_100776DDC((void *)(v0 + 16), (void (*)(void, void, void, void, void, void, void, void, void, void, void))sub_1007708C8);
  sub_100770F28();
  sub_1007676B8(v12, v13, v14);
  swift_release();
  swift_errorRelease();
  id v19 = *(uint64_t (**)(void))(v0 + 8);
  return v19();
}

uint64_t sub_10077678C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE10RepBackend_uuid;
  uint64_t v4 = type metadata accessor for UUID();
  id v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t sub_100776800(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_100528D08;
  return sub_100771A00(a1);
}

uint64_t sub_100776894(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_100528488;
  return sub_1007738B0(a1);
}

uint64_t sub_100776928(uint64_t a1, char a2)
{
  *(unsigned char *)(v3 + 128) = a2;
  *(void *)(v3 + 64) = a1;
  *(void *)(v3 + 72) = v2;
  type metadata accessor for MainActor();
  *(void *)(v3 + 80) = static MainActor.shared.getter();
  uint64_t v5 = dispatch thunk of Actor.unownedExecutor.getter();
  *(void *)(v3 + 88) = v5;
  *(void *)(v3 + 96) = v4;
  return _swift_task_switch(sub_1007769C4, v5, v4);
}

uint64_t sub_1007769C4()
{
  char v1 = *(unsigned char *)(v0 + 128);
  uint64_t v2 = *(void *)(v0 + 64);
  sub_1005057FC(&qword_10167E9D0);
  uint64_t inited = swift_initStackObject();
  *(void *)(v0 + 104) = inited;
  *(_OWORD *)(inited + 16) = xmmword_10117E810;
  *(void *)(inited + 32) = v2;
  *(unsigned char *)(inited + 40) = v1;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 112) = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_100776A9C;
  return sub_100774108(inited);
}

uint64_t sub_100776A9C()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 120) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 88);
    uint64_t v4 = *(void *)(v2 + 96);
    uint64_t v5 = sub_100776C1C;
  }
  else
  {
    swift_setDeallocating();
    uint64_t v3 = *(void *)(v2 + 88);
    uint64_t v4 = *(void *)(v2 + 96);
    uint64_t v5 = sub_100776BB8;
  }
  return _swift_task_switch(v5, v3, v4);
}

uint64_t sub_100776BB8()
{
  swift_release();
  char v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100776C1C()
{
  swift_setDeallocating();
  swift_release();
  char v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100776C8C(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_100528D08;
  return sub_100774108(a1);
}

uint64_t sub_100776D20(float a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_10072CB9C;
  return sub_100774F40(a1);
}

uint64_t sub_100776DB4(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)a2 = *(_OWORD *)a1;
  *(_OWORD *)(a2 + 16) = v2;
  long long v3 = *(_OWORD *)(a1 + 32);
  long long v4 = *(_OWORD *)(a1 + 48);
  long long v5 = *(_OWORD *)(a1 + 64);
  *(void *)(a2 + 80) = *(void *)(a1 + 80);
  *(_OWORD *)(a2 + 48) = v4;
  *(_OWORD *)(a2 + 64) = v5;
  *(_OWORD *)(a2 + 32) = v3;
  return a2;
}

void *sub_100776DDC(void *a1, void (*a2)(void, void, void, void, void, void, void, void, void, void, void))
{
  return a1;
}

unint64_t sub_100776E38()
{
  unint64_t result = qword_10167ED80;
  if (!qword_10167ED80)
  {
    type metadata accessor for CRLUSDRendering.TaskQueue();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_10167ED80);
  }
  return result;
}

uint64_t sub_100776E90(uint64_t a1)
{
  return sub_100AD7E38(a1, v1);
}

uint64_t sub_100776E98(uint64_t result, unint64_t a2, char a3, uint64_t a4, uint64_t a5, unint64_t a6)
{
  if (a6 >> 1 != 0xFFFFFFFF) {
    return sub_100767658(result, a2, a3, a4, a5, a6);
  }
  return result;
}

uint64_t sub_100776EAC(uint64_t result, unint64_t a2, char a3, uint64_t a4, uint64_t a5, unint64_t a6)
{
  if (a6 >> 1 != 0xFFFFFFFF) {
    return sub_1007673E8(result, a2, a3, a4, a5, a6);
  }
  return result;
}

__n128 *sub_100776EC0(__n128 *a1, __n128 *a2)
{
  return a2;
}

uint64_t sub_100776F1C(uint64_t a1)
{
  uint64_t v5 = *(void *)(v1 + 16);
  uint64_t v4 = *(void *)(v1 + 24);
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v6;
  *uint64_t v6 = v2;
  v6[1] = sub_100528488;
  return sub_100771D18(a1, v5, v4);
}

unint64_t sub_100776FC8()
{
  unint64_t result = qword_101683D00;
  if (!qword_101683D00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101683D00);
  }
  return result;
}

uint64_t sub_10077701C()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();

  return _swift_deallocObject(v0, 72, 7);
}

uint64_t sub_10077707C(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  uint64_t v9 = v1[7];
  uint64_t v10 = v1[8];
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v11;
  *uint64_t v11 = v2;
  v11[1] = sub_100528488;
  return sub_100775658(a1, v4, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_100777158()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void *sub_100777190()
{
  return sub_10076FFBC();
}

uint64_t sub_10077719C()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_100528D08;
  return sub_100770294();
}

uint64_t sub_100777254(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_100528D08;
  return sub_1007705A4(a1, v4, v5, v6);
}

uint64_t sub_10077730C(uint64_t a1, int a2)
{
  int v56 = a2;
  uint64_t v3 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  uint64_t v60 = *(void *)(v3 - 8);
  uint64_t v61 = v3;
  __chkstk_darwin(v3, v4);
  uint64_t v6 = &v52[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = sub_1005057FC((uint64_t *)&unk_101676310);
  uint64_t v9 = __chkstk_darwin(v7 - 8, v8);
  long long v59 = &v52[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v12 = __chkstk_darwin(v9, v11);
  unsigned int v14 = &v52[-v13];
  __chkstk_darwin(v12, v15);
  unint64_t v17 = &v52[-v16];
  uint64_t v18 = sub_1005057FC(&qword_10167EF20);
  __chkstk_darwin(v18 - 8, v19);
  unint64_t v21 = &v52[-((v20 + 15) & 0xFFFFFFFFFFFFFFF0)];
  *(void *)&long long v58 = sub_1005057FC(&qword_10167EF28);
  __chkstk_darwin(v58, v22);
  uint64_t v55 = &v52[-((v23 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v24 = sub_1005057FC(&qword_101674250);
  uint64_t v57 = *(void *)(v24 - 8);
  __chkstk_darwin(v24, v25);
  unint64_t v27 = &v52[-((v26 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v28 = sub_1005057FC((uint64_t *)&unk_10169B4A0);
  __chkstk_darwin(v28 - 8, v29);
  char v31 = &v52[-((v30 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v32 = v2;
  dispatch thunk of UICollectionViewDiffableDataSource.indexPath(for:)();
  uint64_t v33 = type metadata accessor for IndexPath();
  int v34 = (*(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v33 - 8) + 48))(v31, 1, v33);
  uint64_t result = sub_100522F00((uint64_t)v31, (uint64_t *)&unk_10169B4A0);
  if (v34 == 1)
  {
    sub_100778B6C(v21);
    uint64_t v36 = sub_1005057FC(&qword_10167EF30);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v36 - 8) + 48))(v21, 1, v36) == 1)
    {
      sub_100522F00((uint64_t)v21, &qword_10167EF20);
      sub_1005057FC((uint64_t *)&unk_101672B40);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_10117E810;
      uint64_t v38 = sub_100DD71D4();
      uint64_t v40 = v39;
      *(void *)(inited + 56) = &type metadata for String;
      *(void *)(inited + 64) = sub_100528BE4();
      *(void *)(inited + 32) = v38;
      *(void *)(inited + 40) = v40;
      sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"expose(_:animated:)", 19, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/CRLiOSBoardLibraryViewModelController.swift", 101, 2, 169, (uint64_t)"Didn't find item to expose: %@", 30, 2u, inited);
      sub_1005598CC(inited, (uint64_t)"expose(_:animated:)", 19, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/CRLiOSBoardLibraryViewModelController.swift", 101, 2, 169);
      swift_setDeallocating();
      sub_1005057FC(&qword_101672B50);
      return swift_arrayDestroy();
    }
    else
    {
      uint64_t v54 = v32;
      char v41 = *v21;
      unint64_t v42 = &v21[*(int *)(v36 + 48)];
      uint64_t v43 = v57;
      uint64_t v44 = v58;
      uint64_t v45 = v55;
      uint64_t v46 = &v55[*(int *)(v58 + 48)];
      char *v55 = v41;
      uint64_t v47 = *(void (**)(char *, char *, uint64_t))(v43 + 32);
      v47(v46, v42, v24);
      int v53 = *v45;
      v47(v27, &v45[*(int *)(v44 + 48)], v24);
      NSDiffableDataSourceSectionSnapshot.parent(of:)();
      sub_1005FCAC8((uint64_t)v17, (uint64_t)v14);
      unint64_t v48 = *(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v60 + 48);
      if (v48(v14, 1, v61) == 1)
      {
LABEL_8:
        sub_100522F00((uint64_t)v14, (uint64_t *)&unk_101676310);
      }
      else
      {
        long long v58 = xmmword_10117E810;
        while (1)
        {
          sub_100575C20((uint64_t)v14, (uint64_t)v6, type metadata accessor for CRLBoardLibraryViewModel.Item);
          if (NSDiffableDataSourceSectionSnapshot.isExpanded(_:)()) {
            break;
          }
          sub_1005057FC(&qword_10169B510);
          unint64_t v49 = (*(unsigned __int8 *)(v60 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v60 + 80);
          uint64_t v50 = swift_allocObject();
          *(_OWORD *)(v50 + 16) = v58;
          sub_10076F9F8((uint64_t)v6, v50 + v49);
          NSDiffableDataSourceSectionSnapshot.expand(_:)((Swift::OpaquePointer)v50);
          swift_bridgeObjectRelease();
          uint64_t v51 = (uint64_t)v59;
          NSDiffableDataSourceSectionSnapshot.parent(of:)();
          sub_100779220((uint64_t)v6, type metadata accessor for CRLBoardLibraryViewModel.Item);
          sub_100522F00((uint64_t)v17, (uint64_t *)&unk_101676310);
          sub_10051B3EC(v51, (uint64_t)v17, (uint64_t *)&unk_101676310);
          sub_1005FCAC8((uint64_t)v17, (uint64_t)v14);
          if (v48(v14, 1, v61) == 1) {
            goto LABEL_8;
          }
        }
        sub_100779220((uint64_t)v6, type metadata accessor for CRLBoardLibraryViewModel.Item);
      }
      sub_100778830((uint64_t)v27, v53);
      sub_100522F00((uint64_t)v17, (uint64_t *)&unk_101676310);
      return (*(uint64_t (**)(char *, uint64_t))(v57 + 8))(v27, v24);
    }
  }
  return result;
}

void *sub_1007779CC(void *a1, uint64_t a2, uint64_t a3)
{
  v3[3] = 0;
  swift_unknownObjectWeakInit();
  v3[4] = &_swiftEmptyDictionarySingleton;
  v3[5] = &_swiftEmptyDictionarySingleton;
  v3[6] = a1;
  v3[7] = a2;
  v3[8] = a3;
  v3[9] = 0;
  uint64_t v7 = self;
  id v8 = a1;
  swift_unknownObjectRetain();
  id v9 = [v7 defaultCenter];
  if (qword_1016700C0 != -1) {
    swift_once();
  }
  uint64_t v10 = qword_10171C6C8;
  uint64_t v11 = swift_allocObject();
  swift_weakInit();
  v16[4] = sub_10077918C;
  v16[5] = v11;
  v16[0] = _NSConcreteStackBlock;
  v16[1] = *(void *)"";
  v16[2] = sub_1005E5680;
  v16[3] = &unk_101512DD0;
  uint64_t v12 = _Block_copy(v16);
  swift_unknownObjectRetain();
  swift_release();
  id v13 = [v9 addObserverForName:v10 object:a2 queue:0 usingBlock:v12];
  _Block_release(v12);

  swift_unknownObjectRelease();
  v3[9] = v13;
  swift_unknownObjectRelease();
  uint64_t v14 = sub_100CDD4A0((uint64_t)&off_1015036E0);
  sub_100777CFC(v14, 1, 0);
  swift_bridgeObjectRelease();

  swift_unknownObjectRelease();
  return v3;
}

uint64_t sub_100777BC8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Notification();
  __chkstk_darwin(v2, v3);
  uint64_t v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v6 + 16))(v5, a1);
  uint64_t result = sub_100DC6278((uint64_t)v5);
  if (result)
  {
    uint64_t v8 = result;
    swift_beginAccess();
    if (swift_weakLoadStrong())
    {
      sub_100777CFC(v8, 0, 0);
      swift_release();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_100777CFC(uint64_t a1, int a2, int a3)
{
  int v81 = a3;
  int v72 = a2;
  uint64_t v77 = sub_1005057FC(&qword_10167EF38);
  uint64_t v5 = *(void *)(v77 - 8);
  __chkstk_darwin(v77, v6);
  uint64_t v76 = (char *)&v68 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1005057FC(&qword_101674248);
  uint64_t v10 = __chkstk_darwin(v8 - 8, v9);
  uint64_t v86 = (uint64_t)&v68 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10, v12);
  uint64_t v14 = (char *)&v68 - v13;
  uint64_t v89 = sub_1005057FC(&qword_101674250);
  uint64_t v15 = *(void *)(v89 - 8);
  uint64_t v17 = __chkstk_darwin(v89, v16);
  char v83 = (char *)&v68 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17, v19);
  uint64_t v82 = (char *)&v68 - v20;
  uint64_t v84 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  __chkstk_darwin(v84, v21);
  uint64_t v23 = (unsigned __int8 *)&v68 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10166FA10 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v24 = (void *)static OS_os_log.crlStorageHierachy;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117E810;
  sub_1007791AC();
  id v26 = v24;
  swift_bridgeObjectRetain();
  uint64_t v27 = Set.description.getter();
  uint64_t v29 = v28;
  uint64_t v91 = a1;
  swift_bridgeObjectRelease();
  *(void *)(inited + 56) = &type metadata for String;
  *(void *)(inited + 64) = sub_100528BE4();
  *(void *)(inited + 32) = v27;
  *(void *)(inited + 40) = v29;
  uint64_t v30 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v26, (uint64_t)&_mh_execute_header, v30, (uint64_t)"Refreshing snapshots for libraries: %@", 38, 2, inited);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  uint64_t v31 = *(void *)(v3 + 56);
  uint64_t v32 = *(void *)(v31 + OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_storeFolderBoardCount);
  uint64_t v87 = v3;
  if (!v32)
  {
LABEL_39:
    __break(1u);
    return;
  }
  uint64_t v75 = v5;
  uint64_t v73 = *(void *)(v87 + 40);
  *(void *)(v87 + 40) = v32;
  swift_bridgeObjectRetain_n();
  unint64_t v33 = *(void *)(v31 + OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_storeHierarchySnapshot);
  if (v33 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v34 = _CocoaArrayWrapper.endIndex.getter();
  }
  else
  {
    uint64_t v34 = *(void *)((v33 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
  }
  uint64_t v35 = v91;
  uint64_t v74 = v32;
  if (v34)
  {
    if (v34 >= 1)
    {
      uint64_t v36 = 0;
      unint64_t v37 = v33 & 0xC000000000000001;
      unint64_t v90 = v33 + 32;
      uint64_t v92 = v91 + 56;
      id v85 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v15 + 48);
      uint64_t v70 = (void (**)(char *, uint64_t, uint64_t))(v15 + 32);
      uint64_t v69 = (void (**)(uint64_t, uint64_t))(v15 + 8);
      uint64_t v80 = v14;
      unint64_t v79 = v33;
      unint64_t v88 = v33 & 0xC000000000000001;
      uint64_t v78 = v34;
      while (1)
      {
        if (v37) {
          id v38 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          id v38 = *(id *)(v90 + 8 * v36);
        }
        uint64_t v39 = v38;
        sub_10076F9F8((uint64_t)v38 + OBJC_IVAR____TtC8Freeform32CRLBoardLibraryViewModelItemNode_item, (uint64_t)v23);
        if (swift_getEnumCaseMultiPayload())
        {

          sub_100779220((uint64_t)v23, type metadata accessor for CRLBoardLibraryViewModel.Item);
        }
        else if (*(void *)(v35 + 16))
        {
          Swift::UInt v40 = *v23;
          Hasher.init(_seed:)();
          Hasher._combine(_:)(v40);
          Swift::Int v41 = Hasher._finalize()();
          uint64_t v35 = v91;
          uint64_t v42 = -1 << *(unsigned char *)(v91 + 32);
          unint64_t v43 = v41 & ~v42;
          if ((*(void *)(v92 + ((v43 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v43))
          {
            uint64_t v44 = *(void *)(v91 + 48);
            if (*(unsigned __int8 *)(v44 + v43) == v40)
            {
LABEL_21:
              uint64_t v46 = v86;
              sub_1009D0FE0(v86);
              uint64_t v47 = *v85;
              if ((*v85)(v46, 1, v89) == 1)
              {
                sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"refreshSnapshots(for:expandSectionRootItems:animated:)", 54, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/CRLiOSBoardLibraryViewModelController.swift", 101, 2, 120, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
                LOBYTE(v66) = 2;
                v65[0] = "invalid nil found when unwrapping value";
                v65[1] = 39;
                sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"refreshSnapshots(for:expandSectionRootItems:animated:)", 54, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/CRLiOSBoardLibraryViewModelController.swift", 101, 2, 120);
              }
              uint64_t v48 = (uint64_t)v80;
              sub_10051B3EC(v86, (uint64_t)v80, &qword_101674248);
              uint64_t v49 = v89;
              if (v47(v48, 1, v89) == 1)
              {

                sub_100522F00(v48, &qword_101674248);
                uint64_t v35 = v91;
                unint64_t v37 = v88;
              }
              else
              {
                (*v70)(v82, v48, v49);
                char v93 = v40;
                uint64_t v50 = v83;
                UICollectionViewDiffableDataSource.snapshot(for:)();
                uint64_t v51 = NSDiffableDataSourceSectionSnapshot.items.getter();
                uint64_t v52 = sub_100CDD514(v51);
                swift_bridgeObjectRelease();
                uint64_t v53 = NSDiffableDataSourceSectionSnapshot.items.getter();
                uint64_t v71 = &v68;
                __chkstk_darwin(v53, v54);
                id v66 = v50;
                uint64_t v67 = v52;
                uint64_t v56 = sub_100875804((uint64_t (*)(char *))sub_100779200, (uint64_t)v65, v55);
                uint64_t v57 = (uint64_t)v82;
                swift_bridgeObjectRelease();
                if (*(void *)(v56 + 16)) {
                  NSDiffableDataSourceSectionSnapshot.expand(_:)((Swift::OpaquePointer)v56);
                }
                swift_bridgeObjectRelease();
                if ((v72 & 1) != 0 && v40)
                {
                  uint64_t v58 = NSDiffableDataSourceSectionSnapshot.rootItems.getter();
                  NSDiffableDataSourceSectionSnapshot.expand(_:)((Swift::OpaquePointer)v58);
                  uint64_t v49 = v89;
                  swift_bridgeObjectRelease();
                }
                uint64_t v59 = v57;
                sub_100778830(v57, v40);

                uint64_t v60 = *v69;
                (*v69)(v59, v49);
                v60((uint64_t)v83, v49);
                uint64_t v35 = v91;
                unint64_t v37 = v88;
              }
              uint64_t v34 = v78;
              goto LABEL_10;
            }
            uint64_t v45 = ~v42;
            while (1)
            {
              unint64_t v43 = (v43 + 1) & v45;
              if (((*(void *)(v92 + ((v43 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v43) & 1) == 0) {
                break;
              }
              if (*(unsigned __int8 *)(v44 + v43) == v40) {
                goto LABEL_21;
              }
            }
          }

          unint64_t v37 = v88;
        }
        else
        {
        }
LABEL_10:
        if (++v36 == v34) {
          goto LABEL_34;
        }
      }
    }
    __break(1u);
    goto LABEL_39;
  }
LABEL_34:
  swift_bridgeObjectRelease();
  uint64_t v61 = v76;
  dispatch thunk of UICollectionViewDiffableDataSource.snapshot()();
  uint64_t v62 = v77;
  uint64_t v63 = NSDiffableDataSourceSnapshot.itemIdentifiers.getter();
  char v64 = sub_100778DE4(v63, v73, v74);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*((void *)v64 + 2))
  {
    NSDiffableDataSourceSnapshot.reconfigureItems(_:)((Swift::OpaquePointer)v64);
    swift_bridgeObjectRelease();
    dispatch thunk of UICollectionViewDiffableDataSource.apply(_:animatingDifferences:completion:)();
    (*(void (**)(char *, uint64_t))(v75 + 8))(v61, v62);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v75 + 8))(v61, v62);
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_10077871C()
{
  uint64_t v1 = *(void *)(v0 + 72);
  if (v1)
  {
    uint64_t v2 = self;
    swift_unknownObjectRetain();
    id v3 = [v2 defaultCenter];
    [v3 removeObserver:v1];

    swift_unknownObjectRelease();
    *(void *)(v0 + 72) = 0;
    swift_unknownObjectRelease();
  }
  sub_100523398(v0 + 16);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return v0;
}

uint64_t sub_1007787D8()
{
  sub_10077871C();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for CRLiOSBoardLibraryViewModelController()
{
  return self;
}

uint64_t sub_100778830(uint64_t a1, char a2)
{
  uint64_t v4 = sub_1005057FC(&qword_101674248);
  __chkstk_darwin(v4 - 8, v5);
  uint64_t v7 = &v11[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (swift_unknownObjectWeakLoadStrong())
  {
    sub_10057396C();
    swift_unknownObjectRelease();
  }
  uint64_t v8 = sub_1005057FC(&qword_101674250);
  uint64_t v9 = *(void *)(v8 - 8);
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v9 + 16))(v7, a1, v8);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v9 + 56))(v7, 0, 1, v8);
  swift_beginAccess();
  sub_10057DD70((uint64_t)v7, a2);
  swift_endAccess();
  v11[8] = a2;
  swift_allocObject();
  swift_weakInit();
  swift_retain();
  UICollectionViewDiffableDataSource.apply(_:to:animatingDifferences:completion:)();
  return swift_release_n();
}

uint64_t sub_100778A04()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    if (swift_unknownObjectWeakLoadStrong())
    {
      sub_100574CC0();
      swift_release();
      return swift_unknownObjectRelease();
    }
    else
    {
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_100778A80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  __chkstk_darwin(v5 - 8, v6);
  uint64_t v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1005057FC(&qword_101674250);
  char v9 = NSDiffableDataSourceSectionSnapshot.isExpanded(_:)();
  sub_10076F9F8(a1, (uint64_t)v8);
  if (v9) {
    char v10 = sub_1006E63C8((uint64_t)v8, a3);
  }
  else {
    char v10 = 0;
  }
  sub_100779220((uint64_t)v8, type metadata accessor for CRLBoardLibraryViewModel.Item);
  return v10 & 1;
}

uint64_t sub_100778B6C@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_1005057FC(&qword_101674250);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2, v4);
  uint64_t v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v7 = 0;
  char v14 = 0;
  UICollectionViewDiffableDataSource.snapshot(for:)();
  if (NSDiffableDataSourceSectionSnapshot.contains(_:)()) {
    goto LABEL_4;
  }
  uint64_t v8 = *(void (**)(char *, uint64_t))(v3 + 8);
  v8(v6, v2);
  char v7 = 1;
  char v14 = 1;
  UICollectionViewDiffableDataSource.snapshot(for:)();
  if ((NSDiffableDataSourceSectionSnapshot.contains(_:)() & 1) != 0
    || (v8(v6, v2),
        char v7 = 2,
        char v14 = 2,
        UICollectionViewDiffableDataSource.snapshot(for:)(),
        (NSDiffableDataSourceSectionSnapshot.contains(_:)() & 1) != 0))
  {
LABEL_4:
    uint64_t v9 = sub_1005057FC(&qword_10167EF30);
    char v10 = &a1[*(int *)(v9 + 48)];
    *a1 = v7;
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v10, v6, v2);
    return (*(uint64_t (**)(char *, void, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(a1, 0, 1, v9);
  }
  else
  {
    v8(v6, v2);
    uint64_t v12 = sub_1005057FC(&qword_10167EF30);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(a1, 1, 1, v12);
  }
}

double *sub_100778DE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = type metadata accessor for CRLBoardLibraryViewModel.Folder(0);
  __chkstk_darwin(v7 - 8, v8);
  char v10 = (char *)v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  uint64_t v12 = __chkstk_darwin(v41, v11);
  uint64_t v39 = (uint64_t)v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __chkstk_darwin(v12, v14);
  uint64_t v17 = (char *)v36 - v16;
  __chkstk_darwin(v15, v18);
  uint64_t v21 = (char *)v36 - v20;
  uint64_t result = _swiftEmptyArrayStorage;
  unint64_t v43 = _swiftEmptyArrayStorage;
  uint64_t v23 = *(void *)(a1 + 16);
  if (v23)
  {
    uint64_t v24 = *(unsigned __int8 *)(v19 + 80);
    uint64_t v42 = *(void *)(v19 + 72);
    v36[1] = v3;
    uint64_t v37 = (v24 + 32) & ~v24;
    uint64_t v25 = a1 + v37;
    id v26 = _swiftEmptyArrayStorage;
    uint64_t v40 = a2;
    uint64_t v38 = a3;
    while (1)
    {
      sub_10076F9F8(v25, (uint64_t)v21);
      sub_10076F9F8((uint64_t)v21, (uint64_t)v17);
      if (swift_getEnumCaseMultiPayload() != 1)
      {
        sub_100779220((uint64_t)v17, type metadata accessor for CRLBoardLibraryViewModel.Item);
        goto LABEL_4;
      }
      sub_100575C20((uint64_t)v17, (uint64_t)v10, type metadata accessor for CRLBoardLibraryViewModel.Folder);
      if (*(void *)(a2 + 16) && (unint64_t v27 = sub_10095697C((uint64_t)v10), (v28 & 1) != 0))
      {
        uint64_t v29 = *(void *)(*(void *)(a2 + 56) + 8 * v27);
        if (!*(void *)(a3 + 16)) {
          goto LABEL_14;
        }
      }
      else
      {
        uint64_t v29 = 0;
        if (!*(void *)(a3 + 16)) {
          goto LABEL_14;
        }
      }
      unint64_t v30 = sub_10095697C((uint64_t)v10);
      if (v31)
      {
        uint64_t v32 = *(void *)(*(void *)(a3 + 56) + 8 * v30);
        goto LABEL_15;
      }
LABEL_14:
      uint64_t v32 = 0;
LABEL_15:
      sub_100779220((uint64_t)v10, type metadata accessor for CRLBoardLibraryViewModel.Folder);
      BOOL v33 = v29 == v32;
      a2 = v40;
      if (!v33)
      {
        sub_100575C20((uint64_t)v21, v39, type metadata accessor for CRLBoardLibraryViewModel.Item);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          sub_1006BB704(0, *((void *)v26 + 2) + 1, 1);
        }
        id v26 = v43;
        unint64_t v35 = *((void *)v43 + 2);
        unint64_t v34 = *((void *)v43 + 3);
        if (v35 >= v34 >> 1)
        {
          sub_1006BB704(v34 > 1, v35 + 1, 1);
          id v26 = v43;
        }
        *((void *)v26 + 2) = v35 + 1;
        sub_100575C20(v39, (uint64_t)v26 + v37 + v35 * v42, type metadata accessor for CRLBoardLibraryViewModel.Item);
        a3 = v38;
        a2 = v40;
        goto LABEL_5;
      }
LABEL_4:
      sub_100779220((uint64_t)v21, type metadata accessor for CRLBoardLibraryViewModel.Item);
LABEL_5:
      v25 += v42;
      if (!--v23) {
        return v43;
      }
    }
  }
  return result;
}

uint64_t sub_10077914C()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100779184()
{
  return sub_100778A04();
}

uint64_t sub_10077918C(uint64_t a1)
{
  return sub_100777BC8(a1);
}

uint64_t sub_100779194(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1007791A4()
{
  return swift_release();
}

unint64_t sub_1007791AC()
{
  unint64_t result = qword_10167EF40;
  if (!qword_10167EF40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10167EF40);
  }
  return result;
}

uint64_t sub_100779200(uint64_t a1)
{
  return sub_100778A80(a1, *(void *)(v1 + 16), *(void *)(v1 + 24)) & 1;
}

uint64_t sub_100779220(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_100779280()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC8Freeform19CRLAssetDatabaseRow_assetUUID;
  uint64_t v2 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t sub_100779334()
{
  return type metadata accessor for CRLAssetDatabaseRow();
}

uint64_t type metadata accessor for CRLAssetDatabaseRow()
{
  uint64_t result = qword_10167EF70;
  if (!qword_10167EF70) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100779388()
{
  uint64_t result = type metadata accessor for UUID();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

BOOL sub_100779430(uint64_t *a1, uint64_t *a2)
{
  return sub_10077943C(*a1, *a2);
}

BOOL sub_10077943C(uint64_t a1, uint64_t a2)
{
  if ((static UUID.== infix(_:_:)() & 1) == 0) {
    return 0;
  }
  uint64_t v4 = *(void *)(a1 + OBJC_IVAR____TtC8Freeform19CRLAssetDatabaseRow_fileExtension + 8);
  uint64_t v5 = *(void *)(a2 + OBJC_IVAR____TtC8Freeform19CRLAssetDatabaseRow_fileExtension + 8);
  if (!v4)
  {
    if (!v5) {
      return *(double *)(a1 + OBJC_IVAR____TtC8Freeform19CRLAssetDatabaseRow_tombstoneDate) == *(double *)(a2 + OBJC_IVAR____TtC8Freeform19CRLAssetDatabaseRow_tombstoneDate);
    }
    return 0;
  }
  if (!v5) {
    return 0;
  }
  if (*(void *)(a1 + OBJC_IVAR____TtC8Freeform19CRLAssetDatabaseRow_fileExtension) == *(void *)(a2 + OBJC_IVAR____TtC8Freeform19CRLAssetDatabaseRow_fileExtension)
    && v4 == v5)
  {
    return *(double *)(a1 + OBJC_IVAR____TtC8Freeform19CRLAssetDatabaseRow_tombstoneDate) == *(double *)(a2 + OBJC_IVAR____TtC8Freeform19CRLAssetDatabaseRow_tombstoneDate);
  }
  char v7 = _stringCompareWithSmolCheck(_:_:expecting:)();
  BOOL result = 0;
  if (v7) {
    return *(double *)(a1 + OBJC_IVAR____TtC8Freeform19CRLAssetDatabaseRow_tombstoneDate) == *(double *)(a2 + OBJC_IVAR____TtC8Freeform19CRLAssetDatabaseRow_tombstoneDate);
  }
  return result;
}

uint64_t sub_1007794E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[5] = a3;
  v4[6] = v3;
  v4[3] = a1;
  v4[4] = a2;
  return _swift_task_switch(sub_10077950C, 0, 0);
}

uint64_t sub_10077950C()
{
  uint64_t v2 = *(void *)(v0 + 40);
  uint64_t v1 = *(void *)(v0 + 48);
  long long v6 = *(_OWORD *)(v0 + 24);
  uint64_t v3 = swift_task_alloc();
  *(void *)(v0 + 56) = v3;
  *(void *)(v3 + 16) = v2;
  *(_OWORD *)(v3 + 24) = v6;
  *(void *)(v3 + 40) = v1;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 64) = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_100779628;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v0 + 16, 0, 0, 0x6164286574697277, 0xEC000000293A6174, sub_10077A320, v3, &type metadata for Int);
}

uint64_t sub_100779628()
{
  *(void *)(*(void *)v1 + 72) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_10067E02C;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_100779744;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100779744()
{
  return (*(uint64_t (**)(void))(v0 + 8))(*(void *)(v0 + 16));
}

void sub_100779760(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  uint64_t v7 = *(void (**)(uint64_t, void *, void *))(a1 + 32);
  swift_retain();
  id v9 = a3;
  id v8 = a4;
  v7(a2, a3, a4);
  swift_release();
}

uint64_t sub_1007797F4(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  *(void *)(v5 + 48) = a4;
  *(void *)(v5 + 56) = v4;
  *(unsigned char *)(v5 + 88) = a3;
  *(void *)(v5 + 32) = a1;
  *(void *)(v5 + 40) = a2;
  return _swift_task_switch(sub_10077981C, 0, 0);
}

uint64_t sub_10077981C()
{
  char v1 = *(unsigned char *)(v0 + 88);
  uint64_t v3 = *(void *)(v0 + 32);
  uint64_t v2 = *(void *)(v0 + 40);
  uint64_t v4 = swift_task_alloc();
  *(void *)(v0 + 64) = v4;
  *(_OWORD *)(v4 + 16) = *(_OWORD *)(v0 + 48);
  *(void *)(v4 + 32) = v3;
  *(void *)(v4 + 40) = v2;
  *(unsigned char *)(v4 + 48) = v1;
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v0 + 72) = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_100779930;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v0 + 16, 0, 0, 0xD000000000000026, 0x800000010124E710, sub_10077B450, v4, &type metadata for Data);
}

uint64_t sub_100779930()
{
  *(void *)(*(void *)v1 + 80) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_100779A68;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_100779A4C;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100779A4C()
{
  return (*(uint64_t (**)(void, void))(v0 + 8))(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_100779A68()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100779ACC(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, int a5)
{
  int v19 = a5;
  id v20 = a2;
  uint64_t v21 = a3;
  uint64_t v7 = sub_1005057FC((uint64_t *)&unk_10167F100);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  __chkstk_darwin(v7, v10);
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = 0;
  type metadata accessor for DispatchData();
  uint64_t v12 = swift_allocBox();
  static DispatchData.empty.getter();
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v8 + 16))(&v18[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)], a1, v7);
  unint64_t v13 = (*(unsigned __int8 *)(v8 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = v11;
  (*(void (**)(unint64_t, unsigned char *, uint64_t))(v8 + 32))(v14 + v13, &v18[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)], v7);
  unint64_t v15 = v14 + ((v13 + v9 + 7) & 0xFFFFFFFFFFFFFFF8);
  *(void *)unint64_t v15 = v12;
  *(unsigned char *)(v15 + 8) = v19;
  *(void *)(v14 + ((v13 + v9 + 23) & 0xFFFFFFFFFFFFFFF8)) = a4;
  aBlock[4] = sub_10077B554;
  aBlock[5] = v14;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = *(void *)"";
  aBlock[2] = sub_100779760;
  aBlock[3] = &unk_101512FD8;
  uint64_t v16 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  [v20 readFromOffset:v21 length:a4 handler:v16];
  _Block_release(v16);
  swift_release();
  return swift_release();
}

uint64_t sub_100779D0C(char a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7, uint64_t a8)
{
  uint64_t v35 = a8;
  uint64_t v36 = a5;
  uint64_t v13 = type metadata accessor for DispatchData();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13, v15);
  uint64_t v17 = (char *)&v34 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = (unsigned char *)(a4 + 16);
  uint64_t v19 = swift_projectBox();
  uint64_t result = swift_beginAccess();
  if ((*(unsigned char *)(a4 + 16) & 1) == 0)
  {
    if (a3)
    {
      swift_beginAccess();
      *uint64_t v18 = 1;
      uint64_t v39 = a3;
      swift_errorRetain();
      sub_1005057FC((uint64_t *)&unk_10167F100);
      return CheckedContinuation.resume(throwing:)();
    }
    else
    {
      if (a2)
      {
        static DispatchData._unconditionallyBridgeFromObjectiveC(_:)();
        swift_beginAccess();
        id v21 = a2;
        DispatchData.append(_:)();
        swift_endAccess();

        uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v17, v13);
      }
      if (a1)
      {
        swift_beginAccess();
        *uint64_t v18 = 1;
        uint64_t v22 = self;
        swift_beginAccess();
        (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v17, v19, v13);
        uint64_t v23 = (void *)DispatchData._bridgeToObjectiveC()();
        (*(void (**)(char *, uint64_t))(v14 + 8))(v17, v13);
        id v24 = [v22 crl_dataFromDispatchData:v23];

        uint64_t v25 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
        unint64_t v27 = v26;

        if (a7)
        {
          switch(v27 >> 62)
          {
            case 1uLL:
              LODWORD(v28) = HIDWORD(v25) - v25;
              if (__OFSUB__(HIDWORD(v25), v25))
              {
                __break(1u);
LABEL_19:
                __break(1u);
                JUMPOUT(0x10077A058);
              }
              uint64_t v28 = (int)v28;
LABEL_13:
              if (v28 == v35) {
                goto LABEL_14;
              }
LABEL_16:
              sub_1005F7CE8();
              uint64_t v32 = swift_allocError();
              *BOOL v33 = 2;
              uint64_t v37 = v32;
              sub_1005057FC((uint64_t *)&unk_10167F100);
              CheckedContinuation.resume(throwing:)();
              uint64_t result = sub_100510084(v25, v27);
              break;
            case 2uLL:
              uint64_t v30 = *(void *)(v25 + 16);
              uint64_t v29 = *(void *)(v25 + 24);
              BOOL v31 = __OFSUB__(v29, v30);
              uint64_t v28 = v29 - v30;
              if (!v31) {
                goto LABEL_13;
              }
              goto LABEL_19;
            case 3uLL:
              if (v35) {
                goto LABEL_16;
              }
              goto LABEL_14;
            default:
              uint64_t v28 = BYTE6(v27);
              goto LABEL_13;
          }
        }
        else
        {
LABEL_14:
          uint64_t v37 = v25;
          unint64_t v38 = v27;
          sub_1005057FC((uint64_t *)&unk_10167F100);
          return CheckedContinuation.resume(returning:)();
        }
      }
    }
  }
  return result;
}

uint64_t sub_10077A068()
{
  swift_unknownObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for CRLReadChannelHelper()
{
  return self;
}

uint64_t sub_10077A0C4(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v6 = sub_1005057FC(&qword_10167F0E0);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  __chkstk_darwin(v6, v9);
  uint64_t v10 = swift_allocObject();
  *(unsigned char *)(v10 + 16) = 0;
  Class isa = Data._bridgeToObjectiveC()().super.isa;
  id v12 = [(objc_class *)isa crl_dispatchData];

  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = 0;
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v6);
  unint64_t v14 = (*(unsigned __int8 *)(v7 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = v10;
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v15 + v14, (char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v6);
  *(void *)(v15 + ((v8 + v14 + 7) & 0xFFFFFFFFFFFFFFF8)) = v13;
  aBlock[4] = sub_10077A574;
  aBlock[5] = v15;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = *(void *)"";
  aBlock[2] = sub_10077A630;
  aBlock[3] = &unk_101512E70;
  uint64_t v16 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  [a4 writeData:v12 handler:v16];
  _Block_release(v16);
  swift_release();

  return swift_release();
}

uint64_t sub_10077A320(uint64_t a1)
{
  return sub_10077A0C4(a1, *(void *)(v1 + 24), *(void *)(v1 + 32), *(void **)(v1 + 40));
}

uint64_t sub_10077A32C()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_10077A33C()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10077A34C(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11 = (unsigned char *)(a4 + 16);
  uint64_t result = swift_beginAccess();
  if ((*(unsigned char *)(a4 + 16) & 1) == 0)
  {
    if (a3)
    {
      swift_beginAccess();
      *uint64_t v11 = 1;
      swift_errorRetain();
      sub_1005057FC(&qword_10167F0E0);
      return CheckedContinuation.resume(throwing:)();
    }
    else
    {
      uint64_t result = swift_beginAccess();
      if (__OFADD__(*(void *)(a6 + 16), a2))
      {
        __break(1u);
      }
      else
      {
        *(void *)(a6 + 16) += a2;
        if (a1)
        {
          swift_beginAccess();
          *uint64_t v11 = 1;
          swift_beginAccess();
          sub_1005057FC(&qword_10167F0E0);
          return CheckedContinuation.resume(returning:)();
        }
      }
    }
  }
  return result;
}

uint64_t sub_10077A488()
{
  uint64_t v1 = sub_1005057FC(&qword_10167F0E0);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release();

  return _swift_deallocObject(v0, v6, v5);
}

uint64_t sub_10077A574(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *(void *)(sub_1005057FC(&qword_10167F0E0) - 8);
  unint64_t v8 = (*(unsigned __int8 *)(v7 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = *(void *)(v3 + 16);
  uint64_t v10 = *(void *)(v3 + ((*(void *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8));

  return sub_10077A34C(a1, a2, a3, v9, v3 + v8, v10);
}

void sub_10077A630(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, void *))(a1 + 32);
  swift_retain();
  id v8 = a4;
  v7(a2, a3, a4);
  swift_release();
}

uint64_t sub_10077A6B8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10077A6C8()
{
  return swift_release();
}

uint64_t sub_10077A6D0(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return _swift_task_switch(sub_10077A6F4, 0, 0);
}

uint64_t sub_10077A6F4()
{
  uint64_t v1 = v0[2].i64[0];
  uint64_t v2 = (int8x16_t *)swift_task_alloc();
  v0[2].i64[1] = (uint64_t)v2;
  v2[1] = vextq_s8(v0[1], v0[1], 8uLL);
  v2[2].i64[0] = v1;
  uint64_t v3 = (void *)swift_task_alloc();
  v0[3].i64[0] = (uint64_t)v3;
  *uint64_t v3 = v0;
  v3[1] = sub_10077A7EC;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v3, 0, 0, 0xD000000000000012, 0x800000010124E6C0, sub_10077AE78, v2, (char *)&type metadata for () + 8);
}

uint64_t sub_10077A7EC()
{
  *(void *)(*(void *)v1 + 56) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_100525D50;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_100525774;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_10077A908(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  id v40 = a2;
  uint64_t v42 = a1;
  uint64_t v45 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v48 = *(void *)(v45 - 8);
  __chkstk_darwin(v45, v6);
  uint64_t v44 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for DispatchQoS();
  uint64_t v46 = *(void *)(v8 - 8);
  uint64_t v47 = v8;
  __chkstk_darwin(v8, v9);
  unint64_t v43 = (char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = sub_1005057FC(&qword_10167F0F0);
  uint64_t v11 = *(void *)(v39 - 8);
  uint64_t v38 = *(void *)(v11 + 64);
  __chkstk_darwin(v39, v12);
  uint64_t v37 = (char *)&v35 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for DispatchQoS.QoSClass();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14, v16);
  uint64_t v18 = (char *)&v35 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = 0;
  uint64_t v20 = swift_allocObject();
  *(unsigned char *)(v20 + 16) = 0;
  id v21 = dispatch_group_create();
  dispatch_group_enter(v21);
  uint64_t v22 = (void *)swift_allocObject();
  void v22[2] = a4;
  v22[3] = v20;
  uint64_t v41 = v20;
  v22[4] = v19;
  v22[5] = v21;
  v22[6] = a3;
  uint64_t v54 = sub_10077B138;
  uint64_t v55 = v22;
  aBlock = _NSConcreteStackBlock;
  uint64_t v51 = *(void *)"";
  uint64_t v35 = &v52;
  uint64_t v52 = sub_100779760;
  uint64_t v53 = &unk_101512EE8;
  uint64_t v23 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  uint64_t v36 = v21;
  swift_unknownObjectRetain();
  swift_release();
  [v40 readWithHandler:v23];
  _Block_release(v23);
  sub_100656064();
  (*(void (**)(char *, void, uint64_t))(v15 + 104))(v18, enum case for DispatchQoS.QoSClass.userInitiated(_:), v14);
  id v24 = (void *)static OS_dispatch_queue.global(qos:)();
  (*(void (**)(char *, uint64_t))(v15 + 8))(v18, v14);
  uint64_t v25 = v37;
  uint64_t v26 = v39;
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v37, v42, v39);
  unint64_t v27 = (*(unsigned __int8 *)(v11 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  uint64_t v28 = swift_allocObject();
  *(void *)(v28 + 16) = v19;
  (*(void (**)(unint64_t, char *, uint64_t))(v11 + 32))(v28 + v27, v25, v26);
  uint64_t v54 = sub_10077B394;
  uint64_t v55 = (void *)v28;
  aBlock = _NSConcreteStackBlock;
  uint64_t v51 = *(void *)"";
  uint64_t v52 = sub_100679958;
  uint64_t v53 = &unk_101512F38;
  uint64_t v29 = _Block_copy(&aBlock);
  swift_retain();
  uint64_t v30 = v43;
  static DispatchQoS.unspecified.getter();
  uint64_t v49 = _swiftEmptyArrayStorage;
  sub_100522CDC();
  sub_1005057FC((uint64_t *)&unk_1016725D0);
  sub_10056B494();
  uint64_t v32 = v44;
  uint64_t v31 = v45;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  BOOL v33 = v36;
  OS_dispatch_group.notify(qos:flags:queue:execute:)();
  _Block_release(v29);

  (*(void (**)(char *, uint64_t))(v48 + 8))(v32, v31);
  (*(void (**)(char *, uint64_t))(v46 + 8))(v30, v47);
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_10077AE78(uint64_t a1)
{
  return sub_10077A908(a1, *(void **)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 16));
}

uint64_t sub_10077AE84()
{
  swift_errorRelease();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_10077AEBC(char a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, NSObject *a6, void *a7)
{
  uint64_t v14 = (unsigned char *)(a4 + 16);
  swift_beginAccess();
  if ((*(unsigned char *)(a4 + 16) & 1) == 0)
  {
    if (a3)
    {
      swift_beginAccess();
      *uint64_t v14 = 1;
      swift_beginAccess();
      *(void *)(a5 + 16) = a3;
      swift_errorRetain();
      swift_errorRetain();
      swift_errorRelease();
      dispatch_group_leave(a6);
      swift_errorRelease();
    }
    else if (a2)
    {
      uint64_t v15 = swift_allocObject();
      *(unsigned char *)(v15 + 16) = 0;
      id v16 = a2;
      dispatch_group_enter(a6);
      uint64_t v17 = (void *)swift_allocObject();
      void v17[2] = v15;
      v17[3] = a5;
      v17[4] = a6;
      aBlock[4] = sub_10077B444;
      aBlock[5] = v17;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = *(void *)"";
      aBlock[2] = sub_10077A630;
      aBlock[3] = &unk_101512F88;
      uint64_t v18 = _Block_copy(aBlock);
      swift_retain();
      swift_retain();
      uint64_t v19 = a6;
      swift_release();
      [a7 writeData:v16 handler:v18];
      _Block_release(v18);

      swift_release();
    }
    if (a1)
    {
      swift_beginAccess();
      if ((*v14 & 1) == 0)
      {
        swift_beginAccess();
        *uint64_t v14 = 1;
        dispatch_group_leave(a6);
      }
    }
  }
}

uint64_t sub_10077B0E8()
{
  swift_release();
  swift_release();

  swift_unknownObjectRelease();

  return _swift_deallocObject(v0, 56, 7);
}

void sub_10077B138(char a1, void *a2, uint64_t a3)
{
  sub_10077AEBC(a1, a2, a3, *(void *)(v3 + 24), *(void *)(v3 + 32), *(NSObject **)(v3 + 40), *(void **)(v3 + 48));
}

void sub_10077B148(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, NSObject *a6)
{
  uint64_t v11 = (unsigned char *)(a4 + 16);
  swift_beginAccess();
  if ((*(unsigned char *)(a4 + 16) & 1) == 0)
  {
    if (a3)
    {
      swift_beginAccess();
      *uint64_t v11 = 1;
      swift_beginAccess();
      *(void *)(a5 + 16) = a3;
      swift_errorRetain();
      swift_errorRetain();
      swift_errorRelease();
      dispatch_group_leave(a6);
      swift_errorRelease();
    }
    else if (a1)
    {
      swift_beginAccess();
      *uint64_t v11 = 1;
      dispatch_group_leave(a6);
    }
  }
}

uint64_t sub_10077B244(uint64_t a1)
{
  if (*(void *)(a1 + 16))
  {
    swift_errorRetain();
    sub_1005057FC(&qword_10167F0F0);
    return CheckedContinuation.resume(throwing:)();
  }
  else
  {
    sub_1005057FC(&qword_10167F0F0);
    return CheckedContinuation.resume(returning:)();
  }
}

uint64_t sub_10077B2C4()
{
  uint64_t v1 = sub_1005057FC(&qword_10167F0F0);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_10077B394()
{
  sub_1005057FC(&qword_10167F0F0);
  uint64_t v1 = *(void *)(v0 + 16);

  return sub_10077B244(v1);
}

uint64_t sub_10077B3FC()
{
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

void sub_10077B444(char a1, uint64_t a2, uint64_t a3)
{
  sub_10077B148(a1, a2, a3, *(void *)(v3 + 16), *(void *)(v3 + 24), *(NSObject **)(v3 + 32));
}

uint64_t sub_10077B450(uint64_t a1)
{
  return sub_100779ACC(a1, *(void **)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(unsigned __int8 *)(v1 + 48));
}

uint64_t sub_10077B460()
{
  uint64_t v1 = sub_1005057FC((uint64_t *)&unk_10167F100);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((v4 + *(void *)(v2 + 64) + 23) & 0xFFFFFFFFFFFFFFF8) + 8;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release();

  return _swift_deallocObject(v0, v6, v5);
}

uint64_t sub_10077B554(char a1, void *a2, uint64_t a3)
{
  uint64_t v7 = *(void *)(sub_1005057FC((uint64_t *)&unk_10167F100) - 8);
  unint64_t v8 = (*(unsigned __int8 *)(v7 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  unint64_t v9 = v8 + *(void *)(v7 + 64);
  uint64_t v10 = *(void *)(v3 + 16);
  uint64_t v11 = v3 + v8;
  uint64_t v12 = v3 + ((v9 + 7) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v13 = *(void *)v12;
  char v14 = *(unsigned char *)(v12 + 8);
  uint64_t v15 = *(void *)(v3 + ((v9 + 23) & 0xFFFFFFFFFFFFFFF8));

  return sub_100779D0C(a1, a2, a3, v10, v11, v13, v14, v15);
}

void sub_10077B644(void *a1, double a2, double a3)
{
  v42.id receiver = v3;
  v42.Class super_class = (Class)type metadata accessor for CRLFileEditor();
  [super addMiniFormatterElementsToArray:a1 atPoint:a2];
  id v7 = [v3 boardItems];
  type metadata accessor for CRLBoardItem(0);
  sub_10060A334();
  uint64_t v8 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

  if ((v8 & 0xC000000000000001) != 0) {
    uint64_t v9 = __CocoaSet.count.getter();
  }
  else {
    uint64_t v9 = *(void *)(v8 + 16);
  }
  swift_bridgeObjectRelease();
  if (v9 <= 1)
  {
    uint64_t v10 = self;
    id v11 = [v10 mainBundle];
    NSString v12 = String._bridgeToObjectiveC()();
    NSString v13 = String._bridgeToObjectiveC()();
    id v14 = [v11 localizedStringForKey:v12 value:v13 table:0];

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    NSString v15 = String._bridgeToObjectiveC()();
    id v41 = self;
    id v16 = [v41 crl_quickInspectorImageNamed:v15];

    id v17 = objc_allocWithZone((Class)CRLQuickInspectorElement);
    uint64_t v18 = a1;
    NSString v19 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v20 = [v17 initWithName:v19 image:v16 type:2 options:1024];

    [v20 setTag:13];
    id v21 = [v10 mainBundle];
    NSString v22 = String._bridgeToObjectiveC()();
    NSString v23 = String._bridgeToObjectiveC()();
    id v24 = [v21 localizedStringForKey:v22 value:v23 table:0];

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    NSString v25 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v20 setToolTip:v25];

    uint64_t v26 = v18;
    [v18 addObject:v20];
    id v27 = [v10 mainBundle];
    NSString v28 = String._bridgeToObjectiveC()();
    NSString v29 = String._bridgeToObjectiveC()();
    id v30 = [v27 localizedStringForKey:v28 value:v29 table:0];

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    NSString v31 = String._bridgeToObjectiveC()();
    id v32 = [v41 crl_quickInspectorImageNamed:v31];

    NSString v33 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v34 = [self elementWithName:v33 image:v32 type:2 action:"showPreview:"];

    [v34 setTag:19];
    id v35 = [v3 boardItems];
    uint64_t v36 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v37 = (void *)sub_100999830(v36);
    uint64_t v38 = swift_bridgeObjectRelease();
    if (v37)
    {
      (*(void (**)(uint64_t))((swift_isaMask & *v37) + 0x240))(v38);
      uint64_t v40 = v39;

      if (v40)
      {
        uint64_t v37 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v37 = 0;
      }
    }
    [v34 setToolTip:v37];

    [v26 addObject:v34];
  }
}

id sub_10077BDA0()
{
  v2.id receiver = v0;
  v2.Class super_class = (Class)type metadata accessor for CRLFileEditor();
  return [super dealloc];
}

uint64_t type metadata accessor for CRLFileEditor()
{
  return self;
}

void sub_10077BEB8(uint64_t a1, uint64_t a2, NSString a3, void *a4, uint64_t a5)
{
  id v9 = [objc_allocWithZone((Class)CRLMediaReplacingHelper) initWithEditor:v5];
  type metadata accessor for CRLAsset();
  v10.super.Class isa = Array._bridgeToObjectiveC()().super.isa;
  if (a3) {
    a3 = String._bridgeToObjectiveC()();
  }
  if (a4)
  {
    v11[4] = a4;
    v11[5] = a5;
    v11[0] = _NSConcreteStackBlock;
    v11[1] = *(void *)"";
    v11[2] = sub_1007E1A4C;
    v11[3] = &unk_101513078;
    a4 = _Block_copy(v11);
    swift_retain();
    swift_release();
  }
  [v9 replaceSelectedMediaWithData:v10.super.isa actionString:a3 completion:a4];
  _Block_release(a4);
}

void sub_10077C0F0(uint64_t a1, uint64_t a2, Class isa, uint64_t a4, NSString a5, void *a6, uint64_t a7)
{
  id v13 = [objc_allocWithZone((Class)CRLMediaReplacingHelper) initWithEditor:v7];
  type metadata accessor for URL();
  v14.super.Class isa = Array._bridgeToObjectiveC()().super.isa;
  if (isa) {
    Class isa = Array._bridgeToObjectiveC()().super.isa;
  }
  if (a5) {
    a5 = String._bridgeToObjectiveC()();
  }
  if (a6)
  {
    v15[4] = a6;
    v15[5] = a7;
    v15[0] = _NSConcreteStackBlock;
    v15[1] = *(void *)"";
    v15[2] = sub_100679958;
    v15[3] = &unk_101513028;
    a6 = _Block_copy(v15);
    swift_retain();
    swift_release();
  }
  [v13 replaceCanvasElementInfo:a1 withFilesAtURLs:v14.super.isa allowedTypes:isa actionString:a5 completion:a6];
  _Block_release(a6);
}

uint64_t sub_10077C398()
{
  _Block_release(*(const void **)(v0 + 16));

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10077C3D0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10077C3E0()
{
  return swift_release();
}

void sub_10077C3E8(char a1, uint64_t a2)
{
  sub_1007E1AC4(a1, a2, *(void *)(v2 + 16));
}

uint64_t CRLStroke.isValid.getter()
{
  uint64_t v1 = v0;
  id v2 = [self emptyStroke];
  sub_10050BF48(0, (unint64_t *)&qword_101686A50);
  char v3 = static NSObject.== infix(_:_:)();

  if (v3)
  {
    char v4 = 0;
  }
  else
  {
    id v5 = [v1 pattern];
    id v6 = [self emptyPattern];
    sub_10050BF48(0, &qword_10167F138);
    char v7 = static NSObject.== infix(_:_:)();

    char v4 = v7 ^ 1;
  }
  return v4 & 1;
}

void __swiftcall CRLStroke.withProperties(from:)(CRLStroke *__return_ptr retstr, CRLStroke *from)
{
}

uint64_t CRLStroke.withWidth(_:)(double a1)
{
  [v1 mutableCopy];
  _bridgeAnyObjectToAny(_:)();
  swift_unknownObjectRelease();
  sub_1005057FC(&qword_10167F140);
  swift_dynamicCast();
  [v4 setWidth:a1];
  self;
  return swift_dynamicCastObjCClassUnconditional();
}

void __swiftcall CRLStroke.withColor(_:)(CRLStroke *__return_ptr retstr, CRLColor a2)
{
}

uint64_t sub_10077C5D4(uint64_t a1, SEL *a2)
{
  [v2 mutableCopy];
  _bridgeAnyObjectToAny(_:)();
  swift_unknownObjectRelease();
  sub_1005057FC(&qword_10167F140);
  swift_dynamicCast();
  [v6 *a2:a1];
  self;
  return swift_dynamicCastObjCClassUnconditional();
}

uint64_t sub_10077C690@<X0>(uint64_t a1@<X8>)
{
  uint64_t v20 = a1;
  uint64_t v19 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v1 = *(void *)(v19 - 8);
  __chkstk_darwin(v19, v2);
  uint64_t v18 = (char *)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for Locale();
  __chkstk_darwin(v4 - 8, v5);
  uint64_t v6 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v6 - 8, v7);
  uint64_t v8 = type metadata accessor for LocalizedStringResource();
  __chkstk_darwin(v8 - 8, v9);
  uint64_t v10 = sub_1005057FC(&qword_10167F1A8);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10, v12);
  NSArray v14 = (char *)&v17 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1005057FC(&qword_101673B50);
  unint64_t v21 = 0xD00000000000001FLL;
  unint64_t v22 = 0x800000010123B260;
  AnyHashable.init<A>(_:)();
  type metadata accessor for AppDependencyManager();
  static AppDependencyManager.shared.getter();
  uint64_t v23 = AppDependency.__allocating_init(key:manager:)();
  void v24[3] = type metadata accessor for CRLBoardEntityQueryPerformer();
  v24[4] = (uint64_t)&off_10152F878;
  sub_1005767BC(v24);
  if (qword_10166FB50 != -1) {
    swift_once();
  }
  swift_beginAccess();
  id v15 = (id)static OS_os_log.appIntents;
  Logger.init(_:)();
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v18, enum case for LocalizedStringResource.BundleDescription.main(_:), v19);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  sub_10077E4B8();
  AppShortcutOptionsCollection.init(_:title:systemImageName:)();
  type metadata accessor for CRLBoardEntity();
  sub_10077E404();
  sub_10077E45C();
  static AppShortcutOptionsCollectionSpecificationBuilder.buildBlock<A>(_:)();
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v14, v10);
}

ValueMetadata *type metadata accessor for CRLShortcutsProvider()
{
  return &type metadata for CRLShortcutsProvider;
}

uint64_t sub_10077CAB4()
{
  uint64_t v0 = sub_1005057FC(&qword_10167F148);
  __chkstk_darwin(v0 - 8, v1);
  v179 = (char *)&v159 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v177 = sub_1005057FC(&qword_10167F150);
  __chkstk_darwin(v177, v3);
  v176 = (char *)&v159 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1005057FC(&qword_10167F158);
  __chkstk_darwin(v5 - 8, v6);
  v178 = (char *)&v159 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1005057FC(&qword_10167F160);
  __chkstk_darwin(v8 - 8, v9);
  v180 = (char *)&v159 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v175 = sub_1005057FC(&qword_10167F168);
  __chkstk_darwin(v175, v11);
  v174 = (char *)&v159 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v188 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v190 = *(void *)(v188 - 8);
  __chkstk_darwin(v188, v13);
  v173 = (char *)&v159 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for Locale();
  __chkstk_darwin(v15 - 8, v16);
  v186 = (char *)&v159 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v18 - 8, v19);
  v184 = (char *)&v159 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = type metadata accessor for LocalizedStringResource();
  __chkstk_darwin(v21 - 8, v22);
  v185 = (char *)&v159 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v194 = type metadata accessor for AppShortcutPhraseToken();
  uint64_t v24 = *(void *)(v194 - 8);
  __chkstk_darwin(v194, v25);
  id v27 = (char *)&v159 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = sub_1005057FC(&qword_10167F170);
  __chkstk_darwin(v28, v29);
  v172 = (char *)&v159 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v31, v32);
  v170 = (char *)&v159 - v33;
  __chkstk_darwin(v34, v35);
  v169 = (char *)&v159 - v36;
  __chkstk_darwin(v37, v38);
  v182 = (char *)&v159 - v39;
  __chkstk_darwin(v40, v41);
  v168 = (char *)&v159 - v42;
  __chkstk_darwin(v43, v44);
  v167 = (char *)&v159 - v45;
  __chkstk_darwin(v46, v47);
  v166 = (char *)&v159 - v48;
  __chkstk_darwin(v49, v50);
  v165 = (char *)&v159 - v51;
  __chkstk_darwin(v52, v53);
  v164 = (char *)&v159 - v54;
  __chkstk_darwin(v55, v56);
  v163 = (char *)&v159 - v57;
  __chkstk_darwin(v58, v59);
  v162 = (char *)&v159 - v60;
  __chkstk_darwin(v61, v62);
  v161 = (char *)&v159 - v63;
  __chkstk_darwin(v64, v65);
  uint64_t v187 = type metadata accessor for AppShortcut();
  uint64_t v189 = *(void *)(v187 - 8);
  __chkstk_darwin(v187, v66);
  v183 = (char *)&v159 - ((v67 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10069A090(v201);
  sub_1005057FC(&qword_10167F178);
  uint64_t v68 = *(void *)(sub_1005057FC(&qword_10167F180) - 8);
  unint64_t v69 = (*(unsigned __int8 *)(v68 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v68 + 80);
  uint64_t v198 = *(void *)(v68 + 72);
  uint64_t v70 = v198;
  uint64_t v71 = swift_allocObject();
  uint64_t v171 = v71;
  *(_OWORD *)(v71 + 16) = xmmword_10118D660;
  int v72 = (char *)(v71 + v69);
  unint64_t v73 = sub_10069A03C();
  AppShortcutPhrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v74._countAndFlagsBits = 0x20657461657243;
  v74._object = (void *)0xE700000000000000;
  AppShortcutPhrase.StringInterpolation.appendLiteral(_:)(v74);
  uint64_t v75 = enum case for AppShortcutPhraseToken.applicationName(_:);
  uint64_t KeyPath = *(void (**)(char *, uint64_t, uint64_t))(v24 + 104);
  uint64_t v195 = v24 + 104;
  uint64_t v76 = v194;
  KeyPath(v27, enum case for AppShortcutPhraseToken.applicationName(_:), v194);
  AppShortcutPhrase.StringInterpolation.appendInterpolation(_:)();
  uint64_t v77 = *(void (**)(char *, uint64_t))(v24 + 8);
  uint64_t v192 = v24 + 8;
  v193 = v77;
  v77(v27, v76);
  v78._countAndFlagsBits = 0x6472616F6220;
  v78._object = (void *)0xE600000000000000;
  AppShortcutPhrase.StringInterpolation.appendLiteral(_:)(v78);
  uint64_t v196 = v73;
  v197 = v72;
  AppShortcutPhrase.init(stringInterpolation:)();
  v160 = &v72[v70];
  AppShortcutPhrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v79._countAndFlagsBits = 0x20657461657243;
  v79._object = (void *)0xE700000000000000;
  AppShortcutPhrase.StringInterpolation.appendLiteral(_:)(v79);
  uint64_t v80 = v27;
  unsigned int v191 = v75;
  uint64_t v81 = v76;
  uint64_t v82 = v76;
  char v83 = KeyPath;
  KeyPath(v27, v75, v82);
  AppShortcutPhrase.StringInterpolation.appendInterpolation(_:)();
  uint64_t v84 = v27;
  id v85 = v193;
  v193(v84, v81);
  v86._countAndFlagsBits = 0x7361766E616320;
  v86._object = (void *)0xE700000000000000;
  AppShortcutPhrase.StringInterpolation.appendLiteral(_:)(v86);
  AppShortcutPhrase.init(stringInterpolation:)();
  v161 = (char *)(2 * v198);
  v160 = &v197[2 * v198];
  AppShortcutPhrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v87._countAndFlagsBits = 0x20657461657243;
  v87._object = (void *)0xE700000000000000;
  AppShortcutPhrase.StringInterpolation.appendLiteral(_:)(v87);
  uint64_t v88 = v194;
  v83(v80, v75, v194);
  AppShortcutPhrase.StringInterpolation.appendInterpolation(_:)();
  v85(v80, v88);
  v89._countAndFlagsBits = 0x6E656D75636F6420;
  v89._object = (void *)0xE900000000000074;
  AppShortcutPhrase.StringInterpolation.appendLiteral(_:)(v89);
  AppShortcutPhrase.init(stringInterpolation:)();
  uint64_t v91 = v197;
  uint64_t v90 = v198;
  AppShortcutPhrase.init(stringLiteral:)();
  AppShortcutPhrase.init(stringLiteral:)();
  v162 = &v91[5 * v90];
  AppShortcutPhrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v92._object = (void *)0xE900000000000020;
  v92._countAndFlagsBits = 0x77656E20656B614DLL;
  AppShortcutPhrase.StringInterpolation.appendLiteral(_:)(v92);
  uint64_t v93 = v191;
  uint64_t v94 = v194;
  uint64_t v95 = KeyPath;
  KeyPath(v80, v191, v194);
  AppShortcutPhrase.StringInterpolation.appendInterpolation(_:)();
  uint64_t v96 = v193;
  v193(v80, v94);
  v97._countAndFlagsBits = 0;
  v97._object = (void *)0xE000000000000000;
  AppShortcutPhrase.StringInterpolation.appendLiteral(_:)(v97);
  AppShortcutPhrase.init(stringInterpolation:)();
  uint64_t v98 = v197;
  v163 = &v197[6 * v198];
  AppShortcutPhrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v99._countAndFlagsBits = 0x20656B614DLL;
  v99._object = (void *)0xE500000000000000;
  AppShortcutPhrase.StringInterpolation.appendLiteral(_:)(v99);
  uint64_t v100 = v194;
  v95(v80, v93, v194);
  AppShortcutPhrase.StringInterpolation.appendInterpolation(_:)();
  v96(v80, v100);
  v101._countAndFlagsBits = 0x6472616F6220;
  v101._object = (void *)0xE600000000000000;
  AppShortcutPhrase.StringInterpolation.appendLiteral(_:)(v101);
  AppShortcutPhrase.init(stringInterpolation:)();
  v164 = (char *)(8 * v198);
  v163 = &v98[7 * v198];
  AppShortcutPhrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v102._countAndFlagsBits = 0x20656B614DLL;
  v102._object = (void *)0xE500000000000000;
  AppShortcutPhrase.StringInterpolation.appendLiteral(_:)(v102);
  v181 = v80;
  uint64_t v103 = v191;
  uint64_t v104 = KeyPath;
  KeyPath(v80, v191, v100);
  AppShortcutPhrase.StringInterpolation.appendInterpolation(_:)();
  uint64_t v105 = v193;
  v193(v80, v100);
  v106._countAndFlagsBits = 0x7361766E616320;
  v106._object = (void *)0xE700000000000000;
  AppShortcutPhrase.StringInterpolation.appendLiteral(_:)(v106);
  AppShortcutPhrase.init(stringInterpolation:)();
  v165 = &v164[(void)v197];
  AppShortcutPhrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v107._countAndFlagsBits = 0x20656B614DLL;
  v107._object = (void *)0xE500000000000000;
  AppShortcutPhrase.StringInterpolation.appendLiteral(_:)(v107);
  uint64_t v108 = v181;
  uint64_t v109 = v103;
  uint64_t v110 = v194;
  v104(v181, v109, v194);
  AppShortcutPhrase.StringInterpolation.appendInterpolation(_:)();
  v105(v108, v110);
  v111._countAndFlagsBits = 0x6E656D75636F6420;
  v111._object = (void *)0xE900000000000074;
  AppShortcutPhrase.StringInterpolation.appendLiteral(_:)(v111);
  AppShortcutPhrase.init(stringInterpolation:)();
  uint64_t v113 = v197;
  uint64_t v112 = v198;
  AppShortcutPhrase.init(stringLiteral:)();
  AppShortcutPhrase.init(stringLiteral:)();
  v166 = (char *)0xE900000000000064;
  AppShortcutPhrase.init(stringLiteral:)();
  v165 = &v113[12 * v112];
  AppShortcutPhrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v114._countAndFlagsBits = 544695630;
  v114._object = (void *)0xE400000000000000;
  AppShortcutPhrase.StringInterpolation.appendLiteral(_:)(v114);
  uint64_t v115 = v191;
  uint64_t v116 = v194;
  KeyPath(v108, v191, v194);
  AppShortcutPhrase.StringInterpolation.appendInterpolation(_:)();
  uint64_t v117 = v193;
  v193(v108, v116);
  v118._countAndFlagsBits = 0x6472616F6220;
  v118._object = (void *)0xE600000000000000;
  AppShortcutPhrase.StringInterpolation.appendLiteral(_:)(v118);
  AppShortcutPhrase.init(stringInterpolation:)();
  uint64_t v119 = v198;
  v167 = &v197[13 * v198];
  AppShortcutPhrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v120._countAndFlagsBits = 544695630;
  v120._object = (void *)0xE400000000000000;
  AppShortcutPhrase.StringInterpolation.appendLiteral(_:)(v120);
  uint64_t v121 = v115;
  uint64_t v122 = v194;
  uint64_t v123 = KeyPath;
  KeyPath(v108, v121, v194);
  AppShortcutPhrase.StringInterpolation.appendInterpolation(_:)();
  v117(v108, v122);
  v124._countAndFlagsBits = 0x7361766E616320;
  v124._object = (void *)0xE700000000000000;
  AppShortcutPhrase.StringInterpolation.appendLiteral(_:)(v124);
  AppShortcutPhrase.init(stringInterpolation:)();
  uint64_t v125 = v197;
  v168 = &v197[14 * v119];
  AppShortcutPhrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v126._countAndFlagsBits = 544695630;
  v126._object = (void *)0xE400000000000000;
  AppShortcutPhrase.StringInterpolation.appendLiteral(_:)(v126);
  uint64_t v127 = v181;
  uint64_t v128 = v191;
  v123(v181, v191, v122);
  AppShortcutPhrase.StringInterpolation.appendInterpolation(_:)();
  uint64_t v129 = v193;
  v193(v127, v122);
  v130._countAndFlagsBits = 0x6E656D75636F6420;
  v130._object = (void *)0xE900000000000074;
  AppShortcutPhrase.StringInterpolation.appendLiteral(_:)(v130);
  AppShortcutPhrase.init(stringInterpolation:)();
  v182 = (char *)(16 * v198);
  v168 = &v125[15 * v198];
  AppShortcutPhrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v131._countAndFlagsBits = 0xD000000000000015;
  v131._object = (void *)0x800000010124E830;
  AppShortcutPhrase.StringInterpolation.appendLiteral(_:)(v131);
  uint64_t v132 = KeyPath;
  KeyPath(v127, v128, v122);
  AppShortcutPhrase.StringInterpolation.appendInterpolation(_:)();
  v129(v127, v122);
  v133._countAndFlagsBits = 0;
  v133._object = (void *)0xE000000000000000;
  AppShortcutPhrase.StringInterpolation.appendLiteral(_:)(v133);
  AppShortcutPhrase.init(stringInterpolation:)();
  v169 = &v182[(void)v125];
  AppShortcutPhrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v134._countAndFlagsBits = 0xD000000000000016;
  v134._object = (void *)0x800000010124E850;
  AppShortcutPhrase.StringInterpolation.appendLiteral(_:)(v134);
  uint64_t v135 = v191;
  v132(v127, v191, v122);
  AppShortcutPhrase.StringInterpolation.appendInterpolation(_:)();
  uint64_t v136 = v193;
  v193(v127, v122);
  v137._countAndFlagsBits = 0;
  v137._object = (void *)0xE000000000000000;
  AppShortcutPhrase.StringInterpolation.appendLiteral(_:)(v137);
  AppShortcutPhrase.init(stringInterpolation:)();
  uint64_t v198 = (uint64_t)&v182[v198 + (void)v197];
  AppShortcutPhrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v138._countAndFlagsBits = 0x656E207472617453;
  v138._object = (void *)0xEA00000000002077;
  AppShortcutPhrase.StringInterpolation.appendLiteral(_:)(v138);
  KeyPath(v127, v135, v122);
  AppShortcutPhrase.StringInterpolation.appendInterpolation(_:)();
  v136(v127, v122);
  v139._countAndFlagsBits = 0;
  v139._object = (void *)0xE000000000000000;
  AppShortcutPhrase.StringInterpolation.appendLiteral(_:)(v139);
  AppShortcutPhrase.init(stringInterpolation:)();
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  LODWORD(v172) = enum case for LocalizedStringResource.BundleDescription.main(_:);
  uint64_t v140 = *(char **)(v190 + 104);
  v190 += 104;
  v182 = v140;
  uint64_t v141 = v173;
  ((void (*)(char *))v140)(v173);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  uint64_t v142 = v183;
  AppShortcut.init<A>(intent:phrases:shortTitle:systemImageName:)();
  uint64_t v143 = static AppShortcutsBuilder.buildExpression(_:)();
  uint64_t v144 = *(char **)(v189 + 8);
  v189 += 8;
  v197 = v144;
  uint64_t v198 = v143;
  ((void (*)(char *, uint64_t))v144)(v142, v187);
  uint64_t v200 = sub_1009D09EC();
  sub_1005057FC(&qword_10167F188);
  sub_1005057FC(&qword_10167F190);
  uint64_t v196 = swift_allocObject();
  *(_OWORD *)(v196 + 16) = xmmword_10117E810;
  sub_1005F6380();
  AppShortcutPhrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v145._countAndFlagsBits = 0x206E65704FLL;
  v145._object = (void *)0xE500000000000000;
  AppShortcutPhrase.StringInterpolation.appendLiteral(_:)(v145);
  swift_getKeyPath();
  sub_1005057FC(&qword_10167F198);
  AppShortcutPhrase.StringInterpolation.appendInterpolation<A, B>(_:)();
  swift_release();
  v146._countAndFlagsBits = 544106784;
  v146._object = (void *)0xE400000000000000;
  AppShortcutPhrase.StringInterpolation.appendLiteral(_:)(v146);
  KeyPath(v127, v191, v122);
  AppShortcutPhrase.StringInterpolation.appendInterpolation(_:)();
  v193(v127, v122);
  v147._countAndFlagsBits = 0;
  v147._object = (void *)0xE000000000000000;
  AppShortcutPhrase.StringInterpolation.appendLiteral(_:)(v147);
  AppShortcutPhrase.init(stringInterpolation:)();
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  ((void (*)(char *, void, uint64_t))v182)(v141, v172, v188);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  uint64_t KeyPath = (void (*)(char *, uint64_t, uint64_t))swift_getKeyPath();
  uint64_t v148 = type metadata accessor for CRLBoardEntity();
  sub_1005057FC(&qword_101673B48);
  unint64_t v149 = sub_10077E404();
  AppShortcutParameterPresentationSummaryString.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v150._countAndFlagsBits = 0x206E65704FLL;
  v150._object = (void *)0xE500000000000000;
  AppShortcutParameterPresentationSummaryString.StringInterpolation.appendLiteral(_:)(v150);
  swift_getKeyPath();
  AppShortcutParameterPresentationSummaryString.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v151._countAndFlagsBits = 0;
  v151._object = (void *)0xE000000000000000;
  AppShortcutParameterPresentationSummaryString.StringInterpolation.appendLiteral(_:)(v151);
  AppShortcutParameterPresentationSummaryString.init(stringInterpolation:)();
  AppShortcutParameterPresentationSummary.init(_:table:)();
  sub_1005057FC(&qword_10167F1A0);
  uint64_t v152 = sub_100522D34(&qword_10167F1A8);
  unint64_t v153 = sub_10077E45C();
  v201[0] = v148;
  v201[1] = v152;
  v201[2] = v149;
  v201[3] = v153;
  swift_getOpaqueTypeConformance2();
  AppShortcutParameterPresentation.init<A>(for:summary:optionsCollections:)();
  v154 = v183;
  AppShortcut.init<A, B, C, D>(intent:phrases:shortTitle:systemImageName:parameterPresentation:)();
  uint64_t v155 = static AppShortcutsBuilder.buildExpression(_:)();
  ((void (*)(char *, uint64_t))v197)(v154, v187);
  sub_1005057FC(&qword_10167F1B8);
  uint64_t v156 = swift_allocObject();
  *(_OWORD *)(v156 + 16) = xmmword_10117D8C0;
  *(void *)(v156 + 32) = v198;
  *(void *)(v156 + 40) = v155;
  uint64_t v157 = static AppShortcutsBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v157;
}

uint64_t sub_10077E3D8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

unint64_t sub_10077E404()
{
  unint64_t result = qword_101675F88;
  if (!qword_101675F88)
  {
    type metadata accessor for CRLBoardEntity();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101675F88);
  }
  return result;
}

unint64_t sub_10077E45C()
{
  unint64_t result = qword_10167F1B0;
  if (!qword_10167F1B0)
  {
    sub_100522D34(&qword_10167F1A8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10167F1B0);
  }
  return result;
}

unint64_t sub_10077E4B8()
{
  unint64_t result = qword_10167F1C0;
  if (!qword_10167F1C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10167F1C0);
  }
  return result;
}

id CRLLastSubmittedTaskQueue.queue.getter()
{
  return *(id *)(v0 + OBJC_IVAR____TtC8Freeform25CRLLastSubmittedTaskQueue_queue);
}

id CRLLastSubmittedTaskQueue.__allocating_init(label:)(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for DispatchQoS();
  __chkstk_darwin(v5 - 8, v6);
  uint64_t v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v9 = objc_allocWithZone(v2);
  static DispatchQoS.userInitiated.getter();
  id v10 = objc_allocWithZone(v2);
  id v11 = CRLLastSubmittedTaskQueue.init(label:qos:)(a1, a2, (uint64_t)v8);
  swift_getObjectType();
  swift_deallocPartialClassInstance();
  return v11;
}

id CRLLastSubmittedTaskQueue.init(label:)(uint64_t a1, uint64_t a2)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v5 = type metadata accessor for DispatchQoS();
  __chkstk_darwin(v5 - 8, v6);
  uint64_t v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  static DispatchQoS.userInitiated.getter();
  id v9 = objc_allocWithZone(ObjectType);
  id v10 = CRLLastSubmittedTaskQueue.init(label:qos:)(a1, a2, (uint64_t)v8);
  swift_getObjectType();
  swift_deallocPartialClassInstance();
  return v10;
}

id CRLLastSubmittedTaskQueue.__allocating_init(label:qos:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v7 = objc_allocWithZone(v3);
  return CRLLastSubmittedTaskQueue.init(label:qos:)(a1, a2, a3);
}

id CRLLastSubmittedTaskQueue.init(label:qos:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v20 = a3;
  uint64_t v23 = a1;
  uint64_t v24 = a2;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v5 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
  uint64_t v21 = *(void *)(v5 - 8);
  uint64_t v22 = v5;
  __chkstk_darwin(v5, v6);
  uint64_t v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for OS_dispatch_queue.Attributes();
  __chkstk_darwin(v9, v10);
  uint64_t v11 = type metadata accessor for DispatchQoS();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11, v13);
  uint64_t v15 = (char *)&v19 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&v3[OBJC_IVAR____TtC8Freeform25CRLLastSubmittedTaskQueue_lastWorkItem] = 0;
  unint64_t v19 = sub_100656064();
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v15, a3, v11);
  id v27 = _swiftEmptyArrayStorage;
  sub_10077EFF4((unint64_t *)&qword_101676560, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
  uint64_t v16 = v3;
  sub_1005057FC(&qword_101693440);
  sub_100636834((unint64_t *)&qword_101676568, &qword_101693440);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  (*(void (**)(char *, void, uint64_t))(v21 + 104))(v8, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v22);
  *(void *)&v16[OBJC_IVAR____TtC8Freeform25CRLLastSubmittedTaskQueue_queue] = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();

  v26.id receiver = v16;
  v26.Class super_class = ObjectType;
  id v17 = [super init];
  (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v20, v11);
  return v17;
}

uint64_t sub_10077EAE0(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for DispatchWorkItemFlags();
  __chkstk_darwin(v5, v6);
  uint64_t v7 = OBJC_IVAR____TtC8Freeform25CRLLastSubmittedTaskQueue_lastWorkItem;
  if (*(void *)(v2 + OBJC_IVAR____TtC8Freeform25CRLLastSubmittedTaskQueue_lastWorkItem))
  {
    swift_retain();
    dispatch thunk of DispatchWorkItem.cancel()();
    swift_release();
    *(void *)(v2 + v7) = 0;
    swift_release();
  }
  sub_1005057FC((uint64_t *)&unk_10167F200);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_10117E810;
  static DispatchWorkItemFlags.assignCurrentContext.getter();
  sub_10077EFF4((unint64_t *)&qword_1016747E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_1005057FC((uint64_t *)&unk_1016725D0);
  sub_100636834((unint64_t *)&qword_1016747F0, (uint64_t *)&unk_1016725D0);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  aBlock[4] = a1;
  aBlock[5] = a2;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = *(void *)"";
  aBlock[2] = sub_100679958;
  aBlock[3] = &unk_1015130E8;
  _Block_copy(aBlock);
  type metadata accessor for DispatchWorkItem();
  swift_allocObject();
  swift_retain();
  uint64_t v8 = DispatchWorkItem.init(flags:block:)();
  swift_release();
  *(void *)(v2 + v7) = v8;
  swift_retain();
  swift_release();
  OS_dispatch_queue.async(execute:)();
  return v8;
}

uint64_t CRLLastSubmittedTaskQueue.async(_:)(uint64_t a1, uint64_t a2)
{
  sub_10077EAE0(a1, a2);

  return swift_release();
}

void CRLLastSubmittedTaskQueue.init()()
{
}

uint64_t type metadata accessor for CRLLastSubmittedTaskQueue()
{
  return self;
}

uint64_t sub_10077EFBC()
{
  _Block_release(*(const void **)(v0 + 16));

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10077EFF4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10077F03C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10077F04C()
{
  return swift_release();
}

id sub_10077F054()
{
  uint64_t v1 = type metadata accessor for CRLMovieItemAssetData(0);
  __chkstk_darwin(v1 - 8, v2);
  uint64_t v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for CRLAssetData();
  *(void *)&double v7 = __chkstk_darwin(v5, v6).n128_u64[0];
  uint64_t v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  id result = [v0 movieItem:v7];
  if (result)
  {
    uint64_t v11 = result;
    swift_beginAccess();
    swift_retain();
    sub_1005057FC(&qword_1016A4070);
    CRRegister.wrappedValue.getter();
    swift_endAccess();
    swift_release();
    sub_10077F98C((uint64_t)v4, (uint64_t)v9);
    sub_10077F9F0((uint64_t)v4, type metadata accessor for CRLMovieItemAssetData);

    uint64_t v12 = *(void *)&v9[*(int *)(v5 + 20)];
    swift_bridgeObjectRetain();
    sub_10077F9F0((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
    return (id)v12;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_10077F5D4(void *a1)
{
  uint64_t v3 = sub_1005057FC(&qword_101672E90);
  __chkstk_darwin(v3 - 8, v4);
  uint64_t v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = (uint64_t)&v1[OBJC_IVAR____TtC8Freeform22CRLAudioRepPlaceHolder_previewItemURL];
  uint64_t v8 = type metadata accessor for URL();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v7, 1, 1, v8);
  *(void *)&v1[OBJC_IVAR____TtC8Freeform22CRLAudioRepPlaceHolder_audioRep] = a1;
  uint64_t v9 = v1;
  id v10 = a1;
  uint64_t v11 = (uint64_t)sub_10077F054();
  uint64_t v13 = v12;
  uint64_t v14 = (uint64_t *)&v9[OBJC_IVAR____TtC8Freeform22CRLAudioRepPlaceHolder_previewItemTitle];
  *uint64_t v14 = v11;
  v14[1] = v12;
  id result = [v10 movieItem];
  if (result)
  {
    uint64_t v16 = result;
    if (v13)
    {
      uint64_t v17 = v13;
    }
    else
    {
      uint64_t v11 = 0x6F69647561;
      uint64_t v17 = 0xE500000000000000;
    }
    swift_bridgeObjectRetain();
    id v18 = sub_100FA3DA0((uint64_t)v6, v11, v17);

    swift_bridgeObjectRelease();
    swift_beginAccess();
    sub_1005C6D24((uint64_t)v6, v7);
    swift_endAccess();

    unint64_t v19 = (objc_class *)type metadata accessor for CRLAudioRepPlaceHolder();
    v22.id receiver = v9;
    v22.Class super_class = v19;
    [super init];
    if (v18)
    {
      [v18 setAssociatedLifetimeObject:v10];
    }
    sub_1005CCBB8((uint64_t)v6);
    return v20;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_10077F7F8()
{
  v2.id receiver = v0;
  v2.Class super_class = (Class)type metadata accessor for CRLAudioRepPlaceHolder();
  return [super dealloc];
}

uint64_t sub_10077F890()
{
  return type metadata accessor for CRLAudioRepPlaceHolder();
}

uint64_t type metadata accessor for CRLAudioRepPlaceHolder()
{
  uint64_t result = qword_10167F238;
  if (!qword_10167F238) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_10077F8E4()
{
  sub_100757DF8();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t sub_10077F98C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CRLAssetData();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10077F9F0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

id sub_10077FC38()
{
  v2.id receiver = v0;
  v2.Class super_class = (Class)type metadata accessor for CRLURLLauncher();
  return [super dealloc];
}

uint64_t type metadata accessor for CRLURLLauncher()
{
  return self;
}

void sub_10077FC90(char a1)
{
  if ((a1 & 1) == 0)
  {
    if (qword_10166F9D8 != -1) {
      swift_once();
    }
    swift_beginAccess();
    uint64_t v1 = (void *)static OS_os_log.crlError;
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_10117E810;
    id v3 = v1;
    uint64_t v4 = URL.description.getter();
    uint64_t v6 = v5;
    *(void *)(inited + 56) = &type metadata for String;
    *(void *)(inited + 64) = sub_100528BE4();
    *(void *)(inited + 32) = v4;
    *(void *)(inited + 40) = v6;
    uint64_t v7 = static os_log_type_t.error.getter();
    sub_100BAC898((uint64_t)v3, (uint64_t)&_mh_execute_header, v7, (uint64_t)"Unable to open URL: %@", 22, 2, inited);
    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();
  }
}

id sub_10077FDCC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for URL();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2, v4);
  uint64_t v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v7 = [self sharedApplication];
  URL._bridgeToObjectiveC()(v8);
  id v10 = v9;
  unsigned int v11 = [v7 canOpenURL:v9];

  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v6, a1, v2);
  if (v11)
  {
    URL._bridgeToObjectiveC()(v12);
    uint64_t v14 = v13;
    id v15 = [v13 crl_canOpenURL];
  }
  else
  {
    id v15 = 0;
  }
  (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  return v15;
}

void sub_10077FF34(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for URL();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  __chkstk_darwin(v2, v5);
  id v6 = [self sharedApplication];
  URL._bridgeToObjectiveC()(v7);
  uint64_t v9 = v8;
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))((char *)aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v2);
  unint64_t v10 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v11 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(v11 + v10, (char *)aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v2);
  aBlock[4] = sub_1007801A0;
  aBlock[5] = v11;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = *(void *)"";
  aBlock[2] = sub_100F8FD18;
  aBlock[3] = &unk_101513168;
  uint64_t v12 = _Block_copy(aBlock);
  swift_release();
  [v6 openURL:v9 withCompletionHandler:v12];
  _Block_release(v12);
}

uint64_t sub_100780110()
{
  uint64_t v1 = type metadata accessor for URL();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

void sub_1007801A0(char a1)
{
  type metadata accessor for URL();

  sub_10077FC90(a1);
}

uint64_t sub_100780210(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100780220()
{
  return swift_release();
}

ValueMetadata *type metadata accessor for CRLTipScenesEntryPointFull()
{
  return &type metadata for CRLTipScenesEntryPointFull;
}

uint64_t sub_100780238(uint64_t a1)
{
  return sub_1007802D0(a1, qword_10171A728);
}

uint64_t sub_10078025C(uint64_t a1)
{
  return sub_1007802D0(a1, qword_10171A740);
}

uint64_t sub_100780280(uint64_t a1)
{
  return sub_1007802D0(a1, qword_10171A758);
}

uint64_t sub_1007802AC(uint64_t a1)
{
  return sub_1007802D0(a1, qword_10171A770);
}

uint64_t sub_1007802D0(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = sub_1005057FC(&qword_10169FA10);
  sub_100568B28(v3, a2);
  sub_100556B74(v3, (uint64_t)a2);
  return Tips.Parameter.init<A>(_:_:_:_:)();
}

uint64_t sub_100780374()
{
  uint64_t v0 = sub_1005057FC(&qword_10167A2C0);
  sub_100568B28(v0, qword_10171A788);
  sub_100556B74(v0, (uint64_t)qword_10171A788);
  return Tips.Event.init<>(id:)();
}

uint64_t sub_1007803DC@<X0>(uint64_t *a1@<X8>)
{
  return sub_1007803EC(0, a1);
}

uint64_t sub_1007803E4@<X0>(uint64_t *a1@<X8>)
{
  return sub_1007803EC(1, a1);
}

uint64_t sub_1007803EC@<X0>(char a1@<W1>, uint64_t *a2@<X8>)
{
  uint64_t v4 = sub_1005057FC(&qword_10167A358);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4, v6);
  uint64_t v8 = &v15[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = sub_1005057FC(&qword_10167A360);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9, v11);
  uint64_t v13 = &v15[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_100523288(&qword_10167A368, &qword_10167A360);
  static PredicateExpressions.build_Arg<A>(_:)();
  v15[15] = a1;
  static PredicateExpressions.build_Arg<A>(_:)();
  a2[3] = sub_1005057FC(&qword_10167A370);
  a2[4] = sub_1006A14B4();
  sub_1005767BC(a2);
  sub_100523288(&qword_10167A390, &qword_10167A358);
  static PredicateExpressions.build_Equal<A, B>(lhs:rhs:)();
  (*(void (**)(unsigned char *, uint64_t))(v5 + 8))(v8, v4);
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v10 + 8))(v13, v9);
}

uint64_t sub_100780630@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v54 = a1;
  uint64_t v1 = type metadata accessor for PredicateExpressions.ComparisonOperator();
  uint64_t v52 = *(void *)(v1 - 8);
  uint64_t v53 = v1;
  __chkstk_darwin(v1, v2);
  uint64_t v51 = (char *)&v42 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1005057FC(&qword_10167A2D8);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v55 = v4;
  uint64_t v56 = v5;
  __chkstk_darwin(v4, v6);
  uint64_t v50 = (char *)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for Tips.DonationTimeRange();
  uint64_t v46 = *(void *)(v8 - 8);
  uint64_t v47 = v8;
  __chkstk_darwin(v8, v9);
  uint64_t v11 = (char *)&v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1005057FC(&qword_10167A2E0);
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12, v14);
  uint64_t v16 = (char *)&v42 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_1005057FC(&qword_10167A2E8);
  uint64_t v18 = *(void *)(v17 - 8);
  __chkstk_darwin(v17, v19);
  uint64_t v21 = (char *)&v42 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_1005057FC(&qword_10167A2F0);
  uint64_t v23 = *(void *)(v22 - 8);
  uint64_t v44 = v22;
  uint64_t v45 = v23;
  __chkstk_darwin(v22, v24);
  objc_super v26 = (char *)&v42 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = sub_1005057FC(&qword_10167A2F8);
  uint64_t v28 = *(void *)(v27 - 8);
  uint64_t v48 = v27;
  uint64_t v49 = v28;
  __chkstk_darwin(v27, v29);
  uint64_t v43 = (char *)&v42 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100523288(&qword_10167A300, &qword_10167A2E0);
  static PredicateExpressions.build_Arg<A>(_:)();
  swift_getKeyPath();
  static PredicateExpressions.build_KeyPath<A, B>(root:keyPath:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v16, v12);
  static Tips.DonationTimeRange.day.getter();
  type metadata accessor for Tips.EmptyDonation();
  sub_1006A1230(&qword_10167A2C8);
  sub_1006A1230(&qword_10167A2D0);
  sub_1006A12E0();
  static PredicateExpressions.build_donatedWithin<A, B>(_:_:)();
  (*(void (**)(char *, uint64_t))(v46 + 8))(v11, v47);
  (*(void (**)(char *, uint64_t))(v18 + 8))(v21, v17);
  swift_getKeyPath();
  sub_100523288(&qword_10167A318, &qword_10167A2F0);
  uint64_t v32 = v43;
  uint64_t v31 = v44;
  static PredicateExpressions.build_KeyPath<A, B>(root:keyPath:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v45 + 8))(v26, v31);
  uint64_t v57 = 1;
  uint64_t v33 = v50;
  static PredicateExpressions.build_Arg<A>(_:)();
  uint64_t v35 = v51;
  uint64_t v34 = v52;
  uint64_t v36 = v53;
  (*(void (**)(char *, void, uint64_t))(v52 + 104))(v51, enum case for PredicateExpressions.ComparisonOperator.lessThan(_:), v53);
  uint64_t v37 = sub_1005057FC(&qword_10167A320);
  uint64_t v38 = v54;
  v54[3] = v37;
  v38[4] = sub_1006A137C();
  sub_1005767BC(v38);
  sub_100523288(&qword_10167A348, &qword_10167A2F8);
  sub_100523288(&qword_10167A350, &qword_10167A2D8);
  uint64_t v39 = v48;
  uint64_t v40 = v55;
  static PredicateExpressions.build_Comparison<A, B>(lhs:rhs:op:)();
  (*(void (**)(char *, uint64_t))(v34 + 8))(v35, v36);
  (*(void (**)(char *, uint64_t))(v56 + 8))(v33, v40);
  return (*(uint64_t (**)(char *, uint64_t))(v49 + 8))(v32, v39);
}

uint64_t sub_100780CDC()
{
  return sub_100B7F3C8();
}

uint64_t sub_100780D14@<X0>(uint64_t *a1@<X8>)
{
  sub_1005C75A4();
  uint64_t result = Tip.id.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

unint64_t sub_100780D58()
{
  unint64_t result = qword_10167F270;
  if (!qword_10167F270)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10167F270);
  }
  return result;
}

unint64_t sub_100780DAC(uint64_t a1)
{
  unint64_t result = sub_1005C75A4();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_100780DD4()
{
  uint64_t v0 = sub_1005057FC(&qword_10167A2C0);
  uint64_t v25 = *(void *)(v0 - 8);
  uint64_t v26 = v0;
  __chkstk_darwin(v0, v1);
  uint64_t v27 = (char *)v24 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_1005057FC(&qword_10169FA10);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3, v5);
  uint64_t v7 = (char *)v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for Tips.Rule();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8, v10);
  uint64_t v12 = (char *)v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10166F010 != -1) {
    swift_once();
  }
  uint64_t v13 = sub_100556B74(v3, (uint64_t)qword_10171A728);
  swift_beginAccess();
  uint64_t v14 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
  v14(v7, v13, v3);
  Tips.Rule.init<A>(_:_:)();
  v24[2] = static Tips.RuleBuilder.buildExpression(_:)();
  uint64_t v15 = *(void (**)(char *, uint64_t))(v9 + 8);
  v15(v12, v8);
  if (qword_10166F018 != -1) {
    swift_once();
  }
  uint64_t v16 = sub_100556B74(v3, (uint64_t)qword_10171A740);
  swift_beginAccess();
  v14(v7, v16, v3);
  Tips.Rule.init<A>(_:_:)();
  v24[1] = static Tips.RuleBuilder.buildExpression(_:)();
  v15(v12, v8);
  if (qword_10166F020 != -1) {
    swift_once();
  }
  uint64_t v17 = sub_100556B74(v3, (uint64_t)qword_10171A758);
  swift_beginAccess();
  v14(v7, v17, v3);
  Tips.Rule.init<A>(_:_:)();
  static Tips.RuleBuilder.buildExpression(_:)();
  v15(v12, v8);
  uint64_t v18 = v8;
  if (qword_10166F028 != -1) {
    swift_once();
  }
  uint64_t v19 = sub_100556B74(v3, (uint64_t)qword_10171A770);
  swift_beginAccess();
  v14(v7, v19, v3);
  Tips.Rule.init<A>(_:_:)();
  static Tips.RuleBuilder.buildExpression(_:)();
  v15(v12, v18);
  if (qword_10166F030 != -1) {
    swift_once();
  }
  uint64_t v20 = v26;
  uint64_t v21 = sub_100556B74(v26, (uint64_t)qword_10171A788);
  (*(void (**)(char *, uint64_t, uint64_t))(v25 + 16))(v27, v21, v20);
  type metadata accessor for Tips.EmptyDonation();
  sub_1006A1230(&qword_10167A2C8);
  sub_1006A1230(&qword_10167A2D0);
  Tips.Rule.init<A>(_:_:)();
  static Tips.RuleBuilder.buildExpression(_:)();
  v15(v12, v18);
  static Tips.RuleBuilder.buildPartialBlock(first:)();
  swift_bridgeObjectRelease();
  static Tips.RuleBuilder.buildPartialBlock(accumulated:next:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  static Tips.RuleBuilder.buildPartialBlock(accumulated:next:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  static Tips.RuleBuilder.buildPartialBlock(accumulated:next:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v22 = static Tips.RuleBuilder.buildPartialBlock(accumulated:next:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v22;
}

uint64_t sub_100781610(unint64_t a1)
{
  uint64_t v23 = type metadata accessor for UUID();
  uint64_t v3 = *(void *)(v23 - 8);
  __chkstk_darwin(v23, v4);
  uint64_t v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1007818F0();
  *(void *)(v1 + OBJC_IVAR____TtC8Freeform19CRLPasteboardObject__boardItems) = a1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(v1 + OBJC_IVAR____TtC8Freeform19CRLPasteboardObject_pasteboardData);
  if (!(a1 >> 62))
  {
    uint64_t v8 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_retain();
    if (v8) {
      goto LABEL_3;
    }
LABEL_13:
    swift_bridgeObjectRelease();
    uint64_t v11 = _swiftEmptyArrayStorage;
LABEL_14:
    *(void *)(v7 + OBJC_IVAR____TtC8Freeform23CRLPasteboardObjectData_boardItemUUIDs) = v11;
    swift_release();
    return swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t v8 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (!v8) {
    goto LABEL_13;
  }
LABEL_3:
  uint64_t v24 = _swiftEmptyArrayStorage;
  uint64_t result = sub_1006BB544(0, v8 & ~(v8 >> 63), 0);
  if ((v8 & 0x8000000000000000) == 0)
  {
    uint64_t v10 = 0;
    uint64_t v11 = v24;
    uint64_t v21 = v7;
    unint64_t v22 = a1 & 0xC000000000000001;
    unint64_t v12 = a1;
    uint64_t v13 = v8;
    do
    {
      if (v22) {
        uint64_t v14 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        uint64_t v14 = *(id *)(a1 + 8 * v10 + 32);
      }
      uint64_t v15 = v14;
      (*(void (**)(void))((swift_isaMask & *v14) + 0x358))();
      uint64_t v17 = v16;
      uint64_t ObjectType = swift_getObjectType();
      (*(void (**)(uint64_t, uint64_t))(v17 + 40))(ObjectType, v17);

      swift_unknownObjectRelease();
      uint64_t v24 = v11;
      unint64_t v20 = *((void *)v11 + 2);
      unint64_t v19 = *((void *)v11 + 3);
      if (v20 >= v19 >> 1)
      {
        sub_1006BB544(v19 > 1, v20 + 1, 1);
        uint64_t v11 = v24;
      }
      ++v10;
      *((void *)v11 + 2) = v20 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))((unint64_t)v11+ ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80))+ *(void *)(v3 + 72) * v20, v6, v23);
      a1 = v12;
    }
    while (v13 != v10);
    swift_bridgeObjectRelease();
    uint64_t v7 = v21;
    goto LABEL_14;
  }
  __break(1u);
  return result;
}

uint64_t sub_1007818F0()
{
  uint64_t v23 = sub_1005057FC((uint64_t *)&unk_101674610);
  __chkstk_darwin(v23, v1);
  uint64_t v3 = (char *)&v22 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4, v5);
  uint64_t v7 = (char *)&v22 - v6;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  long long v22 = xmmword_10117E810;
  *(_OWORD *)(inited + 16) = xmmword_10117E810;
  uint64_t v9 = OBJC_IVAR____TtC8Freeform19CRLPasteboardObject__boardItems;
  uint64_t v24 = *(void *)(v0 + OBJC_IVAR____TtC8Freeform19CRLPasteboardObject__boardItems);
  swift_bridgeObjectRetain();
  sub_1005057FC(&qword_10167F448);
  uint64_t v10 = String.init<A>(describing:)();
  uint64_t v12 = v11;
  *(void *)(inited + 56) = &type metadata for String;
  unint64_t v13 = sub_100528BE4();
  *(void *)(inited + 64) = v13;
  *(void *)(inited + 32) = v10;
  *(void *)(inited + 40) = v12;
  if (*(void *)(v0 + v9))
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"validateDataNotSet()", 20, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLPasteboardObject.swift", 86, 2, 117, (uint64_t)"Pasteboard object has board items already. boardItems=%@", 56, 2u, inited);
    sub_1005598CC(inited, (uint64_t)"validateDataNotSet()", 20, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLPasteboardObject.swift", 86, 2, 117);
  }
  swift_bridgeObjectRelease();
  uint64_t v14 = swift_initStackObject();
  *(_OWORD *)(v14 + 16) = v22;
  uint64_t v15 = OBJC_IVAR____TtC8Freeform19CRLPasteboardObject_pasteboardData;
  uint64_t v16 = *(void *)(v0 + OBJC_IVAR____TtC8Freeform19CRLPasteboardObject_pasteboardData)
      + OBJC_IVAR____TtC8Freeform23CRLPasteboardObjectData_textCRDT;
  swift_beginAccess();
  sub_100522E9C(v16, (uint64_t)v7, (uint64_t *)&unk_101674610);
  uint64_t v17 = String.init<A>(describing:)();
  *(void *)(v14 + 56) = &type metadata for String;
  *(void *)(v14 + 64) = v13;
  *(void *)(v14 + 32) = v17;
  *(void *)(v14 + 40) = v18;
  uint64_t v19 = *(void *)(v0 + v15) + OBJC_IVAR____TtC8Freeform23CRLPasteboardObjectData_textCRDT;
  swift_beginAccess();
  sub_100522E9C(v19, (uint64_t)v3, (uint64_t *)&unk_101674610);
  uint64_t v20 = type metadata accessor for CRLWPStorageCRDTData(0);
  LODWORD(v19) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v20 - 8) + 48))(v3, 1, v20);
  sub_100522F00((uint64_t)v3, (uint64_t *)&unk_101674610);
  if (v19 != 1)
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"validateDataNotSet()", 20, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLPasteboardObject.swift", 86, 2, 118, (uint64_t)"Pasteboard object has text CRDT already. textCRDT=%@", 52, 2u, v14);
    sub_1005598CC(v14, (uint64_t)"validateDataNotSet()", 20, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLPasteboardObject.swift", 86, 2, 118);
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_100781C68(uint64_t a1)
{
  uint64_t v43 = a1;
  uint64_t v3 = type metadata accessor for UUID();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3, v5);
  uint64_t v42 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1005057FC((uint64_t *)&unk_101674520);
  __chkstk_darwin(v7 - 8, v8);
  uint64_t v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = OBJC_IVAR____TtC8Freeform19CRLPasteboardObject_pasteboardData;
  uint64_t v12 = *(void *)(*(void *)(v1 + OBJC_IVAR____TtC8Freeform19CRLPasteboardObject_pasteboardData)
                  + OBJC_IVAR____TtC8Freeform23CRLPasteboardObjectData_boardItemUUIDs);
  unint64_t v44 = (unint64_t)_swiftEmptyArrayStorage;
  sub_101044ABC(*(void *)(v12 + 16), 0);
  specialized Array._endMutation()();
  uint64_t v13 = *(void *)(*(void *)(v1 + v11) + OBJC_IVAR____TtC8Freeform23CRLPasteboardObjectData_boardItemUUIDs);
  uint64_t v14 = *(void *)(v13 + 16);
  uint64_t v31 = v1;
  uint64_t v32 = v2;
  uint64_t v33 = v13;
  if (v14)
  {
    uint64_t v16 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
    uint64_t v15 = v4 + 16;
    uint64_t v41 = v16;
    uint64_t v17 = v13 + ((*(unsigned __int8 *)(v15 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 64));
    uint64_t v36 = *(void *)(v15 + 56);
    uint64_t v37 = (void (**)(char *, char *, uint64_t))(v15 + 16);
    uint64_t v38 = (void (**)(uint64_t, uint64_t))(v15 - 8);
    uint64_t v39 = (unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 32);
    swift_bridgeObjectRetain();
    uint64_t v40 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 40);
    unint64_t v30 = (v15 + 40) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
    uint64_t v34 = v3;
    uint64_t v35 = v10;
    while (1)
    {
      v41(v10, v17, v3);
      uint64_t v18 = *v40;
      (*v40)(v10, 0, 1, v3);
      if ((*v39)(v10, 1, v3) == 1) {
        break;
      }
      uint64_t v19 = (uint64_t)v42;
      (*v37)(v42, v10, v3);
      uint64_t v20 = v43;
      if (!*(void *)(v43 + 16) || (unint64_t v21 = sub_100955FC8(v19), (v22 & 1) == 0))
      {
        (*v38)(v19, v3);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1005F7CE8();
        swift_allocError();
        *uint64_t v28 = 4;
        return swift_willThrow();
      }
      uint64_t v23 = *(void **)(*(void *)(v20 + 56) + 8 * v21);
      uint64_t v24 = *v38;
      id v25 = v23;
      v24(v19, v3);
      id v26 = v25;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)((v44 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v44 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();

      uint64_t v10 = v35;
      v17 += v36;
      --v14;
      uint64_t v3 = v34;
      if (!v14)
      {
        v18(v35, 1, 1, v34);
        break;
      }
    }
  }
  else
  {
    uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56);
    swift_bridgeObjectRetain();
    v27(v10, 1, 1, v3);
  }
  swift_bridgeObjectRelease();
  *(void *)(v31 + OBJC_IVAR____TtC8Freeform19CRLPasteboardObject__boardItems) = v44;
  return swift_bridgeObjectRelease();
}

void sub_100782008(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for CRLWPShapeItemCRDTData(0);
  __chkstk_darwin(v4, v5);
  uint64_t v7 = (char *)v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for CRLWPStorageCRDTData(0);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8, v10);
  uint64_t v12 = (char *)v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1005057FC((uint64_t *)&unk_101674610);
  __n128 v15 = __chkstk_darwin(v13 - 8, v14);
  uint64_t v17 = (char *)v24 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = OBJC_IVAR____TtC8Freeform12CRLWPStorage_shapeItemData;
  uint64_t v18 = *(void *)(a1 + OBJC_IVAR____TtC8Freeform12CRLWPStorage_shapeItemData);
  if (v18)
  {
    (*(void (**)(__n128))(*(void *)v18 + 760))(v15);
    v24[1] = v4;
    sub_1005D3C94((uint64_t)&v7[*(int *)(v4 + 20)], (uint64_t)v12);
    sub_100787054((uint64_t)v7, type metadata accessor for CRLWPShapeItemCRDTData);
    sub_1007870B4(&qword_101687300, (void (*)(uint64_t))type metadata accessor for CRLWPStorageCRDTData);
    CRType.copy(renamingReferences:)();
    sub_100787054((uint64_t)v12, type metadata accessor for CRLWPStorageCRDTData);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v17, 0, 1, v8);
    sub_1007818F0();
    uint64_t v19 = OBJC_IVAR____TtC8Freeform19CRLPasteboardObject_pasteboardData;
    uint64_t v20 = *(void *)(v2 + OBJC_IVAR____TtC8Freeform19CRLPasteboardObject_pasteboardData)
        + OBJC_IVAR____TtC8Freeform23CRLPasteboardObjectData_textCRDT;
    swift_beginAccess();
    swift_retain();
    sub_1006063BC((uint64_t)v17, v20, (uint64_t *)&unk_101674610);
    swift_endAccess();
    swift_release();
    sub_10051B3EC(a1 + OBJC_IVAR____TtC8Freeform12CRLWPStorage_shapeItemTextPresetOverride, (uint64_t)v30, &qword_10168D670);
    sub_10051B3EC((uint64_t)v30, (uint64_t)v31, &qword_10168D670);
    if (sub_1005DF0EC((uint64_t)v31) != 1)
    {
      char v22 = v30;
      goto LABEL_6;
    }
    uint64_t v21 = *(void *)(a1 + v25);
    if (v21)
    {
      (*(void (**)(void))(*(void *)v21 + 760))();
      swift_retain();
      sub_1005057FC(&qword_1016879C0);
      CRRegister.wrappedValue.getter();
      sub_10051B3EC((uint64_t)v29, (uint64_t)v28, &qword_10168D670);
      sub_100787054((uint64_t)v7, type metadata accessor for CRLWPShapeItemCRDTData);
      swift_release();
      char v22 = v28;
LABEL_6:
      sub_10051B3EC((uint64_t)v22, (uint64_t)v29, &qword_10168D670);
      sub_10051B3EC((uint64_t)v29, (uint64_t)v27, &qword_10168D670);
      sub_100786EE0(v30, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_100786F64);
      sub_1005057FC(&qword_10168D670);
      sub_1007870FC();
      CRType.copy(renamingReferences:)();
      sub_100786EE0(v29, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1005DF280);
      sub_10051B3EC((uint64_t)v28, (uint64_t)v26, &qword_10168D670);
      uint64_t v23 = *(void *)(v2 + v19) + OBJC_IVAR____TtC8Freeform23CRLPasteboardObjectData_textPresetData;
      sub_10051B3EC(v23, (uint64_t)v27, &qword_10168D670);
      sub_10051B3EC((uint64_t)v26, v23, &qword_10168D670);
      sub_100786EE0(v27, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1005DF280);
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

uint64_t sub_10078250C(uint64_t a1)
{
  uint64_t v22 = a1;
  uint64_t v2 = sub_1005057FC((uint64_t *)&unk_101674610);
  __chkstk_darwin(v2 - 8, v3);
  uint64_t v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6, v7);
  uint64_t v9 = (char *)&v20 - v8;
  uint64_t v10 = type metadata accessor for CRLWPStorageCRDTData(0);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10, v12);
  uint64_t v14 = (char *)&v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = OBJC_IVAR____TtC8Freeform19CRLPasteboardObject_pasteboardData;
  uint64_t v21 = v1;
  uint64_t v16 = *(void *)(v1 + OBJC_IVAR____TtC8Freeform19CRLPasteboardObject_pasteboardData)
      + OBJC_IVAR____TtC8Freeform23CRLPasteboardObjectData_textCRDT;
  swift_beginAccess();
  sub_100522E9C(v16, (uint64_t)v5, (uint64_t *)&unk_101674610);
  uint64_t v17 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  if (v17(v5, 1, v10) == 1)
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"makeTextboxFromCopiedText(with:)", 32, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLPasteboardObject.swift", 86, 2, 96, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"makeTextboxFromCopiedText(with:)", 32, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLPasteboardObject.swift", 86, 2, 96);
  }
  sub_10051B3EC((uint64_t)v5, (uint64_t)v9, (uint64_t *)&unk_101674610);
  if (v17(v9, 1, v10) == 1)
  {
    sub_100522F00((uint64_t)v9, (uint64_t *)&unk_101674610);
    return 0;
  }
  else
  {
    sub_100786938((uint64_t)v9, (uint64_t)v14);
    sub_10051B3EC(*(void *)(v21 + v15) + OBJC_IVAR____TtC8Freeform23CRLPasteboardObjectData_textPresetData, (uint64_t)v23, &qword_10168D670);
    sub_100786EE0(v23, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_100786F64);
    uint64_t v18 = sub_100F3DD74((uint64_t)v14, v23);
    sub_100786EE0(v23, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1005DF280);
    sub_100787054((uint64_t)v14, type metadata accessor for CRLWPStorageCRDTData);
  }
  return v18;
}

uint64_t sub_1007829A0(void *a1)
{
  uint64_t v3 = sub_1005057FC(&qword_10167F3E8);
  __chkstk_darwin(v3 - 8, v4);
  uint64_t v6 = &v16[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = type metadata accessor for CodingUserInfoKey();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7, v9);
  uint64_t v11 = &v16[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  type metadata accessor for PropertyListEncoder();
  swift_allocObject();
  PropertyListEncoder.init()();
  CodingUserInfoKey.init(rawValue:)();
  uint64_t result = (*(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v8 + 32))(v11, v6, v7);
    v17[3] = type metadata accessor for CRContext();
    v17[0] = a1;
    id v13 = a1;
    uint64_t v14 = (void (*)(unsigned char *, void))dispatch thunk of PropertyListEncoder.userInfo.modify();
    sub_10057DFD0((uint64_t)v17, (uint64_t)v11);
    v14(v16, 0);
    v17[0] = v1;
    sub_1007870B4(&qword_10167F3F0, (void (*)(uint64_t))type metadata accessor for CRLPasteboardObjectData);
    uint64_t v15 = dispatch thunk of PropertyListEncoder.encode<A>(_:)();
    swift_release();
    return v15;
  }
  return result;
}

uint64_t type metadata accessor for CRLPasteboardObject()
{
  return self;
}

uint64_t sub_100782CD0()
{
  return swift_retain();
}

double sub_100782D08@<D0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  double result = sub_100786738(a1, (uint64_t)v7);
  if (!v2)
  {
    long long v5 = v7[1];
    *a2 = v7[0];
    a2[1] = v5;
    double result = *(double *)&v8;
    long long v6 = v9;
    a2[2] = v8;
    a2[3] = v6;
  }
  return result;
}

void sub_100782D4C(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for UUID();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4, v6);
  long long v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9, v10);
  uint64_t v12 = (char *)&v18 - v11;
  if (*((unsigned char *)a1 + OBJC_IVAR____TtC8Freeform18CRLUUIDRemapHelper_shouldResetObjectUUIDs) == 1)
  {
    uint64_t v13 = v2 + OBJC_IVAR____TtC8Freeform23CRLPasteboardObjectData_objectUUID;
    swift_beginAccess();
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v8, v13, v4);
    sub_100A68D30((uint64_t)v8, (uint64_t)v12);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
    swift_beginAccess();
    (*(void (**)(uint64_t, char *, uint64_t))(v5 + 40))(v13, v12, v4);
    swift_endAccess();
    uint64_t v14 = OBJC_IVAR____TtC8Freeform23CRLPasteboardObjectData_boardItemUUIDs;
    id v15 = a1;
    uint64_t v16 = swift_bridgeObjectRetain();
    uint64_t v17 = sub_100785ACC(v16, (uint64_t)v15);
    swift_bridgeObjectRelease();

    *(void *)(v2 + v14) = v17;
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_100782F30()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC8Freeform23CRLPasteboardObjectData_objectUUID;
  uint64_t v2 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  sub_100522F00(v0 + OBJC_IVAR____TtC8Freeform23CRLPasteboardObjectData_textCRDT, (uint64_t *)&unk_101674610);
  sub_10051B3EC(v0 + OBJC_IVAR____TtC8Freeform23CRLPasteboardObjectData_textPresetData, (uint64_t)v4, &qword_10168D670);
  sub_100786EE0(v4, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1005DF280);
  sub_100522F00(v0 + OBJC_IVAR____TtC8Freeform23CRLPasteboardObjectData_stylePresetData, &qword_10167F410);
  return swift_deallocClassInstance();
}

uint64_t sub_100783044()
{
  return type metadata accessor for CRLPasteboardObjectData();
}

uint64_t type metadata accessor for CRLPasteboardObjectData()
{
  uint64_t result = qword_10167F310;
  if (!qword_10167F310) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_100783098()
{
  type metadata accessor for UUID();
  if (v0 <= 0x3F)
  {
    sub_1007831AC();
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

void sub_1007831AC()
{
  if (!qword_10167F320)
  {
    type metadata accessor for CRLWPStorageCRDTData(255);
    unint64_t v0 = type metadata accessor for Optional();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_10167F320);
    }
  }
}

uint64_t sub_100783204()
{
  return 1;
}

uint64_t sub_100783218@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC8Freeform23CRLPasteboardObjectData_objectUUID;
  swift_beginAccess();
  uint64_t v4 = type metadata accessor for UUID();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, v3, v4);
}

void sub_10078329C(void *a1)
{
}

uint64_t sub_1007832B4()
{
  return *(void *)(*(void *)v0 + 16);
}

unint64_t sub_1007832C4(char a1)
{
  unint64_t result = 25705;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000010;
      break;
    case 2:
      unint64_t result = 0x6574496472616F62;
      break;
    case 3:
      unint64_t result = 1954047348;
      break;
    case 4:
      unint64_t result = 0x656C797473;
      break;
    case 5:
      unint64_t result = 0x756F53656C797473;
      break;
    case 6:
      unint64_t result = 0x7365725074786574;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1007833AC@<X0>(unint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_100787764(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_1007833D8()
{
  return RawRepresentable<>.init(from:)();
}

uint64_t sub_100783438()
{
  return RawRepresentable<>.encode(to:)();
}

unint64_t sub_100783488()
{
  return sub_1007832C4(*v0);
}

uint64_t sub_100783490@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_10078778C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1007834B8()
{
  return *v0 + 1;
}

uint64_t sub_1007834C8@<X0>(unint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_100787764(a1);
  *a2 = result;
  return result;
}

uint64_t sub_1007834F0(uint64_t a1)
{
  unint64_t v2 = sub_100786890();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10078352C(uint64_t a1)
{
  unint64_t v2 = sub_100786890();

  return CodingKey.debugDescription.getter(a1, v2);
}

void sub_100783568(void *a1)
{
  uint64_t v2 = sub_1005057FC((uint64_t *)&unk_101674610);
  __chkstk_darwin(v2 - 8, v3);
  uint64_t v62 = (uint64_t)&v58 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v63 = type metadata accessor for CRLWPStorageCRDTData(0);
  uint64_t v61 = *(void *)(v63 - 8);
  __chkstk_darwin(v63, v5);
  uint64_t v60 = (uint64_t)&v58 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v66 = type metadata accessor for UUID();
  uint64_t v71 = *(void *)(v66 - 8);
  __chkstk_darwin(v66, v7);
  uint64_t v65 = (char *)&v58 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v68 = sub_1005057FC(&qword_10167F3F8);
  uint64_t v64 = *(void *)(v68 - 8);
  __chkstk_darwin(v68, v9);
  uint64_t v70 = (char *)&v58 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1005057FC(&qword_10167F3E8);
  __chkstk_darwin(v11 - 8, v12);
  uint64_t v14 = (char *)&v58 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for CodingUserInfoKey();
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15, v17);
  uint64_t v19 = (char *)&v58 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10050F848(a1, a1[3]);
  uint64_t v20 = dispatch thunk of Encoder.userInfo.getter();
  CodingUserInfoKey.init(rawValue:)();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1)
  {
    __break(1u);
    return;
  }
  (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v19, v14, v15);
  uint64_t v21 = v71;
  if (*(void *)(v20 + 16) && (unint64_t v22 = sub_1009569E8((uint64_t)v19), (v23 & 1) != 0))
  {
    sub_100522D7C(*(void *)(v20 + 56) + 32 * v22, (uint64_t)&v91);
  }
  else
  {
    long long v91 = 0u;
    long long v92 = 0u;
  }
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v16 + 8))(v19, v15);
  if (!*((void *)&v92 + 1))
  {
    sub_100522F00((uint64_t)&v91, &qword_101672BF0);
    goto LABEL_11;
  }
  type metadata accessor for CRContext();
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_11:
    sub_1005F7CE8();
    swift_allocError();
    *uint64_t v31 = 9;
    swift_willThrow();
    return;
  }
  id v59 = (id)v90[0];
  sub_10050F848(a1, a1[3]);
  sub_100786890();
  uint64_t v24 = v70;
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  uint64_t v25 = v69;
  uint64_t v26 = v69 + OBJC_IVAR____TtC8Freeform23CRLPasteboardObjectData_objectUUID;
  swift_beginAccess();
  uint64_t v28 = v65;
  uint64_t v27 = v66;
  (*(void (**)(char *, uint64_t, uint64_t))(v21 + 16))(v65, v26, v66);
  LOBYTE(v91) = 0;
  sub_1007870B4(&qword_101671E70, (void (*)(uint64_t))&type metadata accessor for UUID);
  uint64_t v29 = v67;
  uint64_t v30 = v68;
  KeyedEncodingContainer.encode<A>(_:forKey:)();
  if (v29)
  {

    (*(void (**)(char *, uint64_t))(v21 + 8))(v28, v27);
    (*(void (**)(char *, uint64_t))(v64 + 8))(v24, v30);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v21 + 8))(v28, v27);
    LOBYTE(v91) = 1;
    KeyedEncodingContainer.encode(_:forKey:)();
    uint64_t v32 = v30;
    uint64_t v33 = v25;
    *(void *)&long long v91 = *(void *)(v25 + OBJC_IVAR____TtC8Freeform23CRLPasteboardObjectData_boardItemUUIDs);
    LOBYTE(v90[0]) = 2;
    swift_bridgeObjectRetain();
    sub_1005057FC(&qword_101683E60);
    sub_10078699C(&qword_10167F408, &qword_101671E70);
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    id v34 = v59;
    uint64_t v35 = v24;
    swift_bridgeObjectRelease();
    uint64_t v36 = v33 + OBJC_IVAR____TtC8Freeform23CRLPasteboardObjectData_textCRDT;
    swift_beginAccess();
    uint64_t v37 = v36;
    uint64_t v38 = v62;
    sub_100522E9C(v37, v62, (uint64_t *)&unk_101674610);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v61 + 48))(v38, 1, v63) == 1)
    {
      sub_100522F00(v38, (uint64_t *)&unk_101674610);
    }
    else
    {
      sub_100786938(v38, v60);
      if (qword_10166EE10 != -1) {
        swift_once();
      }
      uint64_t v40 = type metadata accessor for CRCodableVersion();
      sub_100556B74(v40, (uint64_t)qword_10171A2D8);
      sub_1007870B4(&qword_1016754A0, (void (*)(uint64_t))type metadata accessor for CRLWPStorageCRDTData);
      uint64_t v46 = CRDT.serializedData(_:version:)();
      unint64_t v48 = v47;
      *(void *)&long long v91 = v46;
      *((void *)&v91 + 1) = v47;
      LOBYTE(v90[0]) = 3;
      sub_10060D344();
      uint64_t v49 = v70;
      KeyedEncodingContainer.encode<A>(_:forKey:)();
      sub_100787054(v60, type metadata accessor for CRLWPStorageCRDTData);
      sub_100510084(v46, v48);
      uint64_t v35 = v49;
    }
    sub_10051B3EC(v33 + OBJC_IVAR____TtC8Freeform23CRLPasteboardObjectData_textPresetData, (uint64_t)v90, &qword_10168D670);
    sub_10051B3EC((uint64_t)v90, (uint64_t)&v91, &qword_10168D670);
    if (sub_1005DF0EC((uint64_t)&v91) != 1)
    {
      long long v84 = v103;
      long long v85 = v104;
      long long v86 = v105;
      uint64_t v87 = v106;
      long long v80 = v99;
      long long v81 = v100;
      long long v82 = v101;
      long long v83 = v102;
      long long v76 = v95;
      long long v77 = v96;
      long long v78 = v97;
      long long v79 = v98;
      long long v72 = v91;
      long long v73 = v92;
      long long v74 = v93;
      long long v75 = v94;
      sub_10051B3EC((uint64_t)v90, (uint64_t)v88, &qword_10168D670);
      sub_1005DF3EC((uint64_t)v88);
      if (qword_10166EE10 != -1) {
        swift_once();
      }
      uint64_t v41 = type metadata accessor for CRCodableVersion();
      sub_100556B74(v41, (uint64_t)qword_10171A2D8);
      sub_1005DDFD0();
      uint64_t v50 = CRValue.serializedData(_:version:)();
      unint64_t v52 = v51;
      sub_100786EE0(v90, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1005DF280);
      *(void *)&long long v72 = v50;
      *((void *)&v72 + 1) = v52;
      char v89 = 6;
      sub_10060D344();
      uint64_t v53 = v70;
      KeyedEncodingContainer.encode<A>(_:forKey:)();
      sub_100510084(v50, v52);
      uint64_t v35 = v53;
    }
    int v39 = *(unsigned __int8 *)(v33 + OBJC_IVAR____TtC8Freeform23CRLPasteboardObjectData_stylePresetSourceKind);
    if (v39 != 6)
    {
      LOBYTE(v88[0]) = v39;
      LOBYTE(v72) = 5;
      sub_1007868E4();
      KeyedEncodingContainer.encode<A>(_:forKey:)();
    }
    uint64_t v42 = v32;
    uint64_t v43 = v69 + OBJC_IVAR____TtC8Freeform23CRLPasteboardObjectData_stylePresetData;
    swift_beginAccess();
    sub_100522E9C(v43, (uint64_t)&v72, &qword_10167F410);
    uint64_t v44 = *((void *)&v73 + 1);
    if (*((void *)&v73 + 1))
    {
      sub_10053974C(&v72, (uint64_t)v88);
      sub_10050F848(v88, v88[3]);
      if (qword_10166EE10 != -1) {
        swift_once();
      }
      uint64_t v45 = type metadata accessor for CRCodableVersion();
      sub_100556B74(v45, (uint64_t)qword_10171A2D8);
      uint64_t v54 = CRValue.serializedData(_:version:)();
      unint64_t v56 = v55;
      *(void *)&long long v72 = v54;
      *((void *)&v72 + 1) = v55;
      char v107 = 4;
      sub_10060D344();
      uint64_t v57 = v70;
      KeyedEncodingContainer.encode<A>(_:forKey:)();
      sub_100510084(v54, v56);
      _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v88);
      uint64_t v35 = v57;
    }
    else
    {
      sub_100522F00((uint64_t)&v72, &qword_10167F410);
    }
    if ((v39 != 6) != (v44 != 0))
    {
      sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"encode(to:)", 11, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLPasteboardObject.swift", 86, 2, 277, (uint64_t)"Should have both or neither for preset information", 50, 2u, (uint64_t)_swiftEmptyArrayStorage);
      uint64_t v42 = v68;
      uint64_t v35 = v70;
      sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"encode(to:)", 11, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLPasteboardObject.swift", 86, 2, 277);
    }

    (*(void (**)(char *, uint64_t))(v64 + 8))(v35, v42);
  }
}

void sub_1007842F8(void *a1)
{
}

uint64_t sub_10078431C(void *a1)
{
  uint64_t v2 = sub_1005057FC((uint64_t *)&unk_101674610);
  __chkstk_darwin(v2 - 8, v3);
  uint64_t v91 = (uint64_t)&v86 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5, v6);
  long long v100 = (char *)&v86 - v7;
  __chkstk_darwin(v8, v9);
  uint64_t v92 = (uint64_t)&v86 - v10;
  uint64_t v96 = type metadata accessor for UUID();
  uint64_t v93 = *(void *)(v96 - 8);
  __chkstk_darwin(v96, v11);
  uint64_t v90 = (char *)&v86 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13, v14);
  long long v97 = (char *)&v86 - v15;
  uint64_t v16 = sub_1005057FC(&qword_10167F420);
  uint64_t v94 = *(void *)(v16 - 8);
  uint64_t v95 = v16;
  __chkstk_darwin(v16, v17);
  long long v103 = (char *)&v86 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_1005057FC(&qword_10167F3E8);
  __chkstk_darwin(v19 - 8, v20);
  long long v101 = (char *)&v86 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22, v23);
  long long v102 = (char *)&v86 - v24;
  __chkstk_darwin(v25, v26);
  uint64_t v28 = (char *)&v86 - v27;
  uint64_t v29 = type metadata accessor for CodingUserInfoKey();
  uint64_t v30 = *(void **)(v29 - 8);
  __chkstk_darwin(v29, v31);
  long long v99 = (char *)&v86 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v33, v34);
  uint64_t v106 = (char *)&v86 - v35;
  __chkstk_darwin(v36, v37);
  int v39 = (char *)&v86 - v38;
  uint64_t v40 = a1[3];
  uint64_t v41 = a1[4];
  uint64_t v119 = a1;
  uint64_t v108 = sub_10050F848(a1, v40);
  uint64_t v109 = v41;
  uint64_t v42 = dispatch thunk of Decoder.userInfo.getter();
  CodingUserInfoKey.init(rawValue:)();
  char v107 = (uint64_t (*)(char *, uint64_t, uint64_t))v30[6];
  uint64_t result = v107(v28, 1, v29);
  if (result == 1)
  {
    __break(1u);
    goto LABEL_59;
  }
  long long v105 = (void (*)(char *, char *, uint64_t))v30[4];
  v105(v39, v28, v29);
  if (*(void *)(v42 + 16) && (unint64_t v44 = sub_1009569E8((uint64_t)v39), (v45 & 1) != 0))
  {
    sub_100522D7C(*(void *)(v42 + 56) + 32 * v44, (uint64_t)&v117);
  }
  else
  {
    long long v117 = 0u;
    long long v118 = 0u;
  }
  swift_bridgeObjectRelease();
  uint64_t v46 = v30[1];
  ((void (*)(char *, uint64_t))v46)(v39, v29);
  if (!*((void *)&v118 + 1))
  {
    sub_100522F00((uint64_t)&v117, &qword_101672BF0);
    goto LABEL_13;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_13:
    sub_1005F7CE8();
    swift_allocError();
    *uint64_t v53 = 11;
    swift_willThrow();
    uint64_t v54 = v119;
    goto LABEL_39;
  }
  char v89 = (void (*)(char *, uint64_t))v46;
  uint64_t v87 = *(void *)&v115[0];
  uint64_t v47 = dispatch thunk of Decoder.userInfo.getter();
  uint64_t v88 = "preset information";
  unint64_t v48 = v102;
  CodingUserInfoKey.init(rawValue:)();
  uint64_t result = v107(v48, 1, v29);
  if (result == 1)
  {
LABEL_59:
    __break(1u);
    goto LABEL_60;
  }
  uint64_t v49 = (uint64_t)v106;
  v105(v106, v48, v29);
  if (*(void *)(v47 + 16))
  {
    unint64_t v50 = sub_1009569E8(v49);
    unint64_t v51 = v89;
    if (v52)
    {
      sub_100522D7C(*(void *)(v47 + 56) + 32 * v50, (uint64_t)&v117);
    }
    else
    {
      long long v117 = 0u;
      long long v118 = 0u;
    }
  }
  else
  {
    long long v117 = 0u;
    long long v118 = 0u;
    unint64_t v51 = v89;
  }
  swift_bridgeObjectRelease();
  v51(v106, v29);
  if (*((void *)&v118 + 1))
  {
    int v55 = swift_dynamicCast();
    unint64_t v56 = *(char **)&v115[0];
    if (!v55) {
      unint64_t v56 = 0;
    }
    uint64_t v106 = v56;
    int v57 = v55 ^ 1;
  }
  else
  {
    sub_100522F00((uint64_t)&v117, &qword_101672BF0);
    uint64_t v106 = 0;
    int v57 = 1;
  }
  uint64_t v58 = dispatch thunk of Decoder.userInfo.getter();
  id v59 = v101;
  CodingUserInfoKey.init(rawValue:)();
  uint64_t result = v107(v59, 1, v29);
  if (result != 1)
  {
    uint64_t v60 = (uint64_t)v99;
    v105(v99, v59, v29);
    uint64_t v61 = (uint64_t)v100;
    if (*(void *)(v58 + 16))
    {
      unint64_t v62 = sub_1009569E8(v60);
      if (v63)
      {
        sub_100522D7C(*(void *)(v58 + 56) + 32 * v62, (uint64_t)&v117);
      }
      else
      {
        long long v117 = 0u;
        long long v118 = 0u;
      }
    }
    else
    {
      long long v117 = 0u;
      long long v118 = 0u;
    }
    swift_bridgeObjectRelease();
    v51((char *)v60, v29);
    if (*((void *)&v118 + 1))
    {
      int v64 = swift_dynamicCast();
      if (v64) {
        uint64_t v65 = *(void *)&v115[0];
      }
      else {
        uint64_t v65 = 0;
      }
      int v66 = v64 ^ 1;
    }
    else
    {
      sub_100522F00((uint64_t)&v117, &qword_101672BF0);
      uint64_t v65 = 0;
      int v66 = 1;
    }
    uint64_t v54 = v119;
    uint64_t v67 = v98;
    if (v57)
    {
      sub_1005CC8C4(v104, (uint64_t)&off_1015131E0);
      uint64_t v106 = v68;
    }
    if (v66)
    {
      sub_1005CC8C4(v104, (uint64_t)&off_1015131E0);
      uint64_t v65 = v69;
    }
    uint64_t v109 = v65;
    uint64_t v46 = (uint64_t)sub_10050F848(v54, v54[3]);
    sub_100786890();
    dispatch thunk of Decoder.container<A>(keyedBy:)();
    if (!v67)
    {
      LOBYTE(v117) = 0;
      sub_1007870B4(&qword_101671E58, (void (*)(uint64_t))&type metadata accessor for UUID);
      KeyedDecodingContainer.decode<A>(_:forKey:)();
      LOBYTE(v117) = 1;
      LODWORD(v108) = KeyedDecodingContainer.decode(_:forKey:)();
      sub_1005057FC(&qword_101683E60);
      LOBYTE(v115[0]) = 2;
      sub_10078699C(&qword_10167F428, &qword_101671E58);
      KeyedDecodingContainer.decode<A>(_:forKey:)();
      char v107 = (uint64_t (*)(char *, uint64_t, uint64_t))v117;
      LOBYTE(v117) = 3;
      if (KeyedDecodingContainer.contains(_:)())
      {
        LOBYTE(v115[0]) = 3;
        sub_10060D184();
        KeyedDecodingContainer.decode<A>(_:forKey:)();
        uint64_t v72 = type metadata accessor for CRLWPStorageCRDTData(0);
        sub_1007870B4(&qword_1016754A0, (void (*)(uint64_t))type metadata accessor for CRLWPStorageCRDTData);
        CRDT.init(serializedData:)();
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v72 - 8) + 56))(v61, 0, 1, v72);
        sub_10051B3EC(v61, v92, (uint64_t *)&unk_101674610);
      }
      else
      {
        uint64_t v70 = type metadata accessor for CRLWPStorageCRDTData(0);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v70 - 8) + 56))(v92, 1, 1, v70);
      }
      LOBYTE(v115[0]) = 6;
      if (KeyedDecodingContainer.contains(_:)())
      {
        LOBYTE(v111[0]) = 6;
        sub_10060D184();
        KeyedDecodingContainer.decode<A>(_:forKey:)();
        sub_1005DDFD0();
        CRValue.init(serializedData:)();
        v111[12] = v115[12];
        v111[13] = v115[13];
        v111[14] = v115[14];
        uint64_t v112 = v116;
        v111[8] = v115[8];
        v111[9] = v115[9];
        v111[10] = v115[10];
        v111[11] = v115[11];
        v111[4] = v115[4];
        v111[5] = v115[5];
        v111[6] = v115[6];
        v111[7] = v115[7];
        v111[0] = v115[0];
        v111[1] = v115[1];
        v111[2] = v115[2];
        v111[3] = v115[3];
        SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)((CKRecordID)v111, v84);
        long long v85 = v111;
      }
      else
      {
        sub_1005C6DF0((uint64_t)v115);
        long long v85 = v115;
      }
      sub_10051B3EC((uint64_t)v85, (uint64_t)&v117, &qword_10168D670);
      LOBYTE(v115[0]) = 5;
      if (KeyedDecodingContainer.contains(_:)())
      {
        LOBYTE(v111[0]) = 5;
        sub_100786A30();
        KeyedDecodingContainer.decode<A>(_:forKey:)();
        int v71 = LOBYTE(v115[0]);
      }
      else
      {
        int v71 = 6;
      }
      LOBYTE(v115[0]) = 4;
      if (KeyedDecodingContainer.contains(_:)())
      {
        LOBYTE(v111[0]) = 4;
        sub_10060D184();
        KeyedDecodingContainer.decode<A>(_:forKey:)();
        long long v83 = v115[0];
        LODWORD(v105) = v71;
        if (v71 != 6)
        {
          sub_1009F0E1C(*(uint64_t *)&v115[0], *((unint64_t *)&v115[0] + 1), v71, (uint64_t)v115);
          sub_100510084(v83, *((unint64_t *)&v83 + 1));
          sub_10051B3EC((uint64_t)v115, (uint64_t)v113, &qword_10167F410);
          goto LABEL_54;
        }
        sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"init(from:)", 11, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLPasteboardObject.swift", 86, 2, 337, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
        sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"init(from:)", 11, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLPasteboardObject.swift", 86, 2, 337);
        sub_100510084(v83, *((unint64_t *)&v83 + 1));
      }
      else
      {
        LODWORD(v105) = v71;
      }
      uint64_t v114 = 0;
      memset(v113, 0, sizeof(v113));
LABEL_54:
      uint64_t v73 = v93;
      long long v74 = v90;
      (*(void (**)(char *, char *, uint64_t))(v93 + 16))(v90, v97, v96);
      sub_100522E9C(v92, v91, (uint64_t *)&unk_101674610);
      sub_100522E9C((uint64_t)v113, (uint64_t)v110, &qword_10167F410);
      uint64_t v46 = swift_allocObject();
      *(void *)(v46 + OBJC_IVAR____TtC8Freeform23CRLPasteboardObjectData_objectOptions) = 7;
      uint64_t v75 = v46 + OBJC_IVAR____TtC8Freeform23CRLPasteboardObjectData_textCRDT;
      uint64_t v76 = type metadata accessor for CRLWPStorageCRDTData(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v76 - 8) + 56))(v75, 1, 1, v76);
      uint64_t v77 = v46 + OBJC_IVAR____TtC8Freeform23CRLPasteboardObjectData_textPresetData;
      sub_1005C6DF0((uint64_t)v111);
      sub_10051B3EC((uint64_t)v111, v77, &qword_10168D670);
      uint64_t v78 = v46 + OBJC_IVAR____TtC8Freeform23CRLPasteboardObjectData_stylePresetData;
      *(_OWORD *)uint64_t v78 = 0u;
      *(_OWORD *)(v78 + 16) = 0u;
      *(void *)(v78 + 32) = 0;
      uint64_t v79 = OBJC_IVAR____TtC8Freeform23CRLPasteboardObjectData_stylePresetSourceKind;
      *(unsigned char *)(v46 + OBJC_IVAR____TtC8Freeform23CRLPasteboardObjectData_stylePresetSourceKind) = 6;
      long long v80 = v106;
      *(void *)(v46 + 16) = v87;
      *(void *)(v46 + 24) = v80;
      *(void *)(v46 + 32) = v109;
      long long v81 = v74;
      uint64_t v82 = v96;
      (*(void (**)(uint64_t, char *, uint64_t))(v73 + 32))(v46 + OBJC_IVAR____TtC8Freeform23CRLPasteboardObjectData_objectUUID, v81, v96);
      *(unsigned char *)(v46 + OBJC_IVAR____TtC8Freeform23CRLPasteboardObjectData_isSmartCopyPaste) = v108 & 1;
      *(void *)(v46 + OBJC_IVAR____TtC8Freeform23CRLPasteboardObjectData_boardItemUUIDs) = v107;
      swift_beginAccess();
      sub_1006063BC(v91, v75, (uint64_t *)&unk_101674610);
      swift_endAccess();
      sub_10051B3EC(v77, (uint64_t)v115, &qword_10168D670);
      sub_10051B3EC((uint64_t)&v117, v77, &qword_10168D670);
      sub_100786EE0(v115, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1005DF280);
      swift_beginAccess();
      sub_1006063BC((uint64_t)v110, v78, &qword_10167F410);
      swift_endAccess();
      *(unsigned char *)(v46 + v79) = (_BYTE)v105;
      sub_100522F00((uint64_t)v113, &qword_10167F410);
      sub_100522F00(v92, (uint64_t *)&unk_101674610);
      (*(void (**)(char *, uint64_t))(v73 + 8))(v97, v82);
      (*(void (**)(char *, uint64_t))(v94 + 8))(v103, v95);
      _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v119);
      return v46;
    }
LABEL_39:
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v54);
    return v46;
  }
LABEL_60:
  __break(1u);
  return result;
}

uint64_t sub_10078536C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_10078431C(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_100785400()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1005057FC((uint64_t *)&unk_101674610);
  __chkstk_darwin(v2, v3);
  uint64_t v5 = &v32[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v6, v7);
  uint64_t v9 = &v32[-v8 - 8];
  id v10 = [objc_allocWithZone((Class)CRLDescription) initWithObject:v0];
  uint64_t v11 = *(void *)(v1 + OBJC_IVAR____TtC8Freeform19CRLPasteboardObject_pasteboardData);
  uint64_t v12 = v11 + OBJC_IVAR____TtC8Freeform23CRLPasteboardObjectData_textCRDT;
  swift_beginAccess();
  sub_100522E9C(v12, (uint64_t)v9, (uint64_t *)&unk_101674610);
  uint64_t v13 = type metadata accessor for CRLWPStorageCRDTData(0);
  int v14 = (*(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48))(v9, 1, v13);
  swift_retain();
  sub_100522F00((uint64_t)v9, (uint64_t *)&unk_101674610);
  NSString v15 = String._bridgeToObjectiveC()();
  NSString v16 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v10 addField:v15 value:v16];

  if (v14 != 1)
  {
    NSString v17 = String._bridgeToObjectiveC()();
    sub_100522E9C(v12, (uint64_t)v5, (uint64_t *)&unk_101674610);
    String.init<A>(describing:)();
    NSString v18 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v10 addField:v17 value:v18];
  }
  uint64_t v19 = v11 + OBJC_IVAR____TtC8Freeform23CRLPasteboardObjectData_stylePresetData;
  swift_beginAccess();
  sub_100522E9C(v19, (uint64_t)v32, &qword_10167F410);
  uint64_t v20 = v33;
  sub_100522F00((uint64_t)v32, &qword_10167F410);
  if (v20)
  {
    int v21 = *(unsigned __int8 *)(v11 + OBJC_IVAR____TtC8Freeform23CRLPasteboardObjectData_stylePresetSourceKind);
    if (v21 == 6)
    {
      sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"description", 11, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLPasteboardObject.swift", 86, 2, 370, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"description", 11, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLPasteboardObject.swift", 86, 2, 370);
    }
    else
    {
      NSString v22 = String._bridgeToObjectiveC()();
      v32[0] = v21;
      String.init<A>(describing:)();
      NSString v23 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v10 addField:v22 value:v23];
    }
  }
  NSString v24 = String._bridgeToObjectiveC()();
  type metadata accessor for UUID();
  swift_bridgeObjectRetain();
  Array.description.getter();
  swift_bridgeObjectRelease();
  NSString v25 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v10 addField:v24 value:v25];

  NSString v26 = String._bridgeToObjectiveC()();
  type metadata accessor for CRLBoardItem(0);
  swift_bridgeObjectRetain();
  Array.description.getter();
  swift_bridgeObjectRelease();
  NSString v27 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v10 addField:v26 value:v27];

  id v28 = [v10 descriptionString];
  uint64_t v29 = static String._unconditionallyBridgeFromObjectiveC(_:)();

  swift_release();
  return v29;
}

uint64_t sub_100785928(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void (*v13)(void *__return_ptr, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(uint64_t, uint64_t);
  unsigned char v18[24];
  void v19[5];

  uint64_t v7 = *(void *)(a3 - 8);
  __n128 v8 = __chkstk_darwin(a1, a1);
  id v10 = &v18[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(unsigned char *, __n128))(v7 + 16))(v10, v8);
  uint64_t v11 = OBJC_IVAR____TtC8Freeform19CRLPasteboardObject_pasteboardData;
  uint64_t v12 = *(void *)(a2 + OBJC_IVAR____TtC8Freeform19CRLPasteboardObject_pasteboardData);
  uint64_t v13 = *(void (**)(void *__return_ptr, uint64_t, uint64_t))(a4 + 24);
  swift_retain();
  v13(v19, a3, a4);
  int v14 = v12 + OBJC_IVAR____TtC8Freeform23CRLPasteboardObjectData_stylePresetData;
  swift_beginAccess();
  sub_1006063BC((uint64_t)v19, v14, &qword_10167F410);
  swift_endAccess();
  swift_release();
  NSString v15 = *(void *)(a2 + v11);
  NSString v16 = *(uint64_t (**)(uint64_t, uint64_t))(a4 + 16);
  swift_retain();
  *(unsigned char *)(v15 + OBJC_IVAR____TtC8Freeform23CRLPasteboardObjectData_stylePresetSourceKind) = v16(a3, a4);
  swift_release();
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v7 + 8))(v10, a3);
}

uint64_t sub_100785ACC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1005057FC((uint64_t *)&unk_101674520);
  __chkstk_darwin(v4 - 8, v5);
  uint64_t v7 = (char *)&v119 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8, v9);
  Swift::String v124 = (char *)&v119 - v10;
  __chkstk_darwin(v11, v12);
  uint64_t v122 = (char *)&v119 - v13;
  __chkstk_darwin(v14, v15);
  Swift::String v126 = (char *)&v119 - v16;
  __chkstk_darwin(v17, v18);
  uint64_t v129 = (char *)&v119 - v19;
  uint64_t v20 = type metadata accessor for UUID();
  uint64_t v21 = *(void *)(v20 - 8);
  __chkstk_darwin(v20, v22);
  uint64_t v123 = (char *)&v119 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24, v25);
  unint64_t v137 = (unint64_t)&v119 - v26;
  __chkstk_darwin(v27, v28);
  uint64_t v125 = (char *)&v119 - v29;
  __chkstk_darwin(v30, v31);
  unint64_t v138 = (unint64_t)&v119 - v32;
  __chkstk_darwin(v33, v34);
  Swift::String v145 = (char *)&v119 - v35;
  int64_t v36 = *(void *)(a1 + 16);
  uint64_t v37 = _swiftEmptyArrayStorage;
  if (!v36) {
    return (uint64_t)v37;
  }
  Swift::String v147 = _swiftEmptyArrayStorage;
  sub_1006BB544(0, v36, 0);
  unint64_t v133 = (*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
  uint64_t v38 = a1 + v133;
  int v135 = *(unsigned __int8 *)(a2 + OBJC_IVAR____TtC8Freeform18CRLUUIDRemapHelper_shouldResetObjectUUIDs);
  int v39 = (uint64_t *)(a2 + OBJC_IVAR____TtC8Freeform18CRLUUIDRemapHelper_objectUUIDMap);
  uint64_t v142 = (void (**)(char *, uint64_t, uint64_t))(v21 + 16);
  unint64_t v128 = v21 + 56;
  uint64_t v40 = *(void *)(v21 + 72);
  Swift::String v134 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v21 + 48);
  uint64_t v143 = v40;
  uint64_t v144 = (void (**)(char *, uint64_t, uint64_t))(v21 + 32);
  Swift::String v120 = (void (**)(unint64_t, char *, uint64_t))(v21 + 40);
  uint64_t v132 = (void (**)(unint64_t, uint64_t))(v21 + 8);
  uint64_t v41 = (uint64_t)v129;
  uint64_t v127 = v39;
  uint64_t v121 = v7;
  while (1)
  {
    if (!v135)
    {
      (*v142)(v145, v38, v20);
      goto LABEL_49;
    }
    swift_beginAccess();
    uint64_t v42 = *v39;
    if (!*(void *)(*v39 + 16)) {
      break;
    }
    unint64_t v43 = sub_100955FC8(v38);
    if ((v44 & 1) == 0) {
      break;
    }
    (*v142)((char *)v41, *(void *)(v42 + 56) + v43 * v143, v20);
    unint64_t v45 = v128;
    uint64_t v46 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))v128;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))v128)(v41, 0, 1, v20);
    if ((*v134)(v41, 1, v20) == 1)
    {
      uint64_t v141 = v38;
      Swift::String v131 = (void (*)(unint64_t, uint64_t))v36;
      unint64_t v47 = v45 & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
      uint64_t v48 = (uint64_t)v126;
      uint64_t v49 = v46;
      unint64_t v50 = v47;
      goto LABEL_10;
    }
    (*v144)(v145, v41, v20);
    swift_endAccess();
    int v39 = v127;
LABEL_49:
    uint64_t v37 = v147;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1006BB544(0, *((void *)v37 + 2) + 1, 1);
      uint64_t v37 = v147;
    }
    unint64_t v116 = *((void *)v37 + 2);
    unint64_t v115 = *((void *)v37 + 3);
    if (v116 >= v115 >> 1)
    {
      sub_1006BB544(v115 > 1, v116 + 1, 1);
      uint64_t v37 = v147;
    }
    *((void *)v37 + 2) = v116 + 1;
    uint64_t v117 = v143;
    (*v144)((char *)v37 + v133 + v116 * v143, (uint64_t)v145, v20);
    Swift::String v147 = v37;
    v38 += v117;
    if (!--v36) {
      return (uint64_t)v37;
    }
  }
  uint64_t v141 = v38;
  Swift::String v131 = (void (*)(unint64_t, uint64_t))v36;
  uint64_t v49 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))v128;
  unint64_t v50 = v128 & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))v128)(v41, 1, 1, v20);
  uint64_t v48 = (uint64_t)v126;
LABEL_10:
  sub_100522F00(v41, (uint64_t *)&unk_101674520);
  swift_endAccess();
  unint64_t v51 = v145;
  UUID.init()();
  char v52 = *v142;
  uint64_t v53 = v138;
  (*v142)((char *)v138, v141, v20);
  uint64_t v136 = (void (*)(unint64_t, unint64_t, uint64_t))v52;
  v52((char *)v48, (uint64_t)v51, v20);
  unint64_t v140 = v50;
  v49(v48, 0, 1, v20);
  int v39 = v127;
  swift_beginAccess();
  uint64_t v54 = *v134;
  unsigned int v55 = (*v134)(v48, 1, v20);
  Swift::String v139 = v49;
  Swift::String v130 = v54;
  if (v55 == 1)
  {
    sub_100522F00(v48, (uint64_t *)&unk_101674520);
    swift_bridgeObjectRetain();
    unint64_t v56 = sub_100955FC8(v53);
    char v58 = v57;
    swift_bridgeObjectRelease();
    if (v58)
    {
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v60 = (void *)*v39;
      Swift::String v146 = (void *)*v39;
      *int v39 = 0x8000000000000000;
      uint64_t v41 = (uint64_t)v129;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_10097CFAC();
        uint64_t v60 = v146;
      }
      unint64_t v61 = v56 * v143;
      unint64_t v62 = *v132;
      (*v132)(v60[6] + v56 * v143, v20);
      uint64_t v63 = (uint64_t)v146;
      unint64_t v64 = v146[7] + v61;
      uint64_t v65 = (uint64_t)v122;
      (*v144)(v122, v64, v20);
      sub_100588714(v56, v63);
      *int v39 = v63;
      swift_bridgeObjectRelease();
      v139(v65, 0, 1, v20);
    }
    else
    {
      uint64_t v65 = (uint64_t)v122;
      v49((uint64_t)v122, 1, 1, v20);
      unint64_t v62 = *v132;
      uint64_t v41 = (uint64_t)v129;
    }
    int64_t v36 = (int64_t)v131;
    Swift::String v131 = v62;
    v62(v138, v20);
    sub_100522F00(v65, (uint64_t *)&unk_101674520);
    uint64_t v77 = (uint64_t)v124;
    uint64_t v78 = v137;
    goto LABEL_28;
  }
  int v66 = *v144;
  (*v144)(v125, v48, v20);
  int v67 = swift_isUniquelyReferenced_nonNull_native();
  Swift::String v146 = (void *)*v39;
  uint64_t v68 = v146;
  *int v39 = 0x8000000000000000;
  unint64_t v70 = sub_100955FC8(v53);
  uint64_t v71 = v68[2];
  BOOL v72 = (v69 & 1) == 0;
  uint64_t v73 = v71 + v72;
  if (!__OFADD__(v71, v72))
  {
    char v74 = v69;
    if (v68[3] >= v73)
    {
      int64_t v36 = (int64_t)v131;
      if ((v67 & 1) == 0) {
        sub_10097CFAC();
      }
    }
    else
    {
      sub_100960D80(v73, v67);
      unint64_t v75 = sub_100955FC8(v138);
      int64_t v36 = (int64_t)v131;
      if ((v74 & 1) != (v76 & 1)) {
        goto LABEL_59;
      }
      unint64_t v70 = v75;
    }
    uint64_t v78 = v137;
    uint64_t v79 = v146;
    if (v74)
    {
      (*v120)(v146[7] + v70 * v143, v125, v20);
    }
    else
    {
      v146[(v70 >> 6) + 8] |= 1 << v70;
      unint64_t v80 = v70 * v143;
      v136(v79[6] + v70 * v143, v138, v20);
      v66((char *)(v79[7] + v80), (uint64_t)v125, v20);
      uint64_t v81 = v79[2];
      BOOL v82 = __OFADD__(v81, 1);
      uint64_t v83 = v81 + 1;
      if (v82) {
        goto LABEL_57;
      }
      v79[2] = v83;
    }
    *int v39 = (uint64_t)v146;
    swift_bridgeObjectRelease();
    Swift::String v131 = *v132;
    v131(v138, v20);
    uint64_t v77 = (uint64_t)v124;
    uint64_t v41 = (uint64_t)v129;
LABEL_28:
    Swift::String v84 = v145;
    long long v85 = (void (*)(uint64_t, char *, uint64_t))v136;
    v136(v78, (unint64_t)v145, v20);
    v85(v77, v84, v20);
    v139(v77, 0, 1, v20);
    if (v130(v77, 1, v20) == 1)
    {
      sub_100522F00(v77, (uint64_t *)&unk_101674520);
      swift_bridgeObjectRetain();
      unint64_t v86 = sub_100955FC8(v78);
      char v88 = v87;
      swift_bridgeObjectRelease();
      uint64_t v38 = v141;
      if (v88)
      {
        char v89 = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v90 = (void *)*v39;
        Swift::String v146 = (void *)*v39;
        *int v39 = 0x8000000000000000;
        if ((v89 & 1) == 0)
        {
          sub_10097CFAC();
          uint64_t v90 = v146;
        }
        unint64_t v91 = v86 * v143;
        unint64_t v92 = v90[6] + v86 * v143;
        int64_t v93 = v86;
        uint64_t v94 = (void (*)(uint64_t, uint64_t))v131;
        v131(v92, v20);
        uint64_t v95 = (uint64_t)v146;
        unint64_t v96 = v146[7] + v91;
        uint64_t v97 = (uint64_t)v121;
        (*v144)(v121, v96, v20);
        sub_100588714(v93, v95);
        *int v39 = v95;
        swift_bridgeObjectRelease();
        v139(v97, 0, 1, v20);
        uint64_t v41 = (uint64_t)v129;
      }
      else
      {
        uint64_t v97 = (uint64_t)v121;
        v139((uint64_t)v121, 1, 1, v20);
        uint64_t v94 = (void (*)(uint64_t, uint64_t))v131;
      }
      v94(v137, v20);
      sub_100522F00(v97, (uint64_t *)&unk_101674520);
      goto LABEL_48;
    }
    uint64_t v98 = *v144;
    (*v144)(v123, v77, v20);
    int v99 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v100 = v78;
    int v101 = v99;
    Swift::String v146 = (void *)*v39;
    long long v102 = v146;
    *int v39 = 0x8000000000000000;
    unint64_t v104 = sub_100955FC8(v100);
    uint64_t v105 = v102[2];
    BOOL v106 = (v103 & 1) == 0;
    uint64_t v107 = v105 + v106;
    uint64_t v38 = v141;
    if (__OFADD__(v105, v106)) {
      goto LABEL_56;
    }
    char v108 = v103;
    if (v102[3] >= v107)
    {
      if (v101)
      {
        Swift::String v111 = v146;
        if ((v103 & 1) == 0) {
          goto LABEL_45;
        }
      }
      else
      {
        sub_10097CFAC();
        Swift::String v111 = v146;
        if ((v108 & 1) == 0) {
          goto LABEL_45;
        }
      }
    }
    else
    {
      sub_100960D80(v107, v101);
      unint64_t v109 = sub_100955FC8(v137);
      if ((v108 & 1) != (v110 & 1)) {
        goto LABEL_59;
      }
      unint64_t v104 = v109;
      Swift::String v111 = v146;
      if ((v108 & 1) == 0)
      {
LABEL_45:
        v111[(v104 >> 6) + 8] |= 1 << v104;
        unint64_t v112 = v104 * v143;
        v136(v111[6] + v104 * v143, v137, v20);
        v98((char *)(v111[7] + v112), (uint64_t)v123, v20);
        uint64_t v113 = v111[2];
        BOOL v82 = __OFADD__(v113, 1);
        uint64_t v114 = v113 + 1;
        if (v82) {
          goto LABEL_58;
        }
        v111[2] = v114;
        goto LABEL_47;
      }
    }
    (*v120)(v111[7] + v104 * v143, v123, v20);
LABEL_47:
    *int v39 = (uint64_t)v146;
    swift_bridgeObjectRelease();
    v131(v137, v20);
    uint64_t v41 = (uint64_t)v129;
LABEL_48:
    swift_endAccess();
    goto LABEL_49;
  }
  __break(1u);
LABEL_56:
  __break(1u);
LABEL_57:
  __break(1u);
LABEL_58:
  __break(1u);
LABEL_59:
  uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

double sub_100786738@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2;
  uint64_t v7 = *(void *)(v4 + OBJC_IVAR____TtC8Freeform19CRLPasteboardObject_pasteboardData);
  swift_retain();
  uint64_t v8 = sub_1007829A0(a1);
  if (v3)
  {
    swift_release();
  }
  else
  {
    uint64_t v11 = v8;
    unint64_t v12 = v9;
    sub_1005057FC(&qword_10167F3E0);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_10117E810;
    *(unsigned char *)(inited + 32) = 0;
    *(void *)(inited + 40) = v11;
    *(void *)(inited + 48) = v12;
    sub_100510D4C(v11, v12);
    unint64_t v19 = sub_100A396E0(inited);
    unint64_t v14 = sub_100A394EC((uint64_t)_swiftEmptyArrayStorage);
    long long v18 = *(_OWORD *)(v7 + 16);
    uint64_t v15 = *(void *)(v7 + 32);
    if (*(void *)(v4 + OBJC_IVAR____TtC8Freeform19CRLPasteboardObject__boardItems)) {
      uint64_t v16 = *(double **)(v4 + OBJC_IVAR____TtC8Freeform19CRLPasteboardObject__boardItems);
    }
    else {
      uint64_t v16 = _swiftEmptyArrayStorage;
    }
    swift_bridgeObjectRetain();
    uint64_t v17 = sub_100590170((unint64_t)v16);
    sub_100510084(v11, v12);
    swift_release();
    swift_bridgeObjectRelease();
    *(_OWORD *)a2 = v18;
    *(void *)(a2 + 16) = v15;
    *(void *)&double result = 7;
    *(_OWORD *)(a2 + 24) = xmmword_10118D8F0;
    *(void *)(a2 + 40) = v19;
    *(void *)(a2 + 48) = v14;
    *(void *)(a2 + 56) = v17;
  }
  return result;
}

unint64_t sub_100786890()
{
  unint64_t result = qword_10167F400;
  if (!qword_10167F400)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10167F400);
  }
  return result;
}

unint64_t sub_1007868E4()
{
  unint64_t result = qword_10167F418;
  if (!qword_10167F418)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10167F418);
  }
  return result;
}

uint64_t sub_100786938(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CRLWPStorageCRDTData(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10078699C(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100522D34(&qword_101683E60);
    sub_1007870B4(a2, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100786A30()
{
  unint64_t result = qword_10167F430;
  if (!qword_10167F430)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10167F430);
  }
  return result;
}

uint64_t sub_100786A84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v41 = a2;
  uint64_t v39 = a4;
  uint64_t v40 = a1;
  uint64_t v44 = a3;
  id v47 = a5;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v5 = sub_1005057FC(&qword_10167F3E8);
  __chkstk_darwin(v5 - 8, v6);
  unint64_t v45 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8, v9);
  uint64_t v11 = (char *)&v38 - v10;
  __chkstk_darwin(v12, v13);
  uint64_t v15 = (char *)&v38 - v14;
  uint64_t v16 = type metadata accessor for CodingUserInfoKey();
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16, v18);
  uint64_t v38 = (char *)&v38 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20, v21);
  unint64_t v43 = (char *)&v38 - v22;
  __chkstk_darwin(v23, v24);
  uint64_t v26 = (char *)&v38 - v25;
  type metadata accessor for PropertyListDecoder();
  swift_allocObject();
  uint64_t v51 = PropertyListDecoder.init()();
  CodingUserInfoKey.init(rawValue:)();
  uint64_t v27 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v17 + 48);
  uint64_t result = v27(v15, 1, v16);
  if (result == 1)
  {
    __break(1u);
    goto LABEL_8;
  }
  uint64_t v29 = *(void (**)(char *, char *, uint64_t))(v17 + 32);
  v29(v26, v15, v16);
  unint64_t v50 = (void *)ObjectType;
  v49[0] = v47;
  id v30 = v47;
  uint64_t v31 = (void (*)(unsigned char *, void))dispatch thunk of PropertyListDecoder.userInfo.modify();
  sub_10057DFD0((uint64_t)v49, (uint64_t)v26);
  v31(v48, 0);
  CodingUserInfoKey.init(rawValue:)();
  uint64_t result = v27(v11, 1, v16);
  if (result == 1)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  uint64_t v32 = (uint64_t)v43;
  v29(v43, v11, v16);
  unint64_t v50 = &type metadata for UInt64;
  v49[0] = v44;
  uint64_t v33 = (void (*)(unsigned char *, void))dispatch thunk of PropertyListDecoder.userInfo.modify();
  sub_10057DFD0((uint64_t)v49, v32);
  v33(v48, 0);
  uint64_t v34 = v45;
  CodingUserInfoKey.init(rawValue:)();
  uint64_t result = v27(v34, 1, v16);
  if (result == 1)
  {
LABEL_9:
    __break(1u);
    return result;
  }
  uint64_t v35 = (uint64_t)v38;
  v29(v38, v34, v16);
  unint64_t v50 = &type metadata for UInt64;
  v49[0] = v39;
  int64_t v36 = (void (*)(unsigned char *, void))dispatch thunk of PropertyListDecoder.userInfo.modify();
  sub_10057DFD0((uint64_t)v49, v35);
  v36(v48, 0);
  type metadata accessor for CRLPasteboardObjectData();
  sub_1007870B4(&qword_10167F438, (void (*)(uint64_t))type metadata accessor for CRLPasteboardObjectData);
  uint64_t v37 = v42;
  dispatch thunk of PropertyListDecoder.decode<A>(_:from:)();
  uint64_t result = swift_release();
  if (!v37) {
    return v49[0];
  }
  return result;
}

void *sub_100786EE0(void *a1, void (*a2)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))
{
  a2(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6], a1[7], a1[8], a1[9], a1[10], a1[11], a1[12], a1[13], a1[14], a1[15], a1[16], a1[17], a1[18],
    a1[19],
    a1[20],
    a1[21],
    a1[22],
    a1[23],
    a1[24],
    a1[25],
    a1[26],
    a1[27],
    a1[28],
    a1[29],
    a1[30]);
  return a1;
}

uint64_t sub_100786F64(uint64_t result, unint64_t a2, unsigned __int8 a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31)
{
  if (a31)
  {
    sub_10051B3B0(result, a2, a3);
    sub_10051B2E8(a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21);
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_100787054(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1007870B4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1007870FC()
{
  unint64_t result = qword_10167F440;
  if (!qword_10167F440)
  {
    sub_100522D34(&qword_10168D670);
    sub_1005DDFD0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10167F440);
  }
  return result;
}

id sub_100787170(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v26 = a3;
  uint64_t v27 = a4;
  uint64_t v25 = a2;
  uint64_t v28 = a1;
  uint64_t v4 = sub_1005057FC((uint64_t *)&unk_101674610);
  __chkstk_darwin(v4 - 8, v5);
  uint64_t v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for UUID();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8, v10);
  uint64_t v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  UUID.init()();
  uint64_t v13 = type metadata accessor for CRLWPStorageCRDTData(0);
  uint64_t v14 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
  v14(v7, 1, 1, v13);
  sub_1005C6DF0((uint64_t)v32);
  type metadata accessor for CRLPasteboardObjectData();
  memset(v30, 0, sizeof(v30));
  uint64_t v31 = 0;
  uint64_t v15 = (char *)swift_allocObject();
  *(void *)&v15[OBJC_IVAR____TtC8Freeform23CRLPasteboardObjectData_objectOptions] = 7;
  uint64_t v16 = (uint64_t)&v15[OBJC_IVAR____TtC8Freeform23CRLPasteboardObjectData_textCRDT];
  v14(&v15[OBJC_IVAR____TtC8Freeform23CRLPasteboardObjectData_textCRDT], 1, 1, v13);
  uint64_t v17 = (uint64_t)&v15[OBJC_IVAR____TtC8Freeform23CRLPasteboardObjectData_textPresetData];
  sub_10051B3EC((uint64_t)v32, (uint64_t)&v15[OBJC_IVAR____TtC8Freeform23CRLPasteboardObjectData_textPresetData], &qword_10168D670);
  uint64_t v18 = (uint64_t)&v15[OBJC_IVAR____TtC8Freeform23CRLPasteboardObjectData_stylePresetData];
  *(_OWORD *)uint64_t v18 = 0u;
  *(_OWORD *)(v18 + 16) = 0u;
  *(void *)(v18 + 32) = 0;
  uint64_t v19 = OBJC_IVAR____TtC8Freeform23CRLPasteboardObjectData_stylePresetSourceKind;
  v15[OBJC_IVAR____TtC8Freeform23CRLPasteboardObjectData_stylePresetSourceKind] = 6;
  uint64_t v20 = v26;
  *((void *)v15 + 2) = v25;
  *((void *)v15 + 3) = v20;
  *((void *)v15 + 4) = v27;
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(&v15[OBJC_IVAR____TtC8Freeform23CRLPasteboardObjectData_objectUUID], v12, v8);
  v15[OBJC_IVAR____TtC8Freeform23CRLPasteboardObjectData_isSmartCopyPaste] = 0;
  *(void *)&v15[OBJC_IVAR____TtC8Freeform23CRLPasteboardObjectData_boardItemUUIDs] = _swiftEmptyArrayStorage;
  swift_beginAccess();
  sub_1006063BC((uint64_t)v7, v16, (uint64_t *)&unk_101674610);
  swift_endAccess();
  sub_10051B3EC(v17, (uint64_t)v33, &qword_10168D670);
  sub_10051B3EC((uint64_t)v32, v17, &qword_10168D670);
  sub_100786EE0(v33, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1005DF280);
  swift_beginAccess();
  sub_1006063BC((uint64_t)v30, v18, &qword_10167F410);
  swift_endAccess();
  v15[v19] = 6;
  uint64_t v21 = (objc_class *)type metadata accessor for CRLPasteboardObject();
  uint64_t v22 = (char *)objc_allocWithZone(v21);
  *(void *)&v22[OBJC_IVAR____TtC8Freeform19CRLPasteboardObject__boardItems] = 0;
  *(void *)&v22[OBJC_IVAR____TtC8Freeform19CRLPasteboardObject_pasteboardData] = v15;
  *(void *)&v22[OBJC_IVAR____TtC8Freeform19CRLPasteboardObject_context] = v28;
  v29.id receiver = v22;
  v29.Class super_class = v21;
  return [super init];
}

uint64_t getEnumTagSinglePayload for CRLSmartStrokeData.SmartStrokeType(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFA) {
    goto LABEL_17;
  }
  if (a2 + 6 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 6) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 6;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 6;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 6;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 7;
  int v8 = v6 - 7;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for CRLPasteboardObjectData.DataCodingKey(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *unint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100787624);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLPasteboardObjectData.DataCodingKey()
{
  return &type metadata for CRLPasteboardObjectData.DataCodingKey;
}

unint64_t sub_100787660()
{
  unint64_t result = qword_10167F450;
  if (!qword_10167F450)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10167F450);
  }
  return result;
}

unint64_t sub_1007876B8()
{
  unint64_t result = qword_10167F458;
  if (!qword_10167F458)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10167F458);
  }
  return result;
}

unint64_t sub_100787710()
{
  unint64_t result = qword_10167F460;
  if (!qword_10167F460)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10167F460);
  }
  return result;
}

uint64_t sub_100787764(unint64_t a1)
{
  if (a1 >= 8) {
    return 7;
  }
  else {
    return (0x605040302010007uLL >> (8 * a1));
  }
}

uint64_t sub_10078778C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x800000010124EB20 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6574496472616F62 && a2 == 0xEA0000000000736DLL {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 1954047348 && a2 == 0xE400000000000000 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x656C797473 && a2 == 0xE500000000000000 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x756F53656C797473 && a2 == 0xEB00000000656372 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x7365725074786574 && a2 == 0xEA00000000007465)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v6) {
      return 6;
    }
    else {
      return 7;
    }
  }
}

unint64_t sub_100787A64()
{
  unint64_t result = qword_10167F468;
  if (!qword_10167F468)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10167F468);
  }
  return result;
}

double sub_100787ABC(double a1)
{
  uint64_t v2 = swift_bridgeObjectRetain();
  int v3 = sub_100F5EF48(v2);
  swift_bridgeObjectRelease();
  uint64_t v4 = *((void *)v3 + 2);
  if (v4)
  {
    uint64_t v5 = (uint64_t)(v3 + 4);
    swift_bridgeObjectRetain();
    double v6 = 0.0;
    BOOL v7 = _swiftEmptyArrayStorage;
    do
    {
      int v8 = v7;
      sub_1006FAA20(v5, (uint64_t)v24);
      uint64_t v9 = v26;
      long long v19 = v25;
      uint64_t v10 = v25;
      sub_10050F848(v24, v25);
      uint64_t v11 = *(void (**)(uint64_t, uint64_t, double))(v9 + 16);
      long long v22 = v19;
      uint64_t v23 = v9;
      sub_1005767BC(v21);
      v11(v10, v9, v6);
      uint64_t v12 = *((void *)&v25 + 1);
      uint64_t v13 = v25;
      sub_10050F848(v24, v25);
      double v6 = v6 + (*(double (**)(uint64_t))(*(void *)(v12 + 8) + 40))(v13);
      sub_1005057FC(&qword_10167C078);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_10117E810;
      long long v20 = v22;
      uint64_t v15 = v22;
      uint64_t v16 = sub_10050F848(v21, v22);
      *(_OWORD *)(inited + 56) = v20;
      uint64_t v17 = sub_1005767BC((uint64_t *)(inited + 32));
      (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v15 - 8) + 16))(v17, v16, v15);
      swift_bridgeObjectRetain();
      sub_1006E1C44(inited);
      BOOL v7 = v8;
      _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v21);
      _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v24);
      swift_bridgeObjectRelease();
      v5 += 48;
      --v4;
    }
    while (v4);
    swift_bridgeObjectRelease_n();
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  return a1;
}

double sub_100787D08(double a1)
{
  uint64_t v12 = _swiftEmptyArrayStorage;
  sub_100787ABC(a1);
  uint64_t v3 = *(void *)(v2 + 16);
  if (v3)
  {
    uint64_t v4 = v2 + 32;
    do
    {
      sub_1005498A4(v4, (uint64_t)v9);
      uint64_t v5 = v10;
      uint64_t v6 = v11;
      sub_10050F848(v9, v10);
      uint64_t v7 = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 40))(v5, v6);
      sub_1006E1FC0(v7);
      _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v9);
      v4 += 40;
      --v3;
    }
    while (v3);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  return a1;
}

uint64_t sub_100787DE4(double a1)
{
  sub_100787ABC(a1);
  uint64_t v2 = v1;
  uint64_t v3 = *(void *)(v1 + 16);
  if (!v3)
  {
    long long v17 = 0u;
    long long v18 = 0u;
    uint64_t v19 = 0;
    swift_bridgeObjectRelease();
    return sub_1006C99F4((uint64_t)&v17);
  }
  uint64_t result = sub_1005498A4(v1 + 32, (uint64_t)&v14);
  if (v3 == 1)
  {
LABEL_3:
    sub_10053974C(&v14, (uint64_t)&v17);
    swift_bridgeObjectRelease();
    uint64_t v5 = *((void *)&v18 + 1);
    if (*((void *)&v18 + 1))
    {
      uint64_t v6 = v19;
      sub_10050F848(&v17, *((uint64_t *)&v18 + 1));
      (*(void (**)(uint64_t))(*(void *)(v6 + 8) + 40))(v5);
      return _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v17);
    }
    return sub_1006C99F4((uint64_t)&v17);
  }
  uint64_t v7 = v2 + 72;
  unint64_t v8 = 1;
  while (v8 < *(void *)(v2 + 16))
  {
    sub_1005498A4(v7, (uint64_t)&v17);
    uint64_t v10 = v15;
    uint64_t v9 = v16;
    sub_10050F848(&v14, v15);
    double v11 = (*(double (**)(uint64_t))(*(void *)(v9 + 8) + 40))(v10);
    uint64_t v13 = *((void *)&v18 + 1);
    uint64_t v12 = v19;
    sub_10050F848(&v17, *((uint64_t *)&v18 + 1));
    if (v11 >= (*(double (**)(uint64_t))(*(void *)(v12 + 8) + 40))(v13))
    {
      uint64_t result = _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v17);
    }
    else
    {
      _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v14);
      uint64_t result = sub_10053974C(&v17, (uint64_t)&v14);
    }
    ++v8;
    v7 += 40;
    if (v3 == v8) {
      goto LABEL_3;
    }
  }
  __break(1u);
  return result;
}

double sub_100787F88()
{
  return sub_100787D08(*(double *)(v0 + 8));
}

uint64_t sub_100787F94()
{
  return sub_100787DE4(*(double *)(v0 + 8));
}

double sub_100787FA0(uint64_t a1, double a2)
{
  uint64_t v21 = _swiftEmptyArrayStorage;
  uint64_t v3 = *(void *)(a1 + 16);
  if (v3)
  {
    uint64_t v4 = a1 + 32;
    do
    {
      sub_1006C9924(v4, (uint64_t)v20);
      sub_1006C998C((uint64_t)v20, (uint64_t)&v16);
      if (v17)
      {
        sub_10053974C(&v16, (uint64_t)v19);
        sub_10053974C(v19, (uint64_t)&v16);
        uint64_t v5 = v21;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          uint64_t v5 = sub_100F62770(0, *((void *)v5 + 2) + 1, 1, v5);
          uint64_t v21 = v5;
        }
        unint64_t v7 = *((void *)v5 + 2);
        unint64_t v6 = *((void *)v5 + 3);
        if (v7 >= v6 >> 1) {
          uint64_t v21 = sub_100F62770((double *)(v6 > 1), v7 + 1, 1, v5);
        }
        uint64_t v8 = v17;
        uint64_t v9 = v18;
        uint64_t v10 = sub_1005231B4((uint64_t)&v16, v17);
        __n128 v11 = __chkstk_darwin(v10, v10);
        uint64_t v13 = (char *)&v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
        (*(void (**)(char *, __n128))(v14 + 16))(v13, v11);
        sub_100667930(v7, (uint64_t)v13, (uint64_t *)&v21, v8, v9);
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v16);
      }
      else
      {
        sub_1006C99F4((uint64_t)&v16);
      }
      v4 += 40;
      --v3;
    }
    while (v3);
  }
  return a2;
}

ValueMetadata *type metadata accessor for CRLLayerAnimationSequence()
{
  return &type metadata for CRLLayerAnimationSequence;
}

uint64_t sub_100788190()
{
  uint64_t v1 = type metadata accessor for CRLImageItemAssetData(0);
  __chkstk_darwin(v1 - 8, v2);
  uint64_t v4 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for CRLAssetData();
  uint64_t v6 = v5 - 8;
  *(void *)&double v8 = __chkstk_darwin(v5, v7).n128_u64[0];
  uint64_t v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v11 = [v0 imageInfo:v8];
  swift_beginAccess();
  swift_retain();
  sub_1005057FC(&qword_10167F4B0);
  CRRegister.wrappedValue.getter();
  swift_endAccess();
  swift_release();
  sub_10077F98C((uint64_t)v4, (uint64_t)v10);
  sub_10078A878((uint64_t)v4, type metadata accessor for CRLImageItemAssetData);

  uint64_t v12 = *(void *)&v10[*(int *)(v6 + 28)];
  swift_bridgeObjectRetain();
  sub_10078A878((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
  return v12;
}

double sub_1007883B4()
{
  uint64_t v1 = v0;
  id v2 = [v0 imageInfo];
  uint64_t v3 = sub_100A2CEC8();
  id v4 = [self sharedPool];
  id v5 = [v4 providerForAsset:v3 shouldValidate:1];

  [v5 naturalSize];
  double v7 = v6;

  double v8 = (char *)[v1 imageInfo];
  uint64_t v9 = (void *)sub_100A3653C();
  if (v9)
  {
    id v10 = v9;
    id v11 = [v10 geometry];
    uint64_t v12 = *(uint64_t (**)(uint64_t))(**(void **)&v8[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData]
                                            + 288);
    uint64_t v13 = swift_retain();
    uint64_t v14 = (void *)v12(v13);
    swift_release();
    id v15 = [v11 geometryWithParentGeometry:v14];
  }
  else
  {
    long long v16 = *(uint64_t (**)(uint64_t))(**(void **)&v8[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData]
                                            + 288);
    uint64_t v17 = swift_retain();
    id v15 = (id)v16(v17);

    swift_release();
  }
  [v15 size];
  double v19 = v18;

  long long v20 = (char *)[v1 imageInfo];
  uint64_t v21 = *(uint64_t (**)(uint64_t))(**(void **)&v20[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData]
                                          + 288);
  uint64_t v22 = swift_retain();
  uint64_t v23 = (void *)v21(v22);

  swift_release();
  [v23 size];
  double v25 = v24;

  return floor(v7 * (v19 / v25));
}

id sub_10078867C(double a1, double a2, double a3, double a4)
{
  id v5 = v4;
  uint64_t v8 = type metadata accessor for UTType();
  uint64_t v9 = *(void *)(v8 - 8);
  *(void *)&double v11 = __chkstk_darwin(v8, v10).n128_u64[0];
  uint64_t v13 = (char *)&v79 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v14 = [v4 canvas];
  if (!v14) {
    goto LABEL_13;
  }
  id v15 = v14;
  id v16 = [v14 boardItemOwner];

  if (!v16) {
    goto LABEL_13;
  }
  type metadata accessor for CRLBoard(0);
  uint64_t v17 = swift_dynamicCastClass();
  if (!v17)
  {
    swift_unknownObjectRelease();
LABEL_13:
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"makeImage(forRect:)", 19, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/BoardItemPreview/CRLImageRep-PreviewAdditions.swift", 121, 2, 61, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"makeImage(forRect:)", 19, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/BoardItemPreview/CRLImageRep-PreviewAdditions.swift", 121, 2, 61);
    return 0;
  }
  uint64_t v18 = v17;
  id v19 = [v5 interactiveCanvasController];
  long long v20 = v19;
  if (!v19)
  {
    swift_unknownObjectRelease();
    return 0;
  }
  uint64_t v21 = (char *)[v19 editingCoordinator];

  if (!v21)
  {
    swift_unknownObjectRelease();
    return 0;
  }
  id v84 = v16;
  id v22 = *(id *)&v21[OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_boardItemFactory];
  uint64_t v23 = [v5 imageInfo];
  double v24 = (void *)sub_100F3DF34(v23);

  if (!v24)
  {
LABEL_19:
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"makeImage(forRect:)", 19, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/BoardItemPreview/CRLImageRep-PreviewAdditions.swift", 121, 2, 63, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"makeImage(forRect:)", 19, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/BoardItemPreview/CRLImageRep-PreviewAdditions.swift", 121, 2, 63);
    swift_unknownObjectRelease();

    return 0;
  }
  type metadata accessor for CRLImageItem();
  uint64_t v25 = swift_dynamicCastClass();
  if (!v25)
  {

    goto LABEL_19;
  }
  uint64_t v26 = v25;
  id v81 = v21;
  id v27 = v24;
  sub_10088B0DC(0);

  id v28 = v27;
  sub_100BC9500(0);

  objc_super v29 = (void *)sub_100A3653C();
  if (v29)
  {
    id v30 = v29;
    id v31 = [v30 pathSource];
    self;
    uint64_t v32 = (void *)swift_dynamicCastObjCClass();
    if (v32 && ([v32 shouldShowKnob] & 1) == 0)
    {
      id v35 = sub_100A3252C(0.0);
      sub_100A36B4C(v35);

      id v31 = v35;
    }
    else
    {
    }
  }
  id v80 = v28;
  uint64_t v82 = v26;
  uint64_t v83 = v18;
  int64_t v36 = [v5 imageInfo:v9];
  double d = 1.0;
  tCGFloat y = 0.0;
  uint64_t v39 = v36;
  tCGFloat x = 0.0;
  CGFloat c = 0.0;
  CGFloat b = 0.0;
  double a = 1.0;
  while (1)
  {
    uint64_t v44 = *(uint64_t (**)(void))((swift_isaMask & *v36) + 0xE0);
    unint64_t v45 = v36;
    uint64_t v46 = (void *)v44();
    [v46 transform];
    long long v87 = *(_OWORD *)&t1.a;
    long long v86 = *(_OWORD *)&t1.c;
    long long v85 = *(_OWORD *)&t1.tx;

    t1.double a = a;
    t1.CGFloat b = b;
    t1.CGFloat c = c;
    t1.double d = d;
    t1.tCGFloat x = tx;
    t1.tCGFloat y = ty;
    *(_OWORD *)&t2.double a = v87;
    *(_OWORD *)&t2.CGFloat c = v86;
    *(_OWORD *)&t2.tCGFloat x = v85;
    CGAffineTransformConcat(&v88, &t1, &t2);
    double a = v88.a;
    CGFloat b = v88.b;
    CGFloat c = v88.c;
    double d = v88.d;
    tCGFloat x = v88.tx;
    tCGFloat y = v88.ty;
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    if (!Strong) {
      break;
    }
    uint64_t v48 = (void *)Strong;

    type metadata accessor for CRLBoardItem(0);
    int64_t v36 = (void *)swift_dynamicCastClass();
    if (!v36)
    {
      unint64_t v45 = v39;
      goto LABEL_27;
    }
  }

  uint64_t v48 = v45;
LABEL_27:
  uint64_t v49 = v80;

  t1.double a = a;
  t1.CGFloat b = b;
  t1.CGFloat c = c;
  t1.double d = d;
  t1.tCGFloat x = tx;
  t1.tCGFloat y = ty;
  double v50 = -sub_10007F788(&t1);
  *(void *)&long long v87 = v49;
  uint64_t v51 = (char *)[v5 imageInfo];
  char v52 = *(uint64_t (**)(uint64_t))(**(void **)&v51[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData]
                                          + 288);
  uint64_t v53 = swift_retain();
  uint64_t v54 = (void *)v52(v53);

  swift_release();
  [v54 position];
  double v56 = v55;
  double v58 = v57;

  id v59 = (char *)[v5 imageInfo];
  uint64_t v60 = *(uint64_t (**)(uint64_t))(**(void **)&v59[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData]
                                          + 288);
  uint64_t v61 = swift_retain();
  unint64_t v62 = (void *)v60(v61);

  swift_release();
  [v62 size];
  double v64 = v63;
  double v66 = v65;

  id v67 = [objc_allocWithZone((Class)CRLCanvasInfoGeometry) initWithPosition:v56 size:v58 angle:v64];
  uint64_t v68 = v82;
  sub_10088AA40(v67);
  char v69 = (void *)v87;

  id v70 = objc_allocWithZone((Class)CRLCanvasImager);
  id v71 = [v70 initWithBoard:v83];
  sub_1005057FC((uint64_t *)&unk_101676C10);
  uint64_t v72 = swift_allocObject();
  *(_OWORD *)(v72 + 16) = xmmword_101177E70;
  *(void *)(v72 + 32) = v68;
  *(void *)&t1.double a = v72;
  specialized Array._endMutation()();
  id v73 = v69;
  sub_1005057FC(&qword_101673060);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v71 setInfos:isa];

  [v71 setScaledImageSize:a3, a4];
  id v75 = v73;
  id v76 = sub_100A2BFA0();

  if (!v76) {
    goto LABEL_31;
  }
  static UTType.pdf.getter();
  UTType.identifier.getter();
  (*(void (**)(char *, uint64_t))(v79 + 8))(v13, v8);
  NSString v77 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  unsigned int v78 = [v76 hasRepresentationConformingToTypeIdentifier:v77 fileOptions:0];

  if (v78)
  {
    id v33 = [v71 pdfData];
    if (v33)
    {
      static Data._unconditionallyBridgeFromObjectiveC(_:)();

      swift_unknownObjectRelease();
      return 0;
    }
    else
    {

      swift_unknownObjectRelease();
    }
  }
  else
  {
LABEL_31:
    id v33 = [v71 newImage];
    swift_unknownObjectRelease();
  }
  return v33;
}

id sub_100788FD4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v4 = v3;
  uint64_t v176 = a1;
  uint64_t v177 = a3;
  uint64_t v6 = type metadata accessor for CRLImageItemAssetData(0);
  __chkstk_darwin(v6 - 8, v7);
  v170 = (void (*)(char *, uint64_t))((char *)&v155 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = sub_1005057FC((uint64_t *)&unk_10167D2B0);
  __chkstk_darwin(v9 - 8, v10);
  v174 = (CGImage *)((char *)&v155 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v12 = sub_1005057FC(&qword_101672E90);
  __chkstk_darwin(v12 - 8, v13);
  v163 = (char *)&v155 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15, v16);
  v173 = (char *)&v155 - v17;
  __chkstk_darwin(v18, v19);
  uint64_t v171 = (char *)&v155 - v20;
  uint64_t v21 = type metadata accessor for URL();
  uint64_t v175 = *(void **)(v21 - 8);
  __chkstk_darwin(v21, v22);
  double v24 = (char *)&v155 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25, v26);
  id v28 = (char *)&v155 - v27;
  __chkstk_darwin(v29, v30);
  v169 = (char *)&v155 - v31;
  __chkstk_darwin(v32, v33);
  id v35 = (char *)&v155 - v34;
  __chkstk_darwin(v36, v37);
  v167 = (char *)&v155 - v38;
  *(void *)&double v41 = __chkstk_darwin(v39, v40).n128_u64[0];
  unint64_t v43 = (char *)&v155 - v42;
  id v44 = [v3 imageInfo:v41];
  unint64_t v45 = (void *)sub_100A3653C();
  id v178 = v45;

  v161 = v28;
  v162 = v24;
  v168 = v35;
  v165 = v43;
  uint64_t v46 = v21;
  if (v45)
  {
    id v47 = [v4 imageInfo];
    char v48 = sub_100A2F154();
  }
  else
  {
    char v48 = 0;
  }
  uint64_t v49 = (char *)[v4 imageInfo];
  double v50 = *(uint64_t (**)(uint64_t))(**(void **)&v49[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData]
                                          + 288);
  uint64_t v51 = swift_retain();
  char v52 = (void *)v50(v51);

  swift_release();
  [v52 angle];
  double v54 = v53;

  if ((v48 & 1) == 0 && v54 == 0.0)
  {
    id v55 = [v4 imageInfo];
    id v56 = sub_100FA45D8(v176, a2, v177);

    return v56;
  }
  id v58 = objc_allocWithZone((Class)CRLTemporaryDirectory);
  v179[0] = 0;
  id v59 = [v58 initWithError:v179];
  id v60 = v179[0];
  uint64_t v172 = v46;
  if (v59)
  {
    uint64_t v156 = 0;
    id v166 = v59;
  }
  else
  {
    uint64_t v61 = v60;
    _convertNSErrorToError(_:)();

    swift_willThrow();
    swift_errorRelease();
    id v166 = 0;
    uint64_t v156 = 0;
  }
  NSString v62 = String._bridgeToObjectiveC()();
  id v63 = [v62 stringByDeletingPathExtension];

  uint64_t v158 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v177 = v64;

  double v65 = sub_1007883B4();
  uint64_t v68 = (CGImage *)sub_10078867C(v65, v66, v65, v66);
  uint64_t v69 = v67;
  unint64_t v164 = v70;
  unint64_t v157 = v70 >> 60;
  id v159 = v59;
  if (v70 >> 60 == 15)
  {
    if (!v45) {
      goto LABEL_14;
    }
    uint64_t v71 = v67;
    id v72 = v178;
    id v73 = [v72 pathSource];
    unsigned int v74 = [v73 isRectangular];

    if (v74)
    {

      uint64_t v69 = v71;
LABEL_14:
      if (v54 != 0.0)
      {
LABEL_26:
        unint64_t v78 = 0xE300000000000000;
        uint64_t v160 = 6778480;
        goto LABEL_27;
      }
      goto LABEL_19;
    }
    id v75 = [v72 pathSource];
    self;
    id v76 = (void *)swift_dynamicCastObjCClass();
    if (v76)
    {
      unsigned __int8 v77 = [v76 shouldShowKnob];

      unint64_t v78 = 0xE300000000000000;
      if ((v77 & 1) == 0)
      {
        uint64_t v160 = 6778480;
        uint64_t v69 = v71;
        if (v54 != 0.0) {
          goto LABEL_27;
        }
        goto LABEL_19;
      }
    }
    else
    {

      unint64_t v78 = 0xE300000000000000;
    }
    uint64_t v160 = 6778480;
    uint64_t v69 = v71;
    goto LABEL_27;
  }
LABEL_19:
  id v79 = [v4 imageInfo];
  swift_beginAccess();
  swift_retain();
  sub_1005057FC(&qword_10167F4B0);
  uint64_t v80 = (uint64_t)v170;
  CRRegister.wrappedValue.getter();
  swift_endAccess();
  swift_release();
  id v81 = v174;
  sub_10077F98C(v80, (uint64_t)v174);
  sub_10078A878(v80, type metadata accessor for CRLImageItemAssetData);
  uint64_t v82 = type metadata accessor for CRLAssetData();
  uint64_t v83 = *(void *)(v82 - 8);
  (*(void (**)(CGImage *, void, uint64_t, uint64_t))(v83 + 56))(v81, 0, 1, v82);

  if ((*(unsigned int (**)(CGImage *, uint64_t, uint64_t))(v83 + 48))(v81, 1, v82) == 1)
  {
    sub_100522F00((uint64_t)v81, (uint64_t *)&unk_10167D2B0);
    id v84 = v171;
    ((void (*)(char *, uint64_t, uint64_t, uint64_t))v175[7])(v171, 1, 1, v172);
    id v59 = v159;
LABEL_25:
    sub_100522F00((uint64_t)v84, &qword_101672E90);
    goto LABEL_26;
  }
  uint64_t v85 = v69;
  long long v86 = (char *)[v4 imageInfo];
  long long v87 = (char *)*(id *)&v86[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_store];

  uint64_t v88 = *(void *)&v87[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManagerLock];
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v88 + 16));
  uint64_t v89 = OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManager;
  uint64_t v90 = *(void **)&v87[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManager];
  uint64_t v91 = v172;
  if (v90)
  {
    id v92 = *(id *)&v87[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManager];
  }
  else
  {
    id v93 = objc_allocWithZone((Class)type metadata accessor for CRLAssetFileManager());
    uint64_t v94 = v87;
    id v95 = sub_100EAFDE4((uint64_t)v94);

    unint64_t v96 = *(void **)&v87[v89];
    *(void *)&v87[v89] = v95;
    id v92 = v95;

    uint64_t v90 = 0;
  }
  uint64_t v97 = *(os_unfair_lock_s **)(v88 + 16);
  id v98 = v90;
  os_unfair_lock_unlock(v97);
  id v84 = v171;
  int v99 = v174;
  sub_100EA7CA0((uint64_t)v174, 0, 3, 0, 0, v171);

  sub_10078A878((uint64_t)v99, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
  uint64_t v100 = v175;
  int v101 = ((uint64_t (*)(char *, uint64_t, uint64_t))v175[6])(v84, 1, v91);
  uint64_t v69 = v85;
  id v59 = v159;
  if (v101 == 1) {
    goto LABEL_25;
  }
  Swift::String v124 = v165;
  ((void (*)(char *, char *, uint64_t))v100[4])(v165, v84, v91);
  uint64_t v160 = URL.pathExtension.getter();
  unint64_t v78 = v125;
  ((void (*)(char *, uint64_t))v100[1])(v124, v91);
LABEL_27:
  if (!v166)
  {
    Swift::String v111 = (char *)v175[7];
    uint64_t v112 = v172;
    uint64_t v109 = (uint64_t)v173;
    ((void (*)(char *, uint64_t, uint64_t, uint64_t))v111)(v173, 1, 1, v172);
    goto LABEL_31;
  }
  v174 = v68;
  id v102 = [v166 URL];
  char v103 = v169;
  static URL._unconditionallyBridgeFromObjectiveC(_:)();

  unint64_t v104 = v168;
  URL.appendingPathComponent(_:)();
  uint64_t v105 = v172;
  BOOL v106 = v175;
  uint64_t v107 = (void (*)(char *, uint64_t))v175[1];
  v165 = (char *)(v175 + 1);
  v107(v103, v172);
  char v108 = v173;
  URL.appendingPathExtension(_:)();
  uint64_t v109 = (uint64_t)v108;
  v170 = v107;
  v107(v104, v105);
  uint64_t v171 = (char *)v106[7];
  v168 = (char *)(v106 + 7);
  ((void (*)(char *, void, uint64_t, uint64_t))v171)(v108, 0, 1, v105);
  char v110 = (unsigned int (*)(char *, uint64_t, uint64_t))v106[6];
  if (v110(v108, 1, v105) == 1)
  {
    uint64_t v68 = v174;
    Swift::String v111 = v171;
    uint64_t v112 = v105;
LABEL_31:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_100522F00(v109, &qword_101672E90);
    unint64_t v113 = v164;
    if (qword_10166F9C8 != -1) {
      swift_once();
    }
    swift_beginAccess();
    id v114 = (id)static OS_os_log.crlDefault;
    uint64_t v115 = static os_log_type_t.error.getter();
    sub_100BAC898((uint64_t)v114, (uint64_t)&_mh_execute_header, v115, (uint64_t)"unable to make temp file url", 28, 2, (uint64_t)_swiftEmptyArrayStorage);

    sub_100514260(v69, v113);
    uint64_t v116 = v176;
    uint64_t v117 = v112;
    goto LABEL_34;
  }
  uint64_t v155 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v110;
  long long v118 = (char *)v106[4];
  uint64_t v119 = v167;
  uint64_t v120 = v105;
  uint64_t v175 = v106 + 4;
  v173 = v118;
  ((void (*)(char *, char *, uint64_t))v118)(v167, v108, v105);
  if (v157 > 0xE)
  {
    uint64_t v121 = v69;
    uint64_t v122 = 0;
    unint64_t v123 = v164;
    goto LABEL_40;
  }
  unint64_t v123 = v164;
  sub_100510D4C(v69, v164);
  uint64_t v126 = v156;
  Data.write(to:options:)();
  if (v126)
  {
    uint64_t v121 = v69;
    sub_100514260(v69, v123);
    swift_errorRelease();
    uint64_t v122 = 0;
LABEL_40:
    uint64_t v127 = v120;
    unint64_t v128 = v174;
    if (v174) {
      goto LABEL_41;
    }
LABEL_53:
    if (v122)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      Swift::String v130 = 0;
      uint64_t v134 = v176;
      goto LABEL_55;
    }
LABEL_56:
    if (v160 == 6778480 && v78 == 0xE300000000000000)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v134 = v176;
      Swift::String v111 = v171;
    }
    else
    {
      char v136 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if (v136)
      {
        swift_bridgeObjectRelease();
        uint64_t v134 = v176;
        Swift::String v111 = v171;
      }
      else
      {
        uint64_t v134 = v176;
        Swift::String v111 = v171;
        if (v174)
        {
          uint64_t v160 = v121;
          swift_bridgeObjectRelease();
          id v137 = [v166 URL];
          unint64_t v138 = v162;
          static URL._unconditionallyBridgeFromObjectiveC(_:)();

          Swift::String v139 = v169;
          URL.appendingPathComponent(_:)();
          swift_bridgeObjectRelease();
          unint64_t v140 = v170;
          v170(v138, v127);
          uint64_t v141 = (uint64_t)v163;
          URL.appendingPathExtension(_:)();
          v140(v139, v127);
          ((void (*)(uint64_t, void, uint64_t, uint64_t))v111)(v141, 0, 1, v127);
          if (v155(v141, 1, v127) == 1)
          {
            sub_100522F00(v141, &qword_101672E90);
            uint64_t v142 = v160;
            if (qword_10166F9C8 != -1) {
              swift_once();
            }
            swift_beginAccess();
            id v143 = (id)static OS_os_log.crlDefault;
            uint64_t v144 = static os_log_type_t.error.getter();
            sub_100BAC898((uint64_t)v143, (uint64_t)&_mh_execute_header, v144, (uint64_t)"unable to make temp file url for fallback PNG", 45, 2, (uint64_t)_swiftEmptyArrayStorage);

            uint64_t v145 = v142;
            unint64_t v146 = v164;
            goto LABEL_77;
          }
          Swift::String v147 = v161;
          ((void (*)(char *, uint64_t, uint64_t))v173)(v161, v141, v127);
          char v148 = URL.isFileURL.getter();
          uint64_t v121 = v160;
          if (v148) {
            URL.path.getter();
          }
          else {
            URL.absoluteString.getter();
          }
          NSString v149 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease();
          Swift::String v150 = v174;
          id v151 = sub_100459238(v174, v149);

          if (v151)
          {
            static String._unconditionallyBridgeFromObjectiveC(_:)();

            v170(v147, v127);
            Swift::String v130 = v150;
            unint64_t v123 = v164;
            goto LABEL_55;
          }
          v170(v147, v127);
        }
        else
        {
          swift_bridgeObjectRelease();
        }
      }
      unint64_t v123 = v164;
    }
    unint64_t v152 = v123;
    if (qword_10166F9C8 != -1) {
      swift_once();
    }
    swift_beginAccess();
    id v153 = (id)static OS_os_log.crlDefault;
    uint64_t v154 = static os_log_type_t.error.getter();
    sub_100BAC898((uint64_t)v153, (uint64_t)&_mh_execute_header, v154, (uint64_t)"unable to make temp file for caching copy of masked image to temp", 65, 2, (uint64_t)_swiftEmptyArrayStorage);

    uint64_t v145 = v121;
    unint64_t v146 = v152;
LABEL_77:
    sub_100514260(v145, v146);

    v170(v119, v127);
    uint64_t v116 = v134;
    uint64_t v117 = v127;
LABEL_34:
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v111)(v116, 1, 1, v117);
    return 0;
  }
  uint64_t v121 = v69;
  uint64_t v127 = v120;
  if (URL.isFileURL.getter()) {
    URL.path.getter();
  }
  else {
    URL.absoluteString.getter();
  }
  uint64_t v122 = v135;
  sub_100514260(v69, v123);
  unint64_t v128 = v174;
  if (!v174) {
    goto LABEL_53;
  }
LABEL_41:
  uint64_t v129 = v128;
  swift_bridgeObjectRelease();
  Swift::String v130 = v129;
  uint64_t v131 = v127;
  if (URL.isFileURL.getter()) {
    URL.path.getter();
  }
  else {
    URL.absoluteString.getter();
  }
  NSString v132 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v133 = sub_100459238(v130, v132);

  if (!v133)
  {

    uint64_t v127 = v131;
    uint64_t v119 = v167;
    goto LABEL_56;
  }
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  uint64_t v134 = v176;
  uint64_t v127 = v131;
  uint64_t v119 = v167;
LABEL_55:
  URL.init(fileURLWithPath:)();

  swift_bridgeObjectRelease();
  sub_100514260(v121, v123);
  v170(v119, v127);
  ((void (*)(uint64_t, void, uint64_t, uint64_t))v171)(v134, 0, 1, v127);
  return v166;
}

id sub_10078A4F0(void *a1)
{
  uint64_t v3 = sub_1005057FC(&qword_101672E90);
  __chkstk_darwin(v3 - 8, v4);
  uint64_t v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = (uint64_t)&v1[OBJC_IVAR____TtC8Freeform22CRLImageRepPlaceHolder_previewItemURL];
  uint64_t v8 = type metadata accessor for URL();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v7, 1, 1, v8);
  *(void *)&v1[OBJC_IVAR____TtC8Freeform22CRLImageRepPlaceHolder_imageRep] = a1;
  uint64_t v9 = v1;
  id v10 = a1;
  uint64_t v11 = sub_100788190();
  uint64_t v13 = (uint64_t *)&v9[OBJC_IVAR____TtC8Freeform22CRLImageRepPlaceHolder_previewItemTitle];
  *uint64_t v13 = v11;
  v13[1] = v12;
  if (v12) {
    uint64_t v14 = v11;
  }
  else {
    uint64_t v14 = 0x6567616D69;
  }
  if (v12) {
    uint64_t v15 = v12;
  }
  else {
    uint64_t v15 = 0xE500000000000000;
  }
  swift_bridgeObjectRetain();
  id v16 = sub_100788FD4((uint64_t)v6, v14, v15);
  swift_bridgeObjectRelease();
  swift_beginAccess();
  sub_1005C6D24((uint64_t)v6, v7);
  swift_endAccess();

  uint64_t v17 = (objc_class *)type metadata accessor for CRLImageRepPlaceHolder();
  v21.id receiver = v9;
  v21.Class super_class = v17;
  id v18 = [super init];
  if (v16)
  {
    [v16 setAssociatedLifetimeObject:v10];
  }
  sub_100522F00((uint64_t)v6, &qword_101672E90);
  return v18;
}

id sub_10078A6DC()
{
  v2.id receiver = v0;
  v2.Class super_class = (Class)type metadata accessor for CRLImageRepPlaceHolder();
  return [super dealloc];
}

uint64_t sub_10078A77C()
{
  return type metadata accessor for CRLImageRepPlaceHolder();
}

uint64_t type metadata accessor for CRLImageRepPlaceHolder()
{
  uint64_t result = qword_10167F498;
  if (!qword_10167F498) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_10078A7D0()
{
  sub_100757DF8();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t sub_10078A878(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_10078A8D8(uint64_t a1)
{
  uint64_t v36 = type metadata accessor for UUID();
  uint64_t v3 = *(void *)(v36 - 8);
  __chkstk_darwin(v36, v4);
  uint64_t v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v7 = *(void *)(a1 + 16);
  uint64_t v8 = _swiftEmptyArrayStorage;
  if (!v7) {
    return (uint64_t)v8;
  }
  uint64_t v29 = v1;
  uint64_t v39 = _swiftEmptyArrayStorage;
  sub_1006BB544(0, v7, 0);
  uint64_t v8 = v39;
  uint64_t result = sub_100D4F4DC(a1);
  uint64_t v11 = result;
  uint64_t v12 = 0;
  uint64_t v13 = a1 + 64;
  uint64_t v34 = v3 + 32;
  uint64_t v35 = v3;
  uint64_t v28 = a1 + 88;
  int64_t v30 = v7;
  uint64_t v31 = v10;
  uint64_t v32 = a1 + 64;
  uint64_t v33 = a1;
  while ((v11 & 0x8000000000000000) == 0 && v11 < 1 << *(unsigned char *)(a1 + 32))
  {
    if ((*(void *)(v13 + 8 * ((unint64_t)v11 >> 6)) & (1 << v11)) == 0) {
      goto LABEL_25;
    }
    if (*(_DWORD *)(a1 + 36) != v10) {
      goto LABEL_26;
    }
    uint64_t v37 = v12;
    unint64_t v38 = (unint64_t)v11 >> 6;
    uint64_t v16 = *(void *)(*(void *)(*(void *)(a1 + 48) + 8 * v11) + 24);
    uint64_t ObjectType = swift_getObjectType();
    id v18 = *(void (**)(uint64_t, uint64_t))(v16 + 32);
    swift_retain();
    v18(ObjectType, v16);
    swift_release();
    uint64_t v39 = v8;
    unint64_t v20 = *((void *)v8 + 2);
    unint64_t v19 = *((void *)v8 + 3);
    if (v20 >= v19 >> 1)
    {
      sub_1006BB544(v19 > 1, v20 + 1, 1);
      uint64_t v8 = v39;
    }
    *((void *)v8 + 2) = v20 + 1;
    uint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v35 + 32))((unint64_t)v8+ ((*(unsigned __int8 *)(v35 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v35 + 80))+ *(void *)(v35 + 72) * v20, v6, v36);
    a1 = v33;
    int64_t v14 = 1 << *(unsigned char *)(v33 + 32);
    if (v11 >= v14) {
      goto LABEL_27;
    }
    uint64_t v13 = v32;
    unint64_t v21 = v38;
    uint64_t v22 = *(void *)(v32 + 8 * v38);
    if ((v22 & (1 << v11)) == 0) {
      goto LABEL_28;
    }
    LODWORD(v10) = v31;
    if (*(_DWORD *)(v33 + 36) != v31) {
      goto LABEL_29;
    }
    unint64_t v23 = v22 & (-2 << (v11 & 0x3F));
    if (v23)
    {
      int64_t v14 = __clz(__rbit64(v23)) | v11 & 0xFFFFFFFFFFFFFFC0;
      int64_t v15 = v30;
    }
    else
    {
      unint64_t v24 = v38 + 1;
      unint64_t v25 = (unint64_t)(v14 + 63) >> 6;
      int64_t v15 = v30;
      if (v38 + 1 < v25)
      {
        unint64_t v26 = *(void *)(v32 + 8 * v24);
        if (!v26)
        {
          unint64_t v24 = v38 + 2;
          if (v38 + 2 >= v25) {
            goto LABEL_4;
          }
          unint64_t v26 = *(void *)(v32 + 8 * v24);
          if (!v26)
          {
            while (v25 - 3 != v21)
            {
              unint64_t v26 = *(void *)(v28 + 8 * v21++);
              if (v26)
              {
                unint64_t v24 = v21 + 2;
                goto LABEL_17;
              }
            }
            goto LABEL_4;
          }
        }
LABEL_17:
        int64_t v14 = __clz(__rbit64(v26)) + (v24 << 6);
      }
    }
LABEL_4:
    uint64_t v12 = v37 + 1;
    uint64_t v11 = v14;
    if (v37 + 1 == v15) {
      return (uint64_t)v8;
    }
  }
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_10078ABF0(uint64_t a1)
{
  uint64_t v44 = type metadata accessor for UUID();
  uint64_t v3 = *(void *)(v44 - 8);
  __chkstk_darwin(v44, v4);
  unint64_t v43 = (char *)v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v6 = *(void *)(a1 + 16);
  int64_t v7 = _swiftEmptyArrayStorage;
  if (!v6) {
    return (uint64_t)v7;
  }
  v36[1] = v1;
  char v48 = _swiftEmptyArrayStorage;
  sub_1006BB504(0, v6, 0);
  int64_t v7 = v48;
  uint64_t result = sub_100D4F4DC(a1);
  uint64_t v10 = result;
  uint64_t v11 = 0;
  uint64_t v12 = a1 + 64;
  uint64_t v41 = a1;
  uint64_t v42 = (void (**)(char *, uint64_t))(v3 + 8);
  uint64_t v37 = a1 + 80;
  int64_t v38 = v6;
  uint64_t v39 = v9;
  uint64_t v40 = a1 + 64;
  uint64_t v13 = v43;
  while ((v10 & 0x8000000000000000) == 0 && v10 < 1 << *(unsigned char *)(a1 + 32))
  {
    unint64_t v16 = (unint64_t)v10 >> 6;
    if ((*(void *)(v12 + 8 * ((unint64_t)v10 >> 6)) & (1 << v10)) == 0) {
      goto LABEL_23;
    }
    if (*(_DWORD *)(a1 + 36) != v9) {
      goto LABEL_24;
    }
    uint64_t v45 = v11;
    uint64_t v46 = v7;
    uint64_t v17 = *(void *)(*(void *)(a1 + 48) + 8 * v10);
    uint64_t v18 = *(void *)(v17 + 24);
    uint64_t ObjectType = swift_getObjectType();
    unint64_t v20 = *(void (**)(uint64_t, uint64_t))(v18 + 32);
    swift_retain();
    v20(ObjectType, v18);
    uint64_t v21 = UUID.uuidString.getter();
    uint64_t v23 = v22;
    (*v42)(v13, v44);
    long long v47 = *(_OWORD *)(v17 + 16);
    swift_unknownObjectRetain();
    sub_1005057FC(&qword_101672A78);
    uint64_t v24 = String.init<A>(describing:)();
    unint64_t v26 = v25;
    *(void *)&long long v47 = v21;
    *((void *)&v47 + 1) = v23;
    swift_bridgeObjectRetain();
    v27._countAndFlagsBits = v24;
    v27._object = v26;
    String.append(_:)(v27);
    int64_t v7 = v46;
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    long long v28 = v47;
    char v48 = v7;
    unint64_t v30 = *((void *)v7 + 2);
    unint64_t v29 = *((void *)v7 + 3);
    if (v30 >= v29 >> 1)
    {
      uint64_t result = sub_1006BB504(v29 > 1, v30 + 1, 1);
      int64_t v7 = v48;
    }
    *((void *)v7 + 2) = v30 + 1;
    *(_OWORD *)&v7[2 * v30 + 4] = v28;
    a1 = v41;
    int64_t v14 = 1 << *(unsigned char *)(v41 + 32);
    if (v10 >= v14) {
      goto LABEL_25;
    }
    uint64_t v12 = v40;
    uint64_t v31 = *(void *)(v40 + 8 * v16);
    if ((v31 & (1 << v10)) == 0) {
      goto LABEL_26;
    }
    LODWORD(v9) = v39;
    if (*(_DWORD *)(v41 + 36) != v39) {
      goto LABEL_27;
    }
    unint64_t v32 = v31 & (-2 << (v10 & 0x3F));
    if (v32)
    {
      int64_t v14 = __clz(__rbit64(v32)) | v10 & 0xFFFFFFFFFFFFFFC0;
      int64_t v15 = v38;
    }
    else
    {
      unint64_t v33 = v16 + 1;
      unint64_t v34 = (unint64_t)(v14 + 63) >> 6;
      int64_t v15 = v38;
      if (v16 + 1 < v34)
      {
        unint64_t v35 = *(void *)(v40 + 8 * v33);
        if (v35)
        {
LABEL_20:
          int64_t v14 = __clz(__rbit64(v35)) + (v33 << 6);
        }
        else
        {
          while (v34 - 2 != v16)
          {
            unint64_t v35 = *(void *)(v37 + 8 * v16++);
            if (v35)
            {
              unint64_t v33 = v16 + 1;
              goto LABEL_20;
            }
          }
        }
      }
    }
    uint64_t v11 = v45 + 1;
    uint64_t v10 = v14;
    if (v45 + 1 == v15) {
      return (uint64_t)v7;
    }
  }
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

NSString sub_10078AF54()
{
  NSString result = String._bridgeToObjectiveC()();
  qword_10171A7C8 = (uint64_t)result;
  return result;
}

NSString sub_10078AF8C()
{
  NSString result = String._bridgeToObjectiveC()();
  qword_10171A7D0 = (uint64_t)result;
  return result;
}

NSString sub_10078AFC4()
{
  NSString result = String._bridgeToObjectiveC()();
  qword_10171A7D8 = (uint64_t)result;
  return result;
}

NSString sub_10078AFFC()
{
  NSString result = String._bridgeToObjectiveC()();
  qword_10171A7E0 = (uint64_t)result;
  return result;
}

NSString sub_10078B034()
{
  NSString result = String._bridgeToObjectiveC()();
  qword_10171A7E8 = (uint64_t)result;
  return result;
}

NSString sub_10078B06C()
{
  NSString result = String._bridgeToObjectiveC()();
  qword_10171A7F0 = (uint64_t)result;
  return result;
}

NSString sub_10078B0A4()
{
  NSString result = String._bridgeToObjectiveC()();
  qword_10171A7F8 = (uint64_t)result;
  return result;
}

NSString sub_10078B0DC()
{
  NSString result = String._bridgeToObjectiveC()();
  qword_10171A800 = (uint64_t)result;
  return result;
}

NSString sub_10078B114()
{
  NSString result = String._bridgeToObjectiveC()();
  qword_10171A808 = (uint64_t)result;
  return result;
}

id sub_10078B14C(uint64_t a1)
{
  return sub_100711538(a1, &qword_10166F038, (void **)&qword_10171A7C8, &qword_10171A810);
}

id sub_10078B19C(uint64_t a1)
{
  return sub_100711538(a1, &qword_10166F040, (void **)&qword_10171A7D0, &qword_10171A818);
}

id sub_10078B1EC(uint64_t a1)
{
  return sub_100711538(a1, &qword_10166F048, (void **)&qword_10171A7D8, &qword_10171A820);
}

id sub_10078B23C(uint64_t a1)
{
  return sub_100711538(a1, &qword_10166F050, (void **)&qword_10171A7E0, (void **)&qword_10171A828);
}

id sub_10078B28C(uint64_t a1)
{
  return sub_100711538(a1, &qword_10166F058, (void **)&qword_10171A7E8, &qword_10171A830);
}

id sub_10078B2DC(uint64_t a1)
{
  return sub_100711538(a1, &qword_10166F060, (void **)&qword_10171A7F0, &qword_10171A838);
}

id sub_10078B32C(uint64_t a1)
{
  return sub_100711538(a1, &qword_10166F068, (void **)&qword_10171A7F8, &qword_10171A840);
}

id sub_10078B37C(uint64_t a1)
{
  return sub_100711538(a1, &qword_10166F070, (void **)&qword_10171A800, &qword_10171A848);
}

id sub_10078B3CC(uint64_t a1)
{
  return sub_100711538(a1, &qword_10166F078, (void **)&qword_10171A808, &qword_10171A850);
}

id sub_10078B42C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[OBJC_IVAR____TtC8Freeform20CRLCommandController__isExecuting] = 0;
  *(void *)&v3[OBJC_IVAR____TtC8Freeform20CRLCommandController__currentTransactionContext] = 0;
  *(void *)&v3[OBJC_IVAR____TtC8Freeform20CRLCommandController__currentWatermarkTransactionContext] = 0;
  uint64_t v4 = &v3[OBJC_IVAR____TtC8Freeform20CRLCommandController_suspendResumeProvider];
  *uint64_t v4 = 0;
  v4[1] = 0;
  uint64_t v5 = &v3[OBJC_IVAR____TtC8Freeform20CRLCommandController_commandHistory];
  *uint64_t v5 = _swiftEmptyArrayStorage;
  v5[1] = _swiftEmptyArrayStorage;
  *(void *)&v3[OBJC_IVAR____TtC8Freeform20CRLCommandController_openGroupDatas] = _swiftEmptyArrayStorage;
  *(void *)&v3[OBJC_IVAR____TtC8Freeform20CRLCommandController__currentSelectionBehavior] = 0;
  *(void *)&v3[OBJC_IVAR____TtC8Freeform20CRLCommandController__indexOfGroupThatSetCurrentSelectionBehavior] = -1;
  *(void *)&v3[OBJC_IVAR____TtC8Freeform20CRLCommandController_nonUserCommandQueue] = _swiftEmptyArrayStorage;
  v3[OBJC_IVAR____TtC8Freeform20CRLCommandController_hasIncomingSuspensionInPlaceForCurrentTransaction] = 0;
  *(void *)&v3[OBJC_IVAR____TtC8Freeform20CRLCommandController_board] = a1;
  *(void *)&v3[OBJC_IVAR____TtC8Freeform20CRLCommandController_changeNotifier] = a2;
  *(void *)&v3[OBJC_IVAR____TtC8Freeform20CRLCommandController_selectionDispatcher] = a3;
  v7.id receiver = v3;
  v7.Class super_class = (Class)type metadata accessor for CRLCommandController();
  return [super init];
}

uint64_t sub_10078B568()
{
  return swift_deallocClassInstance();
}

uint64_t sub_10078B610()
{
  uint64_t result = sub_10078B6A4();
  if (!v1) {
    return sub_10085521C();
  }
  return result;
}

uint64_t sub_10078B688(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (void *)(v2
                + OBJC_IVAR____TtCC8Freeform20CRLCommandControllerP33_F675CB786BBB78E2B0BD13D7028A0B2032CRLCommandControllerCommandGroup__currentGroupActionString);
  *uint64_t v3 = a1;
  v3[1] = a2;
  return swift_bridgeObjectRelease();
}

uint64_t sub_10078B6A4()
{
  uint64_t v1 = v0;
  sub_1005057FC((uint64_t *)&unk_101676C10);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_101177E70;
  *(void *)(inited + 32) = v0;
  unint64_t v22 = inited;
  specialized Array._endMutation()();
  unint64_t v3 = v22;
  if (v22 >> 62) {
    goto LABEL_55;
  }
  uint64_t v4 = *(void *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t v5 = v1;
  if (v4)
  {
    while (1)
    {
      unint64_t v6 = v3 >> 62;
      if (v3 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v8 = _CocoaArrayWrapper.endIndex.getter();
        uint64_t result = swift_bridgeObjectRelease();
        if (!v8)
        {
          __break(1u);
          return result;
        }
        swift_bridgeObjectRetain();
        uint64_t v1 = (char *)_CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        if (!v1) {
          goto LABEL_51;
        }
      }
      else if (!*(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        __break(1u);
LABEL_51:
        __break(1u);
LABEL_52:
        __break(1u);
        goto LABEL_53;
      }
      if ((v3 & 0xC000000000000001) != 0)
      {
        uint64_t v1 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
        if (v6) {
          goto LABEL_13;
        }
      }
      else
      {
        if (!*(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          goto LABEL_52;
        }
        uint64_t v1 = (char *)*(id *)(v3 + 32);
        if (v6)
        {
LABEL_13:
          swift_bridgeObjectRetain();
          uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
          swift_bridgeObjectRelease();
          goto LABEL_14;
        }
      }
      uint64_t v7 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
LABEL_14:
      if (!v7) {
        goto LABEL_54;
      }
      sub_100F4D248(0, 1);
      if (*(void *)&v1[OBJC_IVAR____TtCC8Freeform20CRLCommandControllerP33_F675CB786BBB78E2B0BD13D7028A0B2032CRLCommandControllerCommandGroup__currentGroupActionString
                        + 8])
      {
        uint64_t v19 = *(void *)&v1[OBJC_IVAR____TtCC8Freeform20CRLCommandControllerP33_F675CB786BBB78E2B0BD13D7028A0B2032CRLCommandControllerCommandGroup__currentGroupActionString];
        swift_bridgeObjectRetain();

        goto LABEL_57;
      }
      unint64_t v3 = (unint64_t)&v1[OBJC_IVAR____TtC8Freeform15CRLCommandGroup_commands];
      swift_beginAccess();
      uint64_t v10 = *(void *)v3;
      if (*(void *)v3 >> 62)
      {
        if (v10 < 0) {
          unint64_t v3 = *(void *)v3;
        }
        else {
          unint64_t v3 = v10 & 0xFFFFFFFFFFFFFF8;
        }
        swift_bridgeObjectRetain();
        uint64_t v11 = _CocoaArrayWrapper.endIndex.getter();
        if (!v11)
        {
LABEL_33:
          swift_bridgeObjectRelease();
          int64_t v15 = _swiftEmptyArrayStorage;
          if (((unint64_t)_swiftEmptyArrayStorage & 0x8000000000000000) != 0) {
            goto LABEL_46;
          }
          goto LABEL_34;
        }
      }
      else
      {
        uint64_t v11 = *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        if (!v11) {
          goto LABEL_33;
        }
      }
      if (v11 < 1)
      {
LABEL_53:
        __break(1u);
LABEL_54:
        __break(1u);
LABEL_55:
        unint64_t v20 = v1;
        swift_bridgeObjectRetain();
        uint64_t v21 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        if (!v21) {
          break;
        }
      }
      else
      {
        for (uint64_t i = 0; i != v11; ++i)
        {
          if ((v10 & 0xC000000000000001) != 0) {
            id v13 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else {
            id v13 = *(id *)(v10 + 8 * i + 32);
          }
          int64_t v14 = v13;
          type metadata accessor for CRLCommandController.CRLCommandControllerCommandGroup();
          if (swift_dynamicCastClass())
          {
            specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
            specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
            specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
            specialized ContiguousArray._endMutation()();
          }
          else
          {
          }
        }
        swift_bridgeObjectRelease();
        int64_t v15 = _swiftEmptyArrayStorage;
        if (((unint64_t)_swiftEmptyArrayStorage & 0x8000000000000000) != 0) {
          goto LABEL_46;
        }
LABEL_34:
        if (((unint64_t)_swiftEmptyArrayStorage & 0x4000000000000000) == 0)
        {
          swift_bridgeObjectRetain();
          dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
          type metadata accessor for CRLCommandController.CRLCommandControllerCommandGroup();
          if (swift_dynamicCastMetatype() || (double v16 = _swiftEmptyArrayStorage[2], v16 == 0.0))
          {
LABEL_36:
            swift_release();
          }
          else
          {
            uint64_t v17 = 0;
            while (swift_dynamicCastClass())
            {
              if (*(void *)&v16 == ++v17) {
                goto LABEL_36;
              }
            }
            swift_release();
            int64_t v15 = (double *)((char *)_swiftEmptyArrayStorage + 1);
          }
          goto LABEL_37;
        }
LABEL_46:
        type metadata accessor for CRLCommandController.CRLCommandControllerCommandGroup();
        swift_bridgeObjectRetain();
        uint64_t v18 = _bridgeCocoaArray<A>(_:)();
        swift_release_n();
        int64_t v15 = (double *)v18;
LABEL_37:
        sub_1006E1A7C((unint64_t)v15);

        unint64_t v3 = v22;
        if (v22 >> 62)
        {
          swift_bridgeObjectRetain();
          uint64_t v1 = (char *)_CocoaArrayWrapper.endIndex.getter();
          swift_bridgeObjectRelease();
          if (!v1)
          {
LABEL_48:
            uint64_t v19 = 0;
            goto LABEL_57;
          }
        }
        else
        {
          uint64_t v1 = *(char **)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10);
          if (!v1) {
            goto LABEL_48;
          }
        }
      }
    }
  }
  uint64_t v19 = 0;
LABEL_57:
  swift_bridgeObjectRelease();
  return v19;
}

uint64_t sub_10078BB3C()
{
  return swift_bridgeObjectRelease();
}

id sub_10078BB50()
{
  return sub_100791B90(0, type metadata accessor for CRLCommandController.CRLCommandControllerCommandGroup);
}

void sub_10078BB80(void *a1)
{
  if (a1)
  {
    unint64_t v3 = (void *)(v1 + OBJC_IVAR____TtC8Freeform20CRLCommandController_openGroupDatas);
    swift_beginAccess();
    if (*v3 >> 62)
    {
      id v9 = a1;
      swift_bridgeObjectRetain();
      uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v4 = *(void *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
      id v5 = a1;
    }
    uint64_t v6 = OBJC_IVAR____TtC8Freeform20CRLCommandController__currentSelectionBehavior;
    uint64_t v7 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform20CRLCommandController__currentSelectionBehavior);
    uint64_t v8 = *(void *)(v1 + OBJC_IVAR____TtC8Freeform20CRLCommandController__indexOfGroupThatSetCurrentSelectionBehavior);
    if (v7)
    {
      if (v4 >= v8)
      {

        return;
      }
    }
    else
    {
      sub_10060E550(v8, -1, (uint64_t)&_mh_execute_header, (uint64_t)"_setSelectionBehaviorIfNecessary(_:)", 36, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandController.swift", 92, 2u, 197);
      uint64_t v7 = *(void **)(v1 + v6);
    }
    *(void *)(v1 + v6) = a1;

    *(void *)(v1 + OBJC_IVAR____TtC8Freeform20CRLCommandController__indexOfGroupThatSetCurrentSelectionBehavior) = v4;
  }
}

BOOL sub_10078BCA0()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform20CRLCommandController__currentSelectionBehavior);
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117E810;
  sub_1005057FC(&qword_10167F6E8);
  id v3 = v1;
  sub_1005057FC(&qword_10167F6F0);
  String.init<A>(describing:)();
  NSString v4 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  *(void *)(inited + 56) = sub_10050BF48(0, (unint64_t *)&qword_101673918);
  *(void *)(inited + 64) = sub_1007973E0();
  *(void *)(inited + 32) = v4;
  if (v1)
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"_validateSelectionBehaviorCleared()", 35, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandController.swift", 92, 2, 221, (uint64_t)"expected equality between two values of type %{public}@", 55, 2u, inited);
    sub_1005598CC(inited, (uint64_t)"_validateSelectionBehaviorCleared()", 35, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandController.swift", 92, 2, 221);
  }
  swift_bridgeObjectRelease();
  return sub_10060E550(*(void *)(v0 + OBJC_IVAR____TtC8Freeform20CRLCommandController__indexOfGroupThatSetCurrentSelectionBehavior), -1, (uint64_t)&_mh_execute_header, (uint64_t)"_validateSelectionBehaviorCleared()", 35, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandController.swift", 92, 2u, 222);
}

void sub_10078BED8(unsigned char *a1, id *a2, void *a3, int a4, int a5)
{
  uint64_t v6 = v5;
  LODWORD(v7) = a5;
  unint64_t v125 = a3;
  uint64_t v11 = type metadata accessor for UUID();
  id v123 = *(id *)(v11 - 8);
  __chkstk_darwin(v11, v12);
  uint64_t v122 = (char *)&v112 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v124 = type metadata accessor for CRLCommandHistoryItem();
  uint64_t v119 = *(void *)(v124 - 8);
  uint64_t v15 = __chkstk_darwin(v124, v14);
  long long v118 = (uint64_t *)((char *)&v112 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v18 = __chkstk_darwin(v15, v17);
  uint64_t v120 = (uint64_t)&v112 - v19;
  uint64_t v21 = __chkstk_darwin(v18, v20);
  uint64_t v115 = (uint64_t)&v112 - v22;
  uint64_t v24 = __chkstk_darwin(v21, v23);
  uint64_t v116 = (uint64_t)&v112 - v25;
  uint64_t v27 = __chkstk_darwin(v24, v26);
  uint64_t v117 = (uint64_t *)((char *)&v112 - v28);
  __chkstk_darwin(v27, v29);
  uint64_t v121 = (id *)((char *)&v112 - v30);
  if (([self isMainThread] & 1) == 0)
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"_enqueue(command:commandType:selectionBehavior:progressivityForEnqueuingClosingGroup:destroyChangesFromClosingGroup:)", 117, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandController.swift", 92, 2, 258, (uint64_t)"This operation must only be performed on the main thread.", 57, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"_enqueue(command:commandType:selectionBehavior:progressivityForEnqueuingClosingGroup:destroyChangesFromClosingGroup:)", 117, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandController.swift", 92, 2, 258);
    [self logFullBacktrace];
  }
  [self fatalAssertOnNilCommand:a1];
  sub_10078BB80(v125);
  uint64_t v31 = (uint64_t *)(v5 + OBJC_IVAR____TtC8Freeform20CRLCommandController_openGroupDatas);
  swift_beginAccess();
  if (!((unint64_t)*v31 >> 62))
  {
    unint64_t v32 = *(unsigned char **)((*v31 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if ((uint64_t)v32 > 0) {
      goto LABEL_5;
    }
LABEL_43:
    double v50 = *(void **)(v5 + OBJC_IVAR____TtC8Freeform20CRLCommandController__currentSelectionBehavior);
    *(void *)(v5 + OBJC_IVAR____TtC8Freeform20CRLCommandController__currentSelectionBehavior) = 0;
    *(void *)(v5 + OBJC_IVAR____TtC8Freeform20CRLCommandController__indexOfGroupThatSetCurrentSelectionBehavior) = -1;
    sub_10078D41C(a1, a2);
    if (*(void *)(v5 + OBJC_IVAR____TtC8Freeform20CRLCommandController__currentTransactionContext))
    {
      if (*(void *)(v5 + OBJC_IVAR____TtC8Freeform20CRLCommandController_suspendResumeProvider))
      {
        swift_unknownObjectRetain();
        sub_1007413DC();
        swift_unknownObjectRelease();
      }
      *(unsigned char *)(v5 + OBJC_IVAR____TtC8Freeform20CRLCommandController_hasIncomingSuspensionInPlaceForCurrentTransaction) = 0;
      uint64_t v51 = sub_100794B58(v50, 0, a4);
      uint64_t v52 = v51;
      if (v7)
      {
        LODWORD(v113) = v7;
        LODWORD(v114) = a2;
        unint64_t v125 = a1;
        if (!v51) {
          goto LABEL_130;
        }
        swift_retain_n();
        id v53 = v50;
        uint64_t v54 = v52;
        id v55 = v122;
        UUID.init()();
        a2 = v121;
        v121[1] = 0;
        double v57 = (void (**)(void, void, uint64_t))v123;
        uint64_t v56 = v124;
        uint64_t v58 = *(int *)(v124 + 32);
        *(id *)((char *)a2 + v58) = 0;
        ((void (**)(char *, char *, uint64_t))v57)[2]((char *)a2 + *(int *)(v56 + 28), v55, v11);
        sub_1005057FC((uint64_t *)&unk_101676C10);
        uint64_t v59 = swift_allocObject();
        *(_OWORD *)(v59 + 16) = xmmword_101177E70;
        *(void *)(v59 + 32) = v54;
        *(void *)&v129[0] = v59;
        specialized Array._endMutation()();
        uint64_t v7 = *(void **)&v129[0];
        id v60 = v55;
        uint64_t v52 = v54;
        ((void (*)(char *, uint64_t))v57[1])(v60, v11);
        *a2 = v7;

        a2[1] = v50;
        a2[2] = 0;
        a2[3] = (id)0xE000000000000000;

        *(id *)((char *)a2 + v58) = 0;
        sub_10078DC8C((unint64_t *)a2, 0);
        swift_release();
        swift_release();
        sub_100797380((uint64_t)a2, (uint64_t (*)(void))type metadata accessor for CRLCommandHistoryItem);
        a1 = v125;
        LOBYTE(a2) = v114;
        LOBYTE(v7) = v113;
      }
      if (!(_BYTE)a2)
      {
        uint64_t v114 = v11;
        if (v52)
        {
          char v61 = (char)v7;
          NSString v62 = &selRef_crlaxPerformCleanupTasksPriorToRemovalFromCanvas;
          if (v61)
          {
            swift_retain();
LABEL_78:
            id v98 = [self v62[351]];
            if (qword_10166F078 != -1) {
              swift_once();
            }
            [v98 postNotificationName:qword_10171A808 object:v6];

            swift_release_n();
            goto LABEL_81;
          }
          unint64_t v125 = v50;
          if (((*(uint64_t (**)(void))((swift_isaMask & *(void *)a1) + 0xA8))() & 1) != 0
            && (id v63 = (unint64_t *)(v5 + OBJC_IVAR____TtC8Freeform20CRLCommandController_commandHistory),
                swift_beginAccess(),
                (uint64_t v64 = *(void *)(*v63 + 16)) != 0))
          {
            unint64_t v65 = (*(unsigned __int8 *)(v119 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v119 + 80);
            uint64_t v66 = *(void *)(v119 + 72);
            uint64_t v67 = v117;
            uint64_t v68 = sub_1007972B4(*v63 + v65 + v66 * (v64 - 1), (uint64_t)v117, (uint64_t (*)(void))type metadata accessor for CRLCommandHistoryItem);
            uint64_t v69 = *(void **)((char *)v67 + *(int *)(v124 + 32));
            if (v69)
            {
              if ((*(uint64_t (**)(uint64_t))((swift_isaMask & *v69) + 0xA8))(v68))
              {
                unint64_t v113 = v65;
                unint64_t v70 = *(uint64_t (**)(void))((swift_isaMask & *(void *)a1) + 0xB0);
                swift_retain();
                uint64_t v71 = v69;
                if (v70())
                {
                  uint64_t v124 = (uint64_t)v71;
                  id v72 = v117;
                  v126[0] = *v117;
                  swift_retain();
                  swift_bridgeObjectRetain();
                  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
                  if (*(void *)((v126[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v126[0] & 0xFFFFFFFFFFFFFF8)
                                                                                        + 0x18) >> 1)
                    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
                  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
                  specialized Array._endMutation()();
                  id v73 = 0;
                  unsigned int v74 = (void *)v72[1];
                  if (v74)
                  {
                    id v75 = a1;
                    uint64_t v76 = v6;
                    if (v125) {
                      id v73 = [v74 commandSelectionBehaviorByCoalescingWithCommandSelectionBehavior:];
                    }
                  }
                  else
                  {
                    id v75 = a1;
                    uint64_t v76 = v6;
                  }
                  unint64_t v99 = v126[0];
                  uint64_t v100 = (uint64_t)v121;
                  sub_1007972B4((uint64_t)v117, (uint64_t)v121, (uint64_t (*)(void))type metadata accessor for CRLCommandHistoryItem);
                  id v123 = v73;
                  id v101 = v75;
                  uint64_t v102 = v116;
                  sub_100F99394(v99, v100, (uint64_t)v101, v73, v116);
                  swift_beginAccess();
                  sub_100BAD960(v100);
                  sub_100797380(v100, (uint64_t (*)(void))type metadata accessor for CRLCommandHistoryItem);
                  sub_1007972B4(v102, v115, (uint64_t (*)(void))type metadata accessor for CRLCommandHistoryItem);
                  unint64_t v103 = *v63;
                  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
                  unint64_t *v63 = v103;
                  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
                  {
                    unint64_t v103 = sub_100F62364(0, *(void *)(v103 + 16) + 1, 1, v103);
                    unint64_t *v63 = v103;
                  }
                  uint64_t v6 = v76;
                  uint64_t v105 = (void *)v124;
                  unint64_t v107 = *(void *)(v103 + 16);
                  unint64_t v106 = *(void *)(v103 + 24);
                  if (v107 >= v106 >> 1)
                  {
                    unint64_t v103 = sub_100F62364(v106 > 1, v107 + 1, 1, v103);
                    unint64_t *v63 = v103;
                  }
                  *(void *)(v103 + 16) = v107 + 1;
                  sub_10079731C(v115, v103 + v113 + v107 * v66);
                  v63[1] = (unint64_t)_swiftEmptyArrayStorage;
                  swift_endAccess();
                  swift_bridgeObjectRelease();
                  NSString v62 = &selRef_crlaxPerformCleanupTasksPriorToRemovalFromCanvas;
                  id v108 = [self defaultCenter];
                  if (qword_10166F098 != -1) {
                    swift_once();
                  }
                  [v108 postNotificationName:qword_10171A828 object:v6];

                  sub_100797380(v116, (uint64_t (*)(void))type metadata accessor for CRLCommandHistoryItem);
                  sub_100797380((uint64_t)v117, (uint64_t (*)(void))type metadata accessor for CRLCommandHistoryItem);
                  goto LABEL_77;
                }
                sub_100797380((uint64_t)v117, (uint64_t (*)(void))type metadata accessor for CRLCommandHistoryItem);
              }
              else
              {
                swift_retain();
                sub_100797380((uint64_t)v117, (uint64_t (*)(void))type metadata accessor for CRLCommandHistoryItem);
              }
            }
            else
            {
              swift_retain();
              sub_100797380((uint64_t)v67, (uint64_t (*)(void))type metadata accessor for CRLCommandHistoryItem);
            }
          }
          else
          {
            swift_retain();
          }
          v126[0] = a1;
          type metadata accessor for CRLCommand();
          unsigned __int8 v77 = a1;
          sub_1005057FC(&qword_10167F6D8);
          if ((swift_dynamicCast() & 1) == 0)
          {
            uint64_t v130 = 0;
            memset(v129, 0, sizeof(v129));
          }
          sub_100522E9C((uint64_t)v129, (uint64_t)v126, &qword_10167F6E0);
          uint64_t v78 = v127;
          uint64_t v121 = v77;
          uint64_t v79 = v52;
          if (v127)
          {
            uint64_t v80 = v128;
            sub_10050F848(v126, v127);
            uint64_t v117 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v80 + 8))(v78, v80);
            uint64_t v116 = v81;
            _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v126);
          }
          else
          {
            sub_100522F00((uint64_t)v126, &qword_10167F6E0);
            uint64_t v117 = 0;
            uint64_t v116 = 0xE000000000000000;
          }
          uint64_t v82 = v125;
          id v83 = v125;
          swift_retain();
          id v84 = v122;
          UUID.init()();
          uint64_t v85 = v120;
          *(void *)(v120 + 8) = 0;
          long long v87 = (void (**)(void, void, void))v123;
          uint64_t v86 = v124;
          uint64_t v88 = *(int *)(v124 + 32);
          *(void *)(v85 + v88) = 0;
          uint64_t v89 = v114;
          ((void (**)(uint64_t, char *, uint64_t))v87)[2](v85 + *(int *)(v86 + 28), v84, v114);
          sub_1005057FC((uint64_t *)&unk_101676C10);
          uint64_t v90 = swift_allocObject();
          *(_OWORD *)(v90 + 16) = xmmword_101177E70;
          uint64_t v124 = v79;
          *(void *)(v90 + 32) = v79;
          v126[0] = v90;
          uint64_t v91 = v121;
          specialized Array._endMutation()();
          uint64_t v92 = v126[0];
          ((void (*)(char *, uint64_t))v87[1])(v84, v89);
          *(void *)uint64_t v85 = v92;

          id v93 = v117;
          *(void *)(v85 + 8) = v82;
          *(void *)(v85 + 16) = v93;
          *(void *)(v85 + 24) = v116;

          *(void *)(v85 + v88) = a1;
          uint64_t v41 = v6 + OBJC_IVAR____TtC8Freeform20CRLCommandController_commandHistory;
          swift_beginAccess();
          uint64_t v31 = v118;
          sub_1007972B4(v85, (uint64_t)v118, (uint64_t (*)(void))type metadata accessor for CRLCommandHistoryItem);
          unint64_t v32 = *(unsigned char **)v41;
          char v94 = swift_isUniquelyReferenced_nonNull_native();
          *(void *)uint64_t v41 = v32;
          if (v94)
          {
LABEL_72:
            unint64_t v96 = *((void *)v32 + 2);
            unint64_t v95 = *((void *)v32 + 3);
            if (v96 >= v95 >> 1)
            {
              unint64_t v32 = (unsigned char *)sub_100F62364(v95 > 1, v96 + 1, 1, (unint64_t)v32);
              *(void *)uint64_t v41 = v32;
            }
            NSString v62 = &selRef_crlaxPerformCleanupTasksPriorToRemovalFromCanvas;
            *((void *)v32 + 2) = v96 + 1;
            sub_10079731C((uint64_t)v31, (uint64_t)&v32[((*(unsigned __int8 *)(v119 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v119 + 80))+ *(void *)(v119 + 72) * v96]);
            *(void *)(v41 + 8) = _swiftEmptyArrayStorage;
            swift_endAccess();
            swift_bridgeObjectRelease();
            id v97 = [self defaultCenter];
            if (qword_10166F098 != -1) {
              swift_once();
            }
            [v97 postNotificationName:qword_10171A828 object:v6];

            sub_100797380(v120, (uint64_t (*)(void))type metadata accessor for CRLCommandHistoryItem);
            sub_100522F00((uint64_t)v129, &qword_10167F6E0);
LABEL_77:
            double v50 = v125;
            goto LABEL_78;
          }
LABEL_127:
          unint64_t v32 = (unsigned char *)sub_100F62364(0, *((void *)v32 + 2) + 1, 1, (unint64_t)v32);
          *(void *)uint64_t v41 = v32;
          goto LABEL_72;
        }
        sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"_enqueue(command:commandType:selectionBehavior:progressivityForEnqueuingClosingGroup:destroyChangesFromClosingGroup:)", 117, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandController.swift", 92, 2, 298, (uint64_t)"Failed to create CRLUndoingAction for user command.", 51, 2u, (uint64_t)_swiftEmptyArrayStorage);
        sub_100586FD4((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Failed to create CRLUndoingAction for user command.");
        uint64_t i = 298;
        goto LABEL_129;
      }

      swift_release();
    }
    else
    {
    }
LABEL_81:
    sub_10078F194();
    return;
  }
  swift_bridgeObjectRetain();
  unint64_t v32 = (unsigned char *)_CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if ((uint64_t)v32 <= 0) {
    goto LABEL_43;
  }
LABEL_5:
  if (v7)
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"_enqueue(command:commandType:selectionBehavior:progressivityForEnqueuingClosingGroup:destroyChangesFromClosingGroup:)", 117, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandController.swift", 92, 2, 334, (uint64_t)"Can't destroy changes for a closing group while a group is still open.", 70, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_100586FD4((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Can't destroy changes for a closing group while a group is still open.");
    uint64_t i = 334;
    goto LABEL_129;
  }
  uint64_t v33 = *v31;
  if (!(_BYTE)a2) {
    goto LABEL_16;
  }
  if ((unint64_t)v33 >> 62) {
    goto LABEL_105;
  }
  unint64_t v34 = *(char **)((v33 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v34)
  {
LABEL_109:
    swift_bridgeObjectRelease();
LABEL_110:
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"_enqueue(command:commandType:selectionBehavior:progressivityForEnqueuingClosingGroup:destroyChangesFromClosingGroup:)", 117, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandController.swift", 92, 2, 339, (uint64_t)"Non user command enqueued while a group was open and simultaneous execution of non user commands wasn't allowed.", 112, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_100586FD4((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Non user command enqueued while a group was open and simultaneous execution of non user commands wasn't allowed.");
    uint64_t i = 339;
    goto LABEL_129;
  }
  while (1)
  {
    unint64_t v35 = v34 - 1;
    if (__OFSUB__(v34, 1))
    {
      __break(1u);
LABEL_112:
      uint64_t v36 = specialized _ArrayBuffer._getElementSlowPath(_:)();
      goto LABEL_14;
    }
    if ((v33 & 0xC000000000000001) != 0) {
      goto LABEL_112;
    }
    if (((unint64_t)v35 & 0x8000000000000000) != 0)
    {
      __break(1u);
LABEL_114:
      __break(1u);
      goto LABEL_115;
    }
    if ((unint64_t)v35 >= *(void *)((v33 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_114;
    }
    uint64_t v36 = *(void *)(v33 + 8 * (void)v35 + 32);
    swift_retain();
LABEL_14:
    swift_bridgeObjectRelease();
    int v37 = *(unsigned __int8 *)(v36 + 16);
    swift_release();
    if (v37 != 3) {
      goto LABEL_110;
    }
    uint64_t v33 = *v31;
LABEL_16:
    if ((unint64_t)v33 >> 62)
    {
      if (v33 < 0) {
        unint64_t v32 = (unsigned char *)v33;
      }
      else {
        unint64_t v32 = (unsigned char *)(v33 & 0xFFFFFFFFFFFFFF8);
      }
      swift_bridgeObjectRetain();
      unint64_t v34 = (char *)_CocoaArrayWrapper.endIndex.getter();
      if (v34) {
        goto LABEL_18;
      }
LABEL_97:
      swift_bridgeObjectRelease();
      sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"_enqueue(command:commandType:selectionBehavior:progressivityForEnqueuingClosingGroup:destroyChangesFromClosingGroup:)", 117, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandController.swift", 92, 2, 344, (uint64_t)"Expected there to be an open group", 34, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_100586FD4((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Expected there to be an open group");
      for (uint64_t i = 344; ; uint64_t i = 287)
      {
LABEL_129:
        sub_1005871AC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"_enqueue(command:commandType:selectionBehavior:progressivityForEnqueuingClosingGroup:destroyChangesFromClosingGroup:)", 117, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandController.swift", 92, 2, i);
        SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v110, v111);
        _assertionFailure(_:_:file:line:flags:)();
        __break(1u);
LABEL_130:
        sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"_enqueue(command:commandType:selectionBehavior:progressivityForEnqueuingClosingGroup:destroyChangesFromClosingGroup:)", 117, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandController.swift", 92, 2, 287, (uint64_t)"Failed to create CRLUndoingAction for destroying changes.", 57, 2u, (uint64_t)_swiftEmptyArrayStorage);
        sub_100586FD4((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Failed to create CRLUndoingAction for destroying changes.");
      }
    }
    unint64_t v34 = *(char **)((v33 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (!v34) {
      goto LABEL_97;
    }
LABEL_18:
    int64_t v38 = v34 - 1;
    if (__OFSUB__(v34, 1))
    {
      __break(1u);
LABEL_99:
      uint64_t v39 = specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_23:
      swift_bridgeObjectRelease();
      unint64_t v34 = (char *)*(id *)(v39 + 24);
      swift_release();
      uint64_t v40 = &v34[OBJC_IVAR____TtC8Freeform15CRLCommandGroup_commands];
      swift_beginAccess();
      unint64_t v32 = a1;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)((*(void *)v40 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)v40 & 0xFFFFFFFFFFFFFF8)
                                                                                   + 0x18) >> 1)
        goto LABEL_101;
      goto LABEL_24;
    }
    if ((v33 & 0xC000000000000001) != 0) {
      goto LABEL_99;
    }
    if (((unint64_t)v38 & 0x8000000000000000) != 0) {
      break;
    }
    if ((unint64_t)v38 < *(void *)((v33 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      uint64_t v39 = *(void *)(v33 + 8 * (void)v38 + 32);
      swift_retain();
      goto LABEL_23;
    }
    __break(1u);
LABEL_105:
    if (v33 < 0) {
      unint64_t v32 = (unsigned char *)v33;
    }
    else {
      unint64_t v32 = (unsigned char *)(v33 & 0xFFFFFFFFFFFFFF8);
    }
    swift_bridgeObjectRetain();
    unint64_t v34 = (char *)_CocoaArrayWrapper.endIndex.getter();
    if (!v34) {
      goto LABEL_109;
    }
  }
  __break(1u);
LABEL_101:
  specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
LABEL_24:
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  swift_endAccess();
  uint64_t v41 = *v31;
  if ((unint64_t)*v31 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v42 = _CocoaArrayWrapper.endIndex.getter();
    if (!v42) {
      goto LABEL_103;
    }
LABEL_26:
    unint64_t v43 = v42 - 1;
    if (!__OFSUB__(v42, 1))
    {
      if ((v41 & 0xC000000000000001) == 0)
      {
        if ((v43 & 0x8000000000000000) != 0)
        {
          __break(1u);
        }
        else if (v43 < *(void *)((v41 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          uint64_t v44 = *(void *)(v41 + 8 * v43 + 32);
          swift_retain();
          goto LABEL_31;
        }
        __break(1u);
        goto LABEL_119;
      }
LABEL_116:
      uint64_t v44 = specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_31:
      swift_bridgeObjectRelease();
      int v45 = *(unsigned __int8 *)(v44 + 16);
      swift_release();
      if ((v45 - 1) >= 3)
      {
LABEL_122:

        return;
      }
      LOBYTE(a4) = (_BYTE)a2;
      a2 = (id *)OBJC_IVAR____TtC8Freeform20CRLCommandController_hasIncomingSuspensionInPlaceForCurrentTransaction;
      if ((*(unsigned char *)(v6
                     + OBJC_IVAR____TtC8Freeform20CRLCommandController_hasIncomingSuspensionInPlaceForCurrentTransaction) & 1) != 0)
      {
LABEL_121:
        sub_10078D41C(v32, a4);
        goto LABEL_122;
      }
      uint64_t v41 = *v31;
      if (!((unint64_t)*v31 >> 62))
      {
        uint64_t v46 = *(void *)((v41 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        if (v46) {
          goto LABEL_35;
        }
LABEL_120:
        swift_bridgeObjectRelease();
        goto LABEL_121;
      }
LABEL_119:
      swift_bridgeObjectRetain();
      uint64_t v46 = _CocoaArrayWrapper.endIndex.getter();
      if (v46)
      {
LABEL_35:
        unint64_t v47 = v46 - 1;
        if (__OFSUB__(v46, 1))
        {
          __break(1u);
        }
        else if ((v41 & 0xC000000000000001) == 0)
        {
          if ((v47 & 0x8000000000000000) != 0)
          {
            __break(1u);
          }
          else if (v47 < *(void *)((v41 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            uint64_t v48 = *(void *)(v41 + 8 * v47 + 32);
            swift_retain();
            goto LABEL_40;
          }
          __break(1u);
          goto LABEL_127;
        }
        uint64_t v48 = specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_40:
        swift_bridgeObjectRelease();
        int v49 = *(unsigned __int8 *)(v48 + 16);
        swift_release();
        if (v49 == 3)
        {
          *((unsigned char *)a2 + v6) = 1;
          sub_10078DAE4((unint64_t)v32, a4);
        }
        goto LABEL_121;
      }
      goto LABEL_120;
    }
LABEL_115:
    __break(1u);
    goto LABEL_116;
  }
  uint64_t v42 = *(void *)((v41 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (v42) {
    goto LABEL_26;
  }
LABEL_103:

  swift_bridgeObjectRelease();
}

void sub_10078D41C(unsigned char *a1, unsigned __int8 a2)
{
  id v3 = v2;
  type metadata accessor for CRLCommandGroup();
  if (!swift_dynamicCastClass() || (uint64_t v6 = a1, v7 = sub_100855AD8(), v6, (v7 & 1) == 0))
  {
    uint64_t v8 = &v3[OBJC_IVAR____TtC8Freeform20CRLCommandController_openGroupDatas];
    swift_beginAccess();
    if (*(void *)v8 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v9 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v9 = *(void *)((*(void *)v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    if (v9 < 1 || a2 == 0) {
      goto LABEL_17;
    }
    unint64_t v11 = *(void *)v8;
    if (v11 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v12 = _CocoaArrayWrapper.endIndex.getter();
      if (v12)
      {
LABEL_11:
        unint64_t v13 = v12 - 1;
        if (__OFSUB__(v12, 1)) {
          goto LABEL_44;
        }
        if ((v11 & 0xC000000000000001) != 0) {
          goto LABEL_45;
        }
        if ((v13 & 0x8000000000000000) != 0)
        {
          __break(1u);
        }
        else if (v13 < *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          uint64_t v14 = *(void *)(v11 + 8 * v13 + 32);
          swift_retain();
          while (1)
          {
            swift_bridgeObjectRelease();
            int v15 = *(unsigned __int8 *)(v14 + 16);
            swift_release();
            if (v15 == 3) {
              break;
            }
LABEL_43:
            id v3 = "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandController.swift";
            sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"_execute(command:commandType:)", 30, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandController.swift", 92, 2, 836, (uint64_t)"Non user command enqueued while a group was open.", 49, 2u, (uint64_t)_swiftEmptyArrayStorage);
            sub_100586FD4((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Non user command enqueued while a group was open.");
            sub_1005871AC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"_execute(command:commandType:)", 30, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandController.swift", 92, 2, 836);
            SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v47, v48);
            _assertionFailure(_:_:file:line:flags:)();
            __break(1u);
LABEL_44:
            __break(1u);
LABEL_45:
            uint64_t v14 = specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
LABEL_17:
          uint64_t v16 = swift_dynamicCastClass();
          if (!v16)
          {
            if (qword_10166FB90 == -1)
            {
LABEL_32:
              swift_beginAccess();
              uint64_t v30 = (void *)static OS_os_log.commandController;
              sub_1005057FC((uint64_t *)&unk_101672B40);
              uint64_t inited = swift_initStackObject();
              *(_OWORD *)(inited + 16) = xmmword_10117E810;
              swift_getObjectType();
              id v32 = v30;
              sub_1005057FC(&qword_10167F698);
              uint64_t v33 = String.init<A>(describing:)();
              uint64_t v35 = v34;
              *(void *)(inited + 56) = &type metadata for String;
              *(void *)(inited + 64) = sub_100528BE4();
              *(void *)(inited + 32) = v33;
              *(void *)(inited + 40) = v35;
              uint64_t v36 = static os_log_type_t.default.getter();
              sub_100BAC898((uint64_t)v32, (uint64_t)&_mh_execute_header, v36, (uint64_t)"About to execute command of class: %{public}@", 45, 2, inited);
              swift_setDeallocating();
              sub_1005057FC(&qword_101672B50);
              swift_arrayDestroy();
LABEL_39:

              char v44 = a1[OBJC_IVAR____TtC8Freeform10CRLCommand_shouldSendChangeNotificationsWhenEnqueuedInProgressiveGroup];
              int v45 = a1;
              uint64_t v46 = v3;
              sub_100794394(a2, v44, (uint64_t)v46, a2, v45, v46);

              return;
            }
LABEL_49:
            swift_once();
            goto LABEL_32;
          }
          uint64_t v17 = (uint64_t *)(v16 + OBJC_IVAR____TtC8Freeform15CRLCommandGroup_commands);
          swift_beginAccess();
          uint64_t v18 = *v17;
          if ((unint64_t)*v17 >> 62)
          {
            int v37 = a1;
            swift_bridgeObjectRetain();
            uint64_t v19 = _CocoaArrayWrapper.endIndex.getter();
            double v50 = a1;
            uint64_t v51 = v3;
            if (v19)
            {
LABEL_20:
              sub_1006BB504(0, v19 & ~(v19 >> 63), 0);
              if ((v19 & 0x8000000000000000) == 0)
              {
                unsigned __int8 v49 = a2;
                uint64_t v21 = 0;
                do
                {
                  if ((v18 & 0xC000000000000001) != 0) {
                    id v22 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
                  }
                  else {
                    id v22 = *(id *)(v18 + 8 * v21 + 32);
                  }
                  uint64_t v23 = v22;
                  swift_getObjectType();
                  sub_1005057FC(&qword_10167F698);
                  uint64_t v24 = String.init<A>(describing:)();
                  uint64_t v26 = v25;

                  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                    sub_1006BB504(0, *(void *)&_swiftEmptyArrayStorage[2] + 1, 1);
                  }
                  double v28 = _swiftEmptyArrayStorage[2];
                  double v27 = _swiftEmptyArrayStorage[3];
                  if (*(void *)&v28 >= *(void *)&v27 >> 1) {
                    sub_1006BB504(*(void *)&v27 > 1uLL, *(void *)&v28 + 1, 1);
                  }
                  ++v21;
                  *(void *)&_swiftEmptyArrayStorage[2] = *(void *)&v28 + 1;
                  uint64_t v29 = &_swiftEmptyArrayStorage[2 * *(void *)&v28];
                  *((void *)v29 + 4) = v24;
                  *((void *)v29 + 5) = v26;
                }
                while (v19 != v21);
                swift_bridgeObjectRelease();
                a2 = v49;
                goto LABEL_36;
              }
              goto LABEL_48;
            }
          }
          else
          {
            uint64_t v19 = *(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10);
            uint64_t v20 = a1;
            swift_bridgeObjectRetain();
            double v50 = a1;
            uint64_t v51 = v3;
            if (v19) {
              goto LABEL_20;
            }
          }
          swift_bridgeObjectRelease();
LABEL_36:
          sub_1005057FC((uint64_t *)&unk_1016773F0);
          sub_10056547C();
          uint64_t v38 = BidirectionalCollection<>.joined(separator:)();
          uint64_t v40 = v39;
          swift_bridgeObjectRelease();
          if (qword_10166FB90 != -1) {
            swift_once();
          }
          swift_beginAccess();
          uint64_t v41 = (void *)static OS_os_log.commandController;
          sub_1005057FC((uint64_t *)&unk_101672B40);
          uint64_t v42 = swift_initStackObject();
          *(_OWORD *)(v42 + 16) = xmmword_10117E810;
          *(void *)(v42 + 56) = &type metadata for String;
          *(void *)(v42 + 64) = sub_100528BE4();
          *(void *)(v42 + 32) = v38;
          *(void *)(v42 + 40) = v40;
          id v32 = v41;
          uint64_t v43 = static os_log_type_t.default.getter();
          sub_100BAC898((uint64_t)v32, (uint64_t)&_mh_execute_header, v43, (uint64_t)"About to execute command group composed of command classes: %{public}@", 70, 2, v42);
          swift_setDeallocating();
          sub_1005057FC(&qword_101672B50);
          swift_arrayDestroy();
          a1 = v50;

          id v3 = v51;
          goto LABEL_39;
        }
        __break(1u);
LABEL_48:
        __break(1u);
        goto LABEL_49;
      }
    }
    else
    {
      uint64_t v12 = *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v12) {
        goto LABEL_11;
      }
    }
    swift_bridgeObjectRelease();
    goto LABEL_43;
  }
}

unint64_t sub_10078DAE4(unint64_t result, char a2)
{
  uint64_t v3 = *(void *)(v2 + OBJC_IVAR____TtC8Freeform20CRLCommandController_suspendResumeProvider);
  if (!v3 || (*(unsigned char *)(v3 + 40) & 1) != 0) {
    return result;
  }
  uint64_t v5 = (void *)result;
  uint64_t v6 = (uint64_t *)(v2 + OBJC_IVAR____TtC8Freeform20CRLCommandController_openGroupDatas);
  swift_beginAccess();
  uint64_t v7 = *v6;
  if (!((unint64_t)*v6 >> 62))
  {
    uint64_t v8 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    if (v8) {
      goto LABEL_5;
    }
LABEL_16:
    swift_unknownObjectRelease();
    return swift_bridgeObjectRelease();
  }
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v8 = _CocoaArrayWrapper.endIndex.getter();
  if (!v8) {
    goto LABEL_16;
  }
LABEL_5:
  uint64_t result = v8 - 1;
  if (__OFSUB__(v8, 1))
  {
    __break(1u);
  }
  else if ((v7 & 0xC000000000000001) == 0)
  {
    if ((result & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (result < *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      uint64_t v9 = *(void *)(v7 + 8 * result + 32);
      swift_retain();
      goto LABEL_10;
    }
    __break(1u);
    return result;
  }
  uint64_t v9 = specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_10:
  swift_bridgeObjectRelease();
  int v10 = *(unsigned __int8 *)(v9 + 16);
  uint64_t v11 = swift_release();
  if (v10 == 3 && !a2)
  {
    if ((*(uint64_t (**)(uint64_t))((swift_isaMask & *v5) + 0x88))(v11))
    {
      sub_100740B84();
      swift_bridgeObjectRelease();
    }
  }
  return swift_unknownObjectRelease();
}

uint64_t sub_10078DC8C(unint64_t *a1, char a2)
{
  if (*(void *)(v2 + OBJC_IVAR____TtC8Freeform20CRLCommandController__currentTransactionContext))
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"_execute(commandHistoryItem:)", 29, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandController.swift", 92, 2, 875, (uint64_t)"Executing an action while a transaction context was already open.", 65, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_100586FD4((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Executing an action while a transaction context was already open.");
    uint64_t v8 = "_execute(commandHistoryItem:)";
    uint64_t v9 = 29;
    uint64_t v10 = 875;
LABEL_9:
    sub_1005871AC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)v8, v9, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandController.swift", 92, 2, v10);
    SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v11, v12);
    uint64_t result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
    return result;
  }
  unint64_t v5 = *a1;
  NSString v4 = (void *)a1[1];
  swift_bridgeObjectRetain();
  sub_100796B44(0, 1, v2, v5);
  swift_bridgeObjectRelease();
  if (a2) {
    int v6 = 2;
  }
  else {
    int v6 = 1;
  }
  uint64_t result = sub_100794B58(v4, v6, 4);
  if (!result)
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"_enqueue(commandHistoryItem:isRedo:)", 36, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandController.swift", 92, 2, 398, (uint64_t)"Failed to create CRLUndoingAction", 33, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_100586FD4((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Failed to create CRLUndoingAction");
    uint64_t v8 = "_enqueue(commandHistoryItem:isRedo:)";
    uint64_t v9 = 36;
    uint64_t v10 = 398;
    goto LABEL_9;
  }
  return result;
}

void sub_10078DE80()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for CRLBoardCRDTData(0);
  __chkstk_darwin(v2 - 8, v3);
  unint64_t v5 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6, v8);
  uint64_t v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  CKRecordID v11 = &v1[OBJC_IVAR____TtC8Freeform20CRLCommandController_openGroupDatas];
  swift_beginAccess();
  unint64_t v12 = *(void *)v11;
  if (v12 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v13 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v13 > 0) {
      goto LABEL_3;
    }
  }
  else if (*(uint64_t *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10) > 0)
  {
LABEL_3:
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"undo()", 6, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandController.swift", 92, 2, 407, (uint64_t)"Should not call undo() while a command group is already open.", 61, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"undo()", 6, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandController.swift", 92, 2, 407);
    return;
  }
  id v29 = self;
  id v14 = [v29 defaultCenter];
  if (qword_10166F058 != -1) {
    swift_once();
  }
  uint64_t v15 = v7;
  [v14 postNotificationName:qword_10171A7E8 object:v1];
  if (qword_10166FBD0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v16 = (void *)static OS_os_log.boardItemLifecycle;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117E810;
  uint64_t v18 = *(void *)(*(void *)&v1[OBJC_IVAR____TtC8Freeform20CRLCommandController_board]
                  + OBJC_IVAR____TtC8Freeform8CRLBoard_data)
      + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
  swift_beginAccess();
  sub_1007972B4(v18, (uint64_t)v5, type metadata accessor for CRLBoardCRDTData);
  id v19 = v16;
  swift_retain();
  sub_1005057FC(&qword_101674550);
  CRRegister.wrappedValue.getter();
  sub_100797380((uint64_t)v5, type metadata accessor for CRLBoardCRDTData);
  swift_release();
  uint64_t v20 = UUID.uuidString.getter();
  uint64_t v22 = v21;
  (*(void (**)(char *, uint64_t))(v15 + 8))(v10, v6);
  *(void *)(inited + 56) = &type metadata for String;
  *(void *)(inited + 64) = sub_100528BE4();
  *(void *)(inited + 32) = v20;
  *(void *)(inited + 40) = v22;
  uint64_t v23 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v19, (uint64_t)&_mh_execute_header, v23, (uint64_t)"⬅️ Perform undo(). Board: %{public}@", 40, 0, inited);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  uint64_t v24 = (uint64_t)&v1[OBJC_IVAR____TtC8Freeform20CRLCommandController_commandHistory];
  swift_beginAccess();
  uint64_t v25 = v1;
  sub_100BADB08(v24, (unint64_t)v25);
  swift_endAccess();

  id v26 = [v29 defaultCenter];
  if (qword_10166F098 != -1) {
    swift_once();
  }
  [v26 postNotificationName:qword_10171A828 object:v25];

  if (qword_10166F060 != -1) {
    swift_once();
  }
  id v27 = v28;
  [v28 postNotificationName:qword_10171A7F0 object:v25];
}

void sub_10078E40C()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for CRLBoardCRDTData(0);
  __chkstk_darwin(v2 - 8, v3);
  unint64_t v5 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6, v8);
  uint64_t v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  CKRecordID v11 = &v1[OBJC_IVAR____TtC8Freeform20CRLCommandController_openGroupDatas];
  swift_beginAccess();
  unint64_t v12 = *(void *)v11;
  if (v12 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v13 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v13 > 0) {
      goto LABEL_3;
    }
  }
  else if (*(uint64_t *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10) > 0)
  {
LABEL_3:
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"redo()", 6, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandController.swift", 92, 2, 426, (uint64_t)"Should not call redo() while a command group is already open.", 61, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"redo()", 6, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandController.swift", 92, 2, 426);
    return;
  }
  id v29 = self;
  id v14 = [v29 defaultCenter];
  if (qword_10166F068 != -1) {
    swift_once();
  }
  uint64_t v15 = v7;
  [v14 postNotificationName:qword_10171A7F8 object:v1];
  if (qword_10166FBD0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v16 = (void *)static OS_os_log.boardItemLifecycle;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117E810;
  uint64_t v18 = *(void *)(*(void *)&v1[OBJC_IVAR____TtC8Freeform20CRLCommandController_board]
                  + OBJC_IVAR____TtC8Freeform8CRLBoard_data)
      + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
  swift_beginAccess();
  sub_1007972B4(v18, (uint64_t)v5, type metadata accessor for CRLBoardCRDTData);
  id v19 = v16;
  swift_retain();
  sub_1005057FC(&qword_101674550);
  CRRegister.wrappedValue.getter();
  sub_100797380((uint64_t)v5, type metadata accessor for CRLBoardCRDTData);
  swift_release();
  uint64_t v20 = UUID.uuidString.getter();
  uint64_t v22 = v21;
  (*(void (**)(char *, uint64_t))(v15 + 8))(v10, v6);
  *(void *)(inited + 56) = &type metadata for String;
  *(void *)(inited + 64) = sub_100528BE4();
  *(void *)(inited + 32) = v20;
  *(void *)(inited + 40) = v22;
  uint64_t v23 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v19, (uint64_t)&_mh_execute_header, v23, (uint64_t)"➡️ Perform redo(). Board: %{public}@", 40, 0, inited);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  uint64_t v24 = (unint64_t *)&v1[OBJC_IVAR____TtC8Freeform20CRLCommandController_commandHistory];
  swift_beginAccess();
  uint64_t v25 = v1;
  sub_100BADF6C(v24, (unint64_t)v25);
  swift_endAccess();

  id v26 = [v29 defaultCenter];
  if (qword_10166F098 != -1) {
    swift_once();
  }
  [v26 postNotificationName:qword_10171A828 object:v25];

  if (qword_10166F070 != -1) {
    swift_once();
  }
  id v27 = v28;
  [v28 postNotificationName:qword_10171A800 object:v25];
}

BOOL sub_10078E9CC()
{
  uint64_t v1 = *(void **)(*(void *)(*(void *)(v0 + OBJC_IVAR____TtC8Freeform20CRLCommandController_board)
                            + OBJC_IVAR____TtC8Freeform8CRLBoard_shareState)
                + 16);
  if (!v1) {
    goto LABEL_4;
  }
  swift_retain();
  id v2 = v1;
  id v3 = [v2 currentUserParticipant];
  if (v3)
  {
    uint64_t v4 = v3;
    id v5 = [v3 permission];
    swift_release();

    if (v5 == (id)3)
    {
LABEL_4:
      uint64_t v6 = v0 + OBJC_IVAR____TtC8Freeform20CRLCommandController_commandHistory;
      swift_beginAccess();
      return *(void *)(*(void *)v6 + 16) != 0;
    }
  }
  else
  {
    id v8 = [v2 publicPermission];
    swift_release();

    if (v8 == (id)3) {
      goto LABEL_4;
    }
  }
  return 0;
}

BOOL sub_10078EB0C()
{
  uint64_t v1 = *(void **)(*(void *)(*(void *)(v0 + OBJC_IVAR____TtC8Freeform20CRLCommandController_board)
                            + OBJC_IVAR____TtC8Freeform8CRLBoard_shareState)
                + 16);
  if (!v1) {
    goto LABEL_4;
  }
  swift_retain();
  id v2 = v1;
  id v3 = [v2 currentUserParticipant];
  if (v3)
  {
    uint64_t v4 = v3;
    id v5 = [v3 permission];
    swift_release();

    if (v5 == (id)3)
    {
LABEL_4:
      uint64_t v6 = v0 + OBJC_IVAR____TtC8Freeform20CRLCommandController_commandHistory;
      swift_beginAccess();
      return *(void *)(*(void *)(v6 + 8) + 16) != 0;
    }
  }
  else
  {
    id v8 = [v2 publicPermission];
    swift_release();

    if (v8 == (id)3) {
      goto LABEL_4;
    }
  }
  return 0;
}

uint64_t sub_10078EC4C()
{
  uint64_t v1 = *(void **)(*(void *)(*(void *)(v0 + OBJC_IVAR____TtC8Freeform20CRLCommandController_board)
                            + OBJC_IVAR____TtC8Freeform8CRLBoard_shareState)
                + 16);
  if (!v1) {
    goto LABEL_4;
  }
  swift_retain();
  id v2 = v1;
  id v3 = [v2 currentUserParticipant];
  if (v3)
  {
    uint64_t v4 = v3;
    id v5 = [v3 permission];
    swift_release();

    if (v5 == (id)3)
    {
LABEL_4:
      uint64_t v6 = v0 + OBJC_IVAR____TtC8Freeform20CRLCommandController_commandHistory;
      swift_beginAccess();
      return *(void *)(*(void *)v6 + 16);
    }
  }
  else
  {
    id v8 = [v2 publicPermission];
    swift_release();

    if (v8 == (id)3) {
      goto LABEL_4;
    }
  }
  return 0;
}

uint64_t sub_10078ED84()
{
  uint64_t v1 = *(void **)(*(void *)(*(void *)(v0 + OBJC_IVAR____TtC8Freeform20CRLCommandController_board)
                            + OBJC_IVAR____TtC8Freeform8CRLBoard_shareState)
                + 16);
  if (!v1) {
    goto LABEL_4;
  }
  swift_retain();
  id v2 = v1;
  id v3 = [v2 currentUserParticipant];
  if (v3)
  {
    uint64_t v4 = v3;
    id v5 = [v3 permission];
    swift_release();

    if (v5 == (id)3)
    {
LABEL_4:
      uint64_t v6 = v0 + OBJC_IVAR____TtC8Freeform20CRLCommandController_commandHistory;
      swift_beginAccess();
      return *(void *)(*(void *)(v6 + 8) + 16);
    }
  }
  else
  {
    id v8 = [v2 publicPermission];
    swift_release();

    if (v8 == (id)3) {
      goto LABEL_4;
    }
  }
  return 0;
}

void sub_10078F194()
{
  uint64_t v1 = v0;
  id v2 = (uint64_t *)(v0 + OBJC_IVAR____TtC8Freeform20CRLCommandController_nonUserCommandQueue);
  swift_beginAccess();
  if (!*(void *)(*v2 + 16)) {
    return;
  }
  id v3 = (unint64_t *)(v1 + OBJC_IVAR____TtC8Freeform20CRLCommandController_openGroupDatas);
  swift_beginAccess();
  unint64_t v4 = *v3;
  if (v4 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v8 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v8 >= 1) {
      goto LABEL_4;
    }
LABEL_6:
    swift_beginAccess();
    uint64_t v5 = *v2;
    if (*(void *)(*v2 + 16))
    {
      uint64_t v6 = *(unsigned __int8 *)(v5 + 40);
      id v7 = *(id *)(v5 + 32);
      sub_100F4CDB4(0, 1);
      swift_endAccess();
      sub_10078BED8(v7, v6, 0, 4, 0);
    }
    else
    {
      __break(1u);
    }
    return;
  }
  if (*(uint64_t *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10) < 1) {
    goto LABEL_6;
  }
LABEL_4:
  if (!*(void *)(*v2 + 16) || !*(unsigned char *)(*v2 + 40)) {
    goto LABEL_6;
  }
}

unint64_t sub_10078F42C()
{
  uint64_t v1 = (unint64_t *)(v0 + OBJC_IVAR____TtC8Freeform20CRLCommandController_openGroupDatas);
  swift_beginAccess();
  unint64_t v2 = *v1;
  if (!(v2 >> 62))
  {
    uint64_t v3 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v3) {
      goto LABEL_3;
    }
LABEL_12:
    swift_bridgeObjectRelease();
    return 0;
  }
  swift_bridgeObjectRetain();
  uint64_t v3 = _CocoaArrayWrapper.endIndex.getter();
  if (!v3) {
    goto LABEL_12;
  }
LABEL_3:
  unint64_t result = v3 - 1;
  if (__OFSUB__(v3, 1))
  {
    __break(1u);
    goto LABEL_15;
  }
  if ((v2 & 0xC000000000000001) != 0)
  {
LABEL_15:
    uint64_t v5 = specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_8;
  }
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (result < *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    uint64_t v5 = *(void *)(v2 + 8 * result + 32);
    swift_retain();
LABEL_8:
    swift_bridgeObjectRelease();
    id v6 = *(id *)(v5 + 24);
    swift_release();
    uint64_t v7 = sub_10078B6A4();
    if (!v8) {
      uint64_t v7 = sub_10085521C();
    }
    uint64_t v9 = v7;

    return v9;
  }
  __break(1u);
  return result;
}

unint64_t sub_10078F5CC(uint64_t a1, double *a2)
{
  uint64_t v5 = (unint64_t *)(v2 + OBJC_IVAR____TtC8Freeform20CRLCommandController_openGroupDatas);
  swift_beginAccess();
  if (!(*v5 >> 62))
  {
    if (*(uint64_t *)((*v5 & 0xFFFFFFFFFFFFFF8) + 0x10) >= 1) {
      goto LABEL_3;
    }
LABEL_12:
    a2 = _swiftEmptyArrayStorage;
    a1 = 59;
    unint64_t v6 = (unint64_t)"currentGroupActionString";
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"currentGroupActionString", 24, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandController.swift", 92, 2, 574, (uint64_t)"Tried to set currentGroupActionString when no group is open", 59, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_100586FD4((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Tried to set currentGroupActionString when no group is open");
    sub_1005871AC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"currentGroupActionString", 24, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandController.swift", 92, 2, 574);
    SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v13, v14);
    _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
    goto LABEL_13;
  }
  swift_bridgeObjectRetain();
  uint64_t v12 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (v12 < 1) {
    goto LABEL_12;
  }
LABEL_3:
  unint64_t v6 = *v5;
  if (!(v6 >> 62))
  {
    uint64_t v7 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v7) {
      goto LABEL_5;
    }
LABEL_14:
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
LABEL_13:
  swift_bridgeObjectRetain();
  uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
  if (!v7) {
    goto LABEL_14;
  }
LABEL_5:
  unint64_t result = v7 - 1;
  if (__OFSUB__(v7, 1))
  {
    __break(1u);
    goto LABEL_17;
  }
  if ((v6 & 0xC000000000000001) != 0)
  {
LABEL_17:
    uint64_t v9 = specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_10;
  }
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (result < *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    uint64_t v9 = *(void *)(v6 + 8 * result + 32);
    swift_retain();
LABEL_10:
    swift_bridgeObjectRelease();
    uint64_t v10 = (char *)*(id *)(v9 + 24);
    swift_release();
    CKRecordID v11 = (uint64_t *)&v10[OBJC_IVAR____TtCC8Freeform20CRLCommandControllerP33_F675CB786BBB78E2B0BD13D7028A0B2032CRLCommandControllerCommandGroup__currentGroupActionString];
    *CKRecordID v11 = a1;
    v11[1] = (uint64_t)a2;

    return swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

void sub_10078F988(void *a1)
{
  uint64_t v2 = v1;
  sub_10078BB80(a1);
  type metadata accessor for CRLCommandController.CommandGroupData();
  uint64_t v3 = swift_allocObject();
  *(unsigned char *)(v3 + 16) = 0;
  *(void *)(v3 + 24) = [objc_allocWithZone((Class)type metadata accessor for CRLCommandController.CRLCommandControllerCommandGroup()) init];
  *(unsigned char *)(v3 + 32) = 0;
  unint64_t v4 = (unint64_t *)(v1 + OBJC_IVAR____TtC8Freeform20CRLCommandController_openGroupDatas);
  swift_beginAccess();
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  swift_endAccess();
  unint64_t v5 = *v4;
  if (v5 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v7 > 1) {
      return;
    }
  }
  else if (*(uint64_t *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10) > 1)
  {
    return;
  }
  id v6 = [self defaultCenter];
  if (qword_10166F038 != -1) {
    swift_once();
  }
  [v6 postNotificationName:qword_10171A7C8 object:v2];
}

void sub_10078FB90(char *a1)
{
  uint64_t v3 = v1;
  unint64_t v5 = (char *)v1 + OBJC_IVAR____TtC8Freeform20CRLCommandController_openGroupDatas;
  swift_beginAccess();
  if (!(*(void *)v5 >> 62))
  {
    if (*(uint64_t *)((*(void *)v5 & 0xFFFFFFFFFFFFFF8) + 0x10) >= 1) {
      goto LABEL_3;
    }
LABEL_20:
    uint64_t v3 = _swiftEmptyArrayStorage;
    uint64_t v2 = 28;
    unint64_t v5 = "closeGroup(withSelectionBehavior:)";
    a1 = "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandController.swift";
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"closeGroup(withSelectionBehavior:)", 34, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandController.swift", 92, 2, 616, (uint64_t)"Mismatched open/close group.", 28, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_100586FD4((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Mismatched open/close group.");
    LOBYTE(v23) = 2;
    sub_1005871AC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"closeGroup(withSelectionBehavior:)", 34, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandController.swift", 92, 2, 616);
    SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v15, v16);
    uint64_t v22 = 0;
    uint64_t v21 = 348;
    _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
LABEL_21:
    swift_bridgeObjectRetain();
    uint64_t v17 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v17 > 1) {
      goto LABEL_8;
    }
    goto LABEL_5;
  }
  swift_bridgeObjectRetain();
  uint64_t v14 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (v14 < 1) {
    goto LABEL_20;
  }
LABEL_3:
  if (*(void *)v5 >> 62) {
    goto LABEL_21;
  }
  if (*(uint64_t *)((*(void *)v5 & 0xFFFFFFFFFFFFFF8) + 0x10) > 1) {
    goto LABEL_8;
  }
LABEL_5:
  id v6 = [self defaultCenter];
  if (qword_10166F040 != -1) {
    swift_once();
  }
  [v6 postNotificationName:qword_10171A7D0 object:v3 userInfo:v21];

LABEL_8:
  swift_beginAccess();
  if (!(*(void *)v5 >> 62))
  {
    if (*(void *)((*(void *)v5 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_10;
    }
LABEL_24:
    __break(1u);
LABEL_25:
    swift_bridgeObjectRetain();
    uint64_t v19 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v19) {
      goto LABEL_18;
    }
LABEL_16:
    unint64_t v8 = (unint64_t)[self defaultCenter];
    if (qword_10166F048 == -1)
    {
LABEL_17:
      [v8 postNotificationName:qword_10171A7D8 object:v3 userInfo:v21];

      goto LABEL_18;
    }
LABEL_30:
    swift_once();
    goto LABEL_17;
  }
  swift_bridgeObjectRetain();
  uint64_t v18 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (!v18) {
    goto LABEL_24;
  }
LABEL_10:
  uint64_t v7 = sub_100DFA4B4();
  if (v7) {
    goto LABEL_14;
  }
  unint64_t v8 = *(void *)v5;
  if (*(void *)v5 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v20 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    unint64_t v10 = v20 - 1;
    if (!__OFSUB__(v20, 1)) {
      goto LABEL_13;
    }
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  uint64_t v9 = *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
  unint64_t v10 = v9 - 1;
  if (__OFSUB__(v9, 1)) {
    goto LABEL_29;
  }
LABEL_13:
  uint64_t v7 = sub_100E86CFC(v10);
LABEL_14:
  uint64_t v11 = v7;
  swift_endAccess();
  int v12 = *(unsigned __int8 *)(v11 + 32);
  int v13 = *(unsigned __int8 *)(v11 + 16);
  uint64_t v2 = (uint64_t)*(id *)(v11 + 24);
  sub_10078BED8((unsigned char *)v2, 0, a1, v13, v12);
  if (*(void *)v5 >> 62) {
    goto LABEL_25;
  }
  if (!*(void *)((*(void *)v5 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    goto LABEL_16;
  }
LABEL_18:
  swift_release();
}

uint64_t sub_100790004()
{
  if (([self isMainThread] & 1) == 0)
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"destroyOutermostCommandGroupOnClose()", 37, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandController.swift", 92, 2, 641, (uint64_t)"This operation must only be performed on the main thread.", 57, 2u, (uint64_t)_swiftEmptyArrayStorage);
    LOBYTE(v9) = 2;
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"destroyOutermostCommandGroupOnClose()", 37, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandController.swift", 92, 2, 641);
    [self logFullBacktrace:@"This operation must only be performed on the main thread." 57 v9];
  }
  uint64_t v1 = (unint64_t *)(v0 + OBJC_IVAR____TtC8Freeform20CRLCommandController_openGroupDatas);
  swift_beginAccess();
  unint64_t v2 = *v1;
  if (v2 >> 62)
  {
    swift_bridgeObjectRetain();
    if (_CocoaArrayWrapper.endIndex.getter())
    {
LABEL_5:
      if ((v2 & 0xC000000000000001) != 0)
      {
        uint64_t v4 = specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        if (!*(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
LABEL_14:
          sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"destroyOutermostCommandGroupOnClose()", 37, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandController.swift", 92, 2, 648, (uint64_t)"Can not call destroyOutermostCommandGroupOnClose() more than once on the same group.", 84, 2u, (uint64_t)_swiftEmptyArrayStorage);
          sub_100586FD4((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Can not call destroyOutermostCommandGroupOnClose() more than once on the same group.");
          uint64_t v6 = 648;
          goto LABEL_15;
        }
        uint64_t v4 = *(void *)(v2 + 32);
        swift_retain();
      }
      swift_bridgeObjectRelease();
      if ((*(unsigned char *)(v4 + 32) & 1) == 0)
      {
        *(unsigned char *)(v4 + 32) = 1;
        return swift_release();
      }
      goto LABEL_14;
    }
  }
  else
  {
    uint64_t v3 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v3) {
      goto LABEL_5;
    }
  }
  swift_bridgeObjectRelease();
  sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"destroyOutermostCommandGroupOnClose()", 37, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandController.swift", 92, 2, 644, (uint64_t)"Can not call destroyOutermostCommandGroupOnClose() without an open command group.", 81, 2u, (uint64_t)_swiftEmptyArrayStorage);
  sub_100586FD4((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Can not call destroyOutermostCommandGroupOnClose() without an open command group.");
  uint64_t v6 = 644;
LABEL_15:
  sub_1005871AC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"destroyOutermostCommandGroupOnClose()", 37, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandController.swift", 92, 2, v6);
  SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v7, v8);
  uint64_t result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100790370()
{
  unint64_t v1 = v0 + OBJC_IVAR____TtC8Freeform20CRLCommandController_openGroupDatas;
  swift_beginAccess();
  unint64_t v2 = *(void *)v1;
  if (!(*(void *)v1 >> 62))
  {
    uint64_t v3 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v3) {
      goto LABEL_3;
    }
LABEL_20:
    swift_bridgeObjectRelease();
    unint64_t v1 = (unint64_t)"enableProgressiveEnqueuingInCurrentGroup()";
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"enableProgressiveEnqueuingInCurrentGroup()", 42, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandController.swift", 92, 2, 680, (uint64_t)"enableProgressiveEnqueuingInCurrentGroup() called without a group being open.", 77, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_100586FD4((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"enableProgressiveEnqueuingInCurrentGroup() called without a group being open.");
    sub_1005871AC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"enableProgressiveEnqueuingInCurrentGroup()", 42, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandController.swift", 92, 2, 680);
    SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v11, v12);
    _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
    goto LABEL_21;
  }
  swift_bridgeObjectRetain();
  uint64_t v3 = _CocoaArrayWrapper.endIndex.getter();
  if (!v3) {
    goto LABEL_20;
  }
LABEL_3:
  unint64_t v4 = v3 - 1;
  if (__OFSUB__(v3, 1))
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  if ((v2 & 0xC000000000000001) != 0)
  {
LABEL_22:
    uint64_t v3 = specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_8;
  }
  if ((v4 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_24;
  }
  if (v4 >= *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  uint64_t v3 = *(void *)(v2 + 8 * v4 + 32);
  swift_retain();
LABEL_8:
  swift_bridgeObjectRelease();
  int v5 = *(unsigned __int8 *)(v3 + 16);
  if (v5 == 3 || v5 == 2 || v5 == 1) {
    return swift_release();
  }
  unint64_t v1 = *(void *)v1;
  if (!(v1 >> 62))
  {
    uint64_t v6 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain_n();
    if (v6) {
      goto LABEL_13;
    }
LABEL_26:
    swift_bridgeObjectRelease_n();
    *(unsigned char *)(v3 + 16) = 1;
    return swift_release();
  }
LABEL_25:
  swift_bridgeObjectRetain_n();
  uint64_t result = _CocoaArrayWrapper.endIndex.getter();
  uint64_t v6 = result;
  if (!result) {
    goto LABEL_26;
  }
LABEL_13:
  if (v6 >= 1)
  {
    uint64_t v8 = 0;
    do
    {
      if ((v1 & 0xC000000000000001) != 0)
      {
        uint64_t v9 = specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        uint64_t v9 = *(void *)(v1 + 8 * v8 + 32);
        swift_retain();
      }
      ++v8;
      unint64_t v10 = *(id *)(v9 + 24);
      sub_10078D41C(v10, 0);
      swift_release();
    }
    while (v6 != v8);
    goto LABEL_26;
  }
  __break(1u);
  return result;
}

unint64_t sub_1007906B0()
{
  unint64_t v1 = (unint64_t *)(v0 + OBJC_IVAR____TtC8Freeform20CRLCommandController_openGroupDatas);
  swift_beginAccess();
  unint64_t v2 = *v1;
  if (!(v2 >> 62))
  {
    uint64_t v3 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v3) {
      goto LABEL_3;
    }
LABEL_10:
    swift_bridgeObjectRelease();
    return 0;
  }
  swift_bridgeObjectRetain();
  uint64_t v3 = _CocoaArrayWrapper.endIndex.getter();
  if (!v3) {
    goto LABEL_10;
  }
LABEL_3:
  unint64_t result = v3 - 1;
  if (__OFSUB__(v3, 1))
  {
    __break(1u);
    goto LABEL_13;
  }
  if ((v2 & 0xC000000000000001) != 0)
  {
LABEL_13:
    uint64_t v5 = specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_8;
  }
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (result < *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    uint64_t v5 = *(void *)(v2 + 8 * result + 32);
    swift_retain();
LABEL_8:
    swift_bridgeObjectRelease();
    int v6 = *(unsigned __int8 *)(v5 + 16);
    swift_release();
    return (v6 - 1) < 3;
  }
  __break(1u);
  return result;
}

uint64_t sub_1007907B8()
{
  unint64_t v2 = (const char *)(v0 + OBJC_IVAR____TtC8Freeform20CRLCommandController_openGroupDatas);
  swift_beginAccess();
  uint64_t v3 = *(void *)v2;
  if (*(void *)v2 >> 62)
  {
    swift_bridgeObjectRetain();
    unint64_t v4 = (double *)_CocoaArrayWrapper.endIndex.getter();
    if (v4)
    {
LABEL_3:
      unint64_t v5 = (unint64_t)v4 - 1;
      if (__OFSUB__(v4, 1))
      {
        __break(1u);
      }
      else if ((v3 & 0xC000000000000001) == 0)
      {
        if ((v5 & 0x8000000000000000) != 0)
        {
          __break(1u);
          goto LABEL_22;
        }
        if (v5 >= *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
          goto LABEL_43;
        }
        unint64_t v4 = *(double **)(v3 + 8 * v5 + 32);
        swift_retain();
LABEL_8:
        swift_bridgeObjectRelease();
        uint64_t v3 = *(void *)v2;
        if (!(*(void *)v2 >> 62))
        {
          uint64_t v6 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
          swift_bridgeObjectRetain();
          if (v6)
          {
LABEL_10:
            unint64_t v7 = v6 - 1;
            if (__OFSUB__(v6, 1)) {
              goto LABEL_50;
            }
            if ((v3 & 0xC000000000000001) != 0) {
              goto LABEL_51;
            }
            if ((v7 & 0x8000000000000000) != 0)
            {
              __break(1u);
            }
            else if (v7 < *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10))
            {
              uint64_t v8 = *(void *)(v3 + 8 * v7 + 32);
              swift_retain();
              while (1)
              {
                swift_bridgeObjectRelease();
                int v9 = *(unsigned __int8 *)(v8 + 16);
                swift_release();
                if ((v9 - 1) < 3) {
                  goto LABEL_57;
                }
LABEL_24:
                uint64_t v1 = *(void *)v2;
                if (*(void *)v2 >> 62)
                {
LABEL_43:
                  swift_bridgeObjectRetain();
                  uint64_t v13 = _CocoaArrayWrapper.endIndex.getter();
                  if (!v13)
                  {
LABEL_44:
                    swift_bridgeObjectRelease();
                    unint64_t v4 = _swiftEmptyArrayStorage;
                    unint64_t v2 = "enableProgressiveEnqueuingInCurrentGroup()";
                    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"enableProgressiveEnqueuingInCurrentGroup()", 42, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandController.swift", 92, 2, 680, (uint64_t)"enableProgressiveEnqueuingInCurrentGroup() called without a group being open.", 77, 2u, (uint64_t)_swiftEmptyArrayStorage);
                    sub_100586FD4((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"enableProgressiveEnqueuingInCurrentGroup() called without a group being open.");
                    unint64_t v10 = "enableProgressiveEnqueuingInCurrentGroup()";
                    uint64_t v11 = 42;
                    uint64_t v12 = 680;
                    goto LABEL_45;
                  }
                }
                else
                {
                  uint64_t v13 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
                  swift_bridgeObjectRetain();
                  if (!v13) {
                    goto LABEL_44;
                  }
                }
                unint64_t v14 = v13 - 1;
                if (__OFSUB__(v13, 1)) {
                  goto LABEL_46;
                }
                if ((v1 & 0xC000000000000001) != 0) {
                  goto LABEL_47;
                }
                if ((v14 & 0x8000000000000000) != 0)
                {
                  __break(1u);
                }
                else if (v14 < *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10))
                {
                  uint64_t v3 = *(void *)(v1 + 8 * v14 + 32);
                  swift_retain();
                  goto LABEL_31;
                }
                __break(1u);
LABEL_50:
                __break(1u);
LABEL_51:
                uint64_t v8 = specialized _ArrayBuffer._getElementSlowPath(_:)();
              }
            }
            __break(1u);
            goto LABEL_54;
          }
LABEL_23:
          swift_bridgeObjectRelease();
          goto LABEL_24;
        }
LABEL_22:
        swift_bridgeObjectRetain();
        uint64_t v6 = _CocoaArrayWrapper.endIndex.getter();
        if (v6) {
          goto LABEL_10;
        }
        goto LABEL_23;
      }
      unint64_t v4 = (double *)specialized _ArrayBuffer._getElementSlowPath(_:)();
      goto LABEL_8;
    }
  }
  else
  {
    unint64_t v4 = *(double **)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v4) {
      goto LABEL_3;
    }
  }
  swift_bridgeObjectRelease();
  unint64_t v4 = _swiftEmptyArrayStorage;
  unint64_t v2 = "enableRealTimeSyncProgressiveEnqueuingInCurrentGroup()";
  sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"enableRealTimeSyncProgressiveEnqueuingInCurrentGroup()", 54, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandController.swift", 92, 2, 719, (uint64_t)"enableRealTimeSyncProgressiveEnqueingInCurrentGroup() called without a group being open.", 88, 2u, (uint64_t)_swiftEmptyArrayStorage);
  sub_100586FD4((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"enableRealTimeSyncProgressiveEnqueingInCurrentGroup() called without a group being open.");
  unint64_t v10 = "enableRealTimeSyncProgressiveEnqueuingInCurrentGroup()";
  uint64_t v11 = 54;
  uint64_t v12 = 719;
LABEL_45:
  sub_1005871AC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)v10, v11, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandController.swift", 92, 2, v12);
  SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v21, v22);
  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
LABEL_46:
  __break(1u);
LABEL_47:
  uint64_t v3 = specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_31:
  swift_bridgeObjectRelease();
  int v15 = *(unsigned __int8 *)(v3 + 16);
  if (v15 == 3 || v15 == 2 || v15 == 1) {
    goto LABEL_56;
  }
  unint64_t v2 = *(const char **)v2;
  if ((unint64_t)v2 >> 62)
  {
LABEL_54:
    swift_bridgeObjectRetain_n();
    uint64_t result = _CocoaArrayWrapper.endIndex.getter();
    uint64_t v16 = result;
    if (!result) {
      goto LABEL_55;
    }
LABEL_36:
    if (v16 < 1)
    {
      __break(1u);
      return result;
    }
    uint64_t v18 = 0;
    do
    {
      if (((unint64_t)v2 & 0xC000000000000001) != 0)
      {
        uint64_t v19 = specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        uint64_t v19 = *(void *)&v2[8 * v18 + 32];
        swift_retain();
      }
      ++v18;
      uint64_t v20 = *(id *)(v19 + 24);
      sub_10078D41C(v20, 0);
      swift_release();
    }
    while (v16 != v18);
    goto LABEL_55;
  }
  uint64_t v16 = *(void *)(((unint64_t)v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t result = swift_bridgeObjectRetain_n();
  if (v16) {
    goto LABEL_36;
  }
LABEL_55:
  swift_bridgeObjectRelease_n();
  *(unsigned char *)(v3 + 16) = 1;
LABEL_56:
  swift_release();
LABEL_57:
  if (((_BYTE)v4[2] & 0xFE) != 2)
  {
    if (qword_10166FB90 != -1) {
      swift_once();
    }
    swift_beginAccess();
    id v23 = (id)static OS_os_log.commandController;
    uint64_t v24 = static os_log_type_t.debug.getter();
    sub_100BAC898((uint64_t)v23, (uint64_t)&_mh_execute_header, v24, (uint64_t)"simultaneous NOT enabled [setting isProgressiveAndRealTimeSync to true]", 71, 2, (uint64_t)_swiftEmptyArrayStorage);

    *((unsigned char *)v4 + 16) = 2;
    sub_1007915A0();
  }
  return swift_release();
}

uint64_t sub_100790D74()
{
  unint64_t v2 = (const char *)(v0 + OBJC_IVAR____TtC8Freeform20CRLCommandController_openGroupDatas);
  swift_beginAccess();
  uint64_t v3 = *(void *)v2;
  if (*(void *)v2 >> 62)
  {
    swift_bridgeObjectRetain();
    unint64_t v4 = (double *)_CocoaArrayWrapper.endIndex.getter();
    if (v4)
    {
LABEL_3:
      unint64_t v5 = (unint64_t)v4 - 1;
      if (__OFSUB__(v4, 1))
      {
        __break(1u);
      }
      else if ((v3 & 0xC000000000000001) == 0)
      {
        if ((v5 & 0x8000000000000000) != 0)
        {
          __break(1u);
          goto LABEL_22;
        }
        if (v5 >= *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
          goto LABEL_43;
        }
        unint64_t v4 = *(double **)(v3 + 8 * v5 + 32);
        swift_retain();
LABEL_8:
        swift_bridgeObjectRelease();
        uint64_t v3 = *(void *)v2;
        if (!(*(void *)v2 >> 62))
        {
          uint64_t v6 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
          swift_bridgeObjectRetain();
          if (v6)
          {
LABEL_10:
            unint64_t v7 = v6 - 1;
            if (__OFSUB__(v6, 1)) {
              goto LABEL_50;
            }
            if ((v3 & 0xC000000000000001) != 0) {
              goto LABEL_51;
            }
            if ((v7 & 0x8000000000000000) != 0)
            {
              __break(1u);
            }
            else if (v7 < *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10))
            {
              uint64_t v8 = *(void *)(v3 + 8 * v7 + 32);
              swift_retain();
              while (1)
              {
                swift_bridgeObjectRelease();
                int v9 = *(unsigned __int8 *)(v8 + 16);
                swift_release();
                if ((v9 - 1) < 3) {
                  goto LABEL_57;
                }
LABEL_24:
                uint64_t v1 = *(void *)v2;
                if (*(void *)v2 >> 62)
                {
LABEL_43:
                  swift_bridgeObjectRetain();
                  uint64_t v13 = _CocoaArrayWrapper.endIndex.getter();
                  if (!v13)
                  {
LABEL_44:
                    swift_bridgeObjectRelease();
                    unint64_t v4 = _swiftEmptyArrayStorage;
                    unint64_t v2 = "enableProgressiveEnqueuingInCurrentGroup()";
                    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"enableProgressiveEnqueuingInCurrentGroup()", 42, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandController.swift", 92, 2, 680, (uint64_t)"enableProgressiveEnqueuingInCurrentGroup() called without a group being open.", 77, 2u, (uint64_t)_swiftEmptyArrayStorage);
                    sub_100586FD4((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"enableProgressiveEnqueuingInCurrentGroup() called without a group being open.");
                    unint64_t v10 = "enableProgressiveEnqueuingInCurrentGroup()";
                    uint64_t v11 = 42;
                    uint64_t v12 = 680;
                    goto LABEL_45;
                  }
                }
                else
                {
                  uint64_t v13 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
                  swift_bridgeObjectRetain();
                  if (!v13) {
                    goto LABEL_44;
                  }
                }
                unint64_t v14 = v13 - 1;
                if (__OFSUB__(v13, 1)) {
                  goto LABEL_46;
                }
                if ((v1 & 0xC000000000000001) != 0) {
                  goto LABEL_47;
                }
                if ((v14 & 0x8000000000000000) != 0)
                {
                  __break(1u);
                }
                else if (v14 < *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10))
                {
                  uint64_t v3 = *(void *)(v1 + 8 * v14 + 32);
                  swift_retain();
                  goto LABEL_31;
                }
                __break(1u);
LABEL_50:
                __break(1u);
LABEL_51:
                uint64_t v8 = specialized _ArrayBuffer._getElementSlowPath(_:)();
              }
            }
            __break(1u);
            goto LABEL_54;
          }
LABEL_23:
          swift_bridgeObjectRelease();
          goto LABEL_24;
        }
LABEL_22:
        swift_bridgeObjectRetain();
        uint64_t v6 = _CocoaArrayWrapper.endIndex.getter();
        if (v6) {
          goto LABEL_10;
        }
        goto LABEL_23;
      }
      unint64_t v4 = (double *)specialized _ArrayBuffer._getElementSlowPath(_:)();
      goto LABEL_8;
    }
  }
  else
  {
    unint64_t v4 = *(double **)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v4) {
      goto LABEL_3;
    }
  }
  swift_bridgeObjectRelease();
  unint64_t v4 = _swiftEmptyArrayStorage;
  unint64_t v2 = "enableRealTimeSyncProgressiveEnqueuingWithSimultaneousRealtimeIncomingInCurrentGroup()";
  sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"enableRealTimeSyncProgressiveEnqueuingWithSimultaneousRealtimeIncomingInCurrentGroup()", 86, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandController.swift", 92, 2, 739, (uint64_t)"enableRealTimeSyncProgressiveEnqueingInCurrentGroup() called without a group being open.", 88, 2u, (uint64_t)_swiftEmptyArrayStorage);
  sub_100586FD4((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"enableRealTimeSyncProgressiveEnqueingInCurrentGroup() called without a group being open.");
  unint64_t v10 = "enableRealTimeSyncProgressiveEnqueuingWithSimultaneousRealtimeIncomingInCurrentGroup()";
  uint64_t v11 = 86;
  uint64_t v12 = 739;
LABEL_45:
  sub_1005871AC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)v10, v11, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandController.swift", 92, 2, v12);
  SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v21, v22);
  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
LABEL_46:
  __break(1u);
LABEL_47:
  uint64_t v3 = specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_31:
  swift_bridgeObjectRelease();
  int v15 = *(unsigned __int8 *)(v3 + 16);
  if (v15 == 3 || v15 == 2 || v15 == 1) {
    goto LABEL_56;
  }
  unint64_t v2 = *(const char **)v2;
  if ((unint64_t)v2 >> 62)
  {
LABEL_54:
    swift_bridgeObjectRetain_n();
    uint64_t result = _CocoaArrayWrapper.endIndex.getter();
    uint64_t v16 = result;
    if (!result) {
      goto LABEL_55;
    }
LABEL_36:
    if (v16 < 1)
    {
      __break(1u);
      return result;
    }
    uint64_t v18 = 0;
    do
    {
      if (((unint64_t)v2 & 0xC000000000000001) != 0)
      {
        uint64_t v19 = specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        uint64_t v19 = *(void *)&v2[8 * v18 + 32];
        swift_retain();
      }
      ++v18;
      uint64_t v20 = *(id *)(v19 + 24);
      sub_10078D41C(v20, 0);
      swift_release();
    }
    while (v16 != v18);
    goto LABEL_55;
  }
  uint64_t v16 = *(void *)(((unint64_t)v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t result = swift_bridgeObjectRetain_n();
  if (v16) {
    goto LABEL_36;
  }
LABEL_55:
  swift_bridgeObjectRelease_n();
  *(unsigned char *)(v3 + 16) = 1;
LABEL_56:
  swift_release();
LABEL_57:
  if (*((unsigned char *)v4 + 16) != 3)
  {
    if (qword_10166FB90 != -1) {
      swift_once();
    }
    swift_beginAccess();
    id v23 = (id)static OS_os_log.commandController;
    uint64_t v24 = static os_log_type_t.debug.getter();
    sub_100BAC898((uint64_t)v23, (uint64_t)&_mh_execute_header, v24, (uint64_t)"simultaneous enabled [setting isRealTimeSyncProgressiveWithSimultaneousRealtimeIncoming to true]", 96, 2, (uint64_t)_swiftEmptyArrayStorage);

    *((unsigned char *)v4 + 16) = 3;
    sub_1007915A0();
  }
  return swift_release();
}

unint64_t sub_100791360()
{
  uint64_t v1 = (unint64_t *)(v0 + OBJC_IVAR____TtC8Freeform20CRLCommandController_openGroupDatas);
  swift_beginAccess();
  unint64_t v2 = *v1;
  if (!(v2 >> 62))
  {
    uint64_t v3 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v3) {
      goto LABEL_3;
    }
LABEL_10:
    swift_bridgeObjectRelease();
    return 0;
  }
  swift_bridgeObjectRetain();
  uint64_t v3 = _CocoaArrayWrapper.endIndex.getter();
  if (!v3) {
    goto LABEL_10;
  }
LABEL_3:
  unint64_t result = v3 - 1;
  if (__OFSUB__(v3, 1))
  {
    __break(1u);
    goto LABEL_13;
  }
  if ((v2 & 0xC000000000000001) != 0)
  {
LABEL_13:
    uint64_t v5 = specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_8;
  }
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (result < *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    uint64_t v5 = *(void *)(v2 + 8 * result + 32);
    swift_retain();
LABEL_8:
    swift_bridgeObjectRelease();
    char v6 = *(unsigned char *)(v5 + 16);
    swift_release();
    return (v6 & 0xFE) == 2;
  }
  __break(1u);
  return result;
}

unint64_t sub_10079149C()
{
  uint64_t v1 = (unint64_t *)(v0 + OBJC_IVAR____TtC8Freeform20CRLCommandController_openGroupDatas);
  swift_beginAccess();
  unint64_t v2 = *v1;
  if (!(v2 >> 62))
  {
    uint64_t v3 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v3) {
      goto LABEL_3;
    }
LABEL_10:
    swift_bridgeObjectRelease();
    return 0;
  }
  swift_bridgeObjectRetain();
  uint64_t v3 = _CocoaArrayWrapper.endIndex.getter();
  if (!v3) {
    goto LABEL_10;
  }
LABEL_3:
  unint64_t result = v3 - 1;
  if (__OFSUB__(v3, 1))
  {
    __break(1u);
    goto LABEL_13;
  }
  if ((v2 & 0xC000000000000001) != 0)
  {
LABEL_13:
    uint64_t v5 = specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_8;
  }
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (result < *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    uint64_t v5 = *(void *)(v2 + 8 * result + 32);
    swift_retain();
LABEL_8:
    swift_bridgeObjectRelease();
    int v6 = *(unsigned __int8 *)(v5 + 16);
    swift_release();
    return v6 == 3;
  }
  __break(1u);
  return result;
}

uint64_t sub_1007915A0()
{
  uint64_t v1 = type metadata accessor for UUID();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1, v3);
  uint64_t v5 = (char *)&aBlock[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for CRLBoard.RealTimeSessionInfo(0);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6, v8);
  unint64_t v10 = (void *)((char *)&aBlock[-1] - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v11 = sub_1005057FC((uint64_t *)&unk_10169A1A0);
  uint64_t result = __chkstk_darwin(v11 - 8, v12);
  int v15 = (char *)&aBlock[-1] - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = *(void *)(v0 + OBJC_IVAR____TtC8Freeform20CRLCommandController__currentTransactionContext);
  if (v16)
  {
    uint64_t v17 = *(void *)(v0 + OBJC_IVAR____TtC8Freeform20CRLCommandController_board)
        + OBJC_IVAR____TtC8Freeform8CRLBoard_realTimeSessionInfo;
    swift_beginAccess();
    sub_100522E9C(v17, (uint64_t)v15, (uint64_t *)&unk_10169A1A0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v15, 1, v6)) {
      return sub_100522F00((uint64_t)v15, (uint64_t *)&unk_10169A1A0);
    }
    sub_1007972B4((uint64_t)v15, (uint64_t)v10, type metadata accessor for CRLBoard.RealTimeSessionInfo);
    swift_retain();
    sub_100522F00((uint64_t)v15, (uint64_t *)&unk_10169A1A0);
    uint64_t v18 = *v10;
    swift_retain();
    sub_100797380((uint64_t)v10, type metadata accessor for CRLBoard.RealTimeSessionInfo);
    uint64_t v19 = OBJC_IVAR____TtC8Freeform20CRLCommandController__currentWatermarkTransactionContext;
    if (!*(void *)(v0 + OBJC_IVAR____TtC8Freeform20CRLCommandController__currentWatermarkTransactionContext))
    {
      type metadata accessor for CRLWatermarkTransactionContext(0);
      uint64_t v20 = swift_allocObject();
      char v21 = *(unsigned char *)(v16 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_trackChanges);
      swift_retain();
      if ((v21 & 1) == 0)
      {
        sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"init(from:)", 11, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLTransactions/CRLTransactionContext.swift", 97, 2, 560, (uint64_t)"Should not be trying to watermark a transaction that doesnt want to be tracked.", 79, 2u, (uint64_t)_swiftEmptyArrayStorage);
        sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"init(from:)", 11, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLTransactions/CRLTransactionContext.swift", 97, 2, 560);
      }
      uint64_t v22 = *(void *)(v16 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_transactableOwner);
      uint64_t v23 = *(void *)(v16 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_transactableOwner + 8);
      (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v5, v16 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_id, v1);
      swift_unknownObjectRetain();
      swift_release();
      uint64_t ObjectType = swift_getObjectType();
      uint64_t v25 = sub_1010338AC(v22, 0, 1, (uint64_t)v5, 1, v20, ObjectType, v23);
      *(unsigned char *)(v25 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_active) = 0;
      *(void *)(v0 + v19) = v25;
      uint64_t result = swift_release();
      if (!*(void *)(v0 + v19))
      {
        __break(1u);
        return result;
      }
    }
    swift_retain();
    uint64_t v26 = sub_101027A6C(v16);
    swift_release();
    if (v26)
    {
      id v27 = *(NSObject **)(v18 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_accessQueue);
      uint64_t v28 = swift_allocObject();
      *(void *)(v28 + 16) = v26;
      *(void *)(v28 + 24) = v18;
      uint64_t v29 = swift_allocObject();
      *(void *)(v29 + 16) = sub_1006DADEC;
      *(void *)(v29 + 24) = v28;
      aBlock[4] = sub_1006591F0;
      aBlock[5] = v29;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = *(void *)"";
      aBlock[2] = sub_1006D9628;
      aBlock[3] = &unk_1015135A8;
      uint64_t v30 = _Block_copy(aBlock);
      swift_retain();
      swift_retain();
      swift_retain();
      swift_release();
      dispatch_sync(v27, v30);
      _Block_release(v30);
      LOBYTE(v27) = swift_isEscapingClosureAtFileLocation();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      uint64_t result = swift_release();
      if ((v27 & 1) == 0) {
        return result;
      }
      __break(1u);
    }
    swift_release();
    return swift_release();
  }
  return result;
}

id sub_100791B78(uint64_t a1)
{
  return sub_100791B90(a1, type metadata accessor for CRLCommandController);
}

id sub_100791B90(uint64_t a1, uint64_t (*a2)(void))
{
  v4.id receiver = v2;
  v4.Class super_class = (Class)a2();
  [super dealloc];
}

uint64_t type metadata accessor for CRLCommandController()
{
  return self;
}

uint64_t type metadata accessor for CRLCommandController.CommandGroupData()
{
  return self;
}

uint64_t type metadata accessor for CRLCommandController.CRLCommandControllerCommandGroup()
{
  return self;
}

ValueMetadata *type metadata accessor for CRLCommandController.ProgressiveState()
{
  return &type metadata for CRLCommandController.ProgressiveState;
}

unsigned char *_s8Freeform20CRLCommandControllerC16ProgressiveStateOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100791DECLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLCommandController.CommandType()
{
  return &type metadata for CRLCommandController.CommandType;
}

unint64_t sub_100791E28()
{
  unint64_t result = qword_10167F688;
  if (!qword_10167F688)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10167F688);
  }
  return result;
}

unint64_t sub_100791E80()
{
  unint64_t result = qword_10167F690;
  if (!qword_10167F690)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10167F690);
  }
  return result;
}

void sub_100791ED4(uint64_t a1, unsigned __int8 a2, void *a3, uint64_t a4)
{
  int v8 = a2;
  if (a2 == 3)
  {
    uint64_t v9 = OBJC_IVAR____TtC8Freeform21CRLTransactionContext_markingState;
    if (*(unsigned char *)(a1 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_markingState) == 1)
    {
      sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"beginMarking()", 14, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLTransactions/CRLTransactionContext.swift", 97, 2, 132, (uint64_t)"beginMarking() called while marking state already active", 56, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"beginMarking()", 14, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLTransactions/CRLTransactionContext.swift", 97, 2, 132);
    }
    *(unsigned char *)(a1 + v9) = 1;
  }
  (*(void (**)(void, uint64_t, BOOL))((swift_isaMask & *a3) + 0x80))(*(void *)(a4 + OBJC_IVAR____TtC8Freeform20CRLCommandController_board), a1, (v8 - 4) < 0xFFFFFFFD);
  if (!v4)
  {
    *((unsigned char *)a3 + OBJC_IVAR____TtC8Freeform10CRLCommand_committed) = 1;
    if (v8 == 3)
    {
      uint64_t v10 = OBJC_IVAR____TtC8Freeform21CRLTransactionContext_markingState;
      if ((*(unsigned char *)(a1 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_markingState) & 1) == 0)
      {
        sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"endMarking()", 12, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLTransactions/CRLTransactionContext.swift", 97, 2, 138, (uint64_t)"endMarking() called while marking state is not active", 53, 2u, (uint64_t)_swiftEmptyArrayStorage);
        sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"endMarking()", 12, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLTransactions/CRLTransactionContext.swift", 97, 2, 138);
      }
      *(unsigned char *)(a1 + v10) = 0;
    }
  }
}

uint64_t sub_1007920FC(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62) {
    goto LABEL_13;
  }
  unint64_t v5 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t result = swift_bridgeObjectRetain();
  if (!v5) {
    return swift_bridgeObjectRelease();
  }
  while (1)
  {
    while (__OFSUB__(v5--, 1))
    {
      __break(1u);
LABEL_13:
      swift_bridgeObjectRetain();
      uint64_t result = _CocoaArrayWrapper.endIndex.getter();
      unint64_t v5 = result;
      if (!result) {
        return swift_bridgeObjectRelease();
      }
    }
    if ((a2 & 0xC000000000000001) != 0)
    {
      specialized _ArrayBuffer._getElementSlowPath(_:)();
      goto LABEL_9;
    }
    if ((v5 & 0x8000000000000000) != 0) {
      break;
    }
    if (v5 >= *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_16;
    }
    swift_retain();
LABEL_9:
    sub_10052EAD8(a1);
    uint64_t result = swift_release();
    if (v2 || !v5) {
      return swift_bridgeObjectRelease();
    }
  }
  __break(1u);
LABEL_16:
  __break(1u);
  return result;
}

void sub_100792200(unsigned __int8 a1)
{
  uint64_t v3 = type metadata accessor for UUID();
  __chkstk_darwin(v3 - 8, v4);
  unsigned int v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = OBJC_IVAR____TtC8Freeform20CRLCommandController__currentTransactionContext;
  if (*(void *)(v1 + OBJC_IVAR____TtC8Freeform20CRLCommandController__currentTransactionContext)) {
    return;
  }
  unint64_t v8 = v1 + OBJC_IVAR____TtC8Freeform20CRLCommandController_openGroupDatas;
  swift_beginAccess();
  unint64_t v9 = *(void *)v8;
  if (!(*(void *)v8 >> 62))
  {
    uint64_t v10 = *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v10) {
      goto LABEL_4;
    }
LABEL_14:
    swift_bridgeObjectRelease();
    goto LABEL_15;
  }
  swift_bridgeObjectRetain();
  uint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
  if (!v10) {
    goto LABEL_14;
  }
LABEL_4:
  unint64_t v11 = v10 - 1;
  if (__OFSUB__(v10, 1))
  {
    __break(1u);
    goto LABEL_36;
  }
  if ((v9 & 0xC000000000000001) != 0)
  {
LABEL_36:
    uint64_t v12 = specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_9;
  }
  if ((v11 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_38;
  }
  if (v11 < *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    uint64_t v12 = *(void *)(v9 + 8 * v11 + 32);
    swift_retain();
LABEL_9:
    swift_bridgeObjectRelease();
    int v13 = *(unsigned __int8 *)(v12 + 16);
    swift_release();
    if (v13 == 3)
    {
      if (*(void *)v8 >> 62) {
        goto LABEL_48;
      }
      if (*(uint64_t *)((*(void *)v8 & 0xFFFFFFFFFFFFFF8) + 0x10) > 0) {
        goto LABEL_18;
      }
    }
    while (1)
    {
LABEL_15:
      if (a1 - 2 < 2)
      {
        uint64_t v14 = *(void *)(v1 + OBJC_IVAR____TtC8Freeform20CRLCommandController_board);
        sub_100794B10((unint64_t *)&qword_10167BA48, (void (*)(uint64_t))type metadata accessor for CRLBoard);
        swift_unknownObjectRetain();
        UUID.init()();
        type metadata accessor for CRLTransactionContext(0);
        uint64_t v15 = swift_allocObject();
        uint64_t v16 = v14;
        char v17 = 0;
        char v18 = 0;
        uint64_t v19 = (uint64_t)v6;
        char v20 = 0;
        goto LABEL_21;
      }
      if (a1) {
        break;
      }
      do
      {
LABEL_18:
        uint64_t v21 = *(void *)(v1 + OBJC_IVAR____TtC8Freeform20CRLCommandController_board);
        sub_100794B10((unint64_t *)&qword_10167BA48, (void (*)(uint64_t))type metadata accessor for CRLBoard);
        swift_unknownObjectRetain();
        UUID.init()();
        type metadata accessor for CRLTransactionContext(0);
        uint64_t v15 = swift_allocObject();
        uint64_t v16 = v21;
        char v17 = 1;
LABEL_20:
        char v18 = 1;
        uint64_t v19 = (uint64_t)v6;
        char v20 = 1;
LABEL_21:
        *(void *)(v1 + v7) = sub_1007941A4(v16, v17, v18, v19, v20, v15, (unint64_t *)&qword_10167BA48, (void (*)(uint64_t))type metadata accessor for CRLBoard);
        swift_release();
        if (*(void *)v8 >> 62)
        {
          swift_bridgeObjectRetain();
          uint64_t v26 = _CocoaArrayWrapper.endIndex.getter();
          swift_bridgeObjectRelease();
          if (v26 < 1) {
            goto LABEL_41;
          }
        }
        else if (*(uint64_t *)((*(void *)v8 & 0xFFFFFFFFFFFFFF8) + 0x10) < 1)
        {
          goto LABEL_41;
        }
        unint64_t v8 = *(void *)v8;
        if (v8 >> 62)
        {
LABEL_38:
          swift_bridgeObjectRetain();
          unsigned int v6 = (char *)_CocoaArrayWrapper.endIndex.getter();
          if (!v6)
          {
LABEL_39:
            swift_bridgeObjectRelease();
            if (a1) {
              goto LABEL_40;
            }
            goto LABEL_41;
          }
        }
        else
        {
          unsigned int v6 = *(char **)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
          swift_bridgeObjectRetain();
          if (!v6) {
            goto LABEL_39;
          }
        }
        uint64_t v23 = v6 - 1;
        if (__OFSUB__(v6, 1)) {
          goto LABEL_44;
        }
        if ((v8 & 0xC000000000000001) != 0) {
          goto LABEL_45;
        }
        if (((unint64_t)v23 & 0x8000000000000000) != 0)
        {
          __break(1u);
        }
        else if ((unint64_t)v23 < *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          uint64_t v24 = *(void *)(v8 + 8 * (void)v23 + 32);
          swift_retain();
          goto LABEL_30;
        }
        __break(1u);
LABEL_48:
        swift_bridgeObjectRetain();
        uint64_t v27 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
      }
      while (v27 > 0);
    }
    uint64_t v22 = *(void *)(v1 + OBJC_IVAR____TtC8Freeform20CRLCommandController_board);
    sub_100794B10((unint64_t *)&qword_10167BA48, (void (*)(uint64_t))type metadata accessor for CRLBoard);
    swift_unknownObjectRetain();
    UUID.init()();
    type metadata accessor for CRLTransactionContext(0);
    uint64_t v15 = swift_allocObject();
    uint64_t v16 = v22;
    char v17 = 0;
    goto LABEL_20;
  }
  __break(1u);
LABEL_44:
  __break(1u);
LABEL_45:
  uint64_t v24 = specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_30:
  swift_bridgeObjectRelease();
  int v25 = *(unsigned __int8 *)(v24 + 16);
  swift_release();
  if (v25 != 3 && a1)
  {
LABEL_40:
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"_openTransactionIfNecessary(commandType:)", 41, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandController.swift", 92, 2, 1039, (uint64_t)"Non-user commands are only for an open group, if simultaneous realtime updates are enabled", 90, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"_openTransactionIfNecessary(commandType:)", 41, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandController.swift", 92, 2, 1039);
  }
LABEL_41:
  sub_100F6D458();
}

uint64_t sub_100792760(unint64_t a1, uint64_t a2, void (*a3)(id), uint64_t a4)
{
  v181[1] = a4;
  v182 = a3;
  uint64_t v208 = a2;
  uint64_t v5 = type metadata accessor for CRLBoardCRDTData(0);
  __chkstk_darwin(v5 - 8, v6);
  uint64_t v190 = (uint64_t)v181 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v204 = type metadata accessor for UUID();
  uint64_t v187 = *(void *)(v204 - 8);
  uint64_t v9 = __chkstk_darwin(v204, v8);
  v201 = (char *)v181 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __chkstk_darwin(v9, v11);
  uint64_t v198 = (char *)v181 - v13;
  uint64_t v15 = __chkstk_darwin(v12, v14);
  uint64_t v200 = (uint64_t)v181 - v16;
  __chkstk_darwin(v15, v17);
  uint64_t v196 = (char *)v181 - v18;
  uint64_t v19 = sub_1005057FC(&qword_10167F6A0);
  uint64_t v21 = __chkstk_darwin(v19 - 8, v20);
  uint64_t v194 = (char *)v181 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21, v23);
  int v25 = (char *)v181 - v24;
  unint64_t v26 = (unint64_t)&selRef_i_join;
  id v207 = [objc_allocWithZone((Class)CRLChangeGroup) init];
  id v217 = [objc_allocWithZone((Class)CRLChangeGroup) init];
  v223[0] = &_swiftEmptySetSingleton;
  unint64_t v215 = a1;
  uint64_t v27 = (int64_t *)(a1 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_createdObjects);
  swift_beginAccess();
  int64_t v28 = *v27;
  if ((*v27 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    __CocoaSet.makeIterator()();
    unint64_t v26 = type metadata accessor for CRLTransactableHashableWrapper();
    sub_100794B10((unint64_t *)&qword_10169A0A0, (void (*)(uint64_t))type metadata accessor for CRLTransactableHashableWrapper);
    Set.Iterator.init(_cocoa:)();
    int64_t v28 = v223[1];
    v213 = (void *)v223[2];
    uint64_t v29 = (char *)v223[3];
    uint64_t v30 = v223[4];
    unint64_t v31 = v223[5];
  }
  else
  {
    uint64_t v32 = -1 << *(unsigned char *)(v28 + 32);
    uint64_t v33 = *(void *)(v28 + 56);
    v213 = (void *)(v28 + 56);
    uint64_t v34 = ~v32;
    uint64_t v35 = -v32;
    if (v35 < 64) {
      uint64_t v36 = ~(-1 << v35);
    }
    else {
      uint64_t v36 = -1;
    }
    unint64_t v31 = v36 & v33;
    swift_bridgeObjectRetain();
    uint64_t v29 = (char *)v34;
    uint64_t v30 = 0;
  }
  v209 = v29;
  uint64_t v211 = v28 & 0x7FFFFFFFFFFFFFFFLL;
  int64_t v212 = (unint64_t)(v29 + 64) >> 6;
  v210 = (void (**)(uint64_t, char *))((char *)&type metadata for Swift.AnyObject + 8);
  uint64_t v192 = v25;
  int64_t v214 = v28;
  while (v28 < 0)
  {
    uint64_t v40 = __CocoaSet.Iterator.next()();
    if (!v40) {
      goto LABEL_35;
    }
    v222[0] = v40;
    type metadata accessor for CRLTransactableHashableWrapper();
    swift_unknownObjectRetain();
    swift_dynamicCast();
    unint64_t v26 = v224;
    swift_unknownObjectRelease();
    uint64_t v39 = v30;
    uint64_t v37 = v31;
    if (!v26) {
      goto LABEL_35;
    }
LABEL_30:
    v216 = (uint64_t *)v37;
    uint64_t v44 = *(void *)(v26 + 16);
    uint64_t v45 = *(void *)(v26 + 24);
    uint64_t ObjectType = swift_getObjectType();
    swift_unknownObjectRetain();
    [v207 registerChange:2 details:0 forChangeSource:v44];
    uint64_t v47 = (*(uint64_t (**)(uint64_t, uint64_t))(v45 + 88))(ObjectType, v45);
    uint64_t v48 = *(void *)(v47 + 16);
    if (v48)
    {
      unsigned __int8 v49 = (uint64_t *)(v47 + 48);
      do
      {
        uint64_t v50 = *(v49 - 2);
        uint64_t v51 = *v49;
        uint64_t v52 = *v49 + OBJC_IVAR____TtC8Freeform14CRLPropertyMap_data;
        swift_beginAccess();
        if (*(void *)(*(void *)v52 + 16)) {
          [v217 registerChange:1 details:v51 forChangeSource:v50];
        }
        v49 += 3;
        --v48;
      }
      while (v48);
    }
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v30 = v39;
    unint64_t v31 = (unint64_t)v216;
    int64_t v28 = v214;
  }
  if (v31)
  {
    uint64_t v37 = (v31 - 1) & v31;
    unint64_t v38 = __clz(__rbit64(v31)) | (v30 << 6);
    uint64_t v39 = v30;
    goto LABEL_29;
  }
  int64_t v41 = v30 + 1;
  if (__OFADD__(v30, 1)) {
    goto LABEL_167;
  }
  if (v41 >= v212) {
    goto LABEL_35;
  }
  unint64_t v42 = v213[v41];
  uint64_t v39 = v30 + 1;
  if (v42) {
    goto LABEL_28;
  }
  uint64_t v39 = v30 + 2;
  if (v30 + 2 >= v212) {
    goto LABEL_35;
  }
  unint64_t v42 = v213[v39];
  if (v42) {
    goto LABEL_28;
  }
  uint64_t v39 = v30 + 3;
  if (v30 + 3 >= v212) {
    goto LABEL_35;
  }
  unint64_t v42 = v213[v39];
  if (v42) {
    goto LABEL_28;
  }
  uint64_t v39 = v30 + 4;
  if (v30 + 4 >= v212) {
    goto LABEL_35;
  }
  unint64_t v42 = v213[v39];
  if (v42)
  {
LABEL_28:
    uint64_t v37 = (v42 - 1) & v42;
    unint64_t v38 = __clz(__rbit64(v42)) + (v39 << 6);
LABEL_29:
    unint64_t v26 = *(void *)(*(void *)(v28 + 48) + 8 * v38);
    swift_retain();
    if (!v26) {
      goto LABEL_35;
    }
    goto LABEL_30;
  }
  uint64_t v43 = v30 + 5;
  while (v212 != v43)
  {
    unint64_t v42 = v213[v43++];
    if (v42)
    {
      uint64_t v39 = v43 - 1;
      goto LABEL_28;
    }
  }
LABEL_35:
  sub_10052E1EC();
  id v53 = (unint64_t *)(v215 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_deletedObjectOriginalInstances);
  swift_beginAccess();
  unint64_t v54 = *v53;
  if ((*v53 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    __CocoaSet.makeIterator()();
    unint64_t v26 = type metadata accessor for CRLTransactableHashableWrapper();
    sub_100794B10((unint64_t *)&qword_10169A0A0, (void (*)(uint64_t))type metadata accessor for CRLTransactableHashableWrapper);
    Set.Iterator.init(_cocoa:)();
    unint64_t v54 = v224;
    v213 = v225;
    id v55 = v226;
    uint64_t v56 = v227;
    unint64_t v57 = v228;
  }
  else
  {
    uint64_t v58 = -1 << *(unsigned char *)(v54 + 32);
    uint64_t v59 = *(void *)(v54 + 56);
    v213 = (void *)(v54 + 56);
    uint64_t v60 = ~v58;
    uint64_t v61 = -v58;
    if (v61 < 64) {
      uint64_t v62 = ~(-1 << v61);
    }
    else {
      uint64_t v62 = -1;
    }
    unint64_t v57 = v62 & v59;
    swift_bridgeObjectRetain();
    id v55 = (char *)v60;
    uint64_t v56 = 0;
  }
  v209 = v55;
  uint64_t v211 = v54 & 0x7FFFFFFFFFFFFFFFLL;
  int64_t v212 = (unint64_t)(v55 + 64) >> 6;
  v210 = (void (**)(uint64_t, char *))((char *)&type metadata for Swift.AnyObject + 8);
  int64_t v214 = v54;
  while (2)
  {
    if ((v54 & 0x8000000000000000) != 0)
    {
      uint64_t v66 = __CocoaSet.Iterator.next()();
      if (!v66) {
        goto LABEL_69;
      }
      v222[4] = v66;
      type metadata accessor for CRLTransactableHashableWrapper();
      swift_unknownObjectRetain();
      swift_dynamicCast();
      unint64_t v26 = v222[0];
      swift_unknownObjectRelease();
      uint64_t v65 = v56;
      uint64_t v63 = v57;
      if (!v26) {
        goto LABEL_69;
      }
      goto LABEL_64;
    }
    if (v57)
    {
      uint64_t v63 = (v57 - 1) & v57;
      unint64_t v64 = __clz(__rbit64(v57)) | (v56 << 6);
      uint64_t v65 = v56;
LABEL_63:
      unint64_t v26 = *(void *)(*(void *)(v54 + 48) + 8 * v64);
      swift_retain();
      if (!v26) {
        goto LABEL_69;
      }
LABEL_64:
      v216 = (uint64_t *)v63;
      uint64_t v70 = *(void *)(v26 + 16);
      uint64_t v71 = *(void *)(v26 + 24);
      uint64_t v72 = swift_getObjectType();
      swift_unknownObjectRetain();
      [v207 registerChange:3 details:0 forChangeSource:v70];
      uint64_t v73 = *(void *)(v215 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_transactableOwner + 8);
      unsigned int v74 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v71 + 104);
      uint64_t v75 = swift_unknownObjectRetain();
      uint64_t v76 = v74(v75, v73, v72, v71);
      swift_unknownObjectRelease();
      uint64_t v77 = *(void *)(v76 + 16);
      if (v77)
      {
        uint64_t v78 = (uint64_t *)(v76 + 48);
        do
        {
          uint64_t v79 = *(v78 - 2);
          uint64_t v80 = *v78;
          uint64_t v81 = *v78 + OBJC_IVAR____TtC8Freeform14CRLPropertyMap_data;
          swift_beginAccess();
          if (*(void *)(*(void *)v81 + 16)) {
            [v217 registerChange:1 details:v80 forChangeSource:v79];
          }
          v78 += 3;
          --v77;
        }
        while (v77);
      }
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      uint64_t v56 = v65;
      unint64_t v57 = (unint64_t)v216;
      unint64_t v54 = v214;
      continue;
    }
    break;
  }
  int64_t v67 = v56 + 1;
  if (__OFADD__(v56, 1)) {
    goto LABEL_168;
  }
  if (v67 >= v212) {
    goto LABEL_69;
  }
  unint64_t v68 = v213[v67];
  uint64_t v65 = v56 + 1;
  if (v68) {
    goto LABEL_62;
  }
  uint64_t v65 = v56 + 2;
  if (v56 + 2 >= v212) {
    goto LABEL_69;
  }
  unint64_t v68 = v213[v65];
  if (v68) {
    goto LABEL_62;
  }
  uint64_t v65 = v56 + 3;
  if (v56 + 3 >= v212) {
    goto LABEL_69;
  }
  unint64_t v68 = v213[v65];
  if (v68) {
    goto LABEL_62;
  }
  uint64_t v65 = v56 + 4;
  if (v56 + 4 >= v212) {
    goto LABEL_69;
  }
  unint64_t v68 = v213[v65];
  if (v68)
  {
LABEL_62:
    uint64_t v63 = (v68 - 1) & v68;
    unint64_t v64 = __clz(__rbit64(v68)) + (v65 << 6);
    goto LABEL_63;
  }
  uint64_t v69 = v56 + 5;
  while (v212 != v69)
  {
    unint64_t v68 = v213[v69++];
    if (v68)
    {
      uint64_t v65 = v69 - 1;
      goto LABEL_62;
    }
  }
LABEL_69:
  sub_10052E1EC();
  uint64_t v82 = v208 + OBJC_IVAR____TtC8Freeform18CRLObservableDelta_observableDeltas;
  swift_beginAccess();
  uint64_t v83 = *(void *)v82;
  uint64_t v84 = *(void *)(*(void *)v82 + 64);
  uint64_t v183 = *(void *)v82 + 64;
  uint64_t v85 = 1 << *(unsigned char *)(v83 + 32);
  if (v85 < 64) {
    uint64_t v86 = ~(-1 << v85);
  }
  else {
    uint64_t v86 = -1;
  }
  uint64_t v195 = v86 & v84;
  int64_t v184 = (unint64_t)(v85 + 63) >> 6;
  uint64_t v185 = v187 + 16;
  uint64_t v188 = (void (**)(uint64_t, uint64_t, uint64_t))(v187 + 32);
  uint64_t v189 = OBJC_IVAR____TtC8Freeform20CRLCommandController_board;
  v203 = (void (**)(char *, uint64_t))(v187 + 8);
  v181[0] = v184 - 1;
  uint64_t v186 = v83;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v193 = 0;
  uint64_t v89 = (uint64_t)v194;
  unint64_t v88 = v195;
  if (!v195) {
    goto LABEL_77;
  }
  while (2)
  {
    while (2)
    {
      uint64_t v195 = (v88 - 1) & v88;
      unint64_t v90 = __clz(__rbit64(v88)) | (v193 << 6);
LABEL_76:
      uint64_t v91 = v186;
      (*(void (**)(uint64_t, unint64_t, uint64_t))(v187 + 16))(v89, *(void *)(v186 + 48) + *(void *)(v187 + 72) * v90, v204);
      uint64_t v92 = *(void *)(v91 + 56);
      uint64_t v93 = sub_1005057FC(&qword_10167F6A8);
      *(void *)(v89 + *(int *)(v93 + 48)) = *(void *)(v92 + 8 * v90);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v93 - 8) + 56))(v89, 0, 1, v93);
      swift_retain();
LABEL_95:
      uint64_t v98 = (uint64_t)v192;
      sub_100794A9C(v89, (uint64_t)v192);
      uint64_t v99 = sub_1005057FC(&qword_10167F6A8);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v99 - 8) + 48))(v98, 1, v99) == 1)
      {
        swift_release();
        id v151 = [v217 changesArray];
        sub_10050BF48(0, &qword_10167F6B0);
        unint64_t v26 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

        if (v26 >> 62) {
          goto LABEL_169;
        }
        uint64_t v152 = *(void *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x10);
        if (v152) {
          goto LABEL_137;
        }
LABEL_158:
        swift_bridgeObjectRelease();
        id v178 = *(void **)(v191 + OBJC_IVAR____TtC8Freeform20CRLCommandController_changeNotifier);
        id v179 = [v178 preprocessChanges:v207];
        if (v182) {
          v182(v179);
        }
        id v180 = v207;
        [v178 processChanges:v207];

        return swift_bridgeObjectRelease();
      }
      uint64_t v197 = *(void *)(v98 + *(int *)(v99 + 48));
      uint64_t v100 = v204;
      (*v188)((uint64_t)v196, v98, v204);
      int64_t v101 = *(void *)(v191 + v189);
      unint64_t v26 = *(void *)(v101 + OBJC_IVAR____TtC8Freeform8CRLBoard_data);
      uint64_t v102 = v26 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
      swift_beginAccess();
      uint64_t v103 = v102;
      uint64_t v104 = v190;
      sub_1007972B4(v103, v190, type metadata accessor for CRLBoardCRDTData);
      swift_retain();
      sub_1005057FC(&qword_101674550);
      uint64_t v105 = v200;
      CRRegister.wrappedValue.getter();
      sub_100797380(v104, type metadata accessor for CRLBoardCRDTData);
      swift_release();
      LOBYTE(v104) = static UUID.== infix(_:_:)();
      v202 = *v203;
      v202((char *)v105, v100);
      if (v104)
      {
        swift_unknownObjectRetain();
        unint64_t v26 = (unint64_t)&off_10152A280;
        int64_t v106 = v101;
        goto LABEL_101;
      }
      unint64_t v107 = (uint64_t *)(v101 + OBJC_IVAR____TtC8Freeform8CRLBoard_objectUUIDMap);
      swift_beginAccess();
      uint64_t v108 = *v107;
      if (!*(void *)(v108 + 16))
      {
LABEL_133:
        v202(v196, v204);
        uint64_t result = swift_release();
        uint64_t v89 = (uint64_t)v194;
        unint64_t v88 = v195;
        if (!v195) {
          goto LABEL_77;
        }
        continue;
      }
      break;
    }
    swift_bridgeObjectRetain();
    unint64_t v109 = sub_100955FC8((uint64_t)v196);
    if ((v110 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      goto LABEL_133;
    }
    Swift::String v111 = (int64_t *)(*(void *)(v108 + 56) + 16 * v109);
    int64_t v106 = *v111;
    unint64_t v26 = v111[1];
    swift_unknownObjectRetain();
    swift_bridgeObjectRelease();
LABEL_101:
    v210 = (void (**)(uint64_t, char *))v26;
    uint64_t v112 = *(void *)(v197 + OBJC_IVAR____TtC8Freeform31CRLTransactableObservableDeltas_invalidationKeys);
    uint64_t v113 = *(void *)(v112 + 64);
    uint64_t v205 = v112 + 64;
    uint64_t v114 = 1 << *(unsigned char *)(v112 + 32);
    if (v114 < 64) {
      uint64_t v115 = ~(-1 << v114);
    }
    else {
      uint64_t v115 = -1;
    }
    unint64_t v116 = v115 & v113;
    v216 = (uint64_t *)(v197 + OBJC_IVAR____TtC8Freeform31CRLTransactableObservableDeltas_snapshot);
    int64_t v206 = (unint64_t)(v114 + 63) >> 6;
    unint64_t v199 = v26 + 32;
    uint64_t v208 = v26 + 96;
    v209 = (char *)(v26 + 80);
    uint64_t v211 = v112;
    swift_bridgeObjectRetain();
    int64_t v117 = 0;
    int64_t v212 = v106;
    while (2)
    {
      if (v116)
      {
        v213 = (void *)((v116 - 1) & v116);
        int64_t v214 = v117;
        unint64_t v118 = __clz(__rbit64(v116)) | (v117 << 6);
LABEL_122:
        uint64_t v123 = *(unsigned __int8 *)(*(void *)(v211 + 48) + v118);
        uint64_t v124 = *(void *)(*(void *)(v211 + 56) + 8 * v118);
        unint64_t v125 = (objc_class *)type metadata accessor for CRLPropertyMap();
        uint64_t v126 = (char *)objc_allocWithZone(v125);
        *(void *)&v126[OBJC_IVAR____TtC8Freeform14CRLPropertyMap_data] = &_swiftEmptyDictionarySingleton;
        v218.id receiver = v126;
        v218.Class super_class = v125;
        swift_bridgeObjectRetain();
        unint64_t v26 = (unint64_t)[super init];
        int64_t v127 = v212;
        uint64_t v128 = swift_getObjectType();
        uint64_t v129 = *v216;
        uint64_t v130 = v216[1];
        uint64_t v131 = v210;
        NSString v132 = v210[10];
        swift_unknownObjectRetain();
        LODWORD(v215) = v123;
        uint64_t v133 = v130;
        uint64_t v134 = v128;
        ((void (*)(unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void (**)(uint64_t, char *)))v132)(v26, v124, v123, v129, v133, v128, v131);
        swift_unknownObjectRelease();
        int64_t v135 = v127;
        unint64_t v136 = v26 + OBJC_IVAR____TtC8Freeform14CRLPropertyMap_data;
        swift_beginAccess();
        if (*(void *)(*(void *)v136 + 16))
        {
          [v207 registerChange:1 details:v26 forChangeSource:v135];
          uint64_t v137 = *(void *)v136;
          if (*(void *)(v137 + 16) && (uint64_t v138 = sub_1009563E8(4), (v139 & 1) != 0))
          {
            sub_100522E9C(*(void *)(v137 + 56) + 32 * v138, (uint64_t)v222, &qword_101672BF0);
            sub_100522F00((uint64_t)v222, (uint64_t *)&unk_1016725E0);
            unint64_t v140 = v198;
            v131[4](v134, (char *)v131);
            uint64_t v141 = v200;
            sub_100CB4BC8(v200, v140);
            v202((char *)v141, v204);
          }
          else
          {
            memset(v222, 0, 24);
            v222[3] = 1;
            sub_100522F00((uint64_t)v222, (uint64_t *)&unk_1016725E0);
          }
        }
        uint64_t v143 = *v216;
        uint64_t v142 = v216[1];
        uint64_t v144 = v131[12];
        swift_unknownObjectRetain();
        uint64_t v145 = ((uint64_t (*)(uint64_t, void, uint64_t, uint64_t, uint64_t, void (**)(uint64_t, char *)))v144)(v124, v215, v143, v142, v134, v131);
        swift_unknownObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v146 = *(void *)(v145 + 16);
        if (v146)
        {
          Swift::String v147 = (uint64_t *)(v145 + 48);
          do
          {
            uint64_t v148 = *(v147 - 2);
            uint64_t v149 = *v147;
            uint64_t v150 = *v147 + OBJC_IVAR____TtC8Freeform14CRLPropertyMap_data;
            swift_beginAccess();
            if (*(void *)(*(void *)v150 + 16)) {
              [v217 registerChange:1 details:v149 forChangeSource:v148];
            }
            v147 += 3;
            --v146;
          }
          while (v146);
        }

        swift_bridgeObjectRelease();
        unint64_t v116 = (unint64_t)v213;
        int64_t v117 = v214;
        continue;
      }
      break;
    }
    int64_t v119 = v117 + 1;
    if (__OFADD__(v117, 1))
    {
      __break(1u);
      goto LABEL_162;
    }
    if (v119 >= v206) {
      goto LABEL_74;
    }
    unint64_t v120 = *(void *)(v205 + 8 * v119);
    int64_t v121 = v117 + 1;
    if (v120) {
      goto LABEL_121;
    }
    int64_t v121 = v117 + 2;
    if (v117 + 2 >= v206) {
      goto LABEL_74;
    }
    unint64_t v120 = *(void *)(v205 + 8 * v121);
    if (v120) {
      goto LABEL_121;
    }
    int64_t v121 = v117 + 3;
    if (v117 + 3 >= v206) {
      goto LABEL_74;
    }
    unint64_t v120 = *(void *)(v205 + 8 * v121);
    if (v120)
    {
LABEL_121:
      v213 = (void *)((v120 - 1) & v120);
      int64_t v214 = v121;
      unint64_t v118 = __clz(__rbit64(v120)) + (v121 << 6);
      goto LABEL_122;
    }
    uint64_t v122 = v117 + 4;
    if (v117 + 4 < v206)
    {
      unint64_t v120 = *(void *)(v205 + 8 * v122);
      if (!v120)
      {
        while (1)
        {
          int64_t v121 = v122 + 1;
          if (__OFADD__(v122, 1)) {
            break;
          }
          if (v121 >= v206) {
            goto LABEL_74;
          }
          unint64_t v120 = *(void *)(v205 + 8 * v121);
          ++v122;
          if (v120) {
            goto LABEL_121;
          }
        }
LABEL_162:
        __break(1u);
LABEL_163:
        __break(1u);
LABEL_164:
        __break(1u);
LABEL_165:
        __break(1u);
        while (2)
        {
          __break(1u);
LABEL_167:
          __break(1u);
LABEL_168:
          __break(1u);
LABEL_169:
          swift_bridgeObjectRetain();
          uint64_t v152 = _CocoaArrayWrapper.endIndex.getter();
          swift_bridgeObjectRelease();
          if (!v152) {
            goto LABEL_158;
          }
LABEL_137:
          unint64_t v153 = 0;
          unint64_t v154 = v26 & 0xC000000000000001;
          uint64_t v208 = v26 & 0xFFFFFFFFFFFFFF8;
          int64_t v206 = v26 + 32;
          uint64_t v155 = &selRef_beginHandwritingModeIfNeeded;
          uint64_t v211 = v152;
          int64_t v212 = v26;
          v209 = (char *)&type metadata for Any + 8;
          v210 = (void (**)(uint64_t, char *))(v26 & 0xC000000000000001);
          while (1)
          {
LABEL_139:
            if (v154)
            {
              id v156 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
            }
            else
            {
              if (v153 >= *(void *)(v208 + 16)) {
                goto LABEL_165;
              }
              id v156 = *(id *)(v206 + 8 * v153);
            }
            unint64_t v157 = v156;
            if (__OFADD__(v153++, 1)) {
              goto LABEL_163;
            }
            id v159 = [v156 v155[426]];
            _bridgeAnyObjectToAny(_:)();
            swift_unknownObjectRelease();
            sub_1005057FC(&qword_101672A78);
            if (swift_dynamicCast()) {
              break;
            }

            if (v153 == v152) {
              goto LABEL_158;
            }
          }
          unint64_t v26 = v220;
          uint64_t v160 = v221;
          uint64_t v161 = swift_getObjectType();
          (*(void (**)(uint64_t, uint64_t))(v160 + 32))(v161, v160);
          id v162 = [v157 changes];
          type metadata accessor for CRLChangeRecord();
          unint64_t v163 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

          v213 = v157;
          int64_t v214 = v153;
          if (v163 >> 62)
          {
            swift_bridgeObjectRetain();
            uint64_t v164 = _CocoaArrayWrapper.endIndex.getter();
            swift_bridgeObjectRelease();
            if (v164)
            {
LABEL_147:
              if (v164 < 1) {
                continue;
              }
              uint64_t v165 = 0;
              unint64_t v215 = v163 & 0xC000000000000001;
              v216 = (uint64_t *)v163;
              do
              {
                if (v215) {
                  v167 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
                }
                else {
                  v167 = (char *)*(id *)(v163 + 8 * v165 + 32);
                }
                v168 = v167;
                unint64_t v169 = sub_100A45DBC((uint64_t)_swiftEmptyArrayStorage);
                v170 = (objc_class *)type metadata accessor for CRLPropertyMap();
                uint64_t v171 = (char *)objc_allocWithZone(v170);
                *(void *)&v171[OBJC_IVAR____TtC8Freeform14CRLPropertyMap_data] = v169;
                v219.id receiver = v171;
                v219.Class super_class = v170;
                uint64_t v172 = (char *)[super init];
                uint64_t v174 = __chkstk_darwin(v172, v173);
                v181[-4] = v223;
                v181[-3] = v201;
                v181[-2] = v174;
                id v176 = v175;
                sub_100A55088((void (*)(uint64_t, _OWORD *, char *))sub_100794B04);

                uint64_t v177 = &v172[OBJC_IVAR____TtC8Freeform14CRLPropertyMap_data];
                swift_beginAccess();
                if (*(void *)(*(void *)v177 + 16))
                {
                  uint64_t v166 = *(unsigned int *)&v168[OBJC_IVAR____TtC8Freeform15CRLChangeRecord_kind];
                  swift_unknownObjectRetain();
                  [v207 registerChange:v166 details:v172 forChangeSource:v26];

                  swift_unknownObjectRelease();
                }
                else
                {

                  v168 = v172;
                }
                ++v165;

                unint64_t v163 = (unint64_t)v216;
              }
              while (v164 != v165);
            }
          }
          else
          {
            uint64_t v164 = *(void *)((v163 & 0xFFFFFFFFFFFFFF8) + 0x10);
            if (v164) {
              goto LABEL_147;
            }
          }
          break;
        }

        swift_bridgeObjectRelease();
        swift_unknownObjectRelease();
        (*v203)(v201, v204);
        uint64_t v152 = v211;
        unint64_t v26 = v212;
        unint64_t v153 = v214;
        unint64_t v154 = (unint64_t)v210;
        uint64_t v155 = &selRef_beginHandwritingModeIfNeeded;
        if (v214 == v211) {
          goto LABEL_158;
        }
        goto LABEL_139;
      }
      int64_t v121 = v117 + 4;
      goto LABEL_121;
    }
LABEL_74:
    swift_unknownObjectRelease();
    swift_release();
    swift_release();
    uint64_t result = ((uint64_t (*)(char *, uint64_t))v202)(v196, v204);
    uint64_t v89 = (uint64_t)v194;
    unint64_t v88 = v195;
    if (v195) {
      continue;
    }
    break;
  }
LABEL_77:
  int64_t v94 = v193 + 1;
  if (__OFADD__(v193, 1)) {
    goto LABEL_164;
  }
  if (v94 >= v184) {
    goto LABEL_94;
  }
  unint64_t v95 = *(void *)(v183 + 8 * v94);
  if (v95) {
    goto LABEL_80;
  }
  int64_t v96 = v193 + 2;
  ++v193;
  if (v94 + 1 >= v184) {
    goto LABEL_94;
  }
  unint64_t v95 = *(void *)(v183 + 8 * v96);
  if (v95) {
    goto LABEL_83;
  }
  int64_t v193 = v94 + 1;
  if (v94 + 2 >= v184)
  {
LABEL_94:
    uint64_t v97 = sub_1005057FC(&qword_10167F6A8);
    uint64_t v89 = (uint64_t)v194;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v97 - 8) + 56))(v194, 1, 1, v97);
    uint64_t v195 = 0;
    goto LABEL_95;
  }
  unint64_t v95 = *(void *)(v183 + 8 * (v94 + 2));
  if (v95)
  {
    v94 += 2;
LABEL_80:
    uint64_t v195 = (v95 - 1) & v95;
    unint64_t v90 = __clz(__rbit64(v95)) + (v94 << 6);
    int64_t v193 = v94;
    uint64_t v89 = (uint64_t)v194;
    goto LABEL_76;
  }
  int64_t v96 = v94 + 3;
  int64_t v193 = v94 + 2;
  if (v94 + 3 >= v184) {
    goto LABEL_94;
  }
  unint64_t v95 = *(void *)(v183 + 8 * v96);
  if (v95)
  {
LABEL_83:
    int64_t v94 = v96;
    goto LABEL_80;
  }
  while (1)
  {
    int64_t v94 = v96 + 1;
    if (__OFADD__(v96, 1)) {
      break;
    }
    if (v94 >= v184)
    {
      int64_t v193 = v181[0];
      goto LABEL_94;
    }
    unint64_t v95 = *(void *)(v183 + 8 * v94);
    ++v96;
    if (v95) {
      goto LABEL_80;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_100793DF4(Swift::UInt a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t a5)
{
  uint64_t v9 = type metadata accessor for UUID();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v12 = __chkstk_darwin(v9, v11);
  uint64_t v14 = v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0) + 16;
  __chkstk_darwin(v12, v15);
  uint64_t v17 = v23 - v16 + 16;
  if (a1 == 4)
  {
    uint64_t v18 = *a4;
    swift_bridgeObjectRetain();
    char v19 = sub_1006E3E24(a5, v18);
    uint64_t result = swift_bridgeObjectRelease();
    if (v19) {
      return result;
    }
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v14, a5, v9);
    sub_100CB4BC8((uint64_t)v17, v14);
    (*(void (**)(unsigned char *, uint64_t))(v10 + 8))(v17, v9);
    sub_100522E9C(a2, (uint64_t)v23, &qword_101672BF0);
    swift_beginAccess();
    Swift::UInt v21 = 4;
  }
  else
  {
    sub_100522E9C(a2, (uint64_t)v23, &qword_101672BF0);
    swift_beginAccess();
    Swift::UInt v21 = a1;
  }
  sub_10057D61C((uint64_t)v23, v21);
  return swift_endAccess();
}

void sub_100793FE8(void *a1, uint64_t a2, char a3)
{
  if (a1)
  {
    id v4 = a1;
    sub_100F6D6E8(v4, a3);
  }
  else
  {
    sub_100F6DFD4();
  }
}

uint64_t sub_100794064(uint64_t a1, char a2, char a3, uint64_t a4, char a5, uint64_t a6)
{
  return sub_1007941A4(a1, a2, a3, a4, a5, a6, &qword_10167F6B8, (void (*)(uint64_t))type metadata accessor for CRLInertOwner);
}

uint64_t sub_1007940B4(uint64_t a1, char a2, char a3, uint64_t a4, char a5, uint64_t a6)
{
  return sub_1007941A4(a1, a2, a3, a4, a5, a6, (unint64_t *)&qword_10167BA48, (void (*)(uint64_t))type metadata accessor for CRLBoard);
}

uint64_t sub_100794104(uint64_t a1, char a2, char a3, uint64_t a4, char a5, uint64_t a6)
{
  return sub_1007941A4(a1, a2, a3, a4, a5, a6, &qword_10167F6C8, (void (*)(uint64_t))type metadata accessor for CRLSerializableObjectReader.PartialTreeOwner);
}

uint64_t sub_100794154(uint64_t a1, char a2, char a3, uint64_t a4, char a5, uint64_t a6)
{
  return sub_1007941A4(a1, a2, a3, a4, a5, a6, &qword_10167F6C0, (void (*)(uint64_t))type metadata accessor for CRLImmutableBoard);
}

uint64_t sub_1007941A4(uint64_t a1, char a2, char a3, uint64_t a4, char a5, uint64_t a6, unint64_t *a7, void (*a8)(uint64_t))
{
  uint64_t v14 = sub_100794B10(a7, a8);
  *(void *)(a6 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_modifications) = &_swiftEmptyDictionarySingleton;
  *(void *)(a6 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_undoableModifications) = &_swiftEmptyDictionarySingleton;
  *(void *)(a6 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_createdObjects) = &_swiftEmptySetSingleton;
  *(void *)(a6 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_undoableCreatedObjects) = &_swiftEmptySetSingleton;
  *(void *)(a6 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_deletedObjects) = &_swiftEmptySetSingleton;
  *(void *)(a6 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_deletedNewlyCreatedObjects) = &_swiftEmptySetSingleton;
  *(void *)(a6 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_deletedObjectOriginalInstances) = &_swiftEmptySetSingleton;
  *(void *)(a6 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_deletedOrphans) = &_swiftEmptyArrayStorage;
  *(unsigned char *)(a6 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_markingState) = 0;
  *(void *)(a6 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_markedDeletedObjectIds) = &_swiftEmptySetSingleton;
  *(void *)(a6 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_markedCreatedObjectIds) = &_swiftEmptySetSingleton;
  *(unsigned char *)(a6 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_active) = 1;
  *(void *)(a6 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext__observableDelta) = 0;
  *(void *)(a6 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_affectedItemUUIDSetForUndoableItems) = &_swiftEmptySetSingleton;
  *(unsigned char *)(a6 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_undoableAffectedItemSetNeedsUpdate) = 0;
  uint64_t v15 = a6 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_id;
  uint64_t v16 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 32))(v15, a4, v16);
  uint64_t v17 = (void *)(a6 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_transactableOwner);
  *uint64_t v17 = a1;
  v17[1] = v14;
  *(unsigned char *)(a6 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_undoable) = a2;
  *(unsigned char *)(a6 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_trackChanges) = a3;
  *(unsigned char *)(a6 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_dirtiesOwner) = a5;
  return a6;
}

uint64_t sub_100794394(unsigned __int8 a1, char a2, uint64_t a3, unsigned __int8 a4, void *a5, void *a6)
{
  if (([self isMainThread] & 1) == 0)
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"_execute(commandType:shouldSendChangeNotificationsWhenEnqueuedInProgressiveGroup:commandApplier:)", 97, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandController.swift", 92, 2, 896, (uint64_t)"This operation must only be performed on the main thread.", 57, 2u, (uint64_t)_swiftEmptyArrayStorage);
    LOBYTE(v30) = 2;
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"_execute(commandType:shouldSendChangeNotificationsWhenEnqueuedInProgressiveGroup:commandApplier:)", 97, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandController.swift", 92, 2, 896);
    [self logFullBacktrace:@"This operation must only be performed on the main thread." 57 v30];
  }
  uint64_t v12 = OBJC_IVAR____TtC8Freeform20CRLCommandController__isExecuting;
  if (*(unsigned char *)(a3 + OBJC_IVAR____TtC8Freeform20CRLCommandController__isExecuting) != 1)
  {
    *(unsigned char *)(a3 + OBJC_IVAR____TtC8Freeform20CRLCommandController__isExecuting) = 1;
    sub_100792200(a1);
    unint64_t v13 = *(void *)(a3 + OBJC_IVAR____TtC8Freeform20CRLCommandController__currentTransactionContext);
    if (!v13)
    {
      sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"_execute(commandType:shouldSendChangeNotificationsWhenEnqueuedInProgressiveGroup:commandApplier:)", 97, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandController.swift", 92, 2, 904, (uint64_t)"Tried to call _execute without an open transaction context.", 59, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_100586FD4((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Tried to call _execute without an open transaction context.");
      uint64_t v27 = 904;
      goto LABEL_40;
    }
    uint64_t v14 = swift_retain();
    sub_100791ED4(v14, a4, a5, (uint64_t)a6);
    unint64_t v15 = a3 + OBJC_IVAR____TtC8Freeform20CRLCommandController_openGroupDatas;
    swift_beginAccess();
    unint64_t v16 = *(void *)v15;
    if (*(void *)v15 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v17 = _CocoaArrayWrapper.endIndex.getter();
      if (!v17) {
        goto LABEL_32;
      }
    }
    else
    {
      uint64_t v17 = *(void *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (!v17) {
        goto LABEL_32;
      }
    }
    unint64_t v18 = v17 - 1;
    if (__OFSUB__(v17, 1))
    {
      __break(1u);
    }
    else if ((v16 & 0xC000000000000001) == 0)
    {
      if ((v18 & 0x8000000000000000) != 0)
      {
        __break(1u);
      }
      else if (v18 < *(void *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        uint64_t v19 = *(void *)(v16 + 8 * v18 + 32);
        swift_retain();
        goto LABEL_12;
      }
      __break(1u);
      goto LABEL_31;
    }
    uint64_t v19 = specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_12:
    swift_bridgeObjectRelease();
    int v20 = *(unsigned __int8 *)(v19 + 16);
    swift_release();
    if ((v20 - 1) > 2)
    {
LABEL_24:
      uint64_t result = swift_release();
LABEL_33:
      *(unsigned char *)(a3 + v12) = 0;
      return result;
    }
    if (a2)
    {
      Swift::UInt v21 = (void *)sub_1010259B8(0, 0);
      sub_100792760(v13, (uint64_t)v21, 0, 0);
    }
    unint64_t v15 = *(void *)v15;
    if (!(v15 >> 62))
    {
      uint64_t v22 = *(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v22) {
        goto LABEL_17;
      }
      goto LABEL_32;
    }
LABEL_31:
    swift_bridgeObjectRetain();
    uint64_t v22 = _CocoaArrayWrapper.endIndex.getter();
    if (v22)
    {
LABEL_17:
      unint64_t v23 = v22 - 1;
      if (__OFSUB__(v22, 1))
      {
        __break(1u);
      }
      else if ((v15 & 0xC000000000000001) == 0)
      {
        if ((v23 & 0x8000000000000000) != 0)
        {
          __break(1u);
        }
        else if (v23 < *(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          uint64_t v24 = *(void *)(v15 + 8 * v23 + 32);
          swift_retain();
          goto LABEL_22;
        }
        __break(1u);
        goto LABEL_38;
      }
      uint64_t v24 = specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_22:
      swift_bridgeObjectRelease();
      char v25 = *(unsigned char *)(v24 + 16);
      swift_release();
      if ((v25 & 0xFE) == 2) {
        sub_1007915A0();
      }
      goto LABEL_24;
    }
LABEL_32:
    swift_release();
    uint64_t result = swift_bridgeObjectRelease();
    goto LABEL_33;
  }
LABEL_38:
  sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"_execute(commandType:shouldSendChangeNotificationsWhenEnqueuedInProgressiveGroup:commandApplier:)", 97, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandController.swift", 92, 2, 898, (uint64_t)"Should not execute a command while executing another command.", 61, 2u, (uint64_t)_swiftEmptyArrayStorage);
  sub_100586FD4((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Should not execute a command while executing another command.");
  uint64_t v27 = 898;
LABEL_40:
  sub_1005871AC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"_execute(commandType:shouldSendChangeNotificationsWhenEnqueuedInProgressiveGroup:commandApplier:)", 97, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandController.swift", 92, 2, v27);
  SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v28, v29);

  uint64_t result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100794A9C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1005057FC(&qword_10167F6A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100794B04(Swift::UInt a1, uint64_t a2, uint64_t a3)
{
  return sub_100793DF4(a1, a2, a3, *(uint64_t **)(v3 + 16), *(void *)(v3 + 24));
}

uint64_t sub_100794B10(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100794B58(void *a1, int a2, int a3)
{
  int v281 = a3;
  int v282 = a2;
  v283 = a1;
  uint64_t v4 = type metadata accessor for CRLBoard.RealTimeSessionInfo(0);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4, v6);
  uint64_t v8 = (char *)&v268 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1005057FC((uint64_t *)&unk_10169A1A0);
  __chkstk_darwin(v9 - 8, v10);
  uint64_t v12 = (char *)&v268 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for CRLBoardCRDTData(0);
  __chkstk_darwin(v13 - 8, v14);
  uint64_t v284 = (uint64_t)&v268 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for UUID();
  uint64_t v296 = *(void *)(v16 - 8);
  v297 = (char *)v16;
  uint64_t v18 = __chkstk_darwin(v16, v17);
  v295 = (char *)&v268 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = __chkstk_darwin(v18, v20);
  v293 = (char *)&v268 - v22;
  uint64_t v24 = __chkstk_darwin(v21, v23);
  unint64_t v26 = (char *)&v268 - v25;
  __chkstk_darwin(v24, v27);
  Swift::String v29 = (char *)&v268 - v28;
  v288 = v3;
  uint64_t v30 = *(void *)&v3[OBJC_IVAR____TtC8Freeform20CRLCommandController__currentTransactionContext];
  if (!v30) {
    goto LABEL_162;
  }
  v269 = v12;
  uint64_t v270 = v5;
  uint64_t v271 = v4;
  v268 = (uint64_t *)v8;
  uint64_t v280 = OBJC_IVAR____TtC8Freeform20CRLCommandController__currentTransactionContext;
  unint64_t v31 = *(uint64_t (**)(void))(*(void *)v30 + 720);
  uint64_t v32 = swift_retain();
  uint64_t v279 = v31();
  v287 = 0;
  unint64_t v289 = v32;
  uint64_t v33 = (uint64_t *)(v32 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_createdObjects);
  swift_beginAccess();
  v286 = v33;
  uint64_t v34 = *v33;
  unint64_t v35 = *v33 & 0xC000000000000001;
  if (v35)
  {
    swift_bridgeObjectRetain();
    uint64_t v36 = __CocoaSet.count.getter();
  }
  else
  {
    uint64_t v36 = *(void *)(v34 + 16);
    swift_bridgeObjectRetain();
  }
  v292 = v26;
  if (v36)
  {
    v310 = _swiftEmptyArrayStorage;
    sub_1006BB544(0, v36 & ~(v36 >> 63), 0);
    if (v35)
    {
      uint64_t v37 = __CocoaSet.startIndex.getter();
      unsigned __int8 v39 = 1;
    }
    else
    {
      uint64_t v37 = sub_1006678A4(v34);
      unsigned __int8 v39 = v41 & 1;
    }
    unint64_t v311 = v37;
    uint64_t v312 = v38;
    unsigned __int8 v313 = v39;
    if (v36 < 0) {
      goto LABEL_148;
    }
    unint64_t v294 = v296 + 32;
    uint64_t v42 = v34 & 0xFFFFFFFFFFFFFF8;
    if (v34 < 0) {
      uint64_t v42 = v34;
    }
    uint64_t v290 = (uint64_t)v29;
    uint64_t v291 = v42;
    do
    {
      while (1)
      {
        uint64_t v52 = *(void *)(sub_1006670B0(v311, v312, v313, v34) + 24);
        uint64_t ObjectType = swift_getObjectType();
        (*(void (**)(uint64_t, uint64_t))(v52 + 32))(ObjectType, v52);
        swift_release();
        unint64_t v54 = v310;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1006BB544(0, *((void *)v54 + 2) + 1, 1);
          unint64_t v54 = v310;
        }
        unint64_t v56 = *((void *)v54 + 2);
        unint64_t v55 = *((void *)v54 + 3);
        if (v56 >= v55 >> 1)
        {
          sub_1006BB544(v55 > 1, v56 + 1, 1);
          unint64_t v54 = v310;
        }
        *((void *)v54 + 2) = v56 + 1;
        (*(void (**)(unint64_t, char *, char *))(v296 + 32))((unint64_t)v54+ ((*(unsigned __int8 *)(v296 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v296 + 80))+ *(void *)(v296 + 72) * v56, v29, v297);
        v310 = v54;
        if (v35) {
          break;
        }
        uint64_t v43 = v311;
        uint64_t v44 = v312;
        char v45 = v313;
        uint64_t v46 = sub_100666C8C(v311, v312, v313, v34);
        uint64_t v48 = v47;
        char v50 = v49;
        sub_10056A4C4(v43, v44, v45);
        unint64_t v311 = v46;
        unint64_t v26 = v292;
        uint64_t v312 = v48;
        unsigned __int8 v51 = v50 & 1;
        unint64_t v35 = 0;
        Swift::String v29 = (char *)v290;
        unsigned __int8 v313 = v51;
        if (!--v36) {
          goto LABEL_24;
        }
      }
      if ((v313 & 1) == 0) {
        goto LABEL_155;
      }
      if (__CocoaSet.Index.handleBitPattern.getter()) {
        swift_isUniquelyReferenced_nonNull_native();
      }
      sub_1005057FC(&qword_10167F6D0);
      unint64_t v57 = (void (*)(long long *, void))Set.Index._asCocoa.modify();
      __CocoaSet.formIndex(after:isUnique:)();
      v57(&v298, 0);
      --v36;
    }
    while (v36);
LABEL_24:
    sub_10056A4C4(v311, v312, v313);
    swift_bridgeObjectRelease();
    uint64_t v40 = v310;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v40 = _swiftEmptyArrayStorage;
  }
  uint64_t v277 = sub_100CDCB64((uint64_t)v40);
  swift_bridgeObjectRelease();
  unint64_t v58 = v289;
  uint64_t v59 = v289 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_modifications;
  swift_beginAccess();
  uint64_t v290 = v59;
  uint64_t v60 = swift_bridgeObjectRetain();
  uint64_t v61 = v287;
  uint64_t v62 = sub_10078A8D8(v60);
  v285 = v61;
  swift_bridgeObjectRelease();
  uint64_t v276 = sub_100CDCB64(v62);
  swift_bridgeObjectRelease();
  uint64_t v63 = (uint64_t *)(v58 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_deletedObjects);
  swift_beginAccess();
  v287 = v63;
  uint64_t v64 = *v63;
  unint64_t v65 = *v63 & 0xC000000000000001;
  uint64_t v66 = v293;
  if (!v65)
  {
    uint64_t v67 = *(void *)(v64 + 16);
    swift_bridgeObjectRetain();
    if (v67) {
      goto LABEL_27;
    }
LABEL_30:
    swift_bridgeObjectRelease();
    uint64_t v71 = _swiftEmptyArrayStorage;
    goto LABEL_47;
  }
  swift_bridgeObjectRetain();
  uint64_t v67 = __CocoaSet.count.getter();
  if (!v67) {
    goto LABEL_30;
  }
LABEL_27:
  v304 = _swiftEmptyArrayStorage;
  sub_1006BB544(0, v67 & ~(v67 >> 63), 0);
  if (v65)
  {
    uint64_t v68 = __CocoaSet.startIndex.getter();
    unsigned __int8 v70 = 1;
  }
  else
  {
    uint64_t v68 = sub_1006678A4(v64);
    unsigned __int8 v70 = v72 & 1;
  }
  unint64_t v307 = v68;
  uint64_t v308 = v69;
  unsigned __int8 v309 = v70;
  if (v67 < 0) {
    goto LABEL_149;
  }
  uint64_t v73 = v64 & 0xFFFFFFFFFFFFFF8;
  if (v64 < 0) {
    uint64_t v73 = v64;
  }
  unint64_t v294 = v73;
  uint64_t v291 = v64;
  do
  {
    while (1)
    {
      uint64_t v83 = *(void *)(sub_1006670B0(v307, v308, v309, v64) + 24);
      uint64_t v84 = swift_getObjectType();
      (*(void (**)(uint64_t, uint64_t))(v83 + 32))(v84, v83);
      swift_release();
      uint64_t v85 = v304;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1006BB544(0, *((void *)v85 + 2) + 1, 1);
        uint64_t v85 = v304;
      }
      unint64_t v87 = *((void *)v85 + 2);
      unint64_t v86 = *((void *)v85 + 3);
      if (v87 >= v86 >> 1)
      {
        sub_1006BB544(v86 > 1, v87 + 1, 1);
        uint64_t v85 = v304;
      }
      *((void *)v85 + 2) = v87 + 1;
      (*(void (**)(unint64_t, char *, char *))(v296 + 32))((unint64_t)v85+ ((*(unsigned __int8 *)(v296 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v296 + 80))+ *(void *)(v296 + 72) * v87, v26, v297);
      v304 = v85;
      if (v65) {
        break;
      }
      uint64_t v74 = v307;
      uint64_t v75 = v308;
      char v76 = v309;
      uint64_t v77 = sub_100666C8C(v307, v308, v309, v64);
      uint64_t v79 = v78;
      char v81 = v80;
      sub_10056A4C4(v74, v75, v76);
      unint64_t v307 = v77;
      uint64_t v308 = v79;
      unint64_t v65 = 0;
      uint64_t v64 = v291;
      unint64_t v26 = v292;
      unsigned __int8 v82 = v81 & 1;
      uint64_t v66 = v293;
      unsigned __int8 v309 = v82;
      if (!--v67) {
        goto LABEL_46;
      }
    }
    if ((v309 & 1) == 0) {
      goto LABEL_156;
    }
    if (__CocoaSet.Index.handleBitPattern.getter()) {
      swift_isUniquelyReferenced_nonNull_native();
    }
    sub_1005057FC(&qword_10167F6D0);
    unint64_t v88 = (void (*)(long long *, void))Set.Index._asCocoa.modify();
    __CocoaSet.formIndex(after:isUnique:)();
    v88(&v298, 0);
    --v67;
  }
  while (v67);
LABEL_46:
  sub_10056A4C4(v307, v308, v309);
  swift_bridgeObjectRelease();
  uint64_t v71 = v304;
LABEL_47:
  uint64_t v89 = sub_100CDCB64((uint64_t)v71);
  swift_bridgeObjectRelease();
  unint64_t v90 = (uint64_t *)(v289 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_deletedNewlyCreatedObjects);
  swift_beginAccess();
  v278 = v90;
  uint64_t v91 = *v90;
  unint64_t v92 = *v90 & 0xC000000000000001;
  if (!v92)
  {
    uint64_t v93 = *(void *)(v91 + 16);
    swift_bridgeObjectRetain();
    v275 = (uint64_t (*)(uint64_t))v89;
    if (v93) {
      goto LABEL_49;
    }
LABEL_52:
    swift_bridgeObjectRelease();
    uint64_t v97 = _swiftEmptyArrayStorage;
    goto LABEL_69;
  }
  swift_bridgeObjectRetain();
  uint64_t v93 = __CocoaSet.count.getter();
  v275 = (uint64_t (*)(uint64_t))v89;
  if (!v93) {
    goto LABEL_52;
  }
LABEL_49:
  v303 = _swiftEmptyArrayStorage;
  sub_1006BB544(0, v93 & ~(v93 >> 63), 0);
  if (v92)
  {
    int64_t v94 = (double *)__CocoaSet.startIndex.getter();
    unsigned __int8 v96 = 1;
  }
  else
  {
    int64_t v94 = (double *)sub_1006678A4(v91);
    unsigned __int8 v96 = v98 & 1;
  }
  v304 = v94;
  uint64_t v305 = v95;
  unsigned __int8 v306 = v96;
  if (v93 < 0) {
    goto LABEL_150;
  }
  uint64_t v99 = v91 & 0xFFFFFFFFFFFFFF8;
  if (v91 < 0) {
    uint64_t v99 = v91;
  }
  unint64_t v294 = v99;
  v292 = (char *)v91;
  do
  {
    while (1)
    {
      uint64_t v109 = *(void *)(sub_1006670B0((unint64_t)v304, v305, v306, v91) + 24);
      uint64_t v110 = swift_getObjectType();
      (*(void (**)(uint64_t, uint64_t))(v109 + 32))(v110, v109);
      swift_release();
      Swift::String v111 = v303;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1006BB544(0, *((void *)v111 + 2) + 1, 1);
        Swift::String v111 = v303;
      }
      unint64_t v113 = *((void *)v111 + 2);
      unint64_t v112 = *((void *)v111 + 3);
      if (v113 >= v112 >> 1)
      {
        sub_1006BB544(v112 > 1, v113 + 1, 1);
        Swift::String v111 = v303;
      }
      *((void *)v111 + 2) = v113 + 1;
      (*(void (**)(unint64_t, char *, char *))(v296 + 32))((unint64_t)v111+ ((*(unsigned __int8 *)(v296 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v296 + 80))+ *(void *)(v296 + 72) * v113, v66, v297);
      v303 = v111;
      if (v92) {
        break;
      }
      uint64_t v100 = v304;
      uint64_t v101 = v305;
      char v102 = v306;
      uint64_t v103 = (double *)sub_100666C8C(v304, v305, v306, v91);
      uint64_t v105 = v104;
      char v107 = v106;
      sub_10056A4C4((uint64_t)v100, v101, v102);
      v304 = v103;
      unint64_t v92 = 0;
      uint64_t v305 = v105;
      unsigned __int8 v108 = v107 & 1;
      uint64_t v91 = (uint64_t)v292;
      uint64_t v66 = v293;
      unsigned __int8 v306 = v108;
      if (!--v93) {
        goto LABEL_68;
      }
    }
    if ((v306 & 1) == 0) {
      goto LABEL_157;
    }
    if (__CocoaSet.Index.handleBitPattern.getter()) {
      swift_isUniquelyReferenced_nonNull_native();
    }
    sub_1005057FC(&qword_10167F6D0);
    uint64_t v114 = (void (*)(long long *, void))Set.Index._asCocoa.modify();
    __CocoaSet.formIndex(after:isUnique:)();
    v114(&v298, 0);
    --v93;
  }
  while (v93);
LABEL_68:
  sub_10056A4C4((uint64_t)v304, v305, v306);
  swift_bridgeObjectRelease();
  uint64_t v97 = v303;
LABEL_69:
  uint64_t v274 = sub_100CDCB64((uint64_t)v97);
  swift_bridgeObjectRelease();
  uint64_t v115 = *v286;
  unint64_t v294 = *v286 & 0xC000000000000001;
  if ((v115 & 0xC000000000000001) == 0)
  {
    uint64_t v116 = *(void *)(v115 + 16);
    swift_bridgeObjectRetain();
    if (v116) {
      goto LABEL_71;
    }
LABEL_74:
    swift_bridgeObjectRelease();
    unint64_t v120 = _swiftEmptyArrayStorage;
    goto LABEL_91;
  }
  swift_bridgeObjectRetain();
  uint64_t v116 = __CocoaSet.count.getter();
  if (!v116) {
    goto LABEL_74;
  }
LABEL_71:
  v303 = _swiftEmptyArrayStorage;
  sub_1006BB504(0, v116 & ~(v116 >> 63), 0);
  if (v294)
  {
    int64_t v117 = (double *)__CocoaSet.startIndex.getter();
    unsigned __int8 v119 = 1;
  }
  else
  {
    int64_t v117 = (double *)sub_1006678A4(v115);
    unsigned __int8 v119 = v121 & 1;
  }
  v304 = v117;
  uint64_t v305 = v118;
  unsigned __int8 v306 = v119;
  if (v116 < 0) {
    goto LABEL_151;
  }
  uint64_t v122 = (void (**)(char *, char *))(v296 + 8);
  uint64_t v123 = v115 & 0xFFFFFFFFFFFFFF8;
  if (v115 < 0) {
    uint64_t v123 = v115;
  }
  v293 = (char *)v123;
  do
  {
    while (1)
    {
      uint64_t v132 = sub_1006670B0((unint64_t)v304, v305, v306, v115);
      uint64_t v133 = *(void *)(v132 + 24);
      uint64_t v134 = swift_getObjectType();
      int64_t v135 = v295;
      (*(void (**)(uint64_t, uint64_t))(v133 + 32))(v134, v133);
      uint64_t v136 = UUID.uuidString.getter();
      uint64_t v138 = v137;
      (*v122)(v135, v297);
      long long v298 = *(_OWORD *)(v132 + 16);
      swift_unknownObjectRetain();
      sub_1005057FC(&qword_101672A78);
      uint64_t v139 = String.init<A>(describing:)();
      uint64_t v141 = v140;
      *(void *)&long long v298 = v136;
      *((void *)&v298 + 1) = v138;
      swift_bridgeObjectRetain();
      v142._countAndFlagsBits = v139;
      v142._object = v141;
      String.append(_:)(v142);
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      long long v143 = v298;
      uint64_t v144 = v303;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1006BB504(0, *((void *)v144 + 2) + 1, 1);
        uint64_t v144 = v303;
      }
      unint64_t v146 = *((void *)v144 + 2);
      unint64_t v145 = *((void *)v144 + 3);
      if (v146 >= v145 >> 1)
      {
        sub_1006BB504(v145 > 1, v146 + 1, 1);
        uint64_t v144 = v303;
      }
      *((void *)v144 + 2) = v146 + 1;
      *(_OWORD *)&v144[2 * v146 + 4] = v143;
      if (v294) {
        break;
      }
      uint64_t v124 = v304;
      uint64_t v125 = v305;
      char v126 = v306;
      int64_t v127 = (double *)sub_100666C8C(v304, v305, v306, v115);
      uint64_t v129 = v128;
      char v131 = v130;
      sub_10056A4C4((uint64_t)v124, v125, v126);
      v304 = v127;
      uint64_t v305 = v129;
      unsigned __int8 v306 = v131 & 1;
      if (!--v116) {
        goto LABEL_90;
      }
    }
    if ((v306 & 1) == 0) {
      goto LABEL_158;
    }
    if (__CocoaSet.Index.handleBitPattern.getter()) {
      swift_isUniquelyReferenced_nonNull_native();
    }
    sub_1005057FC(&qword_10167F6D0);
    Swift::String v147 = (void (*)(long long *, void))Set.Index._asCocoa.modify();
    __CocoaSet.formIndex(after:isUnique:)();
    v147(&v298, 0);
    --v116;
  }
  while (v116);
LABEL_90:
  sub_10056A4C4((uint64_t)v304, v305, v306);
  swift_bridgeObjectRelease();
  unint64_t v120 = v303;
LABEL_91:
  *(void *)&long long v298 = v120;
  uint64_t v148 = sub_1005057FC((uint64_t *)&unk_1016773F0);
  unint64_t v149 = sub_10056547C();
  v286 = (uint64_t *)BidirectionalCollection<>.joined(separator:)();
  uint64_t v273 = v150;
  swift_bridgeObjectRelease();
  uint64_t v151 = swift_bridgeObjectRetain();
  uint64_t v152 = sub_10078ABF0(v151);
  swift_bridgeObjectRelease();
  *(void *)&long long v298 = v152;
  uint64_t v291 = v149;
  v292 = (char *)v148;
  uint64_t v290 = BidirectionalCollection<>.joined(separator:)();
  v285 = v153;
  swift_bridgeObjectRelease();
  uint64_t v154 = *v287;
  unint64_t v294 = *v287 & 0xC000000000000001;
  if ((v154 & 0xC000000000000001) == 0)
  {
    uint64_t v155 = *(void *)(v154 + 16);
    swift_bridgeObjectRetain();
    if (v155) {
      goto LABEL_93;
    }
LABEL_96:
    swift_bridgeObjectRelease();
    id v159 = _swiftEmptyArrayStorage;
    goto LABEL_113;
  }
  swift_bridgeObjectRetain();
  uint64_t v155 = __CocoaSet.count.getter();
  if (!v155) {
    goto LABEL_96;
  }
LABEL_93:
  v303 = _swiftEmptyArrayStorage;
  sub_1006BB504(0, v155 & ~(v155 >> 63), 0);
  if (v294)
  {
    id v156 = (double *)__CocoaSet.startIndex.getter();
    unsigned __int8 v158 = 1;
  }
  else
  {
    id v156 = (double *)sub_1006678A4(v154);
    unsigned __int8 v158 = v160 & 1;
  }
  v304 = v156;
  uint64_t v305 = v157;
  unsigned __int8 v306 = v158;
  if (v155 < 0) {
    goto LABEL_152;
  }
  uint64_t v161 = (void (**)(char *, char *))(v296 + 8);
  uint64_t v162 = v154 & 0xFFFFFFFFFFFFFF8;
  if (v154 < 0) {
    uint64_t v162 = v154;
  }
  v293 = (char *)v162;
  do
  {
    while (1)
    {
      uint64_t v171 = sub_1006670B0((unint64_t)v304, v305, v306, v154);
      uint64_t v172 = *(void *)(v171 + 24);
      uint64_t v173 = swift_getObjectType();
      uint64_t v174 = v295;
      (*(void (**)(uint64_t, uint64_t))(v172 + 32))(v173, v172);
      uint64_t v175 = UUID.uuidString.getter();
      uint64_t v177 = v176;
      (*v161)(v174, v297);
      long long v298 = *(_OWORD *)(v171 + 16);
      swift_unknownObjectRetain();
      sub_1005057FC(&qword_101672A78);
      uint64_t v178 = String.init<A>(describing:)();
      id v180 = v179;
      *(void *)&long long v298 = v175;
      *((void *)&v298 + 1) = v177;
      swift_bridgeObjectRetain();
      v181._countAndFlagsBits = v178;
      v181._object = v180;
      String.append(_:)(v181);
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      long long v182 = v298;
      uint64_t v183 = v303;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1006BB504(0, *((void *)v183 + 2) + 1, 1);
        uint64_t v183 = v303;
      }
      unint64_t v185 = *((void *)v183 + 2);
      unint64_t v184 = *((void *)v183 + 3);
      if (v185 >= v184 >> 1)
      {
        sub_1006BB504(v184 > 1, v185 + 1, 1);
        uint64_t v183 = v303;
      }
      *((void *)v183 + 2) = v185 + 1;
      *(_OWORD *)&v183[2 * v185 + 4] = v182;
      if (v294) {
        break;
      }
      unint64_t v163 = v304;
      uint64_t v164 = v305;
      char v165 = v306;
      uint64_t v166 = (double *)sub_100666C8C(v304, v305, v306, v154);
      uint64_t v168 = v167;
      char v170 = v169;
      sub_10056A4C4((uint64_t)v163, v164, v165);
      v304 = v166;
      uint64_t v305 = v168;
      unsigned __int8 v306 = v170 & 1;
      if (!--v155) {
        goto LABEL_112;
      }
    }
    if ((v306 & 1) == 0) {
      goto LABEL_159;
    }
    if (__CocoaSet.Index.handleBitPattern.getter()) {
      swift_isUniquelyReferenced_nonNull_native();
    }
    sub_1005057FC(&qword_10167F6D0);
    uint64_t v186 = (void (*)(long long *, void))Set.Index._asCocoa.modify();
    __CocoaSet.formIndex(after:isUnique:)();
    v186(&v298, 0);
    --v155;
  }
  while (v155);
LABEL_112:
  sub_10056A4C4((uint64_t)v304, v305, v306);
  swift_bridgeObjectRelease();
  id v159 = v303;
LABEL_113:
  *(void *)&long long v298 = v159;
  v287 = (uint64_t *)BidirectionalCollection<>.joined(separator:)();
  uint64_t v272 = v187;
  swift_bridgeObjectRelease();
  uint64_t v188 = *v278;
  unint64_t v294 = *v278 & 0xC000000000000001;
  if ((v188 & 0xC000000000000001) == 0)
  {
    uint64_t v189 = *(void *)(v188 + 16);
    swift_bridgeObjectRetain();
    if (v189) {
      goto LABEL_115;
    }
LABEL_118:
    swift_bridgeObjectRelease();
    int64_t v193 = _swiftEmptyArrayStorage;
    goto LABEL_135;
  }
  swift_bridgeObjectRetain();
  uint64_t v189 = __CocoaSet.count.getter();
  if (!v189) {
    goto LABEL_118;
  }
LABEL_115:
  v303 = _swiftEmptyArrayStorage;
  sub_1006BB504(0, v189 & ~(v189 >> 63), 0);
  if (v294)
  {
    uint64_t v190 = (double *)__CocoaSet.startIndex.getter();
    unsigned __int8 v192 = 1;
  }
  else
  {
    uint64_t v190 = (double *)sub_1006678A4(v188);
    unsigned __int8 v192 = v194 & 1;
  }
  v304 = v190;
  uint64_t v305 = v191;
  unsigned __int8 v306 = v192;
  if (v189 < 0) {
    goto LABEL_153;
  }
  uint64_t v195 = (void (**)(char *, char *))(v296 + 8);
  uint64_t v196 = v188 & 0xFFFFFFFFFFFFFF8;
  if (v188 < 0) {
    uint64_t v196 = v188;
  }
  v293 = (char *)v196;
  do
  {
    while (1)
    {
      uint64_t v205 = sub_1006670B0((unint64_t)v304, v305, v306, v188);
      uint64_t v206 = *(void *)(v205 + 24);
      uint64_t v207 = swift_getObjectType();
      uint64_t v208 = v295;
      (*(void (**)(uint64_t, uint64_t))(v206 + 32))(v207, v206);
      uint64_t v209 = UUID.uuidString.getter();
      uint64_t v211 = v210;
      (*v195)(v208, v297);
      long long v298 = *(_OWORD *)(v205 + 16);
      swift_unknownObjectRetain();
      sub_1005057FC(&qword_101672A78);
      uint64_t v212 = String.init<A>(describing:)();
      int64_t v214 = v213;
      *(void *)&long long v298 = v209;
      *((void *)&v298 + 1) = v211;
      swift_bridgeObjectRetain();
      v215._countAndFlagsBits = v212;
      v215._object = v214;
      String.append(_:)(v215);
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      long long v216 = v298;
      id v217 = v303;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1006BB504(0, *((void *)v217 + 2) + 1, 1);
        id v217 = v303;
      }
      unint64_t v219 = *((void *)v217 + 2);
      unint64_t v218 = *((void *)v217 + 3);
      if (v219 >= v218 >> 1)
      {
        sub_1006BB504(v218 > 1, v219 + 1, 1);
        id v217 = v303;
      }
      *((void *)v217 + 2) = v219 + 1;
      *(_OWORD *)&v217[2 * v219 + 4] = v216;
      if (v294) {
        break;
      }
      uint64_t v197 = v304;
      uint64_t v198 = v305;
      char v199 = v306;
      uint64_t v200 = (double *)sub_100666C8C(v304, v305, v306, v188);
      uint64_t v202 = v201;
      char v204 = v203;
      sub_10056A4C4((uint64_t)v197, v198, v199);
      v304 = v200;
      uint64_t v305 = v202;
      unsigned __int8 v306 = v204 & 1;
      if (!--v189) {
        goto LABEL_134;
      }
    }
    if ((v306 & 1) == 0) {
      goto LABEL_160;
    }
    if (__CocoaSet.Index.handleBitPattern.getter()) {
      swift_isUniquelyReferenced_nonNull_native();
    }
    sub_1005057FC(&qword_10167F6D0);
    unint64_t v220 = (void (*)(long long *, void))Set.Index._asCocoa.modify();
    __CocoaSet.formIndex(after:isUnique:)();
    v220(&v298, 0);
    --v189;
  }
  while (v189);
LABEL_134:
  sub_10056A4C4((uint64_t)v304, v305, v306);
  swift_bridgeObjectRelease();
  int64_t v193 = v303;
LABEL_135:
  *(void *)&long long v298 = v193;
  uint64_t v221 = BidirectionalCollection<>.joined(separator:)();
  uint64_t v223 = v222;
  swift_bridgeObjectRelease();
  if (qword_10166FBD0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  unint64_t v224 = (void *)static OS_os_log.boardItemLifecycle;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_101186E40;
  char v226 = *(unsigned char *)(v289 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_trackChanges);
  *(void *)(inited + 56) = &type metadata for Bool;
  *(void *)(inited + 64) = &protocol witness table for Bool;
  *(unsigned char *)(inited + 32) = v226;
  *(void *)(inited + 96) = &type metadata for String;
  unint64_t v227 = sub_100528BE4();
  uint64_t v228 = v273;
  *(void *)(inited + 72) = v286;
  *(void *)(inited + 80) = v228;
  *(void *)(inited + 136) = &type metadata for String;
  *(void *)(inited + 144) = v227;
  uint64_t v229 = v290;
  *(void *)(inited + 104) = v227;
  *(void *)(inited + 112) = v229;
  *(void *)(inited + 120) = v285;
  *(void *)(inited + 176) = &type metadata for String;
  *(void *)(inited + 184) = v227;
  v230 = v288;
  uint64_t v231 = v272;
  *(void *)(inited + 152) = v287;
  *(void *)(inited + 160) = v231;
  *(void *)(inited + 216) = &type metadata for String;
  *(void *)(inited + 224) = v227;
  *(void *)(inited + 192) = v221;
  *(void *)(inited + 200) = v223;
  v232 = *(char **)&v230[OBJC_IVAR____TtC8Freeform20CRLCommandController_board];
  uint64_t v233 = *(void *)&v232[OBJC_IVAR____TtC8Freeform8CRLBoard_data] + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
  swift_beginAccess();
  uint64_t v234 = v233;
  uint64_t v235 = v284;
  sub_1007972B4(v234, v284, type metadata accessor for CRLBoardCRDTData);
  id v236 = v224;
  swift_retain();
  sub_1005057FC(&qword_101674550);
  v237 = v295;
  CRRegister.wrappedValue.getter();
  sub_100797380(v235, type metadata accessor for CRLBoardCRDTData);
  swift_release();
  uint64_t v238 = UUID.uuidString.getter();
  uint64_t v240 = v239;
  (*(void (**)(char *, char *))(v296 + 8))(v237, v297);
  *(void *)(inited + 256) = &type metadata for String;
  *(void *)(inited + 264) = v227;
  *(void *)(inited + 232) = v238;
  *(void *)(inited + 240) = v240;
  uint64_t v241 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v236, (uint64_t)&_mh_execute_header, v241, (uint64_t)"📒 Transaction .close() results:\n  trackChanges: %d\n  added: [%{public}@]\n  modified: [%{public}@]\n  removed: [%{public}@]\n  removedNewlyCreated: [%{public}@]\n  Board: %{public}@", 180, 0, inited);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  unint64_t v242 = v289;
  swift_arrayDestroy();

  v297 = v232;
  [v232 fixUp];
  if (*(unsigned char *)(v242 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_active))
  {
    __break(1u);
LABEL_147:
    __break(1u);
LABEL_148:
    __break(1u);
LABEL_149:
    __break(1u);
LABEL_150:
    __break(1u);
LABEL_151:
    __break(1u);
LABEL_152:
    __break(1u);
LABEL_153:
    __break(1u);
LABEL_154:
    __break(1u);
LABEL_155:
    __break(1u);
LABEL_156:
    __break(1u);
LABEL_157:
    __break(1u);
LABEL_158:
    __break(1u);
LABEL_159:
    __break(1u);
LABEL_160:
    __break(1u);
    goto LABEL_161;
  }
  v243 = *(void **)(v242 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext__observableDelta);
  if (v243)
  {
    uint64_t v244 = swift_allocObject();
    v245 = v283;
    v246 = v288;
    *(void *)(v244 + 16) = v283;
    *(void *)(v244 + 24) = v246;
    *(unsigned char *)(v244 + 32) = v282;
    id v247 = v245;
    v248 = v246;
    id v249 = v243;
    sub_100792760(v242, (uint64_t)v249, (void (*)(id))sub_100797280, v244);

    swift_release();
    [*(id *)(*(void *)&v248[OBJC_IVAR____TtC8Freeform20CRLCommandController_selectionDispatcher]+ OBJC_IVAR____TtC8Freeform22CRLSelectionDispatcher_selectionStateSnapshots) removeAllObjects];
    v250 = v297;
    *(void *)&long long v298 = v277;
    *((void *)&v298 + 1) = v276;
    v299 = v275;
    v300 = (void *)v274;
    PassthroughSubject.send(_:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v251 = *(void *)&v250[OBJC_IVAR____TtC8Freeform8CRLBoard_pendingChanges];
    v252 = *(NSObject **)(v251 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_accessQueue);
    uint64_t v253 = swift_allocObject();
    *(void *)(v253 + 16) = v242;
    *(void *)(v253 + 24) = v251;
    uint64_t v254 = swift_allocObject();
    *(void *)(v254 + 16) = sub_100797448;
    *(void *)(v254 + 24) = v253;
    v301 = sub_100659320;
    uint64_t v302 = v254;
    *(void *)&long long v298 = _NSConcreteStackBlock;
    *((void *)&v298 + 1) = *(void *)"";
    v299 = sub_1006D9628;
    v300 = &unk_101513648;
    v255 = _Block_copy(&v298);
    swift_retain_n();
    swift_retain();
    swift_retain();
    swift_release();
    dispatch_sync(v252, v255);
    _Block_release(v255);
    LOBYTE(v252) = swift_isEscapingClosureAtFileLocation();
    swift_release();
    swift_release();
    swift_release();
    if ((v252 & 1) == 0)
    {
      if ((v281 & 0xFE) == 2)
      {
        sub_1007915A0();
LABEL_145:
        *(void *)&v288[v280] = 0;
        swift_release();
        *(void *)&v248[OBJC_IVAR____TtC8Freeform20CRLCommandController__currentWatermarkTransactionContext] = 0;
        swift_release();
        sub_10078BCA0();
        swift_release();
        return v279;
      }
      uint64_t v256 = (uint64_t)&v297[OBJC_IVAR____TtC8Freeform8CRLBoard_realTimeSessionInfo];
      swift_beginAccess();
      uint64_t v257 = v256;
      uint64_t v258 = (uint64_t)v269;
      sub_100522E9C(v257, (uint64_t)v269, (uint64_t *)&unk_10169A1A0);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v270 + 48))(v258, 1, v271))
      {
        sub_100522F00(v258, (uint64_t *)&unk_10169A1A0);
        goto LABEL_145;
      }
      v259 = v268;
      sub_1007972B4(v258, (uint64_t)v268, type metadata accessor for CRLBoard.RealTimeSessionInfo);
      sub_100522F00(v258, (uint64_t *)&unk_10169A1A0);
      uint64_t v260 = *v259;
      swift_retain();
      sub_100797380((uint64_t)v259, type metadata accessor for CRLBoard.RealTimeSessionInfo);
      v261 = *(NSObject **)(v260 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_accessQueue);
      uint64_t v262 = swift_allocObject();
      *(void *)(v262 + 16) = v289;
      *(void *)(v262 + 24) = v260;
      uint64_t v263 = swift_allocObject();
      *(void *)(v263 + 16) = sub_100797448;
      *(void *)(v263 + 24) = v262;
      v301 = sub_100659320;
      uint64_t v302 = v263;
      *(void *)&long long v298 = _NSConcreteStackBlock;
      *((void *)&v298 + 1) = *(void *)"";
      v299 = sub_1006D9628;
      v300 = &unk_1015136C0;
      v264 = _Block_copy(&v298);
      swift_retain();
      swift_retain();
      swift_retain();
      swift_release();
      dispatch_sync(v261, v264);
      _Block_release(v264);
      LOBYTE(v261) = swift_isEscapingClosureAtFileLocation();
      swift_release();
      swift_release();
      swift_release();
      if ((v261 & 1) == 0) {
        goto LABEL_145;
      }
      goto LABEL_154;
    }
    goto LABEL_147;
  }
LABEL_161:
  __break(1u);
LABEL_162:
  sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"_closeTransaction(applyingSelectionBehavior:phase:commandType:progressivityForEnqueuingClosingGroup:)", 101, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandController.swift", 92, 2, 1054, (uint64_t)"Tried to close a transaction without an open transaction context.", 65, 2u, (uint64_t)_swiftEmptyArrayStorage);
  sub_100586FD4((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Tried to close a transaction without an open transaction context.");
  sub_1005871AC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"_closeTransaction(applyingSelectionBehavior:phase:commandType:progressivityForEnqueuingClosingGroup:)", 101, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandController.swift", 92, 2, 1054);
  SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v266, v267);
  uint64_t result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100796B44(unsigned __int8 a1, char a2, uint64_t a3, unint64_t a4)
{
  if (([self isMainThread] & 1) == 0)
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"_execute(commandType:shouldSendChangeNotificationsWhenEnqueuedInProgressiveGroup:commandApplier:)", 97, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandController.swift", 92, 2, 896, (uint64_t)"This operation must only be performed on the main thread.", 57, 2u, (uint64_t)_swiftEmptyArrayStorage);
    LOBYTE(v26) = 2;
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"_execute(commandType:shouldSendChangeNotificationsWhenEnqueuedInProgressiveGroup:commandApplier:)", 97, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandController.swift", 92, 2, 896);
    [self logFullBacktrace:@"This operation must only be performed on the main thread." 57 v26];
  }
  uint64_t v8 = OBJC_IVAR____TtC8Freeform20CRLCommandController__isExecuting;
  if (*(unsigned char *)(a3 + OBJC_IVAR____TtC8Freeform20CRLCommandController__isExecuting) != 1)
  {
    *(unsigned char *)(a3 + OBJC_IVAR____TtC8Freeform20CRLCommandController__isExecuting) = 1;
    sub_100792200(a1);
    unint64_t v9 = *(void *)(a3 + OBJC_IVAR____TtC8Freeform20CRLCommandController__currentTransactionContext);
    if (!v9)
    {
      sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"_execute(commandType:shouldSendChangeNotificationsWhenEnqueuedInProgressiveGroup:commandApplier:)", 97, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandController.swift", 92, 2, 904, (uint64_t)"Tried to call _execute without an open transaction context.", 59, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_100586FD4((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Tried to call _execute without an open transaction context.");
      uint64_t v23 = 904;
      goto LABEL_40;
    }
    uint64_t v10 = swift_retain();
    sub_1007920FC(v10, a4);
    unint64_t v11 = a3 + OBJC_IVAR____TtC8Freeform20CRLCommandController_openGroupDatas;
    swift_beginAccess();
    unint64_t v12 = *(void *)v11;
    if (*(void *)v11 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v13 = _CocoaArrayWrapper.endIndex.getter();
      if (!v13) {
        goto LABEL_32;
      }
    }
    else
    {
      uint64_t v13 = *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (!v13) {
        goto LABEL_32;
      }
    }
    unint64_t v14 = v13 - 1;
    if (__OFSUB__(v13, 1))
    {
      __break(1u);
    }
    else if ((v12 & 0xC000000000000001) == 0)
    {
      if ((v14 & 0x8000000000000000) != 0)
      {
        __break(1u);
      }
      else if (v14 < *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        uint64_t v15 = *(void *)(v12 + 8 * v14 + 32);
        swift_retain();
        goto LABEL_12;
      }
      __break(1u);
      goto LABEL_31;
    }
    uint64_t v15 = specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_12:
    swift_bridgeObjectRelease();
    int v16 = *(unsigned __int8 *)(v15 + 16);
    swift_release();
    if ((v16 - 1) > 2)
    {
LABEL_24:
      uint64_t result = swift_release();
LABEL_33:
      *(unsigned char *)(a3 + v8) = 0;
      return result;
    }
    if (a2)
    {
      uint64_t v17 = (void *)sub_1010259B8(0, 0);
      sub_100792760(v9, (uint64_t)v17, 0, 0);
    }
    unint64_t v11 = *(void *)v11;
    if (!(v11 >> 62))
    {
      uint64_t v18 = *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v18) {
        goto LABEL_17;
      }
      goto LABEL_32;
    }
LABEL_31:
    swift_bridgeObjectRetain();
    uint64_t v18 = _CocoaArrayWrapper.endIndex.getter();
    if (v18)
    {
LABEL_17:
      unint64_t v19 = v18 - 1;
      if (__OFSUB__(v18, 1))
      {
        __break(1u);
      }
      else if ((v11 & 0xC000000000000001) == 0)
      {
        if ((v19 & 0x8000000000000000) != 0)
        {
          __break(1u);
        }
        else if (v19 < *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          uint64_t v20 = *(void *)(v11 + 8 * v19 + 32);
          swift_retain();
          goto LABEL_22;
        }
        __break(1u);
        goto LABEL_38;
      }
      uint64_t v20 = specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_22:
      swift_bridgeObjectRelease();
      char v21 = *(unsigned char *)(v20 + 16);
      swift_release();
      if ((v21 & 0xFE) == 2) {
        sub_1007915A0();
      }
      goto LABEL_24;
    }
LABEL_32:
    swift_release();
    uint64_t result = swift_bridgeObjectRelease();
    goto LABEL_33;
  }
LABEL_38:
  sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"_execute(commandType:shouldSendChangeNotificationsWhenEnqueuedInProgressiveGroup:commandApplier:)", 97, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandController.swift", 92, 2, 898, (uint64_t)"Should not execute a command while executing another command.", 61, 2u, (uint64_t)_swiftEmptyArrayStorage);
  sub_100586FD4((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Should not execute a command while executing another command.");
  uint64_t v23 = 898;
LABEL_40:
  sub_1005871AC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"_execute(commandType:shouldSendChangeNotificationsWhenEnqueuedInProgressiveGroup:commandApplier:)", 97, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandController.swift", 92, 2, v23);
  SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v24, v25);
  swift_bridgeObjectRelease();
  uint64_t result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100797218()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100797228(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100797238()
{
  return swift_release();
}

uint64_t sub_100797240()
{
  return _swift_deallocObject(v0, 33, 7);
}

void sub_100797280()
{
  sub_100793FE8(*(void **)(v0 + 16), *(void *)(v0 + 24), *(unsigned char *)(v0 + 32));
}

uint64_t sub_100797290()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1007972A4()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1007972B4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_10079731C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CRLCommandHistoryItem();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100797380(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_1007973E0()
{
  unint64_t result = qword_101677140;
  if (!qword_101677140)
  {
    sub_10050BF48(255, (unint64_t *)&qword_101673918);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101677140);
  }
  return result;
}

void sub_1007975A0(void *a1, uint64_t a2, void *a3, const char **a4, SEL *a5)
{
  v11.id receiver = a1;
  v11.Class super_class = (Class)type metadata accessor for CRLMathResultView();
  uint64_t v8 = *a4;
  id v9 = a3;
  uint64_t v10 = (char *)v11.receiver;
  [super v8 v9];
  [*(id *)&v10[OBJC_IVAR____TtC8Freeform17CRLMathResultView_delegate] *a5 v9 v11.receiver, v11.super_class];
}

id sub_100797658()
{
  v2.id receiver = v0;
  v2.Class super_class = (Class)type metadata accessor for CRLMathResultView();
  [super dealloc];
}

uint64_t type metadata accessor for CRLMathResultView()
{
  return self;
}

uint64_t sub_1007976C0()
{
  id v0 = [self mainBundle];
  NSString v1 = String._bridgeToObjectiveC()();
  NSString v2 = String._bridgeToObjectiveC()();
  id v3 = [v0 localizedStringForKey:v1 value:v2 table:0];

  uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  return v4;
}

void sub_10079784C()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1005057FC(&qword_101672BB0);
  __chkstk_darwin(v2 - 8, v3);
  uint64_t v5 = (char *)aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0) + 64;
  uint64_t v6 = sub_1005057FC(&qword_101672C30);
  __chkstk_darwin(v6 - 8, v7);
  id v9 = (char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0) + 64;
  uint64_t v10 = type metadata accessor for CRLBoardIdentifier(0);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void *)(v11 + 64);
  __chkstk_darwin(v10, v13);
  unint64_t v14 = (char *)aBlock - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0) + 64;
  __chkstk_darwin(v15, v16);
  uint64_t v18 = (char *)aBlock - v17 + 64;
  uint64_t v19 = v1 + OBJC_IVAR____TtC8Freeform28CRLDownloadSharedCopyAttempt_boardIdentifier;
  swift_beginAccess();
  sub_100522E9C(v19, (uint64_t)v9, &qword_101672C30);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
  {
    sub_100522F00((uint64_t)v9, &qword_101672C30);
    if (qword_10166FA90 != -1) {
      swift_once();
    }
    swift_beginAccess();
    id v20 = (id)static OS_os_log.crlSendACopy;
    uint64_t v21 = static os_log_type_t.error.getter();
    sub_100BAC898((uint64_t)v20, (uint64_t)&_mh_execute_header, v21, (uint64_t)"Could not extract board identifier.", 35, 2, (uint64_t)_swiftEmptyArrayStorage);
  }
  else
  {
    sub_1005394E4((uint64_t)v9, (uint64_t)v18);
    id v22 = [self defaultCenter];
    if (qword_1016700C0 != -1) {
      swift_once();
    }
    uint64_t v41 = v11;
    uint64_t v23 = qword_10171C6C8;
    uint64_t v24 = *(void *)(v1 + OBJC_IVAR____TtC8Freeform28CRLDownloadSharedCopyAttempt_boardLibrary);
    uint64_t v25 = swift_allocObject();
    swift_weakInit();
    uint64_t v44 = sub_10079B800;
    uint64_t v45 = v25;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = *(void *)"";
    aBlock[2] = sub_1005E5680;
    uint64_t ObjectType = &unk_101513760;
    uint64_t v26 = _Block_copy(aBlock);
    swift_release();
    id v27 = [v22 addObserverForName:v23 object:v24 queue:0 usingBlock:v26];
    _Block_release(v26);

    uint64_t ObjectType = (void *)swift_getObjectType();
    aBlock[0] = v27;
    sub_10079A4F8((uint64_t)aBlock);
    if (qword_10166FA90 != -1) {
      swift_once();
    }
    swift_beginAccess();
    uint64_t v28 = (void *)static OS_os_log.crlSendACopy;
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_10117E810;
    id v30 = v28;
    uint64_t v31 = sub_100753038();
    uint64_t v33 = v32;
    *(void *)(inited + 56) = &type metadata for String;
    *(void *)(inited + 64) = sub_100528BE4();
    *(void *)(inited + 32) = v31;
    *(void *)(inited + 40) = v33;
    uint64_t v34 = static os_log_type_t.default.getter();
    sub_100BAC898((uint64_t)v30, (uint64_t)&_mh_execute_header, v34, (uint64_t)"Started listening for a CRLBoardLibraryProvidingDidUpdateSnapshot notification that contains the identifier for the downloaded copy of the board we are trying to open: %@.", 171, 2, inited);
    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();

    uint64_t v35 = type metadata accessor for TaskPriority();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 56))(v5, 1, 1, v35);
    uint64_t v36 = swift_allocObject();
    swift_weakInit();
    sub_100540CFC((uint64_t)v18, (uint64_t)v14);
    type metadata accessor for MainActor();
    swift_retain();
    uint64_t v37 = static MainActor.shared.getter();
    unint64_t v38 = (*(unsigned __int8 *)(v41 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v41 + 80);
    unsigned __int8 v39 = (void *)swift_allocObject();
    v39[2] = v37;
    v39[3] = &protocol witness table for MainActor;
    v39[4] = v36;
    sub_1005394E4((uint64_t)v14, (uint64_t)v39 + v38);
    swift_release();
    uint64_t v40 = sub_1005912D0((uint64_t)v5, (uint64_t)&unk_10167F928, (uint64_t)v39);
    sub_10079BB04((uint64_t)v18, type metadata accessor for CRLBoardIdentifier);
    *(void *)(v1 + OBJC_IVAR____TtC8Freeform28CRLDownloadSharedCopyAttempt_downloadTask) = v40;
    swift_release();
  }
}

uint64_t sub_100797E40(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Notification();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2, v4);
  uint64_t v6 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1005057FC(&qword_101672C30);
  __chkstk_darwin(v7 - 8, v8);
  uint64_t v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for CRLBoardIdentifier(0);
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11, v13);
  uint64_t v15 = (char *)&v31 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v17 = result;
    uint64_t v18 = result + OBJC_IVAR____TtC8Freeform28CRLDownloadSharedCopyAttempt_boardIdentifierToOpen;
    swift_beginAccess();
    sub_100522E9C(v18, (uint64_t)v10, &qword_101672C30);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
    {
      swift_release();
      return sub_100522F00((uint64_t)v10, &qword_101672C30);
    }
    else
    {
      uint64_t v31 = a1;
      sub_1005394E4((uint64_t)v10, (uint64_t)v15);
      if (qword_10166FA90 != -1) {
        swift_once();
      }
      swift_beginAccess();
      uint64_t v19 = (void *)static OS_os_log.crlSendACopy;
      sub_1005057FC((uint64_t *)&unk_101672B40);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_10117E810;
      id v21 = v19;
      uint64_t v22 = UUID.uuidString.getter();
      uint64_t v24 = v23;
      *(void *)(inited + 56) = &type metadata for String;
      *(void *)(inited + 64) = sub_100528BE4();
      *(void *)(inited + 32) = v22;
      *(void *)(inited + 40) = v24;
      uint64_t v25 = static os_log_type_t.default.getter();
      sub_100BAC898((uint64_t)v21, (uint64_t)&_mh_execute_header, v25, (uint64_t)"Snapshot updated after public board copy was downloaded. Attempting to open board with UUID: %@.", 96, 2, inited);
      swift_setDeallocating();
      sub_1005057FC(&qword_101672B50);
      swift_arrayDestroy();

      (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v6, v31, v2);
      if (sub_100DC6278((uint64_t)v6)
        && (char v27 = sub_1006E5EA4((uint64_t)v15, v26),
            swift_bridgeObjectRelease(),
            swift_bridgeObjectRelease(),
            swift_bridgeObjectRelease(),
            (v27 & 1) != 0))
      {
        sub_10079A668();
        char v28 = *(unsigned char *)(v17 + OBJC_IVAR____TtC8Freeform28CRLDownloadSharedCopyAttempt_didConfirmBoardIsReadyToOpen);
        *(unsigned char *)(v17 + OBJC_IVAR____TtC8Freeform28CRLDownloadSharedCopyAttempt_didConfirmBoardIsReadyToOpen) = 1;
        sub_10079A79C(v28);
        swift_release();
      }
      else
      {
        id v29 = (id)static OS_os_log.crlSendACopy;
        uint64_t v30 = static os_log_type_t.default.getter();
        sub_100BAC898((uint64_t)v29, (uint64_t)&_mh_execute_header, v30, (uint64_t)"Snapshot update didn't contain shared board identifier. Skipping.", 65, 2, (uint64_t)_swiftEmptyArrayStorage);
        swift_release();
      }
      return sub_10079BB04((uint64_t)v15, type metadata accessor for CRLBoardIdentifier);
    }
  }
  return result;
}

uint64_t sub_100798264(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[123] = a5;
  v5[122] = a4;
  type metadata accessor for CRLBoardLibraryViewModel.Folder(0);
  v5[124] = swift_task_alloc();
  v5[125] = sub_1005057FC(&qword_101672C30);
  v5[126] = swift_task_alloc();
  v5[127] = swift_task_alloc();
  sub_1005057FC(&qword_101672BB0);
  v5[128] = swift_task_alloc();
  v5[129] = type metadata accessor for MainActor();
  v5[130] = static MainActor.shared.getter();
  uint64_t v7 = dispatch thunk of Actor.unownedExecutor.getter();
  v5[131] = v7;
  v5[132] = v6;
  return _swift_task_switch(sub_1007983A8, v7, v6);
}

uint64_t sub_1007983A8()
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  *(void *)(v0 + 1064) = Strong;
  if (Strong)
  {
    uint64_t v2 = Strong;
    if (qword_10166FA90 != -1) {
      swift_once();
    }
    swift_beginAccess();
    uint64_t v3 = (void *)static OS_os_log.crlSendACopy;
    *(void *)(v0 + 1072) = sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_10117E810;
    id v5 = v3;
    uint64_t v6 = sub_100753038();
    uint64_t v8 = v7;
    *(void *)(inited + 56) = &type metadata for String;
    unint64_t v9 = sub_100528BE4();
    *(void *)(v0 + 1080) = v9;
    *(void *)(inited + 64) = v9;
    *(void *)(inited + 32) = v6;
    *(void *)(inited + 40) = v8;
    uint64_t v10 = static os_log_type_t.default.getter();
    sub_100BAC898((uint64_t)v5, (uint64_t)&_mh_execute_header, v10, (uint64_t)"Downloading shared copy of board: %@ ", 37, 2, inited);
    swift_setDeallocating();
    *(void *)(v0 + 1088) = sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();

    *(void *)(v0 + 1096) = OBJC_IVAR____TtC8Freeform28CRLDownloadSharedCopyAttempt_delegate;
    if (swift_unknownObjectWeakLoadStrong())
    {
      uint64_t v11 = *(void *)(v0 + 1024);
      uint64_t v12 = type metadata accessor for TaskPriority();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v11, 1, 1, v12);
      uint64_t v13 = swift_allocObject();
      swift_unknownObjectWeakInit();
      swift_retain();
      swift_retain();
      uint64_t v14 = static MainActor.shared.getter();
      uint64_t v15 = (void *)swift_allocObject();
      v15[2] = v14;
      v15[3] = &protocol witness table for MainActor;
      v15[4] = v13;
      swift_release();
      sub_1005912FC(v11, (uint64_t)&unk_10167F930, (uint64_t)v15);
      swift_release();
      swift_unknownObjectRelease();
      swift_release();
    }
    uint64_t v16 = sub_10050F848((void *)(v2 + OBJC_IVAR____TtC8Freeform28CRLDownloadSharedCopyAttempt_dataHandler), *(void *)(v2 + OBJC_IVAR____TtC8Freeform28CRLDownloadSharedCopyAttempt_dataHandler + 24));
    long long v18 = v16[1];
    long long v17 = v16[2];
    *(_OWORD *)(v0 + 656) = *v16;
    *(_OWORD *)(v0 + 672) = v18;
    *(_OWORD *)(v0 + 688) = v17;
    uint64_t v19 = (void *)swift_task_alloc();
    *(void *)(v0 + 1104) = v19;
    void *v19 = v0;
    v19[1] = sub_100798738;
    uint64_t v20 = *(void *)(v0 + 984);
    return sub_100D56098(v20);
  }
  else
  {
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v22 = *(uint64_t (**)(void))(v0 + 8);
    return v22();
  }
}

uint64_t sub_100798738(uint64_t a1, char a2)
{
  uint64_t v5 = *v3;
  *(void *)(v5 + 1112) = a1;
  *(void *)(v5 + 1120) = v2;
  swift_task_dealloc();
  if (v2)
  {
    uint64_t v6 = *(void *)(v5 + 1056);
    uint64_t v7 = *(void *)(v5 + 1048);
    uint64_t v8 = sub_100798AE8;
  }
  else
  {
    *(unsigned char *)(v5 + 1146) = a2 & 1;
    uint64_t v6 = *(void *)(v5 + 1056);
    uint64_t v7 = *(void *)(v5 + 1048);
    uint64_t v8 = sub_100798870;
  }
  return _swift_task_switch(v8, v7, v6);
}

uint64_t sub_100798870()
{
  uint64_t v1 = *(void *)(v0 + 992);
  *(unsigned char *)(*(void *)(v0 + 1064)
           + OBJC_IVAR____TtC8Freeform28CRLDownloadSharedCopyAttempt_didEncounterUnsupportedContent) = *(unsigned char *)(v0 + 1146);
  uint64_t v2 = sub_1005057FC(&qword_101670F30);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(v1, 1, 5, v2);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 1128) = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_10079897C;
  uint64_t v4 = *(void *)(v0 + 1112);
  uint64_t v5 = *(void *)(v0 + 1016);
  uint64_t v6 = *(void *)(v0 + 992);
  return sub_100EFC9E0(v5, v4, v6, 0, 1);
}

uint64_t sub_10079897C()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *(void *)(*v1 + 992);
  *(void *)(*v1 + 1136) = v0;
  swift_task_dealloc();
  sub_10079BB04(v3, type metadata accessor for CRLBoardLibraryViewModel.Folder);
  uint64_t v4 = *(void *)(v2 + 1056);
  uint64_t v5 = *(void *)(v2 + 1048);
  if (v0) {
    uint64_t v6 = sub_100799714;
  }
  else {
    uint64_t v6 = sub_1007994DC;
  }
  return _swift_task_switch(v6, v5, v4);
}

uint64_t sub_100798AE8()
{
  swift_release();
  uint64_t v1 = *(void *)(v0 + 1120);
  *(void *)(v0 + 968) = v1;
  swift_errorRetain();
  sub_1005057FC(&qword_101672BD0);
  type metadata accessor for CKError(0);
  if (swift_dynamicCast())
  {
    uint64_t v2 = *(void **)(v0 + 896);
    *(void *)(v0 + 928) = v2;
    sub_10074B4AC();
    _BridgedStoredNSError.code.getter();
    if (*(void *)(v0 + 920) == 4
      || (*(void *)(v0 + 944) = v2, _BridgedStoredNSError.code.getter(), *(void *)(v0 + 936) == 3))
    {
      uint64_t v3 = *(void *)(v0 + 1080);
      uint64_t v64 = *(void *)(v0 + 1064);
      uint64_t v63 = *(void *)(v0 + 1008);
      swift_errorRelease();
      uint64_t v4 = (void *)static OS_os_log.crlSendACopy;
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_10117DF40;
      id v6 = v4;
      uint64_t v7 = UUID.uuidString.getter();
      *(void *)(inited + 56) = &type metadata for String;
      *(void *)(inited + 64) = v3;
      *(void *)(inited + 32) = v7;
      *(void *)(inited + 40) = v8;
      id v9 = v2;
      uint64_t v10 = sub_1009F4A44(v9);
      uint64_t v12 = v11;

      *(void *)(inited + 96) = &type metadata for String;
      *(void *)(inited + 104) = v3;
      *(void *)(inited + 72) = v10;
      *(void *)(inited + 80) = v12;
      *(void *)(v0 + 960) = v9;
      id v13 = v9;
      uint64_t v14 = String.init<A>(reflecting:)();
      *(void *)(inited + 136) = &type metadata for String;
      *(void *)(inited + 144) = v3;
      *(void *)(inited + 112) = v14;
      *(void *)(inited + 120) = v15;
      uint64_t v16 = static os_log_type_t.error.getter();
      sub_100BAC898((uint64_t)v6, (uint64_t)&_mh_execute_header, v16, (uint64_t)"Failed to download Send A Copy board (UUID: %{public}@) due to network error %{public}@ <%@>", 92, 2, inited);
      swift_setDeallocating();
      swift_arrayDestroy();

      uint64_t v17 = type metadata accessor for CRLBoardIdentifier(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v63, 1, 1, v17);
      uint64_t v18 = v64 + OBJC_IVAR____TtC8Freeform28CRLDownloadSharedCopyAttempt_boardIdentifierToOpen;
      swift_beginAccess();
      sub_1006063BC(v63, v18, &qword_101672C30);
      swift_endAccess();
      sub_10079A668();
      if (swift_unknownObjectWeakLoadStrong())
      {
        uint64_t v19 = *(void *)(v0 + 1024);
        uint64_t v20 = type metadata accessor for TaskPriority();
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v19, 1, 1, v20);
        uint64_t v21 = swift_allocObject();
        swift_unknownObjectWeakInit();
        swift_retain();
        swift_retain();
        uint64_t v22 = static MainActor.shared.getter();
        uint64_t v23 = swift_allocObject();
        *(void *)(v23 + 16) = v22;
        *(void *)(v23 + 24) = &protocol witness table for MainActor;
        *(void *)(v23 + 32) = v21;
        *(unsigned char *)(v23 + 40) = 0;
        swift_release();
        sub_1005912D0(v19, (uint64_t)&unk_10167F948, v23);
        swift_release();

        swift_unknownObjectRelease();
        swift_release();
      }
      else
      {
      }
LABEL_7:
      swift_release();
      swift_errorRelease();
      goto LABEL_17;
    }
  }
  swift_errorRelease();
  *(void *)(v0 + 904) = v1;
  swift_errorRetain();
  if (swift_dynamicCast() && *(unsigned char *)(v0 + 1144) == 14)
  {
    uint64_t v24 = *(void *)(v0 + 1080);
    uint64_t v25 = *(void *)(v0 + 1064);
    uint64_t v66 = *(void *)(v0 + 1008);
    swift_errorRelease();
    uint64_t v26 = (void *)static OS_os_log.crlSendACopy;
    uint64_t v27 = swift_initStackObject();
    *(_OWORD *)(v27 + 16) = xmmword_10117DF40;
    id v28 = v26;
    uint64_t v29 = UUID.uuidString.getter();
    *(void *)(v27 + 56) = &type metadata for String;
    *(void *)(v27 + 64) = v24;
    *(void *)(v27 + 32) = v29;
    *(void *)(v27 + 40) = v30;
    uint64_t v31 = sub_1009F5024(14);
    *(void *)(v27 + 96) = &type metadata for String;
    *(void *)(v27 + 104) = v24;
    *(void *)(v27 + 72) = v31;
    *(void *)(v27 + 80) = v32;
    *(unsigned char *)(v0 + 1145) = 14;
    uint64_t v33 = String.init<A>(reflecting:)();
    *(void *)(v27 + 136) = &type metadata for String;
    *(void *)(v27 + 144) = v24;
    *(void *)(v27 + 112) = v33;
    *(void *)(v27 + 120) = v34;
    uint64_t v35 = static os_log_type_t.error.getter();
    sub_100BAC898((uint64_t)v28, (uint64_t)&_mh_execute_header, v35, (uint64_t)"Failed to download Send A Copy board (UUID: %{public}@) due to board being unsupported %{public}@ <%@>", 102, 2, v27);
    swift_setDeallocating();
    swift_arrayDestroy();

    uint64_t v36 = type metadata accessor for CRLBoardIdentifier(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v36 - 8) + 56))(v66, 1, 1, v36);
    uint64_t v37 = v25 + OBJC_IVAR____TtC8Freeform28CRLDownloadSharedCopyAttempt_boardIdentifierToOpen;
    swift_beginAccess();
    sub_1006063BC(v66, v37, &qword_101672C30);
    swift_endAccess();
    sub_10079A668();
    if (swift_unknownObjectWeakLoadStrong())
    {
      uint64_t v38 = *(void *)(v0 + 1024);
      uint64_t v39 = type metadata accessor for TaskPriority();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v39 - 8) + 56))(v38, 1, 1, v39);
      uint64_t v40 = swift_allocObject();
      swift_unknownObjectWeakInit();
      swift_retain();
      swift_retain();
      uint64_t v41 = static MainActor.shared.getter();
      uint64_t v42 = swift_allocObject();
      *(void *)(v42 + 16) = v41;
      *(void *)(v42 + 24) = &protocol witness table for MainActor;
      *(void *)(v42 + 32) = v40;
      *(unsigned char *)(v42 + 40) = 2;
      swift_release();
      sub_1005912D0(v38, (uint64_t)&unk_10167F940, v42);
      swift_release();
      swift_unknownObjectRelease();
      swift_release();
    }
    goto LABEL_7;
  }
  uint64_t v43 = *(void *)(v0 + 1080);
  uint64_t v67 = *(void *)(v0 + 1064);
  uint64_t v65 = *(void *)(v0 + 1008);
  swift_errorRelease();
  uint64_t v44 = (void *)static OS_os_log.crlSendACopy;
  uint64_t v45 = swift_initStackObject();
  *(_OWORD *)(v45 + 16) = xmmword_10117DF40;
  id v46 = v44;
  uint64_t v47 = UUID.uuidString.getter();
  *(void *)(v45 + 56) = &type metadata for String;
  *(void *)(v45 + 64) = v43;
  *(void *)(v45 + 32) = v47;
  *(void *)(v45 + 40) = v48;
  swift_getErrorValue();
  uint64_t v49 = Error.publicDescription.getter(*(void *)(v0 + 808), *(void *)(v0 + 816));
  *(void *)(v45 + 96) = &type metadata for String;
  *(void *)(v45 + 104) = v43;
  *(void *)(v45 + 72) = v49;
  *(void *)(v45 + 80) = v50;
  swift_getErrorValue();
  uint64_t v51 = Error.fullDescription.getter(*(void *)(v0 + 856));
  *(void *)(v45 + 136) = &type metadata for String;
  *(void *)(v45 + 144) = v43;
  *(void *)(v45 + 112) = v51;
  *(void *)(v45 + 120) = v52;
  uint64_t v53 = static os_log_type_t.error.getter();
  sub_100BAC898((uint64_t)v46, (uint64_t)&_mh_execute_header, v53, (uint64_t)"Failed to download Send A Copy board (UUID: %{public}@) with error %{public}@ <%@>", 82, 2, v45);
  swift_setDeallocating();
  swift_arrayDestroy();

  uint64_t v54 = type metadata accessor for CRLBoardIdentifier(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v54 - 8) + 56))(v65, 1, 1, v54);
  uint64_t v55 = v67 + OBJC_IVAR____TtC8Freeform28CRLDownloadSharedCopyAttempt_boardIdentifierToOpen;
  swift_beginAccess();
  sub_1006063BC(v65, v55, &qword_101672C30);
  swift_endAccess();
  sub_10079A668();
  if (swift_unknownObjectWeakLoadStrong())
  {
    uint64_t v56 = *(void *)(v0 + 1024);
    uint64_t v57 = type metadata accessor for TaskPriority();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v57 - 8) + 56))(v56, 1, 1, v57);
    uint64_t v58 = swift_allocObject();
    swift_unknownObjectWeakInit();
    swift_retain();
    swift_retain();
    uint64_t v59 = static MainActor.shared.getter();
    uint64_t v60 = swift_allocObject();
    *(void *)(v60 + 16) = v59;
    *(void *)(v60 + 24) = &protocol witness table for MainActor;
    *(void *)(v60 + 32) = v58;
    *(unsigned char *)(v60 + 40) = 1;
    swift_release();
    sub_1005912D0(v56, (uint64_t)&unk_10167F938, v60);
    swift_release();
    swift_unknownObjectRelease();
    swift_errorRelease();
    swift_release_n();
  }
  else
  {
    swift_errorRelease();
    swift_release();
  }
LABEL_17:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v61 = *(uint64_t (**)(void))(v0 + 8);
  return v61();
}

uint64_t sub_1007994DC()
{
  uint64_t v17 = (void *)v0[139];
  uint64_t v1 = v0[135];
  uint64_t v2 = v0[133];
  uint64_t v3 = v0[127];
  uint64_t v4 = v0[126];
  swift_release();
  uint64_t v5 = type metadata accessor for CRLBoardIdentifier(0);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v3, 0, 1, v5);
  sub_1006050B4(v3, v4);
  uint64_t v6 = v2 + OBJC_IVAR____TtC8Freeform28CRLDownloadSharedCopyAttempt_boardIdentifierToOpen;
  swift_beginAccess();
  sub_1006063BC(v4, v6, &qword_101672C30);
  swift_endAccess();
  uint64_t v7 = (void *)static OS_os_log.crlSendACopy;
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117D8C0;
  sub_100522E9C(v6, v4, &qword_101672C30);
  id v9 = v7;
  uint64_t v10 = String.init<A>(describing:)();
  *(void *)(inited + 56) = &type metadata for String;
  *(void *)(inited + 64) = v1;
  *(void *)(inited + 32) = v10;
  *(void *)(inited + 40) = v11;
  uint64_t v12 = sub_100753038();
  *(void *)(inited + 96) = &type metadata for String;
  *(void *)(inited + 104) = v1;
  *(void *)(inited + 72) = v12;
  *(void *)(inited + 80) = v13;
  uint64_t v14 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v9, (uint64_t)&_mh_execute_header, v14, (uint64_t)"Created board with identifier %@ which is a downloaded copy of %@", 65, 2, inited);
  swift_release();
  swift_setDeallocating();
  swift_arrayDestroy();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v15 = (uint64_t (*)(void))v0[1];
  return v15();
}

uint64_t sub_100799714()
{
  swift_release();
  uint64_t v1 = *(void *)(v0 + 1136);
  *(void *)(v0 + 968) = v1;
  swift_errorRetain();
  sub_1005057FC(&qword_101672BD0);
  type metadata accessor for CKError(0);
  if (swift_dynamicCast())
  {
    uint64_t v2 = *(void **)(v0 + 896);
    *(void *)(v0 + 928) = v2;
    sub_10074B4AC();
    _BridgedStoredNSError.code.getter();
    if (*(void *)(v0 + 920) == 4
      || (*(void *)(v0 + 944) = v2, _BridgedStoredNSError.code.getter(), *(void *)(v0 + 936) == 3))
    {
      uint64_t v3 = *(void *)(v0 + 1080);
      uint64_t v64 = *(void *)(v0 + 1064);
      uint64_t v63 = *(void *)(v0 + 1008);
      swift_errorRelease();
      uint64_t v4 = (void *)static OS_os_log.crlSendACopy;
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_10117DF40;
      id v6 = v4;
      uint64_t v7 = UUID.uuidString.getter();
      *(void *)(inited + 56) = &type metadata for String;
      *(void *)(inited + 64) = v3;
      *(void *)(inited + 32) = v7;
      *(void *)(inited + 40) = v8;
      id v9 = v2;
      uint64_t v10 = sub_1009F4A44(v9);
      uint64_t v12 = v11;

      *(void *)(inited + 96) = &type metadata for String;
      *(void *)(inited + 104) = v3;
      *(void *)(inited + 72) = v10;
      *(void *)(inited + 80) = v12;
      *(void *)(v0 + 960) = v9;
      id v13 = v9;
      uint64_t v14 = String.init<A>(reflecting:)();
      *(void *)(inited + 136) = &type metadata for String;
      *(void *)(inited + 144) = v3;
      *(void *)(inited + 112) = v14;
      *(void *)(inited + 120) = v15;
      uint64_t v16 = static os_log_type_t.error.getter();
      sub_100BAC898((uint64_t)v6, (uint64_t)&_mh_execute_header, v16, (uint64_t)"Failed to download Send A Copy board (UUID: %{public}@) due to network error %{public}@ <%@>", 92, 2, inited);
      swift_setDeallocating();
      swift_arrayDestroy();

      uint64_t v17 = type metadata accessor for CRLBoardIdentifier(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v63, 1, 1, v17);
      uint64_t v18 = v64 + OBJC_IVAR____TtC8Freeform28CRLDownloadSharedCopyAttempt_boardIdentifierToOpen;
      swift_beginAccess();
      sub_1006063BC(v63, v18, &qword_101672C30);
      swift_endAccess();
      sub_10079A668();
      if (swift_unknownObjectWeakLoadStrong())
      {
        uint64_t v19 = *(void *)(v0 + 1024);
        uint64_t v20 = type metadata accessor for TaskPriority();
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v19, 1, 1, v20);
        uint64_t v21 = swift_allocObject();
        swift_unknownObjectWeakInit();
        swift_retain();
        swift_retain();
        uint64_t v22 = static MainActor.shared.getter();
        uint64_t v23 = swift_allocObject();
        *(void *)(v23 + 16) = v22;
        *(void *)(v23 + 24) = &protocol witness table for MainActor;
        *(void *)(v23 + 32) = v21;
        *(unsigned char *)(v23 + 40) = 0;
        swift_release();
        sub_1005912D0(v19, (uint64_t)&unk_10167F948, v23);
        swift_release();

        swift_unknownObjectRelease();
        swift_release();
      }
      else
      {
      }
LABEL_7:
      swift_release();
      swift_errorRelease();
      goto LABEL_17;
    }
  }
  swift_errorRelease();
  *(void *)(v0 + 904) = v1;
  swift_errorRetain();
  if (swift_dynamicCast() && *(unsigned char *)(v0 + 1144) == 14)
  {
    uint64_t v24 = *(void *)(v0 + 1080);
    uint64_t v25 = *(void *)(v0 + 1064);
    uint64_t v66 = *(void *)(v0 + 1008);
    swift_errorRelease();
    uint64_t v26 = (void *)static OS_os_log.crlSendACopy;
    uint64_t v27 = swift_initStackObject();
    *(_OWORD *)(v27 + 16) = xmmword_10117DF40;
    id v28 = v26;
    uint64_t v29 = UUID.uuidString.getter();
    *(void *)(v27 + 56) = &type metadata for String;
    *(void *)(v27 + 64) = v24;
    *(void *)(v27 + 32) = v29;
    *(void *)(v27 + 40) = v30;
    uint64_t v31 = sub_1009F5024(14);
    *(void *)(v27 + 96) = &type metadata for String;
    *(void *)(v27 + 104) = v24;
    *(void *)(v27 + 72) = v31;
    *(void *)(v27 + 80) = v32;
    *(unsigned char *)(v0 + 1145) = 14;
    uint64_t v33 = String.init<A>(reflecting:)();
    *(void *)(v27 + 136) = &type metadata for String;
    *(void *)(v27 + 144) = v24;
    *(void *)(v27 + 112) = v33;
    *(void *)(v27 + 120) = v34;
    uint64_t v35 = static os_log_type_t.error.getter();
    sub_100BAC898((uint64_t)v28, (uint64_t)&_mh_execute_header, v35, (uint64_t)"Failed to download Send A Copy board (UUID: %{public}@) due to board being unsupported %{public}@ <%@>", 102, 2, v27);
    swift_setDeallocating();
    swift_arrayDestroy();

    uint64_t v36 = type metadata accessor for CRLBoardIdentifier(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v36 - 8) + 56))(v66, 1, 1, v36);
    uint64_t v37 = v25 + OBJC_IVAR____TtC8Freeform28CRLDownloadSharedCopyAttempt_boardIdentifierToOpen;
    swift_beginAccess();
    sub_1006063BC(v66, v37, &qword_101672C30);
    swift_endAccess();
    sub_10079A668();
    if (swift_unknownObjectWeakLoadStrong())
    {
      uint64_t v38 = *(void *)(v0 + 1024);
      uint64_t v39 = type metadata accessor for TaskPriority();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v39 - 8) + 56))(v38, 1, 1, v39);
      uint64_t v40 = swift_allocObject();
      swift_unknownObjectWeakInit();
      swift_retain();
      swift_retain();
      uint64_t v41 = static MainActor.shared.getter();
      uint64_t v42 = swift_allocObject();
      *(void *)(v42 + 16) = v41;
      *(void *)(v42 + 24) = &protocol witness table for MainActor;
      *(void *)(v42 + 32) = v40;
      *(unsigned char *)(v42 + 40) = 2;
      swift_release();
      sub_1005912D0(v38, (uint64_t)&unk_10167F940, v42);
      swift_release();
      swift_unknownObjectRelease();
      swift_release();
    }
    goto LABEL_7;
  }
  uint64_t v43 = *(void *)(v0 + 1080);
  uint64_t v67 = *(void *)(v0 + 1064);
  uint64_t v65 = *(void *)(v0 + 1008);
  swift_errorRelease();
  uint64_t v44 = (void *)static OS_os_log.crlSendACopy;
  uint64_t v45 = swift_initStackObject();
  *(_OWORD *)(v45 + 16) = xmmword_10117DF40;
  id v46 = v44;
  uint64_t v47 = UUID.uuidString.getter();
  *(void *)(v45 + 56) = &type metadata for String;
  *(void *)(v45 + 64) = v43;
  *(void *)(v45 + 32) = v47;
  *(void *)(v45 + 40) = v48;
  swift_getErrorValue();
  uint64_t v49 = Error.publicDescription.getter(*(void *)(v0 + 808), *(void *)(v0 + 816));
  *(void *)(v45 + 96) = &type metadata for String;
  *(void *)(v45 + 104) = v43;
  *(void *)(v45 + 72) = v49;
  *(void *)(v45 + 80) = v50;
  swift_getErrorValue();
  uint64_t v51 = Error.fullDescription.getter(*(void *)(v0 + 856));
  *(void *)(v45 + 136) = &type metadata for String;
  *(void *)(v45 + 144) = v43;
  *(void *)(v45 + 112) = v51;
  *(void *)(v45 + 120) = v52;
  uint64_t v53 = static os_log_type_t.error.getter();
  sub_100BAC898((uint64_t)v46, (uint64_t)&_mh_execute_header, v53, (uint64_t)"Failed to download Send A Copy board (UUID: %{public}@) with error %{public}@ <%@>", 82, 2, v45);
  swift_setDeallocating();
  swift_arrayDestroy();

  uint64_t v54 = type metadata accessor for CRLBoardIdentifier(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v54 - 8) + 56))(v65, 1, 1, v54);
  uint64_t v55 = v67 + OBJC_IVAR____TtC8Freeform28CRLDownloadSharedCopyAttempt_boardIdentifierToOpen;
  swift_beginAccess();
  sub_1006063BC(v65, v55, &qword_101672C30);
  swift_endAccess();
  sub_10079A668();
  if (swift_unknownObjectWeakLoadStrong())
  {
    uint64_t v56 = *(void *)(v0 + 1024);
    uint64_t v57 = type metadata accessor for TaskPriority();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v57 - 8) + 56))(v56, 1, 1, v57);
    uint64_t v58 = swift_allocObject();
    swift_unknownObjectWeakInit();
    swift_retain();
    swift_retain();
    uint64_t v59 = static MainActor.shared.getter();
    uint64_t v60 = swift_allocObject();
    *(void *)(v60 + 16) = v59;
    *(void *)(v60 + 24) = &protocol witness table for MainActor;
    *(void *)(v60 + 32) = v58;
    *(unsigned char *)(v60 + 40) = 1;
    swift_release();
    sub_1005912D0(v56, (uint64_t)&unk_10167F938, v60);
    swift_release();
    swift_unknownObjectRelease();
    swift_errorRelease();
    swift_release_n();
  }
  else
  {
    swift_errorRelease();
    swift_release();
  }
LABEL_17:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v61 = *(uint64_t (**)(void))(v0 + 8);
  return v61();
}

uint64_t sub_10079A114()
{
  uint64_t v1 = sub_1005057FC(&qword_101672BB0);
  __chkstk_darwin(v1 - 8, v2);
  uint64_t v4 = &v25[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = sub_1005057FC(&qword_101672C30);
  __chkstk_darwin(v5, v6);
  uint64_t v8 = &v25[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (qword_10166FA90 != -1) {
    swift_once();
  }
  swift_beginAccess();
  id v9 = (void *)static OS_os_log.crlSendACopy;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117E810;
  uint64_t v11 = v0 + OBJC_IVAR____TtC8Freeform28CRLDownloadSharedCopyAttempt_boardIdentifier;
  swift_beginAccess();
  sub_100522E9C(v11, (uint64_t)v8, &qword_101672C30);
  id v12 = v9;
  uint64_t v13 = String.init<A>(describing:)();
  uint64_t v15 = v14;
  *(void *)(inited + 56) = &type metadata for String;
  *(void *)(inited + 64) = sub_100528BE4();
  *(void *)(inited + 32) = v13;
  *(void *)(inited + 40) = v15;
  uint64_t v16 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v12, (uint64_t)&_mh_execute_header, v16, (uint64_t)"Received a user-initiated request to cancel shared copy of board with identifier: %@.", 85, 2, inited);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  sub_10079A668();
  uint64_t v17 = type metadata accessor for CRLBoardIdentifier(0);
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v8, 1, 1, v17);
  uint64_t v18 = v0 + OBJC_IVAR____TtC8Freeform28CRLDownloadSharedCopyAttempt_boardIdentifierToOpen;
  swift_beginAccess();
  sub_1006063BC((uint64_t)v8, v18, &qword_101672C30);
  swift_endAccess();
  uint64_t v19 = OBJC_IVAR____TtC8Freeform28CRLDownloadSharedCopyAttempt_downloadTask;
  if (*(void *)(v0 + OBJC_IVAR____TtC8Freeform28CRLDownloadSharedCopyAttempt_downloadTask))
  {
    swift_retain();
    Task.cancel()();
    swift_release();
  }
  *(void *)(v0 + v19) = 0;
  swift_release();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v21 = type metadata accessor for TaskPriority();
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v4, 1, 1, v21);
    uint64_t v22 = swift_allocObject();
    swift_unknownObjectWeakInit();
    type metadata accessor for MainActor();
    swift_retain();
    uint64_t v23 = static MainActor.shared.getter();
    uint64_t v24 = (void *)swift_allocObject();
    void v24[2] = v23;
    void v24[3] = &protocol witness table for MainActor;
    v24[4] = v22;
    swift_release();
    sub_1005912D0((uint64_t)v4, (uint64_t)&unk_10167F918, (uint64_t)v24);
    swift_unknownObjectRelease();
    return swift_release();
  }
  return result;
}

uint64_t sub_10079A4F8(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC8Freeform28CRLDownloadSharedCopyAttempt_snapshotUpdateObservationToken;
  swift_beginAccess();
  sub_100522E9C(v3, (uint64_t)&v7, &qword_101672BF0);
  if (v8)
  {
    sub_100575CE8(&v7, &v9);
    id v4 = [self defaultCenter];
    sub_10050F848(&v9, v10);
    uint64_t v5 = _bridgeAnythingToObjectiveC<A>(_:)();
    if (qword_1016700C0 != -1) {
      swift_once();
    }
    [v4 removeObserver:v5 name:qword_10171C6C8 object:*(void *)(v1 + OBJC_IVAR____TtC8Freeform28CRLDownloadSharedCopyAttempt_boardLibrary)];

    swift_unknownObjectRelease();
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v9);
  }
  else
  {
    sub_100522F00((uint64_t)&v7, &qword_101672BF0);
  }
  swift_beginAccess();
  sub_1006063BC(a1, v3, &qword_101672BF0);
  return swift_endAccess();
}

uint64_t sub_10079A668()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC8Freeform28CRLDownloadSharedCopyAttempt_snapshotUpdateObservationToken;
  swift_beginAccess();
  sub_100522E9C(v1, (uint64_t)&v5, &qword_101672BF0);
  if (!v6) {
    return sub_100522F00((uint64_t)&v5, &qword_101672BF0);
  }
  sub_100575CE8(&v5, &v7);
  id v2 = [self defaultCenter];
  sub_10050F848(&v7, v8);
  uint64_t v3 = _bridgeAnythingToObjectiveC<A>(_:)();
  if (qword_1016700C0 != -1) {
    swift_once();
  }
  [v2 removeObserver:v3 name:qword_10171C6C8 object:*(void *)(v0 + OBJC_IVAR____TtC8Freeform28CRLDownloadSharedCopyAttempt_boardLibrary)];

  swift_unknownObjectRelease();
  return _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v7);
}

void sub_10079A79C(char a1)
{
  uint64_t v3 = sub_1005057FC(&qword_101672BB0);
  __chkstk_darwin(v3 - 8, v4);
  uint64_t v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1005057FC(&qword_101672C30);
  __chkstk_darwin(v7 - 8, v8);
  uint64_t v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for CRLBoardIdentifier(0);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(void *)(v12 + 64);
  __chkstk_darwin(v11, v14);
  uint64_t v15 = (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16, v17);
  uint64_t v19 = (char *)&v26 - v18;
  if (*(unsigned char *)(v1 + OBJC_IVAR____TtC8Freeform28CRLDownloadSharedCopyAttempt_didConfirmBoardIsReadyToOpen) == 1
    && (a1 & 1) == 0)
  {
    uint64_t v20 = v1 + OBJC_IVAR____TtC8Freeform28CRLDownloadSharedCopyAttempt_boardIdentifierToOpen;
    swift_beginAccess();
    sub_100522E9C(v20, (uint64_t)v10, &qword_101672C30);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
    {
      sub_100522F00((uint64_t)v10, &qword_101672C30);
    }
    else
    {
      sub_1005394E4((uint64_t)v10, (uint64_t)v19);
      if (swift_unknownObjectWeakLoadStrong())
      {
        uint64_t v21 = type metadata accessor for TaskPriority();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v6, 1, 1, v21);
        uint64_t v22 = swift_allocObject();
        swift_unknownObjectWeakInit();
        sub_100540CFC((uint64_t)v19, (uint64_t)v15);
        type metadata accessor for MainActor();
        swift_retain();
        uint64_t v23 = static MainActor.shared.getter();
        unint64_t v24 = (*(unsigned __int8 *)(v12 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
        uint64_t v25 = (void *)swift_allocObject();
        v25[2] = v23;
        v25[3] = &protocol witness table for MainActor;
        v25[4] = v22;
        sub_1005394E4((uint64_t)v15, (uint64_t)v25 + v24);
        swift_release();
        sub_1006D9104((uint64_t)v6, (uint64_t)&unk_10167F950, (uint64_t)v25);
        swift_unknownObjectRelease();
        swift_release();
      }
      sub_10079BB04((uint64_t)v19, type metadata accessor for CRLBoardIdentifier);
    }
  }
}

uint64_t sub_10079AADC()
{
  sub_100522F00(v0 + OBJC_IVAR____TtC8Freeform28CRLDownloadSharedCopyAttempt_boardIdentifier, &qword_101672C30);
  sub_100522F00(v0 + OBJC_IVAR____TtC8Freeform28CRLDownloadSharedCopyAttempt_boardIdentifierToOpen, &qword_101672C30);
  swift_release();
  swift_unknownObjectRelease();
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v0 + OBJC_IVAR____TtC8Freeform28CRLDownloadSharedCopyAttempt_dataHandler);
  sub_100523398(v0 + OBJC_IVAR____TtC8Freeform28CRLDownloadSharedCopyAttempt_delegate);
  sub_100522F00(v0 + OBJC_IVAR____TtC8Freeform28CRLDownloadSharedCopyAttempt_snapshotUpdateObservationToken, &qword_101672BF0);

  return swift_deallocClassInstance();
}

uint64_t sub_10079ABC0()
{
  return type metadata accessor for CRLDownloadSharedCopyAttempt();
}

uint64_t type metadata accessor for CRLDownloadSharedCopyAttempt()
{
  uint64_t result = qword_10167F788;
  if (!qword_10167F788) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_10079AC14()
{
  sub_1006040BC();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_10079ACE4()
{
  id v0 = [self mainBundle];
  NSString v1 = String._bridgeToObjectiveC()();
  NSString v2 = String._bridgeToObjectiveC()();
  id v3 = [v0 localizedStringForKey:v1 value:v2 table:0];

  uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v6 = v5;

  qword_10171A858 = v4;
  unk_10171A860 = v6;
}

void sub_10079ADC0()
{
  id v0 = [self mainBundle];
  NSString v1 = String._bridgeToObjectiveC()();
  NSString v2 = String._bridgeToObjectiveC()();
  id v3 = [v0 localizedStringForKey:v1 value:v2 table:0];

  uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v6 = v5;

  qword_10171A868 = v4;
  unk_10171A870 = v6;
}

void sub_10079AE8C()
{
  id v0 = [self mainBundle];
  NSString v1 = String._bridgeToObjectiveC()();
  NSString v2 = String._bridgeToObjectiveC()();
  id v3 = [v0 localizedStringForKey:v1 value:v2 table:0];

  uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v6 = v5;

  qword_10171A878 = v4;
  unk_10171A880 = v6;
}

void sub_10079AF60()
{
  id v0 = [self mainBundle];
  NSString v1 = String._bridgeToObjectiveC()();
  NSString v2 = String._bridgeToObjectiveC()();
  id v3 = [v0 localizedStringForKey:v1 value:v2 table:0];

  uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v6 = v5;

  qword_10171A888 = v4;
  unk_10171A890 = v6;
}

void sub_10079B034()
{
  id v0 = [self mainBundle];
  NSString v1 = String._bridgeToObjectiveC()();
  NSString v2 = String._bridgeToObjectiveC()();
  id v3 = [v0 localizedStringForKey:v1 value:v2 table:0];

  uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v6 = v5;

  qword_10171A898 = v4;
  unk_10171A8A0 = v6;
}

void sub_10079B108()
{
  id v0 = [self mainBundle];
  NSString v1 = String._bridgeToObjectiveC()();
  NSString v2 = String._bridgeToObjectiveC()();
  id v3 = [v0 localizedStringForKey:v1 value:v2 table:0];

  uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v6 = v5;

  qword_10171A8A8 = v4;
  unk_10171A8B0 = v6;
}

void sub_10079B1DC()
{
  id v0 = [self mainBundle];
  NSString v1 = String._bridgeToObjectiveC()();
  NSString v2 = String._bridgeToObjectiveC()();
  id v3 = [v0 localizedStringForKey:v1 value:v2 table:0];

  uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v6 = v5;

  qword_10171A8B8 = v4;
  unk_10171A8C0 = v6;
}

void sub_10079B2B0()
{
  id v0 = [self mainBundle];
  NSString v1 = String._bridgeToObjectiveC()();
  NSString v2 = String._bridgeToObjectiveC()();
  id v3 = [v0 localizedStringForKey:v1 value:v2 table:0];

  uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v6 = v5;

  qword_10171A8C8 = v4;
  unk_10171A8D0 = v6;
}

void sub_10079B384()
{
  id v0 = [self mainBundle];
  NSString v1 = String._bridgeToObjectiveC()();
  NSString v2 = String._bridgeToObjectiveC()();
  id v3 = [v0 localizedStringForKey:v1 value:v2 table:0];

  uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v6 = v5;

  qword_10171A8D8 = v4;
  unk_10171A8E0 = v6;
}

void sub_10079B458()
{
  id v0 = [self mainBundle];
  NSString v1 = String._bridgeToObjectiveC()();
  NSString v2 = String._bridgeToObjectiveC()();
  id v3 = [v0 localizedStringForKey:v1 value:v2 table:0];

  uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v6 = v5;

  qword_10171A8E8 = v4;
  unk_10171A8F0 = v6;
}

void sub_10079B52C()
{
  id v0 = [self mainBundle];
  NSString v1 = String._bridgeToObjectiveC()();
  NSString v2 = String._bridgeToObjectiveC()();
  id v3 = [v0 localizedStringForKey:v1 value:v2 table:0];

  uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v6 = v5;

  qword_10171A8F8 = v4;
  unk_10171A900 = v6;
}

void sub_10079B600()
{
  id v0 = [self mainBundle];
  NSString v1 = String._bridgeToObjectiveC()();
  NSString v2 = String._bridgeToObjectiveC()();
  id v3 = [v0 localizedStringForKey:v1 value:v2 table:0];

  uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v6 = v5;

  qword_10171A908 = v4;
  unk_10171A910 = v6;
}

uint64_t sub_10079B6D4()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10079B70C()
{
  return sub_10079BAB8(40);
}

uint64_t sub_10079B714(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_100528488;
  return sub_100A87394(a1, v4, v5, v6);
}

uint64_t sub_10079B7C8()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10079B800(uint64_t a1)
{
  return sub_100797E40(a1);
}

uint64_t sub_10079B808(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10079B818()
{
  return swift_release();
}

uint64_t sub_10079B824(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for CRLBoardIdentifier(0) - 8);
  uint64_t v5 = v1[2];
  uint64_t v6 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v8 = (uint64_t)v1 + ((*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_100528D08;
  return sub_100798264(a1, v5, v6, v7, v8);
}

uint64_t sub_10079B920()
{
  return sub_10079BAB8(40);
}

uint64_t sub_10079B928(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_100528D08;
  return sub_100A868C0(a1, v4, v5, v6);
}

uint64_t sub_10079B9DC()
{
  return sub_10079BAB8(41);
}

uint64_t sub_10079B9E4(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v6 = *(void *)(v1 + 32);
  char v7 = *(unsigned char *)(v1 + 40);
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_100528D08;
  return sub_100A86C14(a1, v4, v5, v6, v7);
}

uint64_t sub_10079BAA8()
{
  return sub_10079BAB8(41);
}

uint64_t sub_10079BAB0()
{
  return sub_10079BAB8(41);
}

uint64_t sub_10079BAB8(uint64_t a1)
{
  swift_unknownObjectRelease();
  swift_release();

  return _swift_deallocObject(v1, a1, 7);
}

uint64_t sub_10079BB04(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_10079BB68()
{
  uint64_t v1 = *(void *)(type metadata accessor for CRLBoardIdentifier(0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 40) & ~v2;
  uint64_t v4 = v3 + *(void *)(v1 + 64);
  uint64_t v5 = v2 | 7;
  swift_unknownObjectRelease();
  swift_release();
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v0 + v3, v6);
  type metadata accessor for CRLBoardIdentifierStorage(0);
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, v4, v5);
}

uint64_t sub_10079BC68(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for CRLBoardIdentifier(0) - 8);
  uint64_t v5 = v1[2];
  uint64_t v6 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v8 = (uint64_t)v1 + ((*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_100528488;
  return sub_100A876F8(a1, v5, v6, v7, v8);
}

unsigned char *sub_10079BD64(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DispatchPredicate();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4, v6);
  uint64_t v8 = (uint64_t *)((char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = *(void **)(*(void *)(a2 + 16) + 32);
  *uint64_t v8 = v9;
  (*(void (**)(void *, void, uint64_t))(v5 + 104))(v8, enum case for DispatchPredicate.onQueue(_:), v4);
  id v10 = v9;
  LOBYTE(v9) = _dispatchPreconditionTest(_:)();
  uint64_t result = (unsigned char *)(*(uint64_t (**)(void *, uint64_t))(v5 + 8))(v8, v4);
  if (v9)
  {
    uint64_t result = (unsigned char *)sub_10079E97C(a1, a2);
    if (result) {
      return (unsigned char *)sub_100670608(result, v12);
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_10079BE94(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DispatchPredicate();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4, v6);
  uint64_t v8 = (uint64_t *)((char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = *(void **)(*(void *)(a2 + 16) + 32);
  *uint64_t v8 = v9;
  (*(void (**)(void *, void, uint64_t))(v5 + 104))(v8, enum case for DispatchPredicate.onQueue(_:), v4);
  id v10 = v9;
  LOBYTE(v9) = _dispatchPreconditionTest(_:)();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v5 + 8))(v8, v4);
  if ((v9 & 1) == 0)
  {
    __break(1u);
    goto LABEL_9;
  }
  uint64_t result = swift_beginAccess();
  if (a1 < (uint64_t)0xFFFFFFFF80000000)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  if (a1 > 0x7FFFFFFF)
  {
LABEL_10:
    __break(1u);
    return result;
  }
  if (sqlite3_column_type(*(sqlite3_stmt **)(a2 + 24), a1) == 5) {
    return 0;
  }
  else {
    return sqlite3_column_int(*(sqlite3_stmt **)(a2 + 24), a1);
  }
}

uint64_t sub_10079C01C(uint64_t a1, uint64_t a2, unint64_t a3)
{
  if (a3)
  {
    v5._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
    String.append(_:)(v5);
    swift_bridgeObjectRelease();
    v6._countAndFlagsBits = 2112062;
    v6._object = (void *)0xE300000000000000;
    String.append(_:)(v6);
    uint64_t v7 = a2;
    unint64_t v8 = a3;
  }
  else
  {
    v9._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
    String.append(_:)(v9);
    swift_bridgeObjectRelease();
    uint64_t v7 = 62;
    unint64_t v8 = 0xE100000000000000;
  }
  String.append(_:)(*(Swift::String *)&v7);
  return 60;
}

uint64_t sub_10079C104()
{
  uint64_t v0 = sub_1005057FC(&qword_101672E90);
  __chkstk_darwin(v0 - 8, v1);
  uint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for URL();
  sub_100568B28(v4, qword_10171A928);
  uint64_t v5 = sub_100556B74(v4, (uint64_t)qword_10171A928);
  URL.init(string:)();
  uint64_t v6 = *(void *)(v4 - 8);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 48))(v3, 1, v4);
  if (result != 1) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v6 + 32))(v5, v3, v4);
  }
  __break(1u);
  return result;
}

BOOL sub_10079C23C()
{
  uint64_t v1 = type metadata accessor for DispatchPredicate();
  uint64_t v2 = *(void *)(v1 - 8);
  __n128 v4 = __chkstk_darwin(v1, v3);
  uint64_t v6 = &v14[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = *(void **)(v0 + 32);
  *uint64_t v6 = v7;
  (*(void (**)(void *, void, uint64_t, __n128))(v2 + 104))(v6, enum case for DispatchPredicate.onQueue(_:), v1, v4);
  id v8 = v7;
  LOBYTE(v7) = _dispatchPreconditionTest(_:)();
  (*(void (**)(void *, uint64_t))(v2 + 8))(v6, v1);
  if ((v7 & 1) == 0)
  {
    __break(1u);
    goto LABEL_7;
  }
  LODWORD(v1) = sub_1007A0098(v0, 0xD000000000000017, 0x80000001012513D0);
  if (v1 != 101)
  {
    if (qword_10166F9C8 == -1)
    {
LABEL_4:
      swift_beginAccess();
      Swift::String v9 = (void *)static OS_os_log.crlDefault;
      sub_1005057FC((uint64_t *)&unk_101672B40);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_10117E810;
      *(void *)(inited + 56) = &type metadata for Int32;
      *(void *)(inited + 64) = &protocol witness table for Int32;
      *(_DWORD *)(inited + 32) = v1;
      id v11 = v9;
      uint64_t v12 = static os_log_type_t.default.getter();
      sub_100BAC898((uint64_t)v11, (uint64_t)&_mh_execute_header, v12, (uint64_t)"Failed to enable incremental auto-vacuum on the database with error %d", 70, 2, inited);
      swift_setDeallocating();
      sub_1005057FC(&qword_101672B50);
      swift_arrayDestroy();

      return v1 == 101;
    }
LABEL_7:
    swift_once();
    goto LABEL_4;
  }
  return v1 == 101;
}

void sub_10079C468(sqlite3_stmt **a1, uint64_t a2)
{
  uint64_t v4 = v3;
  uint64_t v7 = type metadata accessor for DispatchPredicate();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7, v9);
  id v11 = (void *)((char *)&v51 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v12 = *(void **)(v2 + 32);
  *id v11 = v12;
  uint64_t v13 = *(void (**)(void))(v8 + 104);
  unsigned int v58 = enum case for DispatchPredicate.onQueue(_:);
  uint64_t v57 = (void (*)(void *, void, uint64_t))v13;
  v13(v11);
  id v14 = v12;
  uint64_t v15 = _dispatchPreconditionTest(_:)();
  uint64_t v56 = *(void (**)(void *, uint64_t))(v8 + 8);
  v56(v11, v7);
  if ((v15 & 1) == 0)
  {
    __break(1u);
    goto LABEL_28;
  }
  uint64_t v15 = a2;
  uint64_t v16 = sub_10079CD7C();
  if (!v3 && (v17 & 1) == 0)
  {
    uint64_t v18 = v16;
    if (v16 >= 1)
    {
      uint64_t v4 = v2;
      uint64_t v19 = sub_10079CA78();
      double v20 = (double)(uint64_t)a1 / (double)v18;
      if (v20 <= -9.22337204e18) {
        goto LABEL_29;
      }
      if (v20 >= 9.22337204e18) {
        goto LABEL_30;
      }
      double v21 = (double)v15 / (double)v18;
      if ((*(void *)&v20 & 0x7FF0000000000000) == 0x7FF0000000000000
        || (*(void *)&v21 & 0x7FF0000000000000) == 0x7FF0000000000000)
      {
        goto LABEL_31;
      }
      if (v21 <= -9.22337204e18) {
        goto LABEL_32;
      }
      if (v21 >= 9.22337204e18) {
        goto LABEL_33;
      }
      a1 = (sqlite3_stmt **)(uint64_t)v21;
      if (__OFADD__((uint64_t)v20, (uint64_t)v21)) {
        goto LABEL_34;
      }
      if (v19 >= (uint64_t)v20 + (uint64_t)v21)
      {
        uint64_t v15 = v2;
        uint64_t v4 = 0;
        if (qword_10166F9C8 != -1) {
          goto LABEL_35;
        }
        while (1)
        {
          swift_beginAccess();
          uint64_t v23 = (void *)static OS_os_log.crlDefault;
          uint64_t v52 = sub_1005057FC((uint64_t *)&unk_101672B40);
          uint64_t inited = swift_initStackObject();
          long long v51 = xmmword_10117E810;
          *(_OWORD *)(inited + 16) = xmmword_10117E810;
          uint64_t v54 = inited + 32;
          uint64_t v55 = v23;
          uint64_t v53 = a1;
          if (a1)
          {
            uint64_t v59 = a1;
            id v25 = v23;
            uint64_t v60 = dispatch thunk of CustomStringConvertible.description.getter();
            unint64_t v61 = v26;
            v27._countAndFlagsBits = 0x6170206565726620;
            v27._object = (void *)0xEB00000000736567;
            String.append(_:)(v27);
            uint64_t v29 = v60;
            unint64_t v28 = v61;
            unint64_t v30 = sub_100528BE4();
            unint64_t v31 = v28;
            unint64_t v32 = v30;
          }
          else
          {
            unint64_t v33 = sub_100528BE4();
            uint64_t v34 = v23;
            unint64_t v32 = v33;
            id v35 = v34;
            unint64_t v31 = 0xEE00736567617020;
            uint64_t v29 = 0x65657266206C6C61;
          }
          *(void *)(inited + 56) = &type metadata for String;
          *(void *)(inited + 64) = v32;
          *(void *)(inited + 32) = v29;
          *(void *)(inited + 40) = v31;
          uint64_t v36 = static os_log_type_t.default.getter();
          uint64_t v37 = v55;
          sub_100BAC898((uint64_t)v55, (uint64_t)&_mh_execute_header, v36, (uint64_t)"Performing incremental vacuum with %{public}@", 45, 2, inited);
          swift_setDeallocating();
          sub_1005057FC(&qword_101672B50);
          swift_arrayDestroy();

          uint64_t v60 = 0;
          unint64_t v61 = 0xE000000000000000;
          swift_retain();
          _StringGuts.grow(_:)(29);
          swift_bridgeObjectRelease();
          uint64_t v60 = 0xD00000000000001ALL;
          unint64_t v61 = 0x8000000101251360;
          uint64_t v59 = v53;
          v38._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
          String.append(_:)(v38);
          swift_bridgeObjectRelease();
          v39._countAndFlagsBits = 41;
          v39._object = (void *)0xE100000000000000;
          String.append(_:)(v39);
          uint64_t v40 = v60;
          uint64_t v41 = v61;
          type metadata accessor for SQLiteStatement();
          swift_initStackObject();
          uint64_t v42 = sub_10079FC40(v15, v40, v41);
          swift_release();
          if (v4) {
            break;
          }
          uint64_t v4 = 0;
          a1 = (sqlite3_stmt **)(v42 + 24);
          swift_beginAccess();
          while (1)
          {
            uint64_t v43 = *(void **)(*(void *)(v42 + 16) + 32);
            *id v11 = v43;
            v57(v11, v58, v7);
            id v44 = v43;
            uint64_t v15 = _dispatchPreconditionTest(_:)();
            v56(v11, v7);
            if ((v15 & 1) == 0) {
              break;
            }
            int v45 = sqlite3_step(*a1);
            if (v45 != 100)
            {
              int v46 = v45;
              if (v45 == 101)
              {
                swift_release();
              }
              else
              {
                uint64_t v47 = (void *)static OS_os_log.crlDefault;
                uint64_t v48 = swift_initStackObject();
                *(_OWORD *)(v48 + 16) = v51;
                *(void *)(v48 + 56) = &type metadata for Int32;
                *(void *)(v48 + 64) = &protocol witness table for Int32;
                *(_DWORD *)(v48 + 32) = v46;
                id v49 = v47;
                uint64_t v50 = static os_log_type_t.default.getter();
                sub_100BAC898((uint64_t)v49, (uint64_t)&_mh_execute_header, v50, (uint64_t)"Failed to perform incremental vacuum on the database with error %d", 66, 2, v48);
                swift_release();
                swift_setDeallocating();
                swift_arrayDestroy();
              }
              return;
            }
          }
LABEL_28:
          __break(1u);
LABEL_29:
          __break(1u);
LABEL_30:
          __break(1u);
LABEL_31:
          __break(1u);
LABEL_32:
          __break(1u);
LABEL_33:
          __break(1u);
LABEL_34:
          __break(1u);
LABEL_35:
          swift_once();
        }
      }
    }
  }
}

uint64_t sub_10079CA78()
{
  uint64_t v2 = type metadata accessor for DispatchPredicate();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2, v4);
  uint64_t v6 = (uint64_t *)((char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = *(void **)(v0 + 32);
  *uint64_t v6 = v7;
  uint64_t v8 = enum case for DispatchPredicate.onQueue(_:);
  unint64_t v28 = *(void (**)(void *, uint64_t, uint64_t))(v3 + 104);
  v28(v6, enum case for DispatchPredicate.onQueue(_:), v2);
  id v9 = v7;
  LOBYTE(v7) = _dispatchPreconditionTest(_:)();
  Swift::String v27 = *(void (**)(void *, uint64_t))(v3 + 8);
  v27(v6, v2);
  if ((v7 & 1) == 0)
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  type metadata accessor for SQLiteStatement();
  uint64_t inited = swift_initStackObject();
  uint64_t v11 = swift_retain();
  uint64_t v12 = sub_10079FC40(v11, 0xD000000000000016, 0x8000000101251310);
  swift_release();
  if (v1) {
    return inited;
  }
  uint64_t v13 = *(void **)(*(void *)(v12 + 16) + 32);
  *uint64_t v6 = v13;
  v28(v6, v8, v2);
  id v14 = v13;
  LOBYTE(v13) = _dispatchPreconditionTest(_:)();
  v27(v6, v2);
  if ((v13 & 1) == 0) {
    goto LABEL_14;
  }
  type metadata accessor for SQLiteRowIterator();
  uint64_t v15 = (void *)swift_initStackObject();
  v15[4] = 0;
  v15[5] = 1;
  v15[2] = v12;
  v15[3] = 0;
  uint64_t inited = sub_10079ECE0();
  swift_setDeallocating();
  sub_1007A0344(v15[3], v15[4], v15[5]);
  if (inited)
  {
    uint64_t v26 = sub_10079BE94(0, inited);
    uint64_t v16 = v8;
    char v18 = v17;
    swift_release();
    BOOL v19 = (v18 & 1) == 0;
    uint64_t v8 = v16;
    if (v19) {
      uint64_t inited = v26;
    }
    else {
      uint64_t inited = 0;
    }
  }
  double v20 = *(void **)(*(void *)(v12 + 16) + 32);
  *uint64_t v6 = v20;
  v28(v6, v8, v2);
  id v21 = v20;
  char v22 = _dispatchPreconditionTest(_:)();
  v27(v6, v2);
  if ((v22 & 1) == 0) {
LABEL_15:
  }
    __break(1u);
  swift_beginAccess();
  uint64_t v23 = *(sqlite3_stmt **)(v12 + 24);
  if (v23)
  {
    sqlite3_finalize(v23);
    *(void *)(v12 + 24) = 0;
  }
  swift_release();
  return inited;
}

uint64_t sub_10079CD7C()
{
  uint64_t v2 = type metadata accessor for DispatchPredicate();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2, v4);
  uint64_t v6 = (uint64_t *)((char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = *(void **)(v0 + 32);
  *uint64_t v6 = v7;
  uint64_t v8 = enum case for DispatchPredicate.onQueue(_:);
  uint64_t v25 = *(void (**)(void *, uint64_t, uint64_t))(v3 + 104);
  v25(v6, enum case for DispatchPredicate.onQueue(_:), v2);
  id v9 = v7;
  LOBYTE(v7) = _dispatchPreconditionTest(_:)();
  unint64_t v24 = *(void (**)(void *, uint64_t))(v3 + 8);
  v24(v6, v2);
  if ((v7 & 1) == 0)
  {
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  type metadata accessor for SQLiteStatement();
  uint64_t inited = swift_initStackObject();
  uint64_t v11 = swift_retain();
  uint64_t v12 = sub_10079FC40(v11, 0xD000000000000011, 0x80000001012512F0);
  swift_release();
  if (v1) {
    return inited;
  }
  uint64_t v13 = *(void **)(*(void *)(v12 + 16) + 32);
  *uint64_t v6 = v13;
  v25(v6, v8, v2);
  id v14 = v13;
  LOBYTE(v13) = _dispatchPreconditionTest(_:)();
  v24(v6, v2);
  if ((v13 & 1) == 0) {
    goto LABEL_13;
  }
  unsigned int v23 = v8;
  type metadata accessor for SQLiteRowIterator();
  uint64_t v15 = (void *)swift_initStackObject();
  v15[4] = 0;
  v15[5] = 1;
  v15[2] = v12;
  v15[3] = 0;
  uint64_t v16 = sub_10079ECE0();
  swift_setDeallocating();
  sub_1007A0344(v15[3], v15[4], v15[5]);
  if (v16)
  {
    uint64_t inited = sub_10079BE94(0, v16);
    swift_release();
  }
  else
  {
    uint64_t inited = 0;
  }
  char v17 = *(void **)(*(void *)(v12 + 16) + 32);
  *uint64_t v6 = v17;
  v25(v6, v23, v2);
  id v18 = v17;
  char v19 = _dispatchPreconditionTest(_:)();
  v24(v6, v2);
  if ((v19 & 1) == 0) {
LABEL_14:
  }
    __break(1u);
  swift_beginAccess();
  double v20 = *(sqlite3_stmt **)(v12 + 24);
  if (v20)
  {
    sqlite3_finalize(v20);
    *(void *)(v12 + 24) = 0;
  }
  swift_release();
  return inited;
}

uint64_t sub_10079D07C(int a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for DispatchPredicate();
  uint64_t v5 = *(void *)(v4 - 8);
  __n128 v7 = __chkstk_darwin(v4, v6);
  id v9 = (uint64_t *)((char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v10 = *(void **)(v2 + 32);
  *id v9 = v10;
  (*(void (**)(void *, void, uint64_t, __n128))(v5 + 104))(v9, enum case for DispatchPredicate.onQueue(_:), v4, v7);
  id v11 = v10;
  LOBYTE(v10) = _dispatchPreconditionTest(_:)();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v5 + 8))(v9, v4);
  if (v10)
  {
    URL.absoluteString.getter();
    NSString v13 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v14 = (const char *)[v13 fileSystemRepresentation];
    id v15 = v13;
    uint64_t v16 = (sqlite3 **)(v2 + 16);
    swift_beginAccess();
    int v17 = sqlite3_open_v2(v14, (sqlite3 **)(v2 + 16), a1, 0);
    uint64_t result = swift_endAccess();
    if (v17)
    {
      sqlite3_close_v2(*v16);
      *uint64_t v16 = 0;
      sub_10079FF00();
      swift_allocError();
      *(_DWORD *)uint64_t v18 = v17;
      *(void *)(v18 + 8) = 0;
      *(void *)(v18 + 16) = 0;
      return swift_willThrow();
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_10079D258()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC8Freeform14SQLiteDatabase_url;
  uint64_t v2 = type metadata accessor for URL();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  return swift_deallocClassInstance();
}

uint64_t sub_10079D300()
{
  return type metadata accessor for SQLiteDatabase();
}

uint64_t type metadata accessor for SQLiteDatabase()
{
  uint64_t result = qword_10167F988;
  if (!qword_10167F988) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10079D354()
{
  uint64_t result = type metadata accessor for URL();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

void sub_10079D40C()
{
  qword_10171A940 = -1;
}

uint64_t sub_10079D41C()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2, v4);
  uint64_t v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for DispatchQoS();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7, v9);
  id v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t v12 = *(void *)(v0 + 24);
  if (v12)
  {
    NSString v13 = *(void **)(*(void *)(v1 + 16) + 32);
    uint64_t v14 = swift_allocObject();
    *(void *)(v14 + 16) = v12;
    aBlock[4] = sub_1007A0368;
    aBlock[5] = v14;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = *(void *)"";
    aBlock[2] = sub_100679958;
    void aBlock[3] = &unk_1015139B0;
    id v15 = _Block_copy(aBlock);
    uint64_t v20 = v7;
    uint64_t v16 = v15;
    id v17 = v13;
    static DispatchQoS.unspecified.getter();
    id v21 = _swiftEmptyArrayStorage;
    sub_100522CDC();
    sub_1005057FC((uint64_t *)&unk_1016725D0);
    sub_10056B494();
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v16);

    (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v20);
    swift_release();
  }
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for SQLiteStatement()
{
  return self;
}

uint64_t sub_10079D6E8(int a1, uint64_t a2)
{
  uint64_t v21 = a2;
  int v20 = a1;
  uint64_t v3 = type metadata accessor for DispatchPredicate();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3, v5);
  uint64_t v7 = (uint64_t *)((char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = *(void *)(v2 + 16);
  uint64_t v9 = *(void **)(v8 + 32);
  *uint64_t v7 = v9;
  uint64_t v10 = enum case for DispatchPredicate.onQueue(_:);
  id v11 = *(void (**)(void *, uint64_t, uint64_t))(v4 + 104);
  v11(v7, enum case for DispatchPredicate.onQueue(_:), v3);
  id v12 = v9;
  char v13 = _dispatchPreconditionTest(_:)();
  uint64_t v14 = *(uint64_t (**)(void *, uint64_t))(v4 + 8);
  uint64_t result = v14(v7, v3);
  if ((v13 & 1) == 0)
  {
    __break(1u);
    goto LABEL_7;
  }
  uint64_t v16 = *(void **)(v8 + 32);
  *uint64_t v7 = v16;
  v11(v7, v10, v3);
  id v17 = v16;
  char v18 = _dispatchPreconditionTest(_:)();
  uint64_t result = v14(v7, v3);
  if ((v18 & 1) == 0)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  uint64_t result = swift_beginAccess();
  if (v21 < (uint64_t)0xFFFFFFFF80000000)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  if (v21 <= 0x7FFFFFFF) {
    return sqlite3_bind_int(*(sqlite3_stmt **)(v2 + 24), v21, v20 & 1);
  }
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_10079D8A8(sqlite3_int64 a1, uint64_t a2)
{
  sqlite3_int64 v20 = a1;
  uint64_t v21 = a2;
  uint64_t v3 = type metadata accessor for DispatchPredicate();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3, v5);
  uint64_t v7 = (uint64_t *)((char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = *(void *)(v2 + 16);
  uint64_t v9 = *(void **)(v8 + 32);
  *uint64_t v7 = v9;
  uint64_t v10 = enum case for DispatchPredicate.onQueue(_:);
  id v11 = *(void (**)(void *, uint64_t, uint64_t))(v4 + 104);
  v11(v7, enum case for DispatchPredicate.onQueue(_:), v3);
  id v12 = v9;
  char v13 = _dispatchPreconditionTest(_:)();
  uint64_t v14 = *(uint64_t (**)(void *, uint64_t))(v4 + 8);
  uint64_t result = v14(v7, v3);
  if ((v13 & 1) == 0)
  {
    __break(1u);
    goto LABEL_7;
  }
  uint64_t v16 = *(void **)(v8 + 32);
  *uint64_t v7 = v16;
  v11(v7, v10, v3);
  id v17 = v16;
  char v18 = _dispatchPreconditionTest(_:)();
  uint64_t result = v14(v7, v3);
  if ((v18 & 1) == 0)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  uint64_t result = swift_beginAccess();
  if (v21 < (uint64_t)0xFFFFFFFF80000000)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  if (v21 <= 0x7FFFFFFF) {
    return sqlite3_bind_int64(*(sqlite3_stmt **)(v2 + 24), v21, v20);
  }
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_10079DA60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  v23[0] = a2;
  uint64_t v7 = type metadata accessor for String.Encoding();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7, v9);
  id v11 = (char *)v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for DispatchPredicate();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12, v14);
  uint64_t v16 = (void *)((char *)v23 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  id v17 = *(void **)(*((void *)v4 + 2) + 32);
  *uint64_t v16 = v17;
  (*(void (**)(void *, void, uint64_t))(v13 + 104))(v16, enum case for DispatchPredicate.onQueue(_:), v12);
  id v18 = v17;
  LOBYTE(v17) = _dispatchPreconditionTest(_:)();
  sqlite3_int64 v20 = *(void (**)(void *, uint64_t))(v13 + 8);
  uint64_t v19 = v13 + 8;
  v20(v16, v12);
  if ((v17 & 1) == 0)
  {
    __break(1u);
    goto LABEL_10;
  }
  v23[1] = a1;
  v23[2] = v23[0];
  static String.Encoding.utf8.getter();
  sub_10052E310();
  uint64_t v19 = StringProtocol.cString(using:)();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
  swift_beginAccess();
  if (a3 < (uint64_t)0xFFFFFFFF80000000)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  if (a3 <= 0x7FFFFFFF)
  {
    uint64_t v4 = (sqlite3_stmt *)*((void *)v4 + 3);
    if (qword_10166F130 == -1) {
      goto LABEL_5;
    }
    goto LABEL_12;
  }
LABEL_11:
  __break(1u);
LABEL_12:
  swift_once();
LABEL_5:
  if (v19) {
    uint64_t v21 = (const char *)(v19 + 32);
  }
  else {
    uint64_t v21 = 0;
  }
  sqlite3_bind_text(v4, a3, v21, -1, (void (__cdecl *)(void *))qword_10171A940);
  return swift_bridgeObjectRelease();
}

uint64_t sub_10079DCE4(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v7 = type metadata accessor for DispatchPredicate();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7, v9);
  id v11 = (void *)((char *)&v25[-1] - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v12 = *(void **)(*((void *)v3 + 2) + 32);
  *id v11 = v12;
  (*(void (**)(void *, void, uint64_t))(v8 + 104))(v11, enum case for DispatchPredicate.onQueue(_:), v7);
  id v13 = v12;
  LOBYTE(v12) = _dispatchPreconditionTest(_:)();
  (*(void (**)(void *, uint64_t))(v8 + 8))(v11, v7);
  if (v12)
  {
    switch(a2 >> 62)
    {
      case 1uLL:
        uint64_t v7 = (int)a1;
        if (a1 >> 32 < (int)a1) {
          goto LABEL_20;
        }
        swift_retain();
        sub_100510D4C(a1, a2);
        sub_10079FF54((int)a1, a1 >> 32, a2, v3, a3);
        sub_100510084(a1, a2);
        break;
      case 2uLL:
        uint64_t v19 = *(void *)(a1 + 16);
        uint64_t v20 = *(void *)(a1 + 24);
        swift_retain();
        swift_retain();
        swift_retain();
        sub_10079FF54(v19, v20, a2, v3, a3);
        swift_release();
        swift_release();
        break;
      case 3uLL:
        memset(v25, 0, 14);
        swift_beginAccess();
        if (a3 < (uint64_t)0xFFFFFFFF80000000) {
          goto LABEL_19;
        }
        if (a3 > 0x7FFFFFFF) {
          goto LABEL_21;
        }
        uint64_t v21 = (sqlite3_stmt *)*((void *)v3 + 3);
        uint64_t v22 = qword_10166F130;
        swift_retain();
        if (v22 != -1) {
          swift_once();
        }
        uint64_t v15 = (void (__cdecl *)(void *))qword_10171A940;
        uint64_t v16 = v21;
        int v17 = a3;
        int v18 = 0;
        goto LABEL_13;
      default:
        v25[0] = a1;
        LOWORD(v25[1]) = a2;
        BYTE2(v25[1]) = BYTE2(a2);
        BYTE3(v25[1]) = BYTE3(a2);
        BYTE4(v25[1]) = BYTE4(a2);
        BYTE5(v25[1]) = BYTE5(a2);
        swift_beginAccess();
        if (a3 > 0x7FFFFFFF) {
          goto LABEL_18;
        }
        if (a3 < (uint64_t)0xFFFFFFFF80000000) {
          goto LABEL_22;
        }
        uint64_t v7 = *((void *)v3 + 3);
        LODWORD(a1) = BYTE6(a2);
        uint64_t v14 = qword_10166F130;
        swift_retain();
        if (v14 == -1) {
          goto LABEL_6;
        }
        goto LABEL_23;
    }
  }
  else
  {
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
LABEL_21:
    __break(1u);
LABEL_22:
    __break(1u);
LABEL_23:
    swift_once();
LABEL_6:
    uint64_t v15 = (void (__cdecl *)(void *))qword_10171A940;
    uint64_t v16 = (sqlite3_stmt *)v7;
    int v17 = a3;
    int v18 = a1;
LABEL_13:
    sqlite3_bind_blob(v16, v17, v25, v18, v15);
  }
  return swift_release();
}

uint64_t sub_10079E0E8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for DispatchPredicate();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6, v8);
  uint64_t v10 = (uint64_t *)((char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v11 = sub_1005057FC((uint64_t *)&unk_101674520);
  __chkstk_darwin(v11 - 8, v12);
  uint64_t v14 = (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for UUID();
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15, v17);
  uint64_t v19 = (char *)&v26 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1005107BC(a1, (uint64_t)v14);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1)
  {
    sub_100510824((uint64_t)v14);
    uint64_t v20 = *(void **)(*(void *)(v3 + 16) + 32);
    *uint64_t v10 = v20;
    (*(void (**)(void *, void, uint64_t))(v7 + 104))(v10, enum case for DispatchPredicate.onQueue(_:), v6);
    id v21 = v20;
    LOBYTE(v20) = _dispatchPreconditionTest(_:)();
    uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v7 + 8))(v10, v6);
    if (v20)
    {
      uint64_t result = swift_beginAccess();
      if (a2 >= (uint64_t)0xFFFFFFFF80000000)
      {
        if (a2 <= 0x7FFFFFFF) {
          return sqlite3_bind_null(*(sqlite3_stmt **)(v3 + 24), a2);
        }
        goto LABEL_10;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
LABEL_10:
    __break(1u);
    return result;
  }
  (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v19, v14, v15);
  uint64_t v23 = UUID.crl_data()();
  unint64_t v25 = v24;
  sub_10079DCE4(v23, v24, a2);
  sub_100510084(v23, v25);
  return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v19, v15);
}

uint64_t sub_10079E3B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DispatchPredicate();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4, v6);
  uint64_t v8 = (uint64_t *)((char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = *(void **)(*(void *)(a2 + 16) + 32);
  *uint64_t v8 = v9;
  (*(void (**)(void *, void, uint64_t))(v5 + 104))(v8, enum case for DispatchPredicate.onQueue(_:), v4);
  id v10 = v9;
  LOBYTE(v9) = _dispatchPreconditionTest(_:)();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v5 + 8))(v8, v4);
  if (v9)
  {
    BOOL v12 = sub_10079BE94(a1, a2) != 0;
    if (v13) {
      return 2;
    }
    else {
      return v12;
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

sqlite3_int64 sub_10079E4E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DispatchPredicate();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4, v6);
  uint64_t v8 = (uint64_t *)((char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = *(void **)(*(void *)(a2 + 16) + 32);
  *uint64_t v8 = v9;
  (*(void (**)(void *, void, uint64_t))(v5 + 104))(v8, enum case for DispatchPredicate.onQueue(_:), v4);
  id v10 = v9;
  LOBYTE(v9) = _dispatchPreconditionTest(_:)();
  sqlite3_int64 result = (*(uint64_t (**)(void *, uint64_t))(v5 + 8))(v8, v4);
  if ((v9 & 1) == 0)
  {
    __break(1u);
    goto LABEL_9;
  }
  sqlite3_int64 result = swift_beginAccess();
  if (a1 < (uint64_t)0xFFFFFFFF80000000)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  if (a1 > 0x7FFFFFFF)
  {
LABEL_10:
    __break(1u);
    return result;
  }
  if (sqlite3_column_type(*(sqlite3_stmt **)(a2 + 24), a1) == 5) {
    return 0;
  }
  else {
    return sqlite3_column_int64(*(sqlite3_stmt **)(a2 + 24), a1);
  }
}

uint64_t sub_10079E66C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DispatchPredicate();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4, v6);
  uint64_t v8 = (uint64_t *)((char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = *(void **)(*(void *)(a2 + 16) + 32);
  *uint64_t v8 = v9;
  (*(void (**)(void *, void, uint64_t))(v5 + 104))(v8, enum case for DispatchPredicate.onQueue(_:), v4);
  id v10 = v9;
  LOBYTE(v9) = _dispatchPreconditionTest(_:)();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v5 + 8))(v8, v4);
  if ((v9 & 1) == 0)
  {
    __break(1u);
    goto LABEL_9;
  }
  uint64_t result = swift_beginAccess();
  if (a1 < (uint64_t)0xFFFFFFFF80000000)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  if (a1 > 0x7FFFFFFF)
  {
LABEL_10:
    __break(1u);
    return result;
  }
  if (sqlite3_column_type(*(sqlite3_stmt **)(a2 + 24), a1) == 5) {
    return 0;
  }
  else {
    return sqlite3_column_double(*(sqlite3_stmt **)(a2 + 24), a1);
  }
}

uint64_t sub_10079E7F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DispatchPredicate();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4, v6);
  uint64_t v8 = (uint64_t *)((char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = *(void **)(*(void *)(a2 + 16) + 32);
  *uint64_t v8 = v9;
  (*(void (**)(void *, void, uint64_t))(v5 + 104))(v8, enum case for DispatchPredicate.onQueue(_:), v4);
  id v10 = v9;
  LOBYTE(v9) = _dispatchPreconditionTest(_:)();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v5 + 8))(v8, v4);
  if ((v9 & 1) == 0)
  {
    __break(1u);
    goto LABEL_10;
  }
  uint64_t result = swift_beginAccess();
  if (a1 < (uint64_t)0xFFFFFFFF80000000)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  if (a1 > 0x7FFFFFFF)
  {
LABEL_11:
    __break(1u);
    return result;
  }
  if (sqlite3_column_type(*(sqlite3_stmt **)(a2 + 24), a1) == 5) {
    return 0;
  }
  uint64_t result = (uint64_t)sqlite3_column_text(*(sqlite3_stmt **)(a2 + 24), a1);
  if (result) {
    return String.init(cString:)();
  }
  return result;
}

uint64_t sub_10079E97C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DispatchPredicate();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4, v6);
  uint64_t v8 = (uint64_t *)((char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = *(void **)(*(void *)(a2 + 16) + 32);
  *uint64_t v8 = v9;
  (*(void (**)(void *, void, uint64_t))(v5 + 104))(v8, enum case for DispatchPredicate.onQueue(_:), v4);
  id v10 = v9;
  LOBYTE(v9) = _dispatchPreconditionTest(_:)();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v5 + 8))(v8, v4);
  if ((v9 & 1) == 0)
  {
    __break(1u);
    goto LABEL_10;
  }
  uint64_t v12 = (sqlite3_stmt **)(a2 + 24);
  uint64_t result = swift_beginAccess();
  if (a1 < (uint64_t)0xFFFFFFFF80000000)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  if (a1 > 0x7FFFFFFF)
  {
LABEL_11:
    __break(1u);
    return result;
  }
  if (sqlite3_column_type(*(sqlite3_stmt **)(a2 + 24), a1) == 5) {
    return 0;
  }
  char v13 = sqlite3_column_blob(*v12, a1);
  if (v13) {
    sqlite3_column_bytes(*v12, a1);
  }
  return (uint64_t)v13;
}

uint64_t sub_10079EB18@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v7 = type metadata accessor for DispatchPredicate();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7, v9);
  uint64_t v11 = (uint64_t *)((char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v12 = *(void **)(*(void *)(a2 + 16) + 32);
  *uint64_t v11 = v12;
  (*(void (**)(void *, void, uint64_t))(v8 + 104))(v11, enum case for DispatchPredicate.onQueue(_:), v7);
  id v13 = v12;
  LOBYTE(v12) = _dispatchPreconditionTest(_:)();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v8 + 8))(v11, v7);
  if (v12)
  {
    uint64_t v15 = sub_10079BD64(a1, a2);
    if (v16 >> 60 == 15)
    {
      uint64_t v17 = type metadata accessor for UUID();
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(a3, 1, 1, v17);
    }
    else
    {
      uint64_t result = UUID.init(crl_data:)((uint64_t)v15, v16);
      if (!v3)
      {
        uint64_t v18 = type metadata accessor for UUID();
        return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(a3, 0, 1, v18);
      }
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_10079ECE0()
{
  uint64_t v1 = type metadata accessor for DispatchPredicate();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1, v3);
  uint64_t v5 = (uint64_t *)((char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = v0[2];
  uint64_t v7 = *(void **)(*(void *)(v6 + 16) + 32);
  *uint64_t v5 = v7;
  (*(void (**)(void *, void, uint64_t))(v2 + 104))(v5, enum case for DispatchPredicate.onQueue(_:), v1);
  id v8 = v7;
  LOBYTE(v7) = _dispatchPreconditionTest(_:)();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v2 + 8))(v5, v1);
  if (v7)
  {
    uint64_t v10 = v0[4];
    uint64_t v11 = v0[3];
    uint64_t v12 = v0[5];
    v0[3] = 0;
    v0[4] = 0;
    v0[5] = 1;
    sub_1007A0344(v11, v10, v12);
    swift_beginAccess();
    unsigned int v13 = sqlite3_step(*(sqlite3_stmt **)(v6 + 24));
    uint64_t result = 0;
    if (v13 && v13 != 101)
    {
      if (v13 == 100)
      {
        return swift_retain();
      }
      else
      {
        uint64_t v14 = v0[3];
        uint64_t v15 = v0[4];
        uint64_t v16 = v0[5];
        v0[3] = v13;
        v0[4] = 0;
        v0[5] = 0;
        sub_1007A0344(v14, v15, v16);
        return 0;
      }
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_10079EE74()
{
  swift_release();
  sub_1007A0344(v0[3], v0[4], v0[5]);

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for SQLiteRowIterator()
{
  return self;
}

uint64_t sub_10079EEDC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_10079ECE0();
  *a1 = result;
  return result;
}

uint64_t sub_10079EF08()
{
  uint64_t v2 = v0;
  uint64_t v3 = type metadata accessor for DispatchPredicate();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3, v5);
  uint64_t v7 = (uint64_t *)((char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = *(void *)(v0 + 16);
  uint64_t v9 = *(void **)(v8 + 32);
  *uint64_t v7 = v9;
  uint64_t v10 = *(void (**)(void))(v4 + 104);
  unsigned int v34 = enum case for DispatchPredicate.onQueue(_:);
  id v35 = (void (*)(void *, void, uint64_t))v10;
  v10(v7);
  id v11 = v9;
  LOBYTE(v9) = _dispatchPreconditionTest(_:)();
  uint64_t v12 = *(void (**)(void *, uint64_t))(v4 + 8);
  v12(v7, v3);
  if ((v9 & 1) == 0)
  {
    __break(1u);
    goto LABEL_23;
  }
  if (*(unsigned char *)(v8 + 24) == 1)
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"begin()", 7, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/SQL.swift", 75, 2, 633, (uint64_t)"There is already an open transaction on the database", 52, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"begin()", 7, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/SQL.swift", 75, 2, 633);
  }
  uint64_t v36 = 0;
  unint64_t v37 = 0xE000000000000000;
  swift_retain();
  _StringGuts.grow(_:)(20);
  swift_bridgeObjectRelease();
  uint64_t v36 = 0x204E49474542;
  unint64_t v37 = 0xE600000000000000;
  uint64_t v13 = 0x54414944454D4D49;
  if (*(unsigned char *)(v2 + 24) != 1) {
    uint64_t v13 = 0x564953554C435845;
  }
  if (*(unsigned char *)(v2 + 24)) {
    uint64_t v14 = v13;
  }
  else {
    uint64_t v14 = 0x4445525245464544;
  }
  if (*(unsigned char *)(v2 + 24)) {
    unint64_t v15 = 0xE900000000000045;
  }
  else {
    unint64_t v15 = 0xE800000000000000;
  }
  unint64_t v16 = v15;
  String.append(_:)(*(Swift::String *)&v14);
  swift_bridgeObjectRelease();
  v17._countAndFlagsBits = 0x4341534E41525420;
  v17._object = (void *)0xEC0000004E4F4954;
  String.append(_:)(v17);
  uint64_t v18 = v36;
  uint64_t v19 = v37;
  type metadata accessor for SQLiteStatement();
  swift_initStackObject();
  uint64_t v20 = sub_10079FC40(v8, v18, v19);
  uint64_t result = swift_release();
  if (!v1)
  {
    uint64_t v22 = *(void **)(*(void *)(v20 + 16) + 32);
    *uint64_t v7 = v22;
    v35(v7, v34, v3);
    id v23 = v22;
    LOBYTE(v22) = _dispatchPreconditionTest(_:)();
    v12(v7, v3);
    if (v22)
    {
      unint64_t v33 = (uint64_t (*)(void *, uint64_t))v12;
      unint64_t v24 = (sqlite3_stmt **)(v20 + 24);
      swift_beginAccess();
      int v25 = sqlite3_step(*(sqlite3_stmt **)(v20 + 24));
      if (v25 == 101)
      {
        *(unsigned char *)(v8 + 24) = 1;
        uint64_t v26 = *(void **)(*(void *)(v20 + 16) + 32);
        *uint64_t v7 = v26;
        v35(v7, v34, v3);
        id v27 = v26;
        LOBYTE(v26) = _dispatchPreconditionTest(_:)();
        int v25 = v33(v7, v3);
        if (v26)
        {
LABEL_18:
          if (*v24)
          {
            sqlite3_finalize(*v24);
            void *v24 = 0;
          }
          return swift_release();
        }
        __break(1u);
      }
      int v28 = v25;
      sub_10079FF00();
      swift_allocError();
      *(_DWORD *)uint64_t v29 = v28;
      *(void *)(v29 + 8) = 0xD00000000000001DLL;
      *(void *)(v29 + 16) = 0x8000000101251230;
      swift_willThrow();
      unint64_t v30 = *(void **)(*(void *)(v20 + 16) + 32);
      *uint64_t v7 = v30;
      v35(v7, v34, v3);
      id v31 = v30;
      LOBYTE(v30) = _dispatchPreconditionTest(_:)();
      v33(v7, v3);
      if (v30) {
        goto LABEL_18;
      }
LABEL_24:
      __break(1u);
    }
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  return result;
}

uint64_t sub_10079F3C8()
{
  uint64_t v2 = type metadata accessor for DispatchPredicate();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2, v4);
  uint64_t v6 = (uint64_t *)((char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = *(void *)(v0 + 16);
  uint64_t v8 = *(void **)(v7 + 32);
  *uint64_t v6 = v8;
  uint64_t v9 = *(void (**)(void *))(v3 + 104);
  unsigned int v29 = enum case for DispatchPredicate.onQueue(_:);
  v9(v6);
  id v10 = v8;
  LOBYTE(v8) = _dispatchPreconditionTest(_:)();
  id v11 = *(void (**)(void *, uint64_t))(v3 + 8);
  v11(v6, v2);
  if ((v8 & 1) == 0)
  {
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  type metadata accessor for SQLiteStatement();
  swift_initStackObject();
  uint64_t v12 = swift_retain();
  uint64_t v13 = sub_10079FC40(v12, 0xD000000000000012, 0x80000001012511F0);
  uint64_t result = swift_release();
  if (v1) {
    return result;
  }
  unint64_t v15 = (void (*)(void *, void, uint64_t))v9;
  unint64_t v16 = *(void **)(*(void *)(v13 + 16) + 32);
  *uint64_t v6 = v16;
  int v28 = v15;
  v15(v6, v29, v2);
  id v17 = v16;
  LOBYTE(v16) = _dispatchPreconditionTest(_:)();
  v11(v6, v2);
  if ((v16 & 1) == 0) {
    goto LABEL_13;
  }
  id v27 = (uint64_t (*)(void *, uint64_t))v11;
  uint64_t v18 = (sqlite3_stmt **)(v13 + 24);
  swift_beginAccess();
  int v19 = sqlite3_step(*(sqlite3_stmt **)(v13 + 24));
  *(unsigned char *)(v7 + 24) = 0;
  if (v19 != 101) {
    goto LABEL_7;
  }
  uint64_t v20 = *(void **)(*(void *)(v13 + 16) + 32);
  *uint64_t v6 = v20;
  v28(v6, v29, v2);
  id v21 = v20;
  LOBYTE(v20) = _dispatchPreconditionTest(_:)();
  int v19 = v27(v6, v2);
  if ((v20 & 1) == 0)
  {
    __break(1u);
LABEL_7:
    int v22 = v19;
    sub_10079FF00();
    swift_allocError();
    *(_DWORD *)uint64_t v23 = v22;
    *(void *)(v23 + 8) = 0xD00000000000001ELL;
    *(void *)(v23 + 16) = 0x8000000101251210;
    swift_willThrow();
    unint64_t v24 = *(void **)(*(void *)(v13 + 16) + 32);
    *uint64_t v6 = v24;
    v28(v6, v29, v2);
    id v25 = v24;
    LOBYTE(v24) = _dispatchPreconditionTest(_:)();
    v27(v6, v2);
    if (v24) {
      goto LABEL_8;
    }
LABEL_14:
    __break(1u);
  }
LABEL_8:
  if (*v18)
  {
    sqlite3_finalize(*v18);
    *uint64_t v18 = 0;
  }
  return swift_release();
}

BOOL sub_10079F70C()
{
  uint64_t v1 = type metadata accessor for DispatchPredicate();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1, v3);
  uint64_t v5 = (sqlite3_stmt ***)((char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = *(void *)(v0 + 16);
  uint64_t v7 = *(void **)(v6 + 32);
  *uint64_t v5 = v7;
  uint64_t v8 = enum case for DispatchPredicate.onQueue(_:);
  uint64_t v9 = *(void (**)(void *, uint64_t, uint64_t))(v2 + 104);
  v9(v5, enum case for DispatchPredicate.onQueue(_:), v1);
  id v10 = v7;
  LOBYTE(v7) = _dispatchPreconditionTest(_:)();
  id v11 = *(void (**)(void *, uint64_t))(v2 + 8);
  v11(v5, v1);
  if ((v7 & 1) == 0)
  {
    __break(1u);
    goto LABEL_8;
  }
  *(unsigned char *)(v6 + 24) = 0;
  type metadata accessor for SQLiteStatement();
  swift_initStackObject();
  uint64_t v12 = swift_retain();
  uint64_t v13 = sub_10079FC40(v12, 0xD000000000000014, 0x80000001012511D0);
  swift_release();
  uint64_t v14 = *(void **)(*(void *)(v13 + 16) + 32);
  *uint64_t v5 = v14;
  v9(v5, v8, v1);
  swift_retain();
  id v15 = v14;
  LOBYTE(v14) = _dispatchPreconditionTest(_:)();
  v11(v5, v1);
  if ((v14 & 1) == 0)
  {
LABEL_8:
    __break(1u);
LABEL_9:
    __break(1u);
  }
  int v22 = (sqlite3_stmt **)(v13 + 24);
  swift_beginAccess();
  int v16 = sqlite3_step(*(sqlite3_stmt **)(v13 + 24));
  swift_release();
  BOOL v17 = v16 == 101;
  uint64_t v18 = *(void **)(*(void *)(v13 + 16) + 32);
  *uint64_t v5 = v18;
  v9(v5, v8, v1);
  id v19 = v18;
  char v20 = _dispatchPreconditionTest(_:)();
  v11(v5, v1);
  if ((v20 & 1) == 0) {
    goto LABEL_9;
  }
  if (*v22)
  {
    sqlite3_finalize(*v22);
    *(void *)(v13 + 24) = 0;
  }
  swift_release();
  return v17;
}

uint64_t sub_10079F9B4()
{
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for SQLTransaction()
{
  return self;
}

unsigned char *storeEnumTagSinglePayload for SQLTransaction.Kind(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10079FADCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SQLTransaction.Kind()
{
  return &type metadata for SQLTransaction.Kind;
}

uint64_t sub_10079FB18(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for SQLiteError(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for SQLiteError(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for SQLiteError()
{
  return &type metadata for SQLiteError;
}

unint64_t sub_10079FBEC()
{
  unint64_t result = qword_10167FD98;
  if (!qword_10167FD98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10167FD98);
  }
  return result;
}

uint64_t sub_10079FC40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v27 = a3;
  uint64_t v25 = a2;
  uint64_t v26 = type metadata accessor for String.Encoding();
  uint64_t v5 = *(void *)(v26 - 8);
  __chkstk_darwin(v26, v6);
  uint64_t v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for DispatchPredicate();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9, v11);
  uint64_t v13 = (uint64_t *)((char *)&v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v14 = v3;
  *(void *)(v3 + 24) = 0;
  id v15 = (sqlite3_stmt **)(v3 + 24);
  int v16 = *(void **)(a1 + 32);
  *uint64_t v13 = v16;
  (*(void (**)(void *, void, uint64_t))(v10 + 104))(v13, enum case for DispatchPredicate.onQueue(_:), v9);
  id v17 = v16;
  LOBYTE(v16) = _dispatchPreconditionTest(_:)();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v10 + 8))(v13, v9);
  if (v16)
  {
    *(void *)(v14 + 16) = a1;
    uint64_t v28 = v25;
    uint64_t v29 = v27;
    swift_retain();
    static String.Encoding.utf8.getter();
    sub_10052E310();
    uint64_t v19 = StringProtocol.cString(using:)();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v26);
    swift_bridgeObjectRelease();
    swift_beginAccess();
    char v20 = *(sqlite3 **)(a1 + 16);
    if (v19) {
      id v21 = (const char *)(v19 + 32);
    }
    else {
      id v21 = 0;
    }
    swift_beginAccess();
    int v22 = sqlite3_prepare_v2(v20, v21, -1, v15, 0);
    swift_endAccess();
    swift_bridgeObjectRelease();
    if (v22)
    {
      swift_release();
      sub_10079FF00();
      swift_allocError();
      *(_DWORD *)uint64_t v23 = v22;
      *(void *)(v23 + 8) = 0;
      *(void *)(v23 + 16) = 0;
      swift_willThrow();
    }
    return v14;
  }
  else
  {
    __break(1u);
  }
  return result;
}

unint64_t sub_10079FF00()
{
  unint64_t result = qword_10167FDA0;
  if (!qword_10167FDA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10167FDA0);
  }
  return result;
}

uint64_t sub_10079FF54(uint64_t a1, uint64_t a2, int a3, sqlite3_stmt *a4, uint64_t a5)
{
  LODWORD(v7) = a3;
  uint64_t v10 = (char *)__DataStorage._bytes.getter();
  if (!v10)
  {
LABEL_4:
    BOOL v12 = __OFSUB__(a2, a1);
    uint64_t v13 = a2 - a1;
    if (v12)
    {
      __break(1u);
    }
    else
    {
      uint64_t v14 = __DataStorage._length.getter();
      if (v14 >= v13) {
        uint64_t v7 = v13;
      }
      else {
        uint64_t v7 = v14;
      }
      swift_beginAccess();
      if (a5 >= (uint64_t)0xFFFFFFFF80000000)
      {
        if (a5 <= 0x7FFFFFFF)
        {
          if (!v10) {
            uint64_t v7 = 0;
          }
          if (v7 >= (uint64_t)0xFFFFFFFF80000000)
          {
            if (v7 <= 0x7FFFFFFF)
            {
              a4 = (sqlite3_stmt *)*((void *)a4 + 3);
              if (qword_10166F130 == -1) {
                return sqlite3_bind_blob(a4, a5, v10, v7, (void (__cdecl *)(void *))qword_10171A940);
              }
LABEL_21:
              swift_once();
              return sqlite3_bind_blob(a4, a5, v10, v7, (void (__cdecl *)(void *))qword_10171A940);
            }
LABEL_20:
            __break(1u);
            goto LABEL_21;
          }
LABEL_19:
          __break(1u);
          goto LABEL_20;
        }
LABEL_18:
        __break(1u);
        goto LABEL_19;
      }
    }
    __break(1u);
    goto LABEL_18;
  }
  uint64_t result = __DataStorage._offset.getter();
  if (!__OFSUB__(a1, result))
  {
    v10 += a1 - result;
    goto LABEL_4;
  }
  __break(1u);
  return result;
}

uint64_t sub_1007A0098(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for DispatchPredicate();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6, v8);
  uint64_t v10 = (uint64_t *)((char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for SQLiteStatement();
  swift_initStackObject();
  swift_retain();
  swift_bridgeObjectRetain();
  uint64_t v11 = sub_10079FC40(a1, a2, a3);
  swift_release();
  BOOL v12 = *(void **)(*(void *)(v11 + 16) + 32);
  *uint64_t v10 = v12;
  uint64_t v13 = enum case for DispatchPredicate.onQueue(_:);
  uint64_t v14 = *(void (**)(void *, uint64_t, uint64_t))(v7 + 104);
  v14(v10, enum case for DispatchPredicate.onQueue(_:), v6);
  id v15 = v12;
  LOBYTE(v12) = _dispatchPreconditionTest(_:)();
  int v16 = *(void (**)(void *, uint64_t))(v7 + 8);
  v16(v10, v6);
  if ((v12 & 1) == 0)
  {
    __break(1u);
LABEL_7:
    __break(1u);
  }
  uint64_t v24 = v14;
  id v17 = (sqlite3_stmt **)(v11 + 24);
  swift_beginAccess();
  uint64_t v18 = sqlite3_step(*(sqlite3_stmt **)(v11 + 24));
  uint64_t v19 = *(void **)(*(void *)(v11 + 16) + 32);
  *uint64_t v10 = v19;
  v24(v10, v13, v6);
  id v20 = v19;
  char v21 = _dispatchPreconditionTest(_:)();
  v16(v10, v6);
  if ((v21 & 1) == 0) {
    goto LABEL_7;
  }
  if (*v17)
  {
    sqlite3_finalize(*v17);
    *(void *)(v11 + 24) = 0;
  }
  swift_release();
  return v18;
}

uint64_t sub_1007A0344(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a3 != 1) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1007A0358()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1007A0368()
{
  return sqlite3_finalize(*(sqlite3_stmt **)(v0 + 16));
}

uint64_t sub_1007A0370(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1007A0380()
{
  return swift_release();
}

ValueMetadata *type metadata accessor for SQLiteRow()
{
  return &type metadata for SQLiteRow;
}

void *assignWithCopy for CRLMiniFormatterColorPalette(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for CRLMiniFormatterColorPalette()
{
  return &type metadata for CRLMiniFormatterColorPalette;
}

uint64_t sub_1007A03F4(void *a1, unsigned __int8 a2)
{
  if (a2 <= 2u && (id v2 = [a1 referenceColor]) != 0)
  {
    uint64_t v3 = v2;
    id v4 = [v2 UIColor];
    id v5 = [v4 accessibilityName];

    uint64_t v6 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  }
  else
  {
    id v7 = [self mainBundle];
    NSString v8 = String._bridgeToObjectiveC()();
    NSString v9 = String._bridgeToObjectiveC()();
    id v5 = [v7 localizedStringForKey:v8 value:v9 table:0];

    uint64_t v6 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  }

  return v6;
}

BOOL sub_1007A0538(uint64_t a1, uint64_t a2)
{
  return sub_1007A0AAC(*(void **)a1, *(unsigned char *)(a1 + 8), *(void **)a2, *(unsigned char *)(a2 + 8));
}

void sub_1007A0550(uint64_t a1)
{
}

void sub_1007A0560(uint64_t a1)
{
}

void sub_1007A0574(uint64_t a1)
{
}

void sub_1007A0584(double a1, uint64_t a2, void *a3)
{
  id v4 = [objc_allocWithZone((Class)CRLColor) initWithWhite:a1 alpha:1.0];
  id v5 = [objc_allocWithZone((Class)CRLColorFill) initWithColor:v4];

  *a3 = v5;
}

void sub_1007A0604(uint64_t a1)
{
}

void sub_1007A0628(uint64_t a1)
{
}

void sub_1007A064C(uint64_t a1)
{
}

void sub_1007A0674(uint64_t a1)
{
}

void sub_1007A0698(uint64_t a1)
{
}

void sub_1007A06B8(uint64_t a1)
{
}

void sub_1007A06DC(uint64_t a1)
{
}

void sub_1007A0700(uint64_t a1)
{
}

void sub_1007A0724(uint64_t a1)
{
}

void sub_1007A0748(double a1, double a2, double a3, uint64_t a4, void *a5)
{
  id v6 = [objc_allocWithZone((Class)CRLColor) initWithRed:a1 green:a2 blue:a3 alpha:1.0];
  id v7 = [objc_allocWithZone((Class)CRLColorFill) initWithColor:v6];

  *a5 = v7;
}

void sub_1007A07E0(uint64_t a1)
{
}

void sub_1007A0804(uint64_t a1)
{
}

void sub_1007A0824(uint64_t a1)
{
}

void sub_1007A0844(uint64_t a1)
{
}

void sub_1007A0868(uint64_t a1)
{
}

void sub_1007A0890(uint64_t a1)
{
}

void sub_1007A08B0(uint64_t a1)
{
}

uint64_t initializeBufferWithCopyOfBuffer for CRLMiniFormatterColorPalette.Item(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  unsigned __int8 v4 = *(unsigned char *)(a2 + 8);
  sub_1007A0914(*(id *)a2, v4);
  *(void *)a1 = v3;
  *(unsigned char *)(a1 + 8) = v4;
  return a1;
}

id sub_1007A0914(id result, unsigned __int8 a2)
{
  if (a2 <= 2u) {
    return result;
  }
  return result;
}

void destroy for CRLMiniFormatterColorPalette.Item(uint64_t a1)
{
}

void sub_1007A0938(id a1, unsigned __int8 a2)
{
  if (a2 <= 2u) {
}
  }

uint64_t assignWithCopy for CRLMiniFormatterColorPalette.Item(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  unsigned __int8 v4 = *(unsigned char *)(a2 + 8);
  sub_1007A0914(*(id *)a2, v4);
  id v5 = *(void **)a1;
  *(void *)a1 = v3;
  unsigned __int8 v6 = *(unsigned char *)(a1 + 8);
  *(unsigned char *)(a1 + 8) = v4;
  sub_1007A0938(v5, v6);
  return a1;
}

uint64_t assignWithTake for CRLMiniFormatterColorPalette.Item(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 8);
  unsigned __int8 v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  unsigned __int8 v5 = *(unsigned char *)(a1 + 8);
  *(unsigned char *)(a1 + 8) = v3;
  sub_1007A0938(v4, v5);
  return a1;
}

uint64_t getEnumTagSinglePayload for CRLMiniFormatterColorPalette.Item(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFD && *(unsigned char *)(a1 + 9)) {
    return (*(_DWORD *)a1 + 253);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 3) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for CRLMiniFormatterColorPalette.Item(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)uint64_t result = a2 - 253;
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 9) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 9) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 8) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1007A0A6C(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 8) <= 2u) {
    return *(unsigned __int8 *)(a1 + 8);
  }
  else {
    return (*(_DWORD *)a1 + 3);
  }
}

uint64_t sub_1007A0A84(uint64_t result, unsigned int a2)
{
  if (a2 >= 3)
  {
    *(void *)uint64_t result = a2 - 3;
    LOBYTE(a2) = 3;
  }
  *(unsigned char *)(result + 8) = a2;
  return result;
}

ValueMetadata *type metadata accessor for CRLMiniFormatterColorPalette.Item()
{
  return &type metadata for CRLMiniFormatterColorPalette.Item;
}

BOOL sub_1007A0AAC(void *a1, char a2, void *a3, char a4)
{
  switch(a2)
  {
    case 1:
      if (a4 != 1) {
        return 0;
      }
      sub_10050BF48(0, (unint64_t *)&qword_101672E50);
      sub_1007A0914(a1, 1u);
      sub_1007A0914(a3, 1u);
      char v6 = static NSObject.== infix(_:_:)();
      sub_1007A0938(a3, 1u);
      id v7 = a1;
      unsigned __int8 v8 = 1;
      goto LABEL_6;
    case 2:
      if (a4 != 2) {
        return 0;
      }
      if (a1)
      {
        if (a3)
        {
          sub_10050BF48(0, (unint64_t *)&qword_101687660);
          sub_1007A0914(a1, 2u);
          sub_1007A0914(a3, 2u);
          char v10 = static NSObject.== infix(_:_:)();
          sub_1007A0938(a3, 2u);
          sub_1007A0938(a1, 2u);
          if (v10) {
            return 1;
          }
        }
        return 0;
      }
      if (a3)
      {
        sub_1007A0938(0, 2u);
        return 0;
      }
      return 1;
    case 3:
      return a4 == 3 && a3 == 0;
    default:
      if (a4) {
        return 0;
      }
      sub_10050BF48(0, (unint64_t *)&qword_101672E50);
      sub_1007A0914(a1, 0);
      sub_1007A0914(a3, 0);
      char v6 = static NSObject.== infix(_:_:)();
      sub_1007A0938(a3, 0);
      id v7 = a1;
      unsigned __int8 v8 = 0;
LABEL_6:
      sub_1007A0938(v7, v8);
      return v6 & 1;
  }
}

uint64_t type metadata accessor for CRLBatchedSearchResults()
{
  return self;
}

uint64_t sub_1007A0CB0(uint64_t a1)
{
  *(_OWORD *)(v1 + 16) = 0u;
  *(_OWORD *)(v1 + 32) = 0u;
  *(_OWORD *)(v1 + 48) = 0u;
  *(_OWORD *)(v1 + 64) = 0u;
  *(_OWORD *)(v1 + 80) = xmmword_10118E290;
  *(void *)(v1 + 96) = 0;
  sub_100522E9C(a1, (uint64_t)&v6, &qword_101680008);
  if (v7)
  {
    sub_100522F00(a1, &qword_101680008);
    sub_10053974C(&v6, (uint64_t)v8);
    sub_10053974C(v8, (uint64_t)&v6);
    swift_beginAccess();
    sub_1007A37A4((uint64_t)&v6, v1 + 16);
    swift_endAccess();
  }
  else
  {
    sub_100522F00((uint64_t)&v6, &qword_101680008);
    if (qword_10166F9C8 != -1) {
      swift_once();
    }
    swift_beginAccess();
    id v3 = (id)static OS_os_log.crlDefault;
    uint64_t v4 = static os_log_type_t.debug.getter();
    sub_100BAC898((uint64_t)v3, (uint64_t)&_mh_execute_header, v4, (uint64_t)"CRLBoardSearchHelper is being initialized without a board actor provider. Falling back to searching only board titles.", 118, 2, (uint64_t)_swiftEmptyArrayStorage);

    sub_100522F00(a1, &qword_101680008);
  }
  return v1;
}

uint64_t sub_1007A0E1C()
{
  sub_1007A3510();
  sub_100522F00(v0 + 16, &qword_101680008);
  swift_release();
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for CRLBoardSearchHelper()
{
  return self;
}

uint64_t sub_1007A0EA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v29 = a6;
  uint64_t v30 = a7;
  uint64_t v27 = a2;
  uint64_t v28 = a3;
  uint64_t v11 = sub_1005057FC(&qword_101672BB0);
  __chkstk_darwin(v11 - 8, v12);
  uint64_t v14 = (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1007A3510();
  type metadata accessor for CRLBatchedSearchResults();
  uint64_t v15 = swift_allocObject();
  swift_defaultActor_initialize();
  *(void *)(v15 + 112) = &_swiftEmptySetSingleton;
  int v16 = (void *)swift_allocObject();
  v16[2] = v7;
  v16[3] = v15;
  v16[4] = a4;
  v16[5] = a5;
  uint64_t v26 = a4;
  void v16[6] = a1;
  uint64_t v17 = type metadata accessor for TaskPriority();
  uint64_t v25 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56);
  v25(v14, 1, 1, v17);
  uint64_t v18 = (void *)swift_allocObject();
  v18[2] = 0;
  v18[3] = 0;
  v18[4] = v7;
  v18[5] = v15;
  v18[6] = a4;
  v18[7] = a5;
  v18[8] = a1;
  swift_retain_n();
  swift_retain_n();
  swift_retain_n();
  swift_bridgeObjectRetain_n();
  *(void *)(v7 + 64) = sub_1006D9104((uint64_t)v14, (uint64_t)&unk_101680028, (uint64_t)v18);
  swift_release();
  TaskPriority.init(rawValue:)();
  v25(v14, 0, 1, v17);
  uint64_t v19 = (void *)swift_allocObject();
  long long v19[2] = 0;
  v19[3] = 0;
  uint64_t v20 = v28;
  v19[4] = v27;
  v19[5] = v20;
  void v19[6] = v26;
  v19[7] = a5;
  uint64_t v21 = v29;
  uint64_t v22 = v30;
  v19[8] = a1;
  v19[9] = v21;
  v19[10] = v22;
  v19[11] = &unk_101680018;
  v19[12] = v16;
  v19[13] = v7;
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t v23 = sub_10061F26C((uint64_t)v14, (uint64_t)&unk_101680038, (uint64_t)v19);
  swift_release();
  sub_100522F00((uint64_t)v14, &qword_101672BB0);
  *(void *)(v7 + 56) = v23;
  return swift_release();
}

uint64_t sub_1007A1150(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[15] = a5;
  v6[16] = a6;
  v6[13] = a3;
  v6[14] = a4;
  v6[11] = a1;
  v6[12] = a2;
  type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  v6[17] = swift_task_alloc();
  v6[18] = swift_task_alloc();
  type metadata accessor for MainActor();
  v6[19] = static MainActor.shared.getter();
  uint64_t v8 = dispatch thunk of Actor.unownedExecutor.getter();
  v6[20] = v8;
  v6[21] = v7;
  return _swift_task_switch(sub_1007A122C, v8, v7);
}

uint64_t sub_1007A122C()
{
  if (*(void *)(*(void *)(v0 + 96) + 64))
  {
    swift_retain();
    sub_1005057FC(&qword_101672BD0);
    Task.cancel()();
    swift_release();
  }
  uint64_t v1 = *(void *)(v0 + 104);
  return _swift_task_switch(sub_1007A12D4, v1, 0);
}

uint64_t sub_1007A12D4()
{
  uint64_t v1 = v0[17];
  uint64_t v2 = v0[18];
  sub_10076F9F8(v0[11], v1);
  swift_beginAccess();
  sub_100CB8484(v2, v1);
  sub_100575C88(v2, type metadata accessor for CRLBoardLibraryViewModel.Item);
  swift_endAccess();
  uint64_t v3 = v0[20];
  uint64_t v4 = v0[21];
  return _swift_task_switch(sub_1007A139C, v3, v4);
}

uint64_t sub_1007A139C()
{
  uint64_t v1 = *(void *)(v0 + 96);
  swift_release();
  uint64_t v2 = *(void **)(v1 + 72);
  if (!v2 || ([v2 isValid] & 1) == 0)
  {
    uint64_t v4 = *(void *)(v0 + 120);
    uint64_t v3 = *(void *)(v0 + 128);
    uint64_t v5 = *(void *)(v0 + 96);
    long long v14 = *(_OWORD *)(v0 + 104);
    uint64_t v6 = self;
    double v7 = *(double *)(v5 + 80);
    uint64_t v8 = swift_allocObject();
    *(_OWORD *)(v8 + 16) = v14;
    *(void *)(v8 + 32) = v4;
    *(void *)(v8 + 40) = v3;
    *(void *)(v0 + 48) = sub_1007A48FC;
    *(void *)(v0 + 56) = v8;
    *(void *)(v0 + 16) = _NSConcreteStackBlock;
    *(void *)(v0 + 24) = *(void *)"";
    *(void *)(v0 + 32) = sub_10051CE64;
    *(void *)(v0 + 40) = &unk_101513D08;
    NSString v9 = _Block_copy((const void *)(v0 + 16));
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_release();
    id v10 = [v6 scheduledTimerWithTimeInterval:0 repeats:v9 block:v7];
    _Block_release(v9);
    uint64_t v11 = *(void **)(v1 + 72);
    *(void *)(v1 + 72) = v10;
  }
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v12 = *(uint64_t (**)(void))(v0 + 8);
  return v12();
}

uint64_t sub_1007A1554(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = sub_1005057FC(&qword_101672BB0);
  __chkstk_darwin(v9 - 8, v10);
  uint64_t v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v12, 1, 1, v13);
  long long v14 = (void *)swift_allocObject();
  v14[2] = 0;
  v14[3] = 0;
  v14[4] = a2;
  v14[5] = a3;
  v14[6] = a4;
  v14[7] = a5;
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1005912D0((uint64_t)v12, (uint64_t)&unk_101680070, (uint64_t)v14);
  return swift_release();
}

uint64_t sub_1007A167C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[7] = a6;
  v7[8] = a7;
  v7[5] = a4;
  v7[6] = a5;
  v7[9] = *(void *)(type metadata accessor for CRLBoardLibraryViewModel.Item(0) - 8);
  v7[10] = swift_task_alloc();
  v7[11] = swift_task_alloc();
  return _swift_task_switch(sub_1007A174C, 0, 0);
}

uint64_t sub_1007A174C()
{
  if (static Task<>.isCancelled.getter())
  {
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
    return v1();
  }
  else
  {
    uint64_t v3 = *(void *)(v0 + 40);
    return _swift_task_switch(sub_1007A17F4, v3, 0);
  }
}

uint64_t sub_1007A17F4()
{
  uint64_t v1 = *(void *)(v0 + 40);
  swift_beginAccess();
  *(void *)(v0 + 96) = *(void *)(v1 + 112);
  swift_bridgeObjectRetain();
  return _swift_task_switch(sub_1007A187C, 0, 0);
}

uint64_t sub_1007A187C()
{
  type metadata accessor for MainActor();
  *(void *)(v0 + 104) = static MainActor.shared.getter();
  uint64_t v2 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_1007A1910, v2, v1);
}

uint64_t sub_1007A1910()
{
  swift_release();
  if ((static Task<>.isCancelled.getter() & 1) == 0)
  {
    uint64_t v1 = *(void *)(v0[8] + 16);
    uint64_t v2 = swift_bridgeObjectRetain();
    if (v1)
    {
      uint64_t v3 = v0[9];
      unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
      uint64_t v5 = *(void *)(v3 + 72);
      uint64_t v6 = v2 + v4;
      do
      {
        uint64_t v8 = v0[11];
        uint64_t v7 = v0[12];
        sub_10076F9F8(v6, v8);
        char v9 = sub_1006E63C8(v8, v7);
        uint64_t v10 = v0[11];
        if (v9)
        {
          sub_1007A4808(v10, v0[10], type metadata accessor for CRLBoardLibraryViewModel.Item);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            sub_1006BB704(0, *(void *)&_swiftEmptyArrayStorage[2] + 1, 1);
          }
          double v12 = _swiftEmptyArrayStorage[2];
          double v11 = _swiftEmptyArrayStorage[3];
          if (*(void *)&v12 >= *(void *)&v11 >> 1) {
            sub_1006BB704(*(void *)&v11 > 1uLL, *(void *)&v12 + 1, 1);
          }
          uint64_t v13 = v0[10];
          *(void *)&_swiftEmptyArrayStorage[2] = *(void *)&v12 + 1;
          sub_1007A4808(v13, (uint64_t)_swiftEmptyArrayStorage + v4 + *(void *)&v12 * v5, type metadata accessor for CRLBoardLibraryViewModel.Item);
        }
        else
        {
          sub_100575C88(v10, type metadata accessor for CRLBoardLibraryViewModel.Item);
        }
        v6 += v5;
        --v1;
      }
      while (v1);
    }
    long long v14 = (void (*)(double *))v0[6];
    swift_bridgeObjectRelease();
    v14(_swiftEmptyArrayStorage);
    swift_release();
  }
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v15 = (uint64_t (*)(void))v0[1];
  return v15();
}

uint64_t sub_1007A1B00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[8] = a7;
  v8[9] = a8;
  v8[6] = a5;
  v8[7] = a6;
  v8[5] = a4;
  v8[10] = *(void *)(type metadata accessor for CRLBoardLibraryViewModel.Item(0) - 8);
  v8[11] = swift_task_alloc();
  v8[12] = swift_task_alloc();
  return _swift_task_switch(sub_1007A1BD4, 0, 0);
}

uint64_t sub_1007A1BD4(unint64_t a1)
{
  double v2 = *(double *)(*(void *)(v1 + 40) + 88);
  if ((~*(void *)&v2 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v2 <= -1.0)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  if (v2 >= 1.84467441e19)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  if (!is_mul_ok((unint64_t)v2, 0x3B9ACA00uLL))
  {
LABEL_11:
    __break(1u);
    return static Task<>.sleep(nanoseconds:)(a1);
  }
  unint64_t v3 = 1000000000 * (unint64_t)v2;
  unint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 104) = v4;
  *unint64_t v4 = v1;
  v4[1] = sub_1007A1CC8;
  a1 = v3;
  return static Task<>.sleep(nanoseconds:)(a1);
}

uint64_t sub_1007A1CC8()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *v1;
  swift_task_dealloc();
  if (v0)
  {
    swift_task_dealloc();
    swift_task_dealloc();
    unint64_t v4 = *(uint64_t (**)(void))(v3 + 8);
    return v4();
  }
  else
  {
    uint64_t v6 = *(void *)(v2 + 48);
    return _swift_task_switch(sub_1007A1E08, v6, 0);
  }
}

uint64_t sub_1007A1E08()
{
  uint64_t v1 = *(void *)(v0 + 48);
  swift_beginAccess();
  *(void *)(v0 + 112) = *(void *)(v1 + 112);
  swift_bridgeObjectRetain();
  return _swift_task_switch(sub_1007A1E90, 0, 0);
}

uint64_t sub_1007A1E90()
{
  type metadata accessor for MainActor();
  *(void *)(v0 + 120) = static MainActor.shared.getter();
  uint64_t v2 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_1007A1F24, v2, v1);
}

uint64_t sub_1007A1F24()
{
  swift_release();
  if ((static Task<>.isCancelled.getter() & 1) == 0)
  {
    uint64_t v1 = *(void *)(v0[9] + 16);
    uint64_t v2 = swift_bridgeObjectRetain();
    if (v1)
    {
      uint64_t v3 = v0[10];
      unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
      uint64_t v5 = *(void *)(v3 + 72);
      uint64_t v6 = v2 + v4;
      do
      {
        uint64_t v7 = v0[14];
        uint64_t v8 = v0[12];
        sub_10076F9F8(v6, v8);
        char v9 = sub_1006E63C8(v8, v7);
        uint64_t v10 = v0[12];
        if (v9)
        {
          sub_1007A4808(v10, v0[11], type metadata accessor for CRLBoardLibraryViewModel.Item);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            sub_1006BB704(0, *(void *)&_swiftEmptyArrayStorage[2] + 1, 1);
          }
          double v12 = _swiftEmptyArrayStorage[2];
          double v11 = _swiftEmptyArrayStorage[3];
          if (*(void *)&v12 >= *(void *)&v11 >> 1) {
            sub_1006BB704(*(void *)&v11 > 1uLL, *(void *)&v12 + 1, 1);
          }
          uint64_t v13 = v0[11];
          *(void *)&_swiftEmptyArrayStorage[2] = *(void *)&v12 + 1;
          sub_1007A4808(v13, (uint64_t)_swiftEmptyArrayStorage + v4 + *(void *)&v12 * v5, type metadata accessor for CRLBoardLibraryViewModel.Item);
        }
        else
        {
          sub_100575C88(v10, type metadata accessor for CRLBoardLibraryViewModel.Item);
        }
        v6 += v5;
        --v1;
      }
      while (v1);
    }
    long long v14 = (void (*)(double *))v0[7];
    swift_bridgeObjectRelease();
    v14(_swiftEmptyArrayStorage);
    swift_release();
  }
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v15 = (uint64_t (*)(void))v0[1];
  return v15();
}

uint64_t sub_1007A211C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  *(void *)(v8 + 136) = v12;
  *(_OWORD *)(v8 + 120) = v11;
  *(_OWORD *)(v8 + 104) = v10;
  *(void *)(v8 + 88) = a7;
  *(void *)(v8 + 96) = a8;
  *(void *)(v8 + 72) = a5;
  *(void *)(v8 + 80) = a6;
  *(void *)(v8 + 64) = a4;
  return _swift_task_switch(sub_1007A215C, 0, 0);
}

uint64_t sub_1007A215C()
{
  uint64_t v1 = v0[8];
  unint64_t v2 = v0[9];
  uint64_t v3 = HIBYTE(v2) & 0xF;
  if ((v2 & 0x2000000000000000) == 0) {
    uint64_t v3 = v1 & 0xFFFFFFFFFFFFLL;
  }
  if (v3)
  {
    uint64_t v4 = v0[16];
    uint64_t v30 = v0[14];
    uint64_t v31 = v0[17];
    uint64_t v5 = v0[12];
    uint64_t v28 = v0[15];
    uint64_t v29 = v0[13];
    uint64_t v6 = swift_allocObject();
    swift_bridgeObjectRetain();
    uint64_t v7 = swift_bridgeObjectRetain();
    uint64_t v8 = sub_1007A3B84(v7, v1, v2);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v9 = sub_100CDD514((uint64_t)v8);
    swift_bridgeObjectRelease();
    *(void *)(v6 + 16) = v9;
    _StringGuts.grow(_:)(16);
    swift_bridgeObjectRelease();
    v10._countAndFlagsBits = v1;
    v10._object = (void *)v2;
    String.append(_:)(v10);
    v11._countAndFlagsBits = 0x74647763272ALL;
    v11._object = (void *)0xE600000000000000;
    String.append(_:)(v11);
    id v12 = [objc_allocWithZone((Class)CSSearchQueryContext) init];
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    [v12 setFetchAttributes:isa];

    id v14 = objc_allocWithZone((Class)CSSearchQuery);
    id v27 = v12;
    NSString v15 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v16 = [v14 initWithQueryString:v15 queryContext:v27];

    uint64_t v17 = (void *)swift_allocObject();
    void v17[2] = v5;
    v17[3] = v28;
    void v17[4] = v4;
    v17[5] = v6;
    v0[6] = sub_1007A40C0;
    v0[7] = v17;
    v0[2] = _NSConcreteStackBlock;
    v0[3] = *(void *)"";
    v0[4] = sub_1007A3198;
    v0[5] = &unk_101513BF0;
    uint64_t v18 = _Block_copy(v0 + 2);
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    swift_release();
    [v16 setFoundItemsHandler:v18];
    _Block_release(v18);
    uint64_t v19 = (void *)swift_allocObject();
    long long v19[2] = v6;
    v19[3] = v31;
    v19[4] = v29;
    v19[5] = v30;
    void v19[6] = v5;
    v0[6] = sub_1007A4138;
    v0[7] = v19;
    v0[2] = _NSConcreteStackBlock;
    v0[3] = *(void *)"";
    v0[4] = sub_1007C263C;
    v0[5] = &unk_101513C40;
    uint64_t v20 = _Block_copy(v0 + 2);
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_release();
    [v16 setCompletionHandler:v20];
    _Block_release(v20);
    uint64_t v21 = *(void **)(v31 + 96);
    *(void *)(v31 + 96) = v16;
    id v22 = v16;

    [v22 start];
    swift_release();

    uint64_t v23 = (uint64_t (*)(void))v0[1];
    return v23();
  }
  else
  {
    v0[18] = type metadata accessor for MainActor();
    v0[19] = static MainActor.shared.getter();
    uint64_t v26 = dispatch thunk of Actor.unownedExecutor.getter();
    return _swift_task_switch(sub_1007A25B0, v26, v25);
  }
}

uint64_t sub_1007A25B0()
{
  uint64_t v1 = *(void *)(v0 + 96);
  unint64_t v2 = *(void (**)(uint64_t))(v0 + 80);
  swift_release();
  v2(v1);
  return _swift_task_switch(sub_1007A2634, 0, 0);
}

uint64_t sub_1007A2634()
{
  *(void *)(v0 + 160) = static MainActor.shared.getter();
  uint64_t v2 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_1007A26C0, v2, v1);
}

uint64_t sub_1007A26C0()
{
  uint64_t v1 = (void (*)(uint64_t))v0[13];
  uint64_t v2 = v0[12];
  swift_release();
  v1(v2);
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t sub_1007A2740(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v78 = a5;
  uint64_t v95 = a3;
  uint64_t v96 = a4;
  uint64_t v7 = sub_1005057FC(&qword_101672BB0);
  __chkstk_darwin(v7 - 8, v8);
  uint64_t v10 = (uint64_t)&v78 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11, v12);
  uint64_t v100 = (uint64_t)&v78 - v13;
  uint64_t v14 = type metadata accessor for CRLBoardIdentifier(0);
  __chkstk_darwin(v14 - 8, v15);
  uint64_t v17 = (char *)&v78 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  uint64_t v85 = *(void *)(v18 - 8);
  __chkstk_darwin(v18, v19);
  uint64_t v94 = (uint64_t)&v78 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21, v22);
  uint64_t v93 = (uint64_t)&v78 - v23;
  __chkstk_darwin(v24, v25);
  id v27 = (char *)&v78 - v26;
  uint64_t v84 = v28;
  __chkstk_darwin(v29, v30);
  uint64_t v32 = (char *)&v78 - v31;
  unint64_t v113 = &_swiftEmptySetSingleton;
  if (a1 >> 62)
  {
LABEL_41:
    swift_bridgeObjectRetain();
    uint64_t v33 = _CocoaArrayWrapper.endIndex.getter();
    if (v33) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v33 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v33)
    {
LABEL_3:
      uint64_t v34 = 0;
      uint64_t v35 = *(void *)(a2 + 16);
      unint64_t v86 = a1 & 0xC000000000000001;
      unint64_t v79 = a1 + 32;
      char v102 = v27 + 8;
      unint64_t v90 = (char *)&type metadata for () + 8;
      unint64_t v83 = a1;
      uint64_t v82 = a2;
      uint64_t v92 = v10;
      uint64_t v89 = v17;
      uint64_t v88 = v18;
      uint64_t v91 = v27;
      uint64_t v101 = v32;
      uint64_t v81 = v33;
      uint64_t v80 = v35;
      do
      {
        while (1)
        {
          if (v86) {
            id v36 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else {
            id v36 = *(id *)(v79 + 8 * v34);
          }
          id v104 = v36;
          if (__OFADD__(v34++, 1))
          {
            __break(1u);
            goto LABEL_41;
          }
          if (v35) {
            break;
          }

          if (v34 == v33) {
            goto LABEL_42;
          }
        }
        uint64_t v87 = v34;
        uint64_t v38 = *(unsigned __int8 *)(v85 + 80);
        uint64_t v39 = v35;
        uint64_t v40 = a2 + ((v38 + 32) & ~v38);
        uint64_t v41 = *(void *)(v85 + 72);
        uint64_t v98 = ((v38 + 48) & ~v38) + v84;
        uint64_t v99 = (v38 + 48) & ~v38;
        uint64_t v97 = v38 | 7;
        swift_bridgeObjectRetain();
        uint64_t v42 = v39;
        uint64_t v103 = v41;
        do
        {
          sub_10076F9F8(v40, (uint64_t)v32);
          sub_10076F9F8((uint64_t)v32, (uint64_t)v27);
          if (swift_getEnumCaseMultiPayload() != 2)
          {
            sub_100575C88((uint64_t)v27, type metadata accessor for CRLBoardLibraryViewModel.Item);
            goto LABEL_12;
          }
          sub_1005057FC(&qword_101677100);
          swift_bridgeObjectRelease();
          sub_1007A4808((uint64_t)v27, (uint64_t)v17, type metadata accessor for CRLBoardIdentifier);
          id v43 = [v104 attributeSet:v78];
          id v44 = [v43 contentType];

          if (v44)
          {
            uint64_t v10 = static String._unconditionallyBridgeFromObjectiveC(_:)();
            uint64_t v46 = v45;
          }
          else
          {
            uint64_t v10 = 0;
            uint64_t v46 = 0;
          }
          if (qword_10166F2E0 != -1) {
            swift_once();
          }
          uint64_t v47 = type metadata accessor for UTType();
          sub_100556B74(v47, (uint64_t)qword_10171ABC8);
          uint64_t v48 = UTType.identifier.getter();
          if (!v46)
          {
            swift_bridgeObjectRelease();
LABEL_28:
            sub_100575C88((uint64_t)v17, type metadata accessor for CRLBoardIdentifier);
LABEL_30:
            uint64_t v41 = v103;
            goto LABEL_12;
          }
          if (v10 == v48 && v46 == v49)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          else
          {
            char v50 = _stringCompareWithSmolCheck(_:_:expecting:)();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if ((v50 & 1) == 0) {
              goto LABEL_28;
            }
          }
          id v51 = [v104 uniqueIdentifier];
          uint64_t v52 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v54 = v53;

          uint64_t v111 = v52;
          uint64_t v112 = v54;
          uint64_t v109 = UUID.uuidString.getter();
          uint64_t v110 = v55;
          swift_bridgeObjectRetain();
          v56._countAndFlagsBits = 58;
          v56._object = (void *)0xE100000000000000;
          String.append(_:)(v56);
          swift_bridgeObjectRelease();
          uint64_t v58 = v109;
          uint64_t v57 = v110;
          uint64_t v59 = (uint64_t *)&v17[*(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20)];
          uint64_t v10 = *v59;
          uint64_t v60 = (void *)v59[1];
          uint64_t v109 = v58;
          uint64_t v110 = v57;
          swift_bridgeObjectRetain();
          v61._countAndFlagsBits = v10;
          v61._object = v60;
          String.append(_:)(v61);
          swift_bridgeObjectRelease();
          sub_10052E310();
          LOBYTE(v58) = StringProtocol.contains<A>(_:)();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v58 & 1) == 0)
          {
            sub_100575C88((uint64_t)v17, type metadata accessor for CRLBoardIdentifier);
            uint64_t v32 = v101;
            goto LABEL_30;
          }
          uint64_t v62 = (uint64_t)v101;
          uint64_t v63 = v94;
          sub_10076F9F8((uint64_t)v101, v94);
          uint64_t v64 = v93;
          sub_100CB8484(v93, v63);
          sub_100575C88(v64, type metadata accessor for CRLBoardLibraryViewModel.Item);
          uint64_t v65 = type metadata accessor for TaskPriority();
          uint64_t v66 = *(void *)(v65 - 8);
          uint64_t v67 = v100;
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v66 + 56))(v100, 1, 1, v65);
          sub_10076F9F8(v62, v64);
          uint64_t v68 = (void *)swift_allocObject();
          v68[2] = 0;
          uint64_t v69 = v95;
          uint64_t v70 = v96;
          v68[3] = 0;
          v68[4] = v69;
          v68[5] = v70;
          sub_1007A4808(v64, (uint64_t)v68 + v99, type metadata accessor for CRLBoardLibraryViewModel.Item);
          uint64_t v71 = v67;
          uint64_t v72 = v92;
          sub_100522E9C(v71, v92, &qword_101672BB0);
          LODWORD(v63) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v66 + 48))(v72, 1, v65);
          swift_retain();
          if (v63 == 1)
          {
            sub_100522F00(v72, &qword_101672BB0);
          }
          else
          {
            TaskPriority.rawValue.getter();
            (*(void (**)(uint64_t, uint64_t))(v66 + 8))(v72, v65);
          }
          id v27 = v91;
          if (v68[2])
          {
            swift_getObjectType();
            swift_unknownObjectRetain();
            uint64_t v73 = dispatch thunk of Actor.unownedExecutor.getter();
            uint64_t v10 = v74;
            swift_unknownObjectRelease();
          }
          else
          {
            uint64_t v73 = 0;
            uint64_t v10 = 0;
          }
          uint64_t v17 = v89;
          uint64_t v18 = v88;
          uint64_t v41 = v103;
          uint64_t v75 = swift_allocObject();
          *(void *)(v75 + 16) = &unk_101680060;
          *(void *)(v75 + 24) = v68;
          if (v10 | v73)
          {
            uint64_t v105 = 0;
            uint64_t v106 = 0;
            uint64_t v107 = v73;
            uint64_t v108 = v10;
          }
          swift_task_create();
          swift_release();
          sub_100522F00(v100, &qword_101672BB0);
          sub_100575C88((uint64_t)v17, type metadata accessor for CRLBoardIdentifier);
          uint64_t v32 = v101;
LABEL_12:
          sub_100575C88((uint64_t)v32, type metadata accessor for CRLBoardLibraryViewModel.Item);
          v40 += v41;
          --v42;
        }
        while (v42);

        a2 = v82;
        swift_bridgeObjectRelease();
        a1 = v83;
        uint64_t v33 = v81;
        uint64_t v34 = v87;
        uint64_t v35 = v80;
      }
      while (v87 != v81);
    }
  }
LABEL_42:
  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t v76 = swift_bridgeObjectRetain();
  sub_10057CFDC(v76);
  swift_endAccess();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1007A30BC(uint64_t a1, uint64_t a2, uint64_t a3, int *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v10 = (uint64_t (*)(uint64_t))((char *)a4 + *a4);
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v6 + 16) = v8;
  *uint64_t v8 = v6;
  v8[1] = sub_100528D08;
  return v10(a6);
}

uint64_t sub_1007A3198(uint64_t a1)
{
  uint64_t v1 = *(void (**)(uint64_t))(a1 + 32);
  sub_1007A4468();
  uint64_t v2 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
  swift_retain();
  v1(v2);
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1007A320C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11 = sub_1005057FC(&qword_101672BB0);
  __chkstk_darwin(v11 - 8, v12);
  uint64_t v14 = (char *)&v19 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = static Task<>.isCancelled.getter();
  if ((result & 1) == 0)
  {
    uint64_t v16 = type metadata accessor for TaskPriority();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v14, 1, 1, v16);
    swift_beginAccess();
    uint64_t v17 = *(void *)(a2 + 16);
    uint64_t v18 = (void *)swift_allocObject();
    v18[2] = 0;
    v18[3] = 0;
    v18[4] = a3;
    v18[5] = a4;
    v18[6] = a5;
    v18[7] = a6;
    v18[8] = v17;
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    sub_100B107F4((uint64_t)v14, (uint64_t)&unk_101680048, (uint64_t)v18);
    swift_release();
    return sub_100522F00((uint64_t)v14, &qword_101672BB0);
  }
  return result;
}

uint64_t sub_1007A3384(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[5] = a7;
  v8[6] = a8;
  v8[3] = a5;
  v8[4] = a6;
  long long v8[2] = a4;
  return _swift_task_switch(sub_1007A33AC, 0, 0);
}

uint64_t sub_1007A33AC()
{
  uint64_t v1 = v0[6];
  [*(id *)(v0[2] + 72) invalidate];
  swift_bridgeObjectRetain();
  uint64_t v2 = swift_bridgeObjectRetain();
  v0[7] = sub_1007A4254(v2, v1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  type metadata accessor for MainActor();
  v0[8] = static MainActor.shared.getter();
  uint64_t v4 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_1007A3490, v4, v3);
}

uint64_t sub_1007A3490()
{
  uint64_t v1 = v0[7];
  uint64_t v2 = (void (*)(uint64_t))v0[3];
  swift_release();
  v2(v1);
  swift_bridgeObjectRelease();
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

id sub_1007A3510()
{
  [*(id *)(v0 + 96) cancel];
  if (*(void *)(v0 + 64))
  {
    swift_retain();
    sub_1005057FC(&qword_101672BD0);
    Task.cancel()();
    swift_release();
  }
  if (*(void *)(v0 + 56))
  {
    swift_retain();
    sub_1005057FC(&qword_101672BD0);
    Task.cancel()();
    swift_release();
  }
  uint64_t v1 = *(void **)(v0 + 72);

  return [v1 invalidate];
}

uint64_t sub_1007A35E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = sub_1005057FC(&qword_101680078);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  __n128 v13 = __chkstk_darwin(v9, v12);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v10 + 16))((char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v9, v13);
  unint64_t v14 = (*(unsigned __int8 *)(v10 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v15 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v15 + v14, (char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v9);
  sub_1007A0EA4(a3, a4, a5, (uint64_t)SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:), 0, (uint64_t)sub_1007A4AC0, v15);
  return swift_release();
}

uint64_t sub_1007A3758()
{
  CheckedContinuation.resume(returning:)();
  return 0;
}

uint64_t sub_1007A37A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1005057FC(&qword_101680008);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1007A3810(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_100528488;
  return sub_1007A1150(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_1007A38D4()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 72, 7);
}

uint64_t sub_1007A392C(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  uint64_t v9 = v1[7];
  uint64_t v10 = v1[8];
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v11;
  *uint64_t v11 = v2;
  v11[1] = sub_100528488;
  return sub_1007A1B00(a1, v4, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_1007A3A08()
{
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 112, 7);
}

uint64_t sub_1007A3A70()
{
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v3 = *(void *)(v0 + 104);
  uint64_t v4 = swift_task_alloc();
  long long v5 = *(_OWORD *)(v0 + 40);
  long long v6 = *(_OWORD *)(v0 + 56);
  long long v7 = *(_OWORD *)(v0 + 72);
  long long v8 = *(_OWORD *)(v0 + 88);
  *(void *)(v1 + 16) = v4;
  *(void *)uint64_t v4 = v1;
  *(void *)(v4 + 8) = sub_100528D08;
  *(void *)(v4 + 136) = v3;
  *(_OWORD *)(v4 + 120) = v8;
  *(_OWORD *)(v4 + 104) = v7;
  *(_OWORD *)(v4 + 88) = v6;
  *(_OWORD *)(v4 + 72) = v5;
  *(void *)(v4 + 64) = v2;
  return _swift_task_switch(sub_1007A215C, 0, 0);
}

uint64_t sub_1007A3B4C()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 24, 7);
}

double *sub_1007A3B84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v51 = a2;
  uint64_t v6 = type metadata accessor for CRLBoardLibraryViewModel.Folder(0);
  __chkstk_darwin(v6 - 8, v7);
  uint64_t v46 = (uint64_t)&v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  __chkstk_darwin(v50, v9);
  uint64_t v49 = (uint64_t)&v44 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11, v12);
  unint64_t v14 = (char *)&v44 - v13;
  __chkstk_darwin(v15, v16);
  uint64_t v19 = (char *)&v44 - v18;
  uint64_t result = _swiftEmptyArrayStorage;
  Swift::String v56 = _swiftEmptyArrayStorage;
  uint64_t v21 = *(void *)(a1 + 16);
  if (v21)
  {
    uint64_t v44 = v3;
    uint64_t v45 = a3;
    uint64_t v22 = *(unsigned __int8 *)(v17 + 80);
    uint64_t v23 = *(void *)(v17 + 72);
    uint64_t v47 = (v22 + 32) & ~v22;
    uint64_t v48 = v23;
    uint64_t v24 = a1 + v47;
    do
    {
      sub_10076F9F8(v24, (uint64_t)v19);
      sub_10076F9F8((uint64_t)v19, (uint64_t)v14);
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload)
      {
        if (EnumCaseMultiPayload == 1)
        {
          uint64_t v27 = v46;
          sub_1007A4808((uint64_t)v14, v46, type metadata accessor for CRLBoardLibraryViewModel.Folder);
          uint64_t v28 = sub_100DD4C48();
          uint64_t v30 = v29;
          uint64_t v31 = v27;
          uint64_t v32 = type metadata accessor for CRLBoardLibraryViewModel.Folder;
        }
        else
        {
          id v36 = (uint64_t *)&v14[*(int *)(sub_1005057FC(&qword_101677100) + 48)];
          uint64_t v28 = *v36;
          uint64_t v30 = v36[1];
          uint64_t v32 = type metadata accessor for CRLBoardIdentifier;
          uint64_t v31 = (uint64_t)v14;
        }
        sub_100575C88(v31, v32);
      }
      else
      {
        id v33 = [self mainBundle];
        NSString v34 = String._bridgeToObjectiveC()();
        NSString v35 = String._bridgeToObjectiveC()();
        id v37 = [v33 localizedStringForKey:v34 value:v35 table:0];

        uint64_t v28 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v30 = v38;

        a3 = v45;
      }
      uint64_t v54 = v28;
      uint64_t v55 = v30;
      uint64_t v52 = v51;
      uint64_t v53 = a3;
      sub_10052E310();
      char v39 = StringProtocol.localizedStandardContains<A>(_:)();
      swift_bridgeObjectRelease();
      if (v39)
      {
        sub_1007A4808((uint64_t)v19, v49, type metadata accessor for CRLBoardLibraryViewModel.Item);
        uint64_t v40 = v56;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1006BB704(0, *((void *)v40 + 2) + 1, 1);
          uint64_t v40 = v56;
        }
        unint64_t v42 = *((void *)v40 + 2);
        unint64_t v41 = *((void *)v40 + 3);
        if (v42 >= v41 >> 1)
        {
          sub_1006BB704(v41 > 1, v42 + 1, 1);
          uint64_t v40 = v56;
        }
        *((void *)v40 + 2) = v42 + 1;
        id v43 = (char *)v40 + v47;
        uint64_t v25 = v48;
        sub_1007A4808(v49, (uint64_t)&v43[v42 * v48], type metadata accessor for CRLBoardLibraryViewModel.Item);
      }
      else
      {
        sub_100575C88((uint64_t)v19, type metadata accessor for CRLBoardLibraryViewModel.Item);
        uint64_t v25 = v48;
      }
      v24 += v25;
      --v21;
    }
    while (v21);
    return v56;
  }
  return result;
}

uint64_t sub_1007A4094()
{
  return sub_1007A489C((void (*)(void))&_swift_bridgeObjectRelease, (void (*)(void))&_swift_release);
}

uint64_t sub_1007A40C0(unint64_t a1)
{
  return sub_1007A2740(a1, v1[2], v1[3], v1[4], v1[5]);
}

uint64_t sub_1007A40CC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1007A40DC()
{
  return swift_release();
}

uint64_t sub_1007A40E8()
{
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_1007A4138(uint64_t a1)
{
  return sub_1007A320C(a1, v1[2], v1[3], v1[4], v1[5], v1[6]);
}

uint64_t sub_1007A4148()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 72, 7);
}

uint64_t sub_1007A41A0()
{
  uint64_t v2 = *(void *)(v0 + 64);
  uint64_t v3 = swift_task_alloc();
  long long v4 = *(_OWORD *)(v0 + 32);
  long long v5 = *(_OWORD *)(v0 + 48);
  *(void *)(v1 + 16) = v3;
  *(void *)uint64_t v3 = v1;
  *(void *)(v3 + 8) = sub_100528D08;
  *(void *)(v3 + 48) = v2;
  *(_OWORD *)(v3 + 16) = v4;
  *(_OWORD *)(v3 + 32) = v5;
  return _swift_task_switch(sub_1007A33AC, 0, 0);
}

double *sub_1007A4254(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for CRLBoardLibraryViewModel.Item(0) - 8;
  __chkstk_darwin(v5, v6);
  uint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9, v10);
  uint64_t v13 = (char *)&v21 - v12;
  uint64_t result = _swiftEmptyArrayStorage;
  uint64_t v23 = _swiftEmptyArrayStorage;
  uint64_t v15 = *(void *)(a1 + 16);
  if (v15)
  {
    uint64_t v21 = v2;
    uint64_t v16 = *(void *)(v11 + 72);
    unint64_t v22 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
    uint64_t v17 = a1 + v22;
    uint64_t v18 = _swiftEmptyArrayStorage;
    do
    {
      sub_10076F9F8(v17, (uint64_t)v13);
      if (sub_1006E63C8((uint64_t)v13, a2))
      {
        sub_1007A4808((uint64_t)v13, (uint64_t)v8, type metadata accessor for CRLBoardLibraryViewModel.Item);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          sub_1006BB704(0, *((void *)v18 + 2) + 1, 1);
        }
        uint64_t v18 = v23;
        unint64_t v20 = *((void *)v23 + 2);
        unint64_t v19 = *((void *)v23 + 3);
        if (v20 >= v19 >> 1)
        {
          sub_1006BB704(v19 > 1, v20 + 1, 1);
          uint64_t v18 = v23;
        }
        *((void *)v18 + 2) = v20 + 1;
        sub_1007A4808((uint64_t)v8, (uint64_t)v18 + v22 + v20 * v16, type metadata accessor for CRLBoardLibraryViewModel.Item);
      }
      else
      {
        sub_100575C88((uint64_t)v13, type metadata accessor for CRLBoardLibraryViewModel.Item);
      }
      v17 += v16;
      --v15;
    }
    while (v15);
    return v23;
  }
  return result;
}

unint64_t sub_1007A4468()
{
  unint64_t result = qword_101680050;
  if (!qword_101680050)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, &qword_101680050);
  }
  return result;
}

uint64_t sub_1007A44A8()
{
  uint64_t v1 = *(void *)(type metadata accessor for CRLBoardLibraryViewModel.Item(0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 48) & ~v2;
  uint64_t v4 = *(void *)(v1 + 64);
  swift_unknownObjectRelease();
  swift_release();
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    uint64_t v8 = type metadata accessor for UUID();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v0 + v3, v8);
    type metadata accessor for CRLBoardIdentifierStorage(0);
    swift_bridgeObjectRelease();
    sub_1005057FC(&qword_101677100);
    goto LABEL_6;
  }
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v6 = sub_1005057FC(&qword_101670F30);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48))(v0 + v3, 5, v6))
    {
      uint64_t v7 = type metadata accessor for UUID();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v0 + v3, v7);
LABEL_6:
      swift_bridgeObjectRelease();
    }
  }

  return _swift_deallocObject(v0, v3 + v4, v2 | 7);
}

uint64_t sub_1007A4670()
{
  uint64_t v2 = *(void *)(type metadata accessor for CRLBoardLibraryViewModel.Item(0) - 8);
  uint64_t v3 = *(int **)(v0 + 32);
  uint64_t v4 = v0 + ((*(unsigned __int8 *)(v2 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v5;
  *uint64_t v5 = v1;
  v5[1] = sub_100528D08;
  uint64_t v8 = (uint64_t (*)(uint64_t))((char *)v3 + *v3);
  uint64_t v6 = (void *)swift_task_alloc();
  uint64_t v5[2] = v6;
  *uint64_t v6 = v5;
  v6[1] = sub_100528D08;
  return v8(v4);
}

uint64_t sub_1007A47D0()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1007A4808(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1007A4870()
{
  return sub_1007A489C((void (*)(void))&_swift_release, (void (*)(void))&_swift_bridgeObjectRelease);
}

uint64_t sub_1007A489C(void (*a1)(void), void (*a2)(void))
{
  a1(*(void *)(v2 + 16));
  swift_release();
  a2(*(void *)(v2 + 40));

  return _swift_deallocObject(v2, 48, 7);
}

uint64_t sub_1007A48FC(uint64_t a1)
{
  return sub_1007A1554(a1, v1[2], v1[3], v1[4], v1[5]);
}

uint64_t sub_1007A4908()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 64, 7);
}

uint64_t sub_1007A4958(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v9 = v1[6];
  uint64_t v8 = v1[7];
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  *uint64_t v10 = v2;
  v10[1] = sub_100528D08;
  return sub_1007A167C(a1, v4, v5, v6, v7, v9, v8);
}

uint64_t sub_1007A4A2C()
{
  uint64_t v1 = sub_1005057FC(&qword_101680078);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_1007A4AC0()
{
  sub_1005057FC(&qword_101680078);

  return sub_1007A3758();
}

id sub_1007A4BB0(uint64_t a1, void *a2, void *a3, void *a4)
{
  id v9 = objc_allocWithZone(v4);
  id v10 = sub_1007A5478(a1, a2, a3, a4);

  return v10;
}

id sub_1007A4D00(char *a1, void *a2, void *a3, void *a4)
{
  uint64_t v8 = type metadata accessor for UUID();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8, v10);
  uint64_t v12 = (char *)v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = *(void (**)(uint64_t))(**(void **)&a1[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData] + 256);
  uint64_t v14 = swift_retain();
  v13(v14);
  swift_release();
  Class isa = UUID._bridgeToObjectiveC()().super.isa;
  (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
  id v16 = [v18[1] initWithId:isa imageGeometry:a2 maskGeometry:a3 maskPathSource:a4];

  return v16;
}

void sub_1007A4EF4(void *a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t v5 = v3;
  Class isa = UUID._bridgeToObjectiveC()().super.isa;
  id v9 = [a1 getBoardItemForUUID:isa];

  if (v9)
  {
    type metadata accessor for CRLImageItem();
    uint64_t v10 = swift_dynamicCastClass();
    if (v10)
    {
      uint64_t v11 = v10;
      uint64_t v12 = *(void **)(v5 + OBJC_IVAR____TtC8Freeform30CRLCommandSetImageItemGeometry_imageGeometry);
      if (v12)
      {
        id v13 = v12;
        id v14 = v9;
        sub_10103405C(v11, (uint64_t)&off_101518040);
        if (v4) {
          goto LABEL_11;
        }

        id v15 = v13;
        id v16 = v14;
        sub_10088AA40(v15);

        id v17 = v16;
        sub_101023724(v11, (uint64_t)&off_101518040, a3);
      }
      uint64_t v18 = *(void **)(v5 + OBJC_IVAR____TtC8Freeform30CRLCommandSetImageItemGeometry_maskGeometry);
      if (!v18) {
        goto LABEL_12;
      }
      unint64_t v19 = *(void **)(v5 + OBJC_IVAR____TtC8Freeform30CRLCommandSetImageItemGeometry_maskPathSource);
      if (!v19) {
        goto LABEL_12;
      }
      id v20 = v9;
      id v21 = v18;
      id v13 = v19;
      sub_10103405C(v11, (uint64_t)&off_101518040);
      if (!v4)
      {

        id v22 = [objc_allocWithZone((Class)CRLMaskInfo) initWithImageItem:v11 geometry:v21 pathSource:v13];
        sub_100A36B4C(v22);

        id v9 = v20;
        sub_101023724(v11, (uint64_t)&off_101518040, a3);
      }

LABEL_11:
LABEL_12:

      return;
    }
  }
  sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"commit(with:transaction:undoable:)", 34, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandSetImageItemGeometry.swift", 102, 2, 46, (uint64_t)"Unable to retrieve image item", 29, 2u, (uint64_t)_swiftEmptyArrayStorage);
  sub_100586FD4((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Unable to retrieve image item");
  sub_1005871AC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"commit(with:transaction:undoable:)", 34, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandSetImageItemGeometry.swift", 102, 2, 46);
  SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v23, v24);
  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

void sub_1007A5214()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC8Freeform30CRLCommandSetImageItemGeometry_id;
  uint64_t v2 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  uint64_t v3 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform30CRLCommandSetImageItemGeometry_maskPathSource);
}

id sub_1007A52B0()
{
  v2.id receiver = v0;
  v2.Class super_class = (Class)type metadata accessor for CRLCommandSetImageItemGeometry();
  return [super dealloc];
}

uint64_t sub_1007A5388()
{
  return type metadata accessor for CRLCommandSetImageItemGeometry();
}

uint64_t type metadata accessor for CRLCommandSetImageItemGeometry()
{
  uint64_t result = qword_1016800A8;
  if (!qword_1016800A8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1007A53DC()
{
  uint64_t result = type metadata accessor for UUID();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

id sub_1007A5478(uint64_t a1, void *a2, void *a3, void *a4)
{
  id v9 = &v4[OBJC_IVAR____TtC8Freeform30CRLCommandSetImageItemGeometry_id];
  uint64_t v10 = type metadata accessor for UUID();
  uint64_t v11 = *(void *)(v10 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v9, a1, v10);
  if (a2)
  {
    uint64_t v12 = v4;
    id v13 = a2;
    [v13 copy];
    _bridgeAnyObjectToAny(_:)();

    swift_unknownObjectRelease();
    sub_10050BF48(0, (unint64_t *)&qword_101684F50);
    swift_dynamicCast();
    *(void *)&v12[OBJC_IVAR____TtC8Freeform30CRLCommandSetImageItemGeometry_imageGeometry] = v19;
    if (a3) {
      goto LABEL_3;
    }
LABEL_6:
    *(void *)&v4[OBJC_IVAR____TtC8Freeform30CRLCommandSetImageItemGeometry_maskGeometry] = 0;
    if (a4) {
      goto LABEL_4;
    }
LABEL_7:
    *(void *)&v4[OBJC_IVAR____TtC8Freeform30CRLCommandSetImageItemGeometry_maskPathSource] = 0;
    goto LABEL_8;
  }
  *(void *)&v4[OBJC_IVAR____TtC8Freeform30CRLCommandSetImageItemGeometry_imageGeometry] = 0;
  id v16 = v4;
  if (!a3) {
    goto LABEL_6;
  }
LABEL_3:
  id v14 = a3;
  [v14 copy];
  _bridgeAnyObjectToAny(_:)();

  swift_unknownObjectRelease();
  sub_10050BF48(0, (unint64_t *)&qword_101684F50);
  swift_dynamicCast();
  *(void *)&v4[OBJC_IVAR____TtC8Freeform30CRLCommandSetImageItemGeometry_maskGeometry] = v19;
  if (!a4) {
    goto LABEL_7;
  }
LABEL_4:
  id v15 = a4;
  [v15 copy];
  _bridgeAnyObjectToAny(_:)();

  swift_unknownObjectRelease();
  sub_10050BF48(0, (unint64_t *)&qword_1016800B8);
  swift_dynamicCast();
  *(void *)&v4[OBJC_IVAR____TtC8Freeform30CRLCommandSetImageItemGeometry_maskPathSource] = v19;
LABEL_8:

  v20.id receiver = v4;
  v20.Class super_class = (Class)type metadata accessor for CRLCommandSetImageItemGeometry();
  [super init];
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(a1, v10);
  return v17;
}

id sub_1007A5754()
{
  v2.id receiver = v0;
  v2.Class super_class = (Class)type metadata accessor for CRLWPLaidOutColumnProxy();
  [super dealloc];
}

uint64_t type metadata accessor for CRLWPLaidOutColumnProxy()
{
  return self;
}

uint64_t sub_1007A5BC0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v3;
  uint64_t v112 = a1;
  uint64_t v113 = a2;
  uint64_t v5 = type metadata accessor for CRLBoardCRDTData(0);
  __chkstk_darwin(v5 - 8, v6);
  uint64_t v111 = (uint64_t)&v100 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v124 = type metadata accessor for UUID();
  uint64_t v8 = *(void *)(v124 - 8);
  __chkstk_darwin(v124, v9);
  uint64_t v110 = (char *)&v100 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11, v12);
  uint64_t v109 = (char *)&v100 - v13;
  __chkstk_darwin(v14, v15);
  uint64_t v108 = (char *)&v100 - v16;
  __chkstk_darwin(v17, v18);
  uint64_t v107 = (char *)&v100 - v19;
  uint64_t v20 = *(void *)(v2 + OBJC_IVAR____TtC8Freeform28CRLCommandReparentBoardItems_index);
  unsigned __int8 v126 = *(unsigned char *)(v2 + OBJC_IVAR____TtC8Freeform28CRLCommandReparentBoardItems_index + 8);
  uint64_t v114 = v2;
  unint64_t v21 = *(void *)(v2 + OBJC_IVAR____TtC8Freeform28CRLCommandReparentBoardItems_boardItems);
  if (!(v21 >> 62))
  {
    uint64_t v22 = *(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v22) {
      goto LABEL_3;
    }
    return swift_bridgeObjectRelease();
  }
LABEL_21:
  swift_bridgeObjectRetain_n();
  uint64_t v22 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (!v22) {
    return swift_bridgeObjectRelease();
  }
LABEL_3:
  unint64_t v106 = v21 & 0xC000000000000001;
  uint64_t v123 = (void (**)(char *, uint64_t))(v8 + 8);
  uint64_t v8 = 4;
  uint64_t v103 = OBJC_IVAR____TtC8Freeform8CRLBoard_data;
  uint64_t v104 = OBJC_IVAR____TtC8Freeform28CRLCommandReparentBoardItems_destinationContainer;
  long long v102 = xmmword_1011807B0;
  unint64_t v105 = v21;
  uint64_t v101 = v22;
  while (1)
  {
    if (v106) {
      uint64_t v25 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      uint64_t v25 = *(id *)(v21 + 8 * v8);
    }
    uint64_t v26 = v25;
    if (__OFADD__(v8 - 4, 1))
    {
      __break(1u);
LABEL_20:
      __break(1u);
      goto LABEL_21;
    }
    uint64_t v27 = (char *)[v25 parentContainerItem];
    if (!v27) {
      break;
    }
    uint64_t v28 = v27;
    uint64_t v115 = v8;
    uint64_t v116 = v8 - 3;
    uint64_t v121 = v20;
    uint64_t v122 = v4;
    if (qword_10166FBD0 != -1) {
      swift_once();
    }
    swift_beginAccess();
    uint64_t v29 = (void *)static OS_os_log.boardItemLifecycle;
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = v102;
    uint64_t v31 = *(void (**)(void))((swift_isaMask & *v26) + 0x88);
    id v120 = v29;
    uint64_t v32 = v107;
    v31();
    uint64_t v33 = UUID.uuidString.getter();
    uint64_t v35 = v34;
    uint64_t v125 = *v123;
    v125(v32, v124);
    *(void *)(inited + 56) = &type metadata for String;
    unint64_t v36 = sub_100528BE4();
    *(void *)(inited + 64) = v36;
    *(void *)(inited + 32) = v33;
    uint64_t v119 = inited + 32;
    *(void *)(inited + 40) = v35;
    id v37 = v26;
    uint64_t v118 = v37;
    id v38 = [v37 description];
    uint64_t v39 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v41 = v40;

    *(void *)(inited + 96) = &type metadata for String;
    *(void *)(inited + 104) = v36;
    *(void *)(inited + 72) = v39;
    *(void *)(inited + 80) = v41;
    unint64_t v42 = *(void (**)(uint64_t))(**(void **)&v28[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData]
                                         + 256);
    id v43 = v28;
    uint64_t v44 = swift_retain();
    uint64_t v45 = v108;
    v42(v44);

    swift_release();
    uint64_t v46 = UUID.uuidString.getter();
    uint64_t v48 = v47;
    v125(v45, v124);
    *(void *)(inited + 136) = &type metadata for String;
    *(void *)(inited + 144) = v36;
    *(void *)(inited + 112) = v46;
    *(void *)(inited + 120) = v48;
    uint64_t v49 = v43;
    int64_t v117 = v49;
    id v50 = [v49 description];
    uint64_t v51 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v53 = v52;

    *(void *)(inited + 176) = &type metadata for String;
    *(void *)(inited + 184) = v36;
    *(void *)(inited + 152) = v51;
    *(void *)(inited + 160) = v53;
    uint64_t v54 = *(char **)(v114 + v104);
    uint64_t v55 = *(void (**)(uint64_t))(**(void **)&v54[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData]
                                         + 256);
    uint64_t v56 = swift_retain();
    uint64_t v57 = v109;
    v55(v56);
    swift_release();
    uint64_t v58 = UUID.uuidString.getter();
    uint64_t v60 = v59;
    uint64_t v61 = v124;
    v125(v57, v124);
    *(void *)(inited + 216) = &type metadata for String;
    *(void *)(inited + 224) = v36;
    *(void *)(inited + 192) = v58;
    *(void *)(inited + 200) = v60;
    uint64_t v62 = v54;
    id v63 = [v62 description];
    uint64_t v64 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v66 = v65;

    *(void *)(inited + 256) = &type metadata for String;
    *(void *)(inited + 264) = v36;
    *(void *)(inited + 232) = v64;
    *(void *)(inited + 240) = v66;
    uint64_t v67 = *(void *)(v112 + v103) + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
    swift_beginAccess();
    uint64_t v68 = v67;
    uint64_t v69 = v111;
    sub_100530898(v68, v111);
    swift_retain();
    sub_1005057FC(&qword_101674550);
    uint64_t v70 = v110;
    CRRegister.wrappedValue.getter();
    sub_1005308FC(v69);
    swift_release();
    uint64_t v71 = UUID.uuidString.getter();
    uint64_t v73 = v72;
    v125(v70, v61);
    *(void *)(inited + 296) = &type metadata for String;
    *(void *)(inited + 304) = v36;
    *(void *)(inited + 272) = v71;
    *(void *)(inited + 280) = v73;
    uint64_t v74 = static os_log_type_t.default.getter();
    id v75 = v120;
    sub_100BAC898((uint64_t)v120, (uint64_t)&_mh_execute_header, v74, (uint64_t)"↔️ CRLCommandReparentBoardItems commit() move %{public}@%{public}@ from %{public}@%{public}@ to parent %{public}@%{public}@. Board: %{public}@", 146, 0, inited);
    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();

    uint64_t v8 = v126;
    uint64_t v77 = v117;
    uint64_t v76 = v118;
    uint64_t v20 = v121;
    uint64_t v78 = v122;
    sub_100849C54(v118, (uint64_t)v117, v121, v126, v113);
    uint64_t v4 = v78;

    if (v78) {
      return swift_bridgeObjectRelease();
    }
    unint64_t v21 = v105;
    if (v8)
    {
      uint64_t v23 = v101;
      uint64_t v24 = v116;
    }
    else
    {
      BOOL v79 = __OFADD__(v20++, 1);
      uint64_t v23 = v101;
      uint64_t v24 = v116;
      if (v79) {
        goto LABEL_20;
      }
    }
    uint64_t v8 = v115 + 1;
    if (v24 == v23) {
      return swift_bridgeObjectRelease();
    }
  }
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t v82 = swift_initStackObject();
  if (Strong)
  {
    *(_OWORD *)(v82 + 16) = xmmword_10117D8C0;
    id v83 = [v26 description];

    uint64_t v84 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v86 = v85;

    *(void *)(v82 + 56) = &type metadata for String;
    unint64_t v87 = sub_100528BE4();
    *(void *)(v82 + 64) = v87;
    *(void *)(v82 + 32) = v84;
    *(void *)(v82 + 40) = v86;
    id v88 = [Strong description];

    uint64_t v89 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v91 = v90;

    *(void *)(v82 + 96) = &type metadata for String;
    *(void *)(v82 + 104) = v87;
    *(void *)(v82 + 72) = v89;
    *(void *)(v82 + 80) = v91;
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"commit(with:transaction:undoable:)", 34, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandReparentBoardItems.swift", 100, 2, 66, (uint64_t)"Trying to reparent a board item (%{public}@) which is not in a container (%{public}@).", 86, 2u, v82);
    sub_100586FD4(v82, (uint64_t)"Trying to reparent a board item (%{public}@) which is not in a container (%{public}@).");
    uint64_t v92 = v82;
    uint64_t v93 = 66;
  }
  else
  {
    *(_OWORD *)(v82 + 16) = xmmword_10117E810;
    id v94 = [v26 description];

    uint64_t v95 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v97 = v96;

    *(void *)(v82 + 56) = &type metadata for String;
    *(void *)(v82 + 64) = sub_100528BE4();
    *(void *)(v82 + 32) = v95;
    *(void *)(v82 + 40) = v97;
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"commit(with:transaction:undoable:)", 34, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandReparentBoardItems.swift", 100, 2, 68, (uint64_t)"Trying to reparent a board item (%{public}@) which has no parent.", 65, 2u, v82);
    sub_100586FD4(v82, (uint64_t)"Trying to reparent a board item (%{public}@) which has no parent.");
    uint64_t v92 = v82;
    uint64_t v93 = 68;
  }
  sub_1005871AC(v92, (uint64_t)"commit(with:transaction:undoable:)", 34, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandReparentBoardItems.swift", 100, 2, v93);
  SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v98, v99);
  uint64_t result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1007A65C4()
{
  return swift_bridgeObjectRelease();
}

id sub_1007A6604()
{
  v2.id receiver = v0;
  v2.Class super_class = (Class)type metadata accessor for CRLCommandReparentBoardItems();
  return [super dealloc];
}

uint64_t type metadata accessor for CRLCommandReparentBoardItems()
{
  return self;
}

id sub_1007A66A8()
{
  unint64_t v1 = v0;
  id v2 = [v0 layout];
  id v3 = [v2 connectedLayouts];

  if (!v3) {
    goto LABEL_53;
  }
  sub_1007A6D4C();
  sub_1007A796C(&qword_101680138, (void (*)(uint64_t))sub_1007A6D4C);
  uint64_t v4 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v5 = (v4 & 0xC000000000000001) != 0 ? __CocoaSet.count.getter() : *(void *)(v4 + 16);
  swift_bridgeObjectRelease();
  if (v5 < 1) {
    goto LABEL_53;
  }
  uint64_t v6 = &selRef_i_join;
  [v1 info];
  type metadata accessor for CRLBoardItem(0);
  uint64_t v7 = (void *)swift_dynamicCastClass();
  if (!v7)
  {
LABEL_39:
    swift_unknownObjectRelease();
    return 0;
  }
  uint64_t v8 = (char *)[v7 parentContainerItem];
  if (!v8)
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"getConnectionLineLayoutToCopyStyleForNewConnectionLine()", 56, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCanvas/CRLCanvasRep.swift", 82, 2, 20, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"getConnectionLineLayoutToCopyStyleForNewConnectionLine()", 56, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCanvas/CRLCanvasRep.swift", 82, 2, 20);
    goto LABEL_39;
  }
  uint64_t v9 = v8;
  uint64_t v10 = OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedOrderedItems;
  uint64_t v11 = *(double **)&v8[OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedOrderedItems];
  if (!v11)
  {
    sub_100846AB0();
    uint64_t v11 = *(double **)&v9[v10];
  }
  uint64_t v39 = v9;
  if (v11) {
    unint64_t v12 = (unint64_t)v11;
  }
  else {
    unint64_t v12 = (unint64_t)_swiftEmptyArrayStorage;
  }
  if (v12 >> 62)
  {
LABEL_51:
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v13 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v13) {
      goto LABEL_15;
    }
    goto LABEL_52;
  }
  unint64_t v13 = *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v13)
  {
LABEL_52:
    swift_bridgeObjectRelease();
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"getConnectionLineLayoutToCopyStyleForNewConnectionLine()", 56, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCanvas/CRLCanvasRep.swift", 82, 2, 37, (uint64_t)"Unexpected to hit here as the topmost z-order connection line should be early returned", 86, 2u, (uint64_t)_swiftEmptyArrayStorage);
    LOBYTE(v38) = 2;
    unint64_t v36 = "Unexpected to hit here as the topmost z-order connection line should be early returned";
    uint64_t v37 = 86;
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"getConnectionLineLayoutToCopyStyleForNewConnectionLine()", 56, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCanvas/CRLCanvasRep.swift", 82, 2, 37);
    swift_unknownObjectRelease();

LABEL_53:
    id v34 = [v1 interactiveCanvasController:v36, v37, v38];
    id v32 = [v34 highestZOrderConnectionLineLayoutAcrossBoard];
    goto LABEL_54;
  }
LABEL_15:
  unint64_t v14 = v12 & 0xC000000000000001;
  unint64_t v42 = (double *)(v12 + 32);
  uint64_t v43 = v12 & 0xFFFFFFFFFFFFFF8;
  id v40 = v1;
  uint64_t v41 = (double *)v12;
  unint64_t v44 = v12 & 0xC000000000000001;
  while (1)
  {
    if (__OFSUB__(v13--, 1))
    {
      __break(1u);
LABEL_49:
      __break(1u);
LABEL_50:
      __break(1u);
      goto LABEL_51;
    }
    if (v14)
    {
      id v16 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else
    {
      if ((v13 & 0x8000000000000000) != 0) {
        goto LABEL_49;
      }
      if (v13 >= *(void *)(v43 + 16)) {
        goto LABEL_50;
      }
      id v16 = *(id *)&v42[v13];
    }
    uint64_t v17 = v16;
    type metadata accessor for CRLConnectionLineItem();
    uint64_t v18 = swift_dynamicCastClass();
    if (v18) {
      break;
    }

LABEL_17:
    if (!v13) {
      goto LABEL_52;
    }
  }
  uint64_t v19 = v18;
  id v20 = v17;
  id v21 = [v1 v6[246]];
  if (!swift_dynamicCastClass())
  {

    swift_unknownObjectRelease();
    goto LABEL_17;
  }
  id v22 = [v1 interactiveCanvasController];
  if (!v22)
  {

    swift_unknownObjectRelease();
    unint64_t v14 = v44;
    goto LABEL_17;
  }
  uint64_t v23 = v22;
  id v24 = [v22 board];

  if (!v24)
  {

    swift_unknownObjectRelease();
    goto LABEL_37;
  }
  id v25 = v24;
  id v26 = sub_1007A6D8C(v25, v19);
  id v27 = sub_1007A70FC(v25, v19);
  if (v26)
  {
    swift_unknownObjectRetain();
    id v28 = v26;
    char v29 = static NSObject.== infix(_:_:)();

    swift_unknownObjectRelease();
    if (v29)
    {
      swift_bridgeObjectRelease();

      goto LABEL_42;
    }
  }
  if (!v27)
  {
    swift_unknownObjectRelease();

    unint64_t v1 = v40;
    uint64_t v6 = &selRef_i_join;
    goto LABEL_37;
  }
  swift_unknownObjectRetain();
  id v30 = v27;
  char v31 = static NSObject.== infix(_:_:)();

  swift_unknownObjectRelease();
  if ((v31 & 1) == 0)
  {
    swift_unknownObjectRelease();

    unint64_t v1 = v40;
    uint64_t v6 = &selRef_i_join;
LABEL_37:
    unint64_t v12 = (unint64_t)v41;
    unint64_t v14 = v44;
    goto LABEL_17;
  }
  swift_bridgeObjectRelease();
LABEL_42:
  id v32 = [v40 interactiveCanvasController];
  if (!v32)
  {

    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    return v32;
  }
  id v33 = v20;
  id v34 = [v32 layoutForInfo:v19];

  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  if (!v34) {
    return 0;
  }
  self;
  id v32 = (id)swift_dynamicCastObjCClass();
  if (v32) {
    return v32;
  }
LABEL_54:

  return v32;
}

unint64_t sub_1007A6D4C()
{
  unint64_t result = qword_101680130;
  if (!qword_101680130)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_101680130);
  }
  return result;
}

id sub_1007A6D8C(void *a1, uint64_t a2)
{
  uint64_t v4 = sub_1005057FC((uint64_t *)&unk_101674520);
  __chkstk_darwin(v4 - 8, v5);
  uint64_t v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for CRLConnectionLineCRDTData(0);
  __chkstk_darwin(v8, v9);
  uint64_t v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for UUID();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12, v14);
  id v16 = (char *)&v27 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = *(void *)(a2 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
  if (*(_UNKNOWN ****)v17 != &off_1016863C8) {
    uint64_t v17 = 0;
  }
  uint64_t v18 = v17 + *(void *)(*(void *)v17 + 752);
  swift_beginAccess();
  sub_1007A78AC(v18, (uint64_t)v11);
  sub_1005057FC(&qword_101680140);
  CRRegister.wrappedValue.getter();
  sub_1007A7910((uint64_t)v11);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v7, 1, v12) == 1)
  {
    sub_100522F00((uint64_t)v7, (uint64_t *)&unk_101674520);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v16, v7, v12);
    Class isa = UUID._bridgeToObjectiveC()().super.isa;
    id v19 = [a1 getBoardItemForUUID:isa];

    if (!v19)
    {
      (*(void (**)(char *, uint64_t))(v13 + 8))(v16, v12);
      return v19;
    }
    uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
    uint64_t v22 = swift_unknownObjectWeakLoadStrong();
    uint64_t v23 = (void *)v22;
    if (Strong)
    {
      if (v22)
      {
        type metadata accessor for CRLBoardItem(0);
        id v24 = Strong;
        char v25 = static NSObject.== infix(_:_:)();
        (*(void (**)(char *, uint64_t))(v13 + 8))(v16, v12);

        if (v25) {
          return v19;
        }
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v13 + 8))(v16, v12);
      }
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v13 + 8))(v16, v12);
      if (!v23) {
        return v19;
      }
    }
  }
  return 0;
}

id sub_1007A70FC(void *a1, uint64_t a2)
{
  uint64_t v72 = a1;
  uint64_t v76 = sub_1005057FC((uint64_t *)&unk_10168A0C0);
  __chkstk_darwin(v76, v3);
  uint64_t v77 = (uint64_t)&v66 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1005057FC((uint64_t *)&unk_101674520);
  __chkstk_darwin(v5 - 8, v6);
  uint64_t v71 = (uint64_t)&v66 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8, v9);
  id v75 = (char *)&v66 - v10;
  __chkstk_darwin(v11, v12);
  uint64_t v74 = (char *)&v66 - v13;
  __chkstk_darwin(v14, v15);
  uint64_t v17 = (char *)&v66 - v16;
  uint64_t v18 = type metadata accessor for CRLConnectionLineCRDTData(0);
  __chkstk_darwin(v18, v19);
  id v21 = (char *)&v66 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22, v23);
  char v25 = (char *)&v66 - v24;
  uint64_t v26 = type metadata accessor for UUID();
  uint64_t v27 = *(void *)(v26 - 8);
  __chkstk_darwin(v26, v28);
  id v30 = (char *)&v66 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v31, v32);
  id v34 = (char *)&v66 - v33;
  uint64_t v35 = OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData;
  uint64_t v78 = a2;
  uint64_t v36 = *(void *)(a2 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
  if (*(_UNKNOWN ****)v36 != &off_1016863C8) {
    uint64_t v36 = 0;
  }
  uint64_t v37 = v36 + *(void *)(*(void *)v36 + 752);
  swift_beginAccess();
  sub_1007A78AC(v37, (uint64_t)v25);
  uint64_t v73 = v18;
  sub_1005057FC(&qword_101680140);
  CRRegister.wrappedValue.getter();
  sub_1007A7910((uint64_t)v25);
  uint64_t v38 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48);
  if (v38(v17, 1, v26) == 1)
  {
    sub_100522F00((uint64_t)v17, (uint64_t *)&unk_101674520);
    return 0;
  }
  uint64_t v70 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v38;
  uint64_t v39 = *(void (**)(char *, uint64_t, uint64_t))(v27 + 32);
  uint64_t v66 = v30;
  uint64_t v67 = v39;
  v39(v34, (uint64_t)v17, v26);
  id v40 = *(void (**)(char *, char *, uint64_t))(v27 + 16);
  uint64_t v41 = (uint64_t)v74;
  uint64_t v69 = v34;
  v40(v74, v34, v26);
  uint64_t v68 = v27;
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v27 + 56))(v41, 0, 1, v26);
  uint64_t v42 = *(void *)(v78 + v35);
  if (*(_UNKNOWN ****)v42 != &off_1016863C8) {
    uint64_t v42 = 0;
  }
  uint64_t v43 = v42 + *(void *)(*(void *)v42 + 752);
  swift_beginAccess();
  sub_1007A78AC(v43, (uint64_t)v21);
  uint64_t v44 = (uint64_t)v75;
  CRRegister.wrappedValue.getter();
  sub_1007A7910((uint64_t)v21);
  uint64_t v45 = v77;
  uint64_t v46 = v77 + *(int *)(v76 + 48);
  sub_1005107BC(v41, v77);
  sub_1005107BC(v44, v46);
  uint64_t v47 = v70;
  uint64_t v48 = v26;
  uint64_t v49 = v44;
  if (v70(v45, 1, v26) == 1)
  {
    sub_100522F00(v44, (uint64_t *)&unk_101674520);
    sub_100522F00(v41, (uint64_t *)&unk_101674520);
    int v50 = v47(v46, 1, v26);
    uint64_t v51 = v68;
    uint64_t v52 = v69;
    if (v50 == 1)
    {
      sub_100522F00(v45, (uint64_t *)&unk_101674520);
      (*(void (**)(char *, uint64_t))(v51 + 8))(v52, v48);
      return 0;
    }
    goto LABEL_12;
  }
  uint64_t v53 = v67;
  uint64_t v54 = v71;
  sub_1005107BC(v45, v71);
  if (v47(v46, 1, v48) == 1)
  {
    sub_100522F00(v49, (uint64_t *)&unk_101674520);
    sub_100522F00(v41, (uint64_t *)&unk_101674520);
    uint64_t v51 = v68;
    (*(void (**)(uint64_t, uint64_t))(v68 + 8))(v54, v48);
    uint64_t v52 = v69;
LABEL_12:
    sub_100522F00(v45, (uint64_t *)&unk_10168A0C0);
    uint64_t v55 = v72;
    goto LABEL_16;
  }
  uint64_t v56 = v66;
  v53(v66, v46, v48);
  sub_1007A796C((unint64_t *)&qword_10167BDC0, (void (*)(uint64_t))&type metadata accessor for UUID);
  LODWORD(v76) = dispatch thunk of static Equatable.== infix(_:_:)();
  uint64_t v51 = v68;
  uint64_t v57 = *(void (**)(char *, uint64_t))(v68 + 8);
  v57(v56, v48);
  sub_100522F00(v49, (uint64_t *)&unk_101674520);
  sub_100522F00(v41, (uint64_t *)&unk_101674520);
  v57((char *)v54, v48);
  sub_100522F00(v45, (uint64_t *)&unk_101674520);
  uint64_t v55 = v72;
  uint64_t v52 = v69;
  if (v76)
  {
    v57(v69, v48);
    return 0;
  }
LABEL_16:
  Class isa = UUID._bridgeToObjectiveC()().super.isa;
  id v59 = [v55 getBoardItemForUUID:isa];

  if (v59)
  {
    uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
    uint64_t v61 = swift_unknownObjectWeakLoadStrong();
    uint64_t v62 = (void *)v61;
    if (Strong)
    {
      if (!v61)
      {
        (*(void (**)(char *, uint64_t))(v51 + 8))(v52, v48);

        return 0;
      }
      type metadata accessor for CRLBoardItem(0);
      id v63 = Strong;
      char v64 = static NSObject.== infix(_:_:)();
      (*(void (**)(char *, uint64_t))(v51 + 8))(v52, v48);

      if ((v64 & 1) == 0)
      {

        return 0;
      }
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v51 + 8))(v52, v48);
      if (v62)
      {

        return 0;
      }
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v51 + 8))(v52, v48);
  }
  return v59;
}

uint64_t sub_1007A78AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CRLConnectionLineCRDTData(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1007A7910(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for CRLConnectionLineCRDTData(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1007A796C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

BOOL sub_1007A79B4()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for CRLWPReplaceTextCommand.CoalescingData(0);
  __chkstk_darwin(v2, v3);
  uint64_t v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1005057FC(&qword_1016801A0);
  __chkstk_darwin(v6 - 8, v7);
  uint64_t v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10, v11);
  uint64_t v13 = (char *)&v19 - v12;
  sub_100522E9C(v1 + *(int *)(v2 + 20), (uint64_t)&v19 - v12, &qword_1016801A0);
  uint64_t v14 = sub_1005057FC(qword_101675B88);
  uint64_t v15 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48);
  int v16 = v15(v13, 1, v14);
  sub_100522F00((uint64_t)v13, &qword_1016801A0);
  sub_1007ACE5C(v1, (uint64_t)v5, type metadata accessor for CRLWPReplaceTextCommand.CoalescingData);
  if (v16 == 1)
  {
    sub_1007ACDA0((uint64_t)v5, type metadata accessor for CRLWPReplaceTextCommand.CoalescingData);
    return 0;
  }
  else
  {
    sub_100522E9C((uint64_t)&v5[*(int *)(v2 + 24)], (uint64_t)v9, &qword_1016801A0);
    sub_1007ACDA0((uint64_t)v5, type metadata accessor for CRLWPReplaceTextCommand.CoalescingData);
    BOOL v17 = v15(v9, 1, v14) == 1;
    sub_100522F00((uint64_t)v9, &qword_1016801A0);
  }
  return v17;
}

BOOL sub_1007A7BCC()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for CRLWPReplaceTextCommand.CoalescingData(0);
  __chkstk_darwin(v2, v3);
  uint64_t v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1005057FC(&qword_1016801A0);
  __chkstk_darwin(v6 - 8, v7);
  uint64_t v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10, v11);
  uint64_t v13 = (char *)&v19 - v12;
  sub_100522E9C(v1 + *(int *)(v2 + 24), (uint64_t)&v19 - v12, &qword_1016801A0);
  uint64_t v14 = sub_1005057FC(qword_101675B88);
  uint64_t v15 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48);
  int v16 = v15(v13, 1, v14);
  sub_100522F00((uint64_t)v13, &qword_1016801A0);
  sub_1007ACE5C(v1, (uint64_t)v5, type metadata accessor for CRLWPReplaceTextCommand.CoalescingData);
  if (v16 == 1)
  {
    sub_1007ACDA0((uint64_t)v5, type metadata accessor for CRLWPReplaceTextCommand.CoalescingData);
    return 0;
  }
  else
  {
    sub_100522E9C((uint64_t)&v5[*(int *)(v2 + 20)], (uint64_t)v9, &qword_1016801A0);
    sub_1007ACDA0((uint64_t)v5, type metadata accessor for CRLWPReplaceTextCommand.CoalescingData);
    BOOL v17 = v15(v9, 1, v14) == 1;
    sub_100522F00((uint64_t)v9, &qword_1016801A0);
  }
  return v17;
}

uint64_t sub_1007A7DE4()
{
  uint64_t v1 = type metadata accessor for CRLWPReplaceTextCommand.CoalescingData(0);
  __chkstk_darwin(v1, v2);
  uint64_t v4 = (char *)&v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1005057FC(&qword_1016801A0);
  __chkstk_darwin(v5 - 8, v6);
  uint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9, v10);
  uint64_t v12 = (char *)&v18 - v11;
  sub_100522E9C(v0 + *(int *)(v1 + 20), (uint64_t)&v18 - v11, &qword_1016801A0);
  uint64_t v13 = sub_1005057FC(qword_101675B88);
  uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
  int v15 = v14(v12, 1, v13);
  sub_100522F00((uint64_t)v12, &qword_1016801A0);
  sub_1007ACE5C(v0, (uint64_t)v4, type metadata accessor for CRLWPReplaceTextCommand.CoalescingData);
  if (v15 == 1)
  {
    sub_1007ACDA0((uint64_t)v4, type metadata accessor for CRLWPReplaceTextCommand.CoalescingData);
  }
  else
  {
    sub_100522E9C((uint64_t)&v4[*(int *)(v1 + 24)], (uint64_t)v8, &qword_1016801A0);
    sub_1007ACDA0((uint64_t)v4, type metadata accessor for CRLWPReplaceTextCommand.CoalescingData);
    int v16 = v14(v8, 1, v13);
    sub_100522F00((uint64_t)v8, &qword_1016801A0);
    if (v16 != 1) {
      return 3;
    }
  }
  if (sub_1007A79B4()) {
    return 1;
  }
  if (sub_1007A7BCC()) {
    return 2;
  }
  return 0;
}

uint64_t sub_1007A801C(void (*a1)(void, void, void))
{
  uint64_t v188 = a1;
  uint64_t v2 = sub_1005057FC((uint64_t *)&unk_1016836C0);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v183 = v2;
  uint64_t v184 = v3;
  __chkstk_darwin(v2, v4);
  uint64_t v178 = (char *)&v162 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v180 = sub_1005057FC(&qword_101680268);
  __chkstk_darwin(v180, v6);
  uint64_t v185 = (uint64_t)&v162 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1005057FC(&qword_1016801A8);
  __chkstk_darwin(v8 - 8, v9);
  uint64_t v179 = (uint64_t)&v162 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11, v12);
  uint64_t v181 = (uint64_t)&v162 - v13;
  __chkstk_darwin(v14, v15);
  uint64_t v182 = (uint64_t)&v162 - v16;
  uint64_t v17 = sub_1005057FC((uint64_t *)&unk_10167BC20);
  uint64_t v186 = *(void *)(v17 - 8);
  uint64_t v187 = v17;
  __chkstk_darwin(v17, v18);
  uint64_t v20 = (char *)&v162 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = type metadata accessor for CRLWPShapeItemCRDTData(0);
  __chkstk_darwin(v21, v22);
  uint64_t v24 = (char *)&v162 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = type metadata accessor for CRLWPStorageCRDTData(0);
  __chkstk_darwin(v25 - 8, v26);
  uint64_t v28 = (char *)&v162 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = sub_1005057FC(&qword_1016801A0);
  __chkstk_darwin(v29 - 8, v30);
  uint64_t v32 = (char *)&v162 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v33, v34);
  uint64_t v36 = (char *)&v162 - v35;
  __chkstk_darwin(v37, v38);
  id v40 = (char *)&v162 - v39;
  __chkstk_darwin(v41, v42);
  uint64_t v44 = (char *)&v162 - v43;
  uint64_t v45 = sub_1005057FC(qword_101675B88);
  __chkstk_darwin(v45, v46);
  __chkstk_darwin(v48, (char *)&v162 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v49, v50);
  __chkstk_darwin(v51, v52);
  uint64_t v59 = *v1;
  if (*v1 != *(void *)v188) {
    goto LABEL_2;
  }
  uint64_t v172 = v44;
  uint64_t v167 = v36;
  uint64_t v168 = v40;
  uint64_t v162 = v32;
  uint64_t v164 = v59;
  uint64_t v163 = v54;
  uint64_t v166 = v58;
  uint64_t v169 = v57;
  char v170 = (char *)&v162 - v55;
  uint64_t v175 = v24;
  uint64_t v176 = v21;
  uint64_t v177 = v28;
  char v165 = v20;
  uint64_t v173 = v53;
  uint64_t v174 = v56;
  uint64_t v62 = v188;
  char v63 = sub_1007A7DE4();
  uint64_t v171 = v1;
  char v64 = sub_1007A7DE4();
  char v60 = 0;
  uint64_t v65 = v62;
  uint64_t v66 = v176;
  uint64_t v67 = (uint64_t)v177;
  uint64_t v68 = (uint64_t)v175;
  switch(v63)
  {
    case 1:
    case 3:
      if (v64 != 1) {
        goto LABEL_2;
      }
      uint64_t v69 = type metadata accessor for CRLWPReplaceTextCommand.CoalescingData(0);
      uint64_t v70 = (uint64_t)v172;
      sub_100522E9C((uint64_t)v65 + *(int *)(v69 + 20), (uint64_t)v172, &qword_1016801A0);
      uint64_t v71 = v173;
      uint64_t v72 = v174;
      uint64_t v73 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v174 + 48);
      if (v73(v70, 1, v173) == 1)
      {
        uint64_t v74 = v70;
LABEL_15:
        sub_100522F00(v74, &qword_1016801A0);
LABEL_2:
        char v60 = 0;
        return v60 & 1;
      }
      uint64_t v81 = *(void (**)(char *, uint64_t, uint64_t))(v72 + 32);
      uint64_t v82 = v170;
      v81(v170, v70, v71);
      uint64_t v83 = (uint64_t)v168;
      sub_100522E9C((uint64_t)v171 + *(int *)(v69 + 20), (uint64_t)v168, &qword_1016801A0);
      if (v73(v83, 1, v71) == 1)
      {
        (*(void (**)(char *, uint64_t))(v72 + 8))(v82, v71);
        uint64_t v74 = v83;
        goto LABEL_15;
      }
      uint64_t v172 = (char *)v69;
      uint64_t v84 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v81)(v169, v83, v71);
      uint64_t v85 = *(void *)(v164 + OBJC_IVAR____TtC8Freeform12CRLWPStorage_shapeItemData);
      if (v85)
      {
        (*(void (**)(uint64_t))(*(void *)v85 + 760))(v84);
        uint64_t v86 = (uint64_t)v177;
        sub_1007ACE5C(v68 + *(int *)(v176 + 20), (uint64_t)v177, type metadata accessor for CRLWPStorageCRDTData);
        sub_1007ACDA0(v68, type metadata accessor for CRLWPShapeItemCRDTData);
        uint64_t v88 = v186;
        uint64_t v87 = v187;
        uint64_t v89 = *(void (**)(char *, uint64_t, uint64_t))(v186 + 16);
        uint64_t v90 = v165;
        v89(v165, v86, v187);
        sub_1007ACDA0(v86, type metadata accessor for CRLWPStorageCRDTData);
        uint64_t v91 = v170;
        uint64_t v168 = (char *)CRAttributedString.range(of:)();
        uint64_t v93 = v92;
        LOBYTE(v86) = v94;
        uint64_t v95 = *(uint64_t (**)(char *, uint64_t))(v88 + 8);
        uint64_t v96 = v95(v90, v87);
        if (v86)
        {
          uint64_t v146 = v173;
          Swift::String v147 = *(void (**)(uint64_t, uint64_t))(v174 + 8);
          v147(v169, v173);
          uint64_t v148 = v91;
LABEL_40:
          uint64_t v150 = v146;
          goto LABEL_41;
        }
        uint64_t v186 = v93;
        uint64_t v97 = v171;
        uint64_t v98 = *(void *)(*v171 + OBJC_IVAR____TtC8Freeform12CRLWPStorage_shapeItemData);
        if (v98)
        {
          uint64_t v99 = (uint64_t)v175;
          (*(void (**)(uint64_t))(*(void *)v98 + 760))(v96);
          uint64_t v100 = (uint64_t)v177;
          sub_1007ACE5C(v99 + *(int *)(v176 + 20), (uint64_t)v177, type metadata accessor for CRLWPStorageCRDTData);
          sub_1007ACDA0(v99, type metadata accessor for CRLWPShapeItemCRDTData);
          v89(v90, v100, v87);
          sub_1007ACDA0(v100, type metadata accessor for CRLWPStorageCRDTData);
          uint64_t v101 = v169;
          uint64_t v102 = CRAttributedString.range(of:)();
          uint64_t v104 = v103;
          LOBYTE(v100) = v105;
          v95(v90, v87);
          uint64_t v106 = v184;
          if ((v100 & 1) == 0)
          {
            uint64_t v107 = v104;
            uint64_t v187 = v102;
            uint64_t v108 = (uint64_t)v172;
            uint64_t v109 = v182;
            sub_100522E9C((uint64_t)v188 + *((int *)v172 + 7), v182, &qword_1016801A8);
            uint64_t v110 = v181;
            sub_100522E9C((uint64_t)v97 + *(int *)(v108 + 28), v181, &qword_1016801A8);
            uint64_t v111 = v185;
            uint64_t v112 = v185 + *(int *)(v180 + 48);
            sub_100522E9C(v109, v185, &qword_1016801A8);
            sub_100522E9C(v110, v112, &qword_1016801A8);
            uint64_t v113 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v106 + 48);
            uint64_t v114 = v183;
            if (v113(v111, 1, v183) == 1)
            {
              sub_100522F00(v110, &qword_1016801A8);
              sub_100522F00(v109, &qword_1016801A8);
              uint64_t v115 = v173;
              uint64_t v116 = *(void (**)(uint64_t, uint64_t))(v174 + 8);
              v116(v169, v173);
              v116((uint64_t)v170, v115);
              int v117 = v113(v112, 1, v114);
              if (v117 == 1) {
                uint64_t v118 = &qword_1016801A8;
              }
              else {
                uint64_t v118 = &qword_101680268;
              }
              if (v117 == 1) {
                char v60 = -1;
              }
              else {
                char v60 = 0;
              }
            }
            else
            {
              uint64_t v152 = v111;
              uint64_t v153 = v179;
              sub_100522E9C(v152, v179, &qword_1016801A8);
              if (v113(v112, 1, v114) == 1)
              {
                sub_100522F00(v110, &qword_1016801A8);
                sub_100522F00(v109, &qword_1016801A8);
                uint64_t v154 = v173;
                uint64_t v155 = *(void (**)(uint64_t, uint64_t))(v174 + 8);
                v155(v169, v173);
                v155((uint64_t)v170, v154);
                (*(void (**)(uint64_t, uint64_t))(v106 + 8))(v153, v114);
                char v60 = 0;
                uint64_t v118 = &qword_101680268;
              }
              else
              {
                uint64_t v156 = v110;
                uint64_t v157 = v178;
                (*(void (**)(char *, uint64_t, uint64_t))(v106 + 32))(v178, v112, v114);
                sub_1007ACE00();
                char v60 = dispatch thunk of static Equatable.== infix(_:_:)();
                unsigned __int8 v158 = *(void (**)(char *, uint64_t))(v106 + 8);
                v158(v157, v114);
                uint64_t v118 = &qword_1016801A8;
                sub_100522F00(v156, &qword_1016801A8);
                sub_100522F00(v109, &qword_1016801A8);
                id v159 = *(void (**)(uint64_t, uint64_t))(v174 + 8);
                uint64_t v160 = v173;
                v159(v169, v173);
                v159((uint64_t)v170, v160);
                v158((char *)v153, v114);
              }
            }
            uint64_t v161 = (uint64_t)v168;
            sub_100522F00(v185, v118);
            if (v161 != v107) {
              v60 &= v186 == v187;
            }
            return v60 & 1;
          }
          Swift::String v147 = *(void (**)(uint64_t, uint64_t))(v174 + 8);
          uint64_t v151 = v101;
          uint64_t v146 = v173;
          v147(v151, v173);
          uint64_t v148 = v170;
          goto LABEL_40;
        }
      }
      else
      {
        __break(1u);
LABEL_48:
        __break(1u);
      }
      __break(1u);
LABEL_50:
      __break(1u);
      JUMPOUT(0x1007A8F24);
    case 2:
      if (v64 != 2) {
        goto LABEL_2;
      }
      uint64_t v75 = type metadata accessor for CRLWPReplaceTextCommand.CoalescingData(0);
      uint64_t v76 = (uint64_t)v167;
      sub_100522E9C((uint64_t)v62 + *(int *)(v75 + 24), (uint64_t)v167, &qword_1016801A0);
      uint64_t v78 = v173;
      uint64_t v77 = v174;
      BOOL v79 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v174 + 48);
      if (v79(v76, 1, v173) == 1) {
        goto LABEL_12;
      }
      uint64_t v80 = v166;
      uint64_t v188 = *(void (**)(void, void, void))(v77 + 32);
      v188(v166, v76, v78);
      uint64_t v76 = (uint64_t)v162;
      sub_100522E9C((uint64_t)v171 + *(int *)(v75 + 24), (uint64_t)v162, &qword_1016801A0);
      if (v79(v76, 1, v78) == 1)
      {
        (*(void (**)(char *, uint64_t))(v77 + 8))(v80, v78);
LABEL_12:
        uint64_t v74 = v76;
        goto LABEL_15;
      }
      uint64_t v119 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v188)(v163, v76, v78);
      uint64_t v120 = *(void *)(v164 + OBJC_IVAR____TtC8Freeform12CRLWPStorage_shapeItemData);
      if (!v120) {
        goto LABEL_48;
      }
      uint64_t v121 = (uint64_t)v175;
      (*(void (**)(uint64_t))(*(void *)v120 + 760))(v119);
      sub_1007ACE5C(v121 + *(int *)(v66 + 20), v67, type metadata accessor for CRLWPStorageCRDTData);
      sub_1007ACDA0(v121, type metadata accessor for CRLWPShapeItemCRDTData);
      uint64_t v123 = v186;
      uint64_t v122 = v187;
      uint64_t v124 = *(void (**)(char *, uint64_t, uint64_t))(v186 + 16);
      uint64_t v125 = v165;
      v124(v165, v67, v187);
      sub_1007ACDA0(v67, type metadata accessor for CRLWPStorageCRDTData);
      unsigned __int8 v126 = v166;
      uint64_t v127 = CRAttributedString.range(of:)();
      uint64_t v188 = v128;
      char v130 = v129;
      char v131 = *(uint64_t (**)(char *, uint64_t))(v123 + 8);
      uint64_t v132 = v131(v125, v122);
      if (v130)
      {
        uint64_t v149 = v173;
        Swift::String v147 = *(void (**)(uint64_t, uint64_t))(v174 + 8);
        v147(v163, v173);
        uint64_t v148 = v126;
        uint64_t v150 = v149;
LABEL_41:
        v147((uint64_t)v148, v150);
        goto LABEL_2;
      }
      uint64_t v133 = *(void *)(*v171 + OBJC_IVAR____TtC8Freeform12CRLWPStorage_shapeItemData);
      if (!v133) {
        goto LABEL_50;
      }
      uint64_t v134 = (uint64_t)v175;
      (*(void (**)(uint64_t))(*(void *)v133 + 760))(v132);
      uint64_t v135 = (uint64_t)v177;
      sub_1007ACE5C(v134 + *(int *)(v176 + 20), (uint64_t)v177, type metadata accessor for CRLWPStorageCRDTData);
      sub_1007ACDA0(v134, type metadata accessor for CRLWPShapeItemCRDTData);
      uint64_t v136 = v165;
      v124(v165, v135, v122);
      sub_1007ACDA0(v135, type metadata accessor for CRLWPStorageCRDTData);
      uint64_t v137 = v163;
      uint64_t v138 = CRAttributedString.range(of:)();
      uint64_t v140 = v139;
      char v142 = v141;
      v131(v136, v122);
      uint64_t v143 = v173;
      uint64_t v144 = *(void (**)(uint64_t, uint64_t))(v174 + 8);
      v144(v137, v173);
      v144((uint64_t)v166, v143);
      if (v142) {
        goto LABEL_2;
      }
      char v60 = v127 == v140 || v188 == (void (*)(void, void, void))v138;
      return v60 & 1;
    default:
      return v60 & 1;
  }
}

uint64_t (*sub_1007A8F34())()
{
  return j__swift_endAccess;
}

id sub_1007A8FA0(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8)
{
  uint64_t v37 = a7;
  uint64_t v38 = a8;
  int v36 = a6;
  uint64_t v39 = a5;
  uint64_t v40 = a2;
  uint64_t v41 = a3;
  uint64_t v42 = a1;
  uint64_t v12 = a2;
  uint64_t v13 = sub_1005057FC(&qword_101680258);
  uint64_t v14 = v13 - 8;
  __chkstk_darwin(v13, v15);
  uint64_t v17 = &v35[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v18, v19);
  uint64_t v21 = &v35[-v20];
  uint64_t v22 = &v35[*(int *)(v14 + 72) - v20];
  uint64_t v23 = &v35[*(int *)(v14 + 88) - v20];
  *(void *)uint64_t v21 = v12;
  *((void *)v21 + 1) = a3;
  *((void *)v21 + 2) = a4;
  *((void *)v21 + 3) = a5;
  uint64_t v24 = a4;
  LOBYTE(v12) = v36 & 1;
  v21[32] = v36 & 1;
  sub_10051B3EC(v37, (uint64_t)v22, (uint64_t *)&unk_1016837D0);
  sub_10051B3EC(v38, (uint64_t)v23, (uint64_t *)&unk_101687B10);
  uint64_t v25 = &v8[OBJC_IVAR____TtC8Freeform23CRLWPReplaceTextCommand_coalescingData];
  uint64_t v26 = type metadata accessor for CRLWPReplaceTextCommand.CoalescingData(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v25, 1, 1, v26);
  *(void *)&v8[OBJC_IVAR____TtC8Freeform23CRLWPReplaceTextCommand_shapeItem] = v42;
  uint64_t v27 = (uint64_t)&v17[*(int *)(v14 + 72)];
  uint64_t v28 = (uint64_t)&v17[*(int *)(v14 + 88)];
  sub_100522E9C((uint64_t)v22, v27, (uint64_t *)&unk_1016837D0);
  sub_100522E9C((uint64_t)v23, v28, (uint64_t *)&unk_101687B10);
  uint64_t v29 = &v8[OBJC_IVAR____TtC8Freeform23CRLWPReplaceTextCommand_replacement];
  uint64_t v30 = v39;
  uint64_t v31 = v41;
  *(void *)uint64_t v29 = v40;
  *((void *)v29 + 1) = v31;
  *((void *)v29 + 2) = v24;
  *((void *)v29 + 3) = v30;
  v29[32] = v12;
  sub_10051B3EC(v27, (uint64_t)&v29[*(int *)(v14 + 72)], (uint64_t *)&unk_1016837D0);
  sub_10051B3EC(v28, (uint64_t)&v29[*(int *)(v14 + 88)], (uint64_t *)&unk_101687B10);
  sub_1007AB580(v24, v30, v12);
  uint64_t v32 = (objc_class *)type metadata accessor for CRLWPReplaceTextCommand(0);
  v43.id receiver = v8;
  v43.Class super_class = v32;
  [super init];
  sub_100522F00((uint64_t)v21, &qword_101680258);
  return v33;
}

void sub_1007A9410(uint64_t a1, uint64_t a2, int a3)
{
  int v257 = a3;
  uint64_t v273 = a2;
  uint64_t v4 = sub_1005057FC(&qword_1016801A8);
  __chkstk_darwin(v4 - 8, v5);
  uint64_t v241 = (char *)&v235 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v256 = sub_1005057FC(&qword_101687A90);
  uint64_t v246 = *(void *)(v256 - 8);
  __chkstk_darwin(v256, v7);
  uint64_t v244 = (uint64_t)&v235 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v249 = sub_1005057FC((uint64_t *)&unk_101683740);
  uint64_t v248 = *(void *)(v249 - 8);
  __chkstk_darwin(v249, v9);
  uint64_t v250 = (uint64_t)&v235 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1005057FC(&qword_1016801A0);
  __chkstk_darwin(v11 - 8, v12);
  uint64_t v14 = (char *)&v235 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15, v16);
  v252 = (char *)&v235 - v17;
  uint64_t v18 = sub_1005057FC(&qword_101680260);
  __chkstk_darwin(v18 - 8, v19);
  uint64_t v21 = (char **)((char *)&v235 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v280 = sub_1005057FC((uint64_t *)&unk_10167BC20);
  uint64_t v287 = *(void *)(v280 - 8);
  __chkstk_darwin(v280, v22);
  unint64_t v242 = (char *)&v235 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24, v25);
  v243 = (char *)&v235 - v26;
  __chkstk_darwin(v27, v28);
  uint64_t v279 = (void (**)(uint64_t, uint64_t))((char *)&v235 - v29);
  uint64_t v278 = type metadata accessor for CRLWPShapeItemCRDTData(0);
  __chkstk_darwin(v278, v30);
  uint64_t v32 = (char *)&v235 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = type metadata accessor for CRLWPStorageCRDTData(0);
  __chkstk_darwin(v33 - 8, v34);
  uint64_t v277 = (uint64_t)&v235 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = sub_1005057FC(&qword_101680258);
  __chkstk_darwin(v36, v37);
  v245 = (id *)((char *)&v235 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v39, v40);
  id v247 = (id *)((char *)&v235 - v41);
  __chkstk_darwin(v42, v43);
  uint64_t v251 = (uint64_t *)((char *)&v235 - v44);
  __chkstk_darwin(v45, v46);
  uint64_t v258 = (uint64_t *)((char *)&v235 - v47);
  __chkstk_darwin(v48, v49);
  v259 = (id *)((char *)&v235 - v50);
  __chkstk_darwin(v51, v52);
  uint64_t v54 = (char *)&v235 - v53;
  __chkstk_darwin(v55, v56);
  uint64_t v58 = (char *)&v235 - v57;
  uint64_t v276 = *(void *)(v3 + OBJC_IVAR____TtC8Freeform23CRLWPReplaceTextCommand_shapeItem);
  uint64_t v260 = OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage;
  uint64_t v59 = *(char **)(v276 + OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage);
  if (!v59) {
    goto LABEL_95;
  }
  uint64_t v240 = v14;
  uint64_t v60 = v3 + OBJC_IVAR____TtC8Freeform23CRLWPReplaceTextCommand_replacement;
  uint64_t v61 = *(int *)(v36 + 64);
  uint64_t v62 = (uint64_t)&v58[v61];
  uint64_t v63 = *(int *)(v36 + 80);
  uint64_t v64 = (uint64_t)&v58[v63];
  uint64_t v65 = v3 + OBJC_IVAR____TtC8Freeform23CRLWPReplaceTextCommand_replacement + v61;
  uint64_t v66 = v3 + OBJC_IVAR____TtC8Freeform23CRLWPReplaceTextCommand_replacement + v63;
  uint64_t v68 = *(void *)(v3 + OBJC_IVAR____TtC8Freeform23CRLWPReplaceTextCommand_replacement);
  uint64_t v67 = *(void *)(v3 + OBJC_IVAR____TtC8Freeform23CRLWPReplaceTextCommand_replacement + 8);
  *(void *)uint64_t v58 = v68;
  *((void *)v58 + 1) = v67;
  uint64_t v289 = v67;
  uint64_t v69 = *(void **)(v60 + 16);
  uint64_t v70 = *(void *)(v60 + 24);
  LODWORD(v60) = *(unsigned __int8 *)(v60 + 32);
  uint64_t v284 = v69;
  *((void *)v58 + 2) = v69;
  *((void *)v58 + 3) = v70;
  uint64_t v281 = v3;
  uint64_t v282 = v70;
  LODWORD(v271) = v60;
  v58[32] = v60;
  uint64_t v285 = v65;
  uint64_t v283 = v62;
  sub_100522E9C(v65, v62, (uint64_t *)&unk_1016837D0);
  uint64_t v286 = v66;
  uint64_t v71 = sub_100522E9C(v66, v64, (uint64_t *)&unk_101687B10);
  uint64_t v265 = OBJC_IVAR____TtC8Freeform12CRLWPStorage_shapeItemData;
  uint64_t v72 = *(void *)&v59[OBJC_IVAR____TtC8Freeform12CRLWPStorage_shapeItemData];
  if (!v72)
  {
LABEL_96:
    __break(1u);
    goto LABEL_97;
  }
  (*(void (**)(uint64_t))(*(void *)v72 + 760))(v71);
  uint64_t v73 = v277;
  sub_1007ACE5C((uint64_t)&v32[*(int *)(v278 + 20)], v277, type metadata accessor for CRLWPStorageCRDTData);
  uint64_t v274 = v59;
  uint64_t v272 = v59;
  v264 = v32;
  sub_1007ACDA0((uint64_t)v32, type metadata accessor for CRLWPShapeItemCRDTData);
  uint64_t v74 = v287;
  uint64_t v75 = *(void (**)(void (**)(uint64_t, uint64_t), uint64_t, uint64_t))(v287 + 16);
  uint64_t v76 = v279;
  uint64_t v77 = v280;
  uint64_t v263 = v287 + 16;
  uint64_t v262 = v75;
  v75(v279, v73, v280);
  sub_1007ACDA0(v73, type metadata accessor for CRLWPStorageCRDTData);
  uint64_t v78 = CRAttributedString.count.getter();
  BOOL v79 = *(void (**)(void, uint64_t))(v74 + 8);
  uint64_t v267 = v74 + 8;
  CKRecordID v266 = v79;
  v79(v76, v77);
  if (v78 >= (v68 & ~(v68 >> 63))) {
    uint64_t v80 = v68 & ~(v68 >> 63);
  }
  else {
    uint64_t v80 = v78;
  }
  uint64_t v81 = v289 & ~(v289 >> 63);
  if (v78 < v81) {
    uint64_t v81 = v78;
  }
  uint64_t v268 = v80;
  uint64_t v261 = v81;
  if (v81 < v80)
  {
    __break(1u);
    goto LABEL_87;
  }
  sub_100522F00(v64, (uint64_t *)&unk_101687B10);
  sub_100522F00(v283, (uint64_t *)&unk_1016837D0);
  uint64_t v82 = (int *)v36;
  uint64_t v83 = (int *)type metadata accessor for CRLWPReplaceTextCommand.CoalescingData(0);
  uint64_t v84 = (char *)v21 + v83[5];
  uint64_t v85 = sub_1005057FC(qword_101675B88);
  uint64_t v283 = v68;
  uint64_t v86 = v85;
  uint64_t v87 = *(void *)(v85 - 8);
  uint64_t v88 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v87 + 56);
  uint64_t v89 = v87 + 56;
  v88(v84, 1, 1, v85);
  uint64_t v90 = (char *)v21 + v83[6];
  uint64_t v255 = v86;
  uint64_t v254 = v88;
  uint64_t v253 = v89;
  v88(v90, 1, 1, v86);
  uint64_t v91 = v83;
  uint64_t v92 = (char *)v21 + v83[7];
  uint64_t v93 = sub_1005057FC((uint64_t *)&unk_1016836C0);
  uint64_t v94 = *(void *)(v93 - 8);
  uint64_t v239 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v94 + 56);
  uint64_t v238 = v94 + 56;
  v239(v92, 1, 1, v93);
  uint64_t v95 = v272;
  *uint64_t v21 = v272;
  uint64_t v96 = (char *)*((void *)v83 - 1);
  uint64_t v97 = (void (*)(char **, void, uint64_t, int *))*((void *)v96 + 7);
  v275 = v91;
  v97(v21, 0, 1, v91);
  uint64_t v98 = v281 + OBJC_IVAR____TtC8Freeform23CRLWPReplaceTextCommand_coalescingData;
  swift_beginAccess();
  v269 = v95;
  sub_1006063BC((uint64_t)v21, v98, &qword_101680260);
  swift_endAccess();
  uint64_t v99 = (uint64_t)&v54[v82[16]];
  uint64_t v272 = (char *)v82;
  uint64_t v100 = (uint64_t)&v54[v82[20]];
  uint64_t v102 = v283;
  uint64_t v101 = v284;
  uint64_t v103 = v289;
  *(void *)uint64_t v54 = v283;
  *((void *)v54 + 1) = v103;
  uint64_t v104 = v282;
  *((void *)v54 + 2) = v101;
  *((void *)v54 + 3) = v104;
  char v105 = v271;
  v54[32] = v271;
  sub_100522E9C(v285, v99, (uint64_t *)&unk_1016837D0);
  sub_100522E9C(v286, v100, (uint64_t *)&unk_101687B10);
  BOOL v106 = __OFSUB__(v103, v102);
  uint64_t v107 = v103 - v102;
  if (v106)
  {
LABEL_87:
    __break(1u);
LABEL_88:
    __break(1u);
    goto LABEL_89;
  }
  uint64_t v237 = v93;
  sub_100522F00(v100, (uint64_t *)&unk_101687B10);
  sub_100522F00(v99, (uint64_t *)&unk_1016837D0);
  uint64_t v108 = v274;
  uint64_t v109 = v287;
  if (v107 >= 1)
  {
    uint64_t v110 = sub_1007A8F34();
    uint64_t v112 = v111;
    if ((*((unsigned int (**)(uint64_t, uint64_t, int *))v96 + 6))(v111, 1, v275))
    {
      ((void (*)(void *, void))v110)(aBlock, 0);
    }
    else
    {
      uint64_t v113 = *(void *)&v108[v265];
      if (!v113)
      {
LABEL_97:
        __break(1u);
        goto LABEL_98;
      }
      uint64_t v114 = (uint64_t)v264;
      (*(void (**)(void))(*(void *)v113 + 760))();
      uint64_t v115 = v277;
      sub_1007ACE5C(v114 + *(int *)(v278 + 20), v277, type metadata accessor for CRLWPStorageCRDTData);
      sub_1007ACDA0(v114, type metadata accessor for CRLWPShapeItemCRDTData);
      uint64_t v116 = v279;
      uint64_t v117 = v280;
      v262(v279, v115, v280);
      sub_1007ACDA0(v115, type metadata accessor for CRLWPStorageCRDTData);
      uint64_t v118 = (uint64_t)v252;
      CRAttributedString.cursor(range:)();
      v266(v116, v117);
      v254((char *)v118, 0, 1, v255);
      sub_1006063BC(v118, v112 + v275[6], &qword_1016801A0);
      ((void (*)(void *, void))v110)(aBlock, 0);
      uint64_t v109 = v287;
    }
  }
  uint64_t v119 = v276;
  uint64_t v120 = v270;
  sub_10103405C(v276, (uint64_t)&off_101518040);
  if (v120)
  {
LABEL_85:

    return;
  }
  v252 = v96;
  uint64_t v121 = v259;
  uint64_t v122 = (uint64_t)v259 + *((int *)v272 + 16);
  uint64_t v123 = (uint64_t)v259 + *((int *)v272 + 20);
  uint64_t v124 = v282;
  uint64_t v125 = v289;
  void *v259 = v283;
  v121[1] = v125;
  uint64_t v126 = v285;
  v121[2] = v284;
  v121[3] = v124;
  *((unsigned char *)v121 + 32) = v105;
  sub_100522E9C(v126, v122, (uint64_t *)&unk_1016837D0);
  sub_100522E9C(v286, v123, (uint64_t *)&unk_101687B10);
  uint64_t v127 = *(void **)(v119 + v260);
  uint64_t v270 = 0;
  if (v105)
  {
    uint64_t v236 = v123;
    v259 = (void *)v122;
    uint64_t v128 = v280;
    if (!v127)
    {
LABEL_99:
      __break(1u);
      goto LABEL_100;
    }
    char v129 = v284;
    uint64_t v130 = v282;
    sub_1007AB580(v284, v282, 1);
    sub_1007AB580(v129, v130, 1);
    sub_1007AB580(v129, v130, 1);
    sub_1005D3BF8();
    id v235 = v127;
    char v131 = v242;
    CRAttributedString.init(_:)();
    uint64_t v132 = *(char **)(v109 + 32);
    uint64_t v287 = v109 + 32;
    uint64_t v133 = v243;
    unint64_t v242 = v132;
    ((void (*)(char *, char *, uint64_t))v132)(v243, v131, v128);
    id v134 = [v129 length];
    uint64_t v135 = swift_allocObject();
    *(void *)(v135 + 16) = v133;
    uint64_t v136 = swift_allocObject();
    *(void *)(v136 + 16) = sub_1005D3C5C;
    *(void *)(v136 + 24) = v135;
    aBlock[4] = sub_1005D3C74;
    aBlock[5] = v136;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = *(void *)"";
    aBlock[2] = sub_100F9A6C0;
    void aBlock[3] = &unk_101513E70;
    uint64_t v137 = _Block_copy(aBlock);
    swift_retain();
    swift_release();
    [v129 enumerateAttributesInRange:0 options:v134 usingBlock:v137];
    sub_1007AB5A0(v129, v130, 1);
    _Block_release(v137);
    LOBYTE(v134) = swift_isEscapingClosureAtFileLocation();
    swift_release();
    if (v134) {
      goto LABEL_91;
    }
    uint64_t v138 = v279;
    ((void (*)(void (**)(uint64_t, uint64_t), char *, uint64_t))v242)(v279, v133, v128);
    swift_release();
    uint64_t v139 = v235;
    sub_100902DAC(v268, v261, v138, 1);

    sub_1007AB5A0(v129, v130, 1);
    v266(v138, v128);
    uint64_t v140 = v283;
    char v141 = v129;
    uint64_t v124 = v130;
    char v105 = v271;
    uint64_t v122 = (uint64_t)v259;
    uint64_t v123 = v236;
  }
  else
  {
    if (!v127)
    {
LABEL_100:
      __break(1u);
      goto LABEL_101;
    }
    char v142 = v284;
    sub_1007AB580(v284, v124, 0);
    id v143 = v127;
    char v141 = v142;
    id v144 = v143;
    sub_100901520(v268, v261, (uint64_t)v142, v124, 1);

    sub_1007AB5A0(v142, v124, 0);
    uint64_t v140 = v283;
  }
  sub_100522F00(v123, (uint64_t *)&unk_101687B10);
  sub_100522F00(v122, (uint64_t *)&unk_1016837D0);
  unint64_t v145 = v258;
  uint64_t v146 = (uint64_t)v258 + *((int *)v272 + 16);
  uint64_t v147 = (uint64_t)v258 + *((int *)v272 + 20);
  uint64_t v148 = v289;
  *uint64_t v258 = v140;
  v145[1] = v148;
  v145[2] = (uint64_t)v141;
  v145[3] = v124;
  *((unsigned char *)v145 + 32) = v105;
  sub_100522E9C(v285, v146, (uint64_t *)&unk_1016837D0);
  sub_100522E9C(v286, v147, (uint64_t *)&unk_101687B10);
  if (v105)
  {
    id v149 = [v141 string];
    static String._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v150 = String.count.getter();
    swift_bridgeObjectRelease();
    sub_1007AB5A0(v141, v124, 1);
    sub_1007AB5A0(v141, v124, 1);
    sub_100522F00(v147, (uint64_t *)&unk_101687B10);
    sub_100522F00(v146, (uint64_t *)&unk_1016837D0);
    if (v150 < 1) {
      goto LABEL_84;
    }
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v151 = String.UTF16View.count.getter();
    sub_1007AB5A0(v141, v124, 0);
    sub_100522F00(v147, (uint64_t *)&unk_101687B10);
    sub_100522F00(v146, (uint64_t *)&unk_1016837D0);
    if (v151 <= 0)
    {
LABEL_84:
      sub_101023724(v276, (uint64_t)&off_101518040, v257);
      goto LABEL_85;
    }
  }
  uint64_t v152 = v251;
  uint64_t v153 = (uint64_t)v251 + *((int *)v272 + 16);
  uint64_t v154 = (uint64_t)v251 + *((int *)v272 + 20);
  uint64_t v155 = v289;
  *uint64_t v251 = v140;
  v152[1] = v155;
  v152[2] = (uint64_t)v141;
  v152[3] = v124;
  *((unsigned char *)v152 + 32) = v105;
  sub_100522E9C(v285, v153, (uint64_t *)&unk_1016837D0);
  sub_100522E9C(v286, v154, (uint64_t *)&unk_101687B10);
  if (v105)
  {
    id v156 = [v141 string];
    static String._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v155 = v289;
    uint64_t v157 = String.count.getter();
    swift_bridgeObjectRelease();
    sub_1007AB5A0(v141, v124, 1);
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v157 = String.UTF16View.count.getter();
  }
  unsigned __int8 v158 = v274;
  sub_1007AB5A0(v141, v124, v105);
  uint64_t v159 = v268;
  uint64_t v160 = v268 + v157;
  if (__OFADD__(v268, v157)) {
    goto LABEL_88;
  }
  sub_100522F00(v154, (uint64_t *)&unk_101687B10);
  uint64_t v161 = sub_100522F00(v153, (uint64_t *)&unk_1016837D0);
  if (v160 < v159)
  {
LABEL_89:
    __break(1u);
LABEL_90:
    __break(1u);
LABEL_91:
    __break(1u);
LABEL_92:
    __break(1u);
    goto LABEL_93;
  }
  uint64_t v162 = *(void *)&v158[v265];
  uint64_t v163 = (uint64_t)v264;
  uint64_t v164 = v280;
  if (!v162)
  {
LABEL_98:
    __break(1u);
    goto LABEL_99;
  }
  (*(void (**)(uint64_t))(*(void *)v162 + 760))(v161);
  uint64_t v165 = v277;
  sub_1007ACE5C(v163 + *(int *)(v278 + 20), v277, type metadata accessor for CRLWPStorageCRDTData);
  sub_1007ACDA0(v163, type metadata accessor for CRLWPShapeItemCRDTData);
  uint64_t v166 = v279;
  v262(v279, v165, v164);
  sub_1007ACDA0(v165, type metadata accessor for CRLWPStorageCRDTData);
  uint64_t v167 = CRAttributedString.count.getter();
  v266(v166, v164);
  if (v167 >= (v159 & ~(v159 >> 63))) {
    uint64_t v168 = v159 & ~(v159 >> 63);
  }
  else {
    uint64_t v168 = v167;
  }
  if (v167 >= (v160 & ~(v160 >> 63))) {
    uint64_t v169 = v160 & ~(v160 >> 63);
  }
  else {
    uint64_t v169 = v167;
  }
  uint64_t v287 = v168;
  if (v169 < v168) {
    goto LABEL_90;
  }
  char v170 = v272;
  uint64_t v171 = v247;
  uint64_t v172 = (uint64_t)v247 + *((int *)v272 + 16);
  uint64_t v173 = (uint64_t)v247 + *((int *)v272 + 20);
  *id v247 = v283;
  v171[1] = v155;
  uint64_t v174 = v285;
  uint64_t v175 = v282;
  v171[2] = v284;
  v171[3] = v175;
  *((unsigned char *)v171 + 32) = v105;
  sub_100522E9C(v174, v172, (uint64_t *)&unk_1016837D0);
  sub_100522E9C(v286, v173, (uint64_t *)&unk_101687B10);
  uint64_t v176 = v249;
  int v177 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v248 + 48))(v172, 1, v249);
  uint64_t v178 = v250;
  uint64_t v271 = v169;
  if (v177 == 1)
  {
    sub_100522F00(v173, (uint64_t *)&unk_101687B10);
    sub_100522F00(v172, (uint64_t *)&unk_1016837D0);
    goto LABEL_57;
  }
  sub_10051B3EC(v172, v250, (uint64_t *)&unk_101683740);
  sub_100522F00(v173, (uint64_t *)&unk_101687B10);
  uint64_t v179 = *(void **)(v276 + v260);
  if (!v179)
  {
LABEL_101:
    __break(1u);
    goto LABEL_102;
  }
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong)
  {
    id v189 = v179;
    goto LABEL_54;
  }
  uint64_t v181 = (void *)Strong;
  swift_getObjectType();
  uint64_t v182 = swift_conformsToProtocol2();
  if (v182) {
    uint64_t v183 = v182;
  }
  else {
    uint64_t v183 = 0;
  }
  if (v182) {
    uint64_t v184 = v181;
  }
  else {
    uint64_t v184 = 0;
  }
  if (!v184)
  {
    id v190 = v179;

LABEL_54:
    sub_1008F8540(v287, v169, (uint64_t)v179);
    if ((v193 & 1) == 0)
    {
      sub_10090614C(v178 + *(int *)(v176 + 36), v191, v192);
      *((unsigned char *)v179 + OBJC_IVAR____TtC8Freeform12CRLWPStorage__hasValidPresentationProperties) = 0;
    }
    goto LABEL_56;
  }
  uint64_t ObjectType = swift_getObjectType();
  id v186 = v179;
  uint64_t v187 = ObjectType;
  uint64_t v169 = v271;
  char v188 = sub_100FC1058(v187, v183);

  if (v188) {
    goto LABEL_54;
  }
LABEL_56:

  sub_100522F00(v178, (uint64_t *)&unk_101683740);
  uint64_t v155 = v289;
LABEL_57:
  char v194 = v245;
  uint64_t v195 = (uint64_t)v245 + *((int *)v170 + 16);
  uint64_t v196 = (uint64_t)v245 + *((int *)v170 + 20);
  void *v245 = v283;
  v194[1] = v155;
  uint64_t v197 = v285;
  uint64_t v198 = v282;
  v194[2] = v284;
  v194[3] = v198;
  *((unsigned char *)v194 + 32) = v105;
  sub_100522E9C(v197, v195, (uint64_t *)&unk_1016837D0);
  sub_100522E9C(v286, v196, (uint64_t *)&unk_101687B10);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v246 + 48))(v196, 1, v256) == 1)
  {
    sub_100522F00(v196, (uint64_t *)&unk_101687B10);
    sub_100522F00(v195, (uint64_t *)&unk_1016837D0);
    goto LABEL_76;
  }
  sub_10051B3EC(v196, v244, &qword_101687A90);
  sub_100522F00(v195, (uint64_t *)&unk_1016837D0);
  char v199 = *(void **)(v276 + v260);
  uint64_t v200 = v287;
  if (!v199)
  {
LABEL_102:
    __break(1u);
    goto LABEL_103;
  }
  uint64_t v201 = swift_unknownObjectWeakLoadStrong();
  if (v201)
  {
    uint64_t v202 = (void *)v201;
    swift_getObjectType();
    uint64_t v203 = swift_conformsToProtocol2();
    if (v203) {
      uint64_t v204 = v203;
    }
    else {
      uint64_t v204 = 0;
    }
    if (v203) {
      uint64_t v205 = v202;
    }
    else {
      uint64_t v205 = 0;
    }
    if (v205)
    {
      uint64_t v206 = swift_getObjectType();
      id v207 = v199;
      uint64_t v208 = v206;
      uint64_t v169 = v271;
      char v209 = sub_100FC1058(v208, v204);

      if ((v209 & 1) == 0)
      {

        sub_100522F00(v244, &qword_101687A90);
        goto LABEL_76;
      }
    }
    else
    {
      id v211 = v199;
    }
  }
  else
  {
    id v210 = v199;
  }
  if (__OFSUB__(v169, v200)) {
    goto LABEL_92;
  }
  id v212 = [v199 textRangeForParagraphsInCharRange:v200, v169 - v200];
  uint64_t v214 = (uint64_t)v212 + v213;
  if (__OFADD__(v212, v213))
  {
LABEL_93:
    __break(1u);
    goto LABEL_94;
  }
  if (v214 < (uint64_t)v212)
  {
LABEL_94:
    __break(1u);
LABEL_95:
    __break(1u);
    goto LABEL_96;
  }
  uint64_t v215 = v244;
  sub_10090614C(v244 + *(int *)(v256 + 36), (uint64_t)v212, v214);
  *((unsigned char *)v199 + OBJC_IVAR____TtC8Freeform12CRLWPStorage__hasValidPresentationProperties) = 0;

  sub_100522F00(v215, &qword_101687A90);
LABEL_76:
  long long v216 = sub_1007A8F34();
  uint64_t v218 = v217;
  unint64_t v219 = (unsigned int (*)(uint64_t, uint64_t, int *))*((void *)v252 + 6);
  if (!v219(v217, 1, v275))
  {
    uint64_t v220 = *(void *)&v274[v265];
    if (v220)
    {
      uint64_t v221 = (uint64_t)v264;
      (*(void (**)(void))(*(void *)v220 + 760))();
      uint64_t v222 = v277;
      sub_1007ACE5C(v221 + *(int *)(v278 + 20), v277, type metadata accessor for CRLWPStorageCRDTData);
      sub_1007ACDA0(v221, type metadata accessor for CRLWPShapeItemCRDTData);
      uint64_t v223 = v279;
      uint64_t v224 = v280;
      v262(v279, v222, v280);
      sub_1007ACDA0(v222, type metadata accessor for CRLWPStorageCRDTData);
      uint64_t v225 = (uint64_t)v240;
      CRAttributedString.cursor(range:)();
      v266(v223, v224);
      v254((char *)v225, 0, 1, v255);
      sub_1006063BC(v225, v218 + v275[5], &qword_1016801A0);
      ((void (*)(void *, void))v216)(aBlock, 0);
      goto LABEL_80;
    }
LABEL_103:
    __break(1u);
    goto LABEL_104;
  }
  ((void (*)(void *, void))v216)(aBlock, 0);
LABEL_80:
  char v226 = sub_1007A8F34();
  uint64_t v228 = v227;
  if (v219(v227, 1, v275))
  {
    ((void (*)(void *, void))v226)(aBlock, 0);
    goto LABEL_84;
  }
  uint64_t v229 = *(void *)&v274[v265];
  if (v229)
  {
    uint64_t v230 = (uint64_t)v264;
    (*(void (**)(void))(*(void *)v229 + 760))();
    uint64_t v231 = v277;
    sub_1007ACE5C(v230 + *(int *)(v278 + 20), v277, type metadata accessor for CRLWPStorageCRDTData);
    sub_1007ACDA0(v230, type metadata accessor for CRLWPShapeItemCRDTData);
    v232 = v279;
    uint64_t v233 = v280;
    v262(v279, v231, v280);
    sub_1007ACDA0(v231, type metadata accessor for CRLWPStorageCRDTData);
    uint64_t v234 = (uint64_t)v241;
    CRAttributedString.attributes(at:effectiveRange:)();
    v266(v232, v233);
    v239((char *)v234, 0, 1, v237);
    sub_1006063BC(v234, v228 + v275[7], &qword_1016801A8);
    ((void (*)(void *, void))v226)(aBlock, 0);
    goto LABEL_84;
  }
LABEL_104:
  __break(1u);
}

uint64_t sub_1007AAF00()
{
  uint64_t v1 = sub_1005057FC(&qword_101680260);
  __chkstk_darwin(v1 - 8, v2);
  uint64_t v4 = &v17[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v5, v6);
  uint64_t v8 = &v17[-v7];
  type metadata accessor for CRLWPReplaceTextCommand(0);
  uint64_t v9 = swift_dynamicCastClass();
  if (!v9
    || (uint64_t v10 = v9,
        *(void *)(v9 + OBJC_IVAR____TtC8Freeform23CRLWPReplaceTextCommand_shapeItem) != *(void *)(v0 + OBJC_IVAR____TtC8Freeform23CRLWPReplaceTextCommand_shapeItem)))
  {
    char v11 = 0;
    return v11 & 1;
  }
  uint64_t v12 = v0 + OBJC_IVAR____TtC8Freeform23CRLWPReplaceTextCommand_coalescingData;
  swift_beginAccess();
  sub_100522E9C(v12, (uint64_t)v8, &qword_101680260);
  uint64_t v13 = type metadata accessor for CRLWPReplaceTextCommand.CoalescingData(0);
  uint64_t v14 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
  uint64_t result = v14(v8, 1, v13);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    uint64_t v16 = v10 + OBJC_IVAR____TtC8Freeform23CRLWPReplaceTextCommand_coalescingData;
    swift_beginAccess();
    sub_100522E9C(v16, (uint64_t)v4, &qword_101680260);
    uint64_t result = v14(v4, 1, v13);
    if (result != 1)
    {
      char v11 = sub_1007A801C((void (*)(void, void, void))v4);
      sub_1007ACDA0((uint64_t)v4, type metadata accessor for CRLWPReplaceTextCommand.CoalescingData);
      sub_1007ACDA0((uint64_t)v8, type metadata accessor for CRLWPReplaceTextCommand.CoalescingData);
      return v11 & 1;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1007AB284()
{
  sub_100522F00(v0 + OBJC_IVAR____TtC8Freeform23CRLWPReplaceTextCommand_coalescingData, &qword_101680260);

  return sub_100522F00(v0 + OBJC_IVAR____TtC8Freeform23CRLWPReplaceTextCommand_replacement, &qword_101680258);
}

id sub_1007AB2D8()
{
  v2.id receiver = v0;
  v2.Class super_class = (Class)type metadata accessor for CRLWPReplaceTextCommand(0);
  return [super dealloc];
}

uint64_t sub_1007AB370()
{
  return type metadata accessor for CRLWPReplaceTextCommand(0);
}

uint64_t type metadata accessor for CRLWPReplaceTextCommand(uint64_t a1)
{
  return sub_100512D5C(a1, (uint64_t *)&unk_101680178);
}

void sub_1007AB398()
{
  sub_1007AB504();
  if (v1 <= 0x3F)
  {
    uint64_t v5 = *(void *)(v0 - 8) + 64;
    uint64_t v6 = (char *)&value witness table for Builtin.UnknownObject + 64;
    sub_10060636C(319, &qword_101680190, (uint64_t *)&unk_101683740);
    if (v2 <= 0x3F)
    {
      sub_10060636C(319, &qword_101680198, &qword_101687A90);
      if (v3 <= 0x3F)
      {
        swift_getTupleTypeLayout();
        uint64_t v7 = &v4;
        swift_updateClassMetadata2();
      }
    }
  }
}

void sub_1007AB504()
{
  if (!qword_101680188)
  {
    type metadata accessor for CRLWPReplaceTextCommand.CoalescingData(255);
    unint64_t v0 = type metadata accessor for Optional();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_101680188);
    }
  }
}

uint64_t type metadata accessor for CRLWPReplaceTextCommand.CoalescingData(uint64_t a1)
{
  return sub_100512D5C(a1, (uint64_t *)&unk_101680208);
}

id sub_1007AB580(void *a1, uint64_t a2, char a3)
{
  if (a3) {
    return a1;
  }
  else {
    return (id)swift_bridgeObjectRetain();
  }
}

void destroy for CRLWPReplaceTextCommand.ReplacementText(uint64_t a1)
{
}

void sub_1007AB5A0(void *a1, uint64_t a2, char a3)
{
  if (a3) {

  }
  else {
    swift_bridgeObjectRelease();
  }
}

uint64_t _s8Freeform23CRLWPReplaceTextCommandC15ReplacementTextOwCP_0(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void **)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_1007AB580(*(void **)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for CRLWPReplaceTextCommand.ReplacementText(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void **)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_1007AB580(*(void **)a2, v4, v5);
  uint64_t v6 = *(void **)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  char v8 = *(unsigned char *)(a1 + 16);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  sub_1007AB5A0(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for CRLWPReplaceTextCommand.ReplacementText(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void **)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  char v6 = *(unsigned char *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = v3;
  sub_1007AB5A0(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for CRLWPReplaceTextCommand.ReplacementText(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 1) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for CRLWPReplaceTextCommand.ReplacementText(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)uint64_t result = a2 - 255;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1007AB728(uint64_t result, char a2)
{
  *(unsigned char *)(result + 16) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for CRLWPReplaceTextCommand.ReplacementText()
{
  return &type metadata for CRLWPReplaceTextCommand.ReplacementText;
}

void **sub_1007AB744(void **a1, void **a2, int *a3)
{
  int v4 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  uint64_t v5 = (char *)*a2;
  *a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = (void **)&v5[(v4 + 16) & ~(unint64_t)v4];
    swift_retain();
  }
  else
  {
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    char v11 = v5;
    uint64_t v12 = sub_1005057FC(qword_101675B88);
    uint64_t v13 = *(void *)(v12 - 8);
    uint64_t v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
    if (v14(v10, 1, v12))
    {
      uint64_t v15 = sub_1005057FC(&qword_1016801A0);
      memcpy(v9, v10, *(void *)(*(void *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v9, v10, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v9, 0, 1, v12);
    }
    uint64_t v16 = a3[6];
    uint64_t v17 = (char *)a1 + v16;
    uint64_t v18 = (char *)a2 + v16;
    if (v14((char *)a2 + v16, 1, v12))
    {
      uint64_t v19 = sub_1005057FC(&qword_1016801A0);
      memcpy(v17, v18, *(void *)(*(void *)(v19 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v17, v18, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v17, 0, 1, v12);
    }
    uint64_t v20 = a3[7];
    uint64_t v21 = (char *)a1 + v20;
    uint64_t v22 = (char *)a2 + v20;
    uint64_t v23 = sub_1005057FC((uint64_t *)&unk_1016836C0);
    uint64_t v24 = *(void *)(v23 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23))
    {
      uint64_t v25 = sub_1005057FC(&qword_1016801A8);
      memcpy(v21, v22, *(void *)(*(void *)(v25 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v24 + 16))(v21, v22, v23);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
    }
  }
  return a1;
}

uint64_t sub_1007ABA4C(id *a1, int *a2)
{
  int v4 = (char *)a1 + a2[5];
  uint64_t v5 = sub_1005057FC(qword_101675B88);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48);
  if (!v7(v4, 1, v5)) {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v4, v5);
  }
  uint64_t v8 = (char *)a1 + a2[6];
  if (!v7(v8, 1, v5)) {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  uint64_t v9 = (char *)a1 + a2[7];
  uint64_t v10 = sub_1005057FC((uint64_t *)&unk_1016836C0);
  uint64_t v13 = *(void *)(v10 - 8);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48))(v9, 1, v10);
  if (!result)
  {
    uint64_t v12 = *(uint64_t (**)(char *, uint64_t))(v13 + 8);
    return v12(v9, v10);
  }
  return result;
}

void **sub_1007ABC18(void **a1, void **a2, int *a3)
{
  uint64_t v6 = *a2;
  *a1 = *a2;
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  id v10 = v6;
  uint64_t v11 = sub_1005057FC(qword_101675B88);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
  if (v13(v9, 1, v11))
  {
    uint64_t v14 = sub_1005057FC(&qword_1016801A0);
    memcpy(v8, v9, *(void *)(*(void *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v8, v9, v11);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v8, 0, 1, v11);
  }
  uint64_t v15 = a3[6];
  uint64_t v16 = (char *)a1 + v15;
  uint64_t v17 = (char *)a2 + v15;
  if (v13((char *)a2 + v15, 1, v11))
  {
    uint64_t v18 = sub_1005057FC(&qword_1016801A0);
    memcpy(v16, v17, *(void *)(*(void *)(v18 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v16, v17, v11);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v16, 0, 1, v11);
  }
  uint64_t v19 = a3[7];
  uint64_t v20 = (char *)a1 + v19;
  uint64_t v21 = (char *)a2 + v19;
  uint64_t v22 = sub_1005057FC((uint64_t *)&unk_1016836C0);
  uint64_t v23 = *(void *)(v22 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22))
  {
    uint64_t v24 = sub_1005057FC(&qword_1016801A8);
    memcpy(v20, v21, *(void *)(*(void *)(v24 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v23 + 16))(v20, v21, v22);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
  }
  return a1;
}

void **sub_1007ABED8(void **a1, void **a2, int *a3)
{
  uint64_t v6 = *a2;
  uint64_t v7 = *a1;
  *a1 = *a2;
  id v8 = v6;

  uint64_t v9 = a3[5];
  id v10 = (char *)a1 + v9;
  uint64_t v11 = (char *)a2 + v9;
  uint64_t v12 = sub_1005057FC(qword_101675B88);
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48);
  int v15 = v14(v10, 1, v12);
  int v16 = v14(v11, 1, v12);
  if (v15)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v10, v11, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v16)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v10, v12);
LABEL_6:
    uint64_t v17 = sub_1005057FC(&qword_1016801A0);
    memcpy(v10, v11, *(void *)(*(void *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v13 + 24))(v10, v11, v12);
LABEL_7:
  uint64_t v18 = a3[6];
  uint64_t v19 = (char *)a1 + v18;
  uint64_t v20 = (char *)a2 + v18;
  int v21 = v14((char *)a1 + v18, 1, v12);
  int v22 = v14(v20, 1, v12);
  if (v21)
  {
    if (!v22)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v19, v20, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v19, 0, 1, v12);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v22)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v19, v12);
LABEL_12:
    uint64_t v23 = sub_1005057FC(&qword_1016801A0);
    memcpy(v19, v20, *(void *)(*(void *)(v23 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v13 + 24))(v19, v20, v12);
LABEL_13:
  uint64_t v24 = a3[7];
  uint64_t v25 = (char *)a1 + v24;
  uint64_t v26 = (char *)a2 + v24;
  uint64_t v27 = sub_1005057FC((uint64_t *)&unk_1016836C0);
  uint64_t v28 = *(void *)(v27 - 8);
  uint64_t v29 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v28 + 48);
  int v30 = v29(v25, 1, v27);
  int v31 = v29(v26, 1, v27);
  if (!v30)
  {
    if (!v31)
    {
      (*(void (**)(char *, char *, uint64_t))(v28 + 24))(v25, v26, v27);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v28 + 8))(v25, v27);
    goto LABEL_18;
  }
  if (v31)
  {
LABEL_18:
    uint64_t v32 = sub_1005057FC(&qword_1016801A8);
    memcpy(v25, v26, *(void *)(*(void *)(v32 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v28 + 16))(v25, v26, v27);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v28 + 56))(v25, 0, 1, v27);
  return a1;
}

void *sub_1007AC2B8(void *a1, char *a2, int *a3)
{
  *a1 = *(void *)a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  id v8 = &a2[v6];
  uint64_t v9 = sub_1005057FC(qword_101675B88);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
  if (v11(v8, 1, v9))
  {
    uint64_t v12 = sub_1005057FC(&qword_1016801A0);
    memcpy(v7, v8, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  uint64_t v13 = a3[6];
  uint64_t v14 = (char *)a1 + v13;
  int v15 = &a2[v13];
  if (v11(&a2[v13], 1, v9))
  {
    uint64_t v16 = sub_1005057FC(&qword_1016801A0);
    memcpy(v14, v15, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v14, v15, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v14, 0, 1, v9);
  }
  uint64_t v17 = a3[7];
  uint64_t v18 = (char *)a1 + v17;
  uint64_t v19 = &a2[v17];
  uint64_t v20 = sub_1005057FC((uint64_t *)&unk_1016836C0);
  uint64_t v21 = *(void *)(v20 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
  {
    uint64_t v22 = sub_1005057FC(&qword_1016801A8);
    memcpy(v18, v19, *(void *)(*(void *)(v22 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v18, v19, v20);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
  }
  return a1;
}

void **sub_1007AC574(void **a1, void **a2, int *a3)
{
  uint64_t v6 = *a1;
  *a1 = *a2;

  uint64_t v7 = a3[5];
  id v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1005057FC(qword_101675B88);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (v13)
  {
    if (!v14)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v14)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v8, v10);
LABEL_6:
    uint64_t v15 = sub_1005057FC(&qword_1016801A0);
    memcpy(v8, v9, *(void *)(*(void *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v8, v9, v10);
LABEL_7:
  uint64_t v16 = a3[6];
  uint64_t v17 = (char *)a1 + v16;
  uint64_t v18 = (char *)a2 + v16;
  int v19 = v12((char *)a1 + v16, 1, v10);
  int v20 = v12(v18, 1, v10);
  if (v19)
  {
    if (!v20)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v17, v18, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v17, 0, 1, v10);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v20)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v17, v10);
LABEL_12:
    uint64_t v21 = sub_1005057FC(&qword_1016801A0);
    memcpy(v17, v18, *(void *)(*(void *)(v21 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v17, v18, v10);
LABEL_13:
  uint64_t v22 = a3[7];
  uint64_t v23 = (char *)a1 + v22;
  uint64_t v24 = (char *)a2 + v22;
  uint64_t v25 = sub_1005057FC((uint64_t *)&unk_1016836C0);
  uint64_t v26 = *(void *)(v25 - 8);
  uint64_t v27 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v26 + 48);
  int v28 = v27(v23, 1, v25);
  int v29 = v27(v24, 1, v25);
  if (!v28)
  {
    if (!v29)
    {
      (*(void (**)(char *, char *, uint64_t))(v26 + 40))(v23, v24, v25);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v26 + 8))(v23, v25);
    goto LABEL_18;
  }
  if (v29)
  {
LABEL_18:
    uint64_t v30 = sub_1005057FC(&qword_1016801A8);
    memcpy(v23, v24, *(void *)(*(void *)(v30 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v26 + 32))(v23, v24, v25);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
  return a1;
}

uint64_t sub_1007AC950(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1007AC964);
}

uint64_t sub_1007AC964(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_1005057FC(&qword_1016801A0);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = (char *)a1 + *(int *)(a3 + 20);
      uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_1005057FC(&qword_1016801A8);
      int v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = (char *)a1 + *(int *)(a3 + 28);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t sub_1007ACA98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1007ACAAC);
}

void *sub_1007ACAAC(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v8 = sub_1005057FC(&qword_1016801A0);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = (char *)v5 + *(int *)(a4 + 20);
      uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return (void *)v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_1005057FC(&qword_1016801A8);
      int v14 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = (char *)v5 + *(int *)(a4 + 28);
      return (void *)v14(v16, a2, a2, v15);
    }
  }
  return result;
}

void sub_1007ACBE0()
{
  sub_10060636C(319, &qword_101680218, qword_101675B88);
  if (v0 <= 0x3F)
  {
    sub_10060636C(319, (unint64_t *)&unk_101680220, (uint64_t *)&unk_1016836C0);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t sub_1007ACCD8()
{
  id v0 = [self mainBundle];
  NSString v1 = String._bridgeToObjectiveC()();
  NSString v2 = String._bridgeToObjectiveC()();
  id v3 = [v0 localizedStringForKey:v1 value:v2 table:0];

  uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  return v4;
}

uint64_t sub_1007ACDA0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_1007ACE00()
{
  unint64_t result = qword_101680270;
  if (!qword_101680270)
  {
    sub_100522D34((uint64_t *)&unk_1016836C0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101680270);
  }
  return result;
}

uint64_t sub_1007ACE5C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1007ACEC4()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1007ACED4()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1007ACEE4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1007ACEF4()
{
  return swift_release();
}

void sub_1007ACF04(char *a1)
{
  swift_beginAccess();
  uint64_t v2 = *(void *)(v1 + 24);
  uint64_t v26 = v2 + 64;
  uint64_t v3 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v4 = -1;
  if (v3 < 64) {
    uint64_t v4 = ~(-1 << v3);
  }
  unint64_t v5 = v4 & *(void *)(v2 + 64);
  int64_t v27 = (unint64_t)(v3 + 63) >> 6;
  swift_bridgeObjectRetain_n();
  int64_t v6 = 0;
  while (1)
  {
    if (v5)
    {
      unint64_t v8 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      unint64_t v9 = v8 | (v6 << 6);
    }
    else
    {
      int64_t v10 = v6 + 1;
      if (__OFADD__(v6, 1)) {
        goto LABEL_39;
      }
      if (v10 >= v27)
      {
LABEL_35:
        swift_release();
        swift_bridgeObjectRelease();
        return;
      }
      unint64_t v11 = *(void *)(v26 + 8 * v10);
      ++v6;
      if (!v11)
      {
        int64_t v6 = v10 + 1;
        if (v10 + 1 >= v27) {
          goto LABEL_35;
        }
        unint64_t v11 = *(void *)(v26 + 8 * v6);
        if (!v11)
        {
          int64_t v6 = v10 + 2;
          if (v10 + 2 >= v27) {
            goto LABEL_35;
          }
          unint64_t v11 = *(void *)(v26 + 8 * v6);
          if (!v11)
          {
            int64_t v6 = v10 + 3;
            if (v10 + 3 >= v27) {
              goto LABEL_35;
            }
            unint64_t v11 = *(void *)(v26 + 8 * v6);
            if (!v11)
            {
              int64_t v6 = v10 + 4;
              if (v10 + 4 >= v27) {
                goto LABEL_35;
              }
              unint64_t v11 = *(void *)(v26 + 8 * v6);
              if (!v11)
              {
                int64_t v12 = v10 + 5;
                if (v12 >= v27) {
                  goto LABEL_35;
                }
                unint64_t v11 = *(void *)(v26 + 8 * v12);
                if (!v11)
                {
                  while (1)
                  {
                    int64_t v6 = v12 + 1;
                    if (__OFADD__(v12, 1)) {
                      goto LABEL_41;
                    }
                    if (v6 >= v27) {
                      goto LABEL_35;
                    }
                    unint64_t v11 = *(void *)(v26 + 8 * v6);
                    ++v12;
                    if (v11) {
                      goto LABEL_25;
                    }
                  }
                }
                int64_t v6 = v12;
              }
            }
          }
        }
      }
LABEL_25:
      unint64_t v5 = (v11 - 1) & v11;
      unint64_t v9 = __clz(__rbit64(v11)) + (v6 << 6);
    }
    uint64_t v13 = *(void *)(v2 + 56) + 48 * v9;
    int v14 = *(void **)v13;
    uint64_t v15 = *(void **)(v13 + 8);
    sub_1007ADDEC();
    ObjCClassFromMetadatdouble a = swift_getObjCClassFromMetadata();
    swift_bridgeObjectRetain();
    id v17 = v14;
    swift_bridgeObjectRetain();
    id v18 = v15;
    id v19 = [v17 mostSpecificSelectionOfClass:ObjCClassFromMetadata];
    if (!v19)
    {
      uint64_t v7 = v17;
      goto LABEL_5;
    }
    uint64_t v7 = v19;
    self;
    int v20 = (void *)swift_dynamicCastObjCClass();
    if (!v20)
    {

      id v18 = v17;
      goto LABEL_5;
    }
    uint64_t v21 = v2;
    uint64_t v22 = (char *)[v20 range];
    int64_t v24 = v23;

    if ((uint64_t)v22 <= (uint64_t)a1)
    {
      if (__OFSUB__(a1, v22)) {
        goto LABEL_40;
      }
      if (a1 - v22 < v24)
      {
LABEL_36:
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        return;
      }
    }
    if (__OFADD__(v22, v24)) {
      break;
    }
    if (&v22[v24] == a1) {
      goto LABEL_36;
    }
    uint64_t v7 = v17;
    uint64_t v2 = v21;
LABEL_5:

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  __break(1u);
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
}

void sub_1007AD2CC(uint64_t a1, uint64_t a2, void **a3)
{
  uint64_t v7 = type metadata accessor for UUID();
  uint64_t v85 = *(void (***)(char *, uint64_t, char *))(v7 - 8);
  __chkstk_darwin(v7, v8);
  int64_t v10 = (char *)&v71 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11, v12);
  int v14 = (char *)&v71 - v13;
  uint64_t v90 = (void *)sub_1005057FC(&qword_101687AE0);
  uint64_t v89 = *(v90 - 1);
  __chkstk_darwin(v90, v15);
  uint64_t v88 = (char *)&v71 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v86 = type metadata accessor for CRLWPShapeItemCRDTData(0);
  __chkstk_darwin(v86, v17);
  id v19 = (char *)&v71 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = type metadata accessor for CRLWPStorageCRDTData(0);
  __chkstk_darwin(v20 - 8, v21);
  uint64_t v87 = (uint64_t)&v71 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v84 = (uint64_t *)(a2 + 24);
  swift_beginAccess();
  uint64_t v23 = *(void *)(a2 + 24);
  if (!*(void *)(v23 + 16)) {
    return;
  }
  swift_bridgeObjectRetain();
  uint64_t v82 = a1;
  unint64_t v24 = sub_100955FC8(a1);
  if ((v25 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    return;
  }
  uint64_t v77 = v14;
  BOOL v79 = v10;
  uint64_t v76 = a3;
  uint64_t v80 = (char *)v7;
  uint64_t v83 = v3;
  uint64_t v26 = *(void *)(v23 + 56) + 48 * v24;
  int64_t v27 = *(void **)v26;
  int v28 = *(void **)(v26 + 8);
  uint64_t v29 = *(void *)(v26 + 16);
  uint64_t v30 = *(void **)(v26 + 24);
  uint64_t v31 = *(void *)(v26 + 40);
  uint64_t v78 = *(void *)(v26 + 32);
  swift_bridgeObjectRetain();
  id v32 = v27;
  swift_bridgeObjectRetain();
  id v33 = v28;
  swift_bridgeObjectRelease();
  if (!v28)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    return;
  }
  uint64_t v81 = v31;
  id v34 = v33;
  id v35 = sub_10060A4AC((uint64_t)v34);
  if (!v30)
  {
    swift_bridgeObjectRelease();

    return;
  }
  uint64_t v75 = v29;
  sub_1007ADDEC();
  ObjCClassFromMetadatdouble a = swift_getObjCClassFromMetadata();
  swift_bridgeObjectRetain();
  id v37 = [v35 mostSpecificSelectionOfClass:ObjCClassFromMetadata];
  if (!v37)
  {

    swift_bridgeObjectRelease();
LABEL_19:
    swift_bridgeObjectRelease_n();

    return;
  }
  uint64_t v38 = v37;
  uint64_t v74 = v30;
  self;
  uint64_t v39 = swift_dynamicCastObjCClass();
  if (!v39)
  {

    swift_bridgeObjectRelease();
    goto LABEL_19;
  }
  uint64_t v40 = (void *)v39;
  id v73 = v38;
  uint64_t v41 = *(id *)(a2 + 32);
  uint64_t v42 = (void (**)(char *, uint64_t, char *))[v40 range];
  id v43 = [v40 range];
  BOOL v45 = __OFADD__(v43, v44);
  uint64_t v46 = (uint64_t)v43 + v44;
  if (v45)
  {
    __break(1u);
  }
  else if (v46 >= (uint64_t)v42)
  {
    id v72 = v34;
    sub_10090059C((uint64_t)v42, v46, &v91);

    uint64_t v47 = v91;
    uint64_t v48 = *(void *)&v91[OBJC_IVAR____TtC8Freeform12CRLWPStorage_shapeItemData];
    if (v48)
    {
      id v71 = v35;
      (*(void (**)(void))(*(void *)v48 + 760))();
      uint64_t v49 = v87;
      sub_1005D3C94((uint64_t)&v19[*(int *)(v86 + 20)], v87);
      sub_1005D3CF8((uint64_t)v19, type metadata accessor for CRLWPShapeItemCRDTData);
      sub_1005057FC((uint64_t *)&unk_10167BC20);
      uint64_t v50 = v88;
      CRAttributedString.subscript.getter();
      sub_1005D3CF8(v49, type metadata accessor for CRLWPStorageCRDTData);
      uint64_t v51 = v90;
      uint64_t v52 = (void *)CRAttributedString.Substring.attributedString.getter();
      (*(void (**)(char *, void *))(v89 + 8))(v50, v51);
      id v53 = [v52 string];

      if (v53)
      {

        long long v94 = v92;
        uint64_t v95 = v93;
        sub_1006436E8((id *)&v94);
        uint64_t v54 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v56 = v55;

        uint64_t v57 = v75;
        id v19 = v80;
        uint64_t v42 = v85;
        uint64_t v30 = v72;
        uint64_t v90 = v32;
        uint64_t v58 = (uint64_t)v74;
        if (v54 == v75 && v74 == v56)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v59 = v58;
          uint64_t v60 = v57;
LABEL_21:
          uint64_t v62 = v30;
          uint64_t v63 = (uint64_t)v79;
          v42[2](v79, v82, v19);
          id v64 = v71;
          long long v96 = (unint64_t)v71;
          uint64_t v97 = v60;
          uint64_t v98 = v59;
          uint64_t v99 = v78;
          uint64_t v100 = v81;
          uint64_t v65 = v84;
          swift_beginAccess();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          id v66 = v64;
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v101 = *v65;
          uint64_t *v65 = 0x8000000000000000;
          sub_1009761D8(&v96, v63, isUniquelyReferenced_nonNull_native);
          uint64_t *v65 = v101;
          swift_bridgeObjectRelease();
          ((void (*)(uint64_t, char *))v42[1])(v63, v19);
          swift_endAccess();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();

          return;
        }
        uint64_t v60 = v75;
        char v61 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v59 = v58;
        if (v61) {
          goto LABEL_21;
        }
        v42[2](v77, v82, v19);
        uint64_t v40 = v76;
        uint64_t v41 = *v76;
        char v68 = swift_isUniquelyReferenced_nonNull_native();
        *uint64_t v40 = v41;
        if (v68) {
          goto LABEL_24;
        }
        goto LABEL_29;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    return;
  }
  __break(1u);
LABEL_29:
  uint64_t v41 = (void *)sub_100F617D8(0, v41[2] + 1, 1, (unint64_t)v41);
  *uint64_t v40 = v41;
LABEL_24:
  unint64_t v70 = v41[2];
  unint64_t v69 = v41[3];
  if (v70 >= v69 >> 1)
  {
    uint64_t v41 = (void *)sub_100F617D8(v69 > 1, v70 + 1, 1, (unint64_t)v41);
    *uint64_t v76 = v41;
  }
  v41[2] = v70 + 1;
  v42[4]((char *)v41+ ((*((unsigned __int8 *)v42 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v42 + 80))+ (void)v42[9] * v70, (uint64_t)v77, v19);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
}

uint64_t sub_1007ADBD0()
{
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for CRLWPDictationAndAutocorrectionCoordinator()
{
  return self;
}

uint64_t destroy for SelectionData(id *a1)
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for SelectionData(void *a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  uint64_t v4 = *(void **)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v4;
  uint64_t v5 = *(void *)(a2 + 24);
  a1[2] = *(void *)(a2 + 16);
  a1[3] = v5;
  uint64_t v6 = *(void *)(a2 + 40);
  a1[4] = *(void *)(a2 + 32);
  a1[5] = v6;
  id v7 = v3;
  id v8 = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for SelectionData(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  uint64_t v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  id v7 = *(void **)(a1 + 8);
  id v8 = *(void **)(a2 + 8);
  *(void *)(a1 + 8) = v8;
  id v9 = v8;

  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for SelectionData(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;

  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for SelectionData()
{
  return &type metadata for SelectionData;
}

unint64_t sub_1007ADDEC()
{
  unint64_t result = qword_101683830;
  if (!qword_101683830)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_101683830);
  }
  return result;
}

uint64_t sub_1007ADE2C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UUID();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4, v6);
  uint64_t v49 = (char *)&v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8, v9);
  uint64_t v11 = (char *)&v47 - v10;
  uint64_t v12 = sub_1005057FC((uint64_t *)&unk_101674520);
  __chkstk_darwin(v12 - 8, v13);
  uint64_t v15 = (char *)&v47 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = *(void *)(a1 + 64);
  uint64_t v56 = a1 + 64;
  uint64_t v17 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v18 = -1;
  if (v17 < 64) {
    uint64_t v18 = ~(-1 << v17);
  }
  unint64_t v19 = v18 & v16;
  uint64_t v20 = (uint64_t *)(a2 + 24);
  swift_bridgeObjectRetain();
  uint64_t result = swift_beginAccess();
  int64_t v22 = 0;
  uint64_t v60 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56);
  uint64_t v59 = v5 + 48;
  int64_t v57 = (unint64_t)(v17 + 63) >> 6;
  uint64_t v58 = (void (**)(char *, char *, uint64_t))(v5 + 32);
  char v61 = (uint64_t (**)(char *, uint64_t))(v5 + 8);
  uint64_t v62 = v5 + 16;
  uint64_t v50 = a1;
  uint64_t v55 = v11;
  uint64_t v48 = v15;
  while (1)
  {
    if (v19)
    {
      unint64_t v23 = __clz(__rbit64(v19));
      v19 &= v19 - 1;
      int64_t v63 = v22;
      unint64_t v24 = v23 | (v22 << 6);
      goto LABEL_24;
    }
    int64_t v25 = v22 + 1;
    if (__OFADD__(v22, 1))
    {
      __break(1u);
      goto LABEL_31;
    }
    if (v25 >= v57) {
      goto LABEL_28;
    }
    unint64_t v26 = *(void *)(v56 + 8 * v25);
    int64_t v27 = v22 + 1;
    if (!v26)
    {
      int64_t v27 = v22 + 2;
      if (v22 + 2 >= v57) {
        goto LABEL_28;
      }
      unint64_t v26 = *(void *)(v56 + 8 * v27);
      if (!v26)
      {
        int64_t v27 = v22 + 3;
        if (v22 + 3 >= v57) {
          goto LABEL_28;
        }
        unint64_t v26 = *(void *)(v56 + 8 * v27);
        if (!v26)
        {
          int64_t v27 = v22 + 4;
          if (v22 + 4 >= v57) {
            goto LABEL_28;
          }
          unint64_t v26 = *(void *)(v56 + 8 * v27);
          if (!v26) {
            break;
          }
        }
      }
    }
LABEL_23:
    unint64_t v19 = (v26 - 1) & v26;
    int64_t v63 = v27;
    unint64_t v24 = __clz(__rbit64(v26)) + (v27 << 6);
LABEL_24:
    uint64_t v29 = *(void (**)(char *, unint64_t, uint64_t))(v5 + 16);
    v29(v15, *(void *)(a1 + 48) + *(void *)(v5 + 72) * v24, v4);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v5 + 56))(v15, 0, 1, v4);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v15, 1, v4) == 1) {
      return swift_release();
    }
    (*v58)(v11, v15, v4);
    uint64_t v30 = *v20;
    if (*(void *)(*v20 + 16))
    {
      swift_bridgeObjectRetain();
      unint64_t v31 = sub_100955FC8((uint64_t)v11);
      if (v32)
      {
        uint64_t v33 = *(void *)(v30 + 56) + 48 * v31;
        uint64_t v34 = v5;
        id v35 = *(void **)v33;
        uint64_t v36 = *(void **)(v33 + 8);
        uint64_t v37 = *(void *)(v33 + 24);
        uint64_t v53 = *(void *)(v33 + 16);
        uint64_t v51 = v37;
        uint64_t v38 = *(void *)(v33 + 40);
        uint64_t v52 = *(void *)(v33 + 32);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        id v39 = v35;
        id v40 = v36;
        uint64_t v5 = v34;
        id v54 = v40;
        swift_bridgeObjectRelease();
        uint64_t v41 = (uint64_t)v49;
        v29(v49, (unint64_t)v55, v4);
        id v42 = objc_allocWithZone((Class)type metadata accessor for CRLPersistableSelectionPath(0));
        id v43 = v39;
        sub_10064A0DC(v43);
        *(void *)&long long v64 = v43;
        *((void *)&v64 + 1) = v44;
        uint64_t v65 = v53;
        uint64_t v66 = v51;
        uint64_t v67 = v52;
        uint64_t v68 = v38;
        swift_beginAccess();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v69 = *v20;
        *uint64_t v20 = 0x8000000000000000;
        sub_1009761D8(&v64, v41, isUniquelyReferenced_nonNull_native);
        *uint64_t v20 = v69;
        swift_bridgeObjectRelease();
        uint64_t v46 = v41;
        uint64_t v15 = v48;
        (*v61)((char *)v46, v4);
        swift_endAccess();
        uint64_t v11 = v55;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        a1 = v50;
      }
      else
      {
        swift_bridgeObjectRelease();
      }
    }
    uint64_t result = (*v61)(v11, v4);
    int64_t v22 = v63;
  }
  uint64_t v28 = v22 + 5;
  if (v22 + 5 >= v57)
  {
LABEL_28:
    (*v60)(v15, 1, 1, v4);
    return swift_release();
  }
  unint64_t v26 = *(void *)(v56 + 8 * v28);
  if (v26)
  {
    int64_t v27 = v22 + 5;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v27 = v28 + 1;
    if (__OFADD__(v28, 1)) {
      break;
    }
    if (v27 >= v57) {
      goto LABEL_28;
    }
    unint64_t v26 = *(void *)(v56 + 8 * v27);
    ++v28;
    if (v26) {
      goto LABEL_23;
    }
  }
LABEL_31:
  __break(1u);
  return result;
}

uint64_t sub_1007AE390(uint64_t a1, uint64_t a2, void **a3)
{
  uint64_t v29 = a2;
  uint64_t v30 = a3;
  uint64_t v5 = type metadata accessor for UUID();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5, v7);
  uint64_t v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1005057FC((uint64_t *)&unk_101674520);
  __chkstk_darwin(v10 - 8, v11);
  uint64_t v13 = (char *)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = *(void *)(a1 + 64);
  uint64_t v27 = a1 + 64;
  uint64_t v15 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v16 = -1;
  if (v15 < 64) {
    uint64_t v16 = ~(-1 << v15);
  }
  unint64_t v17 = v16 & v14;
  int64_t v28 = (unint64_t)(v15 + 63) >> 6;
  uint64_t v32 = v6 + 16;
  uint64_t v33 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  uint64_t v31 = v6 + 48;
  uint64_t v18 = (void (**)(char *, uint64_t))(v6 + 8);
  uint64_t v34 = a1;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v20 = 0;
  if (!v17) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v21 = __clz(__rbit64(v17));
  v17 &= v17 - 1;
  for (unint64_t i = v21 | (v20 << 6); ; unint64_t i = __clz(__rbit64(v24)) + (v20 << 6))
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v6 + 16))(v13, *(void *)(v34 + 48) + *(void *)(v6 + 72) * i, v5);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56))(v13, 0, 1, v5);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v13, 1, v5) == 1) {
      return swift_release();
    }
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v9, v13, v5);
    sub_1007AD2CC((uint64_t)v9, v29, v30);
    if (v3)
    {
      (*v18)(v9, v5);
      return swift_release();
    }
    uint64_t result = ((uint64_t (*)(char *, uint64_t))*v18)(v9, v5);
    if (v17) {
      goto LABEL_4;
    }
LABEL_5:
    if (__OFADD__(v20++, 1)) {
      break;
    }
    if (v20 >= v28) {
      goto LABEL_27;
    }
    unint64_t v24 = *(void *)(v27 + 8 * v20);
    if (!v24)
    {
      int64_t v25 = v20 + 1;
      if (v20 + 1 >= v28) {
        goto LABEL_27;
      }
      unint64_t v24 = *(void *)(v27 + 8 * v25);
      if (v24) {
        goto LABEL_16;
      }
      int64_t v25 = v20 + 2;
      if (v20 + 2 >= v28) {
        goto LABEL_27;
      }
      unint64_t v24 = *(void *)(v27 + 8 * v25);
      if (v24) {
        goto LABEL_16;
      }
      int64_t v25 = v20 + 3;
      if (v20 + 3 >= v28) {
        goto LABEL_27;
      }
      unint64_t v24 = *(void *)(v27 + 8 * v25);
      if (v24)
      {
LABEL_16:
        int64_t v20 = v25;
        goto LABEL_17;
      }
      int64_t v25 = v20 + 4;
      if (v20 + 4 < v28)
      {
        unint64_t v24 = *(void *)(v27 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            int64_t v20 = v25 + 1;
            if (__OFADD__(v25, 1)) {
              goto LABEL_30;
            }
            if (v20 >= v28) {
              goto LABEL_27;
            }
            unint64_t v24 = *(void *)(v27 + 8 * v20);
            ++v25;
            if (v24) {
              goto LABEL_17;
            }
          }
        }
        goto LABEL_16;
      }
LABEL_27:
      (*v33)(v13, 1, 1, v5);
      return swift_release();
    }
LABEL_17:
    unint64_t v17 = (v24 - 1) & v24;
  }
  __break(1u);
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_1007AE710()
{
  uint64_t v1 = type metadata accessor for UUID();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1, v3);
  uint64_t v5 = (char *)v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1005057FC((uint64_t *)&unk_101674520);
  __chkstk_darwin(v6 - 8, v7);
  uint64_t v9 = (char *)v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = _swiftEmptyArrayStorage;
  uint64_t v10 = v0 + 24;
  swift_beginAccess();
  swift_retain();
  uint64_t v11 = swift_bridgeObjectRetain();
  sub_1007AE390(v11, v0, (void **)&v46);
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v12 = *((void *)v46 + 2);
  v31[2] = v46;
  if (v12)
  {
    uint64_t v14 = *(void (**)(char *, char *, uint64_t))(v2 + 16);
    uint64_t v13 = v2 + 16;
    uint64_t v15 = (char *)v46 + ((*(unsigned __int8 *)(v13 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 64));
    uint64_t v42 = *(void *)(v13 + 56);
    uint64_t v38 = (unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 32);
    uint64_t v34 = (void (**)(char *, char *, uint64_t))(v13 + 16);
    id v40 = v14;
    uint64_t v41 = (void (**)(int64_t, uint64_t))(v13 - 8);
    swift_bridgeObjectRetain_n();
    id v39 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 40);
    v31[1] = (v13 + 40) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
    uint64_t v36 = v9;
    uint64_t v37 = v13;
    id v35 = v5;
    id v43 = (uint64_t *)v10;
    while (1)
    {
      v40(v9, v15, v1);
      int64_t v20 = *v39;
      (*v39)(v9, 0, 1, v1);
      if ((*v38)(v9, 1, v1) == 1) {
        break;
      }
      uint64_t v33 = v20;
      uint64_t v44 = v12;
      (*v34)(v5, v9, v1);
      swift_beginAccess();
      swift_bridgeObjectRetain();
      unint64_t v21 = sub_100955FC8((uint64_t)v5);
      uint64_t v22 = v1;
      char v24 = v23;
      swift_bridgeObjectRelease();
      uint64_t v18 = 0;
      unint64_t v19 = 0;
      if (v24)
      {
        uint64_t v32 = v15;
        int64_t v25 = v21;
        uint64_t v26 = v43;
        int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v28 = *v26;
        uint64_t v45 = *v26;
        *uint64_t v26 = 0x8000000000000000;
        if (!isUniquelyReferenced_nonNull_native)
        {
          sub_100980EC0();
          uint64_t v28 = v45;
        }
        (*v41)(*(void *)(v28 + 48) + v25 * v42, v22);
        uint64_t v16 = v45;
        uint64_t v17 = *(void *)(v45 + 56) + 48 * v25;
        uint64_t v18 = *(void **)v17;
        unint64_t v19 = *(void **)(v17 + 8);
        sub_10058AAA4(v25, v45);
        *uint64_t v26 = v16;
        swift_bridgeObjectRelease();
        uint64_t v15 = v32;
      }
      swift_endAccess();
      sub_1007AEB10(v18, v19);
      uint64_t v5 = v35;
      (*v41)((int64_t)v35, v22);
      v15 += v42;
      uint64_t v12 = v44 - 1;
      uint64_t v1 = v22;
      uint64_t v9 = v36;
      if (v44 == 1)
      {
        v33(v36, 1, 1, v1);
        break;
      }
    }
  }
  else
  {
    uint64_t v29 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v2 + 56);
    swift_bridgeObjectRetain_n();
    v29(v9, 1, 1, v1);
  }
  swift_bridgeObjectRelease_n();
  return swift_bridgeObjectRelease();
}

void *sub_1007AEB10(void *result, void *a2)
{
  if (result)
  {

    swift_bridgeObjectRelease();
    return (void *)swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1007AEB6C()
{
  return RawRepresentable<>.init(from:)();
}

uint64_t sub_1007AEBCC()
{
  return RawRepresentable<>.encode(to:)();
}

uint64_t sub_1007AEC1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_1007B4584();
  unint64_t v7 = sub_1007B23E8();

  return CRValue<>.observableDifference(from:with:)(a1, a2, a3, v6, v7);
}

uint64_t sub_1007AEC8C()
{
  return CRValue<>.init(from:)();
}

uint64_t sub_1007AECF8()
{
  return CRValue<>.encode(to:)();
}

uint64_t sub_1007AED54(uint64_t a1)
{
  unint64_t v2 = sub_1007B4584();
  unint64_t v3 = sub_1007B1504();

  return CRValue<>.minEncodingVersion.getter(a1, v2, v3, &protocol witness table for Int);
}

uint64_t sub_1007AEDB8(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_1005057FC(&qword_101680618);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5, v7);
  uint64_t v9 = (char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10050F848(a1, a1[3]);
  sub_1007B2700();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  sub_10051B3EC(v3, (uint64_t)v14, &qword_1016803A8);
  sub_10051B3EC((uint64_t)v14, (uint64_t)&v13, &qword_1016803A8);
  char v12 = 0;
  sub_1005057FC(&qword_1016803A8);
  sub_1007B4474(&qword_101680620);
  KeyedEncodingContainer.encode<A>(_:forKey:)();
  if (!v2)
  {
    LOBYTE(v13) = 1;
    KeyedEncodingContainer.encode(_:forKey:)();
    LOBYTE(v13) = 2;
    KeyedEncodingContainer.encode(_:forKey:)();
    LOBYTE(v13) = 3;
    KeyedEncodingContainer.encode(_:forKey:)();
    uint64_t v13 = *(void *)(v3 + 24);
    char v12 = 4;
    sub_1005057FC((uint64_t *)&unk_101687A40);
    sub_1005573B0();
    KeyedEncodingContainer.encode<A>(_:forKey:)();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v5);
}

BOOL sub_1007AF010(char *a1, char *a2)
{
  return qword_10118F658[*a1] == qword_10118F658[*a2];
}

Swift::Int sub_1007AF034()
{
  uint64_t v1 = *v0;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(qword_10118F658[v1]);
  return Hasher._finalize()();
}

void sub_1007AF084()
{
  Hasher._combine(_:)(qword_10118F658[*v0]);
}

Swift::Int sub_1007AF0BC()
{
  uint64_t v1 = *v0;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(qword_10118F658[v1]);
  return Hasher._finalize()();
}

void sub_1007AF108(void *a1@<X8>)
{
  *a1 = qword_10118F658[*v1];
}

unint64_t sub_1007AF120()
{
  unint64_t result = 0x617053726F6C6F63;
  switch(*v0)
  {
    case 1:
      unint64_t result = 6579570;
      break;
    case 2:
      unint64_t result = 0x6E65657267;
      break;
    case 3:
      unint64_t result = 1702194274;
      break;
    case 4:
      unint64_t result = 0xD000000000000010;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1007AF1C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1007B3114(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1007AF1E8()
{
  return qword_10118F658[*v0];
}

void sub_1007AF200(void *a1@<X8>)
{
  *a1 = &off_1015030B0;
}

uint64_t sub_1007AF210(uint64_t a1, uint64_t a2)
{
  return sub_1007B0298(a1, a2, (uint64_t (*)(void))sub_1007B26A8, (uint64_t (*)(void))sub_1007B2700);
}

uint64_t sub_1007AF23C(uint64_t a1)
{
  unint64_t v2 = sub_1007B2700();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1007AF278(uint64_t a1)
{
  unint64_t v2 = sub_1007B2700();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1007AF2B4()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1007AF2BC(_OWORD *a1, _OWORD *a2)
{
  long long v2 = a1[1];
  v5[0] = *a1;
  v5[1] = v2;
  long long v3 = a2[1];
  v6[0] = *a2;
  v6[1] = v3;
  return sub_1007AEDB4(v5, v6) & 1;
}

double sub_1007AF2F8@<D0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  sub_1007B3314(a1, (uint64_t)v6);
  if (!v2)
  {
    double result = *(double *)v6;
    long long v5 = v6[1];
    *a2 = v6[0];
    a2[1] = v5;
  }
  return result;
}

uint64_t sub_1007AF334(void *a1)
{
  return sub_1007AEDB8(a1);
}

uint64_t sub_1007AF368(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_1007B44DC();

  return CRExtendableValueStruct.copy(renamingReferences:)(a1, a2, v4);
}

uint64_t sub_1007AF3BC(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_1007B44DC();

  return CRExtendableValueStruct.copy(renamingReferences:)(a1, a2, v4);
}

uint64_t sub_1007AF410(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_1007B24F0();
  unint64_t v7 = sub_1007B4530();

  return CRValue<>.observableDifference(from:with:)(a1, a2, a3, v6, v7);
}

uint64_t sub_1007AF480(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_1007B44DC();

  return CRExtendableValueStruct.visitReferences(_:)(a1, a2, v4);
}

uint64_t sub_1007AF4CC()
{
  return CRValueStruct.init(from:)();
}

uint64_t sub_1007AF51C()
{
  return CRValueStruct.encode(to:)();
}

uint64_t sub_1007AF564(uint64_t a1)
{
  unint64_t v2 = sub_1007B2830();

  return CRValueStruct.minEncodingVersion.getter(a1, v2);
}

uint64_t sub_1007AF5B0(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_1005057FC(&qword_1016805D0);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5, v7);
  uint64_t v9 = &v11[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10050F848(a1, a1[3]);
  sub_1007B2F90();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  char v16 = 0;
  KeyedEncodingContainer.encode(_:forKey:)();
  if (!v2)
  {
    char v15 = 1;
    KeyedEncodingContainer.encode(_:forKey:)();
    char v14 = 2;
    KeyedEncodingContainer.encode(_:forKey:)();
    char v13 = 3;
    KeyedEncodingContainer.encode(_:forKey:)();
    uint64_t v12 = *(void *)(v3 + 16);
    v11[15] = 4;
    sub_1005057FC((uint64_t *)&unk_101687A40);
    sub_1005573B0();
    KeyedEncodingContainer.encode<A>(_:forKey:)();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v9, v5);
}

unint64_t sub_1007AF7AC()
{
  unint64_t result = 1851881827;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x61746E6567616DLL;
      break;
    case 2:
      unint64_t result = 0x776F6C6C6579;
      break;
    case 3:
      unint64_t result = 7955819;
      break;
    case 4:
      unint64_t result = 0xD000000000000010;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1007AF848@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1007B35BC(a1, a2);
  *a3 = result;
  return result;
}

void sub_1007AF870(void *a1@<X8>)
{
  *a1 = &off_101503178;
}

uint64_t sub_1007AF880(uint64_t a1, uint64_t a2)
{
  return sub_1007B0298(a1, a2, (uint64_t (*)(void))sub_1007B2F38, (uint64_t (*)(void))sub_1007B2F90);
}

uint64_t sub_1007AF8AC(uint64_t a1)
{
  unint64_t v2 = sub_1007B2F90();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1007AF8E8(uint64_t a1)
{
  unint64_t v2 = sub_1007B2F90();

  return CodingKey.debugDescription.getter(a1, v2);
}

double sub_1007AF924@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1007B37B0(a1, (uint64_t)&v5);
  if (!v2)
  {
    double result = *(double *)&v5;
    *(_OWORD *)a2 = v5;
    *(void *)(a2 + 16) = v6;
  }
  return result;
}

uint64_t sub_1007AF968(void *a1)
{
  return sub_1007AF5B0(a1);
}

uint64_t sub_1007AF9A4(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_1007B4324();

  return CRExtendableValueStruct.copy(renamingReferences:)(a1, a2, v4);
}

uint64_t sub_1007AF9F8(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_1007B4324();

  return CRExtendableValueStruct.copy(renamingReferences:)(a1, a2, v4);
}

uint64_t sub_1007AFA4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_1007B2D80();
  unint64_t v7 = sub_1007B4378();

  return CRValue<>.observableDifference(from:with:)(a1, a2, a3, v6, v7);
}

uint64_t sub_1007AFABC(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_1007B4324();

  return CRExtendableValueStruct.visitReferences(_:)(a1, a2, v4);
}

uint64_t sub_1007AFB08()
{
  return CRValueStruct.init(from:)();
}

uint64_t sub_1007AFB58()
{
  return CRValueStruct.encode(to:)();
}

uint64_t sub_1007AFBA0(uint64_t a1)
{
  unint64_t v2 = sub_1007B30C0();

  return CRValueStruct.minEncodingVersion.getter(a1, v2);
}

uint64_t sub_1007AFBEC(void *a1, uint64_t a2)
{
  uint64_t v5 = sub_1005057FC(&qword_1016805F0);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5, v7);
  uint64_t v9 = (char *)v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10050F848(a1, a1[3]);
  sub_1007B2B48();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  char v13 = 0;
  KeyedEncodingContainer.encode(_:forKey:)();
  if (!v2)
  {
    v11[1] = a2;
    char v12 = 1;
    sub_1005057FC((uint64_t *)&unk_101687A40);
    sub_1005573B0();
    KeyedEncodingContainer.encode<A>(_:forKey:)();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v5);
}

uint64_t sub_1007AFD78()
{
  if (*v0) {
    return 0xD000000000000010;
  }
  else {
    return 0x6574696877;
  }
}

uint64_t sub_1007AFDB4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1007B3A0C(a1, a2);
  *a3 = result;
  return result;
}

void sub_1007AFDDC(void *a1@<X8>)
{
  *a1 = &off_101503488;
}

uint64_t sub_1007AFDEC(uint64_t a1, uint64_t a2)
{
  return sub_1007B0298(a1, a2, (uint64_t (*)(void))sub_1007B2AF0, (uint64_t (*)(void))sub_1007B2B48);
}

uint64_t sub_1007AFE18(uint64_t a1)
{
  unint64_t v2 = sub_1007B2B48();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1007AFE54(uint64_t a1)
{
  unint64_t v2 = sub_1007B2B48();

  return CodingKey.debugDescription.getter(a1, v2);
}

void *sub_1007AFE90@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = sub_1007B3AF4(a1);
  if (!v2)
  {
    *(_DWORD *)a2 = v5;
    *(void *)(a2 + 8) = result;
  }
  return result;
}

uint64_t sub_1007AFEC0(void *a1)
{
  return sub_1007AFBEC(a1, *(void *)(v1 + 8));
}

uint64_t sub_1007AFEE0(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_1007B43CC();

  return CRExtendableValueStruct.copy(renamingReferences:)(a1, a2, v4);
}

uint64_t sub_1007AFF34(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_1007B43CC();

  return CRExtendableValueStruct.copy(renamingReferences:)(a1, a2, v4);
}

uint64_t sub_1007AFF88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_1007B2938();
  unint64_t v7 = sub_1007B4420();

  return CRValue<>.observableDifference(from:with:)(a1, a2, a3, v6, v7);
}

uint64_t sub_1007AFFF8(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_1007B43CC();

  return CRExtendableValueStruct.visitReferences(_:)(a1, a2, v4);
}

uint64_t sub_1007B0044()
{
  return CRValueStruct.init(from:)();
}

uint64_t sub_1007B0094()
{
  return CRValueStruct.encode(to:)();
}

uint64_t sub_1007B00DC(uint64_t a1)
{
  unint64_t v2 = sub_1007B2C78();

  return CRValueStruct.minEncodingVersion.getter(a1, v2);
}

uint64_t sub_1007B0128@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_1007B3CC4(*a1);
  *a2 = result;
  return result;
}

unint64_t sub_1007B0154()
{
  unint64_t result = 0x6168706C61;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x61746144626772;
      break;
    case 2:
      unint64_t result = 0x617461446B796D63;
      break;
    case 3:
      unint64_t result = 0x6F7268636F6E6F6DLL;
      break;
    case 4:
      unint64_t result = 0xD000000000000010;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1007B020C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1007B3CEC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1007B0234@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_1007B3CC4(a1);
  *a2 = result;
  return result;
}

void sub_1007B025C(void *a1@<X8>)
{
  *a1 = &off_101502B78;
}

uint64_t sub_1007B026C(uint64_t a1, uint64_t a2)
{
  return sub_1007B0298(a1, a2, (uint64_t (*)(void))sub_1007B2100, (uint64_t (*)(void))sub_1007B2158);
}

uint64_t sub_1007B0298(uint64_t a1, uint64_t a2, uint64_t (*a3)(void), uint64_t (*a4)(void))
{
  uint64_t v7 = a3();
  uint64_t v8 = a4();

  return static CodingKey<>.intCases.getter(a1, a2, v7, v8);
}

uint64_t sub_1007B0304(uint64_t a1)
{
  unint64_t v2 = sub_1007B2158();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1007B0340(uint64_t a1)
{
  unint64_t v2 = sub_1007B2158();

  return CodingKey.debugDescription.getter(a1, v2);
}

void sub_1007B037C()
{
  if ((*(unsigned char *)(v0 + 4) & 1) == 0)
  {
    if ((*(_DWORD *)v0 & 0x7FFFFFFF) != 0) {
      Swift::UInt32 v1 = *(_DWORD *)v0;
    }
    else {
      Swift::UInt32 v1 = 0;
    }
    Hasher._combine(_:)(v1);
  }
  if (*(void *)(v0 + 32))
  {
    unint64_t v2 = *(void *)(v0 + 16);
    uint64_t v3 = *(void *)(v0 + 24);
    unint64_t v4 = HIDWORD(v2);
    uint64_t v5 = v2 & 0x7F80000000000000;
    if ((v4 & 0x7FFFFF) == 0 && v5 == 0) {
      Swift::UInt32 v7 = 0;
    }
    else {
      Swift::UInt32 v7 = v4;
    }
    Hasher._combine(_:)(v7);
    if ((v3 & 0x7FFFFF) == 0 && (v3 & 0x7F800000) == 0) {
      Swift::UInt32 v9 = 0;
    }
    else {
      Swift::UInt32 v9 = v3;
    }
    Hasher._combine(_:)(v9);
    if ((v3 & 0x7FFFFF00000000) == 0 && (v3 & 0x7F80000000000000) == 0) {
      Swift::UInt32 v11 = 0;
    }
    else {
      Swift::UInt32 v11 = HIDWORD(v3);
    }
    Hasher._combine(_:)(v11);
  }
  if (*(void *)(v0 + 56))
  {
    uint64_t v13 = *(void *)(v0 + 40);
    uint64_t v12 = *(void *)(v0 + 48);
    if ((v13 & 0x7FFFFF) == 0 && (*(void *)(v0 + 40) & 0x7F800000) == 0) {
      Swift::UInt32 v15 = 0;
    }
    else {
      Swift::UInt32 v15 = *(void *)(v0 + 40);
    }
    Hasher._combine(_:)(v15);
    if ((v13 & 0x7FFFFF00000000) == 0 && (v13 & 0x7F80000000000000) == 0) {
      Swift::UInt32 v17 = 0;
    }
    else {
      Swift::UInt32 v17 = HIDWORD(v13);
    }
    Hasher._combine(_:)(v17);
    if ((v12 & 0x7FFFFF) == 0 && (v12 & 0x7F800000) == 0) {
      Swift::UInt32 v19 = 0;
    }
    else {
      Swift::UInt32 v19 = v12;
    }
    Hasher._combine(_:)(v19);
    if ((v12 & 0x7FFFFF00000000) == 0 && (v12 & 0x7F80000000000000) == 0) {
      Swift::UInt32 v21 = 0;
    }
    else {
      Swift::UInt32 v21 = HIDWORD(v12);
    }
    Hasher._combine(_:)(v21);
  }
  if (*(void *)(v0 + 72))
  {
    if ((*(void *)(v0 + 64) & 0x7FFFFF) == 0 && (*(void *)(v0 + 64) & 0x7F800000) == 0) {
      Swift::UInt32 v23 = 0;
    }
    else {
      Swift::UInt32 v23 = *(void *)(v0 + 64);
    }
    Hasher._combine(_:)(v23);
  }
}

uint64_t sub_1007B04A0(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_1005057FC(&qword_1016805B8);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5, v7);
  Swift::UInt32 v9 = (char *)v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10050F848(a1, a1[3]);
  sub_1007B2158();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  char v10 = *(unsigned char *)(v3 + 4);
  LOBYTE(v12[0]) = 0;
  char v13 = v10;
  KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
  if (!v2)
  {
    sub_10051B3EC(v3 + 8, (uint64_t)v16, &qword_1016805C0);
    sub_10051B3EC((uint64_t)v16, (uint64_t)v12, &qword_1016805C0);
    char v13 = 1;
    sub_1007B25A0();
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
    sub_10051B3EC(v3 + 40, (uint64_t)v15, &qword_1016803C8);
    sub_10051B3EC((uint64_t)v15, (uint64_t)v12, &qword_1016803C8);
    char v13 = 2;
    sub_1007B2E30();
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
    sub_10051B3EC(v3 + 64, (uint64_t)v14, &qword_1016803C0);
    sub_10051B3EC((uint64_t)v14, (uint64_t)v12, &qword_1016803C0);
    char v13 = 3;
    sub_1007B29E8();
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
    v12[0] = *(void *)(v3 + 80);
    char v13 = 4;
    sub_1005057FC((uint64_t *)&unk_101687A40);
    sub_1005573B0();
    KeyedEncodingContainer.encode<A>(_:forKey:)();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v5);
}

uint64_t sub_1007B0754()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1007B075C(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 80) = a1;
  return result;
}

Freeform::SyncEvent::FetchedRecordZoneChanges::Deletion (__swiftcall *sub_1007B0788())(CKRecordID recordID, Swift::String recordType)
{
  return SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:);
}

Swift::Int sub_1007B07A8()
{
  return Hasher._finalize()();
}

Swift::Int sub_1007B07EC()
{
  return Hasher._finalize()();
}

uint64_t sub_1007B0828(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a1 + 48);
  _OWORD v7[2] = *(_OWORD *)(a1 + 32);
  v7[3] = v2;
  v7[4] = *(_OWORD *)(a1 + 64);
  uint64_t v8 = *(void *)(a1 + 80);
  long long v3 = *(_OWORD *)(a1 + 16);
  v7[0] = *(_OWORD *)a1;
  v7[1] = v3;
  long long v4 = *(_OWORD *)(a2 + 48);
  v9[2] = *(_OWORD *)(a2 + 32);
  void v9[3] = v4;
  v9[4] = *(_OWORD *)(a2 + 64);
  uint64_t v10 = *(void *)(a2 + 80);
  long long v5 = *(_OWORD *)(a2 + 16);
  v9[0] = *(_OWORD *)a2;
  v9[1] = v5;
  return sub_1007B049C(v7, v9) & 1;
}

double sub_1007B0894@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1007B3F24(a1, (uint64_t)v7);
  if (!v2)
  {
    long long v5 = v7[3];
    *(_OWORD *)(a2 + 32) = v7[2];
    *(_OWORD *)(a2 + 48) = v5;
    *(_OWORD *)(a2 + 64) = v7[4];
    *(void *)(a2 + 80) = v8;
    double result = *(double *)v7;
    long long v6 = v7[1];
    *(_OWORD *)a2 = v7[0];
    *(_OWORD *)(a2 + 16) = v6;
  }
  return result;
}

uint64_t sub_1007B08F0(void *a1)
{
  return sub_1007B04A0(a1);
}

uint64_t sub_1007B093C(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_1007B45D8();

  return CRExtendableValueStruct.copy(renamingReferences:)(a1, a2, v4);
}

uint64_t sub_1007B0990(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_1007B45D8();

  return CRExtendableValueStruct.copy(renamingReferences:)(a1, a2, v4);
}

uint64_t sub_1007B09E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_1007B1F48();
  unint64_t v7 = sub_1007B2288();

  return CRValue<>.observableDifference(from:with:)(a1, a2, a3, v6, v7);
}

uint64_t sub_1007B0A54(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_1007B45D8();

  return CRExtendableValueStruct.visitReferences(_:)(a1, a2, v4);
}

uint64_t sub_1007B0AA0()
{
  return CRValueStruct.init(from:)();
}

uint64_t sub_1007B0AF0()
{
  return CRValueStruct.encode(to:)();
}

uint64_t sub_1007B0B38(uint64_t a1)
{
  unint64_t v2 = sub_1007B22E0();

  return CRValueStruct.minEncodingVersion.getter(a1, v2);
}

CGColorSpace *sub_1007B0B84(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 4)) {
    float v3 = 1.0;
  }
  else {
    float v3 = *(float *)a1;
  }
  if (*(void *)(a1 + 32))
  {
    uint64_t v1 = *(void *)(a1 + 16);
    uint64_t v18 = *(void *)(a1 + 8);
    float v5 = *(float *)(a1 + 24);
    float v4 = *(float *)(a1 + 28);
    sub_10051B3EC(a1 + 40, (uint64_t)v20, &qword_1016803C8);
    sub_10051B3EC((uint64_t)v20, (uint64_t)v21, &qword_1016803C8);
    unint64_t v6 = &_swiftEmptyArrayStorage;
    if (v23
      || (sub_10051B3EC(a1 + 64, (uint64_t)v19, &qword_1016803C0),
          sub_10051B3EC((uint64_t)v19, (uint64_t)v24, &qword_1016803C0),
          v25))
    {
      swift_bridgeObjectRetain();
      sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"init(unarchiving:)", 18, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLUtility/CRLColorData.swift", 83, 2, 242, (uint64_t)"Should only have one kind of color model data per color data. Unarchiving RGB.", 78, 2u, (uint64_t)&_swiftEmptyArrayStorage);
      sub_1005598CC((uint64_t)&_swiftEmptyArrayStorage, (uint64_t)"init(unarchiving:)", 18, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLUtility/CRLColorData.swift", 83, 2, 242);
    }
    else
    {
      swift_bridgeObjectRetain();
    }
    sub_1007B1918(a1);
    if (v1) {
      goto LABEL_17;
    }
    if (v18)
    {
      double result = (CGColorSpace *)(id)sub_10000FDD8();
      if (result)
      {
        Swift::UInt32 v11 = result;
        uint64_t v12 = 1;
        goto LABEL_21;
      }
LABEL_34:
      __break(1u);
      goto LABEL_35;
    }
    double result = (CGColorSpace *)(id)sub_10000FD54();
    if (result)
    {
LABEL_18:
      Swift::UInt32 v11 = result;
      uint64_t v12 = 0;
LABEL_21:
      sub_1005057FC(&qword_1016803B8);
      unint64_t v6 = (void *)swift_allocObject();
      *((_OWORD *)v6 + 1) = xmmword_10117E800;
      *((double *)v6 + 4) = *((float *)&v1 + 1);
      *((double *)v6 + 5) = v5;
      swift_bridgeObjectRelease();
      *((double *)v6 + 6) = v4;
      *((double *)v6 + 7) = v3;
LABEL_25:
      CGColorRef v14 = CGColorCreate(v11, (const CGFloat *)v6 + 4);
      swift_bridgeObjectRelease();
      if (v14)
      {
        id v15 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) initWithCGColor:v14 colorSpace:v12];
      }
      else
      {
        sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"init(unarchiving:)", 18, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLUtility/CRLColorData.swift", 83, 2, 281, (uint64_t)"Unable to create CGColor from archived color space and components. Falling back to unarchiving black.", 101, 2u, (uint64_t)&_swiftEmptyArrayStorage);
        LOBYTE(v17) = 2;
        sub_1005598CC((uint64_t)&_swiftEmptyArrayStorage, (uint64_t)"init(unarchiving:)", 18, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLUtility/CRLColorData.swift", 83, 2, 281);
        id v15 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) initWithRed:0 green:0.0 blue:0.0 alpha:0.0 colorSpace:"Unable to create CGColor from archived color space and components. Falling back to unarchiving black."];
      }

      return (CGColorSpace *)v15;
    }
    __break(1u);
  }
  if (*(void *)(a1 + 56))
  {
    float v8 = *(float *)(a1 + 40);
    float v5 = *(float *)(a1 + 44);
    float v9 = *(float *)(a1 + 48);
    float v4 = *(float *)(a1 + 52);
    sub_10051B3EC(a1 + 64, (uint64_t)v20, &qword_1016803C0);
    sub_10051B3EC((uint64_t)v20, (uint64_t)v21, &qword_1016803C0);
    uint64_t v10 = v22;
    swift_bridgeObjectRetain();
    if (v10)
    {
      HIDWORD(v1) = 0;
      sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"init(unarchiving:)", 18, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLUtility/CRLColorData.swift", 83, 2, 261, (uint64_t)"Should only have one kind of color model data per color data. Unarchiving CMYK.", 79, 2u, (uint64_t)&_swiftEmptyArrayStorage);
      sub_1005598CC((uint64_t)&_swiftEmptyArrayStorage, (uint64_t)"init(unarchiving:)", 18, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLUtility/CRLColorData.swift", 83, 2, 261);
    }
    sub_1007B1918(a1);
    sub_1005057FC(&qword_1016803B8);
    unint64_t v6 = (void *)swift_allocObject();
    *((_OWORD *)v6 + 1) = xmmword_10118E4B0;
    *((double *)v6 + 4) = v8;
    *((double *)v6 + 5) = v5;
    *((double *)v6 + 6) = v9;
    swift_bridgeObjectRelease();
    *((double *)v6 + 7) = v4;
    *((double *)v6 + 8) = v3;
    double result = (CGColorSpace *)(id)sub_10000FC8C();
    if (!result)
    {
      __break(1u);
LABEL_17:
      sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"init(unarchiving:)", 18, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLUtility/CRLColorData.swift", 83, 2, 254, (uint64_t)"Tried to decode unknown RGB color space value. Falling back to unarchiving sRGB.", 80, 2u, (uint64_t)v6);
      sub_1005598CC((uint64_t)v6, (uint64_t)"init(unarchiving:)", 18, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLUtility/CRLColorData.swift", 83, 2, 254);
      double result = (CGColorSpace *)(id)sub_10000FD54();
      if (result) {
        goto LABEL_18;
      }
      __break(1u);
      goto LABEL_34;
    }
LABEL_24:
    Swift::UInt32 v11 = result;
    uint64_t v12 = 2;
    goto LABEL_25;
  }
  if (*(void *)(a1 + 72))
  {
    float v13 = *(float *)(a1 + 64);
    swift_bridgeObjectRetain();
    sub_1007B1918(a1);
    sub_1005057FC(&qword_1016803B8);
    unint64_t v6 = (void *)swift_allocObject();
    *((_OWORD *)v6 + 1) = xmmword_10117D8C0;
    swift_bridgeObjectRelease();
    *((double *)v6 + 4) = v13;
    *((double *)v6 + 5) = v3;
    double result = (CGColorSpace *)(id)sub_10000FCF0();
    if (!result)
    {
LABEL_35:
      __break(1u);
      return result;
    }
    goto LABEL_24;
  }
  sub_1007B1918(a1);
  sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"init(unarchiving:)", 18, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLUtility/CRLColorData.swift", 83, 2, 275, (uint64_t)"Missing color model data. Falling back to unarchiving black.", 60, 2u, (uint64_t)&_swiftEmptyArrayStorage);
  sub_1005598CC((uint64_t)&_swiftEmptyArrayStorage, (uint64_t)"init(unarchiving:)", 18, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLUtility/CRLColorData.swift", 83, 2, 275);
  id v16 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());

  return (CGColorSpace *)[v16 initWithRed:0 green:0.0 blue:0.0 alpha:0.0 colorSpace:1.0];
}

uint64_t sub_1007B11EC(uint64_t a1, uint64_t a2)
{
  sub_10051B3EC(a1, (uint64_t)v9, &qword_1016803A8);
  sub_10051B3EC((uint64_t)v9, (uint64_t)v7, &qword_1016803A8);
  sub_10051B3EC(a2, (uint64_t)v8, &qword_1016803A8);
  sub_10051B3EC((uint64_t)v8, (uint64_t)&v6, &qword_1016803A8);
  sub_1007B1504();
  if ((static CRExtensible.== infix(_:_:)() & 1) != 0
    && *(float *)(a1 + 12) == *(float *)(a2 + 12)
    && *(float *)(a1 + 16) == *(float *)(a2 + 16)
    && *(float *)(a1 + 20) == *(float *)(a2 + 20))
  {
    char v4 = sub_100ED60AC(*(void *)(a1 + 24), *(void *)(a2 + 24));
  }
  else
  {
    char v4 = 0;
  }
  return v4 & 1;
}

uint64_t sub_1007B12DC(uint64_t a1, uint64_t a2)
{
  char v4 = *(unsigned char *)(a2 + 4);
  if (*(unsigned char *)(a1 + 4))
  {
    if (!*(unsigned char *)(a2 + 4)) {
      return 0;
    }
  }
  else
  {
    if (*(float *)a1 != *(float *)a2) {
      char v4 = 1;
    }
    if (v4) {
      return 0;
    }
  }
  uint64_t v5 = *(void *)(a1 + 32);
  uint64_t v6 = *(void *)(a2 + 32);
  if (v5)
  {
    if (!v6) {
      return 0;
    }
    uint64_t v7 = *(void *)(a1 + 16);
    uint64_t v8 = *(void *)(a2 + 8);
    uint64_t v9 = *(void *)(a2 + 16);
    uint64_t v10 = *(void *)(a2 + 24);
    uint64_t v11 = *(void *)(a1 + 24);
    uint64_t v23 = *(void *)(a1 + 8);
    char v24 = v7 & 1;
    int v25 = HIDWORD(v7);
    uint64_t v26 = v11;
    uint64_t v27 = v5;
    uint64_t v28 = v8;
    char v29 = v9 & 1;
    int v30 = HIDWORD(v9);
    uint64_t v31 = v10;
    uint64_t v32 = v6;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    char v12 = sub_1007B11EC((uint64_t)&v23, (uint64_t)&v28);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v12 & 1) == 0) {
      return 0;
    }
  }
  else if (v6)
  {
    return 0;
  }
  uint64_t v13 = *(void *)(a1 + 56);
  uint64_t v14 = *(void *)(a2 + 56);
  if (v13)
  {
    if (!v14) {
      return 0;
    }
    uint64_t v15 = *(void *)(a2 + 40);
    if (*(float *)(a1 + 40) != *(float *)&v15) {
      return 0;
    }
    if (*(float *)(a1 + 44) != *((float *)&v15 + 1)) {
      return 0;
    }
    if (*(float *)(a1 + 48) != COERCE_FLOAT(*(void *)(a2 + 48))) {
      return 0;
    }
    if (*(float *)(a1 + 52) != COERCE_FLOAT(HIDWORD(*(void *)(a2 + 48)))) {
      return 0;
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    char v16 = sub_100ED60AC(v13, v14);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v16 & 1) == 0) {
      return 0;
    }
  }
  else if (v14)
  {
    return 0;
  }
  uint64_t v18 = *(void *)(a2 + 72);
  if (!*(void *)(a1 + 72))
  {
    if (!v18) {
      goto LABEL_28;
    }
    return 0;
  }
  if (!v18) {
    return 0;
  }
  if (*(float *)(a1 + 64) != COERCE_FLOAT(*(void *)(a2 + 64))) {
    return 0;
  }
  swift_bridgeObjectRetain();
  uint64_t v19 = swift_bridgeObjectRetain();
  char v20 = sub_100ED60AC(v19, v18);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v20 & 1) == 0) {
    return 0;
  }
LABEL_28:
  uint64_t v21 = *(void *)(a1 + 80);
  uint64_t v22 = *(void *)(a2 + 80);

  return sub_100ED60AC(v21, v22);
}

unint64_t sub_1007B1504()
{
  unint64_t result = qword_1016803B0;
  if (!qword_1016803B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016803B0);
  }
  return result;
}

void sub_1007B1558(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>, int8x16_t a4@<Q2>)
{
  unint64_t v4 = a2;
  if (a2 >= 2)
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"init(archiving:colorRGBSpace:)", 30, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLUtility/CRLColorData.swift", 83, 2, 152, (uint64_t)"Color should be converted to RGB by the time it is archived. Falling back to archiving sRGB.", 92, 2u, (uint64_t)&_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)&_swiftEmptyArrayStorage, (uint64_t)"init(archiving:colorRGBSpace:)", 30, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLUtility/CRLColorData.swift", 83, 2, 152);
    unint64_t v4 = 0;
  }
  unint64_t v7 = *(void *)(a1 + 16);
  if (v7 >= 4)
  {
    double v8 = *(double *)(a1 + 56);
    BOOL v9 = sub_1007B18EC(v8);
    float v10 = v8;
    float v11 = v10;
    if (v9) {
      float v11 = 0.0;
    }
    goto LABEL_11;
  }
  if (!v7)
  {
    __break(1u);
    goto LABEL_13;
  }
  if (v7 == 1)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (v7 >= 3)
  {
    float v11 = 0.0;
    LOBYTE(v9) = 1;
LABEL_11:
    *(float *)&unsigned int v12 = *(double *)(a1 + 48);
    unint64_t v13 = (unint64_t)v12 << 32;
    *(float *)a3 = v11;
    *(unsigned char *)(a3 + 4) = v9;
    *(void *)(a3 + 8) = v4;
    int32x2_t v14 = (int32x2_t)vcvt_f32_f64(*(float64x2_t *)(a1 + 32));
    v15.i64[0] = v14.u32[0];
    v15.i64[1] = v14.u32[1];
    a4.i64[1] = v13;
    *(void *)&long long v16 = vshll_n_s32(v14, 0x20uLL).u64[0];
    *((void *)&v16 + 1) = vorrq_s8(a4, v15).i64[1];
    *(_OWORD *)(a3 + 16) = v16;
    *(void *)(a3 + 32) = &_swiftEmptyDictionarySingleton;
    *(_OWORD *)(a3 + 40) = 0u;
    *(_OWORD *)(a3 + 56) = 0u;
    *(void *)(a3 + 72) = 0;
    *(void *)(a3 + 80) = &_swiftEmptyDictionarySingleton;
    return;
  }
LABEL_14:
  __break(1u);
}

__n128 sub_1007B16EC@<Q0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t v4 = (CGColor *)[a1 CGColor];
  uint64_t v5 = CGColorGetColorSpace(v4);

  if (v5
    && (CGColorSpaceModel Model = CGColorSpaceGetModel(v5), v5, Model == kCGColorSpaceModelRGB)
    && (id v7 = [a1 CGColor],
        uint64_t v8 = CGColorRef.components.getter(),
        v7,
        v8))
  {
    id v9 = [a1 colorRGBSpace];
    sub_1007B1558(v8, (unint64_t)v9, (uint64_t)&v20, v10);

    swift_bridgeObjectRelease();
  }
  else
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"init(archiving:)", 16, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLUtility/CRLColorData.swift", 83, 2, 134, (uint64_t)"Asked to archive a CGColor that we can't handle. Falling back to archiving black.", 81, 2u, (uint64_t)&_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)&_swiftEmptyArrayStorage, (uint64_t)"init(archiving:)", 16, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLUtility/CRLColorData.swift", 83, 2, 134);
    sub_1005057FC(&qword_1016803B8);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_10117E800;
    *(void *)(inited + 32) = 0;
    *(void *)(inited + 40) = 0;
    *(void *)(inited + 48) = 0;
    *(void *)(inited + 56) = 0x3FF0000000000000;
    sub_1007B1558(inited, 0, (uint64_t)&v20, v12);
    swift_setDeallocating();
  }
  uint64_t v14 = v26;
  uint64_t v13 = v27;
  char v15 = v21;
  __n128 result = v22;
  long long v17 = v23;
  long long v18 = v24;
  long long v19 = v25;
  *(_DWORD *)a2 = v20;
  *(unsigned char *)(a2 + 4) = v15;
  *(__n128 *)(a2 + 8) = result;
  *(_OWORD *)(a2 + 24) = v17;
  *(_OWORD *)(a2 + 40) = v18;
  *(_OWORD *)(a2 + 56) = v19;
  *(void *)(a2 + 72) = v14;
  *(void *)(a2 + 80) = v13;
  return result;
}

BOOL sub_1007B18EC(double a1)
{
  return fabs(a1 + -1.0) < 0.000000999999997 || a1 == 1.0;
}

uint64_t sub_1007B1918(uint64_t a1)
{
  return a1;
}

ValueMetadata *type metadata accessor for CRLColorModelCMYKData()
{
  return &type metadata for CRLColorModelCMYKData;
}

ValueMetadata *type metadata accessor for CRLColorModelMonochromeData()
{
  return &type metadata for CRLColorModelMonochromeData;
}

uint64_t destroy for CRLColorModelRGBData()
{
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for CRLColorModelRGBData(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 12) = *(void *)(a2 + 12);
  *(_DWORD *)(a1 + 20) = *(_DWORD *)(a2 + 20);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for CRLColorModelRGBData(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
  *(void *)a1 = v3;
  *(_DWORD *)(a1 + 12) = *((_DWORD *)a2 + 3);
  *(_DWORD *)(a1 + 16) = *((_DWORD *)a2 + 4);
  *(_DWORD *)(a1 + 20) = *((_DWORD *)a2 + 5);
  *(void *)(a1 + 24) = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for CRLColorModelRGBData(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 12) = *(void *)(a2 + 12);
  *(_DWORD *)(a1 + 20) = *(_DWORD *)(a2 + 20);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for CRLColorModelRGBData(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 32)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CRLColorModelRGBData(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLColorModelRGBData()
{
  return &type metadata for CRLColorModelRGBData;
}

ValueMetadata *type metadata accessor for CRLColorModelRGBData.ColorSpace()
{
  return &type metadata for CRLColorModelRGBData.ColorSpace;
}

uint64_t destroy for CRLColorData()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for CRLColorData(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(unsigned char *)(a1 + 4) = *(unsigned char *)(a2 + 4);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 20) = *(void *)(a2 + 20);
  *(_DWORD *)(a1 + 28) = *(_DWORD *)(a2 + 28);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(_DWORD *)(a1 + 64) = *(_DWORD *)(a2 + 64);
  uint64_t v3 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for CRLColorData(uint64_t a1, int *a2)
{
  int v4 = *a2;
  *(unsigned char *)(a1 + 4) = *((unsigned char *)a2 + 4);
  *(_DWORD *)a1 = v4;
  uint64_t v5 = *((void *)a2 + 1);
  *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
  *(void *)(a1 + 8) = v5;
  *(_DWORD *)(a1 + 20) = a2[5];
  *(_DWORD *)(a1 + 24) = a2[6];
  *(_DWORD *)(a1 + 28) = a2[7];
  *(void *)(a1 + 32) = *((void *)a2 + 4);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 40) = a2[10];
  *(_DWORD *)(a1 + 44) = a2[11];
  *(_DWORD *)(a1 + 48) = a2[12];
  *(_DWORD *)(a1 + 52) = a2[13];
  *(void *)(a1 + 56) = *((void *)a2 + 7);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 64) = a2[16];
  *(void *)(a1 + 72) = *((void *)a2 + 9);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 80) = *((void *)a2 + 10);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 initializeWithTake for CRLColorData(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  __n128 result = *(__n128 *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 64);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  *(__n128 *)(a1 + 32) = result;
  return result;
}

uint64_t assignWithTake for CRLColorData(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(unsigned char *)(a1 + 4) = *(unsigned char *)(a2 + 4);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 20) = *(void *)(a2 + 20);
  *(_DWORD *)(a1 + 28) = *(_DWORD *)(a2 + 28);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 64) = *(_DWORD *)(a2 + 64);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for CRLColorData(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 88)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 80);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CRLColorData(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 88) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 80) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 88) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLColorData()
{
  return &type metadata for CRLColorData;
}

unint64_t sub_1007B1E98()
{
  unint64_t result = qword_1016803D0;
  if (!qword_1016803D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016803D0);
  }
  return result;
}

unint64_t sub_1007B1EF0()
{
  unint64_t result = qword_1016803D8;
  if (!qword_1016803D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016803D8);
  }
  return result;
}

unint64_t sub_1007B1F48()
{
  unint64_t result = qword_1016803E0;
  if (!qword_1016803E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016803E0);
  }
  return result;
}

unint64_t sub_1007B1FA0()
{
  unint64_t result = qword_1016803E8;
  if (!qword_1016803E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016803E8);
  }
  return result;
}

unint64_t sub_1007B1FF8()
{
  unint64_t result = qword_1016803F0;
  if (!qword_1016803F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016803F0);
  }
  return result;
}

unint64_t sub_1007B2050()
{
  unint64_t result = qword_1016803F8;
  if (!qword_1016803F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016803F8);
  }
  return result;
}

unint64_t sub_1007B20A8()
{
  unint64_t result = qword_101680400;
  if (!qword_101680400)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101680400);
  }
  return result;
}

unint64_t sub_1007B2100()
{
  unint64_t result = qword_101680408;
  if (!qword_101680408)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101680408);
  }
  return result;
}

unint64_t sub_1007B2158()
{
  unint64_t result = qword_101680410;
  if (!qword_101680410)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101680410);
  }
  return result;
}

unint64_t sub_1007B21B0()
{
  unint64_t result = qword_101680418;
  if (!qword_101680418)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101680418);
  }
  return result;
}

unint64_t sub_1007B2208()
{
  unint64_t result = qword_101680420;
  if (!qword_101680420)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101680420);
  }
  return result;
}

uint64_t sub_1007B225C()
{
  return sub_1006BFA64(&qword_101680428, &qword_101680430);
}

unint64_t sub_1007B2288()
{
  unint64_t result = qword_101680438;
  if (!qword_101680438)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101680438);
  }
  return result;
}

unint64_t sub_1007B22E0()
{
  unint64_t result = qword_101680440;
  if (!qword_101680440)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101680440);
  }
  return result;
}

unint64_t sub_1007B2338()
{
  unint64_t result = qword_101680448;
  if (!qword_101680448)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101680448);
  }
  return result;
}

unint64_t sub_1007B2390()
{
  unint64_t result = qword_101680450;
  if (!qword_101680450)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101680450);
  }
  return result;
}

unint64_t sub_1007B23E8()
{
  unint64_t result = qword_101680458;
  if (!qword_101680458)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101680458);
  }
  return result;
}

unint64_t sub_1007B2440()
{
  unint64_t result = qword_101680460;
  if (!qword_101680460)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101680460);
  }
  return result;
}

unint64_t sub_1007B2498()
{
  unint64_t result = qword_101680468;
  if (!qword_101680468)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101680468);
  }
  return result;
}

unint64_t sub_1007B24F0()
{
  unint64_t result = qword_101680470;
  if (!qword_101680470)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101680470);
  }
  return result;
}

unint64_t sub_1007B2548()
{
  unint64_t result = qword_101680478;
  if (!qword_101680478)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101680478);
  }
  return result;
}

unint64_t sub_1007B25A0()
{
  unint64_t result = qword_101680480;
  if (!qword_101680480)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101680480);
  }
  return result;
}

unint64_t sub_1007B25F8()
{
  unint64_t result = qword_101680488;
  if (!qword_101680488)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101680488);
  }
  return result;
}

unint64_t sub_1007B2650()
{
  unint64_t result = qword_101680490;
  if (!qword_101680490)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101680490);
  }
  return result;
}

unint64_t sub_1007B26A8()
{
  unint64_t result = qword_101680498;
  if (!qword_101680498)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101680498);
  }
  return result;
}

unint64_t sub_1007B2700()
{
  unint64_t result = qword_1016804A0;
  if (!qword_1016804A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016804A0);
  }
  return result;
}

unint64_t sub_1007B2758()
{
  unint64_t result = qword_1016804A8;
  if (!qword_1016804A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016804A8);
  }
  return result;
}

unint64_t sub_1007B27B0()
{
  unint64_t result = qword_1016804B0;
  if (!qword_1016804B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016804B0);
  }
  return result;
}

uint64_t sub_1007B2804()
{
  return sub_1006BFA64(&qword_1016804B8, &qword_1016804C0);
}

unint64_t sub_1007B2830()
{
  unint64_t result = qword_1016804C8;
  if (!qword_1016804C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016804C8);
  }
  return result;
}

unint64_t sub_1007B2888()
{
  unint64_t result = qword_1016804D0;
  if (!qword_1016804D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016804D0);
  }
  return result;
}

unint64_t sub_1007B28E0()
{
  unint64_t result = qword_1016804D8;
  if (!qword_1016804D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016804D8);
  }
  return result;
}

unint64_t sub_1007B2938()
{
  unint64_t result = qword_1016804E0;
  if (!qword_1016804E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016804E0);
  }
  return result;
}

unint64_t sub_1007B2990()
{
  unint64_t result = qword_1016804E8;
  if (!qword_1016804E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016804E8);
  }
  return result;
}

unint64_t sub_1007B29E8()
{
  unint64_t result = qword_1016804F0;
  if (!qword_1016804F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016804F0);
  }
  return result;
}

unint64_t sub_1007B2A40()
{
  unint64_t result = qword_1016804F8;
  if (!qword_1016804F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016804F8);
  }
  return result;
}

unint64_t sub_1007B2A98()
{
  unint64_t result = qword_101680500;
  if (!qword_101680500)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101680500);
  }
  return result;
}

unint64_t sub_1007B2AF0()
{
  unint64_t result = qword_101680508;
  if (!qword_101680508)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101680508);
  }
  return result;
}

unint64_t sub_1007B2B48()
{
  unint64_t result = qword_101680510;
  if (!qword_101680510)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101680510);
  }
  return result;
}

unint64_t sub_1007B2BA0()
{
  unint64_t result = qword_101680518;
  if (!qword_101680518)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101680518);
  }
  return result;
}

unint64_t sub_1007B2BF8()
{
  unint64_t result = qword_101680520;
  if (!qword_101680520)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101680520);
  }
  return result;
}

uint64_t sub_1007B2C4C()
{
  return sub_1006BFA64(&qword_101680528, &qword_101680530);
}

unint64_t sub_1007B2C78()
{
  unint64_t result = qword_101680538;
  if (!qword_101680538)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101680538);
  }
  return result;
}

unint64_t sub_1007B2CD0()
{
  unint64_t result = qword_101680540;
  if (!qword_101680540)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101680540);
  }
  return result;
}

unint64_t sub_1007B2D28()
{
  unint64_t result = qword_101680548;
  if (!qword_101680548)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101680548);
  }
  return result;
}

unint64_t sub_1007B2D80()
{
  unint64_t result = qword_101680550;
  if (!qword_101680550)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101680550);
  }
  return result;
}

unint64_t sub_1007B2DD8()
{
  unint64_t result = qword_101680558;
  if (!qword_101680558)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101680558);
  }
  return result;
}

unint64_t sub_1007B2E30()
{
  unint64_t result = qword_101680560;
  if (!qword_101680560)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101680560);
  }
  return result;
}

unint64_t sub_1007B2E88()
{
  unint64_t result = qword_101680568;
  if (!qword_101680568)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101680568);
  }
  return result;
}

unint64_t sub_1007B2EE0()
{
  unint64_t result = qword_101680570;
  if (!qword_101680570)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101680570);
  }
  return result;
}

unint64_t sub_1007B2F38()
{
  unint64_t result = qword_101680578;
  if (!qword_101680578)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101680578);
  }
  return result;
}

unint64_t sub_1007B2F90()
{
  unint64_t result = qword_101680580;
  if (!qword_101680580)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101680580);
  }
  return result;
}

unint64_t sub_1007B2FE8()
{
  unint64_t result = qword_101680588;
  if (!qword_101680588)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101680588);
  }
  return result;
}

unint64_t sub_1007B3040()
{
  unint64_t result = qword_101680590;
  if (!qword_101680590)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101680590);
  }
  return result;
}

uint64_t sub_1007B3094()
{
  return sub_1006BFA64(&qword_101680598, &qword_1016805A0);
}

unint64_t sub_1007B30C0()
{
  unint64_t result = qword_1016805A8;
  if (!qword_1016805A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016805A8);
  }
  return result;
}

uint64_t sub_1007B3114(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x617053726F6C6F63 && a2 == 0xEA00000000006563;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 6579570 && a2 == 0xE300000000000000 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6E65657267 && a2 == 0xE500000000000000 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 1702194274 && a2 == 0xE400000000000000 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x800000010123A720)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v6) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

uint64_t sub_1007B3314@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_1005057FC(&qword_101680608);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5, v7);
  id v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10050F848(a1, a1[3]);
  sub_1007B2700();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v2) {
    return _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)a1);
  }
  sub_1005057FC(&qword_1016803A8);
  char v21 = 0;
  sub_1007B4474(&qword_101680610);
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  uint64_t v10 = v22;
  char v11 = v23;
  LOBYTE(v22) = 1;
  KeyedDecodingContainer.decode(_:forKey:)();
  int v13 = v12;
  LOBYTE(v22) = 2;
  KeyedDecodingContainer.decode(_:forKey:)();
  int v15 = v14;
  LOBYTE(v22) = 3;
  KeyedDecodingContainer.decode(_:forKey:)();
  int v17 = v16;
  sub_1005057FC((uint64_t *)&unk_101687A40);
  char v21 = 4;
  sub_100557304();
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  uint64_t v18 = v22;
  uint64_t result = _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)a1);
  *(void *)a2 = v10;
  *(unsigned char *)(a2 + 8) = v11;
  *(_DWORD *)(a2 + 12) = v13;
  *(_DWORD *)(a2 + 16) = v15;
  *(_DWORD *)(a2 + 20) = v17;
  *(void *)(a2 + 24) = v18;
  return result;
}

uint64_t sub_1007B35BC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1851881827 && a2 == 0xE400000000000000;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x61746E6567616DLL && a2 == 0xE700000000000000 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x776F6C6C6579 && a2 == 0xE600000000000000 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 7955819 && a2 == 0xE300000000000000 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x800000010123A720)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v6) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

uint64_t sub_1007B37B0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_1005057FC(&qword_1016805C8);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5, v7);
  id v9 = (char *)v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10050F848(a1, a1[3]);
  sub_1007B2F90();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v2) {
    return _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)a1);
  }
  char v25 = 0;
  KeyedDecodingContainer.decode(_:forKey:)();
  int v11 = v10;
  char v24 = 1;
  KeyedDecodingContainer.decode(_:forKey:)();
  int v13 = v12;
  char v23 = 2;
  KeyedDecodingContainer.decode(_:forKey:)();
  int v15 = v14;
  char v22 = 3;
  KeyedDecodingContainer.decode(_:forKey:)();
  int v17 = v16;
  sub_1005057FC((uint64_t *)&unk_101687A40);
  char v21 = 4;
  sub_100557304();
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  uint64_t v18 = v20[1];
  uint64_t result = _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)a1);
  *(_DWORD *)a2 = v11;
  *(_DWORD *)(a2 + 4) = v13;
  *(_DWORD *)(a2 + 8) = v15;
  *(_DWORD *)(a2 + 12) = v17;
  *(void *)(a2 + 16) = v18;
  return result;
}

uint64_t sub_1007B3A0C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6574696877 && a2 == 0xE500000000000000;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x800000010123A720)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

void *sub_1007B3AF4(void *a1)
{
  uint64_t v3 = sub_1005057FC(&qword_1016805E8);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3, v5);
  uint64_t v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10050F848(a1, a1[3]);
  sub_1007B2B48();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v1)
  {
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)a1);
  }
  else
  {
    char v12 = 0;
    KeyedDecodingContainer.decode(_:forKey:)();
    sub_1005057FC((uint64_t *)&unk_101687A40);
    char v11 = 1;
    sub_100557304();
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
    uint64_t v8 = (void *)v10[1];
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)a1);
  }
  return v8;
}

uint64_t sub_1007B3CC4(uint64_t a1)
{
  if ((unint64_t)(a1 + 1) >= 5) {
    return 5;
  }
  else {
    return (0x302010004uLL >> (8 * (a1 + 1)));
  }
}

uint64_t sub_1007B3CEC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6168706C61 && a2 == 0xE500000000000000;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x61746144626772 && a2 == 0xE700000000000000 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x617461446B796D63 && a2 == 0xE800000000000000 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6F7268636F6E6F6DLL && a2 == 0xEE0061746144656DLL {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x800000010123A720)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v6) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

uint64_t sub_1007B3F24@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_1005057FC(&qword_1016805B0);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5, v7);
  id v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10050F848(a1, a1[3]);
  sub_1007B2158();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v2)
  {
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)a1);
    return swift_bridgeObjectRelease();
  }
  else
  {
    LOBYTE(v31) = 0;
    uint64_t v10 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
    char v35 = 1;
    sub_1007B2548();
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
    uint64_t v29 = v32;
    uint64_t v30 = v31;
    uint64_t v11 = v34;
    uint64_t v28 = v33;
    char v35 = 2;
    sub_1007B2DD8();
    swift_bridgeObjectRetain();
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
    uint64_t v26 = v31;
    uint64_t v27 = v10;
    uint64_t v12 = v33;
    uint64_t v25 = v32;
    char v35 = 3;
    sub_1007B2990();
    swift_bridgeObjectRetain();
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
    uint64_t v13 = v32;
    uint64_t v22 = v31;
    uint64_t v23 = sub_1005057FC((uint64_t *)&unk_101687A40);
    char v35 = 4;
    sub_100557304();
    uint64_t v24 = v13;
    swift_bridgeObjectRetain();
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
    uint64_t v14 = v31;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)a1);
    swift_bridgeObjectRelease();
    uint64_t v15 = v24;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    char v17 = BYTE4(v27);
    *(_DWORD *)a2 = v27;
    *(unsigned char *)(a2 + 4) = v17 & 1;
    uint64_t v18 = v29;
    *(void *)(a2 + 8) = v30;
    *(void *)(a2 + 16) = v18;
    *(void *)(a2 + 24) = v28;
    *(void *)(a2 + 32) = v11;
    uint64_t v19 = v25;
    *(void *)(a2 + 40) = v26;
    *(void *)(a2 + 48) = v19;
    uint64_t v20 = v22;
    *(void *)(a2 + 56) = v12;
    *(void *)(a2 + 64) = v20;
    *(void *)(a2 + 72) = v15;
    *(void *)(a2 + 80) = v14;
  }
  return result;
}

unint64_t sub_1007B4324()
{
  unint64_t result = qword_1016805D8;
  if (!qword_1016805D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016805D8);
  }
  return result;
}

unint64_t sub_1007B4378()
{
  unint64_t result = qword_1016805E0;
  if (!qword_1016805E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016805E0);
  }
  return result;
}

unint64_t sub_1007B43CC()
{
  unint64_t result = qword_1016805F8;
  if (!qword_1016805F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016805F8);
  }
  return result;
}

unint64_t sub_1007B4420()
{
  unint64_t result = qword_101680600;
  if (!qword_101680600)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101680600);
  }
  return result;
}

uint64_t sub_1007B4474(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100522D34(&qword_1016803A8);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1007B44DC()
{
  unint64_t result = qword_101680628;
  if (!qword_101680628)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101680628);
  }
  return result;
}

unint64_t sub_1007B4530()
{
  unint64_t result = qword_101680630;
  if (!qword_101680630)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101680630);
  }
  return result;
}

unint64_t sub_1007B4584()
{
  unint64_t result = qword_101680638;
  if (!qword_101680638)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101680638);
  }
  return result;
}

unint64_t sub_1007B45D8()
{
  unint64_t result = qword_101680640;
  if (!qword_101680640)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101680640);
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLColorModelCMYKData.CodingKeys()
{
  return &type metadata for CRLColorModelCMYKData.CodingKeys;
}

unsigned char *_s8Freeform20CRLColorModelRGBDataV10ColorSpaceOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1007B470CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLColorModelMonochromeData.CodingKeys()
{
  return &type metadata for CRLColorModelMonochromeData.CodingKeys;
}

ValueMetadata *type metadata accessor for CRLColorModelRGBData.CodingKeys()
{
  return &type metadata for CRLColorModelRGBData.CodingKeys;
}

unsigned char *_s8Freeform21CRLColorModelCMYKDataV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1007B4820);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLColorData.CodingKeys()
{
  return &type metadata for CRLColorData.CodingKeys;
}

unint64_t sub_1007B485C()
{
  unint64_t result = qword_101680648;
  if (!qword_101680648)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101680648);
  }
  return result;
}

unint64_t sub_1007B48B4()
{
  unint64_t result = qword_101680650;
  if (!qword_101680650)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101680650);
  }
  return result;
}

unint64_t sub_1007B490C()
{
  unint64_t result = qword_101680658;
  if (!qword_101680658)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101680658);
  }
  return result;
}

unint64_t sub_1007B4964()
{
  unint64_t result = qword_101680660;
  if (!qword_101680660)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101680660);
  }
  return result;
}

uint64_t *sub_1007B49C0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1005057FC(&qword_101670F30);
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 5, v7))
    {
      uint64_t v9 = type metadata accessor for CRLBoardLibraryViewModel.Folder(0);
      memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      uint64_t v11 = type metadata accessor for UUID();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v11 - 8) + 16))(a1, a2, v11);
      uint64_t v12 = *(int *)(v7 + 48);
      uint64_t v13 = (uint64_t *)((char *)a1 + v12);
      uint64_t v14 = (uint64_t *)((char *)a2 + v12);
      uint64_t v15 = v14[1];
      *uint64_t v13 = *v14;
      v13[1] = v15;
      int v16 = *(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56);
      swift_bridgeObjectRetain();
      v16(a1, 0, 5, v7);
    }
    uint64_t v17 = *(int *)(a3 + 20);
    uint64_t v18 = (char *)a1 + v17;
    uint64_t v19 = (char *)a2 + v17;
    uint64_t v20 = *(void *)v19;
    uint64_t v21 = *((void *)v19 + 1);
    char v22 = v19[16];
    sub_1007B4B8C();
    *(void *)uint64_t v18 = v20;
    *((void *)v18 + 1) = v21;
    v18[16] = v22;
  }
  return a1;
}

uint64_t sub_1007B4B8C()
{
  return swift_retain();
}

uint64_t sub_1007B4B94(uint64_t a1)
{
  uint64_t v2 = sub_1005057FC(&qword_101670F30);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48))(a1, 5, v2))
  {
    uint64_t v3 = type metadata accessor for UUID();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
    swift_bridgeObjectRelease();
  }

  return sub_1007B4C70();
}

uint64_t sub_1007B4C70()
{
  return swift_release();
}

char *sub_1007B4C78(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_1005057FC(&qword_101670F30);
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 5, v6))
  {
    uint64_t v8 = type metadata accessor for CRLBoardLibraryViewModel.Folder(0);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    uint64_t v9 = type metadata accessor for UUID();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16))(a1, a2, v9);
    uint64_t v10 = *(int *)(v6 + 48);
    uint64_t v11 = &a1[v10];
    uint64_t v12 = &a2[v10];
    uint64_t v13 = *((void *)v12 + 1);
    *(void *)uint64_t v11 = *(void *)v12;
    *((void *)v11 + 1) = v13;
    uint64_t v14 = *(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56);
    swift_bridgeObjectRetain();
    v14(a1, 0, 5, v6);
  }
  uint64_t v15 = *(int *)(a3 + 20);
  int v16 = &a1[v15];
  uint64_t v17 = &a2[v15];
  uint64_t v18 = *(void *)v17;
  uint64_t v19 = *((void *)v17 + 1);
  char v20 = v17[16];
  sub_1007B4B8C();
  *(void *)int v16 = v18;
  *((void *)v16 + 1) = v19;
  v16[16] = v20;
  return a1;
}

char *sub_1007B4DF4(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_1005057FC(&qword_101670F30);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 5, v6);
  int v10 = v8(a2, 5, v6);
  if (!v9)
  {
    if (!v10)
    {
      uint64_t v24 = type metadata accessor for UUID();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 24))(a1, a2, v24);
      uint64_t v25 = *(int *)(v6 + 48);
      uint64_t v26 = &a1[v25];
      uint64_t v27 = &a2[v25];
      *(void *)uint64_t v26 = *(void *)v27;
      *((void *)v26 + 1) = *((void *)v27 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      goto LABEL_7;
    }
    sub_100522F00((uint64_t)a1, &qword_101670F30);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    uint64_t v16 = type metadata accessor for CRLBoardLibraryViewModel.Folder(0);
    memcpy(a1, a2, *(void *)(*(void *)(v16 - 8) + 64));
    goto LABEL_7;
  }
  uint64_t v11 = type metadata accessor for UUID();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(a1, a2, v11);
  uint64_t v12 = *(int *)(v6 + 48);
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  *(void *)uint64_t v13 = *(void *)v14;
  *((void *)v13 + 1) = *((void *)v14 + 1);
  uint64_t v15 = *(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56);
  swift_bridgeObjectRetain();
  v15(a1, 0, 5, v6);
LABEL_7:
  uint64_t v17 = *(int *)(a3 + 20);
  uint64_t v18 = &a1[v17];
  uint64_t v19 = &a2[v17];
  uint64_t v20 = *(void *)v19;
  uint64_t v21 = *((void *)v19 + 1);
  char v22 = v19[16];
  sub_1007B4B8C();
  *(void *)uint64_t v18 = v20;
  *((void *)v18 + 1) = v21;
  v18[16] = v22;
  sub_1007B4C70();
  return a1;
}

char *sub_1007B502C(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_1005057FC(&qword_101670F30);
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 5, v6))
  {
    uint64_t v8 = type metadata accessor for CRLBoardLibraryViewModel.Folder(0);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    uint64_t v9 = type metadata accessor for UUID();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(a1, a2, v9);
    *(_OWORD *)&a1[*(int *)(v6 + 48)] = *(_OWORD *)&a2[*(int *)(v6 + 48)];
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 5, v6);
  }
  uint64_t v10 = *(int *)(a3 + 20);
  uint64_t v11 = &a1[v10];
  uint64_t v12 = &a2[v10];
  *(_OWORD *)uint64_t v11 = *(_OWORD *)v12;
  unsigned char v11[16] = v12[16];
  return a1;
}

char *sub_1007B518C(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_1005057FC(&qword_101670F30);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 5, v6);
  int v10 = v8(a2, 5, v6);
  if (!v9)
  {
    if (!v10)
    {
      uint64_t v18 = type metadata accessor for UUID();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 40))(a1, a2, v18);
      uint64_t v19 = *(int *)(v6 + 48);
      uint64_t v20 = &a1[v19];
      uint64_t v21 = &a2[v19];
      uint64_t v23 = *(void *)v21;
      uint64_t v22 = *((void *)v21 + 1);
      *(void *)uint64_t v20 = v23;
      *((void *)v20 + 1) = v22;
      swift_bridgeObjectRelease();
      goto LABEL_7;
    }
    sub_100522F00((uint64_t)a1, &qword_101670F30);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    uint64_t v12 = type metadata accessor for CRLBoardLibraryViewModel.Folder(0);
    memcpy(a1, a2, *(void *)(*(void *)(v12 - 8) + 64));
    goto LABEL_7;
  }
  uint64_t v11 = type metadata accessor for UUID();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(a1, a2, v11);
  *(_OWORD *)&a1[*(int *)(v6 + 48)] = *(_OWORD *)&a2[*(int *)(v6 + 48)];
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 5, v6);
LABEL_7:
  uint64_t v13 = *(int *)(a3 + 20);
  uint64_t v14 = &a1[v13];
  uint64_t v15 = &a2[v13];
  char v16 = v15[16];
  *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
  unsigned char v14[16] = v16;
  sub_1007B4C70();
  return a1;
}

uint64_t sub_1007B5390(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1007B53A4);
}

uint64_t sub_1007B53A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for CRLBoardLibraryViewModel.Folder(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unsigned int v10 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20) + 16);
    if (v10 > 1) {
      return (v10 ^ 0xFF) + 1;
    }
    else {
      return 0;
    }
  }
}

uint64_t sub_1007B5464(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1007B5478);
}

uint64_t sub_1007B5478(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for CRLBoardLibraryViewModel.Folder(0);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unsigned int v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(unsigned char *)(a1 + *(int *)(a4 + 20) + 16) = -(char)a2;
  }
  return result;
}

uint64_t type metadata accessor for CRLEmptyFolderView()
{
  uint64_t result = qword_101680748;
  if (!qword_101680748) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1007B5584()
{
  uint64_t result = type metadata accessor for CRLBoardLibraryViewModel.Folder(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1007B5618()
{
  return swift_getOpaqueTypeConformance2();
}

__n128 sub_1007B5634@<Q0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13)
{
  if (a2) {
    a1 = -INFINITY;
  }
  if (a4) {
    a3 = a1;
  }
  if (a6) {
    a5 = a3;
  }
  if (a1 > a3 || a3 > a5) {
    goto LABEL_22;
  }
  if (a8) {
    a7 = -INFINITY;
  }
  if (a11) {
    a10 = a7;
  }
  if (a13) {
    a12 = a10;
  }
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    static os_log_type_t.fault.getter();
    uint64_t v23 = (void *)static Log.runtimeIssuesLog.getter();
    os_log(_:dso:log:_:_:)();
  }
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
  uint64_t v24 = sub_1005057FC(&qword_10167A5D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 16))(a9, v13, v24);
  uint64_t v25 = (_OWORD *)(a9 + *(int *)(sub_1005057FC(&qword_10167A5D8) + 36));
  v25[4] = v31;
  v25[5] = v32;
  void v25[6] = v33;
  _OWORD *v25 = v27;
  v25[1] = v28;
  __n128 result = v30;
  v25[2] = v29;
  void v25[3] = v30;
  return result;
}

uint64_t sub_1007B5820@<X0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, _OWORD *a9@<X8>, double a10, char a11, double a12, char a13)
{
  if (a2) {
    a1 = -INFINITY;
  }
  if (a4) {
    a3 = a1;
  }
  if (a6) {
    a5 = a3;
  }
  if (a1 > a3 || a3 > a5) {
    goto LABEL_22;
  }
  if (a8) {
    a7 = -INFINITY;
  }
  if (a11) {
    a10 = a7;
  }
  if (a13) {
    a12 = a10;
  }
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    static os_log_type_t.fault.getter();
    uint64_t v23 = (void *)static Log.runtimeIssuesLog.getter();
    os_log(_:dso:log:_:_:)();
  }
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
  long long v24 = v13[3];
  a9[2] = v13[2];
  a9[3] = v24;
  *(_OWORD *)((char *)a9 + 57) = *(_OWORD *)((char *)v13 + 57);
  long long v25 = v13[1];
  *a9 = *v13;
  a9[1] = v25;
  a9[9] = v31;
  a9[10] = v32;
  a9[11] = v33;
  a9[5] = v27;
  a9[6] = v28;
  a9[7] = v29;
  a9[8] = v30;

  return sub_10073F154((uint64_t)v13);
}

uint64_t sub_1007B59E0@<X0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, char a18, uint64_t a19)
{
  uint64_t v20 = a19;
  char v21 = a18;
  uint64_t v22 = a17;
  if (a2) {
    a1 = -INFINITY;
  }
  if (a4) {
    a3 = a1;
  }
  if (a6) {
    a5 = a3;
  }
  if (a1 > a3 || a3 > a5) {
    goto LABEL_22;
  }
  if (a8) {
    a7 = -INFINITY;
  }
  if (a11) {
    a10 = a7;
  }
  if (a13) {
    a12 = a10;
  }
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    static os_log_type_t.fault.getter();
    long long v31 = (void *)static Log.runtimeIssuesLog.getter();
    os_log(_:dso:log:_:_:)();

    char v21 = a18;
    uint64_t v20 = a19;
    uint64_t v22 = a17;
  }
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
  *(void *)a9 = a16;
  *(void *)(a9 + 8) = v22;
  *(unsigned char *)(a9 + 16) = v21 & 1;
  *(void *)(a9 + 24) = v20;
  *(_OWORD *)(a9 + 96) = v37;
  *(_OWORD *)(a9 + 112) = v38;
  *(_OWORD *)(a9 + 128) = v39;
  *(_OWORD *)(a9 + 32) = v33;
  *(_OWORD *)(a9 + 48) = v34;
  *(_OWORD *)(a9 + 64) = v35;
  *(_OWORD *)(a9 + 80) = v36;
  sub_10073F0E0(a16, v22, v21 & 1);

  return swift_bridgeObjectRetain();
}

double sub_1007B5BD4@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  *(void *)&double result = sub_1007B5C30(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_1016808E0, (uint64_t *)&unk_1016808E8).n128_u64[0];
  return result;
}

__n128 sub_1007B5C30@<Q0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15, uint64_t *a16, uint64_t *a17)
{
  uint64_t v19 = a17;
  if (a2) {
    a1 = -INFINITY;
  }
  if (a4) {
    a3 = a1;
  }
  if (a6) {
    a5 = a3;
  }
  if (a1 > a3 || a3 > a5) {
    goto LABEL_22;
  }
  if (a8) {
    a7 = -INFINITY;
  }
  if (a11) {
    a10 = a7;
  }
  if (a13) {
    a12 = a10;
  }
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    static os_log_type_t.fault.getter();
    long long v28 = (void *)static Log.runtimeIssuesLog.getter();
    os_log(_:dso:log:_:_:)();

    uint64_t v19 = a17;
  }
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
  sub_100522E9C(v17, a9, a16);
  long long v29 = (_OWORD *)(a9 + *(int *)(sub_1005057FC(v19) + 36));
  v29[4] = v35;
  v29[5] = v36;
  v29[6] = v37;
  *long long v29 = v31;
  v29[1] = v32;
  __n128 result = v34;
  v29[2] = v33;
  v29[3] = v34;
  return result;
}

uint64_t sub_1007B5E00@<X0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13)
{
  if (a2) {
    a1 = -INFINITY;
  }
  if (a4) {
    a3 = a1;
  }
  if (a6) {
    a5 = a3;
  }
  if (a1 > a3 || a3 > a5) {
    goto LABEL_22;
  }
  if (a8) {
    a7 = -INFINITY;
  }
  if (a11) {
    a10 = a7;
  }
  if (a13) {
    a12 = a10;
  }
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    static os_log_type_t.fault.getter();
    uint64_t v23 = (void *)static Log.runtimeIssuesLog.getter();
    os_log(_:dso:log:_:_:)();
  }
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
  long long v24 = v13[1];
  long long v37 = *v13;
  long long v38 = v24;
  sub_1007BA5DC((uint64_t)&v37, (uint64_t)v40);
  long long v26 = v13[1];
  long long v35 = v13[2];
  long long v25 = v35;
  *(_OWORD *)a9 = *v13;
  *(_OWORD *)(a9 + 16) = v26;
  *(_OWORD *)(a9 + 32) = v25;
  *(_OWORD *)(a9 + 152) = v34;
  *(_OWORD *)(a9 + 136) = v33;
  *(_OWORD *)(a9 + 120) = v32;
  *(_OWORD *)(a9 + 104) = v31;
  *(_OWORD *)(a9 + 56) = v28;
  uint64_t v39 = *((void *)&v38 + 1);
  char v36 = *((unsigned char *)v13 + 48);
  *(unsigned char *)(a9 + 48) = v36;
  *(_OWORD *)(a9 + 72) = v29;
  *(_OWORD *)(a9 + 88) = v30;
  sub_1007BA638((uint64_t)v40);
  sub_1007BA66C((uint64_t)&v39);
  return sub_1007BA698((uint64_t)&v35);
}

void sub_1007B5FE8()
{
  qword_101680668 = 0x4050000000000000;
}

uint64_t sub_1007B5FF8()
{
  uint64_t v0 = sub_1005057FC(qword_101680848);
  __chkstk_darwin(v0 - 8, v1);
  uint64_t v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Font.Weight.bold.getter();
  uint64_t v4 = enum case for Font.Design.rounded(_:);
  uint64_t v5 = type metadata accessor for Font.Design();
  uint64_t v6 = *(void *)(v5 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 104))(v3, v4, v5);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56))(v3, 0, 1, v5);
  uint64_t v7 = static Font.system(size:weight:design:)();
  uint64_t result = sub_100522F00((uint64_t)v3, qword_101680848);
  qword_101680670 = v7;
  return result;
}

uint64_t sub_1007B6130(uint64_t a1)
{
  return sub_1007B620C(a1, (SEL *)&selRef_secondaryLabelColor, &qword_101680678);
}

void sub_1007B6144()
{
  qword_101680680 = 0x4000000000000000;
}

uint64_t sub_1007B6154()
{
  uint64_t result = static Font.title2.getter();
  qword_101680688 = result;
  return result;
}

uint64_t sub_1007B6174()
{
  uint64_t result = static Font.Weight.bold.getter();
  qword_101680690 = v1;
  return result;
}

uint64_t sub_1007B6194(uint64_t a1)
{
  return sub_1007B620C(a1, (SEL *)&selRef_labelColor, &qword_101680698);
}

void sub_1007B61A8()
{
  qword_1016806A0 = 0x4000000000000000;
}

uint64_t sub_1007B61B8()
{
  uint64_t result = static Font.footnote.getter();
  qword_1016806A8 = result;
  return result;
}

uint64_t sub_1007B61D8()
{
  uint64_t result = static Font.Weight.regular.getter();
  qword_1016806B0 = v1;
  return result;
}

uint64_t sub_1007B61F8(uint64_t a1)
{
  return sub_1007B620C(a1, (SEL *)&selRef_secondaryLabelColor, &qword_1016806B8);
}

uint64_t sub_1007B620C(uint64_t a1, SEL *a2, uint64_t *a3)
{
  id v4 = [self *a2];
  uint64_t result = Color.init(_:)();
  *a3 = result;
  return result;
}

void sub_1007B6254()
{
  qword_1016806C0 = 0x4031000000000000;
}

uint64_t sub_1007B6264()
{
  uint64_t v0 = sub_1005057FC(&qword_10167A598);
  sub_100568B28(v0, qword_1016806C8);
  sub_100556B74(v0, (uint64_t)qword_1016806C8);
  return Button.init(action:label:)();
}

uint64_t sub_1007B62F8@<X0>(uint64_t a1@<X8>)
{
  id v2 = [self mainBundle];
  NSString v3 = String._bridgeToObjectiveC()();
  NSString v4 = String._bridgeToObjectiveC()();
  id v5 = [v2 localizedStringForKey:v3 value:v4 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  sub_10052E310();
  uint64_t v6 = Text.init<A>(_:)();
  uint64_t v8 = v7;
  LOBYTE(v5) = v9 & 1;
  id v10 = [self linkColor];
  Color.init(_:)();
  uint64_t v11 = Text.foregroundColor(_:)();
  uint64_t v13 = v12;
  char v15 = v14;
  uint64_t v17 = v16;
  swift_release();
  sub_1006A7D28(v6, v8, (char)v5);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a1 = v11;
  *(void *)(a1 + 8) = v13;
  *(unsigned char *)(a1 + 16) = v15 & 1;
  *(void *)(a1 + 24) = v17;
  return result;
}

void sub_1007B64A4()
{
  qword_1016806E0 = 0x4072000000000000;
}

void sub_1007B64B4()
{
  qword_1016806E8 = 0;
}

uint64_t sub_1007B64C0()
{
  uint64_t v1 = type metadata accessor for CRLBoardLibraryViewModel.Folder(0);
  __chkstk_darwin(v1 - 8, v2);
  NSString v4 = (char *)&v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for CRLEmptyFolderView();
  type metadata accessor for CRLEmptyFolderViewDataSource();
  sub_1007B9D7C();
  StateObject.wrappedValue.getter();
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v6 = v27;
  unint64_t v5 = v28;
  swift_bridgeObjectRelease();
  uint64_t v7 = HIBYTE(v5) & 0xF;
  if ((v5 & 0x2000000000000000) == 0) {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFLL;
  }
  if (v7)
  {
    StateObject.wrappedValue.getter();
    swift_getKeyPath();
    swift_getKeyPath();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    swift_release();
    id v8 = [self mainBundle];
    NSString v9 = String._bridgeToObjectiveC()();
    NSString v12 = String._bridgeToObjectiveC()();
    id v13 = [v8 localizedStringForKey:v9 value:v12 table:0];

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t v14 = swift_allocObject();
    *(_OWORD *)(v14 + 16) = xmmword_10117E810;
    StateObject.wrappedValue.getter();
    swift_getKeyPath();
    swift_getKeyPath();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    swift_release();
    uint64_t v15 = v27;
    unint64_t v16 = v28;
    *(void *)(v14 + 56) = &type metadata for String;
    *(void *)(v14 + 64) = sub_100528BE4();
    *(void *)(v14 + 32) = v15;
    *(void *)(v14 + 40) = v16;
    uint64_t v17 = String.init(format:_:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1007B9D14(v0, (uint64_t)v4, type metadata accessor for CRLBoardLibraryViewModel.Folder);
    uint64_t v10 = sub_1005057FC(&qword_101670F30);
    uint64_t v17 = 0;
    switch((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48))(v4, 5, v10))
    {
      case 1u:
      case 2u:
      case 3u:
        id v18 = [self mainBundle];
        NSString v19 = String._bridgeToObjectiveC()();
        NSString v20 = String._bridgeToObjectiveC()();
        id v21 = [v18 localizedStringForKey:v19 value:v20 table:0];
        goto LABEL_11;
      case 4u:
        StateObject.wrappedValue.getter();
        swift_getKeyPath();
        swift_getKeyPath();
        static Published.subscript.getter();
        swift_release();
        swift_release();
        swift_release();
        int v22 = v27;
        id v18 = [self mainBundle];
        if (v22 == 1)
        {
          NSString v23 = String._bridgeToObjectiveC()();
          NSString v24 = String._bridgeToObjectiveC()();
          id v25 = [v18 localizedStringForKey:v23 value:v24 table:0];
        }
        else
        {
          NSString v19 = String._bridgeToObjectiveC()();
          NSString v20 = String._bridgeToObjectiveC()();
          id v21 = [v18 localizedStringForKey:v19 value:v20 table:0];
LABEL_11:
          id v25 = v21;
        }
        uint64_t v17 = static String._unconditionallyBridgeFromObjectiveC(_:)();

        break;
      case 5u:
        return v17;
      default:
        uint64_t v17 = *(void *)&v4[*(int *)(v10 + 48)];
        uint64_t v11 = type metadata accessor for UUID();
        (*(void (**)(char *, uint64_t))(*(void *)(v11 - 8) + 8))(v4, v11);
        break;
    }
  }
  return v17;
}

uint64_t sub_1007B6C48()
{
  uint64_t v1 = type metadata accessor for CRLBoardLibraryViewModel.Folder(0);
  __chkstk_darwin(v1 - 8, v2);
  NSString v4 = (char *)&v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for CRLEmptyFolderView();
  type metadata accessor for CRLEmptyFolderViewDataSource();
  sub_1007B9D7C();
  StateObject.wrappedValue.getter();
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v6 = v29;
  unint64_t v5 = v30;
  swift_bridgeObjectRelease();
  uint64_t v7 = HIBYTE(v5) & 0xF;
  if ((v5 & 0x2000000000000000) == 0) {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFLL;
  }
  if (v7)
  {
    StateObject.wrappedValue.getter();
    swift_getKeyPath();
    swift_getKeyPath();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    swift_release();
    if (v29 == 1)
    {
      id v8 = [self mainBundle];
      NSString v9 = String._bridgeToObjectiveC()();
      NSString v10 = String._bridgeToObjectiveC()();
      id v11 = [v8 localizedStringForKey:v9 value:v10 table:0];

      static String._unconditionallyBridgeFromObjectiveC(_:)();
    }
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t v15 = swift_allocObject();
    *(_OWORD *)(v15 + 16) = xmmword_10117E810;
    StateObject.wrappedValue.getter();
    swift_getKeyPath();
    swift_getKeyPath();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    swift_release();
    uint64_t v16 = v29;
    unint64_t v17 = v30;
    *(void *)(v15 + 56) = &type metadata for String;
    *(void *)(v15 + 64) = sub_100528BE4();
    *(void *)(v15 + 32) = v16;
    *(void *)(v15 + 40) = v17;
    uint64_t v13 = String.init(format:_:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1007B9D14(v0, (uint64_t)v4, type metadata accessor for CRLBoardLibraryViewModel.Folder);
    uint64_t v12 = sub_1005057FC(&qword_101670F30);
    uint64_t v13 = 0;
    switch((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v12 - 8) + 48))(v4, 5, v12))
    {
      case 1u:
        goto LABEL_11;
      case 2u:
      case 3u:
      case 5u:
        return v13;
      case 4u:
        StateObject.wrappedValue.getter();
        swift_getKeyPath();
        swift_getKeyPath();
        static Published.subscript.getter();
        swift_release();
        swift_release();
        swift_release();
        if (v29 == 1)
        {
LABEL_11:
          id v19 = [self mainBundle];
          NSString v20 = String._bridgeToObjectiveC()();
          NSString v21 = String._bridgeToObjectiveC()();
          id v22 = [v19 localizedStringForKey:v20 value:v21 table:0];
        }
        else
        {
          long long v31 = &type metadata for CRLAppleAccountFeatureFlags;
          unint64_t v32 = sub_1007B9E4C();
          char v23 = isFeatureEnabled(_:)();
          _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v29);
          id v19 = [self mainBundle];
          if (v23)
          {
            NSString v24 = String._bridgeToObjectiveC()();
            NSString v25 = String._bridgeToObjectiveC()();
            id v26 = [v19 localizedStringForKey:v24 value:v25 table:0];

            uint64_t v13 = static String._unconditionallyBridgeFromObjectiveC(_:)();
            return v13;
          }
          NSString v20 = String._bridgeToObjectiveC()();
          NSString v21 = String._bridgeToObjectiveC()();
          id v22 = [v19 localizedStringForKey:v20 value:v21 table:0];
        }
        id v27 = v22;

        uint64_t v13 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        break;
      default:
        uint64_t v13 = *(void *)&v4[*(int *)(v12 + 48)];
        uint64_t v14 = type metadata accessor for UUID();
        (*(void (**)(char *, uint64_t))(*(void *)(v14 - 8) + 8))(v4, v14);
        return v13;
    }
  }
  return v13;
}

uint64_t sub_1007B7330@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for CRLEmptyFolderView();
  __chkstk_darwin(v4, v5);
  uint64_t v7 = (char *)v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for CRLBoardLibraryViewModel.Folder(0);
  __chkstk_darwin(v8 - 8, v9);
  id v11 = (char *)v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1007B9D14(v2, (uint64_t)v11, type metadata accessor for CRLBoardLibraryViewModel.Folder);
  uint64_t v12 = sub_1005057FC(&qword_101670F30);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v12 - 8) + 48))(v11, 5, v12) != 4)
  {
    uint64_t v14 = sub_1005057FC(&qword_10167A598);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(a1, 1, 1, v14);
    return sub_1007B9DE4((uint64_t)v11, type metadata accessor for CRLBoardLibraryViewModel.Folder);
  }
  type metadata accessor for CRLEmptyFolderViewDataSource();
  sub_1007B9D7C();
  StateObject.wrappedValue.getter();
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  swift_release();
  int v13 = LOBYTE(v23[0]);
  sub_1007B9D14(v2, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for CRLEmptyFolderView);
  if (v13 == 1)
  {
    sub_1007B9DE4((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for CRLEmptyFolderView);
LABEL_9:
    uint64_t v19 = sub_1005057FC(&qword_10167A598);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(a1, 1, 1, v19);
  }
  StateObject.wrappedValue.getter();
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v17 = v23[0];
  unint64_t v16 = v23[1];
  swift_bridgeObjectRelease();
  if ((v16 & 0x2000000000000000) != 0) {
    uint64_t v18 = HIBYTE(v16) & 0xF;
  }
  else {
    uint64_t v18 = v17 & 0xFFFFFFFFFFFFLL;
  }
  sub_1007B9DE4((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for CRLEmptyFolderView);
  if (v18) {
    goto LABEL_9;
  }
  if (qword_10166F230 != -1) {
    swift_once();
  }
  uint64_t v20 = sub_1005057FC(&qword_10167A598);
  uint64_t v21 = sub_100556B74(v20, (uint64_t)qword_1016806C8);
  uint64_t v22 = *(void *)(v20 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v22 + 16))(a1, v21, v20);
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v22 + 56))(a1, 0, 1, v20);
}

uint64_t sub_1007B7758()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for CRLEmptyFolderView();
  __chkstk_darwin(v2, v3);
  uint64_t v32 = (uint64_t)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for CRLBoardLibraryViewModel.Folder(0);
  __chkstk_darwin(v5 - 8, v6);
  uint64_t v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9, v10);
  uint64_t v12 = (char *)&v29 - v11;
  __chkstk_darwin(v13, v14);
  unint64_t v16 = (char *)&v29 - v15;
  type metadata accessor for CRLEmptyFolderViewDataSource();
  sub_1007B9D7C();
  StateObject.wrappedValue.getter();
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v18 = v33;
  unint64_t v17 = v34;
  swift_bridgeObjectRelease();
  uint64_t v19 = HIBYTE(v17) & 0xF;
  if ((v17 & 0x2000000000000000) == 0) {
    uint64_t v19 = v18 & 0xFFFFFFFFFFFFLL;
  }
  if (v19) {
    return 0x697966696E67616DLL;
  }
  long long v31 = v8;
  uint64_t v20 = 0xD00000000000001BLL;
  sub_1007B9D14(v1, (uint64_t)v16, type metadata accessor for CRLBoardLibraryViewModel.Folder);
  uint64_t v22 = sub_1005057FC(&qword_101670F30);
  uint64_t v29 = *(void *)(v22 - 8);
  uint64_t v30 = v22;
  (*(void (**)(char *, uint64_t, uint64_t))(v29 + 56))(v12, 4, 5);
  char v23 = sub_100DDC744((uint64_t)v16, (uint64_t)v12);
  sub_1007B9DE4((uint64_t)v12, type metadata accessor for CRLBoardLibraryViewModel.Folder);
  sub_1007B9DE4((uint64_t)v16, type metadata accessor for CRLBoardLibraryViewModel.Folder);
  uint64_t v24 = v32;
  sub_1007B9D14(v1, v32, (uint64_t (*)(void))type metadata accessor for CRLEmptyFolderView);
  if (v23)
  {
    StateObject.wrappedValue.getter();
    swift_getKeyPath();
    swift_getKeyPath();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    swift_release();
    int v25 = v33;
    sub_1007B9DE4(v24, (uint64_t (*)(void))type metadata accessor for CRLEmptyFolderView);
    if (v25 != 1) {
      return v20;
    }
  }
  else
  {
    sub_1007B9DE4(v24, (uint64_t (*)(void))type metadata accessor for CRLEmptyFolderView);
  }
  uint64_t v26 = (uint64_t)v31;
  sub_1007B9D14(v1, (uint64_t)v31, type metadata accessor for CRLBoardLibraryViewModel.Folder);
  uint64_t v20 = 0xD000000000000020;
  switch((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v29 + 48))(v26, 5, v30))
  {
    case 1u:
      return v20;
    case 2u:
      uint64_t v28 = 0x2E6B636F6C63;
      goto LABEL_16;
    case 3u:
      uint64_t v28 = 0x2E7472616568;
      goto LABEL_16;
    case 4u:
      return 0x322E6E6F73726570;
    case 5u:
      uint64_t v28 = 0x2E6873617274;
LABEL_16:
      uint64_t v20 = v28 & 0xFFFFFFFFFFFFLL | 0x6966000000000000;
      break;
    default:
      swift_bridgeObjectRelease();
      uint64_t v27 = type metadata accessor for UUID();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v27 - 8) + 8))(v26, v27);
      uint64_t v20 = 0x7265646C6F66;
      break;
  }
  return v20;
}

uint64_t sub_1007B7C44()
{
  id v0 = [self standardUserDefaults];
  NSString v1 = String._bridgeToObjectiveC()();
  id v2 = [v0 objectForKey:v1];

  if (v2)
  {
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v7, 0, sizeof(v7));
  }
  sub_10051B3EC((uint64_t)v7, (uint64_t)v8, &qword_101672BF0);
  if (!v9)
  {
    sub_100522F00((uint64_t)v8, &qword_101672BF0);
    goto LABEL_10;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_10:
    char v3 = 0;
    return v3 & 1;
  }
  if (v5 == 0x737961776C41 && v6 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    char v3 = 1;
  }
  else
  {
    char v3 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
  }
  return v3 & 1;
}

uint64_t sub_1007B7DBC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1005057FC(&qword_101680780);
  __chkstk_darwin(v4 - 8, v5);
  uint64_t v7 = (char *)v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1005057FC(&qword_101680788);
  __chkstk_darwin(v8, v9);
  uint64_t v11 = (char *)v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v7 = static VerticalAlignment.center.getter();
  *((void *)v7 + 1) = 0;
  unsigned char v7[16] = 1;
  uint64_t v12 = sub_1005057FC(&qword_101680790);
  sub_1007B7FE8(a1, (uint64_t)&v7[*(int *)(v12 + 44)]);
  GeometryProxy.size.getter();
  GeometryProxy.size.getter();
  static Alignment.center.getter();
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
  sub_100522E9C((uint64_t)v7, (uint64_t)v11, &qword_101680780);
  uint64_t v13 = &v11[*(int *)(v8 + 36)];
  long long v14 = v18[5];
  *((_OWORD *)v13 + 4) = v18[4];
  *((_OWORD *)v13 + 5) = v14;
  *((_OWORD *)v13 + 6) = v18[6];
  long long v15 = v18[1];
  *(_OWORD *)uint64_t v13 = v18[0];
  *((_OWORD *)v13 + 1) = v15;
  long long v16 = v18[3];
  *((_OWORD *)v13 + 2) = v18[2];
  *((_OWORD *)v13 + 3) = v16;
  sub_100522F00((uint64_t)v7, &qword_101680780);
  return sub_10051B3EC((uint64_t)v11, a2, &qword_101680788);
}

uint64_t sub_1007B7FE8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1005057FC(&qword_101680798);
  __chkstk_darwin(v4 - 8, v5);
  uint64_t v7 = (char *)v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1005057FC(&qword_1016807A0);
  __chkstk_darwin(v8 - 8, v9);
  uint64_t v11 = (char *)v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1005057FC(&qword_1016807A8);
  __chkstk_darwin(v12, v13);
  long long v15 = (char *)v31 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v7 = static HorizontalAlignment.center.getter();
  *((void *)v7 + 1) = 0;
  unsigned char v7[16] = 1;
  uint64_t v16 = sub_1005057FC(&qword_1016807B0);
  sub_1007B8358(a1, (uint64_t)&v7[*(int *)(v16 + 44)]);
  GeometryProxy.size.getter();
  double v18 = v17;
  char v19 = sub_1007B7C44();
  double v20 = 0.0;
  if (v19)
  {
    if (qword_10166F240 != -1) {
      swift_once();
    }
    double v20 = *(double *)&qword_1016806E8 + *(double *)&qword_1016806E8;
  }
  double v21 = v18 - v20;
  if (qword_10166F238 != -1) {
    swift_once();
  }
  uint64_t v22 = qword_1016806E0;
  if (v21 <= *(double *)&qword_1016806E0) {
    *(double *)&uint64_t v22 = v21;
  }
  double v23 = *(double *)&v22;
  uint64_t v24 = static Alignment.center.getter();
  sub_1007B5C30(0.0, 1, 0.0, 1, v23, 0, 0.0, 1, (uint64_t)v11, 0.0, 1, 0.0, 1, v24, v25, &qword_101680798, &qword_1016807A0);
  sub_100522F00((uint64_t)v7, &qword_101680798);
  GeometryProxy.size.getter();
  static Alignment.center.getter();
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
  sub_100522E9C((uint64_t)v11, (uint64_t)v15, &qword_1016807A0);
  uint64_t v26 = &v15[*(int *)(v12 + 36)];
  long long v27 = v31[5];
  *((_OWORD *)v26 + 4) = v31[4];
  *((_OWORD *)v26 + 5) = v27;
  *((_OWORD *)v26 + 6) = v31[6];
  long long v28 = v31[1];
  *(_OWORD *)uint64_t v26 = v31[0];
  *((_OWORD *)v26 + 1) = v28;
  long long v29 = v31[3];
  *((_OWORD *)v26 + 2) = v31[2];
  *((_OWORD *)v26 + 3) = v29;
  sub_100522F00((uint64_t)v11, &qword_1016807A0);
  return sub_10051B3EC((uint64_t)v15, a2, &qword_1016807A8);
}

uint64_t sub_1007B8358@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v147 = a2;
  uint64_t v3 = sub_1005057FC(&qword_1016807B8);
  __chkstk_darwin(v3 - 8, v4);
  uint64_t v148 = &v133[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v6, v7);
  uint64_t v146 = &v133[-v8];
  uint64_t v150 = sub_1005057FC(&qword_1016807C0);
  __chkstk_darwin(v150, v9);
  uint64_t v152 = (uint64_t *)&v133[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v151 = type metadata accessor for Text.TruncationMode();
  uint64_t v157 = *(void *)(v151 - 8);
  __chkstk_darwin(v151, v11);
  id v156 = &v133[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v149 = sub_1005057FC(&qword_1016807C8);
  __chkstk_darwin(v149, v13);
  id v144 = &v133[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v15, v16);
  uint64_t v154 = &v133[-v17];
  uint64_t v143 = sub_1005057FC(&qword_1016807D0);
  __chkstk_darwin(v143, v18);
  uint64_t v155 = &v133[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v20, v21);
  uint64_t v153 = &v133[-v22];
  uint64_t v23 = sub_1005057FC(&qword_1016807D8);
  __chkstk_darwin(v23 - 8, v24);
  unint64_t v145 = &v133[-((v25 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v26, v27);
  unsigned __int8 v158 = &v133[-v28];
  uint64_t v159 = a1;
  sub_1007B7758();
  uint64_t v29 = Image.init(systemName:)();
  if (qword_10166F1D0 != -1) {
    swift_once();
  }
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  uint64_t v30 = v177;
  char v31 = v178;
  char v32 = v180;
  uint64_t v141 = v181;
  unint64_t v142 = v179;
  uint64_t v140 = v182;
  if (qword_10166F1D8 != -1) {
    swift_once();
  }
  uint64_t v33 = qword_101680670;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v35 = qword_10166F1E0;
  swift_retain();
  if (v35 != -1) {
    swift_once();
  }
  uint64_t v36 = qword_101680678;
  uint64_t v37 = swift_getKeyPath();
  swift_retain();
  char v38 = static Edge.Set.bottom.getter();
  if (qword_10166F1E8 != -1) {
    swift_once();
  }
  EdgeInsets.init(_all:)();
  char v185 = v31;
  char v184 = v32;
  char v183 = 0;
  uint64_t v160 = v29;
  uint64_t v161 = v30;
  char v162 = v31;
  unint64_t v163 = v142;
  char v164 = v32;
  uint64_t v165 = v141;
  uint64_t v166 = v140;
  uint64_t v167 = KeyPath;
  uint64_t v168 = v33;
  uint64_t v169 = v37;
  uint64_t v170 = v36;
  char v171 = v38;
  uint64_t v172 = v39;
  uint64_t v173 = v40;
  uint64_t v174 = v41;
  uint64_t v175 = v42;
  char v176 = 0;
  sub_1005057FC(&qword_1016807E0);
  sub_1007B9900();
  View.accessibilityHidden(_:)();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v160 = sub_1007B64C0();
  uint64_t v161 = v43;
  unint64_t v142 = sub_10052E310();
  uint64_t v44 = Text.init<A>(_:)();
  uint64_t v46 = v45;
  char v48 = v47;
  if (qword_10166F1F0 != -1) {
    swift_once();
  }
  uint64_t v49 = Text.font(_:)();
  uint64_t v51 = v50;
  char v53 = v52;
  sub_1006A7D28(v44, v46, v48 & 1);
  swift_bridgeObjectRelease();
  if (qword_10166F1F8 != -1) {
    swift_once();
  }
  uint64_t v54 = Text.fontWeight(_:)();
  uint64_t v56 = v55;
  char v58 = v57;
  sub_1006A7D28(v49, v51, v53 & 1);
  swift_bridgeObjectRelease();
  if (qword_10166F200 != -1) {
    swift_once();
  }
  char v59 = v58 & 1;
  uint64_t v60 = Text.foregroundColor(_:)();
  uint64_t v135 = v61;
  uint64_t v136 = v62;
  LODWORD(v137) = v63;
  sub_1006A7D28(v54, v56, v59);
  swift_bridgeObjectRelease();
  int v134 = static Edge.Set.bottom.getter();
  if (qword_10166F208 != -1) {
    swift_once();
  }
  EdgeInsets.init(_all:)();
  uint64_t v65 = v64;
  uint64_t v67 = v66;
  uint64_t v69 = v68;
  uint64_t v71 = v70;
  uint64_t v72 = swift_getKeyPath();
  id v73 = v156;
  uint64_t v74 = v157;
  uint64_t v75 = v151;
  uint64_t v140 = *(void (**)(void, void, void))(v157 + 104);
  uint64_t v141 = v157 + 104;
  v140(v156, enum case for Text.TruncationMode.middle(_:), v151);
  uint64_t v76 = swift_getKeyPath();
  uint64_t v77 = v152;
  uint64_t v78 = (char *)v152 + *(int *)(v150 + 28);
  uint64_t v138 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v74 + 16);
  uint64_t v139 = v74 + 16;
  v138(v78, v73, v75);
  *uint64_t v77 = v76;
  BOOL v79 = v154;
  sub_100522E9C((uint64_t)v77, (uint64_t)&v154[*(int *)(v149 + 36)], &qword_1016807C0);
  uint64_t v81 = v135;
  uint64_t v80 = v136;
  *(void *)BOOL v79 = v60;
  *((void *)v79 + 1) = v81;
  char v82 = v137 & 1;
  v79[16] = v137 & 1;
  *((void *)v79 + 3) = v80;
  v79[32] = v134;
  *((void *)v79 + 5) = v65;
  *((void *)v79 + 6) = v67;
  *((void *)v79 + 7) = v69;
  *((void *)v79 + 8) = v71;
  v79[72] = 0;
  *((void *)v79 + 10) = v72;
  v79[88] = 1;
  sub_10073F0E0(v60, v81, v82);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_100522F00((uint64_t)v77, &qword_1016807C0);
  uint64_t v83 = *(void (**)(unsigned char *, uint64_t))(v74 + 8);
  uint64_t v157 = v74 + 8;
  uint64_t v137 = v83;
  v83(v156, v75);
  sub_1006A7D28(v60, v81, v82);
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v84 = swift_getKeyPath();
  uint64_t v85 = v155;
  sub_100522E9C((uint64_t)v79, (uint64_t)v155, &qword_1016807C8);
  uint64_t v86 = &v85[*(int *)(v143 + 36)];
  *(void *)uint64_t v86 = v84;
  *((void *)v86 + 1) = 3;
  v86[16] = 0;
  sub_100522F00((uint64_t)v79, &qword_1016807C8);
  sub_10051B3EC((uint64_t)v85, (uint64_t)v153, &qword_1016807D0);
  uint64_t v160 = sub_1007B6C48();
  uint64_t v161 = v87;
  uint64_t v88 = Text.init<A>(_:)();
  uint64_t v90 = v89;
  char v92 = v91;
  if (qword_10166F210 != -1) {
    swift_once();
  }
  uint64_t v93 = Text.font(_:)();
  uint64_t v95 = v94;
  char v97 = v96;
  sub_1006A7D28(v88, v90, v92 & 1);
  swift_bridgeObjectRelease();
  if (qword_10166F218 != -1) {
    swift_once();
  }
  uint64_t v98 = Text.fontWeight(_:)();
  uint64_t v100 = v99;
  char v102 = v101;
  sub_1006A7D28(v93, v95, v97 & 1);
  swift_bridgeObjectRelease();
  if (qword_10166F220 != -1) {
    swift_once();
  }
  uint64_t v103 = Text.foregroundColor(_:)();
  uint64_t v105 = v104;
  char v107 = v106;
  uint64_t v143 = v108;
  sub_1006A7D28(v98, v100, v102 & 1);
  swift_bridgeObjectRelease();
  LODWORD(v142) = static Edge.Set.bottom.getter();
  if (qword_10166F228 != -1) {
    swift_once();
  }
  char v109 = v107 & 1;
  EdgeInsets.init(_all:)();
  uint64_t v111 = v110;
  uint64_t v113 = v112;
  uint64_t v115 = v114;
  uint64_t v117 = v116;
  uint64_t v118 = swift_getKeyPath();
  uint64_t v119 = v156;
  uint64_t v120 = v151;
  v140(v156, enum case for Text.TruncationMode.tail(_:), v151);
  uint64_t v121 = swift_getKeyPath();
  uint64_t v122 = v152;
  v138((unsigned char *)v152 + *(int *)(v150 + 28), v119, v120);
  *uint64_t v122 = v121;
  uint64_t v123 = (uint64_t)v144;
  sub_100522E9C((uint64_t)v122, (uint64_t)&v144[*(int *)(v149 + 36)], &qword_1016807C0);
  *(void *)uint64_t v123 = v103;
  *(void *)(v123 + 8) = v105;
  *(unsigned char *)(v123 + 16) = v109;
  *(void *)(v123 + 24) = v143;
  *(unsigned char *)(v123 + 32) = v142;
  *(void *)(v123 + 40) = v111;
  *(void *)(v123 + 48) = v113;
  *(void *)(v123 + 56) = v115;
  *(void *)(v123 + 64) = v117;
  *(unsigned char *)(v123 + 72) = 0;
  *(void *)(v123 + 80) = v118;
  *(unsigned char *)(v123 + 88) = 1;
  sub_10073F0E0(v103, v105, v109);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_100522F00((uint64_t)v122, &qword_1016807C0);
  v137(v119, v120);
  sub_1006A7D28(v103, v105, v109);
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v124 = v154;
  sub_10051B3EC(v123, (uint64_t)v154, &qword_1016807C8);
  uint64_t v125 = v146;
  sub_1007B7330((uint64_t)v146);
  uint64_t v126 = v145;
  sub_100522E9C((uint64_t)v158, (uint64_t)v145, &qword_1016807D8);
  uint64_t v127 = v153;
  uint64_t v128 = v155;
  sub_100522E9C((uint64_t)v153, (uint64_t)v155, &qword_1016807D0);
  sub_100522E9C((uint64_t)v124, v123, &qword_1016807C8);
  char v129 = v148;
  sub_100522E9C((uint64_t)v125, (uint64_t)v148, &qword_1016807B8);
  uint64_t v130 = v147;
  sub_100522E9C((uint64_t)v126, v147, &qword_1016807D8);
  char v131 = (int *)sub_1005057FC(&qword_101680830);
  sub_100522E9C((uint64_t)v128, v130 + v131[12], &qword_1016807D0);
  sub_100522E9C(v123, v130 + v131[16], &qword_1016807C8);
  sub_100522E9C((uint64_t)v129, v130 + v131[20], &qword_1016807B8);
  sub_100522F00((uint64_t)v125, &qword_1016807B8);
  sub_100522F00((uint64_t)v124, &qword_1016807C8);
  sub_100522F00((uint64_t)v127, &qword_1016807D0);
  sub_100522F00((uint64_t)v158, &qword_1016807D8);
  sub_100522F00((uint64_t)v129, &qword_1016807B8);
  sub_100522F00(v123, &qword_1016807C8);
  sub_100522F00((uint64_t)v128, &qword_1016807D0);
  return sub_100522F00((uint64_t)v126, &qword_1016807D8);
}

uint64_t sub_1007B90A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (**a3)@<X0>(uint64_t a1@<X8>)@<X8>)
{
  uint64_t v5 = *(void *)(a1 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  __chkstk_darwin(a1 - 8, a2);
  sub_1007B9D14(v3, (uint64_t)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for CRLEmptyFolderView);
  unint64_t v7 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v8 = swift_allocObject();
  uint64_t result = sub_1007B9300((uint64_t)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v8 + v7);
  *a3 = sub_1007B9364;
  a3[1] = (uint64_t (*)@<X0>(uint64_t@<X8>))v8;
  return result;
}

uint64_t sub_1007B91A4()
{
  uint64_t v1 = *(void *)(type metadata accessor for CRLEmptyFolderView() - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(v1 + 64);
  uint64_t v5 = sub_1005057FC(&qword_101670F30);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v0 + v3, 5, v5))
  {
    uint64_t v6 = type metadata accessor for UUID();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v0 + v3, v6);
    swift_bridgeObjectRelease();
  }
  sub_1007B4C70();

  return _swift_deallocObject(v0, v3 + v4, v2 | 7);
}

uint64_t sub_1007B9300(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CRLEmptyFolderView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1007B9364@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(type metadata accessor for CRLEmptyFolderView() - 8);
  uint64_t v4 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  return sub_1007B7DBC(v4, a1);
}

uint64_t sub_1007B93E4()
{
  return ScrollView._alwaysBounceAxes.setter();
}

uint64_t sub_1007B947C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 - 8);
  uint64_t v4 = __chkstk_darwin(a1, a2);
  uint64_t v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10087606C(v4);
  sub_10087606C(v6);
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v6, a2);
}

uint64_t sub_1007B955C@<X0>(unsigned char *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_1007B95DC()
{
  return static Published.subscript.setter();
}

uint64_t sub_1007B9650@<X0>(void *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  a1[1] = v4;
  return result;
}

uint64_t sub_1007B96D0()
{
  return static Published.subscript.setter();
}

uint64_t sub_1007B9754@<X0>(unsigned char *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_1007B97D4()
{
  return static Published.subscript.setter();
}

uint64_t sub_1007B9848@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = EnvironmentValues.font.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1007B9874@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = EnvironmentValues.font.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1007B98A0()
{
  return EnvironmentValues.font.setter();
}

uint64_t sub_1007B98CC()
{
  return EnvironmentValues.font.setter();
}

unint64_t sub_1007B9900()
{
  unint64_t result = qword_1016807E8;
  if (!qword_1016807E8)
  {
    sub_100522D34(&qword_1016807E0);
    sub_1007B997C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016807E8);
  }
  return result;
}

unint64_t sub_1007B997C()
{
  unint64_t result = qword_1016807F0;
  if (!qword_1016807F0)
  {
    sub_100522D34(&qword_1016807F8);
    sub_1007B9A1C();
    sub_100523288(&qword_10167A5A8, &qword_10167A5B0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016807F0);
  }
  return result;
}

unint64_t sub_1007B9A1C()
{
  unint64_t result = qword_101680800;
  if (!qword_101680800)
  {
    sub_100522D34(&qword_101680808);
    sub_1007B9ABC();
    sub_100523288(&qword_101680820, &qword_101680828);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101680800);
  }
  return result;
}

unint64_t sub_1007B9ABC()
{
  unint64_t result = qword_101680810;
  if (!qword_101680810)
  {
    sub_100522D34(&qword_101680818);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101680810);
  }
  return result;
}

uint64_t sub_1007B9B38()
{
  return EnvironmentValues.truncationMode.getter();
}

uint64_t sub_1007B9B5C()
{
  return EnvironmentValues.truncationMode.getter();
}

uint64_t sub_1007B9B80(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Text.TruncationMode();
  __n128 v4 = __chkstk_darwin(v2, v3);
  (*(void (**)(char *, uint64_t, __n128))(v6 + 16))((char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v4);
  return EnvironmentValues.truncationMode.setter();
}

uint64_t sub_1007B9C4C@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = EnvironmentValues.lineLimit.getter();
  *(void *)a1 = result;
  *(unsigned char *)(a1 + 8) = v3 & 1;
  return result;
}

uint64_t sub_1007B9C80@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = EnvironmentValues.lineLimit.getter();
  *(void *)a1 = result;
  *(unsigned char *)(a1 + 8) = v3 & 1;
  return result;
}

uint64_t sub_1007B9CB4()
{
  return EnvironmentValues.lineLimit.setter();
}

uint64_t sub_1007B9CE4()
{
  return EnvironmentValues.lineLimit.setter();
}

uint64_t sub_1007B9D14(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

unint64_t sub_1007B9D7C()
{
  unint64_t result = qword_101680838;
  if (!qword_101680838)
  {
    type metadata accessor for CRLEmptyFolderViewDataSource();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101680838);
  }
  return result;
}

uint64_t sub_1007B9DE4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_1007B9E4C()
{
  unint64_t result = qword_101680840;
  if (!qword_101680840)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101680840);
  }
  return result;
}

uint64_t sub_1007B9EA0()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1007B9F30(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v5 = *(_DWORD *)(v4 + 80);
  if (v5 <= 7
    && *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) <= 0x18uLL
    && (*(_DWORD *)(v4 + 80) & 0x100000) == 0)
  {
    (*(void (**)(uint64_t *))(v4 + 16))(a1);
  }
  else
  {
    uint64_t v8 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (uint64_t *)(v8 + ((v5 + 16) & ~v5));
    swift_retain();
  }
  return v3;
}

uint64_t sub_1007B9FE8(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(*(void *)(*(void *)(a2 + 16) - 8) + 8))();
}

uint64_t sub_1007BA014(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a1;
}

uint64_t sub_1007BA064(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a1;
}

uint64_t sub_1007BA0B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a1;
}

uint64_t sub_1007BA104(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a1;
}

uint64_t sub_1007BA154(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(void *)(v4 + 64);
  if (!a2) {
    return 0;
  }
  unsigned int v7 = a2 - v5;
  if (a2 <= v5) {
    goto LABEL_19;
  }
  char v8 = 8 * v6;
  if (v6 <= 3)
  {
    unsigned int v10 = ((v7 + ~(-1 << v8)) >> v8) + 1;
    if (HIWORD(v10))
    {
      int v9 = *(_DWORD *)((char *)a1 + v6);
      if (!v9) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v10 > 0xFF)
    {
      int v9 = *(unsigned __int16 *)((char *)a1 + v6);
      if (!*(unsigned __int16 *)((char *)a1 + v6)) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v10 < 2)
    {
LABEL_19:
      if (v5) {
        return (*(uint64_t (**)(void))(v4 + 48))();
      }
      return 0;
    }
  }
  int v9 = *((unsigned __int8 *)a1 + v6);
  if (!*((unsigned char *)a1 + v6)) {
    goto LABEL_19;
  }
LABEL_11:
  int v11 = (v9 - 1) << v8;
  if (v6 > 3) {
    int v11 = 0;
  }
  if (v6)
  {
    if (v6 > 3) {
      LODWORD(v6) = 4;
    }
    switch((int)v6)
    {
      case 2:
        LODWORD(v6) = *a1;
        break;
      case 3:
        LODWORD(v6) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v6) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v6) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v5 + (v6 | v11) + 1;
}

void sub_1007BA2B0(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  size_t v8 = *(void *)(v6 + 64);
  BOOL v9 = a3 >= v7;
  unsigned int v10 = a3 - v7;
  if (v10 != 0 && v9)
  {
    if (v8 <= 3)
    {
      unsigned int v14 = ((v10 + ~(-1 << (8 * v8))) >> (8 * v8)) + 1;
      if (HIWORD(v14))
      {
        int v11 = 4;
      }
      else if (v14 >= 0x100)
      {
        int v11 = 2;
      }
      else
      {
        int v11 = v14 > 1;
      }
    }
    else
    {
      int v11 = 1;
    }
  }
  else
  {
    int v11 = 0;
  }
  if (v7 < a2)
  {
    unsigned int v12 = ~v7 + a2;
    if (v8 < 4)
    {
      int v13 = (v12 >> (8 * v8)) + 1;
      if (v8)
      {
        int v15 = v12 & ~(-1 << (8 * v8));
        bzero(a1, v8);
        if (v8 == 3)
        {
          *(_WORD *)a1 = v15;
          a1[2] = BYTE2(v15);
        }
        else if (v8 == 2)
        {
          *(_WORD *)a1 = v15;
        }
        else
        {
          *a1 = v15;
        }
      }
    }
    else
    {
      bzero(a1, v8);
      *(_DWORD *)a1 = v12;
      int v13 = 1;
    }
    switch(v11)
    {
      case 1:
        a1[v8] = v13;
        return;
      case 2:
        *(_WORD *)&a1[v8] = v13;
        return;
      case 3:
        goto LABEL_34;
      case 4:
        *(_DWORD *)&a1[v8] = v13;
        return;
      default:
        return;
    }
  }
  switch(v11)
  {
    case 1:
      a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 2:
      *(_WORD *)&a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 3:
LABEL_34:
      __break(1u);
      JUMPOUT(0x1007BA4C8);
    case 4:
      *(_DWORD *)&a1[v8] = 0;
      goto LABEL_20;
    default:
LABEL_20:
      if (a2)
      {
LABEL_21:
        uint64_t v16 = *(void (**)(void))(v6 + 56);
        v16();
      }
      return;
  }
}

uint64_t type metadata accessor for BouncelessScrollView()
{
  return sub_100568E70();
}

uint64_t sub_1007BA508()
{
  return sub_100523288(&qword_1016808D0, &qword_1016808D8);
}

uint64_t sub_1007BA544()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1007BA588()
{
  return sub_1007B947C(*(void *)(v0 + 32), *(void *)(v0 + 16));
}

uint64_t sub_1007BA594()
{
  type metadata accessor for ScrollView();

  return swift_getWitnessTable();
}

uint64_t sub_1007BA5DC(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1007BA638(uint64_t a1)
{
  return a1;
}

uint64_t sub_1007BA66C(uint64_t a1)
{
  return a1;
}

uint64_t sub_1007BA698(uint64_t a1)
{
  return a1;
}

void *CRLChangeNotifier.publisher<A>(for:phase:)()
{
  id v1 = v0;
  swift_unknownObjectRetain();
  return v0;
}

{
  void *v0;
  id v1;

  id v1 = v0;
  return v0;
}

id CRLChangeNotifier.publisherForAllChanges(phase:)()
{
  sub_10057BCD8();
  return v0;
}

void *CRLChangeNotifier.publisherForChanges<A>(of:)()
{
  id v1 = v0;
  swift_unknownObjectRetain();
  return v0;
}

BOOL static CRLChangeNotifier.Phase.__derived_enum_equals(_:_:)(int a1, int a2)
{
  return ((a2 ^ a1) & 1) == 0;
}

void CRLChangeNotifier.Phase.hash(into:)(uint64_t a1, char a2)
{
}

Swift::Int CRLChangeNotifier.Phase.hashValue.getter(char a1)
{
  return Hasher._finalize()();
}

uint64_t CRLChangeNotifier.ChangeRecordPublisher.source.getter(uint64_t a1, uint64_t a2, char a3)
{
  return a2;
}

uint64_t sub_1007BA890(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0) {
    return swift_unknownObjectRetain();
  }
  return result;
}

uint64_t CRLChangeNotifier.ChangeRecordPublisher.phase.getter(uint64_t a1, uint64_t a2, unsigned int a3)
{
  return (a3 >> 8) & 1;
}

uint64_t CRLChangeNotifier.ChangeRecordPublisher.receive<A>(subscriber:)(uint64_t a1, void *a2, uint64_t a3, __int16 a4)
{
  uint64_t v8 = _s24ChangeRecordSubscriptionCMa();
  id v9 = a2;
  sub_1007BA890(a3, a4 & 1);
  id v10 = sub_1007BC188(v9, a3, a4 & 1, HIBYTE(a4) & 1, a1);
  v12[3] = v8;
  void v12[4] = swift_getWitnessTable();
  v12[0] = v10;
  dispatch thunk of Subscriber.receive(subscription:)();
  return _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v12);
}

uint64_t _s24ChangeRecordSubscriptionCMa()
{
  return sub_100568E70();
}

uint64_t sub_1007BA9A4(uint64_t a1)
{
  if (*(unsigned char *)(v1 + 17)) {
    __int16 v2 = 256;
  }
  else {
    __int16 v2 = 0;
  }
  return CRLChangeNotifier.ChangeRecordPublisher.receive<A>(subscriber:)(a1, *(void **)v1, *(void *)(v1 + 8), v2 | *(unsigned __int8 *)(v1 + 16));
}

uint64_t CRLChangeNotifier.ObjectDidChangePublisher.object.getter()
{
  return swift_unknownObjectRetain();
}

uint64_t CRLChangeNotifier.ObjectDidChangePublisher.receive<A>(subscriber:)(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v6 = (objc_class *)_s27ObjectDidChangeSubscriptionCMa();
  swift_unknownObjectRetain();
  id v7 = a2;
  id v8 = objc_allocWithZone(v6);
  id v9 = sub_1007BBD70(v7, a3, 0, a1);
  v11[3] = v6;
  v11[4] = swift_getWitnessTable();
  v11[0] = v9;
  dispatch thunk of Subscriber.receive(subscription:)();
  return _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v11);
}

uint64_t sub_1007BAABC(uint64_t a1)
{
  return CRLChangeNotifier.ObjectDidChangePublisher.receive<A>(subscriber:)(a1, *(void **)v1, *(void *)(v1 + 8));
}

uint64_t sub_1007BAAD0()
{
  uint64_t v1 = (char *)v0 + *(void *)((swift_isaMask & *v0) + 0x80);
  swift_beginAccess();
  return *(void *)v1;
}

void sub_1007BAB34(uint64_t a1)
{
  uint64_t v2 = *(void *)((swift_isaMask & *v1) + 0x88);
  uint64_t v3 = *(void **)((char *)v1 + v2);
  *(void *)((char *)v1 + v2) = a1;
}

uint64_t sub_1007BAB64(uint64_t a1, char a2)
{
  uint64_t v3 = (char *)v2 + *(void *)((swift_isaMask & *v2) + 0x90);
  uint64_t v4 = *(void *)v3;
  *(void *)uint64_t v3 = a1;
  unsigned __int8 v5 = v3[8];
  v3[8] = a2;
  return sub_1007BC9A0(v4, v5);
}

uint64_t sub_1007BABA8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = (char *)v1 + *(void *)((swift_isaMask & *v1) + 0x98);
  swift_beginAccess();
  uint64_t v4 = type metadata accessor for Optional();
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(void *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_1007BAC68(uint64_t a1)
{
  uint64_t v3 = (char *)v1 + *(void *)((swift_isaMask & *v1) + 0x98);
  swift_beginAccess();
  uint64_t v4 = type metadata accessor for Optional();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(v3, a1, v4);
  return swift_endAccess();
}

void sub_1007BAD30(uint64_t a1)
{
  uint64_t v2 = v1;
  v27[1] = a1;
  uint64_t v3 = swift_isaMask & *v1;
  v27[0] = v3;
  uint64_t v4 = *(void *)(v3 + 96);
  uint64_t v5 = type metadata accessor for Optional();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5, v7);
  id v9 = (char *)v27 - v8;
  uint64_t v10 = *(void *)(v4 - 8);
  __chkstk_darwin(v11, v12);
  unsigned int v14 = (char *)v27 - v13;
  uint64_t v15 = *(void *)((char *)v2 + *(void *)(v3 + 112));
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v15 + 16));
  if (!*(void *)((char *)v2 + *(void *)((swift_isaMask & *v2) + 0x88))) {
    goto LABEL_4;
  }
  sub_1007BABA8((uint64_t)v9);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v9, 1, v4) == 1)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
LABEL_4:
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(v15 + 16));
    return;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v14, v9, v4);
  uint64_t v16 = (void *)((char *)v2 + *(void *)((swift_isaMask & *v2) + 0x80));
  swift_beginAccess();
  uint64_t v17 = *v16;
  static Subscribers.Demand.unlimited.getter();
  if (static Subscribers.Demand.== infix(_:_:)()) {
    goto LABEL_8;
  }
  if (v17 < 0)
  {
    __break(1u);
    goto LABEL_35;
  }
  if (v17)
  {
LABEL_8:
    uint64_t v18 = (void *)((char *)v2 + *(void *)((swift_isaMask & *v2) + 0x80));
    swift_beginAccess();
    uint64_t v19 = *v18;
    static Subscribers.Demand.unlimited.getter();
    if ((static Subscribers.Demand.== infix(_:_:)() & 1) == 0)
    {
      static Subscribers.Demand.unlimited.getter();
      if (static Subscribers.Demand.== infix(_:_:)())
      {
        uint64_t v20 = static Subscribers.Demand.unlimited.getter();
      }
      else
      {
        if (v19 < 0)
        {
LABEL_37:
          __break(1u);
          goto LABEL_38;
        }
        if (!v19)
        {
LABEL_38:
          __break(1u);
          goto LABEL_39;
        }
        uint64_t v20 = v19 - 1;
      }
      *uint64_t v18 = v20;
    }
    swift_endAccess();
  }
  uint64_t v21 = *(os_unfair_lock_s **)(v15 + 16);
  os_unfair_lock_unlock(v21);
  static Subscribers.Demand.unlimited.getter();
  if (static Subscribers.Demand.== infix(_:_:)()) {
    goto LABEL_19;
  }
  if (v17 < 0)
  {
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
  if (!v17) {
    goto LABEL_32;
  }
LABEL_19:
  os_unfair_recursive_lock_lock_with_options();
  uint64_t v22 = dispatch thunk of Subscriber.receive(_:)();
  os_unfair_recursive_lock_unlock();
  static Subscribers.Demand.unlimited.getter();
  if (static Subscribers.Demand.== infix(_:_:)())
  {
LABEL_22:
    os_unfair_lock_lock(v21);
    uint64_t v23 = (void *)((char *)v2 + *(void *)((swift_isaMask & *v2) + 0x80));
    swift_beginAccess();
    uint64_t v24 = *v23;
    static Subscribers.Demand.unlimited.getter();
    if (static Subscribers.Demand.== infix(_:_:)())
    {
LABEL_31:
      swift_endAccess();
      os_unfair_lock_unlock(v21);
      goto LABEL_32;
    }
    static Subscribers.Demand.unlimited.getter();
    char v25 = static Subscribers.Demand.== infix(_:_:)();
    uint64_t v26 = static Subscribers.Demand.unlimited.getter();
    if (v25)
    {
LABEL_30:
      *uint64_t v23 = v26;
      goto LABEL_31;
    }
    if (static Subscribers.Demand.== infix(_:_:)())
    {
LABEL_28:
      uint64_t v26 = static Subscribers.Demand.unlimited.getter();
      goto LABEL_30;
    }
    if (((v24 | v22) & 0x8000000000000000) == 0)
    {
      uint64_t v26 = v24 + v22;
      if (!__OFADD__(v24, v22))
      {
        if ((v26 & 0x8000000000000000) == 0) {
          goto LABEL_30;
        }
LABEL_40:
        __break(1u);
        return;
      }
      goto LABEL_28;
    }
LABEL_39:
    __break(1u);
    goto LABEL_40;
  }
  if (v22 < 0) {
    goto LABEL_36;
  }
  if (v22) {
    goto LABEL_22;
  }
LABEL_32:
  (*(void (**)(char *, uint64_t))(v10 + 8))(v14, v4);
}

void sub_1007BB1B8(uint64_t a1)
{
  uint64_t v3 = *(os_unfair_lock_s **)(*(void *)((char *)v1 + *(void *)((swift_isaMask & *v1) + 0x70)) + 16);
  os_unfair_lock_lock(v3);
  uint64_t v4 = (void *)((char *)v1 + *(void *)((swift_isaMask & *v1) + 0x80));
  swift_beginAccess();
  uint64_t v5 = *v4;
  static Subscribers.Demand.unlimited.getter();
  if (static Subscribers.Demand.== infix(_:_:)()) {
    goto LABEL_10;
  }
  static Subscribers.Demand.unlimited.getter();
  char v6 = static Subscribers.Demand.== infix(_:_:)();
  uint64_t v7 = static Subscribers.Demand.unlimited.getter();
  if (v6)
  {
LABEL_9:
    *uint64_t v4 = v7;
LABEL_10:
    swift_endAccess();
    os_unfair_lock_unlock(v3);
    return;
  }
  if (static Subscribers.Demand.== infix(_:_:)()) {
    goto LABEL_7;
  }
  if ((v5 | a1) < 0)
  {
    __break(1u);
    goto LABEL_12;
  }
  uint64_t v7 = v5 + a1;
  if (__OFADD__(v5, a1))
  {
LABEL_7:
    uint64_t v7 = static Subscribers.Demand.unlimited.getter();
    goto LABEL_9;
  }
  if ((v7 & 0x8000000000000000) == 0) {
    goto LABEL_9;
  }
LABEL_12:
  __break(1u);
}

void sub_1007BB2D8()
{
  uint64_t v1 = swift_isaMask & *v0;
  uint64_t v2 = *(void *)(v1 + 0x60);
  uint64_t v3 = type metadata accessor for Optional();
  __chkstk_darwin(v3 - 8, v4);
  char v6 = (char *)&v20 - v5;
  uint64_t v7 = *(void *)((char *)v0 + *(void *)(v1 + 112));
  uint64_t v8 = *(os_unfair_lock_s **)(v7 + 16);
  os_unfair_lock_lock(v8);
  id v9 = *(void **)((char *)v0 + *(void *)((swift_isaMask & *v0) + 0x88));
  if (!v9
    || (uint64_t v10 = (char *)v0 + *(void *)((swift_isaMask & *v0) + 0x90), v11 = v10[8], v11 == 255))
  {
    uint64_t v19 = *(os_unfair_lock_s **)(v7 + 16);
    os_unfair_lock_unlock(v19);
  }
  else
  {
    uint64_t v12 = *(void *)v10;
    id v13 = v9;
    sub_1007BC988(v12, v11);
    uint64_t v14 = *(void *)((swift_isaMask & *v0) + 0x88);
    uint64_t v15 = *(void **)((char *)v0 + v14);
    *(void *)((char *)v0 + v14) = 0;

    uint64_t v16 = (char *)v0 + *(void *)((swift_isaMask & *v0) + 0x90);
    uint64_t v17 = *(void *)v16;
    *(void *)uint64_t v16 = 0;
    unsigned __int8 v18 = v16[8];
    v16[8] = -1;
    sub_1007BC9A0(v17, v18);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(v6, 1, 1, v2);
    sub_1007BAC68((uint64_t)v6);
    os_unfair_lock_unlock(v8);
    if (v11)
    {
      [v13 removeObserver:v0 forChangeSourceOfClass:swift_getObjCClassFromMetadata()];
    }
    else
    {
      sub_1007BA890(v12, 0);
      [v13 removeObserver:v0 forChangeSource:v12];

      sub_1007BC9A0(v12, v11);
      sub_1007BC9A0(v12, v11);
    }
  }
}

void sub_1007BB560()
{
}

id sub_1007BB5CC()
{
  long long v2 = *(_OWORD *)((swift_isaMask & *v0) + 0x50);
  long long v3 = *(_OWORD *)((swift_isaMask & *v0) + 0x60);
  v4.id receiver = v0;
  v4.Class super_class = (Class)_s30BaseChangeNotifierSubscriptionCMa();
  return [super dealloc:v2, v3];
}

uint64_t sub_1007BB644(void *a1)
{
  swift_release();
  swift_release();

  long long v2 = (char *)a1 + *(void *)((swift_isaMask & *a1) + 0x90);
  sub_1007BC9A0(*(void *)v2, v2[8]);
  long long v3 = (char *)a1 + *(void *)((swift_isaMask & *a1) + 0x98);
  uint64_t v4 = type metadata accessor for Optional();
  uint64_t v5 = *(uint64_t (**)(char *, uint64_t))(*(void *)(v4 - 8) + 8);

  return v5(v3, v4);
}

void sub_1007BB788(uint64_t a1)
{
}

void sub_1007BB7AC()
{
}

unint64_t sub_1007BB7D0(unint64_t result, uint64_t a2)
{
  if (*((unsigned char *)v2 + *(void *)((swift_isaMask & *v2) + 0x138))) {
    return result;
  }
  unint64_t v4 = result;
  if (result >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = _CocoaArrayWrapper.endIndex.getter();
    uint64_t v5 = result;
    if (result)
    {
LABEL_4:
      if (v5 < 1)
      {
        __break(1u);
      }
      else
      {
        uint64_t v6 = 0;
        do
        {
          if ((v4 & 0xC000000000000001) != 0) {
            id v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else {
            id v7 = *(id *)(v4 + 8 * v6 + 32);
          }
          uint64_t v8 = v7;
          ++v6;
          sub_100522D7C(a2, (uint64_t)v11);
          swift_dynamicCast();
          v10[0] = v10[2];
          v10[1] = v8;
          id v9 = v8;
          sub_1007BAD30((uint64_t)v10);
          swift_unknownObjectRelease();
        }
        while (v5 != v6);
        return swift_bridgeObjectRelease();
      }
      return result;
    }
  }
  else
  {
    uint64_t v5 = *(void *)((result & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v5) {
      goto LABEL_4;
    }
  }

  return swift_bridgeObjectRelease();
}

uint64_t sub_1007BB990(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1007BBB84(a1, a2, a3, a4, (void (*)(uint64_t, unsigned char *))sub_1007BB7D0);
}

unint64_t sub_1007BB9A8(unint64_t result, uint64_t a2)
{
  if (*((unsigned char *)v2 + *(void *)((swift_isaMask & *v2) + 0x138)) != 1) {
    return result;
  }
  unint64_t v4 = result;
  if (result >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = _CocoaArrayWrapper.endIndex.getter();
    uint64_t v5 = result;
    if (result)
    {
LABEL_4:
      if (v5 < 1)
      {
        __break(1u);
      }
      else
      {
        uint64_t v6 = 0;
        do
        {
          if ((v4 & 0xC000000000000001) != 0) {
            id v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else {
            id v7 = *(id *)(v4 + 8 * v6 + 32);
          }
          uint64_t v8 = v7;
          ++v6;
          sub_100522D7C(a2, (uint64_t)v11);
          swift_dynamicCast();
          v10[0] = v10[2];
          v10[1] = v8;
          id v9 = v8;
          sub_1007BAD30((uint64_t)v10);
          swift_unknownObjectRelease();
        }
        while (v5 != v6);
        return swift_bridgeObjectRelease();
      }
      return result;
    }
  }
  else
  {
    uint64_t v5 = *(void *)((result & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v5) {
      goto LABEL_4;
    }
  }

  return swift_bridgeObjectRelease();
}

uint64_t sub_1007BBB6C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1007BBB84(a1, a2, a3, a4, (void (*)(uint64_t, unsigned char *))sub_1007BB9A8);
}

uint64_t sub_1007BBB84(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t, unsigned char *))
{
  type metadata accessor for CRLChangeRecord();
  uint64_t v7 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
  swift_unknownObjectRetain();
  id v8 = a1;
  _bridgeAnyObjectToAny(_:)();
  swift_unknownObjectRelease();
  a5(v7, v10);

  swift_bridgeObjectRelease();
  return _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v10);
}

void sub_1007BBC28()
{
  uint64_t v1 = (char *)v0 + *(void *)((swift_isaMask & *v0) + 0x90);
  unsigned __int8 v2 = v1[8];
  if ((v2 & 1) == 0)
  {
    uint64_t v3 = *(void *)v1;
    uint64_t v5 = v3;
    sub_1007BC988(v3, v2);
    sub_1007BA890(v3, 0);
    if (swift_dynamicCast())
    {
      uint64_t v5 = v4;
      sub_1007BAD30((uint64_t)&v5);
      sub_1007BC9A0(v3, v2);
      swift_unknownObjectRelease();
    }
    else
    {
      sub_1007BC9A0(v3, v2);
    }
  }
}

void sub_1007BBD28(void *a1)
{
  id v1 = a1;
  sub_1007BBC28();
}

id sub_1007BBD70(void *a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v39 = a4;
  int v43 = a3;
  id v36 = a1;
  uint64_t v37 = a2;
  uint64_t v42 = swift_isaMask & *v4;
  uint64_t v40 = v42;
  uint64_t v5 = *(void *)(v42 + 96);
  uint64_t v41 = type metadata accessor for Optional();
  uint64_t v38 = *(void *)(v41 - 8);
  __chkstk_darwin(v41, v6);
  uint64_t v35 = (char *)&v34 - v7;
  uint64_t v8 = *(void *)(v42 + 112);
  type metadata accessor for CRLUnfairLock();
  uint64_t v9 = swift_allocObject();
  uint64_t v10 = v4;
  int v11 = (_DWORD *)swift_slowAlloc();
  *int v11 = 0;
  *(void *)(v9 + 16) = v11;
  atomic_thread_fence(memory_order_acq_rel);
  *(void *)((char *)v4 + v8) = v9;
  uint64_t v12 = *(void *)((swift_isaMask & *v10) + 0x78);
  type metadata accessor for CRLUnfairRecursiveLock();
  uint64_t v13 = swift_allocObject();
  uint64_t v14 = (void *)swift_slowAlloc();
  *uint64_t v14 = 0;
  *(void *)(v13 + 16) = v14;
  atomic_thread_fence(memory_order_acq_rel);
  *(void *)((char *)v10 + v12) = v13;
  uint64_t v15 = *(void *)((swift_isaMask & *v10) + 0x88);
  *(void *)((char *)v10 + v15) = 0;
  uint64_t v16 = (char *)v10 + *(void *)((swift_isaMask & *v10) + 0x90);
  *(void *)uint64_t v16 = 0;
  v16[8] = -1;
  uint64_t v17 = (char *)v10 + *(void *)((swift_isaMask & *v10) + 0x98);
  uint64_t v18 = *(void *)(v5 - 8);
  uint64_t v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v18 + 56);
  v19(v17, 1, 1, v5);
  *(void *)((char *)v10 + *(void *)((swift_isaMask & *v10) + 0x80)) = 0;
  uint64_t v20 = *(void **)((char *)v10 + v15);
  id v21 = v36;
  *(void *)((char *)v10 + v15) = v36;
  id v36 = v21;

  uint64_t v22 = *(void *)v16;
  uint64_t v23 = v37;
  *(void *)uint64_t v16 = v37;
  char v24 = v43 & 1;
  LOBYTE(v15) = v16[8];
  v16[8] = v43 & 1;
  uint64_t v25 = v23;
  sub_1007BA890(v23, v24);
  sub_1007BC9A0(v22, v15);
  uint64_t v26 = v35;
  (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))(v35, v39, v5);
  v19(v26, 0, 1, v5);
  swift_beginAccess();
  (*(void (**)(char *, char *, uint64_t))(v38 + 40))(v17, v26, v41);
  swift_endAccess();

  uint64_t v27 = *(void *)(v40 + 104);
  long long v44 = *(_OWORD *)(v42 + 80);
  uint64_t v45 = v5;
  uint64_t v46 = v27;
  uint64_t v28 = (objc_class *)_s30BaseChangeNotifierSubscriptionCMa();
  v47.id receiver = v10;
  v47.Class super_class = v28;
  id v29 = [super init];
  if (v43)
  {
    ObjCClassFromMetadatdouble a = swift_getObjCClassFromMetadata();
    id v31 = v36;
    [v36 addObserver:v29 forChangeSourceOfClass:ObjCClassFromMetadata];
  }
  else
  {
    id v32 = v36;
    [v36 addObserver:v29 forChangeSource:v25];

    sub_1007BC3D4(v25, 0);
  }
  return v29;
}

id sub_1007BC188(void *a1, uint64_t a2, char a3, char a4, uint64_t a5)
{
  int v9 = a3 & 1;
  char v10 = a4 & 1;
  int v11 = objc_allocWithZone(v5);
  v11[*(void *)((swift_isaMask & *(void *)v11) + 0x138)] = v10;
  return sub_1007BBD70(a1, a2, v9, a5);
}

uint64_t _s27ObjectDidChangeSubscriptionCMa()
{
  return sub_100568E70();
}

unint64_t sub_1007BC22C()
{
  unint64_t result = qword_1016808F8;
  if (!qword_1016808F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016808F8);
  }
  return result;
}

void *sub_1007BC280()
{
  return &protocol witness table for Never;
}

unsigned char *_s5PhaseOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1007BC358);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLChangeNotifier.Phase()
{
  return &type metadata for CRLChangeNotifier.Phase;
}

uint64_t sub_1007BC394(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 8);
  char v3 = *(unsigned char *)(a1 + 16);

  return sub_1007BC3D4(v2, v3);
}

uint64_t sub_1007BC3D4(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0) {
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1007BC3E0(uint64_t a1, uint64_t a2)
{
  unsigned int v4 = *(void **)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  char v6 = *(unsigned char *)(a2 + 16);
  id v7 = v4;
  sub_1007BA890(v5, v6);
  *(void *)(a1 + 8) = v5;
  *(unsigned char *)(a1 + 16) = v6;
  *(unsigned char *)(a1 + 17) = *(unsigned char *)(a2 + 17);
  return a1;
}

uint64_t sub_1007BC43C(uint64_t a1, uint64_t a2)
{
  unsigned int v4 = *(void **)a2;
  uint64_t v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  uint64_t v7 = *(void *)(a2 + 8);
  char v8 = *(unsigned char *)(a2 + 16);
  sub_1007BA890(v7, v8);
  uint64_t v9 = *(void *)(a1 + 8);
  char v10 = *(unsigned char *)(a1 + 16);
  *(void *)(a1 + 8) = v7;
  *(unsigned char *)(a1 + 16) = v8;
  sub_1007BC3D4(v9, v10);
  *(unsigned char *)(a1 + 17) = *(unsigned char *)(a2 + 17);
  return a1;
}

__n128 sub_1007BC4B0(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u16[0] = a2[1].n128_u16[0];
  *a1 = result;
  return result;
}

uint64_t sub_1007BC4C4(uint64_t a1, uint64_t a2)
{
  unsigned int v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  char v5 = *(unsigned char *)(a2 + 16);
  uint64_t v6 = *(void *)(a1 + 8);
  char v7 = *(unsigned char *)(a1 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = v5;
  sub_1007BC3D4(v6, v7);
  *(unsigned char *)(a1 + 17) = *(unsigned char *)(a2 + 17);
  return a1;
}

uint64_t sub_1007BC520(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 18)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_1007BC568(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_WORD *)(result + 16) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 18) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 18) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t type metadata accessor for CRLChangeNotifier.ChangeRecordPublisher()
{
  return sub_100568E70();
}

uint64_t sub_1007BC5C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_allocateGenericValueMetadata(a1, a2, a3, 8);
}

uint64_t sub_1007BC5C8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  char v4 = *(unsigned char *)(a2 + 8);
  sub_1007BA890(*(void *)a2, v4);
  *(void *)a1 = v3;
  *(unsigned char *)(a1 + 8) = v4;
  return a1;
}

uint64_t sub_1007BC610(uint64_t a1)
{
  return sub_1007BC3D4(*(void *)a1, *(unsigned char *)(a1 + 8));
}

uint64_t sub_1007BC620(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  char v4 = *(unsigned char *)(a2 + 8);
  sub_1007BA890(*(void *)a2, v4);
  uint64_t v5 = *(void *)a1;
  char v6 = *(unsigned char *)(a1 + 8);
  *(void *)a1 = v3;
  *(unsigned char *)(a1 + 8) = v4;
  sub_1007BC3D4(v5, v6);
  return a1;
}

uint64_t sub_1007BC674(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  char v4 = *((unsigned char *)a2 + 8);
  uint64_t v5 = *(void *)a1;
  char v6 = *(unsigned char *)(a1 + 8);
  *(void *)a1 = v3;
  *(unsigned char *)(a1 + 8) = v4;
  sub_1007BC3D4(v5, v6);
  return a1;
}

uint64_t type metadata accessor for CRLChangeNotifier.ChangeRecordPublisher.Source()
{
  return sub_100568E70();
}

void *sub_1007BC6CC(void *a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v4;
  id v5 = v3;
  swift_unknownObjectRetain();
  return a1;
}

uint64_t sub_1007BC704(id *a1)
{
  return swift_unknownObjectRelease();
}

uint64_t sub_1007BC740(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  id v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  return a1;
}

id *sub_1007BC79C(id *a1, _OWORD *a2)
{
  *(_OWORD *)a1 = *a2;
  swift_unknownObjectRelease();
  return a1;
}

uint64_t type metadata accessor for CRLChangeNotifier.ObjectDidChangePublisher()
{
  return sub_100568E70();
}

uint64_t sub_1007BC7F4()
{
  uint64_t result = type metadata accessor for Optional();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t _s30BaseChangeNotifierSubscriptionCMa()
{
  return swift_getGenericMetadata();
}

uint64_t sub_1007BC8D4()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1007BC918()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1007BC950()
{
  return swift_getWitnessTable();
}

uint64_t sub_1007BC96C()
{
  return swift_getWitnessTable();
}

uint64_t sub_1007BC988(uint64_t result, unsigned __int8 a2)
{
  if (a2 != 255) {
    return sub_1007BA890(result, a2 & 1);
  }
  return result;
}

uint64_t sub_1007BC9A0(uint64_t result, unsigned __int8 a2)
{
  if (a2 != 255) {
    return sub_1007BC3D4(result, a2 & 1);
  }
  return result;
}

void sub_1007BC9B8()
{
}

id sub_1007BC9F0()
{
  uint64_t v1 = type metadata accessor for CRLUSDZAssetDataStruct(0);
  id result = (id)__chkstk_darwin(v1, v2);
  id v5 = (char *)&v6 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*((unsigned char *)v0 + OBJC_IVAR____TtC8Freeform13CRLUSDZLayout_orientationSource + 16))
  {
    id result = [v0 info];
    if (result)
    {
      type metadata accessor for CRLUSDZItem();
      swift_dynamicCastClassUnconditional();
      swift_beginAccess();
      swift_retain();
      sub_1005057FC((uint64_t *)&unk_10167D2A0);
      CRRegister.wrappedValue.getter();
      swift_endAccess();
      swift_release();
      long long v6 = *(_OWORD *)&v5[*(int *)(v1 + 24)];
      sub_1007BED78((uint64_t)v5, type metadata accessor for CRLUSDZAssetDataStruct);
      return (id)swift_unknownObjectRelease();
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

id sub_1007BCBA0()
{
  id result = [v0 layoutController];
  if (result)
  {
    uint64_t v2 = result;
    id v3 = [result canvas];

    if (v3)
    {
      id v4 = [v3 canvasController];

      if (v4)
      {
        id v5 = [v4 repForLayout:v0];

        if (v5)
        {
          type metadata accessor for CRLUSDZRep(0);
          id result = (id)swift_dynamicCastClass();
          if (result) {
            return result;
          }
        }
      }
    }
    return 0;
  }
  return result;
}

id sub_1007BCC70(void *a1)
{
  id v3 = [v1 layoutController];
  if (!v3) {
    return 0;
  }
  id v4 = v3;
  id v5 = [v3 canvas];

  if (!v5) {
    return 0;
  }
  [v5 viewScale];
  double v7 = v6;

  id v8 = a1;
  id result = [v1 geometry];
  if (result)
  {
    char v10 = result;
    [result size];

    double v11 = sub_100064070();
    id v15 = [objc_allocWithZone((Class)CRLUSDZImageHitTestManager) initWith:v8 naturalBounds:v11 canvasViewScale:v12 v13 v14 v7];

    uint64_t v16 = OBJC_IVAR____TtC8Freeform13CRLUSDZLayout_cachedHitTestManager;
    uint64_t v17 = *(void **)&v1[OBJC_IVAR____TtC8Freeform13CRLUSDZLayout_cachedHitTestManager];
    *(void *)&v1[OBJC_IVAR____TtC8Freeform13CRLUSDZLayout_cachedHitTestManager] = v15;

    id v18 = sub_1007BCBA0();
    if (v18)
    {
      uint64_t v19 = v18;
      [v18 invalidateKnobs];
    }
    uint64_t v20 = *(void **)&v1[v16];
    id v21 = v20;
    return v20;
  }
  __break(1u);
  return result;
}

void sub_1007BCDE4()
{
  uint64_t v1 = v0;
  if ([v0 info])
  {
    type metadata accessor for CRLUSDZItem();
    swift_dynamicCastClassUnconditional();
    sub_10072F00C((uint64_t)v31);
    swift_unknownObjectRelease();
    sub_1005FCB30((uint64_t)v31, (uint64_t)v32);
    if (v33)
    {
LABEL_6:
      v30.id receiver = v1;
      v30.Class super_class = (Class)type metadata accessor for CRLUSDZLayout();
      [super boundsInRoot];
      return;
    }
    CGFloat v2 = *(double *)v32;
    CGFloat v3 = *(double *)&v32[1];
    CGFloat v4 = *(double *)&v32[2];
    CGFloat v5 = *(double *)&v32[3];
    id v6 = [v0 geometry];
    if (v6)
    {
      double v7 = v6;
      [v6 frame];
      double v9 = v8;
      double v11 = v10;
      double v13 = v12;
      double v15 = v14;

      sub_100066AC4(v9, v11, v13, v15, v2, v3, v4, v5);
      CGFloat v17 = v16;
      CGFloat v19 = v18;
      CGFloat v21 = v20;
      CGFloat v23 = v22;
      id v24 = [v1 parent];
      if (v24)
      {
        uint64_t v25 = v24;
        [v24 transformInRoot];
        long long v27 = *(_OWORD *)&v29.c;
        long long v28 = *(_OWORD *)&v29.a;
        long long v26 = *(_OWORD *)&v29.tx;

        *(_OWORD *)&v29.double a = v28;
        *(_OWORD *)&v29.CGFloat c = v27;
        *(_OWORD *)&v29.tCGFloat x = v26;
        v34.origin.CGFloat x = v17;
        v34.origin.CGFloat y = v19;
        v34.size.CGFloat width = v21;
        v34.size.CGFloat height = v23;
        CGRectApplyAffineTransform(v34, &v29);
        return;
      }
      goto LABEL_6;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

void sub_1007BCFE0()
{
  if ([v0 info])
  {
    type metadata accessor for CRLUSDZItem();
    swift_dynamicCastClassUnconditional();
    sub_10072F00C((uint64_t)v16);
    swift_unknownObjectRelease();
    sub_1005FCB30((uint64_t)v16, (uint64_t)v17);
    if (v18)
    {
      v15.id receiver = v0;
      v15.Class super_class = (Class)type metadata accessor for CRLUSDZLayout();
      [super alignmentFrame];
      return;
    }
    CGFloat v1 = *(double *)v17;
    CGFloat v2 = *(double *)&v17[1];
    CGFloat v3 = *(double *)&v17[2];
    CGFloat v4 = *(double *)&v17[3];
    id v5 = [v0 geometry];
    if (v5)
    {
      id v6 = v5;
      [v5 frame];
      double v8 = v7;
      double v10 = v9;
      double v12 = v11;
      double v14 = v13;

      sub_100066AC4(v8, v10, v12, v14, v1, v2, v3, v4);
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

double sub_1007BD1E0(void *a1, uint64_t a2, double (*a3)(void))
{
  id v4 = a1;
  double v5 = a3();

  return v5;
}

void sub_1007BD244()
{
  CGFloat v1 = v0;
  if ([v0 info])
  {
    type metadata accessor for CRLUSDZItem();
    swift_dynamicCastClassUnconditional();
    sub_10072F00C((uint64_t)v14);
    swift_unknownObjectRelease();
    sub_1005FCB30((uint64_t)v14, (uint64_t)v15);
    if (v16)
    {
      id v2 = sub_1007BE314();
      if (v2)
      {
        id v3 = v2;
        if ([v3 visibleBoundsComputedFromAsset])
        {
          [v3 visibleBounds];

          return;
        }
      }
      v13.id receiver = v1;
      v13.Class super_class = (Class)type metadata accessor for CRLUSDZLayout();
      [super boundsForStandardKnobs];
    }
    else
    {
      CGFloat v4 = *(double *)v15;
      CGFloat v5 = *(double *)&v15[1];
      CGFloat v6 = *(double *)&v15[2];
      CGFloat v7 = *(double *)&v15[3];
      v12.id receiver = v0;
      v12.Class super_class = (Class)type metadata accessor for CRLUSDZLayout();
      [super boundsForStandardKnobs];
      sub_100066AC4(v8, v9, v10, v11, v4, v5, v6, v7);
    }
  }
  else
  {
    __break(1u);
  }
}

char *sub_1007BD468(void *a1)
{
  id v2 = v1;
  id result = (char *)[v1 info];
  if (result)
  {
    type metadata accessor for CRLUSDZItem();
    id result = (char *)swift_dynamicCastClassUnconditional();
    if (a1)
    {
      CGFloat v5 = result;
      [a1 frame];
      CGFloat v59 = v7;
      CGFloat v60 = v6;
      CGFloat v9 = v8;
      CGFloat v11 = v10;
      sub_10072F00C((uint64_t)v62);
      sub_1005FCB30((uint64_t)v62, (uint64_t)&v63);
      if (v64) {
        goto LABEL_5;
      }
      CGFloat x = v63.origin.x;
      CGFloat y = v63.origin.y;
      CGFloat width = v63.size.width;
      CGFloat height = v63.size.height;
      v65.origin.CGFloat x = 0.0;
      v65.origin.CGFloat y = 0.0;
      v65.size.CGFloat width = 0.0;
      v65.size.CGFloat height = 0.0;
      if (CGRectEqualToRect(v63, v65))
      {
LABEL_5:
        swift_unknownObjectRelease();
      }
      else
      {
        CGFloat v17 = *(uint64_t (**)(uint64_t))(**(void **)&v5[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData]
                                                + 288);
        uint64_t v18 = swift_retain();
        CGFloat v19 = (void *)v17(v18);
        swift_release();
        [v19 boundsBeforeRotation];
        CGFloat v53 = y;
        CGFloat v54 = x;
        double v21 = v20;
        CGFloat v57 = v22;
        CGFloat v58 = v20;
        CGFloat v55 = v9;
        double v24 = v23;
        double v25 = v22;
        double v27 = v26;
        CGFloat v56 = v26;

        sub_100066AC4(v21, v24, v25, v27, v54, v53, width, height);
        CGFloat v29 = v28;
        CGFloat v31 = v30;
        double v33 = v32;
        CGFloat v35 = v34;
        sub_1000672D8(0, v32, v34, v60, v9, v11, v59);
        CGFloat v37 = v36 / v33;
        double v38 = sub_100065738(v29, v31, v33, v35);
        sub_10006736C(v58, v24, v57, v56, v38, v39, v37);
        double v41 = v40;
        double v43 = v42;
        double v45 = v44;
        double v47 = v46;
        double v48 = sub_100065738(v60, v55, v11, v59);
        double v50 = sub_100064680(v48, v49, v38);
        double v51 = sub_100064698(v41, v43, v50);
        id v16 = [objc_allocWithZone((Class)CRLCanvasInfoGeometry) initWithPosition:v51 size:v52];
        swift_unknownObjectRelease();
        if (v16) {
          return (char *)v16;
        }
      }
      v61.id receiver = v2;
      v61.Class super_class = (Class)type metadata accessor for CRLUSDZLayout();
      return (char *)[super computeInfoGeometryFromPureLayoutGeometry:a1];
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

void sub_1007BD7C4()
{
  CGFloat v1 = v0;
  if (![v0 info])
  {
    __break(1u);
    goto LABEL_40;
  }
  type metadata accessor for CRLUSDZItem();
  uint64_t v0 = (char *)swift_dynamicCastClassUnconditional();
  id v2 = (char *)sub_10072E910();
  if (!v2)
  {
    swift_unknownObjectRelease();
    goto LABEL_20;
  }
  uint64_t v0 = v2;
  id v3 = [self sharedPool];
  id v4 = [v3 providerForAsset:v0 shouldValidate:1];
  swift_unknownObjectRelease();

  if (![v4 isValid] || (objc_msgSend(v4, "isError") & 1) != 0) {
    goto LABEL_19;
  }
  uint64_t v5 = OBJC_IVAR____TtC8Freeform13CRLUSDZLayout_cachedWrapPath;
  double v6 = *(void **)&v1[OBJC_IVAR____TtC8Freeform13CRLUSDZLayout_cachedWrapPath];
  if (v6)
  {
    id v7 = v6;
    if (([v7 isEmpty] & 1) == 0)
    {
      id v8 = *(id *)&v1[OBJC_IVAR____TtC8Freeform13CRLUSDZLayout_cachedPosterImageDataHashForWrapPath];
      uint64_t v0 = (char *)[v4 imageData];
      id v9 = [v0 hash];

      if (v8 == v9)
      {
        [v7 copy];
        _bridgeAnyObjectToAny(_:)();
        swift_unknownObjectRelease();
        sub_1007BEE30();
        if (swift_dynamicCast())
        {
          uint64_t v0 = (char *)v62[0];

          goto LABEL_35;
        }
        uint64_t v0 = "invalid nil found when unwrapping value";
        sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"computeWrapPath()", 17, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLUSDZLayout.swift", 84, 2, 276, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
        LOBYTE(v58) = 2;
        CGFloat v56 = "invalid nil found when unwrapping value";
        uint64_t v57 = 39;
        sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"computeWrapPath()", 17, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLUSDZLayout.swift", 84, 2, 276);

LABEL_20:
        if (objc_msgSend(v1, "info", v56, v57, v58))
        {
          uint64_t v0 = (char *)swift_dynamicCastClassUnconditional();
          sub_10072F00C((uint64_t)v61);
          swift_unknownObjectRelease();
          sub_1005FCB30((uint64_t)v61, (uint64_t)v62);
          if (v63)
          {
            v60.id receiver = v1;
            v60.Class super_class = (Class)type metadata accessor for CRLUSDZLayout();
            uint64_t v0 = (char *)[super computeWrapPath];
            if (v0) {
              return;
            }
            __break(1u);
          }
          CGFloat v13 = *(double *)v62;
          CGFloat v14 = *(double *)&v62[1];
          CGFloat v15 = *(double *)&v62[2];
          CGFloat v16 = *(double *)&v62[3];
          CGFloat v17 = (char *)[v1 geometry];
          if (v17)
          {
            uint64_t v0 = v17;
            [v17 frame];
            double v19 = v18;
            double v21 = v20;
            double v23 = v22;
            double v25 = v24;

            sub_100066AC4(v19, v21, v23, v25, v13, v14, v15, v16);
            id v30 = [self bezierPathWithRect:v26, v27, v28, v29];
            if (v30)
            {
              id v4 = v30;
              CGFloat v31 = (char *)[v1 geometry];
              if (v31)
              {
                uint64_t v0 = v31;
                [v31 frame];
                double v33 = v32;

                id v34 = [v1 geometry];
                if (v34)
                {
                  CGFloat v35 = v34;
                  [v34 frame];
                  double v37 = v36;

                  CGAffineTransformMakeTranslation(&v59, -v33, -v37);
                  [v4 transformUsingAffineTransform:&v59];
                  goto LABEL_29;
                }
                goto LABEL_44;
              }
LABEL_43:
              __break(1u);
LABEL_44:
              __break(1u);
              goto LABEL_45;
            }
LABEL_42:
            __break(1u);
            goto LABEL_43;
          }
LABEL_41:
          __break(1u);
          goto LABEL_42;
        }
LABEL_40:
        __break(1u);
        goto LABEL_41;
      }
    }
  }
  if (![v1 info])
  {
LABEL_45:
    __break(1u);
    goto LABEL_46;
  }
  swift_dynamicCastClassUnconditional();
  uint64_t v0 = (char *)sub_10072E57C();
  swift_unknownObjectRelease();
  if (!v0)
  {
LABEL_19:

    goto LABEL_20;
  }
  if (([v0 isEmpty] & 1) != 0
    || ([v4 naturalSize], v10 <= 0.0)
    || ([v4 naturalSize], v11 <= 0.0))
  {

    goto LABEL_20;
  }
  [v0 copy];
  _bridgeAnyObjectToAny(_:)();
  swift_unknownObjectRelease();
  sub_1007BEE30();
  if (swift_dynamicCast())
  {
    uint64_t v12 = v62[0];
  }
  else
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"computeWrapPath()", 17, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLUSDZLayout.swift", 84, 2, 279, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"computeWrapPath()", 17, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLUSDZLayout.swift", 84, 2, 279);
    uint64_t v12 = 0;
  }
  double v38 = *(void **)&v1[v5];
  *(void *)&v1[v5] = v12;

  id v39 = [v4 imageData];
  id v40 = [v39 hash];

  *(void *)&v1[OBJC_IVAR____TtC8Freeform13CRLUSDZLayout_cachedPosterImageDataHashForWrapPath] = v40;
  [v4 naturalSize];
  double v41 = &v1[OBJC_IVAR____TtC8Freeform13CRLUSDZLayout_cachedImageNaturalSize];
  *(void *)double v41 = v42;
  *((void *)v41 + 1) = v43;
  v41[16] = 0;
LABEL_35:
  double v44 = (double *)&v1[OBJC_IVAR____TtC8Freeform13CRLUSDZLayout_cachedImageNaturalSize];
  if ((v1[OBJC_IVAR____TtC8Freeform13CRLUSDZLayout_cachedImageNaturalSize + 16] & 1) == 0)
  {
    double v45 = *v44;
    double v46 = v44[1];
    uint64_t v0 = v0;
    id v47 = [v1 geometry];
    if (v47)
    {
      double v48 = v47;
      [v47 size];
      double v50 = v49;

      id v51 = [v1 geometry];
      if (v51)
      {
        double v52 = v51;
        CGFloat v53 = v50 / v45;
        [v51 size];
        double v55 = v54;

        CGAffineTransformMakeScale(&v59, v53, v55 / v46);
        [v0 transformUsingAffineTransform:&v59];

        goto LABEL_29;
      }
LABEL_47:

      __break(1u);
      return;
    }
LABEL_46:

    __break(1u);
    goto LABEL_47;
  }
LABEL_29:
}

id sub_1007BDFBC()
{
  CGFloat v1 = v0;
  uint64_t v2 = type metadata accessor for CRLUSDZAssetDataStruct(0);
  __chkstk_darwin(v2, v3);
  uint64_t v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  id result = [v0 info];
  if (result)
  {
    type metadata accessor for CRLUSDZItem();
    swift_dynamicCastClassUnconditional();
    swift_beginAccess();
    swift_retain();
    sub_1005057FC((uint64_t *)&unk_10167D2A0);
    CRRegister.wrappedValue.getter();
    swift_endAccess();
    swift_release();
    id v7 = &v5[*(int *)(v2 + 24)];
    uint64_t v9 = *(void *)v7;
    uint64_t v8 = *((void *)v7 + 1);
    sub_1007BED78((uint64_t)v5, type metadata accessor for CRLUSDZAssetDataStruct);
    id result = (id)swift_unknownObjectRelease();
    double v10 = &v1[OBJC_IVAR____TtC8Freeform13CRLUSDZLayout_orientationSource];
    *(void *)double v10 = v9;
    *((void *)v10 + 1) = v8;
    v10[16] = 0;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_1007BE15C(uint64_t a1)
{
  uint64_t v3 = &v1[OBJC_IVAR____TtC8Freeform13CRLUSDZLayout_orientationSource];
  *(void *)uint64_t v3 = 0;
  *((void *)v3 + 1) = 0;
  v3[16] = 1;
  *(void *)&v1[OBJC_IVAR____TtC8Freeform13CRLUSDZLayout_cachedWrapPath] = 0;
  uint64_t v4 = &v1[OBJC_IVAR____TtC8Freeform13CRLUSDZLayout_cachedImageNaturalSize];
  *(void *)uint64_t v4 = 0;
  *((void *)v4 + 1) = 0;
  v4[16] = 1;
  uint64_t v5 = OBJC_IVAR____TtC8Freeform13CRLUSDZLayout_cachedPosterImageDataHashForWrapPath;
  double v6 = v1;
  *(void *)&v1[v5] = NSNotFound.getter();
  *(void *)&v6[OBJC_IVAR____TtC8Freeform13CRLUSDZLayout_cachedHitTestManager] = 0;

  v9.id receiver = v6;
  v9.Class super_class = (Class)type metadata accessor for CRLUSDZLayout();
  [super initWithInfo:a1];
  swift_unknownObjectRelease();
  return v7;
}

id sub_1007BE24C()
{
  v2.id receiver = v0;
  v2.Class super_class = (Class)type metadata accessor for CRLUSDZLayout();
  return [super dealloc];
}

uint64_t type metadata accessor for CRLUSDZLayout()
{
  return self;
}

__n128 initializeWithCopy for CRLUSDZLayout.OrientationSource(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

ValueMetadata *type metadata accessor for CRLUSDZLayout.OrientationSource()
{
  return &type metadata for CRLUSDZLayout.OrientationSource;
}

id sub_1007BE314()
{
  uint64_t v86 = sub_1005057FC((uint64_t *)&unk_10168A0C0);
  __chkstk_darwin(v86, v1);
  uint64_t v89 = (uint64_t)v80 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for CRLUSDZAssetDataStruct(0);
  __chkstk_darwin(v3, v4);
  double v6 = (char *)v80 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1005057FC((uint64_t *)&unk_10167D2B0);
  __chkstk_darwin(v7 - 8, v8);
  double v10 = (char *)v80 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1005057FC((uint64_t *)&unk_101674520);
  __chkstk_darwin(v11 - 8, v12);
  uint64_t v85 = (uint64_t)v80 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14, v15);
  uint64_t v87 = (char *)v80 - v16;
  __chkstk_darwin(v17, v18);
  uint64_t v88 = (char *)v80 - v19;
  __chkstk_darwin(v20, v21);
  double v23 = (char *)v80 - v22;
  uint64_t v24 = type metadata accessor for UUID();
  uint64_t v25 = *(void *)(v24 - 8);
  __chkstk_darwin(v24, v26);
  uint64_t v84 = (char *)v80 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v28, v29);
  char v91 = (char *)v80 - v30;
  *(void *)&double v33 = __chkstk_darwin(v31, v32).n128_u64[0];
  CGFloat v35 = (char *)v80 - v34;
  char v92 = v0;
  id result = [v0 info:v33];
  if (!result)
  {
    __break(1u);
    goto LABEL_29;
  }
  uint64_t v90 = type metadata accessor for CRLUSDZItem();
  swift_dynamicCastClassUnconditional();
  swift_beginAccess();
  swift_retain();
  sub_1005057FC((uint64_t *)&unk_10167D2A0);
  CRRegister.wrappedValue.getter();
  swift_endAccess();
  swift_release();
  sub_100522E9C((uint64_t)&v6[*(int *)(v3 + 20)], (uint64_t)v10, (uint64_t *)&unk_10167D2B0);
  sub_1007BED78((uint64_t)v6, type metadata accessor for CRLUSDZAssetDataStruct);
  swift_unknownObjectRelease();
  uint64_t v37 = type metadata accessor for CRLAssetData();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v37 - 8) + 48))(v10, 1, v37) == 1)
  {
    sub_100522F00((uint64_t)v10, (uint64_t *)&unk_10167D2B0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v25 + 56))(v23, 1, 1, v24);
LABEL_5:
    sub_100522F00((uint64_t)v23, (uint64_t *)&unk_101674520);
    id v40 = &v92[OBJC_IVAR____TtC8Freeform13CRLUSDZLayout_cachedHitTestManager];
    return *(id *)v40;
  }
  uint64_t v83 = v35;
  double v38 = *(void (**)(char *, char *, uint64_t))(v25 + 16);
  v38(v23, v10, v24);
  sub_1007BED78((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
  id v39 = *(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56);
  v39(v23, 0, 1, v24);
  char v82 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48);
  if (v82(v23, 1, v24) == 1) {
    goto LABEL_5;
  }
  double v41 = *(void (**)(char *, char *, uint64_t))(v25 + 32);
  uint64_t v42 = v83;
  v80[1] = v25 + 32;
  v80[0] = v41;
  v41(v83, v23, v24);
  id v40 = &v92[OBJC_IVAR____TtC8Freeform13CRLUSDZLayout_cachedHitTestManager];
  uint64_t v43 = *(void **)&v92[OBJC_IVAR____TtC8Freeform13CRLUSDZLayout_cachedHitTestManager];
  v38(v91, v42, v24);
  if (!v43)
  {
    CGFloat v56 = *(void (**)(char *, uint64_t))(v25 + 8);
    v56(v91, v24);
    CGAffineTransform v59 = v92;
    uint64_t v58 = v83;
LABEL_15:
    uint64_t v62 = &selRef_i_join;
    goto LABEL_16;
  }
  uint64_t v81 = v40;
  uint64_t v44 = (uint64_t)v88;
  v38(v88, v91, v24);
  v39((char *)v44, 0, 1, v24);
  double v45 = (char *)[v43 imageAsset];
  uint64_t v46 = *(void *)&v45[OBJC_IVAR____TtC8Freeform8CRLAsset_storage + 24];
  uint64_t v47 = *(void *)&v45[OBJC_IVAR____TtC8Freeform8CRLAsset_storage + 32];
  sub_10050F848(&v45[OBJC_IVAR____TtC8Freeform8CRLAsset_storage], v46);
  double v48 = *(void (**)(uint64_t, uint64_t))(v47 + 24);
  uint64_t v49 = v46;
  uint64_t v50 = v44;
  uint64_t v51 = v47;
  uint64_t v52 = (uint64_t)v87;
  v48(v49, v51);

  v39((char *)v52, 0, 1, v24);
  uint64_t v53 = v89;
  uint64_t v54 = v89 + *(int *)(v86 + 48);
  sub_100522E9C(v44, v89, (uint64_t *)&unk_101674520);
  sub_100522E9C(v52, v54, (uint64_t *)&unk_101674520);
  double v55 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v82;
  if (v82((char *)v53, 1, v24) == 1)
  {
    sub_100522F00(v52, (uint64_t *)&unk_101674520);
    sub_100522F00(v50, (uint64_t *)&unk_101674520);
    CGFloat v56 = *(void (**)(char *, uint64_t))(v25 + 8);
    v56(v91, v24);
    int v57 = v55(v54, 1, v24);
    uint64_t v58 = v83;
    if (v57 == 1)
    {
      sub_100522F00(v53, (uint64_t *)&unk_101674520);
      id v40 = v81;
LABEL_23:
      v56(v58, v24);
      return *(id *)v40;
    }
    goto LABEL_14;
  }
  uint64_t v60 = v85;
  sub_100522E9C(v53, v85, (uint64_t *)&unk_101674520);
  int v61 = v55(v54, 1, v24);
  uint64_t v58 = v83;
  if (v61 == 1)
  {
    sub_100522F00(v52, (uint64_t *)&unk_101674520);
    sub_100522F00(v50, (uint64_t *)&unk_101674520);
    CGFloat v56 = *(void (**)(char *, uint64_t))(v25 + 8);
    v56(v91, v24);
    v56((char *)v60, v24);
LABEL_14:
    CGAffineTransform v59 = v92;
    id v40 = v81;
    sub_100522F00(v53, (uint64_t *)&unk_10168A0C0);
    goto LABEL_15;
  }
  uint64_t v78 = v84;
  ((void (*)(char *, uint64_t, uint64_t))v80[0])(v84, v54, v24);
  sub_1007BEDD8();
  LODWORD(v86) = dispatch thunk of static Equatable.== infix(_:_:)();
  uint64_t v79 = v52;
  CGFloat v56 = *(void (**)(char *, uint64_t))(v25 + 8);
  v56(v78, v24);
  sub_100522F00(v79, (uint64_t *)&unk_101674520);
  sub_100522F00(v50, (uint64_t *)&unk_101674520);
  v56(v91, v24);
  v56((char *)v60, v24);
  sub_100522F00(v53, (uint64_t *)&unk_101674520);
  CGAffineTransform v59 = v92;
  if (v86)
  {
    id v40 = v81;
    uint64_t v58 = v83;
    goto LABEL_23;
  }
  uint64_t v62 = &selRef_i_join;
  id v40 = v81;
  uint64_t v58 = v83;
LABEL_16:
  id result = [v59 v62[246]];
  if (!result)
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  swift_dynamicCastClassUnconditional();
  id v63 = sub_10072E910();
  swift_unknownObjectRelease();
  if (!v63) {
    goto LABEL_23;
  }
  id v64 = [v59 layoutController];
  if (!v64
    || (CGRect v65 = v64, v66 = [v64 canvas], v65, !v66))
  {
LABEL_24:
    v56(v58, v24);

    return *(id *)v40;
  }
  [v66 viewScale];
  double v68 = v67;

  id v63 = v63;
  id result = [v59 geometry];
  if (result)
  {
    uint64_t v69 = result;
    [result size];

    double v70 = sub_100064070();
    id v74 = [objc_allocWithZone((Class)CRLUSDZImageHitTestManager) initWith:v63 naturalBounds:v70 canvasViewScale:v71 v72 v73 v68];

    uint64_t v75 = *(void **)v40;
    *(void *)id v40 = v74;

    id v76 = sub_1007BCBA0();
    if (v76)
    {
      uint64_t v77 = v76;
      [v76 invalidateKnobs];

      goto LABEL_23;
    }
    goto LABEL_24;
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_1007BED78(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_1007BEDD8()
{
  unint64_t result = qword_10167BDC0;
  if (!qword_10167BDC0)
  {
    type metadata accessor for UUID();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10167BDC0);
  }
  return result;
}

unint64_t sub_1007BEE30()
{
  unint64_t result = qword_101680C50;
  if (!qword_101680C50)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_101680C50);
  }
  return result;
}

id sub_1007BEE70()
{
  id result = [objc_allocWithZone((Class)type metadata accessor for CRLiOSPrintCoordinator()) init];
  qword_10171AA10 = (uint64_t)result;
  return result;
}

uint64_t sub_1007BEEA4(uint64_t a1, void *a2, uint64_t a3, char a4, double a5, double a6, double a7, double a8)
{
  *(void *)(v8 + OBJC_IVAR____TtC8Freeform22CRLiOSPrintCoordinator_boardActor) = a1;
  swift_retain();
  swift_release();
  uint64_t v16 = *(void **)(v8 + OBJC_IVAR____TtC8Freeform22CRLiOSPrintCoordinator_parentViewController);
  *(void *)(v8 + OBJC_IVAR____TtC8Freeform22CRLiOSPrintCoordinator_parentViewController) = a2;
  id v17 = a2;

  *(void *)(v8 + OBJC_IVAR____TtC8Freeform22CRLiOSPrintCoordinator_scenes) = a3;
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v19 = v8 + OBJC_IVAR____TtC8Freeform22CRLiOSPrintCoordinator_deviceWindowSize;
  *(double *)uint64_t v19 = a5;
  *(double *)(v19 + 8) = a6;
  *(double *)(v19 + 16) = a7;
  *(double *)(v19 + 24) = a8;
  *(unsigned char *)(v19 + 32) = 0;
  *(unsigned char *)(v8 + OBJC_IVAR____TtC8Freeform22CRLiOSPrintCoordinator_defaultToPrintScenes) = a4;
  return result;
}

void sub_1007BEF74(char a1)
{
  uint64_t v3 = self;
  id v4 = [v3 standardUserDefaults];
  NSString v5 = String._bridgeToObjectiveC()();
  id v6 = [v4 dictionaryForKey:v5];

  if (v6)
  {
    uint64_t v7 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v8 = sub_100ED2BB8(v7);
    swift_bridgeObjectRelease();
  }
  else
  {
    id v9 = [v1 dictionaryRepresentation];
    uint64_t v8 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();
  }
  LOBYTE(v15) = a1 & 1;
  uint64_t v16 = &type metadata for Bool;
  *(void *)&v17[0] = 0x656353746E697270;
  *((void *)&v17[0] + 1) = 0xEB0000000073656ELL;
  AnyHashable.init<A>(_:)();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_1007C09D8(&v15, (uint64_t)v14, isUniquelyReferenced_nonNull_native, v17);
  swift_bridgeObjectRelease();
  sub_10050BFE0((uint64_t)v14);
  sub_100522F00((uint64_t)v17, &qword_101672BF0);
  id v11 = [v3 standardUserDefaults:v8];
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  NSString v13 = String._bridgeToObjectiveC()();
  [v11 setObject:isa forKey:v13];
}

void sub_1007BF1B8()
{
  id v1 = [v0 dictionaryRepresentation];
  uint64_t v2 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

  *(void *)&long long v10 = 0x656353746E697270;
  *((void *)&v10 + 1) = 0xEB0000000073656ELL;
  AnyHashable.init<A>(_:)();
  id v11 = &type metadata for Bool;
  LOBYTE(v10) = sub_1007C0E1C() & 1;
  sub_100575CE8(&v10, v9);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_100972B08(v9, (uint64_t)v12, isUniquelyReferenced_nonNull_native);
  swift_bridgeObjectRelease();
  sub_10050BFE0((uint64_t)v12);
  *(void *)&long long v10 = 0xD00000000000001ALL;
  *((void *)&v10 + 1) = 0x8000000101252730;
  AnyHashable.init<A>(_:)();
  char v4 = sub_1007C0F7C();
  id v11 = &type metadata for Bool;
  LOBYTE(v10) = v4 & 1;
  sub_100575CE8(&v10, v9);
  char v5 = swift_isUniquelyReferenced_nonNull_native();
  sub_100972B08(v9, (uint64_t)v12, v5);
  swift_bridgeObjectRelease();
  sub_10050BFE0((uint64_t)v12);
  id v6 = [self standardUserDefaults:v2];
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  NSString v8 = String._bridgeToObjectiveC()();
  [v6 setObject:isa forKey:v8];
}

uint64_t sub_1007BF3EC()
{
  v1[6] = v0;
  sub_1005057FC(&qword_101680D78);
  v1[7] = swift_task_alloc();
  v1[8] = type metadata accessor for MainActor();
  v1[9] = static MainActor.shared.getter();
  uint64_t v3 = dispatch thunk of Actor.unownedExecutor.getter();
  v1[10] = v3;
  v1[11] = v2;
  return _swift_task_switch(sub_1007BF4B8, v3, v2);
}

uint64_t sub_1007BF4B8()
{
  uint64_t v1 = v0[6];
  if (*(void *)(v1 + OBJC_IVAR____TtC8Freeform22CRLiOSPrintCoordinator_printInteractionController))
  {
    uint64_t v2 = static MainActor.shared.getter();
    v0[12] = v2;
    uint64_t v3 = swift_task_alloc();
    v0[13] = v3;
    *(void *)(v3 + 16) = v1;
    char v4 = (void *)swift_task_alloc();
    v0[14] = v4;
    uint64_t v5 = sub_1005057FC((uint64_t *)&unk_101680D80);
    *char v4 = v0;
    v4[1] = sub_1007BF62C;
    return withCheckedThrowingContinuation<A>(isolation:function:_:)(v0 + 5, v2, &protocol witness table for MainActor, 0xD00000000000001ELL, 0x8000000101252750, sub_1007C232C, v3, v5);
  }
  else
  {
    swift_release();
    swift_task_dealloc();
    id v6 = (uint64_t (*)(void))v0[1];
    return v6(0);
  }
}

uint64_t sub_1007BF62C()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 120) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 80);
    uint64_t v4 = *(void *)(v2 + 88);
    uint64_t v5 = sub_1007BF84C;
  }
  else
  {
    swift_release();
    swift_task_dealloc();
    uint64_t v3 = *(void *)(v2 + 80);
    uint64_t v4 = *(void *)(v2 + 88);
    uint64_t v5 = sub_1007BF750;
  }
  return _swift_task_switch(v5, v3, v4);
}

uint64_t sub_1007BF750()
{
  uint64_t v2 = v0[6];
  uint64_t v1 = v0[7];
  swift_release();
  uint64_t v3 = v0[5];
  uint64_t v4 = sub_1005057FC(&qword_101680CF8);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(v1, 1, 1, v4);
  uint64_t v5 = v2 + OBJC_IVAR____TtC8Freeform22CRLiOSPrintCoordinator_printInteractionContinuation;
  swift_beginAccess();
  sub_1007C2334(v1, v5);
  swift_endAccess();
  swift_task_dealloc();
  id v6 = (uint64_t (*)(uint64_t))v0[1];
  return v6(v3);
}

uint64_t sub_1007BF84C()
{
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

void sub_1007BF8D8(uint64_t a1, char *a2)
{
  uint64_t v4 = sub_1005057FC(&qword_101680D78);
  __chkstk_darwin(v4 - 8, v5);
  uint64_t v7 = (char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1005057FC(&qword_101680CF8);
  uint64_t v9 = *(void *)(v8 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v7, a1, v8);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v7, 0, 1, v8);
  uint64_t v10 = (uint64_t)&a2[OBJC_IVAR____TtC8Freeform22CRLiOSPrintCoordinator_printInteractionContinuation];
  swift_beginAccess();
  sub_1007C2334((uint64_t)v7, v10);
  swift_endAccess();
  id v11 = *(void **)&a2[OBJC_IVAR____TtC8Freeform22CRLiOSPrintCoordinator_printInteractionController];
  if (v11)
  {
    uint64_t v12 = swift_allocObject();
    *(void *)(v12 + 16) = a2;
    aBlock[4] = sub_1007C23D4;
    aBlock[5] = v12;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = *(void *)"";
    aBlock[2] = sub_1007BFE24;
    void aBlock[3] = &unk_101514930;
    NSString v13 = _Block_copy(aBlock);
    id v14 = v11;
    long long v15 = a2;
    swift_release();
    [v14 presentAnimated:1 completionHandler:v13];
    _Block_release(v13);
  }
}

void sub_1007BFAD4(void *a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v7 = sub_1005057FC(&qword_101680CF8);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7, v9);
  id v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1005057FC(&qword_101680D78);
  __chkstk_darwin(v12 - 8, v13);
  long long v15 = (char *)&v22 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16, v17);
  uint64_t v19 = (char *)&v22 - v18;
  if (*(unsigned char *)(a4 + OBJC_IVAR____TtC8Freeform22CRLiOSPrintCoordinator_didResume))
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"presentInteractionController()", 30, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/App/CRLiOSPrintCoordinator.swift", 90, 2, 123, (uint64_t)"Completion handler called twice. See 100236782.", 47, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"presentInteractionController()", 30, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/App/CRLiOSPrintCoordinator.swift", 90, 2, 123);
    return;
  }
  *(unsigned char *)(a4 + OBJC_IVAR____TtC8Freeform22CRLiOSPrintCoordinator_didResume) = 1;
  uint64_t v20 = a4 + OBJC_IVAR____TtC8Freeform22CRLiOSPrintCoordinator_printInteractionContinuation;
  uint64_t v21 = (unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48);
  if (a3)
  {
    swift_beginAccess();
    sub_1007C23F4(v20, (uint64_t)v15);
    if ((*v21)(v15, 1, v7))
    {
      sub_100522F00((uint64_t)v15, &qword_101680D78);
      return;
    }
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v11, v15, v7);
    sub_100522F00((uint64_t)v15, &qword_101680D78);
    id v22 = a3;
    swift_errorRetain();
    CheckedContinuation.resume(throwing:)();
  }
  else
  {
    swift_beginAccess();
    sub_1007C23F4(v20, (uint64_t)v19);
    if ((*v21)(v19, 1, v7))
    {
      sub_100522F00((uint64_t)v19, &qword_101680D78);
      return;
    }
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v11, v19, v7);
    sub_100522F00((uint64_t)v19, &qword_101680D78);
    id v22 = [a1 printInfo];
    CheckedContinuation.resume(returning:)();
  }
  (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
}

void sub_1007BFE24(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  uint64_t v7 = *(void (**)(id, uint64_t, void *))(a1 + 32);
  swift_retain();
  id v9 = a2;
  id v8 = a4;
  v7(v9, a3, a4);
  swift_release();
}

id sub_1007BFEB8()
{
  *(void *)&v0[OBJC_IVAR____TtC8Freeform22CRLiOSPrintCoordinator_boardActor] = 0;
  *(void *)&v0[OBJC_IVAR____TtC8Freeform22CRLiOSPrintCoordinator_parentViewController] = 0;
  *(void *)&v0[OBJC_IVAR____TtC8Freeform22CRLiOSPrintCoordinator_scenes] = 0;
  *(void *)&v0[OBJC_IVAR____TtC8Freeform22CRLiOSPrintCoordinator_printOptionsViewController] = 0;
  uint64_t v1 = &v0[OBJC_IVAR____TtC8Freeform22CRLiOSPrintCoordinator_deviceWindowSize];
  *(_OWORD *)uint64_t v1 = 0u;
  *((_OWORD *)v1 + 1) = 0u;
  v1[32] = 1;
  v0[OBJC_IVAR____TtC8Freeform22CRLiOSPrintCoordinator_defaultToPrintScenes] = 0;
  v0[OBJC_IVAR____TtC8Freeform22CRLiOSPrintCoordinator_isPresenting] = 0;
  *(void *)&v0[OBJC_IVAR____TtC8Freeform22CRLiOSPrintCoordinator_printInteractionController] = 0;
  v0[OBJC_IVAR____TtC8Freeform22CRLiOSPrintCoordinator_didResume] = 0;
  uint64_t v2 = &v0[OBJC_IVAR____TtC8Freeform22CRLiOSPrintCoordinator_printInteractionContinuation];
  uint64_t v3 = sub_1005057FC(&qword_101680CF8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56))(v2, 1, 1, v3);
  v5.id receiver = v0;
  v5.Class super_class = (Class)type metadata accessor for CRLiOSPrintCoordinator();
  return [super init];
}

id sub_1007BFFE8()
{
  v2.id receiver = v0;
  v2.Class super_class = (Class)type metadata accessor for CRLiOSPrintCoordinator();
  [super dealloc];
}

uint64_t sub_1007C00A8()
{
  return type metadata accessor for CRLiOSPrintCoordinator();
}

uint64_t type metadata accessor for CRLiOSPrintCoordinator()
{
  uint64_t result = qword_101680CD8;
  if (!qword_101680CD8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1007C00FC()
{
  sub_1007C01B8();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_1007C01B8()
{
  if (!qword_101680CF0)
  {
    sub_100522D34(&qword_101680CF8);
    unint64_t v0 = type metadata accessor for Optional();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_101680CF0);
    }
  }
}

unint64_t sub_1007C02B0()
{
  unint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC8Freeform22CRLiOSPrintCoordinator_scenes);
  if (!v1) {
    return v1;
  }
  if (!(v1 >> 62))
  {
    if (*(uint64_t *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10) >= 1) {
      goto LABEL_4;
    }
    return 0;
  }
  swift_bridgeObjectRetain();
  uint64_t v3 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (v3 < 1) {
    return 0;
  }
LABEL_4:
  unint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC8Freeform22CRLiOSPrintCoordinator_printOptionsViewController);
  if (v1) {
    id v2 = (id)v1;
  }
  return v1;
}

void sub_1007C0390(char a1)
{
  uint64_t v3 = self;
  id v4 = [v3 standardUserDefaults];
  NSString v5 = String._bridgeToObjectiveC()();
  id v6 = [v4 dictionaryForKey:v5];

  if (v6)
  {
    uint64_t v7 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v8 = sub_100ED2BB8(v7);
    swift_bridgeObjectRelease();
  }
  else
  {
    id v9 = [v1 dictionaryRepresentation];
    uint64_t v8 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();
  }
  *(void *)&long long v15 = 0xD00000000000001ALL;
  *((void *)&v15 + 1) = 0x8000000101252730;
  AnyHashable.init<A>(_:)();
  uint64_t v16 = &type metadata for Bool;
  LOBYTE(v15) = a1 & 1;
  sub_100575CE8(&v15, v14);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_100972B08(v14, (uint64_t)v17, isUniquelyReferenced_nonNull_native);
  swift_bridgeObjectRelease();
  sub_10050BFE0((uint64_t)v17);
  id v11 = [v3 standardUserDefaults:v8];
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  NSString v13 = String._bridgeToObjectiveC()();
  [v11 setObject:isa forKey:v13];
}

uint64_t sub_1007C05D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  NSString v5 = (void **)v4;
  uint64_t v10 = type metadata accessor for UUID();
  uint64_t v30 = *(void *)(v10 - 8);
  __chkstk_darwin(v10, v11);
  NSString v13 = (char *)&v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = (void *)*v4;
  unint64_t v16 = sub_100955FC8(a2);
  uint64_t v17 = v14[2];
  BOOL v18 = (v15 & 1) == 0;
  uint64_t v19 = v17 + v18;
  if (__OFADD__(v17, v18))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v20 = v15;
  uint64_t v21 = v14[3];
  if (v21 < v19 || (a3 & 1) == 0)
  {
    if (v21 >= v19 && (a3 & 1) == 0)
    {
      sub_10097CFAC();
      goto LABEL_7;
    }
    sub_100960D80(v19, a3 & 1);
    unint64_t v27 = sub_100955FC8(a2);
    if ((v20 & 1) == (v28 & 1))
    {
      unint64_t v16 = v27;
      id v22 = *v5;
      if (v20) {
        goto LABEL_8;
      }
LABEL_13:
      (*(void (**)(char *, uint64_t, uint64_t))(v30 + 16))(v13, a2, v10);
      sub_10097A444(v16, (uint64_t)v13, a1, v22);
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v30 + 56))(a4, 1, 1, v10);
    }
LABEL_15:
    uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return result;
  }
LABEL_7:
  id v22 = *v5;
  if ((v20 & 1) == 0) {
    goto LABEL_13;
  }
LABEL_8:
  unint64_t v23 = *(void *)(v30 + 72) * v16;
  uint64_t v24 = *(void (**)(uint64_t, unint64_t, uint64_t))(v30 + 32);
  v24(a4, v22[7] + v23, v10);
  v24(v22[7] + v23, a1, v10);
  uint64_t v25 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v30 + 56);

  return v25(a4, 0, 1, v10);
}

uint64_t sub_1007C0830(uint64_t a1, uint64_t a2, char a3)
{
  id v4 = (void **)v3;
  uint64_t v8 = type metadata accessor for UUID();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8, v10);
  uint64_t v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  NSString v13 = (void *)*v3;
  unint64_t v15 = sub_100955FC8(a2);
  uint64_t v16 = v13[2];
  BOOL v17 = (v14 & 1) == 0;
  uint64_t v18 = v16 + v17;
  if (__OFADD__(v16, v17))
  {
    __break(1u);
    goto LABEL_14;
  }
  char v19 = v14;
  uint64_t v20 = v13[3];
  if (v20 >= v18 && (a3 & 1) != 0)
  {
LABEL_7:
    uint64_t v21 = *v4;
    if (v19)
    {
LABEL_8:
      uint64_t v22 = v21[7];
      uint64_t result = *(void *)(v22 + 8 * v15);
      *(void *)(v22 + 8 * v15) = a1;
      return result;
    }
    goto LABEL_11;
  }
  if (v20 >= v18 && (a3 & 1) == 0)
  {
    sub_10097ECB8();
    goto LABEL_7;
  }
  sub_100964568(v18, a3 & 1);
  unint64_t v24 = sub_100955FC8(a2);
  if ((v19 & 1) != (v25 & 1))
  {
LABEL_14:
    uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return result;
  }
  unint64_t v15 = v24;
  uint64_t v21 = *v4;
  if (v19) {
    goto LABEL_8;
  }
LABEL_11:
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v12, a2, v8);
  sub_10097A95C(v15, (uint64_t)v12, a1, v21);
  return 0;
}

_OWORD *sub_1007C09D8@<X0>(_OWORD *a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, _OWORD *a4@<X8>)
{
  NSString v5 = (void **)v4;
  uint64_t v10 = (void *)*v4;
  unint64_t v12 = sub_10095647C(a2);
  uint64_t v13 = v10[2];
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v16 = v11;
  uint64_t v17 = v10[3];
  if (v17 < v15 || (a3 & 1) == 0)
  {
    if (v17 >= v15 && (a3 & 1) == 0)
    {
      sub_10097C998();
      goto LABEL_7;
    }
    sub_10095FFC4(v15, a3 & 1);
    unint64_t v21 = sub_10095647C(a2);
    if ((v16 & 1) == (v22 & 1))
    {
      unint64_t v12 = v21;
      uint64_t v18 = *v5;
      if (v16) {
        goto LABEL_8;
      }
LABEL_13:
      sub_10050BF84(a2, (uint64_t)v23);
      uint64_t result = sub_10097A3C8(v12, (uint64_t)v23, a1, v18);
      *a4 = 0u;
      a4[1] = 0u;
      return result;
    }
LABEL_15:
    uint64_t result = (_OWORD *)KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return result;
  }
LABEL_7:
  uint64_t v18 = *v5;
  if ((v16 & 1) == 0) {
    goto LABEL_13;
  }
LABEL_8:
  sub_100575CE8((_OWORD *)(v18[7] + 32 * v12), a4);
  char v19 = (_OWORD *)(v18[7] + 32 * v12);

  return sub_100575CE8(a1, v19);
}

id sub_1007C0B38()
{
  id v0 = [self standardUserDefaults];
  NSString v1 = String._bridgeToObjectiveC()();
  id v2 = [v0 dictionaryForKey:v1];

  if (v2)
  {
    uint64_t v3 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

    sub_100ED2BB8(v3);
    swift_bridgeObjectRelease();
    Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    id v5 = [self printInfoWithDictionary:isa];

    return v5;
  }
  else
  {
    id v7 = [self printInfo];
    return v7;
  }
}

uint64_t sub_1007C0CA4(uint64_t a1, uint64_t a2, double a3, double a4)
{
  *(void *)(v4 + 32) = a1;
  *(void *)(v4 + 40) = a2;
  *(double *)(v4 + 16) = a3;
  *(double *)(v4 + 24) = a4;
  type metadata accessor for MainActor();
  *(void *)(v4 + 48) = static MainActor.shared.getter();
  uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_1007C0D40, v6, v5);
}

uint64_t sub_1007C0D40()
{
  double v2 = *(double *)(v0 + 16);
  double v1 = *(double *)(v0 + 24);
  swift_release();
  id v3 = sub_1007C0B38();
  [v3 setOrientation:v2 / v1 > 1.0, v2 / v1];
  NSString v4 = String._bridgeToObjectiveC()();
  [v3 setJobName:v4];

  [v3 setPrinterID:0];
  uint64_t v5 = *(uint64_t (**)(id))(v0 + 8);
  return v5(v3);
}

uint64_t sub_1007C0E1C()
{
  id v0 = [self standardUserDefaults];
  NSString v1 = String._bridgeToObjectiveC()();
  id v2 = [v0 dictionaryForKey:v1];

  if (!v2) {
    return 0;
  }
  uint64_t v3 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

  if (!*(void *)(v3 + 16) || (unint64_t v4 = sub_100955F50(0x656353746E697270, 0xEB0000000073656ELL), (v5 & 1) == 0))
  {
    long long v8 = 0u;
    long long v9 = 0u;
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
  sub_100522D7C(*(void *)(v3 + 56) + 32 * v4, (uint64_t)&v8);
  swift_bridgeObjectRelease();
  if (!*((void *)&v9 + 1))
  {
LABEL_8:
    sub_100522F00((uint64_t)&v8, &qword_101672BF0);
    return 0;
  }
  uint64_t result = swift_dynamicCast();
  if (result) {
    return v7;
  }
  return result;
}

uint64_t sub_1007C0F7C()
{
  id v0 = [self standardUserDefaults];
  NSString v1 = String._bridgeToObjectiveC()();
  id v2 = [v0 dictionaryForKey:v1];

  if (!v2) {
    return 1;
  }
  uint64_t v3 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

  if (!*(void *)(v3 + 16) || (unint64_t v4 = sub_100955F50(0xD00000000000001ALL, 0x8000000101252730), (v5 & 1) == 0))
  {
    long long v8 = 0u;
    long long v9 = 0u;
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
  sub_100522D7C(*(void *)(v3 + 56) + 32 * v4, (uint64_t)&v8);
  swift_bridgeObjectRelease();
  if (!*((void *)&v9 + 1))
  {
LABEL_8:
    sub_100522F00((uint64_t)&v8, &qword_101672BF0);
    return 1;
  }
  if (swift_dynamicCast()) {
    return v7;
  }
  return 1;
}

uint64_t sub_1007C10DC()
{
  v1[71] = v0;
  v1[72] = type metadata accessor for CRLBoardCRDTData(0);
  v1[73] = swift_task_alloc();
  type metadata accessor for MainActor();
  v1[74] = static MainActor.shared.getter();
  uint64_t v3 = dispatch thunk of Actor.unownedExecutor.getter();
  v1[75] = v3;
  v1[76] = v2;
  return _swift_task_switch(sub_1007C11A8, v3, v2);
}

uint64_t sub_1007C11A8()
{
  uint64_t v1 = v0[71];
  uint64_t v2 = *(void *)(v1 + OBJC_IVAR____TtC8Freeform22CRLiOSPrintCoordinator_boardActor);
  v0[77] = v2;
  if (v2 && *(void *)(v1 + OBJC_IVAR____TtC8Freeform22CRLiOSPrintCoordinator_parentViewController))
  {
    *(unsigned char *)(v1 + OBJC_IVAR____TtC8Freeform22CRLiOSPrintCoordinator_isPresenting) = 1;
    swift_retain();
    return _swift_task_switch(sub_1007C133C, v2, 0);
  }
  else
  {
    swift_release();
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"present(animated:)", 18, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/App/CRLiOSPrintCoordinator.swift", 90, 2, 36);
    swift_task_dealloc();
    uint64_t v3 = (uint64_t (*)(void))v0[1];
    return v3();
  }
}

uint64_t sub_1007C133C()
{
  uint64_t v1 = *(void *)(v0 + 616);
  type metadata accessor for CRLImmutableBoard(0);
  uint64_t v2 = *(void *)(v1 + OBJC_IVAR____TtC8Freeform13CRLBoardActor_store);
  uint64_t v3 = v1 + OBJC_IVAR____TtC8Freeform13CRLBoardActor_boardIdentifier;
  unint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 624) = v4;
  *unint64_t v4 = v0;
  v4[1] = sub_1007C1408;
  return sub_1006D9650(v2, v3, 1);
}

uint64_t sub_1007C1408(uint64_t a1)
{
  uint64_t v3 = *v2;
  uint64_t v4 = *v2;
  *(void *)(v4 + 632) = a1;
  *(void *)(v4 + 640) = v1;
  swift_task_dealloc();
  uint64_t v5 = *(void *)(v3 + 608);
  uint64_t v6 = *(void *)(v3 + 600);
  if (v1) {
    unsigned __int8 v7 = sub_1007C1E0C;
  }
  else {
    unsigned __int8 v7 = sub_1007C1550;
  }
  return _swift_task_switch(v7, v6, v5);
}

id sub_1007C1550()
{
  uint64_t v1 = *(void **)(v0 + 632);
  id v2 = objc_allocWithZone((Class)CRLCanvasImager);
  uint64_t v3 = v1;
  id v4 = [v2 initWithBoard:v3];
  *(void *)(v0 + 648) = v4;
  uint64_t v5 = *(char **)&v3[OBJC_IVAR____TtC8Freeform8CRLBoard_rootContainer];
  uint64_t v6 = OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedOrderedItems;
  unsigned __int8 v7 = *(double **)&v5[OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedOrderedItems];
  long long v8 = v5;
  if (!v7)
  {
    sub_100846AB0();
    unsigned __int8 v7 = *(double **)&v5[v6];
  }
  if (v7) {
    unint64_t v9 = (unint64_t)v7;
  }
  else {
    unint64_t v9 = (unint64_t)_swiftEmptyArrayStorage;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v9 >> 62)
  {
    sub_1005057FC(&qword_101673060);
    _bridgeCocoaArray<A>(_:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
  }

  swift_bridgeObjectRelease();
  sub_1005057FC(&qword_101673060);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v4 setInfos:isa];

  id v11 = objc_allocWithZone((Class)CRLPdfTagger);
  id v12 = v4;
  id result = [v11 init];
  *(void *)(v0 + 656) = result;
  if (result)
  {
    BOOL v14 = result;
    uint64_t v15 = *(void **)(v0 + 632);
    uint64_t v16 = *(void *)(v0 + 584);
    uint64_t v17 = *(void *)(v0 + 568);

    *(unsigned char *)(v0 + 776) = 1;
    uint64_t v18 = OBJC_IVAR____TtC8Freeform22CRLiOSPrintCoordinator_scenes;
    *(void *)(v0 + 664) = OBJC_IVAR____TtC8Freeform22CRLiOSPrintCoordinator_scenes;
    *(void *)(v0 + 672) = *(void *)(v17 + v18);
    uint64_t v19 = v17 + OBJC_IVAR____TtC8Freeform22CRLiOSPrintCoordinator_deviceWindowSize;
    *(void *)(v0 + 680) = *(void *)(v17 + OBJC_IVAR____TtC8Freeform22CRLiOSPrintCoordinator_deviceWindowSize);
    *(void *)(v0 + 688) = *(void *)(v19 + 8);
    *(void *)(v0 + 696) = *(void *)(v19 + 16);
    *(void *)(v0 + 704) = *(void *)(v19 + 24);
    LOBYTE(v19) = *(unsigned char *)(v19 + 32);
    *(unsigned char *)(v0 + 782) = v19;
    *(unsigned char *)(v0 + 768) = v19;
    swift_bridgeObjectRetain_n();
    uint64_t v20 = v15;
    id v21 = v12;
    id v22 = v14;
    id v23 = v21;
    id v24 = [v23 canvas];
    id v25 = [v23 infos];
    [v24 setInfosToDisplay:v25];

    id v26 = [v23 canvas];
    [v26 nonInteractiveLayoutIfNeeded];

    id v27 = [v23 canvas];
    [v27 unscaledRectOfLayouts];
    double v29 = v28;
    double v31 = v30;

    uint64_t v32 = *(void *)&v20[OBJC_IVAR____TtC8Freeform8CRLBoard_data] + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
    swift_beginAccess();
    sub_100530898(v32, v16);
    double v33 = v20;
    sub_1005057FC(&qword_101674450);
    CRRegister.wrappedValue.getter();
    uint64_t v34 = *(void *)(v0 + 552);
    uint64_t v35 = *(void *)(v0 + 560);
    *(void *)(v0 + 712) = v35;
    sub_1005308FC(v16);

    double v36 = (void *)swift_task_alloc();
    *(void *)(v0 + 720) = v36;
    *double v36 = v0;
    v36[1] = sub_1007C193C;
    return (id)sub_1007C0CA4(v34, v35, v29, v31);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1007C193C(uint64_t a1)
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 728) = a1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  uint64_t v3 = *(void *)(v2 + 608);
  uint64_t v4 = *(void *)(v2 + 600);
  return _swift_task_switch(sub_1007C1A88, v4, v3);
}

uint64_t sub_1007C1A88()
{
  unint64_t v1 = *(void *)(*(void *)(v0 + 568) + *(void *)(v0 + 664));
  if (!v1) {
    goto LABEL_4;
  }
  if (v1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v32 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v32) {
      goto LABEL_5;
    }
    goto LABEL_4;
  }
  if (!*(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
LABEL_4:
  }
    sub_1007BEF74(0);
LABEL_5:
  char v35 = *(unsigned char *)(v0 + 782);
  uint64_t v34 = *(void *)(v0 + 704);
  long long v33 = *(_OWORD *)(v0 + 688);
  uint64_t v2 = *(void *)(v0 + 680);
  uint64_t v3 = *(void *)(v0 + 672);
  uint64_t v4 = *(void **)(v0 + 656);
  uint64_t v5 = *(void **)(v0 + 648);
  uint64_t v6 = *(void **)(v0 + 632);
  double v36 = *(void **)(v0 + 728);
  uint64_t v37 = *(void *)(v0 + 568);
  sub_1007BEF74(*(unsigned char *)(v37 + OBJC_IVAR____TtC8Freeform22CRLiOSPrintCoordinator_defaultToPrintScenes));
  *(void *)(v0 + 272) = 0x3FF0000000000000;
  *(void *)(v0 + 280) = v3;
  *(_OWORD *)(v0 + 288) = 0u;
  *(_OWORD *)(v0 + 304) = 0u;
  *(unsigned char *)(v0 + 320) = 1;
  *(_WORD *)(v0 + 321) = 256;
  *(void *)(v0 + 328) = v2;
  *(_OWORD *)(v0 + 336) = v33;
  *(void *)(v0 + 352) = v34;
  *(unsigned char *)(v0 + 360) = v35;
  *(void *)(v0 + 368) = 0;
  *(void *)(v0 + 376) = v5;
  *(void *)(v0 + 384) = v4;
  *(void *)(v0 + 392) = v6;
  long long v7 = *(_OWORD *)(v0 + 272);
  long long v8 = *(_OWORD *)(v0 + 288);
  long long v9 = *(_OWORD *)(v0 + 320);
  *(_OWORD *)(v0 + 48) = *(_OWORD *)(v0 + 304);
  *(_OWORD *)(v0 + 64) = v9;
  *(_OWORD *)(v0 + 16) = v7;
  *(_OWORD *)(v0 + 32) = v8;
  long long v10 = *(_OWORD *)(v0 + 336);
  long long v11 = *(_OWORD *)(v0 + 352);
  long long v12 = *(_OWORD *)(v0 + 384);
  *(_OWORD *)(v0 + 112) = *(_OWORD *)(v0 + 368);
  *(_OWORD *)(v0 + 128) = v12;
  *(_OWORD *)(v0 + 80) = v10;
  *(_OWORD *)(v0 + 96) = v11;
  sub_1007C2298((void *)(v0 + 272));

  swift_bridgeObjectRelease();
  id v13 = [self sharedPrintController];
  *(void *)(v0 + 736) = v13;
  objc_allocWithZone((Class)type metadata accessor for CRLiOSPrintPageRenderer());
  sub_1007C2298((void *)(v0 + 272));
  id v14 = v36;
  uint64_t v15 = sub_100A07004((_OWORD *)(v0 + 16), v14);

  sub_1007C22E0(v0 + 272);
  [v13 setPrintInfo:v14];
  [v13 setPrintPageRenderer:v15];
  [v13 setDelegate:v37];
  if (sub_1007C0E1C())
  {
    id v16 = [v13 printInfo];
    if (v16)
    {
      uint64_t v17 = v16;
      [v16 setOrientation:sub_100A06D6C()];
    }
  }
  uint64_t v18 = *(void *)(v0 + 568);

  sub_1007C22E0(v0 + 272);
  uint64_t v19 = *(void **)(v18 + OBJC_IVAR____TtC8Freeform22CRLiOSPrintCoordinator_printInteractionController);
  *(void *)(v18 + OBJC_IVAR____TtC8Freeform22CRLiOSPrintCoordinator_printInteractionController) = v13;
  id v20 = v13;

  id v21 = [v20 printPageRenderer];
  if (v21)
  {
    id v22 = v21;
    uint64_t v23 = swift_dynamicCastClass();
    if (v23)
    {
      id v24 = (void *)v23;
      id v25 = *(void **)(v0 + 728);
      uint64_t v26 = *(void *)(v0 + 568);
      objc_allocWithZone((Class)type metadata accessor for CRLiOSPrintOptionsViewController());
      id v27 = v25;
      id v28 = v22;
      double v29 = sub_100B9F2A8(v27, v24);
      id v22 = *(void **)(v26 + OBJC_IVAR____TtC8Freeform22CRLiOSPrintCoordinator_printOptionsViewController);
      *(void *)(v26 + OBJC_IVAR____TtC8Freeform22CRLiOSPrintCoordinator_printOptionsViewController) = v29;
    }
  }
  double v30 = (void *)swift_task_alloc();
  *(void *)(v0 + 744) = v30;
  *double v30 = v0;
  v30[1] = sub_1007C1E84;
  return sub_1007BF3EC();
}

uint64_t sub_1007C1E0C()
{
  swift_release();
  swift_release();
  swift_task_dealloc();
  unint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1007C1E84(uint64_t a1)
{
  uint64_t v3 = (void *)*v2;
  v3[94] = a1;
  v3[95] = v1;
  swift_task_dealloc();
  uint64_t v4 = v3[76];
  uint64_t v5 = v3[75];
  if (v1) {
    uint64_t v6 = sub_1007C2144;
  }
  else {
    uint64_t v6 = sub_1007C1FA4;
  }
  return _swift_task_switch(v6, v5, v4);
}

uint64_t sub_1007C1FA4()
{
  uint64_t v1 = *(void *)(v0 + 752);
  swift_release();
  uint64_t v2 = *(void **)(v0 + 728);
  if (v1)
  {
    id v3 = *(id *)(v0 + 752);
    char v4 = sub_1007C0E1C();
    sub_1007BEF74(v4 & 1);

    id v5 = v3;
    sub_1007BF1B8();
  }
  swift_release();
  uint64_t v6 = *(void **)(v0 + 736);
  uint64_t v7 = *(void *)(v0 + 704);
  uint64_t v8 = *(void *)(v0 + 680);
  uint64_t v9 = *(void *)(v0 + 672);
  uint64_t v15 = *(void *)(v0 + 656);
  uint64_t v10 = *(void *)(v0 + 648);
  long long v11 = *(void **)(v0 + 632);
  long long v14 = *(_OWORD *)(v0 + 688);

  *(void *)(v0 + 400) = 0x3FF0000000000000;
  *(void *)(v0 + 408) = v9;
  *(_OWORD *)(v0 + 416) = 0u;
  *(_OWORD *)(v0 + 432) = 0u;
  *(unsigned char *)(v0 + 448) = *(unsigned char *)(v0 + 776);
  *(_WORD *)(v0 + 449) = 256;
  *(_DWORD *)(v0 + 451) = *(_DWORD *)(v0 + 777);
  *(unsigned char *)(v0 + 455) = *(unsigned char *)(v0 + 781);
  *(void *)(v0 + 456) = v8;
  *(_OWORD *)(v0 + 464) = v14;
  *(void *)(v0 + 480) = v7;
  *(unsigned char *)(v0 + 488) = *(unsigned char *)(v0 + 768);
  *(_DWORD *)(v0 + 492) = *(_DWORD *)(v0 + 772);
  *(_DWORD *)(v0 + 489) = *(_DWORD *)(v0 + 769);
  *(void *)(v0 + 496) = 0;
  *(void *)(v0 + 504) = v10;
  *(void *)(v0 + 512) = v15;
  *(void *)(v0 + 520) = v11;
  sub_1007C22E0(v0 + 400);
  swift_task_dealloc();
  long long v12 = *(uint64_t (**)(void))(v0 + 8);
  return v12();
}

uint64_t sub_1007C2144()
{
  uint64_t v1 = *(void **)(v0 + 736);
  uint64_t v2 = *(void **)(v0 + 728);
  uint64_t v3 = *(void *)(v0 + 704);
  uint64_t v4 = *(void *)(v0 + 696);
  uint64_t v5 = *(void *)(v0 + 672);
  uint64_t v6 = *(void **)(v0 + 632);
  long long v9 = *(_OWORD *)(v0 + 680);
  long long v10 = *(_OWORD *)(v0 + 648);

  swift_release();
  swift_release();
  *(void *)(v0 + 144) = 0x3FF0000000000000;
  *(void *)(v0 + 152) = v5;
  *(_OWORD *)(v0 + 160) = 0u;
  *(_OWORD *)(v0 + 176) = 0u;
  *(unsigned char *)(v0 + 192) = *(unsigned char *)(v0 + 776);
  *(_WORD *)(v0 + 193) = 256;
  *(_DWORD *)(v0 + 195) = *(_DWORD *)(v0 + 777);
  *(unsigned char *)(v0 + 199) = *(unsigned char *)(v0 + 781);
  *(_OWORD *)(v0 + 200) = v9;
  *(void *)(v0 + 216) = v4;
  *(void *)(v0 + 224) = v3;
  *(unsigned char *)(v0 + 232) = *(unsigned char *)(v0 + 768);
  *(_DWORD *)(v0 + 236) = *(_DWORD *)(v0 + 772);
  *(_DWORD *)(v0 + 233) = *(_DWORD *)(v0 + 769);
  *(void *)(v0 + 240) = 0;
  *(_OWORD *)(v0 + 248) = v10;
  *(void *)(v0 + 264) = v6;
  sub_1007C22E0(v0 + 144);
  swift_task_dealloc();
  uint64_t v7 = *(uint64_t (**)(void))(v0 + 8);
  return v7();
}

void *sub_1007C2298(void *a1)
{
  uint64_t v2 = (void *)a1[13];
  uint64_t v3 = (void *)a1[14];
  uint64_t v4 = (void *)a1[15];
  swift_bridgeObjectRetain();
  id v5 = v2;
  id v6 = v3;
  id v7 = v4;
  return a1;
}

uint64_t sub_1007C22E0(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 104);
  uint64_t v3 = *(void **)(a1 + 112);

  swift_bridgeObjectRelease();
  return a1;
}

void sub_1007C232C(uint64_t a1)
{
  sub_1007BF8D8(a1, *(char **)(v1 + 16));
}

uint64_t sub_1007C2334(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1005057FC(&qword_101680D78);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1007C239C()
{
  return _swift_deallocObject(v0, 24, 7);
}

void sub_1007C23D4(void *a1, uint64_t a2, void *a3)
{
  sub_1007BFAD4(a1, a2, a3, *(void *)(v3 + 16));
}

uint64_t sub_1007C23DC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1007C23EC()
{
  return swift_release();
}

uint64_t sub_1007C23F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1005057FC(&qword_101680D78);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1007C245C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v7 = sub_1005057FC(&qword_101672BB0);
  __chkstk_darwin(v7 - 8, v8);
  long long v10 = (char *)v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100522E9C(a1, (uint64_t)v10, &qword_101672BB0);
  uint64_t v11 = type metadata accessor for TaskPriority();
  uint64_t v12 = *(void *)(v11 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    sub_100522F00((uint64_t)v10, &qword_101672BB0);
    if (*(void *)(a3 + 16))
    {
LABEL_3:
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v13 = dispatch thunk of Actor.unownedExecutor.getter();
      uint64_t v15 = v14;
      swift_unknownObjectRelease();
      goto LABEL_6;
    }
  }
  else
  {
    TaskPriority.rawValue.getter();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v10, v11);
    if (*(void *)(a3 + 16)) {
      goto LABEL_3;
    }
  }
  uint64_t v13 = 0;
  uint64_t v15 = 0;
LABEL_6:
  uint64_t v16 = *v4;
  type metadata accessor for _AppExtensionIdentity();
  uint64_t v17 = (void *)(v15 | v13);
  if (v15 | v13)
  {
    v20[0] = 0;
    v20[1] = 0;
    uint64_t v17 = v20;
    void v20[2] = v13;
    v20[3] = v15;
  }
  v19[1] = 1;
  long long v19[2] = v17;
  v19[3] = v16;
  swift_task_create();
  return swift_release();
}

void sub_1007C263C(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void (**)(void *))(a1 + 32);
  swift_retain();
  id v4 = a2;
  v3(a2);
  swift_release();
}

uint64_t sub_1007C26A8()
{
  uint64_t v0 = sub_1005057FC(&qword_101672BB0);
  __chkstk_darwin(v0 - 8, v1);
  uint64_t v3 = (char *)v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for TaskPriority();
  uint64_t v5 = *(void *)(v4 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v3, 1, 1, v4);
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = 0;
  *(void *)(v6 + 24) = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
  {
    sub_100522F00((uint64_t)v3, &qword_101672BB0);
    uint64_t v7 = 0;
    uint64_t v8 = 0;
  }
  else
  {
    TaskPriority.rawValue.getter();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v3, v4);
    if (*(void *)(v6 + 16))
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v7 = dispatch thunk of Actor.unownedExecutor.getter();
      uint64_t v8 = v9;
      swift_unknownObjectRelease();
    }
    else
    {
      uint64_t v7 = 0;
      uint64_t v8 = 0;
    }
  }
  type metadata accessor for _AppExtensionIdentity();
  if (v8 | v7)
  {
    v11[0] = 0;
    v11[1] = 0;
    void v11[2] = v7;
    v11[3] = v8;
  }
  return swift_task_create();
}

uint64_t sub_1007C28A8(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return _swift_task_switch(sub_1007C28C8, 0, 0);
}

uint64_t sub_1007C28C8()
{
  uint64_t v1 = type metadata accessor for _AppExtensionIdentity();
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 24) = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_1007C29A0;
  uint64_t v3 = *(void *)(v0 + 16);
  return withThrowingTaskGroup<A, B>(of:returning:isolation:body:)(v3, v1, v1, 0, 0, &unk_1016810C8, 0, v1);
}

uint64_t sub_1007C29A0()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 32) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return _swift_task_switch(sub_1007C2AD4, 0, 0);
  }
  else
  {
    uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_1007C2AD4()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1007C2AEC(uint64_t a1, uint64_t a2)
{
  v2[2] = a1;
  v2[3] = a2;
  sub_1005057FC(&qword_1016810D0);
  v2[4] = swift_task_alloc();
  v2[5] = swift_task_alloc();
  sub_1005057FC(&qword_101672BB0);
  v2[6] = swift_task_alloc();
  return _swift_task_switch(sub_1007C2BC0, 0, 0);
}

uint64_t sub_1007C2BC0()
{
  uint64_t v1 = v0[6];
  uint64_t v2 = type metadata accessor for TaskPriority();
  uint64_t v3 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56);
  v3(v1, 1, 1, v2);
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = 0;
  *(void *)(v4 + 24) = 0;
  *(void *)(v4 + 32) = 0xD000000000000016;
  *(void *)(v4 + 40) = 0x8000000101252A10;
  *(unsigned char *)(v4 + 48) = 5;
  sub_1007C245C(v1, (uint64_t)&unk_1016810E0, v4);
  sub_100522F00(v1, &qword_101672BB0);
  v3(v1, 1, 1, v2);
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = 0;
  *(void *)(v5 + 24) = 0;
  sub_1007C245C(v1, (uint64_t)&unk_1016810F0, v5);
  sub_100522F00(v1, &qword_101672BB0);
  uint64_t v6 = (void *)swift_task_alloc();
  v0[7] = v6;
  uint64_t v7 = sub_1005057FC(&qword_1016810F8);
  *uint64_t v6 = v0;
  v6[1] = sub_1007C2DA0;
  uint64_t v8 = v0[5];
  return ThrowingTaskGroup.next(isolation:)(v8, 0, 0, v7);
}

uint64_t sub_1007C2DA0()
{
  *(void *)(*(void *)v1 + 64) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1007C30B4;
  }
  else {
    uint64_t v2 = sub_1007C2EB4;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1007C2EB4()
{
  uint64_t v2 = v0[4];
  uint64_t v1 = v0[5];
  uint64_t v3 = type metadata accessor for _AppExtensionIdentity();
  sub_1005057FC(&qword_101672BD0);
  ThrowingTaskGroup.cancelAll()();
  sub_100522E9C(v1, v2, &qword_1016810D0);
  uint64_t v4 = *(void *)(v3 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3) == 1)
  {
    uint64_t v5 = v0[5];
    sub_100522F00(v0[4], &qword_1016810D0);
    sub_100776FC8();
    swift_allocError();
    *(void *)uint64_t v6 = 0xD000000000000016;
    *(void *)(v6 + 8) = 0x8000000101252A10;
    *(unsigned char *)(v6 + 16) = 5;
    swift_willThrow();
    sub_100522F00(v5, &qword_1016810D0);
  }
  else
  {
    uint64_t v8 = v0[4];
    uint64_t v9 = v0[2];
    sub_100522F00(v0[5], &qword_1016810D0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 32))(v9, v8, v3);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

uint64_t sub_1007C30B4()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1007C3134(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  *(unsigned char *)(v6 + 304) = a6;
  *(void *)(v6 + 160) = a4;
  *(void *)(v6 + 168) = a5;
  *(void *)(v6 + 152) = a1;
  sub_1005057FC(&qword_1016810D0);
  *(void *)(v6 + 176) = swift_task_alloc();
  *(void *)(v6 + 184) = swift_task_alloc();
  uint64_t v7 = type metadata accessor for _AppExtensionQuery.Results.AsyncIterator();
  *(void *)(v6 + 192) = v7;
  *(void *)(v6 + 200) = *(void *)(v7 - 8);
  *(void *)(v6 + 208) = swift_task_alloc();
  uint64_t v8 = type metadata accessor for _AppExtensionQuery.Results();
  *(void *)(v6 + 216) = v8;
  *(void *)(v6 + 224) = *(void *)(v8 - 8);
  *(void *)(v6 + 232) = swift_task_alloc();
  uint64_t v9 = type metadata accessor for _AppExtensionQuery();
  *(void *)(v6 + 240) = v9;
  *(void *)(v6 + 248) = *(void *)(v9 - 8);
  *(void *)(v6 + 256) = swift_task_alloc();
  return _swift_task_switch(sub_1007C32F4, 0, 0);
}

uint64_t sub_1007C32F4()
{
  _AppExtensionQuery.init(extensionPointIdentifier:)();
  _AppExtensionQuery.results.getter();
  _AppExtensionQuery.Results.makeAsyncIterator()();
  uint64_t v1 = sub_1007CF120(&qword_101681100, (void (*)(uint64_t))&type metadata accessor for _AppExtensionQuery.Results.AsyncIterator);
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 264) = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_1007C3420;
  uint64_t v3 = *(void *)(v0 + 192);
  return dispatch thunk of AsyncIteratorProtocol.next()(v0 + 136, v3, v1);
}

uint64_t sub_1007C3420()
{
  *(void *)(*(void *)v1 + 272) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1007C384C;
  }
  else {
    uint64_t v2 = sub_1007C3534;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1007C3534()
{
  *(void *)(v0 + 280) = *(void *)(v0 + 136);
  return _swift_task_switch(sub_1007C3558, 0, 0);
}

uint64_t sub_1007C3558()
{
  if (*(void *)(v0 + 280))
  {
    type metadata accessor for MainActor();
    *(void *)(v0 + 288) = static MainActor.shared.getter();
    uint64_t v2 = dispatch thunk of Actor.unownedExecutor.getter();
    return _swift_task_switch(sub_1007C37A8, v2, v1);
  }
  else
  {
    (*(void (**)(void, void))(*(void *)(v0 + 200) + 8))(*(void *)(v0 + 208), *(void *)(v0 + 192));
    if (qword_10166FB00 != -1) {
      swift_once();
    }
    uint64_t v4 = *(void *)(v0 + 160);
    unint64_t v3 = *(void *)(v0 + 168);
    char v5 = *(unsigned char *)(v0 + 304);
    swift_beginAccess();
    id v6 = (id)static OS_os_log.crlThreeDimensionalObjects;
    uint64_t v7 = static os_log_type_t.error.getter();
    sub_100BAC898((uint64_t)v6, (uint64_t)&_mh_execute_header, v7, (uint64_t)"(QueryExtension) unable to find extension", 41, 2, (uint64_t)_swiftEmptyArrayStorage);

    sub_100776FC8();
    swift_allocError();
    *(void *)uint64_t v8 = v4;
    *(void *)(v8 + 8) = v3;
    *(unsigned char *)(v8 + 16) = v5;
    sub_100767448(v4, v3, v5);
    swift_willThrow();
    uint64_t v10 = *(void *)(v0 + 248);
    uint64_t v9 = *(void *)(v0 + 256);
    uint64_t v11 = *(void *)(v0 + 240);
    (*(void (**)(void, void))(*(void *)(v0 + 224) + 8))(*(void *)(v0 + 232), *(void *)(v0 + 216));
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v9, v11);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v12 = *(uint64_t (**)(void))(v0 + 8);
    return v12();
  }
}

uint64_t sub_1007C37A8()
{
  uint64_t v1 = (char *)v0[35];
  uint64_t v2 = v0[34];
  unint64_t v3 = v0[23];
  swift_release();
  sub_1007C3E70(v1, v3);
  v0[37] = v2;
  swift_bridgeObjectRelease();
  if (v2) {
    uint64_t v4 = sub_1007C3D7C;
  }
  else {
    uint64_t v4 = sub_1007C39CC;
  }
  return _swift_task_switch(v4, 0, 0);
}

uint64_t sub_1007C384C()
{
  *(void *)(v0 + 144) = *(void *)(v0 + 272);
  sub_1005057FC(&qword_101672BD0);
  swift_willThrowTypedImpl();
  return _swift_task_switch(sub_1007C38D8, 0, 0);
}

uint64_t sub_1007C38D8()
{
  (*(void (**)(void, void))(v0[25] + 8))(v0[26], v0[24]);
  uint64_t v2 = v0[31];
  uint64_t v1 = v0[32];
  uint64_t v3 = v0[30];
  (*(void (**)(void, void))(v0[28] + 8))(v0[29], v0[27]);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_1007C39CC()
{
  uint64_t v1 = v0[22];
  sub_100522E9C(v0[23], v1, &qword_1016810D0);
  uint64_t v2 = type metadata accessor for _AppExtensionIdentity();
  uint64_t v3 = *(void *)(v2 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1)
  {
    uint64_t v4 = v0[22];
    sub_100522F00(v0[23], &qword_1016810D0);
    sub_100522F00(v4, &qword_1016810D0);
    uint64_t v5 = sub_1007CF120(&qword_101681100, (void (*)(uint64_t))&type metadata accessor for _AppExtensionQuery.Results.AsyncIterator);
    uint64_t v6 = (void *)swift_task_alloc();
    v0[33] = v6;
    *uint64_t v6 = v0;
    v6[1] = sub_1007C3420;
    uint64_t v7 = v0[24];
    return dispatch thunk of AsyncIteratorProtocol.next()(v0 + 17, v7, v5);
  }
  else
  {
    (*(void (**)(void, void, uint64_t))(v3 + 32))(v0[19], v0[22], v2);
    if (qword_10166FB00 != -1) {
      swift_once();
    }
    uint64_t v8 = v0[31];
    uint64_t v9 = v0[32];
    uint64_t v10 = v0[28];
    uint64_t v25 = v0[29];
    uint64_t v26 = v0[30];
    uint64_t v11 = v0[25];
    uint64_t v23 = v0[26];
    uint64_t v24 = v0[27];
    uint64_t v21 = v0[23];
    uint64_t v22 = v0[24];
    swift_beginAccess();
    uint64_t v12 = (void *)static OS_os_log.crlThreeDimensionalObjects;
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_10117E810;
    id v14 = v12;
    uint64_t v15 = _AppExtensionIdentity.bundleIdentifier.getter();
    uint64_t v17 = v16;
    *(void *)(inited + 56) = &type metadata for String;
    *(void *)(inited + 64) = sub_100528BE4();
    *(void *)(inited + 32) = v15;
    *(void *)(inited + 40) = v17;
    uint64_t v18 = static os_log_type_t.debug.getter();
    sub_100BAC898((uint64_t)v14, (uint64_t)&_mh_execute_header, v18, (uint64_t)"(QueryExtension) using extension: %{public}@", 44, 2, inited);
    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();

    sub_100522F00(v21, &qword_1016810D0);
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v23, v22);
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v25, v24);
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v9, v26);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v19 = (uint64_t (*)(void))v0[1];
    return v19();
  }
}

uint64_t sub_1007C3D7C()
{
  (*(void (**)(void, void))(v0[25] + 8))(v0[26], v0[24]);
  uint64_t v2 = v0[31];
  uint64_t v1 = v0[32];
  uint64_t v3 = v0[30];
  (*(void (**)(void, void))(v0[28] + 8))(v0[29], v0[27]);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_1007C3E70@<X0>(char *a1@<X0>, unint64_t a2@<X8>)
{
  uint64_t v5 = sub_1005057FC(&qword_1016810D0);
  __chkstk_darwin(v5 - 8, v6);
  uint64_t v8 = (char *)v53 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for _AppExtensionIdentity();
  uint64_t v10 = *(char **)(v9 - 8);
  __chkstk_darwin(v9, v11);
  uint64_t v13 = (char *)v53 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14, v15);
  uint64_t v17 = (char *)v53 - v16;
  uint64_t result = static Task<>.checkCancellation()();
  if (v2) {
    return result;
  }
  uint64_t v62 = v8;
  uint64_t v55 = 0;
  if (qword_10166FB00 != -1) {
    goto LABEL_32;
  }
  while (1)
  {
    id v64 = v13;
    unint64_t v56 = a2;
    swift_beginAccess();
    uint64_t v19 = (void *)static OS_os_log.crlThreeDimensionalObjects;
    uint64_t v20 = sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t inited = swift_initStackObject();
    long long v60 = xmmword_10117E810;
    *(_OWORD *)(inited + 16) = xmmword_10117E810;
    unint64_t v58 = inited;
    CGAffineTransform v59 = (void (**)(char *, uint64_t))(inited + 32);
    uint64_t v13 = (char *)*((void *)a1 + 2);
    uint64_t v69 = v9;
    int v57 = a1;
    id v63 = v10;
    int v61 = v13;
    if (v13)
    {
      double v68 = (void (**)(char *, void, uint64_t, uint64_t))v17;
      v53[1] = v20;
      double v70 = _swiftEmptyArrayStorage;
      unint64_t v54 = (unint64_t)v19;
      id v22 = v19;
      sub_1006BB504(0, (int64_t)v13, 0);
      uint64_t v24 = (void (*)(void (**)(char *, void, uint64_t, uint64_t), char *, uint64_t))*((void *)v10 + 2);
      uint64_t v23 = (char **)(v10 + 16);
      id v66 = v24;
      uint64_t v25 = &a1[(*((unsigned __int8 *)v23 + 64) + 32) & ~(unint64_t)*((unsigned __int8 *)v23 + 64)];
      CGRect v65 = v23[7];
      double v67 = v23;
      uint64_t v26 = v23 - 1;
      uint64_t v27 = v13;
      do
      {
        id v28 = (void (**)(void, void, uint64_t, uint64_t))v68;
        v66(v68, v25, v9);
        uint64_t v29 = _AppExtensionIdentity.bundleIdentifier.getter();
        uint64_t v31 = v30;
        ((void (*)(void (**)(void, void, uint64_t, uint64_t), uint64_t))*v26)(v28, v9);
        uint64_t v32 = v70;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1006BB504(0, *((void *)v32 + 2) + 1, 1);
          uint64_t v32 = v70;
        }
        unint64_t v34 = *((void *)v32 + 2);
        unint64_t v33 = *((void *)v32 + 3);
        if (v34 >= v33 >> 1)
        {
          sub_1006BB504(v33 > 1, v34 + 1, 1);
          uint64_t v32 = v70;
        }
        *((void *)v32 + 2) = v34 + 1;
        char v35 = &v32[2 * v34];
        *((void *)v35 + 4) = v29;
        *((void *)v35 + 5) = v31;
        uint64_t v25 = &v65[(void)v25];
        --v27;
        uint64_t v9 = v69;
      }
      while (v27);
      uint64_t v13 = v61;
      uint64_t v19 = (void *)v54;
    }
    else
    {
      id v36 = v19;
      uint64_t v32 = _swiftEmptyArrayStorage;
    }
    double v70 = v32;
    sub_1005057FC((uint64_t *)&unk_1016773F0);
    sub_10056547C();
    uint64_t v37 = BidirectionalCollection<>.joined(separator:)();
    uint64_t v39 = v38;
    swift_bridgeObjectRelease();
    id v40 = (void *)v58;
    *(void *)(v58 + 56) = &type metadata for String;
    v40[8] = sub_100528BE4();
    v40[4] = v37;
    v40[5] = v39;
    uint64_t v41 = static os_log_type_t.debug.getter();
    sub_100BAC898((uint64_t)v19, (uint64_t)&_mh_execute_header, v41, (uint64_t)"(QueryExtension) found extensions: [%{public}@]", 47, 2, (uint64_t)v40);
    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();

    uint64_t v42 = swift_initStackObject();
    uint64_t v43 = v42;
    *(_OWORD *)(v42 + 16) = v60;
    *(void *)(v42 + 56) = &type metadata for Int;
    *(void *)(v42 + 64) = &protocol witness table for Int;
    *(void *)(v42 + 32) = v13;
    if (v13 == (char *)1)
    {
      swift_bridgeObjectRelease();
      uint64_t v10 = v62;
      uint64_t v44 = v63;
      goto LABEL_15;
    }
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"findExtensionIdentity()", 23, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/USD Rendering/App Extension/CRLUSDRendererExtensionShared.swift", 133, 2, 55, (uint64_t)"Unexpectedly found %d extension identities. Using first found.", 62, 2u, v42);
    uint64_t v9 = v69;
    sub_1005598CC(v43, (uint64_t)"findExtensionIdentity()", 23, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/USD Rendering/App Extension/CRLUSDRendererExtensionShared.swift", 133, 2, 55);
    swift_bridgeObjectRelease();
    uint64_t v10 = v62;
    uint64_t v44 = v63;
    if (!v13) {
      break;
    }
LABEL_15:
    uint64_t v46 = (void (*)(void (**)(char *, void, uint64_t, uint64_t), char *, uint64_t))*((void *)v44 + 2);
    double v45 = v44 + 16;
    id v66 = v46;
    uint64_t v47 = &v57[(v45[64] + 32) & ~(unint64_t)v45[64]];
    *(void *)&long long v60 = *((void *)v45 + 7);
    double v67 = (char **)(v45 + 16);
    id v63 = v45;
    CGAffineTransform v59 = (void (**)(char *, uint64_t))(v45 - 8);
    swift_bridgeObjectRetain();
    uint64_t v17 = 0;
    double v68 = (void (**)(char *, void, uint64_t, uint64_t))(v45 + 40);
    a2 = (unint64_t)(v45 + 40) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
    unint64_t v54 = a2;
    CGRect v65 = "identities. Using first found.";
    unint64_t v58 = 0x8000000101252C20;
    while (1)
    {
      v66((void (**)(char *, void, uint64_t, uint64_t))v10, v47, v9);
      a1 = v17 + 1;
      if (__OFADD__(v17, 1)) {
        break;
      }
      double v48 = (uint64_t (*)(unint64_t, uint64_t, uint64_t, uint64_t))*v68;
      (*v68)(v10, 0, 1, v9);
      if ((*((unsigned int (**)(char *, uint64_t, uint64_t))v45 + 4))(v10, 1, v9) == 1) {
        goto LABEL_29;
      }
      uint64_t v13 = *v67;
      ((void (*)(char *, char *, uint64_t))*v67)(v64, v10, v9);
      uint64_t v49 = _AppExtensionIdentity.bundleIdentifier.getter();
      a2 = v50;
      if (v49 == 0xD000000000000027 && v50 == v58)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
LABEL_26:
        unint64_t v52 = v56;
        ((void (*)(unint64_t, char *, uint64_t))v13)(v56, v64, v9);
        return v48(v52, 0, 1, v9);
      }
      char v51 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if (v51)
      {
        swift_bridgeObjectRelease();
        uint64_t v9 = v69;
        goto LABEL_26;
      }
      uint64_t v9 = v69;
      (*v59)(v64, v69);
      ++v17;
      v47 += v60;
      uint64_t v10 = v62;
      if (a1 == v61) {
        goto LABEL_28;
      }
    }
    __break(1u);
LABEL_32:
    swift_once();
  }
  double v48 = (uint64_t (*)(unint64_t, uint64_t, uint64_t, uint64_t))*((void *)v63 + 7);
  swift_bridgeObjectRetain();
  unint64_t v54 = (unint64_t)(v44 + 56) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
LABEL_28:
  v48((unint64_t)v10, 1, 1, v9);
LABEL_29:
  swift_bridgeObjectRelease();
  return v48(v56, 1, 1, v9);
}

uint64_t sub_1007C46AC()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 40) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1007C4744;
  return static Task<>.sleep(nanoseconds:)(2000000000);
}

uint64_t sub_1007C4744()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 48) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
  else
  {
    return _swift_task_switch(sub_1007C4878, 0, 0);
  }
}

uint64_t sub_1007C4878()
{
  uint64_t v1 = *(void *)(v0 + 48);
  static Task<>.checkCancellation()();
  if (!v1)
  {
    if (qword_10166FB00 != -1) {
      swift_once();
    }
    swift_beginAccess();
    id v2 = (id)static OS_os_log.crlThreeDimensionalObjects;
    uint64_t v3 = static os_log_type_t.debug.getter();
    sub_100BAC898((uint64_t)v2, (uint64_t)&_mh_execute_header, v3, (uint64_t)"(QueryExtension) timed out looking for extension", 48, 2, (uint64_t)_swiftEmptyArrayStorage);

    sub_100776FC8();
    swift_allocError();
    *(void *)uint64_t v4 = 0;
    *(void *)(v4 + 8) = 0;
    *(unsigned char *)(v4 + 16) = 6;
    swift_willThrow();
  }
  uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
  return v5();
}

uint64_t sub_1007C49AC(uint64_t a1)
{
  return sub_1007C4A14(a1, (void (*)(void))&type metadata accessor for JSONEncoder, (uint64_t (*)(void))&JSONEncoder.init(), &qword_10171AA18);
}

uint64_t sub_1007C49E0(uint64_t a1)
{
  return sub_1007C4A14(a1, (void (*)(void))&type metadata accessor for JSONDecoder, (uint64_t (*)(void))&JSONDecoder.init(), &qword_10171AA20);
}

uint64_t sub_1007C4A14(uint64_t a1, void (*a2)(void), uint64_t (*a3)(void), uint64_t *a4)
{
  a2(0);
  swift_allocObject();
  uint64_t result = a3();
  *a4 = result;
  return result;
}

id sub_1007C4A68(uint64_t a1)
{
  return sub_1007C4A90(a1, &protocolRef__CRLUSDAsyncRenderingDelegateXPC, &qword_10171AA28);
}

id sub_1007C4A7C(uint64_t a1)
{
  return sub_1007C4A90(a1, &protocolRef__CRLUSDAsyncRenderingXPC, &qword_10171AA30);
}

id sub_1007C4A90(uint64_t a1, void *a2, void *a3)
{
  id result = [self interfaceWithProtocol:*a2];
  *a3 = result;
  return result;
}

id sub_1007C4ADC()
{
  id v0 = [self interfaceWithProtocol:&OBJC_PROTOCOL___CRLUSDRenderingExtensionAPIEndpointProtocol];
  if (qword_10166F260 != -1) {
    swift_once();
  }
  [v0 setInterface:qword_10171AA28 forSelector:"makeCoreRERendererProxyForUUID:delegateProxy:flags:response:" argumentIndex:1 ofReply:0];
  if (qword_10166F268 != -1) {
    swift_once();
  }
  id result = [v0 setInterface:qword_10171AA30 forSelector:"makeCoreRERendererProxyForUUID:delegateProxy:flags:response:" argumentIndex:0 ofReply:1];
  qword_10171AA38 = (uint64_t)v0;
  return result;
}

uint64_t sub_1007C4BE4(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v32 = a3;
  uint64_t v29 = a2;
  uint64_t v4 = sub_1005057FC(&qword_101681218);
  uint64_t v30 = *(void *)(v4 - 8);
  uint64_t v31 = v4;
  __chkstk_darwin(v4, v5);
  id v28 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1005057FC(&qword_101681220);
  uint64_t v26 = *(void *)(v7 - 8);
  uint64_t v27 = v7;
  __chkstk_darwin(v7, v8);
  uint64_t v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1005057FC(&qword_101681228);
  uint64_t v25 = *(void *)(v11 - 8);
  __chkstk_darwin(v11, v12);
  uint64_t v14 = (char *)&v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1005057FC(&qword_101681230);
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15, v17);
  uint64_t v19 = (char *)&v24 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10050F848(a1, a1[3]);
  sub_1007CF5B8();
  uint64_t v20 = v32;
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  if (!v20)
  {
    char v33 = 0;
    sub_1007CF6B4();
    KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
    (*(void (**)(char *, uint64_t))(v25 + 8))(v14, v11);
    return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v19, v15);
  }
  if (v20 == 1)
  {
    char v34 = 1;
    sub_1007CF660();
    KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
    (*(void (**)(char *, uint64_t))(v26 + 8))(v10, v27);
    return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v19, v15);
  }
  char v35 = 2;
  sub_1007CF60C();
  id v22 = v28;
  KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
  uint64_t v23 = v31;
  KeyedEncodingContainer.encode(_:forKey:)();
  (*(void (**)(char *, uint64_t))(v30 + 8))(v22, v23);
  return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v19, v15);
}

unint64_t sub_1007C4F9C()
{
  unint64_t v1 = 0x656E6E6F63736964;
  if (*v0 != 1) {
    unint64_t v1 = 0xD000000000000013;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0xD000000000000011;
  }
}

uint64_t sub_1007C5004@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1007CC73C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1007C502C(uint64_t a1)
{
  unint64_t v2 = sub_1007CF5B8();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1007C5068(uint64_t a1)
{
  unint64_t v2 = sub_1007CF5B8();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1007C50A4(uint64_t a1)
{
  unint64_t v2 = sub_1007CF660();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1007C50E0(uint64_t a1)
{
  unint64_t v2 = sub_1007CF660();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1007C511C(uint64_t a1)
{
  unint64_t v2 = sub_1007CF60C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1007C5158(uint64_t a1)
{
  unint64_t v2 = sub_1007CF60C();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1007C5194(uint64_t a1)
{
  unint64_t v2 = sub_1007CF6B4();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1007C51D0(uint64_t a1)
{
  unint64_t v2 = sub_1007CF6B4();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1007C520C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1007CC8A4(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
  }
  return result;
}

uint64_t sub_1007C5238(void *a1)
{
  return sub_1007C4BE4(a1, *v1, v1[1]);
}

Swift::Int sub_1007C5254()
{
  uint64_t v1 = *(void *)(v0 + 8);
  Hasher.init(_seed:)();
  if (v1)
  {
    if (v1 != 1)
    {
      Hasher._combine(_:)(2uLL);
      String.hash(into:)();
      return Hasher._finalize()();
    }
    Swift::UInt v2 = 1;
  }
  else
  {
    Swift::UInt v2 = 0;
  }
  Hasher._combine(_:)(v2);
  return Hasher._finalize()();
}

void sub_1007C52D4()
{
  uint64_t v1 = *(void *)(v0 + 8);
  if (!v1)
  {
    Swift::UInt v2 = 0;
    goto LABEL_5;
  }
  if (v1 == 1)
  {
    Swift::UInt v2 = 1;
LABEL_5:
    Hasher._combine(_:)(v2);
    return;
  }
  Hasher._combine(_:)(2uLL);

  String.hash(into:)();
}

Swift::Int sub_1007C535C()
{
  uint64_t v1 = *(void *)(v0 + 8);
  Hasher.init(_seed:)();
  if (v1)
  {
    if (v1 != 1)
    {
      Hasher._combine(_:)(2uLL);
      String.hash(into:)();
      return Hasher._finalize()();
    }
    Swift::UInt v2 = 1;
  }
  else
  {
    Swift::UInt v2 = 0;
  }
  Hasher._combine(_:)(v2);
  return Hasher._finalize()();
}

uint64_t sub_1007C53D8(void *a1, void *a2)
{
  uint64_t v3 = a1[1];
  unint64_t v4 = a2[1];
  if (!v3) {
    return !v4;
  }
  if (v3 == 1) {
    return v4 == 1;
  }
  if (v4 < 2) {
    return 0;
  }
  if (*a1 != *a2 || v3 != v4) {
    return _stringCompareWithSmolCheck(_:_:expecting:)();
  }
  return 1;
}

void sub_1007C5438(uint64_t a1)
{
  if (a1)
  {
    swift_errorRetain();
    uint64_t v1 = (void *)_convertErrorToNSError(_:)();
    uint64_t v2 = sub_100AD96E8(v1);
    if (v4 == -1)
    {
      sub_1005057FC(&qword_10167F0F0);
      CheckedContinuation.resume(throwing:)();
    }
    else
    {
      uint64_t v5 = v2;
      uint64_t v6 = v3;
      char v7 = v4;
      sub_100776FC8();
      swift_allocError();
      *(void *)uint64_t v8 = v5;
      *(void *)(v8 + 8) = v6;
      *(unsigned char *)(v8 + 16) = v7;
      sub_1005057FC(&qword_10167F0F0);
      CheckedContinuation.resume(throwing:)();
      swift_errorRelease();
    }
  }
  else
  {
    sub_1005057FC(&qword_10167F0F0);
    CheckedContinuation.resume(returning:)();
  }
}

uint64_t sub_1007C5528(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[4] = a6;
  _OWORD v7[5] = a7;
  _OWORD v7[2] = a4;
  v7[3] = a5;
  sub_1005057FC((uint64_t *)&unk_101674520);
  v7[6] = swift_task_alloc();
  type metadata accessor for MainActor();
  v7[7] = static MainActor.shared.getter();
  uint64_t v9 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_1007C55F4, v9, v8);
}

uint64_t sub_1007C55F4()
{
  uint64_t v1 = v0[6];
  uint64_t v2 = v0[5];
  uint64_t v3 = (void (*)(uint64_t, void))v0[2];
  swift_release();
  uint64_t ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(ObjectType, v2);
  uint64_t v5 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v1, 0, 1, v5);
  v3(v1, 0);
  sub_100522F00(v1, (uint64_t *)&unk_101674520);
  swift_task_dealloc();
  uint64_t v6 = (uint64_t (*)(void))v0[1];
  return v6();
}

void sub_1007C5768(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1005057FC((uint64_t *)&unk_101674520);
  __chkstk_darwin(v6 - 8, v7);
  uint64_t v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100522E9C(a1, (uint64_t)v9, (uint64_t *)&unk_101674520);
  uint64_t v10 = type metadata accessor for UUID();
  uint64_t v11 = *(void *)(v10 - 8);
  Class isa = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) != 1)
  {
    Class isa = UUID._bridgeToObjectiveC()().super.isa;
    (*(void (**)(char *, uint64_t))(v11 + 8))(v9, v10);
  }
  if (a2) {
    uint64_t v13 = (void *)_convertErrorToNSError(_:)();
  }
  else {
    uint64_t v13 = 0;
  }
  (*(void (**)(uint64_t, Class, void *))(a3 + 16))(a3, isa, v13);
}

uint64_t sub_1007C58BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[6] = v13;
  v8[7] = v14;
  v8[4] = a7;
  v8[5] = a8;
  long long v8[2] = a4;
  v8[3] = a5;
  v8[8] = type metadata accessor for CRLUSDRendering.SceneRequest(0);
  v8[9] = swift_task_alloc();
  type metadata accessor for MainActor();
  v8[10] = static MainActor.shared.getter();
  uint64_t v10 = dispatch thunk of Actor.unownedExecutor.getter();
  v8[11] = v10;
  v8[12] = v9;
  return _swift_task_switch(sub_1007C5994, v10, v9);
}

uint64_t sub_1007C5994()
{
  if (qword_10166F258 != -1) {
    swift_once();
  }
  sub_1007CF120(&qword_1016811B8, (void (*)(uint64_t))type metadata accessor for CRLUSDRendering.SceneRequest);
  dispatch thunk of JSONDecoder.decode<A>(_:from:)();
  uint64_t v7 = v0[3];
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 + 16) + **(int **)(v7 + 16));
  uint64_t v2 = (void *)swift_task_alloc();
  v0[13] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_1007C5BAC;
  uint64_t v3 = v0[9];
  uint64_t v4 = v0[3];
  return v6(v3, ObjectType, v4);
}

uint64_t sub_1007C5BAC()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *(void *)(*v1 + 72);
  *(void *)(*v1 + 112) = v0;
  swift_task_dealloc();
  sub_1007CF168(v3);
  uint64_t v4 = *(void *)(v2 + 96);
  uint64_t v5 = *(void *)(v2 + 88);
  if (v0) {
    uint64_t v6 = sub_1007C5D7C;
  }
  else {
    uint64_t v6 = sub_1007C5D04;
  }
  return _swift_task_switch(v6, v5, v4);
}

uint64_t sub_1007C5D04()
{
  uint64_t v1 = *(void (**)(void))(v0 + 48);
  swift_release();
  v1(0);
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_1007C5D7C()
{
  swift_release();
  uint64_t v1 = v0[14];
  uint64_t v2 = (void (*)(uint64_t))v0[6];
  swift_errorRetain();
  v2(v1);
  swift_errorRelease();
  swift_errorRelease();
  swift_task_dealloc();
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t sub_1007C5E30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  unsigned char v8[24] = v13;
  v8[25] = v14;
  v8[22] = a7;
  v8[23] = a8;
  v8[21] = a5;
  v8[11] = a4;
  type metadata accessor for MainActor();
  v8[26] = static MainActor.shared.getter();
  uint64_t v10 = dispatch thunk of Actor.unownedExecutor.getter();
  v8[27] = v10;
  v8[28] = v9;
  return _swift_task_switch(sub_1007C5EDC, v10, v9);
}

uint64_t sub_1007C5EDC()
{
  if (qword_10166F258 != -1) {
    swift_once();
  }
  sub_1007CEF7C();
  dispatch thunk of JSONDecoder.decode<A>(_:from:)();
  uint64_t v8 = *(void *)(v0 + 168);
  uint64_t ObjectType = swift_getObjectType();
  long long v2 = *(_OWORD *)(v0 + 144);
  *(_OWORD *)(v0 + 48) = *(_OWORD *)(v0 + 128);
  *(_OWORD *)(v0 + 64) = v2;
  *(void *)(v0 + 80) = *(void *)(v0 + 160);
  long long v3 = *(_OWORD *)(v0 + 112);
  *(_OWORD *)(v0 + 16) = *(_OWORD *)(v0 + 96);
  *(_OWORD *)(v0 + 32) = v3;
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 + 24) + **(int **)(v8 + 24));
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 232) = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_1007C60DC;
  uint64_t v5 = *(void *)(v0 + 168);
  return v7(v0 + 16, ObjectType, v5);
}

uint64_t sub_1007C60DC()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 240) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 216);
  uint64_t v4 = *(void *)(v2 + 224);
  if (v0) {
    uint64_t v5 = sub_1007C6260;
  }
  else {
    uint64_t v5 = sub_1007C61F0;
  }
  return _swift_task_switch(v5, v3, v4);
}

uint64_t sub_1007C61F0()
{
  uint64_t v1 = *(void (**)(void))(v0 + 192);
  swift_release();
  v1(0);
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_1007C6260()
{
  swift_release();
  uint64_t v1 = v0[30];
  uint64_t v2 = (void (*)(uint64_t))v0[24];
  swift_errorRetain();
  v2(v1);
  swift_errorRelease();
  swift_errorRelease();
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t sub_1007C630C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[7] = v13;
  v8[8] = v14;
  v8[5] = a7;
  v8[6] = a8;
  v8[3] = a4;
  v8[4] = a5;
  type metadata accessor for MainActor();
  v8[9] = static MainActor.shared.getter();
  uint64_t v10 = dispatch thunk of Actor.unownedExecutor.getter();
  v8[10] = v10;
  v8[11] = v9;
  return _swift_task_switch(sub_1007C63B4, v10, v9);
}

uint64_t sub_1007C63B4()
{
  if (qword_10166F258 != -1) {
    swift_once();
  }
  sub_1005057FC(&qword_101681080);
  sub_1007CEDC0(&qword_101681180, (void (*)(void))sub_1007CEE30);
  dispatch thunk of JSONDecoder.decode<A>(_:from:)();
  uint64_t v7 = v0[4];
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v2 = v0[2];
  v0[12] = v2;
  uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 + 40) + **(int **)(v7 + 40));
  uint64_t v3 = (void *)swift_task_alloc();
  v0[13] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_1007C65D8;
  uint64_t v4 = v0[4];
  return v6(v2, ObjectType, v4);
}

uint64_t sub_1007C65D8()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 112) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 80);
    uint64_t v4 = *(void *)(v2 + 88);
    uint64_t v5 = sub_1007C6764;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v3 = *(void *)(v2 + 80);
    uint64_t v4 = *(void *)(v2 + 88);
    uint64_t v5 = sub_1007C66F4;
  }
  return _swift_task_switch(v5, v3, v4);
}

uint64_t sub_1007C66F4()
{
  uint64_t v1 = *(void (**)(void))(v0 + 56);
  swift_release();
  v1(0);
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_1007C6764()
{
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v1 = v0[14];
  uint64_t v2 = (void (*)(uint64_t))v0[7];
  swift_errorRetain();
  v2(v1);
  swift_errorRelease();
  swift_errorRelease();
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

void sub_1007C681C(void *a1, int a2, void *a3, void *aBlock, void (*a5)(uint64_t, unint64_t, id, void *))
{
  uint64_t v8 = _Block_copy(aBlock);
  id v9 = a3;
  id v13 = a1;
  uint64_t v10 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v12 = v11;

  _Block_copy(v8);
  a5(v10, v12, v13, v8);
  _Block_release(v8);
  _Block_release(v8);
  sub_100510084(v10, v12);
}

uint64_t sub_1007C68DC(float a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  long long v8[2] = a7;
  v8[3] = a8;
  uint64_t v11 = type metadata accessor for UTType();
  v8[4] = v11;
  v8[5] = *(void *)(v11 - 8);
  v8[6] = swift_task_alloc();
  v8[7] = type metadata accessor for MainActor();
  v8[8] = static MainActor.shared.getter();
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v16 = (uint64_t (*)(uint64_t, uint64_t, __n128))(*(void *)(a6 + 48) + **(int **)(a6 + 48));
  id v13 = (void *)swift_task_alloc();
  v8[9] = v13;
  *id v13 = v8;
  v13[1] = sub_1007C6A70;
  v14.n128_f32[0] = a1;
  return v16(ObjectType, a6, v14);
}

uint64_t sub_1007C6A70(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 80) = a1;
  *(void *)(v3 + 88) = v1;
  swift_task_dealloc();
  uint64_t v5 = dispatch thunk of Actor.unownedExecutor.getter();
  if (v1) {
    uint64_t v6 = sub_1007C6E08;
  }
  else {
    uint64_t v6 = sub_1007C6BD0;
  }
  return _swift_task_switch(v6, v5, v4);
}

uint64_t sub_1007C6BD0()
{
  uint64_t v1 = v0[10];
  swift_release();
  if (v1)
  {
    uint64_t v2 = (CGImage *)v0[10];
    CFMutableDataRef Mutable = CFDataCreateMutable(0, 0);
    if (Mutable)
    {
      uint64_t v4 = Mutable;
      uint64_t v6 = v0[5];
      uint64_t v5 = v0[6];
      uint64_t v7 = v0[4];
      static UTType.png.getter();
      UTType.identifier.getter();
      (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
      uint64_t v8 = (__CFString *)String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      id v9 = CGImageDestinationCreateWithData(v4, v8, 1uLL, 0);

      if (v9)
      {
        CGImageDestinationAddImage(v9, v2, 0);
        if (CGImageDestinationFinalize(v9))
        {
          uint64_t v10 = (void (*)(uint64_t, unint64_t, void))v0[2];
          uint64_t v11 = v4;
          uint64_t v12 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
          unint64_t v14 = v13;

          sub_100510D4C(v12, v14);
          v10(v12, v14, 0);
          sub_100510084(v12, v14);
          sub_100510084(v12, v14);

          goto LABEL_11;
        }
      }
      else
      {
        id v9 = v4;
      }
    }
    sub_100776FC8();
    uint64_t v15 = swift_allocError();
    *(void *)uint64_t v16 = 0xD000000000000019;
    *(void *)(v16 + 8) = 0x8000000101252D10;
    *(unsigned char *)(v16 + 16) = 0;
    swift_willThrow();

    uint64_t v17 = (void (*)(void, unint64_t, uint64_t))v0[2];
    swift_errorRetain();
    v17(0, 0xF000000000000000, v15);
    swift_errorRelease();
    swift_errorRelease();
  }
  else
  {
    ((void (*)(void, unint64_t, void))v0[2])(0, 0xF000000000000000, 0);
  }
LABEL_11:
  swift_task_dealloc();
  uint64_t v18 = (uint64_t (*)(void))v0[1];
  return v18();
}

uint64_t sub_1007C6E08()
{
  swift_release();
  uint64_t v1 = v0[11];
  uint64_t v2 = (void (*)(void, unint64_t, uint64_t))v0[2];
  swift_errorRetain();
  v2(0, 0xF000000000000000, v1);
  swift_errorRelease();
  swift_errorRelease();
  swift_task_dealloc();
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t type metadata accessor for CRLUSDRendererExtensionShared.AsyncRendererReceiverProxy()
{
  return self;
}

uint64_t sub_1007C6F8C(uint64_t a1)
{
  v2[6] = a1;
  v2[7] = v1;
  uint64_t v3 = type metadata accessor for UUID();
  v2[8] = v3;
  v2[9] = *(void *)(v3 - 8);
  v2[10] = swift_task_alloc();
  v2[11] = swift_task_alloc();
  v2[12] = type metadata accessor for MainActor();
  v2[13] = static MainActor.shared.getter();
  uint64_t v5 = dispatch thunk of Actor.unownedExecutor.getter();
  v2[14] = v5;
  v2[15] = v4;
  return _swift_task_switch(sub_1007C7094, v5, v4);
}

uint64_t sub_1007C7094()
{
  uint64_t v1 = v0[11];
  uint64_t v2 = v0[8];
  uint64_t v3 = v0[9];
  uint64_t v4 = v0[7];
  *(void *)(v4 + 16) = v0[6];
  swift_unknownObjectRetain();
  UUID.init()();
  uint64_t v5 = OBJC_IVAR____TtCO8Freeform29CRLUSDRendererExtensionShared24AsyncRendererSenderProxy_uuid;
  v0[16] = OBJC_IVAR____TtCO8Freeform29CRLUSDRendererExtensionShared24AsyncRendererSenderProxy_uuid;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 32))(v4 + v5, v1, v2);
  v0[5] = v4;
  v0[17] = static MainActor.shared.getter();
  uint64_t v7 = dispatch thunk of Actor.unownedExecutor.getter();
  v0[18] = v7;
  v0[19] = v6;
  return _swift_task_switch(sub_1007C7174, v7, v6);
}

uint64_t sub_1007C7174()
{
  uint64_t v1 = static MainActor.shared.getter();
  v0[20] = v1;
  uint64_t v2 = (void *)swift_task_alloc();
  v0[21] = v2;
  v2[2] = v0 + 5;
  v2[3] = sub_1007C760C;
  v2[4] = 0;
  uint64_t v3 = (void *)swift_task_alloc();
  v0[22] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_1007C7290;
  uint64_t v4 = v0[10];
  uint64_t v5 = v0[8];
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v4, v1, &protocol witness table for MainActor, 0xD000000000000011, 0x80000001012529D0, sub_1007CCEBC, v2, v5);
}

uint64_t sub_1007C7290()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 184) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 144);
    uint64_t v4 = *(void *)(v2 + 152);
    uint64_t v5 = sub_1007C7500;
  }
  else
  {
    swift_release();
    swift_task_dealloc();
    uint64_t v3 = *(void *)(v2 + 144);
    uint64_t v4 = *(void *)(v2 + 152);
    uint64_t v5 = sub_1007C73B4;
  }
  return _swift_task_switch(v5, v3, v4);
}

uint64_t sub_1007C73B4()
{
  swift_release();
  uint64_t v1 = *(void *)(v0 + 112);
  uint64_t v2 = *(void *)(v0 + 120);
  return _swift_task_switch(sub_1007C7418, v1, v2);
}

uint64_t sub_1007C7418()
{
  uint64_t v1 = v0[16];
  uint64_t v2 = v0[10];
  uint64_t v3 = v0[8];
  uint64_t v4 = v0[9];
  uint64_t v5 = v0[7];
  swift_unknownObjectRelease();
  swift_release();
  swift_beginAccess();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 40))(v5 + v1, v2, v3);
  swift_endAccess();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v6 = (uint64_t (*)(uint64_t))v0[1];
  uint64_t v7 = v0[7];
  return v6(v7);
}

uint64_t sub_1007C7500()
{
  swift_release();
  swift_release();
  swift_task_dealloc();
  uint64_t v1 = *(void *)(v0 + 112);
  uint64_t v2 = *(void *)(v0 + 120);
  return _swift_task_switch(sub_1007C7578, v1, v2);
}

uint64_t sub_1007C7578()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

void sub_1007C760C(void **a1, uint64_t a2)
{
  uint64_t v4 = sub_1005057FC(&qword_10167EA68);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  __n128 v8 = __chkstk_darwin(v4, v7);
  uint64_t v9 = *a1;
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v5 + 16))((char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a2, v4, v8);
  unint64_t v10 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v11 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v11 + v10, (char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  aBlock[4] = sub_1007CCED8;
  aBlock[5] = v11;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = *(void *)"";
  aBlock[2] = sub_1007C7A08;
  void aBlock[3] = &unk_101514B40;
  uint64_t v12 = _Block_copy(aBlock);
  swift_release();
  [v9 getUUID:v12];
  _Block_release(v12);
}

uint64_t sub_1007C77C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1005057FC((uint64_t *)&unk_101674520);
  __chkstk_darwin(v4 - 8, v5);
  uint64_t v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for UUID();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8, v10);
  uint64_t v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13, v14);
  uint64_t v16 = (char *)&v20 - v15;
  sub_100522E9C(a1, (uint64_t)v7, (uint64_t *)&unk_101674520);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
  {
    sub_100522F00((uint64_t)v7, (uint64_t *)&unk_101674520);
    if (a2)
    {
      uint64_t v21 = a2;
      swift_errorRetain();
    }
    else
    {
      sub_100776FC8();
      uint64_t v18 = swift_allocError();
      *(void *)uint64_t v19 = 0;
      *(void *)(v19 + 8) = 0;
      *(unsigned char *)(v19 + 16) = 5;
      uint64_t v21 = v18;
    }
    sub_1005057FC(&qword_10167EA68);
    return CheckedContinuation.resume(throwing:)();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v16, v7, v8);
    (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v12, v16, v8);
    sub_1005057FC(&qword_10167EA68);
    CheckedContinuation.resume(returning:)();
    return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v16, v8);
  }
}

uint64_t sub_1007C7A08(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6 = sub_1005057FC((uint64_t *)&unk_101674520);
  __chkstk_darwin(v6 - 8, v7);
  uint64_t v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *(void (**)(char *, void *))(a1 + 32);
  if (a2)
  {
    static UUID._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v11 = type metadata accessor for UUID();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v9, 0, 1, v11);
  }
  else
  {
    uint64_t v12 = type metadata accessor for UUID();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v9, 1, 1, v12);
  }
  swift_retain();
  id v13 = a3;
  v10(v9, a3);
  swift_release();

  return sub_100522F00((uint64_t)v9, (uint64_t *)&unk_101674520);
}

void sub_1007C7B50(void **a1, uint64_t a2)
{
  uint64_t v19 = a2;
  uint64_t v4 = sub_1005057FC(&qword_10167F0F0);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  __chkstk_darwin(v4, v7);
  uint64_t v8 = *a1;
  if (qword_10166F250 != -1) {
    swift_once();
  }
  type metadata accessor for CRLUSDRendering.SceneRequest(0);
  sub_1007CF120(&qword_1016810A0, (void (*)(uint64_t))type metadata accessor for CRLUSDRendering.SceneRequest);
  uint64_t v9 = dispatch thunk of JSONEncoder.encode<A>(_:)();
  if (!v2)
  {
    uint64_t v11 = v9;
    unint64_t v12 = v10;
    Class isa = Data._bridgeToObjectiveC()().super.isa;
    sub_100510084(v11, v12);
    uint64_t v14 = v4;
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v19, v4);
    unint64_t v15 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
    uint64_t v16 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v16 + v15, (char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v14);
    aBlock[4] = sub_1007CC738;
    aBlock[5] = v16;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = *(void *)"";
    aBlock[2] = sub_1007C263C;
    void aBlock[3] = &unk_101514AF0;
    uint64_t v17 = _Block_copy(aBlock);
    swift_release();
    [v8 loadScene:isa response:v17];
    _Block_release(v17);
  }
}

void sub_1007C7DCC(void **a1, uint64_t a2, uint64_t a3, long long *a4)
{
  uint64_t v28 = a2;
  uint64_t v7 = sub_1005057FC(&qword_10167F0F0);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  __chkstk_darwin(v7, v10);
  uint64_t v11 = *a1;
  long long v12 = a4[3];
  long long v25 = a4[2];
  long long v26 = v12;
  uint64_t v27 = *((void *)a4 + 8);
  long long v13 = a4[1];
  long long aBlock = *a4;
  long long v24 = v13;
  if (qword_10166F250 != -1) {
    swift_once();
  }
  sub_1007CCE50();
  uint64_t v14 = dispatch thunk of JSONEncoder.encode<A>(_:)();
  if (!v4)
  {
    uint64_t v16 = v14;
    unint64_t v17 = v15;
    Class isa = Data._bridgeToObjectiveC()().super.isa;
    sub_100510084(v16, v17);
    uint64_t v19 = v7;
    (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))((char *)&aBlock - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v28, v7);
    unint64_t v20 = (*(unsigned __int8 *)(v8 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    uint64_t v21 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v21 + v20, (char *)&aBlock - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v19);
    *(void *)&long long v25 = sub_1007CC738;
    *((void *)&v25 + 1) = v21;
    *(void *)&long long aBlock = _NSConcreteStackBlock;
    *((void *)&aBlock + 1) = *(void *)"";
    *(void *)&long long v24 = sub_1007C263C;
    *((void *)&v24 + 1) = &unk_101514AA0;
    id v22 = _Block_copy(&aBlock);
    swift_release();
    [v11 updateScene:isa response:v22];
    _Block_release(v22);
  }
}

uint64_t sub_1007C8028(uint64_t a1, char a2)
{
  *(unsigned char *)(v3 + 120) = a2;
  *(void *)(v3 + 16) = a1;
  *(void *)(v3 + 24) = v2;
  *(void *)(v3 + 32) = type metadata accessor for MainActor();
  *(void *)(v3 + 40) = static MainActor.shared.getter();
  uint64_t v5 = dispatch thunk of Actor.unownedExecutor.getter();
  *(void *)(v3 + 48) = v5;
  *(void *)(v3 + 56) = v4;
  return _swift_task_switch(sub_1007C80C8, v5, v4);
}

uint64_t sub_1007C80C8()
{
  char v1 = *(unsigned char *)(v0 + 120);
  uint64_t v2 = *(void *)(v0 + 16);
  sub_1005057FC(&qword_10167E9D0);
  uint64_t v3 = swift_allocObject();
  *(void *)(v0 + 64) = v3;
  *(_OWORD *)(v3 + 16) = xmmword_10117E810;
  *(void *)(v3 + 32) = v2;
  *(unsigned char *)(v3 + 40) = v1;
  *(void *)(v0 + 72) = static MainActor.shared.getter();
  uint64_t v5 = dispatch thunk of Actor.unownedExecutor.getter();
  *(void *)(v0 + 80) = v5;
  *(void *)(v0 + 88) = v4;
  return _swift_task_switch(sub_1007C8194, v5, v4);
}

uint64_t sub_1007C8194()
{
  uint64_t v1 = v0[8];
  uint64_t v2 = v0[3];
  uint64_t v3 = swift_task_alloc();
  v0[12] = v3;
  *(void *)(v3 + 16) = v2;
  *(void *)(v3 + 24) = v1;
  uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_10167E9C0 + dword_10167E9C0);
  uint64_t v4 = (void *)swift_task_alloc();
  v0[13] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_1007C828C;
  return v6(0xD000000000000012, 0x800000010124DDB0, (uint64_t)sub_1007CFCA8, v3);
}

uint64_t sub_1007C828C()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 112) = v0;
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 88);
  uint64_t v4 = *(void *)(v2 + 80);
  if (v0) {
    uint64_t v5 = sub_1007C83E4;
  }
  else {
    uint64_t v5 = sub_100762244;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_1007C83E4()
{
  swift_release();
  uint64_t v1 = *(void *)(v0 + 48);
  uint64_t v2 = *(void *)(v0 + 56);
  return _swift_task_switch(sub_1007C8448, v1, v2);
}

uint64_t sub_1007C8448()
{
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

void sub_1007C84B8(id *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v21 = a2;
  uint64_t v7 = sub_1005057FC(&qword_10167F0F0);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  __chkstk_darwin(v7, v10);
  id v23 = *a1;
  aBlock[0] = a4;
  if (qword_10166F250 != -1) {
    swift_once();
  }
  sub_1005057FC(&qword_101681080);
  sub_1007CEDC0(&qword_101681088, (void (*)(void))sub_1007CC6D8);
  uint64_t v11 = dispatch thunk of JSONEncoder.encode<A>(_:)();
  if (!v4)
  {
    uint64_t v13 = v11;
    unint64_t v14 = v12;
    Class isa = Data._bridgeToObjectiveC()().super.isa;
    sub_100510084(v13, v14);
    uint64_t v16 = v7;
    (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))((char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v21, v7);
    unint64_t v17 = (*(unsigned __int8 *)(v8 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    uint64_t v18 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v18 + v17, (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v16);
    aBlock[4] = sub_1007CC738;
    aBlock[5] = v18;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = *(void *)"";
    aBlock[2] = sub_1007C263C;
    void aBlock[3] = &unk_101514A50;
    uint64_t v19 = _Block_copy(aBlock);
    swift_release();
    [v23 performActions:isa response:v19];
    _Block_release(v19);
  }
}

void sub_1007C8740(void **a1, uint64_t a2, float a3)
{
  uint64_t v6 = sub_1005057FC(&qword_10167E998);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  __n128 v10 = __chkstk_darwin(v6, v9);
  uint64_t v11 = *a1;
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v7 + 16))((char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), a2, v6, v10);
  unint64_t v12 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v13 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v13 + v12, (char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v6);
  aBlock[4] = sub_1007CC634;
  aBlock[5] = v13;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = *(void *)"";
  aBlock[2] = sub_1007C8A7C;
  void aBlock[3] = &unk_101514A00;
  unint64_t v14 = _Block_copy(aBlock);
  swift_release();
  *(float *)&double v15 = a3;
  [v11 takeSnapshotAt:v14 response:v15];
  _Block_release(v14);
}

void sub_1007C8904(uint64_t a1, unint64_t a2, uint64_t a3)
{
  if (a2 >> 60 == 15)
  {
    if (a3)
    {
      swift_errorRetain();
      sub_1005057FC(&qword_10167E998);
      CheckedContinuation.resume(throwing:)();
    }
    else
    {
      sub_1005057FC(&qword_10167E998);
      CheckedContinuation.resume(returning:)();
    }
  }
  else
  {
    sub_100510D4C(a1, a2);
    CFDataRef isa = Data._bridgeToObjectiveC()().super.isa;
    uint64_t v6 = CGImageSourceCreateWithData(isa, 0);

    if (v6)
    {
      ImageAtIndeCGFloat x = CGImageSourceCreateImageAtIndex(v6, 0, 0);
      if (ImageAtIndex)
      {
        uint64_t v8 = ImageAtIndex;
        sub_1005057FC(&qword_10167E998);
        CheckedContinuation.resume(returning:)();
        sub_100514260(a1, a2);

        return;
      }
    }
    sub_100776FC8();
    swift_allocError();
    *(void *)uint64_t v9 = 0xD000000000000019;
    *(void *)(v9 + 8) = 0x80000001012529B0;
    *(unsigned char *)(v9 + 16) = 0;
    sub_1005057FC(&qword_10167E998);
    CheckedContinuation.resume(throwing:)();
    sub_100514260(a1, a2);
  }
}

uint64_t sub_1007C8A7C(uint64_t a1, void *a2, void *a3)
{
  uint64_t v4 = a2;
  uint64_t v5 = *(void (**)(void *, unint64_t, void *))(a1 + 32);
  if (a2)
  {
    swift_retain();
    id v6 = v4;
    uint64_t v4 = (void *)static Data._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v8 = v7;
  }
  else
  {
    swift_retain();
    unint64_t v8 = 0xF000000000000000;
  }
  id v9 = a3;
  v5(v4, v8, a3);

  sub_100514260((uint64_t)v4, v8);

  return swift_release();
}

uint64_t sub_1007C8B28()
{
  return sub_1007CC4BC(&OBJC_IVAR____TtCO8Freeform29CRLUSDRendererExtensionShared24AsyncRendererSenderProxy_uuid);
}

uint64_t sub_1007C8B34()
{
  return type metadata accessor for CRLUSDRendererExtensionShared.AsyncRendererSenderProxy(0);
}

uint64_t type metadata accessor for CRLUSDRendererExtensionShared.AsyncRendererSenderProxy(uint64_t a1)
{
  return sub_100512D5C(a1, qword_101680DE8);
}

uint64_t sub_1007C8B60@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtCO8Freeform29CRLUSDRendererExtensionShared24AsyncRendererSenderProxy_uuid;
  swift_beginAccess();
  uint64_t v4 = type metadata accessor for UUID();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_1007C8BE4(uint64_t a1)
{
  v2[2] = a1;
  v2[3] = v1;
  type metadata accessor for MainActor();
  v2[4] = static MainActor.shared.getter();
  uint64_t v4 = dispatch thunk of Actor.unownedExecutor.getter();
  v2[5] = v4;
  v2[6] = v3;
  return _swift_task_switch(sub_1007C8C7C, v4, v3);
}

uint64_t sub_1007C8C7C()
{
  uint64_t v1 = (int8x16_t *)swift_task_alloc();
  v0[3].i64[1] = (uint64_t)v1;
  v1[1] = vextq_s8(v0[1], v0[1], 8uLL);
  uint64_t v4 = (uint64_t (*)(uint64_t, unint64_t, void (*)(void **, uint64_t), int8x16_t *))((char *)&dword_10167E9C0 + dword_10167E9C0);
  uint64_t v2 = (void *)swift_task_alloc();
  v0[4].i64[0] = (uint64_t)v2;
  *uint64_t v2 = v0;
  v2[1] = sub_1007C8D78;
  return v4(0x6E65635364616F6CLL, 0xED0000293A5F2865, sub_10076DB24, v1);
}

uint64_t sub_1007C8D78()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 72) = v0;
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 48);
  uint64_t v4 = *(void *)(v2 + 40);
  if (v0) {
    uint64_t v5 = sub_1007CFCD8;
  }
  else {
    uint64_t v5 = sub_10076EE4C;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_1007C8ED0(uint64_t a1)
{
  v2[2] = a1;
  v2[3] = v1;
  type metadata accessor for MainActor();
  v2[4] = static MainActor.shared.getter();
  uint64_t v4 = dispatch thunk of Actor.unownedExecutor.getter();
  v2[5] = v4;
  v2[6] = v3;
  return _swift_task_switch(sub_1007C8F68, v4, v3);
}

uint64_t sub_1007C8F68()
{
  uint64_t v1 = (int8x16_t *)swift_task_alloc();
  v0[3].i64[1] = (uint64_t)v1;
  v1[1] = vextq_s8(v0[1], v0[1], 8uLL);
  uint64_t v4 = (uint64_t (*)(uint64_t, unint64_t, void (*)(void **, uint64_t), int8x16_t *))((char *)&dword_10167E9C0 + dword_10167E9C0);
  uint64_t v2 = (void *)swift_task_alloc();
  v0[4].i64[0] = (uint64_t)v2;
  *uint64_t v2 = v0;
  v2[1] = sub_1007C9064;
  return v4(0x6353657461647075, 0xEF293A5F28656E65, sub_10076D934, v1);
}

uint64_t sub_1007C9064()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 72) = v0;
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 48);
  uint64_t v4 = *(void *)(v2 + 40);
  if (v0) {
    uint64_t v5 = sub_1007C91BC;
  }
  else {
    uint64_t v5 = sub_1007683BC;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_1007C91BC()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1007C9220(uint64_t a1, char a2)
{
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_100528488;
  return sub_1007C8028(a1, a2);
}

uint64_t sub_1007C92C4(uint64_t a1)
{
  v2[2] = a1;
  v2[3] = v1;
  type metadata accessor for MainActor();
  v2[4] = static MainActor.shared.getter();
  uint64_t v4 = dispatch thunk of Actor.unownedExecutor.getter();
  v2[5] = v4;
  v2[6] = v3;
  return _swift_task_switch(sub_1007C935C, v4, v3);
}

uint64_t sub_1007C935C()
{
  uint64_t v1 = (int8x16_t *)swift_task_alloc();
  v0[3].i64[1] = (uint64_t)v1;
  v1[1] = vextq_s8(v0[1], v0[1], 8uLL);
  uint64_t v4 = (uint64_t (*)(unint64_t, unint64_t, void (*)(id *, uint64_t), int8x16_t *))((char *)&dword_10167E9C0 + dword_10167E9C0);
  uint64_t v2 = (void *)swift_task_alloc();
  v0[4].i64[0] = (uint64_t)v2;
  *uint64_t v2 = v0;
  v2[1] = sub_1007C8D78;
  return v4(0xD000000000000012, 0x800000010124DDB0, sub_10076D718, v1);
}

uint64_t sub_1007C9450(float a1)
{
  *(void *)(v2 + 16) = v1;
  *(float *)(v2 + 80) = a1;
  type metadata accessor for MainActor();
  *(void *)(v2 + 24) = static MainActor.shared.getter();
  uint64_t v4 = dispatch thunk of Actor.unownedExecutor.getter();
  *(void *)(v2 + 32) = v4;
  *(void *)(v2 + 40) = v3;
  return _swift_task_switch(sub_1007C94EC, v4, v3);
}

uint64_t sub_1007C94EC()
{
  int v1 = *(_DWORD *)(v0 + 80);
  uint64_t v2 = swift_task_alloc();
  *(void *)(v0 + 48) = v2;
  *(_DWORD *)(v2 + 16) = v1;
  uint64_t v5 = (uint64_t (*)(unint64_t, unint64_t, void (*)(void **, uint64_t), uint64_t))((char *)&dword_10167E990 + dword_10167E990);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 56) = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_1007C95DC;
  return v5(0xD000000000000011, 0x800000010124DD10, sub_10076D5A0, v2);
}

uint64_t sub_1007C95DC(uint64_t a1)
{
  uint64_t v4 = *(void **)v2;
  *(void *)(*(void *)v2 + 64) = v1;
  swift_task_dealloc();
  if (v1)
  {
    swift_task_dealloc();
    uint64_t v5 = v4[4];
    uint64_t v6 = v4[5];
    uint64_t v7 = sub_1007C978C;
  }
  else
  {
    v4[9] = a1;
    swift_task_dealloc();
    uint64_t v5 = v4[4];
    uint64_t v6 = v4[5];
    uint64_t v7 = sub_1007C9724;
  }
  return _swift_task_switch(v7, v5, v6);
}

uint64_t sub_1007C9724()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(uint64_t))(v0 + 8);
  uint64_t v2 = *(void *)(v0 + 72);
  return v1(v2);
}

uint64_t sub_1007C978C()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1007C97F0(char *a1, uint64_t a2, unint64_t a3)
{
  uint64_t v31 = a1;
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  __chkstk_darwin(v6, v9);
  __n128 v10 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1005057FC(&qword_101672BB0);
  __chkstk_darwin(v11 - 8, v12);
  unint64_t v14 = (char *)&v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v15 = &v3[OBJC_IVAR____TtCO8Freeform29CRLUSDRendererExtensionShared29RendererDelegateReceiverProxy_delegate];
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v17 = result;
    uint64_t v29 = *((void *)v15 + 1);
    uint64_t v18 = type metadata accessor for TaskPriority();
    uint64_t v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56);
    uint64_t v30 = v14;
    v19(v14, 1, 1, v18);
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))((char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v31, v6);
    type metadata accessor for MainActor();
    swift_unknownObjectRetain();
    uint64_t v31 = v3;
    sub_100510D4C(a2, a3);
    uint64_t v20 = static MainActor.shared.getter();
    unint64_t v21 = (*(unsigned __int8 *)(v7 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
    unint64_t v28 = a3;
    unint64_t v22 = (v8 + v21 + 7) & 0xFFFFFFFFFFFFFFF8;
    id v23 = (char *)swift_allocObject();
    *((void *)v23 + 2) = v20;
    *((void *)v23 + 3) = &protocol witness table for MainActor;
    uint64_t v24 = v29;
    *((void *)v23 + 4) = v17;
    *((void *)v23 + 5) = v24;
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(&v23[v21], v10, v6);
    uint64_t v25 = (uint64_t)v30;
    *(void *)&v23[v22] = v31;
    long long v26 = (uint64_t *)&v23[(v22 + 15) & 0xFFFFFFFFFFFFFFF8];
    unint64_t v27 = v28;
    *long long v26 = a2;
    v26[1] = v27;
    sub_1005912D0(v25, (uint64_t)&unk_101681158, (uint64_t)v23);
    swift_release();
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1007C9A68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[23] = a8;
  unsigned char v8[24] = v13;
  v8[21] = a5;
  v8[22] = a6;
  v8[20] = a4;
  type metadata accessor for MainActor();
  v8[25] = static MainActor.shared.getter();
  uint64_t v10 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_1007C9B10, v10, v9);
}

uint64_t sub_1007C9B10()
{
  swift_release();
  if (qword_10166F258 != -1) {
    swift_once();
  }
  sub_1007CE85C();
  dispatch thunk of JSONDecoder.decode<A>(_:from:)();
  uint64_t v2 = v0[21];
  uint64_t v1 = v0[22];
  uint64_t ObjectType = swift_getObjectType();
  sub_10076E5A4((uint64_t)(v0 + 12), (uint64_t)(v0 + 2));
  (*(void (**)(uint64_t, void *, uint64_t, uint64_t))(v2 + 8))(v1, v0 + 2, ObjectType, v2);
  sub_1007CE8B0(v0 + 2, (void (*)(void, void, void, void, void, void, void))sub_100767658);
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_1007C9DF4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5)
{
  unint64_t v43 = a3;
  uint64_t v44 = a4;
  uint64_t v42 = a2;
  uint64_t v8 = type metadata accessor for UUID();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  __chkstk_darwin(v8, v11);
  uint64_t v12 = sub_1005057FC(&qword_101672BB0);
  __chkstk_darwin(v12 - 8, v13);
  double v15 = (char *)&v35 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = &v5[OBJC_IVAR____TtCO8Freeform29CRLUSDRendererExtensionShared29RendererDelegateReceiverProxy_delegate];
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v18 = result;
    uint64_t v40 = *((void *)v16 + 1);
    uint64_t v19 = type metadata accessor for TaskPriority();
    uint64_t v20 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56);
    uint64_t v41 = v15;
    v20(v15, 1, 1, v19);
    unint64_t v21 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
    uint64_t v38 = v8;
    uint64_t v39 = (char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
    v21(v39, a1, v8);
    type metadata accessor for MainActor();
    swift_unknownObjectRetain();
    uint64_t v37 = v5;
    uint64_t v23 = v42;
    unint64_t v22 = v43;
    sub_100510D4C(v42, v43);
    swift_retain();
    uint64_t v24 = static MainActor.shared.getter();
    uint64_t v25 = *(unsigned __int8 *)(v9 + 80);
    uint64_t v36 = a5;
    uint64_t v26 = (v25 + 48) & ~v25;
    unint64_t v27 = (v10 + v26 + 7) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v28 = (v27 + 15) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v29 = (char *)swift_allocObject();
    *((void *)v29 + 2) = v24;
    *((void *)v29 + 3) = &protocol witness table for MainActor;
    uint64_t v30 = v39;
    uint64_t v31 = v40;
    *((void *)v29 + 4) = v18;
    *((void *)v29 + 5) = v31;
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(&v29[v26], v30, v38);
    *(void *)&v29[v27] = v37;
    uint64_t v32 = (uint64_t *)&v29[v28];
    uint64_t *v32 = v23;
    v32[1] = v22;
    char v33 = &v29[(v28 + 23) & 0xFFFFFFFFFFFFFFF8];
    uint64_t v34 = v36;
    *(void *)char v33 = v44;
    *((void *)v33 + 1) = v34;
    sub_1005912D0((uint64_t)v41, (uint64_t)&unk_101681140, (uint64_t)v29);
    swift_release();
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1007CA098(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  *(void *)(v8 + 176) = v14;
  *(_OWORD *)(v8 + 160) = v13;
  *(void *)(v8 + 144) = a6;
  *(void *)(v8 + 152) = a8;
  *(void *)(v8 + 136) = a5;
  *(void *)(v8 + 72) = a4;
  type metadata accessor for MainActor();
  *(void *)(v8 + 184) = static MainActor.shared.getter();
  uint64_t v10 = dispatch thunk of Actor.unownedExecutor.getter();
  *(void *)(v8 + 192) = v10;
  *(void *)(v8 + 200) = v9;
  return _swift_task_switch(sub_1007CA14C, v10, v9);
}

uint64_t sub_1007CA14C()
{
  if (qword_10166F258 != -1) {
    swift_once();
  }
  sub_1007CE85C();
  dispatch thunk of JSONDecoder.decode<A>(_:from:)();
  uint64_t v7 = v0[17];
  uint64_t ObjectType = swift_getObjectType();
  sub_10076E5A4((uint64_t)(v0 + 10), (uint64_t)(v0 + 2));
  uint64_t v6 = (uint64_t (*)(uint64_t, void *, uint64_t, uint64_t))(*(void *)(v7 + 16) + **(int **)(v7 + 16));
  uint64_t v2 = (void *)swift_task_alloc();
  v0[26] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_1007CA344;
  uint64_t v3 = v0[17];
  uint64_t v4 = v0[18];
  return v6(v4, v0 + 2, ObjectType, v3);
}

uint64_t sub_1007CA344()
{
  uint64_t v2 = *(void **)v1;
  *(void *)(*(void *)v1 + 216) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = v2[24];
    uint64_t v4 = v2[25];
    uint64_t v5 = sub_1007CA4E4;
  }
  else
  {
    sub_1007CE8B0(v2 + 2, (void (*)(void, void, void, void, void, void, void))sub_100767658);
    uint64_t v3 = v2[24];
    uint64_t v4 = v2[25];
    uint64_t v5 = sub_1007CA474;
  }
  return _swift_task_switch(v5, v3, v4);
}

uint64_t sub_1007CA474()
{
  uint64_t v1 = *(void (**)(void))(v0 + 168);
  swift_release();
  v1(0);
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_1007CA4E4()
{
  swift_release();
  sub_1007CE8B0(v0 + 2, (void (*)(void, void, void, void, void, void, void))sub_100767658);
  uint64_t v1 = v0[27];
  uint64_t v2 = (void (*)(uint64_t))v0[21];
  swift_errorRetain();
  v2(v1);
  swift_errorRelease();
  swift_errorRelease();
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t sub_1007CA70C(uint64_t a1, uint64_t a2, void *a3, void *a4, void *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v39 = a2;
  uint64_t v40 = a6;
  id v37 = a4;
  id v38 = a5;
  id v36 = a3;
  uint64_t v10 = type metadata accessor for UUID();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void *)(v11 + 64);
  __chkstk_darwin(v10, v13);
  uint64_t v14 = sub_1005057FC(&qword_101672BB0);
  __chkstk_darwin(v14 - 8, v15);
  uint64_t v17 = (char *)&v33 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = v7 + OBJC_IVAR____TtCO8Freeform29CRLUSDRendererExtensionShared29RendererDelegateReceiverProxy_delegate;
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v20 = result;
    uint64_t v35 = *(void *)(v18 + 8);
    uint64_t v21 = type metadata accessor for TaskPriority();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v17, 1, 1, v21);
    unint64_t v22 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
    uint64_t v34 = (char *)&v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
    v22(v34, a1, v10);
    type metadata accessor for MainActor();
    id v36 = v36;
    id v37 = v37;
    id v23 = v38;
    swift_unknownObjectRetain();
    swift_retain();
    uint64_t v24 = static MainActor.shared.getter();
    unint64_t v25 = (*(unsigned __int8 *)(v11 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
    uint64_t v26 = a7;
    unint64_t v27 = (v12 + v25 + 7) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v28 = (char *)swift_allocObject();
    *((void *)v28 + 2) = v24;
    *((void *)v28 + 3) = &protocol witness table for MainActor;
    id v29 = v36;
    *((void *)v28 + 4) = v39;
    *((void *)v28 + 5) = v29;
    *((void *)v28 + 6) = v37;
    *((void *)v28 + 7) = v23;
    uint64_t v30 = v34;
    uint64_t v31 = v35;
    *((void *)v28 + 8) = v20;
    *((void *)v28 + 9) = v31;
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(&v28[v25], v30, v10);
    uint64_t v32 = &v28[v27];
    *(void *)uint64_t v32 = v40;
    *((void *)v32 + 1) = v26;
    sub_1005912D0((uint64_t)v17, (uint64_t)&unk_101681130, (uint64_t)v28);
    swift_release();
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1007CA9A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  *(void *)(v8 + 72) = v14;
  *(void *)(v8 + 80) = v15;
  *(_OWORD *)(v8 + 56) = v13;
  *(void *)(v8 + 40) = a7;
  *(void *)(v8 + 48) = a8;
  *(void *)(v8 + 24) = a5;
  *(void *)(v8 + 32) = a6;
  *(void *)(v8 + 16) = a4;
  type metadata accessor for MainActor();
  *(void *)(v8 + 88) = static MainActor.shared.getter();
  uint64_t v10 = dispatch thunk of Actor.unownedExecutor.getter();
  *(void *)(v8 + 96) = v10;
  *(void *)(v8 + 104) = v9;
  return _swift_task_switch(sub_1007CAA58, v10, v9);
}

uint64_t sub_1007CAA58()
{
  id v1 = MTLCreateSystemDefaultDevice();
  *(void *)(v0 + 112) = v1;
  if (v1)
  {
    uint64_t v2 = v1;
    id v3 = *(id *)(v0 + 16);
    if ([v1 registryID] == v3)
    {
      uint64_t v4 = *(void **)(v0 + 32);
      uint64_t v5 = *(void **)(v0 + 40);
      uint64_t v6 = *(void **)(v0 + 24);
      swift_unknownObjectRetain();
      id v7 = sub_100845378(v2, (char *)v6, (uint64_t)v4, (uint64_t)v5);
      *(void *)(v0 + 120) = v7;
      *(void *)(v0 + 128) = v8;
      *(void *)(v0 + 136) = v9;
      *(void *)(v0 + 144) = v10;
      id v16 = v7;
      uint64_t v17 = v8;
      uint64_t v18 = v9;
      uint64_t v19 = v10;
      uint64_t v26 = *(void *)(v0 + 56);
      uint64_t v20 = *(void **)(v0 + 32);

      swift_unknownObjectRelease();
      uint64_t ObjectType = swift_getObjectType();
      unint64_t v25 = (uint64_t (*)(uint64_t, id, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v26 + 24)
                                                                                             + **(int **)(v26 + 24));
      unint64_t v22 = (void *)swift_task_alloc();
      *(void *)(v0 + 152) = v22;
      *unint64_t v22 = v0;
      v22[1] = sub_1007CAD00;
      uint64_t v23 = *(void *)(v0 + 56);
      uint64_t v24 = *(void *)(v0 + 64);
      return v25(v24, v16, v17, v18, v19, ObjectType, v23);
    }
    swift_unknownObjectRelease();
  }
  swift_release();
  sub_100776FC8();
  uint64_t v11 = swift_allocError();
  *(void *)uint64_t v12 = 0xD00000000000002FLL;
  *(void *)(v12 + 8) = 0x8000000101252C80;
  *(unsigned char *)(v12 + 16) = 5;
  swift_willThrow();
  long long v13 = *(void (**)(uint64_t))(v0 + 72);
  swift_errorRetain();
  v13(v11);
  swift_errorRelease();
  swift_errorRelease();
  uint64_t v14 = *(uint64_t (**)(void))(v0 + 8);
  return v14();
}

uint64_t sub_1007CAD00()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 160) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 104);
  uint64_t v4 = *(void *)(v2 + 96);
  if (v0) {
    uint64_t v5 = sub_1007CAEF4;
  }
  else {
    uint64_t v5 = sub_1007CAE3C;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_1007CAE3C()
{
  id v1 = (void *)v0[18];
  uint64_t v2 = (void (*)(void))v0[9];
  swift_release();
  v2(0);
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();

  swift_unknownObjectRelease();
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t sub_1007CAEF4()
{
  id v1 = (void *)v0[18];
  swift_release();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();

  swift_unknownObjectRelease();
  uint64_t v2 = v0[20];
  uint64_t v3 = (void (*)(uint64_t))v0[9];
  swift_errorRetain();
  v3(v2);
  swift_errorRelease();
  swift_errorRelease();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t type metadata accessor for CRLUSDRendererExtensionShared.RendererDelegateReceiverProxy()
{
  return self;
}

uint64_t sub_1007CB1B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[3] = a5;
  v6[4] = a6;
  _OWORD v6[2] = a4;
  type metadata accessor for MainActor();
  v6[5] = static MainActor.shared.getter();
  uint64_t v8 = dispatch thunk of Actor.unownedExecutor.getter();
  v6[6] = v8;
  v6[7] = v7;
  return _swift_task_switch(sub_1007CB24C, v8, v7);
}

uint64_t sub_1007CB24C()
{
  uint64_t v1 = v0[2].i64[0];
  uint64_t v2 = (int8x16_t *)swift_task_alloc();
  v0[4].i64[0] = (uint64_t)v2;
  v2[1] = vextq_s8(v0[1], v0[1], 8uLL);
  v2[2].i64[0] = v1;
  uint64_t v5 = (uint64_t (*)(unint64_t, unint64_t, uint64_t (*)(void **, uint64_t), int8x16_t *))((char *)&dword_10167EAF8 + dword_10167EAF8);
  uint64_t v3 = (void *)swift_task_alloc();
  v0[4].i64[1] = (uint64_t)v3;
  *uint64_t v3 = v0;
  v3[1] = sub_1007CB348;
  return v5(0xD00000000000001ELL, 0x800000010124E1A0, sub_1007CD614, v2);
}

uint64_t sub_1007CB348()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 80) = v0;
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 56);
  uint64_t v4 = *(void *)(v2 + 48);
  if (v0) {
    uint64_t v5 = sub_1007CB500;
  }
  else {
    uint64_t v5 = sub_1007CB4A0;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_1007CB4A0()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1007CB500()
{
  swift_release();
  swift_errorRelease();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1007CB56C(void **a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7 = *a1;
  v8.super.Class isa = UUID._bridgeToObjectiveC()().super.isa;
  sub_10076E5A4(a5, (uint64_t)v15);
  if (qword_10166F250 != -1) {
    swift_once();
  }
  sub_1007CD314();
  uint64_t v9 = dispatch thunk of JSONEncoder.encode<A>(_:)();
  if (v5)
  {

    v15[0] = v5;
    sub_1005057FC(&qword_10167F0F0);
    return CheckedContinuation.resume(throwing:)();
  }
  else
  {
    uint64_t v12 = v9;
    unint64_t v13 = v10;
    Class isa = Data._bridgeToObjectiveC()().super.isa;
    sub_100510084(v12, v13);
    [v7 rendererStateChanged:v8.super.isa state:isa];

    sub_1005057FC(&qword_10167F0F0);
    return CheckedContinuation.resume(returning:)();
  }
}

void sub_1007CB6B0(id *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v22 = a2;
  uint64_t v8 = sub_1005057FC(&qword_10167F0F0);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  __chkstk_darwin(v8, v11);
  id v24 = *a1;
  v12.super.Class isa = UUID._bridgeToObjectiveC()().super.isa;
  sub_10076E5A4(a5, (uint64_t)aBlock);
  if (qword_10166F250 != -1) {
    swift_once();
  }
  sub_1007CD314();
  uint64_t v13 = dispatch thunk of JSONEncoder.encode<A>(_:)();
  if (v5)
  {
  }
  else
  {
    uint64_t v15 = v13;
    unint64_t v16 = v14;
    Class isa = Data._bridgeToObjectiveC()().super.isa;
    sub_100510084(v15, v16);
    (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))((char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v22, v8);
    unint64_t v18 = (*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
    uint64_t v19 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v19 + v18, (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v8);
    aBlock[4] = sub_1007CC738;
    aBlock[5] = v19;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = *(void *)"";
    aBlock[2] = sub_1007C263C;
    void aBlock[3] = &unk_101514C58;
    uint64_t v20 = _Block_copy(aBlock);
    swift_release();
    [v24 rendererStateChangedWithAcknowledge:v12.super.isa state:isa response:v20];
    _Block_release(v20);
  }
}

void sub_1007CB91C(id *a1, uint64_t a2, uint64_t a3, void *a4, void *a5, uint64_t a6)
{
  uint64_t v24 = a6;
  id v19 = a5;
  uint64_t v20 = a2;
  uint64_t v8 = sub_1005057FC(&qword_10167F0F0);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  __chkstk_darwin(v8, v11);
  NSUUID v12 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v23 = *a1;
  id v22 = [(id)swift_unknownObjectRetain() device];
  id v21 = [v22 registryID];
  Class isa = UUID._bridgeToObjectiveC()().super.isa;
  id v14 = [a4 newSharedEventHandle];
  id v15 = [v19 newSharedEventHandle];
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v12, v20, v8);
  unint64_t v16 = (*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v17 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v17 + v16, v12, v8);
  aBlock[4] = sub_1007CC738;
  aBlock[5] = v17;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = *(void *)"";
  aBlock[2] = sub_1007C263C;
  void aBlock[3] = &unk_101514C08;
  unint64_t v18 = _Block_copy(aBlock);
  swift_release();
  [v23 rendererSharedTextureChangedXPC:isa deviceID:v21 textureHandle:v24 rendererFrameCountHandle:v14 displayerFrameCountHandle:v15 response:v18];
  _Block_release(v18);
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
}

uint64_t sub_1007CBB74()
{
  swift_unknownObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for CRLUSDRendererExtensionShared.RendererDelegateSenderProxy()
{
  return self;
}

uint64_t sub_1007CBBD0(uint64_t a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6, v8);
  uint64_t v10 = v9 + 15;
  uint64_t v11 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1005057FC(&qword_101672BB0);
  __chkstk_darwin(v12 - 8, v13);
  id v15 = (char *)&v22 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v15, 1, 1, v16);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v11, a1, v6);
  type metadata accessor for MainActor();
  swift_retain();
  sub_1007CE8B0(a2, (void (*)(void, void, void, void, void, void, void))sub_1007673E8);
  uint64_t v17 = static MainActor.shared.getter();
  unint64_t v18 = (*(unsigned __int8 *)(v7 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  unint64_t v19 = (v10 + v18) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v20 = (char *)swift_allocObject();
  *((void *)v20 + 2) = v17;
  *((void *)v20 + 3) = &protocol witness table for MainActor;
  *((void *)v20 + 4) = v3;
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(&v20[v18], v11, v6);
  sub_10076E5A4((uint64_t)a2, (uint64_t)&v20[v19]);
  sub_1005912D0((uint64_t)v15, (uint64_t)&unk_101681120, (uint64_t)v20);
  return swift_release();
}

uint64_t sub_1007CBDFC(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  type metadata accessor for MainActor();
  v3[5] = static MainActor.shared.getter();
  uint64_t v5 = dispatch thunk of Actor.unownedExecutor.getter();
  v3[6] = v5;
  v3[7] = v4;
  return _swift_task_switch(sub_1007CBE98, v5, v4);
}

uint64_t sub_1007CBE98()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = swift_task_alloc();
  *(void *)(v0 + 64) = v2;
  int8x16_t v3 = *(int8x16_t *)(v0 + 24);
  *(void *)(v2 + 16) = v1;
  *(int8x16_t *)(v2 + 24) = vextq_s8(v3, v3, 8uLL);
  uint64_t v6 = (uint64_t (*)(unint64_t, unint64_t, void (*)(id *, uint64_t), uint64_t))((char *)&dword_10167EAF8 + dword_10167EAF8);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 72) = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_1007CBF94;
  return v6(0xD00000000000002DLL, 0x800000010124E0D0, sub_1007CD2F4, v2);
}

uint64_t sub_1007CBF94()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 80) = v0;
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 56);
  uint64_t v4 = *(void *)(v2 + 48);
  if (v0) {
    uint64_t v5 = sub_1007CC0EC;
  }
  else {
    uint64_t v5 = sub_100761D4C;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_1007CC0EC()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1007CC150(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v6[6] = a5;
  v6[7] = v5;
  v6[4] = a3;
  v6[5] = a4;
  _OWORD v6[2] = a1;
  v6[3] = a2;
  type metadata accessor for MainActor();
  v6[8] = static MainActor.shared.getter();
  uint64_t v8 = dispatch thunk of Actor.unownedExecutor.getter();
  v6[9] = v8;
  v6[10] = v7;
  return _swift_task_switch(sub_1007CC1F0, v8, v7);
}

uint64_t sub_1007CC1F0()
{
  uint64_t v1 = *(void *)(v0 + 56);
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = swift_task_alloc();
  *(void *)(v0 + 88) = v3;
  long long v4 = *(_OWORD *)(v0 + 40);
  *(_OWORD *)(v3 + 16) = *(_OWORD *)(v0 + 24);
  *(_OWORD *)(v3 + 32) = v4;
  *(void *)(v3 + 48) = v2;
  *(void *)(v3 + 56) = v1;
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_10167EAF8 + dword_10167EAF8);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v0 + 96) = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_1007CC2F4;
  return v7(0xD00000000000002CLL, 0x800000010124DF20, (uint64_t)sub_1007CD2C4, v3);
}

uint64_t sub_1007CC2F4()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 104) = v0;
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 80);
  uint64_t v4 = *(void *)(v2 + 72);
  if (v0) {
    uint64_t v5 = sub_1007CC44C;
  }
  else {
    uint64_t v5 = sub_10076A510;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_1007CC44C()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1007CC4B0()
{
  return sub_1007CC4BC(&OBJC_IVAR____TtCO8Freeform29CRLUSDRendererExtensionShared31AsyncRealitySnapshotSenderProxy_uuid);
}

uint64_t sub_1007CC4BC(void *a1)
{
  swift_unknownObjectRelease();
  uint64_t v3 = v1 + *a1;
  uint64_t v4 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);

  return swift_deallocClassInstance();
}

uint64_t sub_1007CC564()
{
  return type metadata accessor for CRLUSDRendererExtensionShared.AsyncRealitySnapshotSenderProxy(0);
}

uint64_t type metadata accessor for CRLUSDRendererExtensionShared.AsyncRealitySnapshotSenderProxy(uint64_t a1)
{
  return sub_100512D5C(a1, qword_101680F70);
}

uint64_t sub_1007CC58C()
{
  uint64_t result = type metadata accessor for UUID();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1007CC628()
{
  return sub_1006FA134(&qword_10167E998);
}

void sub_1007CC634(uint64_t a1, unint64_t a2, uint64_t a3)
{
  sub_1005057FC(&qword_10167E998);

  sub_1007C8904(a1, a2, a3);
}

uint64_t sub_1007CC6C0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1007CC6D0()
{
  return swift_release();
}

unint64_t sub_1007CC6D8()
{
  unint64_t result = qword_101681090;
  if (!qword_101681090)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101681090);
  }
  return result;
}

uint64_t sub_1007CC72C()
{
  return sub_1006FA134(&qword_10167F0F0);
}

uint64_t sub_1007CC73C(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000011 && a2 == 0x8000000101252D30
    || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656E6E6F63736964 && a2 == 0xEC00000064657463 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x8000000101252D50)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v5 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v5) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_1007CC8A4(void *a1)
{
  uint64_t v29 = sub_1005057FC(&qword_1016811D8);
  uint64_t v31 = *(void *)(v29 - 8);
  __chkstk_darwin(v29, v2);
  uint64_t v32 = (char *)&v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_1005057FC(&qword_1016811E0);
  uint64_t v28 = *(void *)(v30 - 8);
  __chkstk_darwin(v30, v4);
  uint64_t v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1005057FC(&qword_1016811E8);
  uint64_t v27 = *(void *)(v7 - 8);
  __chkstk_darwin(v7, v8);
  uint64_t v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1005057FC(&qword_1016811F0);
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11, v13);
  id v15 = (char *)&v27 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = a1[3];
  uint64_t v33 = a1;
  uint64_t v17 = (uint64_t)sub_10050F848(a1, v16);
  sub_1007CF5B8();
  uint64_t v18 = v34;
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (!v18)
  {
    unint64_t v19 = v32;
    uint64_t v34 = v12;
    uint64_t v20 = KeyedDecodingContainer.allKeys.getter();
    if (*(void *)(v20 + 16) == 1)
    {
      if (*(unsigned char *)(v20 + 32))
      {
        if (*(unsigned char *)(v20 + 32) == 1)
        {
          char v36 = 1;
          sub_1007CF660();
          KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)();
          (*(void (**)(char *, uint64_t))(v28 + 8))(v6, v30);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v34 + 8))(v15, v11);
          uint64_t v17 = 0;
        }
        else
        {
          char v37 = 2;
          sub_1007CF60C();
          KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)();
          uint64_t v25 = v29;
          uint64_t v17 = KeyedDecodingContainer.decode(_:forKey:)();
          uint64_t v26 = v34;
          (*(void (**)(char *, uint64_t))(v31 + 8))(v19, v25);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v26 + 8))(v15, v11);
        }
      }
      else
      {
        char v35 = 0;
        sub_1007CF6B4();
        KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)();
        (*(void (**)(char *, uint64_t))(v27 + 8))(v10, v7);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v34 + 8))(v15, v11);
        uint64_t v17 = 0;
      }
    }
    else
    {
      uint64_t v21 = type metadata accessor for DecodingError();
      swift_allocError();
      id v23 = v22;
      sub_1005057FC(&qword_1016771E0);
      *id v23 = &type metadata for CRLUSDRendererExtensionShared.ExtensionError;
      uint64_t v17 = (uint64_t)v15;
      KeyedDecodingContainer.codingPath.getter();
      DecodingError.Context.init(codingPath:debugDescription:underlyingError:)();
      (*(void (**)(void *, void, uint64_t))(*(void *)(v21 - 8) + 104))(v23, enum case for DecodingError.typeMismatch(_:), v21);
      swift_willThrow();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v34 + 8))(v15, v11);
    }
  }
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v33);
  return v17;
}

unint64_t sub_1007CCE50()
{
  unint64_t result = qword_101681098;
  if (!qword_101681098)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101681098);
  }
  return result;
}

uint64_t sub_1007CCEA4()
{
  return sub_1006FA134(&qword_10167F0F0);
}

uint64_t sub_1007CCEB0()
{
  return sub_1006FA134(&qword_10167F0F0);
}

uint64_t sub_1007CCEBC(uint64_t a1)
{
  return sub_100769C00(a1, **(void **)(v1 + 16), *(void (**)(void *, uint64_t))(v1 + 24));
}

uint64_t sub_1007CCECC()
{
  return sub_1006FA134(&qword_10167EA68);
}

uint64_t sub_1007CCED8(uint64_t a1, uint64_t a2)
{
  sub_1005057FC(&qword_10167EA68);

  return sub_1007C77C0(a1, a2);
}

uint64_t sub_1007CCF5C()
{
  swift_unknownObjectRelease();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1007CCF94(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_100528D08;
  v3[2] = a1;
  return _swift_task_switch(sub_1007C28C8, 0, 0);
}

uint64_t sub_1007CD03C(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_100528D08;
  return sub_1007C2AEC(a1, a2);
}

uint64_t sub_1007CD0DC()
{
  swift_unknownObjectRelease();
  sub_1007676B8(*(void *)(v0 + 32), *(void *)(v0 + 40), *(unsigned char *)(v0 + 48));

  return _swift_deallocObject(v0, 49, 7);
}

uint64_t sub_1007CD120(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v6 = *(void *)(v1 + 32);
  uint64_t v7 = *(void *)(v1 + 40);
  char v8 = *(unsigned char *)(v1 + 48);
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_100528D08;
  return sub_1007C3134(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_1007CD1E8()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_100528488;
  uint64_t v2 = (void *)swift_task_alloc();
  v1[5] = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_1007C4744;
  return static Task<>.sleep(nanoseconds:)(2000000000);
}

void sub_1007CD2C4(id *a1, uint64_t a2)
{
  sub_1007CB91C(a1, a2, *(void *)(v2 + 16), *(void **)(v2 + 24), *(void **)(v2 + 32), *(void *)(v2 + 40));
}

uint64_t sub_1007CD2E8()
{
  return sub_1006FA134(&qword_10167F0F0);
}

void sub_1007CD2F4(id *a1, uint64_t a2)
{
  sub_1007CB6B0(a1, a2, v2[2], v2[3], v2[4]);
}

unint64_t sub_1007CD314()
{
  unint64_t result = qword_101681110;
  if (!qword_101681110)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_101681110);
  }
  return result;
}

uint64_t sub_1007CD368()
{
  return sub_1006FA134(&qword_10167F0F0);
}

void sub_1007CD374(uint64_t a1)
{
  sub_1005057FC(&qword_10167F0F0);

  sub_1007C5438(a1);
}

uint64_t sub_1007CD3E8()
{
  uint64_t v1 = type metadata accessor for UUID();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 40) & ~v3;
  uint64_t v5 = v3 | 0xF;
  unint64_t v6 = (*(void *)(v2 + 64) + v4 + 15) & 0xFFFFFFFFFFFFFFF0;
  swift_unknownObjectRelease();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  sub_100767658(*(void *)(v0 + v6), *(void *)(v0 + v6 + 8), *(void *)(v0 + v6 + 16), *(void *)(v0 + v6 + 24), *(void *)(v0 + v6 + 32), *(void *)(v0 + v6 + 40));

  return _swift_deallocObject(v0, v6 + 56, v5);
}

uint64_t sub_1007CD4E8(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for UUID() - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = v1[2];
  uint64_t v7 = v1[3];
  uint64_t v8 = v1[4];
  uint64_t v9 = (uint64_t)v1 + v5;
  uint64_t v10 = (uint64_t)v1 + ((*(void *)(v4 + 64) + v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v11;
  *uint64_t v11 = v2;
  v11[1] = sub_100528D08;
  return sub_1007CB1B0(a1, v6, v7, v8, v9, v10);
}

uint64_t sub_1007CD614(void **a1, uint64_t a2)
{
  return sub_1007CB56C(a1, a2, v2[2], v2[3], v2[4]);
}

uint64_t sub_1007CD634()
{
  _Block_release(*(const void **)(v0 + 16));

  return _swift_deallocObject(v0, 24, 7);
}

void sub_1007CD66C(uint64_t a1)
{
  sub_100FBAB6C(a1, *(void *)(v1 + 16));
}

uint64_t sub_1007CD674()
{
  uint64_t v1 = type metadata accessor for UUID();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 80) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  swift_unknownObjectRelease();

  swift_unknownObjectRelease();
  (*(void (**)(char *, uint64_t))(v2 + 8))((char *)v0 + v4, v1);
  swift_release();

  return _swift_deallocObject(v0, v6, v5);
}

uint64_t sub_1007CD780(uint64_t a1)
{
  type metadata accessor for UUID();
  uint64_t v3 = v1[4];
  uint64_t v10 = v1[3];
  uint64_t v11 = v1[2];
  uint64_t v4 = v1[5];
  uint64_t v5 = v1[6];
  uint64_t v6 = v1[7];
  uint64_t v7 = v1[8];
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_100528D08;
  return sub_1007CA9A4(a1, v11, v10, v3, v4, v5, v6, v7);
}

uint64_t sub_1007CD8E0(uint64_t a1, void (**a2)(void, void, void))
{
  uint64_t v4 = sub_1005057FC((uint64_t *)&unk_101674520);
  __chkstk_darwin(v4 - 8, v5);
  uint64_t v7 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8, v9);
  uint64_t v11 = (char *)&v31 - v10;
  uint64_t v12 = sub_1005057FC(&qword_101672BB0);
  __chkstk_darwin(v12 - 8, v13);
  id v15 = (char *)&v31 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = a2;
  uint64_t v17 = a1 + OBJC_IVAR____TtCO8Freeform29CRLUSDRendererExtensionShared26AsyncRendererReceiverProxy_renderer;
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v19 = Strong;
    uint64_t v20 = *(void *)(v17 + 8);
    uint64_t v21 = type metadata accessor for TaskPriority();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v15, 1, 1, v21);
    type metadata accessor for MainActor();
    _Block_copy(a2);
    swift_retain();
    swift_unknownObjectRetain();
    uint64_t v22 = static MainActor.shared.getter();
    id v23 = (void *)swift_allocObject();
    void v23[2] = v22;
    v23[3] = &protocol witness table for MainActor;
    void v23[4] = sub_1007CF1C4;
    v23[5] = v16;
    v23[6] = v19;
    v23[7] = v20;
    sub_1005912D0((uint64_t)v15, (uint64_t)&unk_1016811C8, (uint64_t)v23);
    swift_release();
    swift_release();
    return swift_unknownObjectRelease();
  }
  else
  {
    uint64_t v25 = type metadata accessor for UUID();
    uint64_t v26 = *(void *)(v25 - 8);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v26 + 56))(v11, 1, 1, v25);
    sub_1007CEB50();
    swift_allocError();
    *uint64_t v27 = xmmword_10118C770;
    sub_100522E9C((uint64_t)v11, (uint64_t)v7, (uint64_t *)&unk_101674520);
    int v28 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v26 + 48))(v7, 1, v25);
    _Block_copy(a2);
    Class isa = 0;
    if (v28 != 1)
    {
      Class isa = UUID._bridgeToObjectiveC()().super.isa;
      (*(void (**)(char *, uint64_t))(v26 + 8))(v7, v25);
    }
    uint64_t v30 = (void *)_convertErrorToNSError(_:)();
    ((void (**)(void, Class, void *))a2)[2](a2, isa, v30);

    swift_errorRelease();
    sub_100522F00((uint64_t)v11, (uint64_t *)&unk_101674520);
    return swift_release();
  }
}

uint64_t sub_1007CDC48(uint64_t a1, unint64_t a2, char *a3, void (**a4)(void, void))
{
  uint64_t v8 = sub_1005057FC(&qword_101672BB0);
  __chkstk_darwin(v8 - 8, v9);
  uint64_t v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = a4;
  uint64_t v13 = &a3[OBJC_IVAR____TtCO8Freeform29CRLUSDRendererExtensionShared26AsyncRendererReceiverProxy_renderer];
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v15 = Strong;
    uint64_t v16 = *((void *)v13 + 1);
    uint64_t v17 = type metadata accessor for TaskPriority();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v11, 1, 1, v17);
    type metadata accessor for MainActor();
    _Block_copy(a4);
    swift_unknownObjectRetain();
    uint64_t v18 = a3;
    sub_100510D4C(a1, a2);
    swift_retain();
    uint64_t v19 = static MainActor.shared.getter();
    uint64_t v20 = (void *)swift_allocObject();
    void v20[2] = v19;
    v20[3] = &protocol witness table for MainActor;
    void v20[4] = v15;
    v20[5] = v16;
    v20[6] = v18;
    v20[7] = a1;
    v20[8] = a2;
    v20[9] = sub_1007CFC70;
    v20[10] = v12;
    sub_1005912D0((uint64_t)v11, (uint64_t)&unk_1016811B0, (uint64_t)v20);
    swift_release();
    swift_release();
    return swift_unknownObjectRelease();
  }
  else
  {
    sub_1007CEB50();
    swift_allocError();
    *uint64_t v22 = xmmword_10118C770;
    _Block_copy(a4);
    id v23 = (void *)_convertErrorToNSError(_:)();
    ((void (**)(void, void *))a4)[2](a4, v23);

    swift_errorRelease();
    return swift_release();
  }
}

uint64_t sub_1007CDEB0(uint64_t a1, unint64_t a2, char *a3, void (**a4)(void, void))
{
  uint64_t v8 = sub_1005057FC(&qword_101672BB0);
  __chkstk_darwin(v8 - 8, v9);
  uint64_t v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = a4;
  uint64_t v13 = &a3[OBJC_IVAR____TtCO8Freeform29CRLUSDRendererExtensionShared26AsyncRendererReceiverProxy_renderer];
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v15 = Strong;
    uint64_t v16 = *((void *)v13 + 1);
    uint64_t v17 = type metadata accessor for TaskPriority();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v11, 1, 1, v17);
    type metadata accessor for MainActor();
    _Block_copy(a4);
    swift_unknownObjectRetain();
    uint64_t v18 = a3;
    sub_100510D4C(a1, a2);
    swift_retain();
    uint64_t v19 = static MainActor.shared.getter();
    uint64_t v20 = (void *)swift_allocObject();
    void v20[2] = v19;
    v20[3] = &protocol witness table for MainActor;
    void v20[4] = v15;
    v20[5] = v16;
    v20[6] = v18;
    v20[7] = a1;
    v20[8] = a2;
    v20[9] = sub_1007CFC70;
    v20[10] = v12;
    sub_1005912D0((uint64_t)v11, (uint64_t)&unk_101681198, (uint64_t)v20);
    swift_release();
    swift_release();
    return swift_unknownObjectRelease();
  }
  else
  {
    sub_1007CEB50();
    swift_allocError();
    *uint64_t v22 = xmmword_10118C770;
    _Block_copy(a4);
    id v23 = (void *)_convertErrorToNSError(_:)();
    ((void (**)(void, void *))a4)[2](a4, v23);

    swift_errorRelease();
    return swift_release();
  }
}

uint64_t sub_1007CE118(uint64_t a1, unint64_t a2, char *a3, void (**a4)(void, void))
{
  uint64_t v8 = sub_1005057FC(&qword_101672BB0);
  __chkstk_darwin(v8 - 8, v9);
  uint64_t v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = a4;
  uint64_t v13 = &a3[OBJC_IVAR____TtCO8Freeform29CRLUSDRendererExtensionShared26AsyncRendererReceiverProxy_renderer];
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v15 = Strong;
    uint64_t v16 = *((void *)v13 + 1);
    uint64_t v17 = type metadata accessor for TaskPriority();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v11, 1, 1, v17);
    type metadata accessor for MainActor();
    _Block_copy(a4);
    swift_unknownObjectRetain();
    uint64_t v18 = a3;
    sub_100510D4C(a1, a2);
    swift_retain();
    uint64_t v19 = static MainActor.shared.getter();
    uint64_t v20 = (void *)swift_allocObject();
    void v20[2] = v19;
    v20[3] = &protocol witness table for MainActor;
    void v20[4] = v15;
    v20[5] = v16;
    v20[6] = v18;
    v20[7] = a1;
    v20[8] = a2;
    v20[9] = sub_1007CFC70;
    v20[10] = v12;
    sub_1005912D0((uint64_t)v11, (uint64_t)&unk_101681178, (uint64_t)v20);
    swift_release();
    swift_release();
    return swift_unknownObjectRelease();
  }
  else
  {
    sub_1007CEB50();
    swift_allocError();
    *uint64_t v22 = xmmword_10118C770;
    _Block_copy(a4);
    id v23 = (void *)_convertErrorToNSError(_:)();
    ((void (**)(void, void *))a4)[2](a4, v23);

    swift_errorRelease();
    return swift_release();
  }
}

uint64_t sub_1007CE380(uint64_t a1, void (**a2)(void, void, void), float a3)
{
  uint64_t v6 = sub_1005057FC(&qword_101672BB0);
  __chkstk_darwin(v6 - 8, v7);
  uint64_t v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = a2;
  uint64_t v11 = a1 + OBJC_IVAR____TtCO8Freeform29CRLUSDRendererExtensionShared26AsyncRendererReceiverProxy_renderer;
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v13 = Strong;
    uint64_t v14 = *(void *)(v11 + 8);
    uint64_t v15 = type metadata accessor for TaskPriority();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v9, 1, 1, v15);
    type metadata accessor for MainActor();
    _Block_copy(a2);
    swift_unknownObjectRetain();
    swift_retain();
    uint64_t v16 = static MainActor.shared.getter();
    uint64_t v17 = swift_allocObject();
    *(void *)(v17 + 16) = v16;
    *(void *)(v17 + 24) = &protocol witness table for MainActor;
    *(void *)(v17 + 32) = v13;
    *(void *)(v17 + 40) = v14;
    *(float *)(v17 + 48) = a3;
    *(void *)(v17 + 56) = sub_1005C66A0;
    *(void *)(v17 + 64) = v10;
    sub_1005912D0((uint64_t)v9, (uint64_t)&unk_101681168, v17);
    swift_release();
    swift_release();
    return swift_unknownObjectRelease();
  }
  else
  {
    sub_1007CEB50();
    swift_allocError();
    _OWORD *v19 = xmmword_10118C770;
    _Block_copy(a2);
    uint64_t v20 = (void *)_convertErrorToNSError(_:)();
    ((void (**)(void, void, void *))a2)[2](a2, 0, v20);

    swift_errorRelease();
    return swift_release();
  }
}

uint64_t sub_1007CE5C4()
{
  uint64_t v1 = type metadata accessor for UUID();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 48) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v7 = (v6 + 15) & 0xFFFFFFFFFFFFFFF8;
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  sub_100510084(*(void *)(v0 + v7), *(void *)(v0 + v7 + 8));
  swift_release();

  return _swift_deallocObject(v0, ((v7 + 23) & 0xFFFFFFFFFFFFFFF8) + 16, v5);
}

uint64_t sub_1007CE6E4(uint64_t a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for UUID() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = (*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v6 = v1[3];
  uint64_t v14 = v1[2];
  uint64_t v7 = v1[4];
  uint64_t v8 = v1[5];
  uint64_t v9 = (uint64_t)v1 + v4;
  uint64_t v10 = *(void *)((char *)v1 + v5);
  uint64_t v11 = *(void *)((char *)v1 + ((v5 + 15) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v12;
  *uint64_t v12 = v2;
  v12[1] = sub_100528D08;
  return sub_1007CA098(a1, v14, v6, v7, v8, v9, v10, v11);
}

unint64_t sub_1007CE85C()
{
  unint64_t result = qword_101681148;
  if (!qword_101681148)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_101681148);
  }
  return result;
}

void *sub_1007CE8B0(void *a1, void (*a2)(void, void, void, void, void, void, void))
{
  return a1;
}

uint64_t sub_1007CE8F0()
{
  uint64_t v1 = type metadata accessor for UUID();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 48) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v7 = (v6 + 15) & 0xFFFFFFFFFFFFFFF8;
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  sub_100510084(*(void *)(v0 + v7), *(void *)(v0 + v7 + 8));

  return _swift_deallocObject(v0, v7 + 16, v5);
}

uint64_t sub_1007CE9F4(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for UUID() - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  unint64_t v6 = (*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v7 = v1[2];
  uint64_t v8 = v1[3];
  uint64_t v9 = v1[4];
  uint64_t v10 = v1[5];
  uint64_t v11 = *(void *)((char *)v1 + v6);
  uint64_t v12 = (uint64_t)v1 + v5;
  uint64_t v13 = *(void *)((char *)v1 + ((v6 + 15) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v14 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v14;
  *uint64_t v14 = v2;
  v14[1] = sub_100528D08;
  return sub_1007C9A68(a1, v7, v8, v9, v10, v12, v11, v13);
}

unint64_t sub_1007CEB50()
{
  unint64_t result = qword_10168BEE0;
  if (!qword_10168BEE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_10168BEE0);
  }
  return result;
}

uint64_t sub_1007CEBA4()
{
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 72, 7);
}

uint64_t sub_1007CEBEC(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v6 = *(void *)(v1 + 32);
  uint64_t v7 = *(void *)(v1 + 40);
  float v8 = *(float *)(v1 + 48);
  uint64_t v10 = *(void *)(v1 + 56);
  uint64_t v9 = *(void *)(v1 + 64);
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v11;
  *uint64_t v11 = v2;
  v11[1] = sub_100528D08;
  return sub_1007C68DC(v8, a1, v4, v5, v6, v7, v10, v9);
}

uint64_t sub_1007CECCC(uint64_t a1)
{
  uint64_t v4 = v1[3];
  uint64_t v12 = v1[2];
  uint64_t v5 = v1[4];
  uint64_t v6 = v1[5];
  uint64_t v7 = v1[6];
  uint64_t v8 = v1[7];
  uint64_t v9 = v1[8];
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  *uint64_t v10 = v2;
  v10[1] = sub_100528D08;
  return sub_1007C630C(a1, v12, v4, v5, v6, v7, v8, v9);
}

uint64_t sub_1007CEDC0(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100522D34(&qword_101681080);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1007CEE30()
{
  unint64_t result = qword_101681188;
  if (!qword_101681188)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_101681188);
  }
  return result;
}

uint64_t sub_1007CEE88(uint64_t a1)
{
  uint64_t v4 = v1[3];
  uint64_t v12 = v1[2];
  uint64_t v5 = v1[4];
  uint64_t v6 = v1[5];
  uint64_t v7 = v1[6];
  uint64_t v8 = v1[7];
  uint64_t v9 = v1[8];
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  *uint64_t v10 = v2;
  v10[1] = sub_100528488;
  return sub_1007C5E30(a1, v12, v4, v5, v6, v7, v8, v9);
}

unint64_t sub_1007CEF7C()
{
  unint64_t result = qword_1016811A0;
  if (!qword_1016811A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_1016811A0);
  }
  return result;
}

uint64_t sub_1007CEFD4()
{
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();

  sub_100510084(*(void *)(v0 + 56), *(void *)(v0 + 64));
  swift_release();

  return _swift_deallocObject(v0, 88, 7);
}

uint64_t sub_1007CF02C(uint64_t a1)
{
  uint64_t v4 = v1[3];
  uint64_t v12 = v1[2];
  uint64_t v5 = v1[4];
  uint64_t v6 = v1[5];
  uint64_t v7 = v1[6];
  uint64_t v8 = v1[7];
  uint64_t v9 = v1[8];
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  *uint64_t v10 = v2;
  v10[1] = sub_100528D08;
  return sub_1007C58BC(a1, v12, v4, v5, v6, v7, v8, v9);
}

uint64_t sub_1007CF120(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1007CF168(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for CRLUSDRendering.SceneRequest(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1007CF1C4(uint64_t a1, uint64_t a2)
{
  sub_1007C5768(a1, a2, *(void *)(v2 + 16));
}

uint64_t sub_1007CF1CC()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_unknownObjectRelease();

  return _swift_deallocObject(v0, 64, 7);
}

uint64_t sub_1007CF214(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v9 = v1[6];
  uint64_t v8 = v1[7];
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  *uint64_t v10 = v2;
  v10[1] = sub_100528D08;
  return sub_1007C5528(a1, v4, v5, v6, v7, v9, v8);
}

ValueMetadata *type metadata accessor for CRLUSDRendererExtensionShared()
{
  return &type metadata for CRLUSDRendererExtensionShared;
}

unint64_t destroy for CRLWPFontName(uint64_t a1)
{
  unint64_t result = *(void *)(a1 + 8);
  if (result >= 0xFFFFFFFF) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t _s8Freeform13CRLWPFontNameOwCP_0(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if (v3 < 0xFFFFFFFF)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  else
  {
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v3;
    swift_bridgeObjectRetain();
  }
  return a1;
}

void *assignWithCopy for CRLWPFontName(void *a1, void *a2)
{
  unint64_t v4 = a2[1];
  if (a1[1] < 0xFFFFFFFFuLL)
  {
    if (v4 >= 0xFFFFFFFF)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
      return a1;
    }
LABEL_7:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for CRLWPFontName(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 8) < 0xFFFFFFFFuLL) {
    goto LABEL_5;
  }
  unint64_t v4 = *(void *)(a2 + 8);
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
LABEL_5:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for CRLUSDRendererExtensionShared.ExtensionError(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFE && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 2147483646);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  unsigned int v4 = v3 + 1;
  unsigned int v5 = v3 - 1;
  if (v4 >= 3) {
    return v5;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for CRLUSDRendererExtensionShared.ExtensionError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFD)
  {
    *(void *)unint64_t result = 0;
    *(void *)(result + 8) = 0;
    *(_DWORD *)unint64_t result = a2 - 2147483646;
    if (a3 >= 0x7FFFFFFE) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFE) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2 + 1;
    }
  }
  return result;
}

uint64_t sub_1007CF518(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 8);
  if (v1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  return (v1 + 1);
}

void *sub_1007CF530(void *result, int a2)
{
  if (a2 < 0)
  {
    *unint64_t result = a2 ^ 0x80000000;
    result[1] = 0;
  }
  else if (a2)
  {
    result[1] = (a2 - 1);
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLUSDRendererExtensionShared.ExtensionError()
{
  return &type metadata for CRLUSDRendererExtensionShared.ExtensionError;
}

unint64_t sub_1007CF564()
{
  unint64_t result = qword_1016811D0;
  if (!qword_1016811D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016811D0);
  }
  return result;
}

unint64_t sub_1007CF5B8()
{
  unint64_t result = qword_1016811F8;
  if (!qword_1016811F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016811F8);
  }
  return result;
}

unint64_t sub_1007CF60C()
{
  unint64_t result = qword_101681200;
  if (!qword_101681200)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101681200);
  }
  return result;
}

unint64_t sub_1007CF660()
{
  unint64_t result = qword_101681208;
  if (!qword_101681208)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101681208);
  }
  return result;
}

unint64_t sub_1007CF6B4()
{
  unint64_t result = qword_101681210;
  if (!qword_101681210)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101681210);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for CRLUSDRendererExtensionShared.ExtensionError.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1007CF7D4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLUSDRendererExtensionShared.ExtensionError.CodingKeys()
{
  return &type metadata for CRLUSDRendererExtensionShared.ExtensionError.CodingKeys;
}

ValueMetadata *type metadata accessor for CRLUSDRendererExtensionShared.ExtensionError.InterfaceMismatchCodingKeys()
{
  return &type metadata for CRLUSDRendererExtensionShared.ExtensionError.InterfaceMismatchCodingKeys;
}

ValueMetadata *type metadata accessor for CRLUSDRendererExtensionShared.ExtensionError.DisconnectedCodingKeys()
{
  return &type metadata for CRLUSDRendererExtensionShared.ExtensionError.DisconnectedCodingKeys;
}

unsigned char *storeEnumTagSinglePayload for CRLUSDRendererExtensionShared.ExtensionError.ForegroundAssertionCodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1007CF8C8);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLUSDRendererExtensionShared.ExtensionError.ForegroundAssertionCodingKeys()
{
  return &type metadata for CRLUSDRendererExtensionShared.ExtensionError.ForegroundAssertionCodingKeys;
}

unint64_t sub_1007CF904()
{
  unint64_t result = qword_101681238;
  if (!qword_101681238)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101681238);
  }
  return result;
}

unint64_t sub_1007CF95C()
{
  unint64_t result = qword_101681240;
  if (!qword_101681240)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101681240);
  }
  return result;
}

unint64_t sub_1007CF9B4()
{
  unint64_t result = qword_101681248;
  if (!qword_101681248)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101681248);
  }
  return result;
}

unint64_t sub_1007CFA0C()
{
  unint64_t result = qword_101681250;
  if (!qword_101681250)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101681250);
  }
  return result;
}

unint64_t sub_1007CFA64()
{
  unint64_t result = qword_101681258;
  if (!qword_101681258)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101681258);
  }
  return result;
}

unint64_t sub_1007CFABC()
{
  unint64_t result = qword_101681260;
  if (!qword_101681260)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101681260);
  }
  return result;
}

unint64_t sub_1007CFB14()
{
  unint64_t result = qword_101681268;
  if (!qword_101681268)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101681268);
  }
  return result;
}

unint64_t sub_1007CFB6C()
{
  unint64_t result = qword_101681270;
  if (!qword_101681270)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101681270);
  }
  return result;
}

unint64_t sub_1007CFBC4()
{
  unint64_t result = qword_101681278;
  if (!qword_101681278)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101681278);
  }
  return result;
}

unint64_t sub_1007CFC1C()
{
  unint64_t result = qword_101681280;
  if (!qword_101681280)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101681280);
  }
  return result;
}

void sub_1007CFCA8(id *a1, uint64_t a2)
{
}

uint64_t destroy for CRLCanvasLayerAnimator(uint64_t a1)
{
  if (*(void *)(a1 + 56)) {
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(a1 + 32);
  }

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for CRLCanvasLayerTransformByUnscaledRectTransition(uint64_t a1, uint64_t a2)
{
  unsigned int v4 = *(void **)a2;
  uint64_t v5 = *(void **)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v5;
  unsigned int v6 = *(void **)(a2 + 16);
  uint64_t v7 = *(void **)(a2 + 24);
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v7;
  uint64_t v8 = a1 + 32;
  uint64_t v9 = a2 + 32;
  uint64_t v10 = *(void *)(a2 + 56);
  id v11 = v4;
  id v12 = v5;
  id v13 = v6;
  id v14 = v7;
  if (v10)
  {
    uint64_t v15 = *(void *)(a2 + 64);
    *(void *)(a1 + 56) = v10;
    *(void *)(a1 + 64) = v15;
    (**(void (***)(uint64_t, uint64_t, uint64_t))(v10 - 8))(v8, v9, v10);
  }
  else
  {
    long long v16 = *(_OWORD *)(v9 + 16);
    *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
    *(_OWORD *)(v8 + 16) = v16;
    *(void *)(v8 + 32) = *(void *)(v9 + 32);
  }
  uint64_t v17 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v17;
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
  long long v18 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v18;
  *(unsigned char *)(a1 + 160) = *(unsigned char *)(a2 + 160);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for CRLCanvasLayerTransformByUnscaledRectTransition(uint64_t a1, uint64_t a2)
{
  unsigned int v4 = *(void **)a2;
  uint64_t v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  uint64_t v7 = *(void **)(a2 + 8);
  uint64_t v8 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = v7;
  id v9 = v7;

  uint64_t v10 = *(void **)(a2 + 16);
  id v11 = *(void **)(a1 + 16);
  *(void *)(a1 + 16) = v10;
  id v12 = v10;

  id v13 = *(void **)(a2 + 24);
  id v14 = *(void **)(a1 + 24);
  *(void *)(a1 + 24) = v13;
  id v15 = v13;

  uint64_t v16 = *(void *)(a2 + 56);
  if (!*(void *)(a1 + 56))
  {
    if (v16)
    {
      *(void *)(a1 + 56) = v16;
      *(void *)(a1 + 64) = *(void *)(a2 + 64);
      (**(void (***)(uint64_t, uint64_t))(v16 - 8))(a1 + 32, a2 + 32);
      goto LABEL_8;
    }
LABEL_7:
    long long v17 = *(_OWORD *)(a2 + 32);
    long long v18 = *(_OWORD *)(a2 + 48);
    *(void *)(a1 + 64) = *(void *)(a2 + 64);
    *(_OWORD *)(a1 + 32) = v17;
    *(_OWORD *)(a1 + 48) = v18;
    goto LABEL_8;
  }
  if (!v16)
  {
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(a1 + 32);
    goto LABEL_7;
  }
  sub_10054BB2C((uint64_t *)(a1 + 32), (uint64_t *)(a2 + 32));
LABEL_8:
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  long long v19 = *(_OWORD *)(a2 + 88);
  long long v20 = *(_OWORD *)(a2 + 104);
  *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
  *(_OWORD *)(a1 + 104) = v20;
  *(_OWORD *)(a1 + 88) = v19;
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(unsigned char *)(a1 + 160) = *(unsigned char *)(a2 + 160);
  return a1;
}

__n128 initializeWithTake for CRLCanvasLayerTransformByUnscaledRectTransition(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  long long v4 = a2[3];
  long long v5 = a2[4];
  long long v6 = a2[6];
  *(_OWORD *)(a1 + 80) = a2[5];
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  __n128 result = (__n128)a2[7];
  long long v8 = a2[8];
  long long v9 = a2[9];
  *(unsigned char *)(a1 + 160) = *((unsigned char *)a2 + 160);
  *(_OWORD *)(a1 + 128) = v8;
  *(_OWORD *)(a1 + 144) = v9;
  *(__n128 *)(a1 + 112) = result;
  return result;
}

uint64_t assignWithTake for CRLCanvasLayerTransformByUnscaledRectTransition(uint64_t a1, uint64_t a2)
{
  long long v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  long long v5 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);

  long long v6 = *(void **)(a1 + 16);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);

  uint64_t v7 = *(void **)(a1 + 24);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);

  if (*(void *)(a1 + 56)) {
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(a1 + 32);
  }
  long long v8 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v8;
  uint64_t v9 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  uint64_t v10 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = v9;
  *(void *)(a1 + 80) = v10;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
  long long v11 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v11;
  *(unsigned char *)(a1 + 160) = *(unsigned char *)(a2 + 160);
  return a1;
}

uint64_t getEnumTagSinglePayload for CRLCanvasLayerTransformByUnscaledRectTransition(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 161)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CRLCanvasLayerTransformByUnscaledRectTransition(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 152) = 0;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 160) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 161) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 161) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLCanvasLayerTransformByUnscaledRectTransition()
{
  return &type metadata for CRLCanvasLayerTransformByUnscaledRectTransition;
}

uint64_t sub_1007D0164@<X0>(uint64_t a1@<X8>)
{
  if (*(unsigned char *)(v1 + 120))
  {
    long long v3 = *(_OWORD *)(v1 + 144);
    if (*(unsigned char *)(v1 + 160) == 1)
    {
      *(_OWORD *)a1 = *(_OWORD *)(v1 + 128);
      *(_OWORD *)(a1 + 16) = v3;
      uint64_t result = sub_1005CFBF0(v1, a1 + 32);
      char v5 = 64;
    }
    else
    {
      *(_OWORD *)a1 = *(_OWORD *)(v1 + 128);
      *(_OWORD *)(a1 + 16) = v3;
      char v5 = 62;
    }
  }
  else
  {
    uint64_t v7 = *(void *)(v1 + 104);
    uint64_t v6 = *(void *)(v1 + 112);
    int v8 = *(unsigned __int8 *)(v1 + 160);
    *(_OWORD *)a1 = *(_OWORD *)(v1 + 88);
    *(void *)(a1 + 16) = v7;
    *(void *)(a1 + 24) = v6;
    long long v9 = *(_OWORD *)(v1 + 144);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(v1 + 128);
    *(_OWORD *)(a1 + 48) = v9;
    if (v8 == 1)
    {
      uint64_t result = sub_1005CFBF0(v1, a1 + 64);
      char v5 = 63;
    }
    else
    {
      char v5 = 61;
    }
  }
  *(unsigned char *)(a1 + 256) = v5;
  return result;
}

CGFloat sub_1007D020C@<D0>(uint64_t a1@<X8>)
{
  if (*(unsigned char *)(v1 + 120))
  {
    long long v3 = *(void **)(v1 + 8);
    [v3 transform];
    CGFloat v5 = *((double *)&v100 + 1);
    CGFloat v4 = *(double *)&v100;
    CGFloat v92 = *(double *)&v101;
    CGFloat v88 = *(double *)&v102;
    CGFloat v89 = *((double *)&v101 + 1);
    CGFloat v86 = *(double *)&v103;
    CGFloat v87 = *((double *)&v102 + 1);
    CGFloat v84 = *(double *)&v104;
    CGFloat v85 = *((double *)&v103 + 1);
    CGFloat v82 = *(double *)&v105;
    CGFloat v83 = *((double *)&v104 + 1);
    CGFloat v80 = *(double *)&v106;
    CGFloat v81 = *((double *)&v105 + 1);
    CGFloat v78 = *(double *)&v107;
    CGFloat v79 = *((double *)&v106 + 1);
    double v6 = *((double *)&v107 + 1);
  }
  else
  {
    double v8 = *(double *)(v1 + 104);
    double v7 = *(double *)(v1 + 112);
    CGFloat v10 = *(double *)(v1 + 88);
    CGFloat v9 = *(double *)(v1 + 96);
    [*(id *)(v1 + 24) unobscuredScrollViewFrame];
    double v13 = sub_10006729C(0, v8, v7, v11, v12) / v8;
    double v15 = v14 / v7;
    if (v15 >= v13) {
      double v16 = v13;
    }
    else {
      double v16 = v15;
    }
    long long v3 = *(void **)(v1 + 8);
    [v3 minimumPinchViewScale];
    double v18 = v17;
    [v3 maximumPinchViewScale];
    double v20 = sub_100407E48(v16, v18, v19);
    double v21 = sub_100065738(v10, v9, v8, v7);
    double v23 = v22;
    [*(id *)(v1 + 16) adjustedContentInset];
    sub_100804D18((uint64_t)v99, v20, v21, v23, v24, v25, v26, v27);
    CGFloat v4 = *(double *)v99;
    CGFloat v5 = *(double *)&v99[1];
    CGFloat v92 = *(double *)&v99[2];
    CGFloat v88 = *(double *)&v99[4];
    CGFloat v89 = *(double *)&v99[3];
    CGFloat v86 = *(double *)&v99[6];
    CGFloat v87 = *(double *)&v99[5];
    CGFloat v84 = *(double *)&v99[8];
    CGFloat v85 = *(double *)&v99[7];
    CGFloat v82 = *(double *)&v99[10];
    CGFloat v83 = *(double *)&v99[9];
    CGFloat v80 = *(double *)&v99[12];
    CGFloat v81 = *(double *)&v99[11];
    CGFloat v78 = *(double *)&v99[14];
    CGFloat v79 = *(double *)&v99[13];
    double v6 = *(double *)&v99[15];
  }
  CGFloat v77 = v6;
  CGFloat v28 = *(double *)(v1 + 128);
  CGFloat v29 = *(double *)(v1 + 136);
  double v30 = *(double *)(v1 + 144);
  double v31 = *(double *)(v1 + 152);
  [*(id *)(v1 + 24) unobscuredScrollViewFrame];
  double v34 = sub_10006729C(0, v30, v31, v32, v33) / v30;
  double v36 = v35 / v31;
  if (v36 >= v34) {
    double v37 = v34;
  }
  else {
    double v37 = v36;
  }
  [v3 minimumPinchViewScale];
  double v39 = v38;
  [v3 maximumPinchViewScale];
  double v41 = sub_100407E48(v37, v39, v40);
  double v42 = sub_100065738(v28, v29, v30, v31);
  double v44 = v43;
  [*(id *)(v1 + 16) adjustedContentInset];
  sub_100804D18((uint64_t)&v100, v41, v42, v44, v45, v46, v47, v48);
  if (*(unsigned char *)(v1 + 160) == 1)
  {
    long long v49 = v107;
    long long v75 = v105;
    long long v76 = v106;
    long long v73 = v103;
    long long v74 = v104;
    long long v71 = v101;
    long long v72 = v102;
    long long v70 = v100;
    v96.CGFloat m11 = v4;
    v96.CGFloat m12 = v5;
    v96.CGFloat m13 = v92;
    v96.CGFloat m14 = v89;
    v96.CGFloat m21 = v88;
    v96.CGFloat m22 = v87;
    v96.CGFloat m23 = v86;
    v96.CGFloat m24 = v85;
    v96.CGFloat m31 = v84;
    v96.CGFloat m32 = v83;
    v96.CGFloat m33 = v82;
    v96.CGFloat m34 = v81;
    v96.CGFloat m41 = v80;
    v96.CGFloat m42 = v79;
    v96.CGFloat m43 = v78;
    v96.CGFloat m44 = v77;
    CATransform3DGetAffineTransform(&v95, &v96);
    long long v90 = *(_OWORD *)&v95.c;
    long long v93 = *(_OWORD *)&v95.a;
    tCGFloat x = v95.tx;
    tCGFloat y = v95.ty;
    type metadata accessor for CGAffineTransform(0);
    CGFloat v53 = v52;
    double v98 = v52;
    uint64_t v54 = swift_allocObject();
    v97[0] = v54;
    *(_OWORD *)(v54 + 16) = v93;
    *(_OWORD *)(v54 + 32) = v90;
    *(CGFloat *)(v54 + 48) = tx;
    *(CGFloat *)(v54 + 56) = ty;
    *(_OWORD *)&v96.CGFloat m11 = v70;
    *(_OWORD *)&v96.CGFloat m13 = v71;
    *(_OWORD *)&v96.CGFloat m21 = v72;
    *(_OWORD *)&v96.CGFloat m23 = v73;
    *(_OWORD *)&v96.CGFloat m31 = v74;
    *(_OWORD *)&v96.CGFloat m33 = v75;
    *(_OWORD *)&v96.CGFloat m41 = v76;
    *(_OWORD *)&v96.CGFloat m43 = v49;
    CATransform3DGetAffineTransform(&v95, &v96);
    long long v91 = *(_OWORD *)&v95.c;
    long long v94 = *(_OWORD *)&v95.a;
    CGFloat v55 = v95.tx;
    CGFloat v56 = v95.ty;
    v95.double d = v53;
    uint64_t v57 = swift_allocObject();
    *(void *)&v95.double a = v57;
    *(_OWORD *)(v57 + 16) = v94;
    *(_OWORD *)(v57 + 32) = v91;
    *(CGFloat *)(v57 + 48) = v55;
    *(CGFloat *)(v57 + 56) = v56;
    memset(&v96, 0, 64);
    LOBYTE(v96.m31) = 28;
    v96.CGFloat m32 = -2.31584178e77;
    *(void *)&v96.CGFloat m33 = 0x8000000101235A20;
    sub_1005E93B8((uint64_t)v97, (uint64_t)&v96);
    unint64_t v58 = &v95;
  }
  else
  {
    type metadata accessor for CATransform3D(0);
    CGFloat v60 = v59;
    v95.double d = v59;
    int v61 = (CGFloat *)swift_allocObject();
    *(void *)&v95.double a = v61;
    v61[2] = v4;
    v61[3] = v5;
    v61[4] = v92;
    v61[5] = v89;
    v61[6] = v88;
    v61[7] = v87;
    v61[8] = v86;
    v61[9] = v85;
    v61[10] = v84;
    v61[11] = v83;
    v61[12] = v82;
    v61[13] = v81;
    v61[14] = v80;
    v61[15] = v79;
    v61[16] = v78;
    v61[17] = v77;
    double v98 = v60;
    uint64_t v62 = (_OWORD *)swift_allocObject();
    v97[0] = v62;
    long long v63 = v105;
    v62[5] = v104;
    v62[6] = v63;
    long long v64 = v107;
    v62[7] = v106;
    v62[8] = v64;
    long long v65 = v101;
    v62[1] = v100;
    v62[2] = v65;
    long long v66 = v103;
    v62[3] = v102;
    void v62[4] = v66;
    memset(&v96, 0, 64);
    LOBYTE(v96.m31) = 26;
    v96.CGFloat m32 = 1.67501583e243;
    v96.CGFloat m33 = -5.98008217e197;
    sub_1005E93B8((uint64_t)&v95, (uint64_t)&v96);
    unint64_t v58 = (CGAffineTransform *)v97;
  }
  sub_1005E93B8((uint64_t)v58, (uint64_t)&v96.m21);
  long long v67 = *(_OWORD *)&v96.m23;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)&v96.m21;
  *(_OWORD *)(a1 + 48) = v67;
  *(_OWORD *)(a1 + 64) = *(_OWORD *)&v96.m31;
  *(CGFloat *)(a1 + 80) = v96.m33;
  CGFloat result = v96.m11;
  long long v69 = *(_OWORD *)&v96.m13;
  *(_OWORD *)a1 = *(_OWORD *)&v96.m11;
  *(_OWORD *)(a1 + 16) = v69;
  return result;
}