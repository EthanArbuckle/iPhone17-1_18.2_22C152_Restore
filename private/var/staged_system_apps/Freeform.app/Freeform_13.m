uint64_t destroy for BoardEditEvent(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(uint64_t, uint64_t);
  uint64_t vars8;

  v4 = sub_1005057FC(&qword_101670398);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + a2[5];
  v6 = sub_1005057FC(&qword_101670410);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  v7 = a1 + a2[6];
  v8 = sub_1005057FC(&qword_101670418);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  v9 = a1 + a2[7];
  v10 = sub_1005057FC(&qword_101670420);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  v11 = a1 + a2[8];
  v12 = sub_1005057FC(&qword_101670428);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  v13 = a1 + a2[9];
  v14 = sub_1005057FC(&qword_1016703A8);
  v15 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8);

  return v15(v13, v14);
}

uint64_t initializeWithCopy for BoardEditEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1005057FC(&qword_101670398);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_1005057FC(&qword_101670410);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_1005057FC(&qword_101670418);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_1005057FC(&qword_101670420);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  uint64_t v22 = sub_1005057FC(&qword_101670428);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 16))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  uint64_t v26 = sub_1005057FC(&qword_1016703A8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 16))(v24, v25, v26);
  return a1;
}

uint64_t assignWithCopy for BoardEditEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1005057FC(&qword_101670398);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_1005057FC(&qword_101670410);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_1005057FC(&qword_101670418);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_1005057FC(&qword_101670420);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 24))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  uint64_t v22 = sub_1005057FC(&qword_101670428);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 24))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  uint64_t v26 = sub_1005057FC(&qword_1016703A8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 24))(v24, v25, v26);
  return a1;
}

uint64_t initializeWithTake for BoardEditEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1005057FC(&qword_101670398);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_1005057FC(&qword_101670410);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_1005057FC(&qword_101670418);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_1005057FC(&qword_101670420);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  uint64_t v22 = sub_1005057FC(&qword_101670428);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 32))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  uint64_t v26 = sub_1005057FC(&qword_1016703A8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 32))(v24, v25, v26);
  return a1;
}

uint64_t assignWithTake for BoardEditEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1005057FC(&qword_101670398);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_1005057FC(&qword_101670410);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_1005057FC(&qword_101670418);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_1005057FC(&qword_101670420);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 40))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  uint64_t v22 = sub_1005057FC(&qword_101670428);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 40))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  uint64_t v26 = sub_1005057FC(&qword_1016703A8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 40))(v24, v25, v26);
  return a1;
}

uint64_t getEnumTagSinglePayload for BoardEditEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100BB515C);
}

uint64_t sub_100BB515C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1005057FC(&qword_101670398);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_12:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_1005057FC(&qword_101670410);
  if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = a3[5];
LABEL_11:
    uint64_t v10 = a1 + v13;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_12;
  }
  uint64_t v14 = sub_1005057FC(&qword_101670418);
  if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a2)
  {
    uint64_t v8 = v14;
    uint64_t v12 = *(void *)(v14 - 8);
    uint64_t v13 = a3[6];
    goto LABEL_11;
  }
  uint64_t v15 = sub_1005057FC(&qword_101670420);
  if (*(_DWORD *)(*(void *)(v15 - 8) + 84) == a2)
  {
    uint64_t v8 = v15;
    uint64_t v12 = *(void *)(v15 - 8);
    uint64_t v13 = a3[7];
    goto LABEL_11;
  }
  uint64_t v16 = sub_1005057FC(&qword_101670428);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a2)
  {
    uint64_t v8 = v16;
    uint64_t v12 = *(void *)(v16 - 8);
    uint64_t v13 = a3[8];
    goto LABEL_11;
  }
  uint64_t v18 = sub_1005057FC(&qword_1016703A8);
  uint64_t v19 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 48);
  uint64_t v20 = v18;
  uint64_t v21 = a1 + a3[9];

  return v19(v21, a2, v20);
}

uint64_t storeEnumTagSinglePayload for BoardEditEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100BB53B8);
}

uint64_t sub_100BB53B8(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8 = sub_1005057FC(&qword_101670398);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_12:
    return v11(v12, a2, a2, v10);
  }
  uint64_t v13 = sub_1005057FC(&qword_101670410);
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v15 = a4[5];
LABEL_11:
    uint64_t v12 = a1 + v15;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_12;
  }
  uint64_t v16 = sub_1005057FC(&qword_101670418);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a3)
  {
    uint64_t v10 = v16;
    uint64_t v14 = *(void *)(v16 - 8);
    uint64_t v15 = a4[6];
    goto LABEL_11;
  }
  uint64_t v17 = sub_1005057FC(&qword_101670420);
  if (*(_DWORD *)(*(void *)(v17 - 8) + 84) == a3)
  {
    uint64_t v10 = v17;
    uint64_t v14 = *(void *)(v17 - 8);
    uint64_t v15 = a4[7];
    goto LABEL_11;
  }
  uint64_t v18 = sub_1005057FC(&qword_101670428);
  if (*(_DWORD *)(*(void *)(v18 - 8) + 84) == a3)
  {
    uint64_t v10 = v18;
    uint64_t v14 = *(void *)(v18 - 8);
    uint64_t v15 = a4[8];
    goto LABEL_11;
  }
  uint64_t v20 = sub_1005057FC(&qword_1016703A8);
  uint64_t v21 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56);
  uint64_t v22 = v20;
  uint64_t v23 = a1 + a4[9];

  return v21(v23, a2, a2, v22);
}

void sub_100BB560C()
{
  sub_100634BF8();
  if (v0 <= 0x3F)
  {
    sub_100BB58A4(319, (unint64_t *)&qword_101695870, (void (*)(void))sub_100BAFA50, (void (*)(void))sub_100BAFAA8);
    if (v1 <= 0x3F)
    {
      sub_100BB58A4(319, &qword_1016959F8, (void (*)(void))sub_100BAF0E8, (void (*)(void))sub_100BAF140);
      if (v2 <= 0x3F)
      {
        sub_100BB58A4(319, &qword_101695A00, (void (*)(void))sub_100BB4118, (void (*)(void))sub_100BB3A50);
        if (v3 <= 0x3F)
        {
          sub_100BB58A4(319, (unint64_t *)&unk_101695A08, (void (*)(void))sub_100BB416C, (void (*)(void))sub_100BB3AA4);
          if (v4 <= 0x3F)
          {
            sub_100634D2C();
            if (v5 <= 0x3F) {
              swift_initStructMetadata();
            }
          }
        }
      }
    }
  }
}

void sub_100BB58A4(uint64_t a1, unint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  if (!*a2)
  {
    a3();
    a4();
    unint64_t v6 = type metadata accessor for EventProperty();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

void *initializeBufferWithCopyOfBuffer for BoardEditEvent.Model(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v18 = *a2;
    *a1 = *a2;
    a1 = (void *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for EventData();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = a3[6];
    uint64_t v10 = (char *)a1 + v8;
    uint64_t v11 = (char *)a2 + v8;
    uint64_t v12 = *((void *)v11 + 1);
    *(void *)uint64_t v10 = *(void *)v11;
    *((void *)v10 + 1) = v12;
    v10[16] = v11[16];
    *(void *)((char *)a1 + v9) = *(void *)((char *)a2 + v9);
    uint64_t v13 = a3[8];
    *((unsigned char *)a1 + a3[7]) = *((unsigned char *)a2 + a3[7]);
    uint64_t v14 = (void *)((char *)a1 + v13);
    uint64_t v15 = (void *)((char *)a2 + v13);
    uint64_t v16 = *(void *)((char *)a2 + v13 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v16)
    {
      *uint64_t v14 = *v15;
      v14[1] = v16;
      uint64_t v17 = v15[3];
      v14[2] = v15[2];
      v14[3] = v17;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v19 = *((_OWORD *)v15 + 1);
      *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
      *((_OWORD *)v14 + 1) = v19;
    }
    uint64_t v20 = a3[9];
    uint64_t v21 = (char *)a1 + v20;
    uint64_t v22 = (char *)a2 + v20;
    uint64_t v23 = type metadata accessor for TimedData();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
  }
  return a1;
}

uint64_t destroy for BoardEditEvent.Model(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for EventData();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + *(int *)(a2 + 32) + 8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v5 = a1 + *(int *)(a2 + 36);
  uint64_t v6 = type metadata accessor for TimedData();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);

  return v7(v5, v6);
}

uint64_t initializeWithCopy for BoardEditEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for EventData();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  uint64_t v11 = *(void *)(v10 + 8);
  *(void *)uint64_t v9 = *(void *)v10;
  *(void *)(v9 + 8) = v11;
  *(unsigned char *)(v9 + 16) = *(unsigned char *)(v10 + 16);
  *(void *)(a1 + v8) = *(void *)(a2 + v8);
  uint64_t v12 = a3[8];
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (void *)(a2 + v12);
  uint64_t v15 = *(void *)(a2 + v12 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v15)
  {
    *uint64_t v13 = *v14;
    v13[1] = v15;
    uint64_t v16 = v14[3];
    v13[2] = v14[2];
    v13[3] = v16;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v17 = *((_OWORD *)v14 + 1);
    *(_OWORD *)uint64_t v13 = *(_OWORD *)v14;
    *((_OWORD *)v13 + 1) = v17;
  }
  uint64_t v18 = a3[9];
  uint64_t v19 = a1 + v18;
  uint64_t v20 = a2 + v18;
  uint64_t v21 = type metadata accessor for TimedData();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 16))(v19, v20, v21);
  return a1;
}

uint64_t assignWithCopy for BoardEditEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for EventData();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(void *)uint64_t v8 = *(void *)(a2 + v7);
  *(void *)(v8 + 8) = *(void *)(a2 + v7 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v8 + 16) = *(unsigned char *)(v9 + 16);
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  uint64_t v10 = a3[8];
  uint64_t v11 = (void *)(a1 + v10);
  uint64_t v12 = (void *)(a2 + v10);
  uint64_t v13 = *(void *)(a1 + v10 + 8);
  uint64_t v14 = *(void *)(a2 + v10 + 8);
  if (v13)
  {
    if (v14)
    {
      *uint64_t v11 = *v12;
      v11[1] = v12[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v11[2] = v12[2];
      v11[3] = v12[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_100BB5EA0((uint64_t)v11);
      long long v15 = *((_OWORD *)v12 + 1);
      *(_OWORD *)uint64_t v11 = *(_OWORD *)v12;
      *((_OWORD *)v11 + 1) = v15;
    }
  }
  else if (v14)
  {
    *uint64_t v11 = *v12;
    v11[1] = v12[1];
    v11[2] = v12[2];
    v11[3] = v12[3];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v16 = *((_OWORD *)v12 + 1);
    *(_OWORD *)uint64_t v11 = *(_OWORD *)v12;
    *((_OWORD *)v11 + 1) = v16;
  }
  uint64_t v17 = a3[9];
  uint64_t v18 = a1 + v17;
  uint64_t v19 = a2 + v17;
  uint64_t v20 = type metadata accessor for TimedData();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 24))(v18, v19, v20);
  return a1;
}

uint64_t sub_100BB5EA0(uint64_t a1)
{
  return a1;
}

uint64_t initializeWithTake for BoardEditEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for EventData();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
  *(unsigned char *)(v9 + 16) = *(unsigned char *)(v10 + 16);
  *(void *)(a1 + v8) = *(void *)(a2 + v8);
  uint64_t v11 = a3[8];
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  uint64_t v12 = (_OWORD *)(a1 + v11);
  uint64_t v13 = (_OWORD *)(a2 + v11);
  long long v14 = v13[1];
  *uint64_t v12 = *v13;
  v12[1] = v14;
  uint64_t v15 = a3[9];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = type metadata accessor for TimedData();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
  return a1;
}

uint64_t assignWithTake for BoardEditEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for EventData();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = *(void *)(a2 + v7 + 8);
  *(void *)uint64_t v8 = *(void *)(a2 + v7);
  *(void *)(v8 + 8) = v10;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v8 + 16) = *(unsigned char *)(v9 + 16);
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  swift_bridgeObjectRelease();
  uint64_t v11 = a3[8];
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  if (!*(void *)(a1 + v11 + 8)) {
    goto LABEL_5;
  }
  uint64_t v14 = *(void *)(v13 + 8);
  if (!v14)
  {
    sub_100BB5EA0(a1 + v11);
LABEL_5:
    long long v16 = *(_OWORD *)(v13 + 16);
    *(_OWORD *)uint64_t v12 = *(_OWORD *)v13;
    *(_OWORD *)(v12 + 16) = v16;
    goto LABEL_6;
  }
  *(void *)uint64_t v12 = *(void *)v13;
  *(void *)(v12 + 8) = v14;
  swift_bridgeObjectRelease();
  uint64_t v15 = *(void *)(v13 + 24);
  *(void *)(v12 + 16) = *(void *)(v13 + 16);
  *(void *)(v12 + 24) = v15;
  swift_bridgeObjectRelease();
LABEL_6:
  uint64_t v17 = a3[9];
  uint64_t v18 = a1 + v17;
  uint64_t v19 = a2 + v17;
  uint64_t v20 = type metadata accessor for TimedData();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 40))(v18, v19, v20);
  return a1;
}

uint64_t getEnumTagSinglePayload for BoardEditEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100BB614C);
}

uint64_t sub_100BB614C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for EventData();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else if (a2 == 0x7FFFFFFF)
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
  else
  {
    uint64_t v11 = type metadata accessor for TimedData();
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a3 + 36);
    return v12(v14, a2, v13);
  }
}

uint64_t storeEnumTagSinglePayload for BoardEditEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100BB6290);
}

uint64_t sub_100BB6290(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for EventData();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else if (a3 == 0x7FFFFFFF)
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v11 = type metadata accessor for TimedData();
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a4 + 36);
    return v12(v14, a2, a2, v13);
  }
  return result;
}

uint64_t sub_100BB63C0()
{
  uint64_t result = type metadata accessor for EventData();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for TimedData();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for BoardEditEvent.Model.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *uint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100BB6580);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BoardEditEvent.Model.CodingKeys()
{
  return &type metadata for BoardEditEvent.Model.CodingKeys;
}

unint64_t sub_100BB65BC()
{
  unint64_t result = qword_101695AE8;
  if (!qword_101695AE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101695AE8);
  }
  return result;
}

unint64_t sub_100BB6614()
{
  unint64_t result = qword_101695AF0;
  if (!qword_101695AF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101695AF0);
  }
  return result;
}

unint64_t sub_100BB666C()
{
  unint64_t result = qword_101695AF8;
  if (!qword_101695AF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101695AF8);
  }
  return result;
}

uint64_t sub_100BB66C0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7461446472616F62 && a2 == 0xE900000000000061 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000001012784E0 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x7665447475706E69 && a2 == 0xEF61746144656369 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x8000000101278500 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x74614464656D6974 && a2 == 0xE900000000000061)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v6) {
      return 5;
    }
    else {
      return 6;
    }
  }
}

uint64_t sub_100BB696C(uint64_t a1)
{
  return sub_100632C84(a1, (uint64_t (*)(void))&type metadata accessor for SessionGroup, static BoardCreateEvent.sessionGroup, &enum case for SessionGroup.default(_:));
}

uint64_t BoardCreateEvent.sessionGroup.unsafeMutableAddressor()
{
  return sub_100632E04(&qword_10166FC28, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)static BoardCreateEvent.sessionGroup);
}

uint64_t static BoardCreateEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_100632E98(&qword_10166FC28, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)static BoardCreateEvent.sessionGroup, a1);
}

void *BoardCreateEvent.requiresDiagnosticsConsent.unsafeMutableAddressor()
{
  return &static BoardCreateEvent.requiresDiagnosticsConsent;
}

uint64_t sub_100BB6A10(uint64_t a1)
{
  return sub_100632C84(a1, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, static BoardCreateEvent.timestampGranularity, &enum case for TimestampGranularity.hour(_:));
}

uint64_t BoardCreateEvent.timestampGranularity.unsafeMutableAddressor()
{
  return sub_100632E04(&qword_10166FC30, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)static BoardCreateEvent.timestampGranularity);
}

uint64_t static BoardCreateEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_100632E98(&qword_10166FC30, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)static BoardCreateEvent.timestampGranularity, a1);
}

uint64_t sub_100BB6AA8()
{
  uint64_t v0 = type metadata accessor for TimeDurationGranularity();
  sub_100568B28(v0, static BoardCreateEvent.timeDurationGranularity);
  sub_100556B74(v0, (uint64_t)static BoardCreateEvent.timeDurationGranularity);
  return static TimeDurationGranularity.seconds.getter();
}

uint64_t BoardCreateEvent.timeDurationGranularity.unsafeMutableAddressor()
{
  return sub_100632E04(&qword_10166FC38, (uint64_t (*)(void))&type metadata accessor for TimeDurationGranularity, (uint64_t)static BoardCreateEvent.timeDurationGranularity);
}

uint64_t static BoardCreateEvent.timeDurationGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_100632E98(&qword_10166FC38, (uint64_t (*)(void))&type metadata accessor for TimeDurationGranularity, (uint64_t)static BoardCreateEvent.timeDurationGranularity, a1);
}

uint64_t BoardCreateEvent.boardData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for BoardCreateEvent(0) + 20);
  uint64_t v4 = sub_1005057FC(&qword_101670410);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for BoardCreateEvent(uint64_t a1)
{
  return sub_100512D5C(a1, qword_101695B70);
}

uint64_t BoardCreateEvent.boardData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for BoardCreateEvent(0) + 20);
  uint64_t v4 = sub_1005057FC(&qword_101670410);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

Freeform::SyncEvent::FetchedRecordZoneChanges::Deletion (__swiftcall *BoardCreateEvent.boardData.modify())(CKRecordID recordID, Swift::String recordType)
{
  return SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:);
}

uint64_t BoardCreateEvent.drawableAddSummaryData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for BoardCreateEvent(0) + 24);
  uint64_t v4 = sub_1005057FC(&qword_101670418);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t BoardCreateEvent.drawableAddSummaryData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for BoardCreateEvent(0) + 24);
  uint64_t v4 = sub_1005057FC(&qword_101670418);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

Freeform::SyncEvent::FetchedRecordZoneChanges::Deletion (__swiftcall *BoardCreateEvent.drawableAddSummaryData.modify())(CKRecordID recordID, Swift::String recordType)
{
  return SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:);
}

uint64_t BoardCreateEvent.inputDeviceData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for BoardCreateEvent(0) + 28);
  uint64_t v4 = sub_1005057FC(&qword_101670420);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t BoardCreateEvent.inputDeviceData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for BoardCreateEvent(0) + 28);
  uint64_t v4 = sub_1005057FC(&qword_101670420);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

Freeform::SyncEvent::FetchedRecordZoneChanges::Deletion (__swiftcall *BoardCreateEvent.inputDeviceData.modify())(CKRecordID recordID, Swift::String recordType)
{
  return SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:);
}

uint64_t BoardCreateEvent.boardContentData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for BoardCreateEvent(0) + 32);
  uint64_t v4 = sub_1005057FC(&qword_101670428);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t BoardCreateEvent.boardContentData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for BoardCreateEvent(0) + 32);
  uint64_t v4 = sub_1005057FC(&qword_101670428);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

Freeform::SyncEvent::FetchedRecordZoneChanges::Deletion (__swiftcall *BoardCreateEvent.boardContentData.modify())(CKRecordID recordID, Swift::String recordType)
{
  return SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:);
}

uint64_t BoardCreateEvent.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for BoardCreateEvent(0) + 36);
  uint64_t v4 = sub_1005057FC(&qword_1016703A8);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t BoardCreateEvent.timedData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for BoardCreateEvent(0) + 36);
  uint64_t v4 = sub_1005057FC(&qword_1016703A8);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

Freeform::SyncEvent::FetchedRecordZoneChanges::Deletion (__swiftcall *BoardCreateEvent.timedData.modify())(CKRecordID recordID, Swift::String recordType)
{
  return SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:);
}

uint64_t BoardCreateEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = enum case for EventProperty.required<A>(_:);
  uint64_t v3 = sub_1005057FC(&qword_101670398);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104))(a1, v2, v3);
  Event = (int *)type metadata accessor for BoardCreateEvent(0);
  uint64_t v5 = a1 + Event[5];
  uint64_t v6 = sub_1005057FC(&qword_101670410);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 104))(v5, v2, v6);
  uint64_t v7 = a1 + Event[6];
  uint64_t v8 = sub_1005057FC(&qword_101670418);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 104))(v7, v2, v8);
  uint64_t v9 = a1 + Event[7];
  uint64_t v10 = sub_1005057FC(&qword_101670420);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 104))(v9, v2, v10);
  uint64_t v11 = a1 + Event[8];
  uint64_t v12 = sub_1005057FC(&qword_101670428);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 104))(v11, v2, v12);
  uint64_t v13 = a1 + Event[9];
  uint64_t v14 = sub_1005057FC(&qword_1016703A8);
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 104);

  return v15(v13, v2, v14);
}

uint64_t BoardCreateEvent.Model.boardData.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for BoardCreateEvent.Model(0) + 20));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t type metadata accessor for BoardCreateEvent.Model(uint64_t a1)
{
  return sub_100512D5C(a1, qword_101695C10);
}

uint64_t BoardCreateEvent.Model.drawableAddSummaryData.getter()
{
  type metadata accessor for BoardCreateEvent.Model(0);

  return swift_bridgeObjectRetain();
}

uint64_t BoardCreateEvent.Model.inputDeviceData.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for BoardCreateEvent.Model(0) + 28));
}

uint64_t BoardCreateEvent.Model.boardContentData.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for BoardCreateEvent.Model(0) + 32));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t BoardCreateEvent.Model.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for BoardCreateEvent.Model(0) + 36);
  uint64_t v4 = type metadata accessor for TimedData();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t BoardCreateEvent.Model.init(eventData:boardData:drawableAddSummaryData:inputDeviceData:boardContentData:timedData:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, char a6@<W5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v20 = type metadata accessor for EventData();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 32))(a9, a1, v20);
  uint64_t v21 = (int *)type metadata accessor for BoardCreateEvent.Model(0);
  uint64_t v22 = a9 + v21[5];
  *(void *)uint64_t v22 = a2;
  *(void *)(v22 + 8) = a3;
  *(unsigned char *)(v22 + 16) = a4;
  *(void *)(a9 + v21[6]) = a5;
  *(unsigned char *)(a9 + v21[7]) = a6;
  uint64_t v23 = (void *)(a9 + v21[8]);
  *uint64_t v23 = a7;
  v23[1] = a8;
  v23[2] = a10;
  v23[3] = a11;
  uint64_t v24 = a9 + v21[9];
  uint64_t v25 = type metadata accessor for TimedData();
  uint64_t v26 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 32);

  return v26(v24, a12, v25);
}

unint64_t sub_100BB7690(char a1)
{
  unint64_t result = 0x746144746E657665;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x7461446472616F62;
      break;
    case 2:
      unint64_t result = 0xD000000000000016;
      break;
    case 3:
      unint64_t result = 0x7665447475706E69;
      break;
    case 4:
      unint64_t result = 0xD000000000000010;
      break;
    case 5:
      unint64_t result = 0x74614464656D6974;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_100BB7770()
{
  return sub_100BB7690(*v0);
}

uint64_t sub_100BB7778(uint64_t a1)
{
  unint64_t v2 = sub_100BB7B1C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100BB77B4(uint64_t a1)
{
  unint64_t v2 = sub_100BB7B1C();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t BoardCreateEvent.Model.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_1005057FC(&qword_101695B00);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5, v7);
  uint64_t v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10050F848(a1, a1[3]);
  sub_100BB7B1C();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  LOBYTE(v20) = 0;
  type metadata accessor for EventData();
  sub_100633DC8(&qword_1016776F0, (void (*)(uint64_t))&type metadata accessor for EventData);
  KeyedEncodingContainer.encode<A>(_:forKey:)();
  if (!v2)
  {
    uint64_t v10 = (int *)type metadata accessor for BoardCreateEvent.Model(0);
    uint64_t v11 = (uint64_t *)(v3 + v10[5]);
    uint64_t v12 = *v11;
    uint64_t v13 = v11[1];
    LOBYTE(v11) = *((unsigned char *)v11 + 16);
    *(void *)&long long v20 = v12;
    *((void *)&v20 + 1) = v13;
    LOBYTE(v21) = (_BYTE)v11;
    char v23 = 1;
    sub_100BAFAA8();
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    *(void *)&long long v20 = *(void *)(v3 + v10[6]);
    char v23 = 2;
    sub_100BAF140();
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    LOBYTE(v20) = *(unsigned char *)(v3 + v10[7]);
    char v23 = 3;
    sub_100BB3A50();
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    uint64_t v14 = (long long *)(v3 + v10[8]);
    long long v15 = *v14;
    uint64_t v17 = *((void *)v14 + 2);
    uint64_t v16 = *((void *)v14 + 3);
    long long v20 = v15;
    uint64_t v21 = v17;
    uint64_t v22 = v16;
    char v23 = 4;
    sub_100BB3AA4();
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    LOBYTE(v20) = 5;
    type metadata accessor for TimedData();
    sub_100633DC8(&qword_1016776F8, (void (*)(uint64_t))&type metadata accessor for TimedData);
    KeyedEncodingContainer.encode<A>(_:forKey:)();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v5);
}

unint64_t sub_100BB7B1C()
{
  unint64_t result = qword_101695B08;
  if (!qword_101695B08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101695B08);
  }
  return result;
}

uint64_t BoardCreateEvent.Model.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v30 = a2;
  uint64_t v31 = type metadata accessor for TimedData();
  uint64_t v29 = *(void *)(v31 - 8);
  __chkstk_darwin(v31, v3);
  uint64_t v5 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for EventData();
  uint64_t v33 = *(void *)(v6 - 8);
  __chkstk_darwin(v6, v7);
  v34 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = sub_1005057FC(&qword_101695B10);
  uint64_t v32 = *(void *)(v35 - 8);
  __chkstk_darwin(v35, v9);
  uint64_t v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = (int *)type metadata accessor for BoardCreateEvent.Model(0);
  __chkstk_darwin(v12, v13);
  long long v15 = (char *)&v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10050F848(a1, a1[3]);
  sub_100BB7B1C();
  v36 = v11;
  uint64_t v16 = (uint64_t)v37;
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v16) {
    return _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)a1);
  }
  v28 = v5;
  v37 = a1;
  uint64_t v17 = v33;
  LOBYTE(v38) = 0;
  sub_100633DC8(&qword_101677708, (void (*)(uint64_t))&type metadata accessor for EventData);
  uint64_t v18 = v34;
  uint64_t v19 = v35;
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v15, v18, v6);
  char v41 = 1;
  sub_100BAFA50();
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  uint64_t v20 = *((void *)&v38 + 1);
  char v21 = v39;
  uint64_t v22 = &v15[v12[5]];
  *(void *)uint64_t v22 = v38;
  *((void *)v22 + 1) = v20;
  v22[16] = v21;
  char v41 = 2;
  sub_100BAF0E8();
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  *(void *)&v15[v12[6]] = v38;
  char v41 = 3;
  sub_100BB4118();
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  v15[v12[7]] = v38;
  char v41 = 4;
  sub_100BB416C();
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  uint64_t v23 = v39;
  uint64_t v24 = v40;
  uint64_t v25 = &v15[v12[8]];
  *(_OWORD *)uint64_t v25 = v38;
  *((void *)v25 + 2) = v23;
  *((void *)v25 + 3) = v24;
  LOBYTE(v38) = 5;
  sub_100633DC8(&qword_101677710, (void (*)(uint64_t))&type metadata accessor for TimedData);
  uint64_t v26 = v31;
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  (*(void (**)(char *, uint64_t))(v32 + 8))(v36, v19);
  (*(void (**)(char *, char *, uint64_t))(v29 + 32))(&v15[v12[9]], v28, v26);
  sub_100BB819C((uint64_t)v15, v30);
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v37);
  return sub_100BB8200((uint64_t)v15);
}

uint64_t sub_100BB819C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for BoardCreateEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100BB8200(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for BoardCreateEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100BB825C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return BoardCreateEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_100BB8274(void *a1)
{
  return BoardCreateEvent.Model.encode(to:)(a1);
}

uint64_t sub_100BB828C@<X0>(uint64_t a1@<X8>)
{
  return sub_100633FA8(&qword_10166FC28, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)static BoardCreateEvent.sessionGroup, a1);
}

uint64_t sub_100BB82C4@<X0>(uint64_t a1@<X8>)
{
  return sub_100633FA8(&qword_10166FC30, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)static BoardCreateEvent.timestampGranularity, a1);
}

uint64_t sub_100BB82FC@<X0>(uint64_t a1@<X8>)
{
  return sub_100633FA8(&qword_10166FC38, (uint64_t (*)(void))&type metadata accessor for TimeDurationGranularity, (uint64_t)static BoardCreateEvent.timeDurationGranularity, a1);
}

uint64_t sub_100BB8334@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = enum case for EventProperty.required<A>(_:);
  uint64_t v5 = sub_1005057FC(&qword_101670398);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104))(a2, v4, v5);
  uint64_t v6 = a2 + a1[5];
  uint64_t v7 = sub_1005057FC(&qword_101670410);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 104))(v6, v4, v7);
  uint64_t v8 = a2 + a1[6];
  uint64_t v9 = sub_1005057FC(&qword_101670418);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 104))(v8, v4, v9);
  uint64_t v10 = a2 + a1[7];
  uint64_t v11 = sub_1005057FC(&qword_101670420);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 104))(v10, v4, v11);
  uint64_t v12 = a2 + a1[8];
  uint64_t v13 = sub_1005057FC(&qword_101670428);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 104))(v12, v4, v13);
  uint64_t v14 = a2 + a1[9];
  uint64_t v15 = sub_1005057FC(&qword_1016703A8);
  uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 104);

  return v16(v14, v4, v15);
}

uint64_t getEnumTagSinglePayload for BoardCreateEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100BB8534);
}

uint64_t sub_100BB8534(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1005057FC(&qword_101670398);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_12:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_1005057FC(&qword_101670410);
  if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = a3[5];
LABEL_11:
    uint64_t v10 = a1 + v13;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_12;
  }
  uint64_t v14 = sub_1005057FC(&qword_101670418);
  if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a2)
  {
    uint64_t v8 = v14;
    uint64_t v12 = *(void *)(v14 - 8);
    uint64_t v13 = a3[6];
    goto LABEL_11;
  }
  uint64_t v15 = sub_1005057FC(&qword_101670420);
  if (*(_DWORD *)(*(void *)(v15 - 8) + 84) == a2)
  {
    uint64_t v8 = v15;
    uint64_t v12 = *(void *)(v15 - 8);
    uint64_t v13 = a3[7];
    goto LABEL_11;
  }
  uint64_t v16 = sub_1005057FC(&qword_101670428);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a2)
  {
    uint64_t v8 = v16;
    uint64_t v12 = *(void *)(v16 - 8);
    uint64_t v13 = a3[8];
    goto LABEL_11;
  }
  uint64_t v18 = sub_1005057FC(&qword_1016703A8);
  uint64_t v19 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 48);
  uint64_t v20 = v18;
  uint64_t v21 = a1 + a3[9];

  return v19(v21, a2, v20);
}

uint64_t storeEnumTagSinglePayload for BoardCreateEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100BB8790);
}

uint64_t sub_100BB8790(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8 = sub_1005057FC(&qword_101670398);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_12:
    return v11(v12, a2, a2, v10);
  }
  uint64_t v13 = sub_1005057FC(&qword_101670410);
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v15 = a4[5];
LABEL_11:
    uint64_t v12 = a1 + v15;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_12;
  }
  uint64_t v16 = sub_1005057FC(&qword_101670418);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a3)
  {
    uint64_t v10 = v16;
    uint64_t v14 = *(void *)(v16 - 8);
    uint64_t v15 = a4[6];
    goto LABEL_11;
  }
  uint64_t v17 = sub_1005057FC(&qword_101670420);
  if (*(_DWORD *)(*(void *)(v17 - 8) + 84) == a3)
  {
    uint64_t v10 = v17;
    uint64_t v14 = *(void *)(v17 - 8);
    uint64_t v15 = a4[7];
    goto LABEL_11;
  }
  uint64_t v18 = sub_1005057FC(&qword_101670428);
  if (*(_DWORD *)(*(void *)(v18 - 8) + 84) == a3)
  {
    uint64_t v10 = v18;
    uint64_t v14 = *(void *)(v18 - 8);
    uint64_t v15 = a4[8];
    goto LABEL_11;
  }
  uint64_t v20 = sub_1005057FC(&qword_1016703A8);
  uint64_t v21 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56);
  uint64_t v22 = v20;
  uint64_t v23 = a1 + a4[9];

  return v21(v23, a2, a2, v22);
}

void *initializeBufferWithCopyOfBuffer for BoardCreateEvent.Model(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v24 = *a2;
    *a1 = *a2;
    a1 = (void *)(v24 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for EventData();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = a3[6];
    uint64_t v10 = (char *)a1 + v8;
    uint64_t v11 = (char *)a2 + v8;
    uint64_t v12 = *((void *)v11 + 1);
    *(void *)uint64_t v10 = *(void *)v11;
    *((void *)v10 + 1) = v12;
    v10[16] = v11[16];
    *(void *)((char *)a1 + v9) = *(void *)((char *)a2 + v9);
    uint64_t v13 = a3[8];
    *((unsigned char *)a1 + a3[7]) = *((unsigned char *)a2 + a3[7]);
    uint64_t v14 = (void *)((char *)a1 + v13);
    uint64_t v15 = (void *)((char *)a2 + v13);
    uint64_t v16 = v15[1];
    *uint64_t v14 = *v15;
    v14[1] = v16;
    uint64_t v17 = v15[2];
    uint64_t v18 = v15[3];
    uint64_t v19 = a3[9];
    uint64_t v20 = (char *)a2 + v19;
    uint64_t v21 = (char *)a1 + v19;
    v14[2] = v17;
    v14[3] = v18;
    uint64_t v22 = type metadata accessor for TimedData();
    uint64_t v23 = *(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v23(v21, v20, v22);
  }
  return a1;
}

uint64_t destroy for BoardCreateEvent.Model(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for EventData();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v5 = a1 + *(int *)(a2 + 36);
  uint64_t v6 = type metadata accessor for TimedData();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);

  return v7(v5, v6);
}

uint64_t initializeWithCopy for BoardCreateEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for EventData();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  uint64_t v11 = *(void *)(v10 + 8);
  *(void *)uint64_t v9 = *(void *)v10;
  *(void *)(v9 + 8) = v11;
  *(unsigned char *)(v9 + 16) = *(unsigned char *)(v10 + 16);
  *(void *)(a1 + v8) = *(void *)(a2 + v8);
  uint64_t v12 = a3[8];
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (void *)(a2 + v12);
  uint64_t v15 = v14[1];
  *uint64_t v13 = *v14;
  v13[1] = v15;
  uint64_t v16 = v14[2];
  uint64_t v17 = v14[3];
  uint64_t v18 = a3[9];
  uint64_t v19 = a2 + v18;
  uint64_t v20 = a1 + v18;
  v13[2] = v16;
  v13[3] = v17;
  uint64_t v21 = type metadata accessor for TimedData();
  uint64_t v22 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v22(v20, v19, v21);
  return a1;
}

uint64_t assignWithCopy for BoardCreateEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for EventData();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(void *)uint64_t v8 = *(void *)(a2 + v7);
  *(void *)(v8 + 8) = *(void *)(a2 + v7 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v8 + 16) = *(unsigned char *)(v9 + 16);
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  uint64_t v10 = a3[8];
  uint64_t v11 = (void *)(a1 + v10);
  uint64_t v12 = a2 + v10;
  *uint64_t v11 = *(void *)(a2 + v10);
  v11[1] = *(void *)(a2 + v10 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v11[2] = *(void *)(v12 + 16);
  v11[3] = *(void *)(v12 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v13 = a3[9];
  uint64_t v14 = a1 + v13;
  uint64_t v15 = a2 + v13;
  uint64_t v16 = type metadata accessor for TimedData();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 24))(v14, v15, v16);
  return a1;
}

uint64_t assignWithTake for BoardCreateEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for EventData();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = *(void *)(a2 + v7 + 8);
  *(void *)uint64_t v8 = *(void *)(a2 + v7);
  *(void *)(v8 + 8) = v10;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v8 + 16) = *(unsigned char *)(v9 + 16);
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  swift_bridgeObjectRelease();
  uint64_t v11 = a3[8];
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = a2 + v11;
  uint64_t v14 = *(void *)(a2 + v11);
  uint64_t v15 = *(void *)(a2 + v11 + 8);
  *uint64_t v12 = v14;
  v12[1] = v15;
  swift_bridgeObjectRelease();
  uint64_t v16 = *(void *)(v13 + 24);
  v12[2] = *(void *)(v13 + 16);
  v12[3] = v16;
  swift_bridgeObjectRelease();
  uint64_t v17 = a3[9];
  uint64_t v18 = a1 + v17;
  uint64_t v19 = a2 + v17;
  uint64_t v20 = type metadata accessor for TimedData();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 40))(v18, v19, v20);
  return a1;
}

uint64_t getEnumTagSinglePayload for BoardCreateEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100BB9038);
}

uint64_t sub_100BB9038(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for EventData();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else if (a2 == 0x7FFFFFFF)
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
  else
  {
    uint64_t v11 = type metadata accessor for TimedData();
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a3 + 36);
    return v12(v14, a2, v13);
  }
}

uint64_t storeEnumTagSinglePayload for BoardCreateEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100BB917C);
}

uint64_t sub_100BB917C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for EventData();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else if (a3 == 0x7FFFFFFF)
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v11 = type metadata accessor for TimedData();
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a4 + 36);
    return v12(v14, a2, a2, v13);
  }
  return result;
}

uint64_t sub_100BB92AC()
{
  uint64_t result = type metadata accessor for EventData();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for TimedData();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for BoardCreateEvent.Model.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *uint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100BB946CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BoardCreateEvent.Model.CodingKeys()
{
  return &type metadata for BoardCreateEvent.Model.CodingKeys;
}

unint64_t sub_100BB94A8()
{
  unint64_t result = qword_101695C58;
  if (!qword_101695C58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101695C58);
  }
  return result;
}

unint64_t sub_100BB9500()
{
  unint64_t result = qword_101695C60;
  if (!qword_101695C60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101695C60);
  }
  return result;
}

unint64_t sub_100BB9558()
{
  unint64_t result = qword_101695C68;
  if (!qword_101695C68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101695C68);
  }
  return result;
}

uint64_t sub_100BB95AC()
{
  if (*v0) {
    return 0x6469576472616F62;
  }
  else {
    return 0x6965486472616F62;
  }
}

uint64_t sub_100BB95F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100BB98D8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_100BB961C(uint64_t a1)
{
  unint64_t v2 = sub_100BB9808();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100BB9658(uint64_t a1)
{
  unint64_t v2 = sub_100BB9808();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t BoardContentData.encode(to:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v13[0] = a4;
  v13[1] = a5;
  uint64_t v7 = sub_1005057FC(&qword_101695C70);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7, v9);
  uint64_t v11 = (char *)v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10050F848(a1, a1[3]);
  sub_100BB9808();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  char v15 = 0;
  KeyedEncodingContainer.encode(_:forKey:)();
  if (!v5)
  {
    char v14 = 1;
    KeyedEncodingContainer.encode(_:forKey:)();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v11, v7);
}

unint64_t sub_100BB9808()
{
  unint64_t result = qword_101695C78;
  if (!qword_101695C78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101695C78);
  }
  return result;
}

uint64_t BoardContentData.init(from:)(void *a1)
{
  uint64_t result = sub_100BB99F0(a1);
  if (v1) {
    return v3;
  }
  return result;
}

uint64_t sub_100BB9888@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_100BB99F0(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
    a2[2] = v6;
    a2[3] = v7;
  }
  return result;
}

uint64_t sub_100BB98B8(void *a1)
{
  return BoardContentData.encode(to:)(a1, *v1, v1[1], v1[2], v1[3]);
}

uint64_t sub_100BB98D8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6965486472616F62 && a2 == 0xEB00000000746867;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6469576472616F62 && a2 == 0xEA00000000006874)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_100BB99F0(void *a1)
{
  uint64_t v3 = sub_1005057FC(&qword_101695C98);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3, v5);
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = a1[4];
  sub_10050F848(a1, a1[3]);
  sub_100BB9808();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v1)
  {
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)a1);
  }
  else
  {
    char v12 = 0;
    uint64_t v8 = KeyedDecodingContainer.decode(_:forKey:)();
    char v11 = 1;
    swift_bridgeObjectRetain();
    KeyedDecodingContainer.decode(_:forKey:)();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
    swift_bridgeObjectRetain();
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v8;
}

ValueMetadata *type metadata accessor for BoardContentData()
{
  return &type metadata for BoardContentData;
}

unsigned char *storeEnumTagSinglePayload for BoardContentData.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100BB9CDCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BoardContentData.CodingKeys()
{
  return &type metadata for BoardContentData.CodingKeys;
}

unint64_t sub_100BB9D18()
{
  unint64_t result = qword_101695C80;
  if (!qword_101695C80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101695C80);
  }
  return result;
}

unint64_t sub_100BB9D70()
{
  unint64_t result = qword_101695C88;
  if (!qword_101695C88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101695C88);
  }
  return result;
}

unint64_t sub_100BB9DC8()
{
  unint64_t result = qword_101695C90;
  if (!qword_101695C90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101695C90);
  }
  return result;
}

Freeform::DrawableAddData __swiftcall DrawableAddData.init(drawableType:countOfDrawablesAdded:)(Freeform::DrawableType drawableType, Swift::Int32 countOfDrawablesAdded)
{
  return (Freeform::DrawableAddData)(drawableType | (*(void *)&countOfDrawablesAdded << 32));
}

unint64_t BoardCollectionData.totalSharedBoardCount.getter(unint64_t a1)
{
  return HIDWORD(a1);
}

uint64_t BoardCollectionData.totalSharedBoardCount.setter(uint64_t result)
{
  *(_DWORD *)(v1 + 4) = result;
  return result;
}

Freeform::SyncEvent::FetchedRecordZoneChanges::Deletion (__swiftcall *BoardCollectionData.totalSharedBoardCount.modify())(CKRecordID recordID, Swift::String recordType)
{
  return SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:);
}

uint64_t sub_100BB9E58()
{
  if (*v0) {
    return 0xD000000000000015;
  }
  else {
    return 0x656C626177617264;
  }
}

uint64_t sub_100BB9EA0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100BBA1D0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_100BB9EC8(uint64_t a1)
{
  unint64_t v2 = sub_100BBA0B4();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100BB9F04(uint64_t a1)
{
  unint64_t v2 = sub_100BBA0B4();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t DrawableAddData.encode(to:)(void *a1, char a2)
{
  uint64_t v5 = sub_1005057FC(&qword_101695CA0);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5, v7);
  uint64_t v9 = &v11[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10050F848(a1, a1[3]);
  sub_100BBA0B4();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  v11[15] = a2;
  v11[14] = 0;
  sub_100BBA108();
  KeyedEncodingContainer.encode<A>(_:forKey:)();
  if (!v2)
  {
    v11[13] = 1;
    KeyedEncodingContainer.encode(_:forKey:)();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v9, v5);
}

unint64_t sub_100BBA0B4()
{
  unint64_t result = qword_101695CA8;
  if (!qword_101695CA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101695CA8);
  }
  return result;
}

unint64_t sub_100BBA108()
{
  unint64_t result = qword_101695CB0;
  if (!qword_101695CB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101695CB0);
  }
  return result;
}

unint64_t DrawableAddData.init(from:)(void *a1)
{
  return sub_100BBA2D8(a1) & 0xFFFFFFFF000000FFLL;
}

uint64_t sub_100BBA178@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = sub_100BBA2D8(a1);
  if (!v2)
  {
    *(unsigned char *)a2 = result;
    *(_DWORD *)(a2 + 4) = HIDWORD(result);
  }
  return result;
}

uint64_t sub_100BBA1AC(void *a1)
{
  return DrawableAddData.encode(to:)(a1, *v1);
}

uint64_t sub_100BBA1D0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x656C626177617264 && a2 == 0xEC00000065707954;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x8000000101278520)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_100BBA2D8(void *a1)
{
  uint64_t v3 = sub_1005057FC(&qword_101695CD0);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3, v5);
  uint64_t v7 = &v11[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10050F848(a1, a1[3]);
  sub_100BBA0B4();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v1) {
    return _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)a1);
  }
  v11[14] = 0;
  sub_100BBA738();
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  uint64_t v8 = v11[15];
  v11[13] = 1;
  uint64_t v9 = KeyedDecodingContainer.decode(_:forKey:)();
  (*(void (**)(unsigned char *, uint64_t))(v4 + 8))(v7, v3);
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)a1);
  return v8 | (v9 << 32);
}

uint64_t getEnumTagSinglePayload for DrawableAddData(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFB && a1[8]) {
    return (*(_DWORD *)a1 + 251);
  }
  unsigned int v3 = *a1;
  BOOL v4 = v3 >= 6;
  int v5 = v3 - 6;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for DrawableAddData(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFA)
  {
    *(void *)uint64_t result = a2 - 251;
    if (a3 >= 0xFB) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFB) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2) {
      *(unsigned char *)uint64_t result = a2 + 5;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DrawableAddData()
{
  return &type metadata for DrawableAddData;
}

unsigned char *storeEnumTagSinglePayload for DrawableAddData.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100BBA5F8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DrawableAddData.CodingKeys()
{
  return &type metadata for DrawableAddData.CodingKeys;
}

unint64_t sub_100BBA634()
{
  unint64_t result = qword_101695CB8;
  if (!qword_101695CB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101695CB8);
  }
  return result;
}

unint64_t sub_100BBA68C()
{
  unint64_t result = qword_101695CC0;
  if (!qword_101695CC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101695CC0);
  }
  return result;
}

unint64_t sub_100BBA6E4()
{
  unint64_t result = qword_101695CC8;
  if (!qword_101695CC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101695CC8);
  }
  return result;
}

unint64_t sub_100BBA738()
{
  unint64_t result = qword_101695CD8;
  if (!qword_101695CD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101695CD8);
  }
  return result;
}

Swift::Int sub_100BBA78C()
{
  return Hasher._finalize()();
}

Swift::Int sub_100BBA890()
{
  return Hasher._finalize()();
}

Swift::Int sub_100BBA9A4()
{
  return Hasher._finalize()();
}

Swift::Int sub_100BBAAA0()
{
  return Hasher._finalize()();
}

uint64_t DrawableType.rawValue.getter(char a1)
{
  uint64_t result = 1954047348;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x6570616873;
      break;
    case 2:
      uint64_t result = 0x616964656DLL;
      break;
    case 3:
      uint64_t result = 0x746E656D75636F64;
      break;
    case 4:
      uint64_t result = 0x746E656D6D6F63;
      break;
    case 5:
      uint64_t result = 0x6E776F6E6B6E75;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_100BBAC78(unsigned __int8 *a1, char *a2)
{
  return sub_10094F8F8(*a1, *a2);
}

Swift::Int sub_100BBAC84()
{
  return sub_100BBA78C();
}

uint64_t sub_100BBAC8C()
{
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_100BBAD78()
{
  return sub_100950A44();
}

unint64_t sub_100BBAD80@<X0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = _s8Freeform12DrawableTypeO8rawValueACSgSS_tcfC_0(*a1);
  *a2 = result;
  return result;
}

void sub_100BBADB0(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xE400000000000000;
  uint64_t v3 = 1954047348;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE500000000000000;
      uint64_t v3 = 0x6570616873;
      goto LABEL_3;
    case 2:
      *a1 = 0x616964656DLL;
      a1[1] = 0xE500000000000000;
      break;
    case 3:
      *a1 = 0x746E656D75636F64;
      a1[1] = 0xE800000000000000;
      break;
    case 4:
      *a1 = 0x746E656D6D6F63;
      a1[1] = 0xE700000000000000;
      break;
    case 5:
      *a1 = 0x6E776F6E6B6E75;
      a1[1] = 0xE700000000000000;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

uint64_t sub_100BBAE7C()
{
  return RawRepresentable<>.init(from:)();
}

uint64_t sub_100BBAEDC()
{
  return RawRepresentable<>.encode(to:)();
}

unint64_t _s8Freeform12DrawableTypeO8rawValueACSgSS_tcfC_0(Swift::String string)
{
  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  unint64_t v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_101504B60, v2);
  swift_bridgeObjectRelease();
  if (v3 >= 6) {
    return 6;
  }
  else {
    return v3;
  }
}

unint64_t sub_100BBAF7C()
{
  unint64_t result = qword_101695CE0;
  if (!qword_101695CE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101695CE0);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for DrawableType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *unint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100BBB09CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DrawableType()
{
  return &type metadata for DrawableType;
}

unint64_t sub_100BBB0D4()
{
  unint64_t result = qword_101695CE8;
  if (!qword_101695CE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101695CE8);
  }
  return result;
}

uint64_t sub_100BBB128()
{
  id v0 = [self mainBundle];
  NSString v1 = String._bridgeToObjectiveC()();
  NSString v2 = String._bridgeToObjectiveC()();
  id v3 = [v0 localizedStringForKey:v1 value:v2 table:0];

  uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  return v4;
}

uint64_t sub_100BBB210()
{
  return UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
}

uint64_t sub_100BBB2C0()
{
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    NSString v1 = (void *)result;
    NSString v2 = (char *)objc_retain(*(id *)(result
                                   + OBJC_IVAR____TtC8Freeform31CRLiOSMiniFormatterMediaBuilder_mediaDataProvider));

    id v3 = *(void **)&v2[OBJC_IVAR____TtC8Freeform28CRLMiniFormatterDataProvider_editorController];
    if (sub_10050BF48(0, &qword_101678BB8)) {
      uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    }
    else {
      uint64_t ObjCClassFromMetadata = 0;
    }
    id v5 = [v3 mostSpecificCurrentEditorOfClass:ObjCClassFromMetadata];
    self;
    unsigned int v6 = (void *)swift_dynamicCastObjCClass();
    if (v6) {
      [v6 resetSelectionToNaturalDataSize:v2];
    }

    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_100BBB3B8()
{
  return UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
}

void sub_100BBB468()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    NSString v1 = (void *)Strong;
    NSString v2 = *(id *)(Strong + OBJC_IVAR____TtC8Freeform31CRLiOSMiniFormatterMediaBuilder_mediaDataProvider);

    (*(void (**)(void))((swift_isaMask & *v2) + 0xD8))();
  }
}

void sub_100BBB508()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    NSString v1 = (void *)Strong;
    id v2 = *(id *)(Strong + OBJC_IVAR____TtC8Freeform31CRLiOSMiniFormatterMediaBuilder_mediaDataProvider);

    sub_100670F20();
  }
}

double *sub_100BBB578()
{
  if (sub_100670E4C())
  {
    id v0 = [self mainBundle];
    NSString v1 = String._bridgeToObjectiveC()();
    NSString v2 = String._bridgeToObjectiveC()();
    id v3 = [v0 localizedStringForKey:v1 value:v2 table:0];

    uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v6 = v5;

    sub_10050BF48(0, (unint64_t *)&qword_101672600);
    uint64_t v7 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v23 = v7;
    uint64_t v8 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
    id v9 = [self labelColor];
    uint64_t v10 = sub_10051F614(v4, v6, 0, (uint64_t)v9, 0, 1, v8, 0);
    swift_bridgeObjectRelease();

    [v10 setTranslatesAutoresizingMaskIntoConstraints:0];
    sub_1005057FC((uint64_t *)&unk_101676C10);
    uint64_t v11 = swift_allocObject();
    *(_OWORD *)(v11 + 16) = xmmword_101177E70;
    *(void *)(v11 + 32) = v10;
    specialized Array._endMutation()();
    uint64_t v12 = qword_10166EB50;
    id v13 = v10;
    if (v12 != -1) {
      swift_once();
    }
    double v14 = *(double *)&qword_101719DD0;
    id v15 = objc_allocWithZone((Class)UIStackView);
    sub_10050BF48(0, (unint64_t *)&qword_1016725F0);
    swift_bridgeObjectRetain();
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    id v17 = [v15 initWithArrangedSubviews:isa];

    [v17 setAxis:0];
    [v17 setAlignment:0];
    [v17 setDistribution:0];
    [v17 setSpacing:v14];
    if (qword_10166EB60 != -1) {
      swift_once();
    }
    double v18 = *(double *)&qword_101719DE0;
    id v19 = [v17 heightAnchor];
    id v20 = [v19 constraintGreaterThanOrEqualToConstant:v18];

    [v20 setActive:1];
    swift_bridgeObjectRelease();

    id v21 = v17;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
  }
  return _swiftEmptyArrayStorage;
}

id sub_100BBB9A4()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLiOSMiniFormatterImageAndMovieBuilder();
  [super dealloc];
}

uint64_t type metadata accessor for CRLiOSMiniFormatterImageAndMovieBuilder()
{
  return self;
}

uint64_t sub_100BBB9FC()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_100BBBA34()
{
}

void sub_100BBBA3C()
{
}

uint64_t sub_100BBBA44()
{
  return sub_100BBB2C0();
}

void sub_100BBBAF8()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1005057FC((uint64_t *)&unk_101674520);
  __chkstk_darwin(v2 - 8, v3);
  uint64_t v5 = (char *)&v53 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6, v8);
  uint64_t v10 = (char *)&v53 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = (uint64_t *)(v0 + OBJC_IVAR____TtC8Freeform32CRLCollaboratorCursorCoordinator__selectionCursorMap);
  swift_beginAccess();
  uint64_t v12 = *v11;
  id v13 = (void *)(*v11 + 64);
  uint64_t v14 = 1 << *(unsigned char *)(*v11 + 32);
  uint64_t v15 = -1;
  if (v14 < 64) {
    uint64_t v15 = ~(-1 << v14);
  }
  unint64_t v16 = v15 & *v13;
  id v17 = (uint64_t *)(v1 + OBJC_IVAR____TtC8Freeform32CRLCollaboratorCursorCoordinator__collaboratorsToCursorsMap);
  uint64_t v62 = OBJC_IVAR____TtC8Freeform32CRLCollaboratorCursorCoordinator_shouldShowCollaboratorCursors;
  uint64_t v54 = OBJC_IVAR____TtC8Freeform32CRLCollaboratorCursorCoordinator_selectionPathValidator;
  uint64_t v57 = OBJC_IVAR____TtC8Freeform32CRLCollaboratorCursorCoordinator__collaboratorCursorRenderers;
  swift_bridgeObjectRetain();
  v68 = v17;
  swift_beginAccess();
  int64_t v18 = 0;
  unint64_t v19 = v14 + 63;
  id v20 = v13;
  int64_t v21 = v19 >> 6;
  uint64_t v70 = v7 + 56;
  uint64_t v71 = v7 + 16;
  uint64_t v69 = v7 + 48;
  v67 = (void (**)(char *, char *, uint64_t))(v7 + 32);
  v65 = (void (**)(char *, uint64_t))(v7 + 8);
  v55 = v5;
  uint64_t v61 = v6;
  v60 = v10;
  uint64_t v59 = v12;
  uint64_t v56 = v1;
  v58 = v20;
  unint64_t v66 = v19 >> 6;
  while (v16)
  {
    unint64_t v22 = __clz(__rbit64(v16));
    v16 &= v16 - 1;
    unint64_t v23 = v22 | (v18 << 6);
LABEL_21:
    uint64_t v27 = *(void *)(*(void *)(v12 + 56) + 8 * v23);
    uint64_t v28 = *(void *)(v27 + 16);
    if (v28)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v7 + 16))(v5, v27+ ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(void *)(v7 + 72) * (v28 - 1), v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v5, 0, 1, v6);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
      {
        sub_100510824((uint64_t)v5);
      }
      else
      {
        (*v67)(v10, v5, v6);
        uint64_t v29 = *v68;
        if (!*(void *)(*v68 + 16)) {
          goto LABEL_45;
        }
        swift_bridgeObjectRetain();
        unint64_t v30 = sub_100955FC8((uint64_t)v10);
        if ((v31 & 1) == 0)
        {
          swift_bridgeObjectRelease();
          goto LABEL_45;
        }
        uint64_t v32 = *(void *)(v29 + 56) + 24 * v30;
        uint64_t v33 = *(void **)(v32 + 8);
        v34 = *(void **)(v32 + 16);
        id v72 = *(id *)v32;
        id v35 = v33;
        id v36 = v34;
        swift_bridgeObjectRelease();
        char v37 = *(unsigned char *)(v1 + v62);
        id v63 = v36;
        id v64 = v35;
        if ((v37 & 1) == 0)
        {
          id v45 = v36;
          id v44 = 0;
          goto LABEL_33;
        }
        uint64_t v38 = *(void *)(v1 + v54);
        uint64_t Strong = swift_unknownObjectWeakLoadStrong();
        if (Strong)
        {
          uint64_t v40 = (void *)Strong;
          swift_beginAccess();
          swift_bridgeObjectRetain();
          Class isa = Array._bridgeToObjectiveC()().super.isa;
          swift_bridgeObjectRelease();
          id v42 = [v40 resolveToSiblingsWithUuids:isa];

          type metadata accessor for CRLBoardItem(0);
          sub_100BBF5F8((unint64_t *)&qword_101676C20, (void (*)(uint64_t))type metadata accessor for CRLBoardItem);
          uint64_t v43 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

          id v44 = (id)sub_10060A798(v43, (uint64_t)v35);
          swift_bridgeObjectRelease();
        }
        else
        {
          sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"selectionPathFrom(persistableSelectionPath:)", 44, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLSelectionPathValidator.swift", 92, 2, 29, (uint64_t)"Can't get selectionPath with a nil board", 40, 2u, (uint64_t)_swiftEmptyArrayStorage);
          sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"selectionPathFrom(persistableSelectionPath:)", 44, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLSelectionPathValidator.swift", 92, 2, 29);
          id v46 = *(id *)(v38 + OBJC_IVAR____TtC8Freeform25CRLSelectionPathValidator_selectionModelTranslator);
          Class v47 = Set._bridgeToObjectiveC()().super.isa;
          id v44 = [v46 selectionPathForInfos:v47];
        }
        if (*(unsigned char *)(v1 + v62))
        {
          id v45 = 0;
LABEL_33:
          id v48 = [*(id *)(v1 + v57) allObjects];
          sub_1005057FC((uint64_t *)&unk_101695DF0);
          unint64_t v49 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

          if (v49 >> 62)
          {
            swift_bridgeObjectRetain();
            uint64_t v50 = _CocoaArrayWrapper.endIndex.getter();
            swift_bridgeObjectRelease();
            if (v50)
            {
LABEL_35:
              if (v50 < 1) {
                goto LABEL_49;
              }
              for (uint64_t i = 0; i != v50; ++i)
              {
                if ((v49 & 0xC000000000000001) != 0)
                {
                  v52 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
                }
                else
                {
                  v52 = *(void **)(v49 + 8 * i + 32);
                  swift_unknownObjectRetain();
                }
                [v52 collaboratorCursorSelectionPathChangedFromSelectionPath:v45 toSelectionPath:v44 collaboratorPresence:v72];
                swift_unknownObjectRelease();
              }
            }
          }
          else
          {
            uint64_t v50 = *(void *)((v49 & 0xFFFFFFFFFFFFFF8) + 0x10);
            if (v50) {
              goto LABEL_35;
            }
          }

          swift_bridgeObjectRelease();
          uint64_t v1 = v56;
          uint64_t v5 = v55;
          goto LABEL_44;
        }
        sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"updateAllRenderersForSelectionPathChange(from:to:collaboratorPresence:)", 71, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCanvas/CRLCollaboratorCursorCoordinator.swift", 102, 2, 109, (uint64_t)"Setting a non-nil collaborator cursor selection path on a renderer when shouldShowCollaboratorCursors is false.", 111, 2u, (uint64_t)_swiftEmptyArrayStorage);
        sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"updateAllRenderersForSelectionPathChange(from:to:collaboratorPresence:)", 71, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCanvas/CRLCollaboratorCursorCoordinator.swift", 102, 2, 109);
        id v45 = v44;
LABEL_44:
        uint64_t v6 = v61;
        uint64_t v10 = v60;
        uint64_t v12 = v59;
        id v20 = v58;

LABEL_45:
        (*v65)(v10, v6);
        int64_t v21 = v66;
      }
    }
  }
  int64_t v24 = v18 + 1;
  if (__OFADD__(v18, 1))
  {
    __break(1u);
    goto LABEL_48;
  }
  if (v24 >= v21) {
    goto LABEL_46;
  }
  unint64_t v25 = v20[v24];
  ++v18;
  if (v25) {
    goto LABEL_20;
  }
  int64_t v18 = v24 + 1;
  if (v24 + 1 >= v21) {
    goto LABEL_46;
  }
  unint64_t v25 = v20[v18];
  if (v25) {
    goto LABEL_20;
  }
  int64_t v18 = v24 + 2;
  if (v24 + 2 >= v21) {
    goto LABEL_46;
  }
  unint64_t v25 = v20[v18];
  if (v25)
  {
LABEL_20:
    unint64_t v16 = (v25 - 1) & v25;
    unint64_t v23 = __clz(__rbit64(v25)) + (v18 << 6);
    goto LABEL_21;
  }
  int64_t v26 = v24 + 3;
  if (v26 >= v21)
  {
LABEL_46:
    swift_release();
    return;
  }
  unint64_t v25 = v20[v26];
  if (v25)
  {
    int64_t v18 = v26;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v18 = v26 + 1;
    if (__OFADD__(v26, 1)) {
      break;
    }
    if (v18 >= v21) {
      goto LABEL_46;
    }
    unint64_t v25 = v20[v18];
    ++v26;
    if (v25) {
      goto LABEL_20;
    }
  }
LABEL_48:
  __break(1u);
LABEL_49:
  __break(1u);
}

uint64_t sub_100BBC334(void *a1)
{
  uint64_t v3 = sub_1005057FC((uint64_t *)&unk_101674520);
  __chkstk_darwin(v3 - 8, v4);
  uint64_t v6 = (char *)&v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for UUID();
  uint64_t v8 = *(void *)(v7 - 8);
  *(void *)&double v10 = __chkstk_darwin(v7, v9).n128_u64[0];
  uint64_t v51 = (uint64_t)&v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  [*(id *)(v1 + OBJC_IVAR____TtC8Freeform32CRLCollaboratorCursorCoordinator__collaboratorCursorRenderers) addObject:a1];
  id v43 = a1;
  [a1 setCollaboratorCursorDelegate:v1];
  uint64_t v12 = (uint64_t *)(v1 + OBJC_IVAR____TtC8Freeform32CRLCollaboratorCursorCoordinator__selectionCursorMap);
  swift_beginAccess();
  uint64_t v13 = *v12;
  uint64_t v14 = *(void *)(*v12 + 64);
  uint64_t v50 = *v12 + 64;
  uint64_t v15 = 1 << *(unsigned char *)(v13 + 32);
  uint64_t v16 = -1;
  if (v15 < 64) {
    uint64_t v16 = ~(-1 << v15);
  }
  unint64_t v17 = v16 & v14;
  int64_t v18 = (uint64_t *)(v1 + OBJC_IVAR____TtC8Freeform32CRLCollaboratorCursorCoordinator__collaboratorsToCursorsMap);
  uint64_t v52 = v13;
  swift_bridgeObjectRetain();
  unint64_t v49 = v18;
  uint64_t result = swift_beginAccess();
  int64_t v20 = 0;
  int64_t v21 = (unint64_t)(v15 + 63) >> 6;
  uint64_t v22 = v8 + 16;
  uint64_t v23 = v8 + 56;
  Class v47 = (uint64_t (**)(uint64_t, uint64_t))(v8 + 8);
  id v48 = (void (**)(uint64_t, char *, uint64_t))(v8 + 32);
  int64_t v42 = v21;
  while (v17)
  {
    unint64_t v24 = __clz(__rbit64(v17));
    v17 &= v17 - 1;
    unint64_t v25 = v24 | (v20 << 6);
LABEL_22:
    uint64_t v29 = *(void *)(*(void *)(v52 + 56) + 8 * v25);
    uint64_t v30 = *(void *)(v29 + 16);
    if (v30)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v8 + 16))(v6, v29+ ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))+ *(void *)(v8 + 72) * (v30 - 1), v7);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v6, 0, 1, v7);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
      {
        uint64_t result = sub_100510824((uint64_t)v6);
      }
      else
      {
        uint64_t v31 = v23;
        uint64_t v32 = v22;
        (*v48)(v51, v6, v7);
        uint64_t v33 = *v49;
        if (*(void *)(*v49 + 16))
        {
          swift_bridgeObjectRetain();
          unint64_t v34 = sub_100955FC8(v51);
          if (v35)
          {
            uint64_t v36 = *(void *)(v33 + 56) + 24 * v34;
            char v37 = *(void **)v36;
            uint64_t v38 = *(void **)(v36 + 8);
            id v44 = *(id *)(v36 + 16);
            id v45 = v37;
            id v46 = v38;
            id v39 = v44;
            swift_bridgeObjectRelease();
            uint64_t v40 = v45;
            [v43 collaboratorCursorSelectionPathChangedFromSelectionPath:0 toSelectionPath:v39 collaboratorPresence:v45];

            int64_t v21 = v42;
          }
          else
          {
            swift_bridgeObjectRelease();
          }
        }
        uint64_t result = (*v47)(v51, v7);
        uint64_t v22 = v32;
        uint64_t v23 = v31;
      }
    }
  }
  int64_t v26 = v20 + 1;
  if (__OFADD__(v20, 1))
  {
    __break(1u);
    goto LABEL_30;
  }
  if (v26 >= v21) {
    return swift_release();
  }
  unint64_t v27 = *(void *)(v50 + 8 * v26);
  ++v20;
  if (v27) {
    goto LABEL_21;
  }
  int64_t v20 = v26 + 1;
  if (v26 + 1 >= v21) {
    return swift_release();
  }
  unint64_t v27 = *(void *)(v50 + 8 * v20);
  if (v27) {
    goto LABEL_21;
  }
  int64_t v20 = v26 + 2;
  if (v26 + 2 >= v21) {
    return swift_release();
  }
  unint64_t v27 = *(void *)(v50 + 8 * v20);
  if (v27)
  {
LABEL_21:
    unint64_t v17 = (v27 - 1) & v27;
    unint64_t v25 = __clz(__rbit64(v27)) + (v20 << 6);
    goto LABEL_22;
  }
  int64_t v28 = v26 + 3;
  if (v28 >= v21) {
    return swift_release();
  }
  unint64_t v27 = *(void *)(v50 + 8 * v28);
  if (v27)
  {
    int64_t v20 = v28;
    goto LABEL_21;
  }
  while (1)
  {
    int64_t v20 = v28 + 1;
    if (__OFADD__(v28, 1)) {
      break;
    }
    if (v20 >= v21) {
      return swift_release();
    }
    unint64_t v27 = *(void *)(v50 + 8 * v20);
    ++v28;
    if (v27) {
      goto LABEL_21;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void sub_100BBC814(void *a1, void *a2)
{
  uint64_t v5 = (uint64_t)a2 + OBJC_IVAR____TtC8Freeform23CRLCollaboratorPresence_presenceUUID;
  uint64_t v6 = (uint64_t *)(v2 + OBJC_IVAR____TtC8Freeform32CRLCollaboratorCursorCoordinator__collaboratorsToCursorsMap);
  swift_beginAccess();
  uint64_t v7 = *v6;
  swift_bridgeObjectRetain();
  id v8 = sub_100950C1C(v5, v7);
  double v10 = v9;
  uint64_t v12 = v11;
  swift_bridgeObjectRelease();
  uint64_t v13 = 0;
  if ((unint64_t)v8 >= 2)
  {

    uint64_t v13 = v12;
  }
  if (a1)
  {
    id v14 = a1;
    id v15 = sub_10060A4AC((uint64_t)v14);
    swift_beginAccess();
    id v16 = v14;
    id v17 = a2;
    id v18 = v15;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v26 = *v6;
    *uint64_t v6 = 0x8000000000000000;
    sub_100973734((uint64_t)v17, (uint64_t)v16, (uint64_t)v18, v5, isUniquelyReferenced_nonNull_native);
    *uint64_t v6 = v26;
    swift_bridgeObjectRelease();
    swift_endAccess();
    id v20 = v18;
    sub_100BBDB94(v13, v18, (uint64_t)v17);
  }
  else
  {
    swift_beginAccess();
    int64_t v21 = (void *)sub_10095B948(v5);
    uint64_t v23 = v22;
    unint64_t v25 = v24;
    swift_endAccess();
    sub_10057ADF4(v21, v23, v25);
    sub_100BBDB94(v13, 0, (uint64_t)a2);
  }
}

void sub_100BBCA78(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1005057FC((uint64_t *)&unk_101674520);
  __chkstk_darwin(v4 - 8, v5);
  uint64_t v7 = (char *)&v53 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for UUID();
  uint64_t v60 = *(void *)(v8 - 8);
  __chkstk_darwin(v8, v9);
  uint64_t v11 = (char *)&v53 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = (uint64_t *)(v1 + OBJC_IVAR____TtC8Freeform32CRLCollaboratorCursorCoordinator__collaboratorsToCursorsMap);
  swift_beginAccess();
  uint64_t v13 = *v12;
  swift_bridgeObjectRetain();
  id v14 = sub_100950C1C(a1, v13);
  id v16 = v15;
  id v18 = v17;
  swift_bridgeObjectRelease();
  if (!v14) {
    id v18 = 0;
  }
  if ((unint64_t)v14 >= 2)
  {

    if (!v18)
    {

      return;
    }
    unint64_t v19 = (uint64_t *)(v2 + OBJC_IVAR____TtC8Freeform32CRLCollaboratorCursorCoordinator__selectionCursorMap);
    swift_beginAccess();
    uint64_t v20 = *v19;
    uint64_t v21 = *(void *)(v20 + 16);
    uint64_t v59 = (uint64_t)v18;
    id v22 = v18;
    uint64_t v23 = v22;
    if (v21)
    {
      uint64_t v58 = a1;
      id v24 = v22;
      id v25 = v14;
      swift_bridgeObjectRetain();
      unint64_t v26 = sub_10095642C((uint64_t)v24);
      if (v27)
      {
        id v56 = v25;
        uint64_t v28 = *(void *)(*(void *)(v20 + 56) + 8 * v26);
        swift_bridgeObjectRetain();
        v55 = v24;

        swift_bridgeObjectRelease();
        uint64_t v29 = *(void *)(v28 + 16);
        if (v29)
        {
          uint64_t v30 = v60;
          (*(void (**)(char *, unint64_t, uint64_t))(v60 + 16))(v7, v28+ ((*(unsigned __int8 *)(v60 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v60 + 80))+ *(void *)(v60 + 72) * (v29 - 1), v8);
          uint64_t v31 = 0;
        }
        else
        {
          uint64_t v31 = 1;
          uint64_t v30 = v60;
        }
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v30 + 56))(v7, v31, 1, v8);
        swift_bridgeObjectRelease();
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(v7, 1, v8) != 1)
        {
          (*(void (**)(char *, char *, uint64_t))(v30 + 32))(v11, v7, v8);
          sub_100BBF5F8((unint64_t *)&qword_10167BDC0, (void (*)(uint64_t))&type metadata accessor for UUID);
          if (dispatch thunk of static Equatable.== infix(_:_:)())
          {
            (*(void (**)(char *, uint64_t))(v30 + 8))(v11, v8);
            uint64_t v33 = v55;

            id v34 = v56;
            return;
          }
          uint64_t v35 = OBJC_IVAR____TtC8Freeform32CRLCollaboratorCursorCoordinator_shouldShowCollaboratorCursors;
          id v36 = v56;
          if (*(unsigned char *)(v2 + OBJC_IVAR____TtC8Freeform32CRLCollaboratorCursorCoordinator_shouldShowCollaboratorCursors) != 1) {
            goto LABEL_31;
          }
          uint64_t v37 = *v12;
          swift_bridgeObjectRetain();
          id v38 = sub_100950C1C((uint64_t)v11, v37);
          uint64_t v40 = v39;
          int64_t v42 = v41;
          swift_bridgeObjectRelease();
          id v57 = v38;
          if (!v38) {
            goto LABEL_31;
          }
          id v53 = v40;
          uint64_t v54 = v35;
          id v43 = *(void **)(v2 + OBJC_IVAR____TtC8Freeform32CRLCollaboratorCursorCoordinator__collaboratorCursorRenderers);
          id v44 = v55;
          id v45 = [v43 allObjects];
          sub_1005057FC((uint64_t *)&unk_101695DF0);
          unint64_t v46 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

          Class v47 = v42;
          if (v46 >> 62)
          {
            swift_bridgeObjectRetain();
            uint64_t v48 = _CocoaArrayWrapper.endIndex.getter();
            swift_bridgeObjectRelease();
            if (v48) {
              goto LABEL_23;
            }
          }
          else
          {
            uint64_t v48 = *(void *)((v46 & 0xFFFFFFFFFFFFFF8) + 0x10);
            if (v48)
            {
LABEL_23:
              if (v48 < 1)
              {
                __break(1u);
                return;
              }
              for (uint64_t i = 0; i != v48; ++i)
              {
                if ((v46 & 0xC000000000000001) != 0)
                {
                  uint64_t v50 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
                }
                else
                {
                  uint64_t v50 = *(void **)(v46 + 8 * i + 32);
                  swift_unknownObjectRetain();
                }
                [v50 collaboratorCursorSelectionPathChangedFromSelectionPath:v44 toSelectionPath:0 collaboratorPresence:v57];
                swift_unknownObjectRelease();
              }
            }
          }

          swift_bridgeObjectRelease();
          id v36 = v56;
          uint64_t v35 = v54;
LABEL_31:
          uint64_t v51 = v55;
          sub_100BBD550(v55, v58, 1);
          if (*(unsigned char *)(v2 + v35) == 1)
          {
            id v52 = v51;
            sub_100BBD33C(0, v59, (uint64_t)v36);

            (*(void (**)(char *, uint64_t))(v60 + 8))(v11, v8);
          }
          else
          {
            (*(void (**)(char *, uint64_t))(v60 + 8))(v11, v8);
          }
          return;
        }
LABEL_13:

        sub_100510824((uint64_t)v7);
        return;
      }

      swift_bridgeObjectRelease();
    }
    else
    {
      id v32 = v14;
    }
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v60 + 56))(v7, 1, 1, v8);
    goto LABEL_13;
  }
}

void sub_100BBD120(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = (uint64_t *)(v1 + OBJC_IVAR____TtC8Freeform32CRLCollaboratorCursorCoordinator__collaboratorsToCursorsMap);
  swift_beginAccess();
  uint64_t v5 = *v4;
  if (*(void *)(*v4 + 16))
  {
    uint64_t v6 = (uint64_t)a1 + OBJC_IVAR____TtC8Freeform23CRLCollaboratorPresence_presenceUUID;
    swift_bridgeObjectRetain();
    unint64_t v7 = sub_100955FC8(v6);
    if (v8)
    {
      uint64_t v9 = *(void *)(v5 + 56) + 24 * v7;
      uint64_t v10 = *(void **)(v9 + 16);
      id v11 = *(id *)(v9 + 8);
      id v12 = v10;
      swift_bridgeObjectRelease();
      id v13 = sub_10060A4AC((uint64_t)v11);
      swift_beginAccess();
      id v14 = v11;
      id v15 = a1;
      id v16 = v13;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v20 = *v4;
      *uint64_t v4 = 0x8000000000000000;
      sub_100973734((uint64_t)v15, (uint64_t)v14, (uint64_t)v16, v6, isUniquelyReferenced_nonNull_native);
      *uint64_t v4 = v20;
      swift_bridgeObjectRelease();
      swift_endAccess();
      if (*(unsigned char *)(v2 + OBJC_IVAR____TtC8Freeform32CRLCollaboratorCursorCoordinator_shouldShowCollaboratorCursors) == 1)
      {
        id v18 = v12;
        id v19 = v16;
        sub_100BBDB94(v12, v16, (uint64_t)v15);
      }
      else
      {
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }
}

void sub_100BBD33C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2
    && (*(unsigned char *)(v3 + OBJC_IVAR____TtC8Freeform32CRLCollaboratorCursorCoordinator_shouldShowCollaboratorCursors) & 1) == 0)
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"updateAllRenderersForSelectionPathChange(from:to:collaboratorPresence:)", 71, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCanvas/CRLCollaboratorCursorCoordinator.swift", 102, 2, 109, (uint64_t)"Setting a non-nil collaborator cursor selection path on a renderer when shouldShowCollaboratorCursors is false.", 111, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"updateAllRenderersForSelectionPathChange(from:to:collaboratorPresence:)", 71, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCanvas/CRLCollaboratorCursorCoordinator.swift", 102, 2, 109);
    return;
  }
  id v7 = [*(id *)(v3 + OBJC_IVAR____TtC8Freeform32CRLCollaboratorCursorCoordinator__collaboratorCursorRenderers) allObjects];
  sub_1005057FC((uint64_t *)&unk_101695DF0);
  unint64_t v8 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v8 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v9 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v9) {
      goto LABEL_13;
    }
  }
  else
  {
    uint64_t v9 = *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v9) {
      goto LABEL_13;
    }
  }
  if (v9 < 1)
  {
    __break(1u);
    return;
  }
  for (uint64_t i = 0; i != v9; ++i)
  {
    if ((v8 & 0xC000000000000001) != 0)
    {
      id v11 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else
    {
      id v11 = *(void **)(v8 + 8 * i + 32);
      swift_unknownObjectRetain();
    }
    [v11 collaboratorCursorSelectionPathChangedFromSelectionPath:a1 toSelectionPath:a2 collaboratorPresence:a3];
    swift_unknownObjectRelease();
  }
LABEL_13:

  swift_bridgeObjectRelease();
}

uint64_t sub_100BBD550(void *a1, uint64_t a2, int a3)
{
  uint64_t v7 = sub_1005057FC(&qword_101695E00);
  __chkstk_darwin(v7 - 8, v8);
  uint64_t v10 = (char *)&v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for UUID();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11, v13);
  id v15 = (char *)&v42 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16, v17);
  id v19 = (char *)&v42 - v18;
  uint64_t v20 = (uint64_t *)(v3 + OBJC_IVAR____TtC8Freeform32CRLCollaboratorCursorCoordinator__selectionCursorMap);
  swift_beginAccess();
  uint64_t v21 = *v20;
  if (!*(void *)(*v20 + 16)) {
    goto LABEL_12;
  }
  int v43 = a3;
  id v22 = a1;
  swift_bridgeObjectRetain();
  unint64_t v23 = sub_10095642C((uint64_t)v22);
  if ((v24 & 1) == 0)
  {

    swift_bridgeObjectRelease();
LABEL_12:
    sub_1005057FC(&qword_10167AD08);
    unint64_t v34 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
    uint64_t v35 = swift_allocObject();
    *(_OWORD *)(v35 + 16) = xmmword_10117E810;
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v12 + 16))(v35 + v34, a2, v11);
    swift_beginAccess();
    id v36 = a1;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v45 = *v20;
    *uint64_t v20 = 0x8000000000000000;
    sub_1009735B0(v35, v36, isUniquelyReferenced_nonNull_native);
    uint64_t v38 = v45;
    goto LABEL_15;
  }
  id v25 = v22;
  uint64_t v26 = *(void *)(*(void *)(v21 + 56) + 8 * v23);
  swift_bridgeObjectRetain();
  int64_t v42 = v25;

  swift_bridgeObjectRelease();
  uint64_t v45 = v26;
  swift_bridgeObjectRetain();
  unint64_t v27 = sub_100E39B6C(a2, v26);
  char v29 = v28;
  swift_bridgeObjectRelease();
  if ((v29 & 1) == 0)
  {
    sub_100E86DE8(v27, (uint64_t)v19);
    (*(void (**)(char *, uint64_t))(v12 + 8))(v19, v11);
  }
  uint64_t v30 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 16);
  if (v43)
  {
    v30(v15, a2, v11);
    uint64_t v31 = v45;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v31 = sub_100F617D8(0, *(void *)(v31 + 16) + 1, 1, v31);
    }
    unint64_t v33 = *(void *)(v31 + 16);
    unint64_t v32 = *(void *)(v31 + 24);
    if (v33 >= v32 >> 1) {
      uint64_t v31 = sub_100F617D8(v32 > 1, v33 + 1, 1, v31);
    }
    *(void *)(v31 + 16) = v33 + 1;
    (*(void (**)(unint64_t, char *, uint64_t))(v12 + 32))(v31+ ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80))+ *(void *)(v12 + 72) * v33, v15, v11);
    uint64_t v45 = v31;
  }
  else
  {
    v30(v10, a2, v11);
    sub_100F49DC4(0, 0, (uint64_t)v10);
    uint64_t v31 = v45;
  }
  id v39 = v42;
  swift_beginAccess();
  id v36 = v39;
  char v40 = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v44 = *v20;
  *uint64_t v20 = 0x8000000000000000;
  sub_1009735B0(v31, v36, v40);
  uint64_t v38 = v44;
LABEL_15:
  *uint64_t v20 = v38;

  swift_bridgeObjectRelease();
  return swift_endAccess();
}

uint64_t sub_100BBD958(void *a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for UUID();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5, v7);
  uint64_t v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = (uint64_t *)(v2 + OBJC_IVAR____TtC8Freeform32CRLCollaboratorCursorCoordinator__selectionCursorMap);
  uint64_t result = swift_beginAccess();
  uint64_t v12 = *v10;
  if (*(void *)(*v10 + 16))
  {
    id v13 = a1;
    swift_bridgeObjectRetain();
    unint64_t v14 = sub_10095642C((uint64_t)v13);
    if (v15)
    {
      uint64_t v16 = *(void *)(*(void *)(v12 + 56) + 8 * v14);
      swift_bridgeObjectRetain();

      swift_bridgeObjectRelease();
      uint64_t v24 = v16;
      swift_bridgeObjectRetain();
      unint64_t v17 = sub_100E39B6C(a2, v16);
      char v19 = v18;
      swift_bridgeObjectRelease();
      if ((v19 & 1) == 0)
      {
        sub_100E86DE8(v17, (uint64_t)v9);
        (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
        uint64_t v20 = v24;
        if (*(void *)(v24 + 16))
        {
          swift_beginAccess();
          id v21 = v13;
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v23 = *v10;
          *uint64_t v10 = 0x8000000000000000;
          sub_1009735B0(v20, v21, isUniquelyReferenced_nonNull_native);
          *uint64_t v10 = v23;

          swift_bridgeObjectRelease();
          return swift_endAccess();
        }
        swift_bridgeObjectRelease();
        swift_beginAccess();
        sub_10095B878((uint64_t)v13);
        swift_endAccess();
      }
    }
    else
    {
    }
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_100BBDB94(void *a1, void *a2, uint64_t a3)
{
  uint64_t v7 = sub_1005057FC((uint64_t *)&unk_101674520);
  __chkstk_darwin(v7 - 8, v8);
  v88 = (char *)&v83 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10, v11);
  id v13 = (char *)&v83 - v12;
  uint64_t v14 = type metadata accessor for UUID();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14, v16);
  uint64_t v86 = (uint64_t)&v83 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18, v19);
  id v21 = (char *)&v83 - v20;
  __n128 v24 = __chkstk_darwin(v22, v23);
  uint64_t v26 = (char *)&v83 - v25;
  uint64_t v87 = a3;
  uint64_t v90 = v15;
  v85 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v15 + 16);
  v85((char *)&v83 - v25, a3 + OBJC_IVAR____TtC8Freeform23CRLCollaboratorPresence_presenceUUID, v14, v24);
  uint64_t v89 = v14;
  uint64_t v91 = v3;
  if (!a1)
  {
LABEL_16:
    if (!a2) {
      goto LABEL_44;
    }
    goto LABEL_17;
  }
  uint64_t v27 = (uint64_t)v26;
  if (a2)
  {
    sub_100BBF5B8();
    id v28 = a1;
    id v29 = a2;
    char v30 = static NSObject.== infix(_:_:)();

    if (v30)
    {

      uint64_t v14 = v89;
      goto LABEL_18;
    }
  }
  else
  {
    id v31 = a1;
  }
  uint64_t v26 = (char *)v27;
  uint64_t v3 = v91;
  sub_100BBD958(a1, v27);
  if (*(unsigned char *)(v3 + OBJC_IVAR____TtC8Freeform32CRLCollaboratorCursorCoordinator_shouldShowCollaboratorCursors) != 1)
  {

    uint64_t v14 = v89;
    if (!a2) {
      goto LABEL_44;
    }
    goto LABEL_17;
  }
  unint64_t v32 = (uint64_t *)(v3 + OBJC_IVAR____TtC8Freeform32CRLCollaboratorCursorCoordinator__selectionCursorMap);
  swift_beginAccess();
  uint64_t v33 = *v32;
  uint64_t v34 = *(void *)(*v32 + 16);
  uint64_t v14 = v89;
  if (!v34) {
    goto LABEL_14;
  }
  id v35 = a1;
  swift_bridgeObjectRetain();
  unint64_t v36 = sub_10095642C((uint64_t)v35);
  if ((v37 & 1) == 0)
  {

    swift_bridgeObjectRelease();
LABEL_14:
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v90 + 56))(v13, 1, 1, v14);
LABEL_15:

    sub_100510824((uint64_t)v13);
    uint64_t v3 = v91;
    goto LABEL_16;
  }
  v84 = *(void **)(*(void *)(v33 + 56) + 8 * v36);
  swift_bridgeObjectRetain();
  id v83 = v35;

  uint64_t v38 = v84;
  swift_bridgeObjectRelease();
  uint64_t v39 = v38[2];
  if (v39)
  {
    uint64_t v40 = v90;
    ((void (*)(char *, char *, uint64_t))v85)(v13, (char *)v38+ ((*(unsigned __int8 *)(v40 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v40 + 80))+ *(void *)(v90 + 72) * (v39 - 1), v14);
    uint64_t v41 = 0;
  }
  else
  {
    uint64_t v41 = 1;
    uint64_t v40 = v90;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v40 + 56))(v13, v41, 1, v14);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v40 + 48))(v13, 1, v14) == 1) {
    goto LABEL_15;
  }
  (*(void (**)(char *, char *, uint64_t))(v90 + 32))(v21, v13, v14);
  uint64_t v62 = v14;
  uint64_t v3 = v91;
  id v63 = (uint64_t *)(v91 + OBJC_IVAR____TtC8Freeform32CRLCollaboratorCursorCoordinator__collaboratorsToCursorsMap);
  swift_beginAccess();
  uint64_t v64 = *v63;
  swift_bridgeObjectRetain();
  id v65 = sub_100950C1C((uint64_t)v21, v64);
  v84 = v66;
  v68 = v67;
  swift_bridgeObjectRelease();
  if (v65)
  {
    id v69 = v83;
    sub_100BBD33C(0, (uint64_t)a1, (uint64_t)v65);

    (*(void (**)(char *, uint64_t))(v90 + 8))(v21, v62);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v90 + 8))(v21, v62);
  }
  uint64_t v14 = v62;
  uint64_t v26 = (char *)v27;
  if (!a2)
  {
LABEL_44:
    if (*(unsigned char *)(v3 + OBJC_IVAR____TtC8Freeform32CRLCollaboratorCursorCoordinator_shouldShowCollaboratorCursors) != 1)
    {
LABEL_55:
      (*(void (**)(char *, uint64_t))(v90 + 8))(v26, v14);
      return;
    }
    id v70 = [*(id *)(v3 + OBJC_IVAR____TtC8Freeform32CRLCollaboratorCursorCoordinator__collaboratorCursorRenderers) allObjects];
    sub_1005057FC((uint64_t *)&unk_101695DF0);
    unint64_t v58 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    if (v58 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v45 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      uint64_t v56 = v87;
      if (v45) {
        goto LABEL_47;
      }
    }
    else
    {
      uint64_t v45 = *(void *)((v58 & 0xFFFFFFFFFFFFFF8) + 0x10);
      uint64_t v56 = v87;
      if (v45)
      {
LABEL_47:
        if (v45 < 1)
        {
          __break(1u);
          goto LABEL_57;
        }
        for (uint64_t i = 0; i != v45; ++i)
        {
          if ((v58 & 0xC000000000000001) != 0)
          {
            id v72 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else
          {
            id v72 = *(void **)(v58 + 8 * i + 32);
            swift_unknownObjectRetain();
          }
          [v72 collaboratorCursorSelectionPathChangedFromSelectionPath:a1 toSelectionPath:0 collaboratorPresence:v56];
          swift_unknownObjectRelease();
        }
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v14 = v89;
    goto LABEL_55;
  }
LABEL_17:
  uint64_t v27 = (uint64_t)v26;
  id v29 = a2;
LABEL_18:
  id v42 = v29;
  int v43 = (void *)v27;
  uint64_t v44 = v27;
  uint64_t v45 = v91;
  sub_100BBD550(v42, v44, 1);
  uint64_t v46 = v90;
  if (*(unsigned char *)(v45 + OBJC_IVAR____TtC8Freeform32CRLCollaboratorCursorCoordinator_shouldShowCollaboratorCursors) != 1)
  {
    (*(void (**)(void *, uint64_t))(v90 + 8))(v43, v14);

    return;
  }
  v84 = v43;
  Class v47 = (uint64_t *)(v45 + OBJC_IVAR____TtC8Freeform32CRLCollaboratorCursorCoordinator__selectionCursorMap);
  swift_beginAccess();
  uint64_t v48 = *v47;
  uint64_t v49 = v89;
  if (!*(void *)(v48 + 16)) {
    goto LABEL_25;
  }
  uint64_t v26 = (char *)v42;
  swift_bridgeObjectRetain();
  unint64_t v50 = sub_10095642C((uint64_t)v26);
  if ((v51 & 1) == 0)
  {

    swift_bridgeObjectRelease();
LABEL_25:
    uint64_t v54 = (uint64_t)v88;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v46 + 56))(v88, 1, 1, v49);
LABEL_26:

    (*(void (**)(void *, uint64_t))(v46 + 8))(v84, v49);
    sub_100510824(v54);
    return;
  }
  uint64_t v52 = *(void *)(*(void *)(v48 + 56) + 8 * v50);
  swift_bridgeObjectRetain();

  swift_bridgeObjectRelease();
  uint64_t v53 = *(void *)(v52 + 16);
  if (v53)
  {
    uint64_t v54 = (uint64_t)v88;
    ((void (*)(char *, unint64_t, uint64_t))v85)(v88, v52+ ((*(unsigned __int8 *)(v46 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v46 + 80))+ *(void *)(v46 + 72) * (v53 - 1), v49);
    uint64_t v55 = 0;
    uint64_t v56 = v87;
  }
  else
  {
    uint64_t v55 = 1;
    uint64_t v56 = v87;
    uint64_t v54 = (uint64_t)v88;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v46 + 56))(v54, v55, 1, v49);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v46 + 48))(v54, 1, v49) == 1) {
    goto LABEL_26;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v46 + 32))(v86, v54, v49);
  sub_100BBF5F8((unint64_t *)&qword_10167BDC0, (void (*)(uint64_t))&type metadata accessor for UUID);
  if ((dispatch thunk of static Equatable.== infix(_:_:)() & 1) == 0)
  {
    id v57 = [*(id *)(v45 + OBJC_IVAR____TtC8Freeform32CRLCollaboratorCursorCoordinator__collaboratorCursorRenderers) allObjects];
    sub_1005057FC((uint64_t *)&unk_101695DF0);
    unint64_t v58 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    if (!(v58 >> 62))
    {
      uint64_t v59 = *(void *)((v58 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v59)
      {
LABEL_32:
        if (v59 < 1)
        {
          __break(1u);
          return;
        }
        for (uint64_t j = 0; j != v59; ++j)
        {
          if ((v58 & 0xC000000000000001) != 0)
          {
            uint64_t v61 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else
          {
            uint64_t v61 = *(void **)(v58 + 8 * j + 32);
            swift_unknownObjectRetain();
          }
          [v61 collaboratorCursorSelectionPathChangedFromSelectionPath:a1 toSelectionPath:0 collaboratorPresence:v56];
          swift_unknownObjectRelease();
        }
      }
LABEL_58:
      swift_bridgeObjectRelease();
      goto LABEL_59;
    }
LABEL_57:
    swift_bridgeObjectRetain();
    uint64_t v59 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v59) {
      goto LABEL_32;
    }
    goto LABEL_58;
  }
LABEL_59:
  v73 = (uint64_t *)(v45 + OBJC_IVAR____TtC8Freeform32CRLCollaboratorCursorCoordinator__collaboratorsToCursorsMap);
  swift_beginAccess();
  uint64_t v74 = *v73;
  swift_bridgeObjectRetain();
  id v75 = sub_100950C1C(v86, v74);
  v77 = v76;
  v79 = v78;
  swift_bridgeObjectRelease();
  if (v75)
  {
    v80 = v26;
    sub_100BBD33C((uint64_t)a1, (uint64_t)v26, (uint64_t)v75);
  }
  uint64_t v81 = v89;
  v82 = *(void (**)(uint64_t, uint64_t))(v90 + 8);
  v82(v86, v89);
  v82((uint64_t)v84, v81);
}

id sub_100BBE57C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLCollaboratorCursorCoordinator();
  return [super dealloc];
}

uint64_t type metadata accessor for CRLCollaboratorCursorCoordinator()
{
  return self;
}

id sub_100BBE6B8(void *a1)
{
  if (([self isMainThread] & 1) == 0)
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"willTeardownRenderer(_:)", 24, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCanvas/CRLCollaboratorCursorCoordinator.swift", 102, 2, 177, (uint64_t)"This operation must only be performed on the main thread.", 57, 2u, (uint64_t)_swiftEmptyArrayStorage);
    LOBYTE(v5) = 2;
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"willTeardownRenderer(_:)", 24, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCanvas/CRLCollaboratorCursorCoordinator.swift", 102, 2, 177);
    [self logFullBacktrace:@"This operation must only be performed on the main thread." 57 v5];
  }
  [a1 setCollaboratorCursorDelegate:0];
  uint64_t v3 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform32CRLCollaboratorCursorCoordinator__collaboratorCursorRenderers);

  return [v3 removeObject:a1];
}

void sub_100BBE808(void *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t))
{
  swift_unknownObjectRetain();
  id v7 = a1;
  a4(a3);
  swift_unknownObjectRelease();
}

id sub_100BBE9EC(void *a1)
{
  uint64_t v3 = OBJC_IVAR____TtC8Freeform32CRLCollaboratorCursorCoordinator__collaboratorsToCursorsMap;
  uint64_t v4 = v1;
  *(void *)&v1[v3] = sub_100A39048((uint64_t)_swiftEmptyArrayStorage);
  uint64_t v5 = OBJC_IVAR____TtC8Freeform32CRLCollaboratorCursorCoordinator__selectionCursorMap;
  *(void *)&v4[v5] = sub_100A39250((uint64_t)_swiftEmptyArrayStorage);
  v4[OBJC_IVAR____TtC8Freeform32CRLCollaboratorCursorCoordinator__kShouldDisplayLatestSelection] = 1;
  uint64_t v6 = OBJC_IVAR____TtC8Freeform32CRLCollaboratorCursorCoordinator__collaboratorCursorRenderers;
  *(void *)&v4[v6] = [self hashTableWithOptions:512];
  v4[OBJC_IVAR____TtC8Freeform32CRLCollaboratorCursorCoordinator_shouldShowCollaboratorCursors] = 1;
  *(void *)&v4[OBJC_IVAR____TtC8Freeform32CRLCollaboratorCursorCoordinator_selectionPathValidator] = a1;
  id v7 = a1;

  v9.receiver = v4;
  v9.super_class = (Class)type metadata accessor for CRLCollaboratorCursorCoordinator();
  return [super init];
}

uint64_t sub_100BBEAD4(uint64_t a1)
{
  uint64_t v2 = a1 + OBJC_IVAR____TtC8Freeform23CRLCollaboratorPresence_presenceUUID;
  uint64_t v3 = (uint64_t *)(v1 + OBJC_IVAR____TtC8Freeform32CRLCollaboratorCursorCoordinator__collaboratorsToCursorsMap);
  swift_beginAccess();
  uint64_t v4 = *v3;
  swift_bridgeObjectRetain();
  id v5 = sub_100950C1C(v2, v4);
  id v7 = v6;
  uint64_t v9 = v8;
  swift_bridgeObjectRelease();
  uint64_t result = 0;
  if ((unint64_t)v5 >= 2)
  {

    return v9;
  }
  return result;
}

void sub_100BBEB74()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for UUID();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2, v4);
  uint64_t v81 = (char *)&v73 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6, v7);
  uint64_t v9 = (char *)&v73 - v8;
  uint64_t v10 = sub_1005057FC(&qword_101695DD8);
  __chkstk_darwin(v10 - 8, v11);
  id v13 = (char *)&v73 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14, v15);
  uint64_t v17 = (char *)&v73 - v16;
  uint64_t v18 = (uint64_t *)(v0 + OBJC_IVAR____TtC8Freeform32CRLCollaboratorCursorCoordinator__collaboratorsToCursorsMap);
  swift_beginAccess();
  v80 = v18;
  uint64_t v19 = *v18;
  uint64_t v20 = *(void *)(*v18 + 64);
  uint64_t v74 = *v18 + 64;
  uint64_t v21 = 1 << *(unsigned char *)(v19 + 32);
  uint64_t v22 = -1;
  if (v21 < 64) {
    uint64_t v22 = ~(-1 << v21);
  }
  unint64_t v23 = v22 & v20;
  uint64_t v88 = OBJC_IVAR____TtC8Freeform32CRLCollaboratorCursorCoordinator_selectionPathValidator;
  uint64_t v79 = OBJC_IVAR____TtC8Freeform32CRLCollaboratorCursorCoordinator_shouldShowCollaboratorCursors;
  uint64_t v76 = OBJC_IVAR____TtC8Freeform32CRLCollaboratorCursorCoordinator__collaboratorCursorRenderers;
  v92 = (void (**)(char *, char *, uint64_t))(v3 + 16);
  uint64_t v87 = (void (**)(char *, char *, uint64_t))(v3 + 32);
  uint64_t v82 = v3;
  uint64_t v89 = (void (**)(char *, uint64_t))(v3 + 8);
  int64_t v78 = (unint64_t)(v21 + 63) >> 6;
  int64_t v73 = v78 - 1;
  uint64_t v83 = v19;
  swift_bridgeObjectRetain();
  int64_t v91 = 0;
  uint64_t v75 = v1;
  uint64_t v90 = v2;
  v85 = v17;
  uint64_t v86 = v13;
  while (1)
  {
    if (v23)
    {
      unint64_t v24 = __clz(__rbit64(v23));
      uint64_t v25 = (v23 - 1) & v23;
      unint64_t v26 = v24 | (v91 << 6);
LABEL_8:
      uint64_t v27 = v83;
      (*(void (**)(char *, unint64_t, uint64_t))(v82 + 16))(v13, *(void *)(v83 + 48) + *(void *)(v82 + 72) * v26, v2);
      uint64_t v28 = *(void *)(v27 + 56) + 24 * v26;
      uint64_t v29 = sub_1005057FC((uint64_t *)&unk_101695DE0);
      char v30 = &v13[*(int *)(v29 + 48)];
      id v31 = *(void **)v28;
      unint64_t v32 = *(void **)(v28 + 8);
      uint64_t v33 = *(void **)(v28 + 16);
      *(void *)char v30 = v31;
      *((void *)v30 + 1) = v32;
      *((void *)v30 + 2) = v33;
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v13, 0, 1, v29);
      id v34 = v31;
      id v35 = v32;
      id v36 = v33;
      goto LABEL_27;
    }
    int64_t v37 = v91 + 1;
    if (__OFADD__(v91, 1))
    {
      __break(1u);
LABEL_46:
      __break(1u);
      goto LABEL_47;
    }
    if (v37 < v78)
    {
      unint64_t v38 = *(void *)(v74 + 8 * v37);
      if (v38) {
        goto LABEL_12;
      }
      int64_t v39 = v91 + 2;
      ++v91;
      if (v37 + 1 < v78)
      {
        unint64_t v38 = *(void *)(v74 + 8 * v39);
        if (v38) {
          goto LABEL_15;
        }
        int64_t v91 = v37 + 1;
        if (v37 + 2 < v78)
        {
          unint64_t v38 = *(void *)(v74 + 8 * (v37 + 2));
          if (v38)
          {
            v37 += 2;
            goto LABEL_12;
          }
          int64_t v39 = v37 + 3;
          int64_t v91 = v37 + 2;
          if (v37 + 3 < v78) {
            break;
          }
        }
      }
    }
LABEL_26:
    uint64_t v40 = sub_1005057FC((uint64_t *)&unk_101695DE0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v40 - 8) + 56))(v13, 1, 1, v40);
    uint64_t v25 = 0;
LABEL_27:
    sub_100BBF550((uint64_t)v13, (uint64_t)v17);
    uint64_t v41 = sub_1005057FC((uint64_t *)&unk_101695DE0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v41 - 8) + 48))(v17, 1, v41) == 1)
    {
      swift_release();
      return;
    }
    unint64_t v93 = v25;
    id v42 = &v17[*(int *)(v41 + 48)];
    int v43 = *(void **)v42;
    uint64_t v44 = (void *)*((void *)v42 + 1);
    uint64_t v45 = (void *)*((void *)v42 + 2);
    (*v87)(v9, v17, v2);
    uint64_t v46 = *(void *)(v1 + v88);
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      uint64_t v48 = (void *)Strong;
      swift_beginAccess();
      swift_bridgeObjectRetain();
      Class isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      id v50 = [v48 resolveToSiblingsWithUuids:isa];

      type metadata accessor for CRLBoardItem(0);
      sub_100BBF5F8((unint64_t *)&qword_101676C20, (void (*)(uint64_t))type metadata accessor for CRLBoardItem);
      uint64_t v51 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

      id v52 = (id)sub_10060A798(v51, (uint64_t)v44);
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"selectionPathFrom(persistableSelectionPath:)", 44, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLSelectionPathValidator.swift", 92, 2, 29, (uint64_t)"Can't get selectionPath with a nil board", 40, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"selectionPathFrom(persistableSelectionPath:)", 44, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLSelectionPathValidator.swift", 92, 2, 29);
      id v53 = *(id *)(v46 + OBJC_IVAR____TtC8Freeform25CRLSelectionPathValidator_selectionModelTranslator);
      Class v54 = Set._bridgeToObjectiveC()().super.isa;
      id v52 = [v53 selectionPathForInfos:v54];
    }
    sub_100BBF5B8();
    if (static NSObject.== infix(_:_:)())
    {
      uint64_t v2 = v90;
      (*v89)(v9, v90);

      goto LABEL_5;
    }
    id v84 = v45;
    uint64_t v55 = v9;
    uint64_t v56 = (uint64_t)v81;
    uint64_t v2 = v90;
    (*v92)(v81, v55, v90);
    id v57 = v44;
    uint64_t v58 = v1;
    uint64_t v59 = v80;
    swift_beginAccess();
    id v60 = v43;
    id v61 = v57;
    id v62 = v52;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v94 = *v59;
    *uint64_t v59 = 0x8000000000000000;
    sub_100973734((uint64_t)v60, (uint64_t)v61, (uint64_t)v62, v56, isUniquelyReferenced_nonNull_native);
    *uint64_t v59 = v94;
    uint64_t v1 = v58;
    swift_bridgeObjectRelease();
    uint64_t v64 = *v89;
    (*v89)((char *)v56, v2);
    swift_endAccess();
    if (*(unsigned char *)(v58 + v79) != 1)
    {
      v64(v55, v2);

      uint64_t v9 = v55;
      goto LABEL_5;
    }
    id v77 = v61;
    id v65 = *(void **)(v58 + v76);
    id v66 = v62;
    id v67 = v84;
    id v68 = [v65 allObjects];
    sub_1005057FC((uint64_t *)&unk_101695DF0);
    unint64_t v69 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    if (v69 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v70 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (v70)
      {
LABEL_35:
        if (v70 < 1) {
          goto LABEL_46;
        }
        for (uint64_t i = 0; i != v70; ++i)
        {
          if ((v69 & 0xC000000000000001) != 0)
          {
            id v72 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else
          {
            id v72 = *(void **)(v69 + 8 * i + 32);
            swift_unknownObjectRetain();
          }
          [v72 collaboratorCursorSelectionPathChangedFromSelectionPath:v67 toSelectionPath:v66 collaboratorPresence:v60];
          swift_unknownObjectRelease();
        }
      }
    }
    else
    {
      uint64_t v70 = *(void *)((v69 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v70) {
        goto LABEL_35;
      }
    }

    swift_bridgeObjectRelease();
    uint64_t v9 = v55;
    uint64_t v2 = v90;
    v64(v55, v90);
    uint64_t v1 = v75;
LABEL_5:
    uint64_t v17 = v85;
    id v13 = v86;
    unint64_t v23 = v93;
  }
  unint64_t v38 = *(void *)(v74 + 8 * v39);
  if (v38)
  {
LABEL_15:
    int64_t v37 = v39;
LABEL_12:
    uint64_t v25 = (v38 - 1) & v38;
    unint64_t v26 = __clz(__rbit64(v38)) + (v37 << 6);
    int64_t v91 = v37;
    goto LABEL_8;
  }
  while (1)
  {
    int64_t v37 = v39 + 1;
    if (__OFADD__(v39, 1)) {
      break;
    }
    if (v37 >= v78)
    {
      int64_t v91 = v73;
      goto LABEL_26;
    }
    unint64_t v38 = *(void *)(v74 + 8 * v37);
    ++v39;
    if (v38) {
      goto LABEL_12;
    }
  }
LABEL_47:
  __break(1u);
}

uint64_t sub_100BBF550(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1005057FC(&qword_101695DD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_100BBF5B8()
{
  unint64_t result = qword_1016792E8;
  if (!qword_1016792E8)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1016792E8);
  }
  return result;
}

uint64_t sub_100BBF5F8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100BBF640()
{
  return sub_100BC19A8(&qword_101695E08, (void (*)(uint64_t))type metadata accessor for CRLChangeSelectionFontStyleIntent);
}

uint64_t type metadata accessor for CRLChangeSelectionFontStyleIntent()
{
  uint64_t result = qword_101695E80;
  if (!qword_101695E80) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100BBF6D4()
{
  return sub_100BC19A8((unint64_t *)&unk_101695E10, (void (*)(uint64_t))type metadata accessor for CRLChangeSelectionFontStyleIntent);
}

uint64_t sub_100BBF71C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100BBF738()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100BBF754(uint64_t a1)
{
  v2[8] = a1;
  v2[9] = v1;
  uint64_t v3 = type metadata accessor for Logger();
  v2[10] = v3;
  v2[11] = *(void *)(v3 - 8);
  v2[12] = swift_task_alloc();
  type metadata accessor for CRLBoardIdentifier(0);
  v2[13] = swift_task_alloc();
  type metadata accessor for CRLBoardEntity();
  v2[14] = swift_task_alloc();
  type metadata accessor for MainActor();
  v2[15] = static MainActor.shared.getter();
  uint64_t v5 = dispatch thunk of Actor.unownedExecutor.getter();
  v2[16] = v5;
  v2[17] = v4;
  return _swift_task_switch(sub_100BBF8A0, v5, v4);
}

uint64_t sub_100BBF8A0()
{
  uint64_t v2 = v0[13];
  uint64_t v1 = v0[14];
  IntentParameter.wrappedValue.getter();
  sub_100540CFC(v1, v2);
  sub_100568A20(v1, (uint64_t (*)(void))type metadata accessor for CRLBoardEntity);
  AppDependency.wrappedValue.getter();
  v0[5] = &type metadata for CRLBoardLibraryProvidingDependency;
  v0[6] = &off_10152F800;
  uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_1016A5C00 + dword_1016A5C00);
  uint64_t v3 = (void *)swift_task_alloc();
  v0[18] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_100BBF9C0;
  uint64_t v4 = v0[13];
  return v6(v4, (uint64_t)(v0 + 2));
}

uint64_t sub_100BBF9C0(void *a1, uint64_t a2)
{
  uint64_t v5 = *v3;
  v5[19] = a2;
  v5[20] = v2;
  swift_task_dealloc();
  sub_100568A20(v5[13], type metadata accessor for CRLBoardIdentifier);
  if (v2)
  {
    uint64_t v6 = v5[16];
    uint64_t v7 = v5[17];
    uint64_t v8 = sub_100BC0244;
  }
  else
  {
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)(v5 + 2));

    uint64_t v6 = v5[16];
    uint64_t v7 = v5[17];
    uint64_t v8 = sub_100BBFB28;
  }
  return _swift_task_switch(v8, v6, v7);
}

uint64_t sub_100BBFB28()
{
  swift_release();
  if (sub_100BC1968()) {
    uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  }
  else {
    uint64_t ObjCClassFromMetadata = 0;
  }
  id v2 = [*(id *)(v0 + 152) mostSpecificCurrentEditorOfClass:ObjCClassFromMetadata];
  self;
  uint64_t v3 = (void *)swift_dynamicCastObjCClass();
  if (!v3)
  {
    int64_t v39 = *(void **)(v0 + 152);
    uint64_t v41 = *(void *)(v0 + 88);
    uint64_t v40 = *(void *)(v0 + 96);
    uint64_t v43 = *(void *)(v0 + 72);
    uint64_t v42 = *(void *)(v0 + 80);
    swift_unknownObjectRelease();
    uint64_t v44 = type metadata accessor for CRLChangeSelectionFontStyleIntent();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v41 + 16))(v40, v43 + *(int *)(v44 + 28), v42);
    id v45 = v39;
    uint64_t v46 = Logger.logObject.getter();
    os_log_type_t v47 = static os_log_type_t.error.getter();
    BOOL v48 = os_log_type_enabled(v46, v47);
    uint64_t v49 = *(void **)(v0 + 152);
    if (v48)
    {
      id v50 = (uint8_t *)swift_slowAlloc();
      uint64_t v51 = (void *)swift_slowAlloc();
      *(_DWORD *)id v50 = 138412290;
      *(void *)(v0 + 56) = v49;
      id v52 = v49;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v51 = v49;

      _os_log_impl((void *)&_mh_execute_header, v46, v47, "Missing text editors for selection: %@", v50, 0xCu);
      sub_1005057FC(&qword_101678028);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
      id v53 = *(NSObject **)(v0 + 152);
    }
    else
    {

      id v53 = *(NSObject **)(v0 + 152);
      uint64_t v46 = v53;
    }
    uint64_t v55 = *(void *)(v0 + 88);
    uint64_t v54 = *(void *)(v0 + 96);
    uint64_t v56 = *(void *)(v0 + 80);

    (*(void (**)(uint64_t, uint64_t))(v55 + 8))(v54, v56);
    type metadata accessor for _PrebuiltAppIntentError();
    sub_100BC19A8((unint64_t *)&qword_101678490, (void (*)(uint64_t))&type metadata accessor for _PrebuiltAppIntentError);
    swift_allocError();
    static _UnrecoverableError.actionNotAllowed.getter();
    swift_willThrow();

    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    id v57 = *(uint64_t (**)(void))(v0 + 8);
    goto LABEL_38;
  }
  id v4 = [v3 wpEditors];
  swift_unknownObjectRelease();
  type metadata accessor for CRLWPEditor();
  unint64_t v5 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v60 = v0;
  if (v5 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v6) {
      goto LABEL_7;
    }
  }
  else
  {
    uint64_t v6 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v6)
    {
LABEL_7:
      if (v6 < 1)
      {
        __break(1u);
        JUMPOUT(0x100BC0234);
      }
      uint64_t v7 = 0;
      uint64_t v8 = (unsigned char *)(v0 + 168);
      unint64_t v9 = v5 & 0xC000000000000001;
      unint64_t v63 = v5 & 0xC000000000000001;
      unint64_t v61 = v5;
      uint64_t v62 = v6;
      do
      {
        if (v9) {
          id v10 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          id v10 = *(id *)(v5 + 8 * v7 + 32);
        }
        uint64_t v11 = v10;
        ++v7;
        IntentParameter.wrappedValue.getter();
        switch(*v8)
        {
          case 1:
            uint64_t KeyPath = swift_getKeyPath();
            sub_100835CF8(KeyPath);
            char v20 = v19;
            swift_release();
            uint64_t v21 = swift_getKeyPath();
            uint64_t v22 = sub_1008355F8();
            if (!v22) {
              goto LABEL_9;
            }
            uint64_t v17 = v22;
            sub_10103626C(v21, (v20 & 1) == 0, *(void *)&v22[OBJC_IVAR____TtC8Freeform12CRLTextRange_range], *(void *)&v22[OBJC_IVAR____TtC8Freeform12CRLTextRange_range + 8]);
            goto LABEL_20;
          case 2:
            swift_getKeyPath();
            sub_100836294();
            uint64_t v24 = v23;
            int v26 = v25;
            swift_release();
            if (v26 == 2)
            {
              uint64_t v27 = swift_getKeyPath();
              Swift::Int v28 = 1;
            }
            else
            {
              Swift::Int v28 = v24 == 0;
              uint64_t v27 = swift_getKeyPath();
            }
            id v35 = sub_1008355F8();
            if (!v35) {
              goto LABEL_9;
            }
            id v36 = v35;
            sub_1010366F4(v27, v28, *(void *)&v35[OBJC_IVAR____TtC8Freeform12CRLTextRange_range], *(void *)&v35[OBJC_IVAR____TtC8Freeform12CRLTextRange_range + 8]);

            break;
          case 3:
            type metadata accessor for CRLWPStickyNoteItem();
            if (swift_dynamicCastClass()) {
              goto LABEL_11;
            }
            swift_getKeyPath();
            sub_100836540();
            uint64_t v30 = v29;
            int v32 = v31;
            swift_release();
            if (v32 == 2)
            {
              uint64_t v33 = swift_getKeyPath();
              BOOL v34 = 1;
            }
            else
            {
              BOOL v34 = v30 == 0;
              uint64_t v33 = swift_getKeyPath();
            }
            int64_t v37 = sub_1008355F8();
            if (v37)
            {
              unint64_t v38 = v37;
              sub_101036B08(v33, v34, *(void *)&v37[OBJC_IVAR____TtC8Freeform12CRLTextRange_range], *(void *)&v37[OBJC_IVAR____TtC8Freeform12CRLTextRange_range + 8]);
            }
            else
            {
LABEL_9:
              sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"setAttributeValue(_:value:)", 27, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/Editor/CRLWPEditor.swift", 84, 2, 2941, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
              uint64_t v6 = v62;
              unint64_t v9 = v63;
              unint64_t v5 = v61;
              sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"setAttributeValue(_:value:)", 27, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/Editor/CRLWPEditor.swift", 84, 2, 2941);
            }
            break;
          default:
            uint64_t v12 = swift_getKeyPath();
            sub_100835D40(v12);
            char v14 = v13;
            swift_release();
            uint64_t v15 = swift_getKeyPath();
            uint64_t v16 = sub_1008355F8();
            if (!v16) {
              goto LABEL_9;
            }
            uint64_t v17 = v16;
            sub_10103622C(v15, (v14 & 1) == 0, *(void *)&v16[OBJC_IVAR____TtC8Freeform12CRLTextRange_range], *(void *)&v16[OBJC_IVAR____TtC8Freeform12CRLTextRange_range + 8]);
LABEL_20:

            break;
        }
        swift_release();
LABEL_11:
      }
      while (v6 != v7);
    }
  }
  uint64_t v58 = *(void **)(v60 + 152);
  swift_bridgeObjectRelease();
  static IntentResult.result<>()();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  id v57 = *(uint64_t (**)(void))(v60 + 8);
LABEL_38:
  return v57();
}

uint64_t sub_100BC0244()
{
  swift_release();
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v0 + 16);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100BC02D8()
{
  uint64_t v0 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0, v2);
  id v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for Locale();
  __chkstk_darwin(v5 - 8, v6);
  uint64_t v7 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v7 - 8, v8);
  uint64_t v9 = type metadata accessor for LocalizedStringResource();
  sub_100568B28(v9, qword_10171BE00);
  sub_100556B74(v9, (uint64_t)qword_10171BE00);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v4, enum case for LocalizedStringResource.BundleDescription.main(_:), v0);
  return LocalizedStringResource.init(_:table:locale:bundle:comment:)();
}

uint64_t sub_100BC04D0()
{
  uint64_t v0 = sub_1005057FC(&qword_101695EE0);
  __chkstk_darwin(v0 - 8, v1);
  uint64_t v2 = sub_1005057FC(&qword_101695EE8);
  __chkstk_darwin(v2, v3);
  type metadata accessor for CRLChangeSelectionFontStyleIntent();
  sub_100BC19A8(&qword_101695E20, (void (*)(uint64_t))type metadata accessor for CRLChangeSelectionFontStyleIntent);
  ParameterSummaryString.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v4._object = (void *)0x8000000101278920;
  v4._countAndFlagsBits = 0xD000000000000015;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v4);
  swift_getKeyPath();
  sub_1005057FC(&qword_101695EF0);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)();
  swift_release();
  v5._countAndFlagsBits = 544175136;
  v5._object = (void *)0xE400000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v5);
  swift_getKeyPath();
  sub_1005057FC(&qword_101695EF8);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)();
  swift_release();
  v6._countAndFlagsBits = 0;
  v6._object = (void *)0xE000000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v6);
  ParameterSummaryString.init(stringInterpolation:)();
  return IntentParameterSummary.init(_:table:)();
}

uint64_t sub_100BC06F4@<X0>(uint64_t *a1@<X8>)
{
  int64_t v73 = a1;
  uint64_t v1 = type metadata accessor for InputConnectionBehavior();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v74 = v1;
  uint64_t v75 = v2;
  __chkstk_darwin(v1, v3);
  id v72 = &v50[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = sub_1005057FC(&qword_101673B38);
  __chkstk_darwin(v5 - 8, v6);
  uint64_t v71 = &v50[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v8, v9);
  id v68 = &v50[-v10];
  uint64_t v11 = sub_1005057FC(&qword_101691F20);
  __chkstk_darwin(v11 - 8, v12);
  uint64_t v70 = &v50[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v14 = sub_1005057FC(&qword_101673B40);
  __chkstk_darwin(v14 - 8, v15);
  unint64_t v69 = &v50[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v17 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v18 = *(void *)(v17 - 8);
  __chkstk_darwin(v17, v19);
  uint64_t v21 = &v50[-((v20 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v22 = type metadata accessor for Locale();
  __chkstk_darwin(v22 - 8, v23);
  uint64_t v24 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v24 - 8, v25);
  uint64_t v26 = type metadata accessor for LocalizedStringResource();
  uint64_t v65 = v26;
  uint64_t v27 = *(void *)(v26 - 8);
  __chkstk_darwin(v26, v28);
  uint64_t v60 = &v50[-((v29 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v67 = sub_1005057FC(&qword_101673B48);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t v30 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  unsigned __int8 v31 = *(void (**)(unsigned char *, uint64_t, uint64_t))(v18 + 104);
  unsigned int v56 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  uint64_t v57 = v17;
  v31(v21, enum case for LocalizedStringResource.BundleDescription.main(_:), v17);
  uint64_t v58 = v31;
  uint64_t v59 = v18 + 104;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  v31(v21, v30, v17);
  int v32 = v69;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  uint64_t v33 = *(void (**)(unsigned char *, void, uint64_t, uint64_t))(v27 + 56);
  uint64_t v64 = v27 + 56;
  id v66 = v33;
  v33(v32, 0, 1, v26);
  uint64_t v34 = type metadata accessor for CRLBoardEntity();
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56))(v70, 1, 1, v34);
  uint64_t v35 = type metadata accessor for IntentDialog();
  uint64_t v53 = v35;
  uint64_t v36 = *(void *)(v35 - 8);
  int64_t v37 = *(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v36 + 56);
  uint64_t v54 = v37;
  uint64_t v55 = v36 + 56;
  unint64_t v38 = v68;
  v37(v68, 1, 1, v35);
  v37(v71, 1, 1, v35);
  uint64_t v62 = sub_1005057FC(&qword_101673B50);
  unint64_t v63 = 0x800000010123B260;
  unint64_t v76 = 0xD00000000000001FLL;
  unint64_t v77 = 0x800000010123B260;
  AnyHashable.init<A>(_:)();
  uint64_t v61 = type metadata accessor for AppDependencyManager();
  static AppDependencyManager.shared.getter();
  uint64_t v78 = AppDependency.__allocating_init(key:manager:)();
  unsigned int v51 = enum case for InputConnectionBehavior.default(_:);
  int64_t v39 = *(void (**)(void))(v75 + 104);
  v75 += 104;
  id v52 = (void (*)(unsigned char *, void, uint64_t))v39;
  v39(v72);
  sub_100568898();
  sub_100BC19A8((unint64_t *)&qword_101673B60, (void (*)(uint64_t))type metadata accessor for CRLBoardEntity);
  uint64_t v40 = v69;
  uint64_t *v73 = IntentParameter<>.init<A>(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:optionsProvider:)();
  uint64_t v70 = (unsigned char *)sub_1005057FC(&qword_101695ED0);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t v41 = v56;
  uint64_t v42 = v57;
  uint64_t v43 = v58;
  v58(v21, v56, v57);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  v43(v21, v41, v42);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  v66(v40, 0, 1, v65);
  LOBYTE(v78) = 4;
  uint64_t v44 = v53;
  id v45 = v54;
  v54(v38, 1, 1, v53);
  v45(v71, 1, 1, v44);
  v52(v72, v51, v74);
  sub_100A29064();
  uint64_t v46 = IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:supportedValues:)();
  os_log_type_t v47 = v73;
  v73[1] = v46;
  unint64_t v76 = 0xD00000000000001FLL;
  unint64_t v77 = v63;
  AnyHashable.init<A>(_:)();
  static AppDependencyManager.shared.getter();
  v47[2] = AppDependency.__allocating_init(key:manager:)();
  type metadata accessor for CRLChangeSelectionFontStyleIntent();
  if (qword_10166FB50 != -1) {
    swift_once();
  }
  swift_beginAccess();
  id v48 = (id)static OS_os_log.appIntents;
  return Logger.init(_:)();
}

uint64_t sub_100BC108C@<X0>(uint64_t a1@<X8>)
{
  if (qword_10166FC40 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for LocalizedStringResource();
  uint64_t v3 = sub_100556B74(v2, (uint64_t)qword_10171BE00);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);

  return v4(a1, v3, v2);
}

uint64_t sub_100BC1138(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_100528488;
  return sub_100BBF754(a1);
}

uint64_t sub_100BC11D4(uint64_t a1)
{
  uint64_t result = sub_100BC19A8(&qword_101695E20, (void (*)(uint64_t))type metadata accessor for CRLChangeSelectionFontStyleIntent);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_100BC122C(uint64_t a1)
{
  uint64_t v2 = sub_100BC19A8(&qword_101695E20, (void (*)(uint64_t))type metadata accessor for CRLChangeSelectionFontStyleIntent);

  return static AppIntent.persistentIdentifier.getter(a1, v2);
}

uint64_t *sub_100BC1298(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v5 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a1;
    uint64_t v6 = a2[2];
    a1[1] = a2[1];
    a1[2] = v6;
    uint64_t v7 = *(int *)(a3 + 28);
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = type metadata accessor for Logger();
    uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
    swift_retain();
    swift_retain();
    swift_retain();
    v11(v8, v9, v10);
  }
  return v5;
}

uint64_t sub_100BC139C(uint64_t a1, uint64_t a2)
{
  swift_release();
  swift_release();
  swift_release();
  uint64_t v4 = a1 + *(int *)(a2 + 28);
  uint64_t v5 = type metadata accessor for Logger();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);

  return v6(v4, v5);
}

void *sub_100BC1424(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  a1[2] = a2[2];
  uint64_t v5 = *(int *)(a3 + 28);
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = type metadata accessor for Logger();
  uint64_t v9 = *(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 16);
  swift_retain();
  swift_retain();
  swift_retain();
  v9(v6, v7, v8);
  return a1;
}

void *sub_100BC14DC(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  uint64_t v6 = *(int *)(a3 + 28);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for Logger();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

uint64_t sub_100BC15A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  uint64_t v4 = *(int *)(a3 + 28);
  uint64_t v5 = a1 + v4;
  uint64_t v6 = a2 + v4;
  uint64_t v7 = type metadata accessor for Logger();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

void *sub_100BC1624(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_release();
  a1[1] = a2[1];
  swift_release();
  a1[2] = a2[2];
  swift_release();
  uint64_t v6 = *(int *)(a3 + 28);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for Logger();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  return a1;
}

uint64_t sub_100BC16D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100BC16E4);
}

uint64_t sub_100BC16E4(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for Logger();
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 28);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_100BC1794(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100BC17A8);
}

void *sub_100BC17A8(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for Logger();
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 28);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_100BC1850()
{
  uint64_t result = type metadata accessor for Logger();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_100BC18F0()
{
  return sub_100523288(&qword_101695EC0, &qword_101695EC8);
}

uint64_t sub_100BC192C()
{
  return sub_100523288(&qword_101673B10, &qword_101673B18);
}

unint64_t sub_100BC1968()
{
  unint64_t result = qword_101689390;
  if (!qword_101689390)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_101689390);
  }
  return result;
}

uint64_t sub_100BC19A8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100BC19F0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_100BC1A1C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_100BC1A48()
{
  uint64_t result = sub_100997AFC();
  if (!v1) {
    return 0;
  }
  return result;
}

uint64_t sub_100BC1A84()
{
  id v0 = [self mainBundle];
  NSString v1 = String._bridgeToObjectiveC()();
  NSString v2 = String._bridgeToObjectiveC()();
  id v3 = [v0 localizedStringForKey:v1 value:v2 table:0];

  uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  return v4;
}

uint64_t sub_100BC1B5C()
{
  return UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
}

void sub_100BC1BFC()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    NSString v1 = (void *)Strong;
    id v2 = *(id *)(Strong + OBJC_IVAR____TtC8Freeform29CRLiOSMiniFormatterURLBuilder_urlDataProvider);

    sub_100997D24();
  }
}

uint64_t sub_100BC1C68(uint64_t a1, uint64_t a2)
{
  sub_100522D7C(a2, (uint64_t)v8);
  type metadata accessor for CRLURLItem();
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_5;
  }
  uint64_t v4 = sub_1007FE0AC();
  if (!v4)
  {

LABEL_5:
    char v5 = sub_100897B28(a1, a2);
    return v5 & 1;
  }
  char v5 = sub_1006E5050(v7, v4);

  swift_bridgeObjectRelease();
  return v5 & 1;
}

void sub_100BC1D38()
{
}

id sub_100BC1D48()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLiOSMiniFormatterURLBuilder();
  return [super dealloc];
}

uint64_t type metadata accessor for CRLiOSMiniFormatterURLBuilder()
{
  return self;
}

uint64_t sub_100BC1DB0()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_100BC1DE8()
{
}

id sub_100BC1DF0(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, void *a5, void *a6)
{
  uint64_t v12 = (char *)objc_allocWithZone((Class)type metadata accessor for CRLMiniFormatterURLDataProvider());
  *(void *)&v12[OBJC_IVAR____TtC8Freeform28CRLMiniFormatterDataProvider_editorController] = a5;
  uint64_t v13 = (objc_class *)type metadata accessor for CRLMiniFormatterDataProvider();
  v22.receiver = v12;
  v22.super_class = v13;
  uint64_t v14 = v6;
  id v15 = a5;
  *(void *)&v14[OBJC_IVAR____TtC8Freeform29CRLiOSMiniFormatterURLBuilder_urlDataProvider] = [super init];

  uint64_t v16 = (char *)objc_allocWithZone((Class)type metadata accessor for CRLMiniFormatterMediaDataProvider());
  *(void *)&v16[OBJC_IVAR____TtC8Freeform28CRLMiniFormatterDataProvider_editorController] = v15;
  v21.receiver = v16;
  v21.super_class = v13;
  uint64_t v17 = v14;
  id v18 = v15;
  *(void *)&v17[OBJC_IVAR____TtC8Freeform31CRLiOSMiniFormatterMediaBuilder_mediaDataProvider] = [super init];

  return sub_100521CB4(a1, a2, a3, a4, v18, a6);
}

ValueMetadata *type metadata accessor for CRLTipSendCopy()
{
  return &type metadata for CRLTipSendCopy;
}

uint64_t sub_100BC1F28(uint64_t a1)
{
  return sub_100BC1F9C(a1, qword_10171BE18);
}

uint64_t sub_100BC1F54(uint64_t a1)
{
  return sub_100BC1F9C(a1, qword_10171BE30);
}

uint64_t sub_100BC1F78(uint64_t a1)
{
  return sub_100BC1F9C(a1, qword_10171BE48);
}

uint64_t sub_100BC1F9C(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = sub_1005057FC(&qword_10169FA10);
  sub_100568B28(v3, a2);
  sub_100556B74(v3, (uint64_t)a2);
  return Tips.Parameter.init<A>(_:_:_:_:)();
}

uint64_t sub_100BC2040@<X0>(uint64_t *a1@<X8>)
{
  return sub_100BC2050(0, a1);
}

uint64_t sub_100BC2048@<X0>(uint64_t *a1@<X8>)
{
  return sub_100BC2050(1, a1);
}

uint64_t sub_100BC2050@<X0>(char a1@<W1>, uint64_t *a2@<X8>)
{
  uint64_t v4 = sub_1005057FC(&qword_10167A358);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4, v6);
  uint64_t v8 = &v15[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = sub_1005057FC(&qword_10167A360);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9, v11);
  uint64_t v13 = &v15[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_100523288(&qword_10167A368, &qword_10167A360);
  static PredicateExpressions.build_Arg<A>(_:)();
  v15[15] = a1;
  static PredicateExpressions.build_Arg<A>(_:)();
  a2[3] = sub_1005057FC(&qword_10167A370);
  a2[4] = sub_1006A14B4();
  sub_1005767BC(a2);
  sub_100523288(&qword_10167A390, &qword_10167A358);
  static PredicateExpressions.build_Equal<A, B>(lhs:rhs:)();
  (*(void (**)(unsigned char *, uint64_t))(v5 + 8))(v8, v4);
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v10 + 8))(v13, v9);
}

uint64_t sub_100BC2294()
{
  return sub_100BC2358();
}

uint64_t sub_100BC22C0@<X0>(uint64_t *a1@<X8>)
{
  sub_1005C75F8();
  uint64_t result = Tip.id.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

unint64_t sub_100BC2304()
{
  unint64_t result = qword_101695F30;
  if (!qword_101695F30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101695F30);
  }
  return result;
}

uint64_t sub_100BC2358()
{
  id v0 = [self mainBundle];
  NSString v1 = String._bridgeToObjectiveC()();
  NSString v2 = String._bridgeToObjectiveC()();
  id v3 = [v0 localizedStringForKey:v1 value:v2 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  sub_10052E310();
  return Text.init<A>(_:)();
}

uint64_t sub_100BC2448()
{
  id v0 = [self mainBundle];
  NSString v1 = String._bridgeToObjectiveC()();
  NSString v2 = String._bridgeToObjectiveC()();
  id v3 = [v0 localizedStringForKey:v1 value:v2 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  sub_10052E310();
  return Text.init<A>(_:)();
}

uint64_t sub_100BC2538()
{
  uint64_t v0 = sub_1005057FC(&qword_10169FA10);
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0, v2);
  uint64_t v4 = (char *)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for Tips.Rule();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5, v7);
  uint64_t v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10166FC48 != -1) {
    swift_once();
  }
  uint64_t v10 = sub_100556B74(v0, (uint64_t)qword_10171BE18);
  swift_beginAccess();
  uint64_t v11 = *(void (**)(char *, uint64_t, uint64_t))(v1 + 16);
  v11(v4, v10, v0);
  Tips.Rule.init<A>(_:_:)();
  uint64_t v17 = static Tips.RuleBuilder.buildExpression(_:)();
  uint64_t v12 = *(void (**)(char *, uint64_t))(v6 + 8);
  v12(v9, v5);
  if (qword_10166FC50 != -1) {
    swift_once();
  }
  uint64_t v13 = sub_100556B74(v0, (uint64_t)qword_10171BE30);
  swift_beginAccess();
  v11(v4, v13, v0);
  Tips.Rule.init<A>(_:_:)();
  static Tips.RuleBuilder.buildExpression(_:)();
  v12(v9, v5);
  if (qword_10166FC58 != -1) {
    swift_once();
  }
  uint64_t v14 = sub_100556B74(v0, (uint64_t)qword_10171BE48);
  swift_beginAccess();
  v11(v4, v14, v0);
  Tips.Rule.init<A>(_:_:)();
  static Tips.RuleBuilder.buildExpression(_:)();
  v12(v9, v5);
  static Tips.RuleBuilder.buildPartialBlock(first:)();
  swift_bridgeObjectRelease();
  static Tips.RuleBuilder.buildPartialBlock(accumulated:next:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v15 = static Tips.RuleBuilder.buildPartialBlock(accumulated:next:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v15;
}

id sub_100BC2990()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLFileLayout();
  return [super dealloc];
}

uint64_t type metadata accessor for CRLFileLayout()
{
  return self;
}

uint64_t sub_100BC29E8()
{
  swift_bridgeObjectRelease();
  sub_100BC2CFC(v0 + OBJC_IVAR____TtCC8Freeform17CRLStencilLibrary8ItemData_metadata);

  return swift_deallocClassInstance();
}

uint64_t sub_100BC2A54()
{
  return _s8ItemDataCMa();
}

uint64_t _s8ItemDataCMa()
{
  uint64_t result = qword_101695F88;
  if (!qword_101695F88) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100BC2AA8()
{
  uint64_t result = _s13ItemViewModelVMa();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

Swift::Int sub_100BC2B48()
{
  uint64_t v1 = *v0;
  Hasher.init(_seed:)();
  sub_100A450A4((uint64_t)v3, *(void *)(v1 + 16));
  sub_100BD26EC(v3);
  return Hasher._finalize()();
}

uint64_t sub_100BC2BA4(long long *a1)
{
  sub_100A450A4((uint64_t)a1, *(void *)(*(void *)v1 + 16));
  return sub_100BD26EC(a1);
}

Swift::Int sub_100BC2BE4()
{
  Hasher.init(_seed:)();
  sub_100A450A4((uint64_t)v2, *(void *)(*(void *)v0 + 16));
  sub_100BD26EC(v2);
  return Hasher._finalize()();
}

uint64_t sub_100BC2C3C(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *a2;
  if ((sub_100A3D424(*(void *)(*a1 + 16), *(void *)(*a2 + 16)) & 1) == 0) {
    return 0;
  }
  uint64_t v4 = v2 + OBJC_IVAR____TtCC8Freeform17CRLStencilLibrary8ItemData_metadata;
  uint64_t v5 = v3 + OBJC_IVAR____TtCC8Freeform17CRLStencilLibrary8ItemData_metadata;

  return sub_100BD2A3C(v4, v5);
}

unint64_t sub_100BC2CA4()
{
  unint64_t result = qword_101696030;
  if (!qword_101696030)
  {
    _s8ItemDataCMa();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101696030);
  }
  return result;
}

uint64_t sub_100BC2CFC(uint64_t a1)
{
  uint64_t v2 = _s13ItemViewModelVMa();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100BC2D58()
{
  qword_10171BE68 = 97;
  unk_10171BE70 = 0xE100000000000000;
  uint64_t result = swift_getKeyPath();
  qword_10171BE78 = result;
  return result;
}

uint64_t sub_100BC2D98@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + qword_10171BE80;
  swift_beginAccess();
  return sub_100BC5C78(v3, a1);
}

uint64_t (*sub_100BC2DEC())()
{
  return j__swift_endAccess;
}

uint64_t sub_100BC2E48()
{
  type metadata accessor for UUID();
  sub_100BC5964((unint64_t *)&qword_1016770E0, (void (*)(uint64_t))&type metadata accessor for UUID);

  return static CROrderedSet.== infix(_:_:)();
}

uint64_t sub_100BC2EDC()
{
  if (qword_10166FC60 != -1) {
    swift_once();
  }
  uint64_t v0 = qword_10171BE68;
  swift_bridgeObjectRetain();
  swift_retain();
  return v0;
}

uint64_t sub_100BC2F5C(uint64_t a1)
{
  uint64_t v2 = sub_100BC5964(&qword_101683EC8, (void (*)(uint64_t))type metadata accessor for CRLContainerItemCRDTData);

  return static CRStruct_1.fieldKeys.getter(a1, v2);
}

uint64_t sub_100BC2FC8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)(a2 + *(int *)(a1 + 20)) = _swiftEmptyDictionarySingleton;
  type metadata accessor for UUID();
  sub_100BC5964((unint64_t *)&qword_1016770E0, (void (*)(uint64_t))&type metadata accessor for UUID);

  return CROrderedSet.init()();
}

uint64_t sub_100BC305C(uint64_t a1)
{
  uint64_t v2 = sub_100BC5964(&qword_101683E98, (void (*)(uint64_t))type metadata accessor for CRLContainerItemCRDTData);

  return CRType.context.getter(a1, v2);
}

uint64_t sub_100BC30C8()
{
  sub_100BC5964(&qword_101683EC8, (void (*)(uint64_t))type metadata accessor for CRLContainerItemCRDTData);

  return CRStruct_1.actionUndoingDifference(from:)();
}

uint64_t sub_100BC314C()
{
  sub_100BC5964(&qword_101683EC8, (void (*)(uint64_t))type metadata accessor for CRLContainerItemCRDTData);

  return CRStruct_1.apply(_:)();
}

uint64_t sub_100BC31C8()
{
  sub_100BC5964(&qword_101683EC8, (void (*)(uint64_t))type metadata accessor for CRLContainerItemCRDTData);

  return CRStruct_1.hasDelta(from:)();
}

uint64_t sub_100BC3244()
{
  sub_100BC5964(&qword_101683EC8, (void (*)(uint64_t))type metadata accessor for CRLContainerItemCRDTData);

  return CRStruct_1.delta(_:from:)();
}

uint64_t sub_100BC32D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100BC5964(&qword_101683EC8, (void (*)(uint64_t))type metadata accessor for CRLContainerItemCRDTData);

  return CRStruct_1.canMerge(delta:)(a1, a2, v4);
}

uint64_t sub_100BC3354()
{
  sub_100BC5964(&qword_101683EC8, (void (*)(uint64_t))type metadata accessor for CRLContainerItemCRDTData);

  return CRStruct_1.merge(delta:)();
}

uint64_t sub_100BC33D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100BC5964(&qword_101683EC8, (void (*)(uint64_t))type metadata accessor for CRLContainerItemCRDTData);

  return CRStruct_1.copy(renamingReferences:)(a1, a2, v4);
}

uint64_t sub_100BC3454(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100BC5964(&qword_101683EC8, (void (*)(uint64_t))type metadata accessor for CRLContainerItemCRDTData);

  return CRStruct_1.copy(renamingReferences:)(a1, a2, v4);
}

uint64_t sub_100BC34D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_100BC5964(&qword_101683EC8, (void (*)(uint64_t))type metadata accessor for CRLContainerItemCRDTData);

  return CRStruct_1.observableDifference(from:with:)(a1, a2, a3, v6);
}

uint64_t sub_100BC356C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100BC5964(&qword_101683EC8, (void (*)(uint64_t))type metadata accessor for CRLContainerItemCRDTData);

  return CRStruct_1.visitReferences(_:)(a1, a2, v4);
}

BOOL sub_100BC35E8()
{
  sub_100BC5964(&qword_101683EC8, (void (*)(uint64_t))type metadata accessor for CRLContainerItemCRDTData);

  return CRStruct_1.needToFinalizeTimestamps()();
}

uint64_t sub_100BC3654(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100BC5964(&qword_101683EC8, (void (*)(uint64_t))type metadata accessor for CRLContainerItemCRDTData);

  return CRStruct_1.finalizeTimestamps(_:)(a1, a2, v4);
}

uint64_t sub_100BC36D0()
{
  sub_100BC5964(&qword_101683EC8, (void (*)(uint64_t))type metadata accessor for CRLContainerItemCRDTData);

  return CRStruct_1.merge(_:)();
}

uint64_t sub_100BC374C()
{
  return CRDT.serializedData(_:version:)();
}

uint64_t sub_100BC37CC()
{
  return CRDT.init(serializedData:)();
}

uint64_t sub_100BC385C()
{
  return CRStruct_1.init(from:)();
}

uint64_t sub_100BC38DC()
{
  return CRStruct_1.encode(to:)();
}

uint64_t sub_100BC3954(uint64_t a1)
{
  uint64_t v2 = sub_100BC5964(&qword_101683EC8, (void (*)(uint64_t))type metadata accessor for CRLContainerItemCRDTData);

  return CRStruct_1.minEncodingVersion.getter(a1, v2);
}

uint64_t sub_100BC39D0()
{
  uint64_t v1 = type metadata accessor for CRLContainerItemCRDTData(0);
  __chkstk_darwin(v1, v2);
  uint64_t v4 = &v8[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  type metadata accessor for CRLContainerItemData(0);
  uint64_t result = swift_dynamicCastClass();
  if (result)
  {
    (*(void (**)(void))(*(void *)result + 680))();
    uint64_t v6 = *(uint64_t (**)(unsigned char *))(*(void *)v0 + 696);
    swift_retain();
    uint64_t v7 = (void (*)(unsigned char *, void))v6(v8);
    sub_100BC5964(&qword_101683EC8, (void (*)(uint64_t))type metadata accessor for CRLContainerItemCRDTData);
    CRStruct_1.merge(_:)();
    sub_100BC5B8C((uint64_t)v4);
    v7(v8, 0);
    return swift_release();
  }
  return result;
}

void *sub_100BC3B68(char a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for CRLContainerItemCRDTData(0);
  __chkstk_darwin(v4, v5);
  uint64_t v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8, v9);
  uint64_t v11 = (char *)&v30 - v10;
  uint64_t v12 = sub_1005057FC((uint64_t *)&unk_101683E10);
  __chkstk_darwin(v12, v13);
  uint64_t v15 = (char *)&v30 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16, v17);
  uint64_t v19 = (char *)&v30 - v18;
  uint64_t v20 = (uint64_t)v2 + *(void *)(*v2 + 632);
  swift_beginAccess();
  if (a1)
  {
    sub_100522E9C(v20, (uint64_t)v15, (uint64_t *)&unk_101683E10);
    sub_100523288((unint64_t *)&qword_1016737D8, (uint64_t *)&unk_101683E10);
    CRType.copy(renamingReferences:)();
    uint64_t v21 = sub_100522F00((uint64_t)v15, (uint64_t *)&unk_101683E10);
    (*(void (**)(uint64_t))(*v1 + 680))(v21);
    sub_100BC5964(&qword_101683E98, (void (*)(uint64_t))type metadata accessor for CRLContainerItemCRDTData);
    CRType.copy(renamingReferences:)();
    sub_100BC5B8C((uint64_t)v7);
  }
  else
  {
    uint64_t v22 = sub_100522E9C(v20, (uint64_t)v19, (uint64_t *)&unk_101683E10);
    (*(void (**)(uint64_t))(*v1 + 680))(v22);
  }
  uint64_t v23 = v1[4];
  uint64_t v24 = v2[5];
  uint64_t v27 = v2 + 2;
  uint64_t v25 = v2[2];
  uint64_t v26 = v27[1];
  type metadata accessor for CRLContainerItemData(0);
  uint64_t v28 = swift_allocObject();
  sub_100BC5C14((uint64_t)v11, v28 + qword_10171BE80);
  sub_100B75378((uint64_t)v19, v28 + *(void *)(*(void *)v28 + 632));
  return sub_10068B398(v26, v23, v24, v25);
}

uint64_t sub_100BC3E7C()
{
  uint64_t v1 = type metadata accessor for CRLContainerItemCRDTData(0);
  __chkstk_darwin(v1 - 8, v2);
  uint64_t v4 = &v25[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v5, v6);
  uint64_t v8 = &v25[-v7];
  uint64_t v9 = sub_1005057FC((uint64_t *)&unk_101683E10);
  __chkstk_darwin(v9 - 8, v10);
  uint64_t v12 = &v25[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v13, v14);
  uint64_t v16 = &v25[-v15];
  type metadata accessor for CRLContainerItemData(0);
  uint64_t v17 = swift_dynamicCastClass();
  if (!v17) {
    goto LABEL_5;
  }
  uint64_t v18 = v17;
  uint64_t v19 = v0 + *(void *)(*(void *)v0 + 632);
  swift_beginAccess();
  sub_100522E9C(v19, (uint64_t)v16, (uint64_t *)&unk_101683E10);
  uint64_t v20 = v18 + *(void *)(*(void *)v18 + 632);
  swift_beginAccess();
  sub_100522E9C(v20, (uint64_t)v12, (uint64_t *)&unk_101683E10);
  swift_retain();
  LOBYTE(v20) = sub_100FC1F68((uint64_t)v16, (uint64_t)v12);
  sub_100522F00((uint64_t)v12, (uint64_t *)&unk_101683E10);
  uint64_t v21 = sub_100522F00((uint64_t)v16, (uint64_t *)&unk_101683E10);
  if ((v20 & 1) == 0)
  {
    swift_release();
LABEL_5:
    char v23 = 0;
    return v23 & 1;
  }
  uint64_t v22 = (*(uint64_t (**)(uint64_t))(*(void *)v0 + 680))(v21);
  (*(void (**)(uint64_t))(*(void *)v18 + 680))(v22);
  type metadata accessor for UUID();
  sub_100BC5964((unint64_t *)&qword_1016770E0, (void (*)(uint64_t))&type metadata accessor for UUID);
  char v23 = static CROrderedSet.== infix(_:_:)();
  swift_release();
  sub_100BC5B8C((uint64_t)v4);
  sub_100BC5B8C((uint64_t)v8);
  return v23 & 1;
}

uint64_t sub_100BC415C(uint64_t a1, char a2)
{
  uint64_t v4 = type metadata accessor for CRLContainerItemCRDTData(0);
  __chkstk_darwin(v4, v5);
  uint64_t v7 = (char *)v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v10 = __chkstk_darwin(v8, v9);
  uint64_t v12 = (char *)v16 - v11;
  (*(void (**)(__n128))(*(void *)v2 + 680))(v10);
  if (a2)
  {
    sub_100BC5964(&qword_101683E98, (void (*)(uint64_t))type metadata accessor for CRLContainerItemCRDTData);
    CRType.copy(renamingReferences:)();
    sub_100BC5B8C((uint64_t)v7);
  }
  if (qword_10166EE10 != -1) {
    swift_once();
  }
  uint64_t v13 = type metadata accessor for CRCodableVersion();
  sub_100556B74(v13, (uint64_t)qword_10171A2D8);
  sub_100BC5964(&qword_10168B268, (void (*)(uint64_t))type metadata accessor for CRLContainerItemCRDTData);
  uint64_t v14 = CRDT.serializedData(_:version:)();
  sub_100BC5B8C((uint64_t)v12);
  return v14;
}

uint64_t sub_100BC436C()
{
  uint64_t v1 = type metadata accessor for CRLContainerItemCRDTData(0);
  __chkstk_darwin(v1, v2);
  uint64_t v4 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5, v6);
  uint64_t v8 = (char *)&v14 - v7;
  type metadata accessor for CRLContainerItemData(0);
  uint64_t v9 = swift_dynamicCastClass();
  if (v9)
  {
    uint64_t v10 = v9;
    uint64_t v11 = (*(uint64_t (**)(void))(*(void *)v0 + 680))();
    (*(void (**)(uint64_t))(*(void *)v10 + 680))(v11);
    sub_100BC5964(&qword_101683EC8, (void (*)(uint64_t))type metadata accessor for CRLContainerItemCRDTData);
    char v12 = CRStruct_1.hasDelta(from:)();
    sub_100BC5B8C((uint64_t)v4);
    sub_100BC5B8C((uint64_t)v8);
    return v12 & 1;
  }
  else
  {
    uint64_t result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
  return result;
}

uint64_t sub_100BC454C(uint64_t a1, uint64_t a2)
{
  v28[1] = a2;
  uint64_t v3 = *v2;
  uint64_t v4 = type metadata accessor for CRLContainerItemCRDTData(0);
  __chkstk_darwin(v4, v5);
  uint64_t v7 = (char *)v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8, v9);
  uint64_t v11 = (char *)v28 - v10;
  uint64_t v12 = sub_1005057FC(&qword_101696410);
  __chkstk_darwin(v12 - 8, v13);
  uint64_t v15 = (char *)v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16, v17);
  uint64_t v19 = (char *)v28 - v18;
  uint64_t v20 = swift_dynamicCastClass();
  if (v20)
  {
    uint64_t v21 = v20;
    uint64_t v22 = (*(uint64_t (**)(void))(v3 + 680))();
    (*(void (**)(uint64_t))(*(void *)v21 + 680))(v22);
    sub_100BC5964(&qword_101683EC8, (void (*)(uint64_t))type metadata accessor for CRLContainerItemCRDTData);
    swift_retain();
    CRStruct_1.delta(_:from:)();
    sub_100BC5B8C((uint64_t)v7);
    sub_100BC5B8C((uint64_t)v11);
    sub_100522E9C((uint64_t)v19, (uint64_t)v15, &qword_101696410);
    uint64_t v23 = sub_1005057FC(&qword_1016963F8);
    uint64_t v24 = *(void *)(v23 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v15, 1, v23) == 1)
    {
      sub_100522F00((uint64_t)v19, &qword_101696410);
      swift_release();
      sub_100522F00((uint64_t)v15, &qword_101696410);
      return 0;
    }
    else
    {
      if (qword_10166EE10 != -1) {
        swift_once();
      }
      uint64_t v26 = type metadata accessor for CRCodableVersion();
      sub_100556B74(v26, (uint64_t)qword_10171A2D8);
      sub_100523288(&qword_1016963F0, &qword_1016963F8);
      uint64_t v25 = PartialCRDT.deltaSerializedData(_:version:)();
      swift_release();
      sub_100522F00((uint64_t)v19, &qword_101696410);
      (*(void (**)(char *, uint64_t))(v24 + 8))(v15, v23);
    }
    return v25;
  }
  else
  {
    uint64_t result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
  return result;
}

uint64_t sub_100BC4984(uint64_t a1, unint64_t a2)
{
  uint64_t v4 = sub_1005057FC((uint64_t *)&unk_101683E10);
  __chkstk_darwin(v4 - 8, v5);
  uint64_t v7 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for UUID();
  uint64_t v42 = *(void *)(v8 - 8);
  __chkstk_darwin(v8, v9);
  uint64_t v11 = (char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1005057FC(&qword_1016963F8);
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12, v14);
  uint64_t v16 = (char *)&v35 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100510D4C(a1, a2);
  sub_100523288(&qword_1016963F0, &qword_1016963F8);
  uint64_t v17 = v44;
  PartialCRDT.init(serializedData:)();
  if (!v17)
  {
    uint64_t v41 = 0;
    unint64_t v38 = v11;
    int64_t v39 = v7;
    uint64_t v40 = v8;
    uint64_t v44 = v13;
    uint64_t v18 = v43;
    uint64_t v19 = (void (*)(unsigned char *, void))(*(uint64_t (**)(unsigned char *))(*(void *)v43 + 696))(v45);
    type metadata accessor for CRLContainerItemCRDTData(0);
    sub_100BC5964(&qword_101683EC8, (void (*)(uint64_t))type metadata accessor for CRLContainerItemCRDTData);
    LOBYTE(v11) = CRStruct_1.merge(delta:)();
    v19(v45, 0);
    if ((v11 & 1) == 0)
    {
      uint64_t v36 = v16;
      uint64_t v37 = v12;
      if (qword_10166FBA0 != -1) {
        swift_once();
      }
      swift_beginAccess();
      uint64_t v20 = (void *)static OS_os_log.realTimeSync;
      sub_1005057FC((uint64_t *)&unk_101672B40);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_10117D8C0;
      uint64_t v22 = v18 + *(void *)(*(void *)v18 + 632);
      swift_beginAccess();
      uint64_t v23 = v22;
      uint64_t v24 = (uint64_t)v39;
      sub_100522E9C(v23, (uint64_t)v39, (uint64_t *)&unk_101683E10);
      id v25 = v20;
      sub_1005057FC(&qword_101674550);
      uint64_t v26 = v38;
      CRRegister.wrappedValue.getter();
      sub_100522F00(v24, (uint64_t *)&unk_101683E10);
      uint64_t v27 = UUID.uuidString.getter();
      uint64_t v29 = v28;
      (*(void (**)(char *, uint64_t))(v42 + 8))(v26, v40);
      *(void *)(inited + 56) = &type metadata for String;
      unint64_t v30 = sub_100528BE4();
      *(void *)(inited + 64) = v30;
      *(void *)(inited + 32) = v27;
      *(void *)(inited + 40) = v29;
      uint64_t v46 = v18;
      type metadata accessor for CRLContainerItemData(0);
      swift_retain();
      uint64_t v31 = String.init<A>(describing:)();
      *(void *)(inited + 96) = &type metadata for String;
      *(void *)(inited + 104) = v30;
      *(void *)(inited + 72) = v31;
      *(void *)(inited + 80) = v32;
      uint64_t v33 = static os_log_type_t.error.getter();
      sub_100BAC898((uint64_t)v25, (uint64_t)&_mh_execute_header, v33, (uint64_t)"Delta failed to apply for %{public}@%{public}@", 46, 2, inited);
      swift_setDeallocating();
      sub_1005057FC(&qword_101672B50);
      swift_arrayDestroy();

      uint64_t v12 = v37;
      uint64_t v16 = v36;
    }
    (*(void (**)(char *, uint64_t))(v44 + 8))(v16, v12);
  }
  return v11 & 1;
}

uint64_t sub_100BC4E74(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for CRLContainerItemCRDTData(0);
  __chkstk_darwin(v4 - 8, v5);
  uint64_t v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1005057FC((uint64_t *)&unk_101683E40);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8, v10);
  uint64_t v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v15 = __chkstk_darwin(v13, v14);
  uint64_t v17 = (char *)&v25 - v16;
  if (*(unsigned char *)(a1 + OBJC_IVAR____TtC8Freeform18CRLUUIDRemapHelper_shouldResetObjectUUIDs))
  {
    (*(void (**)(__n128))(*(void *)v1 + 680))(v15);
    uint64_t v18 = (*(uint64_t (**)(char *, char *, uint64_t))(v9 + 16))(v12, v7, v8);
    uint64_t v26 = a1;
    __chkstk_darwin(v18, v19);
    *(&v25 - 2) = v26;
    uint64_t v25 = type metadata accessor for UUID();
    uint64_t v20 = v28;
    uint64_t v21 = CROrderedSet.map<A>(_:)();
    uint64_t v28 = v20;
    (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
    sub_100BC5B8C((uint64_t)v7);
    v27[0] = v21;
    sub_1005057FC(&qword_101683E60);
    sub_100BC5964((unint64_t *)&qword_1016770E0, (void (*)(uint64_t))&type metadata accessor for UUID);
    sub_100523288(&qword_101683E68, &qword_101683E60);
    CROrderedSet.init<A>(_:)();
    uint64_t v22 = (void (*)(void *, void))(*(uint64_t (**)(void *))(*(void *)v2 + 696))(v27);
    (*(void (**)(uint64_t, char *, uint64_t))(v9 + 40))(v23, v17, v8);
    v22(v27, 0);
    a1 = v26;
  }
  swift_beginAccess();
  sub_100F99CA4(a1);
  return swift_endAccess();
}

uint64_t sub_100BC5208()
{
  return sub_100BC5B8C(v0 + qword_10171BE80);
}

uint64_t sub_100BC5218()
{
  sub_100522F00(v0 + *(void *)(*(void *)v0 + 632), (uint64_t *)&unk_101683E10);
  sub_100BC5B8C(v0 + qword_10171BE80);

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for CRLContainerItemData(uint64_t a1)
{
  return sub_100512D5C(a1, qword_101696060);
}

uint64_t sub_100BC52C0()
{
  uint64_t result = type metadata accessor for CRLContainerItemCRDTData(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for CRLContainerItemCRDTData(uint64_t a1)
{
  return sub_100512D5C(a1, qword_1016963A8);
}

uint64_t *sub_100BC5370(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1005057FC((uint64_t *)&unk_101683E40);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_100BC5444(uint64_t a1)
{
  uint64_t v2 = sub_1005057FC((uint64_t *)&unk_101683E40);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);

  return swift_bridgeObjectRelease();
}

uint64_t sub_100BC54BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1005057FC((uint64_t *)&unk_101683E40);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_100BC5540(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1005057FC((uint64_t *)&unk_101683E40);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_100BC55D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1005057FC((uint64_t *)&unk_101683E40);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_100BC5650(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1005057FC((uint64_t *)&unk_101683E40);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_100BC56D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100BC56EC);
}

uint64_t sub_100BC56EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1005057FC((uint64_t *)&unk_101683E40);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_100BC57B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100BC57C4);
}

uint64_t sub_100BC57C4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_1005057FC((uint64_t *)&unk_101683E40);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
  return result;
}

void sub_100BC5884()
{
  sub_10066A43C();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_100BC591C()
{
  return sub_100BC5964(&qword_1016963E0, (void (*)(uint64_t))type metadata accessor for CRLContainerItemCRDTData);
}

uint64_t sub_100BC5964(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100BC59AC()
{
  return sub_100BC5964(&qword_1016963E8, (void (*)(uint64_t))type metadata accessor for CRLContainerItemCRDTData);
}

uint64_t sub_100BC59F4()
{
  return sub_100BC5964(&qword_101683E98, (void (*)(uint64_t))type metadata accessor for CRLContainerItemCRDTData);
}

uint64_t sub_100BC5A3C()
{
  return sub_100523288(&qword_1016963F0, &qword_1016963F8);
}

uint64_t sub_100BC5A78()
{
  return sub_100BC5964(&qword_10168B268, (void (*)(uint64_t))type metadata accessor for CRLContainerItemCRDTData);
}

uint64_t sub_100BC5AC0()
{
  return sub_100BC5964(&qword_101696400, (void (*)(uint64_t))type metadata accessor for CRLContainerItemCRDTData);
}

uint64_t sub_100BC5B08()
{
  return sub_100523288(&qword_101678990, (uint64_t *)&unk_101683E40);
}

uint64_t sub_100BC5B44()
{
  return sub_100BC5964(&qword_101696408, (void (*)(uint64_t))type metadata accessor for CRLContainerItemCRDTData);
}

uint64_t sub_100BC5B8C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for CRLContainerItemCRDTData(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100BC5BE8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100A68D30(a1, a2);
}

uint64_t sub_100BC5C14(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CRLContainerItemCRDTData(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100BC5C78(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CRLContainerItemCRDTData(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100BC5CDC()
{
  sub_100BC5EA0(v0 + OBJC_IVAR____TtC8Freeform12CRLSELibrary_libraryNode);
  sub_100BC5EA0(v0 + OBJC_IVAR____TtC8Freeform12CRLSELibrary_allBoards);
  sub_100BC5EA0(v0 + OBJC_IVAR____TtC8Freeform12CRLSELibrary_recents);

  return swift_deallocClassInstance();
}

uint64_t sub_100BC5D60()
{
  return type metadata accessor for CRLSELibrary();
}

uint64_t type metadata accessor for CRLSELibrary()
{
  uint64_t result = qword_101696448;
  if (!qword_101696448) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_100BC5DB4()
{
  sub_100BC5E48();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_100BC5E48()
{
  if (!qword_101696458)
  {
    type metadata accessor for CRLSELibraryViewModeItemNode(255);
    unint64_t v0 = type metadata accessor for Optional();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_101696458);
    }
  }
}

uint64_t sub_100BC5EA0(uint64_t a1)
{
  uint64_t v2 = sub_1005057FC(&qword_10168D428);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

ValueMetadata *type metadata accessor for CRLFreehandDrawingShapeType()
{
  return &type metadata for CRLFreehandDrawingShapeType;
}

uint64_t sub_100BC5F10(uint64_t a1)
{
  uint64_t v1 = a1;
  switch(a1)
  {
    case 0:
      return v1;
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
      id v2 = [self mainBundle];
      NSString v3 = String._bridgeToObjectiveC()();
      NSString v4 = String._bridgeToObjectiveC()();
      id v5 = [v2 localizedStringForKey:v3 value:v4 table:0];

      uint64_t v1 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      break;
    default:
      _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)();
      __break(1u);
      JUMPOUT(0x100BC63E4);
  }
  return v1;
}

uint64_t sub_100BC6418(uint64_t a1, uint64_t a2)
{
  switch(a2)
  {
    case 0:
      NSString v3 = (objc_class *)[self mainBundle];
      unint64_t v4 = 0xD000000000000013;
      unint64_t v5 = 0xD000000000000045;
      unint64_t v15 = 0x8000000101278EA0;
      uint64_t v6 = "%lu freehand shapes";
      goto LABEL_17;
    case 1:
      NSString v3 = (objc_class *)[self mainBundle];
      unint64_t v15 = 0x8000000101278E50;
      unint64_t v4 = 0x6C61766F20756C25;
      unint64_t v8 = 0xE900000000000073;
      v9.super.Class isa = v3;
      uint64_t v10 = 0;
      unint64_t v11 = 0xE000000000000000;
      unint64_t v5 = 0xD00000000000002ALL;
      goto LABEL_19;
    case 2:
      NSString v3 = (objc_class *)[self mainBundle];
      unint64_t v5 = 0xD00000000000002FLL;
      unint64_t v15 = 0x8000000101278E20;
      unint64_t v4 = 0x7463657220756C25;
      unint64_t v8 = 0xEE0073656C676E61;
      break;
    case 3:
      NSString v3 = (objc_class *)[self mainBundle];
      unint64_t v5 = 0xD00000000000002ELL;
      unint64_t v15 = 0x8000000101278DF0;
      unint64_t v4 = 0x6169727420756C25;
      unsigned int v7 = 1701603182;
      goto LABEL_10;
    case 4:
      NSString v3 = (objc_class *)[self mainBundle];
      unint64_t v5 = 0xD00000000000002ELL;
      unint64_t v15 = 0x8000000101278DC0;
      unint64_t v4 = 0x746E657020756C25;
      unsigned int v7 = 1852794721;
LABEL_10:
      unint64_t v8 = v7 | 0xED00007300000000;
      break;
    case 5:
      NSString v3 = (objc_class *)[self mainBundle];
      unint64_t v5 = 0xD000000000000031;
      unint64_t v8 = 0xEA00000000007377;
      unint64_t v15 = 0x8000000101278D80;
      unint64_t v4 = 0x6F72726120756C25;
      break;
    case 6:
      NSString v3 = (objc_class *)[self mainBundle];
      unint64_t v5 = 0xD000000000000037;
      unint64_t v15 = 0x8000000101278D40;
      unint64_t v4 = 0x656E696C20756C25;
      goto LABEL_15;
    case 7:
      NSString v3 = (objc_class *)[self mainBundle];
      unint64_t v5 = 0xD00000000000004BLL;
      unint64_t v15 = 0x8000000101278CF0;
      unint64_t v8 = 0x8000000101278CC0;
      unint64_t v4 = 0xD00000000000002ALL;
      break;
    case 8:
      NSString v3 = (objc_class *)[self mainBundle];
      unint64_t v5 = 0xD000000000000030;
      unint64_t v15 = 0x8000000101278C80;
      unint64_t v4 = 0x7261747320756C25;
LABEL_15:
      unint64_t v8 = 0xE900000000000073;
      break;
    case 9:
      NSString v3 = (objc_class *)[self mainBundle];
      unint64_t v5 = 0xD000000000000031;
      unint64_t v8 = 0xEA00000000007374;
      unint64_t v15 = 0x8000000101278C40;
      unint64_t v4 = 0x7261656820756C25;
      break;
    case 10:
      NSString v3 = (objc_class *)[self mainBundle];
      unint64_t v4 = 0xD000000000000010;
      unint64_t v5 = 0xD000000000000037;
      unint64_t v15 = 0x8000000101278C00;
      uint64_t v6 = "%lu chat bubbles";
      goto LABEL_17;
    case 11:
      NSString v3 = (objc_class *)[self mainBundle];
      unint64_t v4 = 0xD000000000000012;
      unint64_t v5 = 0xD000000000000039;
      unint64_t v15 = 0x8000000101278BA0;
      uint64_t v6 = "%lu outline arrows";
LABEL_17:
      unint64_t v8 = (unint64_t)(v6 - 32) | 0x8000000000000000;
      break;
    case 12:
      NSString v3 = (objc_class *)[self mainBundle];
      unint64_t v5 = 0xD000000000000050;
      unint64_t v15 = 0x8000000101278B20;
      unint64_t v4 = 0x756F6C6320756C25;
      unint64_t v8 = 0xEA00000000007364;
      break;
    default:
      _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)();
      __break(1u);
      JUMPOUT(0x100BC6A14);
  }
  v9.super.Class isa = v3;
  uint64_t v10 = 0;
  unint64_t v11 = 0xE000000000000000;
LABEL_19:
  NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v4, (Swift::String_optional)0, v9, *(Swift::String *)&v10, *(Swift::String *)&v5);

  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_10117E810;
  *(void *)(v12 + 56) = &type metadata for UInt;
  *(void *)(v12 + 64) = &protocol witness table for UInt;
  *(void *)(v12 + 32) = a1;
  uint64_t v13 = static String.localizedStringWithFormat(_:_:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v13;
}

unint64_t sub_100BC6A48@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t result = sub_100BC6D88(*a1);
  *(void *)a2 = result;
  *(unsigned char *)(a2 + 8) = v4 & 1;
  return result;
}

unint64_t sub_100BC6A80()
{
  unint64_t result = qword_101696568;
  if (!qword_101696568)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101696568);
  }
  return result;
}

unint64_t sub_100BC6AD4@<X0>(unint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_100BC7034(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_100BC6B00()
{
  return RawRepresentable<>.init(from:)();
}

uint64_t sub_100BC6B60()
{
  return RawRepresentable<>.encode(to:)();
}

uint64_t sub_100BC6BB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_100BC7098();
  unint64_t v7 = sub_100BC6FE0();

  return CRValue<>.observableDifference(from:with:)(a1, a2, a3, v6, v7);
}

uint64_t sub_100BC6C20()
{
  return CRValue<>.init(from:)();
}

uint64_t sub_100BC6C8C()
{
  return CRValue<>.encode(to:)();
}

uint64_t sub_100BC6CE8(uint64_t a1)
{
  unint64_t v2 = sub_100BC7098();
  unint64_t v3 = sub_100BC7044();

  return CRValue<>.minEncodingVersion.getter(a1, v2, v3, &protocol witness table for Int);
}

unint64_t sub_100BC6D48(unint64_t result)
{
  if (result >= 0xD)
  {
    unint64_t result = _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)();
    __break(1u);
  }
  return result;
}

unint64_t sub_100BC6D88(unint64_t result)
{
  if (result > 0xC) {
    return 0;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for CRLFreehandDrawingShapeTypeData(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF4) {
    goto LABEL_17;
  }
  if (a2 + 12 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 12) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 12;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 12;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 12;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xD;
  int v8 = v6 - 13;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for CRLFreehandDrawingShapeTypeData(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 12 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 12) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF4) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF3)
  {
    unsigned int v6 = ((a2 - 244) >> 8) + 1;
    *unint64_t result = a2 + 12;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100BC6EF4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 12;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLFreehandDrawingShapeTypeData()
{
  return &type metadata for CRLFreehandDrawingShapeTypeData;
}

unint64_t sub_100BC6F30()
{
  unint64_t result = qword_101696570;
  if (!qword_101696570)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101696570);
  }
  return result;
}

unint64_t sub_100BC6F88()
{
  unint64_t result = qword_101696578;
  if (!qword_101696578)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101696578);
  }
  return result;
}

unint64_t sub_100BC6FE0()
{
  unint64_t result = qword_101696580;
  if (!qword_101696580)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101696580);
  }
  return result;
}

unint64_t sub_100BC7034(unint64_t result)
{
  if (result >= 0xD) {
    return 13;
  }
  return result;
}

unint64_t sub_100BC7044()
{
  unint64_t result = qword_101696588;
  if (!qword_101696588)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101696588);
  }
  return result;
}

unint64_t sub_100BC7098()
{
  unint64_t result = qword_101696590;
  if (!qword_101696590)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101696590);
  }
  return result;
}

void sub_100BC70EC(uint64_t a1, uint64_t a2, void **a3, uint64_t a4, uint64_t a5)
{
  uint64_t v85 = a4;
  uint64_t v86 = a5;
  uint64_t v7 = sub_1005057FC(&qword_101672BB0);
  __chkstk_darwin(v7 - 8, v8);
  id v84 = (char *)v73 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v91 = sub_1005057FC(&qword_101696598);
  uint64_t v10 = *(void *)(v91 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  __chkstk_darwin(v91, v12);
  uint64_t v13 = (char *)v73 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_100DD7664();
  uint64_t v16 = v15;
  uint64_t v17 = sub_100DD78B8();
  uint64_t v89 = v11;
  uint64_t v90 = v17;
  uint64_t v19 = v18;
  uint64_t v87 = a1;
  if (a3
    && (aBlock = a3, swift_errorRetain(), sub_1005057FC(&qword_101672BD0), (swift_dynamicCast() & 1) != 0)
    && (v92 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v14 = sub_100DD7B0C();
    uint64_t v16 = v71;
    uint64_t v90 = sub_100DD7D70();
    uint64_t v19 = v72;
    int v20 = 1;
  }
  else
  {
    int v20 = 0;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  NSString v21 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  NSString v22 = String._bridgeToObjectiveC()();
  uint64_t v81 = v19;
  swift_bridgeObjectRelease();
  id v23 = [self alertControllerWithTitle:v21 message:v22 preferredStyle:1];

  uint64_t v24 = self;
  id v25 = [v24 mainBundle];
  uint64_t v82 = v14;
  uint64_t v83 = v16;
  id v88 = v23;
  if (v20)
  {
    NSString v26 = String._bridgeToObjectiveC()();
    uint64_t v27 = v10;
    NSString v28 = String._bridgeToObjectiveC()();
    id v29 = [v25 localizedStringForKey:v26 value:v28 table:0];

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v78 = *(void (**)(char *, uint64_t, uint64_t))(v27 + 16);
    v78(v13, v87, v91);
    uint64_t v30 = *(unsigned __int8 *)(v27 + 80);
    uint64_t v76 = ((v30 + 16) & ~v30) + v89;
    uint64_t v31 = (v30 + 16) & ~v30;
    uint64_t v77 = v31;
    uint64_t v75 = v30 | 7;
    uint64_t v32 = swift_allocObject();
    uint64_t v74 = *(void (**)(uint64_t, char *, uint64_t))(v27 + 32);
    uint64_t v80 = (v27 + 32) & 0xFFFFFFFFFFFFLL | 0x48D8000000000000;
    v74(v32 + v31, v13, v91);
    NSString v33 = String._bridgeToObjectiveC()();
    uint64_t v79 = v13;
    uint64_t v34 = v33;
    swift_bridgeObjectRelease();
    v97 = sub_100BC81B0;
    uint64_t v98 = v32;
    aBlock = _NSConcreteStackBlock;
    uint64_t v94 = *(void *)"";
    v73[1] = &v95;
    v95 = sub_10051CE64;
    v96 = &unk_101527698;
    uint64_t v35 = _Block_copy(&aBlock);
    swift_release();
    uint64_t v36 = self;
    id v37 = [v36 actionWithTitle:v34 style:0 handler:v35];
    v73[0] = v37;
    _Block_release(v35);

    [v88 addAction:v37];
    id v38 = [v24 mainBundle];
    NSString v39 = String._bridgeToObjectiveC()();
    NSString v40 = String._bridgeToObjectiveC()();
    id v41 = [v38 localizedStringForKey:v39 value:v40 table:0];

    uint64_t v13 = v79;
    static String._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v42 = v87;
    v78(v13, v87, v91);
    uint64_t v43 = swift_allocObject();
    uint64_t v44 = v74;
    v74(v43 + v77, v13, v91);
    id v45 = (void (*)(unint64_t, char *, uint64_t))v44;
    NSString v46 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    v97 = sub_100BC7A50;
    uint64_t v98 = v43;
    aBlock = _NSConcreteStackBlock;
    uint64_t v94 = *(void *)"";
    v95 = sub_10051CE64;
    v96 = &unk_1015276E8;
    os_log_type_t v47 = _Block_copy(&aBlock);
    swift_release();
    id v48 = [v36 actionWithTitle:v46 style:1 handler:v47];
    uint64_t v49 = v42;
    _Block_release(v47);

    id v50 = v88;
    [v88 addAction:v48];
  }
  else
  {
    NSString v51 = String._bridgeToObjectiveC()();
    NSString v52 = String._bridgeToObjectiveC()();
    id v53 = [v25 localizedStringForKey:v51 value:v52 table:0];

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v54 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
    uint64_t v27 = v10;
    uint64_t v49 = v87;
    uint64_t v55 = v91;
    v54(v13, v87, v91);
    unint64_t v56 = (*(unsigned __int8 *)(v27 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80);
    uint64_t v57 = swift_allocObject();
    id v45 = *(void (**)(unint64_t, char *, uint64_t))(v27 + 32);
    uint64_t v80 = (v27 + 32) & 0xFFFFFFFFFFFFLL | 0x48D8000000000000;
    v45(v57 + v56, v13, v55);
    NSString v58 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    v97 = sub_100BC7A50;
    uint64_t v98 = v57;
    id v50 = v88;
    aBlock = _NSConcreteStackBlock;
    uint64_t v94 = *(void *)"";
    v95 = sub_10051CE64;
    v96 = &unk_101527620;
    uint64_t v59 = _Block_copy(&aBlock);
    swift_release();
    id v48 = [self actionWithTitle:v58 style:0 handler:v59];
    _Block_release(v59);

    [v50 addAction:v48];
  }

  uint64_t v60 = type metadata accessor for TaskPriority();
  uint64_t v61 = (uint64_t)v84;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v60 - 8) + 56))(v84, 1, 1, v60);
  uint64_t v62 = v49;
  uint64_t v63 = v91;
  (*(void (**)(char *, uint64_t, uint64_t))(v27 + 16))(v13, v62, v91);
  type metadata accessor for MainActor();
  uint64_t v64 = v86;
  swift_retain();
  id v65 = v50;
  uint64_t v66 = static MainActor.shared.getter();
  unint64_t v67 = (*(unsigned __int8 *)(v27 + 80) + 88) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80);
  id v68 = (void *)swift_allocObject();
  v68[2] = v66;
  v68[3] = &protocol witness table for MainActor;
  v68[4] = v85;
  v68[5] = v64;
  uint64_t v69 = v82;
  v68[6] = v65;
  v68[7] = v69;
  uint64_t v70 = v90;
  v68[8] = v83;
  v68[9] = v70;
  v68[10] = v81;
  v45((unint64_t)v68 + v67, v13, v63);
  sub_1006D9104(v61, (uint64_t)&unk_1016965A8, (uint64_t)v68);
  swift_release();
}

uint64_t sub_100BC7A50()
{
  return sub_100BC8250();
}

uint64_t sub_100BC7A58(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100BC7A68()
{
  return swift_release();
}

uint64_t sub_100BC7A70(uint64_t a1, uint64_t a2, uint64_t a3, int *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  *(void *)(v8 + 264) = v16;
  *(_OWORD *)(v8 + 248) = v15;
  *(void *)(v8 + 232) = a7;
  *(void *)(v8 + 240) = a8;
  *(void *)(v8 + 224) = a6;
  *(void *)(v8 + 272) = type metadata accessor for MainActor();
  *(void *)(v8 + 280) = static MainActor.shared.getter();
  uint64_t v13 = (uint64_t (*)(uint64_t))((char *)a4 + *a4);
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v8 + 288) = v11;
  *uint64_t v11 = v8;
  v11[1] = sub_100BC7B8C;
  return v13(a6);
}

uint64_t sub_100BC7B8C()
{
  *(void *)(*(void *)v1 + 296) = v0;
  swift_task_dealloc();
  uint64_t v3 = dispatch thunk of Actor.unownedExecutor.getter();
  if (v0) {
    unsigned int v4 = sub_100BC7D54;
  }
  else {
    unsigned int v4 = sub_100BC7CE4;
  }
  return _swift_task_switch(v4, v3, v2);
}

uint64_t sub_100BC7CE4()
{
  uint64_t v1 = *(void **)(v0 + 224);
  swift_release();
  sub_100F2BCC8(v1);
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_100BC7D54()
{
  swift_release();
  if (qword_10166F9D8 != -1) {
    swift_once();
  }
  uint64_t v1 = *(void *)(v0 + 256);
  uint64_t v2 = *(void *)(v0 + 240);
  uint64_t v13 = *(void *)(v0 + 248);
  uint64_t v3 = *(void *)(v0 + 232);
  id v14 = *(id *)(v0 + 224);
  swift_beginAccess();
  uint64_t v4 = (void *)static OS_os_log.crlError;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117DF40;
  *(void *)(inited + 56) = &type metadata for String;
  unint64_t v6 = sub_100528BE4();
  *(void *)(inited + 32) = v3;
  *(void *)(inited + 40) = v2;
  *(void *)(inited + 96) = &type metadata for String;
  *(void *)(inited + 104) = v6;
  *(void *)(inited + 64) = v6;
  *(void *)(inited + 72) = v13;
  *(void *)(inited + 80) = v1;
  swift_getErrorValue();
  id v7 = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v8 = Error.localizedDescription.getter();
  *(void *)(inited + 136) = &type metadata for String;
  *(void *)(inited + 144) = v6;
  *(void *)(inited + 112) = v8;
  *(void *)(inited + 120) = v9;
  uint64_t v10 = static os_log_type_t.error.getter();
  sub_100BAC898((uint64_t)v7, (uint64_t)&_mh_execute_header, v10, (uint64_t)"Failed to present alert for board error %@ - %@: %@", 51, 2, inited);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  [v14 dismissViewControllerAnimated:0 completion:0];
  *(unsigned char *)(v0 + 304) = 0;
  sub_1005057FC(&qword_101696598);
  CheckedContinuation.resume(returning:)();
  swift_willThrow();
  uint64_t v11 = *(uint64_t (**)(void))(v0 + 8);
  return v11();
}

uint64_t sub_100BC7F84()
{
  uint64_t v1 = sub_1005057FC(&qword_101696598);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 88) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_unknownObjectRelease();
  swift_release();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_100BC8074(uint64_t a1)
{
  sub_1005057FC(&qword_101696598);
  uint64_t v3 = v1[3];
  uint64_t v11 = v1[2];
  uint64_t v4 = (int *)v1[4];
  uint64_t v5 = v1[5];
  uint64_t v6 = v1[6];
  uint64_t v7 = v1[7];
  uint64_t v8 = v1[8];
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_100528488;
  return sub_100BC7A70(a1, v11, v3, v4, v5, v6, v7, v8);
}

uint64_t sub_100BC81B0()
{
  return sub_100BC8250();
}

uint64_t sub_100BC81BC()
{
  uint64_t v1 = sub_1005057FC(&qword_101696598);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_100BC8250()
{
  return CheckedContinuation.resume(returning:)();
}

uint64_t sub_100BC82EC(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for CRLUserBoardMetadataCRDTData(0);
  __chkstk_darwin(v3, v4);
  uint64_t v6 = &v10[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = a1 + OBJC_IVAR____TtC8Freeform24CRLUserBoardMetadataData_crdtData;
  swift_beginAccess();
  sub_100BC85DC(v7, (uint64_t)v6);
  swift_beginAccess();
  sub_100BC8640();
  CRStruct_5.merge(_:)();
  sub_100BC8698((uint64_t)v6, type metadata accessor for CRLUserBoardMetadataCRDTData);
  uint64_t result = swift_endAccess();
  unint64_t v9 = *(void *)(v1 + OBJC_IVAR____TtC8Freeform24CRLUserBoardMetadataData_minRequiredVersionForFullFidelity);
  if (*(void *)(a1 + OBJC_IVAR____TtC8Freeform24CRLUserBoardMetadataData_minRequiredVersionForFullFidelity) > v9) {
    unint64_t v9 = *(void *)(a1 + OBJC_IVAR____TtC8Freeform24CRLUserBoardMetadataData_minRequiredVersionForFullFidelity);
  }
  *(void *)(v1 + OBJC_IVAR____TtC8Freeform24CRLUserBoardMetadataData_minRequiredVersionForFullFidelity) = v9;
  return result;
}

uint64_t sub_100BC8414()
{
  sub_100BC8698(v0 + OBJC_IVAR____TtC8Freeform24CRLUserBoardMetadataData_boardIdentifier, type metadata accessor for CRLBoardIdentifier);
  sub_100BC8698(v0 + OBJC_IVAR____TtC8Freeform24CRLUserBoardMetadataData_crdtData, type metadata accessor for CRLUserBoardMetadataCRDTData);

  return swift_deallocClassInstance();
}

uint64_t sub_100BC84B0()
{
  return type metadata accessor for CRLUserBoardMetadataData();
}

uint64_t type metadata accessor for CRLUserBoardMetadataData()
{
  uint64_t result = qword_1016965D8;
  if (!qword_1016965D8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100BC8504()
{
  uint64_t result = type metadata accessor for CRLBoardIdentifierStorage(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for CRLUserBoardMetadataCRDTData(319);
    if (v2 <= 0x3F)
    {
      uint64_t result = swift_updateClassMetadata2();
      if (!result) {
        return 0;
      }
    }
  }
  return result;
}

uint64_t sub_100BC85DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CRLUserBoardMetadataCRDTData(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_100BC8640()
{
  unint64_t result = qword_1016966B8;
  if (!qword_1016966B8)
  {
    type metadata accessor for CRLUserBoardMetadataCRDTData(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016966B8);
  }
  return result;
}

uint64_t sub_100BC8698(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_100BC86F8(char a1, uint64_t a2, void *a3)
{
  uint64_t v6 = sub_1005057FC(&qword_101678470);
  __chkstk_darwin(v6 - 8, v7);
  unint64_t v9 = (char *)&v30[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for AttributedString();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10, v12);
  id v14 = (char *)&v30[-1] - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15, v16);
  uint64_t v18 = (char *)&v30[-1] - v17;
  uint64_t v31 = &type metadata for CRLBoardLibraryHeadlessControllerDependency;
  uint64_t v32 = &off_10152F7E0;
  v30[0] = a3;
  sub_100BC9224(a2, (uint64_t)v9);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
  {
    id v19 = a3;
    sub_10065ABCC((uint64_t)v9);
    int v20 = (char *)[objc_allocWithZone((Class)NSAttributedString) init];
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v18, v9, v10);
    sub_100BC928C();
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v14, v18, v10);
    id v21 = a3;
    int v20 = (char *)NSAttributedString.init(_:)();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v18, v10);
  }
  if (a1 == 7)
  {
    id v22 = objc_retain(*(id *)(*(void *)(*sub_10050F848(v30, (uint64_t)v31)
                                        + OBJC_IVAR____TtC8Freeform33CRLBoardLibraryHeadlessController_editingCoordinator)
                            + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_boardItemFactory));
    uint64_t v24 = sub_100F3E9C8(v20);
  }
  else if (a1 == 6)
  {
    id v22 = objc_retain(*(id *)(*(void *)(*sub_10050F848(v30, (uint64_t)v31)
                                        + OBJC_IVAR____TtC8Freeform33CRLBoardLibraryHeadlessController_editingCoordinator)
                            + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_boardItemFactory));
    uint64_t v24 = (uint64_t)sub_100F3EB94((uint64_t)v20, v23);
  }
  else
  {
    id v25 = sub_10050F848(v30, (uint64_t)v31);
    uint64_t v26 = qword_1011AD368[a1];
    id v22 = objc_retain(*(id *)(*(void *)(*v25
                                        + OBJC_IVAR____TtC8Freeform33CRLBoardLibraryHeadlessController_editingCoordinator)
                            + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_boardItemFactory));
    uint64_t v24 = (uint64_t)sub_100F3DA18(v26, 0, 0, 0, 0, 0, 1, 0, 1u, (void *)1, (void *)1, (void *)1, (void *)1, a2);
  }
  uint64_t v27 = v24;

  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v30);
  return v27;
}

uint64_t sub_100BC8A4C(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 64) = a3;
  *(void *)(v4 + 72) = a4;
  *(void *)(v4 + 56) = a2;
  *(unsigned char *)(v4 + 152) = a1;
  return _swift_task_switch(sub_100BC8A74, 0, 0);
}

uint64_t sub_100BC8A74()
{
  sub_10050F848(*(void **)(v0 + 72), *(void *)(*(void *)(v0 + 72) + 24));
  *(void *)(v0 + 80) = type metadata accessor for MainActor();
  *(void *)(v0 + 88) = static MainActor.shared.getter();
  unint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 96) = v1;
  *unint64_t v1 = v0;
  v1[1] = sub_100BC8B34;
  uint64_t v2 = *(void *)(v0 + 56);
  return sub_100EDC29C(v2);
}

uint64_t sub_100BC8B34(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 104) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = dispatch thunk of Actor.unownedExecutor.getter();
    uint64_t v7 = v6;
    uint64_t v8 = sub_100BC913C;
  }
  else
  {
    *(void *)(v4 + 112) = a1;
    uint64_t v5 = dispatch thunk of Actor.unownedExecutor.getter();
    uint64_t v7 = v9;
    uint64_t v8 = sub_100BC8CB4;
  }
  return _swift_task_switch(v8, v5, v7);
}

uint64_t sub_100BC8CB4()
{
  uint64_t v1 = v0[14];
  swift_release();
  v0[5] = &type metadata for CRLBoardLibraryHeadlessControllerDependency;
  v0[6] = &off_10152F7E0;
  v0[2] = v1;
  return _swift_task_switch(sub_100BC8D38, 0, 0);
}

uint64_t sub_100BC8D38()
{
  uint64_t v1 = *(void *)(v0 + 64);
  char v2 = *(unsigned char *)(v0 + 152);
  uint64_t v3 = (void **)sub_10050F848((void *)(v0 + 16), (uint64_t)&type metadata for CRLBoardLibraryHeadlessControllerDependency);
  uint64_t v4 = (void *)sub_100BC86F8(v2, v1, *v3);
  *(void *)(v0 + 120) = v4;
  sub_10050F848((void *)(v0 + 16), *(void *)(v0 + 40));
  sub_1005057FC((uint64_t *)&unk_101676C10);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_101177E70;
  *(void *)(v5 + 32) = v4;
  uint64_t v9 = v5;
  specialized Array._endMutation()();
  *(void *)(v0 + 128) = v9;
  id v6 = v4;
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v0 + 136) = v7;
  *uint64_t v7 = v0;
  v7[1] = sub_100BC8E64;
  return sub_100E17CF0(v9);
}

uint64_t sub_100BC8E64()
{
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return _swift_task_switch(sub_100BC8F7C, 0, 0);
}

uint64_t sub_100BC8F7C()
{
  uint64_t v1 = *sub_10050F848(*(void **)(v0 + 72), *(void *)(*(void *)(v0 + 72) + 24));
  char v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 144) = v2;
  *char v2 = v0;
  v2[1] = sub_100BC9024;
  return sub_100E32DC8(v0 + 16, v1);
}

uint64_t sub_100BC9024()
{
  swift_task_dealloc();
  if (v0)
  {
    swift_errorRelease();
    uint64_t v1 = sub_100BC91BC;
  }
  else
  {
    uint64_t v1 = sub_100BC92DC;
  }
  return _swift_task_switch(v1, 0, 0);
}

uint64_t sub_100BC913C()
{
  swift_release();
  return _swift_task_switch(sub_100BC91A4, 0, 0);
}

uint64_t sub_100BC91A4()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100BC91BC()
{
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v0 + 16);
  uint64_t v1 = *(uint64_t (**)(uint64_t))(v0 + 8);
  uint64_t v2 = *(void *)(v0 + 120);
  return v1(v2);
}

uint64_t sub_100BC9224(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1005057FC(&qword_101678470);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_100BC928C()
{
  unint64_t result = qword_10168D3B0;
  if (!qword_10168D3B0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_10168D3B0);
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLBoardItemInsertionPerformer()
{
  return &type metadata for CRLBoardItemInsertionPerformer;
}

BOOL sub_100BC92E0(unsigned __int8 a1)
{
  int v2 = a1;
  int v3 = (*(unsigned __int8 (**)(void))((swift_isaMask & *v1) + 0x440))();
  return v3 != 6 && v3 == v2;
}

uint64_t sub_100BC934C()
{
  uint64_t v1 = v0;
  uint64_t v2 = OBJC_IVAR____TtC8Freeform13CRLStyledItem__stroke;
  int v3 = *(void **)((char *)v0 + OBJC_IVAR____TtC8Freeform13CRLStyledItem__stroke);
  id v4 = v3;
  if (v3) {
    goto LABEL_6;
  }
  uint64_t v5 = *(uint64_t **)((char *)v1 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
  uint64_t v6 = *v5;
  uint64_t result = swift_conformsToProtocol2();
  if (result)
  {
    *(void *)&v16[0] = v5;
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(result + 8))(v13, v6, result);
    sub_100BC9B30((uint64_t)v13, (uint64_t)v14);
    if (sub_100556850((uint64_t)v14) == 1)
    {
      id v4 = 0;
    }
    else
    {
      v16[12] = v14[12];
      v16[13] = v14[13];
      uint64_t v17 = v15;
      v16[8] = v14[8];
      v16[9] = v14[9];
      v16[10] = v14[10];
      v16[11] = v14[11];
      v16[4] = v14[4];
      v16[5] = v14[5];
      v16[6] = v14[6];
      v16[7] = v14[7];
      v16[0] = v14[0];
      v16[1] = v14[1];
      uint64_t v8 = swift_isaMask & *v1;
      void v16[2] = v14[2];
      v16[3] = v14[3];
      char v9 = (*(uint64_t (**)(void))(v8 + 1024))();
      id v4 = sub_100A1E370((uint64_t)v16, v9 & 1);
      sub_1005569D0(v13);
      uint64_t v10 = *(void **)((char *)v1 + v2);
      *(void *)((char *)v1 + v2) = v4;
      id v11 = v4;
    }
LABEL_6:
    id v12 = v3;
    return (uint64_t)v4;
  }
  __break(1u);
  return result;
}

void sub_100BC9500(void *a1)
{
  uint64_t v2 = v1;
  if (!*(void *)(v1 + OBJC_IVAR____TtC8Freeform12CRLBoardItem_transactionContext))
  {
    uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      uint64_t v5 = Strong;
      char v6 = (*(uint64_t (**)(void))((swift_isaMask & *Strong) + 0x2F0))();

      if (v6) {
        goto LABEL_10;
      }
    }
  }
  uint64_t v7 = *(void **)(v2 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
  uint64_t v8 = swift_conformsToProtocol2();
  if (!v8)
  {
    __break(1u);
LABEL_10:
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"_guardTransaction()", 19, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLTransactions/CRLTransactable.swift", 91, 2, 76, (uint64_t)"Attempting to mutate a CRLTransactable without a CRLTransactableContext set", 75, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_100586FD4((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Attempting to mutate a CRLTransactable without a CRLTransactableContext set");
    sub_1005871AC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"_guardTransaction()", 19, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLTransactions/CRLTransactable.swift", 91, 2, 76);
    SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v15, v16);
    _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
    return;
  }
  uint64_t v9 = v8;
  if (a1)
  {
    id v10 = a1;
    swift_retain();
    sub_100A1F088(v10, (uint64_t)v17);
    SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)((CKRecordID)v17, v11);
    sub_100BC9B30((uint64_t)v17, (uint64_t)v18);
    (*(void (**)(unsigned char *, void, uint64_t))(v9 + 16))(v18, *v7, v9);
  }
  else
  {
    sub_10051A3F4((uint64_t)v17);
    sub_100BC9B30((uint64_t)v17, (uint64_t)v18);
    uint64_t v12 = *v7;
    uint64_t v13 = *(void (**)(unsigned char *, uint64_t, uint64_t))(v9 + 16);
    swift_retain();
    v13(v18, v12, v9);
  }
  id v14 = *(void **)(v2 + OBJC_IVAR____TtC8Freeform13CRLStyledItem__stroke);
  *(void *)(v2 + OBJC_IVAR____TtC8Freeform13CRLStyledItem__stroke) = a1;
  swift_release();
}

uint64_t sub_100BC97FC()
{
  return 6;
}

void sub_100BC9928()
{
}

id sub_100BC9938()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLStyledItem();
  [super dealloc];
}

uint64_t sub_100BC9980()
{
  return type metadata accessor for CRLStyledItem();
}

uint64_t type metadata accessor for CRLStyledItem()
{
  uint64_t result = qword_1016966F8;
  if (!qword_1016966F8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100BC99D4()
{
  return swift_updateClassMetadata2();
}

uint64_t sub_100BC9A18()
{
  return (*(uint64_t (**)(void))((swift_isaMask & **v0) + 0x440))();
}

uint64_t sub_100BC9A74()
{
  return (*(uint64_t (**)(void))((swift_isaMask & **v0) + 0x450))();
}

uint64_t sub_100BC9AD0()
{
  return (*(uint64_t (**)(void))((swift_isaMask & **v0) + 0x458))() & 1;
}

uint64_t sub_100BC9B30(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1005057FC((uint64_t *)&unk_101685110);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100BC9B98@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1;
  *a1 = &_swiftEmptySetSingleton;
  sub_1005057FC((uint64_t *)&unk_101683740);
  sub_1005D3BF8();
  uint64_t result = CRAttributedString.Attributes.init()();
  if ((*(unsigned char *)(v1 + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_underline + 8) & 1) == 0)
  {
    Swift::Int v4 = *(void *)(v1 + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_underline);
    swift_getKeyPath();
    sub_100CB8180(&v37, 0x6E696C7265646E75, 0xE900000000000065);
    uint64_t v5 = swift_bridgeObjectRelease();
    __chkstk_darwin(v5, v6);
    sub_10083E400();
    swift_getKeyPath();
    Swift::Int v37 = v4;
    LOBYTE(v38) = 0;
    sub_1005057FC((uint64_t *)&unk_1016836C0);
    sub_1008431AC();
    uint64_t result = CRAttributedString.Attributes.subscript.setter();
  }
  if ((*(unsigned char *)(v1 + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_strikethrough + 8) & 1) == 0)
  {
    Swift::Int v7 = *(void *)(v1 + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_strikethrough);
    swift_getKeyPath();
    sub_100CB8180(&v37, 0x6874656B69727473, 0xED00006867756F72);
    uint64_t v8 = swift_bridgeObjectRelease();
    __chkstk_darwin(v8, v9);
    sub_10083E3AC();
    swift_getKeyPath();
    Swift::Int v37 = v7;
    LOBYTE(v38) = 0;
    sub_1005057FC((uint64_t *)&unk_1016836C0);
    sub_100843158();
    uint64_t result = CRAttributedString.Attributes.subscript.setter();
  }
  if ((*(unsigned char *)(v1 + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_fontSize + 4) & 1) == 0)
  {
    int v10 = *(_DWORD *)(v1 + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_fontSize);
    swift_getKeyPath();
    sub_100CB8180(&v37, 0x657A6953746E6F66, 0xE800000000000000);
    uint64_t v11 = swift_bridgeObjectRelease();
    __chkstk_darwin(v11, v12);
    sub_10083E4FC();
    swift_getKeyPath();
    LODWORD(v37) = v10;
    BYTE4(v37) = 0;
    sub_1005057FC((uint64_t *)&unk_1016836C0);
    sub_10083E5B0();
    uint64_t result = CRAttributedString.Attributes.subscript.setter();
  }
  uint64_t v13 = *(void *)(v1 + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_fontName + 8);
  if (v13)
  {
    uint64_t v14 = *(void *)(v1 + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_fontName);
    swift_getKeyPath();
    swift_bridgeObjectRetain();
    sub_100CB8180(&v37, 0x656D614E746E6F66, 0xE800000000000000);
    uint64_t v15 = swift_bridgeObjectRelease();
    __chkstk_darwin(v15, v16);
    sub_10083E550();
    swift_getKeyPath();
    swift_bridgeObjectRetain();
    swift_retain();
    Swift::Int v37 = sub_100B149FC(v14, v13);
    uint64_t v38 = v17;
    LOBYTE(v39) = 0;
    sub_1005057FC((uint64_t *)&unk_1016836C0);
    sub_10091307C();
    CRAttributedString.Attributes.subscript.setter();
    swift_bridgeObjectRelease();
    uint64_t result = swift_release();
  }
  uint64_t v18 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_characterFill);
  if (v18)
  {
    swift_getKeyPath();
    id v19 = v18;
    sub_100CB8180(&v37, 0x6574636172616863, 0xED00006C6C694672);
    uint64_t v20 = swift_bridgeObjectRelease();
    __chkstk_darwin(v20, v21);
    sub_10083E34C();
    swift_getKeyPath();
    id v22 = v19;
    swift_retain();
    sub_100F91F6C(v22, (uint64_t)&v37);
    uint64_t v23 = &_mh_execute_header;
    if (!v40) {
      uint64_t v23 = 0;
    }
    v30[0] = v37;
    v30[1] = v38;
    v30[2] = (unint64_t)v23 | v39;
    long long v31 = v41;
    long long v32 = v42;
    long long v33 = v43;
    long long v34 = v44;
    uint64_t v35 = v45;
    long long v36 = v46;
    sub_1005057FC((uint64_t *)&unk_1016836C0);
    sub_100913244();
    CRAttributedString.Attributes.subscript.setter();

    uint64_t result = swift_release();
  }
  int v24 = *(unsigned __int8 *)(v2 + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_bold);
  if (v24 != 2)
  {
    swift_getKeyPath();
    sub_100CB8180(v30, 1684828002, 0xE400000000000000);
    uint64_t v25 = swift_bridgeObjectRelease();
    __chkstk_darwin(v25, v26);
    sub_10083E4A8();
    swift_getKeyPath();
    LOBYTE(v30[0]) = v24;
    sub_1005057FC((uint64_t *)&unk_1016836C0);
    sub_100843254();
    uint64_t result = CRAttributedString.Attributes.subscript.setter();
  }
  int v27 = *(unsigned __int8 *)(v2 + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_italic);
  if (v27 != 2)
  {
    swift_getKeyPath();
    sub_100CB8180(v30, 0x63696C617469, 0xE600000000000000);
    uint64_t v28 = swift_bridgeObjectRelease();
    __chkstk_darwin(v28, v29);
    sub_10083E454();
    swift_getKeyPath();
    LOBYTE(v30[0]) = v27;
    sub_1005057FC((uint64_t *)&unk_1016836C0);
    sub_100843200();
    return CRAttributedString.Attributes.subscript.setter();
  }
  return result;
}

id sub_100BCA2CC(uint64_t a1)
{
  NSString v2 = 0;
  switch(a1)
  {
    case 0:
      uint64_t v3 = OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_baselineShift;
      goto LABEL_43;
    case 1:
      uint64_t v4 = OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_bold;
      goto LABEL_18;
    case 2:
      uint64_t v5 = OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_capitalization;
      goto LABEL_34;
    case 3:
      uint64_t v4 = OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_capitalizationUsesLinguistics;
      goto LABEL_18;
    case 4:
      NSString v2 = *(NSString *)(v1 + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_characterFill);
      if (!v2) {
        return v2;
      }
      goto LABEL_41;
    case 5:
      uint64_t v4 = OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_characterFillShouldFillTextContainer;
      goto LABEL_18;
    case 6:
      NSString v2 = *(NSString *)(v1 + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_characterStroke);
      if (!v2) {
        return v2;
      }
      goto LABEL_41;
    case 7:
      uint64_t v6 = OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_compatibilityFontName;
      goto LABEL_25;
    case 8:
      uint64_t v6 = OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_emphasisMarks;
      goto LABEL_25;
    case 9:
      uint64_t v6 = OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_fontName;
      goto LABEL_25;
    case 10:
      return v2;
    case 11:
      uint64_t v3 = OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_fontSize;
      goto LABEL_43;
    case 12:
      uint64_t v4 = OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_isNamedPointSize;
      goto LABEL_18;
    case 13:
      uint64_t v4 = OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_italic;
LABEL_18:
      int v7 = *(unsigned __int8 *)(v1 + v4);
      if (v7 == 2) {
        return 0;
      }
      return [objc_allocWithZone((Class)NSNumber) initWithBool:v7 & 1];
    case 14:
      uint64_t v3 = OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_kerning;
      goto LABEL_43;
    case 15:
      uint64_t v6 = OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_language;
      goto LABEL_25;
    case 16:
      if (*(unsigned char *)(v1 + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_ligatures + 4)) {
        return 0;
      }
      return [objc_allocWithZone((Class)NSNumber) initWithInt:*(unsigned int *)(v1 + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_ligatures)];
    case 17:
      uint64_t v6 = OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_pseudoFont;
LABEL_25:
      if (!*(void *)(v1 + v6 + 8)) {
        return 0;
      }
      swift_bridgeObjectRetain();
      NSString v2 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      return v2;
    case 18:
      NSString v2 = *(NSString *)(v1 + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_shadow);
      if (!v2) {
        return v2;
      }
      goto LABEL_41;
    case 19:
      uint64_t v9 = OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_strikethrough;
      goto LABEL_46;
    case 20:
      NSString v2 = *(NSString *)(v1 + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_strikethruColor);
      if (!v2) {
        return v2;
      }
      goto LABEL_41;
    case 21:
      uint64_t v3 = OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_strikethruWidth;
      goto LABEL_43;
    case 22:
      uint64_t v5 = OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_superscript;
LABEL_34:
      uint64_t v10 = v1 + v5;
      if (*(unsigned char *)(v10 + 8)) {
        return 0;
      }
      return [objc_allocWithZone((Class)NSNumber) initWithUnsignedInteger:*(void *)v10];
    case 23:
      NSString v2 = *(NSString *)(v1 + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_textBackground);
      if (!v2) {
        return v2;
      }
      goto LABEL_41;
    case 24:
      uint64_t v3 = OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_tracking;
      goto LABEL_43;
    case 25:
      uint64_t v9 = OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_underline;
      goto LABEL_46;
    case 26:
      NSString v2 = *(NSString *)(v1 + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_underlineColor);
      if (v2) {
LABEL_41:
      }
        id v11 = v2;
      return v2;
    case 27:
      uint64_t v3 = OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_underlineWidth;
LABEL_43:
      uint64_t v12 = (int *)(v1 + v3);
      if (v12[1]) {
        return 0;
      }
      int v13 = *v12;
      id v14 = objc_allocWithZone((Class)NSNumber);
      LODWORD(v15) = v13;
      return [v14 initWithFloat:v15];
    case 28:
      uint64_t v9 = OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_writingDirection;
LABEL_46:
      uint64_t v16 = v1 + v9;
      if (*(unsigned char *)(v16 + 8)) {
        return 0;
      }
      return [objc_allocWithZone((Class)NSNumber) initWithInteger:*(void *)v16];
    default:
      sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"boxedValue(for:)", 16, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/Style/CRLWPStyleProxy.swift", 87, 2, 47, (uint64_t)"Requesting value for invalid property", 37, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"boxedValue(for:)", 16, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/Style/CRLWPStyleProxy.swift", 87, 2, 47);
      NSString v2 = 0;
      swift_unknownObjectRetain();
      return v2;
  }
}

id sub_100BCA800()
{
  uint64_t v1 = &v0[OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_baselineShift];
  *(_DWORD *)uint64_t v1 = 0;
  v1[4] = 1;
  v0[OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_bold] = 2;
  NSString v2 = &v0[OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_capitalization];
  *(void *)NSString v2 = 0;
  v2[8] = 1;
  v0[OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_capitalizationUsesLinguistics] = 2;
  *(void *)&v0[OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_characterFill] = 0;
  v0[OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_characterFillShouldFillTextContainer] = 2;
  *(void *)&v0[OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_characterStroke] = 0;
  uint64_t v3 = &v0[OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_compatibilityFontName];
  *uint64_t v3 = 0;
  v3[1] = 0;
  uint64_t v4 = &v0[OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_emphasisMarks];
  *uint64_t v4 = 0;
  v4[1] = 0;
  uint64_t v5 = &v0[OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_fontName];
  *uint64_t v5 = 0;
  v5[1] = 0;
  *(void *)&v0[OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_fontFeatures] = 0;
  uint64_t v6 = &v0[OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_fontSize];
  *(_DWORD *)uint64_t v6 = 0;
  v6[4] = 1;
  v0[OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_isNamedPointSize] = 2;
  v0[OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_italic] = 2;
  int v7 = &v0[OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_kerning];
  *(_DWORD *)int v7 = 0;
  v7[4] = 1;
  uint64_t v8 = &v0[OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_language];
  *uint64_t v8 = 0;
  v8[1] = 0;
  uint64_t v9 = &v0[OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_ligatures];
  *(_DWORD *)uint64_t v9 = 0;
  v9[4] = 1;
  uint64_t v10 = &v0[OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_pseudoFont];
  *uint64_t v10 = 0;
  v10[1] = 0;
  *(void *)&v0[OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_shadow] = 0;
  id v11 = &v0[OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_strikethrough];
  *(void *)id v11 = 0;
  v11[8] = 1;
  *(void *)&v0[OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_strikethruColor] = 0;
  uint64_t v12 = &v0[OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_strikethruWidth];
  *(_DWORD *)uint64_t v12 = 0;
  v12[4] = 1;
  int v13 = &v0[OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_superscript];
  *(void *)int v13 = 0;
  v13[8] = 1;
  *(void *)&v0[OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_textBackground] = 0;
  id v14 = &v0[OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_tracking];
  *(_DWORD *)id v14 = 0;
  v14[4] = 1;
  double v15 = &v0[OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_underline];
  *(void *)double v15 = 0;
  v15[8] = 1;
  *(void *)&v0[OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_underlineColor] = 0;
  uint64_t v16 = &v0[OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_underlineWidth];
  *(_DWORD *)uint64_t v16 = 0;
  v16[4] = 1;
  uint64_t v17 = &v0[OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_writingDirection];
  *(void *)uint64_t v17 = 0;
  v17[8] = 1;
  v19.receiver = v0;
  v19.super_class = (Class)type metadata accessor for CRLWPCharacterStyle();
  return [super init];
}

void sub_100BCAA30()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_underlineColor);
}

id sub_100BCAB24()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLWPCharacterStyle();
  return [super dealloc];
}

uint64_t type metadata accessor for CRLWPCharacterStyle()
{
  return self;
}

uint64_t sub_100BCAC7C(uint64_t a1, uint64_t a2)
{
  char v4 = *(unsigned char *)(a2 + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_baselineShift + 4);
  if (*(unsigned char *)(a1 + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_baselineShift + 4))
  {
    if (!*(unsigned char *)(a2 + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_baselineShift + 4)) {
      return 0;
    }
  }
  else
  {
    if (*(float *)(a1 + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_baselineShift) != *(float *)(a2 + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_baselineShift)) {
      char v4 = 1;
    }
    if (v4) {
      return 0;
    }
  }
  int v5 = *(unsigned __int8 *)(a1 + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_bold);
  int v6 = *(unsigned __int8 *)(a2 + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_bold);
  if (v5 == 2)
  {
    if (v6 != 2) {
      return 0;
    }
  }
  else
  {
    uint64_t result = 0;
    BOOL v8 = (v5 & 1) == 0;
    if (v6 == 2 || ((v8 ^ v6) & 1) == 0) {
      return result;
    }
  }
  char v9 = *(unsigned char *)(a2 + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_capitalization + 8);
  if (*(unsigned char *)(a1 + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_capitalization + 8))
  {
    if (!*(unsigned char *)(a2 + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_capitalization + 8)) {
      return 0;
    }
  }
  else
  {
    if (*(void *)(a1 + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_capitalization) != *(void *)(a2 + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_capitalization)) {
      char v9 = 1;
    }
    if (v9) {
      return 0;
    }
  }
  int v10 = *(unsigned __int8 *)(a1 + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_capitalizationUsesLinguistics);
  int v11 = *(unsigned __int8 *)(a2 + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_capitalizationUsesLinguistics);
  if (v10 == 2)
  {
    if (v11 != 2) {
      return 0;
    }
  }
  else
  {
    uint64_t result = 0;
    BOOL v12 = (v10 & 1) == 0;
    if (v11 == 2 || ((v12 ^ v11) & 1) == 0) {
      return result;
    }
  }
  int v13 = *(void **)(a1 + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_characterFill);
  id v14 = *(void **)(a2 + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_characterFill);
  if (v13)
  {
    if (!v14) {
      return 0;
    }
    sub_10050BF48(0, (unint64_t *)&qword_101687660);
    id v15 = v14;
    id v16 = v13;
    char v17 = static NSObject.== infix(_:_:)();

    if ((v17 & 1) == 0) {
      return 0;
    }
  }
  else if (v14)
  {
    return 0;
  }
  int v18 = *(unsigned __int8 *)(a1 + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_characterFillShouldFillTextContainer);
  int v19 = *(unsigned __int8 *)(a2 + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_characterFillShouldFillTextContainer);
  if (v18 == 2)
  {
    if (v19 != 2) {
      return 0;
    }
  }
  else
  {
    uint64_t result = 0;
    BOOL v20 = (v18 & 1) == 0;
    if (v19 == 2 || ((v20 ^ v19) & 1) == 0) {
      return result;
    }
  }
  uint64_t v21 = *(void **)(a1 + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_characterStroke);
  id v22 = *(void **)(a2 + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_characterStroke);
  if (v21)
  {
    if (!v22) {
      return 0;
    }
    sub_10050BF48(0, (unint64_t *)&qword_101686A50);
    id v23 = v22;
    id v24 = v21;
    char v25 = static NSObject.== infix(_:_:)();

    if ((v25 & 1) == 0) {
      return 0;
    }
  }
  else if (v22)
  {
    return 0;
  }
  uint64_t v26 = *(void *)(a1 + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_compatibilityFontName + 8);
  uint64_t v27 = *(void *)(a2 + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_compatibilityFontName + 8);
  if (v26)
  {
    if (!v27) {
      return 0;
    }
    if (*(void *)(a1 + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_compatibilityFontName) != *(void *)(a2 + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_compatibilityFontName)
      || v26 != v27)
    {
      char v28 = _stringCompareWithSmolCheck(_:_:expecting:)();
      uint64_t result = 0;
      if ((v28 & 1) == 0) {
        return result;
      }
    }
  }
  else if (v27)
  {
    return 0;
  }
  uint64_t v29 = *(void *)(a1 + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_emphasisMarks + 8);
  uint64_t v30 = *(void *)(a2 + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_emphasisMarks + 8);
  if (v29)
  {
    if (!v30) {
      return 0;
    }
    if (*(void *)(a1 + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_emphasisMarks) != *(void *)(a2 + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_emphasisMarks)
      || v29 != v30)
    {
      char v31 = _stringCompareWithSmolCheck(_:_:expecting:)();
      uint64_t result = 0;
      if ((v31 & 1) == 0) {
        return result;
      }
    }
  }
  else if (v30)
  {
    return 0;
  }
  uint64_t v32 = *(void *)(a1 + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_fontName + 8);
  uint64_t v33 = *(void *)(a2 + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_fontName + 8);
  if (v32)
  {
    if (!v33) {
      return 0;
    }
    if (*(void *)(a1 + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_fontName) != *(void *)(a2
                                                                                                + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_fontName)
      || v32 != v33)
    {
      char v34 = _stringCompareWithSmolCheck(_:_:expecting:)();
      uint64_t result = 0;
      if ((v34 & 1) == 0) {
        return result;
      }
    }
  }
  else if (v33)
  {
    return 0;
  }
  uint64_t v35 = *(void **)(a2 + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_fontFeatures);
  if (*(void *)(a1 + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_fontFeatures))
  {
    if (!v35) {
      return 0;
    }
    swift_bridgeObjectRetain();
    long long v36 = (void *)swift_bridgeObjectRetain();
    char v37 = sub_1005BEC40(v36, v35);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v37 & 1) == 0) {
      return 0;
    }
  }
  else if (v35)
  {
    return 0;
  }
  char v38 = *(unsigned char *)(a2 + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_fontSize + 4);
  if (*(unsigned char *)(a1 + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_fontSize + 4))
  {
    if (!*(unsigned char *)(a2 + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_fontSize + 4)) {
      return 0;
    }
  }
  else
  {
    if (*(float *)(a1 + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_fontSize) != *(float *)(a2
                                                                                              + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_fontSize))
      char v38 = 1;
    if (v38) {
      return 0;
    }
  }
  int v39 = *(unsigned __int8 *)(a1 + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_isNamedPointSize);
  int v40 = *(unsigned __int8 *)(a2 + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_isNamedPointSize);
  if (v39 == 2)
  {
    if (v40 != 2) {
      return 0;
    }
  }
  else
  {
    uint64_t result = 0;
    BOOL v41 = (v39 & 1) == 0;
    if (v40 == 2 || ((v41 ^ v40) & 1) == 0) {
      return result;
    }
  }
  int v42 = *(unsigned __int8 *)(a1 + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_italic);
  int v43 = *(unsigned __int8 *)(a2 + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_italic);
  if (v42 == 2)
  {
    if (v43 != 2) {
      return 0;
    }
  }
  else
  {
    uint64_t result = 0;
    BOOL v44 = (v42 & 1) == 0;
    if (v43 == 2 || ((v44 ^ v43) & 1) == 0) {
      return result;
    }
  }
  char v45 = *(unsigned char *)(a2 + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_kerning + 4);
  if (*(unsigned char *)(a1 + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_kerning + 4))
  {
    if (!*(unsigned char *)(a2 + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_kerning + 4)) {
      return 0;
    }
  }
  else
  {
    if (*(float *)(a1 + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_kerning) != *(float *)(a2
                                                                                             + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_kerning))
      char v45 = 1;
    if (v45) {
      return 0;
    }
  }
  uint64_t v46 = *(void *)(a1 + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_language + 8);
  uint64_t v47 = *(void *)(a2 + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_language + 8);
  if (v46)
  {
    if (!v47) {
      return 0;
    }
    if (*(void *)(a1 + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_language) != *(void *)(a2
                                                                                                + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_language)
      || v46 != v47)
    {
      char v48 = _stringCompareWithSmolCheck(_:_:expecting:)();
      uint64_t result = 0;
      if ((v48 & 1) == 0) {
        return result;
      }
    }
  }
  else if (v47)
  {
    return 0;
  }
  char v49 = *(unsigned char *)(a2 + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_ligatures + 4);
  if (*(unsigned char *)(a1 + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_ligatures + 4))
  {
    if (!*(unsigned char *)(a2 + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_ligatures + 4)) {
      return 0;
    }
  }
  else
  {
    if (*(_DWORD *)(a1 + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_ligatures) != *(_DWORD *)(a2
                                                                                                 + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_ligatures))
      char v49 = 1;
    if (v49) {
      return 0;
    }
  }
  uint64_t v50 = *(void *)(a1 + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_pseudoFont + 8);
  uint64_t v51 = *(void *)(a2 + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_pseudoFont + 8);
  if (v50)
  {
    if (!v51) {
      return 0;
    }
    if (*(void *)(a1 + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_pseudoFont) != *(void *)(a2
                                                                                                  + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_pseudoFont)
      || v50 != v51)
    {
      char v52 = _stringCompareWithSmolCheck(_:_:expecting:)();
      uint64_t result = 0;
      if ((v52 & 1) == 0) {
        return result;
      }
    }
  }
  else if (v51)
  {
    return 0;
  }
  id v53 = *(void **)(a1 + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_shadow);
  uint64_t v54 = *(void **)(a2 + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_shadow);
  if (v53)
  {
    if (!v54) {
      return 0;
    }
    sub_10050BF48(0, (unint64_t *)&qword_101684F80);
    id v55 = v54;
    id v56 = v53;
    char v57 = static NSObject.== infix(_:_:)();

    if ((v57 & 1) == 0) {
      return 0;
    }
  }
  else if (v54)
  {
    return 0;
  }
  char v58 = *(unsigned char *)(a2 + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_strikethrough + 8);
  if (*(unsigned char *)(a1 + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_strikethrough + 8))
  {
    if (!*(unsigned char *)(a2 + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_strikethrough + 8)) {
      return 0;
    }
  }
  else
  {
    if (*(void *)(a1 + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_strikethrough) != *(void *)(a2 + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_strikethrough)) {
      char v58 = 1;
    }
    if (v58) {
      return 0;
    }
  }
  char v59 = *(unsigned char *)(a2 + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_superscript + 8);
  if (*(unsigned char *)(a1 + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_superscript + 8))
  {
    if (!*(unsigned char *)(a2 + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_superscript + 8)) {
      return 0;
    }
  }
  else
  {
    if (*(void *)(a1 + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_superscript) != *(void *)(a2 + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_superscript)) {
      char v59 = 1;
    }
    if (v59) {
      return 0;
    }
  }
  uint64_t v60 = *(void **)(a1 + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_textBackground);
  uint64_t v61 = *(void **)(a2 + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_textBackground);
  if (v60)
  {
    if (!v61) {
      return 0;
    }
    sub_10050BF48(0, (unint64_t *)&qword_10168F9E0);
    id v62 = v61;
    id v63 = v60;
    char v64 = static NSObject.== infix(_:_:)();

    if ((v64 & 1) == 0) {
      return 0;
    }
  }
  else if (v61)
  {
    return 0;
  }
  char v65 = *(unsigned char *)(a2 + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_tracking + 4);
  if (*(unsigned char *)(a1 + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_tracking + 4))
  {
    if (!*(unsigned char *)(a2 + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_tracking + 4)) {
      return 0;
    }
  }
  else
  {
    if (*(float *)(a1 + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_tracking) != *(float *)(a2
                                                                                              + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_tracking))
      char v65 = 1;
    if (v65) {
      return 0;
    }
  }
  char v66 = *(unsigned char *)(a2 + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_underline + 8);
  if (*(unsigned char *)(a1 + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_underline + 8))
  {
    if (!*(unsigned char *)(a2 + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_underline + 8)) {
      return 0;
    }
  }
  else
  {
    if (*(void *)(a1 + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_underline) != *(void *)(a2
                                                                                                 + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_underline))
      char v66 = 1;
    if (v66) {
      return 0;
    }
  }
  unint64_t v67 = *(void **)(a1 + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_underlineColor);
  id v68 = *(void **)(a2 + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_underlineColor);
  if (v67)
  {
    if (!v68) {
      return 0;
    }
    sub_10050BF48(0, (unint64_t *)&qword_10168F9E0);
    id v69 = v68;
    id v70 = v67;
    char v71 = static NSObject.== infix(_:_:)();

    if ((v71 & 1) == 0) {
      return 0;
    }
    goto LABEL_145;
  }
  if (v68) {
    return 0;
  }
LABEL_145:
  char v72 = *(unsigned char *)(a2 + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_underlineWidth + 4);
  if (*(unsigned char *)(a1 + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_underlineWidth + 4))
  {
    if (!*(unsigned char *)(a2 + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_underlineWidth + 4)) {
      return 0;
    }
  }
  else
  {
    if (*(float *)(a1 + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_underlineWidth) != *(float *)(a2 + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_underlineWidth)) {
      char v72 = 1;
    }
    if (v72) {
      return 0;
    }
  }
  uint64_t result = *(unsigned __int8 *)(a2 + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_writingDirection + 8);
  if ((*(unsigned char *)(a1 + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_writingDirection + 8) & 1) == 0) {
    return (*(void *)(a1 + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_writingDirection) == *(void *)(a2 + OBJC_IVAR____TtC8Freeform19CRLWPCharacterStyle_writingDirection)) & ~result;
  }
  return result;
}

uint64_t sub_100BCB444()
{
  return 32;
}

uint64_t sub_100BCB450()
{
  return swift_release();
}

uint64_t sub_100BCB458(uint64_t a1, uint64_t a2)
{
  *(void *)a2 = *(void *)a1;
  long long v2 = *(_OWORD *)(a1 + 8);
  *(void *)(a2 + 24) = *(void *)(a1 + 24);
  *(_OWORD *)(a2 + 8) = v2;
  return swift_retain();
}

__n128 sub_100BCB480(__n128 *a1, uint64_t a2)
{
  *(void *)a2 = a1[1].n128_u64[1];
  __n128 result = *a1;
  *(void *)(a2 + 24) = a1[1].n128_u64[0];
  *(__n128 *)(a2 + 8) = result;
  return result;
}

NSString sub_100BCB49C()
{
  NSString result = String._bridgeToObjectiveC()();
  qword_10171BEB0 = (uint64_t)result;
  return result;
}

uint64_t getEnumTagSinglePayload for CRLAssetError(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 > 0x7FFFFFFA && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 2147483643);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  unsigned int v4 = v3 + 1;
  unsigned int v5 = v3 - 4;
  if (v4 >= 6) {
    return v5;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for CRLAssetError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 >= 0x7FFFFFFB)
  {
    *(void *)NSString result = 0;
    *(void *)(result + 8) = 0;
    *(_DWORD *)NSString result = a2 - 2147483643;
    if (a3 >= 0x7FFFFFFB) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFB) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2 + 4;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLAssetError()
{
  return &type metadata for CRLAssetError;
}

uint64_t sub_100BCB58C@<X0>(uint64_t a1@<X8>, double a2@<D0>)
{
  sub_1005498A4(v2 + 24, (uint64_t)v9);
  sub_1005057FC((uint64_t *)&unk_101683FD0);
  if (swift_dynamicCast())
  {
    long long v11 = v8[0];
    memcpy(__dst, (char *)&v8[1] + 8, sizeof(__dst));
    sub_100B99F0C(v2, a1);
    *((void *)&v8[1] + 1) = &type metadata for CRLBasicLayerAnimation.Def;
    *(void *)&v8[2] = sub_10054CB94();
    uint64_t v5 = swift_allocObject();
    *(void *)&v8[0] = v5;
    *(_OWORD *)(v5 + 16) = v11;
    *(double *)(v5 + 32) = a2;
    memcpy((void *)(v5 + 40), __dst, 0x114uLL);
    uint64_t v6 = a1 + 24;
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v6);
    return sub_10053974C(v8, v6);
  }
  else
  {
    memset(v8, 0, 300);
    sub_100522F00((uint64_t)v8, (uint64_t *)&unk_10169AEF0);
    uint64_t result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
  return result;
}

uint64_t sub_100BCB700@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for CRLRepAnimation();
  __chkstk_darwin(v6 - 8, v7);
  char v9 = (char *)v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1005498A4(v3 + 24, (uint64_t)&v12);
  sub_1005057FC((uint64_t *)&unk_101683FD0);
  if (swift_dynamicCast())
  {
    memcpy(v13, v11, 0x12CuLL);
    objc_storeStrong(v13, a1);
    sub_100B99F0C(v3, (uint64_t)v9);
    *((void *)&v11[1] + 1) = &type metadata for CRLBasicLayerAnimation.Def;
    *(void *)&v11[2] = sub_10054CB94();
    *(void *)&v11[0] = swift_allocObject();
    sub_100549A68((uint64_t)v13, *(void *)&v11[0] + 16);
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)(v9 + 24));
    sub_10053974C(v11, (uint64_t)(v9 + 24));
    sub_100BCC408((uint64_t)v9, a2);
    return sub_100549AC4((uint64_t)v13);
  }
  else
  {
    memset(v11, 0, 300);
    sub_100522F00((uint64_t)v11, (uint64_t *)&unk_10169AEF0);
    uint64_t result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
  return result;
}

uint64_t sub_100BCB8D8@<X0>(uint64_t a1@<X8>, double a2@<D0>)
{
  sub_1005498A4(v2 + 24, (uint64_t)v9);
  sub_1005057FC((uint64_t *)&unk_101683FD0);
  if (swift_dynamicCast())
  {
    memcpy(__dst, (char *)v8 + 8, sizeof(__dst));
    sub_100B99F0C(v2, a1);
    *((void *)&v8[1] + 1) = &type metadata for CRLSpringLayerAnimation.Def;
    *(void *)&v8[2] = sub_100860DAC();
    uint64_t v5 = swift_allocObject();
    *(void *)&v8[0] = v5;
    *(double *)(v5 + 16) = a2;
    memcpy((void *)(v5 + 24), __dst, 0x134uLL);
    uint64_t v6 = a1 + 24;
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v6);
    return sub_10053974C(v8, v6);
  }
  else
  {
    memset(v8, 0, 304);
    *(void *)&long long v8[19] = 1;
    DWORD2(v8[19]) = 0;
    sub_100522F00((uint64_t)v8, &qword_10167C0C8);
    uint64_t result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
  return result;
}

uint64_t sub_100BCBA44@<X0>(uint64_t a1@<X8>, double a2@<D0>)
{
  sub_1005498A4(v2 + 24, (uint64_t)v11);
  sub_1005057FC((uint64_t *)&unk_101683FD0);
  if (swift_dynamicCast())
  {
    uint64_t v5 = v9;
    memcpy(__dst, v10, sizeof(__dst));
    sub_100B99F0C(v2, a1);
    *((void *)&v10[0] + 1) = &type metadata for CRLSpringLayerAnimation.Def;
    *(void *)&v10[1] = sub_100860DAC();
    uint64_t v6 = swift_allocObject();
    *(void *)&long long v9 = v6;
    *(void *)(v6 + 16) = v5;
    *(double *)(v6 + 24) = a2;
    memcpy((void *)(v6 + 32), __dst, 0x12CuLL);
    uint64_t v7 = a1 + 24;
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v7);
    return sub_10053974C(&v9, v7);
  }
  else
  {
    memset(v10, 0, 288);
    long long v9 = 0u;
    *(void *)&v10[18] = 1;
    DWORD2(v10[18]) = 0;
    sub_100522F00((uint64_t)&v9, &qword_10167C0C8);
    uint64_t result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
  return result;
}

uint64_t sub_100BCBBB4@<X0>(uint64_t a1@<X8>, double a2@<D0>)
{
  sub_1005498A4(v2 + 24, (uint64_t)v9);
  sub_1005057FC((uint64_t *)&unk_101683FD0);
  if (swift_dynamicCast())
  {
    long long v11 = v8[0];
    memcpy(__dst, (char *)&v8[1] + 8, sizeof(__dst));
    sub_100B99F0C(v2, a1);
    *((void *)&v8[1] + 1) = &type metadata for CRLSpringLayerAnimation.Def;
    *(void *)&v8[2] = sub_100860DAC();
    uint64_t v5 = swift_allocObject();
    *(void *)&v8[0] = v5;
    *(_OWORD *)(v5 + 16) = v11;
    *(double *)(v5 + 32) = a2;
    memcpy((void *)(v5 + 40), __dst, 0x124uLL);
    uint64_t v6 = a1 + 24;
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v6);
    return sub_10053974C(v8, v6);
  }
  else
  {
    memset(v8, 0, 304);
    *(void *)&long long v8[19] = 1;
    DWORD2(v8[19]) = 0;
    sub_100522F00((uint64_t)v8, &qword_10167C0C8);
    uint64_t result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
  return result;
}

uint64_t sub_100BCBD30@<X0>(uint64_t a1@<X8>, double a2@<D0>)
{
  sub_1005498A4(v2 + 24, (uint64_t)v11);
  sub_1005057FC((uint64_t *)&unk_101683FD0);
  if (swift_dynamicCast())
  {
    long long v13 = v8;
    uint64_t v14 = v9;
    memcpy(__dst, v10, sizeof(__dst));
    sub_100B99F0C(v2, a1);
    *((void *)&v9 + 1) = &type metadata for CRLSpringLayerAnimation.Def;
    *(void *)&v10[0] = sub_100860DAC();
    uint64_t v5 = swift_allocObject();
    *(void *)&long long v8 = v5;
    *(_OWORD *)(v5 + 16) = v13;
    *(void *)(v5 + 32) = v14;
    *(double *)(v5 + 40) = a2;
    memcpy((void *)(v5 + 48), __dst, 0x11CuLL);
    uint64_t v6 = a1 + 24;
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v6);
    return sub_10053974C(&v8, v6);
  }
  else
  {
    long long v9 = 0u;
    memset(v10, 0, 272);
    long long v8 = 0u;
    *(void *)&v10[17] = 1;
    DWORD2(v10[17]) = 0;
    sub_100522F00((uint64_t)&v8, &qword_10167C0C8);
    uint64_t result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
  return result;
}

uint64_t sub_100BCBEBC@<X0>(uint64_t a1@<X8>, double a2@<D0>)
{
  sub_100B99F0C(v2, a1);
  uint64_t v5 = a1 + 24;
  uint64_t v7 = *(void *)(a1 + 48);
  uint64_t v6 = *(void *)(a1 + 56);
  sub_1005231B4(v5, v7);
  long long v8 = (uint64_t (*)(unsigned char *, void))(*(uint64_t (**)(unsigned char *, uint64_t))(*(void *)(v6 + 32) + 24))(v11, v7);
  *long long v9 = *v9 + a2;
  return v8(v11, 0);
}

uint64_t sub_100BCBF60()
{
  uint64_t v1 = (id *)(v0 + 56);
  switch(*(unsigned char *)(v0 + 312))
  {
    case 0:
    case 0x22:
      if (*(void *)(v0 + 80)) {
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v1);
      }
      if (*(void *)(v0 + 112)) {
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v0 + 88);
      }
      break;
    case 1:
    case 0x23:
      if (*(void *)(v0 + 80)) {
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v1);
      }
      break;
    case 0x12:
    case 0x14:
    case 0x1C:
    case 0x1E:

      break;
    case 0x13:
    case 0x15:
    case 0x1D:
    case 0x1F:

      break;
    case 0x20:
    case 0x24:
      swift_bridgeObjectRelease();
      goto LABEL_17;
    case 0x21:
    case 0x25:
      goto LABEL_17;
    case 0x3A:

      break;
    case 0x3F:

      if (*(void *)(v0 + 176)) {
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v0 + 152);
      }
      goto LABEL_17;
    case 0x40:

      if (*(void *)(v0 + 144)) {
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v0 + 120);
      }
LABEL_17:
      swift_bridgeObjectRelease();
      break;
    default:
      break;
  }

  return _swift_deallocObject(v0, 332, 7);
}

uint64_t sub_100BCC1B0()
{
  uint64_t v1 = (id *)(v0 + 40);
  switch(*(unsigned char *)(v0 + 296))
  {
    case 0:
    case 0x22:
      if (*(void *)(v0 + 64)) {
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v1);
      }
      if (*(void *)(v0 + 96)) {
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v0 + 72);
      }
      break;
    case 1:
    case 0x23:
      if (*(void *)(v0 + 64)) {
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v1);
      }
      break;
    case 0x12:
    case 0x14:
    case 0x1C:
    case 0x1E:

      break;
    case 0x13:
    case 0x15:
    case 0x1D:
    case 0x1F:

      break;
    case 0x20:
    case 0x24:
      swift_bridgeObjectRelease();
      goto LABEL_17;
    case 0x21:
    case 0x25:
      goto LABEL_17;
    case 0x3A:

      break;
    case 0x3F:

      if (*(void *)(v0 + 160)) {
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v0 + 136);
      }
      goto LABEL_17;
    case 0x40:

      if (*(void *)(v0 + 128)) {
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v0 + 104);
      }
LABEL_17:
      swift_bridgeObjectRelease();
      break;
    default:
      break;
  }

  return _swift_deallocObject(v0, 316, 7);
}

uint64_t sub_100BCC408(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CRLRepAnimation();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_100BCC46C(uint64_t a1)
{
  uint64_t v1 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    __CocoaSet.makeIterator()();
    type metadata accessor for CRLBoardItem(0);
    sub_10060A334();
    Set.Iterator.init(_cocoa:)();
    uint64_t v1 = v18;
    uint64_t v16 = v19;
    uint64_t v2 = v20;
    uint64_t v3 = v21;
    unint64_t v4 = v22;
  }
  else
  {
    uint64_t v5 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v16 = a1 + 56;
    uint64_t v2 = ~v5;
    uint64_t v6 = -v5;
    if (v6 < 64) {
      uint64_t v7 = ~(-1 << v6);
    }
    else {
      uint64_t v7 = -1;
    }
    unint64_t v4 = v7 & *(void *)(a1 + 56);
    swift_bridgeObjectRetain();
    uint64_t v3 = 0;
  }
  int64_t v8 = (unint64_t)(v2 + 64) >> 6;
  while (v1 < 0)
  {
    if (!__CocoaSet.Iterator.next()()) {
      goto LABEL_37;
    }
    type metadata accessor for CRLBoardItem(0);
    swift_unknownObjectRetain();
    swift_dynamicCast();
    id v12 = v17;
    swift_unknownObjectRelease();
    uint64_t v11 = v3;
    uint64_t v9 = v4;
    if (!v17) {
      goto LABEL_37;
    }
LABEL_33:
    type metadata accessor for CRLConnectionLineItem();
    if (swift_dynamicCastClass())
    {
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
    }
    else
    {
    }
    uint64_t v3 = v11;
    unint64_t v4 = v9;
  }
  if (v4)
  {
    uint64_t v9 = (v4 - 1) & v4;
    unint64_t v10 = __clz(__rbit64(v4)) | (v3 << 6);
    uint64_t v11 = v3;
LABEL_32:
    id v12 = *(id *)(*(void *)(v1 + 48) + 8 * v10);
    if (!v12) {
      goto LABEL_37;
    }
    goto LABEL_33;
  }
  int64_t v13 = v3 + 1;
  if (!__OFADD__(v3, 1))
  {
    if (v13 >= v8) {
      goto LABEL_37;
    }
    unint64_t v14 = *(void *)(v16 + 8 * v13);
    uint64_t v11 = v3 + 1;
    if (!v14)
    {
      uint64_t v11 = v3 + 2;
      if (v3 + 2 >= v8) {
        goto LABEL_37;
      }
      unint64_t v14 = *(void *)(v16 + 8 * v11);
      if (!v14)
      {
        uint64_t v11 = v3 + 3;
        if (v3 + 3 >= v8) {
          goto LABEL_37;
        }
        unint64_t v14 = *(void *)(v16 + 8 * v11);
        if (!v14)
        {
          uint64_t v11 = v3 + 4;
          if (v3 + 4 >= v8) {
            goto LABEL_37;
          }
          unint64_t v14 = *(void *)(v16 + 8 * v11);
          if (!v14)
          {
            uint64_t v11 = v3 + 5;
            if (v3 + 5 >= v8) {
              goto LABEL_37;
            }
            unint64_t v14 = *(void *)(v16 + 8 * v11);
            if (!v14)
            {
              uint64_t v15 = v3 + 6;
              while (v8 != v15)
              {
                unint64_t v14 = *(void *)(v16 + 8 * v15++);
                if (v14)
                {
                  uint64_t v11 = v15 - 1;
                  goto LABEL_31;
                }
              }
LABEL_37:
              sub_10052E1EC();
              return;
            }
          }
        }
      }
    }
LABEL_31:
    uint64_t v9 = (v14 - 1) & v14;
    unint64_t v10 = __clz(__rbit64(v14)) + (v11 << 6);
    goto LABEL_32;
  }
  __break(1u);
}

void sub_100BCC764(unsigned __int8 a1, double a2, double a3)
{
  unint64_t v4 = v3;
  int v8 = a1;
  id v9 = [v4 interactiveCanvasController];
  if (v8 == 8)
  {
    if (v9)
    {
      id v40 = v9;
      id v10 = [v9 layerHost];
      if (!v10)
      {
LABEL_34:

        goto LABEL_35;
      }
      uint64_t v11 = v10;
      if ([v10 respondsToSelector:"asiOSCVC"])
      {
        id v12 = [v11 asiOSCVC];
        swift_unknownObjectRelease();
        id v13 = [v12 presentedViewController];
        if (v13)
        {
          unint64_t v14 = v13;
          type metadata accessor for CRLiOSMiniShapePickerHostingController();
          uint64_t v15 = (void *)swift_dynamicCastClass();
          if (v15)
          {
            if (([v15 isBeingDismissed] & 1) == 0) {
              [v12 dismissViewControllerAnimated:1 completion:0];
            }

            goto LABEL_35;
          }
        }
        goto LABEL_34;
      }

      swift_unknownObjectRelease();
    }
LABEL_35:
    sub_100A590A0(v4, a2, a3);
    return;
  }
  if (!v9)
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"miniShapePickerInserter(didPick:unscaledPopoverAnchorPoint:)", 60, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLConnectionLineEditor.swift", 94, 2, 46, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"miniShapePickerInserter(didPick:unscaledPopoverAnchorPoint:)", 60, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLConnectionLineEditor.swift", 94, 2, 46);
    return;
  }
  id v41 = v9;
  uint64_t v16 = (char *)[v9 editingCoordinator];
  if (!v16)
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"miniShapePickerInserter(didPick:unscaledPopoverAnchorPoint:)", 60, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLConnectionLineEditor.swift", 94, 2, 47, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"miniShapePickerInserter(didPick:unscaledPopoverAnchorPoint:)", 60, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLConnectionLineEditor.swift", 94, 2, 47);
    char v34 = v41;
    goto LABEL_41;
  }
  char v17 = v16;
  id v39 = *(id *)&v16[OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_boardItemFactory];

  id v18 = [v4 boardItems];
  type metadata accessor for CRLBoardItem(0);
  sub_10060A334();
  uint64_t v19 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

  sub_100BCC46C(v19);
  unint64_t v21 = v20;
  swift_bridgeObjectRelease();
  if (!(v21 >> 62))
  {
    if (*(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_14;
    }
LABEL_40:
    swift_bridgeObjectRelease();
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"miniShapePickerInserter(didPick:unscaledPopoverAnchorPoint:)", 60, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLConnectionLineEditor.swift", 94, 2, 48, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"miniShapePickerInserter(didPick:unscaledPopoverAnchorPoint:)", 60, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLConnectionLineEditor.swift", 94, 2, 48);

    char v34 = v39;
    goto LABEL_41;
  }
  swift_bridgeObjectRetain();
  uint64_t v35 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (!v35) {
    goto LABEL_40;
  }
LABEL_14:
  if ((v21 & 0xC000000000000001) != 0)
  {
    id v22 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  else
  {
    if (!*(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return;
    }
    id v22 = *(id *)(v21 + 32);
  }
  id v38 = v22;
  swift_bridgeObjectRelease();
  id v23 = [v41 board];
  if (v23)
  {
    id v24 = v23;
    id v37 = sub_1007A6D8C(v24, (uint64_t)v38);

    if (v37 || (id v36 = v24, v37 = sub_1007A70FC(v36, (uint64_t)v38), v36, v37))
    {
      id v25 = sub_100B9BBFC(a1, 150.0, 150.0);
      if (v25)
      {
        uint64_t v26 = v25;
        uint64_t v27 = sub_100B9C088(a1);
        if (v28) {
          uint64_t v29 = 21;
        }
        else {
          uint64_t v29 = v27;
        }
        id v30 = sub_100F3F60C(v37, v26, v29);
        if ([v4 canHandleInsertAndConnectBoardItem:v30])
        {
          aBlock[4] = SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:);
          aBlock[5] = 0;
          aBlock[0] = _NSConcreteStackBlock;
          aBlock[1] = *(void *)"";
          aBlock[2] = sub_100679958;
          aBlock[3] = &unk_101527910;
          char v31 = _Block_copy(aBlock);
          [v4 insertAndConnectBoardItem:v30 postProcessBlock:v31];
          _Block_release(v31);
          id v32 = v30;
          id v33 = [v4 anyConnectionLine];
          sub_100BCCF50((uint64_t)v32, v33, v41);
        }
        sub_100B9DB50(v4);

        return;
      }
      sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"miniShapePickerInserter(didPick:unscaledPopoverAnchorPoint:)", 60, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLConnectionLineEditor.swift", 94, 2, 51, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"miniShapePickerInserter(didPick:unscaledPopoverAnchorPoint:)", 60, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLConnectionLineEditor.swift", 94, 2, 51);

      char v34 = v37;
    }
    else
    {
      sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"miniShapePickerInserter(didPick:unscaledPopoverAnchorPoint:)", 60, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLConnectionLineEditor.swift", 94, 2, 50, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"miniShapePickerInserter(didPick:unscaledPopoverAnchorPoint:)", 60, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLConnectionLineEditor.swift", 94, 2, 50);

      char v34 = v36;
    }
  }
  else
  {

    char v34 = v38;
  }
LABEL_41:
}

void sub_100BCCF2C(unsigned __int8 a1, double a2, double a3)
{
}

void sub_100BCCF50(uint64_t a1, void *a2, void *a3)
{
  uint64_t v6 = type metadata accessor for CRLInsertionAnimationHelper();
  sub_1005057FC((uint64_t *)&unk_101676C10);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_101177E70;
  *(void *)(v7 + 32) = a1;
  v13[0] = v7;
  specialized Array._endMutation()();
  swift_unknownObjectRetain();
  id v8 = [a3 canvas];
  id v9 = (void *)swift_allocObject();
  v9[2] = v13[0];
  v9[3] = a3;
  v9[4] = a2;
  v9[5] = v6;
  v13[4] = sub_1005C3DD0;
  v13[5] = v9;
  v13[0] = _NSConcreteStackBlock;
  v13[1] = *(void *)"";
  void v13[2] = sub_100679958;
  v13[3] = &unk_101527960;
  id v10 = _Block_copy(v13);
  swift_bridgeObjectRetain();
  id v11 = a3;
  id v12 = a2;
  swift_release();
  [v8 afterLayoutIncludingLayers:1 performBlock:v10];
  _Block_release(v10);
  swift_bridgeObjectRelease();
}

uint64_t sub_100BCD0C0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100BCD0D0()
{
  return swift_release();
}

uint64_t sub_100BCD0D8()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 48, 7);
}

__n128 sub_100BCD128()
{
  __asm { FMOV            V0.2D, #2.0 }
  xmmword_10171BEC0 = (__int128)result;
  return result;
}

id sub_100BCD148(uint64_t a1, void *a2)
{
  v2[OBJC_IVAR____TtC8Freeform21CRLConnectionLineKnob_knobState] = 0;
  *(void *)&v2[OBJC_IVAR____TtC8Freeform21CRLConnectionLineKnob_animatedLayer] = 0;
  id v5 = sub_100BD0ED4(a1);
  uint64_t v7 = v6;
  v27.receiver = v2;
  v27.super_class = (Class)type metadata accessor for CRLConnectionLineKnob();
  id v8 = [super initWithImage:v5 highlightedImage:v7 radius:a1 tag:a2 onRep:15.0];
  uint64_t v9 = qword_10166FC88;
  id v10 = v8;
  if (v9 != -1) {
    swift_once();
  }
  uint64_t v11 = qword_10171BED8;
  uint64_t v12 = *(void *)(qword_10171BED8 + 16);
  if (v12)
  {
    id v23 = v7;
    id v24 = a2;
    id v25 = v10;
    id v13 = self;
    swift_bridgeObjectRetain_n();
    uint64_t v14 = 0;
    do
    {
      uint64_t v15 = qword_10166FC80;
      id v16 = *(id *)(v11 + 8 * v14 + 32);
      if (v15 != -1) {
        swift_once();
      }
      ++v14;
      id v17 = (id)qword_10171BED0;
      id v18 = [v13 mainQueue];
      uint64_t v19 = swift_allocObject();
      swift_unknownObjectWeakInit();
      aBlock[4] = sub_100BD134C;
      aBlock[5] = v19;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = *(void *)"";
      aBlock[2] = sub_1005E5680;
      aBlock[3] = &unk_101527A90;
      unint64_t v20 = _Block_copy(aBlock);
      swift_release();
      id v21 = [v17 addObserverForName:v16 object:0 queue:v18 usingBlock:v20];
      _Block_release(v20);

      swift_unknownObjectRelease();
    }
    while (v12 != v14);

    id v10 = v25;
    swift_bridgeObjectRelease();
    a2 = v24;
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();

  return v10;
}

void sub_100BCD404()
{
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = Strong;
    id v2 = sub_100BD0ED4((uint64_t)[Strong tag]);
    unint64_t v4 = v3;
    [v1 setImage:v2];
    [v1 setHighlightedImage:v4];
  }
}

id sub_100BCD4D8()
{
  if (qword_10166FC88 != -1) {
    swift_once();
  }
  uint64_t v1 = qword_10171BED8;
  uint64_t v2 = *(void *)(qword_10171BED8 + 16);
  if (v2)
  {
    swift_bridgeObjectRetain();
    for (uint64_t i = 0; i != v2; ++i)
    {
      uint64_t v4 = qword_10166FC80;
      id v5 = *(id *)(v1 + 8 * i + 32);
      if (v4 != -1) {
        swift_once();
      }
      [(id)qword_10171BED0 removeObserver:v0 name:v5 object:0];
    }
    swift_bridgeObjectRelease();
  }
  v7.receiver = v0;
  v7.super_class = (Class)type metadata accessor for CRLConnectionLineKnob();
  return [super dealloc];
}

uint64_t sub_100BCD638(uint64_t result, char a2)
{
  uint64_t v3 = v2;
  char v4 = result;
  char v5 = 1;
  switch((char)result)
  {
    case 1:
      char v5 = *(unsigned char *)(v3 + OBJC_IVAR____TtC8Freeform21CRLConnectionLineKnob_knobState);
      switch(v5)
      {
        case 1:
          goto LABEL_10;
        case 2:
          goto LABEL_6;
        case 3:
          char v5 = 4;
          goto LABEL_6;
        default:
          char v5 = 0;
          a2 = 0;
          goto LABEL_6;
      }
    case 2:
      goto LABEL_6;
    case 3:
      char v5 = 3;
LABEL_6:
      objc_super v7 = *(void **)(v3 + OBJC_IVAR____TtC8Freeform21CRLConnectionLineKnob_animatedLayer);
      if (v7)
      {
        id v8 = v7;
        sub_100BCEBB4(v5, (uint64_t)v11);

        uint64_t v9 = v12;
        if (v12)
        {
          uint64_t v10 = v13;
          sub_10050F848(v11, v12);
          sub_100F5EFAC(0, 1, a2 & 1, 0, 0, 0, 0, v9, v10);
          __n128 result = _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v11);
        }
        else
        {
          __n128 result = sub_1006C99F4((uint64_t)v11);
        }
      }
      break;
    default:
      break;
  }
LABEL_10:
  *(unsigned char *)(v3 + OBJC_IVAR____TtC8Freeform21CRLConnectionLineKnob_knobState) = v4;
  return result;
}

void sub_100BCD798()
{
  uint64_t v1 = *(void **)&v0[OBJC_IVAR____TtC8Freeform21CRLConnectionLineKnob_animatedLayer];
  if (v1)
  {
    uint64_t v2 = v1;
    id v3 = [v0 knobImage];
    char v4 = *(void **)&v2[OBJC_IVAR____TtCC8Freeform21CRLConnectionLineKnobP33_96EC3ACD086E6EEC09C8AECDD8231E3A34CRLConnectionLineKnobAnimatedLayer_connectionKnobCurrentImage];
    *(void *)&v2[OBJC_IVAR____TtCC8Freeform21CRLConnectionLineKnobP33_96EC3ACD086E6EEC09C8AECDD8231E3A34CRLConnectionLineKnobAnimatedLayer_connectionKnobCurrentImage] = v3;
    id v5 = v3;

    sub_100BCE2FC();
  }
}

void sub_100BCD95C()
{
  id v1 = [v0 imageRenderable];
  [v1 removeFromSuperlayer];

  id v2 = objc_allocWithZone((Class)type metadata accessor for CRLConnectionLineKnob.CRLConnectionLineKnobAnimatedLayer());
  id v3 = v0;
  char v4 = sub_100BCE718(v3);
  id v5 = *(void **)&v3[OBJC_IVAR____TtC8Freeform21CRLConnectionLineKnob_animatedLayer];
  *(void *)&v3[OBJC_IVAR____TtC8Freeform21CRLConnectionLineKnob_animatedLayer] = v4;
  uint64_t v6 = v4;
  sub_100BCDDC8(v5);

  sub_100BCD638(1, 0);
}

uint64_t sub_100BCDA70(uint64_t a1, double a2, double a3)
{
  char v4 = v3;
  v16.receiver = v4;
  v16.super_class = (Class)type metadata accessor for CRLConnectionLineKnob();
  uint64_t result = [v16 cursorEnteredKnobAtPoint:a1 withPlatformObject:a2];
  uint64_t v9 = *(void **)&v4[OBJC_IVAR____TtC8Freeform21CRLConnectionLineKnob_animatedLayer];
  if (v9)
  {
    id v10 = v9;
    sub_100BCEBB4(1, (uint64_t)v13);

    uint64_t v11 = v14;
    if (v14)
    {
      uint64_t v12 = v15;
      sub_10050F848(v13, v14);
      sub_100F5EFAC(0, 1, 1, 0, 0, 0, 0, v11, v12);
      uint64_t result = _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v13);
    }
    else
    {
      uint64_t result = sub_1006C99F4((uint64_t)v13);
    }
  }
  v4[OBJC_IVAR____TtC8Freeform21CRLConnectionLineKnob_knobState] = 2;
  return result;
}

uint64_t sub_100BCDBF0(uint64_t a1, double a2, double a3)
{
  char v4 = v3;
  v19.receiver = v4;
  v19.super_class = (Class)type metadata accessor for CRLConnectionLineKnob();
  uint64_t result = [super cursorExitedKnobAtPoint:a1 withPlatformObject:a2];
  uint64_t v9 = OBJC_IVAR____TtC8Freeform21CRLConnectionLineKnob_knobState;
  char v10 = v4[OBJC_IVAR____TtC8Freeform21CRLConnectionLineKnob_knobState];
  char v11 = 1;
  switch(v10)
  {
    case 1:
      goto LABEL_8;
    case 2:
      goto LABEL_4;
    case 3:
      char v10 = 4;
      goto LABEL_4;
    default:
      char v10 = 0;
      char v11 = 0;
LABEL_4:
      uint64_t v12 = *(void **)&v4[OBJC_IVAR____TtC8Freeform21CRLConnectionLineKnob_animatedLayer];
      if (v12)
      {
        id v13 = v12;
        sub_100BCEBB4(v10, (uint64_t)v16);

        uint64_t v14 = v17;
        if (v17)
        {
          uint64_t v15 = v18;
          sub_10050F848(v16, v17);
          sub_100F5EFAC(0, 1, v11, 0, 0, 0, 0, v14, v15);
          uint64_t result = _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v16);
        }
        else
        {
          uint64_t result = sub_1006C99F4((uint64_t)v16);
        }
      }
LABEL_8:
      v4[v9] = 1;
      return result;
  }
}

void sub_100BCDDC8(void *a1)
{
  id v2 = v1;
  id v3 = a1;
  uint64_t v4 = OBJC_IVAR____TtC8Freeform21CRLConnectionLineKnob_animatedLayer;
  id v5 = *(void **)&v1[OBJC_IVAR____TtC8Freeform21CRLConnectionLineKnob_animatedLayer];
  if (!v5)
  {
    if (!a1) {
      return;
    }
LABEL_6:
    [v3 removeFromSuperlayer];
    id v5 = *(void **)&v2[v4];
    if (!v5) {
      return;
    }
    goto LABEL_7;
  }
  if (a1)
  {
    type metadata accessor for CRLConnectionLineKnob.CRLConnectionLineKnobAnimatedLayer();
    id v3 = v3;
    id v6 = v5;
    char v7 = static NSObject.== infix(_:_:)();

    if (v7) {
      return;
    }
    goto LABEL_6;
  }
LABEL_7:
  id v16 = v5;
  [v16 setAnchorPoint:0.0, 0.0];
  id v8 = [v2 renderable];
  if (v8)
  {
    uint64_t v9 = v8;
    id v10 = [v8 layer];

    [v10 addSublayer:v16];
  }
  sub_100BCE4F0();
  double v12 = v11;
  sub_100BCE4F0();
  if (v12 > v13) {
    double v14 = v12;
  }
  else {
    double v14 = v13;
  }
  double v15 = v14 * 0.5;
  if (v15 < 15.0) {
    double v15 = 15.0;
  }
  [v2 setRadius:v15];
}

double sub_100BCDF5C()
{
  id v1 = [v0 rep];
  double v2 = 19.0;
  if (v1)
  {
    id v3 = v1;
    if ([v0 tag] == (id)6 && (objc_msgSend(v3, "enabledKnobMask") & 0x40) != 0
      || [v0 tag] == (id)8 && (objc_msgSend(v3, "enabledKnobMask") & 0x100) != 0
      || [v0 tag] == (id)4 && (objc_msgSend(v3, "enabledKnobMask") & 0x10) != 0)
    {
    }
    else
    {
      if ([v0 tag] != (id)2)
      {

        return v2;
      }
      unsigned __int8 v4 = [v3 enabledKnobMask];

      if ((v4 & 4) == 0) {
        return v2;
      }
    }
    return 25.0;
  }
  return v2;
}

double sub_100BCE070()
{
  v5[0] = 1065353216;
  char v6 = 6;
  id v0 = objc_allocWithZone((Class)CAMediaTimingFunction);
  LODWORD(v1) = 0.5;
  LODWORD(v2) = 1.0;
  id v3 = [v0 initWithControlPoints:0.0 :0.0 :v1 :v2];
  sub_100549A0C((uint64_t)v5, (uint64_t)&unk_101696830);
  unk_101696820 = xmmword_10118C5C0;
  qword_101696818 = (uint64_t)v3;
  qword_101696938 = 0;
  *(void *)&double result = 131586;
  dword_101696940 = 131586;
  return result;
}

id sub_100BCE110()
{
  double v1 = *(void **)(v0
                + OBJC_IVAR____TtCC8Freeform21CRLConnectionLineKnobP33_96EC3ACD086E6EEC09C8AECDD8231E3A34CRLConnectionLineKnobAnimatedLayer_resizeKnobLayer);
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  double v3 = 0.0;
  if (Strong)
  {
    unsigned __int8 v4 = Strong;
    id v5 = [Strong defaultKnobImage];

    double v6 = 0.0;
    if (v5)
    {
      [v5 size];
      double v6 = v7;
      double v3 = v8;
    }
  }
  else
  {
    double v6 = 0.0;
  }
  [v1 setBounds:0.0, 0.0, v6, v3];
  uint64_t v9 = (void *)swift_unknownObjectWeakLoadStrong();
  if (v9
    && (id v10 = v9, v11 = [v9 defaultKnobImage], v10, v11))
  {
    double v12 = (void *)swift_unknownObjectWeakLoadStrong();
    double v13 = 1.0;
    if (v12)
    {
      double v14 = v12;
      id v15 = [v12 rep];

      if (v15)
      {
        id v16 = [v15 canvas];

        if (v16)
        {
          [v16 contentsScale];
          double v13 = v17;
        }
      }
    }
    id v18 = [v11 CGImageForContentsScale:v13];

    id v21 = v18;
    type metadata accessor for CGImage(0);
    uint64_t v19 = _bridgeAnythingToObjectiveC<A>(_:)();
  }
  else
  {
    uint64_t v19 = 0;
  }
  [v1 setContents:v19];
  swift_unknownObjectRelease();
  return [v1 setOpacity:0.0];
}

void sub_100BCE2FC()
{
  double v1 = *(void **)(v0
                + OBJC_IVAR____TtCC8Freeform21CRLConnectionLineKnobP33_96EC3ACD086E6EEC09C8AECDD8231E3A34CRLConnectionLineKnobAnimatedLayer_connectionKnobCurrentImage);
  if (v1)
  {
    double v2 = *(void **)(v0
                  + OBJC_IVAR____TtCC8Freeform21CRLConnectionLineKnobP33_96EC3ACD086E6EEC09C8AECDD8231E3A34CRLConnectionLineKnobAnimatedLayer_connectionKnobLayer);
    id v3 = v1;
    [v3 size];
    [v2 setBounds:0.0, 0.0, v4, v5];
    uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
    double v7 = 1.0;
    if (Strong)
    {
      double v8 = Strong;
      id v9 = [Strong rep];

      if (v9)
      {
        id v10 = [v9 canvas];

        if (v10)
        {
          [v10 contentsScale];
          double v7 = v11;
        }
      }
    }
    id v12 = [v3 CGImageForContentsScale:v7];
    [v2 setContents:v12];
  }
  else
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"updateConnectionKnobLayer()", 27, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCanvas/CRLConnectionLineKnob.swift", 91, 2, 358, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"updateConnectionKnobLayer()", 27, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCanvas/CRLConnectionLineKnob.swift", 91, 2, 358);
  }
}

void sub_100BCE4F0()
{
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    double v1 = Strong;
    id v2 = [Strong defaultKnobImage];

    if (v2)
    {
      [v2 size];
    }
  }
  id v3 = (void *)swift_unknownObjectWeakLoadStrong();
  if (v3)
  {
    double v4 = v3;
    id v5 = [v3 image];

    if (v5)
    {
      [v5 size];
    }
  }
  double v6 = (void *)swift_unknownObjectWeakLoadStrong();
  if (v6)
  {
    double v7 = v6;
    id v8 = [v6 image];

    if (v8)
    {
      [v8 size];
    }
  }
  id v9 = (void *)swift_unknownObjectWeakLoadStrong();
  if (v9)
  {
    id v10 = v9;
    id v11 = [v9 defaultKnobImage];

    if (v11)
    {
      [v11 size];
    }
  }
  id v12 = (void *)swift_unknownObjectWeakLoadStrong();
  if (v12)
  {
    double v13 = v12;
    id v14 = [v12 image];

    if (v14)
    {
      [v14 size];
    }
  }
  id v15 = (void *)swift_unknownObjectWeakLoadStrong();
  if (v15)
  {
    id v16 = v15;
    id v17 = [v15 image];

    if (v17)
    {
      [v17 size];
    }
  }
}

char *sub_100BCE718(void *a1)
{
  uint64_t v3 = OBJC_IVAR____TtCC8Freeform21CRLConnectionLineKnobP33_96EC3ACD086E6EEC09C8AECDD8231E3A34CRLConnectionLineKnobAnimatedLayer_containerLayer;
  id v4 = objc_allocWithZone((Class)CALayer);
  id v5 = v1;
  *(void *)&v1[v3] = [v4 init];
  uint64_t v6 = OBJC_IVAR____TtCC8Freeform21CRLConnectionLineKnobP33_96EC3ACD086E6EEC09C8AECDD8231E3A34CRLConnectionLineKnobAnimatedLayer_resizeKnobLayer;
  *(void *)&v5[v6] = [objc_allocWithZone((Class)CALayer) init];
  uint64_t v7 = OBJC_IVAR____TtCC8Freeform21CRLConnectionLineKnobP33_96EC3ACD086E6EEC09C8AECDD8231E3A34CRLConnectionLineKnobAnimatedLayer_connectionKnobCurrentImage;
  *(void *)&v5[OBJC_IVAR____TtCC8Freeform21CRLConnectionLineKnobP33_96EC3ACD086E6EEC09C8AECDD8231E3A34CRLConnectionLineKnobAnimatedLayer_connectionKnobCurrentImage] = 0;
  uint64_t v8 = OBJC_IVAR____TtCC8Freeform21CRLConnectionLineKnobP33_96EC3ACD086E6EEC09C8AECDD8231E3A34CRLConnectionLineKnobAnimatedLayer_connectionKnobLayer;
  *(void *)&v5[v8] = [objc_allocWithZone((Class)CALayer) init];
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakAssign();
  id v9 = [a1 knobImage];
  id v10 = *(void **)&v5[v7];
  *(void *)&v5[v7] = v9;

  v49.receiver = v5;
  v49.super_class = (Class)type metadata accessor for CRLConnectionLineKnob.CRLConnectionLineKnobAnimatedLayer();
  id v11 = [super init];
  sub_100BCE4F0();
  [v11 setBounds:0.0, 0.0, v12, v13];
  sub_100BCE110();
  sub_100BCE2FC();
  uint64_t v14 = OBJC_IVAR____TtCC8Freeform21CRLConnectionLineKnobP33_96EC3ACD086E6EEC09C8AECDD8231E3A34CRLConnectionLineKnobAnimatedLayer_containerLayer;
  id v15 = *(id *)&v11[OBJC_IVAR____TtCC8Freeform21CRLConnectionLineKnobP33_96EC3ACD086E6EEC09C8AECDD8231E3A34CRLConnectionLineKnobAnimatedLayer_containerLayer];
  sub_100BCE4F0();
  [v15 setBounds:0.0, 0.0, v16, v17];

  [*(id *)&v11[v14] setAnchorPoint:0.0, 0.0];
  id v18 = [*(id *)&v11[v14] superlayer];

  if (!v18) {
    [v11 addSublayer:*(void *)&v11[v14]];
  }
  uint64_t v19 = self;
  [v19 begin];
  [v19 setDisableActions:1];
  uint64_t v20 = OBJC_IVAR____TtCC8Freeform21CRLConnectionLineKnobP33_96EC3ACD086E6EEC09C8AECDD8231E3A34CRLConnectionLineKnobAnimatedLayer_connectionKnobLayer;
  id v21 = *(id *)&v11[OBJC_IVAR____TtCC8Freeform21CRLConnectionLineKnobP33_96EC3ACD086E6EEC09C8AECDD8231E3A34CRLConnectionLineKnobAnimatedLayer_connectionKnobLayer];
  [v21 bounds];
  CGFloat v23 = v22;
  CGFloat v25 = v24;
  CGFloat v27 = v26;
  CGFloat v29 = v28;
  [v11 bounds];
  [v21 setFrame:sub_100065A10(v23, v25, v27, v29, v30, v31, v32, v33)];

  [*(id *)&v11[v14] addSublayer:*(void *)&v11[v20]];
  uint64_t v34 = OBJC_IVAR____TtCC8Freeform21CRLConnectionLineKnobP33_96EC3ACD086E6EEC09C8AECDD8231E3A34CRLConnectionLineKnobAnimatedLayer_resizeKnobLayer;
  id v35 = *(id *)&v11[OBJC_IVAR____TtCC8Freeform21CRLConnectionLineKnobP33_96EC3ACD086E6EEC09C8AECDD8231E3A34CRLConnectionLineKnobAnimatedLayer_resizeKnobLayer];
  [v35 bounds];
  CGFloat v37 = v36;
  CGFloat v39 = v38;
  CGFloat v41 = v40;
  CGFloat v43 = v42;
  [v11 bounds];
  [v35 setFrame:sub_100065A10(v37, v39, v41, v43, v44, v45, v46, v47)];

  [*(id *)&v11[v14] addSublayer:*(void *)&v11[v34]];
  [v19 commit];

  return v11;
}

id sub_100BCEA40(void *a1)
{
  uint64_t v3 = OBJC_IVAR____TtCC8Freeform21CRLConnectionLineKnobP33_96EC3ACD086E6EEC09C8AECDD8231E3A34CRLConnectionLineKnobAnimatedLayer_containerLayer;
  id v4 = objc_allocWithZone((Class)CALayer);
  id v5 = v1;
  *(void *)&v1[v3] = [v4 init];
  uint64_t v6 = OBJC_IVAR____TtCC8Freeform21CRLConnectionLineKnobP33_96EC3ACD086E6EEC09C8AECDD8231E3A34CRLConnectionLineKnobAnimatedLayer_resizeKnobLayer;
  *(void *)&v5[v6] = [objc_allocWithZone((Class)CALayer) init];
  *(void *)&v5[OBJC_IVAR____TtCC8Freeform21CRLConnectionLineKnobP33_96EC3ACD086E6EEC09C8AECDD8231E3A34CRLConnectionLineKnobAnimatedLayer_connectionKnobCurrentImage] = 0;
  uint64_t v7 = OBJC_IVAR____TtCC8Freeform21CRLConnectionLineKnobP33_96EC3ACD086E6EEC09C8AECDD8231E3A34CRLConnectionLineKnobAnimatedLayer_connectionKnobLayer;
  *(void *)&v5[v7] = [objc_allocWithZone((Class)CALayer) init];
  swift_unknownObjectWeakInit();

  sub_10050F848(a1, a1[3]);
  uint64_t v8 = _bridgeAnythingToObjectiveC<A>(_:)();
  v11.receiver = v5;
  v11.super_class = (Class)type metadata accessor for CRLConnectionLineKnob.CRLConnectionLineKnobAnimatedLayer();
  [super initWithLayer:v8];
  swift_unknownObjectRelease();
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)a1);
  return v9;
}

void sub_100BCEBB4(char a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for CRLBasicLayerAnimation();
  __chkstk_darwin(v6, v7);
  id v9 = (char *)&v254 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (!Strong)
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"animationProvider(for:)", 23, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCanvas/CRLConnectionLineKnob.swift", 91, 2, 419, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"animationProvider(for:)", 23, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCanvas/CRLConnectionLineKnob.swift", 91, 2, 419);
LABEL_8:
    *(void *)(a2 + 32) = 0;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
    return;
  }
  objc_super v11 = Strong;
  id v12 = [Strong rep];
  if (!v12)
  {

    goto LABEL_8;
  }
  id v347 = v12;
  [v12 additionalRotationForKnobOrientation];
  double v14 = sub_10053BEB4(v13);
  CATransform3DMakeRotation(&v350, v14, 0.0, 0.0, 1.0);
  CGFloat m32 = v350.m32;
  CGFloat m33 = v350.m33;
  CGFloat m34 = v350.m34;
  CGFloat m41 = v350.m41;
  CGFloat m42 = v350.m42;
  CGFloat m43 = v350.m43;
  CGFloat m44 = v350.m44;
  switch(a1)
  {
    case 1:
      double v42 = *(void **)&v3[OBJC_IVAR____TtCC8Freeform21CRLConnectionLineKnobP33_96EC3ACD086E6EEC09C8AECDD8231E3A34CRLConnectionLineKnobAnimatedLayer_connectionKnobLayer];
      CATransform3DScale(&v349, &v350, 1.5, 1.5, 1.0);
      CATransform3D v350 = v349;
      char v351 = 53;
      CGFloat m24 = COERCE_DOUBLE([self functionWithName:kCAMediaTimingFunctionEaseOut]);
      sub_1006006C8((uint64_t)&v350, (uint64_t)&v349);
      id v43 = v42;
      UUID.init()();
      swift_unknownObjectWeakInit();
      CGFloat v44 = &v9[*(int *)(v6 + 28)];
      uint64_t v45 = type metadata accessor for CRLLayerAnimationDisplayLink.Handler();
      CGFloat v46 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v45 - 8) + 56);
      CGFloat m31 = *(double *)&v11;
      v46(v44, 1, 1, v45);
      v46(&v9[*(int *)(v6 + 32)], 1, 1, v45);
      swift_unknownObjectWeakAssign();

      goto LABEL_13;
    case 2:
    case 4:
      CGFloat v47 = *(void **)&v3[OBJC_IVAR____TtCC8Freeform21CRLConnectionLineKnobP33_96EC3ACD086E6EEC09C8AECDD8231E3A34CRLConnectionLineKnobAnimatedLayer_connectionKnobLayer];
      CATransform3DScale(&v349, &v350, 1.0, 1.0, 1.0);
      CATransform3D v350 = v349;
      char v351 = 53;
      id v48 = [self functionWithName:kCAMediaTimingFunctionEaseOut];
      goto LABEL_12;
    case 3:
      CGFloat v47 = *(void **)&v3[OBJC_IVAR____TtCC8Freeform21CRLConnectionLineKnobP33_96EC3ACD086E6EEC09C8AECDD8231E3A34CRLConnectionLineKnobAnimatedLayer_connectionKnobLayer];
      CATransform3DScale(&v349, &v350, 0.95, 0.95, 1.0);
      CATransform3D v350 = v349;
      char v351 = 53;
      id v48 = [self functionWithName:kCAMediaTimingFunctionEaseOut];
LABEL_12:
      CGFloat m24 = COERCE_DOUBLE(v48);
      sub_1006006C8((uint64_t)&v350, (uint64_t)&v349);
      id v49 = v47;
      UUID.init()();
      swift_unknownObjectWeakInit();
      uint64_t v50 = &v9[*(int *)(v6 + 28)];
      uint64_t v51 = type metadata accessor for CRLLayerAnimationDisplayLink.Handler();
      uint64_t v52 = *(void *)(v51 - 8);
      CGFloat m31 = *(double *)&v11;
      id v53 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v52 + 56);
      v53(v50, 1, 1, v51);
      v53(&v9[*(int *)(v6 + 32)], 1, 1, v51);
      swift_unknownObjectWeakAssign();

LABEL_13:
      sub_100549A0C((uint64_t)&v349, (uint64_t)(v9 + 24));
      *(_OWORD *)(v9 + 8) = xmmword_1011AD600;
      *(CGFloat *)id v9 = m24;
      *((void *)v9 + 36) = 0;
      *((_DWORD *)v9 + 74) = 131586;
      sub_10054BD5C((uint64_t)&v350);
      *(void *)(a2 + 24) = v6;
      *(void *)(a2 + 32) = &off_10150AF08;
      uint64_t v54 = sub_1005767BC((uint64_t *)a2);
      sub_100600728((uint64_t)v9, (uint64_t)v54);

      break;
    default:
      CGFloat m31 = v350.m31;
      CGFloat m24 = v350.m24;
      CGFloat m23 = v350.m23;
      CGFloat m22 = v350.m22;
      CGFloat m21 = v350.m21;
      CGFloat m14 = v350.m14;
      CGFloat m13 = v350.m13;
      CGFloat m12 = v350.m12;
      CGFloat m11 = v350.m11;
      double v337 = sub_100BCDF5C();
      id v22 = [v11 tag];
      CGFloat v23 = m11;
      CGFloat v24 = m12;
      CGFloat v25 = m13;
      CGFloat v26 = m14;
      CGFloat v27 = m21;
      CGFloat v28 = m22;
      CGFloat v29 = m23;
      CGFloat v30 = m24;
      CGFloat v31 = m31;
      CGFloat v32 = m32;
      CGFloat v33 = m33;
      CGFloat v34 = m34;
      CGFloat v35 = m41;
      CGFloat v36 = m42;
      CGFloat v37 = m43;
      CGFloat v38 = m44;
      switch((unint64_t)v22)
      {
        case 2uLL:
          v350.CGFloat m11 = m11;
          v350.CGFloat m12 = m12;
          v350.CGFloat m13 = m13;
          v350.CGFloat m14 = m14;
          v350.CGFloat m21 = m21;
          v350.CGFloat m22 = m22;
          v350.CGFloat m23 = m23;
          v350.CGFloat m24 = m24;
          v350.CGFloat m31 = m31;
          v350.CGFloat m32 = m32;
          v350.CGFloat m33 = m33;
          v350.CGFloat m34 = m34;
          v350.CGFloat m41 = m41;
          v350.CGFloat m42 = m42;
          v350.CGFloat m43 = m43;
          v350.CGFloat m44 = m44;
          double v39 = 0.0;
          CGFloat v40 = 1.0;
          double v41 = v337;
          goto LABEL_18;
        case 4uLL:
          v350.CGFloat m11 = m11;
          v350.CGFloat m12 = m12;
          v350.CGFloat m13 = m13;
          v350.CGFloat m14 = m14;
          v350.CGFloat m21 = m21;
          v350.CGFloat m22 = m22;
          v350.CGFloat m23 = m23;
          v350.CGFloat m24 = m24;
          v350.CGFloat m31 = m31;
          v350.CGFloat m32 = m32;
          v350.CGFloat m33 = m33;
          v350.CGFloat m34 = m34;
          v350.CGFloat m41 = m41;
          v350.CGFloat m42 = m42;
          v350.CGFloat m43 = m43;
          v350.CGFloat m44 = m44;
          double v41 = 0.0;
          CGFloat v40 = 1.0;
          double v39 = v337;
          goto LABEL_18;
        case 6uLL:
          double v39 = -v337;
          v350.CGFloat m11 = m11;
          v350.CGFloat m12 = m12;
          v350.CGFloat m13 = m13;
          v350.CGFloat m14 = m14;
          v350.CGFloat m21 = m21;
          v350.CGFloat m22 = m22;
          v350.CGFloat m23 = m23;
          v350.CGFloat m24 = m24;
          v350.CGFloat m31 = m31;
          v350.CGFloat m32 = m32;
          v350.CGFloat m33 = m33;
          v350.CGFloat m34 = m34;
          v350.CGFloat m41 = m41;
          v350.CGFloat m42 = m42;
          v350.CGFloat m43 = m43;
          v350.CGFloat m44 = m44;
          double v41 = 0.0;
          goto LABEL_17;
        case 8uLL:
          double v41 = -v337;
          v350.CGFloat m11 = m11;
          v350.CGFloat m12 = m12;
          v350.CGFloat m13 = m13;
          v350.CGFloat m14 = m14;
          v350.CGFloat m21 = m21;
          v350.CGFloat m22 = m22;
          v350.CGFloat m23 = m23;
          v350.CGFloat m24 = m24;
          v350.CGFloat m31 = m31;
          v350.CGFloat m32 = m32;
          v350.CGFloat m33 = m33;
          v350.CGFloat m34 = m34;
          v350.CGFloat m41 = m41;
          v350.CGFloat m42 = m42;
          v350.CGFloat m43 = m43;
          v350.CGFloat m44 = m44;
          double v39 = 0.0;
LABEL_17:
          CGFloat v40 = 1.0;
LABEL_18:
          CATransform3DTranslate(&v349, &v350, v39, v41, v40);
          CGFloat v23 = v349.m11;
          CGFloat v24 = v349.m12;
          CGFloat v25 = v349.m13;
          CGFloat v26 = v349.m14;
          CGFloat v27 = v349.m21;
          CGFloat v28 = v349.m22;
          CGFloat v29 = v349.m23;
          CGFloat v30 = v349.m24;
          CGFloat v31 = v349.m31;
          CGFloat v32 = v349.m32;
          CGFloat v33 = v349.m33;
          CGFloat v34 = v349.m34;
          CGFloat v35 = v349.m41;
          CGFloat v36 = v349.m42;
          CGFloat v37 = v349.m43;
          CGFloat v38 = v349.m44;
          break;
        default:
          break;
      }
      CGFloat v305 = v23;
      CGFloat v306 = v38;
      CGFloat v307 = v37;
      CGFloat v308 = v36;
      CGFloat v309 = v35;
      CGFloat v310 = v34;
      CGFloat v311 = v33;
      CGFloat v312 = v32;
      CGFloat v313 = v31;
      CGFloat v314 = v30;
      CGFloat v315 = v29;
      CGFloat v316 = v28;
      CGFloat v317 = v27;
      CGFloat v318 = v26;
      *(CGFloat *)&long long v319 = v25;
      *(CGFloat *)&long long v320 = v24;
      *(CGFloat *)&long long v321 = m32;
      CGFloat v322 = m33;
      CGFloat v323 = m34;
      CGFloat v324 = m41;
      CGFloat v325 = m42;
      CGFloat v326 = m43;
      CGFloat v327 = m44;
      if (qword_10166FC70 != -1) {
        swift_once();
      }
      double v266 = *((double *)&xmmword_10171BEC0 + 1);
      double v55 = *(double *)&xmmword_10171BEC0;
      *(void *)&long long v264 = xmmword_10171BEC0;
      id v56 = *(void **)&v3[OBJC_IVAR____TtCC8Freeform21CRLConnectionLineKnobP33_96EC3ACD086E6EEC09C8AECDD8231E3A34CRLConnectionLineKnobAnimatedLayer_resizeKnobLayer];
      [v56 bounds];
      CGFloat v58 = v57;
      CGFloat v60 = v59;
      CGFloat v62 = v61;
      CGFloat v64 = v63;
      [v3 bounds];
      double v69 = sub_100065A10(v58, v60, v62, v64, v65, v66, v67, v68);
      *(void *)&long long v297 = v70;
      *(void *)&long long v299 = v71;
      char v72 = *(void **)&v3[OBJC_IVAR____TtCC8Freeform21CRLConnectionLineKnobP33_96EC3ACD086E6EEC09C8AECDD8231E3A34CRLConnectionLineKnobAnimatedLayer_connectionKnobLayer];
      [v72 bounds];
      CGFloat v74 = v73;
      CGFloat v76 = v75;
      CGFloat v78 = v77;
      CGFloat v80 = v79;
      [v3 bounds];
      sub_100065A10(v74, v76, v78, v80, v81, v82, v83, v84);
      double v296 = sub_100064698(v85, v86, v55);
      CGFloat v298 = v87;
      CGFloat v88 = CATransform3DIdentity.m12;
      CGFloat v304 = CATransform3DIdentity.m11;
      CGFloat v89 = CATransform3DIdentity.m14;
      CGFloat v332 = CATransform3DIdentity.m13;
      CGFloat v303 = v89;
      CGFloat v90 = CATransform3DIdentity.m22;
      CGFloat v302 = CATransform3DIdentity.m21;
      CGFloat v91 = v302;
      CGFloat v328 = v90;
      double v92 = CATransform3DIdentity.m24;
      CGFloat v331 = CATransform3DIdentity.m23;
      double v337 = v92;
      CGFloat v330 = CATransform3DIdentity.m31;
      CGFloat v93 = CATransform3DIdentity.m33;
      CGFloat v329 = CATransform3DIdentity.m32;
      CGFloat v300 = CATransform3DIdentity.m34;
      CGFloat v335 = CATransform3DIdentity.m41;
      CGFloat v94 = CATransform3DIdentity.m43;
      CGFloat v334 = CATransform3DIdentity.m42;
      CGFloat v336 = v94;
      CGFloat v333 = CATransform3DIdentity.m44;
      [v56 bounds];
      *(double *)&long long v293 = v95;
      *(double *)&long long v292 = v96;
      v350.CGFloat m11 = CATransform3DIdentity.m11;
      CGFloat v301 = v88;
      v350.CGFloat m12 = v88;
      CGFloat v97 = v332;
      v350.CGFloat m13 = v332;
      v350.CGFloat m14 = v89;
      v350.CGFloat m21 = v91;
      v350.CGFloat m22 = v90;
      CGFloat v98 = v331;
      v350.CGFloat m23 = v331;
      v350.CGFloat m24 = v92;
      CGFloat v99 = v330;
      v350.CGFloat m31 = v330;
      CGFloat v100 = v329;
      v350.CGFloat m32 = v329;
      CGFloat v267 = v93;
      v350.CGFloat m33 = v93;
      CGFloat v101 = v300;
      v350.CGFloat m34 = v300;
      v350.CGFloat m41 = v335;
      v350.CGFloat m42 = v334;
      v350.CGFloat m43 = v94;
      CGFloat v102 = v333;
      v350.CGFloat m44 = v333;
      CATransform3DScale(&v349, &v350, *(double *)&v297 / v95, *(double *)&v299 / v96, 1.0);
      long long v299 = *(_OWORD *)&v349.m11;
      long long v297 = *(_OWORD *)&v349.m13;
      long long v294 = *(_OWORD *)&v349.m23;
      long long v295 = *(_OWORD *)&v349.m21;
      long long v289 = *(_OWORD *)&v349.m33;
      long long v290 = *(_OWORD *)&v349.m31;
      long long v288 = *(_OWORD *)&v349.m41;
      CGFloat v284 = v349.m44;
      CGFloat v285 = v349.m43;
      v350.CGFloat m11 = v304;
      v350.CGFloat m12 = v88;
      v350.CGFloat m13 = v97;
      v350.CGFloat m14 = v303;
      v350.CGFloat m21 = v302;
      v350.CGFloat m22 = v328;
      v350.CGFloat m23 = v98;
      v350.CGFloat m24 = v337;
      v350.CGFloat m31 = v99;
      v350.CGFloat m32 = v100;
      v350.CGFloat m33 = v93;
      v350.CGFloat m34 = v101;
      v350.CGFloat m41 = v335;
      v350.CGFloat m42 = v334;
      v350.CGFloat m43 = v336;
      v350.CGFloat m44 = v102;
      CATransform3DScale(&v349, &v350, v296 / *(double *)&v293, v298 / *(double *)&v292, 1.0);
      *(_OWORD *)&v350.CGFloat m11 = v299;
      *(_OWORD *)&v350.CGFloat m13 = v297;
      long long v292 = *(_OWORD *)&v349.m13;
      long long v293 = *(_OWORD *)&v349.m11;
      *(_OWORD *)&v350.CGFloat m21 = v295;
      *(_OWORD *)&v350.CGFloat m23 = v294;
      long long v291 = *(_OWORD *)&v349.m23;
      *(_OWORD *)&v350.CGFloat m31 = v290;
      *(_OWORD *)&v350.CGFloat m33 = v289;
      long long v286 = *(_OWORD *)&v349.m31;
      long long v287 = *(_OWORD *)&v349.m21;
      *(_OWORD *)&v350.CGFloat m41 = v288;
      long long v289 = *(_OWORD *)&v349.m41;
      long long v290 = *(_OWORD *)&v349.m33;
      v350.CGFloat m43 = v285;
      v350.CGFloat m44 = v284;
      CGFloat v103 = v349.m43;
      CGFloat v104 = v349.m44;
      v349.CGFloat m11 = v305;
      *(void *)&v349.CGFloat m12 = v320;
      *(void *)&v349.CGFloat m13 = v319;
      v349.CGFloat m14 = v318;
      v349.CGFloat m21 = v317;
      v349.CGFloat m22 = v316;
      v349.CGFloat m23 = v315;
      v349.CGFloat m24 = v314;
      v349.CGFloat m31 = v313;
      v349.CGFloat m32 = v312;
      v349.CGFloat m33 = v311;
      v349.CGFloat m34 = v310;
      v349.CGFloat m41 = v309;
      v349.CGFloat m42 = v308;
      v349.CGFloat m43 = v307;
      v349.CGFloat m44 = v306;
      CATransform3DConcat(&v348, &v350, &v349);
      *(CGFloat *)&long long v299 = v348.m11;
      CGFloat v298 = v348.m12;
      double v296 = v348.m14;
      *(CGFloat *)&long long v297 = v348.m13;
      *(CGFloat *)&long long v295 = v348.m21;
      *(CGFloat *)&long long v294 = v348.m22;
      *(_OWORD *)&v350.CGFloat m11 = v293;
      *(CGFloat *)&long long v288 = v348.m23;
      *(CGFloat *)&long long v293 = v348.m24;
      *(_OWORD *)&v350.CGFloat m13 = v292;
      *(_OWORD *)&v350.CGFloat m21 = v287;
      *(CGFloat *)&long long v287 = v348.m31;
      *(CGFloat *)&long long v292 = v348.m32;
      *(_OWORD *)&v350.CGFloat m23 = v291;
      *(_OWORD *)&v350.CGFloat m31 = v286;
      *(CGFloat *)&long long v291 = v348.m34;
      *(_OWORD *)&v350.CGFloat m33 = v290;
      *(_OWORD *)&v350.CGFloat m41 = v289;
      CGFloat v285 = v348.m41;
      *(CGFloat *)&long long v286 = v348.m33;
      *(CGFloat *)&long long v290 = v348.m42;
      v350.CGFloat m43 = v103;
      v350.CGFloat m44 = v104;
      CGFloat v284 = v348.m43;
      *(CGFloat *)&long long v289 = v348.m44;
      v349.CGFloat m11 = m11;
      v349.CGFloat m12 = m12;
      v349.CGFloat m13 = m13;
      v349.CGFloat m14 = m14;
      v349.CGFloat m21 = m21;
      v349.CGFloat m22 = m22;
      v349.CGFloat m23 = m23;
      v349.CGFloat m24 = m24;
      v349.CGFloat m31 = m31;
      *(void *)&v349.CGFloat m32 = v321;
      v349.CGFloat m33 = v322;
      v349.CGFloat m34 = v323;
      v349.CGFloat m41 = v324;
      v349.CGFloat m42 = v325;
      v349.CGFloat m43 = v326;
      v349.CGFloat m44 = v327;
      CATransform3DConcat(&v348, &v350, &v349);
      CGFloat v282 = v348.m12;
      CGFloat v283 = v348.m11;
      CGFloat v280 = v348.m14;
      CGFloat v281 = v348.m13;
      CGFloat v278 = v348.m22;
      CGFloat v279 = v348.m21;
      CGFloat v276 = v348.m24;
      CGFloat v277 = v348.m23;
      CGFloat v274 = v348.m32;
      CGFloat v275 = v348.m31;
      CGFloat v272 = v348.m34;
      CGFloat v273 = v348.m33;
      CGFloat v270 = v348.m42;
      CGFloat v271 = v348.m41;
      CGFloat v268 = v348.m44;
      CGFloat v269 = v348.m43;
      [v56 bounds];
      CGFloat v106 = v105;
      CGFloat v108 = v107;
      CGFloat v110 = v109;
      CGFloat v112 = v111;
      [v3 bounds];
      v352.origin.x = sub_100065A10(v106, v108, v110, v112, v113, v114, v115, v116);
      double Width = CGRectGetWidth(v352);
      [v72 bounds];
      CGFloat v119 = v118;
      CGFloat v121 = v120;
      CGFloat v123 = v122;
      CGFloat v125 = v124;
      [v3 bounds];
      v353.origin.x = sub_100065A10(v119, v121, v123, v125, v126, v127, v128, v129);
      double v130 = *(double *)&v264 * (Width / CGRectGetWidth(v353));
      [v56 bounds];
      CGFloat v132 = v131;
      CGFloat v134 = v133;
      CGFloat v136 = v135;
      CGFloat v138 = v137;
      [v3 bounds];
      v354.origin.x = sub_100065A10(v132, v134, v136, v138, v139, v140, v141, v142);
      CGRectGetHeight(v354);
      [v72 bounds];
      CGFloat v144 = v143;
      CGFloat v146 = v145;
      CGFloat v148 = v147;
      CGFloat v150 = v149;
      [v3 bounds];
      v355.origin.x = sub_100065A10(v144, v146, v148, v150, v151, v152, v153, v154);
      CGRectGetHeight(v355);
      [v56 bounds];
      CGFloat v156 = v155;
      CGFloat v158 = v157;
      CGFloat v160 = v159;
      CGFloat v162 = v161;
      [v3 bounds];
      sub_100065A10(v156, v158, v160, v162, v163, v164, v165, v166);
      double v169 = sub_100064680(v167, v168, v130);
      *(void *)&long long v264 = v170;
      id v265 = v72;
      [v72 bounds];
      CGFloat v172 = v171;
      CGFloat v174 = v173;
      CGFloat v176 = v175;
      CGFloat v178 = v177;
      [v3 bounds];
      double v183 = sub_100065A10(v172, v174, v176, v178, v179, v180, v181, v182);
      double v255 = v184;
      double v266 = v185;
      [v72 bounds:v183];
      double v187 = v186;
      double v254 = v188;
      CGFloat v189 = v169 / v186;
      CGFloat v190 = v304;
      v350.CGFloat m11 = v304;
      v350.CGFloat m12 = v301;
      v350.CGFloat m13 = v332;
      CGFloat v191 = v303;
      v350.CGFloat m14 = v303;
      CGFloat v192 = v302;
      v350.CGFloat m21 = v302;
      v350.CGFloat m22 = v328;
      v350.CGFloat m23 = v331;
      v350.CGFloat m24 = v337;
      v350.CGFloat m31 = v330;
      v350.CGFloat m32 = v329;
      CGFloat v193 = v267;
      v350.CGFloat m33 = v267;
      CGFloat v194 = v300;
      v350.CGFloat m34 = v300;
      CGFloat v195 = v335;
      v350.CGFloat m41 = v335;
      CGFloat v196 = v334;
      v350.CGFloat m42 = v334;
      v350.CGFloat m43 = v336;
      v350.CGFloat m44 = v333;
      CATransform3DScale(&v349, &v350, v189, *(double *)&v264 / v188, 1.0);
      long long v263 = *(_OWORD *)&v349.m13;
      long long v264 = *(_OWORD *)&v349.m11;
      long long v261 = *(_OWORD *)&v349.m23;
      long long v262 = *(_OWORD *)&v349.m21;
      long long v259 = *(_OWORD *)&v349.m33;
      long long v260 = *(_OWORD *)&v349.m31;
      long long v258 = *(_OWORD *)&v349.m41;
      CGFloat v256 = v349.m44;
      CGFloat v257 = v349.m43;
      v350.CGFloat m11 = v190;
      v350.CGFloat m12 = v301;
      v350.CGFloat m13 = v332;
      v350.CGFloat m14 = v191;
      v350.CGFloat m21 = v192;
      v350.CGFloat m22 = v328;
      v350.CGFloat m23 = v331;
      v350.CGFloat m24 = v337;
      v350.CGFloat m31 = v330;
      v350.CGFloat m32 = v329;
      v350.CGFloat m33 = v193;
      v350.CGFloat m34 = v194;
      v350.CGFloat m41 = v195;
      v350.CGFloat m42 = v196;
      v350.CGFloat m43 = v336;
      v350.CGFloat m44 = v333;
      CATransform3DScale(&v349, &v350, v255 / v187, v266 / v254, 1.0);
      *(_OWORD *)&v350.CGFloat m11 = v264;
      *(_OWORD *)&v350.CGFloat m13 = v263;
      *(_OWORD *)&v350.CGFloat m21 = v262;
      *(_OWORD *)&v350.CGFloat m23 = v261;
      *(_OWORD *)&v350.CGFloat m31 = v260;
      *(_OWORD *)&v350.CGFloat m33 = v259;
      *(_OWORD *)&v350.CGFloat m41 = v258;
      v350.CGFloat m43 = v257;
      v350.CGFloat m44 = v256;
      CGFloat v197 = v349.m11;
      double v337 = v349.m12;
      v349.CGFloat m11 = v305;
      *(void *)&v349.CGFloat m12 = v320;
      CGFloat v198 = v349.m13;
      CGFloat v336 = v349.m14;
      *(void *)&v349.CGFloat m13 = v319;
      v349.CGFloat m14 = v318;
      CGFloat v199 = v349.m21;
      CGFloat v335 = v349.m22;
      v349.CGFloat m21 = v317;
      v349.CGFloat m22 = v316;
      CGFloat v200 = v349.m23;
      CGFloat v334 = v349.m24;
      v349.CGFloat m23 = v315;
      v349.CGFloat m24 = v314;
      CGFloat v201 = v349.m31;
      CGFloat v333 = v349.m32;
      v349.CGFloat m31 = v313;
      v349.CGFloat m32 = v312;
      CGFloat v202 = v349.m33;
      CGFloat v332 = v349.m34;
      v349.CGFloat m33 = v311;
      v349.CGFloat m34 = v310;
      CGFloat v203 = v349.m41;
      CGFloat v331 = v349.m42;
      v349.CGFloat m41 = v309;
      v349.CGFloat m42 = v308;
      CGFloat v204 = v349.m43;
      CGFloat v330 = v349.m44;
      v349.CGFloat m43 = v307;
      v349.CGFloat m44 = v306;
      CATransform3DConcat(&v348, &v350, &v349);
      v350.CGFloat m11 = v197;
      v350.CGFloat m12 = v337;
      v350.CGFloat m13 = v198;
      v350.CGFloat m14 = v336;
      v350.CGFloat m21 = v199;
      v350.CGFloat m22 = v335;
      v350.CGFloat m23 = v200;
      v350.CGFloat m24 = v334;
      v350.CGFloat m31 = v201;
      v350.CGFloat m32 = v333;
      v350.CGFloat m33 = v202;
      v350.CGFloat m34 = v332;
      v350.CGFloat m41 = v203;
      v350.CGFloat m42 = v331;
      v350.CGFloat m43 = v204;
      v350.CGFloat m44 = v330;
      v349.CGFloat m11 = m11;
      v349.CGFloat m12 = m12;
      CGFloat v333 = v348.m11;
      CGFloat v332 = v348.m12;
      v349.CGFloat m13 = m13;
      v349.CGFloat m14 = m14;
      CGFloat v331 = v348.m13;
      CGFloat v330 = v348.m14;
      v349.CGFloat m21 = m21;
      v349.CGFloat m22 = m22;
      CGFloat m12 = v348.m21;
      CGFloat m22 = v348.m22;
      v349.CGFloat m23 = m23;
      v349.CGFloat m24 = m24;
      CGFloat m11 = v348.m23;
      CGFloat m24 = v348.m24;
      v349.CGFloat m31 = m31;
      *(void *)&v349.CGFloat m32 = v321;
      double v337 = v348.m31;
      CGFloat m23 = v348.m32;
      v349.CGFloat m33 = v322;
      v349.CGFloat m34 = v323;
      CGFloat v336 = v348.m33;
      CGFloat m21 = v348.m34;
      v349.CGFloat m41 = v324;
      v349.CGFloat m42 = v325;
      CGFloat v335 = v348.m41;
      CGFloat m14 = v348.m42;
      v349.CGFloat m43 = v326;
      v349.CGFloat m44 = v327;
      CGFloat v334 = v348.m43;
      CGFloat m13 = v348.m44;
      CATransform3DConcat(&v348, &v350, &v349);
      CGFloat v205 = v348.m11;
      CGFloat v206 = v348.m12;
      CGFloat v207 = v348.m13;
      CGFloat v208 = v348.m14;
      CGFloat v209 = v348.m21;
      CGFloat v210 = v348.m22;
      CGFloat v211 = v348.m23;
      CGFloat v212 = v348.m24;
      CGFloat v329 = v348.m31;
      CGFloat v328 = v348.m32;
      CGFloat v327 = v348.m33;
      CGFloat v326 = v348.m34;
      CGFloat v325 = v348.m41;
      CGFloat v324 = v348.m42;
      CGFloat v323 = v348.m43;
      CGFloat v322 = v348.m44;
      sub_1005057FC((uint64_t *)&unk_101683FC0);
      uint64_t v213 = swift_allocObject();
      *(_OWORD *)(v213 + 16) = xmmword_10118E4B0;
      *(void *)&v350.CGFloat m14 = &type metadata for CRLSpringLayerAnimation.Def;
      unint64_t v214 = sub_100860DAC();
      *(void *)&v350.CGFloat m21 = v214;
      uint64_t v215 = swift_allocObject();
      *(void *)&v350.CGFloat m11 = v215;
      CGFloat v216 = v298;
      *(void *)(v215 + 56) = v299;
      *(CGFloat *)(v215 + 64) = v216;
      double v217 = v296;
      *(void *)(v215 + 72) = v297;
      *(double *)(v215 + 80) = v217;
      uint64_t v218 = v294;
      *(void *)(v215 + 88) = v295;
      *(void *)(v215 + 96) = v218;
      uint64_t v219 = v293;
      *(void *)(v215 + 104) = v288;
      *(void *)(v215 + 112) = v219;
      uint64_t v220 = v292;
      *(void *)(v215 + 120) = v287;
      *(void *)(v215 + 128) = v220;
      uint64_t v221 = v291;
      *(void *)(v215 + 136) = v286;
      *(void *)(v215 + 144) = v221;
      uint64_t v222 = v290;
      *(CGFloat *)(v215 + 152) = v285;
      *(void *)(v215 + 160) = v222;
      uint64_t v223 = v289;
      *(CGFloat *)(v215 + 168) = v284;
      *(void *)(v215 + 176) = v223;
      CGFloat v224 = v282;
      *(CGFloat *)(v215 + 184) = v283;
      *(CGFloat *)(v215 + 192) = v224;
      CGFloat v225 = v280;
      *(CGFloat *)(v215 + 200) = v281;
      *(CGFloat *)(v215 + 208) = v225;
      CGFloat v226 = v278;
      *(CGFloat *)(v215 + 216) = v279;
      *(CGFloat *)(v215 + 224) = v226;
      CGFloat v227 = v276;
      *(CGFloat *)(v215 + 232) = v277;
      *(CGFloat *)(v215 + 240) = v227;
      CGFloat v228 = v274;
      *(CGFloat *)(v215 + 248) = v275;
      *(CGFloat *)(v215 + 256) = v228;
      CGFloat v229 = v272;
      *(CGFloat *)(v215 + 264) = v273;
      *(CGFloat *)(v215 + 272) = v229;
      CGFloat v230 = v270;
      *(CGFloat *)(v215 + 280) = v271;
      *(CGFloat *)(v215 + 288) = v230;
      CGFloat v231 = v268;
      *(CGFloat *)(v215 + 296) = v269;
      *(CGFloat *)(v215 + 304) = v231;
      *(unsigned char *)(v215 + 312) = 52;
      *(void *)(v215 + 48) = 0;
      long long v320 = xmmword_1011AD610;
      long long v321 = xmmword_1011AD620;
      *(_OWORD *)(v215 + 16) = xmmword_1011AD610;
      *(_OWORD *)(v215 + 32) = xmmword_1011AD620;
      *(void *)(v215 + 320) = 0;
      long long v319 = 0x20202uLL;
      *(_DWORD *)(v215 + 328) = 131586;
      id v232 = v56;
      *(void *)&CGFloat m31 = v213 + 32;
      sub_100B98B5C((void *)(v213 + 32), &v350);

      _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v350);
      *(void *)&v350.CGFloat m14 = &type metadata for CRLSpringLayerAnimation.Def;
      *(void *)&v350.CGFloat m21 = v214;
      uint64_t v233 = swift_allocObject();
      CGFloat v234 = v332;
      *(CGFloat *)(v233 + 56) = v333;
      *(CGFloat *)(v233 + 64) = v234;
      CGFloat v235 = v330;
      *(CGFloat *)(v233 + 72) = v331;
      *(CGFloat *)(v233 + 80) = v235;
      *(void *)&v350.CGFloat m11 = v233;
      CGFloat v236 = m22;
      *(CGFloat *)(v233 + 88) = m12;
      *(CGFloat *)(v233 + 96) = v236;
      CGFloat v237 = m24;
      *(CGFloat *)(v233 + 104) = m11;
      *(CGFloat *)(v233 + 112) = v237;
      CGFloat v238 = m23;
      *(double *)(v233 + 120) = v337;
      *(CGFloat *)(v233 + 128) = v238;
      CGFloat v239 = m21;
      *(CGFloat *)(v233 + 136) = v336;
      *(CGFloat *)(v233 + 144) = v239;
      CGFloat v240 = m14;
      *(CGFloat *)(v233 + 152) = v335;
      *(CGFloat *)(v233 + 160) = v240;
      CGFloat v241 = m13;
      *(CGFloat *)(v233 + 168) = v334;
      *(CGFloat *)(v233 + 176) = v241;
      *(CGFloat *)(v233 + 184) = v205;
      *(CGFloat *)(v233 + 192) = v206;
      *(CGFloat *)(v233 + 200) = v207;
      *(CGFloat *)(v233 + 208) = v208;
      *(CGFloat *)(v233 + 216) = v209;
      *(CGFloat *)(v233 + 224) = v210;
      *(CGFloat *)(v233 + 232) = v211;
      *(CGFloat *)(v233 + 240) = v212;
      CGFloat v242 = v328;
      *(CGFloat *)(v233 + 248) = v329;
      *(CGFloat *)(v233 + 256) = v242;
      CGFloat v243 = v326;
      *(CGFloat *)(v233 + 264) = v327;
      *(CGFloat *)(v233 + 272) = v243;
      CGFloat v244 = v324;
      *(CGFloat *)(v233 + 280) = v325;
      *(CGFloat *)(v233 + 288) = v244;
      CGFloat v245 = v322;
      *(CGFloat *)(v233 + 296) = v323;
      *(CGFloat *)(v233 + 304) = v245;
      *(unsigned char *)(v233 + 312) = 52;
      *(void *)(v233 + 48) = 0;
      long long v246 = v321;
      *(_OWORD *)(v233 + 16) = v320;
      *(_OWORD *)(v233 + 32) = v246;
      *(void *)(v233 + 320) = 0;
      *(_DWORD *)(v233 + 328) = v319;
      id v247 = v265;
      sub_100B98B5C((void *)(v213 + 72), &v350);

      _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v350);
      uint64_t v248 = qword_10166FC78;
      id v249 = v232;
      if (v248 != -1) {
        swift_once();
      }
      *(void *)&v350.CGFloat m14 = &type metadata for CRLBasicLayerAnimation.Def;
      *(void *)&v350.CGFloat m21 = sub_10054CB94();
      *(void *)&v350.CGFloat m11 = swift_allocObject();
      sub_100549A68((uint64_t)&qword_101696818, *(void *)&v350.m11 + 16);
      sub_100B98B5C((void *)(v213 + 112), &v350);

      _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v350);
      *(_OWORD *)(v213 + 216) = 0u;
      *(_OWORD *)(v213 + 200) = 0u;
      *(_OWORD *)(v213 + 184) = 0u;
      *(_OWORD *)(v213 + 168) = 0u;
      *(_OWORD *)(v213 + 152) = 0u;
      double v250 = sub_1006C9744(v213, 0.0);
      uint64_t v252 = v251;
      double v253 = v250;
      swift_setDeallocating();
      sub_1005057FC((uint64_t *)&unk_101683FE0);
      swift_arrayDestroy();
      swift_deallocClassInstance();
      *(void *)(a2 + 24) = &type metadata for CRLLayerAnimationGroup;
      *(void *)(a2 + 32) = &off_10150F5C8;

      *(void *)a2 = v252;
      *(double *)(a2 + 8) = v253;
      break;
  }
}

id sub_100BD06B4()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLConnectionLineKnob.CRLConnectionLineKnobAnimatedLayer();
  return [super dealloc];
}

id sub_100BD0768()
{
  id result = [self defaultCenter];
  qword_10171BED0 = (uint64_t)result;
  return result;
}

NSNotificationName sub_100BD07A4()
{
  sub_1005057FC(&qword_1016969D8);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_10117DF40;
  *(void *)(v0 + 32) = UIAccessibilityBoldTextStatusDidChangeNotification;
  *(void *)(v0 + 40) = UIAccessibilityDarkerSystemColorsStatusDidChangeNotification;
  *(void *)(v0 + 48) = UIContentSizeCategoryDidChangeNotification;
  qword_10171BED8 = v0;
  double v1 = UIAccessibilityBoldTextStatusDidChangeNotification;
  objc_super v2 = UIAccessibilityDarkerSystemColorsStatusDidChangeNotification;

  return UIContentSizeCategoryDidChangeNotification;
}

uint64_t type metadata accessor for CRLConnectionLineKnob()
{
  return self;
}

uint64_t type metadata accessor for CRLConnectionLineKnob.CRLConnectionLineKnobAnimatedLayer()
{
  return self;
}

unsigned char *storeEnumTagSinglePayload for CRLConnectionLineKnob.KnobState(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *id result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100BD099CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *id result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLConnectionLineKnob.KnobState()
{
  return &type metadata for CRLConnectionLineKnob.KnobState;
}

unint64_t sub_100BD09D8()
{
  unint64_t result = qword_1016969D0;
  if (!qword_1016969D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016969D0);
  }
  return result;
}

uint64_t sub_100BD0A2C()
{
  double v1 = (id *)(v0 + 56);
  switch(*(unsigned char *)(v0 + 312))
  {
    case 0:
    case 0x22:
      if (*(void *)(v0 + 80)) {
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v1);
      }
      if (*(void *)(v0 + 112)) {
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v0 + 88);
      }
      break;
    case 1:
    case 0x23:
      if (*(void *)(v0 + 80)) {
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v1);
      }
      break;
    case 0x12:
    case 0x14:
    case 0x1C:
    case 0x1E:

      break;
    case 0x13:
    case 0x15:
    case 0x1D:
    case 0x1F:

      break;
    case 0x20:
    case 0x24:
      swift_bridgeObjectRelease();
      goto LABEL_17;
    case 0x21:
    case 0x25:
      goto LABEL_17;
    case 0x3A:

      break;
    case 0x3F:

      if (*(void *)(v0 + 176)) {
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v0 + 152);
      }
      goto LABEL_17;
    case 0x40:

      if (*(void *)(v0 + 144)) {
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v0 + 120);
      }
LABEL_17:
      swift_bridgeObjectRelease();
      break;
    default:
      break;
  }

  return _swift_deallocObject(v0, 332, 7);
}

uint64_t sub_100BD0C7C()
{
  double v1 = (id *)(v0 + 40);
  switch(*(unsigned char *)(v0 + 296))
  {
    case 0:
    case 0x22:
      if (*(void *)(v0 + 64)) {
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v1);
      }
      if (*(void *)(v0 + 96)) {
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v0 + 72);
      }
      break;
    case 1:
    case 0x23:
      if (*(void *)(v0 + 64)) {
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v1);
      }
      break;
    case 0x12:
    case 0x14:
    case 0x1C:
    case 0x1E:

      break;
    case 0x13:
    case 0x15:
    case 0x1D:
    case 0x1F:

      break;
    case 0x20:
    case 0x24:
      swift_bridgeObjectRelease();
      goto LABEL_17;
    case 0x21:
    case 0x25:
      goto LABEL_17;
    case 0x3A:

      break;
    case 0x3F:

      if (*(void *)(v0 + 160)) {
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v0 + 136);
      }
      goto LABEL_17;
    case 0x40:

      if (*(void *)(v0 + 128)) {
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v0 + 104);
      }
LABEL_17:
      swift_bridgeObjectRelease();
      break;
    default:
      break;
  }

  return _swift_deallocObject(v0, 316, 7);
}

id sub_100BD0ED4(uint64_t a1)
{
  strcpy(v23, "canvas-diagram");
  v23[15] = -18;
  switch(a1)
  {
    case 2:
      uint64_t v1 = 1919905325;
      goto LABEL_8;
    case 4:
      uint64_t v6 = 1936029485;
      goto LABEL_6;
    case 6:
      uint64_t v6 = 1935762733;
LABEL_6:
      unint64_t v7 = v6 & 0xFFFF0000FFFFFFFFLL | 0x7400000000;
      unint64_t v8 = 0xE500000000000000;
      goto LABEL_9;
    case 8:
      uint64_t v1 = 1970238253;
LABEL_8:
      unint64_t v7 = v1 & 0xFFFF0000FFFFFFFFLL | 0x687400000000;
      unint64_t v8 = 0xE600000000000000;
LABEL_9:
      String.append(_:)(*(Swift::String *)&v7);
      break;
    default:
      sub_1005057FC((uint64_t *)&unk_101672B40);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_10117E810;
      type metadata accessor for CRLCanvasKnobTag(0);
      uint64_t v3 = String.init<A>(describing:)();
      uint64_t v5 = v4;
      *(void *)(inited + 56) = &type metadata for String;
      *(void *)(inited + 64) = sub_100528BE4();
      *(void *)(inited + 32) = v3;
      *(void *)(inited + 40) = v5;
      sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"getKnobImages(for:)", 19, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCanvas/CRLConnectionLineKnob.swift", 91, 2, 505, (uint64_t)"Could not find an asset for connection knob with tag %@", 55, 2u, inited);
      LOBYTE(v22) = 2;
      uint64_t v20 = "Could not find an asset for connection knob with tag %@";
      uint64_t v21 = 55;
      sub_1005598CC(inited, (uint64_t)"getKnobImages(for:)", 19, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCanvas/CRLConnectionLineKnob.swift", 91, 2, 505);
      swift_setDeallocating();
      sub_1005057FC(&qword_101672B50);
      swift_arrayDestroy();
      break;
  }
  id v9 = self;
  if ([v9 isBoldTextEnabled])
  {
    v10._countAndFlagsBits = 0x646C6F622DLL;
    v10._object = (void *)0xE500000000000000;
    String.append(_:)(v10);
  }
  if (objc_msgSend(v9, "isIncreaseContrastEnabled", v20, v21, v22))
  {
    v11._countAndFlagsBits = 6512941;
    v11._object = (void *)0xE300000000000000;
    String.append(_:)(v11);
  }
  if ([v9 isUsingAccessibilityTextSize])
  {
    v12._countAndFlagsBits = 7627821;
    v12._object = (void *)0xE300000000000000;
    String.append(_:)(v12);
  }
  swift_bridgeObjectRetain();
  v13._countAndFlagsBits = 20013;
  v13._object = (void *)0xE200000000000000;
  String.append(_:)(v13);
  NSString v14 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v15 = self;
  id v16 = [v15 imageNamed:v14];

  swift_bridgeObjectRetain();
  v17._countAndFlagsBits = 20525;
  v17._object = (void *)0xE200000000000000;
  String.append(_:)(v17);
  swift_bridgeObjectRelease();
  NSString v18 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v15 imageNamed:v18];

  return v16;
}

void sub_100BD1230()
{
  uint64_t v1 = OBJC_IVAR____TtCC8Freeform21CRLConnectionLineKnobP33_96EC3ACD086E6EEC09C8AECDD8231E3A34CRLConnectionLineKnobAnimatedLayer_containerLayer;
  *(void *)&v0[v1] = [objc_allocWithZone((Class)CALayer) init];
  uint64_t v2 = OBJC_IVAR____TtCC8Freeform21CRLConnectionLineKnobP33_96EC3ACD086E6EEC09C8AECDD8231E3A34CRLConnectionLineKnobAnimatedLayer_resizeKnobLayer;
  *(void *)&v0[v2] = [objc_allocWithZone((Class)CALayer) init];
  *(void *)&v0[OBJC_IVAR____TtCC8Freeform21CRLConnectionLineKnobP33_96EC3ACD086E6EEC09C8AECDD8231E3A34CRLConnectionLineKnobAnimatedLayer_connectionKnobCurrentImage] = 0;
  uint64_t v3 = OBJC_IVAR____TtCC8Freeform21CRLConnectionLineKnobP33_96EC3ACD086E6EEC09C8AECDD8231E3A34CRLConnectionLineKnobAnimatedLayer_connectionKnobLayer;
  *(void *)&v0[v3] = [objc_allocWithZone((Class)CALayer) init];
  swift_unknownObjectWeakInit();

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

uint64_t sub_100BD1314()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_100BD134C()
{
}

uint64_t sub_100BD1354(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100BD1364()
{
  return swift_release();
}

unsigned char *_s13ItemViewModelV9SortStyleOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100BD1438);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *_s13ItemViewModelV9SortStyleOMa()
{
  return &_s13ItemViewModelV9SortStyleON;
}

char *sub_100BD1470(char *a1, char *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v26 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = (char *)(v26 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for UUID();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    id v9 = &a1[v8];
    Swift::String v10 = &a2[v8];
    uint64_t v11 = type metadata accessor for Date();
    Swift::String v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    v12(v9, v10, v11);
    v12(&a1[a3[6]], &a2[a3[6]], v11);
    uint64_t v13 = a3[7];
    uint64_t v14 = a3[8];
    id v15 = *(void **)&a2[v13];
    *(void *)&a1[v13] = v15;
    id v16 = &a1[v14];
    Swift::String v17 = &a2[v14];
    uint64_t v18 = *((void *)v17 + 1);
    *(void *)id v16 = *(void *)v17;
    *((void *)v16 + 1) = v18;
    uint64_t v19 = a3[9];
    uint64_t v20 = a3[10];
    uint64_t v21 = &a1[v19];
    uint64_t v22 = &a2[v19];
    uint64_t v23 = *((void *)v22 + 1);
    *(void *)uint64_t v21 = *(void *)v22;
    *((void *)v21 + 1) = v23;
    *(void *)&a1[v20] = *(void *)&a2[v20];
    uint64_t v24 = a3[12];
    *(void *)&a1[a3[11]] = *(void *)&a2[a3[11]];
    a1[v24] = a2[v24];
    a1[a3[13]] = a2[a3[13]];
    id v25 = v15;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_100BD1624(uint64_t a1, int *a2)
{
  uint64_t v4 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + a2[5];
  uint64_t v6 = type metadata accessor for Date();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);
  v7(v5, v6);
  v7(a1 + a2[6], v6);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_100BD173C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = type metadata accessor for Date();
  uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16);
  v11(v8, v9, v10);
  v11(a1 + a3[6], a2 + a3[6], v10);
  uint64_t v12 = a3[7];
  uint64_t v13 = a3[8];
  uint64_t v14 = *(void **)(a2 + v12);
  *(void *)(a1 + v12) = v14;
  id v15 = (void *)(a1 + v13);
  id v16 = (void *)(a2 + v13);
  uint64_t v17 = v16[1];
  *id v15 = *v16;
  v15[1] = v17;
  uint64_t v18 = a3[9];
  uint64_t v19 = a3[10];
  uint64_t v20 = (void *)(a1 + v18);
  uint64_t v21 = (void *)(a2 + v18);
  uint64_t v22 = v21[1];
  *uint64_t v20 = *v21;
  v20[1] = v22;
  *(void *)(a1 + v19) = *(void *)(a2 + v19);
  uint64_t v23 = a3[12];
  *(void *)(a1 + a3[11]) = *(void *)(a2 + a3[11]);
  *(unsigned char *)(a1 + v23) = *(unsigned char *)(a2 + v23);
  *(unsigned char *)(a1 + a3[13]) = *(unsigned char *)(a2 + a3[13]);
  id v24 = v14;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_100BD18A0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = type metadata accessor for Date();
  uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24);
  v11(v8, v9, v10);
  v11(a1 + a3[6], a2 + a3[6], v10);
  uint64_t v12 = a3[7];
  uint64_t v13 = *(void **)(a2 + v12);
  uint64_t v14 = *(void **)(a1 + v12);
  *(void *)(a1 + v12) = v13;
  id v15 = v13;

  uint64_t v16 = a3[8];
  uint64_t v17 = (void *)(a1 + v16);
  uint64_t v18 = (void *)(a2 + v16);
  *uint64_t v17 = *v18;
  v17[1] = v18[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v19 = a3[9];
  uint64_t v20 = (void *)(a1 + v19);
  uint64_t v21 = (void *)(a2 + v19);
  *uint64_t v20 = *v21;
  v20[1] = v21[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[10]) = *(void *)(a2 + a3[10]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[11]) = *(void *)(a2 + a3[11]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + a3[12]) = *(unsigned char *)(a2 + a3[12]);
  *(unsigned char *)(a1 + a3[13]) = *(unsigned char *)(a2 + a3[13]);
  return a1;
}

uint64_t sub_100BD1A48(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = type metadata accessor for Date();
  uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32);
  v11(v8, v9, v10);
  v11(a1 + a3[6], a2 + a3[6], v10);
  uint64_t v12 = a3[8];
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  *(_OWORD *)(a1 + v12) = *(_OWORD *)(a2 + v12);
  uint64_t v13 = a3[10];
  *(_OWORD *)(a1 + a3[9]) = *(_OWORD *)(a2 + a3[9]);
  *(void *)(a1 + v13) = *(void *)(a2 + v13);
  uint64_t v14 = a3[12];
  *(void *)(a1 + a3[11]) = *(void *)(a2 + a3[11]);
  *(unsigned char *)(a1 + v14) = *(unsigned char *)(a2 + v14);
  *(unsigned char *)(a1 + a3[13]) = *(unsigned char *)(a2 + a3[13]);
  return a1;
}

uint64_t sub_100BD1B78(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = type metadata accessor for Date();
  uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40);
  v11(v8, v9, v10);
  v11(a1 + a3[6], a2 + a3[6], v10);
  uint64_t v12 = a3[7];
  uint64_t v13 = *(void **)(a1 + v12);
  *(void *)(a1 + v12) = *(void *)(a2 + v12);

  uint64_t v14 = a3[8];
  id v15 = (void *)(a1 + v14);
  uint64_t v16 = (uint64_t *)(a2 + v14);
  uint64_t v18 = *v16;
  uint64_t v17 = v16[1];
  *id v15 = v18;
  v15[1] = v17;
  swift_bridgeObjectRelease();
  uint64_t v19 = a3[9];
  uint64_t v20 = (void *)(a1 + v19);
  uint64_t v21 = (uint64_t *)(a2 + v19);
  uint64_t v23 = *v21;
  uint64_t v22 = v21[1];
  *uint64_t v20 = v23;
  v20[1] = v22;
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[10]) = *(void *)(a2 + a3[10]);
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[11]) = *(void *)(a2 + a3[11]);
  swift_bridgeObjectRelease();
  uint64_t v24 = a3[13];
  *(unsigned char *)(a1 + a3[12]) = *(unsigned char *)(a2 + a3[12]);
  *(unsigned char *)(a1 + v24) = *(unsigned char *)(a2 + v24);
  return a1;
}

uint64_t sub_100BD1CE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100BD1CFC);
}

uint64_t sub_100BD1CFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = type metadata accessor for Date();
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  unint64_t v14 = *(void *)(a1 + *(int *)(a3 + 28));
  if (v14 >= 0xFFFFFFFF) {
    LODWORD(v14) = -1;
  }
  return (v14 + 1);
}

uint64_t sub_100BD1E10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100BD1E24);
}

uint64_t sub_100BD1E24(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for UUID();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t result = type metadata accessor for Date();
    uint64_t v14 = *(void *)(result - 8);
    if (*(_DWORD *)(v14 + 84) != a3)
    {
      *(void *)(a1 + *(int *)(a4 + 28)) = (a2 - 1);
      return result;
    }
    uint64_t v10 = result;
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }

  return v11(v12, a2, a2, v10);
}

uint64_t _s13ItemViewModelVMa()
{
  uint64_t result = qword_101696A38;
  if (!qword_101696A38) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100BD1F80()
{
  uint64_t result = type metadata accessor for UUID();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for Date();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t sub_100BD2088(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v6 = _s13ItemViewModelVMa();
  __chkstk_darwin(v6, v7);
  uint64_t v9 = (char *)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10, v11);
  uint64_t v13 = (char *)&v40 - v12;
  __chkstk_darwin(v14, v15);
  uint64_t v17 = (char *)&v40 - v16;
  uint64_t v18 = sub_1005057FC(&qword_1016741B8);
  __chkstk_darwin(v18 - 8, v19);
  uint64_t v21 = (char *)&v40 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v41 = v9;
  CGFloat v40 = v13;
  if (a3)
  {
    type metadata accessor for Date();
    sub_100BD321C((unint64_t *)&qword_101681800, (void (*)(uint64_t))&type metadata accessor for Date);
    if ((dispatch thunk of static Equatable.== infix(_:_:)() & 1) == 0) {
      goto LABEL_10;
    }
  }
  else
  {
    uint64_t v22 = *(int *)(v6 + 32);
    uint64_t v23 = *(void *)(a1 + v22 + 8);
    uint64_t v44 = *(void *)(a1 + v22);
    uint64_t v45 = v23;
    uint64_t v24 = (uint64_t *)(a2 + v22);
    uint64_t v25 = v24[1];
    uint64_t v42 = *v24;
    uint64_t v43 = v25;
    uint64_t v26 = type metadata accessor for Locale();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v21, 1, 1, v26);
    sub_10052E310();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v27 = StringProtocol.compare<A>(_:options:range:locale:)();
    sub_100861DD4((uint64_t)v21);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v27) {
      goto LABEL_14;
    }
  }
  type metadata accessor for Date();
  sub_100BD321C((unint64_t *)&qword_101681800, (void (*)(uint64_t))&type metadata accessor for Date);
  if ((dispatch thunk of static Equatable.== infix(_:_:)() & 1) == 0) {
    goto LABEL_10;
  }
  type metadata accessor for UUID();
  sub_100BD321C((unint64_t *)&qword_10167BDC0, (void (*)(uint64_t))&type metadata accessor for UUID);
  uint64_t v27 = 0;
  if ((dispatch thunk of static Equatable.== infix(_:_:)() & 1) == 0)
  {
    sub_100BD321C(&qword_101683E78, (void (*)(uint64_t))&type metadata accessor for UUID);
    if (dispatch thunk of static Comparable.< infix(_:_:)())
    {
LABEL_11:
      uint64_t v27 = -1;
      goto LABEL_14;
    }
    while ((dispatch thunk of static Comparable.> infix(_:_:)() & 1) == 0)
    {
      _assertionFailure(_:_:file:line:flags:)();
      __break(1u);
LABEL_10:
      sub_100BD321C(&qword_101694AD8, (void (*)(uint64_t))&type metadata accessor for Date);
      if (dispatch thunk of static Comparable.< infix(_:_:)()) {
        goto LABEL_11;
      }
    }
    uint64_t v27 = 1;
  }
LABEL_14:
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117DF40;
  uint64_t v44 = v27;
  type metadata accessor for ComparisonResult(0);
  uint64_t v29 = String.init<A>(describing:)();
  uint64_t v31 = v30;
  *(void *)(inited + 56) = &type metadata for String;
  unint64_t v32 = sub_100528BE4();
  *(void *)(inited + 64) = v32;
  *(void *)(inited + 32) = v29;
  *(void *)(inited + 40) = v31;
  sub_100BD31B8(a1, (uint64_t)v17);
  uint64_t v33 = String.init<A>(describing:)();
  *(void *)(inited + 96) = &type metadata for String;
  *(void *)(inited + 104) = v32;
  *(void *)(inited + 72) = v33;
  *(void *)(inited + 80) = v34;
  sub_100BD31B8(a2, (uint64_t)v17);
  uint64_t v35 = String.init<A>(describing:)();
  *(void *)(inited + 136) = &type metadata for String;
  *(void *)(inited + 144) = v32;
  *(void *)(inited + 112) = v35;
  *(void *)(inited + 120) = v36;
  if ((sub_100BD2A3C(a1, a2) & 1) == 0)
  {
    uint64_t v37 = (uint64_t)v40;
    sub_100BD31B8(a1, (uint64_t)v40);
    uint64_t v38 = (uint64_t)v41;
    sub_100BD31B8(a2, (uint64_t)v41);
LABEL_18:
    if (sub_100BD2A3C(v37, v38))
    {
      sub_100BC2CFC(v37);
      sub_100BC2CFC(v38);
    }
    else
    {
      sub_100BC2CFC(v37);
      sub_100BC2CFC(v38);
      if (v27) {
        goto LABEL_22;
      }
    }
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"compare(lhs:rhs:)", 17, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/Stencil Library/CRLStencilLibrary-ItemViewModel.swift", 123, 2, 107, (uint64_t)"Comparison result should come up as .orderedSame if and only if lhs and rhs are equivalent. comparisonResult: %@ | lhs: %@ | rhs: %@", 132, 2u, inited);
    sub_1005598CC(inited, (uint64_t)"compare(lhs:rhs:)", 17, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/Stencil Library/CRLStencilLibrary-ItemViewModel.swift", 123, 2, 107);
    goto LABEL_22;
  }
  uint64_t v37 = (uint64_t)v40;
  sub_100BD31B8(a1, (uint64_t)v40);
  uint64_t v38 = (uint64_t)v41;
  sub_100BD31B8(a2, (uint64_t)v41);
  if (v27) {
    goto LABEL_18;
  }
  sub_100BC2CFC(v37);
  sub_100BC2CFC(v38);
LABEL_22:
  swift_bridgeObjectRelease();
  return v27;
}

uint64_t sub_100BD26EC(long long *a1)
{
  uint64_t v2 = v1;
  type metadata accessor for UUID();
  sub_100BD321C((unint64_t *)&qword_1016770E0, (void (*)(uint64_t))&type metadata accessor for UUID);
  dispatch thunk of Hashable.hash(into:)();
  uint64_t v4 = (int *)_s13ItemViewModelVMa();
  swift_bridgeObjectRetain();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  if (*(void *)(v1 + v4[9] + 8))
  {
    Hasher._combine(_:)(1u);
    swift_bridgeObjectRetain();
    String.hash(into:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    Hasher._combine(_:)(0);
  }
  uint64_t v5 = *(void *)(v1 + v4[11]);
  swift_bridgeObjectRetain();
  sub_100A45600(a1, v5);
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void **)(v2 + v4[7]);
  type metadata accessor for CGImage(0);
  sub_100BD321C(&qword_101696AA0, type metadata accessor for CGImage);
  id v7 = v6;
  _CFObject.hash(into:)();

  Hasher._combine(_:)(*(unsigned char *)(v2 + v4[12]));
  Hasher._combine(_:)(*(unsigned char *)(v2 + v4[13]));
  type metadata accessor for Date();
  sub_100BD321C(&qword_101696AA8, (void (*)(uint64_t))&type metadata accessor for Date);
  dispatch thunk of Hashable.hash(into:)();
  return dispatch thunk of Hashable.hash(into:)();
}

Swift::Int sub_100BD2918()
{
  Hasher.init(_seed:)();
  sub_100BD26EC(v1);
  return Hasher._finalize()();
}

Swift::Int sub_100BD295C()
{
  Hasher.init(_seed:)();
  sub_100BD26EC(v1);
  return Hasher._finalize()();
}

uint64_t sub_100BD299C()
{
  return sub_100BD321C(&qword_101696A90, (void (*)(uint64_t))_s13ItemViewModelVMa);
}

unint64_t sub_100BD29E8()
{
  unint64_t result = qword_101696A98;
  if (!qword_101696A98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101696A98);
  }
  return result;
}

uint64_t sub_100BD2A3C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (int *)_s13ItemViewModelVMa();
  __chkstk_darwin(v4, v5);
  uint64_t v101 = (uint64_t)&v92 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7, v8);
  CGFloat v100 = (char *)&v92 - v9;
  __chkstk_darwin(v10, v11);
  CGFloat v99 = (char *)&v92 - v12;
  __chkstk_darwin(v13, v14);
  CGFloat v98 = (char *)&v92 - v15;
  __chkstk_darwin(v16, v17);
  CGFloat v97 = (char *)&v92 - v18;
  __chkstk_darwin(v19, v20);
  double v96 = (char *)&v92 - v21;
  __chkstk_darwin(v22, v23);
  uint64_t v95 = (uint64_t)&v92 - v24;
  __chkstk_darwin(v25, v26);
  uint64_t v94 = (uint64_t)&v92 - v27;
  __chkstk_darwin(v28, v29);
  uint64_t v93 = (uint64_t)&v92 - v30;
  __chkstk_darwin(v31, v32);
  uint64_t v92 = (uint64_t)&v92 - v33;
  __chkstk_darwin(v34, v35);
  uint64_t v37 = (char *)&v92 - v36;
  __chkstk_darwin(v38, v39);
  double v41 = (char *)&v92 - v40;
  __chkstk_darwin(v42, v43);
  uint64_t v45 = (char *)&v92 - v44;
  __chkstk_darwin(v46, v47);
  id v49 = (char *)&v92 - v48;
  __chkstk_darwin(v50, v51);
  id v53 = (char *)&v92 - v52;
  __chkstk_darwin(v54, v55);
  double v57 = (char *)&v92 - v56;
  char v58 = static UUID.== infix(_:_:)();
  sub_100BD31B8(a1, (uint64_t)v57);
  sub_100BD31B8(a2, (uint64_t)v53);
  if ((v58 & 1) == 0)
  {
    sub_100BC2CFC((uint64_t)v57);
    sub_100BC2CFC((uint64_t)v53);
    sub_100BD31B8(a1, (uint64_t)v49);
    sub_100BD31B8(a2, (uint64_t)v45);
    goto LABEL_9;
  }
  uint64_t v59 = v4[8];
  uint64_t v60 = *(void *)&v57[v59];
  uint64_t v61 = *(void *)&v57[v59 + 8];
  CGFloat v62 = &v53[v59];
  if (v60 == *(void *)v62 && v61 == *((void *)v62 + 1))
  {
    sub_100BC2CFC((uint64_t)v57);
    sub_100BC2CFC((uint64_t)v53);
    sub_100BD31B8(a1, (uint64_t)v49);
    sub_100BD31B8(a2, (uint64_t)v45);
    goto LABEL_11;
  }
  char v64 = _stringCompareWithSmolCheck(_:_:expecting:)();
  sub_100BC2CFC((uint64_t)v57);
  sub_100BC2CFC((uint64_t)v53);
  sub_100BD31B8(a1, (uint64_t)v49);
  sub_100BD31B8(a2, (uint64_t)v45);
  if ((v64 & 1) == 0)
  {
LABEL_9:
    sub_100BC2CFC((uint64_t)v45);
    sub_100BC2CFC((uint64_t)v49);
LABEL_20:
    uint64_t v72 = (uint64_t)v96;
    uint64_t v71 = (uint64_t)v97;
    sub_100BD31B8(a1, (uint64_t)v41);
    sub_100BD31B8(a2, (uint64_t)v37);
    goto LABEL_21;
  }
LABEL_11:
  CGFloat v65 = v4;
  uint64_t v66 = v4[9];
  CGFloat v67 = &v49[v66];
  uint64_t v68 = *(void *)&v49[v66 + 8];
  double v69 = &v45[v66];
  uint64_t v70 = *((void *)v69 + 1);
  if (!v68)
  {
    swift_bridgeObjectRetain();
    sub_100BC2CFC((uint64_t)v45);
    sub_100BC2CFC((uint64_t)v49);
    if (!v70) {
      goto LABEL_17;
    }
    goto LABEL_19;
  }
  if (!v70)
  {
    swift_bridgeObjectRetain();
    sub_100BC2CFC((uint64_t)v45);
    sub_100BC2CFC((uint64_t)v49);
LABEL_19:
    swift_bridgeObjectRelease();
    goto LABEL_20;
  }
  if (*(void *)v67 == *(void *)v69 && v68 == v70)
  {
    swift_bridgeObjectRetain();
    sub_100BC2CFC((uint64_t)v45);
    sub_100BC2CFC((uint64_t)v49);
    swift_bridgeObjectRelease();
LABEL_17:
    sub_100BD31B8(a1, (uint64_t)v41);
    sub_100BD31B8(a2, (uint64_t)v37);
    uint64_t v72 = (uint64_t)v96;
    uint64_t v71 = (uint64_t)v97;
    goto LABEL_29;
  }
  char v83 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRetain();
  sub_100BC2CFC((uint64_t)v45);
  sub_100BC2CFC((uint64_t)v49);
  swift_bridgeObjectRelease();
  sub_100BD31B8(a1, (uint64_t)v41);
  sub_100BD31B8(a2, (uint64_t)v37);
  uint64_t v72 = (uint64_t)v96;
  uint64_t v71 = (uint64_t)v97;
  if ((v83 & 1) == 0)
  {
LABEL_21:
    sub_100BC2CFC((uint64_t)v41);
    sub_100BC2CFC((uint64_t)v37);
    uint64_t v73 = v92;
    sub_100BD31B8(a1, v92);
    uint64_t v74 = v93;
    sub_100BD31B8(a2, v93);
LABEL_22:
    sub_100BC2CFC(v73);
    sub_100BC2CFC(v74);
    uint64_t v75 = v94;
    sub_100BD31B8(a1, v94);
    uint64_t v76 = v95;
    sub_100BD31B8(a2, v95);
    uint64_t v77 = (uint64_t)v98;
LABEL_23:
    sub_100BC2CFC(v76);
    sub_100BC2CFC(v75);
    sub_100BD31B8(a1, v72);
    sub_100BD31B8(a2, v71);
    uint64_t v79 = (uint64_t)v99;
    uint64_t v78 = (uint64_t)v100;
LABEL_24:
    sub_100BC2CFC(v71);
    sub_100BC2CFC(v72);
    sub_100BD31B8(a1, v77);
    sub_100BD31B8(a2, v79);
LABEL_25:
    sub_100BC2CFC(v79);
    sub_100BC2CFC(v77);
    sub_100BD31B8(a1, v78);
    uint64_t v80 = v101;
    sub_100BD31B8(a2, v101);
    goto LABEL_26;
  }
LABEL_29:
  sub_100A3D710(*(void *)&v41[v4[11]], *(void *)&v37[v4[11]]);
  char v85 = v84;
  sub_100BC2CFC((uint64_t)v41);
  sub_100BC2CFC((uint64_t)v37);
  uint64_t v73 = v92;
  sub_100BD31B8(a1, v92);
  uint64_t v74 = v93;
  sub_100BD31B8(a2, v93);
  if ((v85 & 1) == 0) {
    goto LABEL_22;
  }
  type metadata accessor for CGImage(0);
  sub_100BD321C(&qword_101696AA0, type metadata accessor for CGImage);
  char v86 = static _CFObject.== infix(_:_:)();
  sub_100BC2CFC(v73);
  sub_100BC2CFC(v74);
  uint64_t v75 = v94;
  sub_100BD31B8(a1, v94);
  uint64_t v76 = v95;
  sub_100BD31B8(a2, v95);
  uint64_t v77 = (uint64_t)v98;
  if ((v86 & 1) == 0) {
    goto LABEL_23;
  }
  int v87 = *(unsigned __int8 *)(v75 + v65[12]);
  sub_100BC2CFC(v75);
  int v88 = *(unsigned __int8 *)(v76 + v65[12]);
  sub_100BC2CFC(v76);
  sub_100BD31B8(a1, v72);
  sub_100BD31B8(a2, v71);
  uint64_t v79 = (uint64_t)v99;
  uint64_t v78 = (uint64_t)v100;
  if (v87 != v88) {
    goto LABEL_24;
  }
  int v89 = *(unsigned __int8 *)(v72 + v65[13]);
  sub_100BC2CFC(v72);
  int v90 = *(unsigned __int8 *)(v71 + v65[13]);
  sub_100BC2CFC(v71);
  sub_100BD31B8(a1, v77);
  sub_100BD31B8(a2, v79);
  if (v89 != v90) {
    goto LABEL_25;
  }
  char v91 = static Date.== infix(_:_:)();
  sub_100BC2CFC(v79);
  sub_100BC2CFC(v77);
  sub_100BD31B8(a1, v78);
  uint64_t v80 = v101;
  sub_100BD31B8(a2, v101);
  if (v91)
  {
    char v81 = static Date.== infix(_:_:)();
    goto LABEL_27;
  }
LABEL_26:
  char v81 = 0;
LABEL_27:
  sub_100BC2CFC(v80);
  sub_100BC2CFC(v78);
  return v81 & 1;
}

uint64_t sub_100BD31B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s13ItemViewModelVMa();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100BD321C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

_UNKNOWN **sub_100BD3264()
{
  return &off_10150F5C8;
}

void sub_100BD3270()
{
  uint64_t v1 = v0;
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  id v3 = [Strong commandController];

  if (v3)
  {
    sub_10078F988(0);
  }
  sub_10082386C(-1);
  sub_10082373C();
  if (v4 <= 0)
  {
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v6 = sub_1008355F8();
    if (v6)
    {
      uint64_t v7 = v6;
      uint64_t v8 = *(void *)&v6[OBJC_IVAR____TtC8Freeform12CRLTextRange_range];
      uint64_t v9 = *(void *)&v6[OBJC_IVAR____TtC8Freeform12CRLTextRange_range + 8];
      id v10 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v1
                                                                  + OBJC_IVAR____TtC8Freeform11CRLWPEditor_editorController), "selectionPath"));
      id v11 = [objc_allocWithZone((Class)CRLCommandSelectionBehavior) initWithCommitSelectionPath:v10 forwardSelectionPath:v10 reverseSelectionPath:v10];
      uint64_t v12 = (char *)*(id *)(v1 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_enclosingShape);
      swift_retain();
      uint64_t v13 = (unsigned char *)sub_10083DBDC(v12, v8, v9, KeyPath, 0);

      swift_release();
      uint64_t v14 = (void *)swift_unknownObjectWeakLoadStrong();
      id v15 = [v14 commandController];

      if (v15)
      {
        id v16 = v11;
        sub_10078BED8(v13, 0, v11, 4, 0);
      }
      sub_10083686C(KeyPath);
      swift_release();
    }
    else
    {
      sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"setAttributeValue(_:value:)", 27, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/Editor/CRLWPEditor.swift", 84, 2, 2950, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"setAttributeValue(_:value:)", 27, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/Editor/CRLWPEditor.swift", 84, 2, 2950);
      swift_release();
    }
  }
  uint64_t v17 = (void *)swift_unknownObjectWeakLoadStrong();
  id v18 = [v17 commandController];

  if (v18)
  {
    sub_10078FB90(0);
  }
}

uint64_t sub_100BD3618(void *a1, uint64_t a2, uint64_t a3)
{
  if (a3)
  {
    id v4 = a1;
    swift_unknownObjectRetain();
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v8, 0, sizeof(v8));
    id v5 = a1;
  }
  NSString v6 = String._bridgeToObjectiveC()();
  [a1 insertText:v6];

  return sub_10052E2B0((uint64_t)v8);
}

void sub_100BD36B8()
{
  uint64_t v1 = *(void *)(*(void *)&v0[OBJC_IVAR____TtC8Freeform11CRLWPEditor_enclosingShape]
                 + OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage);
  if (!v1) {
    goto LABEL_13;
  }
  if (*(void *)(v1 + OBJC_IVAR____TtC8Freeform12CRLWPStorage_markedTextRange)) {
    return;
  }
  sub_10083B97C();
  if (!v2) {
    return;
  }
  id v3 = [v2 selectedTextRange];
  if (!v3) {
    return;
  }
  id v4 = v3;
  id v5 = *(id *)&v0[OBJC_IVAR____TtC8Freeform11CRLWPEditor_editorHelper];
  NSString v6 = (char *)[v4 start];
  uint64_t v7 = *(void *)&v6[OBJC_IVAR____TtC8Freeform15CRLTextPosition_location];

  id v8 = [v5 charIndexForBeginningOfLineFromCharIndex:v7];
  uint64_t v9 = (char *)[v4 end];
  uint64_t v10 = *(void *)&v9[OBJC_IVAR____TtC8Freeform15CRLTextPosition_location];

  if (v10 < (uint64_t)v8)
  {
    __break(1u);
LABEL_13:
    __break(1u);
    return;
  }
  id v11 = (objc_class *)type metadata accessor for CRLTextRange();
  uint64_t v12 = (char *)objc_allocWithZone(v11);
  uint64_t v13 = OBJC_IVAR____TtC8Freeform12CRLTextRange_caretAffinity;
  *(void *)&v12[OBJC_IVAR____TtC8Freeform12CRLTextRange_caretAffinity] = 0;
  *(void *)&v12[OBJC_IVAR____TtC8Freeform12CRLTextRange_insertionEdge] = 0;
  uint64_t v14 = &v12[OBJC_IVAR____TtC8Freeform12CRLTextRange_range];
  *(void *)uint64_t v14 = v8;
  *((void *)v14 + 1) = v10;
  *(void *)&v12[v13] = 0;
  v17.receiver = v12;
  v17.super_class = v11;
  id v15 = [super init];
  if (([v15 isEmpty] & 1) == 0)
  {
    sub_10083B97C();
    if (v16) {
      [v16 setSelectedTextRange:v15];
    }
    [v0 deleteCurrentSelection];
  }
}

void sub_100BD3898()
{
  sub_10083B97C();
  if (v1)
  {
    id v2 = [v1 selectedTextRange];
    if (v2)
    {
      id v14 = v2;
      if ([v2 isEmpty])
      {
        id v3 = *(void **)(*(void *)(v0 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_enclosingShape)
                      + OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage);
        if (!v3)
        {
          __break(1u);
          return;
        }
        id v4 = v3;
        id v5 = (char *)[v14 start];
        uint64_t v6 = *(void *)&v5[OBJC_IVAR____TtC8Freeform15CRLTextPosition_location];

        id v7 = [v4 wordAtCharIndex:v6 includePreviousWord:0];
        uint64_t v9 = v8;

        sub_10083B97C();
        if (v10)
        {
          id v11 = v10;
          id v12 = objc_allocWithZone((Class)type metadata accessor for CRLTextRange());
          swift_unknownObjectRetain();
          uint64_t v13 = (void *)sub_1006CC83C((uint64_t)v7, v9);
          [v11 setSelectedTextRange:v13];
          swift_unknownObjectRelease();
        }
      }
      sub_10082DA24();
    }
  }
}

void sub_100BD3A88()
{
  uint64_t v1 = v0;
  sub_10083B97C();
  if (v2)
  {
    id v3 = [v2 selectedTextRange];
    if (v3)
    {
      id v15 = v3;
      if ([v3 isEmpty])
      {
        id v4 = *(void **)(*(void *)&v0[OBJC_IVAR____TtC8Freeform11CRLWPEditor_enclosingShape]
                      + OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage);
        if (!v4)
        {
          __break(1u);
          return;
        }
        id v5 = v4;
        uint64_t v6 = (char *)[v15 start];
        uint64_t v7 = *(void *)&v6[OBJC_IVAR____TtC8Freeform15CRLTextPosition_location];

        id v8 = [v5 findRangeOfWordBackwardFromCharIndex:v7 expandingRangeToEndOfWord:0];
        uint64_t v10 = v9;

        sub_10083B97C();
        if (v11)
        {
          id v12 = v11;
          id v13 = objc_allocWithZone((Class)type metadata accessor for CRLTextRange());
          swift_unknownObjectRetain();
          id v14 = (void *)sub_1006CC83C((uint64_t)v8, v10);
          [v12 setSelectedTextRange:v14];
          swift_unknownObjectRelease();
        }
      }
      [v1 deleteCurrentSelection];
    }
  }
}

uint64_t sub_100BD3C40(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(_OWORD *, uint64_t))
{
  if (a3)
  {
    id v8 = a1;
    swift_unknownObjectRetain();
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v11, 0, sizeof(v11));
    id v9 = a1;
  }
  a5(v11, a4);

  return sub_10052E2B0((uint64_t)v11);
}

void sub_100BD3DA8()
{
  uint64_t v1 = OBJC_IVAR____TtC8Freeform11CRLWPEditor_enclosingShape;
  uint64_t v2 = *(void *)(*(void *)(v0 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_enclosingShape)
                 + OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage);
  if (!v2)
  {
    __break(1u);
    goto LABEL_9;
  }
  if (*(void *)(v2 + OBJC_IVAR____TtC8Freeform12CRLWPStorage_markedTextRange)) {
    return;
  }
  sub_10083B97C();
  if (v3)
  {
    id v4 = *(void **)(*(void *)(v0 + v1) + OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage);
    if (v4)
    {
      id v5 = v3;
      swift_unknownObjectRetain();
      id v6 = v4;
      uint64_t v7 = (char *)objc_msgSend(objc_allocWithZone((Class)type metadata accessor for CRLTextPosition()), "init:caretAffinity:", objc_msgSend(v6, "length"), 0);
      NSNotFound.getter();
      uint64_t v8 = *(void *)&v7[OBJC_IVAR____TtC8Freeform15CRLTextPosition_location];
      uint64_t v9 = *(void *)&v7[OBJC_IVAR____TtC8Freeform15CRLTextPosition_caretAffinity];
      uint64_t v10 = (objc_class *)type metadata accessor for CRLTextRange();
      id v11 = (char *)objc_allocWithZone(v10);
      uint64_t v12 = OBJC_IVAR____TtC8Freeform12CRLTextRange_caretAffinity;
      *(void *)&v11[OBJC_IVAR____TtC8Freeform12CRLTextRange_caretAffinity] = 0;
      *(void *)&v11[OBJC_IVAR____TtC8Freeform12CRLTextRange_insertionEdge] = 0;
      id v13 = &v11[OBJC_IVAR____TtC8Freeform12CRLTextRange_range];
      *(void *)id v13 = v8;
      *((void *)v13 + 1) = v8;
      *(void *)&v11[v12] = v9;
      v15.receiver = v11;
      v15.super_class = v10;
      [super init];

      [v5 setSelectedTextRange:v14];
      swift_unknownObjectRelease();

      goto LABEL_6;
    }
LABEL_9:
    __break(1u);
    return;
  }
LABEL_6:
  sub_10082A400(0, 1);
}

void sub_100BD3F50()
{
  uint64_t v1 = sub_1005057FC((uint64_t *)&unk_10167BC20);
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1, v3);
  id v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for CRLWPShapeItemCRDTData(0);
  __chkstk_darwin(v6, v7);
  uint64_t v9 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for CRLWPStorageCRDTData(0);
  __chkstk_darwin(v10 - 8, v11);
  id v13 = (char *)&v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = OBJC_IVAR____TtC8Freeform11CRLWPEditor_enclosingShape;
  uint64_t v15 = *(void *)(*(void *)(v0 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_enclosingShape)
                  + OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage);
  if (!v15) {
    goto LABEL_13;
  }
  if (!*(void *)(v15 + OBJC_IVAR____TtC8Freeform12CRLWPStorage_markedTextRange))
  {
    sub_10083B97C();
    if (v16)
    {
      uint64_t v34 = (char *)[v16 selectedTextRange];
      if (v34)
      {
        sub_10083B97C();
        if (!v17)
        {
LABEL_11:
          sub_10082A400(0, 1);

          return;
        }
        id v18 = *(char **)(*(void *)(v0 + v14) + OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage);
        if (!v18) {
          goto LABEL_14;
        }
        uint64_t v19 = *(void *)&v18[OBJC_IVAR____TtC8Freeform12CRLWPStorage_shapeItemData];
        if (!v19)
        {
LABEL_15:
          __break(1u);
          return;
        }
        uint64_t v20 = v17;
        (*(void (**)(void))(*(void *)v19 + 760))();
        sub_1005D3C94((uint64_t)&v9[*(int *)(v6 + 20)], (uint64_t)v13);
        id v33 = v20;
        swift_unknownObjectRetain();
        uint64_t v21 = v18;
        sub_1005D3CF8((uint64_t)v9, type metadata accessor for CRLWPShapeItemCRDTData);
        (*(void (**)(char *, char *, uint64_t))(v2 + 16))(v5, v13, v1);
        sub_1005D3CF8((uint64_t)v13, type metadata accessor for CRLWPStorageCRDTData);
        uint64_t v22 = (void *)CRAttributedString.attributedString.getter();
        (*(void (**)(char *, uint64_t))(v2 + 8))(v5, v1);
        id v23 = [v22 length];

        uint64_t v24 = (char *)[objc_allocWithZone((Class)type metadata accessor for CRLTextPosition()) init:v23 caretAffinity:0];
        uint64_t v25 = *(void *)&v34[OBJC_IVAR____TtC8Freeform12CRLTextRange_range];
        uint64_t v26 = *(void *)&v24[OBJC_IVAR____TtC8Freeform15CRLTextPosition_location];
        if (v26 >= v25)
        {
          uint64_t v27 = v24;
          uint64_t v28 = (objc_class *)type metadata accessor for CRLTextRange();
          uint64_t v29 = (char *)objc_allocWithZone(v28);
          uint64_t v30 = OBJC_IVAR____TtC8Freeform12CRLTextRange_caretAffinity;
          *(void *)&v29[OBJC_IVAR____TtC8Freeform12CRLTextRange_caretAffinity] = 0;
          *(void *)&v29[OBJC_IVAR____TtC8Freeform12CRLTextRange_insertionEdge] = 0;
          uint64_t v31 = &v29[OBJC_IVAR____TtC8Freeform12CRLTextRange_range];
          *(void *)uint64_t v31 = v25;
          *((void *)v31 + 1) = v26;
          *(void *)&v29[v30] = 0;
          v35.receiver = v29;
          v35.super_class = v28;
          id v32 = [super init];

          [v33 setSelectedTextRange:v32];
          swift_unknownObjectRelease();

          goto LABEL_11;
        }
        __break(1u);
LABEL_13:
        __break(1u);
LABEL_14:
        __break(1u);
        goto LABEL_15;
      }
    }
  }
}

id sub_100BD43FC()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_enclosingShape)
                 + OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage);
  if (v1)
  {
    if (!*(void *)(v1 + OBJC_IVAR____TtC8Freeform12CRLWPStorage_markedTextRange)) {
      return [*(id *)(v0 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_editorHelper) moveToEndOfParagraph:0];
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_100BD4694()
{
  sub_100824FD8();
  sub_10083B97C();
  if (v1)
  {
    uint64_t v2 = *(void **)(*(void *)(v0 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_enclosingShape)
                  + OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage);
    if (!v2)
    {
      __break(1u);
      return;
    }
    uint64_t v3 = v1;
    swift_unknownObjectRetain();
    id v4 = v2;
    id v5 = (void *)sub_100BD5494(v4);

    [v3 setSelectedTextRange:v5];
    swift_unknownObjectRelease();
  }
  sub_10082A400(0, 0);

  sub_100825130();
}

uint64_t sub_100BD475C(void *a1, uint64_t a2, uint64_t a3, void (*a4)(id))
{
  if (a3)
  {
    id v6 = a1;
    swift_unknownObjectRetain();
    _bridgeAnyObjectToAny(_:)();
    id v7 = (id)swift_unknownObjectRelease();
  }
  else
  {
    memset(v9, 0, sizeof(v9));
    id v7 = a1;
  }
  a4(v7);

  return sub_10052E2B0((uint64_t)v9);
}

uint64_t sub_100BD4858(uint64_t result, SEL *a2)
{
  uint64_t v3 = *(void *)(*(void *)(v2 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_enclosingShape)
                 + OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage);
  if (v3)
  {
    if (!*(void *)(v3 + OBJC_IVAR____TtC8Freeform12CRLWPStorage_markedTextRange))
    {
      id v5 = *(void **)(v2 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_editorHelper);
      sub_100557A70(result, (uint64_t)v15);
      uint64_t v6 = v16;
      if (v16)
      {
        id v7 = sub_10050F848(v15, v16);
        uint64_t v8 = *(void *)(v6 - 8);
        __n128 v9 = __chkstk_darwin(v7, v7);
        uint64_t v11 = (char *)v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
        (*(void (**)(char *, __n128))(v8 + 16))(v11, v9);
        id v12 = v5;
        uint64_t v13 = _bridgeAnythingToObjectiveC<A>(_:)();
        (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v6);
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v15);
      }
      else
      {
        id v14 = v5;
        uint64_t v13 = 0;
      }
      [v5 *a2:v13];

      return swift_unknownObjectRelease();
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100BD4A30(uint64_t a1, SEL *a2)
{
  id v4 = *(void **)(v2 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_editorHelper);
  sub_100557A70(a1, (uint64_t)v15);
  uint64_t v5 = v16;
  if (v16)
  {
    uint64_t v6 = sub_10050F848(v15, v16);
    uint64_t v7 = *(void *)(v5 - 8);
    __n128 v8 = __chkstk_darwin(v6, v6);
    uint64_t v10 = (char *)v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, __n128))(v7 + 16))(v10, v8);
    id v11 = v4;
    uint64_t v12 = _bridgeAnythingToObjectiveC<A>(_:)();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v5);
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v15);
  }
  else
  {
    id v13 = v4;
    uint64_t v12 = 0;
  }
  [v4 *a2:v12];

  return swift_unknownObjectRelease();
}

void sub_100BD4C24(uint64_t a1)
{
  uint64_t v2 = v1;
  type metadata accessor for CRLTextInputModifierKeyMask();
  if (qword_10166F780 != -1) {
    swift_once();
  }
  id v4 = (id)qword_10171B610;
  char v5 = static NSObject.== infix(_:_:)();

  if (v5)
  {
    switch(a1)
    {
      case 1:
        uint64_t v6 = "moveLeft:";
        goto LABEL_33;
      case 2:
        uint64_t v6 = "moveRight:";
        goto LABEL_33;
      case 3:
        uint64_t v6 = "moveUp:";
        goto LABEL_33;
      case 4:
        uint64_t v6 = "moveDown:";
        goto LABEL_33;
      default:
        goto LABEL_76;
    }
  }
  if (qword_10166F788 != -1) {
    swift_once();
  }
  id v7 = (id)qword_10171B618;
  char v8 = static NSObject.== infix(_:_:)();

  if (v8)
  {
    uint64_t v9 = *(void *)(*(void *)&v1[OBJC_IVAR____TtC8Freeform11CRLWPEditor_enclosingShape]
                   + OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage);
    if (v9)
    {
      if (!*(void *)(v9 + OBJC_IVAR____TtC8Freeform12CRLWPStorage_markedTextRange))
      {
        switch(a1)
        {
          case 1:
            uint64_t v31 = type metadata accessor for CRLWPEditor();
            v30[0] = v1;
            uint64_t v10 = v1;
            sub_10082A3DC((uint64_t)v30);
            goto LABEL_46;
          case 2:
            uint64_t v31 = type metadata accessor for CRLWPEditor();
            v30[0] = v1;
            id v23 = v1;
            sub_10082A3B8((uint64_t)v30);
            goto LABEL_46;
          case 3:
            uint64_t v31 = type metadata accessor for CRLWPEditor();
            v30[0] = v1;
            uint64_t v22 = v1;
            sub_10082A1FC((uint64_t)v30);
            goto LABEL_46;
          case 4:
            uint64_t v31 = type metadata accessor for CRLWPEditor();
            v30[0] = v1;
            uint64_t v24 = v1;
            sub_10082A1D8((uint64_t)v30);
LABEL_46:
            sub_10052E2B0((uint64_t)v30);
            return;
          default:
            goto LABEL_76;
        }
      }
      return;
    }
    __break(1u);
    goto LABEL_72;
  }
  if (qword_10166F790 != -1) {
    swift_once();
  }
  id v11 = (id)qword_10171B620;
  char v12 = static NSObject.== infix(_:_:)();

  if (v12)
  {
    uint64_t v13 = *(void *)(*(void *)&v1[OBJC_IVAR____TtC8Freeform11CRLWPEditor_enclosingShape]
                    + OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage);
    if (!v13)
    {
LABEL_72:
      __break(1u);
      goto LABEL_73;
    }
    if (!*(void *)(v13 + OBJC_IVAR____TtC8Freeform12CRLWPStorage_markedTextRange))
    {
      switch(a1)
      {
        case 1:
          uint64_t v6 = "moveWordLeft:";
          goto LABEL_33;
        case 2:
          uint64_t v6 = "moveWordRight:";
          goto LABEL_33;
        case 3:
          uint64_t v6 = "moveToLeftEndOfLine:";
          goto LABEL_33;
        case 4:
          uint64_t v6 = "moveToRightEndOfLine:";
          goto LABEL_33;
        default:
          goto LABEL_76;
      }
    }
  }
  else
  {
    if (qword_10166F798 != -1) {
      swift_once();
    }
    id v14 = (id)qword_10171B628;
    char v15 = static NSObject.== infix(_:_:)();

    if (v15) {
      goto LABEL_27;
    }
    if (qword_10166F7A0 != -1) {
      swift_once();
    }
    id v16 = (id)qword_10171B630;
    char v17 = static NSObject.== infix(_:_:)();

    if (v17)
    {
LABEL_27:
      uint64_t v18 = *(void *)(*(void *)&v1[OBJC_IVAR____TtC8Freeform11CRLWPEditor_enclosingShape]
                      + OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage);
      if (!v18)
      {
LABEL_73:
        __break(1u);
        goto LABEL_74;
      }
      if (!*(void *)(v18 + OBJC_IVAR____TtC8Freeform12CRLWPStorage_markedTextRange))
      {
        switch(a1)
        {
          case 1:
            uint64_t v6 = "moveToBeginningOfLine:";
            goto LABEL_33;
          case 2:
            uint64_t v6 = "moveToEndOfLine:";
            goto LABEL_33;
          case 3:
            uint64_t v6 = "moveToBeginningOfDocument:";
            goto LABEL_33;
          case 4:
            uint64_t v6 = "moveToEndOfDocument:";
            goto LABEL_33;
          default:
            goto LABEL_76;
        }
      }
    }
    else
    {
      if (qword_10166F7A8 != -1) {
        swift_once();
      }
      id v19 = (id)qword_10171B638;
      char v20 = static NSObject.== infix(_:_:)();

      if (v20)
      {
        uint64_t v21 = *(void *)(*(void *)&v1[OBJC_IVAR____TtC8Freeform11CRLWPEditor_enclosingShape]
                        + OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage);
        if (!v21)
        {
LABEL_74:
          __break(1u);
          goto LABEL_75;
        }
        if (!*(void *)(v21 + OBJC_IVAR____TtC8Freeform12CRLWPStorage_markedTextRange))
        {
          switch(a1)
          {
            case 1:
              uint64_t v6 = "moveWordLeftAndModifySelection:";
              goto LABEL_33;
            case 2:
              uint64_t v6 = "moveWordRightAndModifySelection:";
              goto LABEL_33;
            case 3:
              uint64_t v6 = "moveParagraphBackwardAndModifySelection:";
              goto LABEL_33;
            case 4:
              uint64_t v6 = "moveParagraphForwardAndModifySelection:";
              goto LABEL_33;
            default:
              goto LABEL_76;
          }
        }
      }
      else
      {
        if (qword_10166F7B0 != -1) {
          swift_once();
        }
        id v25 = (id)qword_10171B640;
        char v26 = static NSObject.== infix(_:_:)();

        if ((v26 & 1) == 0)
        {
          if (qword_10166F7B8 != -1) {
            swift_once();
          }
          id v27 = (id)qword_10171B648;
          char v28 = static NSObject.== infix(_:_:)();

          if ((v28 & 1) == 0)
          {
            sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"arrowKeyReceived(in:with:)", 26, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/Editor/CRLWPEditor+CRLKeyInputReceiving.swift", 105, 2, 618, (uint64_t)"Unhandled arrow key modifier.", 29, 2u, (uint64_t)_swiftEmptyArrayStorage);
            sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"arrowKeyReceived(in:with:)", 26, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/Editor/CRLWPEditor+CRLKeyInputReceiving.swift", 105, 2, 618);
            return;
          }
        }
        uint64_t v29 = *(void *)(*(void *)&v2[OBJC_IVAR____TtC8Freeform11CRLWPEditor_enclosingShape]
                        + OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage);
        if (!v29)
        {
LABEL_75:
          __break(1u);
LABEL_76:
          type metadata accessor for CRLTextInputArrowKeyDirection(0);
          v30[0] = a1;
          _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)();
          __break(1u);
          JUMPOUT(0x100BD53C4);
        }
        if (!*(void *)(v29 + OBJC_IVAR____TtC8Freeform12CRLWPStorage_markedTextRange))
        {
          switch(a1)
          {
            case 1:
              uint64_t v6 = "moveToBeginningOfLineAndModifySelection:";
              goto LABEL_33;
            case 2:
              uint64_t v6 = "moveToEndOfLineAndModifySelection:";
              goto LABEL_33;
            case 3:
              uint64_t v6 = "moveToBeginningOfDocumentAndModifySelection:";
              goto LABEL_33;
            case 4:
              uint64_t v6 = "moveToEndOfDocumentAndModifySelection:";
LABEL_33:
              [v2 v6:v2];
              return;
            default:
              goto LABEL_76;
          }
        }
      }
    }
  }
}

uint64_t sub_100BD5494(void *a1)
{
  uint64_t v2 = (char *)[objc_allocWithZone((Class)type metadata accessor for CRLTextPosition()) init:0 caretAffinity:0];
  uint64_t v3 = (char *)[a1 length];
  uint64_t result = NSNotFound.getter();
  if ((uint64_t)v3 >= result) {
    char v5 = 0;
  }
  else {
    char v5 = v3;
  }
  uint64_t v6 = *(void *)&v2[OBJC_IVAR____TtC8Freeform15CRLTextPosition_location];
  id v7 = &v5[v6];
  if (__OFADD__(v6, v5))
  {
    __break(1u);
  }
  else if ((uint64_t)v7 >= v6)
  {
    uint64_t v8 = *(void *)&v2[OBJC_IVAR____TtC8Freeform15CRLTextPosition_caretAffinity];
    uint64_t v9 = (objc_class *)type metadata accessor for CRLTextRange();
    uint64_t v10 = (char *)objc_allocWithZone(v9);
    uint64_t v11 = OBJC_IVAR____TtC8Freeform12CRLTextRange_caretAffinity;
    *(void *)&v10[OBJC_IVAR____TtC8Freeform12CRLTextRange_caretAffinity] = 0;
    *(void *)&v10[OBJC_IVAR____TtC8Freeform12CRLTextRange_insertionEdge] = 0;
    char v12 = &v10[OBJC_IVAR____TtC8Freeform12CRLTextRange_range];
    *(void *)char v12 = v6;
    *((void *)v12 + 1) = v7;
    *(void *)&v10[v11] = v8;
    v14.receiver = v10;
    v14.super_class = v9;
    [super init];

    return (uint64_t)v13;
  }
  __break(1u);
  return result;
}

double *sub_100BD55B0(uint64_t a1)
{
  uint64_t v2 = sub_1005057FC(&qword_101696EB0);
  __chkstk_darwin(v2 - 8, v3);
  char v5 = (char *)&v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = _s13ItemViewModelVMa();
  uint64_t v6 = *(void *)(v45 - 8);
  __chkstk_darwin(v45, v7);
  uint64_t v40 = (uint64_t)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9, v10);
  uint64_t v37 = (uint64_t)&v36 - v11;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    __CocoaSet.makeIterator()();
    _s8ItemDataCMa();
    sub_100BDBCEC();
    uint64_t result = (double *)Set.Iterator.init(_cocoa:)();
    a1 = v48;
    uint64_t v44 = v49;
    uint64_t v13 = v50;
    uint64_t v14 = v51;
    uint64_t v15 = v52;
  }
  else
  {
    uint64_t v16 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v17 = *(void *)(a1 + 56);
    uint64_t v44 = a1 + 56;
    uint64_t v13 = ~v16;
    uint64_t v18 = -v16;
    if (v18 < 64) {
      uint64_t v19 = ~(-1 << v18);
    }
    else {
      uint64_t v19 = -1;
    }
    uint64_t v15 = v19 & v17;
    uint64_t result = (double *)swift_bridgeObjectRetain();
    uint64_t v14 = 0;
  }
  uint64_t v39 = v13;
  int64_t v43 = (unint64_t)(v13 + 64) >> 6;
  char v20 = (void (**)(char *, void, uint64_t, uint64_t))(v6 + 56);
  double v41 = _swiftEmptyArrayStorage;
  uint64_t v38 = v6;
  uint64_t v21 = (unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48);
  uint64_t v42 = (char *)&type metadata for Swift.AnyObject + 8;
  uint64_t v46 = a1;
LABEL_8:
  uint64_t v22 = v14;
  unint64_t v23 = v15;
  if (a1 < 0)
  {
    do
    {
      uint64_t v25 = __CocoaSet.Iterator.next()();
      if (!v25) {
        goto LABEL_39;
      }
      uint64_t v47 = v25;
      _s8ItemDataCMa();
      swift_unknownObjectRetain();
      swift_dynamicCast();
      uint64_t v26 = v53;
      swift_unknownObjectRelease();
      uint64_t v14 = v22;
      uint64_t v15 = v23;
      if (!v26) {
        goto LABEL_39;
      }
LABEL_31:
      sub_100BD959C(v26 + OBJC_IVAR____TtCC8Freeform17CRLStencilLibrary8ItemData_metadata, (uint64_t)v5, (uint64_t (*)(void))_s13ItemViewModelVMa);
      uint64_t v30 = v45;
      (*v20)(v5, 0, 1, v45);
      swift_release();
      if ((*v21)(v5, 1, v30) != 1)
      {
        uint64_t v31 = v37;
        sub_100BDBC84((uint64_t)v5, v37, (uint64_t (*)(void))_s13ItemViewModelVMa);
        sub_100BDBC84(v31, v40, (uint64_t (*)(void))_s13ItemViewModelVMa);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          double v41 = (double *)sub_100F63F98(0, *((void *)v41 + 2) + 1, 1, (unint64_t)v41);
        }
        a1 = v46;
        unint64_t v33 = *((void *)v41 + 2);
        unint64_t v32 = *((void *)v41 + 3);
        if (v33 >= v32 >> 1) {
          double v41 = (double *)sub_100F63F98(v32 > 1, v33 + 1, 1, (unint64_t)v41);
        }
        uint64_t v34 = v40;
        objc_super v35 = v41;
        *((void *)v41 + 2) = v33 + 1;
        uint64_t result = (double *)sub_100BDBC84(v34, (uint64_t)v35+ ((*(unsigned __int8 *)(v38 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80))+ *(void *)(v38 + 72) * v33, (uint64_t (*)(void))_s13ItemViewModelVMa);
        goto LABEL_8;
      }
      uint64_t result = (double *)sub_100522F00((uint64_t)v5, &qword_101696EB0);
      uint64_t v22 = v14;
      unint64_t v23 = v15;
      a1 = v46;
    }
    while (v46 < 0);
  }
  if (v23)
  {
    uint64_t v15 = (v23 - 1) & v23;
    unint64_t v24 = __clz(__rbit64(v23)) | (v22 << 6);
    uint64_t v14 = v22;
    goto LABEL_30;
  }
  int64_t v27 = v22 + 1;
  if (!__OFADD__(v22, 1))
  {
    if (v27 < v43)
    {
      unint64_t v28 = *(void *)(v44 + 8 * v27);
      uint64_t v14 = v22 + 1;
      if (v28) {
        goto LABEL_29;
      }
      uint64_t v14 = v22 + 2;
      if (v22 + 2 >= v43) {
        goto LABEL_39;
      }
      unint64_t v28 = *(void *)(v44 + 8 * v14);
      if (v28) {
        goto LABEL_29;
      }
      uint64_t v14 = v22 + 3;
      if (v22 + 3 >= v43) {
        goto LABEL_39;
      }
      unint64_t v28 = *(void *)(v44 + 8 * v14);
      if (v28) {
        goto LABEL_29;
      }
      uint64_t v14 = v22 + 4;
      if (v22 + 4 >= v43) {
        goto LABEL_39;
      }
      unint64_t v28 = *(void *)(v44 + 8 * v14);
      if (v28)
      {
LABEL_29:
        uint64_t v15 = (v28 - 1) & v28;
        unint64_t v24 = __clz(__rbit64(v28)) + (v14 << 6);
LABEL_30:
        uint64_t v26 = *(void *)(*(void *)(a1 + 48) + 8 * v24);
        swift_retain();
        if (v26) {
          goto LABEL_31;
        }
        goto LABEL_39;
      }
      uint64_t v14 = v22 + 5;
      if (v22 + 5 < v43)
      {
        unint64_t v28 = *(void *)(v44 + 8 * v14);
        if (!v28)
        {
          uint64_t v29 = v22 + 6;
          while (v43 != v29)
          {
            unint64_t v28 = *(void *)(v44 + 8 * v29++);
            if (v28)
            {
              uint64_t v14 = v29 - 1;
              a1 = v46;
              goto LABEL_29;
            }
          }
          goto LABEL_39;
        }
        goto LABEL_29;
      }
    }
LABEL_39:
    sub_10052E1EC();
    return v41;
  }
  __break(1u);
  return result;
}

uint64_t sub_100BD5ACC(uint64_t a1)
{
  uint64_t v44 = sub_1005057FC(&qword_10169A100);
  __chkstk_darwin(v44, v2);
  int64_t v43 = (char *)&v38 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4, v5);
  uint64_t v42 = (char *)&v38 - v6;
  __chkstk_darwin(v7, v8);
  double v41 = (char *)&v38 - v9;
  unint64_t v48 = (unint64_t)_swiftEmptyArrayStorage;
  uint64_t v10 = *(void *)(a1 + 64);
  uint64_t v39 = a1 + 64;
  uint64_t v11 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & v10;
  int64_t v40 = (unint64_t)(v11 + 63) >> 6;
  uint64_t v45 = a1;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v15 = 0;
  uint64_t v16 = (uint64_t)v42;
  uint64_t v17 = v43;
  if (!v13) {
    goto LABEL_5;
  }
LABEL_4:
  uint64_t v46 = (v13 - 1) & v13;
  int64_t v47 = v15;
  for (unint64_t i = __clz(__rbit64(v13)) | (v15 << 6); ; unint64_t i = __clz(__rbit64(v20)) + (v21 << 6))
  {
    uint64_t v23 = v45;
    uint64_t v24 = *(void *)(v45 + 48);
    uint64_t v25 = type metadata accessor for UUID();
    uint64_t v26 = *(void *)(v25 - 8);
    uint64_t v27 = v26;
    uint64_t v28 = v24 + *(void *)(v26 + 72) * i;
    uint64_t v29 = *(void (**)(char *, uint64_t, uint64_t))(v26 + 16);
    uint64_t v30 = (uint64_t)v41;
    v29(v41, v28, v25);
    uint64_t v31 = *(void **)(*(void *)(v23 + 56) + 8 * i);
    uint64_t v32 = v44;
    *(void *)(v30 + *(int *)(v44 + 48)) = v31;
    sub_10051B3EC(v30, v16, &qword_10169A100);
    uint64_t v33 = *(int *)(v32 + 48);
    v29(v17, v16, v25);
    uint64_t v34 = *(void **)(v16 + v33);
    *(void *)&v17[v33] = v34;
    objc_super v35 = *(void (**)(char *, uint64_t))(v27 + 8);
    id v36 = v31;
    id v37 = v34;
    v35(v17, v25);
    sub_100522F00(v16, &qword_10169A100);
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)((v48 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v48 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    uint64_t result = specialized Array._endMutation()();
    unint64_t v13 = v46;
    int64_t v15 = v47;
    if (v46) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v19 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v19 >= v40) {
      goto LABEL_25;
    }
    unint64_t v20 = *(void *)(v39 + 8 * v19);
    int64_t v21 = v15 + 1;
    if (!v20)
    {
      int64_t v21 = v15 + 2;
      if (v15 + 2 >= v40) {
        goto LABEL_25;
      }
      unint64_t v20 = *(void *)(v39 + 8 * v21);
      if (!v20)
      {
        int64_t v21 = v15 + 3;
        if (v15 + 3 >= v40) {
          goto LABEL_25;
        }
        unint64_t v20 = *(void *)(v39 + 8 * v21);
        if (!v20)
        {
          int64_t v21 = v15 + 4;
          if (v15 + 4 >= v40) {
            goto LABEL_25;
          }
          unint64_t v20 = *(void *)(v39 + 8 * v21);
          if (!v20) {
            break;
          }
        }
      }
    }
LABEL_20:
    uint64_t v46 = (v20 - 1) & v20;
    int64_t v47 = v21;
  }
  uint64_t v22 = v15 + 5;
  if (v15 + 5 >= v40)
  {
LABEL_25:
    swift_release();
    return v48;
  }
  unint64_t v20 = *(void *)(v39 + 8 * v22);
  if (v20)
  {
    int64_t v21 = v15 + 5;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v21 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v21 >= v40) {
      goto LABEL_25;
    }
    unint64_t v20 = *(void *)(v39 + 8 * v21);
    ++v22;
    if (v20) {
      goto LABEL_20;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_100BD5E78()
{
  return sub_100703F5C();
}

uint64_t sub_100BD5E8C()
{
  return sub_100703F5C();
}

uint64_t sub_100BD5EA0()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  sub_1006E315C(v1);
  return v1;
}

uint64_t sub_100BD5F6C()
{
  return sub_100703F5C();
}

uint64_t sub_100BD5F80()
{
  return sub_100703F5C();
}

uint64_t sub_100BD5F94(void *a1)
{
  uint64_t v33 = a1;
  uint64_t v2 = sub_1005057FC(&qword_101672BB0);
  __chkstk_darwin(v2 - 8, v3);
  uint64_t v34 = (char *)&v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = sub_1005057FC((uint64_t *)&unk_101696ED8);
  uint64_t v5 = *(void *)(v32 - 8);
  __chkstk_darwin(v32, v6);
  uint64_t v8 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1005057FC(&qword_101696ED0);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9, v11);
  unint64_t v13 = (char *)&v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1005057FC(&qword_101696EC8);
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14, v16);
  uint64_t v18 = (char *)&v32 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = v1 + OBJC_IVAR____TtC8Freeform17CRLStencilLibrary__itemViewModels;
  objc_super v35 = _swiftEmptyArrayStorage;
  sub_1005057FC(&qword_101684A90);
  Published.init(initialValue:)();
  (*(void (**)(uint64_t, char *, uint64_t))(v15 + 32))(v19, v18, v14);
  *(unsigned char *)(v1 + OBJC_IVAR____TtC8Freeform17CRLStencilLibrary_itemViewModelsSortStyle) = 0;
  *(unsigned char *)(v1 + OBJC_IVAR____TtC8Freeform17CRLStencilLibrary_itemViewModelsSortAscending) = 1;
  uint64_t v20 = v1 + OBJC_IVAR____TtC8Freeform17CRLStencilLibrary__categories;
  objc_super v35 = _swiftEmptyArrayStorage;
  sub_1005057FC(&qword_101696C18);
  Published.init(initialValue:)();
  (*(void (**)(uint64_t, char *, uint64_t))(v10 + 32))(v20, v13, v9);
  uint64_t v21 = v1 + OBJC_IVAR____TtC8Freeform17CRLStencilLibrary__topLevelFilterViewModels;
  objc_super v35 = _swiftEmptyArrayStorage;
  sub_1005057FC(&qword_101684B18);
  Published.init(initialValue:)();
  uint64_t v22 = *(void (**)(uint64_t, char *, uint64_t))(v5 + 32);
  uint64_t v23 = v32;
  v22(v21, v8, v32);
  uint64_t v24 = v1 + OBJC_IVAR____TtC8Freeform17CRLStencilLibrary__categoryFilterViewModels;
  objc_super v35 = _swiftEmptyArrayStorage;
  Published.init(initialValue:)();
  v22(v24, v8, v23);
  uint64_t v25 = v33;
  *(void *)(v1 + OBJC_IVAR____TtC8Freeform17CRLStencilLibrary_realDataStore) = v33;
  type metadata accessor for CRLStencilLibrary.FakeDataStore();
  uint64_t v26 = swift_allocObject();
  *(void *)(v26 + 16) = &_swiftEmptySetSingleton;
  *(void *)(v26 + 24) = v25;
  *(void *)(v1 + OBJC_IVAR____TtC8Freeform17CRLStencilLibrary_fakeDataStore) = v26;
  id v27 = v25;
  sub_100BD7220();
  uint64_t v28 = type metadata accessor for TaskPriority();
  uint64_t v29 = (uint64_t)v34;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v34, 1, 1, v28);
  uint64_t v30 = (void *)swift_allocObject();
  v30[2] = 0;
  void v30[3] = 0;
  v30[4] = v1;
  swift_retain();
  sub_1006D9104(v29, (uint64_t)&unk_101696EF0, (uint64_t)v30);
  swift_release();

  return v1;
}

uint64_t sub_100BD63CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 16) = a4;
  return _swift_task_switch(sub_100BD63EC, 0, 0);
}

uint64_t sub_100BD63EC()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 24) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_100BD6490;
  uint64_t v2 = *(void *)(v0 + 16);
  return sub_100BD6584(v2);
}

uint64_t sub_100BD6490()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_100BD6584(uint64_t a1)
{
  v2[5] = a1;
  v2[6] = v1;
  uint64_t v3 = type metadata accessor for URL.DirectoryHint();
  v2[7] = v3;
  v2[8] = *(void *)(v3 - 8);
  v2[9] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for URL();
  v2[10] = v4;
  v2[11] = *(void *)(v4 - 8);
  v2[12] = swift_task_alloc();
  v2[13] = swift_task_alloc();
  return _swift_task_switch(sub_100BD66DC, 0, 0);
}

uint64_t sub_100BD66DC()
{
  uint64_t v1 = v0[12];
  uint64_t v2 = v0[10];
  uint64_t v3 = v0[11];
  uint64_t v5 = v0[8];
  uint64_t v4 = v0[9];
  uint64_t v6 = v0[7];
  id v7 = [self mainBundle];
  id v8 = [v7 bundleURL];

  static URL._unconditionallyBridgeFromObjectiveC(_:)();
  v0[2] = 0x736C69636E657453;
  v0[3] = 0xE800000000000000;
  (*(void (**)(uint64_t, void, uint64_t))(v5 + 104))(v4, enum case for URL.DirectoryHint.inferFromPath(_:), v6);
  sub_10052E310();
  URL.appending<A>(path:directoryHint:)();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  v0[14] = v9;
  v0[15] = (v3 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v9(v1, v2);
  id v10 = [self defaultManager];
  URL._bridgeToObjectiveC()(v11);
  unint64_t v13 = v12;
  v0[4] = 0;
  id v14 = [v10 contentsOfDirectoryAtURL:v12 includingPropertiesForKeys:0 options:0 error:v0 + 4];

  uint64_t v15 = (void *)v0[4];
  if (v14)
  {
    uint64_t v16 = v0[5];
    uint64_t v17 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
    v0[16] = v17;
    id v18 = v15;

    uint64_t v19 = swift_allocObject();
    v0[17] = v19;
    swift_weakInit();
    uint64_t v20 = (void *)swift_task_alloc();
    v0[18] = v20;
    v20[2] = v19;
    v20[3] = v17;
    v20[4] = v16;
    uint64_t v21 = (void *)swift_task_alloc();
    v0[19] = v21;
    *uint64_t v21 = v0;
    v21[1] = sub_100BD6A80;
    return withThrowingTaskGroup<A, B>(of:returning:isolation:body:)(v21, (char *)&type metadata for () + 8, (char *)&type metadata for () + 8, 0, 0, &unk_101696F10, v20, (char *)&type metadata for () + 8);
  }
  else
  {
    uint64_t v22 = v0[13];
    uint64_t v23 = v0[10];
    id v24 = v15;
    _convertNSErrorToError(_:)();

    swift_willThrow();
    v9(v22, v23);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v25 = (uint64_t (*)(void))v0[1];
    return v25();
  }
}

uint64_t sub_100BD6A80()
{
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_release();
  swift_task_dealloc();
  return _swift_task_switch(sub_100BD6C04, 0, 0);
}

uint64_t sub_100BD6C04()
{
  (*(void (**)(void, void))(v0 + 112))(*(void *)(v0 + 104), *(void *)(v0 + 80));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100BD6CC0(uint64_t a1, uint64_t a2)
{
  v3[12] = a2;
  v3[13] = v2;
  v3[11] = a1;
  uint64_t v4 = type metadata accessor for Date();
  v3[14] = v4;
  v3[15] = *(void *)(v4 - 8);
  v3[16] = swift_task_alloc();
  v3[17] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for UUID();
  v3[18] = v5;
  v3[19] = *(void *)(v5 - 8);
  v3[20] = swift_task_alloc();
  v3[21] = _s13ItemViewModelVMa();
  v3[22] = swift_task_alloc();
  v3[23] = swift_task_alloc();
  v3[24] = swift_task_alloc();
  return _swift_task_switch(sub_100BD6E3C, 0, 0);
}

id sub_100BD6E3C()
{
  uint64_t v31 = v0;
  uint64_t v1 = *(void *)(v0 + 184);
  uint64_t v2 = *(int **)(v0 + 168);
  uint64_t v3 = *(void *)(v0 + 152);
  uint64_t v26 = *(void *)(v0 + 160);
  uint64_t v28 = *(void *)(v0 + 144);
  uint64_t v4 = *(uint64_t **)(v0 + 96);
  UUID.init()();
  *(_OWORD *)(v0 + 40) = *(_OWORD *)(v4 + 1);
  sub_10051B3EC((uint64_t)(v4 + 3), v0 + 56, &qword_101674580);
  *(void *)(v0 + 72) = v4[5];
  *(void *)(v0 + 80) = v4[6];
  uint64_t v5 = *v4;
  id v6 = objc_allocWithZone((Class)UIImage);
  sub_1007D42E0(v0 + 40);
  sub_1007BA66C(v0 + 72);
  sub_1007BA66C(v0 + 80);
  sub_1007D42E0(v0 + 56);
  id v7 = [v6 initWithCGImage:v5];
  char v24 = *((unsigned char *)v4 + 56);
  char v25 = *((unsigned char *)v4 + 57);
  static Date.now.getter();
  static Date.distantPast.getter();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v1, v26, v28);
  *(_OWORD *)(v1 + v2[8]) = *(_OWORD *)(v0 + 40);
  sub_10051B3EC(v0 + 56, v1 + v2[9], &qword_101674580);
  *(void *)(v1 + v2[10]) = *(void *)(v0 + 72);
  *(void *)(v1 + v2[11]) = *(void *)(v0 + 80);
  uint64_t v27 = v7;
  id result = [v7 CGImage];
  if (result)
  {
    id v9 = result;
    uint64_t v10 = *(void *)(v0 + 184);
    uint64_t v11 = *(int **)(v0 + 168);
    uint64_t v21 = *(void *)(v0 + 192);
    uint64_t v22 = *(void *)(v0 + 176);
    uint64_t v12 = *(void *)(v0 + 152);
    uint64_t v13 = *(void *)(v0 + 160);
    uint64_t v15 = *(void *)(v0 + 136);
    uint64_t v14 = *(void *)(v0 + 144);
    uint64_t v16 = *(void *)(v0 + 120);
    uint64_t v29 = *(void *)(v0 + 128);
    uint64_t v17 = *(void *)(v0 + 112);
    uint64_t v23 = *(void *)(v0 + 88);

    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v13, v14);
    *(void *)(v10 + v11[7]) = v9;
    *(unsigned char *)(v10 + v11[12]) = v24;
    *(unsigned char *)(v10 + v11[13]) = v25;
    id v18 = *(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 32);
    v18(v10 + v11[5], v15, v17);
    v18(v10 + v11[6], v29, v17);
    sub_100BDBC84(v10, v21, (uint64_t (*)(void))_s13ItemViewModelVMa);
    sub_100BD959C(v21, v22, (uint64_t (*)(void))_s13ItemViewModelVMa);
    _s8ItemDataCMa();
    uint64_t v19 = swift_allocObject();
    *(void *)(v19 + 16) = v23;
    sub_100BDBC84(v22, v19 + OBJC_IVAR____TtCC8Freeform17CRLStencilLibrary8ItemData_metadata, (uint64_t (*)(void))_s13ItemViewModelVMa);
    swift_beginAccess();
    swift_bridgeObjectRetain();
    swift_retain();
    sub_100CBB3AC(&v30, v19);
    swift_endAccess();
    swift_release();
    sub_100BD7220();
    swift_release();
    sub_100BD9788(v21, (uint64_t (*)(void))_s13ItemViewModelVMa);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v20 = *(uint64_t (**)(void))(v0 + 8);
    return (id)v20();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100BD71E0(void *a1, uint64_t a2)
{
  return sub_100BD2A3C(*a1 + OBJC_IVAR____TtCC8Freeform17CRLStencilLibrary8ItemData_metadata, a2) & 1;
}

uint64_t sub_100BD7220()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1005057FC(&qword_101684AD8);
  __chkstk_darwin(v2 - 8, v3);
  uint64_t v89 = (uint64_t)v73 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v88 = _s15FilterViewModelVMa();
  uint64_t v75 = *(void *)(v88 - 8);
  __chkstk_darwin(v88, v5);
  uint64_t v87 = (uint64_t)v73 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7, v8);
  char v86 = (char *)v73 - v9;
  __chkstk_darwin(v10, v11);
  uint64_t v74 = (uint64_t)v73 - v12;
  uint64_t v85 = _s17CategoryViewModelVMa();
  uint64_t v91 = *(void *)(v85 - 8);
  uint64_t v13 = *(void *)(v91 + 64);
  __chkstk_darwin(v85, v14);
  char v84 = (char *)v73 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15, v16);
  uint64_t v83 = (uint64_t)v73 - v17;
  __chkstk_darwin(v18, v19);
  CGFloat v82 = (char *)v73 - v20;
  uint64_t v21 = _s13ItemViewModelVMa();
  uint64_t v81 = *(void *)(v21 - 8);
  __chkstk_darwin(v21, v22);
  char v24 = (char *)v73 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t v25 = swift_bridgeObjectRetain();
  uint64_t v26 = sub_100BD55B0(v25);
  swift_bridgeObjectRelease();
  char v27 = *(unsigned char *)(v1 + OBJC_IVAR____TtC8Freeform17CRLStencilLibrary_itemViewModelsSortAscending);
  int v28 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC8Freeform17CRLStencilLibrary_itemViewModelsSortStyle);
  v92[0] = (unint64_t)v26;
  swift_bridgeObjectRetain();
  sub_100BD94CC(v92, v28);
  unint64_t v29 = v92[0];
  int v90 = 0;
  if ((v27 & 1) == 0)
  {
    sub_100E1787C(v92[0]);
    unint64_t v29 = v30;
  }
  swift_bridgeObjectRelease();
  swift_getKeyPath();
  swift_getKeyPath();
  v92[0] = v29;
  swift_retain();
  static Published.subscript.setter();
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  uint64_t v31 = *(void *)(v92[0] + 16);
  if (v31)
  {
    uint64_t v80 = v13;
    uint64_t v32 = v92[0] + ((*(unsigned __int8 *)(v81 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v81 + 80));
    uint64_t v33 = *(void *)(v81 + 72);
    swift_bridgeObjectRetain();
    uint64_t v34 = &_swiftEmptySetSingleton;
    do
    {
      sub_100BD959C(v32, (uint64_t)v24, (uint64_t (*)(void))_s13ItemViewModelVMa);
      swift_bridgeObjectRetain();
      uint64_t v35 = swift_bridgeObjectRetain();
      sub_100ED9688(v35, (uint64_t)v34);
      uint64_t v34 = v36;
      sub_100BD9788((uint64_t)v24, (uint64_t (*)(void))_s13ItemViewModelVMa);
      swift_bridgeObjectRelease();
      v32 += v33;
      --v31;
    }
    while (v31);
    swift_bridgeObjectRelease_n();
    uint64_t v37 = v91;
    uint64_t v13 = v80;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v37 = v91;
  }
  uint64_t v38 = swift_bridgeObjectRetain();
  uint64_t v39 = sub_1006BA2A8(v38);
  swift_bridgeObjectRelease();
  v92[0] = (unint64_t)v39;
  int64_t v40 = v90;
  sub_100BD9424(v92);
  if (v40)
  {
    uint64_t result = swift_release();
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRelease();
    unint64_t v41 = v92[0];
    swift_getKeyPath();
    swift_getKeyPath();
    v92[0] = v41;
    swift_retain();
    static Published.subscript.setter();
    if (qword_10166F6A0 != -1) {
      swift_once();
    }
    unint64_t v42 = qword_10171B398;
    swift_getKeyPath();
    swift_getKeyPath();
    v92[0] = v42;
    swift_retain();
    swift_bridgeObjectRetain();
    static Published.subscript.setter();
    swift_getKeyPath();
    swift_getKeyPath();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    uint64_t v43 = *(void *)(v92[0] + 16);
    if (v43)
    {
      v73[1] = v1;
      uint64_t v44 = *(unsigned __int8 *)(v37 + 80);
      uint64_t v45 = v92[0] + ((v44 + 32) & ~v44);
      uint64_t v46 = *(void *)(v37 + 72);
      uint64_t v80 = (v44 + 16) & ~v44;
      uint64_t v81 = v46;
      uint64_t v78 = v44 | 7;
      uint64_t v79 = v80 + v13;
      uint64_t v76 = (unsigned int (**)(uint64_t, uint64_t, int *))(v75 + 48);
      uint64_t v77 = (void (**)(uint64_t, void, uint64_t, int *))(v75 + 56);
      v73[0] = v92[0];
      swift_bridgeObjectRetain();
      int v90 = _swiftEmptyArrayStorage;
      uint64_t v47 = (uint64_t)v82;
      unint64_t v48 = (int *)v88;
      do
      {
        uint64_t v91 = v43;
        sub_100BD959C(v45, v47, (uint64_t (*)(void))_s17CategoryViewModelVMa);
        uint64_t v50 = v83;
        sub_100BD959C(v47, v83, (uint64_t (*)(void))_s17CategoryViewModelVMa);
        uint64_t v51 = type metadata accessor for UUID();
        uint64_t v52 = (uint64_t)v86;
        (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v51 - 8) + 16))(v86, v50, v51);
        uint64_t v54 = (uint64_t)v84;
        uint64_t v53 = v85;
        uint64_t v55 = (uint64_t *)(v50 + *(int *)(v85 + 20));
        uint64_t v56 = *v55;
        uint64_t v57 = v55[1];
        char v58 = (void *)(v52 + v48[5]);
        void *v58 = v56;
        v58[1] = v57;
        uint64_t v59 = (uint64_t *)(v50 + *(int *)(v53 + 28));
        uint64_t v60 = *v59;
        uint64_t v61 = v59[1];
        CGFloat v62 = (void *)(v52 + v48[6]);
        *CGFloat v62 = v60;
        v62[1] = v61;
        sub_100BDBC84(v50, v54, (uint64_t (*)(void))_s17CategoryViewModelVMa);
        uint64_t v63 = swift_allocObject();
        sub_100BDBC84(v54, v63 + v80, (uint64_t (*)(void))_s17CategoryViewModelVMa);
        char v64 = (BOOL (**)(uint64_t))(v52 + v48[7]);
        *char v64 = sub_100BD9718;
        v64[1] = (BOOL (*)(uint64_t))v63;
        uint64_t v65 = v89;
        sub_100BDBC84(v52, v89, (uint64_t (*)(void))_s15FilterViewModelVMa);
        (*v77)(v65, 0, 1, v48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_100BD9788(v47, (uint64_t (*)(void))_s17CategoryViewModelVMa);
        if ((*v76)(v65, 1, v48) == 1)
        {
          sub_100522F00(v65, &qword_101684AD8);
          uint64_t v49 = v91;
        }
        else
        {
          uint64_t v66 = v74;
          sub_100BDBC84(v65, v74, (uint64_t (*)(void))_s15FilterViewModelVMa);
          sub_100BDBC84(v66, v87, (uint64_t (*)(void))_s15FilterViewModelVMa);
          unint64_t v67 = (unint64_t)v90;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            unint64_t v67 = sub_100F63FCC(0, *(void *)(v67 + 16) + 1, 1, v67);
          }
          uint64_t v49 = v91;
          unint64_t v69 = *(void *)(v67 + 16);
          unint64_t v68 = *(void *)(v67 + 24);
          if (v69 >= v68 >> 1) {
            unint64_t v67 = sub_100F63FCC(v68 > 1, v69 + 1, 1, v67);
          }
          *(void *)(v67 + 16) = v69 + 1;
          unint64_t v70 = (*(unsigned __int8 *)(v75 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v75 + 80);
          int v90 = (double *)v67;
          sub_100BDBC84(v87, v67 + v70 + *(void *)(v75 + 72) * v69, (uint64_t (*)(void))_s15FilterViewModelVMa);
        }
        v45 += v81;
        uint64_t v43 = v49 - 1;
      }
      while (v43);
      swift_bridgeObjectRelease_n();
      uint64_t v71 = v90;
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v71 = _swiftEmptyArrayStorage;
    }
    swift_getKeyPath();
    swift_getKeyPath();
    v92[0] = (unint64_t)v71;
    swift_retain();
    return static Published.subscript.setter();
  }
  return result;
}

uint64_t sub_100BD7B88()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC8Freeform17CRLStencilLibrary__itemViewModels;
  uint64_t v2 = sub_1005057FC(&qword_101696EC8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = v0 + OBJC_IVAR____TtC8Freeform17CRLStencilLibrary__categories;
  uint64_t v4 = sub_1005057FC(&qword_101696ED0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  uint64_t v5 = v0 + OBJC_IVAR____TtC8Freeform17CRLStencilLibrary__topLevelFilterViewModels;
  uint64_t v6 = sub_1005057FC((uint64_t *)&unk_101696ED8);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);
  v7(v5, v6);
  v7(v0 + OBJC_IVAR____TtC8Freeform17CRLStencilLibrary__categoryFilterViewModels, v6);
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_100BD7D0C()
{
  return type metadata accessor for CRLStencilLibrary();
}

uint64_t type metadata accessor for CRLStencilLibrary()
{
  uint64_t result = qword_101696BE8;
  if (!qword_101696BE8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_100BD7D60()
{
  sub_10070A988(319, (unint64_t *)&unk_101696C00, &qword_101684A90);
  if (v0 <= 0x3F)
  {
    sub_10070A988(319, &qword_101696C10, &qword_101696C18);
    if (v1 <= 0x3F)
    {
      sub_10070A988(319, qword_101696C20, &qword_101684B18);
      if (v2 <= 0x3F) {
        swift_updateClassMetadata2();
      }
    }
  }
}

uint64_t sub_100BD7EC4@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for CRLStencilLibrary();
  uint64_t result = ObservableObject<>.objectWillChange.getter();
  *a1 = result;
  return result;
}

uint64_t sub_100BD7F04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[14] = a4;
  v5[15] = a5;
  v5[12] = a2;
  v5[13] = a3;
  sub_1005057FC(&qword_101672BB0);
  v5[16] = swift_task_alloc();
  v5[17] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for URL();
  v5[18] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  v5[19] = v7;
  v5[20] = *(void *)(v7 + 64);
  v5[21] = swift_task_alloc();
  v5[22] = swift_task_alloc();
  sub_1005057FC(&qword_101672E90);
  v5[23] = swift_task_alloc();
  return _swift_task_switch(sub_100BD8050, 0, 0);
}

uint64_t sub_100BD8050()
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = *(void *)(v0 + 112);
    uint64_t v2 = *(void *)(v1 + 16);
    if (v2)
    {
      uint64_t v3 = *(void *)(v0 + 152);
      uint64_t v4 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
      v3 += 16;
      uint64_t v46 = v4;
      uint64_t v5 = *(unsigned __int8 *)(v3 + 64);
      uint64_t v6 = v1 + ((v5 + 32) & ~v5);
      uint64_t v38 = *(void *)(v3 + 56);
      int64_t v40 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 32);
      uint64_t v7 = (void (**)(char *, uint64_t, uint64_t))(v3 + 16);
      uint64_t v37 = (void (**)(void, void))(v3 - 8);
      uint64_t v34 = (v5 + 40) & ~v5;
      unint64_t v33 = (*(void *)(v0 + 160) + v34 + 7) & 0xFFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain();
      unint64_t v41 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v3 + 40);
      uint64_t v35 = (void (**)(char *, uint64_t, uint64_t))(v3 + 16);
      while (1)
      {
        uint64_t v9 = *(void *)(v0 + 184);
        uint64_t v10 = *(void *)(v0 + 144);
        v46(v9, v6, v10);
        uint64_t v39 = *v41;
        (*v41)(v9, 0, 1, v10);
        if ((*v40)(v9, 1, v10) == 1) {
          goto LABEL_25;
        }
        uint64_t v11 = *v7;
        (*v7)(*(char **)(v0 + 176), *(void *)(v0 + 184), *(void *)(v0 + 144));
        if (URL.pathExtension.getter() == 0x6D726F6665657266 && v12 == 0xE800000000000000) {
          break;
        }
        char v14 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        if (v14) {
          goto LABEL_14;
        }
LABEL_5:
        (*v37)(*(void *)(v0 + 176), *(void *)(v0 + 144));
        v6 += v38;
        if (!--v2)
        {
          v39(*(void *)(v0 + 184), 1, 1, *(void *)(v0 + 144));
          goto LABEL_25;
        }
      }
      swift_bridgeObjectRelease();
LABEL_14:
      uint64_t v42 = v6;
      uint64_t v43 = v2;
      uint64_t v16 = *(void *)(v0 + 168);
      uint64_t v15 = *(void *)(v0 + 176);
      uint64_t v18 = *(void *)(v0 + 136);
      uint64_t v17 = *(void *)(v0 + 144);
      uint64_t v19 = *(void *)(v0 + 128);
      uint64_t v45 = *(void *)(v0 + 120);
      uint64_t v20 = type metadata accessor for TaskPriority();
      uint64_t v44 = v11;
      uint64_t v21 = *(void *)(v20 - 8);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v21 + 56))(v18, 1, 1, v20);
      v46(v16, v15, v17);
      uint64_t v22 = (char *)swift_allocObject();
      *((void *)v22 + 2) = 0;
      *((void *)v22 + 3) = 0;
      *((void *)v22 + 4) = Strong;
      uint64_t v23 = v17;
      uint64_t v7 = v35;
      v44(&v22[v34], v16, v23);
      *(void *)&v22[v33] = v45;
      sub_100538BF8(v18, v19);
      LODWORD(v19) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20);
      swift_retain();
      swift_retain();
      uint64_t v24 = *(void *)(v0 + 128);
      if (v19 == 1)
      {
        sub_100522F00(*(void *)(v0 + 128), &qword_101672BB0);
      }
      else
      {
        TaskPriority.rawValue.getter();
        (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v24, v20);
      }
      uint64_t v6 = v42;
      if (*((void *)v22 + 2))
      {
        swift_getObjectType();
        swift_unknownObjectRetain();
        uint64_t v25 = dispatch thunk of Actor.unownedExecutor.getter();
        uint64_t v27 = v26;
        swift_unknownObjectRelease();
      }
      else
      {
        uint64_t v25 = 0;
        uint64_t v27 = 0;
      }
      uint64_t v2 = v43;
      uint64_t v28 = **(void **)(v0 + 96);
      uint64_t v29 = v27 | v25;
      if (v27 | v25)
      {
        uint64_t v29 = v0 + 16;
        *(void *)(v0 + 16) = 0;
        *(void *)(v0 + 24) = 0;
        *(void *)(v0 + 32) = v25;
        *(void *)(v0 + 40) = v27;
      }
      uint64_t v8 = *(void *)(v0 + 136);
      *(void *)(v0 + 72) = 1;
      *(void *)(v0 + 80) = v29;
      *(void *)(v0 + 88) = v28;
      swift_task_create();
      swift_release();
      sub_100522F00(v8, &qword_101672BB0);
      goto LABEL_5;
    }
    unint64_t v30 = *(void (**)(void, uint64_t, uint64_t, void))(*(void *)(v0 + 152) + 56);
    swift_bridgeObjectRetain();
    v30(*(void *)(v0 + 184), 1, 1, *(void *)(v0 + 144));
LABEL_25:
    swift_bridgeObjectRelease();
    swift_release();
  }
  else
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"loadPrefabStencilsFromDisk(into:)", 33, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLStencilLibrary.swift", 89, 2, 115, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"loadPrefabStencilsFromDisk(into:)", 33, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLStencilLibrary.swift", 89, 2, 115);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v31 = *(uint64_t (**)(void))(v0 + 8);
  return v31();
}

uint64_t sub_100BD8604(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[14] = a5;
  v6[15] = a6;
  v6[13] = a4;
  uint64_t v7 = type metadata accessor for URL();
  v6[16] = v7;
  v6[17] = *(void *)(v7 - 8);
  v6[18] = swift_task_alloc();
  v6[19] = swift_task_alloc();
  return _swift_task_switch(sub_100BD86D8, 0, 0);
}

uint64_t sub_100BD86D8()
{
  uint64_t v1 = *(void *)(v0 + 152);
  uint64_t v2 = *(void *)(v0 + 128);
  uint64_t v3 = *(void *)(v0 + 136);
  uint64_t v4 = *(void *)(v0 + 112);
  uint64_t v5 = *(char **)(*(void *)(v0 + 104) + 24);
  uint64_t v6 = *(void **)&v5[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore_crdtContext];
  *(void *)(v0 + 160) = v6;
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  v7(v1, v4, v2);
  uint64_t v8 = qword_1016700F0;
  id v19 = v6;
  uint64_t v18 = v5;
  if (v8 != -1) {
    swift_once();
  }
  uint64_t v9 = *(void *)(v0 + 152);
  uint64_t v10 = *(void *)(v0 + 128);
  uint64_t v11 = *(void *)(v0 + 136);
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  BOOL v12 = (*(unsigned char *)(v0 + 74) & 1) == 0;
  Assistant = (objc_class *)type metadata accessor for CRLBoardFileReadAssistant();
  char v14 = (char *)objc_allocWithZone(Assistant);
  *(void *)&v14[OBJC_IVAR____TtC8Freeform25CRLBoardFileReadAssistant_readAssistant] = 0;
  v7((uint64_t)&v14[OBJC_IVAR____TtC8Freeform25CRLBoardFileReadAssistant_url], v9, v10);
  *(void *)&v14[OBJC_IVAR____TtC8Freeform25CRLBoardFileReadAssistant_store] = v18;
  *(void *)&v14[OBJC_IVAR____TtC8Freeform25CRLBoardFileReadAssistant_context] = v19;
  *(void *)&v14[OBJC_IVAR____TtC8Freeform25CRLBoardFileReadAssistant_options] = v12;
  *(void *)(v0 + 80) = v14;
  *(void *)(v0 + 88) = Assistant;
  [v0 initWith];
  uint64_t v15 = *(void (**)(uint64_t, uint64_t))(v11 + 8);
  *(void *)(v0 + 176) = v15;
  *(void *)(v0 + 184) = (v11 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v15(v9, v10);
  uint64_t v16 = (void *)swift_task_alloc();
  *(void *)(v0 + 192) = v16;
  *uint64_t v16 = v0;
  v16[1] = sub_100BD8910;
  return sub_100654444();
}

uint64_t sub_100BD8910(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 200) = a1;
  *(void *)(v3 + 208) = v1;
  swift_task_dealloc();
  if (v1) {
    uint64_t v4 = sub_100BD91CC;
  }
  else {
    uint64_t v4 = sub_100BD8A24;
  }
  return _swift_task_switch(v4, 0, 0);
}

uint64_t sub_100BD8A24()
{
  uint64_t v1 = swift_bridgeObjectRetain();
  uint64_t v2 = sub_100BD5ACC(v1);
  v0[27] = v2;
  swift_bridgeObjectRelease();
  if (qword_10166ED90 != -1) {
    swift_once();
  }
  uint64_t v3 = qword_10171A168;
  id v4 = [objc_allocWithZone((Class)CRLCanvasImager) initWithBoard:v0[25]];
  v0[28] = v4;
  if (v2 < 0 || (v2 & 0x4000000000000000) != 0)
  {
    unint64_t v10 = swift_bridgeObjectRetain();
    uint64_t v5 = (uint64_t)sub_1006B9DEC(v10);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v5 = v2 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRetain();
  if (v5 < 0 || (v5 & 0x4000000000000000) != 0)
  {
    sub_1005057FC(&qword_101673060);
    _bridgeCocoaArray<A>(_:)();
    swift_release();
  }
  else
  {
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
  }
  swift_release();
  sub_1005057FC(&qword_101673060);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v4 setInfos:isa];

  [v4 setBackgroundColor:v3];
  if (qword_10166F670 != -1) {
    swift_once();
  }
  [v4 setScaledImageSize:xmmword_10171B280];
  uint64_t v7 = swift_task_alloc();
  v0[29] = v7;
  *(void *)(v7 + 16) = v4;
  *(void *)(v7 + 24) = 0;
  uint64_t v8 = (void *)swift_task_alloc();
  v0[30] = v8;
  uint64_t v9 = sub_1005057FC(&qword_101673D88);
  *uint64_t v8 = v0;
  v8[1] = sub_100BD8CE0;
  return withCheckedContinuation<A>(isolation:function:_:)(v0 + 12, 0, 0, 0xD000000000000019, 0x800000010123B760, sub_10056B314, v7, v9);
}

uint64_t sub_100BD8CE0()
{
  swift_task_dealloc();
  swift_task_dealloc();
  return _swift_task_switch(sub_100BD8DF8, 0, 0);
}

uint64_t sub_100BD8DF8()
{
  uint64_t v1 = *(void **)(v0 + 96);
  *(void *)(v0 + 248) = v1;
  if (v1)
  {
    unint64_t v2 = *(void *)(v0 + 216);
    uint64_t v3 = *(void (**)(uint64_t, uint64_t))(v0 + 176);
    uint64_t v4 = *(void *)(v0 + 144);
    uint64_t v5 = *(void *)(v0 + 128);
    URL.deletingPathExtension()();
    uint64_t v6 = URL.lastPathComponent.getter();
    uint64_t v8 = v7;
    *(void *)(v0 + 256) = v7;
    v3(v4, v5);
    *(void *)(v0 + 16) = v1;
    *(void *)(v0 + 24) = v6;
    *(void *)(v0 + 32) = v8;
    *(void *)(v0 + 40) = 0;
    *(void *)(v0 + 48) = 0;
    *(void *)(v0 + 56) = &_swiftEmptySetSingleton;
    *(void *)(v0 + 64) = &_swiftEmptySetSingleton;
    *(_WORD *)(v0 + 72) = 0;
    id v9 = v1;
    uint64_t v10 = sub_100CDCE0C(v2);
    *(void *)(v0 + 264) = v10;
    swift_bridgeObjectRelease();
    uint64_t v11 = (void *)swift_task_alloc();
    *(void *)(v0 + 272) = v11;
    *uint64_t v11 = v0;
    v11[1] = sub_100BD8FCC;
    return sub_100BD6CC0(v10, v0 + 16);
  }
  else
  {
    uint64_t v13 = *(void **)(v0 + 224);
    char v14 = *(void **)(v0 + 200);
    uint64_t v16 = *(void **)(v0 + 160);
    uint64_t v15 = *(void **)(v0 + 168);
    swift_bridgeObjectRelease();
    sub_100BDC14C();
    swift_allocError();
    swift_willThrow();

    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v17 = *(uint64_t (**)(void))(v0 + 8);
    return v17();
  }
}

uint64_t sub_100BD8FCC()
{
  *(void *)(*(void *)v1 + 280) = v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (v0) {
    unint64_t v2 = sub_100BD9244;
  }
  else {
    unint64_t v2 = sub_100BD9100;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100BD9100()
{
  uint64_t v1 = (void *)v0[31];
  unint64_t v2 = (void *)v0[28];
  uint64_t v3 = (void *)v0[25];
  uint64_t v5 = (void *)v0[20];
  uint64_t v4 = (void *)v0[21];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();

  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v6 = (uint64_t (*)(void))v0[1];
  return v6();
}

uint64_t sub_100BD91CC()
{
  uint64_t v1 = *(void **)(v0 + 160);

  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_100BD9244()
{
  uint64_t v1 = (void *)v0[31];
  unint64_t v2 = (void *)v0[28];
  uint64_t v3 = (void *)v0[25];
  uint64_t v5 = (void *)v0[20];
  uint64_t v4 = (void *)v0[21];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();

  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v6 = (uint64_t (*)(void))v0[1];
  return v6();
}

uint64_t type metadata accessor for CRLStencilLibrary.FakeDataStore()
{
  return self;
}

uint64_t sub_100BD9328@<X0>(void *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_100BD93A8()
{
  return static Published.subscript.setter();
}

void sub_100BD9424(unint64_t *a1)
{
  uint64_t v2 = *(void *)(_s17CategoryViewModelVMa() - 8);
  unint64_t v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    unint64_t v3 = sub_100F6A068(v3);
  }
  uint64_t v4 = *(void *)(v3 + 16);
  v5[0] = v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v5[1] = v4;
  sub_100BD97F0(v5);
  *a1 = v3;
}

void sub_100BD94CC(unint64_t *a1, int a2)
{
  uint64_t v4 = *(void *)(_s13ItemViewModelVMa() - 8);
  unint64_t v5 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    unint64_t v5 = sub_100F6A0AC(v5);
  }
  uint64_t v6 = *(void *)(v5 + 16);
  v7[0] = v5 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  v7[1] = v6;
  sub_100BDA268(v7, a2);
  *a1 = v5;
}

uint64_t sub_100BD959C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_100BD9604()
{
  uint64_t v1 = *(void *)(_s17CategoryViewModelVMa() - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = v3 + *(void *)(v1 + 64);
  uint64_t v5 = v2 | 7;
  uint64_t v6 = v0 + v3;
  uint64_t v7 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, v4, v5);
}

BOOL sub_100BD9718(uint64_t a1)
{
  uint64_t v3 = *(void *)(_s17CategoryViewModelVMa() - 8);
  uint64_t v4 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  return sub_1009EF7D8(a1, v4);
}

uint64_t sub_100BD9788(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void sub_100BD97F0(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v137 = _s17CategoryViewModelVMa();
  uint64_t v4 = *(void *)(v137 - 8);
  __chkstk_darwin(v137, v5);
  uint64_t v127 = (uint64_t)&v122 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7, v8);
  uint64_t v138 = (uint64_t)&v122 - v9;
  __chkstk_darwin(v10, v11);
  uint64_t v135 = (uint64_t)&v122 - v12;
  __chkstk_darwin(v13, v14);
  uint64_t v134 = (uint64_t)&v122 - v15;
  Swift::Int v16 = a1[1];
  Swift::Int v17 = _minimumMergeRunLength(_:)(v16);
  if (v17 >= v16)
  {
    if (v16 < 0) {
      goto LABEL_138;
    }
    if (v16) {
      sub_100BDACF0(0, v16, 1, a1);
    }
    return;
  }
  if (v16 >= 0) {
    uint64_t v18 = v16;
  }
  else {
    uint64_t v18 = v16 + 1;
  }
  if (v16 < -1) {
    goto LABEL_146;
  }
  Swift::Int v123 = v17;
  uint64_t v131 = v4;
  if (v16 < 2)
  {
    uint64_t v22 = _swiftEmptyArrayStorage;
    unint64_t v129 = (unint64_t)_swiftEmptyArrayStorage
         + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    double v122 = _swiftEmptyArrayStorage;
    if (v16 != 1)
    {
      unint64_t v24 = *(void *)&_swiftEmptyArrayStorage[2];
LABEL_104:
      CGFloat v115 = v22;
      if (v24 >= 2)
      {
        uint64_t v116 = *a1;
        do
        {
          unint64_t v117 = v24 - 2;
          if (v24 < 2) {
            goto LABEL_133;
          }
          if (!v116) {
            goto LABEL_145;
          }
          double v118 = v115[2 * v117 + 4];
          double v119 = v115[2 * v24 + 3];
          sub_100BDB254(v116 + *(void *)(v131 + 72) * *(void *)&v118, v116 + *(void *)(v131 + 72) * *(void *)&v115[2 * v24 + 2], v116 + *(void *)(v131 + 72) * *(void *)&v119, v129);
          if (v2) {
            break;
          }
          if (*(uint64_t *)&v119 < *(uint64_t *)&v118) {
            goto LABEL_134;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            CGFloat v115 = sub_100F69F28((uint64_t)v115);
          }
          if (v117 >= *((void *)v115 + 2)) {
            goto LABEL_135;
          }
          double v120 = &v115[2 * v117 + 4];
          *double v120 = v118;
          v120[1] = v119;
          unint64_t v121 = *((void *)v115 + 2);
          if (v24 > v121) {
            goto LABEL_136;
          }
          memmove(&v115[2 * v24 + 2], &v115[2 * v24 + 4], 16 * (v121 - v24));
          *((void *)v115 + 2) = v121 - 1;
          unint64_t v24 = v121 - 1;
        }
        while (v121 > 2);
      }
LABEL_115:
      swift_bridgeObjectRelease();
      v122[2] = 0.0;
      swift_bridgeObjectRelease();
      return;
    }
  }
  else
  {
    uint64_t v19 = v18 >> 1;
    uint64_t v20 = static Array._allocateBufferUninitialized(minimumCapacity:)();
    *(void *)(v20 + 16) = v19;
    uint64_t v21 = *(unsigned __int8 *)(v4 + 80);
    double v122 = (double *)v20;
    unint64_t v129 = v20 + ((v21 + 32) & ~v21);
  }
  unint64_t v23 = 0;
  uint64_t v22 = _swiftEmptyArrayStorage;
  double v130 = a1;
  while (1)
  {
    Swift::Int v25 = v23;
    unint64_t v26 = v23 + 1;
    Swift::Int v128 = v23;
    if ((uint64_t)(v23 + 1) >= v16)
    {
      Swift::Int v32 = v23 + 1;
    }
    else
    {
      uint64_t v27 = *a1;
      unint64_t v140 = *(void *)(v131 + 72);
      uint64_t v28 = v134;
      sub_100BD959C(v27 + v140 * v26, v134, (uint64_t (*)(void))_s17CategoryViewModelVMa);
      Swift::Int v139 = v16;
      uint64_t v29 = v135;
      sub_100BD959C(v27 + v140 * v25, v135, (uint64_t (*)(void))_s17CategoryViewModelVMa);
      uint64_t v30 = *(int *)(v137 + 32);
      unint64_t v136 = *(void *)(v28 + v30);
      unint64_t v133 = *(void *)(v29 + v30);
      uint64_t v31 = v29;
      Swift::Int v16 = v139;
      sub_100BD9788(v31, (uint64_t (*)(void))_s17CategoryViewModelVMa);
      sub_100BD9788(v28, (uint64_t (*)(void))_s17CategoryViewModelVMa);
      Swift::Int v32 = v25 + 2;
      uint64_t v132 = v27;
      if (v25 + 2 < v16)
      {
        double v124 = v22;
        uint64_t v125 = v2;
        uint64_t v33 = v140 * v26;
        uint64_t v34 = v27;
        Swift::Int v35 = v140 * v32;
        while (1)
        {
          Swift::Int v36 = v32;
          uint64_t v37 = v134;
          int v38 = v136 < v133;
          sub_100BD959C(v34 + v35, v134, (uint64_t (*)(void))_s17CategoryViewModelVMa);
          uint64_t v39 = v135;
          sub_100BD959C(v34 + v33, v135, (uint64_t (*)(void))_s17CategoryViewModelVMa);
          int v40 = *(void *)(v37 + *(int *)(v137 + 32)) >= *(void *)(v39 + *(int *)(v137 + 32));
          sub_100BD9788(v39, (uint64_t (*)(void))_s17CategoryViewModelVMa);
          sub_100BD9788(v37, (uint64_t (*)(void))_s17CategoryViewModelVMa);
          if (v38 == v40) {
            break;
          }
          ++v32;
          v34 += v140;
          if (v139 == v36 + 1)
          {
            Swift::Int v16 = v139;
            Swift::Int v32 = v139;
            a1 = v130;
            uint64_t v22 = v124;
            uint64_t v2 = v125;
            goto LABEL_23;
          }
        }
        a1 = v130;
        uint64_t v22 = v124;
        uint64_t v2 = v125;
        Swift::Int v16 = v139;
LABEL_23:
        uint64_t v27 = v132;
      }
      Swift::Int v25 = v128;
      if (v136 < v133)
      {
        if (v32 < v128) {
          goto LABEL_139;
        }
        if (v128 < v32)
        {
          double v124 = v22;
          uint64_t v125 = v2;
          uint64_t v41 = 0;
          unint64_t v42 = v140;
          uint64_t v43 = v140 * (v32 - 1);
          Swift::Int v44 = v32 * v140;
          Swift::Int v45 = v128;
          uint64_t v46 = v128 * v140;
          do
          {
            if (v45 != v32 + v41 - 1)
            {
              if (!v27) {
                goto LABEL_144;
              }
              sub_100BDBC84(v27 + v46, v127, (uint64_t (*)(void))_s17CategoryViewModelVMa);
              if (v46 < v43 || v27 + v46 >= (unint64_t)(v27 + v44))
              {
                swift_arrayInitWithTakeFrontToBack();
              }
              else if (v46 != v43)
              {
                swift_arrayInitWithTakeBackToFront();
              }
              sub_100BDBC84(v127, v27 + v43, (uint64_t (*)(void))_s17CategoryViewModelVMa);
              uint64_t v27 = v132;
              unint64_t v42 = v140;
            }
            ++v45;
            --v41;
            v43 -= v42;
            v44 -= v42;
            v46 += v42;
          }
          while (v45 < v32 + v41);
          uint64_t v22 = v124;
          uint64_t v2 = v125;
          a1 = v130;
          Swift::Int v25 = v128;
          Swift::Int v16 = v139;
        }
      }
    }
    if (v32 < v16)
    {
      if (__OFSUB__(v32, v25)) {
        goto LABEL_137;
      }
      if (v32 - v25 < v123) {
        break;
      }
    }
LABEL_56:
    if (v32 < v25) {
      goto LABEL_132;
    }
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v136 = v32;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      uint64_t v22 = sub_100F697E0(0, *((void *)v22 + 2) + 1, 1, (uint64_t)v22);
    }
    unint64_t v65 = *((void *)v22 + 2);
    unint64_t v64 = *((void *)v22 + 3);
    unint64_t v24 = v65 + 1;
    if (v65 >= v64 >> 1) {
      uint64_t v22 = sub_100F697E0((double *)(v64 > 1), v65 + 1, 1, (uint64_t)v22);
    }
    *((void *)v22 + 2) = v24;
    uint64_t v66 = v22 + 4;
    unint64_t v67 = &v22[2 * v65 + 4];
    unint64_t v68 = v136;
    *(void *)unint64_t v67 = v25;
    *((void *)v67 + 1) = v68;
    if (v65)
    {
      while (1)
      {
        unint64_t v69 = v24 - 1;
        if (v24 >= 4)
        {
          uint64_t v74 = &v66[2 * v24];
          uint64_t v75 = *((void *)v74 - 8);
          uint64_t v76 = *((void *)v74 - 7);
          BOOL v80 = __OFSUB__(v76, v75);
          uint64_t v77 = v76 - v75;
          if (v80) {
            goto LABEL_121;
          }
          uint64_t v79 = *((void *)v74 - 6);
          uint64_t v78 = *((void *)v74 - 5);
          BOOL v80 = __OFSUB__(v78, v79);
          uint64_t v72 = v78 - v79;
          char v73 = v80;
          if (v80) {
            goto LABEL_122;
          }
          unint64_t v81 = v24 - 2;
          CGFloat v82 = &v66[2 * v24 - 4];
          uint64_t v84 = *(void *)v82;
          uint64_t v83 = *((void *)v82 + 1);
          BOOL v80 = __OFSUB__(v83, v84);
          uint64_t v85 = v83 - v84;
          if (v80) {
            goto LABEL_124;
          }
          BOOL v80 = __OFADD__(v72, v85);
          uint64_t v86 = v72 + v85;
          if (v80) {
            goto LABEL_127;
          }
          if (v86 >= v77)
          {
            CGFloat v104 = &v66[2 * v69];
            uint64_t v106 = *(void *)v104;
            uint64_t v105 = *((void *)v104 + 1);
            BOOL v80 = __OFSUB__(v105, v106);
            uint64_t v107 = v105 - v106;
            if (v80) {
              goto LABEL_131;
            }
            BOOL v97 = v72 < v107;
            goto LABEL_93;
          }
        }
        else
        {
          if (v24 != 3)
          {
            uint64_t v98 = *((void *)v22 + 4);
            uint64_t v99 = *((void *)v22 + 5);
            BOOL v80 = __OFSUB__(v99, v98);
            uint64_t v91 = v99 - v98;
            char v92 = v80;
            goto LABEL_87;
          }
          uint64_t v71 = *((void *)v22 + 4);
          uint64_t v70 = *((void *)v22 + 5);
          BOOL v80 = __OFSUB__(v70, v71);
          uint64_t v72 = v70 - v71;
          char v73 = v80;
        }
        if (v73) {
          goto LABEL_123;
        }
        unint64_t v81 = v24 - 2;
        uint64_t v87 = &v66[2 * v24 - 4];
        uint64_t v89 = *(void *)v87;
        uint64_t v88 = *((void *)v87 + 1);
        BOOL v90 = __OFSUB__(v88, v89);
        uint64_t v91 = v88 - v89;
        char v92 = v90;
        if (v90) {
          goto LABEL_126;
        }
        uint64_t v93 = &v66[2 * v69];
        uint64_t v95 = *(void *)v93;
        uint64_t v94 = *((void *)v93 + 1);
        BOOL v80 = __OFSUB__(v94, v95);
        uint64_t v96 = v94 - v95;
        if (v80) {
          goto LABEL_129;
        }
        if (__OFADD__(v91, v96)) {
          goto LABEL_130;
        }
        if (v91 + v96 >= v72)
        {
          BOOL v97 = v72 < v96;
LABEL_93:
          if (v97) {
            unint64_t v69 = v81;
          }
          goto LABEL_95;
        }
LABEL_87:
        if (v92) {
          goto LABEL_125;
        }
        CGFloat v100 = &v66[2 * v69];
        uint64_t v102 = *(void *)v100;
        uint64_t v101 = *((void *)v100 + 1);
        BOOL v80 = __OFSUB__(v101, v102);
        uint64_t v103 = v101 - v102;
        if (v80) {
          goto LABEL_128;
        }
        if (v103 < v91) {
          goto LABEL_14;
        }
LABEL_95:
        unint64_t v108 = v69 - 1;
        if (v69 - 1 >= v24)
        {
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
          goto LABEL_141;
        }
        if (!*v130) {
          goto LABEL_143;
        }
        double v109 = v22;
        CGFloat v110 = &v66[2 * v108];
        uint64_t v111 = *(void *)v110;
        CGFloat v112 = &v66[2 * v69];
        double v113 = v112[1];
        sub_100BDB254(*v130 + *(void *)(v131 + 72) * *(void *)v110, *v130 + *(void *)(v131 + 72) * *(void *)v112, *v130 + *(void *)(v131 + 72) * *(void *)&v113, v129);
        if (v2) {
          goto LABEL_115;
        }
        if (*(uint64_t *)&v113 < v111) {
          goto LABEL_118;
        }
        if (v69 > *((void *)v109 + 2)) {
          goto LABEL_119;
        }
        *(void *)CGFloat v110 = v111;
        v66[2 * v108 + 1] = v113;
        unint64_t v114 = *((void *)v109 + 2);
        if (v69 >= v114) {
          goto LABEL_120;
        }
        uint64_t v22 = v109;
        unint64_t v24 = v114 - 1;
        memmove(&v66[2 * v69], v112 + 2, 16 * (v114 - 1 - v69));
        *((void *)v109 + 2) = v114 - 1;
        if (v114 <= 2) {
          goto LABEL_14;
        }
      }
    }
    unint64_t v24 = 1;
LABEL_14:
    a1 = v130;
    Swift::Int v16 = v130[1];
    unint64_t v23 = v136;
    if ((uint64_t)v136 >= v16) {
      goto LABEL_104;
    }
  }
  if (__OFADD__(v25, v123)) {
    goto LABEL_140;
  }
  if (v25 + v123 >= v16) {
    Swift::Int v47 = v16;
  }
  else {
    Swift::Int v47 = v25 + v123;
  }
  if (v47 >= v25)
  {
    if (v32 != v47)
    {
      double v124 = v22;
      uint64_t v125 = v2;
      uint64_t v48 = *(void *)(v131 + 72);
      uint64_t v49 = v48 * (v32 - 1);
      uint64_t v132 = v48;
      Swift::Int v50 = v32 * v48;
      Swift::Int v126 = v47;
      do
      {
        uint64_t v52 = 0;
        unint64_t v136 = v32;
        unint64_t v133 = v50;
        while (1)
        {
          Swift::Int v139 = v25;
          uint64_t v53 = *a1;
          uint64_t v54 = v50 + v52 + *a1;
          uint64_t v55 = v134;
          sub_100BD959C(v54, v134, (uint64_t (*)(void))_s17CategoryViewModelVMa);
          uint64_t v56 = v49;
          uint64_t v57 = v49 + v52 + v53;
          uint64_t v58 = v135;
          sub_100BD959C(v57, v135, (uint64_t (*)(void))_s17CategoryViewModelVMa);
          uint64_t v59 = *(int *)(v137 + 32);
          unint64_t v140 = *(void *)(v55 + v59);
          unint64_t v60 = *(void *)(v58 + v59);
          sub_100BD9788(v58, (uint64_t (*)(void))_s17CategoryViewModelVMa);
          sub_100BD9788(v55, (uint64_t (*)(void))_s17CategoryViewModelVMa);
          if (v140 >= v60) {
            break;
          }
          uint64_t v61 = *a1;
          if (!*a1) {
            goto LABEL_142;
          }
          Swift::Int v50 = v133;
          uint64_t v49 = v56;
          uint64_t v62 = v61 + v56 + v52;
          sub_100BDBC84(v61 + v133 + v52, v138, (uint64_t (*)(void))_s17CategoryViewModelVMa);
          swift_arrayInitWithTakeFrontToBack();
          sub_100BDBC84(v138, v62, (uint64_t (*)(void))_s17CategoryViewModelVMa);
          v52 -= v132;
          Swift::Int v25 = v139 + 1;
          unint64_t v51 = v136;
          if (v136 == v139 + 1) {
            goto LABEL_49;
          }
        }
        unint64_t v51 = v136;
        uint64_t v49 = v56;
        Swift::Int v50 = v133;
LABEL_49:
        Swift::Int v32 = v51 + 1;
        v49 += v132;
        v50 += v132;
        Swift::Int v25 = v128;
      }
      while (v32 != v126);
      Swift::Int v32 = v126;
      uint64_t v22 = v124;
      uint64_t v2 = v125;
    }
    goto LABEL_56;
  }
LABEL_141:
  __break(1u);
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

void sub_100BDA268(uint64_t *a1, int a2)
{
  int v139 = a2;
  uint64_t v133 = _s13ItemViewModelVMa();
  uint64_t v4 = *(void *)(v133 - 8);
  __chkstk_darwin(v133, v5);
  uint64_t v128 = (uint64_t)&v124 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7, v8);
  uint64_t v140 = (uint64_t)&v124 - v9;
  __chkstk_darwin(v10, v11);
  uint64_t v136 = (uint64_t)&v124 - v12;
  __chkstk_darwin(v13, v14);
  uint64_t v135 = (uint64_t)&v124 - v15;
  Swift::Int v16 = a1[1];
  Swift::Int v17 = _minimumMergeRunLength(_:)(v16);
  if (v17 >= v16)
  {
    if (v16 < 0) {
      goto LABEL_139;
    }
    if (v16) {
      sub_100BDAFA0(0, v16, 1, a1, v139);
    }
    return;
  }
  if (v16 >= 0) {
    uint64_t v18 = v16;
  }
  else {
    uint64_t v18 = v16 + 1;
  }
  if (v16 < -1) {
    goto LABEL_147;
  }
  uint64_t v127 = v4;
  Swift::Int v125 = v17;
  uint64_t v132 = v2;
  if (v16 < 2)
  {
    uint64_t v22 = _swiftEmptyArrayStorage;
    unint64_t v131 = (unint64_t)_swiftEmptyArrayStorage
         + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    double v124 = _swiftEmptyArrayStorage;
    if (v16 != 1)
    {
      unint64_t v24 = *(void *)&_swiftEmptyArrayStorage[2];
LABEL_105:
      uint64_t v116 = v22;
      if (v24 >= 2)
      {
        uint64_t v117 = *a1;
        do
        {
          unint64_t v118 = v24 - 2;
          if (v24 < 2) {
            goto LABEL_134;
          }
          if (!v117) {
            goto LABEL_146;
          }
          double v119 = v116[2 * v118 + 4];
          double v120 = v116[2 * v24 + 3];
          uint64_t v121 = v132;
          sub_100BDB78C(v117 + *(void *)(v127 + 72) * *(void *)&v119, v117 + *(void *)(v127 + 72) * *(void *)&v116[2 * v24 + 2], v117 + *(void *)(v127 + 72) * *(void *)&v120, v131, v139);
          uint64_t v132 = v121;
          if (v121) {
            break;
          }
          if (*(uint64_t *)&v120 < *(uint64_t *)&v119) {
            goto LABEL_135;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v116 = sub_100F69F28((uint64_t)v116);
          }
          if (v118 >= *((void *)v116 + 2)) {
            goto LABEL_136;
          }
          double v122 = &v116[2 * v118 + 4];
          *double v122 = v119;
          v122[1] = v120;
          unint64_t v123 = *((void *)v116 + 2);
          if (v24 > v123) {
            goto LABEL_137;
          }
          memmove(&v116[2 * v24 + 2], &v116[2 * v24 + 4], 16 * (v123 - v24));
          *((void *)v116 + 2) = v123 - 1;
          unint64_t v24 = v123 - 1;
        }
        while (v123 > 2);
      }
LABEL_116:
      swift_bridgeObjectRelease();
      v124[2] = 0.0;
      swift_bridgeObjectRelease();
      return;
    }
  }
  else
  {
    uint64_t v19 = v18 >> 1;
    uint64_t v20 = static Array._allocateBufferUninitialized(minimumCapacity:)();
    *(void *)(v20 + 16) = v19;
    uint64_t v21 = *(unsigned __int8 *)(v4 + 80);
    double v124 = (double *)v20;
    unint64_t v131 = v20 + ((v21 + 32) & ~v21);
  }
  Swift::Int v23 = 0;
  uint64_t v22 = _swiftEmptyArrayStorage;
  uint64_t v137 = a1;
  while (1)
  {
    Swift::Int v25 = v23 + 1;
    Swift::Int v130 = v23;
    if (v23 + 1 >= v16)
    {
      Swift::Int v33 = v23;
      Swift::Int v34 = v23 + 1;
      goto LABEL_57;
    }
    uint64_t v26 = v4;
    uint64_t v27 = *a1;
    Swift::Int v28 = v16;
    uint64_t v29 = *(void *)(v26 + 72);
    uint64_t v30 = v135;
    sub_100BD959C(*a1 + v29 * v25, v135, (uint64_t (*)(void))_s13ItemViewModelVMa);
    uint64_t v31 = v136;
    sub_100BD959C(v27 + v29 * v130, v136, (uint64_t (*)(void))_s13ItemViewModelVMa);
    uint64_t v142 = sub_100BD2088(v30, v31, v139);
    sub_100BD9788(v31, (uint64_t (*)(void))_s13ItemViewModelVMa);
    uint64_t v32 = v30;
    Swift::Int v33 = v130;
    sub_100BD9788(v32, (uint64_t (*)(void))_s13ItemViewModelVMa);
    Swift::Int v34 = v33 + 2;
    Swift::Int v141 = v28;
    uint64_t v134 = v27;
    if (v33 + 2 >= v28)
    {
      uint64_t v4 = v127;
    }
    else
    {
      Swift::Int v126 = v22;
      Swift::Int v138 = v29 * v25;
      uint64_t v35 = v27;
      Swift::Int v36 = v33 + 2;
      uint64_t v37 = v29 * (v33 + 2);
      while (1)
      {
        int v38 = v142 == -1;
        uint64_t v39 = v135;
        sub_100BD959C(v35 + v37, v135, (uint64_t (*)(void))_s13ItemViewModelVMa);
        uint64_t v40 = v136;
        sub_100BD959C(v35 + v138, v136, (uint64_t (*)(void))_s13ItemViewModelVMa);
        int v41 = sub_100BD2088(v39, v40, v139) != -1;
        sub_100BD9788(v40, (uint64_t (*)(void))_s13ItemViewModelVMa);
        sub_100BD9788(v39, (uint64_t (*)(void))_s13ItemViewModelVMa);
        if (v38 == v41) {
          break;
        }
        v35 += v29;
        if (v141 == ++v36)
        {
          Swift::Int v34 = v141;
          uint64_t v22 = v126;
          uint64_t v4 = v127;
          a1 = v137;
          goto LABEL_24;
        }
      }
      uint64_t v22 = v126;
      uint64_t v4 = v127;
      a1 = v137;
      Swift::Int v34 = v36;
LABEL_24:
      Swift::Int v33 = v130;
    }
    if (v142 == -1)
    {
      if (v34 < v33) {
        goto LABEL_142;
      }
      if (v33 < v34)
      {
        Swift::Int v126 = v22;
        Swift::Int v42 = v34;
        uint64_t v43 = 0;
        uint64_t v44 = v29 * (v42 - 1);
        Swift::Int v45 = v42 * v29;
        Swift::Int v46 = v33;
        uint64_t v47 = v33 * v29;
        Swift::Int v138 = v42;
        do
        {
          if (v46 != v42 + v43 - 1)
          {
            uint64_t v49 = v134;
            if (!v134) {
              goto LABEL_145;
            }
            unint64_t v50 = v134 + v47;
            uint64_t v142 = v134 + v44;
            sub_100BDBC84(v134 + v47, v128, (uint64_t (*)(void))_s13ItemViewModelVMa);
            if (v47 < v44 || v50 >= v49 + v45)
            {
              uint64_t v48 = v142;
              swift_arrayInitWithTakeFrontToBack();
            }
            else
            {
              uint64_t v48 = v142;
              if (v47 != v44) {
                swift_arrayInitWithTakeBackToFront();
              }
            }
            sub_100BDBC84(v128, v48, (uint64_t (*)(void))_s13ItemViewModelVMa);
          }
          ++v46;
          --v43;
          Swift::Int v42 = v138;
          v44 -= v29;
          v45 -= v29;
          v47 += v29;
        }
        while (v46 < v138 + v43);
        uint64_t v22 = v126;
        uint64_t v4 = v127;
        Swift::Int v34 = v138;
        Swift::Int v33 = v130;
      }
    }
    if (v34 < v141)
    {
      if (__OFSUB__(v34, v33)) {
        goto LABEL_138;
      }
      if (v34 - v33 < v125) {
        break;
      }
    }
LABEL_57:
    if (v34 < v33) {
      goto LABEL_133;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v22 = sub_100F697E0(0, *((void *)v22 + 2) + 1, 1, (uint64_t)v22);
    }
    unint64_t v65 = *((void *)v22 + 2);
    unint64_t v64 = *((void *)v22 + 3);
    unint64_t v24 = v65 + 1;
    if (v65 >= v64 >> 1) {
      uint64_t v22 = sub_100F697E0((double *)(v64 > 1), v65 + 1, 1, (uint64_t)v22);
    }
    *((void *)v22 + 2) = v24;
    uint64_t v66 = v22 + 4;
    unint64_t v67 = &v22[2 * v65 + 4];
    *(void *)unint64_t v67 = v33;
    *((void *)v67 + 1) = v34;
    Swift::Int v138 = v34;
    if (v65)
    {
      while (1)
      {
        unint64_t v68 = v24 - 1;
        if (v24 >= 4)
        {
          char v73 = &v66[2 * v24];
          uint64_t v74 = *((void *)v73 - 8);
          uint64_t v75 = *((void *)v73 - 7);
          BOOL v79 = __OFSUB__(v75, v74);
          uint64_t v76 = v75 - v74;
          if (v79) {
            goto LABEL_122;
          }
          uint64_t v78 = *((void *)v73 - 6);
          uint64_t v77 = *((void *)v73 - 5);
          BOOL v79 = __OFSUB__(v77, v78);
          uint64_t v71 = v77 - v78;
          char v72 = v79;
          if (v79) {
            goto LABEL_123;
          }
          unint64_t v80 = v24 - 2;
          unint64_t v81 = &v66[2 * v24 - 4];
          uint64_t v83 = *(void *)v81;
          uint64_t v82 = *((void *)v81 + 1);
          BOOL v79 = __OFSUB__(v82, v83);
          uint64_t v84 = v82 - v83;
          if (v79) {
            goto LABEL_125;
          }
          BOOL v79 = __OFADD__(v71, v84);
          uint64_t v85 = v71 + v84;
          if (v79) {
            goto LABEL_128;
          }
          if (v85 >= v76)
          {
            uint64_t v103 = &v66[2 * v68];
            uint64_t v105 = *(void *)v103;
            uint64_t v104 = *((void *)v103 + 1);
            BOOL v79 = __OFSUB__(v104, v105);
            uint64_t v106 = v104 - v105;
            if (v79) {
              goto LABEL_132;
            }
            BOOL v96 = v71 < v106;
            goto LABEL_94;
          }
        }
        else
        {
          if (v24 != 3)
          {
            uint64_t v97 = *((void *)v22 + 4);
            uint64_t v98 = *((void *)v22 + 5);
            BOOL v79 = __OFSUB__(v98, v97);
            uint64_t v90 = v98 - v97;
            char v91 = v79;
            goto LABEL_88;
          }
          uint64_t v70 = *((void *)v22 + 4);
          uint64_t v69 = *((void *)v22 + 5);
          BOOL v79 = __OFSUB__(v69, v70);
          uint64_t v71 = v69 - v70;
          char v72 = v79;
        }
        if (v72) {
          goto LABEL_124;
        }
        unint64_t v80 = v24 - 2;
        uint64_t v86 = &v66[2 * v24 - 4];
        uint64_t v88 = *(void *)v86;
        uint64_t v87 = *((void *)v86 + 1);
        BOOL v89 = __OFSUB__(v87, v88);
        uint64_t v90 = v87 - v88;
        char v91 = v89;
        if (v89) {
          goto LABEL_127;
        }
        char v92 = &v66[2 * v68];
        uint64_t v94 = *(void *)v92;
        uint64_t v93 = *((void *)v92 + 1);
        BOOL v79 = __OFSUB__(v93, v94);
        uint64_t v95 = v93 - v94;
        if (v79) {
          goto LABEL_130;
        }
        if (__OFADD__(v90, v95)) {
          goto LABEL_131;
        }
        if (v90 + v95 >= v71)
        {
          BOOL v96 = v71 < v95;
LABEL_94:
          if (v96) {
            unint64_t v68 = v80;
          }
          goto LABEL_96;
        }
LABEL_88:
        if (v91) {
          goto LABEL_126;
        }
        uint64_t v99 = &v66[2 * v68];
        uint64_t v101 = *(void *)v99;
        uint64_t v100 = *((void *)v99 + 1);
        BOOL v79 = __OFSUB__(v100, v101);
        uint64_t v102 = v100 - v101;
        if (v79) {
          goto LABEL_129;
        }
        if (v102 < v90) {
          goto LABEL_14;
        }
LABEL_96:
        unint64_t v107 = v68 - 1;
        if (v68 - 1 >= v24)
        {
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
          goto LABEL_141;
        }
        uint64_t v108 = *a1;
        if (!*a1) {
          goto LABEL_144;
        }
        double v109 = v22;
        CGFloat v110 = &v66[2 * v107];
        uint64_t v111 = *(void *)v110;
        CGFloat v112 = &v66[2 * v68];
        double v113 = v112[1];
        uint64_t v114 = v132;
        sub_100BDB78C(v108 + *(void *)(v4 + 72) * *(void *)v110, v108 + *(void *)(v4 + 72) * *(void *)v112, v108 + *(void *)(v4 + 72) * *(void *)&v113, v131, v139);
        uint64_t v132 = v114;
        if (v114) {
          goto LABEL_116;
        }
        if (*(uint64_t *)&v113 < v111) {
          goto LABEL_119;
        }
        if (v68 > *((void *)v109 + 2)) {
          goto LABEL_120;
        }
        *(void *)CGFloat v110 = v111;
        v66[2 * v107 + 1] = v113;
        unint64_t v115 = *((void *)v109 + 2);
        if (v68 >= v115) {
          goto LABEL_121;
        }
        uint64_t v22 = v109;
        unint64_t v24 = v115 - 1;
        memmove(&v66[2 * v68], v112 + 2, 16 * (v115 - 1 - v68));
        *((void *)v109 + 2) = v115 - 1;
        a1 = v137;
        if (v115 <= 2) {
          goto LABEL_14;
        }
      }
    }
    unint64_t v24 = 1;
LABEL_14:
    Swift::Int v16 = a1[1];
    Swift::Int v23 = v138;
    if (v138 >= v16) {
      goto LABEL_105;
    }
  }
  if (__OFADD__(v33, v125)) {
    goto LABEL_140;
  }
  if (v33 + v125 >= v141) {
    Swift::Int v51 = v141;
  }
  else {
    Swift::Int v51 = v33 + v125;
  }
  if (v51 >= v33)
  {
    if (v34 != v51)
    {
      Swift::Int v126 = v22;
      uint64_t v52 = *(void *)(v4 + 72);
      uint64_t v142 = v52 * (v34 - 1);
      uint64_t v134 = v52;
      Swift::Int v53 = v34 * v52;
      Swift::Int v129 = v51;
      do
      {
        uint64_t v55 = 0;
        Swift::Int v138 = v34;
        while (1)
        {
          Swift::Int v141 = v33;
          uint64_t v56 = *a1;
          Swift::Int v57 = v53;
          uint64_t v58 = v53 + v55 + *a1;
          uint64_t v59 = v135;
          sub_100BD959C(v58, v135, (uint64_t (*)(void))_s13ItemViewModelVMa);
          uint64_t v60 = v136;
          sub_100BD959C(v142 + v55 + v56, v136, (uint64_t (*)(void))_s13ItemViewModelVMa);
          uint64_t v61 = sub_100BD2088(v59, v60, v139);
          sub_100BD9788(v60, (uint64_t (*)(void))_s13ItemViewModelVMa);
          sub_100BD9788(v59, (uint64_t (*)(void))_s13ItemViewModelVMa);
          if (v61 != -1) {
            break;
          }
          uint64_t v62 = *a1;
          if (!*a1) {
            goto LABEL_143;
          }
          Swift::Int v53 = v57;
          uint64_t v63 = v62 + v142 + v55;
          sub_100BDBC84(v62 + v57 + v55, v140, (uint64_t (*)(void))_s13ItemViewModelVMa);
          Swift::Int v54 = v138;
          swift_arrayInitWithTakeFrontToBack();
          sub_100BDBC84(v140, v63, (uint64_t (*)(void))_s13ItemViewModelVMa);
          v55 -= v134;
          Swift::Int v33 = v141 + 1;
          a1 = v137;
          if (v54 == v141 + 1) {
            goto LABEL_50;
          }
        }
        Swift::Int v54 = v138;
        Swift::Int v53 = v57;
LABEL_50:
        Swift::Int v34 = v54 + 1;
        v142 += v134;
        v53 += v134;
        Swift::Int v33 = v130;
      }
      while (v34 != v129);
      Swift::Int v34 = v129;
      uint64_t v22 = v126;
      uint64_t v4 = v127;
    }
    goto LABEL_57;
  }
LABEL_141:
  __break(1u);
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  __break(1u);
LABEL_147:
  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

void sub_100BDACF0(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v36 = a1;
  uint64_t v43 = _s17CategoryViewModelVMa();
  __chkstk_darwin(v43, v7);
  uint64_t v44 = (uint64_t)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9, v10);
  uint64_t v39 = (uint64_t)&v34 - v11;
  __chkstk_darwin(v12, v13);
  uint64_t v38 = (uint64_t)&v34 - v15;
  uint64_t v42 = a3;
  uint64_t v35 = a2;
  if (a3 != a2)
  {
    uint64_t v16 = *(void *)(v14 + 72);
    uint64_t v17 = v16 * (v42 - 1);
    uint64_t v40 = v16;
    uint64_t v18 = v16 * v42;
    uint64_t v37 = a4;
LABEL_5:
    uint64_t v19 = 0;
    uint64_t v20 = v36;
    uint64_t v41 = v18;
    while (1)
    {
      uint64_t v21 = *a4;
      uint64_t v22 = v18 + v19 + *a4;
      uint64_t v23 = v38;
      sub_100BD959C(v22, v38, (uint64_t (*)(void))_s17CategoryViewModelVMa);
      uint64_t v24 = v17 + v19 + v21;
      uint64_t v25 = v17;
      uint64_t v26 = v39;
      sub_100BD959C(v24, v39, (uint64_t (*)(void))_s17CategoryViewModelVMa);
      uint64_t v27 = *(int *)(v43 + 32);
      unint64_t v45 = *(void *)(v23 + v27);
      unint64_t v28 = *(void *)(v26 + v27);
      uint64_t v29 = v26;
      uint64_t v17 = v25;
      sub_100BD9788(v29, (uint64_t (*)(void))_s17CategoryViewModelVMa);
      uint64_t v30 = v23;
      uint64_t v18 = v41;
      sub_100BD9788(v30, (uint64_t (*)(void))_s17CategoryViewModelVMa);
      BOOL v31 = v45 >= v28;
      a4 = v37;
      if (v31)
      {
LABEL_4:
        uint64_t v17 = v25 + v40;
        v18 += v40;
        if (++v42 == v35) {
          return;
        }
        goto LABEL_5;
      }
      uint64_t v32 = *v37;
      if (!*v37) {
        break;
      }
      uint64_t v33 = v32 + v25 + v19;
      sub_100BDBC84(v32 + v18 + v19, v44, (uint64_t (*)(void))_s17CategoryViewModelVMa);
      swift_arrayInitWithTakeFrontToBack();
      sub_100BDBC84(v44, v33, (uint64_t (*)(void))_s17CategoryViewModelVMa);
      v19 -= v40;
      if (v42 == ++v20) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
}

void sub_100BDAFA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, int a5)
{
  int v30 = a5;
  uint64_t v28 = a1;
  uint64_t v29 = _s13ItemViewModelVMa();
  __chkstk_darwin(v29, v8);
  uint64_t v33 = (uint64_t)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10, v11);
  uint64_t v13 = (char *)&v26 - v12;
  __chkstk_darwin(v14, v15);
  uint64_t v18 = (char *)&v26 - v17;
  uint64_t v32 = a3;
  uint64_t v27 = a2;
  if (a3 != a2)
  {
    uint64_t v19 = *(void *)(v16 + 72);
    uint64_t v35 = v19 * (v32 - 1);
    uint64_t v31 = v19;
    uint64_t v34 = v19 * v32;
LABEL_5:
    uint64_t v20 = 0;
    uint64_t v21 = v28;
    while (1)
    {
      uint64_t v22 = *a4;
      sub_100BD959C(v34 + v20 + *a4, (uint64_t)v18, (uint64_t (*)(void))_s13ItemViewModelVMa);
      sub_100BD959C(v35 + v20 + v22, (uint64_t)v13, (uint64_t (*)(void))_s13ItemViewModelVMa);
      uint64_t v23 = sub_100BD2088((uint64_t)v18, (uint64_t)v13, v30);
      sub_100BD9788((uint64_t)v13, (uint64_t (*)(void))_s13ItemViewModelVMa);
      sub_100BD9788((uint64_t)v18, (uint64_t (*)(void))_s13ItemViewModelVMa);
      if (v23 != -1)
      {
LABEL_4:
        v35 += v31;
        v34 += v31;
        if (++v32 == v27) {
          return;
        }
        goto LABEL_5;
      }
      uint64_t v24 = *a4;
      if (!*a4) {
        break;
      }
      uint64_t v25 = v24 + v35 + v20;
      sub_100BDBC84(v24 + v34 + v20, v33, (uint64_t (*)(void))_s13ItemViewModelVMa);
      swift_arrayInitWithTakeFrontToBack();
      sub_100BDBC84(v33, v25, (uint64_t (*)(void))_s13ItemViewModelVMa);
      v20 -= v31;
      if (v32 == ++v21) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
}

uint64_t sub_100BDB254(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v8 = _s17CategoryViewModelVMa();
  __chkstk_darwin(v8, v9);
  uint64_t v56 = (uint64_t)&v49 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11, v12);
  uint64_t v55 = (uint64_t)&v49 - v13;
  uint64_t v15 = *(void *)(v14 + 72);
  if (!v15)
  {
    __break(1u);
LABEL_71:
    __break(1u);
LABEL_72:
    __break(1u);
    goto LABEL_73;
  }
  if (a2 - a1 == 0x8000000000000000 && v15 == -1) {
    goto LABEL_71;
  }
  int64_t v16 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v15 == -1) {
    goto LABEL_72;
  }
  uint64_t v17 = (uint64_t)(a2 - a1) / v15;
  unint64_t v59 = a1;
  unint64_t v58 = a4;
  uint64_t v18 = v16 / v15;
  if (v17 >= v16 / v15)
  {
    if ((v18 & 0x8000000000000000) == 0)
    {
      uint64_t v20 = v18 * v15;
      if (a4 < a2 || a2 + v20 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (a4 != a2)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      unint64_t v34 = a4 + v20;
      unint64_t v57 = a4 + v20;
      unint64_t v59 = a2;
      if (v20 >= 1 && a1 < a2)
      {
        uint64_t v36 = -v15;
        unint64_t v53 = a4;
        unint64_t v50 = a1;
        uint64_t v51 = v8;
        do
        {
          unint64_t v54 = a3 + v36;
          uint64_t v37 = v55;
          sub_100BD959C(v34 + v36, v55, (uint64_t (*)(void))_s17CategoryViewModelVMa);
          unint64_t v38 = a2 + v36;
          uint64_t v39 = v56;
          sub_100BD959C(a2 + v36, v56, (uint64_t (*)(void))_s17CategoryViewModelVMa);
          uint64_t v40 = *(int *)(v8 + 32);
          uint64_t v41 = v36;
          unint64_t v42 = *(void *)(v37 + v40);
          unint64_t v43 = *(void *)(v39 + v40);
          sub_100BD9788(v39, (uint64_t (*)(void))_s17CategoryViewModelVMa);
          sub_100BD9788(v37, (uint64_t (*)(void))_s17CategoryViewModelVMa);
          if (v42 >= v43)
          {
            unint64_t v46 = v57;
            v57 += v41;
            unint64_t v44 = v54;
            BOOL v47 = a3 < v46 || v54 >= v46;
            uint64_t v36 = v41;
            if (v47)
            {
              uint64_t v8 = v51;
              swift_arrayInitWithTakeFrontToBack();
              unint64_t v38 = a2;
              unint64_t v45 = v53;
            }
            else
            {
              uint64_t v8 = v51;
              unint64_t v45 = v53;
              if (a3 != v46) {
                swift_arrayInitWithTakeBackToFront();
              }
              unint64_t v38 = a2;
            }
          }
          else
          {
            unint64_t v44 = v54;
            if (a3 < a2 || v54 >= a2)
            {
              uint64_t v8 = v51;
              swift_arrayInitWithTakeFrontToBack();
              unint64_t v45 = v53;
              uint64_t v36 = v41;
            }
            else
            {
              uint64_t v8 = v51;
              unint64_t v45 = v53;
              uint64_t v36 = v41;
              if (a3 != a2) {
                swift_arrayInitWithTakeBackToFront();
              }
            }
            v59 += v36;
          }
          unint64_t v34 = v57;
          if (v57 <= v45) {
            break;
          }
          a2 = v38;
          a3 = v44;
        }
        while (v38 > v50);
      }
      goto LABEL_69;
    }
  }
  else if ((v17 & 0x8000000000000000) == 0)
  {
    uint64_t v19 = v17 * v15;
    if (a4 < a1 || a1 + v19 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != a1)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    unint64_t v54 = a4 + v19;
    unint64_t v57 = a4 + v19;
    if (v19 >= 1 && a2 < a3)
    {
      unint64_t v52 = a3;
      uint64_t v22 = v55;
      do
      {
        sub_100BD959C(a2, v22, (uint64_t (*)(void))_s17CategoryViewModelVMa);
        uint64_t v23 = v56;
        sub_100BD959C(a4, v56, (uint64_t (*)(void))_s17CategoryViewModelVMa);
        uint64_t v24 = v8;
        uint64_t v25 = *(int *)(v8 + 32);
        unint64_t v26 = *(void *)(v22 + v25);
        unint64_t v27 = *(void *)(v23 + v25);
        sub_100BD9788(v23, (uint64_t (*)(void))_s17CategoryViewModelVMa);
        sub_100BD9788(v22, (uint64_t (*)(void))_s17CategoryViewModelVMa);
        unint64_t v28 = v59;
        if (v26 >= v27)
        {
          unint64_t v32 = v58 + v15;
          if (v59 < v58 || v59 >= v32)
          {
            uint64_t v8 = v24;
            swift_arrayInitWithTakeFrontToBack();
            unint64_t v31 = v52;
          }
          else
          {
            unint64_t v31 = v52;
            uint64_t v8 = v24;
            if (v59 != v58) {
              swift_arrayInitWithTakeBackToFront();
            }
          }
          unint64_t v58 = v32;
          unint64_t v29 = a2;
        }
        else
        {
          unint64_t v29 = a2 + v15;
          if (v59 < a2 || v59 >= v29)
          {
            uint64_t v8 = v24;
            swift_arrayInitWithTakeFrontToBack();
            unint64_t v31 = v52;
          }
          else
          {
            unint64_t v31 = v52;
            uint64_t v8 = v24;
            if (v59 == a2) {
              unint64_t v28 = a2;
            }
            else {
              swift_arrayInitWithTakeBackToFront();
            }
          }
        }
        unint64_t v59 = v28 + v15;
        a4 = v58;
        if (v58 >= v54) {
          break;
        }
        a2 = v29;
      }
      while (v29 < v31);
    }
LABEL_69:
    sub_100F69B6C(&v59, &v58, (uint64_t *)&v57);
    return 1;
  }
LABEL_73:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100BDB78C(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4, int a5)
{
  int v48 = a5;
  uint64_t v46 = _s13ItemViewModelVMa();
  __chkstk_darwin(v46, v9);
  uint64_t v47 = (uint64_t)&v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11, v12);
  uint64_t v14 = (char *)&v43 - v13;
  uint64_t v16 = *(void *)(v15 + 72);
  if (!v16)
  {
    __break(1u);
LABEL_61:
    __break(1u);
LABEL_62:
    __break(1u);
    goto LABEL_63;
  }
  if (a2 - a1 == 0x8000000000000000 && v16 == -1) {
    goto LABEL_61;
  }
  int64_t v17 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v16 == -1) {
    goto LABEL_62;
  }
  uint64_t v18 = (uint64_t)(a2 - a1) / v16;
  unint64_t v51 = a1;
  unint64_t v50 = a4;
  uint64_t v19 = v17 / v16;
  if (v18 >= v17 / v16)
  {
    if ((v19 & 0x8000000000000000) == 0)
    {
      uint64_t v21 = v19 * v16;
      if (a4 < a2 || a2 + v21 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (a4 != a2)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      unint64_t v29 = a4 + v21;
      unint64_t v49 = a4 + v21;
      unint64_t v51 = a2;
      if (v21 >= 1 && a1 < a2)
      {
        unint64_t v44 = a1;
        unint64_t v45 = a4;
        do
        {
          unint64_t v31 = a3 - v16;
          sub_100BD959C(v29 - v16, (uint64_t)v14, (uint64_t (*)(void))_s13ItemViewModelVMa);
          unint64_t v32 = a2 - v16;
          unint64_t v33 = a3;
          uint64_t v34 = (uint64_t)v14;
          uint64_t v35 = v47;
          sub_100BD959C(a2 - v16, v47, (uint64_t (*)(void))_s13ItemViewModelVMa);
          uint64_t v36 = sub_100BD2088(v34, v35, v48);
          uint64_t v37 = v35;
          uint64_t v14 = (char *)v34;
          sub_100BD9788(v37, (uint64_t (*)(void))_s13ItemViewModelVMa);
          sub_100BD9788(v34, (uint64_t (*)(void))_s13ItemViewModelVMa);
          if (v36 == -1)
          {
            if (v33 < a2 || v31 >= a2)
            {
              swift_arrayInitWithTakeFrontToBack();
              unint64_t v39 = v44;
              unint64_t v40 = v45;
            }
            else
            {
              BOOL v41 = v33 == a2;
              unint64_t v39 = v44;
              unint64_t v40 = v45;
              if (!v41) {
                swift_arrayInitWithTakeBackToFront();
              }
            }
            v51 -= v16;
          }
          else
          {
            unint64_t v38 = v49;
            v49 -= v16;
            if (v33 < v38 || v31 >= v38)
            {
              swift_arrayInitWithTakeFrontToBack();
              unint64_t v32 = a2;
              unint64_t v39 = v44;
              unint64_t v40 = v45;
            }
            else
            {
              unint64_t v39 = v44;
              if (v33 != v38) {
                swift_arrayInitWithTakeBackToFront();
              }
              unint64_t v32 = a2;
              unint64_t v40 = v45;
            }
          }
          unint64_t v29 = v49;
          if (v49 <= v40) {
            break;
          }
          a2 = v32;
          a3 = v31;
        }
        while (v32 > v39);
      }
      goto LABEL_59;
    }
  }
  else if ((v18 & 0x8000000000000000) == 0)
  {
    uint64_t v20 = v18 * v16;
    if (a4 < a1 || a1 + v20 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != a1)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    unint64_t v22 = a4 + v20;
    unint64_t v49 = a4 + v20;
    if (v20 >= 1 && a2 < a3)
    {
      do
      {
        sub_100BD959C(a2, (uint64_t)v14, (uint64_t (*)(void))_s13ItemViewModelVMa);
        uint64_t v24 = v47;
        sub_100BD959C(a4, v47, (uint64_t (*)(void))_s13ItemViewModelVMa);
        uint64_t v25 = sub_100BD2088((uint64_t)v14, v24, v48);
        sub_100BD9788(v24, (uint64_t (*)(void))_s13ItemViewModelVMa);
        sub_100BD9788((uint64_t)v14, (uint64_t (*)(void))_s13ItemViewModelVMa);
        unint64_t v26 = v51;
        if (v25 == -1)
        {
          unint64_t v28 = a2 + v16;
          if (v51 < a2 || v51 >= v28)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v51 == a2)
          {
            unint64_t v26 = a2;
          }
          else
          {
            swift_arrayInitWithTakeBackToFront();
          }
        }
        else
        {
          unint64_t v27 = v50 + v16;
          if (v51 < v50 || v51 >= v27)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v51 != v50)
          {
            swift_arrayInitWithTakeBackToFront();
          }
          unint64_t v50 = v27;
          unint64_t v28 = a2;
        }
        unint64_t v51 = v26 + v16;
        a4 = v50;
        if (v50 >= v22) {
          break;
        }
        a2 = v28;
      }
      while (v28 < a3);
    }
LABEL_59:
    sub_100F69B84(&v51, &v50, (uint64_t *)&v49);
    return 1;
  }
LABEL_63:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100BDBC84(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

unint64_t sub_100BDBCEC()
{
  unint64_t result = qword_101696EB8;
  if (!qword_101696EB8)
  {
    _s8ItemDataCMa();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101696EB8);
  }
  return result;
}

uint64_t sub_100BDBD44()
{
  swift_unknownObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_100BDBD84()
{
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_100528D08;
  v3[2] = v2;
  return _swift_task_switch(sub_100BD63EC, 0, 0);
}

uint64_t sub_100BDBE2C()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100BDBE64(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = v2[2];
  uint64_t v7 = v2[3];
  uint64_t v8 = v2[4];
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v9;
  *uint64_t v9 = v3;
  v9[1] = sub_100528488;
  return sub_100BD7F04(a1, a2, v6, v7, v8);
}

uint64_t sub_100BDBF28()
{
  uint64_t v1 = type metadata accessor for URL();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 40) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  swift_unknownObjectRelease();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release();

  return _swift_deallocObject(v0, v6, v5);
}

uint64_t sub_100BDC018(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for URL() - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = v1[2];
  uint64_t v7 = v1[3];
  uint64_t v8 = v1[4];
  uint64_t v9 = (uint64_t)v1 + v5;
  uint64_t v10 = *(void *)((char *)v1 + ((*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v11;
  *uint64_t v11 = v2;
  v11[1] = sub_100528D08;
  return sub_100BD8604(a1, v6, v7, v8, v9, v10);
}

unint64_t sub_100BDC14C()
{
  unint64_t result = qword_101696F30;
  if (!qword_101696F30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101696F30);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for CRLStencilLibrary.FakeDataStore.FakeDataStoreError(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x100BDC23CLL);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLStencilLibrary.FakeDataStore.FakeDataStoreError()
{
  return &type metadata for CRLStencilLibrary.FakeDataStore.FakeDataStoreError;
}

unint64_t sub_100BDC278()
{
  unint64_t result = qword_101696F40;
  if (!qword_101696F40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101696F40);
  }
  return result;
}

unint64_t sub_100BDC2CC()
{
  unint64_t result = sub_100A39814((uint64_t)_swiftEmptyArrayStorage);
  qword_101696F50 = result;
  return result;
}

uint64_t type metadata accessor for CRLAnalyticsUserSettings()
{
  return self;
}

uint64_t sub_100BDC318(char a1, char a2, char a3, char a4, char a5)
{
  if (qword_10166FC90 != -1) {
    swift_once();
  }
  id v10 = [objc_allocWithZone((Class)NSNumber) initWithBool:a1 & 1];
  swift_beginAccess();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v21 = qword_101696F50;
  qword_101696F50 = 0x8000000000000000;
  sub_100973904((uint64_t)v10, 0xD000000000000011, 0x8000000101279A70, isUniquelyReferenced_nonNull_native);
  qword_101696F50 = v21;
  swift_bridgeObjectRelease();
  swift_endAccess();
  id v12 = [objc_allocWithZone((Class)NSNumber) initWithBool:a2 & 1];
  swift_beginAccess();
  char v13 = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v22 = qword_101696F50;
  qword_101696F50 = 0x8000000000000000;
  sub_100973904((uint64_t)v12, 0xD000000000000013, 0x8000000101279A90, v13);
  qword_101696F50 = v22;
  swift_bridgeObjectRelease();
  swift_endAccess();
  id v14 = [objc_allocWithZone((Class)NSNumber) initWithBool:a3 & 1];
  swift_beginAccess();
  char v15 = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v23 = qword_101696F50;
  qword_101696F50 = 0x8000000000000000;
  sub_100973904((uint64_t)v14, 0xD000000000000014, 0x8000000101279AB0, v15);
  qword_101696F50 = v23;
  swift_bridgeObjectRelease();
  swift_endAccess();
  id v16 = [objc_allocWithZone((Class)NSNumber) initWithBool:a4 & 1];
  swift_beginAccess();
  char v17 = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v24 = qword_101696F50;
  qword_101696F50 = 0x8000000000000000;
  sub_100973904((uint64_t)v16, 0xD000000000000013, 0x8000000101279AD0, v17);
  qword_101696F50 = v24;
  swift_bridgeObjectRelease();
  swift_endAccess();
  id v18 = [objc_allocWithZone((Class)NSNumber) initWithBool:a5 & 1];
  swift_beginAccess();
  char v19 = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v25 = qword_101696F50;
  qword_101696F50 = 0x8000000000000000;
  sub_100973904((uint64_t)v18, 0xD00000000000001DLL, 0x8000000101279AF0, v19);
  qword_101696F50 = v25;
  swift_bridgeObjectRelease();
  return swift_endAccess();
}

void sub_100BDC638(char a1, char a2, char a3, char a4, char a5, char a6)
{
  if (qword_10166FC90 != -1) {
    swift_once();
  }
  id v12 = [objc_allocWithZone((Class)NSNumber) initWithBool:a6 & 1];
  swift_beginAccess();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v17 = qword_101696F50;
  qword_101696F50 = 0x8000000000000000;
  sub_100973904((uint64_t)v12, 0xD00000000000001ELL, 0x8000000101279A30, isUniquelyReferenced_nonNull_native);
  qword_101696F50 = v17;
  swift_bridgeObjectRelease();
  swift_endAccess();
  sub_100BDC318(a1 & 1, a2 & 1, a3 & 1, a4 & 1, a5 & 1);
  id v14 = self;
  NSString v15 = String._bridgeToObjectiveC()();
  sub_10057BCD8();
  swift_bridgeObjectRetain();
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v14 sendEventInDomain:v15 lazily:1 eventPayload:isa];
}

uint64_t sub_100BDC7FC(void *a1, uint64_t a2, uint64_t a3)
{
  unsigned int v4 = v3;
  id v8 = [v4 boardItemFactory];
  if (!v8)
  {
    id v18 = _swiftEmptyArrayStorage;
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"extractAdaptiveGlyphs(from:in:)", 31, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLApplication/CRLBoardItemProviderFactory+AdaptiveGlyphs.swift", 117, 2, 27, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"extractAdaptiveGlyphs(from:in:)", 31, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLApplication/CRLBoardItemProviderFactory+AdaptiveGlyphs.swift", 117, 2, 27);
    return (uint64_t)v18;
  }
  uint64_t v9 = v8;
  uint64_t v20 = _swiftEmptyArrayStorage;
  uint64_t v10 = NSAdaptiveImageGlyphAttributeName;
  uint64_t v11 = (void *)swift_allocObject();
  _OWORD v11[2] = v4;
  void v11[3] = &v20;
  v11[4] = v9;
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = sub_100BDCF30;
  *(void *)(v12 + 24) = v11;
  aBlock[4] = sub_100BDCF4C;
  aBlock[5] = v12;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = *(void *)"";
  aBlock[2] = sub_100BDCDC8;
  aBlock[3] = &unk_101527D10;
  char v13 = _Block_copy(aBlock);
  id v14 = v4;
  id v15 = v9;
  swift_retain();
  swift_release();
  [a1 enumerateAttribute:v10 inRange:a2 options:a3 usingBlock:v13];

  _Block_release(v13);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if ((isEscapingClosureAtFileLocation & 1) == 0)
  {
    id v18 = v20;
    swift_release();
    return (uint64_t)v18;
  }
  __break(1u);
  return result;
}

void sub_100BDCA5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, void *a7)
{
  uint64_t v10 = type metadata accessor for UTType();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10, v12);
  id v14 = (char *)&v28[-1] - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100557A70(a1, (uint64_t)v29);
  if (v29[3])
  {
    sub_100BDCF8C();
    if (swift_dynamicCast())
    {
      id v15 = (void *)v28[0];
      v29[0] = 0;
      v29[1] = 0;
      v28[0] = 0;
      v28[1] = 0;
      id v16 = [v15 imageForProposedSize:v29 scaleFactor:v28 imageOffset:320.0 imageSize:320.0];
      uint64_t v17 = v16;
      if (v16 && (id v18 = v16, v19 = sub_1009B40E0(), v21 = v20, v18, v21 >> 60 != 15))
      {
        unint64_t v27 = v15;
        sub_100510D4C(v19, v21);
        static UTType.heic.getter();
        uint64_t v22 = v19;
        UTType.identifier.getter();
        (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
        id v23 = objc_allocWithZone((Class)CRLInfoImporterBoardItemProvider);
        id v24 = a7;
        Class isa = Data._bridgeToObjectiveC()().super.isa;
        NSString v26 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        [v23 initWithData:isa type:v26 boardItemFactory:v24];

        sub_100514260(v22, v21);
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)((*a6 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*a6 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();

        sub_100514260(v22, v21);
        uint64_t v17 = v27;
      }
      else
      {
        sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"extractAdaptiveGlyphs(from:in:)", 31, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLApplication/CRLBoardItemProviderFactory+AdaptiveGlyphs.swift", 117, 2, 48, (uint64_t)"Unable to extract adative glyph from attributed text", 52, 2u, (uint64_t)_swiftEmptyArrayStorage);
        sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"extractAdaptiveGlyphs(from:in:)", 31, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLApplication/CRLBoardItemProviderFactory+AdaptiveGlyphs.swift", 117, 2, 48);
      }
    }
  }
  else
  {
    sub_10052E2B0((uint64_t)v29);
  }
}

uint64_t sub_100BDCDC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = *(void (**)(long long *, uint64_t, uint64_t, uint64_t))(a1 + 32);
  if (a2)
  {
    *((void *)&v12 + 1) = swift_getObjectType();
    *(void *)&long long v11 = a2;
  }
  else
  {
    long long v11 = 0u;
    long long v12 = 0u;
  }
  swift_unknownObjectRetain();
  v9(&v11, a3, a4, a5);
  return sub_10052E2B0((uint64_t)&v11);
}

uint64_t sub_100BDCEF0()
{
  return _swift_deallocObject(v0, 40, 7);
}

void sub_100BDCF30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_100BDCA5C(a1, a2, a3, a4, *(void *)(v4 + 16), *(void **)(v4 + 24), *(void **)(v4 + 32));
}

uint64_t sub_100BDCF3C()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100BDCF4C()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_100BDCF74(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100BDCF84()
{
  return swift_release();
}

unint64_t sub_100BDCF8C()
{
  unint64_t result = qword_101697000;
  if (!qword_101697000)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_101697000);
  }
  return result;
}

void static CRLAnalyticsFeatureUsed.logFeatureUsed(named:)(uint64_t a1)
{
  uint64_t v2 = self;
  NSString v3 = String._bridgeToObjectiveC()();
  _s8Freeform23CRLAnalyticsFeatureUsedC14featurePayload3forSDySSSo8NSObjectCGAA0bC4NameO_tFZ_0(a1);
  sub_10057BCD8();
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v2 sendEventInDomain:v3 lazily:1 eventPayload:isa];
}

id CRLAnalyticsFeatureUsed.init()()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLAnalyticsFeatureUsed();
  return [super init];
}

id CRLAnalyticsFeatureUsed.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLAnalyticsFeatureUsed();
  return [super dealloc];
}

unint64_t _s8Freeform23CRLAnalyticsFeatureUsedC14featurePayload3forSDySSSo8NSObjectCGAA0bC4NameO_tFZ_0(uint64_t a1)
{
  sub_100E19B34(a1);
  if (v2)
  {
    sub_1005057FC(&qword_101679638);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_10117E810;
    *(void *)(inited + 32) = 0x4E65727574616566;
    *(void *)(inited + 40) = 0xEB00000000656D61;
    id v4 = objc_allocWithZone((Class)NSString);
    NSString v5 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v6 = [v4 initWithString:v5];

    *(void *)(inited + 48) = v6;
    uint64_t v7 = (double *)inited;
  }
  else
  {
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t v8 = swift_initStackObject();
    *(_OWORD *)(v8 + 16) = xmmword_10117E810;
    *(void *)(v8 + 56) = &type metadata for Int;
    *(void *)(v8 + 64) = &protocol witness table for Int;
    *(void *)(v8 + 32) = a1;
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"featurePayload(for:)", 20, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLApplication/CRLAnalyticsFeatureUsed.swift", 98, 2, 19, (uint64_t)"Feature Name: (%lu) for analytics is unrecognized", 49, 2u, v8);
    sub_1005598CC(v8, (uint64_t)"featurePayload(for:)", 20, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLApplication/CRLAnalyticsFeatureUsed.swift", 98, 2, 19);
    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();
    uint64_t v7 = _swiftEmptyArrayStorage;
  }
  return sub_100A39814((uint64_t)v7);
}

uint64_t type metadata accessor for CRLAnalyticsFeatureUsed()
{
  return self;
}

uint64_t sub_100BDD488(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + OBJC_IVAR____TtC8Freeform25CRLChunkedRealTimeMessage_encrypted) != *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC8Freeform40CRLUnorderedChunkedRealTimeMessageBuffer_encrypted))
  {
    sub_10080AEB8();
    swift_allocError();
    char v3 = 2;
LABEL_9:
    *uint64_t v2 = v3;
    return swift_willThrow();
  }
  NSString v5 = (uint64_t *)(v1 + OBJC_IVAR____TtC8Freeform40CRLUnorderedChunkedRealTimeMessageBuffer_chunksBuffer);
  uint64_t result = swift_beginAccess();
  int v7 = *(unsigned __int16 *)(v1 + OBJC_IVAR____TtC8Freeform40CRLUnorderedChunkedRealTimeMessageBuffer_lastIndex) + 1;
  if ((v7 & 0x10000) == 0)
  {
    if (*(void *)(*v5 + 16) == (unsigned __int16)v7)
    {
      sub_10080AEB8();
      swift_allocError();
      char v3 = 1;
    }
    else
    {
      if (static UUID.== infix(_:_:)())
      {
        unsigned __int16 v8 = *(_WORD *)(a1 + OBJC_IVAR____TtC8Freeform25CRLChunkedRealTimeMessage_index);
        swift_beginAccess();
        swift_retain();
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v10 = *v5;
        *NSString v5 = 0x8000000000000000;
        sub_100973FBC(a1, v8, isUniquelyReferenced_nonNull_native);
        *NSString v5 = v10;
        swift_bridgeObjectRelease();
        return swift_endAccess();
      }
      sub_10080AEB8();
      swift_allocError();
      char v3 = 0;
    }
    goto LABEL_9;
  }
  __break(1u);
  return result;
}

uint64_t sub_100BDD650()
{
  swift_beginAccess();
  uint64_t v0 = swift_bridgeObjectRetain();
  *(void *)&long long v8 = sub_1006B9CE8(v0);
  sub_100BDDAA0((uint64_t *)&v8);
  swift_bridgeObjectRelease();
  uint64_t v1 = v8;
  long long v8 = xmmword_101180360;
  if ((v1 & 0x8000000000000000) == 0 && (v1 & 0x4000000000000000) == 0)
  {
    uint64_t v2 = *(void *)(v1 + 16);
    if (v2) {
      goto LABEL_4;
    }
LABEL_12:
    swift_release();
    return 0;
  }
  swift_bridgeObjectRetain();
  uint64_t v2 = _CocoaArrayWrapper.endIndex.getter();
  swift_release();
  if (!v2) {
    goto LABEL_12;
  }
LABEL_4:
  if (v2 < 1)
  {
    __break(1u);
    uint64_t result = swift_release();
    __break(1u);
  }
  else
  {
    uint64_t v3 = 0;
    do
    {
      if ((v1 & 0xC000000000000001) != 0)
      {
        uint64_t v4 = specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        uint64_t v4 = *(void *)(v1 + 8 * v3 + 32);
        swift_retain();
      }
      ++v3;
      uint64_t v5 = *(void *)(v4 + OBJC_IVAR____TtC8Freeform25CRLChunkedRealTimeMessage_data);
      unint64_t v6 = *(void *)(v4 + OBJC_IVAR____TtC8Freeform25CRLChunkedRealTimeMessage_data + 8);
      sub_100510D4C(v5, v6);
      Data.append(_:)();
      sub_100510084(v5, v6);
      swift_release();
    }
    while (v2 != v3);
    swift_release();
    return v8;
  }
  return result;
}

uint64_t sub_100BDD7D8()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC8Freeform40CRLUnorderedChunkedRealTimeMessageBuffer_chainID;
  uint64_t v2 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t sub_100BDD888()
{
  return type metadata accessor for CRLUnorderedChunkedRealTimeMessageBuffer();
}

uint64_t type metadata accessor for CRLUnorderedChunkedRealTimeMessageBuffer()
{
  uint64_t result = qword_101697070;
  if (!qword_101697070) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100BDD8DC()
{
  uint64_t result = type metadata accessor for UUID();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_100BDD990@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC8Freeform40CRLUnorderedChunkedRealTimeMessageBuffer_chainID;
  uint64_t v4 = type metadata accessor for UUID();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t sub_100BDDA04()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC8Freeform40CRLUnorderedChunkedRealTimeMessageBuffer_chunksBuffer;
  uint64_t result = swift_beginAccess();
  int v3 = *(unsigned __int16 *)(v0 + OBJC_IVAR____TtC8Freeform40CRLUnorderedChunkedRealTimeMessageBuffer_lastIndex) + 1;
  if ((v3 & 0x10000) == 0) {
    return *(void *)(*(void *)v1 + 16) == (unsigned __int16)v3;
  }
  __break(1u);
  return result;
}

uint64_t sub_100BDDA74()
{
  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC8Freeform40CRLUnorderedChunkedRealTimeMessageBuffer_encrypted);
}

uint64_t sub_100BDDA84(uint64_t a1)
{
  return sub_100BDD488(a1);
}

uint64_t sub_100BDDAA0(uint64_t *a1)
{
  uint64_t v2 = *a1;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a1 = v2;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    uint64_t v2 = sub_100F6D440(v2);
    *a1 = v2;
  }
  uint64_t v4 = *(void *)(v2 + 16);
  v6[0] = v2 + 32;
  v6[1] = v4;
  sub_100BDDB1C(v6);
  return specialized ContiguousArray._endMutation()();
}

Swift::Int sub_100BDDB1C(uint64_t *a1)
{
  uint64_t v2 = v1;
  Swift::Int v4 = a1[1];
  Swift::Int result = _minimumMergeRunLength(_:)(v4);
  if (result >= v4)
  {
    if (v4 < 0) {
      goto LABEL_129;
    }
    if (v4) {
      return sub_100BDE1A8(0, v4, 1, a1);
    }
    return result;
  }
  if (v4 >= 0) {
    uint64_t v6 = v4;
  }
  else {
    uint64_t v6 = v4 + 1;
  }
  if (v4 < -1) {
    goto LABEL_137;
  }
  Swift::Int v7 = result;
  BOOL v89 = a1;
  if (v4 < 2)
  {
    uint64_t v10 = _swiftEmptyArrayStorage;
    uint64_t v95 = (uint64_t)_swiftEmptyArrayStorage;
    __dst = (char *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 32);
    if (v4 != 1)
    {
      unint64_t v13 = *(void *)&_swiftEmptyArrayStorage[2];
LABEL_95:
      unint64_t v81 = v10;
      if (v13 >= 2)
      {
        uint64_t v82 = *v89;
        do
        {
          unint64_t v83 = v13 - 2;
          if (v13 < 2) {
            goto LABEL_124;
          }
          if (!v82) {
            goto LABEL_136;
          }
          uint64_t v84 = v81;
          double v85 = v81[2 * v83 + 4];
          double v86 = v81[2 * v13 + 3];
          sub_100BDE21C((char *)(v82 + 8 * *(void *)&v85), (char *)(v82 + 8 * *(void *)&v81[2 * v13 + 2]), v82 + 8 * *(void *)&v86, __dst);
          if (v2) {
            break;
          }
          if (*(uint64_t *)&v86 < *(uint64_t *)&v85) {
            goto LABEL_125;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v84 = sub_100F69F28((uint64_t)v84);
          }
          if (v83 >= *((void *)v84 + 2)) {
            goto LABEL_126;
          }
          uint64_t v87 = &v84[2 * v83 + 4];
          *uint64_t v87 = v85;
          v87[1] = v86;
          unint64_t v88 = *((void *)v84 + 2);
          if (v13 > v88) {
            goto LABEL_127;
          }
          memmove(&v84[2 * v13 + 2], &v84[2 * v13 + 4], 16 * (v88 - v13));
          unint64_t v81 = v84;
          *((void *)v84 + 2) = v88 - 1;
          unint64_t v13 = v88 - 1;
        }
        while (v88 > 2);
      }
LABEL_92:
      swift_bridgeObjectRelease();
      *(void *)((v95 & 0xFFFFFFFFFFFFFF8) + 0x10) = 0;
      specialized Array._endMutation()();
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    uint64_t v8 = v6 >> 1;
    type metadata accessor for CRLChunkedRealTimeMessage();
    uint64_t v9 = static Array._allocateBufferUninitialized(minimumCapacity:)();
    *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10) = v8;
    __dst = (char *)((v9 & 0xFFFFFFFFFFFFFF8) + 32);
    uint64_t v95 = v9;
  }
  Swift::Int v11 = 0;
  uint64_t v12 = *a1;
  uint64_t v90 = *a1 - 8;
  uint64_t v10 = _swiftEmptyArrayStorage;
  Swift::Int v91 = v7;
  Swift::Int v92 = v4;
  uint64_t v93 = *a1;
  while (1)
  {
    Swift::Int v14 = v11++;
    if (v11 < v4)
    {
      unsigned int v15 = *(unsigned __int16 *)(*(void *)(v12 + 8 * v11) + OBJC_IVAR____TtC8Freeform25CRLChunkedRealTimeMessage_index);
      unsigned int v16 = *(unsigned __int16 *)(*(void *)(v12 + 8 * v14) + OBJC_IVAR____TtC8Freeform25CRLChunkedRealTimeMessage_index);
      Swift::Int v11 = v14 + 2;
      if (v14 + 2 < v4)
      {
        unsigned int v17 = v15;
        while (1)
        {
          unsigned int v18 = *(unsigned __int16 *)(*(void *)(v12 + 8 * v11)
                                    + OBJC_IVAR____TtC8Freeform25CRLChunkedRealTimeMessage_index);
          if (v15 < v16 == v18 >= v17) {
            break;
          }
          ++v11;
          unsigned int v17 = v18;
          if (v4 == v11)
          {
            Swift::Int v11 = v4;
            break;
          }
        }
      }
      if (v15 < v16)
      {
        if (v11 < v14) {
          goto LABEL_130;
        }
        if (v14 < v11)
        {
          uint64_t v19 = (uint64_t *)(v90 + 8 * v11);
          Swift::Int v20 = v11;
          Swift::Int v21 = v14;
          uint64_t v22 = (uint64_t *)(v12 + 8 * v14);
          do
          {
            if (v21 != --v20)
            {
              if (!v12) {
                goto LABEL_135;
              }
              uint64_t v23 = *v22;
              *uint64_t v22 = *v19;
              *uint64_t v19 = v23;
            }
            ++v21;
            --v19;
            ++v22;
          }
          while (v21 < v20);
        }
      }
    }
    if (v11 >= v4) {
      goto LABEL_45;
    }
    if (__OFSUB__(v11, v14)) {
      goto LABEL_128;
    }
    if (v11 - v14 >= v7) {
      goto LABEL_45;
    }
    Swift::Int v24 = v14 + v7;
    if (__OFADD__(v14, v7)) {
      goto LABEL_131;
    }
    if (v24 >= v4) {
      Swift::Int v24 = v4;
    }
    if (v24 < v14) {
      break;
    }
    if (v11 != v24)
    {
      uint64_t v25 = (uint64_t *)(v90 + 8 * v11);
      do
      {
        uint64_t v26 = *(void *)(v12 + 8 * v11);
        Swift::Int v27 = v14;
        unint64_t v28 = v25;
        do
        {
          uint64_t v29 = *v28;
          if (*(unsigned __int16 *)(v26 + OBJC_IVAR____TtC8Freeform25CRLChunkedRealTimeMessage_index) >= *(unsigned __int16 *)(*v28 + OBJC_IVAR____TtC8Freeform25CRLChunkedRealTimeMessage_index)) {
            break;
          }
          if (!v12) {
            goto LABEL_133;
          }
          uint64_t *v28 = v26;
          v28[1] = v29;
          --v28;
          ++v27;
        }
        while (v11 != v27);
        ++v11;
        ++v25;
      }
      while (v11 != v24);
      Swift::Int v11 = v24;
    }
LABEL_45:
    if (v11 < v14) {
      goto LABEL_123;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v10 = sub_100F697E0(0, *((void *)v10 + 2) + 1, 1, (uint64_t)v10);
    }
    unint64_t v31 = *((void *)v10 + 2);
    unint64_t v30 = *((void *)v10 + 3);
    unint64_t v13 = v31 + 1;
    uint64_t v12 = v93;
    if (v31 >= v30 >> 1)
    {
      unint64_t v80 = sub_100F697E0((double *)(v30 > 1), v31 + 1, 1, (uint64_t)v10);
      uint64_t v12 = v93;
      uint64_t v10 = v80;
    }
    *((void *)v10 + 2) = v13;
    unint64_t v32 = v10 + 4;
    unint64_t v33 = &v10[2 * v31 + 4];
    *(void *)unint64_t v33 = v14;
    *((void *)v33 + 1) = v11;
    if (v31)
    {
      while (1)
      {
        unint64_t v34 = v13 - 1;
        if (v13 >= 4)
        {
          unint64_t v39 = &v32[2 * v13];
          uint64_t v40 = *((void *)v39 - 8);
          uint64_t v41 = *((void *)v39 - 7);
          BOOL v45 = __OFSUB__(v41, v40);
          uint64_t v42 = v41 - v40;
          if (v45) {
            goto LABEL_112;
          }
          uint64_t v44 = *((void *)v39 - 6);
          uint64_t v43 = *((void *)v39 - 5);
          BOOL v45 = __OFSUB__(v43, v44);
          uint64_t v37 = v43 - v44;
          char v38 = v45;
          if (v45) {
            goto LABEL_113;
          }
          unint64_t v46 = v13 - 2;
          uint64_t v47 = &v32[2 * v13 - 4];
          uint64_t v49 = *(void *)v47;
          uint64_t v48 = *((void *)v47 + 1);
          BOOL v45 = __OFSUB__(v48, v49);
          uint64_t v50 = v48 - v49;
          if (v45) {
            goto LABEL_115;
          }
          BOOL v45 = __OFADD__(v37, v50);
          uint64_t v51 = v37 + v50;
          if (v45) {
            goto LABEL_118;
          }
          if (v51 >= v42)
          {
            uint64_t v69 = &v32[2 * v34];
            uint64_t v71 = *(void *)v69;
            uint64_t v70 = *((void *)v69 + 1);
            BOOL v45 = __OFSUB__(v70, v71);
            uint64_t v72 = v70 - v71;
            if (v45) {
              goto LABEL_122;
            }
            BOOL v62 = v37 < v72;
            goto LABEL_82;
          }
        }
        else
        {
          if (v13 != 3)
          {
            uint64_t v63 = *((void *)v10 + 4);
            uint64_t v64 = *((void *)v10 + 5);
            BOOL v45 = __OFSUB__(v64, v63);
            uint64_t v56 = v64 - v63;
            char v57 = v45;
            goto LABEL_76;
          }
          uint64_t v36 = *((void *)v10 + 4);
          uint64_t v35 = *((void *)v10 + 5);
          BOOL v45 = __OFSUB__(v35, v36);
          uint64_t v37 = v35 - v36;
          char v38 = v45;
        }
        if (v38) {
          goto LABEL_114;
        }
        unint64_t v46 = v13 - 2;
        unint64_t v52 = &v32[2 * v13 - 4];
        uint64_t v54 = *(void *)v52;
        uint64_t v53 = *((void *)v52 + 1);
        BOOL v55 = __OFSUB__(v53, v54);
        uint64_t v56 = v53 - v54;
        char v57 = v55;
        if (v55) {
          goto LABEL_117;
        }
        unint64_t v58 = &v32[2 * v34];
        uint64_t v60 = *(void *)v58;
        uint64_t v59 = *((void *)v58 + 1);
        BOOL v45 = __OFSUB__(v59, v60);
        uint64_t v61 = v59 - v60;
        if (v45) {
          goto LABEL_120;
        }
        if (__OFADD__(v56, v61)) {
          goto LABEL_121;
        }
        if (v56 + v61 >= v37)
        {
          BOOL v62 = v37 < v61;
LABEL_82:
          if (v62) {
            unint64_t v34 = v46;
          }
          goto LABEL_84;
        }
LABEL_76:
        if (v57) {
          goto LABEL_116;
        }
        unint64_t v65 = &v32[2 * v34];
        uint64_t v67 = *(void *)v65;
        uint64_t v66 = *((void *)v65 + 1);
        BOOL v45 = __OFSUB__(v66, v67);
        uint64_t v68 = v66 - v67;
        if (v45) {
          goto LABEL_119;
        }
        if (v68 < v56) {
          goto LABEL_14;
        }
LABEL_84:
        unint64_t v73 = v34 - 1;
        if (v34 - 1 >= v13)
        {
          __break(1u);
LABEL_109:
          __break(1u);
LABEL_110:
          __break(1u);
LABEL_111:
          __break(1u);
LABEL_112:
          __break(1u);
LABEL_113:
          __break(1u);
LABEL_114:
          __break(1u);
LABEL_115:
          __break(1u);
LABEL_116:
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
          goto LABEL_132;
        }
        if (!v12) {
          goto LABEL_134;
        }
        uint64_t v74 = v10;
        uint64_t v75 = &v32[2 * v73];
        uint64_t v76 = *(void *)v75;
        uint64_t v77 = &v32[2 * v34];
        double v78 = v77[1];
        sub_100BDE21C((char *)(v12 + 8 * *(void *)v75), (char *)(v12 + 8 * *(void *)v77), v12 + 8 * *(void *)&v78, __dst);
        if (v1) {
          goto LABEL_92;
        }
        if (*(uint64_t *)&v78 < v76) {
          goto LABEL_109;
        }
        if (v34 > *((void *)v74 + 2)) {
          goto LABEL_110;
        }
        *(void *)uint64_t v75 = v76;
        v32[2 * v73 + 1] = v78;
        unint64_t v79 = *((void *)v74 + 2);
        if (v34 >= v79) {
          goto LABEL_111;
        }
        uint64_t v10 = v74;
        unint64_t v13 = v79 - 1;
        memmove(&v32[2 * v34], v77 + 2, 16 * (v79 - 1 - v34));
        *((void *)v74 + 2) = v79 - 1;
        uint64_t v12 = v93;
        if (v79 <= 2) {
          goto LABEL_14;
        }
      }
    }
    unint64_t v13 = 1;
LABEL_14:
    Swift::Int v7 = v91;
    Swift::Int v4 = v92;
    if (v11 >= v92)
    {
      uint64_t v2 = v1;
      goto LABEL_95;
    }
  }
LABEL_132:
  __break(1u);
LABEL_133:
  __break(1u);
LABEL_134:
  __break(1u);
LABEL_135:
  __break(1u);
LABEL_136:
  __break(1u);
LABEL_137:
  Swift::Int result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100BDE1A8(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  if (a3 != a2)
  {
    uint64_t v4 = *a4;
    uint64_t v5 = *a4 + 8 * a3 - 8;
LABEL_5:
    uint64_t v6 = *(void *)(v4 + 8 * a3);
    uint64_t v7 = result;
    uint64_t v8 = (uint64_t *)v5;
    while (1)
    {
      uint64_t v9 = *v8;
      if (*(unsigned __int16 *)(v6 + OBJC_IVAR____TtC8Freeform25CRLChunkedRealTimeMessage_index) >= *(unsigned __int16 *)(*v8 + OBJC_IVAR____TtC8Freeform25CRLChunkedRealTimeMessage_index))
      {
LABEL_4:
        ++a3;
        v5 += 8;
        if (a3 == a2) {
          return result;
        }
        goto LABEL_5;
      }
      if (!v4) {
        break;
      }
      *uint64_t v8 = v6;
      v8[1] = v9;
      --v8;
      if (a3 == ++v7) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_100BDE21C(char *__src, char *a2, unint64_t a3, char *__dst)
{
  uint64_t v4 = __dst;
  uint64_t v6 = a2;
  uint64_t v7 = __src;
  int64_t v8 = a2 - __src;
  int64_t v9 = a2 - __src + 7;
  if (a2 - __src >= 0) {
    int64_t v9 = a2 - __src;
  }
  uint64_t v10 = v9 >> 3;
  uint64_t v11 = a3 - (void)a2;
  uint64_t v12 = a3 - (void)a2 + 7;
  if ((uint64_t)(a3 - (void)a2) >= 0) {
    uint64_t v12 = a3 - (void)a2;
  }
  uint64_t v13 = v12 >> 3;
  Swift::Int v24 = __src;
  uint64_t v23 = __dst;
  if (v10 >= v12 >> 3)
  {
    if (v11 >= -7)
    {
      if (__dst != a2 || &a2[8 * v13] <= __dst) {
        memmove(__dst, a2, 8 * v13);
      }
      unsigned int v16 = &v4[8 * v13];
      uint64_t v22 = v16;
      Swift::Int v24 = v6;
      if (v7 < v6 && v11 >= 8)
      {
        unsigned int v17 = (char *)(a3 - 8);
        while (1)
        {
          unsigned int v18 = v17 + 8;
          uint64_t v19 = v6 - 8;
          uint64_t v20 = *((void *)v6 - 1);
          if (*(unsigned __int16 *)(*((void *)v16 - 1) + OBJC_IVAR____TtC8Freeform25CRLChunkedRealTimeMessage_index) >= *(unsigned __int16 *)(v20 + OBJC_IVAR____TtC8Freeform25CRLChunkedRealTimeMessage_index))
          {
            uint64_t v22 = v16 - 8;
            if (v18 < v16 || v17 >= v16 || v18 != v16) {
              *(void *)unsigned int v17 = *((void *)v16 - 1);
            }
            v16 -= 8;
            if (v6 <= v7) {
              goto LABEL_42;
            }
          }
          else
          {
            if (v18 != v6 || v17 >= v6) {
              *(void *)unsigned int v17 = v20;
            }
            Swift::Int v24 = v6 - 8;
            v6 -= 8;
            if (v19 <= v7) {
              goto LABEL_42;
            }
          }
          v17 -= 8;
          if (v16 <= v4) {
            goto LABEL_42;
          }
        }
      }
      goto LABEL_42;
    }
  }
  else if (v8 >= -7)
  {
    if (__dst != __src || &__src[8 * v10] <= __dst) {
      memmove(__dst, __src, 8 * v10);
    }
    Swift::Int v14 = &v4[8 * v10];
    uint64_t v22 = v14;
    if ((unint64_t)v6 < a3 && v8 >= 8)
    {
      do
      {
        if (*(unsigned __int16 *)(*(void *)v6 + OBJC_IVAR____TtC8Freeform25CRLChunkedRealTimeMessage_index) >= *(unsigned __int16 *)(*(void *)v4 + OBJC_IVAR____TtC8Freeform25CRLChunkedRealTimeMessage_index))
        {
          if (v7 != v4) {
            *(void *)uint64_t v7 = *(void *)v4;
          }
          v4 += 8;
          uint64_t v23 = v4;
          unsigned int v15 = v6;
        }
        else
        {
          unsigned int v15 = v6 + 8;
          if (v7 < v6 || v7 >= v15 || v7 != v6) {
            *(void *)uint64_t v7 = *(void *)v6;
          }
        }
        v7 += 8;
        if (v4 >= v14) {
          break;
        }
        uint64_t v6 = v15;
      }
      while ((unint64_t)v15 < a3);
      Swift::Int v24 = v7;
    }
LABEL_42:
    sub_100F69B50((void **)&v24, (const void **)&v23, &v22);
    return 1;
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100BDE4B4(uint64_t a1)
{
  uint64_t v2 = v1;
  *(void *)(v1 + OBJC_IVAR____TtC8Freeform40CRLUnorderedChunkedRealTimeMessageBuffer_chunksBuffer) = _swiftEmptyDictionarySingleton;
  uint64_t v4 = a1 + OBJC_IVAR____TtC8Freeform25CRLChunkedRealTimeMessage_chainID;
  uint64_t v5 = v2 + OBJC_IVAR____TtC8Freeform40CRLUnorderedChunkedRealTimeMessageBuffer_chainID;
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(v5, v4, v6);
  *(unsigned char *)(v2 + OBJC_IVAR____TtC8Freeform40CRLUnorderedChunkedRealTimeMessageBuffer_encrypted) = *(unsigned char *)(a1 + OBJC_IVAR____TtC8Freeform25CRLChunkedRealTimeMessage_encrypted);
  *(_WORD *)(v2 + OBJC_IVAR____TtC8Freeform40CRLUnorderedChunkedRealTimeMessageBuffer_lastIndex) = *(_WORD *)(a1 + OBJC_IVAR____TtC8Freeform25CRLChunkedRealTimeMessage_lastIndex);
  uint64_t v7 = (uint64_t *)(v2 + OBJC_IVAR____TtC8Freeform40CRLUnorderedChunkedRealTimeMessageBuffer_chunksBuffer);
  unsigned __int16 v8 = *(_WORD *)(a1 + OBJC_IVAR____TtC8Freeform25CRLChunkedRealTimeMessage_index);
  swift_beginAccess();
  swift_retain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v11 = *v7;
  *uint64_t v7 = 0x8000000000000000;
  sub_100973FBC(a1, v8, isUniquelyReferenced_nonNull_native);
  *uint64_t v7 = v11;
  swift_bridgeObjectRelease();
  swift_endAccess();
  return v2;
}

id sub_100BDE78C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int64_t v9 = (char *)objc_allocWithZone(v4);
  uint64_t v10 = &v9[OBJC_IVAR____TtC8Freeform37CRLCommandSetConnectionLineConnection_connectionLineID];
  uint64_t v11 = type metadata accessor for UUID();
  uint64_t v12 = *(void *)(v11 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v10, a1, v11);
  sub_1005107BC(a2, (uint64_t)&v9[OBJC_IVAR____TtC8Freeform37CRLCommandSetConnectionLineConnection_connectedItemID]);
  *(void *)&v9[OBJC_IVAR____TtC8Freeform37CRLCommandSetConnectionLineConnection_chirality] = a3;
  *(void *)&v9[OBJC_IVAR____TtC8Freeform37CRLCommandSetConnectionLineConnection_pathSource] = a4;
  v15.receiver = v9;
  v15.super_class = v4;
  id v13 = [super init];
  sub_100510824(a2);
  (*(void (**)(uint64_t, uint64_t))(v12 + 8))(a1, v11);
  return v13;
}

id sub_100BDEAB8(char *a1, void *a2, uint64_t a3, void *a4)
{
  uint64_t v25 = a3;
  uint64_t v7 = sub_1005057FC((uint64_t *)&unk_101674520);
  __chkstk_darwin(v7 - 8, v8);
  uint64_t v10 = (char *)v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for UUID();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11, v13);
  objc_super v15 = (char *)v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v26 = a1;
  unsigned int v16 = *(void (**)(uint64_t))(**(void **)&a1[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData] + 256);
  uint64_t v17 = swift_retain();
  v16(v17);
  swift_release();
  v18.super.Class isa = UUID._bridgeToObjectiveC()().super.isa;
  uint64_t v19 = *(void (**)(char *, uint64_t))(v12 + 8);
  v19(v15, v11);
  if (a2)
  {
    v24[0] = a4;
    uint64_t v20 = *(void (**)(void))((swift_isaMask & *a2) + 0x88);
    a2 = a2;
    v20();

    (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v10, 0, 1, v11);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
    {
      Class isa = 0;
    }
    else
    {
      Class isa = UUID._bridgeToObjectiveC()().super.isa;
      v19(v10, v11);
    }
    a4 = (void *)v24[0];
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v10, 1, 1, v11);
    Class isa = 0;
  }
  id v22 = [(id)v24[1] initWithConnectionLineID:v18.super.isa connectedItemID:isa chirality:v25 pathSource:a4];

  return v22;
}

id sub_100BDEDE0(char *a1, void *a2, uint64_t a3)
{
  uint64_t v25 = a3;
  uint64_t v5 = sub_1005057FC((uint64_t *)&unk_101674520);
  __chkstk_darwin(v5 - 8, v6);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for UUID();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9, v11);
  uint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = *(void (**)(uint64_t))(**(void **)&a1[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData] + 256);
  uint64_t v15 = swift_retain();
  v14(v15);
  swift_release();
  v16.super.Class isa = UUID._bridgeToObjectiveC()().super.isa;
  uint64_t v17 = *(void (**)(char *, uint64_t))(v10 + 8);
  v17(v13, v9);
  if (a2)
  {
    uint64_t v23 = a1;
    NSUUID v18 = *(void (**)(void))((swift_isaMask & *a2) + 0x88);
    a2 = a2;
    v18();

    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v8, 0, 1, v9);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
    {
      Class isa = 0;
    }
    else
    {
      Class isa = UUID._bridgeToObjectiveC()().super.isa;
      v17(v8, v9);
    }
    a1 = v23;
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v8, 1, 1, v9);
    Class isa = 0;
  }
  id v20 = [v24 initWithConnectionLineID:v16.super.isa connectedItemID:isa chirality:v25 pathSource:0];

  return v20;
}

void sub_100BDF0E4(void *a1, uint64_t a2, int a3)
{
  uint64_t v35 = a2;
  uint64_t v4 = v3;
  int v33 = a3;
  uint64_t v6 = sub_1005057FC((uint64_t *)&unk_101674520);
  __chkstk_darwin(v6 - 8, v7);
  uint64_t v9 = &v32[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v10 = type metadata accessor for UUID();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10, v12);
  uint64_t v14 = &v32[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  Class isa = UUID._bridgeToObjectiveC()().super.isa;
  id v16 = [a1 getBoardItemForUUID:isa];

  if (!v16) {
    goto LABEL_19;
  }
  type metadata accessor for CRLConnectionLineItem();
  uint64_t v17 = swift_dynamicCastClass();
  if (!v17)
  {

LABEL_19:
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"commit(with:transaction:undoable:)", 34, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandSetConnectionLineConnection.swift", 109, 2, 41, (uint64_t)"Unable to retrieve connection line item.", 40, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_100586FD4((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Unable to retrieve connection line item.");
    uint64_t v29 = 41;
    goto LABEL_20;
  }
  uint64_t v18 = v17;
  sub_1005107BC(v4 + OBJC_IVAR____TtC8Freeform37CRLCommandSetConnectionLineConnection_connectedItemID, (uint64_t)v9);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
  {
    sub_100510824((uint64_t)v9);
    uint64_t v19 = 0;
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v11 + 32))(v14, v9, v10);
    Class v20 = UUID._bridgeToObjectiveC()().super.isa;
    uint64_t v19 = [a1 getBoardItemForUUID:v20];

    if (!v19)
    {
      while (1)
      {
        sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"commit(with:transaction:undoable:)", 34, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandSetConnectionLineConnection.swift", 109, 2, 47, (uint64_t)"Unable to retrieve item to connect to connection line.", 54, 2u, (uint64_t)_swiftEmptyArrayStorage);
        sub_100586FD4((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Unable to retrieve item to connect to connection line.");
        uint64_t v29 = 47;
LABEL_20:
        sub_1005871AC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"commit(with:transaction:undoable:)", 34, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandSetConnectionLineConnection.swift", 109, 2, v29);
        SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v30, v31);
        _assertionFailure(_:_:file:line:flags:)();
        __break(1u);
      }
    }
    (*(void (**)(unsigned char *, uint64_t))(v11 + 8))(v14, v10);
  }
  id v21 = v16;
  uint64_t v22 = v34;
  sub_10103405C(v18, (uint64_t)&off_101518040);

  if (v22)
  {

LABEL_16:
    return;
  }
  uint64_t v23 = *(void *)(v4 + OBJC_IVAR____TtC8Freeform37CRLCommandSetConnectionLineConnection_chirality);
  if (v23 == 1)
  {
    sub_1009BF200(v19);
LABEL_12:
    id v24 = *(void **)(v4 + OBJC_IVAR____TtC8Freeform37CRLCommandSetConnectionLineConnection_pathSource);
    if (v24)
    {
      id v25 = v24;
      id v26 = v21;
      id v27 = v25;
      sub_100A9AF5C((uint64_t)v27);
    }
    id v28 = v21;
    sub_101023724(v18, (uint64_t)&off_101518040, v33);

    goto LABEL_16;
  }
  if (!v23)
  {
    sub_1009BEC7C(v19);
    goto LABEL_12;
  }

  uint64_t v36 = v23;
  _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)();
  __break(1u);
}

void sub_100BDF5CC()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC8Freeform37CRLCommandSetConnectionLineConnection_connectionLineID;
  uint64_t v2 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  sub_100510824(v0 + OBJC_IVAR____TtC8Freeform37CRLCommandSetConnectionLineConnection_connectedItemID);
  uint64_t v3 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform37CRLCommandSetConnectionLineConnection_pathSource);
}

id sub_100BDF658()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLCommandSetConnectionLineConnection();
  return [super dealloc];
}

uint64_t sub_100BDF720()
{
  return type metadata accessor for CRLCommandSetConnectionLineConnection();
}

uint64_t type metadata accessor for CRLCommandSetConnectionLineConnection()
{
  uint64_t result = qword_101697170;
  if (!qword_101697170) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_100BDF774()
{
  type metadata accessor for UUID();
  if (v0 <= 0x3F)
  {
    sub_100510764();
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

ValueMetadata *type metadata accessor for CRLCommandSetConnectionLineConnectionChirality()
{
  return &type metadata for CRLCommandSetConnectionLineConnectionChirality;
}

unint64_t sub_100BDF86C()
{
  unint64_t result = qword_101697180;
  if (!qword_101697180)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101697180);
  }
  return result;
}

uint64_t sub_100BDF8C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v6[38] = a5;
  v6[39] = v5;
  v6[36] = a3;
  v6[37] = a4;
  v6[34] = a1;
  v6[35] = a2;
  v6[40] = *v5;
  uint64_t v7 = type metadata accessor for DispatchData();
  v6[41] = v7;
  v6[42] = *(void *)(v7 - 8);
  v6[43] = swift_task_alloc();
  uint64_t v8 = type metadata accessor for UUID();
  v6[44] = v8;
  v6[45] = *(void *)(v8 - 8);
  v6[46] = swift_task_alloc();
  sub_1005057FC(&qword_1016950B0);
  v6[47] = swift_task_alloc();
  v6[48] = swift_task_alloc();
  uint64_t v9 = type metadata accessor for URL();
  v6[49] = v9;
  uint64_t v10 = *(void *)(v9 - 8);
  v6[50] = v10;
  v6[51] = *(void *)(v10 + 64);
  v6[52] = swift_task_alloc();
  v6[53] = swift_task_alloc();
  v6[54] = swift_task_alloc();
  v6[55] = swift_task_alloc();
  return _swift_task_switch(sub_100BDFB04, 0, 0);
}

uint64_t sub_100BDFB04()
{
  uint64_t v1 = *(void *)(v0 + 312);
  objc_super v2 = *(void **)(v1 + 16);
  uint64_t v3 = *(void **)(v1 + 24);
  *(void *)(v0 + 192) = *(void *)(v0 + 320);
  *(void *)(v0 + 200) = &off_101527D90;
  *(void *)(v0 + 168) = v1;
  type metadata accessor for CRLSerializableObjectWriteCoordinator();
  long long v9 = *(_OWORD *)(v0 + 272);
  uint64_t inited = swift_initStackObject();
  *(void *)(v0 + 448) = inited;
  *(void *)(inited + 96) = 0;
  *(_OWORD *)(inited + 16) = v9;
  sub_10053974C((long long *)(v0 + 168), inited + 32);
  *(void *)(inited + 72) = v2;
  *(void *)(inited + 80) = v3;
  *(void *)(inited + 88) = 5;
  swift_unknownObjectRetain();
  swift_retain();
  id v5 = v2;
  id v6 = v3;
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v0 + 456) = v7;
  *uint64_t v7 = v0;
  v7[1] = sub_100BDFC50;
  return sub_1009AD4AC();
}

uint64_t sub_100BDFC50()
{
  *(void *)(*(void *)v1 + 464) = v0;
  swift_task_dealloc();
  if (v0) {
    objc_super v2 = sub_100BE0948;
  }
  else {
    objc_super v2 = sub_100BDFD90;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100BDFD90()
{
  id v1 = objc_allocWithZone((Class)CRLTemporaryDirectory);
  v0[32] = 0;
  id v2 = [v1 initWithError:v0 + 32];
  uint64_t v3 = (void *)v0[32];
  uint64_t v4 = v0[56];
  if (v2)
  {
    id v5 = v2;
    id v6 = v3;
    BOOL v96 = v5;
    id v7 = [v5 URL];
    static URL._unconditionallyBridgeFromObjectiveC(_:)();

    if (*(void *)(v4 + 96))
    {
      uint64_t v8 = *(void **)(v4 + 96);
    }
    else
    {
      sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"assetFileURLMap", 15, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLSerializableObjectWriteCoordinator.swift", 109, 2, 38, (uint64_t)"Reading asset file URL map before writing the object.", 53, 2u, (uint64_t)_swiftEmptyArrayStorage);
      LOBYTE(v89) = 2;
      uint64_t v87 = "Reading asset file URL map before writing the object.";
      uint64_t v88 = 53;
      sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"assetFileURLMap", 15, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLSerializableObjectWriteCoordinator.swift", 109, 2, 38);
      uint64_t v8 = _swiftEmptyDictionarySingleton;
    }
    uint64_t v10 = v0[50];
    uint64_t v11 = v0[45];
    uint64_t v102 = v8;
    uint64_t v13 = v8 + 8;
    uint64_t v12 = v8[8];
    uint64_t v97 = v13;
    uint64_t v14 = -1;
    uint64_t v15 = -1 << *((unsigned char *)v13 - 32);
    if (-v15 < 64) {
      uint64_t v14 = ~(-1 << -(char)v15);
    }
    unint64_t v16 = v14 & v12;
    uint64_t v101 = (void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16);
    uint64_t v104 = (void (**)(void))(v11 + 32);
    uint64_t v108 = (void (**)(unint64_t, uint64_t, uint64_t))(v10 + 32);
    uint64_t v100 = v0[50];
    double v109 = (void (**)(uint64_t, uint64_t))(v10 + 8);
    uint64_t v99 = v0[45];
    uint64_t v105 = (void (**)(uint64_t, uint64_t))(v11 + 8);
    int64_t v98 = (unint64_t)(63 - v15) >> 6;
    swift_bridgeObjectRetain();
    int64_t v110 = 0;
    while (!v16)
    {
      int64_t v23 = v110 + 1;
      if (__OFADD__(v110, 1))
      {
        __break(1u);
LABEL_42:
        __break(1u);
      }
      if (v23 < v98)
      {
        unint64_t v24 = v97[v23];
        if (v24) {
          goto LABEL_15;
        }
        int64_t v25 = v110 + 2;
        ++v110;
        if (v23 + 1 < v98)
        {
          unint64_t v24 = v97[v25];
          if (v24) {
            goto LABEL_18;
          }
          int64_t v110 = v23 + 1;
          if (v23 + 2 < v98)
          {
            unint64_t v24 = v97[v23 + 2];
            if (v24)
            {
              v23 += 2;
LABEL_15:
              unint64_t v16 = (v24 - 1) & v24;
              unint64_t v18 = __clz(__rbit64(v24)) + (v23 << 6);
              int64_t v110 = v23;
LABEL_11:
              uint64_t v19 = v0[49];
              uint64_t v20 = v0[47];
              (*(void (**)(uint64_t, unint64_t, void))(v99 + 16))(v20, v102[6] + *(void *)(v99 + 72) * v18, v0[44]);
              unint64_t v21 = v102[7] + *(void *)(v100 + 72) * v18;
              uint64_t v22 = sub_1005057FC(&qword_1016950B8);
              (*(void (**)(uint64_t, unint64_t, uint64_t))(v100 + 16))(v20 + *(int *)(v22 + 48), v21, v19);
              (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v20, 0, 1, v22);
              goto LABEL_30;
            }
            int64_t v25 = v23 + 3;
            int64_t v110 = v23 + 2;
            if (v23 + 3 < v98)
            {
              unint64_t v24 = v97[v25];
              if (v24)
              {
LABEL_18:
                int64_t v23 = v25;
                goto LABEL_15;
              }
              while (1)
              {
                int64_t v23 = v25 + 1;
                if (__OFADD__(v25, 1)) {
                  goto LABEL_42;
                }
                if (v23 >= v98) {
                  break;
                }
                unint64_t v24 = v97[v23];
                ++v25;
                if (v24) {
                  goto LABEL_15;
                }
              }
              int64_t v110 = v98 - 1;
            }
          }
        }
      }
      uint64_t v26 = v0[47];
      uint64_t v27 = sub_1005057FC(&qword_1016950B8);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v26, 1, 1, v27);
      unint64_t v16 = 0;
LABEL_30:
      uint64_t v28 = v0[48];
      sub_100BE0E60(v0[47], v28);
      uint64_t v29 = sub_1005057FC(&qword_1016950B8);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 48))(v28, 1, v29) == 1)
      {
        uint64_t v111 = v0[55];
        uint64_t v107 = v0[52];
        uint64_t v93 = v0[50];
        uint64_t v94 = v0[51];
        uint64_t v106 = v0[49];
        uint64_t v53 = v0[42];
        uint64_t v52 = v0[43];
        uint64_t v54 = v0[41];
        uint64_t v55 = v0[39];
        uint64_t v90 = v55;
        id v95 = (id)v0[36];
        swift_release();
        uint64_t v56 = *(void *)(v55 + 32);
        char v57 = self;
        uint64_t v58 = v56 + OBJC_IVAR____TtC8Freeform21CRLMemoryWriteChannel_dispatchData;
        swift_beginAccess();
        uint64_t v59 = *(void (**)(uint64_t, uint64_t, uint64_t))(v53 + 16);
        v59(v52, v58, v54);
        uint64_t v60 = (void *)DispatchData._bridgeToObjectiveC()();
        uint64_t v61 = *(void (**)(uint64_t, uint64_t))(v53 + 8);
        v61(v52, v54);
        id v62 = [v57 crl_dataFromDispatchData:v60];

        uint64_t v103 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
        unint64_t v91 = v63;

        uint64_t v64 = *(void *)(v90 + 40) + OBJC_IVAR____TtC8Freeform21CRLMemoryWriteChannel_dispatchData;
        swift_beginAccess();
        v59(v52, v64, v54);
        unint64_t v65 = (void *)DispatchData._bridgeToObjectiveC()();
        v61(v52, v54);
        id v66 = [v57 crl_dataFromDispatchData:v65];

        uint64_t v67 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
        unint64_t v69 = v68;

        NSString v92 = String._bridgeToObjectiveC()();
        (*v101)(v107, v111, v106);
        unint64_t v70 = (*(unsigned __int8 *)(v93 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v93 + 80);
        unint64_t v71 = (v94 + v70 + 7) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v72 = swift_allocObject();
        *(void *)(v72 + 16) = v96;
        (*v108)(v72 + v70, v107, v106);
        unint64_t v73 = (uint64_t *)(v72 + v71);
        uint64_t *v73 = v67;
        v73[1] = v69;
        uint64_t v74 = (uint64_t *)(v72 + ((v71 + 23) & 0xFFFFFFFFFFFFFFF8));
        *uint64_t v74 = v103;
        v74[1] = v91;
        v0[19] = sub_100BE0FC8;
        v0[20] = v72;
        v0[15] = _NSConcreteStackBlock;
        v0[16] = *(void *)"";
        v0[17] = sub_100A2CC28;
        v0[18] = &unk_101527DD8;
        uint64_t v75 = _Block_copy(v0 + 15);
        id v76 = v96;
        sub_100510D4C(v67, v69);
        sub_100510D4C(v103, v91);
        swift_release();
        [v95 registerFileRepresentationForTypeIdentifier:v92 fileOptions:0 visibility:1 loadHandler:v75];
        _Block_release(v75);

        swift_release();
        sub_100510084(v103, v91);
        sub_100510084(v67, v69);

        (*v109)(v111, v106);
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        uint64_t v77 = (uint64_t (*)(void))v0[1];
        goto LABEL_38;
      }
      unint64_t v30 = v0[54];
      uint64_t v31 = v0[49];
      uint64_t v32 = v0[48] + *(int *)(v29 + 48);
      (*v104)(v0[46]);
      (*v108)(v30, v32, v31);
      UUID.uuidString.getter();
      URL.lastPathComponent.getter();
      NSString v33 = String._bridgeToObjectiveC()();
      NSString v34 = String._bridgeToObjectiveC()();
      NSString v35 = [v34 pathExtension];

      if (!v35)
      {
        static String._unconditionallyBridgeFromObjectiveC(_:)();
        NSString v35 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
      }
      id v36 = [v33 stringByAppendingPathComponent:v35, v87, v88, v89];

      static String._unconditionallyBridgeFromObjectiveC(_:)();
      URL.appendingPathComponent(_:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      id v37 = [self defaultManager];
      URL._bridgeToObjectiveC()(v38);
      uint64_t v40 = v39;
      URL._bridgeToObjectiveC()(v41);
      uint64_t v43 = v42;
      v0[33] = 0;
      LODWORD(v36) = [v37 copyItemAtURL:v40 toURL:v42 error:v0 + 33];

      uint64_t v44 = (void *)v0[33];
      if (!v36)
      {
        uint64_t v78 = v0[55];
        uint64_t v80 = v0[53];
        uint64_t v79 = v0[54];
        uint64_t v81 = v0[49];
        uint64_t v82 = v0[46];
        uint64_t v83 = v0[44];
        id v84 = v44;
        _convertNSErrorToError(_:)();

        swift_willThrow();
        swift_release();

        double v85 = *v109;
        (*v109)(v80, v81);
        v85(v79, v81);
        (*v105)(v82, v83);
        swift_release();
        v85(v78, v81);
        goto LABEL_37;
      }
      uint64_t v46 = v0[53];
      uint64_t v45 = v0[54];
      uint64_t v47 = v0[49];
      uint64_t v48 = v0[46];
      uint64_t v49 = v0[44];
      uint64_t v50 = *v109;
      id v51 = v44;
      v50(v46, v47);
      v50(v45, v47);
      (*v105)(v48, v49);
    }
    unint64_t v17 = __clz(__rbit64(v16));
    v16 &= v16 - 1;
    unint64_t v18 = v17 | (v110 << 6);
    goto LABEL_11;
  }
  id v9 = v3;
  _convertNSErrorToError(_:)();

  swift_willThrow();
  swift_release();
LABEL_37:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v77 = (uint64_t (*)(void))v0[1];
LABEL_38:
  return v77();
}

uint64_t sub_100BE0948()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  id v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100BE0A48(void (*a1)(char *, void, void), uint64_t a2, uint64_t a3, uint64_t a4)
{
  v20[1] = a2;
  unint64_t v21 = a1;
  uint64_t v5 = sub_1005057FC(&qword_101672E90);
  __chkstk_darwin(v5 - 8, v6);
  uint64_t v8 = (char *)v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for URL();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9, v11);
  uint64_t v13 = (char *)v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14, v15);
  unint64_t v17 = (char *)v20 - v16;
  URL.appendingPathComponent(_:)();
  Data.write(to:options:)();
  URL.appendingPathComponent(_:)();
  Data.write(to:options:)();
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v8, a4, v9);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v8, 0, 1, v9);
  v21(v8, 0, 0);
  sub_1005CCBB8((uint64_t)v8);
  uint64_t v19 = *(void (**)(char *, uint64_t))(v10 + 8);
  v19(v13, v9);
  v19(v17, v9);
  return 0;
}

uint64_t sub_100BE0D30()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for CRLItemProviderWriteAssistant()
{
  return self;
}

id sub_100BE0DA4()
{
  return *(id *)(*(void *)v0 + 32);
}

id sub_100BE0DD4()
{
  return *(id *)(*(void *)v0 + 40);
}

void sub_100BE0E04()
{
}

uint64_t sub_100BE0E60(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1005057FC(&qword_1016950B0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100BE0EC8()
{
  uint64_t v1 = type metadata accessor for URL();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v7 = (v6 + 23) & 0xFFFFFFFFFFFFFFF8;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  sub_100510084(*(void *)(v0 + v6), *(void *)(v0 + v6 + 8));
  sub_100510084(*(void *)(v0 + v7), *(void *)(v0 + v7 + 8));

  return _swift_deallocObject(v0, v7 + 16, v5);
}

uint64_t sub_100BE0FC8(void (*a1)(char *, void, void), uint64_t a2)
{
  uint64_t v5 = *(void *)(type metadata accessor for URL() - 8);
  uint64_t v6 = *(void *)(v2 + 16);
  uint64_t v7 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));

  return sub_100BE0A48(a1, a2, v6, v7);
}

uint64_t sub_100BE108C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100BE109C()
{
  return swift_release();
}

id sub_100BE10B4(char *a1, uint64_t a2, char a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = type metadata accessor for UUID();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10, v12);
  uint64_t v14 = (char *)&v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = objc_allocWithZone(v5);
  v15[OBJC_IVAR____TtC8Freeform38CRLCommandReplaceImageWithImageSubject_isBackgroundRemoved] = a3;
  uint64_t v16 = *(void (**)(char *, char *, uint64_t))(v11 + 16);
  v16(v14, a1, v10);
  v16(&v15[OBJC_IVAR____TtC8Freeform22CRLCommandReplaceImage_id], v14, v10);
  *(void *)&v15[OBJC_IVAR____TtC8Freeform22CRLCommandReplaceImage_imageData] = a2;
  *(void *)&v15[OBJC_IVAR____TtC8Freeform22CRLCommandReplaceImage_thumbnailData] = a4;
  unint64_t v17 = (objc_class *)type metadata accessor for CRLCommandReplaceImage();
  v21.receiver = v15;
  v21.super_class = v17;
  id v18 = [super init];
  uint64_t v19 = *(void (**)(char *, uint64_t))(v11 + 8);
  v19(v14, v10);
  v19(a1, v10);
  return v18;
}

void sub_100BE175C(void *a1, uint64_t a2, int a3)
{
  uint64_t v5 = v3;
  Class isa = UUID._bridgeToObjectiveC()().super.isa;
  id v10 = [a1 getBoardItemForUUID:isa];

  if (!v10) {
    goto LABEL_7;
  }
  type metadata accessor for CRLImageItem();
  if (!swift_dynamicCastClass())
  {

LABEL_7:
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"commit(with:transaction:undoable:)", 34, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandReplaceImageWithImageSubject.swift", 110, 2, 30, (uint64_t)"Unable to retrieve image item", 29, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_100586FD4((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Unable to retrieve image item");
    sub_1005871AC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"commit(with:transaction:undoable:)", 34, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandReplaceImageWithImageSubject.swift", 110, 2, 30);
    SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v11, v12);
    _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
    return;
  }
  sub_100EA206C(a1, a2, a3);
  if (!v4) {
    sub_100A2F690(*(unsigned char *)(v5 + OBJC_IVAR____TtC8Freeform38CRLCommandReplaceImageWithImageSubject_isBackgroundRemoved));
  }
}

void sub_100BE191C()
{
}

id sub_100BE19E4()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLCommandReplaceImageWithImageSubject();
  [super dealloc];
}

uint64_t sub_100BE1A1C()
{
  return type metadata accessor for CRLCommandReplaceImageWithImageSubject();
}

uint64_t type metadata accessor for CRLCommandReplaceImageWithImageSubject()
{
  uint64_t result = qword_101697270;
  if (!qword_101697270) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100BE1A70()
{
  return swift_updateClassMetadata2();
}

uint64_t sub_100BE1AB4(unint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v136 = a3;
  uint64_t v5 = sub_1005057FC((uint64_t *)&unk_101674520);
  __chkstk_darwin(v5 - 8, v6);
  int v139 = (char *)&v135 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1005057FC(&qword_101697398);
  uint64_t v10 = __chkstk_darwin(v8 - 8, v9);
  Swift::String v12 = (char *)&v135 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10, v13);
  CGFloat v165 = (char *)&v135 - v14;
  uint64_t v15 = sub_1005057FC(&qword_1016892B0);
  __chkstk_darwin(v15 - 8, v16);
  uint64_t v155 = (uint64_t)&v135 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for UUID();
  uint64_t v149 = *(void *)(v18 - 8);
  uint64_t v20 = __chkstk_darwin(v18, v19);
  CGFloat v148 = (char *)&v135 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = __chkstk_darwin(v20, v22);
  uint64_t v140 = (char *)&v135 - v24;
  uint64_t v26 = __chkstk_darwin(v23, v25);
  CGFloat v158 = (char *)&v135 - v27;
  uint64_t v29 = __chkstk_darwin(v26, v28);
  CGFloat v154 = (char *)&v135 - v30;
  __chkstk_darwin(v29, v31);
  CGFloat v163 = (uint64_t *)((char *)&v135 - v32);
  uint64_t v164 = type metadata accessor for CRLFreehandDrawingShapeItemBucketCRDT(0);
  uint64_t v33 = *(void *)(v164 - 8);
  uint64_t v35 = __chkstk_darwin(v164, v34);
  double v147 = (char *)&v135 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = __chkstk_darwin(v35, v37);
  uint64_t v138 = (uint64_t)&v135 - v39;
  uint64_t v41 = __chkstk_darwin(v38, v40);
  uint64_t v153 = (uint64_t)&v135 - v42;
  __chkstk_darwin(v41, v43);
  uint64_t v157 = (uint64_t)&v135 - v44;
  if (a1 >> 62)
  {
LABEL_58:
    swift_bridgeObjectRetain();
    uint64_t v45 = _CocoaArrayWrapper.endIndex.getter();
  }
  else
  {
    uint64_t v45 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
  }
  uint64_t v166 = v18;
  unint64_t v156 = a2;
  if (v45)
  {
    if (v45 < 1)
    {
      __break(1u);
      goto LABEL_60;
    }
    uint64_t v46 = 0;
    uint64_t v47 = 0;
    unint64_t v143 = a1 & 0xC000000000000001;
    CGFloat v151 = (void (**)(char *, void *, uint64_t))(v149 + 16);
    CGFloat v162 = (unsigned int (**)(char *, uint64_t, uint64_t))(v149 + 8);
    uint64_t v142 = (void (**)(void (**)(void, void), void, uint64_t, uint64_t))(v33 + 56);
    Swift::Int v141 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v33 + 48);
    uint64_t v137 = (char *)&type metadata for () + 8;
    CGFloat v146 = (void (*)(void, void, void))a1;
    double v145 = v12;
    uint64_t v144 = v45;
    do
    {
      uint64_t v159 = v47;
      uint64_t v152 = v46;
      if (v143)
      {
        id v51 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        id v51 = *(void **)(a1 + 8 * v46 + 32);
        swift_retain();
      }
      uint64_t v52 = v164;
      uint64_t v53 = v153;
      *(void *)(v153 + *(int *)(v164 + 28)) = _swiftEmptyDictionarySingleton;
      uint64_t v54 = (uint64_t)v51 + *(void *)(*v51 + 632);
      swift_beginAccess();
      uint64_t v55 = v155;
      sub_100522E9C(v54, v155, &qword_1016892B0);
      sub_1005057FC(&qword_101674550);
      uint64_t v56 = v163;
      CRRegister.wrappedValue.getter();
      sub_100522F00(v55, &qword_1016892B0);
      char v57 = (void (*)(void *, uint64_t, uint64_t))*v151;
      (*v151)(v154, v56, v18);
      CRRegister.init(wrappedValue:)();
      double v161 = *v162;
      ((void (*)(void *, uint64_t))v161)(v56, v18);
      sub_100522E9C(v54, v53 + *(int *)(v52 + 20), &qword_1016892B0);
      uint64_t v58 = (uint64_t)v51 + *(void *)(*v51 + 752);
      swift_beginAccess();
      sub_100BE4CE4(v58, v53 + *(int *)(v52 + 24), type metadata accessor for CRLFreehandDrawingShapeCRDTData);
      uint64_t v59 = v157;
      sub_100BE4BC0(v53, v157);
      uint64_t v60 = v51[3];
      uint64_t v150 = v51[4];
      uint64_t v61 = *(void *)(v160 + 16);
      id v62 = (void (**)(void, void))v165;
      sub_100BE4CE4(v59, (uint64_t)v165, type metadata accessor for CRLFreehandDrawingShapeItemBucketCRDT);
      (*v142)(v62, 0, 1, v52);
      swift_retain();
      uint64_t v63 = (uint64_t)v158;
      CRRegister.wrappedValue.getter();
      uint64_t v64 = (uint64_t *)(v61 + 24);
      swift_beginAccess();
      uint64_t v65 = *(void *)(v61 + 24);
      if (*(void *)(v65 + 16) && (unint64_t v66 = sub_100955FC8(v63), (v67 & 1) != 0))
      {
        uint64_t v68 = *(void *)(*(void *)(v65 + 56) + 8 * v66);
      }
      else
      {
        uint64_t v68 = sub_100BE47D4();
        uint64_t v69 = (uint64_t)v163;
        uint64_t v70 = v63;
        uint64_t v71 = v166;
        v57(v163, v70, v166);
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v168 = *v64;
        *uint64_t v64 = 0x8000000000000000;
        sub_10097296C(v68, v69, isUniquelyReferenced_nonNull_native);
        *uint64_t v64 = v168;
        swift_bridgeObjectRelease();
        ((void (*)(uint64_t, uint64_t))v161)(v69, v71);
      }
      uint64_t v73 = (uint64_t)v145;
      swift_endAccess();
      uint64_t v74 = (uint64_t *)(v61 + 16);
      swift_beginAccess();
      uint64_t v75 = *(void *)(v61 + 16);
      if (*(void *)(v75 + 16) && (unint64_t v76 = sub_100955F14(v68), (v77 & 1) != 0))
      {
        uint64_t v78 = *(void **)(*(void *)(v75 + 56) + 8 * v76);
        swift_retain();
      }
      else
      {
        sub_1005057FC((uint64_t *)&unk_1016A8B70);
        uint64_t v78 = sub_100BE3B58(v68);
        swift_beginAccess();
        swift_retain();
        char v79 = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v168 = *v74;
        *uint64_t v74 = 0x8000000000000000;
        sub_100972960((uint64_t)v78, v68, v79);
        *uint64_t v74 = v168;
        swift_bridgeObjectRelease();
        swift_endAccess();
      }
      a2 = v156;
      sub_100522E9C((uint64_t)v165, v73, &qword_101697398);
      if ((*v141)(v73, 1, v164) == 1)
      {
        uint64_t v48 = sub_100522F00(v73, &qword_101697398);
        __chkstk_darwin(v48, v49);
        uint64_t v50 = v158;
        *(&v135 - 2) = (uint64_t)v158;
        swift_beginAccess();
        sub_1005057FC(&qword_10169A1D0);
        uint64_t v47 = v159;
        Capsule.mutate<A>(_:)();
        swift_endAccess();
        *((unsigned char *)v78 + *(void *)(*v78 + 136)) = 1;
        swift_release();
      }
      else
      {
        uint64_t v80 = v138;
        uint64_t v81 = sub_100BE4BC0(v73, v138);
        __chkstk_darwin(v81, v82);
        uint64_t v50 = v158;
        *(&v135 - 2) = (uint64_t)v158;
        *(&v135 - 1) = v80;
        swift_beginAccess();
        sub_1005057FC(&qword_10169A1D0);
        uint64_t v47 = v159;
        Capsule.mutate<A>(_:)();
        swift_endAccess();
        uint64_t v83 = (char *)v78 + *(void *)(*v78 + 128);
        *((void *)v83 + 1) = v60;
        *((void *)v83 + 3) = v150;
        sub_100CB4830();
        *((unsigned char *)v78 + *(void *)(*v78 + 136)) = 1;
        swift_release();
        sub_100BE4C24(v80);
      }
      uint64_t v46 = v152 + 1;
      swift_release();
      uint64_t v18 = v166;
      ((void (*)(char *, uint64_t))v161)(v50, v166);
      sub_100522F00((uint64_t)v165, &qword_101697398);
      swift_release();
      sub_100BE4C24(v157);
      a1 = (unint64_t)v146;
    }
    while (v144 != v46);
    swift_bridgeObjectRelease();
    if (!(a2 >> 62)) {
      goto LABEL_22;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v47 = 0;
    if (!(a2 >> 62))
    {
LABEL_22:
      uint64_t v84 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      goto LABEL_23;
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v84 = _CocoaArrayWrapper.endIndex.getter();
LABEL_23:
  uint64_t v159 = v47;
  if (v84)
  {
    if (v84 >= 1)
    {
      double v85 = 0;
      CGFloat v162 = (unsigned int (**)(char *, uint64_t, uint64_t))(a2 & 0xC000000000000001);
      double v161 = (unsigned int (*)(char *, uint64_t, uint64_t))(v149 + 16);
      double v86 = (void (**)(void *, uint64_t))(v149 + 8);
      CGFloat v165 = (char *)v84;
      uint64_t v87 = (uint64_t)v147;
      uint64_t v88 = v154;
      do
      {
        if (v162)
        {
          uint64_t v89 = (uint64_t *)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else
        {
          uint64_t v89 = *(uint64_t **)(a2 + 8 * (void)v85 + 32);
          swift_retain();
        }
        ++v85;
        uint64_t v90 = v164;
        *(void *)(v87 + *(int *)(v164 + 28)) = _swiftEmptyDictionarySingleton;
        uint64_t v91 = (uint64_t)v89 + *(void *)(*v89 + 632);
        swift_beginAccess();
        uint64_t v92 = v155;
        sub_100522E9C(v91, v155, &qword_1016892B0);
        sub_1005057FC(&qword_101674550);
        uint64_t v93 = v163;
        CRRegister.wrappedValue.getter();
        sub_100522F00(v92, &qword_1016892B0);
        uint64_t v94 = v166;
        (*(void (**)(char *, void *, uint64_t))v161)(v88, v93, v166);
        CRRegister.init(wrappedValue:)();
        (*v86)(v93, v94);
        sub_100522E9C(v91, v87 + *(int *)(v90 + 20), &qword_1016892B0);
        uint64_t v95 = (uint64_t)v89 + *(void *)(*v89 + 752);
        swift_beginAccess();
        sub_100BE4CE4(v95, v87 + *(int *)(v90 + 24), type metadata accessor for CRLFreehandDrawingShapeCRDTData);
        uint64_t v96 = v153;
        sub_100BE4BC0(v87, v153);
        sub_100BE2D7C(v96, v89[3], v89[4], 0);
        swift_release();
        sub_100BE4C24(v96);
        a2 = v156;
      }
      while (v165 != v85);
      goto LABEL_30;
    }
LABEL_60:
    __break(1u);
LABEL_61:
    uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return result;
  }
LABEL_30:
  swift_bridgeObjectRelease();
  uint64_t v97 = *(void *)(v136 + 16);
  if (v97)
  {
    uint64_t v98 = v149 + 16;
    uint64_t v99 = *(void (**)(char *, uint64_t, uint64_t))(v149 + 16);
    uint64_t v100 = v136 + ((*(unsigned __int8 *)(v149 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v149 + 80));
    a1 = *(void *)(v149 + 72);
    unint64_t v101 = v149 + 56;
    CGFloat v162 = (unsigned int (**)(char *, uint64_t, uint64_t))(v149 + 48);
    double v161 = (unsigned int (*)(char *, uint64_t, uint64_t))(v149 + 32);
    CGFloat v165 = (char *)(v149 + 8);
    swift_bridgeObjectRetain();
    CGFloat v163 = (void *)v101;
    unint64_t v156 = v101 & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
    uint64_t v157 = (uint64_t)&type metadata for () + 8;
    uint64_t v102 = v139;
    uint64_t v18 = v166;
    uint64_t v103 = (uint64_t)v140;
    uint64_t v149 = v98;
    while (1)
    {
      v99(v102, v100, v18);
      uint64_t v104 = (char *)*v163;
      ((void (*)(char *, void, uint64_t, uint64_t))*v163)(v102, 0, 1, v18);
      if ((*v162)(v102, 1, v18) == 1) {
        break;
      }
      CGFloat v158 = v104;
      (*(void (**)(uint64_t, char *, uint64_t))v161)(v103, v102, v18);
      Swift::String v12 = *(char **)(v160 + 16);
      a2 = (unint64_t)(v12 + 24);
      swift_beginAccess();
      uint64_t v105 = *((void *)v12 + 3);
      uint64_t v106 = *(void *)(v105 + 16);
      swift_retain();
      if (v106 && (unint64_t v107 = sub_100955FC8(v103), (v108 & 1) != 0))
      {
        uint64_t v109 = *(void *)(*(void *)(v105 + 56) + 8 * v107);
      }
      else
      {
        uint64_t v164 = v100;
        uint64_t v33 = v97;
        unint64_t v110 = a1;
        uint64_t v111 = sub_100BE47D4();
        uint64_t v112 = v103;
        uint64_t v109 = v111;
        uint64_t v113 = (uint64_t)v148;
        a1 = (unint64_t)v99;
        v99(v148, v112, v18);
        int v114 = swift_isUniquelyReferenced_nonNull_native();
        double v167 = *(void **)a2;
        unint64_t v115 = v167;
        *(void *)a2 = 0x8000000000000000;
        unint64_t v117 = sub_100955FC8(v113);
        uint64_t v118 = v115[2];
        BOOL v119 = (v116 & 1) == 0;
        uint64_t v120 = v118 + v119;
        if (__OFADD__(v118, v119))
        {
          __break(1u);
LABEL_57:
          __break(1u);
          goto LABEL_58;
        }
        char v121 = v116;
        if (v115[3] >= v120)
        {
          if ((v114 & 1) == 0) {
            sub_10097C704();
          }
        }
        else
        {
          sub_10095FBA0(v120, v114);
          unint64_t v122 = sub_100955FC8((uint64_t)v148);
          if ((v121 & 1) != (v123 & 1)) {
            goto LABEL_61;
          }
          unint64_t v117 = v122;
        }
        uint64_t v99 = (void (*)(char *, uint64_t, uint64_t))a1;
        double v124 = v167;
        a1 = v110;
        if (v121)
        {
          *(void *)(v167[7] + 8 * v117) = v109;
          uint64_t v18 = v166;
          uint64_t v97 = v33;
        }
        else
        {
          v167[(v117 >> 6) + 8] |= 1 << v117;
          uint64_t v18 = v166;
          v99((char *)(v124[6] + v117 * v110), (uint64_t)v148, v166);
          *(void *)(v124[7] + 8 * v117) = v109;
          uint64_t v125 = v124[2];
          BOOL v126 = __OFADD__(v125, 1);
          uint64_t v127 = v125 + 1;
          if (v126) {
            goto LABEL_57;
          }
          uint64_t v97 = v33;
          v124[2] = v127;
        }
        *(void *)a2 = v124;
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))v165)(v148, v18);
        uint64_t v100 = v164;
      }
      swift_endAccess();
      swift_beginAccess();
      uint64_t v128 = *((void *)v12 + 2);
      if (*(void *)(v128 + 16))
      {
        unint64_t v129 = sub_100955F14(v109);
        if (v130)
        {
          uint64_t v131 = *(void *)(*(void *)(v128 + 56) + 8 * v129);
          __chkstk_darwin(v129, v130);
          *(&v135 - 2) = (uint64_t)v140;
          swift_beginAccess();
          swift_retain();
          sub_1005057FC(&qword_10169A1D0);
          uint64_t v132 = v159;
          Capsule.mutate<A>(_:)();
          uint64_t v159 = v132;
          swift_endAccess();
          *(unsigned char *)(v131 + *(void *)(*(void *)v131 + 136)) = 1;
          swift_release();
          uint64_t v18 = v166;
        }
      }
      swift_release();
      uint64_t v103 = (uint64_t)v140;
      (*(void (**)(char *, uint64_t))v165)(v140, v18);
      v100 += a1;
      --v97;
      uint64_t v102 = v139;
      if (!v97)
      {
        ((void (*)(char *, uint64_t, uint64_t, uint64_t))v158)(v139, 1, 1, v18);
        return swift_bridgeObjectRelease();
      }
    }
  }
  else
  {
    uint64_t v133 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v149 + 56);
    swift_bridgeObjectRetain();
    v133(v139, 1, 1, v166);
  }
  return swift_bridgeObjectRelease();
}

void sub_100BE2D7C(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  int v32 = a4;
  uint64_t v36 = a2;
  uint64_t v37 = a3;
  uint64_t v38 = type metadata accessor for UUID();
  uint64_t v6 = *(void *)(v38 - 8);
  uint64_t v8 = __chkstk_darwin(v38, v7);
  uint64_t v34 = (char *)v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8, v10);
  Swift::String v12 = (char *)v31 - v11;
  uint64_t v13 = sub_1005057FC(&qword_101697398);
  uint64_t v15 = __chkstk_darwin(v13 - 8, v14);
  uint64_t v17 = (char *)v31 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15, v18);
  uint64_t v20 = (char *)v31 - v19;
  uint64_t v21 = type metadata accessor for CRLFreehandDrawingShapeItemBucketCRDT(0);
  uint64_t v22 = *(void *)(v21 - 8);
  __chkstk_darwin(v21, v23);
  uint64_t v25 = (char *)v31 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = v4;
  swift_retain();
  v31[1] = sub_1005057FC(&qword_101674550);
  uint64_t v35 = a1;
  CRRegister.wrappedValue.getter();
  if (sub_100BE3E70((uint64_t)v12))
  {
    sub_100D159E0((uint64_t)v12, (uint64_t)v20);
    swift_release();
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v22 + 56))(v20, 1, 1, v21);
  }
  swift_release();
  uint64_t v26 = *(void (**)(char *, uint64_t))(v6 + 8);
  uint64_t v27 = v38;
  v26(v12, v38);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21) == 1)
  {
    sub_100522F00((uint64_t)v20, &qword_101697398);
    if (qword_10166F9C8 != -1) {
      swift_once();
    }
    swift_beginAccess();
    id v28 = (id)static OS_os_log.crlDefault;
    uint64_t v29 = static os_log_type_t.error.getter();
    sub_100BAC898((uint64_t)v28, (uint64_t)&_mh_execute_header, v29, (uint64_t)"Could not modify item in bucket, it did not exist yet", 53, 2, (uint64_t)_swiftEmptyArrayStorage);
  }
  else
  {
    v32 &= 1u;
    sub_100BE4BC0((uint64_t)v20, (uint64_t)v25);
    sub_100BE4C9C(&qword_1016973A0, (void (*)(uint64_t))type metadata accessor for CRLFreehandDrawingShapeItemBucketCRDT);
    CRStruct_3.merge(_:)();
    sub_100BE4CE4((uint64_t)v25, (uint64_t)v17, type metadata accessor for CRLFreehandDrawingShapeItemBucketCRDT);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v22 + 56))(v17, 0, 1, v21);
    swift_retain();
    uint64_t v30 = (uint64_t)v34;
    CRRegister.wrappedValue.getter();
    sub_100BE3F10((uint64_t)v17, v36, v37, v32, v30);
    swift_release();
    v26((char *)v30, v27);
    sub_100522F00((uint64_t)v17, &qword_101697398);
    sub_100BE4C24((uint64_t)v25);
  }
}

uint64_t sub_100BE31D0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for UUID();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v5 = __chkstk_darwin(v2, v4);
  uint64_t v7 = (char *)&v59 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5, v8);
  uint64_t v10 = (char *)&v59 - v9;
  uint64_t v11 = sub_1005057FC((uint64_t *)&unk_101674520);
  __chkstk_darwin(v11 - 8, v12);
  uint64_t v14 = (char *)&v59 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = *(void *)(a1 + 56);
  uint64_t v62 = a1 + 56;
  uint64_t v16 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v17 = -1;
  if (v16 < 64) {
    uint64_t v17 = ~(-1 << v16);
  }
  unint64_t v18 = v17 & v15;
  int64_t v63 = (unint64_t)(v16 + 63) >> 6;
  uint64_t v75 = v3 + 16;
  uint64_t v68 = v3;
  uint64_t v69 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56);
  uint64_t v67 = v3 + 48;
  uint64_t v65 = (void (**)(char *, char *, uint64_t))(v3 + 32);
  uint64_t v72 = (void (**)(char *, uint64_t))(v3 + 8);
  uint64_t v70 = a1;
  swift_bridgeObjectRetain();
  int64_t v19 = 0;
  uint64_t v60 = 0;
  uint64_t v59 = (char *)&type metadata for () + 8;
  uint64_t v64 = v14;
  uint64_t v61 = v10;
  while (1)
  {
    if (v18)
    {
      unint64_t v20 = __clz(__rbit64(v18));
      uint64_t v21 = (v18 - 1) & v18;
      unint64_t v22 = v20 | (v19 << 6);
      goto LABEL_18;
    }
    BOOL v23 = __OFADD__(v19++, 1);
    if (v23) {
      goto LABEL_44;
    }
    if (v19 >= v63)
    {
LABEL_41:
      (*v69)(v14, 1, 1, v2);
      return swift_release();
    }
    unint64_t v24 = *(void *)(v62 + 8 * v19);
    if (!v24) {
      break;
    }
LABEL_17:
    uint64_t v21 = (v24 - 1) & v24;
    unint64_t v22 = __clz(__rbit64(v24)) + (v19 << 6);
LABEL_18:
    uint64_t v26 = v68;
    uint64_t v27 = *(void *)(v68 + 72);
    id v28 = *(void (**)(char *, unint64_t, uint64_t))(v68 + 16);
    v28(v14, *(void *)(v70 + 48) + v27 * v22, v2);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v26 + 56))(v14, 0, 1, v2);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v14, 1, v2) == 1) {
      return swift_release();
    }
    unint64_t v73 = v21;
    int64_t v74 = v19;
    (*v65)(v10, v14, v2);
    uint64_t v29 = *(void *)(v66 + 16);
    uint64_t v30 = (void *)(v29 + 24);
    swift_beginAccess();
    uint64_t v31 = *(void *)(v29 + 24);
    uint64_t v32 = *(void *)(v31 + 16);
    swift_retain();
    if (v32 && (unint64_t v33 = sub_100955FC8((uint64_t)v10), (v34 & 1) != 0))
    {
      uint64_t v35 = *(void *)(*(void *)(v31 + 56) + 8 * v33);
    }
    else
    {
      uint64_t v71 = sub_100BE47D4();
      uint64_t v36 = v2;
      v28(v7, (unint64_t)v10, v2);
      int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v38 = (uint64_t)v7;
      int v39 = isUniquelyReferenced_nonNull_native;
      unint64_t v76 = (void *)*v30;
      uint64_t v40 = v76;
      *uint64_t v30 = 0x8000000000000000;
      uint64_t v41 = v38;
      unint64_t v43 = sub_100955FC8(v38);
      uint64_t v44 = v40[2];
      BOOL v45 = (v42 & 1) == 0;
      uint64_t v46 = v44 + v45;
      if (__OFADD__(v44, v45))
      {
        __break(1u);
LABEL_44:
        __break(1u);
LABEL_45:
        __break(1u);
        goto LABEL_46;
      }
      char v47 = v42;
      if (v40[3] >= v46)
      {
        if ((v39 & 1) == 0) {
          sub_10097C704();
        }
        uint64_t v7 = (char *)v41;
      }
      else
      {
        sub_10095FBA0(v46, v39);
        uint64_t v7 = (char *)v41;
        unint64_t v48 = sub_100955FC8(v41);
        if ((v47 & 1) != (v49 & 1)) {
          goto LABEL_47;
        }
        unint64_t v43 = v48;
      }
      uint64_t v14 = v64;
      uint64_t v50 = v76;
      if (v47)
      {
        uint64_t v35 = v71;
        *(void *)(v76[7] + 8 * v43) = v71;
        uint64_t v2 = v36;
      }
      else
      {
        v76[(v43 >> 6) + 8] |= 1 << v43;
        uint64_t v2 = v36;
        v28((char *)(v50[6] + v43 * v27), (unint64_t)v7, v36);
        uint64_t v35 = v71;
        *(void *)(v50[7] + 8 * v43) = v71;
        uint64_t v51 = v50[2];
        BOOL v23 = __OFADD__(v51, 1);
        uint64_t v52 = v51 + 1;
        if (v23) {
          goto LABEL_45;
        }
        v50[2] = v52;
      }
      *uint64_t v30 = v50;
      swift_bridgeObjectRelease();
      (*v72)(v7, v2);
      uint64_t v10 = v61;
    }
    swift_endAccess();
    swift_beginAccess();
    uint64_t v53 = *(void *)(v29 + 16);
    if (*(void *)(v53 + 16))
    {
      unint64_t v54 = sub_100955F14(v35);
      if (v55)
      {
        uint64_t v56 = *(void *)(*(void *)(v53 + 56) + 8 * v54);
        __chkstk_darwin(v54, v55);
        *(&v59 - 2) = v10;
        swift_beginAccess();
        swift_retain();
        sub_1005057FC(&qword_10169A1D0);
        uint64_t v57 = v60;
        Capsule.mutate<A>(_:)();
        uint64_t v60 = v57;
        uint64_t v14 = v64;
        swift_endAccess();
        *(unsigned char *)(v56 + *(void *)(*(void *)v56 + 136)) = 1;
        swift_release();
      }
    }
    swift_release();
    (*v72)(v10, v2);
    unint64_t v18 = v73;
    int64_t v19 = v74;
  }
  int64_t v25 = v19 + 1;
  if (v19 + 1 >= v63) {
    goto LABEL_41;
  }
  unint64_t v24 = *(void *)(v62 + 8 * v25);
  if (v24) {
    goto LABEL_16;
  }
  int64_t v25 = v19 + 2;
  if (v19 + 2 >= v63) {
    goto LABEL_41;
  }
  unint64_t v24 = *(void *)(v62 + 8 * v25);
  if (v24) {
    goto LABEL_16;
  }
  int64_t v25 = v19 + 3;
  if (v19 + 3 >= v63) {
    goto LABEL_41;
  }
  unint64_t v24 = *(void *)(v62 + 8 * v25);
  if (v24)
  {
LABEL_16:
    int64_t v19 = v25;
    goto LABEL_17;
  }
  while (1)
  {
    int64_t v19 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v19 >= v63) {
      goto LABEL_41;
    }
    unint64_t v24 = *(void *)(v62 + 8 * v19);
    ++v25;
    if (v24) {
      goto LABEL_17;
    }
  }
LABEL_46:
  __break(1u);
LABEL_47:
  uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

void *sub_100BE386C@<X0>(void *a1@<X8>)
{
  uint64_t result = sub_1006B1714(0);
  *a1 = result;
  return result;
}

uint64_t type metadata accessor for CRLFreehandDrawingShapeItemBucketManager()
{
  return self;
}

void *sub_100BE38D0(uint64_t a1)
{
  swift_beginAccess();
  uint64_t v3 = sub_100BE39F4(a1);
  swift_endAccess();
  uint64_t v4 = (uint64_t *)(v1 + 16);
  swift_beginAccess();
  uint64_t v5 = *(void *)(v1 + 16);
  if (*(void *)(v5 + 16) && (unint64_t v6 = sub_100955F14(v3), (v7 & 1) != 0))
  {
    uint64_t v8 = *(void **)(*(void *)(v5 + 56) + 8 * v6);
    swift_retain();
  }
  else
  {
    sub_1005057FC((uint64_t *)&unk_1016A8B70);
    uint64_t v8 = sub_100BE3B58(v3);
    swift_beginAccess();
    swift_retain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v11 = *v4;
    *uint64_t v4 = 0x8000000000000000;
    sub_100972960((uint64_t)v8, v3, isUniquelyReferenced_nonNull_native);
    *uint64_t v4 = v11;
    swift_bridgeObjectRelease();
    swift_endAccess();
  }
  return v8;
}

uint64_t sub_100BE39F4(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for UUID();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4, v6);
  uint64_t v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v1;
  if (*(void *)(v9 + 16))
  {
    unint64_t v10 = sub_100955FC8(a1);
    if (v11) {
      return *(void *)(*(void *)(v9 + 56) + 8 * v10);
    }
  }
  uint64_t v12 = sub_100BE47D4();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v8, a1, v4);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v16 = *v2;
  *uint64_t v2 = 0x8000000000000000;
  sub_10097296C(v12, (uint64_t)v8, isUniquelyReferenced_nonNull_native);
  *uint64_t v2 = v16;
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  return v12;
}

void *sub_100BE3B58(uint64_t a1)
{
  uint64_t v13 = a1;
  uint64_t v12 = sub_1005057FC((uint64_t *)&unk_1016A8B60);
  __chkstk_darwin(v12, v2);
  uint64_t v15 = sub_1005057FC(&qword_10169A1D0);
  uint64_t v3 = *(void *)(v15 - 8);
  __chkstk_darwin(v15, v4);
  uint64_t v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&v16[0] = a1;
  dispatch thunk of CustomStringConvertible.description.getter();
  type metadata accessor for UUID();
  sub_1005057FC(&qword_10169A220);
  sub_100BE4C9C((unint64_t *)&qword_1016770E0, (void (*)(uint64_t))&type metadata accessor for UUID);
  sub_100523288(&qword_1016973B0, &qword_10169A220);
  sub_100523288((unint64_t *)&unk_10169A7B0, &qword_10169A220);
  CRDictionary.init()();
  sub_100523288(&qword_10169A210, (uint64_t *)&unk_1016A8B60);
  Capsule<>.init(_:id:)();
  sub_1005CC964(v14, (uint64_t)&off_101532060, (uint64_t *)v16);
  sub_1005057FC((uint64_t *)&unk_1016A8B70);
  uint64_t v7 = (void *)swift_allocObject();
  *((unsigned char *)v7 + *(void *)(*v7 + 136)) = 0;
  uint64_t v7[2] = v13;
  (*(void (**)(char *, char *, uint64_t))(v3 + 32))((char *)v7 + *(void *)(*v7 + 120), v6, v15);
  *((unsigned char *)v7 + *(void *)(*v7 + 136)) = 1;
  uint64_t v8 = (char *)v7 + *(void *)(*v7 + 128);
  long long v9 = v16[1];
  *(_OWORD *)uint64_t v8 = v16[0];
  *((_OWORD *)v8 + 1) = v9;
  *((void *)v8 + 4) = v17;
  return v7;
}

uint64_t sub_100BE3E70(uint64_t a1)
{
  swift_beginAccess();
  uint64_t v3 = sub_100BE39F4(a1);
  swift_endAccess();
  swift_beginAccess();
  if (*(void *)(*(void *)(v1 + 16) + 16) && (sub_100955F14(v3), (v4 & 1) != 0)) {
    return swift_retain();
  }
  else {
    return 0;
  }
}

uint64_t sub_100BE3F10(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  uint64_t v21 = a2;
  uint64_t v22 = a3;
  uint64_t v8 = sub_1005057FC(&qword_101697398);
  __chkstk_darwin(v8 - 8, v9);
  uint64_t v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for CRLFreehandDrawingShapeItemBucketCRDT(0);
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12, v14);
  uint64_t v16 = (char *)&v21 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_100BE38D0(a5);
  sub_100522E9C(a1, (uint64_t)v11, &qword_101697398);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
  {
    uint64_t v18 = sub_100522F00((uint64_t)v11, &qword_101697398);
    __chkstk_darwin(v18, v19);
    *(&v21 - 2) = a5;
    swift_beginAccess();
    sub_1005057FC(&qword_10169A1D0);
    Capsule.mutate<A>(_:)();
    swift_endAccess();
    *((unsigned char *)v17 + *(void *)(*v17 + 136)) = 1;
    return swift_release();
  }
  else
  {
    sub_100BE4BC0((uint64_t)v11, (uint64_t)v16);
    sub_100BE4178((uint64_t)v16, v21, v22, a4 & 1);
    swift_release();
    return sub_100BE4C24((uint64_t)v16);
  }
}

unint64_t sub_100BE4178(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  swift_beginAccess();
  sub_1005057FC(&qword_10169A1D0);
  Capsule.mutate<A>(_:)();
  swift_endAccess();
  uint64_t v8 = v4 + *(void *)(*(void *)v4 + 128);
  uint64_t v9 = *(void *)(v8 + 24);
  if ((a4 & 1) == 0) {
    uint64_t v9 = a3;
  }
  *(void *)(v8 + 8) = a2;
  *(void *)(v8 + 24) = v9;
  unint64_t result = sub_100CB4830();
  *(unsigned char *)(v4 + *(void *)(*(void *)v4 + 136)) = 1;
  return result;
}

uint64_t sub_100BE4280(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v29 = a3;
  uint64_t v30 = a1;
  uint64_t v4 = sub_1005057FC(&qword_1016973A8);
  __chkstk_darwin(v4 - 8, v5);
  uint64_t v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = type metadata accessor for CRLFreehandDrawingShapeItemBucketCRDT(0);
  __chkstk_darwin(v31, v8);
  uint64_t v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1005057FC((uint64_t *)&unk_10169A1B0);
  __chkstk_darwin(v11 - 8, v12);
  uint64_t v14 = (char *)&v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for UUID();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v18 = __chkstk_darwin(v15, v17);
  unint64_t v20 = (char *)&v28 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18, v21);
  uint64_t v22 = *(void (**)(char *, uint64_t, uint64_t))(v16 + 16);
  v22((char *)&v28 - v23, a2, v15);
  sub_100BE4CE4(v29, (uint64_t)v10, type metadata accessor for CRLFreehandDrawingShapeItemBucketCRDT);
  v22(v20, a2, v15);
  swift_retain();
  CRKeyPath.init(_:)();
  uint64_t v24 = type metadata accessor for CRKeyPath();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v7, 0, 1, v24);
  sub_100BE4C9C((unint64_t *)&unk_10169A230, (void (*)(uint64_t))type metadata accessor for CRLFreehandDrawingShapeItemBucketCRDT);
  Ref.init<A>(_:_:identity:)();
  uint64_t v25 = sub_1005057FC(&qword_10169A220);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v14, 0, 1, v25);
  sub_100523288(&qword_10169A210, (uint64_t *)&unk_1016A8B60);
  uint64_t v26 = (uint64_t (*)(unsigned char *, void))Capsule.Ref<>.root.modify();
  sub_1005057FC((uint64_t *)&unk_1016A8B60);
  CRDictionary.subscript.setter();
  return v26(v32, 0);
}

uint64_t sub_100BE45FC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_1005057FC((uint64_t *)&unk_10169A1B0);
  __chkstk_darwin(v3 - 8, v4);
  uint64_t v6 = &v14[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = type metadata accessor for UUID();
  __chkstk_darwin(v7, v8);
  (*(void (**)(unsigned char *, uint64_t))(v10 + 16))(&v14[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)], a2);
  uint64_t v11 = sub_1005057FC(&qword_10169A220);
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v6, 1, 1, v11);
  sub_100523288(&qword_10169A210, (uint64_t *)&unk_1016A8B60);
  uint64_t v12 = (uint64_t (*)(unsigned char *, void))Capsule.Ref<>.root.modify();
  sub_1005057FC((uint64_t *)&unk_1016A8B60);
  CRDictionary.subscript.setter();
  return v12(v14, 0);
}

uint64_t sub_100BE47D4()
{
  uint64_t v0 = type metadata accessor for SHA256();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0, v2);
  uint64_t v4 = (char *)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for SHA256Digest();
  uint64_t v20 = *(void *)(v5 - 8);
  __chkstk_darwin(v5, v6);
  uint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = UUID.crl_data()();
  unint64_t v11 = v10;
  sub_100BE4C9C((unint64_t *)&qword_101672020, (void (*)(uint64_t))&type metadata accessor for SHA256);
  dispatch thunk of HashFunction.init()();
  switch(v11 >> 62)
  {
    case 1uLL:
      uint64_t v19 = v5;
      if (v9 >> 32 < (int)v9) {
        __break(1u);
      }
      uint64_t v18 = 0;
      sub_100510D4C(v9, v11);
      sub_10099EAEC((int)v9, v9 >> 32);
      sub_100510084(v9, v11);
      uint64_t v5 = v19;
      goto LABEL_9;
    case 2uLL:
      uint64_t v18 = 0;
      uint64_t v19 = v5;
      uint64_t v13 = *(void *)(v9 + 16);
      uint64_t v12 = *(void *)(v9 + 24);
      sub_100510D4C(v9, v11);
      swift_retain();
      swift_retain();
      uint64_t v14 = v13;
      uint64_t v5 = v19;
      sub_10099EAEC(v14, v12);
      swift_release();
      swift_release();
      goto LABEL_8;
    case 3uLL:
      memset(v21, 0, 14);
      goto LABEL_7;
    default:
      v21[0] = v9;
      LOWORD(v21[1]) = v11;
      BYTE2(v21[1]) = BYTE2(v11);
      BYTE3(v21[1]) = BYTE3(v11);
      BYTE4(v21[1]) = BYTE4(v11);
      BYTE5(v21[1]) = BYTE5(v11);
LABEL_7:
      dispatch thunk of HashFunction.update(bufferPointer:)();
LABEL_8:
      sub_100510084(v9, v11);
LABEL_9:
      dispatch thunk of HashFunction.finalize()();
      (*(void (**)(char *, uint64_t))(v1 + 8))(v4, v0);
      sub_100510084(v9, v11);
      SHA256Digest.withUnsafeBytes<A>(_:)();
      uint64_t v15 = LOBYTE(v21[0]);
      (*(void (**)(char *, uint64_t))(v20 + 8))(v8, v5);
      return v15;
  }
}

uint64_t sub_100BE4BA4(uint64_t a1)
{
  return sub_100BE45FC(a1, *(void *)(v1 + 16));
}

uint64_t sub_100BE4BC0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CRLFreehandDrawingShapeItemBucketCRDT(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100BE4C24(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for CRLFreehandDrawingShapeItemBucketCRDT(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100BE4C80(uint64_t a1)
{
  return sub_100BE4280(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_100BE4C9C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100BE4CE4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_100BE4D4C(uint64_t a1)
{
  return sub_100BE4C80(a1);
}

uint64_t sub_100BE4D64(uint64_t a1)
{
  return sub_100BE4BA4(a1);
}

uint64_t sub_100BE4D7C()
{
  id v1 = [v0 currentTool];
  id v2 = [v1 type];

  uint64_t result = 4;
  switch((unint64_t)v2)
  {
    case 0uLL:
    case 1uLL:
    case 2uLL:
    case 3uLL:
    case 4uLL:
    case 5uLL:
    case 6uLL:
      uint64_t result = 8;
      break;
    case 7uLL:
      return result;
    case 8uLL:
      id v4 = [v0 toolkitUIState];
      unsigned int v5 = [v4 eraserToolErasesWholeObjects];

      if (v5) {
        uint64_t result = 5;
      }
      else {
        uint64_t result = 8;
      }
      break;
    case 9uLL:
      uint64_t result = 7;
      break;
    default:
      type metadata accessor for CRLFreehandDrawingToolType(0);
      _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)();
      __break(1u);
      JUMPOUT(0x100BE4E7CLL);
  }
  return result;
}

id sub_100BE4EA4@<X0>(void *a1@<X1>, unsigned __int8 a2@<W2>, void *a3@<X3>, uint64_t a4@<X8>, double a5@<D0>, double a6@<D1>, double a7@<D2>, double a8@<D3>)
{
  unsigned __int8 v16 = a2 - 1;
  if ((a2 - 1) >= 4u)
  {
    if (a2 <= 7u && ((1 << a2) & 0xE1) != 0)
    {
      uint64_t v17 = &selRef_defaultOutlineColor;
      uint64_t v18 = v8;
    }
    else
    {
      uint64_t v18 = self;
      uint64_t v17 = &selRef_clearColor;
    }
  }
  else
  {
    uint64_t v17 = &selRef_colorForCurrentTool;
    uint64_t v18 = v8;
  }
  double v19 = 4.0;
  double v20 = 23.0;
  double v21 = 1.0;
  id v22 = [v18 *v17];
  int v23 = 0;
  id v24 = 0;
  double v25 = 1.0;
  switch(v26)
  {
    case 1:
    case 2:
    case 3:
    case 6:
      [v8 widthForCurrentTool];
      double v19 = v27;
      int v23 = 1;
      goto LABEL_9;
    case 5:
      goto LABEL_18;
    case 7:
      id v24 = 0;
      double v20 = 12.0;
      goto LABEL_18;
    case 8:
      id v24 = 0;
      double v20 = 0.0;
      goto LABEL_18;
    default:
LABEL_9:
      if (v16 > 3u)
      {
        if (v23)
        {
LABEL_14:
          id v29 = [v8 toolkitUIState];
          id v30 = [v8 currentTool];
          id v31 = [v30 type];

          id v24 = [v29 strokeWidthIndexForToolType:v31];
          goto LABEL_17;
        }
      }
      else
      {
        [v8 opacityForCurrentTool];
        double v25 = v28;
        if (v16 == 3) {
          double v21 = 1.0;
        }
        else {
          double v21 = a8;
        }
        if (v23) {
          goto LABEL_14;
        }
      }
      id v24 = 0;
LABEL_17:
      double v20 = v19;
LABEL_18:
      id v32 = [v22 CGColor];
      id v33 = sub_100B04C20(a2, (unint64_t)v24, v32);

      id v34 = [v22 CGColor];
      *(unsigned char *)a4 = a2;
      *(double *)(a4 + 8) = a5;
      *(double *)(a4 + 16) = a6;
      *(double *)(a4 + 24) = a7;
      *(void *)(a4 + 32) = v34;
      *(double *)(a4 + 40) = v20;
      *(double *)(a4 + 48) = v25;
      *(double *)(a4 + 56) = v21;
      *(void *)(a4 + 64) = a1;
      *(void *)(a4 + 72) = v33;
      *(void *)(a4 + 80) = a3;
      id v35 = a1;
      return a3;
  }
}

id sub_100BE52BC(void *a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = (uint64_t)_swiftEmptyArrayStorage;
  unint64_t v35 = (unint64_t)_swiftEmptyArrayStorage;
  if ([a1 type] == (id)7)
  {
    id result = [a1 visualRangesArray];
    if (!result)
    {
      __break(1u);
      return result;
    }
    uint64_t v8 = result;
    sub_10060E23C();
    uint64_t v9 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    if ((unint64_t)v9 >> 62) {
      goto LABEL_24;
    }
    uint64_t v10 = *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v10)
    {
      while (v10 >= 1)
      {
        id v31 = a2;
        uint64_t v32 = v3;
        uint64_t v6 = 0;
        while (1)
        {
          id v11 = (v9 & 0xC000000000000001) != 0
              ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)()
              : *(id *)(v9 + 8 * v6 + 32);
          a2 = v11;
          id v12 = [v11 rangeValue];
          uint64_t v14 = v13;
          uint64_t v15 = (objc_class *)type metadata accessor for CRLTextRange();
          id v16 = objc_allocWithZone(v15);
          uint64_t v17 = (char *)[objc_allocWithZone((Class)type metadata accessor for CRLTextPosition()) init:v12 caretAffinity:0];
          uint64_t v18 = v14 >= NSNotFound.getter() ? 0 : v14;
          uint64_t v19 = *(void *)&v17[OBJC_IVAR____TtC8Freeform15CRLTextPosition_location];
          uint64_t v3 = v19 + v18;
          if (__OFADD__(v19, v18)) {
            break;
          }
          if (v3 < v19) {
            goto LABEL_23;
          }
          uint64_t v20 = *(void *)&v17[OBJC_IVAR____TtC8Freeform15CRLTextPosition_caretAffinity];
          double v21 = (char *)objc_allocWithZone(v15);
          uint64_t v22 = OBJC_IVAR____TtC8Freeform12CRLTextRange_caretAffinity;
          *(void *)&v21[OBJC_IVAR____TtC8Freeform12CRLTextRange_caretAffinity] = 0;
          *(void *)&v21[OBJC_IVAR____TtC8Freeform12CRLTextRange_insertionEdge] = 0;
          int v23 = &v21[OBJC_IVAR____TtC8Freeform12CRLTextRange_range];
          *(void *)int v23 = v19;
          *((void *)v23 + 1) = v3;
          *(void *)&v21[v22] = v20;
          v33.receiver = v21;
          v33.super_class = v15;
          [super init];

          swift_getObjectType();
          swift_deallocPartialClassInstance();
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
          if (*(void *)((v35 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v35 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          }
          ++v6;
          specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized Array._endMutation()();

          if (v10 == v6)
          {
            swift_bridgeObjectRelease();
            a2 = v31;
            uint64_t v3 = v32;
            uint64_t v6 = (uint64_t)_swiftEmptyArrayStorage;
            goto LABEL_29;
          }
        }
        __break(1u);
LABEL_23:
        __break(1u);
LABEL_24:
        if (v9 < 0) {
          uint64_t v8 = (void *)v9;
        }
        else {
          uint64_t v8 = (void *)(v9 & 0xFFFFFFFFFFFFFF8);
        }
        swift_bridgeObjectRetain();
        uint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        if (!v10) {
          goto LABEL_28;
        }
      }
      __break(1u);
      goto LABEL_39;
    }
LABEL_28:
    swift_bridgeObjectRelease();
  }
  else
  {
    id v24 = [a1 range];
    uint64_t v26 = v25;
    id v27 = objc_allocWithZone((Class)type metadata accessor for CRLTextRange());
    id v28 = (id)sub_1006CC83C((uint64_t)v24, v26);
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)((v35 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v35 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
  }
LABEL_29:
  if ([a2 tag] == (id)11)
  {
    id v29 = (void *)v35;
    if (qword_10166EE60 != -1) {
      swift_once();
    }
    id v30 = (id)qword_10171A478;
    swift_bridgeObjectRetain();
    sub_100BE5818(v3, v29, (CGFloat *)&v34);
    goto LABEL_36;
  }
  if ([a2 tag] == (id)10)
  {
    uint64_t v8 = (void *)v35;
    if (qword_10166EE60 == -1)
    {
LABEL_35:
      id v30 = (id)qword_10171A478;
      swift_bridgeObjectRetain();
      sub_100BE5B08(v3, v8, (CGFloat *)&v34);
LABEL_36:

      return (id)swift_bridgeObjectRelease_n();
    }
LABEL_39:
    swift_once();
    goto LABEL_35;
  }
  sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"knobCenter(for:knob:)", 21, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/CRLWPKnobPositioning_i.swift", 88, 2, 43, (uint64_t)"Unknown knob tag.", 17, 2u, v6);
  sub_1005598CC(v6, (uint64_t)"knobCenter(for:knob:)", 21, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/CRLWPKnobPositioning_i.swift", 88, 2, 43);
  return (id)swift_bridgeObjectRelease();
}

double sub_100BE5818@<D0>(uint64_t a1@<X0>, void *a2@<X1>, CGFloat *a3@<X8>)
{
  uint64_t v6 = *(void *)(a1 + OBJC_IVAR____TtC8Freeform22CRLWPKnobPositioning_i_layout);
  if (qword_10166EE60 != -1) {
LABEL_18:
  }
    swift_once();
  id v7 = (id)qword_10171A478;
  swift_bridgeObjectRetain();
  sub_1006E976C(v6, (unint64_t)a2, &v22);

  swift_bridgeObjectRelease();
  uint64_t v6 = v22;
  if (!(v22 >> 62))
  {
    uint64_t v8 = *(void *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v8) {
      goto LABEL_4;
    }
LABEL_11:
    swift_bridgeObjectRelease_n();
    double MaxY = 0.0;
    CGFloat MaxX = 0.0;
    goto LABEL_12;
  }
  swift_bridgeObjectRetain();
  uint64_t v8 = _CocoaArrayWrapper.endIndex.getter();
  if (!v8) {
    goto LABEL_11;
  }
LABEL_4:
  uint64_t v9 = 4;
  while (1)
  {
    if ((v6 & 0xC000000000000001) != 0) {
      id v10 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v10 = *(id *)(v6 + 8 * v9);
    }
    a2 = v10;
    uint64_t v11 = v9 - 3;
    if (__OFADD__(v9 - 4, 1))
    {
      __break(1u);
      goto LABEL_18;
    }
    if ([v10 containsStart]) {
      break;
    }

    ++v9;
    if (v11 == v8) {
      goto LABEL_11;
    }
  }
  swift_bridgeObjectRelease_n();
  id v17 = [a2 writingDirection];
  [a2 rect];
  if (v17 == (id)1)
  {
    CGFloat MaxX = CGRectGetMaxX(*(CGRect *)&v18);
    [a2 rect];
    double MaxY = CGRectGetMaxY(v23);

    double v14 = *(double *)(a1 + OBJC_IVAR____TtC8Freeform22CRLWPKnobPositioning_i_knobRadius);
    double v15 = -0.5;
    goto LABEL_13;
  }
  CGFloat MaxX = CGRectGetMinX(*(CGRect *)&v18);
  [a2 rect];
  double MaxY = CGRectGetMinY(v24);

LABEL_12:
  double v14 = *(double *)(a1 + OBJC_IVAR____TtC8Freeform22CRLWPKnobPositioning_i_knobRadius);
  double v15 = 0.5;
LABEL_13:
  double result = MaxY + v14 * v15;
  *a3 = MaxX;
  a3[1] = result;
  return result;
}

double sub_100BE5B08@<D0>(uint64_t a1@<X0>, void *a2@<X1>, CGFloat *a3@<X8>)
{
  uint64_t v6 = *(void *)(a1 + OBJC_IVAR____TtC8Freeform22CRLWPKnobPositioning_i_layout);
  if (qword_10166EE60 != -1) {
LABEL_18:
  }
    swift_once();
  id v7 = (id)qword_10171A478;
  swift_bridgeObjectRetain();
  sub_1006E976C(v6, (unint64_t)a2, &v22);

  swift_bridgeObjectRelease();
  uint64_t v6 = v22;
  if (!(v22 >> 62))
  {
    uint64_t v8 = *(void *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v8) {
      goto LABEL_4;
    }
LABEL_11:
    swift_bridgeObjectRelease_n();
    double MinY = 0.0;
    CGFloat MinX = 0.0;
    goto LABEL_12;
  }
  swift_bridgeObjectRetain();
  uint64_t v8 = _CocoaArrayWrapper.endIndex.getter();
  if (!v8) {
    goto LABEL_11;
  }
LABEL_4:
  uint64_t v9 = 4;
  while (1)
  {
    if ((v6 & 0xC000000000000001) != 0) {
      id v10 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v10 = *(id *)(v6 + 8 * v9);
    }
    a2 = v10;
    uint64_t v11 = v9 - 3;
    if (__OFADD__(v9 - 4, 1))
    {
      __break(1u);
      goto LABEL_18;
    }
    if ([v10 containsEnd]) {
      break;
    }

    ++v9;
    if (v11 == v8) {
      goto LABEL_11;
    }
  }
  swift_bridgeObjectRelease_n();
  id v17 = [a2 writingDirection];
  [a2 rect];
  if (v17 == (id)1)
  {
    CGFloat MinX = CGRectGetMinX(*(CGRect *)&v18);
    [a2 rect];
    double MinY = CGRectGetMinY(v23);

    double v14 = *(double *)(a1 + OBJC_IVAR____TtC8Freeform22CRLWPKnobPositioning_i_knobRadius);
    double v15 = 0.5;
    goto LABEL_13;
  }
  CGFloat MinX = CGRectGetMaxX(*(CGRect *)&v18);
  [a2 rect];
  double MinY = CGRectGetMaxY(v24);

LABEL_12:
  double v14 = *(double *)(a1 + OBJC_IVAR____TtC8Freeform22CRLWPKnobPositioning_i_knobRadius);
  double v15 = -0.5;
LABEL_13:
  double result = MinY + v14 * v15;
  *a3 = MinX;
  a3[1] = result;
  return result;
}

id sub_100BE5E28()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLWPKnobPositioning_i();
  return [super dealloc];
}

uint64_t type metadata accessor for CRLWPKnobPositioning_i()
{
  return self;
}

unint64_t sub_100BE5E90(void *a1)
{
  unint64_t result = (unint64_t)[a1 isRange];
  if (result) {
    return ![a1 type] || [a1 type] == (id)4 || [a1 type] == (id)7;
  }
  return result;
}

uint64_t sub_100BE5F04@<X0>(uint64_t a1@<X8>)
{
  uint64_t v38 = a1;
  uint64_t v2 = sub_1005057FC(&qword_101672E90);
  __chkstk_darwin(v2 - 8, v3);
  unsigned int v5 = (char *)&v38 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for URL();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6, v8);
  id v10 = (char *)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for CRLUSDZAssetDataStruct(0);
  __chkstk_darwin(v11 - 8, v12);
  double v14 = (char *)&v38 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for CRLAssetData();
  __chkstk_darwin(v15 - 8, v16);
  uint64_t v18 = (char *)&v38 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19, v20);
  unint64_t v22 = (char *)&v38 - v21;
  swift_beginAccess();
  swift_retain();
  sub_1005057FC((uint64_t *)&unk_10167D2A0);
  CRRegister.wrappedValue.getter();
  swift_endAccess();
  swift_release();
  sub_100BF57E8((uint64_t)v14, (uint64_t)v18, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
  sub_100BF5964((uint64_t)v14, type metadata accessor for CRLUSDZAssetDataStruct);
  sub_100BF5780((uint64_t)v18, (uint64_t)v22, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
  CGRect v23 = *(char **)(v1 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_store);
  uint64_t v24 = *(void *)&v23[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManagerLock];
  uint64_t v25 = *(os_unfair_lock_s **)(v24 + 16);
  uint64_t v26 = v23;
  os_unfair_lock_lock(v25);
  uint64_t v27 = OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManager;
  id v28 = *(void **)&v26[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManager];
  if (v28)
  {
    id v29 = *(id *)&v26[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManager];
  }
  else
  {
    id v30 = objc_allocWithZone((Class)type metadata accessor for CRLAssetFileManager());
    id v31 = v26;
    id v32 = sub_100EAFDE4((uint64_t)v31);

    objc_super v33 = *(void **)&v26[v27];
    *(void *)&v26[v27] = v32;
    id v29 = v32;

    id v28 = 0;
  }
  uint64_t v34 = *(os_unfair_lock_s **)(v24 + 16);
  id v35 = v28;
  os_unfair_lock_unlock(v34);
  sub_100EA7CA0((uint64_t)v22, 0, 3, 0, 0, v5);

  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_100BF5964((uint64_t)v22, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
    sub_100522F00((uint64_t)v5, &qword_101672E90);
    uint64_t v36 = type metadata accessor for UTType();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v36 - 8) + 56))(v38, 1, 1, v36);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v10, v5, v6);
    sub_1006F28D8(0, v38);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
    return sub_100BF5964((uint64_t)v22, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
  }
}

uint64_t sub_100BE6360@<X0>(uint64_t a1@<X8>)
{
  uint64_t v38 = a1;
  uint64_t v2 = sub_1005057FC(&qword_101672E90);
  __chkstk_darwin(v2 - 8, v3);
  unsigned int v5 = (char *)&v38 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for URL();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6, v8);
  id v10 = (char *)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for CRLFileItemAtomicDataStruct(0);
  __chkstk_darwin(v11 - 8, v12);
  double v14 = (char *)&v38 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for CRLAssetData();
  __chkstk_darwin(v15 - 8, v16);
  uint64_t v18 = (char *)&v38 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19, v20);
  unint64_t v22 = (char *)&v38 - v21;
  swift_beginAccess();
  swift_retain();
  sub_1005057FC(&qword_101685450);
  CRRegister.wrappedValue.getter();
  swift_endAccess();
  swift_release();
  sub_100BF57E8((uint64_t)v14, (uint64_t)v18, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
  sub_100BF5964((uint64_t)v14, type metadata accessor for CRLFileItemAtomicDataStruct);
  sub_100BF5780((uint64_t)v18, (uint64_t)v22, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
  CGRect v23 = *(char **)(v1 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_store);
  uint64_t v24 = *(void *)&v23[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManagerLock];
  uint64_t v25 = *(os_unfair_lock_s **)(v24 + 16);
  uint64_t v26 = v23;
  os_unfair_lock_lock(v25);
  uint64_t v27 = OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManager;
  id v28 = *(void **)&v26[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManager];
  if (v28)
  {
    id v29 = *(id *)&v26[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManager];
  }
  else
  {
    id v30 = objc_allocWithZone((Class)type metadata accessor for CRLAssetFileManager());
    id v31 = v26;
    id v32 = sub_100EAFDE4((uint64_t)v31);

    objc_super v33 = *(void **)&v26[v27];
    *(void *)&v26[v27] = v32;
    id v29 = v32;

    id v28 = 0;
  }
  uint64_t v34 = *(os_unfair_lock_s **)(v24 + 16);
  id v35 = v28;
  os_unfair_lock_unlock(v34);
  sub_100EA7CA0((uint64_t)v22, 0, 3, 0, 0, v5);

  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_100BF5964((uint64_t)v22, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
    sub_100522F00((uint64_t)v5, &qword_101672E90);
    uint64_t v36 = type metadata accessor for UTType();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v36 - 8) + 56))(v38, 1, 1, v36);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v10, v5, v6);
    sub_1006F28D8(0, v38);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
    return sub_100BF5964((uint64_t)v22, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
  }
}

uint64_t sub_100BE67BC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v38 = a1;
  uint64_t v2 = sub_1005057FC(&qword_101672E90);
  __chkstk_darwin(v2 - 8, v3);
  unsigned int v5 = (char *)&v38 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for URL();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6, v8);
  id v10 = (char *)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for CRLMovieItemAssetData(0);
  __chkstk_darwin(v11 - 8, v12);
  double v14 = (char *)&v38 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for CRLAssetData();
  __chkstk_darwin(v15 - 8, v16);
  uint64_t v18 = (char *)&v38 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19, v20);
  unint64_t v22 = (char *)&v38 - v21;
  swift_beginAccess();
  swift_retain();
  sub_1005057FC(&qword_1016A4070);
  CRRegister.wrappedValue.getter();
  swift_endAccess();
  swift_release();
  sub_100BF57E8((uint64_t)v14, (uint64_t)v18, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
  sub_100BF5964((uint64_t)v14, type metadata accessor for CRLMovieItemAssetData);
  sub_100BF5780((uint64_t)v18, (uint64_t)v22, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
  CGRect v23 = *(char **)(v1 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_store);
  uint64_t v24 = *(void *)&v23[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManagerLock];
  uint64_t v25 = *(os_unfair_lock_s **)(v24 + 16);
  uint64_t v26 = v23;
  os_unfair_lock_lock(v25);
  uint64_t v27 = OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManager;
  id v28 = *(void **)&v26[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManager];
  if (v28)
  {
    id v29 = *(id *)&v26[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManager];
  }
  else
  {
    id v30 = objc_allocWithZone((Class)type metadata accessor for CRLAssetFileManager());
    id v31 = v26;
    id v32 = sub_100EAFDE4((uint64_t)v31);

    objc_super v33 = *(void **)&v26[v27];
    *(void *)&v26[v27] = v32;
    id v29 = v32;

    id v28 = 0;
  }
  uint64_t v34 = *(os_unfair_lock_s **)(v24 + 16);
  id v35 = v28;
  os_unfair_lock_unlock(v34);
  sub_100EA7CA0((uint64_t)v22, 0, 3, 0, 0, v5);

  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_100BF5964((uint64_t)v22, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
    sub_100522F00((uint64_t)v5, &qword_101672E90);
    uint64_t v36 = type metadata accessor for UTType();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v36 - 8) + 56))(v38, 1, 1, v36);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v10, v5, v6);
    sub_1006F28D8(0, v38);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
    return sub_100BF5964((uint64_t)v22, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
  }
}

uint64_t sub_100BE6C18(uint64_t a1)
{
  uint64_t v48 = a1;
  uint64_t v2 = sub_1005057FC((uint64_t *)&unk_101676160);
  __chkstk_darwin(v2 - 8, v3);
  unsigned int v5 = (char *)&v48 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for UTType();
  uint64_t v51 = *(void *)(v6 - 8);
  uint64_t v52 = v6;
  __chkstk_darwin(v6, v7);
  char v49 = (char *)&v48 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1005057FC(&qword_101672E90);
  __chkstk_darwin(v9 - 8, v10);
  uint64_t v12 = (char *)&v48 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for URL();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13, v15);
  uint64_t v50 = (char *)&v48 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for CRLUSDZAssetDataStruct(0);
  __chkstk_darwin(v17 - 8, v18);
  uint64_t v20 = (char *)&v48 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = type metadata accessor for CRLAssetData();
  __chkstk_darwin(v21 - 8, v22);
  uint64_t v24 = (char *)&v48 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25, v26);
  id v28 = (char *)&v48 - v27;
  swift_beginAccess();
  swift_retain();
  sub_1005057FC((uint64_t *)&unk_10167D2A0);
  CRRegister.wrappedValue.getter();
  swift_endAccess();
  swift_release();
  sub_100BF57E8((uint64_t)v20, (uint64_t)v24, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
  sub_100BF5964((uint64_t)v20, type metadata accessor for CRLUSDZAssetDataStruct);
  sub_100BF5780((uint64_t)v24, (uint64_t)v28, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
  id v29 = *(char **)(v1 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_store);
  uint64_t v30 = *(void *)&v29[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManagerLock];
  id v31 = *(os_unfair_lock_s **)(v30 + 16);
  id v32 = v29;
  os_unfair_lock_lock(v31);
  uint64_t v33 = OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManager;
  uint64_t v34 = *(void **)&v32[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManager];
  if (v34)
  {
    id v35 = *(id *)&v32[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManager];
  }
  else
  {
    id v36 = objc_allocWithZone((Class)type metadata accessor for CRLAssetFileManager());
    uint64_t v37 = v32;
    id v38 = sub_100EAFDE4((uint64_t)v37);

    int v39 = *(void **)&v32[v33];
    *(void *)&v32[v33] = v38;
    id v35 = v38;

    uint64_t v34 = 0;
  }
  uint64_t v40 = *(os_unfair_lock_s **)(v30 + 16);
  id v41 = v34;
  os_unfair_lock_unlock(v40);
  sub_100EA7CA0((uint64_t)v28, 0, 3, 0, 0, v12);

  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
  {
    sub_100BF5964((uint64_t)v28, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
    sub_100522F00((uint64_t)v12, &qword_101672E90);
    return 0;
  }
  char v42 = v50;
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v50, v12, v13);
  sub_1006F28D8(0, (uint64_t)v5);
  uint64_t v44 = v51;
  uint64_t v43 = v52;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v51 + 48))(v5, 1, v52) == 1)
  {
    (*(void (**)(char *, uint64_t))(v14 + 8))(v42, v13);
    sub_100BF5964((uint64_t)v28, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
    sub_100522F00((uint64_t)v5, (uint64_t *)&unk_101676160);
    return 0;
  }
  BOOL v45 = v49;
  (*(void (**)(char *, char *, uint64_t))(v44 + 32))(v49, v5, v43);
  if ((static UTType.== infix(_:_:)() & 1) == 0)
  {
    (*(void (**)(char *, uint64_t))(v44 + 8))(v45, v43);
    (*(void (**)(char *, uint64_t))(v14 + 8))(v42, v13);
    sub_100BF5964((uint64_t)v28, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
    return 0;
  }
  uint64_t v47 = Data.init(contentsOf:options:)();
  (*(void (**)(char *, uint64_t))(v44 + 8))(v49, v43);
  (*(void (**)(char *, uint64_t))(v14 + 8))(v42, v13);
  sub_100BF5964((uint64_t)v28, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
  return v47;
}

uint64_t sub_100BE7384(uint64_t a1)
{
  uint64_t v48 = a1;
  uint64_t v2 = sub_1005057FC((uint64_t *)&unk_101676160);
  __chkstk_darwin(v2 - 8, v3);
  unsigned int v5 = (char *)&v48 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for UTType();
  uint64_t v51 = *(void *)(v6 - 8);
  uint64_t v52 = v6;
  __chkstk_darwin(v6, v7);
  char v49 = (char *)&v48 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1005057FC(&qword_101672E90);
  __chkstk_darwin(v9 - 8, v10);
  uint64_t v12 = (char *)&v48 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for URL();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13, v15);
  uint64_t v50 = (char *)&v48 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for CRLFileItemAtomicDataStruct(0);
  __chkstk_darwin(v17 - 8, v18);
  uint64_t v20 = (char *)&v48 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = type metadata accessor for CRLAssetData();
  __chkstk_darwin(v21 - 8, v22);
  uint64_t v24 = (char *)&v48 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25, v26);
  id v28 = (char *)&v48 - v27;
  swift_beginAccess();
  swift_retain();
  sub_1005057FC(&qword_101685450);
  CRRegister.wrappedValue.getter();
  swift_endAccess();
  swift_release();
  sub_100BF57E8((uint64_t)v20, (uint64_t)v24, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
  sub_100BF5964((uint64_t)v20, type metadata accessor for CRLFileItemAtomicDataStruct);
  sub_100BF5780((uint64_t)v24, (uint64_t)v28, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
  id v29 = *(char **)(v1 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_store);
  uint64_t v30 = *(void *)&v29[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManagerLock];
  id v31 = *(os_unfair_lock_s **)(v30 + 16);
  id v32 = v29;
  os_unfair_lock_lock(v31);
  uint64_t v33 = OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManager;
  uint64_t v34 = *(void **)&v32[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManager];
  if (v34)
  {
    id v35 = *(id *)&v32[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManager];
  }
  else
  {
    id v36 = objc_allocWithZone((Class)type metadata accessor for CRLAssetFileManager());
    uint64_t v37 = v32;
    id v38 = sub_100EAFDE4((uint64_t)v37);

    int v39 = *(void **)&v32[v33];
    *(void *)&v32[v33] = v38;
    id v35 = v38;

    uint64_t v34 = 0;
  }
  uint64_t v40 = *(os_unfair_lock_s **)(v30 + 16);
  id v41 = v34;
  os_unfair_lock_unlock(v40);
  sub_100EA7CA0((uint64_t)v28, 0, 3, 0, 0, v12);

  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
  {
    sub_100BF5964((uint64_t)v28, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
    sub_100522F00((uint64_t)v12, &qword_101672E90);
    return 0;
  }
  char v42 = v50;
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v50, v12, v13);
  sub_1006F28D8(0, (uint64_t)v5);
  uint64_t v44 = v51;
  uint64_t v43 = v52;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v51 + 48))(v5, 1, v52) == 1)
  {
    (*(void (**)(char *, uint64_t))(v14 + 8))(v42, v13);
    sub_100BF5964((uint64_t)v28, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
    sub_100522F00((uint64_t)v5, (uint64_t *)&unk_101676160);
    return 0;
  }
  BOOL v45 = v49;
  (*(void (**)(char *, char *, uint64_t))(v44 + 32))(v49, v5, v43);
  if ((static UTType.== infix(_:_:)() & 1) == 0)
  {
    (*(void (**)(char *, uint64_t))(v44 + 8))(v45, v43);
    (*(void (**)(char *, uint64_t))(v14 + 8))(v42, v13);
    sub_100BF5964((uint64_t)v28, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
    return 0;
  }
  uint64_t v47 = Data.init(contentsOf:options:)();
  (*(void (**)(char *, uint64_t))(v44 + 8))(v49, v43);
  (*(void (**)(char *, uint64_t))(v14 + 8))(v42, v13);
  sub_100BF5964((uint64_t)v28, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
  return v47;
}

uint64_t sub_100BE7AF0(uint64_t a1)
{
  uint64_t v48 = a1;
  uint64_t v2 = sub_1005057FC((uint64_t *)&unk_101676160);
  __chkstk_darwin(v2 - 8, v3);
  unsigned int v5 = (char *)&v48 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for UTType();
  uint64_t v51 = *(void *)(v6 - 8);
  uint64_t v52 = v6;
  __chkstk_darwin(v6, v7);
  char v49 = (char *)&v48 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1005057FC(&qword_101672E90);
  __chkstk_darwin(v9 - 8, v10);
  uint64_t v12 = (char *)&v48 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for URL();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13, v15);
  uint64_t v50 = (char *)&v48 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for CRLMovieItemAssetData(0);
  __chkstk_darwin(v17 - 8, v18);
  uint64_t v20 = (char *)&v48 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = type metadata accessor for CRLAssetData();
  __chkstk_darwin(v21 - 8, v22);
  uint64_t v24 = (char *)&v48 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25, v26);
  id v28 = (char *)&v48 - v27;
  swift_beginAccess();
  swift_retain();
  sub_1005057FC(&qword_1016A4070);
  CRRegister.wrappedValue.getter();
  swift_endAccess();
  swift_release();
  sub_100BF57E8((uint64_t)v20, (uint64_t)v24, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
  sub_100BF5964((uint64_t)v20, type metadata accessor for CRLMovieItemAssetData);
  sub_100BF5780((uint64_t)v24, (uint64_t)v28, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
  id v29 = *(char **)(v1 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_store);
  uint64_t v30 = *(void *)&v29[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManagerLock];
  id v31 = *(os_unfair_lock_s **)(v30 + 16);
  id v32 = v29;
  os_unfair_lock_lock(v31);
  uint64_t v33 = OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManager;
  uint64_t v34 = *(void **)&v32[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManager];
  if (v34)
  {
    id v35 = *(id *)&v32[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManager];
  }
  else
  {
    id v36 = objc_allocWithZone((Class)type metadata accessor for CRLAssetFileManager());
    uint64_t v37 = v32;
    id v38 = sub_100EAFDE4((uint64_t)v37);

    int v39 = *(void **)&v32[v33];
    *(void *)&v32[v33] = v38;
    id v35 = v38;

    uint64_t v34 = 0;
  }
  uint64_t v40 = *(os_unfair_lock_s **)(v30 + 16);
  id v41 = v34;
  os_unfair_lock_unlock(v40);
  sub_100EA7CA0((uint64_t)v28, 0, 3, 0, 0, v12);

  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
  {
    sub_100BF5964((uint64_t)v28, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
    sub_100522F00((uint64_t)v12, &qword_101672E90);
    return 0;
  }
  char v42 = v50;
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v50, v12, v13);
  sub_1006F28D8(0, (uint64_t)v5);
  uint64_t v44 = v51;
  uint64_t v43 = v52;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v51 + 48))(v5, 1, v52) == 1)
  {
    (*(void (**)(char *, uint64_t))(v14 + 8))(v42, v13);
    sub_100BF5964((uint64_t)v28, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
    sub_100522F00((uint64_t)v5, (uint64_t *)&unk_101676160);
    return 0;
  }
  BOOL v45 = v49;
  (*(void (**)(char *, char *, uint64_t))(v44 + 32))(v49, v5, v43);
  if ((static UTType.== infix(_:_:)() & 1) == 0)
  {
    (*(void (**)(char *, uint64_t))(v44 + 8))(v45, v43);
    (*(void (**)(char *, uint64_t))(v14 + 8))(v42, v13);
    sub_100BF5964((uint64_t)v28, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
    return 0;
  }
  uint64_t v47 = Data.init(contentsOf:options:)();
  (*(void (**)(char *, uint64_t))(v44 + 8))(v49, v43);
  (*(void (**)(char *, uint64_t))(v14 + 8))(v42, v13);
  sub_100BF5964((uint64_t)v28, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
  return v47;
}

int64x2_t sub_100BE825C()
{
  int64x2_t result = vdupq_n_s64(0x4062C00000000000uLL);
  xmmword_1016973F0 = (__int128)result;
  return result;
}

int64x2_t sub_100BE8278()
{
  int64x2_t result = vdupq_n_s64(0x4072C00000000000uLL);
  xmmword_101697400 = (__int128)result;
  return result;
}

uint64_t sub_100BE8294(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for CRLMovieItemAssetData(0);
  __chkstk_darwin(v4 - 8, v5);
  uint64_t v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8, v9);
  uint64_t v11 = (char *)&v27 - v10;
  __chkstk_darwin(v12, v13);
  uint64_t v15 = (char *)&v27 - v14;
  if (!*(void *)(v1 + OBJC_IVAR____TtC8Freeform12CRLBoardItem_transactionContext)
    && (uint64_t v16 = (void *)swift_unknownObjectWeakLoadStrong()) != 0
    && (uint64_t v17 = v16, v18 = (*(uint64_t (**)(void))((swift_isaMask & *v16) + 0x2F0))(), v17, (v18 & 1) != 0))
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"_guardTransaction()", 19, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLTransactions/CRLTransactable.swift", 91, 2, 76, (uint64_t)"Attempting to mutate a CRLTransactable without a CRLTransactableContext set", 75, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_100586FD4((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Attempting to mutate a CRLTransactable without a CRLTransactableContext set");
    sub_1005871AC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"_guardTransaction()", 19, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLTransactions/CRLTransactable.swift", 91, 2, 76);
    SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v25, v26);
    uint64_t result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
  else
  {
    swift_beginAccess();
    swift_retain();
    sub_1005057FC(&qword_1016A4070);
    CRRegister.wrappedValue.getter();
    swift_endAccess();
    sub_100BF5900(a1, (uint64_t)v15);
    sub_100BF57E8((uint64_t)v15, (uint64_t)v11, type metadata accessor for CRLMovieItemAssetData);
    swift_beginAccess();
    sub_100BF57E8((uint64_t)v11, (uint64_t)v7, type metadata accessor for CRLMovieItemAssetData);
    CRRegister.wrappedValue.setter();
    sub_100BF5964((uint64_t)v11, type metadata accessor for CRLMovieItemAssetData);
    swift_endAccess();
    sub_100BF5964((uint64_t)v15, type metadata accessor for CRLMovieItemAssetData);
    swift_release();
    uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
    if (!Strong
      || (uint64_t v20 = Strong,
          char v21 = (*(uint64_t (**)(void))((swift_isaMask & *Strong) + 0x2F0))(),
          v20,
          (v21 & 1) == 0))
    {
      uint64_t v22 = *(void **)(v2 + OBJC_IVAR____TtC8Freeform12CRLMovieItem__movieAssetAsData);
      *(void *)(v2 + OBJC_IVAR____TtC8Freeform12CRLMovieItem__movieAssetAsData) = 0;

      uint64_t v23 = *(void **)(v2 + OBJC_IVAR____TtC8Freeform12CRLMovieItem__posterImageAssetAsData);
      *(void *)(v2 + OBJC_IVAR____TtC8Freeform12CRLMovieItem__posterImageAssetAsData) = 0;

      *(unsigned char *)(v2 + OBJC_IVAR____TtC8Freeform12CRLMovieItem_spatial) = 2;
    }
    return sub_100BF5964(a1, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
  }
  return result;
}

uint64_t sub_100BE86A0(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for CRLMovieItemAssetData(0);
  __chkstk_darwin(v4, v5);
  uint64_t v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8, v9);
  uint64_t v11 = (char *)&v26 - v10;
  __chkstk_darwin(v12, v13);
  uint64_t v15 = (char *)&v26 - v14;
  if (!*(void *)(v1 + OBJC_IVAR____TtC8Freeform12CRLBoardItem_transactionContext)
    && (uint64_t v16 = (void *)swift_unknownObjectWeakLoadStrong()) != 0
    && (uint64_t v17 = v16, v18 = (*(uint64_t (**)(void))((swift_isaMask & *v16) + 0x2F0))(), v17, (v18 & 1) != 0))
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"_guardTransaction()", 19, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLTransactions/CRLTransactable.swift", 91, 2, 76, (uint64_t)"Attempting to mutate a CRLTransactable without a CRLTransactableContext set", 75, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_100586FD4((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Attempting to mutate a CRLTransactable without a CRLTransactableContext set");
    sub_1005871AC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"_guardTransaction()", 19, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLTransactions/CRLTransactable.swift", 91, 2, 76);
    SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v24, v25);
    uint64_t result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
  else
  {
    swift_beginAccess();
    swift_retain();
    sub_1005057FC(&qword_1016A4070);
    CRRegister.wrappedValue.getter();
    swift_endAccess();
    sub_100BF5898(a1, (uint64_t)&v15[*(int *)(v4 + 20)]);
    sub_100BF57E8((uint64_t)v15, (uint64_t)v11, type metadata accessor for CRLMovieItemAssetData);
    swift_beginAccess();
    sub_100BF57E8((uint64_t)v11, (uint64_t)v7, type metadata accessor for CRLMovieItemAssetData);
    CRRegister.wrappedValue.setter();
    sub_100BF5964((uint64_t)v11, type metadata accessor for CRLMovieItemAssetData);
    swift_endAccess();
    sub_100BF5964((uint64_t)v15, type metadata accessor for CRLMovieItemAssetData);
    swift_release();
    uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
    if (!Strong
      || (uint64_t v20 = Strong,
          char v21 = (*(uint64_t (**)(void))((swift_isaMask & *Strong) + 0x2F0))(),
          v20,
          (v21 & 1) == 0))
    {
      uint64_t v22 = *(void **)(v2 + OBJC_IVAR____TtC8Freeform12CRLMovieItem__posterImageAssetAsData);
      *(void *)(v2 + OBJC_IVAR____TtC8Freeform12CRLMovieItem__posterImageAssetAsData) = 0;
    }
    return sub_100522F00(a1, (uint64_t *)&unk_10167D2B0);
  }
  return result;
}

void sub_100BE8C34(double a1)
{
  uint64_t v3 = type metadata accessor for CRLMovieItemAssetData(0);
  __chkstk_darwin(v3, v4);
  uint64_t v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7, v8);
  uint64_t v10 = (char *)&v21 - v9;
  __chkstk_darwin(v11, v12);
  uint64_t v14 = (char *)&v21 - v13;
  if (!*(void *)(v1 + OBJC_IVAR____TtC8Freeform12CRLBoardItem_transactionContext)
    && (uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong()) != 0
    && (uint64_t v16 = Strong,
        char v17 = (*(uint64_t (**)(void))((swift_isaMask & *Strong) + 0x2F0))(),
        v16,
        (v17 & 1) != 0))
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"_guardTransaction()", 19, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLTransactions/CRLTransactable.swift", 91, 2, 76, (uint64_t)"Attempting to mutate a CRLTransactable without a CRLTransactableContext set", 75, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_100586FD4((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Attempting to mutate a CRLTransactable without a CRLTransactableContext set");
    sub_1005871AC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"_guardTransaction()", 19, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLTransactions/CRLTransactable.swift", 91, 2, 76);
    SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v19, v20);
    _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
  else
  {
    swift_beginAccess();
    swift_retain();
    sub_1005057FC(&qword_1016A4070);
    CRRegister.wrappedValue.getter();
    double v18 = *(double *)&v14[*(int *)(v3 + 32)];
    swift_endAccess();
    sub_100BF5964((uint64_t)v14, type metadata accessor for CRLMovieItemAssetData);
    swift_release();
    if (v18 >= a1)
    {
      swift_beginAccess();
      swift_retain();
      CRRegister.wrappedValue.getter();
      swift_endAccess();
      *(double *)&v14[*(int *)(v3 + 28)] = a1;
      sub_100BF57E8((uint64_t)v14, (uint64_t)v10, type metadata accessor for CRLMovieItemAssetData);
      swift_beginAccess();
      sub_100BF57E8((uint64_t)v10, (uint64_t)v6, type metadata accessor for CRLMovieItemAssetData);
      CRRegister.wrappedValue.setter();
      sub_100BF5964((uint64_t)v10, type metadata accessor for CRLMovieItemAssetData);
      swift_endAccess();
      sub_100BF5964((uint64_t)v14, type metadata accessor for CRLMovieItemAssetData);
      swift_release();
    }
    else
    {
      sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"startTime", 9, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLMovieItem.swift", 83, 2, 55, (uint64_t)"Attempting to set startTime after endTime will only lead to misery.", 67, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"startTime", 9, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLMovieItem.swift", 83, 2, 55);
    }
  }
}

void sub_100BE9288(double a1)
{
  uint64_t v3 = type metadata accessor for CRLMovieItemAssetData(0);
  __chkstk_darwin(v3, v4);
  uint64_t v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7, v8);
  uint64_t v10 = (char *)&v21 - v9;
  __chkstk_darwin(v11, v12);
  uint64_t v14 = (char *)&v21 - v13;
  if (!*(void *)(v1 + OBJC_IVAR____TtC8Freeform12CRLBoardItem_transactionContext)
    && (uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong()) != 0
    && (uint64_t v16 = Strong,
        char v17 = (*(uint64_t (**)(void))((swift_isaMask & *Strong) + 0x2F0))(),
        v16,
        (v17 & 1) != 0))
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"_guardTransaction()", 19, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLTransactions/CRLTransactable.swift", 91, 2, 76, (uint64_t)"Attempting to mutate a CRLTransactable without a CRLTransactableContext set", 75, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_100586FD4((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Attempting to mutate a CRLTransactable without a CRLTransactableContext set");
    sub_1005871AC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"_guardTransaction()", 19, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLTransactions/CRLTransactable.swift", 91, 2, 76);
    SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v19, v20);
    _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
  else
  {
    swift_beginAccess();
    swift_retain();
    sub_1005057FC(&qword_1016A4070);
    CRRegister.wrappedValue.getter();
    double v18 = *(double *)&v14[*(int *)(v3 + 28)];
    swift_endAccess();
    sub_100BF5964((uint64_t)v14, type metadata accessor for CRLMovieItemAssetData);
    swift_release();
    if (v18 <= a1)
    {
      swift_beginAccess();
      swift_retain();
      CRRegister.wrappedValue.getter();
      swift_endAccess();
      *(double *)&v14[*(int *)(v3 + 32)] = a1;
      sub_100BF57E8((uint64_t)v14, (uint64_t)v10, type metadata accessor for CRLMovieItemAssetData);
      swift_beginAccess();
      sub_100BF57E8((uint64_t)v10, (uint64_t)v6, type metadata accessor for CRLMovieItemAssetData);
      CRRegister.wrappedValue.setter();
      sub_100BF5964((uint64_t)v10, type metadata accessor for CRLMovieItemAssetData);
      swift_endAccess();
      sub_100BF5964((uint64_t)v14, type metadata accessor for CRLMovieItemAssetData);
      swift_release();
    }
    else
    {
      sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"endTime", 7, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLMovieItem.swift", 83, 2, 67, (uint64_t)"Attempting to set startTime after endTime will only lead to misery.", 67, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"endTime", 7, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLMovieItem.swift", 83, 2, 67);
    }
  }
}

uint64_t sub_100BE98D0(char a1)
{
  uint64_t v3 = type metadata accessor for CRLMovieItemAssetData(0);
  __chkstk_darwin(v3, v4);
  uint64_t v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7, v8);
  uint64_t v10 = (char *)&v21 - v9;
  __chkstk_darwin(v11, v12);
  uint64_t v14 = (char *)&v21 - v13;
  if (!*(void *)(v1 + OBJC_IVAR____TtC8Freeform12CRLBoardItem_transactionContext)
    && (uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong()) != 0
    && (uint64_t v16 = Strong,
        char v17 = (*(uint64_t (**)(void))((swift_isaMask & *Strong) + 0x2F0))(),
        v16,
        (v17 & 1) != 0))
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"_guardTransaction()", 19, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLTransactions/CRLTransactable.swift", 91, 2, 76, (uint64_t)"Attempting to mutate a CRLTransactable without a CRLTransactableContext set", 75, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_100586FD4((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Attempting to mutate a CRLTransactable without a CRLTransactableContext set");
    sub_1005871AC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"_guardTransaction()", 19, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLTransactions/CRLTransactable.swift", 91, 2, 76);
    SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v19, v20);
    uint64_t result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
  else
  {
    swift_beginAccess();
    swift_retain();
    sub_1005057FC(&qword_1016A4070);
    CRRegister.wrappedValue.getter();
    swift_endAccess();
    v14[*(int *)(v3 + 36)] = a1 & 1;
    sub_100BF57E8((uint64_t)v14, (uint64_t)v10, type metadata accessor for CRLMovieItemAssetData);
    swift_beginAccess();
    sub_100BF57E8((uint64_t)v10, (uint64_t)v6, type metadata accessor for CRLMovieItemAssetData);
    CRRegister.wrappedValue.setter();
    sub_100BF5964((uint64_t)v10, type metadata accessor for CRLMovieItemAssetData);
    swift_endAccess();
    sub_100BF5964((uint64_t)v14, type metadata accessor for CRLMovieItemAssetData);
    return swift_release();
  }
  return result;
}

uint64_t sub_100BE9C60()
{
  uint64_t v0 = type metadata accessor for CRLMovieItemAssetData(0);
  uint64_t v1 = v0 - 8;
  __chkstk_darwin(v0, v2);
  uint64_t v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  swift_retain();
  sub_1005057FC(&qword_1016A4070);
  CRRegister.wrappedValue.getter();
  LOBYTE(v1) = v4[*(int *)(v1 + 56)];
  swift_endAccess();
  sub_100BF5964((uint64_t)v4, type metadata accessor for CRLMovieItemAssetData);
  swift_release();
  return v1 & 1;
}

uint64_t sub_100BE9DE4(char a1)
{
  uint64_t v3 = type metadata accessor for CRLMovieItemAssetData(0);
  __chkstk_darwin(v3, v4);
  uint64_t v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7, v8);
  uint64_t v10 = (char *)&v21 - v9;
  __chkstk_darwin(v11, v12);
  uint64_t v14 = (char *)&v21 - v13;
  if (!*(void *)(v1 + OBJC_IVAR____TtC8Freeform12CRLBoardItem_transactionContext)
    && (uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong()) != 0
    && (uint64_t v16 = Strong,
        char v17 = (*(uint64_t (**)(void))((swift_isaMask & *Strong) + 0x2F0))(),
        v16,
        (v17 & 1) != 0))
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"_guardTransaction()", 19, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLTransactions/CRLTransactable.swift", 91, 2, 76, (uint64_t)"Attempting to mutate a CRLTransactable without a CRLTransactableContext set", 75, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_100586FD4((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Attempting to mutate a CRLTransactable without a CRLTransactableContext set");
    sub_1005871AC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"_guardTransaction()", 19, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLTransactions/CRLTransactable.swift", 91, 2, 76);
    SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v19, v20);
    uint64_t result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
  else
  {
    swift_beginAccess();
    swift_retain();
    sub_1005057FC(&qword_1016A4070);
    CRRegister.wrappedValue.getter();
    swift_endAccess();
    v14[*(int *)(v3 + 48)] = a1 & 1;
    sub_100BF57E8((uint64_t)v14, (uint64_t)v10, type metadata accessor for CRLMovieItemAssetData);
    swift_beginAccess();
    sub_100BF57E8((uint64_t)v10, (uint64_t)v6, type metadata accessor for CRLMovieItemAssetData);
    CRRegister.wrappedValue.setter();
    sub_100BF5964((uint64_t)v10, type metadata accessor for CRLMovieItemAssetData);
    swift_endAccess();
    sub_100BF5964((uint64_t)v14, type metadata accessor for CRLMovieItemAssetData);
    return swift_release();
  }
  return result;
}

uint64_t sub_100BEA174()
{
  uint64_t v1 = OBJC_IVAR____TtC8Freeform12CRLMovieItem_spatial;
  LODWORD(v2) = *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC8Freeform12CRLMovieItem_spatial);
  if (v2 == 2)
  {
    uint64_t v3 = v0;
    uint64_t v4 = sub_100BEBBB0();
    uint64_t v5 = *(void *)&v4[OBJC_IVAR____TtC8Freeform8CRLAsset_storage + 24];
    uint64_t v6 = *(void *)&v4[OBJC_IVAR____TtC8Freeform8CRLAsset_storage + 32];
    sub_10050F848(&v4[OBJC_IVAR____TtC8Freeform8CRLAsset_storage], v5);
    char v7 = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 64))(v5, v6);

    if (v7)
    {
      LOBYTE(v2) = *(unsigned char *)(v3 + v1);
    }
    else
    {
      uint64_t v8 = sub_100BEBBB0();
      uint64_t v9 = *(void *)&v8[OBJC_IVAR____TtC8Freeform8CRLAsset_storage + 24];
      uint64_t v10 = *(void *)&v8[OBJC_IVAR____TtC8Freeform8CRLAsset_storage + 32];
      sub_10050F848(&v8[OBJC_IVAR____TtC8Freeform8CRLAsset_storage], v9);
      uint64_t v11 = (void *)(*(uint64_t (**)(void *, uint64_t, uint64_t))(v10 + 56))(_swiftEmptyDictionarySingleton, v9, v10);

      uint64_t v2 = [self videoAssetIsSpatial:v11];
      *(unsigned char *)(v3 + v1) = v2;
    }
  }
  return v2 & 1;
}

uint64_t sub_100BEA4EC(double a1)
{
  uint64_t v3 = type metadata accessor for CRLMovieItemAssetData(0);
  __chkstk_darwin(v3, v4);
  uint64_t v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7, v8);
  uint64_t v10 = (char *)&v21 - v9;
  __chkstk_darwin(v11, v12);
  uint64_t v14 = (char *)&v21 - v13;
  if (!*(void *)(v1 + OBJC_IVAR____TtC8Freeform12CRLBoardItem_transactionContext)
    && (uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong()) != 0
    && (uint64_t v16 = Strong,
        char v17 = (*(uint64_t (**)(void))((swift_isaMask & *Strong) + 0x2F0))(),
        v16,
        (v17 & 1) != 0))
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"_guardTransaction()", 19, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLTransactions/CRLTransactable.swift", 91, 2, 76, (uint64_t)"Attempting to mutate a CRLTransactable without a CRLTransactableContext set", 75, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_100586FD4((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Attempting to mutate a CRLTransactable without a CRLTransactableContext set");
    sub_1005871AC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"_guardTransaction()", 19, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLTransactions/CRLTransactable.swift", 91, 2, 76);
    SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v19, v20);
    uint64_t result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
  else
  {
    swift_beginAccess();
    swift_retain();
    sub_1005057FC(&qword_1016A4070);
    CRRegister.wrappedValue.getter();
    swift_endAccess();
    *(double *)&v14[*(int *)(v3 + 24)] = a1;
    sub_100BF57E8((uint64_t)v14, (uint64_t)v10, type metadata accessor for CRLMovieItemAssetData);
    swift_beginAccess();
    sub_100BF57E8((uint64_t)v10, (uint64_t)v6, type metadata accessor for CRLMovieItemAssetData);
    CRRegister.wrappedValue.setter();
    sub_100BF5964((uint64_t)v10, type metadata accessor for CRLMovieItemAssetData);
    swift_endAccess();
    sub_100BF5964((uint64_t)v14, type metadata accessor for CRLMovieItemAssetData);
    return swift_release();
  }
  return result;
}

uint64_t sub_100BEA9A0()
{
  if (!*(void *)(v0 + OBJC_IVAR____TtC8Freeform12CRLBoardItem_transactionContext)
    && (uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong()) != 0
    && (uint64_t v2 = Strong, v3 = (*(uint64_t (**)(void))((swift_isaMask & *Strong) + 0x2F0))(),
                     v2,
                     (v3 & 1) != 0))
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"_guardTransaction()", 19, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLTransactions/CRLTransactable.swift", 91, 2, 76, (uint64_t)"Attempting to mutate a CRLTransactable without a CRLTransactableContext set", 75, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_100586FD4((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Attempting to mutate a CRLTransactable without a CRLTransactableContext set");
    sub_1005871AC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"_guardTransaction()", 19, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLTransactions/CRLTransactable.swift", 91, 2, 76);
    SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v5, v6);
    uint64_t result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
  else
  {
    swift_beginAccess();
    type metadata accessor for CRLMovieItemCRDTData(0);
    swift_retain();
    sub_1005057FC(&qword_101673480);
    CRRegister.wrappedValue.setter();
    swift_endAccess();
    return swift_release();
  }
  return result;
}

uint64_t sub_100BEAD30(float a1)
{
  if (!*(void *)(v1 + OBJC_IVAR____TtC8Freeform12CRLBoardItem_transactionContext)
    && (uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong()) != 0
    && (uint64_t v4 = Strong, v5 = (*(uint64_t (**)(void))((swift_isaMask & *Strong) + 0x2F0))(),
                     v4,
                     (v5 & 1) != 0))
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"_guardTransaction()", 19, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLTransactions/CRLTransactable.swift", 91, 2, 76, (uint64_t)"Attempting to mutate a CRLTransactable without a CRLTransactableContext set", 75, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_100586FD4((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Attempting to mutate a CRLTransactable without a CRLTransactableContext set");
    sub_1005871AC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"_guardTransaction()", 19, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLTransactions/CRLTransactable.swift", 91, 2, 76);
    SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v9, v10);
    uint64_t result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
  else
  {
    swift_beginAccess();
    type metadata accessor for CRLMovieItemCRDTData(0);
    swift_retain();
    sub_1005057FC(&qword_101672430);
    CRRegister.wrappedValue.getter();
    swift_endAccess();
    swift_release();
    uint64_t result = swift_bridgeObjectRelease();
    if (v12 != a1)
    {
      if (a1 >= 0.0)
      {
        swift_beginAccess();
        swift_retain();
        uint64_t v7 = (void (*)(unsigned char *, void))CRRegister.wrappedValue.modify();
        *uint64_t v8 = a1;
        v7(v11, 0);
        swift_endAccess();
      }
      else
      {
        swift_retain();
        sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"cornerRadius", 12, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLMovieItemData.swift", 87, 2, 285, (uint64_t)"Only positive corner radius values are allowed.", 47, 2u, (uint64_t)_swiftEmptyArrayStorage);
        sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"cornerRadius", 12, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLMovieItemData.swift", 87, 2, 285);
      }
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_100BEB260(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for CRLMovieItemAssetData(0);
  __chkstk_darwin(v5, v6);
  uint64_t v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9, v10);
  float v12 = (char *)&v24 - v11;
  __chkstk_darwin(v13, v14);
  uint64_t v16 = (char *)&v24 - v15;
  if (!*(void *)(v2 + OBJC_IVAR____TtC8Freeform12CRLBoardItem_transactionContext)
    && (uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong()) != 0
    && (double v18 = Strong,
        char v19 = (*(uint64_t (**)(void))((swift_isaMask & *Strong) + 0x2F0))(),
        v18,
        (v19 & 1) != 0))
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"_guardTransaction()", 19, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLTransactions/CRLTransactable.swift", 91, 2, 76, (uint64_t)"Attempting to mutate a CRLTransactable without a CRLTransactableContext set", 75, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_100586FD4((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Attempting to mutate a CRLTransactable without a CRLTransactableContext set");
    sub_1005871AC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"_guardTransaction()", 19, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLTransactions/CRLTransactable.swift", 91, 2, 76);
    SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v22, v23);
    uint64_t result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
  else
  {
    swift_beginAccess();
    swift_retain();
    sub_1005057FC(&qword_1016A4070);
    CRRegister.wrappedValue.getter();
    swift_endAccess();
    Swift::String v20 = &v16[*(int *)(v5 + 40)];
    swift_bridgeObjectRelease();
    *(void *)Swift::String v20 = a1;
    *((void *)v20 + 1) = a2;
    sub_100BF57E8((uint64_t)v16, (uint64_t)v12, type metadata accessor for CRLMovieItemAssetData);
    swift_beginAccess();
    sub_100BF57E8((uint64_t)v12, (uint64_t)v8, type metadata accessor for CRLMovieItemAssetData);
    CRRegister.wrappedValue.setter();
    sub_100BF5964((uint64_t)v12, type metadata accessor for CRLMovieItemAssetData);
    swift_endAccess();
    sub_100BF5964((uint64_t)v16, type metadata accessor for CRLMovieItemAssetData);
    return swift_release();
  }
  return result;
}

void sub_100BEB774(void *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t))
{
  if (a3)
  {
    uint64_t v6 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v8 = v7;
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v8 = 0;
  }
  id v9 = a1;
  a4(v6, v8);
}

uint64_t sub_100BEB7FC(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for CRLMovieItemAssetData(0);
  __chkstk_darwin(v5, v6);
  uint64_t v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9, v10);
  float v12 = (char *)&v24 - v11;
  __chkstk_darwin(v13, v14);
  uint64_t v16 = (char *)&v24 - v15;
  if (!*(void *)(v2 + OBJC_IVAR____TtC8Freeform12CRLBoardItem_transactionContext)
    && (uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong()) != 0
    && (double v18 = Strong,
        char v19 = (*(uint64_t (**)(void))((swift_isaMask & *Strong) + 0x2F0))(),
        v18,
        (v19 & 1) != 0))
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"_guardTransaction()", 19, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLTransactions/CRLTransactable.swift", 91, 2, 76, (uint64_t)"Attempting to mutate a CRLTransactable without a CRLTransactableContext set", 75, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_100586FD4((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Attempting to mutate a CRLTransactable without a CRLTransactableContext set");
    sub_1005871AC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"_guardTransaction()", 19, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLTransactions/CRLTransactable.swift", 91, 2, 76);
    SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v22, v23);
    uint64_t result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
  else
  {
    swift_beginAccess();
    swift_retain();
    sub_1005057FC(&qword_1016A4070);
    CRRegister.wrappedValue.getter();
    swift_endAccess();
    Swift::String v20 = &v16[*(int *)(v5 + 44)];
    swift_bridgeObjectRelease();
    *(void *)Swift::String v20 = a1;
    *((void *)v20 + 1) = a2;
    sub_100BF57E8((uint64_t)v16, (uint64_t)v12, type metadata accessor for CRLMovieItemAssetData);
    swift_beginAccess();
    sub_100BF57E8((uint64_t)v12, (uint64_t)v8, type metadata accessor for CRLMovieItemAssetData);
    CRRegister.wrappedValue.setter();
    sub_100BF5964((uint64_t)v12, type metadata accessor for CRLMovieItemAssetData);
    swift_endAccess();
    sub_100BF5964((uint64_t)v16, type metadata accessor for CRLMovieItemAssetData);
    return swift_release();
  }
  return result;
}

char *sub_100BEBBB0()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for CRLMovieItemAssetData(0);
  __chkstk_darwin(v2 - 8, v3);
  uint64_t v5 = (char *)&v54 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for CRLAssetData();
  __chkstk_darwin(v6 - 8, v7);
  uint64_t v9 = (char *)&v54 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10, v11);
  uint64_t v13 = (char *)&v54 - v12;
  uint64_t v14 = type metadata accessor for UUID();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14, v16);
  double v18 = (char *)&v54 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19, v20);
  Swift::String v23 = (char *)&v54 - v22;
  uint64_t v24 = OBJC_IVAR____TtC8Freeform12CRLMovieItem__movieAssetAsData;
  Swift::String v25 = *(char **)&v1[OBJC_IVAR____TtC8Freeform12CRLMovieItem__movieAssetAsData];
  if (v25)
  {
    uint64_t v55 = v5;
    uint64_t v27 = *(void *)&v25[OBJC_IVAR____TtC8Freeform8CRLAsset_storage + 24];
    uint64_t v26 = *(void *)&v25[OBJC_IVAR____TtC8Freeform8CRLAsset_storage + 32];
    Class v57 = v21;
    sub_10050F848(&v25[OBJC_IVAR____TtC8Freeform8CRLAsset_storage], v27);
    uint64_t v56 = v13;
    id v28 = *(void (**)(uint64_t, uint64_t))(v26 + 24);
    uint64_t v58 = v25;
    v28(v27, v26);
    swift_beginAccess();
    swift_retain();
    sub_1005057FC(&qword_1016A4070);
    uint64_t v29 = (uint64_t)v55;
    CRRegister.wrappedValue.getter();
    swift_endAccess();
    swift_release();
    uint64_t v30 = (uint64_t)v56;
    sub_100BF57E8(v29, (uint64_t)v56, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
    sub_100BF5964(v29, type metadata accessor for CRLMovieItemAssetData);
    Class v31 = v57;
    (*(void (**)(char *, uint64_t, Class))(v15 + 16))(v18, v30, v57);
    sub_100BF5964(v30, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
    LOBYTE(v30) = static UUID.== infix(_:_:)();
    id v32 = *(void (**)(char *, Class))(v15 + 8);
    v32(v18, v31);
    v32(v23, v31);
    if ((v30 & 1) == 0)
    {
      sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"movieAssetPayload", 17, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLMovieItem.swift", 83, 2, 179, (uint64_t)"Cached CRLAsset instance has not been updated as expected.", 58, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"movieAssetPayload", 17, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLMovieItem.swift", 83, 2, 179);
    }
    return v58;
  }
  else
  {
    swift_beginAccess();
    swift_retain();
    sub_1005057FC(&qword_1016A4070);
    CRRegister.wrappedValue.getter();
    swift_endAccess();
    swift_release();
    sub_100BF57E8((uint64_t)v5, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
    sub_100BF5964((uint64_t)v5, type metadata accessor for CRLMovieItemAssetData);
    uint64_t v58 = v1;
    uint64_t v34 = (char *)[v1 store];
    uint64_t v35 = *(void *)&v34[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetManagerLock];
    os_unfair_lock_lock(*(os_unfair_lock_t *)(v35 + 16));
    uint64_t v36 = OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetManager;
    uint64_t v37 = *(void **)&v34[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetManager];
    if (v37)
    {
      id v38 = *(id *)&v34[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetManager];
    }
    else
    {
      Class v57 = (Class)type metadata accessor for CRLAssetManager();
      int v39 = (char *)objc_allocWithZone(v57);
      swift_unknownObjectWeakInit();
      uint64_t v40 = OBJC_IVAR____TtC8Freeform15CRLAssetManager_lock;
      type metadata accessor for CRLUnfairLock();
      uint64_t v41 = swift_allocObject();
      uint64_t v56 = v34;
      char v42 = v39;
      uint64_t v43 = (_DWORD *)swift_slowAlloc();
      *uint64_t v43 = 0;
      *(void *)(v41 + 16) = v43;
      atomic_thread_fence(memory_order_acq_rel);
      *(void *)&v39[v40] = v41;
      *(void *)&v42[OBJC_IVAR____TtC8Freeform15CRLAssetManager_assets] = _swiftEmptyDictionarySingleton;
      uint64_t v44 = OBJC_IVAR____TtC8Freeform15CRLAssetManager_owners;
      *(void *)&v42[v44] = [self mapTableWithKeyOptions:517 valueOptions:0];
      *(void *)&v42[OBJC_IVAR____TtC8Freeform15CRLAssetManager_garbageCollectionWorkItem] = 0;
      BOOL v45 = v56;
      swift_unknownObjectWeakAssign();

      v59.receiver = v42;
      v59.super_class = v57;
      id v46 = [super init];

      uint64_t v47 = *(void **)&v34[v36];
      *(void *)&v34[v36] = v46;
      id v38 = v46;

      uint64_t v37 = 0;
    }
    uint64_t v48 = *(os_unfair_lock_s **)(v35 + 16);
    id v49 = v37;
    os_unfair_lock_unlock(v48);

    uint64_t v50 = v58;
    uint64_t v51 = (void *)sub_100F453C8(v9, v58, v38);

    sub_100BF5964((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
    uint64_t v52 = *(void **)&v50[v24];
    *(void *)&v50[v24] = v51;
    id v53 = v51;

    return (char *)v53;
  }
}

char *sub_100BEC274()
{
  uint64_t v1 = v0;
  uint64_t v2 = (objc_class *)type metadata accessor for UUID();
  uint64_t v3 = (char *)*((void *)v2 - 1);
  Class v51 = v2;
  uint64_t v52 = v3;
  __chkstk_darwin(v2, v4);
  uint64_t v6 = (char *)&v50 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for CRLMovieItemAssetData(0);
  uint64_t v8 = v7 - 8;
  __chkstk_darwin(v7, v9);
  uint64_t v11 = (char *)&v50 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1005057FC((uint64_t *)&unk_10167D2B0);
  __chkstk_darwin(v12 - 8, v13);
  uint64_t v15 = (char *)&v50 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for CRLAssetData();
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16, v18);
  uint64_t v20 = (char *)&v50 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  swift_retain();
  sub_1005057FC(&qword_1016A4070);
  CRRegister.wrappedValue.getter();
  swift_endAccess();
  swift_release();
  sub_100522E9C((uint64_t)&v11[*(int *)(v8 + 28)], (uint64_t)v15, (uint64_t *)&unk_10167D2B0);
  sub_100BF5964((uint64_t)v11, type metadata accessor for CRLMovieItemAssetData);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16) == 1)
  {
    sub_100522F00((uint64_t)v15, (uint64_t *)&unk_10167D2B0);
    return 0;
  }
  else
  {
    uint64_t v22 = (void (**)(char *, Class))v52;
    sub_100BF5780((uint64_t)v15, (uint64_t)v20, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
    uint64_t v23 = OBJC_IVAR____TtC8Freeform12CRLMovieItem__posterImageAssetAsData;
    uint64_t v21 = *(char **)&v0[OBJC_IVAR____TtC8Freeform12CRLMovieItem__posterImageAssetAsData];
    if (v21)
    {
      uint64_t v24 = *(void *)&v21[OBJC_IVAR____TtC8Freeform8CRLAsset_storage + 24];
      uint64_t v25 = *(void *)&v21[OBJC_IVAR____TtC8Freeform8CRLAsset_storage + 32];
      sub_10050F848(&v21[OBJC_IVAR____TtC8Freeform8CRLAsset_storage], v24);
      uint64_t v26 = *(void (**)(uint64_t, uint64_t))(v25 + 24);
      uint64_t v27 = v21;
      v26(v24, v25);
      char v28 = static UUID.== infix(_:_:)();
      v22[1](v6, v51);
      if ((v28 & 1) == 0)
      {
        sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"posterImageAssetPayload", 23, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLMovieItem.swift", 83, 2, 196, (uint64_t)"Cached CRLAsset instance has not been updated as expected.", 58, 2u, (uint64_t)_swiftEmptyArrayStorage);
        sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"posterImageAssetPayload", 23, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLMovieItem.swift", 83, 2, 196);
      }
      uint64_t v29 = (uint64_t)v20;
    }
    else
    {
      uint64_t v52 = v20;
      uint64_t v30 = (char *)[v0 store];
      uint64_t v31 = *(void *)&v30[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetManagerLock];
      os_unfair_lock_lock(*(os_unfair_lock_t *)(v31 + 16));
      uint64_t v32 = OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetManager;
      uint64_t v33 = *(void **)&v30[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetManager];
      if (v33)
      {
        id v34 = *(id *)&v30[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetManager];
      }
      else
      {
        Class v51 = (Class)type metadata accessor for CRLAssetManager();
        uint64_t v35 = (char *)objc_allocWithZone(v51);
        uint64_t v50 = &v35[OBJC_IVAR____TtC8Freeform15CRLAssetManager_store];
        swift_unknownObjectWeakInit();
        uint64_t v36 = OBJC_IVAR____TtC8Freeform15CRLAssetManager_lock;
        type metadata accessor for CRLUnfairLock();
        uint64_t v37 = swift_allocObject();
        id v38 = v30;
        int v39 = v35;
        uint64_t v40 = (_DWORD *)swift_slowAlloc();
        *uint64_t v40 = 0;
        *(void *)(v37 + 16) = v40;
        atomic_thread_fence(memory_order_acq_rel);
        *(void *)&v35[v36] = v37;
        *(void *)&v39[OBJC_IVAR____TtC8Freeform15CRLAssetManager_assets] = _swiftEmptyDictionarySingleton;
        uint64_t v41 = OBJC_IVAR____TtC8Freeform15CRLAssetManager_owners;
        *(void *)&v39[v41] = [self mapTableWithKeyOptions:517 valueOptions:0];
        *(void *)&v39[OBJC_IVAR____TtC8Freeform15CRLAssetManager_garbageCollectionWorkItem] = 0;
        swift_unknownObjectWeakAssign();

        v53.receiver = v39;
        v53.super_class = v51;
        id v42 = [super init];

        uint64_t v43 = *(void **)&v30[v32];
        *(void *)&v30[v32] = v42;
        id v34 = v42;

        uint64_t v33 = 0;
      }
      uint64_t v44 = *(os_unfair_lock_s **)(v31 + 16);
      id v45 = v33;
      os_unfair_lock_unlock(v44);

      uint64_t v46 = (uint64_t)v52;
      uint64_t v21 = (char *)sub_100F453C8(v52, v1, v34);

      uint64_t v47 = *(void **)&v1[v23];
      *(void *)&v1[v23] = v21;
      uint64_t v48 = v21;

      uint64_t v29 = v46;
    }
    sub_100BF5964(v29, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
  }
  return v21;
}

double sub_100BEC918()
{
  uint64_t v0 = sub_100BEC274();
  if (!v0) {
    return 0.0;
  }
  uint64_t v1 = v0;
  id v2 = [self sharedPool];
  id v3 = [v2 providerForAsset:v1 shouldValidate:1];

  [v3 naturalSize];
  double v5 = v4;

  return v5;
}

uint64_t sub_100BEC9E4()
{
  uint64_t v0 = type metadata accessor for CRLMovieItemAssetData(0);
  __chkstk_darwin(v0, v1);
  id v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  swift_retain();
  sub_1005057FC(&qword_1016A4070);
  CRRegister.wrappedValue.getter();
  swift_endAccess();
  sub_100BF5964((uint64_t)v3, type metadata accessor for CRLMovieItemAssetData);
  swift_release();
  id v4 = [self mainBundle];
  NSString v5 = String._bridgeToObjectiveC()();
  NSString v6 = String._bridgeToObjectiveC()();
  id v7 = [v4 localizedStringForKey:v5 value:v6 table:0];

  uint64_t v8 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  return v8;
}

id sub_100BECC0C(void *a1, uint64_t a2, void (*a3)(void))
{
  id v4 = a1;
  a3();

  NSString v5 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();

  return v5;
}

uint64_t sub_100BECC7C()
{
  uint64_t v0 = type metadata accessor for CRLMovieItemAssetData(0);
  __chkstk_darwin(v0, v1);
  id v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  swift_retain();
  sub_1005057FC(&qword_1016A4070);
  CRRegister.wrappedValue.getter();
  swift_endAccess();
  sub_100BF5964((uint64_t)v3, type metadata accessor for CRLMovieItemAssetData);
  swift_release();
  id v4 = [self mainBundle];
  NSString v5 = String._bridgeToObjectiveC()();
  NSString v6 = String._bridgeToObjectiveC()();
  id v7 = [v4 localizedStringForKey:v5 value:v6 table:0];

  uint64_t v8 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  return v8;
}

id sub_100BECE98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v53 = a4;
  uint64_t v49 = a2;
  uint64_t v5 = type metadata accessor for CRLBoardItemParentAffinity();
  __chkstk_darwin(v5 - 8, v6);
  uint64_t v8 = (char *)&v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1005057FC((uint64_t *)&unk_101683E10);
  __chkstk_darwin(v9, v10);
  uint64_t v12 = (char *)&v46 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1005057FC((uint64_t *)&unk_101674520);
  __chkstk_darwin(v13 - 8, v14);
  uint64_t v50 = (uint64_t)&v46 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16, v17);
  uint64_t v46 = (uint64_t)&v46 - v18;
  __chkstk_darwin(v19, v20);
  uint64_t v52 = (uint64_t)&v46 - v21;
  __chkstk_darwin(v22, v23);
  uint64_t v48 = (uint64_t)&v46 - v24;
  __chkstk_darwin(v25, v26);
  uint64_t v47 = (uint64_t)&v46 - v27;
  __chkstk_darwin(v28, v29);
  uint64_t v31 = (char *)&v46 - v30;
  uint64_t v51 = v4;
  swift_retain();
  uint64_t v32 = sub_1005501F4(1);
  swift_release();
  uint64_t v33 = (uint64_t)v32 + *(void *)(*v32 + 632);
  swift_beginAccess();
  sub_100522E9C(v33, (uint64_t)v12, (uint64_t *)&unk_101683E10);
  swift_retain();
  sub_1005057FC((uint64_t *)&unk_101683E30);
  CRRegister.wrappedValue.getter();
  sub_100522E9C((uint64_t)v8, (uint64_t)v31, (uint64_t *)&unk_101674520);
  sub_100BF5964((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for CRLBoardItemParentAffinity);
  sub_100522F00((uint64_t)v12, (uint64_t *)&unk_101683E10);
  swift_release();
  id v34 = v32;
  uint64_t v35 = (uint64_t)v55;
  sub_100551A1C(v53);
  if (v35)
  {
    sub_100522F00((uint64_t)v31, (uint64_t *)&unk_101674520);
    swift_release();
  }
  else
  {
    uint64_t v53 = v9;
    uint64_t v36 = v48;
    sub_100522E9C(v49, v48, (uint64_t *)&unk_101674520);
    uint64_t v55 = v31;
    sub_100522E9C((uint64_t)v31, v52, (uint64_t *)&unk_101674520);
    uint64_t v37 = type metadata accessor for UUID();
    uint64_t v38 = *(void *)(v37 - 8);
    int v39 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v38 + 48))(v36, 1, v37);
    uint64_t v40 = v47;
    if (v39 == 1)
    {
      sub_10051B3EC(v52, v47, (uint64_t *)&unk_101674520);
      swift_retain();
      sub_100522F00(v36, (uint64_t *)&unk_101674520);
    }
    else
    {
      swift_retain();
      sub_100522F00(v52, (uint64_t *)&unk_101674520);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v38 + 32))(v40, v36, v37);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v38 + 56))(v40, 0, 1, v37);
    }
    uint64_t v41 = v46;
    sub_100522E9C(v40, v46, (uint64_t *)&unk_101674520);
    swift_beginAccess();
    uint64_t v42 = v50;
    sub_100522E9C(v41, v50, (uint64_t *)&unk_101674520);
    uint64_t v43 = (void (*)(unsigned char *, void))CRRegister.wrappedValue.modify();
    sub_1006063BC(v42, v44, (uint64_t *)&unk_101674520);
    v43(v54, 0);
    sub_100522F00(v41, (uint64_t *)&unk_101674520);
    swift_endAccess();
    sub_100522F00(v40, (uint64_t *)&unk_101674520);
    swift_release();
    id v34 = sub_100BF4DB4((uint64_t)*(id *)(v51 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_store), (uint64_t)v32);
    sub_100522F00((uint64_t)v55, (uint64_t *)&unk_101674520);
  }
  return v34;
}

void sub_100BED3C8(void *a1)
{
  uint64_t v3 = sub_1005057FC((uint64_t *)&unk_10167D2B0);
  __chkstk_darwin(v3 - 8, v4);
  uint64_t v6 = &v23[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  uint64_t v7 = type metadata accessor for CRLAssetData();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7, v9);
  uint64_t v11 = &v23[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v12, v13);
  uint64_t v15 = &v23[-v14 - 8];
  if (!*(void *)(v1 + OBJC_IVAR____TtC8Freeform12CRLBoardItem_transactionContext)
    && (uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong()) != 0
    && (uint64_t v17 = Strong,
        char v18 = (*(uint64_t (**)(void))((swift_isaMask & *Strong) + 0x2F0))(),
        v17,
        (v18 & 1) != 0))
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"_guardTransaction()", 19, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLTransactions/CRLTransactable.swift", 91, 2, 76, (uint64_t)"Attempting to mutate a CRLTransactable without a CRLTransactableContext set", 75, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_100586FD4((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Attempting to mutate a CRLTransactable without a CRLTransactableContext set");
    sub_1005871AC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"_guardTransaction()", 19, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLTransactions/CRLTransactable.swift", 91, 2, 76);
    SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v20, v21);
    _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
  else if (a1)
  {
    sub_1005498A4((uint64_t)a1 + OBJC_IVAR____TtC8Freeform8CRLAsset_storage, (uint64_t)v23);
    id v19 = a1;
    sub_1005057FC(&qword_101693DB0);
    type metadata accessor for CRLAssetBackedAssetStorage();
    if (swift_dynamicCast())
    {
      sub_100BF57E8(v22 + OBJC_IVAR____TtC8Freeform26CRLAssetBackedAssetStorage_assetData, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
      swift_release();
      sub_100BF5780((uint64_t)v11, (uint64_t)v15, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
      sub_100BF57E8((uint64_t)v15, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v6, 0, 1, v7);
      sub_100BE86A0((uint64_t)v6);

      sub_100BF5964((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v6, 1, 1, v7);
      sub_100BE86A0((uint64_t)v6);
    }
  }
}

uint64_t sub_100BED800(void *a1, void *a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8, double a9, double a10, double a11)
{
  int v111 = a8;
  uint64_t v115 = a7;
  uint64_t v116 = a5;
  uint64_t v112 = a6;
  uint64_t v110 = a4;
  int v109 = a3;
  id v108 = a2;
  uint64_t v16 = (int *)type metadata accessor for CRLMovieItemAssetData(0);
  __chkstk_darwin(v16, v17);
  id v19 = (char *)&v100 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20, v21);
  uint64_t v23 = (char *)&v100 - v22;
  __chkstk_darwin(v24, v25);
  uint64_t v27 = (char *)&v100 - v26;
  uint64_t v28 = sub_1005057FC((uint64_t *)&unk_10167D2B0);
  __chkstk_darwin(v28 - 8, v29);
  uint64_t v104 = (uint64_t)&v100 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v31, v32);
  uint64_t v105 = (uint64_t)&v100 - v33;
  __chkstk_darwin(v34, v35);
  uint64_t v106 = (uint64_t)&v100 - v36;
  __chkstk_darwin(v37, v38);
  uint64_t v40 = (char *)&v100 - v39;
  __chkstk_darwin(v41, v42);
  uint64_t v44 = (char *)&v100 - v43;
  uint64_t v45 = type metadata accessor for CRLAssetData();
  uint64_t v117 = *(void *)(v45 - 8);
  __chkstk_darwin(v45, v46);
  uint64_t v103 = (uint64_t)&v100 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v48, v49);
  uint64_t v120 = (uint64_t)&v100 - v50;
  __chkstk_darwin(v51, v52);
  uint64_t v101 = (uint64_t)&v100 - v53;
  __chkstk_darwin(v54, v55);
  uint64_t v102 = (uint64_t)&v100 - v56;
  __chkstk_darwin(v57, v58);
  uint64_t v119 = (uint64_t)&v100 - v59;
  uint64_t v118 = v11;
  if (!*(void *)(v11 + OBJC_IVAR____TtC8Freeform12CRLBoardItem_transactionContext)
    && (uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong()) != 0
    && (uint64_t v61 = Strong,
        char v62 = (*(uint64_t (**)(void))((swift_isaMask & *Strong) + 0x2F0))(),
        v61,
        (v62 & 1) != 0))
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"_guardTransaction()", 19, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLTransactions/CRLTransactable.swift", 91, 2, 76, (uint64_t)"Attempting to mutate a CRLTransactable without a CRLTransactableContext set", 75, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_100586FD4((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Attempting to mutate a CRLTransactable without a CRLTransactableContext set");
    sub_1005871AC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"_guardTransaction()", 19, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLTransactions/CRLTransactable.swift", 91, 2, 76);
    SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v98, v99);
    uint64_t result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
  else
  {
    uint64_t v113 = v19;
    int v114 = v23;
    if (qword_101670198 != -1) {
      swift_once();
    }
    uint64_t v63 = type metadata accessor for UUID();
    uint64_t v64 = sub_100556B74(v63, (uint64_t)qword_10171CB50);
    uint64_t v65 = *(void (**)(uint64_t))(*(void *)(v63 - 8) + 16);
    uint64_t v66 = v119;
    uint64_t v107 = v64;
    v65(v119);
    uint64_t v67 = (void *)(v66 + *(int *)(v45 + 20));
    void *v67 = 0;
    v67[1] = 0xE000000000000000;
    *(void *)(v66 + *(int *)(v45 + 24)) = _swiftEmptyDictionarySingleton;
    if (a1)
    {
      sub_1005498A4((uint64_t)a1 + OBJC_IVAR____TtC8Freeform8CRLAsset_storage, (uint64_t)v122);
      id v68 = a1;
      sub_1005057FC(&qword_101693DB0);
      type metadata accessor for CRLAssetBackedAssetStorage();
      int v69 = swift_dynamicCast();
      id v100 = v68;
      if (v69)
      {
        sub_100BF57E8(v121 + OBJC_IVAR____TtC8Freeform26CRLAssetBackedAssetStorage_assetData, (uint64_t)v40, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
        swift_release();
        uint64_t v70 = v117;
        (*(void (**)(char *, void, uint64_t, uint64_t))(v117 + 56))(v40, 0, 1, v45);
      }
      else
      {
        uint64_t v70 = v117;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v117 + 56))(v40, 1, 1, v45);
        sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"setAssetMedia(movieData:posterImageData:posterTime:startTime:endTime:isAudioOnly:title:creator:isLooping:)", 106, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLMovieItem.swift", 83, 2, 259, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
        sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"setAssetMedia(movieData:posterImageData:posterTime:startTime:endTime:isAudioOnly:title:creator:isLooping:)", 106, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLMovieItem.swift", 83, 2, 259);
      }
      sub_10051B3EC((uint64_t)v40, (uint64_t)v44, (uint64_t *)&unk_10167D2B0);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v70 + 48))(v44, 1, v45) == 1)
      {

        sub_100522F00((uint64_t)v44, (uint64_t *)&unk_10167D2B0);
      }
      else
      {
        uint64_t v71 = v119;
        sub_100BF5964(v119, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
        uint64_t v72 = (uint64_t)v44;
        uint64_t v73 = v102;
        sub_100BF5780(v72, v102, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
        sub_100BF57E8(v73, v71, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
        uint64_t v74 = v101;
        sub_100BF57E8(v73, v101, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
        sub_100BE8294(v74);

        sub_100BF5964(v73, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
      }
    }
    uint64_t v75 = v120;
    ((void (*)(uint64_t, uint64_t, uint64_t))v65)(v120, v107, v63);
    unint64_t v76 = (void *)(v75 + *(int *)(v45 + 20));
    void *v76 = 0;
    v76[1] = 0xE000000000000000;
    *(void *)(v75 + *(int *)(v45 + 24)) = _swiftEmptyDictionarySingleton;
    uint64_t v77 = v117;
    id v78 = v108;
    if (v108)
    {
      sub_1005498A4((uint64_t)v108 + OBJC_IVAR____TtC8Freeform8CRLAsset_storage, (uint64_t)v122);
      id v79 = v78;
      sub_1005057FC(&qword_101693DB0);
      type metadata accessor for CRLAssetBackedAssetStorage();
      int v80 = swift_dynamicCast();
      id v108 = v79;
      if (v80)
      {
        uint64_t v81 = v105;
        sub_100BF57E8(v121 + OBJC_IVAR____TtC8Freeform26CRLAssetBackedAssetStorage_assetData, v105, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
        swift_release();
        uint64_t v82 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v77 + 56);
        v82(v81, 0, 1, v45);
      }
      else
      {
        uint64_t v82 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v77 + 56);
        uint64_t v81 = v105;
        v82(v105, 1, 1, v45);
        sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"setAssetMedia(movieData:posterImageData:posterTime:startTime:endTime:isAudioOnly:title:creator:isLooping:)", 106, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLMovieItem.swift", 83, 2, 265, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
        uint64_t v77 = v117;
        uint64_t v75 = v120;
        sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"setAssetMedia(movieData:posterImageData:posterTime:startTime:endTime:isAudioOnly:title:creator:isLooping:)", 106, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLMovieItem.swift", 83, 2, 265);
      }
      uint64_t v83 = v106;
      sub_10051B3EC(v81, v106, (uint64_t *)&unk_10167D2B0);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v77 + 48))(v83, 1, v45) == 1)
      {

        sub_100522F00(v83, (uint64_t *)&unk_10167D2B0);
      }
      else
      {
        sub_100BF5964(v75, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
        uint64_t v84 = v103;
        sub_100BF5780(v83, v103, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
        sub_100BF57E8(v84, v75, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
        uint64_t v85 = v104;
        sub_100BF57E8(v84, v104, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
        v82(v85, 0, 1, v45);
        sub_100BE86A0(v85);

        sub_100BF5964(v84, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
      }
    }
    uint64_t v86 = v119;
    sub_100BF57E8(v119, (uint64_t)v27, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
    uint64_t v87 = (uint64_t)&v27[v16[5]];
    sub_100BF57E8(v75, v87, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v77 + 56))(v87, 0, 1, v45);
    *(double *)&v27[v16[6]] = a9;
    *(double *)&v27[v16[7]] = a10;
    *(double *)&v27[v16[8]] = a11;
    v27[v16[9]] = v109 & 1;
    char v88 = v111 & 1;
    uint64_t v89 = &v27[v16[10]];
    uint64_t v91 = v115;
    uint64_t v90 = v116;
    *(void *)uint64_t v89 = v110;
    *((void *)v89 + 1) = v90;
    uint64_t v92 = &v27[v16[11]];
    *(void *)uint64_t v92 = v112;
    *((void *)v92 + 1) = v91;
    v27[v16[12]] = v88;
    *(void *)&v27[v16[13]] = _swiftEmptyDictionarySingleton;
    uint64_t v93 = v118;
    uint64_t v94 = (uint64_t)v114;
    sub_100BF57E8((uint64_t)v27, (uint64_t)v114, type metadata accessor for CRLMovieItemAssetData);
    swift_beginAccess();
    sub_100BF57E8(v94, (uint64_t)v113, type metadata accessor for CRLMovieItemAssetData);
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    sub_1005057FC(&qword_1016A4070);
    CRRegister.wrappedValue.setter();
    sub_100BF5964(v94, type metadata accessor for CRLMovieItemAssetData);
    swift_endAccess();
    swift_release();
    uint64_t v95 = *(void **)(v93 + OBJC_IVAR____TtC8Freeform12CRLMovieItem__movieAssetAsData);
    *(void *)(v93 + OBJC_IVAR____TtC8Freeform12CRLMovieItem__movieAssetAsData) = 0;

    uint64_t v96 = *(void **)(v93 + OBJC_IVAR____TtC8Freeform12CRLMovieItem__posterImageAssetAsData);
    *(void *)(v93 + OBJC_IVAR____TtC8Freeform12CRLMovieItem__posterImageAssetAsData) = 0;

    *(unsigned char *)(v93 + OBJC_IVAR____TtC8Freeform12CRLMovieItem_spatial) = 2;
    sub_100BF5964((uint64_t)v27, type metadata accessor for CRLMovieItemAssetData);
    sub_100BF5964(v120, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
    return sub_100BF5964(v86, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
  }
  return result;
}

float sub_100BEE740()
{
  swift_beginAccess();
  type metadata accessor for CRLMovieItemCRDTData(0);
  swift_retain();
  sub_1005057FC(&qword_101672430);
  CRRegister.wrappedValue.getter();
  swift_endAccess();
  swift_release();
  swift_bridgeObjectRelease();
  return v1;
}

id sub_100BEE824(char a1)
{
  uint64_t v3 = type metadata accessor for UUID();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3, v5);
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1) {
    float v8 = 10.0;
  }
  else {
    float v8 = 0.0;
  }
  id v9 = objc_allocWithZone((Class)type metadata accessor for CRLCommandSetMovieCornerRadius(0));
  uint64_t v10 = *(void (**)(uint64_t))(**(void **)&v1[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData] + 256);
  uint64_t v11 = v1;
  uint64_t v12 = swift_retain();
  v10(v12);
  swift_release();
  Class isa = UUID._bridgeToObjectiveC()().super.isa;
  (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
  *(float *)&double v14 = v8;
  id v15 = [v9 initWithId:isa cornerRadius:v14];

  return v15;
}

id sub_100BEEA08(char a1)
{
  uint64_t v3 = type metadata accessor for UUID();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3, v5);
  uint64_t v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v8 = objc_allocWithZone((Class)type metadata accessor for CRLCommandSetMovieLooping(0));
  id v9 = *(void (**)(uint64_t))(**(void **)&v1[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData] + 256);
  uint64_t v10 = v1;
  uint64_t v11 = swift_retain();
  v9(v11);
  swift_release();
  Class isa = UUID._bridgeToObjectiveC()().super.isa;
  (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
  id v13 = [v8 initWithId:isa isLooping:a1 & 1];

  return v13;
}

void sub_100BEEBDC(void *a1)
{
  sub_100887B70(a1);
  type metadata accessor for CRLMediaItem();
  uint64_t v2 = swift_dynamicCastClass();
  if (v2)
  {
    uint64_t v3 = (void *)v2;
    uint64_t v4 = a1;
    uint64_t v5 = (void *)sub_100BC934C();
    sub_100BC9500(v5);
    uint64_t v6 = OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData;
    uint64_t v7 = *(uint64_t (**)(uint64_t))(**(void **)((char *)v3
                                                         + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData)
                                           + 384);
    id v8 = v4;
    uint64_t v9 = swift_retain();
    uint64_t v10 = v7(v9);

    swift_release();
    sub_10088B0DC((void *)v10);

    uint64_t v11 = *(uint64_t (**)(uint64_t))(**(void **)((char *)v3 + v6) + 336);
    uint64_t v12 = v8;
    uint64_t v13 = swift_retain();
    LOBYTE(v10) = v11(v13);

    swift_release();
    uint64_t v14 = sub_10088AEB4(v10 & 1);
    char v15 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *v3) + 0x4B0))(v14);
    sub_100BE9DE4(v15 & 1);
  }
  type metadata accessor for CRLMovieItem();
  if (swift_dynamicCastClass())
  {
    swift_beginAccess();
    type metadata accessor for CRLMovieItemCRDTData(0);
    uint64_t v16 = a1;
    swift_retain();
    sub_1005057FC(&qword_101673480);
    CRRegister.wrappedValue.getter();
    swift_endAccess();
    swift_release();
    sub_100BEA9A0();
    swift_beginAccess();
    swift_retain();
    sub_1005057FC(&qword_101672430);
    CRRegister.wrappedValue.getter();
    swift_endAccess();
    swift_release();
    swift_bridgeObjectRelease();
    sub_100BEAD30(v17);
  }
}

BOOL sub_100BEEFC0()
{
  uint64_t v0 = type metadata accessor for CRLMovieItemAssetData(0);
  __chkstk_darwin(v0, v1);
  uint64_t v3 = (char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_100BEC274();
  if (v4)
  {
    uint64_t v5 = v4;
    uint64_t v6 = &v4[OBJC_IVAR____TtC8Freeform8CRLAsset_storage];
    uint64_t v7 = *((void *)v6 + 3);
    uint64_t v8 = *((void *)v6 + 4);
    sub_10050F848(v6, v7);
    LOBYTE(v7) = (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 64))(v7, v8);

    return v7 & 1;
  }
  else
  {
    swift_beginAccess();
    swift_retain();
    sub_1005057FC(&qword_1016A4070);
    CRRegister.wrappedValue.getter();
    char v10 = v3[*(int *)(v0 + 36)];
    swift_endAccess();
    sub_100BF5964((uint64_t)v3, type metadata accessor for CRLMovieItemAssetData);
    swift_release();
    return (v10 & 1) == 0;
  }
}

uint64_t sub_100BEF1D8()
{
  uint64_t v0 = type metadata accessor for CRLMovieItemAssetData(0);
  __chkstk_darwin(v0, v1);
  uint64_t v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  swift_retain();
  sub_1005057FC(&qword_1016A4070);
  CRRegister.wrappedValue.getter();
  swift_endAccess();
  sub_100BF5964((uint64_t)v3, type metadata accessor for CRLMovieItemAssetData);
  swift_release();
  id v4 = [self mainBundle];
  NSString v5 = String._bridgeToObjectiveC()();
  NSString v6 = String._bridgeToObjectiveC()();
  id v7 = [v4 localizedStringForKey:v5 value:v6 table:0];

  uint64_t v8 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  return v8;
}

uint64_t sub_100BEF440()
{
  uint64_t v0 = type metadata accessor for CRLMovieItemAssetData(0);
  uint64_t v1 = v0 - 8;
  __chkstk_darwin(v0, v2);
  id v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  swift_retain();
  sub_1005057FC(&qword_1016A4070);
  CRRegister.wrappedValue.getter();
  LODWORD(v1) = v4[*(int *)(v1 + 44)];
  swift_endAccess();
  sub_100BF5964((uint64_t)v4, type metadata accessor for CRLMovieItemAssetData);
  swift_release();
  if (v1 == 1) {
    NSString v5 = (unint64_t *)&unk_1016974B0;
  }
  else {
    NSString v5 = (unint64_t *)&unk_1016974A8;
  }
  return sub_10050BF48(0, v5);
}

uint64_t sub_100BEF5F8()
{
  uint64_t v0 = type metadata accessor for CRLMovieItemAssetData(0);
  uint64_t v1 = v0 - 8;
  __chkstk_darwin(v0, v2);
  id v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  swift_retain();
  sub_1005057FC(&qword_1016A4070);
  CRRegister.wrappedValue.getter();
  LODWORD(v1) = v4[*(int *)(v1 + 44)];
  swift_endAccess();
  sub_100BF5964((uint64_t)v4, type metadata accessor for CRLMovieItemAssetData);
  swift_release();
  if (v1 == 1) {
    NSString v5 = (unint64_t *)&unk_1016974A0;
  }
  else {
    NSString v5 = (unint64_t *)&unk_101697498;
  }
  return sub_10050BF48(0, v5);
}

id sub_100BEF794()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for CRLMovieItemCRDTData(0);
  __chkstk_darwin(v2 - 8, v3);
  NSString v5 = &v21[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = sub_1005057FC((uint64_t *)&unk_101683E10);
  __chkstk_darwin(v6 - 8, v7);
  uint64_t v9 = &v21[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (**(_UNKNOWN *****)(v0 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData) == &off_1016731C8) {
    uint64_t v10 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
  }
  else {
    uint64_t v10 = 0;
  }
  uint64_t v11 = (uint64_t)v10 + *(void *)(*v10 + 632);
  swift_beginAccess();
  sub_100522E9C(v11, (uint64_t)v9, (uint64_t *)&unk_101683E10);
  uint64_t v12 = (uint64_t)v10 + qword_101719EE8;
  swift_beginAccess();
  sub_100BF57E8(v12, (uint64_t)v5, type metadata accessor for CRLMovieItemCRDTData);
  uint64_t v13 = v10[4];
  uint64_t v14 = v10[5];
  float v17 = v10 + 2;
  uint64_t v16 = v10[2];
  uint64_t v15 = v17[1];
  type metadata accessor for CRLMovieItemData(0);
  uint64_t v18 = swift_allocObject();
  sub_100BF5780((uint64_t)v5, v18 + qword_101719EE8, type metadata accessor for CRLMovieItemCRDTData);
  sub_10051B3EC((uint64_t)v9, v18 + *(void *)(*(void *)v18 + 632), (uint64_t *)&unk_101683E10);
  id v19 = sub_10068B398(v15, v13, v14, v16);
  return sub_100BF4DB4((uint64_t)*(id *)(v1 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_store), (uint64_t)v19);
}

uint64_t sub_100BEF9D8(uint64_t a1)
{
  uint64_t v3 = (int *)sub_1005057FC(&qword_101697468);
  uint64_t v43 = *((void *)v3 - 1);
  __chkstk_darwin(v3, v4);
  uint64_t v41 = (uint64_t)&v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = type metadata accessor for CRLMovieItemCRDTData(0);
  __chkstk_darwin(v42, v6);
  uint64_t v8 = (char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9, v10);
  uint64_t v12 = (char *)&v41 - v11;
  uint64_t v13 = sub_1005057FC(&qword_101697460);
  __chkstk_darwin(v13 - 8, v14);
  uint64_t v16 = (char *)&v41 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for CRLMovieItem();
  uint64_t v17 = swift_dynamicCastClass();
  if (v17)
  {
    uint64_t v18 = v17;
    uint64_t v45 = a1;
    swift_unknownObjectRetain();
    uint64_t v44 = sub_100CF6354(v18, v1);
    id v19 = *(_UNKNOWN *****)(v1 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
    if (*v19 != &off_1016731C8) {
      id v19 = 0;
    }
    uint64_t v20 = (uint64_t)v19 + qword_101719EE8;
    swift_beginAccess();
    sub_100BF57E8(v20, (uint64_t)v12, type metadata accessor for CRLMovieItemCRDTData);
    uint64_t v21 = *(_UNKNOWN *****)(v18 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
    if (*v21 != &off_1016731C8) {
      uint64_t v21 = 0;
    }
    uint64_t v22 = (uint64_t)v21 + qword_101719EE8;
    swift_beginAccess();
    sub_100BF57E8(v22, (uint64_t)v8, type metadata accessor for CRLMovieItemCRDTData);
    sub_100BF5850(&qword_101673760, (void (*)(uint64_t))type metadata accessor for CRLMovieItemCRDTData);
    CRStruct_4.actionUndoingDifference(from:)();
    sub_100BF5964((uint64_t)v8, type metadata accessor for CRLMovieItemCRDTData);
    sub_100BF5964((uint64_t)v12, type metadata accessor for CRLMovieItemCRDTData);
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v43 + 48))(v16, 1, v3) == 1)
    {
      sub_100522F00((uint64_t)v16, &qword_101697460);
      memset(v46, 0, sizeof(v46));
      uint64_t v47 = 1;
    }
    else
    {
      uint64_t v23 = v3[12];
      uint64_t v24 = (uint64_t)&v16[v23];
      uint64_t v25 = v3[16];
      uint64_t v26 = (uint64_t)&v16[v25];
      uint64_t v27 = v3[20];
      uint64_t v28 = (uint64_t)&v16[v27];
      uint64_t v29 = v41;
      uint64_t v30 = v41 + v23;
      uint64_t v31 = v41 + v25;
      uint64_t v32 = v41 + v27;
      sub_10051B3EC((uint64_t)v16, v41, &qword_101697470);
      sub_10051B3EC(v24, v30, &qword_10168C8D0);
      sub_10051B3EC(v26, v31, &qword_101697478);
      sub_10051B3EC(v28, v32, &qword_101697480);
      uint64_t v47 = (uint64_t)v3;
      uint64_t v33 = sub_1005767BC(v46);
      uint64_t v34 = (uint64_t)v33 + v3[12];
      uint64_t v35 = (uint64_t)v33 + v3[16];
      uint64_t v36 = (uint64_t)v33 + v3[20];
      sub_10051B3EC(v29, (uint64_t)v33, &qword_101697470);
      sub_10051B3EC(v30, v34, &qword_10168C8D0);
      sub_10051B3EC(v31, v35, &qword_101697478);
      sub_10051B3EC(v32, v36, &qword_101697480);
    }
    uint64_t v37 = v44;
    swift_beginAccess();
    sub_10057D560((uint64_t)v46, 4);
    swift_endAccess();
    swift_unknownObjectRelease();
    return v37;
  }
  else
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"createUndoingMutations(fromSnapshot:)", 37, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLMovieItem.swift", 83, 2, 381, (uint64_t)"Tried to generate undo from mismatched type", 43, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_100586FD4((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Tried to generate undo from mismatched type");
    sub_1005871AC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"createUndoingMutations(fromSnapshot:)", 37, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLMovieItem.swift", 83, 2, 381);
    SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v39, v40);
    uint64_t result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
  return result;
}

uint64_t sub_100BEFF5C(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1005057FC(&qword_101697488);
  uint64_t v104 = *(void *)(v4 - 8);
  __chkstk_darwin(v4, v5);
  id v100 = (char *)&v96 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7, v8);
  uint64_t v10 = (char *)&v96 - v9;
  __chkstk_darwin(v11, v12);
  CKRecordID v98 = (char *)&v96 - v13;
  __chkstk_darwin(v14, v15);
  uint64_t v17 = (char *)&v96 - v16;
  __chkstk_darwin(v18, v19);
  uint64_t v106 = (uint64_t)&v96 - v20;
  uint64_t v103 = type metadata accessor for CRLMovieItemCRDTData(0);
  __chkstk_darwin(v103, v21);
  uint64_t v23 = (char *)&v96 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24, v25);
  uint64_t v27 = (char *)&v96 - v26;
  uint64_t v28 = sub_1005057FC(&qword_101697490);
  __chkstk_darwin(v28 - 8, v29);
  uint64_t v31 = (char *)&v96 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v32, v33);
  uint64_t v35 = (char *)&v96 - v34;
  type metadata accessor for CRLMovieItem();
  uint64_t v36 = swift_dynamicCastClass();
  if (v36)
  {
    uint64_t v37 = v36;
    uint64_t v97 = v17;
    Swift::String v99 = v10;
    uint64_t v107 = (int *)v4;
    uint64_t v105 = v35;
    type metadata accessor for CRLBoardItemBase(0);
    if (swift_dynamicCastClass())
    {
      uint64_t v38 = *(_UNKNOWN *****)(v2 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
      if (*v38 != &off_1016731C8) {
        uint64_t v38 = 0;
      }
      uint64_t v39 = (uint64_t)v38 + qword_101719EE8;
      swift_beginAccess();
      sub_100BF57E8(v39, (uint64_t)v27, type metadata accessor for CRLMovieItemCRDTData);
      Swift::String v40 = *(_UNKNOWN *****)(v37 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
      if (*v40 != &off_1016731C8) {
        Swift::String v40 = 0;
      }
      uint64_t v41 = (uint64_t)v40 + qword_101719EE8;
      swift_beginAccess();
      sub_100BF57E8(v41, (uint64_t)v23, type metadata accessor for CRLMovieItemCRDTData);
      sub_100BF5850(&qword_101673700, (void (*)(uint64_t))type metadata accessor for CRLMovieItemCRDTData);
      swift_unknownObjectRetain();
      uint64_t v42 = (uint64_t)v105;
      CRType.observableDifference(from:)();
      sub_100BF5964((uint64_t)v23, type metadata accessor for CRLMovieItemCRDTData);
      sub_100BF5964((uint64_t)v27, type metadata accessor for CRLMovieItemCRDTData);
      sub_100522E9C(v42, (uint64_t)v31, &qword_101697490);
      uint64_t v43 = v107;
      if ((*(unsigned int (**)(char *, uint64_t, int *))(v104 + 48))(v31, 1, v107) == 1)
      {
        sub_100522F00((uint64_t)v31, &qword_101697490);
        uint64_t v44 = _swiftEmptyArrayStorage;
        if (!*(void *)&_swiftEmptyArrayStorage[2]) {
          goto LABEL_37;
        }
      }
      else
      {
        uint64_t v96 = a1;
        uint64_t v45 = v43[12];
        uint64_t v46 = v106;
        uint64_t v47 = v106 + v45;
        uint64_t v48 = v43[16];
        uint64_t v49 = v106 + v48;
        uint64_t v50 = v43[20];
        uint64_t v51 = v106 + v50;
        uint64_t v52 = (uint64_t)&v31[v45];
        uint64_t v53 = (uint64_t)&v31[v48];
        uint64_t v54 = (uint64_t)&v31[v50];
        sub_10051B3EC((uint64_t)v31, v106, &qword_10167D310);
        sub_10051B3EC(v52, v47, &qword_10167D310);
        sub_10051B3EC(v53, v49, &qword_10167D310);
        sub_10051B3EC(v54, v51, &qword_10167D310);
        uint64_t v55 = (uint64_t)v97;
        uint64_t v56 = (uint64_t)&v97[v43[12]];
        uint64_t v57 = (uint64_t)&v97[v43[16]];
        uint64_t v58 = (uint64_t)&v97[v43[20]];
        sub_100522E9C(v46, (uint64_t)v97, &qword_10167D310);
        uint64_t v59 = v47;
        sub_100522E9C(v47, v56, &qword_10167D310);
        uint64_t v103 = v49;
        sub_100522E9C(v49, v57, &qword_10167D310);
        uint64_t v104 = v51;
        sub_100522E9C(v51, v58, &qword_10167D310);
        uint64_t v60 = type metadata accessor for CRValueObservableDifference();
        uint64_t v61 = *(void *)(v60 - 8);
        char v62 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v61 + 48);
        uint64_t v101 = v61 + 48;
        uint64_t v102 = v62;
        if (v62(v55, 1, v60) == 1)
        {
          sub_100522F00(v58, &qword_10167D310);
          sub_100522F00(v57, &qword_10167D310);
          sub_100522F00(v56, &qword_10167D310);
          sub_100522F00(v55, &qword_10167D310);
          uint64_t v44 = _swiftEmptyArrayStorage;
          uint64_t v63 = v106;
          uint64_t v64 = (uint64_t)v98;
        }
        else
        {
          sub_100522F00(v55, &qword_10167D310);
          sub_100522F00(v58, &qword_10167D310);
          sub_100522F00(v57, &qword_10167D310);
          sub_100522F00(v56, &qword_10167D310);
          uint64_t v44 = sub_100F61B70(0, 1, 1, _swiftEmptyArrayStorage);
          unint64_t v66 = *((void *)v44 + 2);
          unint64_t v65 = *((void *)v44 + 3);
          uint64_t v64 = (uint64_t)v98;
          if (v66 >= v65 >> 1) {
            uint64_t v44 = sub_100F61B70((double *)(v65 > 1), v66 + 1, 1, v44);
          }
          uint64_t v63 = v106;
          *((void *)v44 + 2) = v66 + 1;
          uint64_t v67 = &v44[2 * v66];
          *((void *)v67 + 4) = 0x737465737361;
          v67[5] = -2.12455197e183;
        }
        uint64_t v68 = v64 + v107[12];
        uint64_t v69 = v64 + v107[16];
        uint64_t v70 = v64 + v107[20];
        sub_100522E9C(v63, v64, &qword_10167D310);
        sub_100522E9C(v59, v68, &qword_10167D310);
        sub_100522E9C(v103, v69, &qword_10167D310);
        sub_100522E9C(v104, v70, &qword_10167D310);
        if (v102(v68, 1, v60) == 1)
        {
          sub_100522F00(v70, &qword_10167D310);
          sub_100522F00(v69, &qword_10167D310);
          sub_100522F00(v68, &qword_10167D310);
          sub_100522F00(v64, &qword_10167D310);
          uint64_t v71 = (uint64_t)v100;
        }
        else
        {
          sub_100522F00(v68, &qword_10167D310);
          sub_100522F00(v70, &qword_10167D310);
          sub_100522F00(v69, &qword_10167D310);
          sub_100522F00(v64, &qword_10167D310);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v44 = sub_100F61B70(0, *((void *)v44 + 2) + 1, 1, v44);
          }
          uint64_t v71 = (uint64_t)v100;
          unint64_t v73 = *((void *)v44 + 2);
          unint64_t v72 = *((void *)v44 + 3);
          if (v73 >= v72 >> 1) {
            uint64_t v44 = sub_100F61B70((double *)(v72 > 1), v73 + 1, 1, v44);
          }
          *((void *)v44 + 2) = v73 + 1;
          uint64_t v74 = &v44[2 * v73];
          *((void *)v74 + 4) = 0x656B6F727473;
          v74[5] = -2.12455197e183;
        }
        uint64_t v75 = (uint64_t)v99;
        uint64_t v76 = (uint64_t)&v99[v107[12]];
        uint64_t v77 = (uint64_t)&v99[v107[16]];
        uint64_t v78 = (uint64_t)&v99[v107[20]];
        sub_100522E9C(v106, (uint64_t)v99, &qword_10167D310);
        sub_100522E9C(v59, v76, &qword_10167D310);
        sub_100522E9C(v103, v77, &qword_10167D310);
        sub_100522E9C(v104, v78, &qword_10167D310);
        if (v102(v77, 1, v60) == 1)
        {
          sub_100522F00(v78, &qword_10167D310);
          sub_100522F00(v77, &qword_10167D310);
          sub_100522F00(v76, &qword_10167D310);
          sub_100522F00(v75, &qword_10167D310);
          uint64_t v79 = v106;
        }
        else
        {
          sub_100522F00(v77, &qword_10167D310);
          sub_100522F00(v78, &qword_10167D310);
          sub_100522F00(v76, &qword_10167D310);
          sub_100522F00(v75, &qword_10167D310);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v44 = sub_100F61B70(0, *((void *)v44 + 2) + 1, 1, v44);
          }
          unint64_t v81 = *((void *)v44 + 2);
          unint64_t v80 = *((void *)v44 + 3);
          uint64_t v79 = v106;
          if (v81 >= v80 >> 1) {
            uint64_t v44 = sub_100F61B70((double *)(v80 > 1), v81 + 1, 1, v44);
          }
          *((void *)v44 + 2) = v81 + 1;
          uint64_t v82 = &v44[2 * v81];
          *((void *)v82 + 4) = 0x656D756C6F76;
          v82[5] = -2.12455197e183;
        }
        uint64_t v83 = v71 + v107[12];
        uint64_t v84 = v71 + v107[16];
        uint64_t v85 = v71 + v107[20];
        sub_100522E9C(v79, v71, &qword_10167D310);
        sub_100522E9C(v59, v83, &qword_10167D310);
        sub_100522E9C(v103, v84, &qword_10167D310);
        sub_100522E9C(v104, v85, &qword_10167D310);
        if (v102(v85, 1, v60) == 1)
        {
          sub_100522F00(v79, &qword_101697488);
          sub_100522F00(v85, &qword_10167D310);
          sub_100522F00(v84, &qword_10167D310);
          sub_100522F00(v83, &qword_10167D310);
          sub_100522F00(v71, &qword_10167D310);
          uint64_t v42 = (uint64_t)v105;
          if (!*((void *)v44 + 2))
          {
LABEL_37:
            swift_bridgeObjectRelease();
            swift_unknownObjectRelease();
            uint64_t v87 = _swiftEmptyDictionarySingleton;
            goto LABEL_38;
          }
        }
        else
        {
          sub_100522F00(v85, &qword_10167D310);
          sub_100522F00(v84, &qword_10167D310);
          sub_100522F00(v83, &qword_10167D310);
          sub_100522F00(v71, &qword_10167D310);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v44 = sub_100F61B70(0, *((void *)v44 + 2) + 1, 1, v44);
          }
          uint64_t v42 = (uint64_t)v105;
          unint64_t v89 = *((void *)v44 + 2);
          unint64_t v88 = *((void *)v44 + 3);
          if (v89 >= v88 >> 1) {
            uint64_t v44 = sub_100F61B70((double *)(v88 > 1), v89 + 1, 1, v44);
          }
          *((void *)v44 + 2) = v89 + 1;
          uint64_t v90 = &v44[2 * v89];
          v90[4] = 2.86523873e161;
          v90[5] = -9.12488124e192;
          sub_100522F00(v79, &qword_101697488);
          if (!*((void *)v44 + 2)) {
            goto LABEL_37;
          }
        }
      }
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      id v108 = _swiftEmptyDictionarySingleton;
      sub_100972448((uint64_t)v44, 4, isUniquelyReferenced_nonNull_native);
      uint64_t v87 = v108;
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
LABEL_38:
      sub_100522F00(v42, &qword_101697490);
      return (uint64_t)v87;
    }
    swift_unknownObjectRetain();
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"createSpecificDataObservableDeltas(fromSnapshot:)", 49, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLBoardItem.swift", 83, 2, 835, (uint64_t)"Tried to create observable deltas from mismatched type", 54, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_100586FD4((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Tried to create observable deltas from mismatched type");
    uint64_t v92 = "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLBoardItem.swift";
    uint64_t v93 = 835;
  }
  else
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"createSpecificDataObservableDeltas(fromSnapshot:)", 49, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLMovieItem.swift", 83, 2, 393, (uint64_t)"Tried to create observable deltas from mismatched type", 54, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_100586FD4((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Tried to create observable deltas from mismatched type");
    uint64_t v92 = "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLMovieItem.swift";
    uint64_t v93 = 393;
  }
  sub_1005871AC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"createSpecificDataObservableDeltas(fromSnapshot:)", 49, 2, (uint64_t)v92, 83, 2, v93);
  SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v94, v95);
  uint64_t result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100BF0C28(uint64_t a1, uint64_t a2)
{
  uint64_t v69 = a2;
  uint64_t v68 = type metadata accessor for CRLMovieItemCRDTData(0);
  __chkstk_darwin(v68, v4);
  uint64_t v67 = (uint64_t)&v56 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1005057FC(&qword_101697460);
  __chkstk_darwin(v6 - 8, v7);
  uint64_t v9 = (char *)&v56 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10, v11);
  uint64_t v13 = (char *)&v56 - v12;
  uint64_t v14 = sub_1005057FC(&qword_101697468);
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14, v16);
  uint64_t v18 = (char *)&v56 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = v102;
  uint64_t result = sub_10088B69C(a1);
  if (!v19)
  {
    uint64_t v69 = v15;
    uint64_t v102 = 0;
    unint64_t v65 = v9;
    unint64_t v66 = v18;
    uint64_t v21 = v2;
    uint64_t v22 = (uint64_t *)(a1 + OBJC_IVAR____TtC8Freeform31CRLTransactableUndoingMutations_values);
    swift_beginAccess();
    uint64_t v23 = *v22;
    if (!*(void *)(v23 + 16))
    {
      uint64_t v93 = 0;
      uint64_t v92 = 0;
      uint64_t v94 = 0;
      uint64_t v95 = 1;
      uint64_t v26 = (int *)v14;
      uint64_t v27 = (uint64_t)v13;
      uint64_t v28 = v69;
LABEL_8:
      uint64_t v29 = (uint64_t *)&unk_1016725E0;
      uint64_t v30 = &v92;
LABEL_9:
      sub_100522F00((uint64_t)v30, v29);
      (*(void (**)(uint64_t, uint64_t, uint64_t, int *))(v28 + 56))(v27, 1, 1, v26);
LABEL_10:
      uint64_t v31 = &qword_101697460;
      uint64_t v32 = v27;
      return sub_100522F00(v32, v31);
    }
    swift_bridgeObjectRetain();
    unint64_t v24 = sub_100956360(4);
    if (v25)
    {
      sub_100522E9C(*(void *)(v23 + 56) + 32 * v24, (uint64_t)&v92, &qword_101672BF0);
    }
    else
    {
      uint64_t v93 = 0;
      uint64_t v92 = 0;
      uint64_t v94 = 0;
      uint64_t v95 = 1;
    }
    swift_bridgeObjectRelease();
    uint64_t v26 = (int *)v14;
    uint64_t v27 = (uint64_t)v13;
    uint64_t v28 = v69;
    if (v95 == 1) {
      goto LABEL_8;
    }
    sub_10051B3EC((uint64_t)&v92, (uint64_t)&v74, &qword_101672BF0);
    if (!*((void *)&v75 + 1))
    {
      uint64_t v29 = &qword_101672BF0;
      uint64_t v30 = (uint64_t *)&v74;
      goto LABEL_9;
    }
    int v33 = swift_dynamicCast();
    uint64_t v64 = *(void (**)(char *, void, uint64_t, int *))(v28 + 56);
    v64(v13, v33 ^ 1u, 1, v26);
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v28 + 48))(v13, 1, v26) == 1) {
      goto LABEL_10;
    }
    uint64_t v34 = v26[12];
    uint64_t v35 = (uint64_t)v66;
    char v62 = v26;
    uint64_t v63 = v28 + 56;
    uint64_t v36 = (uint64_t)&v66[v34];
    uint64_t v37 = v26[16];
    uint64_t v38 = (uint64_t)&v66[v37];
    uint64_t v60 = &v66[v37];
    uint64_t v61 = &v66[v34];
    uint64_t v39 = v26[20];
    uint64_t v40 = (uint64_t)&v66[v39];
    uint64_t v41 = v27 + v34;
    uint64_t v58 = v27 + v37;
    uint64_t v59 = &v66[v39];
    uint64_t v69 = v27 + v39;
    sub_10051B3EC(v27, (uint64_t)v66, &qword_101697470);
    sub_10051B3EC(v41, v36, &qword_10168C8D0);
    sub_10051B3EC(v58, v38, &qword_101697478);
    sub_10051B3EC(v69, v40, &qword_101697480);
    uint64_t v69 = OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData;
    uint64_t v42 = *(_UNKNOWN *****)(v21 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
    if (*v42 == &off_1016731C8) {
      uint64_t v43 = v42;
    }
    else {
      uint64_t v43 = 0;
    }
    uint64_t v44 = (uint64_t)v43 + qword_101719EE8;
    swift_beginAccess();
    uint64_t v45 = v67;
    sub_100BF57E8(v44, v67, type metadata accessor for CRLMovieItemCRDTData);
    if (*v42 == &off_1016731C8) {
      uint64_t v46 = (uint64_t)v42;
    }
    else {
      uint64_t v46 = 0;
    }
    uint64_t v47 = v62;
    uint64_t v48 = (uint64_t)v65;
    uint64_t v49 = (uint64_t)&v65[v62[12]];
    uint64_t v50 = (uint64_t)&v65[v62[16]];
    uint64_t v57 = &v65[v62[20]];
    uint64_t v58 = v46;
    sub_100522E9C(v35, (uint64_t)v65, &qword_101697470);
    sub_100522E9C((uint64_t)v61, v49, &qword_10168C8D0);
    sub_100522E9C((uint64_t)v60, v50, &qword_101697478);
    sub_100522E9C((uint64_t)v59, (uint64_t)v57, &qword_101697480);
    v64((char *)v48, 0, 1, v47);
    swift_beginAccess();
    sub_100BF5850(&qword_101673760, (void (*)(uint64_t))type metadata accessor for CRLMovieItemCRDTData);
    swift_retain();
    CRStruct_4.apply(_:)();
    swift_endAccess();
    swift_release();
    sub_100522F00(v48, &qword_101697460);
    sub_1005057FC(&qword_101673478);
    CRRegister.wrappedValue.getter();
    sub_10051B3EC((uint64_t)&v74, (uint64_t)v90, (uint64_t *)&unk_101685110);
    swift_beginAccess();
    swift_retain();
    CRRegister.wrappedValue.getter();
    sub_10051B3EC((uint64_t)&v74, (uint64_t)v91, (uint64_t *)&unk_101685110);
    swift_endAccess();
    swift_release();
    sub_10051B3EC((uint64_t)v90, (uint64_t)&v92, (uint64_t *)&unk_101685110);
    if (sub_100556850((uint64_t)&v92) == 1)
    {
      sub_10051B3EC((uint64_t)v91, (uint64_t)&v74, (uint64_t *)&unk_101685110);
      int v51 = sub_100556850((uint64_t)&v74);
      uint64_t v52 = (uint64_t)v66;
      if (v51 == 1) {
        goto LABEL_33;
      }
    }
    else
    {
      sub_10051B3EC((uint64_t)v91, (uint64_t)&v74, (uint64_t *)&unk_101685110);
      if (sub_100556850((uint64_t)&v74) != 1)
      {
        sub_10051B3EC((uint64_t)v91, (uint64_t)v70, (uint64_t *)&unk_101685110);
        v100[12] = v70[12];
        v100[13] = v70[13];
        uint64_t v101 = v71;
        v100[8] = v70[8];
        v100[9] = v70[9];
        v100[11] = v70[11];
        v100[10] = v70[10];
        v100[4] = v70[4];
        v100[5] = v70[5];
        v100[7] = v70[7];
        v100[6] = v70[6];
        v100[0] = v70[0];
        v100[1] = v70[1];
        v100[3] = v70[3];
        v100[2] = v70[2];
        sub_10051B3EC((uint64_t)v90, (uint64_t)v72, (uint64_t *)&unk_101685110);
        v98[12] = v72[12];
        v98[13] = v72[13];
        uint64_t v99 = v73;
        v98[8] = v72[8];
        v98[9] = v72[9];
        v98[11] = v72[11];
        v98[10] = v72[10];
        v98[4] = v72[4];
        v98[5] = v72[5];
        v98[7] = v72[7];
        v98[6] = v72[6];
        v98[0] = v72[0];
        v98[1] = v72[1];
        v98[3] = v72[3];
        v98[2] = v72[2];
        sub_100A37194(v90, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_10051A1EC);
        char v53 = sub_100A1D9DC((uint64_t)v98, (uint64_t)v100);
        sub_100A37194(v91, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_100519F40);
        sub_100A37194(v90, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_100519F40);
        sub_100A37194(v90, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_100519F40);
        uint64_t v52 = (uint64_t)v66;
        if (v53)
        {
LABEL_33:
          sub_100BF5964(v45, type metadata accessor for CRLMovieItemCRDTData);
          uint64_t v31 = &qword_101697468;
          uint64_t v32 = v52;
          return sub_100522F00(v32, v31);
        }
LABEL_29:
        swift_beginAccess();
        swift_retain();
        CRRegister.wrappedValue.getter();
        sub_10051B3EC((uint64_t)v70, (uint64_t)v72, (uint64_t *)&unk_101685110);
        swift_endAccess();
        swift_release();
        sub_10051B3EC((uint64_t)v72, (uint64_t)&v74, (uint64_t *)&unk_101685110);
        if (sub_100556850((uint64_t)&v74) == 1)
        {
          uint64_t v54 = 0;
        }
        else
        {
          v96[12] = v86;
          v96[13] = v87;
          uint64_t v97 = v88;
          v96[8] = v82;
          v96[9] = v83;
          v96[11] = v85;
          v96[10] = v84;
          v96[4] = v78;
          v96[5] = v79;
          v96[7] = v81;
          v96[6] = v80;
          v96[0] = v74;
          v96[1] = v75;
          v96[3] = v77;
          v96[2] = v76;
          id v55 = sub_100A1E370((uint64_t)v96, 0);
          sub_100A37194(v72, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_100519F40);
          uint64_t v54 = v55;
        }
        sub_100BC9500(v54);
        goto LABEL_33;
      }
      uint64_t v52 = (uint64_t)v66;
    }
    sub_10051B3EC((uint64_t)v90, (uint64_t)&v74, (uint64_t *)&unk_101685110);
    sub_10051B3EC((uint64_t)v91, (uint64_t)&v89, (uint64_t *)&unk_101685110);
    sub_100556868((uint64_t)&v74);
    goto LABEL_29;
  }
  return result;
}

uint64_t sub_100BF1640(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  uint64_t v166 = sub_1005057FC(&qword_10167D2D0);
  __chkstk_darwin(v166, v8);
  uint64_t v10 = (char *)&v153 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1005057FC((uint64_t *)&unk_10167D2B0);
  __chkstk_darwin(v11 - 8, v12);
  uint64_t v157 = (uint64_t)&v153 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14, v15);
  uint64_t v17 = (char *)&v153 - v16;
  __chkstk_darwin(v18, v19);
  uint64_t v167 = (uint64_t)&v153 - v20;
  uint64_t v174 = type metadata accessor for CRLMovieItemAssetData(0);
  __chkstk_darwin(v174, v21);
  unint64_t v156 = (char *)&v153 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23, v24);
  CGFloat v165 = (char *)&v153 - v25;
  __chkstk_darwin(v26, v27);
  uint64_t v164 = (char *)&v153 - v28;
  __chkstk_darwin(v29, v30);
  CGFloat v172 = (char *)&v153 - v31;
  uint64_t v171 = type metadata accessor for CRLAssetData();
  uint64_t v32 = *(void *)(v171 - 8);
  __chkstk_darwin(v171, v33);
  uint64_t v155 = (uint64_t)&v153 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v35, v36);
  uint64_t v163 = (uint64_t)&v153 - v37;
  __chkstk_darwin(v38, v39);
  uint64_t v162 = (uint64_t)&v153 - v40;
  uint64_t v168 = v17;
  double v173 = v10;
  switch(a3)
  {
    case 4:
      swift_bridgeObjectRelease();
      goto LABEL_4;
    default:
      char v41 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if (v41)
      {
LABEL_4:
        uint64_t result = a2;
        uint64_t v43 = *(void *)(a2 + 16);
        if (!v43) {
          return result;
        }
        uint64_t v170 = a4;
        CGFloat v180 = (void *)(a1 + OBJC_IVAR____TtC8Freeform14CRLPropertyMap_data);
        uint64_t v160 = OBJC_IVAR____TtC8Freeform12CRLMovieItem__posterImageAssetAsData;
        uint64_t v161 = OBJC_IVAR____TtC8Freeform12CRLMovieItem__movieAssetAsData;
        CGFloat v158 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v32 + 48);
        uint64_t v159 = OBJC_IVAR____TtC8Freeform12CRLMovieItem_spatial;
        uint64_t v154 = swift_bridgeObjectRetain();
        uint64_t v44 = (uint64_t *)(v154 + 40);
        long long v153 = xmmword_10117E810;
        uint64_t v45 = v179;
        while (1)
        {
          uint64_t v47 = *(v44 - 1);
          uint64_t v46 = *v44;
          BOOL v48 = v47 == 0x656B6F727473 && v46 == 0xE600000000000000;
          if (v48 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
          {
            uint64_t v49 = OBJC_IVAR____TtC8Freeform13CRLStyledItem__stroke;
            uint64_t v50 = *(void **)((char *)v45 + OBJC_IVAR____TtC8Freeform13CRLStyledItem__stroke);
            if (v50)
            {
              id v51 = *(id *)((char *)v45 + OBJC_IVAR____TtC8Freeform13CRLStyledItem__stroke);
              goto LABEL_32;
            }
            uint64_t v52 = *(uint64_t **)((char *)v45 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
            uint64_t v53 = *v52;
            uint64_t v54 = swift_conformsToProtocol2();
            if (!v54) {
              goto LABEL_110;
            }
            *(void *)&long long v184 = v52;
            (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v54 + 8))(v186, v53, v54);
            sub_10051B3EC((uint64_t)v186, (uint64_t)v187, (uint64_t *)&unk_101685110);
            if (sub_100556850((uint64_t)v187) == 1)
            {
              id v55 = v45;
              long long v184 = 0u;
              long long v185 = 0u;
            }
            else
            {
              v189[12] = v187[12];
              v189[13] = v187[13];
              uint64_t v190 = v188;
              v189[8] = v187[8];
              v189[9] = v187[9];
              v189[10] = v187[10];
              v189[11] = v187[11];
              v189[4] = v187[4];
              v189[5] = v187[5];
              v189[6] = v187[6];
              v189[7] = v187[7];
              v189[0] = v187[0];
              v189[1] = v187[1];
              v189[2] = v187[2];
              v189[3] = v187[3];
              id v73 = sub_100A1E370((uint64_t)v189, 0);
              sub_100A37194(v186, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_100519F40);
              long long v74 = *(void **)((char *)v45 + v49);
              *(void *)((char *)v45 + v49) = v73;
              id v51 = v73;

              uint64_t v50 = 0;
LABEL_32:
              id v55 = v45;
              *((void *)&v185 + 1) = sub_10050BF48(0, (unint64_t *)&qword_101686A50);
              *(void *)&long long v184 = v51;
              id v75 = v50;
            }
            long long v76 = v180;
            swift_beginAccess();
            sub_100522E9C((uint64_t)&v184, (uint64_t)&v182, &qword_101672BF0);
            char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            CGFloat v181 = (void *)*v76;
            long long v78 = v181;
            void *v76 = 0x8000000000000000;
            unint64_t v80 = sub_1009563E8();
            uint64_t v81 = v78[2];
            BOOL v82 = (v79 & 1) == 0;
            uint64_t v83 = v81 + v82;
            if (__OFADD__(v81, v82))
            {
              __break(1u);
LABEL_105:
              __break(1u);
LABEL_106:
              __break(1u);
LABEL_107:
              __break(1u);
LABEL_108:
              __break(1u);
LABEL_109:
              __break(1u);
LABEL_110:
              __break(1u);
LABEL_111:
              type metadata accessor for CRLChangeProperty(0);
              KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
              __break(1u);
LABEL_112:
              sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"populatePropertyMap(_:observedDifferenceLabels:withPropertyKey:snapshot:)", 73, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLMovieItem.swift", 83, 2, 446, (uint64_t)"Snapshot should be a movie item.", 32, 2u, (uint64_t)_swiftEmptyArrayStorage);
              sub_100586FD4((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Snapshot should be a movie item.");
              sub_1005871AC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"populatePropertyMap(_:observedDifferenceLabels:withPropertyKey:snapshot:)", 73, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLMovieItem.swift", 83, 2, 446);
              SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v151, v152);
              _assertionFailure(_:_:file:line:flags:)();
              __break(1u);
              JUMPOUT(0x100BF2F64);
            }
            char v84 = v79;
            if (v78[3] >= v83)
            {
              if (isUniquelyReferenced_nonNull_native)
              {
                long long v87 = v181;
                if ((v79 & 1) == 0) {
                  goto LABEL_40;
                }
              }
              else
              {
                sub_10097C320();
                long long v87 = v181;
                if ((v84 & 1) == 0) {
                  goto LABEL_40;
                }
              }
            }
            else
            {
              sub_10095F04C(v83, isUniquelyReferenced_nonNull_native);
              uint64_t v85 = sub_1009563E8();
              if ((v84 & 1) != (v86 & 1)) {
                goto LABEL_111;
              }
              unint64_t v80 = v85;
              long long v87 = v181;
              if ((v84 & 1) == 0)
              {
LABEL_40:
                v87[(v80 >> 6) + 8] |= 1 << v80;
                *(void *)(v87[6] + 8 * v80) = 15;
                sub_10051B3EC((uint64_t)&v182, v87[7] + 32 * v80, &qword_101672BF0);
                uint64_t v88 = v87[2];
                BOOL v89 = __OFADD__(v88, 1);
                uint64_t v90 = v88 + 1;
                if (v89) {
                  goto LABEL_105;
                }
                v87[2] = v90;
                goto LABEL_7;
              }
            }
            sub_1006063BC((uint64_t)&v182, v87[7] + 32 * v80, &qword_101672BF0);
LABEL_7:
            *CGFloat v180 = v87;
            swift_bridgeObjectRelease();
            swift_endAccess();
            sub_100522F00((uint64_t)&v184, &qword_101672BF0);
            uint64_t v45 = v55;
            goto LABEL_8;
          }
          BOOL v56 = v47 == 0x737465737361 && v46 == 0xE600000000000000;
          if (!v56 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
          {
            if ((v47 != 0x656D756C6F76 || v46 != 0xE600000000000000)
              && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
            {
              if ((v47 != 0x617461446B73616DLL || v46 != 0xE800000000000000)
                && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
              {
                sub_1005057FC((uint64_t *)&unk_101672B40);
                uint64_t v149 = swift_allocObject();
                *(_OWORD *)(v149 + 16) = v153;
                *(void *)(v149 + 56) = &type metadata for String;
                *(void *)(v149 + 64) = sub_100528BE4();
                *(void *)(v149 + 32) = v47;
                *(void *)(v149 + 40) = v46;
                swift_bridgeObjectRetain();
                sub_1005598CC(v149, (uint64_t)"populatePropertyMap(_:observedDifferenceLabels:withPropertyKey:snapshot:)", 73, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLMovieItem.swift", 83, 2, 466);
                swift_setDeallocating();
                sub_1005057FC(&qword_101672B50);
                swift_arrayDestroy();
                uint64_t v45 = v179;
                swift_deallocClassInstance();
                goto LABEL_8;
              }
              swift_beginAccess();
              type metadata accessor for CRLMovieItemCRDTData(0);
              swift_retain();
              sub_1005057FC(&qword_101672430);
              CRRegister.wrappedValue.getter();
              float v134 = v182;
              swift_endAccess();
              swift_release();
              swift_bridgeObjectRelease();
              *((void *)&v185 + 1) = &type metadata for Float;
              *(float *)&long long v184 = v134;
              uint64_t v135 = v180;
              swift_beginAccess();
              sub_100522E9C((uint64_t)&v184, (uint64_t)&v182, &qword_101672BF0);
              char v136 = swift_isUniquelyReferenced_nonNull_native();
              CGFloat v181 = (void *)*v135;
              uint64_t v137 = v181;
              *uint64_t v135 = 0x8000000000000000;
              unint64_t v139 = sub_1009563E8();
              uint64_t v140 = v137[2];
              BOOL v141 = (v138 & 1) == 0;
              uint64_t v142 = v140 + v141;
              if (__OFADD__(v140, v141)) {
                goto LABEL_108;
              }
              char v143 = v138;
              if (v137[3] >= v142)
              {
                if (v136)
                {
                  CGFloat v146 = v181;
                  if ((v138 & 1) == 0) {
                    goto LABEL_86;
                  }
                }
                else
                {
                  sub_10097C320();
                  CGFloat v146 = v181;
                  if ((v143 & 1) == 0) {
                    goto LABEL_86;
                  }
                }
              }
              else
              {
                sub_10095F04C(v142, v136);
                uint64_t v144 = sub_1009563E8();
                if ((v143 & 1) != (v145 & 1)) {
                  goto LABEL_111;
                }
                unint64_t v139 = v144;
                CGFloat v146 = v181;
                if ((v143 & 1) == 0)
                {
LABEL_86:
                  v146[(v139 >> 6) + 8] |= 1 << v139;
                  *(void *)(v146[6] + 8 * v139) = 45;
                  sub_10051B3EC((uint64_t)&v182, v146[7] + 32 * v139, &qword_101672BF0);
                  uint64_t v147 = v146[2];
                  BOOL v89 = __OFADD__(v147, 1);
                  uint64_t v148 = v147 + 1;
                  if (v89) {
                    goto LABEL_109;
                  }
                  v146[2] = v148;
                  goto LABEL_91;
                }
              }
              sub_1006063BC((uint64_t)&v182, v146[7] + 32 * v139, &qword_101672BF0);
LABEL_91:
              uint64_t v45 = v179;
              *CGFloat v180 = v146;
              swift_bridgeObjectRelease();
              swift_endAccess();
              sub_100522F00((uint64_t)&v184, &qword_101672BF0);
              goto LABEL_8;
            }
            swift_beginAccess();
            type metadata accessor for CRLMovieItemCRDTData(0);
            swift_retain();
            sub_1005057FC(&qword_101673480);
            CRRegister.wrappedValue.getter();
            float v110 = v182;
            int v111 = v183;
            swift_endAccess();
            swift_release();
            if (v111) {
              float v112 = 1.0;
            }
            else {
              float v112 = v110;
            }
            *((void *)&v185 + 1) = &type metadata for Float;
            *(float *)&long long v184 = v112;
            uint64_t v113 = v180;
            swift_beginAccess();
            sub_100522E9C((uint64_t)&v184, (uint64_t)&v182, &qword_101672BF0);
            char v114 = swift_isUniquelyReferenced_nonNull_native();
            CGFloat v181 = (void *)*v113;
            uint64_t v115 = v181;
            *uint64_t v113 = 0x8000000000000000;
            unint64_t v117 = sub_1009563E8();
            uint64_t v118 = v115[2];
            BOOL v119 = (v116 & 1) == 0;
            uint64_t v120 = v118 + v119;
            if (__OFADD__(v118, v119)) {
              goto LABEL_106;
            }
            char v121 = v116;
            if (v115[3] >= v120)
            {
              if (v114)
              {
                double v124 = v181;
                if ((v116 & 1) == 0) {
                  goto LABEL_64;
                }
              }
              else
              {
                sub_10097C320();
                double v124 = v181;
                if ((v121 & 1) == 0) {
                  goto LABEL_64;
                }
              }
            }
            else
            {
              sub_10095F04C(v120, v114);
              uint64_t v122 = sub_1009563E8();
              if ((v121 & 1) != (v123 & 1)) {
                goto LABEL_111;
              }
              unint64_t v117 = v122;
              double v124 = v181;
              if ((v121 & 1) == 0)
              {
LABEL_64:
                v124[(v117 >> 6) + 8] |= 1 << v117;
                *(void *)(v124[6] + 8 * v117) = 44;
                sub_10051B3EC((uint64_t)&v182, v124[7] + 32 * v117, &qword_101672BF0);
                uint64_t v125 = v124[2];
                BOOL v89 = __OFADD__(v125, 1);
                uint64_t v126 = v125 + 1;
                if (v89) {
                  goto LABEL_107;
                }
                v124[2] = v126;
                goto LABEL_78;
              }
            }
            sub_1006063BC((uint64_t)&v182, v124[7] + 32 * v117, &qword_101672BF0);
LABEL_78:
            *CGFloat v180 = v124;
            swift_bridgeObjectRelease();
            swift_endAccess();
            sub_100522F00((uint64_t)&v184, &qword_101672BF0);
            uint64_t v45 = v179;
            goto LABEL_8;
          }
          uint64_t v169 = v43;
          type metadata accessor for CRLMovieItem();
          uint64_t v57 = swift_dynamicCastClass();
          if (!v57) {
            goto LABEL_112;
          }
          uint64_t v58 = v57;
          uint64_t v59 = *(void **)((char *)v45 + v161);
          *(void *)((char *)v45 + v161) = 0;
          swift_unknownObjectRetain();

          uint64_t v60 = *(void **)((char *)v45 + v160);
          *(void *)((char *)v45 + v160) = 0;

          *((unsigned char *)v45 + v159) = 2;
          uint64_t v175 = OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData;
          uint64_t v176 = v58;
          swift_beginAccess();
          swift_retain();
          uint64_t v61 = sub_1005057FC(&qword_1016A4070);
          uint64_t v62 = (uint64_t)v172;
          CRRegister.wrappedValue.getter();
          swift_endAccess();
          swift_release();
          uint64_t v63 = v162;
          sub_100BF57E8(v62, v162, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
          sub_100BF5964(v62, type metadata accessor for CRLMovieItemAssetData);
          uint64_t v177 = OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData;
          swift_beginAccess();
          swift_retain();
          uint64_t v178 = v61;
          CRRegister.wrappedValue.getter();
          swift_endAccess();
          swift_release();
          uint64_t v64 = v163;
          sub_100BF57E8(v62, v163, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
          sub_100BF5964(v62, type metadata accessor for CRLMovieItemAssetData);
          char v65 = static UUID.== infix(_:_:)();
          uint64_t v66 = v171;
          if ((v65 & 1) == 0) {
            break;
          }
          uint64_t v67 = *(int *)(v171 + 20);
          uint64_t v68 = *(void *)(v63 + v67);
          uint64_t v69 = *(void *)(v63 + v67 + 8);
          uint64_t v70 = (void *)(v64 + v67);
          if ((v68 != *v70 || v69 != v70[1]) && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
            break;
          }
          char v71 = sub_100ED60AC(*(void *)(v63 + *(int *)(v66 + 24)), *(void *)(v64 + *(int *)(v66 + 24)));
          sub_100BF5964(v64, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
          sub_100BF5964(v63, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
          uint64_t v72 = v167;
          if ((v71 & 1) == 0) {
            goto LABEL_43;
          }
LABEL_44:
          swift_beginAccess();
          swift_retain();
          uint64_t v91 = (uint64_t)v172;
          CRRegister.wrappedValue.getter();
          swift_endAccess();
          swift_release();
          uint64_t v92 = v174;
          sub_100522E9C(v91 + *(int *)(v174 + 20), v72, (uint64_t *)&unk_10167D2B0);
          sub_100BF5964(v91, type metadata accessor for CRLMovieItemAssetData);
          swift_beginAccess();
          swift_retain();
          CRRegister.wrappedValue.getter();
          swift_endAccess();
          swift_release();
          uint64_t v93 = v91 + *(int *)(v92 + 20);
          uint64_t v94 = (uint64_t)v168;
          sub_100522E9C(v93, (uint64_t)v168, (uint64_t *)&unk_10167D2B0);
          sub_100BF5964(v91, type metadata accessor for CRLMovieItemAssetData);
          uint64_t v95 = (uint64_t)v173;
          uint64_t v96 = (uint64_t)&v173[*(int *)(v166 + 48)];
          sub_100522E9C(v72, (uint64_t)v173, (uint64_t *)&unk_10167D2B0);
          sub_100522E9C(v94, v96, (uint64_t *)&unk_10167D2B0);
          uint64_t v97 = *v158;
          uint64_t v98 = v171;
          if ((*v158)(v95, 1, v171) != 1)
          {
            uint64_t v100 = v95;
            uint64_t v101 = v157;
            sub_100522E9C(v100, v157, (uint64_t *)&unk_10167D2B0);
            unsigned int v102 = v97(v96, 1, v98);
            uint64_t v103 = v101;
            uint64_t v99 = &qword_10167D2D0;
            if (v102 != 1)
            {
              uint64_t v104 = v155;
              sub_100BF5780(v96, v155, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
              if (static UUID.== infix(_:_:)())
              {
                if ((uint64_t v105 = *(int *)(v98 + 20),
                      uint64_t v106 = *(void *)(v103 + v105),
                      uint64_t v107 = *(void *)(v103 + v105 + 8),
                      id v108 = (void *)(v104 + v105),
                      v106 == *v108)
                  && v107 == v108[1]
                  || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
                {
                  char v109 = sub_100ED60AC(*(void *)(v103 + *(int *)(v98 + 24)), *(void *)(v104 + *(int *)(v98 + 24)));
                  sub_100BF5964(v104, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
                  sub_100522F00((uint64_t)v168, (uint64_t *)&unk_10167D2B0);
                  sub_100522F00(v167, (uint64_t *)&unk_10167D2B0);
                  sub_100BF5964(v103, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
                  sub_100522F00((uint64_t)v173, (uint64_t *)&unk_10167D2B0);
                  if (v109) {
                    goto LABEL_70;
                  }
                  goto LABEL_69;
                }
              }
              sub_100BF5964(v104, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
              uint64_t v99 = (uint64_t *)&unk_10167D2B0;
            }
            sub_100522F00((uint64_t)v168, (uint64_t *)&unk_10167D2B0);
            sub_100522F00(v167, (uint64_t *)&unk_10167D2B0);
            sub_100BF5964(v103, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
LABEL_68:
            sub_100522F00((uint64_t)v173, v99);
LABEL_69:
            *((void *)&v185 + 1) = &type metadata for Bool;
            LOBYTE(v184) = 1;
            sub_100522E9C((uint64_t)&v184, (uint64_t)&v182, &qword_101672BF0);
            swift_beginAccess();
            sub_10057D61C((uint64_t)&v182, 0x28uLL);
            swift_endAccess();
            sub_100522F00((uint64_t)&v184, &qword_101672BF0);
            goto LABEL_70;
          }
          sub_100522F00(v94, (uint64_t *)&unk_10167D2B0);
          sub_100522F00(v72, (uint64_t *)&unk_10167D2B0);
          uint64_t v99 = &qword_10167D2D0;
          if (v97(v96, 1, v98) != 1) {
            goto LABEL_68;
          }
          sub_100522F00((uint64_t)v173, (uint64_t *)&unk_10167D2B0);
LABEL_70:
          swift_beginAccess();
          swift_retain();
          uint64_t v127 = (uint64_t)v164;
          CRRegister.wrappedValue.getter();
          uint64_t v128 = v174;
          int v129 = *(unsigned __int8 *)(v127 + *(int *)(v174 + 48));
          swift_endAccess();
          sub_100BF5964(v127, type metadata accessor for CRLMovieItemAssetData);
          swift_release();
          swift_beginAccess();
          swift_retain();
          uint64_t v130 = (uint64_t)v165;
          CRRegister.wrappedValue.getter();
          int v131 = *(unsigned __int8 *)(v130 + *(int *)(v128 + 48));
          swift_endAccess();
          sub_100BF5964(v130, type metadata accessor for CRLMovieItemAssetData);
          swift_release();
          if (v131 == 2)
          {
            uint64_t v43 = v169;
            if (v129) {
              goto LABEL_74;
            }
          }
          else
          {
            uint64_t v43 = v169;
            if (((v129 ^ ((v131 & 1) == 0)) & 1) == 0)
            {
LABEL_74:
              uint64_t v45 = v179;
              swift_beginAccess();
              swift_retain();
              uint64_t v132 = (uint64_t)v156;
              CRRegister.wrappedValue.getter();
              char v133 = *(unsigned char *)(v132 + *(int *)(v174 + 48));
              swift_endAccess();
              sub_100BF5964(v132, type metadata accessor for CRLMovieItemAssetData);
              swift_release();
              *((void *)&v185 + 1) = &type metadata for Bool;
              LOBYTE(v184) = v133 & 1;
              sub_100522E9C((uint64_t)&v184, (uint64_t)&v182, &qword_101672BF0);
              swift_beginAccess();
              sub_10057D61C((uint64_t)&v182, 0x34uLL);
              swift_endAccess();
              sub_100522F00((uint64_t)&v184, &qword_101672BF0);
              swift_unknownObjectRelease();
              goto LABEL_8;
            }
          }
          swift_unknownObjectRelease();
          uint64_t v45 = v179;
LABEL_8:
          v44 += 2;
          if (!--v43) {
            return swift_bridgeObjectRelease();
          }
        }
        sub_100BF5964(v64, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
        sub_100BF5964(v63, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
        uint64_t v72 = v167;
LABEL_43:
        *((void *)&v185 + 1) = &type metadata for Bool;
        LOBYTE(v184) = 1;
        sub_100522E9C((uint64_t)&v184, (uint64_t)&v182, &qword_101672BF0);
        swift_beginAccess();
        sub_10057D61C((uint64_t)&v182, 0x12uLL);
        swift_endAccess();
        sub_100522F00((uint64_t)&v184, &qword_101672BF0);
        goto LABEL_44;
      }
      swift_getObjectType();
      uint64_t v150 = v179;
      return sub_100892474(a1, a2, a3, a4, v150);
  }
}

id sub_100BF31A8()
{
  uint64_t v1 = v0;
  uint64_t v2 = *(uint64_t (**)(uint64_t))(**(void **)&v0[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData] + 288);
  uint64_t v3 = swift_retain();
  uint64_t v4 = (void *)v2(v3);
  swift_release();
  [v4 size];
  double v6 = v5;
  double v8 = v7;

  if (v6 <= 0.0 || v8 <= 0.0)
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"generateEmptyPosterImage()", 26, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLMovieItem.swift", 83, 2, 512, (uint64_t)"Movie's original size should be nonzero.", 40, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"generateEmptyPosterImage()", 26, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLMovieItem.swift", 83, 2, 512);
    return 0;
  }
  uint64_t v9 = sub_100455AA8(3, v6, v8);
  if (!v9) {
    return 0;
  }
  uint64_t v10 = v9;
  id v11 = [self blackColor];
  uint64_t v12 = (CGColor *)[v11 CGColor];

  CGContextSetFillColorWithColor(v10, v12);
  v22.origin.x = sub_100064070();
  CGContextFillRect(v10, v22);
  Image = CGBitmapContextCreateImage(v10);
  if (!Image)
  {

    return 0;
  }
  uint64_t v14 = Image;
  uint64_t v15 = sub_10047EC98(Image);
  uint64_t v16 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v18 = v17;

  id v19 = objc_allocWithZone((Class)type metadata accessor for CRLPreinsertionAssetWrapper());
  sub_100510D4C(v16, v18);
  id v21 = sub_100B4DED8(v16, v18, 0x6D49726574736F70, 0xEF676E702E656761, (uint64_t)v1);
  sub_100510084(v16, v18);

  return v21;
}

id sub_100BF34BC()
{
  uint64_t v0 = sub_1005057FC((uint64_t *)&unk_101676160);
  __chkstk_darwin(v0 - 8, v1);
  uint64_t v3 = (char *)&v18 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for UTType();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4, v6);
  double v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100BEBBB0();
  uint64_t v10 = *(void *)&v9[OBJC_IVAR____TtC8Freeform8CRLAsset_storage + 24];
  uint64_t v11 = *(void *)&v9[OBJC_IVAR____TtC8Freeform8CRLAsset_storage + 32];
  sub_10050F848(&v9[OBJC_IVAR____TtC8Freeform8CRLAsset_storage], v10);
  (*(void (**)(uint64_t, uint64_t))(v11 + 16))(v10, v11);
  NSString v12 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v13 = [v12 crl_pathUTI];

  if (v13)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();

    UTType.init(_:)();
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v3, 1, 1, v4);
  }

  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
  {
    sub_100522F00((uint64_t)v3, (uint64_t *)&unk_101676160);
    return 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v8, v3, v4);
    uint64_t v15 = self;
    UTType.identifier.getter();
    NSString v16 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v14 = [v15 canInitWithDataType:v16];

    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  }
  return v14;
}

id sub_100BF3740()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for CRLMovieItemAssetData(0);
  uint64_t v3 = v2 - 8;
  __chkstk_darwin(v2, v4);
  uint64_t v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100BEBBB0();
  id v8 = [objc_allocWithZone((Class)CRLAnimatedGIFController) initWithData:v7 delegate:0];

  swift_beginAccess();
  swift_retain();
  sub_1005057FC(&qword_1016A4070);
  CRRegister.wrappedValue.getter();
  double v9 = *(double *)&v6[*(int *)(v3 + 32)];
  swift_endAccess();
  sub_100BF5964((uint64_t)v6, type metadata accessor for CRLMovieItemAssetData);
  swift_release();
  uint64_t v10 = (CGImage *)[v8 imageForTime:v9];
  if (v10)
  {
    uint64_t v11 = v10;
    NSString v12 = sub_10047EC98(v10);
    uint64_t v13 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v15 = v14;

    id v16 = objc_allocWithZone((Class)type metadata accessor for CRLPreinsertionAssetWrapper());
    sub_100510D4C(v13, v15);
    id v17 = sub_100B4DED8(v13, v15, 0x6D49726574736F70, 0xEF676E702E656761, (uint64_t)v1);

    sub_100510084(v13, v15);
  }
  else
  {

    return 0;
  }
  return v17;
}

id sub_100BF39E0()
{
  uint64_t v0 = type metadata accessor for CRLMovieItemAssetData(0);
  __chkstk_darwin(v0, v1);
  uint64_t v3 = &v11[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (sub_100BF34BC())
  {
    return sub_100BF3740();
  }
  else
  {
    uint64_t v5 = sub_100BEBBB0();
    uint64_t v6 = *(void *)&v5[OBJC_IVAR____TtC8Freeform8CRLAsset_storage + 24];
    uint64_t v7 = *(void *)&v5[OBJC_IVAR____TtC8Freeform8CRLAsset_storage + 32];
    sub_10050F848(&v5[OBJC_IVAR____TtC8Freeform8CRLAsset_storage], v6);
    id v8 = (void *)(*(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 56))(_swiftEmptyDictionarySingleton, v6, v7);

    sub_100BE98D0([v8 crl_containsTracksWithVisualCharacteristics]);
    swift_beginAccess();
    swift_retain();
    sub_1005057FC(&qword_1016A4070);
    CRRegister.wrappedValue.getter();
    Float64 v9 = *(double *)&v3[*(int *)(v0 + 24)];
    swift_endAccess();
    sub_100BF5964((uint64_t)v3, type metadata accessor for CRLMovieItemAssetData);
    swift_release();
    id v10 = sub_100BF3C48(v8, v9);

    return v10;
  }
}

id sub_100BF3C48(void *a1, Float64 a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for CRLMovieItemAssetData(0);
  __chkstk_darwin(v6, v7);
  Float64 v9 = (char *)v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v10 = [objc_allocWithZone((Class)CRLMoviePosterImageGenerator) initWithAsset:a1];
  v36[1] = OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData;
  swift_beginAccess();
  swift_retain();
  v36[0] = sub_1005057FC(&qword_1016A4070);
  CRRegister.wrappedValue.getter();
  char v11 = v9[*(int *)(v6 + 36)];
  swift_endAccess();
  sub_100BF5964((uint64_t)v9, type metadata accessor for CRLMovieItemAssetData);
  swift_release();
  if (v11)
  {
    v39.start.value = 0;
    NSString v12 = (CGImage *)[v10 copyAssetCoverArtMetadataWithError:&v39];
    value = (void *)v39.start.value;
    if (v12)
    {
      unint64_t v14 = v12;
      unint64_t v15 = v10;
LABEL_6:
      id v21 = value;
      CGRect v22 = sub_10047EC98(v14);
      uint64_t v23 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v25 = v24;

      id v26 = objc_allocWithZone((Class)type metadata accessor for CRLPreinsertionAssetWrapper());
      sub_100510D4C(v23, v25);
      id v34 = sub_100B4DED8(v23, v25, 0x6D49726574736F70, 0xEF676E702E656761, (uint64_t)v3);

      sub_100510084(v23, v25);
      return v34;
    }
  }
  else
  {
    CMTimeMakeWithSeconds(&v39.start, a2, 90000);
    CMTimeValue v16 = v39.start.value;
    CMTimeEpoch epoch = v39.start.epoch;
    uint64_t v18 = *(void *)&v39.start.timescale;
    unint64_t v15 = v10;
    CMTimeEpoch v19 = kCMTimeZero.epoch;
    [a1 duration];
    start.value = kCMTimeZero.value;
    *(void *)&start.timescale = *(void *)&kCMTimeZero.timescale;
    start.CMTimeEpoch epoch = v19;
    id v10 = v15;
    CMTime duration = v39.start;
    CMTimeRangeMake(&v39, &start, &duration);
    start.value = v16;
    *(void *)&start.timescale = v18;
    start.CMTimeEpoch epoch = epoch;
    CMTimeClampToRange(&duration, &start, &v39);
    start.value = 0;
    v39.CMTime start = duration;
    uint64_t v20 = (CGImage *)[v15 copyCGImageAtTime:&v39 error:&start];
    value = (void *)start.value;
    if (v20)
    {
      unint64_t v14 = v20;
      goto LABEL_6;
    }
  }
  id v27 = value;
  _convertNSErrorToError(_:)();

  swift_willThrow();
  type metadata accessor for Code(0);
  v39.start.value = -11832;
  swift_errorRetain();
  sub_100BF5850(&qword_101671668, type metadata accessor for Code);
  char v28 = static _ErrorCodeProtocol.~= infix(_:_:)();
  swift_errorRelease();
  if (v28)
  {
    swift_errorRelease();
    swift_beginAccess();
    swift_retain();
    CRRegister.wrappedValue.getter();
    char v29 = v9[*(int *)(v6 + 36)];
    swift_endAccess();
    sub_100BF5964((uint64_t)v9, type metadata accessor for CRLMovieItemAssetData);
    swift_release();
    if (v29)
    {

      return 0;
    }
    else
    {
      id v34 = sub_100BF31A8();
    }
  }
  else
  {
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_10117E810;
    swift_getErrorValue();
    uint64_t v31 = Error.localizedDescription.getter();
    uint64_t v33 = v32;
    *(void *)(inited + 56) = &type metadata for String;
    *(void *)(inited + 64) = sub_100528BE4();
    *(void *)(inited + 32) = v31;
    *(void *)(inited + 40) = v33;
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"makePosterImageData(avAsset:posterTime:)", 40, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLMovieItem.swift", 83, 2, 578, (uint64_t)"unexpected error occurred trying to generate poster image: %@", 61, 2u, inited);
    sub_1005598CC(inited, (uint64_t)"makePosterImageData(avAsset:posterTime:)", 40, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLMovieItem.swift", 83, 2, 578);

    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();
    swift_errorRelease();
    return 0;
  }
  return v34;
}

double *sub_100BF4318()
{
  uint64_t v1 = sub_1005057FC((uint64_t *)&unk_101676160);
  __chkstk_darwin(v1 - 8, v2);
  uint64_t v4 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for UTType();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5, v7);
  Float64 v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v10 = v0;
  sub_100BE67BC((uint64_t)v4);

  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_100522F00((uint64_t)v4, (uint64_t *)&unk_101676160);
    return _swiftEmptyArrayStorage;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v9, v4, v5);
    sub_1005057FC((uint64_t *)&unk_101672610);
    uint64_t v11 = swift_allocObject();
    *(_OWORD *)(v11 + 16) = xmmword_10117E810;
    *(void *)(v11 + 32) = UTType.identifier.getter();
    *(void *)(v11 + 40) = v12;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  }
  return (double *)v11;
}

void *sub_100BF4794@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = v1;
  uint64_t v4 = (void *)sub_100BC934C();
  if (v4)
  {
    sub_100A1F088(v4, (uint64_t)__src);
    SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)((CKRecordID)__src, v5);
  }
  else
  {
    sub_10051A3F4((uint64_t)__src);
  }
  sub_10051B3EC((uint64_t)__src, (uint64_t)v16, (uint64_t *)&unk_101685110);
  uint64_t v6 = *(uint64_t (**)(uint64_t))(**(void **)&v3[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData] + 384);
  uint64_t v7 = v3;
  uint64_t v8 = swift_retain();
  Float64 v9 = (void *)v6(v8);

  swift_release();
  if (v9)
  {
    sub_10093D2D8(v9, (uint64_t)__src);
    SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)((CKRecordID)__src, v10);
  }
  else
  {
    sub_10051A41C(__src);
  }
  sub_10051B3EC((uint64_t)__src, (uint64_t)v15, (uint64_t *)&unk_101683E20);
  swift_beginAccess();
  type metadata accessor for CRLMovieItemCRDTData(0);
  swift_retain();
  sub_1005057FC(&qword_101672430);
  CRRegister.wrappedValue.getter();
  swift_endAccess();

  swift_release();
  swift_bridgeObjectRelease();
  sub_10051B3EC((uint64_t)v16, (uint64_t)__src, (uint64_t *)&unk_101685110);
  sub_10051B3EC((uint64_t)v15, (uint64_t)&__src[232], (uint64_t *)&unk_101683E20);
  *(_DWORD *)&__src[360] = v13;
  *(void *)&__src[368] = _swiftEmptyDictionarySingleton;
  a1[3] = (uint64_t)&type metadata for CRLMoviePresetData;
  a1[4] = sub_1009F2C28();
  uint64_t v11 = swift_allocObject();
  *a1 = v11;
  uint64_t result = memcpy((void *)(v11 + 16), __src, 0x178uLL);
  *(void *)(v11 + 392) = _swiftEmptyDictionarySingleton;
  return result;
}

uint64_t sub_100BF49EC()
{
  return 3;
}

void sub_100BF4ABC()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform12CRLMovieItem__posterImageAssetAsData);
}

id sub_100BF4AFC()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLMovieItem();
  [super dealloc];
}

uint64_t sub_100BF4B80()
{
  return type metadata accessor for CRLMovieItem();
}

uint64_t type metadata accessor for CRLMovieItem()
{
  uint64_t result = qword_101697450;
  if (!qword_101697450) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100BF4BD4()
{
  return swift_updateClassMetadata2();
}

uint64_t sub_100BF4C2C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = type metadata accessor for CRLMovieItemAssetData(0);
  __chkstk_darwin(v2 - 8, v3);
  Swift::String v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  swift_retain();
  sub_1005057FC(&qword_1016A4070);
  CRRegister.wrappedValue.getter();
  swift_endAccess();
  swift_release();
  sub_100BF57E8((uint64_t)v5, a1, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
  sub_100BF5964((uint64_t)v5, type metadata accessor for CRLMovieItemAssetData);
  uint64_t v6 = type metadata accessor for CRLAssetData();
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(a1, 0, 1, v6);
}

id sub_100BF4DB4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = objc_allocWithZone((Class)type metadata accessor for CRLMovieItem());
  v4[OBJC_IVAR____TtC8Freeform12CRLMovieItem_spatial] = 2;
  *(void *)&v4[OBJC_IVAR____TtC8Freeform12CRLMovieItem__movieAssetAsData] = 0;
  *(void *)&v4[OBJC_IVAR____TtC8Freeform12CRLMovieItem__posterImageAssetAsData] = 0;
  v4[OBJC_IVAR____TtC8Freeform12CRLMediaItem_isLooping] = 0;
  *(void *)&v4[OBJC_IVAR____TtC8Freeform13CRLStyledItem__stroke] = 0;
  *(void *)&v4[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_store] = a1;
  *(void *)&v4[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData] = a2;
  v6.receiver = v4;
  v6.super_class = (Class)type metadata accessor for CRLBoardItemBase(0);
  return [super init];
}

id sub_100BF4E78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, double a6)
{
  uint64_t v92 = a4;
  uint64_t v93 = a3;
  uint64_t v90 = a1;
  uint64_t v9 = sub_1005057FC((uint64_t *)&unk_10167D2B0);
  __chkstk_darwin(v9 - 8, v10);
  uint64_t v85 = (uint64_t)&v74 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for CRLAssetData();
  __chkstk_darwin(v12 - 8, v13);
  uint64_t v84 = (uint64_t)&v74 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for CRLMovieItemCRDTData(0);
  __chkstk_darwin(v15 - 8, v16);
  uint64_t v87 = (uint64_t)&v74 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18, v19);
  uint64_t v89 = (uint64_t)&v74 - v20;
  uint64_t v21 = type metadata accessor for UUID();
  uint64_t v22 = *(void *)(v21 - 8);
  __chkstk_darwin(v21, v23);
  unint64_t v80 = (char *)&v74 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v86 = sub_1005057FC((uint64_t *)&unk_101683E10);
  __chkstk_darwin(v86, v25);
  uint64_t v83 = (uint64_t)&v74 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v27, v28);
  uint64_t v88 = (uint64_t)&v74 - v29;
  uint64_t v30 = sub_1005057FC((uint64_t *)&unk_101674520);
  __chkstk_darwin(v30 - 8, v31);
  uint64_t v33 = (char *)&v74 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v34, v35);
  uint64_t v37 = (char *)&v74 - v36;
  uint64_t v77 = type metadata accessor for CRLBoardItemParentAffinity();
  __chkstk_darwin(v77, v38);
  uint64_t v40 = (char *)&v74 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v43 = __chkstk_darwin(v41, v42);
  uint64_t v91 = (uint64_t)&v74 - v44;
  if (a5) {
    id v45 = a5;
  }
  else {
    id v45 = [objc_allocWithZone((Class)CRLCanvasInfoGeometry) init];
  }
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v22 + 16))(v37, a2, v21, v43);
  uint64_t v82 = v22;
  long long v76 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v22 + 56);
  v76(v37, 0, 1, v21);
  id v81 = a5;
  id v46 = v45;
  [v46 position];
  float v48 = v47;
  float v50 = v49;
  [v46 size];
  float v52 = v51;
  float v54 = v53;
  [v46 angle];
  float v56 = v55;
  unsigned int v75 = [v46 widthValid];
  unsigned int v74 = [v46 heightValid];
  unsigned __int8 v57 = [v46 horizontalFlip];
  unsigned __int8 v58 = [v46 verticalFlip];
  uint64_t v79 = a2;
  unsigned __int8 v59 = v58;

  uint64_t v78 = v21;
  sub_100522E9C((uint64_t)v37, (uint64_t)v33, (uint64_t *)&unk_101674520);
  v76(v40, 1, 1, v21);
  uint64_t v60 = v77;
  *(void *)&v40[*(int *)(v77 + 24)] = _swiftEmptyDictionarySingleton;
  sub_1006063BC((uint64_t)v33, (uint64_t)v40, (uint64_t *)&unk_101674520);
  uint64_t v61 = &v40[*(int *)(v60 + 20)];
  *(float *)uint64_t v61 = v48;
  *((float *)v61 + 1) = v50;
  *((float *)v61 + 2) = v52;
  *((float *)v61 + 3) = v54;
  *((float *)v61 + 4) = v56;
  v61[20] = v75;
  v61[21] = v74;
  v61[22] = v57;
  v61[23] = v59;
  *((void *)v61 + 3) = _swiftEmptyDictionarySingleton;
  uint64_t v62 = v91;
  sub_100BF5780((uint64_t)v40, v91, (uint64_t (*)(void))type metadata accessor for CRLBoardItemParentAffinity);
  sub_100522F00((uint64_t)v37, (uint64_t *)&unk_101674520);
  sub_100BF57E8(v62, (uint64_t)v40, (uint64_t (*)(void))type metadata accessor for CRLBoardItemParentAffinity);
  sub_10051A41C(v96);
  sub_10051B3EC((uint64_t)v96, (uint64_t)v99, (uint64_t *)&unk_101683E20);
  uint64_t v63 = (uint64_t)v80;
  UUID.init()();
  uint64_t v64 = v88;
  sub_100FC2584(v63, (uint64_t)v40, 0, 0, 0, 0xE000000000000000, (uint64_t)v99, v88);
  uint64_t v65 = v84;
  sub_100BF57E8(v93, v84, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
  uint64_t v66 = v85;
  sub_100522E9C(v92, v85, (uint64_t *)&unk_10167D2B0);
  sub_10051A3F4((uint64_t)v97);
  sub_10051B3EC((uint64_t)v97, (uint64_t)v98, (uint64_t *)&unk_101685110);
  char v95 = 0;
  uint64_t v67 = v89;
  sub_10054E6B8(v65, v66, 1065353216, (uint64_t)v98, 0, 0, 0, 0, v89, a6, 0.0, 0.0, 15.0, 0, 0);
  uint64_t v68 = v83;
  sub_100522E9C(v64, v83, (uint64_t *)&unk_101683E10);
  uint64_t v69 = v87;
  sub_100BF57E8(v67, v87, type metadata accessor for CRLMovieItemCRDTData);
  type metadata accessor for CRLMovieItemData(0);
  uint64_t v70 = swift_allocObject();
  sub_100BF5780(v69, v70 + qword_101719EE8, type metadata accessor for CRLMovieItemCRDTData);
  sub_10051B3EC(v68, v70 + *(void *)(*(void *)v70 + 632), (uint64_t *)&unk_101683E10);
  char v71 = sub_10068B398(0x1000000000000, 0x2000400000000, 0x1000000000000, 2);
  swift_beginAccess();
  char v94 = 1;
  sub_1005057FC((uint64_t *)&unk_101689310);
  CRRegister.wrappedValue.setter();
  swift_endAccess();
  swift_retain();
  id v72 = sub_100BF4DB4(v90, (uint64_t)v71);

  swift_release();
  sub_100522F00(v92, (uint64_t *)&unk_10167D2B0);
  sub_100BF5964(v93, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
  (*(void (**)(uint64_t, uint64_t))(v82 + 8))(v79, v78);
  sub_100BF5964(v67, type metadata accessor for CRLMovieItemCRDTData);
  sub_100522F00(v64, (uint64_t *)&unk_101683E10);
  sub_100BF5964(v91, (uint64_t (*)(void))type metadata accessor for CRLBoardItemParentAffinity);
  return v72;
}

uint64_t sub_100BF56A8()
{
  if (v0[14])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v0[20])
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    if (v0[27])
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
  }
  if (v0[41])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 400, 7);
}

uint64_t sub_100BF5780(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_100BF57E8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_100BF5850(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100BF5898(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1005057FC((uint64_t *)&unk_10167D2B0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_100BF5900(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CRLAssetData();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_100BF5964(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t type metadata accessor for CRLItemProviderUtils()
{
  return self;
}

unint64_t sub_100BF59E8()
{
  if (*v0) {
    return 0xD00000000000003ELL;
  }
  else {
    return 0xD00000000000001CLL;
  }
}

uint64_t sub_100BF5A30()
{
  swift_bridgeObjectRelease();
  swift_defaultActor_destroy();

  return swift_defaultActor_deallocate();
}

uint64_t type metadata accessor for CRLBoardItemInsertingCancellable()
{
  return self;
}

id sub_100BF5A9C(void *a1)
{
  return [a1 cancel];
}

uint64_t sub_100BF5AA8(uint64_t a1, unsigned char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t result = swift_dynamicCastObjCProtocolConditional();
  if (result)
  {
    uint64_t v9 = (void *)result;
    type metadata accessor for CRLBoardItem(0);
    swift_unknownObjectRetain();
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    unsigned int v11 = [v9 canHandleInsertionOfBoardItems:isa insertionContext:a4];

    if (v11)
    {
      swift_beginAccess();
      *(void *)(a5 + 16) = v9;
      swift_unknownObjectRetain();
      swift_unknownObjectRelease();
      *a2 = 1;
    }
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_100BF5BA0()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for CRLBoardItemInsertingHelper()
{
  return self;
}

unsigned char *storeEnumTagSinglePayload for CRLBoardItemInsertingError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100BF5CC8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLBoardItemInsertingError()
{
  return &type metadata for CRLBoardItemInsertingError;
}

unint64_t sub_100BF5D08()
{
  unint64_t result = qword_101697710[0];
  if (!qword_101697710[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_101697710);
  }
  return result;
}

uint64_t sub_100BF5D5C()
{
  uint64_t result = type metadata accessor for UUID();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      uint64_t result = swift_initClassMetadata2();
      if (!result) {
        return 0;
      }
    }
  }
  return result;
}

void sub_100BF5E44(void *a1, uint64_t a2, int a3)
{
  uint64_t v5 = v3;
  int v20 = a3;
  uint64_t v7 = *(void *)((swift_isaMask & *(void *)v3) + 0xD0);
  uint64_t v19 = *(void *)(v7 - 8);
  __chkstk_darwin(a1, a2);
  uint64_t v9 = (char *)&v19 - v8;
  Class isa = UUID._bridgeToObjectiveC()().super.isa;
  id v11 = [a1 getBoardItemForUUID:isa];

  if (!v11) {
    goto LABEL_7;
  }
  uint64_t v12 = swift_dynamicCastClass();
  if (!v12)
  {

LABEL_7:
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"commit(with:transaction:undoable:)", 34, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandSetValue.swift", 90, 2, 30, (uint64_t)"Unable to retrieve board item", 29, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_100586FD4((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Unable to retrieve board item");
    sub_1005871AC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"commit(with:transaction:undoable:)", 34, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandSetValue.swift", 90, 2, 30);
    SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v17, v18);
    _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
    return;
  }
  uint64_t v13 = v12;
  id v14 = v11;
  sub_10103405C(v13, (uint64_t)&off_101518040);

  if (v4)
  {
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v19 + 16))(v9, &v5[*(void *)((swift_isaMask & *(void *)v5) + 0xE0)], v7);
    uint64_t v21 = v13;
    id v15 = v14;
    swift_setAtReferenceWritableKeyPath();

    id v16 = v15;
    sub_101023724(v13, (uint64_t)&off_101518040, v20);
  }
}

void sub_100BF6188()
{
}

uint64_t sub_100BF61CC()
{
  uint64_t v1 = swift_isaMask & *(void *)v0;
  unint64_t v2 = &v0[*(void *)(v1 + 0xD8)];
  uint64_t v3 = type metadata accessor for UUID();
  (*(void (**)(char *, uint64_t))(*(void *)(v3 - 8) + 8))(v2, v3);
  (*(void (**)(char *))(*(void *)(*(void *)(v1 + 208) - 8) + 8))(&v0[*(void *)((swift_isaMask & *(void *)v0)
                                                                                                  + 0xE0)]);
  swift_release();

  return swift_bridgeObjectRelease();
}

id sub_100BF6308()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLCommandSetValue();
  [super dealloc];
}

uint64_t sub_100BF637C(char *a1)
{
  uint64_t v2 = swift_isaMask & *(void *)a1;
  uint64_t v3 = &a1[*(void *)(v2 + 0xD8)];
  uint64_t v4 = type metadata accessor for UUID();
  (*(void (**)(char *, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  (*(void (**)(char *))(*(void *)(*(void *)(v2 + 208) - 8) + 8))(&a1[*(void *)((swift_isaMask & *(void *)a1)
                                                                                                  + 0xE0)]);
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t type metadata accessor for CRLCommandSetValue()
{
  return sub_100568E70();
}

uint64_t sub_100BF64D4()
{
  uint64_t v0 = sub_100BF6510();
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_100BF6510()
{
  return *(void *)((char *)v0 + *(void *)((swift_isaMask & *v0) + 0xF0));
}

void sub_100BF6540()
{
}

uint64_t *sub_100BF6570(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v7 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a1;
    a1[1] = a2[1];
    uint64_t v8 = *(int *)(a3 + 24);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = type metadata accessor for UnknownStorage();
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    uint64_t v13 = *(int *)(a3 + 28);
    id v14 = (uint64_t *)((char *)v7 + v13);
    id v15 = (uint64_t *)((char *)a2 + v13);
    uint64_t v16 = type metadata accessor for CRLProto_Data(0);
    uint64_t v17 = *(void *)(v16 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
    {
      uint64_t v18 = sub_1005057FC((uint64_t *)&unk_101674160);
      memcpy(v14, v15, *(void *)(*(void *)(v18 - 8) + 64));
    }
    else
    {
      uint64_t v19 = *v15;
      unint64_t v20 = v15[1];
      sub_100510D4C(*v15, v20);
      *id v14 = v19;
      v14[1] = v20;
      v12((char *)v14 + *(int *)(v16 + 20), (char *)v15 + *(int *)(v16 + 20), v11);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
    }
  }
  return v7;
}

uint64_t type metadata accessor for CRLProto_Data(uint64_t a1)
{
  return sub_100512D5C(a1, qword_101697898);
}

uint64_t sub_100BF677C(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = type metadata accessor for UnknownStorage();
  uint64_t v10 = *(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  v10(v4, v5);
  uint64_t v6 = a1 + *(int *)(a2 + 28);
  uint64_t v7 = type metadata accessor for CRLProto_Data(0);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v6, 1, v7);
  if (!result)
  {
    sub_100510084(*(void *)v6, *(void *)(v6 + 8));
    uint64_t v9 = v6 + *(int *)(v7 + 20);
    return ((uint64_t (*)(uint64_t, uint64_t))v10)(v9, v5);
  }
  return result;
}

void *sub_100BF6898(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = *(int *)(a3 + 24);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for UnknownStorage();
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  uint64_t v12 = *(int *)(a3 + 28);
  uint64_t v13 = (void *)((char *)a1 + v12);
  id v14 = (void *)((char *)a2 + v12);
  uint64_t v15 = type metadata accessor for CRLProto_Data(0);
  uint64_t v16 = *(void *)(v15 - 8);
  if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
  {
    uint64_t v17 = sub_1005057FC((uint64_t *)&unk_101674160);
    memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    uint64_t v18 = *v14;
    unint64_t v19 = v14[1];
    sub_100510D4C(*v14, v19);
    *uint64_t v13 = v18;
    v13[1] = v19;
    v11((char *)v13 + *(int *)(v15 + 20), (char *)v14 + *(int *)(v15 + 20), v10);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  }
  return a1;
}

void *sub_100BF6A30(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for UnknownStorage();
  uint64_t v26 = *(void *)(v9 - 8);
  uint64_t v27 = v9;
  uint64_t v10 = *(void (**)(char *, char *))(v26 + 24);
  v10(v7, v8);
  uint64_t v11 = *(int *)(a3 + 28);
  uint64_t v12 = (void *)((char *)a1 + v11);
  uint64_t v13 = (void *)((char *)a2 + v11);
  uint64_t v14 = type metadata accessor for CRLProto_Data(0);
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v15 + 48);
  LODWORD(v8) = v16(v12, 1, v14);
  int v17 = v16(v13, 1, v14);
  if (!v8)
  {
    if (!v17)
    {
      uint64_t v22 = *v13;
      unint64_t v23 = v13[1];
      sub_100510D4C(*v13, v23);
      uint64_t v24 = *v12;
      unint64_t v25 = v12[1];
      *uint64_t v12 = v22;
      v12[1] = v23;
      sub_100510084(v24, v25);
      ((void (*)(char *, char *, uint64_t))v10)((char *)v12 + *(int *)(v14 + 20), (char *)v13 + *(int *)(v14 + 20), v27);
      return a1;
    }
    sub_100C16A08((uint64_t)v12, type metadata accessor for CRLProto_Data);
    goto LABEL_6;
  }
  if (v17)
  {
LABEL_6:
    uint64_t v20 = sub_1005057FC((uint64_t *)&unk_101674160);
    memcpy(v12, v13, *(void *)(*(void *)(v20 - 8) + 64));
    return a1;
  }
  uint64_t v18 = *v13;
  unint64_t v19 = v13[1];
  sub_100510D4C(*v13, v19);
  *uint64_t v12 = v18;
  v12[1] = v19;
  (*(void (**)(char *, char *, uint64_t))(v26 + 16))((char *)v12 + *(int *)(v14 + 20), (char *)v13 + *(int *)(v14 + 20), v27);
  (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  return a1;
}

_OWORD *sub_100BF6C7C(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for UnknownStorage();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32);
  v10(v7, v8, v9);
  uint64_t v11 = *(int *)(a3 + 28);
  uint64_t v12 = (_OWORD *)((char *)a1 + v11);
  uint64_t v13 = (_OWORD *)((char *)a2 + v11);
  uint64_t v14 = type metadata accessor for CRLProto_Data(0);
  uint64_t v15 = *(void *)(v14 - 8);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
  {
    uint64_t v16 = sub_1005057FC((uint64_t *)&unk_101674160);
    memcpy(v12, v13, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    *uint64_t v12 = *v13;
    v10((char *)v12 + *(int *)(v14 + 20), (char *)v13 + *(int *)(v14 + 20), v9);
    (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  }
  return a1;
}

void *sub_100BF6DF0(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for UnknownStorage();
  uint64_t v22 = *(void *)(v9 - 8);
  uint64_t v23 = v9;
  uint64_t v10 = *(void (**)(char *, char *))(v22 + 40);
  v10(v7, v8);
  uint64_t v11 = *(int *)(a3 + 28);
  uint64_t v12 = (void *)((char *)a1 + v11);
  uint64_t v13 = (void *)((char *)a2 + v11);
  uint64_t v14 = type metadata accessor for CRLProto_Data(0);
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v15 + 48);
  LODWORD(v8) = v16(v12, 1, v14);
  int v17 = v16(v13, 1, v14);
  if (!v8)
  {
    if (!v17)
    {
      uint64_t v20 = *v12;
      unint64_t v21 = v12[1];
      *(_OWORD *)uint64_t v12 = *(_OWORD *)v13;
      sub_100510084(v20, v21);
      ((void (*)(char *, char *, uint64_t))v10)((char *)v12 + *(int *)(v14 + 20), (char *)v13 + *(int *)(v14 + 20), v23);
      return a1;
    }
    sub_100C16A08((uint64_t)v12, type metadata accessor for CRLProto_Data);
    goto LABEL_6;
  }
  if (v17)
  {
LABEL_6:
    uint64_t v18 = sub_1005057FC((uint64_t *)&unk_101674160);
    memcpy(v12, v13, *(void *)(*(void *)(v18 - 8) + 64));
    return a1;
  }
  *(_OWORD *)uint64_t v12 = *(_OWORD *)v13;
  (*(void (**)(char *, char *, uint64_t))(v22 + 32))((char *)v12 + *(int *)(v14 + 20), (char *)v13 + *(int *)(v14 + 20), v23);
  (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  return a1;
}

uint64_t sub_100BF7020(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100BF7034);
}

uint64_t sub_100BF7034(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return sub_100C1EBB4(a1, a2, a3, (uint64_t *)&unk_101674160);
}

uint64_t sub_100BF7040(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100BF7054);
}

void *sub_100BF7054(void *a1, uint64_t a2, int a3, uint64_t a4)
{
  return sub_100C1ED04(a1, a2, a3, a4, (uint64_t *)&unk_101674160);
}

uint64_t type metadata accessor for CRLProto_ObjectMetadata(uint64_t a1)
{
  return sub_100512D5C(a1, (uint64_t *)&unk_1016977F8);
}

void sub_100BF7080(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

uint64_t *sub_100BF70B0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = *a2;
    unint64_t v8 = a2[1];
    sub_100510D4C(*a2, v8);
    *a1 = v7;
    a1[1] = v8;
    uint64_t v9 = *(int *)(a3 + 20);
    uint64_t v10 = (char *)a1 + v9;
    uint64_t v11 = (char *)a2 + v9;
    uint64_t v12 = type metadata accessor for UnknownStorage();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
  }
  return a1;
}

uint64_t sub_100BF7198(uint64_t a1, uint64_t a2)
{
  sub_100510084(*(void *)a1, *(void *)(a1 + 8));
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = type metadata accessor for UnknownStorage();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);

  return v6(v4, v5);
}

uint64_t *sub_100BF7214(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6 = *a2;
  unint64_t v7 = a2[1];
  sub_100510D4C(*a2, v7);
  *a1 = v6;
  a1[1] = v7;
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = type metadata accessor for UnknownStorage();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
  return a1;
}

uint64_t *sub_100BF72AC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6 = *a2;
  unint64_t v7 = a2[1];
  sub_100510D4C(*a2, v7);
  uint64_t v8 = *a1;
  unint64_t v9 = a1[1];
  *a1 = v6;
  a1[1] = v7;
  sub_100510084(v8, v9);
  uint64_t v10 = *(int *)(a3 + 20);
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = type metadata accessor for UnknownStorage();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 24))(v11, v12, v13);
  return a1;
}

_OWORD *sub_100BF734C(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = type metadata accessor for UnknownStorage();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

uint64_t *sub_100BF73C8(uint64_t *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6 = *a1;
  unint64_t v7 = a1[1];
  *(_OWORD *)a1 = *a2;
  sub_100510084(v6, v7);
  uint64_t v8 = *(int *)(a3 + 20);
  unint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = type metadata accessor for UnknownStorage();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 40))(v9, v10, v11);
  return a1;
}

uint64_t sub_100BF7458(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100BF746C);
}

uint64_t sub_100BF746C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 12)
  {
    uint64_t v4 = *(void *)(a1 + 8) >> 60;
    if (((4 * v4) & 0xC) != 0) {
      return 16 - ((4 * v4) & 0xC | (v4 >> 2));
    }
    else {
      return 0;
    }
  }
  else
  {
    uint64_t v8 = type metadata accessor for UnknownStorage();
    unint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_100BF7528(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100BF753C);
}

void *sub_100BF753C(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 12)
  {
    *uint64_t result = 0;
    result[1] = (unint64_t)(((-(int)a2 >> 2) & 3) - 4 * a2) << 60;
  }
  else
  {
    uint64_t v7 = type metadata accessor for UnknownStorage();
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 20);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_100BF75EC()
{
  return sub_100C17C9C();
}

void sub_100BF75F8(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(unsigned char *)(a1 + 8) = 1;
}

void sub_100BF7608(uint64_t a1@<X8>)
{
  sub_100C2D554();
  *(void *)a1 = v2;
  *(unsigned char *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 9) = v4 & 1;
}

void sub_100BF763C(uint64_t a1@<X8>)
{
  sub_100C2D554();
  *(void *)a1 = v2;
  *(unsigned char *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 9) = v4 & 1;
}

uint64_t sub_100BF7678(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_100C1694C();

  return Enum.hash(into:)(a1, a2, v4);
}

void sub_100BF76C8()
{
  qword_10171BF28 = (uint64_t)&off_101502C40;
}

uint64_t sub_100BF76DC@<X0>(void *a1@<X8>)
{
  return sub_100BF7904(&qword_10166FCA8, &qword_10171BF28, a1);
}

unint64_t sub_100BF7700@<X0>(unint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = result;
  *(unsigned char *)(a2 + 8) = result < 2;
  *(unsigned char *)(a2 + 9) = 0;
  return result;
}

uint64_t sub_100BF7718()
{
  if (v0[8]) {
    return *(void *)v0 != 0;
  }
  else {
    return *(void *)v0;
  }
}

void *sub_100BF7734@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  BOOL v2 = *result >= 2uLL;
  *(void *)a2 = *result;
  char v3 = !v2;
  *(unsigned char *)(a2 + 8) = v3;
  *(unsigned char *)(a2 + 9) = 0;
  return result;
}

void sub_100BF7750(void *a1@<X8>)
{
  uint64_t v2 = *v1;
  if (*((unsigned char *)v1 + 8)) {
    uint64_t v2 = *v1 != 0;
  }
  *a1 = v2;
}

Swift::Int sub_100BF7770()
{
  return Hasher._finalize()();
}

uint64_t sub_100BF77DC(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_100C16A68();

  return Enum.hash(into:)(a1, a2, v4);
}

Swift::Int sub_100BF7828()
{
  return Hasher._finalize()();
}

BOOL sub_100BF7890(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  if (*((unsigned char *)a1 + 8)) {
    uint64_t v2 = *a1 != 0;
  }
  uint64_t v3 = *a2 != 0;
  if (!*((unsigned char *)a2 + 8)) {
    uint64_t v3 = *a2;
  }
  return v2 == v3;
}

void sub_100BF78CC()
{
  qword_10171BF30 = (uint64_t)&off_101503218;
}

uint64_t sub_100BF78E0@<X0>(void *a1@<X8>)
{
  return sub_100BF7904(&qword_10166FCB0, &qword_10171BF30, a1);
}

uint64_t sub_100BF7904@<X0>(void *a1@<X2>, void *a2@<X3>, void *a3@<X8>)
{
  if (*a1 != -1) {
    swift_once();
  }
  *a3 = *a2;

  return swift_bridgeObjectRetain();
}

uint64_t sub_100BF795C(uint64_t a1)
{
  return sub_100C052D8(a1, qword_10171BF38, (uint64_t)"bytes", 5);
}

uint64_t sub_100BF7974()
{
  while (1)
  {
    uint64_t result = dispatch thunk of Decoder.nextFieldNumber()();
    if (v0 || (v2 & 1) != 0) {
      break;
    }
    if (result == 1) {
      dispatch thunk of Decoder.decodeSingularBytesField(value:)();
    }
  }
  return result;
}

uint64_t sub_100BF79E4()
{
  uint64_t v2 = *v0;
  unint64_t v3 = v0[1];
  switch(v3 >> 62)
  {
    case 1uLL:
      if ((int)v2 != v2 >> 32) {
        goto LABEL_7;
      }
      goto LABEL_8;
    case 2uLL:
      if (*(void *)(v2 + 16) != *(void *)(v2 + 24)) {
        goto LABEL_7;
      }
      goto LABEL_8;
    case 3uLL:
      goto LABEL_8;
    default:
      if ((v3 & 0xFF000000000000) == 0) {
        goto LABEL_8;
      }
LABEL_7:
      uint64_t result = dispatch thunk of Visitor.visitSingularBytesField(value:fieldNumber:)();
      if (!v1)
      {
LABEL_8:
        type metadata accessor for CRLProto_Data(0);
        return UnknownStorage.traverse<A>(visitor:)();
      }
      return result;
  }
}

uint64_t sub_100BF7AD4@<X0>(_OWORD *a1@<X8>)
{
  *a1 = xmmword_101180360;
  return UnknownStorage.init()();
}

uint64_t sub_100BF7B00()
{
  return 0x6F746F72504C5243;
}

uint64_t sub_100BF7B30()
{
  return sub_100BF7974();
}

uint64_t sub_100BF7B48()
{
  return sub_100BF79E4();
}

uint64_t sub_100BF7B64(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100C091F4(&qword_101697C70, (void (*)(uint64_t))type metadata accessor for CRLProto_Data);

  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_100BF7BE4@<X0>(uint64_t a1@<X8>)
{
  return sub_100C08F10(&qword_10166FCB8, (uint64_t)qword_10171BF38, a1);
}

uint64_t sub_100BF7C08(uint64_t a1)
{
  uint64_t v2 = sub_100C091F4(&qword_101697C38, (void (*)(uint64_t))type metadata accessor for CRLProto_Data);

  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_100BF7C78()
{
  sub_100C091F4(&qword_101697C38, (void (*)(uint64_t))type metadata accessor for CRLProto_Data);

  return Message.hash(into:)();
}

uint64_t sub_100BF7CFC(uint64_t a1)
{
  return sub_100C052D8(a1, qword_10171BF50, (uint64_t)"seconds", 7);
}

uint64_t sub_100BF7D14()
{
  while (1)
  {
    uint64_t result = dispatch thunk of Decoder.nextFieldNumber()();
    if (v0 || (v2 & 1) != 0) {
      break;
    }
    if (result == 1) {
      dispatch thunk of Decoder.decodeSingularDoubleField(value:)();
    }
  }
  return result;
}

uint64_t sub_100BF7D84()
{
  if (*v0 == 0.0 || (uint64_t result = dispatch thunk of Visitor.visitSingularDoubleField(value:fieldNumber:)(), !v1))
  {
    type metadata accessor for CRLProto_Date(0);
    return UnknownStorage.traverse<A>(visitor:)();
  }
  return result;
}

uint64_t sub_100BF7E1C@<X0>(void *a1@<X8>)
{
  *a1 = 0;
  return UnknownStorage.init()();
}

uint64_t sub_100BF7E40()
{
  return 0x6F746F72504C5243;
}

uint64_t sub_100BF7E64()
{
  return sub_100BF7D14();
}

uint64_t sub_100BF7E7C()
{
  return sub_100BF7D84();
}

uint64_t sub_100BF7E94(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100C091F4(&qword_101697C88, (void (*)(uint64_t))type metadata accessor for CRLProto_Date);

  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_100BF7F10@<X0>(uint64_t a1@<X8>)
{
  return sub_100C08F10(&qword_10166FCC0, (uint64_t)qword_10171BF50, a1);
}

uint64_t sub_100BF7F34(uint64_t a1)
{
  uint64_t v2 = sub_100C091F4(&qword_101697C18, (void (*)(uint64_t))type metadata accessor for CRLProto_Date);

  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_100BF7FA0()
{
  sub_100C091F4(&qword_101697C18, (void (*)(uint64_t))type metadata accessor for CRLProto_Date);

  return Message.hash(into:)();
}

uint64_t sub_100BF8020()
{
  uint64_t v0 = type metadata accessor for _NameMap();
  sub_100568B28(v0, qword_10171BF68);
  sub_100556B74(v0, (uint64_t)qword_10171BF68);
  sub_1005057FC(&qword_101697C78);
  uint64_t v1 = (int *)(sub_1005057FC(&qword_101697C80) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_10117D8C0;
  uint64_t v5 = (void *)(v4 + v3);
  unint64_t v6 = v4 + v3 + v1[14];
  *uint64_t v5 = 1;
  *(void *)unint64_t v6 = "x";
  *(void *)(v6 + 8) = 1;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = enum case for _NameMap.NameDescription.same(_:);
  uint64_t v8 = type metadata accessor for _NameMap.NameDescription();
  uint64_t v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  uint64_t v10 = (char *)v5 + v2 + v1[14];
  *(void *)((char *)v5 + v2) = 2;
  *(void *)uint64_t v10 = "y";
  *((void *)v10 + 1) = 1;
  v10[16] = 2;
  v9();
  return _NameMap.init(dictionaryLiteral:)();
}

uint64_t sub_100BF81D4()
{
  return 0x6F746F72504C5243;
}

uint64_t sub_100BF8200()
{
  return sub_100BF85B4();
}

uint64_t sub_100BF8218(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100BF8648(a1, a2, a3, (void (*)(void))type metadata accessor for CRLProto_Point);
}

uint64_t sub_100BF8244(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100C091F4(&qword_101697C90, (void (*)(uint64_t))type metadata accessor for CRLProto_Point);

  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_100BF82C0@<X0>(uint64_t a1@<X8>)
{
  return sub_100C08F10(&qword_10166FCC8, (uint64_t)qword_10171BF68, a1);
}

uint64_t sub_100BF82E4(uint64_t a1)
{
  uint64_t v2 = sub_100C091F4(&qword_101689E10, (void (*)(uint64_t))type metadata accessor for CRLProto_Point);

  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_100BF8350()
{
  sub_100C091F4(&qword_101689E10, (void (*)(uint64_t))type metadata accessor for CRLProto_Point);

  return Message.hash(into:)();
}

uint64_t sub_100BF83CC(float *a1, float *a2)
{
  return sub_100C15E1C(a1, a2, type metadata accessor for CRLProto_Point) & 1;
}

uint64_t sub_100BF83FC()
{
  uint64_t v0 = type metadata accessor for _NameMap();
  sub_100568B28(v0, qword_10171BF80);
  sub_100556B74(v0, (uint64_t)qword_10171BF80);
  sub_1005057FC(&qword_101697C78);
  uint64_t v1 = (int *)(sub_1005057FC(&qword_101697C80) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_10117D8C0;
  uint64_t v5 = (void *)(v4 + v3);
  unint64_t v6 = v4 + v3 + v1[14];
  *uint64_t v5 = 1;
  *(void *)unint64_t v6 = "width";
  *(void *)(v6 + 8) = 5;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = enum case for _NameMap.NameDescription.same(_:);
  uint64_t v8 = type metadata accessor for _NameMap.NameDescription();
  uint64_t v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  uint64_t v10 = (char *)v5 + v2 + v1[14];
  *(void *)((char *)v5 + v2) = 2;
  *(void *)uint64_t v10 = "height";
  *((void *)v10 + 1) = 6;
  v10[16] = 2;
  v9();
  return _NameMap.init(dictionaryLiteral:)();
}

uint64_t sub_100BF85B4()
{
  uint64_t result = dispatch thunk of Decoder.nextFieldNumber()();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      if (result == 2 || result == 1) {
        dispatch thunk of Decoder.decodeSingularFloatField(value:)();
      }
      uint64_t result = dispatch thunk of Decoder.nextFieldNumber()();
    }
  }
  return result;
}

uint64_t sub_100BF8648(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void))
{
  if (*v4 == 0.0 || (uint64_t result = dispatch thunk of Visitor.visitSingularFloatField(value:fieldNumber:)(), !v5))
  {
    if (v4[1] == 0.0 || (uint64_t result = dispatch thunk of Visitor.visitSingularFloatField(value:fieldNumber:)(), !v5))
    {
      a4(0);
      return UnknownStorage.traverse<A>(visitor:)();
    }
  }
  return result;
}

uint64_t sub_100BF8720@<X0>(void *a1@<X8>)
{
  *a1 = 0;
  return UnknownStorage.init()();
}

uint64_t sub_100BF8744()
{
  return 0x6F746F72504C5243;
}

uint64_t sub_100BF8768(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100BF8648(a1, a2, a3, (void (*)(void))type metadata accessor for CRLProto_Size);
}

uint64_t sub_100BF8794(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100C091F4(&qword_101697C98, (void (*)(uint64_t))type metadata accessor for CRLProto_Size);

  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_100BF8810@<X0>(uint64_t a1@<X8>)
{
  return sub_100C08F10(&qword_10166FCD0, (uint64_t)qword_10171BF80, a1);
}

uint64_t sub_100BF8834(uint64_t a1)
{
  uint64_t v2 = sub_100C091F4(&qword_101689E08, (void (*)(uint64_t))type metadata accessor for CRLProto_Size);

  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_100BF88A0()
{
  sub_100C091F4(&qword_101689E08, (void (*)(uint64_t))type metadata accessor for CRLProto_Size);

  return Message.hash(into:)();
}

uint64_t sub_100BF891C(float *a1, float *a2)
{
  return sub_100C15E1C(a1, a2, type metadata accessor for CRLProto_Size) & 1;
}

uint64_t sub_100BF894C()
{
  uint64_t v0 = type metadata accessor for _NameMap();
  sub_100568B28(v0, qword_10171BF98);
  sub_100556B74(v0, (uint64_t)qword_10171BF98);
  sub_1005057FC(&qword_101697C78);
  uint64_t v1 = (int *)(sub_1005057FC(&qword_101697C80) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_10117E800;
  unint64_t v5 = v4 + v3;
  unint64_t v6 = v4 + v3 + v1[14];
  *(void *)(v4 + v3) = 1;
  *(void *)unint64_t v6 = "x";
  *(void *)(v6 + 8) = 1;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = enum case for _NameMap.NameDescription.same(_:);
  uint64_t v8 = type metadata accessor for _NameMap.NameDescription();
  uint64_t v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  unint64_t v10 = v5 + v2 + v1[14];
  *(void *)(v5 + v2) = 2;
  *(void *)unint64_t v10 = "y";
  *(void *)(v10 + 8) = 1;
  *(unsigned char *)(v10 + 16) = 2;
  v9();
  uint64_t v11 = (void *)(v5 + 2 * v2);
  uint64_t v12 = (char *)v11 + v1[14];
  *uint64_t v11 = 3;
  *(void *)uint64_t v12 = "width";
  *((void *)v12 + 1) = 5;
  v12[16] = 2;
  v9();
  uint64_t v13 = (void *)(v5 + 3 * v2);
  uint64_t v14 = (char *)v13 + v1[14];
  *uint64_t v13 = 4;
  *(void *)uint64_t v14 = "height";
  *((void *)v14 + 1) = 6;
  v14[16] = 2;
  v9();
  return _NameMap.init(dictionaryLiteral:)();
}

uint64_t sub_100BF8B84()
{
  uint64_t result = dispatch thunk of Decoder.nextFieldNumber()();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(result)
      {
        case 1:
        case 2:
        case 3:
        case 4:
          dispatch thunk of Decoder.decodeSingularFloatField(value:)();
          break;
        default:
          break;
      }
      uint64_t result = dispatch thunk of Decoder.nextFieldNumber()();
    }
  }
  return result;
}

uint64_t sub_100BF8C64()
{
  if (*v0 == 0.0 || (uint64_t result = dispatch thunk of Visitor.visitSingularFloatField(value:fieldNumber:)(), !v1))
  {
    if (v0[1] == 0.0 || (uint64_t result = dispatch thunk of Visitor.visitSingularFloatField(value:fieldNumber:)(), !v1))
    {
      if (v0[2] == 0.0 || (uint64_t result = dispatch thunk of Visitor.visitSingularFloatField(value:fieldNumber:)(), !v1))
      {
        if (v0[3] == 0.0 || (uint64_t result = dispatch thunk of Visitor.visitSingularFloatField(value:fieldNumber:)(), !v1))
        {
          type metadata accessor for CRLProto_Rect(0);
          return UnknownStorage.traverse<A>(visitor:)();
        }
      }
    }
  }
  return result;
}

uint64_t sub_100BF8D8C@<X0>(void *a1@<X8>)
{
  *a1 = 0;
  a1[1] = 0;
  return UnknownStorage.init()();
}

uint64_t sub_100BF8DB0()
{
  return 0x6F746F72504C5243;
}

uint64_t sub_100BF8DDC()
{
  return sub_100BF8B84();
}

uint64_t sub_100BF8DF4()
{
  return sub_100BF8C64();
}

uint64_t sub_100BF8E0C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100C091F4(&qword_101697CA0, (void (*)(uint64_t))type metadata accessor for CRLProto_Rect);

  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_100BF8E88@<X0>(uint64_t a1@<X8>)
{
  return sub_100C08F10(&qword_10166FCD8, (uint64_t)qword_10171BF98, a1);
}

uint64_t sub_100BF8EAC(uint64_t a1)
{
  uint64_t v2 = sub_100C091F4(&qword_101689E00, (void (*)(uint64_t))type metadata accessor for CRLProto_Rect);

  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_100BF8F18()
{
  sub_100C091F4(&qword_101689E00, (void (*)(uint64_t))type metadata accessor for CRLProto_Rect);

  return Message.hash(into:)();
}

uint64_t sub_100BF8F98(uint64_t a1)
{
  return sub_100C052D8(a1, qword_10171BFB0, (uint64_t)"elements", 8);
}

uint64_t sub_100BF8FB0()
{
  uint64_t result = dispatch thunk of Decoder.nextFieldNumber()();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      if (result == 1)
      {
        type metadata accessor for CRLProto_Path.Element(0);
        sub_100C091F4(&qword_101697B98, (void (*)(uint64_t))type metadata accessor for CRLProto_Path.Element);
        dispatch thunk of Decoder.decodeRepeatedMessageField<A>(value:)();
      }
      uint64_t result = dispatch thunk of Decoder.nextFieldNumber()();
    }
  }
  return result;
}

uint64_t sub_100BF90A0()
{
  if (!*(void *)(*(void *)v0 + 16)
    || (type metadata accessor for CRLProto_Path.Element(0),
        sub_100C091F4(&qword_101697B98, (void (*)(uint64_t))type metadata accessor for CRLProto_Path.Element),
        uint64_t result = dispatch thunk of Visitor.visitRepeatedMessageField<A>(value:fieldNumber:)(),
        !v1))
  {
    type metadata accessor for CRLProto_Path(0);
    return UnknownStorage.traverse<A>(visitor:)();
  }
  return result;
}

uint64_t sub_100BF918C@<X0>(void *a1@<X8>)
{
  *a1 = _swiftEmptyArrayStorage;
  return UnknownStorage.init()();
}

uint64_t sub_100BF91B8()
{
  return 0x6F746F72504C5243;
}

uint64_t sub_100BF91DC()
{
  return sub_100BF8FB0();
}

uint64_t sub_100BF91F4()
{
  return sub_100BF90A0();
}

uint64_t sub_100BF920C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100C091F4(&qword_101697CA8, (void (*)(uint64_t))type metadata accessor for CRLProto_Path);

  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_100BF9288@<X0>(uint64_t a1@<X8>)
{
  return sub_100C08F10(&qword_10166FCE0, (uint64_t)qword_10171BFB0, a1);
}

uint64_t sub_100BF92AC(uint64_t a1)
{
  uint64_t v2 = sub_100C091F4((unint64_t *)&qword_10168F4A0, (void (*)(uint64_t))type metadata accessor for CRLProto_Path);

  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_100BF9318()
{
  sub_100C091F4((unint64_t *)&qword_10168F4A0, (void (*)(uint64_t))type metadata accessor for CRLProto_Path);

  return Message.hash(into:)();
}

uint64_t sub_100BF9398()
{
  uint64_t v0 = type metadata accessor for _NameMap();
  sub_100568B28(v0, qword_10171BFC8);
  sub_100556B74(v0, (uint64_t)qword_10171BFC8);
  sub_1005057FC(&qword_101697C78);
  uint64_t v1 = (int *)(sub_1005057FC(&qword_101697C80) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_10117E800;
  unint64_t v5 = v4 + v3;
  unint64_t v6 = v4 + v3 + v1[14];
  *(void *)(v4 + v3) = 0;
  *(void *)unint64_t v6 = "moveTo";
  *(void *)(v6 + 8) = 6;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = enum case for _NameMap.NameDescription.same(_:);
  uint64_t v8 = type metadata accessor for _NameMap.NameDescription();
  uint64_t v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  unint64_t v10 = v5 + v2 + v1[14];
  *(void *)(v5 + v2) = 1;
  *(void *)unint64_t v10 = "lineTo";
  *(void *)(v10 + 8) = 6;
  *(unsigned char *)(v10 + 16) = 2;
  v9();
  uint64_t v11 = (void *)(v5 + 2 * v2);
  uint64_t v12 = (char *)v11 + v1[14];
  *uint64_t v11 = 2;
  *(void *)uint64_t v12 = "curveTo";
  *((void *)v12 + 1) = 7;
  v12[16] = 2;
  v9();
  uint64_t v13 = (void *)(v5 + 3 * v2);
  uint64_t v14 = (char *)v13 + v1[14];
  *uint64_t v13 = 3;
  *(void *)uint64_t v14 = "close";
  *((void *)v14 + 1) = 5;
  v14[16] = 2;
  v9();
  return _NameMap.init(dictionaryLiteral:)();
}

uint64_t sub_100BF95CC@<X0>(uint64_t a1@<X8>)
{
  return sub_100C08F10(&qword_10166FCE8, (uint64_t)qword_10171BFC8, a1);
}

void sub_100BF95F0()
{
  strcpy((char *)v1, "CRLProto.Path");
  HIWORD(v1[1]) = -4864;
  v0._countAndFlagsBits = 0x746E656D656C452ELL;
  v0._object = (void *)0xE800000000000000;
  String.append(_:)(v0);
  qword_10171BFE0 = v1[0];
  *(void *)algn_10171BFE8 = v1[1];
}

uint64_t sub_100BF9664()
{
  uint64_t v0 = type metadata accessor for _NameMap();
  sub_100568B28(v0, qword_10171BFF0);
  sub_100556B74(v0, (uint64_t)qword_10171BFF0);
  sub_1005057FC(&qword_101697C78);
  uint64_t v1 = (int *)(sub_1005057FC(&qword_101697C80) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_10117E800;
  unint64_t v5 = v4 + v3;
  unint64_t v6 = v4 + v3 + v1[14];
  *(void *)(v4 + v3) = 1;
  *(void *)unint64_t v6 = "type";
  *(void *)(v6 + 8) = 4;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = enum case for _NameMap.NameDescription.same(_:);
  uint64_t v8 = type metadata accessor for _NameMap.NameDescription();
  uint64_t v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  unint64_t v10 = v5 + v2 + v1[14];
  *(void *)(v5 + v2) = 2;
  *(void *)unint64_t v10 = "endPoint";
  *(void *)(v10 + 8) = 8;
  *(unsigned char *)(v10 + 16) = 2;
  v9();
  uint64_t v11 = (void *)(v5 + 2 * v2);
  uint64_t v12 = (char *)v11 + v1[14];
  *uint64_t v11 = 3;
  *(void *)uint64_t v12 = "controlPoint1";
  *((void *)v12 + 1) = 13;
  v12[16] = 2;
  v9();
  uint64_t v13 = (void *)(v5 + 3 * v2);
  uint64_t v14 = (char *)v13 + v1[14];
  *uint64_t v13 = 4;
  *(void *)uint64_t v14 = "controlPoint2";
  *((void *)v14 + 1) = 13;
  v14[16] = 2;
  v9();
  return _NameMap.init(dictionaryLiteral:)();
}

uint64_t sub_100BF98A4()
{
  uint64_t result = dispatch thunk of Decoder.nextFieldNumber()();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(result)
      {
        case 1:
          sub_100C1694C();
          dispatch thunk of Decoder.decodeSingularEnumField<A>(value:)();
          break;
        case 2:
        case 3:
        case 4:
          dispatch thunk of Decoder.decodeSingularBytesField(value:)();
          break;
        default:
          break;
      }
      uint64_t result = dispatch thunk of Decoder.nextFieldNumber()();
    }
  }
  return result;
}

uint64_t sub_100BF99D4()
{
  if (!*v0
    || (sub_100C1694C(), uint64_t result = dispatch thunk of Visitor.visitSingularEnumField<A>(value:fieldNumber:)(), !v1))
  {
    uint64_t v3 = v0[2];
    unint64_t v4 = v0[3];
    switch(v4 >> 62)
    {
      case 1uLL:
        if ((int)v3 != v3 >> 32) {
          goto LABEL_9;
        }
        goto LABEL_10;
      case 2uLL:
        if (*(void *)(v3 + 16) != *(void *)(v3 + 24)) {
          goto LABEL_9;
        }
        goto LABEL_10;
      case 3uLL:
        goto LABEL_10;
      default:
        if ((v4 & 0xFF000000000000) == 0) {
          goto LABEL_10;
        }
LABEL_9:
        uint64_t result = dispatch thunk of Visitor.visitSingularBytesField(value:fieldNumber:)();
        if (!v1)
        {
LABEL_10:
          uint64_t v5 = v0[4];
          unint64_t v6 = v0[5];
          switch(v6 >> 62)
          {
            case 1uLL:
              if ((int)v5 != v5 >> 32) {
                goto LABEL_16;
              }
              goto LABEL_17;
            case 2uLL:
              if (*(void *)(v5 + 16) != *(void *)(v5 + 24)) {
                goto LABEL_16;
              }
              goto LABEL_17;
            case 3uLL:
              goto LABEL_17;
            default:
              if ((v6 & 0xFF000000000000) == 0) {
                goto LABEL_17;
              }
LABEL_16:
              uint64_t result = dispatch thunk of Visitor.visitSingularBytesField(value:fieldNumber:)();
              if (!v1)
              {
LABEL_17:
                uint64_t v7 = v0[6];
                unint64_t v8 = v0[7];
                switch(v8 >> 62)
                {
                  case 1uLL:
                    if ((int)v7 != v7 >> 32) {
                      goto LABEL_23;
                    }
                    goto LABEL_24;
                  case 2uLL:
                    if (*(void *)(v7 + 16) != *(void *)(v7 + 24)) {
                      goto LABEL_23;
                    }
                    goto LABEL_24;
                  case 3uLL:
                    goto LABEL_24;
                  default:
                    if ((v8 & 0xFF000000000000) == 0) {
                      goto LABEL_24;
                    }
LABEL_23:
                    uint64_t result = dispatch thunk of Visitor.visitSingularBytesField(value:fieldNumber:)();
                    if (!v1)
                    {
LABEL_24:
                      type metadata accessor for CRLProto_Path.Element(0);
                      uint64_t result = UnknownStorage.traverse<A>(visitor:)();
                    }
                    break;
                }
              }
              break;
          }
        }
        break;
    }
  }
  return result;
}

uint64_t sub_100BF9C1C@<X0>(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(unsigned char *)(a1 + 8) = 1;
  *(_OWORD *)(a1 + 16) = xmmword_101180360;
  *(_OWORD *)(a1 + 32) = xmmword_101180360;
  *(_OWORD *)(a1 + 48) = xmmword_101180360;
  return UnknownStorage.init()();
}

uint64_t sub_100BF9C58(uint64_t a1, uint64_t a2)
{
  return sub_100C02314(a1, a2, &qword_10166FCF0, &qword_10171BFE0);
}

uint64_t sub_100BF9C80()
{
  return sub_100BF98A4();
}

uint64_t sub_100BF9C98()
{
  return sub_100BF99D4();
}

uint64_t sub_100BF9CB0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100C091F4(&qword_101697CB0, (void (*)(uint64_t))type metadata accessor for CRLProto_Path.Element);

  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_100BF9D2C@<X0>(uint64_t a1@<X8>)
{
  return sub_100C08F10(&qword_10166FCF8, (uint64_t)qword_10171BFF0, a1);
}

uint64_t sub_100BF9D50(uint64_t a1)
{
  uint64_t v2 = sub_100C091F4(&qword_101697B98, (void (*)(uint64_t))type metadata accessor for CRLProto_Path.Element);

  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_100BF9DBC()
{
  sub_100C091F4(&qword_101697B98, (void (*)(uint64_t))type metadata accessor for CRLProto_Path.Element);

  return Message.hash(into:)();
}

uint64_t sub_100BF9E3C()
{
  uint64_t v0 = type metadata accessor for _NameMap();
  sub_100568B28(v0, qword_10171C008);
  sub_100556B74(v0, (uint64_t)qword_10171C008);
  sub_1005057FC(&qword_101697C78);
  uint64_t v1 = (int *)(sub_1005057FC(&qword_101697C80) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v24 = swift_allocObject();
  *(_OWORD *)(v24 + 16) = xmmword_1011A8170;
  unint64_t v4 = v24 + v3;
  unint64_t v5 = v24 + v3 + v1[14];
  *(void *)(v24 + v3) = 1;
  *(void *)unint64_t v5 = "strokePoints";
  *(void *)(v5 + 8) = 12;
  *(unsigned char *)(v5 + 16) = 2;
  uint64_t v6 = enum case for _NameMap.NameDescription.same(_:);
  uint64_t v7 = type metadata accessor for _NameMap.NameDescription();
  unint64_t v8 = *(void (**)(void))(*(void *)(v7 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v8)(v5, v6, v7);
  unint64_t v9 = v4 + v2 + v1[14];
  *(void *)(v4 + v2) = 2;
  *(void *)unint64_t v9 = "maskPath";
  *(void *)(v9 + 8) = 8;
  *(unsigned char *)(v9 + 16) = 2;
  v8();
  unint64_t v10 = (void *)(v4 + 2 * v2);
  uint64_t v11 = (char *)v10 + v1[14];
  *unint64_t v10 = 3;
  *(void *)uint64_t v11 = "randomSeed";
  *((void *)v11 + 1) = 10;
  unsigned char v11[16] = 2;
  v8();
  uint64_t v12 = (void *)(v4 + 3 * v2);
  uint64_t v13 = (char *)v12 + v1[14];
  *uint64_t v12 = 4;
  *(void *)uint64_t v13 = "creationDate";
  *((void *)v13 + 1) = 12;
  v13[16] = 2;
  v8();
  uint64_t v14 = (void *)(v4 + 4 * v2);
  uint64_t v15 = (char *)v14 + v1[14];
  *uint64_t v14 = 5;
  *(void *)uint64_t v15 = "renderScaleX";
  *((void *)v15 + 1) = 12;
  unsigned char v15[16] = 2;
  v8();
  uint64_t v16 = (void *)(v4 + 5 * v2);
  int v17 = (char *)v16 + v1[14];
  *uint64_t v16 = 6;
  *(void *)int v17 = "renderScaleY";
  *((void *)v17 + 1) = 12;
  v17[16] = 2;
  v8();
  uint64_t v18 = (void *)(v4 + 6 * v2);
  unint64_t v19 = (char *)v18 + v1[14];
  *uint64_t v18 = 7;
  *(void *)unint64_t v19 = "anchorPointForTexture";
  *((void *)v19 + 1) = 21;
  v19[16] = 2;
  v8();
  uint64_t v20 = (void *)(v4 + 7 * v2);
  unint64_t v21 = (char *)v20 + v1[14];
  *uint64_t v20 = 8;
  *(void *)unint64_t v21 = "renderGroupID";
  *((void *)v21 + 1) = 13;
  v21[16] = 2;
  v8();
  uint64_t v22 = v4 + 8 * v2 + v1[14];
  *(void *)(v4 + 8 * v2) = 9;
  *(void *)uint64_t v22 = "shouldSolveMath";
  *(void *)(v22 + 8) = 15;
  *(unsigned char *)(v22 + 16) = 2;
  v8();
  return _NameMap.init(dictionaryLiteral:)();
}

uint64_t sub_100BFA1B4()
{
  uint64_t result = dispatch thunk of Decoder.nextFieldNumber()();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(result)
      {
        case 1:
          type metadata accessor for CRLProto_PKStrokePathData.StrokePoint(0);
          sub_100C091F4(&qword_101697B60, (void (*)(uint64_t))type metadata accessor for CRLProto_PKStrokePathData.StrokePoint);
          dispatch thunk of Decoder.decodeRepeatedMessageField<A>(value:)();
          break;
        case 2:
          sub_100BFA40C();
          break;
        case 3:
          type metadata accessor for CRLProto_PKStrokePathData(0);
          dispatch thunk of Decoder.decodeSingularUInt32Field(value:)();
          break;
        case 4:
          sub_100BFA4BC();
          break;
        case 5:
        case 6:
          type metadata accessor for CRLProto_PKStrokePathData(0);
          dispatch thunk of Decoder.decodeSingularFloatField(value:)();
          break;
        case 7:
          sub_100BFA56C();
          break;
        case 8:
          sub_100BFA61C();
          break;
        case 9:
          type metadata accessor for CRLProto_PKStrokePathData(0);
          dispatch thunk of Decoder.decodeSingularBoolField(value:)();
          break;
        default:
          break;
      }
      uint64_t result = dispatch thunk of Decoder.nextFieldNumber()();
    }
  }
  return result;
}

uint64_t sub_100BFA40C()
{
  return dispatch thunk of Decoder.decodeSingularMessageField<A>(value:)();
}

uint64_t sub_100BFA4BC()
{
  return dispatch thunk of Decoder.decodeSingularMessageField<A>(value:)();
}

uint64_t sub_100BFA56C()
{
  return dispatch thunk of Decoder.decodeSingularMessageField<A>(value:)();
}

uint64_t sub_100BFA61C()
{
  return dispatch thunk of Decoder.decodeSingularMessageField<A>(value:)();
}

uint64_t sub_100BFA6CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (!*(void *)(*(void *)v3 + 16)
    || (type metadata accessor for CRLProto_PKStrokePathData.StrokePoint(0),
        sub_100C091F4(&qword_101697B60, (void (*)(uint64_t))type metadata accessor for CRLProto_PKStrokePathData.StrokePoint), uint64_t result = dispatch thunk of Visitor.visitRepeatedMessageField<A>(value:fieldNumber:)(), !v4))
  {
    uint64_t result = sub_100BFA8B8(v3, a1, a2, a3);
    if (!v4)
    {
      sub_100BFAAB0(v3);
      sub_100BFAB28(v3, a1, a2, a3);
      sub_100BFAD20(v3);
      sub_100BFAD98(v3);
      sub_100BFAE10(v3, a1, a2, a3);
      sub_100BFB008(v3, a1, a2, a3);
      sub_100BFB200(v3);
      type metadata accessor for CRLProto_PKStrokePathData(0);
      return UnknownStorage.traverse<A>(visitor:)();
    }
  }
  return result;
}

uint64_t sub_100BFA8B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v16[1] = a4;
  uint64_t v5 = sub_1005057FC(&qword_1016930D8);
  __chkstk_darwin(v5 - 8, v6);
  unint64_t v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for CRLProto_Path(0);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9, v11);
  uint64_t v13 = (char *)v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for CRLProto_PKStrokePathData(0);
  sub_100522E9C(a1 + *(int *)(v14 + 24), (uint64_t)v8, &qword_1016930D8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1) {
    return sub_100522F00((uint64_t)v8, &qword_1016930D8);
  }
  sub_100C169A0((uint64_t)v8, (uint64_t)v13, type metadata accessor for CRLProto_Path);
  sub_100C091F4((unint64_t *)&qword_10168F4A0, (void (*)(uint64_t))type metadata accessor for CRLProto_Path);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)();
  return sub_100C16A08((uint64_t)v13, type metadata accessor for CRLProto_Path);
}

uint64_t sub_100BFAAB0(uint64_t a1)
{
  uint64_t result = type metadata accessor for CRLProto_PKStrokePathData(0);
  if ((*(unsigned char *)(a1 + *(int *)(result + 28) + 4) & 1) == 0) {
    return dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:)();
  }
  return result;
}

uint64_t sub_100BFAB28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v16[1] = a4;
  uint64_t v5 = sub_1005057FC(&qword_1016930C8);
  __chkstk_darwin(v5 - 8, v6);
  unint64_t v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for CRLProto_Date(0);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9, v11);
  uint64_t v13 = (char *)v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for CRLProto_PKStrokePathData(0);
  sub_100522E9C(a1 + *(int *)(v14 + 32), (uint64_t)v8, &qword_1016930C8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1) {
    return sub_100522F00((uint64_t)v8, &qword_1016930C8);
  }
  sub_100C169A0((uint64_t)v8, (uint64_t)v13, type metadata accessor for CRLProto_Date);
  sub_100C091F4(&qword_101697C18, (void (*)(uint64_t))type metadata accessor for CRLProto_Date);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)();
  return sub_100C16A08((uint64_t)v13, type metadata accessor for CRLProto_Date);
}

uint64_t sub_100BFAD20(uint64_t a1)
{
  uint64_t result = type metadata accessor for CRLProto_PKStrokePathData(0);
  if ((*(unsigned char *)(a1 + *(int *)(result + 36) + 4) & 1) == 0) {
    return dispatch thunk of Visitor.visitSingularFloatField(value:fieldNumber:)();
  }
  return result;
}

uint64_t sub_100BFAD98(uint64_t a1)
{
  uint64_t result = type metadata accessor for CRLProto_PKStrokePathData(0);
  if ((*(unsigned char *)(a1 + *(int *)(result + 40) + 4) & 1) == 0) {
    return dispatch thunk of Visitor.visitSingularFloatField(value:fieldNumber:)();
  }
  return result;
}

uint64_t sub_100BFAE10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v16[1] = a4;
  uint64_t v5 = sub_1005057FC(&qword_10168E570);
  __chkstk_darwin(v5 - 8, v6);
  unint64_t v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for CRLProto_Point(0);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9, v11);
  uint64_t v13 = (char *)v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for CRLProto_PKStrokePathData(0);
  sub_100522E9C(a1 + *(int *)(v14 + 44), (uint64_t)v8, &qword_10168E570);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1) {
    return sub_100522F00((uint64_t)v8, &qword_10168E570);
  }
  sub_100C169A0((uint64_t)v8, (uint64_t)v13, type metadata accessor for CRLProto_Point);
  sub_100C091F4(&qword_101689E10, (void (*)(uint64_t))type metadata accessor for CRLProto_Point);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)();
  return sub_100C16A08((uint64_t)v13, type metadata accessor for CRLProto_Point);
}

uint64_t sub_100BFB008(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v16[1] = a4;
  uint64_t v5 = sub_1005057FC((uint64_t *)&unk_101674160);
  __chkstk_darwin(v5 - 8, v6);
  unint64_t v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for CRLProto_Data(0);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9, v11);
  uint64_t v13 = (char *)v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for CRLProto_PKStrokePathData(0);
  sub_100522E9C(a1 + *(int *)(v14 + 48), (uint64_t)v8, (uint64_t *)&unk_101674160);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1) {
    return sub_100522F00((uint64_t)v8, (uint64_t *)&unk_101674160);
  }
  sub_100C169A0((uint64_t)v8, (uint64_t)v13, type metadata accessor for CRLProto_Data);
  sub_100C091F4(&qword_101697C38, (void (*)(uint64_t))type metadata accessor for CRLProto_Data);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)();
  return sub_100C16A08((uint64_t)v13, type metadata accessor for CRLProto_Data);
}

uint64_t sub_100BFB200(uint64_t a1)
{
  uint64_t result = type metadata accessor for CRLProto_PKStrokePathData(0);
  if (*(unsigned char *)(a1 + *(int *)(result + 52)) != 2) {
    return dispatch thunk of Visitor.visitSingularBoolField(value:fieldNumber:)();
  }
  return result;
}

uint64_t sub_100BFB278@<X0>(int *a1@<X0>, void *a2@<X8>)
{
  *a2 = _swiftEmptyArrayStorage;
  UnknownStorage.init()();
  uint64_t v4 = (char *)a2 + a1[6];
  uint64_t v5 = type metadata accessor for CRLProto_Path(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v4, 1, 1, v5);
  uint64_t v6 = a1[8];
  uint64_t v7 = (char *)a2 + a1[7];
  *(_DWORD *)uint64_t v7 = 0;
  v7[4] = 1;
  unint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for CRLProto_Date(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v8, 1, 1, v9);
  uint64_t v10 = a1[10];
  uint64_t v11 = (char *)a2 + a1[9];
  *(_DWORD *)uint64_t v11 = 0;
  v11[4] = 1;
  uint64_t v12 = (char *)a2 + v10;
  *(_DWORD *)uint64_t v12 = 0;
  v12[4] = 1;
  uint64_t v13 = (char *)a2 + a1[11];
  uint64_t v14 = type metadata accessor for CRLProto_Point(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v13, 1, 1, v14);
  uint64_t v15 = (char *)a2 + a1[12];
  uint64_t v16 = type metadata accessor for CRLProto_Data(0);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v15, 1, 1, v16);
  *((unsigned char *)a2 + a1[13]) = 2;
  return result;
}

unint64_t sub_100BFB414()
{
  return 0xD000000000000019;
}

uint64_t sub_100BFB430()
{
  return sub_100BFA1B4();
}

uint64_t sub_100BFB448(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100BFA6CC(a1, a2, a3);
}

uint64_t sub_100BFB460(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100C091F4(&qword_101697CC0, (void (*)(uint64_t))type metadata accessor for CRLProto_PKStrokePathData);

  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_100BFB4DC@<X0>(uint64_t a1@<X8>)
{
  return sub_100C08F10(&qword_10166FD00, (uint64_t)qword_10171C008, a1);
}

uint64_t sub_100BFB500(uint64_t a1)
{
  uint64_t v2 = sub_100C091F4(&qword_1016930D0, (void (*)(uint64_t))type metadata accessor for CRLProto_PKStrokePathData);

  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_100BFB56C()
{
  sub_100C091F4(&qword_1016930D0, (void (*)(uint64_t))type metadata accessor for CRLProto_PKStrokePathData);

  return Message.hash(into:)();
}

void sub_100BFB5EC()
{
  v0._countAndFlagsBits = 0x50656B6F7274532ELL;
  v0._object = (void *)0xEC000000746E696FLL;
  String.append(_:)(v0);
  qword_10171C020 = 0xD000000000000019;
  *(void *)algn_10171C028 = 0x800000010127A970;
}

uint64_t sub_100BFB660()
{
  uint64_t v0 = type metadata accessor for _NameMap();
  sub_100568B28(v0, qword_10171C030);
  sub_100556B74(v0, (uint64_t)qword_10171C030);
  sub_1005057FC(&qword_101697C78);
  uint64_t v1 = (int *)(sub_1005057FC(&qword_101697C80) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v23 = swift_allocObject();
  *(_OWORD *)(v23 + 16) = xmmword_1011ABAB0;
  unint64_t v4 = v23 + v3;
  unint64_t v5 = v23 + v3 + v1[14];
  *(void *)(v23 + v3) = 1;
  *(void *)unint64_t v5 = "altitude";
  *(void *)(v5 + 8) = 8;
  *(unsigned char *)(v5 + 16) = 2;
  uint64_t v6 = enum case for _NameMap.NameDescription.same(_:);
  uint64_t v7 = type metadata accessor for _NameMap.NameDescription();
  unint64_t v8 = *(void (**)(void))(*(void *)(v7 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v8)(v5, v6, v7);
  unint64_t v9 = v4 + v2 + v1[14];
  *(void *)(v4 + v2) = 2;
  *(void *)unint64_t v9 = "azimuth";
  *(void *)(v9 + 8) = 7;
  *(unsigned char *)(v9 + 16) = 2;
  v8();
  uint64_t v10 = (void *)(v4 + 2 * v2);
  uint64_t v11 = (char *)v10 + v1[14];
  *uint64_t v10 = 3;
  *(void *)uint64_t v11 = "force";
  *((void *)v11 + 1) = 5;
  unsigned char v11[16] = 2;
  v8();
  uint64_t v12 = (void *)(v4 + 3 * v2);
  uint64_t v13 = (char *)v12 + v1[14];
  *uint64_t v12 = 4;
  *(void *)uint64_t v13 = "opacity";
  *((void *)v13 + 1) = 7;
  v13[16] = 2;
  v8();
  uint64_t v14 = (void *)(v4 + 4 * v2);
  uint64_t v15 = (char *)v14 + v1[14];
  *uint64_t v14 = 5;
  *(void *)uint64_t v15 = "size";
  *((void *)v15 + 1) = 4;
  unsigned char v15[16] = 2;
  v8();
  uint64_t v16 = (void *)(v4 + 5 * v2);
  int v17 = (char *)v16 + v1[14];
  *uint64_t v16 = 6;
  *(void *)int v17 = "timeOffset";
  *((void *)v17 + 1) = 10;
  v17[16] = 2;
  v8();
  uint64_t v18 = (void *)(v4 + 6 * v2);
  unint64_t v19 = (char *)v18 + v1[14];
  *uint64_t v18 = 7;
  *(void *)unint64_t v19 = "radius2";
  *((void *)v19 + 1) = 7;
  v19[16] = 2;
  v8();
  uint64_t v20 = (void *)(v4 + 7 * v2);
  unint64_t v21 = (char *)v20 + v1[14];
  *uint64_t v20 = 8;
  *(void *)unint64_t v21 = "edgeWidth";
  *((void *)v21 + 1) = 9;
  v21[16] = 2;
  v8();
  return _NameMap.init(dictionaryLiteral:)();
}

uint64_t sub_100BFB994()
{
  uint64_t result = dispatch thunk of Decoder.nextFieldNumber()();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(result)
      {
        case 1:
        case 2:
        case 3:
        case 4:
        case 5:
        case 6:
        case 7:
        case 8:
          dispatch thunk of Decoder.decodeSingularBytesField(value:)();
          break;
        default:
          break;
      }
      uint64_t result = dispatch thunk of Decoder.nextFieldNumber()();
    }
  }
  return result;
}

uint64_t sub_100BFBACC()
{
  uint64_t v2 = *v0;
  unint64_t v3 = v0[1];
  switch(v3 >> 62)
  {
    case 1uLL:
      if ((int)v2 != v2 >> 32) {
        goto LABEL_7;
      }
      goto LABEL_8;
    case 2uLL:
      if (*(void *)(v2 + 16) != *(void *)(v2 + 24)) {
        goto LABEL_7;
      }
      goto LABEL_8;
    case 3uLL:
      goto LABEL_8;
    default:
      if ((v3 & 0xFF000000000000) == 0) {
        goto LABEL_8;
      }
LABEL_7:
      uint64_t result = dispatch thunk of Visitor.visitSingularBytesField(value:fieldNumber:)();
      if (!v1)
      {
LABEL_8:
        uint64_t v5 = v0[2];
        unint64_t v6 = v0[3];
        switch(v6 >> 62)
        {
          case 1uLL:
            if ((int)v5 != v5 >> 32) {
              goto LABEL_14;
            }
            goto LABEL_15;
          case 2uLL:
            if (*(void *)(v5 + 16) != *(void *)(v5 + 24)) {
              goto LABEL_14;
            }
            goto LABEL_15;
          case 3uLL:
            goto LABEL_15;
          default:
            if ((v6 & 0xFF000000000000) == 0) {
              goto LABEL_15;
            }
LABEL_14:
            uint64_t result = dispatch thunk of Visitor.visitSingularBytesField(value:fieldNumber:)();
            if (!v1)
            {
LABEL_15:
              uint64_t v7 = v0[4];
              unint64_t v8 = v0[5];
              switch(v8 >> 62)
              {
                case 1uLL:
                  if ((int)v7 != v7 >> 32) {
                    goto LABEL_21;
                  }
                  goto LABEL_22;
                case 2uLL:
                  if (*(void *)(v7 + 16) != *(void *)(v7 + 24)) {
                    goto LABEL_21;
                  }
                  goto LABEL_22;
                case 3uLL:
                  goto LABEL_22;
                default:
                  if ((v8 & 0xFF000000000000) == 0) {
                    goto LABEL_22;
                  }
LABEL_21:
                  uint64_t result = dispatch thunk of Visitor.visitSingularBytesField(value:fieldNumber:)();
                  if (!v1)
                  {
LABEL_22:
                    uint64_t v9 = v0[6];
                    unint64_t v10 = v0[7];
                    switch(v10 >> 62)
                    {
                      case 1uLL:
                        if ((int)v9 != v9 >> 32) {
                          goto LABEL_28;
                        }
                        goto LABEL_29;
                      case 2uLL:
                        if (*(void *)(v9 + 16) != *(void *)(v9 + 24)) {
                          goto LABEL_28;
                        }
                        goto LABEL_29;
                      case 3uLL:
                        goto LABEL_29;
                      default:
                        if ((v10 & 0xFF000000000000) == 0) {
                          goto LABEL_29;
                        }
LABEL_28:
                        uint64_t result = dispatch thunk of Visitor.visitSingularBytesField(value:fieldNumber:)();
                        if (!v1)
                        {
LABEL_29:
                          uint64_t v11 = v0[8];
                          unint64_t v12 = v0[9];
                          switch(v12 >> 62)
                          {
                            case 1uLL:
                              if ((int)v11 != v11 >> 32) {
                                goto LABEL_35;
                              }
                              goto LABEL_36;
                            case 2uLL:
                              if (*(void *)(v11 + 16) != *(void *)(v11 + 24)) {
                                goto LABEL_35;
                              }
                              goto LABEL_36;
                            case 3uLL:
                              goto LABEL_36;
                            default:
                              if ((v12 & 0xFF000000000000) == 0) {
                                goto LABEL_36;
                              }
LABEL_35:
                              uint64_t result = dispatch thunk of Visitor.visitSingularBytesField(value:fieldNumber:)();
                              if (!v1)
                              {
LABEL_36:
                                uint64_t v13 = v0[10];
                                unint64_t v14 = v0[11];
                                switch(v14 >> 62)
                                {
                                  case 1uLL:
                                    if ((int)v13 != v13 >> 32) {
                                      goto LABEL_42;
                                    }
                                    goto LABEL_43;
                                  case 2uLL:
                                    if (*(void *)(v13 + 16) != *(void *)(v13 + 24)) {
                                      goto LABEL_42;
                                    }
                                    goto LABEL_43;
                                  case 3uLL:
                                    goto LABEL_43;
                                  default:
                                    if ((v14 & 0xFF000000000000) == 0) {
                                      goto LABEL_43;
                                    }
LABEL_42:
                                    uint64_t result = dispatch thunk of Visitor.visitSingularBytesField(value:fieldNumber:)();
                                    if (!v1)
                                    {
LABEL_43:
                                      uint64_t v15 = v0[12];
                                      unint64_t v16 = v0[13];
                                      switch(v16 >> 62)
                                      {
                                        case 1uLL:
                                          if ((int)v15 != v15 >> 32) {
                                            goto LABEL_49;
                                          }
                                          goto LABEL_50;
                                        case 2uLL:
                                          if (*(void *)(v15 + 16) != *(void *)(v15 + 24)) {
                                            goto LABEL_49;
                                          }
                                          goto LABEL_50;
                                        case 3uLL:
                                          goto LABEL_50;
                                        default:
                                          if ((v16 & 0xFF000000000000) == 0) {
                                            goto LABEL_50;
                                          }
LABEL_49:
                                          uint64_t result = dispatch thunk of Visitor.visitSingularBytesField(value:fieldNumber:)();
                                          if (!v1)
                                          {
LABEL_50:
                                            uint64_t v17 = v0[14];
                                            unint64_t v18 = v0[15];
                                            switch(v18 >> 62)
                                            {
                                              case 1uLL:
                                                if ((int)v17 != v17 >> 32) {
                                                  goto LABEL_56;
                                                }
                                                goto LABEL_57;
                                              case 2uLL:
                                                if (*(void *)(v17 + 16) != *(void *)(v17 + 24)) {
                                                  goto LABEL_56;
                                                }
                                                goto LABEL_57;
                                              case 3uLL:
                                                goto LABEL_57;
                                              default:
                                                if ((v18 & 0xFF000000000000) == 0) {
                                                  goto LABEL_57;
                                                }
LABEL_56:
                                                uint64_t result = dispatch thunk of Visitor.visitSingularBytesField(value:fieldNumber:)();
                                                if (!v1)
                                                {
LABEL_57:
                                                  type metadata accessor for CRLProto_PKStrokePathData.StrokePoint(0);
                                                  uint64_t result = UnknownStorage.traverse<A>(visitor:)();
                                                }
                                                break;
                                            }
                                          }
                                          break;
                                      }
                                    }
                                    break;
                                }
                              }
                              break;
                          }
                        }
                        break;
                    }
                  }
                  break;
              }
            }
            break;
        }
      }
      return result;
  }
}

uint64_t sub_100BFBF3C@<X0>(_OWORD *a1@<X8>)
{
  *a1 = xmmword_101180360;
  a1[1] = xmmword_101180360;
  a1[2] = xmmword_101180360;
  a1[3] = xmmword_101180360;
  a1[4] = xmmword_101180360;
  a1[5] = xmmword_101180360;
  a1[6] = xmmword_101180360;
  a1[7] = xmmword_101180360;
  return UnknownStorage.init()();
}

uint64_t sub_100BFBF74(uint64_t a1, uint64_t a2)
{
  return sub_100C02314(a1, a2, &qword_10166FD08, &qword_10171C020);
}

uint64_t sub_100BFBFA4()
{
  return sub_100BFB994();
}

uint64_t sub_100BFBFBC()
{
  return sub_100BFBACC();
}

uint64_t sub_100BFBFD4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100C091F4(&qword_101697CE0, (void (*)(uint64_t))type metadata accessor for CRLProto_PKStrokePathData.StrokePoint);

  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_100BFC050@<X0>(uint64_t a1@<X8>)
{
  return sub_100C08F10(&qword_10166FD10, (uint64_t)qword_10171C030, a1);
}

uint64_t sub_100BFC074(uint64_t a1)
{
  uint64_t v2 = sub_100C091F4(&qword_101697B60, (void (*)(uint64_t))type metadata accessor for CRLProto_PKStrokePathData.StrokePoint);

  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_100BFC0E0()
{
  sub_100C091F4(&qword_101697B60, (void (*)(uint64_t))type metadata accessor for CRLProto_PKStrokePathData.StrokePoint);

  return Message.hash(into:)();
}

uint64_t sub_100BFC160()
{
  uint64_t v0 = type metadata accessor for _NameMap();
  sub_100568B28(v0, qword_10171C048);
  sub_100556B74(v0, (uint64_t)qword_10171C048);
  sub_1005057FC(&qword_101697C78);
  uint64_t v1 = (int *)(sub_1005057FC(&qword_101697C80) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v20 = swift_allocObject();
  *(_OWORD *)(v20 + 16) = xmmword_1011807B0;
  unint64_t v4 = v20 + v3 + v1[14];
  *(void *)(v20 + v3) = 1;
  *(void *)unint64_t v4 = "type";
  *(void *)(v4 + 8) = 4;
  *(unsigned char *)(v4 + 16) = 2;
  uint64_t v5 = enum case for _NameMap.NameDescription.same(_:);
  uint64_t v6 = type metadata accessor for _NameMap.NameDescription();
  uint64_t v7 = *(void (**)(void))(*(void *)(v6 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v7)(v4, v5, v6);
  unint64_t v8 = v20 + v3 + v2 + v1[14];
  *(void *)(v20 + v3 + v2) = 2;
  *(void *)unint64_t v8 = "insertionPointCursor";
  *(void *)(v8 + 8) = 20;
  *(unsigned char *)(v8 + 16) = 2;
  v7();
  uint64_t v9 = (void *)(v20 + v3 + 2 * v2);
  unint64_t v10 = (char *)v9 + v1[14];
  *uint64_t v9 = 3;
  *(void *)unint64_t v10 = "rangeSelectionHeadCursor";
  *((void *)v10 + 1) = 24;
  v10[16] = 2;
  v7();
  uint64_t v11 = (void *)(v20 + v3 + 3 * v2);
  unint64_t v12 = (char *)v11 + v1[14];
  *uint64_t v11 = 4;
  *(void *)unint64_t v12 = "rangeSelectionTailCursor";
  *((void *)v12 + 1) = 24;
  v12[16] = 2;
  v7();
  uint64_t v13 = (void *)(v20 + v3 + 4 * v2);
  unint64_t v14 = (char *)v13 + v1[14];
  *uint64_t v13 = 5;
  *(void *)unint64_t v14 = "eolAffinity";
  *((void *)v14 + 1) = 11;
  v14[16] = 2;
  v7();
  uint64_t v15 = (void *)(v20 + v3 + 5 * v2);
  unint64_t v16 = (char *)v15 + v1[14];
  *uint64_t v15 = 6;
  *(void *)unint64_t v16 = "isVisual";
  *((void *)v16 + 1) = 8;
  v16[16] = 2;
  v7();
  uint64_t v17 = (void *)(v20 + v3 + 6 * v2);
  unint64_t v18 = (char *)v17 + v1[14];
  *uint64_t v17 = 7;
  *(void *)unint64_t v18 = "insertionEdge";
  *((void *)v18 + 1) = 13;
  v18[16] = 2;
  v7();
  return _NameMap.init(dictionaryLiteral:)();
}

uint64_t sub_100BFC450(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = v3;
  uint64_t result = dispatch thunk of Decoder.nextFieldNumber()();
  uint64_t v11 = v4;
  if (!v4)
  {
    while ((v10 & 1) == 0)
    {
      switch(result)
      {
        case 1:
          sub_100C16A68();
          uint64_t v12 = v11;
          dispatch thunk of Decoder.decodeSingularEnumField<A>(value:)();
          goto LABEL_11;
        case 2:
          uint64_t v12 = v11;
          sub_100BFC5FC();
          goto LABEL_11;
        case 3:
          uint64_t v12 = v11;
          sub_100C086D4(a1, v5, a2, a3, (void (*)(void))type metadata accessor for CRLProto_TextSelection);
          goto LABEL_11;
        case 4:
          uint64_t v12 = v11;
          sub_100BFC6AC();
          goto LABEL_11;
        case 5:
        case 7:
          type metadata accessor for CRLProto_TextSelection(0);
          uint64_t v12 = v11;
          dispatch thunk of Decoder.decodeSingularUInt32Field(value:)();
          goto LABEL_11;
        case 6:
          type metadata accessor for CRLProto_TextSelection(0);
          uint64_t v12 = v11;
          dispatch thunk of Decoder.decodeSingularBoolField(value:)();
LABEL_11:
          uint64_t v11 = v12;
          break;
        default:
          break;
      }
      uint64_t result = dispatch thunk of Decoder.nextFieldNumber()();
    }
  }
  return result;
}

uint64_t sub_100BFC5FC()
{
  return dispatch thunk of Decoder.decodeSingularMessageField<A>(value:)();
}

uint64_t sub_100BFC6AC()
{
  return dispatch thunk of Decoder.decodeSingularMessageField<A>(value:)();
}

uint64_t sub_100BFC75C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (!*v3
    || (sub_100C16A68(), uint64_t result = dispatch thunk of Visitor.visitSingularEnumField<A>(value:fieldNumber:)(), !v4))
  {
    uint64_t result = sub_100BFC8F0((uint64_t)v3, a1, a2, a3);
    if (!v4)
    {
      sub_100C08A68((uint64_t)v3, a1, a2, a3, (uint64_t (*)(void, __n128))type metadata accessor for CRLProto_TextSelection, 3);
      sub_100BFCAE8((uint64_t)v3, a1, a2, a3);
      sub_100BFCCE0((uint64_t)v3);
      sub_100BFCD58((uint64_t)v3);
      sub_100BFCDD0((uint64_t)v3);
      type metadata accessor for CRLProto_TextSelection(0);
      return UnknownStorage.traverse<A>(visitor:)();
    }
  }
  return result;
}

uint64_t sub_100BFC8F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v16[1] = a4;
  uint64_t v5 = sub_1005057FC((uint64_t *)&unk_101674160);
  __chkstk_darwin(v5 - 8, v6);
  unint64_t v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for CRLProto_Data(0);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9, v11);
  uint64_t v13 = (char *)v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for CRLProto_TextSelection(0);
  sub_100522E9C(a1 + *(int *)(v14 + 24), (uint64_t)v8, (uint64_t *)&unk_101674160);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1) {
    return sub_100522F00((uint64_t)v8, (uint64_t *)&unk_101674160);
  }
  sub_100C169A0((uint64_t)v8, (uint64_t)v13, type metadata accessor for CRLProto_Data);
  sub_100C091F4(&qword_101697C38, (void (*)(uint64_t))type metadata accessor for CRLProto_Data);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)();
  return sub_100C16A08((uint64_t)v13, type metadata accessor for CRLProto_Data);
}

uint64_t sub_100BFCAE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v16[1] = a4;
  uint64_t v5 = sub_1005057FC((uint64_t *)&unk_101674160);
  __chkstk_darwin(v5 - 8, v6);
  unint64_t v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for CRLProto_Data(0);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9, v11);
  uint64_t v13 = (char *)v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for CRLProto_TextSelection(0);
  sub_100522E9C(a1 + *(int *)(v14 + 32), (uint64_t)v8, (uint64_t *)&unk_101674160);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1) {
    return sub_100522F00((uint64_t)v8, (uint64_t *)&unk_101674160);
  }
  sub_100C169A0((uint64_t)v8, (uint64_t)v13, type metadata accessor for CRLProto_Data);
  sub_100C091F4(&qword_101697C38, (void (*)(uint64_t))type metadata accessor for CRLProto_Data);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)();
  return sub_100C16A08((uint64_t)v13, type metadata accessor for CRLProto_Data);
}

uint64_t sub_100BFCCE0(uint64_t a1)
{
  uint64_t result = type metadata accessor for CRLProto_TextSelection(0);
  if ((*(unsigned char *)(a1 + *(int *)(result + 36) + 4) & 1) == 0) {
    return dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:)();
  }
  return result;
}

uint64_t sub_100BFCD58(uint64_t a1)
{
  uint64_t result = type metadata accessor for CRLProto_TextSelection(0);
  if (*(unsigned char *)(a1 + *(int *)(result + 40)) != 2) {
    return dispatch thunk of Visitor.visitSingularBoolField(value:fieldNumber:)();
  }
  return result;
}

uint64_t sub_100BFCDD0(uint64_t a1)
{
  uint64_t result = type metadata accessor for CRLProto_TextSelection(0);
  if ((*(unsigned char *)(a1 + *(int *)(result + 44) + 4) & 1) == 0) {
    return dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:)();
  }
  return result;
}

uint64_t sub_100BFCE48@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = 0;
  *(unsigned char *)(a2 + 8) = 1;
  UnknownStorage.init()();
  uint64_t v4 = a2 + a1[6];
  uint64_t v5 = type metadata accessor for CRLProto_Data(0);
  uint64_t v6 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56);
  v6(v4, 1, 1, v5);
  v6(a2 + a1[7], 1, 1, v5);
  uint64_t result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v6)(a2 + a1[8], 1, 1, v5);
  uint64_t v8 = a1[10];
  uint64_t v9 = a2 + a1[9];
  *(_DWORD *)uint64_t v9 = 0;
  *(unsigned char *)(v9 + 4) = 1;
  *(unsigned char *)(a2 + v8) = 2;
  uint64_t v10 = a2 + a1[11];
  *(_DWORD *)uint64_t v10 = 0;
  *(unsigned char *)(v10 + 4) = 1;
  return result;
}

unint64_t sub_100BFCF50()
{
  return 0xD000000000000016;
}

uint64_t sub_100BFCF6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100BFC450(a1, a2, a3);
}

uint64_t sub_100BFCF84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100BFC75C(a1, a2, a3);
}

uint64_t sub_100BFCF9C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100C091F4(&qword_101697CE8, (void (*)(uint64_t))type metadata accessor for CRLProto_TextSelection);

  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_100BFD018@<X0>(uint64_t a1@<X8>)
{
  return sub_100C08F10(&qword_10166FD18, (uint64_t)qword_10171C048, a1);
}

uint64_t sub_100BFD03C(uint64_t a1)
{
  uint64_t v2 = sub_100C091F4(&qword_101697B40, (void (*)(uint64_t))type metadata accessor for CRLProto_TextSelection);

  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_100BFD0A8()
{
  sub_100C091F4(&qword_101697B40, (void (*)(uint64_t))type metadata accessor for CRLProto_TextSelection);

  return Message.hash(into:)();
}

uint64_t sub_100BFD128()
{
  uint64_t v0 = type metadata accessor for _NameMap();
  sub_100568B28(v0, qword_10171C060);
  sub_100556B74(v0, (uint64_t)qword_10171C060);
  sub_1005057FC(&qword_101697C78);
  uint64_t v1 = (int *)(sub_1005057FC(&qword_101697C80) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_10117D8C0;
  uint64_t v5 = (void *)(v4 + v3);
  unint64_t v6 = v4 + v3 + v1[14];
  *uint64_t v5 = 0;
  *(void *)unint64_t v6 = "insertionPoint";
  *(void *)(v6 + 8) = 14;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = enum case for _NameMap.NameDescription.same(_:);
  uint64_t v8 = type metadata accessor for _NameMap.NameDescription();
  uint64_t v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  uint64_t v10 = (char *)v5 + v2 + v1[14];
  *(void *)((char *)v5 + v2) = 1;
  *(void *)uint64_t v10 = "range";
  *((void *)v10 + 1) = 5;
  v10[16] = 2;
  v9();
  return _NameMap.init(dictionaryLiteral:)();
}

uint64_t sub_100BFD2E0@<X0>(uint64_t a1@<X8>)
{
  return sub_100C08F10(&qword_10166FD20, (uint64_t)qword_10171C060, a1);
}

uint64_t sub_100BFD304()
{
  uint64_t v0 = type metadata accessor for _NameMap();
  sub_100568B28(v0, qword_10171C078);
  sub_100556B74(v0, (uint64_t)qword_10171C078);
  sub_1005057FC(&qword_101697C78);
  uint64_t v1 = (int *)(sub_1005057FC(&qword_101697C80) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_10117DF40;
  uint64_t v5 = (void *)(v4 + v3);
  unint64_t v6 = v4 + v3 + v1[14];
  *uint64_t v5 = 1;
  *(void *)unint64_t v6 = "mostSpecificItemSelectionUUIDs";
  *(void *)(v6 + 8) = 30;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = enum case for _NameMap.NameDescription.same(_:);
  uint64_t v8 = type metadata accessor for _NameMap.NameDescription();
  uint64_t v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  uint64_t v10 = (char *)v5 + v2 + v1[14];
  *(void *)((char *)v5 + v2) = 2;
  *(void *)uint64_t v10 = "isGroup";
  *((void *)v10 + 1) = 7;
  v10[16] = 2;
  v9();
  uint64_t v11 = (uint64_t)v5 + 2 * v2 + v1[14];
  *(void *)((char *)v5 + 2 * v2) = 3;
  *(void *)uint64_t v11 = "textSelection";
  *(void *)(v11 + 8) = 13;
  *(unsigned char *)(v11 + 16) = 2;
  v9();
  return _NameMap.init(dictionaryLiteral:)();
}

uint64_t sub_100BFD508()
{
  uint64_t result = dispatch thunk of Decoder.nextFieldNumber()();
  uint64_t v3 = v0;
  if (!v0)
  {
    while (1)
    {
      if (v2) {
        return result;
      }
      if (result == 3) {
        break;
      }
      if (result == 2)
      {
        uint64_t v4 = v3;
        dispatch thunk of Decoder.decodeSingularBoolField(value:)();
        goto LABEL_5;
      }
      if (result == 1)
      {
        type metadata accessor for CRLProto_Data(0);
        sub_100C091F4(&qword_101697C38, (void (*)(uint64_t))type metadata accessor for CRLProto_Data);
        uint64_t v4 = v3;
        dispatch thunk of Decoder.decodeRepeatedMessageField<A>(value:)();
        goto LABEL_5;
      }
LABEL_6:
      uint64_t result = dispatch thunk of Decoder.nextFieldNumber()();
    }
    uint64_t v4 = v3;
    sub_100BFD63C();
LABEL_5:
    uint64_t v3 = v4;
    goto LABEL_6;
  }
  return result;
}

uint64_t sub_100BFD63C()
{
  return dispatch thunk of Decoder.decodeSingularMessageField<A>(value:)();
}

uint64_t sub_100BFD6EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (!*(void *)(*(void *)v3 + 16)
    || (type metadata accessor for CRLProto_Data(0),
        sub_100C091F4(&qword_101697C38, (void (*)(uint64_t))type metadata accessor for CRLProto_Data),
        uint64_t result = dispatch thunk of Visitor.visitRepeatedMessageField<A>(value:fieldNumber:)(),
        !v4))
  {
    if (v3[8] != 1 || (uint64_t result = dispatch thunk of Visitor.visitSingularBoolField(value:fieldNumber:)(), !v4))
    {
      uint64_t result = sub_100BFD828((uint64_t)v3, a1, a2, a3);
      if (!v4)
      {
        type metadata accessor for CRLProto_PersistableSelectionPath(0);
        return UnknownStorage.traverse<A>(visitor:)();
      }
    }
  }
  return result;
}

uint64_t sub_100BFD828(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v16[1] = a4;
  uint64_t v5 = sub_1005057FC(&qword_101677FD8);
  __chkstk_darwin(v5 - 8, v6);
  uint64_t v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for CRLProto_TextSelection(0);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9, v11);
  uint64_t v13 = (char *)v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for CRLProto_PersistableSelectionPath(0);
  sub_100522E9C(a1 + *(int *)(v14 + 28), (uint64_t)v8, &qword_101677FD8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1) {
    return sub_100522F00((uint64_t)v8, &qword_101677FD8);
  }
  sub_100C169A0((uint64_t)v8, (uint64_t)v13, type metadata accessor for CRLProto_TextSelection);
  sub_100C091F4(&qword_101697B40, (void (*)(uint64_t))type metadata accessor for CRLProto_TextSelection);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)();
  return sub_100C16A08((uint64_t)v13, type metadata accessor for CRLProto_TextSelection);
}

uint64_t sub_100BFDA20@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = _swiftEmptyArrayStorage;
  *(unsigned char *)(a2 + 8) = 0;
  UnknownStorage.init()();
  uint64_t v4 = a2 + *(int *)(a1 + 28);
  uint64_t v5 = type metadata accessor for CRLProto_TextSelection(0);
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56);

  return v6(v4, 1, 1, v5);
}

unint64_t sub_100BFDAB4()
{
  return 0xD000000000000021;
}

uint64_t sub_100BFDAD0()
{
  return sub_100BFD508();
}

uint64_t sub_100BFDAE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100BFD6EC(a1, a2, a3);
}

uint64_t sub_100BFDB00(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100C091F4(&qword_101697CF8, (void (*)(uint64_t))type metadata accessor for CRLProto_PersistableSelectionPath);

  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_100BFDB7C@<X0>(uint64_t a1@<X8>)
{
  return sub_100C08F10(&qword_10166FD28, (uint64_t)qword_10171C078, a1);
}

uint64_t sub_100BFDBA0(uint64_t a1)
{
  uint64_t v2 = sub_100C091F4(&qword_101677FE0, (void (*)(uint64_t))type metadata accessor for CRLProto_PersistableSelectionPath);

  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_100BFDC0C()
{
  sub_100C091F4(&qword_101677FE0, (void (*)(uint64_t))type metadata accessor for CRLProto_PersistableSelectionPath);

  return Message.hash(into:)();
}

uint64_t sub_100BFDC8C()
{
  uint64_t v0 = type metadata accessor for _NameMap();
  sub_100568B28(v0, qword_10171C090);
  sub_100556B74(v0, (uint64_t)qword_10171C090);
  sub_1005057FC(&qword_101697C78);
  uint64_t v1 = (int *)(sub_1005057FC(&qword_101697C80) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_10117DF40;
  uint64_t v5 = (void *)(v4 + v3);
  unint64_t v6 = v4 + v3 + v1[14];
  *uint64_t v5 = 1;
  *(void *)unint64_t v6 = "presenceUuidData";
  *(void *)(v6 + 8) = 16;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = enum case for _NameMap.NameDescription.same(_:);
  uint64_t v8 = type metadata accessor for _NameMap.NameDescription();
  uint64_t v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  uint64_t v10 = (char *)v5 + v2 + v1[14];
  *(void *)((char *)v5 + v2) = 2;
  *(void *)uint64_t v10 = "timeStamp";
  *((void *)v10 + 1) = 9;
  v10[16] = 2;
  v9();
  uint64_t v11 = (uint64_t)v5 + 2 * v2 + v1[14];
  *(void *)((char *)v5 + 2 * v2) = 3;
  *(void *)uint64_t v11 = "persistableSelectionPathData";
  *(void *)(v11 + 8) = 28;
  *(unsigned char *)(v11 + 16) = 2;
  v9();
  return _NameMap.init(dictionaryLiteral:)();
}

uint64_t sub_100BFDE90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = v3;
  while (1)
  {
    uint64_t result = dispatch thunk of Decoder.nextFieldNumber()();
    if (v4 || (v10 & 1) != 0) {
      break;
    }
    switch(result)
    {
      case 3:
        sub_100C086D4(a1, v5, a2, a3, (void (*)(void))type metadata accessor for CRLProto_CollaboratorCursor);
        break;
      case 2:
        dispatch thunk of Decoder.decodeSingularDoubleField(value:)();
        break;
      case 1:
        sub_100BFDF58();
        break;
    }
  }
  return result;
}

uint64_t sub_100BFDF58()
{
  return dispatch thunk of Decoder.decodeSingularMessageField<A>(value:)();
}

uint64_t sub_100BFE008(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result = sub_100BFE0F4((uint64_t)v3, a1, a2, a3);
  if (!v4)
  {
    if (*v3 != 0.0) {
      dispatch thunk of Visitor.visitSingularDoubleField(value:fieldNumber:)();
    }
    sub_100C08A68((uint64_t)v3, a1, a2, a3, (uint64_t (*)(void, __n128))type metadata accessor for CRLProto_CollaboratorCursor, 3);
    type metadata accessor for CRLProto_CollaboratorCursor(0);
    return UnknownStorage.traverse<A>(visitor:)();
  }
  return result;
}

uint64_t sub_100BFE0F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v16[1] = a4;
  uint64_t v5 = sub_1005057FC((uint64_t *)&unk_101674160);
  __chkstk_darwin(v5 - 8, v6);
  uint64_t v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for CRLProto_Data(0);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9, v11);
  uint64_t v13 = (char *)v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for CRLProto_CollaboratorCursor(0);
  sub_100522E9C(a1 + *(int *)(v14 + 24), (uint64_t)v8, (uint64_t *)&unk_101674160);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1) {
    return sub_100522F00((uint64_t)v8, (uint64_t *)&unk_101674160);
  }
  sub_100C169A0((uint64_t)v8, (uint64_t)v13, type metadata accessor for CRLProto_Data);
  sub_100C091F4(&qword_101697C38, (void (*)(uint64_t))type metadata accessor for CRLProto_Data);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)();
  return sub_100C16A08((uint64_t)v13, type metadata accessor for CRLProto_Data);
}

uint64_t sub_100BFE2EC@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = 0;
  UnknownStorage.init()();
  uint64_t v4 = (char *)a2 + *(int *)(a1 + 24);
  uint64_t v5 = type metadata accessor for CRLProto_Data(0);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56);
  ((void (*)(void *__return_ptr, char *, uint64_t, uint64_t, uint64_t))v8)((void *)(v5 - 8), v4, 1, 1, v5);
  uint64_t v6 = (char *)a2 + *(int *)(a1 + 28);

  return v8(v6, 1, 1, v5);
}

unint64_t sub_100BFE3B4()
{
  return 0xD00000000000001BLL;
}

uint64_t sub_100BFE3D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100BFDE90(a1, a2, a3);
}

uint64_t sub_100BFE3E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100BFE008(a1, a2, a3);
}

uint64_t sub_100BFE400(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100C091F4(&qword_101697D08, (void (*)(uint64_t))type metadata accessor for CRLProto_CollaboratorCursor);

  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_100BFE47C@<X0>(uint64_t a1@<X8>)
{
  return sub_100C08F10(&qword_10166FD30, (uint64_t)qword_10171C090, a1);
}

uint64_t sub_100BFE4A0(uint64_t a1)
{
  uint64_t v2 = sub_100C091F4((unint64_t *)&qword_10168AA88, (void (*)(uint64_t))type metadata accessor for CRLProto_CollaboratorCursor);

  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_100BFE50C()
{
  sub_100C091F4((unint64_t *)&qword_10168AA88, (void (*)(uint64_t))type metadata accessor for CRLProto_CollaboratorCursor);

  return Message.hash(into:)();
}

uint64_t sub_100BFE58C()
{
  uint64_t v0 = type metadata accessor for _NameMap();
  sub_100568B28(v0, qword_10171C0A8);
  sub_100556B74(v0, (uint64_t)qword_10171C0A8);
  sub_1005057FC(&qword_101697C78);
  uint64_t v1 = (int *)(sub_1005057FC(&qword_101697C80) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_10117D8C0;
  uint64_t v5 = (void *)(v4 + v3);
  unint64_t v6 = v4 + v3 + v1[14];
  *uint64_t v5 = 1;
  *(void *)unint64_t v6 = "presenceUuidData";
  *(void *)(v6 + 8) = 16;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = enum case for _NameMap.NameDescription.same(_:);
  uint64_t v8 = type metadata accessor for _NameMap.NameDescription();
  uint64_t v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  uint64_t v10 = (char *)v5 + v2 + v1[14];
  *(void *)((char *)v5 + v2) = 2;
  *(void *)uint64_t v10 = "colorIndex";
  *((void *)v10 + 1) = 10;
  v10[16] = 2;
  v9();
  return _NameMap.init(dictionaryLiteral:)();
}

uint64_t sub_100BFE744()
{
  while (1)
  {
    uint64_t result = dispatch thunk of Decoder.nextFieldNumber()();
    if (v0 || (v2 & 1) != 0) {
      break;
    }
    if (result == 2)
    {
      dispatch thunk of Decoder.decodeSingularUInt32Field(value:)();
    }
    else if (result == 1)
    {
      sub_100BFE7D4();
    }
  }
  return result;
}

uint64_t sub_100BFE7D4()
{
  return dispatch thunk of Decoder.decodeSingularMessageField<A>(value:)();
}

uint64_t sub_100BFE884(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result = sub_100BFE930((uint64_t)v3, a1, a2, a3);
  if (!v4)
  {
    if (*v3) {
      dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:)();
    }
    type metadata accessor for CRLProto_CollaboratorCursorColor(0);
    return UnknownStorage.traverse<A>(visitor:)();
  }
  return result;
}

uint64_t sub_100BFE930(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v16[1] = a4;
  uint64_t v5 = sub_1005057FC((uint64_t *)&unk_101674160);
  __chkstk_darwin(v5 - 8, v6);
  uint64_t v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for CRLProto_Data(0);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9, v11);
  uint64_t v13 = (char *)v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for CRLProto_CollaboratorCursorColor(0);
  sub_100522E9C(a1 + *(int *)(v14 + 24), (uint64_t)v8, (uint64_t *)&unk_101674160);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1) {
    return sub_100522F00((uint64_t)v8, (uint64_t *)&unk_101674160);
  }
  sub_100C169A0((uint64_t)v8, (uint64_t)v13, type metadata accessor for CRLProto_Data);
  sub_100C091F4(&qword_101697C38, (void (*)(uint64_t))type metadata accessor for CRLProto_Data);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)();
  return sub_100C16A08((uint64_t)v13, type metadata accessor for CRLProto_Data);
}

unint64_t sub_100BFEB2C()
{
  return 0xD000000000000020;
}

uint64_t sub_100BFEB48()
{
  return sub_100BFE744();
}

uint64_t sub_100BFEB60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100BFE884(a1, a2, a3);
}

uint64_t sub_100BFEB78(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100C091F4(&qword_101697D10, (void (*)(uint64_t))type metadata accessor for CRLProto_CollaboratorCursorColor);

  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_100BFEBF4@<X0>(uint64_t a1@<X8>)
{
  return sub_100C08F10(&qword_10166FD38, (uint64_t)qword_10171C0A8, a1);
}

uint64_t sub_100BFEC18(uint64_t a1)
{
  uint64_t v2 = sub_100C091F4((unint64_t *)&qword_101691CC8, (void (*)(uint64_t))type metadata accessor for CRLProto_CollaboratorCursorColor);

  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_100BFEC84()
{
  sub_100C091F4((unint64_t *)&qword_101691CC8, (void (*)(uint64_t))type metadata accessor for CRLProto_CollaboratorCursorColor);

  return Message.hash(into:)();
}

uint64_t sub_100BFED04()
{
  uint64_t v0 = type metadata accessor for _NameMap();
  sub_100568B28(v0, qword_10171C0C0);
  sub_100556B74(v0, (uint64_t)qword_10171C0C0);
  sub_1005057FC(&qword_101697C78);
  uint64_t v1 = (int *)(sub_1005057FC(&qword_101697C80) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_10117E800;
  unint64_t v5 = v4 + v3;
  unint64_t v6 = v4 + v3 + v1[14];
  *(void *)(v4 + v3) = 1;
  *(void *)unint64_t v6 = "ckUserIdentityData";
  *(void *)(v6 + 8) = 18;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = enum case for _NameMap.NameDescription.same(_:);
  uint64_t v8 = type metadata accessor for _NameMap.NameDescription();
  uint64_t v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  unint64_t v10 = v5 + v2 + v1[14];
  *(void *)(v5 + v2) = 2;
  *(void *)unint64_t v10 = "presenceUuidData";
  *(void *)(v10 + 8) = 16;
  *(unsigned char *)(v10 + 16) = 2;
  v9();
  uint64_t v11 = (void *)(v5 + 2 * v2);
  uint64_t v12 = (char *)v11 + v1[14];
  *uint64_t v11 = 3;
  *(void *)uint64_t v12 = "timeStamp";
  *((void *)v12 + 1) = 9;
  v12[16] = 2;
  v9();
  uint64_t v13 = (void *)(v5 + 3 * v2);
  uint64_t v14 = (char *)v13 + v1[14];
  *uint64_t v13 = 4;
  *(void *)uint64_t v14 = "isFollowable";
  *((void *)v14 + 1) = 12;
  v14[16] = 2;
  v9();
  return _NameMap.init(dictionaryLiteral:)();
}

uint64_t sub_100BFEF3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = v3;
  while (1)
  {
    uint64_t result = dispatch thunk of Decoder.nextFieldNumber()();
    if (v4 || (v10 & 1) != 0) {
      return result;
    }
    switch(result)
    {
      case 1:
        sub_100BFF084();
        break;
      case 2:
        sub_100C086D4(a1, v5, a2, a3, (void (*)(void))type metadata accessor for CRLProto_RealTimeEnter);
        break;
      case 3:
        dispatch thunk of Decoder.decodeSingularDoubleField(value:)();
        break;
      case 4:
        type metadata accessor for CRLProto_RealTimeEnter(0);
        dispatch thunk of Decoder.decodeSingularBoolField(value:)();
        break;
      default:
        continue;
    }
  }
}

uint64_t sub_100BFF084()
{
  return dispatch thunk of Decoder.decodeSingularMessageField<A>(value:)();
}

uint64_t sub_100BFF134(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result = sub_100BFF240((uint64_t)v3, a1, a2, a3);
  if (!v4)
  {
    sub_100C08A68((uint64_t)v3, a1, a2, a3, (uint64_t (*)(void, __n128))type metadata accessor for CRLProto_RealTimeEnter, 2);
    if (*v3 != 0.0) {
      dispatch thunk of Visitor.visitSingularDoubleField(value:fieldNumber:)();
    }
    sub_100BFF438((uint64_t)v3);
    type metadata accessor for CRLProto_RealTimeEnter(0);
    return UnknownStorage.traverse<A>(visitor:)();
  }
  return result;
}

uint64_t sub_100BFF240(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v16[1] = a4;
  uint64_t v5 = sub_1005057FC((uint64_t *)&unk_101674160);
  __chkstk_darwin(v5 - 8, v6);
  uint64_t v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for CRLProto_Data(0);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9, v11);
  uint64_t v13 = (char *)v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for CRLProto_RealTimeEnter(0);
  sub_100522E9C(a1 + *(int *)(v14 + 24), (uint64_t)v8, (uint64_t *)&unk_101674160);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1) {
    return sub_100522F00((uint64_t)v8, (uint64_t *)&unk_101674160);
  }
  sub_100C169A0((uint64_t)v8, (uint64_t)v13, type metadata accessor for CRLProto_Data);
  sub_100C091F4(&qword_101697C38, (void (*)(uint64_t))type metadata accessor for CRLProto_Data);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)();
  return sub_100C16A08((uint64_t)v13, type metadata accessor for CRLProto_Data);
}

uint64_t sub_100BFF438(uint64_t a1)
{
  uint64_t result = type metadata accessor for CRLProto_RealTimeEnter(0);
  if (*(unsigned char *)(a1 + *(int *)(result + 32)) != 2) {
    return dispatch thunk of Visitor.visitSingularBoolField(value:fieldNumber:)();
  }
  return result;
}

uint64_t sub_100BFF4B0@<X0>(int *a1@<X0>, void *a2@<X8>)
{
  *a2 = 0;
  UnknownStorage.init()();
  uint64_t v4 = (char *)a2 + a1[6];
  uint64_t v5 = type metadata accessor for CRLProto_Data(0);
  uint64_t v6 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56);
  v6(v4, 1, 1, v5);
  uint64_t result = ((uint64_t (*)(char *, uint64_t, uint64_t, uint64_t))v6)((char *)a2 + a1[7], 1, 1, v5);
  *((unsigned char *)a2 + a1[8]) = 2;
  return result;
}

unint64_t sub_100BFF56C()
{
  return 0xD000000000000016;
}

uint64_t sub_100BFF588(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100BFEF3C(a1, a2, a3);
}

uint64_t sub_100BFF5A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100BFF134(a1, a2, a3);
}

uint64_t sub_100BFF5B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100C091F4(&qword_101697D18, (void (*)(uint64_t))type metadata accessor for CRLProto_RealTimeEnter);

  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_100BFF634@<X0>(uint64_t a1@<X8>)
{
  return sub_100C08F10(&qword_10166FD40, (uint64_t)qword_10171C0C0, a1);
}

uint64_t sub_100BFF658(uint64_t a1)
{
  uint64_t v2 = sub_100C091F4(&qword_101685560, (void (*)(uint64_t))type metadata accessor for CRLProto_RealTimeEnter);

  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_100BFF6C4()
{
  sub_100C091F4(&qword_101685560, (void (*)(uint64_t))type metadata accessor for CRLProto_RealTimeEnter);

  return Message.hash(into:)();
}

uint64_t sub_100BFF744(uint64_t a1)
{
  return sub_100C052D8(a1, qword_10171C0D8, (uint64_t)"presenceUuidData", 16);
}

unint64_t sub_100BFF760()
{
  return 0xD000000000000016;
}

uint64_t sub_100BFF784(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100C00534(a1, a2, a3, (void (*)(void))type metadata accessor for CRLProto_RealTimeLeave);
}

uint64_t sub_100BFF7B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100C005B8(a1, a2, a3, (uint64_t (*)(void, __n128))type metadata accessor for CRLProto_RealTimeLeave);
}

uint64_t sub_100BFF7DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100C091F4(&qword_101697D20, (void (*)(uint64_t))type metadata accessor for CRLProto_RealTimeLeave);

  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_100BFF858@<X0>(uint64_t a1@<X8>)
{
  return sub_100C08F10(&qword_10166FD48, (uint64_t)qword_10171C0D8, a1);
}

uint64_t sub_100BFF87C(uint64_t a1)
{
  uint64_t v2 = sub_100C091F4(&qword_101673FA8, (void (*)(uint64_t))type metadata accessor for CRLProto_RealTimeLeave);

  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_100BFF8E8()
{
  sub_100C091F4(&qword_101673FA8, (void (*)(uint64_t))type metadata accessor for CRLProto_RealTimeLeave);

  return Message.hash(into:)();
}

uint64_t sub_100BFF964(uint64_t a1, uint64_t a2)
{
  return sub_100C15864(a1, a2, (uint64_t (*)(void, __n128))type metadata accessor for CRLProto_RealTimeLeave) & 1;
}

uint64_t sub_100BFF994()
{
  uint64_t v0 = type metadata accessor for _NameMap();
  sub_100568B28(v0, qword_10171C0F0);
  sub_100556B74(v0, (uint64_t)qword_10171C0F0);
  sub_1005057FC(&qword_101697C78);
  uint64_t v1 = (int *)(sub_1005057FC(&qword_101697C80) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1011ABAB0;
  unint64_t v5 = v4 + v3;
  unint64_t v6 = v4 + v3 + v1[14];
  *(void *)(v4 + v3) = 1;
  *(void *)unint64_t v6 = "persistenceType";
  *(void *)(v6 + 8) = 15;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = enum case for _NameMap.NameDescription.same(_:);
  uint64_t v8 = type metadata accessor for _NameMap.NameDescription();
  uint64_t v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  unint64_t v10 = v5 + v2 + v1[14];
  *(void *)(v5 + v2) = 2;
  *(void *)unint64_t v10 = "minRequiredVersion";
  *(void *)(v10 + 8) = 18;
  *(unsigned char *)(v10 + 16) = 2;
  v9();
  uint64_t v11 = (void *)(v5 + 2 * v2);
  uint64_t v12 = (char *)v11 + v1[14];
  *uint64_t v11 = 3;
  *(void *)uint64_t v12 = "childObjectReferences";
  *((void *)v12 + 1) = 21;
  v12[16] = 2;
  v9();
  uint64_t v13 = (void *)(v5 + 3 * v2);
  uint64_t v14 = (char *)v13 + v1[14];
  *uint64_t v13 = 4;
  *(void *)uint64_t v14 = "assetReferences";
  *((void *)v14 + 1) = 15;
  v14[16] = 2;
  v9();
  uint64_t v15 = (void *)(v5 + 4 * v2);
  unint64_t v16 = (char *)v15 + v1[14];
  *uint64_t v15 = 5;
  *(void *)unint64_t v16 = "dataDirectoryEntries";
  *((void *)v16 + 1) = 20;
  v16[16] = 2;
  v9();
  uint64_t v17 = (void *)(v5 + 5 * v2);
  unint64_t v18 = (char *)v17 + v1[14];
  *uint64_t v17 = 6;
  *(void *)unint64_t v18 = "objectOptions";
  *((void *)v18 + 1) = 13;
  v18[16] = 2;
  v9();
  unint64_t v19 = (void *)(v5 + 6 * v2);
  uint64_t v20 = (char *)v19 + v1[14];
  *unint64_t v19 = 7;
  *(void *)uint64_t v20 = "minRequiredVersionForGoodEnoughFidelity";
  *((void *)v20 + 1) = 39;
  v20[16] = 2;
  v9();
  unint64_t v21 = (void *)(v5 + 7 * v2);
  uint64_t v22 = (char *)v21 + v1[14];
  *unint64_t v21 = 8;
  *(void *)uint64_t v22 = "minRequiredVersionForFullFidelity";
  *((void *)v22 + 1) = 33;
  v22[16] = 2;
  v9();
  return _NameMap.init(dictionaryLiteral:)();
}

uint64_t sub_100BFFCD4()
{
  uint64_t result = dispatch thunk of Decoder.nextFieldNumber()();
  uint64_t v3 = v0;
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(result)
      {
        case 1:
          uint64_t v4 = v3;
          dispatch thunk of Decoder.decodeSingularUInt32Field(value:)();
          goto LABEL_12;
        case 2:
        case 7:
        case 8:
          uint64_t v4 = v3;
          dispatch thunk of Decoder.decodeRepeatedUInt32Field(value:)();
          goto LABEL_12;
        case 3:
          type metadata accessor for CRLProto_ObjectInfo.ChildObjectReference(0);
          sub_100C091F4(&qword_101697A90, (void (*)(uint64_t))type metadata accessor for CRLProto_ObjectInfo.ChildObjectReference);
          goto LABEL_9;
        case 4:
          type metadata accessor for CRLProto_ObjectInfo.AssetReference(0);
          sub_100C091F4(&qword_101697A70, (void (*)(uint64_t))type metadata accessor for CRLProto_ObjectInfo.AssetReference);
          goto LABEL_9;
        case 5:
          type metadata accessor for CRLProto_ObjectInfo.DataDirectoryEntry(0);
          sub_100C091F4(&qword_101697A50, (void (*)(uint64_t))type metadata accessor for CRLProto_ObjectInfo.DataDirectoryEntry);
LABEL_9:
          uint64_t v4 = v3;
          dispatch thunk of Decoder.decodeRepeatedMessageField<A>(value:)();
          goto LABEL_12;
        case 6:
          uint64_t v4 = v3;
          dispatch thunk of Decoder.decodeSingularUInt64Field(value:)();
LABEL_12:
          uint64_t v3 = v4;
          break;
        default:
          break;
      }
      uint64_t result = dispatch thunk of Decoder.nextFieldNumber()();
    }
  }
  return result;
}

uint64_t sub_100BFFF28()
{
  if (!*(_DWORD *)v0 || (uint64_t result = dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:)(), !v1))
  {
    if (!*(void *)(*(void *)(v0 + 8) + 16)
      || (uint64_t result = dispatch thunk of Visitor.visitPackedUInt32Field(value:fieldNumber:)(), !v1))
    {
      if (!*(void *)(*(void *)(v0 + 16) + 16)
        || (type metadata accessor for CRLProto_ObjectInfo.ChildObjectReference(0),
            sub_100C091F4(&qword_101697A90, (void (*)(uint64_t))type metadata accessor for CRLProto_ObjectInfo.ChildObjectReference), uint64_t result = dispatch thunk of Visitor.visitRepeatedMessageField<A>(value:fieldNumber:)(), !v1))
      {
        if (!*(void *)(*(void *)(v0 + 24) + 16)
          || (type metadata accessor for CRLProto_ObjectInfo.AssetReference(0),
              sub_100C091F4(&qword_101697A70, (void (*)(uint64_t))type metadata accessor for CRLProto_ObjectInfo.AssetReference), uint64_t result = dispatch thunk of Visitor.visitRepeatedMessageField<A>(value:fieldNumber:)(), !v1))
        {
          if (!*(void *)(*(void *)(v0 + 32) + 16)
            || (type metadata accessor for CRLProto_ObjectInfo.DataDirectoryEntry(0),
                sub_100C091F4(&qword_101697A50, (void (*)(uint64_t))type metadata accessor for CRLProto_ObjectInfo.DataDirectoryEntry), uint64_t result = dispatch thunk of Visitor.visitRepeatedMessageField<A>(value:fieldNumber:)(), !v1))
          {
            if (!*(void *)(v0 + 40)
              || (uint64_t result = dispatch thunk of Visitor.visitSingularUInt64Field(value:fieldNumber:)(), !v1))
            {
              if (!*(void *)(*(void *)(v0 + 48) + 16)
                || (uint64_t result = dispatch thunk of Visitor.visitPackedUInt32Field(value:fieldNumber:)(), !v1))
              {
                if (!*(void *)(*(void *)(v0 + 56) + 16)
                  || (uint64_t result = dispatch thunk of Visitor.visitPackedUInt32Field(value:fieldNumber:)(), !v1))
                {
                  type metadata accessor for CRLProto_ObjectInfo(0);
                  return UnknownStorage.traverse<A>(visitor:)();
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_100C001BC@<X0>(uint64_t a1@<X8>)
{
  *(_DWORD *)a1 = 0;
  *(void *)(a1 + 8) = _swiftEmptyArrayStorage;
  *(void *)(a1 + 16) = _swiftEmptyArrayStorage;
  *(void *)(a1 + 24) = _swiftEmptyArrayStorage;
  *(void *)(a1 + 32) = _swiftEmptyArrayStorage;
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = _swiftEmptyArrayStorage;
  *(void *)(a1 + 56) = _swiftEmptyArrayStorage;
  return UnknownStorage.init()();
}

unint64_t sub_100C001F8()
{
  return 0xD000000000000013;
}

uint64_t sub_100C00214@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 48);
  uint64_t v5 = type metadata accessor for UnknownStorage();
  unint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);

  return v6(a2, v4, v5);
}

uint64_t sub_100C00284(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2 + *(int *)(a2 + 48);
  uint64_t v5 = type metadata accessor for UnknownStorage();
  unint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 40);

  return v6(v4, a1, v5);
}

uint64_t sub_100C002F4()
{
  return sub_100BFFCD4();
}

uint64_t sub_100C0030C()
{
  return sub_100BFFF28();
}

uint64_t sub_100C00324(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100C091F4(&qword_101697D28, (void (*)(uint64_t))type metadata accessor for CRLProto_ObjectInfo);

  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_100C003A0@<X0>(uint64_t a1@<X8>)
{
  return sub_100C08F10(&qword_10166FD50, (uint64_t)qword_10171C0F0, a1);
}

uint64_t sub_100C003C4(uint64_t a1)
{
  uint64_t v2 = sub_100C091F4(&qword_1016741B0, (void (*)(uint64_t))type metadata accessor for CRLProto_ObjectInfo);

  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_100C00430()
{
  sub_100C091F4(&qword_1016741B0, (void (*)(uint64_t))type metadata accessor for CRLProto_ObjectInfo);

  return Message.hash(into:)();
}

void sub_100C004B0()
{
  v0._countAndFlagsBits = 0xD000000000000015;
  v0._object = (void *)0x800000010127ACB0;
  String.append(_:)(v0);
  qword_10171C108 = 0xD000000000000013;
  unk_10171C110 = 0x800000010127AC30;
}

uint64_t sub_100C0051C(uint64_t a1)
{
  return sub_100C052D8(a1, qword_10171C118, (uint64_t)"uuid", 4);
}

uint64_t sub_100C00534(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void))
{
  uint64_t v7 = v4;
  while (1)
  {
    uint64_t result = dispatch thunk of Decoder.nextFieldNumber()();
    if (v5 || (v12 & 1) != 0) {
      break;
    }
    if (result == 1) {
      sub_100C05434(a1, v7, a2, a3, a4);
    }
  }
  return result;
}

uint64_t sub_100C005B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void, __n128))
{
  uint64_t result = sub_100C054E8(v4, a1, a2, a3, a4);
  if (!v5) {
    return UnknownStorage.traverse<A>(visitor:)();
  }
  return result;
}

uint64_t sub_100C00614@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  UnknownStorage.init()();
  uint64_t v4 = a2 + *(int *)(a1 + 20);
  uint64_t v5 = type metadata accessor for CRLProto_Data(0);
  unint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56);

  return v6(v4, 1, 1, v5);
}

uint64_t sub_100C00690(uint64_t a1, uint64_t a2)
{
  return sub_100C02314(a1, a2, &qword_10166FD58, &qword_10171C108);
}

uint64_t sub_100C006B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100C00534(a1, a2, a3, (void (*)(void))type metadata accessor for CRLProto_ObjectInfo.ChildObjectReference);
}

uint64_t sub_100C006E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100C005B8(a1, a2, a3, (uint64_t (*)(void, __n128))type metadata accessor for CRLProto_ObjectInfo.ChildObjectReference);
}

uint64_t sub_100C00710(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100C091F4(&qword_101697D30, (void (*)(uint64_t))type metadata accessor for CRLProto_ObjectInfo.ChildObjectReference);

  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_100C0078C@<X0>(uint64_t a1@<X8>)
{
  return sub_100C08F10(&qword_10166FD60, (uint64_t)qword_10171C118, a1);
}

uint64_t sub_100C007B0(uint64_t a1)
{
  uint64_t v2 = sub_100C091F4(&qword_101697A90, (void (*)(uint64_t))type metadata accessor for CRLProto_ObjectInfo.ChildObjectReference);

  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_100C0081C()
{
  sub_100C091F4(&qword_101697A90, (void (*)(uint64_t))type metadata accessor for CRLProto_ObjectInfo.ChildObjectReference);

  return Message.hash(into:)();
}

uint64_t sub_100C00898(uint64_t a1, uint64_t a2)
{
  return sub_100C15864(a1, a2, (uint64_t (*)(void, __n128))type metadata accessor for CRLProto_ObjectInfo.ChildObjectReference) & 1;
}

void sub_100C008C8()
{
  v0._countAndFlagsBits = 0x655274657373412ELL;
  v0._object = (void *)0xEF65636E65726566;
  String.append(_:)(v0);
  qword_10171C130 = 0xD000000000000013;
  *(void *)algn_10171C138 = 0x800000010127AC30;
}

uint64_t sub_100C00940()
{
  uint64_t v0 = type metadata accessor for _NameMap();
  sub_100568B28(v0, qword_10171C140);
  sub_100556B74(v0, (uint64_t)qword_10171C140);
  sub_1005057FC(&qword_101697C78);
  uint64_t v1 = (int *)(sub_1005057FC(&qword_101697C80) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_10117D8C0;
  uint64_t v5 = (void *)(v4 + v3);
  unint64_t v6 = v4 + v3 + v1[14];
  *uint64_t v5 = 1;
  *(void *)unint64_t v6 = "name";
  *(void *)(v6 + 8) = 4;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = enum case for _NameMap.NameDescription.same(_:);
  uint64_t v8 = type metadata accessor for _NameMap.NameDescription();
  uint64_t v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  unint64_t v10 = (char *)v5 + v2 + v1[14];
  *(void *)((char *)v5 + v2) = 2;
  *(void *)unint64_t v10 = "assetUUID";
  *((void *)v10 + 1) = 9;
  v10[16] = 2;
  v9();
  return _NameMap.init(dictionaryLiteral:)();
}

uint64_t sub_100C00AF8()
{
  while (1)
  {
    uint64_t result = dispatch thunk of Decoder.nextFieldNumber()();
    if (v0 || (v2 & 1) != 0) {
      break;
    }
    if (result == 2)
    {
      sub_100C00B88();
    }
    else if (result == 1)
    {
      dispatch thunk of Decoder.decodeSingularStringField(value:)();
    }
  }
  return result;
}

uint64_t sub_100C00B88()
{
  return dispatch thunk of Decoder.decodeSingularMessageField<A>(value:)();
}

uint64_t sub_100C00C38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v8 = v3[1];
  uint64_t v9 = HIBYTE(v8) & 0xF;
  if ((v8 & 0x2000000000000000) == 0) {
    uint64_t v9 = *v3 & 0xFFFFFFFFFFFFLL;
  }
  if (!v9 || (uint64_t result = dispatch thunk of Visitor.visitSingularStringField(value:fieldNumber:)(), !v4))
  {
    uint64_t result = sub_100C00CFC((uint64_t)v3, a1, a2, a3);
    if (!v4)
    {
      type metadata accessor for CRLProto_ObjectInfo.AssetReference(0);
      return UnknownStorage.traverse<A>(visitor:)();
    }
  }
  return result;
}

uint64_t sub_100C00CFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v16[1] = a4;
  uint64_t v5 = sub_1005057FC((uint64_t *)&unk_101674160);
  __chkstk_darwin(v5 - 8, v6);
  unint64_t v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for CRLProto_Data(0);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9, v11);
  uint64_t v13 = (char *)v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for CRLProto_ObjectInfo.AssetReference(0);
  sub_100522E9C(a1 + *(int *)(v14 + 24), (uint64_t)v8, (uint64_t *)&unk_101674160);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1) {
    return sub_100522F00((uint64_t)v8, (uint64_t *)&unk_101674160);
  }
  sub_100C169A0((uint64_t)v8, (uint64_t)v13, type metadata accessor for CRLProto_Data);
  sub_100C091F4(&qword_101697C38, (void (*)(uint64_t))type metadata accessor for CRLProto_Data);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)();
  return sub_100C16A08((uint64_t)v13, type metadata accessor for CRLProto_Data);
}

uint64_t sub_100C00EF4@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = 0;
  a2[1] = 0xE000000000000000;
  UnknownStorage.init()();
  uint64_t v4 = (char *)a2 + *(int *)(a1 + 24);
  uint64_t v5 = type metadata accessor for CRLProto_Data(0);
  uint64_t v6 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56);

  return v6(v4, 1, 1, v5);
}

uint64_t sub_100C00F80(uint64_t a1, uint64_t a2)
{
  return sub_100C02314(a1, a2, &qword_10166FD68, &qword_10171C130);
}

uint64_t sub_100C00FA8()
{
  return sub_100C00AF8();
}

uint64_t sub_100C00FC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100C00C38(a1, a2, a3);
}

uint64_t sub_100C00FD8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100C091F4(&qword_101697D38, (void (*)(uint64_t))type metadata accessor for CRLProto_ObjectInfo.AssetReference);

  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_100C01054@<X0>(uint64_t a1@<X8>)
{
  return sub_100C08F10(&qword_10166FD70, (uint64_t)qword_10171C140, a1);
}

uint64_t sub_100C01078(uint64_t a1)
{
  uint64_t v2 = sub_100C091F4(&qword_101697A70, (void (*)(uint64_t))type metadata accessor for CRLProto_ObjectInfo.AssetReference);

  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_100C010E4()
{
  sub_100C091F4(&qword_101697A70, (void (*)(uint64_t))type metadata accessor for CRLProto_ObjectInfo.AssetReference);

  return Message.hash(into:)();
}

void sub_100C01164()
{
  v0._object = (void *)0x800000010127ACE0;
  v0._countAndFlagsBits = 0xD000000000000013;
  String.append(_:)(v0);
  qword_10171C158 = 0xD000000000000013;
  unk_10171C160 = 0x800000010127AC30;
}

uint64_t sub_100C011D4()
{
  uint64_t v0 = type metadata accessor for _NameMap();
  sub_100568B28(v0, qword_10171C168);
  sub_100556B74(v0, (uint64_t)qword_10171C168);
  sub_1005057FC(&qword_101697C78);
  uint64_t v1 = (int *)(sub_1005057FC(&qword_101697C80) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_10117D8C0;
  uint64_t v5 = (void *)(v4 + v3);
  unint64_t v6 = v4 + v3 + v1[14];
  *uint64_t v5 = 1;
  *(void *)unint64_t v6 = "name";
  *(void *)(v6 + 8) = 4;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = enum case for _NameMap.NameDescription.same(_:);
  uint64_t v8 = type metadata accessor for _NameMap.NameDescription();
  uint64_t v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  uint64_t v10 = (char *)v5 + v2 + v1[14];
  *(void *)((char *)v5 + v2) = 2;
  *(void *)uint64_t v10 = "size";
  *((void *)v10 + 1) = 4;
  v10[16] = 2;
  v9();
  return _NameMap.init(dictionaryLiteral:)();
}

uint64_t sub_100C0138C()
{
  uint64_t result = dispatch thunk of Decoder.nextFieldNumber()();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      if (result == 2)
      {
        dispatch thunk of Decoder.decodeSingularUInt64Field(value:)();
      }
      else if (result == 1)
      {
        dispatch thunk of Decoder.decodeSingularStringField(value:)();
      }
      uint64_t result = dispatch thunk of Decoder.nextFieldNumber()();
    }
  }
  return result;
}

uint64_t sub_100C01430()
{
  unint64_t v2 = v0[1];
  uint64_t v3 = HIBYTE(v2) & 0xF;
  if ((v2 & 0x2000000000000000) == 0) {
    uint64_t v3 = *v0 & 0xFFFFFFFFFFFFLL;
  }
  if (!v3 || (uint64_t result = dispatch thunk of Visitor.visitSingularStringField(value:fieldNumber:)(), !v1))
  {
    if (!v0[2] || (uint64_t result = dispatch thunk of Visitor.visitSingularUInt64Field(value:fieldNumber:)(), !v1))
    {
      type metadata accessor for CRLProto_ObjectInfo.DataDirectoryEntry(0);
      return UnknownStorage.traverse<A>(visitor:)();
    }
  }
  return result;
}

uint64_t sub_100C014FC@<X0>(void *a1@<X8>)
{
  *a1 = 0;
  a1[1] = 0xE000000000000000;
  a1[2] = 0;
  return UnknownStorage.init()();
}

uint64_t sub_100C01528(uint64_t a1, uint64_t a2)
{
  return sub_100C02314(a1, a2, &qword_10166FD78, &qword_10171C158);
}

uint64_t sub_100C01550()
{
  return sub_100C0138C();
}

uint64_t sub_100C01568()
{
  return sub_100C01430();
}

uint64_t sub_100C01580(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100C091F4(&qword_101697D40, (void (*)(uint64_t))type metadata accessor for CRLProto_ObjectInfo.DataDirectoryEntry);

  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_100C015FC@<X0>(uint64_t a1@<X8>)
{
  return sub_100C08F10(&qword_10166FD80, (uint64_t)qword_10171C168, a1);
}

uint64_t sub_100C01620(uint64_t a1)
{
  uint64_t v2 = sub_100C091F4(&qword_101697A50, (void (*)(uint64_t))type metadata accessor for CRLProto_ObjectInfo.DataDirectoryEntry);

  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_100C0168C()
{
  sub_100C091F4(&qword_101697A50, (void (*)(uint64_t))type metadata accessor for CRLProto_ObjectInfo.DataDirectoryEntry);

  return Message.hash(into:)();
}

uint64_t sub_100C0170C()
{
  uint64_t v0 = type metadata accessor for _NameMap();
  sub_100568B28(v0, qword_10171C180);
  sub_100556B74(v0, (uint64_t)qword_10171C180);
  sub_1005057FC(&qword_101697C78);
  uint64_t v1 = (int *)(sub_1005057FC(&qword_101697C80) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_10117DF40;
  uint64_t v5 = (void *)(v4 + v3);
  unint64_t v6 = v4 + v3 + v1[14];
  *uint64_t v5 = 1;
  *(void *)unint64_t v6 = "rootObjectUUID";
  *(void *)(v6 + 8) = 14;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = enum case for _NameMap.NameDescription.same(_:);
  uint64_t v8 = type metadata accessor for _NameMap.NameDescription();
  uint64_t v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  uint64_t v10 = (char *)v5 + v2 + v1[14];
  *(void *)((char *)v5 + v2) = 2;
  *(void *)uint64_t v10 = "minRequiredVersion";
  *((void *)v10 + 1) = 18;
  v10[16] = 2;
  v9();
  uint64_t v11 = (uint64_t)v5 + 2 * v2 + v1[14];
  *(void *)((char *)v5 + 2 * v2) = 3;
  *(void *)uint64_t v11 = "assetInfos";
  *(void *)(v11 + 8) = 10;
  *(unsigned char *)(v11 + 16) = 2;
  v9();
  return _NameMap.init(dictionaryLiteral:)();
}

uint64_t sub_100C01910(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = v3;
  uint64_t result = dispatch thunk of Decoder.nextFieldNumber()();
  uint64_t v11 = v4;
  if (!v4)
  {
    while (1)
    {
      if (v10) {
        return result;
      }
      if (result == 3) {
        break;
      }
      if (result == 2)
      {
        uint64_t v12 = v11;
        dispatch thunk of Decoder.decodeRepeatedUInt32Field(value:)();
        goto LABEL_5;
      }
      if (result == 1)
      {
        uint64_t v12 = v11;
        sub_100C086D4(a1, v5, a2, a3, (void (*)(void))type metadata accessor for CRLProto_ObjectMetadata);
        goto LABEL_5;
      }
LABEL_6:
      uint64_t result = dispatch thunk of Decoder.nextFieldNumber()();
    }
    type metadata accessor for CRLProto_ObjectMetadata.AssetInfo(0);
    sub_100C091F4(&qword_101697A18, (void (*)(uint64_t))type metadata accessor for CRLProto_ObjectMetadata.AssetInfo);
    uint64_t v12 = v11;
    dispatch thunk of Decoder.decodeRepeatedMessageField<A>(value:)();
LABEL_5:
    uint64_t v11 = v12;
    goto LABEL_6;
  }
  return result;
}

uint64_t sub_100C01A58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result = sub_100C08A68((uint64_t)v3, a1, a2, a3, (uint64_t (*)(void, __n128))type metadata accessor for CRLProto_ObjectMetadata, 1);
  if (!v4)
  {
    if (*(void *)(*v3 + 16)) {
      dispatch thunk of Visitor.visitPackedUInt32Field(value:fieldNumber:)();
    }
    if (*(void *)(v3[1] + 16))
    {
      type metadata accessor for CRLProto_ObjectMetadata.AssetInfo(0);
      sub_100C091F4(&qword_101697A18, (void (*)(uint64_t))type metadata accessor for CRLProto_ObjectMetadata.AssetInfo);
      dispatch thunk of Visitor.visitRepeatedMessageField<A>(value:fieldNumber:)();
    }
    type metadata accessor for CRLProto_ObjectMetadata(0);
    return UnknownStorage.traverse<A>(visitor:)();
  }
  return result;
}

uint64_t sub_100C01BA4@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = _swiftEmptyArrayStorage;
  a2[1] = _swiftEmptyArrayStorage;
  UnknownStorage.init()();
  uint64_t v4 = (char *)a2 + *(int *)(a1 + 28);
  uint64_t v5 = type metadata accessor for CRLProto_Data(0);
  unint64_t v6 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56);

  return v6(v4, 1, 1, v5);
}

unint64_t sub_100C01C34()
{
  return 0xD000000000000017;
}

uint64_t sub_100C01C50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100C01910(a1, a2, a3);
}

uint64_t sub_100C01C68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100C01A58(a1, a2, a3);
}

uint64_t sub_100C01C80(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100C091F4(&qword_101697D48, (void (*)(uint64_t))type metadata accessor for CRLProto_ObjectMetadata);

  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_100C01CFC@<X0>(uint64_t a1@<X8>)
{
  return sub_100C08F10(&qword_10166FD88, (uint64_t)qword_10171C180, a1);
}

uint64_t sub_100C01D20(uint64_t a1)
{
  uint64_t v2 = sub_100C091F4((unint64_t *)&qword_101689D88, (void (*)(uint64_t))type metadata accessor for CRLProto_ObjectMetadata);

  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_100C01D8C()
{
  sub_100C091F4((unint64_t *)&qword_101689D88, (void (*)(uint64_t))type metadata accessor for CRLProto_ObjectMetadata);

  return Message.hash(into:)();
}

void sub_100C01E0C()
{
  v0._countAndFlagsBits = 0x6E4974657373412ELL;
  v0._object = (void *)0xEA00000000006F66;
  String.append(_:)(v0);
  qword_10171C198 = 0xD000000000000017;
  unk_10171C1A0 = 0x800000010127AD00;
}

uint64_t sub_100C01E7C()
{
  uint64_t v0 = type metadata accessor for _NameMap();
  sub_100568B28(v0, qword_10171C1A8);
  sub_100556B74(v0, (uint64_t)qword_10171C1A8);
  sub_1005057FC(&qword_101697C78);
  uint64_t v1 = (int *)(sub_1005057FC(&qword_101697C80) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_10117DF40;
  uint64_t v5 = (void *)(v4 + v3);
  unint64_t v6 = v4 + v3 + v1[14];
  *uint64_t v5 = 1;
  *(void *)unint64_t v6 = "assetUUID";
  *(void *)(v6 + 8) = 9;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = enum case for _NameMap.NameDescription.same(_:);
  uint64_t v8 = type metadata accessor for _NameMap.NameDescription();
  uint64_t v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  char v10 = (char *)v5 + v2 + v1[14];
  *(void *)((char *)v5 + v2) = 2;
  *(void *)char v10 = "filename";
  *((void *)v10 + 1) = 8;
  v10[16] = 2;
  v9();
  uint64_t v11 = (uint64_t)v5 + 2 * v2 + v1[14];
  *(void *)((char *)v5 + 2 * v2) = 3;
  *(void *)uint64_t v11 = "size";
  *(void *)(v11 + 8) = 4;
  *(unsigned char *)(v11 + 16) = 2;
  v9();
  return _NameMap.init(dictionaryLiteral:)();
}

uint64_t sub_100C02080(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = v3;
  uint64_t result = dispatch thunk of Decoder.nextFieldNumber()();
  if (!v4)
  {
    while ((v10 & 1) == 0)
    {
      switch(result)
      {
        case 3:
          dispatch thunk of Decoder.decodeSingularUInt64Field(value:)();
          break;
        case 2:
          dispatch thunk of Decoder.decodeSingularStringField(value:)();
          break;
        case 1:
          sub_100C086D4(a1, v5, a2, a3, (void (*)(void))type metadata accessor for CRLProto_ObjectMetadata.AssetInfo);
          break;
      }
      uint64_t result = dispatch thunk of Decoder.nextFieldNumber()();
    }
  }
  return result;
}

uint64_t sub_100C0215C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result = sub_100C08A68((uint64_t)v3, a1, a2, a3, (uint64_t (*)(void, __n128))type metadata accessor for CRLProto_ObjectMetadata.AssetInfo, 1);
  if (!v4)
  {
    unint64_t v6 = v3[1];
    uint64_t v7 = HIBYTE(v6) & 0xF;
    if ((v6 & 0x2000000000000000) == 0) {
      uint64_t v7 = *v3 & 0xFFFFFFFFFFFFLL;
    }
    if (v7) {
      dispatch thunk of Visitor.visitSingularStringField(value:fieldNumber:)();
    }
    if (v3[2]) {
      dispatch thunk of Visitor.visitSingularUInt64Field(value:fieldNumber:)();
    }
    type metadata accessor for CRLProto_ObjectMetadata.AssetInfo(0);
    return UnknownStorage.traverse<A>(visitor:)();
  }
  return result;
}

uint64_t sub_100C0225C@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = 0;
  a2[1] = 0xE000000000000000;
  a2[2] = 0;
  UnknownStorage.init()();
  uint64_t v4 = (char *)a2 + *(int *)(a1 + 28);
  uint64_t v5 = type metadata accessor for CRLProto_Data(0);
  unint64_t v6 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56);

  return v6(v4, 1, 1, v5);
}

uint64_t sub_100C022EC(uint64_t a1, uint64_t a2)
{
  return sub_100C02314(a1, a2, &qword_10166FD90, &qword_10171C198);
}

uint64_t sub_100C02314(uint64_t a1, uint64_t a2, void *a3, uint64_t *a4)
{
  if (*a3 != -1) {
    swift_once();
  }
  uint64_t v5 = *a4;
  swift_bridgeObjectRetain();
  return v5;
}

uint64_t sub_100C0236C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100C02080(a1, a2, a3);
}

uint64_t sub_100C02384(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100C0215C(a1, a2, a3);
}

uint64_t sub_100C0239C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100C091F4(&qword_101697D50, (void (*)(uint64_t))type metadata accessor for CRLProto_ObjectMetadata.AssetInfo);

  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_100C02418@<X0>(uint64_t a1@<X8>)
{
  return sub_100C08F10(&qword_10166FD98, (uint64_t)qword_10171C1A8, a1);
}

uint64_t sub_100C0243C(uint64_t a1)
{
  uint64_t v2 = sub_100C091F4(&qword_101697A18, (void (*)(uint64_t))type metadata accessor for CRLProto_ObjectMetadata.AssetInfo);

  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_100C024A8()
{
  sub_100C091F4(&qword_101697A18, (void (*)(uint64_t))type metadata accessor for CRLProto_ObjectMetadata.AssetInfo);

  return Message.hash(into:)();
}

uint64_t sub_100C02528()
{
  uint64_t v0 = type metadata accessor for _NameMap();
  sub_100568B28(v0, qword_10171C1C0);
  sub_100556B74(v0, (uint64_t)qword_10171C1C0);
  sub_1005057FC(&qword_101697C78);
  uint64_t v1 = (int *)(sub_1005057FC(&qword_101697C80) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_10117D8C0;
  uint64_t v5 = (void *)(v4 + v3);
  unint64_t v6 = v4 + v3 + v1[14];
  *uint64_t v5 = 1;
  *(void *)unint64_t v6 = "followerUuidData";
  *(void *)(v6 + 8) = 16;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = enum case for _NameMap.NameDescription.same(_:);
  uint64_t v8 = type metadata accessor for _NameMap.NameDescription();
  uint64_t v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  char v10 = (char *)v5 + v2 + v1[14];
  *(void *)((char *)v5 + v2) = 2;
  *(void *)char v10 = "hostUuidData";
  *((void *)v10 + 1) = 12;
  v10[16] = 2;
  v9();
  return _NameMap.init(dictionaryLiteral:)();
}

uint64_t sub_100C026E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = v3;
  while (1)
  {
    uint64_t result = dispatch thunk of Decoder.nextFieldNumber()();
    if (v4 || (v10 & 1) != 0) {
      break;
    }
    if (result == 2)
    {
      sub_100C02788();
    }
    else if (result == 1)
    {
      sub_100C05434(a1, v5, a2, a3, (void (*)(void))type metadata accessor for CRLProto_StartOrEndFollow);
    }
  }
  return result;
}

uint64_t sub_100C02788()
{
  return dispatch thunk of Decoder.decodeSingularMessageField<A>(value:)();
}

uint64_t sub_100C02838(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result = sub_100C054E8(v3, a1, a2, a3, (uint64_t (*)(void, __n128))type metadata accessor for CRLProto_StartOrEndFollow);
  if (!v4)
  {
    sub_100C028BC(v3, a1, a2, a3);
    return UnknownStorage.traverse<A>(visitor:)();
  }
  return result;
}

uint64_t sub_100C028BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v16[1] = a4;
  uint64_t v5 = sub_1005057FC((uint64_t *)&unk_101674160);
  __chkstk_darwin(v5 - 8, v6);
  uint64_t v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for CRLProto_Data(0);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9, v11);
  uint64_t v13 = (char *)v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for CRLProto_StartOrEndFollow(0);
  sub_100522E9C(a1 + *(int *)(v14 + 24), (uint64_t)v8, (uint64_t *)&unk_101674160);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1) {
    return sub_100522F00((uint64_t)v8, (uint64_t *)&unk_101674160);
  }
  sub_100C169A0((uint64_t)v8, (uint64_t)v13, type metadata accessor for CRLProto_Data);
  sub_100C091F4(&qword_101697C38, (void (*)(uint64_t))type metadata accessor for CRLProto_Data);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)();
  return sub_100C16A08((uint64_t)v13, type metadata accessor for CRLProto_Data);
}

uint64_t sub_100C02AB4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  UnknownStorage.init()();
  uint64_t v4 = a2 + *(int *)(a1 + 20);
  uint64_t v5 = type metadata accessor for CRLProto_Data(0);
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56);
  ((void (*)(void *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t))v8)((void *)(v5 - 8), v4, 1, 1, v5);
  uint64_t v6 = a2 + *(int *)(a1 + 24);

  return v8(v6, 1, 1, v5);
}

unint64_t sub_100C02B70()
{
  return 0xD000000000000019;
}

uint64_t sub_100C02B8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100C026E0(a1, a2, a3);
}

uint64_t sub_100C02BA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100C02838(a1, a2, a3);
}

uint64_t sub_100C02BBC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100C091F4(&qword_101697D58, (void (*)(uint64_t))type metadata accessor for CRLProto_StartOrEndFollow);

  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_100C02C38@<X0>(uint64_t a1@<X8>)
{
  return sub_100C08F10(&qword_10166FDA0, (uint64_t)qword_10171C1C0, a1);
}

uint64_t sub_100C02C5C(uint64_t a1)
{
  uint64_t v2 = sub_100C091F4((unint64_t *)&qword_10168BA38, (void (*)(uint64_t))type metadata accessor for CRLProto_StartOrEndFollow);

  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_100C02CC8()
{
  sub_100C091F4((unint64_t *)&qword_10168BA38, (void (*)(uint64_t))type metadata accessor for CRLProto_StartOrEndFollow);

  return Message.hash(into:)();
}

uint64_t sub_100C02D48()
{
  uint64_t v0 = type metadata accessor for _NameMap();
  sub_100568B28(v0, qword_10171C1D8);
  sub_100556B74(v0, (uint64_t)qword_10171C1D8);
  sub_1005057FC(&qword_101697C78);
  uint64_t v1 = (int *)(sub_1005057FC(&qword_101697C80) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_10118E4B0;
  unint64_t v5 = v4 + v3;
  unint64_t v6 = v4 + v3 + v1[14];
  *(void *)(v4 + v3) = 1;
  *(void *)unint64_t v6 = "presenceUuidData";
  *(void *)(v6 + 8) = 16;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = enum case for _NameMap.NameDescription.same(_:);
  uint64_t v8 = type metadata accessor for _NameMap.NameDescription();
  uint64_t v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  unint64_t v10 = v5 + v2 + v1[14];
  *(void *)(v5 + v2) = 2;
  *(void *)unint64_t v10 = "viewScale";
  *(void *)(v10 + 8) = 9;
  *(unsigned char *)(v10 + 16) = 2;
  v9();
  uint64_t v11 = (void *)(v5 + 2 * v2);
  uint64_t v12 = (char *)v11 + v1[14];
  *uint64_t v11 = 3;
  *(void *)uint64_t v12 = "visibleRectOrigin";
  *((void *)v12 + 1) = 17;
  v12[16] = 2;
  v9();
  uint64_t v13 = (void *)(v5 + 3 * v2);
  uint64_t v14 = (char *)v13 + v1[14];
  *uint64_t v13 = 4;
  *(void *)uint64_t v14 = "visibleRectSize";
  *((void *)v14 + 1) = 15;
  v14[16] = 2;
  v9();
  uint64_t v15 = v5 + 4 * v2 + v1[14];
  *(void *)(v5 + 4 * v2) = 5;
  *(void *)uint64_t v15 = "timestamp";
  *(void *)(v15 + 8) = 9;
  *(unsigned char *)(v15 + 16) = 2;
  v9();
  return _NameMap.init(dictionaryLiteral:)();
}

uint64_t sub_100C02FCC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = v3;
  uint64_t result = dispatch thunk of Decoder.nextFieldNumber()();
  if (!v4)
  {
    while ((v10 & 1) == 0)
    {
      switch(result)
      {
        case 1:
          sub_100C086D4(a1, v5, a2, a3, (void (*)(void))type metadata accessor for CRLProto_FollowViewportState);
          break;
        case 2:
          dispatch thunk of Decoder.decodeSingularFloatField(value:)();
          break;
        case 3:
          sub_100C03108();
          break;
        case 4:
          sub_100C031B8();
          break;
        case 5:
          dispatch thunk of Decoder.decodeSingularUInt64Field(value:)();
          break;
        default:
          break;
      }
      uint64_t result = dispatch thunk of Decoder.nextFieldNumber()();
    }
  }
  return result;
}

uint64_t sub_100C03108()
{
  return dispatch thunk of Decoder.decodeSingularMessageField<A>(value:)();
}

uint64_t sub_100C031B8()
{
  return dispatch thunk of Decoder.decodeSingularMessageField<A>(value:)();
}

uint64_t sub_100C03268(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result = sub_100C08A68(v3, a1, a2, a3, (uint64_t (*)(void, __n128))type metadata accessor for CRLProto_FollowViewportState, 1);
  if (!v4)
  {
    if (*(float *)v3 != 0.0) {
      dispatch thunk of Visitor.visitSingularFloatField(value:fieldNumber:)();
    }
    sub_100C0339C(v3, a1, a2, a3);
    sub_100C03594(v3, a1, a2, a3);
    if (*(void *)(v3 + 8)) {
      dispatch thunk of Visitor.visitSingularUInt64Field(value:fieldNumber:)();
    }
    type metadata accessor for CRLProto_FollowViewportState(0);
    return UnknownStorage.traverse<A>(visitor:)();
  }
  return result;
}

uint64_t sub_100C0339C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v16[1] = a4;
  uint64_t v5 = sub_1005057FC(&qword_10168E570);
  __chkstk_darwin(v5 - 8, v6);
  uint64_t v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for CRLProto_Point(0);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9, v11);
  uint64_t v13 = (char *)v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for CRLProto_FollowViewportState(0);
  sub_100522E9C(a1 + *(int *)(v14 + 32), (uint64_t)v8, &qword_10168E570);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1) {
    return sub_100522F00((uint64_t)v8, &qword_10168E570);
  }
  sub_100C169A0((uint64_t)v8, (uint64_t)v13, type metadata accessor for CRLProto_Point);
  sub_100C091F4(&qword_101689E10, (void (*)(uint64_t))type metadata accessor for CRLProto_Point);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)();
  return sub_100C16A08((uint64_t)v13, type metadata accessor for CRLProto_Point);
}

uint64_t sub_100C03594(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v16[1] = a4;
  uint64_t v5 = sub_1005057FC(&qword_10168E578);
  __chkstk_darwin(v5 - 8, v6);
  uint64_t v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for CRLProto_Size(0);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9, v11);
  uint64_t v13 = (char *)v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for CRLProto_FollowViewportState(0);
  sub_100522E9C(a1 + *(int *)(v14 + 36), (uint64_t)v8, &qword_10168E578);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1) {
    return sub_100522F00((uint64_t)v8, &qword_10168E578);
  }
  sub_100C169A0((uint64_t)v8, (uint64_t)v13, type metadata accessor for CRLProto_Size);
  sub_100C091F4(&qword_101689E08, (void (*)(uint64_t))type metadata accessor for CRLProto_Size);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)();
  return sub_100C16A08((uint64_t)v13, type metadata accessor for CRLProto_Size);
}

uint64_t sub_100C0378C@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  *(_DWORD *)a2 = 0;
  *(void *)(a2 + 8) = 0;
  UnknownStorage.init()();
  uint64_t v4 = a2 + a1[7];
  uint64_t v5 = type metadata accessor for CRLProto_Data(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v4, 1, 1, v5);
  uint64_t v6 = a2 + a1[8];
  uint64_t v7 = type metadata accessor for CRLProto_Point(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v6, 1, 1, v7);
  uint64_t v8 = a2 + a1[9];
  uint64_t v9 = type metadata accessor for CRLProto_Size(0);
  uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56);

  return v10(v8, 1, 1, v9);
}

unint64_t sub_100C038B0()
{
  return 0xD00000000000001CLL;
}

uint64_t sub_100C038CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100C02FCC(a1, a2, a3);
}

uint64_t sub_100C038E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100C03268(a1, a2, a3);
}

uint64_t sub_100C038FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100C091F4(&qword_101697D60, (void (*)(uint64_t))type metadata accessor for CRLProto_FollowViewportState);

  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_100C03978@<X0>(uint64_t a1@<X8>)
{
  return sub_100C08F10(&qword_10166FDA8, (uint64_t)qword_10171C1D8, a1);
}

uint64_t sub_100C0399C(uint64_t a1)
{
  uint64_t v2 = sub_100C091F4((unint64_t *)&qword_10168E580, (void (*)(uint64_t))type metadata accessor for CRLProto_FollowViewportState);

  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_100C03A08()
{
  sub_100C091F4((unint64_t *)&qword_10168E580, (void (*)(uint64_t))type metadata accessor for CRLProto_FollowViewportState);

  return Message.hash(into:)();
}

uint64_t sub_100C03A88()
{
  uint64_t v0 = type metadata accessor for _NameMap();
  sub_100568B28(v0, qword_10171C1F0);
  sub_100556B74(v0, (uint64_t)qword_10171C1F0);
  sub_1005057FC(&qword_101697C78);
  uint64_t v1 = (int *)(sub_1005057FC(&qword_101697C80) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_10117D8C0;
  uint64_t v5 = (void *)(v4 + v3);
  unint64_t v6 = v4 + v3 + v1[14];
  *uint64_t v5 = 1;
  *(void *)unint64_t v6 = "hostUuidData";
  *(void *)(v6 + 8) = 12;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = enum case for _NameMap.NameDescription.same(_:);
  uint64_t v8 = type metadata accessor for _NameMap.NameDescription();
  uint64_t v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  uint64_t v10 = (char *)v5 + v2 + v1[14];
  *(void *)((char *)v5 + v2) = 2;
  *(void *)uint64_t v10 = "reason";
  *((void *)v10 + 1) = 6;
  v10[16] = 2;
  v9();
  return _NameMap.init(dictionaryLiteral:)();
}

uint64_t sub_100C03C40()
{
  while (1)
  {
    uint64_t result = dispatch thunk of Decoder.nextFieldNumber()();
    if (v0 || (v2 & 1) != 0) {
      break;
    }
    if (result == 2)
    {
      dispatch thunk of Decoder.decodeSingularUInt64Field(value:)();
    }
    else if (result == 1)
    {
      sub_100C03CD0();
    }
  }
  return result;
}

uint64_t sub_100C03CD0()
{
  return dispatch thunk of Decoder.decodeSingularMessageField<A>(value:)();
}

uint64_t sub_100C03D80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result = sub_100C03E2C((uint64_t)v3, a1, a2, a3);
  if (!v4)
  {
    if (*v3) {
      dispatch thunk of Visitor.visitSingularUInt64Field(value:fieldNumber:)();
    }
    type metadata accessor for CRLProto_RefuseOrEndFollow(0);
    return UnknownStorage.traverse<A>(visitor:)();
  }
  return result;
}

uint64_t sub_100C03E2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v16[1] = a4;
  uint64_t v5 = sub_1005057FC((uint64_t *)&unk_101674160);
  __chkstk_darwin(v5 - 8, v6);
  uint64_t v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for CRLProto_Data(0);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9, v11);
  uint64_t v13 = (char *)v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for CRLProto_RefuseOrEndFollow(0);
  sub_100522E9C(a1 + *(int *)(v14 + 24), (uint64_t)v8, (uint64_t *)&unk_101674160);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1) {
    return sub_100522F00((uint64_t)v8, (uint64_t *)&unk_101674160);
  }
  sub_100C169A0((uint64_t)v8, (uint64_t)v13, type metadata accessor for CRLProto_Data);
  sub_100C091F4(&qword_101697C38, (void (*)(uint64_t))type metadata accessor for CRLProto_Data);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)();
  return sub_100C16A08((uint64_t)v13, type metadata accessor for CRLProto_Data);
}

unint64_t sub_100C04028()
{
  return 0xD00000000000001ALL;
}

uint64_t sub_100C04044()
{
  return sub_100C03C40();
}

uint64_t sub_100C0405C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100C03D80(a1, a2, a3);
}

uint64_t sub_100C04074(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100C091F4(&qword_101697D70, (void (*)(uint64_t))type metadata accessor for CRLProto_RefuseOrEndFollow);

  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_100C040F0@<X0>(uint64_t a1@<X8>)
{
  return sub_100C08F10(&qword_10166FDB0, (uint64_t)qword_10171C1F0, a1);
}

uint64_t sub_100C04114(uint64_t a1)
{
  uint64_t v2 = sub_100C091F4((unint64_t *)&qword_1016979C8, (void (*)(uint64_t))type metadata accessor for CRLProto_RefuseOrEndFollow);

  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_100C04180()
{
  sub_100C091F4((unint64_t *)&qword_1016979C8, (void (*)(uint64_t))type metadata accessor for CRLProto_RefuseOrEndFollow);

  return Message.hash(into:)();
}

uint64_t sub_100C04200()
{
  uint64_t v0 = type metadata accessor for _NameMap();
  sub_100568B28(v0, qword_10171C208);
  sub_100556B74(v0, (uint64_t)qword_10171C208);
  sub_1005057FC(&qword_101697C78);
  uint64_t v1 = (int *)(sub_1005057FC(&qword_101697C80) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_101186E40;
  unint64_t v5 = v4 + v3;
  unint64_t v6 = v4 + v3 + v1[14];
  *(void *)(v4 + v3) = 1;
  *(void *)unint64_t v6 = "ownerUuidData";
  *(void *)(v6 + 8) = 13;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = enum case for _NameMap.NameDescription.same(_:);
  uint64_t v8 = type metadata accessor for _NameMap.NameDescription();
  uint64_t v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  unint64_t v10 = v5 + v2 + v1[14];
  *(void *)(v5 + v2) = 2;
  *(void *)unint64_t v10 = "manipulationState";
  *(void *)(v10 + 8) = 17;
  *(unsigned char *)(v10 + 16) = 2;
  v9();
  uint64_t v11 = (void *)(v5 + 2 * v2);
  uint64_t v12 = (char *)v11 + v1[14];
  *uint64_t v11 = 3;
  *(void *)uint64_t v12 = "viewScale";
  *((void *)v12 + 1) = 9;
  v12[16] = 2;
  v9();
  uint64_t v13 = (void *)(v5 + 3 * v2);
  uint64_t v14 = (char *)v13 + v1[14];
  *uint64_t v13 = 4;
  *(void *)uint64_t v14 = "unscaledContentOffset";
  *((void *)v14 + 1) = 21;
  v14[16] = 2;
  v9();
  uint64_t v15 = (void *)(v5 + 4 * v2);
  unint64_t v16 = (char *)v15 + v1[14];
  *uint64_t v15 = 5;
  *(void *)unint64_t v16 = "isAutoscrolling";
  *((void *)v16 + 1) = 15;
  v16[16] = 2;
  v9();
  uint64_t v17 = (void *)(v5 + 5 * v2);
  unint64_t v18 = (char *)v17 + v1[14];
  *uint64_t v17 = 6;
  *(void *)unint64_t v18 = "timestamp";
  *((void *)v18 + 1) = 9;
  v18[16] = 2;
  v9();
  return _NameMap.init(dictionaryLiteral:)();
}

uint64_t sub_100C044BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = v3;
  uint64_t result = dispatch thunk of Decoder.nextFieldNumber()();
  if (!v4)
  {
    while ((v10 & 1) == 0)
    {
      switch(result)
      {
        case 1:
          sub_100C04610(a1, v5, a2, a3, (void (*)(void))type metadata accessor for CRLProto_CopresenceViewportState);
          break;
        case 2:
        case 6:
          dispatch thunk of Decoder.decodeSingularUInt64Field(value:)();
          break;
        case 3:
          dispatch thunk of Decoder.decodeSingularFloatField(value:)();
          break;
        case 4:
          sub_100C046C4();
          break;
        case 5:
          dispatch thunk of Decoder.decodeSingularBoolField(value:)();
          break;
        default:
          break;
      }
      uint64_t result = dispatch thunk of Decoder.nextFieldNumber()();
    }
  }
  return result;
}

uint64_t sub_100C04610(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(void))
{
  return dispatch thunk of Decoder.decodeSingularMessageField<A>(value:)();
}

uint64_t sub_100C046C4()
{
  return dispatch thunk of Decoder.decodeSingularMessageField<A>(value:)();
}

uint64_t sub_100C04774(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result = sub_100C048E4(v3, a1, a2, a3, (uint64_t (*)(void, __n128))type metadata accessor for CRLProto_CopresenceViewportState, 1);
  if (!v4)
  {
    if (*(void *)v3) {
      dispatch thunk of Visitor.visitSingularUInt64Field(value:fieldNumber:)();
    }
    if (*(float *)(v3 + 8) != 0.0) {
      dispatch thunk of Visitor.visitSingularFloatField(value:fieldNumber:)();
    }
    sub_100C04AE8(v3, a1, a2, a3);
    if (*(unsigned char *)(v3 + 12) == 1) {
      dispatch thunk of Visitor.visitSingularBoolField(value:fieldNumber:)();
    }
    if (*(void *)(v3 + 16)) {
      dispatch thunk of Visitor.visitSingularUInt64Field(value:fieldNumber:)();
    }
    type metadata accessor for CRLProto_CopresenceViewportState(0);
    return UnknownStorage.traverse<A>(visitor:)();
  }
  return result;
}

uint64_t sub_100C048E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void, __n128), uint64_t a6)
{
  v20[0] = a6;
  v20[1] = a3;
  v20[3] = a4;
  uint64_t v8 = sub_1005057FC((uint64_t *)&unk_101674160);
  __chkstk_darwin(v8 - 8, v9);
  uint64_t v11 = (char *)v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for CRLProto_Data(0);
  uint64_t v13 = *(void *)(v12 - 8);
  __n128 v15 = __chkstk_darwin(v12, v14);
  uint64_t v17 = (char *)v20 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = a5(0, v15);
  sub_100522E9C(a1 + *(int *)(v18 + 36), (uint64_t)v11, (uint64_t *)&unk_101674160);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1) {
    return sub_100522F00((uint64_t)v11, (uint64_t *)&unk_101674160);
  }
  sub_100C169A0((uint64_t)v11, (uint64_t)v17, type metadata accessor for CRLProto_Data);
  sub_100C091F4(&qword_101697C38, (void (*)(uint64_t))type metadata accessor for CRLProto_Data);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)();
  return sub_100C16A08((uint64_t)v17, type metadata accessor for CRLProto_Data);
}

uint64_t sub_100C04AE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v16[1] = a4;
  uint64_t v5 = sub_1005057FC(&qword_10168E570);
  __chkstk_darwin(v5 - 8, v6);
  uint64_t v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for CRLProto_Point(0);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9, v11);
  uint64_t v13 = (char *)v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for CRLProto_CopresenceViewportState(0);
  sub_100522E9C(a1 + *(int *)(v14 + 40), (uint64_t)v8, &qword_10168E570);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1) {
    return sub_100522F00((uint64_t)v8, &qword_10168E570);
  }
  sub_100C169A0((uint64_t)v8, (uint64_t)v13, type metadata accessor for CRLProto_Point);
  sub_100C091F4(&qword_101689E10, (void (*)(uint64_t))type metadata accessor for CRLProto_Point);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)();
  return sub_100C16A08((uint64_t)v13, type metadata accessor for CRLProto_Point);
}

uint64_t sub_100C04CE0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = 0;
  *(_DWORD *)(a2 + 8) = 0;
  *(unsigned char *)(a2 + 12) = 0;
  *(void *)(a2 + 16) = 0;
  UnknownStorage.init()();
  uint64_t v4 = a2 + *(int *)(a1 + 36);
  uint64_t v5 = type metadata accessor for CRLProto_Data(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v4, 1, 1, v5);
  uint64_t v6 = a2 + *(int *)(a1 + 40);
  uint64_t v7 = type metadata accessor for CRLProto_Point(0);
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);

  return v8(v6, 1, 1, v7);
}

unint64_t sub_100C04DC4()
{
  return 0xD000000000000020;
}

uint64_t sub_100C04DE0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 32);
  uint64_t v5 = type metadata accessor for UnknownStorage();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);

  return v6(a2, v4, v5);
}

uint64_t sub_100C04E50(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2 + *(int *)(a2 + 32);
  uint64_t v5 = type metadata accessor for UnknownStorage();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 40);

  return v6(v4, a1, v5);
}

uint64_t sub_100C04EC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100C044BC(a1, a2, a3);
}

uint64_t sub_100C04ED8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100C04774(a1, a2, a3);
}

uint64_t sub_100C04EF0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100C091F4(&qword_101697D78, (void (*)(uint64_t))type metadata accessor for CRLProto_CopresenceViewportState);

  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_100C04F6C@<X0>(uint64_t a1@<X8>)
{
  return sub_100C08F10(&qword_10166FDB8, (uint64_t)qword_10171C208, a1);
}

uint64_t sub_100C04F90(uint64_t a1)
{
  uint64_t v2 = sub_100C091F4(&qword_1016979A8, (void (*)(uint64_t))type metadata accessor for CRLProto_CopresenceViewportState);

  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_100C04FFC()
{
  sub_100C091F4(&qword_1016979A8, (void (*)(uint64_t))type metadata accessor for CRLProto_CopresenceViewportState);

  return Message.hash(into:)();
}

uint64_t sub_100C0507C(uint64_t a1)
{
  return sub_100C052D8(a1, qword_10171C220, (uint64_t)"itemUuidData", 12);
}

unint64_t sub_100C05094()
{
  return 0xD00000000000001CLL;
}

uint64_t sub_100C050B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100C00534(a1, a2, a3, (void (*)(void))type metadata accessor for CRLProto_BoardItemIdentifier);
}

uint64_t sub_100C050DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100C005B8(a1, a2, a3, (uint64_t (*)(void, __n128))type metadata accessor for CRLProto_BoardItemIdentifier);
}

uint64_t sub_100C05108(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100C091F4(&qword_101697D80, (void (*)(uint64_t))type metadata accessor for CRLProto_BoardItemIdentifier);

  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_100C05184@<X0>(uint64_t a1@<X8>)
{
  return sub_100C08F10(&qword_10166FDC0, (uint64_t)qword_10171C220, a1);
}

uint64_t sub_100C051A8(uint64_t a1)
{
  uint64_t v2 = sub_100C091F4((unint64_t *)&qword_101673FA0, (void (*)(uint64_t))type metadata accessor for CRLProto_BoardItemIdentifier);

  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_100C05214()
{
  sub_100C091F4((unint64_t *)&qword_101673FA0, (void (*)(uint64_t))type metadata accessor for CRLProto_BoardItemIdentifier);

  return Message.hash(into:)();
}

uint64_t sub_100C05290(uint64_t a1, uint64_t a2)
{
  return sub_100C15864(a1, a2, (uint64_t (*)(void, __n128))type metadata accessor for CRLProto_BoardItemIdentifier) & 1;
}

uint64_t sub_100C052C0(uint64_t a1)
{
  return sub_100C052D8(a1, qword_10171C238, (uint64_t)"boardIdentifierData", 19);
}

uint64_t sub_100C052D8(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = type metadata accessor for _NameMap();
  sub_100568B28(v7, a2);
  sub_100556B74(v7, (uint64_t)a2);
  sub_1005057FC(&qword_101697C78);
  uint64_t v8 = (int *)(sub_1005057FC(&qword_101697C80) - 8);
  unint64_t v9 = (*(unsigned __int8 *)(*(void *)v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v8 + 80);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_10117E810;
  unint64_t v11 = v10 + v9 + v8[14];
  *(void *)(v10 + v9) = 1;
  *(void *)unint64_t v11 = a3;
  *(void *)(v11 + 8) = a4;
  *(unsigned char *)(v11 + 16) = 2;
  uint64_t v12 = enum case for _NameMap.NameDescription.same(_:);
  uint64_t v13 = type metadata accessor for _NameMap.NameDescription();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 104))(v11, v12, v13);
  return _NameMap.init(dictionaryLiteral:)();
}

uint64_t sub_100C05434(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(void))
{
  return dispatch thunk of Decoder.decodeSingularMessageField<A>(value:)();
}

uint64_t sub_100C054E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void, __n128))
{
  v19[3] = a4;
  v19[1] = a3;
  uint64_t v7 = sub_1005057FC((uint64_t *)&unk_101674160);
  __chkstk_darwin(v7 - 8, v8);
  uint64_t v10 = (char *)v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for CRLProto_Data(0);
  uint64_t v12 = *(void *)(v11 - 8);
  __n128 v14 = __chkstk_darwin(v11, v13);
  uint64_t v16 = (char *)v19 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = a5(0, v14);
  sub_100522E9C(a1 + *(int *)(v17 + 20), (uint64_t)v10, (uint64_t *)&unk_101674160);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1) {
    return sub_100522F00((uint64_t)v10, (uint64_t *)&unk_101674160);
  }
  sub_100C169A0((uint64_t)v10, (uint64_t)v16, type metadata accessor for CRLProto_Data);
  sub_100C091F4(&qword_101697C38, (void (*)(uint64_t))type metadata accessor for CRLProto_Data);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)();
  return sub_100C16A08((uint64_t)v16, type metadata accessor for CRLProto_Data);
}

unint64_t sub_100C056EC()
{
  return 0xD000000000000018;
}

uint64_t sub_100C05708@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for UnknownStorage();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);

  return v4(a1, v1, v3);
}

uint64_t sub_100C05770(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for UnknownStorage();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 40);

  return v4(v1, a1, v3);
}

uint64_t sub_100C057D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100C00534(a1, a2, a3, (void (*)(void))type metadata accessor for CRLProto_BoardIdentifier);
}

uint64_t sub_100C05804(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100C005B8(a1, a2, a3, (uint64_t (*)(void, __n128))type metadata accessor for CRLProto_BoardIdentifier);
}

uint64_t sub_100C05830(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100C091F4(&qword_101697D88, (void (*)(uint64_t))type metadata accessor for CRLProto_BoardIdentifier);

  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_100C058AC@<X0>(uint64_t a1@<X8>)
{
  return sub_100C08F10(&qword_10166FDC8, (uint64_t)qword_10171C238, a1);
}

uint64_t sub_100C058D0(uint64_t a1)
{
  uint64_t v2 = sub_100C091F4(&qword_101697970, (void (*)(uint64_t))type metadata accessor for CRLProto_BoardIdentifier);

  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_100C0593C()
{
  sub_100C091F4(&qword_101697970, (void (*)(uint64_t))type metadata accessor for CRLProto_BoardIdentifier);

  return Message.hash(into:)();
}

uint64_t sub_100C059B8(uint64_t a1, uint64_t a2)
{
  return sub_100C15864(a1, a2, (uint64_t (*)(void, __n128))type metadata accessor for CRLProto_BoardIdentifier) & 1;
}

uint64_t sub_100C059E8()
{
  uint64_t v0 = type metadata accessor for _NameMap();
  sub_100568B28(v0, qword_10171C250);
  sub_100556B74(v0, (uint64_t)qword_10171C250);
  sub_1005057FC(&qword_101697C78);
  uint64_t v1 = (int *)(sub_1005057FC(&qword_101697C80) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_10117D8C0;
  uint64_t v5 = (void *)(v4 + v3);
  unint64_t v6 = v4 + v3 + v1[14];
  *uint64_t v5 = 1;
  *(void *)unint64_t v6 = "payloadTypeValue";
  *(void *)(v6 + 8) = 16;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = enum case for _NameMap.NameDescription.same(_:);
  uint64_t v8 = type metadata accessor for _NameMap.NameDescription();
  uint64_t v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  uint64_t v10 = (char *)v5 + v2 + v1[14];
  *(void *)((char *)v5 + v2) = 2;
  *(void *)uint64_t v10 = "payload";
  *((void *)v10 + 1) = 7;
  v10[16] = 2;
  v9();
  return _NameMap.init(dictionaryLiteral:)();
}

uint64_t sub_100C05BA0()
{
  return dispatch thunk of Decoder.decodeSingularMessageField<A>(value:)();
}

uint64_t sub_100C05C50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v16[1] = a4;
  uint64_t v5 = sub_1005057FC((uint64_t *)&unk_101674160);
  __chkstk_darwin(v5 - 8, v6);
  uint64_t v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for CRLProto_Data(0);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9, v11);
  uint64_t v13 = (char *)v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for CRLProto_RealTimeOpaqueChangeRecord(0);
  sub_100522E9C(a1 + *(int *)(v14 + 24), (uint64_t)v8, (uint64_t *)&unk_101674160);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1) {
    return sub_100522F00((uint64_t)v8, (uint64_t *)&unk_101674160);
  }
  sub_100C169A0((uint64_t)v8, (uint64_t)v13, type metadata accessor for CRLProto_Data);
  sub_100C091F4(&qword_101697C38, (void (*)(uint64_t))type metadata accessor for CRLProto_Data);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)();
  return sub_100C16A08((uint64_t)v13, type metadata accessor for CRLProto_Data);
}

uint64_t sub_100C05E48@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = 0;
  UnknownStorage.init()();
  uint64_t v4 = (char *)a2 + *(int *)(a1 + 24);
  uint64_t v5 = type metadata accessor for CRLProto_Data(0);
  uint64_t v6 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56);

  return v6(v4, 1, 1, v5);
}

unint64_t sub_100C05ED0()
{
  return 0xD000000000000023;
}

uint64_t sub_100C05EEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100C069BC(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t))&dispatch thunk of Decoder.decodeSingularInt64Field(value:), (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_100C05BA0);
}

uint64_t sub_100C05F2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100C06B14(a1, a2, a3, (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))&dispatch thunk of Visitor.visitSingularInt64Field(value:fieldNumber:), (uint64_t (*)(void *, uint64_t, uint64_t, uint64_t))sub_100C05C50, (void (*)(void))type metadata accessor for CRLProto_RealTimeOpaqueChangeRecord);
}

uint64_t sub_100C05F80(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100C091F4(&qword_101697D90, (void (*)(uint64_t))type metadata accessor for CRLProto_RealTimeOpaqueChangeRecord);

  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_100C05FFC@<X0>(uint64_t a1@<X8>)
{
  return sub_100C08F10(&qword_10166FDD0, (uint64_t)qword_10171C250, a1);
}

uint64_t sub_100C06020(uint64_t a1)
{
  uint64_t v2 = sub_100C091F4(&qword_10168C1C8, (void (*)(uint64_t))type metadata accessor for CRLProto_RealTimeOpaqueChangeRecord);

  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_100C0608C()
{
  sub_100C091F4(&qword_10168C1C8, (void (*)(uint64_t))type metadata accessor for CRLProto_RealTimeOpaqueChangeRecord);

  return Message.hash(into:)();
}

uint64_t sub_100C06108(char *a1, char *a2)
{
  return sub_100C0CF4C(a1, a2, (uint64_t (*)(void, __n128))type metadata accessor for CRLProto_RealTimeOpaqueChangeRecord) & 1;
}

uint64_t sub_100C06138()
{
  uint64_t v0 = type metadata accessor for _NameMap();
  sub_100568B28(v0, qword_10171C268);
  sub_100556B74(v0, (uint64_t)qword_10171C268);
  sub_1005057FC(&qword_101697C78);
  uint64_t v1 = (int *)(sub_1005057FC(&qword_101697C80) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_10117D8C0;
  uint64_t v5 = (void *)(v4 + v3);
  unint64_t v6 = v4 + v3 + v1[14];
  *uint64_t v5 = 1;
  *(void *)unint64_t v6 = "version";
  *(void *)(v6 + 8) = 7;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = enum case for _NameMap.NameDescription.same(_:);
  uint64_t v8 = type metadata accessor for _NameMap.NameDescription();
  uint64_t v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  uint64_t v10 = (char *)v5 + v2 + v1[14];
  *(void *)((char *)v5 + v2) = 2;
  *(void *)uint64_t v10 = "opaqueChangeRecordDatas";
  *((void *)v10 + 1) = 23;
  v10[16] = 2;
  v9();
  return _NameMap.init(dictionaryLiteral:)();
}

uint64_t sub_100C062F0()
{
  uint64_t result = dispatch thunk of Decoder.nextFieldNumber()();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      if (result == 2)
      {
        type metadata accessor for CRLProto_Data(0);
        sub_100C091F4(&qword_101697C38, (void (*)(uint64_t))type metadata accessor for CRLProto_Data);
        dispatch thunk of Decoder.decodeRepeatedMessageField<A>(value:)();
      }
      else if (result == 1)
      {
        dispatch thunk of Decoder.decodeSingularUInt64Field(value:)();
      }
      uint64_t result = dispatch thunk of Decoder.nextFieldNumber()();
    }
  }
  return result;
}

uint64_t sub_100C0640C()
{
  if (!*v0 || (uint64_t result = dispatch thunk of Visitor.visitSingularUInt64Field(value:fieldNumber:)(), !v1))
  {
    if (!*(void *)(v0[1] + 16)
      || (type metadata accessor for CRLProto_Data(0),
          sub_100C091F4(&qword_101697C38, (void (*)(uint64_t))type metadata accessor for CRLProto_Data),
          uint64_t result = dispatch thunk of Visitor.visitRepeatedMessageField<A>(value:fieldNumber:)(),
          !v1))
    {
      type metadata accessor for CRLProto_RealTimeMessage(0);
      return UnknownStorage.traverse<A>(visitor:)();
    }
  }
  return result;
}

uint64_t sub_100C06520@<X0>(void *a1@<X8>)
{
  *a1 = 0;
  a1[1] = _swiftEmptyArrayStorage;
  return UnknownStorage.init()();
}

unint64_t sub_100C0654C()
{
  return 0xD000000000000018;
}

uint64_t sub_100C06568@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 24);
  uint64_t v5 = type metadata accessor for UnknownStorage();
  unint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);

  return v6(a2, v4, v5);
}

uint64_t sub_100C065D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2 + *(int *)(a2 + 24);
  uint64_t v5 = type metadata accessor for UnknownStorage();
  unint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 40);

  return v6(v4, a1, v5);
}

uint64_t sub_100C06648()
{
  return sub_100C062F0();
}

uint64_t sub_100C06660()
{
  return sub_100C0640C();
}

uint64_t sub_100C06678(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100C091F4(&qword_101697D98, (void (*)(uint64_t))type metadata accessor for CRLProto_RealTimeMessage);

  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_100C066F4@<X0>(uint64_t a1@<X8>)
{
  return sub_100C08F10(&qword_10166FDD8, (uint64_t)qword_10171C268, a1);
}

uint64_t sub_100C06718(uint64_t a1)
{
  uint64_t v2 = sub_100C091F4(&qword_10168C1D0, (void (*)(uint64_t))type metadata accessor for CRLProto_RealTimeMessage);

  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_100C06784()
{
  sub_100C091F4(&qword_10168C1D0, (void (*)(uint64_t))type metadata accessor for CRLProto_RealTimeMessage);

  return Message.hash(into:)();
}

uint64_t sub_100C06804()
{
  uint64_t v0 = type metadata accessor for _NameMap();
  sub_100568B28(v0, qword_10171C280);
  sub_100556B74(v0, (uint64_t)qword_10171C280);
  sub_1005057FC(&qword_101697C78);
  uint64_t v1 = (int *)(sub_1005057FC(&qword_101697C80) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_10117D8C0;
  uint64_t v5 = (void *)(v4 + v3);
  unint64_t v6 = v4 + v3 + v1[14];
  *uint64_t v5 = 1;
  *(void *)unint64_t v6 = "version";
  *(void *)(v6 + 8) = 7;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = enum case for _NameMap.NameDescription.same(_:);
  uint64_t v8 = type metadata accessor for _NameMap.NameDescription();
  uint64_t v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  uint64_t v10 = (char *)v5 + v2 + v1[14];
  *(void *)((char *)v5 + v2) = 2;
  *(void *)uint64_t v10 = "encryptedCKRecordData";
  *((void *)v10 + 1) = 21;
  v10[16] = 2;
  v9();
  return _NameMap.init(dictionaryLiteral:)();
}

uint64_t sub_100C069BC(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t, uint64_t), void (*a5)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v9 = v5;
  while (1)
  {
    uint64_t result = dispatch thunk of Decoder.nextFieldNumber()();
    if (v6 || (v14 & 1) != 0) {
      break;
    }
    if (result == 2)
    {
      a5(a1, v9, a2, a3);
    }
    else if (result == 1)
    {
      a4(v9, a2, a3);
    }
  }
  return result;
}

uint64_t sub_100C06A64()
{
  return dispatch thunk of Decoder.decodeSingularMessageField<A>(value:)();
}

uint64_t sub_100C06B14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void, uint64_t, uint64_t, uint64_t), uint64_t (*a5)(void *, uint64_t, uint64_t, uint64_t), void (*a6)(void))
{
  if (!*v6 || (uint64_t result = a4(*v6, 1, a2, a3), !v7))
  {
    uint64_t result = a5(v6, a1, a2, a3);
    if (!v7)
    {
      a6(0);
      return UnknownStorage.traverse<A>(visitor:)();
    }
  }
  return result;
}

uint64_t sub_100C06BE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v16[1] = a4;
  uint64_t v5 = sub_1005057FC((uint64_t *)&unk_101674160);
  __chkstk_darwin(v5 - 8, v6);
  uint64_t v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for CRLProto_Data(0);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9, v11);
  uint64_t v13 = (char *)v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for CRLProto_EncryptedRealTimeMessage(0);
  sub_100522E9C(a1 + *(int *)(v14 + 24), (uint64_t)v8, (uint64_t *)&unk_101674160);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1) {
    return sub_100522F00((uint64_t)v8, (uint64_t *)&unk_101674160);
  }
  sub_100C169A0((uint64_t)v8, (uint64_t)v13, type metadata accessor for CRLProto_Data);
  sub_100C091F4(&qword_101697C38, (void (*)(uint64_t))type metadata accessor for CRLProto_Data);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)();
  return sub_100C16A08((uint64_t)v13, type metadata accessor for CRLProto_Data);
}

unint64_t sub_100C06DE0()
{
  return 0xD000000000000021;
}

uint64_t sub_100C06DFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100C069BC(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t))&dispatch thunk of Decoder.decodeSingularUInt64Field(value:), (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_100C06A64);
}

uint64_t sub_100C06E3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100C06B14(a1, a2, a3, (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))&dispatch thunk of Visitor.visitSingularUInt64Field(value:fieldNumber:), (uint64_t (*)(void *, uint64_t, uint64_t, uint64_t))sub_100C06BE8, (void (*)(void))type metadata accessor for CRLProto_EncryptedRealTimeMessage);
}

uint64_t sub_100C06E90(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100C091F4(&qword_101697DA0, (void (*)(uint64_t))type metadata accessor for CRLProto_EncryptedRealTimeMessage);

  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_100C06F0C@<X0>(uint64_t a1@<X8>)
{
  return sub_100C08F10(&qword_10166FDE0, (uint64_t)qword_10171C280, a1);
}

uint64_t sub_100C06F30(uint64_t a1)
{
  uint64_t v2 = sub_100C091F4((unint64_t *)&qword_101674A20, (void (*)(uint64_t))type metadata accessor for CRLProto_EncryptedRealTimeMessage);

  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_100C06F9C()
{
  sub_100C091F4((unint64_t *)&qword_101674A20, (void (*)(uint64_t))type metadata accessor for CRLProto_EncryptedRealTimeMessage);

  return Message.hash(into:)();
}

uint64_t sub_100C07018(char *a1, char *a2)
{
  return sub_100C0CF4C(a1, a2, (uint64_t (*)(void, __n128))type metadata accessor for CRLProto_EncryptedRealTimeMessage) & 1;
}

uint64_t sub_100C07048()
{
  uint64_t v0 = type metadata accessor for _NameMap();
  sub_100568B28(v0, qword_10171C298);
  sub_100556B74(v0, (uint64_t)qword_10171C298);
  sub_1005057FC(&qword_101697C78);
  uint64_t v1 = (int *)(sub_1005057FC(&qword_101697C80) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_10118E4B0;
  unint64_t v4 = v16 + v3;
  unint64_t v5 = v16 + v3 + v1[14];
  *(void *)(v16 + v3) = 1;
  *(void *)unint64_t v5 = "chainID";
  *(void *)(v5 + 8) = 7;
  *(unsigned char *)(v5 + 16) = 2;
  uint64_t v6 = enum case for _NameMap.NameDescription.same(_:);
  uint64_t v7 = type metadata accessor for _NameMap.NameDescription();
  uint64_t v8 = *(void (**)(void))(*(void *)(v7 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v8)(v5, v6, v7);
  unint64_t v9 = v4 + v2 + v1[14];
  *(void *)(v4 + v2) = 2;
  *(void *)unint64_t v9 = "index";
  *(void *)(v9 + 8) = 5;
  *(unsigned char *)(v9 + 16) = 2;
  v8();
  uint64_t v10 = (void *)(v4 + 2 * v2);
  uint64_t v11 = (char *)v10 + v1[14];
  *uint64_t v10 = 3;
  *(void *)uint64_t v11 = "lastIndex";
  *((void *)v11 + 1) = 9;
  unsigned char v11[16] = 2;
  v8();
  uint64_t v12 = (void *)(v4 + 3 * v2);
  uint64_t v13 = (char *)v12 + v1[14];
  *uint64_t v12 = 4;
  *(void *)uint64_t v13 = "encrypted";
  *((void *)v13 + 1) = 9;
  v13[16] = 2;
  v8();
  uint64_t v14 = v4 + 4 * v2 + v1[14];
  *(void *)(v4 + 4 * v2) = 5;
  *(void *)uint64_t v14 = "data";
  *(void *)(v14 + 8) = 4;
  *(unsigned char *)(v14 + 16) = 2;
  v8();
  return _NameMap.init(dictionaryLiteral:)();
}

uint64_t sub_100C072C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = v3;
  uint64_t result = dispatch thunk of Decoder.nextFieldNumber()();
  if (!v4)
  {
    while ((v10 & 1) == 0)
    {
      switch(result)
      {
        case 1:
          sub_100C073EC();
          break;
        case 2:
        case 3:
          dispatch thunk of Decoder.decodeSingularUInt32Field(value:)();
          break;
        case 4:
          dispatch thunk of Decoder.decodeSingularBoolField(value:)();
          break;
        case 5:
          sub_100C04610(a1, v5, a2, a3, (void (*)(void))type metadata accessor for CRLProto_ChunkedRealTimeMessage);
          break;
        default:
          break;
      }
      uint64_t result = dispatch thunk of Decoder.nextFieldNumber()();
    }
  }
  return result;
}

uint64_t sub_100C073EC()
{
  return dispatch thunk of Decoder.decodeSingularMessageField<A>(value:)();
}

uint64_t sub_100C0749C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result = sub_100C075DC(v3, a1, a2, a3);
  if (!v4)
  {
    if (*(_DWORD *)v3) {
      dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:)();
    }
    if (*(_DWORD *)(v3 + 4)) {
      dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:)();
    }
    if (*(unsigned char *)(v3 + 8) == 1) {
      dispatch thunk of Visitor.visitSingularBoolField(value:fieldNumber:)();
    }
    sub_100C048E4(v3, a1, a2, a3, (uint64_t (*)(void, __n128))type metadata accessor for CRLProto_ChunkedRealTimeMessage, 5);
    type metadata accessor for CRLProto_ChunkedRealTimeMessage(0);
    return UnknownStorage.traverse<A>(visitor:)();
  }
  return result;
}

uint64_t sub_100C075DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v16[1] = a4;
  uint64_t v5 = sub_1005057FC((uint64_t *)&unk_101674160);
  __chkstk_darwin(v5 - 8, v6);
  uint64_t v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for CRLProto_Data(0);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9, v11);
  uint64_t v13 = (char *)v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for CRLProto_ChunkedRealTimeMessage(0);
  sub_100522E9C(a1 + *(int *)(v14 + 32), (uint64_t)v8, (uint64_t *)&unk_101674160);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1) {
    return sub_100522F00((uint64_t)v8, (uint64_t *)&unk_101674160);
  }
  sub_100C169A0((uint64_t)v8, (uint64_t)v13, type metadata accessor for CRLProto_Data);
  sub_100C091F4(&qword_101697C38, (void (*)(uint64_t))type metadata accessor for CRLProto_Data);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)();
  return sub_100C16A08((uint64_t)v13, type metadata accessor for CRLProto_Data);
}

uint64_t sub_100C077D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(unsigned char *)(a2 + 8) = 0;
  *(void *)a2 = 0;
  UnknownStorage.init()();
  uint64_t v4 = a2 + *(int *)(a1 + 32);
  uint64_t v5 = type metadata accessor for CRLProto_Data(0);
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56);
  ((void (*)(void *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t))v8)((void *)(v5 - 8), v4, 1, 1, v5);
  uint64_t v6 = a2 + *(int *)(a1 + 36);

  return v8(v6, 1, 1, v5);
}

unint64_t sub_100C078A0()
{
  return 0xD00000000000001FLL;
}

uint64_t sub_100C078BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 28);
  uint64_t v5 = type metadata accessor for UnknownStorage();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);

  return v6(a2, v4, v5);
}

uint64_t sub_100C0792C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2 + *(int *)(a2 + 28);
  uint64_t v5 = type metadata accessor for UnknownStorage();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 40);

  return v6(v4, a1, v5);
}

uint64_t sub_100C0799C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100C072C0(a1, a2, a3);
}

uint64_t sub_100C079B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100C0749C(a1, a2, a3);
}

uint64_t sub_100C079CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100C091F4(&qword_101697DA8, (void (*)(uint64_t))type metadata accessor for CRLProto_ChunkedRealTimeMessage);

  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_100C07A48@<X0>(uint64_t a1@<X8>)
{
  return sub_100C08F10(&qword_10166FDE8, (uint64_t)qword_10171C298, a1);
}

uint64_t sub_100C07A6C(uint64_t a1)
{
  uint64_t v2 = sub_100C091F4(&qword_101685E98, (void (*)(uint64_t))type metadata accessor for CRLProto_ChunkedRealTimeMessage);

  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_100C07AD8()
{
  sub_100C091F4(&qword_101685E98, (void (*)(uint64_t))type metadata accessor for CRLProto_ChunkedRealTimeMessage);

  return Message.hash(into:)();
}

uint64_t sub_100C07B58()
{
  uint64_t v0 = type metadata accessor for _NameMap();
  sub_100568B28(v0, qword_10171C2B0);
  sub_100556B74(v0, (uint64_t)qword_10171C2B0);
  sub_1005057FC(&qword_101697C78);
  uint64_t v1 = (int *)(sub_1005057FC(&qword_101697C80) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_10117D8C0;
  uint64_t v5 = (void *)(v4 + v3);
  unint64_t v6 = v4 + v3 + v1[14];
  *uint64_t v5 = 1;
  *(void *)unint64_t v6 = "type";
  *(void *)(v6 + 8) = 4;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = enum case for _NameMap.NameDescription.same(_:);
  uint64_t v8 = type metadata accessor for _NameMap.NameDescription();
  uint64_t v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  uint64_t v10 = (char *)v5 + v2 + v1[14];
  *(void *)((char *)v5 + v2) = 2;
  *(void *)uint64_t v10 = "data";
  *((void *)v10 + 1) = 4;
  v10[16] = 2;
  v9();
  return _NameMap.init(dictionaryLiteral:)();
}

uint64_t sub_100C07D10()
{
  while (1)
  {
    uint64_t result = dispatch thunk of Decoder.nextFieldNumber()();
    if (v0 || (v2 & 1) != 0) {
      break;
    }
    if (result == 2)
    {
      sub_100C07DA0();
    }
    else if (result == 1)
    {
      dispatch thunk of Decoder.decodeSingularUInt32Field(value:)();
    }
  }
  return result;
}

uint64_t sub_100C07DA0()
{
  return dispatch thunk of Decoder.decodeSingularMessageField<A>(value:)();
}

uint64_t sub_100C07E50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (!*v3 || (uint64_t result = dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:)(), !v4))
  {
    uint64_t result = sub_100C07F04((uint64_t)v3, a1, a2, a3);
    if (!v4)
    {
      type metadata accessor for CRLProto_RealTimeMessageContainer(0);
      return UnknownStorage.traverse<A>(visitor:)();
    }
  }
  return result;
}

uint64_t sub_100C07F04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v16[1] = a4;
  uint64_t v5 = sub_1005057FC((uint64_t *)&unk_101674160);
  __chkstk_darwin(v5 - 8, v6);
  uint64_t v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for CRLProto_Data(0);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9, v11);
  uint64_t v13 = (char *)v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for CRLProto_RealTimeMessageContainer(0);
  sub_100522E9C(a1 + *(int *)(v14 + 24), (uint64_t)v8, (uint64_t *)&unk_101674160);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1) {
    return sub_100522F00((uint64_t)v8, (uint64_t *)&unk_101674160);
  }
  sub_100C169A0((uint64_t)v8, (uint64_t)v13, type metadata accessor for CRLProto_Data);
  sub_100C091F4(&qword_101697C38, (void (*)(uint64_t))type metadata accessor for CRLProto_Data);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)();
  return sub_100C16A08((uint64_t)v13, type metadata accessor for CRLProto_Data);
}

uint64_t sub_100C080FC@<X0>(uint64_t a1@<X0>, _DWORD *a2@<X8>)
{
  *a2 = 0;
  UnknownStorage.init()();
  uint64_t v4 = (char *)a2 + *(int *)(a1 + 24);
  uint64_t v5 = type metadata accessor for CRLProto_Data(0);
  uint64_t v6 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56);

  return v6(v4, 1, 1, v5);
}

unint64_t sub_100C08184()
{
  return 0xD000000000000021;
}

uint64_t sub_100C081A0()
{
  return sub_100C07D10();
}

uint64_t sub_100C081B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100C07E50(a1, a2, a3);
}

uint64_t sub_100C081D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100C091F4(&qword_101697DB0, (void (*)(uint64_t))type metadata accessor for CRLProto_RealTimeMessageContainer);

  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_100C0824C@<X0>(uint64_t a1@<X8>)
{
  return sub_100C08F10(&qword_10166FDF0, (uint64_t)qword_10171C2B0, a1);
}

uint64_t sub_100C08270(uint64_t a1)
{
  uint64_t v2 = sub_100C091F4((unint64_t *)&qword_1016978F0, (void (*)(uint64_t))type metadata accessor for CRLProto_RealTimeMessageContainer);

  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_100C082DC()
{
  sub_100C091F4((unint64_t *)&qword_1016978F0, (void (*)(uint64_t))type metadata accessor for CRLProto_RealTimeMessageContainer);

  return Message.hash(into:)();
}

uint64_t sub_100C0835C()
{
  uint64_t v0 = type metadata accessor for _NameMap();
  sub_100568B28(v0, qword_10171C2C8);
  sub_100556B74(v0, (uint64_t)qword_10171C2C8);
  sub_1005057FC(&qword_101697C78);
  uint64_t v1 = (int *)(sub_1005057FC(&qword_101697C80) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_10117DF40;
  uint64_t v5 = (void *)(v4 + v3);
  unint64_t v6 = v4 + v3 + v1[14];
  *uint64_t v5 = 1;
  *(void *)unint64_t v6 = "boardIdentifier";
  *(void *)(v6 + 8) = 15;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = enum case for _NameMap.NameDescription.same(_:);
  uint64_t v8 = type metadata accessor for _NameMap.NameDescription();
  uint64_t v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  uint64_t v10 = (char *)v5 + v2 + v1[14];
  *(void *)((char *)v5 + v2) = 2;
  *(void *)uint64_t v10 = "type";
  *((void *)v10 + 1) = 4;
  v10[16] = 2;
  v9();
  uint64_t v11 = (uint64_t)v5 + 2 * v2 + v1[14];
  *(void *)((char *)v5 + 2 * v2) = 3;
  *(void *)uint64_t v11 = "data";
  *(void *)(v11 + 8) = 4;
  *(unsigned char *)(v11 + 16) = 2;
  v9();
  return _NameMap.init(dictionaryLiteral:)();
}

uint64_t sub_100C0855C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = v3;
  while (1)
  {
    uint64_t result = dispatch thunk of Decoder.nextFieldNumber()();
    if (v4 || (v10 & 1) != 0) {
      break;
    }
    switch(result)
    {
      case 3:
        sub_100C086D4(a1, v5, a2, a3, (void (*)(void))type metadata accessor for CRLProto_RealTimeBoardAuxiliaryChangeRecord);
        break;
      case 2:
        dispatch thunk of Decoder.decodeSingularUInt32Field(value:)();
        break;
      case 1:
        sub_100C08624();
        break;
    }
  }
  return result;
}

uint64_t sub_100C08624()
{
  return dispatch thunk of Decoder.decodeSingularMessageField<A>(value:)();
}

uint64_t sub_100C086D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(void))
{
  return dispatch thunk of Decoder.decodeSingularMessageField<A>(value:)();
}

uint64_t sub_100C08788(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result = sub_100C08870((uint64_t)v3, a1, a2, a3);
  if (!v4)
  {
    if (*v3) {
      dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:)();
    }
    sub_100C08A68((uint64_t)v3, a1, a2, a3, (uint64_t (*)(void, __n128))type metadata accessor for CRLProto_RealTimeBoardAuxiliaryChangeRecord, 3);
    type metadata accessor for CRLProto_RealTimeBoardAuxiliaryChangeRecord(0);
    return UnknownStorage.traverse<A>(visitor:)();
  }
  return result;
}

uint64_t sub_100C08870(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v16[1] = a4;
  uint64_t v5 = sub_1005057FC(&qword_101677D28);
  __chkstk_darwin(v5 - 8, v6);
  uint64_t v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for CRLProto_BoardIdentifier(0);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9, v11);
  uint64_t v13 = (char *)v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for CRLProto_RealTimeBoardAuxiliaryChangeRecord(0);
  sub_100522E9C(a1 + *(int *)(v14 + 24), (uint64_t)v8, &qword_101677D28);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1) {
    return sub_100522F00((uint64_t)v8, &qword_101677D28);
  }
  sub_100C169A0((uint64_t)v8, (uint64_t)v13, type metadata accessor for CRLProto_BoardIdentifier);
  sub_100C091F4(&qword_101697970, (void (*)(uint64_t))type metadata accessor for CRLProto_BoardIdentifier);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)();
  return sub_100C16A08((uint64_t)v13, type metadata accessor for CRLProto_BoardIdentifier);
}

uint64_t sub_100C08A68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void, __n128), uint64_t a6)
{
  v20[0] = a6;
  v20[1] = a3;
  v20[3] = a4;
  uint64_t v8 = sub_1005057FC((uint64_t *)&unk_101674160);
  __chkstk_darwin(v8 - 8, v9);
  uint64_t v11 = (char *)v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for CRLProto_Data(0);
  uint64_t v13 = *(void *)(v12 - 8);
  __n128 v15 = __chkstk_darwin(v12, v14);
  uint64_t v17 = (char *)v20 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = a5(0, v15);
  sub_100522E9C(a1 + *(int *)(v18 + 28), (uint64_t)v11, (uint64_t *)&unk_101674160);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1) {
    return sub_100522F00((uint64_t)v11, (uint64_t *)&unk_101674160);
  }
  sub_100C169A0((uint64_t)v11, (uint64_t)v17, type metadata accessor for CRLProto_Data);
  sub_100C091F4(&qword_101697C38, (void (*)(uint64_t))type metadata accessor for CRLProto_Data);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)();
  return sub_100C16A08((uint64_t)v17, type metadata accessor for CRLProto_Data);
}

uint64_t sub_100C08C6C@<X0>(uint64_t a1@<X0>, _DWORD *a2@<X8>)
{
  *a2 = 0;
  UnknownStorage.init()();
  uint64_t v4 = (char *)a2 + *(int *)(a1 + 24);
  uint64_t v5 = type metadata accessor for CRLProto_BoardIdentifier(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v4, 1, 1, v5);
  uint64_t v6 = (char *)a2 + *(int *)(a1 + 28);
  uint64_t v7 = type metadata accessor for CRLProto_Data(0);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);

  return v8(v6, 1, 1, v7);
}

unint64_t sub_100C08D44()
{
  return 0xD00000000000002BLL;
}

uint64_t sub_100C08D60@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 20);
  uint64_t v5 = type metadata accessor for UnknownStorage();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);

  return v6(a2, v4, v5);
}

uint64_t sub_100C08DD0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2 + *(int *)(a2 + 20);
  uint64_t v5 = type metadata accessor for UnknownStorage();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 40);

  return v6(v4, a1, v5);
}

uint64_t sub_100C08E40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100C0855C(a1, a2, a3);
}

uint64_t sub_100C08E58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100C08788(a1, a2, a3);
}

uint64_t sub_100C08E70(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100C091F4(&qword_101697DB8, (void (*)(uint64_t))type metadata accessor for CRLProto_RealTimeBoardAuxiliaryChangeRecord);

  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_100C08EEC@<X0>(uint64_t a1@<X8>)
{
  return sub_100C08F10(&qword_10166FDF8, (uint64_t)qword_10171C2C8, a1);
}

uint64_t sub_100C08F10@<X0>(void *a1@<X2>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v5 = type metadata accessor for _NameMap();
  uint64_t v6 = sub_100556B74(v5, a2);
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);

  return v7(a3, v6, v5);
}

uint64_t sub_100C08FAC(uint64_t a1)
{
  uint64_t v2 = sub_100C091F4(&qword_101677D30, (void (*)(uint64_t))type metadata accessor for CRLProto_RealTimeBoardAuxiliaryChangeRecord);

  return Message.debugDescription.getter(a1, v2);
}

Swift::Int sub_100C09018()
{
  return Hasher._finalize()();
}

uint64_t sub_100C09070()
{
  sub_100C091F4(&qword_101677D30, (void (*)(uint64_t))type metadata accessor for CRLProto_RealTimeBoardAuxiliaryChangeRecord);

  return Message.hash(into:)();
}

Swift::Int sub_100C090EC()
{
  return Hasher._finalize()();
}

uint64_t sub_100C09144()
{
  return sub_100C091F4(&qword_1016978D0, (void (*)(uint64_t))type metadata accessor for CRLProto_RealTimeBoardAuxiliaryChangeRecord);
}

uint64_t type metadata accessor for CRLProto_RealTimeBoardAuxiliaryChangeRecord(uint64_t a1)
{
  return sub_100512D5C(a1, (uint64_t *)&unk_101698FE0);
}

uint64_t sub_100C091AC()
{
  return sub_100C091F4(&qword_101677D30, (void (*)(uint64_t))type metadata accessor for CRLProto_RealTimeBoardAuxiliaryChangeRecord);
}

uint64_t sub_100C091F4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100C0923C()
{
  return sub_100C091F4(&qword_1016978D8, (void (*)(uint64_t))type metadata accessor for CRLProto_RealTimeBoardAuxiliaryChangeRecord);
}

uint64_t sub_100C09284()
{
  return sub_100C091F4(&qword_1016978E0, (void (*)(uint64_t))type metadata accessor for CRLProto_RealTimeBoardAuxiliaryChangeRecord);
}

uint64_t sub_100C092CC()
{
  return sub_100C091F4(&qword_1016978E8, (void (*)(uint64_t))type metadata accessor for CRLProto_RealTimeMessageContainer);
}

uint64_t type metadata accessor for CRLProto_RealTimeMessageContainer(uint64_t a1)
{
  return sub_100512D5C(a1, qword_101698F48);
}

uint64_t sub_100C09334()
{
  return sub_100C091F4((unint64_t *)&qword_1016978F0, (void (*)(uint64_t))type metadata accessor for CRLProto_RealTimeMessageContainer);
}

uint64_t sub_100C0937C()
{
  return sub_100C091F4(&qword_1016978F8, (void (*)(uint64_t))type metadata accessor for CRLProto_RealTimeMessageContainer);
}

uint64_t sub_100C093C4()
{
  return sub_100C091F4(&qword_101697900, (void (*)(uint64_t))type metadata accessor for CRLProto_RealTimeMessageContainer);
}

uint64_t sub_100C0940C()
{
  return sub_100C091F4(&qword_101697908, (void (*)(uint64_t))type metadata accessor for CRLProto_ChunkedRealTimeMessage);
}

uint64_t type metadata accessor for CRLProto_ChunkedRealTimeMessage(uint64_t a1)
{
  return sub_100512D5C(a1, qword_101698EA8);
}

uint64_t sub_100C09474()
{
  return sub_100C091F4(&qword_101685E98, (void (*)(uint64_t))type metadata accessor for CRLProto_ChunkedRealTimeMessage);
}

uint64_t sub_100C094BC()
{
  return sub_100C091F4(&qword_101697910, (void (*)(uint64_t))type metadata accessor for CRLProto_ChunkedRealTimeMessage);
}

uint64_t sub_100C09504()
{
  return sub_100C091F4(&qword_101697918, (void (*)(uint64_t))type metadata accessor for CRLProto_ChunkedRealTimeMessage);
}

uint64_t sub_100C0954C()
{
  return sub_100C091F4(&qword_101697920, (void (*)(uint64_t))type metadata accessor for CRLProto_EncryptedRealTimeMessage);
}

uint64_t type metadata accessor for CRLProto_EncryptedRealTimeMessage(uint64_t a1)
{
  return sub_100512D5C(a1, qword_101698E10);
}

uint64_t sub_100C095B4()
{
  return sub_100C091F4((unint64_t *)&qword_101674A20, (void (*)(uint64_t))type metadata accessor for CRLProto_EncryptedRealTimeMessage);
}

uint64_t sub_100C095FC()
{
  return sub_100C091F4(&qword_101697928, (void (*)(uint64_t))type metadata accessor for CRLProto_EncryptedRealTimeMessage);
}

uint64_t sub_100C09644()
{
  return sub_100C091F4(&qword_101697930, (void (*)(uint64_t))type metadata accessor for CRLProto_EncryptedRealTimeMessage);
}

uint64_t sub_100C0968C()
{
  return sub_100C091F4(&qword_101697938, (void (*)(uint64_t))type metadata accessor for CRLProto_RealTimeMessage);
}

uint64_t type metadata accessor for CRLProto_RealTimeMessage(uint64_t a1)
{
  return sub_100512D5C(a1, qword_101698D78);
}

uint64_t sub_100C096F4()
{
  return sub_100C091F4(&qword_10168C1D0, (void (*)(uint64_t))type metadata accessor for CRLProto_RealTimeMessage);
}

uint64_t sub_100C0973C()
{
  return sub_100C091F4(&qword_101697940, (void (*)(uint64_t))type metadata accessor for CRLProto_RealTimeMessage);
}

uint64_t sub_100C09784()
{
  return sub_100C091F4(&qword_101697948, (void (*)(uint64_t))type metadata accessor for CRLProto_RealTimeMessage);
}

uint64_t sub_100C097CC()
{
  return sub_100C091F4(&qword_101697950, (void (*)(uint64_t))type metadata accessor for CRLProto_RealTimeOpaqueChangeRecord);
}

uint64_t type metadata accessor for CRLProto_RealTimeOpaqueChangeRecord(uint64_t a1)
{
  return sub_100512D5C(a1, qword_101698CE0);
}

uint64_t sub_100C09834()
{
  return sub_100C091F4(&qword_10168C1C8, (void (*)(uint64_t))type metadata accessor for CRLProto_RealTimeOpaqueChangeRecord);
}

uint64_t sub_100C0987C()
{
  return sub_100C091F4(&qword_101697958, (void (*)(uint64_t))type metadata accessor for CRLProto_RealTimeOpaqueChangeRecord);
}

uint64_t sub_100C098C4()
{
  return sub_100C091F4(&qword_101697960, (void (*)(uint64_t))type metadata accessor for CRLProto_RealTimeOpaqueChangeRecord);
}

uint64_t sub_100C0990C()
{
  return sub_100C091F4(&qword_101697968, (void (*)(uint64_t))type metadata accessor for CRLProto_BoardIdentifier);
}

uint64_t type metadata accessor for CRLProto_BoardIdentifier(uint64_t a1)
{
  return sub_100512D5C(a1, qword_101698C50);
}

uint64_t sub_100C09974()
{
  return sub_100C091F4(&qword_101697970, (void (*)(uint64_t))type metadata accessor for CRLProto_BoardIdentifier);
}

uint64_t sub_100C099BC()
{
  return sub_100C091F4(&qword_101697978, (void (*)(uint64_t))type metadata accessor for CRLProto_BoardIdentifier);
}

uint64_t sub_100C09A04()
{
  return sub_100C091F4(&qword_101697980, (void (*)(uint64_t))type metadata accessor for CRLProto_BoardIdentifier);
}

uint64_t sub_100C09A4C()
{
  return sub_100C091F4(&qword_101697988, (void (*)(uint64_t))type metadata accessor for CRLProto_BoardItemIdentifier);
}

uint64_t type metadata accessor for CRLProto_BoardItemIdentifier(uint64_t a1)
{
  return sub_100512D5C(a1, qword_101698BC0);
}

uint64_t sub_100C09AB4()
{
  return sub_100C091F4((unint64_t *)&qword_101673FA0, (void (*)(uint64_t))type metadata accessor for CRLProto_BoardItemIdentifier);
}

uint64_t sub_100C09AFC()
{
  return sub_100C091F4(&qword_101697990, (void (*)(uint64_t))type metadata accessor for CRLProto_BoardItemIdentifier);
}

uint64_t sub_100C09B44()
{
  return sub_100C091F4(&qword_101697998, (void (*)(uint64_t))type metadata accessor for CRLProto_BoardItemIdentifier);
}

uint64_t sub_100C09B8C()
{
  return sub_100C091F4(&qword_1016979A0, (void (*)(uint64_t))type metadata accessor for CRLProto_CopresenceViewportState);
}

uint64_t type metadata accessor for CRLProto_CopresenceViewportState(uint64_t a1)
{
  return sub_100512D5C(a1, qword_101698B18);
}

uint64_t sub_100C09BF4()
{
  return sub_100C091F4(&qword_1016979A8, (void (*)(uint64_t))type metadata accessor for CRLProto_CopresenceViewportState);
}

uint64_t sub_100C09C3C()
{
  return sub_100C091F4(&qword_1016979B0, (void (*)(uint64_t))type metadata accessor for CRLProto_CopresenceViewportState);
}

uint64_t sub_100C09C84()
{
  return sub_100C091F4(&qword_1016979B8, (void (*)(uint64_t))type metadata accessor for CRLProto_CopresenceViewportState);
}

uint64_t sub_100C09CCC()
{
  return sub_100C091F4(&qword_1016979C0, (void (*)(uint64_t))type metadata accessor for CRLProto_RefuseOrEndFollow);
}

uint64_t type metadata accessor for CRLProto_RefuseOrEndFollow(uint64_t a1)
{
  return sub_100512D5C(a1, qword_101698A80);
}

uint64_t sub_100C09D34()
{
  return sub_100C091F4((unint64_t *)&qword_1016979C8, (void (*)(uint64_t))type metadata accessor for CRLProto_RefuseOrEndFollow);
}

uint64_t sub_100C09D7C()
{
  return sub_100C091F4(&qword_1016979D0, (void (*)(uint64_t))type metadata accessor for CRLProto_RefuseOrEndFollow);
}

uint64_t sub_100C09DC4()
{
  return sub_100C091F4(&qword_1016979D8, (void (*)(uint64_t))type metadata accessor for CRLProto_RefuseOrEndFollow);
}

uint64_t sub_100C09E0C()
{
  return sub_100C091F4(&qword_1016979E0, (void (*)(uint64_t))type metadata accessor for CRLProto_FollowViewportState);
}

uint64_t type metadata accessor for CRLProto_FollowViewportState(uint64_t a1)
{
  return sub_100512D5C(a1, (uint64_t *)&unk_1016989D8);
}

uint64_t sub_100C09E74()
{
  return sub_100C091F4((unint64_t *)&qword_10168E580, (void (*)(uint64_t))type metadata accessor for CRLProto_FollowViewportState);
}

uint64_t sub_100C09EBC()
{
  return sub_100C091F4(&qword_1016979E8, (void (*)(uint64_t))type metadata accessor for CRLProto_FollowViewportState);
}

uint64_t sub_100C09F04()
{
  return sub_100C091F4(&qword_1016979F0, (void (*)(uint64_t))type metadata accessor for CRLProto_FollowViewportState);
}

uint64_t sub_100C09F4C()
{
  return sub_100C091F4(&qword_1016979F8, (void (*)(uint64_t))type metadata accessor for CRLProto_StartOrEndFollow);
}

uint64_t type metadata accessor for CRLProto_StartOrEndFollow(uint64_t a1)
{
  return sub_100512D5C(a1, qword_101698940);
}

uint64_t sub_100C09FB4()
{
  return sub_100C091F4((unint64_t *)&qword_10168BA38, (void (*)(uint64_t))type metadata accessor for CRLProto_StartOrEndFollow);
}

uint64_t sub_100C09FFC()
{
  return sub_100C091F4(&qword_101697A00, (void (*)(uint64_t))type metadata accessor for CRLProto_StartOrEndFollow);
}

uint64_t sub_100C0A044()
{
  return sub_100C091F4(&qword_101697A08, (void (*)(uint64_t))type metadata accessor for CRLProto_StartOrEndFollow);
}

uint64_t sub_100C0A08C()
{
  return sub_100C091F4(&qword_101697A10, (void (*)(uint64_t))type metadata accessor for CRLProto_ObjectMetadata.AssetInfo);
}

uint64_t type metadata accessor for CRLProto_ObjectMetadata.AssetInfo(uint64_t a1)
{
  return sub_100512D5C(a1, qword_101699080);
}

uint64_t sub_100C0A0F4()
{
  return sub_100C091F4(&qword_101697A18, (void (*)(uint64_t))type metadata accessor for CRLProto_ObjectMetadata.AssetInfo);
}

uint64_t sub_100C0A13C()
{
  return sub_100C091F4(&qword_101697A20, (void (*)(uint64_t))type metadata accessor for CRLProto_ObjectMetadata.AssetInfo);
}

uint64_t sub_100C0A184()
{
  return sub_100C091F4(&qword_101697A28, (void (*)(uint64_t))type metadata accessor for CRLProto_ObjectMetadata.AssetInfo);
}

uint64_t sub_100C0A1CC()
{
  return sub_100C091F4(&qword_101697A30, (void (*)(uint64_t))type metadata accessor for CRLProto_ObjectMetadata);
}

uint64_t sub_100C0A214()
{
  return sub_100C091F4((unint64_t *)&qword_101689D88, (void (*)(uint64_t))type metadata accessor for CRLProto_ObjectMetadata);
}

uint64_t sub_100C0A25C()
{
  return sub_100C091F4(&qword_101697A38, (void (*)(uint64_t))type metadata accessor for CRLProto_ObjectMetadata);
}

uint64_t sub_100C0A2A4()
{
  return sub_100C091F4(&qword_101697A40, (void (*)(uint64_t))type metadata accessor for CRLProto_ObjectMetadata);
}

uint64_t sub_100C0A2EC()
{
  return sub_100C091F4(&qword_101697A48, (void (*)(uint64_t))type metadata accessor for CRLProto_ObjectInfo.DataDirectoryEntry);
}

uint64_t type metadata accessor for CRLProto_ObjectInfo.DataDirectoryEntry(uint64_t a1)
{
  return sub_100512D5C(a1, qword_1016988A8);
}

uint64_t sub_100C0A354()
{
  return sub_100C091F4(&qword_101697A50, (void (*)(uint64_t))type metadata accessor for CRLProto_ObjectInfo.DataDirectoryEntry);
}

uint64_t sub_100C0A39C()
{
  return sub_100C091F4(&qword_101697A58, (void (*)(uint64_t))type metadata accessor for CRLProto_ObjectInfo.DataDirectoryEntry);
}

uint64_t sub_100C0A3E4()
{
  return sub_100C091F4(&qword_101697A60, (void (*)(uint64_t))type metadata accessor for CRLProto_ObjectInfo.DataDirectoryEntry);
}

uint64_t sub_100C0A42C()
{
  return sub_100C091F4(&qword_101697A68, (void (*)(uint64_t))type metadata accessor for CRLProto_ObjectInfo.AssetReference);
}

uint64_t type metadata accessor for CRLProto_ObjectInfo.AssetReference(uint64_t a1)
{
  return sub_100512D5C(a1, qword_101698810);
}

uint64_t sub_100C0A494()
{
  return sub_100C091F4(&qword_101697A70, (void (*)(uint64_t))type metadata accessor for CRLProto_ObjectInfo.AssetReference);
}

uint64_t sub_100C0A4DC()
{
  return sub_100C091F4(&qword_101697A78, (void (*)(uint64_t))type metadata accessor for CRLProto_ObjectInfo.AssetReference);
}

uint64_t sub_100C0A524()
{
  return sub_100C091F4(&qword_101697A80, (void (*)(uint64_t))type metadata accessor for CRLProto_ObjectInfo.AssetReference);
}

uint64_t sub_100C0A56C()
{
  return sub_100C091F4(&qword_101697A88, (void (*)(uint64_t))type metadata accessor for CRLProto_ObjectInfo.ChildObjectReference);
}

uint64_t type metadata accessor for CRLProto_ObjectInfo.ChildObjectReference(uint64_t a1)
{
  return sub_100512D5C(a1, qword_101698780);
}

uint64_t sub_100C0A5D4()
{
  return sub_100C091F4(&qword_101697A90, (void (*)(uint64_t))type metadata accessor for CRLProto_ObjectInfo.ChildObjectReference);
}

uint64_t sub_100C0A61C()
{
  return sub_100C091F4(&qword_101697A98, (void (*)(uint64_t))type metadata accessor for CRLProto_ObjectInfo.ChildObjectReference);
}

uint64_t sub_100C0A664()
{
  return sub_100C091F4(&qword_101697AA0, (void (*)(uint64_t))type metadata accessor for CRLProto_ObjectInfo.ChildObjectReference);
}

uint64_t sub_100C0A6AC()
{
  return sub_100C091F4(&qword_101697AA8, (void (*)(uint64_t))type metadata accessor for CRLProto_ObjectInfo);
}

uint64_t type metadata accessor for CRLProto_ObjectInfo(uint64_t a1)
{
  return sub_100512D5C(a1, qword_1016986D0);
}

uint64_t sub_100C0A714()
{
  return sub_100C091F4(&qword_1016741B0, (void (*)(uint64_t))type metadata accessor for CRLProto_ObjectInfo);
}

uint64_t sub_100C0A75C()
{
  return sub_100C091F4(&qword_101697AB0, (void (*)(uint64_t))type metadata accessor for CRLProto_ObjectInfo);
}

uint64_t sub_100C0A7A4()
{
  return sub_100C091F4(&qword_101697AB8, (void (*)(uint64_t))type metadata accessor for CRLProto_ObjectInfo);
}

uint64_t sub_100C0A7EC()
{
  return sub_100C091F4(&qword_101697AC0, (void (*)(uint64_t))type metadata accessor for CRLProto_RealTimeLeave);
}

uint64_t type metadata accessor for CRLProto_RealTimeLeave(uint64_t a1)
{
  return sub_100512D5C(a1, qword_101698640);
}

uint64_t sub_100C0A854()
{
  return sub_100C091F4(&qword_101673FA8, (void (*)(uint64_t))type metadata accessor for CRLProto_RealTimeLeave);
}

uint64_t sub_100C0A89C()
{
  return sub_100C091F4(&qword_101697AC8, (void (*)(uint64_t))type metadata accessor for CRLProto_RealTimeLeave);
}

uint64_t sub_100C0A8E4()
{
  return sub_100C091F4(&qword_101697AD0, (void (*)(uint64_t))type metadata accessor for CRLProto_RealTimeLeave);
}

uint64_t sub_100C0A92C()
{
  return sub_100C091F4(&qword_101697AD8, (void (*)(uint64_t))type metadata accessor for CRLProto_RealTimeEnter);
}

uint64_t type metadata accessor for CRLProto_RealTimeEnter(uint64_t a1)
{
  return sub_100512D5C(a1, qword_1016985A0);
}

uint64_t sub_100C0A994()
{
  return sub_100C091F4(&qword_101685560, (void (*)(uint64_t))type metadata accessor for CRLProto_RealTimeEnter);
}

uint64_t sub_100C0A9DC()
{
  return sub_100C091F4(&qword_101697AE0, (void (*)(uint64_t))type metadata accessor for CRLProto_RealTimeEnter);
}

uint64_t sub_100C0AA24()
{
  return sub_100C091F4(&qword_101697AE8, (void (*)(uint64_t))type metadata accessor for CRLProto_RealTimeEnter);
}

uint64_t sub_100C0AA6C()
{
  return sub_100C091F4(&qword_101697AF0, (void (*)(uint64_t))type metadata accessor for CRLProto_CollaboratorCursorColor);
}

uint64_t type metadata accessor for CRLProto_CollaboratorCursorColor(uint64_t a1)
{
  return sub_100512D5C(a1, qword_101698508);
}

uint64_t sub_100C0AAD4()
{
  return sub_100C091F4((unint64_t *)&qword_101691CC8, (void (*)(uint64_t))type metadata accessor for CRLProto_CollaboratorCursorColor);
}

uint64_t sub_100C0AB1C()
{
  return sub_100C091F4(&qword_101697AF8, (void (*)(uint64_t))type metadata accessor for CRLProto_CollaboratorCursorColor);
}

uint64_t sub_100C0AB64()
{
  return sub_100C091F4(&qword_101697B00, (void (*)(uint64_t))type metadata accessor for CRLProto_CollaboratorCursorColor);
}

uint64_t sub_100C0ABAC()
{
  return sub_100C091F4(&qword_101697B08, (void (*)(uint64_t))type metadata accessor for CRLProto_CollaboratorCursor);
}

uint64_t type metadata accessor for CRLProto_CollaboratorCursor(uint64_t a1)
{
  return sub_100512D5C(a1, qword_101698470);
}

uint64_t sub_100C0AC14()
{
  return sub_100C091F4((unint64_t *)&qword_10168AA88, (void (*)(uint64_t))type metadata accessor for CRLProto_CollaboratorCursor);
}

uint64_t sub_100C0AC5C()
{
  return sub_100C091F4(&qword_101697B10, (void (*)(uint64_t))type metadata accessor for CRLProto_CollaboratorCursor);
}

uint64_t sub_100C0ACA4()
{
  return sub_100C091F4(&qword_101697B18, (void (*)(uint64_t))type metadata accessor for CRLProto_CollaboratorCursor);
}

uint64_t sub_100C0ACEC()
{
  return sub_100C091F4(&qword_101697B20, (void (*)(uint64_t))type metadata accessor for CRLProto_PersistableSelectionPath);
}

uint64_t type metadata accessor for CRLProto_PersistableSelectionPath(uint64_t a1)
{
  return sub_100512D5C(a1, (uint64_t *)&unk_1016983D0);
}

uint64_t sub_100C0AD54()
{
  return sub_100C091F4(&qword_101677FE0, (void (*)(uint64_t))type metadata accessor for CRLProto_PersistableSelectionPath);
}

uint64_t sub_100C0AD9C()
{
  return sub_100C091F4(&qword_101697B28, (void (*)(uint64_t))type metadata accessor for CRLProto_PersistableSelectionPath);
}

uint64_t sub_100C0ADE4()
{
  return sub_100C091F4(&qword_101697B30, (void (*)(uint64_t))type metadata accessor for CRLProto_PersistableSelectionPath);
}

uint64_t sub_100C0AE2C()
{
  return sub_100C091F4(&qword_101697B38, (void (*)(uint64_t))type metadata accessor for CRLProto_TextSelection);
}

uint64_t type metadata accessor for CRLProto_TextSelection(uint64_t a1)
{
  return sub_100512D5C(a1, qword_101698328);
}

uint64_t sub_100C0AE94()
{
  return sub_100C091F4(&qword_101697B40, (void (*)(uint64_t))type metadata accessor for CRLProto_TextSelection);
}

uint64_t sub_100C0AEDC()
{
  return sub_100C091F4(&qword_101697B48, (void (*)(uint64_t))type metadata accessor for CRLProto_TextSelection);
}

uint64_t sub_100C0AF24()
{
  return sub_100C091F4(&qword_101697B50, (void (*)(uint64_t))type metadata accessor for CRLProto_TextSelection);
}

uint64_t sub_100C0AF6C()
{
  return sub_100C091F4(&qword_101697B58, (void (*)(uint64_t))type metadata accessor for CRLProto_PKStrokePathData.StrokePoint);
}

uint64_t type metadata accessor for CRLProto_PKStrokePathData.StrokePoint(uint64_t a1)
{
  return sub_100512D5C(a1, qword_101698278);
}

uint64_t sub_100C0AFD4()
{
  return sub_100C091F4(&qword_101697B60, (void (*)(uint64_t))type metadata accessor for CRLProto_PKStrokePathData.StrokePoint);
}

uint64_t sub_100C0B01C()
{
  return sub_100C091F4(&qword_101697B68, (void (*)(uint64_t))type metadata accessor for CRLProto_PKStrokePathData.StrokePoint);
}

uint64_t sub_100C0B064()
{
  return sub_100C091F4(&qword_101697B70, (void (*)(uint64_t))type metadata accessor for CRLProto_PKStrokePathData.StrokePoint);
}

uint64_t sub_100C0B0AC()
{
  return sub_100C091F4(&qword_101697B78, (void (*)(uint64_t))type metadata accessor for CRLProto_PKStrokePathData);
}

uint64_t type metadata accessor for CRLProto_PKStrokePathData(uint64_t a1)
{
  return sub_100512D5C(a1, (uint64_t *)&unk_1016981B0);
}

uint64_t sub_100C0B114()
{
  return sub_100C091F4(&qword_1016930D0, (void (*)(uint64_t))type metadata accessor for CRLProto_PKStrokePathData);
}

uint64_t sub_100C0B15C()
{
  return sub_100C091F4(&qword_101697B80, (void (*)(uint64_t))type metadata accessor for CRLProto_PKStrokePathData);
}

uint64_t sub_100C0B1A4()
{
  return sub_100C091F4(&qword_101697B88, (void (*)(uint64_t))type metadata accessor for CRLProto_PKStrokePathData);
}

uint64_t sub_100C0B1EC()
{
  return sub_100C091F4(&qword_101697B90, (void (*)(uint64_t))type metadata accessor for CRLProto_Path.Element);
}

uint64_t type metadata accessor for CRLProto_Path.Element(uint64_t a1)
{
  return sub_100512D5C(a1, qword_101698110);
}

uint64_t sub_100C0B254()
{
  return sub_100C091F4(&qword_101697B98, (void (*)(uint64_t))type metadata accessor for CRLProto_Path.Element);
}

uint64_t sub_100C0B29C()
{
  return sub_100C091F4(&qword_101697BA0, (void (*)(uint64_t))type metadata accessor for CRLProto_Path.Element);
}

uint64_t sub_100C0B2E4()
{
  return sub_100C091F4(&qword_101697BA8, (void (*)(uint64_t))type metadata accessor for CRLProto_Path.Element);
}

uint64_t sub_100C0B32C()
{
  return sub_100C091F4(&qword_101697BB0, (void (*)(uint64_t))type metadata accessor for CRLProto_Path);
}

uint64_t type metadata accessor for CRLProto_Path(uint64_t a1)
{
  return sub_100512D5C(a1, qword_101698080);
}

uint64_t sub_100C0B394()
{
  return sub_100C091F4((unint64_t *)&qword_10168F4A0, (void (*)(uint64_t))type metadata accessor for CRLProto_Path);
}

uint64_t sub_100C0B3DC()
{
  return sub_100C091F4(&qword_101697BB8, (void (*)(uint64_t))type metadata accessor for CRLProto_Path);
}

uint64_t sub_100C0B424()
{
  return sub_100C091F4(&qword_101697BC0, (void (*)(uint64_t))type metadata accessor for CRLProto_Path);
}

uint64_t sub_100C0B46C()
{
  return sub_100C091F4(&qword_101697BC8, (void (*)(uint64_t))type metadata accessor for CRLProto_Rect);
}

uint64_t type metadata accessor for CRLProto_Rect(uint64_t a1)
{
  return sub_100512D5C(a1, qword_101697FE0);
}

uint64_t sub_100C0B4D4()
{
  return sub_100C091F4(&qword_101689E00, (void (*)(uint64_t))type metadata accessor for CRLProto_Rect);
}

uint64_t sub_100C0B51C()
{
  return sub_100C091F4(&qword_101697BD0, (void (*)(uint64_t))type metadata accessor for CRLProto_Rect);
}

uint64_t sub_100C0B564()
{
  return sub_100C091F4(&qword_101697BD8, (void (*)(uint64_t))type metadata accessor for CRLProto_Rect);
}

uint64_t sub_100C0B5AC()
{
  return sub_100C091F4(&qword_101697BE0, (void (*)(uint64_t))type metadata accessor for CRLProto_Size);
}

uint64_t type metadata accessor for CRLProto_Size(uint64_t a1)
{
  return sub_100512D5C(a1, qword_101697F48);
}

uint64_t sub_100C0B614()
{
  return sub_100C091F4(&qword_101689E08, (void (*)(uint64_t))type metadata accessor for CRLProto_Size);
}

uint64_t sub_100C0B65C()
{
  return sub_100C091F4(&qword_101697BE8, (void (*)(uint64_t))type metadata accessor for CRLProto_Size);
}

uint64_t sub_100C0B6A4()
{
  return sub_100C091F4(&qword_101697BF0, (void (*)(uint64_t))type metadata accessor for CRLProto_Size);
}

uint64_t sub_100C0B6EC()
{
  return sub_100C091F4(&qword_101697BF8, (void (*)(uint64_t))type metadata accessor for CRLProto_Point);
}

uint64_t type metadata accessor for CRLProto_Point(uint64_t a1)
{
  return sub_100512D5C(a1, qword_101697EB0);
}

uint64_t sub_100C0B754()
{
  return sub_100C091F4(&qword_101689E10, (void (*)(uint64_t))type metadata accessor for CRLProto_Point);
}

uint64_t sub_100C0B79C()
{
  return sub_100C091F4(&qword_101697C00, (void (*)(uint64_t))type metadata accessor for CRLProto_Point);
}

uint64_t sub_100C0B7E4()
{
  return sub_100C091F4(&qword_101697C08, (void (*)(uint64_t))type metadata accessor for CRLProto_Point);
}

uint64_t sub_100C0B82C()
{
  return sub_100C091F4(&qword_101697C10, (void (*)(uint64_t))type metadata accessor for CRLProto_Date);
}

uint64_t type metadata accessor for CRLProto_Date(uint64_t a1)
{
  return sub_100512D5C(a1, qword_101697E20);
}

uint64_t sub_100C0B894()
{
  return sub_100C091F4(&qword_101697C18, (void (*)(uint64_t))type metadata accessor for CRLProto_Date);
}

uint64_t sub_100C0B8DC()
{
  return sub_100C091F4(&qword_101697C20, (void (*)(uint64_t))type metadata accessor for CRLProto_Date);
}

uint64_t sub_100C0B924()
{
  return sub_100C091F4(&qword_101697C28, (void (*)(uint64_t))type metadata accessor for CRLProto_Date);
}

uint64_t sub_100C0B96C()
{
  return sub_100C091F4(&qword_101697C30, (void (*)(uint64_t))type metadata accessor for CRLProto_Data);
}

uint64_t sub_100C0B9B4()
{
  return sub_100C091F4(&qword_101697C38, (void (*)(uint64_t))type metadata accessor for CRLProto_Data);
}

uint64_t sub_100C0B9FC()
{
  return sub_100C091F4(&qword_101697C40, (void (*)(uint64_t))type metadata accessor for CRLProto_Data);
}

uint64_t sub_100C0BA44()
{
  return sub_100C091F4(&qword_101697C48, (void (*)(uint64_t))type metadata accessor for CRLProto_Data);
}

uint64_t sub_100C0BA8C()
{
  return sub_1006BFA64(&qword_101697C50, &qword_101697C58);
}

uint64_t sub_100C0BAB4()
{
  return sub_1006BFA64(&qword_101697C60, &qword_101697C68);
}

uint64_t sub_100C0BADC(_DWORD *a1, _DWORD *a2)
{
  uint64_t v86 = a1;
  uint64_t v87 = a2;
  uint64_t v2 = type metadata accessor for UnknownStorage();
  uint64_t v76 = *(void *)(v2 - 8);
  uint64_t v77 = v2;
  __chkstk_darwin(v2, v3);
  unsigned int v75 = (char *)&v72 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5, v6);
  unsigned int v74 = (char *)&v72 - v7;
  uint64_t v82 = type metadata accessor for CRLProto_Data(0);
  uint64_t v80 = *(void *)(v82 - 8);
  __chkstk_darwin(v82, v8);
  uint64_t v73 = (uint64_t)&v72 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v79 = sub_1005057FC((uint64_t *)&unk_1016745C0);
  __chkstk_darwin(v79, v10);
  uint64_t v83 = (uint64_t)&v72 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1005057FC((uint64_t *)&unk_101674160);
  __chkstk_darwin(v12 - 8, v13);
  uint64_t v78 = (uint64_t)&v72 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15, v16);
  uint64_t v84 = (uint64_t)&v72 - v17;
  __chkstk_darwin(v18, v19);
  uint64_t v81 = (uint64_t)&v72 - v20;
  uint64_t v21 = type metadata accessor for CRLProto_BoardIdentifier(0);
  uint64_t v22 = *(void *)(v21 - 8);
  __chkstk_darwin(v21, v23);
  unint64_t v25 = (char *)&v72 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = sub_1005057FC(&qword_101697DC0);
  uint64_t v27 = v26 - 8;
  __chkstk_darwin(v26, v28);
  uint64_t v30 = (char *)&v72 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = sub_1005057FC(&qword_101677D28);
  __chkstk_darwin(v31 - 8, v32);
  uint64_t v34 = (char *)&v72 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v35, v36);
  uint64_t v38 = (char *)&v72 - v37;
  __chkstk_darwin(v39, v40);
  uint64_t v42 = (char *)&v72 - v41;
  uint64_t v43 = type metadata accessor for CRLProto_RealTimeBoardAuxiliaryChangeRecord(0);
  sub_100522E9C((uint64_t)v86 + *(int *)(v43 + 24), (uint64_t)v42, &qword_101677D28);
  uint64_t v85 = v43;
  sub_100522E9C((uint64_t)v87 + *(int *)(v43 + 24), (uint64_t)v38, &qword_101677D28);
  uint64_t v44 = (uint64_t)&v30[*(int *)(v27 + 56)];
  sub_100522E9C((uint64_t)v42, (uint64_t)v30, &qword_101677D28);
  sub_100522E9C((uint64_t)v38, v44, &qword_101677D28);
  id v45 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v22 + 48);
  if (v45((uint64_t)v30, 1, v21) == 1)
  {
    sub_100522F00((uint64_t)v38, &qword_101677D28);
    sub_100522F00((uint64_t)v42, &qword_101677D28);
    if (v45(v44, 1, v21) == 1)
    {
      sub_100522F00((uint64_t)v30, &qword_101677D28);
      goto LABEL_9;
    }
LABEL_6:
    id v46 = &qword_101697DC0;
    uint64_t v47 = (uint64_t)v30;
    goto LABEL_7;
  }
  sub_100522E9C((uint64_t)v30, (uint64_t)v34, &qword_101677D28);
  if (v45(v44, 1, v21) == 1)
  {
    sub_100522F00((uint64_t)v38, &qword_101677D28);
    sub_100522F00((uint64_t)v42, &qword_101677D28);
    sub_100C16A08((uint64_t)v34, type metadata accessor for CRLProto_BoardIdentifier);
    goto LABEL_6;
  }
  sub_100C169A0(v44, (uint64_t)v25, type metadata accessor for CRLProto_BoardIdentifier);
  char v48 = sub_100C15864((uint64_t)v34, (uint64_t)v25, (uint64_t (*)(void, __n128))type metadata accessor for CRLProto_BoardIdentifier);
  sub_100C16A08((uint64_t)v25, type metadata accessor for CRLProto_BoardIdentifier);
  sub_100522F00((uint64_t)v38, &qword_101677D28);
  sub_100522F00((uint64_t)v42, &qword_101677D28);
  sub_100C16A08((uint64_t)v34, type metadata accessor for CRLProto_BoardIdentifier);
  sub_100522F00((uint64_t)v30, &qword_101677D28);
  if ((v48 & 1) == 0) {
    goto LABEL_19;
  }
LABEL_9:
  float v50 = v86;
  double v49 = v87;
  if (*v86 != *v87) {
    goto LABEL_19;
  }
  uint64_t v51 = v85;
  uint64_t v52 = v81;
  sub_100522E9C((uint64_t)v86 + *(int *)(v85 + 28), v81, (uint64_t *)&unk_101674160);
  uint64_t v53 = v84;
  sub_100522E9C((uint64_t)v49 + *(int *)(v51 + 28), v84, (uint64_t *)&unk_101674160);
  uint64_t v54 = v83;
  uint64_t v55 = v83 + *(int *)(v79 + 48);
  sub_100522E9C(v52, v83, (uint64_t *)&unk_101674160);
  sub_100522E9C(v53, v55, (uint64_t *)&unk_101674160);
  float v56 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v80 + 48);
  uint64_t v57 = v82;
  if (v56(v54, 1, v82) != 1)
  {
    uint64_t v59 = v78;
    sub_100522E9C(v54, v78, (uint64_t *)&unk_101674160);
    if (v56(v55, 1, v57) == 1)
    {
      sub_100522F00(v53, (uint64_t *)&unk_101674160);
      sub_100522F00(v52, (uint64_t *)&unk_101674160);
      sub_100C16A08(v59, type metadata accessor for CRLProto_Data);
      goto LABEL_15;
    }
    uint64_t v60 = v73;
    sub_100C169A0(v55, v73, type metadata accessor for CRLProto_Data);
    if (sub_1008D44A8(*(void *)v59, *(void *)(v59 + 8), *(void *)v60, *(void *)(v60 + 8)))
    {
      sub_100C091F4(&qword_1016745B8, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
      uint64_t v58 = v77;
      char v61 = dispatch thunk of static Equatable.== infix(_:_:)();
      sub_100C16A08(v60, type metadata accessor for CRLProto_Data);
      sub_100522F00(v84, (uint64_t *)&unk_101674160);
      sub_100522F00(v52, (uint64_t *)&unk_101674160);
      sub_100C16A08(v59, type metadata accessor for CRLProto_Data);
      sub_100522F00(v54, (uint64_t *)&unk_101674160);
      if (v61) {
        goto LABEL_18;
      }
LABEL_19:
      char v69 = 0;
      return v69 & 1;
    }
    sub_100C16A08(v60, type metadata accessor for CRLProto_Data);
    sub_100522F00(v84, (uint64_t *)&unk_101674160);
    sub_100522F00(v52, (uint64_t *)&unk_101674160);
    sub_100C16A08(v59, type metadata accessor for CRLProto_Data);
    uint64_t v47 = v54;
    id v46 = (uint64_t *)&unk_101674160;
LABEL_7:
    sub_100522F00(v47, v46);
    goto LABEL_19;
  }
  sub_100522F00(v53, (uint64_t *)&unk_101674160);
  sub_100522F00(v52, (uint64_t *)&unk_101674160);
  if (v56(v55, 1, v57) != 1)
  {
LABEL_15:
    id v46 = (uint64_t *)&unk_1016745C0;
    uint64_t v47 = v54;
    goto LABEL_7;
  }
  sub_100522F00(v54, (uint64_t *)&unk_101674160);
  uint64_t v58 = v77;
LABEL_18:
  uint64_t v62 = v85;
  uint64_t v63 = (char *)v50 + *(int *)(v85 + 20);
  uint64_t v64 = v76;
  uint64_t v65 = *(void (**)(char *, char *, uint64_t))(v76 + 16);
  uint64_t v66 = v74;
  v65(v74, v63, v58);
  uint64_t v67 = (char *)v49 + *(int *)(v62 + 20);
  uint64_t v68 = v75;
  v65(v75, v67, v58);
  sub_100C091F4(&qword_1016745B8, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
  char v69 = dispatch thunk of static Equatable.== infix(_:_:)();
  uint64_t v70 = *(void (**)(char *, uint64_t))(v64 + 8);
  v70(v68, v58);
  v70(v66, v58);
  return v69 & 1;
}

uint64_t sub_100C0C404(char *a1, char *a2)
{
  uint64_t v4 = type metadata accessor for UnknownStorage();
  uint64_t v58 = *(void *)(v4 - 8);
  uint64_t v59 = v4;
  __chkstk_darwin(v4, v5);
  uint64_t v57 = (char *)&v52 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7, v8);
  uint64_t v10 = (char *)&v52 - v9;
  uint64_t v11 = type metadata accessor for CRLProto_Data(0);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v60 = v11;
  uint64_t v61 = v12;
  __chkstk_darwin(v11, v13);
  uint64_t v15 = (char *)&v52 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_1005057FC((uint64_t *)&unk_1016745C0);
  __chkstk_darwin(v16, v17);
  uint64_t v19 = (char *)&v52 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_1005057FC((uint64_t *)&unk_101674160);
  __chkstk_darwin(v20 - 8, v21);
  __chkstk_darwin(v22, v23);
  unint64_t v25 = (char *)&v52 - v24;
  __chkstk_darwin(v26, v27);
  uint64_t v30 = (char *)&v52 - v29;
  if (*(_DWORD *)a1 != *(_DWORD *)a2) {
    goto LABEL_13;
  }
  uint64_t v53 = v15;
  uint64_t v55 = v10;
  uint64_t v56 = v28;
  uint64_t v31 = type metadata accessor for CRLProto_RealTimeMessageContainer(0);
  uint64_t v32 = a1;
  sub_100522E9C((uint64_t)&a1[*(int *)(v31 + 24)], (uint64_t)v30, (uint64_t *)&unk_101674160);
  uint64_t v33 = a2;
  sub_100522E9C((uint64_t)&a2[*(int *)(v31 + 24)], (uint64_t)v25, (uint64_t *)&unk_101674160);
  uint64_t v34 = (uint64_t)&v19[*(int *)(v16 + 48)];
  sub_100522E9C((uint64_t)v30, (uint64_t)v19, (uint64_t *)&unk_101674160);
  sub_100522E9C((uint64_t)v25, v34, (uint64_t *)&unk_101674160);
  uint64_t v35 = v60;
  uint64_t v36 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v61 + 48);
  int v37 = v36(v19, 1, v60);
  uint64_t v54 = v33;
  if (v37 != 1)
  {
    uint64_t v40 = v56;
    sub_100522E9C((uint64_t)v19, v56, (uint64_t *)&unk_101674160);
    if (v36((char *)v34, 1, v35) != 1)
    {
      uint64_t v38 = v31;
      uint64_t v43 = (uint64_t)v53;
      sub_100C169A0(v34, (uint64_t)v53, type metadata accessor for CRLProto_Data);
      if (sub_1008D44A8(*(void *)v40, *(void *)(v40 + 8), *(void *)v43, *(void *)(v43 + 8)))
      {
        sub_100C091F4(&qword_1016745B8, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
        uint64_t v39 = v59;
        char v44 = dispatch thunk of static Equatable.== infix(_:_:)();
        sub_100C16A08(v43, type metadata accessor for CRLProto_Data);
        sub_100522F00((uint64_t)v25, (uint64_t *)&unk_101674160);
        sub_100522F00((uint64_t)v30, (uint64_t *)&unk_101674160);
        sub_100C16A08(v56, type metadata accessor for CRLProto_Data);
        sub_100522F00((uint64_t)v19, (uint64_t *)&unk_101674160);
        if (v44) {
          goto LABEL_10;
        }
LABEL_13:
        char v49 = 0;
        return v49 & 1;
      }
      sub_100C16A08(v43, type metadata accessor for CRLProto_Data);
      sub_100522F00((uint64_t)v25, (uint64_t *)&unk_101674160);
      sub_100522F00((uint64_t)v30, (uint64_t *)&unk_101674160);
      sub_100C16A08(v40, type metadata accessor for CRLProto_Data);
      uint64_t v42 = (uint64_t)v19;
      uint64_t v41 = (uint64_t *)&unk_101674160;
LABEL_12:
      sub_100522F00(v42, v41);
      goto LABEL_13;
    }
    sub_100522F00((uint64_t)v25, (uint64_t *)&unk_101674160);
    sub_100522F00((uint64_t)v30, (uint64_t *)&unk_101674160);
    sub_100C16A08(v40, type metadata accessor for CRLProto_Data);
LABEL_7:
    uint64_t v41 = (uint64_t *)&unk_1016745C0;
    uint64_t v42 = (uint64_t)v19;
    goto LABEL_12;
  }
  sub_100522F00((uint64_t)v25, (uint64_t *)&unk_101674160);
  sub_100522F00((uint64_t)v30, (uint64_t *)&unk_101674160);
  if (v36((char *)v34, 1, v35) != 1) {
    goto LABEL_7;
  }
  uint64_t v38 = v31;
  sub_100522F00((uint64_t)v19, (uint64_t *)&unk_101674160);
  uint64_t v39 = v59;
LABEL_10:
  uint64_t v45 = v58;
  id v46 = *(void (**)(char *, char *, uint64_t))(v58 + 16);
  uint64_t v47 = v55;
  v46(v55, &v32[*(int *)(v38 + 20)], v39);
  char v48 = v57;
  v46(v57, &v54[*(int *)(v38 + 20)], v39);
  sub_100C091F4(&qword_1016745B8, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
  char v49 = dispatch thunk of static Equatable.== infix(_:_:)();
  float v50 = *(void (**)(char *, uint64_t))(v45 + 8);
  v50(v48, v39);
  v50(v47, v39);
  return v49 & 1;
}

uint64_t sub_100C0C9FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UnknownStorage();
  uint64_t v61 = *(void *)(v4 - 8);
  uint64_t v62 = v4;
  __chkstk_darwin(v4, v5);
  uint64_t v60 = (char *)&v52 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7, v8);
  uint64_t v59 = (char *)&v52 - v9;
  uint64_t v10 = type metadata accessor for CRLProto_TextSelection(0);
  uint64_t v63 = *(void *)(v10 - 8);
  __chkstk_darwin(v10, v11);
  uint64_t v13 = (char *)&v52 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1005057FC(&qword_101697D00);
  __chkstk_darwin(v14, v15);
  uint64_t v17 = (char *)&v52 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_1005057FC(&qword_101677FD8);
  __chkstk_darwin(v18 - 8, v19);
  uint64_t v21 = (uint64_t *)((char *)&v52 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v22, v23);
  unint64_t v25 = (char *)&v52 - v24;
  __chkstk_darwin(v26, v27);
  uint64_t v29 = (char *)&v52 - v28;
  if ((sub_1005B7670(*(void *)a1, *(void *)a2) & 1) == 0) {
    goto LABEL_9;
  }
  uint64_t v56 = v25;
  uint64_t v57 = v29;
  uint64_t v53 = v13;
  uint64_t v54 = v21;
  uint64_t v58 = v17;
  uint64_t v30 = v63;
  int v31 = *(unsigned __int8 *)(a1 + 8);
  int v32 = *(unsigned __int8 *)(a2 + 8);
  uint64_t v55 = a2;
  if (v31 != v32) {
    goto LABEL_9;
  }
  uint64_t v33 = type metadata accessor for CRLProto_PersistableSelectionPath(0);
  uint64_t v34 = (uint64_t)v57;
  sub_100522E9C(a1 + *(int *)(v33 + 28), (uint64_t)v57, &qword_101677FD8);
  uint64_t v52 = v33;
  uint64_t v35 = (uint64_t)v56;
  sub_100522E9C(v55 + *(int *)(v33 + 28), (uint64_t)v56, &qword_101677FD8);
  uint64_t v36 = (uint64_t)v58;
  uint64_t v37 = (uint64_t)&v58[*(int *)(v14 + 48)];
  sub_100522E9C(v34, (uint64_t)v58, &qword_101677FD8);
  sub_100522E9C(v35, v37, &qword_101677FD8);
  uint64_t v38 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v30 + 48);
  uint64_t v39 = v10;
  if (v38(v36, 1, v10) == 1)
  {
    sub_100522F00(v35, &qword_101677FD8);
    uint64_t v36 = (uint64_t)v58;
    sub_100522F00(v34, &qword_101677FD8);
    if (v38(v37, 1, v10) == 1)
    {
      sub_100522F00(v36, &qword_101677FD8);
LABEL_12:
      uint64_t v45 = v52;
      uint64_t v47 = v61;
      uint64_t v46 = v62;
      char v48 = *(void (**)(char *, uint64_t, uint64_t))(v61 + 16);
      char v49 = v59;
      v48(v59, a1 + *(int *)(v52 + 24), v62);
      float v50 = v60;
      v48(v60, v55 + *(int *)(v45 + 24), v46);
      sub_100C091F4(&qword_1016745B8, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
      char v41 = dispatch thunk of static Equatable.== infix(_:_:)();
      uint64_t v51 = *(void (**)(char *, uint64_t))(v47 + 8);
      v51(v50, v46);
      v51(v49, v46);
      return v41 & 1;
    }
    goto LABEL_8;
  }
  uint64_t v40 = v54;
  sub_100522E9C(v36, (uint64_t)v54, &qword_101677FD8);
  if (v38(v37, 1, v39) == 1)
  {
    sub_100522F00((uint64_t)v56, &qword_101677FD8);
    sub_100522F00((uint64_t)v57, &qword_101677FD8);
    sub_100C16A08((uint64_t)v40, type metadata accessor for CRLProto_TextSelection);
LABEL_8:
    sub_100522F00(v36, &qword_101697D00);
    goto LABEL_9;
  }
  uint64_t v43 = v53;
  sub_100C169A0(v37, (uint64_t)v53, type metadata accessor for CRLProto_TextSelection);
  char v44 = sub_100C137C0(v40, v43);
  sub_100C16A08((uint64_t)v43, type metadata accessor for CRLProto_TextSelection);
  sub_100522F00((uint64_t)v56, &qword_101677FD8);
  sub_100522F00((uint64_t)v57, &qword_101677FD8);
  sub_100C16A08((uint64_t)v40, type metadata accessor for CRLProto_TextSelection);
  sub_100522F00(v36, &qword_101677FD8);
  if (v44) {
    goto LABEL_12;
  }
LABEL_9:
  char v41 = 0;
  return v41 & 1;
}

uint64_t sub_100C0CF4C(char *a1, char *a2, uint64_t (*a3)(void, __n128))
{
  uint64_t v62 = a3;
  uint64_t v5 = type metadata accessor for UnknownStorage();
  uint64_t v60 = *(void *)(v5 - 8);
  uint64_t v61 = v5;
  __chkstk_darwin(v5, v6);
  uint64_t v59 = (char *)&v55 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8, v9);
  uint64_t v11 = (char *)&v55 - v10;
  uint64_t v12 = type metadata accessor for CRLProto_Data(0);
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v63 = v12;
  uint64_t v64 = v13;
  __chkstk_darwin(v12, v14);
  uint64_t v16 = (char *)&v55 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_1005057FC((uint64_t *)&unk_1016745C0);
  __chkstk_darwin(v17, v18);
  uint64_t v20 = (char *)&v55 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_1005057FC((uint64_t *)&unk_101674160);
  __chkstk_darwin(v21 - 8, v22);
  __chkstk_darwin(v23, v24);
  uint64_t v26 = (char *)&v55 - v25;
  __n128 v30 = __chkstk_darwin(v27, v28);
  int v32 = (char *)&v55 - v31;
  if (*(void *)a1 != *(void *)a2) {
    goto LABEL_13;
  }
  uint64_t v33 = a2;
  uint64_t v55 = v16;
  uint64_t v57 = v11;
  uint64_t v58 = v29;
  uint64_t v34 = v62(0, v30);
  uint64_t v35 = a1;
  sub_100522E9C((uint64_t)&a1[*(int *)(v34 + 24)], (uint64_t)v32, (uint64_t *)&unk_101674160);
  uint64_t v36 = v33;
  sub_100522E9C((uint64_t)&v33[*(int *)(v34 + 24)], (uint64_t)v26, (uint64_t *)&unk_101674160);
  uint64_t v37 = (uint64_t)&v20[*(int *)(v17 + 48)];
  sub_100522E9C((uint64_t)v32, (uint64_t)v20, (uint64_t *)&unk_101674160);
  sub_100522E9C((uint64_t)v26, v37, (uint64_t *)&unk_101674160);
  uint64_t v38 = v63;
  uint64_t v39 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v64 + 48);
  int v40 = v39(v20, 1, v63);
  uint64_t v56 = v36;
  if (v40 != 1)
  {
    uint64_t v41 = v58;
    sub_100522E9C((uint64_t)v20, v58, (uint64_t *)&unk_101674160);
    if (v39((char *)v37, 1, v38) != 1)
    {
      uint64_t v44 = v34;
      uint64_t v45 = (uint64_t)v55;
      sub_100C169A0(v37, (uint64_t)v55, type metadata accessor for CRLProto_Data);
      if (sub_1008D44A8(*(void *)v41, *(void *)(v41 + 8), *(void *)v45, *(void *)(v45 + 8)))
      {
        sub_100C091F4(&qword_1016745B8, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
        char v46 = dispatch thunk of static Equatable.== infix(_:_:)();
        sub_100C16A08(v45, type metadata accessor for CRLProto_Data);
        sub_100522F00((uint64_t)v26, (uint64_t *)&unk_101674160);
        sub_100522F00((uint64_t)v32, (uint64_t *)&unk_101674160);
        sub_100C16A08(v41, type metadata accessor for CRLProto_Data);
        sub_100522F00((uint64_t)v20, (uint64_t *)&unk_101674160);
        uint64_t v34 = v44;
        if (v46) {
          goto LABEL_10;
        }
LABEL_13:
        char v52 = 0;
        return v52 & 1;
      }
      sub_100C16A08(v45, type metadata accessor for CRLProto_Data);
      sub_100522F00((uint64_t)v26, (uint64_t *)&unk_101674160);
      sub_100522F00((uint64_t)v32, (uint64_t *)&unk_101674160);
      sub_100C16A08(v41, type metadata accessor for CRLProto_Data);
      uint64_t v43 = (uint64_t)v20;
      uint64_t v42 = (uint64_t *)&unk_101674160;
LABEL_12:
      sub_100522F00(v43, v42);
      goto LABEL_13;
    }
    sub_100522F00((uint64_t)v26, (uint64_t *)&unk_101674160);
    sub_100522F00((uint64_t)v32, (uint64_t *)&unk_101674160);
    sub_100C16A08(v41, type metadata accessor for CRLProto_Data);
LABEL_7:
    uint64_t v42 = (uint64_t *)&unk_1016745C0;
    uint64_t v43 = (uint64_t)v20;
    goto LABEL_12;
  }
  sub_100522F00((uint64_t)v26, (uint64_t *)&unk_101674160);
  sub_100522F00((uint64_t)v32, (uint64_t *)&unk_101674160);
  if (v39((char *)v37, 1, v38) != 1) {
    goto LABEL_7;
  }
  sub_100522F00((uint64_t)v20, (uint64_t *)&unk_101674160);
LABEL_10:
  uint64_t v48 = v60;
  uint64_t v47 = v61;
  char v49 = *(void (**)(char *, char *, uint64_t))(v60 + 16);
  float v50 = v57;
  v49(v57, &v35[*(int *)(v34 + 20)], v61);
  uint64_t v51 = v59;
  v49(v59, &v56[*(int *)(v34 + 20)], v47);
  sub_100C091F4(&qword_1016745B8, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
  char v52 = dispatch thunk of static Equatable.== infix(_:_:)();
  uint64_t v53 = *(void (**)(char *, uint64_t))(v48 + 8);
  v53(v51, v47);
  v53(v50, v47);
  return v52 & 1;
}

uint64_t sub_100C0D548(uint64_t a1, uint64_t a2)
{
  uint64_t v86 = a1;
  uint64_t v87 = a2;
  uint64_t v85 = type metadata accessor for UnknownStorage();
  uint64_t v75 = *(void *)(v85 - 8);
  __chkstk_darwin(v85, v2);
  unsigned int v74 = (char *)&v72 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4, v5);
  uint64_t v73 = (char *)&v72 - v6;
  uint64_t v82 = type metadata accessor for CRLProto_Point(0);
  uint64_t v79 = *(void *)(v82 - 8);
  __chkstk_darwin(v82, v7);
  uint64_t v76 = (float *)((char *)&v72 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v78 = sub_1005057FC(&qword_101697CC8);
  __chkstk_darwin(v78, v9);
  uint64_t v83 = (uint64_t)&v72 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1005057FC(&qword_10168E570);
  __chkstk_darwin(v11 - 8, v12);
  uint64_t v77 = (float *)((char *)&v72 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v14, v15);
  uint64_t v80 = (uint64_t)&v72 - v16;
  __chkstk_darwin(v17, v18);
  uint64_t v81 = (uint64_t)&v72 - v19;
  uint64_t v20 = type metadata accessor for CRLProto_Data(0);
  uint64_t v21 = *(void *)(v20 - 8);
  __chkstk_darwin(v20, v22);
  uint64_t v24 = (char *)&v72 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = sub_1005057FC((uint64_t *)&unk_1016745C0);
  uint64_t v26 = v25 - 8;
  __chkstk_darwin(v25, v27);
  uint64_t v29 = (char *)&v72 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_1005057FC((uint64_t *)&unk_101674160);
  __chkstk_darwin(v30 - 8, v31);
  uint64_t v33 = (char *)&v72 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v34, v35);
  uint64_t v37 = (char *)&v72 - v36;
  __chkstk_darwin(v38, v39);
  uint64_t v41 = (char *)&v72 - v40;
  uint64_t v42 = type metadata accessor for CRLProto_CopresenceViewportState(0);
  sub_100522E9C(v86 + *(int *)(v42 + 36), (uint64_t)v41, (uint64_t *)&unk_101674160);
  uint64_t v84 = v42;
  sub_100522E9C(v87 + *(int *)(v42 + 36), (uint64_t)v37, (uint64_t *)&unk_101674160);
  uint64_t v43 = (uint64_t)&v29[*(int *)(v26 + 56)];
  sub_100522E9C((uint64_t)v41, (uint64_t)v29, (uint64_t *)&unk_101674160);
  sub_100522E9C((uint64_t)v37, v43, (uint64_t *)&unk_101674160);
  uint64_t v44 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v21 + 48);
  if (v44((uint64_t)v29, 1, v20) == 1)
  {
    sub_100522F00((uint64_t)v37, (uint64_t *)&unk_101674160);
    sub_100522F00((uint64_t)v41, (uint64_t *)&unk_101674160);
    if (v44(v43, 1, v20) == 1)
    {
      sub_100522F00((uint64_t)v29, (uint64_t *)&unk_101674160);
      goto LABEL_9;
    }
LABEL_6:
    uint64_t v45 = (uint64_t *)&unk_1016745C0;
    uint64_t v46 = (uint64_t)v29;
LABEL_22:
    sub_100522F00(v46, v45);
    goto LABEL_23;
  }
  sub_100522E9C((uint64_t)v29, (uint64_t)v33, (uint64_t *)&unk_101674160);
  if (v44(v43, 1, v20) == 1)
  {
    sub_100522F00((uint64_t)v37, (uint64_t *)&unk_101674160);
    sub_100522F00((uint64_t)v41, (uint64_t *)&unk_101674160);
    sub_100C16A08((uint64_t)v33, type metadata accessor for CRLProto_Data);
    goto LABEL_6;
  }
  sub_100C169A0(v43, (uint64_t)v24, type metadata accessor for CRLProto_Data);
  if ((sub_1008D44A8(*(void *)v33, *((void *)v33 + 1), *(void *)v24, *((void *)v24 + 1)) & 1) == 0)
  {
    sub_100C16A08((uint64_t)v24, type metadata accessor for CRLProto_Data);
    uint64_t v67 = (uint64_t *)&unk_101674160;
    sub_100522F00((uint64_t)v37, (uint64_t *)&unk_101674160);
    sub_100522F00((uint64_t)v41, (uint64_t *)&unk_101674160);
    sub_100C16A08((uint64_t)v33, type metadata accessor for CRLProto_Data);
    uint64_t v46 = (uint64_t)v29;
LABEL_18:
    uint64_t v45 = v67;
    goto LABEL_22;
  }
  sub_100C091F4(&qword_1016745B8, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
  char v47 = dispatch thunk of static Equatable.== infix(_:_:)();
  sub_100C16A08((uint64_t)v24, type metadata accessor for CRLProto_Data);
  sub_100522F00((uint64_t)v37, (uint64_t *)&unk_101674160);
  sub_100522F00((uint64_t)v41, (uint64_t *)&unk_101674160);
  sub_100C16A08((uint64_t)v33, type metadata accessor for CRLProto_Data);
  sub_100522F00((uint64_t)v29, (uint64_t *)&unk_101674160);
  if ((v47 & 1) == 0) {
    goto LABEL_23;
  }
LABEL_9:
  uint64_t v49 = v86;
  uint64_t v48 = v87;
  if (*(void *)v86 != *(void *)v87 || *(float *)(v86 + 8) != *(float *)(v87 + 8)) {
    goto LABEL_23;
  }
  uint64_t v50 = v84;
  uint64_t v51 = v81;
  sub_100522E9C(v86 + *(int *)(v84 + 40), v81, &qword_10168E570);
  uint64_t v52 = v80;
  sub_100522E9C(v48 + *(int *)(v50 + 40), v80, &qword_10168E570);
  uint64_t v53 = v83;
  uint64_t v54 = v83 + *(int *)(v78 + 48);
  sub_100522E9C(v51, v83, &qword_10168E570);
  sub_100522E9C(v52, v54, &qword_10168E570);
  uint64_t v55 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v79 + 48);
  uint64_t v56 = v82;
  if (v55(v53, 1, v82) != 1)
  {
    uint64_t v68 = v77;
    sub_100522E9C(v53, (uint64_t)v77, &qword_10168E570);
    if (v55(v54, 1, v56) == 1)
    {
      sub_100522F00(v52, &qword_10168E570);
      sub_100522F00(v51, &qword_10168E570);
      sub_100C16A08((uint64_t)v68, type metadata accessor for CRLProto_Point);
      goto LABEL_21;
    }
    uint64_t v70 = v76;
    sub_100C169A0(v54, (uint64_t)v76, type metadata accessor for CRLProto_Point);
    if (*v68 == *v70 && v68[1] == v70[1])
    {
      sub_100C091F4(&qword_1016745B8, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
      char v71 = dispatch thunk of static Equatable.== infix(_:_:)();
      sub_100C16A08((uint64_t)v70, type metadata accessor for CRLProto_Point);
      sub_100522F00(v52, &qword_10168E570);
      sub_100522F00(v51, &qword_10168E570);
      sub_100C16A08((uint64_t)v68, type metadata accessor for CRLProto_Point);
      sub_100522F00(v53, &qword_10168E570);
      if (v71) {
        goto LABEL_14;
      }
LABEL_23:
      char v65 = 0;
      return v65 & 1;
    }
    sub_100C16A08((uint64_t)v70, type metadata accessor for CRLProto_Point);
    uint64_t v67 = &qword_10168E570;
    sub_100522F00(v52, &qword_10168E570);
    sub_100522F00(v51, &qword_10168E570);
    sub_100C16A08((uint64_t)v68, type metadata accessor for CRLProto_Point);
    uint64_t v46 = v53;
    goto LABEL_18;
  }
  sub_100522F00(v52, &qword_10168E570);
  sub_100522F00(v51, &qword_10168E570);
  if (v55(v54, 1, v56) != 1)
  {
LABEL_21:
    uint64_t v45 = &qword_101697CC8;
    uint64_t v46 = v53;
    goto LABEL_22;
  }
  sub_100522F00(v53, &qword_10168E570);
LABEL_14:
  if (*(unsigned __int8 *)(v49 + 12) != *(unsigned __int8 *)(v48 + 12)
    || *(void *)(v49 + 16) != *(void *)(v48 + 16))
  {
    goto LABEL_23;
  }
  uint64_t v58 = v84;
  uint64_t v57 = v85;
  uint64_t v59 = v49 + *(int *)(v84 + 32);
  uint64_t v60 = v75;
  uint64_t v61 = *(void (**)(char *, uint64_t, uint64_t))(v75 + 16);
  uint64_t v62 = v73;
  v61(v73, v59, v85);
  uint64_t v63 = v48 + *(int *)(v58 + 32);
  uint64_t v64 = v74;
  v61(v74, v63, v57);
  sub_100C091F4(&qword_1016745B8, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
  char v65 = dispatch thunk of static Equatable.== infix(_:_:)();
  uint64_t v66 = *(void (**)(char *, uint64_t))(v60 + 8);
  v66(v64, v57);
  v66(v62, v57);
  return v65 & 1;
}

uint64_t sub_100C0DF54(char *a1, _DWORD *a2)
{
  uint64_t v4 = type metadata accessor for UnknownStorage();
  uint64_t v55 = *(void *)(v4 - 8);
  uint64_t v56 = v4;
  __chkstk_darwin(v4, v5);
  uint64_t v54 = (char *)&v52 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7, v8);
  uint64_t v53 = (char *)&v52 - v9;
  uint64_t v10 = type metadata accessor for CRLProto_Data(0);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10, v12);
  uint64_t v14 = (char *)&v52 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1005057FC((uint64_t *)&unk_1016745C0);
  uint64_t v16 = v15 - 8;
  __chkstk_darwin(v15, v17);
  uint64_t v19 = (char *)&v52 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_1005057FC((uint64_t *)&unk_101674160);
  __chkstk_darwin(v20 - 8, v21);
  uint64_t v59 = (uint64_t)&v52 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23, v24);
  uint64_t v26 = (char *)&v52 - v25;
  __chkstk_darwin(v27, v28);
  uint64_t v30 = (char *)&v52 - v29;
  uint64_t v31 = type metadata accessor for CRLProto_CollaboratorCursorColor(0);
  uint64_t v32 = *(int *)(v31 + 24);
  uint64_t v57 = a1;
  uint64_t v33 = (uint64_t)&a1[v32];
  uint64_t v34 = v31;
  sub_100522E9C(v33, (uint64_t)v30, (uint64_t *)&unk_101674160);
  uint64_t v35 = *(int *)(v34 + 24);
  uint64_t v58 = a2;
  sub_100522E9C((uint64_t)a2 + v35, (uint64_t)v26, (uint64_t *)&unk_101674160);
  uint64_t v36 = (uint64_t)&v19[*(int *)(v16 + 56)];
  sub_100522E9C((uint64_t)v30, (uint64_t)v19, (uint64_t *)&unk_101674160);
  sub_100522E9C((uint64_t)v26, v36, (uint64_t *)&unk_101674160);
  uint64_t v37 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48);
  if (v37((uint64_t)v19, 1, v10) == 1)
  {
    sub_100522F00((uint64_t)v26, (uint64_t *)&unk_101674160);
    sub_100522F00((uint64_t)v30, (uint64_t *)&unk_101674160);
    if (v37(v36, 1, v10) == 1)
    {
      sub_100522F00((uint64_t)v19, (uint64_t *)&unk_101674160);
      goto LABEL_9;
    }
    goto LABEL_6;
  }
  uint64_t v38 = v59;
  sub_100522E9C((uint64_t)v19, v59, (uint64_t *)&unk_101674160);
  if (v37(v36, 1, v10) == 1)
  {
    sub_100522F00((uint64_t)v26, (uint64_t *)&unk_101674160);
    sub_100522F00((uint64_t)v30, (uint64_t *)&unk_101674160);
    sub_100C16A08(v38, type metadata accessor for CRLProto_Data);
LABEL_6:
    uint64_t v39 = (uint64_t *)&unk_1016745C0;
    uint64_t v40 = (uint64_t)v19;
LABEL_12:
    sub_100522F00(v40, v39);
    goto LABEL_13;
  }
  sub_100C169A0(v36, (uint64_t)v14, type metadata accessor for CRLProto_Data);
  if ((sub_1008D44A8(*(void *)v38, *(void *)(v38 + 8), *(void *)v14, *((void *)v14 + 1)) & 1) == 0)
  {
    sub_100C16A08((uint64_t)v14, type metadata accessor for CRLProto_Data);
    sub_100522F00((uint64_t)v26, (uint64_t *)&unk_101674160);
    sub_100522F00((uint64_t)v30, (uint64_t *)&unk_101674160);
    sub_100C16A08(v38, type metadata accessor for CRLProto_Data);
    uint64_t v40 = (uint64_t)v19;
    uint64_t v39 = (uint64_t *)&unk_101674160;
    goto LABEL_12;
  }
  sub_100C091F4(&qword_1016745B8, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
  char v41 = dispatch thunk of static Equatable.== infix(_:_:)();
  sub_100C16A08((uint64_t)v14, type metadata accessor for CRLProto_Data);
  sub_100522F00((uint64_t)v26, (uint64_t *)&unk_101674160);
  sub_100522F00((uint64_t)v30, (uint64_t *)&unk_101674160);
  sub_100C16A08(v38, type metadata accessor for CRLProto_Data);
  sub_100522F00((uint64_t)v19, (uint64_t *)&unk_101674160);
  if ((v41 & 1) == 0)
  {
LABEL_13:
    char v49 = 0;
    return v49 & 1;
  }
LABEL_9:
  uint64_t v42 = v58;
  if (*(_DWORD *)v57 != *v58) {
    goto LABEL_13;
  }
  uint64_t v44 = v55;
  uint64_t v43 = v56;
  uint64_t v45 = *(void (**)(char *, char *, uint64_t))(v55 + 16);
  uint64_t v46 = v53;
  v45(v53, &v57[*(int *)(v34 + 20)], v56);
  char v47 = (char *)v42 + *(int *)(v34 + 20);
  uint64_t v48 = v54;
  v45(v54, v47, v43);
  sub_100C091F4(&qword_1016745B8, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
  char v49 = dispatch thunk of static Equatable.== infix(_:_:)();
  uint64_t v50 = *(void (**)(char *, uint64_t))(v44 + 8);
  v50(v48, v43);
  v50(v46, v43);
  return v49 & 1;
}

uint64_t sub_100C0E51C(uint64_t a1, uint64_t a2)
{
  uint64_t v85 = type metadata accessor for UnknownStorage();
  uint64_t v78 = *(void *)(v85 - 8);
  __chkstk_darwin(v85, v4);
  uint64_t v77 = (char *)&v74 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6, v7);
  uint64_t v76 = (char *)&v74 - v8;
  uint64_t v9 = type metadata accessor for CRLProto_Data(0);
  uint64_t v89 = *(void *)(v9 - 8);
  __chkstk_darwin(v9, v10);
  uint64_t v75 = (uint64_t)&v74 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12, v13);
  uint64_t v86 = (uint64_t)&v74 - v14;
  uint64_t v15 = sub_1005057FC((uint64_t *)&unk_1016745C0);
  __chkstk_darwin(v15, v16);
  uint64_t v81 = (uint64_t)&v74 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18, v19);
  uint64_t v21 = (char *)&v74 - v20;
  uint64_t v22 = sub_1005057FC((uint64_t *)&unk_101674160);
  __chkstk_darwin(v22 - 8, v23);
  uint64_t v79 = (uint64_t)&v74 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25, v26);
  uint64_t v84 = (uint64_t)&v74 - v27;
  __chkstk_darwin(v28, v29);
  uint64_t v82 = (uint64_t)&v74 - v30;
  __chkstk_darwin(v31, v32);
  uint64_t v34 = (char *)&v74 - v33;
  __chkstk_darwin(v35, v36);
  uint64_t v38 = (char *)&v74 - v37;
  __chkstk_darwin(v39, v40);
  uint64_t v42 = (char *)&v74 - v41;
  uint64_t v43 = type metadata accessor for CRLProto_ChunkedRealTimeMessage(0);
  uint64_t v44 = *(int *)(v43 + 32);
  uint64_t v87 = a1;
  sub_100522E9C(a1 + v44, (uint64_t)v42, (uint64_t *)&unk_101674160);
  uint64_t v83 = v43;
  uint64_t v45 = *(int *)(v43 + 32);
  uint64_t v46 = v9;
  uint64_t v47 = v89;
  uint64_t v88 = a2;
  sub_100522E9C(a2 + v45, (uint64_t)v38, (uint64_t *)&unk_101674160);
  uint64_t v80 = v15;
  uint64_t v48 = (uint64_t)&v21[*(int *)(v15 + 48)];
  sub_100522E9C((uint64_t)v42, (uint64_t)v21, (uint64_t *)&unk_101674160);
  sub_100522E9C((uint64_t)v38, v48, (uint64_t *)&unk_101674160);
  char v49 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v47 + 48);
  if (v49((uint64_t)v21, 1, v46) == 1)
  {
    sub_100522F00((uint64_t)v38, (uint64_t *)&unk_101674160);
    sub_100522F00((uint64_t)v42, (uint64_t *)&unk_101674160);
    if (v49(v48, 1, v46) == 1)
    {
      sub_100522F00((uint64_t)v21, (uint64_t *)&unk_101674160);
      goto LABEL_9;
    }
LABEL_6:
    uint64_t v50 = (uint64_t *)&unk_1016745C0;
    uint64_t v51 = (uint64_t)v21;
LABEL_17:
    sub_100522F00(v51, v50);
    goto LABEL_18;
  }
  sub_100522E9C((uint64_t)v21, (uint64_t)v34, (uint64_t *)&unk_101674160);
  if (v49(v48, 1, v46) == 1)
  {
    sub_100522F00((uint64_t)v38, (uint64_t *)&unk_101674160);
    sub_100522F00((uint64_t)v42, (uint64_t *)&unk_101674160);
    sub_100C16A08((uint64_t)v34, type metadata accessor for CRLProto_Data);
    goto LABEL_6;
  }
  uint64_t v52 = v86;
  sub_100C169A0(v48, v86, type metadata accessor for CRLProto_Data);
  if ((sub_1008D44A8(*(void *)v34, *((void *)v34 + 1), *(void *)v52, *(void *)(v52 + 8)) & 1) == 0)
  {
    sub_100C16A08(v52, type metadata accessor for CRLProto_Data);
    sub_100522F00((uint64_t)v38, (uint64_t *)&unk_101674160);
    sub_100522F00((uint64_t)v42, (uint64_t *)&unk_101674160);
    sub_100C16A08((uint64_t)v34, type metadata accessor for CRLProto_Data);
    uint64_t v51 = (uint64_t)v21;
LABEL_16:
    uint64_t v50 = (uint64_t *)&unk_101674160;
    goto LABEL_17;
  }
  sub_100C091F4(&qword_1016745B8, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
  char v53 = dispatch thunk of static Equatable.== infix(_:_:)();
  sub_100C16A08(v52, type metadata accessor for CRLProto_Data);
  sub_100522F00((uint64_t)v38, (uint64_t *)&unk_101674160);
  sub_100522F00((uint64_t)v42, (uint64_t *)&unk_101674160);
  sub_100C16A08((uint64_t)v34, type metadata accessor for CRLProto_Data);
  sub_100522F00((uint64_t)v21, (uint64_t *)&unk_101674160);
  if ((v53 & 1) == 0) {
    goto LABEL_18;
  }
LABEL_9:
  uint64_t v55 = v87;
  uint64_t v54 = v88;
  if (*(_DWORD *)v87 != *(_DWORD *)v88
    || *(_DWORD *)(v87 + 4) != *(_DWORD *)(v88 + 4)
    || *(unsigned __int8 *)(v87 + 8) != *(unsigned __int8 *)(v88 + 8))
  {
    goto LABEL_18;
  }
  uint64_t v57 = v82;
  uint64_t v56 = v83;
  sub_100522E9C(v87 + *(int *)(v83 + 36), v82, (uint64_t *)&unk_101674160);
  uint64_t v58 = v84;
  sub_100522E9C(v54 + *(int *)(v56 + 36), v84, (uint64_t *)&unk_101674160);
  uint64_t v59 = v81;
  uint64_t v60 = v81 + *(int *)(v80 + 48);
  sub_100522E9C(v57, v81, (uint64_t *)&unk_101674160);
  sub_100522E9C(v58, v60, (uint64_t *)&unk_101674160);
  if (v49(v59, 1, v46) == 1)
  {
    sub_100522F00(v58, (uint64_t *)&unk_101674160);
    sub_100522F00(v57, (uint64_t *)&unk_101674160);
    if (v49(v60, 1, v46) == 1)
    {
      sub_100522F00(v59, (uint64_t *)&unk_101674160);
LABEL_25:
      uint64_t v66 = v83;
      uint64_t v67 = v78;
      uint64_t v68 = *(void (**)(char *, uint64_t, uint64_t))(v78 + 16);
      char v69 = v76;
      uint64_t v70 = v85;
      v68(v76, v55 + *(int *)(v83 + 28), v85);
      uint64_t v71 = v54 + *(int *)(v66 + 28);
      uint64_t v72 = v77;
      v68(v77, v71, v70);
      sub_100C091F4(&qword_1016745B8, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
      char v61 = dispatch thunk of static Equatable.== infix(_:_:)();
      uint64_t v73 = *(void (**)(char *, uint64_t))(v67 + 8);
      v73(v72, v70);
      v73(v69, v70);
      return v61 & 1;
    }
    goto LABEL_22;
  }
  uint64_t v63 = v79;
  sub_100522E9C(v59, v79, (uint64_t *)&unk_101674160);
  if (v49(v60, 1, v46) == 1)
  {
    sub_100522F00(v84, (uint64_t *)&unk_101674160);
    sub_100522F00(v57, (uint64_t *)&unk_101674160);
    sub_100C16A08(v63, type metadata accessor for CRLProto_Data);
LABEL_22:
    uint64_t v50 = (uint64_t *)&unk_1016745C0;
    uint64_t v51 = v59;
    goto LABEL_17;
  }
  uint64_t v64 = v75;
  sub_100C169A0(v60, v75, type metadata accessor for CRLProto_Data);
  if ((sub_1008D44A8(*(void *)v63, *(void *)(v63 + 8), *(void *)v64, *(void *)(v64 + 8)) & 1) == 0)
  {
    sub_100C16A08(v64, type metadata accessor for CRLProto_Data);
    sub_100522F00(v84, (uint64_t *)&unk_101674160);
    sub_100522F00(v82, (uint64_t *)&unk_101674160);
    sub_100C16A08(v63, type metadata accessor for CRLProto_Data);
    uint64_t v51 = v59;
    goto LABEL_16;
  }
  sub_100C091F4(&qword_1016745B8, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
  char v65 = dispatch thunk of static Equatable.== infix(_:_:)();
  sub_100C16A08(v64, type metadata accessor for CRLProto_Data);
  sub_100522F00(v84, (uint64_t *)&unk_101674160);
  sub_100522F00(v82, (uint64_t *)&unk_101674160);
  sub_100C16A08(v63, type metadata accessor for CRLProto_Data);
  sub_100522F00(v59, (uint64_t *)&unk_101674160);
  if (v65) {
    goto LABEL_25;
  }
LABEL_18:
  char v61 = 0;
  return v61 & 1;
}

uint64_t sub_100C0EE58(float *a1, float *a2)
{
  uint64_t v120 = a1;
  char v121 = a2;
  uint64_t v108 = type metadata accessor for UnknownStorage();
  uint64_t v101 = *(void *)(v108 - 8);
  __chkstk_darwin(v108, v2);
  uint64_t v100 = (char *)&v99 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4, v5);
  uint64_t v99 = (char *)&v99 - v6;
  uint64_t v113 = type metadata accessor for CRLProto_Size(0);
  uint64_t v106 = *(void *)(v113 - 8);
  __chkstk_darwin(v113, v7);
  unsigned int v102 = (float *)((char *)&v99 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v105 = sub_1005057FC(&qword_101697D68);
  __chkstk_darwin(v105, v9);
  char v114 = (char *)&v99 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1005057FC(&qword_10168E578);
  __chkstk_darwin(v11 - 8, v12);
  uint64_t v103 = (float *)((char *)&v99 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v14, v15);
  int v111 = (char *)&v99 - v16;
  __chkstk_darwin(v17, v18);
  float v112 = (char *)&v99 - v19;
  uint64_t v116 = type metadata accessor for CRLProto_Point(0);
  uint64_t v110 = *(void *)(v116 - 8);
  __chkstk_darwin(v116, v20);
  uint64_t v104 = (float *)((char *)&v99 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v109 = sub_1005057FC(&qword_101697CC8);
  __chkstk_darwin(v109, v22);
  uint64_t v119 = (uint64_t)&v99 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = sub_1005057FC(&qword_10168E570);
  __chkstk_darwin(v24 - 8, v25);
  uint64_t v107 = (float *)((char *)&v99 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v27, v28);
  uint64_t v117 = (uint64_t)&v99 - v29;
  __chkstk_darwin(v30, v31);
  uint64_t v118 = (uint64_t)&v99 - v32;
  uint64_t v33 = type metadata accessor for CRLProto_Data(0);
  uint64_t v34 = *(void *)(v33 - 8);
  __chkstk_darwin(v33, v35);
  uint64_t v37 = (char *)&v99 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = sub_1005057FC((uint64_t *)&unk_1016745C0);
  uint64_t v39 = v38 - 8;
  __chkstk_darwin(v38, v40);
  uint64_t v42 = (char *)&v99 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = sub_1005057FC((uint64_t *)&unk_101674160);
  __chkstk_darwin(v43 - 8, v44);
  uint64_t v46 = (char *)&v99 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v47, v48);
  uint64_t v50 = (char *)&v99 - v49;
  __chkstk_darwin(v51, v52);
  uint64_t v54 = (char *)&v99 - v53;
  uint64_t v55 = type metadata accessor for CRLProto_FollowViewportState(0);
  sub_100522E9C((uint64_t)v120 + *(int *)(v55 + 28), (uint64_t)v54, (uint64_t *)&unk_101674160);
  uint64_t v115 = v55;
  sub_100522E9C((uint64_t)v121 + *(int *)(v55 + 28), (uint64_t)v50, (uint64_t *)&unk_101674160);
  uint64_t v56 = (uint64_t)&v42[*(int *)(v39 + 56)];
  sub_100522E9C((uint64_t)v54, (uint64_t)v42, (uint64_t *)&unk_101674160);
  sub_100522E9C((uint64_t)v50, v56, (uint64_t *)&unk_101674160);
  uint64_t v57 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v34 + 48);
  if (v57((uint64_t)v42, 1, v33) == 1)
  {
    sub_100522F00((uint64_t)v50, (uint64_t *)&unk_101674160);
    sub_100522F00((uint64_t)v54, (uint64_t *)&unk_101674160);
    if (v57(v56, 1, v33) == 1)
    {
      sub_100522F00((uint64_t)v42, (uint64_t *)&unk_101674160);
      goto LABEL_4;
    }
LABEL_15:
    uint64_t v85 = (uint64_t *)&unk_1016745C0;
    uint64_t v86 = (uint64_t)v42;
LABEL_32:
    sub_100522F00(v86, v85);
    goto LABEL_33;
  }
  sub_100522E9C((uint64_t)v42, (uint64_t)v46, (uint64_t *)&unk_101674160);
  if (v57(v56, 1, v33) == 1)
  {
    sub_100522F00((uint64_t)v50, (uint64_t *)&unk_101674160);
    sub_100522F00((uint64_t)v54, (uint64_t *)&unk_101674160);
    sub_100C16A08((uint64_t)v46, type metadata accessor for CRLProto_Data);
    goto LABEL_15;
  }
  sub_100C169A0(v56, (uint64_t)v37, type metadata accessor for CRLProto_Data);
  if ((sub_1008D44A8(*(void *)v46, *((void *)v46 + 1), *(void *)v37, *((void *)v37 + 1)) & 1) == 0)
  {
    sub_100C16A08((uint64_t)v37, type metadata accessor for CRLProto_Data);
    uint64_t v88 = (uint64_t *)&unk_101674160;
    sub_100522F00((uint64_t)v50, (uint64_t *)&unk_101674160);
    sub_100522F00((uint64_t)v54, (uint64_t *)&unk_101674160);
    sub_100C16A08((uint64_t)v46, type metadata accessor for CRLProto_Data);
    uint64_t v86 = (uint64_t)v42;
LABEL_20:
    uint64_t v85 = v88;
    goto LABEL_32;
  }
  sub_100C091F4(&qword_1016745B8, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
  char v87 = dispatch thunk of static Equatable.== infix(_:_:)();
  sub_100C16A08((uint64_t)v37, type metadata accessor for CRLProto_Data);
  sub_100522F00((uint64_t)v50, (uint64_t *)&unk_101674160);
  sub_100522F00((uint64_t)v54, (uint64_t *)&unk_101674160);
  sub_100C16A08((uint64_t)v46, type metadata accessor for CRLProto_Data);
  sub_100522F00((uint64_t)v42, (uint64_t *)&unk_101674160);
  if ((v87 & 1) == 0) {
    goto LABEL_33;
  }
LABEL_4:
  uint64_t v59 = v120;
  uint64_t v58 = v121;
  if (*v120 != *v121)
  {
LABEL_33:
    char v83 = 0;
    return v83 & 1;
  }
  uint64_t v60 = v115;
  uint64_t v61 = v118;
  sub_100522E9C((uint64_t)v120 + *(int *)(v115 + 32), v118, &qword_10168E570);
  uint64_t v62 = v117;
  sub_100522E9C((uint64_t)v58 + *(int *)(v60 + 32), v117, &qword_10168E570);
  uint64_t v63 = v119;
  uint64_t v64 = v119 + *(int *)(v109 + 48);
  sub_100522E9C(v61, v119, &qword_10168E570);
  sub_100522E9C(v62, v64, &qword_10168E570);
  char v65 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v110 + 48);
  uint64_t v66 = v116;
  if (v65(v63, 1, v116) == 1)
  {
    sub_100522F00(v62, &qword_10168E570);
    sub_100522F00(v61, &qword_10168E570);
    int v67 = v65(v64, 1, v66);
    uint64_t v69 = v113;
    uint64_t v68 = (uint64_t)v114;
    uint64_t v71 = (uint64_t)v111;
    uint64_t v70 = (uint64_t)v112;
    if (v67 == 1)
    {
      sub_100522F00(v119, &qword_10168E570);
      goto LABEL_8;
    }
LABEL_23:
    uint64_t v85 = &qword_101697CC8;
    uint64_t v86 = v119;
    goto LABEL_32;
  }
  uint64_t v89 = v107;
  sub_100522E9C(v63, (uint64_t)v107, &qword_10168E570);
  int v90 = v65(v64, 1, v66);
  uint64_t v69 = v113;
  uint64_t v68 = (uint64_t)v114;
  uint64_t v71 = (uint64_t)v111;
  uint64_t v70 = (uint64_t)v112;
  if (v90 == 1)
  {
    sub_100522F00(v117, &qword_10168E570);
    sub_100522F00(v118, &qword_10168E570);
    sub_100C16A08((uint64_t)v89, type metadata accessor for CRLProto_Point);
    goto LABEL_23;
  }
  uint64_t v91 = v104;
  sub_100C169A0(v64, (uint64_t)v104, type metadata accessor for CRLProto_Point);
  if (*v89 != *v91 || v89[1] != v91[1])
  {
    sub_100C16A08((uint64_t)v91, type metadata accessor for CRLProto_Point);
    uint64_t v93 = (uint64_t)v89;
    uint64_t v88 = &qword_10168E570;
    sub_100522F00(v117, &qword_10168E570);
    sub_100522F00(v118, &qword_10168E570);
    sub_100C16A08(v93, type metadata accessor for CRLProto_Point);
    uint64_t v86 = v119;
    goto LABEL_20;
  }
  sub_100C091F4(&qword_1016745B8, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
  char v92 = dispatch thunk of static Equatable.== infix(_:_:)();
  sub_100C16A08((uint64_t)v91, type metadata accessor for CRLProto_Point);
  sub_100522F00(v117, &qword_10168E570);
  sub_100522F00(v118, &qword_10168E570);
  sub_100C16A08((uint64_t)v89, type metadata accessor for CRLProto_Point);
  sub_100522F00(v119, &qword_10168E570);
  if ((v92 & 1) == 0) {
    goto LABEL_33;
  }
LABEL_8:
  sub_100522E9C((uint64_t)v59 + *(int *)(v60 + 36), v70, &qword_10168E578);
  uint64_t v72 = v121;
  sub_100522E9C((uint64_t)v121 + *(int *)(v60 + 36), v71, &qword_10168E578);
  uint64_t v73 = v68 + *(int *)(v105 + 48);
  sub_100522E9C(v70, v68, &qword_10168E578);
  sub_100522E9C(v71, v73, &qword_10168E578);
  uint64_t v74 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v106 + 48);
  if (v74(v68, 1, v69) == 1)
  {
    sub_100522F00(v71, &qword_10168E578);
    sub_100522F00(v70, &qword_10168E578);
    if (v74(v73, 1, v69) == 1)
    {
      sub_100522F00(v68, &qword_10168E578);
      goto LABEL_11;
    }
    goto LABEL_31;
  }
  char v94 = v103;
  sub_100522E9C(v68, (uint64_t)v103, &qword_10168E578);
  if (v74(v73, 1, v69) == 1)
  {
    sub_100522F00(v71, &qword_10168E578);
    sub_100522F00(v70, &qword_10168E578);
    sub_100C16A08((uint64_t)v94, type metadata accessor for CRLProto_Size);
LABEL_31:
    uint64_t v85 = &qword_101697D68;
    uint64_t v86 = v68;
    goto LABEL_32;
  }
  uint64_t v96 = v102;
  sub_100C169A0(v73, (uint64_t)v102, type metadata accessor for CRLProto_Size);
  if (*v94 != *v96 || v94[1] != v96[1])
  {
    sub_100C16A08((uint64_t)v96, type metadata accessor for CRLProto_Size);
    uint64_t v98 = (uint64_t)v94;
    uint64_t v88 = &qword_10168E578;
    sub_100522F00(v71, &qword_10168E578);
    sub_100522F00(v70, &qword_10168E578);
    sub_100C16A08(v98, type metadata accessor for CRLProto_Size);
    uint64_t v86 = v68;
    goto LABEL_20;
  }
  sub_100C091F4(&qword_1016745B8, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
  char v97 = dispatch thunk of static Equatable.== infix(_:_:)();
  sub_100C16A08((uint64_t)v96, type metadata accessor for CRLProto_Size);
  sub_100522F00(v71, &qword_10168E578);
  sub_100522F00(v70, &qword_10168E578);
  sub_100C16A08((uint64_t)v94, type metadata accessor for CRLProto_Size);
  sub_100522F00(v68, &qword_10168E578);
  if ((v97 & 1) == 0) {
    goto LABEL_33;
  }
LABEL_11:
  if (*((void *)v59 + 1) != *((void *)v72 + 1)) {
    goto LABEL_33;
  }
  uint64_t v75 = v115;
  uint64_t v76 = (char *)v59 + *(int *)(v115 + 24);
  uint64_t v77 = v101;
  uint64_t v78 = *(void (**)(char *, char *, uint64_t))(v101 + 16);
  uint64_t v79 = v99;
  uint64_t v80 = v108;
  v78(v99, v76, v108);
  uint64_t v81 = (char *)v72 + *(int *)(v75 + 24);
  uint64_t v82 = v100;
  v78(v100, v81, v80);
  sub_100C091F4(&qword_1016745B8, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
  char v83 = dispatch thunk of static Equatable.== infix(_:_:)();
  uint64_t v84 = *(void (**)(char *, uint64_t))(v77 + 8);
  v84(v82, v80);
  v84(v79, v80);
  return v83 & 1;
}

uint64_t sub_100C0FC8C(double *a1, double *a2)
{
  uint64_t v85 = type metadata accessor for UnknownStorage();
  uint64_t v80 = *(void *)(v85 - 8);
  __chkstk_darwin(v85, v4);
  uint64_t v79 = (char *)&v76 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6, v7);
  uint64_t v78 = (char *)&v76 - v8;
  uint64_t v9 = type metadata accessor for CRLProto_Data(0);
  uint64_t v91 = *(void *)(v9 - 8);
  __chkstk_darwin(v9, v10);
  uint64_t v77 = (uint64_t)&v76 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12, v13);
  int v90 = (char *)&v76 - v14;
  uint64_t v15 = sub_1005057FC((uint64_t *)&unk_1016745C0);
  __chkstk_darwin(v15, v16);
  uint64_t v84 = (uint64_t)&v76 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18, v19);
  uint64_t v21 = (char *)&v76 - v20;
  uint64_t v22 = sub_1005057FC((uint64_t *)&unk_101674160);
  __chkstk_darwin(v22 - 8, v23);
  uint64_t v81 = (uint64_t)&v76 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25, v26);
  uint64_t v87 = (uint64_t)&v76 - v27;
  __chkstk_darwin(v28, v29);
  uint64_t v83 = (uint64_t)&v76 - v30;
  __chkstk_darwin(v31, v32);
  uint64_t v34 = (char *)&v76 - v33;
  __chkstk_darwin(v35, v36);
  uint64_t v38 = (char *)&v76 - v37;
  __chkstk_darwin(v39, v40);
  uint64_t v42 = (char *)&v76 - v41;
  uint64_t v43 = type metadata accessor for CRLProto_CollaboratorCursor(0);
  uint64_t v44 = *(int *)(v43 + 24);
  uint64_t v88 = a1;
  sub_100522E9C((uint64_t)a1 + v44, (uint64_t)v42, (uint64_t *)&unk_101674160);
  uint64_t v86 = v43;
  uint64_t v45 = *(int *)(v43 + 24);
  uint64_t v46 = v9;
  uint64_t v89 = a2;
  sub_100522E9C((uint64_t)a2 + v45, (uint64_t)v38, (uint64_t *)&unk_101674160);
  uint64_t v82 = v15;
  uint64_t v47 = *(int *)(v15 + 48);
  uint64_t v48 = v91;
  uint64_t v49 = (uint64_t)&v21[v47];
  sub_100522E9C((uint64_t)v42, (uint64_t)v21, (uint64_t *)&unk_101674160);
  sub_100522E9C((uint64_t)v38, v49, (uint64_t *)&unk_101674160);
  uint64_t v50 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v48 + 48);
  if (v50((uint64_t)v21, 1, v9) == 1)
  {
    sub_100522F00((uint64_t)v38, (uint64_t *)&unk_101674160);
    sub_100522F00((uint64_t)v42, (uint64_t *)&unk_101674160);
    if (v50(v49, 1, v9) == 1)
    {
      sub_100522F00((uint64_t)v21, (uint64_t *)&unk_101674160);
      goto LABEL_4;
    }
LABEL_10:
    uint64_t v59 = (uint64_t *)&unk_1016745C0;
    uint64_t v60 = (uint64_t)v21;
LABEL_19:
    sub_100522F00(v60, v59);
    goto LABEL_20;
  }
  uint64_t v58 = (uint64_t)v90;
  sub_100522E9C((uint64_t)v21, (uint64_t)v34, (uint64_t *)&unk_101674160);
  if (v50(v49, 1, v46) == 1)
  {
    sub_100522F00((uint64_t)v38, (uint64_t *)&unk_101674160);
    sub_100522F00((uint64_t)v42, (uint64_t *)&unk_101674160);
    sub_100C16A08((uint64_t)v34, type metadata accessor for CRLProto_Data);
    goto LABEL_10;
  }
  sub_100C169A0(v49, v58, type metadata accessor for CRLProto_Data);
  if ((sub_1008D44A8(*(void *)v34, *((void *)v34 + 1), *(void *)v58, *(void *)(v58 + 8)) & 1) == 0)
  {
    sub_100C16A08(v58, type metadata accessor for CRLProto_Data);
    sub_100522F00((uint64_t)v38, (uint64_t *)&unk_101674160);
    sub_100522F00((uint64_t)v42, (uint64_t *)&unk_101674160);
    sub_100C16A08((uint64_t)v34, type metadata accessor for CRLProto_Data);
    uint64_t v60 = (uint64_t)v21;
LABEL_15:
    uint64_t v59 = (uint64_t *)&unk_101674160;
    goto LABEL_19;
  }
  sub_100C091F4(&qword_1016745B8, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
  char v61 = dispatch thunk of static Equatable.== infix(_:_:)();
  sub_100C16A08(v58, type metadata accessor for CRLProto_Data);
  sub_100522F00((uint64_t)v38, (uint64_t *)&unk_101674160);
  sub_100522F00((uint64_t)v42, (uint64_t *)&unk_101674160);
  sub_100C16A08((uint64_t)v34, type metadata accessor for CRLProto_Data);
  sub_100522F00((uint64_t)v21, (uint64_t *)&unk_101674160);
  if ((v61 & 1) == 0) {
    goto LABEL_20;
  }
LABEL_4:
  uint64_t v52 = v88;
  uint64_t v51 = v89;
  if (*v88 != *v89) {
    goto LABEL_20;
  }
  uint64_t v53 = v86;
  uint64_t v54 = v83;
  sub_100522E9C((uint64_t)v88 + *(int *)(v86 + 28), v83, (uint64_t *)&unk_101674160);
  uint64_t v55 = v87;
  sub_100522E9C((uint64_t)v51 + *(int *)(v53 + 28), v87, (uint64_t *)&unk_101674160);
  uint64_t v56 = v84;
  uint64_t v57 = v84 + *(int *)(v82 + 48);
  sub_100522E9C(v54, v84, (uint64_t *)&unk_101674160);
  sub_100522E9C(v55, v57, (uint64_t *)&unk_101674160);
  if (v50(v56, 1, v46) == 1)
  {
    sub_100522F00(v55, (uint64_t *)&unk_101674160);
    sub_100522F00(v54, (uint64_t *)&unk_101674160);
    if (v50(v57, 1, v46) == 1)
    {
      sub_100522F00(v56, (uint64_t *)&unk_101674160);
LABEL_24:
      uint64_t v67 = v85;
      uint64_t v68 = v86;
      uint64_t v69 = (char *)v52 + *(int *)(v86 + 20);
      uint64_t v70 = v80;
      uint64_t v71 = *(void (**)(char *, char *, uint64_t))(v80 + 16);
      uint64_t v72 = v78;
      v71(v78, v69, v85);
      uint64_t v73 = (char *)v51 + *(int *)(v68 + 20);
      uint64_t v74 = v79;
      v71(v79, v73, v67);
      sub_100C091F4(&qword_1016745B8, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
      char v63 = dispatch thunk of static Equatable.== infix(_:_:)();
      uint64_t v75 = *(void (**)(char *, uint64_t))(v70 + 8);
      v75(v74, v67);
      v75(v72, v67);
      return v63 & 1;
    }
    goto LABEL_18;
  }
  uint64_t v62 = v81;
  sub_100522E9C(v56, v81, (uint64_t *)&unk_101674160);
  if (v50(v57, 1, v46) == 1)
  {
    sub_100522F00(v87, (uint64_t *)&unk_101674160);
    sub_100522F00(v54, (uint64_t *)&unk_101674160);
    sub_100C16A08(v62, type metadata accessor for CRLProto_Data);
LABEL_18:
    uint64_t v59 = (uint64_t *)&unk_1016745C0;
    uint64_t v60 = v56;
    goto LABEL_19;
  }
  uint64_t v65 = v77;
  sub_100C169A0(v57, v77, type metadata accessor for CRLProto_Data);
  if ((sub_1008D44A8(*(void *)v62, *(void *)(v62 + 8), *(void *)v65, *(void *)(v65 + 8)) & 1) == 0)
  {
    sub_100C16A08(v65, type metadata accessor for CRLProto_Data);
    sub_100522F00(v87, (uint64_t *)&unk_101674160);
    sub_100522F00(v54, (uint64_t *)&unk_101674160);
    sub_100C16A08(v62, type metadata accessor for CRLProto_Data);
    uint64_t v60 = v56;
    goto LABEL_15;
  }
  sub_100C091F4(&qword_1016745B8, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
  char v66 = dispatch thunk of static Equatable.== infix(_:_:)();
  sub_100C16A08(v65, type metadata accessor for CRLProto_Data);
  sub_100522F00(v87, (uint64_t *)&unk_101674160);
  sub_100522F00(v54, (uint64_t *)&unk_101674160);
  sub_100C16A08(v62, type metadata accessor for CRLProto_Data);
  sub_100522F00(v56, (uint64_t *)&unk_101674160);
  if (v66) {
    goto LABEL_24;
  }
LABEL_20:
  char v63 = 0;
  return v63 & 1;
}

uint64_t sub_100C105AC(char *a1, void *a2)
{
  uint64_t v4 = type metadata accessor for UnknownStorage();
  uint64_t v55 = *(void *)(v4 - 8);
  uint64_t v56 = v4;
  __chkstk_darwin(v4, v5);
  uint64_t v54 = (char *)&v52 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7, v8);
  uint64_t v53 = (char *)&v52 - v9;
  uint64_t v10 = type metadata accessor for CRLProto_Data(0);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10, v12);
  uint64_t v14 = (char *)&v52 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1005057FC((uint64_t *)&unk_1016745C0);
  uint64_t v16 = v15 - 8;
  __chkstk_darwin(v15, v17);
  uint64_t v19 = (char *)&v52 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_1005057FC((uint64_t *)&unk_101674160);
  __chkstk_darwin(v20 - 8, v21);
  uint64_t v59 = (uint64_t)&v52 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23, v24);
  uint64_t v26 = (char *)&v52 - v25;
  __chkstk_darwin(v27, v28);
  uint64_t v30 = (char *)&v52 - v29;
  uint64_t v31 = type metadata accessor for CRLProto_RefuseOrEndFollow(0);
  uint64_t v32 = *(int *)(v31 + 24);
  uint64_t v57 = a1;
  uint64_t v33 = (uint64_t)&a1[v32];
  uint64_t v34 = v31;
  sub_100522E9C(v33, (uint64_t)v30, (uint64_t *)&unk_101674160);
  uint64_t v35 = *(int *)(v34 + 24);
  uint64_t v58 = a2;
  sub_100522E9C((uint64_t)a2 + v35, (uint64_t)v26, (uint64_t *)&unk_101674160);
  uint64_t v36 = (uint64_t)&v19[*(int *)(v16 + 56)];
  sub_100522E9C((uint64_t)v30, (uint64_t)v19, (uint64_t *)&unk_101674160);
  sub_100522E9C((uint64_t)v26, v36, (uint64_t *)&unk_101674160);
  uint64_t v37 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48);
  if (v37((uint64_t)v19, 1, v10) == 1)
  {
    sub_100522F00((uint64_t)v26, (uint64_t *)&unk_101674160);
    sub_100522F00((uint64_t)v30, (uint64_t *)&unk_101674160);
    if (v37(v36, 1, v10) == 1)
    {
      sub_100522F00((uint64_t)v19, (uint64_t *)&unk_101674160);
      goto LABEL_9;
    }
    goto LABEL_6;
  }
  uint64_t v38 = v59;
  sub_100522E9C((uint64_t)v19, v59, (uint64_t *)&unk_101674160);
  if (v37(v36, 1, v10) == 1)
  {
    sub_100522F00((uint64_t)v26, (uint64_t *)&unk_101674160);
    sub_100522F00((uint64_t)v30, (uint64_t *)&unk_101674160);
    sub_100C16A08(v38, type metadata accessor for CRLProto_Data);
LABEL_6:
    uint64_t v39 = (uint64_t *)&unk_1016745C0;
    uint64_t v40 = (uint64_t)v19;
LABEL_12:
    sub_100522F00(v40, v39);
    goto LABEL_13;
  }
  sub_100C169A0(v36, (uint64_t)v14, type metadata accessor for CRLProto_Data);
  if ((sub_1008D44A8(*(void *)v38, *(void *)(v38 + 8), *(void *)v14, *((void *)v14 + 1)) & 1) == 0)
  {
    sub_100C16A08((uint64_t)v14, type metadata accessor for CRLProto_Data);
    sub_100522F00((uint64_t)v26, (uint64_t *)&unk_101674160);
    sub_100522F00((uint64_t)v30, (uint64_t *)&unk_101674160);
    sub_100C16A08(v38, type metadata accessor for CRLProto_Data);
    uint64_t v40 = (uint64_t)v19;
    uint64_t v39 = (uint64_t *)&unk_101674160;
    goto LABEL_12;
  }
  sub_100C091F4(&qword_1016745B8, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
  char v41 = dispatch thunk of static Equatable.== infix(_:_:)();
  sub_100C16A08((uint64_t)v14, type metadata accessor for CRLProto_Data);
  sub_100522F00((uint64_t)v26, (uint64_t *)&unk_101674160);
  sub_100522F00((uint64_t)v30, (uint64_t *)&unk_101674160);
  sub_100C16A08(v38, type metadata accessor for CRLProto_Data);
  sub_100522F00((uint64_t)v19, (uint64_t *)&unk_101674160);
  if ((v41 & 1) == 0)
  {
LABEL_13:
    char v49 = 0;
    return v49 & 1;
  }
LABEL_9:
  uint64_t v42 = v58;
  if (*(void *)v57 != *v58) {
    goto LABEL_13;
  }
  uint64_t v44 = v55;
  uint64_t v43 = v56;
  uint64_t v45 = *(void (**)(char *, char *, uint64_t))(v55 + 16);
  uint64_t v46 = v53;
  v45(v53, &v57[*(int *)(v34 + 20)], v56);
  uint64_t v47 = (char *)v42 + *(int *)(v34 + 20);
  uint64_t v48 = v54;
  v45(v54, v47, v43);
  sub_100C091F4(&qword_1016745B8, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
  char v49 = dispatch thunk of static Equatable.== infix(_:_:)();
  uint64_t v50 = *(void (**)(char *, uint64_t))(v44 + 8);
  v50(v48, v43);
  v50(v46, v43);
  return v49 & 1;
}

uint64_t sub_100C10B74(uint64_t a1, uint64_t a2)
{
  uint64_t v80 = type metadata accessor for UnknownStorage();
  uint64_t v78 = *(void *)(v80 - 8);
  __chkstk_darwin(v80, v4);
  uint64_t v77 = (char *)&v75 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6, v7);
  uint64_t v76 = (char *)&v75 - v8;
  uint64_t v9 = type metadata accessor for CRLProto_Data(0);
  uint64_t v88 = *(void *)(v9 - 8);
  __chkstk_darwin(v9, v10);
  uint64_t v75 = (uint64_t)&v75 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12, v13);
  uint64_t v87 = (char *)&v75 - v14;
  uint64_t v15 = sub_1005057FC((uint64_t *)&unk_1016745C0);
  __chkstk_darwin(v15, v16);
  uint64_t v83 = (char *)&v75 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18, v19);
  uint64_t v21 = (char *)&v75 - v20;
  uint64_t v22 = sub_1005057FC((uint64_t *)&unk_101674160);
  __chkstk_darwin(v22 - 8, v23);
  uint64_t v79 = (uint64_t)&v75 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25, v26);
  uint64_t v86 = (uint64_t)&v75 - v27;
  __chkstk_darwin(v28, v29);
  uint64_t v82 = (uint64_t)&v75 - v30;
  __chkstk_darwin(v31, v32);
  uint64_t v34 = (char *)&v75 - v33;
  __chkstk_darwin(v35, v36);
  uint64_t v38 = (char *)&v75 - v37;
  __chkstk_darwin(v39, v40);
  uint64_t v42 = (char *)&v75 - v41;
  uint64_t v43 = type metadata accessor for CRLProto_StartOrEndFollow(0);
  uint64_t v44 = *(int *)(v43 + 20);
  uint64_t v84 = a1;
  sub_100522E9C(a1 + v44, (uint64_t)v42, (uint64_t *)&unk_101674160);
  uint64_t v45 = *(int *)(v43 + 20);
  uint64_t v85 = a2;
  sub_100522E9C(a2 + v45, (uint64_t)v38, (uint64_t *)&unk_101674160);
  uint64_t v81 = v15;
  uint64_t v46 = *(int *)(v15 + 48);
  uint64_t v47 = v88;
  uint64_t v48 = (uint64_t)&v21[v46];
  sub_100522E9C((uint64_t)v42, (uint64_t)v21, (uint64_t *)&unk_101674160);
  sub_100522E9C((uint64_t)v38, v48, (uint64_t *)&unk_101674160);
  char v49 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v47 + 48);
  if (v49((uint64_t)v21, 1, v9) == 1)
  {
    sub_100522F00((uint64_t)v38, (uint64_t *)&unk_101674160);
    sub_100522F00((uint64_t)v42, (uint64_t *)&unk_101674160);
    if (v49(v48, 1, v9) != 1)
    {
LABEL_15:
      uint64_t v62 = (uint64_t *)&unk_1016745C0;
      uint64_t v63 = (uint64_t)v21;
LABEL_22:
      sub_100522F00(v63, v62);
      goto LABEL_23;
    }
    uint64_t v50 = v9;
    sub_100522F00((uint64_t)v21, (uint64_t *)&unk_101674160);
  }
  else
  {
    uint64_t v57 = (uint64_t)v87;
    sub_100522E9C((uint64_t)v21, (uint64_t)v34, (uint64_t *)&unk_101674160);
    uint64_t v88 = v9;
    if (v49(v48, 1, v9) == 1)
    {
      sub_100522F00((uint64_t)v38, (uint64_t *)&unk_101674160);
      sub_100522F00((uint64_t)v42, (uint64_t *)&unk_101674160);
      uint64_t v58 = (uint64_t)v34;
LABEL_14:
      sub_100C16A08(v58, type metadata accessor for CRLProto_Data);
      goto LABEL_15;
    }
    sub_100C169A0(v48, v57, type metadata accessor for CRLProto_Data);
    if ((sub_1008D44A8(*(void *)v34, *((void *)v34 + 1), *(void *)v57, *(void *)(v57 + 8)) & 1) == 0)
    {
      sub_100C16A08(v57, type metadata accessor for CRLProto_Data);
      sub_100522F00((uint64_t)v38, (uint64_t *)&unk_101674160);
      sub_100522F00((uint64_t)v42, (uint64_t *)&unk_101674160);
      uint64_t v64 = (uint64_t)v34;
      goto LABEL_21;
    }
    sub_100C091F4(&qword_1016745B8, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
    char v59 = dispatch thunk of static Equatable.== infix(_:_:)();
    sub_100C16A08(v57, type metadata accessor for CRLProto_Data);
    sub_100522F00((uint64_t)v38, (uint64_t *)&unk_101674160);
    uint64_t v60 = (uint64_t)v42;
    uint64_t v50 = v88;
    sub_100522F00(v60, (uint64_t *)&unk_101674160);
    sub_100C16A08((uint64_t)v34, type metadata accessor for CRLProto_Data);
    sub_100522F00((uint64_t)v21, (uint64_t *)&unk_101674160);
    if ((v59 & 1) == 0) {
      goto LABEL_23;
    }
  }
  uint64_t v51 = v84;
  uint64_t v52 = v82;
  sub_100522E9C(v84 + *(int *)(v43 + 24), v82, (uint64_t *)&unk_101674160);
  uint64_t v53 = *(int *)(v43 + 24);
  uint64_t v54 = v85;
  uint64_t v55 = v86;
  sub_100522E9C(v85 + v53, v86, (uint64_t *)&unk_101674160);
  uint64_t v21 = v83;
  uint64_t v56 = (uint64_t)&v83[*(int *)(v81 + 48)];
  sub_100522E9C(v52, (uint64_t)v83, (uint64_t *)&unk_101674160);
  sub_100522E9C(v55, v56, (uint64_t *)&unk_101674160);
  if (v49((uint64_t)v21, 1, v50) != 1)
  {
    uint64_t v61 = v79;
    sub_100522E9C((uint64_t)v21, v79, (uint64_t *)&unk_101674160);
    if (v49(v56, 1, v50) == 1)
    {
      sub_100522F00(v86, (uint64_t *)&unk_101674160);
      sub_100522F00(v52, (uint64_t *)&unk_101674160);
      uint64_t v58 = v61;
      goto LABEL_14;
    }
    uint64_t v65 = v75;
    sub_100C169A0(v56, v75, type metadata accessor for CRLProto_Data);
    if (sub_1008D44A8(*(void *)v61, *(void *)(v61 + 8), *(void *)v65, *(void *)(v65 + 8)))
    {
      sub_100C091F4(&qword_1016745B8, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
      char v66 = dispatch thunk of static Equatable.== infix(_:_:)();
      sub_100C16A08(v65, type metadata accessor for CRLProto_Data);
      sub_100522F00(v86, (uint64_t *)&unk_101674160);
      sub_100522F00(v52, (uint64_t *)&unk_101674160);
      sub_100C16A08(v61, type metadata accessor for CRLProto_Data);
      sub_100522F00((uint64_t)v21, (uint64_t *)&unk_101674160);
      if (v66) {
        goto LABEL_19;
      }
LABEL_23:
      char v72 = 0;
      return v72 & 1;
    }
    sub_100C16A08(v65, type metadata accessor for CRLProto_Data);
    sub_100522F00(v86, (uint64_t *)&unk_101674160);
    sub_100522F00(v52, (uint64_t *)&unk_101674160);
    uint64_t v64 = v61;
LABEL_21:
    sub_100C16A08(v64, type metadata accessor for CRLProto_Data);
    uint64_t v63 = (uint64_t)v21;
    uint64_t v62 = (uint64_t *)&unk_101674160;
    goto LABEL_22;
  }
  sub_100522F00(v55, (uint64_t *)&unk_101674160);
  sub_100522F00(v52, (uint64_t *)&unk_101674160);
  if (v49(v56, 1, v50) != 1) {
    goto LABEL_15;
  }
  sub_100522F00((uint64_t)v21, (uint64_t *)&unk_101674160);
LABEL_19:
  uint64_t v67 = v78;
  uint64_t v68 = *(void (**)(char *, uint64_t, uint64_t))(v78 + 16);
  uint64_t v69 = v76;
  uint64_t v70 = v80;
  v68(v76, v51, v80);
  uint64_t v71 = v77;
  v68(v77, v54, v70);
  sub_100C091F4(&qword_1016745B8, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
  char v72 = dispatch thunk of static Equatable.== infix(_:_:)();
  uint64_t v73 = *(void (**)(char *, uint64_t))(v67 + 8);
  v73(v71, v70);
  v73(v69, v70);
  return v72 & 1;
}

uint64_t sub_100C11468(uint64_t *a1, uint64_t *a2)
{
  uint64_t v176 = type metadata accessor for UnknownStorage();
  uint64_t v155 = *(void *)(v176 - 8);
  __chkstk_darwin(v176, v4);
  uint64_t v154 = (char *)&v148 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6, v7);
  long long v153 = (char *)&v148 - v8;
  uint64_t v162 = type metadata accessor for CRLProto_Data(0);
  uint64_t v160 = *(void *)(v162 - 8);
  __chkstk_darwin(v162, v9);
  uint64_t v156 = (uint64_t)&v148 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v159 = sub_1005057FC((uint64_t *)&unk_1016745C0);
  __chkstk_darwin(v159, v11);
  uint64_t v164 = (uint64_t)&v148 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1005057FC((uint64_t *)&unk_101674160);
  __chkstk_darwin(v13 - 8, v14);
  uint64_t v157 = (uint64_t)&v148 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16, v17);
  uint64_t v163 = (uint64_t)&v148 - v18;
  __chkstk_darwin(v19, v20);
  uint64_t v161 = (uint64_t)&v148 - v21;
  uint64_t v22 = type metadata accessor for CRLProto_Point(0);
  uint64_t v166 = *(void *)(v22 - 8);
  uint64_t v167 = v22;
  __chkstk_darwin(v22, v23);
  CGFloat v158 = (float *)((char *)&v148 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v165 = sub_1005057FC(&qword_101697CC8);
  __chkstk_darwin(v165, v25);
  uint64_t v169 = (uint64_t)&v148 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = sub_1005057FC(&qword_10168E570);
  __chkstk_darwin(v27 - 8, v28);
  uint64_t v30 = (float *)((char *)&v148 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v31, v32);
  uint64_t v168 = (uint64_t)&v148 - v33;
  __chkstk_darwin(v34, v35);
  uint64_t v171 = (uint64_t)&v148 - v36;
  uint64_t v37 = type metadata accessor for CRLProto_Date(0);
  uint64_t v174 = *(void *)(v37 - 8);
  uint64_t v175 = v37;
  __chkstk_darwin(v37, v38);
  uint64_t v170 = (double *)((char *)&v148 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v173 = sub_1005057FC(&qword_101697CD0);
  __chkstk_darwin(v173, v40);
  uint64_t v178 = (uint64_t)&v148 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = sub_1005057FC(&qword_1016930C8);
  __chkstk_darwin(v42 - 8, v43);
  CGFloat v172 = (double *)((char *)&v148 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v45, v46);
  uint64_t v179 = (uint64_t)&v148 - v47;
  __chkstk_darwin(v48, v49);
  uint64_t v180 = (uint64_t)&v148 - v50;
  uint64_t v51 = type metadata accessor for CRLProto_Path(0);
  uint64_t v52 = *(void *)(v51 - 8);
  __chkstk_darwin(v51, v53);
  uint64_t v177 = (void **)((char *)&v148 - ((v54 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v55 = sub_1005057FC(&qword_101697CD8);
  __chkstk_darwin(v55, v56);
  uint64_t v58 = (char *)&v148 - ((v57 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v59 = sub_1005057FC(&qword_1016930D8);
  __chkstk_darwin(v59 - 8, v60);
  uint64_t v62 = (void **)((char *)&v148 - ((v61 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v63, v64);
  char v66 = (char *)&v148 - v65;
  __chkstk_darwin(v67, v68);
  uint64_t v70 = (char *)&v148 - v69;
  if ((sub_1005B841C(*a1, *a2) & 1) == 0) {
    goto LABEL_27;
  }
  uint64_t v149 = v30;
  uint64_t v71 = type metadata accessor for CRLProto_PKStrokePathData(0);
  uint64_t v72 = *(int *)(v71 + 24);
  uint64_t v150 = a1;
  sub_100522E9C((uint64_t)a1 + v72, (uint64_t)v70, &qword_1016930D8);
  Swift::String v152 = (int *)v71;
  uint64_t v73 = *(int *)(v71 + 24);
  CKRecordID v151 = a2;
  sub_100522E9C((uint64_t)a2 + v73, (uint64_t)v66, &qword_1016930D8);
  uint64_t v74 = (uint64_t)&v58[*(int *)(v55 + 48)];
  sub_100522E9C((uint64_t)v70, (uint64_t)v58, &qword_1016930D8);
  sub_100522E9C((uint64_t)v66, v74, &qword_1016930D8);
  uint64_t v75 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v52 + 48);
  if (v75((uint64_t)v58, 1, v51) == 1)
  {
    sub_100522F00((uint64_t)v66, &qword_1016930D8);
    sub_100522F00((uint64_t)v70, &qword_1016930D8);
    if (v75(v74, 1, v51) == 1)
    {
      sub_100522F00((uint64_t)v58, &qword_1016930D8);
      goto LABEL_5;
    }
LABEL_10:
    uint64_t v86 = &qword_101697CD8;
    uint64_t v87 = (uint64_t)v58;
LABEL_26:
    sub_100522F00(v87, v86);
    goto LABEL_27;
  }
  sub_100522E9C((uint64_t)v58, (uint64_t)v62, &qword_1016930D8);
  if (v75(v74, 1, v51) == 1)
  {
    sub_100522F00((uint64_t)v66, &qword_1016930D8);
    sub_100522F00((uint64_t)v70, &qword_1016930D8);
    sub_100C16A08((uint64_t)v62, type metadata accessor for CRLProto_Path);
    goto LABEL_10;
  }
  uint64_t v88 = v177;
  sub_100C169A0(v74, (uint64_t)v177, type metadata accessor for CRLProto_Path);
  if ((sub_1005BD0D0(*v62, *v88) & 1) == 0)
  {
    sub_100C16A08((uint64_t)v88, type metadata accessor for CRLProto_Path);
    uint64_t v96 = &qword_1016930D8;
    sub_100522F00((uint64_t)v66, &qword_1016930D8);
    sub_100522F00((uint64_t)v70, &qword_1016930D8);
    sub_100C16A08((uint64_t)v62, type metadata accessor for CRLProto_Path);
    uint64_t v87 = (uint64_t)v58;
LABEL_21:
    uint64_t v86 = v96;
    goto LABEL_26;
  }
  sub_100C091F4(&qword_1016745B8, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
  char v89 = dispatch thunk of static Equatable.== infix(_:_:)();
  sub_100C16A08((uint64_t)v88, type metadata accessor for CRLProto_Path);
  sub_100522F00((uint64_t)v66, &qword_1016930D8);
  sub_100522F00((uint64_t)v70, &qword_1016930D8);
  sub_100C16A08((uint64_t)v62, type metadata accessor for CRLProto_Path);
  sub_100522F00((uint64_t)v58, &qword_1016930D8);
  if ((v89 & 1) == 0) {
    goto LABEL_27;
  }
LABEL_5:
  uint64_t v76 = v152;
  uint64_t v77 = v152[7];
  uint64_t v78 = v150;
  uint64_t v79 = (_DWORD *)((char *)v150 + v77);
  char v80 = *((unsigned char *)v150 + v77 + 4);
  uint64_t v81 = v151;
  uint64_t v82 = (_DWORD *)((char *)v151 + v77);
  int v83 = *((unsigned __int8 *)v151 + v77 + 4);
  if (v80)
  {
    uint64_t v84 = v179;
    uint64_t v85 = v180;
    if (!v83) {
      goto LABEL_27;
    }
  }
  else
  {
    if (*v79 != *v82) {
      LOBYTE(v83) = 1;
    }
    uint64_t v84 = v179;
    uint64_t v85 = v180;
    if (v83) {
      goto LABEL_27;
    }
  }
  sub_100522E9C((uint64_t)v150 + v152[8], v85, &qword_1016930C8);
  sub_100522E9C((uint64_t)v81 + v76[8], v84, &qword_1016930C8);
  uint64_t v90 = v178;
  uint64_t v91 = v178 + *(int *)(v173 + 48);
  sub_100522E9C(v85, v178, &qword_1016930C8);
  uint64_t v92 = v90;
  sub_100522E9C(v84, v91, &qword_1016930C8);
  uint64_t v93 = v175;
  char v94 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v174 + 48);
  if (v94(v92, 1, v175) == 1)
  {
    sub_100522F00(v84, &qword_1016930C8);
    uint64_t v92 = v178;
    sub_100522F00(v85, &qword_1016930C8);
    if (v94(v91, 1, v93) == 1)
    {
      sub_100522F00(v92, &qword_1016930C8);
      uint64_t v95 = v176;
      goto LABEL_31;
    }
LABEL_24:
    uint64_t v86 = &qword_101697CD0;
LABEL_25:
    uint64_t v87 = v92;
    goto LABEL_26;
  }
  char v97 = v172;
  sub_100522E9C(v92, (uint64_t)v172, &qword_1016930C8);
  if (v94(v91, 1, v93) == 1)
  {
    sub_100522F00(v179, &qword_1016930C8);
    sub_100522F00(v180, &qword_1016930C8);
    sub_100C16A08((uint64_t)v97, type metadata accessor for CRLProto_Date);
    goto LABEL_24;
  }
  uint64_t v100 = v170;
  sub_100C169A0(v91, (uint64_t)v170, type metadata accessor for CRLProto_Date);
  uint64_t v101 = v179;
  if (*v97 != *v100)
  {
    sub_100C16A08((uint64_t)v100, type metadata accessor for CRLProto_Date);
    uint64_t v96 = &qword_1016930C8;
    sub_100522F00(v101, &qword_1016930C8);
    sub_100522F00(v180, &qword_1016930C8);
    sub_100C16A08((uint64_t)v97, type metadata accessor for CRLProto_Date);
    uint64_t v87 = v178;
    goto LABEL_21;
  }
  sub_100C091F4(&qword_1016745B8, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
  uint64_t v95 = v176;
  char v102 = dispatch thunk of static Equatable.== infix(_:_:)();
  sub_100C16A08((uint64_t)v100, type metadata accessor for CRLProto_Date);
  sub_100522F00(v101, &qword_1016930C8);
  sub_100522F00(v180, &qword_1016930C8);
  sub_100C16A08((uint64_t)v97, type metadata accessor for CRLProto_Date);
  sub_100522F00(v178, &qword_1016930C8);
  if ((v102 & 1) == 0) {
    goto LABEL_27;
  }
LABEL_31:
  uint64_t v103 = v152;
  uint64_t v104 = v152[9];
  uint64_t v105 = (float *)((char *)v78 + v104);
  char v106 = *((unsigned char *)v78 + v104 + 4);
  uint64_t v107 = v151;
  uint64_t v108 = (float *)((char *)v151 + v104);
  int v109 = *((unsigned __int8 *)v151 + v104 + 4);
  if (v106)
  {
    uint64_t v110 = v171;
    if (!v109) {
      goto LABEL_27;
    }
  }
  else
  {
    if (*v105 != *v108) {
      LOBYTE(v109) = 1;
    }
    uint64_t v110 = v171;
    if (v109) {
      goto LABEL_27;
    }
  }
  uint64_t v111 = v152[10];
  float v112 = (float *)((char *)v78 + v111);
  char v113 = *((unsigned char *)v78 + v111 + 4);
  char v114 = (float *)((char *)v151 + v111);
  int v115 = *((unsigned __int8 *)v151 + v111 + 4);
  if (v113)
  {
    if (!v115) {
      goto LABEL_27;
    }
  }
  else
  {
    if (*v112 != *v114) {
      LOBYTE(v115) = 1;
    }
    if (v115) {
      goto LABEL_27;
    }
  }
  sub_100522E9C((uint64_t)v78 + v152[11], v110, &qword_10168E570);
  uint64_t v116 = v168;
  sub_100522E9C((uint64_t)v107 + v103[11], v168, &qword_10168E570);
  uint64_t v117 = v169;
  uint64_t v118 = v169 + *(int *)(v165 + 48);
  sub_100522E9C(v110, v169, &qword_10168E570);
  sub_100522E9C(v116, v118, &qword_10168E570);
  uint64_t v119 = v167;
  uint64_t v120 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v166 + 48);
  if (v120(v117, 1, v167) == 1)
  {
    sub_100522F00(v116, &qword_10168E570);
    uint64_t v117 = v169;
    sub_100522F00(v110, &qword_10168E570);
    if (v120(v118, 1, v119) == 1)
    {
      sub_100522F00(v117, &qword_10168E570);
      goto LABEL_47;
    }
LABEL_55:
    uint64_t v86 = &qword_101697CC8;
    uint64_t v87 = v117;
    goto LABEL_26;
  }
  int v131 = v149;
  sub_100522E9C(v117, (uint64_t)v149, &qword_10168E570);
  if (v120(v118, 1, v119) == 1)
  {
    sub_100522F00(v168, &qword_10168E570);
    sub_100522F00(v171, &qword_10168E570);
    sub_100C16A08((uint64_t)v131, type metadata accessor for CRLProto_Point);
    goto LABEL_55;
  }
  uint64_t v132 = v158;
  sub_100C169A0(v118, (uint64_t)v158, type metadata accessor for CRLProto_Point);
  BOOL v133 = *v131 == *v132;
  uint64_t v134 = (uint64_t)v131;
  uint64_t v135 = v168;
  if (!v133 || *(float *)(v134 + 4) != v132[1])
  {
    sub_100C16A08((uint64_t)v132, type metadata accessor for CRLProto_Point);
    uint64_t v96 = &qword_10168E570;
    sub_100522F00(v135, &qword_10168E570);
    sub_100522F00(v171, &qword_10168E570);
    sub_100C16A08(v134, type metadata accessor for CRLProto_Point);
    uint64_t v87 = v169;
    goto LABEL_21;
  }
  sub_100C091F4(&qword_1016745B8, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
  char v136 = dispatch thunk of static Equatable.== infix(_:_:)();
  sub_100C16A08((uint64_t)v132, type metadata accessor for CRLProto_Point);
  sub_100522F00(v135, &qword_10168E570);
  sub_100522F00(v171, &qword_10168E570);
  sub_100C16A08(v134, type metadata accessor for CRLProto_Point);
  sub_100522F00(v169, &qword_10168E570);
  if ((v136 & 1) == 0) {
    goto LABEL_27;
  }
LABEL_47:
  char v121 = v152;
  uint64_t v122 = v161;
  sub_100522E9C((uint64_t)v78 + v152[12], v161, (uint64_t *)&unk_101674160);
  uint64_t v123 = v163;
  sub_100522E9C((uint64_t)v107 + v121[12], v163, (uint64_t *)&unk_101674160);
  uint64_t v124 = v164;
  uint64_t v125 = v164 + *(int *)(v159 + 48);
  sub_100522E9C(v122, v164, (uint64_t *)&unk_101674160);
  uint64_t v92 = v124;
  sub_100522E9C(v123, v125, (uint64_t *)&unk_101674160);
  uint64_t v126 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v160 + 48);
  uint64_t v127 = v162;
  if (v126(v92, 1, v162) != 1)
  {
    uint64_t v137 = v157;
    sub_100522E9C(v92, v157, (uint64_t *)&unk_101674160);
    if (v126(v125, 1, v127) == 1)
    {
      sub_100522F00(v163, (uint64_t *)&unk_101674160);
      sub_100522F00(v122, (uint64_t *)&unk_101674160);
      sub_100C16A08(v137, type metadata accessor for CRLProto_Data);
      goto LABEL_64;
    }
    uint64_t v138 = v156;
    sub_100C169A0(v125, v156, type metadata accessor for CRLProto_Data);
    if (sub_1008D44A8(*(void *)v137, *(void *)(v137 + 8), *(void *)v138, *(void *)(v138 + 8)))
    {
      sub_100C091F4(&qword_1016745B8, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
      char v139 = dispatch thunk of static Equatable.== infix(_:_:)();
      sub_100C16A08(v138, type metadata accessor for CRLProto_Data);
      sub_100522F00(v163, (uint64_t *)&unk_101674160);
      sub_100522F00(v122, (uint64_t *)&unk_101674160);
      sub_100C16A08(v137, type metadata accessor for CRLProto_Data);
      sub_100522F00(v164, (uint64_t *)&unk_101674160);
      if ((v139 & 1) == 0) {
        goto LABEL_27;
      }
      goto LABEL_50;
    }
    sub_100C16A08(v138, type metadata accessor for CRLProto_Data);
    uint64_t v96 = (uint64_t *)&unk_101674160;
    sub_100522F00(v163, (uint64_t *)&unk_101674160);
    sub_100522F00(v122, (uint64_t *)&unk_101674160);
    sub_100C16A08(v137, type metadata accessor for CRLProto_Data);
    uint64_t v87 = v164;
    goto LABEL_21;
  }
  sub_100522F00(v123, (uint64_t *)&unk_101674160);
  uint64_t v92 = v164;
  sub_100522F00(v122, (uint64_t *)&unk_101674160);
  if (v126(v125, 1, v127) != 1)
  {
LABEL_64:
    uint64_t v86 = (uint64_t *)&unk_1016745C0;
    goto LABEL_25;
  }
  sub_100522F00(v92, (uint64_t *)&unk_101674160);
LABEL_50:
  uint64_t v128 = v152[13];
  int v129 = *((unsigned __int8 *)v78 + v128);
  int v130 = *((unsigned __int8 *)v107 + v128);
  if (v129 != 2)
  {
    if (v130 == 2 || ((((v130 & 1) == 0) ^ v129) & 1) == 0) {
      goto LABEL_27;
    }
LABEL_70:
    uint64_t v140 = (uint64_t)v78 + v152[5];
    uint64_t v141 = v155;
    uint64_t v142 = v152;
    char v143 = *(void (**)(char *, uint64_t, uint64_t))(v155 + 16);
    uint64_t v144 = v153;
    v143(v153, v140, v95);
    uint64_t v145 = (uint64_t)v107 + v142[5];
    CGFloat v146 = v154;
    v143(v154, v145, v95);
    sub_100C091F4(&qword_1016745B8, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
    char v98 = dispatch thunk of static Equatable.== infix(_:_:)();
    uint64_t v147 = *(void (**)(char *, uint64_t))(v141 + 8);
    v147(v146, v95);
    v147(v144, v95);
    return v98 & 1;
  }
  if (v130 == 2) {
    goto LABEL_70;
  }
LABEL_27:
  char v98 = 0;
  return v98 & 1;
}

uint64_t sub_100C12808(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UnknownStorage();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4, v6);
  uint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9, v10);
  uint64_t v12 = (char *)&v18 - v11;
  if ((sub_1008D44A8(*(void *)a1, *(void *)(a1 + 8), *(void *)a2, *(void *)(a2 + 8)) & 1) != 0
    && (sub_1008D44A8(*(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a2 + 16), *(void *)(a2 + 24)) & 1) != 0
    && (sub_1008D44A8(*(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a2 + 32), *(void *)(a2 + 40)) & 1) != 0
    && (sub_1008D44A8(*(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a2 + 48), *(void *)(a2 + 56)) & 1) != 0
    && (sub_1008D44A8(*(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a2 + 64), *(void *)(a2 + 72)) & 1) != 0
    && (sub_1008D44A8(*(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a2 + 80), *(void *)(a2 + 88)) & 1) != 0
    && (sub_1008D44A8(*(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a2 + 96), *(void *)(a2 + 104)) & 1) != 0
    && (sub_1008D44A8(*(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a2 + 112), *(void *)(a2 + 120)) & 1) != 0)
  {
    uint64_t v13 = type metadata accessor for CRLProto_PKStrokePathData.StrokePoint(0);
    uint64_t v14 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    v14(v12, a1 + *(int *)(v13 + 48), v4);
    v14(v8, a2 + *(int *)(v13 + 48), v4);
    sub_100C091F4(&qword_1016745B8, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
    char v15 = dispatch thunk of static Equatable.== infix(_:_:)();
    uint64_t v16 = *(void (**)(char *, uint64_t))(v5 + 8);
    v16(v8, v4);
    v16(v12, v4);
  }
  else
  {
    char v15 = 0;
  }
  return v15 & 1;
}

uint64_t sub_100C12A30(char *a1, char *a2)
{
  uint64_t v4 = type metadata accessor for UnknownStorage();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4, v6);
  uint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9, v10);
  uint64_t v12 = (char *)&v18 - v11;
  if (*(void *)a1 == *(void *)a2 && (sub_1005B7670(*((void *)a1 + 1), *((void *)a2 + 1)) & 1) != 0)
  {
    uint64_t v13 = type metadata accessor for CRLProto_RealTimeMessage(0);
    uint64_t v14 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
    v14(v12, &a1[*(int *)(v13 + 24)], v4);
    v14(v8, &a2[*(int *)(v13 + 24)], v4);
    sub_100C091F4(&qword_1016745B8, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
    char v15 = dispatch thunk of static Equatable.== infix(_:_:)();
    uint64_t v16 = *(void (**)(char *, uint64_t))(v5 + 8);
    v16(v8, v4);
    v16(v12, v4);
  }
  else
  {
    char v15 = 0;
  }
  return v15 & 1;
}

uint64_t sub_100C12BF8(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = type metadata accessor for UnknownStorage();
  uint64_t v56 = *(void *)(v4 - 8);
  uint64_t v57 = v4;
  __chkstk_darwin(v4, v5);
  uint64_t v55 = (char *)&v53 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7, v8);
  uint64_t v54 = (char *)&v53 - v9;
  uint64_t v10 = type metadata accessor for CRLProto_Data(0);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10, v12);
  uint64_t v14 = (char *)&v53 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1005057FC((uint64_t *)&unk_1016745C0);
  uint64_t v16 = v15 - 8;
  __chkstk_darwin(v15, v17);
  uint64_t v19 = (char *)&v53 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_1005057FC((uint64_t *)&unk_101674160);
  __chkstk_darwin(v20 - 8, v21);
  uint64_t v60 = (uint64_t)&v53 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23, v24);
  uint64_t v26 = (char *)&v53 - v25;
  __chkstk_darwin(v27, v28);
  uint64_t v30 = (char *)&v53 - v29;
  uint64_t v31 = type metadata accessor for CRLProto_ObjectMetadata(0);
  uint64_t v32 = *(int *)(v31 + 28);
  uint64_t v58 = a1;
  uint64_t v33 = (uint64_t)a1 + v32;
  uint64_t v34 = v31;
  sub_100522E9C(v33, (uint64_t)v30, (uint64_t *)&unk_101674160);
  uint64_t v35 = *(int *)(v34 + 28);
  uint64_t v59 = a2;
  sub_100522E9C((uint64_t)a2 + v35, (uint64_t)v26, (uint64_t *)&unk_101674160);
  uint64_t v36 = (uint64_t)&v19[*(int *)(v16 + 56)];
  sub_100522E9C((uint64_t)v30, (uint64_t)v19, (uint64_t *)&unk_101674160);
  sub_100522E9C((uint64_t)v26, v36, (uint64_t *)&unk_101674160);
  uint64_t v37 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48);
  if (v37((uint64_t)v19, 1, v10) != 1)
  {
    uint64_t v48 = v60;
    sub_100522E9C((uint64_t)v19, v60, (uint64_t *)&unk_101674160);
    if (v37(v36, 1, v10) != 1)
    {
      sub_100C169A0(v36, (uint64_t)v14, type metadata accessor for CRLProto_Data);
      if (sub_1008D44A8(*(void *)v48, *(void *)(v48 + 8), *(void *)v14, *((void *)v14 + 1)))
      {
        sub_100C091F4(&qword_1016745B8, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
        char v52 = dispatch thunk of static Equatable.== infix(_:_:)();
        sub_100C16A08((uint64_t)v14, type metadata accessor for CRLProto_Data);
        sub_100522F00((uint64_t)v26, (uint64_t *)&unk_101674160);
        sub_100522F00((uint64_t)v30, (uint64_t *)&unk_101674160);
        sub_100C16A08(v48, type metadata accessor for CRLProto_Data);
        sub_100522F00((uint64_t)v19, (uint64_t *)&unk_101674160);
        if (v52) {
          goto LABEL_4;
        }
LABEL_11:
        char v46 = 0;
        return v46 & 1;
      }
      sub_100C16A08((uint64_t)v14, type metadata accessor for CRLProto_Data);
      sub_100522F00((uint64_t)v26, (uint64_t *)&unk_101674160);
      sub_100522F00((uint64_t)v30, (uint64_t *)&unk_101674160);
      sub_100C16A08(v48, type metadata accessor for CRLProto_Data);
      uint64_t v50 = (uint64_t)v19;
      uint64_t v49 = (uint64_t *)&unk_101674160;
LABEL_10:
      sub_100522F00(v50, v49);
      goto LABEL_11;
    }
    sub_100522F00((uint64_t)v26, (uint64_t *)&unk_101674160);
    sub_100522F00((uint64_t)v30, (uint64_t *)&unk_101674160);
    sub_100C16A08(v48, type metadata accessor for CRLProto_Data);
LABEL_9:
    uint64_t v49 = (uint64_t *)&unk_1016745C0;
    uint64_t v50 = (uint64_t)v19;
    goto LABEL_10;
  }
  sub_100522F00((uint64_t)v26, (uint64_t *)&unk_101674160);
  sub_100522F00((uint64_t)v30, (uint64_t *)&unk_101674160);
  if (v37(v36, 1, v10) != 1) {
    goto LABEL_9;
  }
  sub_100522F00((uint64_t)v19, (uint64_t *)&unk_101674160);
LABEL_4:
  uint64_t v38 = v58;
  uint64_t v39 = v59;
  if (!sub_1005B9E9C(*v58, *v59) || (sub_1005B9F08(v38[1], v39[1]) & 1) == 0) {
    goto LABEL_11;
  }
  uint64_t v41 = v56;
  uint64_t v40 = v57;
  uint64_t v42 = *(void (**)(char *, char *, uint64_t))(v56 + 16);
  uint64_t v43 = v54;
  v42(v54, (char *)v38 + *(int *)(v34 + 24), v57);
  uint64_t v44 = (char *)v39 + *(int *)(v34 + 24);
  uint64_t v45 = v55;
  v42(v55, v44, v40);
  sub_100C091F4(&qword_1016745B8, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
  char v46 = dispatch thunk of static Equatable.== infix(_:_:)();
  uint64_t v47 = *(void (**)(char *, uint64_t))(v41 + 8);
  v47(v45, v40);
  v47(v43, v40);
  return v46 & 1;
}

uint64_t sub_100C131D0(void *a1, void *a2)
{
  uint64_t v4 = type metadata accessor for UnknownStorage();
  uint64_t v57 = *(void *)(v4 - 8);
  uint64_t v58 = v4;
  __chkstk_darwin(v4, v5);
  uint64_t v56 = (char *)&v54 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7, v8);
  uint64_t v55 = (char *)&v54 - v9;
  uint64_t v10 = type metadata accessor for CRLProto_Data(0);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10, v12);
  uint64_t v14 = (char *)&v54 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1005057FC((uint64_t *)&unk_1016745C0);
  uint64_t v16 = v15 - 8;
  __chkstk_darwin(v15, v17);
  uint64_t v19 = (char *)&v54 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_1005057FC((uint64_t *)&unk_101674160);
  __chkstk_darwin(v20 - 8, v21);
  uint64_t v61 = (uint64_t)&v54 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23, v24);
  uint64_t v26 = (char *)&v54 - v25;
  __chkstk_darwin(v27, v28);
  uint64_t v30 = (char *)&v54 - v29;
  uint64_t v31 = type metadata accessor for CRLProto_ObjectMetadata.AssetInfo(0);
  uint64_t v32 = *(int *)(v31 + 28);
  uint64_t v59 = a1;
  uint64_t v33 = (uint64_t)a1 + v32;
  uint64_t v34 = v31;
  sub_100522E9C(v33, (uint64_t)v30, (uint64_t *)&unk_101674160);
  uint64_t v35 = *(int *)(v34 + 28);
  uint64_t v60 = a2;
  sub_100522E9C((uint64_t)a2 + v35, (uint64_t)v26, (uint64_t *)&unk_101674160);
  uint64_t v36 = (uint64_t)&v19[*(int *)(v16 + 56)];
  sub_100522E9C((uint64_t)v30, (uint64_t)v19, (uint64_t *)&unk_101674160);
  sub_100522E9C((uint64_t)v26, v36, (uint64_t *)&unk_101674160);
  uint64_t v37 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48);
  if (v37((uint64_t)v19, 1, v10) == 1)
  {
    sub_100522F00((uint64_t)v26, (uint64_t *)&unk_101674160);
    sub_100522F00((uint64_t)v30, (uint64_t *)&unk_101674160);
    if (v37(v36, 1, v10) == 1)
    {
      sub_100522F00((uint64_t)v19, (uint64_t *)&unk_101674160);
      goto LABEL_9;
    }
    goto LABEL_6;
  }
  uint64_t v38 = v61;
  sub_100522E9C((uint64_t)v19, v61, (uint64_t *)&unk_101674160);
  if (v37(v36, 1, v10) == 1)
  {
    sub_100522F00((uint64_t)v26, (uint64_t *)&unk_101674160);
    sub_100522F00((uint64_t)v30, (uint64_t *)&unk_101674160);
    sub_100C16A08(v38, type metadata accessor for CRLProto_Data);
LABEL_6:
    uint64_t v39 = (uint64_t *)&unk_1016745C0;
    uint64_t v40 = (uint64_t)v19;
LABEL_15:
    sub_100522F00(v40, v39);
    goto LABEL_16;
  }
  sub_100C169A0(v36, (uint64_t)v14, type metadata accessor for CRLProto_Data);
  if ((sub_1008D44A8(*(void *)v38, *(void *)(v38 + 8), *(void *)v14, *((void *)v14 + 1)) & 1) == 0)
  {
    sub_100C16A08((uint64_t)v14, type metadata accessor for CRLProto_Data);
    sub_100522F00((uint64_t)v26, (uint64_t *)&unk_101674160);
    sub_100522F00((uint64_t)v30, (uint64_t *)&unk_101674160);
    sub_100C16A08(v38, type metadata accessor for CRLProto_Data);
    uint64_t v40 = (uint64_t)v19;
    uint64_t v39 = (uint64_t *)&unk_101674160;
    goto LABEL_15;
  }
  sub_100C091F4(&qword_1016745B8, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
  char v41 = dispatch thunk of static Equatable.== infix(_:_:)();
  sub_100C16A08((uint64_t)v14, type metadata accessor for CRLProto_Data);
  sub_100522F00((uint64_t)v26, (uint64_t *)&unk_101674160);
  sub_100522F00((uint64_t)v30, (uint64_t *)&unk_101674160);
  sub_100C16A08(v38, type metadata accessor for CRLProto_Data);
  sub_100522F00((uint64_t)v19, (uint64_t *)&unk_101674160);
  if ((v41 & 1) == 0) {
    goto LABEL_16;
  }
LABEL_9:
  uint64_t v42 = v59;
  uint64_t v43 = v60;
  if (*v59 == *v60 && v59[1] == v60[1] || (char v44 = 0, (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0))
  {
    if (v42[2] == v43[2])
    {
      uint64_t v45 = (char *)v42 + *(int *)(v34 + 24);
      uint64_t v47 = v57;
      uint64_t v46 = v58;
      uint64_t v48 = *(void (**)(char *, char *, uint64_t))(v57 + 16);
      uint64_t v49 = v55;
      v48(v55, v45, v58);
      uint64_t v50 = (char *)v43 + *(int *)(v34 + 24);
      uint64_t v51 = v56;
      v48(v56, v50, v46);
      sub_100C091F4(&qword_1016745B8, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
      char v44 = dispatch thunk of static Equatable.== infix(_:_:)();
      char v52 = *(void (**)(char *, uint64_t))(v47 + 8);
      v52(v51, v46);
      v52(v49, v46);
      return v44 & 1;
    }
LABEL_16:
    char v44 = 0;
  }
  return v44 & 1;
}

uint64_t sub_100C137C0(uint64_t *a1, char *a2)
{
  uint64_t v4 = type metadata accessor for UnknownStorage();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4, v6);
  uint64_t v120 = (char *)&v110 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8, v9);
  uint64_t v119 = (char *)&v110 - v10;
  uint64_t v11 = type metadata accessor for CRLProto_Data(0);
  uint64_t v125 = *(char **)(v11 - 8);
  uint64_t v126 = v11;
  __chkstk_darwin(v11, v12);
  uint64_t v121 = (uint64_t)&v110 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14, v15);
  uint64_t v122 = (uint64_t)&v110 - v16;
  __chkstk_darwin(v17, v18);
  uint64_t v20 = (char *)&v110 - v19;
  uint64_t v127 = sub_1005057FC((uint64_t *)&unk_1016745C0);
  __chkstk_darwin(v127, v21);
  uint64_t v123 = (char *)&v110 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23, v24);
  uint64_t v124 = (uint64_t)&v110 - v25;
  __chkstk_darwin(v26, v27);
  uint64_t v29 = (char *)&v110 - v28;
  uint64_t v30 = sub_1005057FC((uint64_t *)&unk_101674160);
  __chkstk_darwin(v30 - 8, v31);
  __chkstk_darwin(v32, v33);
  __chkstk_darwin(v34, v35);
  __chkstk_darwin(v36, v37);
  __chkstk_darwin((char *)&v110 - v38, v39);
  __chkstk_darwin(v40, v41);
  __chkstk_darwin(v43, (char *)&v110 - v42);
  uint64_t v45 = (char *)&v110 - v44;
  __chkstk_darwin(v46, v47);
  uint64_t v49 = (char *)&v110 - v48;
  __chkstk_darwin(v50, v51);
  uint64_t v59 = (char *)&v110 - v58;
  uint64_t v60 = *a1;
  int v61 = *((unsigned __int8 *)a1 + 8);
  uint64_t v62 = *(void *)a2;
  uint64_t v128 = a2;
  if (v61) {
    uint64_t v60 = v60 != 0;
  }
  if (a2[8] == 1)
  {
    if (v62)
    {
      if (v60 != 1) {
        goto LABEL_36;
      }
    }
    else if (v60)
    {
      goto LABEL_36;
    }
  }
  else if (v60 != v62)
  {
    goto LABEL_36;
  }
  uint64_t v117 = v54;
  uint64_t v118 = v53;
  uint64_t v113 = v56;
  uint64_t v114 = v52;
  uint64_t v111 = v55;
  uint64_t v112 = v57;
  uint64_t v110 = v5;
  uint64_t v115 = v4;
  uint64_t v63 = type metadata accessor for CRLProto_TextSelection(0);
  uint64_t v64 = *(int *)(v63 + 24);
  uint64_t v116 = a1;
  sub_100522E9C((uint64_t)a1 + v64, (uint64_t)v59, (uint64_t *)&unk_101674160);
  uint64_t v65 = (int *)v63;
  sub_100522E9C((uint64_t)&v128[*(int *)(v63 + 24)], (uint64_t)v49, (uint64_t *)&unk_101674160);
  uint64_t v66 = (uint64_t)&v29[*(int *)(v127 + 48)];
  sub_100522E9C((uint64_t)v59, (uint64_t)v29, (uint64_t *)&unk_101674160);
  sub_100522E9C((uint64_t)v49, v66, (uint64_t *)&unk_101674160);
  uint64_t v67 = v126;
  uint64_t v68 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))*((void *)v125 + 6);
  if (v68((uint64_t)v29, 1, v126) == 1)
  {
    sub_100522F00((uint64_t)v49, (uint64_t *)&unk_101674160);
    sub_100522F00((uint64_t)v59, (uint64_t *)&unk_101674160);
    if (v68(v66, 1, v67) != 1)
    {
LABEL_16:
      uint64_t v70 = (uint64_t *)&unk_1016745C0;
      uint64_t v71 = (uint64_t)v29;
LABEL_35:
      sub_100522F00(v71, v70);
      goto LABEL_36;
    }
    sub_100522F00((uint64_t)v29, (uint64_t *)&unk_101674160);
  }
  else
  {
    sub_100522E9C((uint64_t)v29, (uint64_t)v45, (uint64_t *)&unk_101674160);
    if (v68(v66, 1, v67) == 1)
    {
      sub_100522F00((uint64_t)v49, (uint64_t *)&unk_101674160);
      sub_100522F00((uint64_t)v59, (uint64_t *)&unk_101674160);
      uint64_t v69 = (uint64_t)v45;
LABEL_15:
      sub_100C16A08(v69, type metadata accessor for CRLProto_Data);
      goto LABEL_16;
    }
    sub_100C169A0(v66, (uint64_t)v20, type metadata accessor for CRLProto_Data);
    if ((sub_1008D44A8(*(void *)v45, *((void *)v45 + 1), *(void *)v20, *((void *)v20 + 1)) & 1) == 0)
    {
      sub_100C16A08((uint64_t)v20, type metadata accessor for CRLProto_Data);
      sub_100522F00((uint64_t)v49, (uint64_t *)&unk_101674160);
      sub_100522F00((uint64_t)v59, (uint64_t *)&unk_101674160);
      uint64_t v80 = (uint64_t)v45;
      goto LABEL_26;
    }
    uint64_t v125 = &v20[*(int *)(v67 + 20)];
    sub_100C091F4(&qword_1016745B8, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
    LODWORD(v125) = dispatch thunk of static Equatable.== infix(_:_:)();
    sub_100C16A08((uint64_t)v20, type metadata accessor for CRLProto_Data);
    sub_100522F00((uint64_t)v49, (uint64_t *)&unk_101674160);
    sub_100522F00((uint64_t)v59, (uint64_t *)&unk_101674160);
    sub_100C16A08((uint64_t)v45, type metadata accessor for CRLProto_Data);
    sub_100522F00((uint64_t)v29, (uint64_t *)&unk_101674160);
    if ((v125 & 1) == 0) {
      goto LABEL_36;
    }
  }
  uint64_t v72 = v65;
  uint64_t v73 = v65[7];
  uint64_t v74 = v116;
  uint64_t v75 = v118;
  sub_100522E9C((uint64_t)v116 + v73, v118, (uint64_t *)&unk_101674160);
  uint64_t v76 = v117;
  sub_100522E9C((uint64_t)&v128[v72[7]], v117, (uint64_t *)&unk_101674160);
  uint64_t v77 = v124;
  uint64_t v78 = v124 + *(int *)(v127 + 48);
  sub_100522E9C(v75, v124, (uint64_t *)&unk_101674160);
  sub_100522E9C(v76, v78, (uint64_t *)&unk_101674160);
  if (v68(v77, 1, v67) == 1)
  {
    sub_100522F00(v76, (uint64_t *)&unk_101674160);
    sub_100522F00(v75, (uint64_t *)&unk_101674160);
    if (v68(v78, 1, v67) == 1)
    {
      sub_100522F00(v77, (uint64_t *)&unk_101674160);
      goto LABEL_29;
    }
LABEL_24:
    uint64_t v70 = (uint64_t *)&unk_1016745C0;
    uint64_t v71 = v77;
    goto LABEL_35;
  }
  uint64_t v79 = v114;
  sub_100522E9C(v77, v114, (uint64_t *)&unk_101674160);
  if (v68(v78, 1, v67) == 1)
  {
    sub_100522F00(v117, (uint64_t *)&unk_101674160);
    sub_100522F00(v118, (uint64_t *)&unk_101674160);
    sub_100C16A08(v79, type metadata accessor for CRLProto_Data);
    goto LABEL_24;
  }
  uint64_t v81 = v122;
  sub_100C169A0(v78, v122, type metadata accessor for CRLProto_Data);
  if ((sub_1008D44A8(*(void *)v79, *(void *)(v79 + 8), *(void *)v81, *(void *)(v81 + 8)) & 1) == 0)
  {
    sub_100C16A08(v81, type metadata accessor for CRLProto_Data);
    sub_100522F00(v117, (uint64_t *)&unk_101674160);
    sub_100522F00(v118, (uint64_t *)&unk_101674160);
    sub_100C16A08(v79, type metadata accessor for CRLProto_Data);
    uint64_t v71 = v77;
    uint64_t v70 = (uint64_t *)&unk_101674160;
    goto LABEL_35;
  }
  sub_100C091F4(&qword_1016745B8, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
  char v82 = dispatch thunk of static Equatable.== infix(_:_:)();
  sub_100C16A08(v81, type metadata accessor for CRLProto_Data);
  sub_100522F00(v117, (uint64_t *)&unk_101674160);
  sub_100522F00(v118, (uint64_t *)&unk_101674160);
  sub_100C16A08(v79, type metadata accessor for CRLProto_Data);
  sub_100522F00(v77, (uint64_t *)&unk_101674160);
  if ((v82 & 1) == 0) {
    goto LABEL_36;
  }
LABEL_29:
  uint64_t v83 = v113;
  sub_100522E9C((uint64_t)v74 + v72[8], v113, (uint64_t *)&unk_101674160);
  uint64_t v84 = v112;
  sub_100522E9C((uint64_t)&v128[v72[8]], v112, (uint64_t *)&unk_101674160);
  uint64_t v29 = v123;
  uint64_t v85 = (uint64_t)&v123[*(int *)(v127 + 48)];
  sub_100522E9C(v83, (uint64_t)v123, (uint64_t *)&unk_101674160);
  sub_100522E9C(v84, v85, (uint64_t *)&unk_101674160);
  if (v68((uint64_t)v29, 1, v67) != 1)
  {
    uint64_t v86 = v111;
    sub_100522E9C((uint64_t)v29, v111, (uint64_t *)&unk_101674160);
    if (v68(v85, 1, v67) == 1)
    {
      sub_100522F00(v112, (uint64_t *)&unk_101674160);
      sub_100522F00(v113, (uint64_t *)&unk_101674160);
      uint64_t v69 = v86;
      goto LABEL_15;
    }
    uint64_t v89 = v121;
    sub_100C169A0(v85, v121, type metadata accessor for CRLProto_Data);
    if (sub_1008D44A8(*(void *)v86, *(void *)(v86 + 8), *(void *)v89, *(void *)(v89 + 8)))
    {
      sub_100C091F4(&qword_1016745B8, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
      char v90 = dispatch thunk of static Equatable.== infix(_:_:)();
      sub_100C16A08(v89, type metadata accessor for CRLProto_Data);
      sub_100522F00(v112, (uint64_t *)&unk_101674160);
      sub_100522F00(v113, (uint64_t *)&unk_101674160);
      sub_100C16A08(v86, type metadata accessor for CRLProto_Data);
      sub_100522F00((uint64_t)v29, (uint64_t *)&unk_101674160);
      if ((v90 & 1) == 0) {
        goto LABEL_36;
      }
      goto LABEL_40;
    }
    sub_100C16A08(v89, type metadata accessor for CRLProto_Data);
    sub_100522F00(v112, (uint64_t *)&unk_101674160);
    sub_100522F00(v113, (uint64_t *)&unk_101674160);
    uint64_t v80 = v86;
LABEL_26:
    sub_100C16A08(v80, type metadata accessor for CRLProto_Data);
    uint64_t v71 = (uint64_t)v29;
    uint64_t v70 = (uint64_t *)&unk_101674160;
    goto LABEL_35;
  }
  sub_100522F00(v84, (uint64_t *)&unk_101674160);
  sub_100522F00(v83, (uint64_t *)&unk_101674160);
  if (v68(v85, 1, v67) != 1) {
    goto LABEL_16;
  }
  sub_100522F00((uint64_t)v29, (uint64_t *)&unk_101674160);
LABEL_40:
  uint64_t v91 = v72[9];
  uint64_t v92 = (_DWORD *)((char *)v74 + v91);
  char v93 = *((unsigned char *)v74 + v91 + 4);
  char v94 = &v128[v91];
  int v95 = v128[v91 + 4];
  if (v93)
  {
    uint64_t v96 = v110;
    if (!v95) {
      goto LABEL_36;
    }
  }
  else
  {
    if (*v92 != *(_DWORD *)v94) {
      LOBYTE(v95) = 1;
    }
    uint64_t v96 = v110;
    if (v95) {
      goto LABEL_36;
    }
  }
  uint64_t v97 = v72[10];
  int v98 = *((unsigned __int8 *)v74 + v97);
  int v99 = v128[v97];
  if (v98 == 2)
  {
    if (v99 != 2) {
      goto LABEL_36;
    }
  }
  else if (v99 == 2 || ((((v99 & 1) == 0) ^ v98) & 1) == 0)
  {
    goto LABEL_36;
  }
  uint64_t v100 = v72[11];
  uint64_t v101 = (_DWORD *)((char *)v74 + v100);
  char v102 = *((unsigned char *)v74 + v100 + 4);
  uint64_t v103 = &v128[v100];
  int v104 = v128[v100 + 4];
  if ((v102 & 1) == 0)
  {
    if (*v101 != *(_DWORD *)v103) {
      LOBYTE(v104) = 1;
    }
    if (v104) {
      goto LABEL_36;
    }
LABEL_58:
    uint64_t v105 = *(void (**)(char *, char *, uint64_t))(v96 + 16);
    char v106 = v119;
    uint64_t v107 = v115;
    v105(v119, (char *)v74 + v72[5], v115);
    uint64_t v108 = v120;
    v105(v120, &v128[v72[5]], v107);
    sub_100C091F4(&qword_1016745B8, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
    char v87 = dispatch thunk of static Equatable.== infix(_:_:)();
    int v109 = *(void (**)(char *, uint64_t))(v96 + 8);
    v109(v108, v107);
    v109(v106, v107);
    return v87 & 1;
  }
  if (v104) {
    goto LABEL_58;
  }
LABEL_36:
  char v87 = 0;
  return v87 & 1;
}

uint64_t sub_100C14510(unint64_t *a1, double *a2)
{
  uint64_t v87 = type metadata accessor for UnknownStorage();
  uint64_t v84 = *(void *)(v87 - 8);
  __chkstk_darwin(v87, v4);
  uint64_t v83 = (char *)&v82 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6, v7);
  char v82 = (char *)&v82 - v8;
  uint64_t v9 = type metadata accessor for CRLProto_Data(0);
  uint64_t v95 = *(void *)(v9 - 8);
  __chkstk_darwin(v9, v10);
  uint64_t v85 = (uint64_t)&v82 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12, v13);
  uint64_t v88 = (uint64_t)&v82 - v14;
  uint64_t v15 = sub_1005057FC((uint64_t *)&unk_1016745C0);
  __chkstk_darwin(v15, v16);
  uint64_t v89 = (uint64_t)&v82 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18, v19);
  uint64_t v21 = (char *)&v82 - v20;
  uint64_t v22 = sub_1005057FC((uint64_t *)&unk_101674160);
  __chkstk_darwin(v22 - 8, v23);
  uint64_t v86 = (uint64_t)&v82 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25, v26);
  uint64_t v94 = (uint64_t)&v82 - v27;
  __chkstk_darwin(v28, v29);
  uint64_t v92 = (uint64_t)&v82 - v30;
  __chkstk_darwin(v31, v32);
  uint64_t v34 = (char *)&v82 - v33;
  __chkstk_darwin(v35, v36);
  uint64_t v38 = (char *)&v82 - v37;
  __chkstk_darwin(v39, v40);
  uint64_t v42 = (char *)&v82 - v41;
  uint64_t v43 = type metadata accessor for CRLProto_RealTimeEnter(0);
  uint64_t v44 = *(int *)(v43 + 24);
  char v90 = a1;
  sub_100522E9C((uint64_t)a1 + v44, (uint64_t)v42, (uint64_t *)&unk_101674160);
  char v93 = (int *)v43;
  uint64_t v45 = *(int *)(v43 + 24);
  uint64_t v46 = v9;
  uint64_t v47 = v95;
  uint64_t v91 = a2;
  sub_100522E9C((uint64_t)a2 + v45, (uint64_t)v38, (uint64_t *)&unk_101674160);
  uint64_t v48 = (uint64_t)&v21[*(int *)(v15 + 48)];
  sub_100522E9C((uint64_t)v42, (uint64_t)v21, (uint64_t *)&unk_101674160);
  sub_100522E9C((uint64_t)v38, v48, (uint64_t *)&unk_101674160);
  uint64_t v51 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v47 + 48);
  uint64_t v50 = v47 + 48;
  uint64_t v49 = v51;
  if (v51((uint64_t)v21, 1, v46) == 1)
  {
    sub_100522F00((uint64_t)v38, (uint64_t *)&unk_101674160);
    sub_100522F00((uint64_t)v42, (uint64_t *)&unk_101674160);
    if (v49(v48, 1, v46) == 1)
    {
      uint64_t v95 = v50;
      sub_100522F00((uint64_t)v21, (uint64_t *)&unk_101674160);
      goto LABEL_4;
    }
LABEL_13:
    uint64_t v63 = (uint64_t *)&unk_1016745C0;
    uint64_t v64 = (uint64_t)v21;
    goto LABEL_25;
  }
  sub_100522E9C((uint64_t)v21, (uint64_t)v34, (uint64_t *)&unk_101674160);
  if (v49(v48, 1, v46) == 1)
  {
    sub_100522F00((uint64_t)v38, (uint64_t *)&unk_101674160);
    sub_100522F00((uint64_t)v42, (uint64_t *)&unk_101674160);
    sub_100C16A08((uint64_t)v34, type metadata accessor for CRLProto_Data);
    goto LABEL_13;
  }
  uint64_t v65 = v48;
  uint64_t v66 = v88;
  sub_100C169A0(v65, v88, type metadata accessor for CRLProto_Data);
  if ((sub_1008D44A8(*(void *)v34, *((void *)v34 + 1), *(void *)v66, *(void *)(v66 + 8)) & 1) == 0)
  {
    sub_100C16A08(v66, type metadata accessor for CRLProto_Data);
    sub_100522F00((uint64_t)v38, (uint64_t *)&unk_101674160);
    sub_100522F00((uint64_t)v42, (uint64_t *)&unk_101674160);
    sub_100C16A08((uint64_t)v34, type metadata accessor for CRLProto_Data);
    uint64_t v64 = (uint64_t)v21;
    uint64_t v63 = (uint64_t *)&unk_101674160;
    goto LABEL_25;
  }
  uint64_t v95 = v50;
  sub_100C091F4(&qword_1016745B8, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
  char v67 = dispatch thunk of static Equatable.== infix(_:_:)();
  sub_100C16A08(v66, type metadata accessor for CRLProto_Data);
  sub_100522F00((uint64_t)v38, (uint64_t *)&unk_101674160);
  sub_100522F00((uint64_t)v42, (uint64_t *)&unk_101674160);
  sub_100C16A08((uint64_t)v34, type metadata accessor for CRLProto_Data);
  sub_100522F00((uint64_t)v21, (uint64_t *)&unk_101674160);
  if ((v67 & 1) == 0) {
    goto LABEL_26;
  }
LABEL_4:
  uint64_t v53 = v92;
  uint64_t v52 = v93;
  uint64_t v54 = v90;
  sub_100522E9C((uint64_t)v90 + v93[7], v92, (uint64_t *)&unk_101674160);
  uint64_t v55 = v91;
  uint64_t v56 = v94;
  sub_100522E9C((uint64_t)v91 + v52[7], v94, (uint64_t *)&unk_101674160);
  uint64_t v57 = v89;
  uint64_t v58 = v89 + *(int *)(v15 + 48);
  sub_100522E9C(v53, v89, (uint64_t *)&unk_101674160);
  sub_100522E9C(v56, v58, (uint64_t *)&unk_101674160);
  if (v49(v57, 1, v46) != 1)
  {
    uint64_t v68 = v86;
    sub_100522E9C(v57, v86, (uint64_t *)&unk_101674160);
    if (v49(v58, 1, v46) == 1)
    {
      sub_100522F00(v94, (uint64_t *)&unk_101674160);
      sub_100522F00(v53, (uint64_t *)&unk_101674160);
      sub_100C16A08(v68, type metadata accessor for CRLProto_Data);
      goto LABEL_19;
    }
    uint64_t v69 = v85;
    sub_100C169A0(v58, v85, type metadata accessor for CRLProto_Data);
    if (sub_1008D44A8(*(void *)v68, *(void *)(v68 + 8), *(void *)v69, *(void *)(v69 + 8)))
    {
      sub_100C091F4(&qword_1016745B8, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
      char v70 = dispatch thunk of static Equatable.== infix(_:_:)();
      sub_100C16A08(v69, type metadata accessor for CRLProto_Data);
      sub_100522F00(v94, (uint64_t *)&unk_101674160);
      sub_100522F00(v92, (uint64_t *)&unk_101674160);
      sub_100C16A08(v68, type metadata accessor for CRLProto_Data);
      sub_100522F00(v57, (uint64_t *)&unk_101674160);
      if ((v70 & 1) == 0) {
        goto LABEL_26;
      }
      goto LABEL_7;
    }
    sub_100C16A08(v69, type metadata accessor for CRLProto_Data);
    sub_100522F00(v94, (uint64_t *)&unk_101674160);
    sub_100522F00(v92, (uint64_t *)&unk_101674160);
    sub_100C16A08(v68, type metadata accessor for CRLProto_Data);
    uint64_t v64 = v57;
    uint64_t v63 = (uint64_t *)&unk_101674160;
LABEL_25:
    sub_100522F00(v64, v63);
    goto LABEL_26;
  }
  sub_100522F00(v56, (uint64_t *)&unk_101674160);
  sub_100522F00(v53, (uint64_t *)&unk_101674160);
  if (v49(v58, 1, v46) != 1)
  {
LABEL_19:
    uint64_t v63 = (uint64_t *)&unk_1016745C0;
    uint64_t v64 = v57;
    goto LABEL_25;
  }
  sub_100522F00(v57, (uint64_t *)&unk_101674160);
LABEL_7:
  v59.n128_u64[0] = *v54;
  if (*(double *)v54 == *v55)
  {
    uint64_t v60 = v93[8];
    int v61 = *((unsigned __int8 *)v54 + v60);
    int v62 = *((unsigned __int8 *)v55 + v60);
    if (v61 == 2)
    {
      if (v62 == 2)
      {
LABEL_30:
        uint64_t v73 = v93;
        uint64_t v74 = (char *)v54 + v93[5];
        uint64_t v75 = v84;
        uint64_t v76 = *(void (**)(char *, char *, uint64_t, __n128))(v84 + 16);
        uint64_t v77 = v82;
        uint64_t v78 = v87;
        v76(v82, v74, v87, v59);
        uint64_t v79 = (char *)v55 + v73[5];
        uint64_t v80 = v83;
        ((void (*)(char *, char *, uint64_t))v76)(v83, v79, v78);
        sub_100C091F4(&qword_1016745B8, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
        char v71 = dispatch thunk of static Equatable.== infix(_:_:)();
        uint64_t v81 = *(void (**)(char *, uint64_t))(v75 + 8);
        v81(v80, v78);
        v81(v77, v78);
        return v71 & 1;
      }
    }
    else if (v62 != 2 && ((((v62 & 1) == 0) ^ v61) & 1) != 0)
    {
      goto LABEL_30;
    }
  }
LABEL_26:
  char v71 = 0;
  return v71 & 1;
}

uint64_t sub_100C14E74(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UnknownStorage();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4, v6);
  uint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9, v10);
  uint64_t v12 = (char *)&v18 - v11;
  if (*(_DWORD *)a1 == *(_DWORD *)a2
    && sub_1005B9E9C(*(void *)(a1 + 8), *(void *)(a2 + 8))
    && (sub_1005BAAF8(*(void *)(a1 + 16), *(void *)(a2 + 16)) & 1) != 0
    && (sub_1005BB4C0(*(void *)(a1 + 24), *(void *)(a2 + 24)) & 1) != 0
    && (sub_1005BBEDC(*(void *)(a1 + 32), *(void *)(a2 + 32)) & 1) != 0
    && *(void *)(a1 + 40) == *(void *)(a2 + 40)
    && sub_1005B9E9C(*(void *)(a1 + 48), *(void *)(a2 + 48))
    && sub_1005B9E9C(*(void *)(a1 + 56), *(void *)(a2 + 56)))
  {
    uint64_t v13 = type metadata accessor for CRLProto_ObjectInfo(0);
    uint64_t v14 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    v14(v12, a1 + *(int *)(v13 + 48), v4);
    v14(v8, a2 + *(int *)(v13 + 48), v4);
    sub_100C091F4(&qword_1016745B8, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
    char v15 = dispatch thunk of static Equatable.== infix(_:_:)();
    uint64_t v16 = *(void (**)(char *, uint64_t))(v5 + 8);
    v16(v8, v4);
    v16(v12, v4);
  }
  else
  {
    char v15 = 0;
  }
  return v15 & 1;
}

uint64_t sub_100C1509C(char *a1, char *a2)
{
  uint64_t v4 = type metadata accessor for UnknownStorage();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4, v6);
  uint64_t v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9, v10);
  uint64_t v12 = (char *)&v19 - v11;
  BOOL v13 = *(void *)a1 == *(void *)a2 && *((void *)a1 + 1) == *((void *)a2 + 1);
  if (v13 || (char v14 = 0, (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0))
  {
    if (*((void *)a1 + 2) == *((void *)a2 + 2))
    {
      uint64_t v15 = type metadata accessor for CRLProto_ObjectInfo.DataDirectoryEntry(0);
      uint64_t v16 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
      v16(v12, &a1[*(int *)(v15 + 24)], v4);
      v16(v8, &a2[*(int *)(v15 + 24)], v4);
      sub_100C091F4(&qword_1016745B8, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
      char v14 = dispatch thunk of static Equatable.== infix(_:_:)();
      uint64_t v17 = *(void (**)(char *, uint64_t))(v5 + 8);
      v17(v8, v4);
      v17(v12, v4);
    }
    else
    {
      char v14 = 0;
    }
  }
  return v14 & 1;
}

uint64_t sub_100C15278(char *a1, char *a2)
{
  uint64_t v4 = type metadata accessor for UnknownStorage();
  uint64_t v52 = *(void *)(v4 - 8);
  __chkstk_darwin(v4, v5);
  uint64_t v51 = (char *)&v47 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7, v8);
  uint64_t v50 = (char *)&v47 - v9;
  uint64_t v10 = type metadata accessor for CRLProto_Data(0);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10, v12);
  uint64_t v49 = (uint64_t)&v47 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1005057FC((uint64_t *)&unk_1016745C0);
  __chkstk_darwin(v14, v15);
  uint64_t v17 = (char *)&v47 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_1005057FC((uint64_t *)&unk_101674160);
  __chkstk_darwin(v18 - 8, v19);
  uint64_t v21 = (char *)&v47 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22, v23);
  uint64_t v25 = (char *)&v47 - v24;
  __chkstk_darwin(v26, v27);
  uint64_t v29 = (char *)&v47 - v28;
  uint64_t v30 = *(void *)a1;
  uint64_t v31 = *((void *)a1 + 1);
  uint64_t v53 = a1;
  uint64_t v54 = a2;
  if (v30 == *(void *)a2 && v31 == *((void *)a2 + 1)
    || (char v32 = 0, (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0))
  {
    uint64_t v48 = v4;
    uint64_t v33 = type metadata accessor for CRLProto_ObjectInfo.AssetReference(0);
    sub_100522E9C((uint64_t)&v53[*(int *)(v33 + 24)], (uint64_t)v29, (uint64_t *)&unk_101674160);
    sub_100522E9C((uint64_t)&v54[*(int *)(v33 + 24)], (uint64_t)v25, (uint64_t *)&unk_101674160);
    uint64_t v34 = (uint64_t)&v17[*(int *)(v14 + 48)];
    sub_100522E9C((uint64_t)v29, (uint64_t)v17, (uint64_t *)&unk_101674160);
    sub_100522E9C((uint64_t)v25, v34, (uint64_t *)&unk_101674160);
    uint64_t v35 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48);
    if (v35((uint64_t)v17, 1, v10) == 1)
    {
      sub_100522F00((uint64_t)v25, (uint64_t *)&unk_101674160);
      sub_100522F00((uint64_t)v29, (uint64_t *)&unk_101674160);
      if (v35(v34, 1, v10) == 1)
      {
        sub_100522F00((uint64_t)v17, (uint64_t *)&unk_101674160);
LABEL_12:
        uint64_t v40 = v52;
        uint64_t v41 = *(void (**)(char *, char *, uint64_t))(v52 + 16);
        uint64_t v42 = v50;
        uint64_t v43 = v48;
        v41(v50, &v53[*(int *)(v33 + 20)], v48);
        uint64_t v44 = v51;
        v41(v51, &v54[*(int *)(v33 + 20)], v43);
        sub_100C091F4(&qword_1016745B8, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
        char v32 = dispatch thunk of static Equatable.== infix(_:_:)();
        uint64_t v45 = *(void (**)(char *, uint64_t))(v40 + 8);
        v45(v44, v43);
        v45(v42, v43);
        return v32 & 1;
      }
    }
    else
    {
      sub_100522E9C((uint64_t)v17, (uint64_t)v21, (uint64_t *)&unk_101674160);
      if (v35(v34, 1, v10) != 1)
      {
        uint64_t v38 = v49;
        sub_100C169A0(v34, v49, type metadata accessor for CRLProto_Data);
        if (sub_1008D44A8(*(void *)v21, *((void *)v21 + 1), *(void *)v38, *(void *)(v38 + 8)))
        {
          sub_100C091F4(&qword_1016745B8, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
          char v39 = dispatch thunk of static Equatable.== infix(_:_:)();
          sub_100C16A08(v38, type metadata accessor for CRLProto_Data);
          sub_100522F00((uint64_t)v25, (uint64_t *)&unk_101674160);
          sub_100522F00((uint64_t)v29, (uint64_t *)&unk_101674160);
          sub_100C16A08((uint64_t)v21, type metadata accessor for CRLProto_Data);
          sub_100522F00((uint64_t)v17, (uint64_t *)&unk_101674160);
          if (v39) {
            goto LABEL_12;
          }
LABEL_15:
          char v32 = 0;
          return v32 & 1;
        }
        sub_100C16A08(v38, type metadata accessor for CRLProto_Data);
        sub_100522F00((uint64_t)v25, (uint64_t *)&unk_101674160);
        sub_100522F00((uint64_t)v29, (uint64_t *)&unk_101674160);
        sub_100C16A08((uint64_t)v21, type metadata accessor for CRLProto_Data);
        uint64_t v37 = (uint64_t)v17;
        uint64_t v36 = (uint64_t *)&unk_101674160;
LABEL_14:
        sub_100522F00(v37, v36);
        goto LABEL_15;
      }
      sub_100522F00((uint64_t)v25, (uint64_t *)&unk_101674160);
      sub_100522F00((uint64_t)v29, (uint64_t *)&unk_101674160);
      sub_100C16A08((uint64_t)v21, type metadata accessor for CRLProto_Data);
    }
    uint64_t v36 = (uint64_t *)&unk_1016745C0;
    uint64_t v37 = (uint64_t)v17;
    goto LABEL_14;
  }
  return v32 & 1;
}

uint64_t sub_100C15864(uint64_t a1, uint64_t a2, uint64_t (*a3)(void, __n128))
{
  uint64_t v6 = type metadata accessor for UnknownStorage();
  uint64_t v55 = *(void *)(v6 - 8);
  uint64_t v56 = v6;
  __chkstk_darwin(v6, v7);
  uint64_t v54 = (char *)&v51 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9, v10);
  uint64_t v53 = (char *)&v51 - v11;
  uint64_t v12 = type metadata accessor for CRLProto_Data(0);
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12, v14);
  uint64_t v57 = (char *)&v51 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_1005057FC((uint64_t *)&unk_1016745C0);
  uint64_t v17 = v16 - 8;
  __chkstk_darwin(v16, v18);
  uint64_t v20 = (char *)&v51 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_1005057FC((uint64_t *)&unk_101674160);
  __chkstk_darwin(v21 - 8, v22);
  uint64_t v58 = (uint64_t)&v51 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24, v25);
  uint64_t v27 = (char *)&v51 - v26;
  __n128 v30 = __chkstk_darwin(v28, v29);
  char v32 = (char *)&v51 - v31;
  uint64_t v33 = a3(0, v30);
  uint64_t v34 = *(int *)(v33 + 20);
  uint64_t v51 = a1;
  sub_100522E9C(a1 + v34, (uint64_t)v32, (uint64_t *)&unk_101674160);
  uint64_t v35 = *(int *)(v33 + 20);
  uint64_t v52 = a2;
  sub_100522E9C(a2 + v35, (uint64_t)v27, (uint64_t *)&unk_101674160);
  uint64_t v36 = (uint64_t)&v20[*(int *)(v17 + 56)];
  sub_100522E9C((uint64_t)v32, (uint64_t)v20, (uint64_t *)&unk_101674160);
  sub_100522E9C((uint64_t)v27, v36, (uint64_t *)&unk_101674160);
  uint64_t v37 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48);
  if (v37((uint64_t)v20, 1, v12) != 1)
  {
    uint64_t v39 = (uint64_t)v57;
    uint64_t v40 = v58;
    sub_100522E9C((uint64_t)v20, v58, (uint64_t *)&unk_101674160);
    if (v37(v36, 1, v12) != 1)
    {
      sub_100C169A0(v36, v39, type metadata accessor for CRLProto_Data);
      if (sub_1008D44A8(*(void *)v40, *(void *)(v40 + 8), *(void *)v39, *(void *)(v39 + 8)))
      {
        sub_100C091F4(&qword_1016745B8, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
        uint64_t v38 = v56;
        char v43 = dispatch thunk of static Equatable.== infix(_:_:)();
        sub_100C16A08(v39, type metadata accessor for CRLProto_Data);
        sub_100522F00((uint64_t)v27, (uint64_t *)&unk_101674160);
        sub_100522F00((uint64_t)v32, (uint64_t *)&unk_101674160);
        sub_100C16A08(v40, type metadata accessor for CRLProto_Data);
        sub_100522F00((uint64_t)v20, (uint64_t *)&unk_101674160);
        if (v43) {
          goto LABEL_9;
        }
LABEL_12:
        char v48 = 0;
        return v48 & 1;
      }
      sub_100C16A08(v39, type metadata accessor for CRLProto_Data);
      sub_100522F00((uint64_t)v27, (uint64_t *)&unk_101674160);
      sub_100522F00((uint64_t)v32, (uint64_t *)&unk_101674160);
      sub_100C16A08(v40, type metadata accessor for CRLProto_Data);
      uint64_t v42 = (uint64_t)v20;
      uint64_t v41 = (uint64_t *)&unk_101674160;
LABEL_11:
      sub_100522F00(v42, v41);
      goto LABEL_12;
    }
    sub_100522F00((uint64_t)v27, (uint64_t *)&unk_101674160);
    sub_100522F00((uint64_t)v32, (uint64_t *)&unk_101674160);
    sub_100C16A08(v40, type metadata accessor for CRLProto_Data);
LABEL_6:
    uint64_t v41 = (uint64_t *)&unk_1016745C0;
    uint64_t v42 = (uint64_t)v20;
    goto LABEL_11;
  }
  sub_100522F00((uint64_t)v27, (uint64_t *)&unk_101674160);
  sub_100522F00((uint64_t)v32, (uint64_t *)&unk_101674160);
  if (v37(v36, 1, v12) != 1) {
    goto LABEL_6;
  }
  sub_100522F00((uint64_t)v20, (uint64_t *)&unk_101674160);
  uint64_t v38 = v56;
LABEL_9:
  uint64_t v44 = v55;
  uint64_t v45 = *(void (**)(char *, uint64_t, uint64_t))(v55 + 16);
  uint64_t v46 = v53;
  v45(v53, v51, v38);
  uint64_t v47 = v54;
  v45(v54, v52, v38);
  sub_100C091F4(&qword_1016745B8, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
  char v48 = dispatch thunk of static Equatable.== infix(_:_:)();
  uint64_t v49 = *(void (**)(char *, uint64_t))(v44 + 8);
  v49(v47, v38);
  v49(v46, v38);
  return v48 & 1;
}

uint64_t sub_100C15E1C(float *a1, float *a2, uint64_t (*a3)(void))
{
  uint64_t v6 = type metadata accessor for UnknownStorage();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6, v8);
  uint64_t v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11, v12);
  uint64_t v14 = (char *)&v20 - v13;
  if (*a1 == *a2 && a1[1] == a2[1])
  {
    uint64_t v15 = a3(0);
    uint64_t v16 = *(void (**)(char *, char *, uint64_t))(v7 + 16);
    v16(v14, (char *)a1 + *(int *)(v15 + 24), v6);
    v16(v10, (char *)a2 + *(int *)(v15 + 24), v6);
    sub_100C091F4(&qword_1016745B8, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
    char v17 = dispatch thunk of static Equatable.== infix(_:_:)();
    uint64_t v18 = *(void (**)(char *, uint64_t))(v7 + 8);
    v18(v10, v6);
    v18(v14, v6);
  }
  else
  {
    char v17 = 0;
  }
  return v17 & 1;
}

uint64_t sub_100C15FEC(float *a1, float *a2)
{
  uint64_t v4 = type metadata accessor for UnknownStorage();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4, v6);
  uint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9, v10);
  uint64_t v12 = (char *)&v18 - v11;
  if (*a1 == *a2 && a1[1] == a2[1] && a1[2] == a2[2] && a1[3] == a2[3])
  {
    uint64_t v13 = type metadata accessor for CRLProto_Rect(0);
    uint64_t v14 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
    v14(v12, (char *)a1 + *(int *)(v13 + 32), v4);
    v14(v8, (char *)a2 + *(int *)(v13 + 32), v4);
    sub_100C091F4(&qword_1016745B8, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
    char v15 = dispatch thunk of static Equatable.== infix(_:_:)();
    uint64_t v16 = *(void (**)(char *, uint64_t))(v5 + 8);
    v16(v8, v4);
    v16(v12, v4);
  }
  else
  {
    char v15 = 0;
  }
  return v15 & 1;
}

uint64_t sub_100C161D4(char *a1, char *a2)
{
  uint64_t v4 = type metadata accessor for UnknownStorage();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4, v6);
  uint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9, v10);
  uint64_t v12 = (char *)&v18 - v11;
  if (sub_1005BD0D0(*(void **)a1, *(void **)a2))
  {
    uint64_t v13 = type metadata accessor for CRLProto_Path(0);
    uint64_t v14 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
    v14(v12, &a1[*(int *)(v13 + 20)], v4);
    v14(v8, &a2[*(int *)(v13 + 20)], v4);
    sub_100C091F4(&qword_1016745B8, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
    char v15 = dispatch thunk of static Equatable.== infix(_:_:)();
    uint64_t v16 = *(void (**)(char *, uint64_t))(v5 + 8);
    v16(v8, v4);
    v16(v12, v4);
  }
  else
  {
    char v15 = 0;
  }
  return v15 & 1;
}

uint64_t sub_100C1638C(char *a1, uint64_t *a2)
{
  uint64_t v4 = type metadata accessor for UnknownStorage();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4, v6);
  uint64_t v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9, v10);
  uint64_t v12 = (char *)&v20 - v11;
  uint64_t v13 = *(void *)a1;
  uint64_t v14 = *a2;
  if (*((unsigned char *)a2 + 8) == 1)
  {
    switch(v14)
    {
      case 1:
        if (v13 == 1) {
          goto LABEL_12;
        }
        goto LABEL_16;
      case 2:
        if (v13 == 2) {
          goto LABEL_12;
        }
        goto LABEL_16;
      case 3:
        if (v13 == 3) {
          goto LABEL_12;
        }
        goto LABEL_16;
      default:
        if (!v13) {
          goto LABEL_12;
        }
        goto LABEL_16;
    }
  }
  if (v13 != v14) {
    goto LABEL_16;
  }
LABEL_12:
  if ((sub_1008D44A8(*((void *)a1 + 2), *((void *)a1 + 3), a2[2], a2[3]) & 1) == 0
    || (sub_1008D44A8(*((void *)a1 + 4), *((void *)a1 + 5), a2[4], a2[5]) & 1) == 0
    || (sub_1008D44A8(*((void *)a1 + 6), *((void *)a1 + 7), a2[6], a2[7]) & 1) == 0)
  {
LABEL_16:
    char v17 = 0;
    return v17 & 1;
  }
  uint64_t v15 = type metadata accessor for CRLProto_Path.Element(0);
  uint64_t v16 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
  v16(v12, &a1[*(int *)(v15 + 32)], v4);
  v16(v8, (char *)a2 + *(int *)(v15 + 32), v4);
  sub_100C091F4(&qword_1016745B8, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
  char v17 = dispatch thunk of static Equatable.== infix(_:_:)();
  uint64_t v18 = *(void (**)(char *, uint64_t))(v5 + 8);
  v18(v8, v4);
  v18(v12, v4);
  return v17 & 1;
}

uint64_t sub_100C165DC(double *a1, double *a2)
{
  uint64_t v4 = type metadata accessor for UnknownStorage();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4, v6);
  uint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9, v10);
  uint64_t v12 = (char *)&v18 - v11;
  if (*a1 == *a2)
  {
    uint64_t v13 = type metadata accessor for CRLProto_Date(0);
    uint64_t v14 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
    v14(v12, (char *)a1 + *(int *)(v13 + 20), v4);
    v14(v8, (char *)a2 + *(int *)(v13 + 20), v4);
    sub_100C091F4(&qword_1016745B8, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
    char v15 = dispatch thunk of static Equatable.== infix(_:_:)();
    uint64_t v16 = *(void (**)(char *, uint64_t))(v5 + 8);
    v16(v8, v4);
    v16(v12, v4);
  }
  else
  {
    char v15 = 0;
  }
  return v15 & 1;
}

uint64_t sub_100C16794(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UnknownStorage();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4, v6);
  uint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9, v10);
  uint64_t v12 = (char *)&v18 - v11;
  if (sub_1008D44A8(*(void *)a1, *(void *)(a1 + 8), *(void *)a2, *(void *)(a2 + 8)))
  {
    uint64_t v13 = type metadata accessor for CRLProto_Data(0);
    uint64_t v14 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    v14(v12, a1 + *(int *)(v13 + 20), v4);
    v14(v8, a2 + *(int *)(v13 + 20), v4);
    sub_100C091F4(&qword_1016745B8, (void (*)(uint64_t))&type metadata accessor for UnknownStorage);
    char v15 = dispatch thunk of static Equatable.== infix(_:_:)();
    uint64_t v16 = *(void (**)(char *, uint64_t))(v5 + 8);
    v16(v8, v4);
    v16(v12, v4);
  }
  else
  {
    char v15 = 0;
  }
  return v15 & 1;
}

unint64_t sub_100C1694C()
{
  unint64_t result = qword_101697CB8;
  if (!qword_101697CB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101697CB8);
  }
  return result;
}

uint64_t sub_100C169A0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_100C16A08(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_100C16A68()
{
  unint64_t result = qword_101697CF0;
  if (!qword_101697CF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101697CF0);
  }
  return result;
}

uint64_t *sub_100C16ABC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (uint64_t *)(v9 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *a1 = *a2;
    uint64_t v5 = *(int *)(a3 + 20);
    uint64_t v6 = (char *)a1 + v5;
    uint64_t v7 = (char *)a2 + v5;
    uint64_t v8 = type metadata accessor for UnknownStorage();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 16))(v6, v7, v8);
  }
  return v3;
}

uint64_t sub_100C16B88(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a1 + *(int *)(a2 + 20);
  uint64_t v3 = type metadata accessor for UnknownStorage();
  int v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);

  return v4(v2, v3);
}

void *sub_100C16BF0(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = type metadata accessor for UnknownStorage();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16))(v5, v6, v7);
  return a1;
}

void *sub_100C16C6C(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = type metadata accessor for UnknownStorage();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 24))(v5, v6, v7);
  return a1;
}

void *sub_100C16CEC(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = type metadata accessor for UnknownStorage();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 40))(v5, v6, v7);
  return a1;
}

uint64_t sub_100C16D68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100C16D7C);
}

uint64_t sub_100C16D7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = a1 + *(int *)(a3 + 20);
  uint64_t v5 = type metadata accessor for UnknownStorage();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48);

  return v6(v4, a2, v5);
}

uint64_t sub_100C16DEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100C16E00);
}

uint64_t sub_100C16E00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = a1 + *(int *)(a4 + 20);
  uint64_t v6 = type metadata accessor for UnknownStorage();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);

  return v7(v5, a2, a2, v6);
}

uint64_t sub_100C16E74()
{
  return sub_100C17C9C();
}

uint64_t sub_100C16E9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100C16EB0);
}

uint64_t sub_100C16EB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100C16EC8);
}

uint64_t sub_100C16ECC()
{
  return sub_100C28498();
}

uint64_t *sub_100C16EE0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (uint64_t *)(v9 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *a1 = *a2;
    uint64_t v5 = *(int *)(a3 + 24);
    uint64_t v6 = (char *)a1 + v5;
    uint64_t v7 = (char *)a2 + v5;
    uint64_t v8 = type metadata accessor for UnknownStorage();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 16))(v6, v7, v8);
  }
  return v3;
}

uint64_t sub_100C16FAC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a1 + *(int *)(a2 + 24);
  uint64_t v3 = type metadata accessor for UnknownStorage();
  int v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);

  return v4(v2, v3);
}

void *sub_100C17014(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 24);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = type metadata accessor for UnknownStorage();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16))(v5, v6, v7);
  return a1;
}

_DWORD *sub_100C17090(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  uint64_t v4 = *(int *)(a3 + 24);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = type metadata accessor for UnknownStorage();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 24))(v5, v6, v7);
  return a1;
}

void *sub_100C17114(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 24);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = type metadata accessor for UnknownStorage();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

void *sub_100C17190(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 24);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = type metadata accessor for UnknownStorage();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 40))(v5, v6, v7);
  return a1;
}

uint64_t sub_100C1720C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100C17220);
}

uint64_t sub_100C17224(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = a1 + *(int *)(a3 + 24);
  uint64_t v5 = type metadata accessor for UnknownStorage();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48);

  return v6(v4, a2, v5);
}

uint64_t sub_100C17294(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100C172A8);
}

uint64_t sub_100C172AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = a1 + *(int *)(a4 + 24);
  uint64_t v6 = type metadata accessor for UnknownStorage();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);

  return v7(v5, a2, a2, v6);
}

uint64_t *sub_100C17320(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (uint64_t *)(v9 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    uint64_t v5 = *(int *)(a3 + 32);
    uint64_t v6 = (char *)a1 + v5;
    uint64_t v7 = (char *)a2 + v5;
    uint64_t v8 = type metadata accessor for UnknownStorage();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 16))(v6, v7, v8);
  }
  return v3;
}

uint64_t sub_100C173EC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a1 + *(int *)(a2 + 32);
  uint64_t v3 = type metadata accessor for UnknownStorage();
  int v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);

  return v4(v2, v3);
}

_OWORD *sub_100C17454(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 32);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = type metadata accessor for UnknownStorage();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16))(v5, v6, v7);
  return a1;
}

_DWORD *sub_100C174D0(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  uint64_t v4 = *(int *)(a3 + 32);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = type metadata accessor for UnknownStorage();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 24))(v5, v6, v7);
  return a1;
}

_OWORD *sub_100C17564(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 32);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = type metadata accessor for UnknownStorage();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

_OWORD *sub_100C175E0(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 32);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = type metadata accessor for UnknownStorage();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 40))(v5, v6, v7);
  return a1;
}

uint64_t sub_100C1765C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100C17670);
}

uint64_t sub_100C17670(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = a1 + *(int *)(a3 + 32);
  uint64_t v5 = type metadata accessor for UnknownStorage();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48);

  return v6(v4, a2, v5);
}

uint64_t sub_100C176E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100C176F4);
}

uint64_t sub_100C176F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = a1 + *(int *)(a4 + 32);
  uint64_t v6 = type metadata accessor for UnknownStorage();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);

  return v7(v5, a2, a2, v6);
}

uint64_t sub_100C17768()
{
  return sub_100C1839C();
}

uint64_t *sub_100C1777C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v5 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a1;
    uint64_t v6 = *(int *)(a3 + 20);
    uint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    uint64_t v9 = type metadata accessor for UnknownStorage();
    uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
    swift_bridgeObjectRetain();
    v10(v7, v8, v9);
  }
  return v5;
}

uint64_t sub_100C17860(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = type metadata accessor for UnknownStorage();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);

  return v6(v4, v5);
}

void *sub_100C178D8(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = type metadata accessor for UnknownStorage();
  uint64_t v8 = *(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16);
  swift_bridgeObjectRetain();
  v8(v5, v6, v7);
  return a1;
}

void *sub_100C17970(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for UnknownStorage();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

void *sub_100C17A04(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = type metadata accessor for UnknownStorage();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

void *sub_100C17A80(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for UnknownStorage();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  return a1;
}

uint64_t sub_100C17B0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100C17B20);
}

uint64_t sub_100C17B20(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for UnknownStorage();
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_100C17BD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100C17BE4);
}

void *sub_100C17BE4(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *unint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for UnknownStorage();
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 20);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_100C17C8C()
{
  return sub_100C17C9C();
}

uint64_t sub_100C17C9C()
{
  uint64_t result = type metadata accessor for UnknownStorage();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLProto_Path.ElementType()
{
  return &type metadata for CRLProto_Path.ElementType;
}

void *sub_100C17D3C(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = (void *)a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v17 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(void *)a1 = *a2;
    *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
    uint64_t v7 = a2[2];
    unint64_t v8 = a2[3];
    sub_100510D4C(v7, v8);
    v4[2] = v7;
    v4[3] = v8;
    uint64_t v9 = a2[4];
    unint64_t v10 = a2[5];
    sub_100510D4C(v9, v10);
    v4[4] = v9;
    v4[5] = v10;
    uint64_t v11 = a2[6];
    unint64_t v12 = a2[7];
    sub_100510D4C(v11, v12);
    v4[6] = v11;
    v4[7] = v12;
    uint64_t v13 = *(int *)(a3 + 32);
    uint64_t v14 = (char *)v4 + v13;
    uint64_t v15 = (uint64_t)a2 + v13;
    uint64_t v16 = type metadata accessor for UnknownStorage();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
  }
  return v4;
}

uint64_t sub_100C17E5C(uint64_t a1, uint64_t a2)
{
  sub_100510084(*(void *)(a1 + 16), *(void *)(a1 + 24));
  sub_100510084(*(void *)(a1 + 32), *(void *)(a1 + 40));
  sub_100510084(*(void *)(a1 + 48), *(void *)(a1 + 56));
  uint64_t v4 = a1 + *(int *)(a2 + 32);
  uint64_t v5 = type metadata accessor for UnknownStorage();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);

  return v6(v4, v5);
}

uint64_t sub_100C17EE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v6 = *(void *)(a2 + 16);
  unint64_t v7 = *(void *)(a2 + 24);
  sub_100510D4C(v6, v7);
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v7;
  uint64_t v8 = *(void *)(a2 + 32);
  unint64_t v9 = *(void *)(a2 + 40);
  sub_100510D4C(v8, v9);
  *(void *)(a1 + 32) = v8;
  *(void *)(a1 + 40) = v9;
  uint64_t v10 = *(void *)(a2 + 48);
  unint64_t v11 = *(void *)(a2 + 56);
  sub_100510D4C(v10, v11);
  *(void *)(a1 + 48) = v10;
  *(void *)(a1 + 56) = v11;
  uint64_t v12 = *(int *)(a3 + 32);
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  uint64_t v15 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
  return a1;
}

uint64_t sub_100C17FB8(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6 = *a2;
  *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
  *(void *)a1 = v6;
  uint64_t v7 = a2[2];
  unint64_t v8 = a2[3];
  sub_100510D4C(v7, v8);
  uint64_t v9 = *(void *)(a1 + 16);
  unint64_t v10 = *(void *)(a1 + 24);
  *(void *)(a1 + 16) = v7;
  *(void *)(a1 + 24) = v8;
  sub_100510084(v9, v10);
  uint64_t v11 = a2[4];
  unint64_t v12 = a2[5];
  sub_100510D4C(v11, v12);
  uint64_t v13 = *(void *)(a1 + 32);
  unint64_t v14 = *(void *)(a1 + 40);
  *(void *)(a1 + 32) = v11;
  *(void *)(a1 + 40) = v12;
  sub_100510084(v13, v14);
  uint64_t v15 = a2[6];
  unint64_t v16 = a2[7];
  sub_100510D4C(v15, v16);
  uint64_t v17 = *(void *)(a1 + 48);
  unint64_t v18 = *(void *)(a1 + 56);
  *(void *)(a1 + 48) = v15;
  *(void *)(a1 + 56) = v16;
  sub_100510084(v17, v18);
  uint64_t v19 = *(int *)(a3 + 32);
  uint64_t v20 = a1 + v19;
  uint64_t v21 = (uint64_t)a2 + v19;
  uint64_t v22 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 24))(v20, v21, v22);
  return a1;
}

uint64_t sub_100C180A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v4;
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  uint64_t v5 = *(int *)(a3 + 32);
  uint64_t v6 = a1 + v5;
  uint64_t v7 = a2 + v5;
  uint64_t v8 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32))(v6, v7, v8);
  return a1;
}

uint64_t sub_100C18134(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v6 = *(void *)(a1 + 16);
  unint64_t v7 = *(void *)(a1 + 24);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  sub_100510084(v6, v7);
  uint64_t v8 = *(void *)(a1 + 32);
  unint64_t v9 = *(void *)(a1 + 40);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  sub_100510084(v8, v9);
  uint64_t v10 = *(void *)(a1 + 48);
  unint64_t v11 = *(void *)(a1 + 56);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  sub_100510084(v10, v11);
  uint64_t v12 = *(int *)(a3 + 32);
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  uint64_t v15 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 40))(v13, v14, v15);
  return a1;
}

uint64_t sub_100C181F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100C18208);
}

uint64_t sub_100C18208(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 12)
  {
    uint64_t v4 = *(void *)(a1 + 24) >> 60;
    if (((4 * v4) & 0xC) != 0) {
      return 16 - ((4 * v4) & 0xC | (v4 >> 2));
    }
    else {
      return 0;
    }
  }
  else
  {
    uint64_t v8 = type metadata accessor for UnknownStorage();
    unint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 32);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_100C182C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100C182D8);
}

uint64_t sub_100C182D8(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 12)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = (unint64_t)(((-(int)a2 >> 2) & 3) - 4 * a2) << 60;
  }
  else
  {
    uint64_t v7 = type metadata accessor for UnknownStorage();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 32);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_100C18388()
{
  return sub_100C1839C();
}

uint64_t sub_100C1839C()
{
  uint64_t result = type metadata accessor for UnknownStorage();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void *sub_100C18430(void *a1, void *a2, int *a3)
{
  int v3 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v7 = (void *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a1;
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = type metadata accessor for UnknownStorage();
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    uint64_t v13 = a3[6];
    uint64_t v14 = (void *)((char *)v7 + v13);
    uint64_t v15 = (void *)((char *)a2 + v13);
    uint64_t v16 = type metadata accessor for CRLProto_Path(0);
    uint64_t v17 = *(void *)(v16 - 8);
    uint64_t v55 = v11;
    if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
    {
      uint64_t v18 = sub_1005057FC(&qword_1016930D8);
      memcpy(v14, v15, *(void *)(*(void *)(v18 - 8) + 64));
    }
    else
    {
      *uint64_t v14 = *v15;
      uint64_t v19 = *(int *)(v16 + 20);
      uint64_t v53 = (char *)v14 + v19;
      uint64_t v20 = (char *)v15 + v19;
      swift_bridgeObjectRetain();
      v12(v53, v20, v11);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
    }
    uint64_t v21 = v12;
    uint64_t v22 = a3[7];
    uint64_t v23 = a3[8];
    uint64_t v24 = (char *)v7 + v22;
    uint64_t v25 = (char *)a2 + v22;
    *(_DWORD *)uint64_t v24 = *(_DWORD *)v25;
    v24[4] = v25[4];
    uint64_t v26 = (void *)((char *)v7 + v23);
    uint64_t v27 = (void *)((char *)a2 + v23);
    uint64_t v28 = type metadata accessor for CRLProto_Date(0);
    uint64_t v29 = *(void *)(v28 - 8);
    if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v29 + 48))(v27, 1, v28))
    {
      uint64_t v30 = sub_1005057FC(&qword_1016930C8);
      memcpy(v26, v27, *(void *)(*(void *)(v30 - 8) + 64));
      uint64_t v31 = v55;
    }
    else
    {
      *uint64_t v26 = *v27;
      uint64_t v31 = v55;
      v21((char *)v26 + *(int *)(v28 + 20), (char *)v27 + *(int *)(v28 + 20), v55);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v29 + 56))(v26, 0, 1, v28);
    }
    uint64_t v32 = a3[9];
    uint64_t v33 = a3[10];
    uint64_t v34 = (char *)v7 + v32;
    uint64_t v35 = (char *)a2 + v32;
    *(_DWORD *)uint64_t v34 = *(_DWORD *)v35;
    v34[4] = v35[4];
    uint64_t v36 = (char *)v7 + v33;
    uint64_t v37 = (char *)a2 + v33;
    *(_DWORD *)uint64_t v36 = *(_DWORD *)v37;
    v36[4] = v37[4];
    uint64_t v38 = a3[11];
    uint64_t v39 = (void *)((char *)v7 + v38);
    uint64_t v40 = (void *)((char *)a2 + v38);
    uint64_t v41 = type metadata accessor for CRLProto_Point(0);
    uint64_t v42 = *(void *)(v41 - 8);
    uint64_t v54 = v21;
    if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v42 + 48))(v40, 1, v41))
    {
      uint64_t v43 = sub_1005057FC(&qword_10168E570);
      memcpy(v39, v40, *(void *)(*(void *)(v43 - 8) + 64));
    }
    else
    {
      *uint64_t v39 = *v40;
      v21((char *)v39 + *(int *)(v41 + 24), (char *)v40 + *(int *)(v41 + 24), v31);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v42 + 56))(v39, 0, 1, v41);
    }
    uint64_t v44 = a3[12];
    uint64_t v45 = (void *)((char *)v7 + v44);
    uint64_t v46 = (void *)((char *)a2 + v44);
    uint64_t v47 = type metadata accessor for CRLProto_Data(0);
    uint64_t v48 = *(void *)(v47 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v48 + 48))(v46, 1, v47))
    {
      uint64_t v49 = sub_1005057FC((uint64_t *)&unk_101674160);
      memcpy(v45, v46, *(void *)(*(void *)(v49 - 8) + 64));
    }
    else
    {
      uint64_t v50 = *v46;
      unint64_t v51 = v46[1];
      sub_100510D4C(*v46, v51);
      *uint64_t v45 = v50;
      v45[1] = v51;
      v54((char *)v45 + *(int *)(v47 + 20), (char *)v46 + *(int *)(v47 + 20), v31);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v48 + 56))(v45, 0, 1, v47);
    }
    *((unsigned char *)v7 + a3[13]) = *((unsigned char *)a2 + a3[13]);
  }
  return v7;
}

uint64_t sub_100C18940(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + a2[5];
  uint64_t v5 = type metadata accessor for UnknownStorage();
  uint64_t v16 = *(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  v16(v4, v5);
  uint64_t v6 = a1 + a2[6];
  uint64_t v7 = type metadata accessor for CRLProto_Path(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v6, 1, v7))
  {
    swift_bridgeObjectRelease();
    v16(v6 + *(int *)(v7 + 20), v5);
  }
  uint64_t v8 = a1 + a2[8];
  uint64_t v9 = type metadata accessor for CRLProto_Date(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48))(v8, 1, v9)) {
    v16(v8 + *(int *)(v9 + 20), v5);
  }
  uint64_t v10 = a1 + a2[11];
  uint64_t v11 = type metadata accessor for CRLProto_Point(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48))(v10, 1, v11)) {
    v16(v10 + *(int *)(v11 + 24), v5);
  }
  uint64_t v12 = a1 + a2[12];
  uint64_t v13 = type metadata accessor for CRLProto_Data(0);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48))(v12, 1, v13);
  if (!result)
  {
    sub_100510084(*(void *)v12, *(void *)(v12 + 8));
    uint64_t v15 = v12 + *(int *)(v13 + 20);
    return ((uint64_t (*)(uint64_t, uint64_t))v16)(v15, v5);
  }
  return result;
}

void *sub_100C18BA0(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for UnknownStorage();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
  swift_bridgeObjectRetain();
  v10(v7, v8, v9);
  uint64_t v11 = a3[6];
  uint64_t v12 = (void *)((char *)a1 + v11);
  uint64_t v13 = (void *)((char *)a2 + v11);
  uint64_t v14 = type metadata accessor for CRLProto_Path(0);
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v53 = v9;
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
  {
    uint64_t v16 = sub_1005057FC(&qword_1016930D8);
    memcpy(v12, v13, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    *uint64_t v12 = *v13;
    uint64_t v17 = *(int *)(v14 + 20);
    unint64_t v51 = (char *)v12 + v17;
    uint64_t v18 = (char *)v13 + v17;
    swift_bridgeObjectRetain();
    v10(v51, v18, v9);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  }
  uint64_t v19 = v10;
  uint64_t v20 = a3[7];
  uint64_t v21 = a3[8];
  uint64_t v22 = (char *)a1 + v20;
  uint64_t v23 = (char *)a2 + v20;
  *(_DWORD *)uint64_t v22 = *(_DWORD *)v23;
  v22[4] = v23[4];
  uint64_t v24 = (void *)((char *)a1 + v21);
  uint64_t v25 = (void *)((char *)a2 + v21);
  uint64_t v26 = type metadata accessor for CRLProto_Date(0);
  uint64_t v27 = *(void *)(v26 - 8);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26))
  {
    uint64_t v28 = sub_1005057FC(&qword_1016930C8);
    memcpy(v24, v25, *(void *)(*(void *)(v28 - 8) + 64));
    uint64_t v29 = v53;
  }
  else
  {
    *uint64_t v24 = *v25;
    uint64_t v29 = v53;
    v19((char *)v24 + *(int *)(v26 + 20), (char *)v25 + *(int *)(v26 + 20), v53);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
  }
  uint64_t v30 = a3[9];
  uint64_t v31 = a3[10];
  uint64_t v32 = (char *)a1 + v30;
  uint64_t v33 = (char *)a2 + v30;
  *(_DWORD *)uint64_t v32 = *(_DWORD *)v33;
  v32[4] = v33[4];
  uint64_t v34 = (char *)a1 + v31;
  uint64_t v35 = (char *)a2 + v31;
  *(_DWORD *)uint64_t v34 = *(_DWORD *)v35;
  v34[4] = v35[4];
  uint64_t v36 = a3[11];
  uint64_t v37 = (void *)((char *)a1 + v36);
  uint64_t v38 = (void *)((char *)a2 + v36);
  uint64_t v39 = type metadata accessor for CRLProto_Point(0);
  uint64_t v40 = *(void *)(v39 - 8);
  uint64_t v52 = v19;
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v40 + 48))(v38, 1, v39))
  {
    uint64_t v41 = sub_1005057FC(&qword_10168E570);
    memcpy(v37, v38, *(void *)(*(void *)(v41 - 8) + 64));
  }
  else
  {
    void *v37 = *v38;
    v19((char *)v37 + *(int *)(v39 + 24), (char *)v38 + *(int *)(v39 + 24), v29);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v40 + 56))(v37, 0, 1, v39);
  }
  uint64_t v42 = a3[12];
  uint64_t v43 = (void *)((char *)a1 + v42);
  uint64_t v44 = (void *)((char *)a2 + v42);
  uint64_t v45 = type metadata accessor for CRLProto_Data(0);
  uint64_t v46 = *(void *)(v45 - 8);
  if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v46 + 48))(v44, 1, v45))
  {
    uint64_t v47 = sub_1005057FC((uint64_t *)&unk_101674160);
    memcpy(v43, v44, *(void *)(*(void *)(v47 - 8) + 64));
  }
  else
  {
    uint64_t v48 = *v44;
    unint64_t v49 = v44[1];
    sub_100510D4C(*v44, v49);
    *uint64_t v43 = v48;
    v43[1] = v49;
    v52((char *)v43 + *(int *)(v45 + 20), (char *)v44 + *(int *)(v45 + 20), v29);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v46 + 56))(v43, 0, 1, v45);
  }
  *((unsigned char *)a1 + a3[13]) = *((unsigned char *)a2 + a3[13]);
  return a1;
}

void *sub_100C19064(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for UnknownStorage();
  uint64_t v70 = *(void *)(v9 - 8);
  uint64_t v71 = v9;
  uint64_t v69 = *(void (**)(char *, char *))(v70 + 24);
  v69(v7, v8);
  uint64_t v10 = a3[6];
  uint64_t v11 = (void *)((char *)a1 + v10);
  uint64_t v12 = (void *)((char *)a2 + v10);
  uint64_t v13 = type metadata accessor for CRLProto_Path(0);
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v14 + 48);
  int v16 = v15(v11, 1, v13);
  int v17 = v15(v12, 1, v13);
  if (v16)
  {
    if (!v17)
    {
      *uint64_t v11 = *v12;
      uint64_t v18 = *(int *)(v13 + 20);
      uint64_t v19 = (char *)v11 + v18;
      uint64_t v20 = (char *)v12 + v18;
      uint64_t v21 = *(void (**)(char *, char *, uint64_t))(v70 + 16);
      swift_bridgeObjectRetain();
      v21(v19, v20, v71);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v17)
  {
    sub_100C16A08((uint64_t)v11, type metadata accessor for CRLProto_Path);
LABEL_6:
    uint64_t v22 = sub_1005057FC(&qword_1016930D8);
    memcpy(v11, v12, *(void *)(*(void *)(v22 - 8) + 64));
    goto LABEL_7;
  }
  *uint64_t v11 = *v12;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  ((void (*)(char *, char *, uint64_t))v69)((char *)v11 + *(int *)(v13 + 20), (char *)v12 + *(int *)(v13 + 20), v71);
LABEL_7:
  uint64_t v23 = a3[7];
  uint64_t v24 = (char *)a1 + v23;
  uint64_t v25 = (char *)a2 + v23;
  int v26 = *(_DWORD *)v25;
  v24[4] = v25[4];
  *(_DWORD *)uint64_t v24 = v26;
  uint64_t v27 = a3[8];
  uint64_t v28 = (char *)a1 + v27;
  uint64_t v29 = (char *)a2 + v27;
  uint64_t v30 = type metadata accessor for CRLProto_Date(0);
  uint64_t v31 = *(void *)(v30 - 8);
  uint64_t v32 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v31 + 48);
  int v33 = v32(v28, 1, v30);
  int v34 = v32(v29, 1, v30);
  if (v33)
  {
    if (!v34)
    {
      *(void *)uint64_t v28 = *(void *)v29;
      (*(void (**)(char *, char *, uint64_t))(v70 + 16))(&v28[*(int *)(v30 + 20)], &v29[*(int *)(v30 + 20)], v71);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v31 + 56))(v28, 0, 1, v30);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v34)
  {
    sub_100C16A08((uint64_t)v28, type metadata accessor for CRLProto_Date);
LABEL_12:
    uint64_t v35 = sub_1005057FC(&qword_1016930C8);
    memcpy(v28, v29, *(void *)(*(void *)(v35 - 8) + 64));
    goto LABEL_13;
  }
  *(void *)uint64_t v28 = *(void *)v29;
  ((void (*)(char *, char *, uint64_t))v69)(&v28[*(int *)(v30 + 20)], &v29[*(int *)(v30 + 20)], v71);
LABEL_13:
  uint64_t v36 = a3[9];
  uint64_t v37 = (char *)a1 + v36;
  uint64_t v38 = (char *)a2 + v36;
  int v39 = *(_DWORD *)v38;
  v37[4] = v38[4];
  *(_DWORD *)uint64_t v37 = v39;
  uint64_t v40 = a3[10];
  uint64_t v41 = (char *)a1 + v40;
  uint64_t v42 = (char *)a2 + v40;
  int v43 = *(_DWORD *)v42;
  v41[4] = v42[4];
  *(_DWORD *)uint64_t v41 = v43;
  uint64_t v44 = a3[11];
  uint64_t v45 = (char *)a1 + v44;
  uint64_t v46 = (char *)a2 + v44;
  uint64_t v47 = type metadata accessor for CRLProto_Point(0);
  uint64_t v48 = *(void *)(v47 - 8);
  unint64_t v49 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v48 + 48);
  int v50 = v49(v45, 1, v47);
  int v51 = v49(v46, 1, v47);
  if (v50)
  {
    if (!v51)
    {
      *(_DWORD *)uint64_t v45 = *(_DWORD *)v46;
      *((_DWORD *)v45 + 1) = *((_DWORD *)v46 + 1);
      (*(void (**)(char *, char *, uint64_t))(v70 + 16))(&v45[*(int *)(v47 + 24)], &v46[*(int *)(v47 + 24)], v71);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v48 + 56))(v45, 0, 1, v47);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v51)
  {
    sub_100C16A08((uint64_t)v45, type metadata accessor for CRLProto_Point);
LABEL_18:
    uint64_t v52 = sub_1005057FC(&qword_10168E570);
    memcpy(v45, v46, *(void *)(*(void *)(v52 - 8) + 64));
    goto LABEL_19;
  }
  *(_DWORD *)uint64_t v45 = *(_DWORD *)v46;
  *((_DWORD *)v45 + 1) = *((_DWORD *)v46 + 1);
  ((void (*)(char *, char *, uint64_t))v69)(&v45[*(int *)(v47 + 24)], &v46[*(int *)(v47 + 24)], v71);
LABEL_19:
  uint64_t v53 = a3[12];
  uint64_t v54 = (void *)((char *)a1 + v53);
  uint64_t v55 = (void *)((char *)a2 + v53);
  uint64_t v56 = type metadata accessor for CRLProto_Data(0);
  uint64_t v57 = *(void *)(v56 - 8);
  uint64_t v58 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v57 + 48);
  int v59 = v58(v54, 1, v56);
  int v60 = v58(v55, 1, v56);
  if (!v59)
  {
    if (!v60)
    {
      uint64_t v65 = *v55;
      unint64_t v66 = v55[1];
      sub_100510D4C(*v55, v66);
      uint64_t v67 = *v54;
      unint64_t v68 = v54[1];
      *uint64_t v54 = v65;
      v54[1] = v66;
      sub_100510084(v67, v68);
      ((void (*)(char *, char *, uint64_t))v69)((char *)v54 + *(int *)(v56 + 20), (char *)v55 + *(int *)(v56 + 20), v71);
      goto LABEL_25;
    }
    sub_100C16A08((uint64_t)v54, type metadata accessor for CRLProto_Data);
    goto LABEL_24;
  }
  if (v60)
  {
LABEL_24:
    uint64_t v63 = sub_1005057FC((uint64_t *)&unk_101674160);
    memcpy(v54, v55, *(void *)(*(void *)(v63 - 8) + 64));
    goto LABEL_25;
  }
  uint64_t v61 = *v55;
  unint64_t v62 = v55[1];
  sub_100510D4C(*v55, v62);
  *uint64_t v54 = v61;
  v54[1] = v62;
  (*(void (**)(char *, char *, uint64_t))(v70 + 16))((char *)v54 + *(int *)(v56 + 20), (char *)v55 + *(int *)(v56 + 20), v71);
  (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v57 + 56))(v54, 0, 1, v56);
LABEL_25:
  *((unsigned char *)a1 + a3[13]) = *((unsigned char *)a2 + a3[13]);
  return a1;
}

void *sub_100C19728(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for UnknownStorage();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32);
  v10(v7, v8, v9);
  uint64_t v11 = a3[6];
  uint64_t v12 = (void *)((char *)a1 + v11);
  uint64_t v13 = (void *)((char *)a2 + v11);
  uint64_t v14 = type metadata accessor for CRLProto_Path(0);
  uint64_t v15 = *(void *)(v14 - 8);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
  {
    uint64_t v16 = sub_1005057FC(&qword_1016930D8);
    memcpy(v12, v13, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    *uint64_t v12 = *v13;
    v10((char *)v12 + *(int *)(v14 + 20), (char *)v13 + *(int *)(v14 + 20), v9);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  }
  uint64_t v17 = a3[7];
  uint64_t v18 = a3[8];
  uint64_t v19 = (char *)a1 + v17;
  uint64_t v20 = (char *)a2 + v17;
  *(_DWORD *)uint64_t v19 = *(_DWORD *)v20;
  void v19[4] = v20[4];
  uint64_t v21 = (void *)((char *)a1 + v18);
  uint64_t v22 = (void *)((char *)a2 + v18);
  uint64_t v23 = type metadata accessor for CRLProto_Date(0);
  uint64_t v24 = *(void *)(v23 - 8);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23))
  {
    uint64_t v25 = sub_1005057FC(&qword_1016930C8);
    memcpy(v21, v22, *(void *)(*(void *)(v25 - 8) + 64));
  }
  else
  {
    *uint64_t v21 = *v22;
    v10((char *)v21 + *(int *)(v23 + 20), (char *)v22 + *(int *)(v23 + 20), v9);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
  }
  uint64_t v26 = a3[9];
  uint64_t v27 = a3[10];
  uint64_t v28 = (char *)a1 + v26;
  uint64_t v29 = (char *)a2 + v26;
  *(_DWORD *)uint64_t v28 = *(_DWORD *)v29;
  v28[4] = v29[4];
  uint64_t v30 = (char *)a1 + v27;
  uint64_t v31 = (char *)a2 + v27;
  *(_DWORD *)uint64_t v30 = *(_DWORD *)v31;
  v30[4] = v31[4];
  uint64_t v32 = a3[11];
  int v33 = (void *)((char *)a1 + v32);
  int v34 = (void *)((char *)a2 + v32);
  uint64_t v35 = type metadata accessor for CRLProto_Point(0);
  uint64_t v36 = *(void *)(v35 - 8);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v36 + 48))(v34, 1, v35))
  {
    uint64_t v37 = sub_1005057FC(&qword_10168E570);
    memcpy(v33, v34, *(void *)(*(void *)(v37 - 8) + 64));
  }
  else
  {
    *int v33 = *v34;
    v10((char *)v33 + *(int *)(v35 + 24), (char *)v34 + *(int *)(v35 + 24), v9);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v36 + 56))(v33, 0, 1, v35);
  }
  uint64_t v38 = a3[12];
  int v39 = (_OWORD *)((char *)a1 + v38);
  uint64_t v40 = (_OWORD *)((char *)a2 + v38);
  uint64_t v41 = type metadata accessor for CRLProto_Data(0);
  uint64_t v42 = *(void *)(v41 - 8);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v42 + 48))(v40, 1, v41))
  {
    uint64_t v43 = sub_1005057FC((uint64_t *)&unk_101674160);
    memcpy(v39, v40, *(void *)(*(void *)(v43 - 8) + 64));
  }
  else
  {
    *int v39 = *v40;
    v10((char *)v39 + *(int *)(v41 + 20), (char *)v40 + *(int *)(v41 + 20), v9);
    (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v42 + 56))(v39, 0, 1, v41);
  }
  *((unsigned char *)a1 + a3[13]) = *((unsigned char *)a2 + a3[13]);
  return a1;
}

void *sub_100C19BA4(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for UnknownStorage();
  uint64_t v59 = *(void *)(v9 - 8);
  uint64_t v60 = v9;
  uint64_t v58 = *(void (**)(char *, char *))(v59 + 40);
  v58(v7, v8);
  uint64_t v10 = a3[6];
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = type metadata accessor for CRLProto_Path(0);
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48);
  int v16 = v15(v11, 1, v13);
  int v17 = v15(v12, 1, v13);
  if (v16)
  {
    if (!v17)
    {
      *(void *)uint64_t v11 = *(void *)v12;
      (*(void (**)(char *, char *, uint64_t))(v59 + 32))(&v11[*(int *)(v13 + 20)], &v12[*(int *)(v13 + 20)], v60);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v17)
  {
    sub_100C16A08((uint64_t)v11, type metadata accessor for CRLProto_Path);
LABEL_6:
    uint64_t v18 = sub_1005057FC(&qword_1016930D8);
    memcpy(v11, v12, *(void *)(*(void *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  *(void *)uint64_t v11 = *(void *)v12;
  swift_bridgeObjectRelease();
  ((void (*)(char *, char *, uint64_t))v58)(&v11[*(int *)(v13 + 20)], &v12[*(int *)(v13 + 20)], v60);
LABEL_7:
  uint64_t v19 = a3[7];
  uint64_t v20 = a3[8];
  uint64_t v21 = (char *)a1 + v19;
  uint64_t v22 = (char *)a2 + v19;
  *(_DWORD *)uint64_t v21 = *(_DWORD *)v22;
  v21[4] = v22[4];
  uint64_t v23 = (char *)a1 + v20;
  uint64_t v24 = (char *)a2 + v20;
  uint64_t v25 = type metadata accessor for CRLProto_Date(0);
  uint64_t v26 = *(void *)(v25 - 8);
  uint64_t v27 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v26 + 48);
  int v28 = v27(v23, 1, v25);
  int v29 = v27(v24, 1, v25);
  if (v28)
  {
    if (!v29)
    {
      *(void *)uint64_t v23 = *(void *)v24;
      (*(void (**)(char *, char *, uint64_t))(v59 + 32))(&v23[*(int *)(v25 + 20)], &v24[*(int *)(v25 + 20)], v60);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v29)
  {
    sub_100C16A08((uint64_t)v23, type metadata accessor for CRLProto_Date);
LABEL_12:
    uint64_t v30 = sub_1005057FC(&qword_1016930C8);
    memcpy(v23, v24, *(void *)(*(void *)(v30 - 8) + 64));
    goto LABEL_13;
  }
  *(void *)uint64_t v23 = *(void *)v24;
  ((void (*)(char *, char *, uint64_t))v58)(&v23[*(int *)(v25 + 20)], &v24[*(int *)(v25 + 20)], v60);
LABEL_13:
  uint64_t v31 = a3[9];
  uint64_t v32 = a3[10];
  int v33 = (char *)a1 + v31;
  int v34 = (char *)a2 + v31;
  *(_DWORD *)int v33 = *(_DWORD *)v34;
  v33[4] = v34[4];
  uint64_t v35 = (char *)a1 + v32;
  uint64_t v36 = (char *)a2 + v32;
  *(_DWORD *)uint64_t v35 = *(_DWORD *)v36;
  v35[4] = v36[4];
  uint64_t v37 = a3[11];
  uint64_t v38 = (char *)a1 + v37;
  int v39 = (char *)a2 + v37;
  uint64_t v40 = type metadata accessor for CRLProto_Point(0);
  uint64_t v41 = *(void *)(v40 - 8);
  uint64_t v42 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v41 + 48);
  int v43 = v42(v38, 1, v40);
  int v44 = v42(v39, 1, v40);
  if (v43)
  {
    if (!v44)
    {
      *(void *)uint64_t v38 = *(void *)v39;
      (*(void (**)(char *, char *, uint64_t))(v59 + 32))(&v38[*(int *)(v40 + 24)], &v39[*(int *)(v40 + 24)], v60);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v41 + 56))(v38, 0, 1, v40);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v44)
  {
    sub_100C16A08((uint64_t)v38, type metadata accessor for CRLProto_Point);
LABEL_18:
    uint64_t v45 = sub_1005057FC(&qword_10168E570);
    memcpy(v38, v39, *(void *)(*(void *)(v45 - 8) + 64));
    goto LABEL_19;
  }
  *(void *)uint64_t v38 = *(void *)v39;
  ((void (*)(char *, char *, uint64_t))v58)(&v38[*(int *)(v40 + 24)], &v39[*(int *)(v40 + 24)], v60);
LABEL_19:
  uint64_t v46 = a3[12];
  uint64_t v47 = (void *)((char *)a1 + v46);
  uint64_t v48 = (void *)((char *)a2 + v46);
  uint64_t v49 = type metadata accessor for CRLProto_Data(0);
  uint64_t v50 = *(void *)(v49 - 8);
  int v51 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v50 + 48);
  int v52 = v51(v47, 1, v49);
  int v53 = v51(v48, 1, v49);
  if (!v52)
  {
    if (!v53)
    {
      uint64_t v56 = *v47;
      unint64_t v57 = v47[1];
      *(_OWORD *)uint64_t v47 = *(_OWORD *)v48;
      sub_100510084(v56, v57);
      ((void (*)(char *, char *, uint64_t))v58)((char *)v47 + *(int *)(v49 + 20), (char *)v48 + *(int *)(v49 + 20), v60);
      goto LABEL_25;
    }
    sub_100C16A08((uint64_t)v47, type metadata accessor for CRLProto_Data);
    goto LABEL_24;
  }
  if (v53)
  {
LABEL_24:
    uint64_t v54 = sub_1005057FC((uint64_t *)&unk_101674160);
    memcpy(v47, v48, *(void *)(*(void *)(v54 - 8) + 64));
    goto LABEL_25;
  }
  *(_OWORD *)uint64_t v47 = *(_OWORD *)v48;
  (*(void (**)(char *, char *, uint64_t))(v59 + 32))((char *)v47 + *(int *)(v49 + 20), (char *)v48 + *(int *)(v49 + 20), v60);
  (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v50 + 56))(v47, 0, 1, v49);
LABEL_25:
  *((unsigned char *)a1 + a3[13]) = *((unsigned char *)a2 + a3[13]);
  return a1;
}

uint64_t sub_100C1A218(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100C1A22C);
}

uint64_t sub_100C1A22C(char *a1, uint64_t a2, int *a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *(void *)a1;
    if (*(void *)a1 >= 0xFFFFFFFFuLL) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  uint64_t v8 = type metadata accessor for UnknownStorage();
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a2)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a3[5];
LABEL_13:
    uint64_t v15 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
    return v15(&a1[v11], a2, v9);
  }
  uint64_t v12 = sub_1005057FC(&qword_1016930D8);
  if (*(_DWORD *)(*(void *)(v12 - 8) + 84) == a2)
  {
    uint64_t v9 = v12;
    uint64_t v10 = *(void *)(v12 - 8);
    uint64_t v11 = a3[6];
    goto LABEL_13;
  }
  uint64_t v13 = sub_1005057FC(&qword_1016930C8);
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a2)
  {
    uint64_t v9 = v13;
    uint64_t v10 = *(void *)(v13 - 8);
    uint64_t v11 = a3[8];
    goto LABEL_13;
  }
  uint64_t v14 = sub_1005057FC(&qword_10168E570);
  if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a2)
  {
    uint64_t v9 = v14;
    uint64_t v10 = *(void *)(v14 - 8);
    uint64_t v11 = a3[11];
    goto LABEL_13;
  }
  uint64_t v16 = sub_1005057FC((uint64_t *)&unk_101674160);
  int v17 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v16 - 8) + 48);
  uint64_t v18 = v16;
  uint64_t v19 = &a1[a3[12]];

  return v17(v19, a2, v18);
}

uint64_t sub_100C1A44C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100C1A460);
}

char *sub_100C1A460(char *result, uint64_t a2, int a3, int *a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)uint64_t result = (a2 - 1);
    return result;
  }
  uint64_t v8 = type metadata accessor for UnknownStorage();
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a3)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a4[5];
LABEL_11:
    uint64_t v15 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56);
    return (char *)v15(&v5[v11], a2, a2, v9);
  }
  uint64_t v12 = sub_1005057FC(&qword_1016930D8);
  if (*(_DWORD *)(*(void *)(v12 - 8) + 84) == a3)
  {
    uint64_t v9 = v12;
    uint64_t v10 = *(void *)(v12 - 8);
    uint64_t v11 = a4[6];
    goto LABEL_11;
  }
  uint64_t v13 = sub_1005057FC(&qword_1016930C8);
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
  {
    uint64_t v9 = v13;
    uint64_t v10 = *(void *)(v13 - 8);
    uint64_t v11 = a4[8];
    goto LABEL_11;
  }
  uint64_t v14 = sub_1005057FC(&qword_10168E570);
  if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a3)
  {
    uint64_t v9 = v14;
    uint64_t v10 = *(void *)(v14 - 8);
    uint64_t v11 = a4[11];
    goto LABEL_11;
  }
  uint64_t v16 = sub_1005057FC((uint64_t *)&unk_101674160);
  int v17 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  uint64_t v18 = v16;
  uint64_t v19 = &v5[a4[12]];

  return (char *)v17(v19, a2, a2, v18);
}

void sub_100C1A680()
{
  type metadata accessor for UnknownStorage();
  if (v0 <= 0x3F)
  {
    sub_100C1A890(319, &qword_1016981C0, (void (*)(uint64_t))type metadata accessor for CRLProto_Path);
    if (v1 <= 0x3F)
    {
      sub_100C1A890(319, &qword_1016981C8, (void (*)(uint64_t))type metadata accessor for CRLProto_Date);
      if (v2 <= 0x3F)
      {
        sub_100C1A890(319, (unint64_t *)&unk_1016981D0, (void (*)(uint64_t))type metadata accessor for CRLProto_Point);
        if (v3 <= 0x3F)
        {
          sub_100C1A890(319, (unint64_t *)&unk_101697808, (void (*)(uint64_t))type metadata accessor for CRLProto_Data);
          if (v4 <= 0x3F) {
            swift_initStructMetadata();
          }
        }
      }
    }
  }
}

void sub_100C1A890(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = type metadata accessor for Optional();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t *sub_100C1A8E4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v27 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v27 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = *a2;
    unint64_t v8 = a2[1];
    sub_100510D4C(*a2, v8);
    *a1 = v7;
    a1[1] = v8;
    uint64_t v9 = a2[2];
    unint64_t v10 = a2[3];
    sub_100510D4C(v9, v10);
    a1[2] = v9;
    a1[3] = v10;
    uint64_t v11 = a2[4];
    unint64_t v12 = a2[5];
    sub_100510D4C(v11, v12);
    a1[4] = v11;
    a1[5] = v12;
    uint64_t v13 = a2[6];
    unint64_t v14 = a2[7];
    sub_100510D4C(v13, v14);
    a1[6] = v13;
    a1[7] = v14;
    uint64_t v15 = a2[8];
    unint64_t v16 = a2[9];
    sub_100510D4C(v15, v16);
    a1[8] = v15;
    a1[9] = v16;
    uint64_t v17 = a2[10];
    unint64_t v18 = a2[11];
    sub_100510D4C(v17, v18);
    a1[10] = v17;
    a1[11] = v18;
    uint64_t v19 = a2[12];
    unint64_t v20 = a2[13];
    sub_100510D4C(v19, v20);
    a1[12] = v19;
    a1[13] = v20;
    uint64_t v21 = a2[14];
    unint64_t v22 = a2[15];
    sub_100510D4C(v21, v22);
    a1[14] = v21;
    a1[15] = v22;
    uint64_t v23 = *(int *)(a3 + 48);
    uint64_t v24 = (char *)a1 + v23;
    uint64_t v25 = (char *)a2 + v23;
    uint64_t v26 = type metadata accessor for UnknownStorage();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 16))(v24, v25, v26);
  }
  return a1;
}

uint64_t sub_100C1AA58(uint64_t a1, uint64_t a2)
{
  sub_100510084(*(void *)a1, *(void *)(a1 + 8));
  sub_100510084(*(void *)(a1 + 16), *(void *)(a1 + 24));
  sub_100510084(*(void *)(a1 + 32), *(void *)(a1 + 40));
  sub_100510084(*(void *)(a1 + 48), *(void *)(a1 + 56));
  sub_100510084(*(void *)(a1 + 64), *(void *)(a1 + 72));
  sub_100510084(*(void *)(a1 + 80), *(void *)(a1 + 88));
  sub_100510084(*(void *)(a1 + 96), *(void *)(a1 + 104));
  sub_100510084(*(void *)(a1 + 112), *(void *)(a1 + 120));
  uint64_t v4 = a1 + *(int *)(a2 + 48);
  uint64_t v5 = type metadata accessor for UnknownStorage();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);

  return v6(v4, v5);
}

uint64_t *sub_100C1AB0C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6 = *a2;
  unint64_t v7 = a2[1];
  sub_100510D4C(*a2, v7);
  *a1 = v6;
  a1[1] = v7;
  uint64_t v8 = a2[2];
  unint64_t v9 = a2[3];
  sub_100510D4C(v8, v9);
  a1[2] = v8;
  a1[3] = v9;
  uint64_t v10 = a2[4];
  unint64_t v11 = a2[5];
  sub_100510D4C(v10, v11);
  a1[4] = v10;
  a1[5] = v11;
  uint64_t v12 = a2[6];
  unint64_t v13 = a2[7];
  sub_100510D4C(v12, v13);
  a1[6] = v12;
  a1[7] = v13;
  uint64_t v14 = a2[8];
  unint64_t v15 = a2[9];
  sub_100510D4C(v14, v15);
  a1[8] = v14;
  a1[9] = v15;
  uint64_t v16 = a2[10];
  unint64_t v17 = a2[11];
  sub_100510D4C(v16, v17);
  a1[10] = v16;
  a1[11] = v17;
  uint64_t v18 = a2[12];
  unint64_t v19 = a2[13];
  sub_100510D4C(v18, v19);
  a1[12] = v18;
  a1[13] = v19;
  uint64_t v20 = a2[14];
  unint64_t v21 = a2[15];
  sub_100510D4C(v20, v21);
  a1[14] = v20;
  a1[15] = v21;
  uint64_t v22 = *(int *)(a3 + 48);
  uint64_t v23 = (char *)a1 + v22;
  uint64_t v24 = (char *)a2 + v22;
  uint64_t v25 = type metadata accessor for UnknownStorage();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 16))(v23, v24, v25);
  return a1;
}

uint64_t *sub_100C1AC30(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6 = *a2;
  unint64_t v7 = a2[1];
  sub_100510D4C(*a2, v7);
  uint64_t v8 = *a1;
  unint64_t v9 = a1[1];
  *a1 = v6;
  a1[1] = v7;
  sub_100510084(v8, v9);
  uint64_t v10 = a2[2];
  unint64_t v11 = a2[3];
  sub_100510D4C(v10, v11);
  uint64_t v12 = a1[2];
  unint64_t v13 = a1[3];
  a1[2] = v10;
  a1[3] = v11;
  sub_100510084(v12, v13);
  uint64_t v14 = a2[4];
  unint64_t v15 = a2[5];
  sub_100510D4C(v14, v15);
  uint64_t v16 = a1[4];
  unint64_t v17 = a1[5];
  a1[4] = v14;
  a1[5] = v15;
  sub_100510084(v16, v17);
  uint64_t v18 = a2[6];
  unint64_t v19 = a2[7];
  sub_100510D4C(v18, v19);
  uint64_t v20 = a1[6];
  unint64_t v21 = a1[7];
  a1[6] = v18;
  a1[7] = v19;
  sub_100510084(v20, v21);
  uint64_t v22 = a2[8];
  unint64_t v23 = a2[9];
  sub_100510D4C(v22, v23);
  uint64_t v24 = a1[8];
  unint64_t v25 = a1[9];
  a1[8] = v22;
  a1[9] = v23;
  sub_100510084(v24, v25);
  uint64_t v26 = a2[10];
  unint64_t v27 = a2[11];
  sub_100510D4C(v26, v27);
  uint64_t v28 = a1[10];
  unint64_t v29 = a1[11];
  a1[10] = v26;
  a1[11] = v27;
  sub_100510084(v28, v29);
  uint64_t v30 = a2[12];
  unint64_t v31 = a2[13];
  sub_100510D4C(v30, v31);
  uint64_t v32 = a1[12];
  unint64_t v33 = a1[13];
  a1[12] = v30;
  a1[13] = v31;
  sub_100510084(v32, v33);
  uint64_t v34 = a2[14];
  unint64_t v35 = a2[15];
  sub_100510D4C(v34, v35);
  uint64_t v36 = a1[14];
  unint64_t v37 = a1[15];
  a1[14] = v34;
  a1[15] = v35;
  sub_100510084(v36, v37);
  uint64_t v38 = *(int *)(a3 + 48);
  int v39 = (char *)a1 + v38;
  uint64_t v40 = (char *)a2 + v38;
  uint64_t v41 = type metadata accessor for UnknownStorage();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v41 - 8) + 24))(v39, v40, v41);
  return a1;
}

_OWORD *sub_100C1AD94(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  long long v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  long long v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  long long v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  long long v7 = a2[7];
  uint64_t v8 = *(int *)(a3 + 48);
  unint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  a1[6] = a2[6];
  a1[7] = v7;
  uint64_t v11 = type metadata accessor for UnknownStorage();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
  return a1;
}

uint64_t *sub_100C1AE28(uint64_t *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6 = *a1;
  unint64_t v7 = a1[1];
  *(_OWORD *)a1 = *a2;
  sub_100510084(v6, v7);
  uint64_t v8 = a1[2];
  unint64_t v9 = a1[3];
  *((_OWORD *)a1 + 1) = a2[1];
  sub_100510084(v8, v9);
  uint64_t v10 = a1[4];
  unint64_t v11 = a1[5];
  *((_OWORD *)a1 + 2) = a2[2];
  sub_100510084(v10, v11);
  uint64_t v12 = a1[6];
  unint64_t v13 = a1[7];
  *((_OWORD *)a1 + 3) = a2[3];
  sub_100510084(v12, v13);
  uint64_t v14 = a1[8];
  unint64_t v15 = a1[9];
  *((_OWORD *)a1 + 4) = a2[4];
  sub_100510084(v14, v15);
  uint64_t v16 = a1[10];
  unint64_t v17 = a1[11];
  *((_OWORD *)a1 + 5) = a2[5];
  sub_100510084(v16, v17);
  uint64_t v18 = a1[12];
  unint64_t v19 = a1[13];
  *((_OWORD *)a1 + 6) = a2[6];
  sub_100510084(v18, v19);
  uint64_t v20 = a1[14];
  unint64_t v21 = a1[15];
  *((_OWORD *)a1 + 7) = a2[7];
  sub_100510084(v20, v21);
  uint64_t v22 = *(int *)(a3 + 48);
  unint64_t v23 = (char *)a1 + v22;
  uint64_t v24 = (char *)a2 + v22;
  uint64_t v25 = type metadata accessor for UnknownStorage();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 40))(v23, v24, v25);
  return a1;
}

uint64_t sub_100C1AF28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100C1AF3C);
}

uint64_t sub_100C1AF3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 12)
  {
    uint64_t v4 = *(void *)(a1 + 8) >> 60;
    if (((4 * v4) & 0xC) != 0) {
      return 16 - ((4 * v4) & 0xC | (v4 >> 2));
    }
    else {
      return 0;
    }
  }
  else
  {
    uint64_t v8 = type metadata accessor for UnknownStorage();
    unint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 48);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_100C1AFF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100C1B00C);
}

void *sub_100C1B00C(void *result, uint64_t a2, int a3, uint64_t a4)
{
  long long v5 = result;
  if (a3 == 12)
  {
    *uint64_t result = 0;
    result[1] = (unint64_t)(((-(int)a2 >> 2) & 3) - 4 * a2) << 60;
  }
  else
  {
    uint64_t v7 = type metadata accessor for UnknownStorage();
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 48);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_100C1B0BC()
{
  return sub_100C21864();
}

void *sub_100C1B0D0(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = (void *)a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v18 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(void *)a1 = *a2;
    *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
    uint64_t v7 = a3[5];
    uint64_t v8 = a1 + v7;
    uint64_t v9 = (uint64_t)a2 + v7;
    uint64_t v10 = type metadata accessor for UnknownStorage();
    uint64_t v11 = *(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 16);
    uint64_t v46 = v10;
    v11(v8, v9);
    uint64_t v12 = a3[6];
    unint64_t v13 = (void *)((char *)v4 + v12);
    uint64_t v14 = (uint64_t *)((char *)a2 + v12);
    uint64_t v15 = type metadata accessor for CRLProto_Data(0);
    uint64_t v16 = *(void *)(v15 - 8);
    uint64_t v47 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v16 + 48);
    if (v47(v14, 1, v15))
    {
      uint64_t v17 = sub_1005057FC((uint64_t *)&unk_101674160);
      memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
    }
    else
    {
      uint64_t v43 = *v14;
      int v44 = v11;
      unint64_t v19 = v14[1];
      sub_100510D4C(*v14, v19);
      *unint64_t v13 = v43;
      v13[1] = v19;
      uint64_t v11 = v44;
      ((void (*)(char *, char *, uint64_t))v44)((char *)v13 + *(int *)(v15 + 20), (char *)v14 + *(int *)(v15 + 20), v46);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
    }
    uint64_t v20 = a3[7];
    unint64_t v21 = (void *)((char *)v4 + v20);
    uint64_t v22 = (uint64_t *)((char *)a2 + v20);
    unint64_t v23 = (unsigned int (*)(char *, uint64_t, uint64_t))v47;
    if (v47((uint64_t *)((char *)a2 + v20), 1, v15))
    {
      uint64_t v24 = sub_1005057FC((uint64_t *)&unk_101674160);
      memcpy(v21, v22, *(void *)(*(void *)(v24 - 8) + 64));
    }
    else
    {
      uint64_t v45 = v11;
      uint64_t v25 = *v22;
      unint64_t v26 = v22[1];
      sub_100510D4C(*v22, v26);
      *unint64_t v21 = v25;
      v21[1] = v26;
      unint64_t v23 = (unsigned int (*)(char *, uint64_t, uint64_t))v47;
      uint64_t v11 = v45;
      ((void (*)(char *, char *, uint64_t))v45)((char *)v21 + *(int *)(v15 + 20), (char *)v22 + *(int *)(v15 + 20), v46);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v16 + 56))(v21, 0, 1, v15);
    }
    uint64_t v27 = a3[8];
    uint64_t v28 = (void *)((char *)v4 + v27);
    unint64_t v29 = (uint64_t *)((char *)a2 + v27);
    if (v23((char *)a2 + v27, 1, v15))
    {
      uint64_t v30 = sub_1005057FC((uint64_t *)&unk_101674160);
      memcpy(v28, v29, *(void *)(*(void *)(v30 - 8) + 64));
    }
    else
    {
      uint64_t v31 = v16;
      uint64_t v32 = (void (*)(char *, char *, uint64_t))v11;
      uint64_t v33 = *v29;
      unint64_t v34 = v29[1];
      sub_100510D4C(*v29, v34);
      void *v28 = v33;
      v28[1] = v34;
      v32((char *)v28 + *(int *)(v15 + 20), (char *)v29 + *(int *)(v15 + 20), v46);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v31 + 56))(v28, 0, 1, v15);
    }
    uint64_t v35 = a3[9];
    uint64_t v36 = a3[10];
    unint64_t v37 = (char *)v4 + v35;
    uint64_t v38 = (uint64_t)a2 + v35;
    *(_DWORD *)unint64_t v37 = *(_DWORD *)v38;
    v37[4] = *(unsigned char *)(v38 + 4);
    *((unsigned char *)v4 + v36) = *((unsigned char *)a2 + v36);
    uint64_t v39 = a3[11];
    uint64_t v40 = (char *)v4 + v39;
    uint64_t v41 = (uint64_t)a2 + v39;
    *(_DWORD *)uint64_t v40 = *(_DWORD *)v41;
    v40[4] = *(unsigned char *)(v41 + 4);
  }
  return v4;
}

uint64_t sub_100C1B478(uint64_t a1, int *a2)
{
  uint64_t v4 = a1 + a2[5];
  uint64_t v5 = type metadata accessor for UnknownStorage();
  unint64_t v13 = *(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  v13(v4, v5);
  uint64_t v6 = a1 + a2[6];
  uint64_t v7 = type metadata accessor for CRLProto_Data(0);
  uint64_t v8 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48);
  if (!v8(v6, 1, v7))
  {
    sub_100510084(*(void *)v6, *(void *)(v6 + 8));
    v13(v6 + *(int *)(v7 + 20), v5);
  }
  uint64_t v9 = a1 + a2[7];
  if (!v8(v9, 1, v7))
  {
    sub_100510084(*(void *)v9, *(void *)(v9 + 8));
    v13(v9 + *(int *)(v7 + 20), v5);
  }
  uint64_t v10 = a1 + a2[8];
  uint64_t result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v8)(v10, 1, v7);
  if (!result)
  {
    sub_100510084(*(void *)v10, *(void *)(v10 + 8));
    uint64_t v12 = v10 + *(int *)(v7 + 20);
    return ((uint64_t (*)(uint64_t, uint64_t))v13)(v12, v5);
  }
  return result;
}

uint64_t sub_100C1B62C(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v6 = a3[5];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = type metadata accessor for UnknownStorage();
  uint64_t v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16);
  v10(v7, v8, v9);
  uint64_t v48 = a3;
  uint64_t v11 = a3[6];
  uint64_t v12 = (void *)(a1 + v11);
  unint64_t v13 = (uint64_t *)(a2 + v11);
  uint64_t v14 = type metadata accessor for CRLProto_Data(0);
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v49 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v15 + 48);
  if (v49(v13, 1, v14))
  {
    uint64_t v16 = sub_1005057FC((uint64_t *)&unk_101674160);
    memcpy(v12, v13, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    int v44 = v10;
    uint64_t v46 = v9;
    uint64_t v17 = *v13;
    unint64_t v18 = v13[1];
    sub_100510D4C(*v13, v18);
    *uint64_t v12 = v17;
    v12[1] = v18;
    uint64_t v10 = v44;
    uint64_t v9 = v46;
    v44((uint64_t)v12 + *(int *)(v14 + 20), (uint64_t)v13 + *(int *)(v14 + 20), v46);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  }
  unint64_t v19 = a3;
  uint64_t v20 = a3[7];
  unint64_t v21 = (void *)(a1 + v20);
  uint64_t v22 = (uint64_t *)(a2 + v20);
  if (v49((uint64_t *)(a2 + v20), 1, v14))
  {
    uint64_t v23 = sub_1005057FC((uint64_t *)&unk_101674160);
    memcpy(v21, v22, *(void *)(*(void *)(v23 - 8) + 64));
  }
  else
  {
    uint64_t v45 = v10;
    uint64_t v47 = v9;
    uint64_t v24 = *v22;
    unint64_t v25 = v22[1];
    sub_100510D4C(*v22, v25);
    *unint64_t v21 = v24;
    v21[1] = v25;
    uint64_t v10 = v45;
    uint64_t v9 = v47;
    v45((uint64_t)v21 + *(int *)(v14 + 20), (uint64_t)v22 + *(int *)(v14 + 20), v47);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v15 + 56))(v21, 0, 1, v14);
  }
  uint64_t v26 = a3[8];
  uint64_t v27 = (void *)(a1 + v26);
  uint64_t v28 = (uint64_t *)(a2 + v26);
  if (v49((uint64_t *)(a2 + v26), 1, v14))
  {
    uint64_t v29 = sub_1005057FC((uint64_t *)&unk_101674160);
    memcpy(v27, v28, *(void *)(*(void *)(v29 - 8) + 64));
  }
  else
  {
    uint64_t v30 = v15;
    uint64_t v31 = v9;
    uint64_t v32 = (void (*)(char *, char *, uint64_t))v10;
    uint64_t v33 = *v28;
    unint64_t v34 = v28[1];
    sub_100510D4C(*v28, v34);
    *uint64_t v27 = v33;
    v27[1] = v34;
    uint64_t v35 = v31;
    unint64_t v19 = v48;
    v32((char *)v27 + *(int *)(v14 + 20), (char *)v28 + *(int *)(v14 + 20), v35);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v30 + 56))(v27, 0, 1, v14);
  }
  uint64_t v36 = v19[9];
  uint64_t v37 = v19[10];
  uint64_t v38 = a1 + v36;
  uint64_t v39 = a2 + v36;
  *(_DWORD *)uint64_t v38 = *(_DWORD *)v39;
  *(unsigned char *)(v38 + 4) = *(unsigned char *)(v39 + 4);
  *(unsigned char *)(a1 + v37) = *(unsigned char *)(a2 + v37);
  uint64_t v40 = v19[11];
  uint64_t v41 = a1 + v40;
  uint64_t v42 = a2 + v40;
  *(_DWORD *)uint64_t v41 = *(_DWORD *)v42;
  *(unsigned char *)(v41 + 4) = *(unsigned char *)(v42 + 4);
  return a1;
}

uint64_t sub_100C1B998(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v6 = *a2;
  *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
  *(void *)a1 = v6;
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = (uint64_t)a2 + v7;
  uint64_t v10 = type metadata accessor for UnknownStorage();
  uint64_t v60 = *(void *)(v10 - 8);
  uint64_t v61 = v10;
  uint64_t v58 = *(void (**)(char *, char *, uint64_t))(v60 + 24);
  ((void (*)(uint64_t, uint64_t))v58)(v8, v9);
  uint64_t v11 = a3[6];
  uint64_t v12 = (uint64_t *)(a1 + v11);
  unint64_t v13 = (uint64_t *)((char *)a2 + v11);
  uint64_t v14 = type metadata accessor for CRLProto_Data(0);
  uint64_t v59 = *(void *)(v14 - 8);
  uint64_t v15 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v59 + 48);
  int v16 = v15(v12, 1, v14);
  int v17 = v15(v13, 1, v14);
  if (v16)
  {
    if (!v17)
    {
      uint64_t v18 = *v13;
      unint64_t v19 = v13[1];
      sub_100510D4C(*v13, v19);
      *uint64_t v12 = v18;
      v12[1] = v19;
      (*(void (**)(char *, char *, uint64_t))(v60 + 16))((char *)v12 + *(int *)(v14 + 20), (char *)v13 + *(int *)(v14 + 20), v61);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v59 + 56))(v12, 0, 1, v14);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v17)
  {
    sub_100C16A08((uint64_t)v12, type metadata accessor for CRLProto_Data);
LABEL_6:
    uint64_t v20 = sub_1005057FC((uint64_t *)&unk_101674160);
    memcpy(v12, v13, *(void *)(*(void *)(v20 - 8) + 64));
    goto LABEL_7;
  }
  uint64_t v46 = *v13;
  unint64_t v47 = v13[1];
  sub_100510D4C(*v13, v47);
  uint64_t v48 = *v12;
  unint64_t v49 = v12[1];
  *uint64_t v12 = v46;
  v12[1] = v47;
  sub_100510084(v48, v49);
  v58((char *)v12 + *(int *)(v14 + 20), (char *)v13 + *(int *)(v14 + 20), v61);
LABEL_7:
  uint64_t v21 = a3[7];
  uint64_t v22 = (uint64_t *)(a1 + v21);
  uint64_t v23 = (uint64_t *)((char *)a2 + v21);
  int v24 = v15((uint64_t *)(a1 + v21), 1, v14);
  int v25 = v15(v23, 1, v14);
  if (v24)
  {
    if (!v25)
    {
      uint64_t v26 = *v23;
      unint64_t v27 = v23[1];
      sub_100510D4C(*v23, v27);
      *uint64_t v22 = v26;
      v22[1] = v27;
      (*(void (**)(char *, char *, uint64_t))(v60 + 16))((char *)v22 + *(int *)(v14 + 20), (char *)v23 + *(int *)(v14 + 20), v61);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v59 + 56))(v22, 0, 1, v14);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v25)
  {
    sub_100C16A08((uint64_t)v22, type metadata accessor for CRLProto_Data);
LABEL_12:
    uint64_t v28 = sub_1005057FC((uint64_t *)&unk_101674160);
    memcpy(v22, v23, *(void *)(*(void *)(v28 - 8) + 64));
    goto LABEL_13;
  }
  uint64_t v50 = *v23;
  unint64_t v51 = v23[1];
  sub_100510D4C(*v23, v51);
  uint64_t v52 = *v22;
  unint64_t v53 = v22[1];
  *uint64_t v22 = v50;
  v22[1] = v51;
  sub_100510084(v52, v53);
  v58((char *)v22 + *(int *)(v14 + 20), (char *)v23 + *(int *)(v14 + 20), v61);
LABEL_13:
  uint64_t v29 = a3[8];
  uint64_t v30 = (uint64_t *)(a1 + v29);
  uint64_t v31 = (uint64_t *)((char *)a2 + v29);
  int v32 = v15((uint64_t *)(a1 + v29), 1, v14);
  int v33 = v15(v31, 1, v14);
  if (!v32)
  {
    if (!v33)
    {
      uint64_t v54 = *v31;
      unint64_t v55 = v31[1];
      sub_100510D4C(*v31, v55);
      uint64_t v56 = *v30;
      unint64_t v57 = v30[1];
      *uint64_t v30 = v54;
      v30[1] = v55;
      sub_100510084(v56, v57);
      v58((char *)v30 + *(int *)(v14 + 20), (char *)v31 + *(int *)(v14 + 20), v61);
      goto LABEL_19;
    }
    sub_100C16A08((uint64_t)v30, type metadata accessor for CRLProto_Data);
    goto LABEL_18;
  }
  if (v33)
  {
LABEL_18:
    uint64_t v36 = sub_1005057FC((uint64_t *)&unk_101674160);
    memcpy(v30, v31, *(void *)(*(void *)(v36 - 8) + 64));
    goto LABEL_19;
  }
  uint64_t v34 = *v31;
  unint64_t v35 = v31[1];
  sub_100510D4C(*v31, v35);
  *uint64_t v30 = v34;
  v30[1] = v35;
  (*(void (**)(char *, char *, uint64_t))(v60 + 16))((char *)v30 + *(int *)(v14 + 20), (char *)v31 + *(int *)(v14 + 20), v61);
  (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v59 + 56))(v30, 0, 1, v14);
LABEL_19:
  uint64_t v37 = a3[9];
  uint64_t v38 = a1 + v37;
  uint64_t v39 = (int *)((char *)a2 + v37);
  int v40 = *v39;
  *(unsigned char *)(v38 + 4) = *((unsigned char *)v39 + 4);
  *(_DWORD *)uint64_t v38 = v40;
  *(unsigned char *)(a1 + a3[10]) = *((unsigned char *)a2 + a3[10]);
  uint64_t v41 = a3[11];
  uint64_t v42 = a1 + v41;
  uint64_t v43 = (int *)((char *)a2 + v41);
  int v44 = *v43;
  *(unsigned char *)(v42 + 4) = *((unsigned char *)v43 + 4);
  *(_DWORD *)uint64_t v42 = v44;
  return a1;
}

uint64_t sub_100C1BE74(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)(a1 + v6);
  uint64_t v8 = (char *)(a2 + v6);
  uint64_t v9 = type metadata accessor for UnknownStorage();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32);
  v10(v7, v8, v9);
  uint64_t v11 = a3[6];
  uint64_t v12 = (_OWORD *)(a1 + v11);
  unint64_t v13 = (_OWORD *)(a2 + v11);
  uint64_t v14 = type metadata accessor for CRLProto_Data(0);
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v36 = *(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v15 + 48);
  unint64_t v35 = v10;
  if (v36(v13, 1, v14))
  {
    uint64_t v16 = sub_1005057FC((uint64_t *)&unk_101674160);
    memcpy(v12, v13, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    *uint64_t v12 = *v13;
    v10((char *)v12 + *(int *)(v14 + 20), (char *)v13 + *(int *)(v14 + 20), v9);
    (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  }
  uint64_t v17 = a3[7];
  uint64_t v18 = (_OWORD *)(a1 + v17);
  unint64_t v19 = (_OWORD *)(a2 + v17);
  if (v36((_OWORD *)(a2 + v17), 1, v14))
  {
    uint64_t v20 = sub_1005057FC((uint64_t *)&unk_101674160);
    memcpy(v18, v19, *(void *)(*(void *)(v20 - 8) + 64));
    uint64_t v22 = v15;
    uint64_t v21 = v9;
  }
  else
  {
    *uint64_t v18 = *v19;
    uint64_t v21 = v9;
    v35((char *)v18 + *(int *)(v14 + 20), (char *)v19 + *(int *)(v14 + 20), v9);
    uint64_t v22 = v15;
    (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v15 + 56))(v18, 0, 1, v14);
  }
  uint64_t v23 = a3[8];
  int v24 = (_OWORD *)(a1 + v23);
  int v25 = (_OWORD *)(a2 + v23);
  if (v36((_OWORD *)(a2 + v23), 1, v14))
  {
    uint64_t v26 = sub_1005057FC((uint64_t *)&unk_101674160);
    memcpy(v24, v25, *(void *)(*(void *)(v26 - 8) + 64));
  }
  else
  {
    *int v24 = *v25;
    v35((char *)v24 + *(int *)(v14 + 20), (char *)v25 + *(int *)(v14 + 20), v21);
    (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v22 + 56))(v24, 0, 1, v14);
  }
  uint64_t v27 = a3[9];
  uint64_t v28 = a3[10];
  uint64_t v29 = a1 + v27;
  uint64_t v30 = a2 + v27;
  *(_DWORD *)uint64_t v29 = *(_DWORD *)v30;
  *(unsigned char *)(v29 + 4) = *(unsigned char *)(v30 + 4);
  *(unsigned char *)(a1 + v28) = *(unsigned char *)(a2 + v28);
  uint64_t v31 = a3[11];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  *(_DWORD *)uint64_t v32 = *(_DWORD *)v33;
  *(unsigned char *)(v32 + 4) = *(unsigned char *)(v33 + 4);
  return a1;
}

uint64_t sub_100C1C1B0(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v6 = a3[5];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = type metadata accessor for UnknownStorage();
  uint64_t v46 = *(void *)(v9 - 8);
  uint64_t v47 = v9;
  int v44 = *(void (**)(uint64_t, uint64_t))(v46 + 40);
  v44(v7, v8);
  uint64_t v10 = a3[6];
  uint64_t v11 = (char *)(a1 + v10);
  uint64_t v12 = (char *)(a2 + v10);
  uint64_t v13 = type metadata accessor for CRLProto_Data(0);
  uint64_t v45 = *(void *)(v13 - 8);
  uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v45 + 48);
  int v15 = v14(v11, 1, v13);
  int v16 = v14(v12, 1, v13);
  if (v15)
  {
    if (!v16)
    {
      *(_OWORD *)uint64_t v11 = *(_OWORD *)v12;
      (*(void (**)(char *, char *, uint64_t))(v46 + 32))(&v11[*(int *)(v13 + 20)], &v12[*(int *)(v13 + 20)], v47);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v45 + 56))(v11, 0, 1, v13);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v16)
  {
    sub_100C16A08((uint64_t)v11, type metadata accessor for CRLProto_Data);
LABEL_6:
    uint64_t v17 = sub_1005057FC((uint64_t *)&unk_101674160);
    memcpy(v11, v12, *(void *)(*(void *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  uint64_t v38 = *(void *)v11;
  unint64_t v39 = *((void *)v11 + 1);
  *(_OWORD *)uint64_t v11 = *(_OWORD *)v12;
  sub_100510084(v38, v39);
  ((void (*)(char *, char *, uint64_t))v44)(&v11[*(int *)(v13 + 20)], &v12[*(int *)(v13 + 20)], v47);
LABEL_7:
  uint64_t v18 = a3[7];
  unint64_t v19 = (char *)(a1 + v18);
  uint64_t v20 = (char *)(a2 + v18);
  int v21 = v14((char *)(a1 + v18), 1, v13);
  int v22 = v14(v20, 1, v13);
  if (v21)
  {
    if (!v22)
    {
      *(_OWORD *)unint64_t v19 = *(_OWORD *)v20;
      (*(void (**)(char *, char *, uint64_t))(v46 + 32))(&v19[*(int *)(v13 + 20)], &v20[*(int *)(v13 + 20)], v47);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v45 + 56))(v19, 0, 1, v13);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v22)
  {
    sub_100C16A08((uint64_t)v19, type metadata accessor for CRLProto_Data);
LABEL_12:
    uint64_t v23 = sub_1005057FC((uint64_t *)&unk_101674160);
    memcpy(v19, v20, *(void *)(*(void *)(v23 - 8) + 64));
    goto LABEL_13;
  }
  uint64_t v40 = *(void *)v19;
  unint64_t v41 = *((void *)v19 + 1);
  *(_OWORD *)unint64_t v19 = *(_OWORD *)v20;
  sub_100510084(v40, v41);
  ((void (*)(char *, char *, uint64_t))v44)(&v19[*(int *)(v13 + 20)], &v20[*(int *)(v13 + 20)], v47);
LABEL_13:
  uint64_t v24 = a3[8];
  int v25 = (uint64_t *)(a1 + v24);
  uint64_t v26 = (char *)(a2 + v24);
  int v27 = v14((char *)(a1 + v24), 1, v13);
  int v28 = v14(v26, 1, v13);
  if (!v27)
  {
    if (!v28)
    {
      uint64_t v42 = *v25;
      unint64_t v43 = v25[1];
      *(_OWORD *)int v25 = *(_OWORD *)v26;
      sub_100510084(v42, v43);
      ((void (*)(char *, char *, uint64_t))v44)((char *)v25 + *(int *)(v13 + 20), &v26[*(int *)(v13 + 20)], v47);
      goto LABEL_19;
    }
    sub_100C16A08((uint64_t)v25, type metadata accessor for CRLProto_Data);
    goto LABEL_18;
  }
  if (v28)
  {
LABEL_18:
    uint64_t v29 = sub_1005057FC((uint64_t *)&unk_101674160);
    memcpy(v25, v26, *(void *)(*(void *)(v29 - 8) + 64));
    goto LABEL_19;
  }
  *(_OWORD *)int v25 = *(_OWORD *)v26;
  (*(void (**)(char *, char *, uint64_t))(v46 + 32))((char *)v25 + *(int *)(v13 + 20), &v26[*(int *)(v13 + 20)], v47);
  (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v45 + 56))(v25, 0, 1, v13);
LABEL_19:
  uint64_t v30 = a3[9];
  uint64_t v31 = a3[10];
  uint64_t v32 = a1 + v30;
  uint64_t v33 = a2 + v30;
  *(_DWORD *)uint64_t v32 = *(_DWORD *)v33;
  *(unsigned char *)(v32 + 4) = *(unsigned char *)(v33 + 4);
  *(unsigned char *)(a1 + v31) = *(unsigned char *)(a2 + v31);
  uint64_t v34 = a3[11];
  uint64_t v35 = a1 + v34;
  uint64_t v36 = a2 + v34;
  *(_DWORD *)uint64_t v35 = *(_DWORD *)v36;
  *(unsigned char *)(v35 + 4) = *(unsigned char *)(v36 + 4);
  return a1;
}

uint64_t sub_100C1C640(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100C1C654);
}

uint64_t sub_100C1C654(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage();
  if (*(_DWORD *)(*(void *)(v6 - 8) + 84) == a2)
  {
    uint64_t v7 = v6;
    uint64_t v8 = *(void *)(v6 - 8);
    uint64_t v9 = a3[5];
LABEL_5:
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
    return v11(a1 + v9, a2, v7);
  }
  uint64_t v10 = sub_1005057FC((uint64_t *)&unk_101674160);
  if (*(_DWORD *)(*(void *)(v10 - 8) + 84) == a2)
  {
    uint64_t v7 = v10;
    uint64_t v8 = *(void *)(v10 - 8);
    uint64_t v9 = a3[6];
    goto LABEL_5;
  }
  unsigned int v13 = *(unsigned __int8 *)(a1 + a3[10]);
  if (v13 >= 2) {
    int v14 = ((v13 + 2147483646) & 0x7FFFFFFF) - 1;
  }
  else {
    int v14 = -2;
  }
  if (v14 < 0) {
    int v14 = -1;
  }
  return (v14 + 1);
}

uint64_t sub_100C1C784(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100C1C798);
}

uint64_t sub_100C1C798(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8 = type metadata accessor for UnknownStorage();
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a3)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a4[5];
  }
  else
  {
    uint64_t result = sub_1005057FC((uint64_t *)&unk_101674160);
    if (*(_DWORD *)(*(void *)(result - 8) + 84) != a3)
    {
      *(unsigned char *)(a1 + a4[10]) = a2 + 2;
      return result;
    }
    uint64_t v9 = result;
    uint64_t v10 = *(void *)(result - 8);
    uint64_t v11 = a4[6];
  }
  unsigned int v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);

  return v13(a1 + v11, a2, a2, v9);
}

void sub_100C1C8A8()
{
  type metadata accessor for UnknownStorage();
  if (v0 <= 0x3F)
  {
    sub_100C1A890(319, (unint64_t *)&unk_101697808, (void (*)(uint64_t))type metadata accessor for CRLProto_Data);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

ValueMetadata *type metadata accessor for CRLProto_TextSelection.TypeEnum()
{
  return &type metadata for CRLProto_TextSelection.TypeEnum;
}

uint64_t sub_100C1C9C0(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = *a2;
  *(void *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v7 = v4 + ((v3 + 16) & ~(unint64_t)v3);
    swift_retain();
  }
  else
  {
    uint64_t v7 = a1;
    *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
    uint64_t v8 = *(int *)(a3 + 24);
    uint64_t v9 = (char *)(a1 + v8);
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = type metadata accessor for UnknownStorage();
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    uint64_t v13 = *(int *)(a3 + 28);
    int v14 = (unsigned char *)(v7 + v13);
    int v15 = (char *)a2 + v13;
    int v16 = (int *)type metadata accessor for CRLProto_TextSelection(0);
    uint64_t v17 = *((void *)v16 - 1);
    if ((*(unsigned int (**)(unsigned char *, uint64_t, int *))(v17 + 48))(v15, 1, v16))
    {
      uint64_t v18 = sub_1005057FC(&qword_101677FD8);
      memcpy(v14, v15, *(void *)(*(void *)(v18 - 8) + 64));
    }
    else
    {
      uint64_t v45 = v17;
      *(void *)int v14 = *(void *)v15;
      v14[8] = v15[8];
      v12(&v14[v16[5]], &v15[v16[5]], v11);
      uint64_t v19 = v16[6];
      __dst = &v14[v19];
      uint64_t v20 = (uint64_t *)&v15[v19];
      uint64_t v21 = type metadata accessor for CRLProto_Data(0);
      uint64_t v48 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v21 - 8) + 48);
      uint64_t v47 = v12;
      uint64_t v46 = *(void *)(v21 - 8);
      if (v48(v20, 1, v21))
      {
        uint64_t v22 = sub_1005057FC((uint64_t *)&unk_101674160);
        memcpy(__dst, v20, *(void *)(*(void *)(v22 - 8) + 64));
      }
      else
      {
        unint64_t v23 = v20[1];
        uint64_t v42 = *v20;
        sub_100510D4C(*v20, v23);
        void *__dst = v42;
        __dst[1] = v23;
        v47((char *)__dst + *(int *)(v21 + 20), (char *)v20 + *(int *)(v21 + 20), v11);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v46 + 56))(__dst, 0, 1, v21);
      }
      uint64_t v24 = v16[7];
      int v25 = &v14[v24];
      uint64_t v26 = (void **)&v15[v24];
      if (v48((uint64_t *)&v15[v24], 1, v21))
      {
        uint64_t v27 = sub_1005057FC((uint64_t *)&unk_101674160);
        memcpy(v25, v26, *(void *)(*(void *)(v27 - 8) + 64));
      }
      else
      {
        unint64_t v28 = (unint64_t)v26[1];
        __dsta = *v26;
        sub_100510D4C((uint64_t)*v26, v28);
        *int v25 = __dsta;
        v25[1] = v28;
        v47((char *)v25 + *(int *)(v21 + 20), (char *)v26 + *(int *)(v21 + 20), v11);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v46 + 56))(v25, 0, 1, v21);
      }
      uint64_t v29 = v16[8];
      uint64_t v30 = &v14[v29];
      uint64_t v31 = (uint64_t *)&v15[v29];
      if (v48((uint64_t *)&v15[v29], 1, v21))
      {
        uint64_t v32 = sub_1005057FC((uint64_t *)&unk_101674160);
        memcpy(v30, v31, *(void *)(*(void *)(v32 - 8) + 64));
      }
      else
      {
        uint64_t v33 = *v31;
        unint64_t v34 = v31[1];
        sub_100510D4C(*v31, v34);
        *uint64_t v30 = v33;
        v30[1] = v34;
        v47((char *)v30 + *(int *)(v21 + 20), (char *)v31 + *(int *)(v21 + 20), v11);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v46 + 56))(v30, 0, 1, v21);
      }
      uint64_t v35 = v16[9];
      uint64_t v36 = &v14[v35];
      uint64_t v37 = &v15[v35];
      *(_DWORD *)uint64_t v36 = *(_DWORD *)v37;
      v36[4] = v37[4];
      v14[v16[10]] = v15[v16[10]];
      uint64_t v38 = v16[11];
      unint64_t v39 = &v14[v38];
      uint64_t v40 = &v15[v38];
      v39[4] = v40[4];
      *(_DWORD *)unint64_t v39 = *(_DWORD *)v40;
      (*(void (**)(unsigned char *, void, uint64_t, int *))(v45 + 56))(v14, 0, 1, v16);
    }
  }
  return v7;
}

uint64_t sub_100C1CE68(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = type metadata accessor for UnknownStorage();
  int v15 = *(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  v15(v4, v5);
  uint64_t v6 = a1 + *(int *)(a2 + 28);
  uint64_t v7 = (int *)type metadata accessor for CRLProto_TextSelection(0);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, int *))(*((void *)v7 - 1) + 48))(v6, 1, v7);
  if (!result)
  {
    v15(v6 + v7[5], v5);
    uint64_t v9 = v6 + v7[6];
    uint64_t v10 = type metadata accessor for CRLProto_Data(0);
    uint64_t v11 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    if (!v11(v9, 1, v10))
    {
      sub_100510084(*(void *)v9, *(void *)(v9 + 8));
      v15(v9 + *(int *)(v10 + 20), v5);
    }
    uint64_t v12 = v6 + v7[7];
    if (!v11(v12, 1, v10))
    {
      sub_100510084(*(void *)v12, *(void *)(v12 + 8));
      v15(v12 + *(int *)(v10 + 20), v5);
    }
    uint64_t v13 = v6 + v7[8];
    uint64_t result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v11)(v13, 1, v10);
    if (!result)
    {
      sub_100510084(*(void *)v13, *(void *)(v13 + 8));
      uint64_t v14 = v13 + *(int *)(v10 + 20);
      return ((uint64_t (*)(uint64_t, uint64_t))v15)(v14, v5);
    }
  }
  return result;
}

uint64_t sub_100C1D08C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (char *)(a1 + v6);
  uint64_t v8 = (char *)(a2 + v6);
  uint64_t v9 = type metadata accessor for UnknownStorage();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
  swift_bridgeObjectRetain();
  v10(v7, v8, v9);
  uint64_t v11 = *(int *)(a3 + 28);
  uint64_t v12 = (unsigned char *)(a1 + v11);
  uint64_t v13 = (unsigned char *)(a2 + v11);
  uint64_t v14 = (int *)type metadata accessor for CRLProto_TextSelection(0);
  uint64_t v15 = *((void *)v14 - 1);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, int *))(v15 + 48))(v13, 1, v14))
  {
    uint64_t v16 = sub_1005057FC(&qword_101677FD8);
    memcpy(v12, v13, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    uint64_t v43 = v15;
    *(void *)uint64_t v12 = *(void *)v13;
    v12[8] = v13[8];
    v10(&v12[v14[5]], &v13[v14[5]], v9);
    uint64_t v17 = v14[6];
    __dst = &v12[v17];
    uint64_t v18 = (uint64_t *)&v13[v17];
    uint64_t v19 = type metadata accessor for CRLProto_Data(0);
    uint64_t v46 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v19 - 8) + 48);
    uint64_t v45 = v10;
    uint64_t v44 = *(void *)(v19 - 8);
    if (v46(v18, 1, v19))
    {
      uint64_t v20 = sub_1005057FC((uint64_t *)&unk_101674160);
      memcpy(__dst, v18, *(void *)(*(void *)(v20 - 8) + 64));
    }
    else
    {
      unint64_t v21 = v18[1];
      uint64_t v40 = *v18;
      sub_100510D4C(*v18, v21);
      void *__dst = v40;
      __dst[1] = v21;
      v45((char *)__dst + *(int *)(v19 + 20), (char *)v18 + *(int *)(v19 + 20), v9);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v44 + 56))(__dst, 0, 1, v19);
    }
    uint64_t v22 = v14[7];
    unint64_t v23 = &v12[v22];
    uint64_t v24 = (void **)&v13[v22];
    if (v46((uint64_t *)&v13[v22], 1, v19))
    {
      uint64_t v25 = sub_1005057FC((uint64_t *)&unk_101674160);
      memcpy(v23, v24, *(void *)(*(void *)(v25 - 8) + 64));
    }
    else
    {
      unint64_t v26 = (unint64_t)v24[1];
      __dsta = *v24;
      sub_100510D4C((uint64_t)*v24, v26);
      *unint64_t v23 = __dsta;
      v23[1] = v26;
      v45((char *)v23 + *(int *)(v19 + 20), (char *)v24 + *(int *)(v19 + 20), v9);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v44 + 56))(v23, 0, 1, v19);
    }
    uint64_t v27 = v14[8];
    unint64_t v28 = &v12[v27];
    uint64_t v29 = (uint64_t *)&v13[v27];
    if (v46((uint64_t *)&v13[v27], 1, v19))
    {
      uint64_t v30 = sub_1005057FC((uint64_t *)&unk_101674160);
      memcpy(v28, v29, *(void *)(*(void *)(v30 - 8) + 64));
    }
    else
    {
      uint64_t v31 = *v29;
      unint64_t v32 = v29[1];
      sub_100510D4C(*v29, v32);
      void *v28 = v31;
      v28[1] = v32;
      v45((char *)v28 + *(int *)(v19 + 20), (char *)v29 + *(int *)(v19 + 20), v9);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v44 + 56))(v28, 0, 1, v19);
    }
    uint64_t v33 = v14[9];
    unint64_t v34 = &v12[v33];
    uint64_t v35 = &v13[v33];
    *(_DWORD *)unint64_t v34 = *(_DWORD *)v35;
    v34[4] = v35[4];
    v12[v14[10]] = v13[v14[10]];
    uint64_t v36 = v14[11];
    uint64_t v37 = &v12[v36];
    uint64_t v38 = &v13[v36];
    v37[4] = v38[4];
    *(_DWORD *)uint64_t v37 = *(_DWORD *)v38;
    (*(void (**)(unsigned char *, void, uint64_t, int *))(v43 + 56))(v12, 0, 1, v14);
  }
  return a1;
}

uint64_t sub_100C1D4E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = type metadata accessor for UnknownStorage();
  uint64_t v117 = *(void *)(v9 - 8);
  uint64_t v118 = v9;
  uint64_t v10 = *(void (**)(uint64_t, uint64_t))(v117 + 24);
  v10(v7, v8);
  uint64_t v11 = *(int *)(a3 + 28);
  uint64_t v12 = (unsigned char *)(a1 + v11);
  uint64_t v13 = (unsigned char *)(a2 + v11);
  uint64_t v14 = (int *)type metadata accessor for CRLProto_TextSelection(0);
  uint64_t v15 = *((void *)v14 - 1);
  uint64_t v16 = *(uint64_t (**)(unsigned char *, uint64_t, int *))(v15 + 48);
  LODWORD(v8) = v16(v12, 1, v14);
  int v17 = v16(v13, 1, v14);
  if (!v8)
  {
    if (v17)
    {
      sub_100C16A08((uint64_t)v12, type metadata accessor for CRLProto_TextSelection);
      goto LABEL_7;
    }
    uint64_t v26 = *(void *)v13;
    v12[8] = v13[8];
    *(void *)uint64_t v12 = v26;
    uint64_t v107 = (void (*)(char *, char *, uint64_t))v10;
    ((void (*)(unsigned char *, unsigned char *, uint64_t))v10)(&v12[v14[5]], &v13[v14[5]], v118);
    uint64_t v27 = v14[6];
    uint64_t v28 = (uint64_t)&v12[v27];
    uint64_t v113 = v13;
    uint64_t v29 = (uint64_t *)&v13[v27];
    uint64_t v30 = type metadata accessor for CRLProto_Data(0);
    uint64_t v109 = *(void *)(v30 - 8);
    __dsta = (uint64_t *)v28;
    uint64_t v31 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v109 + 48);
    int v32 = v31(v28, 1, v30);
    uint64_t v116 = v30;
    uint64_t v33 = v30;
    unint64_t v34 = v31;
    int v35 = v31((uint64_t)v29, 1, v33);
    if (v32)
    {
      if (v35)
      {
        size_t v36 = *(void *)(*(void *)(sub_1005057FC((uint64_t *)&unk_101674160) - 8) + 64);
        uint64_t v37 = (void *)v28;
LABEL_21:
        memcpy(v37, v29, v36);
        uint64_t v61 = v116;
        goto LABEL_24;
      }
      uint64_t v63 = *v29;
      unint64_t v62 = v29[1];
      sub_100510D4C(*v29, v62);
      uint64_t *__dsta = v63;
      __dsta[1] = v62;
      uint64_t v61 = v116;
      (*(void (**)(char *, char *, uint64_t))(v117 + 16))((char *)__dsta + *(int *)(v116 + 20), (char *)v29 + *(int *)(v116 + 20), v118);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v109 + 56))(__dsta, 0, 1, v116);
    }
    else
    {
      if (v35)
      {
        sub_100C16A08(v28, type metadata accessor for CRLProto_Data);
        size_t v36 = *(void *)(*(void *)(sub_1005057FC((uint64_t *)&unk_101674160) - 8) + 64);
        uint64_t v37 = (void *)v28;
        goto LABEL_21;
      }
      uint64_t v65 = *v29;
      unint64_t v64 = v29[1];
      sub_100510D4C(*v29, v64);
      uint64_t v66 = *__dsta;
      unint64_t v67 = __dsta[1];
      uint64_t *__dsta = v65;
      __dsta[1] = v64;
      sub_100510084(v66, v67);
      uint64_t v61 = v116;
      v107((char *)__dsta + *(int *)(v116 + 20), (char *)v29 + *(int *)(v116 + 20), v118);
    }
LABEL_24:
    uint64_t v68 = v14[7];
    uint64_t v69 = (uint64_t *)&v12[v68];
    uint64_t v70 = (uint64_t *)&v113[v68];
    int v71 = v34((uint64_t)&v12[v68], 1, v61);
    uint64_t v72 = v61;
    int v73 = v71;
    int v74 = v34((uint64_t)v70, 1, v72);
    if (v73)
    {
      if (!v74)
      {
        uint64_t v76 = *v70;
        unint64_t v75 = v70[1];
        sub_100510D4C(*v70, v75);
        *uint64_t v69 = v76;
        v69[1] = v75;
        uint64_t v77 = v116;
        (*(void (**)(char *, char *, uint64_t))(v117 + 16))((char *)v69 + *(int *)(v116 + 20), (char *)v70 + *(int *)(v116 + 20), v118);
        (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v109 + 56))(v69, 0, 1, v116);
        goto LABEL_30;
      }
    }
    else
    {
      if (!v74)
      {
        uint64_t v99 = *v70;
        unint64_t v98 = v70[1];
        sub_100510D4C(*v70, v98);
        uint64_t v100 = *v69;
        unint64_t v101 = v69[1];
        *uint64_t v69 = v99;
        v69[1] = v98;
        sub_100510084(v100, v101);
        uint64_t v77 = v116;
        v107((char *)v69 + *(int *)(v116 + 20), (char *)v70 + *(int *)(v116 + 20), v118);
LABEL_30:
        uint64_t v79 = v14[8];
        uint64_t v80 = (uint64_t *)&v12[v79];
        uint64_t v81 = (uint64_t *)&v113[v79];
        int v82 = v34((uint64_t)&v12[v79], 1, v77);
        uint64_t v83 = v77;
        int v84 = v82;
        int v85 = v34((uint64_t)v81, 1, v83);
        if (v84)
        {
          if (!v85)
          {
            uint64_t v86 = *v81;
            unint64_t v87 = v81[1];
            sub_100510D4C(*v81, v87);
            uint64_t *v80 = v86;
            v80[1] = v87;
            (*(void (**)(char *, char *, uint64_t))(v117 + 16))((char *)v80 + *(int *)(v116 + 20), (char *)v81 + *(int *)(v116 + 20), v118);
            (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v109 + 56))(v80, 0, 1, v116);
LABEL_36:
            uint64_t v89 = v14[9];
            char v90 = &v12[v89];
            uint64_t v91 = &v113[v89];
            int v92 = *(_DWORD *)v91;
            v90[4] = v91[4];
            *(_DWORD *)char v90 = v92;
            v12[v14[10]] = v113[v14[10]];
            uint64_t v93 = v14[11];
            uint64_t v94 = &v12[v93];
            uint64_t v95 = &v113[v93];
            int v96 = *(_DWORD *)v95;
            v94[4] = v95[4];
            *(_DWORD *)uint64_t v94 = v96;
            return a1;
          }
        }
        else
        {
          if (!v85)
          {
            uint64_t v103 = *v81;
            unint64_t v102 = v81[1];
            sub_100510D4C(*v81, v102);
            uint64_t v104 = *v80;
            unint64_t v105 = v80[1];
            uint64_t *v80 = v103;
            v80[1] = v102;
            sub_100510084(v104, v105);
            v107((char *)v80 + *(int *)(v116 + 20), (char *)v81 + *(int *)(v116 + 20), v118);
            goto LABEL_36;
          }
          sub_100C16A08((uint64_t)v80, type metadata accessor for CRLProto_Data);
        }
        uint64_t v88 = sub_1005057FC((uint64_t *)&unk_101674160);
        memcpy(v80, v81, *(void *)(*(void *)(v88 - 8) + 64));
        goto LABEL_36;
      }
      sub_100C16A08((uint64_t)v69, type metadata accessor for CRLProto_Data);
    }
    uint64_t v78 = sub_1005057FC((uint64_t *)&unk_101674160);
    memcpy(v69, v70, *(void *)(*(void *)(v78 - 8) + 64));
    uint64_t v77 = v116;
    goto LABEL_30;
  }
  if (v17)
  {
LABEL_7:
    uint64_t v25 = sub_1005057FC(&qword_101677FD8);
    memcpy(v12, v13, *(void *)(*(void *)(v25 - 8) + 64));
    return a1;
  }
  uint64_t v18 = *(void *)v13;
  v12[8] = v13[8];
  *(void *)uint64_t v12 = v18;
  uint64_t v19 = *(void (**)(char *, char *, uint64_t))(v117 + 16);
  v19(&v12[v14[5]], &v13[v14[5]], v118);
  uint64_t v20 = v14[6];
  __dst = &v12[v20];
  unint64_t v21 = (uint64_t *)&v13[v20];
  uint64_t v22 = type metadata accessor for CRLProto_Data(0);
  uint64_t v23 = *(void *)(v22 - 8);
  __src = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v23 + 48);
  uint64_t v106 = v23;
  uint64_t v108 = v19;
  if (__src(v21, 1, v22))
  {
    uint64_t v24 = sub_1005057FC((uint64_t *)&unk_101674160);
    memcpy(__dst, v21, *(void *)(*(void *)(v24 - 8) + 64));
  }
  else
  {
    uint64_t v114 = v13;
    uint64_t v38 = *v21;
    unint64_t v39 = v21[1];
    sub_100510D4C(*v21, v39);
    void *__dst = v38;
    __dst[1] = v39;
    uint64_t v13 = v114;
    v19((char *)__dst + *(int *)(v22 + 20), (char *)v21 + *(int *)(v22 + 20), v118);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v23 + 56))(__dst, 0, 1, v22);
  }
  uint64_t v40 = v14[7];
  unint64_t v41 = &v12[v40];
  uint64_t v42 = (uint64_t *)&v13[v40];
  if (__src((uint64_t *)&v13[v40], 1, v22))
  {
    uint64_t v43 = sub_1005057FC((uint64_t *)&unk_101674160);
    memcpy(v41, v42, *(void *)(*(void *)(v43 - 8) + 64));
  }
  else
  {
    uint64_t v115 = v13;
    uint64_t v44 = *v42;
    unint64_t v45 = v42[1];
    sub_100510D4C(*v42, v45);
    *unint64_t v41 = v44;
    v41[1] = v45;
    uint64_t v13 = v115;
    v108((char *)v41 + *(int *)(v22 + 20), (char *)v42 + *(int *)(v22 + 20), v118);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v23 + 56))(v41, 0, 1, v22);
  }
  uint64_t v46 = v14[8];
  uint64_t v47 = &v12[v46];
  uint64_t v48 = (uint64_t *)&v13[v46];
  if (__src((uint64_t *)&v13[v46], 1, v22))
  {
    uint64_t v49 = sub_1005057FC((uint64_t *)&unk_101674160);
    memcpy(v47, v48, *(void *)(*(void *)(v49 - 8) + 64));
  }
  else
  {
    uint64_t v50 = v13;
    uint64_t v51 = *v48;
    unint64_t v52 = v48[1];
    sub_100510D4C(*v48, v52);
    *uint64_t v47 = v51;
    v47[1] = v52;
    uint64_t v13 = v50;
    v108((char *)v47 + *(int *)(v22 + 20), (char *)v48 + *(int *)(v22 + 20), v118);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v106 + 56))(v47, 0, 1, v22);
  }
  uint64_t v53 = v14[9];
  uint64_t v54 = &v12[v53];
  unint64_t v55 = &v13[v53];
  int v56 = *(_DWORD *)v55;
  v54[4] = v55[4];
  *(_DWORD *)uint64_t v54 = v56;
  v12[v14[10]] = v13[v14[10]];
  uint64_t v57 = v14[11];
  uint64_t v58 = &v12[v57];
  uint64_t v59 = &v13[v57];
  int v60 = *(_DWORD *)v59;
  v58[4] = v59[4];
  *(_DWORD *)uint64_t v58 = v60;
  (*(void (**)(void))(v15 + 56))();
  return a1;
}

uint64_t sub_100C1DE7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (char *)(a1 + v6);
  uint64_t v8 = (char *)(a2 + v6);
  uint64_t v9 = type metadata accessor for UnknownStorage();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32);
  v10(v7, v8, v9);
  uint64_t v11 = *(int *)(a3 + 28);
  uint64_t v12 = (unsigned char *)(a1 + v11);
  uint64_t v13 = (unsigned char *)(a2 + v11);
  uint64_t v14 = (int *)type metadata accessor for CRLProto_TextSelection(0);
  uint64_t v15 = *((void *)v14 - 1);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, int *))(v15 + 48))(v13, 1, v14))
  {
    uint64_t v16 = sub_1005057FC(&qword_101677FD8);
    memcpy(v12, v13, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    uint64_t v39 = v15;
    *(void *)uint64_t v12 = *(void *)v13;
    v12[8] = v13[8];
    v10(&v12[v14[5]], &v13[v14[5]], v9);
    uint64_t v17 = v14[6];
    __dst = &v12[v17];
    uint64_t v18 = &v13[v17];
    uint64_t v19 = type metadata accessor for CRLProto_Data(0);
    uint64_t v20 = *(void *)(v19 - 8);
    uint64_t v40 = *(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v20 + 48);
    uint64_t v37 = v10;
    if (v40(v18, 1, v19))
    {
      uint64_t v21 = sub_1005057FC((uint64_t *)&unk_101674160);
      memcpy(__dst, v18, *(void *)(*(void *)(v21 - 8) + 64));
    }
    else
    {
      _OWORD *__dst = *v18;
      v10((char *)__dst + *(int *)(v19 + 20), (char *)v18 + *(int *)(v19 + 20), v9);
      (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v20 + 56))(__dst, 0, 1, v19);
    }
    uint64_t v22 = v14[7];
    uint64_t v23 = &v12[v22];
    uint64_t v24 = &v13[v22];
    if (v40(&v13[v22], 1, v19))
    {
      uint64_t v25 = sub_1005057FC((uint64_t *)&unk_101674160);
      memcpy(v23, v24, *(void *)(*(void *)(v25 - 8) + 64));
    }
    else
    {
      *uint64_t v23 = *v24;
      v37((char *)v23 + *(int *)(v19 + 20), (char *)v24 + *(int *)(v19 + 20), v9);
      (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v20 + 56))(v23, 0, 1, v19);
    }
    uint64_t v26 = v14[8];
    uint64_t v27 = &v12[v26];
    uint64_t v28 = &v13[v26];
    if (v40(&v13[v26], 1, v19))
    {
      uint64_t v29 = sub_1005057FC((uint64_t *)&unk_101674160);
      memcpy(v27, v28, *(void *)(*(void *)(v29 - 8) + 64));
    }
    else
    {
      *uint64_t v27 = *v28;
      v37((char *)v27 + *(int *)(v19 + 20), (char *)v28 + *(int *)(v19 + 20), v9);
      (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v20 + 56))(v27, 0, 1, v19);
    }
    uint64_t v30 = v14[9];
    uint64_t v31 = &v12[v30];
    int v32 = &v13[v30];
    *(_DWORD *)uint64_t v31 = *(_DWORD *)v32;
    v31[4] = v32[4];
    v12[v14[10]] = v13[v14[10]];
    uint64_t v33 = v14[11];
    unint64_t v34 = &v12[v33];
    int v35 = &v13[v33];
    v34[4] = v35[4];
    *(_DWORD *)unint64_t v34 = *(_DWORD *)v35;
    (*(void (**)(unsigned char *, void, uint64_t, int *))(v39 + 56))(v12, 0, 1, v14);
  }
  return a1;
}

uint64_t sub_100C1E2AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = type metadata accessor for UnknownStorage();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void (**)(uint64_t, uint64_t))(v10 + 40);
  uint64_t v83 = v9;
  v11(v7, v8);
  uint64_t v12 = *(int *)(a3 + 28);
  uint64_t v84 = a1;
  uint64_t v13 = (unsigned char *)(a1 + v12);
  uint64_t v14 = (unsigned char *)(a2 + v12);
  uint64_t v15 = (int *)type metadata accessor for CRLProto_TextSelection(0);
  uint64_t v16 = *((void *)v15 - 1);
  uint64_t v17 = *(uint64_t (**)(unsigned char *, uint64_t, int *))(v16 + 48);
  LODWORD(v8) = v17(v13, 1, v15);
  int v18 = v17(v14, 1, v15);
  if (!v8)
  {
    int v82 = (void (*)(uint64_t, char *, uint64_t))v11;
    if (v18)
    {
      sub_100C16A08((uint64_t)v13, type metadata accessor for CRLProto_TextSelection);
      goto LABEL_7;
    }
    *(void *)uint64_t v13 = *(void *)v14;
    v13[8] = v14[8];
    ((void (*)(unsigned char *, unsigned char *, uint64_t))v11)(&v13[v15[5]], &v14[v15[5]], v83);
    uint64_t v26 = v15[6];
    uint64_t v27 = &v13[v26];
    uint64_t v28 = &v14[v26];
    uint64_t v29 = type metadata accessor for CRLProto_Data(0);
    uint64_t v75 = *(void *)(v29 - 8);
    uint64_t v76 = (uint64_t)v27;
    uint64_t v30 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v75 + 48);
    LODWORD(v27) = v30(v27, 1, v29);
    __dsta = v30;
    int v31 = v30(v28, 1, v29);
    if (v27)
    {
      if (v31)
      {
        size_t v32 = *(void *)(*(void *)(sub_1005057FC((uint64_t *)&unk_101674160) - 8) + 64);
        uint64_t v33 = (void *)v76;
LABEL_21:
        memcpy(v33, v28, v32);
        goto LABEL_24;
      }
      *(_OWORD *)uint64_t v76 = *(_OWORD *)v28;
      (*(void (**)(uint64_t, char *, uint64_t))(v10 + 32))(v76 + *(int *)(v29 + 20), &v28[*(int *)(v29 + 20)], v83);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v75 + 56))(v76, 0, 1, v29);
    }
    else
    {
      if (v31)
      {
        sub_100C16A08(v76, type metadata accessor for CRLProto_Data);
        size_t v32 = *(void *)(*(void *)(sub_1005057FC((uint64_t *)&unk_101674160) - 8) + 64);
        uint64_t v33 = (void *)v76;
        goto LABEL_21;
      }
      uint64_t v50 = *(void *)v76;
      unint64_t v51 = *(void *)(v76 + 8);
      *(_OWORD *)uint64_t v76 = *(_OWORD *)v28;
      sub_100510084(v50, v51);
      v82(v76 + *(int *)(v29 + 20), &v28[*(int *)(v29 + 20)], v83);
    }
LABEL_24:
    uint64_t v52 = v15[7];
    uint64_t v53 = &v13[v52];
    uint64_t v54 = &v14[v52];
    int v55 = __dsta(&v13[v52], 1, v29);
    int v56 = __dsta(v54, 1, v29);
    if (v55)
    {
      if (!v56)
      {
        *(_OWORD *)uint64_t v53 = *(_OWORD *)v54;
        (*(void (**)(char *, char *, uint64_t))(v10 + 32))(&v53[*(int *)(v29 + 20)], &v54[*(int *)(v29 + 20)], v83);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v75 + 56))(v53, 0, 1, v29);
        goto LABEL_30;
      }
    }
    else
    {
      if (!v56)
      {
        uint64_t v71 = *(void *)v53;
        unint64_t v72 = *((void *)v53 + 1);
        *(_OWORD *)uint64_t v53 = *(_OWORD *)v54;
        sub_100510084(v71, v72);
        v82((uint64_t)&v53[*(int *)(v29 + 20)], &v54[*(int *)(v29 + 20)], v83);
LABEL_30:
        uint64_t v58 = v15[8];
        uint64_t v59 = &v13[v58];
        int v60 = &v14[v58];
        int v61 = __dsta(&v13[v58], 1, v29);
        int v62 = __dsta(v60, 1, v29);
        if (v61)
        {
          if (!v62)
          {
            *(_OWORD *)uint64_t v59 = *(_OWORD *)v60;
            (*(void (**)(char *, char *, uint64_t))(v10 + 32))(&v59[*(int *)(v29 + 20)], &v60[*(int *)(v29 + 20)], v83);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v75 + 56))(v59, 0, 1, v29);
LABEL_36:
            uint64_t v64 = v15[9];
            uint64_t v65 = &v13[v64];
            uint64_t v66 = &v14[v64];
            *(_DWORD *)uint64_t v65 = *(_DWORD *)v66;
            v65[4] = v66[4];
            v13[v15[10]] = v14[v15[10]];
            uint64_t v67 = v15[11];
            uint64_t v68 = &v13[v67];
            uint64_t v69 = &v14[v67];
            v68[4] = v69[4];
            *(_DWORD *)uint64_t v68 = *(_DWORD *)v69;
            return v84;
          }
        }
        else
        {
          if (!v62)
          {
            uint64_t v73 = *(void *)v59;
            unint64_t v74 = *((void *)v59 + 1);
            *(_OWORD *)uint64_t v59 = *(_OWORD *)v60;
            sub_100510084(v73, v74);
            v82((uint64_t)&v59[*(int *)(v29 + 20)], &v60[*(int *)(v29 + 20)], v83);
            goto LABEL_36;
          }
          sub_100C16A08((uint64_t)v59, type metadata accessor for CRLProto_Data);
        }
        uint64_t v63 = sub_1005057FC((uint64_t *)&unk_101674160);
        memcpy(v59, v60, *(void *)(*(void *)(v63 - 8) + 64));
        goto LABEL_36;
      }
      sub_100C16A08((uint64_t)v53, type metadata accessor for CRLProto_Data);
    }
    uint64_t v57 = sub_1005057FC((uint64_t *)&unk_101674160);
    memcpy(v53, v54, *(void *)(*(void *)(v57 - 8) + 64));
    goto LABEL_30;
  }
  if (v18)
  {
LABEL_7:
    uint64_t v25 = sub_1005057FC(&qword_101677FD8);
    memcpy(v13, v14, *(void *)(*(void *)(v25 - 8) + 64));
    return v84;
  }
  *(void *)uint64_t v13 = *(void *)v14;
  v13[8] = v14[8];
  uint64_t v19 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
  v19(&v13[v15[5]], &v14[v15[5]], v83);
  uint64_t v20 = v15[6];
  __dst = &v13[v20];
  uint64_t v21 = &v14[v20];
  uint64_t v22 = type metadata accessor for CRLProto_Data(0);
  uint64_t v23 = *(void *)(v22 - 8);
  uint64_t v81 = *(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v23 + 48);
  uint64_t v80 = v19;
  __src = (void *)v23;
  if (v81(v21, 1, v22))
  {
    uint64_t v24 = sub_1005057FC((uint64_t *)&unk_101674160);
    memcpy(__dst, v21, *(void *)(*(void *)(v24 - 8) + 64));
  }
  else
  {
    _OWORD *__dst = *v21;
    v19((char *)__dst + *(int *)(v22 + 20), (char *)v21 + *(int *)(v22 + 20), v83);
    (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v23 + 56))(__dst, 0, 1, v22);
  }
  uint64_t v34 = v15[7];
  int v35 = &v13[v34];
  size_t v36 = &v14[v34];
  if (v81(&v14[v34], 1, v22))
  {
    uint64_t v37 = sub_1005057FC((uint64_t *)&unk_101674160);
    memcpy(v35, v36, *(void *)(*(void *)(v37 - 8) + 64));
    uint64_t v38 = v83;
    uint64_t v39 = v80;
  }
  else
  {
    *int v35 = *v36;
    uint64_t v38 = v83;
    uint64_t v39 = v80;
    v80((char *)v35 + *(int *)(v22 + 20), (char *)v36 + *(int *)(v22 + 20), v83);
    (*((void (**)(_OWORD *, void, uint64_t, uint64_t))__src + 7))(v35, 0, 1, v22);
  }
  uint64_t v40 = v15[8];
  unint64_t v41 = &v13[v40];
  uint64_t v42 = &v14[v40];
  if (v81(&v14[v40], 1, v22))
  {
    uint64_t v43 = sub_1005057FC((uint64_t *)&unk_101674160);
    memcpy(v41, v42, *(void *)(*(void *)(v43 - 8) + 64));
  }
  else
  {
    *unint64_t v41 = *v42;
    v39((char *)v41 + *(int *)(v22 + 20), (char *)v42 + *(int *)(v22 + 20), v38);
    (*((void (**)(_OWORD *, void, uint64_t, uint64_t))__src + 7))(v41, 0, 1, v22);
  }
  uint64_t v44 = v15[9];
  unint64_t v45 = &v13[v44];
  uint64_t v46 = &v14[v44];
  *(_DWORD *)unint64_t v45 = *(_DWORD *)v46;
  v45[4] = v46[4];
  v13[v15[10]] = v14[v15[10]];
  uint64_t v47 = v15[11];
  uint64_t v48 = &v13[v47];
  uint64_t v49 = &v14[v47];
  v48[4] = v49[4];
  *(_DWORD *)uint64_t v48 = *(_DWORD *)v49;
  (*(void (**)(unsigned char *, void, uint64_t, int *))(v16 + 56))(v13, 0, 1, v15);
  return v84;
}

uint64_t sub_100C1EB94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100C1EBA8);
}

uint64_t sub_100C1EBA8(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return sub_100C1EBB4(a1, a2, a3, &qword_101677FD8);
}

uint64_t sub_100C1EBB4(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v5 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v5) = -1;
    }
    return (v5 + 1);
  }
  else
  {
    uint64_t v10 = type metadata accessor for UnknownStorage();
    uint64_t v11 = *(void *)(v10 - 8);
    if (*(_DWORD *)(v11 + 84) == a2)
    {
      uint64_t v12 = v10;
      uint64_t v13 = (char *)a1 + *(int *)(a3 + 24);
      uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
      return v14(v13, a2, v12);
    }
    else
    {
      uint64_t v15 = sub_1005057FC(a4);
      uint64_t v16 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v15 - 8) + 48);
      uint64_t v17 = v15;
      int v18 = (char *)a1 + *(int *)(a3 + 28);
      return v16(v18, a2, v17);
    }
  }
}

uint64_t sub_100C1ECE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100C1ECF8);
}

void *sub_100C1ECF8(void *a1, uint64_t a2, int a3, uint64_t a4)
{
  return sub_100C1ED04(a1, a2, a3, a4, &qword_101677FD8);
}

void *sub_100C1ED04(void *result, uint64_t a2, int a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v6 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v10 = type metadata accessor for UnknownStorage();
    uint64_t v11 = *(void *)(v10 - 8);
    if (*(_DWORD *)(v11 + 84) == a3)
    {
      uint64_t v12 = v10;
      uint64_t v13 = (char *)v6 + *(int *)(a4 + 24);
      uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56);
      return (void *)v14(v13, a2, a2, v12);
    }
    else
    {
      uint64_t v15 = sub_1005057FC(a5);
      uint64_t v16 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56);
      uint64_t v17 = v15;
      int v18 = (char *)v6 + *(int *)(a4 + 28);
      return (void *)v16(v18, a2, a2, v17);
    }
  }
  return result;
}

void sub_100C1EE44(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

uint64_t *sub_100C1EE78(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v18 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *a1 = *a2;
    uint64_t v7 = a3[5];
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = type metadata accessor for UnknownStorage();
    uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
    v11(v8, v9, v10);
    uint64_t v12 = a3[6];
    uint64_t v13 = (uint64_t *)((char *)v4 + v12);
    uint64_t v14 = (uint64_t *)((char *)a2 + v12);
    uint64_t v15 = type metadata accessor for CRLProto_Data(0);
    uint64_t v16 = *(void *)(v15 - 8);
    uint64_t v30 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v16 + 48);
    if (v30(v14, 1, v15))
    {
      uint64_t v17 = sub_1005057FC((uint64_t *)&unk_101674160);
      memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
    }
    else
    {
      uint64_t v28 = v11;
      uint64_t v29 = v10;
      uint64_t v19 = *v14;
      unint64_t v20 = v14[1];
      sub_100510D4C(*v14, v20);
      *uint64_t v13 = v19;
      v13[1] = v20;
      uint64_t v11 = v28;
      uint64_t v10 = v29;
      v28((char *)v13 + *(int *)(v15 + 20), (char *)v14 + *(int *)(v15 + 20), v29);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
    }
    uint64_t v21 = a3[7];
    uint64_t v22 = (uint64_t *)((char *)v4 + v21);
    uint64_t v23 = (uint64_t *)((char *)a2 + v21);
    if (v30(v23, 1, v15))
    {
      uint64_t v24 = sub_1005057FC((uint64_t *)&unk_101674160);
      memcpy(v22, v23, *(void *)(*(void *)(v24 - 8) + 64));
    }
    else
    {
      uint64_t v25 = *v23;
      unint64_t v26 = v23[1];
      sub_100510D4C(*v23, v26);
      *uint64_t v22 = v25;
      v22[1] = v26;
      v11((char *)v22 + *(int *)(v15 + 20), (char *)v23 + *(int *)(v15 + 20), v10);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v16 + 56))(v22, 0, 1, v15);
    }
  }
  return v4;
}

void *sub_100C1F12C(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for UnknownStorage();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
  v10(v7, v8, v9);
  uint64_t v11 = a3[6];
  uint64_t v12 = (void *)((char *)a1 + v11);
  uint64_t v13 = (void *)((char *)a2 + v11);
  uint64_t v14 = type metadata accessor for CRLProto_Data(0);
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v28 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v15 + 48);
  if (v28(v13, 1, v14))
  {
    uint64_t v16 = sub_1005057FC((uint64_t *)&unk_101674160);
    memcpy(v12, v13, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    unint64_t v26 = v10;
    uint64_t v27 = v9;
    uint64_t v17 = *v13;
    unint64_t v18 = v13[1];
    sub_100510D4C(*v13, v18);
    *uint64_t v12 = v17;
    v12[1] = v18;
    uint64_t v10 = v26;
    uint64_t v9 = v27;
    v26((char *)v12 + *(int *)(v14 + 20), (char *)v13 + *(int *)(v14 + 20), v27);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  }
  uint64_t v19 = a3[7];
  unint64_t v20 = (void *)((char *)a1 + v19);
  uint64_t v21 = (void *)((char *)a2 + v19);
  if (v28(v21, 1, v14))
  {
    uint64_t v22 = sub_1005057FC((uint64_t *)&unk_101674160);
    memcpy(v20, v21, *(void *)(*(void *)(v22 - 8) + 64));
  }
  else
  {
    uint64_t v23 = *v21;
    unint64_t v24 = v21[1];
    sub_100510D4C(*v21, v24);
    *unint64_t v20 = v23;
    v20[1] = v24;
    v10((char *)v20 + *(int *)(v14 + 20), (char *)v21 + *(int *)(v14 + 20), v9);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v15 + 56))(v20, 0, 1, v14);
  }
  return a1;
}

void *sub_100C1F38C(void *a1, void *a2, int *a3)
{
  int v5 = a1;
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for UnknownStorage();
  uint64_t v41 = *(void *)(v9 - 8);
  uint64_t v42 = v9;
  uint64_t v39 = *(void (**)(char *, char *))(v41 + 24);
  v39(v7, v8);
  uint64_t v10 = a3[6];
  uint64_t v11 = (void *)((char *)v5 + v10);
  uint64_t v12 = (void *)((char *)a2 + v10);
  uint64_t v13 = type metadata accessor for CRLProto_Data(0);
  uint64_t v40 = *(void *)(v13 - 8);
  uint64_t v14 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v40 + 48);
  int v15 = v14(v11, 1, v13);
  int v16 = v14(v12, 1, v13);
  if (v15)
  {
    if (!v16)
    {
      uint64_t v37 = v5;
      uint64_t v17 = *v12;
      unint64_t v18 = v12[1];
      sub_100510D4C(*v12, v18);
      *uint64_t v11 = v17;
      v11[1] = v18;
      int v5 = v37;
      (*(void (**)(char *, char *, uint64_t))(v41 + 16))((char *)v11 + *(int *)(v13 + 20), (char *)v12 + *(int *)(v13 + 20), v42);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v40 + 56))(v11, 0, 1, v13);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v16)
  {
    sub_100C16A08((uint64_t)v11, type metadata accessor for CRLProto_Data);
LABEL_6:
    uint64_t v19 = sub_1005057FC((uint64_t *)&unk_101674160);
    memcpy(v11, v12, *(void *)(*(void *)(v19 - 8) + 64));
    goto LABEL_7;
  }
  uint64_t v38 = v5;
  uint64_t v29 = *v12;
  unint64_t v30 = v12[1];
  sub_100510D4C(*v12, v30);
  uint64_t v31 = *v11;
  unint64_t v32 = v11[1];
  *uint64_t v11 = v29;
  v11[1] = v30;
  int v5 = v38;
  sub_100510084(v31, v32);
  ((void (*)(char *, char *, uint64_t))v39)((char *)v11 + *(int *)(v13 + 20), (char *)v12 + *(int *)(v13 + 20), v42);
LABEL_7:
  uint64_t v20 = a3[7];
  uint64_t v21 = (void *)((char *)v5 + v20);
  uint64_t v22 = (void *)((char *)a2 + v20);
  int v23 = v14((void *)((char *)v5 + v20), 1, v13);
  int v24 = v14(v22, 1, v13);
  if (!v23)
  {
    if (!v24)
    {
      uint64_t v33 = *v22;
      unint64_t v34 = v22[1];
      sub_100510D4C(*v22, v34);
      uint64_t v35 = *v21;
      unint64_t v36 = v21[1];
      *uint64_t v21 = v33;
      v21[1] = v34;
      sub_100510084(v35, v36);
      ((void (*)(char *, char *, uint64_t))v39)((char *)v21 + *(int *)(v13 + 20), (char *)v22 + *(int *)(v13 + 20), v42);
      return v5;
    }
    sub_100C16A08((uint64_t)v21, type metadata accessor for CRLProto_Data);
    goto LABEL_12;
  }
  if (v24)
  {
LABEL_12:
    uint64_t v27 = sub_1005057FC((uint64_t *)&unk_101674160);
    memcpy(v21, v22, *(void *)(*(void *)(v27 - 8) + 64));
    return v5;
  }
  uint64_t v25 = *v22;
  unint64_t v26 = v22[1];
  sub_100510D4C(*v22, v26);
  *uint64_t v21 = v25;
  v21[1] = v26;
  (*(void (**)(char *, char *, uint64_t))(v41 + 16))((char *)v21 + *(int *)(v13 + 20), (char *)v22 + *(int *)(v13 + 20), v42);
  (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v40 + 56))(v21, 0, 1, v13);
  return v5;
}

void *sub_100C1F6FC(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for UnknownStorage();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32);
  v10(v7, v8, v9);
  uint64_t v24 = a3;
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = (_OWORD *)((char *)a1 + v11);
  uint64_t v13 = (_OWORD *)((char *)a2 + v11);
  uint64_t v14 = type metadata accessor for CRLProto_Data(0);
  uint64_t v15 = *(void *)(v14 - 8);
  int v16 = *(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v15 + 48);
  if (v16(v13, 1, v14))
  {
    uint64_t v17 = sub_1005057FC((uint64_t *)&unk_101674160);
    memcpy(v12, v13, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    *uint64_t v12 = *v13;
    v10((char *)v12 + *(int *)(v14 + 20), (char *)v13 + *(int *)(v14 + 20), v9);
    (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  }
  uint64_t v18 = v15;
  uint64_t v19 = *(int *)(v24 + 28);
  uint64_t v20 = (_OWORD *)((char *)a1 + v19);
  uint64_t v21 = (_OWORD *)((char *)a2 + v19);
  if (v16(v21, 1, v14))
  {
    uint64_t v22 = sub_1005057FC((uint64_t *)&unk_101674160);
    memcpy(v20, v21, *(void *)(*(void *)(v22 - 8) + 64));
  }
  else
  {
    *uint64_t v20 = *v21;
    v10((char *)v20 + *(int *)(v14 + 20), (char *)v21 + *(int *)(v14 + 20), v9);
    (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v18 + 56))(v20, 0, 1, v14);
  }
  return a1;
}

char *sub_100C1F93C(char *a1, void *a2, int *a3)
{
  *(void *)a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for UnknownStorage();
  uint64_t v31 = *(void *)(v9 - 8);
  uint64_t v32 = v9;
  uint64_t v29 = *(void (**)(char *, char *))(v31 + 40);
  v29(v7, v8);
  uint64_t v10 = a3[6];
  uint64_t v11 = &a1[v10];
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = type metadata accessor for CRLProto_Data(0);
  uint64_t v30 = *(void *)(v13 - 8);
  uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v30 + 48);
  int v15 = v14(v11, 1, v13);
  int v16 = v14(v12, 1, v13);
  if (v15)
  {
    if (!v16)
    {
      *(_OWORD *)uint64_t v11 = *(_OWORD *)v12;
      (*(void (**)(char *, char *, uint64_t))(v31 + 32))(&v11[*(int *)(v13 + 20)], &v12[*(int *)(v13 + 20)], v32);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v30 + 56))(v11, 0, 1, v13);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v16)
  {
    sub_100C16A08((uint64_t)v11, type metadata accessor for CRLProto_Data);
LABEL_6:
    uint64_t v17 = sub_1005057FC((uint64_t *)&unk_101674160);
    memcpy(v11, v12, *(void *)(*(void *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  uint64_t v25 = *(void *)v11;
  unint64_t v26 = *((void *)v11 + 1);
  *(_OWORD *)uint64_t v11 = *(_OWORD *)v12;
  sub_100510084(v25, v26);
  ((void (*)(char *, char *, uint64_t))v29)(&v11[*(int *)(v13 + 20)], &v12[*(int *)(v13 + 20)], v32);
LABEL_7:
  uint64_t v18 = a3[7];
  uint64_t v19 = (uint64_t *)&a1[v18];
  uint64_t v20 = (char *)a2 + v18;
  int v21 = v14(&a1[v18], 1, v13);
  int v22 = v14(v20, 1, v13);
  if (!v21)
  {
    if (!v22)
    {
      uint64_t v27 = *v19;
      unint64_t v28 = v19[1];
      *(_OWORD *)uint64_t v19 = *(_OWORD *)v20;
      sub_100510084(v27, v28);
      ((void (*)(char *, char *, uint64_t))v29)((char *)v19 + *(int *)(v13 + 20), &v20[*(int *)(v13 + 20)], v32);
      return a1;
    }
    sub_100C16A08((uint64_t)v19, type metadata accessor for CRLProto_Data);
    goto LABEL_12;
  }
  if (v22)
  {
LABEL_12:
    uint64_t v23 = sub_1005057FC((uint64_t *)&unk_101674160);
    memcpy(v19, v20, *(void *)(*(void *)(v23 - 8) + 64));
    return a1;
  }
  *(_OWORD *)uint64_t v19 = *(_OWORD *)v20;
  (*(void (**)(char *, char *, uint64_t))(v31 + 32))((char *)v19 + *(int *)(v13 + 20), &v20[*(int *)(v13 + 20)], v32);
  (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v30 + 56))(v19, 0, 1, v13);
  return a1;
}

uint64_t sub_100C1FC6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100C1FC80);
}

uint64_t sub_100C1FC84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100C1FC98);
}

void sub_100C1FC9C()
{
  type metadata accessor for UnknownStorage();
  if (v0 <= 0x3F)
  {
    sub_100C1A890(319, (unint64_t *)&unk_101697808, (void (*)(uint64_t))type metadata accessor for CRLProto_Data);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t sub_100C1FDA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100C1FDBC);
}

uint64_t sub_100C1FDC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100C1FDD4);
}

void sub_100C1FDD8()
{
}

void *sub_100C1FDE8(void *a1, void *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v17 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *a1 = *a2;
    uint64_t v7 = a3[5];
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = type metadata accessor for UnknownStorage();
    uint64_t v11 = *(void (**)(char *, char *))(*(void *)(v10 - 8) + 16);
    uint64_t v30 = v10;
    v11(v8, v9);
    uint64_t v12 = a3[6];
    __dst = (void *)((char *)v4 + v12);
    uint64_t v13 = (void *)((char *)a2 + v12);
    uint64_t v14 = type metadata accessor for CRLProto_Data(0);
    uint64_t v15 = *(void *)(v14 - 8);
    uint64_t v32 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v15 + 48);
    if (v32(v13, 1, v14))
    {
      uint64_t v16 = sub_1005057FC((uint64_t *)&unk_101674160);
      memcpy(__dst, v13, *(void *)(*(void *)(v16 - 8) + 64));
    }
    else
    {
      uint64_t v28 = *v13;
      uint64_t v29 = v11;
      unint64_t v18 = v13[1];
      sub_100510D4C(*v13, v18);
      void *__dst = v28;
      __dst[1] = v18;
      uint64_t v11 = v29;
      ((void (*)(char *, char *, uint64_t))v29)((char *)__dst + *(int *)(v14 + 20), (char *)v13 + *(int *)(v14 + 20), v30);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v15 + 56))(__dst, 0, 1, v14);
    }
    uint64_t v19 = v15;
    uint64_t v20 = a3[7];
    int v21 = (void *)((char *)v4 + v20);
    int v22 = (void *)((char *)a2 + v20);
    if (v32((void *)((char *)a2 + v20), 1, v14))
    {
      uint64_t v23 = sub_1005057FC((uint64_t *)&unk_101674160);
      memcpy(v21, v22, *(void *)(*(void *)(v23 - 8) + 64));
    }
    else
    {
      uint64_t v24 = (void (*)(char *, char *, uint64_t))v11;
      uint64_t v25 = *v22;
      unint64_t v26 = v22[1];
      sub_100510D4C(*v22, v26);
      *int v21 = v25;
      v21[1] = v26;
      v24((char *)v21 + *(int *)(v14 + 20), (char *)v22 + *(int *)(v14 + 20), v30);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v19 + 56))(v21, 0, 1, v14);
    }
    *((unsigned char *)v4 + a3[8]) = *((unsigned char *)a2 + a3[8]);
  }
  return v4;
}

uint64_t sub_100C200A4(uint64_t a1, int *a2)
{
  uint64_t v4 = a1 + a2[5];
  uint64_t v5 = type metadata accessor for UnknownStorage();
  uint64_t v12 = *(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  v12(v4, v5);
  uint64_t v6 = a1 + a2[6];
  uint64_t v7 = type metadata accessor for CRLProto_Data(0);
  uint64_t v8 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48);
  if (!v8(v6, 1, v7))
  {
    sub_100510084(*(void *)v6, *(void *)(v6 + 8));
    v12(v6 + *(int *)(v7 + 20), v5);
  }
  uint64_t v9 = a1 + a2[7];
  uint64_t result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v8)(v9, 1, v7);
  if (!result)
  {
    sub_100510084(*(void *)v9, *(void *)(v9 + 8));
    uint64_t v11 = v9 + *(int *)(v7 + 20);
    return ((uint64_t (*)(uint64_t, uint64_t))v12)(v11, v5);
  }
  return result;
}

void *sub_100C20210(void *a1, void *a2, int *a3)
{
  int v3 = a3;
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for UnknownStorage();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
  v10(v7, v8, v9);
  uint64_t v11 = v3[6];
  uint64_t v12 = (void *)((char *)a1 + v11);
  uint64_t v13 = (void *)((char *)a2 + v11);
  uint64_t v14 = type metadata accessor for CRLProto_Data(0);
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v15 + 48);
  uint64_t v33 = v15;
  if (v16(v13, 1, v14))
  {
    uint64_t v17 = sub_1005057FC((uint64_t *)&unk_101674160);
    memcpy(v12, v13, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    uint64_t v31 = v9;
    uint64_t v32 = v3;
    uint64_t v18 = *v13;
    unint64_t v19 = v13[1];
    sub_100510D4C(*v13, v19);
    *uint64_t v12 = v18;
    v12[1] = v19;
    uint64_t v9 = v31;
    int v3 = v32;
    v10((char *)v12 + *(int *)(v14 + 20), (char *)v13 + *(int *)(v14 + 20), v31);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  }
  uint64_t v20 = v3[7];
  int v21 = (void *)((char *)a1 + v20);
  int v22 = a2;
  uint64_t v23 = (void *)((char *)a2 + v20);
  if (v16((void *)((char *)a2 + v20), 1, v14))
  {
    uint64_t v24 = sub_1005057FC((uint64_t *)&unk_101674160);
    memcpy(v21, v23, *(void *)(*(void *)(v24 - 8) + 64));
  }
  else
  {
    uint64_t v25 = v3;
    uint64_t v26 = v9;
    uint64_t v27 = *v23;
    unint64_t v28 = v23[1];
    sub_100510D4C(*v23, v28);
    *int v21 = v27;
    v21[1] = v28;
    int v3 = v25;
    uint64_t v29 = v26;
    int v22 = a2;
    v10((char *)v21 + *(int *)(v14 + 20), (char *)v23 + *(int *)(v14 + 20), v29);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v33 + 56))(v21, 0, 1, v14);
  }
  *((unsigned char *)a1 + v3[8]) = *((unsigned char *)v22 + v3[8]);
  return a1;
}

void *sub_100C20490(void *a1, void *a2, int *a3)
{
  int v3 = a3;
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for UnknownStorage();
  uint64_t v43 = *(void *)(v9 - 8);
  uint64_t v44 = v9;
  uint64_t v41 = *(void (**)(char *, char *))(v43 + 24);
  v41(v7, v8);
  uint64_t v10 = v3[6];
  uint64_t v11 = (void *)((char *)a1 + v10);
  uint64_t v12 = (void *)((char *)a2 + v10);
  uint64_t v13 = type metadata accessor for CRLProto_Data(0);
  uint64_t v42 = *(void *)(v13 - 8);
  uint64_t v14 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v42 + 48);
  int v15 = v14(v11, 1, v13);
  int v16 = v14(v12, 1, v13);
  if (v15)
  {
    if (!v16)
    {
      uint64_t v39 = v3;
      uint64_t v17 = *v12;
      unint64_t v18 = v12[1];
      sub_100510D4C(*v12, v18);
      *uint64_t v11 = v17;
      v11[1] = v18;
      int v3 = v39;
      (*(void (**)(char *, char *, uint64_t))(v43 + 16))((char *)v11 + *(int *)(v13 + 20), (char *)v12 + *(int *)(v13 + 20), v44);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v42 + 56))(v11, 0, 1, v13);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v16)
  {
    sub_100C16A08((uint64_t)v11, type metadata accessor for CRLProto_Data);
LABEL_6:
    uint64_t v19 = sub_1005057FC((uint64_t *)&unk_101674160);
    memcpy(v11, v12, *(void *)(*(void *)(v19 - 8) + 64));
    goto LABEL_7;
  }
  uint64_t v40 = v3;
  uint64_t v30 = *v12;
  unint64_t v31 = v12[1];
  sub_100510D4C(*v12, v31);
  uint64_t v32 = *v11;
  unint64_t v33 = v11[1];
  *uint64_t v11 = v30;
  v11[1] = v31;
  int v3 = v40;
  sub_100510084(v32, v33);
  ((void (*)(char *, char *, uint64_t))v41)((char *)v11 + *(int *)(v13 + 20), (char *)v12 + *(int *)(v13 + 20), v44);
LABEL_7:
  uint64_t v20 = v3[7];
  int v21 = (void *)((char *)a1 + v20);
  int v22 = (void *)((char *)a2 + v20);
  int v23 = v14((void *)((char *)a1 + v20), 1, v13);
  int v24 = v14(v22, 1, v13);
  if (!v23)
  {
    if (!v24)
    {
      unint64_t v34 = v3;
      uint64_t v35 = *v22;
      unint64_t v36 = v22[1];
      sub_100510D4C(*v22, v36);
      uint64_t v37 = *v21;
      unint64_t v38 = v21[1];
      *int v21 = v35;
      v21[1] = v36;
      int v3 = v34;
      sub_100510084(v37, v38);
      ((void (*)(char *, char *, uint64_t))v41)((char *)v21 + *(int *)(v13 + 20), (char *)v22 + *(int *)(v13 + 20), v44);
      goto LABEL_13;
    }
    sub_100C16A08((uint64_t)v21, type metadata accessor for CRLProto_Data);
    goto LABEL_12;
  }
  if (v24)
  {
LABEL_12:
    uint64_t v28 = sub_1005057FC((uint64_t *)&unk_101674160);
    memcpy(v21, v22, *(void *)(*(void *)(v28 - 8) + 64));
    goto LABEL_13;
  }
  uint64_t v25 = v3;
  uint64_t v26 = *v22;
  unint64_t v27 = v22[1];
  sub_100510D4C(*v22, v27);
  *int v21 = v26;
  v21[1] = v27;
  int v3 = v25;
  (*(void (**)(char *, char *, uint64_t))(v43 + 16))((char *)v21 + *(int *)(v13 + 20), (char *)v22 + *(int *)(v13 + 20), v44);
  (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v42 + 56))(v21, 0, 1, v13);
LABEL_13:
  *((unsigned char *)a1 + v3[8]) = *((unsigned char *)a2 + v3[8]);
  return a1;
}

void *sub_100C2081C(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for UnknownStorage();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32);
  v10(v7, v8, v9);
  int v23 = a2;
  uint64_t v24 = a3;
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = (_OWORD *)((char *)a1 + v11);
  uint64_t v13 = (_OWORD *)((char *)a2 + v11);
  uint64_t v14 = type metadata accessor for CRLProto_Data(0);
  uint64_t v15 = *(void *)(v14 - 8);
  int v16 = *(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v15 + 48);
  if (v16(v13, 1, v14))
  {
    uint64_t v17 = sub_1005057FC((uint64_t *)&unk_101674160);
    memcpy(v12, v13, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    *uint64_t v12 = *v13;
    v10((char *)v12 + *(int *)(v14 + 20), (char *)v13 + *(int *)(v14 + 20), v9);
    (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  }
  uint64_t v18 = *(int *)(v24 + 28);
  uint64_t v19 = (_OWORD *)((char *)a1 + v18);
  uint64_t v20 = (_OWORD *)((char *)v23 + v18);
  if (v16((void *)((char *)v23 + v18), 1, v14))
  {
    uint64_t v21 = sub_1005057FC((uint64_t *)&unk_101674160);
    memcpy(v19, v20, *(void *)(*(void *)(v21 - 8) + 64));
  }
  else
  {
    *uint64_t v19 = *v20;
    v10((char *)v19 + *(int *)(v14 + 20), (char *)v20 + *(int *)(v14 + 20), v9);
    (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v15 + 56))(v19, 0, 1, v14);
  }
  *((unsigned char *)a1 + *(int *)(v24 + 32)) = *((unsigned char *)v23 + *(int *)(v24 + 32));
  return a1;
}

char *sub_100C20A60(char *a1, void *a2, int *a3)
{
  *(void *)a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for UnknownStorage();
  uint64_t v31 = *(void *)(v9 - 8);
  uint64_t v32 = v9;
  uint64_t v29 = *(void (**)(char *, char *))(v31 + 40);
  v29(v7, v8);
  uint64_t v10 = a3[6];
  uint64_t v11 = &a1[v10];
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = type metadata accessor for CRLProto_Data(0);
  uint64_t v30 = *(void *)(v13 - 8);
  uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v30 + 48);
  int v15 = v14(v11, 1, v13);
  int v16 = v14(v12, 1, v13);
  if (v15)
  {
    if (!v16)
    {
      *(_OWORD *)uint64_t v11 = *(_OWORD *)v12;
      (*(void (**)(char *, char *, uint64_t))(v31 + 32))(&v11[*(int *)(v13 + 20)], &v12[*(int *)(v13 + 20)], v32);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v30 + 56))(v11, 0, 1, v13);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v16)
  {
    sub_100C16A08((uint64_t)v11, type metadata accessor for CRLProto_Data);
LABEL_6:
    uint64_t v17 = sub_1005057FC((uint64_t *)&unk_101674160);
    memcpy(v11, v12, *(void *)(*(void *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  uint64_t v25 = *(void *)v11;
  unint64_t v26 = *((void *)v11 + 1);
  *(_OWORD *)uint64_t v11 = *(_OWORD *)v12;
  sub_100510084(v25, v26);
  ((void (*)(char *, char *, uint64_t))v29)(&v11[*(int *)(v13 + 20)], &v12[*(int *)(v13 + 20)], v32);
LABEL_7:
  uint64_t v18 = a3[7];
  uint64_t v19 = (uint64_t *)&a1[v18];
  uint64_t v20 = (char *)a2 + v18;
  int v21 = v14(&a1[v18], 1, v13);
  int v22 = v14(v20, 1, v13);
  if (!v21)
  {
    if (!v22)
    {
      uint64_t v27 = *v19;
      unint64_t v28 = v19[1];
      *(_OWORD *)uint64_t v19 = *(_OWORD *)v20;
      sub_100510084(v27, v28);
      ((void (*)(char *, char *, uint64_t))v29)((char *)v19 + *(int *)(v13 + 20), &v20[*(int *)(v13 + 20)], v32);
      goto LABEL_13;
    }
    sub_100C16A08((uint64_t)v19, type metadata accessor for CRLProto_Data);
    goto LABEL_12;
  }
  if (v22)
  {
LABEL_12:
    uint64_t v23 = sub_1005057FC((uint64_t *)&unk_101674160);
    memcpy(v19, v20, *(void *)(*(void *)(v23 - 8) + 64));
    goto LABEL_13;
  }
  *(_OWORD *)uint64_t v19 = *(_OWORD *)v20;
  (*(void (**)(char *, char *, uint64_t))(v31 + 32))((char *)v19 + *(int *)(v13 + 20), &v20[*(int *)(v13 + 20)], v32);
  (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v30 + 56))(v19, 0, 1, v13);
LABEL_13:
  a1[a3[8]] = *((unsigned char *)a2 + a3[8]);
  return a1;
}

uint64_t sub_100C20D9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100C20DB0);
}

uint64_t sub_100C20DB0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage();
  if (*(_DWORD *)(*(void *)(v6 - 8) + 84) == a2)
  {
    uint64_t v7 = v6;
    uint64_t v8 = *(void *)(v6 - 8);
    uint64_t v9 = a3[5];
LABEL_5:
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
    return v11(a1 + v9, a2, v7);
  }
  uint64_t v10 = sub_1005057FC((uint64_t *)&unk_101674160);
  if (*(_DWORD *)(*(void *)(v10 - 8) + 84) == a2)
  {
    uint64_t v7 = v10;
    uint64_t v8 = *(void *)(v10 - 8);
    uint64_t v9 = a3[6];
    goto LABEL_5;
  }
  unsigned int v13 = *(unsigned __int8 *)(a1 + a3[8]);
  if (v13 >= 2) {
    int v14 = ((v13 + 2147483646) & 0x7FFFFFFF) - 1;
  }
  else {
    int v14 = -2;
  }
  if (v14 < 0) {
    int v14 = -1;
  }
  return (v14 + 1);
}

uint64_t sub_100C20EE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100C20EF4);
}

uint64_t sub_100C20EF4(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8 = type metadata accessor for UnknownStorage();
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a3)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a4[5];
  }
  else
  {
    uint64_t result = sub_1005057FC((uint64_t *)&unk_101674160);
    if (*(_DWORD *)(*(void *)(result - 8) + 84) != a3)
    {
      *(unsigned char *)(a1 + a4[8]) = a2 + 2;
      return result;
    }
    uint64_t v9 = result;
    uint64_t v10 = *(void *)(result - 8);
    uint64_t v11 = a4[6];
  }
  unsigned int v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);

  return v13(a1 + v11, a2, a2, v9);
}

void sub_100C21004()
{
  type metadata accessor for UnknownStorage();
  if (v0 <= 0x3F)
  {
    sub_100C1A890(319, (unint64_t *)&unk_101697808, (void (*)(uint64_t))type metadata accessor for CRLProto_Data);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t sub_100C2111C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100C21130);
}

uint64_t sub_100C21134(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100C21148);
}

uint64_t *sub_100C21150(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    *int v3 = *a2;
    int v3 = (uint64_t *)(v11 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(_DWORD *)a1 = *(_DWORD *)a2;
    uint64_t v5 = a2[2];
    a1[1] = a2[1];
    a1[2] = v5;
    uint64_t v6 = a2[4];
    a1[3] = a2[3];
    a1[4] = v6;
    uint64_t v7 = a2[6];
    a1[5] = a2[5];
    a1[6] = v7;
    uint64_t v8 = *(int *)(a3 + 48);
    unsigned int v13 = (char *)a2 + v8;
    int v14 = (char *)a1 + v8;
    a1[7] = a2[7];
    uint64_t v9 = type metadata accessor for UnknownStorage();
    uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v10(v14, v13, v9);
  }
  return v3;
}

uint64_t sub_100C21290(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 48);
  uint64_t v5 = type metadata accessor for UnknownStorage();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);

  return v6(v4, v5);
}

uint64_t sub_100C21330(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v4;
  uint64_t v5 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v5;
  uint64_t v6 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v6;
  uint64_t v7 = *(int *)(a3 + 48);
  uint64_t v11 = a2 + v7;
  uint64_t v12 = a1 + v7;
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  uint64_t v8 = type metadata accessor for UnknownStorage();
  uint64_t v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v9(v12, v11, v8);
  return a1;
}

uint64_t sub_100C21420(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 48);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

uint64_t sub_100C2153C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  uint64_t v4 = *(int *)(a3 + 48);
  uint64_t v5 = a1 + v4;
  uint64_t v6 = a2 + v4;
  uint64_t v7 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

uint64_t sub_100C215D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v6;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRelease();
  uint64_t v7 = *(int *)(a3 + 48);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t sub_100C216BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100C216D0);
}

uint64_t sub_100C216D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for UnknownStorage();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 48);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_100C21780(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100C21794);
}

uint64_t sub_100C21794(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for UnknownStorage();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 48);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_100C2183C()
{
  return sub_100C21864();
}

uint64_t sub_100C21864()
{
  uint64_t result = type metadata accessor for UnknownStorage();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_100C21900(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for UnknownStorage();
    uint64_t v8 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    uint64_t v9 = *(int *)(a3 + 20);
    uint64_t v10 = (uint64_t *)((char *)a1 + v9);
    uint64_t v11 = (uint64_t *)((char *)a2 + v9);
    uint64_t v12 = type metadata accessor for CRLProto_Data(0);
    uint64_t v13 = *(void *)(v12 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
    {
      uint64_t v14 = sub_1005057FC((uint64_t *)&unk_101674160);
      memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      uint64_t v16 = *v11;
      unint64_t v17 = v11[1];
      sub_100510D4C(*v11, v17);
      *uint64_t v10 = v16;
      v10[1] = v17;
      v8((void *)((char *)v10 + *(int *)(v12 + 20)), (uint64_t *)((char *)v11 + *(int *)(v12 + 20)), v7);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
    }
  }
  return a1;
}

uint64_t sub_100C21AC4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UnknownStorage();
  uint64_t v9 = *(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
  v9(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = type metadata accessor for CRLProto_Data(0);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48))(v5, 1, v6);
  if (!result)
  {
    sub_100510084(*(void *)v5, *(void *)(v5 + 8));
    uint64_t v8 = v5 + *(int *)(v6 + 20);
    return ((uint64_t (*)(uint64_t, uint64_t))v9)(v8, v4);
  }
  return result;
}

char *sub_100C21BC8(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage();
  uint64_t v7 = *(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = &a1[v8];
  uint64_t v10 = (uint64_t *)&a2[v8];
  uint64_t v11 = type metadata accessor for CRLProto_Data(0);
  uint64_t v12 = *(void *)(v11 - 8);
  if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
  {
    uint64_t v13 = sub_1005057FC((uint64_t *)&unk_101674160);
    memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    uint64_t v14 = *v10;
    unint64_t v15 = v10[1];
    sub_100510D4C(*v10, v15);
    *(void *)uint64_t v9 = v14;
    *((void *)v9 + 1) = v15;
    v7(&v9[*(int *)(v11 + 20)], (char *)v10 + *(int *)(v11 + 20), v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  return a1;
}

char *sub_100C21D3C(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage();
  uint64_t v7 = *(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  uint64_t v11 = type metadata accessor for CRLProto_Data(0);
  uint64_t v12 = *(void *)(v11 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
  {
    uint64_t v13 = sub_1005057FC((uint64_t *)&unk_101674160);
    memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
    v7(&v9[*(int *)(v11 + 20)], &v10[*(int *)(v11 + 20)], v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  return a1;
}

uint64_t sub_100C21E9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100C21EB0);
}

uint64_t sub_100C21EB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100C21EC8);
}

uint64_t *sub_100C21ECC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v19 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v19 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = type metadata accessor for UnknownStorage();
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    uint64_t v13 = *(int *)(a3 + 24);
    uint64_t v14 = (uint64_t *)((char *)v4 + v13);
    unint64_t v15 = (uint64_t *)((char *)a2 + v13);
    uint64_t v16 = type metadata accessor for CRLProto_Data(0);
    uint64_t v17 = *(void *)(v16 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
    {
      uint64_t v18 = sub_1005057FC((uint64_t *)&unk_101674160);
      memcpy(v14, v15, *(void *)(*(void *)(v18 - 8) + 64));
    }
    else
    {
      uint64_t v20 = *v15;
      unint64_t v21 = v15[1];
      sub_100510D4C(*v15, v21);
      *uint64_t v14 = v20;
      v14[1] = v21;
      v12((char *)v14 + *(int *)(v16 + 20), (char *)v15 + *(int *)(v16 + 20), v11);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
    }
  }
  return v4;
}

uint64_t sub_100C220AC(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = type metadata accessor for UnknownStorage();
  uint64_t v10 = *(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  v10(v4, v5);
  uint64_t v6 = a1 + *(int *)(a2 + 24);
  uint64_t v7 = type metadata accessor for CRLProto_Data(0);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v6, 1, v7);
  if (!result)
  {
    sub_100510084(*(void *)v6, *(void *)(v6 + 8));
    uint64_t v9 = v6 + *(int *)(v7 + 20);
    return ((uint64_t (*)(uint64_t, uint64_t))v10)(v9, v5);
  }
  return result;
}

void *sub_100C221C0(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for UnknownStorage();
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  uint64_t v12 = *(int *)(a3 + 24);
  uint64_t v13 = (void *)((char *)a1 + v12);
  uint64_t v14 = (void *)((char *)a2 + v12);
  uint64_t v15 = type metadata accessor for CRLProto_Data(0);
  uint64_t v16 = *(void *)(v15 - 8);
  if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
  {
    uint64_t v17 = sub_1005057FC((uint64_t *)&unk_101674160);
    memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    uint64_t v18 = *v14;
    unint64_t v19 = v14[1];
    sub_100510D4C(*v14, v19);
    *uint64_t v13 = v18;
    v13[1] = v19;
    v11((char *)v13 + *(int *)(v15 + 20), (char *)v14 + *(int *)(v15 + 20), v10);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  }
  return a1;
}

void *sub_100C22350(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for UnknownStorage();
  uint64_t v26 = *(void *)(v9 - 8);
  uint64_t v27 = v9;
  uint64_t v10 = *(void (**)(char *, char *))(v26 + 24);
  v10(v7, v8);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = (void *)((char *)a1 + v11);
  uint64_t v13 = (void *)((char *)a2 + v11);
  uint64_t v14 = type metadata accessor for CRLProto_Data(0);
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v15 + 48);
  LODWORD(v8) = v16(v12, 1, v14);
  int v17 = v16(v13, 1, v14);
  if (!v8)
  {
    if (!v17)
    {
      uint64_t v22 = *v13;
      unint64_t v23 = v13[1];
      sub_100510D4C(*v13, v23);
      uint64_t v24 = *v12;
      unint64_t v25 = v12[1];
      *uint64_t v12 = v22;
      v12[1] = v23;
      sub_100510084(v24, v25);
      ((void (*)(char *, char *, uint64_t))v10)((char *)v12 + *(int *)(v14 + 20), (char *)v13 + *(int *)(v14 + 20), v27);
      return a1;
    }
    sub_100C16A08((uint64_t)v12, type metadata accessor for CRLProto_Data);
    goto LABEL_6;
  }
  if (v17)
  {
LABEL_6:
    uint64_t v20 = sub_1005057FC((uint64_t *)&unk_101674160);
    memcpy(v12, v13, *(void *)(*(void *)(v20 - 8) + 64));
    return a1;
  }
  uint64_t v18 = *v13;
  unint64_t v19 = v13[1];
  sub_100510D4C(*v13, v19);
  *uint64_t v12 = v18;
  v12[1] = v19;
  (*(void (**)(char *, char *, uint64_t))(v26 + 16))((char *)v12 + *(int *)(v14 + 20), (char *)v13 + *(int *)(v14 + 20), v27);
  (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  return a1;
}

_OWORD *sub_100C2258C(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for UnknownStorage();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32);
  v10(v7, v8, v9);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = (_OWORD *)((char *)a1 + v11);
  uint64_t v13 = (_OWORD *)((char *)a2 + v11);
  uint64_t v14 = type metadata accessor for CRLProto_Data(0);
  uint64_t v15 = *(void *)(v14 - 8);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
  {
    uint64_t v16 = sub_1005057FC((uint64_t *)&unk_101674160);
    memcpy(v12, v13, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    *uint64_t v12 = *v13;
    v10((char *)v12 + *(int *)(v14 + 20), (char *)v13 + *(int *)(v14 + 20), v9);
    (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  }
  return a1;
}

void *sub_100C22700(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for UnknownStorage();
  uint64_t v23 = *(void *)(v10 - 8);
  uint64_t v24 = v10;
  uint64_t v11 = *(void (**)(char *, char *))(v23 + 40);
  v11(v8, v9);
  uint64_t v12 = *(int *)(a3 + 24);
  uint64_t v13 = (void *)((char *)a1 + v12);
  uint64_t v14 = (void *)((char *)a2 + v12);
  uint64_t v15 = type metadata accessor for CRLProto_Data(0);
  uint64_t v16 = *(void *)(v15 - 8);
  int v17 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v16 + 48);
  LODWORD(v9) = v17(v13, 1, v15);
  int v18 = v17(v14, 1, v15);
  if (!v9)
  {
    if (!v18)
    {
      uint64_t v21 = *v13;
      unint64_t v22 = v13[1];
      *(_OWORD *)uint64_t v13 = *(_OWORD *)v14;
      sub_100510084(v21, v22);
      ((void (*)(char *, char *, uint64_t))v11)((char *)v13 + *(int *)(v15 + 20), (char *)v14 + *(int *)(v15 + 20), v24);
      return a1;
    }
    sub_100C16A08((uint64_t)v13, type metadata accessor for CRLProto_Data);
    goto LABEL_6;
  }
  if (v18)
  {
LABEL_6:
    uint64_t v19 = sub_1005057FC((uint64_t *)&unk_101674160);
    memcpy(v13, v14, *(void *)(*(void *)(v19 - 8) + 64));
    return a1;
  }
  *(_OWORD *)uint64_t v13 = *(_OWORD *)v14;
  (*(void (**)(char *, char *, uint64_t))(v23 + 32))((char *)v13 + *(int *)(v15 + 20), (char *)v14 + *(int *)(v15 + 20), v24);
  (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  return a1;
}

uint64_t sub_100C22920(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100C22934);
}

uint64_t sub_100C22934(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for UnknownStorage();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a1 + *(int *)(a3 + 20);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_1005057FC((uint64_t *)&unk_101674160);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = a1 + *(int *)(a3 + 24);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t sub_100C22A64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100C22A78);
}

uint64_t sub_100C22A78(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for UnknownStorage();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = v5 + *(int *)(a4 + 20);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_1005057FC((uint64_t *)&unk_101674160);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = v5 + *(int *)(a4 + 24);
      return v14(v16, a2, a2, v15);
    }
  }
  return result;
}

void sub_100C22BA8()
{
}

uint64_t *sub_100C22BB4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    *int v3 = *a2;
    int v3 = (uint64_t *)(v11 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    a1[2] = a2[2];
    uint64_t v6 = *(int *)(a3 + 24);
    uint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    uint64_t v9 = type metadata accessor for UnknownStorage();
    uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
    swift_bridgeObjectRetain();
    v10(v7, v8, v9);
  }
  return v3;
}

void *sub_100C22CA8(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  a1[2] = a2[2];
  uint64_t v5 = *(int *)(a3 + 24);
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = type metadata accessor for UnknownStorage();
  uint64_t v9 = *(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 16);
  swift_bridgeObjectRetain();
  v9(v6, v7, v8);
  return a1;
}

void *sub_100C22D48(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for UnknownStorage();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

uint64_t sub_100C22DEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  uint64_t v4 = *(int *)(a3 + 24);
  uint64_t v5 = a1 + v4;
  uint64_t v6 = a2 + v4;
  uint64_t v7 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

void *sub_100C22E70(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  uint64_t v7 = *(int *)(a3 + 24);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for UnknownStorage();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t sub_100C22F04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100C22F18);
}

uint64_t sub_100C22F1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100C22F30);
}

uint64_t sub_100C22F30(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for UnknownStorage();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 24);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_100C22FD8()
{
  return sub_100C28498();
}

uint64_t *sub_100C22FF0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for UnknownStorage();
    uint64_t v8 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    uint64_t v9 = *(int *)(a3 + 20);
    uint64_t v10 = (uint64_t *)((char *)a1 + v9);
    uint64_t v11 = (uint64_t *)((char *)a2 + v9);
    uint64_t v12 = type metadata accessor for CRLProto_Data(0);
    uint64_t v13 = *(void *)(v12 - 8);
    uint64_t v27 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v13 + 48);
    if (v27(v11, 1, v12))
    {
      uint64_t v14 = sub_1005057FC((uint64_t *)&unk_101674160);
      memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      unint64_t v25 = v8;
      uint64_t v26 = v7;
      uint64_t v16 = *v11;
      unint64_t v17 = v11[1];
      sub_100510D4C(*v11, v17);
      *uint64_t v10 = v16;
      v10[1] = v17;
      uint64_t v8 = v25;
      uint64_t v7 = v26;
      v25((void *)((char *)v10 + *(int *)(v12 + 20)), (uint64_t *)((char *)v11 + *(int *)(v12 + 20)), v26);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
    }
    uint64_t v18 = *(int *)(a3 + 24);
    uint64_t v19 = (uint64_t *)((char *)a1 + v18);
    uint64_t v20 = (uint64_t *)((char *)a2 + v18);
    if (v27(v20, 1, v12))
    {
      uint64_t v21 = sub_1005057FC((uint64_t *)&unk_101674160);
      memcpy(v19, v20, *(void *)(*(void *)(v21 - 8) + 64));
    }
    else
    {
      uint64_t v22 = *v20;
      unint64_t v23 = v20[1];
      sub_100510D4C(*v20, v23);
      *uint64_t v19 = v22;
      v19[1] = v23;
      v8((void *)((char *)v19 + *(int *)(v12 + 20)), (uint64_t *)((char *)v20 + *(int *)(v12 + 20)), v7);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v13 + 56))(v19, 0, 1, v12);
    }
  }
  return a1;
}

uint64_t sub_100C2328C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UnknownStorage();
  uint64_t v11 = *(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
  v11(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = type metadata accessor for CRLProto_Data(0);
  uint64_t v7 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48);
  if (!v7(v5, 1, v6))
  {
    sub_100510084(*(void *)v5, *(void *)(v5 + 8));
    v11(v5 + *(int *)(v6 + 20), v4);
  }
  uint64_t v8 = a1 + *(int *)(a2 + 24);
  uint64_t result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v7)(v8, 1, v6);
  if (!result)
  {
    sub_100510084(*(void *)v8, *(void *)(v8 + 8));
    uint64_t v10 = v8 + *(int *)(v6 + 20);
    return ((uint64_t (*)(uint64_t, uint64_t))v11)(v10, v4);
  }
  return result;
}

uint64_t sub_100C233F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage();
  uint64_t v7 = (void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16);
  uint64_t v31 = (void (*)(char *, char *, uint64_t))*v7;
  (*v7)(a1, a2, v6);
  uint64_t v32 = a3;
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (uint64_t *)(a2 + v8);
  uint64_t v11 = type metadata accessor for CRLProto_Data(0);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v12 + 48);
  if (v13(v10, 1, v11))
  {
    uint64_t v14 = sub_1005057FC((uint64_t *)&unk_101674160);
    memcpy(v9, v10, *(void *)(*(void *)(v14 - 8) + 64));
    uint64_t v15 = v31;
  }
  else
  {
    uint64_t v29 = v6;
    uint64_t v30 = a1;
    uint64_t v16 = *v10;
    unint64_t v17 = v10[1];
    sub_100510D4C(*v10, v17);
    *uint64_t v9 = v16;
    v9[1] = v17;
    uint64_t v6 = v29;
    a1 = v30;
    uint64_t v18 = *(int *)(v11 + 20);
    uint64_t v19 = (char *)v10 + v18;
    uint64_t v15 = v31;
    v31((char *)v9 + v18, v19, v29);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  uint64_t v20 = v12;
  uint64_t v21 = *(int *)(v32 + 24);
  uint64_t v22 = (void *)(a1 + v21);
  unint64_t v23 = (uint64_t *)(a2 + v21);
  if (v13(v23, 1, v11))
  {
    uint64_t v24 = sub_1005057FC((uint64_t *)&unk_101674160);
    memcpy(v22, v23, *(void *)(*(void *)(v24 - 8) + 64));
  }
  else
  {
    unint64_t v25 = v15;
    uint64_t v26 = *v23;
    unint64_t v27 = v23[1];
    sub_100510D4C(*v23, v27);
    *uint64_t v22 = v26;
    v22[1] = v27;
    v25((char *)v22 + *(int *)(v11 + 20), (char *)v23 + *(int *)(v11 + 20), v6);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v20 + 56))(v22, 0, 1, v11);
  }
  return a1;
}

uint64_t sub_100C23644(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage();
  uint64_t v38 = *(void *)(v6 - 8);
  unint64_t v36 = *(void (**)(uint64_t, uint64_t, uint64_t))(v38 + 24);
  v36(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (uint64_t *)(a1 + v7);
  uint64_t v9 = (uint64_t *)(a2 + v7);
  uint64_t v10 = type metadata accessor for CRLProto_Data(0);
  uint64_t v37 = *(void *)(v10 - 8);
  uint64_t v11 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v37 + 48);
  int v12 = v11(v8, 1, v10);
  int v13 = v11(v9, 1, v10);
  if (v12)
  {
    if (!v13)
    {
      uint64_t v34 = v6;
      uint64_t v14 = *v9;
      unint64_t v15 = v9[1];
      sub_100510D4C(*v9, v15);
      *uint64_t v8 = v14;
      v8[1] = v15;
      uint64_t v6 = v34;
      (*(void (**)(char *, char *, uint64_t))(v38 + 16))((char *)v8 + *(int *)(v10 + 20), (char *)v9 + *(int *)(v10 + 20), v34);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v37 + 56))(v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    sub_100C16A08((uint64_t)v8, type metadata accessor for CRLProto_Data);
LABEL_6:
    uint64_t v16 = sub_1005057FC((uint64_t *)&unk_101674160);
    memcpy(v8, v9, *(void *)(*(void *)(v16 - 8) + 64));
    goto LABEL_7;
  }
  uint64_t v35 = v6;
  uint64_t v26 = *v9;
  unint64_t v27 = v9[1];
  sub_100510D4C(*v9, v27);
  uint64_t v28 = *v8;
  unint64_t v29 = v8[1];
  *uint64_t v8 = v26;
  v8[1] = v27;
  uint64_t v6 = v35;
  sub_100510084(v28, v29);
  v36((uint64_t)v8 + *(int *)(v10 + 20), (uint64_t)v9 + *(int *)(v10 + 20), v35);
LABEL_7:
  uint64_t v17 = *(int *)(a3 + 24);
  uint64_t v18 = (uint64_t *)(a1 + v17);
  uint64_t v19 = (uint64_t *)(a2 + v17);
  int v20 = v11((uint64_t *)(a1 + v17), 1, v10);
  int v21 = v11(v19, 1, v10);
  if (!v20)
  {
    if (!v21)
    {
      uint64_t v30 = *v19;
      unint64_t v31 = v19[1];
      sub_100510D4C(*v19, v31);
      uint64_t v32 = *v18;
      unint64_t v33 = v18[1];
      *uint64_t v18 = v30;
      v18[1] = v31;
      sub_100510084(v32, v33);
      v36((uint64_t)v18 + *(int *)(v10 + 20), (uint64_t)v19 + *(int *)(v10 + 20), v6);
      return a1;
    }
    sub_100C16A08((uint64_t)v18, type metadata accessor for CRLProto_Data);
    goto LABEL_12;
  }
  if (v21)
  {
LABEL_12:
    uint64_t v24 = sub_1005057FC((uint64_t *)&unk_101674160);
    memcpy(v18, v19, *(void *)(*(void *)(v24 - 8) + 64));
    return a1;
  }
  uint64_t v22 = *v19;
  unint64_t v23 = v19[1];
  sub_100510D4C(*v19, v23);
  *uint64_t v18 = v22;
  v18[1] = v23;
  (*(void (**)(char *, char *, uint64_t))(v38 + 16))((char *)v18 + *(int *)(v10 + 20), (char *)v19 + *(int *)(v10 + 20), v6);
  (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v37 + 56))(v18, 0, 1, v10);
  return a1;
}

char *sub_100C239C0(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage();
  uint64_t v7 = *(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  uint64_t v21 = a3;
  uint64_t v22 = a1;
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  uint64_t v11 = type metadata accessor for CRLProto_Data(0);
  uint64_t v12 = *(void *)(v11 - 8);
  int v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
  if (v13(v10, 1, v11))
  {
    uint64_t v14 = sub_1005057FC((uint64_t *)&unk_101674160);
    memcpy(v9, v10, *(void *)(*(void *)(v14 - 8) + 64));
  }
  else
  {
    *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
    v7(&v9[*(int *)(v11 + 20)], &v10[*(int *)(v11 + 20)], v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  unint64_t v15 = v7;
  uint64_t v16 = *(int *)(v21 + 24);
  uint64_t v17 = &v22[v16];
  uint64_t v18 = &a2[v16];
  if (v13(v18, 1, v11))
  {
    uint64_t v19 = sub_1005057FC((uint64_t *)&unk_101674160);
    memcpy(v17, v18, *(void *)(*(void *)(v19 - 8) + 64));
  }
  else
  {
    *(_OWORD *)uint64_t v17 = *(_OWORD *)v18;
    v15(&v17[*(int *)(v11 + 20)], &v18[*(int *)(v11 + 20)], v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v17, 0, 1, v11);
  }
  return v22;
}

uint64_t sub_100C23BDC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage();
  uint64_t v28 = *(void *)(v6 - 8);
  uint64_t v26 = *(void (**)(uint64_t, uint64_t, uint64_t))(v28 + 40);
  v26(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)(a1 + v7);
  uint64_t v9 = (char *)(a2 + v7);
  uint64_t v10 = type metadata accessor for CRLProto_Data(0);
  uint64_t v27 = *(void *)(v10 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v27 + 48);
  int v12 = v11(v8, 1, v10);
  int v13 = v11(v9, 1, v10);
  if (v12)
  {
    if (!v13)
    {
      *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
      (*(void (**)(char *, char *, uint64_t))(v28 + 32))(&v8[*(int *)(v10 + 20)], &v9[*(int *)(v10 + 20)], v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v27 + 56))(v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    sub_100C16A08((uint64_t)v8, type metadata accessor for CRLProto_Data);
LABEL_6:
    uint64_t v14 = sub_1005057FC((uint64_t *)&unk_101674160);
    memcpy(v8, v9, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  uint64_t v22 = *(void *)v8;
  unint64_t v23 = *((void *)v8 + 1);
  *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
  sub_100510084(v22, v23);
  v26((uint64_t)&v8[*(int *)(v10 + 20)], (uint64_t)&v9[*(int *)(v10 + 20)], v6);
LABEL_7:
  uint64_t v15 = *(int *)(a3 + 24);
  uint64_t v16 = (uint64_t *)(a1 + v15);
  uint64_t v17 = (char *)(a2 + v15);
  int v18 = v11((char *)(a1 + v15), 1, v10);
  int v19 = v11(v17, 1, v10);
  if (!v18)
  {
    if (!v19)
    {
      uint64_t v24 = *v16;
      unint64_t v25 = v16[1];
      *(_OWORD *)uint64_t v16 = *(_OWORD *)v17;
      sub_100510084(v24, v25);
      v26((uint64_t)v16 + *(int *)(v10 + 20), (uint64_t)&v17[*(int *)(v10 + 20)], v6);
      return a1;
    }
    sub_100C16A08((uint64_t)v16, type metadata accessor for CRLProto_Data);
    goto LABEL_12;
  }
  if (v19)
  {
LABEL_12:
    uint64_t v20 = sub_1005057FC((uint64_t *)&unk_101674160);
    memcpy(v16, v17, *(void *)(*(void *)(v20 - 8) + 64));
    return a1;
  }
  *(_OWORD *)uint64_t v16 = *(_OWORD *)v17;
  (*(void (**)(char *, char *, uint64_t))(v28 + 32))((char *)v16 + *(int *)(v10 + 20), &v17[*(int *)(v10 + 20)], v6);
  (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v27 + 56))(v16, 0, 1, v10);
  return a1;
}

uint64_t sub_100C23F18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100C23F2C);
}

uint64_t sub_100C23F30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100C23F44);
}

void sub_100C23F48()
{
  type metadata accessor for UnknownStorage();
  if (v0 <= 0x3F)
  {
    sub_100C1A890(319, (unint64_t *)&unk_101697808, (void (*)(uint64_t))type metadata accessor for CRLProto_Data);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t *sub_100C2402C(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v18 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_DWORD *)a1 = *(_DWORD *)a2;
    a1[1] = a2[1];
    uint64_t v7 = a3[6];
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = type metadata accessor for UnknownStorage();
    uint64_t v11 = (void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
    uint64_t v35 = *v11;
    (*v11)(v8, v9, v10);
    uint64_t v12 = a3[7];
    int v13 = (uint64_t *)((char *)v4 + v12);
    uint64_t v14 = (uint64_t *)((char *)a2 + v12);
    uint64_t v15 = type metadata accessor for CRLProto_Data(0);
    uint64_t v16 = *(void *)(v15 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
    {
      uint64_t v17 = sub_1005057FC((uint64_t *)&unk_101674160);
      memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
    }
    else
    {
      uint64_t v34 = v10;
      uint64_t v19 = *v14;
      unint64_t v20 = v14[1];
      sub_100510D4C(*v14, v20);
      *int v13 = v19;
      v13[1] = v20;
      uint64_t v10 = v34;
      v35((char *)v13 + *(int *)(v15 + 20), (char *)v14 + *(int *)(v15 + 20), v34);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
    }
    uint64_t v21 = a3[8];
    uint64_t v22 = (uint64_t *)((char *)v4 + v21);
    unint64_t v23 = (uint64_t *)((char *)a2 + v21);
    uint64_t v24 = type metadata accessor for CRLProto_Point(0);
    uint64_t v25 = *(void *)(v24 - 8);
    if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v25 + 48))(v23, 1, v24))
    {
      uint64_t v26 = sub_1005057FC(&qword_10168E570);
      memcpy(v22, v23, *(void *)(*(void *)(v26 - 8) + 64));
    }
    else
    {
      *uint64_t v22 = *v23;
      v35((char *)v22 + *(int *)(v24 + 24), (char *)v23 + *(int *)(v24 + 24), v10);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
    }
    uint64_t v27 = a3[9];
    uint64_t v28 = (uint64_t *)((char *)v4 + v27);
    unint64_t v29 = (uint64_t *)((char *)a2 + v27);
    uint64_t v30 = type metadata accessor for CRLProto_Size(0);
    uint64_t v31 = *(void *)(v30 - 8);
    if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v31 + 48))(v29, 1, v30))
    {
      uint64_t v32 = sub_1005057FC(&qword_10168E578);
      memcpy(v28, v29, *(void *)(*(void *)(v32 - 8) + 64));
    }
    else
    {
      void *v28 = *v29;
      v35((char *)v28 + *(int *)(v30 + 24), (char *)v29 + *(int *)(v30 + 24), v10);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v31 + 56))(v28, 0, 1, v30);
    }
  }
  return v4;
}

uint64_t sub_100C24414(uint64_t a1, int *a2)
{
  uint64_t v4 = a1 + a2[6];
  uint64_t v5 = type metadata accessor for UnknownStorage();
  uint64_t v14 = *(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  v14(v4, v5);
  uint64_t v6 = a1 + a2[7];
  uint64_t v7 = type metadata accessor for CRLProto_Data(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v6, 1, v7))
  {
    sub_100510084(*(void *)v6, *(void *)(v6 + 8));
    v14(v6 + *(int *)(v7 + 20), v5);
  }
  uint64_t v8 = a1 + a2[8];
  uint64_t v9 = type metadata accessor for CRLProto_Point(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48))(v8, 1, v9)) {
    v14(v8 + *(int *)(v9 + 24), v5);
  }
  uint64_t v10 = a1 + a2[9];
  uint64_t v11 = type metadata accessor for CRLProto_Size(0);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48))(v10, 1, v11);
  if (!result)
  {
    uint64_t v13 = v10 + *(int *)(v11 + 24);
    return ((uint64_t (*)(uint64_t, uint64_t))v14)(v13, v5);
  }
  return result;
}

uint64_t sub_100C245FC(uint64_t a1, uint64_t a2, int *a3)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  uint64_t v6 = a3[6];
  uint64_t v7 = (char *)(a1 + v6);
  uint64_t v8 = (char *)(a2 + v6);
  uint64_t v9 = type metadata accessor for UnknownStorage();
  uint64_t v10 = (void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
  unint64_t v33 = *v10;
  (*v10)(v7, v8, v9);
  uint64_t v11 = a3[7];
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (uint64_t *)(a2 + v11);
  uint64_t v14 = type metadata accessor for CRLProto_Data(0);
  uint64_t v15 = *(void *)(v14 - 8);
  if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
  {
    uint64_t v16 = sub_1005057FC((uint64_t *)&unk_101674160);
    memcpy(v12, v13, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    uint64_t v32 = v9;
    uint64_t v17 = *v13;
    unint64_t v18 = v13[1];
    sub_100510D4C(*v13, v18);
    *uint64_t v12 = v17;
    v12[1] = v18;
    uint64_t v9 = v32;
    v33((char *)v12 + *(int *)(v14 + 20), (char *)v13 + *(int *)(v14 + 20), v32);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  }
  uint64_t v19 = a3[8];
  unint64_t v20 = (void *)(a1 + v19);
  uint64_t v21 = (void *)(a2 + v19);
  uint64_t v22 = type metadata accessor for CRLProto_Point(0);
  uint64_t v23 = *(void *)(v22 - 8);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22))
  {
    uint64_t v24 = sub_1005057FC(&qword_10168E570);
    memcpy(v20, v21, *(void *)(*(void *)(v24 - 8) + 64));
  }
  else
  {
    *unint64_t v20 = *v21;
    v33((char *)v20 + *(int *)(v22 + 24), (char *)v21 + *(int *)(v22 + 24), v9);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
  }
  uint64_t v25 = a3[9];
  uint64_t v26 = (void *)(a1 + v25);
  uint64_t v27 = (void *)(a2 + v25);
  uint64_t v28 = type metadata accessor for CRLProto_Size(0);
  uint64_t v29 = *(void *)(v28 - 8);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v29 + 48))(v27, 1, v28))
  {
    uint64_t v30 = sub_1005057FC(&qword_10168E578);
    memcpy(v26, v27, *(void *)(*(void *)(v30 - 8) + 64));
  }
  else
  {
    *uint64_t v26 = *v27;
    v33((char *)v26 + *(int *)(v28 + 24), (char *)v27 + *(int *)(v28 + 24), v9);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v29 + 56))(v26, 0, 1, v28);
  }
  return a1;
}

uint64_t sub_100C24994(uint64_t a1, uint64_t a2, int *a3)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  uint64_t v6 = a3[6];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = type metadata accessor for UnknownStorage();
  uint64_t v45 = *(void *)(v9 - 8);
  uint64_t v46 = v9;
  uint64_t v44 = *(void (**)(uint64_t, uint64_t))(v45 + 24);
  v44(v7, v8);
  uint64_t v10 = a3[7];
  uint64_t v11 = (uint64_t *)(a1 + v10);
  uint64_t v12 = (uint64_t *)(a2 + v10);
  uint64_t v13 = type metadata accessor for CRLProto_Data(0);
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v14 + 48);
  int v16 = v15(v11, 1, v13);
  int v17 = v15(v12, 1, v13);
  if (v16)
  {
    if (!v17)
    {
      uint64_t v18 = *v12;
      unint64_t v19 = v12[1];
      sub_100510D4C(*v12, v19);
      *uint64_t v11 = v18;
      v11[1] = v19;
      (*(void (**)(char *, char *, uint64_t))(v45 + 16))((char *)v11 + *(int *)(v13 + 20), (char *)v12 + *(int *)(v13 + 20), v46);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v17)
  {
    sub_100C16A08((uint64_t)v11, type metadata accessor for CRLProto_Data);
LABEL_6:
    uint64_t v20 = sub_1005057FC((uint64_t *)&unk_101674160);
    memcpy(v11, v12, *(void *)(*(void *)(v20 - 8) + 64));
    goto LABEL_7;
  }
  uint64_t v40 = *v12;
  unint64_t v41 = v12[1];
  sub_100510D4C(*v12, v41);
  uint64_t v42 = *v11;
  unint64_t v43 = v11[1];
  *uint64_t v11 = v40;
  v11[1] = v41;
  sub_100510084(v42, v43);
  ((void (*)(char *, char *, uint64_t))v44)((char *)v11 + *(int *)(v13 + 20), (char *)v12 + *(int *)(v13 + 20), v46);
LABEL_7:
  uint64_t v21 = a3[8];
  uint64_t v22 = (char *)(a1 + v21);
  uint64_t v23 = (char *)(a2 + v21);
  uint64_t v24 = type metadata accessor for CRLProto_Point(0);
  uint64_t v25 = *(void *)(v24 - 8);
  uint64_t v26 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v25 + 48);
  int v27 = v26(v22, 1, v24);
  int v28 = v26(v23, 1, v24);
  if (v27)
  {
    if (!v28)
    {
      *(_DWORD *)uint64_t v22 = *(_DWORD *)v23;
      *((_DWORD *)v22 + 1) = *((_DWORD *)v23 + 1);
      (*(void (**)(char *, char *, uint64_t))(v45 + 16))(&v22[*(int *)(v24 + 24)], &v23[*(int *)(v24 + 24)], v46);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v28)
  {
    sub_100C16A08((uint64_t)v22, type metadata accessor for CRLProto_Point);
LABEL_12:
    uint64_t v29 = sub_1005057FC(&qword_10168E570);
    memcpy(v22, v23, *(void *)(*(void *)(v29 - 8) + 64));
    goto LABEL_13;
  }
  *(_DWORD *)uint64_t v22 = *(_DWORD *)v23;
  *((_DWORD *)v22 + 1) = *((_DWORD *)v23 + 1);
  ((void (*)(char *, char *, uint64_t))v44)(&v22[*(int *)(v24 + 24)], &v23[*(int *)(v24 + 24)], v46);
LABEL_13:
  uint64_t v30 = a3[9];
  uint64_t v31 = (_DWORD *)(a1 + v30);
  uint64_t v32 = (_DWORD *)(a2 + v30);
  uint64_t v33 = type metadata accessor for CRLProto_Size(0);
  uint64_t v34 = *(void *)(v33 - 8);
  uint64_t v35 = *(uint64_t (**)(_DWORD *, uint64_t, uint64_t))(v34 + 48);
  int v36 = v35(v31, 1, v33);
  int v37 = v35(v32, 1, v33);
  if (!v36)
  {
    if (!v37)
    {
      *uint64_t v31 = *v32;
      v31[1] = v32[1];
      ((void (*)(char *, char *, uint64_t))v44)((char *)v31 + *(int *)(v33 + 24), (char *)v32 + *(int *)(v33 + 24), v46);
      return a1;
    }
    sub_100C16A08((uint64_t)v31, type metadata accessor for CRLProto_Size);
    goto LABEL_18;
  }
  if (v37)
  {
LABEL_18:
    uint64_t v38 = sub_1005057FC(&qword_10168E578);
    memcpy(v31, v32, *(void *)(*(void *)(v38 - 8) + 64));
    return a1;
  }
  *uint64_t v31 = *v32;
  v31[1] = v32[1];
  (*(void (**)(char *, char *, uint64_t))(v45 + 16))((char *)v31 + *(int *)(v33 + 24), (char *)v32 + *(int *)(v33 + 24), v46);
  (*(void (**)(_DWORD *, void, uint64_t, uint64_t))(v34 + 56))(v31, 0, 1, v33);
  return a1;
}

uint64_t sub_100C24EA8(uint64_t a1, uint64_t a2, int *a3)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  uint64_t v6 = a3[6];
  uint64_t v7 = (char *)(a1 + v6);
  uint64_t v8 = (char *)(a2 + v6);
  uint64_t v9 = type metadata accessor for UnknownStorage();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32);
  v10(v7, v8, v9);
  uint64_t v11 = a3[7];
  uint64_t v12 = (_OWORD *)(a1 + v11);
  uint64_t v13 = (_OWORD *)(a2 + v11);
  uint64_t v14 = type metadata accessor for CRLProto_Data(0);
  uint64_t v15 = *(void *)(v14 - 8);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
  {
    uint64_t v16 = sub_1005057FC((uint64_t *)&unk_101674160);
    memcpy(v12, v13, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    *uint64_t v12 = *v13;
    v10((char *)v12 + *(int *)(v14 + 20), (char *)v13 + *(int *)(v14 + 20), v9);
    (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  }
  uint64_t v17 = a3[8];
  uint64_t v18 = (void *)(a1 + v17);
  unint64_t v19 = (void *)(a2 + v17);
  uint64_t v20 = type metadata accessor for CRLProto_Point(0);
  uint64_t v21 = *(void *)(v20 - 8);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
  {
    uint64_t v22 = sub_1005057FC(&qword_10168E570);
    memcpy(v18, v19, *(void *)(*(void *)(v22 - 8) + 64));
  }
  else
  {
    *uint64_t v18 = *v19;
    v10((char *)v18 + *(int *)(v20 + 24), (char *)v19 + *(int *)(v20 + 24), v9);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
  }
  uint64_t v23 = a3[9];
  uint64_t v24 = (void *)(a1 + v23);
  uint64_t v25 = (void *)(a2 + v23);
  uint64_t v26 = type metadata accessor for CRLProto_Size(0);
  uint64_t v27 = *(void *)(v26 - 8);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26))
  {
    uint64_t v28 = sub_1005057FC(&qword_10168E578);
    memcpy(v24, v25, *(void *)(*(void *)(v28 - 8) + 64));
  }
  else
  {
    *uint64_t v24 = *v25;
    v10((char *)v24 + *(int *)(v26 + 24), (char *)v25 + *(int *)(v26 + 24), v9);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
  }
  return a1;
}

uint64_t sub_100C2520C(uint64_t a1, uint64_t a2, int *a3)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  uint64_t v6 = a3[6];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = type metadata accessor for UnknownStorage();
  uint64_t v41 = *(void *)(v9 - 8);
  uint64_t v42 = v9;
  uint64_t v40 = *(void (**)(uint64_t, uint64_t))(v41 + 40);
  v40(v7, v8);
  uint64_t v10 = a3[7];
  uint64_t v11 = (char *)(a1 + v10);
  uint64_t v12 = (char *)(a2 + v10);
  uint64_t v13 = type metadata accessor for CRLProto_Data(0);
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48);
  int v16 = v15(v11, 1, v13);
  int v17 = v15(v12, 1, v13);
  if (v16)
  {
    if (!v17)
    {
      *(_OWORD *)uint64_t v11 = *(_OWORD *)v12;
      (*(void (**)(char *, char *, uint64_t))(v41 + 32))(&v11[*(int *)(v13 + 20)], &v12[*(int *)(v13 + 20)], v42);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v17)
  {
    sub_100C16A08((uint64_t)v11, type metadata accessor for CRLProto_Data);
LABEL_6:
    uint64_t v18 = sub_1005057FC((uint64_t *)&unk_101674160);
    memcpy(v11, v12, *(void *)(*(void *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  uint64_t v38 = *(void *)v11;
  unint64_t v39 = *((void *)v11 + 1);
  *(_OWORD *)uint64_t v11 = *(_OWORD *)v12;
  sub_100510084(v38, v39);
  ((void (*)(char *, char *, uint64_t))v40)(&v11[*(int *)(v13 + 20)], &v12[*(int *)(v13 + 20)], v42);
LABEL_7:
  uint64_t v19 = a3[8];
  uint64_t v20 = (char *)(a1 + v19);
  uint64_t v21 = (char *)(a2 + v19);
  uint64_t v22 = type metadata accessor for CRLProto_Point(0);
  uint64_t v23 = *(void *)(v22 - 8);
  uint64_t v24 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v23 + 48);
  int v25 = v24(v20, 1, v22);
  int v26 = v24(v21, 1, v22);
  if (v25)
  {
    if (!v26)
    {
      *(void *)uint64_t v20 = *(void *)v21;
      (*(void (**)(char *, char *, uint64_t))(v41 + 32))(&v20[*(int *)(v22 + 24)], &v21[*(int *)(v22 + 24)], v42);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v26)
  {
    sub_100C16A08((uint64_t)v20, type metadata accessor for CRLProto_Point);
LABEL_12:
    uint64_t v27 = sub_1005057FC(&qword_10168E570);
    memcpy(v20, v21, *(void *)(*(void *)(v27 - 8) + 64));
    goto LABEL_13;
  }
  *(void *)uint64_t v20 = *(void *)v21;
  ((void (*)(char *, char *, uint64_t))v40)(&v20[*(int *)(v22 + 24)], &v21[*(int *)(v22 + 24)], v42);
LABEL_13:
  uint64_t v28 = a3[9];
  uint64_t v29 = (void *)(a1 + v28);
  uint64_t v30 = (void *)(a2 + v28);
  uint64_t v31 = type metadata accessor for CRLProto_Size(0);
  uint64_t v32 = *(void *)(v31 - 8);
  uint64_t v33 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v32 + 48);
  int v34 = v33(v29, 1, v31);
  int v35 = v33(v30, 1, v31);
  if (!v34)
  {
    if (!v35)
    {
      *uint64_t v29 = *v30;
      ((void (*)(char *, char *, uint64_t))v40)((char *)v29 + *(int *)(v31 + 24), (char *)v30 + *(int *)(v31 + 24), v42);
      return a1;
    }
    sub_100C16A08((uint64_t)v29, type metadata accessor for CRLProto_Size);
    goto LABEL_18;
  }
  if (v35)
  {
LABEL_18:
    uint64_t v36 = sub_1005057FC(&qword_10168E578);
    memcpy(v29, v30, *(void *)(*(void *)(v36 - 8) + 64));
    return a1;
  }
  *uint64_t v29 = *v30;
  (*(void (**)(char *, char *, uint64_t))(v41 + 32))((char *)v29 + *(int *)(v31 + 24), (char *)v30 + *(int *)(v31 + 24), v42);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v32 + 56))(v29, 0, 1, v31);
  return a1;
}

uint64_t sub_100C256E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100C256FC);
}

uint64_t sub_100C256FC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage();
  if (*(_DWORD *)(*(void *)(v6 - 8) + 84) == a2)
  {
    uint64_t v7 = v6;
    uint64_t v8 = *(void *)(v6 - 8);
    uint64_t v9 = a3[6];
LABEL_7:
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
    return v12(a1 + v9, a2, v7);
  }
  uint64_t v10 = sub_1005057FC((uint64_t *)&unk_101674160);
  if (*(_DWORD *)(*(void *)(v10 - 8) + 84) == a2)
  {
    uint64_t v7 = v10;
    uint64_t v8 = *(void *)(v10 - 8);
    uint64_t v9 = a3[7];
    goto LABEL_7;
  }
  uint64_t v11 = sub_1005057FC(&qword_10168E570);
  if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a2)
  {
    uint64_t v7 = v11;
    uint64_t v8 = *(void *)(v11 - 8);
    uint64_t v9 = a3[8];
    goto LABEL_7;
  }
  uint64_t v14 = sub_1005057FC(&qword_10168E578);
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48);
  uint64_t v16 = v14;
  uint64_t v17 = a1 + a3[9];

  return v15(v17, a2, v16);
}

uint64_t sub_100C2589C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100C258B0);
}

uint64_t sub_100C258B0(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8 = type metadata accessor for UnknownStorage();
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a3)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a4[6];
LABEL_7:
    uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);
    return v14(a1 + v11, a2, a2, v9);
  }
  uint64_t v12 = sub_1005057FC((uint64_t *)&unk_101674160);
  if (*(_DWORD *)(*(void *)(v12 - 8) + 84) == a3)
  {
    uint64_t v9 = v12;
    uint64_t v10 = *(void *)(v12 - 8);
    uint64_t v11 = a4[7];
    goto LABEL_7;
  }
  uint64_t v13 = sub_1005057FC(&qword_10168E570);
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
  {
    uint64_t v9 = v13;
    uint64_t v10 = *(void *)(v13 - 8);
    uint64_t v11 = a4[8];
    goto LABEL_7;
  }
  uint64_t v16 = sub_1005057FC(&qword_10168E578);
  uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  uint64_t v18 = v16;
  uint64_t v19 = a1 + a4[9];

  return v17(v19, a2, a2, v18);
}

void sub_100C25A5C()
{
  type metadata accessor for UnknownStorage();
  if (v0 <= 0x3F)
  {
    sub_100C1A890(319, (unint64_t *)&unk_101697808, (void (*)(uint64_t))type metadata accessor for CRLProto_Data);
    if (v1 <= 0x3F)
    {
      sub_100C1A890(319, (unint64_t *)&unk_1016981D0, (void (*)(uint64_t))type metadata accessor for CRLProto_Point);
      if (v2 <= 0x3F)
      {
        sub_100C1A890(319, (unint64_t *)&unk_1016989E8, (void (*)(uint64_t))type metadata accessor for CRLProto_Size);
        if (v3 <= 0x3F) {
          swift_initStructMetadata();
        }
      }
    }
  }
}

uint64_t sub_100C25C10(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = type metadata accessor for UnknownStorage();
  uint64_t v10 = *(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  v10(v4, v5);
  uint64_t v6 = a1 + *(int *)(a2 + 24);
  uint64_t v7 = type metadata accessor for CRLProto_Data(0);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v6, 1, v7);
  if (!result)
  {
    sub_100510084(*(void *)v6, *(void *)(v6 + 8));
    uint64_t v9 = v6 + *(int *)(v7 + 20);
    return ((uint64_t (*)(uint64_t, uint64_t))v10)(v9, v5);
  }
  return result;
}

uint64_t sub_100C25D2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100C25D40);
}

uint64_t sub_100C25D44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100C25D58);
}

void sub_100C25D5C()
{
}

void *sub_100C25D6C(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = (void *)a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v18 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(void *)a1 = *a2;
    *(_DWORD *)(a1 + 8) = *((_DWORD *)a2 + 2);
    *(unsigned char *)(a1 + 12) = *((unsigned char *)a2 + 12);
    *(void *)(a1 + 16) = a2[2];
    uint64_t v7 = a3[8];
    uint64_t v8 = a1 + v7;
    uint64_t v9 = (uint64_t)a2 + v7;
    uint64_t v10 = type metadata accessor for UnknownStorage();
    uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16);
    v11(v8, v9, v10);
    uint64_t v12 = a3[9];
    uint64_t v13 = (void *)((char *)v4 + v12);
    uint64_t v14 = (uint64_t *)((char *)a2 + v12);
    uint64_t v15 = type metadata accessor for CRLProto_Data(0);
    uint64_t v16 = *(void *)(v15 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
    {
      uint64_t v17 = sub_1005057FC((uint64_t *)&unk_101674160);
      memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
    }
    else
    {
      uint64_t v28 = v11;
      uint64_t v19 = *v14;
      unint64_t v20 = v14[1];
      sub_100510D4C(*v14, v20);
      *uint64_t v13 = v19;
      v13[1] = v20;
      uint64_t v11 = v28;
      v28((uint64_t)v13 + *(int *)(v15 + 20), (uint64_t)v14 + *(int *)(v15 + 20), v10);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
    }
    uint64_t v21 = a3[10];
    uint64_t v22 = (void *)((char *)v4 + v21);
    uint64_t v23 = (uint64_t *)((char *)a2 + v21);
    uint64_t v24 = type metadata accessor for CRLProto_Point(0);
    uint64_t v25 = *(void *)(v24 - 8);
    if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v25 + 48))(v23, 1, v24))
    {
      uint64_t v26 = sub_1005057FC(&qword_10168E570);
      memcpy(v22, v23, *(void *)(*(void *)(v26 - 8) + 64));
    }
    else
    {
      *uint64_t v22 = *v23;
      v11((uint64_t)v22 + *(int *)(v24 + 24), (uint64_t)v23 + *(int *)(v24 + 24), v10);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
    }
  }
  return v4;
}

uint64_t sub_100C2605C(uint64_t a1, int *a2)
{
  uint64_t v4 = a1 + a2[8];
  uint64_t v5 = type metadata accessor for UnknownStorage();
  uint64_t v12 = *(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  v12(v4, v5);
  uint64_t v6 = a1 + a2[9];
  uint64_t v7 = type metadata accessor for CRLProto_Data(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v6, 1, v7))
  {
    sub_100510084(*(void *)v6, *(void *)(v6 + 8));
    v12(v6 + *(int *)(v7 + 20), v5);
  }
  uint64_t v8 = a1 + a2[10];
  uint64_t v9 = type metadata accessor for CRLProto_Point(0);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48))(v8, 1, v9);
  if (!result)
  {
    uint64_t v11 = v8 + *(int *)(v9 + 24);
    return ((uint64_t (*)(uint64_t, uint64_t))v12)(v11, v5);
  }
  return result;
}

uint64_t sub_100C261DC(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(unsigned char *)(a1 + 12) = *(unsigned char *)(a2 + 12);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  uint64_t v6 = a3[8];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = type metadata accessor for UnknownStorage();
  uint64_t v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16);
  v10(v7, v8, v9);
  uint64_t v11 = a3[9];
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (uint64_t *)(a2 + v11);
  uint64_t v14 = type metadata accessor for CRLProto_Data(0);
  uint64_t v15 = *(void *)(v14 - 8);
  if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
  {
    uint64_t v16 = sub_1005057FC((uint64_t *)&unk_101674160);
    memcpy(v12, v13, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    uint64_t v26 = v10;
    uint64_t v17 = *v13;
    unint64_t v18 = v13[1];
    sub_100510D4C(*v13, v18);
    *uint64_t v12 = v17;
    v12[1] = v18;
    uint64_t v10 = v26;
    v26((uint64_t)v12 + *(int *)(v14 + 20), (uint64_t)v13 + *(int *)(v14 + 20), v9);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  }
  uint64_t v19 = a3[10];
  unint64_t v20 = (void *)(a1 + v19);
  uint64_t v21 = (void *)(a2 + v19);
  uint64_t v22 = type metadata accessor for CRLProto_Point(0);
  uint64_t v23 = *(void *)(v22 - 8);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22))
  {
    uint64_t v24 = sub_1005057FC(&qword_10168E570);
    memcpy(v20, v21, *(void *)(*(void *)(v24 - 8) + 64));
  }
  else
  {
    *unint64_t v20 = *v21;
    v10((uint64_t)v20 + *(int *)(v22 + 24), (uint64_t)v21 + *(int *)(v22 + 24), v9);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
  }
  return a1;
}

uint64_t sub_100C2647C(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(unsigned char *)(a1 + 12) = *(unsigned char *)(a2 + 12);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  uint64_t v6 = a3[8];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = type metadata accessor for UnknownStorage();
  uint64_t v36 = *(void *)(v9 - 8);
  uint64_t v37 = v9;
  int v35 = *(void (**)(char *, char *, uint64_t))(v36 + 24);
  ((void (*)(uint64_t, uint64_t))v35)(v7, v8);
  uint64_t v10 = a3[9];
  uint64_t v11 = (uint64_t *)(a1 + v10);
  uint64_t v12 = (uint64_t *)(a2 + v10);
  uint64_t v13 = type metadata accessor for CRLProto_Data(0);
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v14 + 48);
  int v16 = v15(v11, 1, v13);
  int v17 = v15(v12, 1, v13);
  if (v16)
  {
    if (!v17)
    {
      uint64_t v18 = *v12;
      unint64_t v19 = v12[1];
      sub_100510D4C(*v12, v19);
      *uint64_t v11 = v18;
      v11[1] = v19;
      (*(void (**)(char *, char *, uint64_t))(v36 + 16))((char *)v11 + *(int *)(v13 + 20), (char *)v12 + *(int *)(v13 + 20), v37);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v17)
  {
    sub_100C16A08((uint64_t)v11, type metadata accessor for CRLProto_Data);
LABEL_6:
    uint64_t v20 = sub_1005057FC((uint64_t *)&unk_101674160);
    memcpy(v11, v12, *(void *)(*(void *)(v20 - 8) + 64));
    goto LABEL_7;
  }
  uint64_t v31 = *v12;
  unint64_t v32 = v12[1];
  sub_100510D4C(*v12, v32);
  uint64_t v33 = *v11;
  unint64_t v34 = v11[1];
  *uint64_t v11 = v31;
  v11[1] = v32;
  sub_100510084(v33, v34);
  v35((char *)v11 + *(int *)(v13 + 20), (char *)v12 + *(int *)(v13 + 20), v37);
LABEL_7:
  uint64_t v21 = a3[10];
  uint64_t v22 = (char *)(a1 + v21);
  uint64_t v23 = (char *)(a2 + v21);
  uint64_t v24 = type metadata accessor for CRLProto_Point(0);
  uint64_t v25 = *(void *)(v24 - 8);
  uint64_t v26 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v25 + 48);
  int v27 = v26(v22, 1, v24);
  int v28 = v26(v23, 1, v24);
  if (!v27)
  {
    if (!v28)
    {
      *(_DWORD *)uint64_t v22 = *(_DWORD *)v23;
      *((_DWORD *)v22 + 1) = *((_DWORD *)v23 + 1);
      v35(&v22[*(int *)(v24 + 24)], &v23[*(int *)(v24 + 24)], v37);
      return a1;
    }
    sub_100C16A08((uint64_t)v22, type metadata accessor for CRLProto_Point);
    goto LABEL_12;
  }
  if (v28)
  {
LABEL_12:
    uint64_t v29 = sub_1005057FC(&qword_10168E570);
    memcpy(v22, v23, *(void *)(*(void *)(v29 - 8) + 64));
    return a1;
  }
  *(_DWORD *)uint64_t v22 = *(_DWORD *)v23;
  *((_DWORD *)v22 + 1) = *((_DWORD *)v23 + 1);
  (*(void (**)(char *, char *, uint64_t))(v36 + 16))(&v22[*(int *)(v24 + 24)], &v23[*(int *)(v24 + 24)], v37);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
  return a1;
}

uint64_t sub_100C26830(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(unsigned char *)(a1 + 12) = *(unsigned char *)(a2 + 12);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  uint64_t v6 = a3[8];
  uint64_t v7 = (char *)(a1 + v6);
  uint64_t v8 = (char *)(a2 + v6);
  uint64_t v9 = type metadata accessor for UnknownStorage();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32);
  v10(v7, v8, v9);
  uint64_t v11 = a3[9];
  uint64_t v12 = (_OWORD *)(a1 + v11);
  uint64_t v13 = (_OWORD *)(a2 + v11);
  uint64_t v14 = type metadata accessor for CRLProto_Data(0);
  uint64_t v15 = *(void *)(v14 - 8);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
  {
    uint64_t v16 = sub_1005057FC((uint64_t *)&unk_101674160);
    memcpy(v12, v13, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    *uint64_t v12 = *v13;
    v10((char *)v12 + *(int *)(v14 + 20), (char *)v13 + *(int *)(v14 + 20), v9);
    (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  }
  uint64_t v17 = a3[10];
  uint64_t v18 = (void *)(a1 + v17);
  unint64_t v19 = (void *)(a2 + v17);
  uint64_t v20 = type metadata accessor for CRLProto_Point(0);
  uint64_t v21 = *(void *)(v20 - 8);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
  {
    uint64_t v22 = sub_1005057FC(&qword_10168E570);
    memcpy(v18, v19, *(void *)(*(void *)(v22 - 8) + 64));
  }
  else
  {
    *uint64_t v18 = *v19;
    v10((char *)v18 + *(int *)(v20 + 24), (char *)v19 + *(int *)(v20 + 24), v9);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
  }
  return a1;
}

uint64_t sub_100C26AB4(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(unsigned char *)(a1 + 12) = *(unsigned char *)(a2 + 12);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  uint64_t v6 = a3[8];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = type metadata accessor for UnknownStorage();
  uint64_t v32 = *(void *)(v9 - 8);
  uint64_t v33 = v9;
  uint64_t v31 = *(void (**)(uint64_t, uint64_t))(v32 + 40);
  v31(v7, v8);
  uint64_t v10 = a3[9];
  uint64_t v11 = (char *)(a1 + v10);
  uint64_t v12 = (char *)(a2 + v10);
  uint64_t v13 = type metadata accessor for CRLProto_Data(0);
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48);
  int v16 = v15(v11, 1, v13);
  int v17 = v15(v12, 1, v13);
  if (v16)
  {
    if (!v17)
    {
      *(_OWORD *)uint64_t v11 = *(_OWORD *)v12;
      (*(void (**)(char *, char *, uint64_t))(v32 + 32))(&v11[*(int *)(v13 + 20)], &v12[*(int *)(v13 + 20)], v33);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v17)
  {
    sub_100C16A08((uint64_t)v11, type metadata accessor for CRLProto_Data);
LABEL_6:
    uint64_t v18 = sub_1005057FC((uint64_t *)&unk_101674160);
    memcpy(v11, v12, *(void *)(*(void *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  uint64_t v29 = *(void *)v11;
  unint64_t v30 = *((void *)v11 + 1);
  *(_OWORD *)uint64_t v11 = *(_OWORD *)v12;
  sub_100510084(v29, v30);
  ((void (*)(char *, char *, uint64_t))v31)(&v11[*(int *)(v13 + 20)], &v12[*(int *)(v13 + 20)], v33);
LABEL_7:
  uint64_t v19 = a3[10];
  uint64_t v20 = (void *)(a1 + v19);
  uint64_t v21 = (void *)(a2 + v19);
  uint64_t v22 = type metadata accessor for CRLProto_Point(0);
  uint64_t v23 = *(void *)(v22 - 8);
  uint64_t v24 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v23 + 48);
  int v25 = v24(v20, 1, v22);
  int v26 = v24(v21, 1, v22);
  if (!v25)
  {
    if (!v26)
    {
      *uint64_t v20 = *v21;
      ((void (*)(char *, char *, uint64_t))v31)((char *)v20 + *(int *)(v22 + 24), (char *)v21 + *(int *)(v22 + 24), v33);
      return a1;
    }
    sub_100C16A08((uint64_t)v20, type metadata accessor for CRLProto_Point);
    goto LABEL_12;
  }
  if (v26)
  {
LABEL_12:
    uint64_t v27 = sub_1005057FC(&qword_10168E570);
    memcpy(v20, v21, *(void *)(*(void *)(v27 - 8) + 64));
    return a1;
  }
  *uint64_t v20 = *v21;
  (*(void (**)(char *, char *, uint64_t))(v32 + 32))((char *)v20 + *(int *)(v22 + 24), (char *)v21 + *(int *)(v22 + 24), v33);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
  return a1;
}

uint64_t sub_100C26E40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100C26E54);
}

uint64_t sub_100C26E54(uint64_t a1, uint64_t a2, int *a3)
{
  if (a2 == 254)
  {
    unsigned int v4 = *(unsigned __int8 *)(a1 + 12);
    BOOL v5 = v4 >= 2;
    int v6 = (v4 + 2147483646) & 0x7FFFFFFF;
    if (v5) {
      return (v6 + 1);
    }
    else {
      return 0;
    }
  }
  uint64_t v10 = type metadata accessor for UnknownStorage();
  if (*(_DWORD *)(*(void *)(v10 - 8) + 84) == a2)
  {
    uint64_t v11 = v10;
    uint64_t v12 = *(void *)(v10 - 8);
    uint64_t v13 = a3[8];
LABEL_9:
    uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v15(a1 + v13, a2, v11);
  }
  uint64_t v14 = sub_1005057FC((uint64_t *)&unk_101674160);
  if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a2)
  {
    uint64_t v11 = v14;
    uint64_t v12 = *(void *)(v14 - 8);
    uint64_t v13 = a3[9];
    goto LABEL_9;
  }
  uint64_t v16 = sub_1005057FC(&qword_10168E570);
  int v17 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 48);
  uint64_t v18 = v16;
  uint64_t v19 = a1 + a3[10];

  return v17(v19, a2, v18);
}

uint64_t sub_100C26FD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100C26FE8);
}

uint64_t sub_100C26FE8(uint64_t result, uint64_t a2, int a3, int *a4)
{
  uint64_t v5 = result;
  if (a3 == 254)
  {
    *(unsigned char *)(result + 12) = a2 + 1;
    return result;
  }
  uint64_t v8 = type metadata accessor for UnknownStorage();
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a3)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a4[8];
LABEL_7:
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);
    return v13(v5 + v11, a2, a2, v9);
  }
  uint64_t v12 = sub_1005057FC((uint64_t *)&unk_101674160);
  if (*(_DWORD *)(*(void *)(v12 - 8) + 84) == a3)
  {
    uint64_t v9 = v12;
    uint64_t v10 = *(void *)(v12 - 8);
    uint64_t v11 = a4[9];
    goto LABEL_7;
  }
  uint64_t v14 = sub_1005057FC(&qword_10168E570);
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56);
  uint64_t v16 = v14;
  uint64_t v17 = v5 + a4[10];

  return v15(v17, a2, a2, v16);
}

void sub_100C27164()
{
  type metadata accessor for UnknownStorage();
  if (v0 <= 0x3F)
  {
    sub_100C1A890(319, (unint64_t *)&unk_101697808, (void (*)(uint64_t))type metadata accessor for CRLProto_Data);
    if (v1 <= 0x3F)
    {
      sub_100C1A890(319, (unint64_t *)&unk_1016981D0, (void (*)(uint64_t))type metadata accessor for CRLProto_Point);
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

uint64_t sub_100C272C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100C272DC);
}

uint64_t sub_100C272E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100C272F4);
}

uint64_t sub_100C272F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage();
  uint64_t v24 = *(void *)(v6 - 8);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v24 + 24);
  v7(a1, a2, v6);
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v25 = a1;
  uint64_t v9 = (uint64_t *)(a1 + v8);
  uint64_t v10 = (uint64_t *)(a2 + v8);
  uint64_t v11 = type metadata accessor for CRLProto_Data(0);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v12 + 48);
  int v14 = v13(v9, 1, v11);
  int v15 = v13(v10, 1, v11);
  if (!v14)
  {
    if (!v15)
    {
      uint64_t v20 = *v10;
      unint64_t v21 = v10[1];
      sub_100510D4C(*v10, v21);
      uint64_t v22 = *v9;
      unint64_t v23 = v9[1];
      *uint64_t v9 = v20;
      v9[1] = v21;
      sub_100510084(v22, v23);
      v7((uint64_t)v9 + *(int *)(v11 + 20), (uint64_t)v10 + *(int *)(v11 + 20), v6);
      return v25;
    }
    sub_100C16A08((uint64_t)v9, type metadata accessor for CRLProto_Data);
    goto LABEL_6;
  }
  if (v15)
  {
LABEL_6:
    uint64_t v18 = sub_1005057FC((uint64_t *)&unk_101674160);
    memcpy(v9, v10, *(void *)(*(void *)(v18 - 8) + 64));
    return v25;
  }
  uint64_t v16 = *v10;
  unint64_t v17 = v10[1];
  sub_100510D4C(*v10, v17);
  *uint64_t v9 = v16;
  v9[1] = v17;
  (*(void (**)(char *, char *, uint64_t))(v24 + 16))((char *)v9 + *(int *)(v11 + 20), (char *)v10 + *(int *)(v11 + 20), v6);
  (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  return v25;
}

uint64_t sub_100C27528(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage();
  uint64_t v20 = *(void *)(v6 - 8);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v20 + 40);
  v7(a1, a2, v6);
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v21 = a1;
  uint64_t v9 = (uint64_t *)(a1 + v8);
  uint64_t v10 = (uint64_t *)(a2 + v8);
  uint64_t v11 = type metadata accessor for CRLProto_Data(0);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v12 + 48);
  int v14 = v13(v9, 1, v11);
  int v15 = v13(v10, 1, v11);
  if (!v14)
  {
    if (!v15)
    {
      uint64_t v18 = *v9;
      unint64_t v19 = v9[1];
      *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
      sub_100510084(v18, v19);
      v7((uint64_t)v9 + *(int *)(v11 + 20), (uint64_t)v10 + *(int *)(v11 + 20), v6);
      return v21;
    }
    sub_100C16A08((uint64_t)v9, type metadata accessor for CRLProto_Data);
    goto LABEL_6;
  }
  if (v15)
  {
LABEL_6:
    uint64_t v16 = sub_1005057FC((uint64_t *)&unk_101674160);
    memcpy(v9, v10, *(void *)(*(void *)(v16 - 8) + 64));
    return v21;
  }
  *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
  (*(void (**)(char *, char *, uint64_t))(v20 + 32))((char *)v9 + *(int *)(v11 + 20), (char *)v10 + *(int *)(v11 + 20), v6);
  (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  return v21;
}

uint64_t sub_100C27740(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100C27754);
}

uint64_t sub_100C27758(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    uint64_t v10 = sub_1005057FC((uint64_t *)&unk_101674160);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = a1 + *(int *)(a3 + 20);
    return v11(v13, a2, v12);
  }
}

uint64_t sub_100C27854(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100C27868);
}

uint64_t sub_100C2786C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for UnknownStorage();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, v8);
  }
  else
  {
    uint64_t v12 = sub_1005057FC((uint64_t *)&unk_101674160);
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a4 + 20);
    return v13(v15, a2, a2, v14);
  }
}

void sub_100C27974()
{
  type metadata accessor for UnknownStorage();
  if (v0 <= 0x3F)
  {
    sub_100C1A890(319, (unint64_t *)&unk_101697808, (void (*)(uint64_t))type metadata accessor for CRLProto_Data);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t *sub_100C27A58(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  unsigned int v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v18 = *a2;
    *unsigned int v4 = *a2;
    unsigned int v4 = (uint64_t *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *a1 = *a2;
    uint64_t v7 = *(int *)(a3 + 20);
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = type metadata accessor for UnknownStorage();
    uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
    v11(v8, v9, v10);
    uint64_t v12 = *(int *)(a3 + 24);
    uint64_t v13 = (uint64_t *)((char *)v4 + v12);
    uint64_t v14 = (uint64_t *)((char *)a2 + v12);
    uint64_t v15 = type metadata accessor for CRLProto_Data(0);
    uint64_t v16 = *(void *)(v15 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
    {
      uint64_t v17 = sub_1005057FC((uint64_t *)&unk_101674160);
      memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
    }
    else
    {
      uint64_t v19 = *v14;
      unint64_t v20 = v14[1];
      sub_100510D4C(*v14, v20);
      *uint64_t v13 = v19;
      v13[1] = v20;
      v11((char *)v13 + *(int *)(v15 + 20), (char *)v14 + *(int *)(v15 + 20), v10);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
    }
  }
  return v4;
}

void *sub_100C27C30(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for UnknownStorage();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
  v10(v7, v8, v9);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = (void *)((char *)a1 + v11);
  uint64_t v13 = (void *)((char *)a2 + v11);
  uint64_t v14 = type metadata accessor for CRLProto_Data(0);
  uint64_t v15 = *(void *)(v14 - 8);
  if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
  {
    uint64_t v16 = sub_1005057FC((uint64_t *)&unk_101674160);
    memcpy(v12, v13, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    uint64_t v17 = *v13;
    unint64_t v18 = v13[1];
    sub_100510D4C(*v13, v18);
    *uint64_t v12 = v17;
    v12[1] = v18;
    v10((char *)v12 + *(int *)(v14 + 20), (char *)v13 + *(int *)(v14 + 20), v9);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  }
  return a1;
}

void *sub_100C27DB8(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for UnknownStorage();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32);
  v10(v7, v8, v9);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = (_OWORD *)((char *)a1 + v11);
  uint64_t v13 = (_OWORD *)((char *)a2 + v11);
  uint64_t v14 = type metadata accessor for CRLProto_Data(0);
  uint64_t v15 = *(void *)(v14 - 8);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
  {
    uint64_t v16 = sub_1005057FC((uint64_t *)&unk_101674160);
    memcpy(v12, v13, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    *uint64_t v12 = *v13;
    v10((char *)v12 + *(int *)(v14 + 20), (char *)v13 + *(int *)(v14 + 20), v9);
    (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  }
  return a1;
}

uint64_t sub_100C27F2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100C27F40);
}

uint64_t sub_100C27F44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100C27F58);
}

uint64_t *sub_100C27F5C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  unint64_t v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    *unint64_t v3 = *a2;
    unint64_t v3 = (uint64_t *)(v11 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    uint64_t v6 = *(int *)(a3 + 24);
    uint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    uint64_t v9 = type metadata accessor for UnknownStorage();
    uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
    swift_bridgeObjectRetain();
    v10(v7, v8, v9);
  }
  return v3;
}

uint64_t sub_100C28044(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = type metadata accessor for UnknownStorage();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);

  return v6(v4, v5);
}

void *sub_100C280BC(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = *(int *)(a3 + 24);
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = type metadata accessor for UnknownStorage();
  uint64_t v9 = *(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 16);
  swift_bridgeObjectRetain();
  v9(v6, v7, v8);
  return a1;
}

void *sub_100C28154(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for UnknownStorage();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

_OWORD *sub_100C281F0(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 24);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = type metadata accessor for UnknownStorage();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

void *sub_100C2826C(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(int *)(a3 + 24);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for UnknownStorage();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t sub_100C282F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100C2830C);
}

uint64_t sub_100C28310(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for UnknownStorage();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_100C283C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100C283D4);
}

uint64_t sub_100C283D4(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for UnknownStorage();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 24);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_100C2847C()
{
  return sub_100C28498();
}

uint64_t sub_100C28498()
{
  uint64_t result = type metadata accessor for UnknownStorage();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void *sub_100C28528(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for UnknownStorage();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void (**)(char *, char *))(v10 + 24);
  uint64_t v27 = v9;
  v11(v7, v8);
  uint64_t v12 = *(int *)(a3 + 24);
  int v28 = a1;
  uint64_t v13 = (void *)((char *)a1 + v12);
  uint64_t v14 = (void *)((char *)a2 + v12);
  uint64_t v15 = type metadata accessor for CRLProto_Data(0);
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v16 + 48);
  LODWORD(v8) = v17(v13, 1, v15);
  int v18 = v17(v14, 1, v15);
  if (!v8)
  {
    if (!v18)
    {
      uint64_t v23 = *v14;
      unint64_t v24 = v14[1];
      sub_100510D4C(*v14, v24);
      uint64_t v25 = *v13;
      unint64_t v26 = v13[1];
      *uint64_t v13 = v23;
      v13[1] = v24;
      sub_100510084(v25, v26);
      ((void (*)(char *, char *, uint64_t))v11)((char *)v13 + *(int *)(v15 + 20), (char *)v14 + *(int *)(v15 + 20), v27);
      return v28;
    }
    sub_100C16A08((uint64_t)v13, type metadata accessor for CRLProto_Data);
    goto LABEL_6;
  }
  if (v18)
  {
LABEL_6:
    uint64_t v21 = sub_1005057FC((uint64_t *)&unk_101674160);
    memcpy(v13, v14, *(void *)(*(void *)(v21 - 8) + 64));
    return v28;
  }
  uint64_t v19 = *v14;
  unint64_t v20 = v14[1];
  sub_100510D4C(*v14, v20);
  *uint64_t v13 = v19;
  v13[1] = v20;
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))((char *)v13 + *(int *)(v15 + 20), (char *)v14 + *(int *)(v15 + 20), v27);
  (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  return v28;
}

void *sub_100C28754(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for UnknownStorage();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void (**)(char *, char *))(v10 + 40);
  uint64_t v23 = v9;
  v11(v7, v8);
  uint64_t v12 = *(int *)(a3 + 24);
  unint64_t v24 = a1;
  uint64_t v13 = (void *)((char *)a1 + v12);
  uint64_t v14 = (void *)((char *)a2 + v12);
  uint64_t v15 = type metadata accessor for CRLProto_Data(0);
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v16 + 48);
  LODWORD(v8) = v17(v13, 1, v15);
  int v18 = v17(v14, 1, v15);
  if (!v8)
  {
    if (!v18)
    {
      uint64_t v21 = *v13;
      unint64_t v22 = v13[1];
      *(_OWORD *)uint64_t v13 = *(_OWORD *)v14;
      sub_100510084(v21, v22);
      ((void (*)(char *, char *, uint64_t))v11)((char *)v13 + *(int *)(v15 + 20), (char *)v14 + *(int *)(v15 + 20), v23);
      return v24;
    }
    sub_100C16A08((uint64_t)v13, type metadata accessor for CRLProto_Data);
    goto LABEL_6;
  }
  if (v18)
  {
LABEL_6:
    uint64_t v19 = sub_1005057FC((uint64_t *)&unk_101674160);
    memcpy(v13, v14, *(void *)(*(void *)(v19 - 8) + 64));
    return v24;
  }
  *(_OWORD *)uint64_t v13 = *(_OWORD *)v14;
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))((char *)v13 + *(int *)(v15 + 20), (char *)v14 + *(int *)(v15 + 20), v23);
  (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  return v24;
}

uint64_t sub_100C28968(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100C2897C);
}

uint64_t sub_100C28980(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100C28994);
}

void *sub_100C28998(uint64_t a1, uint64_t *a2, int *a3)
{
  unint64_t v4 = (void *)a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v18 = *a2;
    *unint64_t v4 = *a2;
    unint64_t v4 = (void *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(void *)a1 = *a2;
    *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
    uint64_t v7 = a3[7];
    uint64_t v8 = a1 + v7;
    uint64_t v9 = (uint64_t)a2 + v7;
    uint64_t v10 = type metadata accessor for UnknownStorage();
    uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16);
    v11(v8, v9, v10);
    uint64_t v12 = a3[8];
    uint64_t v13 = (void *)((char *)v4 + v12);
    uint64_t v14 = (uint64_t *)((char *)a2 + v12);
    uint64_t v15 = type metadata accessor for CRLProto_Data(0);
    uint64_t v16 = *(void *)(v15 - 8);
    unint64_t v30 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v16 + 48);
    if (v30(v14, 1, v15))
    {
      uint64_t v17 = sub_1005057FC((uint64_t *)&unk_101674160);
      memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
    }
    else
    {
      int v28 = v11;
      uint64_t v29 = v10;
      uint64_t v19 = *v14;
      unint64_t v20 = v14[1];
      sub_100510D4C(*v14, v20);
      *uint64_t v13 = v19;
      v13[1] = v20;
      uint64_t v11 = v28;
      uint64_t v10 = v29;
      v28((uint64_t)v13 + *(int *)(v15 + 20), (uint64_t)v14 + *(int *)(v15 + 20), v29);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
    }
    uint64_t v21 = a3[9];
    unint64_t v22 = (void *)((char *)v4 + v21);
    uint64_t v23 = (uint64_t *)((char *)a2 + v21);
    if (v30(v23, 1, v15))
    {
      uint64_t v24 = sub_1005057FC((uint64_t *)&unk_101674160);
      memcpy(v22, v23, *(void *)(*(void *)(v24 - 8) + 64));
    }
    else
    {
      uint64_t v25 = *v23;
      unint64_t v26 = v23[1];
      sub_100510D4C(*v23, v26);
      *unint64_t v22 = v25;
      v22[1] = v26;
      v11((uint64_t)v22 + *(int *)(v15 + 20), (uint64_t)v23 + *(int *)(v15 + 20), v10);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v16 + 56))(v22, 0, 1, v15);
    }
  }
  return v4;
}

uint64_t sub_100C28C50(uint64_t a1, int *a2)
{
  uint64_t v4 = a1 + a2[7];
  uint64_t v5 = type metadata accessor for UnknownStorage();
  uint64_t v12 = *(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  v12(v4, v5);
  uint64_t v6 = a1 + a2[8];
  uint64_t v7 = type metadata accessor for CRLProto_Data(0);
  uint64_t v8 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48);
  if (!v8(v6, 1, v7))
  {
    sub_100510084(*(void *)v6, *(void *)(v6 + 8));
    v12(v6 + *(int *)(v7 + 20), v5);
  }
  uint64_t v9 = a1 + a2[9];
  uint64_t result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v8)(v9, 1, v7);
  if (!result)
  {
    sub_100510084(*(void *)v9, *(void *)(v9 + 8));
    uint64_t v11 = v9 + *(int *)(v7 + 20);
    return ((uint64_t (*)(uint64_t, uint64_t))v12)(v11, v5);
  }
  return result;
}

uint64_t sub_100C28DBC(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v6 = a3[7];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = type metadata accessor for UnknownStorage();
  uint64_t v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16);
  v10(v7, v8, v9);
  uint64_t v11 = a3[8];
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (uint64_t *)(a2 + v11);
  uint64_t v14 = type metadata accessor for CRLProto_Data(0);
  uint64_t v15 = *(void *)(v14 - 8);
  int v28 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v15 + 48);
  if (v28(v13, 1, v14))
  {
    uint64_t v16 = sub_1005057FC((uint64_t *)&unk_101674160);
    memcpy(v12, v13, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    unint64_t v26 = v10;
    uint64_t v27 = v9;
    uint64_t v17 = *v13;
    unint64_t v18 = v13[1];
    sub_100510D4C(*v13, v18);
    *uint64_t v12 = v17;
    v12[1] = v18;
    uint64_t v10 = v26;
    uint64_t v9 = v27;
    v26((uint64_t)v12 + *(int *)(v14 + 20), (uint64_t)v13 + *(int *)(v14 + 20), v27);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  }
  uint64_t v19 = a3[9];
  unint64_t v20 = (void *)(a1 + v19);
  uint64_t v21 = (uint64_t *)(a2 + v19);
  if (v28(v21, 1, v14))
  {
    uint64_t v22 = sub_1005057FC((uint64_t *)&unk_101674160);
    memcpy(v20, v21, *(void *)(*(void *)(v22 - 8) + 64));
  }
  else
  {
    uint64_t v23 = *v21;
    unint64_t v24 = v21[1];
    sub_100510D4C(*v21, v24);
    *unint64_t v20 = v23;
    v20[1] = v24;
    v10((uint64_t)v20 + *(int *)(v14 + 20), (uint64_t)v21 + *(int *)(v14 + 20), v9);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v15 + 56))(v20, 0, 1, v14);
  }
  return a1;
}

uint64_t sub_100C29024(uint64_t a1, uint64_t a2, int *a3)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_DWORD *)(a1 + 4) = *(_DWORD *)(a2 + 4);
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v6 = a3[7];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = type metadata accessor for UnknownStorage();
  uint64_t v41 = *(void *)(v9 - 8);
  unint64_t v39 = *(void (**)(uint64_t, uint64_t, uint64_t))(v41 + 24);
  v39(v7, v8, v9);
  uint64_t v10 = a3[8];
  uint64_t v11 = (uint64_t *)(a1 + v10);
  uint64_t v12 = (uint64_t *)(a2 + v10);
  uint64_t v13 = type metadata accessor for CRLProto_Data(0);
  uint64_t v40 = *(void *)(v13 - 8);
  uint64_t v14 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v40 + 48);
  int v15 = v14(v11, 1, v13);
  int v16 = v14(v12, 1, v13);
  if (v15)
  {
    if (!v16)
    {
      uint64_t v37 = v9;
      uint64_t v17 = *v12;
      unint64_t v18 = v12[1];
      sub_100510D4C(*v12, v18);
      *uint64_t v11 = v17;
      v11[1] = v18;
      uint64_t v9 = v37;
      (*(void (**)(char *, char *, uint64_t))(v41 + 16))((char *)v11 + *(int *)(v13 + 20), (char *)v12 + *(int *)(v13 + 20), v37);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v40 + 56))(v11, 0, 1, v13);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v16)
  {
    sub_100C16A08((uint64_t)v11, type metadata accessor for CRLProto_Data);
LABEL_6:
    uint64_t v19 = sub_1005057FC((uint64_t *)&unk_101674160);
    memcpy(v11, v12, *(void *)(*(void *)(v19 - 8) + 64));
    goto LABEL_7;
  }
  uint64_t v38 = v9;
  uint64_t v29 = *v12;
  unint64_t v30 = v12[1];
  sub_100510D4C(*v12, v30);
  uint64_t v31 = *v11;
  unint64_t v32 = v11[1];
  *uint64_t v11 = v29;
  v11[1] = v30;
  uint64_t v9 = v38;
  sub_100510084(v31, v32);
  v39((uint64_t)v11 + *(int *)(v13 + 20), (uint64_t)v12 + *(int *)(v13 + 20), v38);
LABEL_7:
  uint64_t v20 = a3[9];
  uint64_t v21 = (uint64_t *)(a1 + v20);
  uint64_t v22 = (uint64_t *)(a2 + v20);
  int v23 = v14((uint64_t *)(a1 + v20), 1, v13);
  int v24 = v14(v22, 1, v13);
  if (!v23)
  {
    if (!v24)
    {
      uint64_t v33 = *v22;
      unint64_t v34 = v22[1];
      sub_100510D4C(*v22, v34);
      uint64_t v35 = *v21;
      unint64_t v36 = v21[1];
      *uint64_t v21 = v33;
      v21[1] = v34;
      sub_100510084(v35, v36);
      v39((uint64_t)v21 + *(int *)(v13 + 20), (uint64_t)v22 + *(int *)(v13 + 20), v9);
      return a1;
    }
    sub_100C16A08((uint64_t)v21, type metadata accessor for CRLProto_Data);
    goto LABEL_12;
  }
  if (v24)
  {
LABEL_12:
    uint64_t v27 = sub_1005057FC((uint64_t *)&unk_101674160);
    memcpy(v21, v22, *(void *)(*(void *)(v27 - 8) + 64));
    return a1;
  }
  uint64_t v25 = *v22;
  unint64_t v26 = v22[1];
  sub_100510D4C(*v22, v26);
  *uint64_t v21 = v25;
  v21[1] = v26;
  (*(void (**)(char *, char *, uint64_t))(v41 + 16))((char *)v21 + *(int *)(v13 + 20), (char *)v22 + *(int *)(v13 + 20), v9);
  (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v40 + 56))(v21, 0, 1, v13);
  return a1;
}

uint64_t sub_100C293B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v6 = *(int *)(a3 + 28);
  uint64_t v7 = (char *)(a1 + v6);
  uint64_t v8 = (char *)(a2 + v6);
  uint64_t v9 = type metadata accessor for UnknownStorage();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32);
  v10(v7, v8, v9);
  uint64_t v24 = a3;
  uint64_t v11 = *(int *)(a3 + 32);
  uint64_t v12 = (_OWORD *)(a1 + v11);
  uint64_t v13 = (_OWORD *)(a2 + v11);
  uint64_t v14 = type metadata accessor for CRLProto_Data(0);
  uint64_t v15 = *(void *)(v14 - 8);
  int v16 = *(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v15 + 48);
  if (v16(v13, 1, v14))
  {
    uint64_t v17 = sub_1005057FC((uint64_t *)&unk_101674160);
    memcpy(v12, v13, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    *uint64_t v12 = *v13;
    v10((char *)v12 + *(int *)(v14 + 20), (char *)v13 + *(int *)(v14 + 20), v9);
    (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  }
  uint64_t v18 = v15;
  uint64_t v19 = *(int *)(v24 + 36);
  uint64_t v20 = (_OWORD *)(a1 + v19);
  uint64_t v21 = (_OWORD *)(a2 + v19);
  if (v16(v21, 1, v14))
  {
    uint64_t v22 = sub_1005057FC((uint64_t *)&unk_101674160);
    memcpy(v20, v21, *(void *)(*(void *)(v22 - 8) + 64));
  }
  else
  {
    *uint64_t v20 = *v21;
    v10((char *)v20 + *(int *)(v14 + 20), (char *)v21 + *(int *)(v14 + 20), v9);
    (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v18 + 56))(v20, 0, 1, v14);
  }
  return a1;
}

uint64_t sub_100C295F8(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v6 = a3[7];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = type metadata accessor for UnknownStorage();
  uint64_t v31 = *(void *)(v9 - 8);
  uint64_t v32 = v9;
  uint64_t v29 = *(void (**)(uint64_t, uint64_t))(v31 + 40);
  v29(v7, v8);
  uint64_t v10 = a3[8];
  uint64_t v11 = (char *)(a1 + v10);
  uint64_t v12 = (char *)(a2 + v10);
  uint64_t v13 = type metadata accessor for CRLProto_Data(0);
  uint64_t v30 = *(void *)(v13 - 8);
  uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v30 + 48);
  int v15 = v14(v11, 1, v13);
  int v16 = v14(v12, 1, v13);
  if (v15)
  {
    if (!v16)
    {
      *(_OWORD *)uint64_t v11 = *(_OWORD *)v12;
      (*(void (**)(char *, char *, uint64_t))(v31 + 32))(&v11[*(int *)(v13 + 20)], &v12[*(int *)(v13 + 20)], v32);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v30 + 56))(v11, 0, 1, v13);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v16)
  {
    sub_100C16A08((uint64_t)v11, type metadata accessor for CRLProto_Data);
LABEL_6:
    uint64_t v17 = sub_1005057FC((uint64_t *)&unk_101674160);
    memcpy(v11, v12, *(void *)(*(void *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  uint64_t v25 = *(void *)v11;
  unint64_t v26 = *((void *)v11 + 1);
  *(_OWORD *)uint64_t v11 = *(_OWORD *)v12;
  sub_100510084(v25, v26);
  ((void (*)(char *, char *, uint64_t))v29)(&v11[*(int *)(v13 + 20)], &v12[*(int *)(v13 + 20)], v32);
LABEL_7:
  uint64_t v18 = a3[9];
  uint64_t v19 = (uint64_t *)(a1 + v18);
  uint64_t v20 = (char *)(a2 + v18);
  int v21 = v14((char *)(a1 + v18), 1, v13);
  int v22 = v14(v20, 1, v13);
  if (!v21)
  {
    if (!v22)
    {
      uint64_t v27 = *v19;
      unint64_t v28 = v19[1];
      *(_OWORD *)uint64_t v19 = *(_OWORD *)v20;
      sub_100510084(v27, v28);
      ((void (*)(char *, char *, uint64_t))v29)((char *)v19 + *(int *)(v13 + 20), &v20[*(int *)(v13 + 20)], v32);
      return a1;
    }
    sub_100C16A08((uint64_t)v19, type metadata accessor for CRLProto_Data);
    goto LABEL_12;
  }
  if (v22)
  {
LABEL_12:
    uint64_t v23 = sub_1005057FC((uint64_t *)&unk_101674160);
    memcpy(v19, v20, *(void *)(*(void *)(v23 - 8) + 64));
    return a1;
  }
  *(_OWORD *)uint64_t v19 = *(_OWORD *)v20;
  (*(void (**)(char *, char *, uint64_t))(v31 + 32))((char *)v19 + *(int *)(v13 + 20), &v20[*(int *)(v13 + 20)], v32);
  (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v30 + 56))(v19, 0, 1, v13);
  return a1;
}

uint64_t sub_100C29930(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100C29944);
}

uint64_t sub_100C29944(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 254)
  {
    unsigned int v4 = *(unsigned __int8 *)(a1 + 8);
    BOOL v5 = v4 >= 2;
    int v6 = (v4 + 2147483646) & 0x7FFFFFFF;
    if (v5) {
      return (v6 + 1);
    }
    else {
      return 0;
    }
  }
  else
  {
    uint64_t v10 = type metadata accessor for UnknownStorage();
    uint64_t v11 = *(void *)(v10 - 8);
    if (*(_DWORD *)(v11 + 84) == a2)
    {
      uint64_t v12 = v10;
      uint64_t v13 = a1 + *(int *)(a3 + 28);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 48);
      return v14(v13, a2, v12);
    }
    else
    {
      uint64_t v15 = sub_1005057FC((uint64_t *)&unk_101674160);
      int v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 48);
      uint64_t v17 = v15;
      uint64_t v18 = a1 + *(int *)(a3 + 32);
      return v16(v18, a2, v17);
    }
  }
}

uint64_t sub_100C29A74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100C29A88);
}

uint64_t sub_100C29A88(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 254)
  {
    *(unsigned char *)(result + 8) = a2 + 1;
  }
  else
  {
    uint64_t v8 = type metadata accessor for UnknownStorage();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = v5 + *(int *)(a4 + 28);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_1005057FC((uint64_t *)&unk_101674160);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = v5 + *(int *)(a4 + 32);
      return v14(v16, a2, a2, v15);
    }
  }
  return result;
}

void sub_100C29BB4()
{
  type metadata accessor for UnknownStorage();
  if (v0 <= 0x3F)
  {
    sub_100C1A890(319, (unint64_t *)&unk_101697808, (void (*)(uint64_t))type metadata accessor for CRLProto_Data);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t *sub_100C29CB4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  unsigned int v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v18 = *a2;
    *unsigned int v4 = *a2;
    unsigned int v4 = (uint64_t *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_DWORD *)a1 = *(_DWORD *)a2;
    uint64_t v7 = *(int *)(a3 + 20);
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = type metadata accessor for UnknownStorage();
    uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
    v11(v8, v9, v10);
    uint64_t v12 = *(int *)(a3 + 24);
    uint64_t v13 = (uint64_t *)((char *)v4 + v12);
    uint64_t v14 = (uint64_t *)((char *)a2 + v12);
    uint64_t v15 = type metadata accessor for CRLProto_Data(0);
    uint64_t v16 = *(void *)(v15 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
    {
      uint64_t v17 = sub_1005057FC((uint64_t *)&unk_101674160);
      memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
    }
    else
    {
      uint64_t v19 = *v14;
      unint64_t v20 = v14[1];
      sub_100510D4C(*v14, v20);
      *uint64_t v13 = v19;
      v13[1] = v20;
      v11((char *)v13 + *(int *)(v15 + 20), (char *)v14 + *(int *)(v15 + 20), v10);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
    }
  }
  return v4;
}

_DWORD *sub_100C29E8C(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for UnknownStorage();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
  v10(v7, v8, v9);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = (void *)((char *)a1 + v11);
  uint64_t v13 = (uint64_t *)((char *)a2 + v11);
  uint64_t v14 = type metadata accessor for CRLProto_Data(0);
  uint64_t v15 = *(void *)(v14 - 8);
  if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
  {
    uint64_t v16 = sub_1005057FC((uint64_t *)&unk_101674160);
    memcpy(v12, v13, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    uint64_t v17 = *v13;
    unint64_t v18 = v13[1];
    sub_100510D4C(*v13, v18);
    *uint64_t v12 = v17;
    v12[1] = v18;
    v10((char *)v12 + *(int *)(v14 + 20), (char *)v13 + *(int *)(v14 + 20), v9);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  }
  return a1;
}

_DWORD *sub_100C2A014(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for UnknownStorage();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void (**)(char *, char *))(v10 + 24);
  uint64_t v27 = v9;
  v11(v7, v8);
  uint64_t v12 = *(int *)(a3 + 24);
  unint64_t v28 = a1;
  uint64_t v13 = (uint64_t *)((char *)a1 + v12);
  uint64_t v14 = (uint64_t *)((char *)a2 + v12);
  uint64_t v15 = type metadata accessor for CRLProto_Data(0);
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v16 + 48);
  LODWORD(v8) = v17(v13, 1, v15);
  int v18 = v17(v14, 1, v15);
  if (!v8)
  {
    if (!v18)
    {
      uint64_t v23 = *v14;
      unint64_t v24 = v14[1];
      sub_100510D4C(*v14, v24);
      uint64_t v25 = *v13;
      unint64_t v26 = v13[1];
      *uint64_t v13 = v23;
      v13[1] = v24;
      sub_100510084(v25, v26);
      ((void (*)(char *, char *, uint64_t))v11)((char *)v13 + *(int *)(v15 + 20), (char *)v14 + *(int *)(v15 + 20), v27);
      return v28;
    }
    sub_100C16A08((uint64_t)v13, type metadata accessor for CRLProto_Data);
    goto LABEL_6;
  }
  if (v18)
  {
LABEL_6:
    uint64_t v21 = sub_1005057FC((uint64_t *)&unk_101674160);
    memcpy(v13, v14, *(void *)(*(void *)(v21 - 8) + 64));
    return v28;
  }
  uint64_t v19 = *v14;
  unint64_t v20 = v14[1];
  sub_100510D4C(*v14, v20);
  *uint64_t v13 = v19;
  v13[1] = v20;
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))((char *)v13 + *(int *)(v15 + 20), (char *)v14 + *(int *)(v15 + 20), v27);
  (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  return v28;
}

_DWORD *sub_100C2A240(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for UnknownStorage();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32);
  v10(v7, v8, v9);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = (_OWORD *)((char *)a1 + v11);
  uint64_t v13 = (_OWORD *)((char *)a2 + v11);
  uint64_t v14 = type metadata accessor for CRLProto_Data(0);
  uint64_t v15 = *(void *)(v14 - 8);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
  {
    uint64_t v16 = sub_1005057FC((uint64_t *)&unk_101674160);
    memcpy(v12, v13, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    *uint64_t v12 = *v13;
    v10((char *)v12 + *(int *)(v14 + 20), (char *)v13 + *(int *)(v14 + 20), v9);
    (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  }
  return a1;
}

_DWORD *sub_100C2A3B4(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for UnknownStorage();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void (**)(char *, char *))(v10 + 40);
  uint64_t v23 = v9;
  v11(v7, v8);
  uint64_t v12 = *(int *)(a3 + 24);
  unint64_t v24 = a1;
  uint64_t v13 = (uint64_t *)((char *)a1 + v12);
  uint64_t v14 = (uint64_t *)((char *)a2 + v12);
  uint64_t v15 = type metadata accessor for CRLProto_Data(0);
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v16 + 48);
  LODWORD(v8) = v17(v13, 1, v15);
  int v18 = v17(v14, 1, v15);
  if (!v8)
  {
    if (!v18)
    {
      uint64_t v21 = *v13;
      unint64_t v22 = v13[1];
      *(_OWORD *)uint64_t v13 = *(_OWORD *)v14;
      sub_100510084(v21, v22);
      ((void (*)(char *, char *, uint64_t))v11)((char *)v13 + *(int *)(v15 + 20), (char *)v14 + *(int *)(v15 + 20), v23);
      return v24;
    }
    sub_100C16A08((uint64_t)v13, type metadata accessor for CRLProto_Data);
    goto LABEL_6;
  }
  if (v18)
  {
LABEL_6:
    uint64_t v19 = sub_1005057FC((uint64_t *)&unk_101674160);
    memcpy(v13, v14, *(void *)(*(void *)(v19 - 8) + 64));
    return v24;
  }
  *(_OWORD *)uint64_t v13 = *(_OWORD *)v14;
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))((char *)v13 + *(int *)(v15 + 20), (char *)v14 + *(int *)(v15 + 20), v23);
  (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  return v24;
}

uint64_t sub_100C2A5C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100C2A5DC);
}

uint64_t sub_100C2A5E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1 + *(int *)(a3 + 20);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v10(v9, a2, v8);
  }
  else
  {
    uint64_t v12 = sub_1005057FC((uint64_t *)&unk_101674160);
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 48);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a3 + 24);
    return v13(v15, a2, v14);
  }
}

uint64_t sub_100C2A6E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100C2A6F4);
}

uint64_t sub_100C2A6F8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for UnknownStorage();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a4 + 20);
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v12(v11, a2, a2, v10);
  }
  else
  {
    uint64_t v14 = sub_1005057FC((uint64_t *)&unk_101674160);
    uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56);
    uint64_t v16 = v14;
    uint64_t v17 = a1 + *(int *)(a4 + 24);
    return v15(v17, a2, a2, v16);
  }
}

void sub_100C2A804()
{
  type metadata accessor for UnknownStorage();
  if (v0 <= 0x3F)
  {
    sub_100C1A890(319, (unint64_t *)&unk_101697808, (void (*)(uint64_t))type metadata accessor for CRLProto_Data);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t *sub_100C2A8EC(uint64_t *a1, uint64_t *a2, int *a3)
{
  unsigned int v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v18 = *a2;
    *unsigned int v4 = *a2;
    unsigned int v4 = (uint64_t *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_DWORD *)a1 = *(_DWORD *)a2;
    uint64_t v7 = a3[5];
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = type metadata accessor for UnknownStorage();
    uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
    v11(v8, v9, v10);
    uint64_t v12 = a3[6];
    uint64_t v13 = (char *)v4 + v12;
    uint64_t v14 = (char *)a2 + v12;
    uint64_t v15 = type metadata accessor for CRLProto_BoardIdentifier(0);
    uint64_t v16 = *(void *)(v15 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
    {
      uint64_t v17 = sub_1005057FC(&qword_101677D28);
      memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
    }
    else
    {
      v11(v13, v14, v10);
      uint64_t v19 = *(int *)(v15 + 20);
      __dst = &v13[v19];
      unint64_t v20 = &v14[v19];
      unint64_t v36 = v11;
      uint64_t v21 = type metadata accessor for CRLProto_Data(0);
      uint64_t v22 = *(void *)(v21 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
      {
        uint64_t v23 = sub_1005057FC((uint64_t *)&unk_101674160);
        memcpy(__dst, v20, *(void *)(*(void *)(v23 - 8) + 64));
      }
      else
      {
        unint64_t v33 = *((void *)v20 + 1);
        uint64_t v34 = *(void *)v20;
        sub_100510D4C(*(void *)v20, v33);
        *(void *)__dst = v34;
        *((void *)__dst + 1) = v33;
        v36(&__dst[*(int *)(v21 + 20)], &v20[*(int *)(v21 + 20)], v10);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v22 + 56))(__dst, 0, 1, v21);
      }
      (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
      uint64_t v11 = v36;
    }
    uint64_t v24 = a3[7];
    uint64_t v25 = (uint64_t *)((char *)v4 + v24);
    unint64_t v26 = (uint64_t *)((char *)a2 + v24);
    uint64_t v27 = type metadata accessor for CRLProto_Data(0);
    uint64_t v28 = *(void *)(v27 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v28 + 48))(v26, 1, v27))
    {
      uint64_t v29 = sub_1005057FC((uint64_t *)&unk_101674160);
      memcpy(v25, v26, *(void *)(*(void *)(v29 - 8) + 64));
    }
    else
    {
      uint64_t v30 = *v26;
      unint64_t v31 = v26[1];
      sub_100510D4C(*v26, v31);
      *uint64_t v25 = v30;
      v25[1] = v31;
      v11((char *)v25 + *(int *)(v27 + 20), (char *)v26 + *(int *)(v27 + 20), v10);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v28 + 56))(v25, 0, 1, v27);
    }
  }
  return v4;
}

uint64_t sub_100C2ACB4(uint64_t a1, int *a2)
{
  uint64_t v4 = a1 + a2[5];
  uint64_t v5 = type metadata accessor for UnknownStorage();
  uint64_t v14 = *(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  v14(v4, v5);
  uint64_t v6 = a1 + a2[6];
  uint64_t v7 = type metadata accessor for CRLProto_BoardIdentifier(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v6, 1, v7))
  {
    v14(v6, v5);
    uint64_t v8 = v6 + *(int *)(v7 + 20);
    uint64_t v9 = type metadata accessor for CRLProto_Data(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48))(v8, 1, v9))
    {
      sub_100510084(*(void *)v8, *(void *)(v8 + 8));
      v14(v8 + *(int *)(v9 + 20), v5);
    }
  }
  uint64_t v10 = a1 + a2[7];
  uint64_t v11 = type metadata accessor for CRLProto_Data(0);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48))(v10, 1, v11);
  if (!result)
  {
    sub_100510084(*(void *)v10, *(void *)(v10 + 8));
    uint64_t v13 = v10 + *(int *)(v11 + 20);
    return ((uint64_t (*)(uint64_t, uint64_t))v14)(v13, v5);
  }
  return result;
}

_DWORD *sub_100C2AEA0(_DWORD *a1, _DWORD *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for UnknownStorage();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
  v10(v7, v8, v9);
  uint64_t v11 = a3[6];
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  uint64_t v14 = type metadata accessor for CRLProto_BoardIdentifier(0);
  uint64_t v15 = *(void *)(v14 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
  {
    uint64_t v16 = sub_1005057FC(&qword_101677D28);
    memcpy(v12, v13, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    v10(v12, v13, v9);
    uint64_t v17 = *(int *)(v14 + 20);
    __dst = &v12[v17];
    uint64_t v18 = &v13[v17];
    uint64_t v34 = v10;
    uint64_t v19 = type metadata accessor for CRLProto_Data(0);
    uint64_t v20 = *(void *)(v19 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
    {
      uint64_t v21 = sub_1005057FC((uint64_t *)&unk_101674160);
      memcpy(__dst, v18, *(void *)(*(void *)(v21 - 8) + 64));
    }
    else
    {
      unint64_t v31 = *((void *)v18 + 1);
      uint64_t v32 = *(void *)v18;
      sub_100510D4C(*(void *)v18, v31);
      *(void *)__dst = v32;
      *((void *)__dst + 1) = v31;
      v34(&__dst[*(int *)(v19 + 20)], &v18[*(int *)(v19 + 20)], v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(__dst, 0, 1, v19);
    }
    (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
    uint64_t v10 = v34;
  }
  uint64_t v22 = a3[7];
  uint64_t v23 = (void *)((char *)a1 + v22);
  uint64_t v24 = (uint64_t *)((char *)a2 + v22);
  uint64_t v25 = type metadata accessor for CRLProto_Data(0);
  uint64_t v26 = *(void *)(v25 - 8);
  if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v26 + 48))(v24, 1, v25))
  {
    uint64_t v27 = sub_1005057FC((uint64_t *)&unk_101674160);
    memcpy(v23, v24, *(void *)(*(void *)(v27 - 8) + 64));
  }
  else
  {
    uint64_t v28 = *v24;
    unint64_t v29 = v24[1];
    sub_100510D4C(*v24, v29);
    *uint64_t v23 = v28;
    v23[1] = v29;
    v10((char *)v23 + *(int *)(v25 + 20), (char *)v24 + *(int *)(v25 + 20), v9);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
  }
  return a1;
}

_DWORD *sub_100C2B218(_DWORD *a1, _DWORD *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for UnknownStorage();
  uint64_t v62 = *(void *)(v9 - 8);
  uint64_t v63 = v9;
  int v61 = *(void (**)(char *, char *))(v62 + 24);
  v61(v7, v8);
  uint64_t v10 = a3[6];
  uint64_t v11 = (uint64_t)a1 + v10;
  uint64_t v12 = (uint64_t *)((char *)a2 + v10);
  uint64_t v13 = type metadata accessor for CRLProto_BoardIdentifier(0);
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 48);
  int v16 = v15(v11, 1, v13);
  int v17 = v15((uint64_t)v12, 1, v13);
  if (v16)
  {
    if (!v17)
    {
      uint64_t v59 = *(void (**)(uint64_t, uint64_t *, uint64_t))(v62 + 16);
      v59(v11, v12, v63);
      uint64_t v18 = *(int *)(v13 + 20);
      __dst = (void *)(v11 + v18);
      uint64_t v19 = (char *)v12 + v18;
      uint64_t v20 = type metadata accessor for CRLProto_Data(0);
      uint64_t v21 = *(void *)(v20 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
      {
        uint64_t v22 = sub_1005057FC((uint64_t *)&unk_101674160);
        memcpy(__dst, v19, *(void *)(*(void *)(v22 - 8) + 64));
      }
      else
      {
        unint64_t v57 = *((void *)v19 + 1);
        uint64_t v58 = *(void *)v19;
        sub_100510D4C(*(void *)v19, v57);
        void *__dst = v58;
        __dst[1] = v57;
        v59((uint64_t)__dst + *(int *)(v20 + 20), (uint64_t *)&v19[*(int *)(v20 + 20)], v63);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v21 + 56))(__dst, 0, 1, v20);
      }
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
      goto LABEL_14;
    }
    goto LABEL_7;
  }
  if (v17)
  {
    sub_100C16A08(v11, type metadata accessor for CRLProto_BoardIdentifier);
LABEL_7:
    size_t v23 = *(void *)(*(void *)(sub_1005057FC(&qword_101677D28) - 8) + 64);
    uint64_t v24 = (void *)v11;
    uint64_t v25 = v12;
LABEL_8:
    memcpy(v24, v25, v23);
LABEL_14:
    uint64_t v36 = v63;
    goto LABEL_15;
  }
  ((void (*)(uint64_t, uint64_t *, uint64_t))v61)(v11, v12, v63);
  uint64_t v26 = *(int *)(v13 + 20);
  uint64_t v27 = (uint64_t *)(v11 + v26);
  uint64_t v28 = (uint64_t *)((char *)v12 + v26);
  uint64_t v29 = type metadata accessor for CRLProto_Data(0);
  uint64_t v30 = *(void *)(v29 - 8);
  unint64_t v31 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v30 + 48);
  int v32 = v31(v27, 1, v29);
  int v33 = v31(v28, 1, v29);
  if (v32)
  {
    if (!v33)
    {
      uint64_t v34 = *v28;
      unint64_t v35 = v28[1];
      sub_100510D4C(*v28, v35);
      *uint64_t v27 = v34;
      v27[1] = v35;
      uint64_t v36 = v63;
      (*(void (**)(char *, char *, uint64_t))(v62 + 16))((char *)v27 + *(int *)(v29 + 20), (char *)v28 + *(int *)(v29 + 20), v63);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v30 + 56))(v27, 0, 1, v29);
      goto LABEL_15;
    }
    goto LABEL_25;
  }
  if (v33)
  {
    sub_100C16A08((uint64_t)v27, type metadata accessor for CRLProto_Data);
LABEL_25:
    size_t v23 = *(void *)(*(void *)(sub_1005057FC((uint64_t *)&unk_101674160) - 8) + 64);
    uint64_t v24 = v27;
    uint64_t v25 = v28;
    goto LABEL_8;
  }
  uint64_t v53 = *v28;
  unint64_t v54 = v28[1];
  sub_100510D4C(*v28, v54);
  uint64_t v55 = *v27;
  unint64_t v56 = v27[1];
  *uint64_t v27 = v53;
  v27[1] = v54;
  sub_100510084(v55, v56);
  uint64_t v36 = v63;
  ((void (*)(char *, char *, uint64_t))v61)((char *)v27 + *(int *)(v29 + 20), (char *)v28 + *(int *)(v29 + 20), v63);
LABEL_15:
  uint64_t v37 = a3[7];
  uint64_t v38 = (uint64_t *)((char *)a1 + v37);
  unint64_t v39 = (uint64_t *)((char *)a2 + v37);
  uint64_t v40 = type metadata accessor for CRLProto_Data(0);
  uint64_t v41 = *(void *)(v40 - 8);
  uint64_t v42 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v41 + 48);
  int v43 = v42(v38, 1, v40);
  int v44 = v42(v39, 1, v40);
  if (!v43)
  {
    if (!v44)
    {
      uint64_t v49 = *v39;
      unint64_t v50 = v39[1];
      sub_100510D4C(*v39, v50);
      uint64_t v51 = *v38;
      unint64_t v52 = v38[1];
      *uint64_t v38 = v49;
      v38[1] = v50;
      sub_100510084(v51, v52);
      ((void (*)(char *, char *, uint64_t))v61)((char *)v38 + *(int *)(v40 + 20), (char *)v39 + *(int *)(v40 + 20), v36);
      return a1;
    }
    sub_100C16A08((uint64_t)v38, type metadata accessor for CRLProto_Data);
    goto LABEL_20;
  }
  if (v44)
  {
LABEL_20:
    uint64_t v47 = sub_1005057FC((uint64_t *)&unk_101674160);
    memcpy(v38, v39, *(void *)(*(void *)(v47 - 8) + 64));
    return a1;
  }
  uint64_t v45 = *v39;
  unint64_t v46 = v39[1];
  sub_100510D4C(*v39, v46);
  *uint64_t v38 = v45;
  v38[1] = v46;
  (*(void (**)(char *, char *, uint64_t))(v62 + 16))((char *)v38 + *(int *)(v40 + 20), (char *)v39 + *(int *)(v40 + 20), v36);
  (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v41 + 56))(v38, 0, 1, v40);
  return a1;
}

_DWORD *sub_100C2B808(_DWORD *a1, _DWORD *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for UnknownStorage();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32);
  v10(v7, v8, v9);
  uint64_t v11 = a3[6];
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  uint64_t v14 = type metadata accessor for CRLProto_BoardIdentifier(0);
  uint64_t v15 = *(void *)(v14 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
  {
    uint64_t v16 = sub_1005057FC(&qword_101677D28);
    memcpy(v12, v13, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    v10(v12, v13, v9);
    uint64_t v17 = *(int *)(v14 + 20);
    __dst = &v12[v17];
    uint64_t v18 = &v13[v17];
    uint64_t v30 = v10;
    uint64_t v19 = type metadata accessor for CRLProto_Data(0);
    uint64_t v20 = *(void *)(v19 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
    {
      uint64_t v21 = sub_1005057FC((uint64_t *)&unk_101674160);
      memcpy(__dst, v18, *(void *)(*(void *)(v21 - 8) + 64));
    }
    else
    {
      *(_OWORD *)__dst = *(_OWORD *)v18;
      v30(&__dst[*(int *)(v19 + 20)], &v18[*(int *)(v19 + 20)], v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(__dst, 0, 1, v19);
    }
    (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
    uint64_t v10 = v30;
  }
  uint64_t v22 = a3[7];
  size_t v23 = (_OWORD *)((char *)a1 + v22);
  uint64_t v24 = (_OWORD *)((char *)a2 + v22);
  uint64_t v25 = type metadata accessor for CRLProto_Data(0);
  uint64_t v26 = *(void *)(v25 - 8);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v26 + 48))(v24, 1, v25))
  {
    uint64_t v27 = sub_1005057FC((uint64_t *)&unk_101674160);
    memcpy(v23, v24, *(void *)(*(void *)(v27 - 8) + 64));
  }
  else
  {
    *size_t v23 = *v24;
    v10((char *)v23 + *(int *)(v25 + 20), (char *)v24 + *(int *)(v25 + 20), v9);
    (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
  }
  return a1;
}

_DWORD *sub_100C2BB60(_DWORD *a1, _DWORD *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for UnknownStorage();
  uint64_t v52 = *(void *)(v9 - 8);
  uint64_t v53 = v9;
  uint64_t v51 = *(void (**)(char *, char *))(v52 + 40);
  v51(v7, v8);
  uint64_t v10 = a3[6];
  uint64_t v11 = (uint64_t)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = type metadata accessor for CRLProto_BoardIdentifier(0);
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 48);
  int v16 = v15(v11, 1, v13);
  int v17 = v15((uint64_t)v12, 1, v13);
  if (v16)
  {
    if (!v17)
    {
      uint64_t v49 = *(void (**)(uint64_t, char *, uint64_t))(v52 + 32);
      v49(v11, v12, v53);
      uint64_t v18 = *(int *)(v13 + 20);
      __dst = (_OWORD *)(v11 + v18);
      uint64_t v19 = &v12[v18];
      uint64_t v20 = type metadata accessor for CRLProto_Data(0);
      uint64_t v21 = *(void *)(v20 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
      {
        uint64_t v22 = sub_1005057FC((uint64_t *)&unk_101674160);
        memcpy(__dst, v19, *(void *)(*(void *)(v22 - 8) + 64));
      }
      else
      {
        _OWORD *__dst = *(_OWORD *)v19;
        v49((uint64_t)__dst + *(int *)(v20 + 20), &v19[*(int *)(v20 + 20)], v53);
        (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v21 + 56))(__dst, 0, 1, v20);
      }
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
      goto LABEL_14;
    }
    goto LABEL_7;
  }
  if (v17)
  {
    sub_100C16A08(v11, type metadata accessor for CRLProto_BoardIdentifier);
LABEL_7:
    size_t v23 = *(void *)(*(void *)(sub_1005057FC(&qword_101677D28) - 8) + 64);
    uint64_t v24 = (void *)v11;
    uint64_t v25 = v12;
LABEL_8:
    memcpy(v24, v25, v23);
LABEL_14:
    uint64_t v34 = v53;
    goto LABEL_15;
  }
  ((void (*)(uint64_t, char *, uint64_t))v51)(v11, v12, v53);
  uint64_t v26 = *(int *)(v13 + 20);
  uint64_t v27 = v11 + v26;
  uint64_t v28 = &v12[v26];
  uint64_t v29 = type metadata accessor for CRLProto_Data(0);
  uint64_t v30 = *(void *)(v29 - 8);
  unint64_t v31 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v30 + 48);
  int v32 = v31(v27, 1, v29);
  int v33 = v31((uint64_t)v28, 1, v29);
  if (v32)
  {
    if (!v33)
    {
      *(_OWORD *)uint64_t v27 = *(_OWORD *)v28;
      uint64_t v34 = v53;
      (*(void (**)(uint64_t, char *, uint64_t))(v52 + 32))(v27 + *(int *)(v29 + 20), &v28[*(int *)(v29 + 20)], v53);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v30 + 56))(v27, 0, 1, v29);
      goto LABEL_15;
    }
    goto LABEL_25;
  }
  if (v33)
  {
    sub_100C16A08(v27, type metadata accessor for CRLProto_Data);
LABEL_25:
    size_t v23 = *(void *)(*(void *)(sub_1005057FC((uint64_t *)&unk_101674160) - 8) + 64);
    uint64_t v24 = (void *)v27;
    uint64_t v25 = v28;
    goto LABEL_8;
  }
  uint64_t v47 = *(void *)v27;
  unint64_t v48 = *(void *)(v27 + 8);
  *(_OWORD *)uint64_t v27 = *(_OWORD *)v28;
  sub_100510084(v47, v48);
  uint64_t v34 = v53;
  ((void (*)(uint64_t, char *, uint64_t))v51)(v27 + *(int *)(v29 + 20), &v28[*(int *)(v29 + 20)], v53);
LABEL_15:
  uint64_t v35 = a3[7];
  uint64_t v36 = (uint64_t *)((char *)a1 + v35);
  uint64_t v37 = (uint64_t *)((char *)a2 + v35);
  uint64_t v38 = type metadata accessor for CRLProto_Data(0);
  uint64_t v39 = *(void *)(v38 - 8);
  uint64_t v40 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v39 + 48);
  int v41 = v40(v36, 1, v38);
  int v42 = v40(v37, 1, v38);
  if (!v41)
  {
    if (!v42)
    {
      uint64_t v45 = *v36;
      unint64_t v46 = v36[1];
      *(_OWORD *)uint64_t v36 = *(_OWORD *)v37;
      sub_100510084(v45, v46);
      ((void (*)(char *, char *, uint64_t))v51)((char *)v36 + *(int *)(v38 + 20), (char *)v37 + *(int *)(v38 + 20), v34);
      return a1;
    }
    sub_100C16A08((uint64_t)v36, type metadata accessor for CRLProto_Data);
    goto LABEL_20;
  }
  if (v42)
  {
LABEL_20:
    uint64_t v43 = sub_1005057FC((uint64_t *)&unk_101674160);
    memcpy(v36, v37, *(void *)(*(void *)(v43 - 8) + 64));
    return a1;
  }
  *(_OWORD *)uint64_t v36 = *(_OWORD *)v37;
  (*(void (**)(char *, char *, uint64_t))(v52 + 32))((char *)v36 + *(int *)(v38 + 20), (char *)v37 + *(int *)(v38 + 20), v34);
  (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v39 + 56))(v36, 0, 1, v38);
  return a1;
}

uint64_t sub_100C2C108(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100C2C11C);
}

uint64_t sub_100C2C11C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage();
  if (*(_DWORD *)(*(void *)(v6 - 8) + 84) == a2)
  {
    uint64_t v7 = v6;
    uint64_t v8 = *(void *)(v6 - 8);
    uint64_t v9 = a3[5];
LABEL_5:
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
    return v11(a1 + v9, a2, v7);
  }
  uint64_t v10 = sub_1005057FC(&qword_101677D28);
  if (*(_DWORD *)(*(void *)(v10 - 8) + 84) == a2)
  {
    uint64_t v7 = v10;
    uint64_t v8 = *(void *)(v10 - 8);
    uint64_t v9 = a3[6];
    goto LABEL_5;
  }
  uint64_t v13 = sub_1005057FC((uint64_t *)&unk_101674160);
  uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
  uint64_t v15 = v13;
  uint64_t v16 = a1 + a3[7];

  return v14(v16, a2, v15);
}

uint64_t sub_100C2C26C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100C2C280);
}

uint64_t sub_100C2C280(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8 = type metadata accessor for UnknownStorage();
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a3)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a4[5];
LABEL_5:
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);
    return v13(a1 + v11, a2, a2, v9);
  }
  uint64_t v12 = sub_1005057FC(&qword_101677D28);
  if (*(_DWORD *)(*(void *)(v12 - 8) + 84) == a3)
  {
    uint64_t v9 = v12;
    uint64_t v10 = *(void *)(v12 - 8);
    uint64_t v11 = a4[6];
    goto LABEL_5;
  }
  uint64_t v15 = sub_1005057FC((uint64_t *)&unk_101674160);
  uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56);
  uint64_t v17 = v15;
  uint64_t v18 = a1 + a4[7];

  return v16(v18, a2, a2, v17);
}

void sub_100C2C3DC()
{
  type metadata accessor for UnknownStorage();
  if (v0 <= 0x3F)
  {
    sub_100C1A890(319, (unint64_t *)&unk_101698FF0, (void (*)(uint64_t))type metadata accessor for CRLProto_BoardIdentifier);
    if (v1 <= 0x3F)
    {
      sub_100C1A890(319, (unint64_t *)&unk_101697808, (void (*)(uint64_t))type metadata accessor for CRLProto_Data);
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

uint64_t *sub_100C2C528(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v19 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v19 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    a1[2] = a2[2];
    uint64_t v8 = *(int *)(a3 + 24);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = type metadata accessor for UnknownStorage();
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    uint64_t v13 = *(int *)(a3 + 28);
    uint64_t v14 = (uint64_t *)((char *)v4 + v13);
    uint64_t v15 = (uint64_t *)((char *)a2 + v13);
    uint64_t v16 = type metadata accessor for CRLProto_Data(0);
    uint64_t v17 = *(void *)(v16 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
    {
      uint64_t v18 = sub_1005057FC((uint64_t *)&unk_101674160);
      memcpy(v14, v15, *(void *)(*(void *)(v18 - 8) + 64));
    }
    else
    {
      uint64_t v20 = *v15;
      unint64_t v21 = v15[1];
      sub_100510D4C(*v15, v21);
      *uint64_t v14 = v20;
      v14[1] = v21;
      v12((char *)v14 + *(int *)(v16 + 20), (char *)v15 + *(int *)(v16 + 20), v11);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
    }
  }
  return v4;
}

uint64_t sub_100C2C710(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = type metadata accessor for UnknownStorage();
  uint64_t v10 = *(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  v10(v4, v5);
  uint64_t v6 = a1 + *(int *)(a2 + 28);
  uint64_t v7 = type metadata accessor for CRLProto_Data(0);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v6, 1, v7);
  if (!result)
  {
    sub_100510084(*(void *)v6, *(void *)(v6 + 8));
    uint64_t v9 = v6 + *(int *)(v7 + 20);
    return ((uint64_t (*)(uint64_t, uint64_t))v10)(v9, v5);
  }
  return result;
}

void *sub_100C2C824(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  a1[2] = a2[2];
  uint64_t v7 = *(int *)(a3 + 24);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for UnknownStorage();
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  uint64_t v12 = *(int *)(a3 + 28);
  uint64_t v13 = (void *)((char *)a1 + v12);
  uint64_t v14 = (void *)((char *)a2 + v12);
  uint64_t v15 = type metadata accessor for CRLProto_Data(0);
  uint64_t v16 = *(void *)(v15 - 8);
  if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
  {
    uint64_t v17 = sub_1005057FC((uint64_t *)&unk_101674160);
    memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    uint64_t v18 = *v14;
    unint64_t v19 = v14[1];
    sub_100510D4C(*v14, v19);
    *uint64_t v13 = v18;
    v13[1] = v19;
    v11((char *)v13 + *(int *)(v15 + 20), (char *)v14 + *(int *)(v15 + 20), v10);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  }
  return a1;
}

void *sub_100C2C9BC(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for UnknownStorage();
  uint64_t v26 = *(void *)(v9 - 8);
  uint64_t v27 = v9;
  uint64_t v10 = *(void (**)(char *, char *))(v26 + 24);
  v10(v7, v8);
  uint64_t v11 = *(int *)(a3 + 28);
  uint64_t v12 = (void *)((char *)a1 + v11);
  uint64_t v13 = (void *)((char *)a2 + v11);
  uint64_t v14 = type metadata accessor for CRLProto_Data(0);
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v15 + 48);
  LODWORD(v8) = v16(v12, 1, v14);
  int v17 = v16(v13, 1, v14);
  if (!v8)
  {
    if (!v17)
    {
      uint64_t v22 = *v13;
      unint64_t v23 = v13[1];
      sub_100510D4C(*v13, v23);
      uint64_t v24 = *v12;
      unint64_t v25 = v12[1];
      *uint64_t v12 = v22;
      v12[1] = v23;
      sub_100510084(v24, v25);
      ((void (*)(char *, char *, uint64_t))v10)((char *)v12 + *(int *)(v14 + 20), (char *)v13 + *(int *)(v14 + 20), v27);
      return a1;
    }
    sub_100C16A08((uint64_t)v12, type metadata accessor for CRLProto_Data);
    goto LABEL_6;
  }
  if (v17)
  {
LABEL_6:
    uint64_t v20 = sub_1005057FC((uint64_t *)&unk_101674160);
    memcpy(v12, v13, *(void *)(*(void *)(v20 - 8) + 64));
    return a1;
  }
  uint64_t v18 = *v13;
  unint64_t v19 = v13[1];
  sub_100510D4C(*v13, v19);
  *uint64_t v12 = v18;
  v12[1] = v19;
  (*(void (**)(char *, char *, uint64_t))(v26 + 16))((char *)v12 + *(int *)(v14 + 20), (char *)v13 + *(int *)(v14 + 20), v27);
  (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  return a1;
}

uint64_t sub_100C2CC00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (char *)(a1 + v6);
  uint64_t v8 = (char *)(a2 + v6);
  uint64_t v9 = type metadata accessor for UnknownStorage();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32);
  v10(v7, v8, v9);
  uint64_t v11 = *(int *)(a3 + 28);
  uint64_t v12 = (_OWORD *)(a1 + v11);
  uint64_t v13 = (_OWORD *)(a2 + v11);
  uint64_t v14 = type metadata accessor for CRLProto_Data(0);
  uint64_t v15 = *(void *)(v14 - 8);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
  {
    uint64_t v16 = sub_1005057FC((uint64_t *)&unk_101674160);
    memcpy(v12, v13, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    *uint64_t v12 = *v13;
    v10((char *)v12 + *(int *)(v14 + 20), (char *)v13 + *(int *)(v14 + 20), v9);
    (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  }
  return a1;
}

void *sub_100C2CD7C(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  uint64_t v7 = *(int *)(a3 + 24);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for UnknownStorage();
  uint64_t v23 = *(void *)(v10 - 8);
  uint64_t v24 = v10;
  uint64_t v11 = *(void (**)(char *, char *))(v23 + 40);
  v11(v8, v9);
  uint64_t v12 = *(int *)(a3 + 28);
  uint64_t v13 = (void *)((char *)a1 + v12);
  uint64_t v14 = (void *)((char *)a2 + v12);
  uint64_t v15 = type metadata accessor for CRLProto_Data(0);
  uint64_t v16 = *(void *)(v15 - 8);
  int v17 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v16 + 48);
  LODWORD(v9) = v17(v13, 1, v15);
  int v18 = v17(v14, 1, v15);
  if (!v9)
  {
    if (!v18)
    {
      uint64_t v21 = *v13;
      unint64_t v22 = v13[1];
      *(_OWORD *)uint64_t v13 = *(_OWORD *)v14;
      sub_100510084(v21, v22);
      ((void (*)(char *, char *, uint64_t))v11)((char *)v13 + *(int *)(v15 + 20), (char *)v14 + *(int *)(v15 + 20), v24);
      return a1;
    }
    sub_100C16A08((uint64_t)v13, type metadata accessor for CRLProto_Data);
    goto LABEL_6;
  }
  if (v18)
  {
LABEL_6:
    uint64_t v19 = sub_1005057FC((uint64_t *)&unk_101674160);
    memcpy(v13, v14, *(void *)(*(void *)(v19 - 8) + 64));
    return a1;
  }
  *(_OWORD *)uint64_t v13 = *(_OWORD *)v14;
  (*(void (**)(char *, char *, uint64_t))(v23 + 32))((char *)v13 + *(int *)(v15 + 20), (char *)v14 + *(int *)(v15 + 20), v24);
  (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  return a1;
}

uint64_t sub_100C2CFA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100C2CFB8);
}

uint64_t sub_100C2CFB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for UnknownStorage();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a1 + *(int *)(a3 + 24);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_1005057FC((uint64_t *)&unk_101674160);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = a1 + *(int *)(a3 + 28);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t sub_100C2D0E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100C2D0FC);
}

uint64_t sub_100C2D0FC(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for UnknownStorage();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = v5 + *(int *)(a4 + 24);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_1005057FC((uint64_t *)&unk_101674160);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = v5 + *(int *)(a4 + 28);
      return v14(v16, a2, a2, v15);
    }
  }
  return result;
}

void sub_100C2D22C(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

void sub_100C2D260(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t *a6, void (*a7)(uint64_t))
{
  type metadata accessor for UnknownStorage();
  if (v9 <= 0x3F)
  {
    sub_100C1A890(319, a6, a7);
    if (v10 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

unint64_t sub_100C2D348()
{
  unint64_t result = qword_1016990C0;
  if (!qword_1016990C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016990C0);
  }
  return result;
}

unint64_t sub_100C2D3A0()
{
  unint64_t result = qword_1016990C8;
  if (!qword_1016990C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016990C8);
  }
  return result;
}

unint64_t sub_100C2D3F8()
{
  unint64_t result = qword_1016990D0;
  if (!qword_1016990D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016990D0);
  }
  return result;
}

unint64_t sub_100C2D450()
{
  unint64_t result = qword_1016990D8;
  if (!qword_1016990D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016990D8);
  }
  return result;
}

unint64_t sub_100C2D4A8()
{
  unint64_t result = qword_1016990E0;
  if (!qword_1016990E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016990E0);
  }
  return result;
}

unint64_t sub_100C2D500()
{
  unint64_t result = qword_1016990E8;
  if (!qword_1016990E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016990E8);
  }
  return result;
}

uint64_t sub_100C2D580()
{
  swift_release();
  swift_release();
  swift_release();
  uint64_t v1 = v0 + OBJC_IVAR____TtC8Freeform20CRLBoardGroupSession_sessionID;
  uint64_t v2 = type metadata accessor for UUID();
  unint64_t v3 = *(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  v3(v1, v2);
  v3(v0 + OBJC_IVAR____TtC8Freeform20CRLBoardGroupSession_localParticipantUUID, v2);
  swift_release();
  sub_100C2F174(v0 + qword_101699240);
  uint64_t v4 = v0 + *(void *)(*(void *)v0 + 280);
  type metadata accessor for GroupSession.State();
  uint64_t v5 = type metadata accessor for Optional();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  return v0;
}

uint64_t sub_100C2D6D8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = *v1;
  a1[3] = *(void *)(*v1 + 248);
  a1[4] = *(void *)(v2 + 256);
  sub_1005767BC(a1);
  return GroupSession.activity.getter();
}

uint64_t sub_100C2D748(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[16] = a3;
  v4[17] = v3;
  v4[14] = a1;
  v4[15] = a2;
  uint64_t v5 = *v3;
  sub_1005057FC(&qword_101672BB0);
  v4[18] = swift_task_alloc();
  v4[19] = *(void *)(v5 + 248);
  v4[20] = *(void *)(*(void *)(v5 + 256) + 8);
  uint64_t v6 = type metadata accessor for GroupSession.State();
  v4[21] = v6;
  v4[22] = *(void *)(v6 - 8);
  v4[23] = swift_task_alloc();
  v4[24] = swift_task_alloc();
  uint64_t v7 = type metadata accessor for UUID();
  v4[25] = v7;
  v4[26] = *(void *)(v7 - 8);
  v4[27] = swift_task_alloc();
  type metadata accessor for MainActor();
  v4[28] = static MainActor.shared.getter();
  uint64_t v9 = dispatch thunk of Actor.unownedExecutor.getter();
  v4[29] = v9;
  v4[30] = v8;
  return _swift_task_switch(sub_100C2D914, v9, v8);
}

uint64_t sub_100C2D914()
{
  if (qword_10166FBA0 != -1) {
    swift_once();
  }
  uint64_t v2 = v0[26];
  uint64_t v1 = v0[27];
  uint64_t v3 = v0[25];
  uint64_t v4 = v0[17];
  swift_beginAccess();
  uint64_t v5 = (void *)static OS_os_log.realTimeSync;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117E810;
  v0[31] = *(void *)(v4 + qword_10171C2F0);
  id v7 = v5;
  GroupSession.id.getter();
  uint64_t v8 = UUID.uuidString.getter();
  uint64_t v10 = v9;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  *(void *)(inited + 56) = &type metadata for String;
  *(void *)(inited + 64) = sub_100528BE4();
  *(void *)(inited + 32) = v8;
  *(void *)(inited + 40) = v10;
  uint64_t v11 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v7, (uint64_t)&_mh_execute_header, v11, (uint64_t)"Setting up group session sync controller. Group Session UUID: %{public}@", 72, 2, inited);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  uint64_t v12 = *(void *)(v4 + 32);
  v0[32] = v12;
  if (v12)
  {
    swift_retain();
    return _swift_task_switch(sub_100C2DBEC, v12, 0);
  }
  else
  {
    uint64_t v14 = v0[16];
    uint64_t v13 = v0[17];
    uint64_t v15 = v0[14];
    uint64_t v16 = v0[15];
    uint64_t v17 = swift_task_alloc();
    v0[33] = v17;
    *(void *)(v17 + 16) = v13;
    *(void *)(v17 + 24) = v14;
    uint64_t v18 = swift_task_alloc();
    v0[34] = v18;
    *(void *)(v18 + 16) = v13;
    *(void *)(v18 + 24) = v14;
    type metadata accessor for CRLGroupSessionSyncController();
    swift_allocObject();
    swift_unknownObjectRetain();
    uint64_t v19 = (void *)swift_task_alloc();
    v0[35] = v19;
    *uint64_t v19 = v0;
    v19[1] = sub_100C2DDEC;
    return sub_100E2DD64(v15, v16, (uint64_t)&unk_1016992D8, v17, (uint64_t)&unk_1016992E8, v18);
  }
}

uint64_t sub_100C2DBEC()
{
  *(void *)(v0[32] + 120) = v0[15];
  swift_unknownObjectWeakAssign();
  uint64_t v1 = v0[29];
  uint64_t v2 = v0[30];
  return _swift_task_switch(sub_100C2DC5C, v1, v2);
}

uint64_t sub_100C2DC5C()
{
  swift_release();
  uint64_t v2 = *(void *)(v0 + 184);
  uint64_t v1 = *(void *)(v0 + 192);
  uint64_t v3 = *(void *)(v0 + 168);
  uint64_t v4 = *(void *)(v0 + 176);
  uint64_t v5 = *(void *)(v0 + 136);
  GroupSession.state.getter();
  (*(void (**)(uint64_t, void, uint64_t))(v4 + 104))(v2, enum case for GroupSession.State.joined<A>(_:), v3);
  *(unsigned char *)(v0 + 304) = static GroupSession.State.== infix(_:_:)() & 1;
  uint64_t v6 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
  v6(v2, v3);
  v6(v1, v3);
  uint64_t v7 = *(void *)(v5 + 32);
  *(void *)(v0 + 296) = v7;
  if (v7)
  {
    swift_retain();
    return _swift_task_switch(sub_100C2E0F0, v7, 0);
  }
  else
  {
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v8 = *(uint64_t (**)(void))(v0 + 8);
    return v8();
  }
}

uint64_t sub_100C2DDEC(uint64_t a1)
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 288) = a1;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 240);
  uint64_t v4 = *(void *)(v2 + 232);
  return _swift_task_switch(sub_100C2DF54, v4, v3);
}

uint64_t sub_100C2DF54()
{
  *(void *)(*(void *)(v0 + 136) + 32) = *(void *)(v0 + 288);
  swift_release();
  uint64_t v2 = *(void *)(v0 + 184);
  uint64_t v1 = *(void *)(v0 + 192);
  uint64_t v3 = *(void *)(v0 + 168);
  uint64_t v4 = *(void *)(v0 + 176);
  uint64_t v5 = *(void *)(v0 + 136);
  GroupSession.state.getter();
  (*(void (**)(uint64_t, void, uint64_t))(v4 + 104))(v2, enum case for GroupSession.State.joined<A>(_:), v3);
  *(unsigned char *)(v0 + 304) = static GroupSession.State.== infix(_:_:)() & 1;
  uint64_t v6 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
  v6(v2, v3);
  v6(v1, v3);
  uint64_t v7 = *(void *)(v5 + 32);
  *(void *)(v0 + 296) = v7;
  if (v7)
  {
    swift_retain();
    return _swift_task_switch(sub_100C2E0F0, v7, 0);
  }
  else
  {
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v8 = *(uint64_t (**)(void))(v0 + 8);
    return v8();
  }
}

uint64_t sub_100C2E0F0()
{
  uint64_t v1 = *(void *)(v0 + 296);
  int v2 = *(unsigned __int8 *)(v0 + 304);
  if (v2 != *(unsigned __int8 *)(v1 + 210))
  {
    *(unsigned char *)(v1 + 210) = v2;
    uint64_t v3 = *(void *)(v0 + 296);
    if ((v2 & 1) != 0 && *(unsigned char *)(v3 + 208) == 1)
    {
      uint64_t v4 = *(void *)(v0 + 144);
      *(unsigned char *)(v3 + 208) = 0;
      uint64_t v5 = type metadata accessor for TaskPriority();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v4, 1, 1, v5);
      unint64_t v6 = sub_100C2F35C();
      uint64_t v7 = (void *)swift_allocObject();
      uint64_t v7[2] = v3;
      v7[3] = v6;
      v7[4] = v3;
      swift_retain_n();
      sub_1005912D0(v4, (uint64_t)&unk_101692C88, (uint64_t)v7);
      swift_release();
    }
  }
  swift_release();
  uint64_t v8 = *(void *)(v0 + 232);
  uint64_t v9 = *(void *)(v0 + 240);
  return _swift_task_switch(sub_100C2E228, v8, v9);
}

uint64_t sub_100C2E228()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

void sub_100C2E2B8()
{
}

void sub_100C2E314()
{
}

char *sub_100C2E370(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_1005057FC(&qword_101692BC8);
  uint64_t v7 = v6 - 8;
  __chkstk_darwin(v6, v8);
  uint64_t v10 = (char *)v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  *((void *)v3 + 4) = 0;
  uint64_t v11 = &v3[OBJC_IVAR____TtC8Freeform20CRLBoardGroupSession_sessionID];
  uint64_t v12 = type metadata accessor for UUID();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 16);
  v14(v11, a1, v12);
  v14(&v3[OBJC_IVAR____TtC8Freeform20CRLBoardGroupSession_localParticipantUUID], a2, v12);
  uint64_t v15 = *(int *)(v7 + 56);
  v14(v10, a1, v12);
  v10[v15] = 0;
  sub_1005057FC(&qword_101692B78);
  swift_allocObject();
  *((void *)v3 + 2) = CurrentValueSubject.init(_:)();
  v19[1] = &_swiftEmptySetSingleton;
  sub_1005057FC(&qword_101692B88);
  swift_allocObject();
  uint64_t v16 = CurrentValueSubject.init(_:)();
  uint64_t v17 = *(void (**)(uint64_t, uint64_t))(v13 + 8);
  v17(a2, v12);
  v17(a1, v12);
  *((void *)v3 + 3) = v16;
  return v3;
}

uint64_t sub_100C2E548()
{
  type metadata accessor for MainActor();
  static MainActor.shared.getter();
  uint64_t v1 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_100C2E5D8, v1, v0);
}

uint64_t sub_100C2E5D8()
{
  return _assertionFailure(_:_:file:line:flags:)();
}

uint64_t sub_100C2E658()
{
  swift_release();
  swift_release();
  swift_release();
  uint64_t v1 = v0 + OBJC_IVAR____TtC8Freeform20CRLBoardGroupSession_sessionID;
  uint64_t v2 = type metadata accessor for UUID();
  uint64_t v3 = *(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  v3(v1, v2);
  v3(v0 + OBJC_IVAR____TtC8Freeform20CRLBoardGroupSession_localParticipantUUID, v2);

  return swift_deallocClassInstance();
}

uint64_t sub_100C2E740()
{
  return type metadata accessor for CRLBoardGroupSession();
}

uint64_t type metadata accessor for CRLBoardGroupSession()
{
  uint64_t result = qword_101699118;
  if (!qword_101699118) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100C2E794()
{
  uint64_t result = type metadata accessor for UUID();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_100C2E840()
{
  type metadata accessor for GroupSession.State();
  uint64_t result = type metadata accessor for Optional();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_100C2E8FC@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for CRLBoardGroupSession();
  uint64_t result = ObservableObject<>.objectWillChange.getter();
  *a1 = result;
  return result;
}

uint64_t sub_100C2E93C()
{
  return static UUID.== infix(_:_:)();
}

uint64_t sub_100C2E958(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5)
{
  v5[5] = a4;
  v5[6] = a5;
  v5[3] = a2;
  v5[4] = a3;
  void v5[2] = a1;
  v5[7] = *a4;
  type metadata accessor for MainActor();
  v5[8] = static MainActor.shared.getter();
  uint64_t v7 = dispatch thunk of Actor.unownedExecutor.getter();
  v5[9] = v7;
  v5[10] = v6;
  return _swift_task_switch(sub_100C2EA20, v7, v6);
}

uint64_t sub_100C2EA20()
{
  uint64_t v1 = v0[5];
  v0[11] = type metadata accessor for CRLRealTimeMessenger();
  uint64_t v2 = *(void *)(v1 + qword_10171C2F0);
  swift_retain();
  swift_retain();
  swift_unknownObjectRetain();
  uint64_t v3 = (void *)swift_task_alloc();
  v0[12] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_100C2EB14;
  uint64_t v4 = v0[6];
  uint64_t v5 = v0[3];
  uint64_t v6 = v0[4];
  return sub_1007D5DCC(v2, v4, v5, v6);
}

uint64_t sub_100C2EB14(uint64_t a1)
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 104) = a1;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 80);
  uint64_t v4 = *(void *)(v2 + 72);
  return _swift_task_switch(sub_100C2EC3C, v4, v3);
}

uint64_t sub_100C2EC3C()
{
  uint64_t v1 = v0[13];
  uint64_t v2 = v0[11];
  uint64_t v3 = (void *)v0[2];
  swift_release();
  v3[3] = v2;
  long long v3[4] = &off_1015154A8;
  *uint64_t v3 = v1;
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_100C2ECC0(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5)
{
  v5[5] = a4;
  v5[6] = a5;
  v5[3] = a2;
  v5[4] = a3;
  void v5[2] = a1;
  v5[7] = *a4;
  type metadata accessor for MainActor();
  v5[8] = static MainActor.shared.getter();
  uint64_t v7 = dispatch thunk of Actor.unownedExecutor.getter();
  v5[9] = v7;
  v5[10] = v6;
  return _swift_task_switch(sub_100C2ED88, v7, v6);
}

uint64_t sub_100C2ED88()
{
  uint64_t v1 = v0[5];
  v0[11] = type metadata accessor for CRLUnreliableRealTimeMessenger();
  uint64_t v2 = *(void *)(v1 + qword_10171C2F0);
  swift_retain();
  swift_retain();
  swift_unknownObjectRetain();
  uint64_t v3 = (void *)swift_task_alloc();
  v0[12] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_100C2EE7C;
  uint64_t v4 = v0[6];
  uint64_t v5 = v0[3];
  uint64_t v6 = v0[4];
  return sub_1005C8068(v2, v4, v5, v6);
}

uint64_t sub_100C2EE7C(uint64_t a1)
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 104) = a1;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 80);
  uint64_t v4 = *(void *)(v2 + 72);
  return _swift_task_switch(sub_100C2EFA4, v4, v3);
}

uint64_t sub_100C2EFA4()
{
  uint64_t v1 = v0[13];
  uint64_t v2 = v0[11];
  uint64_t v3 = (void *)v0[2];
  swift_release();
  v3[3] = v2;
  long long v3[4] = &off_101509AE8;
  *uint64_t v3 = v1;
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_100C2F028()
{
  swift_release();
  sub_100C2F174(v0 + qword_101699240);
  uint64_t v1 = v0 + *(void *)(*(void *)v0 + 280);
  type metadata accessor for GroupSession.State();
  uint64_t v2 = type metadata accessor for Optional();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);

  return v3(v1, v2);
}

uint64_t sub_100C2F104()
{
  sub_100C2D580();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for CRLBoardGroupSessionBase()
{
  return sub_100568E70();
}

uint64_t sub_100C2F174(uint64_t a1)
{
  uint64_t v2 = sub_1005057FC(&qword_101681D68);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100C2F1D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v9 = *(void **)(v3 + 16);
  uint64_t v8 = *(void *)(v3 + 24);
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v10;
  *uint64_t v10 = v4;
  v10[1] = sub_100528D08;
  return sub_100C2E958(a1, a2, a3, v9, v8);
}

uint64_t sub_100C2F298(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v9 = *(void **)(v3 + 16);
  uint64_t v8 = *(void *)(v3 + 24);
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v10;
  *uint64_t v10 = v4;
  v10[1] = sub_100528488;
  return sub_100C2ECC0(a1, a2, a3, v9, v8);
}

unint64_t sub_100C2F35C()
{
  unint64_t result = qword_101692C80;
  if (!qword_101692C80)
  {
    type metadata accessor for CRLGroupSessionSyncController();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101692C80);
  }
  return result;
}

uint64_t sub_100C2F3B4()
{
  swift_unknownObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

double *sub_100C2F3F4(uint64_t a1)
{
  return sub_100C2F40C(a1);
}

double *sub_100C2F40C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for UUID();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v5 = __chkstk_darwin(v2, v4);
  int v44 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5, v7);
  uint64_t v43 = (char *)&v39 - v8;
  uint64_t v9 = sub_1005057FC((uint64_t *)&unk_101674520);
  uint64_t v50 = *(void *)(v9 - 8);
  uint64_t v11 = __chkstk_darwin(v9 - 8, v10);
  uint64_t v13 = (char *)&v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __chkstk_darwin(v11, v14);
  uint64_t v17 = (char *)&v39 - v16;
  __chkstk_darwin(v15, v18);
  uint64_t v20 = (char *)&v39 - v19;
  uint64_t v21 = *(void *)(a1 + 64);
  uint64_t v48 = a1 + 64;
  uint64_t v22 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v23 = -1;
  if (v22 < 64) {
    uint64_t v23 = ~(-1 << v22);
  }
  unint64_t v24 = v23 & v21;
  int64_t v49 = (unint64_t)(v22 + 63) >> 6;
  unint64_t v25 = (unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48);
  uint64_t v42 = v3;
  uint64_t v47 = (void (**)(char *, char *, uint64_t))(v3 + 32);
  uint64_t v26 = a1;
  unint64_t result = (double *)swift_bridgeObjectRetain();
  int64_t v28 = 0;
  unint64_t v46 = _swiftEmptyArrayStorage;
  uint64_t v41 = v2;
  if (!v24) {
    goto LABEL_7;
  }
LABEL_4:
  unint64_t v29 = __clz(__rbit64(v24));
  v24 &= v24 - 1;
  for (unint64_t i = v29 | (v28 << 6); ; unint64_t i = __clz(__rbit64(v32)) + (v28 << 6))
  {
    sub_100522E9C(*(void *)(v26 + 56) + *(void *)(v50 + 72) * i, (uint64_t)v20, (uint64_t *)&unk_101674520);
    sub_10051B3EC((uint64_t)v20, (uint64_t)v17, (uint64_t *)&unk_101674520);
    sub_100522E9C((uint64_t)v17, (uint64_t)v13, (uint64_t *)&unk_101674520);
    sub_100522F00((uint64_t)v17, (uint64_t *)&unk_101674520);
    if ((*v25)(v13, 1, v2) == 1)
    {
      unint64_t result = (double *)sub_100522F00((uint64_t)v13, (uint64_t *)&unk_101674520);
      if (v24) {
        goto LABEL_4;
      }
    }
    else
    {
      uint64_t v45 = *v47;
      v45(v43, v13, v2);
      v45(v44, v43, v2);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v46 = (double *)sub_100F617D8(0, *((void *)v46 + 2) + 1, 1, (unint64_t)v46);
      }
      unint64_t v35 = *((void *)v46 + 2);
      unint64_t v34 = *((void *)v46 + 3);
      unint64_t v36 = v35 + 1;
      uint64_t v2 = v41;
      if (v35 >= v34 >> 1)
      {
        unint64_t v39 = *((void *)v46 + 2);
        unint64_t v40 = v35 + 1;
        uint64_t v38 = (double *)sub_100F617D8(v34 > 1, v35 + 1, 1, (unint64_t)v46);
        unint64_t v35 = v39;
        unint64_t v36 = v40;
        unint64_t v46 = v38;
      }
      uint64_t v37 = v46;
      *((void *)v46 + 2) = v36;
      unint64_t result = (double *)((uint64_t (*)(char *, char *, uint64_t))v45)((char *)v37+ ((*(unsigned __int8 *)(v42 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v42 + 80))+ *(void *)(v42 + 72) * v35, v44, v2);
      if (v24) {
        goto LABEL_4;
      }
    }
LABEL_7:
    int64_t v31 = v28 + 1;
    if (__OFADD__(v28, 1))
    {
      __break(1u);
      goto LABEL_31;
    }
    if (v31 >= v49) {
      goto LABEL_29;
    }
    unint64_t v32 = *(void *)(v48 + 8 * v31);
    ++v28;
    if (!v32)
    {
      int64_t v28 = v31 + 1;
      if (v31 + 1 >= v49) {
        goto LABEL_29;
      }
      unint64_t v32 = *(void *)(v48 + 8 * v28);
      if (!v32)
      {
        int64_t v28 = v31 + 2;
        if (v31 + 2 >= v49) {
          goto LABEL_29;
        }
        unint64_t v32 = *(void *)(v48 + 8 * v28);
        if (!v32)
        {
          int64_t v28 = v31 + 3;
          if (v31 + 3 >= v49) {
            goto LABEL_29;
          }
          unint64_t v32 = *(void *)(v48 + 8 * v28);
          if (!v32) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v24 = (v32 - 1) & v32;
  }
  int64_t v33 = v31 + 4;
  if (v33 >= v49)
  {
LABEL_29:
    swift_release();
    return v46;
  }
  unint64_t v32 = *(void *)(v48 + 8 * v33);
  if (v32)
  {
    int64_t v28 = v33;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v28 = v33 + 1;
    if (__OFADD__(v33, 1)) {
      break;
    }
    if (v28 >= v49) {
      goto LABEL_29;
    }
    unint64_t v32 = *(void *)(v48 + 8 * v28);
    ++v33;
    if (v32) {
      goto LABEL_22;
    }
  }
LABEL_31:
  __break(1u);
  return result;
}

double *sub_100C2F894(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = a1 + 64;
  uint64_t v4 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(a1 + 64);
  int64_t v7 = (unint64_t)(v4 + 63) >> 6;
  unint64_t result = (double *)swift_bridgeObjectRetain();
  int64_t v9 = 0;
  if (v6) {
    goto LABEL_6;
  }
LABEL_7:
  int64_t v12 = v9 + 1;
  if (!__OFADD__(v9, 1))
  {
    if (v12 < v7)
    {
      unint64_t v13 = *(void *)(v3 + 8 * v12);
      ++v9;
      if (v13) {
        goto LABEL_22;
      }
      int64_t v9 = v12 + 1;
      if (v12 + 1 >= v7) {
        goto LABEL_30;
      }
      unint64_t v13 = *(void *)(v3 + 8 * v9);
      if (v13) {
        goto LABEL_22;
      }
      int64_t v9 = v12 + 2;
      if (v12 + 2 >= v7) {
        goto LABEL_30;
      }
      unint64_t v13 = *(void *)(v3 + 8 * v9);
      if (v13) {
        goto LABEL_22;
      }
      int64_t v9 = v12 + 3;
      if (v12 + 3 >= v7) {
        goto LABEL_30;
      }
      unint64_t v13 = *(void *)(v3 + 8 * v9);
      if (v13)
      {
LABEL_22:
        unint64_t v6 = (v13 - 1) & v13;
        for (unint64_t i = __clz(__rbit64(v13)) + (v9 << 6); ; unint64_t i = v10 | (v9 << 6))
        {
          uint64_t v15 = *(void *)(*(void *)(a1 + 56) + 8 * i);
          uint64_t Strong = swift_weakLoadStrong();
          swift_bridgeObjectRetain();
          swift_retain();
          swift_release();
          if (Strong)
          {
            swift_release();
            unint64_t result = (double *)swift_bridgeObjectRelease();
            if (!v6) {
              goto LABEL_7;
            }
          }
          else
          {
            sub_1005057FC(a2);
            uint64_t v17 = swift_allocObject();
            uint64_t v18 = swift_weakLoadStrong();
            swift_retain();
            if (v18)
            {
              sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"init(root:)", 11, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Sync/CRLTree.swift", 72, 2, 16, (uint64_t)"expected nil value, but non-nil found", 37, 2u, (uint64_t)_swiftEmptyArrayStorage);
              sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"init(root:)", 11, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Sync/CRLTree.swift", 72, 2, 16);
              swift_release();
            }
            *(void *)(v17 + 16) = v15;
            swift_release();
            swift_bridgeObjectRelease();
            specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
            if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
              specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
            }
            specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
            unint64_t result = (double *)specialized Array._endMutation()();
            if (!v6) {
              goto LABEL_7;
            }
          }
LABEL_6:
          unint64_t v10 = __clz(__rbit64(v6));
          v6 &= v6 - 1;
        }
      }
      int64_t v14 = v12 + 4;
      if (v14 < v7)
      {
        unint64_t v13 = *(void *)(v3 + 8 * v14);
        if (v13)
        {
          int64_t v9 = v14;
          goto LABEL_22;
        }
        while (1)
        {
          int64_t v9 = v14 + 1;
          if (__OFADD__(v14, 1)) {
            goto LABEL_32;
          }
          if (v9 >= v7) {
            break;
          }
          unint64_t v13 = *(void *)(v3 + 8 * v9);
          ++v14;
          if (v13) {
            goto LABEL_22;
          }
        }
      }
    }
LABEL_30:
    swift_release();
    return _swiftEmptyArrayStorage;
  }
  __break(1u);
LABEL_32:
  __break(1u);
  return result;
}

double *sub_100C2FBB0(uint64_t a1)
{
  uint64_t v2 = a1 + 64;
  uint64_t v3 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v4 = -1;
  if (v3 < 64) {
    uint64_t v4 = ~(-1 << v3);
  }
  unint64_t v5 = v4 & *(void *)(a1 + 64);
  int64_t v6 = (unint64_t)(v3 + 63) >> 6;
  unint64_t result = (double *)swift_bridgeObjectRetain();
  int64_t v8 = 0;
  if (v5) {
    goto LABEL_6;
  }
LABEL_7:
  int64_t v11 = v8 + 1;
  if (!__OFADD__(v8, 1))
  {
    if (v11 < v6)
    {
      unint64_t v12 = *(void *)(v2 + 8 * v11);
      ++v8;
      if (v12) {
        goto LABEL_22;
      }
      int64_t v8 = v11 + 1;
      if (v11 + 1 >= v6) {
        goto LABEL_30;
      }
      unint64_t v12 = *(void *)(v2 + 8 * v8);
      if (v12) {
        goto LABEL_22;
      }
      int64_t v8 = v11 + 2;
      if (v11 + 2 >= v6) {
        goto LABEL_30;
      }
      unint64_t v12 = *(void *)(v2 + 8 * v8);
      if (v12) {
        goto LABEL_22;
      }
      int64_t v8 = v11 + 3;
      if (v11 + 3 >= v6) {
        goto LABEL_30;
      }
      unint64_t v12 = *(void *)(v2 + 8 * v8);
      if (v12)
      {
LABEL_22:
        unint64_t v5 = (v12 - 1) & v12;
        for (unint64_t i = __clz(__rbit64(v12)) + (v8 << 6); ; unint64_t i = v9 | (v8 << 6))
        {
          uint64_t v14 = *(void *)(*(void *)(a1 + 56) + 8 * i);
          uint64_t Strong = swift_weakLoadStrong();
          swift_bridgeObjectRetain();
          swift_retain();
          swift_release();
          if (Strong)
          {
            swift_release();
            unint64_t result = (double *)swift_bridgeObjectRelease();
            if (!v5) {
              goto LABEL_7;
            }
          }
          else
          {
            sub_1005057FC(&qword_101699950);
            uint64_t v16 = swift_allocObject();
            uint64_t v17 = swift_weakLoadStrong();
            swift_retain();
            if (v17)
            {
              sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"init(root:)", 11, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Sync/CRLTree.swift", 72, 2, 16, (uint64_t)"expected nil value, but non-nil found", 37, 2u, (uint64_t)_swiftEmptyArrayStorage);
              sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"init(root:)", 11, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Sync/CRLTree.swift", 72, 2, 16);
              swift_release();
            }
            *(void *)(v16 + 16) = v14;
            swift_release();
            swift_bridgeObjectRelease();
            specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
            if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
              specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
            }
            specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
            unint64_t result = (double *)specialized Array._endMutation()();
            if (!v5) {
              goto LABEL_7;
            }
          }
LABEL_6:
          unint64_t v9 = __clz(__rbit64(v5));
          v5 &= v5 - 1;
        }
      }
      int64_t v13 = v11 + 4;
      if (v13 < v6)
      {
        unint64_t v12 = *(void *)(v2 + 8 * v13);
        if (v12)
        {
          int64_t v8 = v13;
          goto LABEL_22;
        }
        while (1)
        {
          int64_t v8 = v13 + 1;
          if (__OFADD__(v13, 1)) {
            goto LABEL_32;
          }
          if (v8 >= v6) {
            break;
          }
          unint64_t v12 = *(void *)(v2 + 8 * v8);
          ++v13;
          if (v12) {
            goto LABEL_22;
          }
        }
      }
    }
LABEL_30:
    swift_release();
    return _swiftEmptyArrayStorage;
  }
  __break(1u);
LABEL_32:
  __break(1u);
  return result;
}

unint64_t sub_100C2FED0(uint64_t a1)
{
  uint64_t v89 = type metadata accessor for CRLBoardIdentifierStorage(0);
  __chkstk_darwin(v89, v2);
  uint64_t v88 = (char *)&v81 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1005057FC((uint64_t *)&unk_101674520);
  __chkstk_darwin(v4 - 8, v5);
  int64_t v7 = (char *)&v81 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for UUID();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v11 = __chkstk_darwin(v8, v10);
  unint64_t v98 = (char *)&v81 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __chkstk_darwin(v11, v13);
  uint64_t v107 = (char *)&v81 - v15;
  __chkstk_darwin(v14, v16);
  uint64_t v97 = (char *)&v81 - v17;
  uint64_t v18 = sub_1005057FC(&qword_101672C30);
  __chkstk_darwin(v18 - 8, v19);
  uint64_t v103 = (uint64_t)&v81 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v106 = type metadata accessor for CRLBoardIdentifier(0);
  uint64_t v85 = *(void *)(v106 - 8);
  uint64_t v22 = __chkstk_darwin(v106, v21);
  uint64_t v84 = (uint64_t)&v81 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22, v24);
  uint64_t v82 = (uint64_t)&v81 - v25;
  uint64_t v108 = v8;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    __CocoaSet.makeIterator()();
    sub_10050BF48(0, (unint64_t *)&qword_101674210);
    sub_10062E0F4((unint64_t *)&qword_101674218, (unint64_t *)&qword_101674210);
    uint64_t v8 = v108;
    unint64_t result = Set.Iterator.init(_cocoa:)();
    a1 = v112;
    uint64_t v93 = v113;
    uint64_t v27 = v114;
    uint64_t v28 = v115;
    unint64_t v29 = v116;
  }
  else
  {
    uint64_t v30 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v31 = *(void *)(a1 + 56);
    uint64_t v93 = a1 + 56;
    uint64_t v27 = ~v30;
    uint64_t v32 = -v30;
    if (v32 < 64) {
      uint64_t v33 = ~(-1 << v32);
    }
    else {
      uint64_t v33 = -1;
    }
    unint64_t v29 = v33 & v31;
    unint64_t result = swift_bridgeObjectRetain();
    uint64_t v28 = 0;
  }
  uint64_t v91 = a1 & 0x7FFFFFFFFFFFFFFFLL;
  uint64_t v83 = v27;
  int64_t v92 = (unint64_t)(v27 + 64) >> 6;
  uint64_t v99 = (unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48);
  uint64_t v100 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
  int v96 = (void (**)(char *, char *, uint64_t))(v9 + 32);
  uint64_t v95 = (void (**)(char *, char *, uint64_t))(v9 + 16);
  uint64_t v94 = CKCurrentUserDefaultName;
  unint64_t v87 = (void (**)(char *, uint64_t))(v9 + 8);
  uint64_t v104 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v85 + 48);
  unint64_t v105 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v85 + 56);
  uint64_t v86 = _swiftEmptyArrayStorage;
  char v90 = (char *)&type metadata for Swift.AnyObject + 8;
  uint64_t v101 = a1;
  unint64_t v102 = v7;
  while (a1 < 0)
  {
    uint64_t v37 = __CocoaSet.Iterator.next()();
    if (!v37) {
      goto LABEL_68;
    }
    uint64_t v111 = v37;
    sub_10050BF48(0, (unint64_t *)&qword_101674210);
    swift_unknownObjectRetain();
    swift_dynamicCast();
    id v38 = v117;
    swift_unknownObjectRelease();
    uint64_t v36 = v28;
    if (!v38) {
      goto LABEL_68;
    }
LABEL_31:
    unint64_t v109 = v29;
    uint64_t v110 = v36;
    id v42 = [v38 zoneName];
    uint64_t v43 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v45 = v44;

    v46._countAndFlagsBits = 0x5F6472616F42;
    v46._object = (void *)0xE600000000000000;
    if (String.hasPrefix(_:)(v46))
    {
      uint64_t v47 = HIBYTE(v45) & 0xF;
      if ((v45 & 0x2000000000000000) == 0) {
        uint64_t v47 = v43 & 0xFFFFFFFFFFFFLL;
      }
      if (!v47)
      {
LABEL_42:
        swift_bridgeObjectRelease();
        int64_t v7 = v102;
        uint64_t v8 = v108;
        (*v100)(v102, 1, 1, v108);
        a1 = v101;
        goto LABEL_48;
      }
      unint64_t v48 = 4 * v47;
      while (1)
      {
        unint64_t v49 = String.index(before:)();
        if (String.subscript.getter() == 95 && v50 == 0xE100000000000000) {
          break;
        }
        char v52 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        if (v52) {
          goto LABEL_45;
        }
        if (v49 < 0x4000) {
          goto LABEL_42;
        }
      }
      swift_bridgeObjectRelease();
LABEL_45:
      unint64_t result = String.index(after:)();
      if (v48 < result >> 14) {
        goto LABEL_70;
      }
      String.subscript.getter();
      swift_bridgeObjectRelease();
      static String._fromSubstring(_:)();
      swift_bridgeObjectRelease();
      int64_t v7 = v102;
      UUID.init(uuidString:)();
      a1 = v101;
      uint64_t v8 = v108;
    }
    else
    {
      (*v100)(v7, 1, 1, v8);
    }
    swift_bridgeObjectRelease();
    if ((*v99)(v7, 1, v8) != 1)
    {
      uint64_t v55 = v8;
      unint64_t v56 = v97;
      unint64_t v57 = *v96;
      (*v96)(v97, v7, v55);
      uint64_t v58 = *v95;
      (*v95)(v107, v56, v55);
      id v59 = [v38 ownerName];
      uint64_t v60 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v62 = v61;

      if (v60 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v62 == v63)
      {
        swift_bridgeObjectRelease_n();
        goto LABEL_53;
      }
      char v64 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v64)
      {
LABEL_53:
        uint64_t v65 = 0;
        unint64_t v66 = 0xE000000000000000;
      }
      else
      {
        id v67 = [v38 ownerName];
        uint64_t v65 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        unint64_t v66 = v68;
      }
      uint64_t v69 = v101;
      v58(v98, v107, v108);
      if (v65 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v66 == v70)
      {
        swift_bridgeObjectRelease();
        goto LABEL_59;
      }
      char v71 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if (v71)
      {
LABEL_59:
        swift_bridgeObjectRelease();
        uint64_t v65 = 0;
        unint64_t v66 = 0xE000000000000000;
      }
      unint64_t v72 = *v87;
      uint64_t v73 = v108;
      (*v87)(v107, v108);
      uint64_t v74 = (uint64_t)v88;
      v57(v88, v98, v73);
      uint64_t v8 = v73;
      uint64_t v75 = (uint64_t *)(v74 + *(int *)(v89 + 20));
      *uint64_t v75 = v65;
      v75[1] = v66;
      uint64_t v54 = v103;
      sub_100CE12D8(v74, v103, type metadata accessor for CRLBoardIdentifierStorage);
      v72(v97, v73);
      uint64_t v53 = 0;
      int64_t v7 = v102;
      a1 = v69;
      goto LABEL_61;
    }
LABEL_48:
    sub_100522F00((uint64_t)v7, (uint64_t *)&unk_101674520);
    uint64_t v53 = 1;
    uint64_t v54 = v103;
LABEL_61:
    unint64_t v29 = v109;
    uint64_t v28 = v110;
    uint64_t v76 = v106;
    (*v105)(v54, v53, 1, v106);

    if ((*v104)(v54, 1, v76) == 1)
    {
      unint64_t result = sub_100522F00(v54, &qword_101672C30);
    }
    else
    {
      uint64_t v77 = v82;
      sub_100CE12D8(v54, v82, type metadata accessor for CRLBoardIdentifier);
      sub_100CE12D8(v77, v84, type metadata accessor for CRLBoardIdentifier);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v86 = (double *)sub_100F632EC(0, *((void *)v86 + 2) + 1, 1, (unint64_t)v86);
      }
      unint64_t v79 = *((void *)v86 + 2);
      unint64_t v78 = *((void *)v86 + 3);
      if (v79 >= v78 >> 1) {
        uint64_t v86 = (double *)sub_100F632EC(v78 > 1, v79 + 1, 1, (unint64_t)v86);
      }
      uint64_t v80 = v86;
      *((void *)v86 + 2) = v79 + 1;
      unint64_t result = sub_100CE12D8(v84, (uint64_t)v80+ ((*(unsigned __int8 *)(v85 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v85 + 80))+ *(void *)(v85 + 72) * v79, type metadata accessor for CRLBoardIdentifier);
    }
  }
  if (v29)
  {
    unint64_t v34 = __clz(__rbit64(v29));
    v29 &= v29 - 1;
    unint64_t v35 = v34 | (v28 << 6);
    uint64_t v36 = v28;
LABEL_30:
    id v38 = *(id *)(*(void *)(a1 + 48) + 8 * v35);
    if (!v38) {
      goto LABEL_68;
    }
    goto LABEL_31;
  }
  int64_t v39 = v28 + 1;
  if (!__OFADD__(v28, 1))
  {
    if (v39 >= v92) {
      goto LABEL_68;
    }
    unint64_t v40 = *(void *)(v93 + 8 * v39);
    uint64_t v36 = v28 + 1;
    if (!v40)
    {
      uint64_t v36 = v28 + 2;
      if (v28 + 2 >= v92) {
        goto LABEL_68;
      }
      unint64_t v40 = *(void *)(v93 + 8 * v36);
      if (!v40)
      {
        uint64_t v36 = v28 + 3;
        if (v28 + 3 >= v92) {
          goto LABEL_68;
        }
        unint64_t v40 = *(void *)(v93 + 8 * v36);
        if (!v40)
        {
          uint64_t v36 = v28 + 4;
          if (v28 + 4 >= v92) {
            goto LABEL_68;
          }
          unint64_t v40 = *(void *)(v93 + 8 * v36);
          if (!v40)
          {
            uint64_t v36 = v28 + 5;
            if (v28 + 5 >= v92) {
              goto LABEL_68;
            }
            unint64_t v40 = *(void *)(v93 + 8 * v36);
            if (!v40)
            {
              uint64_t v41 = v28 + 6;
              while (v92 != v41)
              {
                unint64_t v40 = *(void *)(v93 + 8 * v41++);
                if (v40)
                {
                  uint64_t v36 = v41 - 1;
                  goto LABEL_29;
                }
              }
LABEL_68:
              sub_10052E1EC();
              return (unint64_t)v86;
            }
          }
        }
      }
    }
LABEL_29:
    unint64_t v29 = (v40 - 1) & v40;
    unint64_t v35 = __clz(__rbit64(v40)) + (v36 << 6);
    goto LABEL_30;
  }
  __break(1u);
LABEL_70:
  __break(1u);
  return result;
}

double *sub_100C30AAC(unint64_t a1, void *a2)
{
  uint64_t v30 = a2;
  uint64_t v4 = sub_1005057FC(&qword_101699990);
  __chkstk_darwin(v4 - 8, v5);
  int64_t v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = type metadata accessor for CRLAssetAddress();
  uint64_t v25 = *(void *)(v29 - 8);
  __chkstk_darwin(v29, v8);
  uint64_t v28 = (uint64_t)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10, v11);
  uint64_t v24 = (uint64_t)&v23 - v12;
  if (a1 >> 62)
  {
LABEL_21:
    swift_bridgeObjectRetain();
    uint64_t v13 = _CocoaArrayWrapper.endIndex.getter();
    if (v13) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v13 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v13)
    {
LABEL_3:
      unint64_t v27 = a1 & 0xC000000000000001;
      uint64_t v14 = (unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48);
      uint64_t v15 = _swiftEmptyArrayStorage;
      uint64_t v16 = 4;
      unint64_t v26 = a1;
      while (1)
      {
        uint64_t v17 = v16 - 4;
        if (v27)
        {
          a1 = specialized _ArrayBuffer._getElementSlowPath(_:)();
          uint64_t v18 = v16 - 3;
          if (__OFADD__(v17, 1)) {
            goto LABEL_20;
          }
        }
        else
        {
          a1 = *(void *)(a1 + 8 * v16);
          swift_retain();
          uint64_t v18 = v16 - 3;
          if (__OFADD__(v17, 1))
          {
LABEL_20:
            __break(1u);
            goto LABEL_21;
          }
        }
        unint64_t v31 = a1;
        sub_100C9A6D4((uint64_t *)&v31, v30, (uint64_t)v7);
        if (v2)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_release();
          return v15;
        }
        swift_release();
        if ((*v14)(v7, 1, v29) == 1)
        {
          sub_100522F00((uint64_t)v7, &qword_101699990);
        }
        else
        {
          uint64_t v19 = v24;
          sub_100CE12D8((uint64_t)v7, v24, (uint64_t (*)(void))type metadata accessor for CRLAssetAddress);
          sub_100CE12D8(v19, v28, (uint64_t (*)(void))type metadata accessor for CRLAssetAddress);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v15 = (double *)sub_100F64E18(0, *((void *)v15 + 2) + 1, 1, (unint64_t)v15);
          }
          unint64_t v21 = *((void *)v15 + 2);
          unint64_t v20 = *((void *)v15 + 3);
          if (v21 >= v20 >> 1) {
            uint64_t v15 = (double *)sub_100F64E18(v20 > 1, v21 + 1, 1, (unint64_t)v15);
          }
          *((void *)v15 + 2) = v21 + 1;
          sub_100CE12D8(v28, (uint64_t)v15+ ((*(unsigned __int8 *)(v25 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80))+ *(void *)(v25 + 72) * v21, (uint64_t (*)(void))type metadata accessor for CRLAssetAddress);
        }
        a1 = v26;
        ++v16;
        if (v18 == v13)
        {
          swift_bridgeObjectRelease();
          return v15;
        }
      }
    }
  }
  swift_bridgeObjectRelease();
  return _swiftEmptyArrayStorage;
}

uint64_t sub_100C30E08(uint64_t a1, uint64_t *a2, uint64_t *a3)
{
  unint64_t v34 = a3;
  uint64_t v3 = a2;
  uint64_t v37 = sub_1005057FC(a2);
  uint64_t v6 = __chkstk_darwin(v37, v5);
  uint64_t v8 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6, v9);
  uint64_t v11 = (char *)&v32 - v10;
  unint64_t v39 = (unint64_t)_swiftEmptyArrayStorage;
  uint64_t v12 = *(void *)(a1 + 64);
  uint64_t v35 = a1 + 64;
  uint64_t v13 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v14 = -1;
  if (v13 < 64) {
    uint64_t v14 = ~(-1 << v13);
  }
  unint64_t v15 = v14 & v12;
  int64_t v36 = (unint64_t)(v13 + 63) >> 6;
  uint64_t v38 = a1;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v17 = 0;
  uint64_t v33 = v3;
  if (v15) {
    goto LABEL_6;
  }
LABEL_7:
  int64_t v20 = v17 + 1;
  if (!__OFADD__(v17, 1))
  {
    if (v20 < v36)
    {
      unint64_t v21 = *(void *)(v35 + 8 * v20);
      ++v17;
      if (v21) {
        goto LABEL_22;
      }
      int64_t v17 = v20 + 1;
      if (v20 + 1 >= v36) {
        goto LABEL_30;
      }
      unint64_t v21 = *(void *)(v35 + 8 * v17);
      if (v21) {
        goto LABEL_22;
      }
      int64_t v17 = v20 + 2;
      if (v20 + 2 >= v36) {
        goto LABEL_30;
      }
      unint64_t v21 = *(void *)(v35 + 8 * v17);
      if (v21) {
        goto LABEL_22;
      }
      int64_t v17 = v20 + 3;
      if (v20 + 3 >= v36) {
        goto LABEL_30;
      }
      unint64_t v21 = *(void *)(v35 + 8 * v17);
      if (v21)
      {
LABEL_22:
        unint64_t v15 = (v21 - 1) & v21;
        for (unint64_t i = __clz(__rbit64(v21)) + (v17 << 6); ; unint64_t i = v18 | (v17 << 6))
        {
          uint64_t v23 = v38;
          uint64_t v24 = *(void *)(v38 + 48);
          uint64_t v25 = type metadata accessor for UUID();
          (*(void (**)(char *, unint64_t, uint64_t))(*(void *)(v25 - 8) + 16))(v11, v24 + *(void *)(*(void *)(v25 - 8) + 72) * i, v25);
          uint64_t v26 = v37;
          *(void *)&v11[*(int *)(v37 + 48)] = *(void *)(*(void *)(v23 + 56) + 8 * i);
          sub_10051B3EC((uint64_t)v11, (uint64_t)v8, v3);
          uint64_t v27 = *(void *)&v8[*(int *)(v26 + 48)];
          uint64_t v28 = v3;
          uint64_t Strong = swift_weakLoadStrong();
          swift_retain();
          swift_release();
          if (Strong)
          {
            uint64_t result = sub_100522F00((uint64_t)v8, v28);
            uint64_t v3 = v28;
            if (!v15) {
              goto LABEL_7;
            }
          }
          else
          {
            sub_1005057FC(v34);
            uint64_t v30 = swift_allocObject();
            uint64_t v31 = swift_weakLoadStrong();
            swift_retain();
            if (v31)
            {
              sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"init(root:)", 11, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Sync/CRLTree.swift", 72, 2, 16, (uint64_t)"expected nil value, but non-nil found", 37, 2u, (uint64_t)_swiftEmptyArrayStorage);
              sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"init(root:)", 11, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Sync/CRLTree.swift", 72, 2, 16);
              swift_release();
            }
            *(void *)(v30 + 16) = v27;
            uint64_t v3 = v33;
            sub_100522F00((uint64_t)v8, v33);
            specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
            if (*(void *)((v39 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v39 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
              specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
            }
            specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
            uint64_t result = specialized Array._endMutation()();
            if (!v15) {
              goto LABEL_7;
            }
          }
LABEL_6:
          unint64_t v18 = __clz(__rbit64(v15));
          v15 &= v15 - 1;
        }
      }
      int64_t v22 = v20 + 4;
      if (v22 < v36)
      {
        unint64_t v21 = *(void *)(v35 + 8 * v22);
        if (v21)
        {
          int64_t v17 = v22;
          goto LABEL_22;
        }
        while (1)
        {
          int64_t v17 = v22 + 1;
          if (__OFADD__(v22, 1)) {
            goto LABEL_32;
          }
          if (v17 >= v36) {
            break;
          }
          unint64_t v21 = *(void *)(v35 + 8 * v17);
          ++v22;
          if (v21) {
            goto LABEL_22;
          }
        }
      }
    }
LABEL_30:
    swift_release();
    return v39;
  }
  __break(1u);
LABEL_32:
  __break(1u);
  return result;
}

id sub_100C3122C()
{
  uint64_t v1 = v0;
  uint64_t v2 = *(void *)&v0[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManagerLock];
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v2 + 16));
  uint64_t v3 = OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManager;
  uint64_t v4 = *(void **)&v0[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManager];
  if (v4)
  {
    id v5 = *(id *)&v0[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManager];
  }
  else
  {
    id v6 = objc_allocWithZone((Class)type metadata accessor for CRLAssetFileManager());
    uint64_t v7 = v0;
    id v8 = sub_100EAFDE4((uint64_t)v7);

    uint64_t v9 = *(void **)&v1[v3];
    *(void *)&v1[v3] = v8;
    id v5 = v8;

    uint64_t v4 = 0;
  }
  uint64_t v10 = *(os_unfair_lock_s **)(v2 + 16);
  id v11 = v4;
  os_unfair_lock_unlock(v10);
  return v5;
}

uint64_t sub_100C312D8(uint64_t a1)
{
  type metadata accessor for CRLTransactableHashableWrapper();
  sub_100CDE0D8((unint64_t *)&qword_10169A0A0, (void (*)(uint64_t))type metadata accessor for CRLTransactableHashableWrapper);
  uint64_t result = Set.init(minimumCapacity:)();
  int64_t v3 = 0;
  uint64_t v16 = result;
  uint64_t v4 = a1 + 64;
  uint64_t v5 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(a1 + 64);
  int64_t v8 = (unint64_t)(v5 + 63) >> 6;
  while (1)
  {
    if (v7)
    {
      unint64_t v9 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v10 = v9 | (v3 << 6);
      goto LABEL_5;
    }
    int64_t v12 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v12 >= v8) {
      goto LABEL_23;
    }
    unint64_t v13 = *(void *)(v4 + 8 * v12);
    ++v3;
    if (!v13)
    {
      int64_t v3 = v12 + 1;
      if (v12 + 1 >= v8) {
        goto LABEL_23;
      }
      unint64_t v13 = *(void *)(v4 + 8 * v3);
      if (!v13)
      {
        int64_t v3 = v12 + 2;
        if (v12 + 2 >= v8) {
          goto LABEL_23;
        }
        unint64_t v13 = *(void *)(v4 + 8 * v3);
        if (!v13)
        {
          int64_t v3 = v12 + 3;
          if (v12 + 3 >= v8) {
            goto LABEL_23;
          }
          unint64_t v13 = *(void *)(v4 + 8 * v3);
          if (!v13) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v7 = (v13 - 1) & v13;
    unint64_t v10 = __clz(__rbit64(v13)) + (v3 << 6);
LABEL_5:
    uint64_t v11 = *(void *)(*(void *)(a1 + 48) + 8 * v10);
    swift_retain();
    sub_100CB4EEC(&v15, v11);
    uint64_t result = swift_release();
  }
  int64_t v14 = v12 + 4;
  if (v14 >= v8)
  {
LABEL_23:
    swift_release();
    return v16;
  }
  unint64_t v13 = *(void *)(v4 + 8 * v14);
  if (v13)
  {
    int64_t v3 = v14;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v3 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v3 >= v8) {
      goto LABEL_23;
    }
    unint64_t v13 = *(void *)(v4 + 8 * v3);
    ++v14;
    if (v13) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_100C314A8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for UUID();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2, v4);
  uint64_t v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7, v8);
  unint64_t v10 = (char *)&v28 - v9;
  uint64_t v11 = sub_1005057FC((uint64_t *)&unk_101674520);
  __chkstk_darwin(v11 - 8, v12);
  int64_t v14 = (char *)&v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100CDE0D8((unint64_t *)&qword_1016770E0, (void (*)(uint64_t))&type metadata accessor for UUID);
  uint64_t result = Set.init(minimumCapacity:)();
  int64_t v16 = 0;
  uint64_t v34 = a1;
  uint64_t v35 = result;
  uint64_t v19 = *(void *)(a1 + 64);
  uint64_t v18 = a1 + 64;
  uint64_t v17 = v19;
  uint64_t v20 = 1 << *(unsigned char *)(v18 - 32);
  uint64_t v21 = -1;
  if (v20 < 64) {
    uint64_t v21 = ~(-1 << v20);
  }
  unint64_t v22 = v21 & v17;
  uint64_t v29 = v18;
  int64_t v30 = (unint64_t)(v20 + 63) >> 6;
  uint64_t v32 = v3 + 16;
  uint64_t v33 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56);
  uint64_t v31 = v3 + 48;
  if ((v21 & v17) == 0) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v23 = __clz(__rbit64(v22));
  v22 &= v22 - 1;
  for (unint64_t i = v23 | (v16 << 6); ; unint64_t i = __clz(__rbit64(v26)) + (v16 << 6))
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v14, *(void *)(v34 + 48) + *(void *)(v3 + 72) * i, v2);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v3 + 56))(v14, 0, 1, v2);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v14, 1, v2) == 1) {
      goto LABEL_25;
    }
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v6, v14, v2);
    sub_100CB4BC8((uint64_t)v10, v6);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v10, v2);
    if (v22) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v25 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v25 >= v30) {
      goto LABEL_24;
    }
    unint64_t v26 = *(void *)(v29 + 8 * v25);
    ++v16;
    if (!v26)
    {
      int64_t v16 = v25 + 1;
      if (v25 + 1 >= v30) {
        goto LABEL_24;
      }
      unint64_t v26 = *(void *)(v29 + 8 * v16);
      if (!v26)
      {
        int64_t v16 = v25 + 2;
        if (v25 + 2 >= v30) {
          goto LABEL_24;
        }
        unint64_t v26 = *(void *)(v29 + 8 * v16);
        if (!v26)
        {
          int64_t v16 = v25 + 3;
          if (v25 + 3 >= v30) {
            goto LABEL_24;
          }
          unint64_t v26 = *(void *)(v29 + 8 * v16);
          if (!v26) {
            break;
          }
        }
      }
    }
LABEL_20:
    unint64_t v22 = (v26 - 1) & v26;
  }
  int64_t v27 = v25 + 4;
  if (v27 >= v30)
  {
LABEL_24:
    (*v33)(v14, 1, 1, v2);
LABEL_25:
    swift_release();
    return v35;
  }
  unint64_t v26 = *(void *)(v29 + 8 * v27);
  if (v26)
  {
    int64_t v16 = v27;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v16 = v27 + 1;
    if (__OFADD__(v27, 1)) {
      break;
    }
    if (v16 >= v30) {
      goto LABEL_24;
    }
    unint64_t v26 = *(void *)(v29 + 8 * v16);
    ++v27;
    if (v26) {
      goto LABEL_20;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

void sub_100C3185C(uint64_t a1)
{
  sub_10050BF48(0, (unint64_t *)&qword_101674210);
  sub_10062E0F4((unint64_t *)&qword_101674218, (unint64_t *)&qword_101674210);
  int64_t v2 = 0;
  v13[1] = (id)Set.init(minimumCapacity:)();
  uint64_t v3 = a1 + 64;
  uint64_t v4 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(a1 + 64);
  int64_t v7 = (unint64_t)(v4 + 63) >> 6;
  while (1)
  {
    if (v6)
    {
      unint64_t v8 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      unint64_t v9 = v8 | (v2 << 6);
      goto LABEL_5;
    }
    int64_t v10 = v2 + 1;
    if (__OFADD__(v2, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v10 >= v7) {
      goto LABEL_23;
    }
    unint64_t v11 = *(void *)(v3 + 8 * v10);
    ++v2;
    if (!v11)
    {
      int64_t v2 = v10 + 1;
      if (v10 + 1 >= v7) {
        goto LABEL_23;
      }
      unint64_t v11 = *(void *)(v3 + 8 * v2);
      if (!v11)
      {
        int64_t v2 = v10 + 2;
        if (v10 + 2 >= v7) {
          goto LABEL_23;
        }
        unint64_t v11 = *(void *)(v3 + 8 * v2);
        if (!v11)
        {
          int64_t v2 = v10 + 3;
          if (v10 + 3 >= v7) {
            goto LABEL_23;
          }
          unint64_t v11 = *(void *)(v3 + 8 * v2);
          if (!v11) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v6 = (v11 - 1) & v11;
    unint64_t v9 = __clz(__rbit64(v11)) + (v2 << 6);
LABEL_5:
    sub_100CBAB1C(v13, *(id *)(*(void *)(a1 + 48) + 8 * v9), (unint64_t *)&qword_101674210, (uint64_t)CKRecordZoneID_ptr, (uint64_t *)&unk_101671280);
  }
  int64_t v12 = v10 + 4;
  if (v12 >= v7)
  {
LABEL_23:
    swift_release();
    return;
  }
  unint64_t v11 = *(void *)(v3 + 8 * v12);
  if (v11)
  {
    int64_t v2 = v12;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v2 = v12 + 1;
    if (__OFADD__(v12, 1)) {
      break;
    }
    if (v2 >= v7) {
      goto LABEL_23;
    }
    unint64_t v11 = *(void *)(v3 + 8 * v2);
    ++v12;
    if (v11) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
}

void sub_100C31A4C(unint64_t a1)
{
  unint64_t v1 = a1;
  unint64_t v2 = a1 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0) {
    __CocoaDictionary.count.getter();
  }
  sub_10050BF48(0, (unint64_t *)&qword_101674210);
  sub_10062E0F4((unint64_t *)&qword_101674218, (unint64_t *)&qword_101674210);
  v19[1] = (id)Set.init(minimumCapacity:)();
  if (v2)
  {
    uint64_t v3 = __CocoaDictionary.makeIterator()();
    unint64_t v18 = 0;
    uint64_t v4 = 0;
    unint64_t v5 = 0;
    unint64_t v1 = v3 | 0x8000000000000000;
  }
  else
  {
    uint64_t v6 = -1 << *(unsigned char *)(v1 + 32);
    unint64_t v18 = v1 + 64;
    uint64_t v4 = ~v6;
    uint64_t v7 = -v6;
    if (v7 < 64) {
      uint64_t v8 = ~(-1 << v7);
    }
    else {
      uint64_t v8 = -1;
    }
    unint64_t v5 = v8 & *(void *)(v1 + 64);
  }
  uint64_t v9 = 0;
  int64_t v17 = (unint64_t)(v4 + 64) >> 6;
  while ((v1 & 0x8000000000000000) != 0)
  {
    if (!__CocoaDictionary.Iterator.nextKey()()) {
      goto LABEL_34;
    }
    swift_unknownObjectRetain();
    swift_dynamicCast();
    id v13 = v19[0];
    swift_unknownObjectRelease();
    if (!v13) {
      goto LABEL_34;
    }
    uint64_t v10 = v5;
    uint64_t v12 = v9;
LABEL_12:
    sub_100CBAB1C(v19, v13, (unint64_t *)&qword_101674210, (uint64_t)CKRecordZoneID_ptr, (uint64_t *)&unk_101671280);

    uint64_t v9 = v12;
    unint64_t v5 = v10;
  }
  if (v5)
  {
    uint64_t v10 = (v5 - 1) & v5;
    unint64_t v11 = __clz(__rbit64(v5)) | (v9 << 6);
    uint64_t v12 = v9;
LABEL_11:
    id v13 = *(id *)(*(void *)(v1 + 48) + 8 * v11);
    if (!v13) {
      goto LABEL_34;
    }
    goto LABEL_12;
  }
  int64_t v14 = v9 + 1;
  if (!__OFADD__(v9, 1))
  {
    if (v14 >= v17) {
      goto LABEL_34;
    }
    unint64_t v15 = *(void *)(v18 + 8 * v14);
    uint64_t v12 = v9 + 1;
    if (!v15)
    {
      uint64_t v12 = v9 + 2;
      if (v9 + 2 >= v17) {
        goto LABEL_34;
      }
      unint64_t v15 = *(void *)(v18 + 8 * v12);
      if (!v15)
      {
        uint64_t v12 = v9 + 3;
        if (v9 + 3 >= v17) {
          goto LABEL_34;
        }
        unint64_t v15 = *(void *)(v18 + 8 * v12);
        if (!v15)
        {
          uint64_t v12 = v9 + 4;
          if (v9 + 4 >= v17) {
            goto LABEL_34;
          }
          unint64_t v15 = *(void *)(v18 + 8 * v12);
          if (!v15)
          {
            uint64_t v12 = v9 + 5;
            if (v9 + 5 >= v17) {
              goto LABEL_34;
            }
            unint64_t v15 = *(void *)(v18 + 8 * v12);
            if (!v15)
            {
              uint64_t v16 = v9 + 6;
              while (v17 != v16)
              {
                unint64_t v15 = *(void *)(v18 + 8 * v16++);
                if (v15)
                {
                  uint64_t v12 = v16 - 1;
                  goto LABEL_30;
                }
              }
LABEL_34:
              sub_10052E1EC();
              return;
            }
          }
        }
      }
    }
LABEL_30:
    uint64_t v10 = (v15 - 1) & v15;
    unint64_t v11 = __clz(__rbit64(v15)) + (v12 << 6);
    goto LABEL_11;
  }
  __break(1u);
}

uint64_t sub_100C31D54(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for CRLBoardIdentifier(0);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2, v4);
  uint64_t v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7, v8);
  uint64_t v10 = (char *)&v27 - v9;
  __chkstk_darwin(v11, v12);
  int64_t v14 = (char *)&v27 - v13;
  sub_100CDE0D8(&qword_10167D0C8, (void (*)(uint64_t))type metadata accessor for CRLBoardIdentifier);
  uint64_t result = Set.init(minimumCapacity:)();
  int64_t v16 = 0;
  uint64_t v28 = result;
  uint64_t v17 = a1 + 64;
  uint64_t v18 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v19 = -1;
  if (v18 < 64) {
    uint64_t v19 = ~(-1 << v18);
  }
  unint64_t v20 = v19 & *(void *)(a1 + 64);
  int64_t v21 = (unint64_t)(v18 + 63) >> 6;
  while (1)
  {
    if (v20)
    {
      unint64_t v22 = __clz(__rbit64(v20));
      v20 &= v20 - 1;
      unint64_t v23 = v22 | (v16 << 6);
      goto LABEL_5;
    }
    int64_t v24 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v24 >= v21) {
      goto LABEL_23;
    }
    unint64_t v25 = *(void *)(v17 + 8 * v24);
    ++v16;
    if (!v25)
    {
      int64_t v16 = v24 + 1;
      if (v24 + 1 >= v21) {
        goto LABEL_23;
      }
      unint64_t v25 = *(void *)(v17 + 8 * v16);
      if (!v25)
      {
        int64_t v16 = v24 + 2;
        if (v24 + 2 >= v21) {
          goto LABEL_23;
        }
        unint64_t v25 = *(void *)(v17 + 8 * v16);
        if (!v25)
        {
          int64_t v16 = v24 + 3;
          if (v24 + 3 >= v21) {
            goto LABEL_23;
          }
          unint64_t v25 = *(void *)(v17 + 8 * v16);
          if (!v25) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v20 = (v25 - 1) & v25;
    unint64_t v23 = __clz(__rbit64(v25)) + (v16 << 6);
LABEL_5:
    sub_100CE144C(*(void *)(a1 + 48) + *(void *)(v3 + 72) * v23, (uint64_t)v14, type metadata accessor for CRLBoardIdentifier);
    sub_100CE12D8((uint64_t)v14, (uint64_t)v6, type metadata accessor for CRLBoardIdentifier);
    sub_100CB7090((uint64_t)v10, (uint64_t)v6);
    uint64_t result = sub_100CE14B4((uint64_t)v10, type metadata accessor for CRLBoardIdentifier);
  }
  int64_t v26 = v24 + 4;
  if (v26 >= v21)
  {
LABEL_23:
    swift_release();
    return v28;
  }
  unint64_t v25 = *(void *)(v17 + 8 * v26);
  if (v25)
  {
    int64_t v16 = v26;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v16 = v26 + 1;
    if (__OFADD__(v26, 1)) {
      break;
    }
    if (v16 >= v21) {
      goto LABEL_23;
    }
    unint64_t v25 = *(void *)(v17 + 8 * v16);
    ++v26;
    if (v25) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_100C32020(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for CRLSpotlightManager.ChangeType(0);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2, v4);
  uint64_t v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7, v8);
  uint64_t v10 = (char *)&v19 - v9;
  uint64_t v11 = sub_1005057FC(&qword_1016920F8);
  __chkstk_darwin(v11 - 8, v12);
  int64_t v14 = (char *)&v19 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100CDE0D8(&qword_1016998F0, (void (*)(uint64_t))type metadata accessor for CRLSpotlightManager.ChangeType);
  uint64_t v15 = Set.init(minimumCapacity:)();
  uint64_t v23 = v15;
  uint64_t v19 = a1;
  long long v20 = xmmword_1011B18A0;
  long long v21 = 0u;
  long long v22 = 0u;
  sub_100CD7F74((uint64_t)v14);
  int64_t v16 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48);
  if (v16(v14, 1, v2) != 1)
  {
    do
    {
      sub_100CE12D8((uint64_t)v14, (uint64_t)v6, type metadata accessor for CRLSpotlightManager.ChangeType);
      sub_100CBB68C((uint64_t)v10, (uint64_t)v6);
      sub_100CE14B4((uint64_t)v10, type metadata accessor for CRLSpotlightManager.ChangeType);
      sub_100CD7F74((uint64_t)v14);
    }
    while (v16(v14, 1, v2) != 1);
    uint64_t v15 = v23;
  }
  uint64_t v17 = *((void *)&v20 + 1);
  swift_bridgeObjectRelease();
  sub_100CE8F58(v17);
  return v15;
}

uint64_t sub_100C32284(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for UUID();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v5 = __chkstk_darwin(v2, v4);
  uint64_t v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5, v8);
  uint64_t v10 = (char *)&v28 - v9;
  uint64_t v11 = sub_1005057FC((uint64_t *)&unk_101674520);
  __chkstk_darwin(v11 - 8, v12);
  int64_t v14 = (char *)&v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100CDE0D8((unint64_t *)&qword_1016770E0, (void (*)(uint64_t))&type metadata accessor for UUID);
  uint64_t result = Set.init(minimumCapacity:)();
  int64_t v16 = 0;
  uint64_t v34 = a1;
  uint64_t v35 = result;
  uint64_t v19 = *(void *)(a1 + 64);
  uint64_t v18 = a1 + 64;
  uint64_t v17 = v19;
  uint64_t v20 = 1 << *(unsigned char *)(v18 - 32);
  uint64_t v21 = -1;
  if (v20 < 64) {
    uint64_t v21 = ~(-1 << v20);
  }
  unint64_t v22 = v21 & v17;
  uint64_t v29 = v18;
  int64_t v30 = (unint64_t)(v20 + 63) >> 6;
  uint64_t v32 = v3 + 16;
  uint64_t v33 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56);
  uint64_t v31 = v3 + 48;
  if ((v21 & v17) == 0) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v23 = __clz(__rbit64(v22));
  v22 &= v22 - 1;
  for (unint64_t i = v23 | (v16 << 6); ; unint64_t i = __clz(__rbit64(v26)) + (v16 << 6))
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v14, *(void *)(v34 + 56) + *(void *)(v3 + 72) * i, v2);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v3 + 56))(v14, 0, 1, v2);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v14, 1, v2) == 1) {
      goto LABEL_25;
    }
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v7, v14, v2);
    sub_100CB4BC8((uint64_t)v10, v7);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v10, v2);
    if (v22) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v25 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v25 >= v30) {
      goto LABEL_24;
    }
    unint64_t v26 = *(void *)(v29 + 8 * v25);
    ++v16;
    if (!v26)
    {
      int64_t v16 = v25 + 1;
      if (v25 + 1 >= v30) {
        goto LABEL_24;
      }
      unint64_t v26 = *(void *)(v29 + 8 * v16);
      if (!v26)
      {
        int64_t v16 = v25 + 2;
        if (v25 + 2 >= v30) {
          goto LABEL_24;
        }
        unint64_t v26 = *(void *)(v29 + 8 * v16);
        if (!v26)
        {
          int64_t v16 = v25 + 3;
          if (v25 + 3 >= v30) {
            goto LABEL_24;
          }
          unint64_t v26 = *(void *)(v29 + 8 * v16);
          if (!v26) {
            break;
          }
        }
      }
    }
LABEL_20:
    unint64_t v22 = (v26 - 1) & v26;
  }
  int64_t v27 = v25 + 4;
  if (v27 >= v30)
  {
LABEL_24:
    (*v33)(v14, 1, 1, v2);
LABEL_25:
    swift_release();
    return v35;
  }
  unint64_t v26 = *(void *)(v29 + 8 * v27);
  if (v26)
  {
    int64_t v16 = v27;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v16 = v27 + 1;
    if (__OFADD__(v27, 1)) {
      break;
    }
    if (v16 >= v30) {
      goto LABEL_24;
    }
    unint64_t v26 = *(void *)(v29 + 8 * v16);
    ++v27;
    if (v26) {
      goto LABEL_20;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_100C32634(uint64_t a1)
{
  uint64_t result = Set.init(minimumCapacity:)();
  int64_t v3 = 0;
  uint64_t v18 = result;
  uint64_t v4 = a1 + 64;
  uint64_t v5 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(a1 + 64);
  int64_t v8 = (unint64_t)(v5 + 63) >> 6;
  while (1)
  {
    if (v7)
    {
      unint64_t v9 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v10 = v9 | (v3 << 6);
      goto LABEL_5;
    }
    int64_t v14 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v14 >= v8) {
      goto LABEL_23;
    }
    unint64_t v15 = *(void *)(v4 + 8 * v14);
    ++v3;
    if (!v15)
    {
      int64_t v3 = v14 + 1;
      if (v14 + 1 >= v8) {
        goto LABEL_23;
      }
      unint64_t v15 = *(void *)(v4 + 8 * v3);
      if (!v15)
      {
        int64_t v3 = v14 + 2;
        if (v14 + 2 >= v8) {
          goto LABEL_23;
        }
        unint64_t v15 = *(void *)(v4 + 8 * v3);
        if (!v15)
        {
          int64_t v3 = v14 + 3;
          if (v14 + 3 >= v8) {
            goto LABEL_23;
          }
          unint64_t v15 = *(void *)(v4 + 8 * v3);
          if (!v15) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v7 = (v15 - 1) & v15;
    unint64_t v10 = __clz(__rbit64(v15)) + (v3 << 6);
LABEL_5:
    uint64_t v11 = (Swift::Int *)(*(void *)(a1 + 48) + 16 * v10);
    Swift::Int v12 = *v11;
    Swift::Int v13 = v11[1];
    swift_bridgeObjectRetain();
    sub_100CB8180(&v17, v12, v13);
    uint64_t result = swift_bridgeObjectRelease();
  }
  int64_t v16 = v14 + 4;
  if (v16 >= v8)
  {
LABEL_23:
    swift_release();
    return v18;
  }
  unint64_t v15 = *(void *)(v4 + 8 * v16);
  if (v15)
  {
    int64_t v3 = v16;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v3 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v3 >= v8) {
      goto LABEL_23;
    }
    unint64_t v15 = *(void *)(v4 + 8 * v3);
    ++v16;
    if (v15) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

void sub_100C327CC(uint64_t a1)
{
  type metadata accessor for CRLSceneInfo();
  sub_100CDE0D8(&qword_10169FA90, (void (*)(uint64_t))type metadata accessor for CRLSceneInfo);
  int64_t v2 = 0;
  v13[1] = (id)Set.init(minimumCapacity:)();
  uint64_t v3 = a1 + 64;
  uint64_t v4 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(a1 + 64);
  int64_t v7 = (unint64_t)(v4 + 63) >> 6;
  while (1)
  {
    if (v6)
    {
      unint64_t v8 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      unint64_t v9 = v8 | (v2 << 6);
      goto LABEL_5;
    }
    int64_t v10 = v2 + 1;
    if (__OFADD__(v2, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v10 >= v7) {
      goto LABEL_23;
    }
    unint64_t v11 = *(void *)(v3 + 8 * v10);
    ++v2;
    if (!v11)
    {
      int64_t v2 = v10 + 1;
      if (v10 + 1 >= v7) {
        goto LABEL_23;
      }
      unint64_t v11 = *(void *)(v3 + 8 * v2);
      if (!v11)
      {
        int64_t v2 = v10 + 2;
        if (v10 + 2 >= v7) {
          goto LABEL_23;
        }
        unint64_t v11 = *(void *)(v3 + 8 * v2);
        if (!v11)
        {
          int64_t v2 = v10 + 3;
          if (v10 + 3 >= v7) {
            goto LABEL_23;
          }
          unint64_t v11 = *(void *)(v3 + 8 * v2);
          if (!v11) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v6 = (v11 - 1) & v11;
    unint64_t v9 = __clz(__rbit64(v11)) + (v2 << 6);
LABEL_5:
    sub_100CBC418(v13, *(id *)(*(void *)(a1 + 48) + 8 * v9), (void (*)(void))type metadata accessor for CRLSceneInfo, &qword_101671068, (void (*)(void))type metadata accessor for CRLSceneInfo);
  }
  int64_t v12 = v10 + 4;
  if (v12 >= v7)
  {
LABEL_23:
    swift_release();
    return;
  }
  unint64_t v11 = *(void *)(v3 + 8 * v12);
  if (v11)
  {
    int64_t v2 = v12;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v2 = v12 + 1;
    if (__OFADD__(v12, 1)) {
      break;
    }
    if (v2 >= v7) {
      goto LABEL_23;
    }
    unint64_t v11 = *(void *)(v3 + 8 * v2);
    ++v12;
    if (v11) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
}

unint64_t sub_100C329C8(unint64_t result, uint64_t a2, unint64_t a3)
{
  uint64_t v3 = HIBYTE(a3) & 0xF;
  if ((a3 & 0x2000000000000000) == 0) {
    uint64_t v3 = a2 & 0xFFFFFFFFFFFFLL;
  }
  if (4 * v3 >= result >> 14) {
    return String.subscript.getter();
  }
  __break(1u);
  return result;
}

uint64_t sub_100C32A14@<X0>(void *a1@<X8>)
{
  uint64_t v3 = sub_1005057FC(&qword_101699710);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3, v5);
  int64_t v7 = (char *)&v52 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for UUID();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8, v10);
  int64_t v12 = (char *)&v52 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1005057FC(&qword_101699718);
  __chkstk_darwin(v13 - 8, v14);
  int64_t v16 = (uint64_t *)((char *)&v52 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v59 = sub_1005057FC(&qword_10169A750);
  uint64_t v17 = *(void *)(v59 - 8);
  __chkstk_darwin(v59, v18);
  uint64_t v21 = (char *)&v52 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = *v1;
  uint64_t v23 = v1[1];
  uint64_t v25 = v1[2];
  int64_t v24 = v1[3];
  int64_t v26 = v24;
  unint64_t v27 = v1[4];
  uint64_t v53 = v21;
  uint64_t v54 = v7;
  uint64_t v60 = v25;
  uint64_t v61 = v23;
  if (v27)
  {
    uint64_t v57 = v4;
    int64_t v58 = v24;
    uint64_t v28 = v8;
    uint64_t v55 = v3;
    unint64_t v56 = a1;
    uint64_t v29 = (v27 - 1) & v27;
    unint64_t v30 = __clz(__rbit64(v27)) | (v24 << 6);
LABEL_3:
    uint64_t v31 = (uint64_t *)(*(void *)(v22 + 48) + 16 * v30);
    uint64_t v32 = *v31;
    uint64_t v33 = v31[1];
    uint64_t v34 = v28;
    uint64_t v35 = v22;
    (*(void (**)(char *, unint64_t, uint64_t))(v9 + 16))(v12, *(void *)(v22 + 56) + *(void *)(v9 + 72) * v30, v28);
    uint64_t v36 = v59;
    uint64_t v37 = (char *)v16 + *(int *)(v59 + 48);
    *int64_t v16 = v32;
    v16[1] = v33;
    uint64_t v38 = v12;
    uint64_t v39 = v36;
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v37, v38, v34);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v17 + 56))(v16, 0, 1, v39);
    swift_bridgeObjectRetain();
    uint64_t v3 = v55;
    a1 = v56;
    uint64_t v4 = v57;
    goto LABEL_25;
  }
  int64_t v40 = v24 + 1;
  if (__OFADD__(v24, 1))
  {
    __break(1u);
LABEL_23:
    int64_t v26 = v19;
    goto LABEL_24;
  }
  int64_t v41 = (unint64_t)(v25 + 64) >> 6;
  if (v40 < v41)
  {
    unint64_t v42 = *(void *)(v23 + 8 * v40);
    if (v42)
    {
LABEL_7:
      uint64_t v28 = v8;
      unint64_t v56 = a1;
      uint64_t v57 = v4;
      uint64_t v55 = v3;
      uint64_t v29 = (v42 - 1) & v42;
      unint64_t v30 = __clz(__rbit64(v42)) + (v40 << 6);
      int64_t v58 = v40;
      goto LABEL_3;
    }
    int64_t v43 = v24 + 2;
    int64_t v26 = v24 + 1;
    if (v24 + 2 < v41)
    {
      unint64_t v42 = *(void *)(v23 + 8 * v43);
      if (v42)
      {
LABEL_10:
        int64_t v40 = v43;
        goto LABEL_7;
      }
      int64_t v26 = v24 + 2;
      if (v24 + 3 < v41)
      {
        unint64_t v42 = *(void *)(v23 + 8 * (v24 + 3));
        if (v42)
        {
          int64_t v40 = v24 + 3;
          goto LABEL_7;
        }
        int64_t v43 = v24 + 4;
        int64_t v26 = v24 + 3;
        if (v24 + 4 < v41)
        {
          unint64_t v42 = *(void *)(v23 + 8 * v43);
          if (v42) {
            goto LABEL_10;
          }
          int64_t v40 = v24 + 5;
          int64_t v26 = v24 + 4;
          if (v24 + 5 < v41)
          {
            unint64_t v42 = *(void *)(v23 + 8 * v40);
            if (v42) {
              goto LABEL_7;
            }
            int64_t v19 = v41 - 1;
            uint64_t v44 = v24 + 6;
            while (v41 != v44)
            {
              unint64_t v42 = *(void *)(v23 + 8 * v44++);
              if (v42)
              {
                int64_t v40 = v44 - 1;
                goto LABEL_7;
              }
            }
            goto LABEL_23;
          }
        }
      }
    }
  }
LABEL_24:
  int64_t v58 = v26;
  uint64_t v39 = v59;
  uint64_t v35 = v22;
  (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(v17 + 56))(v16, 1, 1, v59);
  uint64_t v29 = 0;
LABEL_25:
  uint64_t v45 = v61;
  *unint64_t v1 = v35;
  v1[1] = v45;
  int64_t v46 = v58;
  void v1[2] = v60;
  v1[3] = v46;
  long long v1[4] = v29;
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v17 + 48))(v16, 1, v39) == 1)
  {
    sub_100522F00((uint64_t)v16, &qword_101699718);
    return (*(uint64_t (**)(void *, uint64_t, uint64_t, uint64_t))(v4 + 56))(a1, 1, 1, v3);
  }
  else
  {
    uint64_t v48 = (uint64_t)v53;
    sub_10051B3EC((uint64_t)v16, (uint64_t)v53, &qword_10169A750);
    uint64_t v49 = (uint64_t)&v54[*(int *)(v3 + 48)];
    uint64_t v50 = v1[5];
    uint64_t result = sub_10051B3EC(v48, v49, &qword_10169A750);
    if (__OFADD__(v50, 1))
    {
      __break(1u);
    }
    else
    {
      v1[5] = v50 + 1;
      uint64_t v51 = (uint64_t)a1 + *(int *)(v3 + 48);
      *a1 = v50;
      sub_10051B3EC(v49, v51, &qword_10169A750);
      return (*(uint64_t (**)(void *, void, uint64_t, uint64_t))(v4 + 56))(a1, 0, 1, v3);
    }
  }
  return result;
}

id sub_100C32EEC()
{
  uint64_t v1 = *(void *)&v0[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetManagerLock];
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v1 + 16));
  uint64_t v2 = OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetManager;
  uint64_t v3 = *(void **)&v0[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetManager];
  if (v3)
  {
    id v4 = *(id *)&v0[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetManager];
  }
  else
  {
    uint64_t v5 = (objc_class *)type metadata accessor for CRLAssetManager();
    uint64_t v6 = (char *)objc_allocWithZone(v5);
    swift_unknownObjectWeakInit();
    uint64_t v7 = OBJC_IVAR____TtC8Freeform15CRLAssetManager_lock;
    type metadata accessor for CRLUnfairLock();
    uint64_t v8 = swift_allocObject();
    uint64_t v9 = v0;
    uint64_t v10 = v6;
    uint64_t v11 = (_DWORD *)swift_slowAlloc();
    *uint64_t v11 = 0;
    *(void *)(v8 + 16) = v11;
    atomic_thread_fence(memory_order_acq_rel);
    *(void *)&v6[v7] = v8;
    *(void *)&v10[OBJC_IVAR____TtC8Freeform15CRLAssetManager_assets] = _swiftEmptyDictionarySingleton;
    uint64_t v12 = OBJC_IVAR____TtC8Freeform15CRLAssetManager_owners;
    *(void *)&v10[v12] = [self mapTableWithKeyOptions:517 valueOptions:0];
    *(void *)&v10[OBJC_IVAR____TtC8Freeform15CRLAssetManager_garbageCollectionWorkItem] = 0;
    swift_unknownObjectWeakAssign();

    v18.receiver = v10;
    v18.super_class = v5;
    [super init];

    uint64_t v14 = *(void **)&v0[v2];
    *(void *)&v0[v2] = v13;
    id v4 = v13;

    uint64_t v3 = 0;
  }
  uint64_t v15 = *(os_unfair_lock_s **)(v1 + 16);
  id v16 = v3;
  os_unfair_lock_unlock(v15);
  return v4;
}

uint64_t sub_100C33084(uint64_t a1, void (*a2)(void **__return_ptr, uint64_t *), uint64_t a3, void (*a4)(void **__return_ptr, void *), uint64_t a5, void (*a6)(double **__return_ptr, void *), uint64_t a7)
{
  void (*v55)(double **__return_ptr, void *);
  uint64_t v57;
  void *v59;
  uint64_t v60;
  void v61[2];
  uint64_t v62[4];

  uint64_t v57 = *(void *)(a1 + 16);
  if (v57)
  {
    uint64_t v9 = a1;
    uint64_t v10 = 0;
    uint64_t v11 = _swiftEmptyDictionarySingleton;
    uint64_t v54 = swift_bridgeObjectRetain();
    uint64_t v55 = a6;
    uint64_t v53 = a7;
    while (1)
    {
      *(_OWORD *)uint64_t v62 = *(_OWORD *)(v9 + 16 * v10 + 32);
      swift_unknownObjectRetain();
      a2(&v59, v62);
      uint64_t v12 = v59;
      if (v59) {
        break;
      }
      swift_unknownObjectRelease();
LABEL_4:
      if (v57 == ++v10)
      {
        swift_bridgeObjectRelease();
        goto LABEL_23;
      }
    }
    uint64_t v13 = v60;
    v61[0] = v59;
    v61[1] = v60;
    a4(&v59, v61);
    uint64_t v14 = (uint64_t)v59;
    uint64_t v15 = v60;
    sub_1005057FC(&qword_10167AEC0);
    id v16 = (void *)swift_allocObject();
    v16[6] = _swiftEmptyArrayStorage;
    swift_weakInit();
    void v16[2] = v14;
    void v16[3] = v15;
    v16[4] = v12;
    v16[5] = v13;
    uint64_t v17 = v11[2];
    swift_unknownObjectRetain();
    if (v17)
    {
      sub_100955F50(v14, v15);
      if (v18)
      {
        swift_retain();
        sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"constructDisjointTrees(from:transform:nodeIDProvider:nodeParentIDProvider:)", 75, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Sync/CRLTree.swift", 72, 2, 54, (uint64_t)"expected nil value, but non-nil found", 37, 2u, (uint64_t)_swiftEmptyArrayStorage);
        sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"constructDisjointTrees(from:transform:nodeIDProvider:nodeParentIDProvider:)", 75, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Sync/CRLTree.swift", 72, 2, 54);
        swift_release();
      }
    }
    uint64_t v20 = v16[2];
    uint64_t v19 = v16[3];
    swift_bridgeObjectRetain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v59 = v11;
    unint64_t v23 = sub_100955F50(v20, v19);
    uint64_t v24 = v11[2];
    BOOL v25 = (v22 & 1) == 0;
    uint64_t v26 = v24 + v25;
    if (__OFADD__(v24, v25))
    {
LABEL_46:
      __break(1u);
LABEL_47:
      __break(1u);
      goto LABEL_48;
    }
    char v27 = v22;
    if (v11[3] < v26)
    {
      sub_100968B50(v26, isUniquelyReferenced_nonNull_native);
      unint64_t v28 = sub_100955F50(v20, v19);
      if ((v27 & 1) != (v29 & 1)) {
        goto LABEL_49;
      }
      unint64_t v23 = v28;
      uint64_t v11 = v59;
      if ((v27 & 1) == 0) {
        goto LABEL_18;
      }
LABEL_16:
      uint64_t v30 = v11[7];
      swift_release();
      *(void *)(v30 + 8 * v23) = v16;
LABEL_20:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      a7 = v53;
      uint64_t v9 = v54;
      a6 = v55;
      goto LABEL_4;
    }
    if (isUniquelyReferenced_nonNull_native)
    {
      uint64_t v11 = v59;
      if (v22) {
        goto LABEL_16;
      }
    }
    else
    {
      sub_100980EA8();
      uint64_t v11 = v59;
      if (v27) {
        goto LABEL_16;
      }
    }
LABEL_18:
    v11[(v23 >> 6) + 8] |= 1 << v23;
    uint64_t v31 = (uint64_t *)(v11[6] + 16 * v23);
    *uint64_t v31 = v20;
    v31[1] = v19;
    *(void *)(v11[7] + 8 * v23) = v16;
    uint64_t v32 = v11[2];
    BOOL v33 = __OFADD__(v32, 1);
    uint64_t v34 = v32 + 1;
    if (v33) {
      goto LABEL_47;
    }
    _OWORD v11[2] = v34;
    swift_bridgeObjectRetain();
    goto LABEL_20;
  }
  uint64_t v11 = _swiftEmptyDictionarySingleton;
LABEL_23:
  uint64_t v36 = v11 + 8;
  uint64_t v35 = v11[8];
  v62[0] = (uint64_t)&_swiftEmptySetSingleton;
  uint64_t v37 = -1 << *((unsigned char *)v11 + 32);
  if (-v37 < 64) {
    uint64_t v38 = ~(-1 << -(char)v37);
  }
  else {
    uint64_t v38 = -1;
  }
  unint64_t v39 = v38 & v35;
  int64_t v40 = (unint64_t)(63 - v37) >> 6;
  swift_bridgeObjectRetain();
  int64_t v41 = 0;
  while (1)
  {
    if (v39)
    {
      unint64_t v42 = __clz(__rbit64(v39));
      v39 &= v39 - 1;
      unint64_t v43 = v42 | (v41 << 6);
      goto LABEL_28;
    }
    int64_t v46 = v41 + 1;
    if (__OFADD__(v41, 1))
    {
      __break(1u);
      goto LABEL_46;
    }
    if (v46 >= v40) {
      goto LABEL_44;
    }
    unint64_t v47 = v36[v46];
    int64_t v48 = v41 + 1;
    if (!v47)
    {
      int64_t v48 = v41 + 2;
      if (v41 + 2 >= v40) {
        goto LABEL_44;
      }
      unint64_t v47 = v36[v48];
      if (!v47)
      {
        int64_t v48 = v41 + 3;
        if (v41 + 3 >= v40) {
          goto LABEL_44;
        }
        unint64_t v47 = v36[v48];
        if (!v47) {
          break;
        }
      }
    }
LABEL_43:
    unint64_t v39 = (v47 - 1) & v47;
    unint64_t v43 = __clz(__rbit64(v47)) + (v48 << 6);
    int64_t v41 = v48;
LABEL_28:
    uint64_t v44 = *(uint64_t **)(v11[7] + 8 * v43);
    swift_bridgeObjectRetain();
    swift_retain();
    uint64_t v45 = swift_bridgeObjectRetain();
    sub_100C35DA8(v45, v44, v62, a6, a7, sub_100F68540, (void (*)(uint64_t, uint64_t))sub_100F4D260);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
  }
  int64_t v49 = v41 + 4;
  if (v41 + 4 >= v40)
  {
LABEL_44:
    sub_10052E1EC();
    uint64_t v50 = swift_bridgeObjectRetain();
    uint64_t v51 = sub_100C2F894(v50, &qword_101699960);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return (uint64_t)v51;
  }
  unint64_t v47 = v36[v49];
  if (v47)
  {
    int64_t v48 = v41 + 4;
    goto LABEL_43;
  }
  while (1)
  {
    int64_t v48 = v49 + 1;
    if (__OFADD__(v49, 1)) {
      break;
    }
    if (v48 >= v40) {
      goto LABEL_44;
    }
    unint64_t v47 = v36[v48];
    ++v49;
    if (v47) {
      goto LABEL_43;
    }
  }
LABEL_48:
  __break(1u);
LABEL_49:
  uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

uint64_t sub_100C335A8(unint64_t a1, void (*a2)(void **__return_ptr, id *), uint64_t a3, void (*a4)(void **__return_ptr, void *), uint64_t a5, void (*a6)(double **__return_ptr, void *), uint64_t a7)
{
  if ((a1 & 0xC000000000000001) != 0)
  {
    unint64_t v75 = 0;
    uint64_t v9 = 0;
    unint64_t v10 = 0;
    unint64_t v11 = __CocoaDictionary.makeIterator()() | 0x8000000000000000;
  }
  else
  {
    uint64_t v12 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v9 = ~v12;
    unint64_t v75 = a1 + 64;
    uint64_t v13 = -v12;
    if (v13 < 64) {
      uint64_t v14 = ~(-1 << v13);
    }
    else {
      uint64_t v14 = -1;
    }
    unint64_t v10 = v14 & *(void *)(a1 + 64);
    unint64_t v11 = a1;
  }
  swift_bridgeObjectRetain();
  uint64_t v15 = 0;
  int64_t v74 = (unint64_t)(v9 + 64) >> 6;
  id v16 = _swiftEmptyDictionarySingleton;
  uint64_t v73 = a7;
  while (1)
  {
    uint64_t v17 = v15;
    if ((v11 & 0x8000000000000000) == 0) {
      break;
    }
    uint64_t v20 = __CocoaDictionary.Iterator.next()();
    if (!v20) {
      goto LABEL_47;
    }
    uint64_t v22 = v21;
    v79[0] = v20;
    sub_10050BF48(0, &qword_10167BED0);
    swift_unknownObjectRetain();
    swift_dynamicCast();
    id v23 = v80;
    swift_unknownObjectRelease();
    v79[0] = v22;
    sub_10050BF48(0, (unint64_t *)&qword_10167C060);
    swift_unknownObjectRetain();
    swift_dynamicCast();
    id v24 = v80;
    swift_unknownObjectRelease();
    if (!v23) {
      goto LABEL_47;
    }
LABEL_31:
    id v80 = v23;
    id v81 = v24;
    a2(&v77, &v80);
    uint64_t v30 = v77;
    if (v77)
    {
      uint64_t v31 = v78;
      v79[0] = v77;
      v79[1] = v78;
      a4(&v77, v79);
      uint64_t v32 = (uint64_t)v77;
      uint64_t v33 = v78;
      sub_1005057FC(&qword_10167AEC0);
      uint64_t v34 = (void *)swift_allocObject();
      v34[6] = _swiftEmptyArrayStorage;
      swift_weakInit();
      v34[2] = v32;
      v34[3] = v33;
      v34[4] = v30;
      v34[5] = v31;
      uint64_t v35 = v16[2];
      swift_unknownObjectRetain();
      if (v35)
      {
        sub_100955F50(v32, v33);
        if (v36)
        {
          swift_retain();
          sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"constructDisjointTrees(from:transform:nodeIDProvider:nodeParentIDProvider:)", 75, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Sync/CRLTree.swift", 72, 2, 54, (uint64_t)"expected nil value, but non-nil found", 37, 2u, (uint64_t)_swiftEmptyArrayStorage);
          sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"constructDisjointTrees(from:transform:nodeIDProvider:nodeParentIDProvider:)", 75, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Sync/CRLTree.swift", 72, 2, 54);
          swift_release();
        }
      }
      uint64_t v37 = v34[2];
      uint64_t v38 = v34[3];
      char v71 = v34;
      swift_bridgeObjectRetain();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v77 = v16;
      unint64_t v41 = sub_100955F50(v37, v38);
      uint64_t v42 = v16[2];
      BOOL v43 = (v40 & 1) == 0;
      uint64_t v44 = v42 + v43;
      if (__OFADD__(v42, v43)) {
        goto LABEL_72;
      }
      char v45 = v40;
      if (v16[3] >= v44)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
          sub_100980EA8();
        }
      }
      else
      {
        sub_100968B50(v44, isUniquelyReferenced_nonNull_native);
        unint64_t v46 = sub_100955F50(v37, v38);
        if ((v45 & 1) != (v47 & 1)) {
          goto LABEL_74;
        }
        unint64_t v41 = v46;
      }
      id v16 = v77;
      if (v45)
      {
        uint64_t v48 = v77[7];
        swift_release();
        *(void *)(v48 + 8 * v41) = v71;
      }
      else
      {
        v77[(v41 >> 6) + 8] |= 1 << v41;
        int64_t v49 = (uint64_t *)(v16[6] + 16 * v41);
        *int64_t v49 = v37;
        v49[1] = v38;
        *(void *)(v16[7] + 8 * v41) = v71;
        uint64_t v50 = v16[2];
        BOOL v51 = __OFADD__(v50, 1);
        uint64_t v52 = v50 + 1;
        if (v51) {
          goto LABEL_73;
        }
        void v16[2] = v52;
        swift_bridgeObjectRetain();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
    }
    else
    {
    }
  }
  if (v10)
  {
    unint64_t v18 = __clz(__rbit64(v10));
    v10 &= v10 - 1;
    unint64_t v19 = v18 | (v15 << 6);
    goto LABEL_30;
  }
  int64_t v25 = v15 + 1;
  if (__OFADD__(v15, 1)) {
    goto LABEL_71;
  }
  if (v25 >= v74) {
    goto LABEL_47;
  }
  unint64_t v26 = *(void *)(v75 + 8 * v25);
  ++v15;
  if (v26) {
    goto LABEL_29;
  }
  uint64_t v15 = v17 + 2;
  if (v17 + 2 >= v74) {
    goto LABEL_47;
  }
  unint64_t v26 = *(void *)(v75 + 8 * v15);
  if (v26) {
    goto LABEL_29;
  }
  uint64_t v15 = v17 + 3;
  if (v17 + 3 >= v74) {
    goto LABEL_47;
  }
  unint64_t v26 = *(void *)(v75 + 8 * v15);
  if (v26) {
    goto LABEL_29;
  }
  uint64_t v15 = v17 + 4;
  if (v17 + 4 >= v74) {
    goto LABEL_47;
  }
  unint64_t v26 = *(void *)(v75 + 8 * v15);
  if (v26) {
    goto LABEL_29;
  }
  uint64_t v15 = v17 + 5;
  if (v17 + 5 >= v74) {
    goto LABEL_47;
  }
  unint64_t v26 = *(void *)(v75 + 8 * v15);
  if (v26)
  {
LABEL_29:
    unint64_t v10 = (v26 - 1) & v26;
    unint64_t v19 = __clz(__rbit64(v26)) + (v15 << 6);
LABEL_30:
    uint64_t v28 = 8 * v19;
    char v29 = *(void **)(*(void *)(v11 + 56) + v28);
    id v23 = *(id *)(*(void *)(v11 + 48) + v28);
    id v24 = v29;
    if (!v23) {
      goto LABEL_47;
    }
    goto LABEL_31;
  }
  uint64_t v27 = v17 + 6;
  while (v74 != v27)
  {
    unint64_t v26 = *(void *)(v75 + 8 * v27++);
    if (v26)
    {
      uint64_t v15 = v27 - 1;
      goto LABEL_29;
    }
  }
LABEL_47:
  sub_10052E1EC();
  uint64_t v54 = v16 + 8;
  uint64_t v53 = v16[8];
  id v80 = &_swiftEmptySetSingleton;
  uint64_t v55 = -1 << *((unsigned char *)v16 + 32);
  if (-v55 < 64) {
    uint64_t v56 = ~(-1 << -(char)v55);
  }
  else {
    uint64_t v56 = -1;
  }
  unint64_t v57 = v56 & v53;
  int64_t v58 = (unint64_t)(63 - v55) >> 6;
  swift_bridgeObjectRetain();
  int64_t v59 = 0;
  while (2)
  {
    if (v57)
    {
      unint64_t v60 = __clz(__rbit64(v57));
      v57 &= v57 - 1;
      unint64_t v61 = v60 | (v59 << 6);
LABEL_52:
      uint64_t v62 = *(uint64_t **)(v16[7] + 8 * v61);
      swift_bridgeObjectRetain();
      swift_retain();
      uint64_t v63 = swift_bridgeObjectRetain();
      sub_100C35DA8(v63, v62, (uint64_t *)&v80, a6, v73, sub_100F68540, (void (*)(uint64_t, uint64_t))sub_100F4D260);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      continue;
    }
    break;
  }
  int64_t v64 = v59 + 1;
  if (__OFADD__(v59, 1))
  {
    __break(1u);
    goto LABEL_70;
  }
  if (v64 >= v58) {
    goto LABEL_68;
  }
  unint64_t v65 = v54[v64];
  int64_t v66 = v59 + 1;
  if (v65) {
    goto LABEL_67;
  }
  int64_t v66 = v59 + 2;
  if (v59 + 2 >= v58) {
    goto LABEL_68;
  }
  unint64_t v65 = v54[v66];
  if (v65) {
    goto LABEL_67;
  }
  int64_t v66 = v59 + 3;
  if (v59 + 3 >= v58) {
    goto LABEL_68;
  }
  unint64_t v65 = v54[v66];
  if (v65)
  {
LABEL_67:
    unint64_t v57 = (v65 - 1) & v65;
    unint64_t v61 = __clz(__rbit64(v65)) + (v66 << 6);
    int64_t v59 = v66;
    goto LABEL_52;
  }
  int64_t v67 = v59 + 4;
  if (v59 + 4 >= v58)
  {
LABEL_68:
    sub_10052E1EC();
    uint64_t v68 = swift_bridgeObjectRetain();
    uint64_t v69 = sub_100C2F894(v68, &qword_101699960);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return (uint64_t)v69;
  }
  unint64_t v65 = v54[v67];
  if (v65)
  {
    int64_t v66 = v59 + 4;
    goto LABEL_67;
  }
  while (1)
  {
    int64_t v66 = v67 + 1;
    if (__OFADD__(v67, 1)) {
      break;
    }
    if (v66 >= v58) {
      goto LABEL_68;
    }
    unint64_t v65 = v54[v66];
    ++v67;
    if (v65) {
      goto LABEL_67;
    }
  }
LABEL_70:
  __break(1u);
LABEL_71:
  __break(1u);
LABEL_72:
  __break(1u);
LABEL_73:
  __break(1u);
LABEL_74:
  uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

uint64_t sub_100C33D20(uint64_t a1, void (*a2)(void **__return_ptr, id *), uint64_t a3, void (*a4)(void **__return_ptr, void *), uint64_t a5, void (*a6)(double **__return_ptr, void *), uint64_t a7)
{
  uint64_t v9 = a1 + 64;
  uint64_t v10 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(a1 + 64);
  int64_t v68 = (unint64_t)(v10 + 63) >> 6;
  swift_bridgeObjectRetain();
  int64_t v13 = 0;
  uint64_t v14 = _swiftEmptyDictionarySingleton;
  uint64_t v65 = v9;
  if (!v12) {
    goto LABEL_7;
  }
LABEL_4:
  unint64_t v15 = __clz(__rbit64(v12));
  v12 &= v12 - 1;
  for (unint64_t i = v15 | (v13 << 6); ; unint64_t i = __clz(__rbit64(v21)) + (v13 << 6))
  {
    uint64_t v17 = *(void *)(a1 + 56);
    id v73 = *(id *)(*(void *)(a1 + 48) + 8 * i);
    long long v74 = *(_OWORD *)(v17 + 16 * i);
    id v18 = v73;
    swift_unknownObjectRetain();
    a2(&v70, &v73);
    unint64_t v19 = v70;
    if (v70)
    {
      uint64_t v23 = v71;
      v72[0] = v70;
      v72[1] = v71;
      a4(&v70, v72);
      uint64_t v24 = (uint64_t)v70;
      uint64_t v25 = v71;
      sub_1005057FC(&qword_10167AD90);
      unint64_t v26 = (void *)swift_allocObject();
      v26[6] = _swiftEmptyArrayStorage;
      swift_weakInit();
      v26[2] = v24;
      v26[3] = v25;
      v26[4] = v19;
      v26[5] = v23;
      uint64_t v27 = v14[2];
      swift_unknownObjectRetain();
      if (v27)
      {
        sub_100955F50(v24, v25);
        if (v28)
        {
          swift_retain();
          sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"constructDisjointTrees(from:transform:nodeIDProvider:nodeParentIDProvider:)", 75, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Sync/CRLTree.swift", 72, 2, 54, (uint64_t)"expected nil value, but non-nil found", 37, 2u, (uint64_t)_swiftEmptyArrayStorage);
          sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"constructDisjointTrees(from:transform:nodeIDProvider:nodeParentIDProvider:)", 75, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Sync/CRLTree.swift", 72, 2, 54);
          swift_release();
        }
      }
      uint64_t v29 = v26[2];
      uint64_t v30 = v26[3];
      uint64_t v69 = v26;
      swift_bridgeObjectRetain();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v70 = v14;
      uint64_t v67 = v29;
      unint64_t v33 = sub_100955F50(v29, v30);
      uint64_t v34 = v14[2];
      BOOL v35 = (v32 & 1) == 0;
      uint64_t v36 = v34 + v35;
      if (__OFADD__(v34, v35)) {
        goto LABEL_64;
      }
      char v37 = v32;
      if (v14[3] >= v36)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
          sub_1009821F8();
        }
      }
      else
      {
        sub_10096AE44(v36, isUniquelyReferenced_nonNull_native);
        unint64_t v38 = sub_100955F50(v67, v30);
        if ((v37 & 1) != (v39 & 1)) {
          goto LABEL_66;
        }
        unint64_t v33 = v38;
      }
      uint64_t v9 = v65;
      uint64_t v14 = v70;
      if (v37)
      {
        uint64_t v40 = v70[7];
        swift_release();
        *(void *)(v40 + 8 * v33) = v69;
      }
      else
      {
        v70[(v33 >> 6) + 8] |= 1 << v33;
        unint64_t v41 = (uint64_t *)(v14[6] + 16 * v33);
        *unint64_t v41 = v67;
        v41[1] = v30;
        *(void *)(v14[7] + 8 * v33) = v69;
        uint64_t v42 = v14[2];
        BOOL v43 = __OFADD__(v42, 1);
        uint64_t v44 = v42 + 1;
        if (v43) {
          goto LABEL_65;
        }
        v14[2] = v44;
        swift_bridgeObjectRetain();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();

      swift_unknownObjectRelease();
      if (v12) {
        goto LABEL_4;
      }
    }
    else
    {
      swift_unknownObjectRelease();

      if (v12) {
        goto LABEL_4;
      }
    }
LABEL_7:
    int64_t v20 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
LABEL_61:
      __break(1u);
LABEL_62:
      __break(1u);
      goto LABEL_63;
    }
    if (v20 >= v68) {
      goto LABEL_38;
    }
    unint64_t v21 = *(void *)(v9 + 8 * v20);
    ++v13;
    if (!v21)
    {
      int64_t v13 = v20 + 1;
      if (v20 + 1 >= v68) {
        goto LABEL_38;
      }
      unint64_t v21 = *(void *)(v9 + 8 * v13);
      if (!v21)
      {
        int64_t v13 = v20 + 2;
        if (v20 + 2 >= v68) {
          goto LABEL_38;
        }
        unint64_t v21 = *(void *)(v9 + 8 * v13);
        if (!v21)
        {
          int64_t v13 = v20 + 3;
          if (v20 + 3 >= v68) {
            goto LABEL_38;
          }
          unint64_t v21 = *(void *)(v9 + 8 * v13);
          if (!v21) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v12 = (v21 - 1) & v21;
  }
  int64_t v22 = v20 + 4;
  if (v22 >= v68)
  {
LABEL_38:
    swift_release();
    unint64_t v46 = v14 + 8;
    uint64_t v45 = v14[8];
    id v73 = &_swiftEmptySetSingleton;
    uint64_t v47 = -1 << *((unsigned char *)v14 + 32);
    if (-v47 < 64) {
      uint64_t v48 = ~(-1 << -(char)v47);
    }
    else {
      uint64_t v48 = -1;
    }
    unint64_t v49 = v48 & v45;
    int64_t v50 = (unint64_t)(63 - v47) >> 6;
    swift_bridgeObjectRetain();
    int64_t v51 = 0;
    while (1)
    {
      if (v49)
      {
        unint64_t v52 = __clz(__rbit64(v49));
        v49 &= v49 - 1;
        unint64_t v53 = v52 | (v51 << 6);
      }
      else
      {
        int64_t v56 = v51 + 1;
        if (__OFADD__(v51, 1)) {
          goto LABEL_61;
        }
        if (v56 >= v50)
        {
LABEL_59:
          sub_10052E1EC();
          uint64_t v60 = swift_bridgeObjectRetain();
          unint64_t v61 = sub_100C2F894(v60, &qword_101699778);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          return (uint64_t)v61;
        }
        unint64_t v57 = v46[v56];
        int64_t v58 = v51 + 1;
        if (!v57)
        {
          int64_t v58 = v51 + 2;
          if (v51 + 2 >= v50) {
            goto LABEL_59;
          }
          unint64_t v57 = v46[v58];
          if (!v57)
          {
            int64_t v58 = v51 + 3;
            if (v51 + 3 >= v50) {
              goto LABEL_59;
            }
            unint64_t v57 = v46[v58];
            if (!v57)
            {
              int64_t v59 = v51 + 4;
              if (v51 + 4 >= v50) {
                goto LABEL_59;
              }
              unint64_t v57 = v46[v59];
              if (!v57)
              {
                while (1)
                {
                  int64_t v58 = v59 + 1;
                  if (__OFADD__(v59, 1)) {
                    goto LABEL_62;
                  }
                  if (v58 >= v50) {
                    goto LABEL_59;
                  }
                  unint64_t v57 = v46[v58];
                  ++v59;
                  if (v57) {
                    goto LABEL_58;
                  }
                }
              }
              int64_t v58 = v51 + 4;
            }
          }
        }
LABEL_58:
        unint64_t v49 = (v57 - 1) & v57;
        unint64_t v53 = __clz(__rbit64(v57)) + (v58 << 6);
        int64_t v51 = v58;
      }
      uint64_t v54 = *(uint64_t **)(v14[7] + 8 * v53);
      swift_bridgeObjectRetain();
      swift_retain();
      uint64_t v55 = swift_bridgeObjectRetain();
      sub_100C35DA8(v55, v54, (uint64_t *)&v73, a6, a7, sub_100F68540, (void (*)(uint64_t, uint64_t))sub_100F4D468);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
    }
  }
  unint64_t v21 = *(void *)(v9 + 8 * v22);
  if (v21)
  {
    int64_t v13 = v22;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v13 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v13 >= v68) {
      goto LABEL_38;
    }
    unint64_t v21 = *(void *)(v9 + 8 * v13);
    ++v22;
    if (v21) {
      goto LABEL_22;
    }
  }
LABEL_63:
  __break(1u);
LABEL_64:
  __break(1u);
LABEL_65:
  __break(1u);
LABEL_66:
  uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

uint64_t sub_100C34364(uint64_t a1, void (*a2)(uint64_t *__return_ptr, id *), uint64_t a3, void (*a4)(uint64_t *__return_ptr, uint64_t *), uint64_t a5, void (*a6)(double **__return_ptr, uint64_t *))
{
  uint64_t v79 = a1 + 64;
  uint64_t v6 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & *(void *)(a1 + 64);
  int64_t v80 = (unint64_t)(v6 + 63) >> 6;
  swift_bridgeObjectRetain();
  int64_t v9 = 0;
  uint64_t v10 = _swiftEmptyDictionarySingleton;
  while (1)
  {
    if (v8)
    {
      unint64_t v11 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      int64_t v84 = v9;
      unint64_t v12 = v11 | (v9 << 6);
      goto LABEL_5;
    }
    int64_t v27 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
LABEL_64:
      __break(1u);
LABEL_65:
      __break(1u);
      goto LABEL_66;
    }
    if (v27 >= v80) {
      goto LABEL_41;
    }
    unint64_t v28 = *(void *)(v79 + 8 * v27);
    int64_t v29 = v9 + 1;
    if (!v28)
    {
      int64_t v29 = v9 + 2;
      if (v9 + 2 >= v80) {
        goto LABEL_41;
      }
      unint64_t v28 = *(void *)(v79 + 8 * v29);
      if (!v28)
      {
        int64_t v29 = v9 + 3;
        if (v9 + 3 >= v80) {
          goto LABEL_41;
        }
        unint64_t v28 = *(void *)(v79 + 8 * v29);
        if (!v28)
        {
          int64_t v29 = v9 + 4;
          if (v9 + 4 >= v80) {
            goto LABEL_41;
          }
          unint64_t v28 = *(void *)(v79 + 8 * v29);
          if (!v28) {
            break;
          }
        }
      }
    }
LABEL_24:
    unint64_t v8 = (v28 - 1) & v28;
    int64_t v84 = v29;
    unint64_t v12 = __clz(__rbit64(v28)) + (v29 << 6);
LABEL_5:
    int64_t v13 = *(void **)(*(void *)(a1 + 48) + 8 * v12);
    uint64_t v14 = (uint64_t *)(*(void *)(a1 + 56) + 40 * v12);
    uint64_t v15 = *v14;
    unint64_t v16 = v14[1];
    uint64_t v17 = (void *)v14[2];
    unint64_t v18 = v14[3];
    unint64_t v19 = (void *)v14[4];
    id v95 = v13;
    uint64_t v96 = v15;
    unint64_t v97 = v16;
    unint64_t v98 = v17;
    unint64_t v99 = v18;
    uint64_t v100 = v19;
    id v20 = v13;
    sub_1008D0DA8(v15, v16, v17, v18, v19);
    a2(&v85, &v95);
    unint64_t v21 = v86;
    if ((~v86 & 0xF000000000000007) == 0)
    {

      uint64_t v22 = v15;
      unint64_t v23 = v16;
      uint64_t v24 = v17;
      unint64_t v25 = v18;
      unint64_t v26 = v19;
      goto LABEL_7;
    }
    uint64_t v31 = v85;
    unint64_t v33 = v87;
    unint64_t v32 = v88;
    uint64_t v34 = v89;
    uint64_t v90 = v85;
    unint64_t v91 = v86;
    int64_t v92 = v87;
    unint64_t v93 = v88;
    uint64_t v94 = v89;
    a4(&v85, &v90);
    uint64_t v35 = v85;
    uint64_t v36 = v86;
    sub_1005057FC(&qword_10167AEA8);
    char v37 = (void *)swift_allocObject();
    v37[9] = _swiftEmptyArrayStorage;
    swift_weakInit();
    v37[2] = v35;
    v37[3] = v36;
    v37[4] = v31;
    v37[5] = v21;
    v37[6] = v33;
    v37[7] = v32;
    v37[8] = v34;
    if (v10[2])
    {
      sub_1008D0DA8(v31, v21, v33, v32, v34);
      sub_100955F50(v35, v36);
      if (v38)
      {
        swift_retain();
        sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"constructDisjointTrees(from:transform:nodeIDProvider:nodeParentIDProvider:)", 75, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Sync/CRLTree.swift", 72, 2, 54, (uint64_t)"expected nil value, but non-nil found", 37, 2u, (uint64_t)_swiftEmptyArrayStorage);
        sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"constructDisjointTrees(from:transform:nodeIDProvider:nodeParentIDProvider:)", 75, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Sync/CRLTree.swift", 72, 2, 54);
        swift_release();
      }
    }
    else
    {
      sub_100CE8FB4(v31, v21, v33, v32, v34);
    }
    uint64_t v40 = v37[2];
    uint64_t v39 = v37[3];
    swift_bridgeObjectRetain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v85 = (uint64_t)v10;
    unint64_t v43 = sub_100955F50(v40, v39);
    uint64_t v44 = v10[2];
    BOOL v45 = (v42 & 1) == 0;
    uint64_t v46 = v44 + v45;
    if (__OFADD__(v44, v45)) {
      goto LABEL_67;
    }
    char v47 = v42;
    if (v10[3] >= v46)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        uint64_t v10 = (void *)v85;
        if ((v42 & 1) == 0) {
          goto LABEL_38;
        }
      }
      else
      {
        sub_100982820();
        uint64_t v10 = (void *)v85;
        if ((v47 & 1) == 0) {
          goto LABEL_38;
        }
      }
    }
    else
    {
      sub_10096B7C4(v46, isUniquelyReferenced_nonNull_native);
      unint64_t v48 = sub_100955F50(v40, v39);
      if ((v47 & 1) != (v49 & 1)) {
        goto LABEL_69;
      }
      unint64_t v43 = v48;
      uint64_t v10 = (void *)v85;
      if ((v47 & 1) == 0)
      {
LABEL_38:
        v10[(v43 >> 6) + 8] |= 1 << v43;
        int64_t v51 = (uint64_t *)(v10[6] + 16 * v43);
        *int64_t v51 = v40;
        v51[1] = v39;
        *(void *)(v10[7] + 8 * v43) = v37;
        uint64_t v52 = v10[2];
        BOOL v53 = __OFADD__(v52, 1);
        uint64_t v54 = v52 + 1;
        if (v53) {
          goto LABEL_68;
        }
        v10[2] = v54;
        swift_bridgeObjectRetain();
        goto LABEL_40;
      }
    }
    uint64_t v50 = v10[7];
    swift_release();
    *(void *)(v50 + 8 * v43) = v37;
LABEL_40:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1008D0CD8(v90, v91, v92, v93, v94);
    uint64_t v55 = v96;
    unint64_t v56 = v97;
    unint64_t v57 = v98;
    unint64_t v58 = v99;
    int64_t v59 = v100;

    uint64_t v22 = v55;
    unint64_t v23 = v56;
    uint64_t v24 = v57;
    unint64_t v25 = v58;
    unint64_t v26 = v59;
LABEL_7:
    sub_1008D0CD8(v22, v23, v24, v25, v26);
    int64_t v9 = v84;
  }
  uint64_t v30 = v9 + 5;
  if (v9 + 5 >= v80)
  {
LABEL_41:
    swift_release();
    unint64_t v61 = v10 + 8;
    uint64_t v60 = v10[8];
    id v95 = &_swiftEmptySetSingleton;
    uint64_t v62 = -1 << *((unsigned char *)v10 + 32);
    if (-v62 < 64) {
      uint64_t v63 = ~(-1 << -(char)v62);
    }
    else {
      uint64_t v63 = -1;
    }
    unint64_t v64 = v63 & v60;
    int64_t v65 = (unint64_t)(63 - v62) >> 6;
    swift_bridgeObjectRetain();
    int64_t v66 = 0;
    while (1)
    {
      if (v64)
      {
        unint64_t v67 = __clz(__rbit64(v64));
        v64 &= v64 - 1;
        unint64_t v68 = v67 | (v66 << 6);
      }
      else
      {
        int64_t v71 = v66 + 1;
        if (__OFADD__(v66, 1)) {
          goto LABEL_64;
        }
        if (v71 >= v65)
        {
LABEL_62:
          sub_10052E1EC();
          uint64_t v75 = swift_bridgeObjectRetain();
          uint64_t v76 = sub_100C2FBB0(v75);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          return (uint64_t)v76;
        }
        unint64_t v72 = v61[v71];
        int64_t v73 = v66 + 1;
        if (!v72)
        {
          int64_t v73 = v66 + 2;
          if (v66 + 2 >= v65) {
            goto LABEL_62;
          }
          unint64_t v72 = v61[v73];
          if (!v72)
          {
            int64_t v73 = v66 + 3;
            if (v66 + 3 >= v65) {
              goto LABEL_62;
            }
            unint64_t v72 = v61[v73];
            if (!v72)
            {
              int64_t v74 = v66 + 4;
              if (v66 + 4 >= v65) {
                goto LABEL_62;
              }
              unint64_t v72 = v61[v74];
              if (!v72)
              {
                while (1)
                {
                  int64_t v73 = v74 + 1;
                  if (__OFADD__(v74, 1)) {
                    goto LABEL_65;
                  }
                  if (v73 >= v65) {
                    goto LABEL_62;
                  }
                  unint64_t v72 = v61[v73];
                  ++v74;
                  if (v72) {
                    goto LABEL_61;
                  }
                }
              }
              int64_t v73 = v66 + 4;
            }
          }
        }
LABEL_61:
        unint64_t v64 = (v72 - 1) & v72;
        unint64_t v68 = __clz(__rbit64(v72)) + (v73 << 6);
        int64_t v66 = v73;
      }
      uint64_t v69 = *(uint64_t **)(v10[7] + 8 * v68);
      swift_bridgeObjectRetain();
      swift_retain();
      uint64_t v70 = swift_bridgeObjectRetain();
      sub_100C3624C(v70, v69, (uint64_t *)&v95, a6);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
    }
  }
  unint64_t v28 = *(void *)(v79 + 8 * v30);
  if (v28)
  {
    int64_t v29 = v9 + 5;
    goto LABEL_24;
  }
  while (1)
  {
    int64_t v29 = v30 + 1;
    if (__OFADD__(v30, 1)) {
      break;
    }
    if (v29 >= v80) {
      goto LABEL_41;
    }
    unint64_t v28 = *(void *)(v79 + 8 * v29);
    ++v30;
    if (v28) {
      goto LABEL_24;
    }
  }
LABEL_66:
  __break(1u);
LABEL_67:
  __break(1u);
LABEL_68:
  __break(1u);
LABEL_69:
  uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

uint64_t sub_100C34A0C(unint64_t isUniquelyReferenced_nonNull_native, void (*a2)(char **__return_ptr, uint64_t *), int64_t a3, void (*a4)(char **), uint64_t a5, void (*a6)(uint64_t *), uint64_t a7)
{
  void (*v76)(char **__return_ptr, uint64_t *);
  int64_t v77;
  void (*v78)(uint64_t *);
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  char *v84;
  uint64_t v85[2];

  uint64_t v78 = a6;
  uint64_t v79 = a7;
  unint64_t v72 = a4;
  uint64_t v73 = a5;
  uint64_t v76 = a2;
  uint64_t v77 = a3;
  uint64_t v8 = sub_1005057FC(&qword_101699758);
  uint64_t v10 = __chkstk_darwin(v8 - 8, v9);
  unint64_t v12 = (char *)&v66 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10, v13);
  uint64_t v15 = (char *)&v66 - v14;
  uint64_t v82 = type metadata accessor for UUID();
  int64_t v80 = *(void *)(v82 - 8);
  uint64_t v17 = __chkstk_darwin(v82, v16);
  id v81 = (uint64_t)&v66 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17, v19);
  int64_t v71 = (char *)&v66 - v20;
  if (isUniquelyReferenced_nonNull_native >> 62) {
    goto LABEL_29;
  }
  uint64_t v21 = *(void *)((isUniquelyReferenced_nonNull_native & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (v21)
  {
    while (1)
    {
      if (v21 < 1) {
        goto LABEL_60;
      }
      uint64_t v22 = 0;
      uint64_t v70 = (void (**)(uint64_t, char *, uint64_t))(v80 + 32);
      int64_t v74 = (void (**)(uint64_t, uint64_t, uint64_t))(v80 + 16);
      unint64_t v75 = isUniquelyReferenced_nonNull_native & 0xC000000000000001;
      unint64_t v23 = (char *)&_swiftEmptyDictionarySingleton;
      unint64_t v67 = (void (**)(uint64_t, uint64_t))(v80 + 8);
      uint64_t v68 = v21;
      unint64_t v69 = isUniquelyReferenced_nonNull_native;
      while (1)
      {
        if (v75)
        {
          uint64_t v24 = specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else
        {
          uint64_t v24 = *(void *)(isUniquelyReferenced_nonNull_native + 8 * v22 + 32);
          swift_retain();
        }
        v85[0] = v24;
        v76(&v83, v85);
        unint64_t v25 = v83;
        if (v83) {
          break;
        }
        swift_release();
LABEL_6:
        if (v21 == ++v22)
        {
          swift_bridgeObjectRelease();
          goto LABEL_31;
        }
      }
      int64_t v84 = v83;
      unint64_t v26 = v71;
      v72(&v84);
      sub_1005057FC(&qword_10167AD50);
      uint64_t v27 = swift_allocObject();
      *(void *)(v27 + *(void *)(*(void *)v27 + 120)) = _swiftEmptyArrayStorage;
      swift_weakInit();
      (*v70)(v27 + *(void *)(*(void *)v27 + 104), v26, v82);
      *(void *)(v27 + *(void *)(*(void *)v27 + 112)) = v25;
      uint64_t v28 = v27 + *(void *)(*(void *)v27 + 104);
      uint64_t v29 = *((void *)v23 + 2);
      swift_retain();
      if (v29)
      {
        sub_100955FC8(v28);
        if (v30)
        {
          swift_retain();
          sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"constructDisjointTrees(from:transform:nodeIDProvider:nodeParentIDProvider:)", 75, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Sync/CRLTree.swift", 72, 2, 54, (uint64_t)"expected nil value, but non-nil found", 37, 2u, (uint64_t)_swiftEmptyArrayStorage);
          sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"constructDisjointTrees(from:transform:nodeIDProvider:nodeParentIDProvider:)", 75, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Sync/CRLTree.swift", 72, 2, 54);
          swift_release();
        }
      }
      uint64_t v31 = *v74;
      uint64_t v32 = v81;
      (*v74)(v81, v28, v82);
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v83 = v23;
      unint64_t v34 = sub_100955FC8(v32);
      uint64_t v35 = *((void *)v23 + 2);
      BOOL v36 = (v33 & 1) == 0;
      uint64_t v37 = v35 + v36;
      if (!__OFADD__(v35, v36)) {
        break;
      }
      __break(1u);
LABEL_28:
      __break(1u);
LABEL_29:
      swift_bridgeObjectRetain();
      uint64_t v21 = _CocoaArrayWrapper.endIndex.getter();
      if (!v21) {
        goto LABEL_30;
      }
    }
    char v38 = v33;
    if (*((void *)v23 + 3) < v37)
    {
      sub_10096E730(v37, isUniquelyReferenced_nonNull_native);
      unint64_t v39 = sub_100955FC8(v81);
      if ((v38 & 1) != (v40 & 1)) {
        goto LABEL_62;
      }
      unint64_t v34 = v39;
      unint64_t v23 = v83;
      if ((v38 & 1) == 0) {
        goto LABEL_18;
      }
LABEL_22:
      uint64_t v44 = *((void *)v23 + 7);
      swift_release();
      *(void *)(v44 + 8 * v34) = v27;
LABEL_23:
      swift_bridgeObjectRelease();
      (*v67)(v81, v82);
      swift_release();
      swift_release();
      uint64_t v21 = v68;
      char isUniquelyReferenced_nonNull_native = v69;
      goto LABEL_6;
    }
    if (isUniquelyReferenced_nonNull_native)
    {
      unint64_t v23 = v83;
      if (v33) {
        goto LABEL_22;
      }
    }
    else
    {
      sub_100984754();
      unint64_t v23 = v83;
      if (v38) {
        goto LABEL_22;
      }
    }
LABEL_18:
    *(void *)&v23[8 * (v34 >> 6) + 64] |= 1 << v34;
    v31(*((void *)v23 + 6) + *(void *)(v80 + 72) * v34, v81, v82);
    *(void *)(*((void *)v23 + 7) + 8 * v34) = v27;
    uint64_t v41 = *((void *)v23 + 2);
    BOOL v42 = __OFADD__(v41, 1);
    uint64_t v43 = v41 + 1;
    if (v42) {
      goto LABEL_28;
    }
    *((void *)v23 + 2) = v43;
    goto LABEL_23;
  }
LABEL_30:
  swift_bridgeObjectRelease();
  unint64_t v23 = (char *)&_swiftEmptyDictionarySingleton;
LABEL_31:
  v85[0] = (uint64_t)&_swiftEmptySetSingleton;
  uint64_t v45 = *((void *)v23 + 8);
  uint64_t v76 = (void (*)(char **__return_ptr, uint64_t *))(v23 + 64);
  uint64_t v46 = -1 << v23[32];
  if (-v46 < 64) {
    uint64_t v47 = ~(-1 << -(char)v46);
  }
  else {
    uint64_t v47 = -1;
  }
  unint64_t v48 = v47 & v45;
  id v81 = v80 + 16;
  char v49 = (void (**)(char *, uint64_t))(v80 + 8);
  uint64_t v77 = (unint64_t)(63 - v46) >> 6;
  int64_t v74 = (void (**)(uint64_t, uint64_t, uint64_t))(v77 - 1);
  unint64_t v75 = v46;
  swift_bridgeObjectRetain();
  uint64_t v50 = 0;
  if (!v48) {
    goto LABEL_39;
  }
LABEL_37:
  uint64_t v53 = (v48 - 1) & v48;
  unint64_t v54 = __clz(__rbit64(v48)) | ((void)v50 << 6);
  int64_t v55 = (int64_t)v50;
LABEL_38:
  (*(void (**)(char *, unint64_t, uint64_t))(v80 + 16))(v12, *((void *)v23 + 6) + *(void *)(v80 + 72) * v54, v82);
  uint64_t v56 = *((void *)v23 + 7);
  uint64_t v57 = sub_1005057FC(&qword_101699760);
  *(void *)&v12[*(int *)(v57 + 48)] = *(void *)(v56 + 8 * v54);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v57 - 8) + 56))(v12, 0, 1, v57);
  swift_retain();
  unint64_t v58 = (void (**)(uint64_t, uint64_t, uint64_t))v55;
  while (1)
  {
    sub_10051B3EC((uint64_t)v12, (uint64_t)v15, &qword_101699758);
    uint64_t v62 = sub_1005057FC(&qword_101699760);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v62 - 8) + 48))(v15, 1, v62) == 1)
    {
      sub_10052E1EC();
      uint64_t v63 = swift_bridgeObjectRetain();
      uint64_t v64 = sub_100C30E08(v63, &qword_101699760, &qword_101699768);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v64;
    }
    uint64_t v51 = *(void *)&v15[*(int *)(v62 + 48)];
    uint64_t v52 = swift_bridgeObjectRetain();
    sub_100C36740(v52, v51, v85, v78, v79);
    swift_bridgeObjectRelease();
    swift_release();
    (*v49)(v15, v82);
    uint64_t v50 = v58;
    unint64_t v48 = v53;
    if (v53) {
      goto LABEL_37;
    }
LABEL_39:
    int64_t v55 = (int64_t)v50 + 1;
    if (__OFADD__(v50, 1)) {
      break;
    }
    unint64_t v58 = v50;
    if (v55 < v77)
    {
      unint64_t v59 = *((void *)v76 + v55);
      if (v59) {
        goto LABEL_42;
      }
      int64_t v60 = (int64_t)v50 + 2;
      unint64_t v58 = (void (**)(uint64_t, uint64_t, uint64_t))((char *)v50 + 1);
      if ((uint64_t)v50 + 2 < v77)
      {
        unint64_t v59 = *((void *)v76 + v60);
        if (v59) {
          goto LABEL_45;
        }
        unint64_t v58 = (void (**)(uint64_t, uint64_t, uint64_t))((char *)v50 + 2);
        if ((uint64_t)v50 + 3 < v77)
        {
          unint64_t v59 = *((void *)v76 + (void)v50 + 3);
          if (v59)
          {
            int64_t v55 = (int64_t)v50 + 3;
            goto LABEL_42;
          }
          int64_t v60 = (int64_t)v50 + 4;
          unint64_t v58 = (void (**)(uint64_t, uint64_t, uint64_t))((char *)v50 + 3);
          if ((uint64_t)v50 + 4 < v77)
          {
            unint64_t v59 = *((void *)v76 + v60);
            if (!v59)
            {
              while (1)
              {
                int64_t v55 = v60 + 1;
                if (__OFADD__(v60, 1)) {
                  goto LABEL_61;
                }
                if (v55 >= v77)
                {
                  unint64_t v58 = v74;
                  goto LABEL_56;
                }
                unint64_t v59 = *((void *)v76 + v55);
                ++v60;
                if (v59) {
                  goto LABEL_42;
                }
              }
            }
LABEL_45:
            int64_t v55 = v60;
LABEL_42:
            uint64_t v53 = (v59 - 1) & v59;
            unint64_t v54 = __clz(__rbit64(v59)) + (v55 << 6);
            goto LABEL_38;
          }
        }
      }
    }
LABEL_56:
    uint64_t v61 = sub_1005057FC(&qword_101699760);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v61 - 8) + 56))(v12, 1, 1, v61);
    uint64_t v53 = 0;
  }
  __break(1u);
LABEL_60:
  __break(1u);
LABEL_61:
  __break(1u);
LABEL_62:
  uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

uint64_t sub_100C352DC(uint64_t a1, void (*a2)(void), uint64_t a3, void (*a4)(uint64_t), uint64_t a5, void (*a6)(uint64_t), uint64_t a7)
{
  uint64_t v106 = a6;
  uint64_t v107 = a7;
  unint64_t v97 = a4;
  uint64_t v98 = a5;
  uint64_t v10 = sub_1005057FC(&qword_101699780);
  __chkstk_darwin(v10 - 8, v11);
  uint64_t v108 = (char *)&v87 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13, v14);
  uint64_t v16 = (char *)&v87 - v15;
  uint64_t v109 = type metadata accessor for UUID();
  uint64_t v17 = *(void *)(v109 - 8);
  __chkstk_darwin(v109, v18);
  uint64_t v20 = (char *)&v87 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21, v22);
  uint64_t v96 = (char *)&v87 - v23;
  uint64_t v24 = sub_1005057FC(&qword_101699788);
  __chkstk_darwin(v24 - 8, v25);
  uint64_t v95 = (uint64_t)&v87 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v27, v28);
  char v30 = (char *)&v87 - v29;
  uint64_t v100 = type metadata accessor for CRLBoardItemPeerSyncUpdate(0);
  __chkstk_darwin(v100, v31);
  uint64_t v104 = (uint64_t)&v87 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v33, v34);
  uint64_t v99 = (uint64_t)&v87 - v36;
  uint64_t v37 = *(void *)(a1 + 16);
  uint64_t v105 = v17;
  if (v37)
  {
    uint64_t v38 = a1 + ((*(unsigned __int8 *)(v35 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v35 + 80));
    unint64_t v102 = *(void **)(v35 + 72);
    uint64_t v103 = (unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48);
    unint64_t v93 = (void (**)(uint64_t, char *, uint64_t))(v17 + 32);
    uint64_t v94 = (void (**)(uint64_t, void, uint64_t, uint64_t))(v35 + 56);
    uint64_t v101 = (void (**)(char *, uint64_t, uint64_t))(v17 + 16);
    unint64_t v88 = (void (**)(char *, uint64_t))(v17 + 8);
    uint64_t v87 = a1;
    swift_bridgeObjectRetain();
    unint64_t v39 = _swiftEmptyDictionarySingleton;
    uint64_t v41 = v99;
    uint64_t v40 = v100;
    uint64_t v91 = a3;
    uint64_t v90 = a2;
    int64_t v92 = v16;
    uint64_t v89 = v30;
    do
    {
      sub_100CE144C(v38, v41, type metadata accessor for CRLBoardItemPeerSyncUpdate);
      a2(v41);
      if ((*v103)(v30, 1, v40) == 1)
      {
        sub_100CE14B4(v41, type metadata accessor for CRLBoardItemPeerSyncUpdate);
        sub_100522F00((uint64_t)v30, &qword_101699788);
      }
      else
      {
        uint64_t v42 = v104;
        sub_100CE12D8((uint64_t)v30, v104, type metadata accessor for CRLBoardItemPeerSyncUpdate);
        uint64_t v43 = v96;
        v97(v42);
        uint64_t v44 = v95;
        sub_100CE144C(v42, v95, type metadata accessor for CRLBoardItemPeerSyncUpdate);
        (*v94)(v44, 0, 1, v40);
        sub_1005057FC(&qword_10167ADA8);
        uint64_t v45 = swift_allocObject();
        *(void *)(v45 + *(void *)(*(void *)v45 + 120)) = _swiftEmptyArrayStorage;
        swift_weakInit();
        (*v93)(v45 + *(void *)(*(void *)v45 + 104), v43, v109);
        sub_10051B3EC(v44, v45 + *(void *)(*(void *)v45 + 112), &qword_101699788);
        uint64_t v46 = v45 + *(void *)(*(void *)v45 + 104);
        if (v39[2])
        {
          sub_100955FC8(v45 + *(void *)(*(void *)v45 + 104));
          if (v47)
          {
            swift_retain();
            sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"constructDisjointTrees(from:transform:nodeIDProvider:nodeParentIDProvider:)", 75, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Sync/CRLTree.swift", 72, 2, 54, (uint64_t)"expected nil value, but non-nil found", 37, 2u, (uint64_t)_swiftEmptyArrayStorage);
            sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"constructDisjointTrees(from:transform:nodeIDProvider:nodeParentIDProvider:)", 75, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Sync/CRLTree.swift", 72, 2, 54);
            swift_release();
          }
        }
        unint64_t v48 = *v101;
        (*v101)(v20, v46, v109);
        int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v50 = (uint64_t)v20;
        int v51 = isUniquelyReferenced_nonNull_native;
        uint64_t v110 = v39;
        uint64_t v52 = v50;
        unint64_t v54 = sub_100955FC8(v50);
        uint64_t v55 = v39[2];
        BOOL v56 = (v53 & 1) == 0;
        uint64_t v57 = v55 + v56;
        if (__OFADD__(v55, v56))
        {
LABEL_52:
          __break(1u);
LABEL_53:
          __break(1u);
          goto LABEL_54;
        }
        char v58 = v53;
        if (v39[3] >= v57)
        {
          if ((v51 & 1) == 0) {
            sub_100985414();
          }
          uint64_t v20 = (char *)v52;
        }
        else
        {
          sub_10096FE88(v57, v51);
          uint64_t v20 = (char *)v52;
          unint64_t v59 = sub_100955FC8(v52);
          if ((v58 & 1) != (v60 & 1)) {
            goto LABEL_55;
          }
          unint64_t v54 = v59;
        }
        uint64_t v16 = v92;
        unint64_t v39 = v110;
        if (v58)
        {
          uint64_t v61 = v110[7];
          swift_release();
          *(void *)(v61 + 8 * v54) = v45;
        }
        else
        {
          v110[(v54 >> 6) + 8] |= 1 << v54;
          v48((char *)(v39[6] + *(void *)(v105 + 72) * v54), (uint64_t)v20, v109);
          *(void *)(v39[7] + 8 * v54) = v45;
          uint64_t v62 = v39[2];
          BOOL v63 = __OFADD__(v62, 1);
          uint64_t v64 = v62 + 1;
          if (v63) {
            goto LABEL_53;
          }
          v39[2] = v64;
        }
        swift_bridgeObjectRelease();
        (*v88)(v20, v109);
        sub_100CE14B4(v104, type metadata accessor for CRLBoardItemPeerSyncUpdate);
        uint64_t v41 = v99;
        sub_100CE14B4(v99, type metadata accessor for CRLBoardItemPeerSyncUpdate);
        a2 = v90;
        char v30 = v89;
        uint64_t v40 = v100;
      }
      v38 += (uint64_t)v102;
      --v37;
    }
    while (v37);
    swift_bridgeObjectRelease();
  }
  else
  {
    unint64_t v39 = _swiftEmptyDictionarySingleton;
  }
  uint64_t v110 = &_swiftEmptySetSingleton;
  uint64_t v65 = v39[8];
  unint64_t v102 = v39 + 8;
  uint64_t v66 = -1 << *((unsigned char *)v39 + 32);
  if (-v66 < 64) {
    uint64_t v67 = ~(-1 << -(char)v66);
  }
  else {
    uint64_t v67 = -1;
  }
  unint64_t v68 = v67 & v65;
  uint64_t v103 = (unsigned int (**)(char *, uint64_t, uint64_t))((unint64_t)(63 - v66) >> 6);
  uint64_t v104 = v105 + 16;
  unint64_t v69 = (void (**)(char *, uint64_t))(v105 + 8);
  uint64_t v100 = (uint64_t)v103 - 1;
  uint64_t v101 = (void (**)(char *, uint64_t, uint64_t))v66;
  swift_bridgeObjectRetain();
  uint64_t v70 = 0;
  if (!v68) {
    goto LABEL_31;
  }
LABEL_29:
  uint64_t v73 = (v68 - 1) & v68;
  unint64_t v74 = __clz(__rbit64(v68)) | (v70 << 6);
  uint64_t v75 = v70;
  while (2)
  {
    uint64_t v76 = (uint64_t)v108;
    (*(void (**)(char *, unint64_t, uint64_t))(v105 + 16))(v108, v39[6] + *(void *)(v105 + 72) * v74, v109);
    uint64_t v77 = v39[7];
    uint64_t v78 = sub_1005057FC(&qword_101699790);
    *(void *)(v76 + *(int *)(v78 + 48)) = *(void *)(v77 + 8 * v74);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v78 - 8) + 56))(v76, 0, 1, v78);
    swift_retain();
    uint64_t v79 = v75;
    while (1)
    {
      sub_10051B3EC(v76, (uint64_t)v16, &qword_101699780);
      uint64_t v83 = sub_1005057FC(&qword_101699790);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v83 - 8) + 48))(v16, 1, v83) == 1)
      {
        sub_10052E1EC();
        uint64_t v84 = swift_bridgeObjectRetain();
        uint64_t v85 = sub_100C30E08(v84, &qword_101699790, &qword_101699798);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return v85;
      }
      uint64_t v71 = *(void *)&v16[*(int *)(v83 + 48)];
      uint64_t v72 = swift_bridgeObjectRetain();
      sub_100C36F00(v72, v71, (uint64_t *)&v110, v106, v107);
      swift_bridgeObjectRelease();
      swift_release();
      (*v69)(v16, v109);
      uint64_t v70 = v79;
      unint64_t v68 = v73;
      if (v73) {
        goto LABEL_29;
      }
LABEL_31:
      uint64_t v75 = v70 + 1;
      if (__OFADD__(v70, 1))
      {
        __break(1u);
        goto LABEL_52;
      }
      uint64_t v79 = v70;
      if (v75 < (uint64_t)v103)
      {
        unint64_t v80 = v102[v75];
        if (v80) {
          goto LABEL_34;
        }
        uint64_t v81 = v70 + 2;
        uint64_t v79 = v70 + 1;
        if (v70 + 2 < (uint64_t)v103)
        {
          unint64_t v80 = v102[v81];
          if (v80) {
            goto LABEL_37;
          }
          uint64_t v79 = v70 + 2;
          if (v70 + 3 < (uint64_t)v103)
          {
            unint64_t v80 = v102[v70 + 3];
            if (v80)
            {
              uint64_t v75 = v70 + 3;
              goto LABEL_34;
            }
            uint64_t v81 = v70 + 4;
            uint64_t v79 = v70 + 3;
            if (v70 + 4 < (uint64_t)v103) {
              break;
            }
          }
        }
      }
LABEL_48:
      uint64_t v82 = sub_1005057FC(&qword_101699790);
      uint64_t v76 = (uint64_t)v108;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v82 - 8) + 56))(v108, 1, 1, v82);
      uint64_t v73 = 0;
    }
    unint64_t v80 = v102[v81];
    if (v80)
    {
LABEL_37:
      uint64_t v75 = v81;
LABEL_34:
      uint64_t v73 = (v80 - 1) & v80;
      unint64_t v74 = __clz(__rbit64(v80)) + (v75 << 6);
      continue;
    }
    break;
  }
  while (1)
  {
    uint64_t v75 = v81 + 1;
    if (__OFADD__(v81, 1)) {
      break;
    }
    if (v75 >= (uint64_t)v103)
    {
      uint64_t v79 = v100;
      goto LABEL_48;
    }
    unint64_t v80 = v102[v75];
    ++v81;
    if (v80) {
      goto LABEL_34;
    }
  }
LABEL_54:
  __break(1u);
LABEL_55:
  uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

uint64_t sub_100C35DA8(uint64_t a1, uint64_t *a2, uint64_t *a3, void (*a4)(double **__return_ptr, void *), uint64_t a5, uint64_t (*a6)(uint64_t), void (*a7)(uint64_t, uint64_t))
{
  uint64_t v46 = &_swiftEmptySetSingleton;
  uint64_t v13 = *a3;
  uint64_t v14 = a2[2];
  uint64_t v15 = a2[3];
  swift_retain();
  if (sub_1006E5D6C(v14, v15, v13))
  {
    return swift_release();
  }
  uint64_t v17 = a2[4];
  if (!v17)
  {
LABEL_15:
    swift_bridgeObjectRelease();
    return swift_release();
  }
  uint64_t v41 = a7;
  uint64_t v42 = a6;
  uint64_t v18 = a2;
  while (1)
  {
    uint64_t v19 = v18[5];
    v45[0] = v17;
    v45[1] = v19;
    Swift::Int v20 = v18[2];
    Swift::Int v21 = v18[3];
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    sub_100CB8180((Swift::Int *)&v43, v20, v21);
    swift_bridgeObjectRelease();
    Swift::Int v22 = v18[2];
    Swift::Int v23 = v18[3];
    swift_bridgeObjectRetain();
    sub_100CB8180((Swift::Int *)&v43, v22, v23);
    swift_bridgeObjectRelease();
    a4(&v43, v45);
    if (!v44)
    {
      swift_unknownObjectRelease();
      goto LABEL_18;
    }
    if (!*(void *)(a1 + 16) || (unint64_t v24 = sub_100955F50((uint64_t)v43, v44), (v25 & 1) == 0))
    {
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
LABEL_18:
      swift_bridgeObjectRelease();
      swift_weakAssign();
      return swift_release();
    }
    uint64_t v26 = *(uint64_t **)(*(void *)(a1 + 56) + 8 * v24);
    swift_beginAccess();
    swift_retain();
    swift_retain();
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)((v26[6] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v26[6] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
    swift_endAccess();
    swift_weakAssign();
    uint64_t v27 = (uint64_t)v46;
    uint64_t v28 = v26[2];
    uint64_t v29 = v26[3];
    swift_bridgeObjectRetain();
    LOBYTE(v28) = sub_1006E5D6C(v28, v29, v27);
    swift_bridgeObjectRelease();
    if (v28) {
      break;
    }
    swift_bridgeObjectRelease();
    swift_release();
    swift_unknownObjectRelease();
    if ((sub_1006E5D6C(v26[2], v26[3], *a3) & 1) == 0)
    {
      uint64_t v17 = v26[4];
      uint64_t v18 = v26;
      if (v17) {
        continue;
      }
    }
    goto LABEL_15;
  }
  swift_bridgeObjectRetain_n();
  char v30 = sub_1006BA384(v27);
  swift_bridgeObjectRelease();
  uint64_t v43 = v30;
  uint64_t v31 = 0;
  sub_10073E358((uint64_t *)&v43);
  swift_bridgeObjectRelease();
  if (!*((void *)v43 + 2))
  {
    __break(1u);
    goto LABEL_31;
  }
  uint64_t v32 = *((void *)v43 + 4);
  uint64_t v33 = *((void *)v43 + 5);
  swift_bridgeObjectRetain();
  swift_release();
  if (!*(void *)(a1 + 16) || (unint64_t v34 = sub_100955F50(v32, v33), (v35 & 1) == 0))
  {
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_27:
    swift_release();
    swift_bridgeObjectRelease();
    return swift_unknownObjectRelease();
  }
  uint64_t v36 = *(void *)(*(void *)(a1 + 56) + 8 * v34);
  swift_retain();
  swift_bridgeObjectRelease();
  uint64_t Strong = swift_weakLoadStrong();
  if (!Strong)
  {
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    goto LABEL_27;
  }
  uint64_t v38 = Strong;
  swift_weakAssign();
  swift_beginAccess();
  swift_retain();
  uint64_t v31 = sub_100CE45D0((uint64_t *)(v38 + 48), v36, v42);
  swift_release();
  unint64_t v39 = *(void *)(v38 + 48);
  if (v39 >> 62)
  {
LABEL_31:
    swift_bridgeObjectRetain();
    uint64_t v40 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v40 < v31) {
      goto LABEL_32;
    }
LABEL_25:
    v41(v31, v40);
    swift_endAccess();
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    return swift_unknownObjectRelease();
  }
  uint64_t v40 = *(void *)((v39 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v40 >= v31) {
    goto LABEL_25;
  }
LABEL_32:
  __break(1u);
  uint64_t result = swift_release();
  __break(1u);
  return result;
}

void sub_100C3624C(uint64_t a1, uint64_t *a2, uint64_t *a3, void (*a4)(double **__return_ptr, uint64_t *))
{
  uint64_t v6 = *a3;
  uint64_t v46 = &_swiftEmptySetSingleton;
  uint64_t v7 = a2[2];
  uint64_t v8 = a2[3];
  swift_retain();
  if ((sub_1006E5D6C(v7, v8, v6) & 1) == 0)
  {
    unint64_t v9 = a2[5];
    if ((~v9 & 0xF000000000000007) == 0)
    {
LABEL_6:
      swift_bridgeObjectRelease();
      swift_release();
      return;
    }
    uint64_t v10 = a2;
    while (1)
    {
      uint64_t v11 = a1;
      Swift::Int v12 = v10[3];
      uint64_t v14 = (void *)v10[6];
      unint64_t v15 = v10[7];
      uint64_t v16 = (void *)v10[8];
      uint64_t v41 = v10[4];
      uint64_t v13 = v41;
      unint64_t v42 = v9;
      uint64_t v43 = v14;
      unint64_t v44 = v15;
      uint64_t v45 = v16;
      Swift::Int v17 = v10[2];
      swift_bridgeObjectRetain();
      sub_100CE8FB4(v13, v9, v14, v15, v16);
      sub_100CB8180((Swift::Int *)&v39, v17, v12);
      swift_bridgeObjectRelease();
      Swift::Int v19 = v10[2];
      Swift::Int v18 = v10[3];
      swift_bridgeObjectRetain();
      sub_100CB8180((Swift::Int *)&v39, v19, v18);
      swift_bridgeObjectRelease();
      a4(&v39, &v41);
      if (!v40) {
        goto LABEL_18;
      }
      if (!*(void *)(v11 + 16) || (a1 = v11, unint64_t v20 = sub_100955F50((uint64_t)v39, v40), (v21 & 1) == 0))
      {
        swift_bridgeObjectRelease();
LABEL_18:
        sub_100CE8FC8(v13, v9, v14, v15, v16);
        swift_bridgeObjectRelease();
        swift_weakAssign();
        swift_release();
        return;
      }
      Swift::Int v22 = *(uint64_t **)(*(void *)(v11 + 56) + 8 * v20);
      swift_beginAccess();
      swift_retain();
      swift_retain();
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)((v22[9] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v22[9] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
      swift_endAccess();
      swift_weakAssign();
      uint64_t v23 = (uint64_t)v46;
      uint64_t v24 = v22[2];
      uint64_t v25 = v22[3];
      swift_bridgeObjectRetain();
      LOBYTE(v24) = sub_1006E5D6C(v24, v25, v23);
      swift_bridgeObjectRelease();
      if (v24) {
        break;
      }
      swift_bridgeObjectRelease();
      swift_release();
      sub_1008D0CD8(v41, v42, v43, v44, v45);
      if ((sub_1006E5D6C(v22[2], v22[3], *a3) & 1) == 0)
      {
        unint64_t v9 = v22[5];
        uint64_t v10 = v22;
        if ((~v9 & 0xF000000000000007) != 0) {
          continue;
        }
      }
      goto LABEL_6;
    }
    swift_bridgeObjectRetain_n();
    uint64_t v26 = sub_1006BA384(v23);
    swift_bridgeObjectRelease();
    unint64_t v39 = v26;
    uint64_t v27 = 0;
    sub_10073E358((uint64_t *)&v39);
    swift_bridgeObjectRelease();
    if (*((void *)v39 + 2))
    {
      uint64_t v28 = *((void *)v39 + 4);
      uint64_t v29 = *((void *)v39 + 5);
      swift_bridgeObjectRetain();
      swift_release();
      if (*(void *)(v11 + 16) && (unint64_t v30 = sub_100955F50(v28, v29), (v31 & 1) != 0))
      {
        uint64_t v32 = *(void *)(*(void *)(v11 + 56) + 8 * v30);
        swift_retain();
        swift_bridgeObjectRelease();
        uint64_t Strong = swift_weakLoadStrong();
        if (Strong)
        {
          uint64_t v34 = Strong;
          swift_weakAssign();
          swift_beginAccess();
          swift_retain();
          uint64_t v27 = sub_100CE45D0((uint64_t *)(v34 + 72), v32, sub_100F68540);
          swift_release();
          unint64_t v35 = *(void *)(v34 + 72);
          if (!(v35 >> 62))
          {
            uint64_t v36 = *(void *)((v35 & 0xFFFFFFFFFFFFFF8) + 0x10);
            if (v36 >= v27)
            {
LABEL_25:
              sub_100F4D26C(v27, v36);
              swift_endAccess();
              swift_bridgeObjectRelease();
              swift_release();
              swift_release();
              swift_release();
              swift_release();
              swift_bridgeObjectRelease();
              sub_1008D0CD8(v41, v42, v43, v44, v45);
              return;
            }
LABEL_31:
            __break(1u);
            swift_release();
            __break(1u);
            return;
          }
LABEL_30:
          swift_bridgeObjectRetain();
          uint64_t v36 = _CocoaArrayWrapper.endIndex.getter();
          swift_bridgeObjectRelease();
          if (v36 >= v27) {
            goto LABEL_25;
          }
          goto LABEL_31;
        }
        swift_bridgeObjectRelease();
        swift_release();
        swift_release();
      }
      else
      {
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      swift_release();
      sub_1008D0CD8(v41, v42, v43, v44, v45);
      swift_bridgeObjectRelease();
      return;
    }
    __break(1u);
    goto LABEL_30;
  }

  swift_release();
}

uint64_t sub_100C36740(uint64_t a1, uint64_t a2, uint64_t *a3, void (*a4)(uint64_t *), uint64_t a5)
{
  uint64_t v73 = a4;
  uint64_t v74 = a5;
  uint64_t v8 = sub_1005057FC((uint64_t *)&unk_101674520);
  __chkstk_darwin(v8 - 8, v9);
  uint64_t v72 = (char *)&v60 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for UUID();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v14 = __chkstk_darwin(v11, v13);
  uint64_t v16 = (char *)&v60 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __chkstk_darwin(v14, v17);
  unint64_t v20 = (char *)&v60 - v19;
  uint64_t v22 = __chkstk_darwin(v18, v21);
  uint64_t v71 = (char *)&v60 - v23;
  __chkstk_darwin(v22, v24);
  uint64_t v70 = (char *)&v60 - v25;
  uint64_t v79 = &_swiftEmptySetSingleton;
  uint64_t v76 = a3;
  uint64_t v26 = *a3;
  uint64_t v27 = a2 + *(void *)(*(void *)a2 + 104);
  swift_retain();
  if (sub_1006E3E24(v27, v26)) {
    goto LABEL_25;
  }
  uint64_t v61 = v16;
  uint64_t v67 = a1;
  uint64_t v28 = (void (**)(uint64_t, uint64_t))(v12 + 8);
  unint64_t v68 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  uint64_t v69 = v12 + 16;
  uint64_t v62 = v12;
  uint64_t v64 = v20;
  uint64_t v65 = (void (**)(char *, uint64_t, uint64_t))(v12 + 32);
  uint64_t v66 = (void (**)(void, void))(v12 + 8);
  uint64_t v29 = (void (**)(char *, uint64_t, uint64_t))(v12 + 16);
  uint64_t v30 = (uint64_t)v70;
  char v31 = v71;
  while (1)
  {
    uint64_t v32 = *(void *)(a2 + *(void *)(*(void *)a2 + 112));
    if (!v32) {
      goto LABEL_25;
    }
    uint64_t v33 = *(void *)(*(void *)a2 + 104);
    uint64_t v75 = a2;
    uint64_t v34 = a2 + v33;
    uint64_t v78 = v32;
    unint64_t v35 = *v29;
    (*v29)(v31, v34, v11);
    swift_retain();
    sub_100CB4BC8(v30, v31);
    uint64_t v36 = *v28;
    v36(v30, v11);
    BOOL v63 = v35;
    v35(v31, v34, v11);
    sub_100CB4BC8(v30, v31);
    v36(v30, v11);
    uint64_t v37 = (uint64_t)v72;
    v73(&v78);
    if ((*v68)(v37, 1, v11) == 1)
    {
      swift_release();
      swift_bridgeObjectRelease();
      sub_100522F00(v37, (uint64_t *)&unk_101674520);
      goto LABEL_15;
    }
    (*v65)(v20, v37, v11);
    uint64_t v38 = v67;
    if (!*(void *)(v67 + 16) || (unint64_t v39 = sub_100955FC8((uint64_t)v20), (v40 & 1) == 0))
    {
      v36((uint64_t)v20, v11);
      swift_release();
      swift_bridgeObjectRelease();
LABEL_15:
      swift_weakAssign();
      return swift_release();
    }
    uint64_t v41 = *(void *)(*(void *)(v38 + 56) + 8 * v39);
    unint64_t v42 = (void *)(v41 + *(void *)(*(void *)v41 + 120));
    swift_beginAccess();
    swift_retain();
    swift_retain();
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)((*v42 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v42 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
    swift_endAccess();
    swift_weakAssign();
    uint64_t v43 = (uint64_t)v79;
    uint64_t v44 = v41 + *(void *)(*(void *)v41 + 104);
    swift_bridgeObjectRetain();
    char v45 = sub_1006E3E24(v44, v43);
    swift_bridgeObjectRelease();
    if (v45) {
      break;
    }
    swift_release();
    unint64_t v20 = v64;
    uint64_t v46 = v66;
    v36((uint64_t)v64, v11);
    uint64_t v28 = v46;
    swift_release();
    a2 = v41;
    if (sub_1006E3E24(v44, *v76)) {
      goto LABEL_25;
    }
  }
  swift_bridgeObjectRetain_n();
  unint64_t v48 = sub_1006B9E84(v43);
  swift_bridgeObjectRelease();
  uint64_t v77 = v48;
  uint64_t v49 = 0;
  sub_100CD64CC((unint64_t *)&v77);
  swift_bridgeObjectRelease();
  if (!*((void *)v77 + 2))
  {
    __break(1u);
    goto LABEL_28;
  }
  uint64_t v50 = (uint64_t)v61;
  v63(v61, (uint64_t)v77 + ((*(unsigned __int8 *)(v62 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v62 + 80)), v11);
  swift_release();
  uint64_t v51 = v67;
  uint64_t v52 = v64;
  if (!*(void *)(v67 + 16) || (unint64_t v53 = sub_100955FC8(v50), (v54 & 1) == 0))
  {
    v36(v50, v11);
LABEL_24:
    swift_release();
    swift_release();
    v36((uint64_t)v52, v11);
LABEL_25:
    swift_release();
    return swift_bridgeObjectRelease();
  }
  uint64_t v55 = *(void *)(*(void *)(v51 + 56) + 8 * v53);
  swift_retain();
  v36(v50, v11);
  uint64_t Strong = swift_weakLoadStrong();
  if (!Strong)
  {
    swift_release();
    uint64_t v52 = v64;
    goto LABEL_24;
  }
  uint64_t v57 = Strong;
  swift_weakAssign();
  char v58 = (uint64_t *)(v57 + *(void *)(*(void *)v57 + 120));
  swift_beginAccess();
  swift_retain();
  uint64_t v49 = sub_100CE4940(v58, v55, sub_100F68540);
  swift_release();
  if (!((unint64_t)*v58 >> 62))
  {
    uint64_t v59 = *(void *)((*v58 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v59 >= v49) {
      goto LABEL_22;
    }
LABEL_29:
    __break(1u);
    uint64_t result = swift_release();
    __break(1u);
    return result;
  }
LABEL_28:
  swift_bridgeObjectRetain();
  uint64_t v59 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (v59 < v49) {
    goto LABEL_29;
  }
LABEL_22:
  sub_100F4D474(v49, v59);
  swift_endAccess();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  v36((uint64_t)v64, v11);
  return swift_release();
}

uint64_t sub_100C36F00(uint64_t a1, uint64_t a2, uint64_t *a3, void (*a4)(uint64_t), uint64_t a5)
{
  uint64_t v87 = a4;
  uint64_t v88 = a5;
  uint64_t v8 = sub_1005057FC((uint64_t *)&unk_101674520);
  __chkstk_darwin(v8 - 8, v9);
  unint64_t v86 = (char *)&v72 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for UUID();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11, v13);
  uint64_t v15 = (char *)&v72 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16, v17);
  uint64_t v19 = (char *)&v72 - v18;
  __chkstk_darwin(v20, v21);
  uint64_t v85 = (char *)&v72 - v22;
  __chkstk_darwin(v23, v24);
  uint64_t v84 = (char *)&v72 - v25;
  uint64_t v26 = sub_1005057FC(&qword_101699788);
  __chkstk_darwin(v26 - 8, v27);
  uint64_t v29 = (char *)&v72 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v89 = type metadata accessor for CRLBoardItemPeerSyncUpdate(0);
  uint64_t v30 = *(void *)(v89 - 8);
  __chkstk_darwin(v89, v31);
  uint64_t v93 = (uint64_t)&v72 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v95 = &_swiftEmptySetSingleton;
  int64_t v92 = a3;
  uint64_t v33 = *a3;
  uint64_t v34 = a2 + *(void *)(*(void *)a2 + 104);
  swift_retain();
  if (sub_1006E3E24(v34, v33))
  {
LABEL_2:
    swift_release();
    return swift_bridgeObjectRelease();
  }
  uint64_t v74 = v15;
  uint64_t v83 = (unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48);
  uint64_t v81 = v11;
  uint64_t v82 = (void (**)(char *, uint64_t, uint64_t))(v12 + 16);
  uint64_t v36 = v12;
  uint64_t v37 = (void (**)(uint64_t, uint64_t))(v12 + 8);
  unint64_t v80 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v36 + 48);
  uint64_t v73 = v36;
  uint64_t v77 = (void (**)(char *, uint64_t, uint64_t))(v36 + 32);
  uint64_t v91 = v19;
  uint64_t v78 = v37;
  uint64_t v79 = a1;
  uint64_t v76 = v29;
  uint64_t v38 = (uint64_t)v84;
  while (1)
  {
    sub_100522E9C(a2 + *(void *)(*(void *)a2 + 112), (uint64_t)v29, &qword_101699788);
    if ((*v83)(v29, 1, v89) == 1)
    {
      swift_release();
      swift_bridgeObjectRelease();
      return sub_100522F00((uint64_t)v29, &qword_101699788);
    }
    uint64_t v39 = *(void *)(*(void *)a2 + 104);
    uint64_t v90 = a2;
    uint64_t v40 = a2 + v39;
    uint64_t v41 = v93;
    sub_100CE12D8((uint64_t)v29, v93, type metadata accessor for CRLBoardItemPeerSyncUpdate);
    uint64_t v42 = v81;
    uint64_t v43 = *v82;
    uint64_t v44 = v85;
    (*v82)(v85, v40, v81);
    sub_100CB4BC8(v38, v44);
    char v45 = *v37;
    (*v37)(v38, v42);
    uint64_t v75 = v43;
    v43(v44, v40, v42);
    uint64_t v46 = v44;
    char v47 = v45;
    sub_100CB4BC8(v38, v46);
    v45(v38, v42);
    uint64_t v48 = v42;
    uint64_t v49 = (uint64_t)v86;
    v87(v41);
    if ((*v80)(v49, 1, v42) == 1)
    {
      sub_100CE14B4(v93, type metadata accessor for CRLBoardItemPeerSyncUpdate);
      swift_bridgeObjectRelease();
      sub_100522F00(v49, (uint64_t *)&unk_101674520);
      goto LABEL_17;
    }
    uint64_t v50 = (uint64_t)v91;
    (*v77)(v91, v49, v42);
    uint64_t v51 = v79;
    if (!*(void *)(v79 + 16) || (unint64_t v52 = sub_100955FC8(v50), (v53 & 1) == 0))
    {
      v45(v50, v48);
      sub_100CE14B4(v93, type metadata accessor for CRLBoardItemPeerSyncUpdate);
      swift_bridgeObjectRelease();
LABEL_17:
      swift_weakAssign();
      return swift_release();
    }
    uint64_t v54 = *(void *)(*(void *)(v51 + 56) + 8 * v52);
    uint64_t v55 = (void *)(v54 + *(void *)(*(void *)v54 + 120));
    swift_beginAccess();
    swift_retain();
    swift_retain();
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)((*v55 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v55 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
    swift_endAccess();
    swift_weakAssign();
    uint64_t v56 = (uint64_t)v95;
    uint64_t v57 = v54 + *(void *)(*(void *)v54 + 104);
    swift_bridgeObjectRetain();
    char v58 = sub_1006E3E24(v57, v56);
    swift_bridgeObjectRelease();
    uint64_t v29 = v76;
    if (v58) {
      break;
    }
    swift_release();
    uint64_t v59 = v48;
    uint64_t v37 = v78;
    v47((uint64_t)v91, v59);
    sub_100CE14B4(v93, type metadata accessor for CRLBoardItemPeerSyncUpdate);
    a2 = v54;
    if (sub_1006E3E24(v57, *v92)) {
      goto LABEL_2;
    }
  }
  swift_bridgeObjectRetain_n();
  uint64_t v60 = sub_1006B9E84(v56);
  swift_bridgeObjectRelease();
  uint64_t v94 = v60;
  uint64_t v61 = 0;
  sub_100CD64CC((unint64_t *)&v94);
  swift_bridgeObjectRelease();
  if (!*((void *)v94 + 2))
  {
    __break(1u);
    goto LABEL_29;
  }
  uint64_t v62 = (uint64_t)v74;
  v75(v74, (uint64_t)v94 + ((*(unsigned __int8 *)(v73 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v73 + 80)), v48);
  swift_release();
  uint64_t v63 = v79;
  uint64_t v64 = v91;
  if (!*(void *)(v79 + 16) || (unint64_t v65 = sub_100955FC8(v62), (v66 & 1) == 0))
  {
    v47(v62, v48);
    swift_release();
    swift_release();
    v47((uint64_t)v64, v48);
LABEL_26:
    sub_100CE14B4(v93, type metadata accessor for CRLBoardItemPeerSyncUpdate);
    return swift_bridgeObjectRelease();
  }
  uint64_t v67 = *(void *)(*(void *)(v63 + 56) + 8 * v65);
  swift_retain();
  v47(v62, v48);
  uint64_t Strong = swift_weakLoadStrong();
  if (!Strong)
  {
    swift_release();
    swift_release();
    swift_release();
    v47((uint64_t)v91, v48);
    goto LABEL_26;
  }
  uint64_t v69 = Strong;
  swift_weakAssign();
  uint64_t v70 = (uint64_t *)(v69 + *(void *)(*(void *)v69 + 120));
  swift_beginAccess();
  swift_retain();
  uint64_t v61 = sub_100CE4940(v70, v67, sub_100F68540);
  swift_release();
  if (!((unint64_t)*v70 >> 62))
  {
    uint64_t v71 = *(void *)((*v70 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v71 >= v61) {
      goto LABEL_24;
    }
LABEL_30:
    __break(1u);
    uint64_t result = swift_release();
    __break(1u);
    return result;
  }
LABEL_29:
  swift_bridgeObjectRetain();
  uint64_t v71 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (v71 < v61) {
    goto LABEL_30;
  }
LABEL_24:
  sub_100F4D480(v61, v71);
  swift_endAccess();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  v47((uint64_t)v91, v48);
  return sub_100CE14B4(v93, type metadata accessor for CRLBoardItemPeerSyncUpdate);
}

uint64_t sub_100C37890(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, unsigned int a8, uint64_t a9, uint64_t a10, unsigned __int8 a11, uint64_t a12)
{
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117E810;
  sub_1005057FC(&qword_1016996F0);
  String.init<A>(describing:)();
  NSString v19 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  *(void *)(inited + 56) = sub_10050BF48(0, (unint64_t *)&qword_101673918);
  *(void *)(inited + 64) = sub_10062E0F4((unint64_t *)&qword_101677140, (unint64_t *)&qword_101673918);
  *(void *)(inited + 32) = v19;
  if (a1 == a3 && a2 == a4 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    sub_10086134C(a5, a6, a7, a8, a9, a10, a11, a12, (uint64_t)"expected inequality between two values of type %{public}@", 57, 2u, inited);
    sub_1005598CC(inited, a6, a7, a8, a9, a10, a11, a12);
    uint64_t v20 = 0;
  }
  else
  {
    uint64_t v20 = 1;
  }
  swift_bridgeObjectRelease();
  return v20;
}

BOOL sub_100C37A6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unsigned __int8 a9, uint64_t a10)
{
  return sub_100C37AB4(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, (uint64_t)&type metadata for Int, &qword_101677350);
}

BOOL sub_100C37AB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unsigned __int8 a9, uint64_t a10, uint64_t a11, uint64_t *a12)
{
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117E810;
  sub_1005057FC(a12);
  String.init<A>(describing:)();
  NSString v19 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  *(void *)(inited + 56) = sub_10050BF48(0, (unint64_t *)&qword_101673918);
  *(void *)(inited + 64) = sub_10062E0F4((unint64_t *)&qword_101677140, (unint64_t *)&qword_101673918);
  *(void *)(inited + 32) = v19;
  if (a1 == a2)
  {
    sub_10086134C(a3, a4, a5, a6, a7, a8, a9, a10, (uint64_t)"expected inequality between two values of type %{public}@", 57, 2u, inited);
    sub_1005598CC(inited, a4, a5, a6, a7, a8, a9, a10);
  }
  swift_bridgeObjectRelease();
  return a1 != a2;
}

uint64_t sub_100C37C60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, unsigned int a8, uint64_t a9, uint64_t a10, unsigned __int8 a11, uint64_t a12)
{
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117E810;
  sub_1005057FC(&qword_101674580);
  sub_1005057FC(&qword_1016996E0);
  String.init<A>(describing:)();
  NSString v19 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  *(void *)(inited + 56) = sub_10050BF48(0, (unint64_t *)&qword_101673918);
  *(void *)(inited + 64) = sub_10062E0F4((unint64_t *)&qword_101677140, (unint64_t *)&qword_101673918);
  *(void *)(inited + 32) = v19;
  if (a2)
  {
    if (a4 && (a1 == a3 && a2 == a4 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)) {
      goto LABEL_6;
    }
LABEL_8:
    uint64_t v20 = 1;
    goto LABEL_9;
  }
  if (a4) {
    goto LABEL_8;
  }
LABEL_6:
  sub_10086134C(a5, a6, a7, a8, a9, a10, a11, a12, (uint64_t)"expected inequality between two values of type %{public}@", 57, 2u, inited);
  sub_1005598CC(inited, a6, a7, a8, a9, a10, a11, a12);
  uint64_t v20 = 0;
LABEL_9:
  swift_bridgeObjectRelease();
  return v20;
}

double *sub_100C37E4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a3 < 0)
  {
    uint64_t result = (double *)_assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
  else
  {
    if (a3)
    {
      uint64_t v6 = (void *)static Array._allocateBufferUninitialized(minimumCapacity:)();
      uint64_t v7 = v6;
      uint64_t v6[2] = a3;
      v6[4] = a1;
      v6[5] = a2;
      if (a3 != 1)
      {
        v6[6] = a1;
        v6[7] = a2;
        uint64_t v8 = a3 - 2;
        if (v8)
        {
          uint64_t v9 = v6 + 9;
          do
          {
            *(v9 - 1) = a1;
            *uint64_t v9 = a2;
            swift_bridgeObjectRetain();
            v9 += 2;
            --v8;
          }
          while (v8);
        }
        swift_bridgeObjectRetain();
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      return _swiftEmptyArrayStorage;
    }
    return (double *)v7;
  }
  return result;
}

uint64_t sub_100C37F48(void *a1, uint64_t a2)
{
  if (a2 < 0)
  {
    uint64_t result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
  else
  {
    if (a2)
    {
      sub_10050BF48(0, &qword_101699970);
      uint64_t v4 = static Array._allocateBufferUninitialized(minimumCapacity:)();
      uint64_t v5 = v4 & 0xFFFFFFFFFFFFFF8;
      *(void *)(v5 + 16) = a2;
      uint64_t v11 = (double *)v4;
      *(void *)(v5 + 32) = a1;
      if (a2 != 1)
      {
        *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x28) = a1;
        uint64_t v6 = a2 - 2;
        if (v6)
        {
          uint64_t v7 = (void *)(v5 + 48);
          do
          {
            *v7++ = a1;
            id v8 = a1;
            --v6;
          }
          while (v6);
        }
        id v9 = a1;
      }
    }
    else
    {
      uint64_t v11 = _swiftEmptyArrayStorage;
    }
    specialized Array._endMutation()();
    return (uint64_t)v11;
  }
  return result;
}

uint64_t sub_100C3836C(uint64_t a1, uint64_t a2)
{
  return sub_100C74AEC(a1, a2, (uint64_t)&OBJC_IVAR____TtC8Freeform17CRLBoardDataStore_writeQueue, (uint64_t)&unk_101529848, (uint64_t)sub_100CE8F30, (uint64_t)&unk_101529860);
}

uint64_t sub_100C3839C(uint64_t a1, uint64_t (*a2)(void))
{
  return a2(0);
}

uint64_t sub_100C38440(int a1, char a2)
{
  int v48 = a1;
  uint64_t v4 = type metadata accessor for DispatchPredicate();
  uint64_t v5 = *(void *)(v4 - 8);
  __n128 v7 = __chkstk_darwin(v4, v6);
  id v9 = (uint64_t *)((char *)&v47 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v50 = v2;
  uint64_t v10 = *(void **)(v2 + OBJC_IVAR____TtC8Freeform17CRLBoardDataStore_queue);
  *id v9 = v10;
  unsigned int v11 = enum case for DispatchPredicate.onQueue(_:);
  uint64_t v12 = *(void (**)(void *, void, uint64_t, __n128))(v5 + 104);
  v12(v9, enum case for DispatchPredicate.onQueue(_:), v4, v7);
  id v13 = v10;
  uint64_t v14 = _dispatchPreconditionTest(_:)();
  uint64_t v15 = *(void (**)(void *, uint64_t))(v5 + 8);
  v15(v9, v4);
  if (v14)
  {
    uint64_t v14 = (uint64_t)v15;
    if (qword_10166FB70 == -1) {
      goto LABEL_3;
    }
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  unsigned int v51 = v11;
  swift_beginAccess();
  id v16 = (id)static OS_os_log.boardStore;
  uint64_t v17 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v16, (uint64_t)&_mh_execute_header, v17, (uint64_t)"Opening the board database", 26, 2, (uint64_t)_swiftEmptyArrayStorage);

  if (a2)
  {
    uint64_t v18 = v50;
    NSString v19 = *(void **)(v50 + OBJC_IVAR____TtC8Freeform17CRLBoardDataStore_readQueue);
    *id v9 = v19;
    uint64_t v20 = (void (*)(void *, void, uint64_t))v12;
    ((void (*)(void *, void, uint64_t))v12)(v9, v51, v4);
    id v21 = v19;
    LOBYTE(v19) = _dispatchPreconditionTest(_:)();
    uint64_t result = ((uint64_t (*)(void *, uint64_t))v14)(v9, v4);
    if ((v19 & 1) == 0)
    {
      __break(1u);
LABEL_20:
      __break(1u);
      goto LABEL_21;
    }
    uint64_t v23 = *(void *)(v18 + OBJC_IVAR____TtC8Freeform17CRLBoardDataStore_database);
    uint64_t v24 = v49;
    sub_10079D07C(3178497);
    if (!v24)
    {
      uint64_t v25 = *(void **)(v23 + 32);
      *id v9 = v25;
      v20(v9, v51, v4);
      id v26 = v25;
      LOBYTE(v25) = _dispatchPreconditionTest(_:)();
      uint64_t result = ((uint64_t (*)(void *, uint64_t))v14)(v9, v4);
      if (v25)
      {
        sub_1007A0098(v23, 0xD00000000000001ALL, 0x8000000101262CE0);
        uint64_t v27 = *(void **)(v23 + 32);
        *id v9 = v27;
        v20(v9, v51, v4);
        id v28 = v27;
        LOBYTE(v27) = _dispatchPreconditionTest(_:)();
        uint64_t result = ((uint64_t (*)(void *, uint64_t))v14)(v9, v4);
        if (v27) {
          return sub_1007A0098(v23, 0xD000000000000019, 0x8000000101262D00);
        }
        goto LABEL_23;
      }
      goto LABEL_20;
    }
LABEL_10:
    uint64_t v31 = (void *)static OS_os_log.boardStore;
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_10117E810;
    swift_getErrorValue();
    id v33 = v31;
    uint64_t v34 = Error.localizedDescription.getter();
    uint64_t v36 = v35;
    *(void *)(inited + 56) = &type metadata for String;
    *(void *)(inited + 64) = sub_100528BE4();
    *(void *)(inited + 32) = v34;
    *(void *)(inited + 4sub_100C38440(1, 0) = v36;
    uint64_t v37 = static os_log_type_t.error.getter();
    sub_100BAC898((uint64_t)v33, (uint64_t)&_mh_execute_header, v37, (uint64_t)"Opening the board database failed with error: %@", 48, 2, inited);
    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();

    return swift_willThrow();
  }
  uint64_t v29 = v49;
  uint64_t v30 = *(void *)(v50 + OBJC_IVAR____TtC8Freeform17CRLBoardDataStore_database);
  sub_10079D07C(3178502);
  if (v29) {
    goto LABEL_10;
  }
  uint64_t v38 = *(void **)(v30 + 32);
  *id v9 = v38;
  ((void (*)(void *, void, uint64_t))v12)(v9, v51, v4);
  id v39 = v38;
  LOBYTE(v38) = _dispatchPreconditionTest(_:)();
  uint64_t result = ((uint64_t (*)(void *, uint64_t))v14)(v9, v4);
  if ((v38 & 1) == 0)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  sub_1007A0098(v30, 0xD00000000000001CLL, 0x8000000101262CC0);
  sub_10079C23C();
  uint64_t v40 = *(void **)(v30 + 32);
  *id v9 = v40;
  ((void (*)(void *, void, uint64_t))v12)(v9, v51, v4);
  id v41 = v40;
  LOBYTE(v4sub_100C38440(1, 0) = _dispatchPreconditionTest(_:)();
  uint64_t result = ((uint64_t (*)(void *, uint64_t))v14)(v9, v4);
  if ((v40 & 1) == 0)
  {
LABEL_22:
    __break(1u);
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  sub_1007A0098(v30, 0xD00000000000001ALL, 0x8000000101262CE0);
  uint64_t v42 = *(void **)(v30 + 32);
  *id v9 = v42;
  ((void (*)(void *, void, uint64_t))v12)(v9, v51, v4);
  id v43 = v42;
  char v44 = _dispatchPreconditionTest(_:)();
  uint64_t result = ((uint64_t (*)(void *, uint64_t))v14)(v9, v4);
  if ((v44 & 1) == 0)
  {
LABEL_24:
    __break(1u);
    return result;
  }
  sub_1007A0098(v30, 0xD000000000000019, 0x8000000101262D00);
  id v45 = (id)static OS_os_log.boardStore;
  uint64_t v46 = static os_log_type_t.info.getter();
  sub_100BAC898((uint64_t)v45, (uint64_t)&_mh_execute_header, v46, (uint64_t)"Checking for schema version", 27, 2, (uint64_t)_swiftEmptyArrayStorage);

  sub_100C39C08();
  if (v48) {
    sub_100C3A2E0();
  }
  return sub_100C3AA54();
}

uint64_t sub_100C38B18(uint64_t a1)
{
  uint64_t v2 = sub_1005057FC(&qword_10167F0F0);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  __n128 v6 = __chkstk_darwin(v2, v5);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v3 + 16))((char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v2, v6);
  unint64_t v7 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v8 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(v8 + v7, (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v2);
  sub_100C74AEC((uint64_t)sub_10084588C, v8, (uint64_t)&OBJC_IVAR____TtC8Freeform17CRLBoardDataStore_writeQueue, (uint64_t)&unk_101529848, (uint64_t)sub_100CE8F30, (uint64_t)&unk_101529860);
  return swift_release();
}

uint64_t sub_100C38DEC(const void *a1, void *a2)
{
  *(void *)(v2 + 16) = a2;
  *(void *)(v2 + 24) = _Block_copy(a1);
  id v4 = a2;
  return _swift_task_switch(sub_100C38E64, 0, 0);
}

uint64_t sub_100C38E64()
{
  uint64_t v1 = v0[2];
  uint64_t v2 = swift_task_alloc();
  v0[4] = v2;
  *(void *)(v2 + 16) = v1;
  uint64_t v3 = (void *)swift_task_alloc();
  v0[5] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_100C38F58;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v3, 0, 0, 0x617461446E65706FLL, 0xEE00292865736162, sub_100CE8F18, v2, (char *)&type metadata for () + 8);
}

uint64_t sub_100C38F58()
{
  *(void *)(*(void *)v1 + 48) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_100C390F0;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_100C39074;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100C39074()
{
  uint64_t v1 = *(void *)(v0 + 24);

  (*(void (**)(uint64_t, void))(v1 + 16))(v1, 0);
  _Block_release(*(const void **)(v0 + 24));
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_100C390F0()
{
  uint64_t v1 = *(void *)(v0 + 24);

  swift_task_dealloc();
  uint64_t v2 = (void *)_convertErrorToNSError(_:)();
  swift_errorRelease();
  (*(void (**)(uint64_t, void *))(v1 + 16))(v1, v2);

  _Block_release(*(const void **)(v0 + 24));
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t sub_100C3919C(int a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for DispatchPredicate();
  uint64_t v5 = *(void *)(v4 - 8);
  __n128 v7 = __chkstk_darwin(v4, v6);
  id v9 = (void *)((char *)v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v10 = *(void **)&v1[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore_queue];
  *id v9 = v10;
  uint64_t v11 = enum case for DispatchPredicate.onQueue(_:);
  uint64_t v12 = *(void (**)(void *, void, uint64_t, __n128))(v5 + 104);
  v12(v9, enum case for DispatchPredicate.onQueue(_:), v4, v7);
  id v13 = v10;
  LOBYTE(v1sub_100C38440(1, 0) = _dispatchPreconditionTest(_:)();
  uint64_t v14 = *(void (**)(void *, uint64_t))(v5 + 8);
  v14(v9, v4);
  if ((v10 & 1) == 0)
  {
    __break(1u);
LABEL_11:
    swift_once();
    goto LABEL_8;
  }
  int v42 = a1;
  id v43 = v14;
  uint64_t v15 = *(void *)&v2[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetManagerLock];
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v15 + 16));
  uint64_t v16 = OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetManager;
  uint64_t v17 = *(void **)&v2[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetManager];
  char v44 = v12;
  if (v17)
  {
    id v18 = v17;
  }
  else
  {
    Class v39 = (Class)type metadata accessor for CRLAssetManager();
    NSString v19 = (char *)objc_allocWithZone(v39);
    unsigned int v40 = v11;
    uint64_t v20 = v19;
    v38[1] = &v19[OBJC_IVAR____TtC8Freeform15CRLAssetManager_store];
    swift_unknownObjectWeakInit();
    uint64_t v21 = OBJC_IVAR____TtC8Freeform15CRLAssetManager_lock;
    type metadata accessor for CRLUnfairLock();
    uint64_t v22 = swift_allocObject();
    v38[0] = v2;
    uint64_t v23 = v20;
    uint64_t v41 = v5 + 104;
    uint64_t v24 = v23;
    uint64_t v25 = (_DWORD *)swift_slowAlloc();
    *uint64_t v25 = 0;
    *(void *)(v22 + 16) = v25;
    atomic_thread_fence(memory_order_acq_rel);
    *(void *)&v20[v21] = v22;
    uint64_t v11 = v40;
    *(void *)&v24[OBJC_IVAR____TtC8Freeform15CRLAssetManager_assets] = _swiftEmptyDictionarySingleton;
    uint64_t v26 = OBJC_IVAR____TtC8Freeform15CRLAssetManager_owners;
    *(void *)&v24[v26] = [self mapTableWithKeyOptions:517 valueOptions:0];
    *(void *)&v24[OBJC_IVAR____TtC8Freeform15CRLAssetManager_garbageCollectionWorkItem] = 0;
    uint64_t v27 = (void *)v38[0];
    swift_unknownObjectWeakAssign();

    v45.receiver = v24;
    v45.super_class = v39;
    id v28 = [super init];

    uint64_t v29 = *(void **)&v2[v16];
    *(void *)&v2[v16] = v28;
    id v18 = v28;

    uint64_t v17 = 0;
  }
  uint64_t v30 = *(os_unfair_lock_s **)(v15 + 16);
  id v31 = v17;
  os_unfair_lock_unlock(v30);
  sub_100AE5080();

  uint64_t v14 = v43;
  if (v42) {
    sub_1009447D0();
  }
  uint64_t v12 = v44;
  if (qword_10166FB70 != -1) {
    goto LABEL_11;
  }
LABEL_8:
  swift_beginAccess();
  id v32 = (id)static OS_os_log.boardStore;
  uint64_t v33 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v32, (uint64_t)&_mh_execute_header, v33, (uint64_t)"Closing the board database", 26, 2, (uint64_t)_swiftEmptyArrayStorage);

  uint64_t v34 = *(void *)&v2[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore_database];
  uint64_t v35 = *(void **)(v34 + 32);
  *id v9 = v35;
  ((void (*)(void *, uint64_t, uint64_t))v12)(v9, v11, v4);
  id v36 = v35;
  LOBYTE(v35) = _dispatchPreconditionTest(_:)();
  uint64_t result = ((uint64_t (*)(void *, uint64_t))v14)(v9, v4);
  if (v35)
  {
    swift_beginAccess();
    uint64_t result = sqlite3_close_v2(*(sqlite3 **)(v34 + 16));
    *(void *)(v34 + 16) = 0;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100C39638(uint64_t a1)
{
  uint64_t v2 = sub_1005057FC(&qword_101682E08);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  __n128 v6 = __chkstk_darwin(v2, v5);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v3 + 16))((char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v2, v6);
  unint64_t v7 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v8 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(v8 + v7, (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v2);
  sub_100C74AEC((uint64_t)sub_100867F18, v8, (uint64_t)&OBJC_IVAR____TtC8Freeform17CRLBoardDataStore_writeQueue, (uint64_t)&unk_101529730, (uint64_t)sub_100CE8E1C, (uint64_t)&unk_101529748);
  return swift_release();
}

uint64_t sub_100C3990C(const void *a1, void *a2)
{
  *(void *)(v2 + 16) = a2;
  *(void *)(v2 + 24) = _Block_copy(a1);
  id v4 = a2;
  return _swift_task_switch(sub_100C39984, 0, 0);
}

uint64_t sub_100C39984()
{
  uint64_t v1 = v0[2];
  uint64_t v2 = swift_task_alloc();
  v0[4] = v2;
  *(void *)(v2 + 16) = v1;
  uint64_t v3 = (void *)swift_task_alloc();
  v0[5] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_100C39A78;
  return withCheckedContinuation<A>(isolation:function:_:)(v3, 0, 0, 0x74614465736F6C63, 0xEF29286573616261, sub_100CE8E04, v2, (char *)&type metadata for () + 8);
}

uint64_t sub_100C39A78()
{
  swift_task_dealloc();
  swift_task_dealloc();
  return _swift_task_switch(sub_100C39B90, 0, 0);
}

uint64_t sub_100C39B90()
{
  uint64_t v1 = *(void (***)(void))(v0 + 24);

  v1[2](v1);
  _Block_release(v1);
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

void sub_100C39C08()
{
  uint64_t v2 = type metadata accessor for DispatchPredicate();
  uint64_t v3 = *(void *)(v2 - 8);
  __n128 v5 = __chkstk_darwin(v2, v4);
  unint64_t v7 = (void *)((char *)v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = *(void **)(inited + OBJC_IVAR____TtC8Freeform17CRLBoardDataStore_queue);
  *unint64_t v7 = v8;
  (*(void (**)(void *, void, uint64_t, __n128))(v3 + 104))(v7, enum case for DispatchPredicate.onQueue(_:), v2, v5);
  id v9 = v8;
  LOBYTE(v8) = _dispatchPreconditionTest(_:)();
  (*(void (**)(void *, uint64_t))(v3 + 8))(v7, v2);
  if ((v8 & 1) == 0)
  {
    __break(1u);
LABEL_23:
    swift_once();
    goto LABEL_8;
  }
  char v10 = sub_10093F05C();
  if (v1)
  {
    v33[32] = v1;
    swift_errorRetain();
    sub_1005057FC(&qword_101672BD0);
    if (!swift_dynamicCast())
    {
      swift_errorRelease();
      return;
    }
    uint64_t v25 = v33[51];
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t inited = swift_initStackObject();
    uint64_t v26 = (const char *)&type metadata for Int;
    *(_OWORD *)(inited + 16) = xmmword_10117D8C0;
    uint64_t v27 = (const char *)&protocol witness table for Int;
    *(void *)(inited + 56) = &type metadata for Int;
    *(void *)(inited + 64) = &protocol witness table for Int;
    *(void *)(inited + 32) = v25;
    unsigned __int8 v28 = sub_10093E9A8((uint64_t)&off_101502768);
    if (v28 != 5) {
      goto LABEL_33;
    }
    __break(1u);
    goto LABEL_26;
  }
  char v11 = v10;
  char v12 = sub_10093E9A8((uint64_t)&off_101502768);
  if (v12 == 5)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  if (v11 != v12)
  {
    switch(v11)
    {
      case 1:
        goto LABEL_12;
      case 2:
        goto LABEL_13;
      case 3:
        goto LABEL_14;
      case 4:
        goto LABEL_15;
      default:
        sub_100C3B244();
LABEL_12:
        sub_100C3B754();
LABEL_13:
        sub_100C3BC00();
LABEL_14:
        sub_100C3C90C();
LABEL_15:
        if (qword_10166FB70 != -1) {
          swift_once();
        }
        swift_beginAccess();
        uint64_t v17 = (void *)static OS_os_log.boardStore;
        sub_1005057FC((uint64_t *)&unk_101672B40);
        uint64_t v18 = swift_initStackObject();
        *(_OWORD *)(v18 + 16) = xmmword_10117E810;
        unsigned __int8 v19 = sub_10093E9A8((uint64_t)&off_101502768);
        if (v19 == 5) {
          goto LABEL_28;
        }
        *(void *)(v18 + 56) = &type metadata for Int;
        *(void *)(v18 + 64) = &protocol witness table for Int;
        *(void *)(v18 + 32) = v19;
        id v20 = v17;
        uint64_t v21 = static os_log_type_t.default.getter();
        sub_100BAC898((uint64_t)v20, (uint64_t)&_mh_execute_header, v21, (uint64_t)"Done migrating database schema, on latest version %{public}d", 60, 2, v18);
        swift_setDeallocating();
        sub_1005057FC(&qword_101672B50);
        swift_arrayDestroy();

        unsigned __int8 v22 = sub_10093F05C();
        uint64_t inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = xmmword_10117D8C0;
        *(void *)(inited + 32) = v22;
        *(void *)(inited + 56) = &type metadata for Int;
        *(void *)(inited + 64) = &protocol witness table for Int;
        unsigned __int8 v23 = sub_10093E9A8((uint64_t)&off_101502768);
        if (v23 == 5) {
          goto LABEL_29;
        }
        *(void *)(inited + 96) = &type metadata for Int;
        *(void *)(inited + 104) = &protocol witness table for Int;
        *(void *)(inited + 72) = v23;
        unsigned __int8 v24 = sub_10093E9A8((uint64_t)&off_101502768);
        if (v24 == 5) {
          goto LABEL_30;
        }
        if (v22 != v24) {
          goto LABEL_31;
        }
        swift_setDeallocating();
        swift_arrayDestroy();
        break;
    }
    return;
  }
  if (qword_10166FB70 != -1) {
    goto LABEL_23;
  }
LABEL_8:
  swift_beginAccess();
  id v13 = (void *)static OS_os_log.boardStore;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117E810;
  unsigned __int8 v14 = sub_10093E9A8((uint64_t)&off_101502768);
  if (v14 == 5)
  {
LABEL_27:
    __break(1u);
LABEL_28:
    __break(1u);
LABEL_29:
    __break(1u);
LABEL_30:
    __break(1u);
LABEL_31:
    uint64_t v26 = "Current schema version %{public}d after all migrations is not the same as the defined latest schema version %{public}d";
    uint64_t v27 = "_performSchemaMigrationIfNeeded()";
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"_performSchemaMigrationIfNeeded()", 33, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLBoardDataStore.swift", 89, 2, 378, (uint64_t)"Current schema version %{public}d after all migrations is not the same as the defined latest schema version %{public}d", 118, 2u, inited);
    sub_100586FD4(inited, (uint64_t)"Current schema version %{public}d after all migrations is not the same as the defined latest schema version %{public}d");
    uint64_t v29 = inited;
    for (uint64_t i = 378; ; uint64_t i = 351)
    {
      sub_1005871AC(v29, (uint64_t)"_performSchemaMigrationIfNeeded()", 33, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLBoardDataStore.swift", 89, 2, i);
      SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v31, v32);
      unsigned __int8 v28 = _assertionFailure(_:_:file:line:flags:)();
      __break(1u);
LABEL_33:
      *(void *)(inited + 96) = v26;
      *(void *)(inited + 104) = v27;
      *(void *)(inited + 72) = v28;
      uint64_t v26 = "Encountered an unknown schema version during possible migration, found value %{public}d is less than latest "
            "known value %{public}d. You are probably trying to open a newer database on an older client, but this is not supported.";
      uint64_t v27 = "_performSchemaMigrationIfNeeded()";
      sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"_performSchemaMigrationIfNeeded()", 33, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLBoardDataStore.swift", 89, 2, 351, (uint64_t)"Encountered an unknown schema version during possible migration, found value %{public}d is less than latest known value %{public}d. You are probably trying to open a newer database on an older client, but this is not supported.", 227, 2u, inited);
      sub_100586FD4(inited, (uint64_t)"Encountered an unknown schema version during possible migration, found value %{public}d is less than latest known value %{public}d. You are probably trying to open a newer database on an older client, but this is not supported.");
      uint64_t v29 = inited;
    }
  }
  *(void *)(inited + 56) = &type metadata for Int;
  *(void *)(inited + 64) = &protocol witness table for Int;
  *(void *)(inited + 32) = v14;
  id v15 = v13;
  uint64_t v16 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v15, (uint64_t)&_mh_execute_header, v16, (uint64_t)"No need to migrate database schema, already on latest version %{public}d", 72, 2, inited);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();
}

void sub_100C3A2E0()
{
  uint64_t v68 = type metadata accessor for CRLBoardDataStore.KeyValueTableKey(0);
  __chkstk_darwin(v68, v1);
  uint64_t v63 = (char *)v55 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3, v4);
  char v66 = (char *)v55 - v5;
  uint64_t v6 = type metadata accessor for DispatchPredicate();
  uint64_t v7 = *(void *)(v6 - 8);
  __n128 v9 = __chkstk_darwin(v6, v8);
  char v11 = (void *)((char *)v55 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  char v12 = *(void **)&v0[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore_writeQueue];
  *char v11 = v12;
  id v13 = (void *)enum case for DispatchPredicate.onQueue(_:);
  uint64_t v14 = v7 + 104;
  id v15 = *(id *)(v7 + 104);
  ((void (*)(void *, void, uint64_t, __n128))v15)(v11, enum case for DispatchPredicate.onQueue(_:), v6, v9);
  id v16 = v12;
  LOBYTE(v12) = _dispatchPreconditionTest(_:)();
  unsigned __int8 v19 = *(void (**)(void *, uint64_t))(v7 + 8);
  uint64_t v18 = v7 + 8;
  uint64_t v17 = v19;
  v19(v11, v6);
  if ((v12 & 1) == 0)
  {
    __break(1u);
    goto LABEL_30;
  }
  unint64_t v65 = (void (*)(void *, uint64_t))sub_10056A960();
  uint64_t v69 = v20;
  uint64_t v21 = *(void **)&v0[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore_queue];
  *char v11 = v21;
  unsigned int v62 = v13;
  uint64_t v64 = v14;
  uint64_t v61 = (void (*)(void *, void, uint64_t))v15;
  ((void (*)(void *, void *, uint64_t))v15)(v11, v13, v6);
  id v15 = v21;
  LOBYTE(v21) = _dispatchPreconditionTest(_:)();
  id v13 = v11;
  v17(v11, v6);
  if ((v21 & 1) == 0)
  {
LABEL_30:
    __break(1u);
LABEL_31:
    swift_once();
    goto LABEL_6;
  }
  uint64_t v60 = v6;
  id v59 = v15;
  char v58 = v17;
  uint64_t v22 = (uint64_t)v66;
  swift_storeEnumTagMultiPayload();
  uint64_t v23 = v67;
  uint64_t v17 = (void (*)(void *, uint64_t))sub_100C87E68(v22);
  id v15 = v24;
  sub_100CE14B4(v22, type metadata accessor for CRLBoardDataStore.KeyValueTableKey);
  if (v23)
  {
LABEL_4:
    swift_bridgeObjectRelease();
    return;
  }
  v55[1] = v18;
  char v66 = v0;
  uint64_t v67 = 0;
  if (qword_10166FB70 != -1) {
    goto LABEL_31;
  }
LABEL_6:
  swift_beginAccess();
  uint64_t v25 = (void *)static OS_os_log.boardStore;
  uint64_t v57 = sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117D8C0;
  *(void *)(inited + 56) = &type metadata for String;
  unint64_t v27 = sub_100528BE4();
  id v28 = (id)v69;
  uint64_t v29 = 7104878;
  uint64_t v30 = (uint64_t)v65;
  if (!v69) {
    uint64_t v30 = 7104878;
  }
  *(void *)(inited + 32) = v30;
  unint64_t v31 = 0xE300000000000000;
  if (v28) {
    unint64_t v32 = (unint64_t)v28;
  }
  else {
    unint64_t v32 = 0xE300000000000000;
  }
  *(void *)(inited + 4sub_100C38440(1, 0) = v32;
  *(void *)(inited + 96) = &type metadata for String;
  *(void *)(inited + 104) = v27;
  unint64_t v33 = v27;
  if (v15)
  {
    uint64_t v29 = (uint64_t)v17;
    unint64_t v31 = (unint64_t)v15;
  }
  *(void *)(inited + 64) = v27;
  *(void *)(inited + 72) = v29;
  *(void *)(inited + 8sub_100C38440(1, 0) = v31;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v34 = v25;
  uint64_t v35 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v34, (uint64_t)&_mh_execute_header, v35, (uint64_t)"Ensuring ownership of data. currentAccountIdentifier: %{public}@. accountIdentifierFromDatabase: %{public}@", 107, 2, inited);
  swift_setDeallocating();
  uint64_t v36 = sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  if (!v15)
  {
    if (!v28)
    {
LABEL_23:
      id v39 = (id)static OS_os_log.boardStore;
      uint64_t v40 = static os_log_type_t.default.getter();
      sub_100BAC898((uint64_t)v39, (uint64_t)&_mh_execute_header, v40, (uint64_t)"No ownership change. Continuing.", 32, 2, (uint64_t)_swiftEmptyArrayStorage);

      return;
    }
    uint64_t v56 = v36;
    goto LABEL_26;
  }
  uint64_t v56 = v36;
  uint64_t v37 = v67;
  if (v28)
  {
    if (v17 == v65 && v15 == v28)
    {
      swift_bridgeObjectRelease();
LABEL_22:
      swift_bridgeObjectRelease();
      goto LABEL_23;
    }
    char v38 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v38) {
      goto LABEL_22;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  id v41 = (id)static OS_os_log.boardStore;
  uint64_t v42 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v41, (uint64_t)&_mh_execute_header, v42, (uint64_t)"Ownership of data changed. Deleting data.", 41, 2, (uint64_t)_swiftEmptyArrayStorage);

  sub_100C42BB8();
  if (v37) {
    goto LABEL_4;
  }
  if (v28)
  {
LABEL_26:
    id v43 = (void *)static OS_os_log.boardStore;
    uint64_t v44 = swift_initStackObject();
    *(_OWORD *)(v44 + 16) = xmmword_10117E810;
    *(void *)(v44 + 56) = &type metadata for String;
    *(void *)(v44 + 64) = v33;
    uint64_t v45 = (uint64_t)v65;
    *(void *)(v44 + 32) = v65;
    uint64_t v46 = v69;
    *(void *)(v44 + 4sub_100C38440(1, 0) = v69;
    swift_bridgeObjectRetain();
    id v47 = v43;
    uint64_t v48 = static os_log_type_t.default.getter();
    sub_100BAC898((uint64_t)v47, (uint64_t)&_mh_execute_header, v48, (uint64_t)"Previously unowned data is being claimed by owner: %@", 53, 2, v44);
    swift_setDeallocating();
    swift_arrayDestroy();

    sub_100C43924(v45, v46);
    goto LABEL_4;
  }
  uint64_t v49 = (uint64_t)(id)static OS_os_log.boardStore;
  uint64_t v50 = static os_log_type_t.default.getter();
  sub_100BAC898(v49, (uint64_t)&_mh_execute_header, v50, (uint64_t)"Owner set to nil.", 17, 2, (uint64_t)_swiftEmptyArrayStorage);

  unsigned int v51 = v59;
  *id v13 = v59;
  uint64_t v52 = v60;
  v61(v13, v62, v60);
  id v53 = v51;
  LOBYTE(v49) = _dispatchPreconditionTest(_:)();
  v58(v13, v52);
  if (v49)
  {
    uint64_t v54 = (uint64_t)v63;
    swift_storeEnumTagMultiPayload();
    sub_100C87E68(v54);
    sub_100CE14B4(v54, type metadata accessor for CRLBoardDataStore.KeyValueTableKey);
    goto LABEL_4;
  }
  __break(1u);
}

uint64_t sub_100C3AA54()
{
  uint64_t Marks = type metadata accessor for CRLSideStore.BoardLoadMarksColumn.Row();
  uint64_t v3 = *(void *)(Marks - 8);
  __chkstk_darwin(Marks, v4);
  uint64_t v54 = (uint64_t)&v45 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for DispatchPredicate();
  uint64_t v7 = *(void *)(v6 - 8);
  __n128 v9 = __chkstk_darwin(v6, v8);
  char v11 = (uint64_t *)((char *)&v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  char v12 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform17CRLBoardDataStore_writeQueue);
  *char v11 = v12;
  (*(void (**)(void *, void, uint64_t, __n128))(v7 + 104))(v11, enum case for DispatchPredicate.onQueue(_:), v6, v9);
  id v13 = v12;
  LOBYTE(v12) = _dispatchPreconditionTest(_:)();
  (*(void (**)(void *, uint64_t))(v7 + 8))(v11, v6);
  if ((v12 & 1) == 0)
  {
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v52 = v0;
  uint64_t v14 = *(void *)(v0 + OBJC_IVAR____TtC8Freeform17CRLBoardDataStore_sideStore);
  sub_1005057FC(&qword_1016998D8);
  uint64_t v47 = v14;
  OS_dispatch_queue.sync<A>(execute:)();
  uint64_t v1 = v60;
  uint64_t v2 = (id *)&static OS_os_log.boardStore;
  int v48 = v61;
  if (v61)
  {
    swift_errorRetain();
    if (qword_10166FB70 != -1) {
      swift_once();
    }
    swift_beginAccess();
    id v15 = (void *)static OS_os_log.boardStore;
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_10117D8C0;
    swift_getErrorValue();
    uint64_t v17 = v58;
    uint64_t v18 = v59;
    id v19 = v15;
    uint64_t v20 = Error.publicDescription.getter(v17, v18);
    uint64_t v22 = v21;
    *(void *)(inited + 56) = &type metadata for String;
    unint64_t v23 = sub_100528BE4();
    *(void *)(inited + 64) = v23;
    *(void *)(inited + 32) = v20;
    *(void *)(inited + 4sub_100C38440(1, 0) = v22;
    swift_getErrorValue();
    uint64_t v24 = Error.fullDescription.getter(v57);
    *(void *)(inited + 96) = &type metadata for String;
    *(void *)(inited + 104) = v23;
    *(void *)(inited + 72) = v24;
    *(void *)(inited + 8sub_100C38440(1, 0) = v25;
    uint64_t v26 = static os_log_type_t.error.getter();
    sub_100BAC898((uint64_t)v19, (uint64_t)&_mh_execute_header, v26, (uint64_t)"Failed to updateLastOpenCrashedVersionBasedOnBoardLoadMarksInSideStore with error: %{public}@ %@", 96, 2, inited);
    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();

    sub_1005410E0(v1, 1);
    unint64_t v27 = &qword_10166F000;
    goto LABEL_13;
  }
  uint64_t v28 = *(void *)(v60 + 16);
  if (v28)
  {
    uint64_t v29 = v60 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    uint64_t v51 = *(void *)(v3 + 72);
    uint64_t v46 = v60;
    swift_bridgeObjectRetain();
    long long v50 = xmmword_10117DF40;
    long long v49 = xmmword_10117D8C0;
    uint64_t v30 = v54;
    do
    {
      uint64_t v56 = v28;
      sub_100CE144C(v29, v30, (uint64_t (*)(void))type metadata accessor for CRLSideStore.BoardLoadMarksColumn.Row);
      if (qword_10166FB70 != -1) {
        swift_once();
      }
      swift_beginAccess();
      unint64_t v31 = (void *)static OS_os_log.boardStore;
      sub_1005057FC((uint64_t *)&unk_101672B40);
      uint64_t v32 = swift_initStackObject();
      *(_OWORD *)(v32 + 16) = v50;
      id v33 = v31;
      uint64_t v34 = UUID.uuidString.getter();
      uint64_t v36 = v35;
      *(void *)(v32 + 56) = &type metadata for String;
      unint64_t v55 = sub_100528BE4();
      *(void *)(v32 + 64) = v55;
      *(void *)(v32 + 32) = v34;
      *(void *)(v32 + 4sub_100C38440(1, 0) = v36;
      uint64_t v37 = Marks;
      sqlite3_int64 v38 = *(void *)(v30 + *(int *)(Marks + 20));
      *(void *)(v32 + 96) = &type metadata for UInt64;
      *(void *)(v32 + 104) = &protocol witness table for UInt64;
      *(void *)(v32 + 72) = v38;
      int v39 = *(_DWORD *)(v30 + *(int *)(v37 + 24));
      *(void *)(v32 + 136) = &type metadata for Int32;
      *(void *)(v32 + 144) = &protocol witness table for Int32;
      *(_DWORD *)(v32 + 112) = v39;
      uint64_t v40 = static os_log_type_t.default.getter();
      sub_100BAC898((uint64_t)v33, (uint64_t)&_mh_execute_header, v40, (uint64_t)"Setting lastOpenCrashVersion for board %{public}@ to %{public}d because it has %{public}d board load marks during updateLastOpenCrashedVersionBasedOnBoardLoadMarksInSideStore", 174, 2, v32);
      swift_setDeallocating();
      sub_1005057FC(&qword_101672B50);
      swift_arrayDestroy();

      sub_100C78C40(v30, v38, 0);
      uint64_t v30 = v54;
      sub_100CE14B4(v54, (uint64_t (*)(void))type metadata accessor for CRLSideStore.BoardLoadMarksColumn.Row);
      v29 += v51;
      uint64_t v28 = v56 - 1;
      uint64_t v2 = (id *)&static OS_os_log.boardStore;
      unint64_t v27 = &qword_10166F000;
    }
    while (v56 != 1);
    uint64_t v1 = v46;
    sub_1005410E0(v46, 0);
    sub_100944E80();
LABEL_13:
    LOBYTE(v11) = v48;
    if (v27[366] == -1)
    {
LABEL_14:
      swift_beginAccess();
      id v41 = *v2;
      uint64_t v42 = static os_log_type_t.default.getter();
      sub_100BAC898((uint64_t)v41, (uint64_t)&_mh_execute_header, v42, (uint64_t)"Finished updateLastOpenCrashedVersionBasedOnBoardLoadMarksInSideStore", 69, 2, (uint64_t)_swiftEmptyArrayStorage);
      goto LABEL_15;
    }
LABEL_20:
    swift_once();
    goto LABEL_14;
  }
  if (qword_10166FB70 != -1) {
    swift_once();
  }
  swift_beginAccess();
  id v41 = (id)static OS_os_log.boardStore;
  uint64_t v44 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v41, (uint64_t)&_mh_execute_header, v44, (uint64_t)"updateLastOpenCrashedVersionBasedOnBoardLoadMarksInSideStore resulted in no new crashed boards", 94, 2, (uint64_t)_swiftEmptyArrayStorage);
  LOBYTE(v11) = 0;
LABEL_15:

  return sub_1005410E0(v1, (char)v11);
}

void sub_100C3B1E4(void *a1@<X8>)
{
  *a1 = &off_101502EC0;
}

BOOL sub_100C3B1F4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 < *a2;
}

BOOL sub_100C3B208(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a2 >= *a1;
}

BOOL sub_100C3B21C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 >= *a2;
}

BOOL sub_100C3B230(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a2 < *a1;
}

uint64_t sub_100C3B244()
{
  uint64_t v2 = v0;
  uint64_t v3 = type metadata accessor for DispatchPredicate();
  uint64_t v4 = *(void *)(v3 - 8);
  __n128 v6 = __chkstk_darwin(v3, v5);
  uint64_t v8 = (uint64_t *)((char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  __n128 v9 = *(void **)&v0[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore_queue];
  *uint64_t v8 = v9;
  unsigned int v10 = enum case for DispatchPredicate.onQueue(_:);
  uint64_t v28 = *(void (**)(void *, void, uint64_t, __n128))(v4 + 104);
  v28(v8, enum case for DispatchPredicate.onQueue(_:), v3, v6);
  id v27 = v9;
  LOBYTE(v9) = _dispatchPreconditionTest(_:)();
  char v11 = *(void (**)(void *, uint64_t))(v4 + 8);
  v11(v8, v3);
  if (v9)
  {
    unsigned int v26 = v10;
    if (qword_10166FB70 == -1) {
      goto LABEL_3;
    }
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  swift_beginAccess();
  id v12 = (id)static OS_os_log.boardStore;
  uint64_t v13 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v12, (uint64_t)&_mh_execute_header, v13, (uint64_t)"Creating schema for a new board database", 40, 2, (uint64_t)_swiftEmptyArrayStorage);

  uint64_t result = sub_10093F05C();
  if (v1) {
    return result;
  }
  unsigned __int8 v15 = result;
  uint64_t v25 = v11;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = (char *)swift_initStackObject();
  *((void *)inited + 4) = v15;
  *((_OWORD *)inited + 1) = xmmword_10117D8C0;
  *((void *)inited + 7) = &type metadata for Int;
  *((void *)inited + 8) = &protocol witness table for Int;
  *((void *)inited + 12) = &type metadata for Int;
  *((void *)inited + 13) = &protocol witness table for Int;
  *((void *)inited + 9) = 1;
  if (v15)
  {
LABEL_11:
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"_createDatabaseSchema()", 23, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLBoardDataStore.swift", 89, 2, 581, (uint64_t)"Current schema version %{public}d before migration to %{public}d is unexpected", 78, 2u, (uint64_t)inited);
    sub_100586FD4((uint64_t)inited, (uint64_t)"Current schema version %{public}d before migration to %{public}d is unexpected");
    sub_1005871AC((uint64_t)inited, (uint64_t)"_createDatabaseSchema()", 23, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLBoardDataStore.swift", 89, 2, 581);
    SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v22, v23);
    uint64_t result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
    return result;
  }
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();
  uint64_t v17 = *(void *)&v2[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore_database];
  type metadata accessor for SQLTransaction();
  uint64_t v18 = swift_initStackObject();
  *(void *)(v18 + 16) = v17;
  *(unsigned char *)(v18 + 24) = 0;
  swift_retain();
  sub_10079EF08();
  sub_100C3E4D0();
  sub_100C3EE00();
  sub_100C3F448();
  sub_100C3FE18();
  sub_100C405E0();
  sub_100C40AC4();
  sub_100C40FB4();
  sub_100C4175C();
  sub_100C41CFC();
  id v19 = v27;
  *uint64_t v8 = v27;
  ((void (*)(void *, void, uint64_t))v28)(v8, v26, v3);
  id v20 = v19;
  uint64_t inited = v2;
  char v21 = _dispatchPreconditionTest(_:)();
  v25(v8, v3);

  if ((v21 & 1) == 0)
  {
    __break(1u);
    goto LABEL_11;
  }
  sub_10093F9E0(1);
  sub_10079F3C8();
  swift_setDeallocating();
  return swift_release();
}

uint64_t sub_100C3B754()
{
  uint64_t v2 = v0;
  uint64_t v3 = type metadata accessor for DispatchPredicate();
  uint64_t v4 = *(void *)(v3 - 8);
  __n128 v6 = __chkstk_darwin(v3, v5);
  uint64_t v8 = (uint64_t *)((char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  __n128 v9 = *(void **)&v0[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore_queue];
  *uint64_t v8 = v9;
  unsigned int v10 = enum case for DispatchPredicate.onQueue(_:);
  uint64_t v29 = *(void (**)(void *, void, uint64_t, __n128))(v4 + 104);
  v29(v8, enum case for DispatchPredicate.onQueue(_:), v3, v6);
  id v28 = v9;
  LOBYTE(v9) = _dispatchPreconditionTest(_:)();
  char v11 = *(void (**)(void *, uint64_t))(v4 + 8);
  v11(v8, v3);
  if (v9)
  {
    unsigned int v27 = v10;
    if (qword_10166FB70 == -1) {
      goto LABEL_3;
    }
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  swift_beginAccess();
  id v12 = (id)static OS_os_log.boardStore;
  uint64_t v13 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v12, (uint64_t)&_mh_execute_header, v13, (uint64_t)"Migrating database to minRequiredVersionForGoodEnoughFidelity schema version", 76, 2, (uint64_t)_swiftEmptyArrayStorage);

  uint64_t result = sub_10093F05C();
  if (v1) {
    return result;
  }
  unsigned __int8 v15 = result;
  unsigned int v26 = v11;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = (char *)swift_initStackObject();
  *((_OWORD *)inited + 1) = xmmword_10117D8C0;
  *((void *)inited + 4) = v15;
  int v17 = v15;
  *((void *)inited + 7) = &type metadata for Int;
  *((void *)inited + 8) = &protocol witness table for Int;
  *((void *)inited + 12) = &type metadata for Int;
  *((void *)inited + 13) = &protocol witness table for Int;
  LOBYTE(v18) = 2;
  *((void *)inited + 9) = 2;
  if (v17 != 1)
  {
LABEL_11:
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"_migrateToMinRequiredVersionForGoodEnoughFidelitySchema()", 57, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLBoardDataStore.swift", 89, 2, 474, (uint64_t)"Current schema version %{public}d before migration to %{public}d is unexpected", 78, v18, (uint64_t)inited);
    sub_100586FD4((uint64_t)inited, (uint64_t)"Current schema version %{public}d before migration to %{public}d is unexpected");
    sub_1005871AC((uint64_t)inited, (uint64_t)"_migrateToMinRequiredVersionForGoodEnoughFidelitySchema()", 57, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLBoardDataStore.swift", 89, 2, 474);
    SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v23, v24);
    uint64_t result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
    return result;
  }
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();
  uint64_t v18 = *(void *)&v2[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore_database];
  type metadata accessor for SQLTransaction();
  uint64_t v19 = swift_initStackObject();
  *(void *)(v19 + 16) = v18;
  *(unsigned char *)(v19 + 24) = 0;
  swift_retain();
  sub_10079EF08();
  sub_100C3D16C();
  sub_100C3D640();
  sub_100C3DB20();
  sub_100C3DFF8();
  id v20 = v28;
  *uint64_t v8 = v28;
  ((void (*)(void *, void, uint64_t))v29)(v8, v27, v3);
  id v21 = v20;
  uint64_t inited = v2;
  char v22 = _dispatchPreconditionTest(_:)();
  v26(v8, v3);

  if ((v22 & 1) == 0)
  {
    __break(1u);
    goto LABEL_11;
  }
  sub_10093F9E0(2);
  sub_10079F3C8();
  swift_setDeallocating();
  return swift_release();
}

uint64_t sub_100C3BC00()
{
  uint64_t v2 = v1;
  uint64_t v3 = type metadata accessor for DispatchPredicate();
  uint64_t v4 = *(void *)(v3 - 8);
  __n128 v6 = __chkstk_darwin(v3, v5);
  uint64_t v8 = (void *)((char *)&v93 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v102 = v0;
  __n128 v9 = *(void **)&v0[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore_queue];
  *uint64_t v8 = v9;
  unsigned int v10 = *(void (**)(void, __n128))(v4 + 104);
  unsigned int v103 = enum case for DispatchPredicate.onQueue(_:);
  uint64_t v104 = (void (*)(void *, void, uint64_t))v10;
  uint64_t v105 = v4 + 104;
  v10(v8, v6);
  id v99 = v9;
  LOBYTE(v9) = _dispatchPreconditionTest(_:)();
  char v11 = *(void (**)(void *, uint64_t))(v4 + 8);
  uint64_t v107 = v8;
  uint64_t v108 = v4 + 8;
  uint64_t v109 = v3;
  uint64_t v106 = v11;
  v11(v8, v3);
  if ((v9 & 1) == 0) {
    goto LABEL_30;
  }
  if (qword_10166FB70 != -1) {
    goto LABEL_31;
  }
LABEL_3:
  swift_beginAccess();
  id v12 = (id)static OS_os_log.boardStore;
  uint64_t v13 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v12, (uint64_t)&_mh_execute_header, v13, (uint64_t)"Migrating database to minRequiredVersionForFullFidelity schema version", 70, 2, (uint64_t)_swiftEmptyArrayStorage);

  uint64_t v14 = v102;
  uint64_t result = sub_10093F05C();
  if (v2) {
    return result;
  }
  unsigned __int8 v16 = result;
  unint64_t v110 = 0;
  uint64_t v94 = sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  uint64_t v18 = inited;
  long long v93 = xmmword_10117D8C0;
  *(_OWORD *)(inited + 16) = xmmword_10117D8C0;
  *(void *)(inited + 32) = v16;
  *(void *)(inited + 56) = &type metadata for Int;
  *(void *)(inited + 64) = &protocol witness table for Int;
  *(void *)(inited + 96) = &type metadata for Int;
  *(void *)(inited + 104) = &protocol witness table for Int;
  *(void *)(inited + 72) = 3;
  if (v16 != 2)
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"_migrateToMinRequiredVersionForFullFidelitySchema()", 51, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLBoardDataStore.swift", 89, 2, 430, (uint64_t)"Current schema version %{public}d before migration to %{public}d is unexpected", 78, 2u, inited);
    sub_100586FD4(v18, (uint64_t)"Current schema version %{public}d before migration to %{public}d is unexpected");
    uint64_t v89 = v18;
    uint64_t v90 = 430;
    goto LABEL_35;
  }
  swift_setDeallocating();
  uint64_t v95 = sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();
  uint64_t v112 = 0;
  unint64_t v113 = 0xE000000000000000;
  _StringGuts.grow(_:)(57);
  v19._countAndFlagsBits = 0x4154205245544C41;
  v19._object = (void *)0xEC00000020454C42;
  String.append(_:)(v19);
  v20._countAndFlagsBits = 0x736472616F62;
  v20._object = (void *)0xE600000000000000;
  String.append(_:)(v20);
  v21._countAndFlagsBits = 0x4C4F432044444120;
  v21._object = (void *)0xEC000000204E4D55;
  String.append(_:)(v21);
  v22._countAndFlagsBits = 0xD000000000000026;
  v22._object = (void *)0x800000010127B8D0;
  String.append(_:)(v22);
  v23._countAndFlagsBits = 0xD00000000000001ALL;
  v23._object = (void *)0x8000000101280DA0;
  String.append(_:)(v23);
  uint64_t v100 = 0x1000000000000;
  uint64_t v111 = 0x1000000000000;
  v24._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v24);
  swift_bridgeObjectRelease();
  v25._countAndFlagsBits = 59;
  v25._object = (void *)0xE100000000000000;
  String.append(_:)(v25);
  uint64_t v101 = v112;
  unint64_t v98 = v113;
  uint64_t v112 = 0;
  unint64_t v113 = 0xE000000000000000;
  _StringGuts.grow(_:)(57);
  v26._countAndFlagsBits = 0x4154205245544C41;
  v26._object = (void *)0xEC00000020454C42;
  String.append(_:)(v26);
  v27._countAndFlagsBits = 0x74695F6472616F62;
  v27._object = (void *)0xEB00000000736D65;
  String.append(_:)(v27);
  v28._countAndFlagsBits = 0x4C4F432044444120;
  v28._object = (void *)0xEC000000204E4D55;
  String.append(_:)(v28);
  v29._countAndFlagsBits = 0xD000000000000026;
  v29._object = (void *)0x800000010127B8D0;
  String.append(_:)(v29);
  v30._countAndFlagsBits = 0xD00000000000001ALL;
  v30._object = (void *)0x8000000101280DA0;
  String.append(_:)(v30);
  uint64_t v111 = 0x1000000000000;
  v31._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v31);
  swift_bridgeObjectRelease();
  v32._countAndFlagsBits = 59;
  v32._object = (void *)0xE100000000000000;
  String.append(_:)(v32);
  unint64_t v96 = v113;
  uint64_t v97 = v112;
  uint64_t v112 = 0;
  unint64_t v113 = 0xE000000000000000;
  _StringGuts.grow(_:)(57);
  v33._countAndFlagsBits = 0x4154205245544C41;
  v33._object = (void *)0xEC00000020454C42;
  String.append(_:)(v33);
  v34._countAndFlagsBits = 0xD000000000000018;
  v34._object = (void *)0x800000010127BF60;
  String.append(_:)(v34);
  v35._countAndFlagsBits = 0x4C4F432044444120;
  v35._object = (void *)0xEC000000204E4D55;
  String.append(_:)(v35);
  v36._countAndFlagsBits = 0xD000000000000026;
  v36._object = (void *)0x800000010127B8D0;
  String.append(_:)(v36);
  v37._countAndFlagsBits = 0xD00000000000001ALL;
  v37._object = (void *)0x8000000101280DA0;
  String.append(_:)(v37);
  uint64_t v111 = 0x1000000000000;
  v38._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v38);
  swift_bridgeObjectRelease();
  v39._countAndFlagsBits = 59;
  v39._object = (void *)0xE100000000000000;
  String.append(_:)(v39);
  uint64_t v40 = v112;
  unint64_t v41 = v113;
  uint64_t v112 = 0;
  unint64_t v113 = 0xE000000000000000;
  _StringGuts.grow(_:)(57);
  v42._countAndFlagsBits = 0x4154205245544C41;
  v42._object = (void *)0xEC00000020454C42;
  String.append(_:)(v42);
  v43._countAndFlagsBits = 0x6D5F736472616F62;
  v43._object = (void *)0xEF61746164617465;
  String.append(_:)(v43);
  v44._countAndFlagsBits = 0x4C4F432044444120;
  v44._object = (void *)0xEC000000204E4D55;
  String.append(_:)(v44);
  v45._countAndFlagsBits = 0xD000000000000026;
  v45._object = (void *)0x800000010127B8D0;
  String.append(_:)(v45);
  v46._countAndFlagsBits = 0xD00000000000001ALL;
  v46._object = (void *)0x8000000101280DA0;
  String.append(_:)(v46);
  uint64_t v111 = v100;
  v47._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v47);
  swift_bridgeObjectRelease();
  v48._countAndFlagsBits = 59;
  v48._object = (void *)0xE100000000000000;
  String.append(_:)(v48);
  uint64_t v49 = v112;
  unint64_t v50 = v113;
  sub_1005057FC((uint64_t *)&unk_101672610);
  uint64_t v51 = swift_initStackObject();
  *(void *)(v51 + 32) = v101;
  *(_OWORD *)(v51 + 16) = xmmword_10117E800;
  uint64_t v52 = v97;
  *(void *)(v51 + 4sub_100C38440(1, 0) = v98;
  *(void *)(v51 + 48) = v52;
  *(void *)(v51 + 56) = v96;
  *(void *)(v51 + 64) = v40;
  *(void *)(v51 + 72) = v41;
  *(void *)(v51 + 8sub_100C38440(1, 0) = v49;
  *(void *)(v51 + 88) = v50;
  uint64_t v53 = *(void *)&v14[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore_database];
  type metadata accessor for SQLTransaction();
  uint64_t v54 = swift_initStackObject();
  *(void *)(v54 + 16) = v53;
  *(unsigned char *)(v54 + 24) = 0;
  swift_retain();
  unint64_t v55 = v110;
  sub_10079EF08();
  unint64_t v56 = v55;
  if (v55)
  {
    swift_release();
    swift_setDeallocating();
    return swift_arrayDestroy();
  }
  uint64_t v100 = v51;
  uint64_t v101 = v53;
  unint64_t v98 = v54;
  unint64_t v110 = 0;
  uint64_t v2 = (uint64_t *)(v51 + 40);
  uint64_t v57 = v95;
  while (1)
  {
    if (v56 >= *(void *)(v51 + 16))
    {
      __break(1u);
LABEL_28:
      __break(1u);
LABEL_29:
      __break(1u);
LABEL_30:
      __break(1u);
LABEL_31:
      swift_once();
      goto LABEL_3;
    }
    uint64_t v59 = *(v2 - 1);
    uint64_t v58 = *v2;
    type metadata accessor for SQLiteStatement();
    swift_initStackObject();
    uint64_t v60 = v101;
    swift_retain();
    swift_bridgeObjectRetain();
    unint64_t v61 = v110;
    uint64_t v62 = sub_10079FC40(v60, v59, v58);
    unint64_t v110 = v61;
    if (v61)
    {
      swift_release();
      swift_bridgeObjectRelease();
      goto LABEL_23;
    }
    uint64_t v63 = v62;
    uint64_t v64 = v57;
    swift_release();
    unint64_t v65 = *(void **)(*(void *)(v63 + 16) + 32);
    char v66 = v107;
    *uint64_t v107 = v65;
    uint64_t v67 = v109;
    v104(v66, v103, v109);
    id v68 = v65;
    LOBYTE(v65) = _dispatchPreconditionTest(_:)();
    v106(v66, v67);
    if ((v65 & 1) == 0) {
      goto LABEL_28;
    }
    uint64_t v69 = (sqlite3_stmt **)(v63 + 24);
    swift_beginAccess();
    int v70 = sqlite3_step(*(sqlite3_stmt **)(v63 + 24));
    if (v70 != 101) {
      break;
    }
    uint64_t v71 = *(void **)(*(void *)(v63 + 16) + 32);
    uint64_t v72 = v107;
    *uint64_t v107 = v71;
    uint64_t v73 = v109;
    v104(v72, v103, v109);
    id v74 = v71;
    LOBYTE(v71) = _dispatchPreconditionTest(_:)();
    v106(v72, v73);
    if ((v71 & 1) == 0) {
      goto LABEL_29;
    }
    if (*v69)
    {
      sqlite3_finalize(*v69);
      *uint64_t v69 = 0;
    }
    ++v56;
    swift_release();
    v2 += 2;
    uint64_t v57 = v64;
    uint64_t v51 = v100;
    if (v56 == 4)
    {
      swift_bridgeObjectRelease();
      uint64_t v82 = v107;
      uint64_t v83 = v99;
      *uint64_t v107 = v99;
      uint64_t v84 = v109;
      v104(v82, v103, v109);
      id v85 = v83;
      unint64_t v86 = v102;
      LOBYTE(v83) = _dispatchPreconditionTest(_:)();
      v106(v82, v84);

      if (v83)
      {
        unint64_t v87 = v110;
        sub_10093F9E0(3);
        if (v87) {
          goto LABEL_23;
        }
        sub_10079F3C8();
        unsigned __int8 v88 = sub_10093F05C();
        uint64_t v18 = swift_initStackObject();
        *(_OWORD *)(v18 + 16) = v93;
        *(void *)(v18 + 32) = v88;
        *(void *)(v18 + 56) = &type metadata for Int;
        *(void *)(v18 + 96) = &type metadata for Int;
        *(void *)(v18 + 104) = &protocol witness table for Int;
        *(void *)(v18 + 64) = &protocol witness table for Int;
        *(void *)(v18 + 72) = 3;
        if (v88 != 3)
        {
          while (1)
          {
            sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"_migrateToMinRequiredVersionForFullFidelitySchema()", 51, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLBoardDataStore.swift", 89, 2, 464, (uint64_t)"Queried schema version %{public}d after migration to %{public}d is unexpected", 77, 2u, v18);
            sub_100586FD4(v18, (uint64_t)"Queried schema version %{public}d after migration to %{public}d is unexpected");
            uint64_t v89 = v18;
            uint64_t v90 = 464;
LABEL_35:
            sub_1005871AC(v89, (uint64_t)"_migrateToMinRequiredVersionForFullFidelitySchema()", 51, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLBoardDataStore.swift", 89, 2, v90);
            SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v91, v92);
            _assertionFailure(_:_:file:line:flags:)();
            __break(1u);
          }
        }
        swift_setDeallocating();
        swift_arrayDestroy();
        swift_setDeallocating();
        return swift_release();
      }
LABEL_33:
      __break(1u);
    }
  }
  int v75 = v70;
  swift_bridgeObjectRelease();
  sub_10079FF00();
  swift_allocError();
  *(_DWORD *)uint64_t v76 = v75;
  *(void *)(v76 + 8) = 0xD000000000000017;
  *(void *)(v76 + 16) = 0x8000000101281090;
  swift_willThrow();
  uint64_t v77 = *(void **)(*(void *)(v63 + 16) + 32);
  uint64_t v78 = v107;
  *uint64_t v107 = v77;
  uint64_t v79 = v109;
  v104(v78, v103, v109);
  id v80 = v77;
  char v81 = _dispatchPreconditionTest(_:)();
  v106(v78, v79);
  if ((v81 & 1) == 0)
  {
    __break(1u);
    goto LABEL_33;
  }
  if (*v69)
  {
    sqlite3_finalize(*v69);
    *(void *)(v63 + 24) = 0;
  }
  swift_release();
LABEL_23:
  sub_10079F70C();
  swift_willThrow();
  swift_setDeallocating();
  return swift_release();
}

uint64_t sub_100C3C90C()
{
  uint64_t v2 = v0;
  uint64_t v3 = type metadata accessor for DispatchPredicate();
  uint64_t v4 = *(void *)(v3 - 8);
  __n128 v6 = __chkstk_darwin(v3, v5);
  uint64_t v8 = (uint64_t *)((char *)&v57 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  __n128 v9 = *(void **)&v0[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore_queue];
  *uint64_t v8 = v9;
  unsigned int v10 = *(void (**)(void, __n128))(v4 + 104);
  unsigned int v67 = enum case for DispatchPredicate.onQueue(_:);
  id v68 = (void (*)(void *, void, uint64_t))v10;
  v10(v8, v6);
  id v64 = v9;
  LOBYTE(v9) = _dispatchPreconditionTest(_:)();
  char v11 = *(void (**)(void *, uint64_t))(v4 + 8);
  v11(v8, v3);
  if (v9)
  {
    unint64_t v65 = v11;
    if (qword_10166FB70 == -1) {
      goto LABEL_3;
    }
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  swift_beginAccess();
  id v12 = (id)static OS_os_log.boardStore;
  uint64_t v13 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v12, (uint64_t)&_mh_execute_header, v13, (uint64_t)"Migrating database to optimizeSubtreeQuery schema version", 57, 2, (uint64_t)_swiftEmptyArrayStorage);

  uint64_t result = sub_10093F05C();
  if (v1) {
    return result;
  }
  unsigned __int8 v15 = result;
  uint64_t v66 = 0;
  uint64_t v63 = v3;
  uint64_t v62 = sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  uint64_t v17 = inited;
  long long v61 = xmmword_10117D8C0;
  *(_OWORD *)(inited + 16) = xmmword_10117D8C0;
  *(void *)(inited + 32) = v15;
  *(void *)(inited + 56) = &type metadata for Int;
  *(void *)(inited + 64) = &protocol witness table for Int;
  *(void *)(inited + 96) = &type metadata for Int;
  *(void *)(inited + 104) = &protocol witness table for Int;
  *(void *)(inited + 72) = 4;
  if (v15 != 3)
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"_migrateToOptimizedSubtreeQuerySchema()", 39, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLBoardDataStore.swift", 89, 2, 390, (uint64_t)"Current schema version %{public}d before migration to %{public}d is unexpected", 78, 2u, inited);
    sub_100586FD4(v17, (uint64_t)"Current schema version %{public}d before migration to %{public}d is unexpected");
    uint64_t v53 = v17;
    uint64_t v54 = 390;
    goto LABEL_32;
  }
  swift_setDeallocating();
  uint64_t v18 = sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();
  uint64_t v69 = 0;
  unint64_t v70 = 0xE000000000000000;
  _StringGuts.grow(_:)(30);
  swift_bridgeObjectRelease();
  uint64_t v19 = *(void *)&v2[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore_database];
  type metadata accessor for SQLTransaction();
  uint64_t v20 = swift_initStackObject();
  *(void *)(v20 + 16) = v19;
  *(unsigned char *)(v20 + 24) = 0;
  swift_retain();
  uint64_t v21 = v66;
  sub_10079EF08();
  if (v21) {
    return swift_release();
  }
  uint64_t v60 = v18;
  type metadata accessor for SQLiteStatement();
  swift_initStackObject();
  uint64_t v22 = swift_retain();
  uint64_t v23 = sub_10079FC40(v22, 0xD000000000000061, 0x8000000101281170);
  uint64_t v66 = 0;
  uint64_t v24 = v23;
  swift_release();
  Swift::String v25 = *(void **)(*(void *)(v24 + 16) + 32);
  *uint64_t v8 = v25;
  uint64_t v26 = v63;
  v68(v8, v67, v63);
  id v27 = v25;
  LOBYTE(v25) = _dispatchPreconditionTest(_:)();
  uint64_t v28 = v26;
  Swift::String v29 = v65;
  v65(v8, v28);
  if ((v25 & 1) == 0)
  {
    __break(1u);
    goto LABEL_28;
  }
  uint64_t v58 = (sqlite3_stmt **)(v24 + 24);
  swift_beginAccess();
  int v30 = sqlite3_step(*(sqlite3_stmt **)(v24 + 24));
  uint64_t v59 = v24;
  if (v30 != 101)
  {
LABEL_12:
    int v40 = v30;
    sub_10079FF00();
    uint64_t v41 = swift_allocError();
    *(_DWORD *)uint64_t v42 = v40;
    *(void *)(v42 + 8) = 0xD00000000000003DLL;
    *(void *)(v42 + 16) = 0x80000001012811E0;
    uint64_t v66 = v41;
    swift_willThrow();
    Swift::String v43 = *(void **)(*(void *)(v24 + 16) + 32);
    *uint64_t v8 = v43;
    uint64_t v44 = v63;
    v68(v8, v67, v63);
    id v45 = v43;
    LOBYTE(v43) = _dispatchPreconditionTest(_:)();
    v29(v8, v44);
    if (v43) {
      goto LABEL_13;
    }
    goto LABEL_29;
  }
  uint64_t v32 = v63;
  Swift::String v31 = v64;
  *uint64_t v8 = v64;
  v68(v8, v67, v32);
  id v33 = v31;
  Swift::String v34 = v2;
  LOBYTE(v31) = _dispatchPreconditionTest(_:)();
  uint64_t v35 = v32;
  Swift::String v29 = v65;
  v65(v8, v35);

  if ((v31 & 1) == 0)
  {
LABEL_28:
    __break(1u);
LABEL_29:
    __break(1u);
LABEL_30:
    __break(1u);
  }
  uint64_t v36 = v66;
  sub_10093F9E0(4);
  uint64_t v66 = v36;
  if (v36)
  {
    Swift::String v37 = *(void **)(*(void *)(v59 + 16) + 32);
    *uint64_t v8 = v37;
    uint64_t v38 = v63;
    v68(v8, v67, v63);
    id v39 = v37;
    LOBYTE(v37) = _dispatchPreconditionTest(_:)();
    int v30 = ((uint64_t (*)(void *, uint64_t))v29)(v8, v38);
    if (v37)
    {
LABEL_13:
      if (*v58)
      {
        sqlite3_finalize(*v58);
        *(void *)(v59 + 24) = 0;
      }
      swift_release();
      sub_10079F70C();
      swift_willThrow();
LABEL_16:
      swift_setDeallocating();
      return swift_release();
    }
    __break(1u);
    goto LABEL_12;
  }
  Swift::String v46 = *(void **)(*(void *)(v59 + 16) + 32);
  *uint64_t v8 = v46;
  Swift::String v47 = v29;
  uint64_t v48 = v63;
  v68(v8, v67, v63);
  id v49 = v46;
  LOBYTE(v46) = _dispatchPreconditionTest(_:)();
  v47(v8, v48);
  if ((v46 & 1) == 0) {
    goto LABEL_30;
  }
  unint64_t v50 = v58;
  if (*v58)
  {
    sqlite3_finalize(*v58);
    *unint64_t v50 = 0;
  }
  swift_release();
  uint64_t v51 = v66;
  sub_10079F3C8();
  if (v51) {
    goto LABEL_16;
  }
  unsigned __int8 v52 = sub_10093F05C();
  uint64_t v17 = swift_initStackObject();
  *(_OWORD *)(v17 + 16) = v61;
  *(void *)(v17 + 32) = v52;
  *(void *)(v17 + 56) = &type metadata for Int;
  *(void *)(v17 + 96) = &type metadata for Int;
  *(void *)(v17 + 104) = &protocol witness table for Int;
  *(void *)(v17 + 64) = &protocol witness table for Int;
  *(void *)(v17 + 72) = 4;
  if (v52 != 4)
  {
    while (1)
    {
      sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"_migrateToOptimizedSubtreeQuerySchema()", 39, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLBoardDataStore.swift", 89, 2, 418, (uint64_t)"Queried schema version %{public}d after migration to %{public}d is unexpected", 77, 2u, v17);
      sub_100586FD4(v17, (uint64_t)"Queried schema version %{public}d after migration to %{public}d is unexpected");
      uint64_t v53 = v17;
      uint64_t v54 = 418;
LABEL_32:
      sub_1005871AC(v53, (uint64_t)"_migrateToOptimizedSubtreeQuerySchema()", 39, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLBoardDataStore.swift", 89, 2, v54);
      SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v55, v56);
      _assertionFailure(_:_:file:line:flags:)();
      __break(1u);
    }
  }
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_setDeallocating();
  return swift_release();
}

uint64_t sub_100C3D16C()
{
  uint64_t v2 = type metadata accessor for DispatchPredicate();
  uint64_t v3 = *(void *)(v2 - 8);
  __n128 v5 = __chkstk_darwin(v2, v4);
  uint64_t v7 = (void (**)(void *, uint64_t, uint64_t))((char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform17CRLBoardDataStore_queue);
  *uint64_t v7 = v8;
  uint64_t v9 = enum case for DispatchPredicate.onQueue(_:);
  uint64_t v36 = *(void (**)(void *, uint64_t, uint64_t))(v3 + 104);
  ((void (*)(void *, void, uint64_t, __n128))v36)(v7, enum case for DispatchPredicate.onQueue(_:), v2, v5);
  id v10 = v8;
  LOBYTE(v8) = _dispatchPreconditionTest(_:)();
  Swift::String v37 = *(void (**)(void *, uint64_t))(v3 + 8);
  v37(v7, v2);
  if (v8)
  {
    if (qword_10166FB70 == -1) {
      goto LABEL_3;
    }
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  swift_beginAccess();
  id v11 = (id)static OS_os_log.boardStore;
  uint64_t v12 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v11, (uint64_t)&_mh_execute_header, v12, (uint64_t)"Adding MinRequiredVersionForGoodEnoughFidelity to the boards table", 66, 2, (uint64_t)_swiftEmptyArrayStorage);

  uint64_t v39 = 0;
  unint64_t v40 = 0xE000000000000000;
  _StringGuts.grow(_:)(57);
  v13._countAndFlagsBits = 0x4154205245544C41;
  v13._object = (void *)0xEC00000020454C42;
  String.append(_:)(v13);
  v14._countAndFlagsBits = 0x736472616F62;
  v14._object = (void *)0xE600000000000000;
  String.append(_:)(v14);
  v15._countAndFlagsBits = 0x4C4F43204444410ALL;
  v15._object = (void *)0xEC000000204E4D55;
  String.append(_:)(v15);
  v16._countAndFlagsBits = 0xD00000000000002DLL;
  v16._object = (void *)0x800000010127BD60;
  String.append(_:)(v16);
  v17._object = (void *)0x8000000101280DA0;
  v17._countAndFlagsBits = 0xD00000000000001ALL;
  String.append(_:)(v17);
  uint64_t v38 = 0x2000400000000;
  v18._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v18);
  swift_bridgeObjectRelease();
  v19._countAndFlagsBits = 59;
  v19._object = (void *)0xE100000000000000;
  String.append(_:)(v19);
  uint64_t v20 = v39;
  uint64_t v21 = v40;
  type metadata accessor for SQLiteStatement();
  swift_initStackObject();
  uint64_t v22 = swift_retain();
  uint64_t v23 = sub_10079FC40(v22, v20, v21);
  uint64_t result = swift_release();
  if (v1) {
    return result;
  }
  Swift::String v25 = *(void **)(*(void *)(v23 + 16) + 32);
  *uint64_t v7 = v25;
  v36(v7, v9, v2);
  id v26 = v25;
  LOBYTE(v25) = _dispatchPreconditionTest(_:)();
  v37(v7, v2);
  if ((v25 & 1) == 0)
  {
    __break(1u);
    goto LABEL_16;
  }
  id v27 = (sqlite3_stmt **)(v23 + 24);
  swift_beginAccess();
  int v28 = sqlite3_step(*(sqlite3_stmt **)(v23 + 24));
  if (v28 != 101)
  {
LABEL_8:
    int v31 = v28;
    sub_10079FF00();
    swift_allocError();
    *(_DWORD *)uint64_t v32 = v31;
    *(void *)(v32 + 8) = 0xD000000000000020;
    *(void *)(v32 + 16) = 0x8000000101280FD0;
    swift_willThrow();
    id v33 = *(void **)(*(void *)(v23 + 16) + 32);
    *uint64_t v7 = v33;
    v36(v7, v9, v2);
    id v34 = v33;
    char v35 = _dispatchPreconditionTest(_:)();
    v37(v7, v2);
    if (v35) {
      goto LABEL_9;
    }
LABEL_16:
    __break(1u);
  }
  Swift::String v29 = *(void **)(*(void *)(v23 + 16) + 32);
  *uint64_t v7 = v29;
  v36(v7, v9, v2);
  id v30 = v29;
  uint64_t v9 = _dispatchPreconditionTest(_:)();
  int v28 = ((uint64_t (*)(void *, uint64_t))v37)(v7, v2);
  if ((v9 & 1) == 0)
  {
    __break(1u);
    goto LABEL_8;
  }
LABEL_9:
  if (*v27)
  {
    sqlite3_finalize(*v27);
    *id v27 = 0;
  }
  return swift_release();
}

uint64_t sub_100C3D640()
{
  uint64_t v2 = type metadata accessor for DispatchPredicate();
  uint64_t v3 = *(void *)(v2 - 8);
  __n128 v5 = __chkstk_darwin(v2, v4);
  uint64_t v7 = (void (**)(void *, uint64_t, uint64_t))((char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform17CRLBoardDataStore_queue);
  *uint64_t v7 = v8;
  uint64_t v9 = enum case for DispatchPredicate.onQueue(_:);
  uint64_t v36 = *(void (**)(void *, uint64_t, uint64_t))(v3 + 104);
  ((void (*)(void *, void, uint64_t, __n128))v36)(v7, enum case for DispatchPredicate.onQueue(_:), v2, v5);
  id v10 = v8;
  LOBYTE(v8) = _dispatchPreconditionTest(_:)();
  Swift::String v37 = *(void (**)(void *, uint64_t))(v3 + 8);
  v37(v7, v2);
  if (v8)
  {
    if (qword_10166FB70 == -1) {
      goto LABEL_3;
    }
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  swift_beginAccess();
  id v11 = (id)static OS_os_log.boardStore;
  uint64_t v12 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v11, (uint64_t)&_mh_execute_header, v12, (uint64_t)"Adding MinRequiredVersionForGoodEnoughFidelity to the board items table", 71, 2, (uint64_t)_swiftEmptyArrayStorage);

  uint64_t v39 = 0;
  unint64_t v40 = 0xE000000000000000;
  _StringGuts.grow(_:)(57);
  v13._countAndFlagsBits = 0x4154205245544C41;
  v13._object = (void *)0xEC00000020454C42;
  String.append(_:)(v13);
  v14._countAndFlagsBits = 0x74695F6472616F62;
  v14._object = (void *)0xEB00000000736D65;
  String.append(_:)(v14);
  v15._countAndFlagsBits = 0x4C4F43204444410ALL;
  v15._object = (void *)0xEC000000204E4D55;
  String.append(_:)(v15);
  v16._countAndFlagsBits = 0xD00000000000002DLL;
  v16._object = (void *)0x800000010127BD60;
  String.append(_:)(v16);
  v17._object = (void *)0x8000000101280DA0;
  v17._countAndFlagsBits = 0xD00000000000001ALL;
  String.append(_:)(v17);
  uint64_t v38 = 0x2000400000000;
  v18._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v18);
  swift_bridgeObjectRelease();
  v19._countAndFlagsBits = 59;
  v19._object = (void *)0xE100000000000000;
  String.append(_:)(v19);
  uint64_t v20 = v39;
  uint64_t v21 = v40;
  type metadata accessor for SQLiteStatement();
  swift_initStackObject();
  uint64_t v22 = swift_retain();
  uint64_t v23 = sub_10079FC40(v22, v20, v21);
  uint64_t result = swift_release();
  if (v1) {
    return result;
  }
  Swift::String v25 = *(void **)(*(void *)(v23 + 16) + 32);
  *uint64_t v7 = v25;
  v36(v7, v9, v2);
  id v26 = v25;
  LOBYTE(v25) = _dispatchPreconditionTest(_:)();
  v37(v7, v2);
  if ((v25 & 1) == 0)
  {
    __break(1u);
    goto LABEL_16;
  }
  id v27 = (sqlite3_stmt **)(v23 + 24);
  swift_beginAccess();
  int v28 = sqlite3_step(*(sqlite3_stmt **)(v23 + 24));
  if (v28 != 101)
  {
LABEL_8:
    int v31 = v28;
    sub_10079FF00();
    swift_allocError();
    *(_DWORD *)uint64_t v32 = v31;
    *(void *)(v32 + 8) = 0xD000000000000025;
    *(void *)(v32 + 16) = 0x8000000101280F50;
    swift_willThrow();
    id v33 = *(void **)(*(void *)(v23 + 16) + 32);
    *uint64_t v7 = v33;
    v36(v7, v9, v2);
    id v34 = v33;
    char v35 = _dispatchPreconditionTest(_:)();
    v37(v7, v2);
    if (v35) {
      goto LABEL_9;
    }
LABEL_16:
    __break(1u);
  }
  Swift::String v29 = *(void **)(*(void *)(v23 + 16) + 32);
  *uint64_t v7 = v29;
  v36(v7, v9, v2);
  id v30 = v29;
  uint64_t v9 = _dispatchPreconditionTest(_:)();
  int v28 = ((uint64_t (*)(void *, uint64_t))v37)(v7, v2);
  if ((v9 & 1) == 0)
  {
    __break(1u);
    goto LABEL_8;
  }
LABEL_9:
  if (*v27)
  {
    sqlite3_finalize(*v27);
    *id v27 = 0;
  }
  return swift_release();
}

uint64_t sub_100C3DB20()
{
  uint64_t v2 = type metadata accessor for DispatchPredicate();
  uint64_t v3 = *(void *)(v2 - 8);
  __n128 v5 = __chkstk_darwin(v2, v4);
  uint64_t v7 = (void (**)(void *, uint64_t, uint64_t))((char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform17CRLBoardDataStore_queue);
  *uint64_t v7 = v8;
  uint64_t v9 = enum case for DispatchPredicate.onQueue(_:);
  uint64_t v36 = *(void (**)(void *, uint64_t, uint64_t))(v3 + 104);
  ((void (*)(void *, void, uint64_t, __n128))v36)(v7, enum case for DispatchPredicate.onQueue(_:), v2, v5);
  id v10 = v8;
  LOBYTE(v8) = _dispatchPreconditionTest(_:)();
  Swift::String v37 = *(void (**)(void *, uint64_t))(v3 + 8);
  v37(v7, v2);
  if (v8)
  {
    if (qword_10166FB70 == -1) {
      goto LABEL_3;
    }
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  swift_beginAccess();
  id v11 = (id)static OS_os_log.boardStore;
  uint64_t v12 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v11, (uint64_t)&_mh_execute_header, v12, (uint64_t)"Adding MinRequiredVersionForGoodEnoughFidelityForBucket to the freehand drawing buckets table", 93, 2, (uint64_t)_swiftEmptyArrayStorage);

  uint64_t v39 = 0;
  unint64_t v40 = 0xE000000000000000;
  _StringGuts.grow(_:)(57);
  v13._countAndFlagsBits = 0x4154205245544C41;
  v13._object = (void *)0xEC00000020454C42;
  String.append(_:)(v13);
  v14._object = (void *)0x800000010127BF60;
  v14._countAndFlagsBits = 0xD000000000000018;
  String.append(_:)(v14);
  v15._countAndFlagsBits = 0x4C4F43204444410ALL;
  v15._object = (void *)0xEC000000204E4D55;
  String.append(_:)(v15);
  v16._countAndFlagsBits = 0xD000000000000038;
  v16._object = (void *)0x800000010127C040;
  String.append(_:)(v16);
  v17._countAndFlagsBits = 0xD00000000000001ALL;
  v17._object = (void *)0x8000000101280DA0;
  String.append(_:)(v17);
  uint64_t v38 = 0x2000400000000;
  v18._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v18);
  swift_bridgeObjectRelease();
  v19._countAndFlagsBits = 59;
  v19._object = (void *)0xE100000000000000;
  String.append(_:)(v19);
  uint64_t v20 = v39;
  uint64_t v21 = v40;
  type metadata accessor for SQLiteStatement();
  swift_initStackObject();
  uint64_t v22 = swift_retain();
  uint64_t v23 = sub_10079FC40(v22, v20, v21);
  uint64_t result = swift_release();
  if (v1) {
    return result;
  }
  Swift::String v25 = *(void **)(*(void *)(v23 + 16) + 32);
  *uint64_t v7 = v25;
  v36(v7, v9, v2);
  id v26 = v25;
  LOBYTE(v25) = _dispatchPreconditionTest(_:)();
  v37(v7, v2);
  if ((v25 & 1) == 0)
  {
    __break(1u);
    goto LABEL_16;
  }
  id v27 = (sqlite3_stmt **)(v23 + 24);
  swift_beginAccess();
  int v28 = sqlite3_step(*(sqlite3_stmt **)(v23 + 24));
  if (v28 != 101)
  {
LABEL_8:
    int v31 = v28;
    sub_10079FF00();
    swift_allocError();
    *(_DWORD *)uint64_t v32 = v31;
    *(void *)(v32 + 8) = 0xD000000000000065;
    *(void *)(v32 + 16) = 0x8000000101280E90;
    swift_willThrow();
    id v33 = *(void **)(*(void *)(v23 + 16) + 32);
    *uint64_t v7 = v33;
    v36(v7, v9, v2);
    id v34 = v33;
    char v35 = _dispatchPreconditionTest(_:)();
    v37(v7, v2);
    if (v35) {
      goto LABEL_9;
    }
LABEL_16:
    __break(1u);
  }
  Swift::String v29 = *(void **)(*(void *)(v23 + 16) + 32);
  *uint64_t v7 = v29;
  v36(v7, v9, v2);
  id v30 = v29;
  uint64_t v9 = _dispatchPreconditionTest(_:)();
  int v28 = ((uint64_t (*)(void *, uint64_t))v37)(v7, v2);
  if ((v9 & 1) == 0)
  {
    __break(1u);
    goto LABEL_8;
  }
LABEL_9:
  if (*v27)
  {
    sqlite3_finalize(*v27);
    *id v27 = 0;
  }
  return swift_release();
}

uint64_t sub_100C3DFF8()
{
  uint64_t v2 = type metadata accessor for DispatchPredicate();
  uint64_t v3 = *(void *)(v2 - 8);
  __n128 v5 = __chkstk_darwin(v2, v4);
  uint64_t v7 = (void (**)(void *, uint64_t, uint64_t))((char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform17CRLBoardDataStore_queue);
  *uint64_t v7 = v8;
  uint64_t v9 = enum case for DispatchPredicate.onQueue(_:);
  uint64_t v36 = *(void (**)(void *, uint64_t, uint64_t))(v3 + 104);
  ((void (*)(void *, void, uint64_t, __n128))v36)(v7, enum case for DispatchPredicate.onQueue(_:), v2, v5);
  id v10 = v8;
  LOBYTE(v8) = _dispatchPreconditionTest(_:)();
  Swift::String v37 = *(void (**)(void *, uint64_t))(v3 + 8);
  v37(v7, v2);
  if (v8)
  {
    if (qword_10166FB70 == -1) {
      goto LABEL_3;
    }
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  swift_beginAccess();
  id v11 = (id)static OS_os_log.boardStore;
  uint64_t v12 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v11, (uint64_t)&_mh_execute_header, v12, (uint64_t)"Adding MinRequiredVersionForGoodEnoughFidelityForItems to the freehand drawing buckets table", 92, 2, (uint64_t)_swiftEmptyArrayStorage);

  uint64_t v39 = 0;
  unint64_t v40 = 0xE000000000000000;
  _StringGuts.grow(_:)(57);
  v13._countAndFlagsBits = 0x4154205245544C41;
  v13._object = (void *)0xEC00000020454C42;
  String.append(_:)(v13);
  v14._object = (void *)0x800000010127BF60;
  v14._countAndFlagsBits = 0xD000000000000018;
  String.append(_:)(v14);
  v15._countAndFlagsBits = 0x4C4F43204444410ALL;
  v15._object = (void *)0xEC000000204E4D55;
  String.append(_:)(v15);
  v16._countAndFlagsBits = 0xD000000000000037;
  v16._object = (void *)0x800000010127C080;
  String.append(_:)(v16);
  v17._countAndFlagsBits = 0xD00000000000001ALL;
  v17._object = (void *)0x8000000101280DA0;
  String.append(_:)(v17);
  uint64_t v38 = 0x2000400000000;
  v18._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v18);
  swift_bridgeObjectRelease();
  v19._countAndFlagsBits = 59;
  v19._object = (void *)0xE100000000000000;
  String.append(_:)(v19);
  uint64_t v20 = v39;
  uint64_t v21 = v40;
  type metadata accessor for SQLiteStatement();
  swift_initStackObject();
  uint64_t v22 = swift_retain();
  uint64_t v23 = sub_10079FC40(v22, v20, v21);
  uint64_t result = swift_release();
  if (v1) {
    return result;
  }
  Swift::String v25 = *(void **)(*(void *)(v23 + 16) + 32);
  *uint64_t v7 = v25;
  v36(v7, v9, v2);
  id v26 = v25;
  LOBYTE(v25) = _dispatchPreconditionTest(_:)();
  v37(v7, v2);
  if ((v25 & 1) == 0)
  {
    __break(1u);
    goto LABEL_16;
  }
  id v27 = (sqlite3_stmt **)(v23 + 24);
  swift_beginAccess();
  int v28 = sqlite3_step(*(sqlite3_stmt **)(v23 + 24));
  if (v28 != 101)
  {
LABEL_8:
    int v31 = v28;
    sub_10079FF00();
    swift_allocError();
    *(_DWORD *)uint64_t v32 = v31;
    *(void *)(v32 + 8) = 0xD000000000000064;
    *(void *)(v32 + 16) = 0x8000000101280DC0;
    swift_willThrow();
    id v33 = *(void **)(*(void *)(v23 + 16) + 32);
    *uint64_t v7 = v33;
    v36(v7, v9, v2);
    id v34 = v33;
    char v35 = _dispatchPreconditionTest(_:)();
    v37(v7, v2);
    if (v35) {
      goto LABEL_9;
    }
LABEL_16:
    __break(1u);
  }
  Swift::String v29 = *(void **)(*(void *)(v23 + 16) + 32);
  *uint64_t v7 = v29;
  v36(v7, v9, v2);
  id v30 = v29;
  uint64_t v9 = _dispatchPreconditionTest(_:)();
  int v28 = ((uint64_t (*)(void *, uint64_t))v37)(v7, v2);
  if ((v9 & 1) == 0)
  {
    __break(1u);
    goto LABEL_8;
  }
LABEL_9:
  if (*v27)
  {
    sqlite3_finalize(*v27);
    *id v27 = 0;
  }
  return swift_release();
}

uint64_t sub_100C3E4D0()
{
  uint64_t v2 = type metadata accessor for DispatchPredicate();
  uint64_t v3 = *(void *)(v2 - 8);
  __n128 v5 = __chkstk_darwin(v2, v4);
  uint64_t v7 = (uint64_t *)((char *)&v91 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform17CRLBoardDataStore_queue);
  *uint64_t v7 = v8;
  uint64_t v10 = v3 + 104;
  uint64_t v9 = *(void (**)(void, __n128))(v3 + 104);
  unsigned int v96 = enum case for DispatchPredicate.onQueue(_:);
  uint64_t v97 = (void (*)(void *, void, uint64_t))v9;
  v9(v7, v5);
  id v11 = v8;
  LOBYTE(v8) = _dispatchPreconditionTest(_:)();
  Swift::String v14 = *(void (**)(void *, uint64_t))(v3 + 8);
  uint64_t v12 = v3 + 8;
  Swift::String v13 = v14;
  uint64_t v95 = v7;
  v14(v7, v2);
  if (v8)
  {
    uint64_t v99 = v0;
    uint64_t v100 = v1;
    uint64_t v91 = v10;
    Swift::String v92 = v13;
    uint64_t v93 = v12;
    uint64_t v94 = v2;
    if (qword_10166FB70 == -1) {
      goto LABEL_3;
    }
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  swift_beginAccess();
  id v15 = (id)static OS_os_log.boardStore;
  uint64_t v16 = static os_log_type_t.info.getter();
  sub_100BAC898((uint64_t)v15, (uint64_t)&_mh_execute_header, v16, (uint64_t)"Creating schema for the boards table", 36, 2, (uint64_t)_swiftEmptyArrayStorage);

  uint64_t v101 = 0;
  unint64_t v102 = 0xE000000000000000;
  _StringGuts.grow(_:)(479);
  v17._countAndFlagsBits = 0x5420455441455243;
  v17._object = (void *)0xED000020454C4241;
  String.append(_:)(v17);
  v18._countAndFlagsBits = 0x736472616F62;
  v18._object = (void *)0xE600000000000000;
  String.append(_:)(v18);
  v19._countAndFlagsBits = 10272;
  v19._object = (void *)0xE200000000000000;
  String.append(_:)(v19);
  v20._countAndFlagsBits = 0xD000000000000010;
  v20._object = (void *)0x8000000101262BA0;
  String.append(_:)(v20);
  v21._countAndFlagsBits = 0xD00000000000001CLL;
  v21._object = (void *)0x8000000101263280;
  String.append(_:)(v21);
  v22._object = (void *)0xEA0000000000656DLL;
  v22._countAndFlagsBits = 0x616E5F72656E776FLL;
  String.append(_:)(v22);
  v23._object = (void *)0x80000001012804D0;
  v23._countAndFlagsBits = 0xD000000000000010;
  String.append(_:)(v23);
  v24._countAndFlagsBits = 0x656E6961746E6F63;
  v24._object = (void *)0xEE00646975755F72;
  String.append(_:)(v24);
  v25._countAndFlagsBits = 0xD000000000000010;
  v25._object = (void *)0x8000000101280420;
  String.append(_:)(v25);
  v26._object = (void *)0x800000010127B9A0;
  unint64_t v98 = (void *)0x800000010127B9A0;
  v26._countAndFlagsBits = 0xD000000000000018;
  String.append(_:)(v26);
  v27._countAndFlagsBits = 0xD000000000000010;
  v27._object = (void *)0x8000000101280420;
  String.append(_:)(v27);
  v28._countAndFlagsBits = 1635017060;
  v28._object = (void *)0xE400000000000000;
  String.append(_:)(v28);
  v29._countAndFlagsBits = 0x202C424F4C4220;
  v29._object = (void *)0xE700000000000000;
  String.append(_:)(v29);
  v30._countAndFlagsBits = 0xD000000000000012;
  v30._object = (void *)0x800000010127BDD0;
  String.append(_:)(v30);
  v31._countAndFlagsBits = 0x202C4C41455220;
  v31._object = (void *)0xE700000000000000;
  String.append(_:)(v31);
  v32._countAndFlagsBits = 0x6E6F7473626D6F74;
  v32._object = (void *)0xEA00000000006465;
  String.append(_:)(v32);
  v33._countAndFlagsBits = 0xD000000000000013;
  v33._object = (void *)0x80000001012804F0;
  String.append(_:)(v33);
  v34._object = (void *)0x800000010127B8B0;
  v34._countAndFlagsBits = 0xD000000000000010;
  String.append(_:)(v34);
  v35._countAndFlagsBits = 0xD00000000000001DLL;
  v35._object = (void *)0x80000001012807E0;
  String.append(_:)(v35);
  v36._object = (void *)0x800000010127BD90;
  v36._countAndFlagsBits = 0xD000000000000018;
  String.append(_:)(v36);
  v37._object = (void *)0x8000000101280BA0;
  v37._countAndFlagsBits = 0xD000000000000014;
  String.append(_:)(v37);
  v38._object = (void *)0xE900000000000061;
  v38._countAndFlagsBits = 0x7461645F636E7973;
  String.append(_:)(v38);
  v39._countAndFlagsBits = 0x202C424F4C4220;
  v39._object = (void *)0xE700000000000000;
  String.append(_:)(v39);
  v40._countAndFlagsBits = 0x6E6F7473626D6F74;
  v40._object = (void *)0xEE00657461645F65;
  String.append(_:)(v40);
  v41._countAndFlagsBits = 0x202C4C41455220;
  v41._object = (void *)0xE700000000000000;
  String.append(_:)(v41);
  v42._countAndFlagsBits = 0xD00000000000001ALL;
  v42._object = (void *)0x800000010127BDB0;
  String.append(_:)(v42);
  v43._countAndFlagsBits = 0xD000000000000013;
  v43._object = (void *)0x80000001012804F0;
  String.append(_:)(v43);
  v44._countAndFlagsBits = 0x5F65726168736B63;
  v44._object = (void *)0xEC00000061746164;
  String.append(_:)(v44);
  v45._countAndFlagsBits = 0x202C424F4C4220;
  v45._object = (void *)0xE700000000000000;
  String.append(_:)(v45);
  v46._object = (void *)0x800000010127BB50;
  v46._countAndFlagsBits = 0xD000000000000014;
  String.append(_:)(v46);
  v47._countAndFlagsBits = 0xD00000000000001DLL;
  v47._object = (void *)0x80000001012807E0;
  String.append(_:)(v47);
  v48._countAndFlagsBits = 0x61637369645F7369;
  v48._object = (void *)0xEE00656C62616472;
  String.append(_:)(v48);
  v49._countAndFlagsBits = 0xD000000000000020;
  v49._object = (void *)0x8000000101280BC0;
  String.append(_:)(v49);
  v50._countAndFlagsBits = 0x656E6961746E6F63;
  v50._object = (void *)0xEE00646975755F72;
  String.append(_:)(v50);
  v51._countAndFlagsBits = 8236;
  v51._object = (void *)0xE200000000000000;
  String.append(_:)(v51);
  v52._countAndFlagsBits = 0xD000000000000010;
  v52._object = (void *)0x8000000101262BA0;
  String.append(_:)(v52);
  v53._countAndFlagsBits = 0x4552454645522029;
  v53._object = (void *)0xED0000205345434ELL;
  String.append(_:)(v53);
  v54._countAndFlagsBits = 0x74695F6472616F62;
  v54._object = (void *)0xEB00000000736D65;
  String.append(_:)(v54);
  v55._countAndFlagsBits = 10272;
  v55._object = (void *)0xE200000000000000;
  String.append(_:)(v55);
  v56._countAndFlagsBits = 0x6975755F6D657469;
  v56._object = (void *)0xE900000000000064;
  String.append(_:)(v56);
  v57._countAndFlagsBits = 8236;
  v57._object = (void *)0xE200000000000000;
  String.append(_:)(v57);
  v58._countAndFlagsBits = 0xD000000000000010;
  v58._object = (void *)0x8000000101262BA0;
  String.append(_:)(v58);
  v59._countAndFlagsBits = 0xD000000000000040;
  v59._object = (void *)0x8000000101280BF0;
  String.append(_:)(v59);
  v60._countAndFlagsBits = 0xD000000000000018;
  v60._object = v98;
  String.append(_:)(v60);
  v61._countAndFlagsBits = 8236;
  v61._object = (void *)0xE200000000000000;
  String.append(_:)(v61);
  v62._countAndFlagsBits = 0xD000000000000010;
  v62._object = (void *)0x8000000101262BA0;
  String.append(_:)(v62);
  v63._countAndFlagsBits = 0x4552454645522029;
  v63._object = (void *)0xED0000205345434ELL;
  String.append(_:)(v63);
  v64._countAndFlagsBits = 0x74695F6472616F62;
  v64._object = (void *)0xEB00000000736D65;
  String.append(_:)(v64);
  v65._countAndFlagsBits = 10272;
  v65._object = (void *)0xE200000000000000;
  String.append(_:)(v65);
  v66._countAndFlagsBits = 0x6975755F6D657469;
  v66._object = (void *)0xE900000000000064;
  String.append(_:)(v66);
  v67._countAndFlagsBits = 8236;
  v67._object = (void *)0xE200000000000000;
  String.append(_:)(v67);
  v68._countAndFlagsBits = 0xD000000000000010;
  v68._object = (void *)0x8000000101262BA0;
  String.append(_:)(v68);
  v69._countAndFlagsBits = 0xD000000000000033;
  v69._object = (void *)0x8000000101280C40;
  String.append(_:)(v69);
  uint64_t v70 = v101;
  uint64_t v71 = v102;
  type metadata accessor for SQLiteStatement();
  swift_initStackObject();
  uint64_t v72 = swift_retain();
  uint64_t v73 = v100;
  uint64_t v74 = sub_10079FC40(v72, v70, v71);
  uint64_t result = swift_release();
  if (v73) {
    return result;
  }
  uint64_t v76 = *(void **)(*(void *)(v74 + 16) + 32);
  uint64_t v78 = v94;
  uint64_t v77 = v95;
  *uint64_t v95 = v76;
  v97(v77, v96, v78);
  id v79 = v76;
  LOBYTE(v76) = _dispatchPreconditionTest(_:)();
  id v80 = (uint64_t (*)(unint64_t, uint64_t))v92;
  v92(v77, v78);
  if ((v76 & 1) == 0)
  {
    __break(1u);
    goto LABEL_16;
  }
  unint64_t v81 = 0xD000000000000010;
  uint64_t v82 = (sqlite3_stmt **)(v74 + 24);
  swift_beginAccess();
  int v83 = sqlite3_step(*(sqlite3_stmt **)(v74 + 24));
  if (v83 != 101)
  {
LABEL_8:
    int v86 = v83;
    sub_10079FF00();
    swift_allocError();
    *(_DWORD *)uint64_t v87 = v86;
    *(void *)(v87 + 8) = v81 + 17;
    *(void *)(v87 + 16) = 0x8000000101280C80;
    swift_willThrow();
    unsigned __int8 v88 = *(void **)(*(void *)(v74 + 16) + 32);
    uint64_t v89 = v95;
    *uint64_t v95 = v88;
    v97(v89, v96, v78);
    id v90 = v88;
    LOBYTE(v88) = _dispatchPreconditionTest(_:)();
    v80((unint64_t)v89, v78);
    if (v88) {
      goto LABEL_9;
    }
LABEL_16:
    __break(1u);
  }
  uint64_t v84 = *(void **)(*(void *)(v74 + 16) + 32);
  unint64_t v81 = (unint64_t)v95;
  *uint64_t v95 = v84;
  v97((void *)v81, v96, v78);
  id v85 = v84;
  LOBYTE(v84) = _dispatchPreconditionTest(_:)();
  int v83 = v80(v81, v78);
  if ((v84 & 1) == 0)
  {
    __break(1u);
    goto LABEL_8;
  }
LABEL_9:
  if (*v82)
  {
    sqlite3_finalize(*v82);
    *uint64_t v82 = 0;
  }
  return swift_release();
}

uint64_t sub_100C3EE00()
{
  uint64_t v2 = type metadata accessor for DispatchPredicate();
  uint64_t v3 = *(void *)(v2 - 8);
  __n128 v5 = __chkstk_darwin(v2, v4);
  uint64_t v7 = (void (**)(void *, uint64_t))((char *)&v55 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform17CRLBoardDataStore_queue);
  *uint64_t v7 = v8;
  uint64_t v9 = *(void (**)(void, __n128))(v3 + 104);
  unsigned int v57 = enum case for DispatchPredicate.onQueue(_:);
  Swift::String v58 = (void (*)(void *, void, uint64_t))v9;
  uint64_t v59 = v3 + 104;
  v9(v7, v5);
  id v10 = v8;
  LOBYTE(v8) = _dispatchPreconditionTest(_:)();
  id v11 = *(void (**)(void *, uint64_t))(v3 + 8);
  v11(v7, v2);
  if (v8)
  {
    Swift::String v55 = v11;
    uint64_t v56 = v2;
    if (qword_10166FB70 == -1) {
      goto LABEL_3;
    }
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  uint64_t v12 = 0xD000000000000010;
  swift_beginAccess();
  id v13 = (id)static OS_os_log.boardStore;
  uint64_t v14 = static os_log_type_t.info.getter();
  sub_100BAC898((uint64_t)v13, (uint64_t)&_mh_execute_header, v14, (uint64_t)"Creating schema for the boards metadata table", 45, 2, (uint64_t)_swiftEmptyArrayStorage);

  uint64_t v60 = 0;
  unint64_t v61 = 0xE000000000000000;
  _StringGuts.grow(_:)(236);
  v15._countAndFlagsBits = 0x5420455441455243;
  v15._object = (void *)0xED000020454C4241;
  String.append(_:)(v15);
  v16._countAndFlagsBits = 0x6D5F736472616F62;
  v16._object = (void *)0xEF61746164617465;
  String.append(_:)(v16);
  v17._countAndFlagsBits = 10272;
  v17._object = (void *)0xE200000000000000;
  String.append(_:)(v17);
  v18._countAndFlagsBits = 0xD000000000000010;
  v18._object = (void *)0x8000000101262BA0;
  String.append(_:)(v18);
  v19._countAndFlagsBits = 0xD000000000000026;
  v19._object = (void *)0x8000000101280B10;
  String.append(_:)(v19);
  v20._countAndFlagsBits = 0x736472616F62;
  v20._object = (void *)0xE600000000000000;
  String.append(_:)(v20);
  v21._countAndFlagsBits = 10272;
  v21._object = (void *)0xE200000000000000;
  String.append(_:)(v21);
  v22._countAndFlagsBits = 0xD000000000000010;
  v22._object = (void *)0x8000000101262BA0;
  String.append(_:)(v22);
  v23._countAndFlagsBits = 0xD000000000000015;
  v23._object = (void *)0x80000001012801D0;
  String.append(_:)(v23);
  v24._countAndFlagsBits = 0x7461645F74647263;
  v24._object = (void *)0xE900000000000061;
  String.append(_:)(v24);
  v25._countAndFlagsBits = 0xD000000000000010;
  v25._object = (void *)0x8000000101280420;
  String.append(_:)(v25);
  v26._countAndFlagsBits = 0x726F7661665F7369;
  v26._object = (void *)0xEB00000000657469;
  String.append(_:)(v26);
  v27._countAndFlagsBits = 0xD000000000000013;
  v27._object = (void *)0x80000001012804F0;
  String.append(_:)(v27);
  v28._countAndFlagsBits = 0xD00000000000001BLL;
  v28._object = (void *)0x800000010127B870;
  String.append(_:)(v28);
  v29._countAndFlagsBits = 0xD000000000000013;
  v29._object = (void *)0x80000001012804F0;
  String.append(_:)(v29);
  v30._countAndFlagsBits = 0x6174735F77656976;
  v30._object = (void *)0xEF617461645F6574;
  String.append(_:)(v30);
  v31._countAndFlagsBits = 0xD000000000000010;
  v31._object = (void *)0x8000000101280420;
  String.append(_:)(v31);
  v32._countAndFlagsBits = 0xD000000000000019;
  v32._object = (void *)0x800000010127B890;
  String.append(_:)(v32);
  v33._countAndFlagsBits = 0xD000000000000020;
  v33._object = (void *)0x80000001012632A0;
  String.append(_:)(v33);
  v34._object = (void *)0x800000010127B8B0;
  v34._countAndFlagsBits = 0xD000000000000010;
  String.append(_:)(v34);
  v35._countAndFlagsBits = 0xD00000000000001DLL;
  v35._object = (void *)0x80000001012807E0;
  String.append(_:)(v35);
  v36._countAndFlagsBits = 0x7461645F636E7973;
  v36._object = (void *)0xE900000000000061;
  String.append(_:)(v36);
  v37._countAndFlagsBits = 0x2920424F4C4220;
  v37._object = (void *)0xE700000000000000;
  String.append(_:)(v37);
  uint64_t v38 = v60;
  uint64_t v39 = v61;
  type metadata accessor for SQLiteStatement();
  swift_initStackObject();
  uint64_t v40 = swift_retain();
  uint64_t v41 = sub_10079FC40(v40, v38, v39);
  uint64_t result = swift_release();
  if (v1) {
    return result;
  }
  Swift::String v43 = *(void **)(*(void *)(v41 + 16) + 32);
  *uint64_t v7 = v43;
  uint64_t v44 = v56;
  v58(v7, v57, v56);
  id v45 = v43;
  LOBYTE(v43) = _dispatchPreconditionTest(_:)();
  Swift::String v46 = v55;
  v55(v7, v44);
  if ((v43 & 1) == 0)
  {
    __break(1u);
    goto LABEL_16;
  }
  Swift::String v47 = (sqlite3_stmt **)(v41 + 24);
  swift_beginAccess();
  int v48 = sqlite3_step(*(sqlite3_stmt **)(v41 + 24));
  if (v48 != 101)
  {
LABEL_8:
    int v51 = v48;
    sub_10079FF00();
    swift_allocError();
    *(_DWORD *)uint64_t v52 = v51;
    *(void *)(v52 + 8) = v12 + 26;
    *(void *)(v52 + 16) = 0x8000000101280B40;
    swift_willThrow();
    Swift::String v53 = *(void **)(*(void *)(v41 + 16) + 32);
    *uint64_t v7 = v53;
    v58(v7, v57, v44);
    id v54 = v53;
    LOBYTE(v53) = _dispatchPreconditionTest(_:)();
    v46(v7, v44);
    if (v53) {
      goto LABEL_9;
    }
LABEL_16:
    __break(1u);
  }
  Swift::String v49 = *(void **)(*(void *)(v41 + 16) + 32);
  *uint64_t v7 = v49;
  v58(v7, v57, v44);
  id v50 = v49;
  uint64_t v12 = _dispatchPreconditionTest(_:)();
  int v48 = ((uint64_t (*)(void *, uint64_t))v46)(v7, v44);
  if ((v12 & 1) == 0)
  {
    __break(1u);
    goto LABEL_8;
  }
LABEL_9:
  if (*v47)
  {
    sqlite3_finalize(*v47);
    *Swift::String v47 = 0;
  }
  return swift_release();
}

uint64_t sub_100C3F448()
{
  uint64_t v2 = v0;
  uint64_t v3 = type metadata accessor for DispatchPredicate();
  uint64_t v4 = *(void *)(v3 - 8);
  __n128 v6 = __chkstk_darwin(v3, v5);
  uint64_t v8 = (uint64_t (**)(void *, uint64_t))((char *)&v85 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform17CRLBoardDataStore_queue);
  *uint64_t v8 = v9;
  id v10 = *(void (**)(void, __n128))(v4 + 104);
  unsigned int v86 = enum case for DispatchPredicate.onQueue(_:);
  uint64_t v87 = (void (*)(void *, void, uint64_t))v10;
  uint64_t v88 = v4 + 104;
  v10(v8, v6);
  id v11 = v9;
  LOBYTE(v9) = _dispatchPreconditionTest(_:)();
  uint64_t v12 = *(void (**)(void *, uint64_t))(v4 + 8);
  v12(v8, v3);
  if (v9)
  {
    uint64_t v89 = v1;
    id v85 = (uint64_t (*)(void *, uint64_t))v12;
    if (qword_10166FB70 == -1) {
      goto LABEL_3;
    }
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  swift_beginAccess();
  id v13 = (id)static OS_os_log.boardStore;
  uint64_t v14 = static os_log_type_t.info.getter();
  sub_100BAC898((uint64_t)v13, (uint64_t)&_mh_execute_header, v14, (uint64_t)"Creating schema for the board items table", 41, 2, (uint64_t)_swiftEmptyArrayStorage);

  uint64_t v92 = 0;
  unint64_t v93 = 0xE000000000000000;
  _StringGuts.grow(_:)(328);
  v15._countAndFlagsBits = 0x5420455441455243;
  v15._object = (void *)0xED000020454C4241;
  String.append(_:)(v15);
  v16._countAndFlagsBits = 0x74695F6472616F62;
  v16._object = (void *)0xEB00000000736D65;
  String.append(_:)(v16);
  v17._countAndFlagsBits = 10272;
  v17._object = (void *)0xE200000000000000;
  String.append(_:)(v17);
  v18._object = (void *)0xE900000000000064;
  v18._countAndFlagsBits = 0x6975755F6D657469;
  String.append(_:)(v18);
  v19._object = (void *)0x8000000101280420;
  v19._countAndFlagsBits = 0xD000000000000010;
  String.append(_:)(v19);
  v20._countAndFlagsBits = 0x755F746E65726170;
  v20._object = (void *)0xEB00000000646975;
  String.append(_:)(v20);
  v21._countAndFlagsBits = 0x202C424F4C4220;
  v21._object = (void *)0xE700000000000000;
  String.append(_:)(v21);
  v22._countAndFlagsBits = 0xD000000000000010;
  v22._object = (void *)0x8000000101262BA0;
  String.append(_:)(v22);
  v23._countAndFlagsBits = 0xD00000000000001ALL;
  v23._object = (void *)0x80000001012801B0;
  String.append(_:)(v23);
  v24._countAndFlagsBits = 0x736472616F62;
  v24._object = (void *)0xE600000000000000;
  String.append(_:)(v24);
  v25._countAndFlagsBits = 10272;
  v25._object = (void *)0xE200000000000000;
  String.append(_:)(v25);
  v26._countAndFlagsBits = 0xD000000000000010;
  v26._object = (void *)0x8000000101262BA0;
  String.append(_:)(v26);
  v27._countAndFlagsBits = 0xD000000000000015;
  v27._object = (void *)0x80000001012801D0;
  String.append(_:)(v27);
  v28._object = (void *)0xE900000000000065;
  v28._countAndFlagsBits = 0x7079745F6D657469;
  String.append(_:)(v28);
  v29._countAndFlagsBits = 0xD000000000000013;
  v29._object = (void *)0x80000001012804F0;
  String.append(_:)(v29);
  v30._countAndFlagsBits = 0x645F6E6F6D6D6F63;
  v30._object = (void *)0xEB00000000617461;
  String.append(_:)(v30);
  v31._countAndFlagsBits = 0x202C424F4C4220;
  v31._object = (void *)0xE700000000000000;
  String.append(_:)(v31);
  v32._countAndFlagsBits = 0x6369666963657073;
  v32._object = (void *)0xED0000617461645FLL;
  String.append(_:)(v32);
  v33._countAndFlagsBits = 0x202C424F4C4220;
  v33._object = (void *)0xE700000000000000;
  String.append(_:)(v33);
  v34._countAndFlagsBits = 0x6E6F7473626D6F74;
  v34._object = (void *)0xEA00000000006465;
  String.append(_:)(v34);
  v35._countAndFlagsBits = 0xD000000000000013;
  v35._object = (void *)0x80000001012804F0;
  String.append(_:)(v35);
  v36._object = (void *)0x800000010127B8B0;
  v36._countAndFlagsBits = 0xD000000000000010;
  String.append(_:)(v36);
  v37._countAndFlagsBits = 0xD00000000000001DLL;
  v37._object = (void *)0x80000001012807E0;
  String.append(_:)(v37);
  v38._countAndFlagsBits = 0x7461645F636E7973;
  v38._object = (void *)0xE900000000000061;
  String.append(_:)(v38);
  v39._countAndFlagsBits = 0x202C424F4C4220;
  v39._object = (void *)0xE700000000000000;
  String.append(_:)(v39);
  v40._object = (void *)0x800000010127BB50;
  v40._countAndFlagsBits = 0xD000000000000014;
  String.append(_:)(v40);
  v41._countAndFlagsBits = 0xD00000000000001DLL;
  v41._object = (void *)0x80000001012807E0;
  String.append(_:)(v41);
  v42._countAndFlagsBits = 0x6F5F7463656A626FLL;
  v42._object = (void *)0xEE00736E6F697470;
  String.append(_:)(v42);
  v43._countAndFlagsBits = 0xD000000000000029;
  v43._object = (void *)0x8000000101280960;
  String.append(_:)(v43);
  v44._countAndFlagsBits = 0xD00000000000001DLL;
  v44._object = (void *)0x8000000101280920;
  String.append(_:)(v44);
  v45._countAndFlagsBits = 0x474945524F460A2CLL;
  v45._object = (void *)0xEE002059454B204ELL;
  String.append(_:)(v45);
  v46._countAndFlagsBits = 0xD00000000000001FLL;
  v46._object = (void *)0x8000000101280940;
  String.append(_:)(v46);
  v47._countAndFlagsBits = 0x4E45524546455220;
  v47._object = (void *)0xEC00000020534543;
  String.append(_:)(v47);
  v48._countAndFlagsBits = 0x74695F6472616F62;
  v48._object = (void *)0xEB00000000736D65;
  String.append(_:)(v48);
  v49._countAndFlagsBits = 32;
  v49._object = (void *)0xE100000000000000;
  String.append(_:)(v49);
  v50._countAndFlagsBits = 0xD00000000000001DLL;
  v50._object = (void *)0x8000000101280920;
  String.append(_:)(v50);
  v51._object = (void *)0x8000000101280990;
  v51._countAndFlagsBits = 0xD000000000000014;
  String.append(_:)(v51);
  uint64_t v52 = v92;
  uint64_t v53 = v93;
  uint64_t v54 = *(void *)(v2 + OBJC_IVAR____TtC8Freeform17CRLBoardDataStore_database);
  type metadata accessor for SQLiteStatement();
  swift_initStackObject();
  uint64_t v55 = swift_retain();
  uint64_t v56 = v89;
  uint64_t v57 = sub_10079FC40(v55, v52, v53);
  uint64_t result = swift_release();
  if (v56) {
    return result;
  }
  uint64_t v59 = *(void **)(*(void *)(v57 + 16) + 32);
  *uint64_t v8 = v59;
  v87(v8, v86, v3);
  id v60 = v59;
  LOBYTE(v59) = _dispatchPreconditionTest(_:)();
  unint64_t v61 = v85;
  v85(v8, v3);
  if ((v59 & 1) == 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v89 = (sqlite3_stmt **)(v57 + 24);
  swift_beginAccess();
  int v62 = sqlite3_step(*(sqlite3_stmt **)(v57 + 24));
  if (v62 != 101) {
    goto LABEL_10;
  }
  unint64_t v61 = (uint64_t (*)(void *, uint64_t))0xE000000000000000;
  uint64_t v90 = 0;
  unint64_t v91 = 0xE000000000000000;
  _StringGuts.grow(_:)(35);
  swift_bridgeObjectRelease();
  int v63 = sub_1007A0098(v54, 0xD000000000000035, 0x80000001012809E0);
  if (v63 != 101)
  {
LABEL_12:
    int v71 = v63;
    sub_10079FF00();
    swift_allocError();
    *(_DWORD *)uint64_t v72 = v71;
    *(void *)(v72 + 8) = 0xD000000000000038;
    *(void *)(v72 + 16) = 0x8000000101280A20;
    swift_willThrow();
    uint64_t v73 = *(void **)(*(void *)(v57 + 16) + 32);
    *uint64_t v8 = v73;
    v87(v8, v86, v3);
    id v74 = v73;
    LOBYTE(v73) = _dispatchPreconditionTest(_:)();
    int v64 = v85(v8, v3);
    if ((v73 & 1) == 0)
    {
      __break(1u);
LABEL_14:
      int v75 = v64;
      uint64_t v90 = 0;
      unint64_t v91 = 0xE000000000000000;
      _StringGuts.grow(_:)(68);
      v76._countAndFlagsBits = 0xD000000000000017;
      v76._object = (void *)0x80000001012808A0;
      String.append(_:)(v76);
      v77._countAndFlagsBits = 0x74695F6472616F62;
      v77._object = (void *)0xEB00000000736D65;
      String.append(_:)(v77);
      v78._countAndFlagsBits = 0xD00000000000002BLL;
      v78._object = (void *)0x8000000101280AB0;
      String.append(_:)(v78);
      uint64_t v79 = v90;
      unint64_t v80 = v91;
      sub_10079FF00();
      swift_allocError();
      *(_DWORD *)uint64_t v81 = v75;
      *(void *)(v81 + 8) = v79;
      *(void *)(v81 + 16) = v80;
      swift_willThrow();
      uint64_t v82 = *(void **)(*(void *)(v57 + 16) + 32);
      *uint64_t v8 = v82;
      v87(v8, v86, v3);
      id v83 = v82;
      LOBYTE(v82) = _dispatchPreconditionTest(_:)();
      v85(v8, v3);
      if (v82) {
        goto LABEL_15;
      }
LABEL_22:
      __break(1u);
    }
    goto LABEL_15;
  }
  uint64_t v90 = 0;
  unint64_t v91 = 0xE000000000000000;
  _StringGuts.grow(_:)(47);
  swift_bridgeObjectRelease();
  int v64 = sub_1007A0098(v54, 0xD00000000000004FLL, 0x8000000101280A60);
  if (v64 != 101) {
    goto LABEL_14;
  }
  Swift::String v65 = *(void **)(*(void *)(v57 + 16) + 32);
  *uint64_t v8 = v65;
  v87(v8, v86, v3);
  id v66 = v65;
  LOBYTE(v65) = _dispatchPreconditionTest(_:)();
  int v62 = v85(v8, v3);
  if ((v65 & 1) == 0)
  {
    __break(1u);
LABEL_10:
    int v67 = v62;
    sub_10079FF00();
    swift_allocError();
    *(_DWORD *)uint64_t v68 = v67;
    *(void *)(v68 + 8) = 0xD000000000000026;
    *(void *)(v68 + 16) = 0x80000001012809B0;
    swift_willThrow();
    Swift::String v69 = *(void **)(*(void *)(v57 + 16) + 32);
    *uint64_t v8 = v69;
    v87(v8, v86, v3);
    id v70 = v69;
    LOBYTE(v69) = _dispatchPreconditionTest(_:)();
    int v63 = v61(v8, v3);
    if (v69) {
      goto LABEL_15;
    }
    __break(1u);
    goto LABEL_12;
  }
LABEL_15:
  uint64_t v84 = v89;
  if (*v89)
  {
    sqlite3_finalize(*v89);
    void *v84 = 0;
  }
  return swift_release();
}

uint64_t sub_100C3FE18()
{
  uint64_t v2 = type metadata accessor for DispatchPredicate();
  uint64_t v3 = *(void *)(v2 - 8);
  __n128 v5 = __chkstk_darwin(v2, v4);
  uint64_t v7 = (unint64_t *)((char *)&v70 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform17CRLBoardDataStore_queue);
  *uint64_t v7 = v8;
  uint64_t v9 = *(void (**)(void, __n128))(v3 + 104);
  unsigned int v72 = enum case for DispatchPredicate.onQueue(_:);
  uint64_t v73 = (void (*)(void *, void, unint64_t))v9;
  uint64_t v74 = v3 + 104;
  v9(v7, v5);
  id v10 = v8;
  LOBYTE(v8) = _dispatchPreconditionTest(_:)();
  int v75 = *(void (**)(void *, uint64_t))(v3 + 8);
  v75(v7, v2);
  if (v8)
  {
    uint64_t v76 = v0;
    uint64_t v77 = v1;
    unint64_t v71 = v2;
    if (qword_10166FB70 == -1) {
      goto LABEL_3;
    }
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  id v11 = (char *)0xD000000000000010;
  swift_beginAccess();
  id v12 = (id)static OS_os_log.boardStore;
  uint64_t v13 = static os_log_type_t.info.getter();
  sub_100BAC898((uint64_t)v12, (uint64_t)&_mh_execute_header, v13, (uint64_t)"Creating schema for the board drawings table", 44, 2, (uint64_t)_swiftEmptyArrayStorage);

  uint64_t v80 = 0;
  unint64_t v81 = 0xE000000000000000;
  _StringGuts.grow(_:)(236);
  v14._countAndFlagsBits = 0x5420455441455243;
  v14._object = (void *)0xED000020454C4241;
  String.append(_:)(v14);
  v15._countAndFlagsBits = 0xD000000000000018;
  unint64_t v70 = (unint64_t)"bucket with error %@";
  v15._object = (void *)0x800000010127BF60;
  String.append(_:)(v15);
  v16._countAndFlagsBits = 10272;
  v16._object = (void *)0xE200000000000000;
  String.append(_:)(v16);
  v17._countAndFlagsBits = 0xD000000000000011;
  v17._object = (void *)0x800000010127BF80;
  String.append(_:)(v17);
  v18._countAndFlagsBits = 0xD00000000000001ALL;
  v18._object = (void *)0x80000001012801B0;
  String.append(_:)(v18);
  v19._countAndFlagsBits = 0x736472616F62;
  v19._object = (void *)0xE600000000000000;
  String.append(_:)(v19);
  v20._countAndFlagsBits = 10272;
  v20._object = (void *)0xE200000000000000;
  String.append(_:)(v20);
  v21._object = (void *)0x8000000101262BA0;
  v21._countAndFlagsBits = 0xD000000000000010;
  String.append(_:)(v21);
  v22._countAndFlagsBits = 0xD000000000000015;
  v22._object = (void *)0x80000001012801D0;
  String.append(_:)(v22);
  v23._countAndFlagsBits = 0x695F74656B637562;
  v23._object = (void *)0xEC0000007865646ELL;
  String.append(_:)(v23);
  v24._countAndFlagsBits = 0xD000000000000013;
  v24._object = (void *)0x80000001012804F0;
  String.append(_:)(v24);
  v25._countAndFlagsBits = 0x645F74656B637562;
  v25._object = (void *)0xEB00000000617461;
  String.append(_:)(v25);
  v26._object = (void *)0x8000000101280420;
  v26._countAndFlagsBits = 0xD000000000000010;
  String.append(_:)(v26);
  v27._object = (void *)0x800000010127B8B0;
  v27._countAndFlagsBits = 0xD000000000000010;
  String.append(_:)(v27);
  v28._countAndFlagsBits = 0xD00000000000001DLL;
  v28._object = (void *)0x80000001012807E0;
  String.append(_:)(v28);
  v29._countAndFlagsBits = 0x7461645F636E7973;
  v29._object = (void *)0xE900000000000061;
  String.append(_:)(v29);
  v30._countAndFlagsBits = 0x202C424F4C4220;
  v30._object = (void *)0xE700000000000000;
  String.append(_:)(v30);
  v31._object = (void *)0x800000010127BFE0;
  v31._countAndFlagsBits = 0xD00000000000001ELL;
  String.append(_:)(v31);
  v32._countAndFlagsBits = 0x202C424F4C4220;
  v32._object = (void *)0xE700000000000000;
  String.append(_:)(v32);
  v33._countAndFlagsBits = 0xD00000000000001FLL;
  v33._object = (void *)0x800000010127C000;
  String.append(_:)(v33);
  v34._countAndFlagsBits = 0xD00000000000001DLL;
  v34._object = (void *)0x80000001012807E0;
  String.append(_:)(v34);
  v35._object = (void *)0x800000010127C020;
  v35._countAndFlagsBits = 0xD00000000000001ELL;
  String.append(_:)(v35);
  v36._countAndFlagsBits = 0xD000000000000024;
  v36._object = (void *)0x8000000101280510;
  String.append(_:)(v36);
  v37._countAndFlagsBits = 0xD000000000000011;
  v37._object = (void *)0x800000010127BF80;
  String.append(_:)(v37);
  v38._countAndFlagsBits = 44;
  v38._object = (void *)0xE100000000000000;
  String.append(_:)(v38);
  v39._countAndFlagsBits = 0x695F74656B637562;
  v39._object = (void *)0xEC0000007865646ELL;
  String.append(_:)(v39);
  v40._countAndFlagsBits = 10537;
  v40._object = (void *)0xE200000000000000;
  String.append(_:)(v40);
  uint64_t v41 = v80;
  uint64_t v42 = v81;
  uint64_t v43 = *(void *)(v76 + OBJC_IVAR____TtC8Freeform17CRLBoardDataStore_database);
  type metadata accessor for SQLiteStatement();
  swift_initStackObject();
  uint64_t v44 = swift_retain();
  uint64_t v45 = v77;
  uint64_t v46 = sub_10079FC40(v44, v41, v42);
  uint64_t result = swift_release();
  if (v45) {
    return result;
  }
  Swift::String v48 = *(void **)(*(void *)(v46 + 16) + 32);
  *uint64_t v7 = v48;
  unint64_t v49 = v71;
  v73(v7, v72, v71);
  id v50 = v48;
  LOBYTE(v48) = _dispatchPreconditionTest(_:)();
  v75(v7, v49);
  if ((v48 & 1) == 0)
  {
    __break(1u);
    goto LABEL_19;
  }
  Swift::String v51 = (sqlite3_stmt **)(v46 + 24);
  swift_beginAccess();
  int v52 = sqlite3_step(*(sqlite3_stmt **)(v46 + 24));
  if (v52 != 101)
  {
LABEL_9:
    int v57 = v52;
    sub_10079FF00();
    swift_allocError();
    *(_DWORD *)uint64_t v58 = v57;
    *(void *)(v58 + 8) = v11 + 25;
    *(void *)(v58 + 16) = 0x8000000101280800;
    swift_willThrow();
    id v11 = *(char **)(*(void *)(v46 + 16) + 32);
    *uint64_t v7 = v11;
    v73(v7, v72, v49);
    uint64_t v59 = v11;
    LOBYTE(v57) = _dispatchPreconditionTest(_:)();
    int v53 = ((uint64_t (*)(void *, unint64_t))v75)(v7, v49);
    if ((v57 & 1) == 0)
    {
      __break(1u);
LABEL_11:
      int v60 = v53;
      uint64_t v78 = 0;
      unint64_t v79 = v49;
      _StringGuts.grow(_:)(71);
      v61._countAndFlagsBits = (uint64_t)(v11 + 7);
      v61._object = (void *)0x80000001012808A0;
      String.append(_:)(v61);
      v62._countAndFlagsBits = (uint64_t)(v11 + 8);
      v62._object = (void *)(v70 | 0x8000000000000000);
      String.append(_:)(v62);
      v63._countAndFlagsBits = (uint64_t)(v11 + 30);
      v63._object = (void *)0x80000001012808C0;
      String.append(_:)(v63);
      uint64_t v64 = v78;
      unint64_t v65 = v79;
      sub_10079FF00();
      swift_allocError();
      *(_DWORD *)uint64_t v66 = v60;
      *(void *)(v66 + 8) = v64;
      *(void *)(v66 + 16) = v65;
      swift_willThrow();
      int v67 = *(void **)(*(void *)(v46 + 16) + 32);
      *uint64_t v7 = v67;
      unint64_t v68 = v71;
      v73(v7, v72, v71);
      id v69 = v67;
      LOBYTE(v65) = _dispatchPreconditionTest(_:)();
      v75(v7, v68);
      if (v65) {
        goto LABEL_12;
      }
LABEL_19:
      __break(1u);
    }
    goto LABEL_12;
  }
  unint64_t v49 = 0xE000000000000000;
  uint64_t v78 = 0;
  unint64_t v79 = 0xE000000000000000;
  _StringGuts.grow(_:)(47);
  swift_bridgeObjectRelease();
  int v53 = sub_1007A0098(v43, 0xD00000000000006ALL, 0x8000000101280830);
  if (v53 != 101) {
    goto LABEL_11;
  }
  id v11 = *(char **)(*(void *)(v46 + 16) + 32);
  *uint64_t v7 = v11;
  unint64_t v54 = v71;
  v73(v7, v72, v71);
  uint64_t v55 = v11;
  char v56 = _dispatchPreconditionTest(_:)();
  int v52 = ((uint64_t (*)(void *, unint64_t))v75)(v7, v54);
  if ((v56 & 1) == 0)
  {
    __break(1u);
    goto LABEL_9;
  }
LABEL_12:
  if (*v51)
  {
    sqlite3_finalize(*v51);
    *Swift::String v51 = 0;
  }
  return swift_release();
}

uint64_t sub_100C405E0()
{
  uint64_t v2 = type metadata accessor for DispatchPredicate();
  uint64_t v3 = *(void *)(v2 - 8);
  __n128 v5 = __chkstk_darwin(v2, v4);
  uint64_t v7 = (uint64_t *)((char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform17CRLBoardDataStore_queue);
  *uint64_t v7 = v8;
  uint64_t v9 = enum case for DispatchPredicate.onQueue(_:);
  Swift::String v39 = *(void (**)(void *, uint64_t, uint64_t))(v3 + 104);
  ((void (*)(void *, void, uint64_t, __n128))v39)(v7, enum case for DispatchPredicate.onQueue(_:), v2, v5);
  id v10 = v8;
  LOBYTE(v8) = _dispatchPreconditionTest(_:)();
  Swift::String v40 = *(void (**)(void *, uint64_t))(v3 + 8);
  v40(v7, v2);
  if (v8)
  {
    if (qword_10166FB70 == -1) {
      goto LABEL_3;
    }
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  swift_beginAccess();
  id v11 = (id)static OS_os_log.boardStore;
  uint64_t v12 = static os_log_type_t.info.getter();
  sub_100BAC898((uint64_t)v11, (uint64_t)&_mh_execute_header, v12, (uint64_t)"Creating schema for the key/value table", 39, 2, (uint64_t)_swiftEmptyArrayStorage);

  uint64_t v41 = 0;
  unint64_t v42 = 0xE000000000000000;
  _StringGuts.grow(_:)(74);
  v13._countAndFlagsBits = 0x5420455441455243;
  v13._object = (void *)0xED000020454C4241;
  String.append(_:)(v13);
  v14._countAndFlagsBits = 0x756C61765F79656BLL;
  v14._object = (void *)0xEE00617461645F65;
  String.append(_:)(v14);
  v15._countAndFlagsBits = 10272;
  v15._object = (void *)0xE200000000000000;
  String.append(_:)(v15);
  v16._countAndFlagsBits = 7955819;
  v16._object = (void *)0xE300000000000000;
  String.append(_:)(v16);
  v17._countAndFlagsBits = 0xD00000000000001CLL;
  v17._object = (void *)0x8000000101280760;
  String.append(_:)(v17);
  v18._countAndFlagsBits = 0x65756C6176;
  v18._object = (void *)0xE500000000000000;
  String.append(_:)(v18);
  v19._object = (void *)0x80000001012804D0;
  v19._countAndFlagsBits = 0xD000000000000010;
  String.append(_:)(v19);
  v20._countAndFlagsBits = 0x6E695F6172747865;
  v20._object = (void *)0xEA00000000006F66;
  String.append(_:)(v20);
  v21._countAndFlagsBits = 0x29205458455420;
  v21._object = (void *)0xE700000000000000;
  String.append(_:)(v21);
  uint64_t v22 = v41;
  uint64_t v23 = v42;
  type metadata accessor for SQLiteStatement();
  swift_initStackObject();
  uint64_t v24 = swift_retain();
  uint64_t v25 = sub_10079FC40(v24, v22, v23);
  uint64_t result = swift_release();
  if (v1) {
    return result;
  }
  Swift::String v27 = *(void **)(*(void *)(v25 + 16) + 32);
  *uint64_t v7 = v27;
  v39(v7, v9, v2);
  id v28 = v27;
  LOBYTE(v27) = _dispatchPreconditionTest(_:)();
  v40(v7, v2);
  if ((v27 & 1) == 0)
  {
    __break(1u);
    goto LABEL_16;
  }
  Swift::String v29 = (sqlite3_stmt **)(v25 + 24);
  swift_beginAccess();
  int v30 = sqlite3_step(*(sqlite3_stmt **)(v25 + 24));
  if (v30 != 101)
  {
LABEL_8:
    int v33 = v30;
    sub_10079FF00();
    swift_allocError();
    *(_DWORD *)uint64_t v34 = v33;
    *(void *)(v34 + 8) = 0xD000000000000024;
    *(void *)(v34 + 16) = 0x8000000101280780;
    swift_willThrow();
    Swift::String v35 = *(void **)(*(void *)(v25 + 16) + 32);
    *uint64_t v7 = v35;
    v39(v7, v9, v2);
    id v36 = v35;
    char v37 = _dispatchPreconditionTest(_:)();
    v40(v7, v2);
    if (v37) {
      goto LABEL_9;
    }
LABEL_16:
    __break(1u);
  }
  Swift::String v31 = *(void **)(*(void *)(v25 + 16) + 32);
  *uint64_t v7 = v31;
  v39(v7, v9, v2);
  id v32 = v31;
  uint64_t v9 = _dispatchPreconditionTest(_:)();
  int v30 = ((uint64_t (*)(void *, uint64_t))v40)(v7, v2);
  if ((v9 & 1) == 0)
  {
    __break(1u);
    goto LABEL_8;
  }
LABEL_9:
  if (*v29)
  {
    sqlite3_finalize(*v29);
    *Swift::String v29 = 0;
  }
  return swift_release();
}

uint64_t sub_100C40AC4()
{
  uint64_t v2 = type metadata accessor for DispatchPredicate();
  uint64_t v3 = *(void *)(v2 - 8);
  __n128 v5 = __chkstk_darwin(v2, v4);
  uint64_t v7 = (uint64_t *)((char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform17CRLBoardDataStore_queue);
  *uint64_t v7 = v8;
  uint64_t v9 = enum case for DispatchPredicate.onQueue(_:);
  Swift::String v39 = *(void (**)(void *, uint64_t, uint64_t))(v3 + 104);
  ((void (*)(void *, void, uint64_t, __n128))v39)(v7, enum case for DispatchPredicate.onQueue(_:), v2, v5);
  id v10 = v8;
  LOBYTE(v8) = _dispatchPreconditionTest(_:)();
  Swift::String v40 = *(void (**)(void *, uint64_t))(v3 + 8);
  v40(v7, v2);
  if (v8)
  {
    if (qword_10166FB70 == -1) {
      goto LABEL_3;
    }
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  swift_beginAccess();
  id v11 = (id)static OS_os_log.boardStore;
  uint64_t v12 = static os_log_type_t.info.getter();
  sub_100BAC898((uint64_t)v11, (uint64_t)&_mh_execute_header, v12, (uint64_t)"Creating schema for the assets table", 36, 2, (uint64_t)_swiftEmptyArrayStorage);

  uint64_t v41 = 0;
  unint64_t v42 = 0xE000000000000000;
  _StringGuts.grow(_:)(74);
  v13._countAndFlagsBits = 0x5420455441455243;
  v13._object = (void *)0xED000020454C4241;
  String.append(_:)(v13);
  v14._countAndFlagsBits = 0x737465737361;
  v14._object = (void *)0xE600000000000000;
  String.append(_:)(v14);
  v15._countAndFlagsBits = 10272;
  v15._object = (void *)0xE200000000000000;
  String.append(_:)(v15);
  v16._countAndFlagsBits = 0x75755F7465737361;
  v16._object = (void *)0xEA00000000006469;
  String.append(_:)(v16);
  v17._countAndFlagsBits = 0xD00000000000001CLL;
  v17._object = (void *)0x8000000101263280;
  String.append(_:)(v17);
  v18._countAndFlagsBits = 0x6F69736E65747865;
  v18._object = (void *)0xE90000000000006ELL;
  String.append(_:)(v18);
  v19._countAndFlagsBits = 0x202C5458455420;
  v19._object = (void *)0xE700000000000000;
  String.append(_:)(v19);
  v20._countAndFlagsBits = 0x6E6F7473626D6F74;
  v20._object = (void *)0xEE00657461645F65;
  String.append(_:)(v20);
  v21._object = (void *)0x80000001012806E0;
  v21._countAndFlagsBits = 0xD000000000000010;
  String.append(_:)(v21);
  uint64_t v22 = v41;
  uint64_t v23 = v42;
  type metadata accessor for SQLiteStatement();
  swift_initStackObject();
  uint64_t v24 = swift_retain();
  uint64_t v25 = sub_10079FC40(v24, v22, v23);
  uint64_t result = swift_release();
  if (v1) {
    return result;
  }
  Swift::String v27 = *(void **)(*(void *)(v25 + 16) + 32);
  *uint64_t v7 = v27;
  v39(v7, v9, v2);
  id v28 = v27;
  LOBYTE(v27) = _dispatchPreconditionTest(_:)();
  v40(v7, v2);
  if ((v27 & 1) == 0)
  {
    __break(1u);
    goto LABEL_16;
  }
  Swift::String v29 = (sqlite3_stmt **)(v25 + 24);
  swift_beginAccess();
  int v30 = sqlite3_step(*(sqlite3_stmt **)(v25 + 24));
  if (v30 != 101)
  {
LABEL_8:
    int v33 = v30;
    sub_10079FF00();
    swift_allocError();
    *(_DWORD *)uint64_t v34 = v33;
    *(void *)(v34 + 8) = 0xD000000000000021;
    *(void *)(v34 + 16) = 0x8000000101280700;
    swift_willThrow();
    Swift::String v35 = *(void **)(*(void *)(v25 + 16) + 32);
    *uint64_t v7 = v35;
    v39(v7, v9, v2);
    id v36 = v35;
    char v37 = _dispatchPreconditionTest(_:)();
    v40(v7, v2);
    if (v37) {
      goto LABEL_9;
    }
LABEL_16:
    __break(1u);
  }
  Swift::String v31 = *(void **)(*(void *)(v25 + 16) + 32);
  *uint64_t v7 = v31;
  v39(v7, v9, v2);
  id v32 = v31;
  uint64_t v9 = _dispatchPreconditionTest(_:)();
  int v30 = ((uint64_t (*)(void *, uint64_t))v40)(v7, v2);
  if ((v9 & 1) == 0)
  {
    __break(1u);
    goto LABEL_8;
  }
LABEL_9:
  if (*v29)
  {
    sqlite3_finalize(*v29);
    *Swift::String v29 = 0;
  }
  return swift_release();
}

uint64_t sub_100C40FB4()
{
  uint64_t v2 = v0;
  uint64_t v3 = type metadata accessor for DispatchPredicate();
  uint64_t v4 = *(void *)(v3 - 8);
  __n128 v6 = __chkstk_darwin(v3, v5);
  uint64_t v8 = (uint64_t (**)(void *, uint64_t))((char *)&v62 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform17CRLBoardDataStore_queue);
  *uint64_t v8 = v9;
  id v10 = *(void (**)(void, __n128))(v4 + 104);
  unsigned int v63 = enum case for DispatchPredicate.onQueue(_:);
  uint64_t v64 = (void (*)(void *, void, uint64_t))v10;
  uint64_t v65 = v4 + 104;
  v10(v8, v6);
  id v11 = v9;
  LOBYTE(v9) = _dispatchPreconditionTest(_:)();
  uint64_t v12 = *(void (**)(void *, uint64_t))(v4 + 8);
  v12(v8, v3);
  if (v9)
  {
    uint64_t v66 = v1;
    Swift::String v62 = (uint64_t (*)(void *, uint64_t))v12;
    if (qword_10166FB70 == -1) {
      goto LABEL_3;
    }
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  swift_beginAccess();
  id v13 = (id)static OS_os_log.boardStore;
  uint64_t v14 = static os_log_type_t.info.getter();
  sub_100BAC898((uint64_t)v13, (uint64_t)&_mh_execute_header, v14, (uint64_t)"Creating schema for the asset_references table", 46, 2, (uint64_t)_swiftEmptyArrayStorage);

  uint64_t v69 = 0;
  unint64_t v70 = 0xE000000000000000;
  _StringGuts.grow(_:)(146);
  v15._countAndFlagsBits = 0x5420455441455243;
  v15._object = (void *)0xED000020454C4241;
  String.append(_:)(v15);
  v16._object = (void *)0x800000010127C660;
  v16._countAndFlagsBits = 0xD000000000000010;
  String.append(_:)(v16);
  v17._countAndFlagsBits = 10272;
  v17._object = (void *)0xE200000000000000;
  String.append(_:)(v17);
  v18._countAndFlagsBits = 0xD000000000000013;
  v18._object = (void *)0x800000010127CB90;
  String.append(_:)(v18);
  v19._countAndFlagsBits = 0xD000000000000010;
  v19._object = (void *)0x8000000101280420;
  String.append(_:)(v19);
  v20._object = (void *)0x8000000101262BA0;
  v20._countAndFlagsBits = 0xD000000000000010;
  String.append(_:)(v20);
  v21._countAndFlagsBits = 0x202C424F4C4220;
  v21._object = (void *)0xE700000000000000;
  String.append(_:)(v21);
  v22._countAndFlagsBits = 0xD000000000000013;
  v22._object = (void *)0x800000010127CBB0;
  String.append(_:)(v22);
  v23._object = (void *)0x80000001012804D0;
  v23._countAndFlagsBits = 0xD000000000000010;
  String.append(_:)(v23);
  v24._countAndFlagsBits = 0x75755F7465737361;
  v24._object = (void *)0xEA00000000006469;
  String.append(_:)(v24);
  v25._countAndFlagsBits = 0xD000000000000010;
  v25._object = (void *)0x8000000101280420;
  String.append(_:)(v25);
  v26._countAndFlagsBits = 0x7265727265666572;
  v26._object = (void *)0xED0000657079745FLL;
  String.append(_:)(v26);
  v27._object = (void *)0x80000001012804F0;
  v27._countAndFlagsBits = 0xD000000000000013;
  String.append(_:)(v27);
  v28._object = (void *)0x800000010127B8B0;
  v28._countAndFlagsBits = 0xD000000000000010;
  String.append(_:)(v28);
  v29._countAndFlagsBits = 0xD000000000000024;
  v29._object = (void *)0x8000000101280510;
  String.append(_:)(v29);
  v30._countAndFlagsBits = 0xD000000000000013;
  v30._object = (void *)0x800000010127CB90;
  String.append(_:)(v30);
  v31._countAndFlagsBits = 44;
  v31._object = (void *)0xE100000000000000;
  String.append(_:)(v31);
  v32._countAndFlagsBits = 0xD000000000000013;
  v32._object = (void *)0x800000010127CBB0;
  String.append(_:)(v32);
  v33._countAndFlagsBits = 10537;
  v33._object = (void *)0xE200000000000000;
  String.append(_:)(v33);
  uint64_t v34 = v69;
  uint64_t v35 = v70;
  uint64_t v36 = *(void *)(v2 + OBJC_IVAR____TtC8Freeform17CRLBoardDataStore_database);
  type metadata accessor for SQLiteStatement();
  swift_initStackObject();
  uint64_t v37 = swift_retain();
  uint64_t v38 = v66;
  uint64_t v39 = sub_10079FC40(v37, v34, v35);
  uint64_t result = swift_release();
  if (v38) {
    return result;
  }
  uint64_t v41 = *(void **)(*(void *)(v39 + 16) + 32);
  *uint64_t v8 = v41;
  v64(v8, v63, v3);
  id v42 = v41;
  LOBYTE(v41) = _dispatchPreconditionTest(_:)();
  uint64_t v43 = v62;
  v62(v8, v3);
  if ((v41 & 1) == 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v44 = (sqlite3_stmt **)(v39 + 24);
  swift_beginAccess();
  int v45 = sqlite3_step(*(sqlite3_stmt **)(v39 + 24));
  if (v45 != 101) {
    goto LABEL_10;
  }
  uint64_t v43 = (uint64_t (*)(void *, uint64_t))0xE000000000000000;
  uint64_t v67 = 0;
  unint64_t v68 = 0xE000000000000000;
  _StringGuts.grow(_:)(47);
  swift_bridgeObjectRelease();
  int v46 = sub_1007A0098(v36, 0xD00000000000004ELL, 0x8000000101280570);
  if (v46 != 101)
  {
LABEL_12:
    int v54 = v46;
    sub_10079FF00();
    swift_allocError();
    *(_DWORD *)uint64_t v55 = v54;
    *(void *)(v55 + 8) = 0xD000000000000044;
    *(void *)(v55 + 16) = 0x80000001012805C0;
    swift_willThrow();
    char v56 = *(void **)(*(void *)(v39 + 16) + 32);
    *uint64_t v8 = v56;
    v64(v8, v63, v3);
    id v57 = v56;
    LOBYTE(v56) = _dispatchPreconditionTest(_:)();
    int v47 = v62(v8, v3);
    if ((v56 & 1) == 0)
    {
      __break(1u);
LABEL_14:
      int v58 = v47;
      sub_10079FF00();
      swift_allocError();
      *(_DWORD *)uint64_t v59 = v58;
      *(void *)(v59 + 8) = v36 + 48;
      *(void *)(v59 + 16) = 0x8000000101280660;
      swift_willThrow();
      int v60 = *(void **)(*(void *)(v39 + 16) + 32);
      *uint64_t v8 = v60;
      v64(v8, v63, v3);
      id v61 = v60;
      LOBYTE(v6sub_100C38440(1, 0) = _dispatchPreconditionTest(_:)();
      v62(v8, v3);
      if (v60) {
        goto LABEL_15;
      }
LABEL_22:
      __break(1u);
    }
    goto LABEL_15;
  }
  uint64_t v67 = 0;
  unint64_t v68 = 0xE000000000000000;
  _StringGuts.grow(_:)(41);
  swift_bridgeObjectRelease();
  int v47 = sub_1007A0098(v36, 0xD00000000000004DLL, 0x8000000101280610);
  uint64_t v36 = 0xD000000000000010;
  if (v47 != 101) {
    goto LABEL_14;
  }
  Swift::String v48 = *(void **)(*(void *)(v39 + 16) + 32);
  *uint64_t v8 = v48;
  v64(v8, v63, v3);
  id v49 = v48;
  LOBYTE(v48) = _dispatchPreconditionTest(_:)();
  int v45 = v62(v8, v3);
  if ((v48 & 1) == 0)
  {
    __break(1u);
LABEL_10:
    int v50 = v45;
    sub_10079FF00();
    swift_allocError();
    *(_DWORD *)uint64_t v51 = v50;
    *(void *)(v51 + 8) = 0xD00000000000002BLL;
    *(void *)(v51 + 16) = 0x8000000101280540;
    swift_willThrow();
    int v52 = *(void **)(*(void *)(v39 + 16) + 32);
    *uint64_t v8 = v52;
    v64(v8, v63, v3);
    id v53 = v52;
    LOBYTE(v52) = _dispatchPreconditionTest(_:)();
    int v46 = v43(v8, v3);
    if (v52) {
      goto LABEL_15;
    }
    __break(1u);
    goto LABEL_12;
  }
LABEL_15:
  if (*v44)
  {
    sqlite3_finalize(*v44);
    *uint64_t v44 = 0;
  }
  return swift_release();
}

uint64_t sub_100C4175C()
{
  uint64_t v2 = type metadata accessor for DispatchPredicate();
  uint64_t v3 = *(void *)(v2 - 8);
  __n128 v5 = __chkstk_darwin(v2, v4);
  uint64_t v7 = (uint64_t *)((char *)&v50 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform17CRLBoardDataStore_queue);
  *uint64_t v7 = v8;
  uint64_t v9 = *(void (**)(void, __n128))(v3 + 104);
  unsigned int v52 = enum case for DispatchPredicate.onQueue(_:);
  id v53 = (void (*)(void *, void, uint64_t))v9;
  v9(v7, v5);
  id v10 = v8;
  LOBYTE(v8) = _dispatchPreconditionTest(_:)();
  id v11 = *(void (**)(void *, uint64_t))(v3 + 8);
  v11(v7, v2);
  if (v8)
  {
    uint64_t v54 = v1;
    uint64_t v51 = v11;
    if (qword_10166FB70 == -1) {
      goto LABEL_3;
    }
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  swift_beginAccess();
  id v12 = (id)static OS_os_log.boardStore;
  uint64_t v13 = static os_log_type_t.info.getter();
  sub_100BAC898((uint64_t)v12, (uint64_t)&_mh_execute_header, v13, (uint64_t)"Creating schema for the command_history_items table", 51, 2, (uint64_t)_swiftEmptyArrayStorage);

  uint64_t v55 = 0;
  unint64_t v56 = 0xE000000000000000;
  _StringGuts.grow(_:)(167);
  v14._countAndFlagsBits = 0x5420455441455243;
  v14._object = (void *)0xED000020454C4241;
  String.append(_:)(v14);
  v15._object = (void *)0x800000010127C640;
  v15._countAndFlagsBits = 0xD000000000000015;
  String.append(_:)(v15);
  v16._countAndFlagsBits = 10272;
  v16._object = (void *)0xE200000000000000;
  String.append(_:)(v16);
  v17._countAndFlagsBits = 0x64695F6D657469;
  v17._object = (void *)0xE700000000000000;
  String.append(_:)(v17);
  v18._countAndFlagsBits = 0xD000000000000024;
  v18._object = (void *)0x80000001012803F0;
  String.append(_:)(v18);
  v19._countAndFlagsBits = 0xD000000000000010;
  v19._object = (void *)0x8000000101262BA0;
  String.append(_:)(v19);
  v20._countAndFlagsBits = 0xD00000000000001ALL;
  v20._object = (void *)0x80000001012801B0;
  String.append(_:)(v20);
  v21._countAndFlagsBits = 0x736472616F62;
  v21._object = (void *)0xE600000000000000;
  String.append(_:)(v21);
  v22._countAndFlagsBits = 10272;
  v22._object = (void *)0xE200000000000000;
  String.append(_:)(v22);
  v23._countAndFlagsBits = 0xD000000000000010;
  v23._object = (void *)0x8000000101262BA0;
  String.append(_:)(v23);
  v24._object = (void *)0x80000001012801D0;
  v24._countAndFlagsBits = 0xD000000000000015;
  String.append(_:)(v24);
  v25._object = (void *)0xE900000000000064;
  v25._countAndFlagsBits = 0x6975755F6D657469;
  String.append(_:)(v25);
  v26._countAndFlagsBits = 0xD000000000000010;
  v26._object = (void *)0x8000000101280420;
  String.append(_:)(v26);
  v27._countAndFlagsBits = 0x7461645F6D657469;
  v27._object = (void *)0xE900000000000061;
  String.append(_:)(v27);
  v28._countAndFlagsBits = 0xD000000000000010;
  v28._object = (void *)0x8000000101280420;
  String.append(_:)(v28);
  v29._object = (void *)0xE900000000000067;
  v29._countAndFlagsBits = 0x616C665F6F646E75;
  String.append(_:)(v29);
  v30._countAndFlagsBits = 0xD000000000000013;
  v30._object = (void *)0x8000000101280440;
  String.append(_:)(v30);
  uint64_t v31 = v55;
  uint64_t v32 = v56;
  type metadata accessor for SQLiteStatement();
  swift_initStackObject();
  uint64_t v33 = swift_retain();
  uint64_t v34 = v54;
  uint64_t v35 = sub_10079FC40(v33, v31, v32);
  uint64_t result = swift_release();
  if (v34) {
    return result;
  }
  uint64_t v37 = *(void **)(*(void *)(v35 + 16) + 32);
  *uint64_t v7 = v37;
  v53(v7, v52, v2);
  id v38 = v37;
  LOBYTE(v37) = _dispatchPreconditionTest(_:)();
  uint64_t v39 = v51;
  v51(v7, v2);
  if ((v37 & 1) == 0)
  {
    __break(1u);
    goto LABEL_16;
  }
  Swift::String v40 = (sqlite3_stmt **)(v35 + 24);
  swift_beginAccess();
  int v41 = sqlite3_step(*(sqlite3_stmt **)(v35 + 24));
  if (v41 != 101)
  {
LABEL_8:
    int v45 = v41;
    sub_10079FF00();
    swift_allocError();
    *(_DWORD *)uint64_t v46 = v45;
    *(void *)(v46 + 8) = 0xD000000000000030;
    *(void *)(v46 + 16) = 0x8000000101280460;
    swift_willThrow();
    int v47 = *(void **)(*(void *)(v35 + 16) + 32);
    *uint64_t v7 = v47;
    v53(v7, v52, v2);
    id v48 = v47;
    char v49 = _dispatchPreconditionTest(_:)();
    v39(v7, v2);
    if (v49) {
      goto LABEL_9;
    }
LABEL_16:
    __break(1u);
  }
  id v42 = *(void **)(*(void *)(v35 + 16) + 32);
  *uint64_t v7 = v42;
  v53(v7, v52, v2);
  id v43 = v42;
  char v44 = _dispatchPreconditionTest(_:)();
  int v41 = ((uint64_t (*)(void *, uint64_t))v39)(v7, v2);
  if ((v44 & 1) == 0)
  {
    __break(1u);
    goto LABEL_8;
  }
LABEL_9:
  if (*v40)
  {
    sqlite3_finalize(*v40);
    *Swift::String v40 = 0;
  }
  return swift_release();
}

uint64_t sub_100C41CFC()
{
  uint64_t v2 = v0;
  uint64_t v3 = type metadata accessor for DispatchPredicate();
  uint64_t v4 = *(void *)(v3 - 8);
  __n128 v6 = __chkstk_darwin(v3, v5);
  uint64_t v8 = (uint64_t *)((char *)&v60 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform17CRLBoardDataStore_queue);
  *uint64_t v8 = v9;
  id v10 = *(void (**)(void, __n128))(v4 + 104);
  unsigned int v63 = enum case for DispatchPredicate.onQueue(_:);
  uint64_t v64 = (void (*)(void *, void, uint64_t))v10;
  uint64_t v62 = v4 + 104;
  v10(v8, v6);
  id v11 = v9;
  LOBYTE(v9) = _dispatchPreconditionTest(_:)();
  uint64_t v65 = *(void (**)(void *, uint64_t))(v4 + 8);
  v65(v8, v3);
  if (v9)
  {
    uint64_t v66 = v1;
    if (qword_10166FB70 == -1) {
      goto LABEL_3;
    }
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  swift_beginAccess();
  id v12 = (id)static OS_os_log.boardStore;
  uint64_t v13 = static os_log_type_t.info.getter();
  sub_100BAC898((uint64_t)v12, (uint64_t)&_mh_execute_header, v13, (uint64_t)"Creating schema for the command_history_asset_references table", 62, 2, (uint64_t)_swiftEmptyArrayStorage);

  uint64_t v69 = 0;
  unint64_t v70 = 0xE000000000000000;
  _StringGuts.grow(_:)(105);
  v14._countAndFlagsBits = 0x5420455441455243;
  v14._object = (void *)0xED000020454C4241;
  String.append(_:)(v14);
  v15._countAndFlagsBits = 0xD000000000000020;
  v15._object = (void *)0x800000010127C5F0;
  String.append(_:)(v15);
  v16._countAndFlagsBits = 10272;
  v16._object = (void *)0xE200000000000000;
  String.append(_:)(v16);
  v17._countAndFlagsBits = 0xD000000000000017;
  v17._object = (void *)0x8000000101280190;
  String.append(_:)(v17);
  v18._countAndFlagsBits = 0xD00000000000001ALL;
  v18._object = (void *)0x80000001012801B0;
  String.append(_:)(v18);
  v19._object = (void *)0x800000010127C640;
  v19._countAndFlagsBits = 0xD000000000000015;
  String.append(_:)(v19);
  v20._countAndFlagsBits = 10272;
  v20._object = (void *)0xE200000000000000;
  String.append(_:)(v20);
  v21._countAndFlagsBits = 0x64695F6D657469;
  v21._object = (void *)0xE700000000000000;
  String.append(_:)(v21);
  v22._object = (void *)0x80000001012801D0;
  v22._countAndFlagsBits = 0xD000000000000015;
  String.append(_:)(v22);
  v23._countAndFlagsBits = 0x75755F7465737361;
  v23._object = (void *)0xEA00000000006469;
  String.append(_:)(v23);
  v24._object = (void *)0x80000001012801F0;
  v24._countAndFlagsBits = 0xD000000000000017;
  String.append(_:)(v24);
  v25._countAndFlagsBits = 0xD000000000000017;
  v25._object = (void *)0x8000000101280190;
  String.append(_:)(v25);
  v26._countAndFlagsBits = 8236;
  v26._object = (void *)0xE200000000000000;
  String.append(_:)(v26);
  v27._countAndFlagsBits = 0x75755F7465737361;
  v27._object = (void *)0xEA00000000006469;
  String.append(_:)(v27);
  v28._countAndFlagsBits = 10537;
  v28._object = (void *)0xE200000000000000;
  String.append(_:)(v28);
  uint64_t v29 = v69;
  uint64_t v30 = v70;
  uint64_t v31 = *(void *)(v2 + OBJC_IVAR____TtC8Freeform17CRLBoardDataStore_database);
  type metadata accessor for SQLiteStatement();
  swift_initStackObject();
  uint64_t v32 = swift_retain();
  uint64_t v33 = v66;
  uint64_t v34 = sub_10079FC40(v32, v29, v30);
  uint64_t result = swift_release();
  if (v33) {
    return result;
  }
  uint64_t v36 = *(void **)(*(void *)(v34 + 16) + 32);
  *uint64_t v8 = v36;
  v64(v8, v63, v3);
  id v37 = v36;
  LOBYTE(v36) = _dispatchPreconditionTest(_:)();
  v65(v8, v3);
  if ((v36 & 1) == 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v66 = (sqlite3_stmt **)(v34 + 24);
  swift_beginAccess();
  int v38 = sqlite3_step(*(sqlite3_stmt **)(v34 + 24));
  if (v38 != 101) {
    goto LABEL_10;
  }
  uint64_t v61 = v34;
  uint64_t v67 = 0;
  uint64_t v68 = 0xE000000000000000;
  _StringGuts.grow(_:)(53);
  v39._countAndFlagsBits = 0xD00000000000002ELL;
  v39._object = (void *)0x8000000101280250;
  String.append(_:)(v39);
  v40._countAndFlagsBits = 0xD000000000000020;
  v40._object = (void *)0x800000010127C5F0;
  String.append(_:)(v40);
  v41._countAndFlagsBits = 10272;
  v41._object = (void *)0xE200000000000000;
  String.append(_:)(v41);
  v42._object = (void *)0x8000000101280190;
  v42._countAndFlagsBits = 0xD000000000000017;
  String.append(_:)(v42);
  v43._countAndFlagsBits = 41;
  v43._object = (void *)0xE100000000000000;
  String.append(_:)(v43);
  int v44 = sub_1007A0098(v31, v67, v68);
  swift_bridgeObjectRelease();
  if (v44 != 101)
  {
LABEL_12:
    sub_10079FF00();
    swift_allocError();
    *(_DWORD *)uint64_t v52 = v44;
    *(void *)(v52 + 8) = 0xD00000000000005FLL;
    *(void *)(v52 + 16) = 0x8000000101280280;
    swift_willThrow();
    uint64_t v34 = v61;
    id v53 = *(void **)(*(void *)(v61 + 16) + 32);
    *uint64_t v8 = v53;
    v64(v8, v63, v3);
    id v54 = v53;
    LOBYTE(v53) = _dispatchPreconditionTest(_:)();
    int v45 = ((uint64_t (*)(void *, uint64_t))v65)(v8, v3);
    if ((v53 & 1) == 0)
    {
      __break(1u);
LABEL_14:
      int v55 = v45;
      sub_10079FF00();
      swift_allocError();
      *(_DWORD *)uint64_t v56 = v55;
      *(void *)(v56 + 8) = v31 + 57;
      *(void *)(v56 + 16) = 0x8000000101280350;
      swift_willThrow();
      id v57 = *(void **)(*(void *)(v34 + 16) + 32);
      *uint64_t v8 = v57;
      v64(v8, v63, v3);
      id v58 = v57;
      LOBYTE(v57) = _dispatchPreconditionTest(_:)();
      v65(v8, v3);
      if (v57) {
        goto LABEL_15;
      }
LABEL_22:
      __break(1u);
    }
    goto LABEL_15;
  }
  uint64_t v67 = 0;
  uint64_t v68 = 0xE000000000000000;
  _StringGuts.grow(_:)(41);
  swift_bridgeObjectRelease();
  int v45 = sub_1007A0098(v31, 0xD00000000000006DLL, 0x80000001012802E0);
  uint64_t v31 = 0xD000000000000017;
  uint64_t v34 = v61;
  if (v45 != 101) {
    goto LABEL_14;
  }
  uint64_t v46 = *(void **)(*(void *)(v61 + 16) + 32);
  *uint64_t v8 = v46;
  v64(v8, v63, v3);
  id v47 = v46;
  LOBYTE(v46) = _dispatchPreconditionTest(_:)();
  int v38 = ((uint64_t (*)(void *, uint64_t))v65)(v8, v3);
  if ((v46 & 1) == 0)
  {
    __break(1u);
LABEL_10:
    int v48 = v38;
    sub_10079FF00();
    swift_allocError();
    *(_DWORD *)uint64_t v49 = v48;
    *(void *)(v49 + 8) = 0xD00000000000003BLL;
    *(void *)(v49 + 16) = 0x8000000101280210;
    swift_willThrow();
    uint64_t v50 = *(void **)(*(void *)(v34 + 16) + 32);
    *uint64_t v8 = v50;
    v64(v8, v63, v3);
    id v51 = v50;
    int v44 = _dispatchPreconditionTest(_:)();
    v65(v8, v3);
    if (v44) {
      goto LABEL_15;
    }
    __break(1u);
    goto LABEL_12;
  }
LABEL_15:
  uint64_t v59 = v66;
  if (*v66)
  {
    sqlite3_finalize(*v66);
    *uint64_t v59 = 0;
  }
  return swift_release();
}

unint64_t sub_100C426A8@<X0>(unint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_100CE4FC8(*a1);
  *a2 = result;
  return result;
}

void sub_100C426D4(void *a1@<X8>)
{
  *a1 = &off_101502E88;
}

void sub_100C426E4(void *a1@<X8>)
{
  *a1 = &off_101502838;
}

NSString sub_100C426F4()
{
  NSString result = String._bridgeToObjectiveC()();
  qword_10171C2F8 = (uint64_t)result;
  return result;
}

NSString sub_100C4272C()
{
  NSString result = String._bridgeToObjectiveC()();
  qword_10171C300 = (uint64_t)result;
  return result;
}

NSString sub_100C42764()
{
  NSString result = String._bridgeToObjectiveC()();
  qword_10171C308 = (uint64_t)result;
  return result;
}

NSString sub_100C4279C()
{
  NSString result = String._bridgeToObjectiveC()();
  qword_10171C310 = (uint64_t)result;
  return result;
}

NSString sub_100C427D4()
{
  NSString result = String._bridgeToObjectiveC()();
  qword_10171C318 = (uint64_t)result;
  return result;
}

NSString sub_100C4280C()
{
  NSString result = String._bridgeToObjectiveC()();
  qword_10171C320 = (uint64_t)result;
  return result;
}

id sub_100C42844()
{
  if (qword_10166FE00 != -1) {
    swift_once();
  }
  uint64_t v0 = (void *)qword_10171C2F8;
  qword_10171C328 = qword_10171C2F8;

  return v0;
}

uint64_t sub_100C42904()
{
  return type metadata accessor for CRLBoardDataStore(0);
}

uint64_t type metadata accessor for CRLBoardDataStore(uint64_t a1)
{
  return sub_100512D5C(a1, (uint64_t *)&unk_101699398);
}

uint64_t sub_100C4292C()
{
  uint64_t result = type metadata accessor for URL();
  if (v1 <= 0x3F) {
    return swift_updateClassMetadata2();
  }
  return result;
}

uint64_t type metadata accessor for CRLBoardItemDatabaseResult()
{
  return self;
}

uint64_t sub_100C42A60()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for CRLBoardDatabaseFetchResult()
{
  return self;
}

void sub_100C42B7C()
{
}

void *sub_100C42BB8()
{
  uint64_t v1 = sub_1005057FC(&qword_101672BB0);
  __chkstk_darwin(v1 - 8, v2);
  uint64_t v4 = (char *)v104 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for URL();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5, v7);
  uint64_t v9 = (char *)v104 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1005057FC(&qword_101672E90);
  __chkstk_darwin(v10 - 8, v11);
  uint64_t v111 = (char *)v104 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for DispatchPredicate();
  uint64_t v14 = *(void *)(v13 - 8);
  __n128 v16 = __chkstk_darwin(v13, v15);
  Swift::String v18 = (void *)((char *)v104 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  Swift::String v19 = *(void **)&v0[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore_writeQueue];
  *Swift::String v18 = v19;
  (*(void (**)(void *, void, uint64_t, __n128))(v14 + 104))(v18, enum case for DispatchPredicate.onQueue(_:), v13, v16);
  id v20 = v19;
  LOBYTE(v19) = _dispatchPreconditionTest(_:)();
  (*(void (**)(void *, uint64_t))(v14 + 8))(v18, v13);
  if (v19)
  {
    uint64_t v112 = (uint64_t)v9;
    if (qword_10166FB70 == -1) {
      goto LABEL_3;
    }
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  swift_beginAccess();
  id v21 = (id)static OS_os_log.boardStore;
  uint64_t v22 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v21, (uint64_t)&_mh_execute_header, v22, (uint64_t)"Removing all assets.", 20, 2, (uint64_t)_swiftEmptyArrayStorage);

  uint64_t v23 = *(void *)&v0[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManagerLock];
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v23 + 16));
  uint64_t v24 = OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManager;
  Swift::String v25 = *(char **)&v0[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManager];
  unint64_t v116 = v0;
  uint64_t v106 = v4;
  if (v25)
  {
    uint64_t v26 = v5;
    Swift::String v27 = v25;
  }
  else
  {
    Swift::String v28 = v0;
    uint64_t v26 = v5;
    id v29 = objc_allocWithZone((Class)type metadata accessor for CRLAssetFileManager());
    uint64_t v30 = v0;
    id v31 = sub_100EAFDE4((uint64_t)v30);

    uint64_t v32 = *(void **)&v28[v24];
    *(void *)&v28[v24] = v31;
    Swift::String v27 = (const char *)v31;

    Swift::String v25 = 0;
  }
  uint64_t v33 = *(os_unfair_lock_s **)(v23 + 16);
  uint64_t v34 = v25;
  os_unfair_lock_unlock(v33);
  id v113 = [self defaultManager];
  sub_1005057FC(&qword_1016743E0);
  uint64_t v35 = *(void *)(v6 + 72);
  unint64_t v36 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v37 = swift_allocObject();
  *(_OWORD *)(v37 + 16) = xmmword_10117D8C0;
  int v38 = (char *)(v37 + v36);
  Swift::String v39 = *(void (**)(void))(v6 + 16);
  ((void (*)(char *, const char *, uint64_t))v39)(v38, &v27[OBJC_IVAR____TtC8Freeform19CRLAssetFileManager_assetsDirectoryURL], v26);
  unint64_t v110 = v27;
  uint64_t v107 = &v38[v35];
  v39();
  swift_bridgeObjectRetain();
  Swift::String v40 = v111;
  uint64_t v109 = v38;
  ((void (*)(const char *, char *, uint64_t))v39)(v111, v38, v26);
  uint64_t v108 = *(void (**)(const char *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v108(v40, 0, 1, v26);
  Swift::String v41 = *(unsigned int (**)(const char *, uint64_t, uint64_t))(v6 + 48);
  if (v41(v40, 1, v26) != 1)
  {
    uint64_t v105 = v41;
    Swift::String v42 = *(void (**)(uint64_t, const char *, uint64_t))(v6 + 32);
    uint64_t v43 = v112;
    v104[1] = v6 + 32;
    v104[0] = v42;
    v42(v112, v40, v26);
    uint64_t v44 = v114;
    sub_100EA6F80(v43, v113);
    id v47 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
    uint64_t v46 = v6 + 8;
    int v45 = v47;
    *(void *)&long long v114 = v44;
    if (v44) {
      goto LABEL_37;
    }
    v104[2] = v46;
    v45(v112, v26);
    ((void (*)(const char *, char *, uint64_t))v39)(v40, v107, v26);
    v108(v40, 0, 1, v26);
    if (v105(v40, 1, v26) == 1) {
      goto LABEL_11;
    }
    int v48 = v45;
    uint64_t v49 = (const char *)v112;
    ((void (*)(uint64_t, const char *, uint64_t))v104[0])(v112, v40, v26);
    uint64_t v50 = (uint64_t)v49;
    int v45 = v48;
    uint64_t v51 = v114;
    sub_100EA6F80(v50, v113);
    *(void *)&long long v114 = v51;
    if (v51)
    {
LABEL_37:
      v45(v112, v26);
      swift_bridgeObjectRelease();
      __break(1u);
      JUMPOUT(0x100C43900);
    }
    v48(v112, v26);
    v108(v40, 1, 1, v26);
  }
LABEL_11:
  uint64_t v52 = v116;
  id v53 = v113;
  swift_bridgeObjectRelease();
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  id v54 = (char *)v110;
  uint64_t v55 = *(void *)&v110[OBJC_IVAR____TtC8Freeform19CRLAssetFileManager_lock];
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v55 + 16));
  uint64_t v56 = &v54[OBJC_IVAR____TtC8Freeform19CRLAssetFileManager_assetFileURLCache];
  swift_beginAccess();
  *(void *)uint64_t v56 = _swiftEmptyDictionarySingleton;
  swift_bridgeObjectRelease();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v55 + 16));

  uint64_t v57 = *(void *)&v52[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetDownloadManagerLock];
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v57 + 16));
  uint64_t v58 = OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetDownloadManager;
  uint64_t v59 = v52;
  if (!*(void *)&v52[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetDownloadManager])
  {
    uint64_t v60 = v52;
    uint64_t v61 = sub_100678E6C(v60);

    *(void *)&v59[v58] = v61;
    swift_retain();
    swift_release();
  }
  uint64_t v62 = *(os_unfair_lock_s **)(v57 + 16);
  swift_retain();
  os_unfair_lock_unlock(v62);
  sub_100673FE0();
  swift_release();
  uint64_t v63 = *(void *)&v59[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetManagerLock];
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v63 + 16));
  uint64_t v64 = OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetManager;
  uint64_t v65 = *(void **)&v59[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetManager];
  uint64_t v66 = &qword_101690000;
  if (v65)
  {
    uint64_t v67 = *(char **)&v59[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetManager];
  }
  else
  {
    uint64_t v68 = (objc_class *)type metadata accessor for CRLAssetManager();
    uint64_t v69 = (char *)objc_allocWithZone(v68);
    swift_unknownObjectWeakInit();
    uint64_t v70 = OBJC_IVAR____TtC8Freeform15CRLAssetManager_lock;
    type metadata accessor for CRLUnfairLock();
    uint64_t v71 = swift_allocObject();
    unsigned int v72 = v59;
    uint64_t v73 = v69;
    uint64_t v74 = (_DWORD *)swift_slowAlloc();
    *uint64_t v74 = 0;
    *(void *)(v71 + 16) = v74;
    atomic_thread_fence(memory_order_acq_rel);
    *(void *)&v69[v70] = v71;
    uint64_t v66 = &qword_101690000;
    *(void *)&v73[OBJC_IVAR____TtC8Freeform15CRLAssetManager_assets] = _swiftEmptyDictionarySingleton;
    uint64_t v75 = OBJC_IVAR____TtC8Freeform15CRLAssetManager_owners;
    *(void *)&v73[v75] = [self mapTableWithKeyOptions:517 valueOptions:0];
    *(void *)&v73[OBJC_IVAR____TtC8Freeform15CRLAssetManager_garbageCollectionWorkItem] = 0;
    swift_unknownObjectWeakAssign();

    v115.receiver = v73;
    v115.super_class = v68;
    uint64_t v76 = v116;
    id v77 = [super init];

    uint64_t v78 = *(void **)&v76[v64];
    *(void *)&v76[v64] = v77;
    uint64_t v67 = (char *)v77;

    uint64_t v65 = 0;
  }
  unint64_t v79 = *(os_unfair_lock_s **)(v63 + 16);
  id v80 = v65;
  os_unfair_lock_unlock(v79);
  if (qword_10166FBD8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  id v81 = (id)static OS_os_log.assetManagement;
  uint64_t v82 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v81, (uint64_t)&_mh_execute_header, v82, (uint64_t)"reset() asset cache", 19, 2, (uint64_t)_swiftEmptyArrayStorage);

  id v83 = &v67[v66[145]];
  swift_beginAccess();
  *(void *)id v83 = _swiftEmptyDictionarySingleton;
  swift_bridgeObjectRelease();

  uint64_t v84 = v114;
  uint64_t result = (void *)sub_100C4E400();
  if (!v84)
  {
    uint64_t v86 = 9;
    id v113 = result;
    uint64_t v87 = &byte_101502858;
    long long v114 = xmmword_10117E810;
    uint64_t v112 = (uint64_t)"command_history_items";
    uint64_t v111 = "Clearing sync metadata.";
    unint64_t v110 = "Removing data for table: %@";
    uint64_t v109 = "bucket with error %@";
    do
    {
      unsigned int v89 = *v87++;
      uint64_t v88 = (sqlite3_stmt **)v89;
      uint64_t v90 = (void *)static OS_os_log.boardStore;
      sub_1005057FC((uint64_t *)&unk_101672B40);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = v114;
      unint64_t v92 = 0xE600000000000000;
      unint64_t v93 = 0x736472616F62;
      uint64_t v94 = inited;
      switch(v89)
      {
        case 1u:
          unint64_t v92 = 0xEB00000000736D65;
          unint64_t v93 = 0x74695F6472616F62;
          break;
        case 2u:
          unint64_t v92 = 0xEE00617461645F65;
          unint64_t v93 = 0x756C61765F79656BLL;
          break;
        case 3u:
          unint64_t v93 = 0x737465737361;
          break;
        case 4u:
          unint64_t v92 = v112 | 0x8000000000000000;
          unint64_t v93 = 0xD000000000000010;
          break;
        case 5u:
          unint64_t v93 = 0xD000000000000015;
          uint64_t v95 = (void **)&v118;
          goto LABEL_29;
        case 6u:
          unint64_t v93 = 0xD000000000000020;
          uint64_t v95 = (void **)&v117;
          goto LABEL_29;
        case 7u:
          unint64_t v92 = 0xEF61746164617465;
          unint64_t v93 = 0x6D5F736472616F62;
          break;
        case 8u:
          unint64_t v93 = 0xD000000000000018;
          uint64_t v95 = (void **)&v116;
LABEL_29:
          unint64_t v92 = (unint64_t)*(v95 - 32) | 0x8000000000000000;
          break;
        default:
          break;
      }
      *(void *)(inited + 56) = &type metadata for String;
      *(void *)(inited + 64) = sub_100528BE4();
      *(void *)(v94 + 32) = v93;
      *(void *)(v94 + 4sub_100C38440(1, 0) = v92;
      id v96 = v90;
      uint64_t v97 = static os_log_type_t.default.getter();
      sub_100BAC898((uint64_t)v96, (uint64_t)&_mh_execute_header, v97, (uint64_t)"Removing data for table: %@", 27, 2, v94);
      swift_setDeallocating();
      sub_1005057FC(&qword_101672B50);
      swift_arrayDestroy();

      sub_100CB1C14(v88);
      --v86;
    }
    while (v86);
    id v98 = (id)static OS_os_log.boardStore;
    uint64_t v99 = static os_log_type_t.default.getter();
    sub_100BAC898((uint64_t)v98, (uint64_t)&_mh_execute_header, v99, (uint64_t)"Clearing sync metadata.", 23, 2, (uint64_t)_swiftEmptyArrayStorage);

    if (*(void *)&v116[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore_syncHelper])
    {
      uint64_t v100 = type metadata accessor for TaskPriority();
      uint64_t v101 = (uint64_t)v106;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v100 - 8) + 56))(v106, 1, 1, v100);
      uint64_t v102 = swift_allocObject();
      swift_weakInit();
      unsigned int v103 = (void *)swift_allocObject();
      v103[2] = 0;
      v103[3] = 0;
      v103[4] = v102;
      swift_retain();
      sub_100B107F4(v101, (uint64_t)&unk_1016996D8, (uint64_t)v103);
      swift_release();
      sub_100522F00(v101, &qword_101672BB0);
      swift_release();
    }
    sub_100C43B54((uint64_t)v113, (uint64_t)&_swiftEmptySetSingleton, 0);
    return (void *)swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_100C43924(uint64_t a1, uint64_t a2)
{
  uint64_t v25 = a2;
  uint64_t v23 = a1;
  uint64_t v26 = type metadata accessor for CRLBoardDataStore.KeyValueTableKey(0);
  __chkstk_darwin(v26, v3);
  Swift::String v27 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for DispatchPredicate();
  uint64_t v6 = *(void *)(v5 - 8);
  __n128 v8 = __chkstk_darwin(v5, v7);
  uint64_t v10 = (uint64_t *)((char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v24 = v2;
  uint64_t v11 = *(void **)(v2 + OBJC_IVAR____TtC8Freeform17CRLBoardDataStore_writeQueue);
  *uint64_t v10 = v11;
  uint64_t v12 = enum case for DispatchPredicate.onQueue(_:);
  uint64_t v13 = *(void (**)(void *, uint64_t, uint64_t))(v6 + 104);
  ((void (*)(void *, void, uint64_t, __n128))v13)(v10, enum case for DispatchPredicate.onQueue(_:), v5, v8);
  id v14 = v11;
  char v15 = _dispatchPreconditionTest(_:)();
  __n128 v16 = *(uint64_t (**)(void *, uint64_t))(v6 + 8);
  uint64_t result = v16(v10, v5);
  if (v15)
  {
    uint64_t v18 = (uint64_t)v27;
    swift_storeEnumTagMultiPayload();
    *uint64_t v10 = v14;
    v13(v10, v12, v5);
    id v19 = v14;
    char v20 = _dispatchPreconditionTest(_:)();
    uint64_t result = v16(v10, v5);
    if (v20)
    {
      uint64_t v21 = v25;
      swift_bridgeObjectRetain();
      sub_100C864D4(v18, 0, 0, v24, v23, v21);
      return sub_100CE14B4(v18, type metadata accessor for CRLBoardDataStore.KeyValueTableKey);
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_100C43B54(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v7 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v21 = *(void *)(v7 - 8);
  __chkstk_darwin(v7, v8);
  uint64_t v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = type metadata accessor for DispatchQoS();
  uint64_t v11 = *(void *)(v20 - 8);
  __chkstk_darwin(v20, v12);
  id v14 = (char *)&v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10050BF48(0, (unint64_t *)&qword_1016725C0);
  char v15 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = a1;
  *(void *)(v16 + 24) = a2;
  *(unsigned char *)(v16 + 32) = a3;
  *(void *)(v16 + 4sub_100C38440(1, 0) = v3;
  aBlock[4] = sub_100CE5E7C;
  aBlock[5] = v16;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = *(void *)"";
  aBlock[2] = sub_100679958;
  aBlock[3] = &unk_101528870;
  uint64_t v17 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v18 = v3;
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_100CDE0D8((unint64_t *)&qword_1016747E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_1005057FC((uint64_t *)&unk_1016725D0);
  sub_100523288((unint64_t *)&qword_1016747F0, (uint64_t *)&unk_1016725D0);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v17);

  (*(void (**)(char *, uint64_t))(v21 + 8))(v10, v7);
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v14, v20);
}

void sub_100C43E5C(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  sub_1005057FC(&qword_10168B3D0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117DF40;
  *(void *)(inited + 32) = 0xD000000000000017;
  *(void *)(inited + 4sub_100C38440(1, 0) = 0x8000000101240F40;
  uint64_t v9 = sub_1005057FC(&qword_101677400);
  *(void *)(inited + 48) = a1;
  *(void *)(inited + 72) = v9;
  *(void *)(inited + 8sub_100C38440(1, 0) = 0xD00000000000001BLL;
  *(void *)(inited + 88) = 0x800000010127C680;
  *(void *)(inited + 96) = a2;
  *(void *)(inited + 12sub_100C38440(1, 0) = v9;
  *(void *)(inited + 128) = 0x446C61636F4C7369;
  *(void *)(inited + 136) = 0xEF6E6F6974656C65;
  *(void *)(inited + 168) = &type metadata for Bool;
  *(unsigned char *)(inited + 144) = a3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  unint64_t v10 = sub_100A39A60(inited);
  id v11 = [self defaultCenter];
  if (qword_10166FE00 != -1) {
    swift_once();
  }
  uint64_t v12 = qword_10171C2F8;
  sub_100ED2BB8(v10);
  swift_bridgeObjectRelease();
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v11 postNotificationName:v12 object:a4 userInfo:isa];
}

uint64_t sub_100C44024(uint64_t a1, char a2, char a3, uint64_t a4)
{
  uint64_t v9 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9, v11);
  uint64_t v13 = (char *)&v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for DispatchQoS();
  uint64_t result = __chkstk_darwin(v14, v15);
  id v19 = (char *)&v24 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(void *)(a1 + 16))
  {
    uint64_t v27 = result;
    uint64_t v25 = v17;
    sub_10050BF48(0, (unint64_t *)&qword_1016725C0);
    uint64_t v26 = static OS_dispatch_queue.main.getter();
    uint64_t v20 = swift_allocObject();
    *(void *)(v20 + 16) = v4;
    *(void *)(v20 + 24) = a1;
    *(unsigned char *)(v20 + 32) = a2 & 1;
    *(unsigned char *)(v20 + 33) = a3 & 1;
    *(void *)(v20 + 4sub_100C38440(1, 0) = a4;
    aBlock[4] = sub_100CE6228;
    aBlock[5] = v20;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = *(void *)"";
    aBlock[2] = sub_100679958;
    aBlock[3] = &unk_101528910;
    uint64_t v21 = _Block_copy(aBlock);
    id v22 = v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_release();
    static DispatchQoS.unspecified.getter();
    aBlock[0] = _swiftEmptyArrayStorage;
    sub_100CDE0D8((unint64_t *)&qword_1016747E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_1005057FC((uint64_t *)&unk_1016725D0);
    sub_100523288((unint64_t *)&qword_1016747F0, (uint64_t *)&unk_1016725D0);
    dispatch thunk of SetAlgebra.init<A>(_:)();
    uint64_t v23 = (void *)v26;
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v21);

    (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
    return (*(uint64_t (**)(char *, uint64_t))(v25 + 8))(v19, v27);
  }
  return result;
}

void sub_100C44348(uint64_t a1, uint64_t a2, char a3, char a4, uint64_t a5)
{
  id v9 = [self defaultCenter];
  if (qword_10166FE08 != -1) {
    swift_once();
  }
  uint64_t v12 = qword_10171C300;
  sub_1005057FC(&qword_101677430);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117E800;
  AnyHashable.init<A>(_:)();
  *(void *)(inited + 96) = sub_1005057FC(&qword_101677400);
  *(void *)(inited + 72) = a2;
  swift_bridgeObjectRetain();
  AnyHashable.init<A>(_:)();
  *(void *)(inited + 168) = &type metadata for Bool;
  *(unsigned char *)(inited + 144) = a3 & 1;
  AnyHashable.init<A>(_:)();
  *(void *)(inited + 24sub_100C38440(1, 0) = &type metadata for Bool;
  *(unsigned char *)(inited + 216) = a4 & 1;
  AnyHashable.init<A>(_:)();
  *(void *)(inited + 312) = sub_1005057FC(&qword_101699728);
  *(void *)(inited + 288) = a5;
  swift_bridgeObjectRetain();
  sub_100A393A8(inited);
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v9 postNotificationName:v12 object:a1 userInfo:isa];
}

uint64_t sub_100C445A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v26 = a3;
  uint64_t v27 = a4;
  uint64_t v25 = a2;
  uint64_t v5 = v4;
  uint64_t v7 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v30 = *(void *)(v7 - 8);
  __chkstk_darwin(v7, v8);
  uint64_t v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for DispatchQoS();
  uint64_t v28 = *(void *)(v11 - 8);
  uint64_t v29 = v11;
  __chkstk_darwin(v11, v12);
  uint64_t v14 = (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for CRLBoardIdentifier(0);
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(void *)(v16 + 64);
  __chkstk_darwin(v15 - 8, v18);
  sub_10050BF48(0, (unint64_t *)&qword_1016725C0);
  id v19 = (void *)static OS_dispatch_queue.main.getter();
  sub_100CE144C(a1, (uint64_t)&v25 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for CRLBoardIdentifier);
  unint64_t v20 = (*(unsigned __int8 *)(v16 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  uint64_t v21 = swift_allocObject();
  *(void *)(v21 + 16) = v5;
  sub_100CE12D8((uint64_t)&v25 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0), v21 + v20, type metadata accessor for CRLBoardIdentifier);
  aBlock[4] = v26;
  aBlock[5] = v21;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = *(void *)"";
  aBlock[2] = sub_100679958;
  aBlock[3] = v27;
  id v22 = _Block_copy(aBlock);
  id v23 = v5;
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_100CDE0D8((unint64_t *)&qword_1016747E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_1005057FC((uint64_t *)&unk_1016725D0);
  sub_100523288((unint64_t *)&qword_1016747F0, (uint64_t *)&unk_1016725D0);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v22);

  (*(void (**)(char *, uint64_t))(v30 + 8))(v10, v7);
  return (*(uint64_t (**)(char *, uint64_t))(v28 + 8))(v14, v29);
}

void sub_100C44938(uint64_t a1, uint64_t a2, void *a3, uint64_t *a4)
{
  id v8 = [self defaultCenter];
  if (*a3 != -1) {
    swift_once();
  }
  uint64_t v9 = *a4;
  sub_1005057FC(&qword_101677430);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117E810;
  AnyHashable.init<A>(_:)();
  sub_1005057FC(&qword_10167ADD0);
  uint64_t v11 = *(void *)(type metadata accessor for CRLBoardIdentifier(0) - 8);
  unint64_t v12 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_10117E810;
  sub_100CE144C(a2, v13 + v12, type metadata accessor for CRLBoardIdentifier);
  uint64_t v14 = sub_100CDDF48(v13);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  *(void *)(inited + 96) = sub_1005057FC(&qword_101677400);
  *(void *)(inited + 72) = v14;
  sub_100A393A8(inited);
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v8 postNotificationName:v9 object:a1 userInfo:isa];
}

uint64_t sub_100C44B7C()
{
  uint64_t v1 = type metadata accessor for CRLBoardDataStore.KeyValueTableKey(0);
  __chkstk_darwin(v1, v2);
  uint64_t v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10166FBB8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  id v5 = (id)static OS_os_log.upgrade;
  uint64_t v6 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v5, (uint64_t)&_mh_execute_header, v6, (uint64_t)"Running upgrade code for rdar://102994991", 41, 2, (uint64_t)_swiftEmptyArrayStorage);

  uint64_t v7 = swift_storeEnumTagMultiPayload();
  __chkstk_darwin(v7, v8);
  v10[-4] = v0;
  *(_OWORD *)&v10[-3] = xmmword_101190880;
  v10[-1] = v4;
  OS_dispatch_queue.sync<A>(execute:)();
  return sub_100CE14B4((uint64_t)v4, type metadata accessor for CRLBoardDataStore.KeyValueTableKey);
}

uint64_t sub_100C44E94()
{
  if (qword_10166FBB8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  id v0 = (id)static OS_os_log.upgrade;
  uint64_t v1 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v0, (uint64_t)&_mh_execute_header, v1, (uint64_t)"Running upgrade code for rdar://119152219", 41, 2, (uint64_t)_swiftEmptyArrayStorage);

  __chkstk_darwin(v2, v3);
  return OS_dispatch_queue.sync<A>(execute:)();
}

void sub_100C44FFC(void *a1)
{
  uint64_t v1 = a1;
  sub_100546594(v1);
}

uint64_t sub_100C4503C(int a1)
{
  uint64_t v4 = type metadata accessor for DispatchPredicate();
  uint64_t v5 = *(void *)(v4 - 8);
  __n128 v7 = __chkstk_darwin(v4, v6);
  uint64_t v9 = (uint64_t *)((char *)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v10 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform17CRLBoardDataStore_writeQueue);
  *uint64_t v9 = v10;
  uint64_t v11 = *(void (**)(void *, __n128))(v5 + 104);
  unsigned int v44 = enum case for DispatchPredicate.onQueue(_:);
  v11(v9, v7);
  id v12 = v10;
  LOBYTE(v1sub_100C38440(1, 0) = _dispatchPreconditionTest(_:)();
  uint64_t v43 = *(void (**)(void *, uint64_t))(v5 + 8);
  v43(v9, v4);
  if ((v10 & 1) == 0)
  {
    __break(1u);
    goto LABEL_16;
  }
  uint64_t v45 = 0;
  unint64_t v46 = 0xE000000000000000;
  _StringGuts.grow(_:)(30);
  swift_bridgeObjectRelease();
  type metadata accessor for SQLiteStatement();
  swift_initStackObject();
  uint64_t v13 = swift_retain();
  uint64_t v14 = sub_10079FC40(v13, 0xD000000000000037, 0x800000010127F950);
  if (v2)
  {
LABEL_13:
    swift_release();
    if (qword_10166FB70 == -1)
    {
LABEL_14:
      swift_beginAccess();
      uint64_t v33 = (void *)static OS_os_log.boardStore;
      sub_1005057FC((uint64_t *)&unk_101672B40);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_10117E810;
      swift_getErrorValue();
      id v35 = v33;
      uint64_t v36 = Error.localizedDescription.getter();
      uint64_t v38 = v37;
      *(void *)(inited + 56) = &type metadata for String;
      *(void *)(inited + 64) = sub_100528BE4();
      *(void *)(inited + 32) = v36;
      *(void *)(inited + 4sub_100C38440(1, 0) = v38;
      uint64_t v39 = static os_log_type_t.error.getter();
      sub_100BAC898((uint64_t)v35, (uint64_t)&_mh_execute_header, v39, (uint64_t)"Failed to removeAllBoardItemDatabaseRows with error %@", 54, 2, inited);
      swift_setDeallocating();
      sub_1005057FC(&qword_101672B50);
      swift_arrayDestroy();

      return swift_willThrow();
    }
LABEL_16:
    swift_once();
    goto LABEL_14;
  }
  uint64_t v15 = v14;
  uint64_t v40 = 0;
  swift_release();
  uint64_t v16 = *(void **)(*(void *)(v15 + 16) + 32);
  *uint64_t v9 = v16;
  ((void (*)(void *, void, uint64_t))v11)(v9, v44, v4);
  id v17 = v16;
  LOBYTE(v16) = _dispatchPreconditionTest(_:)();
  uint64_t v18 = v43;
  v43(v9, v4);
  if ((v16 & 1) == 0)
  {
    __break(1u);
    goto LABEL_18;
  }
  id v19 = (sqlite3_stmt **)(v15 + 24);
  swift_beginAccess();
  sqlite3_bind_int(*(sqlite3_stmt **)(v15 + 24), 1, a1);
  uint64_t v41 = v15;
  unint64_t v20 = *(void **)(*(void *)(v15 + 16) + 32);
  *uint64_t v9 = v20;
  Swift::String v42 = (void (*)(void *, void, uint64_t))v11;
  ((void (*)(void *, void, uint64_t))v11)(v9, v44, v4);
  id v21 = v20;
  LOBYTE(v2sub_100C38440(1, 0) = _dispatchPreconditionTest(_:)();
  v18(v9, v4);
  if ((v20 & 1) == 0)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  int v22 = sqlite3_step(*v19);
  if (v22 != 101)
  {
    int v27 = v22;
    sub_10079FF00();
    swift_allocError();
    *(_DWORD *)uint64_t v28 = v27;
    *(void *)(v28 + 8) = 0xD00000000000003ELL;
    *(void *)(v28 + 16) = 0x800000010127F9D0;
    swift_willThrow();
    uint64_t v29 = v41;
    uint64_t v30 = *(void **)(*(void *)(v41 + 16) + 32);
    *uint64_t v9 = v30;
    v42(v9, v44, v4);
    id v31 = v30;
    char v32 = _dispatchPreconditionTest(_:)();
    v43(v9, v4);
    if ((v32 & 1) == 0) {
      goto LABEL_20;
    }
    if (*v19)
    {
      sqlite3_finalize(*v19);
      *(void *)(v29 + 24) = 0;
    }
    goto LABEL_13;
  }
  id v23 = *(void **)(*(void *)(v41 + 16) + 32);
  *uint64_t v9 = v23;
  v42(v9, v44, v4);
  id v24 = v23;
  char v25 = _dispatchPreconditionTest(_:)();
  v43(v9, v4);
  if ((v25 & 1) == 0)
  {
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
  }
  if (*v19)
  {
    sqlite3_finalize(*v19);
    *id v19 = 0;
  }
  return swift_release();
}

void sub_100C4560C()
{
  if (qword_10166FBB8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  id v0 = (id)static OS_os_log.upgrade;
  uint64_t v1 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v0, (uint64_t)&_mh_execute_header, v1, (uint64_t)"Running upgrade code for rdar://105187224", 41, 2, (uint64_t)_swiftEmptyArrayStorage);

  sub_100C45724(0);
  sub_100C45724(1);
  id v2 = (id)static OS_os_log.upgrade;
  uint64_t v3 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v2, (uint64_t)&_mh_execute_header, v3, (uint64_t)"Finished running upgrade code for rdar://105187224", 50, 2, (uint64_t)_swiftEmptyArrayStorage);
}

void sub_100C45724(int a1)
{
  uint64_t v3 = type metadata accessor for CKSyncEngine.State.Serialization();
  uint64_t v79 = *(void *)(v3 - 8);
  uint64_t v80 = v3;
  __chkstk_darwin(v3, v4);
  uint64_t v84 = (char *)&v71 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for CRLBoardDataStore.KeyValueTableKey(0);
  __chkstk_darwin(v6, v6);
  uint64_t v78 = (char *)&v71 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8, v9);
  uint64_t v11 = (char *)&v71 - v10;
  __chkstk_darwin(v12, v13);
  uint64_t v16 = (char *)&v71 - v15;
  if (a1) {
    int v17 = 6;
  }
  else {
    int v17 = 5;
  }
  uint64_t v83 = v14;
  int v82 = v17;
  swift_storeEnumTagMultiPayload();
  uint64_t v88 = v1;
  unsigned int v89 = v16;
  sub_1005057FC(&qword_10168DB00);
  OS_dispatch_queue.sync<A>(execute:)();
  LODWORD(v87) = a1;
  uint64_t v85 = v90;
  unint64_t v86 = v91;
  sub_100CE14B4((uint64_t)v16, type metadata accessor for CRLBoardDataStore.KeyValueTableKey);
  if (qword_10166FBB8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v18 = (void *)static OS_os_log.upgrade;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t v19 = swift_allocObject();
  uint64_t v20 = v19;
  *(_OWORD *)(v19 + 16) = xmmword_10117E810;
  if (a1) {
    uint64_t v21 = 0x5320646572616853;
  }
  else {
    uint64_t v21 = 0x2065746176697250;
  }
  if (a1) {
    unint64_t v22 = 0xEC00000065706F63;
  }
  else {
    unint64_t v22 = 0xED000065706F6353;
  }
  *(void *)(v19 + 56) = &type metadata for String;
  *(void *)(v19 + 64) = sub_100528BE4();
  *(void *)(v20 + 32) = v21;
  *(void *)(v20 + 4sub_100C38440(1, 0) = v22;
  id v23 = v18;
  uint64_t v24 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v23, (uint64_t)&_mh_execute_header, v24, (uint64_t)"Successfully fetched %{public}@ oldSyncMetadata", 47, 2, v20);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();
  swift_deallocClassInstance();

  uint64_t v25 = swift_storeEnumTagMultiPayload();
  __chkstk_darwin(v25, v26);
  OS_dispatch_queue.sync<A>(execute:)();
  sub_100CE14B4((uint64_t)v11, type metadata accessor for CRLBoardDataStore.KeyValueTableKey);
  char v27 = v87;
  if (qword_10166FBB8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v28 = (void *)static OS_os_log.upgrade;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  uint64_t v30 = inited;
  *(_OWORD *)(inited + 16) = xmmword_10117E810;
  BOOL v31 = (v27 & 1) == 0;
  if (v27) {
    uint64_t v32 = 0x5320646572616853;
  }
  else {
    uint64_t v32 = 0x2065746176697250;
  }
  if (v31) {
    unint64_t v33 = 0xED000065706F6353;
  }
  else {
    unint64_t v33 = 0xEC00000065706F63;
  }
  *(void *)(inited + 56) = &type metadata for String;
  *(void *)(inited + 64) = sub_100528BE4();
  *(void *)(v30 + 32) = v32;
  *(void *)(v30 + 4sub_100C38440(1, 0) = v33;
  id v34 = v28;
  uint64_t v35 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v34, (uint64_t)&_mh_execute_header, v35, (uint64_t)"Successfully deleted %{public}@ syncMetadata database entry", 59, 2, v30);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  type metadata accessor for PropertyListEncoder();
  swift_allocObject();
  uint64_t v36 = PropertyListEncoder.init()();
  unint64_t v37 = v86;
  uint64_t v81 = v36;
  if (v86 >> 60 == 15)
  {
    if (qword_10166FBB8 != -1) {
      swift_once();
    }
    swift_beginAccess();
    uint64_t v38 = (void *)static OS_os_log.upgrade;
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t v39 = swift_initStackObject();
    uint64_t v40 = v39;
    *(_OWORD *)(v39 + 16) = xmmword_10117E810;
    if (v87) {
      uint64_t v41 = 0x5320646572616853;
    }
    else {
      uint64_t v41 = 0x2065746176697250;
    }
    if (v87) {
      unint64_t v42 = 0xEC00000065706F63;
    }
    else {
      unint64_t v42 = 0xED000065706F6353;
    }
    *(void *)(v39 + 56) = &type metadata for String;
    *(void *)(v39 + 64) = sub_100528BE4();
    *(void *)(v40 + 32) = v41;
    *(void *)(v40 + 4sub_100C38440(1, 0) = v42;
    id v43 = v38;
    uint64_t v44 = static os_log_type_t.default.getter();
    sub_100BAC898((uint64_t)v43, (uint64_t)&_mh_execute_header, v44, (uint64_t)"There was no %{public}@ oldSyncMetadata to convert.", 51, 2, v40);
    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();

    if (qword_10166FBB8 != -1) {
      swift_once();
    }
    swift_beginAccess();
    uint64_t v45 = (void *)static OS_os_log.upgrade;
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t v46 = swift_initStackObject();
    uint64_t v47 = v46;
    *(_OWORD *)(v46 + 16) = xmmword_10117E810;
    if (v87) {
      uint64_t v48 = 0x5320646572616853;
    }
    else {
      uint64_t v48 = 0x2065746176697250;
    }
    if (v87) {
      unint64_t v49 = 0xEC00000065706F63;
    }
    else {
      unint64_t v49 = 0xED000065706F6353;
    }
    *(void *)(v46 + 56) = &type metadata for String;
    *(void *)(v46 + 64) = sub_100528BE4();
    *(void *)(v47 + 32) = v48;
    *(void *)(v47 + 4sub_100C38440(1, 0) = v49;
    id v50 = v45;
    uint64_t v51 = static os_log_type_t.default.getter();
    sub_100BAC898((uint64_t)v50, (uint64_t)&_mh_execute_header, v51, (uint64_t)"There was no converted %{public}@ oldSyncMetadata to save.", 58, 2, v47);
    sub_100514260(v85, v37);
    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();
    swift_release();
  }
  else
  {
    sub_100510D4C(v85, v86);
    CKSyncEngine.State.Serialization.init(deprecatedData:)();
    sub_100CDE0D8(&qword_10167B490, (void (*)(uint64_t))&type metadata accessor for CKSyncEngine.State.Serialization);
    uint64_t v76 = dispatch thunk of PropertyListEncoder.encode<A>(_:)();
    unint64_t v77 = v52;
    unint64_t v53 = 0xED000065706F6353;
    if (qword_10166FBB8 != -1) {
      swift_once();
    }
    swift_beginAccess();
    id v54 = (void *)static OS_os_log.upgrade;
    uint64_t v72 = sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t v55 = swift_initStackObject();
    uint64_t v56 = (void *)v55;
    long long v71 = xmmword_10117E810;
    *(_OWORD *)(v55 + 16) = xmmword_10117E810;
    if (v87) {
      uint64_t v57 = 0x5320646572616853;
    }
    else {
      uint64_t v57 = 0x2065746176697250;
    }
    if (v87) {
      unint64_t v53 = 0xEC00000065706F63;
    }
    *(void *)(v55 + 56) = &type metadata for String;
    unint64_t v58 = sub_100528BE4();
    uint64_t v74 = v57;
    unint64_t v75 = v58;
    v56[8] = v58;
    v56[4] = v57;
    unint64_t v73 = v53;
    v56[5] = v53;
    id v59 = v54;
    uint64_t v60 = static os_log_type_t.default.getter();
    sub_100BAC898((uint64_t)v59, (uint64_t)&_mh_execute_header, v60, (uint64_t)"Successfully converted %{public}@ oldSyncMetadata into new format.", 66, 2, (uint64_t)v56);
    swift_setDeallocating();
    uint64_t v87 = sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();

    (*(void (**)(char *, uint64_t))(v79 + 8))(v84, v80);
    uint64_t v61 = (uint64_t)v78;
    uint64_t v62 = swift_storeEnumTagMultiPayload();
    __chkstk_darwin(v62, v63);
    uint64_t v64 = v76;
    unint64_t v65 = v77;
    sub_100510D4C(v76, v77);
    OS_dispatch_queue.sync<A>(execute:)();
    sub_100CE14B4(v61, type metadata accessor for CRLBoardDataStore.KeyValueTableKey);
    uint64_t v66 = (void *)static OS_os_log.upgrade;
    uint64_t v67 = swift_initStackObject();
    *(_OWORD *)(v67 + 16) = v71;
    unint64_t v68 = v75;
    *(void *)(v67 + 56) = &type metadata for String;
    *(void *)(v67 + 64) = v68;
    *(void *)(v67 + 32) = v74;
    *(void *)(v67 + 4sub_100C38440(1, 0) = v73;
    id v69 = v66;
    uint64_t v70 = static os_log_type_t.default.getter();
    sub_100BAC898((uint64_t)v69, (uint64_t)&_mh_execute_header, v70, (uint64_t)"Successfully saved the new format of %{public}@ sync metadata", 61, 2, v67);
    sub_100514260(v85, v86);
    sub_100510084(v64, v65);
    sub_100510084(v64, v65);
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_release();
  }
}

uint64_t sub_100C468A4()
{
  uint64_t v2 = type metadata accessor for DispatchPredicate();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2, v4);
  uint64_t v6 = (uint64_t *)((char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform17CRLBoardDataStore_queue);
  *uint64_t v6 = v7;
  uint64_t v8 = enum case for DispatchPredicate.onQueue(_:);
  uint64_t v19 = *(void (**)(void *, uint64_t, uint64_t))(v3 + 104);
  v19(v6, enum case for DispatchPredicate.onQueue(_:), v2);
  id v18 = v7;
  LOBYTE(v7) = _dispatchPreconditionTest(_:)();
  uint64_t v9 = *(uint64_t (**)(void *, uint64_t))(v3 + 8);
  uint64_t result = v9(v6, v2);
  if ((v7 & 1) == 0)
  {
    __break(1u);
LABEL_7:
    __break(1u);
    return result;
  }
  uint64_t result = sub_100C46A98();
  if (!v1)
  {
    uint64_t v17 = result;
    uint64_t v11 = v18;
    *uint64_t v6 = v18;
    v19(v6, v8, v2);
    id v12 = v11;
    char v13 = _dispatchPreconditionTest(_:)();
    uint64_t result = v9(v6, v2);
    if (v13)
    {
      uint64_t v14 = sub_100C49494();
      unint64_t v15 = sub_100C2FED0(v14);
      swift_bridgeObjectRelease();
      uint64_t v16 = sub_100CDDF48(v15);
      swift_bridgeObjectRelease();
      return sub_100ED90F8(v16, v17);
    }
    goto LABEL_7;
  }
  return result;
}

uint64_t sub_100C46A98()
{
  uint64_t v2 = type metadata accessor for CRLBoardIdentifierStorage(0);
  __chkstk_darwin(v2 - 8, v3);
  uint64_t v139 = (uint64_t)&v130 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for CRLBoardIdentifier(0);
  uint64_t v7 = __chkstk_darwin(v5 - 8, v6);
  uint64_t v138 = (uint64_t)&v130 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v7, v9);
  uint64_t v137 = (uint64_t)&v130 - v11;
  uint64_t v13 = __chkstk_darwin(v10, v12);
  uint64_t v136 = (uint64_t)&v130 - v14;
  uint64_t v16 = __chkstk_darwin(v13, v15);
  uint64_t v135 = (uint64_t)&v130 - v17;
  __chkstk_darwin(v16, v18);
  uint64_t v134 = (uint64_t)&v130 - v19;
  uint64_t v20 = type metadata accessor for DispatchPredicate();
  uint64_t v21 = *(void *)(v20 - 8);
  __chkstk_darwin(v20, v22);
  uint64_t v24 = (uint64_t *)((char *)&v130 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v25 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform17CRLBoardDataStore_queue);
  *uint64_t v24 = v25;
  uint64_t v26 = *(void (**)(void))(v21 + 104);
  unsigned int v144 = enum case for DispatchPredicate.onQueue(_:);
  uint64_t v145 = v21 + 104;
  uint64_t v150 = (void (*)(void *, uint64_t, uint64_t))v26;
  v26(v24);
  id v27 = v25;
  LOBYTE(v25) = _dispatchPreconditionTest(_:)();
  uint64_t v30 = *(void (**)(void *, uint64_t))(v21 + 8);
  uint64_t v29 = v21 + 8;
  uint64_t v28 = v30;
  v30(v24, v20);
  if ((v25 & 1) == 0)
  {
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  CKRecordID v151 = v28;
  uint64_t v153 = 0;
  unint64_t v154 = 0xE000000000000000;
  _StringGuts.grow(_:)(102);
  v31._countAndFlagsBits = 0x205443454C4553;
  v31._object = (void *)0xE700000000000000;
  String.append(_:)(v31);
  v32._countAndFlagsBits = 0x736472616F62;
  v32._object = (void *)0xE600000000000000;
  String.append(_:)(v32);
  v33._countAndFlagsBits = 46;
  v33._object = (void *)0xE100000000000000;
  String.append(_:)(v33);
  v34._countAndFlagsBits = 0xD000000000000010;
  v34._object = (void *)0x8000000101262BA0;
  String.append(_:)(v34);
  v35._countAndFlagsBits = 0x204D4F524620;
  v35._object = (void *)0xE600000000000000;
  String.append(_:)(v35);
  v36._countAndFlagsBits = 0x736472616F62;
  v36._object = (void *)0xE600000000000000;
  String.append(_:)(v36);
  v37._countAndFlagsBits = 0x4A2052454E4E4920;
  v37._object = (void *)0xEC000000204E494FLL;
  String.append(_:)(v37);
  v38._countAndFlagsBits = 0x74695F6472616F62;
  v38._object = (void *)0xEB00000000736D65;
  String.append(_:)(v38);
  v39._countAndFlagsBits = 542002976;
  v39._object = (void *)0xE400000000000000;
  String.append(_:)(v39);
  v40._countAndFlagsBits = 0x74695F6472616F62;
  v40._object = (void *)0xEB00000000736D65;
  String.append(_:)(v40);
  v41._countAndFlagsBits = 46;
  v41._object = (void *)0xE100000000000000;
  String.append(_:)(v41);
  v42._countAndFlagsBits = 0xD000000000000010;
  v42._object = (void *)0x8000000101262BA0;
  String.append(_:)(v42);
  v43._countAndFlagsBits = 2112800;
  v43._object = (void *)0xE300000000000000;
  String.append(_:)(v43);
  v44._countAndFlagsBits = 0x736472616F62;
  v44._object = (void *)0xE600000000000000;
  String.append(_:)(v44);
  v45._countAndFlagsBits = 46;
  v45._object = (void *)0xE100000000000000;
  String.append(_:)(v45);
  v46._countAndFlagsBits = 0xD000000000000010;
  v46._object = (void *)0x8000000101262BA0;
  String.append(_:)(v46);
  v47._countAndFlagsBits = 0x20455245485720;
  v47._object = (void *)0xE700000000000000;
  String.append(_:)(v47);
  v48._countAndFlagsBits = 0x736472616F62;
  v48._object = (void *)0xE600000000000000;
  String.append(_:)(v48);
  v49._countAndFlagsBits = 46;
  v49._object = (void *)0xE100000000000000;
  String.append(_:)(v49);
  v50._countAndFlagsBits = 0xD000000000000014;
  v50._object = (void *)0x800000010127BB50;
  String.append(_:)(v50);
  v51._countAndFlagsBits = 0x20524F203F203E20;
  v51._object = (void *)0xE900000000000028;
  String.append(_:)(v51);
  v52._countAndFlagsBits = 0x74695F6472616F62;
  v52._object = (void *)0xEB00000000736D65;
  String.append(_:)(v52);
  v53._countAndFlagsBits = 46;
  v53._object = (void *)0xE100000000000000;
  String.append(_:)(v53);
  v54._countAndFlagsBits = 0xD000000000000014;
  v54._object = (void *)0x800000010127BB50;
  String.append(_:)(v54);
  v55._countAndFlagsBits = 0x444E41203F203E20;
  v55._object = (void *)0xEA00000000002820;
  String.append(_:)(v55);
  v56._countAndFlagsBits = 0x74695F6472616F62;
  v56._object = (void *)0xEB00000000736D65;
  String.append(_:)(v56);
  v57._countAndFlagsBits = 46;
  v57._object = (void *)0xE100000000000000;
  String.append(_:)(v57);
  v58._countAndFlagsBits = 0x6F5F7463656A626FLL;
  v58._object = (void *)0xEE00736E6F697470;
  String.append(_:)(v58);
  v59._object = (void *)0xEA00000000002930;
  v59._countAndFlagsBits = 0x203E20293F202620;
  String.append(_:)(v59);
  uint64_t v60 = v153;
  uint64_t v61 = v154;
  type metadata accessor for SQLiteStatement();
  swift_initStackObject();
  uint64_t v62 = swift_retain();
  uint64_t v63 = sub_10079FC40(v62, v60, v61);
  uint64_t v142 = v1;
  if (v1)
  {
    swift_release();
    if (qword_10166FB70 == -1)
    {
LABEL_4:
      swift_beginAccess();
      uint64_t v64 = (void *)static OS_os_log.boardStore;
      sub_1005057FC((uint64_t *)&unk_101672B40);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_10117E810;
      swift_getErrorValue();
      id v66 = v64;
      uint64_t v67 = Error.localizedDescription.getter();
      uint64_t v69 = v68;
      *(void *)(inited + 56) = &type metadata for String;
      *(void *)(inited + 64) = sub_100528BE4();
      *(void *)(inited + 32) = v67;
      *(void *)(inited + 4sub_100C38440(1, 0) = v69;
      uint64_t v70 = static os_log_type_t.error.getter();
      sub_100BAC898((uint64_t)v66, (uint64_t)&_mh_execute_header, v70, (uint64_t)"Failed to fetch list of unsupported boards with error %@", 56, 2, inited);
      swift_setDeallocating();
      sub_1005057FC(&qword_101672B50);
      swift_arrayDestroy();

      swift_willThrow();
      return v67;
    }
LABEL_33:
    swift_once();
    goto LABEL_4;
  }
  uint64_t v71 = v63;
  swift_release();
  sqlite3_int64 v72 = sub_1002094A4();
  sub_10079D8A8(v72, 1);
  sub_10079D8A8(v72, 2);
  sub_10079D8A8(1, 3);
  Swift::String v152 = &_swiftEmptySetSingleton;
  uint64_t v73 = *(void *)(v71 + 16);
  uint64_t v133 = v71 + 16;
  uint64_t v74 = *(void **)(v73 + 32);
  *uint64_t v24 = v74;
  uint64_t v75 = v144;
  uint64_t v76 = v150;
  v150(v24, v144, v20);
  id v77 = v74;
  LOBYTE(v74) = _dispatchPreconditionTest(_:)();
  v151(v24, v20);
  if ((v74 & 1) == 0)
  {
    __break(1u);
    goto LABEL_35;
  }
  type metadata accessor for SQLiteRowIterator();
  uint64_t v78 = v75;
  uint64_t v79 = (void *)swift_initStackObject();
  v79[3] = 0;
  char v143 = v79 + 3;
  v79[4] = 0;
  int v131 = v79 + 4;
  uint64_t v132 = v71;
  v79[5] = 1;
  void v79[2] = v71;
  uint64_t v80 = *(void **)(*(void *)(v71 + 16) + 32);
  *uint64_t v24 = v80;
  swift_retain();
  v76(v24, v78, v20);
  id v81 = v80;
  LOBYTE(v8sub_100C38440(1, 0) = _dispatchPreconditionTest(_:)();
  uint64_t v149 = v29;
  v151(v24, v20);
  if ((v80 & 1) == 0)
  {
LABEL_29:
    __break(1u);
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  uint64_t v82 = v78;
  uint64_t v83 = v132;
  uint64_t v84 = v133;
  uint64_t v140 = v20;
  uint64_t v141 = v79;
  while (1)
  {
    uint64_t v94 = v79[3];
    uint64_t v95 = v79[4];
    uint64_t v96 = v79[5];
    uint64_t v97 = v143;
    *char v143 = 0;
    v97[1] = 0;
    v79[5] = 1;
    sub_1007A0344(v94, v95, v96);
    uint64_t v148 = (sqlite3_stmt **)(v83 + 24);
    swift_beginAccess();
    unsigned int v98 = sqlite3_step(*(sqlite3_stmt **)(v83 + 24));
    if (v98 != 100) {
      break;
    }
    uint64_t v99 = v83;
    uint64_t v100 = *(void **)(*(void *)v84 + 32);
    *uint64_t v24 = v100;
    uint64_t v101 = v150;
    v150(v24, v82, v20);
    uint64_t v146 = v99;
    swift_retain();
    id v102 = v100;
    int v147 = _dispatchPreconditionTest(_:)();
    unsigned int v103 = v151;
    v151(v24, v20);
    if ((v147 & 1) == 0) {
      goto LABEL_30;
    }
    uint64_t v104 = *(void **)(*(void *)v84 + 32);
    *uint64_t v24 = v104;
    v101(v24, v82, v20);
    id v105 = v104;
    char v106 = _dispatchPreconditionTest(_:)();
    v103(v24, v20);
    if ((v106 & 1) == 0) {
      goto LABEL_31;
    }
    uint64_t v107 = v148;
    if (sqlite3_column_type(*v148, 0) == 5)
    {
      uint64_t v108 = v144;
LABEL_18:
      uint64_t v79 = v141;
      if (qword_10166FB70 != -1) {
        swift_once();
      }
      swift_beginAccess();
      id v117 = (id)static OS_os_log.boardStore;
      uint64_t v118 = static os_log_type_t.error.getter();
      sub_100BAC898((uint64_t)v117, (uint64_t)&_mh_execute_header, v118, (uint64_t)"Failure reading board identifier data.", 38, 2, (uint64_t)_swiftEmptyArrayStorage);

      swift_release();
      goto LABEL_9;
    }
    uint64_t v109 = sqlite3_column_blob(*v107, 0);
    uint64_t v108 = v144;
    if (!v109) {
      goto LABEL_18;
    }
    unint64_t v110 = v109;
    int v111 = sqlite3_column_bytes(*v107, 0);
    uint64_t v112 = sub_100670608(v110, v111);
    unint64_t v114 = v113;
    sub_100510D4C(v112, v113);
    uint64_t v115 = v139;
    uint64_t v116 = v142;
    sub_100753724(v112, v114, v139);
    if (v116)
    {
      swift_errorRelease();
      sub_100510084(v112, v114);
      uint64_t v142 = 0;
      goto LABEL_18;
    }
    uint64_t v142 = 0;
    uint64_t v85 = v136;
    sub_100CE12D8(v115, v136, type metadata accessor for CRLBoardIdentifierStorage);
    uint64_t v86 = v135;
    sub_100CE12D8(v85, v135, type metadata accessor for CRLBoardIdentifier);
    uint64_t v87 = v86;
    uint64_t v88 = v134;
    sub_100CE12D8(v87, v134, type metadata accessor for CRLBoardIdentifier);
    uint64_t v89 = v138;
    sub_100CE144C(v88, v138, type metadata accessor for CRLBoardIdentifier);
    uint64_t v90 = v137;
    sub_100CB7090(v137, v89);
    swift_release();
    sub_100510084(v112, v114);
    sub_100CE14B4(v90, type metadata accessor for CRLBoardIdentifier);
    sub_100CE14B4(v88, type metadata accessor for CRLBoardIdentifier);
    uint64_t v79 = v141;
LABEL_9:
    uint64_t v82 = v108;
    uint64_t v83 = v79[2];
    uint64_t v84 = v83 + 16;
    unint64_t v91 = *(void **)(*(void *)(v83 + 16) + 32);
    *uint64_t v24 = v91;
    uint64_t v92 = v108;
    uint64_t v20 = v140;
    v150(v24, v92, v140);
    id v93 = v91;
    LOBYTE(v91) = _dispatchPreconditionTest(_:)();
    v151(v24, v20);
    if ((v91 & 1) == 0) {
      goto LABEL_29;
    }
  }
  uint64_t v119 = v150;
  if (v98 && v98 != 101)
  {
    uint64_t v120 = v98;
    uint64_t v121 = v79[3];
    uint64_t v122 = v79[4];
    uint64_t v123 = v79[5];
    v79[3] = v120;
    uint64_t v124 = v131;
    *int v131 = 0;
    v124[1] = 0;
    sub_1007A0344(v121, v122, v123);
  }
  swift_release();
  uint64_t v67 = (uint64_t)v152;
  uint64_t v125 = *(void **)(*(void *)v133 + 32);
  *uint64_t v24 = v125;
  v119(v24, v82, v20);
  id v126 = v125;
  LOBYTE(v125) = _dispatchPreconditionTest(_:)();
  v151(v24, v20);
  uint64_t v127 = v132;
  if ((v125 & 1) == 0) {
LABEL_35:
  }
    __break(1u);
  swift_beginAccess();
  uint64_t v128 = *(sqlite3_stmt **)(v127 + 24);
  if (v128)
  {
    sqlite3_finalize(v128);
    *(void *)(v127 + 24) = 0;
  }
  swift_release();
  return v67;
}

uint64_t sub_100C4770C()
{
  uint64_t v1 = type metadata accessor for CRLBoardIdentifierStorage(0);
  __chkstk_darwin(v1 - 8, v2);
  uint64_t v100 = (uint64_t)&v91 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for CRLBoardIdentifier(0);
  uint64_t v6 = __chkstk_darwin(v4 - 8, v5);
  uint64_t v97 = (uint64_t)&v91 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __chkstk_darwin(v6, v8);
  uint64_t v99 = (uint64_t)&v91 - v10;
  uint64_t v12 = __chkstk_darwin(v9, v11);
  uint64_t v96 = (uint64_t)&v91 - v13;
  uint64_t v15 = __chkstk_darwin(v12, v14);
  uint64_t v17 = (char *)&v91 - v16;
  __chkstk_darwin(v15, v18);
  uint64_t v98 = (uint64_t)&v91 - v19;
  uint64_t v20 = type metadata accessor for DispatchPredicate();
  uint64_t v21 = *(void *)(v20 - 8);
  __chkstk_darwin(v20, v22);
  uint64_t v24 = (uint64_t *)((char *)&v91 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v25 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform17CRLBoardDataStore_queue);
  *uint64_t v24 = v25;
  uint64_t v26 = *(void (**)(void))(v21 + 104);
  unsigned int v108 = enum case for DispatchPredicate.onQueue(_:);
  uint64_t v107 = v21 + 104;
  id v27 = (void (*)(void *, void, uint64_t))v26;
  v26(v24);
  id v28 = v25;
  LOBYTE(v25) = _dispatchPreconditionTest(_:)();
  uint64_t v29 = *(void (**)(void *, uint64_t))(v21 + 8);
  uint64_t v106 = v21 + 8;
  v29(v24, v20);
  if ((v25 & 1) == 0)
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  uint64_t v30 = (void (*)(void, void))v29;
  uint64_t v110 = 0;
  unint64_t v111 = 0xE000000000000000;
  _StringGuts.grow(_:)(46);
  swift_bridgeObjectRelease();
  type metadata accessor for SQLiteStatement();
  swift_initStackObject();
  uint64_t v31 = swift_retain();
  Swift::String v32 = v105;
  uint64_t v33 = sub_10079FC40(v31, 0xD000000000000058, 0x800000010127C2C0);
  id v102 = v32;
  if (v32)
  {
    swift_release();
    if (qword_10166FB70 == -1)
    {
LABEL_4:
      swift_beginAccess();
      Swift::String v34 = (void *)static OS_os_log.boardStore;
      sub_1005057FC((uint64_t *)&unk_101672B40);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_10117E810;
      swift_getErrorValue();
      id v36 = v34;
      uint64_t v37 = Error.localizedDescription.getter();
      uint64_t v39 = v38;
      *(void *)(inited + 56) = &type metadata for String;
      *(void *)(inited + 64) = sub_100528BE4();
      *(void *)(inited + 32) = v37;
      *(void *)(inited + 4sub_100C38440(1, 0) = v39;
      uint64_t v40 = static os_log_type_t.error.getter();
      sub_100BAC898((uint64_t)v36, (uint64_t)&_mh_execute_header, v40, (uint64_t)"Failed to fetch list of discardable boards with error %@", 56, 2, inited);
      swift_setDeallocating();
      sub_1005057FC(&qword_101672B50);
      swift_arrayDestroy();

      swift_willThrow();
      return v37;
    }
LABEL_32:
    swift_once();
    goto LABEL_4;
  }
  uint64_t v41 = v33;
  id v93 = v17;
  swift_release();
  uint64_t v109 = &_swiftEmptySetSingleton;
  uint64_t v42 = *(void *)(v41 + 16);
  uint64_t v95 = v41 + 16;
  Swift::String v43 = *(void **)(v42 + 32);
  *uint64_t v24 = v43;
  Swift::String v44 = v27;
  v27(v24, v108, v20);
  id v45 = v43;
  LOBYTE(v43) = _dispatchPreconditionTest(_:)();
  id v105 = v30;
  v30(v24, v20);
  if ((v43 & 1) == 0)
  {
    __break(1u);
    goto LABEL_34;
  }
  type metadata accessor for SQLiteRowIterator();
  Swift::String v46 = (void *)swift_initStackObject();
  uint64_t v46[3] = 0;
  unsigned int v103 = v46 + 3;
  v46[4] = 0;
  uint64_t v92 = v46 + 4;
  v46[5] = 1;
  v46[2] = v41;
  Swift::String v47 = *(void **)(*(void *)(v41 + 16) + 32);
  *uint64_t v24 = v47;
  uint64_t v94 = v41;
  swift_retain();
  v44(v24, v108, v20);
  id v48 = v47;
  LOBYTE(v47) = _dispatchPreconditionTest(_:)();
  Swift::String v49 = (void (*)(void *, uint64_t))v105;
  v105(v24, v20);
  if ((v47 & 1) == 0)
  {
LABEL_28:
    __break(1u);
LABEL_29:
    __break(1u);
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  uint64_t v51 = v94;
  uint64_t v50 = v95;
  uint64_t v101 = v46;
  while (1)
  {
    uint64_t v61 = v46[3];
    uint64_t v62 = v46[4];
    uint64_t v63 = v46[5];
    uint64_t v64 = v103;
    *unsigned int v103 = 0;
    v64[1] = 0;
    v46[5] = 1;
    sub_1007A0344(v61, v62, v63);
    id v105 = (void (*)(void, void))(v51 + 24);
    swift_beginAccess();
    unsigned int v65 = sqlite3_step(*(sqlite3_stmt **)(v51 + 24));
    if (v65 != 100) {
      break;
    }
    id v66 = *(void **)(*(void *)v50 + 32);
    *uint64_t v24 = v66;
    v44(v24, v108, v20);
    uint64_t v104 = v51;
    swift_retain();
    id v67 = v66;
    LOBYTE(v66) = _dispatchPreconditionTest(_:)();
    v49(v24, v20);
    if ((v66 & 1) == 0) {
      goto LABEL_29;
    }
    uint64_t v68 = *(void **)(*(void *)v50 + 32);
    *uint64_t v24 = v68;
    v44(v24, v108, v20);
    id v69 = v68;
    LOBYTE(v68) = _dispatchPreconditionTest(_:)();
    v49(v24, v20);
    if ((v68 & 1) == 0) {
      goto LABEL_30;
    }
    uint64_t v70 = (sqlite3_stmt **)v105;
    if (sqlite3_column_type(*(sqlite3_stmt **)v105, 0) == 5) {
      goto LABEL_17;
    }
    uint64_t v71 = sqlite3_column_blob(*v70, 0);
    if (!v71) {
      goto LABEL_17;
    }
    sqlite3_int64 v72 = v71;
    int v73 = sqlite3_column_bytes(*v70, 0);
    uint64_t v74 = sub_100670608(v72, v73);
    unint64_t v76 = v75;
    sub_100510D4C(v74, v75);
    uint64_t v77 = v100;
    uint64_t v78 = v102;
    sub_100753724(v74, v76, v100);
    if (v78)
    {
      swift_errorRelease();
      sub_100510084(v74, v76);
      id v102 = 0;
LABEL_17:
      Swift::String v46 = v101;
      if (qword_10166FB70 != -1) {
        swift_once();
      }
      swift_beginAccess();
      id v79 = (id)static OS_os_log.boardStore;
      uint64_t v80 = static os_log_type_t.error.getter();
      sub_100BAC898((uint64_t)v79, (uint64_t)&_mh_execute_header, v80, (uint64_t)"Failure reading board identifier data.", 38, 2, (uint64_t)_swiftEmptyArrayStorage);

      swift_release();
      goto LABEL_9;
    }
    id v102 = 0;
    uint64_t v52 = v96;
    sub_100CE12D8(v77, v96, type metadata accessor for CRLBoardIdentifierStorage);
    uint64_t v53 = v52;
    uint64_t v54 = (uint64_t)v93;
    sub_100CE12D8(v53, (uint64_t)v93, type metadata accessor for CRLBoardIdentifier);
    uint64_t v55 = v54;
    uint64_t v56 = v98;
    sub_100CE12D8(v55, v98, type metadata accessor for CRLBoardIdentifier);
    uint64_t v57 = v56;
    uint64_t v58 = v97;
    sub_100CE144C(v57, v97, type metadata accessor for CRLBoardIdentifier);
    sub_100CB7090(v99, v58);
    swift_release();
    sub_100510084(v74, v76);
    sub_100CE14B4(v99, type metadata accessor for CRLBoardIdentifier);
    sub_100CE14B4(v98, type metadata accessor for CRLBoardIdentifier);
    Swift::String v46 = v101;
LABEL_9:
    uint64_t v51 = v46[2];
    uint64_t v50 = v51 + 16;
    Swift::String v59 = *(void **)(*(void *)(v51 + 16) + 32);
    *uint64_t v24 = v59;
    v44(v24, v108, v20);
    id v60 = v59;
    LOBYTE(v59) = _dispatchPreconditionTest(_:)();
    v49(v24, v20);
    if ((v59 & 1) == 0) {
      goto LABEL_28;
    }
  }
  if (v65 && v65 != 101)
  {
    uint64_t v81 = v65;
    uint64_t v82 = v46[3];
    uint64_t v83 = v46[4];
    uint64_t v84 = v46[5];
    uint64_t v46[3] = v81;
    uint64_t v85 = v92;
    *uint64_t v92 = 0;
    v85[1] = 0;
    sub_1007A0344(v82, v83, v84);
  }
  swift_release();
  uint64_t v37 = (uint64_t)v109;
  uint64_t v86 = *(void **)(*(void *)v95 + 32);
  *uint64_t v24 = v86;
  v44(v24, v108, v20);
  id v87 = v86;
  LOBYTE(v86) = _dispatchPreconditionTest(_:)();
  v49(v24, v20);
  if ((v86 & 1) == 0) {
LABEL_34:
  }
    __break(1u);
  uint64_t v88 = v94;
  swift_beginAccess();
  uint64_t v89 = *(sqlite3_stmt **)(v88 + 24);
  if (v89)
  {
    sqlite3_finalize(v89);
    *(void *)(v88 + 24) = 0;
  }
  swift_release();
  return v37;
}

id sub_100C48084()
{
  uint64_t v1 = type metadata accessor for CRLBoardIdentifierStorage(0);
  __chkstk_darwin(v1 - 8, v2);
  uint64_t v99 = (uint64_t)&v88 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for CRLBoardIdentifier(0);
  __chkstk_darwin(v4 - 8, v5);
  uint64_t v7 = (char *)&v88 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8, v9);
  uint64_t v96 = (uint64_t)&v88 - v10;
  __chkstk_darwin(v11, v12);
  uint64_t v95 = (uint64_t)&v88 - v13;
  __chkstk_darwin(v14, v15);
  uint64_t v94 = (uint64_t)&v88 - v16;
  __chkstk_darwin(v17, v18);
  uint64_t v20 = (char *)&v88 - v19;
  uint64_t v21 = type metadata accessor for DispatchPredicate();
  uint64_t v22 = *(void *)(v21 - 8);
  __n128 v24 = __chkstk_darwin(v21, v23);
  uint64_t v26 = (uint64_t *)((char *)&v88 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0));
  id v27 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform17CRLBoardDataStore_queue);
  *uint64_t v26 = v27;
  uint64_t v28 = enum case for DispatchPredicate.onQueue(_:);
  uint64_t v106 = *(void (**)(void *, __n128))(v22 + 104);
  v106(v26, v24);
  id v29 = v27;
  LOBYTE(v27) = _dispatchPreconditionTest(_:)();
  uint64_t v30 = *(void (**)(void *, uint64_t))(v22 + 8);
  uint64_t v107 = v22 + 8;
  uint64_t v98 = v30;
  v30(v26, v21);
  if ((v27 & 1) == 0)
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  uint64_t v103 = v22 + 104;
  uint64_t v109 = 0;
  unint64_t v110 = 0xE000000000000000;
  _StringGuts.grow(_:)(37);
  swift_bridgeObjectRelease();
  type metadata accessor for SQLiteStatement();
  swift_initStackObject();
  uint64_t v31 = swift_retain();
  uint64_t v32 = v105;
  uint64_t v33 = sub_10079FC40(v31, 0xD000000000000050, 0x8000000101282B20);
  uint64_t v101 = v32;
  if (v32)
  {
    swift_release();
    if (qword_10166FB70 == -1)
    {
LABEL_4:
      swift_beginAccess();
      id v34 = (id)static OS_os_log.boardStore;
      uint64_t v35 = static os_log_type_t.error.getter();
      sub_100BAC898((uint64_t)v34, (uint64_t)&_mh_execute_header, v35, (uint64_t)"Failed to fetch shared boards that were deleted while offline", 61, 2, (uint64_t)_swiftEmptyArrayStorage);

      swift_willThrow();
      return v34;
    }
LABEL_32:
    swift_once();
    goto LABEL_4;
  }
  uint64_t v36 = v33;
  uint64_t v91 = v20;
  swift_release();
  unsigned int v108 = &_swiftEmptySetSingleton;
  uint64_t v37 = *(void *)(v36 + 16);
  uint64_t v93 = v36 + 16;
  uint64_t v38 = *(void **)(v37 + 32);
  *uint64_t v26 = v38;
  uint64_t v39 = (void (*)(void *, uint64_t, uint64_t))v106;
  ((void (*)(void *, uint64_t, uint64_t))v106)(v26, v28, v21);
  id v40 = v38;
  LOBYTE(v38) = _dispatchPreconditionTest(_:)();
  uint64_t v41 = v98;
  v98(v26, v21);
  if ((v38 & 1) == 0)
  {
    __break(1u);
    goto LABEL_34;
  }
  uint64_t v90 = v7;
  type metadata accessor for SQLiteRowIterator();
  uint64_t inited = (void *)swift_initStackObject();
  inited[3] = 0;
  id v102 = inited + 3;
  inited[4] = 0;
  uint64_t v89 = inited + 4;
  inited[5] = 1;
  inited[2] = v36;
  Swift::String v43 = *(void **)(*(void *)(v36 + 16) + 32);
  *uint64_t v26 = v43;
  uint64_t v92 = v36;
  swift_retain();
  v39(v26, v28, v21);
  id v44 = v43;
  LOBYTE(v43) = _dispatchPreconditionTest(_:)();
  v41(v26, v21);
  if ((v43 & 1) == 0)
  {
LABEL_28:
    __break(1u);
LABEL_29:
    __break(1u);
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  uint64_t v45 = v93;
  uint64_t v46 = v92;
  uint64_t v100 = inited;
  uint64_t v97 = v21;
  while (1)
  {
    uint64_t v49 = inited[3];
    uint64_t v50 = inited[4];
    uint64_t v51 = inited[5];
    uint64_t v52 = v102;
    *id v102 = 0;
    v52[1] = 0;
    inited[5] = 1;
    sub_1007A0344(v49, v50, v51);
    swift_beginAccess();
    unsigned int v53 = sqlite3_step(*(sqlite3_stmt **)(v46 + 24));
    if (v53 != 100) {
      break;
    }
    uint64_t v104 = (sqlite3_stmt **)(v46 + 24);
    uint64_t v54 = v28;
    uint64_t v55 = (void (*)(void *, uint64_t, uint64_t))v106;
    uint64_t v56 = *(void **)(*(void *)v45 + 32);
    *uint64_t v26 = v56;
    v55(v26, v54, v21);
    uint64_t v105 = v46;
    swift_retain();
    id v57 = v56;
    char v58 = _dispatchPreconditionTest(_:)();
    v41(v26, v21);
    if ((v58 & 1) == 0) {
      goto LABEL_29;
    }
    Swift::String v59 = *(void **)(*(void *)v45 + 32);
    *uint64_t v26 = v59;
    uint64_t v60 = v54;
    v55(v26, v54, v21);
    id v61 = v59;
    LOBYTE(v59) = _dispatchPreconditionTest(_:)();
    v41(v26, v21);
    if ((v59 & 1) == 0) {
      goto LABEL_30;
    }
    uint64_t v62 = v104;
    if (sqlite3_column_type(*v104, 0) == 5)
    {
      swift_release();
      uint64_t v28 = v54;
    }
    else
    {
      uint64_t v63 = sqlite3_column_blob(*v62, 0);
      uint64_t v28 = v54;
      if (v63)
      {
        uint64_t v64 = v63;
        int v65 = sqlite3_column_bytes(*v62, 0);
        uint64_t v66 = sub_100670608(v64, v65);
        unint64_t v68 = v67;
        sub_100510D4C(v66, v67);
        uint64_t v69 = v99;
        uint64_t v70 = v101;
        sub_100753724(v66, v68, v99);
        if (v70)
        {
          swift_errorRelease();
          swift_release();
          sub_100510084(v66, v68);
          uint64_t v101 = 0;
        }
        else
        {
          uint64_t v101 = 0;
          uint64_t v71 = v95;
          sub_100CE12D8(v69, v95, type metadata accessor for CRLBoardIdentifierStorage);
          uint64_t v72 = v94;
          sub_100CE12D8(v71, v94, type metadata accessor for CRLBoardIdentifier);
          uint64_t v73 = v72;
          uint64_t v41 = v98;
          uint64_t v74 = (uint64_t)v91;
          sub_100CE12D8(v73, (uint64_t)v91, type metadata accessor for CRLBoardIdentifier);
          uint64_t v75 = (uint64_t)v90;
          sub_100CE144C(v74, (uint64_t)v90, type metadata accessor for CRLBoardIdentifier);
          uint64_t v76 = v96;
          sub_100CB7090(v96, v75);
          swift_release();
          sub_100510084(v66, v68);
          uint64_t v77 = v76;
          uint64_t v28 = v60;
          sub_100CE14B4(v77, type metadata accessor for CRLBoardIdentifier);
          sub_100CE14B4(v74, type metadata accessor for CRLBoardIdentifier);
        }
        uint64_t v21 = v97;
      }
      else
      {
        swift_release();
      }
    }
    uint64_t inited = v100;
    uint64_t v46 = v100[2];
    uint64_t v45 = v46 + 16;
    Swift::String v47 = *(void **)(*(void *)(v46 + 16) + 32);
    *uint64_t v26 = v47;
    ((void (*)(void *, uint64_t, uint64_t))v106)(v26, v28, v21);
    id v48 = v47;
    LOBYTE(v47) = _dispatchPreconditionTest(_:)();
    v41(v26, v21);
    if ((v47 & 1) == 0) {
      goto LABEL_28;
    }
  }
  if (v53 && v53 != 101)
  {
    uint64_t v78 = v53;
    uint64_t v79 = inited[3];
    uint64_t v80 = inited[4];
    uint64_t v81 = inited[5];
    inited[3] = v78;
    uint64_t v82 = v89;
    *uint64_t v89 = 0;
    v82[1] = 0;
    sub_1007A0344(v79, v80, v81);
  }
  swift_release();
  id v34 = v108;
  uint64_t v83 = *(void **)(*(void *)v93 + 32);
  *uint64_t v26 = v83;
  ((void (*)(void *, uint64_t, uint64_t))v106)(v26, v28, v21);
  id v84 = v83;
  LOBYTE(v83) = _dispatchPreconditionTest(_:)();
  v41(v26, v21);
  uint64_t v85 = v92;
  if ((v83 & 1) == 0) {
LABEL_34:
  }
    __break(1u);
  swift_beginAccess();
  uint64_t v86 = *(sqlite3_stmt **)(v85 + 24);
  if (v86)
  {
    sqlite3_finalize(v86);
    *(void *)(v85 + 24) = 0;
  }
  swift_release();
  return v34;
}

uint64_t sub_100C489C4(void *a1)
{
  uint64_t v3 = v2;
  id v111 = a1;
  uint64_t v4 = type metadata accessor for DispatchPredicate();
  uint64_t v5 = *(void *)(v4 - 8);
  __n128 v7 = __chkstk_darwin(v4, v6);
  uint64_t v9 = (uint64_t *)((char *)&v99 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v10 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform17CRLBoardDataStore_queue);
  *uint64_t v9 = v10;
  uint64_t v11 = *(void (**)(void *, __n128))(v5 + 104);
  LODWORD(v115) = enum case for DispatchPredicate.onQueue(_:);
  v11(v9, v7);
  id v12 = v10;
  uint64_t v13 = _dispatchPreconditionTest(_:)();
  uint64_t v14 = v9;
  uint64_t v15 = v9;
  uint64_t v16 = *(void (**)(void *, uint64_t))(v5 + 8);
  uint64_t v114 = v4;
  uint64_t v113 = v5 + 8;
  v16(v15, v4);
  if ((v13 & 1) == 0)
  {
LABEL_42:
    __break(1u);
    goto LABEL_43;
  }
  uint64_t v112 = v16;
  uint64_t v109 = v5 + 104;
  id v117 = 0;
  unint64_t v118 = 0xE000000000000000;
  _StringGuts.grow(_:)(65);
  v17._countAndFlagsBits = 0x205443454C4553;
  v17._object = (void *)0xE700000000000000;
  String.append(_:)(v17);
  v18._countAndFlagsBits = 0x65756C6176;
  v18._object = (void *)0xE500000000000000;
  String.append(_:)(v18);
  v19._countAndFlagsBits = 0x204D4F524620;
  v19._object = (void *)0xE600000000000000;
  String.append(_:)(v19);
  v20._countAndFlagsBits = 0x756C61765F79656BLL;
  v20._object = (void *)0xEE00617461645F65;
  String.append(_:)(v20);
  v21._countAndFlagsBits = 0x20455245485720;
  v21._object = (void *)0xE700000000000000;
  String.append(_:)(v21);
  v22._countAndFlagsBits = 7955819;
  v22._object = (void *)0xE300000000000000;
  String.append(_:)(v22);
  v23._countAndFlagsBits = 0x2720454B494C20;
  v23._object = (void *)0xE700000000000000;
  String.append(_:)(v23);
  v24._countAndFlagsBits = 0x6F7A5F6863746566;
  v24._object = (void *)0xEA0000000000656ELL;
  String.append(_:)(v24);
  v25._countAndFlagsBits = 0x4320444E41202725;
  v25._object = (void *)0xEC00000028545341;
  String.append(_:)(v25);
  v26._object = (void *)0xEA00000000006F66;
  v26._countAndFlagsBits = 0x6E695F6172747865;
  String.append(_:)(v26);
  v27._object = (void *)0x800000010127F220;
  v27._countAndFlagsBits = 0xD000000000000010;
  String.append(_:)(v27);
  uint64_t v28 = (uint64_t)v117;
  uint64_t v29 = v118;
  type metadata accessor for SQLiteStatement();
  uint64_t inited = swift_initStackObject();
  uint64_t v31 = swift_retain();
  uint64_t v32 = v28;
  uint64_t v13 = inited;
  uint64_t v33 = sub_10079FC40(v31, v32, v29);
  if (v3) {
    goto LABEL_3;
  }
  uint64_t v36 = v33;
  swift_release();
  sub_10079D8A8((sqlite3_int64)v111, 1);
  id v117 = &_swiftEmptySetSingleton;
  uint64_t v37 = *(void *)(v36 + 16);
  uint64_t v103 = v36 + 16;
  uint64_t v38 = *(void **)(v37 + 32);
  *uint64_t v14 = v38;
  uint64_t v39 = v115;
  uint64_t v40 = v114;
  ((void (*)(void *, void, uint64_t))v11)(v14, v115, v114);
  id v41 = v38;
  LOBYTE(v38) = _dispatchPreconditionTest(_:)();
  uint64_t v42 = v112;
  v112(v14, v40);
  if ((v38 & 1) == 0)
  {
    __break(1u);
    goto LABEL_45;
  }
  uint64_t v105 = 0;
  type metadata accessor for SQLiteRowIterator();
  Swift::String v43 = (uint64_t *)swift_initStackObject();
  v43[3] = 0;
  unsigned int v108 = v43 + 3;
  v43[4] = 0;
  uint64_t v100 = v43 + 4;
  v43[5] = 1;
  v43[2] = v36;
  id v44 = *(void **)(*(void *)(v36 + 16) + 32);
  *uint64_t v14 = v44;
  uint64_t v102 = v36;
  swift_retain();
  uint64_t v45 = v39;
  uint64_t v46 = v114;
  ((void (*)(void *, uint64_t, uint64_t))v11)(v14, v39, v114);
  id v47 = v44;
  uint64_t v13 = _dispatchPreconditionTest(_:)();
  uint64_t v107 = v14;
  v42(v14, v46);
  if ((v13 & 1) == 0)
  {
LABEL_39:
    __break(1u);
LABEL_40:
    __break(1u);
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
  long long v101 = xmmword_1011B18B0;
  uint64_t v48 = v103;
  uint64_t v49 = v102;
  uint64_t v104 = (void (*)(void, __n128))v11;
  uint64_t v106 = v43;
  while (1)
  {
    uint64_t v56 = v43[3];
    uint64_t v57 = v43[4];
    uint64_t v58 = v43[5];
    Swift::String v59 = v108;
    *unsigned int v108 = 0;
    v59[1] = 0;
    v43[5] = 1;
    sub_1007A0344(v56, v57, v58);
    uint64_t v115 = (sqlite3_stmt **)(v49 + 24);
    swift_beginAccess();
    unsigned int v60 = sqlite3_step(*(sqlite3_stmt **)(v49 + 24));
    if (v60 != 100) {
      break;
    }
    uint64_t v61 = v114;
    uint64_t v62 = v45;
    uint64_t v63 = v49;
    uint64_t v64 = v107;
    int v65 = v112;
    id v111 = *(id *)(*(void *)v48 + 32);
    *uint64_t v107 = v111;
    ((void (*)(void *, uint64_t, uint64_t))v11)(v64, v62, v61);
    uint64_t v110 = v63;
    swift_retain();
    id v66 = v111;
    uint64_t v13 = _dispatchPreconditionTest(_:)();
    v65(v64, v61);
    if ((v13 & 1) == 0) {
      goto LABEL_40;
    }
    unint64_t v67 = *(void **)(*(void *)v48 + 32);
    *uint64_t v64 = v67;
    ((void (*)(void *, uint64_t, uint64_t))v11)(v64, v62, v61);
    id v68 = v67;
    char v69 = _dispatchPreconditionTest(_:)();
    v65(v64, v61);
    if ((v69 & 1) == 0) {
      goto LABEL_41;
    }
    if (sqlite3_column_type(*v115, 0) == 5 || (uint64_t v70 = sqlite3_column_blob(*v115, 0), v71 = v105, !v70))
    {
      swift_release();
    }
    else
    {
      uint64_t v72 = v70;
      int v73 = sqlite3_column_bytes(*v115, 0);
      if (v73)
      {
        uint64_t v74 = v73;
        if (v73 <= 14)
        {
          uint64_t v76 = sub_100CD835C(v72, &v72[v73]);
          unint64_t v77 = v78 & 0xFFFFFFFFFFFFFFLL;
        }
        else
        {
          type metadata accessor for __DataStorage();
          swift_allocObject();
          if (v74 == 0x7FFFFFFF)
          {
            uint64_t v75 = __DataStorage.init(bytes:length:)();
            type metadata accessor for Data.RangeReference();
            uint64_t v76 = swift_allocObject();
            *(_OWORD *)(v76 + 16) = v101;
            unint64_t v77 = v75 | 0x8000000000000000;
          }
          else
          {
            uint64_t v76 = v74 << 32;
            unint64_t v77 = __DataStorage.init(bytes:length:)() | 0x4000000000000000;
          }
        }
      }
      else
      {
        uint64_t v76 = 0;
        unint64_t v77 = 0xC000000000000000;
      }
      sub_10050BF48(0, &qword_101693260);
      sub_10050BF48(0, (unint64_t *)&qword_101674210);
      uint64_t v79 = (void *)static NSKeyedUnarchiver.unarchivedObject<A>(ofClass:from:)();
      if (v71)
      {
        swift_bridgeObjectRelease();
        sub_100510084(v76, v77);
        swift_release();
        uint64_t v93 = v106;
        swift_setDeallocating();
        swift_release();
        sub_1007A0344(v93[3], v93[4], v93[5]);
        uint64_t v94 = *(void **)(*(void *)v103 + 32);
        *uint64_t v64 = v94;
        uint64_t v95 = v114;
        ((void (*)(void *, uint64_t, uint64_t))v104)(v64, v62, v114);
        id v96 = v94;
        uint64_t v13 = _dispatchPreconditionTest(_:)();
        v112(v64, v95);
        if (v13)
        {
          uint64_t v97 = v102;
          swift_beginAccess();
          uint64_t v98 = *(sqlite3_stmt **)(v97 + 24);
          if (v98)
          {
            sqlite3_finalize(v98);
            *(void *)(v97 + 24) = 0;
          }
LABEL_3:
          swift_release();
          if (qword_10166FA88 == -1)
          {
LABEL_4:
            swift_beginAccess();
            id v34 = (id)static OS_os_log.crlZoneRefetch;
            uint64_t v35 = static os_log_type_t.error.getter();
            sub_100BAC898((uint64_t)v34, (uint64_t)&_mh_execute_header, v35, (uint64_t)"Failed to fetch zones needing refetching from the datastore.", 60, 2, (uint64_t)_swiftEmptyArrayStorage);

            swift_willThrow();
            return v13;
          }
LABEL_43:
          swift_once();
          goto LABEL_4;
        }
LABEL_46:
        __break(1u);
      }
      uint64_t v105 = 0;
      if (v79)
      {
        id v80 = v79;
        sub_100CBAB1C(v116, v80, (unint64_t *)&qword_101674210, (uint64_t)CKRecordZoneID_ptr, (uint64_t *)&unk_101671280);
        swift_release();
        sub_100510084(v76, v77);
      }
      else
      {
        swift_release();
        sub_100510084(v76, v77);
      }
      uint64_t v11 = (void (*)(void *, __n128))v104;
    }
    Swift::String v43 = v106;
    uint64_t v50 = v106[2];
    uint64_t v48 = v50 + 16;
    uint64_t v51 = *(void **)(*(void *)(v50 + 16) + 32);
    *uint64_t v64 = v51;
    uint64_t v45 = v62;
    uint64_t v52 = v62;
    uint64_t v53 = v114;
    ((void (*)(void *, uint64_t, uint64_t))v11)(v64, v52, v114);
    id v54 = v51;
    uint64_t v13 = _dispatchPreconditionTest(_:)();
    uint64_t v55 = v64;
    uint64_t v49 = v50;
    v112(v55, v53);
    if ((v13 & 1) == 0) {
      goto LABEL_39;
    }
  }
  if (v60 && v60 != 101)
  {
    uint64_t v81 = v60;
    uint64_t v82 = v106[3];
    uint64_t v83 = v106[4];
    uint64_t v84 = v106[5];
    v106[3] = v81;
    uint64_t v85 = v100;
    *uint64_t v100 = 0;
    v85[1] = 0;
    sub_1007A0344(v82, v83, v84);
  }
  swift_release();
  uint64_t v13 = (uint64_t)v117;
  uint64_t v86 = *(void **)(*(void *)v103 + 32);
  id v87 = v107;
  *uint64_t v107 = v86;
  uint64_t v88 = v114;
  ((void (*)(void *, uint64_t, uint64_t))v11)(v87, v45, v114);
  id v89 = v86;
  LOBYTE(v86) = _dispatchPreconditionTest(_:)();
  v112(v87, v88);
  if ((v86 & 1) == 0)
  {
LABEL_45:
    __break(1u);
    goto LABEL_46;
  }
  uint64_t v90 = v102;
  swift_beginAccess();
  uint64_t v91 = *(sqlite3_stmt **)(v90 + 24);
  if (v91)
  {
    sqlite3_finalize(v91);
    *(void *)(v90 + 24) = 0;
  }
  swift_release();
  return v13;
}

uint64_t sub_100C49494()
{
  uint64_t v2 = v1;
  uint64_t v3 = type metadata accessor for DispatchPredicate();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3, v5);
  __n128 v7 = (uint64_t *)((char *)&v94 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform17CRLBoardDataStore_queue);
  *__n128 v7 = v8;
  unsigned int v9 = enum case for DispatchPredicate.onQueue(_:);
  uint64_t v11 = v4 + 104;
  uint64_t v10 = *(void (**)(void *, uint64_t, sqlite3_stmt **))(v4 + 104);
  v10(v7, enum case for DispatchPredicate.onQueue(_:), (sqlite3_stmt **)v3);
  id v12 = v8;
  uint64_t v13 = _dispatchPreconditionTest(_:)();
  uint64_t v15 = *(void (**)(void *, sqlite3_stmt **))(v4 + 8);
  uint64_t v14 = v4 + 8;
  uint64_t v103 = v7;
  unsigned int v108 = (sqlite3_stmt **)v3;
  uint64_t v107 = v15;
  v15(v7, (sqlite3_stmt **)v3);
  if ((v13 & 1) == 0)
  {
LABEL_43:
    __break(1u);
    goto LABEL_44;
  }
  unsigned int v106 = v9;
  uint64_t v110 = 0;
  unint64_t v111 = 0xE000000000000000;
  _StringGuts.grow(_:)(65);
  v16._countAndFlagsBits = 0x205443454C4553;
  v16._object = (void *)0xE700000000000000;
  String.append(_:)(v16);
  v17._countAndFlagsBits = 0x65756C6176;
  v17._object = (void *)0xE500000000000000;
  String.append(_:)(v17);
  v18._countAndFlagsBits = 0x204D4F524620;
  v18._object = (void *)0xE600000000000000;
  String.append(_:)(v18);
  v19._countAndFlagsBits = 0x756C61765F79656BLL;
  v19._object = (void *)0xEE00617461645F65;
  String.append(_:)(v19);
  v20._countAndFlagsBits = 0x20455245485720;
  v20._object = (void *)0xE700000000000000;
  String.append(_:)(v20);
  v21._countAndFlagsBits = 7955819;
  v21._object = (void *)0xE300000000000000;
  String.append(_:)(v21);
  v22._countAndFlagsBits = 0x2720454B494C20;
  v22._object = (void *)0xE700000000000000;
  String.append(_:)(v22);
  v23._countAndFlagsBits = 0xD000000000000016;
  v23._object = (void *)0x800000010127BCD0;
  String.append(_:)(v23);
  v24._countAndFlagsBits = 0x4320444E41202725;
  v24._object = (void *)0xEC00000028545341;
  String.append(_:)(v24);
  v25._countAndFlagsBits = 0x6E695F6172747865;
  v25._object = (void *)0xEA00000000006F66;
  String.append(_:)(v25);
  v26._object = (void *)0x800000010127BCF0;
  v26._countAndFlagsBits = 0xD000000000000010;
  String.append(_:)(v26);
  uint64_t v27 = (uint64_t)v110;
  uint64_t v28 = v111;
  type metadata accessor for SQLiteStatement();
  uint64_t inited = swift_initStackObject();
  uint64_t v30 = swift_retain();
  uint64_t v31 = v27;
  uint64_t v13 = inited;
  uint64_t v32 = sub_10079FC40(v30, v31, v28);
  if (v2) {
    goto LABEL_3;
  }
  uint64_t v35 = v32;
  swift_release();
  uint64_t v110 = &_swiftEmptySetSingleton;
  uint64_t v36 = *(void *)(v35 + 16);
  uint64_t v98 = v35 + 16;
  uint64_t v37 = *(void **)(v36 + 32);
  uint64_t v38 = v35;
  uint64_t v39 = v103;
  *uint64_t v103 = v37;
  uint64_t v40 = v106;
  id v41 = v108;
  v10(v39, v106, v108);
  id v42 = v37;
  LOBYTE(v37) = _dispatchPreconditionTest(_:)();
  v107(v39, v41);
  if ((v37 & 1) == 0)
  {
    __break(1u);
    goto LABEL_46;
  }
  uint64_t v99 = 0;
  type metadata accessor for SQLiteRowIterator();
  Swift::String v43 = (void *)swift_initStackObject();
  v43[3] = 0;
  uint64_t v102 = v43 + 3;
  v43[4] = 0;
  uint64_t v95 = v43 + 4;
  v43[5] = 1;
  v43[2] = v38;
  id v44 = *(void **)(*(void *)(v38 + 16) + 32);
  *uint64_t v39 = v44;
  uint64_t v97 = v38;
  uint64_t v45 = v43;
  swift_retain();
  uint64_t v105 = v10;
  v10(v39, v40, v41);
  id v46 = v44;
  uint64_t v13 = _dispatchPreconditionTest(_:)();
  v107(v39, v41);
  if ((v13 & 1) == 0)
  {
LABEL_40:
    __break(1u);
LABEL_41:
    __break(1u);
LABEL_42:
    __break(1u);
    goto LABEL_43;
  }
  long long v96 = xmmword_1011B18B0;
  uint64_t v47 = v98;
  uint64_t v48 = v97;
  uint64_t v101 = v11;
  uint64_t v100 = v45;
  uint64_t v49 = v103;
  while (1)
  {
    uint64_t v53 = v45[3];
    uint64_t v54 = v45[4];
    uint64_t v55 = v45[5];
    uint64_t v56 = v102;
    *uint64_t v102 = 0;
    v56[1] = 0;
    v45[5] = 1;
    sub_1007A0344(v53, v54, v55);
    unsigned int v108 = (sqlite3_stmt **)(v48 + 24);
    swift_beginAccess();
    unsigned int v57 = sqlite3_step(*(sqlite3_stmt **)(v48 + 24));
    if (v57 != 100) {
      break;
    }
    uint64_t v58 = v48;
    Swift::String v59 = *(void **)(*(void *)v47 + 32);
    *uint64_t v49 = v59;
    uint64_t v13 = v106;
    unsigned int v60 = v105;
    v105(v49, v106, v41);
    uint64_t v104 = v58;
    swift_retain();
    id v61 = v59;
    LOBYTE(v59) = _dispatchPreconditionTest(_:)();
    uint64_t v62 = v107;
    v107(v49, v41);
    if ((v59 & 1) == 0) {
      goto LABEL_41;
    }
    uint64_t v63 = *(void **)(*(void *)v47 + 32);
    *uint64_t v49 = v63;
    v60(v49, v13, v41);
    id v64 = v63;
    char v65 = _dispatchPreconditionTest(_:)();
    uint64_t v66 = v14;
    v62(v49, v41);
    if ((v65 & 1) == 0) {
      goto LABEL_42;
    }
    if (sqlite3_column_type(*v108, 0) == 5)
    {
      swift_release();
      uint64_t v50 = v106;
      uint64_t v45 = v100;
    }
    else
    {
      unint64_t v67 = sqlite3_column_blob(*v108, 0);
      uint64_t v50 = v106;
      uint64_t v45 = v100;
      if (v67)
      {
        id v68 = v67;
        int v69 = sqlite3_column_bytes(*v108, 0);
        if (v69)
        {
          uint64_t v70 = v69;
          uint64_t v71 = v50;
          if (v69 <= 14)
          {
            uint64_t v73 = sub_100CD835C(v68, &v68[v69]);
            unint64_t v74 = v75 & 0xFFFFFFFFFFFFFFLL;
          }
          else
          {
            type metadata accessor for __DataStorage();
            swift_allocObject();
            if (v70 == 0x7FFFFFFF)
            {
              uint64_t v72 = __DataStorage.init(bytes:length:)();
              type metadata accessor for Data.RangeReference();
              uint64_t v73 = swift_allocObject();
              *(_OWORD *)(v73 + 16) = v96;
              unint64_t v74 = v72 | 0x8000000000000000;
            }
            else
            {
              uint64_t v73 = v70 << 32;
              unint64_t v74 = __DataStorage.init(bytes:length:)() | 0x4000000000000000;
            }
          }
        }
        else
        {
          uint64_t v71 = v50;
          uint64_t v73 = 0;
          unint64_t v74 = 0xC000000000000000;
        }
        sub_10050BF48(0, &qword_101693260);
        sub_10050BF48(0, (unint64_t *)&qword_101674210);
        uint64_t v76 = v99;
        unint64_t v77 = (void *)static NSKeyedUnarchiver.unarchivedObject<A>(ofClass:from:)();
        uint64_t v99 = v76;
        if (v76)
        {
          swift_bridgeObjectRelease();
          sub_100510084(v73, v74);
          swift_release();
          swift_setDeallocating();
          swift_release();
          sub_1007A0344(v45[3], v45[4], v45[5]);
          uint64_t v90 = *(void **)(*(void *)v98 + 32);
          *uint64_t v49 = v90;
          v105(v49, v71, v41);
          id v91 = v90;
          uint64_t v13 = _dispatchPreconditionTest(_:)();
          v107(v49, v41);
          if (v13)
          {
            uint64_t v92 = v97;
            swift_beginAccess();
            uint64_t v93 = *(sqlite3_stmt **)(v92 + 24);
            if (v93)
            {
              sqlite3_finalize(v93);
              *(void *)(v92 + 24) = 0;
            }
LABEL_3:
            swift_release();
            if (qword_10166FA88 == -1)
            {
LABEL_4:
              swift_beginAccess();
              id v33 = (id)static OS_os_log.crlZoneRefetch;
              uint64_t v34 = static os_log_type_t.error.getter();
              sub_100BAC898((uint64_t)v33, (uint64_t)&_mh_execute_header, v34, (uint64_t)"Failed to fetch unsupported zones needing refetching from the datastore.", 72, 2, (uint64_t)_swiftEmptyArrayStorage);

              swift_willThrow();
              return v13;
            }
LABEL_44:
            swift_once();
            goto LABEL_4;
          }
LABEL_47:
          __break(1u);
        }
        if (v77)
        {
          id v78 = v77;
          sub_100CBAB1C(v109, v78, (unint64_t *)&qword_101674210, (uint64_t)CKRecordZoneID_ptr, (uint64_t *)&unk_101671280);
          swift_release();
          sub_100510084(v73, v74);
        }
        else
        {
          swift_release();
          sub_100510084(v73, v74);
        }
        uint64_t v50 = v71;
      }
      else
      {
        swift_release();
      }
    }
    uint64_t v48 = v45[2];
    uint64_t v47 = v48 + 16;
    uint64_t v51 = *(void **)(*(void *)(v48 + 16) + 32);
    *uint64_t v49 = v51;
    v105(v49, v50, v41);
    id v52 = v51;
    uint64_t v13 = _dispatchPreconditionTest(_:)();
    uint64_t v14 = v66;
    v107(v49, v41);
    if ((v13 & 1) == 0) {
      goto LABEL_40;
    }
  }
  if (v57 && v57 != 101)
  {
    uint64_t v79 = v57;
    uint64_t v80 = v45[3];
    uint64_t v81 = v45[4];
    uint64_t v82 = v45[5];
    v45[3] = v79;
    uint64_t v83 = v95;
    *uint64_t v95 = 0;
    v83[1] = 0;
    sub_1007A0344(v80, v81, v82);
  }
  swift_release();
  uint64_t v13 = (uint64_t)v110;
  uint64_t v84 = *(void **)(*(void *)v98 + 32);
  uint64_t v85 = v103;
  *uint64_t v103 = v84;
  v105(v85, v106, v41);
  id v86 = v84;
  LOBYTE(v84) = _dispatchPreconditionTest(_:)();
  v107(v85, v41);
  if ((v84 & 1) == 0)
  {
LABEL_46:
    __break(1u);
    goto LABEL_47;
  }
  uint64_t v87 = v97;
  swift_beginAccess();
  uint64_t v88 = *(sqlite3_stmt **)(v87 + 24);
  if (v88)
  {
    sqlite3_finalize(v88);
    *(void *)(v87 + 24) = 0;
  }
  swift_release();
  return v13;
}

uint64_t sub_100C49F20(uint64_t a1)
{
  uint64_t v81 = a1;
  uint64_t v3 = type metadata accessor for DispatchPredicate();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3, v5);
  __n128 v7 = (uint64_t *)((char *)&v76 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform17CRLBoardDataStore_queue);
  *__n128 v7 = v8;
  unsigned int v9 = *(void (**)(void))(v4 + 104);
  unsigned int v77 = enum case for DispatchPredicate.onQueue(_:);
  id v78 = (void (*)(void *, void, uint64_t))v9;
  uint64_t v76 = v4 + 104;
  v9(v7);
  id v10 = v8;
  LOBYTE(v8) = _dispatchPreconditionTest(_:)();
  uint64_t v79 = *(void (**)(void *, uint64_t))(v4 + 8);
  uint64_t v80 = v3;
  v79(v7, v3);
  if ((v8 & 1) == 0)
  {
    __break(1u);
    goto LABEL_19;
  }
  uint64_t v82 = 0;
  unint64_t v83 = 0xE000000000000000;
  _StringGuts.grow(_:)(131);
  v11._countAndFlagsBits = 0xD00000000000001ELL;
  v11._object = (void *)0x800000010127BB30;
  String.append(_:)(v11);
  v12._countAndFlagsBits = 0x736472616F62;
  v12._object = (void *)0xE600000000000000;
  String.append(_:)(v12);
  v13._countAndFlagsBits = 0x4A2052454E4E4920;
  v13._object = (void *)0xEC000000204E494FLL;
  String.append(_:)(v13);
  v14._countAndFlagsBits = 0x74695F6472616F62;
  v14._object = (void *)0xEB00000000736D65;
  String.append(_:)(v14);
  v15._countAndFlagsBits = 542002976;
  v15._object = (void *)0xE400000000000000;
  String.append(_:)(v15);
  v16._countAndFlagsBits = 0x74695F6472616F62;
  v16._object = (void *)0xEB00000000736D65;
  String.append(_:)(v16);
  v17._countAndFlagsBits = 46;
  v17._object = (void *)0xE100000000000000;
  String.append(_:)(v17);
  v18._countAndFlagsBits = 0xD000000000000010;
  v18._object = (void *)0x8000000101262BA0;
  String.append(_:)(v18);
  v19._countAndFlagsBits = 2112800;
  v19._object = (void *)0xE300000000000000;
  String.append(_:)(v19);
  v20._countAndFlagsBits = 0x736472616F62;
  v20._object = (void *)0xE600000000000000;
  String.append(_:)(v20);
  v21._countAndFlagsBits = 46;
  v21._object = (void *)0xE100000000000000;
  String.append(_:)(v21);
  v22._countAndFlagsBits = 0xD000000000000010;
  v22._object = (void *)0x8000000101262BA0;
  String.append(_:)(v22);
  v23._countAndFlagsBits = 0x20455245485720;
  v23._object = (void *)0xE700000000000000;
  String.append(_:)(v23);
  v24._countAndFlagsBits = 0x736472616F62;
  v24._object = (void *)0xE600000000000000;
  String.append(_:)(v24);
  v25._countAndFlagsBits = 46;
  v25._object = (void *)0xE100000000000000;
  String.append(_:)(v25);
  v26._countAndFlagsBits = 0xD000000000000010;
  v26._object = (void *)0x8000000101262BA0;
  String.append(_:)(v26);
  v27._countAndFlagsBits = 0x444E41203F203D20;
  v27._object = (void *)0xEA00000000002820;
  String.append(_:)(v27);
  v28._countAndFlagsBits = 0x736472616F62;
  v28._object = (void *)0xE600000000000000;
  String.append(_:)(v28);
  v29._countAndFlagsBits = 46;
  v29._object = (void *)0xE100000000000000;
  String.append(_:)(v29);
  v30._countAndFlagsBits = 0xD000000000000014;
  v30._object = (void *)0x800000010127BB50;
  String.append(_:)(v30);
  v31._countAndFlagsBits = 0x20524F203F203E20;
  v31._object = (void *)0xE900000000000028;
  String.append(_:)(v31);
  v32._countAndFlagsBits = 0x74695F6472616F62;
  v32._object = (void *)0xEB00000000736D65;
  String.append(_:)(v32);
  v33._countAndFlagsBits = 46;
  v33._object = (void *)0xE100000000000000;
  String.append(_:)(v33);
  v34._countAndFlagsBits = 0xD000000000000014;
  v34._object = (void *)0x800000010127BB50;
  String.append(_:)(v34);
  v35._countAndFlagsBits = 0x444E41203F203E20;
  v35._object = (void *)0xEA00000000002820;
  String.append(_:)(v35);
  v36._countAndFlagsBits = 0x74695F6472616F62;
  v36._object = (void *)0xEB00000000736D65;
  String.append(_:)(v36);
  v37._countAndFlagsBits = 46;
  v37._object = (void *)0xE100000000000000;
  String.append(_:)(v37);
  v38._countAndFlagsBits = 0x6F5F7463656A626FLL;
  v38._object = (void *)0xEE00736E6F697470;
  String.append(_:)(v38);
  v39._countAndFlagsBits = 0x203E20293F202620;
  v39._object = (void *)0xEC00000029292930;
  String.append(_:)(v39);
  uint64_t v40 = v82;
  uint64_t v41 = v83;
  type metadata accessor for SQLiteStatement();
  swift_initStackObject();
  uint64_t v42 = swift_retain();
  uint64_t v43 = sub_10079FC40(v42, v40, v41);
  if (v2)
  {
    swift_release();
    if (qword_10166FB70 == -1)
    {
LABEL_5:
      swift_beginAccess();
      uint64_t v47 = (void *)static OS_os_log.boardStore;
      sub_1005057FC((uint64_t *)&unk_101672B40);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_10117D8C0;
      uint64_t v49 = v47;
      uint64_t v50 = UUID.uuidString.getter();
      uint64_t v52 = v51;
      *(void *)(inited + 56) = &type metadata for String;
      unint64_t v53 = sub_100528BE4();
      *(void *)(inited + 64) = v53;
      *(void *)(inited + 32) = v50;
      *(void *)(inited + 4sub_100C38440(1, 0) = v52;
      swift_getErrorValue();
      uint64_t v54 = Error.localizedDescription.getter();
      *(void *)(inited + 96) = &type metadata for String;
      *(void *)(inited + 104) = v53;
      *(void *)(inited + 72) = v54;
      *(void *)(inited + 8sub_100C38440(1, 0) = v55;
      uint64_t v56 = static os_log_type_t.error.getter();
      sub_100BAC898(v49, (uint64_t)&_mh_execute_header, v56, (uint64_t)"Failed to fetch if specific board %@ is unsupported with error %@", 65, 2, inited);
      swift_setDeallocating();
      sub_1005057FC(&qword_101672B50);
      swift_arrayDestroy();

      swift_willThrow();
      return v49 & 1;
    }
LABEL_19:
    swift_once();
    goto LABEL_5;
  }
  uint64_t v44 = v43;
  swift_release();
  uint64_t v45 = sub_100753FC0();
  uint64_t v58 = v45;
  unint64_t v59 = v46;
  sub_10079DCE4(v45, v46, 1);
  sub_100510084(v58, v59);
  sqlite3_int64 v60 = sub_1002094A4();
  sub_10079D8A8(v60, 2);
  sub_10079D8A8(v60, 3);
  sub_10079D8A8(1, 4);
  id v61 = *(void **)(*(void *)(v44 + 16) + 32);
  *__n128 v7 = v61;
  uint64_t v62 = v80;
  v78(v7, v77, v80);
  id v63 = v61;
  LOBYTE(v61) = _dispatchPreconditionTest(_:)();
  v79(v7, v62);
  if ((v61 & 1) == 0)
  {
    __break(1u);
LABEL_21:
    __break(1u);
LABEL_22:
    __break(1u);
  }
  type metadata accessor for SQLiteRowIterator();
  id v64 = (void *)swift_initStackObject();
  v64[4] = 0;
  v64[5] = 1;
  v64[2] = v44;
  v64[3] = 0;
  swift_retain();
  uint64_t v65 = sub_10079ECE0();
  if (!v65)
  {
    swift_release();
    swift_setDeallocating();
    sub_1007A0344(v64[3], v64[4], v64[5]);
LABEL_13:
    uint64_t v72 = *(void **)(*(void *)(v44 + 16) + 32);
    *__n128 v7 = v72;
    uint64_t v73 = v80;
    v78(v7, v77, v80);
    id v74 = v72;
    LOBYTE(v72) = _dispatchPreconditionTest(_:)();
    v79(v7, v73);
    if (v72)
    {
      uint64_t v71 = (void *)(v44 + 24);
      swift_beginAccess();
      LOBYTE(v49) = 0;
      goto LABEL_15;
    }
    goto LABEL_21;
  }
  uint64_t v81 = sub_10079BE94(0, v65);
  char v67 = v66;
  swift_release();
  swift_release();
  swift_setDeallocating();
  sub_1007A0344(v64[3], v64[4], v64[5]);
  if (v67) {
    goto LABEL_13;
  }
  id v68 = *(void **)(*(void *)(v44 + 16) + 32);
  *__n128 v7 = v68;
  uint64_t v69 = v80;
  v78(v7, v77, v80);
  id v70 = v68;
  LOBYTE(v68) = _dispatchPreconditionTest(_:)();
  v79(v7, v69);
  if ((v68 & 1) == 0) {
    goto LABEL_22;
  }
  LOBYTE(v49) = v81 > 0;
  uint64_t v71 = (void *)(v44 + 24);
  swift_beginAccess();
LABEL_15:
  uint64_t v75 = *(sqlite3_stmt **)(v44 + 24);
  if (v75)
  {
    sqlite3_finalize(v75);
    *uint64_t v71 = 0;
  }
  swift_release();
  return v49 & 1;
}

double *sub_100C4A7C4()
{
  uint64_t v2 = sub_1005057FC(&qword_101699628);
  __chkstk_darwin(v2 - 8, v3);
  uint64_t v119 = (char *)&v106 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v118 = type metadata accessor for CRLBoardCRDTData(0);
  uint64_t v116 = *(void (***)(uint64_t, uint64_t, uint64_t, uint64_t))(v118 - 8);
  uint64_t v6 = __chkstk_darwin(v118, v5);
  uint64_t v113 = (uint64_t)&v106 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6, v8);
  uint64_t v112 = (uint64_t)&v106 - v9;
  uint64_t v10 = type metadata accessor for DispatchPredicate();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10, v12);
  Swift::String v14 = (uint64_t *)((char *)&v106 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  Swift::String v15 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform17CRLBoardDataStore_queue);
  *Swift::String v14 = v15;
  uint64_t v16 = v11 + 104;
  Swift::String v17 = *(void (**)(void *))(v11 + 104);
  unsigned int v126 = enum case for DispatchPredicate.onQueue(_:);
  v17(v14);
  id v18 = v15;
  LOBYTE(v15) = _dispatchPreconditionTest(_:)();
  Swift::String v20 = *(void (**)(void *, uint64_t))(v11 + 8);
  uint64_t v19 = v11 + 8;
  uint64_t v120 = v10;
  uint64_t v123 = v20;
  v20(v14, v10);
  if ((v15 & 1) == 0)
  {
    __break(1u);
    goto LABEL_45;
  }
  uint64_t v124 = (void (*)(void *, void, uint64_t))v17;
  uint64_t v125 = v16;
  uint64_t v122 = v19;
  uint64_t v128 = 0;
  unint64_t v129 = 0xE000000000000000;
  _StringGuts.grow(_:)(49);
  v21._countAndFlagsBits = 0x205443454C4553;
  v21._object = (void *)0xE700000000000000;
  String.append(_:)(v21);
  v22._countAndFlagsBits = sub_100CD9E14(0, (void *)0xE000000000000000);
  String.append(_:)(v22);
  swift_bridgeObjectRelease();
  v23._countAndFlagsBits = 0x204D4F524620;
  v23._object = (void *)0xE600000000000000;
  String.append(_:)(v23);
  v24._countAndFlagsBits = 0x736472616F62;
  v24._object = (void *)0xE600000000000000;
  String.append(_:)(v24);
  v25._countAndFlagsBits = 0x2045524548570ALL;
  v25._object = (void *)0xE700000000000000;
  String.append(_:)(v25);
  char v127 = 4;
  _print_unlocked<A, B>(_:_:)();
  v26._object = (void *)0x800000010127C0C0;
  v26._countAndFlagsBits = 0xD000000000000011;
  String.append(_:)(v26);
  char v127 = 5;
  _print_unlocked<A, B>(_:_:)();
  v27._countAndFlagsBits = 807419168;
  v27._object = (void *)0xE400000000000000;
  String.append(_:)(v27);
  uint64_t v28 = v128;
  uint64_t v29 = v129;
  type metadata accessor for SQLiteStatement();
  swift_initStackObject();
  uint64_t v30 = swift_retain();
  uint64_t v31 = sub_10079FC40(v30, v28, v29);
  if (v1)
  {
LABEL_3:
    swift_release();
    if (qword_10166FB70 == -1)
    {
LABEL_4:
      swift_beginAccess();
      Swift::String v32 = (void *)static OS_os_log.boardStore;
      sub_1005057FC((uint64_t *)&unk_101672B40);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_10117E810;
      swift_getErrorValue();
      id v34 = v32;
      uint64_t v35 = Error.localizedDescription.getter();
      uint64_t v37 = v36;
      *(void *)(inited + 56) = &type metadata for String;
      *(void *)(inited + 64) = sub_100528BE4();
      *(void *)(inited + 32) = v35;
      *(void *)(inited + 4sub_100C38440(1, 0) = v37;
      uint64_t v38 = static os_log_type_t.error.getter();
      sub_100BAC898((uint64_t)v34, (uint64_t)&_mh_execute_header, v38, (uint64_t)"Failed to fetch a board record with error %@", 44, 2, inited);
      swift_setDeallocating();
      sub_1005057FC(&qword_101672B50);
      swift_arrayDestroy();

      swift_willThrow();
      return v115;
    }
LABEL_45:
    swift_once();
    goto LABEL_4;
  }
  uint64_t v39 = v31;
  swift_release();
  uint64_t v40 = *(void **)(*(void *)(v39 + 16) + 32);
  *Swift::String v14 = v40;
  uint64_t v41 = v120;
  uint64_t v42 = v124;
  v124(v14, v126, v120);
  id v43 = v40;
  LOBYTE(v4sub_100C38440(1, 0) = _dispatchPreconditionTest(_:)();
  uint64_t v44 = v123;
  v123(v14, v41);
  if ((v40 & 1) == 0)
  {
    __break(1u);
    goto LABEL_47;
  }
  uint64_t v121 = 0;
  type metadata accessor for SQLiteRowIterator();
  uint64_t v45 = v42;
  unint64_t v46 = (void *)swift_initStackObject();
  uint64_t v46[3] = 0;
  v46[4] = 0;
  unint64_t v111 = v46 + 4;
  v46[5] = 1;
  v46[2] = v39;
  uint64_t v47 = *(void **)(*(void *)(v39 + 16) + 32);
  *Swift::String v14 = v47;
  uint64_t v114 = v39;
  uint64_t v48 = v46 + 3;
  swift_retain();
  v45(v14, v126, v41);
  id v49 = v47;
  LOBYTE(v47) = _dispatchPreconditionTest(_:)();
  v44(v14, v41);
  if ((v47 & 1) == 0)
  {
LABEL_39:
    __break(1u);
LABEL_40:
    uint64_t v99 = v108;
    unint64_t v100 = (unint64_t)v109;
    sub_100514260(v108, (unint64_t)v109);
    swift_bridgeObjectRelease();
    sub_100514260(v99, v100);
    swift_release();
    swift_release();
    swift_release();
    swift_setDeallocating();
    swift_release();
    sub_1007A0344(v46[3], v46[4], v46[5]);
    uint64_t v101 = v114;
    uint64_t v102 = *(void **)(*(void *)(v114 + 16) + 32);
    *Swift::String v14 = v102;
    uint64_t v103 = v120;
    v124(v14, v126, v120);
    id v104 = v102;
    LOBYTE(v102) = _dispatchPreconditionTest(_:)();
    uint64_t result = (double *)((uint64_t (*)(void *, uint64_t))v123)(v14, v103);
    if ((v102 & 1) == 0)
    {
      __break(1u);
      return result;
    }
    swift_beginAccess();
    uint64_t v105 = *(sqlite3_stmt **)(v101 + 24);
    if (v105)
    {
      sqlite3_finalize(v105);
      *(void *)(v101 + 24) = 0;
    }
    goto LABEL_3;
  }
  uint64_t v115 = _swiftEmptyArrayStorage;
  v116 += 7;
  uint64_t v50 = v114;
  id v117 = v46 + 3;
  while (1)
  {
    uint64_t v51 = v46[3];
    uint64_t v52 = v46[4];
    uint64_t v53 = v46[5];
    *uint64_t v48 = 0;
    v48[1] = 0;
    v46[5] = 1;
    sub_1007A0344(v51, v52, v53);
    swift_beginAccess();
    unsigned int v54 = sqlite3_step(*(sqlite3_stmt **)(v50 + 24));
    if (v54 != 100) {
      break;
    }
    uint64_t v55 = swift_retain_n();
    uint64_t v56 = sub_100CDA2EC(v55, 0);
    if (!v56) {
      goto LABEL_14;
    }
    uint64_t v57 = v56;
    uint64_t v58 = (uint64_t *)(v56 + OBJC_IVAR____TtC8Freeform19CRLBoardDatabaseRow_data);
    unint64_t v59 = *(void *)(v56 + OBJC_IVAR____TtC8Freeform19CRLBoardDatabaseRow_data + 8);
    if (v59 >> 60 == 15) {
      goto LABEL_13;
    }
    uint64_t v60 = *v58;
    sub_1005FA2A0(*v58, v59);
    sub_1005FA2A0(v60, v59);
    sub_100CDE0D8((unint64_t *)&unk_10169A0D0, (void (*)(uint64_t))type metadata accessor for CRLBoardCRDTData);
    swift_retain();
    uint64_t v61 = v118;
    uint64_t v62 = (uint64_t)v119;
    uint64_t v63 = v121;
    CRDT.init(serializedData:)();
    if (v63)
    {
      swift_errorRelease();
      (*v116)(v62, 1, 1, v61);
      swift_release();
      sub_100514260(v60, v59);
      sub_100522F00(v62, &qword_101699628);
      uint64_t v121 = 0;
      uint64_t v41 = v120;
      uint64_t v48 = v117;
LABEL_13:
      swift_release();
LABEL_14:
      swift_release();
      uint64_t v50 = v46[2];
      id v64 = *(void **)(*(void *)(v50 + 16) + 32);
      *Swift::String v14 = v64;
      v124(v14, v126, v41);
      id v65 = v64;
      char v66 = _dispatchPreconditionTest(_:)();
      char v67 = v14;
      uint64_t v68 = v41;
      goto LABEL_15;
    }
    uint64_t v121 = 0;
    (*v116)(v62, 0, 1, v61);
    uint64_t v110 = type metadata accessor for CRLBoardCRDTData;
    uint64_t v69 = v112;
    sub_100CE12D8(v62, v112, type metadata accessor for CRLBoardCRDTData);
    long long v108 = *(_OWORD *)(v57 + OBJC_IVAR____TtC8Freeform19CRLBoardDatabaseRow_minRequiredVersions);
    id v107 = *(id *)(v57 + OBJC_IVAR____TtC8Freeform19CRLBoardDatabaseRow_minRequiredVersions + 16);
    sub_100CE144C(v69, v113, type metadata accessor for CRLBoardCRDTData);
    uint64_t v70 = OBJC_IVAR____TtC8Freeform19CRLBoardDatabaseRow_boardIdentifier;
    uint64_t v71 = v57 + *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20) + v70;
    uint64_t v72 = *(void *)(v71 + 8);
    id v109 = *(id *)v71;
    type metadata accessor for CRLBoardData(0);
    uint64_t v73 = swift_allocObject();
    *(void *)(v73 + 16) = 7;
    *(_OWORD *)(v73 + 24) = v108;
    *(void *)(v73 + 4sub_100C38440(1, 0) = v107;
    sub_100CE12D8(v113, v73 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData, v110);
    swift_bridgeObjectRetain();
    swift_release();
    sub_100514260(v60, v59);
    uint64_t v110 = (uint64_t (*)(uint64_t))v73;
    id v74 = (void *)(v73 + OBJC_IVAR____TtC8Freeform12CRLBoardData_ownerName);
    *id v74 = v109;
    v74[1] = v72;
    sub_100CE14B4(v112, type metadata accessor for CRLBoardCRDTData);
    unint64_t v75 = *(void *)(v57 + OBJC_IVAR____TtC8Freeform19CRLBoardDatabaseRow_ckShareData + 8);
    if (v75 >> 60 == 15)
    {
      uint64_t v76 = 0;
      uint64_t v48 = v117;
    }
    else
    {
      uint64_t v77 = *(void *)(v57 + OBJC_IVAR____TtC8Freeform19CRLBoardDatabaseRow_ckShareData);
      sub_10050BF48(0, &qword_101693260);
      sub_10050BF48(0, &qword_101672C00);
      sub_100510D4C(v77, v75);
      sub_100510D4C(v77, v75);
      *(void *)&long long v108 = v77;
      id v109 = (id)v75;
      uint64_t v78 = v121;
      uint64_t v79 = (void *)static NSKeyedUnarchiver.unarchivedObject<A>(ofClass:from:)();
      uint64_t v121 = v78;
      uint64_t v48 = v117;
      if (v78) {
        goto LABEL_40;
      }
      uint64_t v76 = v79;
      if (v79)
      {
        id v107 = v79;
        id v80 = [v107 containerID];

        if (!v80)
        {
          sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"crl_checkForNilContainerID()", 28, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Sync/CRLCloudKitShareNameHelper.swift", 91, 2, 165, (uint64_t)"The containerID of a share should never be nil. This can prevent fast sync from starting.", 89, 2u, (uint64_t)_swiftEmptyArrayStorage);
          sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"crl_checkForNilContainerID()", 28, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Sync/CRLCloudKitShareNameHelper.swift", 91, 2, 165);
          [self logFullBacktrace];
        }
        uint64_t v81 = v108;
        unint64_t v82 = (unint64_t)v109;
        sub_100514260(v108, (unint64_t)v109);
      }
      else
      {
        uint64_t v81 = v108;
        unint64_t v82 = (unint64_t)v109;
        sub_100514260(v108, (unint64_t)v109);
      }
      sub_100514260(v81, v82);
    }
    id v109 = v76;
    swift_retain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v115 = sub_100F64BE8(0, *((void *)v115 + 2) + 1, 1, v115);
    }
    unint64_t v83 = v115;
    unint64_t v85 = *((void *)v115 + 2);
    unint64_t v84 = *((void *)v115 + 3);
    if (v85 >= v84 >> 1) {
      unint64_t v83 = sub_100F64BE8((double *)(v84 > 1), v85 + 1, 1, v115);
    }
    *((void *)v83 + 2) = v85 + 1;
    uint64_t v115 = v83;
    id v86 = &v83[2 * v85];
    *((void *)v86 + 4) = v110;
    *((void *)v86 + 5) = v76;
    swift_release();

    swift_release();
    swift_release();
    uint64_t v50 = v46[2];
    uint64_t v87 = *(void **)(*(void *)(v50 + 16) + 32);
    *Swift::String v14 = v87;
    uint64_t v41 = v120;
    v124(v14, v126, v120);
    id v88 = v87;
    char v66 = _dispatchPreconditionTest(_:)();
    char v67 = v14;
    uint64_t v68 = v41;
LABEL_15:
    uint64_t v44 = v123;
    v123(v67, v68);
    if ((v66 & 1) == 0) {
      goto LABEL_39;
    }
  }
  if (v54 && v54 != 101)
  {
    uint64_t v89 = v54;
    uint64_t v90 = v46[3];
    uint64_t v91 = v46[4];
    uint64_t v92 = v46[5];
    uint64_t v46[3] = v89;
    uint64_t v93 = v111;
    *unint64_t v111 = 0;
    v93[1] = 0;
    sub_1007A0344(v90, v91, v92);
  }
  swift_release();
  uint64_t v94 = v114;
  uint64_t v95 = *(void **)(*(void *)(v114 + 16) + 32);
  *Swift::String v14 = v95;
  v124(v14, v126, v41);
  id v96 = v95;
  LOBYTE(v95) = _dispatchPreconditionTest(_:)();
  v44(v14, v41);
  if ((v95 & 1) == 0) {
LABEL_47:
  }
    __break(1u);
  swift_beginAccess();
  uint64_t v97 = *(sqlite3_stmt **)(v94 + 24);
  if (v97)
  {
    sqlite3_finalize(v97);
    *(void *)(v94 + 24) = 0;
  }
  swift_release();
  return v115;
}

double *sub_100C4B56C()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1005057FC(&qword_101699628);
  __chkstk_darwin(v2 - 8, v3);
  long long v184 = (char *)&v162 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v186 = type metadata accessor for CRLBoardCRDTData(0);
  uint64_t v5 = *(double **)(v186 - 8);
  uint64_t v7 = __chkstk_darwin(v186, v6);
  uint64_t v183 = (uint64_t)&v162 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7, v9);
  uint64_t v185 = (uint64_t)&v162 - v10;
  uint64_t v11 = type metadata accessor for DispatchPredicate();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11, v13);
  Swift::String v15 = (uint64_t *)((char *)&v162 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v16 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform17CRLBoardDataStore_queue);
  *Swift::String v15 = v16;
  Swift::String v17 = *(void (**)(void))(v12 + 104);
  unsigned int v192 = enum case for DispatchPredicate.onQueue(_:);
  unint64_t v191 = v12 + 104;
  CGFloat v193 = (void (*)(void *, void, uint64_t))v17;
  v17(v15);
  id v18 = v16;
  LOBYTE(v16) = _dispatchPreconditionTest(_:)();
  uint64_t v19 = *(void (**)(void *, uint64_t))(v12 + 8);
  uint64_t v190 = v12 + 8;
  v19(v15, v11);
  if ((v16 & 1) == 0) {
    goto LABEL_62;
  }
  CGFloat v189 = v19;
  uint64_t v187 = v11;
  uint64_t v194 = 0;
  unint64_t v195 = 0xE000000000000000;
  _StringGuts.grow(_:)(179);
  v20._countAndFlagsBits = 0x205443454C4553;
  v20._object = (void *)0xE700000000000000;
  String.append(_:)(v20);
  v21._countAndFlagsBits = sub_100CD9E14(0x736472616F62, (void *)0xE600000000000000);
  String.append(_:)(v21);
  swift_bridgeObjectRelease();
  v22._countAndFlagsBits = 8236;
  v22._object = (void *)0xE200000000000000;
  String.append(_:)(v22);
  v23._countAndFlagsBits = sub_100CE19F8(0x74695F6472616F62, (void *)0xED0000315F736D65);
  String.append(_:)(v23);
  swift_bridgeObjectRelease();
  v24._countAndFlagsBits = 8236;
  v24._object = (void *)0xE200000000000000;
  String.append(_:)(v24);
  v25._countAndFlagsBits = sub_100CE19F8(0x74695F6472616F62, (void *)0xED0000325F736D65);
  String.append(_:)(v25);
  swift_bridgeObjectRelease();
  v26._countAndFlagsBits = 0x204D4F524620;
  v26._object = (void *)0xE600000000000000;
  String.append(_:)(v26);
  v27._countAndFlagsBits = 0x736472616F62;
  v27._object = (void *)0xE600000000000000;
  String.append(_:)(v27);
  v28._countAndFlagsBits = 0x4A2052454E4E4920;
  v28._object = (void *)0xEC000000204E494FLL;
  String.append(_:)(v28);
  v29._countAndFlagsBits = 0x74695F6472616F62;
  v29._object = (void *)0xEB00000000736D65;
  String.append(_:)(v29);
  v30._object = (void *)0x800000010127B940;
  v30._countAndFlagsBits = 0xD000000000000021;
  String.append(_:)(v30);
  v31._countAndFlagsBits = 0x6975755F6D657469;
  v31._object = (void *)0xE900000000000064;
  String.append(_:)(v31);
  v32._countAndFlagsBits = 2112800;
  v32._object = (void *)0xE300000000000000;
  String.append(_:)(v32);
  v33._countAndFlagsBits = 0x736472616F62;
  v33._object = (void *)0xE600000000000000;
  String.append(_:)(v33);
  v34._countAndFlagsBits = 46;
  v34._object = (void *)0xE100000000000000;
  String.append(_:)(v34);
  v35._countAndFlagsBits = 0x656E6961746E6F63;
  v35._object = (void *)0xEE00646975755F72;
  String.append(_:)(v35);
  v36._countAndFlagsBits = 0x2052454E4E492029;
  v36._object = (void *)0xED0000204E494F4ALL;
  String.append(_:)(v36);
  v37._countAndFlagsBits = 0x74695F6472616F62;
  v37._object = (void *)0xEB00000000736D65;
  String.append(_:)(v37);
  v38._object = (void *)0x800000010127B970;
  v38._countAndFlagsBits = 0xD000000000000021;
  String.append(_:)(v38);
  v39._countAndFlagsBits = 0x6975755F6D657469;
  v39._object = (void *)0xE900000000000064;
  String.append(_:)(v39);
  v40._countAndFlagsBits = 2112800;
  v40._object = (void *)0xE300000000000000;
  String.append(_:)(v40);
  v41._countAndFlagsBits = 0x736472616F62;
  v41._object = (void *)0xE600000000000000;
  String.append(_:)(v41);
  v42._countAndFlagsBits = 46;
  v42._object = (void *)0xE100000000000000;
  String.append(_:)(v42);
  v43._countAndFlagsBits = 0xD000000000000018;
  v43._object = (void *)0x800000010127B9A0;
  String.append(_:)(v43);
  v44._countAndFlagsBits = 0x2045524548572029;
  v44._object = (void *)0xE800000000000000;
  String.append(_:)(v44);
  v45._countAndFlagsBits = 0x736472616F62;
  v45._object = (void *)0xE600000000000000;
  String.append(_:)(v45);
  v46._countAndFlagsBits = 46;
  v46._object = (void *)0xE100000000000000;
  String.append(_:)(v46);
  v47._countAndFlagsBits = 1635017060;
  v47._object = (void *)0xE400000000000000;
  String.append(_:)(v47);
  v48._countAndFlagsBits = 0xD000000000000011;
  v48._object = (void *)0x800000010127C0C0;
  String.append(_:)(v48);
  v49._countAndFlagsBits = 0x736472616F62;
  v49._object = (void *)0xE600000000000000;
  String.append(_:)(v49);
  v50._countAndFlagsBits = 46;
  v50._object = (void *)0xE100000000000000;
  String.append(_:)(v50);
  v51._countAndFlagsBits = 0x6E6F7473626D6F74;
  v51._object = (void *)0xEA00000000006465;
  String.append(_:)(v51);
  v52._countAndFlagsBits = 807419168;
  v52._object = (void *)0xE400000000000000;
  String.append(_:)(v52);
  uint64_t v53 = v194;
  uint64_t v54 = v195;
  type metadata accessor for SQLiteStatement();
  swift_initStackObject();
  uint64_t v55 = swift_retain();
  uint64_t v56 = v188;
  uint64_t v57 = sub_10079FC40(v55, v53, v54);
  if (v56) {
    goto LABEL_6;
  }
  uint64_t v58 = v57;
  uint64_t v181 = v1;
  float v182 = v5;
  swift_release();
  *Swift::String v15 = v18;
  uint64_t v59 = v187;
  unint64_t v60 = v191;
  v193(v15, v192, v187);
  id v61 = v18;
  char v62 = _dispatchPreconditionTest(_:)();
  uint64_t v63 = v189;
  v189(v15, v59);
  if ((v62 & 1) == 0)
  {
    __break(1u);
LABEL_68:
    uint64_t v155 = v164;
    sub_100514260(v164, v60);
    swift_bridgeObjectRelease();
    sub_100514260(v155, v60);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    uint64_t v156 = v178;
    swift_setDeallocating();
    swift_release();
    sub_1007A0344(v156[3], v156[4], v156[5]);
    swift_bridgeObjectRelease();
    uint64_t v157 = v177;
    CGFloat v158 = *(void **)(*(void *)(v177 + 16) + 32);
    *Swift::String v15 = v158;
    uint64_t v159 = v187;
    v193(v15, v192, v187);
    id v160 = v158;
    LOBYTE(v158) = _dispatchPreconditionTest(_:)();
    uint64_t result = (double *)((uint64_t (*)(void *, uint64_t))v189)(v15, v159);
    if ((v158 & 1) == 0) {
      goto LABEL_77;
    }
    swift_beginAccess();
    uint64_t v161 = *(sqlite3_stmt **)(v157 + 24);
    if (v161)
    {
      sqlite3_finalize(v161);
      *(void *)(v157 + 24) = 0;
    }
LABEL_6:
    swift_release();
    if (qword_10166FB70 == -1) {
      goto LABEL_7;
    }
    goto LABEL_63;
  }
  uint64_t v64 = sub_100C49494();
  id v169 = v61;
  unint64_t v73 = sub_100C2FED0(v64);
  uint64_t v188 = 0;
  swift_bridgeObjectRelease();
  uint64_t v172 = sub_100CDDF48(v73);
  swift_bridgeObjectRelease();
  id v74 = *(void **)(*(void *)(v58 + 16) + 32);
  *Swift::String v15 = v74;
  uint64_t v75 = v187;
  v193(v15, v192, v187);
  id v76 = v74;
  LOBYTE(v74) = _dispatchPreconditionTest(_:)();
  v63(v15, v75);
  if ((v74 & 1) == 0)
  {
    __break(1u);
    goto LABEL_73;
  }
  type metadata accessor for SQLiteRowIterator();
  uint64_t inited = (uint64_t *)swift_initStackObject();
  inited[3] = 0;
  uint64_t v78 = inited + 3;
  inited[4] = 0;
  uint64_t v171 = inited + 4;
  inited[5] = 1;
  inited[2] = v58;
  uint64_t v79 = *(void **)(*(void *)(v58 + 16) + 32);
  *Swift::String v15 = v79;
  uint64_t v177 = v58;
  swift_retain();
  v193(v15, v192, v75);
  id v80 = v79;
  LOBYTE(v79) = _dispatchPreconditionTest(_:)();
  v63(v15, v75);
  uint64_t v81 = (uint64_t)v184;
  if ((v79 & 1) == 0)
  {
LABEL_61:
    __break(1u);
LABEL_62:
    __break(1u);
LABEL_63:
    swift_once();
LABEL_7:
    swift_beginAccess();
    id v65 = (void *)static OS_os_log.boardStore;
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t v66 = swift_initStackObject();
    *(_OWORD *)(v66 + 16) = xmmword_10117E810;
    swift_getErrorValue();
    id v67 = v65;
    uint64_t v68 = Error.localizedDescription.getter();
    uint64_t v70 = v69;
    *(void *)(v66 + 56) = &type metadata for String;
    *(void *)(v66 + 64) = sub_100528BE4();
    *(void *)(v66 + 32) = v68;
    *(void *)(v66 + 4sub_100C38440(1, 0) = v70;
    uint64_t v71 = static os_log_type_t.error.getter();
    sub_100BAC898((uint64_t)v67, (uint64_t)&_mh_execute_header, v71, (uint64_t)"Failed to fetch a board and its container records and CKShares with error %@", 76, 2, v66);
    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();

    swift_willThrow();
    return v182;
  }
  uint64_t v179 = v182 + 7;
  uint64_t v82 = v177;
  float v182 = _swiftEmptyArrayStorage;
  uint64_t v178 = inited;
  uint64_t v180 = inited + 3;
  while (1)
  {
    uint64_t v85 = inited[3];
    uint64_t v86 = inited[4];
    uint64_t v87 = inited[5];
    void *v78 = 0;
    v78[1] = 0;
    inited[5] = 1;
    sub_1007A0344(v85, v86, v87);
    swift_beginAccess();
    unsigned int v88 = sqlite3_step(*(sqlite3_stmt **)(v82 + 24));
    if (v88 != 100)
    {
      if (v88 && v88 != 101)
      {
        uint64_t v142 = v88;
        uint64_t v143 = inited[3];
        uint64_t v144 = inited[4];
        uint64_t v145 = inited[5];
        inited[3] = v142;
        uint64_t v146 = v171;
        *uint64_t v171 = 0;
        v146[1] = 0;
        sub_1007A0344(v143, v144, v145);
      }
      swift_release();
      swift_bridgeObjectRelease();
      uint64_t v147 = v177;
      uint64_t v148 = *(void **)(*(void *)(v177 + 16) + 32);
      *Swift::String v15 = v148;
      v193(v15, v192, v75);
      id v149 = v148;
      LOBYTE(v148) = _dispatchPreconditionTest(_:)();
      v63(v15, v75);
      if (v148)
      {
        swift_beginAccess();
        uint64_t v150 = *(sqlite3_stmt **)(v147 + 24);
        if (v150)
        {
          sqlite3_finalize(v150);
          *(void *)(v147 + 24) = 0;
        }
        swift_release();
        return v182;
      }
LABEL_73:
      __break(1u);
LABEL_74:
      __break(1u);
LABEL_75:
      __break(1u);
    }
    uint64_t v89 = swift_retain_n();
    uint64_t v90 = sub_100CDA2EC(v89, 0);
    if (!v90) {
      goto LABEL_14;
    }
    uint64_t v91 = (uint64_t (*)(uint64_t))v90;
    uint64_t v92 = v75;
    uint64_t v93 = (uint64_t *)(v90 + OBJC_IVAR____TtC8Freeform19CRLBoardDatabaseRow_data);
    unint64_t v94 = *(void *)(v90 + OBJC_IVAR____TtC8Freeform19CRLBoardDatabaseRow_data + 8);
    if (v94 >> 60 == 15) {
      goto LABEL_12;
    }
    uint64_t v95 = *v93;
    sub_1005FA2A0(*v93, v94);
    sub_1005FA2A0(v95, v94);
    sub_100CDE0D8((unint64_t *)&unk_10169A0D0, (void (*)(uint64_t))type metadata accessor for CRLBoardCRDTData);
    swift_retain();
    id v96 = v91;
    uint64_t v97 = v186;
    uint64_t v98 = v188;
    CRDT.init(serializedData:)();
    if (!v98) {
      break;
    }
    swift_errorRelease();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))v179)(v81, 1, 1, v97);
    swift_release();
    sub_100514260(v95, v94);
    sub_100522F00(v81, &qword_101699628);
    uint64_t v188 = 0;
    uint64_t v78 = v180;
    uint64_t inited = v178;
LABEL_12:
    uint64_t v75 = v92;
LABEL_13:
    swift_release();
LABEL_14:
    uint64_t v63 = v189;
    swift_release();
    uint64_t v82 = inited[2];
    unint64_t v83 = *(void **)(*(void *)(v82 + 16) + 32);
    *Swift::String v15 = v83;
    v193(v15, v192, v75);
    id v84 = v83;
    LOBYTE(v83) = _dispatchPreconditionTest(_:)();
    v63(v15, v75);
    if ((v83 & 1) == 0) {
      goto LABEL_61;
    }
  }
  uint64_t v188 = 0;
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))v179)(v81, 0, 1, v97);
  uint64_t v176 = type metadata accessor for CRLBoardCRDTData;
  uint64_t v99 = v185;
  sub_100CE12D8(v81, v185, type metadata accessor for CRLBoardCRDTData);
  long long v174 = *(_OWORD *)((char *)v96 + OBJC_IVAR____TtC8Freeform19CRLBoardDatabaseRow_minRequiredVersions);
  uint64_t v173 = *(void *)((char *)v96 + OBJC_IVAR____TtC8Freeform19CRLBoardDatabaseRow_minRequiredVersions + 16);
  uint64_t v100 = v99;
  uint64_t v101 = v183;
  sub_100CE144C(v100, v183, type metadata accessor for CRLBoardCRDTData);
  uint64_t v102 = (char *)v96 + OBJC_IVAR____TtC8Freeform19CRLBoardDatabaseRow_boardIdentifier;
  uint64_t v103 = *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20);
  uint64_t v170 = (uint64_t)v102;
  id v104 = (uint64_t *)&v102[v103];
  uint64_t v105 = v104[1];
  uint64_t v175 = *v104;
  type metadata accessor for CRLBoardData(0);
  uint64_t v106 = swift_allocObject();
  *(void *)(v106 + 16) = 7;
  *(_OWORD *)(v106 + 24) = v174;
  *(void *)(v106 + 4sub_100C38440(1, 0) = v173;
  sub_100CE12D8(v101, v106 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData, v176);
  swift_bridgeObjectRetain();
  swift_release();
  sub_100514260(v95, v94);
  id v107 = (uint64_t *)(v106 + OBJC_IVAR____TtC8Freeform12CRLBoardData_ownerName);
  *id v107 = v175;
  v107[1] = v105;
  sub_100CE14B4(v185, type metadata accessor for CRLBoardCRDTData);
  uint64_t v108 = swift_retain();
  uint64_t v109 = sub_100CE01E8(v108, 17);
  if (!v109)
  {
    swift_release();
    goto LABEL_30;
  }
  uint64_t v110 = v109;
  unint64_t v111 = sub_100CDAD88(v109);
  uint64_t v75 = v187;
  uint64_t v78 = v180;
  if (!v111)
  {
    swift_release();
    swift_release();
    uint64_t v81 = (uint64_t)v184;
    goto LABEL_36;
  }
  *(void *)&long long v174 = v110;
  uint64_t v175 = v106;
  uint64_t v176 = v96;
  type metadata accessor for CRLContainerItemData(0);
  uint64_t v112 = swift_dynamicCastClass();
  uint64_t v81 = (uint64_t)v184;
  if (!v112) {
    goto LABEL_32;
  }
  if (__OFADD__(17, 13)) {
    goto LABEL_74;
  }
  uint64_t v113 = v112;
  uint64_t v114 = swift_retain();
  uint64_t v115 = sub_100CE01E8(v114, 30);
  if (!v115)
  {
LABEL_32:
    swift_release();
    swift_release();
    swift_release();
    goto LABEL_36;
  }
  uint64_t v173 = v113;
  uint64_t v116 = v115;
  id v117 = sub_100CDAD88(v115);
  if (!v117)
  {
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    goto LABEL_36;
  }
  uint64_t v168 = v116;
  uint64_t v118 = v117;
  uint64_t v119 = swift_dynamicCastClass();
  if (!v119)
  {
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    goto LABEL_36;
  }
  uint64_t v165 = v119;
  uint64_t v167 = v118;
  unint64_t v120 = *(void *)((char *)v176 + OBJC_IVAR____TtC8Freeform19CRLBoardDatabaseRow_ckShareData + 8);
  if (v120 >> 60 == 15)
  {
    id v166 = 0;
    uint64_t v121 = v193;
    uint64_t v122 = v177;
    uint64_t v123 = v170;
  }
  else
  {
    uint64_t v124 = *(void *)((char *)v176 + OBJC_IVAR____TtC8Freeform19CRLBoardDatabaseRow_ckShareData);
    sub_10050BF48(0, &qword_101693260);
    sub_10050BF48(0, &qword_101672C00);
    sub_100510D4C(v124, v120);
    sub_100510D4C(v124, v120);
    uint64_t v164 = v124;
    unint64_t v60 = v120;
    uint64_t v125 = v188;
    unsigned int v126 = (void *)static NSKeyedUnarchiver.unarchivedObject<A>(ofClass:from:)();
    uint64_t v188 = v125;
    uint64_t v123 = v170;
    if (v125) {
      goto LABEL_68;
    }
    if (v126)
    {
      id v166 = v126;
      id v163 = v126;
      id v127 = [v163 containerID];

      if (!v127)
      {
        sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"crl_checkForNilContainerID()", 28, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Sync/CRLCloudKitShareNameHelper.swift", 91, 2, 165, (uint64_t)"The containerID of a share should never be nil. This can prevent fast sync from starting.", 89, 2u, (uint64_t)_swiftEmptyArrayStorage);
        sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"crl_checkForNilContainerID()", 28, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Sync/CRLCloudKitShareNameHelper.swift", 91, 2, 165);
        [self logFullBacktrace];
      }
      uint64_t v128 = v164;
      unint64_t v129 = v120;
      sub_100514260(v164, v120);
    }
    else
    {
      uint64_t v128 = v164;
      unint64_t v129 = v120;
      sub_100514260(v164, v120);
      id v166 = 0;
    }
    uint64_t v75 = v187;
    sub_100514260(v128, v129);
    uint64_t v121 = v193;
    uint64_t v122 = v177;
  }
  uint64_t v130 = v169;
  *Swift::String v15 = v169;
  v121(v15, v192, v75);
  id v131 = v130;
  swift_bridgeObjectRetain();
  LOBYTE(v13sub_100C38440(1, 0) = _dispatchPreconditionTest(_:)();
  v189(v15, v75);
  if ((v130 & 1) == 0) {
    goto LABEL_75;
  }
  uint64_t v132 = v188;
  char v133 = sub_100C49F20(v123);
  uint64_t v188 = v132;
  if (!v132)
  {
    if (v133) {
      char v134 = 1;
    }
    else {
      char v134 = sub_1006E5EA4(v123, v172);
    }
    swift_bridgeObjectRelease();
    id v135 = v166;
    swift_retain();
    swift_retain();
    swift_retain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      float v182 = sub_100F64CF8(0, *((void *)v182 + 2) + 1, 1, v182);
    }
    uint64_t v136 = v182;
    unint64_t v138 = *((void *)v182 + 2);
    unint64_t v137 = *((void *)v182 + 3);
    if (v138 >= v137 >> 1) {
      uint64_t v136 = sub_100F64CF8((double *)(v137 > 1), v138 + 1, 1, v182);
    }
    *((void *)v136 + 2) = v138 + 1;
    float v182 = v136;
    uint64_t v139 = &v136[5 * v138];
    uint64_t v140 = v173;
    *((void *)v139 + 4) = v175;
    *((void *)v139 + 5) = v140;
    id v141 = v166;
    *((void *)v139 + 6) = v165;
    *((void *)v139 + 7) = v141;
    *((unsigned char *)v139 + 64) = v134 & 1;
    swift_release();
    swift_release();
    swift_release();

    swift_release();
    swift_release();
LABEL_30:
    uint64_t v75 = v187;
    uint64_t v81 = (uint64_t)v184;
    uint64_t v78 = v180;
LABEL_36:
    uint64_t inited = v178;
    goto LABEL_13;
  }
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease_n();
  swift_release();
  swift_release();
  swift_release();

  CKRecordID v151 = v178;
  swift_setDeallocating();
  swift_release();
  sub_1007A0344(v151[3], v151[4], v151[5]);
  swift_bridgeObjectRelease();
  swift_release();
  Swift::String v152 = *(void **)(*(void *)(v122 + 16) + 32);
  *Swift::String v15 = v152;
  v193(v15, v192, v75);
  id v153 = v152;
  LOBYTE(v152) = _dispatchPreconditionTest(_:)();
  uint64_t result = (double *)((uint64_t (*)(void *, uint64_t))v189)(v15, v75);
  if (v152)
  {
    swift_beginAccess();
    unint64_t v154 = *(sqlite3_stmt **)(v122 + 24);
    if (v154)
    {
      sqlite3_finalize(v154);
      *(void *)(v122 + 24) = 0;
    }
    goto LABEL_6;
  }
  __break(1u);
LABEL_77:
  __break(1u);
  return result;
}

uint64_t sub_100C4CA30@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = v2;
  id v160 = a1;
  uint64_t v6 = sub_1005057FC(&qword_101699628);
  __chkstk_darwin(v6 - 8, v7);
  *(void *)&long long v158 = (char *)&v144 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for CRLBoardCRDTData(0);
  uint64_t v157 = *(uint64_t (**)(uint64_t))(v9 - 8);
  uint64_t v11 = __chkstk_darwin(v9, v10);
  uint64_t v155 = (uint64_t *)((char *)&v144 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v11, v13);
  uint64_t v156 = (uint64_t)&v144 - v14;
  uint64_t v15 = type metadata accessor for DispatchPredicate();
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15, v17);
  uint64_t v19 = (uint64_t *)((char *)&v144 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  Swift::String v20 = *(void **)(v2 + OBJC_IVAR____TtC8Freeform17CRLBoardDataStore_queue);
  *uint64_t v19 = v20;
  Swift::String v21 = *(void (**)(void))(v16 + 104);
  unsigned int v164 = enum case for DispatchPredicate.onQueue(_:);
  unint64_t v163 = v16 + 104;
  uint64_t v165 = (void (*)(void *, void, uint64_t))v21;
  v21(v19);
  id v22 = v20;
  LOBYTE(v2sub_100C38440(1, 0) = _dispatchPreconditionTest(_:)();
  uint64_t v162 = *(void (**)(void *, uint64_t))(v16 + 8);
  v162(v19, v15);
  if ((v20 & 1) == 0)
  {
    __break(1u);
    goto LABEL_39;
  }
  uint64_t v161 = v15;
  uint64_t v159 = a2;
  uint64_t v166 = 0;
  unint64_t v167 = 0xE000000000000000;
  _StringGuts.grow(_:)(195);
  v23._countAndFlagsBits = 0x205443454C4553;
  v23._object = (void *)0xE700000000000000;
  String.append(_:)(v23);
  v24._countAndFlagsBits = sub_100CD9E14(0x736472616F62, (void *)0xE600000000000000);
  String.append(_:)(v24);
  swift_bridgeObjectRelease();
  v25._countAndFlagsBits = 8236;
  v25._object = (void *)0xE200000000000000;
  String.append(_:)(v25);
  v26._countAndFlagsBits = sub_100CE19F8(0x74695F6472616F62, (void *)0xED0000315F736D65);
  String.append(_:)(v26);
  swift_bridgeObjectRelease();
  v27._countAndFlagsBits = 8236;
  v27._object = (void *)0xE200000000000000;
  String.append(_:)(v27);
  v28._countAndFlagsBits = sub_100CE19F8(0x74695F6472616F62, (void *)0xED0000325F736D65);
  String.append(_:)(v28);
  swift_bridgeObjectRelease();
  v29._countAndFlagsBits = 0x204D4F524620;
  v29._object = (void *)0xE600000000000000;
  String.append(_:)(v29);
  v30._countAndFlagsBits = 0x736472616F62;
  v30._object = (void *)0xE600000000000000;
  String.append(_:)(v30);
  v31._countAndFlagsBits = 0x4A2052454E4E4920;
  v31._object = (void *)0xEC000000204E494FLL;
  String.append(_:)(v31);
  v32._countAndFlagsBits = 0x74695F6472616F62;
  v32._object = (void *)0xEB00000000736D65;
  String.append(_:)(v32);
  v33._object = (void *)0x800000010127B940;
  v33._countAndFlagsBits = 0xD000000000000021;
  String.append(_:)(v33);
  v34._countAndFlagsBits = 0x6975755F6D657469;
  v34._object = (void *)0xE900000000000064;
  String.append(_:)(v34);
  v35._countAndFlagsBits = 2112800;
  v35._object = (void *)0xE300000000000000;
  String.append(_:)(v35);
  v36._countAndFlagsBits = 0x736472616F62;
  v36._object = (void *)0xE600000000000000;
  String.append(_:)(v36);
  v37._countAndFlagsBits = 46;
  v37._object = (void *)0xE100000000000000;
  String.append(_:)(v37);
  v38._countAndFlagsBits = 0x656E6961746E6F63;
  v38._object = (void *)0xEE00646975755F72;
  String.append(_:)(v38);
  v39._countAndFlagsBits = 0x2052454E4E492029;
  v39._object = (void *)0xED0000204E494F4ALL;
  String.append(_:)(v39);
  v40._countAndFlagsBits = 0x74695F6472616F62;
  v40._object = (void *)0xEB00000000736D65;
  String.append(_:)(v40);
  v41._object = (void *)0x800000010127B970;
  v41._countAndFlagsBits = 0xD000000000000021;
  String.append(_:)(v41);
  v42._countAndFlagsBits = 0x6975755F6D657469;
  v42._object = (void *)0xE900000000000064;
  String.append(_:)(v42);
  v43._countAndFlagsBits = 2112800;
  v43._object = (void *)0xE300000000000000;
  String.append(_:)(v43);
  v44._countAndFlagsBits = 0x736472616F62;
  v44._object = (void *)0xE600000000000000;
  String.append(_:)(v44);
  v45._countAndFlagsBits = 46;
  v45._object = (void *)0xE100000000000000;
  String.append(_:)(v45);
  v46._countAndFlagsBits = 0xD000000000000018;
  v46._object = (void *)0x800000010127B9A0;
  String.append(_:)(v46);
  v47._object = (void *)0x800000010127B9C0;
  v47._countAndFlagsBits = 0xD000000000000017;
  String.append(_:)(v47);
  v48._countAndFlagsBits = 0xD000000000000010;
  v48._object = (void *)0x8000000101262BA0;
  String.append(_:)(v48);
  v49._object = (void *)0x800000010127B9E0;
  v49._countAndFlagsBits = 0xD000000000000017;
  String.append(_:)(v49);
  v50._countAndFlagsBits = 0x6E6F7473626D6F74;
  v50._object = (void *)0xEA00000000006465;
  String.append(_:)(v50);
  v51._countAndFlagsBits = 0x2930203D20;
  v51._object = (void *)0xE500000000000000;
  String.append(_:)(v51);
  uint64_t v52 = v166;
  uint64_t v53 = v167;
  type metadata accessor for SQLiteStatement();
  swift_initStackObject();
  uint64_t v54 = swift_retain();
  uint64_t v55 = sub_10079FC40(v54, v52, v53);
  if (v3)
  {
    swift_release();
    if (qword_10166FB70 == -1)
    {
LABEL_6:
      swift_beginAccess();
      uint64_t v66 = (void *)static OS_os_log.boardStore;
      sub_1005057FC((uint64_t *)&unk_101672B40);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_10117E810;
      swift_getErrorValue();
      id v68 = v66;
      uint64_t v69 = Error.localizedDescription.getter();
      uint64_t v71 = v70;
      *(void *)(inited + 56) = &type metadata for String;
      *(void *)(inited + 64) = sub_100528BE4();
      *(void *)(inited + 32) = v69;
      *(void *)(inited + 4sub_100C38440(1, 0) = v71;
      uint64_t v72 = static os_log_type_t.error.getter();
      sub_100BAC898((uint64_t)v68, (uint64_t)&_mh_execute_header, v72, (uint64_t)"Failed to fetch a board and its container records and CKShare with error %@", 75, 2, inited);
      swift_setDeallocating();
      sub_1005057FC(&qword_101672B50);
      swift_arrayDestroy();

      return swift_willThrow();
    }
LABEL_39:
    swift_once();
    goto LABEL_6;
  }
  uint64_t v56 = v55;
  uint64_t v154 = v4;
  swift_release();
  uint64_t v57 = sub_100753FC0();
  unint64_t v59 = v58;
  sub_10079DCE4(v57, v58, 1);
  sub_100510084(v57, v59);
  *uint64_t v19 = v22;
  uint64_t v60 = v161;
  unint64_t v61 = v163;
  v165(v19, v164, v161);
  id v160 = v22;
  char v62 = _dispatchPreconditionTest(_:)();
  uint64_t v63 = v162;
  uint64_t v64 = (void (*)(void *, uint64_t))((uint64_t (*)(void *, uint64_t))v162)(v19, v60);
  if (v62)
  {
    uint64_t v65 = sub_100C49494();
    unint64_t v74 = sub_100C2FED0(v65);
    swift_bridgeObjectRelease();
    uint64_t v152 = sub_100CDDF48(v74);
    unint64_t v61 = v163;
    swift_bridgeObjectRelease();
    uint64_t v75 = *(void **)(*(void *)(v56 + 16) + 32);
    *uint64_t v19 = v75;
    v165(v19, v164, v60);
    id v76 = v75;
    LOBYTE(v75) = _dispatchPreconditionTest(_:)();
    v63(v19, v60);
    if ((v75 & 1) == 0)
    {
      __break(1u);
      goto LABEL_53;
    }
    type metadata accessor for SQLiteRowIterator();
    uint64_t v77 = (uint64_t *)swift_initStackObject();
    v77[4] = 0;
    v77[5] = 1;
    v77[2] = v56;
    v77[3] = 0;
    swift_retain();
    uint64_t v78 = sub_10079ECE0();
    unint64_t v153 = v56;
    if (v78)
    {
      CKRecordID v151 = v77;
      unint64_t v61 = swift_retain();
      uint64_t v79 = sub_100CDA2EC(v61, 0);
      if (v79)
      {
        uint64_t v80 = v79;
        unint64_t v150 = v61;
        uint64_t v81 = (uint64_t *)(v79 + OBJC_IVAR____TtC8Freeform19CRLBoardDatabaseRow_data);
        unint64_t v61 = *(void *)(v79 + OBJC_IVAR____TtC8Freeform19CRLBoardDatabaseRow_data + 8);
        if (v61 >> 60 == 15)
        {
          unsigned int v88 = v151;
          swift_release();
          swift_release();
          swift_setDeallocating();
          swift_release();
          sub_1007A0344(v88[3], v88[4], v88[5]);
          swift_bridgeObjectRelease();
          uint64_t v89 = *(void **)(*(void *)(v56 + 16) + 32);
          *uint64_t v19 = v89;
          v165(v19, v164, v60);
          id v90 = v89;
          LOBYTE(v89) = _dispatchPreconditionTest(_:)();
          v63(v19, v60);
          if ((v89 & 1) == 0) {
            __break(1u);
          }
LABEL_18:
          uint64_t v91 = (void *)(v56 + 24);
          swift_beginAccess();
          uint64_t v92 = v56;
          char v93 = 0;
          uint64_t v94 = 0;
          uint64_t v95 = *(sqlite3_stmt **)(v92 + 24);
          if (v95)
          {
LABEL_19:
            unint64_t v61 = 0;
            uint64_t v9 = 0;
            uint64_t v63 = 0;
LABEL_20:
            sqlite3_finalize(v95);
            *uint64_t v91 = 0;
LABEL_37:
            uint64_t result = swift_release();
            uint64_t v125 = v159;
            *uint64_t v159 = v94;
            v125[1] = v61;
            v125[2] = v9;
            v125[3] = v63;
            *((unsigned char *)v125 + 32) = v93 & 1;
            return result;
          }
LABEL_36:
          unint64_t v61 = 0;
          uint64_t v9 = 0;
          uint64_t v63 = 0;
          goto LABEL_37;
        }
LABEL_16:
        unint64_t v87 = *v81;
        sub_1005FA2A0(*v81, v61);
        sub_1005FA2A0(v87, v61);
        sub_100CDE0D8((unint64_t *)&unk_10169A0D0, (void (*)(uint64_t))type metadata accessor for CRLBoardCRDTData);
        swift_retain();
        unint64_t v148 = v87;
        unint64_t v147 = v61;
        unint64_t v149 = v80;
        CRDT.init(serializedData:)();
        uint64_t v96 = v158;
        (*((void (**)(void, void, uint64_t, uint64_t))v157 + 7))(v158, 0, 1, v9);
        uint64_t v157 = type metadata accessor for CRLBoardCRDTData;
        uint64_t v97 = v156;
        sub_100CE12D8(v96, v156, type metadata accessor for CRLBoardCRDTData);
        unint64_t v98 = v149;
        long long v158 = *(_OWORD *)(v149 + OBJC_IVAR____TtC8Freeform19CRLBoardDatabaseRow_minRequiredVersions);
        uint64_t v146 = *(void *)(v149 + OBJC_IVAR____TtC8Freeform19CRLBoardDatabaseRow_minRequiredVersions + 16);
        uint64_t v99 = (uint64_t)v155;
        sub_100CE144C(v97, (uint64_t)v155, type metadata accessor for CRLBoardCRDTData);
        uint64_t v100 = v98 + OBJC_IVAR____TtC8Freeform19CRLBoardDatabaseRow_boardIdentifier;
        uint64_t v101 = *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20);
        uint64_t v145 = v100;
        uint64_t v102 = (uint64_t *)(v100 + v101);
        uint64_t v103 = *v102;
        uint64_t v104 = v102[1];
        type metadata accessor for CRLBoardData(0);
        uint64_t v105 = swift_allocObject();
        *(void *)(v105 + 16) = 7;
        *(_OWORD *)(v105 + 24) = v158;
        *(void *)(v105 + 4sub_100C38440(1, 0) = v146;
        sub_100CE12D8(v99, v105 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData, v157);
        swift_bridgeObjectRetain();
        swift_release();
        sub_100514260(v148, v147);
        uint64_t v106 = (void *)(v105 + OBJC_IVAR____TtC8Freeform12CRLBoardData_ownerName);
        *uint64_t v106 = v103;
        v106[1] = v104;
        sub_100CE14B4(v97, type metadata accessor for CRLBoardCRDTData);
        uint64_t v107 = swift_retain();
        uint64_t v108 = sub_100CE01E8(v107, 17);
        if (v108)
        {
          *(void *)&long long v158 = v105;
          uint64_t v109 = sub_100CDAD88(v108);
          unint64_t v98 = (unint64_t)v162;
          if (v109)
          {
            uint64_t v9 = (uint64_t)v109;
            type metadata accessor for CRLContainerItemData(0);
            uint64_t result = swift_dynamicCastClass();
            if (result)
            {
              if (!__OFADD__(17, 13))
              {
                unint64_t v61 = result;
                uint64_t v110 = swift_retain();
                unint64_t v111 = (uint64_t (*)(uint64_t))sub_100CE01E8(v110, 30);
                uint64_t v112 = v161;
                if (v111)
                {
                  uint64_t v157 = v111;
                  uint64_t v113 = sub_100CDAD88((uint64_t)v111);
                  if (v113)
                  {
                    uint64_t v156 = v9;
                    uint64_t v155 = v113;
                    uint64_t v114 = swift_dynamicCastClass();
                    if (v114)
                    {
                      uint64_t v9 = v114;
                      uint64_t v115 = (uint64_t *)(v149 + OBJC_IVAR____TtC8Freeform19CRLBoardDatabaseRow_ckShareData);
                      unint64_t v98 = *(void *)(v149 + OBJC_IVAR____TtC8Freeform19CRLBoardDatabaseRow_ckShareData + 8);
                      if (v98 >> 60 == 15)
                      {
                        uint64_t v63 = 0;
                        goto LABEL_55;
                      }
                      goto LABEL_46;
                    }
                    swift_release();
                    swift_release();
                    uint64_t v130 = v151;
                    swift_setDeallocating();
                    swift_release();
                    sub_1007A0344(v130[3], v130[4], v130[5]);
                    swift_release();
                    uint64_t v9 = v156;
                    goto LABEL_44;
                  }
                }
                else
                {
                  swift_release();
                  swift_release();
                  swift_release();
                  swift_release();
                  swift_release();
                  unsigned int v126 = v151;
                  swift_setDeallocating();
                  swift_release();
                  sub_1007A0344(v126[3], v126[4], v126[5]);
                  swift_bridgeObjectRelease();
                  unint64_t v61 = v153;
                  id v127 = *(void **)(*(void *)(v153 + 16) + 32);
                  *uint64_t v19 = v127;
                  v165(v19, v164, v112);
                  id v128 = v127;
                  LOBYTE(v127) = _dispatchPreconditionTest(_:)();
                  ((void (*)(void *, uint64_t))v98)(v19, v112);
                  if (v127) {
                    goto LABEL_35;
                  }
                  __break(1u);
                }
                swift_release();
                swift_release();
                unint64_t v129 = v151;
                swift_setDeallocating();
                swift_release();
                sub_1007A0344(v129[3], v129[4], v129[5]);
LABEL_44:
                swift_release();
                swift_release();
                swift_bridgeObjectRelease();
                swift_release();
                swift_release();
                unint64_t v61 = v153;
                id v131 = *(void **)(*(void *)(v153 + 16) + 32);
                *uint64_t v19 = v131;
                v165(v19, v164, v112);
                id v132 = v131;
                LOBYTE(v131) = _dispatchPreconditionTest(_:)();
                ((void (*)(void *, uint64_t))v98)(v19, v112);
                if ((v131 & 1) == 0)
                {
                  __break(1u);
LABEL_46:
                  uint64_t v133 = *v115;
                  uint64_t v146 = sub_10050BF48(0, &qword_101693260);
                  sub_10050BF48(0, &qword_101672C00);
                  sub_100510D4C(v133, v98);
                  sub_100510D4C(v133, v98);
                  unint64_t v147 = v133;
                  unint64_t v148 = v98;
                  uint64_t v64 = (void (*)(void *, uint64_t))static NSKeyedUnarchiver.unarchivedObject<A>(ofClass:from:)();
                  goto LABEL_48;
                }
LABEL_35:
                uint64_t v91 = (void *)(v61 + 24);
                swift_beginAccess();
                char v93 = 0;
                uint64_t v94 = 0;
                uint64_t v95 = *(sqlite3_stmt **)(v61 + 24);
                if (v95) {
                  goto LABEL_19;
                }
                goto LABEL_36;
              }
LABEL_65:
              __break(1u);
              goto LABEL_66;
            }
            swift_release();
            uint64_t v121 = v151;
            swift_setDeallocating();
            swift_release();
            sub_1007A0344(v121[3], v121[4], v121[5]);
            swift_release();
LABEL_34:
            swift_release();
            swift_release();
            swift_bridgeObjectRelease();
            swift_release();
            unint64_t v61 = v153;
            uint64_t v122 = *(void **)(*(void *)(v153 + 16) + 32);
            *uint64_t v19 = v122;
            uint64_t v123 = v161;
            v165(v19, v164, v161);
            id v124 = v122;
            LOBYTE(v122) = _dispatchPreconditionTest(_:)();
            uint64_t result = ((uint64_t (*)(void *, uint64_t))v98)(v19, v123);
            if (v122) {
              goto LABEL_35;
            }
            __break(1u);
            goto LABEL_65;
          }
        }
        else
        {
          swift_release();
          swift_release();
          swift_release();
          uint64_t v116 = v151;
          swift_setDeallocating();
          swift_release();
          sub_1007A0344(v116[3], v116[4], v116[5]);
          swift_bridgeObjectRelease();
          unint64_t v61 = v153;
          id v117 = *(void **)(*(void *)(v153 + 16) + 32);
          *uint64_t v19 = v117;
          uint64_t v118 = v161;
          v165(v19, v164, v161);
          id v119 = v117;
          LOBYTE(v117) = _dispatchPreconditionTest(_:)();
          v162(v19, v118);
          if (v117) {
            goto LABEL_35;
          }
          __break(1u);
        }
        swift_release();
        unint64_t v120 = v151;
        swift_setDeallocating();
        swift_release();
        sub_1007A0344(v120[3], v120[4], v120[5]);
        goto LABEL_34;
      }
    }
    else
    {
      swift_release();
      swift_setDeallocating();
      sub_1007A0344(v77[3], v77[4], v77[5]);
      swift_bridgeObjectRelease();
      uint64_t v82 = *(void **)(*(void *)(v56 + 16) + 32);
      *uint64_t v19 = v82;
      v165(v19, v164, v60);
      id v83 = v82;
      LOBYTE(v82) = _dispatchPreconditionTest(_:)();
      v63(v19, v60);
      if (v82) {
        goto LABEL_18;
      }
      __break(1u);
    }
    swift_release();
    swift_release();
    id v84 = v151;
    swift_setDeallocating();
    sub_1007A0344(v84[3], v84[4], v84[5]);
    swift_bridgeObjectRelease();
    uint64_t v85 = *(void **)(*(void *)(v56 + 16) + 32);
    *uint64_t v19 = v85;
    v165(v19, v164, v60);
    id v86 = v85;
    uint64_t v80 = _dispatchPreconditionTest(_:)();
    v63(v19, v60);
    if (v80) {
      goto LABEL_18;
    }
    __break(1u);
    goto LABEL_16;
  }
  __break(1u);
  __break(1u);
LABEL_48:
  uint64_t v63 = v64;
  if (v64)
  {
    char v134 = v64;
    id v135 = [v134 containerID];

    if (!v135)
    {
      sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"crl_checkForNilContainerID()", 28, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Sync/CRLCloudKitShareNameHelper.swift", 91, 2, 165, (uint64_t)"The containerID of a share should never be nil. This can prevent fast sync from starting.", 89, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"crl_checkForNilContainerID()", 28, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Sync/CRLCloudKitShareNameHelper.swift", 91, 2, 165);
      [self logFullBacktrace];
    }
    sub_100514260(v147, v148);

    goto LABEL_54;
  }
LABEL_53:
  sub_100514260(v147, v148);
LABEL_54:
  sub_100514260(v147, v148);
  uint64_t v112 = v161;
LABEL_55:
  uint64_t v136 = v160;
  *uint64_t v19 = v160;
  v165(v19, v164, v112);
  id v137 = v136;
  LOBYTE(v136) = _dispatchPreconditionTest(_:)();
  uint64_t result = ((uint64_t (*)(void *, uint64_t))v162)(v19, v112);
  if ((v136 & 1) == 0)
  {
LABEL_66:
    __break(1u);
    __break(1u);
    goto LABEL_67;
  }
  if (sub_100C49F20(v145)) {
    char v138 = 1;
  }
  else {
    char v138 = sub_1006E5EA4(v145, v152);
  }
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v139 = *(void **)(*(void *)(v153 + 16) + 32);
  *uint64_t v19 = v139;
  uint64_t v140 = v161;
  v165(v19, v164, v161);
  id v141 = v139;
  LOBYTE(v139) = _dispatchPreconditionTest(_:)();
  uint64_t result = ((uint64_t (*)(void *, uint64_t))v162)(v19, v140);
  if (v139)
  {
    unint64_t v142 = v153;
    uint64_t v143 = (void *)(v153 + 24);
    swift_beginAccess();
    uint64_t v95 = *(sqlite3_stmt **)(v142 + 24);
    if (!v95)
    {
      char v93 = v138;
      uint64_t v94 = v158;
      goto LABEL_37;
    }
    char v93 = v138;
    uint64_t v91 = v143;
    uint64_t v94 = v158;
    goto LABEL_20;
  }
LABEL_67:
  __break(1u);
  return result;
}

uint64_t sub_100C4E400()
{
  uint64_t v1 = type metadata accessor for CRLBoardIdentifierStorage(0);
  __chkstk_darwin(v1 - 8, v2);
  uint64_t v101 = (uint64_t)&v92 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for CRLBoardIdentifier(0);
  __chkstk_darwin(v4 - 8, v5);
  uint64_t v98 = (uint64_t)&v92 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7, v8);
  uint64_t v100 = (uint64_t)&v92 - v9;
  __chkstk_darwin(v10, v11);
  uint64_t v97 = (uint64_t)&v92 - v12;
  __chkstk_darwin(v13, v14);
  uint64_t v16 = (char *)&v92 - v15;
  __chkstk_darwin(v17, v18);
  uint64_t v99 = (uint64_t)&v92 - v19;
  uint64_t v20 = type metadata accessor for DispatchPredicate();
  uint64_t v21 = *(void *)(v20 - 8);
  __n128 v23 = __chkstk_darwin(v20, v22);
  Swift::String v25 = (uint64_t *)((char *)&v92 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
  Swift::String v26 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform17CRLBoardDataStore_queue);
  *Swift::String v25 = v26;
  Swift::String v27 = *(void (**)(void, __n128))(v21 + 104);
  unsigned int v109 = enum case for DispatchPredicate.onQueue(_:);
  uint64_t v108 = v21 + 104;
  Swift::String v28 = (void (*)(void *, void, uint64_t))v27;
  v27(v25, v23);
  id v29 = v26;
  LOBYTE(v26) = _dispatchPreconditionTest(_:)();
  Swift::String v30 = *(void (**)(void *, uint64_t))(v21 + 8);
  uint64_t v107 = v21 + 8;
  v30(v25, v20);
  if ((v26 & 1) == 0)
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  Swift::String v31 = (void (*)(void, void))v30;
  uint64_t v111 = 0;
  unint64_t v112 = 0xE000000000000000;
  _StringGuts.grow(_:)(17);
  swift_bridgeObjectRelease();
  type metadata accessor for SQLiteStatement();
  swift_initStackObject();
  uint64_t v32 = swift_retain();
  Swift::String v33 = v106;
  uint64_t v34 = sub_10079FC40(v32, 0xD000000000000023, 0x800000010127C6D0);
  uint64_t v103 = v33;
  if (v33)
  {
    swift_release();
    if (qword_10166FB70 == -1)
    {
LABEL_4:
      swift_beginAccess();
      Swift::String v35 = (void *)static OS_os_log.boardStore;
      sub_1005057FC((uint64_t *)&unk_101672B40);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_10117E810;
      swift_getErrorValue();
      id v37 = v35;
      uint64_t v38 = Error.localizedDescription.getter();
      uint64_t v40 = v39;
      *(void *)(inited + 56) = &type metadata for String;
      *(void *)(inited + 64) = sub_100528BE4();
      *(void *)(inited + 32) = v38;
      *(void *)(inited + 4sub_100C38440(1, 0) = v40;
      uint64_t v41 = static os_log_type_t.error.getter();
      sub_100BAC898((uint64_t)v37, (uint64_t)&_mh_execute_header, v41, (uint64_t)"Failed to fetch all board identifiers with error %@", 51, 2, inited);
      swift_setDeallocating();
      sub_1005057FC(&qword_101672B50);
      swift_arrayDestroy();

      swift_willThrow();
      return v38;
    }
LABEL_32:
    swift_once();
    goto LABEL_4;
  }
  uint64_t v42 = v34;
  uint64_t v94 = v16;
  swift_release();
  uint64_t v110 = &_swiftEmptySetSingleton;
  uint64_t v43 = *(void *)(v42 + 16);
  uint64_t v96 = v42 + 16;
  Swift::String v44 = *(void **)(v43 + 32);
  *Swift::String v25 = v44;
  Swift::String v45 = v28;
  v28(v25, v109, v20);
  id v46 = v44;
  LOBYTE(v44) = _dispatchPreconditionTest(_:)();
  uint64_t v106 = v31;
  v31(v25, v20);
  if ((v44 & 1) == 0)
  {
    __break(1u);
    goto LABEL_34;
  }
  type metadata accessor for SQLiteRowIterator();
  Swift::String v47 = (void *)swift_initStackObject();
  v47[3] = 0;
  uint64_t v104 = v47 + 3;
  v47[4] = 0;
  char v93 = v47 + 4;
  v47[5] = 1;
  v47[2] = v42;
  Swift::String v48 = *(void **)(*(void *)(v42 + 16) + 32);
  *Swift::String v25 = v48;
  uint64_t v95 = v42;
  swift_retain();
  v45(v25, v109, v20);
  id v49 = v48;
  LOBYTE(v48) = _dispatchPreconditionTest(_:)();
  Swift::String v50 = (void (*)(void *, uint64_t))v106;
  v106(v25, v20);
  if ((v48 & 1) == 0)
  {
LABEL_28:
    __break(1u);
LABEL_29:
    __break(1u);
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  uint64_t v52 = v95;
  uint64_t v51 = v96;
  uint64_t v102 = v47;
  while (1)
  {
    uint64_t v62 = v47[3];
    uint64_t v63 = v47[4];
    uint64_t v64 = v47[5];
    uint64_t v65 = v104;
    *uint64_t v104 = 0;
    v65[1] = 0;
    v47[5] = 1;
    sub_1007A0344(v62, v63, v64);
    uint64_t v106 = (void (*)(void, void))(v52 + 24);
    swift_beginAccess();
    unsigned int v66 = sqlite3_step(*(sqlite3_stmt **)(v52 + 24));
    if (v66 != 100) {
      break;
    }
    id v67 = *(void **)(*(void *)v51 + 32);
    *Swift::String v25 = v67;
    v45(v25, v109, v20);
    uint64_t v105 = v52;
    swift_retain();
    id v68 = v67;
    LOBYTE(v67) = _dispatchPreconditionTest(_:)();
    v50(v25, v20);
    if ((v67 & 1) == 0) {
      goto LABEL_29;
    }
    uint64_t v69 = *(void **)(*(void *)v51 + 32);
    *Swift::String v25 = v69;
    v45(v25, v109, v20);
    id v70 = v69;
    LOBYTE(v69) = _dispatchPreconditionTest(_:)();
    v50(v25, v20);
    if ((v69 & 1) == 0) {
      goto LABEL_30;
    }
    uint64_t v71 = (sqlite3_stmt **)v106;
    if (sqlite3_column_type(*(sqlite3_stmt **)v106, 0) == 5) {
      goto LABEL_17;
    }
    uint64_t v72 = sqlite3_column_blob(*v71, 0);
    if (!v72) {
      goto LABEL_17;
    }
    unint64_t v73 = v72;
    int v74 = sqlite3_column_bytes(*v71, 0);
    uint64_t v75 = sub_100670608(v73, v74);
    unint64_t v77 = v76;
    sub_100510D4C(v75, v76);
    uint64_t v78 = v101;
    uint64_t v79 = v103;
    sub_100753724(v75, v77, v101);
    if (v79)
    {
      swift_errorRelease();
      sub_100510084(v75, v77);
      uint64_t v103 = 0;
LABEL_17:
      Swift::String v47 = v102;
      if (qword_10166FB70 != -1) {
        swift_once();
      }
      swift_beginAccess();
      id v80 = (id)static OS_os_log.boardStore;
      uint64_t v81 = static os_log_type_t.error.getter();
      sub_100BAC898((uint64_t)v80, (uint64_t)&_mh_execute_header, v81, (uint64_t)"Failure reading board identifier data.", 38, 2, (uint64_t)_swiftEmptyArrayStorage);

      swift_release();
      goto LABEL_9;
    }
    uint64_t v103 = 0;
    uint64_t v53 = v97;
    sub_100CE12D8(v78, v97, type metadata accessor for CRLBoardIdentifierStorage);
    uint64_t v54 = v53;
    uint64_t v55 = (uint64_t)v94;
    sub_100CE12D8(v54, (uint64_t)v94, type metadata accessor for CRLBoardIdentifier);
    uint64_t v56 = v55;
    uint64_t v57 = v99;
    sub_100CE12D8(v56, v99, type metadata accessor for CRLBoardIdentifier);
    uint64_t v58 = v57;
    uint64_t v59 = v98;
    sub_100CE144C(v58, v98, type metadata accessor for CRLBoardIdentifier);
    sub_100CB7090(v100, v59);
    swift_release();
    sub_100510084(v75, v77);
    sub_100CE14B4(v100, type metadata accessor for CRLBoardIdentifier);
    sub_100CE14B4(v99, type metadata accessor for CRLBoardIdentifier);
    Swift::String v47 = v102;
LABEL_9:
    uint64_t v52 = v47[2];
    uint64_t v51 = v52 + 16;
    uint64_t v60 = *(void **)(*(void *)(v52 + 16) + 32);
    *Swift::String v25 = v60;
    v45(v25, v109, v20);
    id v61 = v60;
    LOBYTE(v6sub_100C38440(1, 0) = _dispatchPreconditionTest(_:)();
    v50(v25, v20);
    if ((v60 & 1) == 0) {
      goto LABEL_28;
    }
  }
  if (v66 && v66 != 101)
  {
    uint64_t v82 = v66;
    uint64_t v83 = v47[3];
    uint64_t v84 = v47[4];
    uint64_t v85 = v47[5];
    v47[3] = v82;
    id v86 = v93;
    *char v93 = 0;
    v86[1] = 0;
    sub_1007A0344(v83, v84, v85);
  }
  swift_release();
  uint64_t v38 = (uint64_t)v110;
  unint64_t v87 = *(void **)(*(void *)v96 + 32);
  *Swift::String v25 = v87;
  v45(v25, v109, v20);
  id v88 = v87;
  LOBYTE(v87) = _dispatchPreconditionTest(_:)();
  v50(v25, v20);
  if ((v87 & 1) == 0) {
LABEL_34:
  }
    __break(1u);
  uint64_t v89 = v95;
  swift_beginAccess();
  id v90 = *(sqlite3_stmt **)(v89 + 24);
  if (v90)
  {
    sqlite3_finalize(v90);
    *(void *)(v89 + 24) = 0;
  }
  swift_release();
  return v38;
}

uint64_t sub_100C4ED78()
{
  uint64_t v2 = type metadata accessor for CRLBoardIdentifierStorage(0);
  __chkstk_darwin(v2 - 8, v3);
  uint64_t v5 = (char *)&v104 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for CRLBoardIdentifier(0);
  uint64_t v8 = __chkstk_darwin(v6 - 8, v7);
  uint64_t v110 = (uint64_t)&v104 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __chkstk_darwin(v8, v10);
  uint64_t v109 = (uint64_t)&v104 - v12;
  uint64_t v14 = __chkstk_darwin(v11, v13);
  uint64_t v108 = (uint64_t)&v104 - v15;
  __chkstk_darwin(v14, v16);
  uint64_t v107 = (uint64_t)&v104 - v17;
  uint64_t v18 = type metadata accessor for DispatchPredicate();
  uint64_t v19 = *(void *)(v18 - 8);
  __chkstk_darwin(v18, v20);
  uint64_t v22 = (uint64_t *)((char *)&v104 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  __n128 v23 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform17CRLBoardDataStore_queue);
  *uint64_t v22 = v23;
  uint64_t v25 = v19 + 104;
  uint64_t v24 = *(void (**)(void))(v19 + 104);
  unsigned int v117 = enum case for DispatchPredicate.onQueue(_:);
  uint64_t v116 = (void (*)(void *, uint64_t, uint64_t))v24;
  v24(v22);
  id v26 = v23;
  LOBYTE(v23) = _dispatchPreconditionTest(_:)();
  Swift::String v27 = *(void (**)(void *, uint64_t))(v19 + 8);
  id v119 = v22;
  unint64_t v120 = v27;
  uint64_t v111 = v19 + 8;
  v27(v22, v18);
  if ((v23 & 1) == 0)
  {
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
  uint64_t v113 = v5;
  uint64_t v122 = 0;
  unint64_t v123 = 0xE000000000000000;
  _StringGuts.grow(_:)(21);
  swift_bridgeObjectRelease();
  type metadata accessor for SQLiteStatement();
  swift_initStackObject();
  uint64_t v28 = swift_retain();
  uint64_t v29 = sub_10079FC40(v28, 0xD000000000000037, 0x800000010127C190);
  if (v1)
  {
    swift_release();
    if (qword_10166FB70 == -1)
    {
LABEL_4:
      swift_beginAccess();
      Swift::String v30 = (void *)static OS_os_log.boardStore;
      sub_1005057FC((uint64_t *)&unk_101672B40);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_10117E810;
      swift_getErrorValue();
      id v32 = v30;
      uint64_t v33 = Error.localizedDescription.getter();
      uint64_t v35 = v34;
      *(void *)(inited + 56) = &type metadata for String;
      *(void *)(inited + 64) = sub_100528BE4();
      *(void *)(inited + 32) = v33;
      *(void *)(inited + 4sub_100C38440(1, 0) = v35;
      uint64_t v36 = static os_log_type_t.error.getter();
      sub_100BAC898((uint64_t)v32, (uint64_t)&_mh_execute_header, v36, (uint64_t)"Failed to fetch board activity times with error %@", 50, 2, inited);
      swift_setDeallocating();
      sub_1005057FC(&qword_101672B50);
      swift_arrayDestroy();

      return swift_willThrow();
    }
LABEL_37:
    swift_once();
    goto LABEL_4;
  }
  uint64_t v38 = v29;
  uint64_t v114 = 0;
  swift_release();
  uint64_t v39 = *(void **)(*(void *)(v38 + 16) + 32);
  uint64_t v40 = v119;
  *id v119 = v39;
  uint64_t v41 = v117;
  uint64_t v42 = v18;
  uint64_t v43 = v116;
  v116(v40, v117, v18);
  id v44 = v39;
  LOBYTE(v39) = _dispatchPreconditionTest(_:)();
  uint64_t v45 = v18;
  uint64_t v46 = v111;
  v120(v40, v45);
  if ((v39 & 1) == 0)
  {
    __break(1u);
    goto LABEL_39;
  }
  Swift::String v47 = *(void **)(*(void *)(v38 + 16) + 32);
  *uint64_t v40 = v47;
  uint64_t v48 = v38;
  swift_retain();
  v43(v40, v41, v42);
  id v49 = v47;
  LOBYTE(v47) = _dispatchPreconditionTest(_:)();
  v120(v40, v42);
  if ((v47 & 1) == 0)
  {
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  uint64_t v50 = v46;
  uint64_t v51 = v41;
  uint64_t v52 = (sqlite3_stmt **)(v48 + 24);
  uint64_t v105 = _swiftEmptyDictionarySingleton;
  uint64_t v115 = v48;
  uint64_t v118 = (sqlite3_stmt **)(v48 + 24);
  uint64_t v112 = v25;
  uint64_t v106 = v42;
  while (1)
  {
    sub_1007A0344(0, 0, 1);
    swift_beginAccess();
    unsigned int v53 = sqlite3_step(*v52);
    if (v53 != 100) {
      break;
    }
    uint64_t v54 = *(void **)(*(void *)(v48 + 16) + 32);
    uint64_t v55 = v119;
    *id v119 = v54;
    v43(v55, v51, v42);
    swift_retain();
    id v56 = v54;
    LOBYTE(v54) = _dispatchPreconditionTest(_:)();
    uint64_t v57 = v42;
    uint64_t v58 = v42;
    uint64_t v59 = v25;
    uint64_t v60 = v120;
    v120(v55, v57);
    if ((v54 & 1) == 0) {
      goto LABEL_33;
    }
    id v61 = *(void **)(*(void *)(v48 + 16) + 32);
    void *v55 = v61;
    uint64_t v62 = v59;
    v43(v55, v51, v58);
    id v63 = v61;
    char v64 = _dispatchPreconditionTest(_:)();
    uint64_t v42 = v58;
    uint64_t v65 = v50;
    v60(v55, v58);
    if ((v64 & 1) == 0) {
      goto LABEL_34;
    }
    unsigned int v66 = v118;
    if (sqlite3_column_type(*v118, 0) == 5)
    {
      uint64_t v67 = v115;
LABEL_17:
      swift_release();
      uint64_t v51 = v117;
      uint64_t v78 = v50;
      uint64_t v79 = v119;
      goto LABEL_18;
    }
    id v68 = sqlite3_column_blob(*v66, 0);
    uint64_t v67 = v115;
    if (!v68) {
      goto LABEL_17;
    }
    uint64_t v69 = v68;
    int v70 = sqlite3_column_bytes(*(sqlite3_stmt **)(v115 + 24), 0);
    uint64_t v71 = sub_100670608(v69, v70);
    unint64_t v73 = v72;
    int v74 = *(void **)(*(void *)(v67 + 16) + 32);
    uint64_t v75 = v119;
    *id v119 = v74;
    v116(v75, v117, v42);
    id v76 = v74;
    LOBYTE(v74) = _dispatchPreconditionTest(_:)();
    v120(v75, v42);
    if ((v74 & 1) == 0) {
      goto LABEL_35;
    }
    unint64_t v77 = v118;
    if (sqlite3_column_type(*v118, 1) == 5)
    {
      uint64_t v67 = v115;
      swift_release();
      sub_100510084(v71, v73);
      uint64_t v78 = v50;
      uint64_t v51 = v117;
      uint64_t v79 = v119;
      uint64_t v62 = v112;
    }
    else
    {
      double v84 = sqlite3_column_double(*v77, 1);
      sub_100510D4C(v71, v73);
      uint64_t v85 = v114;
      sub_100753724(v71, v73, (uint64_t)v113);
      if (!v85)
      {
        uint64_t v114 = 0;
        uint64_t v86 = v109;
        sub_100CE12D8((uint64_t)v113, v109, type metadata accessor for CRLBoardIdentifierStorage);
        uint64_t v87 = v86;
        uint64_t v88 = v108;
        sub_100CE12D8(v87, v108, type metadata accessor for CRLBoardIdentifier);
        uint64_t v89 = v88;
        uint64_t v90 = v107;
        sub_100CE12D8(v89, v107, type metadata accessor for CRLBoardIdentifier);
        uint64_t v91 = v110;
        sub_100CE144C(v90, v110, type metadata accessor for CRLBoardIdentifier);
        uint64_t v92 = v105;
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v121 = v92;
        sub_1009785F0(v91, isUniquelyReferenced_nonNull_native, v84);
        uint64_t v105 = v121;
        swift_bridgeObjectRelease();
        sub_100CE14B4(v91, type metadata accessor for CRLBoardIdentifier);
        uint64_t v94 = v115;
        swift_release();
        sub_100510084(v71, v73);
        sub_100CE14B4(v90, type metadata accessor for CRLBoardIdentifier);
        uint64_t v48 = v94;
        uint64_t v95 = *(void **)(*(void *)(v94 + 16) + 32);
        uint64_t v96 = v119;
        *id v119 = v95;
        uint64_t v51 = v117;
        uint64_t v42 = v106;
        uint64_t v43 = v116;
        uint64_t v25 = v112;
        v116(v96, v117, v106);
        id v97 = v95;
        char v82 = _dispatchPreconditionTest(_:)();
        v120(v96, v42);
        goto LABEL_19;
      }
      swift_errorRelease();
      uint64_t v67 = v115;
      swift_release();
      sub_100510084(v71, v73);
      uint64_t v114 = 0;
      uint64_t v51 = v117;
      uint64_t v79 = v119;
      uint64_t v78 = v65;
      uint64_t v62 = v112;
      uint64_t v42 = v106;
    }
LABEL_18:
    uint64_t v48 = v67;
    id v80 = *(void **)(*(void *)(v67 + 16) + 32);
    void *v79 = v80;
    uint64_t v43 = v116;
    v116(v79, v51, v42);
    id v81 = v80;
    char v82 = _dispatchPreconditionTest(_:)();
    uint64_t v83 = v79;
    uint64_t v50 = v78;
    v120(v83, v42);
    uint64_t v25 = v62;
LABEL_19:
    uint64_t v52 = v118;
    if ((v82 & 1) == 0) {
      goto LABEL_32;
    }
  }
  if (v53 && v53 != 101)
  {
    uint64_t v98 = v53;
    sub_1007A0344(0, 0, 1);
    uint64_t v99 = 0;
  }
  else
  {
    uint64_t v98 = 0;
    uint64_t v99 = 1;
  }
  swift_release();
  sub_1007A0344(v98, 0, v99);
  uint64_t v100 = *(void **)(*(void *)(v48 + 16) + 32);
  uint64_t v101 = v119;
  *id v119 = v100;
  v116(v101, v117, v42);
  id v102 = v100;
  LOBYTE(v10sub_100C38440(1, 0) = _dispatchPreconditionTest(_:)();
  v120(v101, v42);
  if ((v100 & 1) == 0) {
LABEL_39:
  }
    __break(1u);
  uint64_t v103 = v118;
  swift_beginAccess();
  if (*v103)
  {
    sqlite3_finalize(*v103);
    *uint64_t v103 = 0;
  }
  swift_release();
  return (uint64_t)v105;
}

uint64_t sub_100C4F8E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v144 = a1;
  uint64_t v5 = type metadata accessor for DispatchPredicate();
  uint64_t v6 = *(void *)(v5 - 8);
  __n128 v8 = __chkstk_darwin(v5, v7);
  uint64_t v10 = (uint64_t *)((char *)&v119 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v11 = *(void **)(v2 + OBJC_IVAR____TtC8Freeform17CRLBoardDataStore_queue);
  *uint64_t v10 = v11;
  uint64_t v12 = *(void (**)(void *, __n128))(v6 + 104);
  unsigned int v147 = enum case for DispatchPredicate.onQueue(_:);
  uint64_t v146 = v6 + 104;
  v12(v10, v8);
  id v13 = v11;
  LOBYTE(v11) = _dispatchPreconditionTest(_:)();
  uint64_t v14 = *(void (**)(void *, uint64_t))(v6 + 8);
  id v141 = v10;
  uint64_t v145 = v14;
  v14(v10, v5);
  if ((v11 & 1) == 0)
  {
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  uint64_t v140 = (void (*)(void *, uint64_t, uint64_t))v12;
  uint64_t v136 = a2;
  uint64_t v148 = 0;
  unint64_t v149 = 0xE000000000000000;
  _StringGuts.grow(_:)(80);
  v15._countAndFlagsBits = 0x205443454C4553;
  v15._object = (void *)0xE700000000000000;
  String.append(_:)(v15);
  v16._countAndFlagsBits = 0x6D5F736472616F62;
  v16._object = (void *)0xEF61746164617465;
  String.append(_:)(v16);
  v17._countAndFlagsBits = 46;
  v17._object = (void *)0xE100000000000000;
  String.append(_:)(v17);
  v18._countAndFlagsBits = 0x6174735F77656976;
  v18._object = (void *)0xEF617461645F6574;
  String.append(_:)(v18);
  v19._countAndFlagsBits = 0x204D4F524620;
  v19._object = (void *)0xE600000000000000;
  String.append(_:)(v19);
  v20._countAndFlagsBits = 0x6D5F736472616F62;
  v20._object = (void *)0xEF61746164617465;
  String.append(_:)(v20);
  v21._countAndFlagsBits = 0x4A2052454E4E4920;
  v21._object = (void *)0xEC000000204E494FLL;
  String.append(_:)(v21);
  v22._countAndFlagsBits = 0x736472616F62;
  v22._object = (void *)0xE600000000000000;
  String.append(_:)(v22);
  v23._countAndFlagsBits = 542002976;
  v23._object = (void *)0xE400000000000000;
  String.append(_:)(v23);
  v24._countAndFlagsBits = 0x736472616F62;
  v24._object = (void *)0xE600000000000000;
  String.append(_:)(v24);
  v25._countAndFlagsBits = 46;
  v25._object = (void *)0xE100000000000000;
  String.append(_:)(v25);
  v26._countAndFlagsBits = 0xD000000000000010;
  v26._object = (void *)0x8000000101262BA0;
  String.append(_:)(v26);
  v27._countAndFlagsBits = 2112800;
  v27._object = (void *)0xE300000000000000;
  String.append(_:)(v27);
  v28._countAndFlagsBits = 0x6D5F736472616F62;
  v28._object = (void *)0xEF61746164617465;
  String.append(_:)(v28);
  v29._countAndFlagsBits = 46;
  v29._object = (void *)0xE100000000000000;
  String.append(_:)(v29);
  v30._countAndFlagsBits = 0xD000000000000010;
  v30._object = (void *)0x8000000101262BA0;
  String.append(_:)(v30);
  v31._countAndFlagsBits = 0x2820455245485720;
  v31._object = (void *)0xE800000000000000;
  String.append(_:)(v31);
  v32._countAndFlagsBits = 0x6E6F7473626D6F74;
  v32._object = (void *)0xEA00000000006465;
  String.append(_:)(v32);
  v33._countAndFlagsBits = 0x444E412030203D20;
  v33._object = (void *)0xE900000000000020;
  String.append(_:)(v33);
  v34._countAndFlagsBits = 0x6D5F736472616F62;
  v34._object = (void *)0xEF61746164617465;
  String.append(_:)(v34);
  v35._countAndFlagsBits = 46;
  v35._object = (void *)0xE100000000000000;
  String.append(_:)(v35);
  v36._countAndFlagsBits = 0xD000000000000010;
  v36._object = (void *)0x8000000101262BA0;
  String.append(_:)(v36);
  v37._countAndFlagsBits = 0x293F203D20;
  v37._object = (void *)0xE500000000000000;
  String.append(_:)(v37);
  uint64_t v38 = v148;
  uint64_t v39 = v149;
  type metadata accessor for SQLiteStatement();
  swift_initStackObject();
  uint64_t v40 = swift_retain();
  uint64_t v41 = sub_10079FC40(v40, v38, v39);
  if (v3)
  {
    swift_release();
    if (qword_10166FB70 == -1)
    {
LABEL_5:
      swift_beginAccess();
      uint64_t v45 = (void *)static OS_os_log.boardStore;
      sub_1005057FC((uint64_t *)&unk_101672B40);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_10117E810;
      swift_getErrorValue();
      id v47 = v45;
      uint64_t v48 = Error.localizedDescription.getter();
      uint64_t v50 = v49;
      *(void *)(inited + 56) = &type metadata for String;
      *(void *)(inited + 64) = sub_100528BE4();
      *(void *)(inited + 32) = v48;
      *(void *)(inited + 4sub_100C38440(1, 0) = v50;
      uint64_t v51 = static os_log_type_t.error.getter();
      sub_100BAC898((uint64_t)v47, (uint64_t)&_mh_execute_header, v51, (uint64_t)"Failed to fetch view state with error %@", 40, 2, inited);
      swift_setDeallocating();
      sub_1005057FC(&qword_101672B50);
      swift_arrayDestroy();

      return swift_willThrow();
    }
LABEL_34:
    swift_once();
    goto LABEL_5;
  }
  uint64_t v42 = v41;
  swift_release();
  uint64_t v43 = sub_100753FC0();
  uint64_t v53 = v43;
  unint64_t v54 = v44;
  uint64_t v133 = 0;
  sub_10079DCE4(v43, v44, 1);
  sub_100510084(v53, v54);
  uint64_t v55 = *(void *)(v42 + 16);
  id v135 = (void *)(v42 + 16);
  id v56 = *(void **)(v55 + 32);
  uint64_t v57 = v42;
  uint64_t v59 = v140;
  uint64_t v58 = v141;
  *id v141 = v56;
  v59(v58, v147, v5);
  id v60 = v56;
  LOBYTE(v56) = _dispatchPreconditionTest(_:)();
  id v61 = v145;
  v145(v58, v5);
  if ((v56 & 1) == 0)
  {
    __break(1u);
    goto LABEL_36;
  }
  type metadata accessor for SQLiteRowIterator();
  uint64_t v62 = (void *)swift_initStackObject();
  v62[3] = 0;
  char v138 = v62 + 3;
  v62[4] = 0;
  uint64_t v122 = v62 + 4;
  v62[5] = 1;
  v62[2] = v57;
  id v63 = *(void **)(*(void *)(v57 + 16) + 32);
  void *v58 = v63;
  uint64_t v134 = v57;
  swift_retain();
  v59(v58, v147, v5);
  id v64 = v63;
  LOBYTE(v63) = _dispatchPreconditionTest(_:)();
  uint64_t v139 = v5;
  v61(v58, v5);
  if ((v63 & 1) == 0)
  {
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  unint64_t v124 = 0;
  uint64_t v125 = 0;
  unint64_t v131 = 0;
  uint64_t v132 = 0;
  uint64_t v129 = 0;
  uint64_t v130 = 0;
  uint64_t v127 = 0;
  uint64_t v128 = 0;
  unint64_t v126 = 0;
  int v123 = 2;
  long long v121 = xmmword_10117E810;
  uint64_t v66 = v134;
  uint64_t v65 = v135;
  id v137 = v62;
  while (1)
  {
    uint64_t v67 = v62[3];
    uint64_t v68 = v62[4];
    uint64_t v69 = v62[5];
    int v70 = v138;
    *char v138 = 0;
    v70[1] = 0;
    v62[5] = 1;
    sub_1007A0344(v67, v68, v69);
    swift_beginAccess();
    unsigned int v71 = sqlite3_step(*(sqlite3_stmt **)(v66 + 24));
    if (v71 != 100) {
      break;
    }
    unint64_t v72 = v65;
    uint64_t v73 = *v65;
    uint64_t v74 = v139;
    uint64_t v75 = v147;
    id v76 = *(void **)(v73 + 32);
    unint64_t v142 = (sqlite3_stmt **)(v66 + 24);
    id v143 = v76;
    void *v58 = v76;
    v59(v58, v75, v74);
    uint64_t v144 = v66;
    swift_retain();
    id v77 = v143;
    LODWORD(v143) = _dispatchPreconditionTest(_:)();
    uint64_t v78 = v145;
    v145(v58, v74);
    if ((v143 & 1) == 0) {
      goto LABEL_31;
    }
    uint64_t v79 = *(void **)(*v72 + 32);
    void *v58 = v79;
    v59(v58, v75, v74);
    id v80 = v79;
    LOBYTE(v79) = _dispatchPreconditionTest(_:)();
    uint64_t v81 = v74;
    v78(v58, v74);
    if ((v79 & 1) == 0) {
      goto LABEL_32;
    }
    char v82 = v142;
    if (sqlite3_column_type(*v142, 0) != 5 && (uint64_t v83 = sqlite3_column_blob(*v82, 0)) != 0)
    {
      uint64_t v90 = v83;
      int v91 = sqlite3_column_bytes(*v82, 0);
      uint64_t v92 = sub_100670608(v90, v91);
      uint64_t v94 = v93;
      type metadata accessor for JSONDecoder();
      swift_allocObject();
      JSONDecoder.init()();
      sub_100CE9584();
      uint64_t v95 = v133;
      dispatch thunk of JSONDecoder.decode<A>(_:from:)();
      uint64_t v59 = v140;
      uint64_t v58 = v141;
      uint64_t v96 = v147;
      uint64_t v133 = v95;
      if (v95)
      {
        id v143 = v94;
        swift_release();
        if (qword_10166F9C8 != -1) {
          swift_once();
        }
        swift_beginAccess();
        id v97 = (void *)static OS_os_log.crlDefault;
        sub_1005057FC((uint64_t *)&unk_101672B40);
        uint64_t v98 = swift_initStackObject();
        *(_OWORD *)(v98 + 16) = v121;
        uint64_t v148 = v133;
        id v99 = v97;
        swift_errorRetain();
        sub_1005057FC(&qword_101672BD0);
        unint64_t v142 = (sqlite3_stmt **)String.init<A>(describing:)();
        uint64_t v120 = v100;
        *(void *)(v98 + 56) = &type metadata for String;
        *(void *)(v98 + 64) = sub_100528BE4();
        *(void *)(v98 + 32) = v142;
        *(void *)(v98 + 4sub_100C38440(1, 0) = v120;
        uint64_t v101 = static os_log_type_t.error.getter();
        sub_100BAC898((uint64_t)v99, (uint64_t)&_mh_execute_header, v101, (uint64_t)"Error unarchiving view state: %@", 32, 2, v98);
        swift_setDeallocating();
        sub_1005057FC(&qword_101672B50);
        swift_arrayDestroy();

        swift_errorRelease();
        sub_10069C030(v125, v126, v127, v128, v129, v130, v131, v132, v124, v123);
        sub_100510084(v92, (unint64_t)v143);
        swift_release();
        uint64_t v125 = 0;
        unint64_t v126 = 0;
        uint64_t v127 = 0;
        uint64_t v128 = 0;
        uint64_t v129 = 0;
        uint64_t v130 = 0;
        unint64_t v131 = 0;
        uint64_t v132 = 0;
        unint64_t v124 = 0;
        uint64_t v133 = 0;
        int v123 = 2;
        uint64_t v96 = v147;
      }
      else
      {
        swift_release();
        sub_10069C030(v125, v126, v127, v128, v129, v130, v131, v132, v124, v123);
        sub_100510084(v92, (unint64_t)v94);
        swift_release();
        uint64_t v125 = v148;
        unint64_t v126 = v149;
        uint64_t v127 = v150;
        uint64_t v128 = v151;
        uint64_t v129 = v152;
        uint64_t v130 = v153;
        unint64_t v131 = v154;
        uint64_t v132 = v155;
        unint64_t v124 = v156;
        int v123 = v157;
      }
      uint64_t v62 = v137;
      uint64_t v66 = v137[2];
      uint64_t v65 = (void *)(v66 + 16);
      double v84 = *(void **)(*(void *)(v66 + 16) + 32);
      void *v58 = v84;
      uint64_t v102 = v96;
      uint64_t v85 = v139;
      v59(v58, v102, v139);
    }
    else
    {
      swift_release();
      uint64_t v62 = v137;
      uint64_t v66 = v137[2];
      uint64_t v65 = (void *)(v66 + 16);
      double v84 = *(void **)(*(void *)(v66 + 16) + 32);
      uint64_t v58 = v141;
      *id v141 = v84;
      uint64_t v85 = v81;
      uint64_t v86 = v81;
      uint64_t v59 = v140;
      v140(v58, v147, v86);
    }
    id v87 = v84;
    char v88 = _dispatchPreconditionTest(_:)();
    uint64_t v89 = v85;
    id v61 = v145;
    v145(v58, v89);
    if ((v88 & 1) == 0) {
      goto LABEL_30;
    }
  }
  uint64_t v103 = v61;
  if (v71 && v71 != 101)
  {
    uint64_t v104 = v71;
    uint64_t v105 = v62[3];
    uint64_t v106 = v62[4];
    uint64_t v107 = v62[5];
    v62[3] = v104;
    uint64_t v108 = v122;
    *uint64_t v122 = 0;
    v108[1] = 0;
    sub_1007A0344(v105, v106, v107);
  }
  swift_release();
  uint64_t v109 = *(void **)(*v135 + 32);
  void *v58 = v109;
  uint64_t v110 = v139;
  v59(v58, v147, v139);
  id v111 = v109;
  LOBYTE(v109) = _dispatchPreconditionTest(_:)();
  v103(v58, v110);
  if ((v109 & 1) == 0) {
LABEL_36:
  }
    __break(1u);
  uint64_t v112 = v134;
  swift_beginAccess();
  uint64_t v113 = *(sqlite3_stmt **)(v112 + 24);
  uint64_t v114 = v136;
  if (v113)
  {
    sqlite3_finalize(v113);
    *(void *)(v112 + 24) = 0;
  }
  uint64_t result = swift_release();
  uint64_t v115 = v126;
  *(void *)uint64_t v114 = v125;
  *(void *)(v114 + 8) = v115;
  uint64_t v116 = v128;
  *(void *)(v114 + 16) = v127;
  *(void *)(v114 + 24) = v116;
  uint64_t v117 = v130;
  *(void *)(v114 + 32) = v129;
  *(void *)(v114 + 4sub_100C38440(1, 0) = v117;
  uint64_t v118 = v132;
  *(void *)(v114 + 48) = v131;
  *(void *)(v114 + 56) = v118;
  *(void *)(v114 + 64) = v124;
  *(unsigned char *)(v114 + 72) = v123;
  return result;
}

uint64_t sub_100C50624(sqlite3_stmt **a1)
{
  uint64_t v98 = a1;
  uint64_t v3 = sub_1005057FC(&qword_101699628);
  __chkstk_darwin(v3 - 8, v4);
  uint64_t v6 = (char *)&v82 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v93 = type metadata accessor for CRLBoardCRDTData(0);
  uint64_t v89 = *(void (***)(uint64_t, uint64_t, uint64_t, uint64_t))(v93 - 8);
  uint64_t v8 = __chkstk_darwin(v93, v7);
  uint64_t v88 = (uint64_t)&v82 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8, v10);
  uint64_t v87 = (uint64_t)&v82 - v11;
  uint64_t v12 = type metadata accessor for DispatchPredicate();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12, v14);
  Swift::String v16 = (uint64_t *)((char *)&v82 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  Swift::String v17 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform17CRLBoardDataStore_queue);
  *Swift::String v16 = v17;
  unsigned int v18 = enum case for DispatchPredicate.onQueue(_:);
  Swift::String v19 = *(void (**)(void *, uint64_t, uint64_t))(v13 + 104);
  uint64_t v99 = v13 + 104;
  v19(v16, enum case for DispatchPredicate.onQueue(_:), v12);
  id v20 = v17;
  LOBYTE(v17) = _dispatchPreconditionTest(_:)();
  Swift::String v21 = *(void (**)(void *, uint64_t))(v13 + 8);
  uint64_t v90 = v12;
  uint64_t v96 = v21;
  uint64_t v91 = v13 + 8;
  v21(v16, v12);
  if ((v17 & 1) == 0) {
    goto LABEL_30;
  }
  unsigned int v95 = v18;
  uint64_t v92 = v6;
  uint64_t v102 = 0;
  unint64_t v103 = 0xE000000000000000;
  _StringGuts.grow(_:)(85);
  v22._countAndFlagsBits = 0x205443454C4553;
  v22._object = (void *)0xE700000000000000;
  String.append(_:)(v22);
  v23._countAndFlagsBits = sub_100CD9E14(0, (void *)0xE000000000000000);
  String.append(_:)(v23);
  swift_bridgeObjectRelease();
  v24._countAndFlagsBits = 0x204D4F524620;
  v24._object = (void *)0xE600000000000000;
  String.append(_:)(v24);
  v25._countAndFlagsBits = 0x736472616F62;
  v25._object = (void *)0xE600000000000000;
  String.append(_:)(v25);
  v26._countAndFlagsBits = 0x20455245485720;
  v26._object = (void *)0xE700000000000000;
  String.append(_:)(v26);
  v27._countAndFlagsBits = 0x6E6F7473626D6F74;
  v27._object = (void *)0xEA00000000006465;
  String.append(_:)(v27);
  v28._countAndFlagsBits = 0x444E412031203D20;
  v28._object = (void *)0xE900000000000020;
  String.append(_:)(v28);
  v29._countAndFlagsBits = 0xD00000000000001ALL;
  v29._object = (void *)0x800000010127BDB0;
  String.append(_:)(v29);
  v30._countAndFlagsBits = 0x444E412030203D20;
  v30._object = (void *)0xE900000000000020;
  String.append(_:)(v30);
  char v101 = 4;
  _print_unlocked<A, B>(_:_:)();
  v31._object = (void *)0x800000010127C130;
  v31._countAndFlagsBits = 0xD000000000000016;
  String.append(_:)(v31);
  v32._countAndFlagsBits = 0x6E6F7473626D6F74;
  v32._object = (void *)0xEE00657461645F65;
  String.append(_:)(v32);
  v33._countAndFlagsBits = 0x494C0A4353454420;
  v33._object = (void *)0xED00003F2054494DLL;
  String.append(_:)(v33);
  uint64_t v34 = v102;
  uint64_t v35 = v103;
  type metadata accessor for SQLiteStatement();
  swift_initStackObject();
  uint64_t v36 = swift_retain();
  uint64_t v37 = sub_10079FC40(v36, v34, v35);
  uint64_t v97 = v2;
  if (v2)
  {
    swift_release();
    if (qword_10166FB70 == -1)
    {
LABEL_4:
      swift_beginAccess();
      uint64_t v38 = (void *)static OS_os_log.boardStore;
      sub_1005057FC((uint64_t *)&unk_101672B40);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_10117E810;
      swift_getErrorValue();
      id v40 = v38;
      uint64_t v41 = Error.localizedDescription.getter();
      uint64_t v43 = v42;
      *(void *)(inited + 56) = &type metadata for String;
      *(void *)(inited + 64) = sub_100528BE4();
      *(void *)(inited + 32) = v41;
      *(void *)(inited + 4sub_100C38440(1, 0) = v43;
      uint64_t v44 = static os_log_type_t.error.getter();
      sub_100BAC898((uint64_t)v40, (uint64_t)&_mh_execute_header, v44, (uint64_t)"Failed to fetch list of recently deleted boards with error %@", 61, 2, inited);
      swift_setDeallocating();
      sub_1005057FC(&qword_101672B50);
      swift_arrayDestroy();

      swift_willThrow();
      return v41;
    }
LABEL_31:
    swift_once();
    goto LABEL_4;
  }
  uint64_t v45 = v37;
  swift_release();
  uint64_t v46 = *(void **)(*(void *)(v45 + 16) + 32);
  *Swift::String v16 = v46;
  uint64_t v47 = v95;
  uint64_t v48 = v90;
  v19(v16, v95, v90);
  id v49 = v46;
  LOBYTE(v46) = _dispatchPreconditionTest(_:)();
  uint64_t v50 = v96;
  v96(v16, v48);
  if ((v46 & 1) == 0)
  {
    __break(1u);
    goto LABEL_33;
  }
  uint64_t v51 = (sqlite3_stmt **)(v45 + 24);
  swift_beginAccess();
  sqlite3_bind_int64(*(sqlite3_stmt **)(v45 + 24), 1, (sqlite3_int64)v98);
  uint64_t v100 = (uint64_t)_swiftEmptyArrayStorage;
  uint64_t v52 = *(void **)(*(void *)(v45 + 16) + 32);
  *Swift::String v16 = v52;
  v19(v16, v47, v48);
  id v53 = v52;
  LOBYTE(v52) = _dispatchPreconditionTest(_:)();
  v50(v16, v48);
  if ((v52 & 1) == 0)
  {
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  unint64_t v54 = *(void **)(*(void *)(v45 + 16) + 32);
  *Swift::String v16 = v54;
  swift_retain();
  v19(v16, v47, v48);
  id v55 = v54;
  LOBYTE(v54) = _dispatchPreconditionTest(_:)();
  v50(v16, v48);
  if ((v54 & 1) == 0)
  {
LABEL_29:
    __break(1u);
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  v89 += 7;
  uint64_t v98 = (sqlite3_stmt **)(v45 + 24);
  uint64_t v94 = v19;
  while (1)
  {
    sub_1007A0344(0, 0, 1);
    swift_beginAccess();
    unsigned int v58 = sqlite3_step(*v51);
    if (v58 != 100) {
      break;
    }
    uint64_t v59 = swift_retain_n();
    uint64_t v60 = sub_100CDA2EC(v59, 0);
    if (v60)
    {
      uint64_t v61 = v60;
      uint64_t v62 = (uint64_t *)(v60 + OBJC_IVAR____TtC8Freeform19CRLBoardDatabaseRow_data);
      unint64_t v63 = *(void *)(v60 + OBJC_IVAR____TtC8Freeform19CRLBoardDatabaseRow_data + 8);
      if (v63 >> 60 == 15)
      {
        Swift::String v19 = v94;
      }
      else
      {
        uint64_t v64 = v48;
        uint64_t v65 = *v62;
        sub_1005FA2A0(*v62, v63);
        sub_1005FA2A0(v65, v63);
        sub_100CDE0D8((unint64_t *)&unk_10169A0D0, (void (*)(uint64_t))type metadata accessor for CRLBoardCRDTData);
        swift_retain();
        uint64_t v66 = (uint64_t)v92;
        uint64_t v67 = v93;
        uint64_t v68 = v97;
        CRDT.init(serializedData:)();
        if (v68)
        {
          swift_errorRelease();
          (*v89)(v66, 1, 1, v67);
          swift_release();
          sub_100514260(v65, v63);
          sub_100522F00(v66, &qword_101699628);
          uint64_t v97 = 0;
          uint64_t v47 = v95;
          Swift::String v19 = v94;
          uint64_t v48 = v64;
        }
        else
        {
          uint64_t v97 = 0;
          (*v89)(v66, 0, 1, v67);
          uint64_t v86 = type metadata accessor for CRLBoardCRDTData;
          uint64_t v69 = v87;
          sub_100CE12D8(v66, v87, type metadata accessor for CRLBoardCRDTData);
          long long v84 = *(_OWORD *)(v61 + OBJC_IVAR____TtC8Freeform19CRLBoardDatabaseRow_minRequiredVersions);
          uint64_t v83 = *(void *)(v61 + OBJC_IVAR____TtC8Freeform19CRLBoardDatabaseRow_minRequiredVersions + 16);
          uint64_t v70 = v88;
          sub_100CE144C(v69, v88, type metadata accessor for CRLBoardCRDTData);
          uint64_t v71 = OBJC_IVAR____TtC8Freeform19CRLBoardDatabaseRow_boardIdentifier;
          unint64_t v72 = (uint64_t *)(v61 + *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20) + v71);
          uint64_t v73 = v72[1];
          uint64_t v85 = *v72;
          type metadata accessor for CRLBoardData(0);
          uint64_t v74 = swift_allocObject();
          *(void *)(v74 + 16) = 7;
          *(_OWORD *)(v74 + 24) = v84;
          *(void *)(v74 + 4sub_100C38440(1, 0) = v83;
          sub_100CE12D8(v70, v74 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData, v86);
          swift_bridgeObjectRetain();
          swift_release();
          sub_100514260(v65, v63);
          uint64_t v75 = (void *)(v74 + OBJC_IVAR____TtC8Freeform12CRLBoardData_ownerName);
          *uint64_t v75 = v85;
          v75[1] = v73;
          sub_100CE14B4(v69, type metadata accessor for CRLBoardCRDTData);
          swift_retain();
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
          if (*(void *)((v100 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v100 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          }
          specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized Array._endMutation()();
          swift_release();
          uint64_t v47 = v95;
          Swift::String v19 = v94;
          uint64_t v48 = v90;
        }
      }
      swift_release();
      uint64_t v50 = v96;
    }
    swift_release();
    id v56 = *(void **)(*(void *)(v45 + 16) + 32);
    *Swift::String v16 = v56;
    v19(v16, v47, v48);
    id v57 = v56;
    LOBYTE(v56) = _dispatchPreconditionTest(_:)();
    v50(v16, v48);
    uint64_t v51 = v98;
    if ((v56 & 1) == 0) {
      goto LABEL_29;
    }
  }
  if (v58 && v58 != 101)
  {
    uint64_t v76 = v58;
    sub_1007A0344(0, 0, 1);
    uint64_t v77 = 0;
  }
  else
  {
    uint64_t v76 = 0;
    uint64_t v77 = 1;
  }
  uint64_t v41 = v100;
  swift_release();
  sub_1007A0344(v76, 0, v77);
  uint64_t v78 = *(void **)(*(void *)(v45 + 16) + 32);
  *Swift::String v16 = v78;
  v19(v16, v95, v48);
  id v79 = v78;
  LOBYTE(v78) = _dispatchPreconditionTest(_:)();
  v50(v16, v48);
  if ((v78 & 1) == 0) {
LABEL_34:
  }
    __break(1u);
  id v80 = v98;
  if (*v98)
  {
    sqlite3_finalize(*v98);
    void *v80 = 0;
  }
  swift_release();
  return v41;
}

uint64_t sub_100C51248(uint64_t a1)
{
  uint64_t v4 = type metadata accessor for DispatchPredicate();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4, v6);
  uint64_t v8 = (void *)((char *)v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform17CRLBoardDataStore_queue);
  *uint64_t v8 = v9;
  uint64_t v10 = *(void (**)(void))(v5 + 104);
  unsigned int v49 = enum case for DispatchPredicate.onQueue(_:);
  uint64_t v50 = (void (*)(void *, void, uint64_t))v10;
  v10(v8);
  id v11 = v9;
  LOBYTE(v9) = _dispatchPreconditionTest(_:)();
  uint64_t v12 = *(void (**)(void *, uint64_t))(v5 + 8);
  v12(v8, v4);
  if ((v9 & 1) == 0)
  {
    __break(1u);
LABEL_17:
    swift_once();
    goto LABEL_5;
  }
  v47[1] = a1;
  uint64_t v48 = v12;
  uint64_t v51 = 0;
  unint64_t v52 = 0xE000000000000000;
  _StringGuts.grow(_:)(32);
  swift_bridgeObjectRelease();
  uint64_t v51 = 0x205443454C4553;
  unint64_t v52 = 0xE700000000000000;
  v13._countAndFlagsBits = sub_100CD9E14(0, (void *)0xE000000000000000);
  String.append(_:)(v13);
  swift_bridgeObjectRelease();
  v14._countAndFlagsBits = 0x204D4F524620;
  v14._object = (void *)0xE600000000000000;
  String.append(_:)(v14);
  v15._countAndFlagsBits = 0x736472616F62;
  v15._object = (void *)0xE600000000000000;
  String.append(_:)(v15);
  v16._countAndFlagsBits = 0x2820455245485720;
  v16._object = (void *)0xE800000000000000;
  String.append(_:)(v16);
  v17._object = (void *)0x8000000101262BA0;
  v17._countAndFlagsBits = 0xD000000000000010;
  String.append(_:)(v17);
  v18._countAndFlagsBits = 0x293F203D20;
  v18._object = (void *)0xE500000000000000;
  String.append(_:)(v18);
  uint64_t v19 = v51;
  uint64_t v20 = v52;
  type metadata accessor for SQLiteStatement();
  swift_initStackObject();
  uint64_t v21 = swift_retain();
  uint64_t v22 = sub_10079FC40(v21, v19, v20);
  if (!v2)
  {
    uint64_t v23 = v22;
    swift_release();
    uint64_t v24 = sub_100753FC0();
    uint64_t v34 = v24;
    unint64_t v35 = v25;
    sub_10079DCE4(v24, v25, 1);
    sub_100510084(v34, v35);
    uint64_t v36 = *(void **)(*(void *)(v23 + 16) + 32);
    *uint64_t v8 = v36;
    v50(v8, v49, v4);
    id v37 = v36;
    LOBYTE(v36) = _dispatchPreconditionTest(_:)();
    uint64_t v38 = v48;
    v48(v8, v4);
    if (v36)
    {
      type metadata accessor for SQLiteRowIterator();
      uint64_t inited = (void *)swift_initStackObject();
      inited[4] = 0;
      inited[5] = 1;
      inited[2] = v23;
      inited[3] = 0;
      swift_retain();
      uint64_t v40 = sub_10079ECE0();
      if (!v40)
      {
        swift_release();
        swift_setDeallocating();
        sub_1007A0344(inited[3], inited[4], inited[5]);
        uint64_t v45 = *(void **)(*(void *)(v23 + 16) + 32);
        *uint64_t v8 = v45;
        v50(v8, v49, v4);
        id v46 = v45;
        LOBYTE(v45) = _dispatchPreconditionTest(_:)();
        v38(v8, v4);
        if (v45)
        {
          uint64_t v43 = (void *)(v23 + 24);
          swift_beginAccess();
          uint64_t v29 = 0;
          uint64_t v44 = *(sqlite3_stmt **)(v23 + 24);
          if (!v44) {
            goto LABEL_12;
          }
          goto LABEL_11;
        }
LABEL_20:
        __break(1u);
      }
      uint64_t v29 = sub_100CDA2EC(v40, 0);
      swift_release();
      swift_setDeallocating();
      sub_1007A0344(inited[3], inited[4], inited[5]);
      uint64_t v41 = *(void **)(*(void *)(v23 + 16) + 32);
      *uint64_t v8 = v41;
      v50(v8, v49, v4);
      id v42 = v41;
      LOBYTE(v41) = _dispatchPreconditionTest(_:)();
      v38(v8, v4);
      if (v41)
      {
        uint64_t v43 = (void *)(v23 + 24);
        swift_beginAccess();
        uint64_t v44 = *(sqlite3_stmt **)(v23 + 24);
        if (!v44)
        {
LABEL_12:
          swift_release();
          return v29;
        }
LABEL_11:
        sqlite3_finalize(v44);
        *uint64_t v43 = 0;
        goto LABEL_12;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_20;
  }
  swift_release();
  if (qword_10166FB70 != -1) {
    goto LABEL_17;
  }
LABEL_5:
  swift_beginAccess();
  Swift::String v26 = (void *)static OS_os_log.boardStore;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t v27 = swift_initStackObject();
  *(_OWORD *)(v27 + 16) = xmmword_10117E810;
  swift_getErrorValue();
  id v28 = v26;
  uint64_t v29 = Error.localizedDescription.getter();
  uint64_t v31 = v30;
  *(void *)(v27 + 56) = &type metadata for String;
  *(void *)(v27 + 64) = sub_100528BE4();
  *(void *)(v27 + 32) = v29;
  *(void *)(v27 + 4sub_100C38440(1, 0) = v31;
  uint64_t v32 = static os_log_type_t.error.getter();
  sub_100BAC898((uint64_t)v28, (uint64_t)&_mh_execute_header, v32, (uint64_t)"Failed to fetch a board record with error %@", 44, 2, v27);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  swift_willThrow();
  return v29;
}

uint64_t sub_100C518D4(unint64_t a1, uint64_t a2)
{
  uint64_t v6 = sub_1005057FC((uint64_t *)&unk_101674520);
  __chkstk_darwin(v6 - 8, v7);
  uint64_t v62 = (char *)&v59 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v67 = type metadata accessor for UUID();
  uint64_t v65 = *(void *)(v67 - 8);
  uint64_t v10 = __chkstk_darwin(v67, v9);
  uint64_t v66 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))((char *)&v59 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v13 = __chkstk_darwin(v10, v12);
  unint64_t v63 = (char *)&v59 - v14;
  __chkstk_darwin(v13, v15);
  uint64_t v73 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))((char *)&v59 - v16);
  uint64_t v17 = type metadata accessor for DispatchPredicate();
  uint64_t v18 = *(void *)(v17 - 8);
  __chkstk_darwin(v17, v19);
  uint64_t v21 = (uint64_t *)((char *)&v59 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v22 = *(void **)(v2 + OBJC_IVAR____TtC8Freeform17CRLBoardDataStore_queue);
  *uint64_t v21 = v22;
  (*(void (**)(void *, void, uint64_t))(v18 + 104))(v21, enum case for DispatchPredicate.onQueue(_:), v17);
  id v23 = v22;
  char v24 = _dispatchPreconditionTest(_:)();
  (*(void (**)(void *, uint64_t))(v18 + 8))(v21, v17);
  if ((v24 & 1) == 0)
  {
LABEL_46:
    __break(1u);
    goto LABEL_47;
  }
  unint64_t v25 = (unint64_t)sub_100C5210C(a1, a2);
  a2 = v3;
  if (v3) {
    return v2;
  }
  uint64_t v17 = v25;
  if (v25 >> 62)
  {
LABEL_47:
    swift_bridgeObjectRetain();
    uint64_t v54 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v54)
    {
      uint64_t v60 = a2;
      unint64_t v61 = a1;
      swift_bridgeObjectRetain_n();
      uint64_t v55 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      uint64_t v70 = v55;
      if (!v55)
      {
        swift_bridgeObjectRelease();
        Swift::String v26 = &_swiftEmptyDictionarySingleton;
        goto LABEL_50;
      }
      goto LABEL_6;
    }
LABEL_55:
    swift_bridgeObjectRelease();
    return 0;
  }
  uint64_t v70 = *(void *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v70) {
    goto LABEL_55;
  }
  uint64_t v60 = 0;
  unint64_t v61 = a1;
  swift_bridgeObjectRetain();
LABEL_6:
  unint64_t v69 = v17 & 0xC000000000000001;
  uint64_t v64 = v65 + 16;
  uint64_t v71 = (uint64_t (**)(unsigned int (**)(uint64_t, uint64_t, uint64_t), uint64_t))(v65 + 8);
  Swift::String v26 = &_swiftEmptyDictionarySingleton;
  uint64_t v27 = 4;
  uint64_t v68 = v17;
  do
  {
    uint64_t v31 = v27 - 4;
    if (v69)
    {
      a2 = specialized _ArrayBuffer._getElementSlowPath(_:)();
      uint64_t v32 = v27 - 3;
      if (__OFADD__(v31, 1)) {
        goto LABEL_43;
      }
    }
    else
    {
      a2 = *(void *)(v17 + 8 * v27);
      swift_retain();
      uint64_t v32 = v27 - 3;
      if (__OFADD__(v31, 1))
      {
LABEL_43:
        __break(1u);
LABEL_44:
        __break(1u);
LABEL_45:
        __break(1u);
        goto LABEL_46;
      }
    }
    Swift::String v33 = v73;
    (*(void (**)(void))(*(void *)a2 + 256))();
    type metadata accessor for CRLBoardItemDatabaseResult();
    uint64_t v17 = swift_allocObject();
    *(void *)(v17 + 16) = a2;
    *(void *)(v17 + 24) = _swiftEmptyArrayStorage;
    swift_retain();
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v72 = v26;
    a1 = sub_100955FC8((uint64_t)v33);
    uint64_t v36 = v26[2];
    BOOL v37 = (v35 & 1) == 0;
    uint64_t v38 = v36 + v37;
    if (__OFADD__(v36, v37)) {
      goto LABEL_44;
    }
    char v39 = v35;
    if (v26[3] >= v38)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        Swift::String v26 = v72;
        if (v35) {
          goto LABEL_7;
        }
      }
      else
      {
        sub_10098443C();
        Swift::String v26 = v72;
        if (v39) {
          goto LABEL_7;
        }
      }
    }
    else
    {
      sub_10096E2F0(v38, isUniquelyReferenced_nonNull_native);
      unint64_t v40 = sub_100955FC8((uint64_t)v73);
      if ((v39 & 1) != (v41 & 1)) {
        goto LABEL_58;
      }
      a1 = v40;
      Swift::String v26 = v72;
      if (v39)
      {
LABEL_7:
        uint64_t v28 = v26[7];
        swift_release();
        *(void *)(v28 + 8 * a1) = v17;
        goto LABEL_8;
      }
    }
    v26[(a1 >> 6) + 8] |= 1 << a1;
    (*(void (**)(unint64_t, unsigned int (**)(uint64_t, uint64_t, uint64_t), uint64_t))(v65 + 16))(v26[6] + *(void *)(v65 + 72) * a1, v73, v67);
    *(void *)(v26[7] + 8 * a1) = v17;
    uint64_t v42 = v26[2];
    BOOL v43 = __OFADD__(v42, 1);
    uint64_t v44 = v42 + 1;
    if (v43) {
      goto LABEL_45;
    }
    v26[2] = v44;
LABEL_8:
    swift_bridgeObjectRelease();
    uint64_t v29 = *v71;
    uint64_t v30 = v67;
    (*v71)(v73, v67);
    swift_release();
    ++v27;
    a1 = (unint64_t)v66;
    uint64_t v17 = v68;
  }
  while (v32 != v70);
  swift_bridgeObjectRelease();
  if (v70 < 1)
  {
    __break(1u);
LABEL_58:
    uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
  }
  else
  {
    uint64_t v45 = 0;
    uint64_t v73 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v65 + 48);
    v65 += 32;
    uint64_t v47 = (uint64_t)v62;
    uint64_t v46 = (uint64_t)v63;
    do
    {
      if (v69)
      {
        uint64_t v48 = specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        uint64_t v48 = *(void *)(v17 + 8 * v45 + 32);
        swift_retain();
      }
      (*(void (**)(void))(*(void *)v48 + 256))();
      if (v26[2] && (sub_100955FC8(v46), (v49 & 1) != 0))
      {
        swift_retain();
        uint64_t v50 = v29((unsigned int (**)(uint64_t, uint64_t, uint64_t))v46, v30);
        (*(void (**)(uint64_t))(*(void *)v48 + 264))(v50);
        if ((*v73)(v47, 1, v30) == 1)
        {
          swift_release();
          swift_release();
          sub_100522F00(v47, (uint64_t *)&unk_101674520);
        }
        else
        {
          (*(void (**)(unint64_t, uint64_t, uint64_t))v65)(a1, v47, v30);
          if (v26[2] && (unint64_t v51 = sub_100955FC8(a1), (v52 & 1) != 0))
          {
            uint64_t v53 = *(void *)(v26[7] + 8 * v51);
            swift_beginAccess();
            swift_retain();
            swift_retain();
            specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
            if (*(void *)((*(void *)(v53 + 24) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)(v53 + 24) & 0xFFFFFFFFFFFFFF8)
                                                                                                + 0x18) >> 1)
              specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
            specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
            specialized Array._endMutation()();
            swift_endAccess();
            swift_release();
            swift_release();
            swift_release();
            a1 = (unint64_t)v66;
            uint64_t v30 = v67;
            v29(v66, v67);
          }
          else
          {
            v29((unsigned int (**)(uint64_t, uint64_t, uint64_t))a1, v30);
            swift_release();
            swift_release();
          }
        }
        uint64_t v46 = (uint64_t)v63;
      }
      else
      {
        v29((unsigned int (**)(uint64_t, uint64_t, uint64_t))v46, v30);
        swift_release();
      }
      ++v45;
      uint64_t v17 = v68;
    }
    while (v70 != v45);
LABEL_50:
    swift_bridgeObjectRelease();
    if (v26[2] && (unint64_t v56 = sub_100955FC8(v61), (v57 & 1) != 0))
    {
      uint64_t v2 = *(void *)(v26[7] + 8 * v56);
      swift_retain();
    }
    else
    {
      uint64_t v2 = 0;
    }
    swift_bridgeObjectRelease();
    return v2;
  }
  return result;
}

double *sub_100C5210C(unint64_t a1, uint64_t a2)
{
  uint64_t v4 = v3;
  uint64_t v7 = type metadata accessor for DispatchPredicate();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7, v9);
  uint64_t v11 = (void *)((char *)v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v12 = *(void **)((char *)v2 + OBJC_IVAR____TtC8Freeform17CRLBoardDataStore_queue);
  *uint64_t v11 = v12;
  (*(void (**)(void *, void, uint64_t))(v8 + 104))(v11, enum case for DispatchPredicate.onQueue(_:), v7);
  id v13 = v12;
  LOBYTE(v12) = _dispatchPreconditionTest(_:)();
  (*(void (**)(void *, uint64_t))(v8 + 8))(v11, v7);
  if (v12)
  {
    unint64_t v50 = sub_100C528B8(a1, a2, 0);
    uint64_t v2 = v3;
    if (v3) {
      return v4;
    }
    uint64_t v53 = _swiftEmptyArrayStorage;
    if (!(v50 >> 62))
    {
      uint64_t v14 = *(void *)((v50 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v14)
      {
LABEL_5:
        v43[1] = v2;
        if (v14 < 1)
        {
          __break(1u);
          JUMPOUT(0x100C52884);
        }
        uint64_t v15 = 0;
        unint64_t v16 = v50 & 0xC000000000000001;
        long long v48 = xmmword_10117E810;
        uint64_t v47 = v14;
        unint64_t v46 = v50 & 0xC000000000000001;
        while (1)
        {
          if (v16)
          {
            uint64_t v17 = specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else
          {
            uint64_t v17 = *(void *)(v50 + 8 * v15 + 32);
            swift_retain();
          }
          if (*(unsigned char *)(v17 + OBJC_IVAR____TtC8Freeform23CRLBoardItemDatabaseRow_isLocalTombstone) == 1
            || (unint64_t v18 = *(void *)(v17 + OBJC_IVAR____TtC8Freeform23CRLBoardItemDatabaseRow_commonData + 8),
                v18 >> 60 == 15))
          {
            swift_release();
          }
          else
          {
            uint64_t v19 = *(void *)(v17 + OBJC_IVAR____TtC8Freeform23CRLBoardItemDatabaseRow_commonData);
            uint64_t v20 = (uint64_t *)(v17 + OBJC_IVAR____TtC8Freeform23CRLBoardItemDatabaseRow_minRequiredVersions);
            uint64_t v21 = *(void *)(v17 + OBJC_IVAR____TtC8Freeform23CRLBoardItemDatabaseRow_minRequiredVersions);
            uint64_t v45 = sub_1005057FC((uint64_t *)&unk_101672B40);
            uint64_t inited = swift_initStackObject();
            *(_OWORD *)(inited + 16) = v48;
            unint64_t v51 = &type metadata for UInt64;
            uint64_t v49 = v19;
            sub_100510D4C(v19, v18);
            sub_1005057FC(&qword_101699630);
            String.init<A>(describing:)();
            NSString v23 = String._bridgeToObjectiveC()();
            swift_bridgeObjectRelease();
            *(void *)(inited + 56) = sub_10050BF48(0, (unint64_t *)&qword_101673918);
            *(void *)(inited + 64) = sub_10062E0F4((unint64_t *)&qword_101677140, (unint64_t *)&qword_101673918);
            *(void *)(inited + 32) = v23;
            if (!v21)
            {
              sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"createItemData(from:)", 21, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLBoardDataStore.swift", 89, 2, 11030, (uint64_t)"expected inequality between two values of type %{public}@", 57, 2u, inited);
              sub_1005598CC(inited, (uint64_t)"createItemData(from:)", 21, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLBoardDataStore.swift", 89, 2, 11030);
            }
            swift_bridgeObjectRelease();
            uint64_t v24 = *(void *)(v17 + OBJC_IVAR____TtC8Freeform23CRLBoardItemDatabaseRow_itemTypeValue);
            char v25 = sub_1008E0C78(v24);
            if (v25 == 13)
            {
LABEL_32:
              unint64_t v34 = *(void *)(v17 + OBJC_IVAR____TtC8Freeform23CRLBoardItemDatabaseRow_specificData + 8);
              if (v34 >> 60 != 15)
              {
                LODWORD(v45) = v25 != 13;
                uint64_t v35 = *(void *)(v17 + OBJC_IVAR____TtC8Freeform23CRLBoardItemDatabaseRow_specificData);
                uint64_t v36 = *v20;
                uint64_t v44 = v20[1];
                uint64_t v37 = v20[2];
                uint64_t v38 = *(void *)(v17 + OBJC_IVAR____TtC8Freeform23CRLBoardItemDatabaseRow_objectOptions);
                sub_100510D4C(v35, v34);
                uint64_t v39 = v38;
                uint64_t v40 = v49;
                char v41 = sub_1009F10B0(v24, v45, v36, v44, v37, v39, v49, v18, v35, v34);
                sub_100514260(v35, v34);
                sub_100514260(v40, v18);
                swift_release();
                uint64_t v14 = v47;
                unint64_t v16 = v46;
                if (v41)
                {
                  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
                  if (*(void *)(((unint64_t)v53 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)v53 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
                    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
                  }
                  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
                  specialized Array._endMutation()();
                }
                goto LABEL_8;
              }
            }
            else
            {
              uint64_t v26 = 1;
              uint64_t v24 = 0;
              switch(v25)
              {
                case 1:
                  goto LABEL_32;
                case 2:
                  uint64_t v24 = 1;
                  goto LABEL_32;
                case 3:
                  uint64_t v24 = 2;
                  goto LABEL_32;
                case 4:
                  uint64_t v24 = 3;
                  goto LABEL_32;
                case 5:
                  uint64_t v24 = 4;
                  goto LABEL_32;
                case 6:
                  uint64_t v24 = 5;
                  goto LABEL_32;
                case 7:
                  uint64_t v24 = 6;
                  goto LABEL_32;
                case 8:
                  uint64_t v24 = 7;
                  goto LABEL_32;
                case 9:
                  uint64_t v24 = 8;
                  goto LABEL_32;
                case 10:
                  uint64_t v24 = 9;
                  goto LABEL_32;
                case 11:
                  uint64_t v24 = 10;
                  goto LABEL_32;
                case 12:
                  break;
                default:
                  uint64_t v26 = 0;
                  break;
              }
              if (qword_10166FB70 != -1) {
                swift_once();
              }
              swift_beginAccess();
              uint64_t v27 = (void *)static OS_os_log.boardStore;
              uint64_t v28 = swift_initStackObject();
              *(_OWORD *)(v28 + 16) = v48;
              unint64_t v51 = (void *)v26;
              __int16 v52 = 256;
              id v29 = v27;
              uint64_t v30 = String.init<A>(describing:)();
              uint64_t v32 = v31;
              *(void *)(v28 + 56) = &type metadata for String;
              *(void *)(v28 + 64) = sub_100528BE4();
              *(void *)(v28 + 32) = v30;
              *(void *)(v28 + 4sub_100C38440(1, 0) = v32;
              uint64_t v33 = static os_log_type_t.error.getter();
              sub_100BAC898((uint64_t)v29, (uint64_t)&_mh_execute_header, v33, (uint64_t)"Database record has invalid board item type: %@", 47, 2, v28);
              swift_setDeallocating();
              sub_1005057FC(&qword_101672B50);
              swift_arrayDestroy();
            }
            sub_100514260(v49, v18);
            swift_release();
            uint64_t v14 = v47;
            unint64_t v16 = v46;
          }
LABEL_8:
          if (v14 == ++v15)
          {
            swift_bridgeObjectRelease();
            uint64_t v4 = v53;
            goto LABEL_42;
          }
        }
      }
      goto LABEL_41;
    }
  }
  else
  {
    __break(1u);
  }
  swift_bridgeObjectRetain();
  uint64_t v14 = _CocoaArrayWrapper.endIndex.getter();
  if (v14) {
    goto LABEL_5;
  }
LABEL_41:
  swift_bridgeObjectRelease();
  uint64_t v4 = _swiftEmptyArrayStorage;
LABEL_42:
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_100C528B8(unint64_t a1, uint64_t a2, char a3)
{
  LOBYTE(v4) = a3;
  uint64_t v62 = a2;
  unint64_t v61 = a1;
  uint64_t v5 = type metadata accessor for DispatchPredicate();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5, v7);
  uint64_t v9 = (uint64_t *)((char *)&v58 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v10 = *(void **)(v3 + OBJC_IVAR____TtC8Freeform17CRLBoardDataStore_queue);
  *uint64_t v9 = v10;
  unsigned int v11 = enum case for DispatchPredicate.onQueue(_:);
  uint64_t v67 = *(void (**)(void *, void, uint64_t))(v6 + 104);
  v67(v9, enum case for DispatchPredicate.onQueue(_:), v5);
  id v12 = v10;
  char v13 = _dispatchPreconditionTest(_:)();
  uint64_t v64 = *(void (**)(void *, uint64_t))(v6 + 8);
  v64(v9, v5);
  if ((v13 & 1) == 0) {
    goto LABEL_26;
  }
  unsigned int v66 = v11;
  uint64_t v65 = v6 + 104;
  if (qword_10166F2D8 != -1) {
    goto LABEL_27;
  }
  while (1)
  {
    CRLAnalyticsOSSignpostManager.beginSignpostInterval(for:with:)(29, 1, (uint64_t)_swiftEmptyArrayStorage);
    uint64_t v14 = sub_100CDF3CC((uint64_t)&off_1015027E0, v4 & 1);
    uint64_t v16 = v15;
    unint64_t v68 = (unint64_t)_swiftEmptyArrayStorage;
    type metadata accessor for SQLiteStatement();
    swift_initStackObject();
    uint64_t v17 = swift_retain();
    uint64_t v18 = v63;
    uint64_t v19 = sub_10079FC40(v17, v14, v16);
    if (v18)
    {
      swift_release();
      swift_bridgeObjectRelease();
      if (qword_10166FB70 != -1) {
        swift_once();
      }
      swift_beginAccess();
      uint64_t v26 = (void *)static OS_os_log.boardStore;
      sub_1005057FC((uint64_t *)&unk_101672B40);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_10117E810;
      swift_getErrorValue();
      id v28 = v26;
      uint64_t v29 = Error.localizedDescription.getter();
      uint64_t v31 = v30;
      *(void *)(inited + 56) = &type metadata for String;
      *(void *)(inited + 64) = sub_100528BE4();
      *(void *)(inited + 32) = v29;
      *(void *)(inited + 4sub_100C38440(1, 0) = v31;
      uint64_t v32 = static os_log_type_t.error.getter();
      sub_100BAC898((uint64_t)v28, (uint64_t)&_mh_execute_header, v32, (uint64_t)"Failed to fetch a board item record with error %@", 49, 2, inited);
      swift_setDeallocating();
      sub_1005057FC(&qword_101672B50);
      swift_arrayDestroy();

      return swift_willThrow();
    }
    uint64_t v20 = v19;
    swift_release();
    uint64_t v21 = UUID.crl_data()();
    unint64_t v23 = v22;
    sub_10079DCE4(v21, v22, 1);
    sub_100510084(v21, v23);
    uint64_t v24 = sub_100753FC0();
    uint64_t v60 = 0;
    uint64_t v62 = v24;
    unint64_t v61 = v25;
    sub_10079DCE4(v24, v25, 2);
    unint64_t v34 = *(void **)(*(void *)(v20 + 16) + 32);
    *uint64_t v9 = v34;
    v67(v9, v66, v5);
    id v35 = v34;
    char v36 = _dispatchPreconditionTest(_:)();
    uint64_t v37 = v64;
    v64(v9, v5);
    if ((v36 & 1) == 0)
    {
      __break(1u);
      goto LABEL_29;
    }
    type metadata accessor for SQLiteRowIterator();
    uint64_t v4 = swift_initStackObject();
    *(void *)(v4 + 24) = 0;
    *(void *)(v4 + 32) = 0;
    uint64_t v59 = (void *)(v4 + 32);
    *(void *)(v4 + 4sub_100C38440(1, 0) = 1;
    *(void *)(v4 + 16) = v20;
    uint64_t v38 = *(void **)(*(void *)(v20 + 16) + 32);
    *uint64_t v9 = v38;
    uint64_t v63 = v20;
    swift_retain();
    v67(v9, v66, v5);
    id v39 = v38;
    LOBYTE(v38) = _dispatchPreconditionTest(_:)();
    v37(v9, v5);
    if (v38) {
      break;
    }
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    swift_once();
  }
  uint64_t v40 = v63;
  while (1)
  {
    uint64_t v43 = *(void *)(v4 + 24);
    uint64_t v44 = *(void *)(v4 + 32);
    uint64_t v45 = *(void *)(v4 + 40);
    *(void *)(v4 + 24) = 0;
    *(void *)(v4 + 32) = 0;
    *(void *)(v4 + 4sub_100C38440(1, 0) = 1;
    sub_1007A0344(v43, v44, v45);
    swift_beginAccess();
    unsigned int v46 = sqlite3_step(*(sqlite3_stmt **)(v40 + 24));
    if (v46 != 100) {
      break;
    }
    uint64_t v47 = swift_retain_n();
    if (sub_100CE01E8(v47, 0))
    {
      swift_retain();
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)((v68 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v68 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
      swift_release();
      uint64_t v37 = v64;
    }
    swift_release();
    uint64_t v40 = *(void *)(v4 + 16);
    char v41 = *(void **)(*(void *)(v40 + 16) + 32);
    *uint64_t v9 = v41;
    v67(v9, v66, v5);
    id v42 = v41;
    LOBYTE(v41) = _dispatchPreconditionTest(_:)();
    v37(v9, v5);
    if ((v41 & 1) == 0) {
      goto LABEL_25;
    }
  }
  if (v46 && v46 != 101)
  {
    uint64_t v48 = v46;
    uint64_t v49 = *(void *)(v4 + 24);
    uint64_t v50 = *(void *)(v4 + 32);
    uint64_t v51 = *(void *)(v4 + 40);
    *(void *)(v4 + 24) = v48;
    __int16 v52 = v59;
    *uint64_t v59 = 0;
    v52[1] = 0;
    sub_1007A0344(v49, v50, v51);
  }
  swift_release();
  sub_100510084(v62, v61);
  uint64_t v53 = v63;
  uint64_t v54 = *(void **)(*(void *)(v63 + 16) + 32);
  *uint64_t v9 = v54;
  v67(v9, v66, v5);
  id v55 = v54;
  char v56 = _dispatchPreconditionTest(_:)();
  v37(v9, v5);
  if ((v56 & 1) == 0) {
LABEL_29:
  }
    __break(1u);
  swift_beginAccess();
  char v57 = *(sqlite3_stmt **)(v53 + 24);
  if (v57)
  {
    sqlite3_finalize(v57);
    *(void *)(v53 + 24) = 0;
  }
  swift_release();
  CRLAnalyticsOSSignpostManager.endSignpostInterval(for:)(0x1DuLL, 1);
  return v68;
}

uint64_t sub_100C530B8(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = type metadata accessor for DispatchPredicate();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6, v8);
  uint64_t v10 = (uint64_t *)((char *)&v52 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  unsigned int v11 = *(void **)(v2 + OBJC_IVAR____TtC8Freeform17CRLBoardDataStore_queue);
  *uint64_t v10 = v11;
  id v12 = *(void (**)(void))(v7 + 104);
  unsigned int v54 = enum case for DispatchPredicate.onQueue(_:);
  id v55 = (void (*)(void *, void, uint64_t))v12;
  v12(v10);
  id v13 = v11;
  LOBYTE(v11) = _dispatchPreconditionTest(_:)();
  char v56 = *(void (**)(void *, uint64_t))(v7 + 8);
  v56(v10, v6);
  if ((v11 & 1) == 0)
  {
    __break(1u);
LABEL_17:
    swift_once();
    goto LABEL_5;
  }
  uint64_t v52 = a1;
  uint64_t v53 = a2;
  uint64_t v57 = 0;
  unint64_t v58 = 0xE000000000000000;
  _StringGuts.grow(_:)(43);
  swift_bridgeObjectRelease();
  uint64_t v57 = 0x205443454C4553;
  unint64_t v58 = 0xE700000000000000;
  v14._countAndFlagsBits = sub_100CE19F8(0, (void *)0xE000000000000000);
  String.append(_:)(v14);
  swift_bridgeObjectRelease();
  v15._countAndFlagsBits = 0x204D4F524620;
  v15._object = (void *)0xE600000000000000;
  String.append(_:)(v15);
  v16._countAndFlagsBits = 0x74695F6472616F62;
  v16._object = (void *)0xEB00000000736D65;
  String.append(_:)(v16);
  v17._countAndFlagsBits = 0x2820455245485720;
  v17._object = (void *)0xE800000000000000;
  String.append(_:)(v17);
  v18._object = (void *)0xE900000000000064;
  v18._countAndFlagsBits = 0x6975755F6D657469;
  String.append(_:)(v18);
  v19._countAndFlagsBits = 0x444E41203F203D20;
  v19._object = (void *)0xE900000000000020;
  String.append(_:)(v19);
  v20._object = (void *)0x8000000101262BA0;
  v20._countAndFlagsBits = 0xD000000000000010;
  String.append(_:)(v20);
  v21._countAndFlagsBits = 0x293F203D20;
  v21._object = (void *)0xE500000000000000;
  String.append(_:)(v21);
  uint64_t v22 = v57;
  uint64_t v23 = v58;
  type metadata accessor for SQLiteStatement();
  swift_initStackObject();
  uint64_t v24 = swift_retain();
  uint64_t v25 = sub_10079FC40(v24, v22, v23);
  if (!v3)
  {
    uint64_t v26 = v25;
    swift_release();
    uint64_t v27 = UUID.crl_data()();
    unint64_t v29 = v28;
    sub_10079DCE4(v27, v28, 1);
    sub_100510084(v27, v29);
    uint64_t v30 = sub_100753FC0();
    uint64_t v53 = 0;
    uint64_t v40 = v30;
    unint64_t v41 = v31;
    sub_10079DCE4(v30, v31, 2);
    id v42 = *(void **)(*(void *)(v26 + 16) + 32);
    *uint64_t v10 = v42;
    v55(v10, v54, v6);
    id v43 = v42;
    LOBYTE(v42) = _dispatchPreconditionTest(_:)();
    v56(v10, v6);
    if (v42)
    {
      type metadata accessor for SQLiteRowIterator();
      uint64_t inited = (void *)swift_initStackObject();
      inited[4] = 0;
      inited[5] = 1;
      inited[2] = v26;
      inited[3] = 0;
      swift_retain();
      uint64_t v45 = sub_10079ECE0();
      if (!v45)
      {
        swift_release();
        swift_setDeallocating();
        sub_1007A0344(inited[3], inited[4], inited[5]);
        sub_100510084(v40, v41);
        uint64_t v50 = *(void **)(*(void *)(v26 + 16) + 32);
        *uint64_t v10 = v50;
        v55(v10, v54, v6);
        id v51 = v50;
        LOBYTE(v5sub_100C38440(1, 0) = _dispatchPreconditionTest(_:)();
        v56(v10, v6);
        if (v50)
        {
          uint64_t v48 = (void *)(v26 + 24);
          swift_beginAccess();
          uint64_t v35 = 0;
          uint64_t v49 = *(sqlite3_stmt **)(v26 + 24);
          if (v49)
          {
LABEL_14:
            sqlite3_finalize(v49);
            *uint64_t v48 = 0;
          }
LABEL_15:
          swift_release();
          return v35;
        }
LABEL_20:
        __break(1u);
      }
      uint64_t v35 = sub_100CE01E8(v45, 0);
      swift_release();
      swift_setDeallocating();
      sub_1007A0344(inited[3], inited[4], inited[5]);
      sub_100510084(v40, v41);
      unsigned int v46 = *(void **)(*(void *)(v26 + 16) + 32);
      *uint64_t v10 = v46;
      v55(v10, v54, v6);
      id v47 = v46;
      LOBYTE(v46) = _dispatchPreconditionTest(_:)();
      v56(v10, v6);
      if (v46)
      {
        uint64_t v48 = (void *)(v26 + 24);
        swift_beginAccess();
        uint64_t v49 = *(sqlite3_stmt **)(v26 + 24);
        if (v49) {
          goto LABEL_14;
        }
        goto LABEL_15;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_20;
  }
  swift_release();
  if (qword_10166FB70 != -1) {
    goto LABEL_17;
  }
LABEL_5:
  swift_beginAccess();
  uint64_t v32 = (void *)static OS_os_log.boardStore;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t v33 = swift_initStackObject();
  *(_OWORD *)(v33 + 16) = xmmword_10117E810;
  swift_getErrorValue();
  id v34 = v32;
  uint64_t v35 = Error.localizedDescription.getter();
  uint64_t v37 = v36;
  *(void *)(v33 + 56) = &type metadata for String;
  *(void *)(v33 + 64) = sub_100528BE4();
  *(void *)(v33 + 32) = v35;
  *(void *)(v33 + 4sub_100C38440(1, 0) = v37;
  uint64_t v38 = static os_log_type_t.error.getter();
  sub_100BAC898((uint64_t)v34, (uint64_t)&_mh_execute_header, v38, (uint64_t)"Failed to fetch a board item record with error %@", 49, 2, v33);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  swift_willThrow();
  return v35;
}

uint64_t sub_100C53810(uint64_t a1)
{
  uint64_t v4 = type metadata accessor for DispatchPredicate();
  uint64_t v5 = *(void *)(v4 - 8);
  __n128 v7 = __chkstk_darwin(v4, v6);
  uint64_t v9 = (uint64_t *)((char *)&v66 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v10 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform17CRLBoardDataStore_queue);
  *uint64_t v9 = v10;
  unsigned int v11 = *(void (**)(void, __n128))(v5 + 104);
  unsigned int v69 = enum case for DispatchPredicate.onQueue(_:);
  uint64_t v70 = (void (*)(void *, void, uint64_t))v11;
  v11(v9, v7);
  id v12 = v10;
  LOBYTE(v1sub_100C38440(1, 0) = _dispatchPreconditionTest(_:)();
  id v13 = *(void (**)(void *, uint64_t))(v5 + 8);
  uint64_t v72 = v4;
  uint64_t v71 = v13;
  v13(v9, v4);
  if ((v10 & 1) == 0)
  {
    __break(1u);
    goto LABEL_19;
  }
  uint64_t v68 = a1;
  uint64_t v73 = 0;
  unint64_t v74 = 0xE000000000000000;
  _StringGuts.grow(_:)(120);
  v14._object = (void *)0x800000010127C540;
  v14._countAndFlagsBits = 0xD00000000000001DLL;
  String.append(_:)(v14);
  v15._countAndFlagsBits = 0x74695F6472616F62;
  v15._object = (void *)0xEB00000000736D65;
  String.append(_:)(v15);
  v16._countAndFlagsBits = 0x20455245485720;
  v16._object = (void *)0xE700000000000000;
  String.append(_:)(v16);
  v17._countAndFlagsBits = 0x74695F6472616F62;
  v17._object = (void *)0xEB00000000736D65;
  String.append(_:)(v17);
  v18._countAndFlagsBits = 46;
  v18._object = (void *)0xE100000000000000;
  String.append(_:)(v18);
  v19._countAndFlagsBits = 0xD000000000000010;
  v19._object = (void *)0x8000000101262BA0;
  String.append(_:)(v19);
  v20._countAndFlagsBits = 0x444E41203F203D20;
  v20._object = (void *)0xE900000000000020;
  String.append(_:)(v20);
  v21._countAndFlagsBits = 0x74695F6472616F62;
  v21._object = (void *)0xEB00000000736D65;
  String.append(_:)(v21);
  v22._countAndFlagsBits = 46;
  v22._object = (void *)0xE100000000000000;
  String.append(_:)(v22);
  v23._countAndFlagsBits = 0xD000000000000010;
  v23._object = (void *)0x800000010127B8B0;
  String.append(_:)(v23);
  v24._object = (void *)0x800000010127C810;
  v24._countAndFlagsBits = 0xD00000000000001DLL;
  String.append(_:)(v24);
  v25._countAndFlagsBits = 0x736472616F62;
  v25._object = (void *)0xE600000000000000;
  String.append(_:)(v25);
  v26._countAndFlagsBits = 0x20455245485720;
  v26._object = (void *)0xE700000000000000;
  String.append(_:)(v26);
  v27._countAndFlagsBits = 0x736472616F62;
  v27._object = (void *)0xE600000000000000;
  String.append(_:)(v27);
  v28._countAndFlagsBits = 46;
  v28._object = (void *)0xE100000000000000;
  String.append(_:)(v28);
  v29._countAndFlagsBits = 0xD000000000000010;
  v29._object = (void *)0x8000000101262BA0;
  String.append(_:)(v29);
  v30._countAndFlagsBits = 0x444E410A3F203D20;
  v30._object = (void *)0xE900000000000020;
  String.append(_:)(v30);
  v31._countAndFlagsBits = 0x736472616F62;
  v31._object = (void *)0xE600000000000000;
  String.append(_:)(v31);
  v32._countAndFlagsBits = 46;
  v32._object = (void *)0xE100000000000000;
  String.append(_:)(v32);
  v33._countAndFlagsBits = 0xD000000000000010;
  v33._object = (void *)0x800000010127B8B0;
  String.append(_:)(v33);
  v34._countAndFlagsBits = 0x292030203E20;
  v34._object = (void *)0xE600000000000000;
  String.append(_:)(v34);
  uint64_t v35 = v73;
  uint64_t v36 = v74;
  type metadata accessor for SQLiteStatement();
  swift_initStackObject();
  uint64_t v37 = swift_retain();
  uint64_t v38 = sub_10079FC40(v37, v35, v36);
  if (v2)
  {
    swift_release();
    if (qword_10166FB70 == -1)
    {
LABEL_5:
      swift_beginAccess();
      id v42 = (void *)static OS_os_log.boardStore;
      sub_1005057FC((uint64_t *)&unk_101672B40);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_10117E810;
      swift_getErrorValue();
      uint64_t v44 = v42;
      uint64_t v45 = Error.localizedDescription.getter();
      uint64_t v47 = v46;
      *(void *)(inited + 56) = &type metadata for String;
      *(void *)(inited + 64) = sub_100528BE4();
      *(void *)(inited + 32) = v45;
      *(void *)(inited + 4sub_100C38440(1, 0) = v47;
      uint64_t v48 = static os_log_type_t.error.getter();
      sub_100BAC898(v44, (uint64_t)&_mh_execute_header, v48, (uint64_t)"Failed to fetch a board syncData with error %@", 46, 2, inited);
      swift_setDeallocating();
      sub_1005057FC(&qword_101672B50);
      swift_arrayDestroy();

      swift_willThrow();
      return v44 & 1;
    }
LABEL_19:
    swift_once();
    goto LABEL_5;
  }
  uint64_t v39 = v38;
  swift_release();
  uint64_t v40 = sub_100753FC0();
  uint64_t v50 = v40;
  unint64_t v51 = v41;
  sub_10079DCE4(v40, v41, 1);
  sub_10079DCE4(v50, v51, 2);
  uint64_t v52 = *(void **)(*(void *)(v39 + 16) + 32);
  *uint64_t v9 = v52;
  uint64_t v53 = v72;
  v70(v9, v69, v72);
  id v54 = v52;
  LOBYTE(v52) = _dispatchPreconditionTest(_:)();
  v71(v9, v53);
  if ((v52 & 1) == 0)
  {
    __break(1u);
LABEL_21:
    __break(1u);
LABEL_22:
    __break(1u);
  }
  type metadata accessor for SQLiteRowIterator();
  id v55 = (void *)swift_initStackObject();
  v55[4] = 0;
  v55[5] = 1;
  void v55[2] = v39;
  v55[3] = 0;
  swift_retain();
  uint64_t v56 = sub_10079ECE0();
  if (!v56)
  {
    swift_release();
    swift_setDeallocating();
    sub_1007A0344(v55[3], v55[4], v55[5]);
    sub_100510084(v50, v51);
LABEL_13:
    uint64_t v62 = *(void **)(*(void *)(v39 + 16) + 32);
    *uint64_t v9 = v62;
    uint64_t v63 = v72;
    v70(v9, v69, v72);
    id v64 = v62;
    LOBYTE(v62) = _dispatchPreconditionTest(_:)();
    v71(v9, v63);
    if (v62)
    {
      unint64_t v61 = (void *)(v39 + 24);
      swift_beginAccess();
      LOBYTE(v44) = 0;
      goto LABEL_15;
    }
    goto LABEL_21;
  }
  uint64_t v67 = sub_10079BE94(0, v56);
  LODWORD(v68) = v57;
  swift_release();
  swift_release();
  swift_setDeallocating();
  sub_1007A0344(v55[3], v55[4], v55[5]);
  sub_100510084(v50, v51);
  if (v68) {
    goto LABEL_13;
  }
  unint64_t v58 = *(void **)(*(void *)(v39 + 16) + 32);
  *uint64_t v9 = v58;
  uint64_t v59 = v72;
  v70(v9, v69, v72);
  id v60 = v58;
  LOBYTE(v58) = _dispatchPreconditionTest(_:)();
  v71(v9, v59);
  if ((v58 & 1) == 0) {
    goto LABEL_22;
  }
  LOBYTE(v44) = v67 > 0;
  unint64_t v61 = (void *)(v39 + 24);
  swift_beginAccess();
LABEL_15:
  uint64_t v65 = *(sqlite3_stmt **)(v39 + 24);
  if (v65)
  {
    sqlite3_finalize(v65);
    *unint64_t v61 = 0;
  }
  swift_release();
  return v44 & 1;
}

void *sub_100C54064()
{
  uint64_t v2 = type metadata accessor for CRLBoardDataStore.KeyValueTableKey(0);
  __chkstk_darwin(v2, v3);
  uint64_t v5 = (char *)v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for DispatchPredicate();
  uint64_t v7 = *(void *)(v6 - 8);
  __n128 v9 = __chkstk_darwin(v6, v8);
  unsigned int v11 = (void *)((char *)v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  id v12 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform17CRLBoardDataStore_queue);
  *unsigned int v11 = v12;
  (*(void (**)(void *, void, uint64_t, __n128))(v7 + 104))(v11, enum case for DispatchPredicate.onQueue(_:), v6, v9);
  id v13 = v12;
  LOBYTE(v12) = _dispatchPreconditionTest(_:)();
  uint64_t result = (void *)(*(uint64_t (**)(void *, uint64_t))(v7 + 8))(v11, v6);
  if (v12)
  {
    swift_storeEnumTagMultiPayload();
    uint64_t v15 = sub_100C542E4((uint64_t)v5);
    unint64_t v17 = v16;
    uint64_t result = (void *)sub_100CE14B4((uint64_t)v5, type metadata accessor for CRLBoardDataStore.KeyValueTableKey);
    if (!v1)
    {
      if (v17 >> 60 == 15)
      {
        return &_swiftEmptySetSingleton;
      }
      else
      {
        type metadata accessor for JSONDecoder();
        swift_allocObject();
        JSONDecoder.init()();
        sub_1005057FC(&qword_101677400);
        sub_100CE7730(&qword_1016997C8, (unint64_t *)&unk_101677290);
        dispatch thunk of JSONDecoder.decode<A>(_:from:)();
        sub_100514260(v15, v17);
        swift_release();
        return (void *)v18[1];
      }
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100C542E4(uint64_t a1)
{
  uint64_t v4 = type metadata accessor for DispatchPredicate();
  uint64_t v5 = *(void *)(v4 - 8);
  __n128 v7 = __chkstk_darwin(v4, v6);
  __n128 v9 = (void *)((char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v10 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform17CRLBoardDataStore_queue);
  *__n128 v9 = v10;
  (*(void (**)(void *, void, uint64_t, __n128))(v5 + 104))(v9, enum case for DispatchPredicate.onQueue(_:), v4, v7);
  id v11 = v10;
  LOBYTE(v1sub_100C38440(1, 0) = _dispatchPreconditionTest(_:)();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v5 + 8))(v9, v4);
  if (v10)
  {
    long long v13 = xmmword_101190880;
    sub_100C85BAC(a1, 0, 0, v1, (uint64_t *)&v13);
    uint64_t result = v13;
    if (v2) {
      return sub_100514260(v13, *((unint64_t *)&v13 + 1));
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100C5443C(uint64_t a1)
{
  uint64_t v4 = type metadata accessor for DispatchPredicate();
  uint64_t v5 = *(void *)(v4 - 8);
  __n128 v7 = __chkstk_darwin(v4, v6);
  __n128 v9 = (uint64_t *)((char *)&v49 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v10 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform17CRLBoardDataStore_queue);
  *__n128 v9 = v10;
  id v11 = *(void (**)(void, __n128))(v5 + 104);
  unsigned int v51 = enum case for DispatchPredicate.onQueue(_:);
  uint64_t v52 = (void (*)(void *, void, uint64_t))v11;
  v11(v9, v7);
  id v12 = v10;
  LOBYTE(v1sub_100C38440(1, 0) = _dispatchPreconditionTest(_:)();
  uint64_t v53 = *(void (**)(void *, uint64_t))(v5 + 8);
  v53(v9, v4);
  if ((v10 & 1) == 0)
  {
    __break(1u);
    goto LABEL_19;
  }
  uint64_t v50 = a1;
  uint64_t v54 = 0;
  unint64_t v55 = 0xE000000000000000;
  _StringGuts.grow(_:)(65);
  v13._countAndFlagsBits = 0xD00000000000001DLL;
  v13._object = (void *)0x800000010127C540;
  String.append(_:)(v13);
  v14._countAndFlagsBits = 0x736472616F62;
  v14._object = (void *)0xE600000000000000;
  String.append(_:)(v14);
  v15._countAndFlagsBits = 0x20455245485720;
  v15._object = (void *)0xE700000000000000;
  String.append(_:)(v15);
  v16._object = (void *)0x8000000101262BA0;
  v16._countAndFlagsBits = 0xD000000000000010;
  String.append(_:)(v16);
  v17._countAndFlagsBits = 0x444E41203F203D20;
  v17._object = (void *)0xE900000000000020;
  String.append(_:)(v17);
  v18._object = (void *)0xE900000000000061;
  v18._countAndFlagsBits = 0x7461645F636E7973;
  String.append(_:)(v18);
  v19._countAndFlagsBits = 0x20544F4E20534920;
  v19._object = (void *)0xEE0029204C4C554ELL;
  String.append(_:)(v19);
  uint64_t v20 = v54;
  uint64_t v21 = v55;
  type metadata accessor for SQLiteStatement();
  swift_initStackObject();
  uint64_t v22 = swift_retain();
  uint64_t v23 = sub_10079FC40(v22, v20, v21);
  if (v2)
  {
    swift_release();
    if (qword_10166FB70 == -1)
    {
LABEL_5:
      swift_beginAccess();
      uint64_t v27 = static OS_os_log.boardStore;
      sub_1005057FC((uint64_t *)&unk_101672B40);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_10117E810;
      swift_getErrorValue();
      id v29 = (id)v27;
      uint64_t v30 = Error.localizedDescription.getter();
      uint64_t v32 = v31;
      *(void *)(inited + 56) = &type metadata for String;
      *(void *)(inited + 64) = sub_100528BE4();
      *(void *)(inited + 32) = v30;
      *(void *)(inited + 4sub_100C38440(1, 0) = v32;
      uint64_t v33 = static os_log_type_t.error.getter();
      sub_100BAC898((uint64_t)v29, (uint64_t)&_mh_execute_header, v33, (uint64_t)"Failed to fetch a board syncData with error %@", 46, 2, inited);
      swift_setDeallocating();
      sub_1005057FC(&qword_101672B50);
      swift_arrayDestroy();

      swift_willThrow();
      return v27 & 1;
    }
LABEL_19:
    swift_once();
    goto LABEL_5;
  }
  uint64_t v24 = v23;
  swift_release();
  uint64_t v25 = sub_100753FC0();
  uint64_t v35 = v25;
  unint64_t v36 = v26;
  sub_10079DCE4(v25, v26, 1);
  sub_100510084(v35, v36);
  uint64_t v37 = *(void **)(*(void *)(v24 + 16) + 32);
  *__n128 v9 = v37;
  v52(v9, v51, v4);
  id v38 = v37;
  LOBYTE(v37) = _dispatchPreconditionTest(_:)();
  v53(v9, v4);
  if ((v37 & 1) == 0)
  {
    __break(1u);
LABEL_21:
    __break(1u);
LABEL_22:
    __break(1u);
  }
  type metadata accessor for SQLiteRowIterator();
  uint64_t v39 = (void *)swift_initStackObject();
  v39[4] = 0;
  v39[5] = 1;
  v39[2] = v24;
  v39[3] = 0;
  swift_retain();
  uint64_t v40 = sub_10079ECE0();
  if (!v40)
  {
    swift_release();
    swift_setDeallocating();
    sub_1007A0344(v39[3], v39[4], v39[5]);
LABEL_13:
    uint64_t v46 = *(void **)(*(void *)(v24 + 16) + 32);
    *__n128 v9 = v46;
    v52(v9, v51, v4);
    id v47 = v46;
    LOBYTE(v46) = _dispatchPreconditionTest(_:)();
    v53(v9, v4);
    if (v46)
    {
      uint64_t v45 = (void *)(v24 + 24);
      swift_beginAccess();
      LOBYTE(v27) = 0;
      goto LABEL_15;
    }
    goto LABEL_21;
  }
  uint64_t v50 = sub_10079BE94(0, v40);
  char v42 = v41;
  swift_release();
  swift_release();
  swift_setDeallocating();
  sub_1007A0344(v39[3], v39[4], v39[5]);
  if (v42) {
    goto LABEL_13;
  }
  id v43 = *(void **)(*(void *)(v24 + 16) + 32);
  *__n128 v9 = v43;
  v52(v9, v51, v4);
  id v44 = v43;
  LOBYTE(v43) = _dispatchPreconditionTest(_:)();
  v53(v9, v4);
  if ((v43 & 1) == 0) {
    goto LABEL_22;
  }
  LOBYTE(v27) = v50 > 0;
  uint64_t v45 = (void *)(v24 + 24);
  swift_beginAccess();
LABEL_15:
  uint64_t v48 = *(sqlite3_stmt **)(v24 + 24);
  if (v48)
  {
    sqlite3_finalize(v48);
    *uint64_t v45 = 0;
  }
  swift_release();
  return v27 & 1;
}

uint64_t sub_100C54B24(uint64_t a1, char a2)
{
  uint64_t v4 = v2;
  uint64_t v7 = type metadata accessor for DispatchPredicate();
  uint64_t v8 = *(void *)(v7 - 8);
  __n128 v10 = __chkstk_darwin(v7, v9);
  id v12 = (uint64_t *)((char *)&v51 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  Swift::String v13 = *(void **)(v4 + OBJC_IVAR____TtC8Freeform17CRLBoardDataStore_queue);
  *id v12 = v13;
  Swift::String v14 = *(void (**)(void, __n128))(v8 + 104);
  unsigned int v53 = enum case for DispatchPredicate.onQueue(_:);
  uint64_t v54 = (void (*)(void *, void, uint64_t))v14;
  v14(v12, v10);
  id v15 = v13;
  LOBYTE(v13) = _dispatchPreconditionTest(_:)();
  Swift::String v16 = *(void (**)(void *, uint64_t))(v8 + 8);
  uint64_t v52 = v7;
  unint64_t v55 = v16;
  v16(v12, v7);
  if ((v13 & 1) == 0)
  {
    __break(1u);
    goto LABEL_25;
  }
  uint64_t v51 = a1;
  if (a2) {
    uint64_t v17 = 0;
  }
  else {
    uint64_t v17 = 0xD000000000000012;
  }
  if (a2) {
    Swift::String v18 = (void *)0xE000000000000000;
  }
  else {
    Swift::String v18 = (void *)0x800000010127DE10;
  }
  unint64_t v56 = 0;
  unint64_t v57 = 0xE000000000000000;
  _StringGuts.grow(_:)(49);
  swift_bridgeObjectRelease();
  unint64_t v56 = 0xD00000000000003FLL;
  unint64_t v57 = 0x800000010127DE30;
  v19._countAndFlagsBits = v17;
  v19._object = v18;
  String.append(_:)(v19);
  swift_bridgeObjectRelease();
  v20._countAndFlagsBits = 10528;
  v20._object = (void *)0xE200000000000000;
  String.append(_:)(v20);
  uint64_t v21 = v56;
  uint64_t v22 = v57;
  type metadata accessor for SQLiteStatement();
  swift_initStackObject();
  uint64_t v23 = swift_retain();
  uint64_t v24 = sub_10079FC40(v23, v21, v22);
  if (v3)
  {
    swift_release();
    if (qword_10166FB70 == -1)
    {
LABEL_11:
      swift_beginAccess();
      uint64_t v28 = static OS_os_log.boardStore;
      sub_1005057FC((uint64_t *)&unk_101672B40);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_10117E810;
      swift_getErrorValue();
      id v30 = (id)v28;
      uint64_t v31 = Error.localizedDescription.getter();
      uint64_t v33 = v32;
      *(void *)(inited + 56) = &type metadata for String;
      *(void *)(inited + 64) = sub_100528BE4();
      *(void *)(inited + 32) = v31;
      *(void *)(inited + 4sub_100C38440(1, 0) = v33;
      uint64_t v34 = static os_log_type_t.error.getter();
      sub_100BAC898((uint64_t)v30, (uint64_t)&_mh_execute_header, v34, (uint64_t)"Failed to fetch a board with error %@", 37, 2, inited);
      swift_setDeallocating();
      sub_1005057FC(&qword_101672B50);
      swift_arrayDestroy();

      swift_willThrow();
      return v28 & 1;
    }
LABEL_25:
    swift_once();
    goto LABEL_11;
  }
  uint64_t v25 = v24;
  swift_release();
  uint64_t v26 = sub_100753FC0();
  uint64_t v36 = v26;
  unint64_t v37 = v27;
  sub_10079DCE4(v26, v27, 1);
  sub_100510084(v36, v37);
  id v38 = *(void **)(*(void *)(v25 + 16) + 32);
  *id v12 = v38;
  uint64_t v39 = v52;
  v54(v12, v53, v52);
  id v40 = v38;
  LOBYTE(v38) = _dispatchPreconditionTest(_:)();
  v55(v12, v39);
  if ((v38 & 1) == 0)
  {
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    __break(1u);
  }
  type metadata accessor for SQLiteRowIterator();
  char v41 = (void *)swift_initStackObject();
  v41[4] = 0;
  v41[5] = 1;
  v41[2] = v25;
  v41[3] = 0;
  swift_retain();
  uint64_t v42 = sub_10079ECE0();
  if (!v42)
  {
    swift_release();
    swift_setDeallocating();
    sub_1007A0344(v41[3], v41[4], v41[5]);
LABEL_19:
    uint64_t v48 = *(void **)(*(void *)(v25 + 16) + 32);
    *id v12 = v48;
    v54(v12, v53, v39);
    id v49 = v48;
    LOBYTE(v48) = _dispatchPreconditionTest(_:)();
    v55(v12, v39);
    if (v48)
    {
      id v47 = (void *)(v25 + 24);
      swift_beginAccess();
      LOBYTE(v28) = 0;
      goto LABEL_21;
    }
    goto LABEL_27;
  }
  uint64_t v51 = sub_10079BE94(0, v42);
  char v44 = v43;
  swift_release();
  swift_release();
  swift_setDeallocating();
  sub_1007A0344(v41[3], v41[4], v41[5]);
  if (v44) {
    goto LABEL_19;
  }
  uint64_t v45 = *(void **)(*(void *)(v25 + 16) + 32);
  *id v12 = v45;
  v54(v12, v53, v39);
  id v46 = v45;
  LOBYTE(v45) = _dispatchPreconditionTest(_:)();
  v55(v12, v39);
  if ((v45 & 1) == 0) {
    goto LABEL_28;
  }
  LOBYTE(v28) = v51 > 0;
  id v47 = (void *)(v25 + 24);
  swift_beginAccess();
LABEL_21:
  uint64_t v50 = *(sqlite3_stmt **)(v25 + 24);
  if (v50)
  {
    sqlite3_finalize(v50);
    *id v47 = 0;
  }
  swift_release();
  return v28 & 1;
}

uint64_t sub_100C551B8(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = type metadata accessor for DispatchPredicate();
  uint64_t v7 = *(void *)(v6 - 8);
  __n128 v9 = __chkstk_darwin(v6, v8);
  uint64_t v11 = (uint64_t *)((char *)&v53 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  id v12 = *(void **)(v2 + OBJC_IVAR____TtC8Freeform17CRLBoardDataStore_queue);
  *uint64_t v11 = v12;
  Swift::String v13 = *(void (**)(void, __n128))(v7 + 104);
  unsigned int v57 = enum case for DispatchPredicate.onQueue(_:);
  unint64_t v58 = (void (*)(void *, void, uint64_t))v13;
  v13(v11, v9);
  id v14 = v12;
  LOBYTE(v12) = _dispatchPreconditionTest(_:)();
  uint64_t v59 = *(void (**)(void *, uint64_t))(v7 + 8);
  v59(v11, v6);
  if ((v12 & 1) == 0)
  {
    __break(1u);
    goto LABEL_19;
  }
  uint64_t v55 = a1;
  uint64_t v56 = a2;
  uint64_t v60 = 0;
  unint64_t v61 = 0xE000000000000000;
  _StringGuts.grow(_:)(59);
  v15._countAndFlagsBits = 0xD00000000000001DLL;
  v15._object = (void *)0x800000010127C540;
  String.append(_:)(v15);
  v16._countAndFlagsBits = 0x74695F6472616F62;
  v16._object = (void *)0xEB00000000736D65;
  String.append(_:)(v16);
  v17._countAndFlagsBits = 0x2820455245485720;
  v17._object = (void *)0xE800000000000000;
  String.append(_:)(v17);
  v18._object = (void *)0xE900000000000064;
  v18._countAndFlagsBits = 0x6975755F6D657469;
  String.append(_:)(v18);
  v19._countAndFlagsBits = 0x444E41203F203D20;
  v19._object = (void *)0xE900000000000020;
  String.append(_:)(v19);
  v20._object = (void *)0x8000000101262BA0;
  v20._countAndFlagsBits = 0xD000000000000010;
  String.append(_:)(v20);
  v21._countAndFlagsBits = 0x2920293F203D20;
  v21._object = (void *)0xE700000000000000;
  String.append(_:)(v21);
  uint64_t v22 = v60;
  uint64_t v23 = v61;
  type metadata accessor for SQLiteStatement();
  swift_initStackObject();
  uint64_t v24 = swift_retain();
  uint64_t v25 = sub_10079FC40(v24, v22, v23);
  if (v3)
  {
    swift_release();
    if (qword_10166FB70 == -1)
    {
LABEL_5:
      swift_beginAccess();
      uint64_t v32 = static OS_os_log.boardStore;
      sub_1005057FC((uint64_t *)&unk_101672B40);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_10117E810;
      swift_getErrorValue();
      id v34 = (id)v32;
      uint64_t v35 = Error.localizedDescription.getter();
      uint64_t v37 = v36;
      *(void *)(inited + 56) = &type metadata for String;
      *(void *)(inited + 64) = sub_100528BE4();
      *(void *)(inited + 32) = v35;
      *(void *)(inited + 4sub_100C38440(1, 0) = v37;
      uint64_t v38 = static os_log_type_t.error.getter();
      sub_100BAC898((uint64_t)v34, (uint64_t)&_mh_execute_header, v38, (uint64_t)"Failed to fetch a board item record with error %@", 49, 2, inited);
      swift_setDeallocating();
      sub_1005057FC(&qword_101672B50);
      swift_arrayDestroy();

      swift_willThrow();
      return v32 & 1;
    }
LABEL_19:
    swift_once();
    goto LABEL_5;
  }
  uint64_t v26 = v25;
  swift_release();
  uint64_t v27 = UUID.crl_data()();
  unint64_t v29 = v28;
  sub_10079DCE4(v27, v28, 1);
  sub_100510084(v27, v29);
  uint64_t v30 = sub_100753FC0();
  uint64_t v56 = 0;
  uint64_t v40 = v30;
  unint64_t v41 = v31;
  sub_10079DCE4(v30, v31, 2);
  uint64_t v42 = *(void **)(*(void *)(v26 + 16) + 32);
  *uint64_t v11 = v42;
  v58(v11, v57, v6);
  id v43 = v42;
  LOBYTE(v42) = _dispatchPreconditionTest(_:)();
  v59(v11, v6);
  if ((v42 & 1) == 0)
  {
    __break(1u);
LABEL_21:
    __break(1u);
LABEL_22:
    __break(1u);
  }
  type metadata accessor for SQLiteRowIterator();
  char v44 = (void *)swift_initStackObject();
  v44[4] = 0;
  v44[5] = 1;
  v44[2] = v26;
  v44[3] = 0;
  swift_retain();
  uint64_t v45 = sub_10079ECE0();
  if (!v45)
  {
    swift_release();
    swift_setDeallocating();
    sub_1007A0344(v44[3], v44[4], v44[5]);
    sub_100510084(v40, v41);
LABEL_13:
    uint64_t v50 = *(void **)(*(void *)(v26 + 16) + 32);
    *uint64_t v11 = v50;
    v58(v11, v57, v6);
    id v51 = v50;
    LOBYTE(v5sub_100C38440(1, 0) = _dispatchPreconditionTest(_:)();
    v59(v11, v6);
    if (v50)
    {
      id v49 = (void *)(v26 + 24);
      swift_beginAccess();
      LOBYTE(v32) = 0;
      goto LABEL_15;
    }
    goto LABEL_21;
  }
  uint64_t v54 = sub_10079BE94(0, v45);
  LODWORD(v55) = v46;
  swift_release();
  swift_release();
  swift_setDeallocating();
  sub_1007A0344(v44[3], v44[4], v44[5]);
  sub_100510084(v40, v41);
  if (v55) {
    goto LABEL_13;
  }
  id v47 = *(void **)(*(void *)(v26 + 16) + 32);
  *uint64_t v11 = v47;
  v58(v11, v57, v6);
  id v48 = v47;
  LOBYTE(v47) = _dispatchPreconditionTest(_:)();
  v59(v11, v6);
  if ((v47 & 1) == 0) {
    goto LABEL_22;
  }
  LOBYTE(v32) = v54 > 0;
  id v49 = (void *)(v26 + 24);
  swift_beginAccess();
LABEL_15:
  uint64_t v52 = *(sqlite3_stmt **)(v26 + 24);
  if (v52)
  {
    sqlite3_finalize(v52);
    *id v49 = 0;
  }
  swift_release();
  return v32 & 1;
}

sqlite3_int64 sub_100C55914(uint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v53 = a3;
  uint64_t v6 = sub_1005057FC((uint64_t *)&unk_101674520);
  __chkstk_darwin(v6 - 8, v7);
  uint64_t v52 = &v47[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = type metadata accessor for DispatchPredicate();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9, v11);
  Swift::String v13 = &v47[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  id v14 = *(void **)(v3 + OBJC_IVAR____TtC8Freeform17CRLBoardDataStore_queue);
  *Swift::String v13 = v14;
  Swift::String v15 = *(void (**)(void))(v10 + 104);
  unsigned int v54 = enum case for DispatchPredicate.onQueue(_:);
  uint64_t v55 = (void (*)(void *, void, uint64_t))v15;
  v15(v13);
  id v16 = v14;
  LOBYTE(v14) = _dispatchPreconditionTest(_:)();
  uint64_t v56 = *(void (**)(void *, uint64_t))(v10 + 8);
  v56(v13, v9);
  if ((v14 & 1) == 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v51 = a1;
  uint64_t v57 = 0;
  unint64_t v58 = 0xE000000000000000;
  _StringGuts.grow(_:)(47);
  swift_bridgeObjectRelease();
  type metadata accessor for SQLiteStatement();
  swift_initStackObject();
  uint64_t v17 = swift_retain();
  uint64_t v18 = sub_10079FC40(v17, 0xD000000000000064, 0x800000010127D400);
  if (v4)
  {
    swift_release();
    if (qword_10166FB70 == -1)
    {
LABEL_5:
      swift_beginAccess();
      uint64_t v25 = (void *)static OS_os_log.boardStore;
      sub_1005057FC((uint64_t *)&unk_101672B40);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_10117E810;
      swift_getErrorValue();
      id v27 = v25;
      uint64_t v28 = Error.localizedDescription.getter();
      sqlite3_int64 v30 = v29;
      *(void *)(inited + 56) = &type metadata for String;
      *(void *)(inited + 64) = sub_100528BE4();
      *(void *)(inited + 32) = v28;
      *(void *)(inited + 4sub_100C38440(1, 0) = v30;
      uint64_t v31 = static os_log_type_t.error.getter();
      sub_100BAC898((uint64_t)v27, (uint64_t)&_mh_execute_header, v31, (uint64_t)"Failed to fetch a board item's parent UUID with error %@", 56, 2, inited);
      swift_setDeallocating();
      sub_1005057FC(&qword_101672B50);
      swift_arrayDestroy();

      swift_willThrow();
      return v30;
    }
LABEL_22:
    swift_once();
    goto LABEL_5;
  }
  uint64_t v19 = v18;
  swift_release();
  uint64_t v20 = UUID.crl_data()();
  unint64_t v22 = v21;
  sub_10079DCE4(v20, v21, 1);
  sub_100510084(v20, v22);
  uint64_t v23 = sub_100753FC0();
  uint64_t v33 = v23;
  unint64_t v53 = v24;
  sub_10079DCE4(v23, v24, 2);
  id v34 = *(void **)(*(void *)(v19 + 16) + 32);
  *Swift::String v13 = v34;
  v55(v13, v54, v9);
  id v35 = v34;
  LOBYTE(v34) = _dispatchPreconditionTest(_:)();
  v56(v13, v9);
  if ((v34 & 1) == 0)
  {
    __break(1u);
    goto LABEL_24;
  }
  type metadata accessor for SQLiteRowIterator();
  uint64_t v36 = (void *)swift_initStackObject();
  v36[4] = 0;
  v36[5] = 1;
  void v36[2] = v19;
  v36[3] = 0;
  swift_retain();
  uint64_t v37 = sub_10079ECE0();
  if (v37)
  {
    sub_10079EB18(0, v37, (uint64_t)v52);
    sqlite3_int64 v49 = sub_10079E4E8(1, v37);
    int v48 = v43;
    swift_release();
    uint64_t v50 = v37;
    swift_release();
    sub_100510084(v33, v53);
    if (v48) {
      sqlite3_int64 v30 = 0;
    }
    else {
      sqlite3_int64 v30 = v49;
    }
    sub_10051B3EC((uint64_t)v52, v51, (uint64_t *)&unk_101674520);
    char v44 = *(void **)(*(void *)(v19 + 16) + 32);
    *Swift::String v13 = v44;
    v55(v13, v54, v9);
    id v45 = v44;
    LOBYTE(v44) = _dispatchPreconditionTest(_:)();
    v56(v13, v9);
    if (v44)
    {
      swift_beginAccess();
      int v46 = *(sqlite3_stmt **)(v19 + 24);
      if (v46)
      {
        sqlite3_finalize(v46);
        *(void *)(v19 + 24) = 0;
      }
      swift_release();
      return v30;
    }
LABEL_25:
    __break(1u);
  }
  uint64_t v50 = v37;
  swift_release();
  swift_setDeallocating();
  sub_1007A0344(v36[3], v36[4], v36[5]);
  sub_100510084(v33, v53);
  uint64_t v38 = *(void **)(*(void *)(v19 + 16) + 32);
  *Swift::String v13 = v38;
  v55(v13, v54, v9);
  id v39 = v38;
  LOBYTE(v38) = _dispatchPreconditionTest(_:)();
  v56(v13, v9);
  if ((v38 & 1) == 0)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  swift_beginAccess();
  uint64_t v40 = *(sqlite3_stmt **)(v19 + 24);
  uint64_t v41 = v51;
  if (v40)
  {
    sqlite3_finalize(v40);
    *(void *)(v19 + 24) = 0;
  }
  swift_release();
  uint64_t v42 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 56))(v41, 1, 1, v42);
  return 0;
}

uint64_t sub_100C56118(void *a1, uint64_t a2, int a3, uint64_t a4, unint64_t a5, int a6, int a7)
{
  LODWORD(v292) = a7;
  LODWORD(v296) = a6;
  unint64_t v291 = a5;
  uint64_t v287 = a4;
  int v299 = a3;
  unint64_t v306 = (unint64_t)a1;
  uint64_t v9 = type metadata accessor for CRLBoardIdentifier(0);
  __chkstk_darwin(v9 - 8, v10);
  uint64_t v286 = (uint64_t)&v268[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v283 = type metadata accessor for CRLAssetReferrerIdentifier(0);
  uint64_t v13 = __chkstk_darwin(v283, v12);
  CGFloat v282 = (sqlite3_stmt **)&v268[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v16 = __chkstk_darwin(v13, v15);
  CGFloat v281 = &v268[-v17];
  __chkstk_darwin(v16, v18);
  long long v290 = (uint64_t (*)(void))&v268[-v19];
  uint64_t v295 = sub_1005057FC((uint64_t *)&unk_10168A0C0);
  uint64_t v21 = __chkstk_darwin(v295, v20);
  long long v294 = (uint64_t (*)(void))&v268[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v21, v23);
  long long v293 = &v268[-v24];
  uint64_t v25 = sub_1005057FC((uint64_t *)&unk_101674520);
  uint64_t v27 = __chkstk_darwin(v25 - 8, v26);
  CGFloat v285 = &v268[-((v28 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v30 = __chkstk_darwin(v27, v29);
  long long v289 = (uint64_t (**)(void))&v268[-v31];
  uint64_t v33 = __chkstk_darwin(v30, v32);
  id v35 = &v268[-v34];
  uint64_t v37 = __chkstk_darwin(v33, v36);
  long long v288 = &v268[-v38];
  uint64_t v40 = __chkstk_darwin(v37, v39);
  CGFloat v298 = &v268[-v41];
  __chkstk_darwin(v40, v42);
  long long v297 = &v268[-v43];
  uint64_t v44 = type metadata accessor for UUID();
  uint64_t v302 = *(void *)(v44 - 8);
  uint64_t v303 = v44;
  uint64_t v46 = __chkstk_darwin(v44, v45);
  CGFloat v284 = &v268[-((v47 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v49 = __chkstk_darwin(v46, v48);
  CGFloat v301 = &v268[-v50];
  __chkstk_darwin(v49, v51);
  unint64_t v53 = &v268[-v52];
  uint64_t v54 = type metadata accessor for DispatchPredicate();
  uint64_t v55 = *(void *)(v54 - 8);
  __chkstk_darwin(v54, v56);
  unint64_t v58 = &v268[-((v57 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v59 = v7;
  uint64_t v60 = *(void **)(v7 + OBJC_IVAR____TtC8Freeform17CRLBoardDataStore_writeQueue);
  void *v58 = v60;
  (*(void (**)(void *, void, uint64_t))(v55 + 104))(v58, enum case for DispatchPredicate.onQueue(_:), v54);
  id v61 = v60;
  LOBYTE(v6sub_100C38440(1, 0) = _dispatchPreconditionTest(_:)();
  uint64_t v63 = *(uint64_t (**)(void, void))(v55 + 8);
  uint64_t v62 = (unsigned char *)(v55 + 8);
  uint64_t v64 = v63(v58, v54);
  if ((v60 & 1) == 0)
  {
    __break(1u);
    goto LABEL_105;
  }
  uint64_t v65 = (void (**)(uint64_t))(*(void *)v306 + 256);
  uint64_t v66 = (uint64_t (*)(void))*v65;
  uint64_t v67 = v65;
  (*v65)(v64);
  uint64_t v68 = v304;
  uint64_t v69 = sub_100C530B8((uint64_t)v53, a2);
  CGFloat v304 = v68;
  uint64_t v300 = a2;
  if (v68)
  {
    uint64_t v70 = v303;
    uint64_t v71 = *(uint64_t (**)(void, void))(v302 + 8);
    uint64_t v72 = v71(v53, v303);
    uint64_t v73 = (uint64_t)v301;
    ((void (*)(uint64_t))v66)(v72);
    swift_beginAccess();
    sub_100FB9224(v73, v300);
    swift_endAccess();
    return v71(v73, v70);
  }
  uint64_t v75 = (unsigned char *)v69;
  CGFloat v276 = v35;
  CGFloat v278 = v67;
  CGFloat v279 = v66;
  uint64_t v280 = v59;
  uint64_t v76 = v303;
  uint64_t v78 = v302 + 8;
  uint64_t v77 = *(void (**)(void, void))(v302 + 8);
  uint64_t v79 = ((uint64_t (*)(unsigned char *, uint64_t))v77)(v53, v303);
  if (!v75)
  {
    if ((v296 & 1) == 0)
    {
LABEL_32:
      uint64_t v110 = a2;
      uint64_t v111 = (uint64_t)v301;
      ((void (*)(uint64_t))v279)(v79);
      swift_beginAccess();
      sub_100FB9224(v111, v110);
      swift_endAccess();
      v77(v111, v76);
      return 0;
    }
    BOOL v89 = v299 == 0;
    uint64_t v90 = (void *)v306;
    uint64_t v91 = *(void *)(v280 + OBJC_IVAR____TtC8Freeform17CRLBoardDataStore_crdtContext);
    uint64_t v92 = v304;
    uint64_t v93 = (*(uint64_t (**)(uint64_t, void))(*(void *)v306 + 456))(v91, 0);
    if (v92)
    {
      CGFloat v304 = v92;
      uint64_t v95 = (uint64_t)v301;
      ((void (*)(uint64_t))v279)(v93);
      swift_beginAccess();
      sub_100FB9224(v95, v300);
      swift_endAccess();
      return ((uint64_t (*)(uint64_t, uint64_t))v77)(v95, v303);
    }
    uint64_t v112 = v94;
    uint64_t v302 = v93;
    uint64_t v113 = (*(uint64_t (**)(uint64_t, void))(*v90 + 464))(v91, 0);
    CGFloat v277 = v77;
    uint64_t v292 = v78;
    CGFloat v207 = v114;
    uint64_t v208 = v113;
    uint64_t v209 = v279();
    CGFloat v304 = (void (*)(void))v90[4];
    CGFloat v210 = (unsigned char *)v90[5];
    uint64_t v295 = v90[3];
    uint64_t v296 = v90[2];
    long long v297 = v210;
    (*(void (**)(uint64_t))(*v90 + 264))(v209);
    uint64_t v211 = sub_100CE144C(v300, v286, type metadata accessor for CRLBoardIdentifier);
    uint64_t v212 = (*(uint64_t (**)(uint64_t))(*v90 + 408))(v211);
    uint64_t v213 = (uint64_t (*)(void))(v212 + 2);
    if ((v214 & 1) == 0) {
      uint64_t v213 = (uint64_t (*)(void))v212;
    }
    long long v294 = v213;
    type metadata accessor for CRLBoardItemDatabaseRow();
    swift_allocObject();
    uint64_t v215 = v287;
    CGFloat v298 = v112;
    uint64_t v216 = v291;
    sub_1005FA2A0(v287, v291);
    uint64_t v217 = v302;
    sub_100510D4C(v302, (unint64_t)v298);
    sub_100510D4C(v208, (unint64_t)v207);
    long long v293 = (unsigned char *)v89;
    uint64_t v62 = (unsigned char *)sub_100E19EB8((uint64_t)v284, v295, (uint64_t)v304, (uint64_t)v297, v296, (uint64_t)v285, v286, (uint64_t)v294, v217, (uint64_t)v298, v208, (uint64_t)v207, 0, v89, v215, v216);
    uint64_t v218 = sub_100C5A69C((uint64_t)v62);
    uint64_t v296 = v208;
    long long v297 = v207;
    CGFloat v225 = (uint64_t (**)(void))(*v90 + 568);
    CGFloat v226 = *v225;
    CGFloat v227 = v225;
    CGFloat v228 = (sqlite3_stmt **)((uint64_t (*)(uint64_t))*v225)(v218);
    CGFloat v229 = (uint64_t (**)(void))(*v90 + 576);
    long long v294 = *v229;
    unint64_t v291 = (unint64_t)v229;
    uint64_t v230 = v294();
    swift_bridgeObjectRetain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    CGFloat v305 = v228;
    sub_100CD60E0(v230, (uint64_t)sub_100CD6060, 0, isUniquelyReferenced_nonNull_native, (uint64_t *)&v305);
    CGFloat v304 = 0;
    uint64_t v232 = (uint64_t)v305;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v233 = sub_1005057FC(&qword_101674240);
    CGFloat v234 = v282;
    uint64_t v235 = (uint64_t)v282 + *(int *)(v233 + 48);
    v279();
    sub_100CE144C(v300, v235, type metadata accessor for CRLBoardIdentifier);
    swift_storeEnumTagMultiPayload();
    unint64_t v236 = sub_100A394EC((uint64_t)_swiftEmptyArrayStorage);
    if (!*(void *)(v236 + 16) && !*(void *)(v232 + 16))
    {
      long long v293 = v62;
      swift_bridgeObjectRetain();
LABEL_106:
      sub_100CE14B4((uint64_t)v234, type metadata accessor for CRLAssetReferrerIdentifier);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      unint64_t v253 = sub_100A394EC((uint64_t)_swiftEmptyArrayStorage);
      uint64_t v254 = v232;
      uint64_t v255 = v226();
      uint64_t v256 = v294();
      CGFloat v257 = v304;
      long long v258 = sub_100C2F40C(v255);
      swift_bridgeObjectRelease();
      uint64_t v259 = sub_100CDCB64((uint64_t)v258);
      swift_bridgeObjectRelease();
      long long v260 = sub_100C2F40C(v256);
      CGFloat v304 = v257;
      swift_bridgeObjectRelease();
      uint64_t v261 = sub_100CDCB64((uint64_t)v260);
      swift_bridgeObjectRelease();
      uint64_t v262 = sub_100ED8C0C(v261, v259);
      sub_100C59D8C((uint64_t)v293, v299, v253, v254, v262);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1002094A4();
      uint64_t v263 = v300;
      sub_100510084(v302, (unint64_t)v298);
      sub_100510084(v296, (unint64_t)v297);
      uint64_t v264 = swift_release();
      uint64_t v265 = (uint64_t)v301;
      ((void (*)(uint64_t))v279)(v264);
      swift_beginAccess();
      sub_100FB9224(v265, v263);
      swift_endAccess();
      v277(v265, v303);
      return swift_retain();
    }
    long long v289 = v227;
    long long v290 = v226;
    swift_bridgeObjectRetain();
    uint64_t v295 = v232;
    uint64_t v237 = sub_100C5B784(v236, v232, 0);
    uint64_t v239 = v238;
    swift_bridgeObjectRetain();
    CGFloat v240 = sub_1006BA36C(v239);
    swift_bridgeObjectRelease();
    CGFloat v241 = v304;
    sub_100C5D1DC(v234, (uint64_t)v240);
    if (v241)
    {
      CGFloat v304 = v241;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      uint64_t v251 = v279;
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_100510084(v296, (unint64_t)v297);
      sub_100510084(v302, (unint64_t)v298);
      sub_100CE14B4((uint64_t)v282, type metadata accessor for CRLAssetReferrerIdentifier);
      uint64_t v252 = swift_bridgeObjectRelease();
      uint64_t v168 = (uint64_t)v301;
      ((void (*)(uint64_t))v251)(v252);
      goto LABEL_85;
    }
    swift_release();
    sub_100C5DA80((uint64_t)v234, v237, (sqlite3_int64)v293);
    CGFloat v304 = 0;
LABEL_105:
    long long v293 = v62;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    CGFloat v234 = v282;
    uint64_t v232 = v295;
    CGFloat v226 = v290;
    goto LABEL_106;
  }
  CGFloat v277 = v77;
  id v80 = (void *)v306;
  uint64_t v272 = OBJC_IVAR____TtC8Freeform23CRLBoardItemDatabaseRow_isLocalTombstone;
  LODWORD(v286) = v75[OBJC_IVAR____TtC8Freeform23CRLBoardItemDatabaseRow_isLocalTombstone];
  uint64_t v81 = (unsigned char *)(v306 & 0xFFFFFFFFFFFFLL | 0x6AE1000000000000);
  uint64_t v273 = OBJC_IVAR____TtC8Freeform23CRLBoardItemDatabaseRow_unsyncedChanges;
  unint64_t v82 = *(void *)&v75[OBJC_IVAR____TtC8Freeform23CRLBoardItemDatabaseRow_unsyncedChanges];
  uint64_t v83 = sub_100CDAD88((uint64_t)v75);
  char v84 = v299;
  CGFloat v285 = v75;
  if (v83)
  {
    unint64_t v85 = (unint64_t)v83;
    if (!(_BYTE)v299)
    {
      uint64_t v87 = sub_100C58720(v83) | v82;
      if (v286)
      {
        int v274 = v296 ^ 1;
        if (v296) {
          v87 |= 0x10uLL;
        }
        unint64_t v275 = v87;
        goto LABEL_30;
      }
LABEL_43:
      unint64_t v275 = v87;
      uint64_t v109 = (sqlite3_stmt **)_swiftEmptyDictionarySingleton;
      if ((*(uint64_t (**)(unint64_t))(*v80 + 472))(v85))
      {
        uint64_t v115 = (*(uint64_t (**)(void))(*(void *)v85 + 568))();
        swift_bridgeObjectRetain();
        char v116 = swift_isUniquelyReferenced_nonNull_native();
        CGFloat v305 = (sqlite3_stmt **)_swiftEmptyDictionarySingleton;
        uint64_t v117 = v304;
        sub_100CD60E0(v115, (uint64_t)sub_100CD6060, 0, v116, (uint64_t *)&v305);
        if (v117) {
          goto LABEL_107;
        }
        uint64_t v118 = v305;
        swift_bridgeObjectRelease();
        uint64_t v119 = swift_bridgeObjectRelease();
        uint64_t v120 = (*(uint64_t (**)(uint64_t))(*v80 + 568))(v119);
        swift_bridgeObjectRetain();
        char v121 = swift_isUniquelyReferenced_nonNull_native();
        CGFloat v305 = (sqlite3_stmt **)_swiftEmptyDictionarySingleton;
        sub_100CD60E0(v120, (uint64_t)sub_100CD6060, 0, v121, (uint64_t *)&v305);
        CGFloat v304 = 0;
        uint64_t v109 = v305;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v122 = v118;
        char v84 = v299;
      }
      else
      {
        uint64_t v122 = (sqlite3_stmt **)_swiftEmptyDictionarySingleton;
      }
      if ((*(uint64_t (**)(unint64_t))(*v80 + 480))(v85))
      {
        uint64_t v123 = (*(uint64_t (**)(void))(*(void *)v85 + 576))();
        swift_bridgeObjectRetain();
        char v124 = swift_isUniquelyReferenced_nonNull_native();
        CGFloat v305 = v122;
        uint64_t v125 = v304;
        sub_100CD60E0(v123, (uint64_t)sub_100CD6060, 0, v124, (uint64_t *)&v305);
        if (v125) {
          goto LABEL_107;
        }
        CGFloat v282 = v305;
        swift_bridgeObjectRelease();
        uint64_t v126 = swift_bridgeObjectRelease();
        uint64_t v127 = (*(uint64_t (**)(uint64_t))(*v80 + 576))(v126);
        swift_bridgeObjectRetain();
        char v128 = swift_isUniquelyReferenced_nonNull_native();
        CGFloat v305 = v109;
        sub_100CD60E0(v127, (uint64_t)sub_100CD6060, 0, v128, (uint64_t *)&v305);
        CGFloat v304 = 0;
        uint64_t v109 = v305;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {
        CGFloat v282 = v122;
      }
      int v271 = 0;
      int v274 = 0;
LABEL_52:
      unint64_t v129 = *(void *)(v85 + 24);
      if (sub_1002094A4() >= v129) {
        int v269 = 0;
      }
      else {
        int v269 = *(unsigned char *)(v85 + 16) & 1;
      }
      uint64_t v292 = v78;
      (*(void (**)(void))(*(void *)v85 + 264))();
      if (v84 == 2)
      {
        swift_retain();
        uint64_t v107 = v80;
        CGFloat v270 = v80;
      }
      else
      {
        uint64_t v81 = (unsigned char *)(v85 & 0xFFFFFFFFFFFFLL | 0x6AE1000000000000);
        uint64_t v130 = *(void (**)(void))(*(void *)v85 + 432);
        swift_retain_n();
        v130(v80);
        (*(void (**)(void *))(*(void *)v85 + 424))(v80);
        sub_10068307C(v80[3], v80[4], v80[5], v80[2]);
        swift_release();
        uint64_t v107 = (void *)v85;
        CGFloat v270 = (void *)v85;
      }
      unint64_t v131 = *(uint64_t (**)(void))(*v107 + 264);
      uint64_t v132 = swift_retain();
      uint64_t v133 = v131(v132);
      if (v84)
      {
        if (v84 != 1)
        {
          uint64_t v108 = v285;
          goto LABEL_77;
        }
        uint64_t v296 = (uint64_t)v109;
        uint64_t v134 = v294;
        uint64_t v135 = (uint64_t)v294 + *(int *)(v295 + 48);
        sub_100522E9C((uint64_t)v297, (uint64_t)v294, (uint64_t *)&unk_101674520);
        sub_100522E9C((uint64_t)v298, v135, (uint64_t *)&unk_101674520);
        uint64_t v136 = v76;
        uint64_t v137 = (uint64_t)v134;
        char v138 = *(uint64_t (**)(void, void, void))(v302 + 48);
        if (v138(v137, 1, v136) == 1)
        {
          int v139 = v138(v135, 1, v136);
          uint64_t v108 = v285;
          uint64_t v109 = (sqlite3_stmt **)v296;
          if (v139 == 1)
          {
            uint64_t v133 = sub_100522F00((uint64_t)v294, (uint64_t *)&unk_101674520);
LABEL_75:
            unint64_t v148 = v275 & 0xFFFFFFFFFFFFFFFDLL;
            goto LABEL_76;
          }
        }
        else
        {
          uint64_t v146 = (uint64_t)v276;
          sub_100522E9C(v137, (uint64_t)v276, (uint64_t *)&unk_101674520);
          if (v138(v135, 1, v136) != 1)
          {
            unint64_t v149 = v301;
            (*(void (**)(unsigned char *, uint64_t, uint64_t))(v302 + 32))(v301, v135, v136);
            sub_100CDE0D8((unint64_t *)&qword_10167BDC0, (void (*)(uint64_t))&type metadata accessor for UUID);
            char v150 = dispatch thunk of static Equatable.== infix(_:_:)();
            uint64_t v151 = v149;
            unsigned __int8 v152 = v277;
            v277(v151, v136);
            v152(v146, v136);
            uint64_t v133 = sub_100522F00(v137, (uint64_t *)&unk_101674520);
            uint64_t v108 = v285;
            uint64_t v109 = (sqlite3_stmt **)v296;
            if ((v150 & 1) == 0) {
              goto LABEL_77;
            }
            goto LABEL_75;
          }
          v277(v146, v136);
          uint64_t v108 = v285;
          uint64_t v109 = (sqlite3_stmt **)v296;
        }
        uint64_t v133 = sub_100522F00((uint64_t)v294, (uint64_t *)&unk_10168A0C0);
        goto LABEL_77;
      }
      uint64_t v296 = (uint64_t)v109;
      uint64_t v140 = v293;
      uint64_t v141 = (uint64_t)&v293[*(int *)(v295 + 48)];
      sub_100522E9C((uint64_t)v297, (uint64_t)v293, (uint64_t *)&unk_101674520);
      sub_100522E9C((uint64_t)v298, v141, (uint64_t *)&unk_101674520);
      uint64_t v142 = v76;
      uint64_t v143 = (uint64_t)v140;
      uint64_t v144 = *(uint64_t (**)(void, void, void))(v302 + 48);
      if (v144(v143, 1, v142) == 1)
      {
        int v145 = v144(v141, 1, v142);
        uint64_t v108 = v285;
        uint64_t v109 = (sqlite3_stmt **)v296;
        if (v145 == 1)
        {
          uint64_t v133 = sub_100522F00((uint64_t)v293, (uint64_t *)&unk_101674520);
          goto LABEL_77;
        }
      }
      else
      {
        unsigned int v147 = v288;
        sub_100522E9C(v143, (uint64_t)v288, (uint64_t *)&unk_101674520);
        if (v144(v141, 1, v142) != 1)
        {
          unint64_t v195 = v301;
          (*(void (**)(unsigned char *, uint64_t, uint64_t))(v302 + 32))(v301, v141, v142);
          sub_100CDE0D8((unint64_t *)&qword_10167BDC0, (void (*)(uint64_t))&type metadata accessor for UUID);
          char v196 = dispatch thunk of static Equatable.== infix(_:_:)();
          CGFloat v197 = v195;
          CGFloat v198 = v277;
          v277(v197, v142);
          v198(v147, v142);
          uint64_t v133 = sub_100522F00(v143, (uint64_t *)&unk_101674520);
          uint64_t v108 = v285;
          uint64_t v109 = (sqlite3_stmt **)v296;
          if (v196)
          {
LABEL_77:
            CGFloat v284 = v81;
            if (!v286 || (v274 & 1) != 0)
            {
              swift_release();
              swift_release();
LABEL_82:
              uint64_t v296 = (uint64_t)v109;
              sub_100522F00((uint64_t)v298, (uint64_t *)&unk_101674520);
              sub_100522F00((uint64_t)v297, (uint64_t *)&unk_101674520);
              goto LABEL_83;
            }
            uint64_t v153 = (*(uint64_t (**)(uint64_t))(*v107 + 568))(v133);
            swift_bridgeObjectRetain();
            char v154 = swift_isUniquelyReferenced_nonNull_native();
            CGFloat v305 = v109;
            uint64_t v155 = v304;
            sub_100CD60E0(v153, (uint64_t)sub_100CD6060, 0, v154, (uint64_t *)&v305);
            if (!v155)
            {
              unint64_t v156 = v305;
              swift_bridgeObjectRelease();
              uint64_t v157 = swift_bridgeObjectRelease();
              uint64_t v158 = (*(uint64_t (**)(uint64_t))(*v107 + 576))(v157);
              swift_bridgeObjectRetain();
              char v159 = swift_isUniquelyReferenced_nonNull_native();
              CGFloat v305 = v156;
              sub_100CD60E0(v158, (uint64_t)sub_100CD6060, 0, v159, (uint64_t *)&v305);
              CGFloat v304 = 0;
              uint64_t v109 = v305;
              swift_release();
              swift_release();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              int v271 = 1;
              uint64_t v108 = v285;
              goto LABEL_82;
            }
LABEL_107:
            uint64_t result = swift_bridgeObjectRelease();
            __break(1u);
            return result;
          }
          goto LABEL_73;
        }
        v277(v147, v142);
        uint64_t v108 = v285;
        uint64_t v109 = (sqlite3_stmt **)v296;
      }
      uint64_t v133 = sub_100522F00((uint64_t)v293, (uint64_t *)&unk_10168A0C0);
LABEL_73:
      unint64_t v148 = v275 | 2;
LABEL_76:
      unint64_t v275 = v148;
      goto LABEL_77;
    }
    if (v299 != 1)
    {
      uint64_t v87 = 0;
      goto LABEL_28;
    }
    uint64_t v86 = (v82 >> 4) & 1;
    uint64_t v87 = sub_100C58720(v80);
    int v88 = v86 & ~v286;
    if (v292 == 2)
    {
      if ((v286 & v86 & 1) == 0)
      {
        if (!v88)
        {
LABEL_41:
          if (v286)
          {
            unint64_t v275 = v87;
            int v274 = v296 ^ 1;
            goto LABEL_30;
          }
          goto LABEL_43;
        }
        goto LABEL_40;
      }
    }
    else
    {
      if ((v286 & v86 & 1) == 0)
      {
        if (!v88) {
          goto LABEL_41;
        }
        if ((v292 & 1) == 0)
        {
LABEL_28:
          if (v286)
          {
            unint64_t v275 = v87;
            int v274 = 0;
LABEL_30:
            int v271 = 1;
            uint64_t v109 = (sqlite3_stmt **)_swiftEmptyDictionarySingleton;
            CGFloat v282 = (sqlite3_stmt **)_swiftEmptyDictionarySingleton;
            goto LABEL_52;
          }
          goto LABEL_43;
        }
LABEL_40:
        v87 |= 0x10uLL;
        goto LABEL_28;
      }
      if (v292)
      {
LABEL_37:
        unint64_t v275 = v87;
        int v271 = 1;
        uint64_t v109 = (sqlite3_stmt **)_swiftEmptyDictionarySingleton;
        CGFloat v282 = (sqlite3_stmt **)_swiftEmptyDictionarySingleton;
        int v274 = 1;
        goto LABEL_52;
      }
    }
    v87 |= 0x10uLL;
    goto LABEL_37;
  }
  if ((v296 & 1) == 0)
  {
    swift_bridgeObjectRelease_n();
    uint64_t v79 = swift_release();
    uint64_t v77 = v277;
    a2 = v300;
    goto LABEL_32;
  }
  uint64_t v96 = v82 | 0xC;
  if (v286) {
    uint64_t v96 = 16;
  }
  if ((_BYTE)v299) {
    uint64_t v97 = 0;
  }
  else {
    uint64_t v97 = v96;
  }
  uint64_t v98 = *(uint64_t (**)(void))(*v80 + 568);
  uint64_t v99 = swift_retain();
  uint64_t v100 = v98(v99);
  swift_bridgeObjectRetain();
  char v101 = swift_isUniquelyReferenced_nonNull_native();
  CGFloat v305 = (sqlite3_stmt **)_swiftEmptyDictionarySingleton;
  uint64_t v102 = v304;
  sub_100CD60E0(v100, (uint64_t)sub_100CD6060, 0, v101, (uint64_t *)&v305);
  if (v102) {
    goto LABEL_107;
  }
  CGFloat v284 = v81;
  uint64_t v292 = v78;
  unint64_t v103 = v305;
  swift_bridgeObjectRelease();
  uint64_t v104 = swift_bridgeObjectRelease();
  uint64_t v105 = (*(uint64_t (**)(uint64_t))(*v80 + 576))(v104);
  swift_bridgeObjectRetain();
  char v106 = swift_isUniquelyReferenced_nonNull_native();
  CGFloat v305 = v103;
  sub_100CD60E0(v105, (uint64_t)sub_100CD6060, 0, v106, (uint64_t *)&v305);
  CGFloat v304 = 0;
  unint64_t v275 = v97;
  uint64_t v296 = (uint64_t)v305;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  int v269 = 0;
  int v274 = 0;
  int v271 = 1;
  CGFloat v282 = (sqlite3_stmt **)_swiftEmptyDictionarySingleton;
  uint64_t v107 = v80;
  CGFloat v270 = v80;
  uint64_t v108 = v285;
LABEL_83:
  uint64_t v160 = v107[5];
  uint64_t v161 = &v108[OBJC_IVAR____TtC8Freeform23CRLBoardItemDatabaseRow_minRequiredVersions];
  *(_OWORD *)uint64_t v161 = *(_OWORD *)(v107 + 3);
  *((void *)v161 + 2) = v160;
  *(void *)&v108[OBJC_IVAR____TtC8Freeform23CRLBoardItemDatabaseRow_objectOptions] = v107[2];
  uint64_t v162 = *(void *)(v280 + OBJC_IVAR____TtC8Freeform17CRLBoardDataStore_crdtContext);
  unint64_t v163 = *(uint64_t (**)(void, void))(*v107 + 456);
  swift_retain();
  unsigned int v164 = v304;
  uint64_t v165 = v163(v162, 0);
  if (v164)
  {
    CGFloat v304 = v164;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v167 = swift_release_n();
    uint64_t v168 = (uint64_t)v301;
    ((void (*)(uint64_t))v279)(v167);
LABEL_85:
    swift_beginAccess();
    sub_100FB9224(v168, v300);
    swift_endAccess();
    return ((uint64_t (*)(uint64_t, uint64_t))v277)(v168, v303);
  }
  id v169 = (uint64_t *)&v108[OBJC_IVAR____TtC8Freeform23CRLBoardItemDatabaseRow_commonData];
  uint64_t v170 = *(void *)&v108[OBJC_IVAR____TtC8Freeform23CRLBoardItemDatabaseRow_commonData];
  unint64_t v171 = *(void *)&v108[OBJC_IVAR____TtC8Freeform23CRLBoardItemDatabaseRow_commonData + 8];
  *id v169 = v165;
  v169[1] = v166;
  sub_100514260(v170, v171);
  uint64_t v172 = (*(uint64_t (**)(uint64_t, void))(*v107 + 464))(v162, 0);
  uint64_t v173 = (uint64_t (*)(void, void))v277;
  unint64_t v174 = v306;
  CGFloat v304 = 0;
  uint64_t v175 = (uint64_t *)&v108[OBJC_IVAR____TtC8Freeform23CRLBoardItemDatabaseRow_specificData];
  uint64_t v176 = *(void *)&v108[OBJC_IVAR____TtC8Freeform23CRLBoardItemDatabaseRow_specificData];
  unint64_t v177 = *(void *)&v108[OBJC_IVAR____TtC8Freeform23CRLBoardItemDatabaseRow_specificData + 8];
  *uint64_t v175 = v172;
  v175[1] = v178;
  uint64_t v179 = sub_100514260(v176, v177);
  uint64_t v180 = (uint64_t)v289;
  (*(void (**)(uint64_t))(*v107 + 264))(v179);
  uint64_t v181 = (uint64_t)&v108[OBJC_IVAR____TtC8Freeform23CRLBoardItemDatabaseRow_parentContainerUUID];
  swift_beginAccess();
  sub_1006063BC(v180, v181, (uint64_t *)&unk_101674520);
  uint64_t v182 = swift_endAccess();
  *(void *)&v108[v273] = v275;
  v108[v272] = v274 & 1;
  unint64_t v183 = v291;
  if (v291 >> 60 != 15)
  {
    long long v184 = &v108[OBJC_IVAR____TtC8Freeform23CRLBoardItemDatabaseRow_syncData];
    uint64_t v185 = *(void *)&v108[OBJC_IVAR____TtC8Freeform23CRLBoardItemDatabaseRow_syncData];
    unint64_t v186 = *(void *)&v108[OBJC_IVAR____TtC8Freeform23CRLBoardItemDatabaseRow_syncData + 8];
    uint64_t v187 = v287;
    *long long v184 = v287;
    v184[1] = v183;
    sub_100510D4C(v187, v183);
    uint64_t v108 = v285;
    uint64_t v182 = sub_100514260(v185, v186);
  }
  if ((_BYTE)v299)
  {
    uint64_t v188 = (*(uint64_t (**)(uint64_t))(*(void *)v174 + 568))(v182);
    uint64_t v189 = sub_100C32634(v188);
    uint64_t v190 = (*(uint64_t (**)(void))(*(void *)v174 + 576))();
    uint64_t v108 = v285;
    uint64_t v191 = sub_100C32634(v190);
    uint64_t v192 = sub_100ED8F78(v191, v189);
    uint64_t v193 = swift_bridgeObjectRetain();
    uint64_t v194 = sub_10102D978(v193, v192);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v194 = (unint64_t *)&_swiftEmptySetSingleton;
  }
  uint64_t v199 = (uint64_t)v290;
  CGFloat v200 = v304;
  sub_100C58808((uint64_t)v108);
  if (v200)
  {
    CGFloat v304 = v200;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v201 = swift_release_n();
    uint64_t v202 = (uint64_t)v301;
    ((void (*)(uint64_t))v279)(v201);
    swift_beginAccess();
    sub_100FB9224(v202, v300);
    swift_endAccess();
    return v173(v202, v303);
  }
  else
  {
    uint64_t v203 = sub_1005057FC(&qword_101674240);
    uint64_t v204 = v199 + *(int *)(v203 + 48);
    CGFloat v304 = *(void (**)(void))(*v107 + 256);
    v304();
    sub_100CE144C(v300, v204, type metadata accessor for CRLBoardIdentifier);
    swift_storeEnumTagMultiPayload();
    CGFloat v205 = v282;
    swift_bridgeObjectRetain();
    uint64_t v206 = v296;
    swift_bridgeObjectRetain();
    CGFloat v282 = v205;
    uint64_t v296 = v206;
    sub_100C594D0(v199, (uint64_t)v205, v206, v271, 1);
    sub_100CE14B4(v199, type metadata accessor for CRLAssetReferrerIdentifier);
    swift_bridgeObjectRelease();
    uint64_t v219 = swift_bridgeObjectRelease();
    uint64_t v220 = (uint64_t)v281;
    uint64_t v221 = (uint64_t)&v281[*(int *)(v203 + 48)];
    ((void (*)(uint64_t))v304)(v219);
    uint64_t v222 = v300;
    sub_100CE144C(v300, v221, type metadata accessor for CRLBoardIdentifier);
    swift_storeEnumTagMultiPayload();
    uint64_t v223 = sub_1006BA384((uint64_t)v194);
    swift_bridgeObjectRelease();
    sub_100C595DC(v220, (uint64_t)v223, 0);
    uint64_t v224 = v222;
    sub_100CE14B4(v220, type metadata accessor for CRLAssetReferrerIdentifier);
    uint64_t v242 = swift_release();
    uint64_t v243 = (*(uint64_t (**)(uint64_t))(*v107 + 568))(v242);
    uint64_t v244 = (*(uint64_t (**)(void))(*v107 + 576))();
    CGFloat v245 = sub_100C2F40C(v243);
    swift_bridgeObjectRelease();
    uint64_t v246 = sub_100CDCB64((uint64_t)v245);
    swift_bridgeObjectRelease();
    id v247 = sub_100C2F40C(v244);
    CGFloat v304 = 0;
    swift_bridgeObjectRelease();
    uint64_t v248 = sub_100CDCB64((uint64_t)v247);
    swift_bridgeObjectRelease();
    uint64_t v249 = sub_100ED8C0C(v248, v246);
    sub_100C59D8C((uint64_t)v285, v299, (uint64_t)v282, v296, v249);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1002094A4();
    double v250 = v279;
    swift_release();
    uint64_t v266 = swift_release();
    uint64_t v267 = (uint64_t)v301;
    ((void (*)(uint64_t))v250)(v266);
    swift_beginAccess();
    sub_100FB9224(v267, v224);
    swift_endAccess();
    v277(v267, v303);
    return (uint64_t)v270;
  }
}

uint64_t sub_100C58720(void *a1)
{
  if ((*(uint64_t (**)(void))(*v1 + 472))()) {
    uint64_t v3 = 4;
  }
  else {
    uint64_t v3 = 0;
  }
  char v4 = (*(uint64_t (**)(void *))(*v1 + 480))(a1);
  uint64_t v5 = v3 | 8;
  if ((v4 & 1) == 0) {
    uint64_t v5 = v3;
  }
  if (v1[3] != a1[3]) {
    v5 |= 0x20uLL;
  }
  if (v1[4] != a1[4]) {
    v5 |= 0x80uLL;
  }
  if (v1[5] != a1[5]) {
    v5 |= 0x100uLL;
  }
  if (v1[2] == a1[2]) {
    return v5;
  }
  else {
    return v5 | 0x40;
  }
}

uint64_t sub_100C58808(uint64_t a1)
{
  uint64_t v113 = a1;
  uint64_t v3 = type metadata accessor for UUID();
  uint64_t v106 = *(void *)(v3 - 8);
  __chkstk_darwin(v3, v4);
  uint64_t v105 = (char *)&v103 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1005057FC((uint64_t *)&unk_101674520);
  __chkstk_darwin(v6 - 8, v7);
  uint64_t v9 = (char *)&v103 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for DispatchPredicate();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10, v12);
  uint64_t v14 = (uint64_t *)((char *)&v103 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v15 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform17CRLBoardDataStore_writeQueue);
  *uint64_t v14 = v15;
  uint64_t v16 = *(void (**)(void))(v11 + 104);
  unsigned int v110 = enum case for DispatchPredicate.onQueue(_:);
  uint64_t v112 = v11 + 104;
  uint64_t v111 = (void (*)(void *, void, uint64_t))v16;
  v16(v14);
  id v17 = v15;
  LOBYTE(v15) = _dispatchPreconditionTest(_:)();
  uint64_t v18 = *(void (**)(void *, uint64_t))(v11 + 8);
  uint64_t v108 = v10;
  uint64_t v109 = v11 + 8;
  v18(v14, v10);
  if ((v15 & 1) == 0)
  {
    __break(1u);
    goto LABEL_29;
  }
  uint64_t v104 = v3;
  uint64_t v107 = v18;
  uint64_t v114 = 0;
  unint64_t v115 = 0xE000000000000000;
  _StringGuts.grow(_:)(119);
  v19._countAndFlagsBits = 0x20455441445055;
  v19._object = (void *)0xE700000000000000;
  String.append(_:)(v19);
  v20._countAndFlagsBits = 0x74695F6472616F62;
  v20._object = (void *)0xEB00000000736D65;
  String.append(_:)(v20);
  v21._countAndFlagsBits = 0x2054455320;
  v21._object = (void *)0xE500000000000000;
  String.append(_:)(v21);
  v22._countAndFlagsBits = 0x755F746E65726170;
  v22._object = (void *)0xEB00000000646975;
  String.append(_:)(v22);
  v23._countAndFlagsBits = 0x202C3F203D20;
  v23._object = (void *)0xE600000000000000;
  String.append(_:)(v23);
  v24._countAndFlagsBits = 0x645F6E6F6D6D6F63;
  v24._object = (void *)0xEB00000000617461;
  String.append(_:)(v24);
  v25._countAndFlagsBits = 0x202C3F203D20;
  v25._object = (void *)0xE600000000000000;
  String.append(_:)(v25);
  v26._countAndFlagsBits = 0x6369666963657073;
  v26._object = (void *)0xED0000617461645FLL;
  String.append(_:)(v26);
  v27._countAndFlagsBits = 0x202C3F203D20;
  v27._object = (void *)0xE600000000000000;
  String.append(_:)(v27);
  v28._countAndFlagsBits = 0x6E6F7473626D6F74;
  v28._object = (void *)0xEA00000000006465;
  String.append(_:)(v28);
  v29._countAndFlagsBits = 0x202C3F203D20;
  v29._object = (void *)0xE600000000000000;
  String.append(_:)(v29);
  v30._object = (void *)0x800000010127B8B0;
  v30._countAndFlagsBits = 0xD000000000000010;
  String.append(_:)(v30);
  v31._countAndFlagsBits = 0x202C3F203D20;
  v31._object = (void *)0xE600000000000000;
  String.append(_:)(v31);
  v32._object = (void *)0xE900000000000061;
  v32._countAndFlagsBits = 0x7461645F636E7973;
  String.append(_:)(v32);
  v33._countAndFlagsBits = 0x202C3F203D20;
  v33._object = (void *)0xE600000000000000;
  String.append(_:)(v33);
  v34._countAndFlagsBits = 0xD000000000000014;
  v34._object = (void *)0x800000010127BB50;
  String.append(_:)(v34);
  v35._countAndFlagsBits = 0x202C3F203D20;
  v35._object = (void *)0xE600000000000000;
  String.append(_:)(v35);
  v36._countAndFlagsBits = 0x6F5F7463656A626FLL;
  v36._object = (void *)0xEE00736E6F697470;
  String.append(_:)(v36);
  v37._countAndFlagsBits = 0x202C3F203D20;
  v37._object = (void *)0xE600000000000000;
  String.append(_:)(v37);
  v38._countAndFlagsBits = 0xD00000000000002DLL;
  v38._object = (void *)0x800000010127BD60;
  String.append(_:)(v38);
  v39._countAndFlagsBits = 0x202C3F203D20;
  v39._object = (void *)0xE600000000000000;
  String.append(_:)(v39);
  v40._countAndFlagsBits = 0xD000000000000026;
  v40._object = (void *)0x800000010127B8D0;
  String.append(_:)(v40);
  v41._countAndFlagsBits = 0x48570A203F203D20;
  v41._object = (void *)0xED00002820455245;
  String.append(_:)(v41);
  v42._object = (void *)0xE900000000000064;
  v42._countAndFlagsBits = 0x6975755F6D657469;
  String.append(_:)(v42);
  v43._countAndFlagsBits = 0x444E41203F203D20;
  v43._object = (void *)0xE900000000000020;
  String.append(_:)(v43);
  v44._object = (void *)0x8000000101262BA0;
  v44._countAndFlagsBits = 0xD000000000000010;
  String.append(_:)(v44);
  v45._countAndFlagsBits = 0x293F203D20;
  v45._object = (void *)0xE500000000000000;
  String.append(_:)(v45);
  uint64_t v46 = v114;
  uint64_t v47 = v115;
  type metadata accessor for SQLiteStatement();
  swift_initStackObject();
  uint64_t v48 = swift_retain();
  uint64_t v49 = sub_10079FC40(v48, v46, v47);
  uint64_t result = swift_release();
  if (v2) {
    return result;
  }
  uint64_t v51 = v113;
  uint64_t v52 = v113 + OBJC_IVAR____TtC8Freeform23CRLBoardItemDatabaseRow_parentContainerUUID;
  swift_beginAccess();
  sub_100522E9C(v52, (uint64_t)v9, (uint64_t *)&unk_101674520);
  sub_10079E0E8((uint64_t)v9, 1);
  sub_100522F00((uint64_t)v9, (uint64_t *)&unk_101674520);
  unint64_t v53 = (uint64_t *)(v51 + OBJC_IVAR____TtC8Freeform23CRLBoardItemDatabaseRow_commonData);
  unint64_t v54 = *(void *)(v51 + OBJC_IVAR____TtC8Freeform23CRLBoardItemDatabaseRow_commonData + 8);
  if (v54 >> 60 == 15)
  {
    uint64_t v55 = *(void **)(*(void *)(v49 + 16) + 32);
    *uint64_t v14 = v55;
    uint64_t v56 = v108;
    v111(v14, v110, v108);
    id v57 = v55;
    LOBYTE(v55) = _dispatchPreconditionTest(_:)();
    unint64_t v58 = v107;
    v107(v14, v56);
    if ((v55 & 1) == 0)
    {
LABEL_30:
      __break(1u);
      goto LABEL_31;
    }
    swift_beginAccess();
    sqlite3_bind_null(*(sqlite3_stmt **)(v49 + 24), 2);
  }
  else
  {
    uint64_t v59 = *v53;
    sub_100510D4C(*v53, *(void *)(v51 + OBJC_IVAR____TtC8Freeform23CRLBoardItemDatabaseRow_commonData + 8));
    sub_10079DCE4(v59, v54, 2);
    sub_100514260(v59, v54);
    unint64_t v58 = v107;
  }
  uint64_t v60 = v113 + OBJC_IVAR____TtC8Freeform23CRLBoardItemDatabaseRow_specificData;
  unint64_t v61 = *(void *)(v113 + OBJC_IVAR____TtC8Freeform23CRLBoardItemDatabaseRow_specificData + 8);
  if (v61 >> 60 == 15)
  {
    uint64_t v62 = *(void **)(*(void *)(v49 + 16) + 32);
    *uint64_t v14 = v62;
    uint64_t v63 = v108;
    v111(v14, v110, v108);
    id v64 = v62;
    LOBYTE(v62) = _dispatchPreconditionTest(_:)();
    v58(v14, v63);
    if ((v62 & 1) == 0)
    {
LABEL_31:
      __break(1u);
      goto LABEL_32;
    }
    swift_beginAccess();
    sqlite3_bind_null(*(sqlite3_stmt **)(v49 + 24), 3);
  }
  else
  {
    uint64_t v65 = *(void *)v60;
    sub_100510D4C(*(void *)v60, *(void *)(v60 + 8));
    sub_10079DCE4(v65, v61, 3);
    sub_100514260(v65, v61);
  }
  uint64_t v66 = v113;
  sub_10079D6E8(*(unsigned __int8 *)(v113 + OBJC_IVAR____TtC8Freeform23CRLBoardItemDatabaseRow_isLocalTombstone), 4);
  sub_10079D8A8(*(void *)(v66 + OBJC_IVAR____TtC8Freeform23CRLBoardItemDatabaseRow_unsyncedChanges), 5);
  uint64_t v67 = (uint64_t *)(v66 + OBJC_IVAR____TtC8Freeform23CRLBoardItemDatabaseRow_syncData);
  unint64_t v68 = *(void *)(v66 + OBJC_IVAR____TtC8Freeform23CRLBoardItemDatabaseRow_syncData + 8);
  uint64_t v103 = 0;
  if (v68 >> 60 == 15)
  {
    uint64_t v69 = *(void **)(*(void *)(v49 + 16) + 32);
    *uint64_t v14 = v69;
    uint64_t v70 = v108;
    v111(v14, v110, v108);
    id v71 = v69;
    LOBYTE(v69) = _dispatchPreconditionTest(_:)();
    v58(v14, v70);
    if ((v69 & 1) == 0)
    {
LABEL_32:
      __break(1u);
      goto LABEL_33;
    }
    swift_beginAccess();
    sqlite3_bind_null(*(sqlite3_stmt **)(v49 + 24), 6);
  }
  else
  {
    uint64_t v72 = *v67;
    sub_100510D4C(*v67, v68);
    sub_10079DCE4(v72, v68, 6);
    sub_100514260(v72, v68);
  }
  uint64_t v73 = v113;
  uint64_t v74 = v113 + OBJC_IVAR____TtC8Freeform23CRLBoardItemDatabaseRow_minRequiredVersions;
  sub_10079D8A8(*(void *)(v113 + OBJC_IVAR____TtC8Freeform23CRLBoardItemDatabaseRow_minRequiredVersions), 7);
  sub_10079D8A8(*(void *)(v73 + OBJC_IVAR____TtC8Freeform23CRLBoardItemDatabaseRow_objectOptions), 8);
  sub_10079D8A8(*(void *)(v74 + 8), 9);
  sub_10079D8A8(*(void *)(v74 + 16), 10);
  uint64_t v75 = v106;
  uint64_t v76 = v105;
  uint64_t v77 = v104;
  (*(void (**)(char *, uint64_t, uint64_t))(v106 + 16))(v105, v73 + OBJC_IVAR____TtC8Freeform23CRLBoardItemDatabaseRow_itemUUID, v104);
  uint64_t v78 = UUID.crl_data()();
  unint64_t v80 = v79;
  sub_10079DCE4(v78, v79, 11);
  sub_100510084(v78, v80);
  (*(void (**)(char *, uint64_t))(v75 + 8))(v76, v77);
  uint64_t v81 = v103;
  uint64_t v82 = sub_100753FC0();
  if (!v81)
  {
    uint64_t v89 = v82;
    unint64_t v90 = v83;
    sub_10079DCE4(v82, v83, 12);
    uint64_t v91 = *(void **)(*(void *)(v49 + 16) + 32);
    *uint64_t v14 = v91;
    uint64_t v92 = v108;
    v111(v14, v110, v108);
    id v93 = v91;
    LOBYTE(v91) = _dispatchPreconditionTest(_:)();
    v107(v14, v92);
    if ((v91 & 1) == 0)
    {
LABEL_33:
      __break(1u);
LABEL_34:
      __break(1u);
    }
    uint64_t v87 = (sqlite3_stmt **)(v49 + 24);
    swift_beginAccess();
    int v94 = sqlite3_step(*(sqlite3_stmt **)(v49 + 24));
    if (v94 == 101)
    {
      sub_100510084(v89, v90);
      uint64_t v95 = *(void **)(*(void *)(v49 + 16) + 32);
      *uint64_t v14 = v95;
      uint64_t v96 = v108;
      v111(v14, v110, v108);
      id v97 = v95;
      unint64_t v90 = _dispatchPreconditionTest(_:)();
      int v94 = ((uint64_t (*)(void *, uint64_t))v107)(v14, v96);
      if (v90) {
        goto LABEL_26;
      }
      __break(1u);
    }
    int v98 = v94;
    sub_10079FF00();
    swift_allocError();
    *(_DWORD *)uint64_t v99 = v98;
    *(void *)(v99 + 8) = 0xD00000000000001BLL;
    *(void *)(v99 + 16) = 0x800000010127D310;
    swift_willThrow();
    sub_100510084(v89, v90);
    uint64_t v100 = *(void **)(*(void *)(v49 + 16) + 32);
    *uint64_t v14 = v100;
    uint64_t v101 = v108;
    v111(v14, v110, v108);
    id v102 = v100;
    LOBYTE(v10sub_100C38440(1, 0) = _dispatchPreconditionTest(_:)();
    v107(v14, v101);
    if ((v100 & 1) == 0) {
      goto LABEL_34;
    }
LABEL_26:
    int v88 = *v87;
    if (!*v87) {
      return swift_release();
    }
    goto LABEL_18;
  }
  char v84 = *(void **)(*(void *)(v49 + 16) + 32);
  *uint64_t v14 = v84;
  uint64_t v85 = v108;
  v111(v14, v110, v108);
  id v86 = v84;
  LOBYTE(v84) = _dispatchPreconditionTest(_:)();
  v107(v14, v85);
  if ((v84 & 1) == 0)
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  uint64_t v87 = (sqlite3_stmt **)(v49 + 24);
  swift_beginAccess();
  int v88 = *(sqlite3_stmt **)(v49 + 24);
  if (v88)
  {
LABEL_18:
    sqlite3_finalize(v88);
    *uint64_t v87 = 0;
  }
  return swift_release();
}

uint64_t sub_100C594D0(uint64_t result, uint64_t a2, uint64_t a3, char a4, sqlite3_int64 a5)
{
  uint64_t v8 = (sqlite3_stmt **)result;
  if (*(void *)(a2 + 16) || *(void *)(a3 + 16) || (a4 & 1) != 0)
  {
    uint64_t v9 = sub_100C5B784(a2, a3, a4 & 1);
    if (a4)
    {
      sub_100C5C97C((uint64_t)v8);
      if (v5)
      {
LABEL_12:
        swift_bridgeObjectRelease();
        return swift_bridgeObjectRelease();
      }
    }
    else
    {
      uint64_t v10 = swift_bridgeObjectRetain();
      uint64_t v11 = sub_1006BA36C(v10);
      swift_bridgeObjectRelease();
      sub_100C5D1DC(v8, (uint64_t)v11);
      if (v5)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return swift_release();
      }
      swift_release();
    }
    sub_100C5DA80((uint64_t)v8, v9, a5);
    goto LABEL_12;
  }
  return result;
}

uint64_t sub_100C595DC(uint64_t a1, uint64_t a2, sqlite3_int64 a3)
{
  sqlite3_int64 v72 = a3;
  uint64_t v74 = type metadata accessor for String.Encoding();
  uint64_t v6 = *(void *)(v74 - 8);
  __chkstk_darwin(v74, v7);
  uint64_t v9 = (char *)v68 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for DispatchPredicate();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10, v12);
  uint64_t v14 = (void *)((char *)v68 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v15 = *(void **)(v3 + OBJC_IVAR____TtC8Freeform17CRLBoardDataStore_writeQueue);
  *uint64_t v14 = v15;
  uint64_t v16 = *(void (**)(void))(v11 + 104);
  unsigned int v75 = enum case for DispatchPredicate.onQueue(_:);
  uint64_t v76 = (void (*)(void *, void, uint64_t))v16;
  uint64_t v77 = v11 + 104;
  v16(v14);
  id v17 = v15;
  LOBYTE(v15) = _dispatchPreconditionTest(_:)();
  uint64_t v18 = *(void (**)(void *, uint64_t))(v11 + 8);
  uint64_t v79 = v11 + 8;
  uint64_t v80 = v10;
  uint64_t v78 = v18;
  v18(v14, v10);
  if ((v15 & 1) == 0)
  {
LABEL_27:
    __break(1u);
    __break(1u);
    goto LABEL_28;
  }
  uint64_t v69 = v6;
  uint64_t v70 = a1;
  uint64_t v19 = *(void *)(a2 + 16);
  unint64_t v85 = 0;
  unint64_t v86 = 0xE000000000000000;
  _StringGuts.grow(_:)(50);
  swift_bridgeObjectRelease();
  unint64_t v85 = 0xD00000000000006CLL;
  unint64_t v86 = 0x800000010127CA90;
  unint64_t v83 = sub_100C37E4C(63, 0xE100000000000000, v19);
  sub_1005057FC((uint64_t *)&unk_1016773F0);
  sub_100523288((unint64_t *)&qword_101672620, (uint64_t *)&unk_1016773F0);
  uint64_t v20 = BidirectionalCollection<>.joined(separator:)();
  uint64_t v21 = a2;
  Swift::String v23 = v22;
  swift_bridgeObjectRelease();
  v24._countAndFlagsBits = v20;
  v24._object = v23;
  String.append(_:)(v24);
  swift_bridgeObjectRelease();
  v25._countAndFlagsBits = 10537;
  v25._object = (void *)0xE200000000000000;
  String.append(_:)(v25);
  uint64_t v26 = v85;
  uint64_t v27 = v86;
  type metadata accessor for SQLiteStatement();
  swift_initStackObject();
  uint64_t v28 = swift_retain();
  uint64_t v29 = v73;
  uint64_t v30 = sub_10079FC40(v28, v26, v27);
  uint64_t result = swift_release();
  if (!v29)
  {
    sub_10079D8A8(v72, 1);
    uint64_t v32 = sub_100511430();
    uint64_t v34 = v32;
    unint64_t v35 = v33;
    v68[1] = 0;
    uint64_t v73 = v30;
    sub_10079DCE4(v32, v33, 2);
    sub_100510084(v34, v35);
    sqlite3_int64 v72 = v19;
    if (v19)
    {
      id v71 = (sqlite3_stmt **)(v73 + 24);
      swift_beginAccess();
      uint64_t v36 = 0;
      Swift::String v37 = (void (**)(char *, uint64_t))(v69 + 8);
      Swift::String v38 = (uint64_t *)(v21 + 40);
      while (1)
      {
        Swift::String v40 = (double *)*(v38 - 1);
        uint64_t v39 = *v38;
        Swift::String v41 = *(void **)(*(void *)(v73 + 16) + 32);
        *uint64_t v14 = v41;
        uint64_t v42 = v80;
        v76(v14, v75, v80);
        swift_bridgeObjectRetain();
        id v43 = v41;
        LOBYTE(v41) = _dispatchPreconditionTest(_:)();
        v78(v14, v42);
        if ((v41 & 1) == 0) {
          break;
        }
        unint64_t v83 = v40;
        uint64_t v84 = v39;
        static String.Encoding.utf8.getter();
        sub_10052E310();
        uint64_t v44 = StringProtocol.cString(using:)();
        (*v37)(v9, v74);
        if (v36 == 2147483645) {
          goto LABEL_26;
        }
        Swift::String v45 = *v71;
        if (qword_10166F130 != -1) {
          swift_once();
        }
        uint64_t v46 = v36 + 1;
        v38 += 2;
        if (v44) {
          uint64_t v47 = (const char *)(v44 + 32);
        }
        else {
          uint64_t v47 = 0;
        }
        sqlite3_bind_text(v45, v36 + 3, v47, -1, (void (__cdecl *)(void *))qword_10171A940);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        ++v36;
        if (v72 == v46) {
          goto LABEL_17;
        }
      }
      __break(1u);
LABEL_26:
      __break(1u);
      goto LABEL_27;
    }
LABEL_17:
    uint64_t v48 = v73;
    uint64_t v49 = *(void **)(*(void *)(v73 + 16) + 32);
    *uint64_t v14 = v49;
    uint64_t v50 = v80;
    v76(v14, v75, v80);
    id v51 = v49;
    char v52 = _dispatchPreconditionTest(_:)();
    v78(v14, v50);
    if ((v52 & 1) == 0)
    {
LABEL_28:
      __break(1u);
      goto LABEL_29;
    }
    unint64_t v53 = (sqlite3_stmt **)(v48 + 24);
    swift_beginAccess();
    int v54 = sqlite3_step(*(sqlite3_stmt **)(v48 + 24));
    if (v54 == 101)
    {
      uint64_t v55 = *(void **)(*(void *)(v48 + 16) + 32);
      *uint64_t v14 = v55;
      uint64_t v56 = v80;
      v76(v14, v75, v80);
      id v57 = v55;
      char v58 = _dispatchPreconditionTest(_:)();
      v78(v14, v56);
      if ((v58 & 1) == 0)
      {
LABEL_29:
        __break(1u);
LABEL_30:
        __break(1u);
      }
      uint64_t v59 = *v53;
      if (!*v53) {
        return swift_release();
      }
    }
    else
    {
      int v60 = v54;
      uint64_t v81 = 0;
      unint64_t v82 = 0xE000000000000000;
      _StringGuts.grow(_:)(78);
      v61._object = (void *)0x800000010127CB00;
      v61._countAndFlagsBits = 0xD00000000000004CLL;
      String.append(_:)(v61);
      type metadata accessor for CRLAssetReferrerIdentifier(0);
      _print_unlocked<A, B>(_:_:)();
      uint64_t v62 = v81;
      unint64_t v63 = v82;
      sub_10079FF00();
      swift_allocError();
      *(_DWORD *)uint64_t v64 = v60;
      *(void *)(v64 + 8) = v62;
      *(void *)(v64 + 16) = v63;
      swift_willThrow();
      uint64_t v65 = *(void **)(*(void *)(v48 + 16) + 32);
      *uint64_t v14 = v65;
      uint64_t v66 = v80;
      v76(v14, v75, v80);
      id v67 = v65;
      LOBYTE(v63) = _dispatchPreconditionTest(_:)();
      v78(v14, v66);
      if ((v63 & 1) == 0) {
        goto LABEL_30;
      }
      uint64_t v59 = *v53;
      if (!*v53) {
        return swift_release();
      }
    }
    sqlite3_finalize(v59);
    *unint64_t v53 = 0;
    return swift_release();
  }
  return result;
}

uint64_t sub_100C59D8C(uint64_t a1, unsigned __int8 a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = v5;
  uint64_t v95 = a4;
  int v10 = a2;
  uint64_t v11 = sub_1005057FC(&qword_101672BB0);
  __chkstk_darwin(v11 - 8, v12);
  uint64_t v14 = (char *)&v71 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1005057FC((uint64_t *)&unk_101674520);
  __chkstk_darwin(v15 - 8, v16);
  uint64_t v18 = (char *)&v71 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = type metadata accessor for UUID();
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v22 = __chkstk_darwin(v19, v21);
  Swift::String v24 = (char *)&v71 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v85 = v23;
  __chkstk_darwin(v22, v25);
  unint64_t v86 = (char *)&v71 - v26;
  if (!v10)
  {
    uint64_t v68 = sub_100C5B784(a3, v95, 0);
    swift_bridgeObjectRelease();
    uint64_t v69 = sub_100C32284(v68);
    if (*(void *)(v69 + 16))
    {
      uint64_t v70 = (uint64_t)v86;
      (*(void (**)(char *, uint64_t, uint64_t))(v20 + 16))(v86, a1 + OBJC_IVAR____TtC8Freeform23CRLBoardItemDatabaseRow_itemUUID, v19);
      sub_1005E2D4C(v69, v70, a1 + OBJC_IVAR____TtC8Freeform23CRLBoardItemDatabaseRow_boardIdentifier);
      swift_bridgeObjectRelease();
      return (*(uint64_t (**)(uint64_t, uint64_t))(v20 + 8))(v70, v19);
    }
    else
    {
      return swift_bridgeObjectRelease();
    }
  }
  int v88 = v6;
  uint64_t v27 = *(void *)(a5 + 56);
  uint64_t v76 = a5 + 56;
  uint64_t v28 = 1 << *(unsigned char *)(a5 + 32);
  uint64_t v29 = -1;
  if (v28 < 64) {
    uint64_t v29 = ~(-1 << v28);
  }
  unint64_t v30 = v29 & v27;
  uint64_t v82 = OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetDownloadManagerLock;
  uint64_t v90 = OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetDownloadManager;
  uint64_t v75 = OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManagerLock;
  uint64_t v31 = OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManager;
  int64_t v77 = (unint64_t)(v28 + 63) >> 6;
  uint64_t v87 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v20 + 56);
  uint64_t v84 = v20 + 48;
  int v94 = (void (**)(char *, char *, uint64_t))(v20 + 32);
  uint64_t v95 = v20 + 16;
  uint64_t v81 = (uint64_t (**)(char *, uint64_t))(v20 + 8);
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v33 = 0;
  long long v73 = xmmword_101186B10;
  uint64_t v79 = v18;
  uint64_t v80 = (char *)&type metadata for () + 8;
  uint64_t v91 = v14;
  uint64_t v89 = v24;
  uint64_t v83 = a5;
  uint64_t v74 = v31;
  uint64_t v72 = v20;
  while (1)
  {
    uint64_t v34 = v88;
    if (v30)
    {
      uint64_t v93 = (v30 - 1) & v30;
      unint64_t v35 = __clz(__rbit64(v30)) | (v33 << 6);
      goto LABEL_23;
    }
    int64_t v36 = v33 + 1;
    if (__OFADD__(v33, 1))
    {
      __break(1u);
      goto LABEL_45;
    }
    if (v36 >= v77) {
      goto LABEL_39;
    }
    unint64_t v37 = *(void *)(v76 + 8 * v36);
    ++v33;
    if (!v37)
    {
      int64_t v33 = v36 + 1;
      if (v36 + 1 >= v77) {
        goto LABEL_39;
      }
      unint64_t v37 = *(void *)(v76 + 8 * v33);
      if (!v37)
      {
        int64_t v33 = v36 + 2;
        if (v36 + 2 >= v77) {
          goto LABEL_39;
        }
        unint64_t v37 = *(void *)(v76 + 8 * v33);
        if (!v37) {
          break;
        }
      }
    }
LABEL_22:
    uint64_t v93 = (v37 - 1) & v37;
    unint64_t v35 = __clz(__rbit64(v37)) + (v33 << 6);
LABEL_23:
    uint64_t v39 = *(void (**)(char *, unint64_t, uint64_t))(v20 + 16);
    v39(v18, *(void *)(a5 + 48) + *(void *)(v20 + 72) * v35, v19);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v18, 0, 1, v19);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19) == 1) {
      return swift_release();
    }
    int64_t v92 = v33;
    Swift::String v40 = *v94;
    (*v94)(v24, v18, v19);
    uint64_t v41 = *(void *)&v34[v82];
    os_unfair_lock_lock(*(os_unfair_lock_t *)(v41 + 16));
    if (*(void *)&v34[v90])
    {
      uint64_t v42 = *(void *)&v34[v90];
    }
    else
    {
      uint64_t v43 = swift_allocObject();
      swift_unknownObjectWeakInit();
      uint64_t v44 = *(void *)&v34[v75];
      Swift::String v45 = *(os_unfair_lock_s **)(v44 + 16);
      uint64_t v78 = v34;
      os_unfair_lock_lock(v45);
      uint64_t v46 = v74;
      uint64_t v47 = *(void **)&v34[v74];
      uint64_t v48 = v34;
      if (v47)
      {
        id v49 = *(id *)&v34[v74];
      }
      else
      {
        id v50 = objc_allocWithZone((Class)type metadata accessor for CRLAssetFileManager());
        id v51 = v78;
        id v52 = sub_100EAFDE4((uint64_t)v51);

        unint64_t v53 = *(void **)&v48[v46];
        *(void *)&v48[v46] = v52;
        id v49 = v52;

        uint64_t v47 = 0;
      }
      uint64_t v20 = v72;
      int v54 = *(os_unfair_lock_s **)(v44 + 16);
      id v55 = v47;
      os_unfair_lock_unlock(v54);
      type metadata accessor for CRLAssetDownloadManager();
      uint64_t v42 = swift_allocObject();
      swift_defaultActor_initialize();
      *(_OWORD *)(v42 + 224) = 0u;
      *(_OWORD *)(v42 + 24sub_100C38440(1, 0) = 0u;
      *(_OWORD *)(v42 + 192) = 0u;
      *(_OWORD *)(v42 + 208) = 0u;
      *(_OWORD *)(v42 + 176) = 0u;
      *(void *)(v42 + 256) = 0;
      *(void *)(v42 + 264) = &_swiftEmptySetSingleton;
      *(void *)(v42 + 272) = _swiftEmptyDictionarySingleton;
      *(void *)(v42 + 112) = v49;
      *(void *)(v42 + 12sub_100C38440(1, 0) = sub_100678FF0;
      *(void *)(v42 + 128) = v43;
      *(void *)(v42 + 136) = sub_100671914;
      *(void *)(v42 + 144) = 0;
      *(void *)(v42 + 152) = 3;
      *(_OWORD *)(v42 + 16sub_100C38440(1, 0) = v73;

      *(void *)&v48[v90] = v42;
      swift_retain();
      swift_release();
      uint64_t v14 = v91;
      Swift::String v24 = v89;
    }
    uint64_t v56 = *(os_unfair_lock_s **)(v41 + 16);
    swift_retain();
    os_unfair_lock_unlock(v56);
    uint64_t v57 = type metadata accessor for TaskPriority();
    uint64_t v58 = *(void *)(v57 - 8);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v58 + 56))(v14, 1, 1, v57);
    uint64_t v59 = v86;
    v39(v86, (unint64_t)v24, v19);
    unint64_t v60 = (*(unsigned __int8 *)(v20 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
    Swift::String v61 = (void *)swift_allocObject();
    v61[2] = 0;
    uint64_t v62 = v61 + 2;
    v61[3] = 0;
    v61[4] = v42;
    unint64_t v63 = v59;
    uint64_t v14 = v91;
    v40((char *)v61 + v60, v63, v19);
    LODWORD(v6sub_100C38440(1, 0) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v58 + 48))(v14, 1, v57);
    swift_retain();
    if (v60 == 1)
    {
      sub_100522F00((uint64_t)v14, &qword_101672BB0);
      if (*v62) {
        goto LABEL_32;
      }
    }
    else
    {
      TaskPriority.rawValue.getter();
      (*(void (**)(char *, uint64_t))(v58 + 8))(v14, v57);
      if (*v62)
      {
LABEL_32:
        swift_getObjectType();
        swift_unknownObjectRetain();
        uint64_t v64 = dispatch thunk of Actor.unownedExecutor.getter();
        uint64_t v66 = v65;
        swift_unknownObjectRelease();
        goto LABEL_35;
      }
    }
    uint64_t v64 = 0;
    uint64_t v66 = 0;
LABEL_35:
    uint64_t v67 = swift_allocObject();
    *(void *)(v67 + 16) = &unk_101699748;
    *(void *)(v67 + 24) = v61;
    if (v66 | v64)
    {
      uint64_t v96 = 0;
      uint64_t v97 = 0;
      uint64_t v98 = v64;
      uint64_t v99 = v66;
    }
    uint64_t v18 = v79;
    Swift::String v24 = v89;
    unint64_t v30 = v93;
    swift_task_create();
    swift_release();
    swift_release();
    uint64_t result = (*v81)(v24, v19);
    a5 = v83;
    int64_t v33 = v92;
  }
  int64_t v38 = v36 + 3;
  if (v38 >= v77)
  {
LABEL_39:
    (*v87)(v18, 1, 1, v19);
    return swift_release();
  }
  unint64_t v37 = *(void *)(v76 + 8 * v38);
  if (v37)
  {
    int64_t v33 = v38;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v33 = v38 + 1;
    if (__OFADD__(v38, 1)) {
      break;
    }
    if (v33 >= v77) {
      goto LABEL_39;
    }
    unint64_t v37 = *(void *)(v76 + 8 * v33);
    ++v38;
    if (v37) {
      goto LABEL_22;
    }
  }
LABEL_45:
  __break(1u);
  return result;
}

uint64_t sub_100C5A69C(uint64_t a1)
{
  uint64_t v3 = sub_1005057FC((uint64_t *)&unk_101674520);
  __chkstk_darwin(v3 - 8, v4);
  uint64_t v162 = (uint64_t)&v155 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v161 = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6, v7);
  int v10 = (char *)&v155 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8, v11);
  uint64_t v160 = (char *)&v155 - v12;
  uint64_t v13 = type metadata accessor for DispatchPredicate();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13, v15);
  uint64_t v17 = (uint64_t *)((char *)&v155 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v165 = v1;
  uint64_t v18 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform17CRLBoardDataStore_writeQueue);
  *uint64_t v17 = v18;
  uint64_t v20 = v14 + 104;
  uint64_t v19 = *(void (**)(void))(v14 + 104);
  unsigned int v168 = enum case for DispatchPredicate.onQueue(_:);
  id v169 = (void (*)(void *, void, uint64_t))v19;
  v19(v17);
  id v21 = v18;
  char v22 = _dispatchPreconditionTest(_:)();
  uint64_t v23 = *(void (**)(void *, uint64_t))(v14 + 8);
  uint64_t v167 = v17;
  uint64_t v163 = v14 + 8;
  unsigned int v164 = v23;
  v23(v17, v13);
  if ((v22 & 1) == 0)
  {
    __break(1u);
LABEL_45:
    __break(1u);
    goto LABEL_46;
  }
  uint64_t v158 = v10;
  uint64_t v159 = v13;
  uint64_t v157 = OBJC_IVAR____TtC8Freeform23CRLBoardItemDatabaseRow_itemTypeValue;
  uint64_t v24 = a1;
  if (*(void *)(a1 + OBJC_IVAR____TtC8Freeform23CRLBoardItemDatabaseRow_itemTypeValue) == 11)
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"_insertBoardItemDatabaseRow(_:)", 31, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLBoardDataStore.swift", 89, 2, 3207, (uint64_t)"Attempted to save FreehandDrawingShapeItem (BoardItem_11) to SQL.", 65, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"_insertBoardItemDatabaseRow(_:)", 31, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLBoardDataStore.swift", 89, 2, 3207);
    [self logFullBacktrace];
  }
  uint64_t v175 = 0;
  unint64_t v176 = 0xE000000000000000;
  _StringGuts.grow(_:)(115);
  v25._uint64_t countAndFlagsBits = 0x4920545245534E49;
  v25._object = (void *)0xEC000000204F544ELL;
  String.append(_:)(v25);
  v26._uint64_t countAndFlagsBits = 0x74695F6472616F62;
  v26._object = (void *)0xEB00000000736D65;
  String.append(_:)(v26);
  v27._uint64_t countAndFlagsBits = 10272;
  v27._object = (void *)0xE200000000000000;
  String.append(_:)(v27);
  v28._object = (void *)0xE900000000000064;
  v28._uint64_t countAndFlagsBits = 0x6975755F6D657469;
  String.append(_:)(v28);
  v29._uint64_t countAndFlagsBits = 8236;
  v29._object = (void *)0xE200000000000000;
  String.append(_:)(v29);
  v30._uint64_t countAndFlagsBits = 0x755F746E65726170;
  v30._object = (void *)0xEB00000000646975;
  String.append(_:)(v30);
  v31._uint64_t countAndFlagsBits = 8236;
  v31._object = (void *)0xE200000000000000;
  String.append(_:)(v31);
  v32._object = (void *)0x8000000101262BA0;
  v32._uint64_t countAndFlagsBits = 0xD000000000000010;
  String.append(_:)(v32);
  v33._uint64_t countAndFlagsBits = 8236;
  v33._object = (void *)0xE200000000000000;
  String.append(_:)(v33);
  v34._object = (void *)0xE900000000000065;
  v34._uint64_t countAndFlagsBits = 0x7079745F6D657469;
  String.append(_:)(v34);
  v35._uint64_t countAndFlagsBits = 8236;
  v35._object = (void *)0xE200000000000000;
  String.append(_:)(v35);
  v36._uint64_t countAndFlagsBits = 0x645F6E6F6D6D6F63;
  v36._object = (void *)0xEB00000000617461;
  String.append(_:)(v36);
  v37._uint64_t countAndFlagsBits = 8236;
  v37._object = (void *)0xE200000000000000;
  String.append(_:)(v37);
  v38._uint64_t countAndFlagsBits = 0x6369666963657073;
  v38._object = (void *)0xED0000617461645FLL;
  String.append(_:)(v38);
  v39._uint64_t countAndFlagsBits = 8236;
  v39._object = (void *)0xE200000000000000;
  String.append(_:)(v39);
  v40._uint64_t countAndFlagsBits = 0x6E6F7473626D6F74;
  v40._object = (void *)0xEA00000000006465;
  String.append(_:)(v40);
  v41._uint64_t countAndFlagsBits = 8236;
  v41._object = (void *)0xE200000000000000;
  String.append(_:)(v41);
  v42._object = (void *)0x800000010127B8B0;
  v42._uint64_t countAndFlagsBits = 0xD000000000000010;
  String.append(_:)(v42);
  v43._uint64_t countAndFlagsBits = 8236;
  v43._object = (void *)0xE200000000000000;
  String.append(_:)(v43);
  v44._uint64_t countAndFlagsBits = 0x7461645F636E7973;
  v44._object = (void *)0xE900000000000061;
  String.append(_:)(v44);
  v45._uint64_t countAndFlagsBits = 8236;
  v45._object = (void *)0xE200000000000000;
  String.append(_:)(v45);
  v46._uint64_t countAndFlagsBits = 0xD000000000000014;
  v46._object = (void *)0x800000010127BB50;
  String.append(_:)(v46);
  v47._uint64_t countAndFlagsBits = 8236;
  v47._object = (void *)0xE200000000000000;
  String.append(_:)(v47);
  v48._uint64_t countAndFlagsBits = 0x6F5F7463656A626FLL;
  v48._object = (void *)0xEE00736E6F697470;
  String.append(_:)(v48);
  v49._uint64_t countAndFlagsBits = 8236;
  v49._object = (void *)0xE200000000000000;
  String.append(_:)(v49);
  v50._uint64_t countAndFlagsBits = 0xD00000000000002DLL;
  v50._object = (void *)0x800000010127BD60;
  String.append(_:)(v50);
  v51._uint64_t countAndFlagsBits = 8236;
  v51._object = (void *)0xE200000000000000;
  String.append(_:)(v51);
  v52._uint64_t countAndFlagsBits = 0xD000000000000026;
  v52._object = (void *)0x800000010127B8D0;
  String.append(_:)(v52);
  v53._uint64_t countAndFlagsBits = 0xD000000000000031;
  v53._object = (void *)0x800000010127D3A0;
  String.append(_:)(v53);
  uint64_t v54 = v175;
  uint64_t v55 = v176;
  uint64_t v56 = *(void *)(v165 + OBJC_IVAR____TtC8Freeform17CRLBoardDataStore_database);
  type metadata accessor for SQLiteStatement();
  swift_initStackObject();
  uint64_t v57 = swift_retain();
  uint64_t v58 = v166;
  uint64_t v59 = sub_10079FC40(v57, v54, v55);
  uint64_t result = swift_release();
  if (!v58)
  {
    uint64_t v156 = v56;
    uint64_t v166 = 0;
    uint64_t v61 = v24 + OBJC_IVAR____TtC8Freeform23CRLBoardItemDatabaseRow_itemUUID;
    uint64_t v62 = v161;
    uint64_t v63 = v24;
    uint64_t v64 = v160;
    (*(void (**)(char *, uint64_t, uint64_t))(v161 + 16))(v160, v61, v6);
    uint64_t v65 = UUID.crl_data()();
    uint64_t v66 = v6;
    unint64_t v68 = v67;
    sub_10079DCE4(v65, v67, 1);
    uint64_t v69 = v62;
    sub_100510084(v65, v68);
    uint64_t v70 = *(void (**)(char *, uint64_t))(v62 + 8);
    uint64_t v71 = v64;
    uint64_t v72 = v63;
    v70(v71, v66);
    uint64_t v73 = v63 + OBJC_IVAR____TtC8Freeform23CRLBoardItemDatabaseRow_parentContainerUUID;
    swift_beginAccess();
    uint64_t v74 = v73;
    uint64_t v75 = v162;
    sub_100522E9C(v74, v162, (uint64_t *)&unk_101674520);
    int v76 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v69 + 48))(v75, 1, v66);
    uint64_t v165 = v59;
    if (v76 == 1)
    {
      sub_100522F00(v75, (uint64_t *)&unk_101674520);
      int64_t v77 = *(void **)(*(void *)(v59 + 16) + 32);
      uint64_t v78 = v167;
      *uint64_t v167 = v77;
      uint64_t v79 = v159;
      v169(v78, v168, v159);
      id v80 = v77;
      LOBYTE(v77) = _dispatchPreconditionTest(_:)();
      v164(v78, v79);
      if ((v77 & 1) == 0)
      {
LABEL_46:
        __break(1u);
        goto LABEL_47;
      }
      swift_beginAccess();
      sqlite3_bind_null(*(sqlite3_stmt **)(v59 + 24), 2);
    }
    else
    {
      uint64_t v81 = *(void (**)(char *, uint64_t, uint64_t))(v69 + 32);
      uint64_t v161 = v63;
      uint64_t v82 = v158;
      v81(v158, v75, v66);
      uint64_t v83 = UUID.crl_data()();
      unint64_t v85 = v84;
      sub_10079DCE4(v83, v84, 2);
      sub_100510084(v83, v85);
      unint64_t v86 = v82;
      uint64_t v72 = v161;
      v70(v86, v66);
      uint64_t v79 = v159;
    }
    uint64_t v87 = v166;
    uint64_t v88 = sub_100753FC0();
    uint64_t v166 = v87;
    if (v87)
    {
      uint64_t v90 = v165;
      uint64_t v91 = *(void **)(*(void *)(v165 + 16) + 32);
      int64_t v92 = v167;
      *uint64_t v167 = v91;
      v169(v92, v168, v79);
      id v93 = v91;
      LOBYTE(v91) = _dispatchPreconditionTest(_:)();
      v164(v92, v79);
      if (v91)
      {
        int v94 = (sqlite3_stmt **)(v90 + 24);
        swift_beginAccess();
        uint64_t v95 = *(sqlite3_stmt **)(v90 + 24);
        if (!v95) {
          return swift_release();
        }
        goto LABEL_41;
      }
      goto LABEL_45;
    }
    uint64_t v96 = v88;
    uint64_t v97 = v72;
    unint64_t v98 = v89;
    sub_10079DCE4(v88, v89, 3);
    sub_100510084(v96, v98);
    uint64_t v99 = *(void *)(v97 + v157);
    if (v99 < (uint64_t)0xFFFFFFFF80000000)
    {
LABEL_47:
      __break(1u);
      goto LABEL_48;
    }
    uint64_t v100 = v164;
    if (v99 > 0x7FFFFFFF)
    {
LABEL_48:
      __break(1u);
      goto LABEL_49;
    }
    uint64_t v101 = v97;
    uint64_t v102 = v165;
    uint64_t v103 = *(void **)(*(void *)(v165 + 16) + 32);
    uint64_t v104 = v167;
    *uint64_t v167 = v103;
    uint64_t v163 = v20;
    v169(v104, v168, v79);
    id v105 = v103;
    LOBYTE(v103) = _dispatchPreconditionTest(_:)();
    v100(v104, v79);
    if ((v103 & 1) == 0)
    {
LABEL_49:
      __break(1u);
      goto LABEL_50;
    }
    int v94 = (sqlite3_stmt **)(v102 + 24);
    swift_beginAccess();
    sqlite3_bind_int(*(sqlite3_stmt **)(v102 + 24), 4, v99);
    uint64_t v106 = (uint64_t *)(v101 + OBJC_IVAR____TtC8Freeform23CRLBoardItemDatabaseRow_commonData);
    uint64_t v107 = v102;
    unint64_t v108 = *(void *)(v101 + OBJC_IVAR____TtC8Freeform23CRLBoardItemDatabaseRow_commonData + 8);
    if (v108 >> 60 == 15)
    {
      uint64_t v109 = *(void **)(*(void *)(v107 + 16) + 32);
      unsigned int v110 = v167;
      *uint64_t v167 = v109;
      v169(v110, v168, v79);
      id v111 = v109;
      LOBYTE(v109) = _dispatchPreconditionTest(_:)();
      v100(v110, v79);
      if ((v109 & 1) == 0)
      {
LABEL_51:
        __break(1u);
        goto LABEL_52;
      }
      sqlite3_bind_null(*v94, 5);
    }
    else
    {
      uint64_t v112 = *v106;
      sub_100510D4C(*v106, *(void *)(v101 + OBJC_IVAR____TtC8Freeform23CRLBoardItemDatabaseRow_commonData + 8));
      sub_10079DCE4(v112, v108, 5);
      sub_100514260(v112, v108);
    }
    uint64_t v113 = (uint64_t *)(v101 + OBJC_IVAR____TtC8Freeform23CRLBoardItemDatabaseRow_specificData);
    unint64_t v114 = *(void *)(v101 + OBJC_IVAR____TtC8Freeform23CRLBoardItemDatabaseRow_specificData + 8);
    if (v114 >> 60 == 15)
    {
      uint64_t v115 = v165;
      char v116 = *(void **)(*(void *)(v165 + 16) + 32);
      uint64_t v117 = v167;
      *uint64_t v167 = v116;
      v169(v117, v168, v79);
      id v118 = v116;
      LOBYTE(v116) = _dispatchPreconditionTest(_:)();
      v100(v117, v79);
      if ((v116 & 1) == 0)
      {
LABEL_52:
        __break(1u);
        goto LABEL_53;
      }
      sqlite3_bind_null(*v94, 6);
    }
    else
    {
      uint64_t v119 = *v113;
      sub_100510D4C(*v113, *(void *)(v101 + OBJC_IVAR____TtC8Freeform23CRLBoardItemDatabaseRow_specificData + 8));
      uint64_t v115 = v165;
      sub_10079DCE4(v119, v114, 6);
      sub_100514260(v119, v114);
    }
    sub_10079D6E8(*(unsigned __int8 *)(v101 + OBJC_IVAR____TtC8Freeform23CRLBoardItemDatabaseRow_isLocalTombstone), 7);
    sub_10079D8A8(*(void *)(v101 + OBJC_IVAR____TtC8Freeform23CRLBoardItemDatabaseRow_unsyncedChanges), 8);
    uint64_t v120 = (uint64_t *)(v101 + OBJC_IVAR____TtC8Freeform23CRLBoardItemDatabaseRow_syncData);
    unint64_t v121 = *(void *)(v101 + OBJC_IVAR____TtC8Freeform23CRLBoardItemDatabaseRow_syncData + 8);
    if (v121 >> 60 == 15)
    {
      uint64_t v122 = *(void **)(*(void *)(v115 + 16) + 32);
      uint64_t v123 = v167;
      *uint64_t v167 = v122;
      v169(v123, v168, v79);
      id v124 = v122;
      LOBYTE(v122) = _dispatchPreconditionTest(_:)();
      v100(v123, v79);
      if ((v122 & 1) == 0)
      {
LABEL_53:
        __break(1u);
        goto LABEL_54;
      }
      sqlite3_bind_null(*v94, 9);
    }
    else
    {
      uint64_t v125 = *v120;
      sub_100510D4C(*v120, *(void *)(v101 + OBJC_IVAR____TtC8Freeform23CRLBoardItemDatabaseRow_syncData + 8));
      sub_10079DCE4(v125, v121, 9);
      sub_100514260(v125, v121);
    }
    uint64_t v126 = v101 + OBJC_IVAR____TtC8Freeform23CRLBoardItemDatabaseRow_minRequiredVersions;
    sub_10079D8A8(*(void *)(v101 + OBJC_IVAR____TtC8Freeform23CRLBoardItemDatabaseRow_minRequiredVersions), 10);
    sub_10079D8A8(*(void *)(v101 + OBJC_IVAR____TtC8Freeform23CRLBoardItemDatabaseRow_objectOptions), 11);
    sub_10079D8A8(*(void *)(v126 + 8), 12);
    sub_10079D8A8(*(void *)(v126 + 16), 13);
    uint64_t v127 = *(void **)(*(void *)(v115 + 16) + 32);
    char v128 = v167;
    *uint64_t v167 = v127;
    v169(v128, v168, v79);
    id v129 = v127;
    LOBYTE(v127) = _dispatchPreconditionTest(_:)();
    v100(v128, v79);
    if ((v127 & 1) == 0)
    {
LABEL_50:
      __break(1u);
      goto LABEL_51;
    }
    int v130 = sqlite3_step(*v94);
    if (v130 != 101)
    {
      int v134 = v130;
      unint64_t v172 = 0xD00000000000001BLL;
      unint64_t v173 = 0x800000010127D3E0;
      if (sqlite3_errstr(v130))
      {
        v135._uint64_t countAndFlagsBits = String.init(cString:)();
        v174._uint64_t countAndFlagsBits = 8250;
        v174._object = (void *)0xE200000000000000;
        String.append(_:)(v135);
        swift_bridgeObjectRelease();
        String.append(_:)(v174);
        swift_bridgeObjectRelease();
        uint64_t v136 = v156;
        uint64_t v137 = *(void **)(v156 + 32);
        char v138 = v167;
        *uint64_t v167 = v137;
        v169(v138, v168, v79);
        id v139 = v137;
        LOBYTE(v137) = _dispatchPreconditionTest(_:)();
        v164(v138, v79);
        if ((v137 & 1) == 0) {
          goto LABEL_56;
        }
        swift_beginAccess();
        int v140 = sqlite3_extended_errcode(*(sqlite3 **)(v136 + 16));
        if (sqlite3_errstr(v140))
        {
          v171._uint64_t countAndFlagsBits = 11552;
          v171._object = (void *)0xE200000000000000;
          int v170 = v140;
          v141._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
          String.append(_:)(v141);
          swift_bridgeObjectRelease();
          v142._uint64_t countAndFlagsBits = 8237;
          v142._object = (void *)0xE200000000000000;
          String.append(_:)(v142);
          uint64_t countAndFlagsBits = v171._countAndFlagsBits;
          object = v171._object;
          uint64_t v145 = String.init(cString:)();
          unsigned int v147 = v146;
          v171._uint64_t countAndFlagsBits = countAndFlagsBits;
          v171._object = object;
          swift_bridgeObjectRetain();
          v148._uint64_t countAndFlagsBits = v145;
          v148._object = v147;
          String.append(_:)(v148);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          String.append(_:)(v171);
          swift_bridgeObjectRelease();
        }
      }
      unint64_t v149 = v172;
      unint64_t v150 = v173;
      sub_10079FF00();
      swift_allocError();
      *(_DWORD *)uint64_t v151 = v134;
      *(void *)(v151 + 8) = v149;
      *(void *)(v151 + 16) = v150;
      swift_willThrow();
      unsigned __int8 v152 = *(void **)(*(void *)(v165 + 16) + 32);
      uint64_t v153 = v167;
      *uint64_t v167 = v152;
      v169(v153, v168, v79);
      id v154 = v152;
      LOBYTE(v152) = _dispatchPreconditionTest(_:)();
      v164(v153, v79);
      if (v152)
      {
        uint64_t v95 = *v94;
        if (!*v94) {
          return swift_release();
        }
LABEL_41:
        sqlite3_finalize(v95);
        *int v94 = 0;
        return swift_release();
      }
LABEL_55:
      __break(1u);
LABEL_56:
      __break(1u);
    }
    unint64_t v131 = *(void **)(*(void *)(v165 + 16) + 32);
    uint64_t v132 = v167;
    *uint64_t v167 = v131;
    v169(v132, v168, v79);
    id v133 = v131;
    LOBYTE(v131) = _dispatchPreconditionTest(_:)();
    v100(v132, v79);
    if ((v131 & 1) == 0)
    {
LABEL_54:
      __break(1u);
      goto LABEL_55;
    }
    if (*v94)
    {
      sqlite3_finalize(*v94);
      *int v94 = 0;
    }
    return swift_release();
  }
  return result;
}

uint64_t sub_100C5B784(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v7 = type metadata accessor for DispatchPredicate();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7, v9);
  uint64_t v11 = &v18[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v12 = *(void **)(v3 + OBJC_IVAR____TtC8Freeform17CRLBoardDataStore_queue);
  *uint64_t v11 = v12;
  (*(void (**)(void *, void, uint64_t))(v8 + 104))(v11, enum case for DispatchPredicate.onQueue(_:), v7);
  id v13 = v12;
  LOBYTE(v12) = _dispatchPreconditionTest(_:)();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v8 + 8))(v11, v7);
  if (v12)
  {
    uint64_t v19 = &_swiftEmptyDictionarySingleton;
    uint64_t v20 = &_swiftEmptyDictionarySingleton;
    __chkstk_darwin(result, v15);
    *(void *)&v18[-32] = a1;
    *(void *)&v18[-24] = &v20;
    v18[-16] = a3 & 1;
    *(void *)&v18[-8] = &v19;
    uint64_t v16 = sub_100D3EE0C(a2, (void (*)(uint64_t, uint64_t, uint64_t))sub_100CE61C8);
    __chkstk_darwin(v16, v17);
    *(void *)&v18[-16] = a2;
    *(void *)&v18[-8] = &v19;
    sub_100D3EE0C(a1, (void (*)(uint64_t, uint64_t, uint64_t))sub_100CE61D8);
    return (uint64_t)v20;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100C5B964(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7)
{
  uint64_t v99 = a7;
  int v98 = a6;
  uint64_t v103 = a5;
  uint64_t v108 = a3;
  uint64_t v100 = sub_1005057FC((uint64_t *)&unk_10168A0C0);
  __chkstk_darwin(v100, v10);
  uint64_t v102 = (uint64_t)v88 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for UUID();
  uint64_t v109 = *(void *)(v12 - 8);
  uint64_t v14 = __chkstk_darwin(v12, v13);
  uint64_t v16 = (char *)v88 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __chkstk_darwin(v14, v17);
  uint64_t v97 = (char *)v88 - v19;
  uint64_t v21 = __chkstk_darwin(v18, v20);
  uint64_t v96 = (char *)v88 - v22;
  __chkstk_darwin(v21, v23);
  uint64_t v104 = (char *)v88 - v24;
  uint64_t v25 = sub_1005057FC(&qword_101699720);
  __chkstk_darwin(v25 - 8, v26);
  Swift::String v28 = (char *)v88 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = sub_1005057FC((uint64_t *)&unk_101674520);
  uint64_t v30 = *(void *)(v29 - 8);
  uint64_t v32 = __chkstk_darwin(v29, v31);
  Swift::String v34 = (char *)v88 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = __chkstk_darwin(v32, v35);
  uint64_t v38 = __chkstk_darwin(v36, v37);
  uint64_t v105 = (uint64_t)v88 - v39;
  uint64_t v41 = __chkstk_darwin(v38, v40);
  uint64_t v43 = __chkstk_darwin(v41, v42);
  uint64_t v45 = __chkstk_darwin(v43, v44);
  Swift::String v47 = (char *)v88 - v46;
  __chkstk_darwin(v45, v48);
  uint64_t v53 = *(void *)(a4 + 16);
  uint64_t v106 = a1;
  uint64_t v107 = a2;
  if (!v53)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v30 + 56))(v28, 1, 1, v29);
LABEL_7:
    sub_100522F00((uint64_t)v28, &qword_101699720);
    uint64_t v56 = v109;
    goto LABEL_15;
  }
  uint64_t v94 = v50;
  uint64_t v95 = v52;
  uint64_t v93 = v51;
  uint64_t v101 = (uint64_t)v88 - v49;
  swift_bridgeObjectRetain();
  unint64_t v54 = sub_100955F50(a1, a2);
  if (v55)
  {
    sub_100522E9C(*(void *)(a4 + 56) + *(void *)(v30 + 72) * v54, (uint64_t)v28, (uint64_t *)&unk_101674520);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v30 + 56))(v28, 0, 1, v29);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v30 + 56))(v28, 1, 1, v29);
  }
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(v28, 1, v29) == 1) {
    goto LABEL_7;
  }
  uint64_t v57 = v101;
  sub_10051B3EC((uint64_t)v28, v101, (uint64_t *)&unk_101674520);
  sub_100522E9C(v57, (uint64_t)v47, (uint64_t *)&unk_101674520);
  uint64_t v56 = v109;
  uint64_t v58 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v109 + 48);
  if (v58(v47, 1, v12) == 1)
  {
    sub_100522F00(v57, (uint64_t *)&unk_101674520);
    uint64_t v59 = (uint64_t)v47;
LABEL_14:
    sub_100522F00(v59, (uint64_t *)&unk_101674520);
LABEL_15:
    sub_100522E9C(v108, (uint64_t)v34, (uint64_t *)&unk_101674520);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v56 + 48))(v34, 1, v12) == 1) {
      return sub_100522F00((uint64_t)v34, (uint64_t *)&unk_101674520);
    }
    (*(void (**)(char *, char *, uint64_t))(v56 + 32))(v16, v34, v12);
    if (qword_101670198 != -1) {
      swift_once();
    }
    sub_100556B74(v12, (uint64_t)qword_10171CB50);
    sub_100CDE0D8((unint64_t *)&qword_10167BDC0, (void (*)(uint64_t))&type metadata accessor for UUID);
    if ((dispatch thunk of static Equatable.== infix(_:_:)() & 1) == 0)
    {
      uint64_t v63 = v105;
      (*(void (**)(uint64_t, char *, uint64_t))(v56 + 16))(v105, v16, v12);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v56 + 56))(v63, 0, 1, v12);
      uint64_t v64 = v107;
      swift_bridgeObjectRetain();
      sub_10057EEC4(v63, v106, v64);
    }
    return (*(uint64_t (**)(char *, uint64_t))(v56 + 8))(v16, v12);
  }
  unint64_t v60 = v104;
  int64_t v92 = *(void (**)(char *, char *, uint64_t))(v56 + 32);
  v92(v104, v47, v12);
  if (qword_101670198 != -1) {
    swift_once();
  }
  uint64_t v61 = sub_100556B74(v12, (uint64_t)qword_10171CB50);
  uint64_t v91 = sub_100CDE0D8((unint64_t *)&qword_10167BDC0, (void (*)(uint64_t))&type metadata accessor for UUID);
  if (dispatch thunk of static Equatable.== infix(_:_:)())
  {
    (*(void (**)(char *, uint64_t))(v56 + 8))(v60, v12);
    uint64_t v59 = v101;
    goto LABEL_14;
  }
  v88[1] = v61;
  v88[2] = v56 + 32;
  uint64_t v65 = v95;
  uint64_t v90 = *(void (**)(uint64_t, char *, uint64_t))(v56 + 16);
  v90(v95, v60, v12);
  unint64_t v89 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v56 + 56);
  v89(v65, 0, 1, v12);
  uint64_t v66 = v102;
  uint64_t v67 = v102 + *(int *)(v100 + 48);
  sub_100522E9C(v65, v102, (uint64_t *)&unk_101674520);
  sub_100522E9C(v108, v67, (uint64_t *)&unk_101674520);
  if (v58((char *)v66, 1, v12) == 1)
  {
    sub_100522F00(v65, (uint64_t *)&unk_101674520);
    unsigned int v68 = v58((char *)v67, 1, v12);
    uint64_t v69 = v104;
    if (v68 == 1)
    {
      sub_100522F00(v102, (uint64_t *)&unk_101674520);
      uint64_t v71 = v106;
      uint64_t v70 = v107;
      goto LABEL_29;
    }
    goto LABEL_27;
  }
  uint64_t v72 = v93;
  sub_100522E9C(v66, v93, (uint64_t *)&unk_101674520);
  if (v58((char *)v67, 1, v12) == 1)
  {
    sub_100522F00(v95, (uint64_t *)&unk_101674520);
    (*(void (**)(uint64_t, uint64_t))(v56 + 8))(v72, v12);
    uint64_t v69 = v104;
LABEL_27:
    uint64_t v100 = (uint64_t)v58;
    sub_100522F00(v102, (uint64_t *)&unk_10168A0C0);
    uint64_t v71 = v106;
    uint64_t v70 = v107;
LABEL_33:
    uint64_t v80 = v105;
    v90(v105, v69, v12);
    uint64_t v81 = v89;
    v89(v80, 0, 1, v12);
    swift_bridgeObjectRetain();
    sub_10057EEC4(v80, v71, v70);
    uint64_t v82 = v94;
    sub_100522E9C(v108, v94, (uint64_t *)&unk_101674520);
    if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v100)(v82, 1, v12) == 1)
    {
      (*(void (**)(char *, uint64_t))(v109 + 8))(v69, v12);
      sub_100522F00(v101, (uint64_t *)&unk_101674520);
      return sub_100522F00(v82, (uint64_t *)&unk_101674520);
    }
    uint64_t v83 = v97;
    v92(v97, (char *)v82, v12);
    char v84 = dispatch thunk of static Equatable.== infix(_:_:)();
    uint64_t v85 = v109;
    if ((v84 & 1) == 0)
    {
      uint64_t v86 = v105;
      v90(v105, v83, v12);
      v81(v86, 0, 1, v12);
      swift_bridgeObjectRetain();
      sub_10057EEC4(v86, v71, v70);
    }
    uint64_t v87 = *(void (**)(char *, uint64_t))(v85 + 8);
    v87(v83, v12);
    v87(v104, v12);
    return sub_100522F00(v101, (uint64_t *)&unk_101674520);
  }
  uint64_t v100 = (uint64_t)v58;
  uint64_t v73 = v96;
  v92(v96, (char *)v67, v12);
  char v74 = dispatch thunk of static Equatable.== infix(_:_:)();
  uint64_t v75 = *(void (**)(char *, uint64_t))(v56 + 8);
  v75(v73, v12);
  sub_100522F00(v95, (uint64_t *)&unk_101674520);
  v75((char *)v72, v12);
  sub_100522F00(v66, (uint64_t *)&unk_101674520);
  uint64_t v71 = v106;
  uint64_t v70 = v107;
  uint64_t v69 = v104;
  if ((v74 & 1) == 0) {
    goto LABEL_33;
  }
LABEL_29:
  if ((v98 & 1) == 0)
  {
    (*(void (**)(char *, uint64_t))(v109 + 8))(v69, v12);
    return sub_100522F00(v101, (uint64_t *)&unk_101674520);
  }
  uint64_t v76 = v109;
  if (qword_10166FB70 != -1) {
    swift_once();
  }
  swift_beginAccess();
  id v77 = (id)static OS_os_log.boardStore;
  uint64_t v78 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v77, (uint64_t)&_mh_execute_header, v78, (uint64_t)"Should deleteAllExistingReferencesFirst, so we need to add the newAssetUUID back into insert if it equals oldAssetUUID", 118, 2, (uint64_t)_swiftEmptyArrayStorage);

  uint64_t v79 = v105;
  sub_100522E9C(v108, v105, (uint64_t *)&unk_101674520);
  swift_bridgeObjectRetain();
  sub_10057EEC4(v79, v71, v70);
  (*(void (**)(char *, uint64_t))(v76 + 8))(v104, v12);
  return sub_100522F00(v101, (uint64_t *)&unk_101674520);
}

uint64_t sub_100C5C56C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v30 = a5;
  uint64_t v31 = a2;
  uint64_t v32 = a4;
  uint64_t v33 = a1;
  uint64_t v6 = sub_1005057FC(&qword_101699720);
  __chkstk_darwin(v6 - 8, v7);
  uint64_t v9 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1005057FC((uint64_t *)&unk_101674520);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v13 = __chkstk_darwin(v10, v12);
  uint64_t v15 = (char *)&v30 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13, v16);
  uint64_t v18 = (char *)&v30 - v17;
  uint64_t v19 = type metadata accessor for UUID();
  uint64_t v20 = *(void *)(v19 - 8);
  __chkstk_darwin(v19, v21);
  uint64_t v23 = (char *)&v30 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100522E9C(a3, (uint64_t)v18, (uint64_t *)&unk_101674520);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19) == 1) {
    return sub_100522F00((uint64_t)v18, (uint64_t *)&unk_101674520);
  }
  (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v23, v18, v19);
  if (qword_101670198 != -1) {
    swift_once();
  }
  sub_100556B74(v19, (uint64_t)qword_10171CB50);
  sub_100CDE0D8((unint64_t *)&qword_10167BDC0, (void (*)(uint64_t))&type metadata accessor for UUID);
  if ((dispatch thunk of static Equatable.== infix(_:_:)() & 1) == 0)
  {
    uint64_t v25 = v32;
    if (*(void *)(v32 + 16))
    {
      uint64_t v26 = v31;
      swift_bridgeObjectRetain();
      unint64_t v27 = sub_100955F50(v33, v26);
      if (v28)
      {
        sub_100522E9C(*(void *)(v25 + 56) + *(void *)(v11 + 72) * v27, (uint64_t)v9, (uint64_t *)&unk_101674520);
        uint64_t v29 = 0;
      }
      else
      {
        uint64_t v29 = 1;
      }
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v9, v29, 1, v10);
      swift_bridgeObjectRelease();
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) != 1)
      {
        sub_100522F00((uint64_t)v9, &qword_101699720);
        return (*(uint64_t (**)(char *, uint64_t))(v20 + 8))(v23, v19);
      }
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v9, 1, 1, v10);
      uint64_t v26 = v31;
    }
    sub_100522F00((uint64_t)v9, &qword_101699720);
    (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v15, v23, v19);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v15, 0, 1, v19);
    swift_bridgeObjectRetain();
    sub_10057EEC4((uint64_t)v15, v33, v26);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v20 + 8))(v23, v19);
}

unint64_t sub_100C5C97C(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v69 = a1;
  uint64_t v3 = type metadata accessor for UUID();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v6 = __chkstk_darwin(v3, v5);
  uint64_t v8 = (char *)&v60 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6, v9);
  uint64_t v11 = (char *)&v60 - v10;
  uint64_t v12 = type metadata accessor for DispatchPredicate();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12, v14);
  uint64_t v16 = (uint64_t *)((char *)&v60 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v17 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform17CRLBoardDataStore_writeQueue);
  *uint64_t v16 = v17;
  uint64_t v18 = *(void (**)(void))(v13 + 104);
  unsigned int v64 = enum case for DispatchPredicate.onQueue(_:);
  uint64_t v65 = (void (*)(void *, void, uint64_t))v18;
  uint64_t v66 = v13 + 104;
  v18(v16);
  id v19 = v17;
  LOBYTE(v17) = _dispatchPreconditionTest(_:)();
  uint64_t v21 = *(void (**)(void *, uint64_t))(v13 + 8);
  uint64_t v20 = v13 + 8;
  uint64_t v67 = v21;
  unsigned int v68 = v16;
  uint64_t v22 = v16;
  uint64_t v23 = v12;
  v21(v22, v12);
  if ((v17 & 1) == 0)
  {
    __break(1u);
    goto LABEL_18;
  }
  uint64_t v24 = v72;
  unint64_t result = sub_100C96320(v69);
  uint64_t v12 = v24;
  if (v24) {
    return result;
  }
  uint64_t v63 = v2;
  unint64_t v72 = result;
  if (result >> 62)
  {
LABEL_18:
    swift_bridgeObjectRetain();
    uint64_t v26 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v26) {
      goto LABEL_5;
    }
LABEL_19:
    swift_bridgeObjectRelease();
    unint64_t v27 = _swiftEmptyArrayStorage;
    goto LABEL_20;
  }
  uint64_t v26 = *(void *)((result & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v26) {
    goto LABEL_19;
  }
LABEL_5:
  uint64_t v75 = _swiftEmptyArrayStorage;
  sub_1006BB544(0, v26 & ~(v26 >> 63), 0);
  if (v26 < 0)
  {
    __break(1u);
    __break(1u);
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  uint64_t v71 = v26;
  uint64_t v60 = v20;
  uint64_t v61 = v23;
  uint64_t v62 = v12;
  unint64_t v27 = v75;
  unint64_t v28 = v72;
  if ((v72 & 0xC000000000000001) != 0)
  {
    for (uint64_t i = 0; i != v71; ++i)
    {
      uint64_t v30 = specialized _ArrayBuffer._getElementSlowPath(_:)();
      (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v11, v30 + OBJC_IVAR____TtC8Freeform28CRLAssetReferenceDatabaseRow_assetUUID, v3);
      swift_unknownObjectRelease();
      uint64_t v75 = v27;
      unint64_t v32 = *((void *)v27 + 2);
      unint64_t v31 = *((void *)v27 + 3);
      if (v32 >= v31 >> 1)
      {
        sub_1006BB544(v31 > 1, v32 + 1, 1);
        unint64_t v27 = v75;
      }
      *((void *)v27 + 2) = v32 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))((unint64_t)v27+ ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))+ *(void *)(v4 + 72) * v32, v11, v3);
    }
  }
  else
  {
    uint64_t v33 = 0;
    uint64_t v70 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
    do
    {
      v70(v8, *(void *)(v28 + 8 * v33 + 32) + OBJC_IVAR____TtC8Freeform28CRLAssetReferenceDatabaseRow_assetUUID, v3);
      uint64_t v75 = v27;
      unint64_t v35 = *((void *)v27 + 2);
      unint64_t v34 = *((void *)v27 + 3);
      if (v35 >= v34 >> 1)
      {
        sub_1006BB544(v34 > 1, v35 + 1, 1);
        unint64_t v27 = v75;
      }
      ++v33;
      *((void *)v27 + 2) = v35 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))((unint64_t)v27+ ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))+ *(void *)(v4 + 72) * v35, v8, v3);
      unint64_t v28 = v72;
    }
    while (v71 != v33);
  }
  swift_bridgeObjectRelease();
  uint64_t v12 = v62;
  uint64_t v23 = v61;
LABEL_20:
  uint64_t v36 = sub_100CDCB64((uint64_t)v27);
  swift_bridgeObjectRelease();
  if (!*(void *)(v36 + 16)) {
    return swift_bridgeObjectRelease();
  }
  uint64_t v75 = 0;
  unint64_t v76 = 0xE000000000000000;
  _StringGuts.grow(_:)(29);
  swift_bridgeObjectRelease();
  type metadata accessor for SQLiteStatement();
  swift_initStackObject();
  uint64_t v37 = swift_retain();
  uint64_t v38 = sub_10079FC40(v37, 0xD00000000000003CLL, 0x800000010127D0A0);
  if (v12)
  {
    swift_release();
    return swift_bridgeObjectRelease();
  }
  uint64_t v39 = v38;
  swift_release();
  uint64_t v40 = sub_100511430();
  uint64_t v42 = v40;
  unint64_t v43 = v41;
  sub_10079DCE4(v40, v41, 1);
  sub_100510084(v42, v43);
  uint64_t v44 = *(void **)(*(void *)(v39 + 16) + 32);
  uint64_t v45 = v68;
  void *v68 = v44;
  v65(v45, v64, v23);
  id v46 = v44;
  LOBYTE(v44) = _dispatchPreconditionTest(_:)();
  v67(v45, v23);
  if ((v44 & 1) == 0) {
    goto LABEL_37;
  }
  Swift::String v47 = (sqlite3_stmt **)(v39 + 24);
  swift_beginAccess();
  int v48 = sqlite3_step(*(sqlite3_stmt **)(v39 + 24));
  if (v48 == 101)
  {
    sub_100C95724(v36);
    goto LABEL_33;
  }
  int v49 = v48;
  swift_bridgeObjectRelease();
  uint64_t v73 = 0;
  unint64_t v74 = 0xE000000000000000;
  _StringGuts.grow(_:)(53);
  v50._object = (void *)0x800000010127D0E0;
  v50._uint64_t countAndFlagsBits = 0xD000000000000033;
  String.append(_:)(v50);
  type metadata accessor for CRLAssetReferrerIdentifier(0);
  _print_unlocked<A, B>(_:_:)();
  uint64_t v51 = v73;
  unint64_t v52 = v74;
  sub_10079FF00();
  swift_allocError();
  *(_DWORD *)uint64_t v53 = v49;
  *(void *)(v53 + 8) = v51;
  *(void *)(v53 + 16) = v52;
  swift_willThrow();
  unint64_t v54 = *(void **)(*(void *)(v39 + 16) + 32);
  char v55 = v68;
  void *v68 = v54;
  v65(v55, v64, v23);
  id v56 = v54;
  LOBYTE(v54) = _dispatchPreconditionTest(_:)();
  v67(v55, v23);
  if ((v54 & 1) == 0)
  {
    __break(1u);
LABEL_33:
    swift_bridgeObjectRelease();
    uint64_t v57 = *(void **)(*(void *)(v39 + 16) + 32);
    uint64_t v58 = v68;
    void *v68 = v57;
    v65(v58, v64, v23);
    id v59 = v57;
    LOBYTE(v57) = _dispatchPreconditionTest(_:)();
    v67(v58, v23);
    if (v57) {
      goto LABEL_34;
    }
LABEL_38:
    __break(1u);
  }
LABEL_34:
  if (*v47)
  {
    sqlite3_finalize(*v47);
    *(void *)(v39 + 24) = 0;
  }
  return swift_release();
}

void *sub_100C5D1DC(sqlite3_stmt **a1, uint64_t a2)
{
  uint64_t v4 = v3;
  uint64_t v70 = a1;
  uint64_t v69 = type metadata accessor for String.Encoding();
  uint64_t v67 = *(void (***)(char *, uint64_t))(v69 - 8);
  __chkstk_darwin(v69, v6);
  uint64_t v8 = (char *)&v60 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for DispatchPredicate();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9, v11);
  uint64_t v13 = (uint64_t *)((char *)&v60 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v73 = v2;
  uint64_t v14 = *(void **)(v2 + OBJC_IVAR____TtC8Freeform17CRLBoardDataStore_writeQueue);
  *uint64_t v13 = v14;
  uint64_t v15 = *(void (**)(void))(v10 + 104);
  unsigned int v71 = enum case for DispatchPredicate.onQueue(_:);
  unint64_t v72 = (void (*)(void *, void, uint64_t))v15;
  v15(v13);
  id v16 = v14;
  char v17 = _dispatchPreconditionTest(_:)();
  uint64_t v18 = *(void (**)(void *, uint64_t))(v10 + 8);
  unint64_t result = (void *)((uint64_t (*)(void *, uint64_t))v18)(v13, v9);
  if ((v17 & 1) == 0)
  {
    __break(1u);
LABEL_29:
    __break(1u);
LABEL_30:
    __break(1u);
    __break(1u);
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  if (!*(void *)(a2 + 16)) {
    return result;
  }
  uint64_t v68 = *(void *)(a2 + 16);
  unint64_t result = sub_100C94820(v70, a2);
  if (v3) {
    return result;
  }
  if (!result[2]) {
    return (void *)swift_bridgeObjectRelease();
  }
  uint64_t v61 = (uint64_t)result;
  uint64_t v64 = v10 + 104;
  uint64_t v65 = v18;
  uint64_t v66 = v9;
  unint64_t v78 = 0;
  unint64_t v79 = 0xE000000000000000;
  _StringGuts.grow(_:)(44);
  swift_bridgeObjectRelease();
  unint64_t v78 = 0xD000000000000058;
  unint64_t v79 = 0x800000010127CD50;
  unint64_t v76 = sub_100C37E4C(63, 0xE100000000000000, v68);
  sub_1005057FC((uint64_t *)&unk_1016773F0);
  sub_100523288((unint64_t *)&qword_101672620, (uint64_t *)&unk_1016773F0);
  uint64_t v20 = BidirectionalCollection<>.joined(separator:)();
  uint64_t v22 = v21;
  swift_bridgeObjectRelease();
  v23._uint64_t countAndFlagsBits = v20;
  v23._object = v22;
  String.append(_:)(v23);
  swift_bridgeObjectRelease();
  v24._uint64_t countAndFlagsBits = 10537;
  v24._object = (void *)0xE200000000000000;
  String.append(_:)(v24);
  uint64_t v25 = v78;
  uint64_t v26 = v79;
  type metadata accessor for SQLiteStatement();
  swift_initStackObject();
  uint64_t v27 = swift_retain();
  uint64_t v28 = sub_10079FC40(v27, v25, v26);
  swift_release();
  uint64_t v29 = sub_100511430();
  unint64_t v31 = v30;
  uint64_t v60 = 0;
  sub_10079DCE4(v29, v30, 1);
  sub_100510084(v29, v31);
  uint64_t v63 = v28;
  uint64_t v62 = (sqlite3_stmt **)(v28 + 24);
  swift_beginAccess();
  ++v67;
  unint64_t v32 = (uint64_t *)(a2 + 40);
  do
  {
    uint64_t v33 = (double *)*(v32 - 1);
    uint64_t v34 = *v32;
    unint64_t v35 = *(void **)(*(void *)(v63 + 16) + 32);
    *uint64_t v13 = v35;
    uint64_t v36 = v66;
    v72(v13, v71, v66);
    swift_bridgeObjectRetain();
    id v37 = v35;
    LOBYTE(v35) = _dispatchPreconditionTest(_:)();
    v65(v13, v36);
    if ((v35 & 1) == 0) {
      goto LABEL_29;
    }
    unint64_t v76 = v33;
    uint64_t v77 = v34;
    static String.Encoding.utf8.getter();
    sub_10052E310();
    uint64_t v38 = StringProtocol.cString(using:)();
    (*v67)(v8, v69);
    if (v4 == 2147483646) {
      goto LABEL_30;
    }
    uint64_t v39 = *v62;
    if (qword_10166F130 != -1) {
      swift_once();
    }
    uint64_t v40 = v4 + 1;
    v32 += 2;
    if (v38) {
      unint64_t v41 = (const char *)(v38 + 32);
    }
    else {
      unint64_t v41 = 0;
    }
    sqlite3_bind_text(v39, v4 + 2, v41, -1, (void (__cdecl *)(void *))qword_10171A940);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    ++v4;
  }
  while (v68 != v40);
  uint64_t v42 = *(void **)(*(void *)(v63 + 16) + 32);
  *uint64_t v13 = v42;
  uint64_t v43 = v66;
  v72(v13, v71, v66);
  id v44 = v42;
  LOBYTE(v42) = _dispatchPreconditionTest(_:)();
  uint64_t v45 = (uint64_t (*)(void *, uint64_t))v65;
  v65(v13, v43);
  if ((v42 & 1) == 0) {
    goto LABEL_31;
  }
  id v46 = v62;
  swift_beginAccess();
  int v47 = sqlite3_step(*v46);
  uint64_t v48 = v60;
  if (v47 != 101) {
    goto LABEL_21;
  }
  sub_100C95724(v61);
  if (!v48) {
    goto LABEL_23;
  }
  swift_bridgeObjectRelease();
  int v49 = *(void **)(*(void *)(v63 + 16) + 32);
  *uint64_t v13 = v49;
  v72(v13, v71, v43);
  id v50 = v49;
  LOBYTE(v49) = _dispatchPreconditionTest(_:)();
  int v47 = v45(v13, v43);
  if ((v49 & 1) == 0)
  {
    __break(1u);
LABEL_21:
    int v51 = v47;
    swift_bridgeObjectRelease();
    uint64_t v74 = 0;
    unint64_t v75 = 0xE000000000000000;
    _StringGuts.grow(_:)(43);
    v52._object = (void *)0x800000010127CDB0;
    v52._uint64_t countAndFlagsBits = 0xD000000000000029;
    String.append(_:)(v52);
    type metadata accessor for CRLAssetReferrerIdentifier(0);
    _print_unlocked<A, B>(_:_:)();
    uint64_t v53 = v74;
    unint64_t v54 = v75;
    sub_10079FF00();
    swift_allocError();
    *(_DWORD *)uint64_t v55 = v51;
    *(void *)(v55 + 8) = v53;
    *(void *)(v55 + 16) = v54;
    swift_willThrow();
    id v56 = *(void **)(*(void *)(v63 + 16) + 32);
    *uint64_t v13 = v56;
    v72(v13, v71, v43);
    id v57 = v56;
    LOBYTE(v56) = _dispatchPreconditionTest(_:)();
    v45(v13, v43);
    if ((v56 & 1) == 0)
    {
      __break(1u);
LABEL_23:
      swift_bridgeObjectRelease();
      uint64_t v58 = *(void **)(*(void *)(v63 + 16) + 32);
      *uint64_t v13 = v58;
      v72(v13, v71, v43);
      id v59 = v58;
      LOBYTE(v58) = _dispatchPreconditionTest(_:)();
      v45(v13, v43);
      if (v58) {
        goto LABEL_24;
      }
LABEL_32:
      __break(1u);
    }
  }
LABEL_24:
  if (*v62)
  {
    sqlite3_finalize(*v62);
    *(void *)(v63 + 24) = 0;
  }
  return (void *)swift_release();
}

uint64_t sub_100C5DA80(uint64_t a1, uint64_t a2, sqlite3_int64 a3)
{
  sqlite3_int64 v200 = a3;
  uint64_t v220 = a2;
  uint64_t v219 = type metadata accessor for UUID();
  uint64_t v199 = *(void *)(v219 - 8);
  __chkstk_darwin(v219, v5);
  uint64_t v194 = (uint64_t)&v190 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1005057FC((uint64_t *)&unk_101674520);
  __chkstk_darwin(v7 - 8, v8);
  unint64_t v195 = (char *)&v190 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v206 = sub_1005057FC(&qword_10169A750);
  uint64_t v11 = __chkstk_darwin(v206, v10);
  CGFloat v205 = (uint64_t *)((char *)&v190 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v11, v13);
  uint64_t v218 = (uint64_t *)((char *)&v190 - v14);
  uint64_t v15 = sub_1005057FC(&qword_101699708);
  uint64_t v17 = __chkstk_darwin(v15 - 8, v16);
  uint64_t v208 = (uint64_t *)((char *)&v190 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v17, v19);
  CGFloat v207 = (uint64_t *)((char *)&v190 - v20);
  uint64_t v21 = type metadata accessor for CRLAssetReferrerIdentifier(0);
  uint64_t v23 = __chkstk_darwin(v21, v22);
  uint64_t v201 = (uint64_t)&v190 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23, v25);
  uint64_t v27 = (char *)&v190 - v26;
  uint64_t v28 = sub_1005057FC(&qword_101672C30);
  uint64_t v30 = __chkstk_darwin(v28 - 8, v29);
  uint64_t v202 = (uint64_t)&v190 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v30, v32);
  uint64_t v34 = (char *)&v190 - v33;
  uint64_t v35 = type metadata accessor for DispatchPredicate();
  uint64_t v36 = *(void *)(v35 - 8);
  __chkstk_darwin(v35, v37);
  uint64_t v39 = (uint64_t *)((char *)&v190 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v209 = v3;
  uint64_t v40 = *(void **)&v3[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore_writeQueue];
  *uint64_t v39 = v40;
  unint64_t v41 = *(void (**)(void))(v36 + 104);
  unsigned int v212 = enum case for DispatchPredicate.onQueue(_:);
  uint64_t v214 = v36 + 104;
  uint64_t v213 = (void (*)(void *, void, uint64_t))v41;
  v41(v39);
  id v42 = v40;
  LOBYTE(v4sub_100C38440(1, 0) = _dispatchPreconditionTest(_:)();
  uint64_t v43 = *(void (**)(void, void))(v36 + 8);
  uint64_t v215 = v39;
  uint64_t v216 = v35;
  uint64_t v217 = v36 + 8;
  uint64_t v44 = v35;
  uint64_t v45 = (void (*)(void *, uint64_t))v43;
  v43(v39, v44);
  if ((v40 & 1) == 0) {
    goto LABEL_82;
  }
  uint64_t v211 = a1;
  sub_100CE144C(a1, (uint64_t)v27, type metadata accessor for CRLAssetReferrerIdentifier);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v46 = sub_1005057FC(&qword_101674240);
    sub_100CE12D8((uint64_t)&v27[*(int *)(v46 + 48)], (uint64_t)v34, type metadata accessor for CRLBoardIdentifier);
    uint64_t v47 = type metadata accessor for CRLBoardIdentifier(0);
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v47 - 8) + 56))(v34, 0, 1, v47);
    (*(void (**)(char *, uint64_t))(v199 + 8))(v27, v219);
  }
  else
  {
    sub_100CE12D8((uint64_t)v27, (uint64_t)v34, type metadata accessor for CRLBoardIdentifier);
    uint64_t v48 = type metadata accessor for CRLBoardIdentifier(0);
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v48 - 8) + 56))(v34, 0, 1, v48);
  }
  uint64_t v49 = *(void *)(v220 + 16);
  if (!v49) {
    return sub_100522F00((uint64_t)v34, &qword_101672C30);
  }
  id v193 = v42;
  CGFloat v210 = v34;
  uint64_t v50 = swift_bridgeObjectRetain();
  uint64_t v51 = sub_100C32284(v50);
  Swift::String v52 = v204;
  uint64_t v53 = sub_100C92F40(v51);
  if (v52)
  {
    sub_100522F00((uint64_t)v210, &qword_101672C30);
    return swift_bridgeObjectRelease();
  }
  if (v53[2] <= *(void *)(v51 + 16) >> 3)
  {
    uint64_t v222 = (void *)v51;
    sub_1010295C8((uint64_t)v53);
    swift_bridgeObjectRelease();
    uint64_t v191 = v222;
  }
  else
  {
    uint64_t v191 = sub_10102AA0C((uint64_t)v53, v51);
    swift_bridgeObjectRelease();
  }
  uint64_t v203 = v45;
  uint64_t v55 = 0;
  v221._uint64_t countAndFlagsBits = 0;
  v221._object = (void *)0xE000000000000000;
  do
  {
    v56._uint64_t countAndFlagsBits = 0xD000000000000012;
    v56._object = (void *)0x800000010127CB70;
    String.append(_:)(v56);
    if (v55 < v49 - 1)
    {
      v57._uint64_t countAndFlagsBits = 8236;
      v57._object = (void *)0xE200000000000000;
      String.append(_:)(v57);
    }
    ++v55;
  }
  while (v49 != v55);
  uint64_t v196 = v21;
  uint64_t v222 = 0;
  unint64_t v223 = 0xE000000000000000;
  _StringGuts.grow(_:)(101);
  v58._uint64_t countAndFlagsBits = 0x4920545245534E49;
  v58._object = (void *)0xEC000000204F544ELL;
  String.append(_:)(v58);
  v59._object = (void *)0x800000010127C660;
  v59._uint64_t countAndFlagsBits = 0xD000000000000010;
  String.append(_:)(v59);
  v60._uint64_t countAndFlagsBits = 10272;
  v60._object = (void *)0xE200000000000000;
  String.append(_:)(v60);
  v61._uint64_t countAndFlagsBits = 0xD000000000000013;
  v61._object = (void *)0x800000010127CB90;
  String.append(_:)(v61);
  v62._uint64_t countAndFlagsBits = 8236;
  v62._object = (void *)0xE200000000000000;
  String.append(_:)(v62);
  v63._object = (void *)0x8000000101262BA0;
  v63._uint64_t countAndFlagsBits = 0xD000000000000010;
  String.append(_:)(v63);
  v64._uint64_t countAndFlagsBits = 8236;
  v64._object = (void *)0xE200000000000000;
  String.append(_:)(v64);
  v65._uint64_t countAndFlagsBits = 0x7265727265666572;
  v65._object = (void *)0xED0000657079745FLL;
  String.append(_:)(v65);
  v66._uint64_t countAndFlagsBits = 8236;
  v66._object = (void *)0xE200000000000000;
  String.append(_:)(v66);
  v67._uint64_t countAndFlagsBits = 0xD000000000000013;
  v67._object = (void *)0x800000010127CBB0;
  String.append(_:)(v67);
  v68._uint64_t countAndFlagsBits = 8236;
  v68._object = (void *)0xE200000000000000;
  String.append(_:)(v68);
  v69._uint64_t countAndFlagsBits = 0x75755F7465737361;
  v69._object = (void *)0xEA00000000006469;
  String.append(_:)(v69);
  v70._uint64_t countAndFlagsBits = 8236;
  v70._object = (void *)0xE200000000000000;
  String.append(_:)(v70);
  v71._object = (void *)0x800000010127B8B0;
  v71._uint64_t countAndFlagsBits = 0xD000000000000010;
  String.append(_:)(v71);
  v72._uint64_t countAndFlagsBits = 0x5345554C41562029;
  v72._object = (void *)0xE900000000000020;
  String.append(_:)(v72);
  String.append(_:)(v221);
  swift_bridgeObjectRelease();
  v73._uint64_t countAndFlagsBits = 0x464E4F43204E4F20;
  v73._object = (void *)0xEE0028205443494CLL;
  String.append(_:)(v73);
  v74._uint64_t countAndFlagsBits = 0xD000000000000013;
  v74._object = (void *)0x800000010127CB90;
  String.append(_:)(v74);
  v75._uint64_t countAndFlagsBits = 8236;
  v75._object = (void *)0xE200000000000000;
  String.append(_:)(v75);
  v76._uint64_t countAndFlagsBits = 0xD000000000000013;
  v76._object = (void *)0x800000010127CBB0;
  String.append(_:)(v76);
  v77._object = (void *)0x800000010127CBD0;
  v77._uint64_t countAndFlagsBits = 0xD000000000000010;
  String.append(_:)(v77);
  v78._uint64_t countAndFlagsBits = 0x75755F7465737361;
  v78._object = (void *)0xEA00000000006469;
  String.append(_:)(v78);
  v79._uint64_t countAndFlagsBits = 0x756C637865203D20;
  v79._object = (void *)0xEC0000002E646564;
  String.append(_:)(v79);
  v80._uint64_t countAndFlagsBits = 0x75755F7465737361;
  v80._object = (void *)0xEA00000000006469;
  String.append(_:)(v80);
  uint64_t v81 = (uint64_t)v222;
  uint64_t v82 = v223;
  type metadata accessor for SQLiteStatement();
  swift_initStackObject();
  uint64_t v83 = swift_retain();
  uint64_t v84 = sub_10079FC40(v83, v81, v82);
  swift_release();
  uint64_t v85 = -1 << *(unsigned char *)(v220 + 32);
  uint64_t v86 = ~v85;
  uint64_t v87 = *(void *)(v220 + 64);
  uint64_t v88 = -v85;
  uint64_t v222 = (void *)v220;
  unint64_t v223 = v220 + 64;
  if (v88 < 64) {
    uint64_t v89 = ~(-1 << v88);
  }
  else {
    uint64_t v89 = -1;
  }
  uint64_t v224 = v86;
  uint64_t v225 = 0;
  uint64_t v226 = v89 & v87;
  uint64_t v227 = 0;
  swift_bridgeObjectRetain();
  CGFloat v198 = (sqlite3_stmt **)(v84 + 24);
  swift_beginAccess();
  CGFloat v197 = (void (**)(char *, char *, uint64_t))(v199 + 32);
  uint64_t v192 = (void (**)(uint64_t, uint64_t))(v199 + 8);
  uint64_t v220 = v84;
  while (1)
  {
    uint64_t v90 = v208;
    sub_100C32A14(v208);
    uint64_t v91 = v207;
    sub_10051B3EC((uint64_t)v90, (uint64_t)v207, &qword_101699708);
    uint64_t v92 = sub_1005057FC(&qword_101699710);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v92 - 8) + 48))(v91, 1, v92) == 1) {
      break;
    }
    uint64_t v93 = *v91;
    uint64_t v94 = (uint64_t *)((char *)v91 + *(int *)(v92 + 48));
    uint64_t v96 = *v94;
    uint64_t v95 = v94[1];
    uint64_t v97 = v206;
    uint64_t v98 = *(int *)(v206 + 48);
    uint64_t v99 = (char *)v94 + v98;
    uint64_t v100 = v205;
    uint64_t v101 = (char *)v205 + v98;
    *CGFloat v205 = v96;
    v100[1] = v95;
    uint64_t v102 = *v197;
    uint64_t v103 = v219;
    (*v197)(v101, v99, v219);
    uint64_t v104 = *(int *)(v97 + 48);
    uint64_t v105 = v218;
    uint64_t v106 = (char *)v218 + v104;
    *uint64_t v218 = v96;
    v105[1] = v95;
    v102((char *)v105 + v104, v101, v103);
    uint64_t v107 = 6 * v93;
    if ((unsigned __int128)(v93 * (__int128)6) >> 64 != (6 * v93) >> 63)
    {
      __break(1u);
LABEL_82:
      __break(1u);
LABEL_83:
      __break(1u);
LABEL_84:
      __break(1u);
LABEL_85:
      __break(1u);
LABEL_86:
      __break(1u);
LABEL_87:
      __break(1u);
LABEL_88:
      __break(1u);
LABEL_89:
      __break(1u);
LABEL_90:
      __break(1u);
LABEL_91:
      __break(1u);
LABEL_92:
      __break(1u);
LABEL_93:
      __break(1u);
LABEL_94:
      __break(1u);
LABEL_95:
      __break(1u);
LABEL_96:
      __break(1u);
LABEL_97:
      __break(1u);
      __break(1u);
      goto LABEL_98;
    }
    uint64_t v204 = v106;
    swift_bridgeObjectRetain();
    uint64_t v108 = v211;
    uint64_t v109 = sub_100511430();
    unint64_t v111 = v110;
    sub_10079DCE4(v109, v110, v107 | 1);
    sub_100510084(v109, v111);
    uint64_t v112 = v202;
    sub_100522E9C((uint64_t)v210, v202, &qword_101672C30);
    uint64_t v113 = type metadata accessor for CRLBoardIdentifier(0);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v113 - 8) + 48))(v112, 1, v113) == 1)
    {
      sub_100522F00(v112, &qword_101672C30);
      uint64_t v114 = v107 + 2;
      if (__OFADD__(v107, 2)) {
        goto LABEL_90;
      }
      uint64_t v115 = *(void **)(*(void *)(v220 + 16) + 32);
      char v116 = v215;
      *uint64_t v215 = v115;
      uint64_t v117 = v216;
      v213(v116, v212, v216);
      id v118 = v115;
      LOBYTE(v115) = _dispatchPreconditionTest(_:)();
      v203(v116, v117);
      if ((v115 & 1) == 0) {
        goto LABEL_91;
      }
      uint64_t v108 = v211;
      if (v114 < (uint64_t)0xFFFFFFFF80000000) {
        goto LABEL_92;
      }
      if (v114 > 0x7FFFFFFF) {
        goto LABEL_93;
      }
      sqlite3_bind_null(*v198, v107 + 2);
    }
    else
    {
      uint64_t v119 = sub_100753FC0();
      unint64_t v121 = v120;
      sub_100CE14B4(v112, type metadata accessor for CRLBoardIdentifier);
      if (__OFADD__(v107, 2)) {
        goto LABEL_94;
      }
      sub_100510D4C(v119, v121);
      sub_10079DCE4(v119, v121, v107 + 2);
      sub_100510084(v119, v121);
      sub_100510084(v119, v121);
    }
    uint64_t v122 = v201;
    sub_100CE144C(v108, v201, type metadata accessor for CRLAssetReferrerIdentifier);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v124 = v219;
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v125 = sub_1005057FC(&qword_101674240);
      sub_100CE14B4(v122 + *(int *)(v125 + 48), type metadata accessor for CRLBoardIdentifier);
      (*v192)(v122, v124);
      int v126 = 1;
    }
    else
    {
      sub_100CE14B4(v122, type metadata accessor for CRLAssetReferrerIdentifier);
      int v126 = 0;
    }
    uint64_t v127 = v107 + 3;
    if (__OFADD__(v107, 3)) {
      goto LABEL_83;
    }
    char v128 = *(void **)(*(void *)(v220 + 16) + 32);
    id v129 = v215;
    *uint64_t v215 = v128;
    uint64_t v130 = v216;
    v213(v129, v212, v216);
    id v131 = v128;
    LOBYTE(v128) = _dispatchPreconditionTest(_:)();
    v203(v129, v130);
    if ((v128 & 1) == 0) {
      goto LABEL_84;
    }
    if (v127 < (uint64_t)0xFFFFFFFF80000000) {
      goto LABEL_85;
    }
    if (v127 > 0x7FFFFFFF) {
      goto LABEL_86;
    }
    sqlite3_bind_int(*v198, v107 + 3, v126);
    if (__OFADD__(v107, 4)) {
      goto LABEL_87;
    }
    uint64_t v84 = v220;
    sub_10079DA60(v96, v95, v107 + 4);
    swift_bridgeObjectRelease();
    if (__OFADD__(v107, 5)) {
      goto LABEL_88;
    }
    uint64_t v132 = UUID.crl_data()();
    unint64_t v134 = v133;
    sub_10079DCE4(v132, v133, v107 + 5);
    sub_100510084(v132, v134);
    if (__OFADD__(v107, 6)) {
      goto LABEL_89;
    }
    sub_10079D8A8(v200, v107 + 6);
    sub_100522F00((uint64_t)v218, &qword_10169A750);
  }
  sub_10052E1EC();
  Swift::String v135 = *(void **)(*(void *)(v84 + 16) + 32);
  uint64_t v136 = v215;
  *uint64_t v215 = v135;
  uint64_t v137 = v216;
  v213(v136, v212, v216);
  id v138 = v135;
  LOBYTE(v135) = _dispatchPreconditionTest(_:)();
  v203(v136, v137);
  if ((v135 & 1) == 0) {
    goto LABEL_97;
  }
  int v139 = sqlite3_step(*v198);
  uint64_t v140 = v194;
  if (v139 != 101)
  {
    int v173 = v139;
    swift_bridgeObjectRelease();
    uint64_t v222 = 0;
    unint64_t v223 = 0xE000000000000000;
    _StringGuts.grow(_:)(60);
    v174._uint64_t countAndFlagsBits = 0xD00000000000003ALL;
    v174._object = (void *)0x800000010127CBF0;
    String.append(_:)(v174);
    _print_unlocked<A, B>(_:_:)();
    uint64_t v175 = v222;
    unint64_t v176 = v223;
    sub_10079FF00();
    swift_allocError();
    *(_DWORD *)uint64_t v177 = v173;
    *(void *)(v177 + 8) = v175;
    *(void *)(v177 + 16) = v176;
    swift_willThrow();
    uint64_t v178 = *(void **)(*(void *)(v84 + 16) + 32);
    uint64_t v179 = v215;
    *uint64_t v215 = v178;
    uint64_t v180 = v216;
    v213(v179, v212, v216);
    id v181 = v178;
    LOBYTE(v178) = _dispatchPreconditionTest(_:)();
    v203(v179, v180);
    if ((v178 & 1) == 0) {
      goto LABEL_99;
    }
    uint64_t v182 = v198;
    uint64_t v183 = (uint64_t)v210;
    if (*v198)
    {
      sqlite3_finalize(*v198);
      *uint64_t v182 = 0;
    }
    swift_release();
    return sub_100522F00(v183, &qword_101672C30);
  }
  uint64_t v141 = 0;
  uint64_t v142 = v191[7];
  uint64_t v206 = (uint64_t)(v191 + 7);
  uint64_t v143 = 1 << *((unsigned char *)v191 + 32);
  uint64_t v144 = -1;
  if (v143 < 64) {
    uint64_t v144 = ~(-1 << v143);
  }
  unint64_t v145 = v144 & v142;
  CGFloat v205 = (uint64_t *)OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManagerLock;
  uint64_t v146 = OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManager;
  CGFloat v207 = (uint64_t *)((unint64_t)(v143 + 63) >> 6);
  uint64_t v211 = v199 + 16;
  uint64_t v218 = (uint64_t *)(v199 + 56);
  uint64_t v208 = (void *)(v199 + 48);
  uint64_t v147 = (uint64_t)v210;
  Swift::String v148 = v195;
  while (1)
  {
    if (v145)
    {
      unint64_t v149 = __clz(__rbit64(v145));
      v145 &= v145 - 1;
      unint64_t v150 = v149 | (v141 << 6);
      goto LABEL_61;
    }
    if (__OFADD__(v141++, 1)) {
      goto LABEL_96;
    }
    if (v141 >= (uint64_t)v207) {
      break;
    }
    unint64_t v152 = *(void *)(v206 + 8 * v141);
    if (!v152)
    {
      uint64_t v153 = v141 + 1;
      if (v141 + 1 >= (uint64_t)v207) {
        break;
      }
      unint64_t v152 = *(void *)(v206 + 8 * v153);
      if (!v152)
      {
        uint64_t v153 = v141 + 2;
        if (v141 + 2 >= (uint64_t)v207) {
          break;
        }
        unint64_t v152 = *(void *)(v206 + 8 * v153);
        if (!v152)
        {
          uint64_t v153 = v141 + 3;
          if (v141 + 3 >= (uint64_t)v207) {
            break;
          }
          unint64_t v152 = *(void *)(v206 + 8 * v153);
          if (!v152)
          {
            while (1)
            {
              uint64_t v141 = v153 + 1;
              if (__OFADD__(v153, 1)) {
                break;
              }
              if (v141 >= (uint64_t)v207) {
                goto LABEL_76;
              }
              unint64_t v152 = *(void *)(v206 + 8 * v141);
              ++v153;
              if (v152) {
                goto LABEL_60;
              }
            }
LABEL_98:
            __break(1u);
LABEL_99:
            __break(1u);
            __break(1u);
LABEL_100:
            __break(1u);
            __break(1u);
          }
        }
      }
      uint64_t v141 = v153;
    }
LABEL_60:
    unint64_t v145 = (v152 - 1) & v152;
    unint64_t v150 = __clz(__rbit64(v152)) + (v141 << 6);
LABEL_61:
    uint64_t v154 = v199;
    uint64_t v155 = v219;
    (*(void (**)(char *, unint64_t, uint64_t))(v199 + 16))(v148, v191[6] + *(void *)(v199 + 72) * v150, v219);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v154 + 56))(v148, 0, 1, v155);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v154 + 48))(v148, 1, v155) == 1) {
      goto LABEL_77;
    }
    (*v197)((char *)v140, v148, v155);
    uint64_t v156 = v215;
    uint64_t v157 = v193;
    *uint64_t v215 = v193;
    uint64_t v158 = v216;
    v213(v156, v212, v216);
    id v159 = v157;
    LOBYTE(v157) = _dispatchPreconditionTest(_:)();
    v203(v156, v158);
    if ((v157 & 1) == 0) {
      goto LABEL_95;
    }
    uint64_t v160 = v209;
    uint64_t v161 = sub_100C9B9F0(v140);
    if (v161)
    {
      uint64_t v162 = *(uint64_t *)((char *)v205 + (void)v160);
      os_unfair_lock_lock(*(os_unfair_lock_t *)(v162 + 16));
      uint64_t v163 = *(void **)&v160[v146];
      if (v163)
      {
        id v164 = *(id *)&v160[v146];
      }
      else
      {
        id v165 = objc_allocWithZone((Class)type metadata accessor for CRLAssetFileManager());
        uint64_t v166 = v160;
        id v167 = sub_100EAFDE4((uint64_t)v166);

        unsigned int v168 = *(void **)&v160[v146];
        *(void *)&v160[v146] = v167;
        id v164 = v167;

        uint64_t v163 = 0;
      }
      id v169 = *(os_unfair_lock_s **)(v162 + 16);
      id v170 = v163;
      os_unfair_lock_unlock(v169);
      uint64_t v171 = *(void *)(v161 + OBJC_IVAR____TtC8Freeform19CRLAssetDatabaseRow_fileExtension);
      unint64_t v172 = *(void *)(v161 + OBJC_IVAR____TtC8Freeform19CRLAssetDatabaseRow_fileExtension + 8);
      swift_bridgeObjectRetain();
      uint64_t v140 = v194;
      sub_100EACDCC(v194, v171, v172);
      Swift::String v148 = v195;
      swift_release();

      swift_bridgeObjectRelease();
      uint64_t v147 = (uint64_t)v210;
    }
    else
    {
      Swift::String v148 = v195;
    }
    (*v192)(v140, v219);
  }
LABEL_76:
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))*v218)(v148, 1, 1, v219);
LABEL_77:
  swift_release();
  long long v184 = v203;
  uint64_t v185 = *(void **)(*(void *)(v220 + 16) + 32);
  unint64_t v186 = v215;
  *uint64_t v215 = v185;
  uint64_t v187 = v216;
  v213(v186, v212, v216);
  id v188 = v185;
  LOBYTE(v185) = _dispatchPreconditionTest(_:)();
  v184(v186, v187);
  if ((v185 & 1) == 0) {
    goto LABEL_100;
  }
  uint64_t v189 = v198;
  if (*v198)
  {
    sqlite3_finalize(*v198);
    *uint64_t v189 = 0;
  }
  swift_release();
  return sub_100522F00(v147, &qword_101672C30);
}

double *sub_100C5F3C0(sqlite3_stmt **a1, uint64_t a2)
{
  uint64_t v6 = type metadata accessor for DispatchPredicate();
  uint64_t v7 = *(void *)(v6 - 8);
  __n128 v9 = __chkstk_darwin(v6, v8);
  uint64_t v11 = (void *)((char *)v55 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v12 = *(void **)(v2 + OBJC_IVAR____TtC8Freeform17CRLBoardDataStore_writeQueue);
  *uint64_t v11 = v12;
  uint64_t v13 = *(void (**)(void, __n128))(v7 + 104);
  unsigned int v59 = enum case for DispatchPredicate.onQueue(_:);
  Swift::String v60 = (void (*)(void *, void, uint64_t))v13;
  uint64_t v58 = v7 + 104;
  v13(v11, v9);
  id v14 = v12;
  LOBYTE(v12) = _dispatchPreconditionTest(_:)();
  uint64_t v15 = *(void (**)(void *, uint64_t))(v7 + 8);
  v15(v11, v6);
  if ((v12 & 1) == 0)
  {
    __break(1u);
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  unint64_t result = sub_100C5F9D8(a1, a2);
  if (v3) {
    return result;
  }
  v55[1] = a1;
  void v55[2] = a2;
  Swift::String v56 = v15;
  uint64_t v57 = v6;
  uint64_t v61 = 0;
  unint64_t v62 = 0xE000000000000000;
  _StringGuts.grow(_:)(56);
  v17._uint64_t countAndFlagsBits = 0x20455441445055;
  v17._object = (void *)0xE700000000000000;
  String.append(_:)(v17);
  v18._uint64_t countAndFlagsBits = 0x74695F6472616F62;
  v18._object = (void *)0xEB00000000736D65;
  String.append(_:)(v18);
  v19._uint64_t countAndFlagsBits = 0x2054455320;
  v19._object = (void *)0xE500000000000000;
  String.append(_:)(v19);
  v20._uint64_t countAndFlagsBits = 0x6E6F7473626D6F74;
  v20._object = (void *)0xEA00000000006465;
  String.append(_:)(v20);
  v21._uint64_t countAndFlagsBits = 0x202C31203D20;
  v21._object = (void *)0xE600000000000000;
  String.append(_:)(v21);
  v22._uint64_t countAndFlagsBits = 0xD000000000000010;
  v22._object = (void *)0x800000010127B8B0;
  String.append(_:)(v22);
  v23._uint64_t countAndFlagsBits = 2112800;
  v23._object = (void *)0xE300000000000000;
  String.append(_:)(v23);
  v24._uint64_t countAndFlagsBits = 0xD000000000000010;
  v24._object = (void *)0x800000010127B8B0;
  String.append(_:)(v24);
  v25._uint64_t countAndFlagsBits = 0x454857203F207C20;
  v25._object = (void *)0xEC00000028204552;
  String.append(_:)(v25);
  v26._uint64_t countAndFlagsBits = 0x6975755F6D657469;
  v26._object = (void *)0xE900000000000064;
  String.append(_:)(v26);
  v27._uint64_t countAndFlagsBits = 8236;
  v27._object = (void *)0xE200000000000000;
  String.append(_:)(v27);
  v28._object = (void *)0x8000000101262BA0;
  v28._uint64_t countAndFlagsBits = 0xD000000000000010;
  String.append(_:)(v28);
  v29._uint64_t countAndFlagsBits = 0x28204E492029;
  v29._object = (void *)0xE600000000000000;
  String.append(_:)(v29);
  v30._uint64_t countAndFlagsBits = sub_100CDF3CC((uint64_t)&off_101502810, 0);
  String.append(_:)(v30);
  swift_bridgeObjectRelease();
  v31._uint64_t countAndFlagsBits = 41;
  v31._object = (void *)0xE100000000000000;
  String.append(_:)(v31);
  uint64_t v32 = v61;
  uint64_t v33 = v62;
  type metadata accessor for SQLiteStatement();
  swift_initStackObject();
  uint64_t v34 = swift_retain();
  uint64_t v35 = sub_10079FC40(v34, v32, v33);
  swift_release();
  sub_10079D8A8(16, 1);
  uint64_t v36 = UUID.crl_data()();
  unint64_t v38 = v37;
  sub_10079DCE4(v36, v37, 2);
  sub_100510084(v36, v38);
  uint64_t v39 = sub_100753FC0();
  unint64_t v41 = v40;
  sub_10079DCE4(v39, v40, 3);
  id v42 = *(void **)(*(void *)(v35 + 16) + 32);
  *uint64_t v11 = v42;
  uint64_t v43 = v57;
  v60(v11, v59, v57);
  id v44 = v42;
  LOBYTE(v42) = _dispatchPreconditionTest(_:)();
  v56(v11, v43);
  if ((v42 & 1) == 0) {
    goto LABEL_14;
  }
  uint64_t v45 = (sqlite3_stmt **)(v35 + 24);
  swift_beginAccess();
  int v46 = sqlite3_step(*(sqlite3_stmt **)(v35 + 24));
  if (v46 != 101)
  {
    int v50 = v46;
    sub_10079FF00();
    swift_allocError();
    *(_DWORD *)uint64_t v51 = v50;
    *(void *)(v51 + 8) = 0xD000000000000024;
    *(void *)(v51 + 16) = 0x800000010127D7D0;
    swift_willThrow();
    sub_100510084(v39, v41);
    Swift::String v52 = *(void **)(*(void *)(v35 + 16) + 32);
    *uint64_t v11 = v52;
    uint64_t v53 = v57;
    v60(v11, v59, v57);
    id v54 = v52;
    LOBYTE(v52) = _dispatchPreconditionTest(_:)();
    v56(v11, v53);
    if (v52)
    {
      if (*v45)
      {
        sqlite3_finalize(*v45);
        *(void *)(v35 + 24) = 0;
      }
      return (double *)swift_release();
    }
LABEL_16:
    __break(1u);
  }
  sub_100510084(v39, v41);
  uint64_t v47 = *(void **)(*(void *)(v35 + 16) + 32);
  *uint64_t v11 = v47;
  uint64_t v48 = v57;
  v60(v11, v59, v57);
  id v49 = v47;
  LOBYTE(v47) = _dispatchPreconditionTest(_:)();
  v56(v11, v48);
  if ((v47 & 1) == 0)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  if (*v45)
  {
    sqlite3_finalize(*v45);
    *uint64_t v45 = 0;
  }
  return (double *)swift_release();
}

double *sub_100C5F9D8(sqlite3_stmt **a1, uint64_t a2)
{
  uint64_t v58 = type metadata accessor for CRLAssetReferrerIdentifier(0);
  __chkstk_darwin(v58, v6);
  uint64_t v63 = (uint64_t)&v51 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for DispatchPredicate();
  uint64_t v9 = *(void *)(v8 - 8);
  __n128 v11 = __chkstk_darwin(v8, v10);
  uint64_t v13 = (sqlite3_stmt ***)((char *)&v51 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  id v14 = *(void **)(v2 + OBJC_IVAR____TtC8Freeform17CRLBoardDataStore_writeQueue);
  *uint64_t v13 = v14;
  uint64_t v15 = *(void (**)(void, __n128))(v9 + 104);
  unsigned int v61 = enum case for DispatchPredicate.onQueue(_:);
  unint64_t v62 = (void (*)(void *, void, uint64_t))v15;
  uint64_t v60 = v9 + 104;
  v15(v13, v11);
  id v16 = v14;
  LOBYTE(v14) = _dispatchPreconditionTest(_:)();
  Swift::String v17 = *(void (**)(void *, uint64_t))(v9 + 8);
  uint64_t v59 = v9 + 8;
  v17(v13, v8);
  if ((v14 & 1) == 0)
  {
    __break(1u);
    __break(1u);
    __break(1u);
    goto LABEL_19;
  }
  unint64_t result = sub_100C96B2C(a1, a2);
  if (!v3)
  {
    uint64_t v57 = a1;
    if (*((void *)result + 2))
    {
      uint64_t v55 = v17;
      Swift::String v56 = result;
      uint64_t v54 = v8;
      unint64_t v66 = 0;
      unint64_t v67 = 0xE000000000000000;
      _StringGuts.grow(_:)(37);
      swift_bridgeObjectRelease();
      unint64_t v66 = 0xD00000000000004FLL;
      unint64_t v67 = 0x800000010127E610;
      v19._uint64_t countAndFlagsBits = sub_100CDF3CC((uint64_t)&off_1015027B8, 0);
      String.append(_:)(v19);
      swift_bridgeObjectRelease();
      v20._uint64_t countAndFlagsBits = 41;
      v20._object = (void *)0xE100000000000000;
      String.append(_:)(v20);
      uint64_t v21 = v66;
      uint64_t v22 = v67;
      type metadata accessor for SQLiteStatement();
      swift_initStackObject();
      uint64_t v23 = swift_retain();
      uint64_t v24 = sub_10079FC40(v23, v21, v22);
      swift_release();
      uint64_t v25 = sub_1005057FC(&qword_101674240);
      uint64_t v26 = v63;
      uint64_t v27 = v63 + *(int *)(v25 + 48);
      uint64_t v28 = type metadata accessor for UUID();
      (*(void (**)(uint64_t, sqlite3_stmt **, uint64_t))(*(void *)(v28 - 8) + 16))(v26, v57, v28);
      sub_100CE144C(a2, v27, type metadata accessor for CRLBoardIdentifier);
      swift_storeEnumTagMultiPayload();
      uint64_t v29 = sub_100511430();
      unint64_t v31 = v30;
      uint64_t v58 = v28;
      sub_10079DCE4(v29, v30, 1);
      sub_100510084(v29, v31);
      uint64_t v32 = sub_100753FC0();
      uint64_t v34 = v24;
      uint64_t v52 = v32;
      unint64_t v53 = v33;
      sub_10079DCE4(v32, v33, 2);
      uint64_t v35 = *(void **)(*(void *)(v24 + 16) + 32);
      *uint64_t v13 = v35;
      uint64_t v36 = v54;
      v62(v13, v61, v54);
      id v37 = v35;
      LOBYTE(v35) = _dispatchPreconditionTest(_:)();
      v55(v13, v36);
      if (v35)
      {
        uint64_t v51 = (sqlite3_stmt **)(v24 + 24);
        swift_beginAccess();
        int v38 = sqlite3_step(*(sqlite3_stmt **)(v24 + 24));
        if (v38 == 101)
        {
          uint64_t v39 = sub_100CDCB64((uint64_t)v56);
          swift_bridgeObjectRelease();
          sub_100C95724(v39);
          sub_100CE14B4(v63, type metadata accessor for CRLAssetReferrerIdentifier);
          swift_bridgeObjectRelease();
          sub_100510084(v52, v53);
          id v49 = *(void **)(*(void *)(v24 + 16) + 32);
          *uint64_t v13 = v49;
          v62(v13, v61, v36);
          id v50 = v49;
          LOBYTE(v49) = _dispatchPreconditionTest(_:)();
          v55(v13, v36);
          if (v49)
          {
            if (*v51)
            {
              sqlite3_finalize(*v51);
              *(void *)(v24 + 24) = 0;
            }
            return (double *)swift_release();
          }
LABEL_21:
          __break(1u);
        }
        int v40 = v38;
        swift_bridgeObjectRelease();
        uint64_t v64 = 0;
        unint64_t v65 = 0xE000000000000000;
        _StringGuts.grow(_:)(73);
        v41._object = (void *)0x800000010127E660;
        v41._uint64_t countAndFlagsBits = 0xD000000000000047;
        String.append(_:)(v41);
        sub_100CDE0D8(&qword_101677460, (void (*)(uint64_t))&type metadata accessor for UUID);
        v42._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
        String.append(_:)(v42);
        swift_bridgeObjectRelease();
        uint64_t v43 = v36;
        uint64_t v44 = v64;
        unint64_t v45 = v65;
        sub_10079FF00();
        swift_allocError();
        *(_DWORD *)uint64_t v46 = v40;
        *(void *)(v46 + 8) = v44;
        *(void *)(v46 + 16) = v45;
        swift_willThrow();
        sub_100510084(v52, v53);
        sub_100CE14B4(v63, type metadata accessor for CRLAssetReferrerIdentifier);
        uint64_t v47 = *(void **)(*(void *)(v34 + 16) + 32);
        *uint64_t v13 = v47;
        v62(v13, v61, v43);
        id v48 = v47;
        LOBYTE(v47) = _dispatchPreconditionTest(_:)();
        v55(v13, v43);
        if (v47)
        {
          if (*v51)
          {
            sqlite3_finalize(*v51);
            *(void *)(v34 + 24) = 0;
          }
          return (double *)swift_release();
        }
LABEL_20:
        __break(1u);
        goto LABEL_21;
      }
LABEL_19:
      __break(1u);
      goto LABEL_20;
    }
    return (double *)swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_100C6026C(uint64_t a1, uint64_t a2)
{
  uint64_t v67 = a2;
  uint64_t v4 = type metadata accessor for CRLAssetReferrerIdentifier(0);
  __chkstk_darwin(v4, v5);
  uint64_t v7 = (char *)&v58 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for DispatchPredicate();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8, v10);
  uint64_t v12 = (uint64_t *)((char *)&v58 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v13 = *(void **)(v2 + OBJC_IVAR____TtC8Freeform17CRLBoardDataStore_writeQueue);
  *uint64_t v12 = v13;
  id v14 = *(void (**)(void))(v9 + 104);
  unsigned int v62 = enum case for DispatchPredicate.onQueue(_:);
  uint64_t v63 = (void (*)(void *, void, uint64_t))v14;
  uint64_t v61 = v9 + 104;
  v14(v12);
  id v15 = v13;
  LOBYTE(v13) = _dispatchPreconditionTest(_:)();
  id v16 = *(void (**)(void *, uint64_t))(v9 + 8);
  uint64_t v59 = v12;
  uint64_t v60 = v9 + 8;
  uint64_t v64 = v16;
  uint64_t v65 = v8;
  v16(v12, v8);
  if ((v13 & 1) == 0)
  {
    __break(1u);
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  uint64_t v17 = (uint64_t)&v7[*(int *)(sub_1005057FC(&qword_101674240) + 48)];
  uint64_t v18 = type metadata accessor for UUID();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(v7, a1, v18);
  sub_100CE144C(v67, v17, type metadata accessor for CRLBoardIdentifier);
  swift_storeEnumTagMultiPayload();
  uint64_t v19 = v66;
  sub_100C5C97C((uint64_t)v7);
  if (v19) {
    return sub_100CE14B4((uint64_t)v7, type metadata accessor for CRLAssetReferrerIdentifier);
  }
  sub_100CE14B4((uint64_t)v7, type metadata accessor for CRLAssetReferrerIdentifier);
  uint64_t v68 = 0;
  unint64_t v69 = 0xE000000000000000;
  _StringGuts.grow(_:)(57);
  v21._uint64_t countAndFlagsBits = 0x20455441445055;
  v21._object = (void *)0xE700000000000000;
  String.append(_:)(v21);
  v22._uint64_t countAndFlagsBits = 0x74695F6472616F62;
  v22._object = (void *)0xEB00000000736D65;
  String.append(_:)(v22);
  v23._uint64_t countAndFlagsBits = 0x2054455320;
  v23._object = (void *)0xE500000000000000;
  String.append(_:)(v23);
  v24._uint64_t countAndFlagsBits = 0x6E6F7473626D6F74;
  v24._object = (void *)0xEA00000000006465;
  String.append(_:)(v24);
  v25._uint64_t countAndFlagsBits = 0x202C31203D20;
  v25._object = (void *)0xE600000000000000;
  String.append(_:)(v25);
  v26._uint64_t countAndFlagsBits = 0xD000000000000010;
  v26._object = (void *)0x800000010127B8B0;
  String.append(_:)(v26);
  v27._uint64_t countAndFlagsBits = 2112800;
  v27._object = (void *)0xE300000000000000;
  String.append(_:)(v27);
  v28._uint64_t countAndFlagsBits = 0xD000000000000010;
  v28._object = (void *)0x800000010127B8B0;
  String.append(_:)(v28);
  v29._uint64_t countAndFlagsBits = 0x454857203F207C20;
  v29._object = (void *)0xEB00000000204552;
  String.append(_:)(v29);
  v30._object = (void *)0xE900000000000064;
  v30._uint64_t countAndFlagsBits = 0x6975755F6D657469;
  String.append(_:)(v30);
  v31._uint64_t countAndFlagsBits = 0x444E41203F203D20;
  v31._object = (void *)0xE900000000000020;
  String.append(_:)(v31);
  v32._object = (void *)0x8000000101262BA0;
  v32._uint64_t countAndFlagsBits = 0xD000000000000010;
  String.append(_:)(v32);
  v33._uint64_t countAndFlagsBits = 1059077408;
  v33._object = (void *)0xE400000000000000;
  String.append(_:)(v33);
  uint64_t v34 = v68;
  uint64_t v35 = v69;
  type metadata accessor for SQLiteStatement();
  swift_initStackObject();
  uint64_t v36 = swift_retain();
  uint64_t v37 = sub_10079FC40(v36, v34, v35);
  swift_release();
  sub_10079D8A8(16, 1);
  uint64_t v38 = UUID.crl_data()();
  unint64_t v40 = v39;
  sub_10079DCE4(v38, v39, 2);
  sub_100510084(v38, v40);
  uint64_t v41 = sub_100753FC0();
  unint64_t v43 = v42;
  sub_10079DCE4(v41, v42, 3);
  uint64_t v44 = *(void **)(*(void *)(v37 + 16) + 32);
  unint64_t v45 = v59;
  *uint64_t v59 = v44;
  uint64_t v46 = v65;
  v63(v45, v62, v65);
  id v47 = v44;
  LOBYTE(v44) = _dispatchPreconditionTest(_:)();
  v64(v45, v46);
  if ((v44 & 1) == 0) {
    goto LABEL_14;
  }
  id v48 = (sqlite3_stmt **)(v37 + 24);
  swift_beginAccess();
  int v49 = sqlite3_step(*(sqlite3_stmt **)(v37 + 24));
  if (v49 != 101)
  {
    int v53 = v49;
    sub_10079FF00();
    swift_allocError();
    *(_DWORD *)uint64_t v54 = v53;
    *(void *)(v54 + 8) = 0xD000000000000024;
    *(void *)(v54 + 16) = 0x800000010127D7D0;
    swift_willThrow();
    sub_100510084(v41, v43);
    uint64_t v55 = *(void **)(*(void *)(v37 + 16) + 32);
    *unint64_t v45 = v55;
    uint64_t v56 = v65;
    v63(v45, v62, v65);
    id v57 = v55;
    LOBYTE(v55) = _dispatchPreconditionTest(_:)();
    v64(v45, v56);
    if (v55)
    {
      if (*v48)
      {
        sqlite3_finalize(*v48);
        *(void *)(v37 + 24) = 0;
      }
      return swift_release();
    }
LABEL_16:
    __break(1u);
  }
  sub_100510084(v41, v43);
  id v50 = *(void **)(*(void *)(v37 + 16) + 32);
  *unint64_t v45 = v50;
  uint64_t v51 = v65;
  v63(v45, v62, v65);
  id v52 = v50;
  LOBYTE(v5sub_100C38440(1, 0) = _dispatchPreconditionTest(_:)();
  v64(v45, v51);
  if ((v50 & 1) == 0)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  if (*v48)
  {
    sqlite3_finalize(*v48);
    *id v48 = 0;
  }
  return swift_release();
}

double *sub_100C60988(sqlite3_stmt **a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v96 = v6;
  uint64_t v97 = v7;
  __chkstk_darwin(v6, v8);
  uint64_t v95 = (char *)&v79 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10, v11);
  uint64_t v94 = (char *)&v79 - v12;
  uint64_t v13 = type metadata accessor for CRLBoardIdentifier(0);
  __chkstk_darwin(v13 - 8, v14);
  uint64_t v93 = (uint64_t)&v79 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for DispatchPredicate();
  uint64_t v17 = *(void *)(v16 - 8);
  __n128 v19 = __chkstk_darwin(v16, v18);
  uint64_t v21 = (uint64_t)&v79 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  Swift::String v22 = *(void **)(v2 + OBJC_IVAR____TtC8Freeform17CRLBoardDataStore_writeQueue);
  *(void *)uint64_t v21 = v22;
  unint64_t v23 = enum case for DispatchPredicate.onQueue(_:);
  Swift::String v24 = *(void (**)(void *, void, uint64_t))(v17 + 104);
  uint64_t v90 = v17 + 104;
  uint64_t v92 = v24;
  ((void (*)(uint64_t, void, uint64_t, __n128))v24)(v21, enum case for DispatchPredicate.onQueue(_:), v16, v19);
  id v25 = v22;
  LOBYTE(v22) = _dispatchPreconditionTest(_:)();
  Swift::String v28 = *(void (**)(void *, uint64_t))(v17 + 8);
  uint64_t v26 = v17 + 8;
  Swift::String v27 = v28;
  uint64_t v91 = (void *)v21;
  v28((void *)v21, v16);
  if (v22)
  {
    uint64_t v29 = v98;
    unint64_t result = sub_100C5F9D8(a1, a2);
    if (v29) {
      return result;
    }
    uint64_t v21 = (uint64_t)a1;
    unsigned int v84 = v23;
    unint64_t v31 = sub_100C528B8((unint64_t)a1, a2, 1);
    unint64_t v23 = v31;
    uint64_t v89 = v3;
    uint64_t v83 = a2;
    Swift::String v80 = v27;
    uint64_t v81 = v26;
    uint64_t v82 = v16;
    unint64_t v99 = (unint64_t)_swiftEmptyArrayStorage;
    uint64_t v98 = 0;
    if (!(v31 >> 62))
    {
      uint64_t v32 = *(void *)((v31 & 0xFFFFFFFFFFFFFF8) + 0x10);
      goto LABEL_5;
    }
  }
  else
  {
    __break(1u);
LABEL_54:
    __break(1u);
  }
  swift_bridgeObjectRetain();
  uint64_t v32 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
LABEL_5:
  uint64_t v33 = v93;
  if (v32)
  {
    if (v32 < 1)
    {
      __break(1u);
LABEL_59:
      uint64_t v78 = specialized _ArrayBuffer._getElementSlowPath(_:)();
      sub_100CE144C(v78 + OBJC_IVAR____TtC8Freeform23CRLBoardItemDatabaseRow_boardIdentifier, v33, type metadata accessor for CRLBoardIdentifier);
      swift_unknownObjectRelease();
      goto LABEL_26;
    }
    if ((v23 & 0xC000000000000001) != 0)
    {
      for (uint64_t i = 0; i != v32; ++i)
      {
        uint64_t v35 = *(void *)(specialized _ArrayBuffer._getElementSlowPath(_:)()
                        + OBJC_IVAR____TtC8Freeform23CRLBoardItemDatabaseRow_unsyncedChanges);
        if (v35 & 2) == 0 || (v35)
        {
          swift_unknownObjectRelease();
        }
        else
        {
          specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
          specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
          specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized ContiguousArray._endMutation()();
        }
      }
    }
    else
    {
      uint64_t v36 = 0;
      uint64_t v37 = OBJC_IVAR____TtC8Freeform23CRLBoardItemDatabaseRow_unsyncedChanges;
      do
      {
        if ((*(void *)(*(void *)(v23 + 8 * v36 + 32) + v37) & 3) == 2)
        {
          swift_retain();
          specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
          specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
          specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized ContiguousArray._endMutation()();
          uint64_t v37 = OBJC_IVAR____TtC8Freeform23CRLBoardItemDatabaseRow_unsyncedChanges;
        }
        ++v36;
      }
      while (v32 != v36);
    }
    swift_bridgeObjectRelease();
    uint64_t v33 = v93;
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  unint64_t v23 = v99;
  if ((v99 & 0x8000000000000000) != 0 || (v99 & 0x4000000000000000) != 0)
  {
    swift_retain();
    uint64_t v77 = _CocoaArrayWrapper.endIndex.getter();
    swift_release();
    uint64_t v88 = v77;
    if (!v77) {
      goto LABEL_41;
    }
  }
  else
  {
    uint64_t v88 = *(void *)(v99 + 16);
    if (!v88)
    {
LABEL_41:
      swift_release();
LABEL_42:
      unint64_t v99 = 0;
      unint64_t v100 = 0xE000000000000000;
      _StringGuts.grow(_:)(40);
      swift_bridgeObjectRelease();
      type metadata accessor for SQLiteStatement();
      swift_initStackObject();
      uint64_t v51 = swift_retain();
      uint64_t v52 = v98;
      uint64_t v53 = sub_10079FC40(v51, 0xD000000000000046, 0x800000010127E5A0);
      if (v52) {
        return (double *)swift_release();
      }
      uint64_t v54 = v53;
      swift_release();
      uint64_t v55 = UUID.crl_data()();
      unint64_t v57 = v56;
      sub_10079DCE4(v55, v56, 1);
      sub_100510084(v55, v57);
      uint64_t v58 = sub_100753FC0();
      unint64_t v60 = v59;
      sub_10079DCE4(v58, v59, 2);
      uint64_t v61 = *(void **)(*(void *)(v54 + 16) + 32);
      unsigned int v62 = v91;
      *uint64_t v91 = v61;
      uint64_t v63 = v82;
      v92(v62, v84, v82);
      id v64 = v61;
      LOBYTE(v61) = _dispatchPreconditionTest(_:)();
      v80(v62, v63);
      if (v61)
      {
        uint64_t v65 = (sqlite3_stmt **)(v54 + 24);
        swift_beginAccess();
        int v66 = sqlite3_step(*(sqlite3_stmt **)(v54 + 24));
        if (v66 != 101)
        {
          int v71 = v66;
          sub_10079FF00();
          swift_allocError();
          *(_DWORD *)uint64_t v72 = v71;
          *(void *)(v72 + 8) = 0xD00000000000001DLL;
          *(void *)(v72 + 16) = 0x800000010127E5F0;
          swift_willThrow();
          sub_100510084(v58, v60);
          Swift::String v73 = *(void **)(*(void *)(v54 + 16) + 32);
          Swift::String v74 = v91;
          *uint64_t v91 = v73;
          uint64_t v75 = v82;
          v92(v74, v84, v82);
          id v76 = v73;
          LOBYTE(v73) = _dispatchPreconditionTest(_:)();
          v80(v74, v75);
          if (v73)
          {
            if (*v65)
            {
              sqlite3_finalize(*v65);
              *(void *)(v54 + 24) = 0;
            }
            return (double *)swift_release();
          }
LABEL_63:
          __break(1u);
        }
        sub_100510084(v58, v60);
        uint64_t v67 = *(void **)(*(void *)(v54 + 16) + 32);
        uint64_t v68 = v91;
        *uint64_t v91 = v67;
        uint64_t v69 = v82;
        v92(v68, v84, v82);
        id v70 = v67;
        LOBYTE(v67) = _dispatchPreconditionTest(_:)();
        v80(v68, v69);
        if (v67)
        {
          if (*v65)
          {
            sqlite3_finalize(*v65);
            *uint64_t v65 = 0;
          }
          return (double *)swift_release();
        }
LABEL_62:
        __break(1u);
        goto LABEL_63;
      }
LABEL_61:
      __break(1u);
      goto LABEL_62;
    }
  }
  unint64_t v87 = v23 & 0xC000000000000001;
  if ((v23 & 0xC000000000000001) != 0) {
    goto LABEL_59;
  }
  if (!*(void *)(v23 + 16))
  {
    __break(1u);
    __break(1u);
    goto LABEL_61;
  }
  sub_100CE144C(*(void *)(v23 + 32) + OBJC_IVAR____TtC8Freeform23CRLBoardItemDatabaseRow_boardIdentifier, v33, type metadata accessor for CRLBoardIdentifier);
LABEL_26:
  uint64_t v38 = v98;
  uint64_t v39 = sub_100C51248(v33);
  if (v38)
  {
    sub_100CE14B4(v33, type metadata accessor for CRLBoardIdentifier);
    return (double *)swift_release();
  }
  uint64_t v98 = 0;
  if (!v39)
  {
    sub_100CE14B4(v33, type metadata accessor for CRLBoardIdentifier);
    goto LABEL_41;
  }
  uint64_t v86 = v21;
  uint64_t v79 = v39;
  uint64_t v40 = v39 + OBJC_IVAR____TtC8Freeform19CRLBoardDatabaseRow_rootContainerUUID;
  swift_beginAccess();
  uint64_t v41 = v97 + 16;
  uint64_t v85 = *(void (**)(char *, uint64_t, uint64_t))(v97 + 16);
  v85(v94, v40, v96);
  uint64_t v97 = v41;
  unint64_t v42 = (void (**)(char *, uint64_t))(v41 - 8);
  uint64_t v21 = 4;
  unint64_t v43 = v95;
  while (1)
  {
    uint64_t v44 = v21 - 4;
    if (v87)
    {
      uint64_t v45 = specialized _ArrayBuffer._getElementSlowPath(_:)();
      uint64_t v46 = v21 - 3;
      if (__OFADD__(v44, 1)) {
        goto LABEL_54;
      }
    }
    else
    {
      uint64_t v45 = *(void *)(v23 + 8 * v21);
      swift_retain();
      uint64_t v46 = v21 - 3;
      if (__OFADD__(v44, 1)) {
        goto LABEL_54;
      }
    }
    uint64_t v47 = v96;
    v85(v43, v45 + OBJC_IVAR____TtC8Freeform23CRLBoardItemDatabaseRow_itemUUID, v96);
    sub_100CDE0D8((unint64_t *)&qword_10167BDC0, (void (*)(uint64_t))&type metadata accessor for UUID);
    char v48 = dispatch thunk of static Equatable.== infix(_:_:)();
    int v49 = *v42;
    (*v42)(v43, v47);
    if ((v48 & 1) == 0)
    {
      uint64_t v50 = v98;
      sub_100C6149C(v45, (uint64_t)v94, v89);
      uint64_t v98 = v50;
      if (v50) {
        break;
      }
    }
    swift_release();
    ++v21;
    if (v46 == v88)
    {
      swift_release();
      swift_release();
      v49(v94, v96);
      sub_100CE14B4(v93, type metadata accessor for CRLBoardIdentifier);
      goto LABEL_42;
    }
  }
  swift_release();
  swift_release();
  swift_release();
  v49(v94, v96);
  return (double *)sub_100CE14B4(v93, type metadata accessor for CRLBoardIdentifier);
}