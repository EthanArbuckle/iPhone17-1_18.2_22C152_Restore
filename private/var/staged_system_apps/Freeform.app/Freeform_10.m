uint64_t sub_1009B1AD8(void *a1, float a2, float a3, float a4, float a5)
{
  uint64_t v5;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  float *v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t result;
  void v19[3];
  unsigned char v20[24];
  uint64_t v21;

  v11 = type metadata accessor for CRLProto_Rect(0);
  __chkstk_darwin(v11, v12);
  v14 = (float *)((char *)v19 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  UnknownStorage.init()();
  *v14 = a2;
  v14[1] = a3;
  v14[2] = a4;
  v14[3] = a5;
  sub_1009B2508(&qword_101689E00, (void (*)(uint64_t))type metadata accessor for CRLProto_Rect);
  v15 = Message.serializedData(partial:)();
  v17 = v16;
  result = sub_1009B25B8((uint64_t)v14, type metadata accessor for CRLProto_Rect);
  if (!v5)
  {
    sub_10050F848(a1, a1[3]);
    dispatch thunk of Encoder.singleValueContainer()();
    v19[1] = v15;
    v19[2] = v17;
    sub_1005231B4((uint64_t)v20, v21);
    sub_10060D344();
    dispatch thunk of SingleValueEncodingContainer.encode<A>(_:)();
    sub_100510084(v15, v17);
    return _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v20);
  }
  return result;
}

uint64_t sub_1009B1C84@<X0>(float *a1@<X8>)
{
  dispatch thunk of CRDecoder.valueContainer()();
  if (v1) {
    return swift_release();
  }
  uint64_t v3 = dispatch thunk of CRDecoder.CRValueContainer.decode(_:)();
  unint64_t v5 = v4;
  swift_release();
  float v6 = sub_1009B21E0(v3, v5);
  int v8 = v7;
  int v10 = v9;
  int v12 = v11;
  sub_100510084(v3, v5);
  uint64_t result = swift_release();
  *a1 = v6;
  *((_DWORD *)a1 + 1) = v8;
  *((_DWORD *)a1 + 2) = v10;
  *((_DWORD *)a1 + 3) = v12;
  return result;
}

uint64_t sub_1009B1D60()
{
  return sub_1009B1968(*v0, v0[1], v0[2], v0[3]);
}

void sub_1009B1D80(void *a1@<X0>, uint64_t a2@<X8>)
{
  float v4 = sub_1009B23CC(a1);
  if (!v2)
  {
    *(float *)a2 = v4;
    *(_DWORD *)(a2 + 4) = v5;
    *(_DWORD *)(a2 + 8) = v6;
    *(_DWORD *)(a2 + 12) = v7;
  }
}

uint64_t sub_1009B1DB0(void *a1)
{
  return sub_1009B1AD8(a1, *v1, v1[1], v1[2], v1[3]);
}

BOOL sub_1009B1DD0(float *a1, float *a2)
{
  return *a1 == *a2 && a1[1] == a2[1] && a1[2] == a2[2] && a1[3] == a2[3];
}

__n128 sub_1009B1E0C@<Q0>(__n128 *a1@<X8>)
{
  __n128 result = *v1;
  *a1 = *v1;
  return result;
}

uint64_t sub_1009B1E18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_1009B2618();
  unint64_t v7 = sub_1009B266C();

  return CRValue<>.observableDifference(from:with:)(a1, a2, a3, v6, v7);
}

unint64_t sub_1009B1E8C()
{
  unint64_t result = qword_101689DF8;
  if (!qword_101689DF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101689DF8);
  }
  return result;
}

float sub_1009B1EE0(uint64_t a1, unint64_t a2, uint64_t (*a3)(void, __n128), unint64_t *a4, void (*a5)(uint64_t))
{
  uint64_t v11 = type metadata accessor for BinaryDecodingOptions();
  __n128 v13 = __chkstk_darwin(v11 - 8, v12);
  uint64_t v14 = a3(0, v13);
  __chkstk_darwin(v14, v15);
  v17 = (float *)((char *)v24 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v18, v19);
  v21 = (char *)v24 - v20;
  uint64_t v25 = 0;
  memset(v24, 0, sizeof(v24));
  sub_100510D4C(a1, a2);
  BinaryDecodingOptions.init()();
  sub_1009B2508(a4, a5);
  uint64_t v22 = v26;
  Message.init(serializedData:extensions:partial:options:)();
  if (!v22)
  {
    sub_1009B2550((uint64_t)v21, (uint64_t)v17, (uint64_t (*)(void))a5);
    float v5 = *v17;
    sub_1009B25B8((uint64_t)v17, (uint64_t (*)(void))a5);
    sub_1009B25B8((uint64_t)v21, (uint64_t (*)(void))a5);
  }
  return v5;
}

float sub_1009B2098(void *a1, uint64_t (*a2)(void, __n128), unint64_t *a3, void (*a4)(uint64_t))
{
  sub_10050F848(a1, a1[3]);
  dispatch thunk of Decoder.singleValueContainer()();
  sub_10050F848(v12, v12[3]);
  sub_10060D184();
  dispatch thunk of SingleValueDecodingContainer.decode<A>(_:)();
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v12);
  float v8 = sub_1009B1EE0(v10, v11, a2, a3, a4);
  sub_100510084(v10, v11);
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)a1);
  return v8;
}

float sub_1009B21E0(uint64_t a1, unint64_t a2)
{
  uint64_t v6 = type metadata accessor for BinaryDecodingOptions();
  __chkstk_darwin(v6 - 8, v7);
  uint64_t v8 = type metadata accessor for CRLProto_Rect(0);
  __chkstk_darwin(v8, v9);
  unint64_t v11 = (float *)((char *)v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v12, v13);
  uint64_t v15 = (char *)v17 - v14;
  uint64_t v18 = 0;
  memset(v17, 0, sizeof(v17));
  sub_100510D4C(a1, a2);
  BinaryDecodingOptions.init()();
  sub_1009B2508(&qword_101689E00, (void (*)(uint64_t))type metadata accessor for CRLProto_Rect);
  Message.init(serializedData:extensions:partial:options:)();
  if (!v2)
  {
    sub_1009B2550((uint64_t)v15, (uint64_t)v11, type metadata accessor for CRLProto_Rect);
    float v3 = *v11;
    sub_1009B25B8((uint64_t)v11, type metadata accessor for CRLProto_Rect);
    sub_1009B25B8((uint64_t)v15, type metadata accessor for CRLProto_Rect);
  }
  return v3;
}

float sub_1009B23CC(void *a1)
{
  sub_10050F848(a1, a1[3]);
  dispatch thunk of Decoder.singleValueContainer()();
  if (!v1)
  {
    sub_10050F848(v7, v7[3]);
    sub_10060D184();
    dispatch thunk of SingleValueDecodingContainer.decode<A>(_:)();
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v7);
    float v2 = sub_1009B21E0(v5, v6);
    sub_100510084(v5, v6);
  }
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)a1);
  return v2;
}

uint64_t sub_1009B2508(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1009B2550(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1009B25B8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_1009B2618()
{
  unint64_t result = qword_101689E18;
  if (!qword_101689E18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101689E18);
  }
  return result;
}

unint64_t sub_1009B266C()
{
  unint64_t result = qword_101689E20;
  if (!qword_101689E20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101689E20);
  }
  return result;
}

unint64_t sub_1009B26C0()
{
  unint64_t result = qword_101689E28;
  if (!qword_101689E28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101689E28);
  }
  return result;
}

unint64_t sub_1009B2714()
{
  unint64_t result = qword_101689E30;
  if (!qword_101689E30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101689E30);
  }
  return result;
}

unint64_t sub_1009B2768()
{
  unint64_t result = qword_101689E38;
  if (!qword_101689E38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101689E38);
  }
  return result;
}

char *sub_1009B27CC(void *a1, void *a2, void *a3)
{
  uint64_t v7 = &v3[OBJC_IVAR____TtC8Freeform34CRLDocumentSessionAnalyticsManager_documentSessionEndedAnalyticsDomain];
  *uint64_t v7 = 0xD000000000000016;
  v7[1] = 0x8000000101235F30;
  *(void *)&v3[OBJC_IVAR____TtC8Freeform34CRLDocumentSessionAnalyticsManager_totalEventKeyCount] = 7;
  uint64_t v8 = &v3[OBJC_IVAR____TtC8Freeform34CRLDocumentSessionAnalyticsManager_durationKey];
  *uint64_t v8 = 0x6E6F697461727564;
  v8[1] = 0xE800000000000000;
  uint64_t v9 = &v3[OBJC_IVAR____TtC8Freeform34CRLDocumentSessionAnalyticsManager_hadEditKey];
  *uint64_t v9 = 0x74696445646168;
  v9[1] = 0xE700000000000000;
  uint64_t v10 = &v3[OBJC_IVAR____TtC8Freeform34CRLDocumentSessionAnalyticsManager_percentageTimeSpentInEditModeKey];
  *uint64_t v10 = 0xD00000000000001DLL;
  v10[1] = 0x8000000101235F50;
  unint64_t v11 = &v3[OBJC_IVAR____TtC8Freeform34CRLDocumentSessionAnalyticsManager_editModeBeganCountKey];
  *unint64_t v11 = 0xD000000000000012;
  v11[1] = 0x8000000101235F70;
  *(void *)&v3[OBJC_IVAR____TtC8Freeform34CRLDocumentSessionAnalyticsManager_commandControllerNotificationSubscriber] = &_swiftEmptySetSingleton;
  uint64_t v12 = &v3[OBJC_IVAR____TtC8Freeform34CRLDocumentSessionAnalyticsManager_sessionBeganDate];
  uint64_t v13 = type metadata accessor for Date();
  uint64_t v14 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
  v14(v12, 1, 1, v13);
  v3[OBJC_IVAR____TtC8Freeform34CRLDocumentSessionAnalyticsManager_hadEdit] = 0;
  *(void *)&v3[OBJC_IVAR____TtC8Freeform34CRLDocumentSessionAnalyticsManager_currentMode] = 0;
  v14(&v3[OBJC_IVAR____TtC8Freeform34CRLDocumentSessionAnalyticsManager_modeBeganDate], 1, 1, v13);
  *(void *)&v3[OBJC_IVAR____TtC8Freeform34CRLDocumentSessionAnalyticsManager_timeSpentInEditMode] = 0;
  *(void *)&v3[OBJC_IVAR____TtC8Freeform34CRLDocumentSessionAnalyticsManager_editModeBeganCount] = 0;
  v25.receiver = v3;
  v25.super_class = (Class)type metadata accessor for CRLDocumentSessionAnalyticsManager();
  uint64_t v15 = (char *)[super init];
  uint64_t v16 = *(void **)&v15[OBJC_IVAR____TtC8Freeform34CRLDocumentSessionAnalyticsManager_currentMode];
  *(void *)&v15[OBJC_IVAR____TtC8Freeform34CRLDocumentSessionAnalyticsManager_currentMode] = a3;
  v17 = v15;
  id v18 = a3;

  id v19 = [self defaultCenter];
  uint64_t v20 = qword_10166F810;
  v21 = v17;
  if (v20 != -1) {
    swift_once();
  }
  [v19 addObserver:v21 selector:"beginSession:" name:qword_10171B700 object:a1];

  uint64_t v22 = qword_10166F818;
  v23 = v21;
  if (v22 != -1) {
    swift_once();
  }
  [v19 addObserver:v23 selector:"endSession:" name:qword_10171B708 object:a1];

  *(void *)&v23[OBJC_IVAR____TtC8Freeform34CRLDocumentSessionAnalyticsManager_commandControllerNotificationSubscriber] = &_swiftEmptySetSingleton;
  swift_bridgeObjectRelease();
  return v23;
}

Swift::Void __swiftcall CRLDocumentSessionAnalyticsManager.beginSession()()
{
  uint64_t v1 = type metadata accessor for Date();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1, v3);
  uint64_t v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1005057FC(&qword_101672EB0);
  __chkstk_darwin(v6 - 8, v7);
  uint64_t v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10, v11);
  uint64_t v13 = (char *)&v25 - v12;
  uint64_t v14 = v0 + OBJC_IVAR____TtC8Freeform34CRLDocumentSessionAnalyticsManager_sessionBeganDate;
  swift_beginAccess();
  sub_100541258(v14, (uint64_t)v13);
  int v15 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v2 + 48))(v13, 1, v1);
  sub_100517604((uint64_t)v13);
  if (v15 == 1)
  {
    Date.init()();
    uint64_t v16 = *(void (**)(char *, char *, uint64_t))(v2 + 16);
    v16(v9, v5, v1);
    v17 = *(void (**)(char *, void, uint64_t, uint64_t))(v2 + 56);
    v17(v9, 0, 1, v1);
    swift_beginAccess();
    sub_1005E8B94((uint64_t)v9, v14);
    swift_endAccess();
    id v18 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform34CRLDocumentSessionAnalyticsManager_currentMode);
    if (v18)
    {
      uint64_t v26 = v17;
      sub_10050BF48(0, &qword_101689E60);
      uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
      id v20 = v18;
      if ([v20 isKindOfClass:ObjCClassFromMetadata])
      {
        uint64_t v21 = *(void *)(v0 + OBJC_IVAR____TtC8Freeform34CRLDocumentSessionAnalyticsManager_editModeBeganCount);
        BOOL v22 = __OFADD__(v21, 1);
        uint64_t v23 = v21 + 1;
        if (v22)
        {
          __break(1u);
          return;
        }
        *(void *)(v0 + OBJC_IVAR____TtC8Freeform34CRLDocumentSessionAnalyticsManager_editModeBeganCount) = v23;
      }

      v17 = v26;
    }
    v16(v9, v5, v1);
    v17(v9, 0, 1, v1);
    uint64_t v24 = v0 + OBJC_IVAR____TtC8Freeform34CRLDocumentSessionAnalyticsManager_modeBeganDate;
    swift_beginAccess();
    sub_1005E8B94((uint64_t)v9, v24);
    swift_endAccess();
    (*(void (**)(char *, uint64_t))(v2 + 8))(v5, v1);
  }
}

Swift::Void __swiftcall CRLDocumentSessionAnalyticsManager.endSession(isClosingDocument:)(Swift::Bool isClosingDocument)
{
  sub_1009B3160();
  uint64_t v4 = v3;
  if (*(void *)(v3 + 16) == 7)
  {
    uint64_t v5 = self;
    NSString v6 = String._bridgeToObjectiveC()();
    sub_10050BF48(0, (unint64_t *)&qword_101672E50);
    Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v5 sendEventInDomain:v6 lazily:1 eventPayload:isa];

    if (!isClosingDocument) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  if (qword_10166F9C8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v8 = (void *)static OS_os_log.crlDefault;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117D8C0;
  uint64_t v11 = *(void *)(v1
                  + OBJC_IVAR____TtC8Freeform34CRLDocumentSessionAnalyticsManager_documentSessionEndedAnalyticsDomain);
  uint64_t v10 = *(void *)(v1
                  + OBJC_IVAR____TtC8Freeform34CRLDocumentSessionAnalyticsManager_documentSessionEndedAnalyticsDomain
                  + 8);
  *(void *)(inited + 56) = &type metadata for String;
  *(void *)(inited + 64) = sub_100528BE4();
  *(void *)(inited + 32) = v11;
  *(void *)(inited + 40) = v10;
  *(void *)(inited + 96) = sub_1005057FC((uint64_t *)&unk_1016A8B40);
  *(void *)(inited + 104) = sub_1009B3C38();
  *(void *)(inited + 72) = v4;
  id v12 = v8;
  swift_bridgeObjectRetain();
  uint64_t v13 = static os_log_type_t.error.getter();
  sub_100BAC898((uint64_t)v12, (uint64_t)&_mh_execute_header, v13, (uint64_t)"Incomplete payload generated for %@ analytics event, payload = %@", 65, 2, inited);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  if (isClosingDocument)
  {
LABEL_7:
    id v14 = [self defaultCenter];
    [v14 removeObserver:v1];
    *(void *)(v1
              + OBJC_IVAR____TtC8Freeform34CRLDocumentSessionAnalyticsManager_commandControllerNotificationSubscriber) = &_swiftEmptySetSingleton;

    swift_bridgeObjectRelease();
  }
LABEL_8:
  sub_1009B3718();
}

void sub_1009B3160()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1005057FC(&qword_101672EB0);
  __chkstk_darwin(v2 - 8, v3);
  uint64_t v68 = (uint64_t)&v62 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5, v6);
  uint64_t v8 = (char *)&v62 - v7;
  uint64_t v9 = type metadata accessor for Date();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9, v11);
  v67 = (char *)&v62 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13, v14);
  uint64_t v16 = (char *)&v62 - v15;
  __chkstk_darwin(v17, v18);
  id v20 = (char *)&v62 - v19;
  uint64_t v21 = v1 + OBJC_IVAR____TtC8Freeform34CRLDocumentSessionAnalyticsManager_sessionBeganDate;
  swift_beginAccess();
  sub_100541258(v21, (uint64_t)v8);
  BOOL v22 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
  uint64_t v23 = &selRef_alignCenter_;
  if (v22(v8, 1, v9) == 1)
  {
    sub_100517604((uint64_t)v8);
    uint64_t v24 = _swiftEmptyDictionarySingleton;
LABEL_13:
    uint64_t v49 = *(void *)(v1 + OBJC_IVAR____TtC8Freeform34CRLDocumentSessionAnalyticsManager_hadEditKey);
    uint64_t v50 = *(void *)(v1 + OBJC_IVAR____TtC8Freeform34CRLDocumentSessionAnalyticsManager_hadEditKey + 8);
    uint64_t v51 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC8Freeform34CRLDocumentSessionAnalyticsManager_hadEdit);
    id v52 = objc_allocWithZone((Class)NSNumber);
    swift_bridgeObjectRetain();
    id v53 = [v52 initWithBool:v51];
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v70 = v24;
    sub_100973904((uint64_t)v53, v49, v50, isUniquelyReferenced_nonNull_native);
    v55 = v70;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v56 = *(void *)(v1 + OBJC_IVAR____TtC8Freeform34CRLDocumentSessionAnalyticsManager_editModeBeganCountKey);
    uint64_t v57 = *(void *)(v1 + OBJC_IVAR____TtC8Freeform34CRLDocumentSessionAnalyticsManager_editModeBeganCountKey + 8);
    uint64_t v58 = *(void *)(v1 + OBJC_IVAR____TtC8Freeform34CRLDocumentSessionAnalyticsManager_editModeBeganCount);
    id v59 = objc_allocWithZone((Class)NSNumber);
    swift_bridgeObjectRetain();
    id v60 = [v59 v23[183] v58];
    char v61 = swift_isUniquelyReferenced_nonNull_native();
    v70 = v55;
    sub_100973904((uint64_t)v60, v56, v57, v61);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return;
  }
  uint64_t v66 = v10;
  v63 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
  v63(v20, v8, v9);
  Date.init()();
  v64 = v20;
  v65 = v16;
  Date.timeIntervalSince(_:)();
  double v26 = v25;
  uint64_t v27 = *(void *)(v1 + OBJC_IVAR____TtC8Freeform34CRLDocumentSessionAnalyticsManager_durationKey);
  uint64_t v28 = *(void *)(v1 + OBJC_IVAR____TtC8Freeform34CRLDocumentSessionAnalyticsManager_durationKey + 8);
  id v29 = objc_allocWithZone((Class)NSNumber);
  swift_bridgeObjectRetain();
  id v30 = [v29 initWithDouble:v26];
  char v31 = swift_isUniquelyReferenced_nonNull_native();
  v69 = _swiftEmptyDictionarySingleton;
  sub_100973904((uint64_t)v30, v27, v28, v31);
  v32 = v69;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v33 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform34CRLDocumentSessionAnalyticsManager_currentMode);
  if (v33)
  {
    uint64_t v34 = v1 + OBJC_IVAR____TtC8Freeform34CRLDocumentSessionAnalyticsManager_modeBeganDate;
    swift_beginAccess();
    uint64_t v35 = v34;
    uint64_t v36 = v68;
    sub_100541258(v35, v68);
    if (v22((char *)v36, 1, v9) == 1)
    {
      sub_100517604(v36);
    }
    else
    {
      v37 = v67;
      v63(v67, (char *)v36, v9);
      sub_10050BF48(0, &qword_101689E60);
      uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
      id v39 = v33;
      if ([v39 isKindOfClass:ObjCClassFromMetadata])
      {
        Date.timeIntervalSince(_:)();
        *(double *)(v1 + OBJC_IVAR____TtC8Freeform34CRLDocumentSessionAnalyticsManager_timeSpentInEditMode) = v40 + *(double *)(v1 + OBJC_IVAR____TtC8Freeform34CRLDocumentSessionAnalyticsManager_timeSpentInEditMode);
      }
      (*(void (**)(char *, uint64_t))(v66 + 8))(v37, v9);
    }
  }
  double v41 = round(*(double *)(v1 + OBJC_IVAR____TtC8Freeform34CRLDocumentSessionAnalyticsManager_timeSpentInEditMode)/ v26* 100.0);
  if ((~*(void *)&v41 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_15;
  }
  if (v41 <= -9.22337204e18)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  if (v41 < 9.22337204e18)
  {
    uint64_t v42 = (uint64_t)v41;
    uint64_t v43 = *(void *)(v1 + OBJC_IVAR____TtC8Freeform34CRLDocumentSessionAnalyticsManager_percentageTimeSpentInEditModeKey);
    uint64_t v44 = *(void *)(v1
                    + OBJC_IVAR____TtC8Freeform34CRLDocumentSessionAnalyticsManager_percentageTimeSpentInEditModeKey
                    + 8);
    id v45 = objc_allocWithZone((Class)NSNumber);
    swift_bridgeObjectRetain();
    uint64_t v23 = &selRef_alignCenter_;
    id v46 = [v45 initWithInteger:v42];
    char v47 = swift_isUniquelyReferenced_nonNull_native();
    v70 = v32;
    sub_100973904((uint64_t)v46, v43, v44, v47);
    uint64_t v24 = v70;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v48 = *(void (**)(char *, uint64_t))(v66 + 8);
    v48(v65, v9);
    v48(v64, v9);
    goto LABEL_13;
  }
LABEL_16:
  __break(1u);
}

uint64_t sub_1009B3718()
{
  uint64_t v1 = sub_1005057FC(&qword_101672EB0);
  __chkstk_darwin(v1 - 8, v2);
  uint64_t v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for Date();
  uint64_t v6 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56);
  v6(v4, 1, 1, v5);
  uint64_t v7 = v0 + OBJC_IVAR____TtC8Freeform34CRLDocumentSessionAnalyticsManager_sessionBeganDate;
  swift_beginAccess();
  sub_1005E8B94((uint64_t)v4, v7);
  swift_endAccess();
  *(unsigned char *)(v0 + OBJC_IVAR____TtC8Freeform34CRLDocumentSessionAnalyticsManager_hadEdit) = 0;
  v6(v4, 1, 1, v5);
  uint64_t v8 = v0 + OBJC_IVAR____TtC8Freeform34CRLDocumentSessionAnalyticsManager_modeBeganDate;
  swift_beginAccess();
  sub_1005E8B94((uint64_t)v4, v8);
  uint64_t result = swift_endAccess();
  *(void *)(v0 + OBJC_IVAR____TtC8Freeform34CRLDocumentSessionAnalyticsManager_timeSpentInEditMode) = 0;
  *(void *)(v0 + OBJC_IVAR____TtC8Freeform34CRLDocumentSessionAnalyticsManager_editModeBeganCount) = 0;
  return result;
}

void CRLDocumentSessionAnalyticsManager.init()()
{
}

id CRLDocumentSessionAnalyticsManager.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLDocumentSessionAnalyticsManager();
  return [super dealloc];
}

unint64_t sub_1009B3C38()
{
  unint64_t result = qword_101689E80;
  if (!qword_101689E80)
  {
    sub_100522D34((uint64_t *)&unk_1016A8B40);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101689E80);
  }
  return result;
}

uint64_t type metadata accessor for CRLDocumentSessionAnalyticsManager()
{
  uint64_t result = qword_101689F00;
  if (!qword_101689F00) {
    return swift_getSingletonMetadata();
  }
  return result;
}

id _s8Freeform34CRLDocumentSessionAnalyticsManagerC18didSetDocumentMode_4from8animatedySo014CRLiOSDocumentI0C_AHSbtF_0(void *a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_1005057FC(&qword_101672EB0);
  __chkstk_darwin(v6 - 8, v7);
  uint64_t v9 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10, v11);
  uint64_t v13 = (char *)&v34 - v12;
  uint64_t v14 = type metadata accessor for Date();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14, v16);
  uint64_t v18 = (char *)&v34 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19, v20);
  BOOL v22 = (char *)&v34 - v21;
  Date.init()();
  sub_10050BF48(0, &qword_101689E60);
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id result = [a1 isKindOfClass:ObjCClassFromMetadata];
  if (result)
  {
    uint64_t v25 = *(void *)(v3 + OBJC_IVAR____TtC8Freeform34CRLDocumentSessionAnalyticsManager_editModeBeganCount);
    BOOL v26 = __OFADD__(v25, 1);
    uint64_t v27 = v25 + 1;
    if (v26)
    {
      __break(1u);
      return result;
    }
    *(void *)(v3 + OBJC_IVAR____TtC8Freeform34CRLDocumentSessionAnalyticsManager_editModeBeganCount) = v27;
  }
  uint64_t v35 = a1;
  uint64_t v28 = a2;
  uint64_t v29 = v3 + OBJC_IVAR____TtC8Freeform34CRLDocumentSessionAnalyticsManager_modeBeganDate;
  swift_beginAccess();
  sub_100541258(v29, (uint64_t)v13);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
  {
    sub_100517604((uint64_t)v13);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v18, v13, v14);
    if ([v28 isKindOfClass:ObjCClassFromMetadata])
    {
      Date.timeIntervalSince(_:)();
      *(double *)(v3 + OBJC_IVAR____TtC8Freeform34CRLDocumentSessionAnalyticsManager_timeSpentInEditMode) = v30 + *(double *)(v3 + OBJC_IVAR____TtC8Freeform34CRLDocumentSessionAnalyticsManager_timeSpentInEditMode);
    }
    (*(void (**)(char *, uint64_t))(v15 + 8))(v18, v14);
  }
  char v31 = v35;
  v32 = *(void **)(v3 + OBJC_IVAR____TtC8Freeform34CRLDocumentSessionAnalyticsManager_currentMode);
  *(void *)(v3 + OBJC_IVAR____TtC8Freeform34CRLDocumentSessionAnalyticsManager_currentMode) = v35;
  id v33 = v31;

  (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v9, v22, v14);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v9, 0, 1, v14);
  swift_beginAccess();
  sub_1005E8B94((uint64_t)v9, v29);
  swift_endAccess();
  return (id)(*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v22, v14);
}

uint64_t sub_1009B4004()
{
  return type metadata accessor for CRLDocumentSessionAnalyticsManager();
}

void sub_1009B400C()
{
  sub_1005E873C();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t sub_1009B40E0()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for UTType();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2, v4);
  uint64_t v6 = &v16[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = (__CFData *)[objc_allocWithZone((Class)NSMutableData) init];
  static UTType.heic.getter();
  UTType.identifier.getter();
  (*(void (**)(unsigned char *, uint64_t))(v3 + 8))(v6, v2);
  uint64_t v8 = (__CFString *)String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  uint64_t v9 = CGImageDestinationCreateWithData(v7, v8, 1uLL, 0);

  if (!v9) {
    goto LABEL_5;
  }
  sub_1005057FC(&qword_101689F10);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117E810;
  *(void *)(inited + 32) = kCGImageDestinationLossyCompressionQuality;
  *(void *)(inited + 40) = 0x3FE999999999999ALL;
  CFStringRef v11 = (id)kCGImageDestinationLossyCompressionQuality;
  sub_100A3C418(inited);
  type metadata accessor for CFString(0);
  sub_1009B4308();
  v12.super.Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  CGImageDestinationAddImage(v9, v1, v12.super.isa);
  if (!CGImageDestinationFinalize(v9))
  {

LABEL_5:
    return 0;
  }
  uint64_t v13 = v7;
  uint64_t v14 = static Data._unconditionallyBridgeFromObjectiveC(_:)();

  return v14;
}

unint64_t sub_1009B4308()
{
  unint64_t result = qword_101671688;
  if (!qword_101671688)
  {
    type metadata accessor for CFString(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101671688);
  }
  return result;
}

unint64_t sub_1009B4364()
{
  unint64_t result = qword_101689F18;
  if (!qword_101689F18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101689F18);
  }
  return result;
}

unint64_t sub_1009B43BC()
{
  unint64_t result = qword_101689F20;
  if (!qword_101689F20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101689F20);
  }
  return result;
}

uint64_t sub_1009B4410()
{
  return *(void *)(swift_getOpaqueTypeConformance2() + 8);
}

uint64_t sub_1009B4444()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1009B4460(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[11] = a3;
  v4[12] = a4;
  v4[9] = a1;
  v4[10] = a2;
  type metadata accessor for CRLBoardIdentifier(0);
  v4[13] = swift_task_alloc();
  v4[14] = type metadata accessor for CRLBoardEntity();
  v4[15] = swift_task_alloc();
  v4[16] = swift_task_alloc();
  v4[17] = swift_task_alloc();
  v4[18] = swift_task_alloc();
  v4[19] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for Logger();
  v4[20] = v5;
  v4[21] = *(void *)(v5 - 8);
  v4[22] = swift_task_alloc();
  return _swift_task_switch(sub_1009B45B4, 0, 0);
}

uint64_t sub_1009B45B4()
{
  if (qword_10166FB50 != -1) {
    swift_once();
  }
  swift_beginAccess();
  id v1 = (id)static OS_os_log.appIntents;
  Logger.init(_:)();
  IntentParameter.wrappedValue.getter();
  if (*(unsigned char *)(v0 + 233))
  {
    if (*(unsigned char *)(v0 + 233) == 1)
    {
      BOOL v2 = 0;
    }
    else
    {
      uint64_t v3 = *(void *)(v0 + 152);
      IntentParameter.wrappedValue.getter();
      EntityProperty.wrappedValue.getter();
      char v4 = *(unsigned char *)(v0 + 232);
      sub_100568A20(v3, (uint64_t (*)(void))type metadata accessor for CRLBoardEntity);
      BOOL v2 = (v4 & 1) == 0;
    }
  }
  else
  {
    BOOL v2 = 1;
  }
  *(unsigned char *)(v0 + 235) = v2;
  uint64_t v5 = *(void *)(v0 + 144);
  uint64_t v6 = *(void *)(v0 + 104);
  AppDependency.wrappedValue.getter();
  *(void *)(v0 + 184) = *(void *)(v0 + 48);
  sub_1005057FC(&qword_101683000);
  uint64_t v7 = type metadata accessor for CRLBoardIdentifierAndValue(0);
  unint64_t v8 = (*(unsigned __int8 *)(*(void *)(v7 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v7 - 8) + 80);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_10117E810;
  uint64_t v10 = v9 + v8;
  IntentParameter.wrappedValue.getter();
  sub_1006C2AF4(v5, v6, type metadata accessor for CRLBoardIdentifier);
  sub_100568A20(v5, (uint64_t (*)(void))type metadata accessor for CRLBoardEntity);
  sub_1005394E4(v6, v10);
  *(unsigned char *)(v10 + *(int *)(v7 + 20)) = v2;
  uint64_t v11 = sub_100CDDA18(v9);
  *(void *)(v0 + 192) = v11;
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  *(void *)(v0 + 200) = type metadata accessor for MainActor();
  *(void *)(v0 + 208) = static MainActor.shared.getter();
  NSDictionary v12 = (void *)swift_task_alloc();
  *(void *)(v0 + 216) = v12;
  *NSDictionary v12 = v0;
  v12[1] = sub_1009B48A8;
  return sub_100EE1A5C(v11);
}

uint64_t sub_1009B48A8()
{
  *(void *)(*(void *)v1 + 224) = v0;
  swift_task_dealloc();
  uint64_t v3 = dispatch thunk of Actor.unownedExecutor.getter();
  if (v0) {
    char v4 = sub_1009B4C98;
  }
  else {
    char v4 = sub_1009B4A00;
  }
  return _swift_task_switch(v4, v3, v2);
}

uint64_t sub_1009B4A00()
{
  uint64_t v1 = *(void **)(v0 + 184);
  swift_release();
  swift_bridgeObjectRelease();

  return _swift_task_switch(sub_1009B4A78, 0, 0);
}

uint64_t sub_1009B4A78()
{
  char v1 = *(unsigned char *)(v0 + 235);
  uint64_t v2 = *(void *)(v0 + 168);
  uint64_t v10 = *(void *)(v0 + 160);
  uint64_t v11 = *(void *)(v0 + 176);
  uint64_t v3 = *(void *)(v0 + 144);
  uint64_t v4 = *(void *)(v0 + 128);
  uint64_t v5 = *(void *)(v0 + 136);
  uint64_t v6 = *(void *)(v0 + 120);
  IntentParameter.wrappedValue.getter();
  *(unsigned char *)(v0 + 234) = v1;
  EntityProperty.wrappedValue.setter();
  sub_100568A20(v3, (uint64_t (*)(void))type metadata accessor for CRLBoardEntity);
  IntentParameter.wrappedValue.getter();
  IntentParameter.wrappedValue.getter();
  uint64_t v7 = sub_1009D09EC();
  sub_1006C2AF4(v5, v4, (uint64_t (*)(void))type metadata accessor for CRLBoardEntity);
  sub_1006C2AF4(v4, v6, (uint64_t (*)(void))type metadata accessor for CRLBoardEntity);
  IntentParameter.wrappedValue.setter();
  sub_100568A20(v4, (uint64_t (*)(void))type metadata accessor for CRLBoardEntity);
  sub_100568A20(v5, (uint64_t (*)(void))type metadata accessor for CRLBoardEntity);
  *(void *)(v0 + 64) = v7;
  sub_100651FFC((unint64_t *)&qword_101675F88, (void (*)(uint64_t))type metadata accessor for CRLBoardEntity);
  sub_1005F6380();
  static IntentResult.result<A, B>(value:opensIntent:)();
  swift_release();
  sub_100568A20(v3, (uint64_t (*)(void))type metadata accessor for CRLBoardEntity);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v11, v10);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v8 = *(uint64_t (**)(void))(v0 + 8);
  return v8();
}

uint64_t sub_1009B4C98()
{
  swift_release();
  return _swift_task_switch(sub_1009B4D00, 0, 0);
}

uint64_t sub_1009B4D00()
{
  uint64_t v18 = v0;
  uint64_t v1 = (void *)v0[23];
  swift_bridgeObjectRelease();

  swift_retain();
  swift_retain();
  swift_retain();
  swift_errorRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_errorRetain();
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = v0[18];
    uint64_t v5 = v0[13];
    uint64_t v6 = swift_slowAlloc();
    uint64_t v16 = (void *)swift_slowAlloc();
    uint64_t v17 = swift_slowAlloc();
    *(_DWORD *)uint64_t v6 = 136315394;
    IntentParameter.wrappedValue.getter();
    sub_1006C2AF4(v4, v5, type metadata accessor for CRLBoardIdentifier);
    sub_100568A20(v4, (uint64_t (*)(void))type metadata accessor for CRLBoardEntity);
    uint64_t v7 = sub_100753038();
    unint64_t v9 = v8;
    sub_100568A20(v5, type metadata accessor for CRLBoardIdentifier);
    v0[5] = sub_100E04348(v7, v9, &v17);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_release_n();
    swift_release_n();
    swift_release_n();
    *(_WORD *)(v6 + 12) = 2112;
    swift_errorRetain();
    uint64_t v10 = _swift_stdlib_bridgeErrorToNSError();
    v0[7] = v10;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v16 = v10;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Problem changing object connectors visibility for board: %s - %@", (uint8_t *)v6, 0x16u);
    sub_1005057FC(&qword_101678028);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
    swift_release_n();
    swift_release_n();
    swift_errorRelease();
    swift_errorRelease();
  }
  uint64_t v11 = v0[21];
  uint64_t v12 = v0[22];
  uint64_t v13 = v0[20];
  type metadata accessor for AppIntentError();
  sub_100651FFC(&qword_101675F98, (void (*)(uint64_t))&type metadata accessor for AppIntentError);
  swift_allocError();
  static AppIntentError.Unrecoverable.unknown.getter();
  swift_willThrow();
  swift_errorRelease();
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v12, v13);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v14 = (uint64_t (*)(void))v0[1];
  return v14();
}

uint64_t sub_1009B5120()
{
  uint64_t v0 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0, v2);
  uint64_t v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for Locale();
  __chkstk_darwin(v5 - 8, v6);
  uint64_t v7 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v7 - 8, v8);
  uint64_t v9 = type metadata accessor for LocalizedStringResource();
  sub_100568B28(v9, qword_10171B178);
  sub_100556B74(v9, (uint64_t)qword_10171B178);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v4, enum case for LocalizedStringResource.BundleDescription.main(_:), v0);
  return LocalizedStringResource.init(_:table:locale:bundle:comment:)();
}

uint64_t sub_1009B5318()
{
  uint64_t v0 = sub_1005057FC(&qword_101689F50);
  __chkstk_darwin(v0 - 8, v1);
  uint64_t v2 = sub_1005057FC(&qword_101689F58);
  __chkstk_darwin(v2, v3);
  sub_1009B6050();
  ParameterSummaryString.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v4._countAndFlagsBits = 0;
  v4._object = (void *)0xE000000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v4);
  swift_getKeyPath();
  sub_1005057FC(&qword_101689F60);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)();
  swift_release();
  v5._object = (void *)0x8000000101265600;
  v5._countAndFlagsBits = 0xD000000000000017;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v5);
  swift_getKeyPath();
  sub_1005057FC(&qword_101689F68);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)();
  swift_release();
  v6._countAndFlagsBits = 0;
  v6._object = (void *)0xE000000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v6);
  ParameterSummaryString.init(stringInterpolation:)();
  return IntentParameterSummary.init(_:table:)();
}

uint64_t sub_1009B5504@<X0>(uint64_t a1@<X8>)
{
  if (qword_10166F5E8 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for LocalizedStringResource();
  uint64_t v3 = sub_100556B74(v2, (uint64_t)qword_10171B178);
  Swift::String v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);

  return v4(a1, v3, v2);
}

uint64_t sub_1009B55B0(uint64_t a1)
{
  uint64_t v4 = *v1;
  uint64_t v5 = v1[1];
  uint64_t v6 = v1[2];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_100528488;
  return sub_1009B4460(a1, v4, v5, v6);
}

unsigned char *sub_1009B5664@<X0>(void *a1@<X8>)
{
  unint64_t result = sub_1009B5718();
  *a1 = result;
  a1[1] = v3;
  a1[2] = v4;
  return result;
}

uint64_t sub_1009B5690(uint64_t a1)
{
  unint64_t v2 = sub_1009B6050();

  return static AppIntent.persistentIdentifier.getter(a1, v2);
}

ValueMetadata *type metadata accessor for CRLChangeBoardObjectConnectorsIntent()
{
  return &type metadata for CRLChangeBoardObjectConnectorsIntent;
}

uint64_t sub_1009B56DC()
{
  return sub_100523288(&qword_101689F30, &qword_101689F38);
}

unsigned char *sub_1009B5718()
{
  uint64_t v63 = type metadata accessor for InputConnectionBehavior();
  uint64_t v65 = *(void *)(v63 - 8);
  __chkstk_darwin(v63, v0);
  uint64_t v62 = &v45[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v2 = sub_1005057FC(&qword_101673B38);
  __chkstk_darwin(v2 - 8, v3);
  char v61 = &v45[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v5, v6);
  id v60 = &v45[-v7];
  uint64_t v8 = sub_1005057FC(&qword_101691F20);
  __chkstk_darwin(v8 - 8, v9);
  id v59 = &v45[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v11 = sub_1005057FC(&qword_101673B40);
  __chkstk_darwin(v11 - 8, v12);
  uint64_t v58 = &v45[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v14 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14, v16);
  uint64_t v18 = &v45[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v19 = type metadata accessor for Locale();
  __chkstk_darwin(v19 - 8, v20);
  uint64_t v21 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v21 - 8, v22);
  uint64_t v23 = type metadata accessor for LocalizedStringResource();
  uint64_t v55 = v23;
  uint64_t v64 = *(void *)(v23 - 8);
  __chkstk_darwin(v23, v24);
  __chkstk_darwin(v25, v26);
  v54 = &v45[-v27];
  uint64_t v57 = sub_1005057FC(&qword_101673B48);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t v28 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  uint64_t v29 = *(void (**)(unsigned char *, uint64_t, uint64_t))(v15 + 104);
  v29(v18, enum case for LocalizedStringResource.BundleDescription.main(_:), v14);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t v30 = v28;
  unsigned int v46 = v28;
  uint64_t v48 = v14;
  v29(v18, v28, v14);
  char v47 = v29;
  uint64_t v49 = v15 + 104;
  char v31 = v58;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  v32 = *(void (**)(unsigned char *, void, uint64_t, uint64_t))(v64 + 56);
  v64 += 56;
  uint64_t v56 = v32;
  v32(v31, 0, 1, v23);
  uint64_t v33 = type metadata accessor for CRLBoardEntity();
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56))(v59, 1, 1, v33);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  v29(v18, v30, v14);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  uint64_t v34 = v60;
  IntentDialog.init(_:)();
  uint64_t v35 = type metadata accessor for IntentDialog();
  uint64_t v36 = *(void *)(v35 - 8);
  v37 = *(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v36 + 56);
  uint64_t v50 = v37;
  uint64_t v51 = v36 + 56;
  v37(v34, 0, 1, v35);
  v37(v61, 1, 1, v35);
  unsigned int v52 = enum case for InputConnectionBehavior.default(_:);
  v38 = *(void (**)(void))(v65 + 104);
  v65 += 104;
  id v53 = (void (*)(unsigned char *, void, uint64_t))v38;
  v38(v62);
  sub_100651FFC((unint64_t *)&qword_101673B60, (void (*)(uint64_t))type metadata accessor for CRLBoardEntity);
  id v39 = v58;
  id v59 = (unsigned char *)IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:)();
  uint64_t v57 = sub_1005057FC(&qword_10167B020);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t v40 = v46;
  uint64_t v41 = v48;
  uint64_t v42 = v47;
  v47(v18, v46, v48);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  v42(v18, v40, v41);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  v56(v39, 0, 1, v55);
  char v68 = 0;
  uint64_t v43 = v50;
  v50(v60, 1, 1, v35);
  v43(v61, 1, 1, v35);
  v53(v62, v52, v63);
  sub_1006C2A4C();
  IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:supportedValues:)();
  sub_1005057FC(&qword_101673B50);
  unint64_t v66 = 0xD00000000000001FLL;
  unint64_t v67 = 0x800000010123B260;
  AnyHashable.init<A>(_:)();
  type metadata accessor for AppDependencyManager();
  static AppDependencyManager.shared.getter();
  AppDependency.__allocating_init(key:manager:)();
  return v59;
}

unint64_t sub_1009B6050()
{
  unint64_t result = qword_101689F40;
  if (!qword_101689F40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_101689F40);
  }
  return result;
}

uint64_t sub_1009B60A4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1009B60D0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

id sub_1009B6148(uint64_t a1, id a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = (char *)objc_allocWithZone(v3);
  uint64_t v7 = &v6[OBJC_IVAR____TtC8Freeform19CRLCommandSetShadow_id];
  uint64_t v8 = type metadata accessor for UUID();
  uint64_t v9 = *(void *)(v8 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v7, a1, v8);
  if (a2)
  {
    uint64_t v10 = v6;
    a2 = a2;
    [a2 copy];
    _bridgeAnyObjectToAny(_:)();

    swift_unknownObjectRelease();
    sub_1009B6930();
    swift_dynamicCast();
    *(void *)&v10[OBJC_IVAR____TtC8Freeform19CRLCommandSetShadow_shadow] = v13;
  }
  else
  {
    *(void *)&v6[OBJC_IVAR____TtC8Freeform19CRLCommandSetShadow_shadow] = 0;
  }
  v14.receiver = v6;
  v14.super_class = v3;
  [super init];

  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(a1, v8);
  return v11;
}

void sub_1009B64CC(void *a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t v5 = v3;
  Class isa = UUID._bridgeToObjectiveC()().super.isa;
  id v9 = [a1 getBoardItemForUUID:isa];

  if (v9)
  {
    uint64_t v10 = v9;
    sub_10103405C((uint64_t)v10, (uint64_t)&off_101518040);

    if (v4)
    {
    }
    else
    {
      id v11 = *(void **)(v5 + OBJC_IVAR____TtC8Freeform19CRLCommandSetShadow_shadow);
      uint64_t v12 = *(void (**)(void *))((swift_isaMask & *v10) + 0x150);
      id v13 = v11;
      v12(v11);
      objc_super v14 = v10;
      sub_101023724((uint64_t)v14, (uint64_t)&off_101518040, a3);
    }
  }
  else
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"commit(with:transaction:undoable:)", 34, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandSetShadow.swift", 91, 2, 32, (uint64_t)"Unable to retrieve board item.", 30, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_100586FD4((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Unable to retrieve board item.");
    sub_1005871AC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"commit(with:transaction:undoable:)", 34, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandSetShadow.swift", 91, 2, 32);
    SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v15, v16);
    _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
}

void sub_1009B6710()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC8Freeform19CRLCommandSetShadow_id;
  uint64_t v2 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform19CRLCommandSetShadow_shadow);
}

id sub_1009B678C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLCommandSetShadow();
  return [super dealloc];
}

uint64_t sub_1009B6844()
{
  return type metadata accessor for CRLCommandSetShadow();
}

uint64_t type metadata accessor for CRLCommandSetShadow()
{
  uint64_t result = qword_101689F98;
  if (!qword_101689F98) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1009B6898()
{
  uint64_t result = type metadata accessor for UUID();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

unint64_t sub_1009B6930()
{
  unint64_t result = qword_101684F80;
  if (!qword_101684F80)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_101684F80);
  }
  return result;
}

id sub_1009B6970(uint64_t a1, void *a2)
{
  uint64_t v5 = &v2[OBJC_IVAR____TtC8Freeform19CRLCommandSetShadow_id];
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v7 = *(void *)(v6 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v5, a1, v6);
  if (a2)
  {
    uint64_t v8 = v2;
    id v9 = a2;
    [v9 copy];
    _bridgeAnyObjectToAny(_:)();

    swift_unknownObjectRelease();
    sub_1009B6930();
    swift_dynamicCast();
    *(void *)&v8[OBJC_IVAR____TtC8Freeform19CRLCommandSetShadow_shadow] = v12;
  }
  else
  {
    *(void *)&v2[OBJC_IVAR____TtC8Freeform19CRLCommandSetShadow_shadow] = 0;
  }
  v13.receiver = v2;
  v13.super_class = (Class)type metadata accessor for CRLCommandSetShadow();
  id v10 = [super init];
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
  return v10;
}

uint64_t sub_1009B6AEC(uint64_t a1, uint64_t a2)
{
  v8[3] = &type metadata for UnsafeRawBufferPointer;
  v8[4] = &protocol witness table for UnsafeRawBufferPointer;
  v8[0] = a1;
  v8[1] = a2;
  objc_super v2 = sub_10050F848(v8, (uint64_t)&type metadata for UnsafeRawBufferPointer);
  uint64_t v3 = (unsigned char *)*v2;
  if (*v2 && (uint64_t v4 = (unsigned char *)v2[1], v5 = v4 - v3, v4 != v3))
  {
    if (v5 <= 14)
    {
      uint64_t v6 = sub_100CD835C(v3, v4);
    }
    else if ((unint64_t)v5 >= 0x7FFFFFFF)
    {
      uint64_t v6 = sub_1009B8614((uint64_t)v3, (uint64_t)v4);
    }
    else
    {
      uint64_t v6 = sub_1009B8590((uint64_t)v3, (uint64_t)v4);
    }
  }
  else
  {
    uint64_t v6 = 0;
  }
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v8);
  return v6;
}

uint64_t sub_1009B6BA8(unint64_t a1, unint64_t a2)
{
  *(void *)&long long v40 = a1;
  *((void *)&v40 + 1) = a2;
  swift_bridgeObjectRetain();
  sub_1005057FC(&qword_101689FE8);
  if (swift_dynamicCast())
  {
    sub_10053974C(v38, (uint64_t)&v41);
    sub_10050F848(&v41, v43);
    dispatch thunk of ContiguousBytes.withUnsafeBytes<A>(_:)();
    swift_bridgeObjectRelease();
    v38[0] = v40;
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v41);
    return *(void *)&v38[0];
  }
  uint64_t v39 = 0;
  memset(v38, 0, sizeof(v38));
  sub_1009B9034((uint64_t)v38);
  unint64_t v2 = a1;
  unint64_t v3 = a2;
  if ((a2 & 0x1000000000000000) == 0)
  {
    if ((a2 & 0x2000000000000000) != 0)
    {
      uint64_t v41 = a1;
      uint64_t v42 = a2 & 0xFFFFFFFFFFFFFFLL;
      uint64_t v6 = (char *)&v41 + (HIBYTE(a2) & 0xF);
      uint64_t v7 = &v41;
    }
    else
    {
      if ((a1 & 0x1000000000000000) != 0)
      {
        uint64_t v4 = (a2 & 0xFFFFFFFFFFFFFFFLL) + 32;
        uint64_t v5 = a1 & 0xFFFFFFFFFFFFLL;
      }
      else
      {
        uint64_t v4 = _StringObject.sharedUTF8.getter();
      }
      if (v4) {
        uint64_t v6 = (unsigned char *)(v4 + v5);
      }
      else {
        uint64_t v6 = 0;
      }
      uint64_t v7 = (uint64_t *)v4;
    }
    uint64_t v8 = sub_1009B8690(v7, v6);
    unint64_t v10 = v9;
    if (v9 >> 60 != 15)
    {
      swift_bridgeObjectRelease();
      *(void *)&v38[0] = v8;
      *((void *)&v38[0] + 1) = v10;
      return *(void *)&v38[0];
    }
    unint64_t v2 = a1;
    unint64_t v3 = a2;
    if ((a2 & 0x1000000000000000) == 0) {
      goto LABEL_14;
    }
LABEL_70:
    Swift::Int v11 = String.UTF8View._foreignCount()();
    goto LABEL_17;
  }
LABEL_69:
  uint64_t v8 = 0;
  unint64_t v10 = 0xF000000000000000;
  if ((v3 & 0x1000000000000000) != 0) {
    goto LABEL_70;
  }
LABEL_14:
  if ((v3 & 0x2000000000000000) != 0) {
    Swift::Int v11 = HIBYTE(v3) & 0xF;
  }
  else {
    Swift::Int v11 = v2 & 0xFFFFFFFFFFFFLL;
  }
LABEL_17:
  *(void *)&v38[0] = sub_1009B86F4(v11);
  *((void *)&v38[0] + 1) = v12;
  __chkstk_darwin(*(void *)&v38[0], v12);
  unint64_t v13 = (unint64_t)sub_1009B8064((void *(*)(uint64_t *__return_ptr, char *, char *))sub_1009B9094);
  uint64_t v16 = *((void *)&v38[0] + 1) >> 62;
  uint64_t v17 = v13;
  uint64_t v18 = v3;
  unint64_t v19 = v14;
  switch(*((void *)&v38[0] + 1) >> 62)
  {
    case 1:
      LODWORD(v20) = DWORD1(v38[0]) - LODWORD(v38[0]);
      if (__OFSUB__(DWORD1(v38[0]), v38[0])) {
        goto LABEL_73;
      }
      uint64_t v20 = (int)v20;
LABEL_23:
      if (v15 != v20)
      {
        if (v16)
        {
          if (v16 == 1) {
            uint64_t v24 = *(uint64_t *)&v38[0] >> 32;
          }
          else {
            uint64_t v24 = *(void *)(*(void *)&v38[0] + 24);
          }
        }
        else
        {
          uint64_t v24 = BYTE14(v38[0]);
        }
LABEL_61:
        if (v24 < v15)
        {
          __break(1u);
LABEL_73:
          __break(1u);
LABEL_74:
          __break(1u);
        }
        Data._Representation.replaceSubrange(_:with:count:)();
LABEL_63:
        swift_bridgeObjectRelease();
        goto LABEL_64;
      }
LABEL_29:
      if ((v3 & 0x2000000000000000) != 0) {
        unint64_t v25 = HIBYTE(v3) & 0xF;
      }
      else {
        unint64_t v25 = v13 & 0xFFFFFFFFFFFFLL;
      }
      *(void *)((char *)&v40 + 7) = 0;
      *(void *)&long long v40 = 0;
      if (4 * v25 == v14 >> 14) {
        goto LABEL_58;
      }
      LOBYTE(v26) = 0;
      uint64_t v27 = (v13 >> 59) & 1;
      if ((v3 & 0x1000000000000000) == 0) {
        LOBYTE(v27) = 1;
      }
      uint64_t v28 = 4 << v27;
      uint64_t v35 = v3 & 0xFFFFFFFFFFFFFFLL;
      uint64_t v33 = (uint64_t)v8;
      uint64_t v34 = (v3 & 0xFFFFFFFFFFFFFFFLL) + 32;
      break;
    case 2:
      uint64_t v22 = *(void *)(*(void *)&v38[0] + 16);
      uint64_t v21 = *(void *)(*(void *)&v38[0] + 24);
      BOOL v23 = __OFSUB__(v21, v22);
      uint64_t v20 = v21 - v22;
      if (!v23) {
        goto LABEL_23;
      }
      goto LABEL_74;
    case 3:
      if (!v15) {
        goto LABEL_29;
      }
      uint64_t v24 = 0;
      goto LABEL_61;
    default:
      uint64_t v20 = BYTE14(v38[0]);
      goto LABEL_23;
  }
  do
  {
    unint64_t v29 = v19 & 0xC;
    unint64_t v2 = v19;
    if (v29 == v28) {
      unint64_t v2 = sub_1009B7FE8(v19, v17, v18);
    }
    unint64_t v30 = v2 >> 16;
    if (v2 >> 16 >= v25)
    {
      __break(1u);
LABEL_67:
      __break(1u);
LABEL_68:
      __break(1u);
      goto LABEL_69;
    }
    if ((v18 & 0x1000000000000000) != 0)
    {
      unint64_t v2 = String.UTF8View._foreignSubscript(position:)();
      char v31 = v2;
      if (v29 != v28) {
        goto LABEL_47;
      }
    }
    else if ((v18 & 0x2000000000000000) != 0)
    {
      uint64_t v41 = v17;
      uint64_t v42 = v35;
      char v31 = *((unsigned char *)&v41 + v30);
      if (v29 != v28) {
        goto LABEL_47;
      }
    }
    else
    {
      unint64_t v2 = v34;
      if ((v17 & 0x1000000000000000) == 0) {
        unint64_t v2 = _StringObject.sharedUTF8.getter();
      }
      char v31 = *(unsigned char *)(v2 + v30);
      if (v29 != v28)
      {
LABEL_47:
        if ((v18 & 0x1000000000000000) == 0) {
          goto LABEL_48;
        }
        goto LABEL_51;
      }
    }
    unint64_t v2 = sub_1009B7FE8(v19, v17, v18);
    unint64_t v19 = v2;
    if ((v18 & 0x1000000000000000) == 0)
    {
LABEL_48:
      unint64_t v19 = (v19 & 0xFFFFFFFFFFFF0000) + 65540;
      goto LABEL_53;
    }
LABEL_51:
    if (v25 <= v19 >> 16) {
      goto LABEL_68;
    }
    unint64_t v2 = String.UTF8View._foreignIndex(after:)();
    unint64_t v19 = v2;
LABEL_53:
    *((unsigned char *)&v40 + v26) = v31;
    unsigned int v26 = v26 + 1;
    if ((v26 >> 8)) {
      goto LABEL_67;
    }
    BYTE14(v40) = v26;
    if (v26 == 14)
    {
      uint64_t v41 = v40;
      LODWORD(v42) = DWORD2(v40);
      WORD2(v42) = WORD6(v40);
      Data._Representation.append(contentsOf:)();
      LOBYTE(v26) = 0;
      BYTE14(v40) = 0;
    }
  }
  while (4 * v25 != v19 >> 14);
  uint64_t v8 = (unsigned char *)v33;
  if ((_BYTE)v26)
  {
    uint64_t v41 = v40;
    LODWORD(v42) = DWORD2(v40);
    WORD2(v42) = WORD6(v40);
    Data._Representation.append(contentsOf:)();
    sub_100514260(v33, v10);
    goto LABEL_63;
  }
LABEL_58:
  swift_bridgeObjectRelease();
  sub_100514260((uint64_t)v8, v10);
LABEL_64:
  swift_bridgeObjectRelease();
  return *(void *)&v38[0];
}

double CRL3DRotation.init(real:imag:)(double a1, double a2)
{
  return a2;
}

__n128 CRL3DRotation.init()()
{
  return (__n128)matrix_identity_float4x4.columns[3];
}

double CRL3DRotation.normalized.getter(float32x4_t a1)
{
  int8x16_t v1 = (int8x16_t)vmulq_f32(a1, a1);
  float32x2_t v2 = vadd_f32(*(float32x2_t *)v1.i8, (float32x2_t)*(_OWORD *)&vextq_s8(v1, v1, 8uLL));
  if (vaddv_f32(v2) == 0.0) {
    return 0.0;
  }
  unsigned __int32 v4 = vadd_f32(v2, (float32x2_t)vdup_lane_s32((int32x2_t)v2, 1)).u32[0];
  float32x2_t v5 = vrsqrte_f32((float32x2_t)v4);
  float32x2_t v6 = vmul_f32(v5, vrsqrts_f32((float32x2_t)v4, vmul_f32(v5, v5)));
  *(void *)&double result = vmulq_n_f32(a1, vmul_f32(v6, vrsqrts_f32((float32x2_t)v4, vmul_f32(v6, v6))).f32[0]).u64[0];
  return result;
}

double static CRL3DRotation.* infix(_:_:)(float32x4_t a1, float32x4_t a2)
{
  int32x4_t v2 = (int32x4_t)vnegq_f32(a2);
  int8x16_t v3 = (int8x16_t)vtrn2q_s32((int32x4_t)a2, vtrn1q_s32((int32x4_t)a2, v2));
  float32x4_t v4 = vmlaq_n_f32(vmulq_lane_f32((float32x4_t)vextq_s8((int8x16_t)a2, (int8x16_t)v2, 8uLL), *(float32x2_t *)a1.f32, 1), (float32x4_t)vextq_s8(v3, v3, 8uLL), a1.f32[0]);
  float32x4_t v5 = (float32x4_t)vrev64q_s32((int32x4_t)a2);
  v5.i32[0] = v2.i32[1];
  v5.i32[3] = v2.i32[2];
  *(void *)&double result = vaddq_f32(vmlaq_laneq_f32(vmulq_laneq_f32(a2, a1, 3), v5, a1, 2), v4).u64[0];
  return result;
}

double CRL3DRotation.init(angle:axis:)(float a1, float32x4_t a2)
{
  *(void *)&double result = vmulq_n_f32(a2, __sincosf_stret(a1 * 0.5).__sinval).u64[0];
  return result;
}

double sub_1009B71B4(float32x4_t a1, float32x4_t a2)
{
  float32x4_t v2 = vmulq_f32(a1, a2);
  if (vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v2, 2), vaddq_f32(v2, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v2.f32, 1))).f32[0] >= 0.0)
  {
    float32x4_t v33 = vaddq_f32(a1, a2);
    int32x4_t v34 = (int32x4_t)vmulq_f32(v33, v33);
    v34.i32[0] = vadd_f32((float32x2_t)*(_OWORD *)&vdupq_laneq_s32(v34, 2), vadd_f32(*(float32x2_t *)v34.i8, (float32x2_t)vdup_lane_s32(*(int32x2_t *)v34.i8, 1))).u32[0];
    float32x2_t v35 = vrsqrte_f32((float32x2_t)v34.u32[0]);
    float32x2_t v36 = vmul_f32(v35, vrsqrts_f32((float32x2_t)v34.u32[0], vmul_f32(v35, v35)));
    float32x4_t v37 = vmulq_n_f32(v33, vmul_f32(v36, vrsqrts_f32((float32x2_t)v34.u32[0], vmul_f32(v36, v36))).f32[0]);
    int32x4_t v38 = (int32x4_t)vmlaq_f32(vmulq_f32((float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v37, (int32x4_t)v37), (int8x16_t)v37, 0xCuLL), vnegq_f32(a1)), v37, (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)a1, (int32x4_t)a1), (int8x16_t)a1, 0xCuLL));
    unint64_t v32 = vextq_s8((int8x16_t)vuzp1q_s32(v38, v38), (int8x16_t)v38, 0xCuLL).u64[0];
  }
  else
  {
    int32x4_t v3 = (int32x4_t)vmulq_f32(a1, a1);
    v3.i32[0] = vadd_f32((float32x2_t)*(_OWORD *)&vdupq_laneq_s32(v3, 2), vadd_f32(*(float32x2_t *)v3.i8, (float32x2_t)vdup_lane_s32(*(int32x2_t *)v3.i8, 1))).u32[0];
    float32x2_t v4 = vrsqrte_f32((float32x2_t)v3.u32[0]);
    float32x2_t v5 = vmul_f32(v4, vrsqrts_f32((float32x2_t)v3.u32[0], vmul_f32(v4, v4)));
    v3.i32[0] = vmul_f32(v5, vrsqrts_f32((float32x2_t)v3.u32[0], vmul_f32(v5, v5))).u32[0];
    int32x4_t v6 = (int32x4_t)vmulq_f32(a2, a2);
    v6.i32[0] = vadd_f32((float32x2_t)*(_OWORD *)&vdupq_laneq_s32(v6, 2), vadd_f32(*(float32x2_t *)v6.i8, (float32x2_t)vdup_lane_s32(*(int32x2_t *)v6.i8, 1))).u32[0];
    float32x2_t v7 = vrsqrte_f32((float32x2_t)v6.u32[0]);
    float32x2_t v8 = vmul_f32(v7, vrsqrts_f32((float32x2_t)v6.u32[0], vmul_f32(v7, v7)));
    float32x4_t v9 = vaddq_f32(vmulq_n_f32(a1, *(float *)v3.i32), vmulq_n_f32(a2, vmul_f32(v8, vrsqrts_f32((float32x2_t)v6.u32[0], vmul_f32(v8, v8))).f32[0]));
    float32x4_t v10 = vmulq_f32(v9, v9);
    float v11 = vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v10, 2), vaddq_f32(v10, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v10.f32, 1))).f32[0];
    if (v11 <= 1.4211e-14)
    {
      float32x4_t v39 = vabsq_f32(a1);
      float v40 = v39.f32[1];
      float v41 = v39.f32[2];
      if (v39.f32[0] > v39.f32[1] || v39.f32[0] > v39.f32[2])
      {
        float32x4_t v42 = (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)a1, (int32x4_t)a1), (int8x16_t)a1, 0xCuLL);
        if (v40 <= v41)
        {
          float32x4_t v43 = vmulq_f32(a1, (float32x4_t)xmmword_10119B700);
          float32x4_t v44 = (float32x4_t)xmmword_10119B710;
        }
        else
        {
          float32x4_t v43 = vmulq_f32(a1, (float32x4_t)xmmword_10119B720);
          float32x4_t v44 = (float32x4_t)xmmword_10119B730;
        }
      }
      else
      {
        float32x4_t v42 = (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)a1, (int32x4_t)a1), (int8x16_t)a1, 0xCuLL);
        float32x4_t v43 = vmulq_f32(a1, (float32x4_t)xmmword_10119B6E0);
        float32x4_t v44 = (float32x4_t)xmmword_10119B6F0;
      }
      float32x4_t v45 = vmlaq_f32(v43, v44, v42);
      float32x4_t v46 = (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v45, (int32x4_t)v45), (int8x16_t)v45, 0xCuLL);
      int32x4_t v47 = (int32x4_t)vmulq_f32(v45, v45);
      v47.i32[0] = vadd_f32((float32x2_t)vdup_lane_s32(*(int32x2_t *)v47.i8, 1), vadd_f32((float32x2_t)*(_OWORD *)&vdupq_laneq_s32(v47, 2), *(float32x2_t *)v47.i8)).u32[0];
      float32x2_t v48 = vrsqrte_f32((float32x2_t)v47.u32[0]);
      float32x2_t v49 = vmul_f32(v48, vrsqrts_f32((float32x2_t)v47.u32[0], vmul_f32(v48, v48)));
      unint64_t v32 = vmulq_n_f32(v46, vmul_f32(v49, vrsqrts_f32((float32x2_t)v47.u32[0], vmul_f32(v49, v49))).f32[0]).u64[0];
    }
    else
    {
      float v12 = v11;
      float32x2_t v13 = vrsqrte_f32((float32x2_t)LODWORD(v11));
      float32x2_t v14 = vmul_f32(v13, vrsqrts_f32((float32x2_t)LODWORD(v12), vmul_f32(v13, v13)));
      float32x4_t v15 = vmulq_n_f32(v9, vmul_f32(v14, vrsqrts_f32((float32x2_t)LODWORD(v12), vmul_f32(v14, v14))).f32[0]);
      float32x4_t v16 = vaddq_f32(a1, v15);
      int32x4_t v17 = (int32x4_t)vmulq_f32(v16, v16);
      v17.i32[0] = vadd_f32((float32x2_t)*(_OWORD *)&vdupq_laneq_s32(v17, 2), vadd_f32(*(float32x2_t *)v17.i8, (float32x2_t)vdup_lane_s32(*(int32x2_t *)v17.i8, 1))).u32[0];
      float32x2_t v18 = vrsqrte_f32((float32x2_t)v17.u32[0]);
      float32x2_t v19 = vmul_f32(v18, vrsqrts_f32((float32x2_t)v17.u32[0], vmul_f32(v18, v18)));
      float32x4_t v20 = vmulq_n_f32(v16, vmul_f32(v19, vrsqrts_f32((float32x2_t)v17.u32[0], vmul_f32(v19, v19))).f32[0]);
      float32x4_t v21 = vmlaq_f32(vmulq_f32((float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v20, (int32x4_t)v20), (int8x16_t)v20, 0xCuLL), vnegq_f32(a1)), v20, (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)a1, (int32x4_t)a1), (int8x16_t)a1, 0xCuLL));
      float32x4_t v22 = vmulq_f32(v20, a1);
      float32x4_t v23 = vaddq_f32(a2, v15);
      int32x4_t v24 = (int32x4_t)vmulq_f32(v23, v23);
      v24.i32[0] = vadd_f32((float32x2_t)*(_OWORD *)&vdupq_laneq_s32(v24, 2), vadd_f32(*(float32x2_t *)v24.i8, (float32x2_t)vdup_lane_s32(*(int32x2_t *)v24.i8, 1))).u32[0];
      *(float32x2_t *)v20.f32 = vrsqrte_f32((float32x2_t)v24.u32[0]);
      *(float32x2_t *)v20.f32 = vmul_f32(*(float32x2_t *)v20.f32, vrsqrts_f32((float32x2_t)v24.u32[0], vmul_f32(*(float32x2_t *)v20.f32, *(float32x2_t *)v20.f32)));
      float32x4_t v25 = vmulq_n_f32(v23, vmul_f32(*(float32x2_t *)v20.f32, vrsqrts_f32((float32x2_t)v24.u32[0], vmul_f32(*(float32x2_t *)v20.f32, *(float32x2_t *)v20.f32))).f32[0]);
      int32x4_t v26 = (int32x4_t)vmlaq_f32(vmulq_f32((float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v25, (int32x4_t)v25), (int8x16_t)v25, 0xCuLL), vnegq_f32(v15)), v25, (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32((int32x4_t)v15, (int32x4_t)v15), (int8x16_t)v15, 0xCuLL));
      float32x4_t v27 = (float32x4_t)vextq_s8((int8x16_t)vuzp1q_s32(v26, v26), (int8x16_t)v26, 0xCuLL);
      float32x4_t v28 = vmulq_f32(v15, v25);
      v27.i32[3] = vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v28, 2), vaddq_f32(v28, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v28.f32, 1))).u32[0];
      int32x4_t v29 = (int32x4_t)vnegq_f32(v27);
      int8x16_t v30 = (int8x16_t)vtrn2q_s32((int32x4_t)v27, vtrn1q_s32((int32x4_t)v27, v29));
      float32x4_t v31 = (float32x4_t)vrev64q_s32((int32x4_t)v27);
      v31.i32[0] = v29.i32[1];
      v31.i32[3] = v29.i32[2];
      unint64_t v32 = vaddq_f32(vmlaq_lane_f32(vmulq_n_f32(v27, vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v22, 2), vaddq_f32(v22, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v22.f32, 1))).f32[0]), v31, *(float32x2_t *)v21.f32, 1), vmlaq_laneq_f32(vmulq_n_f32((float32x4_t)vextq_s8((int8x16_t)v27, (int8x16_t)v29, 8uLL), v21.f32[0]), (float32x4_t)vextq_s8(v30, v30, 8uLL), v21, 2)).u64[0];
    }
  }
  return *(double *)&v32;
}

__n64 CRL3DRotation.init(ix:iy:iz:r:)(double a1, float a2)
{
  result.n64_f32[1] = a2;
  return result;
}

float CRL3DRotation.angle.getter(float32x4_t a1)
{
  float32x4_t v1 = vmulq_f32(a1, a1);
  float v2 = atan2f(sqrtf(vaddq_f32((float32x4_t)vdupq_laneq_s32((int32x4_t)v1, 2), vaddq_f32(v1, (float32x4_t)vdupq_lane_s32(*(int32x2_t *)v1.f32, 1))).f32[0]), a1.f32[3]);
  return v2 + v2;
}

double CRL3DRotation.axis.getter(float32x4_t a1)
{
  int32x4_t v1 = (int32x4_t)vmulq_f32(a1, a1);
  v1.i32[0] = vadd_f32((float32x2_t)*(_OWORD *)&vdupq_laneq_s32(v1, 2), vadd_f32(*(float32x2_t *)v1.i8, (float32x2_t)vdup_lane_s32(*(int32x2_t *)v1.i8, 1))).u32[0];
  float32x2_t v2 = vrsqrte_f32((float32x2_t)v1.u32[0]);
  float32x2_t v3 = vmul_f32(v2, vrsqrts_f32((float32x2_t)v1.u32[0], vmul_f32(v2, v2)));
  *(void *)&double result = vmulq_n_f32(a1, vmul_f32(v3, vrsqrts_f32((float32x2_t)v1.u32[0], vmul_f32(v3, v3))).f32[0]).u64[0];
  return result;
}

double CRL3DRotation.conjugate.getter(float32x4_t a1)
{
  *(void *)&double result = vmulq_f32(a1, (float32x4_t)xmmword_10119B740).u64[0];
  return result;
}

__n128 CRL3DRotation.imag.setter(__n128 result)
{
  result.n128_u32[3] = v1->n128_u32[3];
  *int32x4_t v1 = result;
  return result;
}

__n128 (*CRL3DRotation.imag.modify(void *a1))(void **a1)
{
  float32x2_t v3 = malloc(0x18uLL);
  *a1 = v3;
  v3[2] = v1;
  *(_OWORD *)float32x2_t v3 = *v1;
  return sub_1009B75EC;
}

__n128 sub_1009B75EC(void **a1)
{
  int32x4_t v1 = *a1;
  uint64_t v2 = v1[2];
  long long v3 = *(_OWORD *)v1;
  HIDWORD(v3) = *(_DWORD *)(v2 + 12);
  *(_OWORD *)uint64_t v2 = v3;
  free(v1);
  return result;
}

float CRL3DRotation.real.getter(__n128 a1)
{
  return a1.n128_f32[3];
}

void CRL3DRotation.real.setter(float a1)
{
  *(float *)(v1 + 12) = a1;
}

float (*CRL3DRotation.real.modify(uint64_t a1))(float *a1)
{
  *(void *)a1 = v1;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(v1 + 12);
  return sub_1009B7644;
}

float sub_1009B7644(float *a1)
{
  float result = a1[2];
  *(float *)(*(void *)a1 + 12) = result;
  return result;
}

double CRL3DRotation.inverse.getter(float32x4_t a1)
{
  float32x4_t v1 = vmulq_f32(a1, (float32x4_t)xmmword_10119B740);
  int8x16_t v2 = (int8x16_t)vmulq_f32(a1, a1);
  *(float32x2_t *)v2.i8 = vadd_f32(*(float32x2_t *)v2.i8, (float32x2_t)*(_OWORD *)&vextq_s8(v2, v2, 8uLL));
  v2.i32[0] = vadd_f32(*(float32x2_t *)v2.i8, (float32x2_t)vdup_lane_s32(*(int32x2_t *)v2.i8, 1)).u32[0];
  float32x2_t v3 = vrecpe_f32((float32x2_t)v2.u32[0]);
  float32x2_t v4 = vmul_f32(v3, vrecps_f32((float32x2_t)v2.u32[0], v3));
  *(void *)&double result = vmulq_n_f32(v1, vmul_f32(v4, vrecps_f32((float32x2_t)v2.u32[0], v4)).f32[0]).u64[0];
  return result;
}

float CRL3DRotation.length.getter(float32x4_t a1)
{
  int8x16_t v1 = (int8x16_t)vmulq_f32(a1, a1);
  return sqrtf(vaddv_f32(vadd_f32(*(float32x2_t *)v1.i8, (float32x2_t)*(_OWORD *)&vextq_s8(v1, v1, 8uLL))));
}

void CRL3DRotation.vector.setter(__n128 a1)
{
  *int8x16_t v1 = a1;
}

void (*CRL3DRotation.vector.modify(void *a1))(void **a1)
{
  float32x2_t v3 = malloc(0x18uLL);
  *a1 = v3;
  v3[2] = v1;
  *(_OWORD *)float32x2_t v3 = *v1;
  return sub_1009B7708;
}

void sub_1009B7708(void **a1)
{
  int8x16_t v1 = *a1;
  *(_OWORD *)v1[2] = *(_OWORD *)v1;
  free(v1);
}

uint64_t CRL3DRotation.debugDescription.getter()
{
  return simd_quatf.debugDescription.getter();
}

uint64_t sub_1009B7720(__n128 *a1, __n128 *a2)
{
  __n128 v10 = *a2;
  uint64_t v2 = CRL3DRotation.rawValue.getter(*a1);
  unint64_t v4 = v3;
  uint64_t v5 = CRL3DRotation.rawValue.getter(v10);
  unint64_t v7 = v6;
  char v8 = sub_1008D44A8(v2, v4, v5, v6);
  sub_100510084(v5, v7);
  sub_100510084(v2, v4);
  return v8 & 1;
}

uint64_t CRL3DRotation.init(from:)(void *a1)
{
  return sub_1009B8BC0(a1);
}

uint64_t CRL3DRotation.init(rawValue:)(uint64_t a1, unint64_t a2)
{
  return sub_1009B8794(a1, a2);
}

uint64_t CRL3DRotation.encode(to:)(void *a1, __n128 a2)
{
  __n128 v12 = a2;
  uint64_t v3 = sub_1005057FC(&qword_101689FA8);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3, v5);
  unint64_t v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10050F848(a1, a1[3]);
  sub_1009B8DAC();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  uint64_t v8 = CRL3DRotation.rawValue.getter(v12);
  unint64_t v10 = v9;
  uint64_t v13 = v8;
  unint64_t v14 = v9;
  sub_10060D344();
  KeyedEncodingContainer.encode<A>(_:forKey:)();
  sub_100510084(v8, v10);
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v3);
}

uint64_t CRL3DRotation.rawValue.getter(__n128 a1)
{
  v3[0] = sub_1009B9348(a1.n128_u32[0]);
  v3[1] = sub_1009B9348(a1.n128_u32[1]);
  v3[2] = sub_1009B9348(a1.n128_u32[2]);
  v3[3] = sub_1009B9348(a1.n128_u32[3]);
  return sub_1009B6AEC((uint64_t)v3, (uint64_t)&v4);
}

uint64_t sub_1009B79BC()
{
  return 0x65756C6156776172;
}

uint64_t sub_1009B79D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x65756C6156776172 && a2 == 0xE800000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = _stringCompareWithSmolCheck(_:_:expecting:)();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1009B7A6C(uint64_t a1)
{
  unint64_t v2 = sub_1009B8DAC();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1009B7AA8(uint64_t a1)
{
  unint64_t v2 = sub_1009B8DAC();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1009B7AE4@<X0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t result = sub_1009B8BC0(a1);
  if (!v2) {
    *a2 = v5;
  }
  return result;
}

uint64_t sub_1009B7B10(void *a1)
{
  return CRL3DRotation.encode(to:)(a1, *v1);
}

void CRL3DRotation.hash(into:)(__n128 a1)
{
  if ((a1.n128_u32[0] & 0x7FFFFFFF) != 0) {
    Swift::UInt32 v1 = a1.n128_u32[0];
  }
  else {
    Swift::UInt32 v1 = 0;
  }
  Hasher._combine(_:)(v1);
  if ((a1.n128_u32[1] & 0x7FFFFFFF) != 0) {
    Swift::UInt32 v2 = a1.n128_u32[1];
  }
  else {
    Swift::UInt32 v2 = 0;
  }
  Hasher._combine(_:)(v2);
  if ((a1.n128_u32[2] & 0x7FFFFFFF) != 0) {
    Swift::UInt32 v3 = a1.n128_u32[2];
  }
  else {
    Swift::UInt32 v3 = 0;
  }
  Hasher._combine(_:)(v3);
  if ((a1.n128_u32[3] & 0x7FFFFFFF) != 0) {
    Swift::UInt32 v4 = a1.n128_u32[3];
  }
  else {
    Swift::UInt32 v4 = 0;
  }
  Hasher._combine(_:)(v4);
}

uint64_t sub_1009B7BA4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = sub_1009B8794(*(void *)a1, *(void *)(a1 + 8));
  *(void *)a2 = result;
  *(void *)(a2 + 8) = v4;
  *(unsigned char *)(a2 + 16) = v5 & 1;
  return result;
}

uint64_t sub_1009B7BDC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = CRL3DRotation.rawValue.getter(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

Swift::Int sub_1009B7C08()
{
  __n128 v2 = *v0;
  Hasher.init(_seed:)();
  CRL3DRotation.hash(into:)(v2);
  return Hasher._finalize()();
}

void sub_1009B7C54()
{
  CRL3DRotation.hash(into:)(*v0);
}

Swift::Int sub_1009B7C5C()
{
  __n128 v2 = *v0;
  Hasher.init(_seed:)();
  CRL3DRotation.hash(into:)(v2);
  return Hasher._finalize()();
}

uint64_t sub_1009B7CA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_1009B9120();
  unint64_t v7 = sub_1009B8E5C();

  return CRValue<>.observableDifference(from:with:)(a1, a2, a3, v6, v7);
}

uint64_t sub_1009B7D14()
{
  return CRValue<>.init(from:)();
}

uint64_t sub_1009B7D80()
{
  return CRValue<>.encode(to:)();
}

uint64_t sub_1009B7DDC(uint64_t a1)
{
  unint64_t v2 = sub_1009B9120();
  unint64_t v3 = sub_1009B9174();

  return CRValue<>.minEncodingVersion.getter(a1, v2, v3, &protocol witness table for Data);
}

double static CRL3DRotation.* infix(_:_:)(float a1, float32x4_t a2)
{
  *(void *)&double result = vmulq_n_f32(a2, a1).u64[0];
  return result;
}

double static CRL3DRotation.* infix(_:_:)(float32x4_t a1, float a2)
{
  *(void *)&double result = vmulq_n_f32(a1, a2).u64[0];
  return result;
}

float32x4_t static CRL3DRotation.*= infix(_:_:)(float32x4_t *a1, float a2)
{
  float32x4_t result = vmulq_n_f32(*a1, a2);
  *a1 = result;
  return result;
}

float32x4_t static CRL3DRotation.*= infix(_:_:)(float32x2_t *a1, float32x4_t a2)
{
  int32x4_t v2 = (int32x4_t)vnegq_f32(a2);
  int8x16_t v3 = (int8x16_t)vtrn2q_s32((int32x4_t)a2, vtrn1q_s32((int32x4_t)a2, v2));
  float32x4_t v4 = vmlaq_n_f32(vmulq_lane_f32((float32x4_t)vextq_s8((int8x16_t)a2, (int8x16_t)v2, 8uLL), *a1, 1), (float32x4_t)vextq_s8(v3, v3, 8uLL), COERCE_FLOAT(*(_OWORD *)a1->f32));
  float32x4_t v5 = (float32x4_t)vrev64q_s32((int32x4_t)a2);
  v5.i32[0] = v2.i32[1];
  v5.i32[3] = v2.i32[2];
  float32x4_t result = vaddq_f32(v4, vmlaq_laneq_f32(vmulq_laneq_f32(a2, *(float32x4_t *)a1->f32, 3), v5, *(float32x4_t *)a1->f32, 2));
  *(float32x4_t *)a1->f32 = result;
  return result;
}

double static CRL3DRotation.+ infix(_:_:)(float32x4_t a1, float32x4_t a2)
{
  *(void *)&double result = vaddq_f32(a1, a2).u64[0];
  return result;
}

float32x4_t static CRL3DRotation.+= infix(_:_:)(float32x4_t *a1, float32x4_t a2)
{
  float32x4_t result = vaddq_f32(*a1, a2);
  *a1 = result;
  return result;
}

double static CRL3DRotation.- prefix(_:)(float32x4_t a1)
{
  *(void *)&double result = vsubq_f32((float32x4_t)0, a1).u64[0];
  return result;
}

double static CRL3DRotation.- infix(_:_:)(float32x4_t a1, float32x4_t a2)
{
  *(void *)&double result = vsubq_f32(a1, a2).u64[0];
  return result;
}

float32x4_t static CRL3DRotation.-= infix(_:_:)(float32x4_t *a1, float32x4_t a2)
{
  float32x4_t result = vsubq_f32(*a1, a2);
  *a1 = result;
  return result;
}

double static CRL3DRotation./ infix(_:_:)(float32x4_t a1, float32x4_t a2)
{
  float32x4_t v2 = vmulq_f32(a2, (float32x4_t)xmmword_10119B740);
  int8x16_t v3 = (int8x16_t)vmulq_f32(a2, a2);
  *(float32x2_t *)v3.i8 = vadd_f32(*(float32x2_t *)v3.i8, (float32x2_t)*(_OWORD *)&vextq_s8(v3, v3, 8uLL));
  v3.i32[0] = vadd_f32(*(float32x2_t *)v3.i8, (float32x2_t)vdup_lane_s32(*(int32x2_t *)v3.i8, 1)).u32[0];
  float32x2_t v4 = vrecpe_f32((float32x2_t)v3.u32[0]);
  float32x2_t v5 = vmul_f32(v4, vrecps_f32((float32x2_t)v3.u32[0], v4));
  float32x4_t v6 = vmulq_n_f32(v2, vmul_f32(v5, vrecps_f32((float32x2_t)v3.u32[0], v5)).f32[0]);
  int32x4_t v7 = (int32x4_t)vnegq_f32(v6);
  int8x16_t v8 = (int8x16_t)vtrn2q_s32((int32x4_t)v6, vtrn1q_s32((int32x4_t)v6, v7));
  float32x4_t v9 = vmlaq_n_f32(vmulq_lane_f32((float32x4_t)vextq_s8((int8x16_t)v6, (int8x16_t)v7, 8uLL), *(float32x2_t *)a1.f32, 1), (float32x4_t)vextq_s8(v8, v8, 8uLL), a1.f32[0]);
  float32x4_t v10 = (float32x4_t)vrev64q_s32((int32x4_t)v6);
  v10.i32[0] = v7.i32[1];
  v10.i32[3] = v7.i32[2];
  *(void *)&double result = vaddq_f32(vmlaq_laneq_f32(vmulq_laneq_f32(v6, a1, 3), v10, a1, 2), v9).u64[0];
  return result;
}

double static CRL3DRotation./ infix(_:_:)(float32x4_t a1, int32x2_t a2)
{
  *(void *)&double result = vdivq_f32(a1, (float32x4_t)vdupq_lane_s32(a2, 0)).u64[0];
  return result;
}

float32x4_t static CRL3DRotation./= infix(_:_:)(float32x4_t *a1, int32x2_t a2)
{
  float32x4_t result = vdivq_f32(*a1, (float32x4_t)vdupq_lane_s32(a2, 0));
  *a1 = result;
  return result;
}

float32x4_t static CRL3DRotation./= infix(_:_:)(float32x2_t *a1, float32x4_t a2)
{
  float32x4_t v2 = vmulq_f32(a2, (float32x4_t)xmmword_10119B740);
  int8x16_t v3 = (int8x16_t)vmulq_f32(a2, a2);
  *(float32x2_t *)v3.i8 = vadd_f32(*(float32x2_t *)v3.i8, (float32x2_t)*(_OWORD *)&vextq_s8(v3, v3, 8uLL));
  v3.i32[0] = vadd_f32(*(float32x2_t *)v3.i8, (float32x2_t)vdup_lane_s32(*(int32x2_t *)v3.i8, 1)).u32[0];
  float32x2_t v4 = vrecpe_f32((float32x2_t)v3.u32[0]);
  float32x2_t v5 = vmul_f32(v4, vrecps_f32((float32x2_t)v3.u32[0], v4));
  float32x4_t v6 = vmulq_n_f32(v2, vmul_f32(v5, vrecps_f32((float32x2_t)v3.u32[0], v5)).f32[0]);
  int32x4_t v7 = (int32x4_t)vnegq_f32(v6);
  int8x16_t v8 = (int8x16_t)vtrn2q_s32((int32x4_t)v6, vtrn1q_s32((int32x4_t)v6, v7));
  float32x4_t v9 = vmlaq_n_f32(vmulq_lane_f32((float32x4_t)vextq_s8((int8x16_t)v6, (int8x16_t)v7, 8uLL), *a1, 1), (float32x4_t)vextq_s8(v8, v8, 8uLL), COERCE_FLOAT(*(_OWORD *)a1->f32));
  float32x4_t v10 = (float32x4_t)vrev64q_s32((int32x4_t)v6);
  v10.i32[0] = v7.i32[1];
  v10.i32[3] = v7.i32[2];
  float32x4_t result = vaddq_f32(vmlaq_laneq_f32(vmulq_laneq_f32(v6, *(float32x4_t *)a1->f32, 3), v10, *(float32x4_t *)a1->f32, 2), v9);
  *(float32x4_t *)a1->f32 = result;
  return result;
}

uint64_t sub_1009B7FE8(unsigned __int16 a1, uint64_t a2, uint64_t a3)
{
  char v3 = a1;
  uint64_t v4 = a1 >> 14;
  if ((a3 & 0x1000000000000000) == 0 || (a2 & 0x800000000000000) != 0)
  {
    uint64_t v10 = String.UTF16View.index(_:offsetBy:)();
    uint64_t v11 = v10 + (v4 << 16);
    unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    unint64_t v13 = v11 & 0xFFFFFFFFFFFF0000;
    if (!v4) {
      unint64_t v13 = v12;
    }
    return v13 | 4;
  }
  else
  {
    uint64_t v5 = String.UTF8View._foreignIndex(_:offsetBy:)();
    uint64_t v6 = v5 + (v4 << 16);
    unint64_t v7 = v5 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    unint64_t v8 = v6 & 0xFFFFFFFFFFFF0000;
    if (!v4) {
      unint64_t v8 = v7;
    }
    return v8 | 8;
  }
}

char *sub_1009B8064(void *(*a1)(uint64_t *__return_ptr, char *, char *))
{
  uint64_t v4 = *v1;
  unint64_t v3 = v1[1];
  uint64_t v5 = v1;
  switch(v3 >> 62)
  {
    case 1uLL:
      uint64_t v9 = v3 & 0x3FFFFFFFFFFFFFFFLL;
      *(_OWORD *)Swift::UInt32 v1 = xmmword_101180360;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v11 = v4 >> 32;
      if (isUniquelyReferenced_nonNull_native) {
        goto LABEL_16;
      }
      if (v11 < (int)v4) {
        goto LABEL_23;
      }
      if (__DataStorage._bytes.getter() && __OFSUB__((int)v4, __DataStorage._offset.getter())) {
        goto LABEL_24;
      }
      type metadata accessor for __DataStorage();
      swift_allocObject();
      uint64_t v13 = __DataStorage.init(bytes:length:copy:deallocator:offset:)();
      swift_release();
      uint64_t v9 = v13;
      uint64_t v11 = v4 >> 32;
LABEL_16:
      if (v11 < (int)v4)
      {
        __break(1u);
LABEL_23:
        __break(1u);
LABEL_24:
        __break(1u);
      }
      float32x4_t result = sub_1009B8450((int)v4, v11, a1);
      unint64_t v12 = v9 | 0x4000000000000000;
      if (v2)
      {
        *uint64_t v5 = v4;
        goto LABEL_19;
      }
      *uint64_t v5 = v4;
      v5[1] = v12;
      break;
    case 2uLL:
      uint64_t v14 = *v1;
      uint64_t v15 = v3 & 0x3FFFFFFFFFFFFFFFLL;
      Data.LargeSlice.ensureUniqueReference()();
      float32x4_t result = sub_1009B8450(*(void *)(v14 + 16), *(void *)(v14 + 24), a1);
      unint64_t v12 = v15 | 0x8000000000000000;
      if (v2)
      {
        *Swift::UInt32 v1 = v14;
LABEL_19:
        v5[1] = v12;
      }
      else
      {
        *Swift::UInt32 v1 = v14;
        v1[1] = v12;
      }
      break;
    case 3uLL:
      memset(v16, 0, 15);
      float32x4_t result = (char *)a1(&v14, (char *)v16, (char *)v16);
      if (!v2) {
        return (char *)v14;
      }
      return result;
    default:
      v16[0] = *v1;
      LOWORD(v16[1]) = v3;
      BYTE2(v16[1]) = BYTE2(v3);
      BYTE3(v16[1]) = BYTE3(v3);
      BYTE4(v16[1]) = BYTE4(v3);
      BYTE5(v16[1]) = BYTE5(v3);
      BYTE6(v16[1]) = BYTE6(v3);
      float32x4_t result = (char *)a1(&v14, (char *)v16, (char *)v16 + BYTE6(v3));
      if (!v2) {
        float32x4_t result = (char *)v14;
      }
      unint64_t v8 = LODWORD(v16[1]) | ((unint64_t)BYTE4(v16[1]) << 32) | ((unint64_t)BYTE5(v16[1]) << 40) | ((unint64_t)BYTE6(v16[1]) << 48);
      *Swift::UInt32 v1 = v16[0];
      v1[1] = v8;
      return result;
  }
  return result;
}

unsigned char *sub_1009B8368@<X0>(unsigned char *result@<X0>, unsigned char *a2@<X1>, void *a3@<X8>)
{
  if (!result) {
    goto LABEL_4;
  }
  uint64_t v4 = a2 - result;
  if (a2 == result)
  {
    float32x4_t result = 0;
LABEL_4:
    unint64_t v5 = 0xC000000000000000;
    goto LABEL_5;
  }
  if (v4 <= 14)
  {
    float32x4_t result = (unsigned char *)sub_100CD835C(result, a2);
    unint64_t v5 = v7 & 0xFFFFFFFFFFFFFFLL;
  }
  else if ((unint64_t)v4 >= 0x7FFFFFFF)
  {
    float32x4_t result = (unsigned char *)sub_1009B8614((uint64_t)result, (uint64_t)a2);
    unint64_t v5 = v8 | 0x8000000000000000;
  }
  else
  {
    float32x4_t result = (unsigned char *)sub_1009B8590((uint64_t)result, (uint64_t)a2);
    unint64_t v5 = v6 | 0x4000000000000000;
  }
LABEL_5:
  *a3 = result;
  a3[1] = v5;
  return result;
}

void *sub_1009B83E0(void *(*a1)(uint64_t *__return_ptr, uint64_t, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a3)
  {
    float32x4_t result = a1(&v6, a3, a4 - a3);
    if (v4) {
      return result;
    }
    return (void *)v6;
  }
  float32x4_t result = a1(&v6, 0, 0);
  if (!v4) {
    return (void *)v6;
  }
  return result;
}

char *sub_1009B8450(uint64_t a1, uint64_t a2, void *(*a3)(uint64_t *__return_ptr, char *, char *))
{
  float32x4_t result = (char *)__DataStorage._bytes.getter();
  if (!result) {
    goto LABEL_12;
  }
  uint64_t v8 = result;
  float32x4_t result = (char *)__DataStorage._offset.getter();
  uint64_t v9 = a1 - (void)result;
  if (__OFSUB__(a1, result))
  {
    __break(1u);
    goto LABEL_11;
  }
  BOOL v10 = __OFSUB__(a2, a1);
  uint64_t v11 = a2 - a1;
  if (v10)
  {
LABEL_11:
    __break(1u);
LABEL_12:
    __break(1u);
    return result;
  }
  uint64_t v12 = __DataStorage._length.getter();
  if (v12 >= v11) {
    uint64_t v13 = v11;
  }
  else {
    uint64_t v13 = v12;
  }
  float32x4_t result = (char *)a3(&v14, &v8[v9], &v8[v9 + v13]);
  if (!v3) {
    return (char *)v14;
  }
  return result;
}

uint64_t sub_1009B8504@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  if (result)
  {
    swift_bridgeObjectRetain();
    float32x4_t result = _StringGuts.copyUTF8(into:)();
    if ((v3 & 1) == 0)
    {
      uint64_t v4 = result;
      float32x4_t result = swift_bridgeObjectRelease();
      *a2 = 0;
      a2[1] = 0xE000000000000000;
      a2[2] = 15;
      a2[3] = v4;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1009B8590(uint64_t a1, uint64_t a2)
{
  if (a1) {
    uint64_t v2 = a2 - a1;
  }
  else {
    uint64_t v2 = 0;
  }
  type metadata accessor for __DataStorage();
  swift_allocObject();
  uint64_t result = __DataStorage.init(bytes:length:)();
  if (v2 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v2 > 0x7FFFFFFF)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  if ((v2 & 0x80000000) == 0) {
    return v2 << 32;
  }
LABEL_10:
  __break(1u);
  return result;
}

uint64_t sub_1009B8614(uint64_t a1, uint64_t a2)
{
  if (a1) {
    uint64_t v2 = a2 - a1;
  }
  else {
    uint64_t v2 = 0;
  }
  type metadata accessor for __DataStorage();
  swift_allocObject();
  uint64_t result = __DataStorage.init(bytes:length:)();
  if (v2 < 0)
  {
    __break(1u);
  }
  else
  {
    type metadata accessor for Data.RangeReference();
    uint64_t result = swift_allocObject();
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = v2;
  }
  return result;
}

unsigned char *sub_1009B8690(unsigned char *result, unsigned char *a2)
{
  if (result)
  {
    uint64_t v2 = a2 - result;
    if (a2 == result)
    {
      return 0;
    }
    else if (v2 <= 14)
    {
      return (unsigned char *)sub_100CD835C(result, a2);
    }
    else if ((unint64_t)v2 >= 0x7FFFFFFF)
    {
      return (unsigned char *)sub_1009B8614((uint64_t)result, (uint64_t)a2);
    }
    else
    {
      return (unsigned char *)sub_1009B8590((uint64_t)result, (uint64_t)a2);
    }
  }
  return result;
}

uint64_t sub_1009B86F4(uint64_t result)
{
  if (result)
  {
    unint64_t v1 = result;
    if (result <= 14)
    {
      if (result < 0) {
        __break(1u);
      }
      else {
        return 0;
      }
    }
    else
    {
      type metadata accessor for __DataStorage();
      swift_allocObject();
      __DataStorage.init(length:)();
      if (v1 >= 0x7FFFFFFF)
      {
        type metadata accessor for Data.RangeReference();
        uint64_t result = swift_allocObject();
        *(void *)(result + 16) = 0;
        *(void *)(result + 24) = v1;
      }
      else
      {
        return v1 << 32;
      }
    }
  }
  return result;
}

uint64_t sub_1009B8794(uint64_t a1, unint64_t a2)
{
  unint64_t v2 = a2 >> 62;
  uint64_t v5 = 0;
  switch(a2 >> 62)
  {
    case 1uLL:
      if (__OFSUB__(HIDWORD(a1), a1)) {
        goto LABEL_45;
      }
      uint64_t v5 = HIDWORD(a1) - (int)a1;
LABEL_6:
      if (!sub_10060E550(v5, 16, (uint64_t)&_mh_execute_header, (uint64_t)"init(rawValue:)", 15, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLUtility/CRL3DRotation.swift", 84, 2u, 145))
      {
        sub_100510084(a1, a2);
        return 0;
      }
      break;
    case 2uLL:
      uint64_t v7 = *(void *)(a1 + 16);
      uint64_t v6 = *(void *)(a1 + 24);
      uint64_t v5 = v6 - v7;
      if (!__OFSUB__(v6, v7)) {
        goto LABEL_6;
      }
      goto LABEL_46;
    case 3uLL:
      goto LABEL_6;
    default:
      uint64_t v5 = BYTE6(a2);
      goto LABEL_6;
  }
  uint64_t v8 = _swiftEmptyArrayStorage;
  switch((int)v2)
  {
    case 0:
      int32x4_t v34 = (double *)a1;
      __int16 v35 = a2;
      char v36 = BYTE2(a2);
      char v37 = BYTE3(a2);
      char v38 = BYTE4(a2);
      char v39 = BYTE5(a2);
      uint64_t v8 = sub_1006B9BB0((char *)&v34, (a2 >> 50) & 0x3F);
      int64_t v9 = *((void *)v8 + 2);
      if (!v9) {
        goto LABEL_40;
      }
      goto LABEL_29;
    case 1:
      if (a1 >> 32 < (int)a1) {
        goto LABEL_47;
      }
      sub_100510D4C(a1, a2);
      uint64_t v11 = __DataStorage._bytes.getter();
      if (v11)
      {
        uint64_t v12 = v11;
        uint64_t v13 = __DataStorage._offset.getter();
        uint64_t v14 = (int)a1 - v13;
        if (__OFSUB__((int)a1, v13)) {
          goto LABEL_49;
        }
        uint64_t v15 = __DataStorage._length.getter();
        float32x4_t v16 = (char *)(v12 + v14);
        if (v15 >= (a1 >> 32) - (int)a1) {
          uint64_t v15 = (a1 >> 32) - (int)a1;
        }
        uint64_t v17 = v15 / 4;
      }
      else
      {
        __DataStorage._length.getter();
        float32x4_t v16 = 0;
        uint64_t v17 = 0;
      }
      uint64_t v8 = sub_1006B9BB0(v16, v17);
      sub_100510084(a1, a2);
LABEL_28:
      int64_t v9 = *((void *)v8 + 2);
      if (!v9)
      {
LABEL_40:
        swift_bridgeObjectRelease();
        float32x4_t v28 = _swiftEmptyArrayStorage;
        double v32 = _swiftEmptyArrayStorage[2];
        if (v32 != 0.0) {
          goto LABEL_34;
        }
LABEL_41:
        __break(1u);
        goto LABEL_42;
      }
LABEL_29:
      int32x4_t v34 = _swiftEmptyArrayStorage;
      sub_1006BB644(0, v9, 0);
      uint64_t v27 = 0;
      float32x4_t v28 = v34;
      do
      {
        int v29 = sub_1009B9348(*((_DWORD *)v8 + v27 + 8));
        int32x4_t v34 = v28;
        unint64_t v31 = *((void *)v28 + 2);
        unint64_t v30 = *((void *)v28 + 3);
        if (v31 >= v30 >> 1)
        {
          sub_1006BB644(v30 > 1, v31 + 1, 1);
          float32x4_t v28 = v34;
        }
        ++v27;
        *((void *)v28 + 2) = v31 + 1;
        *((_DWORD *)v28 + v31 + 8) = v29;
      }
      while (v9 != v27);
      swift_bridgeObjectRelease();
      double v32 = v28[2];
      if (v32 == 0.0) {
        goto LABEL_41;
      }
LABEL_34:
      if (*(void *)&v32 == 1)
      {
LABEL_42:
        __break(1u);
        goto LABEL_43;
      }
      if (*(void *)&v32 < 3uLL)
      {
LABEL_43:
        __break(1u);
LABEL_44:
        __break(1u);
LABEL_45:
        __break(1u);
LABEL_46:
        __break(1u);
LABEL_47:
        __break(1u);
LABEL_48:
        __break(1u);
LABEL_49:
        __break(1u);
LABEL_50:
        __break(1u);
      }
      if (*(void *)&v32 == 3) {
        goto LABEL_44;
      }
      uint64_t v33 = *((void *)v28 + 4);
      swift_bridgeObjectRelease();
      sub_100510084(a1, a2);
      return v33;
    case 2:
      uint64_t v18 = *(void *)(a1 + 16);
      uint64_t v19 = *(void *)(a1 + 24);
      swift_retain();
      swift_retain();
      float32x4_t v20 = (char *)__DataStorage._bytes.getter();
      if (!v20) {
        goto LABEL_20;
      }
      uint64_t v21 = __DataStorage._offset.getter();
      if (__OFSUB__(v18, v21)) {
        goto LABEL_50;
      }
      v20 += v18 - v21;
LABEL_20:
      BOOL v22 = __OFSUB__(v19, v18);
      uint64_t v23 = v19 - v18;
      if (v22) {
        goto LABEL_48;
      }
      uint64_t v24 = __DataStorage._length.getter();
      if (v20)
      {
        if (v24 >= v23) {
          uint64_t v25 = v23;
        }
        else {
          uint64_t v25 = v24;
        }
        uint64_t v26 = v25 / 4;
      }
      else
      {
        uint64_t v26 = 0;
      }
      uint64_t v8 = sub_1006B9BB0(v20, v26);
      swift_release();
      swift_release();
      int64_t v9 = *((void *)v8 + 2);
      if (!v9) {
        goto LABEL_40;
      }
      goto LABEL_29;
    case 3:
      goto LABEL_28;
    default:
      JUMPOUT(0);
  }
}

uint64_t sub_1009B8BC0(void *a1)
{
  uint64_t v3 = sub_1005057FC(&qword_10168A008);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3, v5);
  uint64_t v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10050F848(a1, a1[3]);
  sub_1009B8DAC();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (!v1)
  {
    sub_10060D184();
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    uint64_t v8 = v16;
    unint64_t v9 = v17;
    sub_100510D4C(v16, v17);
    uint64_t v10 = sub_1009B8794(v8, v9);
    if ((v12 & 1) == 0)
    {
      *(void *)&long long v13 = v10;
      *((void *)&v13 + 1) = v11;
      long long v15 = v13;
      (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
      sub_100510084(v8, v9);
      return _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)a1);
    }
    sub_1009B91C8();
    swift_allocError();
    swift_willThrow();
    sub_100510084(v8, v9);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
  }
  return _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)a1);
}

unint64_t sub_1009B8DAC()
{
  unint64_t result = qword_101689FB0;
  if (!qword_101689FB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101689FB0);
  }
  return result;
}

unint64_t sub_1009B8E04()
{
  unint64_t result = qword_101689FB8;
  if (!qword_101689FB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101689FB8);
  }
  return result;
}

unint64_t sub_1009B8E5C()
{
  unint64_t result = qword_101689FC0;
  if (!qword_101689FC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101689FC0);
  }
  return result;
}

unint64_t sub_1009B8EB4()
{
  unint64_t result = qword_101689FC8;
  if (!qword_101689FC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101689FC8);
  }
  return result;
}

ValueMetadata *type metadata accessor for CRL3DRotation()
{
  return &type metadata for CRL3DRotation;
}

ValueMetadata *type metadata accessor for CRL3DRotation.CodingKeys()
{
  return &type metadata for CRL3DRotation.CodingKeys;
}

unint64_t sub_1009B8F30()
{
  unint64_t result = qword_101689FD0;
  if (!qword_101689FD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101689FD0);
  }
  return result;
}

unint64_t sub_1009B8F88()
{
  unint64_t result = qword_101689FD8;
  if (!qword_101689FD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101689FD8);
  }
  return result;
}

unint64_t sub_1009B8FE0()
{
  unint64_t result = qword_101689FE0;
  if (!qword_101689FE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101689FE0);
  }
  return result;
}

uint64_t sub_1009B9034(uint64_t a1)
{
  uint64_t v2 = sub_1005057FC(&qword_101689FF0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void *sub_1009B9094@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v5 = *(uint64_t **)(v3 + 16);
  uint64_t v7 = *v5;
  uint64_t v6 = v5[1];
  v13[0] = v7;
  v13[1] = v6;
  v12[2] = v13;
  unint64_t result = sub_1009B83E0((void *(*)(uint64_t *__return_ptr, uint64_t, uint64_t))sub_1009B9100, (uint64_t)v12, a1, a2);
  *a3 = result;
  a3[1] = v9;
  a3[2] = v10;
  a3[3] = v11;
  return result;
}

uint64_t sub_1009B9100@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_1009B8504(a1, a2);
}

unint64_t sub_1009B9120()
{
  unint64_t result = qword_101689FF8;
  if (!qword_101689FF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101689FF8);
  }
  return result;
}

unint64_t sub_1009B9174()
{
  unint64_t result = qword_10168A000;
  if (!qword_10168A000)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168A000);
  }
  return result;
}

unint64_t sub_1009B91C8()
{
  unint64_t result = qword_10168A010;
  if (!qword_10168A010)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168A010);
  }
  return result;
}

unsigned char *_s8Freeform13CRL3DRotationV10CodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1009B92B8);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for CRL3DRotation.RotationCodingError()
{
  return &type metadata for CRL3DRotation.RotationCodingError;
}

unint64_t sub_1009B92F4()
{
  unint64_t result = qword_10168A018;
  if (!qword_10168A018)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168A018);
  }
  return result;
}

uint64_t sub_1009B9348(unsigned int a1)
{
  return bswap32(a1);
}

id sub_1009B9354(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v59 = a4;
  uint64_t v54 = a2;
  uint64_t v5 = type metadata accessor for CRLShapeItemParentAffinity(0);
  __chkstk_darwin(v5 - 8, v6);
  uint64_t v8 = (char *)&v51 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1005057FC(&qword_1016892B0);
  __chkstk_darwin(v9, v10);
  char v12 = (char *)&v51 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1005057FC((uint64_t *)&unk_101674520);
  __chkstk_darwin(v13 - 8, v14);
  uint64_t v55 = (uint64_t)&v51 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16, v17);
  id v53 = (char *)&v51 - v18;
  __chkstk_darwin(v19, v20);
  uint64_t v57 = (uint64_t)&v51 - v21;
  __chkstk_darwin(v22, v23);
  uint64_t v58 = (uint64_t)&v51 - v24;
  __chkstk_darwin(v25, v26);
  uint64_t v52 = (uint64_t)&v51 - v27;
  __chkstk_darwin(v28, v29);
  unint64_t v31 = (char *)&v51 - v30;
  uint64_t v56 = v4;
  swift_retain();
  double v32 = sub_1008DD8B4(1);
  swift_release();
  uint64_t v33 = (uint64_t)v32 + *(void *)(*v32 + 632);
  swift_beginAccess();
  sub_100522E9C(v33, (uint64_t)v12, &qword_1016892B0);
  swift_retain();
  uint64_t v34 = sub_1005057FC(&qword_101686808);
  CRRegister.wrappedValue.getter();
  sub_100522E9C((uint64_t)v8, (uint64_t)v31, (uint64_t *)&unk_101674520);
  sub_1009C1E58((uint64_t)v8, type metadata accessor for CRLShapeItemParentAffinity);
  sub_100522F00((uint64_t)v12, &qword_1016892B0);
  swift_release();
  id v35 = v32;
  uint64_t v36 = (uint64_t)v62;
  sub_1008DDC50(v59);
  if (v36)
  {
    sub_100522F00((uint64_t)v31, (uint64_t *)&unk_101674520);
    swift_release();
  }
  else
  {
    uint64_t v37 = v58;
    sub_100522E9C(v54, v58, (uint64_t *)&unk_101674520);
    uint64_t v62 = v31;
    sub_100522E9C((uint64_t)v31, v57, (uint64_t *)&unk_101674520);
    uint64_t v38 = type metadata accessor for UUID();
    uint64_t v39 = *(void *)(v38 - 8);
    int v40 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v39 + 48))(v37, 1, v38);
    uint64_t v41 = v52;
    uint64_t v42 = (uint64_t)v53;
    uint64_t v59 = v34;
    if (v40 == 1)
    {
      sub_10051B3EC(v57, v52, (uint64_t *)&unk_101674520);
      swift_retain();
      sub_100522F00(v58, (uint64_t *)&unk_101674520);
    }
    else
    {
      swift_retain();
      sub_100522F00(v57, (uint64_t *)&unk_101674520);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v39 + 32))(v41, v58, v38);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v39 + 56))(v41, 0, 1, v38);
    }
    sub_100522E9C(v41, v42, (uint64_t *)&unk_101674520);
    swift_beginAccess();
    uint64_t v43 = v55;
    sub_100522E9C(v42, v55, (uint64_t *)&unk_101674520);
    float32x4_t v44 = (void (*)(unsigned char *, void))CRRegister.wrappedValue.modify();
    sub_1006063BC(v43, v45, (uint64_t *)&unk_101674520);
    v44(v61, 0);
    sub_100522F00(v42, (uint64_t *)&unk_101674520);
    swift_endAccess();
    sub_100522F00(v41, (uint64_t *)&unk_101674520);
    swift_release();
    float32x4_t v46 = *(void **)(v56 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_store);
    int32x4_t v47 = (char *)objc_allocWithZone((Class)type metadata accessor for CRLConnectionLineItem());
    *(void *)&v47[OBJC_IVAR____TtC8Freeform13CRLStyledItem__stroke] = 0;
    *(void *)&v47[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_store] = v46;
    *(void *)&v47[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData] = v32;
    float32x2_t v48 = (objc_class *)type metadata accessor for CRLBoardItemBase(0);
    v60.receiver = v47;
    v60.super_class = v48;
    id v49 = v46;
    id v35 = [super init];
    sub_100522F00((uint64_t)v62, (uint64_t *)&unk_101674520);
  }
  return v35;
}

uint64_t sub_1009B9908()
{
  if ((sub_100A9AD14() & 1) == 0) {
    return 0;
  }
  uint64_t v1 = **(void **)(v0 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
  uint64_t result = swift_conformsToProtocol2();
  if (result)
  {
    int v3 = *(uint64_t (**)(uint64_t))(v1 + 704);
    uint64_t v4 = swift_retain();
    uint64_t v5 = (void *)v3(v4);
    swift_release();
    self;
    uint64_t v6 = (void *)swift_dynamicCastObjCClass();
    if (v6)
    {
      id v7 = [v6 type];

      return v7 != (id)1;
    }
    else
    {

      return 1;
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

BOOL sub_1009B9A04(char a1)
{
  return !a1 || a1 == 5;
}

uint64_t sub_1009B9A58()
{
  uint64_t v1 = v0;
  uint64_t v106 = type metadata accessor for UUID();
  uint64_t v2 = *(void *)(v106 - 8);
  __chkstk_darwin(v106, v3);
  v100 = (char *)&v96 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1005057FC((uint64_t *)&unk_10168A0C0);
  __chkstk_darwin(v5, v6);
  uint64_t v8 = (char *)&v96 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9, v10);
  char v12 = (char *)&v96 - v11;
  uint64_t v123 = type metadata accessor for CRLConnectionLineCRDTData(0);
  __chkstk_darwin(v123, v13);
  uint64_t v108 = (uint64_t)&v96 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15, v16);
  uint64_t v107 = (uint64_t)&v96 - v17;
  uint64_t v18 = sub_1005057FC((uint64_t *)&unk_101674520);
  __chkstk_darwin(v18 - 8, v19);
  uint64_t v21 = (char *)&v96 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22, v23);
  uint64_t v25 = (char *)&v96 - v24;
  __chkstk_darwin(v26, v27);
  uint64_t v110 = (uint64_t)&v96 - v28;
  __chkstk_darwin(v29, v30);
  v109 = (char *)&v96 - v31;
  __chkstk_darwin(v32, v33);
  uint64_t v114 = (uint64_t)&v96 - v34;
  __chkstk_darwin(v35, v36);
  uint64_t v113 = (uint64_t)&v96 - v37;
  sub_1005057FC((uint64_t *)&unk_101676C10);
  uint64_t v38 = swift_allocObject();
  *(_OWORD *)(v38 + 16) = xmmword_101177E70;
  *(void *)(v38 + 32) = v0;
  aBlock[0] = v38;
  specialized Array._endMutation()();
  unint64_t v39 = aBlock[0];
  unint64_t v127 = aBlock[0];
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong)
  {
    id v87 = v0;
    goto LABEL_45;
  }
  v111 = v12;
  uint64_t v41 = (void *)Strong;
  type metadata accessor for CRLContainerItem(0);
  uint64_t v42 = swift_dynamicCastClass();
  if (!v42)
  {
    id v88 = v1;

LABEL_45:
    uint64_t v89 = swift_allocObject();
    *(unsigned char *)(v89 + 16) = 0;
    swift_bridgeObjectRetain();
    if (v39 >> 62)
    {
      sub_1005057FC(&qword_101673060);
      _bridgeCocoaArray<A>(_:)();
      swift_bridgeObjectRelease();
    }
    else
    {
      dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
    }
    swift_bridgeObjectRelease();
    v90 = self;
    sub_1005057FC(&qword_101673060);
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    uint64_t v92 = swift_allocObject();
    *(void *)(v92 + 16) = v1;
    *(void *)(v92 + 24) = v89;
    aBlock[4] = sub_1009C1DF0;
    aBlock[5] = v92;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = *(void *)"";
    aBlock[2] = sub_10051CE64;
    aBlock[3] = &unk_10151CC08;
    v93 = _Block_copy(aBlock);
    id v94 = v1;
    swift_retain();
    swift_release();
    [v90 temporaryLayoutControllerForInfos:isa useInBlock:v93];
    _Block_release(v93);

    swift_beginAccess();
    uint64_t v95 = *(unsigned __int8 *)(v89 + 16);
    swift_release();
    return v95;
  }
  uint64_t v43 = v42;
  id v97 = v41;
  v112 = v25;
  uint64_t v44 = OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedOrderedItems;
  uint64_t v45 = *(double **)(v42 + OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedOrderedItems);
  v122 = v1;
  if (!v45)
  {
    sub_100846AB0();
    uint64_t v45 = *(double **)(v43 + v44);
  }
  if (v45) {
    unint64_t v46 = (unint64_t)v45;
  }
  else {
    unint64_t v46 = (unint64_t)_swiftEmptyArrayStorage;
  }
  if (v46 >> 62)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v47 = _CocoaArrayWrapper.endIndex.getter();
    uint64_t result = swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v47 = *(void *)((v46 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
  }
  uint64_t v49 = (uint64_t)v111;
  if (!v47)
  {

    swift_bridgeObjectRelease();
    goto LABEL_45;
  }
  if (v47 >= 1)
  {
    v99 = v21;
    v96 = v1;
    uint64_t v50 = 0;
    uint64_t v121 = OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData;
    unint64_t v102 = v46 & 0xC000000000000001;
    v119 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48);
    v120 = (void (**)(uint64_t, void, uint64_t, uint64_t))(v2 + 56);
    v98 = (void (**)(char *, uint64_t, uint64_t))(v2 + 32);
    v101 = (void (**)(uint64_t, uint64_t))(v2 + 8);
    uint64_t v124 = v5;
    v105 = v8;
    uint64_t v51 = (uint64_t)v109;
    v104 = (double *)v46;
    uint64_t v103 = v47;
    while (1)
    {
      if (v102) {
        id v53 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v53 = *(id *)(v46 + 8 * v50 + 32);
      }
      uint64_t v54 = *(void (**)(void))((swift_isaMask & *v53) + 0x88);
      uint64_t v55 = (swift_isaMask & *v53) + 136;
      uint64_t v56 = v113;
      v125 = v53;
      v117 = v54;
      uint64_t v116 = v55;
      v54();
      uint64_t v57 = v106;
      v118 = *v120;
      v118(v56, 0, 1, v106);
      uint64_t v58 = *(void *)&v122[v121];
      if (*(_UNKNOWN ****)v58 != &off_1016863C8) {
        uint64_t v58 = 0;
      }
      uint64_t v59 = v58 + *(void *)(*(void *)v58 + 752);
      swift_beginAccess();
      uint64_t v60 = v107;
      sub_1009C1CE4(v59, v107, type metadata accessor for CRLConnectionLineCRDTData);
      uint64_t v61 = sub_1005057FC(&qword_101680140);
      uint64_t v62 = v114;
      uint64_t v115 = v61;
      CRRegister.wrappedValue.getter();
      sub_1009C1E58(v60, type metadata accessor for CRLConnectionLineCRDTData);
      uint64_t v63 = v49 + *(int *)(v124 + 48);
      sub_100522E9C(v56, v49, (uint64_t *)&unk_101674520);
      sub_100522E9C(v62, v63, (uint64_t *)&unk_101674520);
      uint64_t v64 = *v119;
      if ((*v119)(v49, 1, v57) == 1) {
        break;
      }
      sub_100522E9C(v49, v51, (uint64_t *)&unk_101674520);
      uint64_t v66 = v57;
      if (v64(v63, 1, v57) == 1)
      {
        sub_100522F00(v114, (uint64_t *)&unk_101674520);
        sub_100522F00(v113, (uint64_t *)&unk_101674520);
        (*v101)(v51, v57);
LABEL_26:
        uint64_t v68 = sub_100522F00(v49, (uint64_t *)&unk_10168A0C0);
        uint64_t v69 = v124;
        goto LABEL_31;
      }
      v70 = v100;
      (*v98)(v100, v63, v57);
      sub_1009C1E10((unint64_t *)&qword_10167BDC0, (void (*)(uint64_t))&type metadata accessor for UUID);
      char v71 = dispatch thunk of static Equatable.== infix(_:_:)();
      v72 = *v101;
      v73 = v70;
      uint64_t v69 = v124;
      (*v101)((uint64_t)v73, v57);
      sub_100522F00(v114, (uint64_t *)&unk_101674520);
      sub_100522F00(v113, (uint64_t *)&unk_101674520);
      v72(v51, v57);
      uint64_t v49 = (uint64_t)v111;
      uint64_t v68 = sub_100522F00((uint64_t)v111, (uint64_t *)&unk_101674520);
      unint64_t v67 = v125;
      if (v71) {
        goto LABEL_28;
      }
LABEL_31:
      uint64_t v75 = v110;
      ((void (*)(uint64_t))v117)(v68);
      v118(v75, 0, 1, v66);
      uint64_t v76 = *(void *)&v122[v121];
      if (*(_UNKNOWN ****)v76 != &off_1016863C8) {
        uint64_t v76 = 0;
      }
      uint64_t v77 = v76 + *(void *)(*(void *)v76 + 752);
      swift_beginAccess();
      uint64_t v78 = v108;
      sub_1009C1CE4(v77, v108, type metadata accessor for CRLConnectionLineCRDTData);
      uint64_t v79 = (uint64_t)v112;
      CRRegister.wrappedValue.getter();
      sub_1009C1E58(v78, type metadata accessor for CRLConnectionLineCRDTData);
      uint64_t v80 = (uint64_t)v105;
      uint64_t v81 = (uint64_t)&v105[*(int *)(v69 + 48)];
      sub_100522E9C(v75, (uint64_t)v105, (uint64_t *)&unk_101674520);
      sub_100522E9C(v79, v81, (uint64_t *)&unk_101674520);
      if (v64(v80, 1, v66) == 1)
      {
        sub_100522F00(v79, (uint64_t *)&unk_101674520);
        sub_100522F00(v75, (uint64_t *)&unk_101674520);
        if (v64(v81, 1, v66) == 1)
        {
          sub_100522F00(v80, (uint64_t *)&unk_101674520);
          unint64_t v46 = (unint64_t)v104;
          uint64_t v52 = v125;
LABEL_38:
          id v86 = v52;
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
          if (*(void *)((v127 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v127 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          }
          specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized Array._endMutation()();
          uint64_t v49 = (uint64_t)v111;
          goto LABEL_15;
        }
        goto LABEL_14;
      }
      uint64_t v82 = (uint64_t)v99;
      sub_100522E9C(v80, (uint64_t)v99, (uint64_t *)&unk_101674520);
      if (v64(v81, 1, v66) == 1)
      {
        sub_100522F00((uint64_t)v112, (uint64_t *)&unk_101674520);
        sub_100522F00(v75, (uint64_t *)&unk_101674520);
        (*v101)(v82, v66);
LABEL_14:
        sub_100522F00(v80, (uint64_t *)&unk_10168A0C0);
        unint64_t v46 = (unint64_t)v104;
        uint64_t v52 = v125;
        goto LABEL_15;
      }
      v83 = v100;
      (*v98)(v100, v81, v66);
      sub_1009C1E10((unint64_t *)&qword_10167BDC0, (void (*)(uint64_t))&type metadata accessor for UUID);
      char v84 = dispatch thunk of static Equatable.== infix(_:_:)();
      v85 = *v101;
      (*v101)((uint64_t)v83, v66);
      sub_100522F00((uint64_t)v112, (uint64_t *)&unk_101674520);
      sub_100522F00(v110, (uint64_t *)&unk_101674520);
      v85(v82, v66);
      uint64_t v49 = (uint64_t)v111;
      sub_100522F00(v80, (uint64_t *)&unk_101674520);
      unint64_t v46 = (unint64_t)v104;
      uint64_t v52 = v125;
      if (v84) {
        goto LABEL_38;
      }
LABEL_15:
      ++v50;

      uint64_t v51 = (uint64_t)v109;
      if (v103 == v50)
      {

        swift_bridgeObjectRelease();
        unint64_t v39 = v127;
        uint64_t v1 = v96;
        goto LABEL_45;
      }
    }
    sub_100522F00(v62, (uint64_t *)&unk_101674520);
    sub_100522F00(v56, (uint64_t *)&unk_101674520);
    unsigned int v65 = v64(v63, 1, v57);
    uint64_t v66 = v57;
    unint64_t v67 = v125;
    if (v65 != 1) {
      goto LABEL_26;
    }
    sub_100522F00(v49, (uint64_t *)&unk_101674520);
LABEL_28:
    id v74 = v67;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)((v127 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v127 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    uint64_t v68 = specialized Array._endMutation()();
    uint64_t v69 = v124;
    uint64_t v49 = (uint64_t)v111;
    goto LABEL_31;
  }
  __break(1u);
  return result;
}

void sub_1009BA894(void *a1, uint64_t a2, uint64_t a3)
{
  id v6 = [a1 layoutForInfo:a2];
  if (v6)
  {
    self;
    uint64_t v4 = (void *)swift_dynamicCastObjCClass();
    if (v4)
    {
      unsigned __int8 v5 = [v4 isTailEndOnLeft];

      swift_beginAccess();
      *(unsigned char *)(a3 + 16) = v5;
    }
    else
    {
    }
  }
}

uint64_t sub_1009BA99C()
{
  uint64_t v1 = **(void **)(v0 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
  uint64_t result = swift_conformsToProtocol2();
  if (result)
  {
    uint64_t v3 = *(uint64_t (**)(uint64_t))(v1 + 704);
    uint64_t v4 = swift_retain();
    unsigned __int8 v5 = (void *)v3(v4);
    swift_release();
    self;
    id v6 = (void *)swift_dynamicCastObjCClass();
    if (v6)
    {
      uint64_t v7 = v6;
      id v8 = [v6 type];
      if (v8)
      {
        if (v8 == (id)1)
        {

          uint64_t v9 = (unint64_t *)&unk_10168A0B8;
          return sub_10050BF48(0, v9);
        }
        sub_1005057FC((uint64_t *)&unk_101672B40);
        uint64_t inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = xmmword_10117E810;
        [v7 type];
        type metadata accessor for CRLConnectionLinePathSourceType(0);
        sub_1005057FC(&qword_101672B50);
        swift_dynamicCast();
        sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"layoutClass", 11, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLConnectionLineItem.swift", 92, 2, 103, (uint64_t)"Unexpected connection line path source type (%d).", 49, 2u, inited);
        sub_1005598CC(inited, (uint64_t)"layoutClass", 11, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLConnectionLineItem.swift", 92, 2, 103);

        swift_setDeallocating();
        swift_arrayDestroy();
      }
      else
      {
      }
    }
    else
    {

      sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"layoutClass", 11, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLConnectionLineItem.swift", 92, 2, 93, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"layoutClass", 11, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLConnectionLineItem.swift", 92, 2, 93);
    }
    uint64_t v9 = (unint64_t *)&unk_10168A0B0;
    return sub_10050BF48(0, v9);
  }
  __break(1u);
  return result;
}

uint64_t sub_1009BAD20()
{
  uint64_t v1 = type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData(0);
  __chkstk_darwin(v1, v2);
  id v74 = (char *)&v73 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4, v5);
  uint64_t v75 = (char *)&v73 - v6;
  __chkstk_darwin(v7, v8);
  uint64_t v10 = (char *)&v73 - v9;
  __chkstk_darwin(v11, v12);
  uint64_t v14 = (char *)&v73 - v13;
  uint64_t v81 = v0;
  uint64_t v80 = v0 + OBJC_IVAR____TtC8Freeform12CRLBoardItem__parentItem;
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v16 = (void *)Strong;
    type metadata accessor for CRLFreehandDrawingItem();
    if ([v16 isKindOfClass:swift_getObjCClassFromMetadata()])
    {
      sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"isFreehandDrawingShape", 22, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLShapeItem.swift", 83, 2, 152, (uint64_t)"Regular shapes should not be inside freehand drawings.", 54, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"isFreehandDrawingShape", 22, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLShapeItem.swift", 83, 2, 152);
    }
  }
  uint64_t v78 = OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData;
  uint64_t v17 = **(void **)(v81 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
  uint64_t v79 = &protocol descriptor for CRLAbstractShapeItemDataProtocol;
  uint64_t result = swift_conformsToProtocol2();
  if (!result)
  {
    __break(1u);
LABEL_37:
    __break(1u);
LABEL_38:
    __break(1u);
    goto LABEL_39;
  }
  uint64_t v19 = result;
  uint64_t v20 = *(void (**)(uint64_t, uint64_t))(result + 16);
  swift_retain();
  v20(v17, v19);
  swift_release();
  uint64_t v76 = v1;
  uint64_t v77 = sub_1005057FC((uint64_t *)&unk_10168A0D0);
  CRRegister.wrappedValue.getter();
  uint64_t v22 = v103;
  uint64_t v21 = v104;
  uint64_t v23 = v105;
  uint64_t v24 = v106;
  uint64_t v26 = v107;
  uint64_t v25 = v108;
  uint64_t v27 = v109;
  sub_1009C1E58((uint64_t)v14, type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData);
  if (v25)
  {
    uint64_t v103 = v22;
    uint64_t v104 = v21;
    LOBYTE(v105) = v23 & 1;
    HIDWORD(v105) = HIDWORD(v23);
    LODWORD(v106) = v24;
    BYTE4(v106) = BYTE4(v24) & 1;
    uint64_t v107 = v26;
    uint64_t v108 = v25;
    uint64_t v109 = v27;
    sub_10050BF48(0, (unint64_t *)&qword_101672AC0);
    id v73 = sub_10089D008((uint64_t)&v103);
    sub_10051AC38(v22, v21, v23, v24, v26, v25);
    uint64_t v28 = swift_unknownObjectWeakLoadStrong();
    if (v28)
    {
      uint64_t v29 = (void *)v28;
      type metadata accessor for CRLFreehandDrawingItem();
      if ([v29 isKindOfClass:swift_getObjCClassFromMetadata()])
      {
        sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"isFreehandDrawingShape", 22, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLShapeItem.swift", 83, 2, 152, (uint64_t)"Regular shapes should not be inside freehand drawings.", 54, 2u, (uint64_t)_swiftEmptyArrayStorage);
        sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"isFreehandDrawingShape", 22, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLShapeItem.swift", 83, 2, 152);
      }
    }
    uint64_t v30 = **(void **)(v81 + v78);
    uint64_t result = swift_conformsToProtocol2();
    if (!result) {
      goto LABEL_38;
    }
    uint64_t v31 = result;
    uint64_t v32 = *(void (**)(uint64_t, uint64_t))(result + 16);
    swift_retain();
    v32(v30, v31);
    swift_release();
    CRRegister.wrappedValue.getter();
    uint64_t v33 = v96;
    uint64_t v34 = v97;
    uint64_t v35 = v98;
    uint64_t v36 = v99;
    uint64_t v37 = v100;
    uint64_t v38 = v101;
    uint64_t v39 = v102;
    sub_1009C1E58((uint64_t)v10, type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData);
    if (v38)
    {
      uint64_t v96 = v33;
      uint64_t v97 = v34;
      LOBYTE(v98) = v35 & 1;
      HIDWORD(v98) = HIDWORD(v35);
      LODWORD(v99) = v36;
      BYTE4(v99) = BYTE4(v36) & 1;
      uint64_t v100 = v37;
      uint64_t v101 = v38;
      uint64_t v102 = v39;
      id v40 = sub_10089D008((uint64_t)&v96);
      sub_10051AC38(v33, v34, v35, v36, v37, v38);
      id v41 = v73;
      if ([v73 isArrow])
      {
        unsigned __int8 v42 = [v40 isArrow];

        if (v42) {
          return 0;
        }
        goto LABEL_19;
      }
    }
    else
    {
      id v40 = v73;
    }
  }
LABEL_19:
  uint64_t v43 = swift_unknownObjectWeakLoadStrong();
  if (v43)
  {
    uint64_t v44 = (void *)v43;
    type metadata accessor for CRLFreehandDrawingItem();
    if ([v44 isKindOfClass:swift_getObjCClassFromMetadata()])
    {
      sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"isFreehandDrawingShape", 22, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLShapeItem.swift", 83, 2, 152, (uint64_t)"Regular shapes should not be inside freehand drawings.", 54, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"isFreehandDrawingShape", 22, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLShapeItem.swift", 83, 2, 152);
    }
  }
  uint64_t v45 = **(void **)(v81 + v78);
  uint64_t result = swift_conformsToProtocol2();
  if (!result) {
    goto LABEL_37;
  }
  uint64_t v46 = result;
  uint64_t v47 = *(void (**)(uint64_t, uint64_t))(result + 16);
  swift_retain();
  uint64_t v48 = (uint64_t)v75;
  v47(v45, v46);
  swift_release();
  CRRegister.wrappedValue.getter();
  uint64_t v49 = v89;
  uint64_t v50 = v90;
  uint64_t v51 = v91;
  uint64_t v52 = v92;
  uint64_t v54 = v93;
  uint64_t v53 = v94;
  uint64_t v55 = v95;
  sub_1009C1E58(v48, type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData);
  if (v53)
  {
    uint64_t v89 = v49;
    uint64_t v90 = v50;
    LOBYTE(v91) = v51 & 1;
    HIDWORD(v91) = HIDWORD(v51);
    LODWORD(v92) = v52;
    BYTE4(v92) = BYTE4(v52) & 1;
    uint64_t v93 = v54;
    uint64_t v94 = v53;
    uint64_t v95 = v55;
    sub_10050BF48(0, (unint64_t *)&qword_101672AC0);
    id v56 = sub_10089D008((uint64_t)&v89);
    sub_10051AC38(v49, v50, v51, v52, v54, v53);
    unsigned __int8 v57 = [v56 isArrow];

    if (v57) {
      return 1;
    }
  }
  uint64_t v59 = swift_unknownObjectWeakLoadStrong();
  if (v59)
  {
    uint64_t v60 = (void *)v59;
    type metadata accessor for CRLFreehandDrawingItem();
    if ([v60 isKindOfClass:swift_getObjCClassFromMetadata()])
    {
      sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"isFreehandDrawingShape", 22, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLShapeItem.swift", 83, 2, 152, (uint64_t)"Regular shapes should not be inside freehand drawings.", 54, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"isFreehandDrawingShape", 22, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLShapeItem.swift", 83, 2, 152);
    }
  }
  uint64_t v61 = **(void **)(v81 + v78);
  uint64_t result = swift_conformsToProtocol2();
  if (result)
  {
    uint64_t v62 = result;
    uint64_t v63 = *(void (**)(uint64_t, uint64_t))(result + 16);
    swift_retain();
    uint64_t v64 = (uint64_t)v74;
    v63(v61, v62);
    swift_release();
    CRRegister.wrappedValue.getter();
    uint64_t v65 = v82;
    uint64_t v66 = v83;
    uint64_t v67 = v84;
    uint64_t v68 = v85;
    uint64_t v69 = v86;
    uint64_t v70 = v87;
    uint64_t v71 = v88;
    sub_1009C1E58(v64, type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData);
    if (!v70) {
      return 0;
    }
    uint64_t v82 = v65;
    uint64_t v83 = v66;
    LOBYTE(v84) = v67 & 1;
    HIDWORD(v84) = HIDWORD(v67);
    LODWORD(v85) = v68;
    BYTE4(v85) = BYTE4(v68) & 1;
    uint64_t v86 = v69;
    uint64_t v87 = v70;
    uint64_t v88 = v71;
    sub_10050BF48(0, (unint64_t *)&qword_101672AC0);
    id v72 = sub_10089D008((uint64_t)&v82);
    sub_10051AC38(v65, v66, v67, v68, v69, v70);
    id v58 = [v72 isArrow];

    return (uint64_t)v58;
  }
LABEL_39:
  __break(1u);
  return result;
}

uint64_t sub_1009BB7DC()
{
  uint64_t v1 = type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData(0);
  __chkstk_darwin(v1, v2);
  id v74 = (char *)&v73 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4, v5);
  uint64_t v75 = (char *)&v73 - v6;
  __chkstk_darwin(v7, v8);
  uint64_t v10 = (char *)&v73 - v9;
  __chkstk_darwin(v11, v12);
  uint64_t v14 = (char *)&v73 - v13;
  uint64_t v81 = v0;
  uint64_t v80 = v0 + OBJC_IVAR____TtC8Freeform12CRLBoardItem__parentItem;
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v16 = (void *)Strong;
    type metadata accessor for CRLFreehandDrawingItem();
    if ([v16 isKindOfClass:swift_getObjCClassFromMetadata()])
    {
      sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"isFreehandDrawingShape", 22, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLShapeItem.swift", 83, 2, 152, (uint64_t)"Regular shapes should not be inside freehand drawings.", 54, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"isFreehandDrawingShape", 22, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLShapeItem.swift", 83, 2, 152);
    }
  }
  uint64_t v78 = OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData;
  uint64_t v17 = **(void **)(v81 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
  uint64_t v79 = &protocol descriptor for CRLAbstractShapeItemDataProtocol;
  uint64_t result = swift_conformsToProtocol2();
  if (!result)
  {
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  uint64_t v19 = result;
  uint64_t v20 = *(void (**)(uint64_t, uint64_t))(result + 16);
  swift_retain();
  v20(v17, v19);
  swift_release();
  uint64_t v76 = v1;
  uint64_t v77 = sub_1005057FC((uint64_t *)&unk_10168A0D0);
  CRRegister.wrappedValue.getter();
  uint64_t v22 = v103;
  uint64_t v21 = v104;
  uint64_t v23 = v105;
  uint64_t v24 = v106;
  uint64_t v26 = v107;
  uint64_t v25 = v108;
  uint64_t v27 = v109;
  sub_1009C1E58((uint64_t)v14, type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData);
  if (!v25) {
    goto LABEL_17;
  }
  uint64_t v103 = v22;
  uint64_t v104 = v21;
  LOBYTE(v105) = v23 & 1;
  HIDWORD(v105) = HIDWORD(v23);
  LODWORD(v106) = v24;
  BYTE4(v106) = BYTE4(v24) & 1;
  uint64_t v107 = v26;
  uint64_t v108 = v25;
  uint64_t v109 = v27;
  sub_10050BF48(0, (unint64_t *)&qword_101672AC0);
  id v73 = sub_10089D008((uint64_t)&v103);
  sub_10051AC38(v22, v21, v23, v24, v26, v25);
  uint64_t v28 = swift_unknownObjectWeakLoadStrong();
  if (v28)
  {
    uint64_t v29 = (void *)v28;
    type metadata accessor for CRLFreehandDrawingItem();
    if ([v29 isKindOfClass:swift_getObjCClassFromMetadata()])
    {
      sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"isFreehandDrawingShape", 22, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLShapeItem.swift", 83, 2, 152, (uint64_t)"Regular shapes should not be inside freehand drawings.", 54, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"isFreehandDrawingShape", 22, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLShapeItem.swift", 83, 2, 152);
    }
  }
  uint64_t v30 = **(void **)(v81 + v78);
  uint64_t result = swift_conformsToProtocol2();
  if (!result) {
    goto LABEL_37;
  }
  uint64_t v31 = result;
  uint64_t v32 = *(void (**)(uint64_t, uint64_t))(result + 16);
  swift_retain();
  v32(v30, v31);
  swift_release();
  CRRegister.wrappedValue.getter();
  uint64_t v33 = v96;
  uint64_t v34 = v97;
  uint64_t v35 = v98;
  uint64_t v36 = v99;
  uint64_t v37 = v100;
  uint64_t v38 = v101;
  uint64_t v39 = v102;
  sub_1009C1E58((uint64_t)v10, type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData);
  if (!v38)
  {
    id v40 = v73;
    goto LABEL_16;
  }
  uint64_t v96 = v33;
  uint64_t v97 = v34;
  LOBYTE(v98) = v35 & 1;
  HIDWORD(v98) = HIDWORD(v35);
  LODWORD(v99) = v36;
  BYTE4(v99) = BYTE4(v36) & 1;
  uint64_t v100 = v37;
  uint64_t v101 = v38;
  uint64_t v102 = v39;
  id v40 = sub_10089D008((uint64_t)&v96);
  sub_10051AC38(v33, v34, v35, v36, v37, v38);
  id v41 = v73;
  if ([v73 isNone])
  {

LABEL_16:
    goto LABEL_17;
  }
  unsigned __int8 v72 = [v40 isNone];

  if (v72)
  {
LABEL_17:
    uint64_t v42 = swift_unknownObjectWeakLoadStrong();
    if (v42)
    {
      uint64_t v43 = (void *)v42;
      type metadata accessor for CRLFreehandDrawingItem();
      if ([v43 isKindOfClass:swift_getObjCClassFromMetadata()])
      {
        sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"isFreehandDrawingShape", 22, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLShapeItem.swift", 83, 2, 152, (uint64_t)"Regular shapes should not be inside freehand drawings.", 54, 2u, (uint64_t)_swiftEmptyArrayStorage);
        sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"isFreehandDrawingShape", 22, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLShapeItem.swift", 83, 2, 152);
      }
    }
    uint64_t v44 = **(void **)(v81 + v78);
    uint64_t result = swift_conformsToProtocol2();
    if (result)
    {
      uint64_t v45 = result;
      uint64_t v46 = *(void (**)(uint64_t, uint64_t))(result + 16);
      swift_retain();
      uint64_t v47 = (uint64_t)v75;
      v46(v44, v45);
      swift_release();
      CRRegister.wrappedValue.getter();
      uint64_t v48 = v89;
      uint64_t v49 = v90;
      uint64_t v50 = v91;
      uint64_t v51 = v92;
      uint64_t v53 = v93;
      uint64_t v52 = v94;
      uint64_t v54 = v95;
      sub_1009C1E58(v47, type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData);
      if (v52)
      {
        uint64_t v89 = v48;
        uint64_t v90 = v49;
        LOBYTE(v91) = v50 & 1;
        HIDWORD(v91) = HIDWORD(v50);
        LODWORD(v92) = v51;
        BYTE4(v92) = BYTE4(v51) & 1;
        uint64_t v93 = v53;
        uint64_t v94 = v52;
        uint64_t v95 = v54;
        sub_10050BF48(0, (unint64_t *)&qword_101672AC0);
        id v55 = sub_10089D008((uint64_t)&v89);
        sub_10051AC38(v48, v49, v50, v51, v53, v52);
        unsigned int v56 = [v55 isNone];

        if (!v56) {
          return 1;
        }
      }
      uint64_t v57 = swift_unknownObjectWeakLoadStrong();
      if (v57)
      {
        id v58 = (void *)v57;
        type metadata accessor for CRLFreehandDrawingItem();
        if ([v58 isKindOfClass:swift_getObjCClassFromMetadata()])
        {
          sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"isFreehandDrawingShape", 22, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLShapeItem.swift", 83, 2, 152, (uint64_t)"Regular shapes should not be inside freehand drawings.", 54, 2u, (uint64_t)_swiftEmptyArrayStorage);
          sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"isFreehandDrawingShape", 22, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLShapeItem.swift", 83, 2, 152);
        }
      }
      uint64_t v59 = **(void **)(v81 + v78);
      uint64_t result = swift_conformsToProtocol2();
      if (result)
      {
        uint64_t v60 = result;
        uint64_t v61 = *(void (**)(uint64_t, uint64_t))(result + 16);
        swift_retain();
        uint64_t v62 = (uint64_t)v74;
        v61(v59, v60);
        swift_release();
        CRRegister.wrappedValue.getter();
        uint64_t v63 = v82;
        uint64_t v64 = v83;
        uint64_t v65 = v84;
        uint64_t v66 = v85;
        uint64_t v67 = v86;
        uint64_t v68 = v87;
        uint64_t v69 = v88;
        sub_1009C1E58(v62, type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData);
        if (v68)
        {
          uint64_t v82 = v63;
          uint64_t v83 = v64;
          LOBYTE(v84) = v65 & 1;
          HIDWORD(v84) = HIDWORD(v65);
          LODWORD(v85) = v66;
          BYTE4(v85) = BYTE4(v66) & 1;
          uint64_t v86 = v67;
          uint64_t v87 = v68;
          uint64_t v88 = v69;
          sub_10050BF48(0, (unint64_t *)&qword_101672AC0);
          id v70 = sub_10089D008((uint64_t)&v82);
          sub_10051AC38(v63, v64, v65, v66, v67, v68);
          unsigned int v71 = [v70 isNone];

          if (!v71) {
            return 1;
          }
        }
        return 0;
      }
LABEL_38:
      __break(1u);
      return result;
    }
    goto LABEL_36;
  }
  return 0;
}

id sub_1009BC25C()
{
  uint64_t v1 = v0;
  swift_retain();
  uint64_t v2 = sub_1008DD8B4(0);
  swift_release();
  uint64_t v3 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_store);
  uint64_t v4 = (char *)objc_allocWithZone((Class)type metadata accessor for CRLConnectionLineItem());
  *(void *)&v4[OBJC_IVAR____TtC8Freeform13CRLStyledItem__stroke] = 0;
  *(void *)&v4[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_store] = v3;
  *(void *)&v4[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData] = v2;
  v7.receiver = v4;
  v7.super_class = (Class)type metadata accessor for CRLBoardItemBase(0);
  id v5 = v3;
  return [super init];
}

uint64_t sub_1009BC35C(uint64_t a1)
{
  uint64_t v3 = sub_1005057FC(&qword_10168A078);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3, v5);
  uint64_t v39 = (uint64_t)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = type metadata accessor for CRLConnectionLineCRDTData(0);
  __chkstk_darwin(v40, v7);
  uint64_t v9 = (char *)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10, v11);
  uint64_t v13 = (char *)&v38 - v12;
  uint64_t v14 = sub_1005057FC(&qword_10168A070);
  __chkstk_darwin(v14 - 8, v15);
  uint64_t v17 = (char *)&v38 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for CRLConnectionLineItem();
  uint64_t v18 = swift_dynamicCastClass();
  if (v18)
  {
    uint64_t v19 = v18;
    uint64_t v42 = a1;
    swift_unknownObjectRetain();
    uint64_t v41 = sub_100CF6354(v19, v1);
    uint64_t v20 = *(void *)(v1 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
    if (*(_UNKNOWN ****)v20 != &off_1016863C8) {
      uint64_t v20 = 0;
    }
    uint64_t v21 = v20 + *(void *)(*(void *)v20 + 752);
    swift_beginAccess();
    sub_1009C1CE4(v21, (uint64_t)v13, type metadata accessor for CRLConnectionLineCRDTData);
    uint64_t v22 = *(void *)(v19 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
    if (*(_UNKNOWN ****)v22 != &off_1016863C8) {
      uint64_t v22 = 0;
    }
    uint64_t v23 = v22 + *(void *)(*(void *)v22 + 752);
    swift_beginAccess();
    sub_1009C1CE4(v23, (uint64_t)v9, type metadata accessor for CRLConnectionLineCRDTData);
    sub_1009C1E10(&qword_101686800, (void (*)(uint64_t))type metadata accessor for CRLConnectionLineCRDTData);
    CRStruct_3.actionUndoingDifference(from:)();
    sub_1009C1E58((uint64_t)v9, type metadata accessor for CRLConnectionLineCRDTData);
    sub_1009C1E58((uint64_t)v13, type metadata accessor for CRLConnectionLineCRDTData);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v17, 1, v3) == 1)
    {
      sub_100522F00((uint64_t)v17, &qword_10168A070);
      memset(v43, 0, sizeof(v43));
      uint64_t v44 = 1;
    }
    else
    {
      uint64_t v24 = *(int *)(v3 + 48);
      uint64_t v25 = (uint64_t)&v17[v24];
      uint64_t v26 = *(int *)(v3 + 64);
      uint64_t v27 = (uint64_t)&v17[v26];
      uint64_t v28 = v39;
      uint64_t v29 = v39 + v24;
      uint64_t v30 = v39 + v26;
      sub_10051B3EC((uint64_t)v17, v39, &qword_101689340);
      sub_10051B3EC(v25, v29, (uint64_t *)&unk_10168A080);
      sub_10051B3EC(v27, v30, (uint64_t *)&unk_10168A080);
      uint64_t v44 = v3;
      uint64_t v31 = sub_1005767BC(v43);
      uint64_t v32 = (uint64_t)v31 + *(int *)(v3 + 48);
      uint64_t v33 = (uint64_t)v31 + *(int *)(v3 + 64);
      sub_10051B3EC(v28, (uint64_t)v31, &qword_101689340);
      sub_10051B3EC(v29, v32, (uint64_t *)&unk_10168A080);
      sub_10051B3EC(v30, v33, (uint64_t *)&unk_10168A080);
    }
    uint64_t v34 = v41;
    swift_beginAccess();
    sub_10057D560((uint64_t)v43, 5);
    swift_endAccess();
    swift_unknownObjectRelease();
    return v34;
  }
  else
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"createUndoingMutations(fromSnapshot:)", 37, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLConnectionLineItem.swift", 92, 2, 153, (uint64_t)"Tried to generate undo from mismatched type", 43, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_100586FD4((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Tried to generate undo from mismatched type");
    sub_1005871AC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"createUndoingMutations(fromSnapshot:)", 37, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLConnectionLineItem.swift", 92, 2, 153);
    SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v36, v37);
    uint64_t result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
  return result;
}

uint64_t sub_1009BC8B0(uint64_t a1)
{
  uint64_t v85 = sub_1005057FC(&qword_10168A090);
  uint64_t v81 = *(void *)(v85 - 8);
  __chkstk_darwin(v85, v3);
  uint64_t v80 = (char *)&v76 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5, v6);
  uint64_t v79 = (uint64_t)&v76 - v7;
  __chkstk_darwin(v8, v9);
  uint64_t v78 = (uint64_t)&v76 - v10;
  __chkstk_darwin(v11, v12);
  uint64_t v82 = (uint64_t)&v76 - v13;
  uint64_t v14 = type metadata accessor for CRLConnectionLineCRDTData(0);
  __chkstk_darwin(v14, v15);
  uint64_t v17 = (char *)&v76 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18, v19);
  uint64_t v21 = (char *)&v76 - v20;
  uint64_t v22 = sub_1005057FC(&qword_10168A098);
  __chkstk_darwin(v22 - 8, v23);
  uint64_t v25 = (char *)&v76 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26, v27);
  uint64_t v29 = (char *)&v76 - v28;
  type metadata accessor for CRLConnectionLineItem();
  uint64_t v30 = swift_dynamicCastClass();
  if (v30)
  {
    uint64_t v31 = v30;
    uint64_t v83 = a1;
    swift_unknownObjectRetain();
    uint64_t v84 = sub_100CF66BC(v31, v1);
    uint64_t v32 = *(void *)(v1 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
    if (*(_UNKNOWN ****)v32 != &off_1016863C8) {
      uint64_t v32 = 0;
    }
    uint64_t v33 = v32 + *(void *)(*(void *)v32 + 752);
    swift_beginAccess();
    sub_1009C1CE4(v33, (uint64_t)v21, type metadata accessor for CRLConnectionLineCRDTData);
    uint64_t v34 = *(void *)(v31 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
    if (*(_UNKNOWN ****)v34 != &off_1016863C8) {
      uint64_t v34 = 0;
    }
    uint64_t v35 = v34 + *(void *)(*(void *)v34 + 752);
    swift_beginAccess();
    sub_1009C1CE4(v35, (uint64_t)v17, type metadata accessor for CRLConnectionLineCRDTData);
    sub_1009C1E10((unint64_t *)&unk_10168A0A0, (void (*)(uint64_t))type metadata accessor for CRLConnectionLineCRDTData);
    CRType.observableDifference(from:)();
    sub_1009C1E58((uint64_t)v17, type metadata accessor for CRLConnectionLineCRDTData);
    sub_1009C1E58((uint64_t)v21, type metadata accessor for CRLConnectionLineCRDTData);
    sub_100522E9C((uint64_t)v29, (uint64_t)v25, &qword_10168A098);
    uint64_t v36 = v85;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v81 + 48))(v25, 1, v85) == 1)
    {
      sub_100522F00((uint64_t)v25, &qword_10168A098);
      Swift::String v37 = _swiftEmptyArrayStorage;
      uint64_t v38 = v84;
      if (!*(void *)&_swiftEmptyArrayStorage[2]) {
        goto LABEL_31;
      }
    }
    else
    {
      uint64_t v39 = *(int *)(v36 + 48);
      uint64_t v40 = v82;
      uint64_t v41 = v82 + v39;
      uint64_t v42 = *(int *)(v36 + 64);
      uint64_t v43 = v82 + v42;
      uint64_t v44 = (uint64_t)&v25[v39];
      uint64_t v45 = (uint64_t)&v25[v42];
      sub_10051B3EC((uint64_t)v25, v82, &qword_101689380);
      sub_10051B3EC(v44, v41, &qword_10167D310);
      sub_10051B3EC(v45, v43, &qword_10167D310);
      uint64_t v46 = v78;
      uint64_t v47 = v78 + *(int *)(v36 + 48);
      uint64_t v48 = v78 + *(int *)(v36 + 64);
      sub_100522E9C(v40, v78, &qword_101689380);
      sub_100522E9C(v41, v47, &qword_10167D310);
      sub_100522E9C(v43, v48, &qword_10167D310);
      uint64_t v49 = sub_1005057FC(&qword_101689388);
      int v50 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v49 - 8) + 48))(v46, 1, v49);
      uint64_t v77 = v29;
      if (v50 == 1)
      {
        sub_100522F00(v48, &qword_10167D310);
        sub_100522F00(v47, &qword_10167D310);
        sub_100522F00(v46, &qword_101689380);
      }
      else
      {
        sub_100522F00(v46, &qword_101689380);
        sub_100522F00(v48, &qword_10167D310);
        sub_100522F00(v47, &qword_10167D310);
        if (!*(void *)(v84 + 16) || (sub_100956360(5), (v51 & 1) == 0))
        {
          sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"createSpecificDataObservableDeltas(fromSnapshot:)", 49, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLConnectionLineItem.swift", 92, 2, 174, (uint64_t)"If superData has changed, super should have built keys for it already.", 70, 2u, (uint64_t)_swiftEmptyArrayStorage);
          sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"createSpecificDataObservableDeltas(fromSnapshot:)", 49, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLConnectionLineItem.swift", 92, 2, 174);
        }
      }
      uint64_t v52 = v79;
      uint64_t v53 = v79 + *(int *)(v36 + 48);
      uint64_t v54 = v79 + *(int *)(v36 + 64);
      sub_100522E9C(v40, v79, &qword_101689380);
      sub_100522E9C(v41, v53, &qword_10167D310);
      uint64_t v81 = v43;
      sub_100522E9C(v43, v54, &qword_10167D310);
      uint64_t v55 = type metadata accessor for CRValueObservableDifference();
      unsigned int v56 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v55 - 8) + 48);
      int v57 = v56(v54, 1, v55);
      sub_100522F00(v54, &qword_10167D310);
      sub_100522F00(v53, &qword_10167D310);
      sub_100522F00(v52, &qword_101689380);
      if (v57 == 1)
      {
        Swift::String v37 = _swiftEmptyArrayStorage;
        uint64_t v58 = v82;
        uint64_t v59 = (uint64_t)v80;
      }
      else
      {
        Swift::String v37 = sub_100F61B70(0, 1, 1, _swiftEmptyArrayStorage);
        unint64_t v61 = *((void *)v37 + 2);
        unint64_t v60 = *((void *)v37 + 3);
        if (v61 >= v60 >> 1) {
          Swift::String v37 = sub_100F61B70((double *)(v60 > 1), v61 + 1, 1, v37);
        }
        uint64_t v58 = v82;
        uint64_t v59 = (uint64_t)v80;
        *((void *)v37 + 2) = v61 + 1;
        uint64_t v62 = &v37[2 * v61];
        v62[4] = 5.28758932e180;
        v62[5] = -2.56842574e207;
      }
      uint64_t v63 = v59 + *(int *)(v85 + 48);
      uint64_t v64 = v59 + *(int *)(v85 + 64);
      sub_100522E9C(v58, v59, &qword_101689380);
      sub_100522E9C(v41, v63, &qword_10167D310);
      sub_100522E9C(v81, v64, &qword_10167D310);
      if (v56(v63, 1, v55) == 1)
      {
        sub_100522F00(v58, &qword_10168A090);
        sub_100522F00(v64, &qword_10167D310);
        sub_100522F00(v63, &qword_10167D310);
        sub_100522F00(v59, &qword_101689380);
        uint64_t v38 = v84;
        uint64_t v29 = v77;
        if (!*((void *)v37 + 2))
        {
LABEL_31:
          swift_bridgeObjectRelease();
          swift_unknownObjectRelease();
LABEL_32:
          sub_100522F00((uint64_t)v29, &qword_10168A098);
          return v38;
        }
      }
      else
      {
        sub_100522F00(v63, &qword_10167D310);
        sub_100522F00(v64, &qword_10167D310);
        sub_100522F00(v59, &qword_101689380);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          Swift::String v37 = sub_100F61B70(0, *((void *)v37 + 2) + 1, 1, v37);
        }
        uint64_t v38 = v84;
        uint64_t v29 = v77;
        unint64_t v71 = *((void *)v37 + 2);
        unint64_t v70 = *((void *)v37 + 3);
        if (v71 >= v70 >> 1) {
          Swift::String v37 = sub_100F61B70((double *)(v70 > 1), v71 + 1, 1, v37);
        }
        *((void *)v37 + 2) = v71 + 1;
        unsigned __int8 v72 = &v37[2 * v71];
        strcpy((char *)v72 + 32, "connectedFrom");
        *((_WORD *)v72 + 23) = -4864;
        sub_100522F00(v58, &qword_10168A090);
        if (!*((void *)v37 + 2)) {
          goto LABEL_31;
        }
      }
    }
    if (*(void *)(v38 + 16) && (unint64_t v65 = sub_100956360(5), (v66 & 1) != 0))
    {
      uint64_t v87 = *(void *)(*(void *)(v38 + 56) + 8 * v65);
      swift_bridgeObjectRetain();
      sub_1006E0CB8((uint64_t)v37);
      uint64_t v67 = v87;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v86 = v38;
      sub_100972448(v67, 5, isUniquelyReferenced_nonNull_native);
      uint64_t v38 = v86;
    }
    else
    {
      char v69 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v87 = v38;
      sub_100972448((uint64_t)v37, 5, v69);
      uint64_t v38 = v87;
    }
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_32;
  }
  sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"createSpecificDataObservableDeltas(fromSnapshot:)", 49, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLConnectionLineItem.swift", 92, 2, 165, (uint64_t)"Tried to create observable deltas from mismatched type", 54, 2u, (uint64_t)_swiftEmptyArrayStorage);
  sub_100586FD4((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Tried to create observable deltas from mismatched type");
  sub_1005871AC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"createSpecificDataObservableDeltas(fromSnapshot:)", 49, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLConnectionLineItem.swift", 92, 2, 165);
  SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v74, v75);
  uint64_t result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1009BD370(uint64_t a1)
{
  uint64_t v3 = sub_1005057FC(&qword_10168A070);
  __chkstk_darwin(v3 - 8, v4);
  uint64_t v6 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7, v8);
  uint64_t v10 = (char *)&v33 - v9;
  uint64_t v11 = sub_1005057FC(&qword_10168A078);
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11, v13);
  uint64_t v15 = (char *)&v33 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = sub_10088B69C(a1);
  if (!v1)
  {
    uint64_t v17 = (uint64_t *)(a1 + OBJC_IVAR____TtC8Freeform31CRLTransactableUndoingMutations_values);
    swift_beginAccess();
    uint64_t v18 = *v17;
    if (*(void *)(v18 + 16))
    {
      swift_bridgeObjectRetain();
      unint64_t v19 = sub_100956360(5);
      if (v20)
      {
        sub_100522E9C(*(void *)(v18 + 56) + 32 * v19, (uint64_t)&v36, &qword_101672BF0);
      }
      else
      {
        uint64_t v36 = 0;
        uint64_t v37 = 0;
        uint64_t v38 = 0;
        uint64_t v39 = 1;
      }
      swift_bridgeObjectRelease();
      if (v39 != 1)
      {
        sub_10051B3EC((uint64_t)&v36, (uint64_t)v40, &qword_101672BF0);
        if (v41)
        {
          int v25 = swift_dynamicCast();
          uint64_t v26 = *(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56);
          v26(v10, v25 ^ 1u, 1, v11);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) != 1)
          {
            uint64_t v27 = *(int *)(v11 + 48);
            uint64_t v28 = (uint64_t)&v15[v27];
            uint64_t v29 = *(int *)(v11 + 64);
            uint64_t v42 = &v15[v29];
            uint64_t v33 = &v10[v27];
            uint64_t v34 = &v15[v27];
            uint64_t v35 = v26;
            uint64_t v30 = (uint64_t)&v10[v29];
            sub_10051B3EC((uint64_t)v10, (uint64_t)v15, &qword_101689340);
            sub_10051B3EC((uint64_t)v33, v28, (uint64_t *)&unk_10168A080);
            sub_10051B3EC(v30, (uint64_t)v42, (uint64_t *)&unk_10168A080);
            uint64_t v31 = (uint64_t)&v6[*(int *)(v11 + 48)];
            uint64_t v32 = (uint64_t)&v6[*(int *)(v11 + 64)];
            sub_100522E9C((uint64_t)v15, (uint64_t)v6, &qword_101689340);
            sub_100522E9C((uint64_t)v34, v31, (uint64_t *)&unk_10168A080);
            sub_100522E9C((uint64_t)v42, v32, (uint64_t *)&unk_10168A080);
            v35(v6, 0, 1, v11);
            swift_beginAccess();
            type metadata accessor for CRLConnectionLineCRDTData(0);
            sub_1009C1E10(&qword_101686800, (void (*)(uint64_t))type metadata accessor for CRLConnectionLineCRDTData);
            swift_retain();
            CRStruct_3.apply(_:)();
            sub_100522F00((uint64_t)v6, &qword_10168A070);
            swift_endAccess();
            swift_release();
            uint64_t v23 = &qword_10168A078;
            uint64_t v24 = (uint64_t)v15;
            return sub_100522F00(v24, v23);
          }
LABEL_10:
          uint64_t v23 = &qword_10168A070;
          uint64_t v24 = (uint64_t)v10;
          return sub_100522F00(v24, v23);
        }
        uint64_t v21 = &qword_101672BF0;
        uint64_t v22 = (uint64_t *)v40;
LABEL_9:
        sub_100522F00((uint64_t)v22, v21);
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v10, 1, 1, v11);
        goto LABEL_10;
      }
    }
    else
    {
      uint64_t v36 = 0;
      uint64_t v37 = 0;
      uint64_t v38 = 0;
      uint64_t v39 = 1;
    }
    uint64_t v21 = (uint64_t *)&unk_1016725E0;
    uint64_t v22 = &v36;
    goto LABEL_9;
  }
  return result;
}

char *sub_1009BD7F4(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  uint64_t v186 = a5;
  uint64_t v161 = a1;
  uint64_t v162 = a2;
  uint64_t v7 = type metadata accessor for CRLConnectionLineCRDTData(0);
  __chkstk_darwin(v7, v8);
  uint64_t v10 = (char *)&v156 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11, v12);
  uint64_t v14 = (char *)&v156 - v13;
  uint64_t v15 = sub_1005057FC((uint64_t *)&unk_101674520);
  __chkstk_darwin(v15 - 8, v16);
  uint64_t v18 = (char *)&v156 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19, v20);
  uint64_t v22 = (char *)&v156 - v21;
  uint64_t v23 = type metadata accessor for CRLPathSourceData(0);
  __chkstk_darwin(v23 - 8, v24);
  uint64_t v26 = (char *)&v156 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v27, v28);
  uint64_t v30 = (char *)&v156 - v29;
  __chkstk_darwin(v31, v32);
  uint64_t v175 = (uint64_t)&v156 - v33;
  __chkstk_darwin(v34, v35);
  uint64_t v177 = (uint64_t)&v156 - v36;
  v188 = (double *)type metadata accessor for CRLShapeItemParentAffinity(0);
  __chkstk_darwin(v188, v37);
  v174 = (char *)&v156 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v39, v40);
  v173 = (char *)&v156 - v41;
  __chkstk_darwin(v42, v43);
  v172 = (char *)&v156 - v44;
  __chkstk_darwin(v45, v46);
  v171 = (char *)&v156 - v47;
  v187 = (char *)sub_1005057FC(&qword_1016892B0);
  __chkstk_darwin(v187, v48);
  v170 = (char *)&v156 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v50, v51);
  v169 = (char *)&v156 - v52;
  __chkstk_darwin(v53, v54);
  v168 = (char *)&v156 - v55;
  __chkstk_darwin(v56, v57);
  v167 = (char *)&v156 - v58;
  if (a3 != 5)
  {
    if (a3)
    {
      ObjectType = (ProtocolDescriptor *)swift_getObjectType();
      uint64_t v112 = v161;
      uint64_t v113 = v162;
      uint64_t v114 = v190;
      uint64_t v115 = v186;
      return (char *)sub_100A9EB60(v112, v113, a3, a4, v114, ObjectType, v115);
    }
    v176 = v30;
    type metadata accessor for CRLShapeItem();
    uint64_t result = (char *)swift_dynamicCastClass();
    uint64_t v60 = v162;
    if (!result) {
      return result;
    }
    uint64_t v158 = a4;
    v157 = result;
    uint64_t v61 = *(void *)&result[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData];
    v165 = &protocol descriptor for CRLAbstractShapeItemDataProtocol;
    if (!swift_conformsToProtocol2())
    {
LABEL_107:
      __break(1u);
LABEL_108:
      type metadata accessor for CRLChangeProperty(0);
      uint64_t result = (char *)KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
      __break(1u);
      return result;
    }
    uint64_t v62 = *(char **)(v60 + 16);
    if (!v62)
    {
      swift_unknownObjectRetain();
      swift_retain();
LABEL_100:
      swift_unknownObjectRetain();
      sub_100CF81E0(v161, v60, 0, v157, v190);
      swift_release();
      return (char *)swift_unknownObjectRelease_n();
    }
    uint64_t v178 = v161 + OBJC_IVAR____TtC8Freeform14CRLPropertyMap_data;
    v163 = v176 + 184;
    uint64_t v164 = v177 + 184;
    v159 = v26 + 184;
    uint64_t v160 = v175 + 184;
    swift_unknownObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    uint64_t v63 = (void *)(v60 + 40);
    v166 = v26;
    uint64_t v186 = v61;
    while (1)
    {
      BOOL v122 = *(v63 - 1) == 0x6641746E65726170 && *v63 == 0xEE007974696E6966;
      if (!v122 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
        goto LABEL_72;
      }
      v184 = v63;
      v185 = v62;
      uint64_t v123 = *(void *)&v190[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData];
      if (!swift_conformsToProtocol2()) {
        goto LABEL_106;
      }
      uint64_t v124 = *(void (**)(void))(*(void *)v61 + 640);
      uint64_t v125 = (uint64_t)v167;
      uint64_t v181 = *(void *)v61 + 640;
      v182 = v124;
      v124();
      swift_retain();
      uint64_t v126 = sub_1005057FC(&qword_101686808);
      uint64_t v127 = (uint64_t)v171;
      CRRegister.wrappedValue.getter();
      sub_100522F00(v125, &qword_1016892B0);
      v128 = v188;
      uint64_t v129 = v177;
      sub_1009C1CE4(v127 + *((int *)v188 + 5), v177, type metadata accessor for CRLPathSourceData);
      uint64_t v130 = sub_1009C1E58(v127, type metadata accessor for CRLShapeItemParentAffinity);
      uint64_t v131 = *(void *)v123;
      v132 = *(void (**)(uint64_t))(*(void *)v123 + 640);
      uint64_t v133 = (uint64_t)v168;
      uint64_t v189 = v123;
      v179 = v132;
      uint64_t v180 = v131 + 640;
      v132(v130);
      uint64_t v134 = (uint64_t)v172;
      uint64_t v183 = v126;
      CRRegister.wrappedValue.getter();
      sub_100522F00(v133, &qword_1016892B0);
      uint64_t v135 = v134 + *((int *)v128 + 5);
      uint64_t v136 = v175;
      sub_1009C1CE4(v135, v175, type metadata accessor for CRLPathSourceData);
      sub_1009C1E58(v134, type metadata accessor for CRLShapeItemParentAffinity);
      sub_10051B3EC(v164, (uint64_t)v218, &qword_10168A060);
      sub_10051B3EC((uint64_t)v218, (uint64_t)&v219, &qword_10168A060);
      if (sub_1008E0338((uint64_t)&v219) == 1) {
        goto LABEL_87;
      }
      sub_10051B3EC(v160, (uint64_t)v205, &qword_10168A060);
      sub_10051B3EC((uint64_t)v205, (uint64_t)v206, &qword_10168A060);
      if (sub_1008E0338((uint64_t)v206) == 1) {
        break;
      }
      if (!v225) {
        break;
      }
      if (!v212) {
        break;
      }
      float v137 = v223;
      float v138 = v224;
      float v139 = v211;
      float v140 = v210;
      uint64_t v195 = v221;
      char v196 = v222 & 1;
      v193 = v208;
      char v194 = v209 & 1;
      sub_1009C1D4C();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      char v141 = static CRExtensible.== infix(_:_:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v141 & 1) == 0) {
        break;
      }
      BOOL v142 = sub_100064084(v137, v138, v140, v139);
      sub_1009C1E58(v136, type metadata accessor for CRLPathSourceData);
      uint64_t v143 = sub_1009C1E58(v177, type metadata accessor for CRLPathSourceData);
      if (!v142) {
        goto LABEL_88;
      }
LABEL_89:
      uint64_t v144 = (uint64_t)v169;
      ((void (*)(uint64_t))v182)(v143);
      uint64_t v145 = (uint64_t)v173;
      CRRegister.wrappedValue.getter();
      sub_100522F00(v144, &qword_1016892B0);
      v146 = v188;
      uint64_t v121 = (uint64_t)v176;
      sub_1009C1CE4(v145 + *((int *)v188 + 5), (uint64_t)v176, type metadata accessor for CRLPathSourceData);
      uint64_t v147 = sub_1009C1E58(v145, type metadata accessor for CRLShapeItemParentAffinity);
      uint64_t v148 = (uint64_t)v170;
      v179(v147);
      uint64_t v149 = (uint64_t)v174;
      CRRegister.wrappedValue.getter();
      sub_100522F00(v148, &qword_1016892B0);
      uint64_t v120 = (uint64_t)v166;
      sub_1009C1CE4(v149 + *((int *)v146 + 5), (uint64_t)v166, type metadata accessor for CRLPathSourceData);
      sub_1009C1E58(v149, type metadata accessor for CRLShapeItemParentAffinity);
      sub_10051B3EC((uint64_t)v163, (uint64_t)v205, &qword_10168A060);
      sub_10051B3EC((uint64_t)v205, (uint64_t)v206, &qword_10168A060);
      if (sub_1008E0338((uint64_t)v206) != 1)
      {
        sub_10051B3EC((uint64_t)v159, (uint64_t)&v193, &qword_10168A060);
        sub_10051B3EC((uint64_t)&v193, (uint64_t)&v195, &qword_10168A060);
        if (sub_1008E0338((uint64_t)&v195) != 1 && v217 && v202)
        {
          float v150 = v215;
          float v151 = v216;
          float v152 = v201;
          float v153 = v200;
          uint64_t v203 = v213;
          char v204 = v214 & 1;
          uint64_t v191 = v198;
          char v192 = v199 & 1;
          sub_1009C1D4C();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          char v154 = static CRExtensible.== infix(_:_:)();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v154)
          {
            BOOL v155 = sub_100064084(v150, v151, v153, v152);
            sub_1009C1E58((uint64_t)v166, type metadata accessor for CRLPathSourceData);
            sub_1009C1E58((uint64_t)v176, type metadata accessor for CRLPathSourceData);
            if (v155) {
              goto LABEL_71;
            }
            goto LABEL_70;
          }
          uint64_t v120 = (uint64_t)v166;
        }
        uint64_t v121 = (uint64_t)v176;
      }
      sub_1009C1E58(v120, type metadata accessor for CRLPathSourceData);
      sub_1009C1E58(v121, type metadata accessor for CRLPathSourceData);
LABEL_70:
      v197 = &type metadata for Bool;
      LOBYTE(v195) = 1;
      sub_100522E9C((uint64_t)&v195, (uint64_t)&v193, &qword_101672BF0);
      swift_beginAccess();
      sub_10057D61C((uint64_t)&v193, 0x23uLL);
      swift_endAccess();
      sub_100522F00((uint64_t)&v195, &qword_101672BF0);
LABEL_71:
      swift_release();
      uint64_t v62 = v185;
      uint64_t v61 = v186;
      uint64_t v63 = v184;
LABEL_72:
      v63 += 2;
      if (!--v62)
      {
        uint64_t v60 = v162;
        swift_bridgeObjectRelease();
        goto LABEL_100;
      }
    }
    uint64_t v129 = v177;
LABEL_87:
    sub_1009C1E58(v136, type metadata accessor for CRLPathSourceData);
    sub_1009C1E58(v129, type metadata accessor for CRLPathSourceData);
LABEL_88:
    v207 = &type metadata for Bool;
    v206[0] = 1;
    sub_100522E9C((uint64_t)v206, (uint64_t)v205, &qword_101672BF0);
    swift_beginAccess();
    sub_10057D61C((uint64_t)v205, 0x22uLL);
    swift_endAccess();
    uint64_t v143 = sub_100522F00((uint64_t)v206, &qword_101672BF0);
    goto LABEL_89;
  }
  v185 = v18;
  v187 = v10;
  uint64_t v64 = *(void *)(v162 + 16);
  if (!v64)
  {
    v118 = _swiftEmptyArrayStorage;
    uint64_t v116 = v161;
    uint64_t v117 = v186;
    if (*(void *)&_swiftEmptyArrayStorage[2]) {
      goto LABEL_65;
    }
    return (char *)swift_bridgeObjectRelease();
  }
  uint64_t v189 = v7;
  uint64_t v158 = a4;
  unint64_t v65 = (void *)(v161 + OBJC_IVAR____TtC8Freeform14CRLPropertyMap_data);
  char v66 = (uint64_t *)(swift_bridgeObjectRetain() + 40);
  v188 = _swiftEmptyArrayStorage;
  do
  {
    uint64_t v67 = *(v66 - 1);
    uint64_t v68 = *v66;
    BOOL v69 = v67 == 0x657463656E6E6F63 && v68 == 0xED00006D6F724664;
    if (v69 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
      uint64_t v70 = *(void *)&v190[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData];
      if (*(_UNKNOWN ****)v70 != &off_1016863C8) {
        uint64_t v70 = 0;
      }
      uint64_t v71 = v70 + *(void *)(*(void *)v70 + 752);
      swift_beginAccess();
      sub_1009C1CE4(v71, (uint64_t)v14, type metadata accessor for CRLConnectionLineCRDTData);
      sub_1005057FC(&qword_101680140);
      CRRegister.wrappedValue.getter();
      sub_1009C1E58((uint64_t)v14, type metadata accessor for CRLConnectionLineCRDTData);
      uint64_t v72 = type metadata accessor for UUID();
      uint64_t v73 = *(void *)(v72 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v73 + 48))(v22, 1, v72) == 1)
      {
        sub_100522F00((uint64_t)v22, (uint64_t *)&unk_101674520);
        long long v219 = 0u;
        long long v220 = 0u;
      }
      else
      {
        *((void *)&v220 + 1) = v72;
        CKRecordID v74 = sub_1005767BC((uint64_t *)&v219);
        (*(void (**)(uint64_t *, char *, uint64_t))(v73 + 32))(v74, v22, v72);
      }
      swift_beginAccess();
      sub_100522E9C((uint64_t)&v219, (uint64_t)v218, &qword_101672BF0);
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v193 = (void *)*v65;
      uint64_t v76 = v193;
      void *v65 = 0x8000000000000000;
      unint64_t v78 = sub_1009563E8();
      uint64_t v79 = v76[2];
      BOOL v80 = (v77 & 1) == 0;
      uint64_t v81 = v79 + v80;
      if (__OFADD__(v79, v80))
      {
        __break(1u);
LABEL_103:
        __break(1u);
LABEL_104:
        __break(1u);
LABEL_105:
        __break(1u);
LABEL_106:
        __break(1u);
        goto LABEL_107;
      }
      char v82 = v77;
      if (v76[3] >= v81)
      {
        if (isUniquelyReferenced_nonNull_native)
        {
          uint64_t v85 = v193;
          if ((v77 & 1) == 0) {
            goto LABEL_53;
          }
        }
        else
        {
          sub_10097C320();
          uint64_t v85 = v193;
          if ((v82 & 1) == 0) {
            goto LABEL_53;
          }
        }
      }
      else
      {
        sub_10095F04C(v81, isUniquelyReferenced_nonNull_native);
        uint64_t v83 = sub_1009563E8();
        if ((v82 & 1) != (v84 & 1)) {
          goto LABEL_108;
        }
        unint64_t v78 = v83;
        uint64_t v85 = v193;
        if ((v82 & 1) == 0)
        {
LABEL_53:
          v85[(v78 >> 6) + 8] |= 1 << v78;
          *(void *)(v85[6] + 8 * v78) = 32;
          sub_10051B3EC((uint64_t)v218, v85[7] + 32 * v78, &qword_101672BF0);
          uint64_t v110 = v85[2];
          BOOL v104 = __OFADD__(v110, 1);
          uint64_t v105 = v110 + 1;
          if (v104) {
            goto LABEL_103;
          }
          goto LABEL_54;
        }
      }
LABEL_26:
      sub_1006063BC((uint64_t)v218, v85[7] + 32 * v78, &qword_101672BF0);
LABEL_55:
      void *v65 = v85;
      swift_bridgeObjectRelease();
      swift_endAccess();
      sub_100522F00((uint64_t)&v219, &qword_101672BF0);
      goto LABEL_56;
    }
    BOOL v86 = v67 == 0x657463656E6E6F63 && v68 == 0xEB000000006F5464;
    if (v86 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
      uint64_t v87 = *(void *)&v190[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData];
      if (*(_UNKNOWN ****)v87 != &off_1016863C8) {
        uint64_t v87 = 0;
      }
      uint64_t v88 = v87 + *(void *)(*(void *)v87 + 752);
      swift_beginAccess();
      uint64_t v89 = (uint64_t)v187;
      sub_1009C1CE4(v88, (uint64_t)v187, type metadata accessor for CRLConnectionLineCRDTData);
      sub_1005057FC(&qword_101680140);
      uint64_t v90 = (uint64_t)v185;
      CRRegister.wrappedValue.getter();
      sub_1009C1E58(v89, type metadata accessor for CRLConnectionLineCRDTData);
      uint64_t v91 = type metadata accessor for UUID();
      uint64_t v92 = *(void *)(v91 - 8);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v92 + 48))(v90, 1, v91) == 1)
      {
        sub_100522F00(v90, (uint64_t *)&unk_101674520);
        long long v219 = 0u;
        long long v220 = 0u;
      }
      else
      {
        *((void *)&v220 + 1) = v91;
        uint64_t v93 = sub_1005767BC((uint64_t *)&v219);
        (*(void (**)(uint64_t *, uint64_t, uint64_t))(v92 + 32))(v93, v90, v91);
      }
      swift_beginAccess();
      sub_100522E9C((uint64_t)&v219, (uint64_t)v218, &qword_101672BF0);
      char v94 = swift_isUniquelyReferenced_nonNull_native();
      v193 = (void *)*v65;
      uint64_t v95 = v193;
      void *v65 = 0x8000000000000000;
      unint64_t v78 = sub_1009563E8();
      uint64_t v97 = v95[2];
      BOOL v98 = (v96 & 1) == 0;
      uint64_t v99 = v97 + v98;
      if (__OFADD__(v97, v98)) {
        goto LABEL_104;
      }
      char v100 = v96;
      if (v95[3] >= v99)
      {
        if (v94)
        {
          uint64_t v85 = v193;
          if (v96) {
            goto LABEL_26;
          }
        }
        else
        {
          sub_10097C320();
          uint64_t v85 = v193;
          if (v100) {
            goto LABEL_26;
          }
        }
      }
      else
      {
        sub_10095F04C(v99, v94);
        uint64_t v101 = sub_1009563E8();
        if ((v100 & 1) != (v102 & 1)) {
          goto LABEL_108;
        }
        unint64_t v78 = v101;
        uint64_t v85 = v193;
        if (v100) {
          goto LABEL_26;
        }
      }
      v85[(v78 >> 6) + 8] |= 1 << v78;
      *(void *)(v85[6] + 8 * v78) = 33;
      sub_10051B3EC((uint64_t)v218, v85[7] + 32 * v78, &qword_101672BF0);
      uint64_t v103 = v85[2];
      BOOL v104 = __OFADD__(v103, 1);
      uint64_t v105 = v103 + 1;
      if (v104) {
        goto LABEL_105;
      }
LABEL_54:
      v85[2] = v105;
      goto LABEL_55;
    }
    swift_bridgeObjectRetain();
    if (swift_isUniquelyReferenced_nonNull_native()) {
      uint64_t v106 = v188;
    }
    else {
      uint64_t v106 = sub_100F61B70(0, *((void *)v188 + 2) + 1, 1, v188);
    }
    unint64_t v108 = *((void *)v106 + 2);
    unint64_t v107 = *((void *)v106 + 3);
    if (v108 >= v107 >> 1) {
      uint64_t v106 = sub_100F61B70((double *)(v107 > 1), v108 + 1, 1, v106);
    }
    *((void *)v106 + 2) = v108 + 1;
    v188 = v106;
    uint64_t v109 = &v106[2 * v108];
    *((void *)v109 + 4) = v67;
    *((void *)v109 + 5) = v68;
LABEL_56:
    v66 += 2;
    --v64;
  }
  while (v64);
  swift_bridgeObjectRelease();
  a4 = v158;
  uint64_t v116 = v161;
  uint64_t v117 = v186;
  v118 = v188;
  if (!*((void *)v188 + 2)) {
    return (char *)swift_bridgeObjectRelease();
  }
LABEL_65:
  v119 = (ProtocolDescriptor *)swift_getObjectType();
  sub_100A9EB60(v116, (uint64_t)v118, 5, a4, v190, v119, v117);
  return (char *)swift_bridgeObjectRelease();
}

void sub_1009BEC7C(void *a1)
{
  uint64_t v3 = sub_1005057FC((uint64_t *)&unk_101674520);
  __chkstk_darwin(v3 - 8, v4);
  uint64_t v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7, v8);
  uint64_t v10 = (char *)&v21 - v9;
  if (!*(void *)(v1 + OBJC_IVAR____TtC8Freeform12CRLBoardItem_transactionContext)
    && (uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong()) != 0
    && (uint64_t v12 = Strong,
        char v13 = (*(uint64_t (**)(void))((swift_isaMask & *Strong) + 0x2F0))(),
        v12,
        (v13 & 1) != 0))
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"_guardTransaction()", 19, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLTransactions/CRLTransactable.swift", 91, 2, 76, (uint64_t)"Attempting to mutate a CRLTransactable without a CRLTransactableContext set", 75, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_100586FD4((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Attempting to mutate a CRLTransactable without a CRLTransactableContext set");
    sub_1005871AC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"_guardTransaction()", 19, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLTransactions/CRLTransactable.swift", 91, 2, 76);
    SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v19, v20);
    _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
  else if (a1)
  {
    uint64_t v14 = *(void (**)(uint64_t))((swift_isaMask & *a1) + 0x88);
    uint64_t v15 = a1;
    uint64_t v16 = swift_retain();
    v14(v16);
    uint64_t v17 = type metadata accessor for UUID();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v10, 0, 1, v17);
    swift_beginAccess();
    sub_100522E9C((uint64_t)v10, (uint64_t)v6, (uint64_t *)&unk_101674520);
    type metadata accessor for CRLConnectionLineCRDTData(0);
    sub_1005057FC(&qword_101680140);
    CRRegister.wrappedValue.setter();
    sub_100522F00((uint64_t)v10, (uint64_t *)&unk_101674520);
    swift_endAccess();
    swift_release();
  }
  else
  {
    uint64_t v18 = type metadata accessor for UUID();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v10, 1, 1, v18);
    swift_beginAccess();
    sub_100522E9C((uint64_t)v10, (uint64_t)v6, (uint64_t *)&unk_101674520);
    type metadata accessor for CRLConnectionLineCRDTData(0);
    swift_retain();
    sub_1005057FC(&qword_101680140);
    CRRegister.wrappedValue.setter();
    sub_100522F00((uint64_t)v10, (uint64_t *)&unk_101674520);
    swift_endAccess();
    swift_release();
  }
}

id sub_1009BF17C(void *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, id, uint64_t))
{
  uint64_t ObjectType = swift_getObjectType();
  swift_unknownObjectRetain();
  id v8 = a1;
  uint64_t v9 = (void *)a4(a3, v8, ObjectType);
  swift_unknownObjectRelease();

  return v9;
}

void sub_1009BF200(void *a1)
{
  uint64_t v3 = sub_1005057FC((uint64_t *)&unk_101674520);
  __chkstk_darwin(v3 - 8, v4);
  uint64_t v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7, v8);
  uint64_t v10 = (char *)&v21 - v9;
  if (!*(void *)(v1 + OBJC_IVAR____TtC8Freeform12CRLBoardItem_transactionContext)
    && (uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong()) != 0
    && (uint64_t v12 = Strong,
        char v13 = (*(uint64_t (**)(void))((swift_isaMask & *Strong) + 0x2F0))(),
        v12,
        (v13 & 1) != 0))
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"_guardTransaction()", 19, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLTransactions/CRLTransactable.swift", 91, 2, 76, (uint64_t)"Attempting to mutate a CRLTransactable without a CRLTransactableContext set", 75, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_100586FD4((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Attempting to mutate a CRLTransactable without a CRLTransactableContext set");
    sub_1005871AC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"_guardTransaction()", 19, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLTransactions/CRLTransactable.swift", 91, 2, 76);
    SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v19, v20);
    _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
  else if (a1)
  {
    uint64_t v14 = *(void (**)(uint64_t))((swift_isaMask & *a1) + 0x88);
    uint64_t v15 = a1;
    uint64_t v16 = swift_retain();
    v14(v16);
    uint64_t v17 = type metadata accessor for UUID();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v10, 0, 1, v17);
    swift_beginAccess();
    sub_100522E9C((uint64_t)v10, (uint64_t)v6, (uint64_t *)&unk_101674520);
    type metadata accessor for CRLConnectionLineCRDTData(0);
    sub_1005057FC(&qword_101680140);
    CRRegister.wrappedValue.setter();
    sub_100522F00((uint64_t)v10, (uint64_t *)&unk_101674520);
    swift_endAccess();
    swift_release();
  }
  else
  {
    uint64_t v18 = type metadata accessor for UUID();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v10, 1, 1, v18);
    swift_beginAccess();
    sub_100522E9C((uint64_t)v10, (uint64_t)v6, (uint64_t *)&unk_101674520);
    type metadata accessor for CRLConnectionLineCRDTData(0);
    swift_retain();
    sub_1005057FC(&qword_101680140);
    CRRegister.wrappedValue.setter();
    sub_100522F00((uint64_t)v10, (uint64_t *)&unk_101674520);
    swift_endAccess();
    swift_release();
  }
}

void sub_1009BF768(unint64_t a1)
{
  uint64_t v3 = v1;
  if (!(a1 >> 62))
  {
    if (*(uint64_t *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10) > 1) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  swift_bridgeObjectRetain();
  uint64_t v47 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (v47 <= 1)
  {
LABEL_3:
    unint64_t v2 = 39;
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"commandToConnect(boardItems:)", 29, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLConnectionLineItem.swift", 92, 2, 368, (uint64_t)"Need to connect at least 2 board items.", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"commandToConnect(boardItems:)", 29, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLConnectionLineItem.swift", 92, 2, 368);
  }
LABEL_4:
  uint64_t v5 = *(uint64_t **)&v3[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData];
  uint64_t v6 = *v5;
  if (swift_conformsToProtocol2())
  {
    uint64_t v7 = *(uint64_t (**)(uint64_t))(v6 + 704);
    uint64_t v8 = swift_retain();
    uint64_t v9 = (void *)v7(v8);
    swift_release();
    self;
    uint64_t v10 = (void *)swift_dynamicCastObjCClass();
    if (v10)
    {
      uint64_t v5 = (uint64_t *)[v10 copy];

      _bridgeAnyObjectToAny(_:)();
      swift_unknownObjectRelease();
      sub_10050BF48(0, (unint64_t *)&unk_10168A0E0);
      if (swift_dynamicCast())
      {
        uint64_t v5 = v50;
        id v11 = [objc_allocWithZone((Class)CRLConnectionLineMagnet) initWithType:1 normalizedPosition:0.5, 0.5];
        [v50 setHeadMagnet:v11];

        id v12 = [objc_allocWithZone((Class)CRLConnectionLineMagnet) initWithType:1 normalizedPosition:0.5, 0.5];
        [v50 setTailMagnet:v12];

        unint64_t v2 = a1 & 0xC000000000000001;
        if ((a1 & 0xC000000000000001) == 0)
        {
          if (*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            char v13 = *(void **)(a1 + 32);
            uint64_t v14 = v3;
            uint64_t v15 = v13;
LABEL_10:
            uint64_t v16 = v15;
            uint64_t v17 = (objc_class *)type metadata accessor for CRLCommandSetConnectionLineConnection();
            id v18 = objc_allocWithZone(v17);
            CKRecordID v19 = v5;
            id v20 = sub_100BDEAB8(v3, v16, 0, v5);
            if (v2)
            {
              uint64_t v21 = v3;
              uint64_t v22 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_23:
              uint64_t v38 = v22;
              id v39 = objc_allocWithZone(v17);
              id v35 = sub_100BDEAB8(v3, v38, 1, v5);
              goto LABEL_24;
            }
            if (*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10) >= 2uLL)
            {
              uint64_t v36 = *(void **)(a1 + 40);
              uint64_t v37 = v3;
              uint64_t v22 = v36;
              goto LABEL_23;
            }
            goto LABEL_32;
          }
          __break(1u);
LABEL_31:
          __break(1u);
LABEL_32:
          __break(1u);
          goto LABEL_33;
        }
LABEL_29:
        uint64_t v49 = v3;
        uint64_t v15 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
        goto LABEL_10;
      }
    }
    else
    {
    }
    if ((a1 & 0xC000000000000001) != 0)
    {
      uint64_t v48 = v3;
      uint64_t v25 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else
    {
      if (!*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        __break(1u);
        goto LABEL_29;
      }
      uint64_t v23 = *(void **)(a1 + 32);
      uint64_t v24 = v3;
      uint64_t v25 = v23;
    }
    uint64_t v26 = v25;
    uint64_t v27 = (objc_class *)type metadata accessor for CRLCommandSetConnectionLineConnection();
    id v28 = objc_allocWithZone(v27);
    id v20 = sub_100BDEDE0(v3, v26, 0);
    if ((a1 & 0xC000000000000001) != 0)
    {
      uint64_t v29 = v3;
      uint64_t v30 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else
    {
      if (*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10) < 2uLL) {
        goto LABEL_31;
      }
      uint64_t v31 = *(void **)(a1 + 40);
      uint64_t v32 = v3;
      uint64_t v30 = v31;
    }
    uint64_t v33 = v30;
    id v34 = objc_allocWithZone(v27);
    id v35 = sub_100BDEDE0(v3, v33, 1);
LABEL_24:
    uint64_t v40 = v35;
    sub_1005057FC((uint64_t *)&unk_101676C10);
    uint64_t v41 = swift_allocObject();
    *(_OWORD *)(v41 + 16) = xmmword_10117DF50;
    *(void *)(v41 + 32) = v20;
    *(void *)(v41 + 40) = v40;
    uint64_t v51 = v41;
    specialized Array._endMutation()();
    id v42 = objc_allocWithZone((Class)type metadata accessor for CRLCommandGroup());
    id v43 = v20;
    id v44 = v40;
    uint64_t v45 = (char *)[v42 init];
    uint64_t v46 = (uint64_t *)&v45[OBJC_IVAR____TtC8Freeform15CRLCommandGroup_commands];
    swift_beginAccess();
    *uint64_t v46 = v51;

    swift_bridgeObjectRelease();
    return;
  }
LABEL_33:
  __break(1u);
}

void sub_1009BFCC8(void *a1)
{
  uint64_t v3 = type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData(0);
  __chkstk_darwin(v3, v4);
  uint64_t v6 = (char *)&v175 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7, v8);
  __chkstk_darwin(v9, v10);
  id v12 = (char *)&v175 - v11;
  __chkstk_darwin(v13, v14);
  __chkstk_darwin(v15, v16);
  id v18 = (char *)&v175 - v17;
  __chkstk_darwin(v19, v20);
  __chkstk_darwin(v21, v22);
  uint64_t v24 = (char *)&v175 - v23;
  __chkstk_darwin(v25, v26);
  uint64_t v31 = (char *)&v175 - v30;
  if (a1)
  {
    uint64_t v181 = v29;
    uint64_t v180 = v28;
    uint64_t v179 = v27;
    id v189 = a1;
    id v32 = [v189 info];
    if (v32)
    {
      id v33 = v32;
      type metadata accessor for CRLConnectionLineItem();
      uint64_t v34 = swift_dynamicCastClass();
      if (v34)
      {
        uint64_t v35 = v34;
        uint64_t v177 = v18;
        uint64_t v175 = v12;
        v176 = v6;
        sub_100BC9500([v189 stroke]);
        uint64_t v183 = v35 + OBJC_IVAR____TtC8Freeform12CRLBoardItem__parentItem;
        uint64_t Strong = swift_unknownObjectWeakLoadStrong();
        id v187 = v33;
        uint64_t v186 = v3;
        uint64_t v188 = v35;
        if (Strong)
        {
          uint64_t v37 = (void *)Strong;
          type metadata accessor for CRLFreehandDrawingItem();
          uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
          swift_unknownObjectRetain();
          if ([v37 isKindOfClass:ObjCClassFromMetadata])
          {
            sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"isFreehandDrawingShape", 22, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLShapeItem.swift", 83, 2, 152, (uint64_t)"Regular shapes should not be inside freehand drawings.", 54, 2u, (uint64_t)_swiftEmptyArrayStorage);
            uint64_t v35 = v188;
            sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"isFreehandDrawingShape", 22, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLShapeItem.swift", 83, 2, 152);
          }
        }
        else
        {
          swift_unknownObjectRetain();
        }
        uint64_t v178 = v1;
        uint64_t v184 = OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData;
        uint64_t v40 = **(void **)(v35 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
        v185 = &protocol descriptor for CRLAbstractShapeItemDataProtocol;
        uint64_t v41 = swift_conformsToProtocol2();
        if (v41)
        {
          uint64_t v42 = v41;
          id v43 = *(void (**)(uint64_t, uint64_t))(v41 + 16);
          swift_retain();
          v43(v40, v42);
          swift_release();
          uint64_t v182 = sub_1005057FC((uint64_t *)&unk_10168A0D0);
          CRRegister.wrappedValue.getter();
          uint64_t v44 = v211;
          uint64_t v45 = v212;
          uint64_t v46 = v213;
          uint64_t v47 = v214;
          uint64_t v48 = v215;
          uint64_t v49 = v216;
          uint64_t v50 = v217;
          sub_1009C1E58((uint64_t)v31, type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData);
          if (v49)
          {
            uint64_t v211 = v44;
            uint64_t v212 = v45;
            LOBYTE(v213) = v46 & 1;
            HIDWORD(v213) = HIDWORD(v46);
            LODWORD(v214) = v47;
            BYTE4(v214) = BYTE4(v47) & 1;
            uint64_t v215 = v48;
            uint64_t v216 = v49;
            uint64_t v217 = v50;
            sub_10050BF48(0, (unint64_t *)&qword_101672AC0);
            id v51 = sub_10089D008((uint64_t)&v211);
            sub_10051AC38(v44, v45, v46, v47, v48, v49);
            swift_unknownObjectRelease();
          }
          else
          {
            swift_unknownObjectRelease();
            id v51 = 0;
          }
          sub_100A9BE98(v51);
          uint64_t v52 = swift_unknownObjectWeakLoadStrong();
          uint64_t v53 = v188;
          if (v52)
          {
            uint64_t v54 = (void *)v52;
            type metadata accessor for CRLFreehandDrawingItem();
            uint64_t v55 = swift_getObjCClassFromMetadata();
            swift_unknownObjectRetain();
            if ([v54 isKindOfClass:v55])
            {
              sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"isFreehandDrawingShape", 22, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLShapeItem.swift", 83, 2, 152, (uint64_t)"Regular shapes should not be inside freehand drawings.", 54, 2u, (uint64_t)_swiftEmptyArrayStorage);
              uint64_t v53 = v188;
              sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"isFreehandDrawingShape", 22, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLShapeItem.swift", 83, 2, 152);
            }
          }
          else
          {
            swift_unknownObjectRetain();
          }
          uint64_t v56 = **(void **)(v53 + v184);
          uint64_t v57 = swift_conformsToProtocol2();
          if (v57)
          {
            uint64_t v58 = v57;
            uint64_t v59 = *(void (**)(uint64_t, uint64_t))(v57 + 16);
            swift_retain();
            v59(v56, v58);
            swift_release();
            CRRegister.wrappedValue.getter();
            uint64_t v60 = v204;
            uint64_t v61 = v205;
            uint64_t v62 = v206;
            uint64_t v63 = v207;
            uint64_t v64 = v208;
            uint64_t v65 = v209;
            uint64_t v66 = v210;
            sub_1009C1E58((uint64_t)v24, type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData);
            if (v65)
            {
              uint64_t v204 = v60;
              uint64_t v205 = v61;
              LOBYTE(v206) = v62 & 1;
              HIDWORD(v206) = HIDWORD(v62);
              LODWORD(v207) = v63;
              BYTE4(v207) = BYTE4(v63) & 1;
              uint64_t v208 = v64;
              uint64_t v209 = v65;
              uint64_t v210 = v66;
              sub_10050BF48(0, (unint64_t *)&qword_101672AC0);
              id v67 = sub_10089D008((uint64_t)&v204);
              sub_10051AC38(v60, v61, v62, v63, v64, v65);
              swift_unknownObjectRelease();
            }
            else
            {
              swift_unknownObjectRelease();
              id v67 = 0;
            }
            sub_100A9C528(v67);
            uint64_t v68 = v188;
            if ((sub_1009BB7DC() & 1) == 0)
            {
              if ((sub_1009BAD20() & 1) == 0)
              {
                unsigned int v75 = [v189 isTailEndOnLeft];
                if (v75 == (sub_1009B9A58() & 1)) {
                  goto LABEL_88;
                }
                uint64_t v76 = swift_unknownObjectWeakLoadStrong();
                if (v76)
                {
                  char v77 = (void *)v76;
                  type metadata accessor for CRLFreehandDrawingItem();
                  uint64_t v78 = swift_getObjCClassFromMetadata();
                  swift_unknownObjectRetain();
                  if ([v77 isKindOfClass:v78])
                  {
                    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"isFreehandDrawingShape", 22, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLShapeItem.swift", 83, 2, 152, (uint64_t)"Regular shapes should not be inside freehand drawings.", 54, 2u, (uint64_t)_swiftEmptyArrayStorage);
                    uint64_t v68 = v188;
                    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"isFreehandDrawingShape", 22, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLShapeItem.swift", 83, 2, 152);
                  }
                }
                else
                {
                  swift_unknownObjectRetain();
                }
                uint64_t v130 = **(void **)(v68 + v184);
                uint64_t v131 = swift_conformsToProtocol2();
                if (v131)
                {
                  uint64_t v132 = v131;
                  uint64_t v133 = *(void (**)(uint64_t, uint64_t))(v131 + 16);
                  swift_retain();
                  uint64_t v134 = v179;
                  v133(v130, v132);
                  swift_release();
                  CRRegister.wrappedValue.getter();
                  uint64_t v136 = v197;
                  uint64_t v135 = v198;
                  uint64_t v137 = v199;
                  uint64_t v138 = v200;
                  uint64_t v140 = v201;
                  uint64_t v139 = v202;
                  uint64_t v141 = v203;
                  sub_1009C1E58(v134, type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData);
                  if (v139)
                  {
                    uint64_t v197 = v136;
                    uint64_t v198 = v135;
                    LOBYTE(v199) = v137 & 1;
                    HIDWORD(v199) = HIDWORD(v137);
                    LODWORD(v200) = v138;
                    BYTE4(v200) = BYTE4(v138) & 1;
                    uint64_t v201 = v140;
                    uint64_t v202 = v139;
                    uint64_t v203 = v141;
                    sub_10050BF48(0, (unint64_t *)&qword_101672AC0);
                    uint64_t v142 = v135;
                    id v143 = sub_10089D008((uint64_t)&v197);
                    sub_10051AC38(v136, v142, v137, v138, v140, v139);
                    swift_unknownObjectRelease();
                  }
                  else
                  {
                    swift_unknownObjectRelease();
                    id v143 = 0;
                  }
                  sub_100A9BE98(v143);
                  uint64_t v144 = swift_unknownObjectWeakLoadStrong();
                  uint64_t v145 = v188;
                  if (v144)
                  {
                    v146 = (void *)v144;
                    type metadata accessor for CRLFreehandDrawingItem();
                    uint64_t v147 = swift_getObjCClassFromMetadata();
                    swift_unknownObjectRetain();
                    if ([v146 isKindOfClass:v147])
                    {
                      sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"isFreehandDrawingShape", 22, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLShapeItem.swift", 83, 2, 152, (uint64_t)"Regular shapes should not be inside freehand drawings.", 54, 2u, (uint64_t)_swiftEmptyArrayStorage);
                      uint64_t v145 = v188;
                      sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"isFreehandDrawingShape", 22, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLShapeItem.swift", 83, 2, 152);
                    }
                  }
                  else
                  {
                    swift_unknownObjectRetain();
                  }
                  uint64_t v148 = **(void **)(v145 + v184);
                  uint64_t v149 = swift_conformsToProtocol2();
                  if (v149)
                  {
                    uint64_t v150 = v149;
                    float v151 = *(void (**)(uint64_t, uint64_t))(v149 + 16);
                    swift_retain();
                    uint64_t v152 = (uint64_t)v176;
                    v151(v148, v150);
                    swift_release();
                    CRRegister.wrappedValue.getter();
                    uint64_t v153 = v190;
                    uint64_t v154 = v191;
                    uint64_t v155 = v192;
                    uint64_t v156 = v193;
                    uint64_t v157 = v194;
                    uint64_t v158 = v195;
                    uint64_t v159 = v196;
                    sub_1009C1E58(v152, type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData);
                    if (v158)
                    {
                      uint64_t v190 = v153;
                      uint64_t v191 = v154;
                      LOBYTE(v192) = v155 & 1;
                      HIDWORD(v192) = HIDWORD(v155);
                      LODWORD(v193) = v156;
                      BYTE4(v193) = BYTE4(v156) & 1;
                      uint64_t v194 = v157;
                      uint64_t v195 = v158;
                      uint64_t v196 = v159;
                      sub_10050BF48(0, (unint64_t *)&qword_101672AC0);
                      uint64_t v160 = v154;
                      id v161 = sub_10089D008((uint64_t)&v190);
                      sub_10051AC38(v153, v160, v155, v156, v157, v158);
                      swift_unknownObjectRelease();
                    }
                    else
                    {
                      swift_unknownObjectRelease();
                      id v161 = 0;
                    }
                    sub_100A9C528(v161);
                    goto LABEL_88;
                  }
                  goto LABEL_96;
                }
LABEL_95:
                __break(1u);
LABEL_96:
                __break(1u);
                goto LABEL_97;
              }
              uint64_t v72 = swift_unknownObjectWeakLoadStrong();
              if (v72)
              {
                uint64_t v73 = (void *)v72;
                type metadata accessor for CRLFreehandDrawingItem();
                uint64_t v74 = swift_getObjCClassFromMetadata();
                swift_unknownObjectRetain();
                if ([v73 isKindOfClass:v74])
                {
                  sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"isFreehandDrawingShape", 22, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLShapeItem.swift", 83, 2, 152, (uint64_t)"Regular shapes should not be inside freehand drawings.", 54, 2u, (uint64_t)_swiftEmptyArrayStorage);
                  uint64_t v68 = v188;
                  sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"isFreehandDrawingShape", 22, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLShapeItem.swift", 83, 2, 152);
                }
              }
              else
              {
                swift_unknownObjectRetain();
              }
              uint64_t v99 = **(void **)(v68 + v184);
              uint64_t v100 = swift_conformsToProtocol2();
              if (v100)
              {
                uint64_t v101 = v100;
                char v102 = *(void (**)(uint64_t, uint64_t))(v100 + 16);
                swift_retain();
                uint64_t v103 = v180;
                v102(v99, v101);
                swift_release();
                CRRegister.wrappedValue.getter();
                uint64_t v104 = v197;
                uint64_t v105 = v198;
                uint64_t v106 = v199;
                uint64_t v107 = v200;
                uint64_t v108 = v201;
                uint64_t v109 = v202;
                uint64_t v110 = v203;
                sub_1009C1E58(v103, type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData);
                if (v109)
                {
                  uint64_t v197 = v104;
                  uint64_t v198 = v105;
                  LOBYTE(v199) = v106 & 1;
                  HIDWORD(v199) = HIDWORD(v106);
                  LODWORD(v200) = v107;
                  BYTE4(v200) = BYTE4(v107) & 1;
                  uint64_t v201 = v108;
                  uint64_t v202 = v109;
                  uint64_t v203 = v110;
                  sub_10050BF48(0, (unint64_t *)&qword_101672AC0);
                  id v91 = sub_10089D008((uint64_t)&v197);
                  sub_10051AC38(v104, v105, v106, v107, v108, v109);
                  swift_unknownObjectRelease();
                  if (([v91 isArrow] & 1) == 0) {
                    goto LABEL_45;
                  }
                  id v111 = v91;
                  sub_100A9BE98(v91);
                  uint64_t v112 = swift_unknownObjectWeakLoadStrong();
                  if (v112)
                  {
                    uint64_t v113 = (void *)v112;
                    type metadata accessor for CRLFreehandDrawingItem();
                    uint64_t v114 = swift_getObjCClassFromMetadata();
                    swift_unknownObjectRetain();
                    unsigned __int8 v115 = [v113 isKindOfClass:v114];
                    uint64_t v116 = (uint64_t)v175;
                    if (v115)
                    {
                      sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"isFreehandDrawingShape", 22, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLShapeItem.swift", 83, 2, 152, (uint64_t)"Regular shapes should not be inside freehand drawings.", 54, 2u, (uint64_t)_swiftEmptyArrayStorage);
                      sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"isFreehandDrawingShape", 22, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLShapeItem.swift", 83, 2, 152);
                    }
                  }
                  else
                  {
                    swift_unknownObjectRetain();
                    uint64_t v116 = (uint64_t)v175;
                  }
                  uint64_t v162 = **(void **)(v188 + v184);
                  uint64_t v163 = swift_conformsToProtocol2();
                  if (v163)
                  {
                    uint64_t v164 = v163;
                    v165 = *(void (**)(uint64_t, uint64_t))(v163 + 16);
                    swift_retain();
                    v165(v162, v164);
                    swift_release();
                    CRRegister.wrappedValue.getter();
                    uint64_t v166 = v190;
                    uint64_t v167 = v191;
                    uint64_t v168 = v192;
                    uint64_t v169 = v193;
                    uint64_t v170 = v194;
                    uint64_t v171 = v195;
                    uint64_t v172 = v116;
                    uint64_t v173 = v196;
                    sub_1009C1E58(v172, type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData);
                    if (v171)
                    {
                      uint64_t v190 = v166;
                      uint64_t v191 = v167;
                      LOBYTE(v192) = v168 & 1;
                      HIDWORD(v192) = HIDWORD(v168);
                      LODWORD(v193) = v169;
                      BYTE4(v193) = BYTE4(v169) & 1;
                      uint64_t v194 = v170;
                      uint64_t v195 = v171;
                      uint64_t v196 = v173;
                      id v174 = sub_10089D008((uint64_t)&v190);
                      sub_10051AC38(v166, v167, v168, v169, v170, v171);
                      swift_unknownObjectRelease();
                    }
                    else
                    {
                      swift_unknownObjectRelease();
                      id v174 = 0;
                    }
                    sub_100A9C528(v174);

                    goto LABEL_88;
                  }
LABEL_97:
                  __break(1u);
                  return;
                }
                goto LABEL_58;
              }
LABEL_93:
              __break(1u);
LABEL_94:
              __break(1u);
              goto LABEL_95;
            }
            uint64_t v69 = swift_unknownObjectWeakLoadStrong();
            if (v69)
            {
              uint64_t v70 = (void *)v69;
              type metadata accessor for CRLFreehandDrawingItem();
              uint64_t v71 = swift_getObjCClassFromMetadata();
              swift_unknownObjectRetain();
              if ([v70 isKindOfClass:v71])
              {
                sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"isFreehandDrawingShape", 22, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLShapeItem.swift", 83, 2, 152, (uint64_t)"Regular shapes should not be inside freehand drawings.", 54, 2u, (uint64_t)_swiftEmptyArrayStorage);
                uint64_t v68 = v188;
                sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"isFreehandDrawingShape", 22, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLShapeItem.swift", 83, 2, 152);
              }
            }
            else
            {
              swift_unknownObjectRetain();
            }
            uint64_t v79 = **(void **)(v68 + v184);
            uint64_t v80 = swift_conformsToProtocol2();
            if (v80)
            {
              uint64_t v81 = v80;
              char v82 = *(void (**)(uint64_t, uint64_t))(v80 + 16);
              swift_retain();
              uint64_t v83 = v181;
              v82(v79, v81);
              swift_release();
              CRRegister.wrappedValue.getter();
              uint64_t v84 = v197;
              uint64_t v85 = v198;
              uint64_t v86 = v199;
              uint64_t v87 = v200;
              uint64_t v88 = v201;
              uint64_t v89 = v202;
              uint64_t v90 = v203;
              sub_1009C1E58(v83, type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData);
              if (v89)
              {
                uint64_t v197 = v84;
                uint64_t v198 = v85;
                LOBYTE(v199) = v86 & 1;
                HIDWORD(v199) = HIDWORD(v86);
                LODWORD(v200) = v87;
                BYTE4(v200) = BYTE4(v87) & 1;
                uint64_t v201 = v88;
                uint64_t v202 = v89;
                uint64_t v203 = v90;
                sub_10050BF48(0, (unint64_t *)&qword_101672AC0);
                id v91 = sub_10089D008((uint64_t)&v197);
                sub_10051AC38(v84, v85, v86, v87, v88, v89);
                swift_unknownObjectRelease();
                if ([v91 isNone])
                {
LABEL_45:

LABEL_88:
                  swift_unknownObjectRelease();

                  return;
                }
                id v92 = v91;
                sub_100A9BE98(v91);
                uint64_t v93 = swift_unknownObjectWeakLoadStrong();
                if (v93)
                {
                  char v94 = (void *)v93;
                  type metadata accessor for CRLFreehandDrawingItem();
                  uint64_t v95 = swift_getObjCClassFromMetadata();
                  swift_unknownObjectRetain();
                  unsigned __int8 v96 = [v94 isKindOfClass:v95];
                  uint64_t v97 = (uint64_t)v177;
                  if (v96)
                  {
                    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"isFreehandDrawingShape", 22, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLShapeItem.swift", 83, 2, 152, (uint64_t)"Regular shapes should not be inside freehand drawings.", 54, 2u, (uint64_t)_swiftEmptyArrayStorage);
                    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"isFreehandDrawingShape", 22, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLShapeItem.swift", 83, 2, 152);
                  }

                  uint64_t v98 = v188;
                }
                else
                {
                  swift_unknownObjectRetain();
                  uint64_t v98 = v188;
                  uint64_t v97 = (uint64_t)v177;
                }
                uint64_t v117 = **(void **)(v98 + v184);
                uint64_t v118 = swift_conformsToProtocol2();
                if (v118)
                {
                  uint64_t v119 = v118;
                  uint64_t v120 = *(void (**)(uint64_t, uint64_t))(v118 + 16);
                  swift_retain();
                  v120(v117, v119);
                  swift_release();
                  CRRegister.wrappedValue.getter();
                  uint64_t v121 = v190;
                  uint64_t v122 = v191;
                  uint64_t v123 = v192;
                  uint64_t v124 = v193;
                  uint64_t v125 = v194;
                  uint64_t v126 = v195;
                  uint64_t v127 = v97;
                  uint64_t v128 = v196;
                  sub_1009C1E58(v127, type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData);
                  if (v126)
                  {
                    uint64_t v190 = v121;
                    uint64_t v191 = v122;
                    LOBYTE(v192) = v123 & 1;
                    HIDWORD(v192) = HIDWORD(v123);
                    LODWORD(v193) = v124;
                    BYTE4(v193) = BYTE4(v124) & 1;
                    uint64_t v194 = v125;
                    uint64_t v195 = v126;
                    uint64_t v196 = v128;
                    id v129 = sub_10089D008((uint64_t)&v190);
                    sub_10051AC38(v121, v122, v123, v124, v125, v126);
                    swift_unknownObjectRelease();
                  }
                  else
                  {
                    swift_unknownObjectRelease();
                    id v129 = 0;
                  }
                  sub_100A9C528(v129);

                  goto LABEL_88;
                }
                goto LABEL_94;
              }
LABEL_58:

              swift_unknownObjectRelease_n();
              return;
            }
LABEL_92:
            __break(1u);
            goto LABEL_93;
          }
        }
        else
        {
          __break(1u);
        }
        __break(1u);
        goto LABEL_92;
      }
      swift_unknownObjectRelease();
    }
    id v39 = v189;
  }
}

id sub_1009C15EC()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLConnectionLineItem();
  return [super dealloc];
}

uint64_t sub_1009C1624()
{
  return type metadata accessor for CRLConnectionLineItem();
}

uint64_t type metadata accessor for CRLConnectionLineItem()
{
  uint64_t result = qword_10168A048;
  if (!qword_10168A048) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1009C1678()
{
  return swift_updateClassMetadata2();
}

id sub_1009C16B0(uint64_t a1, uint64_t a2, void *a3, void *a4, void *a5, void *a6, void *a7)
{
  uint64_t v8 = v7;
  id v67 = a6;
  uint64_t v68 = a7;
  uint64_t v65 = a1;
  uint64_t v66 = a5;
  id v61 = a3;
  id v62 = a4;
  uint64_t v64 = a2;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v12 = sub_1005057FC((uint64_t *)&unk_101674520);
  __chkstk_darwin(v12 - 8, v13);
  uint64_t v58 = (char *)&v55 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15, v16);
  id v18 = (char *)&v55 - v17;
  uint64_t v19 = type metadata accessor for CRLConnectionLineCRDTData(0);
  __chkstk_darwin(v19 - 8, v20);
  uint64_t v60 = (uint64_t)&v55 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22, v23);
  uint64_t v56 = (uint64_t)&v55 - v24;
  uint64_t v25 = type metadata accessor for CRLShapeItemCRDTData(0);
  __chkstk_darwin(v25 - 8, v26);
  uint64_t v28 = (char *)&v55 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v29, v30);
  id v32 = (char *)&v55 - v31;
  uint64_t v63 = (uint64_t)&v55 - v31;
  uint64_t v33 = sub_1005057FC(&qword_1016892B0);
  __chkstk_darwin(v33 - 8, v34);
  uint64_t v36 = (char *)&v55 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v37, v38);
  uint64_t v40 = (char *)&v55 - v39;
  id v41 = v8;
  uint64_t v59 = v40;
  sub_100A9CEF0(a2, a3, a4, 0, 0, (uint64_t)v40);
  sub_100A9CC94(0, v66, v67, v68, 0.0, 1, (uint64_t)v32);
  sub_1009C1CE4((uint64_t)v32, (uint64_t)v28, type metadata accessor for CRLShapeItemCRDTData);
  uint64_t v42 = type metadata accessor for UUID();
  uint64_t v43 = *(void *)(v42 - 8);
  uint64_t v44 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v43 + 56);
  v44(v18, 1, 1, v42);
  uint64_t v45 = (uint64_t)v58;
  v44(v58, 1, 1, v42);
  uint64_t v46 = v56;
  sub_1008DC4E0((uint64_t)v28, (uint64_t)v18, v45, v56);

  sub_100522E9C((uint64_t)v40, (uint64_t)v36, &qword_1016892B0);
  uint64_t v47 = v46;
  uint64_t v48 = v60;
  sub_1009C1CE4(v46, v60, type metadata accessor for CRLConnectionLineCRDTData);
  type metadata accessor for CRLConnectionLineItemData(0);
  uint64_t v49 = swift_allocObject();
  sub_1008E02D4(v48, v49 + *(void *)(*(void *)v49 + 752));
  *(void *)(v49 + qword_10169E700) = 0;
  sub_10051B3EC((uint64_t)v36, v49 + *(void *)(*(void *)v49 + 632), &qword_1016892B0);
  uint64_t v50 = sub_10068B398(0x1000000000000, 0x2000400000000, 0x1000000000000, 6);
  id v51 = (char *)objc_allocWithZone((Class)type metadata accessor for CRLConnectionLineItem());
  *(void *)&v51[OBJC_IVAR____TtC8Freeform13CRLStyledItem__stroke] = 0;
  *(void *)&v51[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_store] = v65;
  *(void *)&v51[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData] = v50;
  uint64_t v52 = (objc_class *)type metadata accessor for CRLBoardItemBase(0);
  v69.receiver = v51;
  v69.super_class = v52;
  id v53 = [super init];

  (*(void (**)(uint64_t, uint64_t))(v43 + 8))(v64, v42);
  sub_1009C1E58(v47, type metadata accessor for CRLConnectionLineCRDTData);
  sub_1009C1E58(v63, type metadata accessor for CRLShapeItemCRDTData);
  sub_100522F00((uint64_t)v59, &qword_1016892B0);
  swift_getObjectType();
  swift_deallocPartialClassInstance();
  return v53;
}

uint64_t sub_1009C1CE4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

unint64_t sub_1009C1D4C()
{
  unint64_t result = qword_10168A068;
  if (!qword_10168A068)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168A068);
  }
  return result;
}

uint64_t sub_1009C1DA0()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1009C1DB0()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

void sub_1009C1DF0(void *a1)
{
  sub_1009BA894(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_1009C1DF8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1009C1E08()
{
  return swift_release();
}

uint64_t sub_1009C1E10(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1009C1E58(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1009C1EB8(void *a1, void *a2, uint64_t a3)
{
  id v6 = sub_1009C1FA8(a2, a3);
  id v7 = sub_1009C2340(a2, a3);
  if (v6
    && (type metadata accessor for CRLBoardItem(0),
        id v8 = a1,
        id v9 = v6,
        char v10 = static NSObject.== infix(_:_:)(),
        v9,
        v8,
        (v10 & 1) != 0))
  {
    char v11 = 1;
    id v6 = v7;
  }
  else
  {
    if (!v7)
    {
      char v11 = 0;
      goto LABEL_8;
    }
    type metadata accessor for CRLBoardItem(0);
    id v9 = a1;
    id v12 = v7;
    char v11 = static NSObject.== infix(_:_:)();
  }
LABEL_8:

  return v11 & 1;
}

id sub_1009C1FA8(void *a1, uint64_t a2)
{
  uint64_t v4 = sub_1005057FC((uint64_t *)&unk_101674520);
  __chkstk_darwin(v4 - 8, v5);
  id v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for CRLConnectionLineCRDTData(0);
  __chkstk_darwin(v8, v9);
  char v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for UUID();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12, v14);
  uint64_t v16 = (char *)&v27 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = *(void *)(a2 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
  if (*(_UNKNOWN ****)v17 != &off_1016863C8) {
    uint64_t v17 = 0;
  }
  uint64_t v18 = v17 + *(void *)(*(void *)v17 + 752);
  swift_beginAccess();
  sub_1009C1CE4(v18, (uint64_t)v11, type metadata accessor for CRLConnectionLineCRDTData);
  sub_1005057FC(&qword_101680140);
  CRRegister.wrappedValue.getter();
  sub_1009C1E58((uint64_t)v11, type metadata accessor for CRLConnectionLineCRDTData);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v7, 1, v12) == 1)
  {
    sub_100522F00((uint64_t)v7, (uint64_t *)&unk_101674520);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v16, v7, v12);
    Class isa = UUID._bridgeToObjectiveC()().super.isa;
    id v19 = [a1 getBoardItemForUUID:isa];

    if (!v19)
    {
      (*(void (**)(char *, uint64_t))(v13 + 8))(v16, v12);
      return v19;
    }
    uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
    uint64_t v22 = swift_unknownObjectWeakLoadStrong();
    uint64_t v23 = (void *)v22;
    if (Strong)
    {
      if (v22)
      {
        type metadata accessor for CRLBoardItem(0);
        id v24 = Strong;
        char v25 = static NSObject.== infix(_:_:)();
        (*(void (**)(char *, uint64_t))(v13 + 8))(v16, v12);

        if (v25) {
          return v19;
        }
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v13 + 8))(v16, v12);
      }
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v13 + 8))(v16, v12);
      if (!v23) {
        return v19;
      }
    }
  }
  return 0;
}

id sub_1009C2340(void *a1, uint64_t a2)
{
  uint64_t v71 = a1;
  uint64_t v74 = sub_1005057FC((uint64_t *)&unk_10168A0C0);
  __chkstk_darwin(v74, v3);
  uint64_t v75 = (uint64_t)&v65 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1005057FC((uint64_t *)&unk_101674520);
  __chkstk_darwin(v5 - 8, v6);
  uint64_t v70 = (uint64_t)&v65 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8, v9);
  uint64_t v77 = (uint64_t)&v65 - v10;
  __chkstk_darwin(v11, v12);
  uint64_t v73 = (char *)&v65 - v13;
  __chkstk_darwin(v14, v15);
  uint64_t v17 = (char *)&v65 - v16;
  uint64_t v18 = type metadata accessor for CRLConnectionLineCRDTData(0);
  __chkstk_darwin(v18, v19);
  uint64_t v72 = (uint64_t)&v65 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21, v22);
  id v24 = (char *)&v65 - v23;
  uint64_t v25 = type metadata accessor for UUID();
  uint64_t v26 = *(void *)(v25 - 8);
  __chkstk_darwin(v25, v27);
  uint64_t v29 = (char *)&v65 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v30, v31);
  uint64_t v33 = (char *)&v65 - v32;
  uint64_t v34 = OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData;
  uint64_t v76 = a2;
  uint64_t v35 = *(void *)(a2 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
  if (*(_UNKNOWN ****)v35 != &off_1016863C8) {
    uint64_t v35 = 0;
  }
  uint64_t v36 = v35 + *(void *)(*(void *)v35 + 752);
  swift_beginAccess();
  sub_1009C1CE4(v36, (uint64_t)v24, type metadata accessor for CRLConnectionLineCRDTData);
  sub_1005057FC(&qword_101680140);
  CRRegister.wrappedValue.getter();
  sub_1009C1E58((uint64_t)v24, type metadata accessor for CRLConnectionLineCRDTData);
  uint64_t v37 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48);
  if (v37(v17, 1, v25) == 1)
  {
    sub_100522F00((uint64_t)v17, (uint64_t *)&unk_101674520);
    return 0;
  }
  objc_super v69 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v37;
  uint64_t v65 = *(void (**)(char *, char *, uint64_t))(v26 + 32);
  uint64_t v66 = v29;
  v65(v33, v17, v25);
  uint64_t v38 = *(void (**)(char *, char *, uint64_t))(v26 + 16);
  uint64_t v39 = (uint64_t)v73;
  uint64_t v68 = v33;
  v38(v73, v33, v25);
  uint64_t v67 = v26;
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v26 + 56))(v39, 0, 1, v25);
  uint64_t v40 = *(void *)(v76 + v34);
  if (*(_UNKNOWN ****)v40 != &off_1016863C8) {
    uint64_t v40 = 0;
  }
  uint64_t v41 = v40 + *(void *)(*(void *)v40 + 752);
  swift_beginAccess();
  uint64_t v42 = v72;
  sub_1009C1CE4(v41, v72, type metadata accessor for CRLConnectionLineCRDTData);
  uint64_t v43 = v77;
  CRRegister.wrappedValue.getter();
  sub_1009C1E58(v42, type metadata accessor for CRLConnectionLineCRDTData);
  uint64_t v44 = v75;
  uint64_t v45 = v75 + *(int *)(v74 + 48);
  sub_100522E9C(v39, v75, (uint64_t *)&unk_101674520);
  uint64_t v46 = v69;
  sub_100522E9C(v43, v45, (uint64_t *)&unk_101674520);
  uint64_t v47 = v25;
  uint64_t v48 = v39;
  if (v46(v44, 1, v25) == 1)
  {
    sub_100522F00(v77, (uint64_t *)&unk_101674520);
    sub_100522F00(v39, (uint64_t *)&unk_101674520);
    int v49 = v46(v45, 1, v25);
    uint64_t v50 = v67;
    id v51 = v68;
    if (v49 == 1)
    {
      sub_100522F00(v44, (uint64_t *)&unk_101674520);
      (*(void (**)(char *, uint64_t))(v50 + 8))(v51, v47);
      return 0;
    }
    goto LABEL_12;
  }
  uint64_t v52 = v70;
  sub_100522E9C(v44, v70, (uint64_t *)&unk_101674520);
  if (v46(v45, 1, v47) == 1)
  {
    sub_100522F00(v77, (uint64_t *)&unk_101674520);
    sub_100522F00(v39, (uint64_t *)&unk_101674520);
    uint64_t v50 = v67;
    (*(void (**)(uint64_t, uint64_t))(v67 + 8))(v52, v47);
    id v51 = v68;
LABEL_12:
    sub_100522F00(v44, (uint64_t *)&unk_10168A0C0);
    id v53 = v71;
    goto LABEL_16;
  }
  uint64_t v54 = v66;
  v65(v66, (char *)v45, v47);
  sub_1009C1E10((unint64_t *)&qword_10167BDC0, (void (*)(uint64_t))&type metadata accessor for UUID);
  char v55 = dispatch thunk of static Equatable.== infix(_:_:)();
  uint64_t v50 = v67;
  uint64_t v56 = *(void (**)(char *, uint64_t))(v67 + 8);
  v56(v54, v47);
  sub_100522F00(v77, (uint64_t *)&unk_101674520);
  sub_100522F00(v48, (uint64_t *)&unk_101674520);
  v56((char *)v52, v47);
  sub_100522F00(v44, (uint64_t *)&unk_101674520);
  id v53 = v71;
  id v51 = v68;
  if (v55)
  {
    v56(v68, v47);
    return 0;
  }
LABEL_16:
  Class isa = UUID._bridgeToObjectiveC()().super.isa;
  id v58 = [v53 getBoardItemForUUID:isa];

  if (v58)
  {
    uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
    uint64_t v60 = swift_unknownObjectWeakLoadStrong();
    id v61 = (void *)v60;
    if (Strong)
    {
      if (!v60)
      {
        (*(void (**)(char *, uint64_t))(v50 + 8))(v51, v47);

        return 0;
      }
      type metadata accessor for CRLBoardItem(0);
      id v62 = Strong;
      char v63 = static NSObject.== infix(_:_:)();
      (*(void (**)(char *, uint64_t))(v50 + 8))(v51, v47);

      if ((v63 & 1) == 0)
      {

        return 0;
      }
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v50 + 8))(v51, v47);
      if (v61)
      {

        return 0;
      }
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v50 + 8))(v51, v47);
  }
  return v58;
}

uint64_t sub_1009C2B4C(void *a1, void *a2, void *a3, void *a4)
{
  if (a1)
  {
    if (!a2) {
      goto LABEL_11;
    }
    uint64_t v7 = a1;
    type metadata accessor for CRLBoardItem(0);
    id v8 = a2;
    id v9 = v7;
    LOBYTE(v7) = static NSObject.== infix(_:_:)();

    if ((v7 & 1) == 0) {
      goto LABEL_11;
    }
  }
  else if (a2)
  {
    goto LABEL_11;
  }
  if (a3)
  {
    if (!a4) {
      goto LABEL_11;
    }
    type metadata accessor for CRLBoardItem(0);
    id v10 = a4;
    id v11 = a3;
    char v12 = static NSObject.== infix(_:_:)();

    if ((v12 & 1) == 0) {
      goto LABEL_11;
    }
    return 0;
  }
  if (!a4) {
    return 0;
  }
LABEL_11:
  id v13 = [self mainBundle];
  NSString v14 = String._bridgeToObjectiveC()();
  NSString v15 = String._bridgeToObjectiveC()();
  NSString v16 = String._bridgeToObjectiveC()();
  id v17 = [v13 localizedStringForKey:v14 value:v15 table:v16];

  uint64_t v18 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  return v18;
}

unint64_t sub_1009C2D88(char a1)
{
  unint64_t result = 0xD000000000000033;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000038;
      break;
    case 2:
      unint64_t result = 0xD000000000000027;
      break;
    case 3:
      unint64_t result = 0xD000000000000020;
      break;
    case 4:
      unint64_t result = 0xD000000000000028;
      break;
    case 5:
      unint64_t result = 0xD000000000000018;
      break;
    case 6:
      unint64_t result = 0xD00000000000001BLL;
      break;
    case 7:
    case 9:
      unint64_t result = 0xD00000000000001ALL;
      break;
    case 8:
      unint64_t result = 0xD00000000000001DLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1009C2E94()
{
  id v1 = [v0 activityType];
  uint64_t v2 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v4 = v3;

  if ((sub_1009C383C(v2, v4) - 7) < 2u) {
    return 1;
  }
  id v6 = [v0 userInfo];
  if (!v6)
  {
    long long v12 = 0u;
    long long v13 = 0u;
LABEL_14:
    sub_100522F00((uint64_t)&v12, &qword_101672BF0);
    return 0;
  }
  uint64_t v7 = v6;
  uint64_t v8 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

  AnyHashable.init<A>(_:)();
  if (*(void *)(v8 + 16) && (unint64_t v9 = sub_10095647C((uint64_t)v11), (v10 & 1) != 0))
  {
    sub_100522D7C(*(void *)(v8 + 56) + 32 * v9, (uint64_t)&v12);
  }
  else
  {
    long long v12 = 0u;
    long long v13 = 0u;
  }
  sub_10050BFE0((uint64_t)v11);
  swift_bridgeObjectRelease();
  if (!*((void *)&v13 + 1)) {
    goto LABEL_14;
  }
  if (swift_dynamicCast()) {
    return v11[0];
  }
  else {
    return 0;
  }
}

uint64_t sub_1009C302C()
{
  uint64_t v1 = sub_1009C2E94();
  if (v2)
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"crl_isCurrentOrOlderVersion", 27, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/Extensions/NSUserActivity_Extensions.swift", 112, 2, 122, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"crl_isCurrentOrOlderVersion", 27, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/Extensions/NSUserActivity_Extensions.swift", 112, 2, 122);
    return 0;
  }
  else
  {
    uint64_t v3 = v1;
    id v4 = [v0 activityType];
    uint64_t v5 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v7 = v6;

    uint64_t v8 = sub_1009C383C(v5, v7) < 9u;
    if (v3 <= v8) {
      return v8;
    }
    else {
      return 0;
    }
  }
}

id sub_1009C3148(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v43 = a3;
  uint64_t v5 = sub_1005057FC(&qword_101672C30);
  __chkstk_darwin(v5 - 8, v6);
  uint64_t v8 = (char *)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for CRLBoardIdentifier(0);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9, v11);
  long long v13 = (char *)&v42 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v14 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  sub_1009C2D88(a1);
  NSString v15 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v16 = [v14 initWithActivityType:v15];

  id v17 = v16;
  id v18 = [v17 activityType];
  uint64_t v19 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v21 = v20;

  char v22 = sub_1009C383C(v19, v21);
  if (sub_1009C2D88(v22) == 0xD000000000000027 && v23 == 0x8000000101235570)
  {
    swift_bridgeObjectRelease();
    char v24 = 1;
  }
  else
  {
    char v24 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
  }
  [v17 setEligibleForHandoff:v24 & 1];
  sub_1005057FC(&qword_101677430);
  uint64_t inited = swift_initStackObject();
  long long v42 = xmmword_10117E810;
  *(_OWORD *)(inited + 16) = xmmword_10117E810;
  uint64_t v44 = 0x6E6F6973726576;
  unint64_t v45 = 0xE700000000000000;
  AnyHashable.init<A>(_:)();
  *(void *)(inited + 96) = &type metadata for Int;
  *(void *)(inited + 72) = a2;
  sub_100A393A8(inited);
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v17 addUserInfoEntriesFromDictionary:isa];

  uint64_t v27 = v43;
  sub_100605184(v43, (uint64_t)v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_100522F00(v27, &qword_101672C30);

    sub_100522F00((uint64_t)v8, &qword_101672C30);
  }
  else
  {
    sub_1005394E4((uint64_t)v8, (uint64_t)v13);
    uint64_t v28 = swift_initStackObject();
    *(_OWORD *)(v28 + 16) = v42;
    uint64_t v44 = 0x64496472616F62;
    unint64_t v45 = 0xE700000000000000;
    AnyHashable.init<A>(_:)();
    uint64_t v44 = UUID.uuidString.getter();
    unint64_t v45 = v29;
    swift_bridgeObjectRetain();
    v30._countAndFlagsBits = 58;
    v30._object = (void *)0xE100000000000000;
    String.append(_:)(v30);
    swift_bridgeObjectRelease();
    uint64_t v31 = v44;
    unint64_t v32 = v45;
    uint64_t v33 = (uint64_t *)&v13[*(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20)];
    uint64_t v34 = v27;
    uint64_t v35 = *v33;
    uint64_t v36 = (void *)v33[1];
    uint64_t v44 = v31;
    unint64_t v45 = v32;
    swift_bridgeObjectRetain();
    v37._countAndFlagsBits = v35;
    v37._object = v36;
    String.append(_:)(v37);
    swift_bridgeObjectRelease();
    uint64_t v38 = v44;
    unint64_t v39 = v45;
    *(void *)(v28 + 96) = &type metadata for String;
    *(void *)(v28 + 72) = v38;
    *(void *)(v28 + 80) = v39;
    sub_100A393A8(v28);
    Class v40 = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v17 addUserInfoEntriesFromDictionary:v40];

    sub_100522F00(v34, &qword_101672C30);
    sub_100510028((uint64_t)v13);
  }
  return v17;
}

uint64_t sub_1009C35C8@<X0>(uint64_t a1@<X8>)
{
  char v2 = v1;
  uint64_t v4 = sub_1005057FC((uint64_t *)&unk_101676310);
  *(void *)&double v6 = __chkstk_darwin(v4 - 8, v5).n128_u64[0];
  uint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v9 = [v2 activityType:v6];
  uint64_t v10 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v12 = v11;

  if (sub_1009C383C(v10, v12) == 6)
  {
    uint64_t v13 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
    id v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
    return v14(a1, 1, 1, v13);
  }
  else
  {
    sub_100DD5F20(v2, (uint64_t)v8);
    uint64_t v16 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v16 - 8) + 48))(v8, 1, v16) == 1)
    {
      sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"crl_viewModelItem", 17, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/Extensions/NSUserActivity_Extensions.swift", 112, 2, 149, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"crl_viewModelItem", 17, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/Extensions/NSUserActivity_Extensions.swift", 112, 2, 149);
    }
    return sub_1009C3A0C((uint64_t)v8, a1);
  }
}

unint64_t sub_1009C37F0(Swift::String string)
{
  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  unint64_t v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_101502658, v2);
  swift_bridgeObjectRelease();
  if (v3 >= 0xA) {
    return 10;
  }
  else {
    return v3;
  }
}

uint64_t sub_1009C383C(uint64_t a1, void *a2)
{
  swift_bridgeObjectRetain();
  v13._countAndFlagsBits = a1;
  v13._object = a2;
  unint64_t v4 = sub_1009C37F0(v13);
  if (v4 == 10)
  {
    if (static String._unconditionallyBridgeFromObjectiveC(_:)() == a1 && v5 == a2)
    {
      swift_bridgeObjectRelease_n();
      return 7;
    }
    char v7 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v7)
    {
      swift_bridgeObjectRelease();
      return 7;
    }
    if (static String._unconditionallyBridgeFromObjectiveC(_:)() == a1 && v10 == a2)
    {
      swift_bridgeObjectRelease_n();
      return 8;
    }
    else
    {
      char v12 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v12)
      {
        return 8;
      }
      else
      {
        sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"init(typeString:)", 17, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/Extensions/NSUserActivity_Extensions.swift", 112, 2, 26);
        return 9;
      }
    }
  }
  else
  {
    unint64_t v8 = v4;
    swift_bridgeObjectRelease();
  }
  return v8;
}

uint64_t sub_1009C3A0C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1005057FC((uint64_t *)&unk_101676310);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

id sub_1009C3B34(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *(void *)(v3 + OBJC_IVAR____TtC8Freeform44CRLPasteboardObjectItemProviderReadAssistant_readAssistant);
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a2;
  *(void *)(v8 + 24) = a3;
  id v9 = self;
  swift_retain();
  id v10 = [v9 progressWithTotalUnitCount:2];
  NSString v11 = String._bridgeToObjectiveC()();
  char v12 = (void *)swift_allocObject();
  v12[2] = v10;
  v12[3] = sub_1009C3FF4;
  void v12[4] = v8;
  v12[5] = v7;
  v17[4] = sub_1009C4048;
  v17[5] = v12;
  v17[0] = _NSConcreteStackBlock;
  v17[1] = *(void *)"";
  _OWORD v17[2] = sub_1009C4078;
  v17[3] = &unk_10151CCA8;
  Swift::String v13 = _Block_copy(v17);
  id v14 = v10;
  swift_retain();
  swift_retain();
  swift_release();
  id v15 = [a1 loadFileRepresentationForTypeIdentifier:v11 completionHandler:v13];
  _Block_release(v13);
  swift_bridgeObjectRelease();
  swift_release();

  return v14;
}

uint64_t sub_1009C3D00(uint64_t a1, uint64_t a2, char a3, void (*a4)(void *, uint64_t))
{
  if (a3)
  {
    swift_errorRetain();
    a4(0, a1);
  }
  else
  {
    type metadata accessor for CRLPasteboardObject();
    uint64_t v8 = (void *)swift_dynamicCastClass();
    if (v8)
    {
      swift_unknownObjectRetain();
      uint64_t v9 = 0;
    }
    else
    {
      sub_1005F7CE8();
      uint64_t v9 = swift_allocError();
      *id v10 = 1;
    }
    swift_unknownObjectRetain();
    a4(v8, v9);
    swift_errorRelease();
  }

  return sub_1009C406C(a1, a2, a3 & 1);
}

void sub_1009C3EA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2) {
    uint64_t v5 = _convertErrorToNSError(_:)();
  }
  else {
    uint64_t v5 = 0;
  }
  id v6 = (id)v5;
  (*(void (**)(uint64_t, uint64_t))(a3 + 16))(a3, a1);
}

uint64_t type metadata accessor for CRLPasteboardObjectItemProviderReadAssistant()
{
  return self;
}

uint64_t sub_1009C3F7C()
{
  _Block_release(*(const void **)(v0 + 16));

  return _swift_deallocObject(v0, 24, 7);
}

void sub_1009C3FB4(uint64_t a1, uint64_t a2)
{
  sub_1009C3EA8(a1, a2, *(void *)(v2 + 16));
}

uint64_t sub_1009C3FBC()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1009C3FF4(uint64_t a1, uint64_t a2, char a3)
{
  return sub_1009C3D00(a1, a2, a3 & 1, *(void (**)(void *, uint64_t))(v3 + 16));
}

uint64_t sub_1009C4000()
{
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_1009C4048(uint64_t a1, uint64_t a2)
{
  return sub_1005F6844(a1, a2, *(void **)(v2 + 16), *(void (**)(uint64_t, void, uint64_t))(v2 + 24), *(void *)(v2 + 32), *(void *)(v2 + 40));
}

uint64_t sub_1009C4054(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1009C4064()
{
  return swift_release();
}

uint64_t sub_1009C406C(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_errorRelease();
  }
  else {
    return swift_unknownObjectRelease();
  }
}

uint64_t sub_1009C4078(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6 = sub_1005057FC(&qword_101672E90);
  __chkstk_darwin(v6 - 8, v7);
  uint64_t v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v10 = *(void (**)(char *, void *))(a1 + 32);
  if (a2)
  {
    static URL._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v11 = type metadata accessor for URL();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v9, 0, 1, v11);
  }
  else
  {
    uint64_t v12 = type metadata accessor for URL();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v9, 1, 1, v12);
  }
  swift_retain();
  id v13 = a3;
  v10(v9, a3);
  swift_release();

  return sub_100522F00((uint64_t)v9, &qword_101672E90);
}

id sub_1009C41C0(uint64_t a1, uint64_t a2)
{
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();
  *(void *)&v2[OBJC_IVAR____TtC8Freeform19CRLiOSMediaReplacer_photoPickerLoadingProgress] = 0;
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();
  *(void *)&v2[OBJC_IVAR____TtC8Freeform19CRLiOSMediaReplacer_gpHelper] = 0;
  *(void *)&v2[OBJC_IVAR____TtC8Freeform19CRLiOSMediaReplacer_interactiveCanvasController] = a1;
  *(void *)&v2[OBJC_IVAR____TtC8Freeform19CRLiOSMediaReplacer_boardViewController] = a2;
  v6.receiver = v2;
  v6.super_class = (Class)type metadata accessor for CRLiOSMediaReplacer();
  return [super init];
}

id sub_1009C42D0()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLiOSMediaReplacer();
  return [super dealloc];
}

uint64_t type metadata accessor for CRLiOSMediaReplacer()
{
  return self;
}

void sub_1009C43E4(void *a1)
{
  objc_super v2 = v1;
  if ([v2 isShowingUI])
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"show(forMediaReplacing:)", 24, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/App/CRLiOSMediaReplacer.swift", 87, 2, 34, (uint64_t)"Already showing media replacer UI", 33, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"show(forMediaReplacing:)", 24, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/App/CRLiOSMediaReplacer.swift", 87, 2, 34);
    return;
  }
  uint64_t v4 = *(void **)&v2[OBJC_IVAR____TtC8Freeform19CRLiOSMediaReplacer_interactiveCanvasController];
  id v5 = [v4 layerHost];
  if (!v5) {
    goto LABEL_8;
  }
  objc_super v6 = v5;
  if (([v5 respondsToSelector:"asiOSCVC"] & 1) == 0)
  {
    swift_unknownObjectRelease();
LABEL_8:
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"show(forMediaReplacing:)", 24, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/App/CRLiOSMediaReplacer.swift", 87, 2, 39, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    LOBYTE(v81) = 2;
    uint64_t v79 = "invalid nil found when unwrapping value";
    uint64_t v80 = 39;
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"show(forMediaReplacing:)", 24, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/App/CRLiOSMediaReplacer.swift", 87, 2, 39);
    goto LABEL_9;
  }
  id v7 = [v6 asiOSCVC];
  swift_unknownObjectRelease();
  id v8 = [v7 miniFormatterPresenter];
  if (v8)
  {
    [v8 dismissMiniFormatter];

    swift_unknownObjectRelease();
  }
  else
  {
  }
LABEL_9:
  swift_getObjectType();
  if ([a1 supportedMediaTypes] == (id)2)
  {
    sub_1009EE78C();
    id v9 = objc_allocWithZone((Class)UIDocumentPickerViewController);
    type metadata accessor for UTType();
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    id v86 = [v9 initForOpeningContentTypes:isa asCopy:1];

    [v86 setDelegate:v2];
    swift_unknownObjectWeakAssign();
    [*(id *)&v2[OBJC_IVAR____TtC8Freeform19CRLiOSMediaReplacer_boardViewController] presentViewController:v86 animated:1 completion:0];
  }
  else
  {
    id v82 = v4;
    id v11 = [self alertControllerWithTitle:0 message:0 preferredStyle:0];
    id v85 = self;
    id v12 = [v85 mainBundle];
    NSString v13 = String._bridgeToObjectiveC()();
    NSString v14 = String._bridgeToObjectiveC()();
    id v15 = [v12 localizedStringForKey:v13 value:v14 table:0];

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v16 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v17 = swift_allocObject();
    *(void *)(v17 + 16) = v16;
    *(void *)(v17 + 24) = a1;
    swift_retain();
    id v18 = a1;
    NSString v19 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    unint64_t v91 = (unint64_t)sub_1009CC13C;
    uint64_t v92 = v17;
    aBlock = _NSConcreteStackBlock;
    uint64_t v88 = *(void *)"";
    uint64_t v89 = sub_10051CE64;
    uint64_t v90 = (ValueMetadata *)&unk_10151CFC8;
    uint64_t v20 = _Block_copy(&aBlock);
    swift_release();
    uint64_t v21 = self;
    id v22 = [v21 actionWithTitle:v19 style:0 handler:v20];
    _Block_release(v20);
    swift_release();

    [v11 addAction:v22];
    id v23 = [v85 mainBundle];
    NSString v24 = String._bridgeToObjectiveC()();
    NSString v25 = String._bridgeToObjectiveC()();
    id v26 = [v23 localizedStringForKey:v24 value:v25 table:0];

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v27 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v28 = swift_allocObject();
    *(void *)(v28 + 16) = v27;
    *(void *)(v28 + 24) = v18;
    id v83 = v18;
    swift_retain();
    NSString v29 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    unint64_t v91 = (unint64_t)sub_1009CC184;
    uint64_t v92 = v28;
    aBlock = _NSConcreteStackBlock;
    uint64_t v88 = *(void *)"";
    uint64_t v89 = sub_10051CE64;
    uint64_t v90 = (ValueMetadata *)&unk_10151D018;
    Swift::String v30 = _Block_copy(&aBlock);
    swift_release();
    id v84 = v21;
    id v31 = [v21 actionWithTitle:v29 style:0 handler:v30];
    _Block_release(v30);
    swift_release();

    [v11 addAction:v31];
    uint64_t v90 = &type metadata for CRLGenerativePlaygroundFeatureFlags;
    unint64_t v91 = sub_1005C6C64();
    LOBYTE(v29) = isFeatureEnabled(_:)();
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&aBlock);
    if (v29)
    {
      uint64_t v90 = &type metadata for CRLFeatureFlags;
      unint64_t v91 = sub_1005396A8();
      LOBYTE(aBlock) = 13;
      char v32 = isFeatureEnabled(_:)();
      _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&aBlock);
      if (v32)
      {
        if ([(id)type metadata accessor for ImagePlaygroundViewController() available])
        {
          id v33 = [v85 mainBundle];
          NSString v34 = String._bridgeToObjectiveC()();
          NSString v35 = String._bridgeToObjectiveC()();
          id v36 = [v33 localizedStringForKey:v34 value:v35 table:0];

          static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v37 = swift_allocObject();
          swift_unknownObjectWeakInit();
          swift_retain();
          NSString v38 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease();
          unint64_t v91 = (unint64_t)sub_1009CC28C;
          uint64_t v92 = v37;
          aBlock = _NSConcreteStackBlock;
          uint64_t v88 = *(void *)"";
          uint64_t v89 = sub_10051CE64;
          uint64_t v90 = (ValueMetadata *)&unk_10151D180;
          unint64_t v39 = _Block_copy(&aBlock);
          swift_release();
          id v40 = [v21 actionWithTitle:v38 style:0 handler:v39];
          _Block_release(v39);
          swift_release();

          [v11 addAction:v40];
        }
      }
    }
    if ([self isOSFeatureEnabled:3])
    {
      self;
      if (swift_dynamicCastObjCClass()
        || (self, (uint64_t v76 = (void *)swift_dynamicCastObjCClass()) != 0)
        && (id v77 = [v76 movieItem],
            unsigned __int8 v78 = sub_100BF34BC(),
            v77,
            (v78 & 1) != 0))
      {
        id v41 = [v85 mainBundle:v79, v80, v81];
        NSString v42 = String._bridgeToObjectiveC()();
        NSString v43 = String._bridgeToObjectiveC()();
        id v44 = [v41 localizedStringForKey:v42 value:v43 table:0];

        static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v45 = swift_allocObject();
        swift_unknownObjectWeakInit();
        uint64_t v46 = swift_allocObject();
        *(void *)(v46 + 16) = v45;
        *(void *)(v46 + 24) = v83;
        id v47 = v83;
        swift_retain();
        NSString v48 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        unint64_t v91 = (unint64_t)sub_1009CC25C;
        uint64_t v92 = v46;
        aBlock = _NSConcreteStackBlock;
        uint64_t v88 = *(void *)"";
        uint64_t v89 = sub_10051CE64;
        uint64_t v90 = (ValueMetadata *)&unk_10151D158;
        int v49 = _Block_copy(&aBlock);
        swift_release();
        id v50 = [v21 actionWithTitle:v48 style:0 handler:v49];
        _Block_release(v49);
        swift_release();

        [v11 addAction:v50];
      }
    }
    id v51 = [v85 mainBundle:v79, v80, v81];
    NSString v52 = String._bridgeToObjectiveC()();
    NSString v53 = String._bridgeToObjectiveC()();
    id v54 = [v51 localizedStringForKey:v52 value:v53 table:0];

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v55 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v56 = swift_allocObject();
    *(void *)(v56 + 16) = v55;
    *(void *)(v56 + 24) = v83;
    id v57 = v83;
    swift_retain();
    NSString v58 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    unint64_t v91 = (unint64_t)sub_1009CC1A4;
    uint64_t v92 = v56;
    aBlock = _NSConcreteStackBlock;
    uint64_t v88 = *(void *)"";
    uint64_t v89 = sub_10051CE64;
    uint64_t v90 = (ValueMetadata *)&unk_10151D068;
    uint64_t v59 = _Block_copy(&aBlock);
    swift_release();
    id v60 = [v84 actionWithTitle:v58 style:0 handler:v59];
    _Block_release(v59);
    swift_release();

    [v11 addAction:v60];
    id v61 = [v85 mainBundle];
    NSString v62 = String._bridgeToObjectiveC()();
    NSString v63 = String._bridgeToObjectiveC()();
    id v64 = [v61 localizedStringForKey:v62 value:v63 table:0];

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v65 = swift_allocObject();
    swift_unknownObjectWeakInit();
    swift_retain();
    NSString v66 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    unint64_t v91 = (unint64_t)sub_1009CC1AC;
    uint64_t v92 = v65;
    aBlock = _NSConcreteStackBlock;
    uint64_t v88 = *(void *)"";
    uint64_t v89 = sub_10051CE64;
    uint64_t v90 = (ValueMetadata *)&unk_10151D0B8;
    uint64_t v67 = _Block_copy(&aBlock);
    swift_release();
    id v68 = [v84 actionWithTitle:v66 style:1 handler:v67];
    _Block_release(v67);
    swift_release();

    [v11 addAction:v68];
    [v11 setModalPresentationStyle:7];
    id v69 = [v11 popoverPresentationController];
    if (v69)
    {
      uint64_t v70 = v69;
      id v71 = [v82 canvasView];
      [v70 setSourceView:v71];

      [v70 setDelegate:v2];
    }
    else
    {
      sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"show(forMediaReplacing:)", 24, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/App/CRLiOSMediaReplacer.swift", 87, 2, 84, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"show(forMediaReplacing:)", 24, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/App/CRLiOSMediaReplacer.swift", 87, 2, 84);
    }
    swift_unknownObjectWeakAssign();
    uint64_t v72 = swift_allocObject();
    *(void *)(v72 + 16) = v2;
    *(void *)(v72 + 24) = v11;
    unint64_t v91 = (unint64_t)sub_1009CC1F4;
    uint64_t v92 = v72;
    aBlock = _NSConcreteStackBlock;
    uint64_t v88 = *(void *)"";
    uint64_t v89 = sub_100679958;
    uint64_t v90 = (ValueMetadata *)&unk_10151D108;
    uint64_t v73 = _Block_copy(&aBlock);
    uint64_t v74 = v2;
    id v75 = v11;
    swift_release();
    sub_1000AF4C8(v73);
    _Block_release(v73);
  }
}

void sub_1009C547C()
{
  uint64_t v1 = v0;
  uint64_t v26 = type metadata accessor for PHPickerConfiguration.AssetRepresentationMode();
  uint64_t v2 = *(void *)(v26 - 8);
  __chkstk_darwin(v26, v3);
  id v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for PHPickerConfiguration();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6, v8);
  id v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11, v12);
  NSString v14 = (char *)&v25 - v13;
  uint64_t v15 = sub_1005057FC(&qword_101674600);
  __chkstk_darwin(v15 - 8, v16);
  id v18 = (char *)&v25 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19, v20);
  id v22 = (char *)&v25 - v21;
  swift_getObjectType();
  sub_1009EE6D0((uint64_t)v22);
  uint64_t v25 = sub_1009CC0B4((unint64_t *)&unk_10168A460, v23, (void (*)(uint64_t))type metadata accessor for CRLiOSMediaReplacer);
  PHPickerConfiguration.init()();
  (*(void (**)(char *, void, uint64_t))(v2 + 104))(v5, enum case for PHPickerConfiguration.AssetRepresentationMode.current(_:), v26);
  PHPickerConfiguration.preferredAssetRepresentationMode.setter();
  sub_100522E9C((uint64_t)v22, (uint64_t)v18, &qword_101674600);
  PHPickerConfiguration.filter.setter();
  sub_10050BF48(0, &qword_101674418);
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v10, v14, v6);
  NSString v24 = (void *)PHPickerViewController.init(configuration:)();
  swift_unknownObjectRetain();
  PHPickerViewController.delegate.setter();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v14, v6);
  sub_100522F00((uint64_t)v22, &qword_101674600);
  swift_unknownObjectWeakAssign();
  [*(id *)(v1 + OBJC_IVAR____TtC8Freeform19CRLiOSMediaReplacer_boardViewController) presentViewController:v24 animated:1 completion:0];
}

void sub_1009C5798()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    sub_1009CAEA4();
  }
}

void sub_1009C57EC(uint64_t a1)
{
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v3 = Strong;
    [Strong presentGenerativePlaygroundForCurrentSelection:a1];
  }
}

void sub_1009C5850(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t))
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v7 = (void *)Strong;
    a4(a3);
  }
}

void sub_1009C58C0(void *a1)
{
  id v4 = [objc_allocWithZone((Class)_UIStickerPickerViewController) init];
  [v4 setDelegate:v1];
  id v3 = [*(id *)(v1 + OBJC_IVAR____TtC8Freeform19CRLiOSMediaReplacer_interactiveCanvasController) canvasView];
  [v4 setSourceView:v3];

  [v4 setSourceRect:sub_1009CA104(a1)];
  swift_unknownObjectWeakAssign();
  [*(id *)(v1 + OBJC_IVAR____TtC8Freeform19CRLiOSMediaReplacer_boardViewController) presentViewController:v4 animated:1 completion:0];
}

void sub_1009C59BC()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (char *)Strong;
    swift_getObjectType();
    sub_1009EE78C();
    id v2 = objc_allocWithZone((Class)UIDocumentPickerViewController);
    type metadata accessor for UTType();
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    id v4 = [v2 initForOpeningContentTypes:isa asCopy:1];

    [v4 setDelegate:v1];
    swift_unknownObjectWeakAssign();
    [*(id *)&v1[OBJC_IVAR____TtC8Freeform19CRLiOSMediaReplacer_boardViewController] presentViewController:v4 animated:1 completion:0];
  }
}

void sub_1009C5AC8()
{
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = Strong;
    [Strong dismissViewControllerAnimated:1 completion:0];
  }
}

void sub_1009C5B2C(uint64_t a1, void *a2)
{
  id v3 = *(void **)(a1 + OBJC_IVAR____TtC8Freeform19CRLiOSMediaReplacer_boardViewController);
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = a2;
  void v7[4] = sub_1009CC2CC;
  v7[5] = v4;
  v7[0] = _NSConcreteStackBlock;
  v7[1] = *(void *)"";
  v7[2] = sub_100679958;
  v7[3] = &unk_10151D1D0;
  id v5 = _Block_copy(v7);
  id v6 = a2;
  swift_release();
  [v3 presentViewController:v6 animated:1 completion:v5];
  _Block_release(v5);
}

void sub_1009C5C84(uint64_t a1, uint64_t a2)
{
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v5 = Strong;
    [Strong dismissViewControllerAnimated:1 completion:0];
    swift_unknownObjectWeakAssign();
  }
  id v6 = (void *)swift_unknownObjectWeakLoadStrong();
  if (v6)
  {
    uint64_t v7 = v6;
    [v6 dismissViewControllerAnimated:1 completion:0];
    swift_unknownObjectWeakAssign();
  }
  uint64_t v8 = (void *)swift_unknownObjectWeakLoadStrong();
  if (v8)
  {
    uint64_t v9 = v8;
    [v8 dismissViewControllerAnimated:1 completion:0];
    swift_unknownObjectWeakAssign();
  }
  id v10 = (void *)swift_unknownObjectWeakLoadStrong();
  if (v10)
  {
    uint64_t v11 = v10;
    [v10 dismissViewControllerAnimated:1 completion:0];
    swift_unknownObjectWeakAssign();
  }
  uint64_t v12 = (void *)swift_unknownObjectWeakLoadStrong();
  if (v12)
  {
    uint64_t v13 = v12;
    [v12 dismissViewControllerAnimated:1 completion:0];
    swift_unknownObjectWeakAssign();
  }
  if (a1)
  {
    v15[4] = a1;
    v15[5] = a2;
    v15[0] = _NSConcreteStackBlock;
    v15[1] = *(void *)"";
    v15[2] = sub_100679958;
    v15[3] = &unk_10151CF78;
    NSString v14 = _Block_copy(v15);
    swift_retain_n();
    swift_release();
    sub_1000AF4C8(v14);
    _Block_release(v14);
    sub_1005174AC(a1);
  }
}

BOOL sub_1009C5F68()
{
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();

  if (Strong) {
    return 1;
  }
  id v2 = (void *)swift_unknownObjectWeakLoadStrong();

  if (v2) {
    return 1;
  }
  id v3 = (void *)swift_unknownObjectWeakLoadStrong();

  if (v3) {
    return 1;
  }
  uint64_t v4 = (void *)swift_unknownObjectWeakLoadStrong();

  if (v4) {
    return 1;
  }
  id v5 = (void *)swift_unknownObjectWeakLoadStrong();

  return v5 || *(void *)(v0 + OBJC_IVAR____TtC8Freeform19CRLiOSMediaReplacer_gpHelper) != 0;
}

void sub_1009C602C(char a1)
{
  uint64_t v3 = OBJC_IVAR____TtC8Freeform19CRLiOSMediaReplacer_gpHelper;
  uint64_t v4 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform19CRLiOSMediaReplacer_gpHelper);
  if (v4)
  {
    id v5 = v4;
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"presentGenerativePlayground(forCurrentSection:)", 47, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/App/CRLiOSMediaReplacer.swift", 87, 2, 152, (uint64_t)"expected nil value, but non-nil found", 37, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"presentGenerativePlayground(forCurrentSection:)", 47, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/App/CRLiOSMediaReplacer.swift", 87, 2, 152);
  }
  id v6 = (char *)[objc_allocWithZone((Class)type metadata accessor for CRLGenerativePlaygroundHelper()) init];
  swift_unknownObjectWeakAssign();
  uint64_t v7 = OBJC_IVAR____TtC8Freeform29CRLGenerativePlaygroundHelper_viewController;
  id v8 = [*(id *)&v6[OBJC_IVAR____TtC8Freeform29CRLGenerativePlaygroundHelper_viewController] presentationController];
  if (v8)
  {
    uint64_t v9 = v8;
    [v8 setDelegate:v1];
  }
  else
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"presentGenerativePlayground(forCurrentSection:)", 47, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/App/CRLiOSMediaReplacer.swift", 87, 2, 156, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"presentGenerativePlayground(forCurrentSection:)", 47, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/App/CRLiOSMediaReplacer.swift", 87, 2, 156);
  }
  id v10 = *(void **)(v1 + v3);
  *(void *)(v1 + v3) = v6;
  NSString v14 = v6;

  if (a1)
  {
    uint64_t v11 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform19CRLiOSMediaReplacer_interactiveCanvasController);
    uint64_t v12 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v13 = v14;
    sub_100FB6A90(v11, v13, v12, v13);
    swift_release();
  }
  else
  {
    [*(id *)(v1 + OBJC_IVAR____TtC8Freeform19CRLiOSMediaReplacer_boardViewController) presentViewController:*(void *)&v6[v7] animated:1 completion:0];
  }
}

uint64_t sub_1009C62D4(void *a1, uint64_t a2, uint64_t a3, char a4)
{
  if (a3)
  {
    id v6 = a1;
    swift_unknownObjectRetain();
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v9, 0, sizeof(v9));
    id v7 = a1;
  }
  sub_1009C602C(a4 & 1);

  return sub_100522F00((uint64_t)v9, &qword_101672BF0);
}

void sub_1009C6358(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v4 = (void *)Strong;
    id v5 = *(id *)(Strong + OBJC_IVAR____TtC8Freeform19CRLiOSMediaReplacer_boardViewController);

    [v5 presentViewController:*(void *)(a2 + OBJC_IVAR____TtC8Freeform29CRLGenerativePlaygroundHelper_viewController) animated:1 completion:0];
  }
}

id sub_1009C63F4()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform19CRLiOSMediaReplacer_interactiveCanvasController);
  id result = [v1 editorController];
  if (result)
  {
    uint64_t v3 = result;
    if ([result mostSpecificCurrentEditorOfClass:0]
      && swift_dynamicCastObjCProtocolConditional())
    {

      uint64_t v4 = (void *)swift_dynamicCastObjCProtocolConditional();
      if (v4)
      {
        id v5 = v4;
        if ([v4 respondsToSelector:"selectedObjectsSupportingReplacement"])
        {
          id v6 = [v5 selectedObjectsSupportingReplacement];
          if (v6)
          {
            id v7 = v6;
            type metadata accessor for CRLBoardItem(0);
            sub_1009CC0B4((unint64_t *)&qword_101676C20, 255, (void (*)(uint64_t))type metadata accessor for CRLBoardItem);
            uint64_t v8 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

            uint64_t v9 = (void *)sub_100999830(v8);
            swift_bridgeObjectRelease();
            if (v9)
            {
              id v10 = [v1 repForInfo:v9];

              swift_unknownObjectRelease();
              if (v10)
              {
                id result = (id)swift_dynamicCastObjCProtocolConditional();
                if (result) {
                  return result;
                }
              }
              return 0;
            }
          }
        }
      }
    }
    else
    {
    }
    swift_unknownObjectRelease();
    return 0;
  }
  return result;
}

void sub_1009C65D4(uint64_t a1, void *a2, uint64_t a3)
{
  id v5 = sub_1009CACE0();
  if (v5)
  {
    id v6 = v5;
    type metadata accessor for URL();
    v7.super.Class isa = Array._bridgeToObjectiveC()().super.isa;
    if (a2)
    {
      aBlock[4] = a2;
      aBlock[5] = a3;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = *(void *)"";
      aBlock[2] = sub_100679958;
      aBlock[3] = &unk_10151CD98;
      a2 = _Block_copy(aBlock);
      swift_retain();
      swift_release();
    }
    [v6 replaceCanvasElementInfo:0 withFilesAtURLs:v7.super.isa allowedTypes:0 actionString:0 completion:a2];
    _Block_release(a2);
    swift_unknownObjectRelease();
  }
  else
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"insertMedia(from:completion:)", 29, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/App/CRLiOSMediaReplacer.swift", 87, 2, 484, (uint64_t)"No replacing editor", 19, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"insertMedia(from:completion:)", 29, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/App/CRLiOSMediaReplacer.swift", 87, 2, 484);
  }
}

void sub_1009C690C(void *a1, uint64_t a2)
{
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117E810;
  sub_1005057FC(&qword_10168A3E8);
  id v6 = a1;
  sub_1005057FC((uint64_t *)&unk_10168A3F0);
  String.init<A>(describing:)();
  NSString v7 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  *(void *)(inited + 56) = sub_10050BF48(0, (unint64_t *)&qword_101673918);
  uint64_t v8 = sub_1005E8BFC((unint64_t *)&qword_101677140, (unint64_t *)&qword_101673918);
  *(void *)(inited + 32) = v7;
  *(void *)(inited + 64) = v8;
  if (!Strong
    || (sub_10050BF48(0, &qword_101674418),
        id v9 = v6,
        id v10 = Strong,
        char v11 = static NSObject.== infix(_:_:)(),
        v9,
        v10,
        (v11 & 1) == 0))
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"picker(_:didFinishPicking:)", 27, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/App/CRLiOSMediaReplacer.swift", 87, 2, 198, (uint64_t)"expected equality between two values of type %{public}@", 55, 2u, inited);
    sub_1005598CC(inited, (uint64_t)"picker(_:didFinishPicking:)", 27, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/App/CRLiOSMediaReplacer.swift", 87, 2, 198);

    swift_bridgeObjectRelease();
    if (!*(void *)(a2 + 16)) {
      goto LABEL_4;
    }
LABEL_9:
    id v18 = self;
    id v19 = [v18 supportedImageTypes];
    uint64_t v20 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    id v21 = [v18 supportedMovieTypes];
    uint64_t v22 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    sub_1006E0CB8(v22);
    uint64_t v23 = v20;
    uint64_t v24 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v25 = (void *)swift_allocObject();
    v25[2] = v24;
    v25[3] = v6;
    v25[4] = a2;
    id v26 = v6;
    swift_retain();
    uint64_t v27 = swift_bridgeObjectRetain();
    id v28 = PHPickerViewController.crl_loadFileRepresentations(for:supportedTypeIdentifiers:completionHandler:)(v27, v23, (uint64_t)sub_1009CACD4, (uint64_t)v25);
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    NSString v29 = *(void **)(v30 + OBJC_IVAR____TtC8Freeform19CRLiOSMediaReplacer_photoPickerLoadingProgress);
    *(void *)(v30 + OBJC_IVAR____TtC8Freeform19CRLiOSMediaReplacer_photoPickerLoadingProgress) = v28;

    return;
  }
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  if (*(void *)(a2 + 16)) {
    goto LABEL_9;
  }
LABEL_4:
  if (qword_10166FAC8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v12 = (void *)static OS_os_log.crlInsertMedia;
  uint64_t v13 = swift_initStackObject();
  *(_OWORD *)(v13 + 16) = xmmword_10117E810;
  *(void *)(v13 + 56) = sub_10050BF48(0, &qword_101674418);
  *(void *)(v13 + 64) = sub_1005E8BFC((unint64_t *)&qword_101674420, &qword_101674418);
  *(void *)(v13 + 32) = v6;
  id v14 = v6;
  id v15 = v12;
  uint64_t v16 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v15, (uint64_t)&_mh_execute_header, v16, (uint64_t)"Dismissing photo picker (%p) with empty results.", 48, 2, v13);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  uint64_t v17 = *(void **)(v30 + OBJC_IVAR____TtC8Freeform19CRLiOSMediaReplacer_photoPickerLoadingProgress);
  if (v17)
  {
    [v17 cancel];
  }
  else
  {
    [v14 dismissViewControllerAnimated:1 completion:0];
    swift_unknownObjectWeakAssign();
  }
}

void sub_1009C6DCC(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6)
{
  if (([self isMainThread] & 1) == 0)
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"picker(_:didFinishPicking:)", 27, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/App/CRLiOSMediaReplacer.swift", 87, 2, 215, (uint64_t)"This operation must only be performed on the main thread.", 57, 2u, (uint64_t)_swiftEmptyArrayStorage);
    LOBYTE(v18) = 2;
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"picker(_:didFinishPicking:)", 27, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/App/CRLiOSMediaReplacer.swift", 87, 2, 215);
    [self logFullBacktrace:@"This operation must only be performed on the main thread." 57 v18];
  }
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v13 = (void *)Strong;
    swift_unknownObjectWeakAssign();
  }
  id v14 = (void *)swift_allocObject();
  v14[2] = a4;
  v14[3] = a5;
  v14[4] = a2;
  v14[5] = a1;
  v14[6] = a3;
  v14[7] = a6;
  aBlock[4] = sub_1009CAE7C;
  aBlock[5] = v14;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = *(void *)"";
  aBlock[2] = sub_100679958;
  aBlock[3] = &unk_10151CD48;
  id v15 = _Block_copy(aBlock);
  swift_retain();
  id v16 = a5;
  swift_bridgeObjectRetain();
  id v17 = a1;
  swift_errorRetain();
  swift_bridgeObjectRetain();
  swift_release();
  [v16 dismissViewControllerAnimated:1 completion:v15];
  _Block_release(v15);
}

void sub_1009C700C(uint64_t a1, void *a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  uint64_t v12 = (void *)Strong;
  if (Strong)
  {
    uint64_t v13 = *(void **)(Strong + OBJC_IVAR____TtC8Freeform19CRLiOSMediaReplacer_photoPickerLoadingProgress);
    id v14 = v13;

    if (v13)
    {
      LODWORD(v12) = [v14 isCancelled];
    }
    else
    {
      LODWORD(v12) = 0;
    }
  }
  swift_beginAccess();
  id v15 = (char *)swift_unknownObjectWeakLoadStrong();
  if (v15)
  {
    id v16 = *(void **)&v15[OBJC_IVAR____TtC8Freeform19CRLiOSMediaReplacer_photoPickerLoadingProgress];
    *(void *)&v15[OBJC_IVAR____TtC8Freeform19CRLiOSMediaReplacer_photoPickerLoadingProgress] = 0;
  }
  if (v12)
  {
    if (qword_10166FAC8 != -1) {
      swift_once();
    }
    swift_beginAccess();
    id v17 = (void *)static OS_os_log.crlInsertMedia;
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_10117E810;
    *(void *)(inited + 56) = sub_10050BF48(0, &qword_101674418);
    *(void *)(inited + 64) = sub_1005E8BFC((unint64_t *)&qword_101674420, &qword_101674418);
    *(void *)(inited + 32) = a2;
    id v19 = v17;
    id v20 = a2;
    uint64_t v21 = static os_log_type_t.default.getter();
    sub_100BAC898((uint64_t)v19, (uint64_t)&_mh_execute_header, v21, (uint64_t)"Photo picker (%p) loading progress was cancelled.", 49, 2, inited);
    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();
  }
  else if (a3 && *(void *)(a3 + 16) && (swift_beginAccess(), (uint64_t v22 = swift_unknownObjectWeakLoadStrong()) != 0))
  {
    uint64_t v23 = (void *)v22;
    uint64_t v24 = swift_allocObject();
    *(void *)(v24 + 16) = a4;
    id v25 = a4;
    sub_1009C65D4(a3, SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:), v24);

    swift_release();
  }
  else if (a5)
  {
    swift_errorRetain();
    sub_1005057FC(&qword_101672BD0);
    sub_10050BF48(0, (unint64_t *)&qword_10168D3C0);
    if (swift_dynamicCast())
    {
      id v26 = v41;
      if ((objc_msgSend(v41, "crl_isCancelError") & 1) == 0)
      {
        if (qword_10166FAC8 != -1) {
          swift_once();
        }
        swift_beginAccess();
        uint64_t v27 = (void *)static OS_os_log.crlInsertMedia;
        sub_1005057FC((uint64_t *)&unk_101672B40);
        uint64_t v28 = swift_initStackObject();
        *(_OWORD *)(v28 + 16) = xmmword_10117E810;
        id v29 = v27;
        id v26 = v41;
        id v30 = [v26 description];
        uint64_t v31 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v33 = v32;

        *(void *)(v28 + 56) = &type metadata for String;
        *(void *)(v28 + 64) = sub_100528BE4();
        *(void *)(v28 + 32) = v31;
        *(void *)(v28 + 40) = v33;
        uint64_t v34 = static os_log_type_t.error.getter();
        sub_100BAC898((uint64_t)v29, (uint64_t)&_mh_execute_header, v34, (uint64_t)"Error loading files from photo picker: %@", 41, 2, v28);
        swift_setDeallocating();
        sub_1005057FC(&qword_101672B50);
        swift_arrayDestroy();

        NSString v35 = (void *)sub_10106160C(a6);
        swift_beginAccess();
        uint64_t v36 = swift_unknownObjectWeakLoadStrong();
        if (v36)
        {
          uint64_t v37 = (void *)v36;
          id v38 = *(id *)(v36 + OBJC_IVAR____TtC8Freeform19CRLiOSMediaReplacer_interactiveCanvasController);

          id v39 = v35;
          id v40 = (void *)_convertErrorToNSError(_:)();

          [v38 presentError:v40 completionHandler:0];
        }
        else
        {
        }
      }
    }
  }
}

uint64_t sub_1009C74C0(void *a1, uint64_t a2)
{
  uint64_t v5 = sub_1005057FC(&qword_101672E90);
  __chkstk_darwin(v5 - 8, v6);
  uint64_t v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for URL();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9, v11);
  uint64_t v32 = (char *)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = v2;
  uint64_t v31 = v2 + OBJC_IVAR____TtC8Freeform19CRLiOSMediaReplacer_filePicker;
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117E810;
  uint64_t v35 = sub_1005057FC(&qword_10168A440);
  id v34 = a1;
  sub_1005057FC(&qword_10168A448);
  String.init<A>(describing:)();
  NSString v15 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  *(void *)(inited + 56) = sub_10050BF48(0, (unint64_t *)&qword_101673918);
  uint64_t v16 = sub_1005E8BFC((unint64_t *)&qword_101677140, (unint64_t *)&qword_101673918);
  *(void *)(inited + 32) = v15;
  *(void *)(inited + 64) = v16;
  if (Strong
    && (sub_10050BF48(0, (unint64_t *)&unk_10168A450),
        id v17 = v34,
        id v18 = Strong,
        char v19 = static NSObject.== infix(_:_:)(),
        v17,
        v18,
        (v19 & 1) != 0))
  {
    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();

    if (!*(void *)(a2 + 16))
    {
LABEL_4:
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v8, 1, 1, v9);
      return sub_100522F00((uint64_t)v8, &qword_101672E90);
    }
  }
  else
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"documentPicker(_:didPickDocumentsAt:)", 37, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/App/CRLiOSMediaReplacer.swift", 87, 2, 244, (uint64_t)"expected equality between two values of type %{public}@", 55, 2u, inited);
    sub_1005598CC(inited, (uint64_t)"documentPicker(_:didPickDocumentsAt:)", 37, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/App/CRLiOSMediaReplacer.swift", 87, 2, 244);

    swift_bridgeObjectRelease();
    if (!*(void *)(a2 + 16)) {
      goto LABEL_4;
    }
  }
  (*(void (**)(char *, unint64_t, uint64_t))(v10 + 16))(v8, a2 + ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80)), v9);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v8, 0, 1, v9);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1) {
    return sub_100522F00((uint64_t)v8, &qword_101672E90);
  }
  uint64_t v21 = v32;
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v32, v8, v9);
  id v22 = sub_1009C63F4();
  if (v22)
  {
    uint64_t v23 = v22;
    swift_getObjectType();
    URL._bridgeToObjectiveC()(v24);
    id v26 = v25;
    char v27 = sub_1009EE5DC(v25);

    if (v27)
    {
      id v28 = sub_1009CACE0();
      if (v28)
      {
        id v29 = v28;
        Class isa = Array._bridgeToObjectiveC()().super.isa;
        [v29 replaceCanvasElementInfo:0 withFilesAtURLs:isa allowedTypes:0 actionString:0 completion:0];
        swift_unknownObjectRelease();
      }
      else
      {
        sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"insertMedia(from:completion:)", 29, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/App/CRLiOSMediaReplacer.swift", 87, 2, 484, (uint64_t)"No replacing editor", 19, 2u, (uint64_t)_swiftEmptyArrayStorage);
        sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"insertMedia(from:completion:)", 29, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/App/CRLiOSMediaReplacer.swift", 87, 2, 484);
      }
    }
    else
    {
      sub_1009C7A08();
    }
    swift_unknownObjectWeakAssign();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v21, v9);
}

void sub_1009C7A08()
{
  uint64_t v1 = self;
  id v2 = [v1 mainBundle];
  NSString v3 = String._bridgeToObjectiveC()();
  NSString v4 = String._bridgeToObjectiveC()();
  id v5 = [v2 localizedStringForKey:v3 value:v4 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  id v6 = [v1 mainBundle];
  NSString v7 = String._bridgeToObjectiveC()();
  NSString v8 = String._bridgeToObjectiveC()();
  id v9 = [v6 localizedStringForKey:v7 value:v8 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v10 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  NSString v11 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v12 = [self alertControllerWithTitle:v10 message:v11 preferredStyle:1];

  id v13 = [v1 mainBundle];
  NSString v14 = String._bridgeToObjectiveC()();
  NSString v15 = String._bridgeToObjectiveC()();
  id v16 = [v13 localizedStringForKey:v14 value:v15 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v17 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v18 = [self actionWithTitle:v17 style:0 handler:0];

  [v12 addAction:v18];
  [*(id *)(v0 + OBJC_IVAR____TtC8Freeform19CRLiOSMediaReplacer_boardViewController) presentViewController:v12 animated:1 completion:0];
}

uint64_t sub_1009C7D8C(void *a1)
{
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117E810;
  sub_1005057FC(&qword_10168A440);
  id v4 = a1;
  sub_1005057FC(&qword_10168A448);
  String.init<A>(describing:)();
  NSString v5 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  *(void *)(inited + 56) = sub_10050BF48(0, (unint64_t *)&qword_101673918);
  uint64_t v6 = sub_1005E8BFC((unint64_t *)&qword_101677140, (unint64_t *)&qword_101673918);
  *(void *)(inited + 32) = v5;
  *(void *)(inited + 64) = v6;
  if (Strong
    && (sub_10050BF48(0, (unint64_t *)&unk_10168A450),
        id v7 = v4,
        id v8 = Strong,
        char v9 = static NSObject.== infix(_:_:)(),
        v7,
        v8,
        (v9 & 1) != 0))
  {
    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();
  }
  else
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"documentPickerWasCancelled(_:)", 30, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/App/CRLiOSMediaReplacer.swift", 87, 2, 270, (uint64_t)"expected equality between two values of type %{public}@", 55, 2u, inited);
    sub_1005598CC(inited, (uint64_t)"documentPickerWasCancelled(_:)", 30, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/App/CRLiOSMediaReplacer.swift", 87, 2, 270);

    swift_bridgeObjectRelease();
  }
  return swift_unknownObjectWeakAssign();
}

id sub_1009C8018(void *a1)
{
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117E810;
  sub_1005057FC(&qword_10168A420);
  id v4 = a1;
  sub_1005057FC(&qword_10168A428);
  String.init<A>(describing:)();
  NSString v5 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  *(void *)(inited + 56) = sub_10050BF48(0, (unint64_t *)&qword_101673918);
  uint64_t v6 = sub_1005E8BFC((unint64_t *)&qword_101677140, (unint64_t *)&qword_101673918);
  *(void *)(inited + 32) = v5;
  *(void *)(inited + 64) = v6;
  if (Strong
    && (sub_10050BF48(0, (unint64_t *)&unk_10168A430),
        id v7 = v4,
        id v8 = Strong,
        char v9 = static NSObject.== infix(_:_:)(),
        v7,
        v8,
        (v9 & 1) != 0))
  {
    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();
  }
  else
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"imagePickerControllerDidCancel(_:)", 34, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/App/CRLiOSMediaReplacer.swift", 87, 2, 279, (uint64_t)"expected equality between two values of type %{public}@", 55, 2u, inited);
    sub_1005598CC(inited, (uint64_t)"imagePickerControllerDidCancel(_:)", 34, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/App/CRLiOSMediaReplacer.swift", 87, 2, 279);

    swift_bridgeObjectRelease();
  }
  swift_unknownObjectWeakAssign();
  return [v4 dismissViewControllerAnimated:1 completion:0];
}

void sub_1009C82BC(void *a1, uint64_t a2)
{
  NSString v3 = v2;
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117E810;
  aBlock[0] = sub_1005057FC(&qword_10168A420);
  id v8 = a1;
  sub_1005057FC(&qword_10168A428);
  String.init<A>(describing:)();
  NSString v9 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  *(void *)(inited + 56) = sub_10050BF48(0, (unint64_t *)&qword_101673918);
  uint64_t v10 = sub_1005E8BFC((unint64_t *)&qword_101677140, (unint64_t *)&qword_101673918);
  *(void *)(inited + 32) = v9;
  *(void *)(inited + 64) = v10;
  if (Strong
    && (sub_10050BF48(0, (unint64_t *)&unk_10168A430),
        id v11 = v8,
        id v12 = Strong,
        char v13 = static NSObject.== infix(_:_:)(),
        v11,
        v12,
        (v13 & 1) != 0))
  {
    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();
  }
  else
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"imagePickerController(_:didFinishPickingMediaWithInfo:)", 55, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/App/CRLiOSMediaReplacer.swift", 87, 2, 285, (uint64_t)"expected equality between two values of type %{public}@", 55, 2u, inited);
    sub_1005598CC(inited, (uint64_t)"imagePickerController(_:didFinishPickingMediaWithInfo:)", 55, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/App/CRLiOSMediaReplacer.swift", 87, 2, 285);

    swift_bridgeObjectRelease();
  }
  swift_unknownObjectWeakAssign();
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = a2;
  *(void *)(v14 + 24) = v3;
  aBlock[4] = sub_1009CC11C;
  aBlock[5] = v14;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = *(void *)"";
  aBlock[2] = sub_100679958;
  aBlock[3] = &unk_10151CF00;
  NSString v15 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  id v16 = v3;
  swift_release();
  [v8 dismissViewControllerAnimated:1 completion:v15];
  _Block_release(v15);
}

void sub_1009C85A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1005057FC(&qword_101672E90);
  __chkstk_darwin(v4 - 8, v5);
  id v7 = (char *)&v131 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for URL();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8, v10);
  id v12 = (char *)&v131 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13, v14);
  uint64_t v137 = (char *)&v131 - v15;
  __chkstk_darwin(v16, v17);
  uint64_t v138 = (uint64_t)&v131 - v18;
  __chkstk_darwin(v19, v20);
  unint64_t v139 = (unint64_t)&v131 - v21;
  __chkstk_darwin(v22, v23);
  uint64_t v136 = (char *)&v131 - v24;
  uint64_t v25 = type metadata accessor for UTType();
  uint64_t v26 = *(void *)(v25 - 8);
  __chkstk_darwin(v25, v27);
  id v29 = (char *)&v131 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(a1 + 16))
  {
    long long v142 = 0u;
    long long v143 = 0u;
    goto LABEL_11;
  }
  uint64_t v134 = a2;
  uint64_t v135 = v9;
  id v30 = UIImagePickerControllerMediaType;
  uint64_t v31 = sub_10095609C(v30);
  if ((v32 & 1) == 0)
  {
    long long v142 = 0u;
    long long v143 = 0u;

    goto LABEL_11;
  }
  sub_100522D7C(*(void *)(a1 + 56) + 32 * v31, (uint64_t)&v142);

  if (!*((void *)&v143 + 1))
  {
LABEL_11:
    sub_100522F00((uint64_t)&v142, &qword_101672BF0);
    goto LABEL_12;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_12:
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"imagePickerController(_:didFinishPickingMediaWithInfo:)", 55, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/App/CRLiOSMediaReplacer.swift", 87, 2, 290, (uint64_t)"No media type", 13, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"imagePickerController(_:didFinishPickingMediaWithInfo:)", 55, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/App/CRLiOSMediaReplacer.swift", 87, 2, 290);
    return;
  }
  uint64_t v131 = v8;
  long long v133 = v140;
  NSString v33 = String._bridgeToObjectiveC()();
  static UTType.image.getter();
  UTType.identifier.getter();
  uint64_t v132 = *(void (**)(char *, uint64_t))(v26 + 8);
  v132(v29, v25);
  NSString v34 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  unsigned int v35 = [v33 crl_conformsToUTI:v34];

  if (!v35)
  {
    NSString v39 = String._bridgeToObjectiveC()();
    static UTType.movie.getter();
    UTType.identifier.getter();
    v132(v29, v25);
    NSString v40 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    unsigned int v41 = [v39 crl_conformsToUTI:v40];

    if (!v41)
    {
      sub_1005057FC((uint64_t *)&unk_101672B40);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_10117E810;
      *(void *)(inited + 56) = &type metadata for String;
      *(void *)(inited + 64) = sub_100528BE4();
      *(_OWORD *)(inited + 32) = v133;
      sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"imagePickerController(_:didFinishPickingMediaWithInfo:)", 55, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/App/CRLiOSMediaReplacer.swift", 87, 2, 328, (uint64_t)"Bad media type: %@", 18, 2u, inited);
      sub_1005598CC(inited, (uint64_t)"imagePickerController(_:didFinishPickingMediaWithInfo:)", 55, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/App/CRLiOSMediaReplacer.swift", 87, 2, 328);
      swift_setDeallocating();
      sub_1005057FC(&qword_101672B50);
      swift_arrayDestroy();
      return;
    }
    swift_bridgeObjectRelease();
    if (*(void *)(a1 + 16))
    {
      NSString v42 = UIImagePickerControllerMediaURL;
      uint64_t v43 = sub_10095609C(v42);
      uint64_t v44 = v131;
      uint64_t v45 = v135;
      if (v46)
      {
        sub_100522D7C(*(void *)(a1 + 56) + 32 * v43, (uint64_t)&v140);
      }
      else
      {
        long long v140 = 0u;
        long long v141 = 0u;
      }

      if (*((void *)&v141 + 1))
      {
LABEL_41:
        sub_10052E248((uint64_t)&v140, (uint64_t)&v142);
        if (*((void *)&v143 + 1))
        {
          int v82 = swift_dynamicCast();
          (*(void (**)(char *, void, uint64_t, uint64_t))(v45 + 56))(v7, v82 ^ 1u, 1, v44);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v45 + 48))(v7, 1, v44) != 1)
          {
            uint64_t v83 = v138;
            (*(void (**)(uint64_t, char *, uint64_t))(v45 + 32))(v138, v7, v44);
            id v84 = [self mainBundle];
            NSString v85 = String._bridgeToObjectiveC()();
            NSString v86 = String._bridgeToObjectiveC()();
            id v87 = [v84 localizedStringForKey:v85 value:v86 table:0];

            static String._unconditionallyBridgeFromObjectiveC(_:)();
            URL.deletingLastPathComponent()();
            unint64_t v88 = v139;
            URL.appendingPathComponent(_:)();
            swift_bridgeObjectRelease();
            uint64_t v89 = *(void (**)(char *, uint64_t))(v45 + 8);
            uint64_t v90 = v12;
            uint64_t v91 = v83;
            v89(v90, v44);
            URL.pathExtension.getter();
            uint64_t v92 = v137;
            URL.appendingPathExtension(_:)();
            swift_bridgeObjectRelease();
            v89((char *)v88, v44);
            uint64_t v93 = self;
            id v94 = [v93 defaultManager];
            URL._bridgeToObjectiveC()(v95);
            uint64_t v97 = v96;
            *(void *)&long long v142 = 0;
            LODWORD(v88) = [v94 removeItemAtURL:v96 error:&v142];

            if (v88)
            {
              id v98 = (id)v142;
            }
            else
            {
              id v99 = (id)v142;
              _convertNSErrorToError(_:)();

              swift_willThrow();
              swift_errorRelease();
            }
            id v100 = [v93 defaultManager];
            URL._bridgeToObjectiveC()(v101);
            uint64_t v103 = v102;
            URL._bridgeToObjectiveC()(v104);
            uint64_t v106 = v105;
            *(void *)&long long v142 = 0;
            unsigned int v107 = [v100 moveItemAtURL:v103 toURL:v105 error:&v142];

            if (v107)
            {
              id v108 = (id)v142;
              uint64_t v109 = v131;
              v89((char *)v91, v131);
              uint64_t v110 = v135;
              (*(void (**)(uint64_t, char *, uint64_t))(v135 + 16))(v91, v92, v109);
            }
            else
            {
              id v111 = (id)v142;
              _convertNSErrorToError(_:)();

              swift_willThrow();
              swift_errorRelease();
              uint64_t v109 = v131;
              uint64_t v110 = v135;
            }
            sub_1005057FC(&qword_1016743E0);
            unint64_t v112 = (*(unsigned __int8 *)(v110 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v110 + 80);
            uint64_t v113 = swift_allocObject();
            *(_OWORD *)(v113 + 16) = xmmword_10117E810;
            (*(void (**)(unint64_t, uint64_t, uint64_t))(v110 + 16))(v113 + v112, v91, v109);
            id v114 = sub_1009CACE0();
            if (v114)
            {
              unsigned __int8 v115 = v114;
              Class isa = Array._bridgeToObjectiveC()().super.isa;
              [v115 replaceCanvasElementInfo:0 withFilesAtURLs:isa allowedTypes:0 actionString:0 completion:0];
              swift_bridgeObjectRelease();
              swift_unknownObjectRelease();

              v89(v92, v109);
              uint64_t v117 = v91;
            }
            else
            {
              sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"insertMedia(from:completion:)", 29, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/App/CRLiOSMediaReplacer.swift", 87, 2, 484, (uint64_t)"No replacing editor", 19, 2u, (uint64_t)_swiftEmptyArrayStorage);
              sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"insertMedia(from:completion:)", 29, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/App/CRLiOSMediaReplacer.swift", 87, 2, 484);
              swift_bridgeObjectRelease();
              v89(v92, v109);
              uint64_t v117 = v138;
            }
            v89((char *)v117, v109);
            return;
          }
        }
        else
        {
          sub_100522F00((uint64_t)&v142, &qword_101672BF0);
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v45 + 56))(v7, 1, 1, v44);
        }
        sub_100522F00((uint64_t)v7, &qword_101672E90);
        if (qword_10166F9C8 != -1) {
          swift_once();
        }
        swift_beginAccess();
        id v74 = (id)static OS_os_log.crlDefault;
        uint64_t v75 = static os_log_type_t.error.getter();
        uint64_t v76 = "No movie URL to insert";
        uint64_t v77 = (uint64_t)v74;
        uint64_t v78 = 22;
        goto LABEL_49;
      }
    }
    else
    {
      long long v140 = 0u;
      long long v141 = 0u;
    }
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"imagePickerController(_:didFinishPickingMediaWithInfo:)", 55, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/App/CRLiOSMediaReplacer.swift", 87, 2, 313, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    uint64_t v44 = v131;
    uint64_t v45 = v135;
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"imagePickerController(_:didFinishPickingMediaWithInfo:)", 55, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/App/CRLiOSMediaReplacer.swift", 87, 2, 313);
    goto LABEL_41;
  }
  swift_bridgeObjectRelease();
  if (!*(void *)(a1 + 16))
  {
    long long v140 = 0u;
    long long v141 = 0u;
    goto LABEL_19;
  }
  uint64_t v36 = UIImagePickerControllerEditedImage;
  uint64_t v37 = sub_10095609C(v36);
  if (v38)
  {
    sub_100522D7C(*(void *)(a1 + 56) + 32 * v37, (uint64_t)&v140);
  }
  else
  {
    long long v140 = 0u;
    long long v141 = 0u;
  }

  if (!*((void *)&v141 + 1))
  {
    if (*(void *)(a1 + 16))
    {
      uint64_t v79 = UIImagePickerControllerOriginalImage;
      uint64_t v80 = sub_10095609C(v79);
      if (v81)
      {
        sub_100522D7C(*(void *)(a1 + 56) + 32 * v80, (uint64_t)&v142);
      }
      else
      {
        long long v142 = 0u;
        long long v143 = 0u;
      }

LABEL_20:
      sub_100522F00((uint64_t)&v140, &qword_101672BF0);
      if (!*((void *)&v143 + 1))
      {
LABEL_28:
        sub_100522F00((uint64_t)&v142, &qword_101672BF0);
        goto LABEL_29;
      }
      goto LABEL_21;
    }
LABEL_19:
    long long v142 = 0u;
    long long v143 = 0u;
    goto LABEL_20;
  }
  sub_100575CE8(&v140, &v142);
  if (!*((void *)&v143 + 1)) {
    goto LABEL_28;
  }
LABEL_21:
  sub_10050BF48(0, &qword_1016747A0);
  if (!swift_dynamicCast())
  {
LABEL_29:
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"imagePickerController(_:didFinishPickingMediaWithInfo:)", 55, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/App/CRLiOSMediaReplacer.swift", 87, 2, 295, (uint64_t)"Bad image info", 14, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"imagePickerController(_:didFinishPickingMediaWithInfo:)", 55, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/App/CRLiOSMediaReplacer.swift", 87, 2, 295);
    swift_bridgeObjectRelease();
LABEL_30:
    if (qword_10166F9C8 != -1) {
      swift_once();
    }
    swift_beginAccess();
    id v74 = (id)static OS_os_log.crlDefault;
    uint64_t v75 = static os_log_type_t.error.getter();
    uint64_t v76 = "No image to insert";
    uint64_t v77 = (uint64_t)v74;
    uint64_t v78 = 18;
LABEL_49:
    sub_100BAC898(v77, (uint64_t)&_mh_execute_header, v75, (uint64_t)v76, v78, 2, (uint64_t)_swiftEmptyArrayStorage);

    return;
  }
  NSString v48 = (char *)v140;
  int v49 = UIImageJPEGRepresentation((UIImage *)v140, 0.8);
  if (!v49)
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"imagePickerController(_:didFinishPickingMediaWithInfo:)", 55, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/App/CRLiOSMediaReplacer.swift", 87, 2, 296, (uint64_t)"Unable to get image data", 24, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"imagePickerController(_:didFinishPickingMediaWithInfo:)", 55, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/App/CRLiOSMediaReplacer.swift", 87, 2, 296);

    goto LABEL_30;
  }
  id v50 = v49;
  uint64_t v51 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v53 = v52;

  id v54 = [self mainBundle];
  NSString v55 = String._bridgeToObjectiveC()();
  NSString v56 = String._bridgeToObjectiveC()();
  id v57 = [v54 localizedStringForKey:v55 value:v56 table:0];

  uint64_t v58 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v60 = v59;

  *(void *)&long long v142 = 1735420462;
  *((void *)&v142 + 1) = 0xE400000000000000;
  *(void *)&long long v140 = v58;
  *((void *)&v140 + 1) = v60;
  swift_bridgeObjectRetain();
  *(void *)&long long v140 = String.init<A>(_:)();
  *((void *)&v140 + 1) = v61;
  String.append<A>(contentsOf:)();
  swift_bridgeObjectRelease();
  id v62 = objc_allocWithZone((Class)CRLTemporaryDirectory);
  NSString v63 = String._bridgeToObjectiveC()();
  *(void *)&long long v142 = 0;
  id v64 = [v62 initWithSignature:v63 error:&v142];

  uint64_t v138 = v51;
  if (v64)
  {
    uint64_t v137 = v48;
    id v65 = (id)v142;
    id v66 = [v64 URL];
    unint64_t v67 = v53;
    unint64_t v68 = v139;
    static URL._unconditionallyBridgeFromObjectiveC(_:)();

    id v69 = v136;
    URL.appendingPathComponent(_:isDirectory:)();
    swift_bridgeObjectRelease();
    uint64_t v70 = v135;
    id v71 = *(void (**)(unint64_t, uint64_t))(v135 + 8);
    unint64_t v72 = v68;
    uint64_t v73 = v131;
    v71(v72, v131);
    unint64_t v139 = v67;
    Data.write(to:options:)();
    sub_1005057FC(&qword_1016743E0);
    uint64_t v126 = v69;
    unint64_t v127 = (*(unsigned __int8 *)(v70 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v70 + 80);
    uint64_t v128 = swift_allocObject();
    *(_OWORD *)(v128 + 16) = xmmword_10117E810;
    (*(void (**)(unint64_t, char *, uint64_t))(v70 + 16))(v128 + v127, v126, v73);
    uint64_t v129 = swift_allocObject();
    *(void *)(v129 + 16) = v64;
    id v130 = v64;
    sub_1009C65D4(v128, SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:), v129);
    swift_bridgeObjectRelease();
    swift_release();

    sub_100510084(v138, v139);
    v71((unint64_t)v126, v73);
  }
  else
  {
    id v118 = (id)v142;
    _convertNSErrorToError(_:)();

    swift_willThrow();
    swift_bridgeObjectRelease();
    if (qword_10166F9C8 != -1) {
      swift_once();
    }
    swift_beginAccess();
    uint64_t v119 = (void *)static OS_os_log.crlDefault;
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t v120 = swift_initStackObject();
    *(_OWORD *)(v120 + 16) = xmmword_10117E810;
    swift_getErrorValue();
    id v121 = v119;
    uint64_t v122 = Error.localizedDescription.getter();
    uint64_t v124 = v123;
    *(void *)(v120 + 56) = &type metadata for String;
    *(void *)(v120 + 64) = sub_100528BE4();
    *(void *)(v120 + 32) = v122;
    *(void *)(v120 + 40) = v124;
    uint64_t v125 = static os_log_type_t.error.getter();
    sub_100BAC898((uint64_t)v121, (uint64_t)&_mh_execute_header, v125, (uint64_t)"Error writing file to temporary directory: %@", 45, 2, v120);

    sub_100510084(v138, v53);
    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();

    swift_errorRelease();
  }
}

id sub_1009C9A68(void *a1)
{
  id v3 = [a1 sourceView];
  id v4 = [*(id *)(v1 + OBJC_IVAR____TtC8Freeform19CRLiOSMediaReplacer_interactiveCanvasController) canvasView];
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117E810;
  sub_1005057FC((uint64_t *)&unk_10168F9D0);
  sub_1005057FC((uint64_t *)&unk_10168A410);
  String.init<A>(describing:)();
  NSString v6 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  *(void *)(inited + 56) = sub_10050BF48(0, (unint64_t *)&qword_101673918);
  uint64_t v7 = sub_1005E8BFC((unint64_t *)&qword_101677140, (unint64_t *)&qword_101673918);
  *(void *)(inited + 32) = v6;
  *(void *)(inited + 64) = v7;
  if (!v3)
  {
    if (!v4)
    {
      swift_setDeallocating();
      sub_1005057FC(&qword_101672B50);
      swift_arrayDestroy();
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (!v4
    || (sub_10050BF48(0, (unint64_t *)&qword_1016725F0),
        id v8 = v3,
        id v9 = v4,
        char v10 = static NSObject.== infix(_:_:)(),
        v8,
        v9,
        (v10 & 1) == 0))
  {
LABEL_6:
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"prepareForPopoverPresentation(_:)", 33, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/App/CRLiOSMediaReplacer.swift", 87, 2, 344, (uint64_t)"expected equality between two values of type %{public}@", 55, 2u, inited);
    sub_1005598CC(inited, (uint64_t)"prepareForPopoverPresentation(_:)", 33, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/App/CRLiOSMediaReplacer.swift", 87, 2, 344);

    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

LABEL_7:
  id v11 = sub_1009C63F4();
  double v12 = sub_1009CA104(v11);
  double v14 = v13;
  double v16 = v15;
  double v18 = v17;

  return [a1 setSourceRect:v12, v14, v16, v18];
}

void sub_1009C9E00(void *a1)
{
  uint64_t v2 = v1;
  id v4 = [a1 presentedViewController];
  uint64_t v5 = v4;
  uint64_t v6 = OBJC_IVAR____TtC8Freeform19CRLiOSMediaReplacer_gpHelper;
  uint64_t v7 = *(void *)(v2 + OBJC_IVAR____TtC8Freeform19CRLiOSMediaReplacer_gpHelper);
  if (!v7)
  {
    if (!v4)
    {
LABEL_8:
      double v12 = 0;
LABEL_20:
      *(void *)(v2 + v6) = 0;

      return;
    }
    goto LABEL_10;
  }
  id v8 = *(id *)(v7 + OBJC_IVAR____TtC8Freeform29CRLGenerativePlaygroundHelper_viewController);
  id v9 = v8;
  if (!v5)
  {
    uint64_t v5 = v8;
    if (!v8) {
      goto LABEL_19;
    }
    goto LABEL_10;
  }
  if (!v8)
  {
LABEL_10:

    goto LABEL_11;
  }
  sub_10050BF48(0, (unint64_t *)&qword_1016745A0);
  id v10 = v5;
  char v11 = static NSObject.== infix(_:_:)();

  if (v11)
  {
    uint64_t v7 = *(void *)(v2 + v6);
    if (!v7) {
      goto LABEL_8;
    }
LABEL_19:
    [*(id *)(v7 + OBJC_IVAR____TtC8Freeform29CRLGenerativePlaygroundHelper_viewController) dismissViewControllerAnimated:1 completion:0];
    double v12 = *(void **)(v2 + v6);
    goto LABEL_20;
  }
LABEL_11:
  id v13 = [a1 presentedViewController];
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  double v15 = (void *)Strong;
  if (!v13)
  {
    if (!Strong) {
      goto LABEL_16;
    }
LABEL_24:

LABEL_25:
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"presentationControllerDidDismiss(_:)", 36, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/App/CRLiOSMediaReplacer.swift", 87, 2, 365, (uint64_t)"Unexpected presentation controller being dismissed", 50, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"presentationControllerDidDismiss(_:)", 36, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/App/CRLiOSMediaReplacer.swift", 87, 2, 365);
    return;
  }
  if (!Strong)
  {
    double v15 = v13;
    goto LABEL_24;
  }
  sub_10050BF48(0, (unint64_t *)&qword_1016745A0);
  id v16 = v13;
  char v17 = static NSObject.== infix(_:_:)();

  if ((v17 & 1) == 0) {
    goto LABEL_25;
  }
LABEL_16:

  swift_unknownObjectWeakAssign();
}

double sub_1009CA104(void *a1)
{
  if (!a1) {
    goto LABEL_4;
  }
  id v2 = a1;
  if ([v2 hasBeenRemoved])
  {

LABEL_4:
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"sourceRect(forMediaReplacing:)", 30, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/App/CRLiOSMediaReplacer.swift", 87, 2, 375, (uint64_t)"media replacing rep is no longer valid", 38, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"sourceRect(forMediaReplacing:)", 30, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/App/CRLiOSMediaReplacer.swift", 87, 2, 375);
    return 0.0;
  }
  uint64_t v5 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform19CRLiOSMediaReplacer_interactiveCanvasController);
  [v2 frameInUnscaledCanvas];
  [v5 convertUnscaledToBoundsRect:];
  CGFloat v7 = v6;
  CGFloat v9 = v8;
  CGFloat v11 = v10;
  CGFloat v13 = v12;
  [v5 visibleScaledRectForCanvasUI];
  v36.origin.double x = v14;
  CGFloat v27 = v14;
  CGFloat v16 = v15;
  CGFloat v18 = v17;
  CGFloat v20 = v19;
  v29.origin.double x = v7;
  v29.origin.CGFloat y = v9;
  v29.size.CGFloat width = v11;
  v29.size.CGFloat height = v13;
  v36.origin.CGFloat y = v16;
  v36.size.CGFloat width = v18;
  v36.size.CGFloat height = v20;
  CGRect v30 = CGRectIntersection(v29, v36);
  double x = v30.origin.x;
  CGFloat y = v30.origin.y;
  CGFloat width = v30.size.width;
  CGFloat height = v30.size.height;
  double v24 = CGRectGetWidth(v30);
  CGFloat v28 = x;
  v31.origin.double x = x;
  v31.origin.CGFloat y = y;
  v31.size.CGFloat width = width;
  v31.size.CGFloat height = height;
  double v26 = v24 * CGRectGetHeight(v31);
  v32.origin.double x = v27;
  v32.origin.CGFloat y = v16;
  v32.size.CGFloat width = v18;
  v32.size.CGFloat height = v20;
  double v25 = CGRectGetWidth(v32);
  v33.origin.double x = v27;
  v33.origin.CGFloat y = v16;
  v33.size.CGFloat width = v18;
  v33.size.CGFloat height = v20;
  if (v25 * CGRectGetHeight(v33) < v26 + v26)
  {
    v34.origin.double x = x;
    v34.origin.CGFloat y = y;
    v34.size.CGFloat width = width;
    v34.size.CGFloat height = height;
    double x = CGRectGetMidX(v34);
    v35.origin.double x = v28;
    v35.origin.CGFloat y = y;
    v35.size.CGFloat width = width;
    v35.size.CGFloat height = height;
    CGRectGetMidY(v35);
  }

  return x;
}

void sub_1009CA36C(uint64_t a1, uint64_t a2, NSObject *a3, void *a4, void *a5, uint64_t a6)
{
  uint64_t v84 = a6;
  uint64_t v85 = a1;
  uint64_t v10 = type metadata accessor for UUID();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10, v12);
  CGFloat v14 = (char *)&v76 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1005057FC(&qword_101672E90);
  __chkstk_darwin(v15 - 8, v16);
  CGFloat v18 = (char *)&v76 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = type metadata accessor for URL();
  uint64_t v20 = *(void *)(v19 - 8);
  __chkstk_darwin(v19, v21);
  __chkstk_darwin(v22, v23);
  __chkstk_darwin(v24, v25);
  CGFloat v27 = (char *)&v76 - v26;
  __chkstk_darwin(v28, v29);
  __chkstk_darwin(v30, v31);
  if (a2)
  {
    swift_errorRetain();
    swift_willThrow();
LABEL_3:
    if (qword_10166FAC8 != -1) {
      swift_once();
    }
    swift_beginAccess();
    uint64_t v37 = (void *)static OS_os_log.crlInsertMedia;
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_10117E810;
    uint64_t v86 = a2;
    id v39 = v37;
    swift_errorRetain();
    sub_1005057FC(&qword_101672BD0);
    uint64_t v40 = String.init<A>(describing:)();
    uint64_t v42 = v41;
    *(void *)(inited + 56) = &type metadata for String;
    *(void *)(inited + 64) = sub_100528BE4();
    *(void *)(inited + 32) = v40;
    *(void *)(inited + 40) = v42;
    uint64_t v43 = static os_log_type_t.error.getter();
    sub_100BAC898((uint64_t)v39, (uint64_t)&_mh_execute_header, v43, (uint64_t)"Error loading sticker from provider: %@", 39, 2, inited);
    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();

    swift_errorRelease();
    return;
  }
  uint64_t v44 = a4;
  id v79 = a5;
  uint64_t v78 = v36;
  uint64_t v80 = v35;
  dispatch_group_t v81 = a3;
  int v82 = (char *)&v76 - v33;
  uint64_t v83 = v34;
  uint64_t v45 = v32;
  sub_100522E9C(v85, (uint64_t)v18, &qword_101672E90);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v45) == 1)
  {
    sub_100522F00((uint64_t)v18, &qword_101672E90);
    dispatch_group_leave(v81);
    return;
  }
  char v46 = *(void (**)(unint64_t, uint64_t, uint64_t))(v20 + 32);
  id v47 = v82;
  uint64_t v76 = v20 + 32;
  uint64_t v77 = v46;
  v46((unint64_t)v82, (uint64_t)v18, v45);
  id v48 = [v44 URL];
  static URL._unconditionallyBridgeFromObjectiveC(_:)();

  UUID.init()();
  UUID.uuidString.getter();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
  int v49 = v83;
  URL.appendingPathComponent(_:isDirectory:)();
  swift_bridgeObjectRelease();
  uint64_t v85 = v20;
  id v50 = *(void (**)(char *, uint64_t))(v20 + 8);
  v50(v27, v45);
  URL.lastPathComponent.getter();
  uint64_t v51 = v80;
  URL.appendingPathComponent(_:)();
  swift_bridgeObjectRelease();
  URL._bridgeToObjectiveC()(v52);
  id v54 = v53;
  v87[0] = 0;
  id v55 = v79;
  unsigned int v56 = [v79 createDirectoryAtURL:v53 withIntermediateDirectories:1 attributes:0 error:v87];

  if (!v56)
  {
    id v73 = v87[0];
    a2 = _convertNSErrorToError(_:)();

    swift_willThrow();
    v50(v51, v45);
    id v74 = v49;
LABEL_17:
    v50(v74, v45);
    v50(v47, v45);
    goto LABEL_3;
  }
  id v57 = v87[0];
  URL._bridgeToObjectiveC()(v58);
  uint64_t v60 = v59;
  URL._bridgeToObjectiveC()(v61);
  NSString v63 = v62;
  v87[0] = 0;
  unsigned int v64 = [v55 copyItemAtURL:v60 toURL:v62 error:v87];

  id v65 = v87[0];
  if (!v64)
  {
    id v75 = v87[0];
    a2 = _convertNSErrorToError(_:)();

    swift_willThrow();
    v50(v51, v45);
    id v74 = v83;
    goto LABEL_17;
  }
  id v66 = (unint64_t *)(v84 + 16);
  (*(void (**)(uint64_t, char *, uint64_t))(v85 + 16))(v78, v51, v45);
  swift_beginAccess();
  unint64_t v67 = *v66;
  id v68 = v65;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *id v66 = v67;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    unint64_t v67 = sub_100F62784(0, *(void *)(v67 + 16) + 1, 1, v67);
    *id v66 = v67;
  }
  uint64_t v70 = v81;
  unint64_t v72 = *(void *)(v67 + 16);
  unint64_t v71 = *(void *)(v67 + 24);
  if (v72 >= v71 >> 1)
  {
    unint64_t v67 = sub_100F62784(v71 > 1, v72 + 1, 1, v67);
    *id v66 = v67;
  }
  *(void *)(v67 + 16) = v72 + 1;
  v77(v67+ ((*(unsigned __int8 *)(v85 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v85 + 80))+ *(void *)(v85 + 72) * v72, v78, v45);
  swift_endAccess();
  dispatch_group_leave(v70);
  v50(v51, v45);
  v50(v83, v45);
  v50(v82, v45);
}

uint64_t sub_1009CAAC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t))
{
  swift_beginAccess();
  uint64_t v7 = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1009C65D4(v7, sub_1009CC0FC, a3);
  swift_bridgeObjectRelease();
  swift_release();
  return a4(1);
}

id sub_1009CAB78(uint64_t a1)
{
  swift_beginAccess();
  id result = *(id *)(a1 + 16);
  if (result) {
    return [result removeDirectory];
  }
  return result;
}

uint64_t sub_1009CAC54()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1009CAC8C()
{
  swift_release();

  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 40, 7);
}

void sub_1009CACD4(void *a1, uint64_t a2, uint64_t a3)
{
  sub_1009C6DCC(a1, a2, a3, *(void *)(v3 + 16), *(void **)(v3 + 24), *(void *)(v3 + 32));
}

id sub_1009CACE0()
{
  id result = [*(id *)(v0 + OBJC_IVAR____TtC8Freeform19CRLiOSMediaReplacer_interactiveCanvasController) editorController];
  if (result)
  {
    id v2 = result;
    if ([result mostSpecificCurrentEditorOfClass:0]
      && swift_dynamicCastObjCProtocolConditional())
    {

      id result = (id)swift_dynamicCastObjCProtocolConditional();
      if (result) {
        return result;
      }
    }
    else
    {
    }
    swift_unknownObjectRelease();
    return 0;
  }
  return result;
}

void sub_1009CADB4()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    swift_unknownObjectWeakAssign();
  }
}

uint64_t sub_1009CAE1C()
{
  swift_release();

  swift_bridgeObjectRelease();
  swift_errorRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 64, 7);
}

void sub_1009CAE7C()
{
  sub_1009C700C(*(void *)(v0 + 16), *(void **)(v0 + 24), *(void *)(v0 + 32), *(void **)(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 56));
}

uint64_t sub_1009CAE8C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1009CAE9C()
{
  return swift_release();
}

uint64_t sub_1009CAEA4()
{
  uint64_t v1 = *(void **)&v0[OBJC_IVAR____TtC8Freeform19CRLiOSMediaReplacer_boardViewController];
  uint64_t v2 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v3 = self;
  id v4 = (void *)swift_allocObject();
  v4[2] = v0;
  v4[3] = v1;
  v4[4] = sub_1009CC2E0;
  v4[5] = v2;
  v9[4] = sub_1005C6DDC;
  v9[5] = v4;
  v9[0] = _NSConcreteStackBlock;
  v9[1] = *(void *)"";
  _OWORD v9[2] = sub_100F8FD18;
  v9[3] = &unk_10151D220;
  uint64_t v5 = _Block_copy(v9);
  swift_retain_n();
  double v6 = v0;
  id v7 = v1;
  swift_release();
  [v3 crl_checkAuthorizationForMediaType:AVMediaTypeVideo completion:v5];
  _Block_release(v5);
  return swift_release_n();
}

void sub_1009CB008(uint64_t a1)
{
  uint64_t v2 = v1;
  id v4 = sub_1009C63F4();
  if (v4)
  {
    uint64_t v5 = v4;
    swift_getObjectType();
    URL._bridgeToObjectiveC()(v6);
    double v8 = v7;
    char v9 = sub_1009EE5DC(v7);

    if (v9)
    {
      sub_1005057FC(&qword_1016743E0);
      uint64_t v10 = type metadata accessor for URL();
      uint64_t v11 = *(void *)(v10 - 8);
      unint64_t v12 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
      uint64_t v13 = swift_allocObject();
      *(_OWORD *)(v13 + 16) = xmmword_10117E810;
      (*(void (**)(unint64_t, uint64_t, uint64_t))(v11 + 16))(v13 + v12, a1, v10);
      id v16 = v2;
      sub_100FB75A0(v13, (uint64_t)v16);

      swift_bridgeObjectRelease();

      return;
    }
  }
  if (qword_10166FAC8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  id v14 = (id)static OS_os_log.crlInsertMedia;
  uint64_t v15 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v14, (uint64_t)&_mh_execute_header, v15, (uint64_t)"No media replacing rep or image not allowed.", 44, 2, (uint64_t)_swiftEmptyArrayStorage);
}

void sub_1009CB20C(double *a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();

  if (!Strong)
  {
    if (*a2) {
      swift_unknownObjectRetain();
    }
    id v7 = [*(id *)(v3 + OBJC_IVAR____TtC8Freeform19CRLiOSMediaReplacer_interactiveCanvasController) canvasView];
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_10117E810;
    sub_1005057FC((uint64_t *)&unk_10168F9D0);
    sub_1005057FC((uint64_t *)&unk_10168A410);
    String.init<A>(describing:)();
    NSString v9 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    *(void *)(inited + 56) = sub_10050BF48(0, (unint64_t *)&qword_101673918);
    uint64_t v10 = sub_1005E8BFC((unint64_t *)&qword_101677140, (unint64_t *)&qword_101673918);
    *(void *)(inited + 32) = v9;
    *(void *)(inited + 64) = v10;
    if (v7
      && (sub_10050BF48(0, (unint64_t *)&qword_1016725F0),
          swift_unknownObjectRetain(),
          id v11 = v7,
          char v12 = static NSObject.== infix(_:_:)(),
          swift_unknownObjectRelease(),
          v11,
          (v12 & 1) != 0))
    {
      swift_setDeallocating();
      sub_1005057FC(&qword_101672B50);
      swift_arrayDestroy();
      swift_unknownObjectRelease();
    }
    else
    {
      sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"popoverPresentationController(_:willRepositionPopoverTo:in:)", 60, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/App/CRLiOSMediaReplacer.swift", 87, 2, 355, (uint64_t)"expected equality between two values of type %{public}@", 55, 2u, inited);
      sub_1005598CC(inited, (uint64_t)"popoverPresentationController(_:willRepositionPopoverTo:in:)", 60, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/App/CRLiOSMediaReplacer.swift", 87, 2, 355);
      swift_unknownObjectRelease();

      swift_bridgeObjectRelease();
    }
    id v13 = sub_1009C63F4();
    double v14 = sub_1009CA104(v13);
    uint64_t v16 = v15;
    uint64_t v18 = v17;
    uint64_t v20 = v19;

    *a1 = v14;
    *((void *)a1 + 1) = v16;
    *((void *)a1 + 2) = v18;
    *((void *)a1 + 3) = v20;
  }
}

void sub_1009CB4A4(void *a1, void *a2, void *a3)
{
  uint64_t v6 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6, v8);
  uint64_t v10 = (char *)&v68 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for DispatchQoS();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11, v13);
  uint64_t v15 = (char *)&v68 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = a3;
  id v80 = a3;
  _Block_copy(a3);
  id v81 = a1;
  id v17 = [a1 registeredTypeIdentifiers];
  uint64_t v18 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v19 = (char *)v18;
  uint64_t v20 = *(void *)(v18 + 16);
  if (v20)
  {
    unint64_t v71 = a2;
    unint64_t v72 = v15;
    uint64_t v73 = v12;
    id v74 = v10;
    uint64_t v75 = v11;
    uint64_t v76 = v7;
    uint64_t v77 = v6;
    uint64_t v78 = v16;
    uint64_t v21 = v19;
    uint64_t v22 = self;
    swift_bridgeObjectRetain();
    id v79 = v21;
    uint64_t v23 = v21 + 40;
    while (1)
    {
      swift_bridgeObjectRetain();
      NSString v24 = String._bridgeToObjectiveC()();
      id v25 = [v22 supportedMovieAnimatedImageTypes];
      static Array._unconditionallyBridgeFromObjectiveC(_:)();

      Class isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      unsigned int v27 = [v24 crl_conformsToAnyUTI:isa];

      if (v27) {
        break;
      }
      v23 += 16;
      swift_bridgeObjectRelease();
      if (!--v20)
      {
        swift_bridgeObjectRelease();
        goto LABEL_6;
      }
    }
    swift_bridgeObjectRelease_n();
    uint64_t v34 = swift_allocObject();
    *(void *)(v34 + 16) = 0;
    id v35 = [self defaultManager];
    uint64_t v36 = swift_allocObject();
    *(void *)(v36 + 16) = _swiftEmptyArrayStorage;
    uint64_t v37 = dispatch_group_create();
    id v38 = objc_allocWithZone((Class)CRLTemporaryDirectory);
    NSString v39 = String._bridgeToObjectiveC()();
    aBlock = 0;
    id v40 = [v38 initWithSignature:v39 error:&aBlock];

    uint64_t v41 = aBlock;
    if (v40)
    {
      [v40 leakTemporaryDirectory];
      uint64_t v42 = *(void **)(v34 + 16);
      *(void *)(v34 + 16) = v40;
      id v43 = v40;
      uint64_t v69 = v34;
      uint64_t v44 = v35;
      id v45 = v43;

      dispatch_group_enter(v37);
      NSString v46 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      id v47 = (void *)swift_allocObject();
      v47[2] = v37;
      v47[3] = v45;
      v47[4] = v44;
      v47[5] = v36;
      id v87 = sub_1009CC048;
      unint64_t v88 = v47;
      aBlock = _NSConcreteStackBlock;
      uint64_t v84 = *(void *)"";
      uint64_t v85 = sub_1009C4078;
      uint64_t v86 = &unk_10151CE60;
      id v48 = _Block_copy(&aBlock);
      id v80 = v45;
      uint64_t v70 = v37;
      id v79 = v44;
      swift_retain();
      swift_release();
      id v49 = [v81 loadFileRepresentationForTypeIdentifier:v46 completionHandler:v48];
      _Block_release(v48);

      sub_10050BF48(0, (unint64_t *)&qword_1016725C0);
      id v50 = (void *)static OS_dispatch_queue.main.getter();
      uint64_t v51 = (void *)swift_allocObject();
      unint64_t v52 = v71;
      v51[2] = v71;
      v51[3] = v36;
      v51[4] = v69;
      v51[5] = sub_1009CBFA8;
      v51[6] = v78;
      id v87 = sub_1009CC0A4;
      unint64_t v88 = v51;
      aBlock = _NSConcreteStackBlock;
      uint64_t v84 = *(void *)"";
      uint64_t v85 = sub_100679958;
      uint64_t v86 = &unk_10151CEB0;
      unint64_t v53 = _Block_copy(&aBlock);
      swift_retain();
      id v54 = v52;
      swift_retain();
      swift_retain();
      id v55 = v72;
      static DispatchQoS.unspecified.getter();
      int v82 = _swiftEmptyArrayStorage;
      sub_1009CC0B4((unint64_t *)&qword_1016747E0, 255, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
      sub_1005057FC((uint64_t *)&unk_1016725D0);
      sub_100523288((unint64_t *)&qword_1016747F0, (uint64_t *)&unk_1016725D0);
      unsigned int v56 = v74;
      uint64_t v57 = v77;
      dispatch thunk of SetAlgebra.init<A>(_:)();
      uint64_t v58 = v70;
      OS_dispatch_group.notify(qos:flags:queue:execute:)();
      _Block_release(v53);

      (*(void (**)(char *, uint64_t))(v76 + 8))(v56, v57);
      (*(void (**)(char *, uint64_t))(v73 + 8))(v55, v75);
      swift_release();
      swift_release();
      swift_release();
    }
    else
    {
      uint64_t v59 = v41;
      uint64_t v60 = _convertNSErrorToError(_:)();

      swift_willThrow();
      swift_bridgeObjectRelease();
      if (qword_10166FAC8 != -1) {
        swift_once();
      }
      swift_beginAccess();
      uint64_t v61 = (void *)static OS_os_log.crlInsertMedia;
      sub_1005057FC((uint64_t *)&unk_101672B40);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_10117E810;
      int v82 = (double *)v60;
      id v63 = v61;
      swift_errorRetain();
      sub_1005057FC(&qword_101672BD0);
      uint64_t v64 = String.init<A>(describing:)();
      uint64_t v66 = v65;
      *(void *)(inited + 56) = &type metadata for String;
      *(void *)(inited + 64) = sub_100528BE4();
      *(void *)(inited + 32) = v64;
      *(void *)(inited + 40) = v66;
      uint64_t v67 = static os_log_type_t.error.getter();
      sub_100BAC898((uint64_t)v63, (uint64_t)&_mh_execute_header, v67, (uint64_t)"Error attempting to replace sticker: %@", 39, 2, inited);
      swift_setDeallocating();
      sub_1005057FC(&qword_101672B50);
      swift_arrayDestroy();

      [*(id *)(v34 + 16) removeDirectory];
      (*((void (**)(id, uint64_t))v80 + 2))(v80, 1);

      swift_errorRelease();
      swift_release();
      swift_release();
    }
    swift_release();
  }
  else
  {
LABEL_6:
    swift_bridgeObjectRelease();
    (*((void (**)(id, uint64_t))v80 + 2))(v80, 1);
    if (qword_10166FAC8 != -1) {
      swift_once();
    }
    swift_beginAccess();
    uint64_t v28 = (void *)static OS_os_log.crlInsertMedia;
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t v29 = swift_initStackObject();
    *(_OWORD *)(v29 + 16) = xmmword_10117E810;
    id v30 = v28;
    id v31 = [v81 registeredTypeIdentifiers];
    uint64_t v32 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    *(void *)(v29 + 56) = sub_1005057FC((uint64_t *)&unk_1016773F0);
    *(void *)(v29 + 64) = sub_100523288((unint64_t *)&unk_10168A400, (uint64_t *)&unk_1016773F0);
    *(void *)(v29 + 32) = v32;
    uint64_t v33 = static os_log_type_t.default.getter();
    sub_100BAC898((uint64_t)v30, (uint64_t)&_mh_execute_header, v33, (uint64_t)"Dismissing sticker picker. Provider does not contain any valid type identifiers (%p).", 85, 2, v29);
    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();
    swift_release();
  }
}

uint64_t sub_1009CBF70()
{
  _Block_release(*(const void **)(v0 + 16));

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1009CBFA8(char a1)
{
  return (*(uint64_t (**)(void, void))(*(void *)(v1 + 16) + 16))(*(void *)(v1 + 16), a1 & 1);
}

uint64_t sub_1009CBFC0()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1009CBFF8()
{
  swift_release();

  return _swift_deallocObject(v0, 48, 7);
}

void sub_1009CC048(uint64_t a1, uint64_t a2)
{
  sub_1009CA36C(a1, a2, *(NSObject **)(v2 + 16), *(void **)(v2 + 24), *(void **)(v2 + 32), *(void *)(v2 + 40));
}

uint64_t sub_1009CC054()
{
  swift_release();
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_1009CC0A4()
{
  return sub_1009CAAC4(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(uint64_t (**)(uint64_t))(v0 + 40));
}

uint64_t sub_1009CC0B4(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

id sub_1009CC0FC()
{
  return sub_1009CAB78(v0);
}

uint64_t sub_1009CC104()
{
  return sub_1009CC214((void (*)(void))&_swift_bridgeObjectRelease);
}

void sub_1009CC11C()
{
  sub_1009C85A4(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1009CC124()
{
  return sub_1009CC214((void (*)(void))&_swift_release);
}

void sub_1009CC13C(uint64_t a1)
{
  sub_1009C5850(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), (void (*)(uint64_t))sub_1009C547C);
}

uint64_t sub_1009CC16C()
{
  return sub_1009CC214((void (*)(void))&_swift_release);
}

void sub_1009CC184()
{
}

uint64_t sub_1009CC18C()
{
  return sub_1009CC214((void (*)(void))&_swift_release);
}

void sub_1009CC1A4()
{
}

void sub_1009CC1AC()
{
}

uint64_t sub_1009CC1B4()
{
  return _swift_deallocObject(v0, 32, 7);
}

void sub_1009CC1F4()
{
  sub_1009C5B2C(*(void *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_1009CC1FC()
{
  return sub_1009CC214((void (*)(void))&_swift_release);
}

uint64_t sub_1009CC214(void (*a1)(void))
{
  a1(*(void *)(v1 + 16));

  return _swift_deallocObject(v1, 32, 7);
}

void sub_1009CC25C(uint64_t a1)
{
  sub_1009C5850(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), (void (*)(uint64_t))sub_1009C58C0);
}

void sub_1009CC28C(uint64_t a1)
{
}

uint64_t sub_1009CC294()
{
  return _swift_deallocObject(v0, 24, 7);
}

void sub_1009CC2CC()
{
  UIAccessibilityPostNotification(UIAccessibilityLayoutChangedNotification, *(id *)(v0 + 16));
}

void sub_1009CC2E0()
{
}

uint64_t sub_1009CC2E8()
{
  swift_unknownObjectRelease();

  swift_release();

  return _swift_deallocObject(v0, 48, 7);
}

id sub_1009CC3B4()
{
  id result = [self systemGroupedBackgroundColor];
  qword_10171B1A0 = (uint64_t)result;
  return result;
}

void sub_1009CC3F0()
{
  qword_10171B1A8 = 0x4034000000000000;
}

void sub_1009CC400()
{
  qword_10171B1B0 = 0x4077700000000000;
}

void sub_1009CC414()
{
  qword_10171B1B8 = 0x4074000000000000;
}

void sub_1009CC424()
{
  qword_10171B1C0 = 0x404E000000000000;
}

uint64_t sub_1009CC434@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v56 = a1;
  uint64_t v57 = type metadata accessor for ControlSize();
  uint64_t v55 = *(void *)(v57 - 8);
  __chkstk_darwin(v57, v3);
  id v54 = (char *)&v48 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for BorderedProminentButtonStyle();
  uint64_t v50 = *(void *)(v5 - 8);
  uint64_t v51 = v5;
  __chkstk_darwin(v5, v6);
  uint64_t v8 = (char *)&v48 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v48 = sub_1005057FC(&qword_10168A580);
  uint64_t v9 = *(void *)(v48 - 8);
  __chkstk_darwin(v48, v10);
  uint64_t v12 = (char *)&v48 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = sub_1005057FC(&qword_10168A588);
  __chkstk_darwin(v49, v13);
  uint64_t v15 = (char *)&v48 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_1005057FC(&qword_10168A590);
  uint64_t v52 = *(void *)(v16 - 8);
  uint64_t v53 = v16;
  __chkstk_darwin(v16, v17);
  uint64_t v19 = (char *)&v48 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1009CED60(v2, v58);
  uint64_t v20 = swift_allocObject();
  sub_1009CEDE8((uint64_t)v58, v20 + 16);
  sub_1005057FC(&qword_10168A598);
  sub_1009CEE34();
  Button.init(action:label:)();
  unsigned __int8 v21 = static Edge.Set.top.getter();
  unsigned __int8 v22 = static Edge.Set.leading.getter();
  unsigned __int8 v23 = static Edge.Set.bottom.getter();
  unsigned __int8 v24 = static Edge.Set.trailing.getter();
  char v25 = Edge.Set.init(rawValue:)();
  Edge.Set.init(rawValue:)();
  if (Edge.Set.init(rawValue:)() != v21) {
    char v25 = Edge.Set.init(rawValue:)();
  }
  Edge.Set.init(rawValue:)();
  if (Edge.Set.init(rawValue:)() != v22) {
    char v25 = Edge.Set.init(rawValue:)();
  }
  Edge.Set.init(rawValue:)();
  if (Edge.Set.init(rawValue:)() != v23) {
    char v25 = Edge.Set.init(rawValue:)();
  }
  Edge.Set.init(rawValue:)();
  if (Edge.Set.init(rawValue:)() != v24) {
    char v25 = Edge.Set.init(rawValue:)();
  }
  if (qword_10166F5F8 != -1) {
    swift_once();
  }
  EdgeInsets.init(_all:)();
  uint64_t v27 = v26;
  uint64_t v29 = v28;
  uint64_t v31 = v30;
  uint64_t v33 = v32;
  uint64_t v34 = v48;
  (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v15, v12, v48);
  id v35 = &v15[*(int *)(v49 + 36)];
  *id v35 = v25;
  *((void *)v35 + 1) = v27;
  *((void *)v35 + 2) = v29;
  *((void *)v35 + 3) = v31;
  *((void *)v35 + 4) = v33;
  v35[40] = 0;
  (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v34);
  BorderedProminentButtonStyle.init()();
  sub_1009CEEA8();
  sub_1009CEF48(&qword_10168A5B8, (void (*)(uint64_t))&type metadata accessor for BorderedProminentButtonStyle);
  uint64_t v36 = v51;
  View.buttonStyle<A>(_:)();
  (*(void (**)(char *, uint64_t))(v50 + 8))(v8, v36);
  sub_100522F00((uint64_t)v15, &qword_10168A588);
  id v38 = v54;
  uint64_t v37 = v55;
  uint64_t v39 = v57;
  (*(void (**)(char *, void, uint64_t))(v55 + 104))(v54, enum case for ControlSize.large(_:), v57);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v41 = sub_1005057FC(&qword_10168A560);
  uint64_t v42 = v56;
  id v43 = (uint64_t *)(v56 + *(int *)(v41 + 36));
  uint64_t v44 = sub_1005057FC(&qword_10168A5C0);
  (*(void (**)(char *, char *, uint64_t))(v37 + 16))((char *)v43 + *(int *)(v44 + 28), v38, v39);
  *id v43 = KeyPath;
  uint64_t v46 = v52;
  uint64_t v45 = v53;
  (*(void (**)(uint64_t, char *, uint64_t))(v52 + 16))(v42, v19, v53);
  (*(void (**)(char *, uint64_t))(v37 + 8))(v38, v39);
  return (*(uint64_t (**)(char *, uint64_t))(v46 + 8))(v19, v45);
}

uint64_t sub_1009CCA24()
{
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    sub_100E5D3EC();
    sub_100E68A9C(0);
    return swift_unknownObjectRelease();
  }
  return result;
}

__n128 sub_1009CCA78@<Q0>(uint64_t a1@<X8>)
{
  if (qword_10166F618 != -1) {
    swift_once();
  }
  v20[0] = xmmword_10171B1C8;
  sub_10052E310();
  swift_bridgeObjectRetain();
  uint64_t v2 = Text.init<A>(_:)();
  uint64_t v4 = v3;
  char v6 = v5 & 1;
  LODWORD(v20[0]) = static HierarchicalShapeStyle.primary.getter();
  uint64_t v7 = Text.foregroundStyle<A>(_:)();
  uint64_t v9 = v8;
  uint64_t v11 = v10;
  char v13 = v12 & 1;
  sub_1006A7D28(v2, v4, v6);
  swift_bridgeObjectRelease();
  uint64_t v14 = static Alignment.center.getter();
  sub_1007B59E0(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v20, 0.0, 1, 0.0, 1, v14, v15, v7, v9, v13, v11);
  sub_1006A7D28(v7, v9, v13);
  swift_bridgeObjectRelease();
  long long v16 = v20[7];
  *(_OWORD *)(a1 + 96) = v20[6];
  *(_OWORD *)(a1 + 112) = v16;
  *(_OWORD *)(a1 + 128) = v20[8];
  long long v17 = v20[3];
  *(_OWORD *)(a1 + 32) = v20[2];
  *(_OWORD *)(a1 + 48) = v17;
  long long v18 = v20[5];
  *(_OWORD *)(a1 + 64) = v20[4];
  *(_OWORD *)(a1 + 80) = v18;
  __n128 result = (__n128)v20[1];
  *(_OWORD *)a1 = v20[0];
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t sub_1009CCC1C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1005057FC(&qword_10168A538);
  __chkstk_darwin(v4 - 8, v5);
  uint64_t v7 = (char *)v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1005057FC(&qword_10168A540);
  __chkstk_darwin(v8, v9);
  uint64_t v11 = (char *)v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1005057FC(&qword_10168A548);
  __chkstk_darwin(v12, v13);
  uint64_t v15 = (char *)v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v7 = static HorizontalAlignment.center.getter();
  *((void *)v7 + 1) = 0;
  v7[16] = 0;
  uint64_t v16 = sub_1005057FC(&qword_10168A550);
  sub_1009CCFA8(v2, (uint64_t)&v7[*(int *)(v16 + 44)]);
  if (qword_10166F600 != -1) {
    swift_once();
  }
  double v17 = *(double *)&qword_10171B1B0;
  if (qword_10166F608 != -1) {
    swift_once();
  }
  static Alignment.center.getter();
  if (v17 < -INFINITY)
  {
    static os_log_type_t.fault.getter();
    long long v18 = (void *)static Log.runtimeIssuesLog.getter();
    os_log(_:dso:log:_:_:)();
  }
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
  sub_100522E9C((uint64_t)v7, (uint64_t)v11, &qword_10168A538);
  uint64_t v19 = &v11[*(int *)(v8 + 36)];
  long long v20 = v28[5];
  *((_OWORD *)v19 + 4) = v28[4];
  *((_OWORD *)v19 + 5) = v20;
  *((_OWORD *)v19 + 6) = v28[6];
  long long v21 = v28[1];
  *(_OWORD *)uint64_t v19 = v28[0];
  *((_OWORD *)v19 + 1) = v21;
  long long v22 = v28[3];
  *((_OWORD *)v19 + 2) = v28[2];
  *((_OWORD *)v19 + 3) = v22;
  sub_100522F00((uint64_t)v7, &qword_10168A538);
  sub_100522E9C((uint64_t)v11, (uint64_t)v15, &qword_10168A540);
  *(_WORD *)&v15[*(int *)(v12 + 36)] = 1;
  sub_100522F00((uint64_t)v11, &qword_10168A540);
  if (qword_10166F5F0 != -1) {
    swift_once();
  }
  id v23 = (id)qword_10171B1A0;
  uint64_t v24 = Color.init(_:)();
  char v25 = static Edge.Set.all.getter();
  sub_100522E9C((uint64_t)v15, a1, &qword_10168A548);
  uint64_t v26 = a1 + *(int *)(sub_1005057FC(&qword_10168A558) + 36);
  *(void *)uint64_t v26 = v24;
  *(unsigned char *)(v26 + 8) = v25;
  return sub_100522F00((uint64_t)v15, &qword_10168A548);
}

uint64_t sub_1009CCFA8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v34 = a2;
  uint64_t v3 = sub_1005057FC(&qword_10168A560);
  __chkstk_darwin(v3 - 8, v4);
  uint64_t v6 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1005057FC(&qword_10168A568);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7, v9);
  uint64_t v11 = (char *)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1005057FC(&qword_10168A570);
  __chkstk_darwin(v12 - 8, v13);
  uint64_t v15 = (char *)&v34 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16, v17);
  uint64_t v19 = (char *)&v34 - v18;
  swift_unknownObjectWeakLoadStrong();
  long long v20 = *(void **)(a1 + 24);
  uint64_t v37 = *(void *)(a1 + 8);
  swift_unknownObjectWeakInit();
  id v21 = v20;
  swift_unknownObjectRelease();
  type metadata accessor for CRLScenesPopoverState();
  sub_1009CEF48(&qword_10169FB80, (void (*)(uint64_t))type metadata accessor for CRLScenesPopoverState);
  uint64_t v38 = ObservedObject.init(wrappedValue:)();
  uint64_t v39 = v22;
  char v35 = 0;
  State.init(wrappedValue:)();
  char v40 = v42[0];
  uint64_t v41 = v43;
  sub_1009CEA00((uint64_t)v36, (uint64_t)v42);
  id v23 = *(void **)(a1 + 24);
  swift_getKeyPath();
  swift_getKeyPath();
  id v24 = v23;
  static Published.subscript.getter();

  swift_release();
  swift_release();
  if (v36[0])
  {
    uint64_t v25 = 1;
  }
  else
  {
    sub_1009CC434((uint64_t)v6);
    uint64_t v26 = *(void **)(a1 + 24);
    swift_getKeyPath();
    swift_getKeyPath();
    id v27 = v26;
    static Published.subscript.getter();

    swift_release();
    swift_release();
    LOBYTE(v27) = v36[0];
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v29 = swift_allocObject();
    *(unsigned char *)(v29 + 16) = (_BYTE)v27;
    sub_100522E9C((uint64_t)v6, (uint64_t)v11, &qword_10168A560);
    uint64_t v30 = (uint64_t *)&v11[*(int *)(v7 + 36)];
    *uint64_t v30 = KeyPath;
    v30[1] = (uint64_t)sub_10080FD64;
    v30[2] = v29;
    sub_100522F00((uint64_t)v6, &qword_10168A560);
    sub_1009CEC48((uint64_t)v11, (uint64_t)v19);
    uint64_t v25 = 0;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v19, v25, 1, v7);
  sub_1009CECB0((uint64_t)v42, (uint64_t)v36);
  sub_100522E9C((uint64_t)v19, (uint64_t)v15, &qword_10168A570);
  uint64_t v31 = v34;
  sub_1009CECB0((uint64_t)v36, v34);
  uint64_t v32 = sub_1005057FC(&qword_10168A578);
  sub_100522E9C((uint64_t)v15, v31 + *(int *)(v32 + 48), &qword_10168A570);
  sub_100522F00((uint64_t)v19, &qword_10168A570);
  sub_1009CED0C((uint64_t)v42);
  sub_100522F00((uint64_t)v15, &qword_10168A570);
  return sub_1009CED0C((uint64_t)v36);
}

uint64_t sub_1009CD3B4()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_1009CD428(uint64_t a1)
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  v1;
  static Published.subscript.setter();
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  unsigned __int8 v3 = sub_1005BED3C(v5, a1);
  swift_bridgeObjectRelease();
  if ((v3 & 1) == 0) {
    ObservableObjectPublisher.send()();
  }
  return swift_bridgeObjectRelease();
}

double sub_1009CD564()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_1009CD5D8()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_1009CD64C()
{
  return sub_1006FF5A0();
}

uint64_t sub_1009CD660()
{
  return sub_1006FF5A0();
}

uint64_t sub_1009CD674()
{
  return sub_1006FF5A0();
}

id sub_1009CD688()
{
  uint64_t v37 = sub_1005057FC(&qword_10169FCE0);
  uint64_t v32 = *(void *)(v37 - 8);
  __chkstk_darwin(v37, v1);
  unsigned __int8 v3 = (char *)&v31 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1005057FC(&qword_10168A5C8);
  uint64_t v35 = *(void *)(v4 - 8);
  uint64_t v36 = v4;
  __chkstk_darwin(v4, v5);
  uint64_t v34 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = sub_1005057FC(&qword_10168A5D0);
  uint64_t v7 = *(void *)(v33 - 8);
  __chkstk_darwin(v33, v8);
  uint64_t v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = sub_1005057FC(&qword_10168A5D8);
  uint64_t v11 = *(void *)(v31 - 8);
  __chkstk_darwin(v31, v12);
  uint64_t v14 = (char *)&v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = OBJC_IVAR____TtC8Freeform21CRLScenesPopoverState_objectDidChange;
  type metadata accessor for ObservableObjectPublisher();
  swift_allocObject();
  uint64_t v16 = v0;
  *(void *)&v0[v15] = ObservableObjectPublisher.init()();
  if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0 && _CocoaArrayWrapper.endIndex.getter()) {
    sub_10050BF28((unint64_t)_swiftEmptyArrayStorage);
  }
  else {
    uint64_t v17 = &_swiftEmptySetSingleton;
  }
  uint64_t v19 = v31;
  uint64_t v18 = v32;
  *(void *)&v16[OBJC_IVAR____TtC8Freeform21CRLScenesPopoverState_sceneInfosToDelete] = v17;
  long long v20 = &v16[OBJC_IVAR____TtC8Freeform21CRLScenesPopoverState__sceneInfos];
  uint64_t v39 = (uint64_t)_swiftEmptyArrayStorage;
  sub_1005057FC(&qword_10168A520);
  Published.init(initialValue:)();
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v20, v14, v19);
  id v21 = &v16[OBJC_IVAR____TtC8Freeform21CRLScenesPopoverState__sceneThumbnailImageSizeAspectRatio];
  uint64_t v39 = 0x3FF0000000000000;
  Published.init(initialValue:)();
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v21, v10, v33);
  uint64_t v22 = &v16[OBJC_IVAR____TtC8Freeform21CRLScenesPopoverState__activeScene];
  uint64_t v39 = 0;
  sub_1005057FC(&qword_10169FB90);
  id v23 = v34;
  Published.init(initialValue:)();
  (*(void (**)(char *, char *, uint64_t))(v35 + 32))(v22, v23, v36);
  id v24 = &v16[OBJC_IVAR____TtC8Freeform21CRLScenesPopoverState__isReadOnly];
  LOBYTE(v39) = 0;
  Published.init(initialValue:)();
  uint64_t v25 = *(void (**)(char *, char *, uint64_t))(v18 + 32);
  uint64_t v26 = v37;
  v25(v24, v3, v37);
  id v27 = &v16[OBJC_IVAR____TtC8Freeform21CRLScenesPopoverState__isCurrentlyEditing];
  LOBYTE(v39) = 0;
  Published.init(initialValue:)();
  v25(v27, v3, v26);
  uint64_t v28 = &v16[OBJC_IVAR____TtC8Freeform21CRLScenesPopoverState__toggleToUpdateSceneThumbnails];
  LOBYTE(v39) = 1;
  Published.init(initialValue:)();
  v25(v28, v3, v26);

  uint64_t v29 = (objc_class *)type metadata accessor for CRLScenesPopoverState();
  v38.receiver = v16;
  v38.super_class = v29;
  return [super init];
}

id sub_1009CDB14()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLScenesPopoverState();
  return [super dealloc];
}

uint64_t sub_1009CDD14()
{
  return type metadata accessor for CRLScenesPopoverState();
}

uint64_t type metadata accessor for CRLScenesPopoverState()
{
  uint64_t result = qword_10168A508;
  if (!qword_10168A508) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1009CDD68()
{
  sub_10070A988(319, &qword_10168A518, &qword_10168A520);
  if (v0 <= 0x3F)
  {
    sub_100608DB0(319, &qword_10168A528);
    if (v1 <= 0x3F)
    {
      sub_10070A988(319, &qword_10168A530, &qword_10169FB90);
      if (v2 <= 0x3F)
      {
        sub_100608DB0(319, (unint64_t *)&qword_10167C230);
        if (v3 <= 0x3F) {
          swift_updateClassMetadata2();
        }
      }
    }
  }
}

void destroy for CRLScenesPopoverUI(uint64_t a1)
{
  swift_unknownObjectWeakDestroy();
  unint64_t v2 = *(void **)(a1 + 24);
}

uint64_t initializeWithCopy for CRLScenesPopoverUI(uint64_t a1, void *a2)
{
  uint64_t v4 = (void *)swift_unknownObjectWeakCopyInit();
  uint64_t v5 = a2[2];
  v4[1] = a2[1];
  v4[2] = v5;
  uint64_t v6 = (void *)a2[3];
  v4[3] = v6;
  id v7 = v6;
  return a1;
}

uint64_t assignWithCopy for CRLScenesPopoverUI(uint64_t a1, void *a2)
{
  uint64_t v4 = (void *)swift_unknownObjectWeakCopyAssign();
  v4[1] = a2[1];
  v4[2] = a2[2];
  uint64_t v5 = (void *)a2[3];
  uint64_t v6 = (void *)v4[3];
  v4[3] = v5;
  id v7 = v5;

  return a1;
}

__n128 initializeWithTake for CRLScenesPopoverUI(uint64_t a1, __n128 *a2)
{
  unint64_t v3 = (__n128 *)swift_unknownObjectWeakTakeInit();
  v3->n128_u64[1] = a2->n128_u64[1];
  __n128 result = a2[1];
  v3[1] = result;
  return result;
}

uint64_t assignWithTake for CRLScenesPopoverUI(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = swift_unknownObjectWeakTakeAssign();
  *(_OWORD *)(v4 + 8) = *(_OWORD *)(a2 + 8);
  uint64_t v5 = *(void **)(v4 + 24);
  *(void *)(v4 + 24) = *(void *)(a2 + 24);

  return a1;
}

uint64_t getEnumTagSinglePayload for CRLScenesPopoverUI(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 32)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  if ((*(void *)(a1 + 8) & 0xF000000000000007) != 0) {
    int v2 = *(_DWORD *)a1 & 0x7FFFFFFF;
  }
  else {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CRLScenesPopoverUI(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      *(void *)(result + 8) = 1;
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLScenesPopoverUI()
{
  return &type metadata for CRLScenesPopoverUI;
}

uint64_t sub_1009CE0E8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1009CE104@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for CRLScenesPopoverState();
  uint64_t result = ObservableObject<>.objectWillChange.getter();
  *a1 = result;
  return result;
}

void sub_1009CE144()
{
  id v0 = [self mainBundle];
  NSString v1 = String._bridgeToObjectiveC()();
  NSString v2 = String._bridgeToObjectiveC()();
  id v3 = [v0 localizedStringForKey:v1 value:v2 table:0];

  uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v6 = v5;

  qword_10171B1C8 = v4;
  unk_10171B1D0 = v6;
}

void sub_1009CE220()
{
  id v0 = [self mainBundle];
  NSString v1 = String._bridgeToObjectiveC()();
  NSString v2 = String._bridgeToObjectiveC()();
  id v3 = [v0 localizedStringForKey:v1 value:v2 table:0];

  uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v6 = v5;

  qword_10171B1D8 = v4;
  unk_10171B1E0 = v6;
}

void sub_1009CE2FC()
{
  id v0 = [self mainBundle];
  NSString v1 = String._bridgeToObjectiveC()();
  NSString v2 = String._bridgeToObjectiveC()();
  id v3 = [v0 localizedStringForKey:v1 value:v2 table:0];

  uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v6 = v5;

  qword_10171B1E8 = v4;
  unk_10171B1F0 = v6;
}

void sub_1009CE3D0()
{
  id v0 = [self mainBundle];
  NSString v1 = String._bridgeToObjectiveC()();
  NSString v2 = String._bridgeToObjectiveC()();
  id v3 = [v0 localizedStringForKey:v1 value:v2 table:0];

  uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v6 = v5;

  qword_10171B1F8 = v4;
  unk_10171B200 = v6;
}

void sub_1009CE4A4()
{
  id v0 = [self mainBundle];
  NSString v1 = String._bridgeToObjectiveC()();
  NSString v2 = String._bridgeToObjectiveC()();
  id v3 = [v0 localizedStringForKey:v1 value:v2 table:0];

  uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v6 = v5;

  qword_10171B208 = v4;
  unk_10171B210 = v6;
}

void sub_1009CE588()
{
  id v0 = [self mainBundle];
  NSString v1 = String._bridgeToObjectiveC()();
  NSString v2 = String._bridgeToObjectiveC()();
  id v3 = [v0 localizedStringForKey:v1 value:v2 table:0];

  uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v6 = v5;

  qword_10171B218 = v4;
  unk_10171B220 = v6;
}

void sub_1009CE674()
{
  id v0 = [self mainBundle];
  NSString v1 = String._bridgeToObjectiveC()();
  NSString v2 = String._bridgeToObjectiveC()();
  id v3 = [v0 localizedStringForKey:v1 value:v2 table:0];

  uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v6 = v5;

  qword_10171B228 = v4;
  unk_10171B230 = v6;
}

void sub_1009CE758()
{
  id v0 = [self mainBundle];
  NSString v1 = String._bridgeToObjectiveC()();
  NSString v2 = String._bridgeToObjectiveC()();
  id v3 = [v0 localizedStringForKey:v1 value:v2 table:0];

  uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v6 = v5;

  qword_10171B238 = v4;
  unk_10171B240 = v6;
}

void sub_1009CE83C()
{
  id v0 = [self mainBundle];
  NSString v1 = String._bridgeToObjectiveC()();
  NSString v2 = String._bridgeToObjectiveC()();
  id v3 = [v0 localizedStringForKey:v1 value:v2 table:0];

  uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v6 = v5;

  qword_10171B248 = v4;
  unk_10171B250 = v6;
}

void sub_1009CE920()
{
  id v0 = [self mainBundle];
  NSString v1 = String._bridgeToObjectiveC()();
  NSString v2 = String._bridgeToObjectiveC()();
  id v3 = [v0 localizedStringForKey:v1 value:v2 table:0];

  uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v6 = v5;

  qword_10171B258 = v4;
  unk_10171B260 = v6;
}

uint64_t sub_1009CEA00(uint64_t a1, uint64_t a2)
{
  return a2;
}

void sub_1009CEA5C()
{
  id v0 = [self mainBundle];
  NSString v1 = String._bridgeToObjectiveC()();
  NSString v2 = String._bridgeToObjectiveC()();
  id v3 = [v0 localizedStringForKey:v1 value:v2 table:0];

  uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v6 = v5;

  qword_10171B268 = v4;
  *(void *)algn_10171B270 = v6;
}

uint64_t sub_1009CEB38@<X0>(unsigned char *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_1009CEBBC(uint64_t a1, void **a2)
{
  NSString v2 = *a2;
  swift_getKeyPath();
  swift_getKeyPath();
  id v3 = v2;
  return static Published.subscript.setter();
}

uint64_t sub_1009CEC38()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1009CEC48(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1005057FC(&qword_10168A568);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1009CECB0(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1009CED0C(uint64_t a1)
{
  return a1;
}

void *sub_1009CED60(void *a1, void *a2)
{
  swift_unknownObjectWeakCopyInit();
  uint64_t v4 = a1[2];
  a2[1] = a1[1];
  a2[2] = v4;
  uint64_t v5 = (void *)a1[3];
  a2[3] = v5;
  id v6 = v5;
  return a2;
}

uint64_t sub_1009CEDA8()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_1009CEDE8(uint64_t a1, uint64_t a2)
{
  *(void *)(a2 + 8) = *(void *)(a1 + 8);
  *(_OWORD *)(a2 + 16) = *(_OWORD *)(a1 + 16);
  return a2;
}

uint64_t sub_1009CEE2C()
{
  return sub_1009CCA24();
}

unint64_t sub_1009CEE34()
{
  unint64_t result = qword_10168A5A0;
  if (!qword_10168A5A0)
  {
    sub_100522D34(&qword_10168A598);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168A5A0);
  }
  return result;
}

unint64_t sub_1009CEEA8()
{
  unint64_t result = qword_10168A5A8;
  if (!qword_10168A5A8)
  {
    sub_100522D34(&qword_10168A588);
    sub_100523288(&qword_10168A5B0, &qword_10168A580);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168A5A8);
  }
  return result;
}

uint64_t sub_1009CEF48(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1009CEFBC()
{
  unint64_t result = qword_10168A5E0;
  if (!qword_10168A5E0)
  {
    sub_100522D34(&qword_10168A558);
    sub_1009CF05C();
    sub_100523288(&qword_10168A600, &qword_10168A608);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168A5E0);
  }
  return result;
}

unint64_t sub_1009CF05C()
{
  unint64_t result = qword_10168A5E8;
  if (!qword_10168A5E8)
  {
    sub_100522D34(&qword_10168A548);
    sub_1009CF0D8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168A5E8);
  }
  return result;
}

unint64_t sub_1009CF0D8()
{
  unint64_t result = qword_10168A5F0;
  if (!qword_10168A5F0)
  {
    sub_100522D34(&qword_10168A540);
    sub_100523288(&qword_10168A5F8, &qword_10168A538);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168A5F0);
  }
  return result;
}

uint64_t sub_1009CF178()
{
  NSString v1 = *(void **)(v0 + 40);
  *(void *)(v0 + 40) = 0;
  sub_100522AD8(v1);
  swift_bridgeObjectRelease();
  swift_unknownObjectUnownedDestroy();

  sub_100522AD8(*(id *)(v0 + 40));
  swift_release();
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t _s12DataArchiverCMa()
{
  return self;
}

int64x2_t sub_1009CF208()
{
  int64x2_t result = vdupq_n_s64(0x407F400000000000uLL);
  xmmword_10171B280 = (__int128)result;
  return result;
}

uint64_t sub_1009CF220()
{
  if (v0[6])
  {
    uint64_t v1 = v0[6];
  }
  else
  {
    uint64_t v1 = sub_1009CF2A8((uint64_t)v0, *v0);
    v0[6] = v1;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v1;
}

uint64_t sub_1009CF2A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1005057FC(&qword_101672BB0);
  __chkstk_darwin(v4 - 8, v5);
  id v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10166ED90 != -1) {
    swift_once();
  }
  uint64_t v8 = (void *)qword_10171A168;
  uint64_t Strong = (char *)swift_unknownObjectUnownedLoadStrong();
  id v10 = *(id *)&Strong[OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard];

  id v11 = [objc_allocWithZone((Class)CRLCanvasImager) initWithBoard:v10];
  uint64_t v12 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v7, 1, 1, v12);
  uint64_t v13 = (void *)swift_allocObject();
  void v13[2] = 0;
  v13[3] = 0;
  v13[4] = v11;
  v13[5] = a1;
  v13[6] = v8;
  v13[7] = a2;
  swift_retain();
  id v14 = v8;
  return sub_1006D92D8((uint64_t)v7, (uint64_t)&unk_10168A778, (uint64_t)v13);
}

uint64_t sub_1009CF43C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[5] = a5;
  v6[6] = a6;
  v6[3] = a1;
  v6[4] = a4;
  return _swift_task_switch(sub_1009CF460, 0, 0);
}

uint64_t sub_1009CF460()
{
  uint64_t v1 = swift_bridgeObjectRetain();
  NSString v2 = sub_1006BA46C(v1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  if (((unint64_t)v2 & 0x8000000000000000) != 0 || ((unint64_t)v2 & 0x4000000000000000) != 0)
  {
    sub_1005057FC(&qword_101673060);
    _bridgeCocoaArray<A>(_:)();
    swift_release();
  }
  else
  {
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
  }
  uint64_t v3 = v0[6];
  uint64_t v4 = (void *)v0[4];
  swift_release();
  sub_1005057FC(&qword_101673060);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v4 setInfos:isa];

  [v4 setBackgroundColor:v3];
  if (qword_10166F670 != -1) {
    swift_once();
  }
  uint64_t v6 = (void *)v0[4];
  [v6 setScaledImageSize:xmmword_10171B280];
  uint64_t v7 = swift_task_alloc();
  v0[7] = v7;
  *(void *)(v7 + 16) = v6;
  *(void *)(v7 + 24) = 0;
  uint64_t v8 = (void *)swift_task_alloc();
  v0[8] = v8;
  uint64_t v9 = sub_1005057FC(&qword_101673D88);
  *uint64_t v8 = v0;
  v8[1] = sub_1009CF670;
  return withCheckedContinuation<A>(isolation:function:_:)(v0 + 2, 0, 0, 0xD000000000000019, 0x800000010123B760, sub_10056B314, v7, v9);
}

uint64_t sub_1009CF670()
{
  swift_task_dealloc();
  swift_task_dealloc();
  return _swift_task_switch(sub_1009CF788, 0, 0);
}

uint64_t sub_1009CF788()
{
  uint64_t v1 = *(void *)(v0 + 16);
  if (v1)
  {
    **(void **)(v0 + 24) = v1;
  }
  else
  {
    sub_1009CF94C();
    swift_allocError();
    *uint64_t v3 = 2;
    swift_willThrow();
  }
  NSString v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_1009CF838()
{
  swift_unknownObjectRelease();

  swift_release();

  return _swift_deallocObject(v0, 64, 7);
}

uint64_t sub_1009CF888(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 48);
  uint64_t v5 = swift_task_alloc();
  long long v6 = *(_OWORD *)(v1 + 32);
  *(void *)(v2 + 16) = v5;
  *(void *)uint64_t v5 = v2;
  *(void *)(v5 + 8) = sub_100528488;
  *(void *)(v5 + 48) = v4;
  *(_OWORD *)(v5 + 32) = v6;
  *(void *)(v5 + 24) = a1;
  return _swift_task_switch(sub_1009CF460, 0, 0);
}

unint64_t sub_1009CF94C()
{
  unint64_t result = qword_10168A780;
  if (!qword_10168A780)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168A780);
  }
  return result;
}

unsigned char *_s12DataArchiverC24StencilDataArchiverErrorOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1009CFA6CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *_s12DataArchiverC24StencilDataArchiverErrorOMa()
{
  return &_s12DataArchiverC24StencilDataArchiverErrorON;
}

unint64_t sub_1009CFAA8()
{
  unint64_t result = qword_10168A788;
  if (!qword_10168A788)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168A788);
  }
  return result;
}

id sub_1009CFB48(uint64_t a1, char a2)
{
  uint64_t v5 = objc_allocWithZone(v2);
  unsigned int v6 = &v5[OBJC_IVAR____TtC8Freeform19CRLCommandSetLocked_id];
  uint64_t v7 = type metadata accessor for UUID();
  uint64_t v8 = *(void *)(v7 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v6, a1, v7);
  v5[OBJC_IVAR____TtC8Freeform19CRLCommandSetLocked_locked] = a2;
  v11.receiver = v5;
  v11.super_class = v2;
  [super init];
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(a1, v7);
  return v9;
}

void sub_1009CFEC4(void *a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t v5 = v3;
  Class isa = UUID._bridgeToObjectiveC()().super.isa;
  id v9 = [a1 getBoardItemForUUID:isa];

  if (v9)
  {
    id v10 = v9;
    sub_10103405C((uint64_t)v10, (uint64_t)&off_101518040);

    if (v4)
    {
    }
    else
    {
      (*(void (**)(void))((swift_isaMask & *v10) + 0x100))(*(unsigned __int8 *)(v5
                                                                                             + OBJC_IVAR____TtC8Freeform19CRLCommandSetLocked_locked));
      objc_super v11 = v10;
      sub_101023724((uint64_t)v11, (uint64_t)&off_101518040, a3);
    }
  }
  else
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"commit(with:transaction:undoable:)", 34, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandSetLocked.swift", 91, 2, 27, (uint64_t)"Unable to retrieve board item", 29, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_100586FD4((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Unable to retrieve board item");
    sub_1005871AC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"commit(with:transaction:undoable:)", 34, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandSetLocked.swift", 91, 2, 27);
    SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v12, v13);
    _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
}

uint64_t sub_1009D0100()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC8Freeform19CRLCommandSetLocked_id;
  uint64_t v2 = type metadata accessor for UUID();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);

  return v3(v1, v2);
}

id sub_1009D016C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLCommandSetLocked();
  return [super dealloc];
}

uint64_t sub_1009D0210()
{
  return type metadata accessor for CRLCommandSetLocked();
}

uint64_t type metadata accessor for CRLCommandSetLocked()
{
  uint64_t result = qword_10168A7B8;
  if (!qword_10168A7B8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1009D0264()
{
  uint64_t result = type metadata accessor for UUID();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

unint64_t sub_1009D0300()
{
  unint64_t result = qword_10168A7C8;
  if (!qword_10168A7C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168A7C8);
  }
  return result;
}

unint64_t sub_1009D0358()
{
  unint64_t result = qword_10168A7D0;
  if (!qword_10168A7D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168A7D0);
  }
  return result;
}

unint64_t sub_1009D03B0()
{
  unint64_t result = qword_10168A7D8;
  if (!qword_10168A7D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168A7D8);
  }
  return result;
}

uint64_t sub_1009D0404()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1009D0454(uint64_t a1)
{
  unint64_t v2 = sub_1009D0F8C();

  return static AssistantSchemaIntent.title.getter(a1, v2);
}

uint64_t sub_1009D04A0(uint64_t a1)
{
  unint64_t v2 = sub_1009D0998();

  return static OpenIntent.openAppWhenRun.getter(a1, v2);
}

uint64_t sub_1009D04DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  unint64_t v5 = sub_1009D0998();
  unint64_t v6 = sub_1009D0F38();
  uint64_t v7 = sub_1009D0EF4(&qword_101681828);
  *uint64_t v4 = v2;
  v4[1] = sub_1009D05C4;
  return URLRepresentableIntent<>.perform()(a2, v5, v6, v7);
}

uint64_t sub_1009D05C4()
{
  uint64_t v2 = *v1;
  uint64_t result = swift_task_dealloc();
  if (v0)
  {
    uint64_t v4 = *(uint64_t (**)(void))(v2 + 8);
    return v4();
  }
  return result;
}

uint64_t sub_1009D06CC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1009D09EC();
  *a1 = result;
  return result;
}

unint64_t sub_1009D06F8()
{
  unint64_t result = qword_10168A7E8;
  if (!qword_10168A7E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168A7E8);
  }
  return result;
}

uint64_t sub_1009D074C()
{
  return sub_1009D0EF4(&qword_1016816D8);
}

uint64_t sub_1009D0780(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for CRLBoardEntity();
  __chkstk_darwin(v2 - 8, v3);
  sub_10057B3EC(a1, (uint64_t)&v6 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  IntentParameter.wrappedValue.setter();
  return sub_1005F6324(a1);
}

void (*sub_1009D0810(void *a1))(void *a1)
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = IntentParameter.wrappedValue.modify();
  return sub_100568164;
}

uint64_t sub_1009D0870(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_1009D0998();
  uint64_t v5 = sub_1009D0EF4(&qword_101681828);

  return static URLRepresentableIntent<>.urlRepresentation.getter(a1, v4, a2, v5);
}

uint64_t sub_1009D08F4(uint64_t a1)
{
  unint64_t v2 = sub_1005F6380();

  return static AppIntent.persistentIdentifier.getter(a1, v2);
}

unint64_t sub_1009D0934()
{
  unint64_t result = qword_10168A7F0;
  if (!qword_10168A7F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168A7F0);
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLOpenBoardIntent()
{
  return &type metadata for CRLOpenBoardIntent;
}

unint64_t sub_1009D0998()
{
  unint64_t result = qword_10168A7F8;
  if (!qword_10168A7F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168A7F8);
  }
  return result;
}

uint64_t sub_1009D09EC()
{
  uint64_t v0 = type metadata accessor for InputConnectionBehavior();
  uint64_t v37 = *(void *)(v0 - 8);
  uint64_t v38 = v0;
  __chkstk_darwin(v0, v1);
  uint64_t v36 = (char *)v33 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v3 = *(void *)(v35 - 8);
  __chkstk_darwin(v35, v4);
  uint64_t v34 = (char *)v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for Locale();
  __chkstk_darwin(v6 - 8, v7);
  uint64_t v8 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v8 - 8, v9);
  uint64_t v10 = type metadata accessor for LocalizedStringResource();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10, v12);
  uint64_t v13 = sub_1005057FC(&qword_101673B38);
  __chkstk_darwin(v13 - 8, v14);
  uint64_t v16 = (char *)v33 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17, v18);
  long long v20 = (char *)v33 - v19;
  uint64_t v21 = sub_1005057FC(&qword_101691F20);
  __chkstk_darwin(v21 - 8, v22);
  id v24 = (char *)v33 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = sub_1005057FC(&qword_101673B40);
  __chkstk_darwin(v25 - 8, v26);
  uint64_t v28 = (char *)v33 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33[1] = sub_1005057FC(&qword_101673B48);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v28, 1, 1, v10);
  uint64_t v29 = type metadata accessor for CRLBoardEntity();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v24, 1, 1, v29);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v34, enum case for LocalizedStringResource.BundleDescription.main(_:), v35);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  IntentDialog.init(_:)();
  uint64_t v30 = type metadata accessor for IntentDialog();
  uint64_t v31 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56);
  v31(v20, 0, 1, v30);
  v31(v16, 1, 1, v30);
  (*(void (**)(char *, void, uint64_t))(v37 + 104))(v36, enum case for InputConnectionBehavior.default(_:), v38);
  sub_1009D0EF4((unint64_t *)&qword_101673B60);
  return IntentParameter<>.init(description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:)();
}

uint64_t sub_1009D0EF4(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for CRLBoardEntity();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1009D0F38()
{
  unint64_t result = qword_10168A800;
  if (!qword_10168A800)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168A800);
  }
  return result;
}

unint64_t sub_1009D0F8C()
{
  unint64_t result = qword_10168A808;
  if (!qword_10168A808)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168A808);
  }
  return result;
}

void sub_1009D0FE0(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  uint64_t v5 = __chkstk_darwin(v3, v4);
  uint64_t v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5, v8);
  uint64_t v10 = (unsigned __int8 *)&v30 - v9;
  sub_10076F9F8((uint64_t)v1 + OBJC_IVAR____TtC8Freeform32CRLBoardLibraryViewModelItemNode_item, (uint64_t)&v30 - v9);
  if (swift_getEnumCaseMultiPayload())
  {
    sub_10076FA5C((uint64_t)v10, type metadata accessor for CRLBoardLibraryViewModel.Item);
    uint64_t v11 = sub_1005057FC(&qword_101674250);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(a1, 1, 1, v11);
    return;
  }
  int v12 = *v10;
  uint64_t v13 = sub_1005057FC(&qword_101674250);
  uint64_t v14 = swift_allocBox();
  uint64_t v16 = v15;
  sub_1009D189C();
  NSDiffableDataSourceSectionSnapshot.init()();
  if (!v12)
  {
    uint64_t v34 = v14;
    id v17 = [v1 children];
    type metadata accessor for CRLBoardLibraryViewModelItemNode();
    unint64_t v18 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    unint64_t v35 = (unint64_t)_swiftEmptyArrayStorage;
    if (v18 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v19 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v19 = *(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    uint64_t v33 = v16;
    if (v19)
    {
      uint64_t v31 = v13;
      uint64_t v32 = a1;
      if (v19 < 1)
      {
        __break(1u);
        goto LABEL_34;
      }
      for (uint64_t i = 0; i != v19; ++i)
      {
        if ((v18 & 0xC000000000000001) != 0) {
          id v21 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          id v21 = *(id *)(v18 + 8 * i + 32);
        }
        uint64_t v22 = v21;
        sub_10076F9F8((uint64_t)v21 + OBJC_IVAR____TtC8Freeform32CRLBoardLibraryViewModelItemNode_item, (uint64_t)v7);
        if (swift_getEnumCaseMultiPayload() == 2)
        {
          sub_1005057FC(&qword_101677100);
          swift_bridgeObjectRelease();
          sub_10076FA5C((uint64_t)v7, type metadata accessor for CRLBoardIdentifier);
        }
        else
        {
          sub_10076FA5C((uint64_t)v7, type metadata accessor for CRLBoardLibraryViewModel.Item);
          specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
          specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
          specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized ContiguousArray._endMutation()();
        }
      }
      swift_bridgeObjectRelease();
      unint64_t v23 = v35;
      uint64_t v13 = v31;
      a1 = v32;
      uint64_t v24 = v34;
      if ((v35 & 0x8000000000000000) != 0) {
        goto LABEL_29;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      unint64_t v23 = (unint64_t)_swiftEmptyArrayStorage;
      uint64_t v24 = v34;
      if (((unint64_t)_swiftEmptyArrayStorage & 0x8000000000000000) != 0) {
        goto LABEL_29;
      }
    }
    if ((v23 & 0x4000000000000000) == 0)
    {
      uint64_t v25 = *(void *)(v23 + 16);
      if (!v25)
      {
LABEL_30:
        swift_release();
        uint64_t v16 = v33;
        goto LABEL_31;
      }
      goto LABEL_22;
    }
LABEL_29:
    swift_bridgeObjectRetain();
    uint64_t v25 = _CocoaArrayWrapper.endIndex.getter();
    swift_release();
    if (!v25) {
      goto LABEL_30;
    }
LABEL_22:
    if (v25 >= 1)
    {
      for (uint64_t j = 0; j != v25; ++j)
      {
        if ((v23 & 0xC000000000000001) != 0) {
          id v27 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          id v27 = *(id *)(v23 + 8 * j + 32);
        }
        uint64_t v28 = v27;
        sub_1009D1444(v27, 0, v24);
      }
      goto LABEL_30;
    }
LABEL_34:
    __break(1u);
    return;
  }
  sub_1009D1444(v1, 0, v14);
LABEL_31:
  swift_beginAccess();
  uint64_t v29 = *(void *)(v13 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v29 + 16))(a1, v16, v13);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v29 + 56))(a1, 0, 1, v13);
  swift_release();
}

void sub_1009D1444(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6, v8);
  uint64_t v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1005057FC((uint64_t *)&unk_101676310);
  __chkstk_darwin(v11 - 8, v12);
  uint64_t v14 = (char *)&v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1005057FC(&qword_101674250);
  uint64_t v31 = a3;
  swift_projectBox();
  sub_1005057FC(&qword_10169B510);
  unint64_t v15 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_10117E810;
  id v32 = a1;
  sub_10076F9F8((uint64_t)a1 + OBJC_IVAR____TtC8Freeform32CRLBoardLibraryViewModelItemNode_item, v16 + v15);
  if (a2)
  {
    sub_10076F9F8(a2 + OBJC_IVAR____TtC8Freeform32CRLBoardLibraryViewModelItemNode_item, (uint64_t)v14);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v14, 0, 1, v6);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v14, 1, 1, v6);
  }
  swift_beginAccess();
  NSDiffableDataSourceSectionSnapshot.append(_:to:)();
  swift_endAccess();
  swift_bridgeObjectRelease();
  sub_1007E6ED8((uint64_t)v14);
  id v17 = v32;
  id v18 = [v32 children];
  type metadata accessor for CRLBoardLibraryViewModelItemNode();
  unint64_t v19 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  unint64_t v33 = (unint64_t)_swiftEmptyArrayStorage;
  if (v19 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v20 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v20 = *(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (v20)
  {
    if (v20 < 1)
    {
      __break(1u);
      goto LABEL_31;
    }
    for (uint64_t i = 0; i != v20; ++i)
    {
      if ((v19 & 0xC000000000000001) != 0) {
        id v22 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v22 = *(id *)(v19 + 8 * i + 32);
      }
      unint64_t v23 = v22;
      sub_10076F9F8((uint64_t)v22 + OBJC_IVAR____TtC8Freeform32CRLBoardLibraryViewModelItemNode_item, (uint64_t)v10);
      if (swift_getEnumCaseMultiPayload() == 2)
      {
        sub_1005057FC(&qword_101677100);
        swift_bridgeObjectRelease();
        sub_10076FA5C((uint64_t)v10, type metadata accessor for CRLBoardIdentifier);
      }
      else
      {
        sub_10076FA5C((uint64_t)v10, type metadata accessor for CRLBoardLibraryViewModel.Item);
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
        specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized ContiguousArray._endMutation()();
      }
    }
    swift_bridgeObjectRelease();
    id v17 = v32;
    unint64_t v24 = v33;
    uint64_t v25 = v31;
    if ((v33 & 0x8000000000000000) != 0) {
      goto LABEL_28;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    unint64_t v24 = (unint64_t)_swiftEmptyArrayStorage;
    uint64_t v25 = v31;
    if (((unint64_t)_swiftEmptyArrayStorage & 0x8000000000000000) != 0) {
      goto LABEL_28;
    }
  }
  if ((v24 & 0x4000000000000000) == 0)
  {
    uint64_t v26 = *(void *)(v24 + 16);
    if (!v26)
    {
LABEL_29:
      swift_release();
      return;
    }
    goto LABEL_21;
  }
LABEL_28:
  swift_bridgeObjectRetain();
  uint64_t v26 = _CocoaArrayWrapper.endIndex.getter();
  swift_release();
  if (!v26) {
    goto LABEL_29;
  }
LABEL_21:
  if (v26 >= 1)
  {
    for (uint64_t j = 0; j != v26; ++j)
    {
      if ((v24 & 0xC000000000000001) != 0) {
        id v28 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v28 = *(id *)(v24 + 8 * j + 32);
      }
      uint64_t v29 = v28;
      sub_1009D1444(v28, v17, v25);
    }
    goto LABEL_29;
  }
LABEL_31:
  __break(1u);
}

unint64_t sub_1009D189C()
{
  unint64_t result = qword_10169B5A0;
  if (!qword_10169B5A0)
  {
    type metadata accessor for CRLBoardLibraryViewModel.Item(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10169B5A0);
  }
  return result;
}

void sub_1009D18F4(char a1)
{
}

void sub_1009D191C(char a1)
{
}

void sub_1009D1944(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v42 = a3;
  uint64_t v6 = v4;
  uint64_t v8 = sub_1005057FC(&qword_101672EB0);
  __chkstk_darwin(v8 - 8, v9);
  uint64_t v11 = (char *)&v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for Date();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12, v14);
  uint64_t v16 = (char *)&v41 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&double v19 = __chkstk_darwin(v17, v18).n128_u64[0];
  id v21 = (char *)&v41 - v20;
  id v22 = [v6 manager];
  if (v22)
  {
    unint64_t v23 = v22;
    uint64_t v41 = a4;
    id v24 = [v6 hideTimer];
    [v24 invalidate];

    [v6 setHideTimer:0];
    if ([v6 hiding])
    {
      swift_unknownObjectRelease();
      return;
    }
    if ((a1 & 1) == 0)
    {
      id v27 = [v6 timeStartedShowing];
      if (v27)
      {
        id v28 = v27;
        static Date._unconditionallyBridgeFromObjectiveC(_:)();

        uint64_t v29 = *(void (**)(char *, char *, uint64_t))(v13 + 32);
        v29(v11, v16, v12);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v11, 0, 1, v12);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) != 1)
        {
          v29(v21, v11, v12);
          Date.timeIntervalSinceNow.getter();
          double v31 = fabs(v30);
          [v6 minimumShowDuration];
          if (v31 >= v32 || ([v6 minimumShowDuration], v33 - v31 <= 0.0))
          {
            [v23 hideWithHudController:v6];
            [v6 setHiding:1];
            swift_unknownObjectRelease();
          }
          else
          {
            uint64_t v34 = self;
            [v6 timeLeftToShow];
            double v36 = v35;
            uint64_t v37 = swift_allocObject();
            *(void *)(v37 + 16) = v23;
            *(void *)(v37 + 24) = v6;
            aBlock[4] = v42;
            aBlock[5] = v37;
            aBlock[0] = _NSConcreteStackBlock;
            aBlock[1] = *(void *)"";
            aBlock[2] = sub_10051CE64;
            aBlock[3] = v41;
            uint64_t v38 = _Block_copy(aBlock);
            swift_unknownObjectRetain();
            id v39 = v6;
            swift_release();
            id v40 = [v34 scheduledTimerWithTimeInterval:0 repeats:v38 block:v36];
            _Block_release(v38);
            [v39 setHideTimer:v40];
            swift_unknownObjectRelease();
          }
          (*(void (**)(char *, uint64_t))(v13 + 8))(v21, v12);
          return;
        }
      }
      else
      {
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v11, 1, 1, v12);
      }
      sub_100522F00((uint64_t)v11, &qword_101672EB0);
    }
    [v23 hideWithHudController:v6];
    [v6 setHiding:1];
    swift_unknownObjectRelease();
    return;
  }
  if ([v6 showing])
  {
    if (qword_10166F9F8 != -1) {
      swift_once();
    }
    swift_beginAccess();
    id v25 = (id)static OS_os_log.crlStatusHUD;
    uint64_t v26 = static os_log_type_t.error.getter();
    sub_100BAC898((uint64_t)v25, (uint64_t)&_mh_execute_header, v26, (uint64_t)"Trying to hide while showing without a manager", 46, 2, (uint64_t)_swiftEmptyArrayStorage);
  }
}

id sub_1009D1E6C(void *a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, double a6, double a7)
{
  sub_10050F848(a1, a1[3]);
  uint64_t v14 = _bridgeAnythingToObjectiveC<A>(_:)();
  uint64_t v15 = a4[3];
  if (v15)
  {
    uint64_t v16 = sub_10050F848(a4, a4[3]);
    uint64_t v25 = a5;
    uint64_t v26 = a2;
    uint64_t v17 = a3;
    uint64_t v18 = *(void *)(v15 - 8);
    __n128 v19 = __chkstk_darwin(v16, v16);
    id v21 = (char *)&v25 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, __n128))(v18 + 16))(v21, v19);
    uint64_t v22 = _bridgeAnythingToObjectiveC<A>(_:)();
    (*(void (**)(char *, uint64_t))(v18 + 8))(v21, v15);
    a3 = v17;
    a5 = v25;
    a2 = v26;
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)a4);
  }
  else
  {
    uint64_t v22 = 0;
  }
  id v23 = [(id)swift_getObjCClassFromMetadata() constraintWithItem:v14 attribute:a2 relatedBy:a3 toItem:v22 attribute:a5 multiplier:a6 constant:a7];
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)a1);
  return v23;
}

uint64_t sub_1009D249C()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1005057FC(&qword_101672EB0);
  __chkstk_darwin(v2 - 8, v3);
  uint64_t v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for Date();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6, v8);
  uint64_t v10 = (char *)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = v1 + OBJC_IVAR____TtC8Freeform33CRLTransientRefollowHUDController_timeStartedShowing;
  swift_beginAccess();
  sub_100522E9C(v11, (uint64_t)v5, &qword_101672EB0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1) {
    return sub_100522F00((uint64_t)v5, &qword_101672EB0);
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v10, v5, v6);
  Date.timeIntervalSinceNow.getter();
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v10, v6);
}

void sub_1009D2734()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for Date();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2, v4);
  uint64_t v6 = (char *)aBlock - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1005057FC(&qword_101672EB0);
  __chkstk_darwin(v7 - 8, v8);
  uint64_t v10 = (char *)aBlock - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&double v13 = __chkstk_darwin(v11, v12).n128_u64[0];
  uint64_t v15 = (char *)aBlock - v14;
  if (v1[OBJC_IVAR____TtC8Freeform33CRLTransientRefollowHUDController_showing] == 1
    && v1[OBJC_IVAR____TtC8Freeform33CRLTransientRefollowHUDController_shouldAutoHide] == 1)
  {
    uint64_t v16 = OBJC_IVAR____TtC8Freeform33CRLTransientRefollowHUDController_hideTimer;
    [*(id *)&v1[OBJC_IVAR____TtC8Freeform33CRLTransientRefollowHUDController_hideTimer] invalidate];
    uint64_t v17 = *(void **)&v1[v16];
    *(void *)&v1[v16] = 0;

    Date.init()();
    (*(void (**)(char *, void, uint64_t, uint64_t))(v3 + 56))(v15, 0, 1, v2);
    uint64_t v18 = (uint64_t)&v1[OBJC_IVAR____TtC8Freeform33CRLTransientRefollowHUDController_timeStartedShowing];
    swift_beginAccess();
    sub_1005E8B94((uint64_t)v15, v18);
    swift_endAccess();
    sub_100522E9C(v18, (uint64_t)v10, &qword_101672EB0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v10, 1, v2) == 1)
    {
      sub_100522F00((uint64_t)v10, &qword_101672EB0);
      double v19 = 0.0;
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v6, v10, v2);
      Date.timeIntervalSinceNow.getter();
      double v21 = fabs(v20);
      (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
      double v22 = *(double *)&v1[OBJC_IVAR____TtC8Freeform33CRLTransientRefollowHUDController_maximumShowDuration];
      BOOL v23 = v21 < v22;
      double v24 = v22 - v21;
      if (v23) {
        double v19 = v24;
      }
      else {
        double v19 = 0.0;
      }
    }
    uint64_t v25 = self;
    uint64_t v26 = swift_allocObject();
    *(void *)(v26 + 16) = v1;
    aBlock[4] = sub_1009D55C8;
    aBlock[5] = v26;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = *(void *)"";
    aBlock[2] = sub_10051CE64;
    aBlock[3] = &unk_10151D530;
    id v27 = _Block_copy(aBlock);
    id v28 = v1;
    swift_release();
    id v29 = [v25 scheduledTimerWithTimeInterval:0 repeats:v27 block:v19];
    _Block_release(v27);
    double v30 = *(void **)&v1[v16];
    *(void *)&v1[v16] = v29;
  }
}

void sub_1009D2A90(uint64_t a1, uint64_t a2)
{
  sub_1009D1944(0, (uint64_t)&unk_10151D480, (uint64_t)sub_1009D5148, (uint64_t)&unk_10151D498);
  uint64_t v3 = OBJC_IVAR____TtC8Freeform33CRLTransientRefollowHUDController_hideTimer;
  [*(id *)(a2 + OBJC_IVAR____TtC8Freeform33CRLTransientRefollowHUDController_hideTimer) invalidate];
  uint64_t v4 = *(void **)(a2 + v3);
  *(void *)(a2 + v3) = 0;
}

id sub_1009D2DB4()
{
  uint64_t v1 = OBJC_IVAR____TtC8Freeform33CRLTransientRefollowHUDController____lazy_storage___participantColor;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform33CRLTransientRefollowHUDController____lazy_storage___participantColor);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC8Freeform33CRLTransientRefollowHUDController____lazy_storage___participantColor);
  }
  else
  {
    id v4 = [*(id *)(v0 + OBJC_IVAR____TtC8Freeform33CRLTransientRefollowHUDController_followingParticipant) collaboratorColorForType:2];
    uint64_t v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v6 = v2;
  return v3;
}

id sub_1009D2E34()
{
  uint64_t v0 = self;
  id v1 = [v0 whiteColor];
  id v2 = [self systemFontOfSize:13.0 weight:UIFontWeightMedium];
  if ([self isIncreaseContrastEnabled])
  {
    id v3 = sub_1009D2DB4();
    id v4 = [v3 UIColor];

    id v5 = [v4 CGColor];
    id v6 = [objc_allocWithZone((Class)CRLColor) initWithCGColor:v5];

    [v6 brightnessComponent];
    double v8 = v7;

    if (v8 > 0.5)
    {
      id v9 = [v0 blackColor];

      id v1 = v9;
    }
  }
  sub_1005057FC((uint64_t *)&unk_101687FB0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117D8C0;
  *(void *)(inited + 32) = NSFontAttributeName;
  uint64_t v11 = sub_10050BF48(0, (unint64_t *)&qword_101695490);
  *(void *)(inited + 40) = v2;
  *(void *)(inited + 64) = v11;
  *(void *)(inited + 72) = NSForegroundColorAttributeName;
  *(void *)(inited + 104) = sub_10050BF48(0, (unint64_t *)&qword_101687FC0);
  *(void *)(inited + 80) = v1;
  uint64_t v12 = NSFontAttributeName;
  id v13 = v2;
  uint64_t v14 = NSForegroundColorAttributeName;
  id v15 = v1;
  sub_100A38A68(inited);
  id v16 = [self mainBundle];
  NSString v17 = String._bridgeToObjectiveC()();
  NSString v18 = String._bridgeToObjectiveC()();
  id v19 = [v16 localizedStringForKey:v17 value:v18 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  id v20 = objc_allocWithZone((Class)NSAttributedString);
  NSString v21 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_100515BF8();
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v23 = [v20 initWithString:v21 attributes:isa];

  return v23;
}

id sub_1009D3178()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1005057FC((uint64_t *)&unk_101687FA0);
  __chkstk_darwin(v2 - 8, v3);
  uint64_t v48 = (char *)&v47 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1005057FC(&qword_10168A8B0);
  __chkstk_darwin(v5 - 8, v6);
  uint64_t v49 = (uint64_t)&v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8, v9);
  uint64_t v11 = (char *)&v47 - v10;
  uint64_t v12 = sub_1005057FC((uint64_t *)&unk_1016725A0);
  __chkstk_darwin(v12 - 8, v13);
  id v15 = (char *)&v47 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for UIButton.Configuration();
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16, v18);
  id v20 = (char *)&v47 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21, v22);
  double v24 = (char *)&v47 - v23;
  static UIButton.Configuration.tinted()();
  uint64_t v25 = *(void *)(v0 + OBJC_IVAR____TtC8Freeform33CRLTransientRefollowHUDController_resumeFollowingString);
  uint64_t v26 = *(void *)(v0 + OBJC_IVAR____TtC8Freeform33CRLTransientRefollowHUDController_resumeFollowingString + 8);
  swift_bridgeObjectRetain();
  uint64_t v50 = v26;
  uint64_t v51 = v25;
  UIButton.Configuration.title.setter();
  id v27 = (void (*)(unsigned char *, void))UIButton.Configuration.background.modify();
  UIBackgroundConfiguration.cornerRadius.setter();
  v27(v53, 0);
  id v28 = self;
  id v29 = [v28 whiteColor];
  UIButton.Configuration.baseForegroundColor.setter();
  UIConfigurationTextAttributesTransformer.init(_:)();
  uint64_t v30 = type metadata accessor for UIConfigurationTextAttributesTransformer();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(v15, 0, 1, v30);
  UIButton.Configuration.titleTextAttributesTransformer.setter();
  sub_10050BF48(0, (unint64_t *)&qword_101672600);
  swift_allocObject();
  uint64_t v52 = v1;
  swift_unknownObjectWeakInit();
  double v31 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
  sub_10050BF48(0, (unint64_t *)&unk_101672590);
  (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v20, v24, v16);
  id v32 = v31;
  double v33 = (void *)UIButton.init(configuration:primaryAction:)();
  [v33 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v34 = [v28 blackColor];
  id v35 = [v34 colorWithAlphaComponent:0.3];

  UIButton.configuration.getter();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v11, 1, v16))
  {
    sub_100522E9C((uint64_t)v11, v49, &qword_10168A8B0);
    UIButton.configuration.setter();
    sub_100522F00((uint64_t)v11, &qword_10168A8B0);
  }
  else
  {
    uint64_t v36 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v37 = swift_allocObject();
    *(void *)(v37 + 16) = v36;
    *(void *)(v37 + 24) = v35;
    id v38 = v35;
    id v39 = v48;
    UIConfigurationColorTransformer.init(_:)();
    uint64_t v40 = type metadata accessor for UIConfigurationColorTransformer();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v40 - 8) + 56))(v39, 0, 1, v40);
    uint64_t v41 = (void (*)(unsigned char *, void))UIButton.Configuration.background.modify();
    UIBackgroundConfiguration.backgroundColorTransformer.setter();
    v41(v53, 0);
    UIButton.configuration.setter();
  }
  [v33 setShowsLargeContentViewer:1];
  id v42 = v33;
  NSString v43 = String._bridgeToObjectiveC()();
  [v42 setLargeContentTitle:v43];

  id v44 = objc_allocWithZone((Class)UILargeContentViewerInteraction);
  id v45 = [v44 initWithDelegate:v52];
  [v42 addInteraction:v45];

  (*(void (**)(char *, uint64_t))(v17 + 8))(v24, v16);
  return v42;
}

uint64_t sub_1009D3778@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for AttributeContainer();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  uint64_t KeyPath = swift_getKeyPath();
  swift_getKeyPath();
  [self systemFontOfSize:11.0 weight:UIFontWeightBold KeyPath];
  sub_100522B9C();
  return AttributeContainer.subscript.setter();
}

void sub_1009D384C()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (unsigned char *)Strong;
    uint64_t v2 = *(void (**)(uint64_t))(Strong
                                        + OBJC_IVAR____TtC8Freeform33CRLTransientRefollowHUDController_refollowClickedHandler);
    if (v2)
    {
      uint64_t v3 = swift_retain();
      v2(v3);
      sub_1005174AC((uint64_t)v2);
    }
    if (v1[OBJC_IVAR____TtC8Freeform33CRLTransientRefollowHUDController_hideOnTouch] == 1) {
      sub_1009D1944(1, (uint64_t)&unk_10151D480, (uint64_t)sub_1009D5148, (uint64_t)&unk_10151D498);
    }
  }
}

void sub_1009D391C()
{
  uint64_t v1 = v0;
  uint64_t v85 = (char *)OBJC_IVAR____TtC8Freeform33CRLTransientRefollowHUDController_hudView;
  id v2 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v0
                                                             + OBJC_IVAR____TtC8Freeform33CRLTransientRefollowHUDController_hudView), "subviews"));
  uint64_t v3 = sub_10050BF48(0, (unint64_t *)&qword_1016725F0);
  unint64_t v4 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v4 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = _CocoaArrayWrapper.endIndex.getter();
    if (!v5) {
      goto LABEL_10;
    }
  }
  else
  {
    uint64_t v5 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (!v5) {
      goto LABEL_10;
    }
  }
  if (v5 < 1)
  {
    __break(1u);
    return;
  }
  for (uint64_t i = 0; i != v5; ++i)
  {
    if ((v4 & 0xC000000000000001) != 0) {
      id v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v7 = *(id *)(v4 + 8 * i + 32);
    }
    uint64_t v8 = v7;
    [v7 removeFromSuperview];
  }
LABEL_10:
  uint64_t v84 = v3;
  swift_bridgeObjectRelease_n();
  id v9 = [objc_allocWithZone((Class)CNAvatarViewController) init];
  uint64_t v10 = *(void **)(*(void *)(v1 + OBJC_IVAR____TtC8Freeform33CRLTransientRefollowHUDController_followingParticipant)
                 + OBJC_IVAR____TtC8Freeform27CRLCollaborationParticipant_cnContact);
  if (v10)
  {
    sub_1005057FC((uint64_t *)&unk_101676C10);
    uint64_t v11 = swift_allocObject();
    *(_OWORD *)(v11 + 16) = xmmword_101177E70;
    *(void *)(v11 + 32) = v10;
    v89[0] = v11;
    specialized Array._endMutation()();
    sub_10050BF48(0, (unint64_t *)&qword_10167C580);
    id v12 = v10;
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v9 setContacts:isa];
  }
  id v14 = [v9 view];
  [v14 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v15 = v85;
  [*(id *)&v85[v1] addSubview:v14];
  id v16 = [v14 leadingAnchor];
  id v17 = [*(id *)&v85[v1] leadingAnchor];
  id v18 = [v16 constraintEqualToAnchor:v17 constant:8.0];

  [v18 setActive:1];
  id v19 = [v14 widthAnchor];
  id v20 = [v19 constraintEqualToConstant:26.0];

  [v20 setActive:1];
  id v21 = [v14 heightAnchor];
  id v22 = [v21 constraintEqualToConstant:26.0];

  [v22 setActive:1];
  id v23 = [v14 centerYAnchor];
  id v24 = [*(id *)&v85[v1] centerYAnchor];
  id v25 = [v23 constraintEqualToAnchor:v24];

  [v25 setActive:1];
  id v26 = [objc_allocWithZone((Class)UIStackView) init];
  [v26 setAlignment:3];
  [v26 setAxis:1];
  [v26 setDistribution:1];
  [v26 setSpacing:3.0];
  [v26 setTranslatesAutoresizingMaskIntoConstraints:0];
  [*(id *)&v85[v1] addSubview:v26];
  id v27 = sub_1009D4710();
  [v27 setNumberOfLines:2];
  id v28 = sub_1009D2E34();
  if (v28)
  {
    id v29 = v28;
  }
  else
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"setupAndLayoutAdaptableView()", 29, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLApplication/CRLTransientRefollowHUDController.swift", 108, 2, 259, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    LOBYTE(v81) = 2;
    id v15 = v85;
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"setupAndLayoutAdaptableView()", 29, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLApplication/CRLTransientRefollowHUDController.swift", 108, 2, 259);
    id v30 = objc_allocWithZone((Class)NSAttributedString);
    NSString v31 = String._bridgeToObjectiveC()();
    id v29 = [v30 initWithString:v31];
  }
  id v87 = v29;
  [v27 setAttributedText:v29];
  uint64_t v32 = qword_10166F918;
  id v33 = v27;
  if (v32 != -1) {
    swift_once();
  }
  NSString v34 = String._bridgeToObjectiveC()();
  [v33 setAccessibilityHint:v34];

  id v35 = [v26 leadingAnchor];
  id v36 = [v14 trailingAnchor];
  id v37 = [v35 constraintEqualToAnchor:v36 constant:8.0];

  [v37 setActive:1];
  id v38 = [v26 heightAnchor];
  id v39 = [v38 constraintEqualToConstant:24.0];

  [v39 setActive:1];
  uint64_t v40 = v33;
  id v41 = [v26 centerYAnchor];
  id v42 = [*(id *)&v15[v1] centerYAnchor];
  id v43 = [v41 constraintEqualToAnchor:v42];

  [v43 setActive:1];
  [v26 setShowsLargeContentViewer:1];
  id v44 = v26;
  NSString v45 = [v87 string];
  uint64_t v83 = v14;
  if (!v45)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    NSString v45 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  [v44 setLargeContentTitle:v45];

  id v46 = [objc_allocWithZone((Class)UILargeContentViewerInteraction) initWithDelegate:v1];
  [v44 addInteraction:v46];

  int v82 = v40;
  [v44 addArrangedSubview:v40];
  [v40 setTextAlignment:0];
  id v47 = sub_1009D3178();
  [*(id *)&v15[v1] addSubview:v47];
  id v48 = [v47 leadingAnchor];
  id v49 = [v44 trailingAnchor];
  id v50 = [v48 constraintEqualToAnchor:v49 constant:8.0];

  [v50 setActive:1];
  id v51 = [v47 trailingAnchor];
  id v52 = [*(id *)&v15[v1] trailingAnchor];
  id v53 = [v51 constraintEqualToAnchor:v52 constant:-8.0];

  [v53 setActive:1];
  id v54 = [v47 heightAnchor];
  id v55 = [v54 constraintEqualToConstant:24.0];

  [v55 setActive:1];
  id v56 = [v47 centerYAnchor];
  id v57 = [*(id *)&v15[v1] centerYAnchor];
  id v58 = [v56 constraintEqualToAnchor:v57];

  [v58 setActive:1];
  id v59 = [*(id *)&v15[v1] leadingAnchor];
  uint64_t v60 = OBJC_IVAR____TtC8Freeform33CRLTransientRefollowHUDController_containerView;
  id v61 = [*(id *)(v1 + OBJC_IVAR____TtC8Freeform33CRLTransientRefollowHUDController_containerView) leadingAnchor];
  id v62 = [v59 constraintEqualToAnchor:v61];

  [v62 setActive:1];
  id v63 = [*(id *)&v15[v1] heightAnchor];
  id v64 = [v63 constraintEqualToConstant:40.0];

  [v64 setActive:1];
  id v65 = [*(id *)&v15[v1] topAnchor];
  id v66 = [*(id *)(v1 + v60) topAnchor];
  id v67 = [v65 constraintEqualToAnchor:v66];

  [v67 setActive:1];
  id v68 = [*(id *)&v15[v1] trailingAnchor];
  id v69 = [*(id *)(v1 + v60) trailingAnchor];
  id v70 = [v68 constraintEqualToAnchor:v69];

  [v70 setActive:1];
  uint64_t v71 = OBJC_IVAR____TtC8Freeform33CRLTransientRefollowHUDController_height;
  *(void *)(v1 + OBJC_IVAR____TtC8Freeform33CRLTransientRefollowHUDController_height) = 0x404C000000000000;
  id v72 = [*(id *)(v1 + v60) heightAnchor];
  id v73 = [v72 constraintEqualToConstant:*(double *)(v1 + v71)];

  [v73 setActive:1];
  sub_10050BF48(0, (unint64_t *)&qword_101674200);
  id v74 = *(void **)(v1 + v60);
  v89[3] = v84;
  v89[0] = v74;
  memset(v88, 0, sizeof(v88));
  double v75 = *(double *)(v1 + v71);
  id v76 = v74;
  id v77 = sub_1009D1E6C(v89, 8, 0, v88, 8, 1.0, v75);
  uint64_t v78 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform33CRLTransientRefollowHUDController_heightConstraint);
  *(void *)(v1 + OBJC_IVAR____TtC8Freeform33CRLTransientRefollowHUDController_heightConstraint) = v77;

  id v79 = [*(id *)&v15[v1] layer];
  [v79 setMasksToBounds:0];

  id v80 = [*(id *)&v15[v1] layer];
  [v80 setCornerCurve:kCACornerCurveContinuous];

  id v86 = [*(id *)&v15[v1] layer];
  [v86 setCornerRadius:20.0];
}

id sub_1009D4710()
{
  uint64_t v1 = OBJC_IVAR____TtC8Freeform33CRLTransientRefollowHUDController____lazy_storage____label;
  id v2 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform33CRLTransientRefollowHUDController____lazy_storage____label);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC8Freeform33CRLTransientRefollowHUDController____lazy_storage____label);
  }
  else
  {
    unint64_t v4 = sub_1009D4FE0();
    uint64_t v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    id v2 = 0;
  }
  id v6 = v2;
  return v3;
}

id sub_1009D488C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLTransientRefollowHUDController();
  return [super dealloc];
}

uint64_t sub_1009D4A04()
{
  return type metadata accessor for CRLTransientRefollowHUDController();
}

uint64_t type metadata accessor for CRLTransientRefollowHUDController()
{
  uint64_t result = qword_10168A8A0;
  if (!qword_10168A8A0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1009D4A58()
{
  sub_1005E873C();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

char *sub_1009D4C98(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, double a6)
{
  id v12 = (char *)objc_allocWithZone((Class)type metadata accessor for CRLTransientRefollowHUDController());
  uint64_t v13 = (char *)sub_1009D51F4(a1, a2, a3, v12);
  swift_getObjectType();
  swift_deallocPartialClassInstance();
  id v14 = (double *)&v13[OBJC_IVAR____TtC8Freeform33CRLTransientRefollowHUDController_canvasWidth];
  *id v14 = a6;
  *((unsigned char *)v14 + 8) = 0;
  id v15 = (uint64_t *)&v13[OBJC_IVAR____TtC8Freeform33CRLTransientRefollowHUDController_refollowClickedHandler];
  uint64_t v16 = *(void *)&v13[OBJC_IVAR____TtC8Freeform33CRLTransientRefollowHUDController_refollowClickedHandler];
  *id v15 = a4;
  v15[1] = a5;
  id v17 = v13;
  sub_1005173A0(a4);
  uint64_t v18 = sub_1005174AC(v16);
  if ((v17[OBJC_IVAR____TtC8Freeform33CRLTransientRefollowHUDController_setupDone] & 1) == 0)
  {
    v17[OBJC_IVAR____TtC8Freeform33CRLTransientRefollowHUDController_setupDone] = 1;
    sub_100E38C64(v18);
    uint64_t v19 = OBJC_IVAR____TtC8Freeform33CRLTransientRefollowHUDController_hudView;
    id v20 = *(id *)&v17[OBJC_IVAR____TtC8Freeform33CRLTransientRefollowHUDController_hudView];
    id v21 = sub_1009D4710();
    [v20 addSubview:v21];

    [*(id *)&v17[OBJC_IVAR____TtC8Freeform33CRLTransientRefollowHUDController_containerView] addSubview:*(void *)&v17[v19]];
    sub_1009D391C();
  }
  id v22 = [self mainBundle];
  NSString v23 = String._bridgeToObjectiveC()();
  NSString v24 = String._bridgeToObjectiveC()();
  id v25 = [v22 localizedStringForKey:v23 value:v24 table:0];

  uint64_t v26 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v28 = v27;

  sub_1005174AC(a4);
  swift_unknownObjectRelease();

  swift_unknownObjectRelease();
  id v29 = (uint64_t *)&v17[OBJC_IVAR____TtC8Freeform33CRLTransientRefollowHUDController_accessibilityAnnouncement];
  *id v29 = v26;
  v29[1] = v28;
  swift_bridgeObjectRelease();
  return v17;
}

uint64_t sub_1009D4F10()
{
  id v0 = [self mainBundle];
  NSString v1 = String._bridgeToObjectiveC()();
  NSString v2 = String._bridgeToObjectiveC()();
  id v3 = [v0 localizedStringForKey:v1 value:v2 table:0];

  uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  return v4;
}

void *sub_1009D4FE0()
{
  id v0 = [self mainBundle];
  NSString v1 = String._bridgeToObjectiveC()();
  NSString v2 = String._bridgeToObjectiveC()();
  id v3 = [v0 localizedStringForKey:v1 value:v2 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v4 = (void *)sub_100EBD9C4();
  swift_bridgeObjectRelease();
  [v4 setTranslatesAutoresizingMaskIntoConstraints:0];
  return v4;
}

uint64_t sub_1009D50D8()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_1009D5110()
{
}

uint64_t sub_1009D5118()
{
  return sub_1009D5600((void (*)(void))&_swift_release);
}

uint64_t sub_1009D5130()
{
  return sub_1009D5600((void (*)(void))&_swift_unknownObjectRelease);
}

id sub_1009D5148(int a1)
{
  return sub_100516884(a1, *(id *)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t sub_1009D5164(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1009D5174()
{
  return swift_release();
}

uint64_t sub_1009D5188()
{
  return 8;
}

uint64_t sub_1009D5194()
{
  return swift_release();
}

uint64_t sub_1009D519C(void *a1, void *a2)
{
  *a2 = *a1;
  return swift_retain();
}

void *sub_1009D51B0(void *result, void *a2)
{
  *a2 = *result;
  return result;
}

uint64_t sub_1009D51BC()
{
  _Block_release(*(const void **)(v0 + 16));

  return _swift_deallocObject(v0, 24, 7);
}

id sub_1009D51F4(uint64_t a1, void *a2, uint64_t a3, char *a4)
{
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();
  *(void *)&a4[OBJC_IVAR____TtC8Freeform33CRLTransientRefollowHUDController_type] = 2;
  swift_unknownObjectWeakInit();
  *(void *)&a4[OBJC_IVAR____TtC8Freeform33CRLTransientRefollowHUDController_minimumShowDuration] = 0x3FF0000000000000;
  id v6 = self;
  id v7 = a4;
  unsigned int v8 = [v6 isVoiceOverOrSwitchControlEnabled];
  double v9 = 6.0;
  if (v8) {
    double v9 = 30.0;
  }
  *(double *)&v7[OBJC_IVAR____TtC8Freeform33CRLTransientRefollowHUDController_maximumShowDuration] = v9;
  uint64_t v10 = &v7[OBJC_IVAR____TtC8Freeform33CRLTransientRefollowHUDController_timeStartedShowing];
  uint64_t v11 = type metadata accessor for Date();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v10, 1, 1, v11);
  *(void *)&v7[OBJC_IVAR____TtC8Freeform33CRLTransientRefollowHUDController_hideTimer] = 0;
  v7[OBJC_IVAR____TtC8Freeform33CRLTransientRefollowHUDController_shouldAutoHide] = 1;
  v7[OBJC_IVAR____TtC8Freeform33CRLTransientRefollowHUDController_showing] = 0;
  v7[OBJC_IVAR____TtC8Freeform33CRLTransientRefollowHUDController_animating] = 0;
  v7[OBJC_IVAR____TtC8Freeform33CRLTransientRefollowHUDController_hiding] = 0;
  id v12 = &v7[OBJC_IVAR____TtC8Freeform33CRLTransientRefollowHUDController_accessibilityAnnouncement];
  *(void *)id v12 = 0;
  *((void *)v12 + 1) = 0;
  v7[OBJC_IVAR____TtC8Freeform33CRLTransientRefollowHUDController_swipable] = 1;
  *(void *)&v7[OBJC_IVAR____TtC8Freeform33CRLTransientRefollowHUDController_swipeGestureRecognizer] = 0;
  v7[OBJC_IVAR____TtC8Freeform33CRLTransientRefollowHUDController_hideOnTouch] = 1;
  v7[OBJC_IVAR____TtC8Freeform33CRLTransientRefollowHUDController_setupDone] = 0;
  *(void *)&v7[OBJC_IVAR____TtC8Freeform33CRLTransientRefollowHUDController_height] = 0x4045000000000000;
  *(void *)&v7[OBJC_IVAR____TtC8Freeform33CRLTransientRefollowHUDController_width] = 0;
  *(void *)&v7[OBJC_IVAR____TtC8Freeform33CRLTransientRefollowHUDController_heightConstraint] = 0;
  *(void *)&v7[OBJC_IVAR____TtC8Freeform33CRLTransientRefollowHUDController_constraints] = _swiftEmptyArrayStorage;
  uint64_t v13 = &v7[OBJC_IVAR____TtC8Freeform33CRLTransientRefollowHUDController_refollowClickedHandler];
  *(void *)uint64_t v13 = 0;
  *((void *)v13 + 1) = 0;
  id v14 = &v7[OBJC_IVAR____TtC8Freeform33CRLTransientRefollowHUDController_canvasWidth];
  *(void *)id v14 = 0;
  v14[8] = 1;
  *(void *)&v7[OBJC_IVAR____TtC8Freeform33CRLTransientRefollowHUDController____lazy_storage___participantColor] = 0;
  id v15 = (uint64_t *)&v7[OBJC_IVAR____TtC8Freeform33CRLTransientRefollowHUDController_resumeFollowingString];
  id v16 = [self mainBundle];
  NSString v17 = String._bridgeToObjectiveC()();
  NSString v18 = String._bridgeToObjectiveC()();
  id v19 = [v16 localizedStringForKey:v17 value:v18 table:0];

  uint64_t v20 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v22 = v21;

  *id v15 = v20;
  v15[1] = v22;
  *(void *)&v7[OBJC_IVAR____TtC8Freeform33CRLTransientRefollowHUDController____lazy_storage____label] = 0;
  swift_unknownObjectWeakAssign();
  *(void *)&v7[OBJC_IVAR____TtC8Freeform33CRLTransientRefollowHUDController_followingParticipant] = a2;
  swift_unknownObjectWeakAssign();
  id v23 = objc_allocWithZone((Class)UIView);
  id v24 = a2;
  id v25 = [v23 initWithFrame:0.0, 0.0, 0.0, 0.0];
  *(void *)&v7[OBJC_IVAR____TtC8Freeform33CRLTransientRefollowHUDController_hudView] = v25;
  id v26 = [objc_allocWithZone((Class)UIView) initWithFrame:0.0, 0.0, 0.0, 0.0];
  *(void *)&v7[OBJC_IVAR____TtC8Freeform33CRLTransientRefollowHUDController_containerView] = v26;

  v28.receiver = v7;
  v28.super_class = (Class)type metadata accessor for CRLTransientRefollowHUDController();
  return [super init];
}

uint64_t sub_1009D5590()
{
  return _swift_deallocObject(v0, 24, 7);
}

void sub_1009D55C8(uint64_t a1)
{
  sub_1009D2A90(a1, *(void *)(v1 + 16));
}

uint64_t sub_1009D55D0()
{
  return sub_1009D5600((void (*)(void))&_swift_unknownObjectRelease);
}

uint64_t sub_1009D55E8()
{
  return sub_1009D5600((void (*)(void))&_swift_unknownObjectRelease);
}

uint64_t sub_1009D5600(void (*a1)(void))
{
  a1(*(void *)(v1 + 16));

  return _swift_deallocObject(v1, 32, 7);
}

uint64_t sub_1009D5668(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[25] = a3;
  v4[26] = a4;
  v4[23] = a1;
  v4[24] = a2;
  type metadata accessor for CRLBoardCRDTData(0);
  v4[27] = swift_task_alloc();
  type metadata accessor for UUID();
  v4[28] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for CRLBoardIdentifier(0);
  v4[29] = v5;
  v4[30] = *(void *)(v5 - 8);
  v4[31] = swift_task_alloc();
  sub_1005057FC(&qword_101691F20);
  v4[32] = swift_task_alloc();
  type metadata accessor for CRLBoardLibraryViewModel.Folder(0);
  v4[33] = swift_task_alloc();
  sub_1005057FC(&qword_101672C30);
  v4[34] = swift_task_alloc();
  return _swift_task_switch(sub_1009D5810, 0, 0);
}

uint64_t sub_1009D5810()
{
  if (*(void *)(v0 + 200))
  {
    *(void *)(v0 + 280) = *sub_10050F848(*(void **)(v0 + 208), *(void *)(*(void *)(v0 + 208) + 24));
    type metadata accessor for MainActor();
    *(void *)(v0 + 288) = static MainActor.shared.getter();
    uint64_t v1 = dispatch thunk of Actor.unownedExecutor.getter();
    uint64_t v3 = v2;
    uint64_t v4 = sub_1009D59E4;
    uint64_t v5 = v1;
    uint64_t v6 = v3;
  }
  else
  {
    id v7 = [self mainBundle];
    NSString v8 = String._bridgeToObjectiveC()();
    NSString v9 = String._bridgeToObjectiveC()();
    id v10 = [v7 localizedStringForKey:v8 value:v9 table:0];

    uint64_t v11 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v13 = v12;

    id v14 = *(void **)(v0 + 208);
    *(void *)(v0 + 296) = v13;
    *(void *)(v0 + 304) = v11;
    *(void *)(v0 + 312) = *sub_10050F848(v14, v14[3]);
    *(void *)(v0 + 320) = type metadata accessor for MainActor();
    *(void *)(v0 + 328) = static MainActor.shared.getter();
    *(void *)(v0 + 336) = static MainActor.shared.getter();
    uint64_t v15 = dispatch thunk of Actor.unownedExecutor.getter();
    uint64_t v6 = v16;
    *(void *)(v0 + 344) = v15;
    *(void *)(v0 + 352) = v16;
    uint64_t v4 = sub_1009D5C18;
    uint64_t v5 = v15;
  }
  return _swift_task_switch(v4, v5, v6);
}

uint64_t sub_1009D59E4()
{
  uint64_t v1 = v0[35];
  uint64_t v2 = (void *)v0[34];
  uint64_t v3 = v0[29];
  uint64_t v4 = v0[30];
  uint64_t v6 = v0[24];
  uint64_t v5 = v0[25];
  swift_release();
  id v7 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_store);
  (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(v4 + 56))(v2, 1, 1, v3);
  NSString v8 = v7;
  v0[20] = sub_1006F7E58(v6, v5, 0, v2, v8);
  v0[21] = v9;
  sub_100522F00(v0[34], &qword_101672C30);

  return _swift_task_switch(sub_1009D5B58, 0, 0);
}

uint64_t sub_1009D5B58()
{
  uint64_t v1 = v0[20];
  uint64_t v2 = (void *)v0[26];
  v0[37] = v0[21];
  v0[38] = v1;
  v0[39] = *sub_10050F848(v2, v2[3]);
  v0[40] = type metadata accessor for MainActor();
  v0[41] = static MainActor.shared.getter();
  v0[42] = static MainActor.shared.getter();
  uint64_t v4 = dispatch thunk of Actor.unownedExecutor.getter();
  v0[43] = v4;
  v0[44] = v3;
  return _swift_task_switch(sub_1009D5C18, v4, v3);
}

uint64_t sub_1009D5C18()
{
  uint64_t v1 = v0[39];
  uint64_t v2 = static MainActor.shared.getter();
  v0[45] = v2;
  uint64_t v3 = swift_task_alloc();
  v0[46] = v3;
  *(void *)(v3 + 16) = v1;
  uint64_t v4 = (void *)swift_task_alloc();
  v0[47] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_1009D5D1C;
  return withCheckedContinuation<A>(isolation:function:_:)(v4, v2, &protocol witness table for MainActor, 0xD00000000000001BLL, 0x8000000101240A20, sub_10062DB70, v3, (char *)&type metadata for () + 8);
}

uint64_t sub_1009D5D1C()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_release();
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 352);
  uint64_t v3 = *(void *)(v1 + 344);
  return _swift_task_switch(sub_1009D5E7C, v3, v2);
}

uint64_t sub_1009D5E7C()
{
  swift_release();
  uint64_t v1 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_1009D5F00, v1, v0);
}

uint64_t sub_1009D5F00()
{
  swift_release();
  return _swift_task_switch(sub_1009D5F68, 0, 0);
}

uint64_t sub_1009D5F68()
{
  uint64_t v1 = *(void *)(v0 + 264);
  sub_10050F848(*(void **)(v0 + 208), *(void *)(*(void *)(v0 + 208) + 24));
  uint64_t v2 = sub_1005057FC(&qword_101670F30);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(v1, 1, 5, v2);
  *(void *)(v0 + 384) = static MainActor.shared.getter();
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 392) = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_1009D607C;
  uint64_t v5 = *(void *)(v0 + 296);
  uint64_t v4 = *(void *)(v0 + 304);
  uint64_t v6 = *(void *)(v0 + 264);
  return sub_100EE1C1C(v6, v4, v5, 0, 0);
}

uint64_t sub_1009D607C(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 400) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = dispatch thunk of Actor.unownedExecutor.getter();
    uint64_t v7 = v6;
    uint64_t v8 = sub_1009D65D4;
  }
  else
  {
    *(void *)(v4 + 408) = a1;
    uint64_t v5 = dispatch thunk of Actor.unownedExecutor.getter();
    uint64_t v7 = v9;
    uint64_t v8 = sub_1009D61FC;
  }
  return _swift_task_switch(v8, v5, v7);
}

uint64_t sub_1009D61FC()
{
  uint64_t v1 = v0[51];
  uint64_t v2 = v0[33];
  swift_release();
  uint64_t v3 = *(void **)(*(void *)(v1 + 16) + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard);
  v0[52] = v3;
  id v4 = v3;
  swift_release();
  sub_1009D6C5C(v2, type metadata accessor for CRLBoardLibraryViewModel.Folder);
  swift_bridgeObjectRelease();
  return _swift_task_switch(sub_1009D62C0, 0, 0);
}

uint64_t sub_1009D62C0()
{
  uint64_t v1 = *(void *)(v0 + 416);
  uint64_t v2 = *(void *)(v0 + 248);
  uint64_t v4 = *(void *)(v0 + 216);
  uint64_t v3 = *(void *)(v0 + 224);
  sub_10050F848(*(void **)(v0 + 208), *(void *)(*(void *)(v0 + 208) + 24));
  uint64_t v5 = OBJC_IVAR____TtC8Freeform8CRLBoard_data;
  uint64_t v6 = *(void *)(v1 + OBJC_IVAR____TtC8Freeform8CRLBoard_data) + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
  swift_beginAccess();
  sub_100530898(v6, v4);
  swift_retain();
  sub_1005057FC(&qword_101674550);
  CRRegister.wrappedValue.getter();
  sub_1009D6C5C(v4, type metadata accessor for CRLBoardCRDTData);
  swift_release();
  uint64_t v7 = (uint64_t *)(*(void *)(v1 + v5) + OBJC_IVAR____TtC8Freeform12CRLBoardData_ownerName);
  uint64_t v8 = *v7;
  unint64_t v9 = v7[1];
  swift_bridgeObjectRetain();
  sub_100753370(v3, v8, v9, v2);
  *(void *)(v0 + 424) = static MainActor.shared.getter();
  id v14 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_1016A09D0 + dword_1016A09D0);
  id v10 = (void *)swift_task_alloc();
  *(void *)(v0 + 432) = v10;
  *id v10 = v0;
  v10[1] = sub_1009D647C;
  uint64_t v12 = *(void *)(v0 + 248);
  uint64_t v11 = *(void *)(v0 + 256);
  return v14(v11, v12);
}

uint64_t sub_1009D647C()
{
  *(void *)(*(void *)v1 + 440) = v0;
  swift_task_dealloc();
  uint64_t v3 = dispatch thunk of Actor.unownedExecutor.getter();
  if (v0) {
    uint64_t v4 = sub_1009D693C;
  }
  else {
    uint64_t v4 = sub_1009D670C;
  }
  return _swift_task_switch(v4, v3, v2);
}

uint64_t sub_1009D65D4()
{
  uint64_t v1 = *(void *)(v0 + 264);
  swift_release();
  sub_1009D6C5C(v1, type metadata accessor for CRLBoardLibraryViewModel.Folder);
  swift_bridgeObjectRelease();
  return _swift_task_switch(sub_1009D6668, 0, 0);
}

uint64_t sub_1009D6668()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1009D670C()
{
  uint64_t v1 = *(void *)(v0 + 248);
  swift_release();
  sub_1009D6C5C(v1, type metadata accessor for CRLBoardIdentifier);
  return _swift_task_switch(sub_1009D6794, 0, 0);
}

uint64_t sub_1009D6794()
{
  uint64_t v1 = v0[32];
  uint64_t v2 = type metadata accessor for CRLBoardEntity();
  int v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48))(v1, 1, v2);
  uint64_t v4 = (void *)v0[52];
  if (v3 == 1)
  {
    sub_100522F00(v1, &qword_101691F20);
    type metadata accessor for _PrebuiltAppIntentError();
    sub_1006FD4C4();
    swift_allocError();
    static _UnrecoverableError.entityNotFound.getter();
    swift_willThrow();
  }
  else
  {
    uint64_t v6 = v0[23];

    sub_1009D6CBC(v1, v6);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

uint64_t sub_1009D693C()
{
  swift_release();
  if (qword_10166FB50 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[31];
  swift_beginAccess();
  uint64_t v2 = (void *)static OS_os_log.appIntents;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117E810;
  swift_getErrorValue();
  uint64_t v4 = v0[18];
  uint64_t v5 = v0[19];
  id v6 = v2;
  uint64_t v7 = Error.publicDescription.getter(v4, v5);
  uint64_t v9 = v8;
  *(void *)(inited + 56) = &type metadata for String;
  *(void *)(inited + 64) = sub_100528BE4();
  *(void *)(inited + 32) = v7;
  *(void *)(inited + 40) = v9;
  uint64_t v10 = static os_log_type_t.error.getter();
  sub_100BAC898((uint64_t)v6, (uint64_t)&_mh_execute_header, v10, (uint64_t)"Error fetching entity for requested identifier: %@", 50, 2, inited);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  swift_willThrow();
  swift_errorRelease();
  sub_1009D6C5C(v1, type metadata accessor for CRLBoardIdentifier);
  return _swift_task_switch(sub_1009D6B20, 0, 0);
}

uint64_t sub_1009D6B20()
{
  uint64_t v1 = v0[32];
  uint64_t v2 = type metadata accessor for CRLBoardEntity();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(v1, 1, 1, v2);
  int v3 = (void *)v0[52];
  sub_100522F00(v0[32], &qword_101691F20);
  type metadata accessor for _PrebuiltAppIntentError();
  sub_1006FD4C4();
  swift_allocError();
  static _UnrecoverableError.entityNotFound.getter();
  swift_willThrow();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_1009D6C5C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1009D6CBC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CRLBoardEntity();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

ValueMetadata *type metadata accessor for CRLCreateBoardIntentPerformer()
{
  return &type metadata for CRLCreateBoardIntentPerformer;
}

uint64_t *CRLAccessibilityUtil.Announcements.MoreOptionsShown.unsafeMutableAddressor()
{
  if (qword_10166F678 != -1) {
    swift_once();
  }
  return &static CRLAccessibilityUtil.Announcements.MoreOptionsShown;
}

uint64_t *CRLAccessibilityUtil.Announcements.FewerOptionsShown.unsafeMutableAddressor()
{
  if (qword_10166F680 != -1) {
    swift_once();
  }
  return &static CRLAccessibilityUtil.Announcements.FewerOptionsShown;
}

void sub_1009D6DC8()
{
  id v0 = [self mainBundle];
  NSString v1 = String._bridgeToObjectiveC()();
  NSString v2 = String._bridgeToObjectiveC()();
  id v3 = [v0 localizedStringForKey:v1 value:v2 table:0];

  uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v6 = v5;

  static CRLAccessibilityUtil.Announcements.MoreOptionsShown = v4;
  *(void *)algn_10171B328 = v6;
}

uint64_t static CRLAccessibilityUtil.Announcements.MoreOptionsShown.getter()
{
  return sub_1009D6FC0(&qword_10166F678, &static CRLAccessibilityUtil.Announcements.MoreOptionsShown);
}

void sub_1009D6EC4()
{
  id v0 = [self mainBundle];
  NSString v1 = String._bridgeToObjectiveC()();
  NSString v2 = String._bridgeToObjectiveC()();
  id v3 = [v0 localizedStringForKey:v1 value:v2 table:0];

  uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v6 = v5;

  static CRLAccessibilityUtil.Announcements.FewerOptionsShown = v4;
  *(void *)algn_10171B338 = v6;
}

uint64_t static CRLAccessibilityUtil.Announcements.FewerOptionsShown.getter()
{
  return sub_1009D6FC0(&qword_10166F680, &static CRLAccessibilityUtil.Announcements.FewerOptionsShown);
}

uint64_t sub_1009D6FC0(void *a1, uint64_t *a2)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v3 = *a2;
  swift_bridgeObjectRetain();
  return v3;
}

uint64_t CRLAccessibilityUtil.deinit()
{
  return v0;
}

NSString sub_1009D701C()
{
  NSString result = String._bridgeToObjectiveC()();
  static NSAttributedStringKey.crlaxLowPitch = (uint64_t)result;
  return result;
}

uint64_t *NSAttributedStringKey.crlaxLowPitch.unsafeMutableAddressor()
{
  if (qword_10166F688 != -1) {
    swift_once();
  }
  return &static NSAttributedStringKey.crlaxLowPitch;
}

id static NSAttributedStringKey.crlaxLowPitch.getter()
{
  if (qword_10166F688 != -1) {
    swift_once();
  }
  uint64_t v0 = (void *)static NSAttributedStringKey.crlaxLowPitch;

  return v0;
}

uint64_t sub_1009D7100(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1)
  {
    uint64_t v3 = _swiftEmptyArrayStorage;
    double v9 = _swiftEmptyArrayStorage[2];
    if (v9 == 0.0) {
      goto LABEL_22;
    }
    goto LABEL_11;
  }
  NSString v2 = (uint64_t *)(swift_bridgeObjectRetain() + 40);
  uint64_t v3 = _swiftEmptyArrayStorage;
  do
  {
    uint64_t v5 = *v2;
    if (*v2)
    {
      uint64_t v6 = *(v2 - 1);
      swift_bridgeObjectRetain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v3 = sub_100F61B70(0, *((void *)v3 + 2) + 1, 1, v3);
      }
      unint64_t v8 = *((void *)v3 + 2);
      unint64_t v7 = *((void *)v3 + 3);
      if (v8 >= v7 >> 1) {
        uint64_t v3 = sub_100F61B70((double *)(v7 > 1), v8 + 1, 1, v3);
      }
      *((void *)v3 + 2) = v8 + 1;
      uint64_t v4 = &v3[2 * v8];
      *((void *)v4 + 4) = v6;
      *((void *)v4 + 5) = v5;
    }
    v2 += 2;
    --v1;
  }
  while (v1);
  swift_bridgeObjectRelease();
  double v9 = v3[2];
  if (v9 != 0.0)
  {
LABEL_11:
    uint64_t v10 = (uint64_t *)(v3 + 5);
    do
    {
      uint64_t v15 = *(v10 - 1);
      uint64_t v14 = *v10;
      uint64_t v16 = HIBYTE(*v10) & 0xF;
      if ((*v10 & 0x2000000000000000) == 0) {
        uint64_t v16 = v15 & 0xFFFFFFFFFFFFLL;
      }
      if (v16)
      {
        swift_bridgeObjectRetain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          sub_1006BB504(0, *(void *)&_swiftEmptyArrayStorage[2] + 1, 1);
        }
        double v12 = _swiftEmptyArrayStorage[2];
        double v11 = _swiftEmptyArrayStorage[3];
        if (*(void *)&v12 >= *(void *)&v11 >> 1) {
          sub_1006BB504(*(void *)&v11 > 1uLL, *(void *)&v12 + 1, 1);
        }
        *(void *)&_swiftEmptyArrayStorage[2] = *(void *)&v12 + 1;
        uint64_t v13 = &_swiftEmptyArrayStorage[2 * *(void *)&v12];
        *((void *)v13 + 4) = v15;
        *((void *)v13 + 5) = v14;
      }
      v10 += 2;
      --*(void *)&v9;
    }
    while (v9 != 0.0);
  }
LABEL_22:
  swift_bridgeObjectRelease();
  sub_1005057FC((uint64_t *)&unk_1016773F0);
  sub_10056547C();
  uint64_t v17 = BidirectionalCollection<>.joined(separator:)();
  swift_release();
  return v17;
}

uint64_t _sSo15NSDateFormatterC8FreeformE37crlaxVoiceOverPronounceableTimeString3forSSSg10Foundation4DateV_tFZ_0()
{
  uint64_t v0 = sub_1005057FC(&qword_1016741B8);
  __chkstk_darwin(v0 - 8, v1);
  uint64_t v110 = (char *)&v109 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for Locale();
  uint64_t v112 = *(void *)(v3 - 8);
  uint64_t v113 = v3;
  __chkstk_darwin(v3, v4);
  id v111 = (char *)&v109 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for Date();
  uint64_t v116 = *(void *)(v6 - 8);
  uint64_t v117 = v6;
  __chkstk_darwin(v6, v7);
  double v9 = (char *)&v109 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for Calendar();
  uint64_t v114 = *(void *)(v10 - 8);
  uint64_t v115 = v10;
  __chkstk_darwin(v10, v11);
  uint64_t v13 = (char *)&v109 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v118 = type metadata accessor for DateComponents();
  uint64_t v14 = *(void *)(v118 - 8);
  __chkstk_darwin(v118, v15);
  uint64_t v17 = (char *)&v109 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Calendar.current.getter();
  sub_1005057FC(&qword_101672F48);
  uint64_t v18 = type metadata accessor for Calendar.Component();
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = *(void *)(v19 + 72);
  unint64_t v21 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  uint64_t v22 = swift_allocObject();
  long long v109 = xmmword_10117D8C0;
  *(_OWORD *)(v22 + 16) = xmmword_10117D8C0;
  unint64_t v23 = v22 + v21;
  id v24 = *(void (**)(unint64_t, void, uint64_t))(v19 + 104);
  v24(v23, enum case for Calendar.Component.hour(_:), v18);
  v24(v23 + v20, enum case for Calendar.Component.minute(_:), v18);
  sub_100508274(v22);
  swift_setDeallocating();
  swift_arrayDestroy();
  id v25 = v17;
  swift_deallocClassInstance();
  static Date.now.getter();
  Calendar.dateComponents(_:from:)();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v116 + 8))(v9, v117);
  (*(void (**)(char *, uint64_t))(v114 + 8))(v13, v115);
  uint64_t v26 = DateComponents.hour.getter();
  uint64_t v27 = v118;
  uint64_t v28 = 0;
  if ((v29 & 1) == 0)
  {
    uint64_t v30 = v26;
    uint64_t v117 = v14;
    uint64_t v31 = DateComponents.minute.getter();
    if (v32)
    {
      uint64_t v28 = 0;
      goto LABEL_31;
    }
    uint64_t v33 = v31;
    NSString v34 = self;
    NSString v35 = String._bridgeToObjectiveC()();
    id v36 = [self currentLocale];
    id v37 = v111;
    static Locale._unconditionallyBridgeFromObjectiveC(_:)();

    Class isa = Locale._bridgeToObjectiveC()().super.isa;
    uint64_t v39 = v112;
    uint64_t v40 = v37;
    uint64_t v41 = v113;
    (*(void (**)(char *, uint64_t))(v112 + 8))(v40, v113);
    id v42 = [v34 dateFormatFromTemplate:v35 options:0 locale:isa];

    if (!v42) {
      goto LABEL_7;
    }
    uint64_t v43 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v45 = v44;

    uint64_t v121 = v43;
    uint64_t v122 = v45;
    uint64_t v119 = 97;
    unint64_t v120 = 0xE100000000000000;
    uint64_t v46 = (uint64_t)v110;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v39 + 56))(v110, 1, 1, v41);
    sub_10052E310();
    StringProtocol.range<A>(of:options:range:locale:)();
    LOBYTE(v43) = v47;
    sub_100861DD4(v46);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v43) {
LABEL_7:
    }
      int v48 = 0;
    else {
      int v48 = 1;
    }
    if (v30 >= 12)
    {
      id v57 = [self mainBundle];
      NSString v58 = String._bridgeToObjectiveC()();
      NSString v59 = String._bridgeToObjectiveC()();
      id v60 = [v57 localizedStringForKey:v58 value:v59 table:0];

      uint64_t v53 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v55 = v61;

      if ((v48 & 1) == 0) {
        goto LABEL_10;
      }
    }
    else
    {
      id v49 = [self mainBundle];
      NSString v50 = String._bridgeToObjectiveC()();
      NSString v51 = String._bridgeToObjectiveC()();
      id v52 = [v49 localizedStringForKey:v50 value:v51 table:0];

      uint64_t v53 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v55 = v54;

      if (!v48)
      {
LABEL_10:
        if (v33)
        {
          uint64_t v116 = v53;
          int v56 = 0;
LABEL_18:
          uint64_t v121 = v30;
          uint64_t v62 = dispatch thunk of CustomStringConvertible.description.getter();
          uint64_t v64 = v63;
          sub_1005057FC((uint64_t *)&unk_101672B40);
          uint64_t v65 = swift_allocObject();
          *(_OWORD *)(v65 + 16) = xmmword_10117E810;
          *(void *)(v65 + 56) = &type metadata for Int;
          *(void *)(v65 + 64) = &protocol witness table for Int;
          *(void *)(v65 + 32) = v33;
          uint64_t v66 = String.init(format:_:)();
          uint64_t v68 = v67;
          if (v56)
          {
            id v69 = [self mainBundle];
            NSString v70 = String._bridgeToObjectiveC()();
            NSString v71 = String._bridgeToObjectiveC()();
            uint64_t v115 = v55;
            id v72 = v25;
            id v73 = v71;
            id v74 = [v69 localizedStringForKey:v70 value:v71 table:0];

            id v25 = v72;
            static String._unconditionallyBridgeFromObjectiveC(_:)();

            uint64_t v75 = swift_allocObject();
            *(_OWORD *)(v75 + 16) = xmmword_10117DF40;
            *(void *)(v75 + 56) = &type metadata for String;
            unint64_t v76 = sub_100528BE4();
            *(void *)(v75 + 32) = v62;
            *(void *)(v75 + 40) = v64;
            *(void *)(v75 + 96) = &type metadata for String;
            *(void *)(v75 + 104) = v76;
            *(void *)(v75 + 64) = v76;
            *(void *)(v75 + 72) = v66;
            *(void *)(v75 + 80) = v68;
            *(void *)(v75 + 136) = &type metadata for String;
            *(void *)(v75 + 144) = v76;
            uint64_t v77 = v115;
            *(void *)(v75 + 112) = v116;
            *(void *)(v75 + 120) = v77;
          }
          else
          {
            swift_bridgeObjectRelease();
            id v78 = [self mainBundle];
            NSString v79 = String._bridgeToObjectiveC()();
            NSString v80 = String._bridgeToObjectiveC()();
            id v81 = [v78 localizedStringForKey:v79 value:v80 table:0];

            static String._unconditionallyBridgeFromObjectiveC(_:)();
            uint64_t v82 = swift_allocObject();
            *(_OWORD *)(v82 + 16) = v109;
            *(void *)(v82 + 56) = &type metadata for String;
            unint64_t v83 = sub_100528BE4();
            *(void *)(v82 + 32) = v62;
            *(void *)(v82 + 40) = v64;
            *(void *)(v82 + 96) = &type metadata for String;
            *(void *)(v82 + 104) = v83;
            *(void *)(v82 + 64) = v83;
            *(void *)(v82 + 72) = v66;
            *(void *)(v82 + 80) = v68;
          }
          uint64_t v28 = static String.localizedStringWithFormat(_:_:)();
          swift_bridgeObjectRelease();
          goto LABEL_30;
        }
        uint64_t v116 = (uint64_t)v25;
        id v84 = [self mainBundle];
        NSString v85 = String._bridgeToObjectiveC()();
        NSString v86 = String._bridgeToObjectiveC()();
        id v87 = [v84 localizedStringForKey:v85 value:v86 table:0];

        uint64_t v88 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        swift_bridgeObjectRelease();

        if (v30)
        {
          uint64_t v115 = v88;
          id v89 = [self mainBundle];
          NSString v90 = String._bridgeToObjectiveC()();
          NSString v91 = String._bridgeToObjectiveC()();
          id v92 = [v89 localizedStringForKey:v90 value:v91 table:0];

          static String._unconditionallyBridgeFromObjectiveC(_:)();
          id v25 = (char *)v116;
          if (v30 > 9)
          {
            swift_bridgeObjectRelease();
            uint64_t v121 = v30;
            uint64_t v94 = dispatch thunk of CustomStringConvertible.description.getter();
            uint64_t v96 = v106;
          }
          else
          {
            sub_1005057FC((uint64_t *)&unk_101672B40);
            uint64_t v93 = swift_allocObject();
            *(_OWORD *)(v93 + 16) = xmmword_10117E810;
            *(void *)(v93 + 56) = &type metadata for Int;
            *(void *)(v93 + 64) = &protocol witness table for Int;
            *(void *)(v93 + 32) = v30;
            uint64_t v94 = static String.localizedStringWithFormat(_:_:)();
            uint64_t v96 = v95;
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          sub_1005057FC((uint64_t *)&unk_101672B40);
          uint64_t v107 = swift_allocObject();
          *(_OWORD *)(v107 + 16) = xmmword_10117E810;
          *(void *)(v107 + 56) = &type metadata for String;
          *(void *)(v107 + 64) = sub_100528BE4();
          *(void *)(v107 + 32) = v94;
          *(void *)(v107 + 40) = v96;
          uint64_t v28 = static String.localizedStringWithFormat(_:_:)();
          goto LABEL_29;
        }
        swift_bridgeObjectRelease();
        id v102 = [self mainBundle];
        NSString v103 = String._bridgeToObjectiveC()();
        NSString v104 = String._bridgeToObjectiveC()();
        id v105 = [v102 localizedStringForKey:v103 value:v104 table:0];

        uint64_t v28 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        id v25 = (char *)v116;
LABEL_31:
        uint64_t v14 = v117;
        uint64_t v27 = v118;
        goto LABEL_32;
      }
    }
    if (v30 % 12) {
      v30 %= 12;
    }
    else {
      uint64_t v30 = 12;
    }
    if (v33)
    {
      uint64_t v116 = v53;
      int v56 = 1;
      goto LABEL_18;
    }
    id v97 = [self mainBundle];
    NSString v98 = String._bridgeToObjectiveC()();
    NSString v99 = String._bridgeToObjectiveC()();
    id v100 = [v97 localizedStringForKey:v98 value:v99 table:0];

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t v101 = swift_allocObject();
    *(_OWORD *)(v101 + 16) = v109;
    *(void *)(v101 + 56) = &type metadata for Int;
    *(void *)(v101 + 64) = &protocol witness table for Int;
    *(void *)(v101 + 32) = v30;
    *(void *)(v101 + 96) = &type metadata for String;
    *(void *)(v101 + 104) = sub_100528BE4();
    *(void *)(v101 + 72) = v53;
    *(void *)(v101 + 80) = v55;
    uint64_t v28 = static String.localizedStringWithFormat(_:_:)();
LABEL_29:
    swift_bridgeObjectRelease();
LABEL_30:
    swift_bridgeObjectRelease();
    goto LABEL_31;
  }
LABEL_32:
  (*(void (**)(char *, uint64_t))(v14 + 8))(v25, v27);
  return v28;
}

uint64_t type metadata accessor for CRLAccessibilityUtil()
{
  return self;
}

ValueMetadata *type metadata accessor for CRLAccessibilityUtil.Announcements()
{
  return &type metadata for CRLAccessibilityUtil.Announcements;
}

uint64_t sub_1009D815C()
{
  id v0 = [self mainBundle];
  NSString v1 = String._bridgeToObjectiveC()();
  NSString v2 = String._bridgeToObjectiveC()();
  id v3 = [v0 localizedStringForKey:v1 value:v2 table:0];

  uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  return v4;
}

char *sub_1009D823C(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, void *a5, void *a6)
{
  *(void *)&v6[OBJC_IVAR____TtC8Freeform32CRLiOSMiniFormatterStrokeBuilder_strokeWidthLabel] = 0;
  uint64_t v13 = (char *)objc_allocWithZone((Class)type metadata accessor for CRLMiniFormatterStrokeDataProvider());
  uint64_t v14 = &v13[OBJC_IVAR____TtC8Freeform34CRLMiniFormatterStrokeDataProvider_strokeChangingState];
  *(void *)uint64_t v14 = 0;
  v14[8] = 1;
  *(void *)&v13[OBJC_IVAR____TtC8Freeform28CRLMiniFormatterDataProvider_editorController] = a5;
  v25.receiver = v13;
  v25.super_class = (Class)type metadata accessor for CRLMiniFormatterDataProvider();
  uint64_t v15 = v6;
  id v16 = a5;
  *(void *)&v15[OBJC_IVAR____TtC8Freeform32CRLiOSMiniFormatterStrokeBuilder_dataProvider] = [super init];

  id v17 = a6;
  id v18 = v16;
  swift_unknownObjectRetain();
  id v19 = a4;
  uint64_t v20 = (char *)sub_100521CB4(a1, a2, a3, v19, v18, a6);
  swift_unknownObjectRelease();

  unint64_t v21 = *(void **)&v20[OBJC_IVAR____TtC8Freeform32CRLiOSMiniFormatterStrokeBuilder_dataProvider];
  uint64_t v22 = v20;
  id v23 = v21;
  sub_1008E2764();

  swift_unknownObjectRelease();
  return v22;
}

id sub_1009D83AC()
{
  id v0 = (void *)sub_1008E2994();
  if (v0 != (void *)1)
  {
    char v2 = v1;
    sub_100522AD8(v0);
    if (v2)
    {
      NSString v14 = String._bridgeToObjectiveC()();
      id v15 = [self imageNamed:v14];

      if (v15)
      {
        id v16 = [self labelColor];
        uint64_t v10 = (UIImage *)[v15 imageWithTintColor:v16];
      }
      else
      {
        uint64_t v10 = 0;
      }
      id v20 = [self mainBundle];
      NSString v21 = String._bridgeToObjectiveC()();
      NSString v22 = String._bridgeToObjectiveC()();
      id v23 = [v20 localizedStringForKey:v21 value:v22 table:0];
      goto LABEL_15;
    }
  }
  id v3 = (void *)sub_1008E2AE4();
  if ((unint64_t)v3 < 2)
  {
LABEL_12:
    id v17 = [self mainScreen];
    id v18 = [v17 traitCollection];

    [v18 crl_isUserInterfaceStyleDark];
    NSString v19 = String._bridgeToObjectiveC()();
    uint64_t v10 = (UIImage *)[self imageNamed:v19];

    id v20 = [self mainBundle];
    NSString v21 = String._bridgeToObjectiveC()();
    NSString v22 = String._bridgeToObjectiveC()();
    id v23 = [v20 localizedStringForKey:v21 value:v22 table:0];
LABEL_15:
    id v6 = v23;

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    goto LABEL_22;
  }
  uint64_t v4 = v3;
  id v5 = [v3 UIColor];
  if (!v5)
  {
    sub_100522AD8(v4);
    goto LABEL_12;
  }
  id v6 = v5;
  NSString v7 = String._bridgeToObjectiveC()();
  uint64_t v8 = self;
  id v9 = [v8 imageNamed:v7];

  if (v9)
  {
    uint64_t v10 = (UIImage *)[v9 imageWithTintColor:v6];

    if (v10)
    {
      uint64_t v11 = v10;
      if (sub_100B04AD8())
      {
        id v12 = [self mainScreen];
        id v13 = [v12 traitCollection];

        [v13 crl_isUserInterfaceStyleDark];
        NSString v24 = String._bridgeToObjectiveC()();
        uint64_t v10 = (UIImage *)[v8 imageNamed:v24];

        if (v10)
        {
          objc_super v25 = v10;
          uint64_t v10 = sub_100A55ED8(v11);

          uint64_t v11 = v25;
        }
      }
    }
  }
  else
  {
    uint64_t v10 = 0;
  }
  id v26 = [self mainBundle];
  NSString v27 = String._bridgeToObjectiveC()();
  NSString v28 = String._bridgeToObjectiveC()();
  id v29 = [v26 localizedStringForKey:v27 value:v28 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t v30 = swift_allocObject();
  *(_OWORD *)(v30 + 16) = xmmword_10117E810;
  id v31 = [v6 accessibilityName];
  uint64_t v32 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v34 = v33;

  *(void *)(v30 + 56) = &type metadata for String;
  *(void *)(v30 + 64) = sub_100528BE4();
  *(void *)(v30 + 32) = v32;
  *(void *)(v30 + 40) = v34;
  static String.localizedStringWithFormat(_:_:)();
  sub_100522AD8(v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_22:

  sub_10050BF48(0, (unint64_t *)&qword_101672600);
  uint64_t v35 = swift_allocObject();
  swift_unknownObjectWeakInit();
  id v36 = v10;
  uint64_t v43 = 0;
  uint64_t v44 = 0;
  uint64_t v46 = sub_100523390;
  uint64_t v47 = v35;
  uint64_t v45 = 0;
  id v37 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
  id v38 = sub_10051C358(v37, 0, v10, 0);

  if (v10) {
    id v39 = -[UIImage crl_imageWithAlpha:renderingMode:](v36, "crl_imageWithAlpha:renderingMode:", 0, 0.4, 0, 0, 0, sub_100523390, v47);
  }
  else {
    id v39 = 0;
  }
  [v38 setImage:v39 forState:1 v43, v44, v45, v46, v47];
  [v38 setImage:v36 forState:0];
  id v40 = v38;
  NSString v41 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v40 setAccessibilityValue:v41];

  return v40;
}

id sub_1009D8AFC()
{
  sub_1005057FC((uint64_t *)&unk_101676C10);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_101177E70;
  *(void *)(v0 + 32) = sub_1009D8CB4();
  specialized Array._endMutation()();
  char v1 = (void *)sub_1008E2994();
  if (v1)
  {
    if (v1 != (void *)1)
    {
      sub_100522AD8(v1);
      sub_1009DA3B4();
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)((v0 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v0 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
    }
  }
  else
  {
    sub_100522AD8(0);
  }
  id v2 = objc_allocWithZone((Class)UIStackView);
  sub_10050BF48(0, (unint64_t *)&qword_1016725F0);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v4 = [v2 initWithArrangedSubviews:isa];

  [v4 setAxis:1];
  if (qword_10166EB58 != -1) {
    swift_once();
  }
  [v4 setSpacing:*(double *)&qword_101719DD8];
  return v4;
}

id sub_1009D8CB4()
{
  char v1 = v0;
  uint64_t v2 = sub_1005057FC(&qword_101673A90);
  __chkstk_darwin(v2 - 8, v3);
  id v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for IndexSet();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6, v8);
  uint64_t v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1008E2994();
  if (v11 == 1) {
    id v12 = 0;
  }
  else {
    id v12 = (void *)v11;
  }
  id v13 = (void *)sub_1008E297C();
  id v21 = v12;
  if (v13 != (void *)1 && (char v15 = v14, v13, (v15 & 1) != 0))
  {
    IndexSet.init()();
  }
  else
  {
    sub_1009D99AC(v12);
    IndexSet.init(integer:)();
  }
  sub_1009D8F6C();
  *(void *)(swift_allocObject() + 16) = v1;
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v5, v10, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v5, 0, 1, v6);
  id v16 = v1;
  swift_bridgeObjectRetain();
  id v17 = sub_10051DB44();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease_n();
  sub_100522F00((uint64_t)v5, &qword_101673A90);
  id v18 = (void *)sub_1008E2994();
  if (!v18)
  {
    sub_100522AD8(0);
    goto LABEL_12;
  }
  if (v18 == (void *)1)
  {
LABEL_12:
    UIAccessibilityPostNotification(UIAccessibilityLayoutChangedNotification, v17);

    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
    return v17;
  }
  sub_100522AD8(v18);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);

  return v17;
}

double *sub_1009D8F6C()
{
  uint64_t v0 = _swiftEmptyArrayStorage;
  if ((sub_1008E2C5C() & 1) == 0)
  {
    NSString v1 = String._bridgeToObjectiveC()();
    id v2 = [self imageNamed:v1];

    if (v2)
    {
      id v3 = v2;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
      id v4 = [self mainBundle];
      NSString v5 = String._bridgeToObjectiveC()();
      NSString v6 = String._bridgeToObjectiveC()();
      id v7 = [v4 localizedStringForKey:v5 value:v6 table:0];

      uint64_t v8 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v10 = v9;

      uint64_t v0 = sub_100F61B70(0, 1, 1, _swiftEmptyArrayStorage);
      unint64_t v12 = *((void *)v0 + 2);
      unint64_t v11 = *((void *)v0 + 3);
      if (v12 >= v11 >> 1) {
        uint64_t v0 = sub_100F61B70((double *)(v11 > 1), v12 + 1, 1, v0);
      }
      *((void *)v0 + 2) = v12 + 1;
      id v13 = &v0[2 * v12];
      *((void *)v13 + 4) = v8;
      *((void *)v13 + 5) = v10;
    }
    else
    {
      uint64_t v0 = _swiftEmptyArrayStorage;
    }
  }
  NSString v14 = String._bridgeToObjectiveC()();
  char v15 = self;
  id v16 = [v15 imageNamed:v14];

  if (v16)
  {
    id v17 = v16;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
    id v18 = [self mainBundle];
    NSString v19 = String._bridgeToObjectiveC()();
    NSString v20 = String._bridgeToObjectiveC()();
    id v21 = [v18 localizedStringForKey:v19 value:v20 table:0];

    uint64_t v22 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v24 = v23;

    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v0 = sub_100F61B70(0, *((void *)v0 + 2) + 1, 1, v0);
    }
    unint64_t v26 = *((void *)v0 + 2);
    unint64_t v25 = *((void *)v0 + 3);
    if (v26 >= v25 >> 1) {
      uint64_t v0 = sub_100F61B70((double *)(v25 > 1), v26 + 1, 1, v0);
    }
    *((void *)v0 + 2) = v26 + 1;
    NSString v27 = &v0[2 * v26];
    *((void *)v27 + 4) = v22;
    *((void *)v27 + 5) = v24;
  }
  NSString v28 = String._bridgeToObjectiveC()();
  id v29 = [v15 imageNamed:v28];

  if (v29)
  {
    id v30 = v29;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
    id v31 = [self mainBundle];
    NSString v32 = String._bridgeToObjectiveC()();
    NSString v33 = String._bridgeToObjectiveC()();
    id v34 = [v31 localizedStringForKey:v32 value:v33 table:0];

    uint64_t v35 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v37 = v36;

    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v0 = sub_100F61B70(0, *((void *)v0 + 2) + 1, 1, v0);
    }
    unint64_t v39 = *((void *)v0 + 2);
    unint64_t v38 = *((void *)v0 + 3);
    if (v39 >= v38 >> 1) {
      uint64_t v0 = sub_100F61B70((double *)(v38 > 1), v39 + 1, 1, v0);
    }
    *((void *)v0 + 2) = v39 + 1;
    id v40 = &v0[2 * v39];
    *((void *)v40 + 4) = v35;
    *((void *)v40 + 5) = v37;
  }
  NSString v41 = String._bridgeToObjectiveC()();
  id v42 = [v15 imageNamed:v41];

  if (v42)
  {
    id v43 = v42;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
    id v44 = [self mainBundle];
    NSString v45 = String._bridgeToObjectiveC()();
    NSString v46 = String._bridgeToObjectiveC()();
    id v47 = [v44 localizedStringForKey:v45 value:v46 table:0];

    uint64_t v48 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v50 = v49;

    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v0 = sub_100F61B70(0, *((void *)v0 + 2) + 1, 1, v0);
    }
    unint64_t v52 = *((void *)v0 + 2);
    unint64_t v51 = *((void *)v0 + 3);
    if (v52 >= v51 >> 1) {
      uint64_t v0 = sub_100F61B70((double *)(v51 > 1), v52 + 1, 1, v0);
    }
    *((void *)v0 + 2) = v52 + 1;
    uint64_t v53 = &v0[2 * v52];
    *((void *)v53 + 4) = v48;
    *((void *)v53 + 5) = v50;
  }
  NSString v54 = String._bridgeToObjectiveC()();
  id v55 = [v15 imageNamed:v54];

  if (v55)
  {
    id v56 = v55;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
    id v57 = [self mainBundle];
    NSString v58 = String._bridgeToObjectiveC()();
    NSString v59 = String._bridgeToObjectiveC()();
    id v60 = [v57 localizedStringForKey:v58 value:v59 table:0];

    uint64_t v61 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v63 = v62;

    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v0 = sub_100F61B70(0, *((void *)v0 + 2) + 1, 1, v0);
    }
    unint64_t v65 = *((void *)v0 + 2);
    unint64_t v64 = *((void *)v0 + 3);
    if (v65 >= v64 >> 1) {
      uint64_t v0 = sub_100F61B70((double *)(v64 > 1), v65 + 1, 1, v0);
    }
    *((void *)v0 + 2) = v65 + 1;
    uint64_t v66 = &v0[2 * v65];
    *((void *)v66 + 4) = v61;
    *((void *)v66 + 5) = v63;
  }
  return _swiftEmptyArrayStorage;
}

id sub_1009D9898(uint64_t a1)
{
  if ((sub_1008E2C5C() & 1) != 0 && __OFADD__(a1++, 1))
  {
    __break(1u);
    JUMPOUT(0x1009D999CLL);
  }
  switch(a1)
  {
    case 1:
      id v3 = [self solidPattern];
      return v3;
    case 2:
      id v3 = [self roundDashPattern];
      return v3;
    case 3:
      id v3 = [self shortDashPattern];
      return v3;
    case 4:
      static String._unconditionallyBridgeFromObjectiveC(_:)();
      return 0;
    default:
      return 0;
  }
}

void *sub_1009D99AC(void *result)
{
  if (result)
  {
    NSString v1 = result;
    self;
    id v2 = (void *)swift_dynamicCastObjCClass();
    id v3 = v1;
    id v4 = v3;
    if (v2)
    {
      id v5 = v3;
      id v6 = [v2 strokeName];
      uint64_t v7 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v9 = v8;

      if (v7 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v9 == v10)
      {
        swift_bridgeObjectRelease_n();

        uint64_t v13 = 4;
        goto LABEL_17;
      }
      char v12 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      if (v12)
      {
        uint64_t v13 = 4;
LABEL_17:
        char v22 = sub_1008E2C5C();

        return (void *)(v13 - (v22 & 1));
      }
    }
    id v14 = [v4 pattern];
    sub_10050BF48(0, (unint64_t *)&qword_101672E50);
    char v15 = self;
    id v16 = [v15 solidPattern];
    char v17 = static NSObject.== infix(_:_:)();

    if (v17)
    {

      uint64_t v13 = 1;
    }
    else
    {
      id v18 = [v15 roundDashPattern];
      char v19 = static NSObject.== infix(_:_:)();

      if (v19)
      {

        uint64_t v13 = 2;
      }
      else
      {
        id v20 = [v15 shortDashPattern];
        char v21 = static NSObject.== infix(_:_:)();

        if (v21) {
          uint64_t v13 = 3;
        }
        else {
          uint64_t v13 = 0;
        }
      }
    }
    goto LABEL_17;
  }
  return result;
}

void sub_1009D9BE0()
{
  uint64_t v1 = sub_1009D9DFC();
  if (v2) {
    return;
  }
  uint64_t v3 = v1;
  uint64_t v4 = *(void *)(v0 + OBJC_IVAR____TtC8Freeform32CRLiOSMiniFormatterStrokeBuilder_dataProvider);
  id v5 = (void *)sub_1008E2994();
  if (v5)
  {
    if (v5 != (void *)1) {
      sub_100522AD8(v5);
    }
  }
  else
  {
    id v6 = (void *)sub_1008E2878();
    if (v6)
    {
      uint64_t v7 = v6;
      id v19 = [v6 color];
      [v7 width];
      uint64_t v9 = v8;

      char v10 = 0;
      uint64_t v11 = v9;
      goto LABEL_8;
    }
  }
  id v19 = 0;
  uint64_t v11 = 0;
  char v10 = 1;
LABEL_8:
  id v12 = sub_1009D9898(v3);
  uint64_t v15 = v14;
  if (v12)
  {
    id v16 = v12;
    sub_1008E2324((uint64_t)v16, v11, v10, v19);

    swift_bridgeObjectRelease();
  }
  else if (v14)
  {
    uint64_t v17 = v13;
    swift_bridgeObjectRetain();
    sub_1008E250C(v17, v15, v11, v10, v19);
    swift_bridgeObjectRelease_n();
  }
  else
  {
    if ([*(id *)(v4 + OBJC_IVAR____TtC8Freeform28CRLMiniFormatterDataProvider_editorController) mostSpecificEditorConformingToProtocol:&OBJC_PROTOCOL___CRLStrokeEditor])
    {
      id v18 = (void *)swift_dynamicCastObjCProtocolConditional();
      if (v18) {
        [v18 applyStroke:0];
      }
      swift_unknownObjectRelease();
    }
    sub_1008E2764();
  }
}

uint64_t sub_1009D9DFC()
{
  uint64_t v1 = type metadata accessor for IndexSet.Index();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1, v3);
  uint64_t v48 = (char *)v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5, v6);
  uint64_t v8 = (char *)v37 - v7;
  uint64_t v9 = type metadata accessor for IndexSet();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9, v11);
  uint64_t v13 = (char *)v37 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1005057FC(&qword_101689838);
  uint64_t v15 = v14 - 8;
  __n128 v17 = __chkstk_darwin(v14, v16);
  id v19 = (char *)v37 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = v10;
  id v42 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v10 + 16);
  uint64_t v43 = v10 + 16;
  v42(v13, v0, v9, v17);
  sub_1009DB608((unint64_t *)&unk_10168A9B0, (void (*)(uint64_t))&type metadata accessor for IndexSet);
  id v44 = v13;
  dispatch thunk of Sequence.makeIterator()();
  id v20 = &v19[*(int *)(v15 + 44)];
  id v40 = *(void (**)(char *, char *, uint64_t))(v2 + 16);
  uint64_t v41 = v2 + 16;
  v40(v8, v20, v1);
  sub_1009DB608(&qword_101689840, (void (*)(uint64_t))&type metadata accessor for IndexSet);
  char v21 = v48;
  dispatch thunk of Collection.endIndex.getter();
  uint64_t v39 = sub_1009DB608(&qword_10168A9C0, (void (*)(uint64_t))&type metadata accessor for IndexSet.Index);
  int v22 = dispatch thunk of static Equatable.== infix(_:_:)();
  uint64_t v23 = *(void (**)(char *, uint64_t))(v2 + 8);
  v23(v21, v1);
  NSString v45 = v8;
  uint64_t v46 = v2 + 8;
  v23(v8, v1);
  uint64_t v24 = 0;
  if ((v22 & 1) == 0)
  {
    v37[1] = v22;
    unint64_t v25 = (void (*)(unsigned char *, void))dispatch thunk of Collection.subscript.read();
    uint64_t v24 = *v26;
    v25(v49, 0);
    NSString v27 = v44;
    ((void (*)(char *, char *, uint64_t))v42)(v44, v19, v9);
    dispatch thunk of Collection.formIndex(after:)();
    NSString v28 = *(void (**)(char *, uint64_t))(v47 + 8);
    v47 += 8;
    unint64_t v38 = v28;
    v28(v27, v9);
    id v29 = v45;
    while (1)
    {
      v40(v29, v20, v1);
      id v30 = v48;
      dispatch thunk of Collection.endIndex.getter();
      char v31 = dispatch thunk of static Equatable.== infix(_:_:)();
      v23(v30, v1);
      v23(v29, v1);
      if (v31) {
        break;
      }
      NSString v32 = (void (*)(unsigned char *, void))dispatch thunk of Collection.subscript.read();
      uint64_t v34 = *v33;
      v32(v49, 0);
      uint64_t v35 = v44;
      ((void (*)(char *, char *, uint64_t))v42)(v44, v19, v9);
      dispatch thunk of Collection.formIndex(after:)();
      v38(v35, v9);
      if (v34 < v24) {
        uint64_t v24 = v34;
      }
    }
  }
  sub_100522F00((uint64_t)v19, &qword_101689838);
  return v24;
}

id sub_1009DA3B4()
{
  uint64_t v0 = (void *)sub_1008E2AE4();
  if (v0 == (void *)1 || (uint64_t v2 = v0) == 0)
  {
    Class v7 = 0;
  }
  else
  {
    char v3 = v1;
    id v4 = v0;
    sub_1008E2C5C();
    id v5 = [self mainBundle];
    NSString v6 = String._bridgeToObjectiveC()();
    NSString v8 = String._bridgeToObjectiveC()();
    id v9 = [v5 localizedStringForKey:v6 value:v8 table:0];

    uint64_t v10 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v12 = v11;

    if (v3)
    {
      NSString v14 = String._bridgeToObjectiveC()();
      id v15 = [self imageNamed:v14];

      Class v7 = sub_10051D070(0, v15, v10, v12, 71.0);
      sub_100522AD8(v2);
      sub_100522AD8(v2);
    }
    else
    {
      id v13 = [v4 UIColor];
      Class v7 = sub_10051D070(v13, 0, v10, v12, 71.0);
      sub_100522AD8(v2);

      sub_100522AD8(v2);
    }
    swift_bridgeObjectRelease();
  }
  id v16 = sub_1009DA878();
  id v17 = sub_1009DAC8C();
  sub_1005057FC((uint64_t *)&unk_101676C10);
  uint64_t v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_10117DF50;
  *(void *)(v18 + 32) = v16;
  *(void *)(v18 + 40) = v17;
  uint64_t v32 = v18;
  specialized Array._endMutation()();
  if (v7)
  {
    id v19 = v16;
    id v20 = v17;
    char v21 = v7;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)((v32 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v32 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
  }
  else
  {
    id v22 = v16;
    id v23 = v17;
  }
  if (qword_10166EB50 != -1) {
    swift_once();
  }
  double v24 = *(double *)&qword_101719DD0;
  id v25 = objc_allocWithZone((Class)UIStackView);
  sub_10050BF48(0, (unint64_t *)&qword_1016725F0);
  swift_bridgeObjectRetain();
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v27 = [v25 initWithArrangedSubviews:isa];

  [v27 setAxis:0];
  [v27 setAlignment:0];
  [v27 setDistribution:0];
  [v27 setSpacing:v24];
  if (qword_10166EB60 != -1) {
    swift_once();
  }
  double v28 = *(double *)&qword_101719DE0;
  id v29 = [v27 heightAnchor];
  id v30 = [v29 constraintGreaterThanOrEqualToConstant:v28];

  [v30 setActive:1];
  swift_bridgeObjectRelease();

  return v27;
}

id sub_1009DA878()
{
  uint64_t v1 = v0;
  sub_1008E2AFC();
  __int16 v3 = v2;
  sub_1009DAB10();
  id v4 = [objc_allocWithZone((Class)UILabel) initWithFrame:0.0, 0.0, 0.0, 0.0];
  NSString v5 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v4 setText:v5];

  NSString v6 = self;
  id v7 = [v6 preferredFontForTextStyle:UIFontTextStyleBody];
  NSString v8 = v7;
  if ((v3 & 0x100) != 0)
  {
    id v9 = [v7 fontDescriptor];
    id v10 = [v9 fontDescriptorWithSymbolicTraits:1];

    if (v10)
    {
      [v8 pointSize];
      id v11 = [v6 fontWithDescriptor:v10];

      NSString v8 = v10;
    }
    else
    {
      id v11 = 0;
    }

    NSString v8 = v11;
  }
  [v4 setFont:v8];

  [v4 setTextAlignment:2];
  [v4 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v12 = [v4 widthAnchor];
  id v13 = [v12 constraintEqualToConstant:71.0];

  [v13 setActive:1];
  id v14 = v4;
  BOOL IsVoiceOverRunning = UIAccessibilityIsVoiceOverRunning();
  BOOL v16 = 0;
  if (!IsVoiceOverRunning) {
    BOOL v16 = !UIAccessibilityIsSwitchControlRunning();
  }
  [v14 setIsAccessibilityElement:v16];

  [v14 setNumberOfLines:0];
  [v14 setAdjustsFontForContentSizeCategory:1];
  [v14 setShowsLargeContentViewer:1];
  id v17 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform32CRLiOSMiniFormatterStrokeBuilder_strokeWidthLabel);
  *(void *)(v1 + OBJC_IVAR____TtC8Freeform32CRLiOSMiniFormatterStrokeBuilder_strokeWidthLabel) = v14;
  id v18 = v14;

  return v18;
}

uint64_t sub_1009DAB10()
{
  double v0 = COERCE_DOUBLE(sub_1008E2AFC());
  unsigned __int8 v2 = v1;
  BOOL v3 = (v1 & 0xFF00) == 512;
  double v4 = v0;
  id v5 = [self mainBundle];
  NSString v6 = String._bridgeToObjectiveC()();
  NSString v7 = String._bridgeToObjectiveC()();
  id v8 = [v5 localizedStringForKey:v6 value:v7 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_10117E810;
  *(void *)(v9 + 56) = &type metadata for CGFloat;
  *(void *)(v9 + 64) = sub_1009DB5B4();
  double v10 = 0.0;
  if (((v3 | v2) & 1) == 0) {
    double v10 = v4;
  }
  *(double *)(v9 + 32) = v10;
  uint64_t v11 = static String.localizedStringWithFormat(_:_:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v11;
}

id sub_1009DAC8C()
{
  id v1 = [objc_allocWithZone((Class)CRLStepper) init];
  [v1 setMinValue:1.0];
  [v1 setMaxValue:100.0];
  [v1 setIncrement:1.0];
  double v3 = COERCE_DOUBLE(sub_1008E2AFC());
  if (v2) {
    double v3 = 1.0;
  }
  if ((v2 & 0xFF00) == 0x200) {
    double v3 = 1.0;
  }
  [v1 setCurrentValue:v3];
  [v1 setContinuous:1];
  [v1 addTarget:v0 action:"stepperValueDidChange:" forControlEvents:4096];
  [v1 addTarget:v0 action:"interactionStarted:" forControlEvents:1];
  [v1 addTarget:v0 action:"interactionEnded:" forControlEvents:64];
  double v4 = (void *)sub_100520E60();
  [v1 setCrlaxPreferredViewControllerForLargeContent:v4];

  return v1;
}

void sub_1009DADE4(void *a1)
{
  if (a1)
  {
    id v6 = a1;
    [v6 currentValue];
    sub_1008E21B8(v2);
    double v3 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform32CRLiOSMiniFormatterStrokeBuilder_strokeWidthLabel);
    if (v3)
    {
      id v4 = v3;
      sub_1009DAB10();
      NSString v5 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v4 setText:v5];
    }
  }
}

void *sub_1009DB048()
{
  unint64_t v0 = sub_1007FE0AC();
  if (v0) {
    sub_10057C1E4(v0);
  }
  unint64_t v1 = sub_1005D1384();
  if (v1)
  {
    unint64_t v2 = v1;
    if (v1 >> 62)
    {
      type metadata accessor for CRLBoardItem(0);
      unint64_t v3 = _bridgeCocoaArray<A>(_:)();
    }
    else
    {
      swift_bridgeObjectRetain();
      dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
      type metadata accessor for CRLBoardItem(0);
      unint64_t v3 = v2;
    }
    swift_bridgeObjectRelease();
    sub_10058EBD0(v3);
    swift_bridgeObjectRelease();
  }
  return &_swiftEmptySetSingleton;
}

uint64_t sub_1009DB130(uint64_t a1, uint64_t a2)
{
  sub_100522D7C(a2, (uint64_t)&v16);
  type metadata accessor for CRLShapeItem();
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_10;
  }
  unint64_t v4 = sub_1005D1384();
  if (!v4 || (char v5 = sub_100ED5958((uint64_t)v15, v4), swift_bridgeObjectRelease(), (v5 & 1) == 0))
  {

LABEL_10:
    char v13 = sub_100520CB4(a1, a2);
    return v13 & 1;
  }
  id v6 = *(char **)(a1 + OBJC_IVAR____TtC8Freeform15CRLChangeRecord_details);
  NSString v7 = &v6[OBJC_IVAR____TtC8Freeform14CRLPropertyMap_data];
  id v8 = v6;
  swift_beginAccess();
  uint64_t v9 = *(void *)v7;
  if (*(void *)(*(void *)v7 + 16))
  {
    uint64_t v10 = sub_1009563E8();
    if (v11) {
      goto LABEL_8;
    }
  }
  uint64_t v16 = 0;
  uint64_t v17 = 0;
  uint64_t v18 = 0;
  uint64_t v19 = 1;
  sub_100522F00((uint64_t)&v16, (uint64_t *)&unk_1016725E0);
  uint64_t v9 = *(void *)v7;
  if (*(void *)(*(void *)v7 + 16) && (uint64_t v10 = sub_1009563E8(), (v12 & 1) != 0))
  {
LABEL_8:
    sub_100557A70(*(void *)(v9 + 56) + 32 * v10, (uint64_t)&v16);
    sub_100522F00((uint64_t)&v16, (uint64_t *)&unk_1016725E0);

    char v13 = 1;
  }
  else
  {
    uint64_t v16 = 0;
    uint64_t v17 = 0;
    uint64_t v18 = 0;
    uint64_t v19 = 1;
    sub_100522F00((uint64_t)&v16, (uint64_t *)&unk_1016725E0);

    char v13 = 0;
  }
  return v13 & 1;
}

uint64_t sub_1009DB2E4(uint64_t a1, uint64_t a2)
{
  sub_100522D7C(a2, (uint64_t)&v16);
  type metadata accessor for CRLShapeItem();
  if (!swift_dynamicCast()) {
    goto LABEL_10;
  }
  unint64_t v4 = sub_1005D1384();
  if (!v4 || (char v5 = sub_100ED5958((uint64_t)v15, v4), swift_bridgeObjectRelease(), (v5 & 1) == 0))
  {

LABEL_10:
    char v13 = sub_100520CB4(a1, a2);
    return v13 & 1;
  }
  id v6 = *(char **)(a1 + OBJC_IVAR____TtC8Freeform15CRLChangeRecord_details);
  NSString v7 = &v6[OBJC_IVAR____TtC8Freeform14CRLPropertyMap_data];
  id v8 = v6;
  swift_beginAccess();
  uint64_t v9 = *(void *)v7;
  if (*(void *)(*(void *)v7 + 16))
  {
    uint64_t v10 = sub_1009563E8();
    if (v11) {
      goto LABEL_8;
    }
  }
  uint64_t v16 = 0;
  uint64_t v17 = 0;
  uint64_t v18 = 0;
  uint64_t v19 = 1;
  sub_100522F00((uint64_t)&v16, (uint64_t *)&unk_1016725E0);
  uint64_t v9 = *(void *)v7;
  if (*(void *)(*(void *)v7 + 16) && (uint64_t v10 = sub_1009563E8(), (v12 & 1) != 0))
  {
LABEL_8:
    sub_100557A70(*(void *)(v9 + 56) + 32 * v10, (uint64_t)&v16);
    sub_100522F00((uint64_t)&v16, (uint64_t *)&unk_1016725E0);

    char v13 = 1;
  }
  else
  {
    uint64_t v16 = 0;
    uint64_t v17 = 0;
    uint64_t v18 = 0;
    uint64_t v19 = 1;
    sub_100522F00((uint64_t)&v16, (uint64_t *)&unk_1016725E0);

    char v13 = 0;
  }
  return v13 & 1;
}

void sub_1009DB498()
{
  unint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform32CRLiOSMiniFormatterStrokeBuilder_strokeWidthLabel);
}

id sub_1009DB4D8()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLiOSMiniFormatterStrokeBuilder();
  return [super dealloc];
}

uint64_t type metadata accessor for CRLiOSMiniFormatterStrokeBuilder()
{
  return self;
}

uint64_t sub_1009DB57C()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

unint64_t sub_1009DB5B4()
{
  unint64_t result = qword_10168A9A0;
  if (!qword_10168A9A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168A9A0);
  }
  return result;
}

uint64_t sub_1009DB608(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1009DB650()
{
  return _swift_deallocObject(v0, 24, 7);
}

void sub_1009DB688()
{
}

uint64_t sub_1009DB6AC()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC8Freeform26CRLiOSMiniFormatterBuilder_presenter;
  if (swift_unknownObjectWeakLoadStrong())
  {
    uint64_t v2 = *(void *)(v1 + 8);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t))(v2 + 16))(ObjectType, v2);
    swift_unknownObjectRelease();
  }
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v5 = *(void *)(v1 + 16);
    uint64_t v6 = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t))(v5 + 120))(v6, v5);
    return swift_unknownObjectRelease();
  }
  return result;
}

void *sub_1009DB804(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = *(void *)(a3 - 8);
  __n128 v8 = __chkstk_darwin(a1, a1);
  uint64_t v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, __n128))(v7 + 16))(v10, v8);
  uint64_t v11 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v13 = v12;
  id v14 = [a2 appDescriptionData];
  uint64_t v15 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

  id v29 = (ValueMetadata *)sub_1005057FC(&qword_10168E270);
  *(void *)&long long v28 = v15;
  sub_100575CE8(&v28, v27);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  unint64_t v26 = _swiftEmptyDictionarySingleton;
  sub_1009763A8(v27, v11, v13, isUniquelyReferenced_nonNull_native);
  uint64_t v17 = v26;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  char v18 = (*(uint64_t (**)(uint64_t, uint64_t))(a4 + 16))(a3, a4);
  if (v18 == 6)
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"contentDescriptionForStyle(copiedFrom:)", 39, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLApplication/CRLContentDescriptionTranslator.swift", 106, 2, 16, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"contentDescriptionForStyle(copiedFrom:)", 39, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLApplication/CRLContentDescriptionTranslator.swift", 106, 2, 16);
  }
  else
  {
    char v19 = v18;
    uint64_t v20 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v22 = v21;
    id v29 = &type metadata for CRLStyleCopyingType;
    LOBYTE(v28) = v19;
    sub_100575CE8(&v28, v27);
    char v23 = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v26 = v17;
    sub_1009763A8(v27, v20, v22, v23);
    uint64_t v17 = v26;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  (*(void (**)(char *, uint64_t))(v7 + 8))(v10, a3);
  return v17;
}

uint64_t sub_1009DBAEC(uint64_t a1)
{
  uint64_t v2 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  if (!*(void *)(a1 + 16) || (unint64_t v4 = sub_100955F50(v2, v3), (v5 & 1) == 0))
  {
    long long v9 = 0u;
    long long v10 = 0u;
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  sub_100522D7C(*(void *)(a1 + 56) + 32 * v4, (uint64_t)&v9);
  swift_bridgeObjectRelease();
  if (!*((void *)&v10 + 1))
  {
LABEL_7:
    sub_10052E2B0((uint64_t)&v9);
    return 0;
  }
  sub_100575CE8(&v9, v11);
  sub_100522D7C((uint64_t)v11, (uint64_t)&v9);
  if (!swift_dynamicCast())
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"stringToPrefixForStyleCopyingType(contentDescription:)", 54, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLApplication/CRLContentDescriptionTranslator.swift", 106, 2, 25, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"stringToPrefixForStyleCopyingType(contentDescription:)", 54, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLApplication/CRLContentDescriptionTranslator.swift", 106, 2, 25);
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v11);
    return 0;
  }
  *(void *)&long long v9 = v8 + 1;
  uint64_t v6 = dispatch thunk of CustomStringConvertible.description.getter();
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v11);
  return v6;
}

uint64_t type metadata accessor for CRLiOSEmptyFolderViewController()
{
  uint64_t result = qword_10168A9D0;
  if (!qword_10168A9D0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1009DBCEC()
{
  uint64_t result = type metadata accessor for CRLBoardLibraryViewModel.Folder(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

void sub_1009DBD90()
{
}

uint64_t sub_1009DBDEC()
{
  sub_1006C6EB8(v0 + qword_10171B348);

  return swift_release();
}

void sub_1009DBE2C()
{
  uint64_t v1 = type metadata accessor for CRLBoardLibraryViewModel.Folder(0);
  __chkstk_darwin(v1 - 8, v2);
  unint64_t v4 = (char *)&v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = (uint64_t)v0 + qword_10171B348;
  uint64_t v6 = sub_1005057FC(&qword_101670F30);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v4, 4, 5, v6);
  LOBYTE(v5) = sub_100DDC744(v5, (uint64_t)v4);
  sub_1006C6EB8((uint64_t)v4);
  if (v5)
  {
    id v7 = [self defaultCenter];
    uint64_t v8 = qword_10166F878;
    id v9 = v0;
    if (v8 != -1) {
      swift_once();
    }
    uint64_t v10 = qword_10171B790;
    id v11 = [self sharedApplication];
    id v12 = [v11 delegate];

    if (!v12)
    {
      __break(1u);
      return;
    }
    type metadata accessor for CRLiOSAppDelegate();
    uint64_t v13 = *(void *)(swift_dynamicCastClassUnconditional() + OBJC_IVAR____TtC8Freeform17CRLiOSAppDelegate_iCloudStatus);
    swift_retain();
    swift_unknownObjectRelease();
    [v7 removeObserver:v9 name:v10 object:v13];

    swift_release();
  }
  id v14 = [self defaultCenter];
  uint64_t v15 = qword_10166ED78;
  id v16 = v0;
  if (v15 != -1) {
    swift_once();
  }
  [v14 removeObserver:v16 name:qword_10171A150 object:0];

  uint64_t v17 = (objc_class *)type metadata accessor for CRLiOSEmptyFolderViewController();
  v18.receiver = v16;
  v18.super_class = v17;
  [super dealloc];
}

void sub_1009DC0CC(void *a1)
{
  id v1 = a1;
  sub_1009DBE2C();
}

uint64_t sub_1009DC0F4(uint64_t a1)
{
  sub_1006C6EB8(a1 + qword_10171B348);

  return swift_release();
}

void sub_1009DC140()
{
  uint64_t v1 = type metadata accessor for CRLBoardLibraryViewModel.Folder(0);
  __chkstk_darwin(v1 - 8, v2);
  unint64_t v4 = (char *)&v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = (objc_class *)type metadata accessor for CRLiOSEmptyFolderViewController();
  v18.receiver = v0;
  v18.super_class = v5;
  [super viewDidLoad];
  id v6 = [v0 view];
  if (!v6)
  {
    __break(1u);
    goto LABEL_11;
  }
  id v7 = v6;
  id v8 = [self clearColor];
  [v7 setBackgroundColor:v8];

  id v9 = self;
  id v10 = [v9 defaultCenter];
  if (qword_10166ED78 != -1) {
    swift_once();
  }
  [v10 addObserver:v0 selector:"updateSearchStateWithNotification:" name:qword_10171A150 object:0];

  uint64_t v11 = (uint64_t)v0 + qword_10171B348;
  uint64_t v12 = sub_1005057FC(&qword_101670F30);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v4, 4, 5, v12);
  LOBYTE(v11) = sub_100DDC744(v11, (uint64_t)v4);
  sub_1006C6EB8((uint64_t)v4);
  if (v11)
  {
    id v13 = [v9 defaultCenter];
    if (qword_10166F878 != -1) {
      swift_once();
    }
    uint64_t v14 = qword_10171B790;
    id v15 = [self sharedApplication];
    id v16 = [v15 delegate];

    if (v16)
    {
      type metadata accessor for CRLiOSAppDelegate();
      uint64_t v17 = *(void *)(swift_dynamicCastClassUnconditional() + OBJC_IVAR____TtC8Freeform17CRLiOSAppDelegate_iCloudStatus);
      swift_retain();
      swift_unknownObjectRelease();
      [v13 addObserver:v0 selector:"updateICloudOnlineWithNotification:" name:v14 object:v17];

      swift_release();
      return;
    }
LABEL_11:
    __break(1u);
  }
}

void sub_1009DC43C(void *a1)
{
  id v1 = a1;
  sub_1009DC140();
}

void sub_1009DC488(void *a1)
{
  id v1 = [a1 userInfo];
  if (!v1)
  {
    long long v8 = 0u;
    long long v9 = 0u;
LABEL_10:
    sub_10052E2B0((uint64_t)&v8);
    goto LABEL_11;
  }
  uint64_t v2 = v1;
  uint64_t v3 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

  AnyHashable.init<A>(_:)();
  if (*(void *)(v3 + 16) && (unint64_t v4 = sub_10095647C((uint64_t)v7), (v5 & 1) != 0))
  {
    sub_100522D7C(*(void *)(v3 + 56) + 32 * v4, (uint64_t)&v8);
  }
  else
  {
    long long v8 = 0u;
    long long v9 = 0u;
  }
  swift_bridgeObjectRelease();
  sub_10050BFE0((uint64_t)v7);
  if (!*((void *)&v9 + 1)) {
    goto LABEL_10;
  }
  if (swift_dynamicCast())
  {
    char v6 = v7[0];
    swift_getKeyPath();
    swift_getKeyPath();
    v7[0] = v6;
    swift_retain();
    static Published.subscript.setter();
    return;
  }
LABEL_11:
  sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"updateICloudOnline(notification:)", 33, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSEmptyFolderViewController.swift", 101, 2, 81, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
  sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"updateICloudOnline(notification:)", 33, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSEmptyFolderViewController.swift", 101, 2, 81);
}

void sub_1009DC694(void *a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  id v5 = a1;
  sub_1009DC488(v4);
}

void sub_1009DC6FC(void *a1)
{
  id v2 = [a1 userInfo];
  if (!v2)
  {
    long long v20 = 0u;
    long long v21 = 0u;
LABEL_10:
    sub_10052E2B0((uint64_t)&v20);
    goto LABEL_11;
  }
  uint64_t v3 = v2;
  uint64_t v4 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

  AnyHashable.init<A>(_:)();
  if (*(void *)(v4 + 16) && (unint64_t v5 = sub_10095647C((uint64_t)&v18), (v6 & 1) != 0))
  {
    sub_100522D7C(*(void *)(v4 + 56) + 32 * v5, (uint64_t)&v20);
  }
  else
  {
    long long v20 = 0u;
    long long v21 = 0u;
  }
  swift_bridgeObjectRelease();
  sub_10050BFE0((uint64_t)&v18);
  if (!*((void *)&v21 + 1)) {
    goto LABEL_10;
  }
  if (swift_dynamicCast())
  {
    uint64_t v8 = v18;
    uint64_t v7 = v19;
    swift_getKeyPath();
    swift_getKeyPath();
    uint64_t v18 = v8;
    uint64_t v19 = v7;
    swift_retain();
    static Published.subscript.setter();
    goto LABEL_12;
  }
LABEL_11:
  sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"updateSearchState(notification:)", 32, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSEmptyFolderViewController.swift", 101, 2, 87, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
  LOBYTE(v17) = 2;
  id v15 = "invalid nil found when unwrapping value";
  uint64_t v16 = 39;
  sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"updateSearchState(notification:)", 32, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSEmptyFolderViewController.swift", 101, 2, 87);
LABEL_12:
  [a1 userInfo:v15, v16, v17];
  if (!v9)
  {
    long long v20 = 0u;
    long long v21 = 0u;
LABEL_21:
    sub_10052E2B0((uint64_t)&v20);
    goto LABEL_22;
  }
  id v10 = v9;
  uint64_t v11 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

  AnyHashable.init<A>(_:)();
  if (*(void *)(v11 + 16) && (unint64_t v12 = sub_10095647C((uint64_t)&v18), (v13 & 1) != 0))
  {
    sub_100522D7C(*(void *)(v11 + 56) + 32 * v12, (uint64_t)&v20);
  }
  else
  {
    long long v20 = 0u;
    long long v21 = 0u;
  }
  swift_bridgeObjectRelease();
  sub_10050BFE0((uint64_t)&v18);
  if (!*((void *)&v21 + 1)) {
    goto LABEL_21;
  }
  if (swift_dynamicCast())
  {
    char v14 = v18;
    swift_getKeyPath();
    swift_getKeyPath();
    LOBYTE(v18) = v14;
    swift_retain();
    static Published.subscript.setter();
    return;
  }
LABEL_22:
  sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"updateSearchState(notification:)", 32, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSEmptyFolderViewController.swift", 101, 2, 91, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
  sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"updateSearchState(notification:)", 32, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSEmptyFolderViewController.swift", 101, 2, 91);
}

void sub_1009DCAE4(void *a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  id v5 = a1;
  sub_1009DC6FC(v4);
}

void sub_1009DCB4C()
{
}

void sub_1009DCB7C()
{
}

uint64_t sub_1009DCBAC()
{
  return type metadata accessor for CRLiOSEmptyFolderViewController();
}

uint64_t sub_1009DCBB4(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for CRLBoardLibraryViewModel.Folder(0);
  __chkstk_darwin(v8 - 8, v9);
  uint64_t v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for CRLEmptyFolderView();
  uint64_t v13 = v12 - 8;
  __chkstk_darwin(v12, v14);
  uint64_t v16 = (char *)&v23 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v17 = objc_allocWithZone((Class)type metadata accessor for CRLiOSEmptyFolderViewController());
  sub_1009DCD54(a1, (uint64_t)v17 + qword_10171B348);
  type metadata accessor for CRLEmptyFolderViewDataSource();
  swift_allocObject();
  uint64_t v18 = (char *)v17;
  uint64_t v19 = sub_100608F3C(a2, a3, a4);
  *(void *)&v18[qword_10168A9C8] = v19;
  swift_retain();

  sub_1009DCD54(a1, (uint64_t)v11);
  sub_1009DCDC0((uint64_t)v11, (uint64_t)v16);
  long long v20 = &v16[*(int *)(v13 + 28)];
  *(void *)long long v20 = CRLAsyncStreamProperty.projectedValue.getter;
  *((void *)v20 + 1) = v19;
  v20[16] = 0;
  uint64_t v21 = UIHostingController.init(rootView:)();
  sub_1006C6EB8(a1);
  return v21;
}

uint64_t sub_1009DCD54(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CRLBoardLibraryViewModel.Folder(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t CRLAsyncStreamProperty.projectedValue.getter()
{
  return swift_retain();
}

uint64_t sub_1009DCDC0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CRLBoardLibraryViewModel.Folder(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1009DCE24()
{
  uint64_t v0 = self;
  id v1 = [v0 sharedApplication];
  id v2 = [v1 delegate];

  if (v2)
  {
    type metadata accessor for CRLiOSAppDelegate();
    uint64_t v3 = swift_dynamicCastClassUnconditional();
    id v6 = [v0 sharedApplication];
    if ([v6 shouldRecordExtendedLaunchTime]
      && (uint64_t v4 = OBJC_IVAR____TtC8Freeform17CRLiOSAppDelegate_didLogExtendedLaunchTime,
          (*(unsigned char *)(v3 + OBJC_IVAR____TtC8Freeform17CRLiOSAppDelegate_didLogExtendedLaunchTime) & 1) == 0))
    {
      id v5 = [v6 _launchTestName];
      [v6 finishedTest:v5];

      *(unsigned char *)(v3 + v4) = 1;
      swift_unknownObjectRelease();
    }
    else
    {
      swift_unknownObjectRelease();
    }
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1009DCFD0()
{
  id v1 = *(uint64_t (**)(uint64_t))(**(void **)((char *)v0
                                                       + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData)
                                         + 312);
  uint64_t v2 = swift_retain();
  LOBYTE(v1) = v1(v2);
  uint64_t v3 = swift_release();
  if (v1) {
    return 0;
  }
  BOOL v5 = (*(double (**)(uint64_t))((swift_isaMask & *v0) + 0x470))(v3) != 0.0;
  return v6 != 0.0 || v5;
}

void sub_1009DD100()
{
}

void sub_1009DD16C(void *a1)
{
  (*(void (**)(void))((swift_isaMask & *v1) + 0x200))();
  type metadata accessor for CRLMediaItem();
  uint64_t v3 = swift_dynamicCastClass();
  if (v3)
  {
    uint64_t v4 = (void *)v3;
    id v5 = a1;
    double v6 = (void *)sub_100BC934C();
    sub_100BC9500(v6);
    uint64_t v7 = OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData;
    uint64_t v8 = *(uint64_t (**)(uint64_t))(**(void **)((char *)v4
                                                         + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData)
                                           + 384);
    id v9 = v5;
    uint64_t v10 = swift_retain();
    uint64_t v11 = (void *)v8(v10);

    swift_release();
    sub_10088B0DC(v11);

    uint64_t v12 = *(uint64_t (**)(uint64_t))(**(void **)((char *)v4 + v7) + 336);
    id v16 = v9;
    uint64_t v13 = swift_retain();
    LOBYTE(v9) = v12(v13);

    swift_release();
    uint64_t v14 = sub_10088AEB4(v9 & 1);
    char v15 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *v4) + 0x4B0))(v14);
    (*(void (**)(void))((swift_isaMask & *v1) + 0x4B8))(v15 & 1);
  }
}

uint64_t sub_1009DD4D8()
{
  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC8Freeform12CRLMediaItem_isLooping);
}

uint64_t sub_1009DD4F8(uint64_t result)
{
  *(unsigned char *)(v1 + OBJC_IVAR____TtC8Freeform12CRLMediaItem_isLooping) = result;
  return result;
}

id sub_1009DD520()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLMediaItem();
  [super dealloc];
}

uint64_t sub_1009DD558()
{
  return type metadata accessor for CRLMediaItem();
}

uint64_t type metadata accessor for CRLMediaItem()
{
  uint64_t result = qword_10168AA48;
  if (!qword_10168AA48) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1009DD5AC()
{
  return swift_updateClassMetadata2();
}

void sub_1009DD668(double a1, double a2)
{
  id v5 = *(uint64_t (**)(uint64_t))(**(void **)(v2 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData)
                                         + 288);
  uint64_t v6 = swift_retain();
  id v17 = (id)v5(v6);
  swift_release();
  [v17 size];
  double v8 = v7;
  double v10 = v9;
  double v11 = sub_100067234(v7, v9, a1, a2);
  if (v11 < v8 || v12 < v10)
  {
    double v14 = v11;
    double v15 = v12;
    [v17 mutableCopy];
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
    sub_1009DD894();
    if (swift_dynamicCast())
    {
      [v18 setSize:v14, v15];
      id v16 = v18;
      sub_10088AA40(v16);
    }
    else
    {
      sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"scaleDownSizeToFit(within:board:)", 33, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLMediaItem.swift", 83, 2, 95, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"scaleDownSizeToFit(within:board:)", 33, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLMediaItem.swift", 83, 2, 95);
    }
  }
  else
  {
  }
}

unint64_t sub_1009DD894()
{
  unint64_t result = qword_101677CC0;
  if (!qword_101677CC0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_101677CC0);
  }
  return result;
}

uint64_t sub_1009DD8D4()
{
  return UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
}

uint64_t sub_1009DD974()
{
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v1 = (void *)result;
    uint64_t v2 = (char *)*(id *)(result + OBJC_IVAR____TtC8Freeform30CRLiOSMiniFormatterFileBuilder_fileDataProvider);

    uint64_t v3 = *(void **)&v2[OBJC_IVAR____TtC8Freeform28CRLMiniFormatterDataProvider_editorController];
    if (type metadata accessor for CRLFileEditor()) {
      uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    }
    else {
      uint64_t ObjCClassFromMetadata = 0;
    }
    id v5 = [v3 mostSpecificCurrentEditorOfClass:ObjCClassFromMetadata];
    uint64_t v6 = (void *)swift_dynamicCastClass();
    if (v6) {
      [v6 showMediaReplaceUI:v2];
    }

    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1009DDA58(uint64_t a1, uint64_t a2)
{
  sub_100522D7C(a2, (uint64_t)v8);
  type metadata accessor for CRLFileItem();
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_5;
  }
  uint64_t v4 = sub_1007FE0AC();
  if (!v4)
  {

LABEL_5:
    char v5 = sub_100897B28(a1, a2);
    return v5 & 1;
  }
  char v5 = sub_1006E5050(v7, v4);

  swift_bridgeObjectRelease();
  return v5 & 1;
}

void sub_1009DDB28()
{
}

id sub_1009DDB38()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLiOSMiniFormatterFileBuilder();
  return [super dealloc];
}

uint64_t type metadata accessor for CRLiOSMiniFormatterFileBuilder()
{
  return self;
}

uint64_t sub_1009DDBA0()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1009DDBD8()
{
  return sub_1009DD974();
}

id sub_1009DDBE0(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, void *a5, void *a6)
{
  double v12 = (char *)objc_allocWithZone((Class)type metadata accessor for CRLMiniFormatterFileDataProvider());
  *(void *)&v12[OBJC_IVAR____TtC8Freeform28CRLMiniFormatterDataProvider_editorController] = a5;
  uint64_t v13 = (objc_class *)type metadata accessor for CRLMiniFormatterDataProvider();
  v22.receiver = v12;
  v22.super_class = v13;
  double v14 = v6;
  id v15 = a5;
  *(void *)&v14[OBJC_IVAR____TtC8Freeform30CRLiOSMiniFormatterFileBuilder_fileDataProvider] = [super init];

  id v16 = (char *)objc_allocWithZone((Class)type metadata accessor for CRLMiniFormatterMediaDataProvider());
  *(void *)&v16[OBJC_IVAR____TtC8Freeform28CRLMiniFormatterDataProvider_editorController] = v15;
  v21.receiver = v16;
  v21.super_class = v13;
  id v17 = v14;
  id v18 = v15;
  *(void *)&v17[OBJC_IVAR____TtC8Freeform31CRLiOSMiniFormatterMediaBuilder_mediaDataProvider] = [v21 init];

  return sub_100521CB4(a1, a2, a3, a4, v18, a6);
}

uint64_t sub_1009DDD08@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v77 = a3;
  uint64_t v75 = type metadata accessor for CRLCollaboratorCursor();
  __chkstk_darwin(v75, v5);
  unint64_t v76 = (char *)&v71 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1005057FC((uint64_t *)&unk_101674520);
  __chkstk_darwin(v7 - 8, v8);
  uint64_t v78 = (uint64_t)&v71 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10, v11);
  uint64_t v79 = (uint64_t)&v71 - v12;
  uint64_t v13 = sub_1005057FC((uint64_t *)&unk_101674160);
  __chkstk_darwin(v13 - 8, v14);
  uint64_t v80 = (uint64_t)&v71 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16, v17);
  uint64_t v85 = (uint64_t)&v71 - v18;
  uint64_t v19 = type metadata accessor for CRLProto_Data(0);
  unint64_t v83 = *(unsigned int (**)(uint64_t, uint64_t, char *))(v19 - 8);
  id v84 = (char *)v19;
  __chkstk_darwin(v19, v20);
  id v81 = (uint64_t *)((char *)&v71 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v22, v23);
  uint64_t v25 = (uint64_t *)((char *)&v71 - v24);
  uint64_t v26 = type metadata accessor for UUID();
  uint64_t v82 = *(void *)(v26 - 8);
  __chkstk_darwin(v26, v27);
  id v29 = (char *)&v71 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v30, v31);
  NSString v33 = (char *)&v71 - v32;
  uint64_t v34 = type metadata accessor for BinaryDecodingOptions();
  __chkstk_darwin(v34 - 8, v35);
  uint64_t v36 = type metadata accessor for CRLProto_CollaboratorCursor(0);
  __chkstk_darwin(v36, v37);
  uint64_t v39 = (uint64_t *)((char *)&v71 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v89 = 0;
  long long v87 = 0u;
  long long v88 = 0u;
  sub_100510D4C(a1, a2);
  BinaryDecodingOptions.init()();
  sub_1009DEB30();
  unint64_t v40 = v86;
  Message.init(serializedData:extensions:partial:options:)();
  if (v40) {
    return sub_100510084(a1, a2);
  }
  id v72 = v29;
  uint64_t v73 = v26;
  uint64_t v74 = a1;
  unint64_t v86 = a2;
  uint64_t v42 = v85;
  sub_100522E9C((uint64_t)v39 + *(int *)(v36 + 24), v85, (uint64_t *)&unk_101674160);
  uint64_t v43 = v84;
  id v44 = (uint64_t (*)(uint64_t, uint64_t, char *))*((void *)v83 + 6);
  int v45 = v44(v42, 1, v84);
  unint64_t v83 = (unsigned int (*)(uint64_t, uint64_t, char *))v44;
  if (v45 == 1)
  {
    *(_OWORD *)uint64_t v25 = xmmword_101180360;
    uint64_t v46 = v43;
    UnknownStorage.init()();
    sub_100522F00(v42, (uint64_t *)&unk_101674160);
  }
  else
  {
    uint64_t v46 = v43;
    sub_1009DEBE8(v42, (uint64_t)v25, type metadata accessor for CRLProto_Data);
  }
  uint64_t v47 = *v25;
  unint64_t v48 = v25[1];
  sub_100510D4C(*v25, v48);
  sub_1009DEB88((uint64_t)v25, type metadata accessor for CRLProto_Data);
  UUID.init(crl_data:)(v47, v48);
  uint64_t v49 = v80;
  sub_100522E9C((uint64_t)v39 + *(int *)(v36 + 28), v80, (uint64_t *)&unk_101674160);
  if (v83(v49, 1, v46) == 1)
  {
    uint64_t v50 = v81;
    *(_OWORD *)id v81 = xmmword_101180360;
    UnknownStorage.init()();
    sub_100522F00(v49, (uint64_t *)&unk_101674160);
  }
  else
  {
    uint64_t v50 = v81;
    sub_1009DEBE8(v49, (uint64_t)v81, type metadata accessor for CRLProto_Data);
  }
  uint64_t v51 = v82;
  uint64_t v52 = *v50;
  unint64_t v53 = v50[1];
  sub_100510D4C(*v50, v53);
  sub_1009DEB88((uint64_t)v50, type metadata accessor for CRLProto_Data);
  id v54 = objc_allocWithZone((Class)type metadata accessor for CRLPersistableSelectionPath(0));
  id v55 = sub_10064AFF4(v52, v53);
  unint64_t v56 = v86;
  uint64_t v58 = v73;
  uint64_t v57 = v74;
  uint64_t v85 = 0;
  NSString v59 = v55;
  uint64_t v60 = v79;
  (*(void (**)(uint64_t, char *, uint64_t))(v51 + 16))(v79, v33, v73);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v51 + 56))(v60, 0, 1, v58);
  uint64_t v61 = (uint64_t)v39;
  uint64_t v62 = *v39;
  uint64_t v63 = v78;
  sub_100522E9C(v60, v78, (uint64_t *)&unk_101674520);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v51 + 48))(v63, 1, v58) == 1)
  {
    unint64_t v64 = v59;
    uint64_t v85 = v61;
    sub_100522F00(v63, (uint64_t *)&unk_101674520);
    sub_1005F7CE8();
    swift_allocError();
    unsigned char *v65 = 0;
    swift_willThrow();

    sub_100522F00(v60, (uint64_t *)&unk_101674520);
    sub_100510084(v57, v56);

    (*(void (**)(char *, uint64_t))(v51 + 8))(v33, v58);
    return sub_1009DEB88(v85, type metadata accessor for CRLProto_CollaboratorCursor);
  }
  else
  {
    id v84 = v33;
    uint64_t v66 = *(void (**)(char *, uint64_t, uint64_t))(v51 + 32);
    uint64_t v67 = v72;
    v66(v72, v63, v58);
    uint64_t v68 = v59;
    sub_100522F00(v79, (uint64_t *)&unk_101674520);
    uint64_t v69 = (uint64_t)v76;
    v66(v76, (uint64_t)v67, v58);
    uint64_t v70 = v75;
    *(void *)(v69 + *(int *)(v75 + 24)) = v62;
    *(void *)(v69 + *(int *)(v70 + 20)) = v68;
    sub_1009DEBE8(v69, v77, (uint64_t (*)(void))type metadata accessor for CRLCollaboratorCursor);
    sub_100510084(v57, v56);

    (*(void (**)(char *, uint64_t))(v82 + 8))(v84, v58);
    return sub_1009DEB88(v61, type metadata accessor for CRLProto_CollaboratorCursor);
  }
}

uint64_t sub_1009DE544(uint64_t a1)
{
  uint64_t v57 = a1;
  uint64_t v1 = sub_1005057FC((uint64_t *)&unk_101674160);
  __chkstk_darwin(v1 - 8, v2);
  uint64_t v53 = (uint64_t)&v49 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4, v5);
  uint64_t v7 = (char *)&v49 - v6;
  uint64_t v8 = type metadata accessor for CRLProto_Data(0);
  uint64_t v63 = *(void *)(v8 - 8);
  uint64_t v9 = v63;
  __chkstk_darwin(v8, v10);
  uint64_t v50 = (long long *)((char *)&v49 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v12, v13);
  uint64_t v15 = (char *)&v49 - v14;
  __chkstk_darwin(v16, v17);
  uint64_t v19 = (long long *)((char *)&v49 - v18);
  uint64_t v20 = type metadata accessor for CRLProto_CollaboratorCursor(0);
  __chkstk_darwin(v20, v21);
  uint64_t v23 = (uint64_t *)((char *)&v49 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
  void *v23 = 0;
  UnknownStorage.init()();
  uint64_t v24 = (uint64_t)v23 + *(int *)(v20 + 24);
  uint64_t v25 = *(void (**)(void))(v9 + 56);
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v25)(v24, 1, 1, v8);
  uint64_t v52 = v20;
  uint64_t v26 = *(int *)(v20 + 28);
  NSString v59 = v23;
  uint64_t v54 = (uint64_t)v23 + v26;
  v25();
  long long v61 = xmmword_101180360;
  *uint64_t v19 = xmmword_101180360;
  UnknownStorage.init()();
  sub_100522F00(v24, (uint64_t *)&unk_101674160);
  id v55 = v19;
  sub_1009DEBE8((uint64_t)v19, v24, type metadata accessor for CRLProto_Data);
  uint64_t v60 = v25;
  uint64_t v56 = v9 + 56;
  ((void (*)(uint64_t, void, uint64_t, uint64_t))v25)(v24, 0, 1, v8);
  uint64_t v27 = (uint64_t)v7;
  uint64_t v28 = UUID.crl_data()();
  uint64_t v30 = v29;
  sub_100522E9C(v24, v27, (uint64_t *)&unk_101674160);
  uint64_t v31 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v63 + 48);
  v63 += 48;
  uint64_t v51 = v31;
  if (v31(v27, 1, v8) == 1)
  {
    *(_OWORD *)uint64_t v15 = v61;
    UnknownStorage.init()();
    sub_100522F00(v27, (uint64_t *)&unk_101674160);
  }
  else
  {
    sub_1009DEBE8(v27, (uint64_t)v15, type metadata accessor for CRLProto_Data);
  }
  sub_100510084(*(void *)v15, *((void *)v15 + 1));
  *(void *)uint64_t v15 = v28;
  *((void *)v15 + 1) = v30;
  sub_100522F00(v24, (uint64_t *)&unk_101674160);
  sub_1009DEBE8((uint64_t)v15, v24, type metadata accessor for CRLProto_Data);
  uint64_t v32 = v24;
  NSString v33 = v60;
  ((void (*)(uint64_t, void, uint64_t, uint64_t))v60)(v32, 0, 1, v8);
  uint64_t v34 = (uint64_t)v55;
  long long *v55 = v61;
  UnknownStorage.init()();
  uint64_t v35 = v54;
  sub_100522F00(v54, (uint64_t *)&unk_101674160);
  sub_1009DEBE8(v34, v35, type metadata accessor for CRLProto_Data);
  ((void (*)(uint64_t, void, uint64_t, uint64_t))v33)(v35, 0, 1, v8);
  uint64_t v36 = type metadata accessor for CRLCollaboratorCursor();
  uint64_t v37 = v62;
  uint64_t v38 = *(void *)(v62 + *(int *)(v36 + 20));
  uint64_t v39 = v58;
  uint64_t v40 = sub_10064CB84(v57);
  uint64_t v42 = v59;
  if (v39)
  {
    sub_1009DEB88((uint64_t)v59, type metadata accessor for CRLProto_CollaboratorCursor);
  }
  else
  {
    uint64_t v57 = v41;
    uint64_t v58 = v40;
    uint64_t v43 = v53;
    sub_100522E9C(v35, v53, (uint64_t *)&unk_101674160);
    if (v51(v43, 1, v8) == 1)
    {
      id v44 = v50;
      *uint64_t v50 = v61;
      UnknownStorage.init()();
      sub_100522F00(v43, (uint64_t *)&unk_101674160);
      int v45 = v44;
      NSString v33 = v60;
    }
    else
    {
      uint64_t v46 = v43;
      int v45 = v50;
      sub_1009DEBE8(v46, (uint64_t)v50, type metadata accessor for CRLProto_Data);
    }
    sub_100510084(*(void *)v45, *((void *)v45 + 1));
    uint64_t v47 = v57;
    *(void *)int v45 = v58;
    *((void *)v45 + 1) = v47;
    sub_100522F00(v35, (uint64_t *)&unk_101674160);
    sub_1009DEBE8((uint64_t)v45, v35, type metadata accessor for CRLProto_Data);
    ((void (*)(uint64_t, void, uint64_t, uint64_t))v33)(v35, 0, 1, v8);
    *uint64_t v42 = *(void *)(v37 + *(int *)(v36 + 24));
    sub_1009DEB30();
    uint64_t v38 = Message.serializedData(partial:)();
    sub_1009DEB88((uint64_t)v42, type metadata accessor for CRLProto_CollaboratorCursor);
  }
  return v38;
}

uint64_t type metadata accessor for CRLCollaboratorCursor()
{
  uint64_t result = qword_10168AAE8;
  if (!qword_10168AAE8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

unint64_t sub_1009DEB30()
{
  unint64_t result = qword_10168AA88;
  if (!qword_10168AA88)
  {
    type metadata accessor for CRLProto_CollaboratorCursor(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168AA88);
  }
  return result;
}

uint64_t sub_1009DEB88(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1009DEBE8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t *sub_1009DEC50(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for UUID();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = *(int *)(a3 + 24);
    uint64_t v10 = *(void **)((char *)a2 + v8);
    *(uint64_t *)((char *)a1 + v8) = (uint64_t)v10;
    *(uint64_t *)((char *)a1 + v9) = *(uint64_t *)((char *)a2 + v9);
    id v11 = v10;
  }
  return a1;
}

void sub_1009DED28(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  int v5 = *(void **)(a1 + *(int *)(a2 + 20));
}

uint64_t sub_1009DED9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = *(void **)(a2 + v7);
  *(void *)(a1 + v7) = v9;
  *(void *)(a1 + v8) = *(void *)(a2 + v8);
  id v10 = v9;
  return a1;
}

uint64_t sub_1009DEE24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = *(void **)(a2 + v7);
  uint64_t v9 = *(void **)(a1 + v7);
  *(void *)(a1 + v7) = v8;
  id v10 = v8;

  *(void *)(a1 + *(int *)(a3 + 24)) = *(void *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_1009DEEB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 24);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  return a1;
}

uint64_t sub_1009DEF3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = *(void **)(a1 + v7);
  *(void *)(a1 + v7) = *(void *)(a2 + v7);

  *(void *)(a1 + *(int *)(a3 + 24)) = *(void *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_1009DEFCC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1009DEFE0);
}

uint64_t sub_1009DEFE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_1009DF0A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1009DF0B4);
}

uint64_t sub_1009DF0B4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for UUID();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
  return result;
}

uint64_t sub_1009DF170()
{
  uint64_t result = type metadata accessor for UUID();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

id sub_1009DF518(uint64_t a1, uint64_t a2)
{
  *(void *)&v2[OBJC_IVAR____TtC8Freeform22CRLFreehandDrawingItem_pkRecognitionController] = 0;
  int v5 = &v2[OBJC_IVAR____TtC8Freeform22CRLFreehandDrawingItem_cachedPKDrawing];
  uint64_t v6 = type metadata accessor for PKDrawing();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v5, 1, 1, v6);
  *(void *)&v2[OBJC_IVAR____TtC8Freeform16CRLContainerItem_items] = &_swiftEmptyDictionarySingleton;
  *(_DWORD *)&v2[OBJC_IVAR____TtC8Freeform16CRLContainerItem_timeStamp] = 0;
  *(void *)&v2[OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedOrderedItems] = 0;
  *(void *)&v2[OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedOrderedItemUUIDs] = 0;
  *(void *)&v2[OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedUnorderedItemUUIDs] = 0;
  *(void *)&v2[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_store] = a1;
  *(void *)&v2[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData] = a2;
  v8.receiver = v2;
  v8.super_class = (Class)type metadata accessor for CRLBoardItemBase(0);
  return [super init];
}

void sub_1009DF62C()
{
  unint64_t v1 = (char *)objc_allocWithZone(v0);
  *(void *)&v1[OBJC_IVAR____TtC8Freeform22CRLFreehandDrawingItem_pkRecognitionController] = 0;
  uint64_t v2 = &v1[OBJC_IVAR____TtC8Freeform22CRLFreehandDrawingItem_cachedPKDrawing];
  uint64_t v3 = type metadata accessor for PKDrawing();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56))(v2, 1, 1, v3);

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

uint64_t sub_1009DF888()
{
  if (!*(void *)(v0 + OBJC_IVAR____TtC8Freeform12CRLBoardItem_transactionContext)
    && (uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong()) != 0
    && (v2 = Strong, char v3 = (*(uint64_t (**)(void))((swift_isaMask & *Strong) + 0x2F0))(),
                     v2,
                     (v3 & 1) != 0))
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"_guardTransaction()", 19, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLTransactions/CRLTransactable.swift", 91, 2, 76, (uint64_t)"Attempting to mutate a CRLTransactable without a CRLTransactableContext set", 75, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_100586FD4((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Attempting to mutate a CRLTransactable without a CRLTransactableContext set");
    sub_1005871AC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"_guardTransaction()", 19, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLTransactions/CRLTransactable.swift", 91, 2, 76);
    SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v5, v6);
    uint64_t result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
  else
  {
    type metadata accessor for CRLFreehandItemData(0);
    swift_dynamicCastClassUnconditional();
    swift_beginAccess();
    type metadata accessor for CRLFreehandDrawingCRDTData(0);
    swift_retain();
    sub_1005057FC((uint64_t *)&unk_101689310);
    CRRegister.wrappedValue.setter();
    swift_endAccess();
    return swift_release();
  }
  return result;
}

id sub_1009DFC20(uint64_t a1, uint64_t a2)
{
  uint64_t v91 = a2;
  uint64_t v3 = v2;
  uint64_t v78 = a1;
  uint64_t v4 = type metadata accessor for CRLBoardItemParentAffinity();
  __chkstk_darwin(v4 - 8, v5);
  NSString v90 = (char *)&v76 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1005057FC((uint64_t *)&unk_101674520);
  __chkstk_darwin(v7 - 8, v8);
  id v81 = (char *)&v76 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10, v11);
  uint64_t v77 = (char *)&v76 - v12;
  __chkstk_darwin(v13, v14);
  uint64_t v82 = (uint64_t)&v76 - v15;
  __chkstk_darwin(v16, v17);
  uint64_t v83 = (uint64_t)&v76 - v18;
  __chkstk_darwin(v19, v20);
  uint64_t v76 = (uint64_t)&v76 - v21;
  __chkstk_darwin(v22, v23);
  uint64_t v89 = (char *)&v76 - v24;
  unint64_t v86 = (char *)(type metadata accessor for CRLContainerItemCRDTData(0) - 8);
  __chkstk_darwin(v86, v25);
  long long v87 = (char *)&v76 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = type metadata accessor for CRLFreehandDrawingCRDTData(0);
  __chkstk_darwin(v27 - 8, v28);
  uint64_t v88 = (uint64_t)&v76 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v30, v31);
  NSString v33 = (char *)&v76 - v32;
  uint64_t v94 = sub_1005057FC((uint64_t *)&unk_101683E10);
  __chkstk_darwin(v94, v34);
  uint64_t v36 = (char *)&v76 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v37, v38);
  uint64_t v40 = (char *)&v76 - v39;
  uint64_t v85 = OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData;
  type metadata accessor for CRLFreehandItemData(0);
  uint64_t v41 = swift_dynamicCastClassUnconditional();
  uint64_t v42 = v41 + *(void *)(*(void *)v41 + 632);
  swift_beginAccess();
  sub_100522E9C(v42, (uint64_t)v36, (uint64_t *)&unk_101683E10);
  sub_1009E3210();
  CRType.copy(renamingReferences:)();
  sub_100522F00((uint64_t)v36, (uint64_t *)&unk_101683E10);
  uint64_t v43 = swift_dynamicCastClassUnconditional() + qword_10171CE48;
  swift_beginAccess();
  sub_1009E24DC(v43, (uint64_t)v33, type metadata accessor for CRLFreehandDrawingCRDTData);
  uint64_t v44 = (uint64_t)v87;
  *(void *)&v87[*((int *)v86 + 7)] = _swiftEmptyDictionarySingleton;
  uint64_t v45 = type metadata accessor for UUID();
  sub_1009E31C8((unint64_t *)&qword_1016770E0, (void (*)(uint64_t))&type metadata accessor for UUID);
  uint64_t v80 = v45;
  CROrderedSet.init()();
  sub_1009E326C(v44, (uint64_t)v33);
  unint64_t v86 = v40;
  sub_100522E9C((uint64_t)v40, (uint64_t)v36, (uint64_t *)&unk_101683E10);
  id v84 = v33;
  uint64_t v46 = v88;
  sub_1009E24DC((uint64_t)v33, v88, type metadata accessor for CRLFreehandDrawingCRDTData);
  uint64_t v79 = v3;
  uint64_t v47 = (void *)swift_dynamicCastClassUnconditional();
  uint64_t v49 = v47[4];
  uint64_t v48 = v47[5];
  uint64_t v50 = v47[2];
  uint64_t v51 = v47[3];
  uint64_t v52 = swift_allocObject();
  sub_1009E24DC(v46, v52 + qword_10171CE48, type metadata accessor for CRLFreehandDrawingCRDTData);
  sub_1009E24DC(v46, v44, type metadata accessor for CRLContainerItemCRDTData);
  sub_1009E3168(v46, type metadata accessor for CRLFreehandDrawingCRDTData);
  sub_1008534A8(v44, v52 + qword_10171BE80, type metadata accessor for CRLContainerItemCRDTData);
  sub_10051B3EC((uint64_t)v36, v52 + *(void *)(*(void *)v52 + 632), (uint64_t *)&unk_101683E10);
  uint64_t v53 = v49;
  uint64_t v54 = (uint64_t)v89;
  id v55 = sub_10068B398(v51, v53, v48, v50);
  uint64_t v56 = (uint64_t)v55 + *(void *)(*v55 + 632);
  swift_beginAccess();
  sub_100522E9C(v56, (uint64_t)v36, (uint64_t *)&unk_101683E10);
  swift_retain();
  sub_1005057FC((uint64_t *)&unk_101683E30);
  uint64_t v57 = (uint64_t)v90;
  CRRegister.wrappedValue.getter();
  sub_100522E9C(v57, v54, (uint64_t *)&unk_101674520);
  sub_1009E3168(v57, (uint64_t (*)(void))type metadata accessor for CRLBoardItemParentAffinity);
  sub_100522F00((uint64_t)v36, (uint64_t *)&unk_101683E10);
  swift_release();
  uint64_t v58 = v92;
  id v59 = v55;
  sub_100BC4E74(v91);
  if (v58)
  {
    swift_release();
    sub_100522F00(v54, (uint64_t *)&unk_101674520);
    sub_100522F00((uint64_t)v86, (uint64_t *)&unk_101683E10);
    sub_1009E3168((uint64_t)v84, type metadata accessor for CRLFreehandDrawingCRDTData);
  }
  else
  {
    uint64_t v60 = v83;
    sub_100522E9C(v78, v83, (uint64_t *)&unk_101674520);
    sub_100522E9C(v54, v82, (uint64_t *)&unk_101674520);
    uint64_t v61 = *(void *)(v80 - 8);
    int v62 = (*(uint64_t (**)(uint64_t, uint64_t))(v61 + 48))(v60, 1);
    uint64_t v63 = (uint64_t)v77;
    uint64_t v64 = (uint64_t)v81;
    uint64_t v65 = v76;
    if (v62 == 1)
    {
      sub_10051B3EC(v82, v76, (uint64_t *)&unk_101674520);
      swift_retain();
      sub_100522F00(v83, (uint64_t *)&unk_101674520);
    }
    else
    {
      swift_retain();
      sub_100522F00(v82, (uint64_t *)&unk_101674520);
      uint64_t v66 = v80;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v61 + 32))(v65, v83, v80);
      uint64_t v67 = v66;
      uint64_t v64 = (uint64_t)v81;
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v61 + 56))(v65, 0, 1, v67);
    }
    sub_100522E9C(v65, v63, (uint64_t *)&unk_101674520);
    swift_beginAccess();
    sub_100522E9C(v63, v64, (uint64_t *)&unk_101674520);
    uint64_t v68 = v65;
    uint64_t v69 = v63;
    uint64_t v70 = v54;
    uint64_t v71 = (void (*)(char *, void))CRRegister.wrappedValue.modify();
    sub_1006063BC(v64, v72, (uint64_t *)&unk_101674520);
    v71(v93, 0);
    sub_100522F00(v69, (uint64_t *)&unk_101674520);
    swift_endAccess();
    sub_100522F00(v68, (uint64_t *)&unk_101674520);
    swift_release();
    uint64_t v73 = *(void **)(v79 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_store);
    id v74 = objc_allocWithZone((Class)type metadata accessor for CRLFreehandDrawingItem());
    id v59 = sub_1009DF518((uint64_t)v73, (uint64_t)v55);
    sub_100522F00(v70, (uint64_t *)&unk_101674520);
    sub_100522F00((uint64_t)v86, (uint64_t *)&unk_101683E10);
    sub_1009E3168((uint64_t)v84, type metadata accessor for CRLFreehandDrawingCRDTData);
  }
  return v59;
}

void sub_1009E071C(void *a1)
{
  if (([a1 isKindOfClass:swift_getObjCClassFromMetadata()] & 1) == 0)
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"_willAddNewItem(item:)", 22, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLFreehandDrawingItem.swift", 93, 2, 90, (uint64_t)"All items inserted into a freehand drawing should be freehand drawing shapes.", 77, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"_willAddNewItem(item:)", 22, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLFreehandDrawingItem.swift", 93, 2, 90);
  }
}

id sub_1009E0924()
{
  uint64_t v1 = v0;
  type metadata accessor for CRLFreehandItemData(0);
  swift_dynamicCastClassUnconditional();
  swift_retain();
  uint64_t v2 = sub_100FC4EF8(0);
  swift_release();
  uint64_t v3 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_store);
  id v4 = objc_allocWithZone((Class)type metadata accessor for CRLFreehandDrawingItem());
  return sub_1009DF518((uint64_t)v3, (uint64_t)v2);
}

uint64_t sub_1009E09D4()
{
  type metadata accessor for CRLFreehandDrawingItem();
  uint64_t v1 = swift_dynamicCastClass();
  if (v1)
  {
    uint64_t v2 = (void *)v1;
    swift_unknownObjectRetain();
    uint64_t v3 = sub_1009E2544(v2, v0);
    swift_unknownObjectRelease();
    return v3;
  }
  else
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"createUndoingMutations(fromSnapshot:)", 37, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLFreehandDrawingItem.swift", 93, 2, 110, (uint64_t)"Tried to generate undo from mismatched type", 43, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_100586FD4((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Tried to generate undo from mismatched type");
    sub_1005871AC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"createUndoingMutations(fromSnapshot:)", 37, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLFreehandDrawingItem.swift", 93, 2, 110);
    SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v5, v6);
    uint64_t result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
  return result;
}

uint64_t sub_1009E0B20(uint64_t a1)
{
  uint64_t v2 = sub_1005057FC(&qword_10168AB68);
  uint64_t v64 = *(void *)(v2 - 8);
  uint64_t v65 = v2;
  __chkstk_darwin(v2, v3);
  uint64_t v62 = (uint64_t)&v60 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5, v6);
  uint64_t v61 = (uint64_t)&v60 - v7;
  __chkstk_darwin(v8, v9);
  uint64_t v63 = (uint64_t)&v60 - v10;
  uint64_t v66 = type metadata accessor for CRLFreehandDrawingCRDTData(0);
  __chkstk_darwin(v66, v11);
  uint64_t v13 = (char *)&v60 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14, v15);
  uint64_t v17 = (char *)&v60 - v16;
  uint64_t v18 = sub_1005057FC(&qword_10168AB70);
  __chkstk_darwin(v18 - 8, v19);
  uint64_t v21 = (char *)&v60 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22, v23);
  uint64_t v25 = (char *)&v60 - v24;
  type metadata accessor for CRLFreehandDrawingItem();
  uint64_t v26 = swift_dynamicCastClass();
  if (v26)
  {
    uint64_t v27 = (void *)v26;
    uint64_t v67 = a1;
    swift_unknownObjectRetain();
    uint64_t v68 = sub_1009E2994(v27);
    type metadata accessor for CRLFreehandItemData(0);
    uint64_t v28 = swift_dynamicCastClassUnconditional() + qword_10171CE48;
    swift_beginAccess();
    sub_1009E24DC(v28, (uint64_t)v17, type metadata accessor for CRLFreehandDrawingCRDTData);
    uint64_t v29 = swift_dynamicCastClassUnconditional() + qword_10171CE48;
    swift_beginAccess();
    sub_1009E24DC(v29, (uint64_t)v13, type metadata accessor for CRLFreehandDrawingCRDTData);
    sub_1009E31C8(&qword_10168AB78, (void (*)(uint64_t))type metadata accessor for CRLFreehandDrawingCRDTData);
    CRType.observableDifference(from:)();
    sub_1009E3168((uint64_t)v13, type metadata accessor for CRLFreehandDrawingCRDTData);
    sub_1009E3168((uint64_t)v17, type metadata accessor for CRLFreehandDrawingCRDTData);
    sub_100522E9C((uint64_t)v25, (uint64_t)v21, &qword_10168AB70);
    uint64_t v30 = v65;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v64 + 48))(v21, 1, v65) == 1)
    {
      sub_100522F00((uint64_t)v21, &qword_10168AB70);
      uint64_t v31 = _swiftEmptyArrayStorage;
      uint64_t v32 = v68;
      if (!*(void *)&_swiftEmptyArrayStorage[2]) {
        goto LABEL_20;
      }
    }
    else
    {
      uint64_t v66 = (uint64_t)v25;
      uint64_t v33 = *(int *)(v30 + 48);
      uint64_t v34 = v63;
      uint64_t v35 = v63 + v33;
      uint64_t v36 = *(int *)(v30 + 64);
      uint64_t v37 = v63 + v36;
      uint64_t v38 = (uint64_t)&v21[v33];
      uint64_t v39 = (uint64_t)&v21[v36];
      sub_10051B3EC((uint64_t)v21, v63, &qword_101683E90);
      sub_10051B3EC(v38, v35, &qword_10167D310);
      sub_10051B3EC(v39, v37, &qword_10167D310);
      uint64_t v40 = v61;
      uint64_t v41 = v61 + *(int *)(v30 + 48);
      uint64_t v42 = v30;
      uint64_t v43 = v61 + *(int *)(v30 + 64);
      sub_100522E9C(v34, v61, &qword_101683E90);
      sub_100522E9C(v35, v41, &qword_10167D310);
      sub_100522E9C(v37, v43, &qword_10167D310);
      uint64_t v44 = sub_1005057FC(&qword_101683E88);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v44 - 8) + 48))(v40, 1, v44) == 1)
      {
        sub_100522F00(v43, &qword_10167D310);
        sub_100522F00(v41, &qword_10167D310);
        sub_100522F00(v40, &qword_101683E90);
        uint64_t v31 = _swiftEmptyArrayStorage;
        uint64_t v32 = v68;
      }
      else
      {
        sub_100522F00(v40, &qword_101683E90);
        sub_100522F00(v43, &qword_10167D310);
        sub_100522F00(v41, &qword_10167D310);
        uint64_t v31 = sub_100F61B70(0, 1, 1, _swiftEmptyArrayStorage);
        unint64_t v46 = *((void *)v31 + 2);
        unint64_t v45 = *((void *)v31 + 3);
        uint64_t v32 = v68;
        if (v46 >= v45 >> 1) {
          uint64_t v31 = sub_100F61B70((double *)(v45 > 1), v46 + 1, 1, v31);
        }
        *((void *)v31 + 2) = v46 + 1;
        uint64_t v47 = &v31[2 * v46];
        v47[4] = -2.31584178e77;
        *((void *)v47 + 5) = 0x8000000101266F00;
        if (!*(void *)(v32 + 16) || (sub_100956360(1), (v48 & 1) == 0))
        {
          sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"createSpecificDataObservableDeltas(fromSnapshot:)", 49, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLFreehandDrawingItem.swift", 93, 2, 138, (uint64_t)"if the containerCRDTData has changed, super should have built keys for it already", 81, 2u, (uint64_t)_swiftEmptyArrayStorage);
          uint64_t v32 = v68;
          uint64_t v34 = v63;
          sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"createSpecificDataObservableDeltas(fromSnapshot:)", 49, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLFreehandDrawingItem.swift", 93, 2, 138);
        }
      }
      uint64_t v49 = v62;
      uint64_t v50 = v62 + *(int *)(v42 + 48);
      uint64_t v51 = v62 + *(int *)(v42 + 64);
      sub_100522E9C(v34, v62, &qword_101683E90);
      sub_100522E9C(v35, v50, &qword_10167D310);
      sub_100522E9C(v37, v51, &qword_10167D310);
      uint64_t v52 = type metadata accessor for CRValueObservableDifference();
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v52 - 8) + 48))(v50, 1, v52) == 1)
      {
        sub_100522F00(v34, &qword_10168AB68);
        sub_100522F00(v51, &qword_10167D310);
        sub_100522F00(v50, &qword_10167D310);
        sub_100522F00(v49, &qword_101683E90);
        uint64_t v25 = (char *)v66;
        if (!*((void *)v31 + 2))
        {
LABEL_20:
          swift_bridgeObjectRelease();
          swift_unknownObjectRelease();
          goto LABEL_21;
        }
      }
      else
      {
        sub_100522F00(v50, &qword_10167D310);
        sub_100522F00(v51, &qword_10167D310);
        sub_100522F00(v49, &qword_101683E90);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v31 = sub_100F61B70(0, *((void *)v31 + 2) + 1, 1, v31);
        }
        uint64_t v25 = (char *)v66;
        unint64_t v55 = *((void *)v31 + 2);
        unint64_t v54 = *((void *)v31 + 3);
        if (v55 >= v54 >> 1) {
          uint64_t v31 = sub_100F61B70((double *)(v54 > 1), v55 + 1, 1, v31);
        }
        *((void *)v31 + 2) = v55 + 1;
        uint64_t v56 = &v31[2 * v55];
        v56[4] = -2.31584178e77;
        *((void *)v56 + 5) = 0x800000010124C810;
        sub_100522F00(v34, &qword_10168AB68);
        if (!*((void *)v31 + 2)) {
          goto LABEL_20;
        }
      }
    }
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v69 = v32;
    sub_100972448((uint64_t)v31, 9, isUniquelyReferenced_nonNull_native);
    uint64_t v32 = v69;
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
LABEL_21:
    sub_100522F00((uint64_t)v25, &qword_10168AB70);
    return v32;
  }
  sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"createSpecificDataObservableDeltas(fromSnapshot:)", 49, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLFreehandDrawingItem.swift", 93, 2, 128, (uint64_t)"Tried to create observable deltas from mismatched type", 54, 2u, (uint64_t)_swiftEmptyArrayStorage);
  sub_100586FD4((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Tried to create observable deltas from mismatched type");
  sub_1005871AC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"createSpecificDataObservableDeltas(fromSnapshot:)", 49, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLFreehandDrawingItem.swift", 93, 2, 128);
  SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v58, v59);
  uint64_t result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1009E144C(uint64_t a1)
{
  return sub_100845B0C(a1);
}

uint64_t sub_1009E1464(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  uint64_t v5 = v4;
  switch(a3)
  {
    case 9:
      uint64_t result = swift_bridgeObjectRelease();
      goto LABEL_4;
    default:
      char v11 = _stringCompareWithSmolCheck(_:_:expecting:)();
      uint64_t result = swift_bridgeObjectRelease();
      if (v11)
      {
LABEL_4:
        uint64_t v12 = *(void *)(a2 + 16);
        if (!v12) {
          return result;
        }
        uint64_t v13 = (void *)(a1 + OBJC_IVAR____TtC8Freeform14CRLPropertyMap_data);
        swift_bridgeObjectRetain();
        for (uint64_t i = (uint64_t *)(a2 + 40); ; i += 2)
        {
          uint64_t v16 = *(i - 1);
          uint64_t v15 = *i;
          if ((v16 != 0xD000000000000011 || v15 != 0x8000000101266F00)
            && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
          {
            if ((v16 != 0xD000000000000013 || v15 != 0x800000010124C810)
              && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
            {
              sub_1005057FC((uint64_t *)&unk_101672B40);
              uint64_t inited = swift_initStackObject();
              *(_OWORD *)(inited + 16) = xmmword_10117E810;
              *(void *)(inited + 56) = &type metadata for String;
              *(void *)(inited + 64) = sub_100528BE4();
              *(void *)(inited + 32) = v16;
              *(void *)(inited + 40) = v15;
              swift_bridgeObjectRetain();
              sub_1005598CC(inited, (uint64_t)"populatePropertyMap(_:observedDifferenceLabels:withPropertyKey:snapshot:)", 73, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLFreehandDrawingItem.swift", 93, 2, 175);
              swift_setDeallocating();
              sub_1005057FC(&qword_101672B50);
              swift_arrayDestroy();
            }
            goto LABEL_8;
          }
          uint64_t v17 = OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedOrderedItemUUIDs;
          uint64_t v18 = *(double **)(v5 + OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedOrderedItemUUIDs);
          if (!v18)
          {
            sub_100846AB0();
            uint64_t v18 = *(double **)(v5 + v17);
          }
          if (v18) {
            uint64_t v19 = v18;
          }
          else {
            uint64_t v19 = _swiftEmptyArrayStorage;
          }
          v37[3] = sub_1005057FC(&qword_101683E60);
          v37[0] = v19;
          swift_beginAccess();
          sub_100522E9C((uint64_t)v37, (uint64_t)v36, &qword_101672BF0);
          swift_bridgeObjectRetain();
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v21 = (void *)*v13;
          uint64_t v35 = (void *)*v13;
          *uint64_t v13 = 0x8000000000000000;
          unint64_t v23 = sub_1009563E8();
          uint64_t v24 = v21[2];
          BOOL v25 = (v22 & 1) == 0;
          uint64_t v26 = v24 + v25;
          if (__OFADD__(v24, v25))
          {
            __break(1u);
LABEL_38:
            __break(1u);
LABEL_39:
            type metadata accessor for CRLChangeProperty(0);
            KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
            __break(1u);
            JUMPOUT(0x1009E19D0);
          }
          char v27 = v22;
          if (v21[3] >= v26)
          {
            if (isUniquelyReferenced_nonNull_native)
            {
              uint64_t v30 = v35;
              if ((v22 & 1) == 0) {
                goto LABEL_24;
              }
            }
            else
            {
              sub_10097C320();
              uint64_t v30 = v35;
              if ((v27 & 1) == 0) {
                goto LABEL_24;
              }
            }
          }
          else
          {
            sub_10095F04C(v26, isUniquelyReferenced_nonNull_native);
            uint64_t v28 = sub_1009563E8();
            if ((v27 & 1) != (v29 & 1)) {
              goto LABEL_39;
            }
            unint64_t v23 = v28;
            uint64_t v30 = v35;
            if ((v27 & 1) == 0)
            {
LABEL_24:
              v30[(v23 >> 6) + 8] |= 1 << v23;
              *(void *)(v30[6] + 8 * v23) = 4;
              sub_10051B3EC((uint64_t)v36, v30[7] + 32 * v23, &qword_101672BF0);
              uint64_t v31 = v30[2];
              BOOL v32 = __OFADD__(v31, 1);
              uint64_t v33 = v31 + 1;
              if (v32) {
                goto LABEL_38;
              }
              v30[2] = v33;
              goto LABEL_7;
            }
          }
          sub_1006063BC((uint64_t)v36, v30[7] + 32 * v23, &qword_101672BF0);
LABEL_7:
          *uint64_t v13 = v30;
          swift_bridgeObjectRelease();
          swift_endAccess();
          sub_100522F00((uint64_t)v37, &qword_101672BF0);
LABEL_8:
          if (!--v12) {
            return swift_bridgeObjectRelease();
          }
        }
      }
      return sub_100845F48(a1, a2, a3, a4);
  }
}

uint64_t sub_1009E1A00()
{
  return sub_100522F00(v0 + OBJC_IVAR____TtC8Freeform22CRLFreehandDrawingItem_cachedPKDrawing, &qword_1016842F0);
}

id sub_1009E1A3C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLFreehandDrawingItem();
  [super dealloc];
}

uint64_t sub_1009E1ABC()
{
  return type metadata accessor for CRLFreehandDrawingItem();
}

uint64_t type metadata accessor for CRLFreehandDrawingItem()
{
  uint64_t result = qword_10168AB50;
  if (!qword_10168AB50) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1009E1B10()
{
  sub_1009E1BAC();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_1009E1BAC()
{
  if (!qword_10168AB60)
  {
    type metadata accessor for PKDrawing();
    unint64_t v0 = type metadata accessor for Optional();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_10168AB60);
    }
  }
}

id sub_1009E1C04(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v86 = a1;
  uint64_t v80 = type metadata accessor for CRLContainerItemCRDTData(0);
  __chkstk_darwin(v80, v6);
  uint64_t v84 = (uint64_t)&v70 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v81 = type metadata accessor for CRLFreehandDrawingCRDTData(0);
  __chkstk_darwin(v81, v8);
  uint64_t v83 = (uint64_t)&v70 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10, v11);
  uint64_t v85 = (char *)&v70 - v12;
  uint64_t v13 = type metadata accessor for UUID();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13, v15);
  uint64_t v78 = (char *)&v70 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_1005057FC((uint64_t *)&unk_101683E10);
  __chkstk_darwin(v17 - 8, v18);
  uint64_t v82 = (uint64_t)&v70 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20, v21);
  uint64_t v90 = (uint64_t)&v70 - v22;
  uint64_t v23 = sub_1005057FC((uint64_t *)&unk_101674520);
  __chkstk_darwin(v23 - 8, v24);
  uint64_t v74 = (uint64_t)&v70 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26, v27);
  char v29 = (char *)&v70 - v28;
  uint64_t v75 = type metadata accessor for CRLBoardItemParentAffinity();
  __chkstk_darwin(v75, v30);
  BOOL v32 = (char *)&v70 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v33, v34);
  uint64_t v89 = (uint64_t)&v70 - v35;
  id v87 = v3;
  if (a3)
  {
    id v36 = v3;
    id v37 = a3;
  }
  else
  {
    id v38 = objc_allocWithZone((Class)CRLCanvasInfoGeometry);
    id v39 = v3;
    id v37 = [v38 init];
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v29, a2, v13);
  uint64_t v73 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56);
  v73(v29, 0, 1, v13);
  id v79 = a3;
  id v40 = v37;
  [v40 position];
  float v42 = v41;
  float v44 = v43;
  [v40 size];
  float v46 = v45;
  float v48 = v47;
  [v40 angle];
  float v50 = v49;
  unsigned int v72 = [v40 widthValid];
  unsigned int v71 = [v40 heightValid];
  unsigned __int8 v51 = [v40 horizontalFlip];
  uint64_t v77 = v14;
  unsigned __int8 v52 = v51;
  unsigned __int8 v53 = [v40 verticalFlip];
  uint64_t v88 = v13;
  unsigned __int8 v54 = v53;

  uint64_t v76 = a2;
  uint64_t v55 = v74;
  sub_100522E9C((uint64_t)v29, v74, (uint64_t *)&unk_101674520);
  v73(v32, 1, 1, v13);
  uint64_t v56 = v75;
  *(void *)&v32[*(int *)(v75 + 24)] = _swiftEmptyDictionarySingleton;
  sub_1006063BC(v55, (uint64_t)v32, (uint64_t *)&unk_101674520);
  uint64_t v57 = &v32[*(int *)(v56 + 20)];
  *(float *)uint64_t v57 = v42;
  *((float *)v57 + 1) = v44;
  *((float *)v57 + 2) = v46;
  *((float *)v57 + 3) = v48;
  *((float *)v57 + 4) = v50;
  v57[20] = v72;
  v57[21] = v71;
  v57[22] = v52;
  v57[23] = v54;
  *((void *)v57 + 3) = _swiftEmptyDictionarySingleton;
  uint64_t v58 = v89;
  sub_1008534A8((uint64_t)v32, v89, (uint64_t (*)(void))type metadata accessor for CRLBoardItemParentAffinity);
  sub_100522F00((uint64_t)v29, (uint64_t *)&unk_101674520);
  sub_1009E24DC(v58, (uint64_t)v32, (uint64_t (*)(void))type metadata accessor for CRLBoardItemParentAffinity);
  sub_10051A41C(v92);
  sub_10051B3EC((uint64_t)v92, (uint64_t)v93, (uint64_t *)&unk_101683E20);
  uint64_t v59 = (uint64_t)v78;
  UUID.init()();
  uint64_t v60 = v90;
  sub_100FC2584(v59, (uint64_t)v32, 0, 0, 0, 0xE000000000000000, (uint64_t)v93, v90);
  uint64_t v61 = (uint64_t)v85;
  *(void *)&v85[*(int *)(v81 + 28)] = _swiftEmptyDictionarySingleton;
  *(void *)(v61 + *(int *)(v80 + 20)) = _swiftEmptyDictionarySingleton;
  sub_1009E31C8((unint64_t *)&qword_1016770E0, (void (*)(uint64_t))&type metadata accessor for UUID);
  CROrderedSet.init()();
  char v91 = 0;
  CRRegister.init(wrappedValue:)();
  char v91 = 0;
  CRRegister.init(wrappedValue:)();
  uint64_t v62 = v82;
  sub_100522E9C(v60, v82, (uint64_t *)&unk_101683E10);
  uint64_t v63 = v83;
  sub_1009E24DC(v61, v83, type metadata accessor for CRLFreehandDrawingCRDTData);
  type metadata accessor for CRLFreehandItemData(0);
  uint64_t v64 = swift_allocObject();
  sub_1009E24DC(v63, v64 + qword_10171CE48, type metadata accessor for CRLFreehandDrawingCRDTData);
  uint64_t v65 = v84;
  sub_1009E24DC(v63, v84, type metadata accessor for CRLContainerItemCRDTData);
  sub_1009E3168(v63, type metadata accessor for CRLFreehandDrawingCRDTData);
  sub_1008534A8(v65, v64 + qword_10171BE80, type metadata accessor for CRLContainerItemCRDTData);
  sub_10051B3EC(v62, v64 + *(void *)(*(void *)v64 + 632), (uint64_t *)&unk_101683E10);
  uint64_t v66 = sub_10068B398(0x1000000000000, 0x2000400000000, 0x1000000000000, 4);

  id v67 = objc_allocWithZone((Class)type metadata accessor for CRLFreehandDrawingItem());
  id v68 = sub_1009DF518(v86, (uint64_t)v66);

  (*(void (**)(uint64_t, uint64_t))(v77 + 8))(v76, v88);
  sub_1009E3168(v61, type metadata accessor for CRLFreehandDrawingCRDTData);
  sub_100522F00(v90, (uint64_t *)&unk_101683E10);
  sub_1009E3168(v89, (uint64_t (*)(void))type metadata accessor for CRLBoardItemParentAffinity);
  swift_getObjectType();
  swift_deallocPartialClassInstance();
  return v68;
}

uint64_t sub_1009E24DC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1009E2544(void *a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CRLContainerItemCRDTData(0);
  __chkstk_darwin(v4, v5);
  uint64_t v7 = (char *)v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0) + 16;
  __chkstk_darwin(v8, v9);
  uint64_t v11 = (char *)v28 - v10 + 16;
  uint64_t v12 = sub_1005057FC(&qword_101683EB0);
  __chkstk_darwin(v12 - 8, v13);
  uint64_t v15 = (char *)v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0) + 16;
  type metadata accessor for CRLContainerItem(0);
  uint64_t v16 = swift_dynamicCastClass();
  if (v16)
  {
    uint64_t v17 = v16;
    swift_unknownObjectRetain();
    uint64_t v18 = sub_100CF6354(v17, a2);
    type metadata accessor for CRLContainerItemData(0);
    uint64_t v19 = *(void *)swift_dynamicCastClassUnconditional();
    (*(void (**)(void))(v19 + 680))();
    uint64_t v20 = *(void *)swift_dynamicCastClassUnconditional();
    (*(void (**)(void))(v20 + 680))();
    sub_1009E31C8(&qword_101683EC8, (void (*)(uint64_t))type metadata accessor for CRLContainerItemCRDTData);
    CRStruct_1.actionUndoingDifference(from:)();
    sub_1009E3168((uint64_t)v7, type metadata accessor for CRLContainerItemCRDTData);
    sub_1009E3168((uint64_t)v11, type metadata accessor for CRLContainerItemCRDTData);
    uint64_t v21 = sub_1005057FC((uint64_t *)&unk_101683EB8);
    uint64_t v22 = *(void *)(v21 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v15, 1, v21) == 1)
    {
      sub_100522F00((uint64_t)v15, &qword_101683EB0);
      memset(v28, 0, sizeof(v28));
      uint64_t v29 = 1;
    }
    else
    {
      uint64_t v29 = v21;
      uint64_t v23 = sub_1005767BC(v28);
      (*(void (**)(uint64_t *, char *, uint64_t))(v22 + 32))(v23, v15, v21);
    }
    swift_beginAccess();
    sub_10057D560((uint64_t)v28, 1);
    swift_endAccess();

    return v18;
  }
  else
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"createUndoingMutations(fromSnapshot:)", 37, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLContainerItem.swift", 87, 2, 629, (uint64_t)"Tried to generate undo from mismatched type", 43, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_100586FD4((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Tried to generate undo from mismatched type");
    sub_1005871AC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"createUndoingMutations(fromSnapshot:)", 37, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLContainerItem.swift", 87, 2, 629);
    SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v25, v26);
    uint64_t result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
  return result;
}

uint64_t sub_1009E2994(void *a1)
{
  uint64_t v2 = sub_1005057FC(&qword_101683E80);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2, v4);
  uint64_t v56 = (char *)&v56 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = sub_1005057FC(&qword_101683E88);
  uint64_t v6 = *(void *)(v62 - 8);
  __chkstk_darwin(v62, v7);
  uint64_t v57 = (uint64_t)&v56 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9, v10);
  uint64_t v58 = (uint64_t)&v56 - v11;
  uint64_t v12 = type metadata accessor for CRLContainerItemCRDTData(0);
  __chkstk_darwin(v12, v13);
  uint64_t v15 = (char *)&v56 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16, v17);
  uint64_t v19 = (char *)&v56 - v18;
  uint64_t v20 = sub_1005057FC(&qword_101683E90);
  __chkstk_darwin(v20 - 8, v21);
  uint64_t v23 = (char *)&v56 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24, v25);
  uint64_t v61 = (char *)&v56 - v26;
  type metadata accessor for CRLContainerItem(0);
  if (swift_dynamicCastClass())
  {
    uint64_t v59 = v3;
    uint64_t v60 = v2;
    type metadata accessor for CRLBoardItemBase(0);
    if (swift_dynamicCastClass())
    {
      type metadata accessor for CRLContainerItemData(0);
      uint64_t v27 = *(void *)swift_dynamicCastClassUnconditional();
      (*(void (**)(void))(v27 + 680))();
      uint64_t v28 = *(void *)swift_dynamicCastClassUnconditional();
      (*(void (**)(void))(v28 + 680))();
      sub_1009E31C8(&qword_101683E98, (void (*)(uint64_t))type metadata accessor for CRLContainerItemCRDTData);
      id v29 = a1;
      uint64_t v30 = (uint64_t)v61;
      CRType.observableDifference(from:)();
      sub_1009E3168((uint64_t)v15, type metadata accessor for CRLContainerItemCRDTData);
      sub_1009E3168((uint64_t)v19, type metadata accessor for CRLContainerItemCRDTData);
      sub_100522E9C(v30, (uint64_t)v23, &qword_101683E90);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v23, 1, v62) == 1)
      {
        uint64_t v31 = &qword_101683E90;
        uint64_t v32 = (uint64_t)v23;
      }
      else
      {
        uint64_t v33 = v58;
        sub_10051B3EC((uint64_t)v23, v58, (uint64_t *)&unk_101683EA0);
        uint64_t v34 = v57;
        sub_100522E9C(v33, v57, (uint64_t *)&unk_101683EA0);
        uint64_t v36 = v59;
        uint64_t v35 = v60;
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v59 + 48))(v34, 1, v60) != 1)
        {
          id v40 = v29;
          double v41 = v56;
          (*(void (**)(char *, uint64_t, uint64_t))(v36 + 32))(v56, v34, v35);
          id v37 = sub_100F61B70(0, 1, 1, _swiftEmptyArrayStorage);
          unint64_t v43 = *((void *)v37 + 2);
          unint64_t v42 = *((void *)v37 + 3);
          if (v43 >= v42 >> 1) {
            id v37 = sub_100F61B70((double *)(v42 > 1), v43 + 1, 1, v37);
          }
          *((void *)v37 + 2) = v43 + 1;
          float v44 = &v37[2 * v43];
          *((void *)v44 + 4) = 0x736D657469;
          v44[5] = -3.24180904e178;
          uint64_t v45 = *(void *)(CROrderedSet.ObservableDifference.moved.getter() + 16);
          swift_bridgeObjectRelease();
          if (v45)
          {
            unint64_t v47 = *((void *)v37 + 2);
            unint64_t v46 = *((void *)v37 + 3);
            if (v47 >= v46 >> 1) {
              id v37 = sub_100F61B70((double *)(v46 > 1), v47 + 1, 1, v37);
            }
            *((void *)v37 + 2) = v47 + 1;
            float v48 = &v37[2 * v47];
            v48[4] = 2.65134911e180;
            v48[5] = -5.98008217e197;
          }
          (*(void (**)(char *, uint64_t))(v36 + 8))(v41, v35);
          sub_100522F00(v33, &qword_101683E88);
          id v29 = v40;
          if (*((void *)v37 + 2)) {
            goto LABEL_8;
          }
          goto LABEL_16;
        }
        sub_100522F00(v33, &qword_101683E88);
        uint64_t v31 = (uint64_t *)&unk_101683EA0;
        uint64_t v32 = v34;
      }
      sub_100522F00(v32, v31);
      id v37 = _swiftEmptyArrayStorage;
      if (*(void *)&_swiftEmptyArrayStorage[2])
      {
LABEL_8:
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v63 = _swiftEmptyDictionarySingleton;
        sub_100972448((uint64_t)v37, 1, isUniquelyReferenced_nonNull_native);
        id v39 = v63;

        swift_bridgeObjectRelease();
LABEL_17:
        sub_100522F00(v30, &qword_101683E90);
        return (uint64_t)v39;
      }
LABEL_16:
      swift_bridgeObjectRelease();

      id v39 = _swiftEmptyDictionarySingleton;
      goto LABEL_17;
    }
    id v53 = a1;
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"createSpecificDataObservableDeltas(fromSnapshot:)", 49, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLBoardItem.swift", 83, 2, 835, (uint64_t)"Tried to create observable deltas from mismatched type", 54, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_100586FD4((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Tried to create observable deltas from mismatched type");
    float v50 = "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLBoardItem.swift";
    uint64_t v51 = 83;
    uint64_t v52 = 835;
  }
  else
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"createSpecificDataObservableDeltas(fromSnapshot:)", 49, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLContainerItem.swift", 87, 2, 641, (uint64_t)"Tried to create observable deltas from mismatched type", 54, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_100586FD4((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Tried to create observable deltas from mismatched type");
    float v50 = "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLContainerItem.swift";
    uint64_t v51 = 87;
    uint64_t v52 = 641;
  }
  sub_1005871AC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"createSpecificDataObservableDeltas(fromSnapshot:)", 49, 2, (uint64_t)v50, v51, 2, v52);
  SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v54, v55);
  uint64_t result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1009E3168(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1009E31C8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1009E3210()
{
  unint64_t result = qword_1016737D8;
  if (!qword_1016737D8)
  {
    sub_100522D34((uint64_t *)&unk_101683E10);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016737D8);
  }
  return result;
}

uint64_t sub_1009E326C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CRLContainerItemCRDTData(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

void sub_1009E32D0(void *a1, void *a2)
{
  uint64_t v4 = self;
  sub_1005057FC((uint64_t *)&unk_101676C10);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_10117FBE0;
  id v6 = [a1 topAnchor];
  id v7 = [a2 topAnchor];
  id v8 = [v6 constraintEqualToAnchor:v7];

  *(void *)(v5 + 32) = v8;
  id v9 = [a1 bottomAnchor];
  id v10 = [a2 bottomAnchor];
  id v11 = [v9 constraintEqualToAnchor:v10];

  *(void *)(v5 + 40) = v11;
  id v12 = [a1 leadingAnchor];
  id v13 = [a2 leadingAnchor];
  id v14 = [v12 constraintEqualToAnchor:v13];

  *(void *)(v5 + 48) = v14;
  id v15 = [a1 trailingAnchor];
  id v16 = [a2 trailingAnchor];
  id v17 = [v15 constraintEqualToAnchor:v16];

  *(void *)(v5 + 56) = v17;
  specialized Array._endMutation()();
  sub_10053BBC0();
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v4 activateConstraints:isa];
}

uint64_t sub_1009E3518(char a1)
{
  uint64_t v2 = self;
  id v3 = [v2 mainBundle];
  NSString v4 = String._bridgeToObjectiveC()();
  NSString v5 = String._bridgeToObjectiveC()();
  id v6 = [v3 localizedStringForKey:v4 value:v5 table:0];

  uint64_t v7 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v9 = v8;

  switch(a1)
  {
    case 2:
      swift_bridgeObjectRelease();
      if (qword_10166F9C8 != -1) {
        swift_once();
      }
      swift_beginAccess();
      uint64_t v21 = (void *)static OS_os_log.crlDefault;
      sub_1005057FC((uint64_t *)&unk_101672B40);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_10117E810;
      id v23 = v21;
      uint64_t v24 = String.init<A>(describing:)();
      uint64_t v26 = v25;
      *(void *)(inited + 56) = &type metadata for String;
      *(void *)(inited + 64) = sub_100528BE4();
      *(void *)(inited + 32) = v24;
      *(void *)(inited + 40) = v26;
      uint64_t v27 = static os_log_type_t.error.getter();
      uint64_t v28 = "Invalid URL detected.: %@";
      uint64_t v29 = (uint64_t)v23;
      uint64_t v30 = 25;
      goto LABEL_10;
    case 4:
      swift_bridgeObjectRelease();
      goto LABEL_11;
    case 5:
      swift_bridgeObjectRelease();
      if (qword_10166F9C8 != -1) {
        swift_once();
      }
      swift_beginAccess();
      uint64_t v31 = (void *)static OS_os_log.crlDefault;
      sub_1005057FC((uint64_t *)&unk_101672B40);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_10117E810;
      id v23 = v31;
      uint64_t v32 = String.init<A>(describing:)();
      uint64_t v34 = v33;
      *(void *)(inited + 56) = &type metadata for String;
      *(void *)(inited + 64) = sub_100528BE4();
      *(void *)(inited + 32) = v32;
      *(void *)(inited + 40) = v34;
      uint64_t v27 = static os_log_type_t.error.getter();
      uint64_t v28 = "Metadata provider initialized with invalid URL type.: %@";
      uint64_t v29 = (uint64_t)v23;
      uint64_t v30 = 56;
LABEL_10:
      sub_100BAC898(v29, (uint64_t)&_mh_execute_header, v27, (uint64_t)v28, v30, 2, inited);
      swift_setDeallocating();
      sub_1005057FC(&qword_101672B50);
      swift_arrayDestroy();

LABEL_11:
      uint64_t result = 0;
      break;
    default:
      id v10 = [v2 mainBundle];
      NSString v11 = String._bridgeToObjectiveC()();
      NSString v12 = String._bridgeToObjectiveC()();
      id v13 = [v10 localizedStringForKey:v11 value:v12 table:0];

      uint64_t v14 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v16 = v15;

      sub_100817950();
      uint64_t v17 = swift_allocError();
      *uint64_t v18 = a1;
      uint64_t v19 = sub_100DCA448(v17, 0, 1, 0, 1, 1, v7, v9, v14, v16, 0);
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_bridgeObjectRelease();
      uint64_t result = v19;
      break;
  }
  return result;
}

uint64_t sub_1009E3CFC()
{
  v1[19] = v0;
  uint64_t v2 = type metadata accessor for CancellationError();
  v1[20] = v2;
  v1[21] = *(void *)(v2 - 8);
  v1[22] = swift_task_alloc();
  sub_1005057FC(&qword_101672BB0);
  v1[23] = swift_task_alloc();
  return _swift_task_switch(sub_1009E3DEC, 0, 0);
}

uint64_t sub_1009E3DEC()
{
  uint64_t v1 = v0[23];
  uint64_t v2 = (void *)v0[19];
  uint64_t v3 = type metadata accessor for TaskPriority();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56))(v1, 1, 1, v3);
  uint64_t v4 = (void *)swift_allocObject();
  v4[2] = 0;
  v4[3] = 0;
  v4[4] = v2;
  NSString v5 = v2;
  uint64_t v6 = sub_1006D9104(v1, (uint64_t)&unk_10168AC38, (uint64_t)v4);
  uint64_t v7 = OBJC_IVAR____TtC8Freeform18CRLURLItemImporter_importTask;
  *(void *)&v5[OBJC_IVAR____TtC8Freeform18CRLURLItemImporter_importTask] = v6;
  swift_release();
  uint64_t v8 = *(void *)&v5[v7];
  v0[24] = v8;
  if (v8)
  {
    swift_retain();
    uint64_t v9 = (void *)swift_task_alloc();
    v0[25] = v9;
    uint64_t v10 = sub_1005057FC(&qword_101672BD0);
    v0[26] = v10;
    *uint64_t v9 = v0;
    v9[1] = sub_1009E3FC0;
    return Task.result.getter(v0 + 14, v8, (char *)&type metadata for () + 8, v10, &protocol self-conformance witness table for Error);
  }
  else
  {
    swift_task_dealloc();
    swift_task_dealloc();
    NSString v11 = (uint64_t (*)(void))v0[1];
    return v11();
  }
}

uint64_t sub_1009E3FC0()
{
  swift_task_dealloc();
  swift_release();
  return _swift_task_switch(sub_1009E40D8, 0, 0);
}

uint64_t sub_1009E40D8()
{
  if (*(unsigned char *)(v0 + 120) == 1)
  {
    uint64_t v1 = *(void *)(v0 + 112);
    swift_willThrow();
    *(void *)(v0 + 128) = v1;
    swift_errorRetain();
    if (swift_dynamicCast())
    {
      uint64_t v2 = *(void *)(v0 + 152);
      sub_100541074(v1, 1);
      char v3 = *(unsigned char *)(v0 + 121);
      sub_1008A8078();
      uint64_t v4 = swift_allocError();
      *NSString v5 = v3;
      *(void *)(v2 + OBJC_IVAR____TtC8Freeform18CRLURLItemImporter__error) = v4;
      swift_errorRelease();
      swift_errorRelease();
    }
    else
    {
      swift_errorRelease();
      *(void *)(v0 + 144) = v1;
      swift_errorRetain();
      if (swift_dynamicCast())
      {
        sub_100541074(v1, 1);
        if (qword_10166F9C8 != -1) {
          swift_once();
        }
        uint64_t v7 = *(void *)(v0 + 168);
        uint64_t v6 = *(void *)(v0 + 176);
        uint64_t v8 = *(void *)(v0 + 160);
        swift_beginAccess();
        id v9 = (id)static OS_os_log.crlDefault;
        uint64_t v10 = static os_log_type_t.default.getter();
        sub_100BAC898((uint64_t)v9, (uint64_t)&_mh_execute_header, v10, (uint64_t)"Import task cancelled. Not an error.", 36, 2, (uint64_t)_swiftEmptyArrayStorage);

        (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
        swift_errorRelease();
      }
      else
      {
        uint64_t v11 = *(void *)(v0 + 152);
        swift_errorRelease();
        sub_1008A8078();
        uint64_t v12 = swift_allocError();
        *uint64_t v13 = 1;
        *(void *)(v11 + OBJC_IVAR____TtC8Freeform18CRLURLItemImporter__error) = v12;
        swift_errorRelease();
        sub_1005057FC((uint64_t *)&unk_101672B40);
        uint64_t inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = xmmword_10117E810;
        *(void *)(v0 + 136) = v1;
        swift_errorRetain();
        uint64_t v15 = String.init<A>(describing:)();
        uint64_t v17 = v16;
        *(void *)(inited + 56) = &type metadata for String;
        *(void *)(inited + 64) = sub_100528BE4();
        *(void *)(inited + 32) = v15;
        *(void *)(inited + 40) = v17;
        sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"importBoardItem()", 17, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLURLItemImporter.swift", 89, 2, 56, (uint64_t)"Unable to create CRLURLItem: %@", 31, 2u, inited);
        sub_1005598CC(inited, (uint64_t)"importBoardItem()", 17, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLURLItemImporter.swift", 89, 2, 56);
        swift_bridgeObjectRelease();
        sub_100541074(v1, 1);
      }
    }
  }
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v18 = *(uint64_t (**)(void))(v0 + 8);
  return v18();
}

uint64_t sub_1009E4448()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_100528488;
  return sub_1009E46E8();
}

uint64_t sub_1009E4640(const void *a1, void *a2)
{
  v2[2] = a2;
  v2[3] = _Block_copy(a1);
  a2;
  uint64_t v4 = (void *)swift_task_alloc();
  v2[4] = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_1008A1150;
  return sub_1009E3CFC();
}

uint64_t sub_1009E46E8()
{
  v1[14] = v0;
  uint64_t v2 = type metadata accessor for CancellationError();
  v1[15] = v2;
  v1[16] = *(void *)(v2 - 8);
  v1[17] = swift_task_alloc();
  uint64_t v3 = type metadata accessor for CRLAssetData();
  v1[18] = v3;
  v1[19] = *(void *)(v3 - 8);
  v1[20] = swift_task_alloc();
  sub_1005057FC((uint64_t *)&unk_10167D2B0);
  v1[21] = swift_task_alloc();
  v1[22] = swift_task_alloc();
  v1[23] = swift_task_alloc();
  sub_1005057FC(&qword_101672E90);
  v1[24] = swift_task_alloc();
  v1[25] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for URL();
  v1[26] = v4;
  v1[27] = *(void *)(v4 - 8);
  v1[28] = swift_task_alloc();
  v1[29] = swift_task_alloc();
  v1[30] = swift_task_alloc();
  return _swift_task_switch(sub_1009E4908, 0, 0);
}

uint64_t sub_1009E4908()
{
  id v1 = [*(id *)(v0 + 112) delegate];
  if (v1)
  {
    uint64_t v2 = v1;
    if ([v1 respondsToSelector:"boardItemImporterWillIgnoreMediaCompatibilityOnAllDevicesRequirement:"])[v2 boardItemImporterWillIgnoreMediaCompatibilityOnAllDevicesRequirement:*(void *)(v0 + 112)]; {
    swift_unknownObjectRelease();
    }
  }
  static Task<>.checkCancellation()();
  *(void *)(v0 + 248) = 0;
  id v3 = [*(id *)(v0 + 112) URL];
  uint64_t v4 = *(void *)(v0 + 208);
  uint64_t v5 = *(void *)(v0 + 216);
  uint64_t v6 = *(void *)(v0 + 192);
  if (!v3)
  {
    (*(void (**)(void, uint64_t, uint64_t, void))(v5 + 56))(*(void *)(v0 + 192), 1, 1, *(void *)(v0 + 208));
    goto LABEL_9;
  }
  uint64_t v7 = v3;
  static URL._unconditionallyBridgeFromObjectiveC(_:)();

  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v5 + 56))(v6, 0, 1, v4);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v6, 1, v4) == 1)
  {
LABEL_9:
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"_importBoardItem()", 18, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLURLItemImporter.swift", 89, 2, 67, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"_importBoardItem()", 18, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLURLItemImporter.swift", 89, 2, 67);
  }
  uint64_t v8 = *(void *)(v0 + 208);
  uint64_t v9 = *(void *)(v0 + 216);
  uint64_t v10 = *(void *)(v0 + 200);
  sub_10051B3EC(*(void *)(v0 + 192), v10, &qword_101672E90);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v10, 1, v8) == 1)
  {
    sub_100522F00(*(void *)(v0 + 200), &qword_101672E90);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v11 = *(uint64_t (**)(void))(v0 + 8);
    return v11();
  }
  else
  {
    uint64_t v13 = *(void *)(v0 + 232);
    uint64_t v14 = *(void *)(v0 + 240);
    uint64_t v15 = *(void *)(v0 + 208);
    uint64_t v16 = *(void *)(v0 + 216);
    uint64_t v17 = *(void **)(v0 + 112);
    (*(void (**)(uint64_t, void, uint64_t))(v16 + 32))(v14, *(void *)(v0 + 200), v15);
    uint64_t v18 = *(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 16);
    *(void *)(v0 + 256) = v18;
    *(void *)(v0 + 264) = (v16 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    v18(v13, v14, v15);
    id v19 = [v17 suggestedName];
    if (v19)
    {
      uint64_t v20 = v19;
      uint64_t v21 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v23 = v22;
    }
    else
    {
      uint64_t v21 = 0;
      uint64_t v23 = 0;
    }
    *(void *)(v0 + 272) = v21;
    *(void *)(v0 + 280) = v23;
    type metadata accessor for MainActor();
    *(void *)(v0 + 288) = static MainActor.shared.getter();
    uint64_t v25 = dispatch thunk of Actor.unownedExecutor.getter();
    return _swift_task_switch(sub_1009E4D44, v25, v24);
  }
}

uint64_t sub_1009E4D44()
{
  id v1 = *(void (**)(char *, uint64_t, uint64_t))(v0 + 256);
  uint64_t v2 = *(void *)(v0 + 248);
  id v3 = *(char **)(v0 + 224);
  uint64_t v4 = *(void *)(v0 + 232);
  uint64_t v5 = *(void *)(v0 + 208);
  swift_release();
  v1(v3, v4, v5);
  id v6 = objc_allocWithZone((Class)type metadata accessor for CRLRemoteURLMetadataProvider(0));
  uint64_t v7 = sub_100E0C9B8(v3);
  *(void *)(v0 + 296) = v7;
  *(void *)(v0 + 304) = v2;
  if (v2)
  {
    uint64_t v8 = *(void *)(v0 + 232);
    uint64_t v9 = *(void *)(v0 + 208);
    uint64_t v10 = *(void *)(v0 + 216);
    uint64_t v11 = *(void (**)(uint64_t, uint64_t))(v10 + 8);
    *(void *)(v0 + 360) = v11;
    *(void *)(v0 + 368) = (v10 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    v11(v8, v9);
    swift_bridgeObjectRelease();
    uint64_t v12 = sub_1009E5408;
  }
  else
  {
    uint64_t v13 = *(void *)(v0 + 232);
    uint64_t v14 = *(void *)(v0 + 208);
    uint64_t v15 = *(void *)(v0 + 216);
    *(_OWORD *)&v7[OBJC_IVAR____TtC8Freeform26CRLURLMetadataProviderBase_filename] = *(_OWORD *)(v0 + 272);
    swift_bridgeObjectRelease();
    uint64_t v16 = *(void (**)(uint64_t, uint64_t))(v15 + 8);
    *(void *)(v0 + 312) = v16;
    *(void *)(v0 + 320) = (v15 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    v16(v13, v14);
    uint64_t v12 = sub_1009E4E8C;
  }
  return _swift_task_switch(v12, 0, 0);
}

uint64_t sub_1009E4E8C()
{
  id v1 = (void *)v0[37];
  uint64_t v2 = v0[38];
  uint64_t v3 = v0[23];
  uint64_t v4 = v0[18];
  uint64_t v5 = v0[19];
  id v6 = (char *)v0[14];
  uint64_t v7 = OBJC_IVAR____TtC8Freeform18CRLURLItemImporter_metadataProvider;
  v0[41] = OBJC_IVAR____TtC8Freeform18CRLURLItemImporter_metadataProvider;
  uint64_t v8 = *(void **)&v6[v7];
  *(void *)&v6[v7] = v1;
  id v9 = v1;

  uint64_t v10 = (char *)[v6 boardItemFactory];
  id v11 = *(id *)&v10[OBJC_IVAR____TtC8Freeform19CRLBoardItemFactory_board];

  type metadata accessor for CRLBoardItemImporterHelper();
  uint64_t inited = swift_initStackObject();
  v0[42] = inited;
  *(void *)(inited + 16) = v11;
  uint64_t v13 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 56);
  v0[43] = v13;
  v0[44] = (v5 + 56) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
  v13(v3, 1, 1, v4);
  static Task<>.checkCancellation()();
  if (v2)
  {
    uint64_t v14 = (void (*)(uint64_t, uint64_t))v0[39];
    uint64_t v15 = (void *)v0[37];
    uint64_t v16 = v0[30];
    uint64_t v17 = v0[26];
    uint64_t v18 = v0[23];
    swift_release();

    sub_100522F00(v18, (uint64_t *)&unk_10167D2B0);
    v14(v16, v17);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    id v19 = (uint64_t (*)(void))v0[1];
    return v19();
  }
  else
  {
    static Task<>.checkCancellation()();
    uint64_t v21 = (void *)swift_task_alloc();
    v0[47] = v21;
    void *v21 = v0;
    v21[1] = sub_1009E5500;
    return sub_100E0B158();
  }
}

uint64_t sub_1009E5408()
{
  (*(void (**)(void, void))(v0 + 360))(*(void *)(v0 + 240), *(void *)(v0 + 208));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  id v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1009E5500(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 384) = a1;
  *(void *)(v3 + 392) = v1;
  swift_task_dealloc();
  if (v1) {
    uint64_t v4 = sub_1009E5AA8;
  }
  else {
    uint64_t v4 = sub_1009E5614;
  }
  return _swift_task_switch(v4, 0, 0);
}

uint64_t sub_1009E5614()
{
  uint64_t v1 = *(void *)(v0 + 392);
  static Task<>.checkCancellation()();
  if (v1)
  {

    *(void *)(v0 + 96) = v1;
    swift_errorRetain();
    sub_1005057FC(&qword_101672BD0);
    if (swift_dynamicCast())
    {
      uint64_t v2 = *(void *)(v0 + 112);
      swift_errorRelease();
      *(void *)(v2 + OBJC_IVAR____TtC8Freeform18CRLURLItemImporter__error) = sub_1009E3518(*(unsigned char *)(v0 + 448));
      swift_errorRelease();
      uint64_t v3 = (void *)swift_task_alloc();
      *(void *)(v0 + 432) = v3;
      *uint64_t v3 = v0;
      v3[1] = sub_1009E6A4C;
      uint64_t v4 = *(void *)(v0 + 240);
      uint64_t v5 = *(void *)(v0 + 168);
      return sub_100DC9B28(v5, v4);
    }
    else
    {
      swift_errorRelease();
      *(void *)(v0 + 104) = v1;
      swift_errorRetain();
      if (swift_dynamicCast())
      {
        swift_errorRelease();
        if (qword_10166F9C8 != -1) {
          swift_once();
        }
        uint64_t v11 = *(void *)(v0 + 128);
        uint64_t v10 = *(void *)(v0 + 136);
        uint64_t v12 = *(void *)(v0 + 120);
        swift_beginAccess();
        id v13 = (id)static OS_os_log.crlDefault;
        uint64_t v14 = static os_log_type_t.default.getter();
        sub_100BAC898((uint64_t)v13, (uint64_t)&_mh_execute_header, v14, (uint64_t)"Metadata provider task cancelled. Not an error.", 47, 2, (uint64_t)_swiftEmptyArrayStorage);

        (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v10, v12);
        swift_errorRelease();
        static Task<>.checkCancellation()();
        *(void *)(v0 + 416) = 0;
        uint64_t v21 = (void *)swift_task_alloc();
        *(void *)(v0 + 424) = v21;
        void *v21 = v0;
        v21[1] = sub_1009E65EC;
        return sub_100E0C410(250.0, 150.0, 150.0);
      }
      else
      {
        uint64_t v15 = *(void (**)(uint64_t, uint64_t))(v0 + 312);
        uint64_t v16 = *(void **)(v0 + 296);
        uint64_t v17 = *(void *)(v0 + 240);
        uint64_t v18 = *(void *)(v0 + 208);
        uint64_t v19 = *(void *)(v0 + 184);
        swift_release();

        sub_100522F00(v19, (uint64_t *)&unk_10167D2B0);
        v15(v17, v18);
        swift_errorRelease();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        uint64_t v20 = *(uint64_t (**)(void))(v0 + 8);
        return v20();
      }
    }
  }
  else
  {
    uint64_t v7 = (void *)swift_task_alloc();
    *(void *)(v0 + 400) = v7;
    *uint64_t v7 = v0;
    v7[1] = sub_1009E5EB0;
    uint64_t v8 = *(void *)(v0 + 384);
    uint64_t v9 = *(void *)(v0 + 160);
    return sub_100DC9DEC(v9, v8);
  }
}

uint64_t sub_1009E5AA8()
{
  swift_willThrow();
  uint64_t v1 = *(void *)(v0 + 392);
  *(void *)(v0 + 96) = v1;
  swift_errorRetain();
  sub_1005057FC(&qword_101672BD0);
  if (swift_dynamicCast())
  {
    uint64_t v2 = *(void *)(v0 + 112);
    swift_errorRelease();
    *(void *)(v2 + OBJC_IVAR____TtC8Freeform18CRLURLItemImporter__error) = sub_1009E3518(*(unsigned char *)(v0 + 448));
    swift_errorRelease();
    uint64_t v3 = (void *)swift_task_alloc();
    *(void *)(v0 + 432) = v3;
    *uint64_t v3 = v0;
    v3[1] = sub_1009E6A4C;
    uint64_t v4 = *(void *)(v0 + 240);
    uint64_t v5 = *(void *)(v0 + 168);
    return sub_100DC9B28(v5, v4);
  }
  else
  {
    swift_errorRelease();
    *(void *)(v0 + 104) = v1;
    swift_errorRetain();
    if (swift_dynamicCast())
    {
      swift_errorRelease();
      if (qword_10166F9C8 != -1) {
        swift_once();
      }
      uint64_t v8 = *(void *)(v0 + 128);
      uint64_t v7 = *(void *)(v0 + 136);
      uint64_t v9 = *(void *)(v0 + 120);
      swift_beginAccess();
      id v10 = (id)static OS_os_log.crlDefault;
      uint64_t v11 = static os_log_type_t.default.getter();
      sub_100BAC898((uint64_t)v10, (uint64_t)&_mh_execute_header, v11, (uint64_t)"Metadata provider task cancelled. Not an error.", 47, 2, (uint64_t)_swiftEmptyArrayStorage);

      (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
      swift_errorRelease();
      static Task<>.checkCancellation()();
      *(void *)(v0 + 416) = 0;
      uint64_t v18 = (void *)swift_task_alloc();
      *(void *)(v0 + 424) = v18;
      *uint64_t v18 = v0;
      v18[1] = sub_1009E65EC;
      return sub_100E0C410(250.0, 150.0, 150.0);
    }
    else
    {
      uint64_t v12 = *(void (**)(uint64_t, uint64_t))(v0 + 312);
      id v13 = *(void **)(v0 + 296);
      uint64_t v14 = *(void *)(v0 + 240);
      uint64_t v15 = *(void *)(v0 + 208);
      uint64_t v16 = *(void *)(v0 + 184);
      swift_release();

      sub_100522F00(v16, (uint64_t *)&unk_10167D2B0);
      v12(v14, v15);
      swift_errorRelease();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v17 = *(uint64_t (**)(void))(v0 + 8);
      return v17();
    }
  }
}

uint64_t sub_1009E5EB0()
{
  *(void *)(*(void *)v1 + 408) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1009E61E4;
  }
  else {
    uint64_t v2 = sub_1009E5FC4;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1009E5FC4()
{
  uint64_t v1 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v0 + 344);
  uint64_t v2 = *(void *)(v0 + 176);
  uint64_t v3 = *(void *)(v0 + 184);
  uint64_t v4 = *(void *)(v0 + 160);
  uint64_t v5 = *(void *)(v0 + 144);

  sub_1008A7A50(v4, v2);
  v1(v2, 0, 1, v5);
  sub_100522F00(v3, (uint64_t *)&unk_10167D2B0);
  sub_10051B3EC(v2, v3, (uint64_t *)&unk_10167D2B0);
  uint64_t v6 = *(void *)(v0 + 408);
  static Task<>.checkCancellation()();
  *(void *)(v0 + 416) = v6;
  if (v6)
  {
    uint64_t v7 = *(void (**)(uint64_t, uint64_t))(v0 + 312);
    uint64_t v8 = *(void **)(v0 + 296);
    uint64_t v9 = *(void *)(v0 + 240);
    uint64_t v10 = *(void *)(v0 + 208);
    uint64_t v11 = *(void *)(v0 + 184);
    swift_release();

    sub_100522F00(v11, (uint64_t *)&unk_10167D2B0);
    v7(v9, v10);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v12 = *(uint64_t (**)(void))(v0 + 8);
    return v12();
  }
  else
  {
    uint64_t v14 = (void *)swift_task_alloc();
    *(void *)(v0 + 424) = v14;
    *uint64_t v14 = v0;
    v14[1] = sub_1009E65EC;
    return sub_100E0C410(250.0, 150.0, 150.0);
  }
}

uint64_t sub_1009E61E4()
{
  uint64_t v1 = *(void *)(v0 + 408);
  *(void *)(v0 + 96) = v1;
  swift_errorRetain();
  sub_1005057FC(&qword_101672BD0);
  if (swift_dynamicCast())
  {
    uint64_t v2 = *(void *)(v0 + 112);
    swift_errorRelease();
    *(void *)(v2 + OBJC_IVAR____TtC8Freeform18CRLURLItemImporter__error) = sub_1009E3518(*(unsigned char *)(v0 + 448));
    swift_errorRelease();
    uint64_t v3 = (void *)swift_task_alloc();
    *(void *)(v0 + 432) = v3;
    *uint64_t v3 = v0;
    v3[1] = sub_1009E6A4C;
    uint64_t v4 = *(void *)(v0 + 240);
    uint64_t v5 = *(void *)(v0 + 168);
    return sub_100DC9B28(v5, v4);
  }
  else
  {
    swift_errorRelease();
    *(void *)(v0 + 104) = v1;
    swift_errorRetain();
    if (swift_dynamicCast())
    {
      swift_errorRelease();
      if (qword_10166F9C8 != -1) {
        swift_once();
      }
      uint64_t v8 = *(void *)(v0 + 128);
      uint64_t v7 = *(void *)(v0 + 136);
      uint64_t v9 = *(void *)(v0 + 120);
      swift_beginAccess();
      id v10 = (id)static OS_os_log.crlDefault;
      uint64_t v11 = static os_log_type_t.default.getter();
      sub_100BAC898((uint64_t)v10, (uint64_t)&_mh_execute_header, v11, (uint64_t)"Metadata provider task cancelled. Not an error.", 47, 2, (uint64_t)_swiftEmptyArrayStorage);

      (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
      swift_errorRelease();
      static Task<>.checkCancellation()();
      *(void *)(v0 + 416) = 0;
      uint64_t v18 = (void *)swift_task_alloc();
      *(void *)(v0 + 424) = v18;
      *uint64_t v18 = v0;
      v18[1] = sub_1009E65EC;
      return sub_100E0C410(250.0, 150.0, 150.0);
    }
    else
    {
      uint64_t v12 = *(void (**)(uint64_t, uint64_t))(v0 + 312);
      id v13 = *(void **)(v0 + 296);
      uint64_t v14 = *(void *)(v0 + 240);
      uint64_t v15 = *(void *)(v0 + 208);
      uint64_t v16 = *(void *)(v0 + 184);
      swift_release();

      sub_100522F00(v16, (uint64_t *)&unk_10167D2B0);
      v12(v14, v15);
      swift_errorRelease();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v17 = *(uint64_t (**)(void))(v0 + 8);
      return v17();
    }
  }
}

uint64_t sub_1009E65EC(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = *v3;
  *(unsigned char *)(v4 + 40) = a3;
  *(void *)(v4 + 24) = a1;
  *(void *)(v4 + 32) = a2;
  *(void *)(v4 + 16) = v3;
  *(unsigned char *)(v4 + 449) = a3;
  swift_task_dealloc();
  return _swift_task_switch(sub_1009E66F8, 0, 0);
}

uint64_t sub_1009E66F8()
{
  if (*(unsigned char *)(v0 + 449)) {
    id v1 = [objc_allocWithZone((Class)CRLCanvasInfoGeometry) initWithSize:250.0, 150.0];
  }
  else {
    id v1 = [objc_allocWithZone((Class)CRLCanvasInfoGeometry) initWithSize:*(double *)(v0 + 24) *(double *)(v0 + 32)];
  }
  uint64_t v2 = v1;
  uint64_t v3 = *(void *)(v0 + 416);
  static Task<>.checkCancellation()();
  if (v3)
  {
    uint64_t v4 = *(void (**)(uint64_t, uint64_t))(v0 + 312);
    uint64_t v5 = *(void **)(v0 + 296);
    uint64_t v6 = *(void *)(v0 + 240);
    uint64_t v7 = *(void *)(v0 + 208);
    uint64_t v8 = *(void *)(v0 + 184);
    swift_release();

    sub_100522F00(v8, (uint64_t *)&unk_10167D2B0);
    v4(v6, v7);
LABEL_6:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v9 = *(uint64_t (**)(void))(v0 + 8);
    goto LABEL_9;
  }
  uint64_t v10 = *(void *)(v0 + 240);
  uint64_t v11 = *(void *)(v0 + 184);
  uint64_t v12 = *(char **)(v0 + 112);
  id v13 = [v12 boardItemFactory];
  id v14 = sub_100F3E518(v2, v11, v10);

  uint64_t v15 = OBJC_IVAR____TtC8Freeform18CRLURLItemImporter__boardItem;
  uint64_t v16 = *(void **)&v12[OBJC_IVAR____TtC8Freeform18CRLURLItemImporter__boardItem];
  *(void *)&v12[OBJC_IVAR____TtC8Freeform18CRLURLItemImporter__boardItem] = v14;

  if (!*(void *)&v12[v15])
  {
    uint64_t v25 = *(void (**)(uint64_t, uint64_t))(v0 + 312);
    uint64_t v26 = *(void **)(v0 + 296);
    uint64_t v27 = *(void *)(v0 + 240);
    uint64_t v28 = *(void *)(v0 + 208);
    uint64_t v29 = *(void *)(v0 + 184);
    sub_1008A8078();
    swift_allocError();
    *uint64_t v30 = 1;
    swift_willThrow();
    swift_release();

    sub_100522F00(v29, (uint64_t *)&unk_10167D2B0);
    v25(v27, v28);
    goto LABEL_6;
  }
  uint64_t v17 = *(void *)(v0 + 328);
  uint64_t v31 = *(void (**)(uint64_t, uint64_t))(v0 + 312);
  uint64_t v18 = *(void **)(v0 + 296);
  uint64_t v19 = *(void *)(v0 + 240);
  uint64_t v20 = *(void *)(v0 + 208);
  uint64_t v21 = *(void *)(v0 + 184);
  uint64_t v22 = *(void *)(v0 + 112);
  *(void *)(v22 + OBJC_IVAR____TtC8Freeform18CRLURLItemImporter_importTask) = 0;
  swift_release();
  uint64_t v23 = *(void **)(v22 + v17);
  *(void *)(v22 + v17) = 0;
  swift_release();

  sub_100522F00(v21, (uint64_t *)&unk_10167D2B0);
  v31(v19, v20);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v9 = *(uint64_t (**)(void))(v0 + 8);
LABEL_9:
  return v9();
}

uint64_t sub_1009E6A4C()
{
  *(void *)(*(void *)v1 + 440) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1009E6D78;
  }
  else {
    uint64_t v2 = sub_1009E6B60;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1009E6B60()
{
  uint64_t v1 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v0 + 344);
  uint64_t v2 = *(void *)(v0 + 184);
  uint64_t v3 = *(void *)(v0 + 168);
  uint64_t v4 = *(void *)(v0 + 144);
  sub_100522F00(v2, (uint64_t *)&unk_10167D2B0);
  v1(v3, 0, 1, v4);
  sub_10051B3EC(v3, v2, (uint64_t *)&unk_10167D2B0);
  swift_errorRelease();
  uint64_t v5 = *(void *)(v0 + 440);
  static Task<>.checkCancellation()();
  *(void *)(v0 + 416) = v5;
  if (v5)
  {
    uint64_t v6 = *(void (**)(uint64_t, uint64_t))(v0 + 312);
    uint64_t v7 = *(void *)(v0 + 240);
    uint64_t v8 = *(void *)(v0 + 208);
    uint64_t v9 = *(void *)(v0 + 184);

    swift_release();
    sub_100522F00(v9, (uint64_t *)&unk_10167D2B0);
    v6(v7, v8);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v10 = *(uint64_t (**)(void))(v0 + 8);
    return v10();
  }
  else
  {
    uint64_t v12 = (void *)swift_task_alloc();
    *(void *)(v0 + 424) = v12;
    *uint64_t v12 = v0;
    v12[1] = sub_1009E65EC;
    return sub_100E0C410(250.0, 150.0, 150.0);
  }
}

uint64_t sub_1009E6D78()
{
  uint64_t v1 = (void (*)(uint64_t, uint64_t))v0[39];
  uint64_t v2 = (void *)v0[37];
  uint64_t v3 = v0[30];
  uint64_t v4 = v0[26];
  uint64_t v5 = v0[23];
  swift_release();

  sub_100522F00(v5, (uint64_t *)&unk_10167D2B0);
  v1(v3, v4);
  swift_errorRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v6 = (uint64_t (*)(void))v0[1];
  return v6();
}

uint64_t sub_1009E6EA4()
{
  uint64_t v1 = sub_1005057FC(&qword_101672BB0);
  __chkstk_darwin(v1 - 8, v2);
  uint64_t v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = OBJC_IVAR____TtC8Freeform18CRLURLItemImporter_importTask;
  if (*(void *)&v0[OBJC_IVAR____TtC8Freeform18CRLURLItemImporter_importTask])
  {
    swift_retain();
    sub_1005057FC(&qword_101672BD0);
    Task.cancel()();
    swift_release();
  }
  *(void *)&v0[v5] = 0;
  swift_release();
  uint64_t v6 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v4, 1, 1, v6);
  type metadata accessor for MainActor();
  uint64_t v7 = v0;
  uint64_t v8 = static MainActor.shared.getter();
  uint64_t v9 = (void *)swift_allocObject();
  _OWORD v9[2] = v8;
  v9[3] = &protocol witness table for MainActor;
  v9[4] = v7;
  sub_1005912D0((uint64_t)v4, (uint64_t)&unk_10168AC10, (uint64_t)v9);
  return swift_release();
}

uint64_t sub_1009E701C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 16) = a4;
  type metadata accessor for MainActor();
  *(void *)(v4 + 24) = static MainActor.shared.getter();
  uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_1009E70B4, v6, v5);
}

uint64_t sub_1009E70B4()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_release();
  uint64_t v2 = OBJC_IVAR____TtC8Freeform18CRLURLItemImporter_metadataProvider;
  uint64_t v3 = *(char **)(v1 + OBJC_IVAR____TtC8Freeform18CRLURLItemImporter_metadataProvider);
  if (v3)
  {
    if (*(void *)&v3[OBJC_IVAR____TtC8Freeform26CRLURLMetadataProviderBase_linkPresentationMetadataTask])
    {
      uint64_t v4 = v3;
      swift_retain();
      sub_1005057FC(&qword_10167BA68);
      sub_1005057FC(&qword_101672BD0);
      Task.cancel()();
      swift_release();
    }
    else
    {
      uint64_t v6 = v3;
    }
    id v7 = sub_100E0C1A8();
    [v7 cancel];

    uint64_t v5 = *(void **)(v1 + v2);
  }
  else
  {
    uint64_t v5 = 0;
  }
  *(void *)(v1 + v2) = 0;

  uint64_t v8 = *(uint64_t (**)(void))(v0 + 8);
  return v8();
}

id sub_1009E7290(uint64_t a1, void *a2)
{
  uint64_t v3 = v2;
  *(void *)&v3[OBJC_IVAR____TtC8Freeform18CRLURLItemImporter_importTask] = 0;
  *(void *)&v3[OBJC_IVAR____TtC8Freeform18CRLURLItemImporter_metadataProvider] = 0;
  *(void *)&v3[OBJC_IVAR____TtC8Freeform18CRLURLItemImporter_maximumLongEdge] = 0x406F400000000000;
  *(void *)&v3[OBJC_IVAR____TtC8Freeform18CRLURLItemImporter_defaultShortEdge] = 0x4062C00000000000;
  *(void *)&v3[OBJC_IVAR____TtC8Freeform18CRLURLItemImporter__boardItem] = 0;
  uint64_t v6 = (NSURL *)OBJC_IVAR____TtC8Freeform18CRLURLItemImporter__error;
  *(void *)&v3[OBJC_IVAR____TtC8Freeform18CRLURLItemImporter__error] = 0;
  URL._bridgeToObjectiveC()(v6);
  uint64_t v8 = v7;
  v14.receiver = v3;
  v14.super_class = (Class)type metadata accessor for CRLURLItemImporter();
  id v9 = [super initWithURL:v8 boardItemFactory:a2];

  uint64_t v10 = type metadata accessor for URL();
  uint64_t v11 = *(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8);
  id v12 = v9;
  v11(a1, v10);
  if (v12) {

  }
  return v12;
}

id sub_1009E7444(void *a1, void *a2)
{
  *(void *)&v2[OBJC_IVAR____TtC8Freeform18CRLURLItemImporter_importTask] = 0;
  *(void *)&v2[OBJC_IVAR____TtC8Freeform18CRLURLItemImporter_metadataProvider] = 0;
  *(void *)&v2[OBJC_IVAR____TtC8Freeform18CRLURLItemImporter_maximumLongEdge] = 0x406F400000000000;
  *(void *)&v2[OBJC_IVAR____TtC8Freeform18CRLURLItemImporter_defaultShortEdge] = 0x4062C00000000000;
  *(void *)&v2[OBJC_IVAR____TtC8Freeform18CRLURLItemImporter__boardItem] = 0;
  *(void *)&v2[OBJC_IVAR____TtC8Freeform18CRLURLItemImporter__error] = 0;
  v7.receiver = v2;
  v7.super_class = (Class)type metadata accessor for CRLURLItemImporter();
  id v5 = [super initWithData:a1 boardItemFactory:a2];

  return v5;
}

id sub_1009E7544()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLURLItemImporter();
  return [super dealloc];
}

uint64_t type metadata accessor for CRLURLItemImporter()
{
  return self;
}

uint64_t sub_1009E760C(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  objc_super v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *objc_super v7 = v2;
  v7[1] = sub_100528D08;
  return sub_1009E701C(a1, v4, v5, v6);
}

uint64_t sub_1009E76C0()
{
  _Block_release(*(const void **)(v0 + 16));

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1009E7700()
{
  uint64_t v2 = *(const void **)(v0 + 16);
  uint64_t v3 = *(void **)(v0 + 24);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  *uint64_t v4 = v1;
  v4[1] = sub_100528488;
  uint64_t v5 = (uint64_t (*)(const void *, void *))((char *)&dword_10168AC18 + dword_10168AC18);
  return v5(v2, v3);
}

uint64_t sub_1009E77B8()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_100528488;
  uint64_t v2 = (void *)swift_task_alloc();
  v1[2] = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_100528488;
  return sub_1009E46E8();
}

id sub_1009E7A18()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLiOSBoardView();
  return [super dealloc];
}

uint64_t type metadata accessor for CRLiOSBoardView()
{
  return self;
}

unint64_t sub_1009E7A84()
{
  unint64_t result = qword_10168AC70;
  if (!qword_10168AC70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168AC70);
  }
  return result;
}

unint64_t sub_1009E7ADC()
{
  unint64_t result = qword_10168AC78;
  if (!qword_10168AC78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168AC78);
  }
  return result;
}

uint64_t sub_1009E7B30()
{
  return *(void *)(swift_getOpaqueTypeConformance2() + 8);
}

uint64_t sub_1009E7B64()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1009E7B80@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v74 = a1;
  uint64_t v1 = sub_1005057FC(&qword_101672E90);
  __chkstk_darwin(v1 - 8, v2);
  id v67 = &v53[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v73 = type metadata accessor for InputConnectionBehavior();
  uint64_t v75 = *(void *)(v73 - 8);
  __chkstk_darwin(v73, v4);
  unsigned int v72 = &v53[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = sub_1005057FC(&qword_101673B38);
  __chkstk_darwin(v6 - 8, v7);
  uint64_t v66 = &v53[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v9, v10);
  unsigned int v71 = &v53[-v11];
  uint64_t v12 = sub_1005057FC(&qword_101691F20);
  __chkstk_darwin(v12 - 8, v13);
  uint64_t v70 = &v53[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v15 = sub_1005057FC(&qword_101673B40);
  __chkstk_darwin(v15 - 8, v16);
  uint64_t v57 = &v53[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v18 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v19 = *(void *)(v18 - 8);
  __chkstk_darwin(v18, v20);
  uint64_t v22 = &v53[-((v21 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v23 = type metadata accessor for Locale();
  __chkstk_darwin(v23 - 8, v24);
  uint64_t v25 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v25 - 8, v26);
  uint64_t v27 = type metadata accessor for LocalizedStringResource();
  uint64_t v63 = v27;
  uint64_t v28 = *(void *)(v27 - 8);
  __chkstk_darwin(v27, v29);
  uint64_t v69 = &v53[-((v30 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v31, v32);
  id v68 = &v53[-v33];
  uint64_t v65 = sub_1005057FC(&qword_101673B48);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t v34 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  uint64_t v35 = *(void (**)(unsigned char *, uint64_t, uint64_t))(v19 + 104);
  v35(v22, enum case for LocalizedStringResource.BundleDescription.main(_:), v18);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  unsigned int v54 = v34;
  uint64_t v36 = v18;
  uint64_t v55 = v18;
  v35(v22, v34, v18);
  uint64_t v56 = v35;
  id v37 = v57;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  id v38 = *(void (**)(unsigned char *, void, uint64_t, uint64_t))(v28 + 56);
  uint64_t v62 = v28 + 56;
  uint64_t v64 = v38;
  v38(v37, 0, 1, v27);
  uint64_t v39 = type metadata accessor for CRLBoardEntity();
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v39 - 8) + 56))(v70, 1, 1, v39);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  v35(v22, v34, v36);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  id v40 = v71;
  IntentDialog.init(_:)();
  uint64_t v41 = type metadata accessor for IntentDialog();
  uint64_t v59 = v41;
  uint64_t v42 = *(void *)(v41 - 8);
  unint64_t v43 = *(void (**)(unsigned char *, void, uint64_t, uint64_t))(v42 + 56);
  uint64_t v61 = v42 + 56;
  uint64_t v60 = v43;
  v43(v40, 0, 1, v41);
  v43(v66, 1, 1, v41);
  float v44 = *(void (**)(unsigned char *, void, uint64_t))(v75 + 104);
  v75 += 104;
  uint64_t v58 = v44;
  v44(v72, enum case for InputConnectionBehavior.default(_:), v73);
  sub_1009E9EEC((unint64_t *)&qword_101673B60, (void (*)(uint64_t))type metadata accessor for CRLBoardEntity);
  *uint64_t v74 = IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:)();
  uint64_t v70 = (unsigned char *)sub_1005057FC(&qword_10168AC98);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t v45 = v54;
  uint64_t v46 = v55;
  unint64_t v47 = v56;
  v56(v22, v54, v55);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  v47(v22, v45, v46);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  v64(v37, 0, 1, v63);
  uint64_t v48 = type metadata accessor for URL();
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v48 - 8) + 56))(v67, 1, 1, v48);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  v47(v22, v45, v46);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  double v49 = v71;
  IntentDialog.init(_:)();
  v60(v49, 0, 1, v59);
  v58(v72, enum case for InputConnectionBehavior.connectToPreviousIntentResult(_:), v73);
  uint64_t v50 = IntentParameter<>.init(title:description:default:requestValueDialog:inputConnectionBehavior:)();
  uint64_t v51 = v74;
  v74[1] = v50;
  sub_1005057FC(&qword_101673B50);
  unint64_t v76 = 0xD00000000000001FLL;
  unint64_t v77 = 0x800000010123B260;
  AnyHashable.init<A>(_:)();
  type metadata accessor for AppDependencyManager();
  static AppDependencyManager.shared.getter();
  v51[2] = AppDependency.__allocating_init(key:manager:)();
  v51[6] = (uint64_t)&type metadata for CRLInsertURLToBoardIntentPerformer;
  v51[7] = (uint64_t)&off_10150DB28;
  uint64_t result = swift_allocObject();
  v51[3] = result;
  *(void *)(result + 40) = &type metadata for CRLAppIntentsBoardItemsImporter;
  *(void *)(result + 48) = &off_101519C28;
  return result;
}

uint64_t sub_1009E8608(uint64_t a1)
{
  v2[39] = a1;
  v2[40] = v1;
  type metadata accessor for CRLBoardIdentifier(0);
  v2[41] = swift_task_alloc();
  sub_1005057FC(&qword_101673B38);
  v2[42] = swift_task_alloc();
  uint64_t v3 = type metadata accessor for LocalizedStringResource.BundleDescription();
  v2[43] = v3;
  v2[44] = *(void *)(v3 - 8);
  v2[45] = swift_task_alloc();
  type metadata accessor for Locale();
  v2[46] = swift_task_alloc();
  type metadata accessor for String.LocalizationValue();
  v2[47] = swift_task_alloc();
  type metadata accessor for LocalizedStringResource();
  v2[48] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for IntentDialog();
  v2[49] = v4;
  v2[50] = *(void *)(v4 - 8);
  v2[51] = swift_task_alloc();
  v2[52] = type metadata accessor for CRLBoardEntity();
  v2[53] = swift_task_alloc();
  v2[54] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for URL();
  v2[55] = v5;
  v2[56] = *(void *)(v5 - 8);
  v2[57] = swift_task_alloc();
  v2[58] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for Logger();
  v2[59] = v6;
  v2[60] = *(void *)(v6 - 8);
  v2[61] = swift_task_alloc();
  return _swift_task_switch(sub_1009E890C, 0, 0);
}

uint64_t sub_1009E890C()
{
  uint64_t v32 = v0;
  if (qword_10166FB50 != -1) {
    swift_once();
  }
  swift_beginAccess();
  id v1 = (id)static OS_os_log.appIntents;
  Logger.init(_:)();
  IntentParameter.wrappedValue.getter();
  uint64_t v2 = URL.scheme.getter();
  if (v3)
  {
    uint64_t v4 = v2;
    uint64_t v5 = v3;
    if (v2 == 0x7370747468 && v3 == 0xE500000000000000
      || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0
      || v4 == 1886680168 && v5 == 0xE400000000000000)
    {
      swift_bridgeObjectRelease();
      uint64_t v6 = *(void (**)(uint64_t, uint64_t))(v0[56] + 8);
      v6(v0[58], v0[55]);
LABEL_10:
      v0[62] = v6;
      sub_10050F848((void *)(v0[40] + 24), *(void *)(v0[40] + 48));
      sub_1005057FC(&qword_1016743E0);
      uint64_t v7 = swift_allocObject();
      v0[63] = v7;
      *(_OWORD *)(v7 + 16) = xmmword_10117E810;
      IntentParameter.wrappedValue.getter();
      IntentParameter.wrappedValue.getter();
      AppDependency.wrappedValue.getter();
      v0[29] = &type metadata for CRLBoardLibraryProvidingDependency;
      v0[30] = &off_10152F800;
      uint64_t v8 = (void *)swift_task_alloc();
      v0[64] = v8;
      *uint64_t v8 = v0;
      v8[1] = sub_1009E9010;
      uint64_t v9 = v0[54];
      return sub_10066F17C(v7, v9, (uint64_t)(v0 + 26));
    }
    uint64_t v26 = v0[58];
    uint64_t v27 = v0[55];
    uint64_t v28 = v0[56];
    char v29 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    uint64_t v6 = *(void (**)(uint64_t, uint64_t))(v28 + 8);
    v6(v26, v27);
    if (v29) {
      goto LABEL_10;
    }
  }
  else
  {
    uint64_t v6 = *(void (**)(uint64_t, uint64_t))(v0[56] + 8);
    v6(v0[58], v0[55]);
  }
  sub_1009E9E84(v0[40], (uint64_t)(v0 + 10));
  uint64_t v11 = Logger.logObject.getter();
  os_log_type_t v12 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v13 = v0[57];
    uint64_t v14 = v0[55];
    uint64_t v15 = (uint8_t *)swift_slowAlloc();
    uint64_t v31 = swift_slowAlloc();
    *(_DWORD *)uint64_t v15 = 136315138;
    IntentParameter.wrappedValue.getter();
    sub_1009E9EEC(&qword_10168E250, (void (*)(uint64_t))&type metadata accessor for URL);
    uint64_t v16 = dispatch thunk of CustomStringConvertible.description.getter();
    unint64_t v18 = v17;
    v6(v13, v14);
    v0[34] = sub_100E04348(v16, v18, &v31);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_1009E9EBC((uint64_t)(v0 + 10));
    _os_log_impl((void *)&_mh_execute_header, v11, v12, "Invalid hypertext URLs provided %s", v15, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    sub_1009E9EBC((uint64_t)(v0 + 10));
  }
  uint64_t v19 = v0[50];
  uint64_t v30 = v0[51];
  uint64_t v20 = v0[49];
  uint64_t v21 = v0[44];
  uint64_t v22 = v0[45];
  uint64_t v23 = v0[42];
  uint64_t v24 = v0[43];
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  (*(void (**)(uint64_t, void, uint64_t))(v21 + 104))(v22, enum case for LocalizedStringResource.BundleDescription.main(_:), v24);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  IntentDialog.init(_:)();
  IntentParameter.projectedValue.getter();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v19 + 16))(v23, v30, v20);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v19 + 56))(v23, 0, 1, v20);
  type metadata accessor for AppIntentError();
  sub_1009E9EEC(&qword_101675F98, (void (*)(uint64_t))&type metadata accessor for AppIntentError);
  swift_allocError();
  IntentParameter.needsValueError(_:)();
  swift_release();
  sub_1005F641C(v23);
  swift_willThrow();
  (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v30, v20);
  (*(void (**)(void, void))(v0[60] + 8))(v0[61], v0[59]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v25 = (uint64_t (*)(void))v0[1];
  return v25();
}

uint64_t sub_1009E9010()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 520) = v0;
  swift_task_dealloc();
  if (v0)
  {
    sub_100568A20(*(void *)(v2 + 432), (uint64_t (*)(void))type metadata accessor for CRLBoardEntity);
    swift_bridgeObjectRelease();
    uint64_t v3 = sub_1009E9370;
  }
  else
  {
    uint64_t v4 = v2 + 208;
    uint64_t v5 = *(void *)(v2 + 432);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_100568A20(v5, (uint64_t (*)(void))type metadata accessor for CRLBoardEntity);
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v4);
    uint64_t v3 = sub_1009E9198;
  }
  return _swift_task_switch(v3, 0, 0);
}

uint64_t sub_1009E9198()
{
  uint64_t v1 = v0[60];
  uint64_t v2 = v0[61];
  uint64_t v3 = v0[59];
  uint64_t v4 = v0[53];
  IntentParameter.wrappedValue.getter();
  v0[38] = IntentParameter.projectedValue.getter();
  sub_1009E9EEC((unint64_t *)&qword_101675F88, (void (*)(uint64_t))type metadata accessor for CRLBoardEntity);
  sub_1005F6380();
  static IntentResult.result<A, B>(value:opensIntent:)();
  swift_release();
  sub_100568A20(v4, (uint64_t (*)(void))type metadata accessor for CRLBoardEntity);
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v2, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

uint64_t sub_1009E9370()
{
  uint64_t v23 = v0;
  uint64_t v1 = v0[40];
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)(v0 + 26));
  sub_1009E9E84(v1, (uint64_t)(v0 + 18));
  sub_1009E9E84(v1, (uint64_t)(v0 + 2));
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = v0[57];
    unint64_t v18 = (void (*)(uint64_t, uint64_t))v0[62];
    uint64_t v5 = v0[55];
    uint64_t v6 = v0[53];
    uint64_t v7 = v0[41];
    uint64_t v8 = swift_slowAlloc();
    uint64_t v21 = (void *)swift_slowAlloc();
    v22[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 136315650;
    log = v2;
    os_log_type_t type = v3;
    IntentParameter.wrappedValue.getter();
    sub_1009E9EEC(&qword_10168E250, (void (*)(uint64_t))&type metadata accessor for URL);
    uint64_t v9 = dispatch thunk of CustomStringConvertible.description.getter();
    unint64_t v11 = v10;
    v18(v4, v5);
    v0[35] = sub_100E04348(v9, v11, v22);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_1009E9EBC((uint64_t)(v0 + 18));
    *(_WORD *)(v8 + 12) = 2080;
    IntentParameter.wrappedValue.getter();
    sub_100540CFC(v6, v7);
    sub_100568A20(v6, (uint64_t (*)(void))type metadata accessor for CRLBoardEntity);
    uint64_t v12 = sub_100753038();
    unint64_t v14 = v13;
    sub_100568A20(v7, type metadata accessor for CRLBoardIdentifier);
    v0[36] = sub_100E04348(v12, v14, v22);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_1009E9EBC((uint64_t)(v0 + 2));
    *(_WORD *)(v8 + 22) = 2112;
    swift_errorRetain();
    uint64_t v15 = _swift_stdlib_bridgeErrorToNSError();
    v0[37] = v15;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    void *v21 = v15;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, log, type, "Error importing URL: %s to board: %s - %@", (uint8_t *)v8, 0x20u);
    sub_1005057FC(&qword_101678028);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    sub_1009E9EBC((uint64_t)(v0 + 18));
    sub_1009E9EBC((uint64_t)(v0 + 2));
    swift_errorRelease();
    swift_errorRelease();
  }
  type metadata accessor for _PrebuiltAppIntentError();
  sub_1009E9EEC((unint64_t *)&qword_101678490, (void (*)(uint64_t))&type metadata accessor for _PrebuiltAppIntentError);
  swift_allocError();
  static _UnrecoverableError.unknownError.getter();
  swift_willThrow();
  swift_errorRelease();
  (*(void (**)(void, void))(v0[60] + 8))(v0[61], v0[59]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v16 = (uint64_t (*)(void))v0[1];
  return v16();
}

uint64_t sub_1009E9850()
{
  uint64_t v0 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0, v2);
  uint64_t v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for Locale();
  __chkstk_darwin(v5 - 8, v6);
  uint64_t v7 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v7 - 8, v8);
  uint64_t v9 = type metadata accessor for LocalizedStringResource();
  sub_100568B28(v9, qword_10171B378);
  sub_100556B74(v9, (uint64_t)qword_10171B378);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v4, enum case for LocalizedStringResource.BundleDescription.main(_:), v0);
  return LocalizedStringResource.init(_:table:locale:bundle:comment:)();
}

uint64_t sub_1009E9A44()
{
  uint64_t v0 = sub_1005057FC(&qword_10168ACB0);
  __chkstk_darwin(v0 - 8, v1);
  uint64_t v2 = sub_1005057FC(&qword_10168ACB8);
  __chkstk_darwin(v2, v3);
  sub_1009E9E30();
  ParameterSummaryString.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v4._countAndFlagsBits = 543450177;
  v4._object = (void *)0xE400000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v4);
  swift_getKeyPath();
  sub_1005057FC(&qword_10168ACC0);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)();
  swift_release();
  v5._countAndFlagsBits = 544175136;
  v5._object = (void *)0xE400000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v5);
  swift_getKeyPath();
  sub_1005057FC(&qword_10168ACC8);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)();
  swift_release();
  v6._countAndFlagsBits = 0;
  v6._object = (void *)0xE000000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v6);
  ParameterSummaryString.init(stringInterpolation:)();
  return IntentParameterSummary.init(_:table:)();
}

uint64_t sub_1009E9C28@<X0>(uint64_t a1@<X8>)
{
  if (qword_10166F690 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for LocalizedStringResource();
  uint64_t v3 = sub_100556B74(v2, (uint64_t)qword_10171B378);
  Swift::String v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);

  return v4(a1, v3, v2);
}

uint64_t sub_1009E9CD4(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_100528488;
  return sub_1009E8608(a1);
}

uint64_t sub_1009E9D70(uint64_t a1)
{
  unint64_t v2 = sub_1009E9E30();

  return static AppIntent.persistentIdentifier.getter(a1, v2);
}

ValueMetadata *type metadata accessor for CRLInsertURLToBoardIntent()
{
  return &type metadata for CRLInsertURLToBoardIntent;
}

uint64_t sub_1009E9DBC()
{
  return sub_100523288(&qword_10168AC88, &qword_10168AC90);
}

uint64_t sub_1009E9DF8()
{
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v0 + 16);

  return _swift_deallocObject(v0, 56, 7);
}

unint64_t sub_1009E9E30()
{
  unint64_t result = qword_10168ACA0;
  if (!qword_10168ACA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_10168ACA0);
  }
  return result;
}

uint64_t sub_1009E9E84(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1009E9EBC(uint64_t a1)
{
  return a1;
}

uint64_t sub_1009E9EEC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1009E9F34@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1009E9F60@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

unsigned char *storeEnumTagSinglePayload for CRLiOSPencilModeTypeData(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1009EA058);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLiOSPencilModeTypeData()
{
  return &type metadata for CRLiOSPencilModeTypeData;
}

uint64_t sub_1009EA090()
{
  return RawRepresentable<>.init(from:)();
}

uint64_t sub_1009EA0F0()
{
  return RawRepresentable<>.encode(to:)();
}

uint64_t sub_1009EA140(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_1009EA434();
  unint64_t v7 = sub_1009EA38C();

  return CRValue<>.observableDifference(from:with:)(a1, a2, a3, v6, v7);
}

uint64_t sub_1009EA1B0()
{
  return CRValue<>.init(from:)();
}

uint64_t sub_1009EA21C()
{
  return CRValue<>.encode(to:)();
}

uint64_t sub_1009EA278(uint64_t a1)
{
  unint64_t v2 = sub_1009EA434();
  unint64_t v3 = sub_1009EA3E0();

  return CRValue<>.minEncodingVersion.getter(a1, v2, v3, &protocol witness table for Int);
}

unint64_t sub_1009EA2DC()
{
  unint64_t result = qword_10168ACD0;
  if (!qword_10168ACD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168ACD0);
  }
  return result;
}

unint64_t sub_1009EA334()
{
  unint64_t result = qword_10168ACD8;
  if (!qword_10168ACD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168ACD8);
  }
  return result;
}

unint64_t sub_1009EA38C()
{
  unint64_t result = qword_10168ACE0;
  if (!qword_10168ACE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168ACE0);
  }
  return result;
}

unint64_t sub_1009EA3E0()
{
  unint64_t result = qword_10168ACE8;
  if (!qword_10168ACE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168ACE8);
  }
  return result;
}

unint64_t sub_1009EA434()
{
  unint64_t result = qword_10168ACF0;
  if (!qword_10168ACF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168ACF0);
  }
  return result;
}

id sub_1009EA488()
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  unint64_t v2 = &v0[OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE10MetalLayer_textureData];
  *unint64_t v2 = 0u;
  v2[1] = 0u;
  v0[OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE10MetalLayer_hasDrawnFrame] = 0;
  uint64_t v3 = OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE10MetalLayer_frameNumber;
  uint64_t v12 = 0;
  sub_1005057FC(&qword_10167EA78);
  swift_allocObject();
  unsigned int v4 = v0;
  *(void *)&v0[v3] = CurrentValueSubject.init(_:)();
  uint64_t v5 = &v4[OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE10MetalLayer_metalContext];
  *(void *)uint64_t v5 = 0;
  *((void *)v5 + 1) = 0;
  unint64_t v6 = &v4[OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE10MetalLayer_signalState];
  *(void *)unint64_t v6 = 0;
  *((void *)v6 + 1) = 0;
  v6[16] = 2;
  sub_100656064();
  unint64_t v7 = (void *)static OS_dispatch_queue.main.getter();
  id v8 = [objc_allocWithZone((Class)MTLSharedEventListener) initWithDispatchQueue:v7];

  *(void *)&v4[OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE10MetalLayer_listener] = v8;
  v11.receiver = v4;
  v11.super_class = ObjectType;
  id v9 = [super init];
  [v9 setBackgroundColor:0];
  [v9 setOpaque:0];

  return v9;
}

void sub_1009EA62C()
{
  uint64_t v1 = (void *)(v0 + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE10MetalLayer_textureData);
  unint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE10MetalLayer_textureData);
  if (v2)
  {
    unsigned int v4 = (void *)v1[2];
    uint64_t v3 = (void *)v1[3];
    uint64_t v5 = (void *)v1[1];
    swift_unknownObjectRetain();
    swift_unknownObjectRetain();
    swift_unknownObjectRetain();
    id v6 = v3;
    id v7 = [v2 device];
    id v8 = *(id *)(v0 + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE10MetalLayer_metalContext);
    if (v8)
    {
      uint64_t v9 = *(void *)(v0 + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE10MetalLayer_metalContext + 8);
      swift_unknownObjectRetain();
      if (v7 == v8) {
        goto LABEL_7;
      }
      swift_unknownObjectRelease();
    }
    id v10 = [v7 newCommandQueue];
    if (v10)
    {
      uint64_t v9 = (uint64_t)v10;
LABEL_7:
      swift_unknownObjectRetain();
      sub_1008689FC(v7);
      swift_release();
      swift_unknownObjectRetain();
      swift_unknownObjectRetain();
      sub_1009EB82C((uint64_t)v7, v9);
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      id v11 = [v4 signaledValue];
      BOOL v12 = __CFADD__(v11, 1);
      unint64_t v13 = (unint64_t)v11 + 1;
      if (v12)
      {
        __break(1u);
      }
      else
      {
        sub_1009EB90C(v13, v5);

        swift_unknownObjectRelease();
        swift_unknownObjectRelease();
        swift_unknownObjectRelease();
        swift_unknownObjectRelease();
        swift_unknownObjectRelease_n();
      }
      return;
    }
    sub_1009EB82C(0, 0);

    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
  }
  else
  {
    sub_1009EB82C(0, 0);
  }
}

uint64_t sub_1009EA838(id a1, id a2)
{
  if (a1 == a2)
  {
LABEL_17:
    char v10 = 1;
    return v10 & 1;
  }
  id v4 = [a2 label];
  if (v4)
  {

    id v5 = [a1 label];
    if (v5)
    {
      id v6 = v5;
      uint64_t v7 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v9 = v8;
    }
    else
    {
      uint64_t v7 = 0;
      uint64_t v9 = 0;
    }
    id v11 = [a2 label];
    if (v11)
    {
      BOOL v12 = v11;
      uint64_t v13 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v15 = v14;

      if (v9)
      {
        if (v15)
        {
          if (v7 == v13 && v9 == v15)
          {
            swift_bridgeObjectRelease();
            char v10 = 1;
          }
          else
          {
            char v10 = _stringCompareWithSmolCheck(_:_:expecting:)();
            swift_bridgeObjectRelease();
          }
          goto LABEL_19;
        }
        goto LABEL_14;
      }
      if (v15)
      {
        char v10 = 0;
        goto LABEL_19;
      }
    }
    else if (v9)
    {
LABEL_14:
      char v10 = 0;
LABEL_19:
      swift_bridgeObjectRelease();
      return v10 & 1;
    }
    goto LABEL_17;
  }
  char v10 = 0;
  return v10 & 1;
}

void sub_1009EA97C(void *a1, unint64_t a2)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v5 = (void *)Strong;
    uint64_t v6 = Strong + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE10MetalLayer_signalState;
    if (!*(unsigned char *)(Strong + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE10MetalLayer_signalState + 16))
    {
      unint64_t v8 = *(void *)v6;
      uint64_t v7 = *(void **)(v6 + 8);
      swift_unknownObjectRetain();
      if ((sub_1009EA838(a1, v7) & 1) != 0 && v8 <= a2)
      {
        uint64_t v9 = *(void *)v6;
        uint64_t v10 = *(void *)(v6 + 8);
        *(void *)uint64_t v6 = a2;
        *(void *)(v6 + 8) = a1;
        unsigned __int8 v11 = *(unsigned char *)(v6 + 16);
        *(unsigned char *)(v6 + 16) = 1;
        swift_unknownObjectRetain();
        sub_1009EB718(v9, v10, v11);
        sub_1009EAC10(a2);
      }
      sub_1009EB718(v8, (uint64_t)v7, 0);
    }
  }
}

uint64_t sub_1009EABA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v4 = *(void (**)(uint64_t, uint64_t))(a1 + 32);
  swift_retain();
  uint64_t v5 = swift_unknownObjectRetain();
  v4(v5, a3);
  swift_release();

  return swift_unknownObjectRelease();
}

void sub_1009EAC10(uint64_t a1)
{
  uint64_t v3 = v2;
  id v4 = &v1[OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE10MetalLayer_textureData];
  uint64_t v5 = *(void **)&v1[OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE10MetalLayer_textureData];
  if (v5)
  {
    uint64_t v6 = v1;
    uint64_t v9 = (void *)*((void *)v4 + 2);
    unint64_t v8 = (void *)*((void *)v4 + 3);
    uint64_t v10 = (void *)*((void *)v4 + 1);
    swift_unknownObjectRetain();
    swift_unknownObjectRetain();
    swift_unknownObjectRetain();
    id v11 = v8;
    id v12 = [v10 signaledValue];
    if (v12 < [v9 signaledValue])
    {
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();

      return;
    }
    id v50 = v11;
    uint64_t v13 = *(void **)&v6[OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE10MetalLayer_metalContext];
    if (!v13) {
      goto LABEL_30;
    }
    uint64_t v14 = *(void **)&v6[OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE10MetalLayer_metalContext + 8];
    swift_unknownObjectRetain();
    swift_unknownObjectRetain();
    [v6 bounds];
    double v16 = v15;
    double v18 = v17;
    [v6 contentsScale];
    double v20 = v16 * v19;
    if (qword_10166F2F8 != -1)
    {
      double v41 = v19;
      swift_once();
      double v19 = v41;
    }
    if (v20 > (double)qword_10171AD30) {
      double v20 = (double)qword_10171AD30;
    }
    double v21 = v18 * v19;
    if (v21 <= (double)qword_10171AD30) {
      double v22 = v21;
    }
    else {
      double v22 = (double)qword_10171AD30;
    }
    [v6 drawableSize];
    if (v24 != v20 || v23 != v22) {
      [v6 setDrawableSize:v20, v22];
    }
    id v40 = [v6 nextDrawable];
    if (!v40)
    {
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();

      swift_unknownObjectRelease();
      return;
    }
    id v26 = [v14 commandBuffer];
    if (!v26)
    {
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();

      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      return;
    }
    id v38 = v26;
    id v37 = [v10 signaledValue];
    id v27 = [v40 texture];
    id v28 = [(id)swift_unknownObjectRetain() width];
    id v39 = v27;
    if (v28 == [v27 width] && (id v29 = objc_msgSend(v5, "height"), v29 == objc_msgSend(v27, "height")))
    {
      id v30 = [v38 blitCommandEncoder];
      if (!v30)
      {
        __break(1u);
        return;
      }
      uint64_t v31 = v30;
      sub_100082E00([v5 width], [v5 height], [v5 depth], &aBlock);
      uint64_t v32 = v46;
      long long v33 = aBlock;
      long long aBlock = 0uLL;
      uint64_t v46 = 0;
      long long v43 = v33;
      float v44 = v32;
      memset(v42, 0, sizeof(v42));
      [v31 copyFromTexture:v5 sourceSlice:0 sourceLevel:0 sourceOrigin:&aBlock sourceSize:&v43 toTexture:v39 destinationSlice:0 destinationLevel:0 destinationOrigin:v42];
      [v31 endEncoding];
      swift_unknownObjectRelease();
    }
    else
    {
      sub_1008689FC(v13);
      if (v3)
      {
        swift_unknownObjectRelease_n();
        swift_unknownObjectRelease();
        swift_unknownObjectRelease();
        swift_unknownObjectRelease();
        swift_unknownObjectRelease();
LABEL_30:
        swift_unknownObjectRelease();
        swift_unknownObjectRelease();
        swift_unknownObjectRelease();

        return;
      }
      sub_100868204(v5, v27, v38);
      swift_release();
    }
    [v38 encodeSignalEvent:v9 value:v37];
    [v38 presentDrawable:v40];
    uint64_t v34 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v35 = (void *)swift_allocObject();
    v35[2] = v34;
    v35[3] = a1;
    v35[4] = v37;
    uint64_t v48 = sub_1009EBB74;
    double v49 = v35;
    *(void *)&long long aBlock = _NSConcreteStackBlock;
    *((void *)&aBlock + 1) = *(void *)"";
    uint64_t v46 = sub_1006EC7D8;
    unint64_t v47 = &unk_10151D9D0;
    uint64_t v36 = _Block_copy(&aBlock);
    swift_release();
    [v38 addCompletedHandler:v36];
    _Block_release(v36);
    [v38 commit];
    swift_unknownObjectRelease_n();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    goto LABEL_30;
  }
}

uint64_t sub_1009EB1CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = sub_1005057FC(&qword_101672BB0);
  __chkstk_darwin(v6 - 8, v7);
  uint64_t v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    id v11 = (void *)result;
    uint64_t v12 = type metadata accessor for TaskPriority();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v9, 1, 1, v12);
    type metadata accessor for MainActor();
    id v13 = v11;
    uint64_t v14 = static MainActor.shared.getter();
    double v15 = (void *)swift_allocObject();
    v15[2] = v14;
    v15[3] = &protocol witness table for MainActor;
    v15[4] = v13;
    v15[5] = a3;
    void v15[6] = a4;
    sub_1005912D0((uint64_t)v9, (uint64_t)&unk_10168AD60, (uint64_t)v15);

    return swift_release();
  }
  return result;
}

uint64_t sub_1009EB334(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[3] = a5;
  v6[4] = a6;
  v6[2] = a4;
  type metadata accessor for MainActor();
  v6[5] = static MainActor.shared.getter();
  uint64_t v8 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_1009EB3D0, v8, v7);
}

uint64_t sub_1009EB3D0()
{
  uint64_t v1 = v0[4];
  uint64_t v2 = v0[3];
  swift_release();
  sub_1009EB448(v2, v1);
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

void sub_1009EB448(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (void *)(v2 + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE10MetalLayer_textureData);
  uint64_t v4 = *(void *)(v2 + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE10MetalLayer_textureData);
  if (v4)
  {
    uint64_t v8 = (void *)v3[1];
    uint64_t v7 = v3[2];
    uint64_t v9 = (void *)v3[3];
    *(unsigned char *)(v2 + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE10MetalLayer_hasDrawnFrame) = 1;
    swift_unknownObjectRetain();
    swift_unknownObjectRetain();
    swift_unknownObjectRetain();
    id v10 = v9;
    CurrentValueSubject.send(_:)();
    uint64_t v11 = v2 + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE10MetalLayer_signalState;
    if (*(unsigned char *)(v11 + 16) == 1 && *(void *)v11 == a1)
    {
      uint64_t v12 = *(void **)(v11 + 8);
      swift_unknownObjectRetain();
      if ((sub_1009EA838(v8, v12) & 1) == 0)
      {
LABEL_7:
        sub_10076E18C(v4, (uint64_t)v8, v7, v9);
        sub_1009EB718(a1, (uint64_t)v12, 1u);
        return;
      }
      uint64_t v13 = *(void *)v11;
      uint64_t v14 = *(void *)(v11 + 8);
      *(void *)uint64_t v11 = 0;
      *(void *)(v11 + 8) = 0;
      unsigned __int8 v15 = *(unsigned char *)(v11 + 16);
      *(unsigned char *)(v11 + 16) = 2;
      sub_1009EB718(v13, v14, v15);
      if (a2 != -1)
      {
        sub_1009EB90C(a2 + 1, v8);
        goto LABEL_7;
      }
      __break(1u);
    }
    else
    {
      sub_10076E18C(v4, (uint64_t)v8, v7, v9);
    }
  }
}

uint64_t _s10MetalLayerCMa()
{
  return self;
}

uint64_t sub_1009EB6F0(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 <= 1u) {
    return swift_unknownObjectRetain();
  }
  return result;
}

uint64_t _s10MetalLayerC11SignalStateOwxx(uint64_t a1)
{
  return sub_1009EB718(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
}

uint64_t sub_1009EB718(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 <= 1u) {
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t _s10MetalLayerC11SignalStateOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  unsigned __int8 v5 = *(unsigned char *)(a2 + 16);
  sub_1009EB6F0(*(void *)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t _s10MetalLayerC11SignalStateOwca(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  unsigned __int8 v5 = *(unsigned char *)(a2 + 16);
  sub_1009EB6F0(*(void *)a2, v4, v5);
  uint64_t v6 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  unsigned __int8 v8 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v5;
  sub_1009EB718(v6, v7, v8);
  return a1;
}

uint64_t _s10MetalLayerC11SignalStateOwta(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  unsigned __int8 v6 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v3;
  sub_1009EB718(v4, v5, v6);
  return a1;
}

ValueMetadata *_s10MetalLayerC11SignalStateOMa()
{
  return &_s10MetalLayerC11SignalStateON;
}

void sub_1009EB82C(uint64_t a1, uint64_t a2)
{
  char v3 = (uint64_t *)&v2[OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE10MetalLayer_metalContext];
  uint64_t v4 = *(void *)&v2[OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE10MetalLayer_metalContext];
  *char v3 = a1;
  v3[1] = a2;
  sub_1009EBC88(a1);
  sub_1009EBCC8(v4);
  uint64_t v5 = *v3;
  if (*v3) {
    swift_unknownObjectRetain();
  }
  [v2 setDevice:v5];
  swift_unknownObjectRelease();
  [v2 setFramebufferOnly:0];
  [v2 setPixelFormat:81];
  CGColorSpaceRef v6 = CGColorSpaceCreateWithName(kCGColorSpaceDisplayP3);
  [v2 setColorspace:v6];
}

void sub_1009EB90C(unint64_t a1, void *a2)
{
  uint64_t v5 = v2 + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE10MetalLayer_signalState;
  if (*(unsigned char *)(v2 + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE10MetalLayer_signalState + 16))
  {
    if (*(unsigned char *)(v2 + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE10MetalLayer_signalState + 16) == 1) {
      return;
    }
    swift_unknownObjectRetain();
    unsigned __int8 v6 = 2;
    goto LABEL_10;
  }
  unint64_t v7 = *(void *)v5;
  unsigned __int8 v8 = *(void **)(v5 + 8);
  swift_unknownObjectRetain();
  sub_1009EB6F0(v7, (uint64_t)v8, 0);
  char v9 = sub_1009EA838(a2, v8);
  sub_1009EB718(v7, (uint64_t)v8, 0);
  if ((v9 & 1) == 0 || v7 > a1)
  {
    unsigned __int8 v6 = *(unsigned char *)(v5 + 16);
LABEL_10:
    uint64_t v10 = *(void *)v5;
    uint64_t v11 = *(void *)(v5 + 8);
    *(void *)uint64_t v5 = a1;
    *(void *)(v5 + 8) = a2;
    *(unsigned char *)(v5 + 16) = 0;
    swift_unknownObjectRetain();
    sub_1009EB718(v10, v11, v6);
    uint64_t v12 = *(void *)(v2 + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE10MetalLayer_listener);
    uint64_t v13 = swift_allocObject();
    swift_unknownObjectWeakInit();
    v15[4] = sub_1009EBB1C;
    v15[5] = v13;
    v15[0] = _NSConcreteStackBlock;
    v15[1] = *(void *)"";
    v15[2] = sub_1009EABA8;
    v15[3] = &unk_10151D980;
    uint64_t v14 = _Block_copy(v15);
    swift_release();
    [a2 notifyListener:v12 atValue:a1 block:v14];
    swift_unknownObjectRelease();
    _Block_release(v14);
    return;
  }

  swift_unknownObjectRelease();
}

uint64_t sub_1009EBAE4()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_1009EBB1C(void *a1, unint64_t a2)
{
}

uint64_t sub_1009EBB24(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1009EBB34()
{
  return swift_release();
}

uint64_t sub_1009EBB3C()
{
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1009EBB74(uint64_t a1)
{
  return sub_1009EB1CC(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_1009EBB80()
{
  swift_unknownObjectRelease();

  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_1009EBBC0(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  char v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *char v9 = v2;
  v9[1] = sub_100528488;
  return sub_1009EB334(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_1009EBC88(uint64_t result)
{
  if (result)
  {
    swift_unknownObjectRetain();
    return swift_unknownObjectRetain();
  }
  return result;
}

uint64_t sub_1009EBCC8(uint64_t result)
{
  if (result)
  {
    swift_unknownObjectRelease();
    return swift_unknownObjectRelease();
  }
  return result;
}

void sub_1009EBD08()
{
  uint64_t v1 = &v0[OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE10MetalLayer_textureData];
  *uint64_t v1 = 0u;
  v1[1] = 0u;
  v0[OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE10MetalLayer_hasDrawnFrame] = 0;
  uint64_t v2 = OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE10MetalLayer_frameNumber;
  sub_1005057FC(&qword_10167EA78);
  swift_allocObject();
  *(void *)&v0[v2] = CurrentValueSubject.init(_:)();
  char v3 = &v0[OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE10MetalLayer_metalContext];
  *char v3 = 0;
  v3[1] = 0;
  uint64_t v4 = &v0[OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE10MetalLayer_signalState];
  *(void *)uint64_t v4 = 0;
  *((void *)v4 + 1) = 0;
  v4[16] = 2;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

void sub_1009EBDF8()
{
  qword_10171B390 = 1572864;
}

uint64_t sub_1009EBE08()
{
  if (*(unsigned char *)(v0 + 56)) {
    return 1;
  }
  uint64_t result = swift_beginAccess();
  int64_t v2 = 0;
  uint64_t v3 = *(void *)(v0 + 64);
  uint64_t v4 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  uint64_t v6 = v3 + 64;
  unint64_t v7 = v5 & *(void *)(v3 + 64);
  int64_t v8 = (unint64_t)(v4 + 63) >> 6;
  do
  {
    if (v7)
    {
      unint64_t v9 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v10 = v9 | (v2 << 6);
    }
    else
    {
      int64_t v13 = v2 + 1;
      if (__OFADD__(v2, 1))
      {
        __break(1u);
LABEL_34:
        __break(1u);
        return result;
      }
      if (v13 >= v8) {
        return 0;
      }
      unint64_t v14 = *(void *)(v6 + 8 * v13);
      ++v2;
      if (!v14)
      {
        int64_t v2 = v13 + 1;
        if (v13 + 1 >= v8) {
          return 0;
        }
        unint64_t v14 = *(void *)(v6 + 8 * v2);
        if (!v14)
        {
          int64_t v2 = v13 + 2;
          if (v13 + 2 >= v8) {
            return 0;
          }
          unint64_t v14 = *(void *)(v6 + 8 * v2);
          if (!v14)
          {
            int64_t v15 = v13 + 3;
            if (v15 >= v8) {
              return 0;
            }
            unint64_t v14 = *(void *)(v6 + 8 * v15);
            if (!v14)
            {
              while (1)
              {
                int64_t v2 = v15 + 1;
                if (__OFADD__(v15, 1)) {
                  goto LABEL_34;
                }
                if (v2 >= v8) {
                  return 0;
                }
                unint64_t v14 = *(void *)(v6 + 8 * v2);
                ++v15;
                if (v14) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v2 = v15;
          }
        }
      }
LABEL_21:
      unint64_t v16 = __clz(__rbit64(v14));
      unint64_t v7 = (v14 - 1) & v14;
      unint64_t v10 = v16 + (v2 << 6);
    }
    uint64_t v11 = (uint64_t *)(*(void *)(v3 + 56) + 40 * v10);
    unint64_t v12 = v11[1];
  }
  while ((v12 & 0x8000000000000000) == 0);
  unint64_t v17 = v11[3];
  if ((_BYTE)v17) {
    return 1;
  }
  double v19 = (void *)v11[4];
  double v20 = (void *)v11[2];
  uint64_t v21 = *v11;
  double v22 = *(void **)(*(void *)(v3 + 48) + 8 * v10);
  swift_bridgeObjectRetain();
  id v23 = v22;
  sub_1008D0DA8(v21, v12, v20, v17, v19);
  sub_1008D0DA8(v21, v12, v20, v17, v19);
  sub_10081EB30(v20, 0);
  type metadata accessor for CKError(0);
  sub_10074B4AC();
  _BridgedStoredNSError.code.getter();
  BOOL v18 = ((0x1000A002D8uLL >> v25) & 1) == 0 || v25 > 0x24;
  sub_10081EB44(v20, 0);

  sub_1008D0CD8(v21, v12, v20, v17, v19);
  sub_1008D0CD8(v21, v12, v20, v17, v19);
  swift_release();
  return v18;
}

uint64_t sub_1009EC080()
{
  uint64_t v1 = v0 + 8;
  swift_beginAccess();
  unint64_t v2 = v0[4];
  if (*(void *)(v0[8] + 16))
  {
    swift_retain();
    unint64_t v3 = swift_bridgeObjectRetain();
    unint64_t v4 = (unint64_t)sub_1009ECE4C(v3, (unint64_t)v0);
    swift_bridgeObjectRelease();
    swift_release();
    unint64_t v2 = v4;
    if (!(v4 >> 62)) {
      goto LABEL_3;
    }
  }
  else
  {
    swift_bridgeObjectRetain();
    if (!(v2 >> 62))
    {
LABEL_3:
      uint64_t v5 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v5) {
        goto LABEL_4;
      }
      return swift_bridgeObjectRelease();
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v5 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (!v5) {
    return swift_bridgeObjectRelease();
  }
LABEL_4:
  uint64_t v6 = v0[2];
  unint64_t v7 = v2 & 0xC000000000000001;
  uint64_t v8 = 4;
  uint64_t v40 = v5;
  double v41 = (double *)v2;
  uint64_t v39 = v6;
  unint64_t v42 = v2 & 0xC000000000000001;
  while (1)
  {
    id v9 = v7 ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)() : *(id *)(v2 + 8 * v8);
    unint64_t v10 = v9;
    uint64_t v11 = v8 - 3;
    if (__OFADD__(v8 - 4, 1)) {
      break;
    }
    uint64_t v12 = *(void *)(v6 + 24);
    if (*(void *)(v12 + 16))
    {
      swift_bridgeObjectRetain();
      id v13 = v10;
      unint64_t v14 = sub_100956CAC((uint64_t)v13);
      if (v15)
      {
        unint64_t v16 = (uint64_t *)(*(void *)(v12 + 56) + 16 * v14);
        uint64_t v18 = *v16;
        uint64_t v17 = v16[1];
        swift_unknownObjectRetain();

        swift_bridgeObjectRelease();
        swift_beginAccess();
        id v19 = v13;
        swift_unknownObjectRetain();
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v21 = (void *)*v1;
        long long v43 = (void *)*v1;
        double v22 = v1;
        *uint64_t v1 = 0x8000000000000000;
        unint64_t v24 = sub_100956CAC((uint64_t)v19);
        uint64_t v25 = v21[2];
        BOOL v26 = (v23 & 1) == 0;
        uint64_t v27 = v25 + v26;
        if (__OFADD__(v25, v26)) {
          goto LABEL_29;
        }
        char v28 = v23;
        if (v21[3] >= v27)
        {
          if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
            sub_100982624();
          }
        }
        else
        {
          sub_10096B4B0(v27, isUniquelyReferenced_nonNull_native);
          unint64_t v29 = sub_100956CAC((uint64_t)v19);
          if ((v28 & 1) != (v30 & 1)) {
            goto LABEL_31;
          }
          unint64_t v24 = v29;
        }
        unint64_t v31 = v17 | 0x8000000000000000;
        unint64_t v7 = v42;
        if (v28)
        {
          uint64_t v32 = v43[7] + 40 * v24;
          sub_1008D0CD8(*(void *)v32, *(void *)(v32 + 8), *(void **)(v32 + 16), *(void *)(v32 + 24), *(void **)(v32 + 32));
          *(void *)uint64_t v32 = v18;
          *(void *)(v32 + 8) = v31;
          *(_OWORD *)(v32 + 16) = xmmword_10117E810;
          *(void *)(v32 + 32) = 0;
        }
        else
        {
          v43[(v24 >> 6) + 8] |= 1 << v24;
          *(void *)(v43[6] + 8 * v24) = v19;
          uint64_t v33 = v43[7] + 40 * v24;
          *(void *)uint64_t v33 = v18;
          *(void *)(v33 + 8) = v31;
          *(_OWORD *)(v33 + 16) = xmmword_10117E810;
          *(void *)(v33 + 32) = 0;
          uint64_t v34 = v43[2];
          BOOL v35 = __OFADD__(v34, 1);
          uint64_t v36 = v34 + 1;
          if (v35) {
            goto LABEL_30;
          }
          v43[2] = v36;
          id v37 = v19;
        }
        uint64_t v1 = v22;
        *double v22 = v43;

        swift_bridgeObjectRelease();
        swift_endAccess();

        swift_unknownObjectRelease();
        uint64_t v5 = v40;
        unint64_t v2 = (unint64_t)v41;
        uint64_t v6 = v39;
      }
      else
      {

        swift_bridgeObjectRelease();
      }
    }
    else
    {
    }
    ++v8;
    if (v11 == v5) {
      return swift_bridgeObjectRelease();
    }
  }
  __break(1u);
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
LABEL_31:
  sub_10050BF48(0, &qword_10167BED0);
  uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

uint64_t sub_1009EC3DC()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_errorRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for CRLSyncRecordSaveBatch()
{
  return self;
}

uint64_t sub_1009EC460(uint64_t a1, void *a2)
{
  unint64_t v3 = v2;
  uint64_t v6 = *v2;
  if ((*v2 & 0xC000000000000001) != 0)
  {
    if (v6 < 0) {
      uint64_t v7 = *v2;
    }
    else {
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFF8;
    }
    uint64_t result = __CocoaDictionary.count.getter();
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    *unint64_t v3 = sub_1009ECBF8(v7, result + 1);
  }
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  Swift::Int v10 = *v3;
  *unint64_t v3 = 0x8000000000000000;
  sub_100976AF4(a1, a2, isUniquelyReferenced_nonNull_native);
  *unint64_t v3 = v10;

  return swift_bridgeObjectRelease();
}

Swift::Int sub_1009EC514(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    sub_1005057FC(&qword_101688FC0);
    uint64_t v2 = static _DictionaryStorage.convert(_:capacity:)();
    uint64_t v18 = v2;
    __CocoaDictionary.makeIterator()();
    uint64_t v3 = __CocoaDictionary.Iterator.next()();
    if (v3)
    {
      uint64_t v4 = v3;
      sub_10050BF48(0, (unint64_t *)&qword_101684330);
      do
      {
        swift_dynamicCast();
        sub_10050BF48(0, &qword_1016747A0);
        swift_dynamicCast();
        uint64_t v2 = v18;
        unint64_t v12 = *(void *)(v18 + 16);
        if (*(void *)(v18 + 24) <= v12)
        {
          sub_100961224(v12 + 1, 1);
          uint64_t v2 = v18;
        }
        Swift::Int result = NSObject._rawHashValue(seed:)(*(void *)(v2 + 40));
        uint64_t v6 = v2 + 64;
        uint64_t v7 = -1 << *(unsigned char *)(v2 + 32);
        unint64_t v8 = result & ~v7;
        unint64_t v9 = v8 >> 6;
        if (((-1 << v8) & ~*(void *)(v2 + 64 + 8 * (v8 >> 6))) != 0)
        {
          unint64_t v10 = __clz(__rbit64((-1 << v8) & ~*(void *)(v2 + 64 + 8 * (v8 >> 6)))) | v8 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          char v13 = 0;
          unint64_t v14 = (unint64_t)(63 - v7) >> 6;
          do
          {
            if (++v9 == v14 && (v13 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            BOOL v15 = v9 == v14;
            if (v9 == v14) {
              unint64_t v9 = 0;
            }
            v13 |= v15;
            uint64_t v16 = *(void *)(v6 + 8 * v9);
          }
          while (v16 == -1);
          unint64_t v10 = __clz(__rbit64(~v16)) + (v9 << 6);
        }
        *(void *)(v6 + ((v10 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v10;
        uint64_t v11 = 8 * v10;
        *(void *)(*(void *)(v2 + 48) + v11) = v17;
        *(void *)(*(void *)(v2 + 56) + v11) = v4;
        ++*(void *)(v2 + 16);
        uint64_t v4 = __CocoaDictionary.Iterator.next()();
      }
      while (v4);
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return (Swift::Int)&_swiftEmptyDictionarySingleton;
  }
  return v2;
}

Swift::Int sub_1009EC768(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    sub_1005057FC(&qword_101689240);
    uint64_t v2 = static _DictionaryStorage.convert(_:capacity:)();
    uint64_t v18 = v2;
    __CocoaDictionary.makeIterator()();
    uint64_t v3 = __CocoaDictionary.Iterator.next()();
    if (v3)
    {
      uint64_t v4 = v3;
      sub_10050BF48(0, (unint64_t *)&qword_10167AF10);
      do
      {
        swift_dynamicCast();
        sub_10050BF48(0, (unint64_t *)&qword_101684330);
        swift_dynamicCast();
        uint64_t v2 = v18;
        unint64_t v12 = *(void *)(v18 + 16);
        if (*(void *)(v18 + 24) <= v12)
        {
          sub_10096962C(v12 + 1, 1);
          uint64_t v2 = v18;
        }
        Swift::Int result = NSObject._rawHashValue(seed:)(*(void *)(v2 + 40));
        uint64_t v6 = v2 + 64;
        uint64_t v7 = -1 << *(unsigned char *)(v2 + 32);
        unint64_t v8 = result & ~v7;
        unint64_t v9 = v8 >> 6;
        if (((-1 << v8) & ~*(void *)(v2 + 64 + 8 * (v8 >> 6))) != 0)
        {
          unint64_t v10 = __clz(__rbit64((-1 << v8) & ~*(void *)(v2 + 64 + 8 * (v8 >> 6)))) | v8 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          char v13 = 0;
          unint64_t v14 = (unint64_t)(63 - v7) >> 6;
          do
          {
            if (++v9 == v14 && (v13 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            BOOL v15 = v9 == v14;
            if (v9 == v14) {
              unint64_t v9 = 0;
            }
            v13 |= v15;
            uint64_t v16 = *(void *)(v6 + 8 * v9);
          }
          while (v16 == -1);
          unint64_t v10 = __clz(__rbit64(~v16)) + (v9 << 6);
        }
        *(void *)(v6 + ((v10 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v10;
        uint64_t v11 = 8 * v10;
        *(void *)(*(void *)(v2 + 48) + v11) = v17;
        *(void *)(*(void *)(v2 + 56) + v11) = v4;
        ++*(void *)(v2 + 16);
        uint64_t v4 = __CocoaDictionary.Iterator.next()();
      }
      while (v4);
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return (Swift::Int)_swiftEmptyDictionarySingleton;
  }
  return v2;
}

Swift::Int sub_1009EC9BC(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    sub_1005057FC(&qword_101689140);
    uint64_t v2 = static _DictionaryStorage.convert(_:capacity:)();
    uint64_t v18 = v2;
    __CocoaDictionary.makeIterator()();
    uint64_t v3 = __CocoaDictionary.Iterator.next()();
    if (v3)
    {
      uint64_t v4 = v3;
      sub_10050BF48(0, (unint64_t *)&qword_101674210);
      do
      {
        swift_dynamicCast();
        type metadata accessor for CRLSyncRecordGroup();
        swift_dynamicCast();
        uint64_t v2 = v18;
        unint64_t v12 = *(void *)(v18 + 16);
        if (*(void *)(v18 + 24) <= v12)
        {
          sub_10096A294(v12 + 1, 1);
          uint64_t v2 = v18;
        }
        Swift::Int result = NSObject._rawHashValue(seed:)(*(void *)(v2 + 40));
        uint64_t v6 = v2 + 64;
        uint64_t v7 = -1 << *(unsigned char *)(v2 + 32);
        unint64_t v8 = result & ~v7;
        unint64_t v9 = v8 >> 6;
        if (((-1 << v8) & ~*(void *)(v2 + 64 + 8 * (v8 >> 6))) != 0)
        {
          unint64_t v10 = __clz(__rbit64((-1 << v8) & ~*(void *)(v2 + 64 + 8 * (v8 >> 6)))) | v8 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          char v13 = 0;
          unint64_t v14 = (unint64_t)(63 - v7) >> 6;
          do
          {
            if (++v9 == v14 && (v13 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            BOOL v15 = v9 == v14;
            if (v9 == v14) {
              unint64_t v9 = 0;
            }
            v13 |= v15;
            uint64_t v16 = *(void *)(v6 + 8 * v9);
          }
          while (v16 == -1);
          unint64_t v10 = __clz(__rbit64(~v16)) + (v9 << 6);
        }
        *(void *)(v6 + ((v10 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v10;
        uint64_t v11 = 8 * v10;
        *(void *)(*(void *)(v2 + 48) + v11) = v17;
        *(void *)(*(void *)(v2 + 56) + v11) = v4;
        ++*(void *)(v2 + 16);
        uint64_t v4 = __CocoaDictionary.Iterator.next()();
      }
      while (v4);
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return (Swift::Int)_swiftEmptyDictionarySingleton;
  }
  return v2;
}

Swift::Int sub_1009ECBF8(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    sub_1005057FC(&qword_101688F68);
    uint64_t v2 = static _DictionaryStorage.convert(_:capacity:)();
    uint64_t v18 = v2;
    __CocoaDictionary.makeIterator()();
    uint64_t v3 = __CocoaDictionary.Iterator.next()();
    if (v3)
    {
      uint64_t v4 = v3;
      sub_10050BF48(0, &qword_10167BED0);
      do
      {
        swift_dynamicCast();
        sub_10050BF48(0, (unint64_t *)&qword_10167C060);
        swift_dynamicCast();
        uint64_t v2 = v18;
        unint64_t v12 = *(void *)(v18 + 16);
        if (*(void *)(v18 + 24) <= v12)
        {
          sub_10096A578(v12 + 1, 1);
          uint64_t v2 = v18;
        }
        Swift::Int result = NSObject._rawHashValue(seed:)(*(void *)(v2 + 40));
        uint64_t v6 = v2 + 64;
        uint64_t v7 = -1 << *(unsigned char *)(v2 + 32);
        unint64_t v8 = result & ~v7;
        unint64_t v9 = v8 >> 6;
        if (((-1 << v8) & ~*(void *)(v2 + 64 + 8 * (v8 >> 6))) != 0)
        {
          unint64_t v10 = __clz(__rbit64((-1 << v8) & ~*(void *)(v2 + 64 + 8 * (v8 >> 6)))) | v8 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          char v13 = 0;
          unint64_t v14 = (unint64_t)(63 - v7) >> 6;
          do
          {
            if (++v9 == v14 && (v13 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            BOOL v15 = v9 == v14;
            if (v9 == v14) {
              unint64_t v9 = 0;
            }
            v13 |= v15;
            uint64_t v16 = *(void *)(v6 + 8 * v9);
          }
          while (v16 == -1);
          unint64_t v10 = __clz(__rbit64(~v16)) + (v9 << 6);
        }
        *(void *)(v6 + ((v10 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v10;
        uint64_t v11 = 8 * v10;
        *(void *)(*(void *)(v2 + 48) + v11) = v17;
        *(void *)(*(void *)(v2 + 56) + v11) = v4;
        ++*(void *)(v2 + 16);
        uint64_t v4 = __CocoaDictionary.Iterator.next()();
      }
      while (v4);
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return (Swift::Int)_swiftEmptyDictionarySingleton;
  }
  return v2;
}

double *sub_1009ECE4C(unint64_t a1, unint64_t a2)
{
  unint64_t v3 = a1;
  if (a1 >> 62) {
    goto LABEL_32;
  }
  uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
LABEL_3:
  unint64_t v5 = a2 + 64;
  swift_beginAccess();
  if (v4)
  {
    unint64_t v6 = 0;
    uint64_t v28 = v3 & 0xFFFFFFFFFFFFFF8;
    unint64_t v29 = v3 & 0xC000000000000001;
    uint64_t v24 = v4;
    unint64_t v25 = v3;
    unint64_t v23 = a2 + 64;
    while (1)
    {
      if (v29)
      {
        id v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        if (v6 >= *(void *)(v28 + 16))
        {
          __break(1u);
LABEL_31:
          __break(1u);
LABEL_32:
          uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
          goto LABEL_3;
        }
        id v7 = *(id *)(v3 + 8 * v6 + 32);
      }
      unint64_t v8 = v6 + 1;
      if (__OFADD__(v6, 1)) {
        goto LABEL_31;
      }
      uint64_t v9 = *(void *)v5;
      if (*(void *)(*(void *)v5 + 16))
      {
        id v10 = v7;
        swift_bridgeObjectRetain();
        unint64_t v11 = sub_100956CAC((uint64_t)v10);
        if (v12)
        {
          char v13 = (uint64_t *)(*(void *)(v9 + 56) + 40 * v11);
          unint64_t v14 = v13[1];
          BOOL v15 = (void *)v13[2];
          a2 = v14 >> 62;
          uint64_t v26 = *v13;
          uint64_t v27 = (void *)v13[4];
          unint64_t v16 = v13[3];
          sub_1008D0DA8(*v13, v14, v15, v16, v27);

          swift_bridgeObjectRelease();
          if (!(v14 >> 62) || a2 == 1)
          {
            uint64_t v17 = v26;
            unint64_t v18 = v14;
            BOOL v19 = (BOOL)v15;
            unint64_t v20 = v16;
LABEL_25:
            sub_1008D0CD8(v17, v18, (void *)v19, v20, v27);

            uint64_t v4 = v24;
            unint64_t v3 = v25;
            unint64_t v5 = v23;
            goto LABEL_7;
          }
          a2 = v16;
          if ((_BYTE)v16)
          {
            if (v16 == 1) {
              goto LABEL_19;
            }
            uint64_t v17 = v26;
            unint64_t v18 = v14;
            BOOL v19 = v15 != 0;
            goto LABEL_24;
          }
          type metadata accessor for CKError(0);
          sub_10074B4AC();
          id v21 = v15;
          _BridgedStoredNSError.code.getter();
          if (v30 > 0x24 || ((1 << v30) & 0x1000A002D8) == 0)
          {
            sub_10081EB44(v15, 0);
LABEL_19:
            uint64_t v17 = v26;
            unint64_t v18 = v14;
            BOOL v19 = (BOOL)v15;
LABEL_24:
            unint64_t v20 = v16;
            goto LABEL_25;
          }
          sub_10081EB44(v15, 0);
          sub_1008D0CD8(v26, v14, v15, v16, v27);
          uint64_t v4 = v24;
          unint64_t v3 = v25;
          unint64_t v5 = v23;
        }
        else
        {

          swift_bridgeObjectRelease();
        }
      }
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      a2 = *(void *)&_swiftEmptyArrayStorage[2];
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
LABEL_7:
      ++v6;
      if (v8 == v4) {
        return _swiftEmptyArrayStorage;
      }
    }
  }
  return _swiftEmptyArrayStorage;
}

uint64_t sub_1009ED124(id *a1, uint64_t a2, char a3, char a4)
{
  LOBYTE(v5) = a4;
  unint64_t v6 = (unint64_t)a1;
  *((unsigned char *)v4 + 56) = 0;
  v4[6] = _swiftEmptyDictionarySingleton;
  v4[8] = _swiftEmptyDictionarySingleton;
  v4[9] = 0;
  *((unsigned char *)v4 + 80) = 0;
  v4[2] = a2;
  *((unsigned char *)v4 + 24) = a3;
  uint64_t v39 = _swiftEmptyArrayStorage;
  if ((unint64_t)a1 >> 62)
  {
LABEL_35:
    swift_retain();
    swift_bridgeObjectRetain();
    uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v7) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)(((unint64_t)a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_retain();
    if (v7)
    {
LABEL_3:
      char v34 = v5;
      BOOL v35 = v4;
      unint64_t v37 = v6 & 0xC000000000000001;
      Swift::Int v8 = (Swift::Int)_swiftEmptyDictionarySingleton;
      uint64_t v9 = 4;
      uint64_t v36 = (id *)v6;
      while (1)
      {
        uint64_t v4 = (void *)(v9 - 4);
        if (v37) {
          unint64_t v11 = (id *)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          unint64_t v11 = (id *)*(id *)(v6 + 8 * v9);
        }
        unint64_t v6 = (unint64_t)v11;
        uint64_t v12 = v9 - 3;
        if (__OFADD__(v4, 1))
        {
          __break(1u);
LABEL_32:
          __break(1u);
LABEL_33:
          __break(1u);
LABEL_34:
          __break(1u);
          goto LABEL_35;
        }
        id v13 = [v11 recordID];
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        unint64_t v5 = *(void *)(((unint64_t)v39 & 0xFFFFFFFFFFFFFF8) + 0x10);
        if (v5 >= *(void *)(((unint64_t)v39 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
        if ((v8 & 0xC000000000000001) != 0)
        {
          if (v8 < 0) {
            uint64_t v4 = (void *)v8;
          }
          else {
            uint64_t v4 = (void *)(v8 & 0xFFFFFFFFFFFFFF8);
          }
          id v14 = v13;
          BOOL v15 = (id *)(id)v6;
          uint64_t v16 = __CocoaDictionary.count.getter();
          if (__OFADD__(v16, 1)) {
            goto LABEL_33;
          }
          Swift::Int v8 = sub_1009ECBF8((uint64_t)v4, v16 + 1);
        }
        else
        {
          id v17 = v13;
          unint64_t v18 = (id *)(id)v6;
        }
        LOBYTE(v5) = swift_isUniquelyReferenced_nonNull_native();
        id v38 = (void *)v8;
        uint64_t v4 = (void *)v8;
        unint64_t v20 = sub_100956CAC((uint64_t)v13);
        uint64_t v21 = *(void *)(v8 + 16);
        BOOL v22 = (v19 & 1) == 0;
        uint64_t v23 = v21 + v22;
        if (__OFADD__(v21, v22)) {
          goto LABEL_32;
        }
        char v24 = v19;
        if (*(void *)(v8 + 24) >= v23)
        {
          if (v5)
          {
            Swift::Int v8 = (Swift::Int)v38;
            if (v19) {
              goto LABEL_4;
            }
          }
          else
          {
            uint64_t v4 = &v38;
            sub_100981CE4();
            Swift::Int v8 = (Swift::Int)v38;
            if (v24) {
              goto LABEL_4;
            }
          }
        }
        else
        {
          sub_10096A578(v23, v5);
          uint64_t v4 = v38;
          unint64_t v25 = sub_100956CAC((uint64_t)v13);
          if ((v24 & 1) != (v26 & 1))
          {
            sub_10050BF48(0, &qword_10167BED0);
            uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
            __break(1u);
            return result;
          }
          unint64_t v20 = v25;
          Swift::Int v8 = (Swift::Int)v38;
          if (v24)
          {
LABEL_4:
            uint64_t v10 = *(void *)(v8 + 56);
            LOBYTE(v5) = 8 * v20;

            *(void *)(v10 + 8 * v20) = v6;
            goto LABEL_5;
          }
        }
        *(void *)(v8 + 8 * (v20 >> 6) + 64) |= 1 << v20;
        uint64_t v27 = 8 * v20;
        *(void *)(*(void *)(v8 + 48) + v27) = v13;
        *(void *)(*(void *)(v8 + 56) + v27) = v6;
        uint64_t v28 = *(void *)(v8 + 16);
        BOOL v29 = __OFADD__(v28, 1);
        uint64_t v30 = v28 + 1;
        if (v29) {
          goto LABEL_34;
        }
        *(void *)(v8 + 16) = v30;
        id v31 = v13;
LABEL_5:

        swift_bridgeObjectRelease();
        ++v9;
        unint64_t v6 = (unint64_t)v36;
        if (v12 == v7)
        {
          uint64_t v32 = v39;
          uint64_t v4 = v35;
          LOBYTE(v5) = v34;
          goto LABEL_37;
        }
      }
    }
  }
  Swift::Int v8 = (Swift::Int)_swiftEmptyDictionarySingleton;
  uint64_t v32 = _swiftEmptyArrayStorage;
LABEL_37:
  *((unsigned char *)v4 + 25) = v5 & 1;
  v4[4] = v32;
  v4[5] = v8;
  return (uint64_t)v4;
}

id sub_1009ED5AC()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLSelectionAwareAlertController();
  return [super dealloc];
}

uint64_t type metadata accessor for CRLSelectionAwareAlertController()
{
  return self;
}

void sub_1009ED7A8(double a1, double a2, double a3, double a4)
{
  v15.receiver = v4;
  v15.super_class = (Class)type metadata accessor for CRLLinkView();
  [super setFrame:a1, a2, a3, a4];
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v10 = (void *)Strong;
    unint64_t v11 = self;
    [v11 begin];
    [v11 setDisableActions:1];
    uint64_t v12 = *(void **)&v4[OBJC_IVAR____TtC8Freeform11CRLLinkView_wrappedLinkView];
    id v13 = [v10 layout];
    id v14 = [v13 geometry];

    [v14 size];
    [v12 setFrame:sub_100064070()];
    sub_1009EDA0C();
    [v11 commit];
  }
}

void sub_1009EDA0C()
{
  uint64_t v1 = v0;
  [v0 bounds];
  if (CGRectGetWidth(v61) <= 0.0) {
    return;
  }
  [v0 bounds];
  if (CGRectGetHeight(v62) < 0.0) {
    return;
  }
  id v2 = [v0 layer];
  if (!v2)
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"updateTransform()", 17, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLLinkView.swift", 82, 2, 168, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"updateTransform()", 17, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLLinkView.swift", 82, 2, 168);
    return;
  }
  id v56 = v2;
  id v3 = [v2 sublayers];
  if (!v3) {
    goto LABEL_16;
  }
  uint64_t v4 = v3;
  sub_10050BF48(0, (unint64_t *)&qword_10167ACF0);
  unint64_t v5 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (!Strong
    || (uint64_t v7 = Strong,
        id v8 = [Strong layout],
        v7,
        id v9 = [v8 geometryInRoot],
        v8,
        !v9))
  {
    swift_bridgeObjectRelease();
LABEL_16:

    return;
  }
  uint64_t v10 = self;
  [v10 begin];
  [v10 setDisableActions:1];
  CATransform3DMakeScale(&a, *(CGFloat *)&v1[OBJC_IVAR____TtC8Freeform11CRLLinkView_viewScale], *(CGFloat *)&v1[OBJC_IVAR____TtC8Freeform11CRLLinkView_viewScale], 1.0);
  CGFloat m11 = a.m11;
  CGFloat m12 = a.m12;
  CGFloat m13 = a.m13;
  CGFloat m14 = a.m14;
  CGFloat m21 = a.m21;
  CGFloat m22 = a.m22;
  CGFloat m23 = a.m23;
  CGFloat m24 = a.m24;
  CGFloat m32 = a.m32;
  CGFloat m31 = a.m31;
  CGFloat m34 = a.m34;
  CGFloat m33 = a.m33;
  CGFloat m42 = a.m42;
  CGFloat m41 = a.m41;
  CGFloat m43 = a.m43;
  CGFloat m44 = a.m44;
  if (v5 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v19 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v19 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  CGFloat v54 = m23;
  CGFloat v55 = m22;
  CGFloat v53 = m24;
  if (v19)
  {
    if ((v5 & 0xC000000000000001) != 0)
    {
      id v20 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else
    {
      if (!*(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        __break(1u);
        return;
      }
      id v20 = *(id *)(v5 + 32);
    }
    uint64_t v21 = v20;
    swift_bridgeObjectRelease();
    [v21 setAnchorPoint:0.5, 0.5];
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  [v1 bounds];
  CGFloat v22 = CGRectGetWidth(v63) * 0.5;
  uint64_t v23 = *(void **)&v1[OBJC_IVAR____TtC8Freeform11CRLLinkView_wrappedLinkView];
  [v23 frame];
  CGFloat v24 = v22 - CGRectGetWidth(v64) * 0.5;
  [v1 bounds];
  CGFloat v25 = CGRectGetHeight(v65) * 0.5;
  [v23 frame];
  CGFloat Height = CGRectGetHeight(v66);
  CATransform3DMakeTranslation(&a, v24, v25 - Height * 0.5, 0.0);
  long long v43 = *(_OWORD *)&a.m13;
  long long v44 = *(_OWORD *)&a.m11;
  long long v41 = *(_OWORD *)&a.m23;
  long long v42 = *(_OWORD *)&a.m21;
  long long v39 = *(_OWORD *)&a.m33;
  long long v40 = *(_OWORD *)&a.m31;
  long long v38 = *(_OWORD *)&a.m41;
  CGFloat v27 = a.m43;
  CGFloat v28 = a.m44;
  [v9 transform];
  double v29 = sub_10007F7C8(&a.m11);
  CATransform3DMakeRotation(&a, v29, 0.0, 0.0, 1.0);
  long long v30 = *(_OWORD *)&a.m11;
  long long v31 = *(_OWORD *)&a.m13;
  long long v32 = *(_OWORD *)&a.m21;
  long long v33 = *(_OWORD *)&a.m23;
  long long v34 = *(_OWORD *)&a.m31;
  long long v35 = *(_OWORD *)&a.m33;
  long long v36 = *(_OWORD *)&a.m41;
  long long v37 = *(_OWORD *)&a.m43;
  a.CGFloat m11 = m11;
  a.CGFloat m12 = m12;
  a.CGFloat m13 = m13;
  a.CGFloat m14 = m14;
  a.CGFloat m21 = m21;
  a.CGFloat m22 = v55;
  a.CGFloat m23 = v54;
  a.CGFloat m24 = v53;
  a.CGFloat m31 = m31;
  a.CGFloat m32 = m32;
  a.CGFloat m33 = m33;
  a.CGFloat m34 = m34;
  a.CGFloat m41 = m41;
  a.CGFloat m42 = m42;
  a.CGFloat m43 = m43;
  a.CGFloat m44 = m44;
  *(_OWORD *)&b.CGFloat m11 = v30;
  *(_OWORD *)&b.CGFloat m13 = v31;
  *(_OWORD *)&b.CGFloat m21 = v32;
  *(_OWORD *)&b.CGFloat m23 = v33;
  *(_OWORD *)&b.CGFloat m31 = v34;
  *(_OWORD *)&b.CGFloat m33 = v35;
  *(_OWORD *)&b.CGFloat m41 = v36;
  *(_OWORD *)&b.CGFloat m43 = v37;
  CATransform3DConcat(&v57, &a, &b);
  *(_OWORD *)&a.CGFloat m11 = v44;
  *(_OWORD *)&a.CGFloat m13 = v43;
  *(_OWORD *)&a.CGFloat m21 = v42;
  *(_OWORD *)&a.CGFloat m23 = v41;
  *(_OWORD *)&a.CGFloat m31 = v40;
  *(_OWORD *)&a.CGFloat m33 = v39;
  *(_OWORD *)&a.CGFloat m41 = v38;
  a.CGFloat m43 = v27;
  a.CGFloat m44 = v28;
  CATransform3D b = v57;
  CATransform3DConcat(&v57, &a, &b);
  CATransform3D a = v57;
  [v56 setSublayerTransform:&a];
  [v10 commit];
}

id sub_1009EDFB4()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLLinkView();
  return [super dealloc];
}

uint64_t type metadata accessor for CRLLinkView()
{
  return self;
}

id sub_1009EE058(uint64_t a1)
{
  id v1 = [objc_allocWithZone((Class)LPLinkView) initWithMetadata:a1];
  [v1 _setDisableLinkFollowing:1];
  [v1 _setDisableTapGesture:1];
  [v1 _setDisableAnimations:1];
  [v1 _setDisablePlayback:1];
  [v1 _setDisableAutoPlay:1];
  [v1 _setDisablePreviewGesture:1];
  [v1 _setDisableHighlightGesture:1];
  [v1 _setDisablePlaybackControls:1];
  [v1 _setPreferredSizeClass:5];
  id v2 = [objc_allocWithZone((Class)LPLinkRendererSizeClassParameters) init];
  [v2 setNeverShowIcon:1];
  [v1 _setSizeClassParameters:v2];
  [v1 setUserInteractionEnabled:0];
  [v1 setOverrideUserInterfaceStyle:1];

  return v1;
}

uint64_t sub_1009EE1B8(char a1)
{
  *(void *)(v2 + 128) = v1;
  *(unsigned char *)(v2 + 144) = a1;
  type metadata accessor for MainActor();
  *(void *)(v2 + 136) = static MainActor.shared.getter();
  uint64_t v4 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_1009EE254, v4, v3);
}

uint64_t sub_1009EE254()
{
  int v1 = *(unsigned __int8 *)(v0 + 144);
  swift_release();
  if (v1 == 1)
  {
    if (qword_10166FBA0 != -1) {
      swift_once();
    }
    swift_beginAccess();
    uint64_t v2 = (void *)static OS_os_log.realTimeSync;
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_10117E810;
    id v4 = v2;
    GroupSession.activity.getter();
    uint64_t v5 = *(void *)(v0 + 112);
    swift_release();
    *(void *)(v0 + 120) = v5;
    uint64_t v6 = String.init<A>(describing:)();
    uint64_t v8 = v7;
    *(void *)(inited + 56) = &type metadata for String;
    *(void *)(inited + 64) = sub_100528BE4();
    *(void *)(inited + 32) = v6;
    *(void *)(inited + 40) = v8;
    uint64_t v9 = static os_log_type_t.default.getter();
    sub_100BAC898((uint64_t)v4, (uint64_t)&_mh_execute_header, v9, (uint64_t)"leaveSession() call groupSession.end() on %@", 44, 2, inited);
    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();

    GroupSession.end()();
  }
  uint64_t v10 = *(uint64_t (**)(void))(v0 + 8);
  return v10();
}

uint64_t sub_1009EE418()
{
  swift_release();
  swift_release();
  swift_release();
  uint64_t v1 = v0 + OBJC_IVAR____TtC8Freeform20CRLBoardGroupSession_sessionID;
  uint64_t v2 = type metadata accessor for UUID();
  uint64_t v3 = *(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  v3(v1, v2);
  v3(v0 + OBJC_IVAR____TtC8Freeform20CRLBoardGroupSession_localParticipantUUID, v2);
  swift_release();
  sub_100522F00(v0 + qword_101699240, &qword_101681D68);
  sub_100522F00(v0 + *(void *)(*(void *)v0 + 280), &qword_10168B130);

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for CRLBoardOpportunisticGroupSession()
{
  uint64_t result = qword_10168AF88;
  if (!qword_10168AF88) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1009EE5A4()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1009EE5DC(void *a1)
{
  id v3 = [v1 supportedMediaTypes];
  uint64_t v4 = 0;
  switch((unint64_t)v3)
  {
    case 0uLL:
    case 1uLL:
      return v4;
    case 2uLL:
      return sub_1009EED54(a1);
    case 3uLL:
      return sub_1009EEA58(a1);
    case 4uLL:
      return 1;
    default:
      type metadata accessor for CRLMediaReplacingSupportedMediaTypes(0);
      _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)();
      __break(1u);
      JUMPOUT(0x1009EE6BCLL);
  }
}

uint64_t sub_1009EE6D0@<X0>(uint64_t a1@<X8>)
{
  if ([v1 supportedMediaTypes])
  {
    uint64_t v3 = type metadata accessor for PHPickerFilter();
    uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56);
    uint64_t v5 = v3;
    uint64_t v6 = a1;
    uint64_t v7 = 1;
  }
  else
  {
    static PHPickerFilter.images.getter();
    uint64_t v8 = type metadata accessor for PHPickerFilter();
    uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56);
    uint64_t v5 = v8;
    uint64_t v6 = a1;
    uint64_t v7 = 0;
  }

  return v4(v6, v7, 1, v5);
}

uint64_t sub_1009EE78C()
{
  sub_1005057FC(&qword_101675F70);
  type metadata accessor for UTType();
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_10117DF40;
  static UTType.realityFile.getter();
  static UTType.usd.getter();
  static UTType.usdz.getter();
  switch((unint64_t)[v0 supportedMediaTypes])
  {
    case 0uLL:
      swift_bridgeObjectRelease();
      uint64_t v1 = swift_allocObject();
      *(_OWORD *)(v1 + 16) = xmmword_10117E810;
      static UTType.image.getter();
      return v1;
    case 1uLL:
      swift_bridgeObjectRelease();
      uint64_t v5 = swift_allocObject();
      *(_OWORD *)(v5 + 16) = xmmword_10117DF40;
      static UTType.image.getter();
      static UTType.movie.getter();
      static UTType.audio.getter();
      return v5;
    case 2uLL:
      return v1;
    case 3uLL:
      id v6 = [self supportedFileUTTypes];
      uint64_t v7 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v8 = sub_100CDE168(v7);
      swift_bridgeObjectRelease();
      uint64_t v10 = v8;
      uint64_t v9 = sub_100CDE168(v1);
      swift_bridgeObjectRelease();
      sub_10102A028(v9);
      swift_bridgeObjectRelease();
      uint64_t v4 = (uint64_t)sub_1006BA98C(v10);
      swift_bridgeObjectRelease();
      return v4;
    case 4uLL:
      swift_bridgeObjectRelease();
      id v3 = [self supportedFileUTTypes];
      uint64_t v4 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

      return v4;
    default:
      type metadata accessor for CRLMediaReplacingSupportedMediaTypes(0);
      _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)();
      __break(1u);
      JUMPOUT(0x1009EEA44);
  }
}

uint64_t sub_1009EEA58(void *a1)
{
  id v1 = [a1 pathExtension];
  if (!v1) {
    goto LABEL_27;
  }
  uint64_t v2 = v1;
  uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v5 = v4;

  sub_1005057FC(&qword_101675F70);
  type metadata accessor for UTType();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_10117DF40;
  static UTType.realityFile.getter();
  static UTType.usd.getter();
  static UTType.usdz.getter();
  swift_bridgeObjectRetain();
  uint64_t v6 = UTType.preferredFilenameExtension.getter();
  if (v7)
  {
    if (v3 == v6 && v7 == v5) {
      goto LABEL_25;
    }
    char v9 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v9) {
      goto LABEL_24;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  uint64_t v10 = UTType.preferredFilenameExtension.getter();
  if (v11)
  {
    if (v3 == v10 && v11 == v5) {
      goto LABEL_25;
    }
    char v13 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v13) {
      goto LABEL_24;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  uint64_t v14 = UTType.preferredFilenameExtension.getter();
  if (!v15)
  {
    swift_bridgeObjectRelease();
LABEL_30:
    swift_bridgeObjectRelease();
    if ((v3 != 1667527541 || v5 != 0xE400000000000000)
      && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0
      && (v3 != 1633973109 || v5 != 0xE400000000000000))
    {
      char v20 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      char v18 = v20 ^ 1;
      return v18 & 1;
    }
    goto LABEL_26;
  }
  if (v3 == v14 && v15 == v5)
  {
LABEL_25:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    goto LABEL_26;
  }
  char v17 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v17 & 1) == 0) {
    goto LABEL_30;
  }
LABEL_24:
  swift_bridgeObjectRelease();
LABEL_26:
  swift_bridgeObjectRelease();
LABEL_27:
  char v18 = 0;
  return v18 & 1;
}

uint64_t sub_1009EED54(void *a1)
{
  uint64_t result = (uint64_t)[a1 pathExtension];
  if (result)
  {
    uint64_t v3 = (void *)result;
    uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v6 = v5;

    if (objc_msgSend(a1, "_IF_isDirectory"))
    {
      BOOL v7 = v4 == 7368801 && v6 == 0xE300000000000000;
      if (!v7 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
        goto LABEL_37;
      }
    }
    sub_1005057FC(&qword_101675F70);
    type metadata accessor for UTType();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_10117DF40;
    static UTType.realityFile.getter();
    static UTType.usd.getter();
    static UTType.usdz.getter();
    swift_bridgeObjectRetain();
    uint64_t v8 = UTType.preferredFilenameExtension.getter();
    if (v9)
    {
      if (v4 == v8 && v9 == v6) {
        goto LABEL_31;
      }
      char v11 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v11) {
        goto LABEL_30;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRetain();
    uint64_t v12 = UTType.preferredFilenameExtension.getter();
    if (v13)
    {
      if (v4 == v12 && v13 == v6) {
        goto LABEL_31;
      }
      char v15 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v15) {
        goto LABEL_30;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRetain();
    uint64_t v16 = UTType.preferredFilenameExtension.getter();
    if (!v17)
    {
      swift_bridgeObjectRelease();
      goto LABEL_33;
    }
    if (v4 != v16 || v17 != v6)
    {
      char v19 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v19)
      {
LABEL_30:
        swift_bridgeObjectRelease();
LABEL_37:
        swift_bridgeObjectRelease();
        return 1;
      }
LABEL_33:
      swift_bridgeObjectRelease();
      if ((v4 != 1667527541 || v6 != 0xE400000000000000)
        && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0
        && (v4 != 1633973109 || v6 != 0xE400000000000000))
      {
        char v20 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        return v20 & 1;
      }
      goto LABEL_37;
    }
LABEL_31:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    goto LABEL_37;
  }
  return result;
}

uint64_t *sub_1009EF09C(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v20 = *a2;
    *a1 = *a2;
    uint64_t v4 = (uint64_t *)(v20 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    uint64_t v7 = type metadata accessor for UUID();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(v4, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = a3[6];
    uint64_t v10 = (uint64_t *)((char *)v4 + v8);
    char v11 = (uint64_t *)((char *)a2 + v8);
    uint64_t v12 = v11[1];
    *uint64_t v10 = *v11;
    v10[1] = v12;
    uint64_t v13 = (uint64_t *)((char *)v4 + v9);
    uint64_t v14 = (uint64_t *)((char *)a2 + v9);
    uint64_t v15 = v14[1];
    *uint64_t v13 = *v14;
    v13[1] = v15;
    uint64_t v16 = a3[7];
    uint64_t v17 = (uint64_t *)((char *)v4 + v16);
    char v18 = (uint64_t *)((char *)a2 + v16);
    uint64_t v19 = v18[1];
    void *v17 = *v18;
    v17[1] = v19;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  swift_retain();
  return v4;
}

uint64_t sub_1009EF1A4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_release();
}

uint64_t sub_1009EF23C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = (void *)(a1 + v7);
  uint64_t v10 = (void *)(a2 + v7);
  uint64_t v11 = v10[1];
  *uint64_t v9 = *v10;
  v9[1] = v11;
  uint64_t v12 = (void *)(a1 + v8);
  uint64_t v13 = (void *)(a2 + v8);
  uint64_t v14 = v13[1];
  *uint64_t v12 = *v13;
  v12[1] = v14;
  uint64_t v15 = a3[7];
  uint64_t v16 = (void *)(a1 + v15);
  uint64_t v17 = (void *)(a2 + v15);
  uint64_t v18 = v17[1];
  *uint64_t v16 = *v17;
  v16[1] = v18;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

uint64_t sub_1009EF2F8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  *uint64_t v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v10 = a3[6];
  uint64_t v11 = (void *)(a1 + v10);
  uint64_t v12 = (void *)(a2 + v10);
  *uint64_t v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v13 = a3[7];
  uint64_t v14 = (void *)(a1 + v13);
  uint64_t v15 = (void *)(a2 + v13);
  uint64_t v16 = v15[1];
  *uint64_t v14 = *v15;
  v14[1] = v16;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_1009EF3E4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  return a1;
}

uint64_t sub_1009EF474(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (uint64_t *)(a2 + v7);
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  *uint64_t v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  uint64_t v12 = a3[6];
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (uint64_t *)(a2 + v12);
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  *uint64_t v13 = v16;
  v13[1] = v15;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  swift_release();
  return a1;
}

uint64_t sub_1009EF534(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1009EF548);
}

uint64_t sub_1009EF548(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_1009EF60C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1009EF620);
}

uint64_t sub_1009EF620(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for UUID();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  }
  return result;
}

uint64_t _s15FilterViewModelVMa()
{
  uint64_t result = qword_10168B190;
  if (!qword_10168B190) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1009EF72C()
{
  uint64_t result = type metadata accessor for UUID();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

BOOL sub_1009EF7D8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + *(int *)(_s13ItemViewModelVMa() + 44));

  return sub_1006E7150(a2, v3);
}

uint64_t sub_1009EF820()
{
  sub_1005057FC(&qword_10168B1D8);
  uint64_t v0 = (int *)(_s15FilterViewModelVMa() - 8);
  uint64_t v1 = *(void *)(*(void *)v0 + 72);
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)v0 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v0 + 80);
  uint64_t v3 = 2 * v1;
  uint64_t v37 = swift_allocObject();
  *(_OWORD *)(v37 + 16) = xmmword_10117DF40;
  unint64_t v4 = v37 + v2;
  int v5 = self;
  id v6 = [v5 mainBundle];
  NSString v7 = String._bridgeToObjectiveC()();
  NSString v8 = String._bridgeToObjectiveC()();
  id v9 = [v6 localizedStringForKey:v7 value:v8 table:0];

  uint64_t v10 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v12 = v11;

  UUID.init()();
  uint64_t v13 = (uint64_t *)(v4 + v0[7]);
  *uint64_t v13 = v10;
  v13[1] = v12;
  *(_OWORD *)(v4 + v0[8]) = xmmword_10119CAB0;
  uint64_t v14 = (uint64_t (**)())(v4 + v0[9]);
  *uint64_t v14 = CRLWPShapeLayout.columnsAreLeftToRight.getter;
  v14[1] = 0;
  uint64_t v15 = v4 + v1;
  id v16 = [v5 mainBundle];
  NSString v17 = String._bridgeToObjectiveC()();
  NSString v18 = String._bridgeToObjectiveC()();
  id v19 = [v16 localizedStringForKey:v17 value:v18 table:0];

  uint64_t v20 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v22 = v21;

  UUID.init()();
  uint64_t v23 = (uint64_t *)(v15 + v0[7]);
  uint64_t *v23 = v20;
  v23[1] = v22;
  *(_OWORD *)(v15 + v0[8]) = xmmword_10119CAC0;
  CGFloat v24 = (uint64_t (**)())(v15 + v0[9]);
  *CGFloat v24 = CRLWPShapeLayout.columnsAreLeftToRight.getter;
  v24[1] = 0;
  unint64_t v25 = v4 + v3;
  id v26 = [v5 mainBundle];
  NSString v27 = String._bridgeToObjectiveC()();
  NSString v28 = String._bridgeToObjectiveC()();
  id v29 = [v26 localizedStringForKey:v27 value:v28 table:0];

  uint64_t v30 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v32 = v31;

  uint64_t result = UUID.init()();
  long long v34 = (uint64_t *)(v25 + v0[7]);
  *long long v34 = v30;
  v34[1] = v32;
  long long v35 = (void *)(v25 + v0[8]);
  *long long v35 = 0xD000000000000011;
  v35[1] = 0x8000000101267920;
  long long v36 = (uint64_t (**)(uint64_t))(v25 + v0[9]);
  *long long v36 = sub_1009EFBB0;
  v36[1] = 0;
  qword_10171B398 = v37;
  return result;
}

uint64_t sub_1009EFBB0(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + *(int *)(_s13ItemViewModelVMa() + 48));
}

Swift::Int sub_1009EFBE0()
{
  Hasher.init(_seed:)();
  type metadata accessor for UUID();
  sub_1009EFFCC((unint64_t *)&qword_1016770E0, (void (*)(uint64_t))&type metadata accessor for UUID);
  dispatch thunk of Hashable.hash(into:)();
  uint64_t v1 = _s15FilterViewModelVMa();
  String.hash(into:)();
  if (*(void *)(v0 + *(int *)(v1 + 24) + 8))
  {
    Hasher._combine(_:)(1u);
    swift_bridgeObjectRetain();
    String.hash(into:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    Hasher._combine(_:)(0);
  }
  return Hasher._finalize()();
}

uint64_t sub_1009EFCE0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for UUID();
  unint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);

  return v4(a1, v1, v3);
}

void sub_1009EFD4C(uint64_t a1, uint64_t a2)
{
  type metadata accessor for UUID();
  sub_1009EFFCC((unint64_t *)&qword_1016770E0, (void (*)(uint64_t))&type metadata accessor for UUID);
  dispatch thunk of Hashable.hash(into:)();
  String.hash(into:)();
  if (*(void *)(v2 + *(int *)(a2 + 24) + 8))
  {
    Hasher._combine(_:)(1u);
    swift_bridgeObjectRetain();
    String.hash(into:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    Hasher._combine(_:)(0);
  }
}

Swift::Int sub_1009EFE44(uint64_t a1, uint64_t a2)
{
  Hasher.init(_seed:)();
  type metadata accessor for UUID();
  sub_1009EFFCC((unint64_t *)&qword_1016770E0, (void (*)(uint64_t))&type metadata accessor for UUID);
  dispatch thunk of Hashable.hash(into:)();
  String.hash(into:)();
  if (*(void *)(v2 + *(int *)(a2 + 24) + 8))
  {
    Hasher._combine(_:)(1u);
    swift_bridgeObjectRetain();
    String.hash(into:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    Hasher._combine(_:)(0);
  }
  return Hasher._finalize()();
}

uint64_t sub_1009EFF3C()
{
  return sub_1009EFFCC(&qword_10168B1D0, (void (*)(uint64_t))_s15FilterViewModelVMa);
}

uint64_t sub_1009EFF84()
{
  return sub_1009EFFCC((unint64_t *)&qword_1016770E0, (void (*)(uint64_t))&type metadata accessor for UUID);
}

uint64_t sub_1009EFFCC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1009F0014(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s15FilterViewModelVMa();
  __chkstk_darwin(v4, v5);
  NSString v7 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8, v9);
  uint64_t v11 = (char *)&v34 - v10;
  __chkstk_darwin(v12, v13);
  uint64_t v15 = (char *)&v34 - v14;
  __chkstk_darwin(v16, v17);
  id v19 = (char *)&v34 - v18;
  char v20 = static UUID.== infix(_:_:)();
  sub_1009F0290(a1, (uint64_t)v19);
  sub_1009F0290(a2, (uint64_t)v15);
  if ((v20 & 1) == 0)
  {
    sub_1009F02F4((uint64_t)v19);
    sub_1009F02F4((uint64_t)v15);
    sub_1009F0290(a1, (uint64_t)v11);
    sub_1009F0290(a2, (uint64_t)v7);
    goto LABEL_9;
  }
  uint64_t v21 = *(int *)(v4 + 20);
  uint64_t v22 = *(void *)&v19[v21];
  uint64_t v23 = *(void *)&v19[v21 + 8];
  CGFloat v24 = &v15[v21];
  if (v22 == *(void *)v24 && v23 == *((void *)v24 + 1))
  {
    sub_1009F02F4((uint64_t)v19);
    sub_1009F02F4((uint64_t)v15);
    sub_1009F0290(a1, (uint64_t)v11);
    sub_1009F0290(a2, (uint64_t)v7);
    goto LABEL_12;
  }
  char v26 = _stringCompareWithSmolCheck(_:_:expecting:)();
  sub_1009F02F4((uint64_t)v19);
  sub_1009F02F4((uint64_t)v15);
  sub_1009F0290(a1, (uint64_t)v11);
  sub_1009F0290(a2, (uint64_t)v7);
  if ((v26 & 1) == 0)
  {
LABEL_9:
    sub_1009F02F4((uint64_t)v7);
    sub_1009F02F4((uint64_t)v11);
LABEL_10:
    LOBYTE(v27) = 0;
    return v27 & 1;
  }
LABEL_12:
  uint64_t v28 = *(int *)(v4 + 24);
  id v29 = &v11[v28];
  uint64_t v30 = *(void *)&v11[v28 + 8];
  uint64_t v31 = &v7[v28];
  uint64_t v27 = *((void *)v31 + 1);
  if (!v30)
  {
    swift_bridgeObjectRetain();
    sub_1009F02F4((uint64_t)v7);
    sub_1009F02F4((uint64_t)v11);
    if (!v27)
    {
      LOBYTE(v27) = 1;
      return v27 & 1;
    }
    swift_bridgeObjectRelease();
    goto LABEL_10;
  }
  if (v27)
  {
    if (*(void *)v29 == *(void *)v31 && v30 == v27) {
      LOBYTE(v27) = 1;
    }
    else {
      LOBYTE(v27) = _stringCompareWithSmolCheck(_:_:expecting:)();
    }
  }
  swift_bridgeObjectRetain();
  sub_1009F02F4((uint64_t)v7);
  sub_1009F02F4((uint64_t)v11);
  swift_bridgeObjectRelease();
  return v27 & 1;
}

uint64_t sub_1009F0290(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s15FilterViewModelVMa();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1009F02F4(uint64_t a1)
{
  uint64_t v2 = _s15FilterViewModelVMa();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1009F0350@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v21 = a3;
  uint64_t v5 = type metadata accessor for SHA256();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5, v7);
  uint64_t v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for SHA256Digest();
  uint64_t v20 = *(void *)(v10 - 8);
  __chkstk_darwin(v10, v11);
  uint64_t v13 = (char *)&v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100510DA4((unint64_t *)&qword_101672020, (void (*)(uint64_t))&type metadata accessor for SHA256);
  dispatch thunk of HashFunction.init()();
  switch(a2 >> 62)
  {
    case 1uLL:
      uint64_t v18 = v10;
      uint64_t v19 = 0;
      if (a1 >> 32 < (int)a1) {
        __break(1u);
      }
      sub_100510D4C(a1, a2);
      sub_10099EAEC((int)a1, a1 >> 32);
      sub_100510084(a1, a2);
      uint64_t v10 = v18;
      goto LABEL_9;
    case 2uLL:
      uint64_t v18 = v10;
      uint64_t v19 = 0;
      uint64_t v15 = *(void *)(a1 + 16);
      uint64_t v14 = *(void *)(a1 + 24);
      sub_100510D4C(a1, a2);
      swift_retain();
      swift_retain();
      uint64_t v16 = v15;
      uint64_t v10 = v18;
      sub_10099EAEC(v16, v14);
      swift_release();
      swift_release();
      goto LABEL_8;
    case 3uLL:
      memset(v22, 0, 14);
      goto LABEL_7;
    default:
      v22[0] = a1;
      LOWORD(v22[1]) = a2;
      BYTE2(v22[1]) = BYTE2(a2);
      BYTE3(v22[1]) = BYTE3(a2);
      BYTE4(v22[1]) = BYTE4(a2);
      BYTE5(v22[1]) = BYTE5(a2);
LABEL_7:
      dispatch thunk of HashFunction.update(bufferPointer:)();
LABEL_8:
      sub_100510084(a1, a2);
LABEL_9:
      dispatch thunk of HashFunction.finalize()();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
      type metadata accessor for UUID();
      SHA256Digest.withUnsafeBytes<A>(_:)();
      sub_100510084(a1, a2);
      return (*(uint64_t (**)(char *, uint64_t))(v20 + 8))(v13, v10);
  }
}

uint64_t sub_1009F0714()
{
  uint64_t v0 = sub_1005057FC((uint64_t *)&unk_101674520);
  __chkstk_darwin(v0 - 8, v1);
  uint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for UUID();
  sub_100568B28(v4, qword_10168B1E0);
  uint64_t v5 = sub_100556B74(v4, (uint64_t)qword_10168B1E0);
  UUID.init(uuidString:)();
  uint64_t v6 = *(void *)(v4 - 8);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 48))(v3, 1, v4);
  if (result != 1) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v6 + 32))(v5, v3, v4);
  }
  __break(1u);
  return result;
}

uint64_t sub_1009F0844@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1009F0890(a1, a2, a3);
}

uint64_t sub_1009F0890@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v26[2] = a1;
  v26[3] = a2;
  uint64_t v28 = a3;
  uint64_t v29 = type metadata accessor for SHA256Digest();
  uint64_t v27 = *(void *)(v29 - 8);
  __chkstk_darwin(v29, v3);
  uint64_t v5 = (char *)v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for SHA256();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6, v8);
  uint64_t v10 = (char *)v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for UUID();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11, v13);
  uint64_t v15 = (char *)v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10166F6A8 != -1) {
    swift_once();
  }
  uint64_t v16 = sub_100556B74(v11, (uint64_t)qword_10168B1E0);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v15, v16, v11);
  sub_100510DA4((unint64_t *)&qword_101672020, (void (*)(uint64_t))&type metadata accessor for SHA256);
  dispatch thunk of HashFunction.init()();
  uint64_t v30 = UUID.uuid.getter();
  char v31 = v17;
  char v32 = v18;
  char v33 = v19;
  char v34 = v20;
  char v35 = v21;
  char v36 = v22;
  char v37 = v23;
  char v38 = v24;
  dispatch thunk of HashFunction.update(bufferPointer:)();
  dispatch thunk of HashFunction.update(bufferPointer:)();
  dispatch thunk of HashFunction.finalize()();
  sub_1009F0C38();
  (*(void (**)(char *, uint64_t))(v27 + 8))(v5, v29);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v15, v11);
}

uint64_t sub_1009F0C38()
{
  return UUID.init(uuid:)();
}

uint64_t sub_1009F0D20()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform28CRLMiniFormatterDataProvider_editorController);
  if (type metadata accessor for CRLFileEditor()) {
    uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  }
  else {
    uint64_t ObjCClassFromMetadata = 0;
  }
  [v1 mostSpecificCurrentEditorOfClass:ObjCClassFromMetadata];
  uint64_t v3 = (void *)swift_dynamicCastClass();
  if (v3) {
    [v3 showMediaReplaceUI:v0];
  }

  return swift_unknownObjectRelease();
}

id sub_1009F0DC4()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLMiniFormatterFileDataProvider();
  return [super dealloc];
}

uint64_t type metadata accessor for CRLMiniFormatterFileDataProvider()
{
  return self;
}

uint64_t sub_1009F0E1C@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  *(void *)(a4 + 32) = 0;
  *(_OWORD *)a4 = 0u;
  *(_OWORD *)(a4 + 16) = 0u;
  switch(a3)
  {
    case 2:
      uint64_t v11 = &type metadata for CRLImagePresetData;
      unint64_t v12 = sub_1009F2CD4();
      v10[0] = swift_allocObject();
      sub_100510D4C(a1, a2);
      sub_1009F2E04();
      goto LABEL_8;
    case 3:
      uint64_t v11 = &type metadata for CRLMoviePresetData;
      unint64_t v12 = sub_1009F2C28();
      v10[0] = swift_allocObject();
      sub_100510D4C(a1, a2);
      sub_1009F2C80();
      goto LABEL_8;
    case 4:
      uint64_t v11 = &type metadata for CRLWPTextPresetData;
      unint64_t v12 = sub_100842C40();
      v10[0] = swift_allocObject();
      sub_100510D4C(a1, a2);
      sub_1005DDFD0();
      CRValue.init(serializedData:)();
      if (v4)
      {
        sub_100522F00(a4, &qword_10167F410);
        return sub_1007DC630((uint64_t)v10);
      }
      else
      {
        sub_100522F00(a4, &qword_10167F410);
        uint64_t v9 = a4;
        return sub_10051B3EC((uint64_t)v10, v9, &qword_10167F410);
      }
    case 5:
      uint64_t v11 = &type metadata for CRLShapePresetData;
      unint64_t v12 = sub_1009F2E58();
      v10[0] = swift_allocObject();
      sub_100510D4C(a1, a2);
      sub_1009F2FEC();
      goto LABEL_8;
    default:
      uint64_t v11 = &type metadata for CRLWPShapePresetData;
      unint64_t v12 = sub_100990F3C();
      v10[0] = swift_allocObject();
      sub_100510D4C(a1, a2);
      sub_1009F31DC();
LABEL_8:
      CRValue.init(serializedData:)();
      sub_100522F00(a4, &qword_10167F410);
      if (v4) {
        return sub_1007DC630((uint64_t)v10);
      }
      uint64_t v9 = a4;
      return sub_10051B3EC((uint64_t)v10, v9, &qword_10167F410);
  }
}

void *sub_1009F10B0(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, unint64_t a8, uint64_t a9, unint64_t a10)
{
  uint64_t v233 = a7;
  unint64_t v234 = a8;
  uint64_t v226 = a5;
  uint64_t v227 = a6;
  uint64_t v225 = a3;
  int v232 = a2;
  unint64_t v230 = a10;
  uint64_t v231 = a1;
  uint64_t v228 = a4;
  uint64_t v229 = a9;
  uint64_t v218 = type metadata accessor for CRLWPStickyNoteItemCRDTData(0);
  uint64_t v11 = __chkstk_darwin(v218, v10);
  uint64_t v197 = (uint64_t)&v189 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11, v13);
  long long v219 = (char *)&v189 - v14;
  uint64_t v216 = type metadata accessor for CRLConnectionLineCRDTData(0);
  uint64_t v16 = __chkstk_darwin(v216, v15);
  uint64_t v196 = (uint64_t)&v189 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16, v18);
  uint64_t v217 = (char *)&v189 - v19;
  uint64_t v213 = type metadata accessor for CRLMovieItemCRDTData(0);
  uint64_t v21 = __chkstk_darwin(v213, v20);
  uint64_t v195 = (uint64_t)&v189 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21, v23);
  uint64_t v214 = (char *)&v189 - v24;
  uint64_t v211 = type metadata accessor for CRLFileItemCRDTData(0);
  uint64_t v26 = __chkstk_darwin(v211, v25);
  uint64_t v194 = (uint64_t)&v189 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26, v28);
  uint64_t v212 = (char *)&v189 - v29;
  uint64_t v209 = type metadata accessor for CRLURLItemCRDTData(0);
  uint64_t v31 = __chkstk_darwin(v209, v30);
  uint64_t v192 = (uint64_t)&v189 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v31, v33);
  uint64_t v210 = (char *)&v189 - v34;
  uint64_t v207 = type metadata accessor for CRLUSDZItemCRDTData(0);
  uint64_t v36 = __chkstk_darwin(v207, v35);
  uint64_t v191 = (uint64_t)&v189 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v36, v38);
  uint64_t v208 = (char *)&v189 - v39;
  uint64_t v206 = type metadata accessor for CRLImageItemCRDTData(0);
  uint64_t v41 = __chkstk_darwin(v206, v40);
  uint64_t v193 = (uint64_t)&v189 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v41, v43);
  uint64_t v215 = (char *)&v189 - v44;
  uint64_t v204 = type metadata accessor for CRLWPShapeItemCRDTData(0);
  uint64_t v46 = __chkstk_darwin(v204, v45);
  uint64_t v199 = (uint64_t)&v189 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v46, v48);
  uint64_t v205 = (char *)&v189 - v49;
  uint64_t v201 = type metadata accessor for CRLFreehandDrawingShapeCRDTData(0);
  uint64_t v51 = __chkstk_darwin(v201, v50);
  uint64_t v190 = (uint64_t)&v189 - ((v52 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v51, v53);
  uint64_t v202 = (char *)&v189 - v54;
  uint64_t v55 = sub_1005057FC(&qword_1016892B0);
  uint64_t v57 = __chkstk_darwin(v55, v56);
  float v224 = (char *)&v189 - ((v58 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v60 = __chkstk_darwin(v57, v59);
  float v223 = (char *)&v189 - v61;
  uint64_t v63 = __chkstk_darwin(v60, v62);
  char v222 = (char *)&v189 - v64;
  uint64_t v66 = __chkstk_darwin(v63, v65);
  uint64_t v220 = (uint64_t)&v189 - v67;
  __chkstk_darwin(v66, v68);
  uint64_t v221 = (char *)&v189 - v69;
  uint64_t v200 = type metadata accessor for CRLFreehandDrawingCRDTData(0);
  uint64_t v71 = __chkstk_darwin(v200, v70);
  uint64_t v189 = (uint64_t)&v189 - ((v72 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v71, v73);
  uint64_t v203 = (char *)&v189 - v74;
  uint64_t v75 = type metadata accessor for CRLContainerItemCRDTData(0);
  uint64_t v77 = __chkstk_darwin(v75, v76);
  uint64_t v198 = (uint64_t)&v189 - ((v78 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v77, v79);
  uint64_t v81 = (char *)&v189 - v80;
  uint64_t v82 = sub_1005057FC((uint64_t *)&unk_101683E10);
  uint64_t v84 = __chkstk_darwin(v82, v83);
  uint64_t v86 = (char *)&v189 - ((v85 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v88 = __chkstk_darwin(v84, v87);
  uint64_t v90 = (char *)&v189 - v89;
  uint64_t v92 = __chkstk_darwin(v88, v91);
  uint64_t v94 = (char *)&v189 - v93;
  uint64_t v96 = __chkstk_darwin(v92, v95);
  NSString v98 = (char *)&v189 - v97;
  uint64_t v100 = __chkstk_darwin(v96, v99);
  uint64_t v102 = __chkstk_darwin(v100, v101);
  __chkstk_darwin(v102, v103);
  uint64_t v106 = __chkstk_darwin((char *)&v189 - v104, v105);
  id v108 = (char *)&v189 - v107;
  uint64_t v110 = __chkstk_darwin(v106, v109);
  uint64_t v112 = __chkstk_darwin(v110, v111);
  uint64_t v117 = (char *)&v189 - v116;
  if (v232)
  {
    switch(v231)
    {
      case 1:
        sub_100510D4C(v233, v234);
        sub_1009F2A40(&qword_10168B230, &qword_1016892B0);
        uint64_t v126 = v222;
        CRDT.init(serializedData:)();
        sub_100510D4C(v229, v230);
        sub_1009F2B60(&qword_101675480, (void (*)(uint64_t))type metadata accessor for CRLWPShapeItemCRDTData);
        unint64_t v127 = v205;
        CRDT.init(serializedData:)();
        id v161 = &qword_1016892B0;
        uint64_t v128 = (uint64_t)v126;
        uint64_t v129 = v220;
        sub_10051B3EC(v128, v220, &qword_1016892B0);
        id v130 = type metadata accessor for CRLWPShapeItemCRDTData;
        uint64_t v131 = (uint64_t)v127;
        uint64_t v132 = v199;
        sub_1009F2AF8(v131, v199, type metadata accessor for CRLWPShapeItemCRDTData);
        type metadata accessor for CRLWPShapeItemData(0);
        goto LABEL_19;
      case 2:
        sub_100510D4C(v233, v234);
        sub_1009F2A40(&qword_10168B230, &qword_1016892B0);
        long long v133 = v223;
        CRDT.init(serializedData:)();
        sub_100510D4C(v229, v230);
        sub_1009F2B60(&qword_1016867B8, (void (*)(uint64_t))type metadata accessor for CRLConnectionLineCRDTData);
        uint64_t v134 = v217;
        CRDT.init(serializedData:)();
        id v161 = &qword_1016892B0;
        uint64_t v135 = (uint64_t)v133;
        uint64_t v129 = v220;
        sub_10051B3EC(v135, v220, &qword_1016892B0);
        id v130 = type metadata accessor for CRLConnectionLineCRDTData;
        uint64_t v136 = (uint64_t)v134;
        uint64_t v132 = v196;
        sub_1009F2AF8(v136, v196, type metadata accessor for CRLConnectionLineCRDTData);
        type metadata accessor for CRLConnectionLineItemData(0);
        goto LABEL_19;
      case 3:
        uint64_t v137 = v115;
        uint64_t v138 = v114;
        sub_100510D4C(v233, v234);
        sub_1009F2A40((unint64_t *)&qword_10168B238, (uint64_t *)&unk_101683E10);
        CRDT.init(serializedData:)();
        sub_100510D4C(v229, v230);
        sub_1009F2B60(&qword_10168B258, (void (*)(uint64_t))type metadata accessor for CRLImageItemCRDTData);
        uint64_t v139 = (uint64_t)v215;
        CRDT.init(serializedData:)();
        sub_100522E9C(v138, v137, (uint64_t *)&unk_101683E10);
        uint64_t v140 = v193;
        sub_1009F2A90(v139, v193, type metadata accessor for CRLImageItemCRDTData);
        type metadata accessor for CRLImageItemData(0);
        uint64_t v141 = swift_allocObject();
        sub_1009F2A90(v140, v141 + qword_10171C7A8, type metadata accessor for CRLImageItemCRDTData);
        id v142 = [self standardUserDefaults];
        unsigned int v143 = [v142 BOOLForKey:@"CRLNewImageItemsHaveGoodEnoughFidelityVersionSetAboveCurrentDefault"];

        uint64_t v144 = v228;
        if (v143)
        {
          uint64_t v145 = sub_1002094A4();
          uint64_t v144 = v145 + 1;
          if (v145 == -1)
          {
            __break(1u);
            JUMPOUT(0x1009F2A14);
          }
        }
        sub_1009F4200(v140, type metadata accessor for CRLImageItemCRDTData);
        sub_10051B3EC(v137, v141 + *(void *)(*(void *)v141 + 632), (uint64_t *)&unk_101683E10);
        uint64_t v124 = sub_10068B398(v225, v144, v226, v227);
        sub_1009F4200(v139, type metadata accessor for CRLImageItemCRDTData);
        uint64_t v146 = v138;
        uint64_t v147 = (uint64_t *)&unk_101683E10;
        goto LABEL_24;
      case 4:
        uint64_t v148 = v113;
        sub_100510D4C(v233, v234);
        sub_1009F2A40((unint64_t *)&qword_10168B238, (uint64_t *)&unk_101683E10);
        CRDT.init(serializedData:)();
        sub_100510D4C(v229, v230);
        sub_1009F2B60(&qword_101673718, (void (*)(uint64_t))type metadata accessor for CRLMovieItemCRDTData);
        uint64_t v149 = (uint64_t)v214;
        CRDT.init(serializedData:)();
        uint64_t v167 = v148;
        sub_10051B3EC((uint64_t)v86, v148, (uint64_t *)&unk_101683E10);
        uint64_t v168 = v195;
        sub_1009F2AF8(v149, v195, type metadata accessor for CRLMovieItemCRDTData);
        type metadata accessor for CRLMovieItemData(0);
        uint64_t v169 = swift_allocObject();
        sub_1009F2AF8(v168, v169 + qword_101719EE8, type metadata accessor for CRLMovieItemCRDTData);
        uint64_t v165 = v169 + *(void *)(*(void *)v169 + 632);
        uint64_t v166 = v167;
        uint64_t v170 = (uint64_t *)&unk_101683E10;
        goto LABEL_22;
      case 5:
        uint64_t v129 = v113;
        sub_100510D4C(v233, v234);
        sub_1009F2A40((unint64_t *)&qword_10168B238, (uint64_t *)&unk_101683E10);
        CRDT.init(serializedData:)();
        sub_100510D4C(v229, v230);
        sub_1009F2B60(&qword_10168B240, (void (*)(uint64_t))type metadata accessor for CRLFileItemCRDTData);
        uint64_t v150 = v212;
        CRDT.init(serializedData:)();
        id v161 = (uint64_t *)&unk_101683E10;
        sub_10051B3EC((uint64_t)v90, v129, (uint64_t *)&unk_101683E10);
        uint64_t v171 = type metadata accessor for CRLFileItemCRDTData;
        uint64_t v172 = (uint64_t)v150;
        uint64_t v173 = v194;
        sub_1009F2AF8(v172, v194, type metadata accessor for CRLFileItemCRDTData);
        type metadata accessor for CRLFileItemData(0);
        uint64_t v174 = swift_allocObject();
        uint64_t v175 = v174;
        v176 = &qword_10171C738;
        goto LABEL_18;
      case 6:
        uint64_t v129 = v113;
        sub_100510D4C(v233, v234);
        sub_1009F2A40((unint64_t *)&qword_10168B238, (uint64_t *)&unk_101683E10);
        CRDT.init(serializedData:)();
        sub_100510D4C(v229, v230);
        sub_1009F2B60(&qword_10168B248, (void (*)(uint64_t))type metadata accessor for CRLURLItemCRDTData);
        float v151 = v210;
        CRDT.init(serializedData:)();
        id v161 = (uint64_t *)&unk_101683E10;
        sub_10051B3EC((uint64_t)v94, v129, (uint64_t *)&unk_101683E10);
        uint64_t v171 = type metadata accessor for CRLURLItemCRDTData;
        uint64_t v177 = (uint64_t)v151;
        uint64_t v173 = v192;
        sub_1009F2AF8(v177, v192, type metadata accessor for CRLURLItemCRDTData);
        type metadata accessor for CRLURLItemData(0);
        uint64_t v174 = swift_allocObject();
        uint64_t v175 = v174;
        v176 = &qword_10171B9D8;
        goto LABEL_18;
      case 7:
        uint64_t v129 = v113;
        sub_100510D4C(v233, v234);
        sub_1009F2A40((unint64_t *)&qword_10168B238, (uint64_t *)&unk_101683E10);
        CRDT.init(serializedData:)();
        sub_100510D4C(v229, v230);
        sub_1009F2B60(&qword_10168B250, (void (*)(uint64_t))type metadata accessor for CRLUSDZItemCRDTData);
        uint64_t v152 = v208;
        CRDT.init(serializedData:)();
        id v161 = (uint64_t *)&unk_101683E10;
        sub_10051B3EC((uint64_t)v98, v129, (uint64_t *)&unk_101683E10);
        uint64_t v171 = type metadata accessor for CRLUSDZItemCRDTData;
        uint64_t v178 = (uint64_t)v152;
        uint64_t v173 = v191;
        sub_1009F2AF8(v178, v191, type metadata accessor for CRLUSDZItemCRDTData);
        type metadata accessor for CRLUSDZItemData(0);
        uint64_t v174 = swift_allocObject();
        uint64_t v175 = v174;
        v176 = &qword_10171CD20;
LABEL_18:
        sub_1009F2AF8(v173, v174 + *v176, v171);
        goto LABEL_20;
      case 8:
        uint64_t v153 = v113;
        uint64_t v154 = v112;
        sub_100510D4C(v233, v234);
        sub_1009F2A40((unint64_t *)&qword_10168B238, (uint64_t *)&unk_101683E10);
        CRDT.init(serializedData:)();
        sub_100510D4C(v229, v230);
        sub_1009F2B60(&qword_10168B260, (void (*)(uint64_t))type metadata accessor for CRLFreehandDrawingCRDTData);
        uint64_t v155 = (uint64_t)v203;
        CRDT.init(serializedData:)();
        uint64_t v179 = (uint64_t *)&unk_101683E10;
        sub_100522E9C(v154, v153, (uint64_t *)&unk_101683E10);
        uint64_t v180 = v189;
        sub_1009F2A90(v155, v189, type metadata accessor for CRLFreehandDrawingCRDTData);
        type metadata accessor for CRLFreehandItemData(0);
        uint64_t v181 = swift_allocObject();
        sub_1009F2A90(v180, v181 + qword_10171CE48, type metadata accessor for CRLFreehandDrawingCRDTData);
        uint64_t v182 = v198;
        sub_1009F2A90(v180, v198, type metadata accessor for CRLContainerItemCRDTData);
        sub_1009F4200(v180, type metadata accessor for CRLFreehandDrawingCRDTData);
        sub_1009F2AF8(v182, v181 + qword_10171BE80, type metadata accessor for CRLContainerItemCRDTData);
        sub_10051B3EC(v153, v181 + *(void *)(*(void *)v181 + 632), (uint64_t *)&unk_101683E10);
        uint64_t v124 = sub_10068B398(v225, v228, v226, v227);
        sub_1009F4200(v155, type metadata accessor for CRLFreehandDrawingCRDTData);
        uint64_t v146 = v154;
        goto LABEL_23;
      case 9:
        sub_100510D4C(v233, v234);
        sub_1009F2A40(&qword_10168B230, &qword_1016892B0);
        uint64_t v156 = v221;
        CRDT.init(serializedData:)();
        sub_100510D4C(v229, v230);
        sub_1009F2B60(&qword_101676A38, (void (*)(uint64_t))type metadata accessor for CRLFreehandDrawingShapeCRDTData);
        uint64_t v157 = v202;
        CRDT.init(serializedData:)();
        id v161 = &qword_1016892B0;
        uint64_t v183 = (uint64_t)v156;
        uint64_t v129 = v220;
        sub_10051B3EC(v183, v220, &qword_1016892B0);
        id v130 = type metadata accessor for CRLFreehandDrawingShapeCRDTData;
        uint64_t v184 = (uint64_t)v157;
        uint64_t v132 = v190;
        sub_1009F2AF8(v184, v190, type metadata accessor for CRLFreehandDrawingShapeCRDTData);
        type metadata accessor for CRLFreehandDrawingShapeItemData(0);
LABEL_19:
        uint64_t v175 = swift_allocObject();
        sub_1009F2AF8(v132, v175 + *(void *)(*(void *)v175 + 752), v130);
        *(void *)(v175 + qword_10169E700) = 0;
LABEL_20:
        uint64_t v165 = v175 + *(void *)(*(void *)v175 + 632);
        uint64_t v166 = v129;
        goto LABEL_21;
      case 10:
        sub_100510D4C(v233, v234);
        sub_1009F2A40(&qword_10168B230, &qword_1016892B0);
        uint64_t v159 = (uint64_t)v224;
        CRDT.init(serializedData:)();
        sub_100510D4C(v229, v230);
        sub_1009F2B60(&qword_1016826A0, (void (*)(uint64_t))type metadata accessor for CRLWPStickyNoteItemCRDTData);
        uint64_t v160 = (uint64_t)v219;
        CRDT.init(serializedData:)();
        uint64_t v179 = &qword_1016892B0;
        uint64_t v185 = v220;
        sub_100522E9C(v159, v220, &qword_1016892B0);
        uint64_t v186 = v197;
        sub_1009F2A90(v160, v197, type metadata accessor for CRLWPStickyNoteItemCRDTData);
        type metadata accessor for CRLWPStickyNoteItemData(0);
        uint64_t v187 = swift_allocObject();
        sub_1009F2A90(v186, v187 + qword_10171AB30, type metadata accessor for CRLWPStickyNoteItemCRDTData);
        uint64_t v188 = v199;
        sub_1009F2A90(v186, v199, type metadata accessor for CRLWPShapeItemCRDTData);
        sub_1009F4200(v186, type metadata accessor for CRLWPStickyNoteItemCRDTData);
        sub_1009F2AF8(v188, v187 + *(void *)(*(void *)v187 + 752), type metadata accessor for CRLWPShapeItemCRDTData);
        *(void *)(v187 + qword_10169E700) = 0;
        sub_10051B3EC(v185, v187 + *(void *)(*(void *)v187 + 632), &qword_1016892B0);
        uint64_t v124 = sub_10068B398(v225, v228, v226, v227);
        sub_1009F4200(v160, type metadata accessor for CRLWPStickyNoteItemCRDTData);
        uint64_t v146 = v159;
LABEL_23:
        uint64_t v147 = v179;
LABEL_24:
        sub_100522F00(v146, v147);
        return v124;
      default:
        uint64_t v125 = v113;
        sub_100510D4C(v233, v234);
        sub_1009F2A40((unint64_t *)&qword_10168B238, (uint64_t *)&unk_101683E10);
        CRDT.init(serializedData:)();
        sub_100510D4C(v229, v230);
        sub_1009F2B60(&qword_10168B268, (void (*)(uint64_t))type metadata accessor for CRLContainerItemCRDTData);
        CRDT.init(serializedData:)();
        id v161 = (uint64_t *)&unk_101683E10;
        sub_10051B3EC((uint64_t)v108, v125, (uint64_t *)&unk_101683E10);
        uint64_t v162 = (uint64_t)v81;
        uint64_t v163 = v198;
        sub_1009F2AF8(v162, v198, type metadata accessor for CRLContainerItemCRDTData);
        type metadata accessor for CRLContainerItemData(0);
        uint64_t v164 = swift_allocObject();
        sub_1009F2AF8(v163, v164 + qword_10171BE80, type metadata accessor for CRLContainerItemCRDTData);
        uint64_t v165 = v164 + *(void *)(*(void *)v164 + 632);
        uint64_t v166 = v125;
LABEL_21:
        uint64_t v170 = v161;
LABEL_22:
        sub_10051B3EC(v166, v165, v170);
        uint64_t v124 = sub_10068B398(v225, v228, v226, v227);
        break;
    }
  }
  else
  {
    uint64_t v118 = v113;
    sub_100510D4C(v233, v234);
    sub_1009F2A40((unint64_t *)&qword_10168B238, (uint64_t *)&unk_101683E10);
    CRDT.init(serializedData:)();
    sub_10051B3EC((uint64_t)v117, v118, (uint64_t *)&unk_101683E10);
    type metadata accessor for CRLUnknownItemData();
    uint64_t v119 = swift_allocObject();
    uint64_t v120 = v119 + qword_101693FA8;
    unint64_t v121 = v230;
    *(void *)uint64_t v120 = v231;
    *(unsigned char *)(v120 + 8) = 0;
    uint64_t v122 = (void *)(v119 + qword_101693FB0);
    uint64_t v123 = v229;
    void *v122 = v229;
    v122[1] = v121;
    sub_10051B3EC(v118, v119 + *(void *)(*(void *)v119 + 632), (uint64_t *)&unk_101683E10);
    uint64_t v124 = sub_10068B398(v225, v228, v226, v227);
    sub_100510D4C(v123, v121);
  }
  return v124;
}

uint64_t sub_1009F2A40(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100522D34(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1009F2A90(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1009F2AF8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1009F2B60(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1009F2BA8()
{
  int v1 = *(unsigned __int8 *)(v0 + 32);
  if (v1 != 255) {
    sub_10051ACA0(*(void *)(v0 + 16), *(void *)(v0 + 24), v1 & 1);
  }
  if (*(void *)(v0 + 176))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 264, 7);
}

unint64_t sub_1009F2C28()
{
  unint64_t result = qword_10168B270;
  if (!qword_10168B270)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168B270);
  }
  return result;
}

unint64_t sub_1009F2C80()
{
  unint64_t result = qword_10168B278;
  if (!qword_10168B278)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168B278);
  }
  return result;
}

unint64_t sub_1009F2CD4()
{
  unint64_t result = qword_10168B280;
  if (!qword_10168B280)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168B280);
  }
  return result;
}

uint64_t sub_1009F2D2C()
{
  if (v0[14])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v0[20])
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    if (v0[27])
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
  }
  if (v0[41])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 400, 7);
}

unint64_t sub_1009F2E04()
{
  unint64_t result = qword_10168B288;
  if (!qword_10168B288)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168B288);
  }
  return result;
}

unint64_t sub_1009F2E58()
{
  unint64_t result = qword_10168B290;
  if (!qword_10168B290)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168B290);
  }
  return result;
}

uint64_t sub_1009F2EAC()
{
  if (v0[14])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v0[20])
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    if (v0[27])
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
  }
  if (v0[43])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (v0[55])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (v0[67])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (v0[74])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 616, 7);
}

unint64_t sub_1009F2FEC()
{
  unint64_t result = qword_10168B298;
  if (!qword_10168B298)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168B298);
  }
  return result;
}

uint64_t sub_1009F3040()
{
  if (*(void *)(v0 + 112))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*(void *)(v0 + 160))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    if (*(void *)(v0 + 216))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
  }
  if (*(void *)(v0 + 344))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (*(void *)(v0 + 440))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (*(void *)(v0 + 536))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (*(void *)(v0 + 592))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  int v1 = *(unsigned __int8 *)(v0 + 632);
  if (v1 != 255) {
    sub_10051ACA0(*(void *)(v0 + 616), *(void *)(v0 + 624), v1 & 1);
  }
  if (*(void *)(v0 + 776))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 896, 7);
}

unint64_t sub_1009F31DC()
{
  unint64_t result = qword_10168B2A0;
  if (!qword_10168B2A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168B2A0);
  }
  return result;
}

id sub_1009F3230(uint64_t a1, void *a2)
{
  uint64_t v4 = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 408))(a1);
  if (v5)
  {
    switch(v4)
    {
      case 1:
        type metadata accessor for CRLWPShapeItemData(0);
        uint64_t v13 = swift_dynamicCastClassUnconditional();
        uint64_t v14 = (objc_class *)type metadata accessor for CRLWPShapeItem();
        goto LABEL_44;
      case 2:
        if (*(_UNKNOWN ****)a1 == &off_1016863C8) {
          uint64_t v15 = a1;
        }
        else {
          uint64_t v15 = 0;
        }
        uint64_t v16 = (char *)objc_allocWithZone((Class)type metadata accessor for CRLConnectionLineItem());
        *(void *)&v16[OBJC_IVAR____TtC8Freeform13CRLStyledItem__stroke] = 0;
        *(void *)&v16[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_store] = a2;
        *(void *)&v16[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData] = v15;
        v44.super_class = (Class)type metadata accessor for CRLBoardItemBase(0);
        id v17 = a2;
        swift_retain();
        id result = [super init:v38.receiver, v38.super_class, v39.receiver, v39.super_class, v40.receiver, v40.super_class, v41.receiver, v41.super_class, v42.receiver, v42.super_class, v43.receiver, v43.super_class, v16, v44.super_class];
        break;
      case 3:
        if (*(_UNKNOWN ****)a1 == &off_10169CA50) {
          uint64_t v18 = a1;
        }
        else {
          uint64_t v18 = 0;
        }
        uint64_t v19 = objc_allocWithZone((Class)type metadata accessor for CRLImageItem());
        id v20 = a2;
        swift_retain();
        id result = sub_100F4530C((uint64_t)v20, v18, v19);
        break;
      case 4:
        if (*(_UNKNOWN ****)a1 == &off_1016731C8) {
          uint64_t v21 = a1;
        }
        else {
          uint64_t v21 = 0;
        }
        id v22 = a2;
        swift_retain();
        id result = sub_100BF4DB4((uint64_t)v22, v21);
        break;
      case 5:
        if (*(_UNKNOWN ****)a1 == &off_10169BCB8) {
          uint64_t v23 = a1;
        }
        else {
          uint64_t v23 = 0;
        }
        uint64_t v24 = (char *)objc_allocWithZone((Class)type metadata accessor for CRLFileItem());
        *(void *)&v24[OBJC_IVAR____TtC8Freeform11CRLFileItem__metadataPayload] = 0;
        *(void *)&v24[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_store] = a2;
        *(void *)&v24[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData] = v23;
        v42.super_class = (Class)type metadata accessor for CRLBoardItemBase(0);
        id v25 = a2;
        swift_retain();
        id result = [super init:v38.receiver, v38.super_class, v39.receiver, v39.super_class, v40.receiver, v40.super_class, v41.receiver, v41.super_class, v24, v42.super_class, v43.receiver, v43.super_class, v44.receiver, v44.super_class];
        break;
      case 6:
        if (*(_UNKNOWN ****)a1 == &off_101694560) {
          uint64_t v26 = a1;
        }
        else {
          uint64_t v26 = 0;
        }
        uint64_t v27 = (char *)objc_allocWithZone((Class)type metadata accessor for CRLURLItem());
        *(void *)&v27[OBJC_IVAR____TtC8Freeform10CRLURLItem__metadataPayload] = 0;
        *(void *)&v27[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_store] = a2;
        *(void *)&v27[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData] = v26;
        v43.super_class = (Class)type metadata accessor for CRLBoardItemBase(0);
        id v28 = a2;
        swift_retain();
        id result = [super init:v38.receiver super_class:v38.super_class v39.receiver super_class:v39.super_class v40.receiver super_class:v40.super_class v41.receiver super_class:v41.super_class v42.receiver super_class:v42.super_class v27 super_class:v43.super_class v44.receiver super_class:v44.super_class];
        break;
      case 7:
        if (*(_UNKNOWN ****)a1 == &off_1016A38A8) {
          uint64_t v29 = a1;
        }
        else {
          uint64_t v29 = 0;
        }
        uint64_t v30 = (char *)objc_allocWithZone((Class)type metadata accessor for CRLUSDZItem());
        *(void *)&v30[OBJC_IVAR____TtC8Freeform11CRLUSDZItem__posterAssetPayload] = 0;
        *(void *)&v30[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_store] = a2;
        *(void *)&v30[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData] = v29;
        v41.super_class = (Class)type metadata accessor for CRLBoardItemBase(0);
        id v31 = a2;
        swift_retain();
        id result = [super init:v38.receiver, v38.super_class, v39.receiver, v39.super_class, v40.receiver, v40.super_class, v30, v41.super_class, v42.receiver, v42.super_class, v43.receiver, v43.super_class, v44.receiver, v44.super_class];
        break;
      case 8:
        type metadata accessor for CRLFreehandItemData(0);
        uint64_t v32 = swift_dynamicCastClassUnconditional();
        objc_allocWithZone((Class)type metadata accessor for CRLFreehandDrawingItem());
        id v33 = a2;
        swift_retain();
        id result = sub_1009DF518((uint64_t)v33, v32);
        break;
      case 9:
        if (*(_UNKNOWN ****)a1 == &off_101676660) {
          uint64_t v34 = a1;
        }
        else {
          uint64_t v34 = 0;
        }
        uint64_t v35 = (char *)objc_allocWithZone((Class)type metadata accessor for CRLFreehandDrawingShapeItem());
        *(void *)&v35[OBJC_IVAR____TtC8Freeform27CRLFreehandDrawingShapeItem_cachedPencilKitStrokes] = 0;
        *(void *)&v35[OBJC_IVAR____TtC8Freeform27CRLFreehandDrawingShapeItem_cachedPencilKitStrokesInParentSpace] = 0;
        *(void *)&v35[OBJC_IVAR____TtC8Freeform13CRLStyledItem__stroke] = 0;
        *(void *)&v35[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_store] = a2;
        *(void *)&v35[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData] = v34;
        v39.super_class = (Class)type metadata accessor for CRLBoardItemBase(0);
        id v36 = a2;
        swift_retain();
        id result = [super init:v38.receiver super_class:v38.super_class v35 super_class:v39.super_class v40.receiver super_class:v40.super_class v41.receiver super_class:v41.super_class v42.receiver super_class:v42.super_class v43.receiver super_class:v43.super_class v44.receiver super_class:v44.super_class];
        break;
      case 10:
        type metadata accessor for CRLWPStickyNoteItemData(0);
        uint64_t v13 = swift_dynamicCastClassUnconditional();
        uint64_t v14 = (objc_class *)type metadata accessor for CRLWPStickyNoteItem();
LABEL_44:
        objc_allocWithZone(v14);
        id v37 = a2;
        swift_retain();
        id result = sub_100989358(v37, v13);
        break;
      default:
        type metadata accessor for CRLContainerItemData(0);
        uint64_t v10 = swift_dynamicCastClassUnconditional();
        uint64_t v11 = (char *)objc_allocWithZone((Class)type metadata accessor for CRLGroupItem());
        *(void *)&v11[OBJC_IVAR____TtC8Freeform16CRLContainerItem_items] = &_swiftEmptyDictionarySingleton;
        *(_DWORD *)&v11[OBJC_IVAR____TtC8Freeform16CRLContainerItem_timeStamp] = 0;
        *(void *)&v11[OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedOrderedItems] = 0;
        *(void *)&v11[OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedOrderedItemUUIDs] = 0;
        *(void *)&v11[OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedUnorderedItemUUIDs] = 0;
        *(void *)&v11[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_store] = a2;
        *(void *)&v11[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData] = v10;
        v40.super_class = (Class)type metadata accessor for CRLBoardItemBase(0);
        id v12 = a2;
        swift_retain();
        id result = [super init:v38.receiver super_class:v38.super_class v39.receiver super_class:v39.super_class v11 super_class:v40.super_class v41.receiver super_class:v41.super_class v42.receiver super_class:v42.super_class v43.receiver super_class:v43.super_class v44.receiver super_class:v44.super_class];
        break;
    }
  }
  else
  {
    if (*(_UNKNOWN ****)a1 == &off_101694008) {
      uint64_t v6 = a1;
    }
    else {
      uint64_t v6 = 0;
    }
    uint64_t v7 = (char *)objc_allocWithZone((Class)type metadata accessor for CRLUnknownItem());
    *(void *)&v7[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_store] = a2;
    *(void *)&v7[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData] = v6;
    v38.super_class = (Class)type metadata accessor for CRLBoardItemBase(0);
    id v8 = a2;
    swift_retain();
    return [super init:v7 super_class:v38.super_class receiver:v39.receiver super_class:v39.super_class receiver:v40.receiver super_class:v40.super_class receiver:v41.receiver super_class:v41.super_class receiver:v42.receiver super_class:v42.super_class receiver:v43.receiver super_class:v43.super_class receiver:v44.receiver super_class:v44.super_class];
  }
  return result;
}

void *sub_1009F3920(uint64_t *a1)
{
  uint64_t v3 = sub_1008E0E9C(a1[4]);
  if ((v4 & 0x100) != 0)
  {
    sub_1005F7CE8();
    swift_allocError();
    char v21 = 1;
LABEL_10:
    *id v20 = v21;
    goto LABEL_11;
  }
  int v1 = (void *)a1[5];
  if (!v1[2] || (uint64_t v5 = v3, v6 = v4, v7 = sub_100956650(1u), (v8 & 1) == 0))
  {
    sub_1005F7CE8();
    swift_allocError();
    char v21 = 5;
    goto LABEL_10;
  }
  uint64_t v9 = (uint64_t *)(v1[7] + 16 * v7);
  uint64_t v10 = *v9;
  unint64_t v11 = v9[1];
  uint64_t v12 = v1[2];
  sub_100510D4C(*v9, v11);
  if (!v12 || (unint64_t v13 = sub_100956650(2u), (v14 & 1) == 0))
  {
    sub_1005F7CE8();
    swift_allocError();
    unsigned char *v23 = 6;
    swift_willThrow();
    sub_100510084(v10, v11);
    return v1;
  }
  uint64_t v15 = a1[1];
  uint64_t v26 = *a1;
  uint64_t v24 = a1[3];
  uint64_t v25 = a1[2];
  uint64_t v16 = (uint64_t *)(v1[7] + 16 * v13);
  uint64_t v17 = *v16;
  unint64_t v18 = v16[1];
  sub_100510D4C(*v16, v18);
  int v1 = sub_1009F10B0(v5, v6 & 1, v26, v15, v25, v24, v10, v11, v17, v18);
  sub_100510084(v17, v18);
  sub_100510084(v10, v11);
  if (!v1)
  {
    sub_1005F7CE8();
    swift_allocError();
    *uint64_t v19 = 0;
LABEL_11:
    swift_willThrow();
  }
  return v1;
}

uint64_t sub_1009F3AFC(uint64_t *a1, void *a2)
{
  uint64_t v4 = sub_1008E0E9C(a1[4]);
  if ((v5 & 0x100) == 0 || !(v4 | v5))
  {
    uint64_t v14 = 1;
LABEL_8:
    sub_1005F7CE8();
    swift_allocError();
    *uint64_t v15 = v14;
    swift_willThrow();
    return v14;
  }
  uint64_t v6 = a1[5];
  if (!*(void *)(v6 + 16) || (unint64_t v7 = sub_100956650(0), (v8 & 1) == 0))
  {
    uint64_t v14 = 10;
    goto LABEL_8;
  }
  uint64_t v9 = (uint64_t *)(*(void *)(v6 + 56) + 16 * v7);
  uint64_t v10 = *v9;
  unint64_t v11 = v9[1];
  uint64_t v12 = *a1;
  uint64_t v13 = a1[1];
  sub_100510D4C(*v9, v11);
  uint64_t v14 = sub_100786A84(v10, v11, v12, v13, a2);
  sub_100510084(v10, v11);
  return v14;
}

char *sub_1009F3BF8(uint64_t a1, uint64_t a2, void *a3)
{
  id v56 = a3;
  uint64_t v57 = a2;
  uint64_t v5 = type metadata accessor for CRLContainerItemCRDTData(0);
  __chkstk_darwin(v5, v6);
  char v8 = (char *)&v49 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9, v10);
  uint64_t v12 = (char *)&v49 - v11;
  __chkstk_darwin(v13, v14);
  uint64_t v16 = (char *)&v49 - v15;
  uint64_t v17 = sub_1005057FC((uint64_t *)&unk_101683E10);
  __chkstk_darwin(v17 - 8, v18);
  id v20 = (char *)&v49 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21, v22);
  uint64_t v24 = (char *)&v49 - v23;
  __chkstk_darwin(v25, v26);
  id v28 = (char *)&v49 - v27;
  uint64_t v29 = sub_1008E0E9C(*(void *)(a1 + 32));
  if ((v30 & 0x100) != 0 && !(v29 | v30))
  {
    uint64_t v55 = v16;
    uint64_t v16 = (char *)a1;
    sub_10101A3C4();
    if (!v3)
    {
      uint64_t v33 = *(void *)(a1 + 40);
      if (*(void *)(v33 + 16)
        && (v54 = *(void *)(a1 + 40), uint64_t v16 = (char *)v33, v34 = sub_100956650(2u), (v35 & 1) != 0))
      {
        id v36 = (uint64_t *)(*(void *)(v54 + 56) + 16 * v34);
        uint64_t v37 = *v36;
        unint64_t v53 = v36[1];
        sub_100510D4C(v37, v53);
        unint64_t v53 = sub_1009F2B60(&qword_10168B268, (void (*)(uint64_t))type metadata accessor for CRLContainerItemCRDTData);
        CRDT.init(serializedData:)();
        sub_100522E9C((uint64_t)v28, (uint64_t)v24, (uint64_t *)&unk_101683E10);
        sub_1009F2A90((uint64_t)v55, (uint64_t)v12, type metadata accessor for CRLContainerItemCRDTData);
        uint64_t v52 = 0x1000000000000;
        uint64_t v51 = 0x2000400000000;
        uint64_t v49 = type metadata accessor for CRLContainerItemData(0);
        uint64_t v38 = swift_allocObject();
        sub_1009F2AF8((uint64_t)v12, v38 + qword_10171BE80, type metadata accessor for CRLContainerItemCRDTData);
        sub_10051B3EC((uint64_t)v24, v38 + *(void *)(*(void *)v38 + 632), (uint64_t *)&unk_101683E10);
        uint64_t v50 = sub_10068B398(v52, v51, v52, 4);
        sub_10101A3E4();
        if (*(void *)(v54 + 16))
        {
          unint64_t v41 = sub_100956650(4u);
          if (v42)
          {
            sub_100510D4C(*(void *)(*(void *)(v54 + 56) + 16 * v41), *(void *)(*(void *)(v54 + 56) + 16 * v41 + 8));
            CRDT.init(serializedData:)();
            sub_100522E9C((uint64_t)v20, (uint64_t)v24, (uint64_t *)&unk_101683E10);
            sub_1009F2A90((uint64_t)v8, (uint64_t)v12, type metadata accessor for CRLContainerItemCRDTData);
            uint64_t v43 = swift_allocObject();
            sub_1009F2AF8((uint64_t)v12, v43 + qword_10171BE80, type metadata accessor for CRLContainerItemCRDTData);
            sub_10051B3EC((uint64_t)v24, v43 + *(void *)(*(void *)v43 + 632), (uint64_t *)&unk_101683E10);
            objc_super v44 = sub_10068B398(v52, v51, v52, 4);
            id v45 = objc_allocWithZone((Class)type metadata accessor for CRLBoard(0));
            id v46 = v56;
            uint64_t v47 = v57;
            swift_retain();
            uint64_t v16 = sub_100D1ABB4(v46, v47, (uint64_t)v50, (uint64_t)v44, 0, 0);

            swift_release();
            swift_release();
            swift_release();
            sub_1009F4200((uint64_t)v8, type metadata accessor for CRLContainerItemCRDTData);
            sub_100522F00((uint64_t)v20, (uint64_t *)&unk_101683E10);
            sub_1009F4200((uint64_t)v55, type metadata accessor for CRLContainerItemCRDTData);
            sub_100522F00((uint64_t)v28, (uint64_t *)&unk_101683E10);
            return v16;
          }
        }
        sub_1005F7CE8();
        swift_allocError();
        *uint64_t v48 = 8;
        swift_willThrow();
        swift_release();
        uint64_t v16 = (char *)&unk_101683E10;
        sub_100522F00((uint64_t)v20, (uint64_t *)&unk_101683E10);
        sub_1009F4200((uint64_t)v55, type metadata accessor for CRLContainerItemCRDTData);
        uint64_t v40 = (uint64_t)v28;
      }
      else
      {
        sub_1005F7CE8();
        swift_allocError();
        *objc_super v39 = 6;
        swift_willThrow();
        uint64_t v40 = (uint64_t)v28;
      }
      sub_100522F00(v40, (uint64_t *)&unk_101683E10);
    }
  }
  else
  {
    sub_1005F7CE8();
    swift_allocError();
    *id v31 = 1;
    swift_willThrow();
  }
  return v16;
}

uint64_t sub_1009F4200(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1009F4260(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t v6 = sub_1005057FC(&qword_101689680);
  __chkstk_darwin(v6 - 8, v7);
  uint64_t v62 = (char *)&v57 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for Mirror.DisplayStyle();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v63 = v9;
  uint64_t v64 = v10;
  __chkstk_darwin(v9, v11);
  uint64_t v13 = (char *)&v57 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14, v15);
  uint64_t v17 = (char *)&v57 - v16;
  uint64_t v18 = type metadata accessor for Mirror();
  uint64_t v61 = *(void *)(v18 - 8);
  __chkstk_darwin(v18, v19);
  uint64_t v21 = (char *)&v57 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v66._uint64_t countAndFlagsBits = (uint64_t)&type metadata for CRLBoardTitleValidator.Error;
  sub_1005057FC(&qword_10168B3F8);
  uint64_t v22 = String.init<A>(reflecting:)();
  uint64_t v24 = v23;
  sub_10099A500();
  if (!swift_dynamicCastMetatype())
  {
    v59._uint64_t countAndFlagsBits = v22;
    v59._object = v24;
    uint64_t v60 = v18;
    uint64_t v68 = &type metadata for CRLBoardTitleValidator.Error;
    v66._uint64_t countAndFlagsBits = a1;
    v66._object = (void *)a2;
    v67[0] = a3;
    sub_100651F78(a1, a2, a3);
    Mirror.init(reflecting:)();
    uint64_t v25 = (uint64_t)v62;
    Mirror.displayStyle.getter();
    uint64_t v26 = v63;
    uint64_t v27 = v64;
    id v28 = v21;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v64 + 48))(v25, 1, v63) == 1)
    {
      (*(void (**)(char *, uint64_t))(v61 + 8))(v21, v60);
      sub_100522F00(v25, &qword_101689680);
      return v59._countAndFlagsBits;
    }
    uint64_t v58 = a1;
    (*(void (**)(char *, uint64_t, uint64_t))(v27 + 32))(v17, v25, v26);
    unint64_t v41 = v13;
    (*(void (**)(char *, void, uint64_t))(v27 + 104))(v13, enum case for Mirror.DisplayStyle.enum(_:), v26);
    char v42 = static Mirror.DisplayStyle.== infix(_:_:)();
    id v45 = *(void (**)(char *, uint64_t))(v27 + 8);
    uint64_t v44 = v27 + 8;
    uint64_t v43 = v45;
    v45(v41, v26);
    if ((v42 & 1) == 0)
    {
      v66._uint64_t countAndFlagsBits = 0;
      v66._object = (void *)0xE000000000000000;
      String.append(_:)(v59);
      swift_bridgeObjectRelease();
      v49._uint64_t countAndFlagsBits = 40;
      v49._object = (void *)0xE100000000000000;
      String.append(_:)(v49);
      _print_unlocked<A, B>(_:_:)();
      v50._uint64_t countAndFlagsBits = 41;
      v50._object = (void *)0xE100000000000000;
      String.append(_:)(v50);
      uint64_t countAndFlagsBits = v66._countAndFlagsBits;
      v43(v17, v26);
      (*(void (**)(char *, uint64_t))(v61 + 8))(v28, v60);
      return countAndFlagsBits;
    }
    uint64_t v62 = v17;
    uint64_t v64 = v44;
    Mirror.children.getter();
    sub_100999714(&v66);
    swift_release();
    if (v69)
    {
      object = v66._object;
      uint64_t v47 = v66._countAndFlagsBits;
      _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v67);
      if (object)
      {
        uint64_t v48 = v43;
LABEL_16:
        uint64_t v52 = v60;
        uint64_t v53 = v61;
        uint64_t v54 = v62;
        Swift::String v66 = v59;
        v55._uint64_t countAndFlagsBits = 46;
        v55._object = (void *)0xE100000000000000;
        String.append(_:)(v55);
        v56._uint64_t countAndFlagsBits = v47;
        v56._object = object;
        String.append(_:)(v56);
        swift_bridgeObjectRelease();
        uint64_t countAndFlagsBits = v66._countAndFlagsBits;
        v48(v54, v63);
        (*(void (**)(char *, uint64_t))(v53 + 8))(v28, v52);
        return countAndFlagsBits;
      }
    }
    else
    {
      sub_100522F00((uint64_t)&v66, &qword_101689688);
    }
    uint64_t v48 = v43;
    v66._uint64_t countAndFlagsBits = v58;
    v66._object = (void *)a2;
    v67[0] = a3;
    sub_100651F78(v58, a2, a3);
    uint64_t v47 = String.init<A>(describing:)();
    object = v51;
    goto LABEL_16;
  }
  swift_bridgeObjectRelease();
  v66._uint64_t countAndFlagsBits = a1;
  v66._object = (void *)a2;
  v67[0] = a3;
  sub_100651F78(a1, a2, a3);
  sub_100651FA8();
  if (_getErrorEmbeddedNSError<A>(_:)())
  {
    sub_100651F90(a1, a2, a3);
  }
  else
  {
    swift_allocError();
    unsigned __int8 v30 = v67[0];
    *(Swift::String *)uint64_t v31 = v66;
    *(unsigned char *)(v31 + 16) = v30;
  }
  uint64_t v32 = (void *)_convertErrorToNSError(_:)();
  swift_errorRelease();
  v66._uint64_t countAndFlagsBits = 0;
  v66._object = (void *)0xE000000000000000;
  _StringGuts.grow(_:)(25);
  swift_bridgeObjectRelease();
  v66._uint64_t countAndFlagsBits = 0x20726F727245534ELL;
  v66._object = (void *)0xEF3D6E69616D6F44;
  id v33 = [v32 domain];
  uint64_t v34 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  id v36 = v35;

  v37._uint64_t countAndFlagsBits = v34;
  v37._object = v36;
  String.append(_:)(v37);
  swift_bridgeObjectRelease();
  v38._uint64_t countAndFlagsBits = 0x3D65646F4320;
  v38._object = (void *)0xE600000000000000;
  String.append(_:)(v38);
  id v65 = [v32 code];
  v39._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v39);

  swift_bridgeObjectRelease();
  return v66._countAndFlagsBits;
}

uint64_t sub_1009F4864()
{
  swift_getObjectType();
  sub_1005057FC(&qword_10168B3D8);
  String.init<A>(reflecting:)();
  swift_bridgeObjectRelease();
  sub_10099A500();
  sub_1009F6B34(&qword_10168B3E0, (void (*)(uint64_t))sub_10099A500);
  id v1 = v0;
  if (_getErrorEmbeddedNSError<A>(_:)())
  {
  }
  else
  {
    swift_allocError();
    *objc_super v2 = v0;
  }
  uint64_t v3 = (void *)_convertErrorToNSError(_:)();
  swift_errorRelease();
  _StringGuts.grow(_:)(25);
  swift_bridgeObjectRelease();
  id v4 = [v3 domain];
  uint64_t v5 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v7 = v6;

  v8._uint64_t countAndFlagsBits = v5;
  v8._object = v7;
  String.append(_:)(v8);
  swift_bridgeObjectRelease();
  v9._uint64_t countAndFlagsBits = 0x3D65646F4320;
  v9._object = (void *)0xE600000000000000;
  String.append(_:)(v9);
  [v3 code];
  v10._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v10);

  swift_bridgeObjectRelease();
  return 0x20726F727245534ELL;
}

uint64_t sub_1009F4A44(void *a1)
{
  uint64_t v2 = sub_1005057FC(&qword_101689680);
  __chkstk_darwin(v2 - 8, v3);
  uint64_t v60 = (char *)&v52 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for Mirror.DisplayStyle();
  uint64_t v59 = *(void *)(v5 - 8);
  __chkstk_darwin(v5, v6);
  Swift::String v8 = (char *)&v52 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9, v10);
  uint64_t v12 = (char *)&v52 - v11;
  uint64_t v13 = type metadata accessor for Mirror();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13, v15);
  uint64_t v17 = (char *)&v52 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for CKError(0);
  uint64_t v19 = v18;
  *(void *)&long long v62 = v18;
  sub_1005057FC(&qword_10168B3C8);
  uint64_t v20 = String.init<A>(reflecting:)();
  uint64_t v22 = v21;
  sub_10099A500();
  if (!swift_dynamicCastMetatype())
  {
    uint64_t v56 = v20;
    uint64_t v57 = v14;
    uint64_t v58 = v13;
    v63[1] = v19;
    *(void *)&long long v62 = a1;
    id v24 = a1;
    Mirror.init(reflecting:)();
    uint64_t v25 = (uint64_t)v60;
    Mirror.displayStyle.getter();
    uint64_t v26 = v59;
    uint64_t v27 = v17;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v59 + 48))(v25, 1, v5) == 1)
    {
      (*(void (**)(char *, uint64_t))(v57 + 8))(v17, v58);
      sub_100522F00(v25, &qword_101689680);
      return v56;
    }
    id v55 = v24;
    Swift::String v39 = v12;
    (*(void (**)(char *, uint64_t, uint64_t))(v26 + 32))(v12, v25, v5);
    (*(void (**)(char *, void, uint64_t))(v26 + 104))(v8, enum case for Mirror.DisplayStyle.enum(_:), v5);
    char v40 = static Mirror.DisplayStyle.== infix(_:_:)();
    unint64_t v41 = *(void (**)(char *, uint64_t))(v26 + 8);
    v41(v8, v5);
    if ((v40 & 1) == 0)
    {
      *(void *)&long long v62 = 0;
      *((void *)&v62 + 1) = 0xE000000000000000;
      v44._uint64_t countAndFlagsBits = v56;
      v44._object = v22;
      String.append(_:)(v44);
      swift_bridgeObjectRelease();
      v45._uint64_t countAndFlagsBits = 40;
      v45._object = (void *)0xE100000000000000;
      String.append(_:)(v45);
      _print_unlocked<A, B>(_:_:)();
      v46._uint64_t countAndFlagsBits = 41;
      v46._object = (void *)0xE100000000000000;
      String.append(_:)(v46);
      uint64_t v28 = v62;
      v41(v39, v5);
      (*(void (**)(char *, uint64_t))(v57 + 8))(v27, v58);
      return v28;
    }
    Mirror.children.getter();
    sub_100999714(&v62);
    swift_release();
    uint64_t v53 = v27;
    uint64_t v54 = v5;
    if (v63[3])
    {
      uint64_t v43 = (void *)*((void *)&v62 + 1);
      uint64_t v42 = v62;
      _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v63);
      if (v43)
      {
LABEL_16:
        uint64_t v48 = v57;
        uint64_t v49 = v58;
        *(void *)&long long v62 = v56;
        *((void *)&v62 + 1) = v22;
        v50._uint64_t countAndFlagsBits = 46;
        v50._object = (void *)0xE100000000000000;
        String.append(_:)(v50);
        v51._uint64_t countAndFlagsBits = v42;
        v51._object = v43;
        String.append(_:)(v51);
        swift_bridgeObjectRelease();
        uint64_t v28 = v62;
        v41(v39, v54);
        (*(void (**)(char *, uint64_t))(v48 + 8))(v53, v49);
        return v28;
      }
    }
    else
    {
      sub_100522F00((uint64_t)&v62, &qword_101689688);
    }
    *(void *)&long long v62 = v55;
    uint64_t v42 = String.init<A>(describing:)();
    uint64_t v43 = v47;
    goto LABEL_16;
  }
  swift_bridgeObjectRelease();
  *(void *)&long long v62 = a1;
  sub_1009F6B34(&qword_101670DB8, type metadata accessor for CKError);
  id v23 = a1;
  if (_getErrorEmbeddedNSError<A>(_:)())
  {
  }
  else
  {
    swift_allocError();
    *uint64_t v29 = v62;
  }
  unsigned __int8 v30 = (void *)_convertErrorToNSError(_:)();
  swift_errorRelease();
  *(void *)&long long v62 = 0;
  *((void *)&v62 + 1) = 0xE000000000000000;
  _StringGuts.grow(_:)(25);
  swift_bridgeObjectRelease();
  *(void *)&long long v62 = 0x20726F727245534ELL;
  *((void *)&v62 + 1) = 0xEF3D6E69616D6F44;
  id v31 = [v30 domain];
  uint64_t v32 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v34 = v33;

  v35._uint64_t countAndFlagsBits = v32;
  v35._object = v34;
  String.append(_:)(v35);
  swift_bridgeObjectRelease();
  v36._uint64_t countAndFlagsBits = 0x3D65646F4320;
  v36._object = (void *)0xE600000000000000;
  String.append(_:)(v36);
  id v61 = [v30 code];
  v37._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v37);

  swift_bridgeObjectRelease();
  return v62;
}

uint64_t sub_1009F5024(int a1)
{
  int v56 = a1;
  uint64_t v1 = sub_1005057FC(&qword_101689680);
  __chkstk_darwin(v1 - 8, v2);
  uint64_t v4 = (char *)&v50 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for Mirror.DisplayStyle();
  uint64_t v55 = *(void *)(v5 - 8);
  __chkstk_darwin(v5, v6);
  Swift::String v8 = (char *)&v50 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9, v10);
  uint64_t v12 = (char *)&v50 - v11;
  uint64_t v13 = type metadata accessor for Mirror();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13, v15);
  uint64_t v17 = (char *)&v50 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&long long v58 = &type metadata for CRLSendACopyBoardDataHandlerError;
  sub_1005057FC(&qword_10168B3E8);
  uint64_t v18 = String.init<A>(reflecting:)();
  uint64_t v20 = v19;
  sub_10099A500();
  if (!swift_dynamicCastMetatype())
  {
    uint64_t v53 = v18;
    uint64_t v54 = v14;
    uint64_t v52 = v13;
    v59[1] = &type metadata for CRLSendACopyBoardDataHandlerError;
    char v21 = v56;
    LOBYTE(v58) = v56;
    Mirror.init(reflecting:)();
    Mirror.displayStyle.getter();
    uint64_t v22 = v55;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v55 + 48))(v4, 1, v5) == 1)
    {
      (*(void (**)(char *, uint64_t))(v54 + 8))(v17, v52);
      sub_100522F00((uint64_t)v4, &qword_101689680);
      return v53;
    }
    uint64_t v34 = v5;
    Swift::String v51 = v17;
    Swift::String v35 = v12;
    (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v12, v4, v5);
    (*(void (**)(char *, void, uint64_t))(v22 + 104))(v8, enum case for Mirror.DisplayStyle.enum(_:), v5);
    char v36 = static Mirror.DisplayStyle.== infix(_:_:)();
    Swift::String v37 = *(void (**)(char *, uint64_t))(v22 + 8);
    v37(v8, v5);
    if ((v36 & 1) == 0)
    {
      *(void *)&long long v58 = 0;
      *((void *)&v58 + 1) = 0xE000000000000000;
      v43._uint64_t countAndFlagsBits = v53;
      v43._object = v20;
      String.append(_:)(v43);
      swift_bridgeObjectRelease();
      v44._uint64_t countAndFlagsBits = 40;
      v44._object = (void *)0xE100000000000000;
      String.append(_:)(v44);
      _print_unlocked<A, B>(_:_:)();
      v45._uint64_t countAndFlagsBits = 41;
      v45._object = (void *)0xE100000000000000;
      String.append(_:)(v45);
      uint64_t v23 = v58;
      v37(v35, v5);
      (*(void (**)(char *, uint64_t))(v54 + 8))(v51, v52);
      return v23;
    }
    Mirror.children.getter();
    sub_100999714(&v58);
    swift_release();
    if (v59[3])
    {
      Swift::String v38 = (void *)*((void *)&v58 + 1);
      uint64_t v39 = v58;
      _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v59);
      uint64_t v40 = v53;
      if (v38)
      {
        unint64_t v41 = v37;
        uint64_t v42 = v34;
LABEL_16:
        uint64_t v47 = v52;
        *(void *)&long long v58 = v40;
        *((void *)&v58 + 1) = v20;
        v48._uint64_t countAndFlagsBits = 46;
        v48._object = (void *)0xE100000000000000;
        String.append(_:)(v48);
        v49._uint64_t countAndFlagsBits = v39;
        v49._object = v38;
        String.append(_:)(v49);
        swift_bridgeObjectRelease();
        uint64_t v23 = v58;
        v41(v35, v42);
        (*(void (**)(char *, uint64_t))(v54 + 8))(v51, v47);
        return v23;
      }
    }
    else
    {
      sub_100522F00((uint64_t)&v58, &qword_101689688);
      uint64_t v40 = v53;
    }
    unint64_t v41 = v37;
    uint64_t v42 = v34;
    LOBYTE(v58) = v21;
    uint64_t v39 = String.init<A>(describing:)();
    Swift::String v38 = v46;
    goto LABEL_16;
  }
  swift_bridgeObjectRelease();
  LOBYTE(v58) = v56;
  sub_1009F6B7C();
  if (!_getErrorEmbeddedNSError<A>(_:)())
  {
    swift_allocError();
    *id v24 = v58;
  }
  uint64_t v25 = (void *)_convertErrorToNSError(_:)();
  swift_errorRelease();
  *(void *)&long long v58 = 0;
  *((void *)&v58 + 1) = 0xE000000000000000;
  _StringGuts.grow(_:)(25);
  swift_bridgeObjectRelease();
  *(void *)&long long v58 = 0x20726F727245534ELL;
  *((void *)&v58 + 1) = 0xEF3D6E69616D6F44;
  id v26 = [v25 domain];
  uint64_t v27 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v29 = v28;

  v30._uint64_t countAndFlagsBits = v27;
  v30._object = v29;
  String.append(_:)(v30);
  swift_bridgeObjectRelease();
  v31._uint64_t countAndFlagsBits = 0x3D65646F4320;
  v31._object = (void *)0xE600000000000000;
  String.append(_:)(v31);
  id v57 = [v25 code];
  v32._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v32);

  swift_bridgeObjectRelease();
  return v58;
}

id sub_1009F55D8(unsigned __int8 a1)
{
  uint64_t v1 = a1 + 100;
  sub_1005057FC(&qword_10168B3D0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117D8C0;
  *(void *)(inited + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(inited + 40) = v3;
  id v4 = [self mainBundle];
  NSString v5 = String._bridgeToObjectiveC()();
  NSString v6 = String._bridgeToObjectiveC()();
  id v7 = [v4 localizedStringForKey:v5 value:v6 table:0];

  uint64_t v8 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v10 = v9;

  uint64_t v11 = sub_1005057FC(&qword_101674580);
  *(void *)(inited + 72) = v11;
  *(void *)(inited + 48) = v8;
  *(void *)(inited + 56) = v10;
  *(void *)(inited + 80) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(inited + 88) = v12;
  uint64_t v13 = sub_1009F6790();
  *(void *)(inited + 120) = v11;
  *(void *)(inited + 96) = v13;
  *(void *)(inited + 104) = v14;
  sub_100A39A60(inited);
  id v15 = objc_allocWithZone((Class)NSError);
  NSString v16 = String._bridgeToObjectiveC()();
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v18 = [v15 initWithDomain:v16 code:v1 userInfo:isa];

  return v18;
}

uint64_t sub_1009F57D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[90] = v13;
  v8[89] = v12;
  v8[88] = a8;
  v8[87] = a7;
  v8[86] = a6;
  v8[85] = a5;
  v8[84] = a4;
  uint64_t v9 = type metadata accessor for URL();
  v8[91] = v9;
  v8[92] = *(void *)(v9 - 8);
  v8[93] = swift_task_alloc();
  type metadata accessor for CRLBoardIdentifier(0);
  v8[94] = swift_task_alloc();
  return _swift_task_switch(sub_1009F58DC, 0, 0);
}

uint64_t sub_1009F58DC()
{
  uint64_t v1 = (void *)v0[84];
  uint64_t v3 = v1[4];
  uint64_t v2 = v1[5];
  uint64_t v4 = v1[6];
  uint64_t v5 = v1[7];
  NSString v6 = (void *)swift_task_alloc();
  v0[95] = v6;
  *NSString v6 = v0;
  v6[1] = sub_1009F5998;
  uint64_t v7 = v0[94];
  uint64_t v8 = v0[85];
  return sub_100DE4670(v7, v8, v3, v2, v4, v5);
}

uint64_t sub_1009F5998()
{
  *(void *)(*(void *)v1 + 768) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1009F5B9C;
  }
  else {
    uint64_t v2 = sub_1009F5AAC;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1009F5AAC()
{
  uint64_t v1 = v0[94];
  uint64_t v2 = (char *)v0[93];
  uint64_t v3 = v0[92];
  uint64_t v4 = v0[91];
  uint64_t v5 = (void (*)(void))v0[88];
  sub_1009F6218(v0[86], v0[87], v2);
  URL._bridgeToObjectiveC()(v6);
  uint64_t v8 = v7;
  v5();

  (*(void (**)(char *, uint64_t))(v3 + 8))(v2, v4);
  sub_100510028(v1);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v9 = (uint64_t (*)(void))v0[1];
  return v9();
}

uint64_t sub_1009F5B9C()
{
  v0[82] = v0[96];
  swift_errorRetain();
  sub_1005057FC(&qword_101672BD0);
  type metadata accessor for CKError(0);
  if (swift_dynamicCast())
  {
    swift_errorRelease();
    uint64_t v1 = (void *)v0[81];
    v0[75] = v1;
    sub_1009F6B34((unint64_t *)&qword_101670DF8, type metadata accessor for CKError);
    id v2 = v1;
    _BridgedStoredNSError.code.getter();
    if (v0[74] == 4)
    {
    }
    else
    {
      v0[77] = v2;
      _BridgedStoredNSError.code.getter();

      if (v0[76] != 3)
      {
        if (qword_10166FA90 != -1) {
          swift_once();
        }
        id v52 = (id)v0[90];
        uint64_t v54 = (void (*)(void, id))v0[88];
        swift_beginAccess();
        id v33 = (void *)static OS_os_log.crlSendACopy;
        sub_1005057FC((uint64_t *)&unk_101672B40);
        uint64_t inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = xmmword_10117DF40;
        id v35 = v33;
        uint64_t v36 = UUID.uuidString.getter();
        uint64_t v38 = v37;
        *(void *)(inited + 56) = &type metadata for String;
        unint64_t v39 = sub_100528BE4();
        *(void *)(inited + 64) = v39;
        *(void *)(inited + 32) = v36;
        *(void *)(inited + 40) = v38;
        id v40 = v2;
        uint64_t v41 = sub_1009F4A44(v40);
        uint64_t v43 = v42;

        *(void *)(inited + 96) = &type metadata for String;
        *(void *)(inited + 104) = v39;
        *(void *)(inited + 72) = v41;
        *(void *)(inited + 80) = v43;
        v0[80] = v40;
        id v28 = v40;
        uint64_t v44 = String.init<A>(reflecting:)();
        *(void *)(inited + 136) = &type metadata for String;
        *(void *)(inited + 144) = v39;
        *(void *)(inited + 112) = v44;
        *(void *)(inited + 120) = v45;
        uint64_t v46 = static os_log_type_t.error.getter();
        sub_100BAC898((uint64_t)v35, (uint64_t)&_mh_execute_header, v46, (uint64_t)"Failed to create Send A Copy url with URL data for board (UUID: %{public}@) due to server error %{public}@ <%@>", 111, 2, inited);
        swift_setDeallocating();
        sub_1005057FC(&qword_101672B50);
        swift_arrayDestroy();

        unsigned __int8 v32 = 1;
        goto LABEL_14;
      }
    }
    if (qword_10166FA90 != -1) {
      swift_once();
    }
    id v52 = (id)v0[90];
    uint64_t v54 = (void (*)(void, id))v0[88];
    swift_beginAccess();
    uint64_t v17 = (void *)static OS_os_log.crlSendACopy;
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t v18 = swift_initStackObject();
    *(_OWORD *)(v18 + 16) = xmmword_10117DF40;
    id v19 = v17;
    uint64_t v20 = UUID.uuidString.getter();
    uint64_t v22 = v21;
    *(void *)(v18 + 56) = &type metadata for String;
    unint64_t v23 = sub_100528BE4();
    *(void *)(v18 + 64) = v23;
    *(void *)(v18 + 32) = v20;
    *(void *)(v18 + 40) = v22;
    id v24 = v2;
    uint64_t v25 = sub_1009F4A44(v24);
    uint64_t v27 = v26;

    *(void *)(v18 + 96) = &type metadata for String;
    *(void *)(v18 + 104) = v23;
    *(void *)(v18 + 72) = v25;
    *(void *)(v18 + 80) = v27;
    v0[83] = v24;
    id v28 = v24;
    uint64_t v29 = String.init<A>(reflecting:)();
    *(void *)(v18 + 136) = &type metadata for String;
    *(void *)(v18 + 144) = v23;
    *(void *)(v18 + 112) = v29;
    *(void *)(v18 + 120) = v30;
    uint64_t v31 = static os_log_type_t.error.getter();
    sub_100BAC898((uint64_t)v19, (uint64_t)&_mh_execute_header, v31, (uint64_t)"Failed to create Send A Copy url with URL data for board (UUID: %{public}@) due to network  error %{public}@ <%@>", 113, 2, v18);
    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();

    unsigned __int8 v32 = 0;
LABEL_14:
    id v47 = sub_1009F55D8(v32);
    [v52 cancel];
    id v48 = v47;
    v54(0, v47);

    goto LABEL_15;
  }
  swift_errorRelease();
  if (qword_10166FA90 != -1) {
    swift_once();
  }
  id v51 = (id)v0[90];
  uint64_t v53 = (void (*)(void, id))v0[88];
  swift_beginAccess();
  uint64_t v3 = (void *)static OS_os_log.crlSendACopy;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t v4 = swift_initStackObject();
  *(_OWORD *)(v4 + 16) = xmmword_10117DF40;
  id v5 = v3;
  uint64_t v6 = UUID.uuidString.getter();
  uint64_t v8 = v7;
  *(void *)(v4 + 56) = &type metadata for String;
  unint64_t v9 = sub_100528BE4();
  *(void *)(v4 + 64) = v9;
  *(void *)(v4 + 32) = v6;
  *(void *)(v4 + 40) = v8;
  swift_getErrorValue();
  uint64_t v10 = Error.publicDescription.getter(v0[66], v0[67]);
  *(void *)(v4 + 96) = &type metadata for String;
  *(void *)(v4 + 104) = v9;
  *(void *)(v4 + 72) = v10;
  *(void *)(v4 + 80) = v11;
  swift_getErrorValue();
  uint64_t v12 = Error.fullDescription.getter(v0[72]);
  *(void *)(v4 + 136) = &type metadata for String;
  *(void *)(v4 + 144) = v9;
  *(void *)(v4 + 112) = v12;
  *(void *)(v4 + 120) = v13;
  uint64_t v14 = static os_log_type_t.error.getter();
  sub_100BAC898((uint64_t)v5, (uint64_t)&_mh_execute_header, v14, (uint64_t)"Failed to create Send A Copy url with URL data for board (UUID: %{public}@) with error %{public}@ <%@>", 102, 2, v4);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  id v15 = sub_1009F55D8(2u);
  [v51 cancel];
  id v16 = v15;
  v53(0, v15);

LABEL_15:
  swift_errorRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  Swift::String v49 = (uint64_t (*)(void))v0[1];
  return v49();
}

uint64_t sub_1009F6218@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, char *a3@<X8>)
{
  v39[2] = a2;
  v39[3] = a1;
  uint64_t v42 = a3;
  uint64_t v3 = type metadata accessor for URLComponents();
  uint64_t v44 = *(void *)(v3 - 8);
  uint64_t v45 = v3;
  __chkstk_darwin(v3, v4);
  uint64_t v6 = (char *)v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1005057FC(&qword_10167BF28);
  __chkstk_darwin(v7 - 8, v8);
  uint64_t v10 = (char *)v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = type metadata accessor for URL.DirectoryHint();
  uint64_t v11 = *(void *)(v43 - 8);
  __chkstk_darwin(v43, v12);
  uint64_t v14 = (char *)v39 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1005057FC(&qword_101672E90);
  __chkstk_darwin(v15 - 8, v16);
  uint64_t v18 = (char *)v39 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19, v20);
  uint64_t v22 = (char *)v39 - v21;
  uint64_t v23 = type metadata accessor for URL();
  uint64_t v24 = *(void *)(v23 - 8);
  __chkstk_darwin(v23, v25);
  uint64_t v27 = (char *)v39 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  URL.init(string:)();
  v39[0] = *(void *)(v24 + 48);
  v39[1] = v24 + 48;
  uint64_t result = ((uint64_t (*)(char *, uint64_t, uint64_t))v39[0])(v22, 1, v23);
  if (result != 1)
  {
    uint64_t v40 = v24;
    uint64_t v41 = v23;
    uint64_t v29 = v23;
    uint64_t v30 = *(void (**)(char *, char *, uint64_t))(v24 + 32);
    v30(v27, v22, v29);
    uint64_t v46 = UUID.uuidString.getter();
    uint64_t v47 = v31;
    uint64_t v32 = v43;
    (*(void (**)(char *, void, uint64_t))(v11 + 104))(v14, enum case for URL.DirectoryHint.inferFromPath(_:), v43);
    sub_10052E310();
    URL.append<A>(component:directoryHint:)();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v32);
    swift_bridgeObjectRelease();
    URLComponents.init(url:resolvingAgainstBaseURL:)();
    uint64_t v33 = v44;
    uint64_t v34 = v45;
    id v35 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v44 + 48);
    if (!v35(v10, 1, v45))
    {
      sub_100F736D4();
      uint64_t v43 = (uint64_t)v30;
      URLComponents.fragment.setter();
      uint64_t v30 = (void (*)(char *, char *, uint64_t))v43;
    }
    if (v35(v10, 1, v34))
    {
      uint64_t v36 = v41;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v40 + 56))(v18, 1, 1, v41);
      uint64_t v37 = v42;
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v33 + 16))(v6, v10, v34);
      URLComponents.url.getter();
      (*(void (**)(char *, uint64_t))(v33 + 8))(v6, v34);
      uint64_t v36 = v41;
      int v38 = ((uint64_t (*)(char *, uint64_t, uint64_t))v39[0])(v18, 1, v41);
      uint64_t v37 = v42;
      if (v38 != 1)
      {
        (*(void (**)(char *, uint64_t))(v40 + 8))(v27, v36);
        v30(v37, v18, v36);
        return sub_100522F00((uint64_t)v10, &qword_10167BF28);
      }
    }
    v30(v37, v27, v36);
    sub_100522F00((uint64_t)v18, &qword_101672E90);
    return sub_100522F00((uint64_t)v10, &qword_10167BF28);
  }
  __break(1u);
  return result;
}

uint64_t sub_1009F66F8()
{
  uint64_t v1 = *(void **)(v0 + 24);
  id v2 = *(void **)(v0 + 32);
  uint64_t v3 = *(void **)(v0 + 56);
  swift_release();

  swift_unknownObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for CRLSendACopyHelper()
{
  return self;
}

uint64_t sub_1009F6790()
{
  id v0 = [self mainBundle];
  NSString v1 = String._bridgeToObjectiveC()();
  NSString v2 = String._bridgeToObjectiveC()();
  id v3 = [v0 localizedStringForKey:v1 value:v2 table:0];

  uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  return v4;
}

uint64_t sub_1009F6904()
{
  id v0 = [self mainBundle];
  NSString v1 = String._bridgeToObjectiveC()();
  NSString v2 = String._bridgeToObjectiveC()();
  id v3 = [v0 localizedStringForKey:v1 value:v2 table:0];

  uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  return v4;
}

void *sub_1009F6A3C(char *a1)
{
  v1[2] = a1;
  NSString v2 = *(void **)&a1[OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_store];
  uint64_t v3 = qword_10166EE68;
  uint64_t v4 = a1;
  id v5 = v2;
  if (v3 != -1) {
    swift_once();
  }
  uint64_t v6 = (void *)qword_10171A488;
  type metadata accessor for CRLPublicCloudRecordProvider();
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = v5;
  id v8 = v5;
  id v9 = v6;
  id v10 = [v9 publicCloudDatabase];
  swift_retain();

  v1[3] = v8;
  v1[4] = v8;
  v1[5] = v7;
  v1[6] = &off_101519ED8;
  v1[7] = v10;
  v1[8] = v7;
  return v1;
}

uint64_t sub_1009F6B34(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1009F6B7C()
{
  unint64_t result = qword_10168B3F0;
  if (!qword_10168B3F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168B3F0);
  }
  return result;
}

id sub_1009F6CCC(double a1)
{
  uint64_t v3 = self;
  uint64_t v4 = (double *)(v1 + OBJC_IVAR____TtC8Freeform29CRLCollaboratorAvatarRenderer_size);
  id v5 = [v3 scopeWithPointSize:0 scale:0 rightToLeft:*((double *)(v1 + OBJC_IVAR____TtC8Freeform29CRLCollaboratorAvatarRenderer_size)) style:*((double *)(v1 + OBJC_IVAR____TtC8Freeform29CRLCollaboratorAvatarRenderer_size + 8))];
  uint64_t v6 = self;
  id v7 = [v6 defaultSettings];
  id v8 = [objc_allocWithZone((Class)CNAvatarImageRenderer) initWithSettings:v7];
  id v9 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform29CRLCollaboratorAvatarRenderer_contact);
  if (v9)
  {
    sub_1005057FC((uint64_t *)&unk_101676C10);
    uint64_t v10 = swift_allocObject();
    *(_OWORD *)(v10 + 16) = xmmword_101177E70;
    *(void *)(v10 + 32) = v9;
    specialized Array._endMutation()();
    sub_1009F7160();
    id v11 = v9;
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    id v13 = [v8 avatarImageForContacts:isa scope:v5];

    id v14 = [objc_allocWithZone((Class)CRLImage) initWithUIImage:v13];
    swift_unknownObjectRelease();
  }
  else
  {
    id v15 = [v6 defaultSettings];
    id v11 = [objc_allocWithZone((Class)CNAvatarImageRenderer) initWithSettings:v15];
    id v13 = objc_msgSend(objc_msgSend(v11, "placeholderImageProvider"), "imageForSize:scale:style:", 0, *v4, v4[1], a1);
    swift_unknownObjectRelease();
    id v14 = [objc_allocWithZone((Class)CRLImage) initWithUIImage:v13];
    swift_unknownObjectRelease();

    id v8 = v7;
    id v7 = v15;
  }

  return v14;
}

id sub_1009F6F80(double a1)
{
  id v3 = [self defaultSettings];
  id v4 = [objc_allocWithZone((Class)CNAvatarImageRenderer) initWithSettings:v3];
  id v5 = [v4 placeholderImageProvider];
  id v6 = [v5 imageForSize:0 scale:*(double *)(v1 + OBJC_IVAR____TtC8Freeform29CRLCollaboratorAvatarRenderer_size) style:*(double *)(v1 + OBJC_IVAR____TtC8Freeform29CRLCollaboratorAvatarRenderer_size + 8)];
  swift_unknownObjectRelease();
  id v7 = [objc_allocWithZone((Class)CRLImage) initWithUIImage:v6];

  return v7;
}

id sub_1009F70F8()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLCollaboratorAvatarRenderer();
  return [super dealloc];
}

uint64_t type metadata accessor for CRLCollaboratorAvatarRenderer()
{
  return self;
}

unint64_t sub_1009F7160()
{
  unint64_t result = qword_10167C580;
  if (!qword_10167C580)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_10167C580);
  }
  return result;
}

id sub_1009F7250(uint64_t a1)
{
  return sub_1009F757C(a1, type metadata accessor for CRLCommandSetMovieValue);
}

uint64_t type metadata accessor for CRLCommandSetMovieValue()
{
  return self;
}

id sub_1009F72D8(uint64_t a1, float a2)
{
  return sub_1009F7658(a1, &OBJC_IVAR____TtC8Freeform24CRLCommandSetMovieVolume_id, &OBJC_IVAR____TtC8Freeform24CRLCommandSetMovieVolume_volume, a2);
}

void sub_1009F7320(void *a1, uint64_t a2, unsigned __int8 a3)
{
  Class isa = UUID._bridgeToObjectiveC()().super.isa;
  id v7 = [a1 getBoardItemForUUID:isa];

  if (!v7) {
    goto LABEL_7;
  }
  type metadata accessor for CRLMovieItem();
  uint64_t v8 = swift_dynamicCastClass();
  if (!v8)
  {

LABEL_7:
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"commit(with:transaction:undoable:)", 34, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandSetMovieValue.swift", 95, 2, 61, (uint64_t)"Unable to retrieve movie item", 29, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_100586FD4((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Unable to retrieve movie item");
    sub_1005871AC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"commit(with:transaction:undoable:)", 34, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandSetMovieValue.swift", 95, 2, 61);
    SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v12, v13);
    _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
    return;
  }
  uint64_t v9 = v8;
  id v10 = v7;
  sub_10103405C(v9, (uint64_t)&off_101518040);

  if (v3)
  {
  }
  else
  {
    sub_100BEA9A0();
    id v11 = v10;
    sub_101023724(v9, (uint64_t)&off_101518040, a3);
  }
}

uint64_t sub_1009F7554()
{
  return sub_1009F8300(&OBJC_IVAR____TtC8Freeform24CRLCommandSetMovieVolume_id);
}

id sub_1009F7560()
{
  return sub_1009F757C(0, (uint64_t (*)(void))type metadata accessor for CRLCommandSetMovieVolume);
}

id sub_1009F757C(uint64_t a1, uint64_t (*a2)(void))
{
  v4.receiver = v2;
  v4.super_class = (Class)a2();
  return [super dealloc];
}

uint64_t sub_1009F75C0()
{
  return type metadata accessor for CRLCommandSetMovieVolume(0);
}

uint64_t type metadata accessor for CRLCommandSetMovieVolume(uint64_t a1)
{
  return sub_100512D5C(a1, (uint64_t *)&unk_10168B488);
}

uint64_t sub_1009F75E8()
{
  return sub_1009F842C();
}

id sub_1009F7644(uint64_t a1, float a2)
{
  return sub_1009F7658(a1, &OBJC_IVAR____TtC8Freeform30CRLCommandSetMovieCornerRadius_id, &OBJC_IVAR____TtC8Freeform30CRLCommandSetMovieCornerRadius_cornerRadius, a2);
}

id sub_1009F7658(uint64_t a1, void *a2, void *a3, float a4)
{
  uint64_t v9 = (char *)objc_allocWithZone(v4);
  id v10 = &v9[*a2];
  uint64_t v11 = type metadata accessor for UUID();
  uint64_t v12 = *(void *)(v11 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v10, a1, v11);
  *(float *)&v9[*a3] = a4;
  v15.receiver = v9;
  v15.super_class = v4;
  [super init];
  (*(void (**)(uint64_t, uint64_t))(v12 + 8))(a1, v11);
  return v13;
}

id sub_1009F777C(char *a1, float a2, uint64_t a3, uint64_t a4, void *a5, void *a6, uint64_t (*a7)(void))
{
  uint64_t v12 = type metadata accessor for UUID();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12, v14);
  uint64_t v16 = (char *)&v20 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  static UUID._unconditionallyBridgeFromObjectiveC(_:)();
  (*(void (**)(char *, char *, uint64_t))(v13 + 16))(&a1[*a5], v16, v12);
  *(float *)&a1[*a6] = a2;
  uint64_t v17 = (objc_class *)a7(0);
  v20.receiver = a1;
  v20.super_class = v17;
  id v18 = [super init];
  (*(void (**)(char *, uint64_t))(v13 + 8))(v16, v12);
  return v18;
}

id sub_1009F78D4(void *a1, float a2, uint64_t a3, char *a4, SEL *a5)
{
  uint64_t v9 = type metadata accessor for UUID();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9, v11);
  uint64_t v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = *(void (**)(uint64_t))(**(void **)&a4[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData] + 256);
  uint64_t v15 = a4;
  uint64_t v16 = swift_retain();
  v14(v16);
  swift_release();
  Class isa = UUID._bridgeToObjectiveC()().super.isa;
  (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
  *(float *)&double v18 = a2;
  id v19 = [a1 *a5:isa v18];

  return v19;
}

void sub_1009F7A54(void *a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t v5 = v3;
  Class isa = UUID._bridgeToObjectiveC()().super.isa;
  id v9 = [a1 getBoardItemForUUID:isa];

  if (!v9) {
    goto LABEL_7;
  }
  type metadata accessor for CRLMovieItem();
  uint64_t v10 = swift_dynamicCastClass();
  if (!v10)
  {

LABEL_7:
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"commit(with:transaction:undoable:)", 34, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandSetMovieValue.swift", 95, 2, 87, (uint64_t)"Unable to retrieve movie item", 29, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_100586FD4((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Unable to retrieve movie item");
    sub_1005871AC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"commit(with:transaction:undoable:)", 34, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandSetMovieValue.swift", 95, 2, 87);
    SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v14, v15);
    _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
    return;
  }
  uint64_t v11 = v10;
  id v12 = v9;
  sub_10103405C(v11, (uint64_t)&off_101518040);

  if (v4)
  {
  }
  else
  {
    sub_100BEAD30(*(float *)(v5 + OBJC_IVAR____TtC8Freeform30CRLCommandSetMovieCornerRadius_cornerRadius));
    id v13 = v12;
    sub_101023724(v11, (uint64_t)&off_101518040, a3);
  }
}

uint64_t sub_1009F7C80()
{
  return sub_1009F8300(&OBJC_IVAR____TtC8Freeform30CRLCommandSetMovieCornerRadius_id);
}

id sub_1009F7C8C()
{
  return sub_1009F757C(0, (uint64_t (*)(void))type metadata accessor for CRLCommandSetMovieCornerRadius);
}

uint64_t sub_1009F7CB4()
{
  return type metadata accessor for CRLCommandSetMovieCornerRadius(0);
}

uint64_t type metadata accessor for CRLCommandSetMovieCornerRadius(uint64_t a1)
{
  return sub_100512D5C(a1, (uint64_t *)&unk_10168B4C0);
}

id sub_1009F7D28(uint64_t a1, char a2)
{
  uint64_t v5 = objc_allocWithZone(v2);
  id v6 = &v5[OBJC_IVAR____TtC8Freeform25CRLCommandSetMovieLooping_id];
  uint64_t v7 = type metadata accessor for UUID();
  uint64_t v8 = *(void *)(v7 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v6, a1, v7);
  v5[OBJC_IVAR____TtC8Freeform25CRLCommandSetMovieLooping_isLooping] = a2;
  v11.receiver = v5;
  v11.super_class = v2;
  [super init];
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(a1, v7);
  return v9;
}

void sub_1009F80C8(void *a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t v5 = v3;
  Class isa = UUID._bridgeToObjectiveC()().super.isa;
  id v9 = [a1 getBoardItemForUUID:isa];

  if (!v9) {
    goto LABEL_7;
  }
  type metadata accessor for CRLMovieItem();
  uint64_t v10 = swift_dynamicCastClass();
  if (!v10)
  {

LABEL_7:
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"commit(with:transaction:undoable:)", 34, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandSetMovieValue.swift", 95, 2, 109, (uint64_t)"Unable to retrieve movie item", 29, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_100586FD4((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Unable to retrieve movie item");
    sub_1005871AC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"commit(with:transaction:undoable:)", 34, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandSetMovieValue.swift", 95, 2, 109);
    SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v14, v15);
    _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
    return;
  }
  uint64_t v11 = v10;
  id v12 = v9;
  sub_10103405C(v11, (uint64_t)&off_101518040);

  if (v4)
  {
  }
  else
  {
    sub_100BE9DE4(*(unsigned char *)(v5 + OBJC_IVAR____TtC8Freeform25CRLCommandSetMovieLooping_isLooping));
    id v13 = v12;
    sub_101023724(v11, (uint64_t)&off_101518040, a3);
  }
}

uint64_t sub_1009F82F4()
{
  return sub_1009F8300(&OBJC_IVAR____TtC8Freeform25CRLCommandSetMovieLooping_id);
}

uint64_t sub_1009F8300(void *a1)
{
  uint64_t v2 = v1 + *a1;
  uint64_t v3 = type metadata accessor for UUID();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);

  return v4(v2, v3);
}

id sub_1009F8368()
{
  return sub_1009F757C(0, (uint64_t (*)(void))type metadata accessor for CRLCommandSetMovieLooping);
}

uint64_t sub_1009F8390(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3 = a1 + *a3;
  uint64_t v4 = type metadata accessor for UUID();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);

  return v5(v3, v4);
}

uint64_t sub_1009F83F8()
{
  return type metadata accessor for CRLCommandSetMovieLooping(0);
}

uint64_t type metadata accessor for CRLCommandSetMovieLooping(uint64_t a1)
{
  return sub_100512D5C(a1, (uint64_t *)&unk_10168B4F8);
}

uint64_t sub_1009F8420()
{
  return sub_1009F842C();
}

uint64_t sub_1009F842C()
{
  uint64_t result = type metadata accessor for UUID();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

id sub_1009F84C0(char *a1, uint64_t a2, void *a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v7 = *(void *)(v6 - 8);
  *(void *)&double v9 = __chkstk_darwin(v6, v8).n128_u64[0];
  uint64_t v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((unint64_t)(a2 - 40) >= 4)
  {
    if (a2 == 44)
    {
      if ((objc_msgSend(a3, "respondsToSelector:", "floatValue", v9) & 1) == 0)
      {
        sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"movieSetValueCommand(movie:property:boxedValue:)", 48, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandSetMovieValue.swift", 95, 2, 30, (uint64_t)"An invalid value was passed in to CRLCommandSetMovieValue for property \"volume.\"", 80, 2u, (uint64_t)_swiftEmptyArrayStorage);
        uint64_t v12 = 30;
        goto LABEL_3;
      }
      [a3 floatValue];
      int v16 = v24;
      id v17 = objc_allocWithZone((Class)type metadata accessor for CRLCommandSetMovieVolume(0));
      uint64_t v25 = *(void (**)(uint64_t))(**(void **)&a1[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData]
                                           + 256);
      id v19 = a1;
      uint64_t v26 = swift_retain();
      v25(v26);
      swift_release();
      v21.super.Class isa = UUID._bridgeToObjectiveC()().super.isa;
      (*(void (**)(char *, uint64_t))(v7 + 8))(v11, v6);
      uint64_t v23 = "initWithId:volume:";
    }
    else
    {
      if (a2 != 45)
      {
        sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"movieSetValueCommand(movie:property:boxedValue:)", 48, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandSetMovieValue.swift", 95, 2, 40, (uint64_t)"Unhandled movie property.", 25, 2u, (uint64_t)_swiftEmptyArrayStorage);
        uint64_t v12 = 40;
        goto LABEL_3;
      }
      if ((objc_msgSend(a3, "respondsToSelector:", "floatValue", v9) & 1) == 0)
      {
        sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"movieSetValueCommand(movie:property:boxedValue:)", 48, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandSetMovieValue.swift", 95, 2, 37, (uint64_t)"An invalid value was passed in to CRLCommandSetMovieValue for property \"cornerRadius.\"", 86, 2u, (uint64_t)_swiftEmptyArrayStorage);
        uint64_t v12 = 37;
        goto LABEL_3;
      }
      [a3 floatValue];
      int v16 = v15;
      id v17 = objc_allocWithZone((Class)type metadata accessor for CRLCommandSetMovieCornerRadius(0));
      double v18 = *(void (**)(uint64_t))(**(void **)&a1[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData]
                                           + 256);
      id v19 = a1;
      uint64_t v20 = swift_retain();
      v18(v20);
      swift_release();
      v21.super.Class isa = UUID._bridgeToObjectiveC()().super.isa;
      (*(void (**)(char *, uint64_t))(v7 + 8))(v11, v6);
      uint64_t v23 = "initWithId:cornerRadius:";
    }
    LODWORD(v22) = v16;
    id v13 = [v17 v23:v21.super.isa v22];

    return v13;
  }
  sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"movieSetValueCommand(movie:property:boxedValue:)", 48, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandSetMovieValue.swift", 95, 2, 24, (uint64_t)"We need to set the poster time and the poster image together so they stay in sync. Also the poster image is a board item asset so it is async so we'll have to wait until we have both and change them together, use CRLCommandSetMoviePosterTime", 241, 2u, (uint64_t)_swiftEmptyArrayStorage);
  uint64_t v12 = 24;
LABEL_3:
  sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"movieSetValueCommand(movie:property:boxedValue:)", 48, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandSetMovieValue.swift", 95, 2, v12);
  return 0;
}

void sub_1009F89C8(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  sub_10103405C(a1, (uint64_t)&off_10152A280);
  if (!v4)
  {
    uint64_t v8 = *(void *)(v3 + OBJC_IVAR____TtC8Freeform24CRLCommandDuplicateBoard_boardToDuplicate);
    double v9 = (objc_class *)type metadata accessor for CRLUUIDRemapHelper();
    uint64_t v10 = objc_allocWithZone(v9);
    *(void *)&v10[OBJC_IVAR____TtC8Freeform18CRLUUIDRemapHelper_objectUUIDMap] = _swiftEmptyDictionarySingleton;
    *(void *)&v10[OBJC_IVAR____TtC8Freeform18CRLUUIDRemapHelper_assetUUIDMap] = _swiftEmptyDictionarySingleton;
    v10[OBJC_IVAR____TtC8Freeform18CRLUUIDRemapHelper_shouldResetObjectUUIDs] = 1;
    v12.receiver = v10;
    v12.super_class = v9;
    [super init];
    sub_100D052A0(v8, a2, (uint64_t)v11);

    sub_101023724(a1, (uint64_t)&off_10152A280, a3);
  }
}

void sub_1009F8B00()
{
}

id sub_1009F8B10()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLCommandDuplicateBoard();
  return [super dealloc];
}

uint64_t type metadata accessor for CRLCommandDuplicateBoard()
{
  return self;
}

uint64_t type metadata accessor for CRLFileReadWriteUserOptionsViewController()
{
  uint64_t result = qword_10168B538;
  if (!qword_10168B538) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1009F8BC4()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1009F8C04@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1005057FC(&qword_10168B588);
  __chkstk_darwin(v3 - 8, v4);
  uint64_t v6 = (char *)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1005057FC(&qword_10168B590);
  uint64_t v8 = v7 - 8;
  __chkstk_darwin(v7, v9);
  id v11 = (char *)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1005057FC(&qword_10168B598);
  uint64_t v13 = v12 - 8;
  __chkstk_darwin(v12, v14);
  int v16 = (char *)&v39 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v6 = static HorizontalAlignment.leading.getter();
  *((void *)v6 + 1) = 0x4030000000000000;
  v6[16] = 0;
  uint64_t v17 = sub_1005057FC(&qword_10168B5A0);
  sub_1009F8E50(v1, (uint64_t *)&v6[*(int *)(v17 + 44)]);
  char v18 = static Edge.Set.horizontal.getter();
  EdgeInsets.init(_all:)();
  uint64_t v20 = v19;
  uint64_t v22 = v21;
  uint64_t v24 = v23;
  uint64_t v26 = v25;
  sub_100522E9C((uint64_t)v6, (uint64_t)v11, &qword_10168B588);
  uint64_t v27 = &v11[*(int *)(v8 + 44)];
  *uint64_t v27 = v18;
  *((void *)v27 + 1) = v20;
  *((void *)v27 + 2) = v22;
  *((void *)v27 + 3) = v24;
  *((void *)v27 + 4) = v26;
  v27[40] = 0;
  sub_100522F00((uint64_t)v6, &qword_10168B588);
  char v28 = static Edge.Set.vertical.getter();
  EdgeInsets.init(_all:)();
  uint64_t v30 = v29;
  uint64_t v32 = v31;
  uint64_t v34 = v33;
  uint64_t v36 = v35;
  sub_100522E9C((uint64_t)v11, (uint64_t)v16, &qword_10168B590);
  uint64_t v37 = &v16[*(int *)(v13 + 44)];
  char *v37 = v28;
  *((void *)v37 + 1) = v30;
  *((void *)v37 + 2) = v32;
  *((void *)v37 + 3) = v34;
  *((void *)v37 + 4) = v36;
  v37[40] = 0;
  sub_100522F00((uint64_t)v11, &qword_10168B590);
  sub_100522E9C((uint64_t)v16, a1, &qword_10168B598);
  *(_WORD *)(a1 + *(int *)(sub_1005057FC(&qword_10168B5A8) + 36)) = 257;
  return sub_100522F00((uint64_t)v16, &qword_10168B598);
}

uint64_t sub_1009F8E50@<X0>(long long *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v86 = a2;
  uint64_t v3 = sub_1005057FC(&qword_10168B5B0);
  __chkstk_darwin(v3 - 8, v4);
  uint64_t v85 = (uint64_t)&v79 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6, v7);
  uint64_t v97 = (uint64_t *)((char *)&v79 - v8);
  uint64_t v81 = sub_1005057FC(&qword_10167A600);
  uint64_t v99 = *(void *)(v81 - 8);
  __chkstk_darwin(v81, v9);
  id v11 = (char *)&v79 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v82 = sub_1005057FC(&qword_10168B5B8) - 8;
  __chkstk_darwin(v82, v12);
  uint64_t v96 = (uint64_t)&v79 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14, v15);
  uint64_t v100 = (char *)&v79 - v16;
  __chkstk_darwin(v17, v18);
  uint64_t v20 = (char *)&v79 - v19;
  __chkstk_darwin(v21, v22);
  uint64_t v88 = (uint64_t)&v79 - v23;
  uint64_t v84 = type metadata accessor for Divider();
  uint64_t v98 = *(void *)(v84 - 8);
  __chkstk_darwin(v84, v24);
  uint64_t v94 = (char *)&v79 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26, v27);
  uint64_t v91 = (char *)&v79 - v28;
  __chkstk_darwin(v29, v30);
  uint64_t v89 = (char *)&v79 - v31;
  __chkstk_darwin(v32, v33);
  uint64_t v95 = (char *)&v79 - v34;
  LocalizedStringKey.init(stringLiteral:)();
  uint64_t v35 = Text.init(_:tableName:bundle:comment:)();
  uint64_t v37 = v36;
  char v39 = v38 & 1;
  static Font.title.getter();
  uint64_t v83 = Text.font(_:)();
  uint64_t v90 = v40;
  char v42 = v41;
  uint64_t v92 = v43;
  swift_release();
  int v93 = v42 & 1;
  sub_1006A7D28(v35, v37, v39);
  swift_bridgeObjectRelease();
  Divider.init()();
  uint64_t v87 = a1;
  long long v101 = *a1;
  sub_1005057FC(&qword_101695310);
  State.projectedValue.getter();
  uint64_t v44 = v11;
  Toggle.init(isOn:label:)();
  long long v102 = *a1;
  State.wrappedValue.getter();
  LOBYTE(v35) = v101;
  uint64_t v45 = v99;
  uint64_t v79 = *(void (**)(char *, char *, uint64_t))(v99 + 16);
  uint64_t v46 = (uint64_t)v20;
  uint64_t v47 = v20;
  uint64_t v48 = v81;
  v79(v47, v11, v81);
  uint64_t v49 = v82;
  uint64_t v50 = v46 + *(int *)(v82 + 44);
  *(unsigned char *)uint64_t v50 = v35;
  *(void *)(v50 + 8) = sub_1009F96C4;
  *(void *)(v50 + 16) = 0;
  id v51 = *(void (**)(char *, uint64_t))(v45 + 8);
  uint64_t v99 = v45 + 8;
  id v52 = v44;
  uint64_t v53 = v44;
  uint64_t v54 = v48;
  v51(v52, v48);
  uint64_t v55 = v88;
  sub_1009FA08C(v46, v88);
  int v56 = v87;
  long long v101 = v87[1];
  State.projectedValue.getter();
  Toggle.init(isOn:label:)();
  long long v102 = v56[1];
  State.wrappedValue.getter();
  LOBYTE(v35) = v101;
  uint64_t v57 = (uint64_t)v100;
  v79(v100, v53, v54);
  uint64_t v58 = v57 + *(int *)(v49 + 44);
  *(unsigned char *)uint64_t v58 = v35;
  *(void *)(v58 + 8) = sub_1009F9758;
  *(void *)(v58 + 16) = 0;
  v51(v53, v54);
  uint64_t v80 = v46;
  sub_1009FA08C(v57, v46);
  uint64_t v59 = v89;
  Divider.init()();
  uint64_t v60 = static VerticalAlignment.center.getter();
  id v61 = v97;
  *uint64_t v97 = v60;
  v61[1] = 0;
  *((unsigned char *)v61 + 16) = 1;
  uint64_t v62 = sub_1005057FC(&qword_10168B5C0);
  sub_1009F97E0(v87, (uint64_t)v61 + *(int *)(v62 + 44));
  LOBYTE(v102) = v93;
  uint64_t v63 = *(void (**)(char *, char *, uint64_t))(v98 + 16);
  uint64_t v64 = v91;
  uint64_t v65 = v84;
  v63(v91, v95, v84);
  sub_100522E9C(v55, v57, &qword_10168B5B8);
  uint64_t v66 = v96;
  sub_100522E9C(v46, v96, &qword_10168B5B8);
  uint64_t v67 = v94;
  v63(v94, v59, v65);
  uint64_t v68 = (uint64_t)v61;
  uint64_t v69 = v85;
  sub_100522E9C(v68, v85, &qword_10168B5B0);
  char v70 = v102;
  LODWORD(v99) = v102;
  uint64_t v71 = v86;
  uint64_t v72 = v83;
  uint64_t v73 = v90;
  *uint64_t v86 = v83;
  v71[1] = v73;
  *((unsigned char *)v71 + 16) = v70;
  v71[3] = v92;
  uint64_t v74 = (int *)sub_1005057FC(&qword_10168B5C8);
  v63((char *)v71 + v74[12], v64, v65);
  sub_100522E9C((uint64_t)v100, (uint64_t)v71 + v74[16], &qword_10168B5B8);
  sub_100522E9C(v66, (uint64_t)v71 + v74[20], &qword_10168B5B8);
  v63((char *)v71 + v74[24], v67, v65);
  sub_100522E9C(v69, (uint64_t)v71 + v74[28], &qword_10168B5B0);
  uint64_t v75 = v90;
  sub_10073F0E0(v72, v90, v99);
  swift_bridgeObjectRetain();
  uint64_t v76 = v72;
  LOBYTE(v64) = v93;
  sub_10073F0E0(v72, v75, v93);
  swift_bridgeObjectRetain();
  sub_100522F00((uint64_t)v97, &qword_10168B5B0);
  uint64_t v77 = *(void (**)(char *, uint64_t))(v98 + 8);
  v77(v89, v65);
  sub_100522F00(v80, &qword_10168B5B8);
  sub_100522F00(v88, &qword_10168B5B8);
  v77(v95, v65);
  sub_1006A7D28(v76, v75, (char)v64);
  swift_bridgeObjectRelease();
  sub_100522F00(v69, &qword_10168B5B0);
  v77(v94, v65);
  sub_100522F00(v96, &qword_10168B5B8);
  sub_100522F00((uint64_t)v100, &qword_10168B5B8);
  v77(v91, v65);
  sub_1006A7D28(v76, v75, v102);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1009F96A8@<X0>(uint64_t a1@<X8>)
{
  return sub_1009F96F8(a1);
}

uint64_t sub_1009F96C4(unsigned __int8 *a1)
{
  return sub_1009F9770(a1, (uint64_t (*)(uint64_t))sub_100DD2A98);
}

uint64_t sub_1009F96DC@<X0>(uint64_t a1@<X8>)
{
  return sub_1009F96F8(a1);
}

uint64_t sub_1009F96F8@<X0>(uint64_t a1@<X8>)
{
  LocalizedStringKey.init(stringLiteral:)();
  uint64_t result = Text.init(_:tableName:bundle:comment:)();
  *(void *)a1 = result;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = v4 & 1;
  *(void *)(a1 + 24) = v5;
  return result;
}

uint64_t sub_1009F9758(unsigned __int8 *a1)
{
  return sub_1009F9770(a1, (uint64_t (*)(uint64_t))sub_100DD2AD8);
}

uint64_t sub_1009F9770(unsigned __int8 *a1, uint64_t (*a2)(uint64_t))
{
  uint64_t v3 = *a1;
  if (qword_1016700F0 != -1) {
    swift_once();
  }
  return a2(v3);
}

uint64_t sub_1009F97E0@<X0>(long long *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1005057FC(&qword_10167A598);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4, v6);
  uint64_t v8 = (char *)v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9, v10);
  uint64_t v12 = (char *)v25 - v11;
  uint64_t v13 = LocalizedStringKey.init(stringLiteral:)();
  v25[2] = v14;
  v25[3] = v13;
  v25[1] = v15;
  long long v16 = *a1;
  long long v26 = a1[1];
  long long v27 = v16;
  uint64_t v17 = *((void *)a1 + 4);
  uint64_t v18 = (_OWORD *)swift_allocObject();
  long long v19 = a1[1];
  v18[1] = *a1;
  v18[2] = v19;
  v18[3] = a1[2];
  sub_1009FA144((uint64_t)&v27);
  sub_1009FA144((uint64_t)&v26);
  sub_1005173A0(v17);
  Button<>.init(_:action:)();
  uint64_t v20 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
  v20(v8, v12, v4);
  *(void *)a2 = 0;
  *(unsigned char *)(a2 + 8) = 1;
  uint64_t v21 = sub_1005057FC(&qword_10168B5D0);
  v20((char *)(a2 + *(int *)(v21 + 48)), v8, v4);
  uint64_t v22 = a2 + *(int *)(v21 + 64);
  *(void *)uint64_t v22 = 0;
  *(unsigned char *)(v22 + 8) = 1;
  uint64_t v23 = *(void (**)(char *, uint64_t))(v5 + 8);
  v23(v12, v4);
  return ((uint64_t (*)(char *, uint64_t))v23)(v8, v4);
}

uint64_t sub_1009F99F0@<X0>(uint64_t a1@<X8>)
{
  return sub_1009F8C04(a1);
}

uint64_t sub_1009F9A2C(uint64_t a1, uint64_t a2, void *a3)
{
  id v3 = a3;
  sub_1009F9EF8((uint64_t)&v5);
  return UIHostingController.init(coder:rootView:)();
}

id sub_1009F9A70()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLFileReadWriteUserOptionsViewController();
  return [super dealloc];
}

void sub_1009F9AA8()
{
}

void sub_1009F9AD8()
{
}

uint64_t sub_1009F9B08()
{
  return type metadata accessor for CRLFileReadWriteUserOptionsViewController();
}

uint64_t destroy for CRLFileReadWriteUserOptionsView(uint64_t a1)
{
  swift_release();
  uint64_t result = swift_release();
  if (*(void *)(a1 + 32))
  {
    return swift_release();
  }
  return result;
}

uint64_t initializeWithCopy for CRLFileReadWriteUserOptionsView(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  uint64_t v5 = (_OWORD *)(a2 + 32);
  uint64_t v4 = *(void *)(a2 + 32);
  swift_retain();
  swift_retain();
  if (v4)
  {
    uint64_t v6 = *(void *)(a2 + 40);
    *(void *)(a1 + 32) = v4;
    *(void *)(a1 + 40) = v6;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 32) = *v5;
  }
  return a1;
}

uint64_t assignWithCopy for CRLFileReadWriteUserOptionsView(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_retain();
  swift_release();
  uint64_t v4 = *(void *)(a2 + 32);
  if (!*(void *)(a1 + 32))
  {
    if (v4)
    {
      uint64_t v6 = *(void *)(a2 + 40);
      *(void *)(a1 + 32) = v4;
      *(void *)(a1 + 40) = v6;
      swift_retain();
      return a1;
    }
LABEL_7:
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    return a1;
  }
  if (!v4)
  {
    swift_release();
    goto LABEL_7;
  }
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = v4;
  *(void *)(a1 + 40) = v5;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for CRLFileReadWriteUserOptionsView(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_release();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_release();
  uint64_t v4 = *(void *)(a2 + 32);
  if (!*(void *)(a1 + 32))
  {
    if (v4)
    {
      uint64_t v6 = *(void *)(a2 + 40);
      *(void *)(a1 + 32) = v4;
      *(void *)(a1 + 40) = v6;
      return a1;
    }
LABEL_7:
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    return a1;
  }
  if (!v4)
  {
    swift_release();
    goto LABEL_7;
  }
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = v4;
  *(void *)(a1 + 40) = v5;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for CRLFileReadWriteUserOptionsView(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 48)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for CRLFileReadWriteUserOptionsView(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 48) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLFileReadWriteUserOptionsView()
{
  return &type metadata for CRLFileReadWriteUserOptionsView;
}

uint64_t sub_1009F9E34()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1009F9E50@<X0>(unsigned char *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

void sub_1009F9ED0()
{
}

uint64_t sub_1009F9EF8@<X0>(uint64_t a1@<X8>)
{
  if (qword_1016700F0 != -1) {
    swift_once();
  }
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  State.init(wrappedValue:)();
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  uint64_t result = State.init(wrappedValue:)();
  *(unsigned char *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v3;
  *(void *)(a1 + 32) = 0;
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 24) = v4;
  return result;
}

void sub_1009FA05C()
{
}

uint64_t sub_1009FA08C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1005057FC(&qword_10168B5B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1009FA0F4()
{
  swift_release();
  swift_release();
  if (*(void *)(v0 + 48)) {
    swift_release();
  }

  return _swift_deallocObject(v0, 64, 7);
}

uint64_t sub_1009FA144(uint64_t a1)
{
  return a1;
}

uint64_t sub_1009FA170()
{
  return sub_1009FA1E4(&qword_10168B5D8, &qword_10168B5A8, (void (*)(void))sub_1009FA1B4);
}

uint64_t sub_1009FA1B4()
{
  return sub_1009FA1E4(&qword_10168B5E0, &qword_10168B598, (void (*)(void))sub_1009FA260);
}

uint64_t sub_1009FA1E4(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100522D34(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1009FA260()
{
  return sub_1009FA1E4(&qword_10168B5E8, &qword_10168B590, (void (*)(void))sub_1009FA290);
}

unint64_t sub_1009FA290()
{
  unint64_t result = qword_10168B5F0;
  if (!qword_10168B5F0)
  {
    sub_100522D34(&qword_10168B588);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168B5F0);
  }
  return result;
}

void destroy for CRLLayerPropertyTransitionDescriptor(uint64_t a1)
{
  uint64_t v1 = a1;
  unsigned int v2 = *(unsigned __int8 *)(a1 + 256);
  if (v2 >= 0x41) {
    unsigned int v2 = *(_DWORD *)a1 + 65;
  }
  switch(v2)
  {
    case 1u:
    case 0x23u:
      if (*(void *)(a1 + 24) >= 0xFFFFFFFFuLL) {
        goto LABEL_15;
      }
      return;
    case 2u:
    case 3u:
    case 4u:
    case 5u:
    case 6u:
    case 7u:
    case 8u:
    case 9u:
    case 0xAu:
    case 0xBu:
    case 0xCu:
    case 0xDu:
    case 0xEu:
    case 0xFu:
    case 0x10u:
    case 0x11u:
    case 0x16u:
    case 0x17u:
    case 0x18u:
    case 0x19u:
    case 0x1Au:
    case 0x1Bu:
    case 0x26u:
    case 0x27u:
    case 0x28u:
    case 0x29u:
    case 0x2Au:
    case 0x2Bu:
    case 0x2Cu:
    case 0x2Du:
    case 0x2Eu:
    case 0x2Fu:
    case 0x30u:
    case 0x31u:
    case 0x32u:
    case 0x33u:
    case 0x34u:
    case 0x35u:
    case 0x36u:
    case 0x37u:
    case 0x38u:
    case 0x39u:
    case 0x3Bu:
    case 0x3Cu:
    case 0x3Du:
    case 0x3Eu:
      return;
    case 0x12u:
    case 0x14u:
    case 0x1Cu:
    case 0x1Eu:

      id v3 = *(id *)(v1 + 8);
      goto LABEL_7;
    case 0x13u:
    case 0x15u:
    case 0x1Du:
    case 0x1Fu:
      id v3 = *(id *)a1;
      goto LABEL_7;
    case 0x20u:
    case 0x24u:
      swift_bridgeObjectRelease();
      goto LABEL_23;
    case 0x21u:
    case 0x25u:
      goto LABEL_23;
    case 0x3Au:
      id v3 = *(id *)(a1 + 40);
LABEL_7:

      return;
    case 0x3Fu:

      if (*(void *)(v1 + 120)) {
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v1 + 96);
      }
      goto LABEL_23;
    case 0x40u:

      if (*(void *)(v1 + 88)) {
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v1 + 64);
      }
LABEL_23:
      swift_bridgeObjectRelease();
      break;
    default:
      if (*(void *)(a1 + 24)) {
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0(a1);
      }
      if (*(void *)(v1 + 56))
      {
        a1 = v1 + 32;
LABEL_15:
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0(a1);
      }
      break;
  }
}

uint64_t initializeWithCopy for CRLLayerPropertyTransitionDescriptor(uint64_t a1, uint64_t a2)
{
  unsigned int v4 = *(unsigned __int8 *)(a2 + 256);
  if (v4 >= 0x41) {
    unsigned int v4 = *(_DWORD *)a2 + 65;
  }
  switch(v4)
  {
    case 1u:
      unint64_t v6 = *(void *)(a2 + 24);
      if (v6 < 0xFFFFFFFF)
      {
        long long v101 = *(_OWORD *)(a2 + 16);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_OWORD *)(a1 + 16) = v101;
      }
      else
      {
        *(void *)(a1 + 24) = v6;
        (**(void (***)(uint64_t, uint64_t))(v6 - 8))(a1, a2);
      }
      *(unsigned char *)(a1 + 256) = 1;
      return a1;
    case 2u:
      long long v7 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v7;
      long long v8 = *(_OWORD *)(a2 + 48);
      *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
      *(_OWORD *)(a1 + 48) = v8;
      *(unsigned char *)(a1 + 256) = 2;
      return a1;
    case 3u:
      long long v9 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v9;
      *(unsigned char *)(a1 + 256) = 3;
      return a1;
    case 4u:
      long long v10 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v10;
      *(unsigned char *)(a1 + 256) = 4;
      return a1;
    case 5u:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(unsigned char *)(a1 + 256) = 5;
      return a1;
    case 6u:
      *(void *)a1 = *(void *)a2;
      *(unsigned char *)(a1 + 256) = 6;
      return a1;
    case 7u:
      *(_DWORD *)a1 = *(_DWORD *)a2;
      *(unsigned char *)(a1 + 256) = 7;
      return a1;
    case 8u:
      *(_WORD *)a1 = *(_WORD *)a2;
      *(unsigned char *)(a1 + 256) = 8;
      return a1;
    case 9u:
      *(unsigned char *)a1 = *(unsigned char *)a2;
      *(unsigned char *)(a1 + 256) = 9;
      return a1;
    case 0xAu:
      *(_WORD *)a1 = *(_WORD *)a2;
      *(unsigned char *)(a1 + 256) = 10;
      return a1;
    case 0xBu:
      *(unsigned char *)a1 = *(unsigned char *)a2;
      *(unsigned char *)(a1 + 256) = 11;
      return a1;
    case 0xCu:
      *(_WORD *)a1 = *(_WORD *)a2;
      *(unsigned char *)(a1 + 256) = 12;
      return a1;
    case 0xDu:
      *(unsigned char *)a1 = *(unsigned char *)a2;
      *(unsigned char *)(a1 + 256) = 13;
      return a1;
    case 0xEu:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(unsigned char *)(a1 + 256) = 14;
      return a1;
    case 0xFu:
      *(void *)a1 = *(void *)a2;
      *(unsigned char *)(a1 + 256) = 15;
      return a1;
    case 0x10u:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(unsigned char *)(a1 + 256) = 16;
      return a1;
    case 0x11u:
      *(void *)a1 = *(void *)a2;
      *(unsigned char *)(a1 + 256) = 17;
      return a1;
    case 0x12u:
      uint64_t v11 = *(void **)a2;
      uint64_t v12 = *(void **)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v12;
      char v13 = 18;
      goto LABEL_37;
    case 0x13u:
      uint64_t v14 = *(void **)a2;
      *(void *)a1 = *(void *)a2;
      char v15 = 19;
      goto LABEL_69;
    case 0x14u:
      uint64_t v11 = *(void **)a2;
      uint64_t v12 = *(void **)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v12;
      char v13 = 20;
      goto LABEL_37;
    case 0x15u:
      uint64_t v14 = *(void **)a2;
      *(void *)a1 = *(void *)a2;
      char v15 = 21;
      goto LABEL_69;
    case 0x16u:
      *(void *)a1 = *(void *)a2;
      *(unsigned char *)(a1 + 256) = 22;
      return a1;
    case 0x17u:
      *(_DWORD *)a1 = *(_DWORD *)a2;
      *(unsigned char *)(a1 + 256) = 23;
      return a1;
    case 0x18u:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(unsigned char *)(a1 + 256) = 24;
      return a1;
    case 0x19u:
      *(void *)a1 = *(void *)a2;
      *(unsigned char *)(a1 + 256) = 25;
      return a1;
    case 0x1Au:
      long long v16 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v16;
      *(unsigned char *)(a1 + 256) = 26;
      return a1;
    case 0x1Bu:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(unsigned char *)(a1 + 256) = 27;
      return a1;
    case 0x1Cu:
      uint64_t v11 = *(void **)a2;
      uint64_t v12 = *(void **)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v12;
      char v13 = 28;
      goto LABEL_37;
    case 0x1Du:
      uint64_t v14 = *(void **)a2;
      *(void *)a1 = *(void *)a2;
      char v15 = 29;
      goto LABEL_69;
    case 0x1Eu:
      uint64_t v11 = *(void **)a2;
      uint64_t v12 = *(void **)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v12;
      char v13 = 30;
LABEL_37:
      *(unsigned char *)(a1 + 256) = v13;
      id v17 = v11;
      id v18 = v12;
      return a1;
    case 0x1Fu:
      uint64_t v14 = *(void **)a2;
      *(void *)a1 = *(void *)a2;
      char v15 = 31;
      goto LABEL_69;
    case 0x20u:
      uint64_t v19 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v19;
      char v20 = 32;
      goto LABEL_46;
    case 0x21u:
      *(void *)a1 = *(void *)a2;
      char v21 = 33;
      goto LABEL_93;
    case 0x22u:
      uint64_t v22 = *(void *)(a2 + 24);
      if (v22)
      {
        *(void *)(a1 + 24) = v22;
        (**(void (***)(uint64_t, uint64_t))(v22 - 8))(a1, a2);
      }
      else
      {
        long long v107 = *(_OWORD *)(a2 + 16);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_OWORD *)(a1 + 16) = v107;
      }
      id v108 = (_OWORD *)(a1 + 32);
      uint64_t v109 = (_OWORD *)(a2 + 32);
      uint64_t v110 = *(void *)(a2 + 56);
      if (v110)
      {
        *(void *)(a1 + 56) = v110;
        (**(void (***)(_OWORD *, _OWORD *))(v110 - 8))(v108, v109);
      }
      else
      {
        long long v117 = *(_OWORD *)(a2 + 48);
        *id v108 = *v109;
        *(_OWORD *)(a1 + 48) = v117;
      }
      *(unsigned char *)(a1 + 256) = 34;
      return a1;
    case 0x23u:
      unint64_t v23 = *(void *)(a2 + 24);
      if (v23 < 0xFFFFFFFF)
      {
        long long v102 = *(_OWORD *)(a2 + 16);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_OWORD *)(a1 + 16) = v102;
      }
      else
      {
        *(void *)(a1 + 24) = v23;
        (**(void (***)(uint64_t, uint64_t))(v23 - 8))(a1, a2);
      }
      *(unsigned char *)(a1 + 256) = 35;
      return a1;
    case 0x24u:
      uint64_t v24 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v24;
      char v20 = 36;
LABEL_46:
      *(unsigned char *)(a1 + 256) = v20;
      swift_bridgeObjectRetain();
      goto LABEL_94;
    case 0x25u:
      *(void *)a1 = *(void *)a2;
      char v21 = 37;
      goto LABEL_93;
    case 0x26u:
      *(_WORD *)a1 = *(_WORD *)a2;
      *(unsigned char *)(a1 + 256) = 38;
      return a1;
    case 0x27u:
      *(unsigned char *)a1 = *(unsigned char *)a2;
      *(unsigned char *)(a1 + 256) = 39;
      return a1;
    case 0x28u:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(unsigned char *)(a1 + 256) = 40;
      return a1;
    case 0x29u:
      *(void *)a1 = *(void *)a2;
      *(unsigned char *)(a1 + 256) = 41;
      return a1;
    case 0x2Au:
      long long v25 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v25;
      long long v26 = *(_OWORD *)(a2 + 48);
      *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
      *(_OWORD *)(a1 + 48) = v26;
      *(unsigned char *)(a1 + 256) = 42;
      return a1;
    case 0x2Bu:
      long long v27 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v27;
      *(unsigned char *)(a1 + 256) = 43;
      return a1;
    case 0x2Cu:
      long long v28 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v28;
      *(unsigned char *)(a1 + 256) = 44;
      return a1;
    case 0x2Du:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(unsigned char *)(a1 + 256) = 45;
      return a1;
    case 0x2Eu:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(unsigned char *)(a1 + 256) = 46;
      return a1;
    case 0x2Fu:
      *(void *)a1 = *(void *)a2;
      *(unsigned char *)(a1 + 256) = 47;
      return a1;
    case 0x30u:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(unsigned char *)(a1 + 256) = 48;
      return a1;
    case 0x31u:
      *(void *)a1 = *(void *)a2;
      *(unsigned char *)(a1 + 256) = 49;
      return a1;
    case 0x32u:
      long long v29 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v29;
      *(unsigned char *)(a1 + 256) = 50;
      return a1;
    case 0x33u:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(unsigned char *)(a1 + 256) = 51;
      return a1;
    case 0x34u:
      long long v30 = *(_OWORD *)(a2 + 208);
      *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
      *(_OWORD *)(a1 + 208) = v30;
      long long v31 = *(_OWORD *)(a2 + 240);
      *(_OWORD *)(a1 + 224) = *(_OWORD *)(a2 + 224);
      *(_OWORD *)(a1 + 240) = v31;
      long long v32 = *(_OWORD *)(a2 + 144);
      *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
      *(_OWORD *)(a1 + 144) = v32;
      long long v33 = *(_OWORD *)(a2 + 176);
      *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
      *(_OWORD *)(a1 + 176) = v33;
      long long v34 = *(_OWORD *)(a2 + 80);
      *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
      *(_OWORD *)(a1 + 80) = v34;
      long long v35 = *(_OWORD *)(a2 + 112);
      *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
      *(_OWORD *)(a1 + 112) = v35;
      long long v36 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v36;
      long long v37 = *(_OWORD *)(a2 + 48);
      *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
      *(_OWORD *)(a1 + 48) = v37;
      *(unsigned char *)(a1 + 256) = 52;
      return a1;
    case 0x35u:
      long long v38 = *(_OWORD *)(a2 + 80);
      *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
      *(_OWORD *)(a1 + 80) = v38;
      long long v39 = *(_OWORD *)(a2 + 112);
      *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
      *(_OWORD *)(a1 + 112) = v39;
      long long v40 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v40;
      long long v41 = *(_OWORD *)(a2 + 48);
      *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
      *(_OWORD *)(a1 + 48) = v41;
      *(unsigned char *)(a1 + 256) = 53;
      return a1;
    case 0x36u:
      long long v42 = *(_OWORD *)(a2 + 208);
      *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
      *(_OWORD *)(a1 + 208) = v42;
      long long v43 = *(_OWORD *)(a2 + 240);
      *(_OWORD *)(a1 + 224) = *(_OWORD *)(a2 + 224);
      *(_OWORD *)(a1 + 240) = v43;
      long long v44 = *(_OWORD *)(a2 + 144);
      *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
      *(_OWORD *)(a1 + 144) = v44;
      long long v45 = *(_OWORD *)(a2 + 176);
      *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
      *(_OWORD *)(a1 + 176) = v45;
      long long v46 = *(_OWORD *)(a2 + 80);
      *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
      *(_OWORD *)(a1 + 80) = v46;
      long long v47 = *(_OWORD *)(a2 + 112);
      *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
      *(_OWORD *)(a1 + 112) = v47;
      long long v48 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v48;
      long long v49 = *(_OWORD *)(a2 + 48);
      *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
      *(_OWORD *)(a1 + 48) = v49;
      *(unsigned char *)(a1 + 256) = 54;
      return a1;
    case 0x37u:
      long long v50 = *(_OWORD *)(a2 + 80);
      *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
      *(_OWORD *)(a1 + 80) = v50;
      long long v51 = *(_OWORD *)(a2 + 112);
      *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
      *(_OWORD *)(a1 + 112) = v51;
      long long v52 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v52;
      long long v53 = *(_OWORD *)(a2 + 48);
      *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
      *(_OWORD *)(a1 + 48) = v53;
      *(unsigned char *)(a1 + 256) = 55;
      return a1;
    case 0x38u:
      long long v54 = *(_OWORD *)(a2 + 48);
      *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
      *(_OWORD *)(a1 + 48) = v54;
      long long v55 = *(_OWORD *)(a2 + 80);
      *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
      *(_OWORD *)(a1 + 80) = v55;
      long long v56 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v56;
      *(unsigned char *)(a1 + 256) = 56;
      return a1;
    case 0x39u:
      long long v57 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v57;
      *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
      *(unsigned char *)(a1 + 256) = 57;
      return a1;
    case 0x3Au:
      long long v58 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v58;
      *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
      uint64_t v14 = *(void **)(a2 + 40);
      *(void *)(a1 + 40) = v14;
      *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
      char v15 = 58;
LABEL_69:
      *(unsigned char *)(a1 + 256) = v15;
      id v59 = v14;
      return a1;
    case 0x3Bu:
      long long v60 = *(_OWORD *)(a2 + 144);
      *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
      *(_OWORD *)(a1 + 144) = v60;
      *(unsigned char *)(a1 + 160) = *(unsigned char *)(a2 + 160);
      long long v61 = *(_OWORD *)(a2 + 80);
      *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
      *(_OWORD *)(a1 + 80) = v61;
      long long v62 = *(_OWORD *)(a2 + 112);
      *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
      *(_OWORD *)(a1 + 112) = v62;
      long long v63 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v63;
      long long v64 = *(_OWORD *)(a2 + 48);
      *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
      *(_OWORD *)(a1 + 48) = v64;
      *(unsigned char *)(a1 + 256) = 59;
      return a1;
    case 0x3Cu:
      long long v65 = *(_OWORD *)(a2 + 176);
      *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
      *(_OWORD *)(a1 + 176) = v65;
      *(unsigned char *)(a1 + 192) = *(unsigned char *)(a2 + 192);
      long long v66 = *(_OWORD *)(a2 + 112);
      *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
      *(_OWORD *)(a1 + 112) = v66;
      long long v67 = *(_OWORD *)(a2 + 144);
      *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
      *(_OWORD *)(a1 + 144) = v67;
      long long v68 = *(_OWORD *)(a2 + 48);
      *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
      *(_OWORD *)(a1 + 48) = v68;
      long long v69 = *(_OWORD *)(a2 + 80);
      *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
      *(_OWORD *)(a1 + 80) = v69;
      long long v70 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v70;
      *(unsigned char *)(a1 + 256) = 60;
      return a1;
    case 0x3Du:
      long long v71 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v71;
      long long v72 = *(_OWORD *)(a2 + 48);
      *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
      *(_OWORD *)(a1 + 48) = v72;
      *(unsigned char *)(a1 + 256) = 61;
      return a1;
    case 0x3Eu:
      long long v73 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v73;
      *(unsigned char *)(a1 + 256) = 62;
      return a1;
    case 0x3Fu:
      long long v74 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v74;
      long long v75 = *(_OWORD *)(a2 + 48);
      *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
      *(_OWORD *)(a1 + 48) = v75;
      uint64_t v76 = *(void **)(a2 + 64);
      uint64_t v77 = *(void **)(a2 + 72);
      *(void *)(a1 + 64) = v76;
      *(void *)(a1 + 72) = v77;
      uint64_t v78 = *(void **)(a2 + 80);
      uint64_t v79 = *(void **)(a2 + 88);
      *(void *)(a1 + 80) = v78;
      *(void *)(a1 + 88) = v79;
      uint64_t v80 = (_OWORD *)(a1 + 96);
      uint64_t v81 = (_OWORD *)(a2 + 96);
      uint64_t v82 = *(void *)(a2 + 120);
      id v83 = v76;
      id v84 = v77;
      id v85 = v78;
      id v86 = v79;
      if (v82)
      {
        uint64_t v87 = *(void *)(a2 + 128);
        *(void *)(a1 + 120) = v82;
        *(void *)(a1 + 128) = v87;
        (**(void (***)(uint64_t, uint64_t, uint64_t))(v82 - 8))(a1 + 96, a2 + 96, v82);
      }
      else
      {
        long long v111 = *(_OWORD *)(a2 + 112);
        *uint64_t v80 = *v81;
        *(_OWORD *)(a1 + 112) = v111;
        *(void *)(a1 + 128) = *(void *)(a2 + 128);
      }
      uint64_t v112 = *(void *)(a2 + 144);
      *(void *)(a1 + 136) = *(void *)(a2 + 136);
      *(void *)(a1 + 144) = v112;
      char v21 = 63;
      goto LABEL_93;
    case 0x40u:
      long long v88 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v88;
      uint64_t v89 = *(void **)(a2 + 32);
      uint64_t v90 = *(void **)(a2 + 40);
      *(void *)(a1 + 32) = v89;
      *(void *)(a1 + 40) = v90;
      uint64_t v91 = *(void **)(a2 + 48);
      uint64_t v92 = *(void **)(a2 + 56);
      *(void *)(a1 + 48) = v91;
      *(void *)(a1 + 56) = v92;
      int v93 = (_OWORD *)(a1 + 64);
      uint64_t v94 = (_OWORD *)(a2 + 64);
      uint64_t v95 = *(void *)(a2 + 88);
      id v96 = v89;
      id v97 = v90;
      id v98 = v91;
      id v99 = v92;
      if (v95)
      {
        uint64_t v100 = *(void *)(a2 + 96);
        *(void *)(a1 + 88) = v95;
        *(void *)(a1 + 96) = v100;
        (**(void (***)(uint64_t, uint64_t, uint64_t))(v95 - 8))(a1 + 64, a2 + 64, v95);
      }
      else
      {
        long long v113 = *(_OWORD *)(a2 + 80);
        _OWORD *v93 = *v94;
        *(_OWORD *)(a1 + 80) = v113;
        *(void *)(a1 + 96) = *(void *)(a2 + 96);
      }
      uint64_t v114 = *(void *)(a2 + 112);
      *(void *)(a1 + 104) = *(void *)(a2 + 104);
      *(void *)(a1 + 112) = v114;
      char v21 = 64;
LABEL_93:
      *(unsigned char *)(a1 + 256) = v21;
LABEL_94:
      swift_bridgeObjectRetain();
      break;
    default:
      uint64_t v5 = *(void *)(a2 + 24);
      if (v5)
      {
        *(void *)(a1 + 24) = v5;
        (**(void (***)(uint64_t, uint64_t))(v5 - 8))(a1, a2);
      }
      else
      {
        long long v103 = *(_OWORD *)(a2 + 16);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_OWORD *)(a1 + 16) = v103;
      }
      uint64_t v104 = (_OWORD *)(a1 + 32);
      uint64_t v105 = (_OWORD *)(a2 + 32);
      uint64_t v106 = *(void *)(a2 + 56);
      if (v106)
      {
        *(void *)(a1 + 56) = v106;
        (**(void (***)(_OWORD *, _OWORD *))(v106 - 8))(v104, v105);
      }
      else
      {
        long long v116 = *(_OWORD *)(a2 + 48);
        _OWORD *v104 = *v105;
        *(_OWORD *)(a1 + 48) = v116;
      }
      *(unsigned char *)(a1 + 256) = 0;
      break;
  }
  return a1;
}

uint64_t assignWithCopy for CRLLayerPropertyTransitionDescriptor(uint64_t a1, long long *a2)
{
  if ((long long *)a1 != a2)
  {
    unsigned int v4 = *(unsigned __int8 *)(a1 + 256);
    if (v4 >= 0x41) {
      unsigned int v4 = *(_DWORD *)a1 + 65;
    }
    switch(v4)
    {
      case 1u:
      case 0x23u:
        if (*(void *)(a1 + 24) >= 0xFFFFFFFFuLL) {
          _s8Freeform26AnyCRLCommandChangeContextVwxx_0(a1);
        }
        break;
      case 2u:
      case 3u:
      case 4u:
      case 5u:
      case 6u:
      case 7u:
      case 8u:
      case 9u:
      case 0xAu:
      case 0xBu:
      case 0xCu:
      case 0xDu:
      case 0xEu:
      case 0xFu:
      case 0x10u:
      case 0x11u:
      case 0x16u:
      case 0x17u:
      case 0x18u:
      case 0x19u:
      case 0x1Au:
      case 0x1Bu:
      case 0x26u:
      case 0x27u:
      case 0x28u:
      case 0x29u:
      case 0x2Au:
      case 0x2Bu:
      case 0x2Cu:
      case 0x2Du:
      case 0x2Eu:
      case 0x2Fu:
      case 0x30u:
      case 0x31u:
      case 0x32u:
      case 0x33u:
      case 0x34u:
      case 0x35u:
      case 0x36u:
      case 0x37u:
      case 0x38u:
      case 0x39u:
      case 0x3Bu:
      case 0x3Cu:
      case 0x3Du:
      case 0x3Eu:
        break;
      case 0x12u:
      case 0x14u:
      case 0x1Cu:
      case 0x1Eu:

        break;
      case 0x13u:
      case 0x15u:
      case 0x1Du:
      case 0x1Fu:

        break;
      case 0x20u:
      case 0x24u:
        swift_bridgeObjectRelease();
        goto LABEL_25;
      case 0x21u:
      case 0x25u:
        goto LABEL_25;
      case 0x3Au:

        break;
      case 0x3Fu:

        if (*(void *)(a1 + 120)) {
          _s8Freeform26AnyCRLCommandChangeContextVwxx_0(a1 + 96);
        }
        goto LABEL_25;
      case 0x40u:

        if (*(void *)(a1 + 88)) {
          _s8Freeform26AnyCRLCommandChangeContextVwxx_0(a1 + 64);
        }
LABEL_25:
        swift_bridgeObjectRelease();
        break;
      default:
        if (*(void *)(a1 + 24)) {
          _s8Freeform26AnyCRLCommandChangeContextVwxx_0(a1);
        }
        if (*(void *)(a1 + 56)) {
          _s8Freeform26AnyCRLCommandChangeContextVwxx_0(a1 + 32);
        }
        break;
    }
    unsigned int v5 = *((unsigned __int8 *)a2 + 256);
    if (v5 >= 0x41) {
      unsigned int v5 = *(_DWORD *)a2 + 65;
    }
    switch(v5)
    {
      case 1u:
        unint64_t v7 = *((void *)a2 + 3);
        if (v7 < 0xFFFFFFFF)
        {
          long long v117 = a2[1];
          *(_OWORD *)a1 = *a2;
          *(_OWORD *)(a1 + 16) = v117;
        }
        else
        {
          *(void *)(a1 + 24) = v7;
          (**(void (***)(uint64_t, long long *))(v7 - 8))(a1, a2);
        }
        *(unsigned char *)(a1 + 256) = 1;
        return a1;
      case 2u:
        long long v8 = *a2;
        long long v9 = a2[1];
        long long v10 = a2[3];
        *(_OWORD *)(a1 + 32) = a2[2];
        *(_OWORD *)(a1 + 48) = v10;
        *(_OWORD *)a1 = v8;
        *(_OWORD *)(a1 + 16) = v9;
        *(unsigned char *)(a1 + 256) = 2;
        return a1;
      case 3u:
        long long v11 = a2[1];
        *(_OWORD *)a1 = *a2;
        *(_OWORD *)(a1 + 16) = v11;
        *(unsigned char *)(a1 + 256) = 3;
        return a1;
      case 4u:
        long long v12 = a2[1];
        *(_OWORD *)a1 = *a2;
        *(_OWORD *)(a1 + 16) = v12;
        *(unsigned char *)(a1 + 256) = 4;
        return a1;
      case 5u:
        *(_OWORD *)a1 = *a2;
        *(unsigned char *)(a1 + 256) = 5;
        return a1;
      case 6u:
        *(void *)a1 = *(void *)a2;
        *(unsigned char *)(a1 + 256) = 6;
        return a1;
      case 7u:
        *(_DWORD *)a1 = *(_DWORD *)a2;
        *(unsigned char *)(a1 + 256) = 7;
        return a1;
      case 8u:
        *(_WORD *)a1 = *(_WORD *)a2;
        *(unsigned char *)(a1 + 256) = 8;
        return a1;
      case 9u:
        *(unsigned char *)a1 = *(unsigned char *)a2;
        *(unsigned char *)(a1 + 256) = 9;
        return a1;
      case 0xAu:
        *(_WORD *)a1 = *(_WORD *)a2;
        *(unsigned char *)(a1 + 256) = 10;
        return a1;
      case 0xBu:
        *(unsigned char *)a1 = *(unsigned char *)a2;
        *(unsigned char *)(a1 + 256) = 11;
        return a1;
      case 0xCu:
        *(_WORD *)a1 = *(_WORD *)a2;
        *(unsigned char *)(a1 + 256) = 12;
        return a1;
      case 0xDu:
        *(unsigned char *)a1 = *(unsigned char *)a2;
        *(unsigned char *)(a1 + 256) = 13;
        return a1;
      case 0xEu:
        *(_OWORD *)a1 = *a2;
        *(unsigned char *)(a1 + 256) = 14;
        return a1;
      case 0xFu:
        *(void *)a1 = *(void *)a2;
        *(unsigned char *)(a1 + 256) = 15;
        return a1;
      case 0x10u:
        *(_OWORD *)a1 = *a2;
        *(unsigned char *)(a1 + 256) = 16;
        return a1;
      case 0x11u:
        *(void *)a1 = *(void *)a2;
        *(unsigned char *)(a1 + 256) = 17;
        return a1;
      case 0x12u:
        char v13 = *(void **)a2;
        *(void *)a1 = *(void *)a2;
        uint64_t v14 = (void *)*((void *)a2 + 1);
        *(void *)(a1 + 8) = v14;
        char v15 = 18;
        goto LABEL_57;
      case 0x13u:
        long long v16 = *(void **)a2;
        *(void *)a1 = *(void *)a2;
        char v17 = 19;
        goto LABEL_89;
      case 0x14u:
        char v13 = *(void **)a2;
        *(void *)a1 = *(void *)a2;
        uint64_t v14 = (void *)*((void *)a2 + 1);
        *(void *)(a1 + 8) = v14;
        char v15 = 20;
        goto LABEL_57;
      case 0x15u:
        long long v16 = *(void **)a2;
        *(void *)a1 = *(void *)a2;
        char v17 = 21;
        goto LABEL_89;
      case 0x16u:
        *(void *)a1 = *(void *)a2;
        *(unsigned char *)(a1 + 256) = 22;
        return a1;
      case 0x17u:
        *(_DWORD *)a1 = *(_DWORD *)a2;
        *(unsigned char *)(a1 + 256) = 23;
        return a1;
      case 0x18u:
        *(_OWORD *)a1 = *a2;
        *(unsigned char *)(a1 + 256) = 24;
        return a1;
      case 0x19u:
        *(void *)a1 = *(void *)a2;
        *(unsigned char *)(a1 + 256) = 25;
        return a1;
      case 0x1Au:
        long long v18 = a2[1];
        *(_OWORD *)a1 = *a2;
        *(_OWORD *)(a1 + 16) = v18;
        *(unsigned char *)(a1 + 256) = 26;
        return a1;
      case 0x1Bu:
        *(_OWORD *)a1 = *a2;
        *(unsigned char *)(a1 + 256) = 27;
        return a1;
      case 0x1Cu:
        char v13 = *(void **)a2;
        *(void *)a1 = *(void *)a2;
        uint64_t v14 = (void *)*((void *)a2 + 1);
        *(void *)(a1 + 8) = v14;
        char v15 = 28;
        goto LABEL_57;
      case 0x1Du:
        long long v16 = *(void **)a2;
        *(void *)a1 = *(void *)a2;
        char v17 = 29;
        goto LABEL_89;
      case 0x1Eu:
        char v13 = *(void **)a2;
        *(void *)a1 = *(void *)a2;
        uint64_t v14 = (void *)*((void *)a2 + 1);
        *(void *)(a1 + 8) = v14;
        char v15 = 30;
LABEL_57:
        *(unsigned char *)(a1 + 256) = v15;
        id v19 = v13;
        id v20 = v14;
        return a1;
      case 0x1Fu:
        long long v16 = *(void **)a2;
        *(void *)a1 = *(void *)a2;
        char v17 = 31;
        goto LABEL_89;
      case 0x20u:
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *((void *)a2 + 1);
        char v21 = 32;
        goto LABEL_66;
      case 0x21u:
        *(void *)a1 = *(void *)a2;
        char v22 = 33;
        goto LABEL_113;
      case 0x22u:
        uint64_t v23 = *((void *)a2 + 3);
        if (v23)
        {
          *(void *)(a1 + 24) = v23;
          (**(void (***)(uint64_t, long long *))(v23 - 8))(a1, a2);
        }
        else
        {
          long long v123 = a2[1];
          *(_OWORD *)a1 = *a2;
          *(_OWORD *)(a1 + 16) = v123;
        }
        uint64_t v124 = (_OWORD *)(a1 + 32);
        uint64_t v125 = a2 + 2;
        uint64_t v126 = *((void *)a2 + 7);
        if (v126)
        {
          *(void *)(a1 + 56) = v126;
          (**(void (***)(_OWORD *, _OWORD *))(v126 - 8))(v124, v125);
        }
        else
        {
          long long v133 = a2[3];
          *uint64_t v124 = *v125;
          *(_OWORD *)(a1 + 48) = v133;
        }
        *(unsigned char *)(a1 + 256) = 34;
        return a1;
      case 0x23u:
        unint64_t v24 = *((void *)a2 + 3);
        if (v24 < 0xFFFFFFFF)
        {
          long long v118 = a2[1];
          *(_OWORD *)a1 = *a2;
          *(_OWORD *)(a1 + 16) = v118;
        }
        else
        {
          *(void *)(a1 + 24) = v24;
          (**(void (***)(uint64_t, long long *))(v24 - 8))(a1, a2);
        }
        *(unsigned char *)(a1 + 256) = 35;
        return a1;
      case 0x24u:
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *((void *)a2 + 1);
        char v21 = 36;
LABEL_66:
        *(unsigned char *)(a1 + 256) = v21;
        swift_bridgeObjectRetain();
        goto LABEL_114;
      case 0x25u:
        *(void *)a1 = *(void *)a2;
        char v22 = 37;
        goto LABEL_113;
      case 0x26u:
        *(_WORD *)a1 = *(_WORD *)a2;
        *(unsigned char *)(a1 + 256) = 38;
        return a1;
      case 0x27u:
        *(unsigned char *)a1 = *(unsigned char *)a2;
        *(unsigned char *)(a1 + 256) = 39;
        return a1;
      case 0x28u:
        *(_OWORD *)a1 = *a2;
        *(unsigned char *)(a1 + 256) = 40;
        return a1;
      case 0x29u:
        *(void *)a1 = *(void *)a2;
        *(unsigned char *)(a1 + 256) = 41;
        return a1;
      case 0x2Au:
        long long v25 = *a2;
        long long v26 = a2[1];
        long long v27 = a2[3];
        *(_OWORD *)(a1 + 32) = a2[2];
        *(_OWORD *)(a1 + 48) = v27;
        *(_OWORD *)a1 = v25;
        *(_OWORD *)(a1 + 16) = v26;
        *(unsigned char *)(a1 + 256) = 42;
        return a1;
      case 0x2Bu:
        long long v28 = a2[1];
        *(_OWORD *)a1 = *a2;
        *(_OWORD *)(a1 + 16) = v28;
        *(unsigned char *)(a1 + 256) = 43;
        return a1;
      case 0x2Cu:
        long long v29 = a2[1];
        *(_OWORD *)a1 = *a2;
        *(_OWORD *)(a1 + 16) = v29;
        *(unsigned char *)(a1 + 256) = 44;
        return a1;
      case 0x2Du:
        *(_OWORD *)a1 = *a2;
        *(unsigned char *)(a1 + 256) = 45;
        return a1;
      case 0x2Eu:
        *(_OWORD *)a1 = *a2;
        *(unsigned char *)(a1 + 256) = 46;
        return a1;
      case 0x2Fu:
        *(void *)a1 = *(void *)a2;
        *(unsigned char *)(a1 + 256) = 47;
        return a1;
      case 0x30u:
        *(_OWORD *)a1 = *a2;
        *(unsigned char *)(a1 + 256) = 48;
        return a1;
      case 0x31u:
        *(void *)a1 = *(void *)a2;
        *(unsigned char *)(a1 + 256) = 49;
        return a1;
      case 0x32u:
        long long v30 = a2[1];
        *(_OWORD *)a1 = *a2;
        *(_OWORD *)(a1 + 16) = v30;
        *(unsigned char *)(a1 + 256) = 50;
        return a1;
      case 0x33u:
        *(_OWORD *)a1 = *a2;
        *(unsigned char *)(a1 + 256) = 51;
        return a1;
      case 0x34u:
        long long v31 = *a2;
        long long v32 = a2[1];
        long long v33 = a2[3];
        *(_OWORD *)(a1 + 32) = a2[2];
        *(_OWORD *)(a1 + 48) = v33;
        *(_OWORD *)a1 = v31;
        *(_OWORD *)(a1 + 16) = v32;
        long long v34 = a2[4];
        long long v35 = a2[5];
        long long v36 = a2[7];
        *(_OWORD *)(a1 + 96) = a2[6];
        *(_OWORD *)(a1 + 112) = v36;
        *(_OWORD *)(a1 + 64) = v34;
        *(_OWORD *)(a1 + 80) = v35;
        long long v37 = a2[8];
        long long v38 = a2[9];
        long long v39 = a2[11];
        *(_OWORD *)(a1 + 160) = a2[10];
        *(_OWORD *)(a1 + 176) = v39;
        *(_OWORD *)(a1 + 128) = v37;
        *(_OWORD *)(a1 + 144) = v38;
        long long v40 = a2[12];
        long long v41 = a2[13];
        long long v42 = a2[15];
        *(_OWORD *)(a1 + 224) = a2[14];
        *(_OWORD *)(a1 + 240) = v42;
        *(_OWORD *)(a1 + 192) = v40;
        *(_OWORD *)(a1 + 208) = v41;
        *(unsigned char *)(a1 + 256) = 52;
        return a1;
      case 0x35u:
        long long v43 = *a2;
        long long v44 = a2[1];
        long long v45 = a2[3];
        *(_OWORD *)(a1 + 32) = a2[2];
        *(_OWORD *)(a1 + 48) = v45;
        *(_OWORD *)a1 = v43;
        *(_OWORD *)(a1 + 16) = v44;
        long long v46 = a2[4];
        long long v47 = a2[5];
        long long v48 = a2[7];
        *(_OWORD *)(a1 + 96) = a2[6];
        *(_OWORD *)(a1 + 112) = v48;
        *(_OWORD *)(a1 + 64) = v46;
        *(_OWORD *)(a1 + 80) = v47;
        *(unsigned char *)(a1 + 256) = 53;
        return a1;
      case 0x36u:
        long long v49 = *a2;
        long long v50 = a2[1];
        long long v51 = a2[3];
        *(_OWORD *)(a1 + 32) = a2[2];
        *(_OWORD *)(a1 + 48) = v51;
        *(_OWORD *)a1 = v49;
        *(_OWORD *)(a1 + 16) = v50;
        long long v52 = a2[4];
        long long v53 = a2[5];
        long long v54 = a2[7];
        *(_OWORD *)(a1 + 96) = a2[6];
        *(_OWORD *)(a1 + 112) = v54;
        *(_OWORD *)(a1 + 64) = v52;
        *(_OWORD *)(a1 + 80) = v53;
        long long v55 = a2[8];
        long long v56 = a2[9];
        long long v57 = a2[11];
        *(_OWORD *)(a1 + 160) = a2[10];
        *(_OWORD *)(a1 + 176) = v57;
        *(_OWORD *)(a1 + 128) = v55;
        *(_OWORD *)(a1 + 144) = v56;
        long long v58 = a2[12];
        long long v59 = a2[13];
        long long v60 = a2[15];
        *(_OWORD *)(a1 + 224) = a2[14];
        *(_OWORD *)(a1 + 240) = v60;
        *(_OWORD *)(a1 + 192) = v58;
        *(_OWORD *)(a1 + 208) = v59;
        *(unsigned char *)(a1 + 256) = 54;
        return a1;
      case 0x37u:
        long long v61 = *a2;
        long long v62 = a2[1];
        long long v63 = a2[3];
        *(_OWORD *)(a1 + 32) = a2[2];
        *(_OWORD *)(a1 + 48) = v63;
        *(_OWORD *)a1 = v61;
        *(_OWORD *)(a1 + 16) = v62;
        long long v64 = a2[4];
        long long v65 = a2[5];
        long long v66 = a2[7];
        *(_OWORD *)(a1 + 96) = a2[6];
        *(_OWORD *)(a1 + 112) = v66;
        *(_OWORD *)(a1 + 64) = v64;
        *(_OWORD *)(a1 + 80) = v65;
        *(unsigned char *)(a1 + 256) = 55;
        return a1;
      case 0x38u:
        long long v67 = a2[1];
        *(_OWORD *)a1 = *a2;
        *(_OWORD *)(a1 + 16) = v67;
        long long v68 = a2[2];
        long long v69 = a2[3];
        long long v70 = a2[5];
        *(_OWORD *)(a1 + 64) = a2[4];
        *(_OWORD *)(a1 + 80) = v70;
        *(_OWORD *)(a1 + 32) = v68;
        *(_OWORD *)(a1 + 48) = v69;
        *(unsigned char *)(a1 + 256) = 56;
        return a1;
      case 0x39u:
        long long v71 = *a2;
        long long v72 = a2[2];
        *(_OWORD *)(a1 + 16) = a2[1];
        *(_OWORD *)(a1 + 32) = v72;
        *(_OWORD *)a1 = v71;
        *(unsigned char *)(a1 + 256) = 57;
        return a1;
      case 0x3Au:
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *((void *)a2 + 1);
        long long v73 = a2[1];
        *(unsigned char *)(a1 + 32) = *((unsigned char *)a2 + 32);
        *(_OWORD *)(a1 + 16) = v73;
        long long v16 = (void *)*((void *)a2 + 5);
        *(void *)(a1 + 40) = v16;
        *(unsigned char *)(a1 + 48) = *((unsigned char *)a2 + 48);
        char v17 = 58;
LABEL_89:
        *(unsigned char *)(a1 + 256) = v17;
        id v74 = v16;
        return a1;
      case 0x3Bu:
        long long v75 = *a2;
        long long v76 = a2[2];
        *(_OWORD *)(a1 + 16) = a2[1];
        *(_OWORD *)(a1 + 32) = v76;
        *(_OWORD *)a1 = v75;
        long long v77 = a2[3];
        long long v78 = a2[4];
        long long v79 = a2[6];
        *(_OWORD *)(a1 + 80) = a2[5];
        *(_OWORD *)(a1 + 96) = v79;
        *(_OWORD *)(a1 + 48) = v77;
        *(_OWORD *)(a1 + 64) = v78;
        long long v80 = a2[7];
        long long v81 = a2[8];
        long long v82 = a2[9];
        *(unsigned char *)(a1 + 160) = *((unsigned char *)a2 + 160);
        *(_OWORD *)(a1 + 128) = v81;
        *(_OWORD *)(a1 + 144) = v82;
        *(_OWORD *)(a1 + 112) = v80;
        *(unsigned char *)(a1 + 256) = 59;
        return a1;
      case 0x3Cu:
        *(_OWORD *)a1 = *a2;
        long long v83 = a2[1];
        long long v84 = a2[2];
        long long v85 = a2[4];
        *(_OWORD *)(a1 + 48) = a2[3];
        *(_OWORD *)(a1 + 64) = v85;
        *(_OWORD *)(a1 + 16) = v83;
        *(_OWORD *)(a1 + 32) = v84;
        long long v86 = a2[5];
        long long v87 = a2[6];
        long long v88 = a2[8];
        *(_OWORD *)(a1 + 112) = a2[7];
        *(_OWORD *)(a1 + 128) = v88;
        *(_OWORD *)(a1 + 80) = v86;
        *(_OWORD *)(a1 + 96) = v87;
        long long v89 = a2[9];
        long long v90 = a2[10];
        long long v91 = a2[11];
        *(unsigned char *)(a1 + 192) = *((unsigned char *)a2 + 192);
        *(_OWORD *)(a1 + 160) = v90;
        *(_OWORD *)(a1 + 176) = v91;
        *(_OWORD *)(a1 + 144) = v89;
        *(unsigned char *)(a1 + 256) = 60;
        return a1;
      case 0x3Du:
        long long v92 = *a2;
        long long v93 = a2[1];
        long long v94 = a2[3];
        *(_OWORD *)(a1 + 32) = a2[2];
        *(_OWORD *)(a1 + 48) = v94;
        *(_OWORD *)a1 = v92;
        *(_OWORD *)(a1 + 16) = v93;
        *(unsigned char *)(a1 + 256) = 61;
        return a1;
      case 0x3Eu:
        long long v95 = a2[1];
        *(_OWORD *)a1 = *a2;
        *(_OWORD *)(a1 + 16) = v95;
        *(unsigned char *)(a1 + 256) = 62;
        return a1;
      case 0x3Fu:
        long long v96 = a2[1];
        *(_OWORD *)a1 = *a2;
        *(_OWORD *)(a1 + 16) = v96;
        long long v97 = a2[3];
        *(_OWORD *)(a1 + 32) = a2[2];
        *(_OWORD *)(a1 + 48) = v97;
        id v98 = (void *)*((void *)a2 + 8);
        *(void *)(a1 + 64) = v98;
        id v99 = (void *)*((void *)a2 + 9);
        *(void *)(a1 + 72) = v99;
        uint64_t v100 = (void *)*((void *)a2 + 10);
        *(void *)(a1 + 80) = v100;
        long long v101 = (void *)*((void *)a2 + 11);
        *(void *)(a1 + 88) = v101;
        uint64_t v102 = *((void *)a2 + 15);
        id v103 = v98;
        id v104 = v99;
        id v105 = v100;
        id v106 = v101;
        if (v102)
        {
          *(void *)(a1 + 120) = v102;
          *(void *)(a1 + 128) = *((void *)a2 + 16);
          (**(void (***)(uint64_t, uint64_t, uint64_t))(v102 - 8))(a1 + 96, (uint64_t)(a2 + 6), v102);
        }
        else
        {
          long long v127 = a2[6];
          long long v128 = a2[7];
          *(void *)(a1 + 128) = *((void *)a2 + 16);
          *(_OWORD *)(a1 + 96) = v127;
          *(_OWORD *)(a1 + 112) = v128;
        }
        *(void *)(a1 + 136) = *((void *)a2 + 17);
        *(void *)(a1 + 144) = *((void *)a2 + 18);
        char v22 = 63;
        goto LABEL_113;
      case 0x40u:
        long long v107 = a2[1];
        *(_OWORD *)a1 = *a2;
        *(_OWORD *)(a1 + 16) = v107;
        id v108 = (void *)*((void *)a2 + 4);
        *(void *)(a1 + 32) = v108;
        uint64_t v109 = (void *)*((void *)a2 + 5);
        *(void *)(a1 + 40) = v109;
        uint64_t v110 = (void *)*((void *)a2 + 6);
        *(void *)(a1 + 48) = v110;
        long long v111 = (void *)*((void *)a2 + 7);
        *(void *)(a1 + 56) = v111;
        uint64_t v112 = *((void *)a2 + 11);
        id v113 = v108;
        id v114 = v109;
        id v115 = v110;
        id v116 = v111;
        if (v112)
        {
          *(void *)(a1 + 88) = v112;
          *(void *)(a1 + 96) = *((void *)a2 + 12);
          (**(void (***)(uint64_t, uint64_t, uint64_t))(v112 - 8))(a1 + 64, (uint64_t)(a2 + 4), v112);
        }
        else
        {
          long long v129 = a2[4];
          long long v130 = a2[5];
          *(void *)(a1 + 96) = *((void *)a2 + 12);
          *(_OWORD *)(a1 + 64) = v129;
          *(_OWORD *)(a1 + 80) = v130;
        }
        *(void *)(a1 + 104) = *((void *)a2 + 13);
        *(void *)(a1 + 112) = *((void *)a2 + 14);
        char v22 = 64;
LABEL_113:
        *(unsigned char *)(a1 + 256) = v22;
LABEL_114:
        swift_bridgeObjectRetain();
        break;
      default:
        uint64_t v6 = *((void *)a2 + 3);
        if (v6)
        {
          *(void *)(a1 + 24) = v6;
          (**(void (***)(uint64_t, long long *))(v6 - 8))(a1, a2);
        }
        else
        {
          long long v119 = a2[1];
          *(_OWORD *)a1 = *a2;
          *(_OWORD *)(a1 + 16) = v119;
        }
        uint64_t v120 = (_OWORD *)(a1 + 32);
        unint64_t v121 = a2 + 2;
        uint64_t v122 = *((void *)a2 + 7);
        if (v122)
        {
          *(void *)(a1 + 56) = v122;
          (**(void (***)(_OWORD *, _OWORD *))(v122 - 8))(v120, v121);
        }
        else
        {
          long long v132 = a2[3];
          *uint64_t v120 = *v121;
          *(_OWORD *)(a1 + 48) = v132;
        }
        *(unsigned char *)(a1 + 256) = 0;
        break;
    }
  }
  return a1;
}

void *initializeWithTake for CRLLayerPropertyTransitionDescriptor(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x101uLL);
}

uint64_t assignWithTake for CRLLayerPropertyTransitionDescriptor(uint64_t a1, long long *a2)
{
  if ((long long *)a1 != a2)
  {
    unsigned int v4 = *(unsigned __int8 *)(a1 + 256);
    if (v4 >= 0x41) {
      unsigned int v4 = *(_DWORD *)a1 + 65;
    }
    switch(v4)
    {
      case 1u:
      case 0x23u:
        if (*(void *)(a1 + 24) >= 0xFFFFFFFFuLL) {
          _s8Freeform26AnyCRLCommandChangeContextVwxx_0(a1);
        }
        break;
      case 2u:
      case 3u:
      case 4u:
      case 5u:
      case 6u:
      case 7u:
      case 8u:
      case 9u:
      case 0xAu:
      case 0xBu:
      case 0xCu:
      case 0xDu:
      case 0xEu:
      case 0xFu:
      case 0x10u:
      case 0x11u:
      case 0x16u:
      case 0x17u:
      case 0x18u:
      case 0x19u:
      case 0x1Au:
      case 0x1Bu:
      case 0x26u:
      case 0x27u:
      case 0x28u:
      case 0x29u:
      case 0x2Au:
      case 0x2Bu:
      case 0x2Cu:
      case 0x2Du:
      case 0x2Eu:
      case 0x2Fu:
      case 0x30u:
      case 0x31u:
      case 0x32u:
      case 0x33u:
      case 0x34u:
      case 0x35u:
      case 0x36u:
      case 0x37u:
      case 0x38u:
      case 0x39u:
      case 0x3Bu:
      case 0x3Cu:
      case 0x3Du:
      case 0x3Eu:
        break;
      case 0x12u:
      case 0x14u:
      case 0x1Cu:
      case 0x1Eu:

        break;
      case 0x13u:
      case 0x15u:
      case 0x1Du:
      case 0x1Fu:

        break;
      case 0x20u:
      case 0x24u:
        swift_bridgeObjectRelease();
        goto LABEL_24;
      case 0x21u:
      case 0x25u:
        goto LABEL_24;
      case 0x3Au:

        break;
      case 0x3Fu:

        if (*(void *)(a1 + 120)) {
          _s8Freeform26AnyCRLCommandChangeContextVwxx_0(a1 + 96);
        }
        goto LABEL_24;
      case 0x40u:

        if (*(void *)(a1 + 88)) {
          _s8Freeform26AnyCRLCommandChangeContextVwxx_0(a1 + 64);
        }
LABEL_24:
        swift_bridgeObjectRelease();
        break;
      default:
        if (*(void *)(a1 + 24)) {
          _s8Freeform26AnyCRLCommandChangeContextVwxx_0(a1);
        }
        if (*(void *)(a1 + 56)) {
          _s8Freeform26AnyCRLCommandChangeContextVwxx_0(a1 + 32);
        }
        break;
    }
    unsigned int v5 = *((unsigned __int8 *)a2 + 256);
    if (v5 >= 0x41) {
      unsigned int v5 = *(_DWORD *)a2 + 65;
    }
    switch(v5)
    {
      case 1u:
        long long v10 = a2[1];
        *(_OWORD *)a1 = *a2;
        *(_OWORD *)(a1 + 16) = v10;
        char v6 = 1;
        goto LABEL_91;
      case 2u:
        long long v11 = a2[1];
        *(_OWORD *)a1 = *a2;
        *(_OWORD *)(a1 + 16) = v11;
        long long v12 = a2[3];
        *(_OWORD *)(a1 + 32) = a2[2];
        *(_OWORD *)(a1 + 48) = v12;
        char v6 = 2;
        goto LABEL_91;
      case 3u:
        long long v13 = a2[1];
        *(_OWORD *)a1 = *a2;
        *(_OWORD *)(a1 + 16) = v13;
        char v6 = 3;
        goto LABEL_91;
      case 4u:
        long long v14 = a2[1];
        *(_OWORD *)a1 = *a2;
        *(_OWORD *)(a1 + 16) = v14;
        char v6 = 4;
        goto LABEL_91;
      case 5u:
        *(_OWORD *)a1 = *a2;
        char v6 = 5;
        goto LABEL_91;
      case 6u:
        *(void *)a1 = *(void *)a2;
        char v6 = 6;
        goto LABEL_91;
      case 7u:
        *(_DWORD *)a1 = *(_DWORD *)a2;
        char v6 = 7;
        goto LABEL_91;
      case 8u:
        *(_WORD *)a1 = *(_WORD *)a2;
        char v6 = 8;
        goto LABEL_91;
      case 9u:
        *(unsigned char *)a1 = *(unsigned char *)a2;
        char v6 = 9;
        goto LABEL_91;
      case 0xAu:
        *(_WORD *)a1 = *(_WORD *)a2;
        char v6 = 10;
        goto LABEL_91;
      case 0xBu:
        *(unsigned char *)a1 = *(unsigned char *)a2;
        char v6 = 11;
        goto LABEL_91;
      case 0xCu:
        *(_WORD *)a1 = *(_WORD *)a2;
        char v6 = 12;
        goto LABEL_91;
      case 0xDu:
        *(unsigned char *)a1 = *(unsigned char *)a2;
        char v6 = 13;
        goto LABEL_91;
      case 0xEu:
        *(_OWORD *)a1 = *a2;
        char v6 = 14;
        goto LABEL_91;
      case 0xFu:
        *(void *)a1 = *(void *)a2;
        char v6 = 15;
        goto LABEL_91;
      case 0x10u:
        *(_OWORD *)a1 = *a2;
        char v6 = 16;
        goto LABEL_91;
      case 0x11u:
        *(void *)a1 = *(void *)a2;
        char v6 = 17;
        goto LABEL_91;
      case 0x12u:
        *(_OWORD *)a1 = *a2;
        char v6 = 18;
        goto LABEL_91;
      case 0x13u:
        *(void *)a1 = *(void *)a2;
        char v6 = 19;
        goto LABEL_91;
      case 0x14u:
        *(_OWORD *)a1 = *a2;
        char v6 = 20;
        goto LABEL_91;
      case 0x15u:
        *(void *)a1 = *(void *)a2;
        char v6 = 21;
        goto LABEL_91;
      case 0x16u:
        *(void *)a1 = *(void *)a2;
        char v6 = 22;
        goto LABEL_91;
      case 0x17u:
        *(_DWORD *)a1 = *(_DWORD *)a2;
        char v6 = 23;
        goto LABEL_91;
      case 0x18u:
        *(_OWORD *)a1 = *a2;
        char v6 = 24;
        goto LABEL_91;
      case 0x19u:
        *(void *)a1 = *(void *)a2;
        char v6 = 25;
        goto LABEL_91;
      case 0x1Au:
        long long v15 = a2[1];
        *(_OWORD *)a1 = *a2;
        *(_OWORD *)(a1 + 16) = v15;
        char v6 = 26;
        goto LABEL_91;
      case 0x1Bu:
        *(_OWORD *)a1 = *a2;
        char v6 = 27;
        goto LABEL_91;
      case 0x1Cu:
        *(_OWORD *)a1 = *a2;
        char v6 = 28;
        goto LABEL_91;
      case 0x1Du:
        *(void *)a1 = *(void *)a2;
        char v6 = 29;
        goto LABEL_91;
      case 0x1Eu:
        *(_OWORD *)a1 = *a2;
        char v6 = 30;
        goto LABEL_91;
      case 0x1Fu:
        *(void *)a1 = *(void *)a2;
        char v6 = 31;
        goto LABEL_91;
      case 0x20u:
        *(_OWORD *)a1 = *a2;
        char v6 = 32;
        goto LABEL_91;
      case 0x21u:
        *(void *)a1 = *(void *)a2;
        char v6 = 33;
        goto LABEL_91;
      case 0x22u:
        long long v16 = a2[1];
        *(_OWORD *)a1 = *a2;
        *(_OWORD *)(a1 + 16) = v16;
        long long v17 = a2[3];
        *(_OWORD *)(a1 + 32) = a2[2];
        *(_OWORD *)(a1 + 48) = v17;
        char v6 = 34;
        goto LABEL_91;
      case 0x23u:
        long long v18 = a2[1];
        *(_OWORD *)a1 = *a2;
        *(_OWORD *)(a1 + 16) = v18;
        char v6 = 35;
        goto LABEL_91;
      case 0x24u:
        *(_OWORD *)a1 = *a2;
        char v6 = 36;
        goto LABEL_91;
      case 0x25u:
        *(void *)a1 = *(void *)a2;
        char v6 = 37;
        goto LABEL_91;
      case 0x26u:
        *(_WORD *)a1 = *(_WORD *)a2;
        char v6 = 38;
        goto LABEL_91;
      case 0x27u:
        *(unsigned char *)a1 = *(unsigned char *)a2;
        char v6 = 39;
        goto LABEL_91;
      case 0x28u:
        *(_OWORD *)a1 = *a2;
        char v6 = 40;
        goto LABEL_91;
      case 0x29u:
        *(void *)a1 = *(void *)a2;
        char v6 = 41;
        goto LABEL_91;
      case 0x2Au:
        long long v19 = a2[1];
        *(_OWORD *)a1 = *a2;
        *(_OWORD *)(a1 + 16) = v19;
        long long v20 = a2[3];
        *(_OWORD *)(a1 + 32) = a2[2];
        *(_OWORD *)(a1 + 48) = v20;
        char v6 = 42;
        goto LABEL_91;
      case 0x2Bu:
        long long v21 = a2[1];
        *(_OWORD *)a1 = *a2;
        *(_OWORD *)(a1 + 16) = v21;
        char v6 = 43;
        goto LABEL_91;
      case 0x2Cu:
        long long v22 = a2[1];
        *(_OWORD *)a1 = *a2;
        *(_OWORD *)(a1 + 16) = v22;
        char v6 = 44;
        goto LABEL_91;
      case 0x2Du:
        *(_OWORD *)a1 = *a2;
        char v6 = 45;
        goto LABEL_91;
      case 0x2Eu:
        *(_OWORD *)a1 = *a2;
        char v6 = 46;
        goto LABEL_91;
      case 0x2Fu:
        *(void *)a1 = *(void *)a2;
        char v6 = 47;
        goto LABEL_91;
      case 0x30u:
        *(_OWORD *)a1 = *a2;
        char v6 = 48;
        goto LABEL_91;
      case 0x31u:
        *(void *)a1 = *(void *)a2;
        char v6 = 49;
        goto LABEL_91;
      case 0x32u:
        long long v23 = a2[1];
        *(_OWORD *)a1 = *a2;
        *(_OWORD *)(a1 + 16) = v23;
        char v6 = 50;
        goto LABEL_91;
      case 0x33u:
        *(_OWORD *)a1 = *a2;
        char v6 = 51;
        goto LABEL_91;
      case 0x34u:
        long long v24 = a2[13];
        *(_OWORD *)(a1 + 192) = a2[12];
        *(_OWORD *)(a1 + 208) = v24;
        long long v25 = a2[15];
        *(_OWORD *)(a1 + 224) = a2[14];
        *(_OWORD *)(a1 + 240) = v25;
        long long v26 = a2[9];
        *(_OWORD *)(a1 + 128) = a2[8];
        *(_OWORD *)(a1 + 144) = v26;
        long long v27 = a2[11];
        *(_OWORD *)(a1 + 160) = a2[10];
        *(_OWORD *)(a1 + 176) = v27;
        long long v28 = a2[5];
        *(_OWORD *)(a1 + 64) = a2[4];
        *(_OWORD *)(a1 + 80) = v28;
        long long v29 = a2[7];
        *(_OWORD *)(a1 + 96) = a2[6];
        *(_OWORD *)(a1 + 112) = v29;
        long long v30 = a2[1];
        *(_OWORD *)a1 = *a2;
        *(_OWORD *)(a1 + 16) = v30;
        long long v8 = a2[2];
        long long v9 = a2[3];
        char v6 = 52;
        goto LABEL_90;
      case 0x35u:
        long long v31 = a2[5];
        *(_OWORD *)(a1 + 64) = a2[4];
        *(_OWORD *)(a1 + 80) = v31;
        long long v32 = a2[7];
        *(_OWORD *)(a1 + 96) = a2[6];
        *(_OWORD *)(a1 + 112) = v32;
        long long v33 = a2[1];
        *(_OWORD *)a1 = *a2;
        *(_OWORD *)(a1 + 16) = v33;
        long long v8 = a2[2];
        long long v9 = a2[3];
        char v6 = 53;
        goto LABEL_90;
      case 0x36u:
        long long v34 = a2[13];
        *(_OWORD *)(a1 + 192) = a2[12];
        *(_OWORD *)(a1 + 208) = v34;
        long long v35 = a2[15];
        *(_OWORD *)(a1 + 224) = a2[14];
        *(_OWORD *)(a1 + 240) = v35;
        long long v36 = a2[9];
        *(_OWORD *)(a1 + 128) = a2[8];
        *(_OWORD *)(a1 + 144) = v36;
        long long v37 = a2[11];
        *(_OWORD *)(a1 + 160) = a2[10];
        *(_OWORD *)(a1 + 176) = v37;
        long long v38 = a2[5];
        *(_OWORD *)(a1 + 64) = a2[4];
        *(_OWORD *)(a1 + 80) = v38;
        long long v39 = a2[7];
        *(_OWORD *)(a1 + 96) = a2[6];
        *(_OWORD *)(a1 + 112) = v39;
        long long v40 = a2[1];
        *(_OWORD *)a1 = *a2;
        *(_OWORD *)(a1 + 16) = v40;
        long long v8 = a2[2];
        long long v9 = a2[3];
        char v6 = 54;
        goto LABEL_90;
      case 0x37u:
        long long v41 = a2[5];
        *(_OWORD *)(a1 + 64) = a2[4];
        *(_OWORD *)(a1 + 80) = v41;
        long long v42 = a2[7];
        *(_OWORD *)(a1 + 96) = a2[6];
        *(_OWORD *)(a1 + 112) = v42;
        long long v43 = a2[1];
        *(_OWORD *)a1 = *a2;
        *(_OWORD *)(a1 + 16) = v43;
        long long v8 = a2[2];
        long long v9 = a2[3];
        char v6 = 55;
        goto LABEL_90;
      case 0x38u:
        long long v44 = a2[3];
        *(_OWORD *)(a1 + 32) = a2[2];
        *(_OWORD *)(a1 + 48) = v44;
        long long v45 = a2[5];
        *(_OWORD *)(a1 + 64) = a2[4];
        *(_OWORD *)(a1 + 80) = v45;
        long long v46 = *a2;
        long long v47 = a2[1];
        char v6 = 56;
        goto LABEL_88;
      case 0x39u:
        long long v48 = a2[1];
        *(_OWORD *)a1 = *a2;
        *(_OWORD *)(a1 + 16) = v48;
        *(_OWORD *)(a1 + 32) = a2[2];
        char v6 = 57;
        goto LABEL_91;
      case 0x3Au:
        long long v49 = a2[1];
        *(_OWORD *)a1 = *a2;
        *(_OWORD *)(a1 + 16) = v49;
        *(_OWORD *)(a1 + 32) = a2[2];
        *(unsigned char *)(a1 + 48) = *((unsigned char *)a2 + 48);
        char v6 = 58;
        goto LABEL_91;
      case 0x3Bu:
        long long v50 = a2[9];
        *(_OWORD *)(a1 + 128) = a2[8];
        *(_OWORD *)(a1 + 144) = v50;
        *(unsigned char *)(a1 + 160) = *((unsigned char *)a2 + 160);
        long long v51 = a2[5];
        *(_OWORD *)(a1 + 64) = a2[4];
        *(_OWORD *)(a1 + 80) = v51;
        long long v52 = a2[7];
        *(_OWORD *)(a1 + 96) = a2[6];
        *(_OWORD *)(a1 + 112) = v52;
        long long v53 = a2[1];
        *(_OWORD *)a1 = *a2;
        *(_OWORD *)(a1 + 16) = v53;
        long long v54 = a2[3];
        char v6 = 59;
        *(_OWORD *)(a1 + 32) = a2[2];
        *(_OWORD *)(a1 + 48) = v54;
        goto LABEL_91;
      case 0x3Cu:
        long long v55 = a2[11];
        *(_OWORD *)(a1 + 160) = a2[10];
        *(_OWORD *)(a1 + 176) = v55;
        *(unsigned char *)(a1 + 192) = *((unsigned char *)a2 + 192);
        long long v56 = a2[7];
        *(_OWORD *)(a1 + 96) = a2[6];
        *(_OWORD *)(a1 + 112) = v56;
        long long v57 = a2[9];
        *(_OWORD *)(a1 + 128) = a2[8];
        *(_OWORD *)(a1 + 144) = v57;
        long long v58 = a2[3];
        *(_OWORD *)(a1 + 32) = a2[2];
        *(_OWORD *)(a1 + 48) = v58;
        long long v59 = a2[5];
        *(_OWORD *)(a1 + 64) = a2[4];
        *(_OWORD *)(a1 + 80) = v59;
        long long v60 = a2[1];
        char v6 = 60;
        *(_OWORD *)a1 = *a2;
        *(_OWORD *)(a1 + 16) = v60;
        goto LABEL_91;
      case 0x3Du:
        long long v61 = a2[1];
        *(_OWORD *)a1 = *a2;
        *(_OWORD *)(a1 + 16) = v61;
        long long v62 = a2[3];
        *(_OWORD *)(a1 + 32) = a2[2];
        *(_OWORD *)(a1 + 48) = v62;
        char v6 = 61;
        goto LABEL_91;
      case 0x3Eu:
        long long v63 = a2[1];
        *(_OWORD *)a1 = *a2;
        *(_OWORD *)(a1 + 16) = v63;
        char v6 = 62;
        goto LABEL_91;
      case 0x3Fu:
        long long v64 = a2[7];
        *(_OWORD *)(a1 + 96) = a2[6];
        *(_OWORD *)(a1 + 112) = v64;
        *(_OWORD *)(a1 + 128) = a2[8];
        *(void *)(a1 + 144) = *((void *)a2 + 18);
        long long v65 = a2[3];
        *(_OWORD *)(a1 + 32) = a2[2];
        *(_OWORD *)(a1 + 48) = v65;
        long long v66 = a2[5];
        *(_OWORD *)(a1 + 64) = a2[4];
        *(_OWORD *)(a1 + 80) = v66;
        long long v46 = *a2;
        long long v47 = a2[1];
        char v6 = 63;
LABEL_88:
        *(_OWORD *)a1 = v46;
        *(_OWORD *)(a1 + 16) = v47;
        goto LABEL_91;
      case 0x40u:
        long long v67 = a2[5];
        *(_OWORD *)(a1 + 64) = a2[4];
        *(_OWORD *)(a1 + 80) = v67;
        *(_OWORD *)(a1 + 96) = a2[6];
        *(void *)(a1 + 112) = *((void *)a2 + 14);
        long long v68 = a2[1];
        *(_OWORD *)a1 = *a2;
        *(_OWORD *)(a1 + 16) = v68;
        long long v8 = a2[2];
        long long v9 = a2[3];
        char v6 = 64;
        goto LABEL_90;
      default:
        char v6 = 0;
        long long v7 = a2[1];
        *(_OWORD *)a1 = *a2;
        *(_OWORD *)(a1 + 16) = v7;
        long long v8 = a2[2];
        long long v9 = a2[3];
LABEL_90:
        *(_OWORD *)(a1 + 32) = v8;
        *(_OWORD *)(a1 + 48) = v9;
LABEL_91:
        *(unsigned char *)(a1 + 256) = v6;
        break;
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for CRLLayerPropertyTransitionDescriptor(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xC0 && *(unsigned char *)(a1 + 257)) {
    return (*(_DWORD *)a1 + 192);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 256);
  if (v3 >= 0x41) {
    return (v3 ^ 0xFF) + 1;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for CRLLayerPropertyTransitionDescriptor(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xBF)
  {
    *(unsigned char *)(result + 256) = 0;
    *(_OWORD *)(result + 224) = 0u;
    *(_OWORD *)(result + 240) = 0u;
    *(_OWORD *)(result + 192) = 0u;
    *(_OWORD *)(result + 208) = 0u;
    *(_OWORD *)(result + 160) = 0u;
    *(_OWORD *)(result + 176) = 0u;
    *(_OWORD *)(result + 128) = 0u;
    *(_OWORD *)(result + 144) = 0u;
    *(_OWORD *)(result + 96) = 0u;
    *(_OWORD *)(result + 112) = 0u;
    *(_OWORD *)(result + 64) = 0u;
    *(_OWORD *)(result + 80) = 0u;
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)(result + 48) = 0u;
    *(_OWORD *)unint64_t result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)unint64_t result = a2 - 192;
    if (a3 >= 0xC0) {
      *(unsigned char *)(result + 257) = 1;
    }
  }
  else
  {
    if (a3 >= 0xC0) {
      *(unsigned char *)(result + 257) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 256) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1009FC6D4(uint64_t a1)
{
  uint64_t result = *(unsigned __int8 *)(a1 + 256);
  if (result >= 0x41) {
    return (*(_DWORD *)a1 + 65);
  }
  return result;
}

uint64_t sub_1009FC6F0(uint64_t result, unsigned int a2)
{
  if (a2 > 0x40)
  {
    *(_OWORD *)(result + 224) = 0u;
    *(_OWORD *)(result + 240) = 0u;
    *(_OWORD *)(result + 192) = 0u;
    *(_OWORD *)(result + 208) = 0u;
    *(_OWORD *)(result + 160) = 0u;
    *(_OWORD *)(result + 176) = 0u;
    *(_OWORD *)(result + 128) = 0u;
    *(_OWORD *)(result + 144) = 0u;
    *(_OWORD *)(result + 96) = 0u;
    *(_OWORD *)(result + 112) = 0u;
    *(_OWORD *)(result + 64) = 0u;
    *(_OWORD *)(result + 80) = 0u;
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)(result + 48) = 0u;
    *(_OWORD *)uint64_t result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)uint64_t result = a2 - 65;
    LOBYTE(a2) = 65;
  }
  *(unsigned char *)(result + 256) = a2;
  return result;
}

ValueMetadata *type metadata accessor for CRLLayerPropertyTransitionDescriptor()
{
  return &type metadata for CRLLayerPropertyTransitionDescriptor;
}

uint64_t sub_1009FC740(char a1)
{
  uint64_t result = 0x73746E65746E6F63;
  switch(a1)
  {
    case 3:
      return 0x7974696361706FLL;
    case 4:
      return 0x6E65646469487369;
    case 5:
      return 0x426F54736B73616DLL;
    case 6:
      return 0x656C62756F447369;
    case 7:
      uint64_t v3 = 0x72656E726F63;
      return v3 & 0xFFFFFFFFFFFFLL | 0x6152000000000000;
    case 8:
      return 0x6957726564726F62;
    case 9:
      uint64_t v4 = 0x726564726F62;
      goto LABEL_15;
    case 10:
      return 0x756F72676B636162;
    case 11:
      return 0x704F776F64616873;
    case 12:
      uint64_t v3 = 0x776F64616873;
      return v3 & 0xFFFFFFFFFFFFLL | 0x6152000000000000;
    case 13:
      return 0x664F776F64616873;
    case 14:
      uint64_t v4 = 0x776F64616873;
LABEL_15:
      uint64_t result = v4 & 0xFFFFFFFFFFFFLL | 0x6F43000000000000;
      break;
    case 15:
      uint64_t result = 0x6150776F64616873;
      break;
    case 16:
      uint64_t result = 0x737265746C6966;
      break;
    case 17:
    case 18:
    case 27:
      uint64_t result = 0xD000000000000011;
      break;
    case 19:
      uint64_t result = 0x6152646C756F6873;
      break;
    case 20:
      uint64_t result = 0xD000000000000012;
      break;
    case 21:
      uint64_t result = 0x73646E756F62;
      break;
    case 22:
      uint64_t result = 0x6E6F697469736F70;
      break;
    case 23:
      uint64_t result = 0x6F697469736F507ALL;
      break;
    case 24:
    case 25:
      uint64_t result = 0x6F50726F68636E61;
      break;
    case 26:
      uint64_t result = 0x726F66736E617274;
      break;
    case 28:
      uint64_t result = 0xD000000000000010;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1009FCAC8()
{
  sub_1006006C8(v0, (uint64_t)v3);
  uint64_t result = 1;
  switch(v5[192])
  {
    case 1:
      sub_10054BD5C((uint64_t)v3);
      return 0;
    case 2:
    case 3:
      return result;
    case 4:
    case 5:
      return 2;
    case 6:
    case 7:
      return 3;
    case 8:
    case 9:
      return 4;
    case 0xA:
    case 0xB:
      return 5;
    case 0xC:
    case 0xD:
      return 6;
    case 0xE:
    case 0xF:
      return 7;
    case 0x10:
    case 0x11:
      return 8;
    case 0x12:
    case 0x13:
      sub_10054BD5C((uint64_t)v3);
      return 9;
    case 0x14:
    case 0x15:
      sub_10054BD5C((uint64_t)v3);
      return 10;
    case 0x16:
    case 0x17:
      return 11;
    case 0x18:
    case 0x19:
      return 12;
    case 0x1A:
    case 0x1B:
      return 13;
    case 0x1C:
    case 0x1D:
      sub_10054BD5C((uint64_t)v3);
      return 14;
    case 0x1E:
    case 0x1F:
      sub_10054BD5C((uint64_t)v3);
      return 15;
    case 0x20:
    case 0x21:
      sub_10054BD5C((uint64_t)v3);
      return 16;
    case 0x22:
      sub_10052E2B0((uint64_t)v4);
      sub_10052E2B0((uint64_t)v3);
      return 17;
    case 0x23:
      sub_10054BD5C((uint64_t)v3);
      return 17;
    case 0x24:
    case 0x25:
      sub_10054BD5C((uint64_t)v3);
      return 18;
    case 0x26:
    case 0x27:
      return 19;
    case 0x28:
    case 0x29:
      return 20;
    case 0x2A:
    case 0x2B:
      return 21;
    case 0x2C:
    case 0x2D:
      return 22;
    case 0x2E:
    case 0x2F:
      return 23;
    case 0x30:
    case 0x31:
      return 24;
    case 0x32:
    case 0x33:
      return 25;
    case 0x34:
    case 0x35:
    case 0x3B:
    case 0x3C:
    case 0x3D:
    case 0x3E:
      return 26;
    case 0x36:
    case 0x37:
      return 27;
    case 0x38:
    case 0x39:
      goto LABEL_34;
    case 0x3A:
      sub_10054BD5C((uint64_t)v3);
      return 26;
    case 0x3F:
      unsigned int v2 = v5;
      goto LABEL_33;
    case 0x40:
      unsigned int v2 = v4;
LABEL_33:
      sub_1005CFCF0((uint64_t)v2);
LABEL_34:
      uint64_t result = 28;
      break;
    default:
      sub_10052E2B0((uint64_t)v4);
      sub_10052E2B0((uint64_t)v3);
      uint64_t result = 0;
      break;
  }
  return result;
}

void sub_1009FCD9C(uint64_t a1@<X8>, float a2@<S0>)
{
  sub_1006006C8(v2, (uint64_t)&v102);
  switch(v118)
  {
    case 1:
    case 35:
      sub_10051B3EC((uint64_t)&v102, (uint64_t)&v94, &qword_101672BF0);
      long long v86 = 0u;
      long long v87 = 0u;
      sub_100557A70((uint64_t)&v94, (uint64_t)&v78);
      *(void *)(a1 + 24) = &type metadata for InterpolatableAny;
      uint64_t v22 = swift_allocObject();
      *(void *)a1 = v22;
      sub_100A64B1C((uint64_t)&v78, v22 + 16, a2);
      sub_100A0121C((uint64_t)&v78);
      sub_100A0121C((uint64_t)&v86);
      goto LABEL_17;
    case 2:
    case 42:
      double v23 = sub_100065E1C(*(double *)&v102, *((double *)&v102 + 1), *(double *)&v103, *((double *)&v103 + 1), *(double *)&v104, *((double *)&v104 + 1), *(double *)&v105, *((double *)&v105 + 1), a2);
      uint64_t v25 = v24;
      uint64_t v27 = v26;
      uint64_t v29 = v28;
      type metadata accessor for CGRect(0);
      *(void *)(a1 + 24) = v30;
      long long v31 = (double *)swift_allocObject();
      *(void *)a1 = v31;
      v31[2] = v23;
      *((void *)v31 + 3) = v25;
      *((void *)v31 + 4) = v27;
      *((void *)v31 + 5) = v29;
      return;
    case 3:
    case 43:
      long long v67 = v102;
      long long v32 = v103;
      long long v94 = 0u;
      long long v95 = 0u;
      type metadata accessor for CGRect(0);
      *((void *)&v87 + 1) = v33;
      uint64_t v34 = swift_allocObject();
      *(void *)&long long v86 = v34;
      *(_OWORD *)(v34 + 16) = v67;
      *(_OWORD *)(v34 + 32) = v32;
      goto LABEL_56;
    case 4:
    case 44:
    case 50:
      double v10 = sub_100065E00(*(double *)&v102, *((double *)&v102 + 1), *(double *)&v103, *((double *)&v103 + 1), a2);
      uint64_t v12 = v11;
      type metadata accessor for CGPoint(0);
      goto LABEL_32;
    case 5:
    case 45:
    case 51:
      uint64_t v15 = *((void *)&v102 + 1);
      uint64_t v14 = v102;
      long long v94 = 0u;
      long long v95 = 0u;
      type metadata accessor for CGPoint(0);
      goto LABEL_34;
    case 6:
    case 22:
      float v35 = (float)((float)(1.0 - a2) * *(float *)&v102) + (float)(*((float *)&v102 + 1) * a2);
      *(void *)(a1 + 24) = &type metadata for Float;
      *(float *)a1 = v35;
      return;
    case 7:
    case 23:
      long long v94 = 0u;
      long long v95 = 0u;
      *((void *)&v87 + 1) = &type metadata for Float;
      LODWORD(v86) = v102;
      goto LABEL_56;
    case 8:
    case 10:
    case 12:
    case 38:
      char v6 = v102;
      char v7 = BYTE1(v102);
      uint64_t v8 = lroundf(a2);
      *(void *)(a1 + 24) = &type metadata for Bool;
      if (v8 <= 0) {
        char v9 = v6;
      }
      else {
        char v9 = v7;
      }
      *(unsigned char *)a1 = v9;
      return;
    case 9:
    case 11:
    case 13:
    case 39:
      long long v94 = 0u;
      long long v95 = 0u;
      *((void *)&v87 + 1) = &type metadata for Bool;
      LOBYTE(v86) = v102;
      goto LABEL_56;
    case 14:
    case 16:
    case 24:
    case 40:
    case 46:
    case 48:
      double v5 = sub_100065C88(*(double *)&v102, *((double *)&v102 + 1), a2);
      *(void *)(a1 + 24) = &type metadata for CGFloat;
      *(double *)a1 = v5;
      return;
    case 15:
    case 17:
    case 25:
    case 41:
    case 47:
    case 49:
      long long v94 = 0u;
      long long v95 = 0u;
      *((void *)&v87 + 1) = &type metadata for CGFloat;
      *(void *)&long long v86 = v102;
      goto LABEL_56;
    case 18:
    case 20:
    case 28:
      uint64_t v17 = *((void *)&v102 + 1);
      uint64_t v18 = v102;
      if ((void)v102)
      {
        type metadata accessor for CGColor(0);
        *((void *)&v87 + 1) = v19;
        *(void *)&long long v86 = v18;
      }
      else
      {
        long long v86 = 0u;
        long long v87 = 0u;
      }
      sub_10051B3EC((uint64_t)&v86, (uint64_t)&v94, &qword_101672BF0);
      if (v17) {
        goto LABEL_30;
      }
      goto LABEL_53;
    case 19:
    case 21:
    case 29:
      uint64_t v17 = v102;
      long long v20 = 0uLL;
      long long v94 = 0u;
      long long v95 = 0u;
      if (!(void)v102) {
        goto LABEL_54;
      }
LABEL_30:
      type metadata accessor for CGColor(0);
      goto LABEL_52;
    case 26:
      double v10 = sub_100065E00(*(double *)&v102, *((double *)&v102 + 1), *(double *)&v103, *((double *)&v103 + 1), a2);
      uint64_t v12 = v54;
      type metadata accessor for CGSize(0);
LABEL_32:
      *(void *)(a1 + 24) = v13;
      *(double *)a1 = v10;
      *(void *)(a1 + 8) = v12;
      return;
    case 27:
      uint64_t v15 = *((void *)&v102 + 1);
      uint64_t v14 = v102;
      long long v94 = 0u;
      long long v95 = 0u;
      type metadata accessor for CGSize(0);
LABEL_34:
      *((void *)&v87 + 1) = v16;
      *(void *)&long long v86 = v14;
      *((void *)&v86 + 1) = v15;
      goto LABEL_56;
    case 30:
      uint64_t v17 = *((void *)&v102 + 1);
      uint64_t v55 = v102;
      if ((void)v102)
      {
        type metadata accessor for CGPath(0);
        *((void *)&v87 + 1) = v56;
        *(void *)&long long v86 = v55;
      }
      else
      {
        long long v86 = 0u;
        long long v87 = 0u;
      }
      sub_10051B3EC((uint64_t)&v86, (uint64_t)&v94, &qword_101672BF0);
      if (v17) {
        goto LABEL_51;
      }
      goto LABEL_53;
    case 31:
      uint64_t v17 = v102;
      long long v20 = 0uLL;
      long long v94 = 0u;
      long long v95 = 0u;
      if (!(void)v102) {
        goto LABEL_54;
      }
LABEL_51:
      type metadata accessor for CGPath(0);
      goto LABEL_52;
    case 32:
    case 36:
      uint64_t v17 = *((void *)&v102 + 1);
      uint64_t v36 = v102;
      if ((void)v102)
      {
        *((void *)&v87 + 1) = sub_1005057FC((uint64_t *)&unk_10167C8C0);
        *(void *)&long long v86 = v36;
      }
      else
      {
        long long v86 = 0u;
        long long v87 = 0u;
      }
      sub_10051B3EC((uint64_t)&v86, (uint64_t)&v94, &qword_101672BF0);
      if (v17) {
        goto LABEL_48;
      }
LABEL_53:
      long long v20 = 0uLL;
LABEL_54:
      long long v78 = v20;
      long long v79 = v20;
      goto LABEL_55;
    case 33:
    case 37:
      uint64_t v17 = v102;
      long long v20 = 0uLL;
      long long v94 = 0u;
      long long v95 = 0u;
      if (!(void)v102) {
        goto LABEL_54;
      }
LABEL_48:
      uint64_t v53 = sub_1005057FC((uint64_t *)&unk_10167C8C0);
LABEL_52:
      *((void *)&v79 + 1) = v53;
      *(void *)&long long v78 = v17;
LABEL_55:
      sub_10051B3EC((uint64_t)&v78, (uint64_t)&v86, &qword_101672BF0);
      goto LABEL_56;
    case 52:
    case 54:
      long long v90 = v106;
      long long v91 = v107;
      long long v92 = v108;
      long long v93 = v109;
      long long v86 = v102;
      long long v87 = v103;
      long long v88 = v104;
      long long v89 = v105;
      long long v82 = v114;
      long long v83 = v115;
      long long v84 = v116;
      long long v85 = v117;
      long long v78 = v110;
      long long v79 = v111;
      long long v80 = v112;
      long long v81 = v113;
      long long v37 = *(_OWORD *)&CATransform3DIdentity.m33;
      long long v74 = *(_OWORD *)&CATransform3DIdentity.m31;
      long long v75 = v37;
      long long v38 = *(_OWORD *)&CATransform3DIdentity.m43;
      long long v76 = *(_OWORD *)&CATransform3DIdentity.m41;
      long long v77 = v38;
      long long v39 = *(_OWORD *)&CATransform3DIdentity.m13;
      long long v70 = *(_OWORD *)&CATransform3DIdentity.m11;
      long long v71 = v39;
      long long v40 = *(_OWORD *)&CATransform3DIdentity.m23;
      long long v72 = *(_OWORD *)&CATransform3DIdentity.m21;
      long long v73 = v40;
      CATransform3DInterpolate();
      long long v98 = v74;
      long long v99 = v75;
      long long v100 = v76;
      long long v101 = v77;
      long long v94 = v70;
      long long v95 = v71;
      long long v96 = v72;
      long long v97 = v73;
      type metadata accessor for CATransform3D(0);
      *(void *)(a1 + 24) = v41;
      long long v42 = (_OWORD *)swift_allocObject();
      *(void *)a1 = v42;
      long long v43 = v99;
      v42[5] = v98;
      v42[6] = v43;
      long long v44 = v101;
      v42[7] = v100;
      unsigned char v42[8] = v44;
      long long v45 = v95;
      v42[1] = v94;
      v42[2] = v45;
      long long v46 = v97;
      void v42[3] = v96;
      v42[4] = v46;
      return;
    case 53:
    case 55:
      long long v94 = 0u;
      long long v95 = 0u;
      type metadata accessor for CATransform3D(0);
      *((void *)&v87 + 1) = v47;
      long long v48 = (_OWORD *)swift_allocObject();
      *(void *)&long long v86 = v48;
      long long v49 = v107;
      v48[5] = v106;
      v48[6] = v49;
      long long v50 = v109;
      v48[7] = v108;
      v48[8] = v50;
      long long v51 = v103;
      v48[1] = v102;
      v48[2] = v51;
      long long v52 = v105;
      v48[3] = v104;
      v48[4] = v52;
      goto LABEL_56;
    case 56:
      long long v94 = v102;
      long long v95 = v103;
      long long v96 = v104;
      long long v86 = v105;
      long long v87 = v106;
      long long v88 = v107;
      sub_100080274(&v94, &v86, (uint64_t)&v78, a2);
      long long v65 = v79;
      long long v68 = v78;
      long long v57 = v80;
      type metadata accessor for CGAffineTransform(0);
      *(void *)(a1 + 24) = v58;
      long long v59 = (_OWORD *)swift_allocObject();
      *(void *)a1 = v59;
      v59[1] = v68;
      v59[2] = v65;
      v59[3] = v57;
      return;
    case 57:
      long long v66 = v103;
      long long v69 = v102;
      long long v60 = v104;
      long long v94 = 0u;
      long long v95 = 0u;
      type metadata accessor for CGAffineTransform(0);
      *((void *)&v87 + 1) = v61;
      long long v62 = (_OWORD *)swift_allocObject();
      *(void *)&long long v86 = v62;
      v62[1] = v69;
      v62[2] = v66;
      v62[3] = v60;
LABEL_56:
      *(void *)(a1 + 24) = &type metadata for InterpolatableAny;
      uint64_t v64 = swift_allocObject();
      *(void *)a1 = v64;
      sub_100A64B1C((uint64_t)&v86, v64 + 16, a2);
      sub_100A0121C((uint64_t)&v86);
      sub_100A0121C((uint64_t)&v94);
      return;
    case 58:

      goto LABEL_45;
    case 59:
    case 60:
    case 61:
    case 62:
      goto LABEL_45;
    case 63:
      long long v63 = &v106;
      goto LABEL_44;
    case 64:
      long long v63 = &v104;
LABEL_44:
      sub_1005CFCF0((uint64_t)v63);
LABEL_45:
      sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"interpolatedValue(by:)", 22, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/Animation/Property Transitions/CRLLayerPropertyTransitionDescriptor.swift", 143, 2, 538, (uint64_t)"Cannot retrieve an interpolated value for virtual descriptors. Call interpolatedValue(by:) on a full property transition instead.", 129, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"interpolatedValue(by:)", 22, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/Animation/Property Transitions/CRLLayerPropertyTransitionDescriptor.swift", 143, 2, 538);
      *(_OWORD *)a1 = 0u;
      *(_OWORD *)(a1 + 16) = 0u;
      break;
    default:
      sub_10051B3EC((uint64_t)&v102, (uint64_t)&v94, &qword_101672BF0);
      sub_10051B3EC((uint64_t)&v104, (uint64_t)&v86, &qword_101672BF0);
      sub_100557A70((uint64_t)&v94, (uint64_t)&v78);
      sub_100557A70((uint64_t)&v86, (uint64_t)&v70);
      *(void *)(a1 + 24) = &type metadata for InterpolatableAny;
      uint64_t v21 = swift_allocObject();
      *(void *)a1 = v21;
      sub_100A64B1C((uint64_t)&v70, v21 + 16, a2);
      sub_100A0121C((uint64_t)&v70);
      sub_100A0121C((uint64_t)&v78);
      sub_10052E2B0((uint64_t)&v86);
LABEL_17:
      sub_10052E2B0((uint64_t)&v94);
      break;
  }
}

uint64_t sub_1009FD6EC@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1006006C8(v2, (uint64_t)v208);
  sub_1006006C8((uint64_t)v208, (uint64_t)&v191);
  switch(v207)
  {
    case 1:
    case 35:
      sub_10051B3EC((uint64_t)&v191, (uint64_t)v185, &qword_101672BF0);
      char v48 = sub_1009FCAC8();
      sub_100557A70((uint64_t)v185, (uint64_t)&v173);
      a2[3] = (uint64_t)&type metadata for CRLLayerImplicitPropertyTransition;
      a2[4] = sub_1009FF1D8();
      uint64_t v49 = swift_allocObject();
      uint64_t v50 = v49 + 16;
      *a2 = v49;
      swift_unknownObjectWeakInit();
      memset(&v181[8], 0, 32);
      v181[40] = v48;
      swift_unknownObjectWeakAssign();
      sub_1006063BC((uint64_t)&v173, (uint64_t)&v181[8], &qword_101672BF0);
      sub_1009FF274((uint64_t)v181, v50);
      goto LABEL_16;
    case 2:
    case 42:
      long long v33 = v192;
      long long v163 = v191;
      long long v167 = v193;
      long long v34 = v194;
      char v6 = sub_1009FCAC8();
      type metadata accessor for CGRect(0);
      uint64_t v36 = v35;
      *(void *)&v185[24] = v35;
      uint64_t v37 = swift_allocObject();
      *(void *)uint64_t v185 = v37;
      *(_OWORD *)(v37 + 16) = v163;
      *(_OWORD *)(v37 + 32) = v33;
      *((void *)&v174 + 1) = v36;
      uint64_t v38 = swift_allocObject();
      *(void *)&long long v173 = v38;
      *(_OWORD *)(v38 + 16) = v167;
      *(_OWORD *)(v38 + 32) = v34;
      goto LABEL_82;
    case 3:
    case 43:
      long long v168 = v191;
      long long v40 = v192;
      char v8 = sub_1009FCAC8();
      type metadata accessor for CGRect(0);
      *(void *)&v185[24] = v41;
      uint64_t v42 = swift_allocObject();
      *(void *)uint64_t v185 = v42;
      *(_OWORD *)(v42 + 16) = v168;
      *(_OWORD *)(v42 + 32) = v40;
      goto LABEL_33;
    case 4:
    case 44:
    case 50:
      uint64_t v13 = *((void *)&v191 + 1);
      uint64_t v12 = v191;
      uint64_t v15 = *((void *)&v192 + 1);
      uint64_t v14 = v192;
      char v6 = sub_1009FCAC8();
      type metadata accessor for CGPoint(0);
      goto LABEL_24;
    case 5:
    case 45:
    case 51:
      uint64_t v18 = *((void *)&v191 + 1);
      uint64_t v17 = v191;
      char v8 = sub_1009FCAC8();
      type metadata accessor for CGPoint(0);
      goto LABEL_32;
    case 6:
    case 22:
      uint64_t v39 = v191;
      char v6 = sub_1009FCAC8();
      *(void *)&v185[24] = &type metadata for Float;
      *(_DWORD *)uint64_t v185 = v39;
      *((void *)&v174 + 1) = &type metadata for Float;
      LODWORD(v173) = HIDWORD(v39);
      goto LABEL_82;
    case 7:
    case 23:
      int v52 = v191;
      char v8 = sub_1009FCAC8();
      *(void *)&v185[24] = &type metadata for Float;
      *(_DWORD *)uint64_t v185 = v52;
      goto LABEL_33;
    case 8:
    case 10:
    case 12:
    case 38:
      char v10 = v191;
      char v11 = BYTE1(v191);
      char v6 = sub_1009FCAC8();
      *(void *)&v185[24] = &type metadata for Bool;
      v185[0] = v10;
      *((void *)&v174 + 1) = &type metadata for Bool;
      LOBYTE(v173) = v11;
      goto LABEL_82;
    case 9:
    case 11:
    case 13:
    case 39:
      char v9 = v191;
      char v8 = sub_1009FCAC8();
      *(void *)&v185[24] = &type metadata for Bool;
      v185[0] = v9;
      goto LABEL_33;
    case 14:
    case 16:
    case 24:
    case 40:
    case 46:
    case 48:
      long long v5 = v191;
      char v6 = sub_1009FCAC8();
      *(void *)&v185[24] = &type metadata for CGFloat;
      *(void *)uint64_t v185 = v5;
      *((void *)&v174 + 1) = &type metadata for CGFloat;
      *(void *)&long long v173 = *((void *)&v5 + 1);
      goto LABEL_82;
    case 15:
    case 17:
    case 25:
    case 41:
    case 47:
    case 49:
      uint64_t v7 = v191;
      char v8 = sub_1009FCAC8();
      *(void *)&v185[24] = &type metadata for CGFloat;
      *(void *)uint64_t v185 = v7;
      goto LABEL_33;
    case 18:
    case 20:
      uint64_t v53 = (void *)*((void *)&v191 + 1);
      uint64_t v54 = (void *)v191;
      char v55 = sub_1009FCAC8();
      if (v54)
      {
        type metadata accessor for CGColor(0);
        *(void *)&v185[24] = v56;
        *(void *)uint64_t v185 = v54;
      }
      else
      {
        memset(v185, 0, 32);
      }
      if (v53) {
        goto LABEL_67;
      }
      goto LABEL_77;
    case 19:
    case 21:
    case 29:
      long long v20 = (void *)v191;
      char v21 = sub_1009FCAC8();
      if (!v20) {
        goto LABEL_28;
      }
      type metadata accessor for CGColor(0);
      goto LABEL_27;
    case 26:
      uint64_t v13 = *((void *)&v191 + 1);
      uint64_t v12 = v191;
      uint64_t v15 = *((void *)&v192 + 1);
      uint64_t v14 = v192;
      char v6 = sub_1009FCAC8();
      type metadata accessor for CGSize(0);
LABEL_24:
      *(void *)&v185[24] = v16;
      *(void *)uint64_t v185 = v12;
      *(void *)&v185[8] = v13;
      *((void *)&v174 + 1) = v16;
      *(void *)&long long v173 = v14;
      *((void *)&v173 + 1) = v15;
      goto LABEL_82;
    case 27:
      uint64_t v18 = *((void *)&v191 + 1);
      uint64_t v17 = v191;
      char v8 = sub_1009FCAC8();
      type metadata accessor for CGSize(0);
LABEL_32:
      *(void *)&v185[24] = v19;
      *(void *)uint64_t v185 = v17;
      *(void *)&v185[8] = v18;
      goto LABEL_33;
    case 28:
      uint64_t v53 = (void *)*((void *)&v191 + 1);
      uint64_t v54 = (void *)v191;
      char v55 = sub_1009FCAC8();
      if (v54)
      {
        type metadata accessor for CGColor(0);
        *(void *)&v185[24] = v142;
        *(void *)uint64_t v185 = v54;
        if (!v53)
        {
LABEL_77:
          long long v173 = 0u;
          long long v174 = 0u;
          goto LABEL_78;
        }
      }
      else
      {
        memset(v185, 0, 32);
        if (!v53) {
          goto LABEL_77;
        }
      }
LABEL_67:
      type metadata accessor for CGColor(0);
LABEL_76:
      *((void *)&v174 + 1) = v151;
      *(void *)&long long v173 = v53;
LABEL_78:
      a2[3] = (uint64_t)&type metadata for CRLLayerConcretePropertyTransition;
      a2[4] = sub_1009FF2F0();
      uint64_t v152 = swift_allocObject();
      *a2 = v152;
      memset(v181, 0, 64);
      v181[64] = v55;
      *(void *)&v181[72] = sub_1009FC740(v55);
      *(void *)&long long v182 = v153;
      id v154 = v54;
      id v155 = v53;
      sub_1006063BC((uint64_t)v185, (uint64_t)v181, &qword_101672BF0);
      sub_1006063BC((uint64_t)&v173, (uint64_t)&v181[32], &qword_101672BF0);
      long long v156 = *(_OWORD *)&v181[48];
      *(_OWORD *)(v152 + 48) = *(_OWORD *)&v181[32];
      *(_OWORD *)(v152 + 64) = v156;
      *(_OWORD *)(v152 + 80) = *(_OWORD *)&v181[64];
      *(void *)(v152 + 96) = v182;
      long long v157 = *(_OWORD *)&v181[16];
      *(_OWORD *)(v152 + 16) = *(_OWORD *)v181;
      *(_OWORD *)(v152 + 32) = v157;

      return sub_10054BD5C((uint64_t)v208);
    case 30:
      uint64_t v53 = (void *)*((void *)&v191 + 1);
      uint64_t v54 = (void *)v191;
      char v55 = sub_1009FCAC8();
      if (v54)
      {
        type metadata accessor for CGPath(0);
        *(void *)&v185[24] = v149;
        *(void *)uint64_t v185 = v54;
      }
      else
      {
        memset(v185, 0, 32);
      }
      if (!v53) {
        goto LABEL_77;
      }
      type metadata accessor for CGPath(0);
      goto LABEL_76;
    case 31:
      long long v20 = (void *)v191;
      char v21 = sub_1009FCAC8();
      if (v20)
      {
        type metadata accessor for CGPath(0);
LABEL_27:
        *(void *)&v185[24] = v22;
        *(void *)uint64_t v185 = v20;
      }
      else
      {
LABEL_28:
        memset(v185, 0, 32);
      }
      a2[3] = (uint64_t)&type metadata for CRLLayerImplicitPropertyTransition;
      a2[4] = sub_1009FF1D8();
      uint64_t v75 = swift_allocObject();
      uint64_t v76 = v75 + 16;
      *a2 = v75;
      swift_unknownObjectWeakInit();
      memset(&v181[8], 0, 32);
      v181[40] = v21;
      swift_unknownObjectWeakAssign();
      id v77 = v20;
      sub_1006063BC((uint64_t)v185, (uint64_t)&v181[8], &qword_101672BF0);
      sub_1009FF274((uint64_t)v181, v76);

      return sub_10054BD5C((uint64_t)v208);
    case 32:
      uint64_t v85 = *((void *)&v191 + 1);
      uint64_t v86 = v191;
      char v6 = sub_1009FCAC8();
      if (v86)
      {
        *(void *)&v185[24] = sub_1005057FC((uint64_t *)&unk_10167C8C0);
        *(void *)uint64_t v185 = v86;
      }
      else
      {
        memset(v185, 0, 32);
      }
      if (v85) {
        goto LABEL_70;
      }
      goto LABEL_81;
    case 33:
    case 37:
      uint64_t v51 = v191;
      char v8 = sub_1009FCAC8();
      if (v51)
      {
        *(void *)&v185[24] = sub_1005057FC((uint64_t *)&unk_10167C8C0);
        *(void *)uint64_t v185 = v51;
      }
      else
      {
        memset(v185, 0, 32);
      }
      goto LABEL_33;
    case 36:
      uint64_t v85 = *((void *)&v191 + 1);
      uint64_t v150 = v191;
      char v6 = sub_1009FCAC8();
      if (v150)
      {
        *(void *)&v185[24] = sub_1005057FC((uint64_t *)&unk_10167C8C0);
        *(void *)uint64_t v185 = v150;
      }
      else
      {
        memset(v185, 0, 32);
      }
      if (v85)
      {
LABEL_70:
        *((void *)&v174 + 1) = sub_1005057FC((uint64_t *)&unk_10167C8C0);
        *(void *)&long long v173 = v85;
      }
      else
      {
LABEL_81:
        long long v173 = 0u;
        long long v174 = 0u;
      }
      goto LABEL_82;
    case 52:
    case 54:
      long long v187 = v195;
      long long v188 = v196;
      long long v189 = v197;
      long long v190 = v198;
      *(_OWORD *)uint64_t v185 = v191;
      *(_OWORD *)&v185[16] = v192;
      *(_OWORD *)&v185[32] = v193;
      long long v186 = v194;
      *(_OWORD *)&v181[32] = v201;
      *(_OWORD *)&v181[48] = v202;
      *(_OWORD *)uint64_t v181 = v199;
      *(_OWORD *)&v181[16] = v200;
      long long v183 = v205;
      long long v184 = v206;
      *(_OWORD *)&v181[64] = v203;
      long long v182 = v204;
      char v57 = sub_1009FCAC8();
      type metadata accessor for CATransform3D(0);
      uint64_t v59 = v58;
      v180[3] = v58;
      long long v60 = (_OWORD *)swift_allocObject();
      v179[3] = v59;
      v180[0] = v60;
      long long v61 = v188;
      v60[5] = v187;
      v60[6] = v61;
      long long v62 = v190;
      v60[7] = v189;
      v60[8] = v62;
      long long v63 = *(_OWORD *)&v185[16];
      v60[1] = *(_OWORD *)v185;
      v60[2] = v63;
      long long v64 = v186;
      v60[3] = *(_OWORD *)&v185[32];
      v60[4] = v64;
      long long v65 = (_OWORD *)swift_allocObject();
      v179[0] = v65;
      long long v66 = v182;
      v65[5] = *(_OWORD *)&v181[64];
      v65[6] = v66;
      long long v67 = v184;
      v65[7] = v183;
      v65[8] = v67;
      long long v68 = *(_OWORD *)&v181[16];
      v65[1] = *(_OWORD *)v181;
      v65[2] = v68;
      long long v69 = *(_OWORD *)&v181[48];
      v65[3] = *(_OWORD *)&v181[32];
      v65[4] = v69;
      a2[3] = (uint64_t)&type metadata for CRLLayerConcretePropertyTransition;
      a2[4] = sub_1009FF2F0();
      uint64_t v70 = swift_allocObject();
      *a2 = v70;
      long long v175 = 0u;
      long long v176 = 0u;
      long long v173 = 0u;
      long long v174 = 0u;
      LOBYTE(v177) = v57;
      *((void *)&v177 + 1) = sub_1009FC740(v57);
      uint64_t v178 = v71;
      sub_1006063BC((uint64_t)v180, (uint64_t)&v173, &qword_101672BF0);
      sub_1006063BC((uint64_t)v179, (uint64_t)&v175, &qword_101672BF0);
      long long v72 = v176;
      *(_OWORD *)(v70 + 48) = v175;
      *(_OWORD *)(v70 + 64) = v72;
      *(_OWORD *)(v70 + 80) = v177;
      *(void *)(v70 + 96) = v178;
      long long v73 = v173;
      long long v74 = v174;
      goto LABEL_83;
    case 53:
    case 55:
      *(_OWORD *)&v181[64] = v195;
      long long v182 = v196;
      long long v183 = v197;
      long long v184 = v198;
      *(_OWORD *)uint64_t v181 = v191;
      *(_OWORD *)&v181[16] = v192;
      *(_OWORD *)&v181[32] = v193;
      *(_OWORD *)&v181[48] = v194;
      char v23 = sub_1009FCAC8();
      type metadata accessor for CATransform3D(0);
      *((void *)&v174 + 1) = v24;
      uint64_t v25 = (_OWORD *)swift_allocObject();
      *(void *)&long long v173 = v25;
      long long v26 = v182;
      v25[5] = *(_OWORD *)&v181[64];
      v25[6] = v26;
      long long v27 = v184;
      v25[7] = v183;
      v25[8] = v27;
      long long v28 = *(_OWORD *)&v181[16];
      v25[1] = *(_OWORD *)v181;
      v25[2] = v28;
      long long v29 = *(_OWORD *)&v181[48];
      v25[3] = *(_OWORD *)&v181[32];
      void v25[4] = v29;
      a2[3] = (uint64_t)&type metadata for CRLLayerImplicitPropertyTransition;
      a2[4] = sub_1009FF1D8();
      uint64_t v30 = swift_allocObject();
      uint64_t v31 = v30 + 16;
      *a2 = v30;
      swift_unknownObjectWeakInit();
      memset(&v185[8], 0, 32);
      v185[40] = v23;
      swift_unknownObjectWeakAssign();
      sub_1006063BC((uint64_t)&v173, (uint64_t)&v185[8], &qword_101672BF0);
      long long v32 = v185;
      goto LABEL_34;
    case 56:
      long long v160 = v192;
      long long v161 = v191;
      long long v78 = v193;
      long long v164 = v195;
      long long v169 = v194;
      long long v79 = v196;
      char v6 = sub_1009FCAC8();
      type metadata accessor for CGAffineTransform(0);
      uint64_t v81 = v80;
      *(void *)&v185[24] = v80;
      long long v82 = (_OWORD *)swift_allocObject();
      *(void *)uint64_t v185 = v82;
      v82[1] = v161;
      v82[2] = v160;
      v82[3] = v78;
      *((void *)&v174 + 1) = v81;
      long long v83 = (_OWORD *)swift_allocObject();
      *(void *)&long long v173 = v83;
      v83[1] = v169;
      v83[2] = v164;
      v83[3] = v79;
LABEL_82:
      a2[3] = (uint64_t)&type metadata for CRLLayerConcretePropertyTransition;
      a2[4] = sub_1009FF2F0();
      uint64_t v70 = swift_allocObject();
      *a2 = v70;
      memset(v181, 0, 64);
      v181[64] = v6;
      *(void *)&v181[72] = sub_1009FC740(v6);
      *(void *)&long long v182 = v158;
      sub_1006063BC((uint64_t)v185, (uint64_t)v181, &qword_101672BF0);
      sub_1006063BC((uint64_t)&v173, (uint64_t)&v181[32], &qword_101672BF0);
      long long v159 = *(_OWORD *)&v181[48];
      *(_OWORD *)(v70 + 48) = *(_OWORD *)&v181[32];
      *(_OWORD *)(v70 + 64) = v159;
      *(_OWORD *)(v70 + 80) = *(_OWORD *)&v181[64];
      *(void *)(v70 + 96) = v182;
      long long v73 = *(_OWORD *)v181;
      long long v74 = *(_OWORD *)&v181[16];
LABEL_83:
      *(_OWORD *)(v70 + 16) = v73;
      *(_OWORD *)(v70 + 32) = v74;
      return sub_10054BD5C((uint64_t)v208);
    case 57:
      long long v166 = v192;
      long long v171 = v191;
      long long v143 = v193;
      char v8 = sub_1009FCAC8();
      type metadata accessor for CGAffineTransform(0);
      *(void *)&v185[24] = v144;
      uint64_t v145 = (_OWORD *)swift_allocObject();
      *(void *)uint64_t v185 = v145;
      v145[1] = v171;
      v145[2] = v166;
      v145[3] = v143;
LABEL_33:
      a2[3] = (uint64_t)&type metadata for CRLLayerImplicitPropertyTransition;
      a2[4] = sub_1009FF1D8();
      uint64_t v84 = swift_allocObject();
      uint64_t v31 = v84 + 16;
      *a2 = v84;
      swift_unknownObjectWeakInit();
      memset(&v181[8], 0, 32);
      v181[40] = v8;
      swift_unknownObjectWeakAssign();
      sub_1006063BC((uint64_t)v185, (uint64_t)&v181[8], &qword_101672BF0);
      long long v32 = v181;
LABEL_34:
      sub_1009FF274((uint64_t)v32, v31);
      return sub_10054BD5C((uint64_t)v208);
    case 58:
      long long v87 = v191;
      long long v88 = v192;
      char v89 = v193;
      long long v90 = (void *)*((void *)&v193 + 1);
      char v91 = v194;
      a2[3] = (uint64_t)&type metadata for CRLLayerTransformByScaleFactorTransition;
      a2[4] = sub_1009FF0D8();
      uint64_t v92 = swift_allocObject();
      uint64_t v93 = v92 + 16;
      *a2 = v92;
      swift_unknownObjectWeakInit();
      swift_unknownObjectWeakInit();
      swift_unknownObjectWeakAssign();
      *(_OWORD *)&v181[8] = v87;
      *(_OWORD *)&v181[24] = v88;
      v181[40] = v89;
      swift_unknownObjectWeakAssign();

      v181[56] = v91;
      sub_1009FF16C((uint64_t)v181, v93);
      return sub_10054BD5C((uint64_t)v208);
    case 59:
      long long v172 = v191;
      long long v146 = v192;
      sub_10051B3EC((uint64_t)&v193, (uint64_t)v185, &qword_1016758E0);
      a2[3] = (uint64_t)&type metadata for CRLLayerTransformBy2DTranslationTransition;
      a2[4] = sub_1009FEFF0();
      uint64_t v147 = swift_allocObject();
      uint64_t v148 = v147 + 16;
      *a2 = v147;
      swift_unknownObjectWeakInit();
      swift_unknownObjectWeakAssign();
      *(_OWORD *)&v181[8] = v172;
      *(_OWORD *)&v181[24] = v146;
      sub_10051B3EC((uint64_t)v185, (uint64_t)&v181[40], &qword_1016758E0);
      sub_1009FF07C((uint64_t)v181, v148);
      return sub_10054BD5C((uint64_t)v208);
    case 60:
      long long v165 = v192;
      long long v170 = v191;
      long long v162 = v193;
      long long v94 = v194;
      sub_10051B3EC((uint64_t)&v195, (uint64_t)v185, &qword_1016758E0);
      a2[3] = (uint64_t)&type metadata for CRLLayerTransformByNaturalRectTransition;
      a2[4] = sub_1009FEF08();
      uint64_t v95 = swift_allocObject();
      uint64_t v96 = v95 + 16;
      *a2 = v95;
      swift_unknownObjectWeakInit();
      swift_unknownObjectWeakAssign();
      *(_OWORD *)&v181[8] = v170;
      *(_OWORD *)&v181[24] = v165;
      *(_OWORD *)&v181[40] = v162;
      *(_OWORD *)&v181[56] = v94;
      sub_10051B3EC((uint64_t)v185, (uint64_t)&v181[72], &qword_1016758E0);
      sub_1009FEF94((uint64_t)v181, v96);
      return sub_10054BD5C((uint64_t)v208);
    case 61:
      long long v109 = v191;
      long long v110 = v192;
      uint64_t v112 = *((void *)&v193 + 1);
      uint64_t v111 = v193;
      uint64_t v114 = *((void *)&v194 + 1);
      uint64_t v113 = v194;
      self;
      uint64_t v115 = swift_dynamicCastObjCClass();
      if (!v115) {
        goto LABEL_94;
      }
      long long v116 = (void *)v115;
      id v117 = a1;
      id v118 = [v116 canvasView];
      if (!v118) {
        goto LABEL_94;
      }
      long long v119 = v118;
      id v120 = [v118 enclosingScrollView];
      if (!v120)
      {

        goto LABEL_94;
      }
      unint64_t v121 = v120;
      memset(v185, 0, 40);
      *(void *)&v181[72] = 0xD00000000000001BLL;
      memset(&v181[32], 0, 40);
      *(void *)&long long v182 = 0x8000000101255EB0;
      *(void *)uint64_t v181 = v119;
      *(void *)&v181[16] = v120;
      id v122 = v119;
      id v123 = v121;
      *(void *)&v181[8] = [v122 canvasLayer];
      id v124 = [v122 canvasLayer];
      id v125 = [v124 controller];

      if (!v125)
      {
        __break(1u);
LABEL_86:
        __break(1u);
        goto LABEL_94;
      }

      *(void *)&v181[24] = v125;
      sub_1006063BC((uint64_t)v185, (uint64_t)&v181[32], &qword_1016826C8);

      sub_10054BD5C((uint64_t)v208);
      a2[3] = (uint64_t)&type metadata for CRLCanvasLayerTransformByUnscaledRectTransition;
      a2[4] = sub_1009FEE4C();
      uint64_t result = swift_allocObject();
      *a2 = result;
      long long v126 = *(_OWORD *)&v181[48];
      *(_OWORD *)(result + 48) = *(_OWORD *)&v181[32];
      *(_OWORD *)(result + 64) = v126;
      *(_OWORD *)(result + 80) = *(_OWORD *)&v181[64];
      uint64_t v127 = v182;
      long long v128 = *(_OWORD *)&v181[16];
      *(_OWORD *)(result + 16) = *(_OWORD *)v181;
      *(_OWORD *)(result + 32) = v128;
      *(void *)(result + 96) = v127;
      *(_OWORD *)(result + 104) = v109;
      *(_OWORD *)(result + 120) = v110;
      *(unsigned char *)(result + 136) = 0;
LABEL_54:
      *(void *)(result + 144) = v111;
      *(void *)(result + 152) = v112;
      *(void *)(result + 160) = v113;
      *(void *)(result + 168) = v114;
      *(unsigned char *)(result + 176) = 0;
      return result;
    case 62:
      uint64_t v112 = *((void *)&v191 + 1);
      uint64_t v111 = v191;
      uint64_t v114 = *((void *)&v192 + 1);
      uint64_t v113 = v192;
      self;
      uint64_t v129 = swift_dynamicCastObjCClass();
      if (!v129) {
        goto LABEL_94;
      }
      long long v130 = (void *)v129;
      id v131 = a1;
      id v132 = [v130 canvasView];
      if (!v132) {
        goto LABEL_94;
      }
      long long v133 = v132;
      id v134 = [v132 enclosingScrollView];
      if (!v134)
      {

LABEL_94:
        _assertionFailure(_:_:file:line:flags:)();
        __break(1u);
        JUMPOUT(0x1009FEB44);
      }
      uint64_t v135 = v134;
      memset(v185, 0, 40);
      *(void *)&v181[72] = 0xD00000000000001BLL;
      memset(&v181[32], 0, 40);
      *(void *)&long long v182 = 0x8000000101255EB0;
      *(void *)uint64_t v181 = v133;
      *(void *)&v181[16] = v134;
      id v136 = v133;
      id v137 = v135;
      *(void *)&v181[8] = [v136 canvasLayer];
      id v138 = [v136 canvasLayer];
      id v139 = [v138 controller];

      if (v139)
      {

        *(void *)&v181[24] = v139;
        sub_1006063BC((uint64_t)v185, (uint64_t)&v181[32], &qword_1016826C8);

        sub_10054BD5C((uint64_t)v208);
        a2[3] = (uint64_t)&type metadata for CRLCanvasLayerTransformByUnscaledRectTransition;
        a2[4] = sub_1009FEE4C();
        uint64_t result = swift_allocObject();
        *a2 = result;
        long long v140 = *(_OWORD *)&v181[48];
        *(_OWORD *)(result + 48) = *(_OWORD *)&v181[32];
        *(_OWORD *)(result + 64) = v140;
        *(_OWORD *)(result + 80) = *(_OWORD *)&v181[64];
        *(void *)(result + 96) = v182;
        long long v141 = *(_OWORD *)&v181[16];
        *(_OWORD *)(result + 16) = *(_OWORD *)v181;
        *(_OWORD *)(result + 32) = v141;
        *(_OWORD *)(result + 104) = 0u;
        *(_OWORD *)(result + 120) = 0u;
        *(unsigned char *)(result + 136) = 1;
        goto LABEL_54;
      }
      goto LABEL_86;
    case 63:
      long long v102 = v191;
      long long v103 = v192;
      long long v104 = v193;
      long long v105 = v194;
      *(_OWORD *)&v181[32] = v197;
      *(_OWORD *)&v181[48] = v198;
      *(_OWORD *)&v181[64] = v199;
      *(void *)&long long v182 = v200;
      *(_OWORD *)uint64_t v181 = v195;
      *(_OWORD *)&v181[16] = v196;
      type metadata accessor for CRLCanvasBackgroundLayer();
      if (!swift_dynamicCastClass()) {
        goto LABEL_94;
      }
      sub_10054BD5C((uint64_t)v208);
      a2[3] = (uint64_t)&type metadata for CRLCanvasLayerTransformByUnscaledRectTransition;
      a2[4] = sub_1009FEE4C();
      uint64_t result = swift_allocObject();
      *a2 = result;
      long long v106 = *(_OWORD *)&v181[48];
      *(_OWORD *)(result + 48) = *(_OWORD *)&v181[32];
      *(_OWORD *)(result + 64) = v106;
      *(_OWORD *)(result + 80) = *(_OWORD *)&v181[64];
      uint64_t v107 = v182;
      long long v108 = *(_OWORD *)&v181[16];
      *(_OWORD *)(result + 16) = *(_OWORD *)v181;
      *(_OWORD *)(result + 32) = v108;
      *(void *)(result + 96) = v107;
      *(_OWORD *)(result + 104) = v102;
      *(_OWORD *)(result + 120) = v103;
      *(unsigned char *)(result + 136) = 0;
      *(_OWORD *)(result + 144) = v104;
      *(_OWORD *)(result + 160) = v105;
      goto LABEL_43;
    case 64:
      long long v97 = v191;
      long long v98 = v192;
      *(_OWORD *)&v181[32] = v195;
      *(_OWORD *)&v181[48] = v196;
      *(_OWORD *)&v181[64] = v197;
      *(void *)&long long v182 = v198;
      *(_OWORD *)uint64_t v181 = v193;
      *(_OWORD *)&v181[16] = v194;
      type metadata accessor for CRLCanvasBackgroundLayer();
      if (!swift_dynamicCastClass()) {
        goto LABEL_94;
      }
      sub_10054BD5C((uint64_t)v208);
      a2[3] = (uint64_t)&type metadata for CRLCanvasLayerTransformByUnscaledRectTransition;
      a2[4] = sub_1009FEE4C();
      uint64_t result = swift_allocObject();
      *a2 = result;
      long long v100 = *(_OWORD *)&v181[48];
      *(_OWORD *)(result + 48) = *(_OWORD *)&v181[32];
      *(_OWORD *)(result + 64) = v100;
      *(_OWORD *)(result + 80) = *(_OWORD *)&v181[64];
      *(void *)(result + 96) = v182;
      long long v101 = *(_OWORD *)&v181[16];
      *(_OWORD *)(result + 16) = *(_OWORD *)v181;
      *(_OWORD *)(result + 32) = v101;
      *(_OWORD *)(result + 104) = 0u;
      *(_OWORD *)(result + 120) = 0u;
      *(unsigned char *)(result + 136) = 1;
      *(_OWORD *)(result + 144) = v97;
      *(_OWORD *)(result + 160) = v98;
LABEL_43:
      *(unsigned char *)(result + 176) = 1;
      return result;
    default:
      sub_10051B3EC((uint64_t)&v191, (uint64_t)v185, &qword_101672BF0);
      sub_10051B3EC((uint64_t)&v193, (uint64_t)&v173, &qword_101672BF0);
      char v43 = sub_1009FCAC8();
      sub_100557A70((uint64_t)v185, (uint64_t)v180);
      sub_100557A70((uint64_t)&v173, (uint64_t)v179);
      a2[3] = (uint64_t)&type metadata for CRLLayerConcretePropertyTransition;
      a2[4] = sub_1009FF2F0();
      uint64_t v44 = swift_allocObject();
      *a2 = v44;
      memset(v181, 0, 64);
      v181[64] = v43;
      *(void *)&v181[72] = sub_1009FC740(v43);
      *(void *)&long long v182 = v45;
      sub_1006063BC((uint64_t)v180, (uint64_t)v181, &qword_101672BF0);
      sub_1006063BC((uint64_t)v179, (uint64_t)&v181[32], &qword_101672BF0);
      long long v46 = *(_OWORD *)&v181[48];
      *(_OWORD *)(v44 + 48) = *(_OWORD *)&v181[32];
      *(_OWORD *)(v44 + 64) = v46;
      *(_OWORD *)(v44 + 80) = *(_OWORD *)&v181[64];
      *(void *)(v44 + 96) = v182;
      long long v47 = *(_OWORD *)&v181[16];
      *(_OWORD *)(v44 + 16) = *(_OWORD *)v181;
      *(_OWORD *)(v44 + 32) = v47;
      sub_10052E2B0((uint64_t)&v173);
LABEL_16:
      sub_10052E2B0((uint64_t)v185);
      return sub_10054BD5C((uint64_t)v208);
  }
}

uint64_t sub_1009FEC4C(char *a1, char *a2)
{
  char v2 = *a2;
  uint64_t v3 = sub_1009FC740(*a1);
  uint64_t v5 = v4;
  if (v3 == sub_1009FC740(v2) && v5 == v6) {
    char v8 = 1;
  }
  else {
    char v8 = _stringCompareWithSmolCheck(_:_:expecting:)();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

Swift::Int sub_1009FECD8()
{
  char v1 = *v0;
  Hasher.init(_seed:)();
  sub_1009FC740(v1);
  String.hash(into:)();
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

uint64_t sub_1009FED3C()
{
  sub_1009FC740(*v0);
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_1009FED90()
{
  char v1 = *v0;
  Hasher.init(_seed:)();
  sub_1009FC740(v1);
  String.hash(into:)();
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

uint64_t sub_1009FEDF0@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_100A0145C();
  *a1 = result;
  return result;
}

uint64_t sub_1009FEE20@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1009FC740(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

unint64_t sub_1009FEE4C()
{
  unint64_t result = qword_10168B5F8;
  if (!qword_10168B5F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168B5F8);
  }
  return result;
}

uint64_t sub_1009FEEA0()
{
  if (*(void *)(v0 + 72)) {
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v0 + 48);
  }
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 177, 7);
}

unint64_t sub_1009FEF08()
{
  unint64_t result = qword_10168B600;
  if (!qword_10168B600)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168B600);
  }
  return result;
}

uint64_t sub_1009FEF5C()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 217, 7);
}

uint64_t sub_1009FEF94(uint64_t a1, uint64_t a2)
{
  return a2;
}

unint64_t sub_1009FEFF0()
{
  unint64_t result = qword_10168B608;
  if (!qword_10168B608)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168B608);
  }
  return result;
}

uint64_t sub_1009FF044()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 185, 7);
}

uint64_t sub_1009FF07C(uint64_t a1, uint64_t a2)
{
  return a2;
}

unint64_t sub_1009FF0D8()
{
  unint64_t result = qword_10168B610;
  if (!qword_10168B610)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168B610);
  }
  return result;
}

uint64_t sub_1009FF12C()
{
  swift_unknownObjectWeakDestroy();
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 73, 7);
}

uint64_t sub_1009FF16C(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1009FF1C8()
{
  return _swift_deallocObject(v0, 64, 7);
}

unint64_t sub_1009FF1D8()
{
  unint64_t result = qword_10168B618;
  if (!qword_10168B618)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168B618);
  }
  return result;
}

uint64_t sub_1009FF22C()
{
  swift_unknownObjectWeakDestroy();
  if (*(void *)(v0 + 48)) {
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v0 + 24);
  }

  return _swift_deallocObject(v0, 57, 7);
}

uint64_t sub_1009FF274(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1009FF2D0()
{
  return _swift_deallocObject(v0, 144, 7);
}

uint64_t sub_1009FF2E0()
{
  return _swift_deallocObject(v0, 48, 7);
}

unint64_t sub_1009FF2F0()
{
  unint64_t result = qword_10168B620;
  if (!qword_10168B620)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168B620);
  }
  return result;
}

uint64_t sub_1009FF344()
{
  if (*(void *)(v0 + 40)) {
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v0 + 16);
  }
  if (*(void *)(v0 + 72)) {
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v0 + 48);
  }
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 104, 7);
}

BOOL sub_1009FF39C(uint64_t a1, uint64_t a2)
{
  sub_100557A70(a1, (uint64_t)&v13);
  if (v14)
  {
    sub_100575CE8(&v13, &v15);
    sub_100557A70(a2, (uint64_t)&v11);
    if (v12)
    {
      sub_100575CE8(&v11, &v13);
      sub_100522D7C((uint64_t)&v15, (uint64_t)&v11);
      sub_10050BF48(0, (unint64_t *)&qword_101672E50);
      if (swift_dynamicCast())
      {
        sub_100522D7C((uint64_t)&v13, (uint64_t)&v11);
        if (swift_dynamicCast())
        {
          id v4 = v10;
          unint64_t v5 = (unint64_t)[v10 isEqual:v4];

LABEL_13:
          _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v13);
          _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v15);
          return v5;
        }
      }
      sub_10050F848(&v15, v16);
      uint64_t v7 = _bridgeAnythingToObjectiveC<A>(_:)();
      sub_10050F848(&v13, v14);
      uint64_t v8 = _bridgeAnythingToObjectiveC<A>(_:)();
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      unint64_t v5 = v7 == v8;
      goto LABEL_13;
    }
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v15);
    uint64_t v6 = &v11;
  }
  else
  {
    uint64_t v6 = &v13;
  }
  sub_10052E2B0((uint64_t)v6);
  sub_100557A70(a1, (uint64_t)&v15);
  sub_1005057FC(&qword_101672BF0);
  Optional._bridgeToObjectiveC()();
  sub_10052E2B0((uint64_t)&v15);
  swift_unknownObjectRelease();
  return !*(void *)(a1 + 24) && !*(void *)(a2 + 24);
}

uint64_t sub_1009FF590(uint64_t a1, uint64_t a2)
{
  sub_1006006C8(a1, (uint64_t)&v222);
  switch(v245)
  {
    case 1:
      sub_10051B3EC((uint64_t)&v222, (uint64_t)&v187, &qword_101672BF0);
      sub_1006006C8(a2, (uint64_t)&v198);
      if (v221 != 1) {
        goto LABEL_90;
      }
      goto LABEL_5;
    case 2:
      CGFloat v5 = v222.f64[1];
      CGFloat v4 = v222.f64[0];
      CGFloat v7 = v223.f64[1];
      CGFloat v6 = v223.f64[0];
      CGFloat v9 = v224.f64[1];
      CGFloat v8 = v224.f64[0];
      CGFloat v11 = v225.f64[1];
      CGFloat v10 = v225.f64[0];
      sub_1006006C8(a2, (uint64_t)&v198);
      if (v221 == 2) {
        goto LABEL_170;
      }
      goto LABEL_192;
    case 3:
      CGFloat v9 = v222.f64[1];
      CGFloat v8 = v222.f64[0];
      CGFloat v11 = v223.f64[1];
      CGFloat v10 = v223.f64[0];
      sub_1006006C8(a2, (uint64_t)&v198);
      if (v221 != 3) {
        goto LABEL_192;
      }
      goto LABEL_173;
    case 4:
      double v13 = v222.f64[1];
      double v12 = v222.f64[0];
      double v14 = v223.f64[1];
      double v15 = v223.f64[0];
      sub_1006006C8(a2, (uint64_t)&v198);
      if (v221 != 4) {
        goto LABEL_192;
      }
      goto LABEL_123;
    case 5:
      double v16 = v222.f64[1];
      double v17 = v222.f64[0];
      sub_1006006C8(a2, (uint64_t)&v198);
      if (v221 != 5) {
        goto LABEL_192;
      }
      goto LABEL_134;
    case 6:
      float v18 = *((float *)v222.f64 + 1);
      float v19 = *(float *)v222.f64;
      sub_1006006C8(a2, (uint64_t)&v198);
      if (v221 == 6) {
        goto LABEL_47;
      }
      goto LABEL_192;
    case 7:
      float v20 = *(float *)v222.f64;
      sub_1006006C8(a2, (uint64_t)&v198);
      if (v221 == 7) {
        goto LABEL_51;
      }
      goto LABEL_192;
    case 8:
      char v21 = LOBYTE(v222.f64[0]);
      char v22 = BYTE1(v222.f64[0]);
      sub_1006006C8(a2, (uint64_t)&v198);
      if (v221 != 8) {
        goto LABEL_192;
      }
      goto LABEL_99;
    case 9:
      char v23 = LOBYTE(v222.f64[0]);
      sub_1006006C8(a2, (uint64_t)&v198);
      if (v221 != 9) {
        goto LABEL_192;
      }
      goto LABEL_101;
    case 10:
      char v21 = LOBYTE(v222.f64[0]);
      char v22 = BYTE1(v222.f64[0]);
      sub_1006006C8(a2, (uint64_t)&v198);
      if (v221 != 10) {
        goto LABEL_192;
      }
      goto LABEL_99;
    case 11:
      char v23 = LOBYTE(v222.f64[0]);
      sub_1006006C8(a2, (uint64_t)&v198);
      if (v221 == 11) {
        goto LABEL_101;
      }
      goto LABEL_192;
    case 12:
      char v21 = LOBYTE(v222.f64[0]);
      char v22 = BYTE1(v222.f64[0]);
      sub_1006006C8(a2, (uint64_t)&v198);
      if (v221 == 12) {
        goto LABEL_99;
      }
      goto LABEL_192;
    case 13:
      char v23 = LOBYTE(v222.f64[0]);
      sub_1006006C8(a2, (uint64_t)&v198);
      if (v221 != 13) {
        goto LABEL_192;
      }
      goto LABEL_101;
    case 14:
      double v16 = v222.f64[1];
      double v17 = v222.f64[0];
      sub_1006006C8(a2, (uint64_t)&v198);
      if (v221 != 14) {
        goto LABEL_192;
      }
      goto LABEL_134;
    case 15:
      double v14 = v222.f64[0];
      sub_1006006C8(a2, (uint64_t)&v198);
      if (v221 != 15) {
        goto LABEL_192;
      }
      goto LABEL_121;
    case 16:
      double v16 = v222.f64[1];
      double v17 = v222.f64[0];
      sub_1006006C8(a2, (uint64_t)&v198);
      if (v221 != 16) {
        goto LABEL_192;
      }
      goto LABEL_134;
    case 17:
      double v14 = v222.f64[0];
      sub_1006006C8(a2, (uint64_t)&v198);
      if (v221 != 17) {
        goto LABEL_192;
      }
      goto LABEL_121;
    case 18:
      float64_t v25 = v222.f64[1];
      float64_t v24 = v222.f64[0];
      sub_1006006C8(a2, (uint64_t)&v198);
      if (v221 == 18) {
        goto LABEL_61;
      }
      goto LABEL_74;
    case 19:
      float64_t v26 = v222.f64[0];
      sub_1006006C8(a2, (uint64_t)&v198);
      if (v221 == 19) {
        goto LABEL_66;
      }
      goto LABEL_80;
    case 20:
      float64_t v25 = v222.f64[1];
      float64_t v24 = v222.f64[0];
      sub_1006006C8(a2, (uint64_t)&v198);
      if (v221 != 20) {
        goto LABEL_74;
      }
      goto LABEL_61;
    case 21:
      float64_t v26 = v222.f64[0];
      sub_1006006C8(a2, (uint64_t)&v198);
      if (v221 != 21) {
        goto LABEL_80;
      }
      goto LABEL_66;
    case 22:
      float v18 = *((float *)v222.f64 + 1);
      float v19 = *(float *)v222.f64;
      sub_1006006C8(a2, (uint64_t)&v198);
      if (v221 != 22) {
        goto LABEL_192;
      }
LABEL_47:
      LOBYTE(v3) = v18 == *((float *)v198.f64 + 1) && v19 == *(float *)v198.f64;
      return LOBYTE(v3) & 1;
    case 23:
      float v20 = *(float *)v222.f64;
      sub_1006006C8(a2, (uint64_t)&v198);
      if (v221 != 23) {
        goto LABEL_192;
      }
LABEL_51:
      LOBYTE(v3) = v20 == *(float *)v198.f64;
      return LOBYTE(v3) & 1;
    case 24:
      double v16 = v222.f64[1];
      double v17 = v222.f64[0];
      sub_1006006C8(a2, (uint64_t)&v198);
      if (v221 != 24) {
        goto LABEL_192;
      }
      goto LABEL_134;
    case 25:
      double v14 = v222.f64[0];
      sub_1006006C8(a2, (uint64_t)&v198);
      if (v221 != 25) {
        goto LABEL_192;
      }
      goto LABEL_121;
    case 26:
      double v13 = v222.f64[1];
      double v12 = v222.f64[0];
      double v14 = v223.f64[1];
      double v15 = v223.f64[0];
      sub_1006006C8(a2, (uint64_t)&v198);
      if (v221 != 26) {
        goto LABEL_192;
      }
      goto LABEL_123;
    case 27:
      double v16 = v222.f64[1];
      double v17 = v222.f64[0];
      sub_1006006C8(a2, (uint64_t)&v198);
      if (v221 != 27) {
        goto LABEL_192;
      }
      goto LABEL_134;
    case 28:
      float64_t v25 = v222.f64[1];
      float64_t v24 = v222.f64[0];
      sub_1006006C8(a2, (uint64_t)&v198);
      if (v221 != 28) {
        goto LABEL_74;
      }
LABEL_61:
      float64_t v28 = v198.f64[1];
      float64_t v27 = v198.f64[0];
      if (v24 == 0.0)
      {
        if (*(void *)&v198.f64[0]) {
          goto LABEL_204;
        }
      }
      else
      {
        if (!*(void *)&v198.f64[0]) {
          goto LABEL_195;
        }
        type metadata accessor for CGColor(0);
        sub_100A01194((unint64_t *)&qword_10168B630, type metadata accessor for CGColor);
        id v29 = *(id *)&v27;
        id v30 = *(id *)&v24;
        char v31 = static _CFObject.== infix(_:_:)();

        if ((v31 & 1) == 0) {
          goto LABEL_73;
        }
      }
      if (v25 == 0.0) {
        goto LABEL_227;
      }
      if (v28 != 0.0)
      {
        type metadata accessor for CGColor(0);
        uint64_t v96 = (unint64_t *)&qword_10168B630;
        long long v97 = type metadata accessor for CGColor;
        goto LABEL_226;
      }
      goto LABEL_230;
    case 29:
      float64_t v26 = v222.f64[0];
      sub_1006006C8(a2, (uint64_t)&v198);
      if (v221 != 29) {
        goto LABEL_80;
      }
LABEL_66:
      float64_t v32 = v198.f64[0];
      if (v26 == 0.0) {
        goto LABEL_185;
      }
      if (!*(void *)&v198.f64[0]) {
        goto LABEL_196;
      }
      type metadata accessor for CGColor(0);
      long long v33 = (unint64_t *)&qword_10168B630;
      long long v34 = type metadata accessor for CGColor;
      goto LABEL_79;
    case 30:
      float64_t v25 = v222.f64[1];
      float64_t v24 = v222.f64[0];
      sub_1006006C8(a2, (uint64_t)&v198);
      if (v221 != 30)
      {
LABEL_74:

        goto LABEL_192;
      }
      float64_t v28 = v198.f64[1];
      float64_t v27 = v198.f64[0];
      if (v24 == 0.0)
      {
        if (*(void *)&v198.f64[0])
        {
LABEL_204:

          goto LABEL_205;
        }
      }
      else
      {
        if (!*(void *)&v198.f64[0])
        {
LABEL_195:

          goto LABEL_205;
        }
        type metadata accessor for CGPath(0);
        sub_100A01194((unint64_t *)&qword_10168B628, type metadata accessor for CGPath);
        id v29 = *(id *)&v27;
        id v30 = *(id *)&v24;
        char v35 = static _CFObject.== infix(_:_:)();

        if ((v35 & 1) == 0)
        {
LABEL_73:

LABEL_205:
          goto LABEL_193;
        }
      }
      if (v25 == 0.0)
      {
LABEL_227:

        if (v28 != 0.0)
        {

          goto LABEL_193;
        }
LABEL_229:
        LOBYTE(v3) = 1;
      }
      else
      {
        if (v28 == 0.0)
        {
LABEL_230:

          goto LABEL_193;
        }
        type metadata accessor for CGPath(0);
        uint64_t v96 = (unint64_t *)&qword_10168B628;
        long long v97 = type metadata accessor for CGPath;
LABEL_226:
        sub_100A01194(v96, v97);
        id v101 = *(id *)&v28;
        id v102 = *(id *)&v25;
        LOBYTE(v3) = static _CFObject.== infix(_:_:)();
      }
      return LOBYTE(v3) & 1;
    case 31:
      float64_t v26 = v222.f64[0];
      sub_1006006C8(a2, (uint64_t)&v198);
      if (v221 != 31)
      {
LABEL_80:

        goto LABEL_192;
      }
      float64_t v32 = v198.f64[0];
      if (v26 == 0.0)
      {
LABEL_185:
        if (v32 != 0.0) {
          goto LABEL_241;
        }
        goto LABEL_229;
      }
      if (!*(void *)&v198.f64[0])
      {
LABEL_196:

        goto LABEL_193;
      }
      type metadata accessor for CGPath(0);
      long long v33 = (unint64_t *)&qword_10168B628;
      long long v34 = type metadata accessor for CGPath;
LABEL_79:
      sub_100A01194(v33, v34);
      id v36 = *(id *)&v32;
      id v37 = *(id *)&v26;
      LOBYTE(v3) = static _CFObject.== infix(_:_:)();

      return LOBYTE(v3) & 1;
    case 32:
      float64x2_t v38 = v222;
      sub_1006006C8(a2, (uint64_t)&v198);
      if (v221 != 32) {
        goto LABEL_182;
      }
      float64_t v39 = v198.f64[1];
      float64_t v40 = v198.f64[0];
      if (*(void *)&v38.f64[0])
      {
        *(void *)&v199.f64[1] = sub_1005057FC((uint64_t *)&unk_10167C8C0);
        v198.f64[0] = v38.f64[0];
      }
      else
      {
        float64x2_t v199 = 0u;
        float64x2_t v198 = 0u;
      }
      if (v40 == 0.0)
      {
        float64x2_t v188 = 0u;
        float64x2_t v187 = 0u;
      }
      else
      {
        *(void *)&v188.f64[1] = sub_1005057FC((uint64_t *)&unk_10167C8C0);
        v187.f64[0] = v40;
      }
      BOOL v99 = sub_1009FF39C((uint64_t)&v198, (uint64_t)&v187);
      sub_10052E2B0((uint64_t)&v187);
      sub_10052E2B0((uint64_t)&v198);
      if (!v99) {
        goto LABEL_222;
      }
      if (*(void *)&v38.f64[1])
      {
        *(void *)&v199.f64[1] = sub_1005057FC((uint64_t *)&unk_10167C8C0);
        v198.f64[0] = v38.f64[1];
      }
      else
      {
        float64x2_t v199 = 0u;
        float64x2_t v198 = 0u;
      }
      if (v39 == 0.0) {
        goto LABEL_220;
      }
      goto LABEL_97;
    case 33:
      float64_t v41 = v222.f64[0];
      sub_1006006C8(a2, (uint64_t)&v198);
      if (v221 == 33) {
        goto LABEL_95;
      }
      goto LABEL_183;
    case 34:
      sub_10051B3EC((uint64_t)&v222, (uint64_t)&v187, &qword_101672BF0);
      sub_10051B3EC((uint64_t)&v224, (uint64_t)&v179, &qword_101672BF0);
      sub_1006006C8(a2, (uint64_t)&v198);
      if (v221 == 34) {
        goto LABEL_87;
      }
      goto LABEL_3;
    case 35:
      sub_10051B3EC((uint64_t)&v222, (uint64_t)&v187, &qword_101672BF0);
      sub_1006006C8(a2, (uint64_t)&v198);
      if (v221 != 35) {
        goto LABEL_90;
      }
LABEL_5:
      sub_10051B3EC((uint64_t)&v198, (uint64_t)&v179, &qword_101672BF0);
      LOBYTE(v3) = sub_1009FF39C((uint64_t)&v187, (uint64_t)&v179);
      goto LABEL_199;
    case 36:
      float64_t v41 = v222.f64[1];
      float64_t v43 = v222.f64[0];
      sub_1006006C8(a2, (uint64_t)&v198);
      if (v221 == 36)
      {
        float64_t v39 = v198.f64[1];
        float64_t v44 = v198.f64[0];
        if (v43 == 0.0)
        {
          float64x2_t v199 = 0u;
          float64x2_t v198 = 0u;
        }
        else
        {
          *(void *)&v199.f64[1] = sub_1005057FC((uint64_t *)&unk_10167C8C0);
          v198.f64[0] = v43;
        }
        if (v44 == 0.0)
        {
          float64x2_t v188 = 0u;
          float64x2_t v187 = 0u;
        }
        else
        {
          *(void *)&v188.f64[1] = sub_1005057FC((uint64_t *)&unk_10167C8C0);
          v187.f64[0] = v44;
        }
        BOOL v100 = sub_1009FF39C((uint64_t)&v198, (uint64_t)&v187);
        sub_10052E2B0((uint64_t)&v187);
        sub_10052E2B0((uint64_t)&v198);
        if (v100)
        {
          if (v41 == 0.0)
          {
LABEL_219:
            float64x2_t v199 = 0u;
            float64x2_t v198 = 0u;
            if (v39 == 0.0) {
              goto LABEL_220;
            }
          }
          else
          {
LABEL_96:
            *(void *)&v199.f64[1] = sub_1005057FC((uint64_t *)&unk_10167C8C0);
            v198.f64[0] = v41;
            if (v39 == 0.0)
            {
LABEL_220:
              float64x2_t v188 = 0u;
              float64x2_t v187 = 0u;
              goto LABEL_221;
            }
          }
LABEL_97:
          *(void *)&v188.f64[1] = sub_1005057FC((uint64_t *)&unk_10167C8C0);
          v187.f64[0] = v39;
LABEL_221:
          LOBYTE(v3) = sub_1009FF39C((uint64_t)&v198, (uint64_t)&v187);
          sub_10052E2B0((uint64_t)&v187);
          sub_10052E2B0((uint64_t)&v198);
          return LOBYTE(v3) & 1;
        }
LABEL_222:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {
LABEL_182:
        swift_bridgeObjectRelease();
LABEL_183:
        swift_bridgeObjectRelease();
LABEL_192:
        sub_10054BD5C((uint64_t)&v198);
      }
LABEL_193:
      LOBYTE(v3) = 0;
      return LOBYTE(v3) & 1;
    case 37:
      float64_t v41 = v222.f64[0];
      sub_1006006C8(a2, (uint64_t)&v198);
      if (v221 != 37) {
        goto LABEL_183;
      }
LABEL_95:
      float64_t v39 = v198.f64[0];
      if (v41 != 0.0) {
        goto LABEL_96;
      }
      goto LABEL_219;
    case 38:
      char v21 = LOBYTE(v222.f64[0]);
      char v22 = BYTE1(v222.f64[0]);
      sub_1006006C8(a2, (uint64_t)&v198);
      if (v221 != 38) {
        goto LABEL_192;
      }
LABEL_99:
      LOBYTE(v3) = (v21 ^ LOBYTE(v198.f64[0]) | v22 ^ BYTE1(v198.f64[0])) ^ 1;
      return LOBYTE(v3) & 1;
    case 39:
      char v23 = LOBYTE(v222.f64[0]);
      sub_1006006C8(a2, (uint64_t)&v198);
      if (v221 != 39) {
        goto LABEL_192;
      }
LABEL_101:
      LOBYTE(v3) = v23 ^ LOBYTE(v198.f64[0]) ^ 1;
      return LOBYTE(v3) & 1;
    case 40:
      double v16 = v222.f64[1];
      double v17 = v222.f64[0];
      sub_1006006C8(a2, (uint64_t)&v198);
      if (v221 != 40) {
        goto LABEL_192;
      }
      goto LABEL_134;
    case 41:
      double v14 = v222.f64[0];
      sub_1006006C8(a2, (uint64_t)&v198);
      if (v221 != 41) {
        goto LABEL_192;
      }
      goto LABEL_121;
    case 42:
      CGFloat v5 = v222.f64[1];
      CGFloat v4 = v222.f64[0];
      CGFloat v7 = v223.f64[1];
      CGFloat v6 = v223.f64[0];
      CGFloat v9 = v224.f64[1];
      CGFloat v8 = v224.f64[0];
      CGFloat v11 = v225.f64[1];
      CGFloat v10 = v225.f64[0];
      sub_1006006C8(a2, (uint64_t)&v198);
      if (v221 != 42) {
        goto LABEL_192;
      }
      goto LABEL_170;
    case 43:
      CGFloat v9 = v222.f64[1];
      CGFloat v8 = v222.f64[0];
      CGFloat v11 = v223.f64[1];
      CGFloat v10 = v223.f64[0];
      sub_1006006C8(a2, (uint64_t)&v198);
      if (v221 != 43) {
        goto LABEL_192;
      }
      goto LABEL_173;
    case 44:
      double v13 = v222.f64[1];
      double v12 = v222.f64[0];
      double v14 = v223.f64[1];
      double v15 = v223.f64[0];
      sub_1006006C8(a2, (uint64_t)&v198);
      if (v221 != 44) {
        goto LABEL_192;
      }
      goto LABEL_123;
    case 45:
      double v16 = v222.f64[1];
      double v17 = v222.f64[0];
      sub_1006006C8(a2, (uint64_t)&v198);
      if (v221 != 45) {
        goto LABEL_192;
      }
      goto LABEL_134;
    case 46:
      double v16 = v222.f64[1];
      double v17 = v222.f64[0];
      sub_1006006C8(a2, (uint64_t)&v198);
      if (v221 != 46) {
        goto LABEL_192;
      }
      goto LABEL_134;
    case 47:
      double v14 = v222.f64[0];
      sub_1006006C8(a2, (uint64_t)&v198);
      if (v221 != 47) {
        goto LABEL_192;
      }
      goto LABEL_121;
    case 48:
      double v16 = v222.f64[1];
      double v17 = v222.f64[0];
      sub_1006006C8(a2, (uint64_t)&v198);
      if (v221 != 48) {
        goto LABEL_192;
      }
      goto LABEL_134;
    case 49:
      double v14 = v222.f64[0];
      sub_1006006C8(a2, (uint64_t)&v198);
      if (v221 != 49) {
        goto LABEL_192;
      }
LABEL_121:
      double v45 = v198.f64[0];
      goto LABEL_132;
    case 50:
      double v13 = v222.f64[1];
      double v12 = v222.f64[0];
      double v14 = v223.f64[1];
      double v15 = v223.f64[0];
      sub_1006006C8(a2, (uint64_t)&v198);
      if (v221 != 50) {
        goto LABEL_192;
      }
LABEL_123:
      if (v12 != v198.f64[0] || v13 != v198.f64[1] || v15 != v199.f64[0]) {
        goto LABEL_193;
      }
      double v45 = v199.f64[1];
LABEL_132:
      LOBYTE(v3) = v14 == v45;
      return LOBYTE(v3) & 1;
    case 51:
      double v16 = v222.f64[1];
      double v17 = v222.f64[0];
      sub_1006006C8(a2, (uint64_t)&v198);
      if (v221 != 51) {
        goto LABEL_192;
      }
LABEL_134:
      LOBYTE(v3) = v16 == v198.f64[1] && v17 == v198.f64[0];
      return LOBYTE(v3) & 1;
    case 52:
      float64_t v49 = v222.f64[1];
      float64_t v48 = v222.f64[0];
      float64_t v51 = v223.f64[1];
      float64_t v50 = v223.f64[0];
      float64_t v53 = v224.f64[1];
      float64_t v52 = v224.f64[0];
      float64_t v55 = v225.f64[1];
      float64_t v54 = v225.f64[0];
      float64_t v155 = v226.f64[1];
      float64_t v158 = v226.f64[0];
      float64_t v152 = v227.f64[0];
      float64_t v146 = v228.f64[0];
      float64_t v149 = v227.f64[1];
      float64_t v141 = v229.f64[0];
      float64_t v143 = v228.f64[1];
      float64_t v137 = v230.f64[0];
      float64_t v138 = v229.f64[1];
      float64_t v135 = v231;
      float64_t v136 = v230.f64[1];
      float64_t v133 = v233;
      float64_t v134 = v232;
      float64_t v131 = v235;
      float64_t v132 = v234;
      float64_t v129 = v237;
      float64_t v130 = v236;
      double v127 = v239;
      float64_t v128 = v238;
      double v125 = v241;
      double v126 = v240;
      double v123 = v243;
      double v124 = v242;
      double v122 = v244;
      sub_1006006C8(a2, (uint64_t)&v198);
      if (v221 != 52) {
        goto LABEL_192;
      }
      goto LABEL_142;
    case 53:
      float64_t v57 = v222.f64[1];
      float64_t v56 = v222.f64[0];
      float64_t v59 = v223.f64[1];
      float64_t v58 = v223.f64[0];
      float64_t v61 = v224.f64[1];
      float64_t v60 = v224.f64[0];
      float64_t v63 = v225.f64[1];
      float64_t v62 = v225.f64[0];
      float64_t v156 = v226.f64[1];
      float64_t v159 = v226.f64[0];
      float64_t v153 = v227.f64[0];
      float64_t v147 = v228.f64[0];
      float64_t v150 = v227.f64[1];
      float64_t v142 = v229.f64[0];
      float64_t v144 = v228.f64[1];
      float64_t v139 = v229.f64[1];
      sub_1006006C8(a2, (uint64_t)&v198);
      if (v221 != 53) {
        goto LABEL_192;
      }
      goto LABEL_145;
    case 54:
      float64_t v49 = v222.f64[1];
      float64_t v48 = v222.f64[0];
      float64_t v51 = v223.f64[1];
      float64_t v50 = v223.f64[0];
      float64_t v53 = v224.f64[1];
      float64_t v52 = v224.f64[0];
      float64_t v55 = v225.f64[1];
      float64_t v54 = v225.f64[0];
      float64_t v155 = v226.f64[1];
      float64_t v158 = v226.f64[0];
      float64_t v152 = v227.f64[0];
      float64_t v146 = v228.f64[0];
      float64_t v149 = v227.f64[1];
      float64_t v141 = v229.f64[0];
      float64_t v143 = v228.f64[1];
      float64_t v137 = v230.f64[0];
      float64_t v138 = v229.f64[1];
      float64_t v135 = v231;
      float64_t v136 = v230.f64[1];
      float64_t v133 = v233;
      float64_t v134 = v232;
      float64_t v131 = v235;
      float64_t v132 = v234;
      float64_t v129 = v237;
      float64_t v130 = v236;
      double v127 = v239;
      float64_t v128 = v238;
      double v125 = v241;
      double v126 = v240;
      double v123 = v243;
      double v124 = v242;
      double v122 = v244;
      sub_1006006C8(a2, (uint64_t)&v198);
      if (v221 != 54) {
        goto LABEL_192;
      }
LABEL_142:
      float64_t v120 = v206.f64[1];
      float64_t v121 = v206.f64[0];
      float64_t v118 = v208;
      float64_t v119 = v207;
      float64_t v116 = v210;
      float64_t v117 = v209;
      float64_t v114 = v212;
      float64_t v115 = v211;
      float64_t v112 = v214;
      float64_t v113 = v213;
      float64_t v110 = v216;
      float64_t v111 = v215;
      float64_t v108 = v218;
      float64_t v109 = v217;
      float64_t v106 = v220;
      float64_t v107 = v219;
      v187.f64[0] = v48;
      v187.f64[1] = v49;
      v188.f64[0] = v50;
      v188.f64[1] = v51;
      v189.f64[0] = v52;
      v189.f64[1] = v53;
      v190.f64[0] = v54;
      v190.f64[1] = v55;
      v191.f64[0] = v158;
      v191.f64[1] = v155;
      float64_t v192 = v152;
      float64_t v193 = v149;
      float64_t v194 = v146;
      float64_t v195 = v143;
      float64_t v196 = v141;
      float64_t v197 = v138;
      float64x2_t v179 = v198;
      float64x2_t v180 = v199;
      float64x2_t v181 = v200;
      float64x2_t v182 = v201;
      float64x2_t v183 = v202;
      float64x2_t v184 = v203;
      float64x2_t v185 = v204;
      float64x2_t v186 = v205;
      if (!sub_100080414(v187.f64, v179.f64, 0.0)) {
        goto LABEL_193;
      }
      v187.f64[0] = v137;
      v187.f64[1] = v136;
      v188.f64[0] = v135;
      v188.f64[1] = v134;
      v189.f64[0] = v133;
      v189.f64[1] = v132;
      v190.f64[0] = v131;
      v190.f64[1] = v130;
      v191.f64[0] = v129;
      v191.f64[1] = v128;
      float64_t v192 = v127;
      float64_t v193 = v126;
      float64_t v194 = v125;
      float64_t v195 = v124;
      float64_t v196 = v123;
      float64_t v197 = v122;
      v179.f64[0] = v121;
      v179.f64[1] = v120;
      v180.f64[0] = v119;
      v180.f64[1] = v118;
      v181.f64[0] = v117;
      v181.f64[1] = v116;
      v182.f64[0] = v115;
      v182.f64[1] = v114;
      v183.f64[0] = v113;
      v183.f64[1] = v112;
      v184.f64[0] = v111;
      v184.f64[1] = v110;
      v185.f64[0] = v109;
      v185.f64[1] = v108;
      v186.f64[0] = v107;
      v186.f64[1] = v106;
LABEL_146:
      long long v64 = (double *)&v187;
      long long v65 = (double *)&v179;
      goto LABEL_147;
    case 55:
      float64_t v57 = v222.f64[1];
      float64_t v56 = v222.f64[0];
      float64_t v59 = v223.f64[1];
      float64_t v58 = v223.f64[0];
      float64_t v61 = v224.f64[1];
      float64_t v60 = v224.f64[0];
      float64_t v63 = v225.f64[1];
      float64_t v62 = v225.f64[0];
      float64_t v156 = v226.f64[1];
      float64_t v159 = v226.f64[0];
      float64_t v153 = v227.f64[0];
      float64_t v147 = v228.f64[0];
      float64_t v150 = v227.f64[1];
      float64_t v142 = v229.f64[0];
      float64_t v144 = v228.f64[1];
      float64_t v139 = v229.f64[1];
      sub_1006006C8(a2, (uint64_t)&v198);
      if (v221 != 55) {
        goto LABEL_192;
      }
LABEL_145:
      v187.f64[0] = v56;
      v187.f64[1] = v57;
      v188.f64[0] = v58;
      v188.f64[1] = v59;
      v189.f64[0] = v60;
      v189.f64[1] = v61;
      v190.f64[0] = v62;
      v190.f64[1] = v63;
      v191.f64[0] = v159;
      v191.f64[1] = v156;
      float64_t v192 = v153;
      float64_t v193 = v150;
      float64_t v194 = v147;
      float64_t v195 = v144;
      float64_t v196 = v142;
      float64_t v197 = v139;
      float64x2_t v179 = v198;
      float64x2_t v180 = v199;
      float64x2_t v181 = v200;
      float64x2_t v182 = v201;
      float64x2_t v183 = v202;
      float64x2_t v184 = v203;
      float64x2_t v185 = v204;
      float64x2_t v186 = v205;
      goto LABEL_146;
    case 56:
      float64x2_t v179 = v222;
      float64x2_t v180 = v223;
      float64x2_t v181 = v224;
      float64x2_t v163 = v225;
      float64x2_t v164 = v226;
      float64x2_t v165 = v227;
      sub_1006006C8(a2, (uint64_t)&v198);
      if (v221 != 56) {
        goto LABEL_192;
      }
      float64x2_t v187 = v198;
      float64x2_t v188 = v199;
      float64x2_t v189 = v200;
      float64x2_t v171 = v201;
      float64x2_t v172 = v202;
      float64x2_t v173 = v203;
      if (static CGAffineTransform.== infix(_:_:)()) {
        goto LABEL_153;
      }
      goto LABEL_193;
    case 57:
      float64x2_t v179 = v222;
      float64x2_t v180 = v223;
      float64x2_t v181 = v224;
      sub_1006006C8(a2, (uint64_t)&v198);
      if (v221 != 57) {
        goto LABEL_192;
      }
      float64x2_t v187 = v198;
      float64x2_t v188 = v199;
      float64x2_t v189 = v200;
LABEL_153:
      LOBYTE(v3) = static CGAffineTransform.== infix(_:_:)();
      return LOBYTE(v3) & 1;
    case 58:
      float64x2_t v66 = v222;
      float64x2_t v67 = v223;
      char v68 = LOBYTE(v224.f64[0]);
      float64_t v32 = v224.f64[1];
      int v69 = LOBYTE(v225.f64[0]);
      sub_1006006C8(a2, (uint64_t)&v198);
      if (v221 != 58)
      {

        goto LABEL_192;
      }
      float64_t v3 = v200.f64[1];
      if (v66.f64[0] != v198.f64[0] || v66.f64[1] != v198.f64[1]) {
        goto LABEL_240;
      }
      int v70 = LOBYTE(v201.f64[0]);
      if (v68)
      {
        if ((LOBYTE(v200.f64[0]) & 1) == 0) {
          goto LABEL_240;
        }
      }
      else if ((LOBYTE(v200.f64[0]) & 1) != 0 || v67.f64[0] != v199.f64[0] || v67.f64[1] != v199.f64[1])
      {
LABEL_240:

LABEL_241:
        goto LABEL_193;
      }
      if (v32 == 0.0)
      {
        if (*(void *)&v200.f64[1])
        {

          goto LABEL_193;
        }
      }
      else
      {
        if (!*(void *)&v200.f64[1])
        {

          return LOBYTE(v3) & 1;
        }
        sub_10050BF48(0, (unint64_t *)&qword_10167ACF0);
        id v103 = *(id *)&v3;
        id v104 = *(id *)&v32;
        char v105 = static NSObject.== infix(_:_:)();

        if ((v105 & 1) == 0) {
          goto LABEL_193;
        }
      }
      LOBYTE(v3) = v70 == 2 && v69 == 2;
      if (v69 != 2 && v70 != 2) {
        LOBYTE(v3) = ((v69 & 1) == 0) ^ v70;
      }
      return LOBYTE(v3) & 1;
    case 59:
      float64x2_t v157 = v222;
      float64x2_t v160 = v223;
      sub_10051B3EC((uint64_t)&v224, (uint64_t)&v187, &qword_1016758E0);
      sub_1006006C8(a2, (uint64_t)&v198);
      if (v221 != 59) {
        goto LABEL_192;
      }
      float64x2_t v151 = v198;
      float64x2_t v154 = v199;
      sub_10051B3EC((uint64_t)&v200, (uint64_t)&v179, &qword_1016758E0);
      if (vminv_u16((uint16x4_t)vcltz_s16(vshl_n_s16(vmovn_s32(vuzp1q_s32((int32x4_t)vceqq_f64(v157, v151), (int32x4_t)vceqq_f64(v160, v154))), 0xFuLL))))goto LABEL_166; {
      goto LABEL_193;
      }
    case 60:
      float64x2_t v71 = v222;
      float64x2_t v72 = v223;
      float64x2_t v73 = v224;
      float64x2_t v74 = v225;
      sub_10051B3EC((uint64_t)&v226, (uint64_t)&v187, &qword_1016758E0);
      sub_1006006C8(a2, (uint64_t)&v198);
      if (v221 != 60) {
        goto LABEL_192;
      }
      float64x2_t v75 = v198;
      float64x2_t v76 = v199;
      CGFloat v145 = v200.f64[1];
      CGFloat v148 = v200.f64[0];
      float64x2_t v140 = v201;
      sub_10051B3EC((uint64_t)&v202, (uint64_t)&v179, &qword_1016758E0);
      if (!sub_100627F14(v75.f64[0], v75.f64[1], v76.f64[0], v76.f64[1], v71.f64[0], v71.f64[1], v72.f64[0], v72.f64[1])|| !sub_100627F14(v148, v145, v140.f64[0], v140.f64[1], v73.f64[0], v73.f64[1], v74.f64[0], v74.f64[1]))
      {
        goto LABEL_193;
      }
LABEL_166:
      sub_10051B3EC((uint64_t)&v187, (uint64_t)&v171, &qword_1016758E0);
      if (sub_1005E938C((uint64_t)&v171) == 1)
      {
        sub_10051B3EC((uint64_t)&v179, (uint64_t)&v163, &qword_1016758E0);
        if (sub_1005E938C((uint64_t)&v163) == 1) {
          goto LABEL_229;
        }
        goto LABEL_193;
      }
      sub_10051B3EC((uint64_t)&v179, (uint64_t)&v163, &qword_1016758E0);
      if (sub_1005E938C((uint64_t)&v163) == 1) {
        goto LABEL_193;
      }
      v162[0] = v171;
      v162[1] = v172;
      v162[2] = v173;
      v162[3] = v174;
      v162[4] = v175;
      v162[5] = v176;
      v162[6] = v177;
      v162[7] = v178;
      v161[0] = v163;
      v161[1] = v164;
      v161[2] = v165;
      v161[3] = v166;
      v161[4] = v167;
      v161[5] = v168;
      v161[6] = v169;
      v161[7] = v170;
      long long v64 = (double *)v162;
      long long v65 = (double *)v161;
LABEL_147:
      LOBYTE(v3) = sub_100080414(v64, v65, 0.0);
      return LOBYTE(v3) & 1;
    case 61:
      CGFloat v5 = v222.f64[1];
      CGFloat v4 = v222.f64[0];
      CGFloat v7 = v223.f64[1];
      CGFloat v6 = v223.f64[0];
      CGFloat v9 = v224.f64[1];
      CGFloat v8 = v224.f64[0];
      CGFloat v11 = v225.f64[1];
      CGFloat v10 = v225.f64[0];
      sub_1006006C8(a2, (uint64_t)&v198);
      if (v221 != 61) {
        goto LABEL_192;
      }
LABEL_170:
      float64x2_t v77 = v200;
      float64x2_t v78 = v201;
      if (!sub_100627F14(v198.f64[0], v198.f64[1], v199.f64[0], v199.f64[1], v4, v5, v6, v7)) {
        goto LABEL_193;
      }
      CGFloat v80 = v77.f64[1];
      CGFloat v79 = v77.f64[0];
      CGFloat v82 = v78.f64[1];
      CGFloat v81 = v78.f64[0];
LABEL_174:
      LOBYTE(v3) = sub_100627F14(v79, v80, v81, v82, v8, v9, v10, v11);
      return LOBYTE(v3) & 1;
    case 62:
      CGFloat v9 = v222.f64[1];
      CGFloat v8 = v222.f64[0];
      CGFloat v11 = v223.f64[1];
      CGFloat v10 = v223.f64[0];
      sub_1006006C8(a2, (uint64_t)&v198);
      if (v221 != 62) {
        goto LABEL_192;
      }
LABEL_173:
      CGFloat v80 = v198.f64[1];
      CGFloat v79 = v198.f64[0];
      CGFloat v82 = v199.f64[1];
      CGFloat v81 = v199.f64[0];
      goto LABEL_174;
    case 63:
      float64x2_t v83 = v222;
      float64x2_t v84 = v223;
      CGFloat v86 = v224.f64[1];
      CGFloat v85 = v224.f64[0];
      CGFloat v88 = v225.f64[1];
      CGFloat v87 = v225.f64[0];
      float64x2_t v189 = v228;
      float64x2_t v190 = v229;
      float64x2_t v191 = v230;
      float64_t v192 = v231;
      float64x2_t v187 = v226;
      float64x2_t v188 = v227;
      sub_1006006C8(a2, (uint64_t)&v198);
      if (v221 != 63) {
        goto LABEL_184;
      }
      float64x2_t v89 = v200;
      float64x2_t v90 = v201;
      float64x2_t v181 = v204;
      float64x2_t v182 = v205;
      float64x2_t v183 = v206;
      v184.f64[0] = v207;
      float64x2_t v179 = v202;
      float64x2_t v180 = v203;
      if (sub_100627F14(v198.f64[0], v198.f64[1], v199.f64[0], v199.f64[1], v83.f64[0], v83.f64[1], v84.f64[0], v84.f64[1]))
      {
        CGFloat v92 = v89.f64[1];
        CGFloat v91 = v89.f64[0];
        CGFloat v94 = v90.f64[1];
        CGFloat v93 = v90.f64[0];
        goto LABEL_180;
      }
      sub_1005CFBF0((uint64_t)&v187, (uint64_t)&v198);
      sub_1005CFBF0((uint64_t)&v179, (uint64_t)&v171);
      goto LABEL_201;
    case 64:
      CGFloat v86 = v222.f64[1];
      CGFloat v85 = v222.f64[0];
      CGFloat v88 = v223.f64[1];
      CGFloat v87 = v223.f64[0];
      float64x2_t v189 = v226;
      float64x2_t v190 = v227;
      float64x2_t v191 = v228;
      float64_t v192 = v229.f64[0];
      float64x2_t v187 = v224;
      float64x2_t v188 = v225;
      sub_1006006C8(a2, (uint64_t)&v198);
      if (v221 != 64)
      {
LABEL_184:
        sub_1005CFCF0((uint64_t)&v187);
        goto LABEL_192;
      }
      CGFloat v92 = v198.f64[1];
      CGFloat v91 = v198.f64[0];
      CGFloat v94 = v199.f64[1];
      CGFloat v93 = v199.f64[0];
      float64x2_t v181 = v202;
      float64x2_t v182 = v203;
      float64x2_t v183 = v204;
      v184.f64[0] = v205.f64[0];
      float64x2_t v179 = v200;
      float64x2_t v180 = v201;
LABEL_180:
      BOOL v95 = sub_100627F14(v91, v92, v93, v94, v85, v86, v87, v88);
      sub_1005CFBF0((uint64_t)&v187, (uint64_t)&v198);
      sub_1005CFBF0((uint64_t)&v179, (uint64_t)&v171);
      if (v95) {
        LOBYTE(v3) = sub_1008059E0((uint64_t)&v198, (uint64_t)&v171);
      }
      else {
LABEL_201:
      }
        LOBYTE(v3) = 0;
      sub_1005CFCF0((uint64_t)&v171);
      sub_1005CFCF0((uint64_t)&v198);
      sub_1005CFCF0((uint64_t)&v179);
      sub_1005CFCF0((uint64_t)&v187);
      return LOBYTE(v3) & 1;
    default:
      sub_10051B3EC((uint64_t)&v222, (uint64_t)&v187, &qword_101672BF0);
      sub_10051B3EC((uint64_t)&v224, (uint64_t)&v179, &qword_101672BF0);
      sub_1006006C8(a2, (uint64_t)&v198);
      if (v221)
      {
LABEL_3:
        sub_10052E2B0((uint64_t)&v179);
LABEL_90:
        sub_10052E2B0((uint64_t)&v187);
        goto LABEL_192;
      }
LABEL_87:
      sub_10051B3EC((uint64_t)&v198, (uint64_t)&v171, &qword_101672BF0);
      sub_10051B3EC((uint64_t)&v200, (uint64_t)&v163, &qword_101672BF0);
      BOOL v42 = sub_1009FF39C((uint64_t)&v187, (uint64_t)&v171);
      sub_100557A70((uint64_t)&v179, (uint64_t)&v198);
      sub_100557A70((uint64_t)&v163, (uint64_t)v162);
      LOBYTE(v3) = v42 && sub_1009FF39C((uint64_t)&v198, (uint64_t)v162);
      sub_10052E2B0((uint64_t)v162);
      sub_10052E2B0((uint64_t)&v198);
      sub_10052E2B0((uint64_t)&v163);
      sub_10052E2B0((uint64_t)&v171);
LABEL_199:
      sub_10052E2B0((uint64_t)&v179);
      sub_10052E2B0((uint64_t)&v187);
      return LOBYTE(v3) & 1;
  }
}

uint64_t sub_100A01194(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100A011DC()
{
  if (*(void *)(v0 + 40)) {
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v0 + 16);
  }

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_100A0121C(uint64_t a1)
{
  return a1;
}

uint64_t getEnumTagSinglePayload for CRLLayerPropertyKey(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xE4) {
    goto LABEL_17;
  }
  if (a2 + 28 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 28) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 28;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 28;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 28;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x1D;
  int v8 = v6 - 29;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for CRLLayerPropertyKey(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 28 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 28) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xE4) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xE3)
  {
    unsigned int v6 = ((a2 - 228) >> 8) + 1;
    *uint64_t result = a2 + 28;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100A013CCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 28;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLLayerPropertyKey()
{
  return &type metadata for CRLLayerPropertyKey;
}

unint64_t sub_100A01408()
{
  unint64_t result = qword_10168B638;
  if (!qword_10168B638)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168B638);
  }
  return result;
}

uint64_t sub_100A0145C()
{
  unint64_t v0 = _findStringSwitchCaseWithCache(cases:string:cache:)();
  swift_bridgeObjectRelease();
  if (v0 >= 0x1D) {
    return 29;
  }
  else {
    return v0;
  }
}

uint64_t sub_100A014B0(uint64_t a1, uint64_t *a2, void *a3)
{
  long long v47 = a3;
  float64_t v53 = a2;
  uint64_t v52 = sub_1005057FC(&qword_10169A100);
  __chkstk_darwin(v52, v4);
  float64_t v51 = (char *)&v46 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6, v7);
  CGFloat v9 = (char *)&v46 - v8;
  __chkstk_darwin(v10, v11);
  float64_t v50 = (char *)&v46 - v12;
  uint64_t v13 = *(void *)(a1 + 64);
  uint64_t v48 = a1 + 64;
  uint64_t v14 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v15 = -1;
  if (v14 < 64) {
    uint64_t v15 = ~(-1 << v14);
  }
  unint64_t v16 = v15 & v13;
  int64_t v49 = (unint64_t)(v14 + 63) >> 6;
  uint64_t v54 = a1;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v18 = 0;
  while (v16)
  {
    unint64_t v19 = __clz(__rbit64(v16));
    v16 &= v16 - 1;
    int64_t v55 = v18;
    unint64_t v20 = v19 | (v18 << 6);
LABEL_24:
    uint64_t v25 = v54;
    uint64_t v26 = *(void *)(v54 + 48);
    uint64_t v27 = type metadata accessor for UUID();
    uint64_t v28 = *(void *)(v27 - 8);
    uint64_t v29 = v28;
    uint64_t v30 = v26 + *(void *)(v28 + 72) * v20;
    char v31 = *(void (**)(char *, uint64_t, uint64_t))(v28 + 16);
    uint64_t v32 = (uint64_t)v50;
    v31(v50, v30, v27);
    long long v33 = *(void **)(*(void *)(v25 + 56) + 8 * v20);
    uint64_t v34 = v52;
    *(void *)(v32 + *(int *)(v52 + 48)) = v33;
    sub_100A0306C(v32, (uint64_t)v9);
    uint64_t v35 = *(int *)(v34 + 48);
    id v36 = v51;
    v31(v51, (uint64_t)v9, v27);
    id v37 = *(void **)&v9[v35];
    *(void *)&v36[v35] = v37;
    float64x2_t v38 = *(void (**)(char *, uint64_t))(v29 + 8);
    id v39 = v33;
    float64_t v40 = v37;
    v38(v36, v27);
    float64_t v41 = sub_100DD25BC(v53, v40);
    uint64_t v42 = (*(uint64_t (**)(char *))((swift_isaMask & *v40) + 0xC8))(v41);
    if ((v43 & 1) != 0 && v42 == 8)
    {
      type metadata accessor for CRLFreehandDrawingItem();
      if (swift_dynamicCastClass())
      {
        float64_t v44 = v40;
        double v45 = v47;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)((*v45 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v45 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
      }
    }

    uint64_t result = sub_100522F00((uint64_t)v9, &qword_10169A100);
    int64_t v18 = v55;
  }
  int64_t v21 = v18 + 1;
  if (__OFADD__(v18, 1))
  {
    __break(1u);
    goto LABEL_31;
  }
  if (v21 >= v49) {
    return swift_release();
  }
  unint64_t v22 = *(void *)(v48 + 8 * v21);
  int64_t v23 = v18 + 1;
  if (v22) {
    goto LABEL_23;
  }
  int64_t v23 = v18 + 2;
  if (v18 + 2 >= v49) {
    return swift_release();
  }
  unint64_t v22 = *(void *)(v48 + 8 * v23);
  if (v22) {
    goto LABEL_23;
  }
  int64_t v23 = v18 + 3;
  if (v18 + 3 >= v49) {
    return swift_release();
  }
  unint64_t v22 = *(void *)(v48 + 8 * v23);
  if (v22) {
    goto LABEL_23;
  }
  int64_t v23 = v18 + 4;
  if (v18 + 4 >= v49) {
    return swift_release();
  }
  unint64_t v22 = *(void *)(v48 + 8 * v23);
  if (v22)
  {
LABEL_23:
    unint64_t v16 = (v22 - 1) & v22;
    int64_t v55 = v23;
    unint64_t v20 = __clz(__rbit64(v22)) + (v23 << 6);
    goto LABEL_24;
  }
  uint64_t v24 = v18 + 5;
  if (v18 + 5 >= v49) {
    return swift_release();
  }
  unint64_t v22 = *(void *)(v48 + 8 * v24);
  if (v22)
  {
    int64_t v23 = v18 + 5;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v23 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v23 >= v49) {
      return swift_release();
    }
    unint64_t v22 = *(void *)(v48 + 8 * v23);
    ++v24;
    if (v22) {
      goto LABEL_23;
    }
  }
LABEL_31:
  __break(1u);
  return result;
}

uint64_t sub_100A018B4(void *a1, char a2, double a3, double a4, double a5)
{
  uint64_t v11 = sub_1005057FC(&qword_101672BB0);
  __chkstk_darwin(v11 - 8, v12);
  uint64_t v14 = (char *)v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for TaskPriority();
  uint64_t v16 = *(void *)(v15 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56))(v14, 1, 1, v15);
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = 0;
  *(void *)(v17 + 24) = 0;
  *(void *)(v17 + 32) = a1;
  *(void *)(v17 + 40) = v5;
  *(double *)(v17 + 48) = a4;
  *(double *)(v17 + 56) = a5;
  *(double *)(v17 + 64) = a3;
  *(unsigned char *)(v17 + 72) = a2;
  int v18 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15);
  id v19 = a1;
  if (v18 == 1)
  {
    sub_100522F00((uint64_t)v14, &qword_101672BB0);
  }
  else
  {
    TaskPriority.rawValue.getter();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v14, v15);
    if (*(void *)(v17 + 16))
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v20 = dispatch thunk of Actor.unownedExecutor.getter();
      uint64_t v22 = v21;
      swift_unknownObjectRelease();
      if (v22 | v20)
      {
        v24[0] = 0;
        v24[1] = 0;
        _OWORD v24[2] = v20;
        v24[3] = v22;
      }
    }
  }
  swift_task_create();
  return swift_release();
}

uint64_t sub_100A01B0C(double a1, double a2, double a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9)
{
  *(unsigned char *)(v9 + 232) = a9;
  *(double *)(v9 + 112) = a2;
  *(double *)(v9 + 120) = a3;
  *(double *)(v9 + 104) = a1;
  *(void *)(v9 + 96) = a7;
  *(void *)(v9 + 128) = type metadata accessor for CRLBoardCRDTData(0);
  *(void *)(v9 + 136) = swift_task_alloc();
  uint64_t v10 = type metadata accessor for Locale();
  *(void *)(v9 + 144) = v10;
  *(void *)(v9 + 152) = *(void *)(v10 - 8);
  *(void *)(v9 + 160) = swift_task_alloc();
  uint64_t v11 = type metadata accessor for CRLBoard.RealTimeSessionInfo(0);
  *(void *)(v9 + 168) = v11;
  *(void *)(v9 + 176) = *(void *)(v11 - 8);
  *(void *)(v9 + 184) = swift_task_alloc();
  sub_1005057FC((uint64_t *)&unk_10169A1A0);
  *(void *)(v9 + 192) = swift_task_alloc();
  uint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v9 + 200) = v12;
  *uint64_t v12 = v9;
  v12[1] = sub_100A01CD0;
  return static Task<>.sleep(nanoseconds:)(5000000000);
}

uint64_t sub_100A01CD0()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 208) = v0;
  swift_task_dealloc();
  if (v0)
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    int v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
  else
  {
    return _swift_task_switch(sub_100A01E38, 0, 0);
  }
}

uint64_t sub_100A01E38()
{
  uint64_t v1 = *(void *)(v0 + 96);
  unint64_t v2 = sub_100A39814((uint64_t)_swiftEmptyArrayStorage);
  *(void *)(v0 + 72) = _swiftEmptyArrayStorage;
  int v3 = (unint64_t *)(v0 + 64);
  uint64_t v4 = *(void *)(v1 + OBJC_IVAR____TtC8Freeform8CRLBoard_shareState);
  uint64_t v5 = *(void **)(v4 + 16);
  if (v5)
  {
    id v6 = v5;
    id v7 = [v6 currentUserParticipant];
    if (v7)
    {
      uint64_t v8 = v7;
      id v9 = [v7 role];

      BOOL v10 = v9 == (id)1;
    }
    else
    {

      BOOL v10 = 0;
    }
  }
  else
  {
    BOOL v10 = 1;
  }
  uint64_t v11 = &off_1014C1000;
  id v12 = [objc_allocWithZone((Class)NSNumber) initWithBool:v10];
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_100973904((uint64_t)v12, 0x72656E774F7369, 0xE700000000000000, isUniquelyReferenced_nonNull_native);
  swift_bridgeObjectRelease();
  id v14 = [objc_allocWithZone((Class)NSNumber) initWithBool:*(void *)(v4 + 16) != 0];
  char v15 = swift_isUniquelyReferenced_nonNull_native();
  sub_100973904((uint64_t)v14, 0x6465726168537369, 0xE800000000000000, v15);
  *int v3 = v2;
  swift_bridgeObjectRelease();
  uint64_t v16 = *(void **)(v4 + 16);
  if (v16)
  {
    id v17 = v16;
    id v18 = [v17 currentUserParticipant];
    if (v18)
    {
      id v19 = v18;
      id v20 = [v18 permission];

      id v17 = v19;
    }
    else
    {
      id v20 = [v17 publicPermission];
    }

    BOOL v21 = v20 == (id)2;
  }
  else
  {
    BOOL v21 = 0;
  }
  id v22 = [objc_allocWithZone((Class)NSNumber) initWithBool:v21];
  char v23 = swift_isUniquelyReferenced_nonNull_native();
  sub_100973904((uint64_t)v22, 0x6E4F646165527369, 0xEA0000000000796CLL, v23);
  unint64_t v24 = v2;
  swift_bridgeObjectRelease();
  uint64_t v25 = *(void **)(v4 + 16);
  if (v25)
  {
    id v26 = v25;
    id v27 = [v26 currentUserParticipant];
    if (v27)
    {
      uint64_t v28 = v27;
      id v29 = [v27 role];

      if (v29 == (id)1)
      {
        uint64_t v30 = *(void **)(v4 + 16);
        if (!v30)
        {
          uint64_t v45 = 0;
          unint64_t v32 = 0;
          goto LABEL_42;
        }
        id v31 = [v30 participants];
        sub_10050BF48(0, (unint64_t *)&qword_101693410);
        unint64_t v32 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

        if (v32 >> 62)
        {
          swift_bridgeObjectRetain();
          uint64_t v34 = _CocoaArrayWrapper.endIndex.getter();
          uint64_t v33 = v34;
          if (v34)
          {
LABEL_18:
            if (v33 < 1)
            {
              __break(1u);
              goto LABEL_76;
            }
            for (uint64_t i = 0; i != v33; ++i)
            {
              if ((v32 & 0xC000000000000001) != 0) {
                id v38 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
              }
              else {
                id v38 = *(id *)(v32 + 8 * i + 32);
              }
              id v39 = v38;
              if ([v38 acceptanceStatus] == (id)1)
              {
                specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
                specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
                specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
                specialized ContiguousArray._endMutation()();
              }
              else
              {
              }
            }
            swift_bridgeObjectRelease();
            int v3 = (unint64_t *)(v0 + 64);
            uint64_t v11 = &off_1014C1000;
            if (((unint64_t)_swiftEmptyArrayStorage & 0x8000000000000000) != 0) {
              goto LABEL_57;
            }
LABEL_39:
            if (((unint64_t)_swiftEmptyArrayStorage & 0x4000000000000000) == 0)
            {
              uint64_t v45 = *(void *)&_swiftEmptyArrayStorage[2];
LABEL_41:
              swift_release();
LABEL_42:
              id v46 = [objc_allocWithZone((Class)v11[90]) initWithInteger:v45];
              char v47 = swift_isUniquelyReferenced_nonNull_native();
              sub_100973904((uint64_t)v46, 0xD00000000000001CLL, 0x8000000101268950, v47);
              uint64_t v34 = swift_bridgeObjectRelease();
              if (v32)
              {
                if (v32 >> 62)
                {
                  swift_bridgeObjectRetain();
                  uint64_t v48 = _CocoaArrayWrapper.endIndex.getter();
                  uint64_t v34 = swift_bridgeObjectRelease();
                  if (v48)
                  {
LABEL_45:
                    if (v48 >= 1)
                    {
                      for (uint64_t j = 0; j != v48; ++j)
                      {
                        if ((v32 & 0xC000000000000001) != 0) {
                          id v50 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
                        }
                        else {
                          id v50 = *(id *)(v32 + 8 * j + 32);
                        }
                        float64_t v51 = v50;
                        if ([v50 acceptanceStatus] == (id)2)
                        {
                          specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
                          specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
                          specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
                          specialized ContiguousArray._endMutation()();
                        }
                        else
                        {
                        }
                      }
                      swift_bridgeObjectRelease();
                      int v3 = (unint64_t *)(v0 + 64);
                      uint64_t v11 = &off_1014C1000;
                      if (((unint64_t)_swiftEmptyArrayStorage & 0x8000000000000000) != 0) {
                        goto LABEL_74;
                      }
LABEL_60:
                      if (((unint64_t)_swiftEmptyArrayStorage & 0x4000000000000000) == 0)
                      {
                        uint64_t v44 = *(void *)&_swiftEmptyArrayStorage[2];
LABEL_62:
                        swift_release();
                        goto LABEL_63;
                      }
LABEL_74:
                      swift_bridgeObjectRetain();
                      uint64_t v44 = _CocoaArrayWrapper.endIndex.getter();
                      swift_release();
                      goto LABEL_62;
                    }
LABEL_76:
                    __break(1u);
                    return _swift_task_switch(v34, v35, v36);
                  }
                }
                else
                {
                  uint64_t v48 = *(void *)((v32 & 0xFFFFFFFFFFFFFF8) + 0x10);
                  if (v48) {
                    goto LABEL_45;
                  }
                }
                swift_bridgeObjectRelease();
                uint64_t v11 = &off_1014C1000;
                if (((unint64_t)_swiftEmptyArrayStorage & 0x8000000000000000) != 0) {
                  goto LABEL_74;
                }
                goto LABEL_60;
              }
LABEL_54:
              uint64_t v44 = 0;
LABEL_63:
              id v52 = [objc_allocWithZone((Class)v11[90]) initWithInteger:v44];
              char v53 = swift_isUniquelyReferenced_nonNull_native();
              sub_100973904((uint64_t)v52, 0xD000000000000015, 0x8000000101268910, v53);
              unint64_t v54 = v24;
              *int v3 = v24;
              swift_bridgeObjectRelease();
              uint64_t v55 = *(void *)(v0 + 192);
              uint64_t v56 = *(void *)(v0 + 168);
              uint64_t v57 = *(void *)(v0 + 176);
              uint64_t v58 = *(void *)(v0 + 96) + OBJC_IVAR____TtC8Freeform8CRLBoard_realTimeSessionInfo;
              swift_beginAccess();
              sub_100A02F34(v58, v55);
              int v59 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v57 + 48))(v55, 1, v56);
              uint64_t v60 = *(void *)(v0 + 192);
              if (v59)
              {
                sub_100522F00(*(void *)(v0 + 192), (uint64_t *)&unk_10169A1A0);
                uint64_t v61 = 0;
              }
              else
              {
                uint64_t v62 = *(void *)(v0 + 184);
                sub_100A02F9C(*(void *)(v0 + 192), v62, type metadata accessor for CRLBoard.RealTimeSessionInfo);
                sub_100522F00(v60, (uint64_t *)&unk_10169A1A0);
                swift_retain();
                sub_100A03004(v62, type metadata accessor for CRLBoard.RealTimeSessionInfo);
                swift_getKeyPath();
                swift_getKeyPath();
                static Published.subscript.getter();
                swift_release();
                swift_release();
                swift_release();
                unint64_t v63 = *(void *)(v0 + 88);
                if (v63 >> 62) {
                  goto LABEL_73;
                }
                uint64_t v61 = *(void *)((v63 & 0xFFFFFFFFFFFFFF8) + 0x10);
                swift_bridgeObjectRelease();
              }
              while (__OFADD__(v61, 1))
              {
                __break(1u);
LABEL_73:
                swift_bridgeObjectRetain();
                uint64_t v61 = _CocoaArrayWrapper.endIndex.getter();
                swift_bridgeObjectRelease_n();
              }
              float64_t v40 = &selRef_alignCenter_;
              id v64 = [objc_allocWithZone((Class)NSNumber) initWithInteger:v61 + 1];
              char v65 = swift_isUniquelyReferenced_nonNull_native();
              sub_100973904((uint64_t)v64, 0xD000000000000019, 0x8000000101268930, v65);
              unint64_t v24 = v54;
              swift_bridgeObjectRelease();
              goto LABEL_69;
            }
LABEL_57:
            swift_bridgeObjectRetain();
            uint64_t v45 = _CocoaArrayWrapper.endIndex.getter();
            swift_release();
            goto LABEL_41;
          }
        }
        else
        {
          uint64_t v33 = *(void *)((v32 & 0xFFFFFFFFFFFFFF8) + 0x10);
          uint64_t v34 = swift_bridgeObjectRetain();
          if (v33) {
            goto LABEL_18;
          }
        }
        swift_bridgeObjectRelease();
        if (((unint64_t)_swiftEmptyArrayStorage & 0x8000000000000000) != 0) {
          goto LABEL_57;
        }
        goto LABEL_39;
      }
    }
    else
    {
    }
    float64_t v41 = *(void **)(v4 + 16);
    if (v41)
    {
      id v42 = [v41 participants];
      sub_10050BF48(0, (unint64_t *)&qword_101693410);
      unint64_t v43 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

      if (v43 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v44 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v44 = *(void *)((v43 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
      swift_bridgeObjectRelease();
      goto LABEL_63;
    }
    goto LABEL_54;
  }
  float64_t v40 = &selRef_alignCenter_;
LABEL_69:
  uint64_t v67 = *(void *)(v0 + 152);
  uint64_t v66 = *(void *)(v0 + 160);
  uint64_t v69 = *(void *)(v0 + 136);
  uint64_t v68 = *(void *)(v0 + 144);
  unsigned int v102 = *(unsigned __int8 *)(v0 + 232);
  double v71 = *(double *)(v0 + 112);
  double v70 = *(double *)(v0 + 120);
  uint64_t v72 = *(void *)(v0 + 96);
  double v73 = *(double *)(v0 + 104);
  id v74 = [objc_allocWithZone((Class)NSNumber) v40[183], *(void *)(*(void *)(*(void *)(v72 + OBJC_IVAR____TtC8Freeform8CRLBoard_rootContainer)+ OBJC_IVAR____TtC8Freeform16CRLContainerItem_items)+ 16)];
  char v75 = swift_isUniquelyReferenced_nonNull_native();
  sub_100973904((uint64_t)v74, 0x756F43736D657469, 0xEA0000000000746ELL, v75);
  *(void *)(v0 + 64) = v24;
  swift_bridgeObjectRelease();
  id v76 = [self currentLocale];
  static Locale._unconditionallyBridgeFromObjectiveC(_:)();

  Locale.identifier.getter();
  (*(void (**)(uint64_t, uint64_t))(v67 + 8))(v66, v68);
  NSString v77 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  uint64_t v78 = *(void *)(v0 + 64);
  char v79 = swift_isUniquelyReferenced_nonNull_native();
  sub_100973904((uint64_t)v77, 0x6F4C6D6574737973, 0xEC000000656C6163, v79);
  swift_bridgeObjectRelease();
  id v80 = [objc_allocWithZone((Class)NSNumber) initWithDouble:v73];
  char v81 = swift_isUniquelyReferenced_nonNull_native();
  sub_100973904((uint64_t)v80, 0x6965486472616F62, 0xEB00000000746867, v81);
  swift_bridgeObjectRelease();
  id v82 = [objc_allocWithZone((Class)NSNumber) initWithDouble:v71];
  char v83 = swift_isUniquelyReferenced_nonNull_native();
  sub_100973904((uint64_t)v82, 0x6469576472616F62, 0xEA00000000006874, v83);
  swift_bridgeObjectRelease();
  id v84 = [objc_allocWithZone((Class)NSNumber) initWithDouble:v71 * v73];
  char v85 = swift_isUniquelyReferenced_nonNull_native();
  sub_100973904((uint64_t)v84, 0x6572416472616F62, 0xE900000000000061, v85);
  swift_bridgeObjectRelease();
  id v86 = [objc_allocWithZone((Class)NSNumber) initWithDouble:v70];
  char v87 = swift_isUniquelyReferenced_nonNull_native();
  sub_100973904((uint64_t)v86, 0x6C61635377656976, 0xE900000000000065, v87);
  uint64_t v88 = v78;
  swift_bridgeObjectRelease();
  uint64_t v89 = *(void *)(v72 + OBJC_IVAR____TtC8Freeform8CRLBoard_data) + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
  swift_beginAccess();
  sub_100A02F9C(v89, v69, type metadata accessor for CRLBoardCRDTData);
  type metadata accessor for CRLSharedBoardMetadataCRDTData(0);
  sub_1005057FC(&qword_10168B6F0);
  CRRegister.wrappedValue.getter();
  double v90 = *(double *)(v0 + 80);
  sub_100A03004(v69, type metadata accessor for CRLBoardCRDTData);
  static Date.timeIntervalSinceReferenceDate.getter();
  id v92 = [objc_allocWithZone((Class)NSNumber) initWithDouble:v91 - v90];
  char v93 = swift_isUniquelyReferenced_nonNull_native();
  sub_100973904((uint64_t)v92, 0xD00000000000001ALL, 0x80000001012688D0, v93);
  uint64_t v94 = v88;
  swift_bridgeObjectRelease();
  id v95 = [objc_allocWithZone((Class)NSNumber) initWithBool:v102];
  char v96 = swift_isUniquelyReferenced_nonNull_native();
  sub_100973904((uint64_t)v95, 0xD000000000000015, 0x80000001012688F0, v96);
  *(void *)(v0 + 64) = v94;
  swift_bridgeObjectRelease();
  uint64_t v97 = swift_bridgeObjectRetain();
  sub_100A014B0(v97, (uint64_t *)(v0 + 64), (void *)(v0 + 72));
  swift_bridgeObjectRelease();
  *(void *)(v0 + 216) = *(void *)(v0 + 72);
  type metadata accessor for MainActor();
  swift_bridgeObjectRetain();
  *(void *)(v0 + 224) = static MainActor.shared.getter();
  uint64_t v98 = dispatch thunk of Actor.unownedExecutor.getter();
  uint64_t v100 = v99;
  uint64_t v34 = (uint64_t)sub_100A02C10;
  uint64_t v35 = v98;
  uint64_t v36 = v100;
  return _swift_task_switch(v34, v35, v36);
}

uint64_t sub_100A02C10()
{
  unint64_t v1 = *(void *)(v0 + 216);
  uint64_t v2 = *(void *)(v0 + 96);
  swift_release();
  sub_10105F418(v1, v2);
  swift_bridgeObjectRelease();
  return _swift_task_switch(sub_100A02C90, 0, 0);
}

uint64_t sub_100A02C90()
{
  unint64_t v1 = self;
  NSString v2 = String._bridgeToObjectiveC()();
  sub_10050BF48(0, (unint64_t *)&qword_101672E50);
  swift_bridgeObjectRetain();
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v1 sendEventInDomain:v2 lazily:1 eventPayload:isa];

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t type metadata accessor for CRLAnalyticsBoardOpened()
{
  return self;
}

uint64_t sub_100A02E08()
{
  swift_unknownObjectRelease();

  return _swift_deallocObject(v0, 73, 7);
}

uint64_t sub_100A02E48(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v6 = *(void *)(v1 + 32);
  uint64_t v7 = *(void *)(v1 + 40);
  double v8 = *(double *)(v1 + 48);
  double v9 = *(double *)(v1 + 56);
  double v10 = *(double *)(v1 + 64);
  char v11 = *(unsigned char *)(v1 + 72);
  id v12 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v12;
  *id v12 = v2;
  v12[1] = sub_100528488;
  return sub_100A01B0C(v8, v9, v10, a1, v4, v5, v6, v7, v11);
}

uint64_t sub_100A02F34(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1005057FC((uint64_t *)&unk_10169A1A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100A02F9C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_100A03004(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_100A0306C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1005057FC(&qword_10169A100);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

_WORD *sub_100A030D4(_WORD *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *(void *)uint64_t v4 = *a2;
    uint64_t v4 = (_WORD *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *a1 = *(_WORD *)a2;
    uint64_t v7 = a2[2];
    *((void *)v4 + 1) = a2[1];
    *((void *)v4 + 2) = v7;
    uint64_t v8 = a2[4];
    *((void *)v4 + 3) = a2[3];
    *((void *)v4 + 4) = v8;
    *((void *)v4 + 5) = a2[5];
    *((unsigned char *)v4 + 48) = *((unsigned char *)a2 + 48);
    *(_OWORD *)(v4 + 26) = *(_OWORD *)((char *)a2 + 52);
    double v10 = a2 + 15;
    uint64_t v9 = a2[15];
    uint64_t v11 = a2[10];
    *((void *)v4 + 9) = a2[9];
    *((void *)v4 + 10) = v11;
    *((unsigned char *)v4 + 88) = *((unsigned char *)a2 + 88);
    *((_DWORD *)v4 + 23) = *((_DWORD *)a2 + 23);
    *((void *)v4 + 12) = a2[12];
    v4[52] = *((_WORD *)a2 + 52);
    *((void *)v4 + 14) = a2[14];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v9)
    {
      uint64_t v12 = a2[16];
      uint64_t v13 = a2[17];
      *((void *)v4 + 15) = v9;
      *((void *)v4 + 16) = v12;
      *((void *)v4 + 17) = v13;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      *(_OWORD *)(v4 + 60) = *v10;
      *((void *)v4 + 17) = a2[17];
    }
    *((void *)v4 + 18) = a2[18];
    *((void *)v4 + 19) = a2[19];
    *((unsigned char *)v4 + 160) = *((unsigned char *)a2 + 160);
    *(void *)(v4 + 82) = *(uint64_t *)((char *)a2 + 164);
    *((void *)v4 + 22) = a2[22];
    char v15 = v4 + 92;
    uint64_t v16 = a2 + 23;
    uint64_t v17 = a2[25];
    swift_bridgeObjectRetain();
    if (v17)
    {
      *char v15 = *v16;
      *((unsigned char *)v4 + 192) = *((unsigned char *)a2 + 192);
      uint64_t v18 = a2[26];
      uint64_t v19 = a2[27];
      *((void *)v4 + 25) = v17;
      *((void *)v4 + 26) = v18;
      *((void *)v4 + 27) = v19;
      *((void *)v4 + 28) = a2[28];
      *((void *)v4 + 29) = a2[29];
      *((unsigned char *)v4 + 240) = *((unsigned char *)a2 + 240);
      *(void *)(v4 + 122) = *(uint64_t *)((char *)a2 + 244);
      uint64_t v20 = a2[33];
      *((void *)v4 + 32) = a2[32];
      *((void *)v4 + 33) = v20;
      *((unsigned char *)v4 + 272) = *((unsigned char *)a2 + 272);
      *(void *)(v4 + 138) = *(uint64_t *)((char *)a2 + 276);
      *((void *)v4 + 36) = a2[36];
      *((unsigned char *)v4 + 296) = *((unsigned char *)a2 + 296);
      *((void *)v4 + 38) = a2[38];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v21 = *(_OWORD *)(a2 + 33);
      *(_OWORD *)(v4 + 124) = *(_OWORD *)(a2 + 31);
      *(_OWORD *)(v4 + 132) = v21;
      long long v22 = *(_OWORD *)(a2 + 37);
      *(_OWORD *)(v4 + 140) = *(_OWORD *)(a2 + 35);
      *(_OWORD *)(v4 + 148) = v22;
      long long v23 = *(_OWORD *)(a2 + 25);
      *(_OWORD *)char v15 = *(_OWORD *)v16;
      *(_OWORD *)(v4 + 100) = v23;
      long long v24 = *(_OWORD *)(a2 + 29);
      *(_OWORD *)(v4 + 108) = *(_OWORD *)(a2 + 27);
      *(_OWORD *)(v4 + 116) = v24;
    }
    uint64_t v25 = type metadata accessor for CRLPathSourceData(0);
    uint64_t v26 = *(int *)(v25 + 52);
    id v27 = (char *)v4 + v26;
    uint64_t v28 = (char *)a2 + v26;
    id v29 = (int *)type metadata accessor for CRLEditableBezierPathSourceData(0);
    uint64_t v30 = *((void *)v29 - 1);
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v30 + 48))(v28, 1, v29))
    {
      uint64_t v31 = sub_1005057FC(&qword_10168B6F8);
      memcpy(v27, v28, *(void *)(*(void *)(v31 - 8) + 64));
    }
    else
    {
      uint64_t v32 = type metadata accessor for UUID();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v32 - 8) + 16))(v27, v28, v32);
      *(void *)&v27[v29[5]] = *(void *)&v28[v29[5]];
      *(void *)&v27[v29[6]] = *(void *)&v28[v29[6]];
      *(void *)&v27[v29[7]] = *(void *)&v28[v29[7]];
      uint64_t v33 = *(void (**)(char *, void, uint64_t, int *))(v30 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v33(v27, 0, 1, v29);
    }
    *(void *)((char *)v4 + *(int *)(v25 + 56)) = *(uint64_t *)((char *)a2 + *(int *)(v25 + 56));
    uint64_t v34 = *(int *)(a3 + 20);
    uint64_t v35 = *(int *)(a3 + 24);
    uint64_t v36 = (char *)v4 + v34;
    uint64_t v37 = (uint64_t)a2 + v34;
    *(_OWORD *)uint64_t v36 = *(_OWORD *)v37;
    *((_DWORD *)v36 + 4) = *(_DWORD *)(v37 + 16);
    *((_DWORD *)v36 + 5) = *(_DWORD *)(v37 + 20);
    *((void *)v36 + 3) = *(void *)(v37 + 24);
    *(void *)((char *)v4 + v35) = *(uint64_t *)((char *)a2 + v35);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_100A034B0(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 120))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 200))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v2 = a1 + *(int *)(type metadata accessor for CRLPathSourceData(0) + 52);
  uint64_t v3 = type metadata accessor for CRLEditableBezierPathSourceData(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 48))(v2, 1, v3))
  {
    uint64_t v4 = type metadata accessor for UUID();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v2, v4);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_100A03628(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_WORD *)a1 = *(_WORD *)a2;
  uint64_t v6 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v6;
  uint64_t v7 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(_OWORD *)(a1 + 52) = *(_OWORD *)(a2 + 52);
  uint64_t v9 = a2 + 120;
  uint64_t v8 = *(void *)(a2 + 120);
  uint64_t v10 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v10;
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  *(_DWORD *)(a1 + 92) = *(_DWORD *)(a2 + 92);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(_WORD *)(a1 + 104) = *(_WORD *)(a2 + 104);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v8)
  {
    uint64_t v11 = *(void *)(a2 + 128);
    uint64_t v12 = *(void *)(a2 + 136);
    *(void *)(a1 + 120) = v8;
    *(void *)(a1 + 128) = v11;
    *(void *)(a1 + 136) = v12;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)(a1 + 120) = *(_OWORD *)v9;
    *(void *)(a1 + 136) = *(void *)(v9 + 16);
  }
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(unsigned char *)(a1 + 160) = *(unsigned char *)(a2 + 160);
  *(void *)(a1 + 164) = *(void *)(a2 + 164);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  uint64_t v13 = (void *)(a1 + 184);
  uint64_t v14 = (void *)(a2 + 184);
  uint64_t v15 = *(void *)(a2 + 200);
  swift_bridgeObjectRetain();
  if (v15)
  {
    *uint64_t v13 = *v14;
    *(unsigned char *)(a1 + 192) = *(unsigned char *)(a2 + 192);
    uint64_t v16 = *(void *)(a2 + 208);
    uint64_t v17 = *(void *)(a2 + 216);
    *(void *)(a1 + 200) = v15;
    *(void *)(a1 + 208) = v16;
    *(void *)(a1 + 216) = v17;
    *(void *)(a1 + 224) = *(void *)(a2 + 224);
    *(void *)(a1 + 232) = *(void *)(a2 + 232);
    *(unsigned char *)(a1 + 240) = *(unsigned char *)(a2 + 240);
    *(void *)(a1 + 244) = *(void *)(a2 + 244);
    uint64_t v18 = *(void *)(a2 + 264);
    *(void *)(a1 + 256) = *(void *)(a2 + 256);
    *(void *)(a1 + 264) = v18;
    *(unsigned char *)(a1 + 272) = *(unsigned char *)(a2 + 272);
    *(void *)(a1 + 276) = *(void *)(a2 + 276);
    *(void *)(a1 + 288) = *(void *)(a2 + 288);
    *(unsigned char *)(a1 + 296) = *(unsigned char *)(a2 + 296);
    *(void *)(a1 + 304) = *(void *)(a2 + 304);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v19 = *(_OWORD *)(a2 + 264);
    *(_OWORD *)(a1 + 248) = *(_OWORD *)(a2 + 248);
    *(_OWORD *)(a1 + 264) = v19;
    long long v20 = *(_OWORD *)(a2 + 296);
    *(_OWORD *)(a1 + 280) = *(_OWORD *)(a2 + 280);
    *(_OWORD *)(a1 + 296) = v20;
    long long v21 = *(_OWORD *)(a2 + 200);
    *(_OWORD *)uint64_t v13 = *(_OWORD *)v14;
    *(_OWORD *)(a1 + 200) = v21;
    long long v22 = *(_OWORD *)(a2 + 232);
    *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 216);
    *(_OWORD *)(a1 + 232) = v22;
  }
  uint64_t v23 = type metadata accessor for CRLPathSourceData(0);
  uint64_t v24 = *(int *)(v23 + 52);
  uint64_t v25 = (char *)(a1 + v24);
  uint64_t v26 = (char *)(a2 + v24);
  id v27 = (int *)type metadata accessor for CRLEditableBezierPathSourceData(0);
  uint64_t v28 = *((void *)v27 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v28 + 48))(v26, 1, v27))
  {
    uint64_t v29 = sub_1005057FC(&qword_10168B6F8);
    memcpy(v25, v26, *(void *)(*(void *)(v29 - 8) + 64));
  }
  else
  {
    uint64_t v30 = type metadata accessor for UUID();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 16))(v25, v26, v30);
    *(void *)&v25[v27[5]] = *(void *)&v26[v27[5]];
    *(void *)&v25[v27[6]] = *(void *)&v26[v27[6]];
    *(void *)&v25[v27[7]] = *(void *)&v26[v27[7]];
    uint64_t v31 = *(void (**)(char *, void, uint64_t, int *))(v28 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v31(v25, 0, 1, v27);
  }
  *(void *)(a1 + *(int *)(v23 + 56)) = *(void *)(a2 + *(int *)(v23 + 56));
  uint64_t v32 = *(int *)(a3 + 20);
  uint64_t v33 = *(int *)(a3 + 24);
  uint64_t v34 = a1 + v32;
  uint64_t v35 = a2 + v32;
  *(_OWORD *)uint64_t v34 = *(_OWORD *)v35;
  *(_DWORD *)(v34 + 16) = *(_DWORD *)(v35 + 16);
  *(_DWORD *)(v34 + 20) = *(_DWORD *)(v35 + 20);
  *(void *)(v34 + 24) = *(void *)(v35 + 24);
  *(void *)(a1 + v33) = *(void *)(a2 + v33);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_100A039B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(unsigned char *)(a1 + 1) = *(unsigned char *)(a2 + 1);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 40) = v5;
  *(_DWORD *)(a1 + 52) = *(_DWORD *)(a2 + 52);
  *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 56);
  *(_DWORD *)(a1 + 60) = *(_DWORD *)(a2 + 60);
  *(_DWORD *)(a1 + 64) = *(_DWORD *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 80);
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  *(void *)(a1 + 80) = v6;
  *(_DWORD *)(a1 + 92) = *(_DWORD *)(a2 + 92);
  *(_DWORD *)(a1 + 96) = *(_DWORD *)(a2 + 96);
  *(_DWORD *)(a1 + 100) = *(_DWORD *)(a2 + 100);
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  *(unsigned char *)(a1 + 105) = *(unsigned char *)(a2 + 105);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v7 = (_OWORD *)(a1 + 120);
  uint64_t v9 = (_OWORD *)(a2 + 120);
  uint64_t v8 = *(void *)(a2 + 120);
  if (*(void *)(a1 + 120))
  {
    if (v8)
    {
      *(void *)(a1 + 120) = v8;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_DWORD *)(a1 + 128) = *(_DWORD *)(a2 + 128);
      *(_DWORD *)(a1 + 132) = *(_DWORD *)(a2 + 132);
      *(void *)(a1 + 136) = *(void *)(a2 + 136);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_100A040A4(a1 + 120);
      uint64_t v10 = *(void *)(a2 + 136);
      *uint64_t v7 = *v9;
      *(void *)(a1 + 136) = v10;
    }
  }
  else if (v8)
  {
    *(void *)(a1 + 120) = v8;
    *(void *)(a1 + 128) = *(void *)(a2 + 128);
    *(void *)(a1 + 136) = *(void *)(a2 + 136);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v11 = *v9;
    *(void *)(a1 + 136) = *(void *)(a2 + 136);
    *uint64_t v7 = v11;
  }
  *(_DWORD *)(a1 + 144) = *(_DWORD *)(a2 + 144);
  *(_DWORD *)(a1 + 148) = *(_DWORD *)(a2 + 148);
  *(_DWORD *)(a1 + 152) = *(_DWORD *)(a2 + 152);
  *(_DWORD *)(a1 + 156) = *(_DWORD *)(a2 + 156);
  *(unsigned char *)(a1 + 160) = *(unsigned char *)(a2 + 160);
  *(_DWORD *)(a1 + 164) = *(_DWORD *)(a2 + 164);
  *(_DWORD *)(a1 + 168) = *(_DWORD *)(a2 + 168);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v12 = (void *)(a1 + 184);
  uint64_t v13 = (uint64_t *)(a2 + 184);
  uint64_t v14 = *(void *)(a2 + 200);
  if (*(void *)(a1 + 200))
  {
    if (v14)
    {
      uint64_t v15 = *v13;
      *(unsigned char *)(a1 + 192) = *(unsigned char *)(a2 + 192);
      *uint64_t v12 = v15;
      *(void *)(a1 + 200) = *(void *)(a2 + 200);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_DWORD *)(a1 + 208) = *(_DWORD *)(a2 + 208);
      *(_DWORD *)(a1 + 212) = *(_DWORD *)(a2 + 212);
      *(void *)(a1 + 216) = *(void *)(a2 + 216);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_DWORD *)(a1 + 224) = *(_DWORD *)(a2 + 224);
      *(_DWORD *)(a1 + 228) = *(_DWORD *)(a2 + 228);
      uint64_t v16 = *(void *)(a2 + 232);
      *(unsigned char *)(a1 + 240) = *(unsigned char *)(a2 + 240);
      *(void *)(a1 + 232) = v16;
      *(_DWORD *)(a1 + 244) = *(_DWORD *)(a2 + 244);
      *(_DWORD *)(a1 + 248) = *(_DWORD *)(a2 + 248);
      *(void *)(a1 + 256) = *(void *)(a2 + 256);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v17 = *(void *)(a2 + 264);
      *(unsigned char *)(a1 + 272) = *(unsigned char *)(a2 + 272);
      *(void *)(a1 + 264) = v17;
      *(_DWORD *)(a1 + 276) = *(_DWORD *)(a2 + 276);
      *(_DWORD *)(a1 + 280) = *(_DWORD *)(a2 + 280);
      *(void *)(a1 + 288) = *(void *)(a2 + 288);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 296) = *(unsigned char *)(a2 + 296);
      *(void *)(a1 + 304) = *(void *)(a2 + 304);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_100A040F8(a1 + 184);
      long long v21 = *(_OWORD *)(a2 + 232);
      long long v23 = *(_OWORD *)v13;
      long long v22 = *(_OWORD *)(a2 + 200);
      *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 216);
      *(_OWORD *)(a1 + 232) = v21;
      *(_OWORD *)uint64_t v12 = v23;
      *(_OWORD *)(a1 + 200) = v22;
      long long v24 = *(_OWORD *)(a2 + 296);
      long long v26 = *(_OWORD *)(a2 + 248);
      long long v25 = *(_OWORD *)(a2 + 264);
      *(_OWORD *)(a1 + 280) = *(_OWORD *)(a2 + 280);
      *(_OWORD *)(a1 + 296) = v24;
      *(_OWORD *)(a1 + 248) = v26;
      *(_OWORD *)(a1 + 264) = v25;
    }
  }
  else if (v14)
  {
    uint64_t v18 = *v13;
    *(unsigned char *)(a1 + 192) = *(unsigned char *)(a2 + 192);
    *uint64_t v12 = v18;
    *(void *)(a1 + 200) = *(void *)(a2 + 200);
    *(void *)(a1 + 208) = *(void *)(a2 + 208);
    *(void *)(a1 + 216) = *(void *)(a2 + 216);
    *(_DWORD *)(a1 + 224) = *(_DWORD *)(a2 + 224);
    *(_DWORD *)(a1 + 228) = *(_DWORD *)(a2 + 228);
    uint64_t v19 = *(void *)(a2 + 232);
    *(unsigned char *)(a1 + 240) = *(unsigned char *)(a2 + 240);
    *(void *)(a1 + 232) = v19;
    *(void *)(a1 + 244) = *(void *)(a2 + 244);
    *(void *)(a1 + 256) = *(void *)(a2 + 256);
    uint64_t v20 = *(void *)(a2 + 264);
    *(unsigned char *)(a1 + 272) = *(unsigned char *)(a2 + 272);
    *(void *)(a1 + 264) = v20;
    *(void *)(a1 + 276) = *(void *)(a2 + 276);
    *(void *)(a1 + 288) = *(void *)(a2 + 288);
    *(unsigned char *)(a1 + 296) = *(unsigned char *)(a2 + 296);
    *(void *)(a1 + 304) = *(void *)(a2 + 304);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v27 = *(_OWORD *)v13;
    long long v28 = *(_OWORD *)(a2 + 200);
    long long v29 = *(_OWORD *)(a2 + 232);
    *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 216);
    *(_OWORD *)(a1 + 232) = v29;
    *(_OWORD *)uint64_t v12 = v27;
    *(_OWORD *)(a1 + 200) = v28;
    long long v30 = *(_OWORD *)(a2 + 248);
    long long v31 = *(_OWORD *)(a2 + 264);
    long long v32 = *(_OWORD *)(a2 + 296);
    *(_OWORD *)(a1 + 280) = *(_OWORD *)(a2 + 280);
    *(_OWORD *)(a1 + 296) = v32;
    *(_OWORD *)(a1 + 248) = v30;
    *(_OWORD *)(a1 + 264) = v31;
  }
  uint64_t v33 = type metadata accessor for CRLPathSourceData(0);
  uint64_t v34 = *(int *)(v33 + 52);
  uint64_t v35 = (char *)(a1 + v34);
  uint64_t v36 = (char *)(a2 + v34);
  uint64_t v37 = (int *)type metadata accessor for CRLEditableBezierPathSourceData(0);
  uint64_t v38 = *((void *)v37 - 1);
  id v39 = *(uint64_t (**)(char *, uint64_t, int *))(v38 + 48);
  int v40 = v39(v35, 1, v37);
  int v41 = v39(v36, 1, v37);
  if (!v40)
  {
    if (!v41)
    {
      uint64_t v49 = type metadata accessor for UUID();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v49 - 8) + 24))(v35, v36, v49);
      *(void *)&v35[v37[5]] = *(void *)&v36[v37[5]];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v50 = v37[6];
      float64_t v51 = &v35[v50];
      id v52 = &v36[v50];
      *(_DWORD *)float64_t v51 = *(_DWORD *)v52;
      *((_DWORD *)v51 + 1) = *((_DWORD *)v52 + 1);
      *(void *)&v35[v37[7]] = *(void *)&v36[v37[7]];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      goto LABEL_21;
    }
    sub_100A0624C((uint64_t)v35, type metadata accessor for CRLEditableBezierPathSourceData);
    goto LABEL_20;
  }
  if (v41)
  {
LABEL_20:
    uint64_t v44 = sub_1005057FC(&qword_10168B6F8);
    memcpy(v35, v36, *(void *)(*(void *)(v44 - 8) + 64));
    goto LABEL_21;
  }
  uint64_t v42 = type metadata accessor for UUID();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v42 - 8) + 16))(v35, v36, v42);
  *(void *)&v35[v37[5]] = *(void *)&v36[v37[5]];
  *(void *)&v35[v37[6]] = *(void *)&v36[v37[6]];
  *(void *)&v35[v37[7]] = *(void *)&v36[v37[7]];
  unint64_t v43 = *(void (**)(char *, void, uint64_t, int *))(v38 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v43(v35, 0, 1, v37);
LABEL_21:
  *(void *)(a1 + *(int *)(v33 + 56)) = *(void *)(a2 + *(int *)(v33 + 56));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v45 = *(int *)(a3 + 20);
  uint64_t v46 = a1 + v45;
  uint64_t v47 = a2 + v45;
  *(_DWORD *)uint64_t v46 = *(_DWORD *)v47;
  *(_DWORD *)(v46 + 4) = *(_DWORD *)(v47 + 4);
  *(_DWORD *)(v46 + 8) = *(_DWORD *)(v47 + 8);
  *(_DWORD *)(v46 + 12) = *(_DWORD *)(v47 + 12);
  *(_DWORD *)(v46 + 16) = *(_DWORD *)(v47 + 16);
  *(unsigned char *)(v46 + 20) = *(unsigned char *)(v47 + 20);
  *(unsigned char *)(v46 + 21) = *(unsigned char *)(v47 + 21);
  *(unsigned char *)(v46 + 22) = *(unsigned char *)(v47 + 22);
  *(unsigned char *)(v46 + 23) = *(unsigned char *)(v47 + 23);
  *(void *)(v46 + 24) = *(void *)(v47 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + *(int *)(a3 + 24)) = *(void *)(a2 + *(int *)(a3 + 24));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_100A040A4(uint64_t a1)
{
  return a1;
}

uint64_t sub_100A040F8(uint64_t a1)
{
  return a1;
}

uint64_t sub_100A0414C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_WORD *)a1 = *(_WORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  long long v6 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v6;
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  long long v7 = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 160) = v7;
  *(_OWORD *)(a1 + 232) = *(_OWORD *)(a2 + 232);
  *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 216);
  *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
  *(_OWORD *)(a1 + 184) = *(_OWORD *)(a2 + 184);
  long long v8 = *(_OWORD *)(a2 + 296);
  long long v9 = *(_OWORD *)(a2 + 264);
  *(_OWORD *)(a1 + 280) = *(_OWORD *)(a2 + 280);
  *(_OWORD *)(a1 + 296) = v8;
  *(_OWORD *)(a1 + 264) = v9;
  *(_OWORD *)(a1 + 248) = *(_OWORD *)(a2 + 248);
  uint64_t v10 = type metadata accessor for CRLPathSourceData(0);
  uint64_t v11 = *(int *)(v10 + 52);
  uint64_t v12 = (char *)(a1 + v11);
  uint64_t v13 = (char *)(a2 + v11);
  uint64_t v14 = (int *)type metadata accessor for CRLEditableBezierPathSourceData(0);
  uint64_t v15 = *((void *)v14 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v15 + 48))(v13, 1, v14))
  {
    uint64_t v16 = sub_1005057FC(&qword_10168B6F8);
    memcpy(v12, v13, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    uint64_t v17 = type metadata accessor for UUID();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 32))(v12, v13, v17);
    *(void *)&v12[v14[5]] = *(void *)&v13[v14[5]];
    *(void *)&v12[v14[6]] = *(void *)&v13[v14[6]];
    *(void *)&v12[v14[7]] = *(void *)&v13[v14[7]];
    (*(void (**)(char *, void, uint64_t, int *))(v15 + 56))(v12, 0, 1, v14);
  }
  *(void *)(a1 + *(int *)(v10 + 56)) = *(void *)(a2 + *(int *)(v10 + 56));
  uint64_t v18 = *(int *)(a3 + 20);
  uint64_t v19 = *(int *)(a3 + 24);
  uint64_t v20 = (_OWORD *)(a1 + v18);
  long long v21 = (_OWORD *)(a2 + v18);
  long long v22 = v21[1];
  *uint64_t v20 = *v21;
  v20[1] = v22;
  *(void *)(a1 + v19) = *(void *)(a2 + v19);
  return a1;
}

uint64_t sub_100A0437C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(unsigned char *)(a1 + 1) = *(unsigned char *)(a2 + 1);
  uint64_t v5 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v6;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(_OWORD *)(a1 + 52) = *(_OWORD *)(a2 + 52);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  *(void *)(a1 + 92) = *(void *)(a2 + 92);
  *(_DWORD *)(a1 + 100) = *(_DWORD *)(a2 + 100);
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  *(unsigned char *)(a1 + 105) = *(unsigned char *)(a2 + 105);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 120);
  if (*(void *)(a1 + 120))
  {
    if (v7)
    {
      *(void *)(a1 + 120) = v7;
      swift_bridgeObjectRelease();
      *(void *)(a1 + 128) = *(void *)(a2 + 128);
      *(void *)(a1 + 136) = *(void *)(a2 + 136);
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_100A040A4(a1 + 120);
  }
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
LABEL_6:
  *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
  *(unsigned char *)(a1 + 160) = *(unsigned char *)(a2 + 160);
  *(void *)(a1 + 164) = *(void *)(a2 + 164);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  swift_bridgeObjectRelease();
  long long v8 = (void *)(a1 + 184);
  long long v9 = (void *)(a2 + 184);
  if (*(void *)(a1 + 200))
  {
    uint64_t v10 = *(void *)(a2 + 200);
    if (v10)
    {
      *long long v8 = *v9;
      *(unsigned char *)(a1 + 192) = *(unsigned char *)(a2 + 192);
      *(void *)(a1 + 200) = v10;
      swift_bridgeObjectRelease();
      *(void *)(a1 + 208) = *(void *)(a2 + 208);
      *(void *)(a1 + 216) = *(void *)(a2 + 216);
      swift_bridgeObjectRelease();
      *(void *)(a1 + 224) = *(void *)(a2 + 224);
      *(void *)(a1 + 232) = *(void *)(a2 + 232);
      *(unsigned char *)(a1 + 240) = *(unsigned char *)(a2 + 240);
      *(void *)(a1 + 244) = *(void *)(a2 + 244);
      *(void *)(a1 + 256) = *(void *)(a2 + 256);
      swift_bridgeObjectRelease();
      *(void *)(a1 + 264) = *(void *)(a2 + 264);
      *(unsigned char *)(a1 + 272) = *(unsigned char *)(a2 + 272);
      *(_DWORD *)(a1 + 276) = *(_DWORD *)(a2 + 276);
      *(_DWORD *)(a1 + 280) = *(_DWORD *)(a2 + 280);
      *(void *)(a1 + 288) = *(void *)(a2 + 288);
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 296) = *(unsigned char *)(a2 + 296);
      *(void *)(a1 + 304) = *(void *)(a2 + 304);
      swift_bridgeObjectRelease();
      goto LABEL_11;
    }
    sub_100A040F8(a1 + 184);
  }
  long long v11 = *(_OWORD *)(a2 + 264);
  *(_OWORD *)(a1 + 248) = *(_OWORD *)(a2 + 248);
  *(_OWORD *)(a1 + 264) = v11;
  long long v12 = *(_OWORD *)(a2 + 296);
  *(_OWORD *)(a1 + 280) = *(_OWORD *)(a2 + 280);
  *(_OWORD *)(a1 + 296) = v12;
  long long v13 = *(_OWORD *)(a2 + 200);
  *(_OWORD *)long long v8 = *(_OWORD *)v9;
  *(_OWORD *)(a1 + 200) = v13;
  long long v14 = *(_OWORD *)(a2 + 232);
  *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 216);
  *(_OWORD *)(a1 + 232) = v14;
LABEL_11:
  uint64_t v15 = type metadata accessor for CRLPathSourceData(0);
  uint64_t v16 = *(int *)(v15 + 52);
  uint64_t v17 = (char *)(a1 + v16);
  uint64_t v18 = (char *)(a2 + v16);
  uint64_t v19 = (int *)type metadata accessor for CRLEditableBezierPathSourceData(0);
  uint64_t v20 = *((void *)v19 - 1);
  long long v21 = *(uint64_t (**)(char *, uint64_t, int *))(v20 + 48);
  int v22 = v21(v17, 1, v19);
  int v23 = v21(v18, 1, v19);
  if (!v22)
  {
    if (!v23)
    {
      uint64_t v30 = type metadata accessor for UUID();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 40))(v17, v18, v30);
      *(void *)&v17[v19[5]] = *(void *)&v18[v19[5]];
      swift_bridgeObjectRelease();
      *(void *)&v17[v19[6]] = *(void *)&v18[v19[6]];
      *(void *)&v17[v19[7]] = *(void *)&v18[v19[7]];
      swift_bridgeObjectRelease();
      goto LABEL_17;
    }
    sub_100A0624C((uint64_t)v17, type metadata accessor for CRLEditableBezierPathSourceData);
    goto LABEL_16;
  }
  if (v23)
  {
LABEL_16:
    uint64_t v25 = sub_1005057FC(&qword_10168B6F8);
    memcpy(v17, v18, *(void *)(*(void *)(v25 - 8) + 64));
    goto LABEL_17;
  }
  uint64_t v24 = type metadata accessor for UUID();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 32))(v17, v18, v24);
  *(void *)&v17[v19[5]] = *(void *)&v18[v19[5]];
  *(void *)&v17[v19[6]] = *(void *)&v18[v19[6]];
  *(void *)&v17[v19[7]] = *(void *)&v18[v19[7]];
  (*(void (**)(char *, void, uint64_t, int *))(v20 + 56))(v17, 0, 1, v19);
LABEL_17:
  *(void *)(a1 + *(int *)(v15 + 56)) = *(void *)(a2 + *(int *)(v15 + 56));
  swift_bridgeObjectRelease();
  uint64_t v26 = *(int *)(a3 + 20);
  uint64_t v27 = a1 + v26;
  uint64_t v28 = a2 + v26;
  *(_OWORD *)uint64_t v27 = *(_OWORD *)v28;
  *(_DWORD *)(v27 + 16) = *(_DWORD *)(v28 + 16);
  *(unsigned char *)(v27 + 20) = *(unsigned char *)(v28 + 20);
  *(unsigned char *)(v27 + 21) = *(unsigned char *)(v28 + 21);
  *(unsigned char *)(v27 + 22) = *(unsigned char *)(v28 + 22);
  *(unsigned char *)(v27 + 23) = *(unsigned char *)(v28 + 23);
  *(void *)(v27 + 24) = *(void *)(v28 + 24);
  swift_bridgeObjectRelease();
  *(void *)(a1 + *(int *)(a3 + 24)) = *(void *)(a2 + *(int *)(a3 + 24));
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_100A04820(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100A04834);
}

uint64_t sub_100A04834(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for CRLPathSourceData(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    long long v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 24);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_100A048F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100A0490C);
}

uint64_t sub_100A0490C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for CRLPathSourceData(0);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 24) = (a2 - 1);
  }
  return result;
}

uint64_t type metadata accessor for CRLMaskInfoData()
{
  uint64_t result = qword_10168B758;
  if (!qword_10168B758) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100A04A18()
{
  uint64_t result = type metadata accessor for CRLPathSourceData(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

BOOL sub_100A04ABC(char *a1, char *a2)
{
  return qword_10119D3C0[*a1] == qword_10119D3C0[*a2];
}

Swift::Int sub_100A04AE0()
{
  uint64_t v1 = *v0;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(qword_10119D3C0[v1]);
  return Hasher._finalize()();
}

void sub_100A04B30()
{
  Hasher._combine(_:)(qword_10119D3C0[*v0]);
}

Swift::Int sub_100A04B68()
{
  uint64_t v1 = *v0;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(qword_10119D3C0[v1]);
  return Hasher._finalize()();
}

void sub_100A04BB4(void *a1@<X8>)
{
  *a1 = qword_10119D3C0[*v1];
}

uint64_t sub_100A04BCC()
{
  unint64_t v1 = 0x797274656D6F6567;
  if (*v0 != 1) {
    unint64_t v1 = 0xD000000000000010;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x72756F5368746170;
  }
}

uint64_t sub_100A04C38@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100A0600C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_100A04C60()
{
  return qword_10119D3C0[*v0];
}

void sub_100A04C78(void *a1@<X8>)
{
  *a1 = &off_101502D48;
}

uint64_t sub_100A04C88(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_100A05CB8();
  unint64_t v5 = sub_100A05D10();

  return static CodingKey<>.intCases.getter(a1, a2, v4, v5);
}

uint64_t sub_100A04CE0(uint64_t a1)
{
  unint64_t v2 = sub_100A05D10();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100A04D1C(uint64_t a1)
{
  unint64_t v2 = sub_100A05D10();

  return CodingKey.debugDescription.getter(a1, v2);
}

void sub_100A04D58(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for CRLMaskInfoData();
  *(void *)(a2 + *(int *)(v4 + 24)) = _swiftEmptyDictionarySingleton;
  [a1 size];
  id v7 = [objc_allocWithZone((Class)CRLBezierPathSource) initWithNaturalSize:v5, v6];
  if (v7)
  {
    long long v8 = v7;
    [a1 center];
    double v10 = v9;
    double v12 = v11;
    [a1 position];
    double v14 = sub_100064680(v10, v12, v13);
    double v16 = v15;
    [a1 size];
    id v19 = [objc_allocWithZone((Class)CRLCanvasInfoGeometry) initWithCenter:v14 size:v16];
    id v20 = v8;
    sub_100AA59E0(v20, a2);
    [v19 position];
    *(float *)&double v14 = v21;
    *(float *)&double v16 = v22;
    [v19 size];
    float v24 = v23;
    float v26 = v25;
    [v19 angle];
    float v28 = v27;
    unsigned __int8 v29 = [v19 widthValid];
    unsigned __int8 v30 = [v19 heightValid];
    unsigned __int8 v31 = [v19 horizontalFlip];
    unsigned __int8 v32 = [v19 verticalFlip];

    uint64_t v33 = a2 + *(int *)(v4 + 20);
    *(_DWORD *)uint64_t v33 = LODWORD(v14);
    *(_DWORD *)(v33 + 4) = LODWORD(v16);
    *(float *)(v33 + 8) = v24;
    *(float *)(v33 + 12) = v26;
    *(float *)(v33 + 16) = v28;
    *(unsigned char *)(v33 + 20) = v29;
    *(unsigned char *)(v33 + 21) = v30;
    *(unsigned char *)(v33 + 22) = v31;
    *(unsigned char *)(v33 + 23) = v32;
    *(void *)(v33 + 24) = _swiftEmptyDictionarySingleton;
  }
  else
  {
    __break(1u);
  }
}

id sub_100A04F68(uint64_t a1)
{
  uint64_t v3 = *(int *)(type metadata accessor for CRLMaskInfoData() + 20);
  uint64_t v4 = (float32x4_t *)(v1 + v3);
  float v5 = *(float *)(v1 + v3 + 16);
  uint64_t v6 = *(unsigned __int8 *)(v1 + v3 + 20);
  uint64_t v7 = *(unsigned __int8 *)(v1 + v3 + 21);
  uint64_t v8 = v4[1].u8[6];
  uint64_t v9 = v4[1].u8[7];
  double v10 = (float32x4_t *)(a1 + v3);
  float32x4_t v12 = *v4;
  if ((vmaxv_u16((uint16x4_t)vcltz_s16(vshl_n_s16(vmovn_s32((int32x4_t)vmvnq_s8((int8x16_t)vceqq_f32(*v4, *v10))), 0xFuLL))) & 1) != 0
    || v5 != v10[1].f32[0]
    || ((v6 ^ v10[1].u8[4]) & 1) != 0
    || ((v7 ^ v10[1].u8[5]) & 1) != 0
    || ((v8 ^ v10[1].u8[6]) & 1) != 0
    || ((v9 ^ v10[1].u8[7]) & 1) != 0
    || (sub_100ED60AC(v4[1].i64[1], v10[1].i64[1]) & 1) == 0)
  {
    return [objc_allocWithZone((Class)CRLCanvasInfoGeometry) initWithPosition:v6 size:v7 widthValid:v8 heightValid:v9 horizontalFlip:v12.f32[0] verticalFlip:v12.f32[1] angle:v12.f32[2] v5];
  }
  else
  {
    return 0;
  }
}

uint64_t sub_100A050A0(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_1005057FC(&qword_10168B818);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5, v7);
  uint64_t v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10050F848(a1, a1[3]);
  sub_100A05D10();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  LOBYTE(v21) = 0;
  type metadata accessor for CRLPathSourceData(0);
  sub_100A062AC(&qword_10168B820, (void (*)(uint64_t))type metadata accessor for CRLPathSourceData);
  KeyedEncodingContainer.encode<A>(_:forKey:)();
  if (!v2)
  {
    uint64_t v10 = type metadata accessor for CRLMaskInfoData();
    double v11 = (long long *)(v3 + *(int *)(v10 + 20));
    int v12 = *((_DWORD *)v11 + 4);
    char v13 = *((unsigned char *)v11 + 20);
    char v14 = *((unsigned char *)v11 + 21);
    char v15 = *((unsigned char *)v11 + 22);
    char v16 = *((unsigned char *)v11 + 23);
    uint64_t v17 = *((void *)v11 + 3);
    long long v21 = *v11;
    int v22 = v12;
    char v23 = v13;
    char v24 = v14;
    char v25 = v15;
    char v26 = v16;
    uint64_t v27 = v17;
    char v20 = 1;
    sub_10068F250();
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    *(void *)&long long v21 = *(void *)(v3 + *(int *)(v10 + 24));
    char v20 = 2;
    sub_1005057FC((uint64_t *)&unk_101687A40);
    sub_1005573B0();
    KeyedEncodingContainer.encode<A>(_:forKey:)();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v5);
}

uint64_t sub_100A052F4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v31 = a2;
  uint64_t v4 = type metadata accessor for CRLPathSourceData(0);
  __chkstk_darwin(v4, v5);
  uint64_t v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1005057FC(&qword_10168B808);
  uint64_t v32 = *(void *)(v8 - 8);
  uint64_t v33 = v8;
  __chkstk_darwin(v8, v9);
  double v11 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for CRLMaskInfoData();
  __chkstk_darwin(v12, v13);
  uint64_t v16 = *(int *)(v15 + 24);
  uint64_t v34 = a1;
  uint64_t v35 = v16;
  uint64_t v17 = (char *)&v30 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&v17[v16] = _swiftEmptyDictionarySingleton;
  sub_10050F848(a1, a1[3]);
  sub_100A05D10();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v2)
  {
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v34);
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v18 = v32;
    LOBYTE(v36) = 0;
    sub_100A062AC(&qword_10168B810, (void (*)(uint64_t))type metadata accessor for CRLPathSourceData);
    uint64_t v19 = v33;
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    sub_100A06184((uint64_t)v7, (uint64_t)v17);
    char v43 = 1;
    sub_10068F13C();
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    int v20 = v37;
    char v21 = v38;
    char v22 = v39;
    char v23 = v40;
    char v24 = v41;
    uint64_t v25 = v42;
    char v26 = &v17[*(int *)(v12 + 20)];
    *(_OWORD *)char v26 = v36;
    *((_DWORD *)v26 + 4) = v20;
    v26[20] = v21;
    v26[21] = v22;
    v26[22] = v23;
    v26[23] = v24;
    *((void *)v26 + 3) = v25;
    sub_1005057FC((uint64_t *)&unk_101687A40);
    char v43 = 2;
    sub_100557304();
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    (*(void (**)(char *, uint64_t))(v18 + 8))(v11, v19);
    uint64_t v28 = v35;
    uint64_t v27 = v36;
    swift_bridgeObjectRelease();
    *(void *)&v17[v28] = v27;
    sub_100A061E8((uint64_t)v17, v31);
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v34);
    return sub_100A0624C((uint64_t)v17, (uint64_t (*)(void))type metadata accessor for CRLMaskInfoData);
  }
}

uint64_t sub_100A056F0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100A052F4(a1, a2);
}

uint64_t sub_100A05708(void *a1)
{
  return sub_100A050A0(a1);
}

uint64_t sub_100A05720(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100A062AC(&qword_10168B828, (void (*)(uint64_t))type metadata accessor for CRLMaskInfoData);

  return CRExtendableValueStruct.copy(renamingReferences:)(a1, a2, v4);
}

uint64_t sub_100A057A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100A062AC(&qword_10168B828, (void (*)(uint64_t))type metadata accessor for CRLMaskInfoData);

  return CRExtendableValueStruct.copy(renamingReferences:)(a1, a2, v4);
}

uint64_t sub_100A05828(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_100A062AC(&qword_10168B7A0, (void (*)(uint64_t))type metadata accessor for CRLMaskInfoData);
  uint64_t v7 = sub_100A062AC(&qword_10168B830, (void (*)(uint64_t))type metadata accessor for CRLMaskInfoData);

  return CRValue<>.observableDifference(from:with:)(a1, a2, a3, v6, v7);
}

uint64_t sub_100A058F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100A062AC(&qword_10168B828, (void (*)(uint64_t))type metadata accessor for CRLMaskInfoData);

  return CRExtendableValueStruct.visitReferences(_:)(a1, a2, v4);
}

uint64_t sub_100A05970()
{
  return CRValueStruct.init(from:)();
}

uint64_t sub_100A059F0()
{
  return CRValueStruct.encode(to:)();
}

uint64_t sub_100A05A68(uint64_t a1)
{
  uint64_t v2 = sub_100A062AC(&qword_10168B7F8, (void (*)(uint64_t))type metadata accessor for CRLMaskInfoData);

  return CRValueStruct.minEncodingVersion.getter(a1, v2);
}

uint64_t sub_100A05AE4()
{
  return sub_100A062AC(&qword_10168B798, (void (*)(uint64_t))type metadata accessor for CRLMaskInfoData);
}

uint64_t sub_100A05B2C()
{
  return sub_100A062AC(&qword_10168B7A0, (void (*)(uint64_t))type metadata accessor for CRLMaskInfoData);
}

uint64_t sub_100A05B74()
{
  return sub_100A062AC(&qword_10168B7A8, (void (*)(uint64_t))type metadata accessor for CRLMaskInfoData);
}

uint64_t sub_100A05BBC()
{
  return sub_100A062AC(&qword_10168B7B0, (void (*)(uint64_t))type metadata accessor for CRLMaskInfoData);
}

unint64_t sub_100A05C08()
{
  unint64_t result = qword_10168B7B8;
  if (!qword_10168B7B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168B7B8);
  }
  return result;
}

unint64_t sub_100A05C60()
{
  unint64_t result = qword_10168B7C0;
  if (!qword_10168B7C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168B7C0);
  }
  return result;
}

unint64_t sub_100A05CB8()
{
  unint64_t result = qword_10168B7C8;
  if (!qword_10168B7C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168B7C8);
  }
  return result;
}

unint64_t sub_100A05D10()
{
  unint64_t result = qword_10168B7D0;
  if (!qword_10168B7D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168B7D0);
  }
  return result;
}

unint64_t sub_100A05D68()
{
  unint64_t result = qword_10168B7D8;
  if (!qword_10168B7D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168B7D8);
  }
  return result;
}

unint64_t sub_100A05DC0()
{
  unint64_t result = qword_10168B7E0;
  if (!qword_10168B7E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168B7E0);
  }
  return result;
}

unint64_t sub_100A05E18()
{
  unint64_t result = qword_10168B7E8;
  if (!qword_10168B7E8)
  {
    sub_100522D34(&qword_10168B7F0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168B7E8);
  }
  return result;
}

uint64_t sub_100A05E74()
{
  return sub_100A062AC(&qword_10168B7F8, (void (*)(uint64_t))type metadata accessor for CRLMaskInfoData);
}

uint64_t sub_100A05EBC()
{
  return sub_100A062AC(&qword_10168B800, (void (*)(uint64_t))type metadata accessor for CRLMaskInfoData);
}

uint64_t sub_100A05F04(unsigned __int8 *a1, unsigned __int8 *a2)
{
  if ((sub_100AAFDA4(a1, a2) & 1) == 0) {
    return 0;
  }
  uint64_t v4 = type metadata accessor for CRLMaskInfoData();
  uint64_t v5 = *(int *)(v4 + 20);
  uint64_t v6 = (float32x4_t *)&a1[v5];
  float v7 = *(float *)&a1[v5 + 16];
  uint64_t v8 = (float32x4_t *)&a2[v5];
  if (vmaxv_u16((uint16x4_t)vcltz_s16(vshl_n_s16(vmovn_s32((int32x4_t)vmvnq_s8((int8x16_t)vceqq_f32(*v6, *v8))), 0xFuLL)))) {
    return 0;
  }
  if (v7 != v8[1].f32[0]) {
    return 0;
  }
  if ((v6[1].u8[4] ^ v8[1].u8[4])) {
    return 0;
  }
  if ((v6[1].u8[5] ^ v8[1].u8[5])) {
    return 0;
  }
  if ((v6[1].u8[6] ^ v8[1].u8[6])) {
    return 0;
  }
  if ((v6[1].u8[7] ^ v8[1].u8[7])) {
    return 0;
  }
  uint64_t v9 = v4;
  if ((sub_100ED60AC(v6[1].i64[1], v8[1].i64[1]) & 1) == 0) {
    return 0;
  }
  uint64_t v10 = *(int *)(v9 + 24);
  uint64_t v11 = *(void *)&a1[v10];
  uint64_t v12 = *(void *)&a2[v10];

  return sub_100ED60AC(v11, v12);
}

uint64_t sub_100A0600C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x72756F5368746170 && a2 == 0xEE00617461446563;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x797274656D6F6567 && a2 == 0xE800000000000000 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x800000010123A720)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_100A06184(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CRLPathSourceData(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100A061E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CRLMaskInfoData();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100A0624C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_100A062AC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for CRLMaskInfoData.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100A063C0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLMaskInfoData.CodingKeys()
{
  return &type metadata for CRLMaskInfoData.CodingKeys;
}

unint64_t sub_100A063FC()
{
  unint64_t result = qword_10168B838[0];
  if (!qword_10168B838[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_10168B838);
  }
  return result;
}

uint64_t sub_100A06450()
{
  sub_100522D34(&qword_101672BD0);
  type metadata accessor for CheckedContinuation();
  uint64_t result = type metadata accessor for Optional();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_100A0650C()
{
  uint64_t v1 = v0 + *(void *)(*(void *)v0 + 88);
  sub_100522D34(&qword_101672BD0);
  type metadata accessor for CheckedContinuation();
  uint64_t v2 = type metadata accessor for Optional();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t sub_100A065C4()
{
  sub_100A0650C();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for CRLAsyncEventObserver()
{
  return sub_100568E70();
}

uint64_t sub_100A06634()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for CRLAsyncEventObserverQueue()
{
  return sub_100568E70();
}

void sub_100A0677C(unint64_t a1, CGFloat a2, CGFloat a3, CGFloat a4, CGFloat a5)
{
  uint64_t v11 = v5 + OBJC_IVAR____TtC8Freeform23CRLiOSPrintPageRenderer_exporter;
  swift_beginAccess();
  *(void *)(v11 + 96) = a1;
  if (!a1)
  {
    double v12 = sub_100A06BD0(a2, a3, a4, a5);
    swift_beginAccess();
    *(double *)uint64_t v11 = v12;
    [*(id *)(v11 + 104) setViewScale:v12];
    *(CGFloat *)(v11 + 16) = a2;
    *(CGFloat *)(v11 + 24) = a3;
    *(CGFloat *)(v11 + 32) = a4;
    *(CGFloat *)(v11 + 40) = a5;
    *(unsigned char *)(v11 + 48) = 0;
    swift_endAccess();
  }
  uint64_t v13 = UIGraphicsGetCurrentContext();
  if (v13)
  {
    uint64_t v14 = v13;
    id v15 = *(id *)(v11 + 104);
    id v16 = [v15 canvas];
    id v17 = [v15 infos];
    [v16 setInfosToDisplay:v17];

    id v18 = [v15 canvas];
    [v18 nonInteractiveLayoutIfNeeded];

    id v19 = [v15 canvas];
    [v19 unscaledRectOfLayouts];
    double v21 = v20;
    double v23 = v22;

    if (*(unsigned char *)(v5 + OBJC_IVAR____TtC8Freeform23CRLiOSPrintPageRenderer_printScenes) == 1)
    {
      unint64_t v24 = *(void *)(v11 + 8);
      if (!v24)
      {
LABEL_30:

        return;
      }
      if (!(v24 >> 62))
      {
        unint64_t v25 = *(void *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x10);
        uint64_t v26 = swift_bridgeObjectRetain();
        if ((a1 & 0x8000000000000000) == 0)
        {
          while (v25 > a1)
          {
            if ((v24 & 0xC000000000000001) != 0) {
              goto LABEL_26;
            }
            if (*(void *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x10) > a1)
            {
              uint64_t v27 = (char *)*(id *)(v24 + 8 * a1 + 32);
              goto LABEL_12;
            }
            __break(1u);
LABEL_28:
            unint64_t v25 = v26;
            if ((a1 & 0x8000000000000000) != 0) {
              break;
            }
          }
        }
        swift_bridgeObjectRelease();
        goto LABEL_30;
      }
      swift_bridgeObjectRetain();
      uint64_t v26 = _CocoaArrayWrapper.endIndex.getter();
      if ((v26 & 0x8000000000000000) == 0) {
        goto LABEL_28;
      }
      __break(1u);
LABEL_26:
      uint64_t v27 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_12:
      uint64_t v28 = v27;
      swift_bridgeObjectRelease();
      CGFloat v29 = *(double *)&v28[OBJC_IVAR____TtC8Freeform12CRLSceneInfo_savedUnscaledRect];
      CGFloat v30 = *(double *)&v28[OBJC_IVAR____TtC8Freeform12CRLSceneInfo_savedUnscaledRect + 8];
      double v21 = *(double *)&v28[OBJC_IVAR____TtC8Freeform12CRLSceneInfo_savedUnscaledRect + 16];
      double v23 = *(double *)&v28[OBJC_IVAR____TtC8Freeform12CRLSceneInfo_savedUnscaledRect + 24];

      if (*(unsigned char *)(v11 + 50) == 1 && (*(unsigned char *)(v11 + 88) & 1) == 0)
      {
        sub_1000672D8(1, *(double *)(v11 + 72), *(double *)(v11 + 80), v29, v30, v21, v23);
        double v21 = v31;
        double v23 = v32;
      }
      double v33 = 1.0;
      if ((*(unsigned char *)(v11 + 48) & 1) == 0)
      {
        double v34 = *(double *)(v11 + 40) / v23;
        if (v34 >= *(double *)(v11 + 32) / v21) {
          double v34 = *(double *)(v11 + 32) / v21;
        }
        double v33 = floor(v34 * 100.0) / 100.0;
      }
    }
    else
    {
      double v33 = *(double *)v11;
    }
    CGFloat v35 = v33 * v23;
    CGContextTranslateCTM(v14, 0.0, v35);
    CGContextScaleCTM(v14, 1.0, -1.0);
    v43.origin.double x = a2;
    v43.origin.CGFloat y = a3;
    v43.size.CGFloat width = a4;
    v43.size.CGFloat height = a5;
    double v36 = CGRectGetMidX(v43) - v33 * v21 * 0.5;
    v44.origin.double x = a2;
    v44.origin.CGFloat y = a3;
    v44.size.CGFloat width = a4;
    v44.size.CGFloat height = a5;
    double v37 = CGRectGetMidY(v44) - v35 * 0.5;
    if (v36 != 0.0 || v37 != 0.0) {
      CGContextTranslateCTM(v14, v36, -v37);
    }
    long long v38 = *(_OWORD *)(v11 + 80);
    v42[4] = *(_OWORD *)(v11 + 64);
    v42[5] = v38;
    long long v39 = *(_OWORD *)(v11 + 112);
    v42[6] = *(_OWORD *)(v11 + 96);
    v42[7] = v39;
    long long v40 = *(_OWORD *)(v11 + 16);
    v42[0] = *(_OWORD *)v11;
    v42[1] = v40;
    long long v41 = *(_OWORD *)(v11 + 48);
    v42[2] = *(_OWORD *)(v11 + 32);
    void v42[3] = v41;
    sub_1007C2298(v42);
    sub_100B10F34((uint64_t)v14);

    sub_1007C22E0((uint64_t)v42);
  }
}

double sub_100A06BD0(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4)
{
  uint64_t v9 = v4 + OBJC_IVAR____TtC8Freeform23CRLiOSPrintPageRenderer_exporter;
  swift_beginAccess();
  id v10 = *(id *)(v9 + 104);
  id v11 = [v10 canvas];
  id v12 = [v10 infos];
  [v11 setInfosToDisplay:v12];

  id v13 = [v10 canvas];
  [v13 nonInteractiveLayoutIfNeeded];

  id v14 = [v10 canvas];
  [v14 unscaledRectOfLayouts];
  double v16 = v15;
  double v18 = v17;

  v24.origin.double x = a1;
  v24.origin.CGFloat y = a2;
  v24.size.CGFloat width = a3;
  v24.size.CGFloat height = a4;
  double Width = CGRectGetWidth(v24);
  if (v16 <= 1.0) {
    double v16 = 1.0;
  }
  v25.origin.double x = a1;
  v25.origin.CGFloat y = a2;
  v25.size.CGFloat width = a3;
  v25.size.CGFloat height = a4;
  double Height = CGRectGetHeight(v25);
  if (v18 > 1.0) {
    double v21 = v18;
  }
  else {
    double v21 = 1.0;
  }
  double v22 = Height / v21;
  if (v22 >= Width / v16) {
    double v22 = Width / v16;
  }
  return fmin(floor(v22 * 100.0) / 100.0, 1.0);
}

id sub_100A06D6C()
{
  uint64_t v1 = &v0[OBJC_IVAR____TtC8Freeform23CRLiOSPrintPageRenderer_exporter];
  swift_beginAccess();
  unint64_t v2 = *((void *)v1 + 1);
  if (!v2) {
    return [*(id *)&v0[OBJC_IVAR____TtC8Freeform23CRLiOSPrintPageRenderer_printInfo] orientation];
  }
  if (!(v2 >> 62))
  {
    uint64_t v3 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    id result = (id)swift_bridgeObjectRetain();
    if (v3) {
      goto LABEL_4;
    }
    goto LABEL_14;
  }
  swift_bridgeObjectRetain();
  id result = (id)_CocoaArrayWrapper.endIndex.getter();
  if (!result)
  {
LABEL_14:
    swift_bridgeObjectRelease();
    return [*(id *)&v0[OBJC_IVAR____TtC8Freeform23CRLiOSPrintPageRenderer_printInfo] orientation];
  }
LABEL_4:
  if ((v2 & 0xC000000000000001) != 0)
  {
    uint64_t v5 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_7;
  }
  if (*(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    uint64_t v5 = (char *)*(id *)(v2 + 32);
LABEL_7:
    unsigned int v6 = v5;
    swift_bridgeObjectRelease();
    CGFloat v7 = *(double *)&v6[OBJC_IVAR____TtC8Freeform12CRLSceneInfo_savedUnscaledRect];
    CGFloat v8 = *(double *)&v6[OBJC_IVAR____TtC8Freeform12CRLSceneInfo_savedUnscaledRect + 8];
    double v9 = *(double *)&v6[OBJC_IVAR____TtC8Freeform12CRLSceneInfo_savedUnscaledRect + 16];
    double v10 = *(double *)&v6[OBJC_IVAR____TtC8Freeform12CRLSceneInfo_savedUnscaledRect + 24];

    [v0 paperRect];
    v14.origin.double x = 0.0;
    v14.origin.CGFloat y = 0.0;
    v14.size.CGFloat width = 0.0;
    v14.size.CGFloat height = 0.0;
    if (!CGRectEqualToRect(v13, v14)) {
      [v0 paperRect];
    }
    if (v0[OBJC_IVAR____TtC8Freeform23CRLiOSPrintPageRenderer_printScenesUsingDeviceSize] != 1) {
      return (id)(v9 / v10 > 1.0);
    }
    if ((v1[88] & 1) == 0)
    {
      sub_1000672D8(1, *((double *)v1 + 9), *((double *)v1 + 10), v7, v8, v9, v10);
      double v9 = v11;
      double v10 = v12;
      return (id)(v9 / v10 > 1.0);
    }
    return [*(id *)&v0[OBJC_IVAR____TtC8Freeform23CRLiOSPrintPageRenderer_printInfo] orientation];
  }
  __break(1u);
  return result;
}

id sub_100A06F40()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLiOSPrintPageRenderer();
  [super dealloc];
}

uint64_t type metadata accessor for CRLiOSPrintPageRenderer()
{
  return self;
}

unsigned char *sub_100A07004(_OWORD *a1, void *a2)
{
  uint64_t v4 = a1;
  *(_OWORD *)&v2[OBJC_IVAR____TtC8Freeform23CRLiOSPrintPageRenderer_defaultPaperSize] = xmmword_10119D480;
  uint64_t v5 = OBJC_IVAR____TtC8Freeform23CRLiOSPrintPageRenderer_printScenes;
  v2[OBJC_IVAR____TtC8Freeform23CRLiOSPrintPageRenderer_printScenes] = 0;
  uint64_t v6 = OBJC_IVAR____TtC8Freeform23CRLiOSPrintPageRenderer_printScenesUsingDeviceSize;
  v2[OBJC_IVAR____TtC8Freeform23CRLiOSPrintPageRenderer_printScenesUsingDeviceSize] = 1;
  CGFloat v7 = &v2[OBJC_IVAR____TtC8Freeform23CRLiOSPrintPageRenderer_exporter];
  long long v8 = a1[5];
  void v7[4] = a1[4];
  v7[5] = v8;
  long long v9 = a1[7];
  void v7[6] = a1[6];
  v7[7] = v9;
  long long v10 = a1[1];
  *CGFloat v7 = *a1;
  v7[1] = v10;
  long long v11 = a1[3];
  v7[2] = a1[2];
  v7[3] = v11;
  *(void *)&v2[OBJC_IVAR____TtC8Freeform23CRLiOSPrintPageRenderer_printInfo] = a2;
  double v12 = v2;
  sub_1007C2298(v4);
  id v13 = a2;
  v2[v5] = sub_1007C0E1C() & 1;
  v2[v6] = sub_1007C0F7C() & 1;

  v17.receiver = v12;
  v17.super_class = (Class)type metadata accessor for CRLiOSPrintPageRenderer();
  CGRect v14 = [super init];
  LOBYTE(v4) = v14[OBJC_IVAR____TtC8Freeform23CRLiOSPrintPageRenderer_printScenes];
  double v15 = &v14[OBJC_IVAR____TtC8Freeform23CRLiOSPrintPageRenderer_exporter];
  swift_beginAccess();
  v15[49] = (char)v4;
  v15[50] = v14[OBJC_IVAR____TtC8Freeform23CRLiOSPrintPageRenderer_printScenesUsingDeviceSize];
  return v14;
}

id sub_100A0713C(uint64_t a1, uint64_t a2)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v6 = sub_1005057FC((uint64_t *)&unk_10167BC20);
  uint64_t v40 = *(void *)(v6 - 8);
  __chkstk_darwin(v6, v7);
  long long v9 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for CRLWPShapeItemCRDTData(0);
  __chkstk_darwin(v10, v11);
  id v13 = (char *)&v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for CRLWPStorageCRDTData(0);
  __chkstk_darwin(v14 - 8, v15);
  objc_super v17 = (char *)&v35 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = *(void *)(v2 + OBJC_IVAR____TtC8Freeform15CRLTextPosition_location);
  id result = (id)NSNotFound.getter();
  if ((id)v18 == result || a1 == 0)
  {
    id v21 = objc_allocWithZone(ObjectType);
    return [v21 init:v18 caretAffinity:0 v35];
  }
  uint64_t v37 = a1;
  Class v35 = ObjectType;
  uint64_t v38 = OBJC_IVAR____TtC8Freeform12CRLWPStorage_shapeItemData;
  uint64_t v39 = a2;
  uint64_t v22 = *(void *)(a2 + OBJC_IVAR____TtC8Freeform12CRLWPStorage_shapeItemData);
  if (!v22)
  {
    __break(1u);
    goto LABEL_16;
  }
  (*(void (**)(void))(*(void *)v22 + 760))();
  sub_1005D3C94((uint64_t)&v13[*(int *)(v10 + 20)], (uint64_t)v17);
  sub_1005D3CF8((uint64_t)v13, type metadata accessor for CRLWPShapeItemCRDTData);
  uint64_t v23 = v40;
  double v36 = *(void (**)(char *, char *, uint64_t))(v40 + 16);
  v36(v9, v17, v6);
  sub_1005D3CF8((uint64_t)v17, type metadata accessor for CRLWPStorageCRDTData);
  CGRect v24 = (void *)CRAttributedString.attributedString.getter();
  uint64_t v40 = *(void *)(v23 + 8);
  ((void (*)(char *, uint64_t))v40)(v9, v6);
  id v25 = [v24 length];

  id result = 0;
  if ((v18 & 0x8000000000000000) == 0 && (uint64_t)v25 >= v18)
  {
    uint64_t v26 = *(void *)(v39 + v38);
    if (v26)
    {
      (*(void (**)(void))(*(void *)v26 + 760))(0);
      sub_1005D3C94((uint64_t)&v13[*(int *)(v10 + 20)], (uint64_t)v17);
      sub_1005D3CF8((uint64_t)v13, type metadata accessor for CRLWPShapeItemCRDTData);
      v36(v9, v17, v6);
      sub_1005D3CF8((uint64_t)v17, type metadata accessor for CRLWPStorageCRDTData);
      uint64_t v27 = (void *)CRAttributedString.attributedString.getter();
      ((void (*)(char *, uint64_t))v40)(v9, v6);
      id v28 = [v27 string];

      uint64_t v29 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v31 = v30;

      uint64_t v41 = v29;
      uint64_t v42 = v31;
      sub_10052E310();
      swift_bridgeObjectRetain();
      String.Index.init<A>(utf16Offset:in:)();
      String.UTF16View.index(_:offsetBy:limitedBy:)();
      if (v32)
      {
        swift_bridgeObjectRelease();
        return 0;
      }
      else
      {
        uint64_t v41 = v29;
        uint64_t v42 = v31;
        uint64_t v33 = String.Index.utf16Offset<A>(in:)();
        swift_bridgeObjectRelease();
        id v34 = objc_allocWithZone(v35);
        return [v34 init:v33 caretAffinity:0];
      }
    }
LABEL_16:
    __break(1u);
  }
  return result;
}

id sub_100A075BC(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (char *)objc_allocWithZone(v2);
  *(void *)&v5[OBJC_IVAR____TtC8Freeform15CRLTextPosition_insertionEdge] = 0;
  *(void *)&v5[OBJC_IVAR____TtC8Freeform15CRLTextPosition_location] = a1;
  *(void *)&v5[OBJC_IVAR____TtC8Freeform15CRLTextPosition_caretAffinity] = a2;
  v7.receiver = v5;
  v7.super_class = v2;
  return [super init];
}

uint64_t sub_100A07878(uint64_t a1)
{
  swift_getObjectType();
  sub_100557A70(a1, (uint64_t)v7);
  if (v8)
  {
    if (swift_dynamicCast())
    {
      if (*(void *)(v1 + OBJC_IVAR____TtC8Freeform15CRLTextPosition_location) == *(void *)&v6[OBJC_IVAR____TtC8Freeform15CRLTextPosition_location])
      {
        BOOL v3 = *(void *)(v1 + OBJC_IVAR____TtC8Freeform15CRLTextPosition_caretAffinity) != 1;
        uint64_t v4 = *(void *)&v6[OBJC_IVAR____TtC8Freeform15CRLTextPosition_caretAffinity];

        return v3 ^ (v4 == 1);
      }
    }
  }
  else
  {
    sub_10052E2B0((uint64_t)v7);
  }
  return 0;
}

uint64_t sub_100A07A28()
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v15 = 0;
  unint64_t v16 = 0xE000000000000000;
  _StringGuts.grow(_:)(37);
  v14.receiver = v0;
  v14.super_class = ObjectType;
  [super description];
  uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v5 = v4;
  swift_bridgeObjectRelease();

  uint64_t v15 = v3;
  unint64_t v16 = v5;
  v6._uint64_t countAndFlagsBits = 0x7461636F6C207B20;
  v6._object = (void *)0xED0000203A6E6F69;
  String.append(_:)(v6);
  v7._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v7);
  swift_bridgeObjectRelease();
  v8._uint64_t countAndFlagsBits = 0x6666416C6F65202CLL;
  v8._object = (void *)0xEF203A7974696E69;
  String.append(_:)(v8);
  if (*(void *)&v0[OBJC_IVAR____TtC8Freeform15CRLTextPosition_caretAffinity] == 1) {
    uint64_t v9 = 1702195828;
  }
  else {
    uint64_t v9 = 0x65736C6166;
  }
  if (*(void *)&v0[OBJC_IVAR____TtC8Freeform15CRLTextPosition_caretAffinity] == 1) {
    unint64_t v10 = 0xE400000000000000;
  }
  else {
    unint64_t v10 = 0xE500000000000000;
  }
  unint64_t v11 = v10;
  String.append(_:)(*(Swift::String *)&v9);
  swift_bridgeObjectRelease();
  v12._uint64_t countAndFlagsBits = 8200236;
  v12._object = (void *)0xE300000000000000;
  String.append(_:)(v12);
  return v15;
}

uint64_t type metadata accessor for CRLTextPosition()
{
  return self;
}

unint64_t sub_100A07CB4()
{
  unint64_t result = qword_10168BA30;
  if (!qword_10168BA30)
  {
    type metadata accessor for CRLTextPosition();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168BA30);
  }
  return result;
}

BOOL sub_100A07D08(void *a1, void *a2)
{
  return *(void *)(*a1 + OBJC_IVAR____TtC8Freeform15CRLTextPosition_location) < *(void *)(*a2
                                                                                            + OBJC_IVAR____TtC8Freeform15CRLTextPosition_location);
}

BOOL sub_100A07D2C(void *a1, void *a2)
{
  return *(void *)(*a2 + OBJC_IVAR____TtC8Freeform15CRLTextPosition_location) >= *(void *)(*a1
                                                                                             + OBJC_IVAR____TtC8Freeform15CRLTextPosition_location);
}

BOOL sub_100A07D50(void *a1, void *a2)
{
  return *(void *)(*a1 + OBJC_IVAR____TtC8Freeform15CRLTextPosition_location) >= *(void *)(*a2
                                                                                             + OBJC_IVAR____TtC8Freeform15CRLTextPosition_location);
}

BOOL sub_100A07D74(void *a1, void *a2)
{
  return *(void *)(*a2 + OBJC_IVAR____TtC8Freeform15CRLTextPosition_location) < *(void *)(*a1
                                                                                            + OBJC_IVAR____TtC8Freeform15CRLTextPosition_location);
}

uint64_t sub_100A07D98(uint64_t a1, uint64_t a2)
{
  swift_getObjectType();
  uint64_t v3 = swift_dynamicCastClass();
  if (!v3) {
    return 1;
  }
  uint64_t v4 = *(void *)(a2 + OBJC_IVAR____TtC8Freeform15CRLTextPosition_location);
  uint64_t v5 = *(void *)(v3 + OBJC_IVAR____TtC8Freeform15CRLTextPosition_location);
  if (v5 < v4) {
    return 1;
  }
  if (v4 >= v5) {
    return 0;
  }
  return -1;
}

uint64_t sub_100A07DFC(uint64_t a1, uint64_t a2)
{
  return a1 + a2;
}

uint64_t sub_100A07E04(uint64_t a1, void *a2)
{
  v13[3] = swift_getObjectType();
  v13[0] = a2;
  sub_100557A70((uint64_t)v13, (uint64_t)v11);
  if (!v12)
  {
    id v8 = a2;
    sub_10052E2B0((uint64_t)v11);
    goto LABEL_7;
  }
  id v4 = a2;
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_7:
    uint64_t v7 = 0;
    goto LABEL_8;
  }
  if (*(void *)(a1 + OBJC_IVAR____TtC8Freeform15CRLTextPosition_location) != *(void *)&v10[OBJC_IVAR____TtC8Freeform15CRLTextPosition_location])
  {

    goto LABEL_7;
  }
  BOOL v5 = *(void *)(a1 + OBJC_IVAR____TtC8Freeform15CRLTextPosition_caretAffinity) != 1;
  uint64_t v6 = *(void *)&v10[OBJC_IVAR____TtC8Freeform15CRLTextPosition_caretAffinity];

  uint64_t v7 = v5 ^ (v6 == 1);
LABEL_8:
  sub_10052E2B0((uint64_t)v13);
  return v7;
}

uint64_t sub_100A07EF4@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, char *a3@<X8>)
{
  double v71 = a3;
  uint64_t v5 = sub_1005057FC((uint64_t *)&unk_101674520);
  __chkstk_darwin(v5 - 8, v6);
  double v70 = (char *)&v63 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8, v9);
  uint64_t v75 = (uint64_t)&v63 - v10;
  uint64_t v11 = sub_1005057FC((uint64_t *)&unk_101674160);
  __chkstk_darwin(v11 - 8, v12);
  uint64_t v72 = (uint64_t)&v63 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14, v15);
  uint64_t v77 = (uint64_t)&v63 - v16;
  uint64_t v76 = type metadata accessor for CRLProto_Data(0);
  uint64_t v78 = *(void *)(v76 - 8);
  __chkstk_darwin(v76, v17);
  double v73 = (uint64_t *)((char *)&v63 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v19, v20);
  uint64_t v22 = (uint64_t *)((char *)&v63 - v21);
  uint64_t v23 = type metadata accessor for UUID();
  uint64_t v74 = *(void *)(v23 - 8);
  __chkstk_darwin(v23, v24);
  uint64_t v26 = (char *)&v63 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v27, v28);
  uint64_t v30 = (char *)&v63 - v29;
  uint64_t v31 = type metadata accessor for BinaryDecodingOptions();
  __chkstk_darwin(v31 - 8, v32);
  uint64_t v33 = type metadata accessor for CRLProto_StartOrEndFollow(0);
  __chkstk_darwin(v33, v34);
  double v36 = (char *)&v63 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v81 = 0;
  long long v79 = 0u;
  long long v80 = 0u;
  sub_100510D4C(a1, a2);
  BinaryDecodingOptions.init()();
  sub_100A08D94();
  uint64_t v37 = v82;
  Message.init(serializedData:extensions:partial:options:)();
  if (v37) {
    return sub_100510084(a1, a2);
  }
  uint64_t v66 = v26;
  uint64_t v67 = v23;
  id v82 = v30;
  uint64_t v68 = a1;
  unint64_t v69 = a2;
  uint64_t v39 = v77;
  sub_100522E9C((uint64_t)&v36[*(int *)(v33 + 20)], v77, (uint64_t *)&unk_101674160);
  uint64_t v40 = v78 + 48;
  uint64_t v41 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v78 + 48);
  uint64_t v42 = v76;
  int v43 = v41(v39, 1, v76);
  uint64_t v78 = v40;
  char v65 = v41;
  if (v43 == 1)
  {
    *(_OWORD *)uint64_t v22 = xmmword_101180360;
    uint64_t v44 = v42;
    UnknownStorage.init()();
    sub_100522F00(v39, (uint64_t *)&unk_101674160);
  }
  else
  {
    uint64_t v44 = v42;
    sub_1005CC5B8(v39, (uint64_t)v22);
  }
  uint64_t v45 = *v22;
  unint64_t v46 = v22[1];
  sub_100510D4C(*v22, v46);
  sub_100A08DEC((uint64_t)v22, type metadata accessor for CRLProto_Data);
  UUID.init(crl_data:)(v45, v46);
  uint64_t v47 = (uint64_t)&v36[*(int *)(v33 + 24)];
  uint64_t v48 = v72;
  sub_100522E9C(v47, v72, (uint64_t *)&unk_101674160);
  int v49 = v65(v48, 1, v44);
  id v64 = v36;
  uint64_t v50 = v73;
  if (v49 == 1)
  {
    *(_OWORD *)double v73 = xmmword_101180360;
    UnknownStorage.init()();
    sub_100522F00(v48, (uint64_t *)&unk_101674160);
  }
  else
  {
    sub_1005CC5B8(v48, (uint64_t)v73);
  }
  uint64_t v52 = v74;
  uint64_t v51 = v75;
  char v53 = v66;
  uint64_t v54 = *v50;
  unint64_t v55 = v50[1];
  sub_100510D4C(*v50, v55);
  sub_100A08DEC((uint64_t)v50, type metadata accessor for CRLProto_Data);
  UUID.init(crl_data:)(v54, v55);
  uint64_t v57 = v68;
  unint64_t v56 = v69;
  uint64_t v58 = v67;
  uint64_t v78 = 0;
  int v59 = *(void (**)(uint64_t, char *, uint64_t))(v52 + 16);
  v59(v51, v82, v67);
  uint64_t v60 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v52 + 56);
  v60(v51, 0, 1, v58);
  uint64_t v61 = (uint64_t)v70;
  v59((uint64_t)v70, v53, v58);
  v60(v61, 0, 1, v58);
  sub_100A08590(v75, v61, v71);
  sub_100510084(v57, v56);
  uint64_t v62 = *(void (**)(char *, uint64_t))(v74 + 8);
  v62(v53, v58);
  v62(v82, v58);
  return sub_100A08DEC((uint64_t)v64, type metadata accessor for CRLProto_StartOrEndFollow);
}

uint64_t sub_100A08590@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  uint64_t v30 = a2;
  uint64_t v29 = a3;
  uint64_t v4 = sub_1005057FC((uint64_t *)&unk_101674520);
  uint64_t v6 = __chkstk_darwin(v4 - 8, v5);
  uint64_t v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6, v9);
  uint64_t v11 = (char *)&v28 - v10;
  uint64_t v12 = type metadata accessor for UUID();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v15 = __chkstk_darwin(v12, v14);
  uint64_t v17 = (char *)&v28 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15, v18);
  uint64_t v20 = (char *)&v28 - v19;
  uint64_t v31 = a1;
  sub_100522E9C(a1, (uint64_t)v11, (uint64_t *)&unk_101674520);
  uint64_t v21 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
  if (v21(v11, 1, v12) == 1)
  {
    uint64_t v8 = v11;
    uint64_t v22 = v30;
LABEL_5:
    sub_100522F00((uint64_t)v8, (uint64_t *)&unk_101674520);
    sub_1005F7CE8();
    swift_allocError();
    unsigned char *v23 = 0;
    swift_willThrow();
    sub_100522F00(v22, (uint64_t *)&unk_101674520);
    return sub_100522F00(v31, (uint64_t *)&unk_101674520);
  }
  uint64_t v28 = *(void (**)(char *, char *, uint64_t))(v13 + 32);
  v28(v20, v11, v12);
  uint64_t v22 = v30;
  sub_100522E9C(v30, (uint64_t)v8, (uint64_t *)&unk_101674520);
  if (v21(v8, 1, v12) == 1)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v20, v12);
    goto LABEL_5;
  }
  sub_100522F00(v22, (uint64_t *)&unk_101674520);
  sub_100522F00(v31, (uint64_t *)&unk_101674520);
  uint64_t v25 = v28;
  v28(v17, v8, v12);
  uint64_t v26 = v29;
  v25(v29, v20, v12);
  uint64_t v27 = type metadata accessor for CRLStartOrEndFollow();
  return ((uint64_t (*)(char *, char *, uint64_t))v25)(&v26[*(int *)(v27 + 20)], v17, v12);
}

uint64_t sub_100A08880()
{
  uint64_t v0 = sub_1005057FC((uint64_t *)&unk_101674160);
  uint64_t v2 = __chkstk_darwin(v0 - 8, v1);
  uint64_t v46 = (uint64_t)&v38 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2, v4);
  uint64_t v40 = (char *)&v38 - v5;
  uint64_t v6 = type metadata accessor for CRLProto_Data(0);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v9 = __chkstk_darwin(v6, v8);
  uint64_t v42 = (long long *)((char *)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v12 = __chkstk_darwin(v9, v11);
  uint64_t v14 = (char *)&v38 - v13;
  __chkstk_darwin(v12, v15);
  uint64_t v17 = (long long *)((char *)&v38 - v16);
  uint64_t v18 = type metadata accessor for CRLProto_StartOrEndFollow(0);
  __chkstk_darwin(v18, v19);
  uint64_t v21 = (char *)&v38 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  UnknownStorage.init()();
  uint64_t v22 = (uint64_t)&v21[*(int *)(v18 + 20)];
  uint64_t v23 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56);
  v23(v22, 1, 1, v6);
  uint64_t v44 = v18;
  uint64_t v45 = v21;
  uint64_t v24 = (uint64_t)&v21[*(int *)(v18 + 24)];
  v23(v24, 1, 1, v6);
  long long v47 = xmmword_101180360;
  long long *v17 = xmmword_101180360;
  UnknownStorage.init()();
  sub_100522F00(v22, (uint64_t *)&unk_101674160);
  sub_1005CC5B8((uint64_t)v17, v22);
  uint64_t v48 = v23;
  uint64_t v41 = v7 + 56;
  v23(v22, 0, 1, v6);
  uint64_t v25 = (uint64_t)v40;
  uint64_t v39 = UUID.crl_data()();
  uint64_t v27 = v26;
  sub_100522E9C(v22, v25, (uint64_t *)&unk_101674160);
  uint64_t v28 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  uint64_t v43 = v7 + 48;
  if (v28(v25, 1, v6) == 1)
  {
    *(_OWORD *)uint64_t v14 = v47;
    UnknownStorage.init()();
    sub_100522F00(v25, (uint64_t *)&unk_101674160);
  }
  else
  {
    sub_1005CC5B8(v25, (uint64_t)v14);
  }
  sub_100510084(*(void *)v14, *((void *)v14 + 1));
  *(void *)uint64_t v14 = v39;
  *((void *)v14 + 1) = v27;
  sub_100522F00(v22, (uint64_t *)&unk_101674160);
  sub_1005CC5B8((uint64_t)v14, v22);
  uint64_t v29 = v48;
  v48(v22, 0, 1, v6);
  long long *v17 = v47;
  UnknownStorage.init()();
  sub_100522F00(v24, (uint64_t *)&unk_101674160);
  sub_1005CC5B8((uint64_t)v17, v24);
  v29(v24, 0, 1, v6);
  type metadata accessor for CRLStartOrEndFollow();
  uint64_t v30 = UUID.crl_data()();
  uint64_t v32 = v31;
  uint64_t v33 = v46;
  sub_100522E9C(v24, v46, (uint64_t *)&unk_101674160);
  if (v28(v33, 1, v6) == 1)
  {
    uint64_t v34 = v42;
    *uint64_t v42 = v47;
    UnknownStorage.init()();
    sub_100522F00(v33, (uint64_t *)&unk_101674160);
  }
  else
  {
    uint64_t v34 = v42;
    sub_1005CC5B8(v33, (uint64_t)v42);
  }
  sub_100510084(*(void *)v34, *((void *)v34 + 1));
  *(void *)uint64_t v34 = v30;
  *((void *)v34 + 1) = v32;
  sub_100522F00(v24, (uint64_t *)&unk_101674160);
  sub_1005CC5B8((uint64_t)v34, v24);
  v48(v24, 0, 1, v6);
  sub_100A08D94();
  uint64_t v35 = (uint64_t)v45;
  uint64_t v36 = Message.serializedData(partial:)();
  sub_100A08DEC(v35, type metadata accessor for CRLProto_StartOrEndFollow);
  return v36;
}

uint64_t type metadata accessor for CRLStartOrEndFollow()
{
  uint64_t result = qword_10168BA98;
  if (!qword_10168BA98) {
    return swift_getSingletonMetadata();
  }
  return result;
}

unint64_t sub_100A08D94()
{
  unint64_t result = qword_10168BA38;
  if (!qword_10168BA38)
  {
    type metadata accessor for CRLProto_StartOrEndFollow(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168BA38);
  }
  return result;
}

uint64_t sub_100A08DEC(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t *sub_100A08E4C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for UUID();
    uint64_t v8 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v8((uint64_t *)((char *)a1 + *(int *)(a3 + 20)), (uint64_t *)((char *)a2 + *(int *)(a3 + 20)), v7);
  }
  return a1;
}

uint64_t sub_100A08F34(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UUID();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
  ((void (*)(void *__return_ptr, uint64_t, uint64_t))v7)((void *)(v4 - 8), a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);

  return v7(v5, v4);
}

uint64_t sub_100A08FD4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  return a1;
}

uint64_t sub_100A0906C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  return a1;
}

uint64_t sub_100A09104(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  return a1;
}

uint64_t sub_100A0919C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  return a1;
}

uint64_t sub_100A09234(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100A09248);
}

uint64_t sub_100A09248(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UUID();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t sub_100A092B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100A092C8);
}

uint64_t sub_100A092C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UUID();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

uint64_t sub_100A09338()
{
  uint64_t result = type metadata accessor for UUID();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_100A093C4()
{
  v1[7] = v0;
  v1[8] = type metadata accessor for CRLUSDRenderingExtensionConnector.ExtensionProcess.CancellationState(0);
  v1[9] = swift_task_alloc();
  v1[10] = type metadata accessor for MainActor();
  v1[11] = static MainActor.shared.getter();
  uint64_t v3 = dispatch thunk of Actor.unownedExecutor.getter();
  v1[12] = v3;
  v1[13] = v2;
  return _swift_task_switch(sub_100A09490, v3, v2);
}

uint64_t sub_100A09490()
{
  uint64_t v1 = static MainActor.shared.getter();
  v0[14] = v1;
  uint64_t v2 = (void *)swift_task_alloc();
  v0[15] = v2;
  uint64_t v3 = sub_10050BF48(0, &qword_10168BEF0);
  *uint64_t v2 = v0;
  v2[1] = sub_100A0959C;
  uint64_t v4 = v0[7];
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v0 + 5, v1, &protocol witness table for MainActor, 0xD000000000000016, 0x8000000101268D60, sub_100A0ECE4, v4, v3);
}

uint64_t sub_100A0959C()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 128) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 96);
    uint64_t v4 = *(void *)(v2 + 104);
    uint64_t v5 = sub_100A09960;
  }
  else
  {
    swift_release();
    uint64_t v3 = *(void *)(v2 + 96);
    uint64_t v4 = *(void *)(v2 + 104);
    uint64_t v5 = sub_100A096B8;
  }
  return _swift_task_switch(v5, v3, v4);
}

uint64_t sub_100A096B8()
{
  uint64_t v1 = v0[7];
  swift_release();
  uint64_t v2 = (void *)v0[5];
  [v2 resume];
  if (*(unsigned char *)(v1 + 40) == 2)
  {
    uint64_t v3 = *(void *)(v1 + 24);
    uint64_t v4 = *(void *)(v1 + 32);
    uint64_t v5 = v0[9];
    uint64_t v6 = v3
       + OBJC_IVAR____TtCC8Freeform33CRLUSDRenderingExtensionConnectorP33_3F2C14ED993E13602DE61854D66D868F16ExtensionProcess_cancellationState;
    swift_beginAccess();
    sub_100A0ECEC(v6, v5);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload)
    {
      if (EnumCaseMultiPayload != 1)
      {
        uint64_t v17 = swift_retain();
        uint64_t Strong = sub_100A0ED50(v17);
        goto LABEL_13;
      }
      uint64_t v8 = v0[9];
      uint64_t v9 = v8 + *(int *)(sub_1005057FC(&qword_10168BDF0) + 48);
      uint64_t v10 = swift_retain();
      uint64_t Strong = sub_100A0ED50(v10);
      Task.cancel()();
      swift_release();
    }
    else
    {
      sub_100A0F008(v0[9], (uint64_t)(v0 + 6));
      uint64_t Strong = swift_weakLoadStrong();
      swift_retain();
      if (!Strong) {
        uint64_t Strong = sub_100A0ED50(v3);
      }
      uint64_t v15 = v0[9];
      uint64_t v9 = v15 + *(int *)(sub_1005057FC(&qword_10168BDE8) + 48);
      sub_100522F00((uint64_t)(v0 + 6), &qword_10168BEF8);
    }
    uint64_t v16 = type metadata accessor for UUID();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(v9, v16);
LABEL_13:
    sub_100A0D794(v3, v4, 2);
    type metadata accessor for CRLUSDRenderingExtensionConnector.APIEndpointProxy();
    uint64_t v18 = swift_allocObject();
    *(void *)(v18 + 16) = v2;
    *(void *)(v18 + 24) = Strong;
    swift_task_dealloc();
    uint64_t v19 = (uint64_t (*)(uint64_t))v0[1];
    return v19(v18);
  }
  sub_1007CEB50();
  swift_allocError();
  *uint64_t v12 = xmmword_10118C770;
  swift_willThrow();

  swift_task_dealloc();
  uint64_t v13 = (uint64_t (*)(void))v0[1];
  return v13();
}

uint64_t sub_100A09960()
{
  swift_release();
  swift_release();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100A099D8()
{
  int v1 = *(unsigned __int8 *)(v0 + 40);
  if (v1 == 2)
  {
    uint64_t v3 = *(void *)(v0 + 24);
    uint64_t v2 = *(void *)(v0 + 32);
    swift_retain();
    _AppExtensionProcess.invalidate()();
    sub_100A0D794(v3, v2, 2);
    LOBYTE(v1) = *(unsigned char *)(v0 + 40);
  }
  sub_100A0D794(*(void *)(v0 + 24), *(void *)(v0 + 32), v1);

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for CRLUSDRenderingExtensionConnector()
{
  return self;
}

uint64_t sub_100A09A84(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1005057FC(&qword_10168BF28);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  __chkstk_darwin(v4, v7);
  uint64_t v8 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1005057FC(&qword_101672BB0);
  __chkstk_darwin(v9 - 8, v10);
  uint64_t v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v12, 1, 1, v13);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v8, a1, v4);
  type metadata accessor for MainActor();
  swift_retain();
  uint64_t v14 = static MainActor.shared.getter();
  unint64_t v15 = (*(unsigned __int8 *)(v5 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v16 = (char *)swift_allocObject();
  *((void *)v16 + 2) = v14;
  *((void *)v16 + 3) = &protocol witness table for MainActor;
  *((void *)v16 + 4) = a2;
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(&v16[v15], v8, v4);
  sub_1005912D0((uint64_t)v12, (uint64_t)&unk_10168BF38, (uint64_t)v16);
  return swift_release();
}

uint64_t sub_100A09C78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[8] = a4;
  v5[9] = a5;
  uint64_t v6 = sub_1005057FC(&qword_10168BF28);
  v5[10] = v6;
  v5[11] = *(void *)(v6 - 8);
  v5[12] = swift_task_alloc();
  v5[13] = swift_task_alloc();
  type metadata accessor for MainActor();
  v5[14] = static MainActor.shared.getter();
  uint64_t v8 = dispatch thunk of Actor.unownedExecutor.getter();
  v5[15] = v8;
  v5[16] = v7;
  return _swift_task_switch(sub_100A09D80, v8, v7);
}

uint64_t sub_100A09D80()
{
  Class isa = v0[8].super.isa;
  unint64_t v2 = *((void *)isa + 3);
  unint64_t v3 = *((void *)isa + 4);
  switch(*((unsigned char *)isa + 40))
  {
    case 1:
      Class v17 = v0[11].super.isa;
      Class v16 = v0[12].super.isa;
      Class v19 = v0[9].super.isa;
      Class v18 = v0[10].super.isa;
      swift_bridgeObjectRetain();
      swift_release();
      (*((void (**)(Class, Class, Class))v17 + 2))(v16, v19, v18);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v2 = sub_100F64844(0, *(void *)(v2 + 16) + 1, 1, v2);
      }
      unint64_t v21 = *(void *)(v2 + 16);
      unint64_t v20 = *(void *)(v2 + 24);
      if (v21 >= v20 >> 1) {
        unint64_t v2 = sub_100F64844(v20 > 1, v21 + 1, 1, v2);
      }
      Class v23 = v0[11].super.isa;
      Class v22 = v0[12].super.isa;
      Class v24 = v0[10].super.isa;
      *(void *)(v2 + 16) = v21 + 1;
      (*((void (**)(unint64_t, Class, Class))v23 + 4))(v2+ ((*((unsigned __int8 *)v23 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v23 + 80))+ *((void *)v23 + 9) * v21, v22, v24);
      uint64_t v13 = *((void *)isa + 3);
      uint64_t v14 = *((void *)isa + 4);
      *((void *)isa + 3) = v2;
      *((void *)isa + 4) = 0;
      char v15 = *((unsigned char *)isa + 40);
      *((unsigned char *)isa + 40) = 1;
      goto LABEL_21;
    case 2:
      swift_retain();
      swift_release();
      v25.super.Class isa = _AppExtensionProcess.makeXPCConnection()().super.isa;
      if (v26.super.isa)
      {
        v0[2].super.Class isa = v26.super.isa;
        CheckedContinuation.resume(throwing:)();
      }
      else
      {
        Class v30 = v25.super.isa;
        if (qword_10166F270 != -1) {
          swift_once();
        }
        [(objc_class *)v30 setRemoteObjectInterface:qword_10171AA38];
        v0[3].super.Class isa = v30;
        CheckedContinuation.resume(returning:)();
      }
      uint64_t v13 = v2;
      uint64_t v14 = v3;
      char v15 = 2;
      goto LABEL_21;
    case 3:
      uint64_t v27 = (objc_class *)swift_task_alloc();
      v0[17].super.Class isa = v27;
      *(void *)uint64_t v27 = v0;
      *((void *)v27 + 1) = sub_100A0A13C;
      uint64_t v28 = (uint64_t)v0[9].super.isa;
      return sub_100A0A584(v28);
    default:
      Class v4 = v0[13].super.isa;
      Class v5 = v0[10].super.isa;
      Class v6 = v0[11].super.isa;
      Class v7 = v0[9].super.isa;
      swift_retain();
      swift_bridgeObjectRetain();
      swift_release();
      (*((void (**)(Class, Class, Class))v6 + 2))(v4, v7, v5);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v3 = sub_100F64844(0, *(void *)(v3 + 16) + 1, 1, v3);
      }
      unint64_t v9 = *(void *)(v3 + 16);
      unint64_t v8 = *(void *)(v3 + 24);
      if (v9 >= v8 >> 1) {
        unint64_t v3 = sub_100F64844(v8 > 1, v9 + 1, 1, v3);
      }
      Class v10 = v0[13].super.isa;
      Class v11 = v0[10].super.isa;
      Class v12 = v0[11].super.isa;
      *(void *)(v3 + 16) = v9 + 1;
      (*((void (**)(unint64_t, Class, Class))v12 + 4))(v3+ ((*((unsigned __int8 *)v12 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v12 + 80))+ *((void *)v12 + 9) * v9, v10, v11);
      uint64_t v13 = *((void *)isa + 3);
      uint64_t v14 = *((void *)isa + 4);
      *((void *)isa + 3) = v2;
      *((void *)isa + 4) = v3;
      char v15 = *((unsigned char *)isa + 40);
      *((unsigned char *)isa + 40) = 0;
LABEL_21:
      sub_100A0D794(v13, v14, v15);
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v31 = (uint64_t (*)(void))v0[1].super.isa;
      return v31();
  }
}

uint64_t sub_100A0A13C()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 144) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 128);
  uint64_t v4 = *(void *)(v2 + 120);
  if (v0) {
    Class v5 = sub_100A0A2E8;
  }
  else {
    Class v5 = sub_100A0A278;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_100A0A278()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  int v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100A0A2E8()
{
  uint64_t v1 = v0[8];
  swift_release();
  uint64_t v3 = *(void *)(v1 + 24);
  uint64_t v2 = *(void *)(v1 + 32);
  uint64_t v4 = *(unsigned __int8 *)(v1 + 40);
  *(void *)(v1 + 24) = 0;
  *(void *)(v1 + 32) = 0;
  *(unsigned char *)(v1 + 40) = 3;
  sub_100A0D720(v3, v2, v4);
  sub_100A0D794(v3, v2, v4);
  switch(v4)
  {
    case 1:
      uint64_t v9 = *(void *)(v3 + 16);
      if (v9)
      {
        uint64_t v10 = v0[11];
        unint64_t v11 = v3 + ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80));
        uint64_t v12 = *(void *)(v10 + 72);
        swift_bridgeObjectRetain_n();
        do
        {
          v0[5] = v0[18];
          swift_errorRetain();
          CheckedContinuation.resume(throwing:)();
          v11 += v12;
          --v9;
        }
        while (v9);
        sub_100A0D794(v3, v2, 1);
      }
      else
      {
        swift_bridgeObjectRetain();
      }
      swift_errorRelease();
      sub_100A0D794(v3, v2, 1);
      uint64_t v14 = v3;
      uint64_t v15 = v2;
      char v16 = 1;
      goto LABEL_16;
    case 2:
      uint64_t v13 = v0[18];
      swift_retain();
      _AppExtensionProcess.invalidate()();
      v0[4] = v13;
      CheckedContinuation.resume(throwing:)();
      sub_100A0D794(v3, v2, 2);
      uint64_t v14 = v3;
      uint64_t v15 = v2;
      char v16 = 2;
LABEL_16:
      sub_100A0D794(v14, v15, v16);
      break;
    case 3:
      v0[7] = v0[18];
      CheckedContinuation.resume(throwing:)();
      break;
    default:
      uint64_t v5 = *(void *)(v2 + 16);
      if (v5)
      {
        uint64_t v6 = v0[11];
        unint64_t v7 = v2 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
        uint64_t v8 = *(void *)(v6 + 72);
        swift_bridgeObjectRetain_n();
        do
        {
          v0[6] = v0[18];
          swift_errorRetain();
          CheckedContinuation.resume(throwing:)();
          v7 += v8;
          --v5;
        }
        while (v5);
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRetain();
      }
      swift_errorRelease();
      sub_100A0D794(v3, v2, 0);
      swift_bridgeObjectRelease();
      break;
  }
  swift_task_dealloc();
  swift_task_dealloc();
  Class v17 = (uint64_t (*)(void))v0[1];
  return v17();
}

uint64_t sub_100A0A584(uint64_t a1)
{
  v2[19] = a1;
  v2[20] = v1;
  uint64_t v3 = sub_1005057FC(&qword_10168BF28);
  v2[21] = v3;
  v2[22] = *(void *)(v3 - 8);
  v2[23] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for _AppExtensionProcess();
  v2[24] = v4;
  v2[25] = *(void *)(v4 - 8);
  v2[26] = swift_task_alloc();
  v2[27] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for _AppExtensionProcess.Configuration();
  v2[28] = v5;
  v2[29] = *(void *)(v5 - 8);
  v2[30] = swift_task_alloc();
  v2[31] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for _AppExtensionIdentity();
  v2[32] = v6;
  v2[33] = *(void *)(v6 - 8);
  v2[34] = swift_task_alloc();
  v2[35] = swift_task_alloc();
  v2[36] = type metadata accessor for MainActor();
  v2[37] = static MainActor.shared.getter();
  uint64_t v7 = dispatch thunk of Actor.unownedExecutor.getter();
  v2[38] = v7;
  v2[39] = v8;
  return _swift_task_switch(sub_100A0A7F8, v7, v8);
}

uint64_t sub_100A0A7F8()
{
  uint64_t v1 = *(void *)(v0 + 160);
  if (*(unsigned char *)(v1 + 40) == 3 && *(_OWORD *)(v1 + 24) == 0)
  {
    uint64_t v5 = *(void *)(v0 + 168);
    uint64_t v6 = *(void *)(v0 + 176);
    uint64_t v7 = *(void *)(v0 + 152);
    uint64_t v8 = sub_1007C26A8();
    *(void *)(v0 + 320) = v8;
    sub_1005057FC(&qword_10168BF48);
    *(void *)(v0 + 328) = *(void *)(v6 + 72);
    int v9 = *(_DWORD *)(v6 + 80);
    *(_DWORD *)(v0 + 424) = v9;
    unint64_t v10 = (v9 + 32) & ~(unint64_t)v9;
    uint64_t v11 = swift_allocObject();
    *(_OWORD *)(v11 + 16) = xmmword_10117E810;
    uint64_t v12 = *(void (**)(unint64_t, uint64_t, uint64_t))(v6 + 16);
    *(void *)(v0 + 336) = v12;
    *(void *)(v0 + 344) = (v6 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    v12(v11 + v10, v7, v5);
    uint64_t v13 = *(void *)(v1 + 24);
    uint64_t v14 = *(void *)(v1 + 32);
    *(void *)(v1 + 24) = v8;
    *(void *)(v1 + 32) = v11;
    LOBYTE(v11) = *(unsigned char *)(v1 + 40);
    *(unsigned char *)(v1 + 40) = 0;
    swift_retain();
    sub_100A0D794(v13, v14, v11);
    uint64_t v15 = (void *)swift_task_alloc();
    *(void *)(v0 + 352) = v15;
    uint64_t v16 = sub_1005057FC(&qword_101672BD0);
    *uint64_t v15 = v0;
    v15[1] = sub_100A0AAC4;
    uint64_t v17 = *(void *)(v0 + 280);
    uint64_t v18 = *(void *)(v0 + 256);
    return Task.value.getter(v17, v8, v18, v16, &protocol self-conformance witness table for Error);
  }
  else
  {
    swift_release();
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"doConnect(awaitingTask:)", 24, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/USD Rendering/App Extension/CRLUSDRenderingExtensionConnector.swift", 137, 2, 243, (uint64_t)"Can only connect when in .disconnected state.", 45, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_100586FD4((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Can only connect when in .disconnected state.");
    sub_1005871AC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"doConnect(awaitingTask:)", 24, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/USD Rendering/App Extension/CRLUSDRenderingExtensionConnector.swift", 137, 2, 243);
    SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v2, v3);
    return _assertionFailure(_:_:file:line:flags:)();
  }
}

uint64_t sub_100A0AAC4()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 360) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 312);
  uint64_t v4 = *(void *)(v2 + 304);
  if (v0) {
    uint64_t v5 = sub_100A0C110;
  }
  else {
    uint64_t v5 = sub_100A0AC2C;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_100A0AC2C()
{
  uint64_t v1 = v0[20];
  uint64_t v2 = *(void *)(v1 + 32);
  char v3 = *(unsigned char *)(v1 + 40);
  if (v3)
  {
    uint64_t v4 = v0[35];
    uint64_t v5 = v0[32];
    uint64_t v6 = v0[33];
    uint64_t v7 = *(void *)(v1 + 24);
    sub_100A0D720(v7, v2, v3);
    swift_release();
    swift_release();
    sub_100A0D794(v7, v2, v3);
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v8 = (uint64_t (*)(void))v0[1];
    return v8();
  }
  else
  {
    uint64_t v11 = v0[34];
    uint64_t v10 = v0[35];
    uint64_t v12 = v0[32];
    uint64_t v13 = v0[31];
    uint64_t v14 = v0[29];
    uint64_t v22 = v0[28];
    uint64_t v23 = v0[30];
    uint64_t v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0[33] + 16);
    swift_bridgeObjectRetain();
    v15(v11, v10, v12);
    swift_allocObject();
    swift_weakInit();
    _AppExtensionProcess.Configuration.init(appExtension:onInterruption:)();
    uint64_t v16 = *(void *)(v1 + 24);
    uint64_t v17 = *(void *)(v1 + 32);
    *(void *)(v1 + 24) = v2;
    *(void *)(v1 + 32) = 0;
    char v18 = *(unsigned char *)(v1 + 40);
    *(unsigned char *)(v1 + 40) = 1;
    sub_100A0D794(v16, v17, v18);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 16))(v23, v13, v22);
    uint64_t v19 = (void *)swift_task_alloc();
    v0[46] = v19;
    *uint64_t v19 = v0;
    v19[1] = sub_100A0AED0;
    uint64_t v20 = v0[30];
    uint64_t v21 = v0[27];
    return _AppExtensionProcess.init(configuration:)(v21, v20);
  }
}

uint64_t sub_100A0AED0()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 376) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 312);
  uint64_t v4 = *(void *)(v2 + 304);
  if (v0) {
    uint64_t v5 = sub_100A0C208;
  }
  else {
    uint64_t v5 = sub_100A0B038;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_100A0B038()
{
  v1.super.Class isa = _AppExtensionProcess.makeXPCConnection()().super.isa;
  v0[48].super.Class isa = v1.super.isa;
  if (v2)
  {
    Class isa = v0[33].super.isa;
    Class v18 = v0[32].super.isa;
    Class v19 = v0[35].super.isa;
    Class v4 = v0[31].super.isa;
    Class v6 = v0[28].super.isa;
    Class v5 = v0[29].super.isa;
    Class v7 = v0[27].super.isa;
    Class v9 = v0[24].super.isa;
    Class v8 = v0[25].super.isa;
    swift_release();
    swift_release();
    (*((void (**)(Class, Class))v8 + 1))(v7, v9);
    (*((void (**)(Class, Class))v5 + 1))(v4, v6);
    (*((void (**)(Class, Class))isa + 1))(v19, v18);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v10 = (uint64_t (*)(void))v0[1].super.isa;
    return v10();
  }
  else
  {
    Class v12 = v1.super.isa;
    if (qword_10166F270 != -1) {
      swift_once();
    }
    [(objc_class *)v12 setRemoteObjectInterface:qword_10171AA38];
    [(objc_class *)v12 resume];
    type metadata accessor for AnyCancellable();
    swift_allocObject();
    uint64_t v13 = v12;
    uint64_t v14 = AnyCancellable.init(_:)();
    type metadata accessor for CRLUSDRenderingExtensionConnector.APIEndpointProxy();
    uint64_t inited = swift_initStackObject();
    v0[49].super.Class isa = (Class)inited;
    *(void *)(inited + 16) = v13;
    *(void *)(inited + 24) = v14;
    v0[50].super.Class isa = (Class)static MainActor.shared.getter();
    uint64_t v16 = dword_10167EA70;
    uint64_t v17 = (objc_class *)swift_task_alloc();
    v0[51].super.Class isa = v17;
    *(void *)uint64_t v17 = v0;
    *((void *)v17 + 1) = sub_100A0B344;
    return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_10167EA70 + v16))(0xD000000000000017, 0x8000000101269120, (uint64_t)sub_100A0D9B0, 0);
  }
}

uint64_t sub_100A0B344(int a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 416) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = dispatch thunk of Actor.unownedExecutor.getter();
    Class v7 = sub_100A0B4F0;
  }
  else
  {
    *(_DWORD *)(v4 + 428) = a1;
    uint64_t v5 = dispatch thunk of Actor.unownedExecutor.getter();
    Class v7 = sub_100A0B710;
  }
  return _swift_task_switch(v7, v5, v6);
}

uint64_t sub_100A0B4F0()
{
  swift_release();
  uint64_t v1 = *(void *)(v0 + 304);
  uint64_t v2 = *(void *)(v0 + 312);
  return _swift_task_switch(sub_100A0B580, v1, v2);
}

uint64_t sub_100A0B580()
{
  uint64_t v2 = (void *)v0[48];
  uint64_t v1 = v0[49];
  uint64_t v3 = v0[33];
  uint64_t v13 = v0[32];
  uint64_t v14 = v0[35];
  uint64_t v4 = v0[29];
  uint64_t v11 = v0[28];
  uint64_t v12 = v0[31];
  uint64_t v5 = v0[27];
  uint64_t v7 = v0[24];
  uint64_t v6 = v0[25];
  swift_release();
  swift_setDeallocating();
  Class v8 = *(void **)(v1 + 16);
  [v8 invalidate];

  swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v12, v11);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v14, v13);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v9 = (uint64_t (*)(void))v0[1];
  return v9();
}

uint64_t sub_100A0B710()
{
  swift_release();
  uint64_t v1 = *(void *)(v0 + 304);
  uint64_t v2 = *(void *)(v0 + 312);
  return _swift_task_switch(sub_100A0B7A0, v1, v2);
}

uint64_t sub_100A0B7A0()
{
  uint64_t v1 = *(unsigned int *)(v0 + 428);
  swift_release();
  id v2 = [self targetWithPid:v1];
  NSString v3 = String._bridgeToObjectiveC()();
  NSString v4 = String._bridgeToObjectiveC()();
  id v5 = [self attributeWithDomain:v3 name:v4];

  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_10117E810;
  *(void *)(v6 + 56) = &type metadata for Int32;
  *(void *)(v6 + 64) = &protocol witness table for Int32;
  *(_DWORD *)(v6 + 32) = v1;
  String.init(format:_:)();
  sub_1005057FC((uint64_t *)&unk_101676C10);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_101177E70;
  *(void *)(v7 + 32) = v5;
  specialized Array._endMutation()();
  id v8 = objc_allocWithZone((Class)RBSAssertion);
  id v9 = v2;
  id v82 = v5;
  NSString v10 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  sub_10050BF48(0, (unint64_t *)&unk_10168BF50);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v12 = [v8 initWithExplanation:v10 target:v9 attributes:isa];

  uint64_t v13 = swift_allocObject();
  swift_weakInit();
  *(void *)(v0 + 48) = sub_100A110CC;
  *(void *)(v0 + 56) = v13;
  *(void *)(v0 + 16) = _NSConcreteStackBlock;
  *(void *)(v0 + 24) = *(void *)"";
  *(void *)(v0 + 32) = sub_100A0CA84;
  *(void *)(v0 + 40) = &unk_10151E278;
  uint64_t v14 = _Block_copy((const void *)(v0 + 16));
  swift_release();
  [v12 setInvalidationHandler:v14];
  _Block_release(v14);
  *(void *)(v0 + 128) = 0;
  unsigned int v15 = [v12 acquireWithError:v0 + 128];
  uint64_t v16 = *(void **)(v0 + 128);
  char v83 = v9;
  if (v15)
  {
    uint64_t v17 = *(void *)(v0 + 160);
    uint64_t v78 = *(void *)(v17 + 24);
    uint64_t v80 = *(void *)(v17 + 32);
    int v18 = *(unsigned __int8 *)(v17 + 40);
    if (v18 == 1)
    {
      uint64_t v19 = *(void *)(v0 + 208);
      uint64_t v20 = *(void *)(v0 + 192);
      uint64_t v21 = *(void *)(v0 + 200);
      (*(void (**)(uint64_t, void, uint64_t))(v21 + 16))(v19, *(void *)(v0 + 216), v20);
      type metadata accessor for CRLUSDRenderingExtensionConnector.ExtensionProcess(0);
      uint64_t v22 = swift_allocObject();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v21 + 32))(v22+ OBJC_IVAR____TtCC8Freeform33CRLUSDRenderingExtensionConnectorP33_3F2C14ED993E13602DE61854D66D868F16ExtensionProcess_process, v19, v20);
      *(void *)(v22
                + OBJC_IVAR____TtCC8Freeform33CRLUSDRenderingExtensionConnectorP33_3F2C14ED993E13602DE61854D66D868F16ExtensionProcess_foregroundAssertion) = v12;
      type metadata accessor for CRLUSDRenderingExtensionConnector.ExtensionProcess.CancellationState(0);
      swift_storeEnumTagMultiPayload();
      uint64_t v23 = *(void *)(v17 + 24);
      uint64_t v24 = *(void *)(v17 + 32);
      *(void *)(v17 + 24) = v22;
      *(void *)(v17 + 32) = 0;
      LOBYTE(v22) = *(unsigned char *)(v17 + 40);
      *(unsigned char *)(v17 + 40) = 2;
      id v25 = v16;
      sub_100A0D720(v78, v80, 1);
      id v75 = v12;
      sub_100A0D794(v23, v24, v22);
      uint64_t v26 = v78;
      uint64_t v88 = *(void *)(v78 + 16);
      if (v88)
      {
        uint64_t v27 = (NSXPCConnection *)(v0 + 136);
        unint64_t v28 = v78 + ((*(unsigned __int8 *)(v0 + 424) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 424));
        uint64_t v29 = *(void *)(v0 + 168);
        Class v30 = (void (**)(void, void))(*(void *)(v0 + 176) + 8);
        uint64_t v31 = *(void (**)(uint64_t, unint64_t, uint64_t))(v0 + 336);
        uint64_t v32 = *(void *)(v0 + 184);
        swift_bridgeObjectRetain();
        unint64_t v84 = v28;
        v31(v32, v28, v29);
        v33.super.Class isa = _AppExtensionProcess.makeXPCConnection()().super.isa;
        if (v34.super.isa)
        {
          v27->super.Class isa = v34.super.isa;
          CheckedContinuation.resume(throwing:)();
          uint64_t v35 = (Class *)(v0 + 144);
        }
        else
        {
          Class v53 = v33.super.isa;
          [(objc_class *)v33.super.isa setRemoteObjectInterface:qword_10171AA38];
          uint64_t v35 = (Class *)(v0 + 144);
          *(void *)(v0 + 144) = v53;
          CheckedContinuation.resume(returning:)();
        }
        uint64_t v54 = *v30;
        (*v30)(*(void *)(v0 + 184), *(void *)(v0 + 168));
        if (v88 != 1)
        {
          for (uint64_t i = 1; i != v88; ++i)
          {
            (*(void (**)(void, unint64_t, void))(v0 + 336))(*(void *)(v0 + 184), v84 + *(void *)(v0 + 328) * i, *(void *)(v0 + 168));
            v65.super.Class isa = _AppExtensionProcess.makeXPCConnection()().super.isa;
            if (v66.super.isa)
            {
              v27->super.Class isa = v66.super.isa;
              CheckedContinuation.resume(throwing:)();
            }
            else
            {
              Class v67 = v65.super.isa;
              [(objc_class *)v65.super.isa setRemoteObjectInterface:qword_10171AA38];
              *uint64_t v35 = v67;
              CheckedContinuation.resume(returning:)();
            }
            v54(*(void *)(v0 + 184), *(void *)(v0 + 168));
          }
        }
        sub_100A0D794(v78, v80, 1);
        uint64_t v26 = v78;
        uint64_t v52 = v80;
      }
      else
      {
        uint64_t v52 = v80;
      }
      sub_100A0D794(v26, v52, 1);
      swift_release();
      unint64_t v55 = *(void **)(v0 + 384);
      uint64_t v56 = *(void *)(v0 + 264);
      uint64_t v87 = *(void *)(v0 + 256);
      uint64_t v91 = *(void *)(v0 + 280);
      uint64_t v57 = *(void *)(v0 + 248);
      uint64_t v59 = *(void *)(v0 + 224);
      uint64_t v58 = *(void *)(v0 + 232);
      uint64_t v60 = *(void *)(v0 + 216);
      uint64_t v62 = *(void *)(v0 + 192);
      uint64_t v61 = *(void *)(v0 + 200);

      swift_release();
      (*(void (**)(uint64_t, uint64_t))(v61 + 8))(v60, v62);
      (*(void (**)(uint64_t, uint64_t))(v58 + 8))(v57, v59);
      (*(void (**)(uint64_t, uint64_t))(v56 + 8))(v91, v87);
    }
    else
    {
      uint64_t v46 = *(void *)(v0 + 392);
      uint64_t v68 = *(void **)(v0 + 384);
      uint64_t v47 = *(void *)(v0 + 264);
      uint64_t v86 = *(void *)(v0 + 256);
      uint64_t v90 = *(void *)(v0 + 280);
      uint64_t v48 = *(void *)(v0 + 232);
      uint64_t v74 = *(void *)(v0 + 224);
      uint64_t v77 = *(void *)(v0 + 248);
      uint64_t v49 = *(void *)(v0 + 200);
      uint64_t v71 = *(void *)(v0 + 192);
      uint64_t v73 = *(void *)(v0 + 216);
      swift_setDeallocating();
      uint64_t v50 = *(void **)(v46 + 16);
      id v51 = v16;
      sub_100A0D720(v78, v80, v18);
      [v50 invalidate];

      swift_release();
      swift_release();
      sub_100A0D794(v78, v80, v18);
      (*(void (**)(uint64_t, uint64_t))(v49 + 8))(v73, v71);
      (*(void (**)(uint64_t, uint64_t))(v48 + 8))(v77, v74);
      (*(void (**)(uint64_t, uint64_t))(v47 + 8))(v90, v86);
    }
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v45 = *(uint64_t (**)(void))(v0 + 8);
  }
  else
  {
    uint64_t v36 = *(void *)(v0 + 392);
    uint64_t v81 = *(void *)(v0 + 264);
    uint64_t v85 = *(void *)(v0 + 256);
    uint64_t v89 = *(void *)(v0 + 280);
    uint64_t v79 = *(void *)(v0 + 248);
    uint64_t v37 = *(void *)(v0 + 232);
    uint64_t v76 = *(void *)(v0 + 224);
    double v70 = *(void **)(v0 + 384);
    uint64_t v72 = *(void *)(v0 + 216);
    uint64_t v38 = *(void *)(v0 + 200);
    uint64_t v69 = *(void *)(v0 + 192);
    id v39 = v16;
    _convertNSErrorToError(_:)();

    swift_willThrow();
    [v12 invalidate];
    swift_getErrorValue();
    uint64_t v40 = Error.localizedDescription.getter();
    uint64_t v42 = v41;
    sub_1007CEB50();
    swift_allocError();
    *uint64_t v43 = v40;
    v43[1] = v42;
    swift_willThrow();
    swift_setDeallocating();
    uint64_t v44 = *(void **)(v36 + 16);
    [v44 invalidate];

    swift_release();
    swift_errorRelease();

    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v72, v69);
    (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v79, v76);
    (*(void (**)(uint64_t, uint64_t))(v81 + 8))(v89, v85);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v45 = *(uint64_t (**)(void))(v0 + 8);
  }
  return v45();
}

uint64_t sub_100A0C110()
{
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100A0C208()
{
  uint64_t v1 = v0[35];
  uint64_t v2 = v0[32];
  uint64_t v3 = v0[33];
  uint64_t v4 = v0[31];
  uint64_t v5 = v0[28];
  uint64_t v6 = v0[29];
  swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

uint64_t sub_100A0C340()
{
  uint64_t v1 = v0
     + OBJC_IVAR____TtCC8Freeform33CRLUSDRenderingExtensionConnectorP33_3F2C14ED993E13602DE61854D66D868F16ExtensionProcess_process;
  uint64_t v2 = type metadata accessor for _AppExtensionProcess();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtCC8Freeform33CRLUSDRenderingExtensionConnectorP33_3F2C14ED993E13602DE61854D66D868F16ExtensionProcess_foregroundAssertion));
  sub_100A0D348(v0+ OBJC_IVAR____TtCC8Freeform33CRLUSDRenderingExtensionConnectorP33_3F2C14ED993E13602DE61854D66D868F16ExtensionProcess_cancellationState);

  return swift_deallocClassInstance();
}

uint64_t sub_100A0C400()
{
  return type metadata accessor for CRLUSDRenderingExtensionConnector.ExtensionProcess(0);
}

uint64_t type metadata accessor for CRLUSDRenderingExtensionConnector.ExtensionProcess(uint64_t a1)
{
  return sub_100512D5C(a1, qword_10168BBB8);
}

uint64_t sub_100A0C428()
{
  uint64_t result = type metadata accessor for _AppExtensionProcess();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for CRLUSDRenderingExtensionConnector.ExtensionProcess.CancellationState(319);
    if (v2 <= 0x3F)
    {
      uint64_t result = swift_updateClassMetadata2();
      if (!result) {
        return 0;
      }
    }
  }
  return result;
}

uint64_t type metadata accessor for CRLUSDRenderingExtensionConnector.ExtensionProcess.CancellationState(uint64_t a1)
{
  return sub_100512D5C(a1, qword_10168BE68);
}

uint64_t sub_100A0C520()
{
  uint64_t v0 = sub_1005057FC(&qword_101672BB0);
  __chkstk_darwin(v0 - 8, v1);
  uint64_t v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v5 = result;
    uint64_t v6 = type metadata accessor for TaskPriority();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v3, 1, 1, v6);
    type metadata accessor for MainActor();
    swift_retain();
    uint64_t v7 = static MainActor.shared.getter();
    id v8 = (void *)swift_allocObject();
    v8[2] = v7;
    v8[3] = &protocol witness table for MainActor;
    v8[4] = v5;
    sub_1005912D0((uint64_t)v3, (uint64_t)&unk_10168BF80, (uint64_t)v8);
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_100A0C66C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 16) = a4;
  type metadata accessor for MainActor();
  *(void *)(v4 + 24) = static MainActor.shared.getter();
  uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_100A0C704, v6, v5);
}

uint64_t sub_100A0C704()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_release();
  if (*(unsigned char *)(v1 + 40) == 2)
  {
    uint64_t v2 = *(void *)(v0 + 16);
    uint64_t v4 = *(void *)(v2 + 24);
    uint64_t v3 = *(void *)(v2 + 32);
    *(void *)(v2 + 24) = 0;
    *(void *)(v2 + 32) = 0;
    *(unsigned char *)(v1 + 40) = 3;
    uint64_t v5 = swift_retain();
    sub_100A0D794(v5, v3, 2);
    [*(id *)(v4+ OBJC_IVAR____TtCC8Freeform33CRLUSDRenderingExtensionConnectorP33_3F2C14ED993E13602DE61854D66D868F16ExtensionProcess_foregroundAssertion) invalidate];
    _AppExtensionProcess.invalidate()();
    sub_100A0D794(v4, v3, 2);
  }
  uint64_t v6 = *(uint64_t (**)(void))(v0 + 8);
  return v6();
}

uint64_t sub_100A0C7D8(uint64_t a1, unint64_t a2)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_100A0C84C(a1, a2);
    return swift_release();
  }
  return result;
}

void sub_100A0C84C(uint64_t a1, unint64_t a2)
{
  if (*(unsigned char *)(v2 + 40) == 2)
  {
    uint64_t v4 = *(void *)(v2 + 24);
    uint64_t v5 = *(void *)(v2 + 32);
    sub_10050BF48(0, (unint64_t *)&qword_101672E50);
    uint64_t v6 = *(void **)(v4
                  + OBJC_IVAR____TtCC8Freeform33CRLUSDRenderingExtensionConnectorP33_3F2C14ED993E13602DE61854D66D868F16ExtensionProcess_foregroundAssertion);
    sub_100A0D720(v4, v5, 2);
    id v7 = v6;
    char v8 = static NSObject.== infix(_:_:)();

    if (v8)
    {
      if (qword_10166FB00 != -1) {
        swift_once();
      }
      swift_beginAccess();
      uint64_t v9 = (void *)static OS_os_log.crlThreeDimensionalObjects;
      sub_1005057FC((uint64_t *)&unk_101672B40);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_10117E810;
      if (a2)
      {
        swift_getErrorValue();
        id v11 = v9;
        uint64_t v12 = Error.localizedDescription.getter();
        a2 = v13;
      }
      else
      {
        id v14 = v9;
        uint64_t v12 = 0;
      }
      *(void *)(inited + 56) = &type metadata for String;
      *(void *)(inited + 64) = sub_100528BE4();
      uint64_t v15 = 0x6E776F6E6B6E7528;
      if (a2) {
        uint64_t v15 = v12;
      }
      unint64_t v16 = 0xE900000000000029;
      if (a2) {
        unint64_t v16 = a2;
      }
      *(void *)(inited + 32) = v15;
      *(void *)(inited + 40) = v16;
      uint64_t v17 = static os_log_type_t.error.getter();
      sub_100BAC898((uint64_t)v9, (uint64_t)&_mh_execute_header, v17, (uint64_t)"System invalidated USD renderer runtime assertion: %{public}@", 61, 2, inited);
      swift_setDeallocating();
      sub_1005057FC(&qword_101672B50);
      swift_arrayDestroy();

      sub_100A0D794(v4, v5, 2);
    }
    else
    {
      sub_100A0D794(v4, v5, 2);
    }
  }
}

void sub_100A0CA84(uint64_t a1, void *a2, void *a3)
{
  uint64_t v5 = *(void (**)(id, void *))(a1 + 32);
  swift_retain();
  id v7 = a2;
  id v6 = a3;
  v5(v7, a3);
  swift_release();
}

uint64_t sub_100A0CCB8()
{
  return type metadata accessor for CRLUSDRenderingExtensionConnector.ViewControllerDelegate(0);
}

uint64_t type metadata accessor for CRLUSDRenderingExtensionConnector.ViewControllerDelegate(uint64_t a1)
{
  return sub_100512D5C(a1, (uint64_t *)&unk_10168BD00);
}

void sub_100A0CCE0()
{
  sub_100A0CD70();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_100A0CD70()
{
  if (!qword_10168BD10)
  {
    sub_100522D34(&qword_10167F0F0);
    unint64_t v0 = type metadata accessor for Optional();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_10168BD10);
    }
  }
}

uint64_t sub_100A0CDCC()
{
  uint64_t v1 = *(void **)(v0 + 16);
  [v1 invalidate];

  swift_release();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for CRLUSDRenderingExtensionConnector.APIEndpointProxy()
{
  return self;
}

uint64_t *sub_100A0CE48(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      *a1 = *a2;
      swift_retain();
      uint64_t v13 = *(int *)(sub_1005057FC(&qword_10168BDF0) + 48);
      id v14 = (char *)a1 + v13;
      uint64_t v15 = (char *)a2 + v13;
      uint64_t v16 = type metadata accessor for UUID();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
    else
    {
      swift_weakCopyInit();
      uint64_t v8 = *(int *)(sub_1005057FC(&qword_10168BDE8) + 48);
      uint64_t v9 = (char *)a1 + v8;
      NSString v10 = (char *)a2 + v8;
      uint64_t v11 = type metadata accessor for UUID();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_100A0CFE0(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result == 1)
  {
    swift_release();
    uint64_t v3 = &qword_10168BDF0;
  }
  else
  {
    if (result) {
      return result;
    }
    swift_weakDestroy();
    uint64_t v3 = &qword_10168BDE8;
  }
  uint64_t v4 = a1 + *(int *)(sub_1005057FC(v3) + 48);
  uint64_t v5 = type metadata accessor for UUID();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);

  return v6(v4, v5);
}

void *sub_100A0D090(void *a1, void *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    *a1 = *a2;
    swift_retain();
    uint64_t v11 = *(int *)(sub_1005057FC(&qword_10168BDF0) + 48);
    uint64_t v12 = (char *)a1 + v11;
    uint64_t v13 = (char *)a2 + v11;
    uint64_t v14 = type metadata accessor for UUID();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
    swift_storeEnumTagMultiPayload();
  }
  else if (EnumCaseMultiPayload)
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    swift_weakCopyInit();
    uint64_t v7 = *(int *)(sub_1005057FC(&qword_10168BDE8) + 48);
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = type metadata accessor for UUID();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *sub_100A0D1E4(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_100A0D348((uint64_t)a1);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      *a1 = *a2;
      swift_retain();
      uint64_t v11 = *(int *)(sub_1005057FC(&qword_10168BDF0) + 48);
      uint64_t v12 = (char *)a1 + v11;
      uint64_t v13 = (char *)a2 + v11;
      uint64_t v14 = type metadata accessor for UUID();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
    else
    {
      swift_weakCopyInit();
      uint64_t v7 = *(int *)(sub_1005057FC(&qword_10168BDE8) + 48);
      uint64_t v8 = (char *)a1 + v7;
      uint64_t v9 = (char *)a2 + v7;
      uint64_t v10 = type metadata accessor for UUID();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_100A0D348(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for CRLUSDRenderingExtensionConnector.ExtensionProcess.CancellationState(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void *sub_100A0D3A4(void *a1, void *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    *a1 = *a2;
    uint64_t v11 = *(int *)(sub_1005057FC(&qword_10168BDF0) + 48);
    uint64_t v12 = (char *)a1 + v11;
    uint64_t v13 = (char *)a2 + v11;
    uint64_t v14 = type metadata accessor for UUID();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
    swift_storeEnumTagMultiPayload();
  }
  else if (EnumCaseMultiPayload)
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    swift_weakTakeInit();
    uint64_t v7 = *(int *)(sub_1005057FC(&qword_10168BDE8) + 48);
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = type metadata accessor for UUID();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *sub_100A0D4F4(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_100A0D348((uint64_t)a1);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      *a1 = *a2;
      uint64_t v11 = *(int *)(sub_1005057FC(&qword_10168BDF0) + 48);
      uint64_t v12 = (char *)a1 + v11;
      uint64_t v13 = (char *)a2 + v11;
      uint64_t v14 = type metadata accessor for UUID();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
    else
    {
      swift_weakTakeInit();
      uint64_t v7 = *(int *)(sub_1005057FC(&qword_10168BDE8) + 48);
      uint64_t v8 = (char *)a1 + v7;
      uint64_t v9 = (char *)a2 + v7;
      uint64_t v10 = type metadata accessor for UUID();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_100A0D654()
{
  uint64_t result = type metadata accessor for UUID();
  if (v1 <= 0x3F)
  {
    swift_getTupleTypeLayout2();
    uint64_t v4 = &v3;
    swift_getTupleTypeLayout2();
    uint64_t v5 = &v2;
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t sub_100A0D720(uint64_t a1, uint64_t a2, char a3)
{
  if (a3 == 2)
  {
    return swift_retain();
  }
  else
  {
    if (a3 != 1)
    {
      if (a3) {
        return result;
      }
      swift_retain();
    }
    return swift_bridgeObjectRetain();
  }
}

uint64_t destroy for CRLUSDRenderingExtensionConnector.State(uint64_t a1)
{
  return sub_100A0D794(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
}

uint64_t sub_100A0D794(uint64_t a1, uint64_t a2, char a3)
{
  if (a3 == 2)
  {
    return swift_release();
  }
  else
  {
    if (a3 != 1)
    {
      if (a3) {
        return result;
      }
      swift_release();
    }
    return swift_bridgeObjectRelease();
  }
}

uint64_t _s8Freeform33CRLUSDRenderingExtensionConnectorC5StateOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_100A0D720(*(void *)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for CRLUSDRenderingExtensionConnector.State(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_100A0D720(*(void *)a2, v4, v5);
  uint64_t v6 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  char v8 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v5;
  sub_100A0D794(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for CRLUSDRenderingExtensionConnector.State(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  char v6 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v3;
  sub_100A0D794(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for CRLUSDRenderingExtensionConnector.State(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFD && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 253);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 3) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for CRLUSDRenderingExtensionConnector.State(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)uint64_t result = a2 - 253;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_100A0D970(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 16) <= 2u) {
    return *(unsigned __int8 *)(a1 + 16);
  }
  else {
    return (*(_DWORD *)a1 + 3);
  }
}

uint64_t sub_100A0D988(uint64_t result, unsigned int a2)
{
  if (a2 >= 3)
  {
    *(void *)uint64_t result = a2 - 3;
    *(void *)(result + 8) = 0;
    LOBYTE(a2) = 3;
  }
  *(unsigned char *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for CRLUSDRenderingExtensionConnector.State()
{
  return &type metadata for CRLUSDRenderingExtensionConnector.State;
}

void sub_100A0D9B0(void **a1, uint64_t a2)
{
  uint64_t v4 = sub_1005057FC(&qword_10168BF60);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  __n128 v8 = __chkstk_darwin(v4, v7);
  uint64_t v9 = *a1;
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v5 + 16))((char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a2, v4, v8);
  unint64_t v10 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v11 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v11 + v10, (char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  aBlock[4] = sub_100A110E0;
  aBlock[5] = v11;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = *(void *)"";
  aBlock[2] = sub_100A0DE8C;
  aBlock[3] = &unk_10151E2C8;
  uint64_t v12 = _Block_copy(aBlock);
  swift_release();
  [v9 getExtensionProcessIDWithResponse:v12];
  _Block_release(v12);
}

uint64_t sub_100A0DB64(int a1, uint64_t a2)
{
  uint64_t v4 = sub_1005057FC(&qword_10168BF60);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  __chkstk_darwin(v4, v7);
  __n128 v8 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1005057FC(&qword_101672BB0);
  __chkstk_darwin(v9 - 8, v10);
  uint64_t v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v12, 1, 1, v13);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v8, a2, v4);
  type metadata accessor for MainActor();
  uint64_t v14 = static MainActor.shared.getter();
  unint64_t v15 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  unint64_t v16 = (v6 + v15 + 3) & 0xFFFFFFFFFFFFFFFCLL;
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = v14;
  *(void *)(v17 + 24) = &protocol witness table for MainActor;
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v17 + v15, v8, v4);
  *(_DWORD *)(v17 + v16) = a1;
  sub_1005912D0((uint64_t)v12, (uint64_t)&unk_10168BF70, v17);
  return swift_release();
}

uint64_t sub_100A0DD64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  *(_DWORD *)(v5 + 36) = a5;
  *(void *)(v5 + 16) = a4;
  type metadata accessor for MainActor();
  *(void *)(v5 + 24) = static MainActor.shared.getter();
  uint64_t v7 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_100A0DE00, v7, v6);
}

uint64_t sub_100A0DE00()
{
  int v1 = *(_DWORD *)(v0 + 36);
  swift_release();
  *(_DWORD *)(v0 + 32) = v1;
  sub_1005057FC(&qword_10168BF60);
  CheckedContinuation.resume(returning:)();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_100A0DE8C(uint64_t a1, uint64_t a2)
{
  unsigned int v3 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  v3(a2);

  return swift_release();
}

void sub_100A0DEE0(void **a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v18 = a5;
  uint64_t v8 = sub_1005057FC((uint64_t *)&unk_10168BEC0);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  __chkstk_darwin(v8, v11);
  uint64_t v12 = *a1;
  UUID.uuidString.getter();
  NSString v13 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))((char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), a2, v8);
  unint64_t v14 = (*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v15 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v15 + v14, (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v8);
  aBlock[4] = sub_100A0EB38;
  aBlock[5] = v15;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = *(void *)"";
  aBlock[2] = sub_1006EC7D8;
  aBlock[3] = &unk_10151E138;
  unint64_t v16 = _Block_copy(aBlock);
  swift_release();
  [v12 makeCoreRERendererProxyForUUID:v13 delegateProxy:a4 flags:v18 response:v16];
  _Block_release(v16);
}

uint64_t sub_100A0E0D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1005057FC((uint64_t *)&unk_10168BEC0);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  __chkstk_darwin(v4, v7);
  uint64_t v8 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1005057FC(&qword_101672BB0);
  __chkstk_darwin(v9 - 8, v10);
  uint64_t v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v12, 1, 1, v13);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v8, a2, v4);
  type metadata accessor for MainActor();
  swift_unknownObjectRetain();
  uint64_t v14 = static MainActor.shared.getter();
  unint64_t v15 = (*(unsigned __int8 *)(v5 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  unint64_t v16 = (char *)swift_allocObject();
  *((void *)v16 + 2) = v14;
  *((void *)v16 + 3) = &protocol witness table for MainActor;
  *((void *)v16 + 4) = a1;
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(&v16[v15], v8, v4);
  sub_1005912D0((uint64_t)v12, (uint64_t)&unk_10168BED8, (uint64_t)v16);
  return swift_release();
}

uint64_t sub_100A0E2C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[6] = a4;
  v5[7] = a5;
  type metadata accessor for MainActor();
  v5[8] = static MainActor.shared.getter();
  uint64_t v7 = dispatch thunk of Actor.unownedExecutor.getter();
  v5[9] = v7;
  v5[10] = v6;
  return _swift_task_switch(sub_100A0E35C, v7, v6);
}

uint64_t sub_100A0E35C()
{
  v0[2] = &OBJC_PROTOCOL___NSXPCProxyCreating;
  uint64_t v1 = swift_dynamicCastObjCProtocolConditional();
  if (v1)
  {
    uint64_t v2 = v1;
    type metadata accessor for CRLUSDRendererExtensionShared.AsyncRendererSenderProxy(0);
    swift_allocObject();
    swift_unknownObjectRetain_n();
    unsigned int v3 = (void *)swift_task_alloc();
    v0[11] = v3;
    *unsigned int v3 = v0;
    v3[1] = sub_100A0E4C4;
    return sub_1007C6F8C(v2);
  }
  else
  {
    swift_release();
    sub_1007CEB50();
    uint64_t v5 = swift_allocError();
    *uint64_t v6 = 0;
    v6[1] = 0;
    v0[3] = v5;
    sub_1005057FC((uint64_t *)&unk_10168BEC0);
    CheckedContinuation.resume(throwing:)();
    uint64_t v7 = (uint64_t (*)(void))v0[1];
    return v7();
  }
}

uint64_t sub_100A0E4C4(uint64_t a1)
{
  uint64_t v4 = *(void **)v2;
  *(void *)(*(void *)v2 + 96) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = v4[9];
    uint64_t v6 = v4[10];
    uint64_t v7 = sub_100A0E694;
  }
  else
  {
    v4[13] = a1;
    uint64_t v5 = v4[9];
    uint64_t v6 = v4[10];
    uint64_t v7 = sub_100A0E5EC;
  }
  return _swift_task_switch(v7, v5, v6);
}

uint64_t sub_100A0E5EC()
{
  uint64_t v1 = v0[13];
  swift_release();
  v0[5] = v1;
  swift_retain();
  sub_1005057FC((uint64_t *)&unk_10168BEC0);
  CheckedContinuation.resume(returning:)();
  swift_unknownObjectRelease();
  swift_release();
  uint64_t v2 = (uint64_t (*)(void))v0[1];
  return v2();
}

uint64_t sub_100A0E694()
{
  uint64_t v1 = v0[12];
  swift_release();
  v0[4] = v1;
  swift_errorRetain();
  sub_1005057FC((uint64_t *)&unk_10168BEC0);
  CheckedContinuation.resume(throwing:)();
  swift_unknownObjectRelease();
  swift_errorRelease();
  uint64_t v2 = (uint64_t (*)(void))v0[1];
  return v2();
}

uint64_t sub_100A0E73C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[2] = a4;
  v5[3] = a5;
  type metadata accessor for MainActor();
  v5[4] = static MainActor.shared.getter();
  uint64_t v7 = dispatch thunk of Actor.unownedExecutor.getter();
  v5[5] = v7;
  v5[6] = v6;
  return _swift_task_switch(sub_100A0E7D4, v7, v6);
}

uint64_t sub_100A0E7D4()
{
  uint64_t v1 = v0[3];
  uint64_t v2 = swift_task_alloc();
  v0[7] = v2;
  *(void *)(v2 + 16) = v1;
  uint64_t v5 = (uint64_t (*)(unint64_t, unint64_t, uint64_t (*)(void **), uint64_t))((char *)&dword_10167EA60 + dword_10167EA60);
  unsigned int v3 = (void *)swift_task_alloc();
  v0[8] = v3;
  *unsigned int v3 = v0;
  v3[1] = sub_100A0E8C4;
  return v5(0xD00000000000001FLL, 0x8000000101268D10, sub_100A0EB10, v2);
}

uint64_t sub_100A0E8C4()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 72) = v0;
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 48);
  uint64_t v4 = *(void *)(v2 + 40);
  if (v0) {
    uint64_t v5 = sub_100A0EA1C;
  }
  else {
    uint64_t v5 = sub_1005A5EF8;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_100A0EA1C()
{
  swift_release();
  swift_errorRelease();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100A0EA88(void **a1)
{
  uint64_t v1 = *a1;
  UUID.uuidString.getter();
  NSString v2 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v1 didTeardownCoreRERendererForUUID:v2];

  sub_1005057FC(&qword_10167F0F0);
  return CheckedContinuation.resume(returning:)();
}

uint64_t sub_100A0EB10(void **a1)
{
  return sub_100A0EA88(a1);
}

uint64_t sub_100A0EB2C()
{
  return sub_1006FA134((uint64_t *)&unk_10168BEC0);
}

uint64_t sub_100A0EB38(uint64_t a1)
{
  uint64_t v3 = *(void *)(sub_1005057FC((uint64_t *)&unk_10168BEC0) - 8);
  uint64_t v4 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  return sub_100A0E0D0(a1, v4);
}

uint64_t sub_100A0EBAC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100A0EBBC()
{
  return swift_release();
}

uint64_t sub_100A0EBC4()
{
  return sub_100A10EE4((uint64_t *)&unk_10168BEC0, (void (*)(void))&_swift_unknownObjectRelease);
}

uint64_t sub_100A0EBE4(uint64_t a1)
{
  uint64_t v4 = *(void *)(sub_1005057FC((uint64_t *)&unk_10168BEC0) - 8);
  uint64_t v5 = v1[2];
  uint64_t v6 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v8 = (uint64_t)v1 + ((*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_100528D08;
  return sub_100A0E2C4(a1, v5, v6, v7, v8);
}

uint64_t sub_100A0ECE4(uint64_t a1)
{
  return sub_100A09A84(a1, v1);
}

uint64_t sub_100A0ECEC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CRLUSDRenderingExtensionConnector.ExtensionProcess.CancellationState(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100A0ED50(uint64_t a1)
{
  uint64_t v27 = a1;
  uint64_t v1 = type metadata accessor for CRLUSDRenderingExtensionConnector.ExtensionProcess.CancellationState(0);
  __chkstk_darwin(v1, v2);
  uint64_t v4 = (char *)&v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5, v6);
  uint64_t v8 = (char *)&v27 - v7;
  uint64_t v9 = type metadata accessor for UUID();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  __chkstk_darwin(v9, v12);
  uint64_t v13 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14, v15);
  uint64_t v17 = (char *)&v27 - v16;
  UUID.init()();
  uint64_t v18 = swift_allocObject();
  swift_weakInit();
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v13, v17, v9);
  unint64_t v19 = (*(unsigned __int8 *)(v10 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = v18;
  uint64_t v21 = *(void (**)(unint64_t, char *, uint64_t))(v10 + 32);
  v21(v20 + v19, v13, v9);
  type metadata accessor for AnyCancellable();
  swift_allocObject();
  uint64_t v22 = AnyCancellable.init(_:)();
  uint64_t v23 = &v8[*(int *)(sub_1005057FC(&qword_10168BDE8) + 48)];
  swift_weakInit();
  uint64_t v24 = swift_weakAssign();
  sub_100A0F008(v24, (uint64_t)v8);
  v21((unint64_t)v23, v17, v9);
  swift_storeEnumTagMultiPayload();
  sub_100A0F3C8((uint64_t)v8, (uint64_t)v4);
  uint64_t v25 = v27
      + OBJC_IVAR____TtCC8Freeform33CRLUSDRenderingExtensionConnectorP33_3F2C14ED993E13602DE61854D66D868F16ExtensionProcess_cancellationState;
  swift_beginAccess();
  sub_100A0F42C((uint64_t)v4, v25);
  swift_endAccess();
  return v22;
}

uint64_t sub_100A0F008(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1005057FC(&qword_10168BEF8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100A0F070()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100A0F0A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UUID();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  __chkstk_darwin(v4, v7);
  uint64_t v8 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1005057FC(&qword_101672BB0);
  __chkstk_darwin(v9 - 8, v10);
  uint64_t v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v12, 1, 1, v13);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v8, a2, v4);
  type metadata accessor for MainActor();
  swift_retain();
  uint64_t v14 = static MainActor.shared.getter();
  unint64_t v15 = (*(unsigned __int8 *)(v5 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v16 = (char *)swift_allocObject();
  *((void *)v16 + 2) = v14;
  *((void *)v16 + 3) = &protocol witness table for MainActor;
  *((void *)v16 + 4) = a1;
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(&v16[v15], v8, v4);
  sub_1005912D0((uint64_t)v12, (uint64_t)&unk_10168BF08, (uint64_t)v16);
  return swift_release();
}

uint64_t sub_100A0F298()
{
  uint64_t v1 = type metadata accessor for UUID();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_100A0F364()
{
  uint64_t v1 = *(void *)(type metadata accessor for UUID() - 8);
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));

  return sub_100A0F0A8(v2, v3);
}

uint64_t sub_100A0F3C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CRLUSDRenderingExtensionConnector.ExtensionProcess.CancellationState(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100A0F42C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CRLUSDRenderingExtensionConnector.ExtensionProcess.CancellationState(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_100A0F490(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[37] = a4;
  v5[38] = a5;
  sub_1005057FC(&qword_101672BB0);
  v5[39] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for UUID();
  v5[40] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  v5[41] = v7;
  v5[42] = *(void *)(v7 + 64);
  v5[43] = swift_task_alloc();
  v5[44] = swift_task_alloc();
  v5[45] = swift_task_alloc();
  v5[46] = type metadata accessor for CRLUSDRenderingExtensionConnector.ExtensionProcess.CancellationState(0);
  v5[47] = swift_task_alloc();
  v5[48] = swift_task_alloc();
  v5[49] = swift_task_alloc();
  v5[50] = type metadata accessor for MainActor();
  v5[51] = static MainActor.shared.getter();
  uint64_t v9 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_100A0F628, v9, v8);
}

uint64_t sub_100A0F628()
{
  swift_release();
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v2 = Strong;
    if (byte_101670320 == 2 && Strong == qword_101670310)
    {
      uint64_t v63 = qword_101670310;
      uint64_t v62 = qword_101670318;
      uint64_t v5 = qword_10166FB00;
      swift_retain();
      if (v5 != -1) {
        swift_once();
      }
      uint64_t v6 = v0[49];
      swift_beginAccess();
      uint64_t v7 = (void *)static OS_os_log.crlThreeDimensionalObjects;
      sub_1005057FC((uint64_t *)&unk_101672B40);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_10117E810;
      id v9 = v7;
      UUID.uuidString.getter();
      String.index(_:offsetBy:)();
      String.subscript.getter();
      swift_bridgeObjectRelease();
      uint64_t v10 = static String._fromSubstring(_:)();
      uint64_t v12 = v11;
      swift_bridgeObjectRelease();
      *(void *)(inited + 56) = &type metadata for String;
      unint64_t v13 = sub_100528BE4();
      *(void *)(inited + 64) = v13;
      *(void *)(inited + 32) = v10;
      *(void *)(inited + 40) = v12;
      uint64_t v14 = static os_log_type_t.debug.getter();
      sub_100BAC898((uint64_t)v9, (uint64_t)&_mh_execute_header, v14, (uint64_t)"[ExtGracePeriod] Cancellation triggered for extension. (uuid: %{public}@)", 73, 2, inited);
      swift_setDeallocating();
      sub_1005057FC(&qword_101672B50);
      swift_arrayDestroy();

      uint64_t v15 = v2
          + OBJC_IVAR____TtCC8Freeform33CRLUSDRenderingExtensionConnectorP33_3F2C14ED993E13602DE61854D66D868F16ExtensionProcess_cancellationState;
      swift_beginAccess();
      sub_100A0ECEC(v15, v6);
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload)
      {
        if (EnumCaseMultiPayload == 1)
        {
          uint64_t v17 = v0[49];
          uint64_t v18 = v0[41];
          uint64_t v61 = v0[40];
          swift_release();
          uint64_t v19 = v17 + *(int *)(sub_1005057FC(&qword_10168BDF0) + 48);
          sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"makeCancellationToken()", 23, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/USD Rendering/App Extension/CRLUSDRenderingExtensionConnector.swift", 137, 2, 599, (uint64_t)"[ExtGracePeriod] Unexpected ExtensionProcess cancellation state: .timingOut", 75, 2u, (uint64_t)_swiftEmptyArrayStorage);
          sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"makeCancellationToken()", 23, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/USD Rendering/App Extension/CRLUSDRenderingExtensionConnector.swift", 137, 2, 599);
          swift_release();
          sub_100A0D794(v63, v62, 2);
          (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v19, v61);
        }
        else
        {
          sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"makeCancellationToken()", 23, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/USD Rendering/App Extension/CRLUSDRenderingExtensionConnector.swift", 137, 2, 584, (uint64_t)"[ExtGracePeriod] Unexpected ExtensionProcess cancellation state: .initializing", 78, 2u, (uint64_t)_swiftEmptyArrayStorage);
          sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"makeCancellationToken()", 23, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/USD Rendering/App Extension/CRLUSDRenderingExtensionConnector.swift", 137, 2, 584);
          swift_release();
          sub_100A0D794(v63, v62, 2);
        }
      }
      else
      {
        uint64_t v20 = v0[49];
        uint64_t v21 = v0[45];
        uint64_t v22 = v0[40];
        uint64_t v23 = v0[41];
        uint64_t v24 = v20 + *(int *)(sub_1005057FC(&qword_10168BDE8) + 48);
        uint64_t v25 = *(void (**)(uint64_t, uint64_t, uint64_t))(v23 + 32);
        v25(v21, v24, v22);
        if (static UUID.== infix(_:_:)())
        {
          uint64_t v56 = (uint64_t *)v0[48];
          uint64_t v59 = v0[47];
          uint64_t v26 = v0[44];
          uint64_t v54 = v0[45];
          uint64_t v27 = v0[43];
          uint64_t v29 = v0[40];
          uint64_t v28 = v0[41];
          uint64_t v49 = v29;
          uint64_t v50 = v27;
          uint64_t v30 = v0[39];
          uint64_t v52 = v0[42];
          uint64_t v53 = v30;
          UUID.init()();
          uint64_t v31 = type metadata accessor for TaskPriority();
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56))(v30, 1, 1, v31);
          uint64_t v32 = swift_allocObject();
          swift_weakInit();
          uint64_t v51 = v28;
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v28 + 16))(v27, v26, v29);
          swift_retain();
          uint64_t v33 = static MainActor.shared.getter();
          uint64_t v34 = *(unsigned __int8 *)(v28 + 80);
          uint64_t v35 = v25;
          uint64_t v36 = (v34 + 32) & ~v34;
          uint64_t v37 = swift_allocObject();
          *(void *)(v37 + 16) = v33;
          *(void *)(v37 + 24) = &protocol witness table for MainActor;
          v35(v37 + v36, v50, v49);
          *(void *)(v37 + ((v52 + v36 + 7) & 0xFFFFFFFFFFFFFFF8)) = v32;
          swift_release();
          uint64_t v38 = sub_1005912D0(v53, (uint64_t)&unk_10168BF20, v37);
          swift_release();
          (*(void (**)(uint64_t, uint64_t))(v51 + 8))(v54, v49);
          id v39 = (char *)v56 + *(int *)(sub_1005057FC(&qword_10168BDF0) + 48);
          *uint64_t v56 = v38;
          v35((uint64_t)v39, v26, v49);
          swift_storeEnumTagMultiPayload();
          sub_100A0F3C8((uint64_t)v56, v59);
          swift_beginAccess();
          sub_100A0F42C(v59, v15);
          swift_endAccess();
          sub_100A0D794(v63, v62, 2);
        }
        else
        {
          uint64_t v55 = v0[45];
          uint64_t v57 = v0[41];
          uint64_t v60 = v0[40];
          uint64_t v40 = (void *)static OS_os_log.crlThreeDimensionalObjects;
          uint64_t v41 = swift_initStackObject();
          *(_OWORD *)(v41 + 16) = xmmword_10117D8C0;
          id v58 = v40;
          UUID.uuidString.getter();
          String.index(_:offsetBy:)();
          String.subscript.getter();
          swift_bridgeObjectRelease();
          uint64_t v42 = static String._fromSubstring(_:)();
          uint64_t v44 = v43;
          swift_bridgeObjectRelease();
          *(void *)(v41 + 56) = &type metadata for String;
          *(void *)(v41 + 64) = v13;
          *(void *)(v41 + 32) = v42;
          *(void *)(v41 + 40) = v44;
          UUID.uuidString.getter();
          String.index(_:offsetBy:)();
          String.subscript.getter();
          swift_bridgeObjectRelease();
          uint64_t v45 = static String._fromSubstring(_:)();
          uint64_t v47 = v46;
          swift_bridgeObjectRelease();
          *(void *)(v41 + 96) = &type metadata for String;
          *(void *)(v41 + 104) = v13;
          *(void *)(v41 + 72) = v45;
          *(void *)(v41 + 80) = v47;
          uint64_t v48 = static os_log_type_t.debug.getter();
          sub_100BAC898((uint64_t)v58, (uint64_t)&_mh_execute_header, v48, (uint64_t)"[ExtGracePeriod]   (Cancellation ignored: UUID mismatch) (uuid: %{public}@, found: %{public}@)", 94, 2, v41);
          swift_setDeallocating();
          swift_arrayDestroy();

          swift_release();
          sub_100A0D794(v63, v62, 2);
          (*(void (**)(uint64_t, uint64_t))(v57 + 8))(v55, v60);
        }
        sub_100522F00(v0[49], &qword_10168BEF8);
      }
    }
    else
    {
      swift_release();
    }
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t sub_100A0FF04()
{
  uint64_t v1 = type metadata accessor for UUID();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 40) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_unknownObjectRelease();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_100A0FFD8(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for UUID() - 8);
  uint64_t v5 = v1[2];
  uint64_t v6 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v8 = (uint64_t)v1 + ((*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  id v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *id v9 = v2;
  v9[1] = sub_100528488;
  return sub_100A0F490(a1, v5, v6, v7, v8);
}

uint64_t sub_100A100D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[47] = a4;
  v5[48] = a5;
  v5[49] = type metadata accessor for CRLUSDRenderingExtensionConnector.ExtensionProcess.CancellationState(0);
  v5[50] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for UUID();
  v5[51] = v6;
  v5[52] = *(void *)(v6 - 8);
  v5[53] = swift_task_alloc();
  type metadata accessor for MainActor();
  v5[54] = static MainActor.shared.getter();
  uint64_t v8 = dispatch thunk of Actor.unownedExecutor.getter();
  v5[55] = v8;
  v5[56] = v7;
  return _swift_task_switch(sub_100A101F8, v8, v7);
}

uint64_t sub_100A101F8()
{
  if (qword_10166FB00 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v1 = (void *)static OS_os_log.crlThreeDimensionalObjects;
  v0[57] = sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117E810;
  id v3 = v1;
  UUID.uuidString.getter();
  String.index(_:offsetBy:)();
  String.subscript.getter();
  swift_bridgeObjectRelease();
  uint64_t v4 = static String._fromSubstring(_:)();
  uint64_t v6 = v5;
  swift_bridgeObjectRelease();
  *(void *)(inited + 56) = &type metadata for String;
  unint64_t v7 = sub_100528BE4();
  v0[58] = v7;
  *(void *)(inited + 64) = v7;
  *(void *)(inited + 32) = v4;
  *(void *)(inited + 40) = v6;
  uint64_t v8 = static os_log_type_t.debug.getter();
  sub_100BAC898((uint64_t)v3, (uint64_t)&_mh_execute_header, v8, (uint64_t)"[ExtGracePeriod] Grace period begins. (uuid: %{public}@)", 56, 2, inited);
  swift_setDeallocating();
  v0[59] = sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  id v9 = (void *)swift_task_alloc();
  v0[60] = v9;
  *id v9 = v0;
  v9[1] = sub_100A10420;
  return static Task<>.sleep(nanoseconds:)(30000000000);
}

uint64_t sub_100A10420()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 488) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 448);
  uint64_t v4 = *(void *)(v2 + 440);
  if (v0) {
    uint64_t v5 = sub_100A10B08;
  }
  else {
    uint64_t v5 = sub_100A1055C;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_100A1055C()
{
  uint64_t v1 = v0[61];
  swift_release();
  static Task<>.checkCancellation()();
  if (v1)
  {
    uint64_t v2 = v0[58];
    uint64_t v3 = (void *)static OS_os_log.crlThreeDimensionalObjects;
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_10117E810;
    id v5 = v3;
    UUID.uuidString.getter();
    String.index(_:offsetBy:)();
    String.subscript.getter();
    swift_bridgeObjectRelease();
    uint64_t v6 = static String._fromSubstring(_:)();
    uint64_t v8 = v7;
    swift_bridgeObjectRelease();
    *(void *)(inited + 56) = &type metadata for String;
    *(void *)(inited + 64) = v2;
    *(void *)(inited + 32) = v6;
    *(void *)(inited + 40) = v8;
    uint64_t v9 = static os_log_type_t.debug.getter();
    sub_100BAC898((uint64_t)v5, (uint64_t)&_mh_execute_header, v9, (uint64_t)"[ExtGracePeriod] Grace period cancelled (new API endpoint created). (uuid: %{public}@)", 86, 2, inited);
    swift_setDeallocating();
    swift_arrayDestroy();

    swift_errorRelease();
    goto LABEL_8;
  }
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (!Strong) {
    goto LABEL_7;
  }
  uint64_t v11 = Strong;
  if (byte_101670320 != 2 || (uint64_t v12 = qword_101670310, Strong != qword_101670310))
  {
    swift_release();
LABEL_7:
    uint64_t v13 = v0[58];
    uint64_t v14 = (void *)static OS_os_log.crlThreeDimensionalObjects;
    uint64_t v15 = swift_initStackObject();
    *(_OWORD *)(v15 + 16) = xmmword_10117E810;
    id v16 = v14;
    UUID.uuidString.getter();
    String.index(_:offsetBy:)();
    String.subscript.getter();
    swift_bridgeObjectRelease();
    uint64_t v17 = static String._fromSubstring(_:)();
    uint64_t v19 = v18;
    swift_bridgeObjectRelease();
    *(void *)(v15 + 56) = &type metadata for String;
    *(void *)(v15 + 64) = v13;
    *(void *)(v15 + 32) = v17;
    *(void *)(v15 + 40) = v19;
    uint64_t v20 = static os_log_type_t.debug.getter();
    sub_100BAC898((uint64_t)v16, (uint64_t)&_mh_execute_header, v20, (uint64_t)"[ExtGracePeriod] Grace period cancelled (state changed). (uuid: %{public}@)", 75, 2, v15);
    swift_setDeallocating();
    swift_arrayDestroy();

    goto LABEL_8;
  }
  uint64_t v23 = qword_101670318;
  uint64_t v24 = v0[50];
  uint64_t v25 = Strong
      + OBJC_IVAR____TtCC8Freeform33CRLUSDRenderingExtensionConnectorP33_3F2C14ED993E13602DE61854D66D868F16ExtensionProcess_cancellationState;
  swift_beginAccess();
  sub_100A0ECEC(v25, v24);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    uint64_t v40 = v0[50];
    swift_release();
    sub_100A0D348(v40);
    goto LABEL_7;
  }
  uint64_t v49 = v23;
  uint64_t v27 = v0[52];
  uint64_t v26 = v0[53];
  uint64_t v29 = v0[50];
  uint64_t v28 = v0[51];
  swift_retain();
  swift_release();
  uint64_t v30 = sub_1005057FC(&qword_10168BDF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v27 + 32))(v26, v29 + *(int *)(v30 + 48), v28);
  if ((static UUID.== infix(_:_:)() & 1) == 0)
  {
    uint64_t v42 = v0[52];
    uint64_t v41 = v0[53];
    uint64_t v43 = v0[51];
    swift_release();
    sub_100A0D794(v12, v49, 2);
    (*(void (**)(uint64_t, uint64_t))(v42 + 8))(v41, v43);
    goto LABEL_7;
  }
  uint64_t v45 = v0[58];
  uint64_t v46 = v0[52];
  uint64_t v47 = v0[51];
  uint64_t v48 = v0[53];
  uint64_t v31 = (void *)static OS_os_log.crlThreeDimensionalObjects;
  uint64_t v32 = swift_initStackObject();
  *(_OWORD *)(v32 + 16) = xmmword_10117E810;
  id v44 = v31;
  UUID.uuidString.getter();
  String.index(_:offsetBy:)();
  String.subscript.getter();
  swift_bridgeObjectRelease();
  uint64_t v33 = static String._fromSubstring(_:)();
  uint64_t v35 = v34;
  swift_bridgeObjectRelease();
  *(void *)(v32 + 56) = &type metadata for String;
  *(void *)(v32 + 64) = v45;
  *(void *)(v32 + 32) = v33;
  *(void *)(v32 + 40) = v35;
  uint64_t v36 = static os_log_type_t.debug.getter();
  sub_100BAC898((uint64_t)v44, (uint64_t)&_mh_execute_header, v36, (uint64_t)"[ExtGracePeriod] Grace period ended. Extension process invalidated. (uuid: %{public}@)", 86, 2, v32);
  swift_setDeallocating();
  swift_arrayDestroy();

  uint64_t v37 = qword_101670310;
  uint64_t v38 = qword_101670318;
  qword_101670310 = 0;
  qword_101670318 = 0;
  char v39 = byte_101670320;
  byte_101670320 = 3;
  sub_100A0D794(v37, v38, v39);
  [*(id *)(v11+ OBJC_IVAR____TtCC8Freeform33CRLUSDRenderingExtensionConnectorP33_3F2C14ED993E13602DE61854D66D868F16ExtensionProcess_foregroundAssertion) invalidate];
  _AppExtensionProcess.invalidate()();
  swift_release();
  sub_100A0D794(v12, v49, 2);
  (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v48, v47);
LABEL_8:
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v21 = (uint64_t (*)(void))v0[1];
  return v21();
}

uint64_t sub_100A10B08()
{
  swift_release();
  uint64_t v1 = *(void *)(v0 + 464);
  uint64_t v2 = (void *)static OS_os_log.crlThreeDimensionalObjects;
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117E810;
  id v4 = v2;
  UUID.uuidString.getter();
  String.index(_:offsetBy:)();
  String.subscript.getter();
  swift_bridgeObjectRelease();
  uint64_t v5 = static String._fromSubstring(_:)();
  uint64_t v7 = v6;
  swift_bridgeObjectRelease();
  *(void *)(inited + 56) = &type metadata for String;
  *(void *)(inited + 64) = v1;
  *(void *)(inited + 32) = v5;
  *(void *)(inited + 40) = v7;
  uint64_t v8 = static os_log_type_t.debug.getter();
  sub_100BAC898((uint64_t)v4, (uint64_t)&_mh_execute_header, v8, (uint64_t)"[ExtGracePeriod] Grace period cancelled (new API endpoint created). (uuid: %{public}@)", 86, 2, inited);
  swift_setDeallocating();
  swift_arrayDestroy();

  swift_errorRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v9 = *(uint64_t (**)(void))(v0 + 8);
  return v9();
}

uint64_t sub_100A10CB8()
{
  uint64_t v1 = type metadata accessor for UUID();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 32) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release();

  return _swift_deallocObject(v0, v6, v5);
}

uint64_t sub_100A10DA0(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for UUID() - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = *(void *)(v1 + 16);
  uint64_t v7 = *(void *)(v1 + 24);
  uint64_t v8 = v1 + v5;
  uint64_t v9 = *(void *)(v1 + ((*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  *uint64_t v10 = v2;
  v10[1] = sub_100528D08;
  return sub_100A100D4(a1, v6, v7, v8, v9);
}

uint64_t sub_100A10EC4()
{
  return sub_100A10EE4(&qword_10168BF28, (void (*)(void))&_swift_release);
}

uint64_t sub_100A10EE4(uint64_t *a1, void (*a2)(void))
{
  uint64_t v4 = sub_1005057FC(a1);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = (v6 + 40) & ~v6;
  uint64_t v8 = v7 + *(void *)(v5 + 64);
  uint64_t v9 = v6 | 7;
  swift_unknownObjectRelease();
  a2(*(void *)(v2 + 32));
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v2 + v7, v4);

  return _swift_deallocObject(v2, v8, v9);
}

uint64_t sub_100A10FC4(uint64_t a1)
{
  uint64_t v4 = *(void *)(sub_1005057FC(&qword_10168BF28) - 8);
  uint64_t v5 = v1[2];
  uint64_t v6 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v8 = (uint64_t)v1 + ((*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_100528D08;
  return sub_100A09C78(a1, v5, v6, v7, v8);
}

uint64_t sub_100A110C4()
{
  return sub_100A0C520();
}

uint64_t sub_100A110CC(uint64_t a1, unint64_t a2)
{
  return sub_100A0C7D8(a1, a2);
}

uint64_t sub_100A110D4()
{
  return sub_1006FA134(&qword_10168BF60);
}

uint64_t sub_100A110E0(int a1)
{
  uint64_t v3 = *(void *)(sub_1005057FC(&qword_10168BF60) - 8);
  uint64_t v4 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  return sub_100A0DB64(a1, v4);
}

uint64_t sub_100A11154()
{
  uint64_t v1 = sub_1005057FC(&qword_10168BF60);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 32) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((*(void *)(v2 + 64) + v4 + 3) & 0xFFFFFFFFFFFFFFFCLL) + 4;
  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v6, v5);
}

uint64_t sub_100A11230(uint64_t a1)
{
  uint64_t v4 = *(void *)(sub_1005057FC(&qword_10168BF60) - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = *(void *)(v1 + 16);
  uint64_t v7 = *(void *)(v1 + 24);
  uint64_t v8 = v1 + v5;
  int v9 = *(_DWORD *)(v1 + ((*(void *)(v4 + 64) + v5 + 3) & 0xFFFFFFFFFFFFFFFCLL));
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  *uint64_t v10 = v2;
  v10[1] = sub_100528D08;
  return sub_100A0DD64(a1, v6, v7, v8, v9);
}

uint64_t sub_100A11358()
{
  swift_unknownObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_100A11398(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_100528D08;
  return sub_100A0C66C(a1, v4, v5, v6);
}

uint64_t sub_100A1144C()
{
  uint64_t v1 = sub_1005057FC(&qword_10168BF88);
  __chkstk_darwin(v1 - 8, v2);
  uint64_t v4 = &v16[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v5, v6);
  uint64_t v8 = &v16[-v7];
  uint64_t v9 = sub_1005057FC(&qword_10167F0F0);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9, v11);
  uint64_t v13 = &v16[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v14 = v0
      + OBJC_IVAR____TtCC8Freeform33CRLUSDRenderingExtensionConnectorP33_3F2C14ED993E13602DE61854D66D868F22ViewControllerDelegate_continuation;
  swift_beginAccess();
  sub_100A11894(v14, (uint64_t)v8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1) {
    return sub_100522F00((uint64_t)v8, &qword_10168BF88);
  }
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v10 + 32))(v13, v8, v9);
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v4, 1, 1, v9);
  swift_beginAccess();
  sub_100A118FC((uint64_t)v4, v14);
  swift_endAccess();
  CheckedContinuation.resume(returning:)();
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v10 + 8))(v13, v9);
}

uint64_t sub_100A11664(uint64_t a1)
{
  uint64_t v3 = sub_1005057FC(&qword_10168BF88);
  __chkstk_darwin(v3 - 8, v4);
  uint64_t v6 = (char *)v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7, v8);
  uint64_t v10 = (char *)v18 - v9;
  uint64_t v11 = sub_1005057FC(&qword_10167F0F0);
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11, v13);
  uint64_t v15 = (char *)v18 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = v1
      + OBJC_IVAR____TtCC8Freeform33CRLUSDRenderingExtensionConnectorP33_3F2C14ED993E13602DE61854D66D868F22ViewControllerDelegate_continuation;
  swift_beginAccess();
  sub_100A11894(v16, (uint64_t)v10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1) {
    return sub_100522F00((uint64_t)v10, &qword_10168BF88);
  }
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v15, v10, v11);
  if (a1)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v6, 1, 1, v11);
    swift_beginAccess();
    swift_errorRetain();
    sub_100A118FC((uint64_t)v6, v16);
    swift_endAccess();
    v18[0] = a1;
    CheckedContinuation.resume(throwing:)();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v15, v11);
}

uint64_t sub_100A11894(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1005057FC(&qword_10168BF88);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100A118FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1005057FC(&qword_10168BF88);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

BOOL sub_100A11978()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform28CRLMiniFormatterDataProvider_editorController);
  if (sub_10050BF48(0, &qword_10168BFB8)) {
    uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  }
  else {
    uint64_t ObjCClassFromMetadata = 0;
  }
  id v3 = [v1 mostSpecificCurrentEditorOfClass:ObjCClassFromMetadata];
  self;
  uint64_t v4 = (void *)swift_dynamicCastObjCClass();
  if (v4)
  {
    id v5 = [v4 canvasEditorHelper];
    swift_unknownObjectRelease();
    id v6 = [v5 layoutsForAlignAndDistribute];

    sub_10050BF48(0, (unint64_t *)&qword_101690720);
    sub_100A1226C();
    uint64_t v7 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

    if ((v7 & 0xC000000000000001) != 0) {
      uint64_t v8 = __CocoaSet.count.getter();
    }
    else {
      uint64_t v8 = *(void *)(v7 + 16);
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_unknownObjectRelease();
    uint64_t v8 = 0;
  }
  return v8 > 2;
}

BOOL sub_100A11ACC()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform28CRLMiniFormatterDataProvider_editorController);
  if (sub_10050BF48(0, &qword_10168BFB8)) {
    uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  }
  else {
    uint64_t ObjCClassFromMetadata = 0;
  }
  id v3 = [v1 mostSpecificCurrentEditorOfClass:ObjCClassFromMetadata];
  self;
  uint64_t v4 = (void *)swift_dynamicCastObjCClass();
  if (v4)
  {
    id v5 = [v4 canvasEditorHelper];
    swift_unknownObjectRelease();
    id v6 = [v5 layoutsForAlignAndDistribute];

    sub_10050BF48(0, (unint64_t *)&qword_101690720);
    sub_100A1226C();
    uint64_t v7 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

    if ((v7 & 0xC000000000000001) != 0) {
      uint64_t v8 = __CocoaSet.count.getter();
    }
    else {
      uint64_t v8 = *(void *)(v7 + 16);
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_unknownObjectRelease();
    uint64_t v8 = 0;
  }
  return v8 > 1;
}

uint64_t sub_100A11C20()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform28CRLMiniFormatterDataProvider_editorController);
  uint64_t v2 = sub_10050BF48(0, &qword_10168BFB8);
  if (v2) {
    uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  }
  else {
    uint64_t ObjCClassFromMetadata = 0;
  }
  id v4 = [v1 mostSpecificCurrentEditorOfClass:ObjCClassFromMetadata];
  self;
  id v5 = (void *)swift_dynamicCastObjCClass();
  if (v5)
  {
    id v6 = [v5 canvasEditorHelper];
    swift_unknownObjectRelease();
    id v7 = [v6 canvasEditorCanPerformGroupActionWithSender:v0];

    BOOL v8 = v7 == (id)1;
    if (v2)
    {
LABEL_6:
      uint64_t v9 = swift_getObjCClassFromMetadata();
      goto LABEL_9;
    }
  }
  else
  {
    swift_unknownObjectRelease();
    BOOL v8 = 0;
    if (v2) {
      goto LABEL_6;
    }
  }
  uint64_t v9 = 0;
LABEL_9:
  id v10 = [v1 mostSpecificCurrentEditorOfClass:v9];
  self;
  uint64_t v11 = (void *)swift_dynamicCastObjCClass();
  if (v11)
  {
    id v12 = [v11 canvasEditorHelper];
    swift_unknownObjectRelease();
    int v13 = [v12 canvasEditorCanPerformUngroupActionWithSender:v0] == (id)1;

    int v14 = v13 << 8;
  }
  else
  {
    swift_unknownObjectRelease();
    int v14 = 0;
  }
  return v14 | v8;
}

uint64_t sub_100A11DC0(uint64_t result)
{
  switch((int)result)
  {
    case 0:
      uint64_t v2 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform28CRLMiniFormatterDataProvider_editorController);
      if (sub_10050BF48(0, &qword_10168BFB8)) {
        uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
      }
      else {
        uint64_t ObjCClassFromMetadata = 0;
      }
      [v2 mostSpecificCurrentEditorOfClass:ObjCClassFromMetadata];
      self;
      int v14 = (void *)swift_dynamicCastObjCClass();
      if (!v14) {
        goto LABEL_33;
      }
      uint64_t v15 = &selRef_alignDrawablesByLeftEdge_;
      break;
    case 1:
      id v4 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform28CRLMiniFormatterDataProvider_editorController);
      if (sub_10050BF48(0, &qword_10168BFB8)) {
        uint64_t v5 = swift_getObjCClassFromMetadata();
      }
      else {
        uint64_t v5 = 0;
      }
      [v4 mostSpecificCurrentEditorOfClass:v5];
      self;
      int v14 = (void *)swift_dynamicCastObjCClass();
      if (!v14) {
        goto LABEL_33;
      }
      uint64_t v15 = &selRef_alignDrawablesByVerticalCenter_;
      break;
    case 2:
      id v6 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform28CRLMiniFormatterDataProvider_editorController);
      if (sub_10050BF48(0, &qword_10168BFB8)) {
        uint64_t v7 = swift_getObjCClassFromMetadata();
      }
      else {
        uint64_t v7 = 0;
      }
      [v6 mostSpecificCurrentEditorOfClass:v7];
      self;
      int v14 = (void *)swift_dynamicCastObjCClass();
      if (!v14) {
        goto LABEL_33;
      }
      uint64_t v15 = &selRef_alignDrawablesByRightEdge_;
      break;
    case 3:
      BOOL v8 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform28CRLMiniFormatterDataProvider_editorController);
      if (sub_10050BF48(0, &qword_10168BFB8)) {
        uint64_t v9 = swift_getObjCClassFromMetadata();
      }
      else {
        uint64_t v9 = 0;
      }
      [v8 mostSpecificCurrentEditorOfClass:v9];
      self;
      int v14 = (void *)swift_dynamicCastObjCClass();
      if (!v14) {
        goto LABEL_33;
      }
      uint64_t v15 = &selRef_alignDrawablesByTopEdge_;
      break;
    case 4:
      id v10 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform28CRLMiniFormatterDataProvider_editorController);
      if (sub_10050BF48(0, &qword_10168BFB8)) {
        uint64_t v11 = swift_getObjCClassFromMetadata();
      }
      else {
        uint64_t v11 = 0;
      }
      [v10 mostSpecificCurrentEditorOfClass:v11];
      self;
      int v14 = (void *)swift_dynamicCastObjCClass();
      if (!v14) {
        goto LABEL_33;
      }
      uint64_t v15 = &selRef_alignDrawablesByHorizontalCenter_;
      break;
    case 5:
      id v12 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform28CRLMiniFormatterDataProvider_editorController);
      if (sub_10050BF48(0, &qword_10168BFB8)) {
        uint64_t v13 = swift_getObjCClassFromMetadata();
      }
      else {
        uint64_t v13 = 0;
      }
      [v12 mostSpecificCurrentEditorOfClass:v13];
      self;
      int v14 = (void *)swift_dynamicCastObjCClass();
      if (!v14) {
        goto LABEL_33;
      }
      uint64_t v15 = &selRef_alignDrawablesByBottomEdge_;
      break;
    default:
      return result;
  }
  [v14 *v15 v1];
LABEL_33:

  return swift_unknownObjectRelease();
}

BOOL sub_100A12148()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform28CRLMiniFormatterDataProvider_editorController);
  if (sub_10050BF48(0, &qword_10168AB80)) {
    uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  }
  else {
    uint64_t ObjCClassFromMetadata = 0;
  }
  id v3 = [v1 mostSpecificCurrentEditorOfClass:ObjCClassFromMetadata];
  self;
  id v4 = (void *)swift_dynamicCastObjCClass();
  if (v4)
  {
    id v5 = [v4 canPerformEditorAction:"mergeDrawings:" withSender:v0];
    swift_unknownObjectRelease();
    return v5 == (id)1;
  }
  else
  {
    swift_unknownObjectRelease();
    return 0;
  }
}

id sub_100A12214()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLMiniFormatterArrangeDataProvider();
  return [super dealloc];
}

uint64_t type metadata accessor for CRLMiniFormatterArrangeDataProvider()
{
  return self;
}

unint64_t sub_100A1226C()
{
  unint64_t result = qword_10168BFC0;
  if (!qword_10168BFC0)
  {
    sub_10050BF48(255, (unint64_t *)&qword_101690720);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168BFC0);
  }
  return result;
}

unint64_t sub_100A122D4()
{
  unint64_t result = sub_100A393A8((uint64_t)_swiftEmptyArrayStorage);
  qword_10171B3F8 = result;
  return result;
}

uint64_t sub_100A123C8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1005FA400();
  BOOL v8 = (void *)static OS_os_log.default.getter();
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t result = swift_initStackObject();
  *(_OWORD *)(result + 16) = xmmword_10117D8C0;
  if (!a3)
  {
    __break(1u);
    goto LABEL_26;
  }
  id v10 = (void *)result;
  *(void *)(result + 56) = &type metadata for String;
  uint64_t result = sub_100528BE4();
  v10[8] = result;
  v10[4] = a2;
  v10[5] = a3;
  if (!a4)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  v10[12] = sub_1005057FC(&qword_10168E270);
  v10[13] = sub_100A128B0();
  v10[9] = a4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v11 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v8, (uint64_t)&_mh_execute_header, v11, (uint64_t)"[CARMEL-PPT] Running test %@ options %@", 39, 2, (uint64_t)v10);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  if (qword_10166F6B0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  qword_10171B3F8 = a4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v12 = sub_100AF33C0();
  uint64_t v13 = *(void *)(v12 + 16);
  if (!v13)
  {
    uint64_t result = swift_bridgeObjectRelease();
LABEL_15:
    if (a1)
    {
      NSString v21 = String._bridgeToObjectiveC()();
      uint64_t v35 = 0;
      unint64_t v36 = 0xE000000000000000;
      _StringGuts.grow(_:)(20);
      v22._uint64_t countAndFlagsBits = 0x7373616C63206F4ELL;
      v22._object = (void *)0xED000020726F6620;
      String.append(_:)(v22);
      sub_1005057FC(&qword_101674580);
      _print_unlocked<A, B>(_:_:)();
      v23._uint64_t countAndFlagsBits = 23328;
      v23._object = (void *)0xE200000000000000;
      String.append(_:)(v23);
      sub_100AF33C0();
      sub_1005057FC(&qword_10168C038);
      v24._uint64_t countAndFlagsBits = Array.description.getter();
      String.append(_:)(v24);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v25._uint64_t countAndFlagsBits = 93;
      v25._object = (void *)0xE100000000000000;
      String.append(_:)(v25);
      NSString v26 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [a1 failedTest:v21 withFailure:v26];

      return 0;
    }
LABEL_27:
    __break(1u);
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  uint64_t v34 = a1;
  swift_bridgeObjectRetain();
  int v14 = (uint64_t *)(v12 + 48);
  while (1)
  {
    uint64_t v15 = *(v14 - 2);
    uint64_t v16 = *(v14 - 1);
    uint64_t v17 = *v14;
    if ((*(uint64_t (**)(uint64_t, uint64_t))(v16 + 8))(v15, v16) == a2 && v18 == a3)
    {
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      goto LABEL_19;
    }
    char v20 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v20) {
      break;
    }
    v14 += 3;
    if (!--v13)
    {
      uint64_t result = swift_bridgeObjectRelease_n();
      a1 = v34;
      goto LABEL_15;
    }
  }
  swift_bridgeObjectRelease_n();
LABEL_19:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v17 + 8))(&v35, v15, v17);
  qword_10171B3E0 = v35;
  *(void *)algn_10171B3E8 = v16;
  qword_10171B3F0 = v17;
  uint64_t result = swift_unknownObjectRelease();
  uint64_t v27 = qword_10171B3E0;
  if (qword_10171B3E0)
  {
    uint64_t v28 = qword_10171B3F0;
    uint64_t result = swift_getObjectType();
    uint64_t v35 = v27;
    if (v34)
    {
      uint64_t v29 = result;
      uint64_t v30 = *(void (**)(void *, uint64_t, uint64_t))(v28 + 16);
      swift_unknownObjectRetain();
      v30(v34, v29, v28);
      swift_unknownObjectRelease();
      return 1;
    }
    goto LABEL_28;
  }
  if (v34)
  {
    NSString v31 = String._bridgeToObjectiveC()();
    uint64_t v35 = 0;
    unint64_t v36 = 0xE000000000000000;
    _StringGuts.grow(_:)(17);
    swift_bridgeObjectRelease();
    uint64_t v35 = 0x742064656C696146;
    unint64_t v36 = 0xEF2074696E69206FLL;
    v32._uint64_t countAndFlagsBits = _typeName(_:qualified:)();
    String.append(_:)(v32);
    swift_bridgeObjectRelease();
    NSString v33 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v34 failedTest:v31 withFailure:v33];

    return 0;
  }
LABEL_29:
  __break(1u);
  return result;
}

unint64_t sub_100A128B0()
{
  unint64_t result = qword_10168C030;
  if (!qword_10168C030)
  {
    sub_100522D34(&qword_10168E270);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168C030);
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLTipConnectionLinesEntryPointFull()
{
  return &type metadata for CRLTipConnectionLinesEntryPointFull;
}

uint64_t sub_100A1291C(uint64_t a1)
{
  return sub_100A12ACC(a1, qword_10171B400);
}

uint64_t sub_100A12940(uint64_t a1)
{
  return sub_100A12A04(a1, qword_10171B418);
}

uint64_t sub_100A1296C(uint64_t a1)
{
  return sub_100A12A04(a1, qword_10171B430);
}

uint64_t sub_100A12990(uint64_t a1)
{
  return sub_100A12A04(a1, qword_10171B448);
}

uint64_t sub_100A129B4(uint64_t a1)
{
  return sub_100A12A04(a1, qword_10171B460);
}

uint64_t sub_100A129D8(uint64_t a1)
{
  return sub_100A12A04(a1, qword_10171B478);
}

uint64_t sub_100A12A04(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = sub_1005057FC(&qword_10169FA10);
  sub_100568B28(v3, a2);
  sub_100556B74(v3, (uint64_t)a2);
  return Tips.Parameter.init<A>(_:_:_:_:)();
}

uint64_t sub_100A12AA8(uint64_t a1)
{
  return sub_100A12ACC(a1, qword_10171B490);
}

uint64_t sub_100A12ACC(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = sub_1005057FC(&qword_10167A2C0);
  sub_100568B28(v3, a2);
  sub_100556B74(v3, (uint64_t)a2);
  return Tips.Event.init<>(id:)();
}

uint64_t sub_100A12B30@<X0>(uint64_t *a1@<X8>)
{
  return sub_100A12B38(1, a1);
}

uint64_t sub_100A12B38@<X0>(char a1@<W1>, uint64_t *a2@<X8>)
{
  uint64_t v4 = sub_1005057FC(&qword_10167A358);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4, v6);
  BOOL v8 = &v15[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = sub_1005057FC(&qword_10167A360);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9, v11);
  uint64_t v13 = &v15[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_100523288(&qword_10167A368, &qword_10167A360);
  static PredicateExpressions.build_Arg<A>(_:)();
  v15[15] = a1;
  static PredicateExpressions.build_Arg<A>(_:)();
  a2[3] = sub_1005057FC(&qword_10167A370);
  a2[4] = sub_1006A14B4();
  sub_1005767BC(a2);
  sub_100523288(&qword_10167A390, &qword_10167A358);
  static PredicateExpressions.build_Equal<A, B>(lhs:rhs:)();
  (*(void (**)(unsigned char *, uint64_t))(v5 + 8))(v8, v4);
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v10 + 8))(v13, v9);
}

uint64_t sub_100A12D7C@<X0>(uint64_t *a1@<X8>)
{
  return sub_100A12B38(0, a1);
}

uint64_t sub_100A12D84@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v38 = a1;
  uint64_t v1 = type metadata accessor for PredicateExpressions.ComparisonOperator();
  uint64_t v36 = *(void *)(v1 - 8);
  uint64_t v37 = v1;
  __chkstk_darwin(v1, v2);
  uint64_t v35 = (char *)&v32 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1005057FC(&qword_10167A2D8);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v39 = v4;
  uint64_t v40 = v5;
  __chkstk_darwin(v4, v6);
  BOOL v8 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1005057FC(&qword_10167A2E0);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9, v11);
  uint64_t v13 = (char *)&v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1005057FC(&qword_10167A2E8);
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14, v16);
  uint64_t v18 = (char *)&v32 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_1005057FC(&qword_1016896F0);
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v33 = v19;
  uint64_t v34 = v20;
  __chkstk_darwin(v19, v21);
  Swift::String v23 = (char *)&v32 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100523288(&qword_10167A300, &qword_10167A2E0);
  static PredicateExpressions.build_Arg<A>(_:)();
  swift_getKeyPath();
  static PredicateExpressions.build_KeyPath<A, B>(root:keyPath:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
  swift_getKeyPath();
  sub_100523288(&qword_1016896F8, &qword_10167A2E8);
  static PredicateExpressions.build_KeyPath<A, B>(root:keyPath:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v15 + 8))(v18, v14);
  uint64_t v41 = 1;
  static PredicateExpressions.build_Arg<A>(_:)();
  Swift::String v25 = v35;
  uint64_t v24 = v36;
  uint64_t v26 = v37;
  (*(void (**)(char *, void, uint64_t))(v36 + 104))(v35, enum case for PredicateExpressions.ComparisonOperator.lessThan(_:), v37);
  uint64_t v27 = sub_1005057FC(&qword_101689700);
  uint64_t v28 = v38;
  v38[3] = v27;
  v28[4] = sub_100A142BC((unint64_t *)&qword_101689708, &qword_101689700, (void (*)(void))sub_10099C558);
  sub_1005767BC(v28);
  sub_100523288(&qword_101689718, &qword_1016896F0);
  sub_100523288(&qword_10167A350, &qword_10167A2D8);
  uint64_t v29 = v33;
  uint64_t v30 = v39;
  static PredicateExpressions.build_Comparison<A, B>(lhs:rhs:op:)();
  (*(void (**)(char *, uint64_t))(v24 + 8))(v25, v26);
  (*(void (**)(char *, uint64_t))(v40 + 8))(v8, v30);
  return (*(uint64_t (**)(char *, uint64_t))(v34 + 8))(v23, v29);
}

uint64_t sub_100A13290@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v54 = a1;
  uint64_t v1 = type metadata accessor for PredicateExpressions.ComparisonOperator();
  uint64_t v52 = *(void *)(v1 - 8);
  uint64_t v53 = v1;
  __chkstk_darwin(v1, v2);
  uint64_t v51 = (char *)&v42 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1005057FC(&qword_10167A2D8);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v55 = v4;
  uint64_t v56 = v5;
  __chkstk_darwin(v4, v6);
  uint64_t v50 = (char *)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for Tips.DonationTimeRange();
  uint64_t v46 = *(void *)(v8 - 8);
  uint64_t v47 = v8;
  __chkstk_darwin(v8, v9);
  uint64_t v11 = (char *)&v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1005057FC(&qword_10167A2E0);
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12, v14);
  uint64_t v16 = (char *)&v42 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_1005057FC(&qword_10167A2E8);
  uint64_t v18 = *(void *)(v17 - 8);
  __chkstk_darwin(v17, v19);
  uint64_t v21 = (char *)&v42 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_1005057FC(&qword_10167A2F0);
  uint64_t v23 = *(void *)(v22 - 8);
  uint64_t v44 = v22;
  uint64_t v45 = v23;
  __chkstk_darwin(v22, v24);
  uint64_t v26 = (char *)&v42 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = sub_1005057FC(&qword_10167A2F8);
  uint64_t v28 = *(void *)(v27 - 8);
  uint64_t v48 = v27;
  uint64_t v49 = v28;
  __chkstk_darwin(v27, v29);
  uint64_t v43 = (char *)&v42 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100523288(&qword_10167A300, &qword_10167A2E0);
  static PredicateExpressions.build_Arg<A>(_:)();
  swift_getKeyPath();
  static PredicateExpressions.build_KeyPath<A, B>(root:keyPath:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v16, v12);
  static Tips.DonationTimeRange.day.getter();
  type metadata accessor for Tips.EmptyDonation();
  sub_1006A1230(&qword_10167A2C8);
  sub_1006A1230(&qword_10167A2D0);
  sub_1006A12E0();
  static PredicateExpressions.build_donatedWithin<A, B>(_:_:)();
  (*(void (**)(char *, uint64_t))(v46 + 8))(v11, v47);
  (*(void (**)(char *, uint64_t))(v18 + 8))(v21, v17);
  swift_getKeyPath();
  sub_100523288(&qword_10167A318, &qword_10167A2F0);
  uint64_t v32 = v43;
  uint64_t v31 = v44;
  static PredicateExpressions.build_KeyPath<A, B>(root:keyPath:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v45 + 8))(v26, v31);
  uint64_t v57 = 1;
  uint64_t v33 = v50;
  static PredicateExpressions.build_Arg<A>(_:)();
  uint64_t v35 = v51;
  uint64_t v34 = v52;
  uint64_t v36 = v53;
  (*(void (**)(char *, void, uint64_t))(v52 + 104))(v51, enum case for PredicateExpressions.ComparisonOperator.lessThan(_:), v53);
  uint64_t v37 = sub_1005057FC(&qword_10167A320);
  uint64_t v38 = v54;
  v54[3] = v37;
  v38[4] = sub_100A142BC((unint64_t *)&qword_10167A328, &qword_10167A320, (void (*)(void))sub_1006A141C);
  sub_1005767BC(v38);
  sub_100523288(&qword_10167A348, &qword_10167A2F8);
  sub_100523288(&qword_10167A350, &qword_10167A2D8);
  uint64_t v39 = v48;
  uint64_t v40 = v55;
  static PredicateExpressions.build_Comparison<A, B>(lhs:rhs:op:)();
  (*(void (**)(char *, uint64_t))(v34 + 8))(v35, v36);
  (*(void (**)(char *, uint64_t))(v56 + 8))(v33, v40);
  return (*(uint64_t (**)(char *, uint64_t))(v49 + 8))(v32, v39);
}

uint64_t sub_100A1395C()
{
  return sub_100F86FA8();
}

uint64_t sub_100A1398C@<X0>(uint64_t *a1@<X8>)
{
  sub_1005C6E1C();
  uint64_t result = Tip.id.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

unint64_t sub_100A139D0()
{
  unint64_t result = qword_10168C0A0;
  if (!qword_10168C0A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168C0A0);
  }
  return result;
}

unint64_t sub_100A13A24(uint64_t a1)
{
  unint64_t result = sub_1005C6E1C();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_100A13A4C()
{
  uint64_t v0 = sub_1005057FC(&qword_10167A2C0);
  uint64_t v26 = *(void *)(v0 - 8);
  __chkstk_darwin(v0, v1);
  uint64_t v3 = (char *)v25 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1005057FC(&qword_10169FA10);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4, v6);
  uint64_t v8 = (char *)v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for Tips.Rule();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9, v11);
  uint64_t v13 = (char *)v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10166F6C0 != -1) {
    swift_once();
  }
  uint64_t v14 = sub_100556B74(v4, (uint64_t)qword_10171B418);
  swift_beginAccess();
  uint64_t v15 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v15(v8, v14, v4);
  Tips.Rule.init<A>(_:_:)();
  v25[5] = static Tips.RuleBuilder.buildExpression(_:)();
  uint64_t v27 = *(void (**)(char *, uint64_t))(v10 + 8);
  v27(v13, v9);
  if (qword_10166F6D8 != -1) {
    swift_once();
  }
  uint64_t v16 = sub_100556B74(v4, (uint64_t)qword_10171B460);
  swift_beginAccess();
  v15(v8, v16, v4);
  Tips.Rule.init<A>(_:_:)();
  void v25[4] = static Tips.RuleBuilder.buildExpression(_:)();
  v27(v13, v9);
  if (qword_10166F6C8 != -1) {
    swift_once();
  }
  uint64_t v17 = sub_100556B74(v4, (uint64_t)qword_10171B430);
  swift_beginAccess();
  v15(v8, v17, v4);
  Tips.Rule.init<A>(_:_:)();
  v25[3] = static Tips.RuleBuilder.buildExpression(_:)();
  v27(v13, v9);
  if (qword_10166F6D0 != -1) {
    swift_once();
  }
  uint64_t v18 = sub_100556B74(v4, (uint64_t)qword_10171B448);
  swift_beginAccess();
  v15(v8, v18, v4);
  Tips.Rule.init<A>(_:_:)();
  v25[2] = static Tips.RuleBuilder.buildExpression(_:)();
  v27(v13, v9);
  if (qword_10166F6E0 != -1) {
    swift_once();
  }
  uint64_t v19 = sub_100556B74(v4, (uint64_t)qword_10171B478);
  swift_beginAccess();
  v15(v8, v19, v4);
  Tips.Rule.init<A>(_:_:)();
  v25[1] = static Tips.RuleBuilder.buildExpression(_:)();
  v27(v13, v9);
  if (qword_10166F6B8 != -1) {
    swift_once();
  }
  uint64_t v20 = sub_100556B74(v0, (uint64_t)qword_10171B400);
  uint64_t v21 = *(void (**)(char *, uint64_t, uint64_t))(v26 + 16);
  v21(v3, v20, v0);
  type metadata accessor for Tips.EmptyDonation();
  sub_1006A1230(&qword_10167A2C8);
  sub_1006A1230(&qword_10167A2D0);
  Tips.Rule.init<A>(_:_:)();
  uint64_t v26 = static Tips.RuleBuilder.buildExpression(_:)();
  v27(v13, v9);
  if (qword_10166F6E8 != -1) {
    swift_once();
  }
  uint64_t v22 = sub_100556B74(v0, (uint64_t)qword_10171B490);
  v21(v3, v22, v0);
  Tips.Rule.init<A>(_:_:)();
  static Tips.RuleBuilder.buildExpression(_:)();
  v27(v13, v9);
  static Tips.RuleBuilder.buildPartialBlock(first:)();
  swift_bridgeObjectRelease();
  static Tips.RuleBuilder.buildPartialBlock(accumulated:next:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  static Tips.RuleBuilder.buildPartialBlock(accumulated:next:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  static Tips.RuleBuilder.buildPartialBlock(accumulated:next:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  static Tips.RuleBuilder.buildPartialBlock(accumulated:next:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  static Tips.RuleBuilder.buildPartialBlock(accumulated:next:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v23 = static Tips.RuleBuilder.buildPartialBlock(accumulated:next:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v23;
}

uint64_t sub_100A142BC(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100522D34(a2);
    a3();
    sub_100523288(&qword_10167A340, &qword_10167A2D8);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100A14360@<X0>(uint64_t a1@<X8>)
{
  uint64_t v41 = a1;
  uint64_t v43 = type metadata accessor for Locale();
  uint64_t v1 = *(void *)(v43 - 8);
  __chkstk_darwin(v43, v2);
  uint64_t v42 = &v39[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v4 = sub_1005057FC(&qword_1016741B8);
  __chkstk_darwin(v4 - 8, v5);
  uint64_t v7 = &v39[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = sub_1005057FC(&qword_10168C0A8);
  __chkstk_darwin(v8 - 8, v9);
  uint64_t v44 = &v39[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v11 = type metadata accessor for Date();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11, v13);
  uint64_t v15 = &v39[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v16 = type metadata accessor for TimeZone();
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16, v18);
  uint64_t v20 = &v39[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (qword_10166EDC8 != -1) {
    swift_once();
  }
  uint64_t v21 = (unsigned __int8 *)(static AASApplicationManager.shared
                          + OBJC_IVAR____TtC8Freeform21AASApplicationManager_isSaltRegenerated);
  swift_beginAccess();
  int v40 = *v21;
  id v22 = [self defaultManager];
  id v23 = [v22 ubiquityIdentityToken];
  swift_unknownObjectRelease();

  static TimeZone.current.getter();
  Date.init()();
  uint64_t v24 = TimeZone.secondsFromGMT(for:)();
  (*(void (**)(unsigned char *, uint64_t))(v12 + 8))(v15, v11);
  (*(void (**)(unsigned char *, uint64_t))(v17 + 8))(v20, v16);
  if (v24 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
    goto LABEL_16;
  }
  if (v24 > 0x7FFFFFFF)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  id v25 = [self currentLocale];
  if (!v25)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  uint64_t v26 = v25;
  id v27 = [v25 locale];

  uint64_t v28 = (uint64_t)v44;
  if (!v27)
  {
LABEL_18:
    uint64_t result = (*(uint64_t (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v1 + 56))(v7, 1, 1, v43);
    goto LABEL_19;
  }
  uint64_t v29 = v42;
  static Locale._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v30 = v29;
  uint64_t v31 = v43;
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v1 + 32))(v7, v30, v43);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v1 + 56))(v7, 0, 1, v31);
  uint64_t result = (*(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v1 + 48))(v7, 1, v31);
  if (result == 1)
  {
LABEL_19:
    __break(1u);
    return result;
  }
  Locale.region.getter();
  (*(void (**)(unsigned char *, uint64_t))(v1 + 8))(v7, v31);
  uint64_t v33 = type metadata accessor for Locale.Region();
  uint64_t v34 = *(void *)(v33 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v34 + 48))(v28, 1, v33) == 1)
  {
    sub_100522F00(v28, &qword_10168C0A8);
    unint64_t v35 = 0xE700000000000000;
    uint64_t v36 = 0x6E776F6E6B6E75;
  }
  else
  {
    uint64_t v36 = Locale.Region.identifier.getter();
    unint64_t v35 = v37;
    (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v28, v33);
  }
  int v45 = v24;
  if (v23) {
    char v38 = 1;
  }
  else {
    char v38 = 2;
  }
  uint64_t v46 = v36;
  unint64_t v47 = v35;
  char v48 = v38;
  char v49 = v40;
  sub_100A14EDC();
  return SessionData.init(key:data:)();
}

uint64_t sub_100A148E4(uint64_t a1)
{
  v1[11] = a1;
  sub_1005057FC(&qword_101677B60);
  v1[12] = swift_task_alloc();
  uint64_t v2 = type metadata accessor for AASUserInfo();
  v1[13] = v2;
  v1[14] = *(void *)(v2 - 8);
  v1[15] = swift_task_alloc();
  sub_1005057FC(&qword_10168C0C0);
  uint64_t v3 = swift_task_alloc();
  v1[16] = v3;
  uint64_t v4 = (void *)swift_task_alloc();
  v1[17] = v4;
  *uint64_t v4 = v1;
  v4[1] = sub_100A14A40;
  return static Storefront.current.getter(v3);
}

uint64_t sub_100A14A40()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_100A14B3C, 0, 0);
}

uint64_t sub_100A14B3C()
{
  uint64_t v1 = *(void *)(v0 + 128);
  uint64_t v2 = type metadata accessor for Storefront();
  uint64_t v3 = *(void *)(v2 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1)
  {
    sub_100522F00(v1, &qword_10168C0C0);
    unint64_t v4 = 0xE700000000000000;
    uint64_t v5 = 0x6E776F6E6B6E75;
  }
  else
  {
    uint64_t v5 = Storefront.id.getter();
    unint64_t v4 = v6;
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  }
  if (qword_10166EDC8 != -1) {
    swift_once();
  }
  uint64_t v7 = *(void *)(v0 + 104);
  uint64_t v8 = *(void *)(v0 + 112);
  uint64_t v9 = *(void *)(v0 + 96);
  uint64_t v10 = static AASApplicationManager.shared;
  uint64_t v11 = static AASApplicationManager.shared + OBJC_IVAR____TtC8Freeform21AASApplicationManager_userInfo;
  swift_beginAccess();
  sub_10063C16C(v11, v9);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v9, 1, v7) == 1)
  {
    uint64_t v12 = *(void *)(v0 + 96);
    swift_bridgeObjectRelease();
    sub_100522F00(v12, &qword_101677B60);
    uint64_t v13 = 1;
  }
  else
  {
    uint64_t v14 = *(void *)(v0 + 120);
    sub_100695F28(*(void *)(v0 + 96), v14);
    uint64_t v15 = UUID.uuidString.getter();
    uint64_t v16 = *(void *)(v10 + OBJC_IVAR____TtC8Freeform21AASApplicationManager_userSamplingManager);
    int v17 = *(_DWORD *)(v16 + 20);
    LOBYTE(v16) = *(unsigned char *)(v16 + 24);
    *(void *)(v0 + 16) = v15;
    *(void *)(v0 + 24) = v18;
    *(void *)(v0 + 32) = -1;
    *(void *)(v0 + 40) = v5;
    *(void *)(v0 + 48) = v4;
    *(_DWORD *)(v0 + 56) = v17;
    *(unsigned char *)(v0 + 60) = v16;
    sub_100A14F30();
    SessionData.init(key:data:)();
    sub_10063F4F4(v14);
    uint64_t v13 = 0;
  }
  uint64_t v19 = *(void *)(v0 + 88);
  uint64_t v20 = sub_1005057FC(&qword_10168C0C8);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v19, v13, 1, v20);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v21 = *(uint64_t (**)(void))(v0 + 8);
  return v21();
}

uint64_t sub_100A14E20()
{
  uint64_t v0 = self;
  if (objc_msgSend(v0, "crl_phoneDevice"))
  {
    uint64_t v1 = 1;
  }
  else if (objc_msgSend(v0, "crl_iPadDevice"))
  {
    uint64_t v1 = 2;
  }
  else
  {
    uint64_t v1 = 0;
  }
  id v2 = [v0 crl_platformString];
  static String._unconditionallyBridgeFromObjectiveC(_:)();

  [self isInternalOSInstall];
  return v1;
}

unint64_t sub_100A14EDC()
{
  unint64_t result = qword_10168C0B0;
  if (!qword_10168C0B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_10168C0B0);
  }
  return result;
}

unint64_t sub_100A14F30()
{
  unint64_t result = qword_10168C0D0;
  if (!qword_10168C0D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168C0D0);
  }
  return result;
}

uint64_t initializeWithCopy for AASSessionPropertiesProvider(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for AASSessionPropertiesProvider(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  return a1;
}

uint64_t assignWithTake for AASSessionPropertiesProvider(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  return a1;
}

uint64_t getEnumTagSinglePayload for AASSessionPropertiesProvider(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 25)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AASSessionPropertiesProvider(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(unsigned char *)(result + 24) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 25) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 25) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AASSessionPropertiesProvider()
{
  return &type metadata for AASSessionPropertiesProvider;
}

uint64_t sub_100A15108()
{
  uint64_t v1 = *(void *)(v0 + 24);
  uint64_t v2 = *(void *)(v1 + 16);
  if (!v2) {
    return 16;
  }
  uint64_t v3 = 0;
  uint64_t v4 = (uint64_t *)(v1 + 48);
  while (2)
  {
    uint64_t v5 = *(v4 - 1);
    uint64_t v6 = *v4;
    unint64_t v7 = (unint64_t)*v4 >> 62;
    v4 += 3;
    uint64_t v8 = 0;
    switch(v7)
    {
      case 1uLL:
        LODWORD(v8) = HIDWORD(v5) - v5;
        if (__OFSUB__(HIDWORD(v5), v5)) {
          goto LABEL_17;
        }
        uint64_t v8 = (int)v8;
LABEL_8:
        BOOL v12 = __OFADD__(v8, 24);
        uint64_t v13 = v8 + 24;
        if (v12) {
          goto LABEL_15;
        }
        BOOL v12 = __OFADD__(v3, v13);
        v3 += v13;
        if (v12) {
          goto LABEL_16;
        }
        if (--v2) {
          continue;
        }
        uint64_t result = v3 + 16;
        if (__OFADD__(v3, 16))
        {
          __break(1u);
LABEL_15:
          __break(1u);
LABEL_16:
          __break(1u);
LABEL_17:
          __break(1u);
LABEL_18:
          __break(1u);
          JUMPOUT(0x100A151B8);
        }
        return result;
      case 2uLL:
        uint64_t v11 = v5 + 16;
        uint64_t v10 = *(void *)(v5 + 16);
        uint64_t v9 = *(void *)(v11 + 8);
        BOOL v12 = __OFSUB__(v9, v10);
        uint64_t v8 = v9 - v10;
        if (!v12) {
          goto LABEL_8;
        }
        goto LABEL_18;
      case 3uLL:
        goto LABEL_8;
      default:
        uint64_t v8 = BYTE6(v6);
        goto LABEL_8;
    }
  }
}

uint64_t sub_100A151C8()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1005057FC((uint64_t *)&unk_101674160);
  __chkstk_darwin(v2 - 8, v3);
  uint64_t v64 = (uint64_t)v55 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for CRLProto_RealTimeOpaqueChangeRecord(0);
  __chkstk_darwin(v5, v6);
  uint64_t v8 = (char *)v55 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for CRLProto_Data(0);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9, v11);
  uint64_t v68 = (uint64_t)v55 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13, v14);
  uint64_t v63 = (long long *)((char *)v55 - v15);
  __chkstk_darwin(v16, v17);
  uint64_t v62 = (long long *)((char *)v55 - v18);
  __chkstk_darwin(v19, v20);
  uint64_t v73 = (void *)((char *)v55 - v21);
  uint64_t v22 = type metadata accessor for CRLProto_RealTimeMessage(0);
  __chkstk_darwin(v22, v23);
  id v25 = (void *)((char *)v55 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v26 = _swiftEmptyArrayStorage;
  v25[1] = _swiftEmptyArrayStorage;
  UnknownStorage.init()();
  uint64_t v27 = *(void *)(v1 + 24);
  *id v25 = *(void *)(v1 + 16);
  uint64_t v67 = *(void *)(v27 + 16);
  if (v67)
  {
    v55[1] = v22;
    uint64_t v57 = v25;
    uint64_t v69 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);
    double v70 = v8;
    uint64_t v59 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
    uint64_t v60 = v9;
    uint64_t v56 = swift_bridgeObjectRetain();
    uint64_t v28 = (unint64_t *)(v56 + 48);
    long long v29 = xmmword_101180360;
    uint64_t v30 = v71;
    long long v72 = xmmword_101180360;
    uint64_t v61 = v5;
    uint64_t v58 = v10;
    while (1)
    {
      NSXPCConnection v66 = v26;
      uint64_t v71 = v30;
      uint64_t v32 = *(v28 - 1);
      unint64_t v31 = *v28;
      uint64_t v33 = *(v28 - 2);
      *(_OWORD *)uint64_t v73 = v29;
      uint64_t v34 = v60;
      sub_100510D4C(v32, v31);
      UnknownStorage.init()();
      unint64_t v35 = v70;
      UnknownStorage.init()();
      uint64_t v36 = (uint64_t)v35 + *(int *)(v5 + 24);
      unint64_t v37 = *v69;
      (*v69)(v36, 1, 1, v34);
      *unint64_t v35 = v33;
      uint64_t v38 = (uint64_t)v62;
      *uint64_t v62 = v72;
      UnknownStorage.init()();
      sub_1008A9D98(v36);
      sub_1005CC5B8(v38, v36);
      v37(v36, 0, 1, v34);
      uint64_t v39 = v64;
      sub_1005CC4F0(v36, v64);
      if ((*v59)(v39, 1, v34) == 1)
      {
        int v40 = v63;
        *uint64_t v63 = v72;
        sub_100510D4C(v32, v31);
        UnknownStorage.init()();
        uint64_t v41 = v39;
        uint64_t v42 = v40;
        uint64_t v26 = v66;
        sub_1008A9D98(v41);
        uint64_t v43 = v71;
      }
      else
      {
        uint64_t v44 = v39;
        uint64_t v42 = v63;
        sub_1005CC5B8(v44, (uint64_t)v63);
        sub_100510D4C(v32, v31);
        uint64_t v43 = v71;
        uint64_t v26 = v66;
      }
      sub_100510084(*(void *)v42, *((void *)v42 + 1));
      uint64_t v65 = v32;
      *(void *)uint64_t v42 = v32;
      *((void *)v42 + 1) = v31;
      sub_1008A9D98(v36);
      sub_1005CC5B8((uint64_t)v42, v36);
      v37(v36, 0, 1, v34);
      sub_100A1606C(&qword_10168C1C8, (void (*)(uint64_t))type metadata accessor for CRLProto_RealTimeOpaqueChangeRecord);
      uint64_t v5 = v61;
      uint64_t v45 = (uint64_t)v70;
      uint64_t v46 = Message.serializedData(partial:)();
      uint64_t v30 = v43;
      if (v43) {
        break;
      }
      uint64_t v48 = v46;
      uint64_t v49 = v47;
      sub_100A15FA8(v45, type metadata accessor for CRLProto_RealTimeOpaqueChangeRecord);
      uint64_t v50 = v73;
      sub_100510084(*v73, v73[1]);
      *uint64_t v50 = v48;
      v50[1] = v49;
      sub_100A16008((uint64_t)v50, v68);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v26 = (double *)sub_100F635EC(0, *((void *)v26 + 2) + 1, 1, (unint64_t)v26);
      }
      unint64_t v52 = *((void *)v26 + 2);
      unint64_t v51 = *((void *)v26 + 3);
      if (v52 >= v51 >> 1) {
        uint64_t v26 = (double *)sub_100F635EC(v51 > 1, v52 + 1, 1, (unint64_t)v26);
      }
      v28 += 3;
      *((void *)v26 + 2) = v52 + 1;
      sub_1005CC5B8(v68, (uint64_t)v26+ ((*(unsigned __int8 *)(v58 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v58 + 80))+ *(void *)(v58 + 72) * v52);
      sub_100510084(v65, v31);
      sub_100A15FA8((uint64_t)v73, type metadata accessor for CRLProto_Data);
      --v67;
      long long v29 = v72;
      if (!v67)
      {
        swift_bridgeObjectRelease();
        id v25 = v57;
        goto LABEL_15;
      }
    }
    sub_100A15FA8(v45, type metadata accessor for CRLProto_RealTimeOpaqueChangeRecord);
    sub_100510084(v65, v31);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_100A15FA8((uint64_t)v73, type metadata accessor for CRLProto_Data);
    id v25 = v57;
  }
  else
  {
    uint64_t v30 = v71;
LABEL_15:
    swift_bridgeObjectRelease();
    v25[1] = v26;
    sub_100A1606C(&qword_10168C1D0, (void (*)(uint64_t))type metadata accessor for CRLProto_RealTimeMessage);
    uint64_t v45 = (uint64_t)v25;
    uint64_t v53 = Message.serializedData(partial:)();
    if (!v30)
    {
      uint64_t v45 = v53;
      sub_100A15FA8((uint64_t)v25, type metadata accessor for CRLProto_RealTimeMessage);
      return v45;
    }
  }
  sub_100A15FA8((uint64_t)v25, type metadata accessor for CRLProto_RealTimeMessage);
  return v45;
}

uint64_t sub_100A15874()
{
  if (*v0) {
    return 0x7365676E616863;
  }
  else {
    return 0x6E6F6973726576;
  }
}

uint64_t sub_100A158A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100A1699C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_100A158D0(uint64_t a1)
{
  unint64_t v2 = sub_100A15E3C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100A1590C(uint64_t a1)
{
  unint64_t v2 = sub_100A15E3C();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100A15948()
{
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for CRLRealTimeMessage()
{
  return self;
}

uint64_t sub_100A159A4(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_1005057FC(&qword_10168C1B0);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5, v7);
  uint64_t v9 = &v11[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10050F848(a1, a1[3]);
  sub_100A15E3C();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  char v13 = 0;
  KeyedEncodingContainer.encode(_:forKey:)();
  if (!v2)
  {
    uint64_t v12 = *(void *)(v3 + 24);
    v11[15] = 1;
    sub_1005057FC(&qword_10168C198);
    sub_100A15EE4(&qword_10168C1B8, (void (*)(void))sub_100A15F54);
    KeyedEncodingContainer.encode<A>(_:forKey:)();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v9, v5);
}

uint64_t sub_100A15B58(void *a1)
{
  uint64_t v4 = sub_1005057FC(&qword_10168C188);
  v10[0] = *(void *)(v4 - 8);
  __chkstk_darwin(v4, v5);
  uint64_t v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10050F848(a1, a1[3]);
  sub_100A15E3C();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v2)
  {
    swift_deallocPartialClassInstance();
  }
  else
  {
    uint64_t v8 = v10[0];
    char v12 = 0;
    *(void *)(v1 + 16) = KeyedDecodingContainer.decode(_:forKey:)();
    sub_1005057FC(&qword_10168C198);
    char v11 = 1;
    sub_100A15EE4(&qword_10168C1A0, (void (*)(void))sub_100A15E90);
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v7, v4);
    *(void *)(v1 + 24) = v10[1];
  }
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)a1);
  return v1;
}

uint64_t sub_100A15D94@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = swift_allocObject();
  uint64_t result = sub_100A15B58(a1);
  if (!v2) {
    *a2 = v5;
  }
  return result;
}

uint64_t sub_100A15DEC(void *a1)
{
  return sub_100A159A4(a1);
}

uint64_t sub_100A15E10(uint64_t a1, uint64_t a2)
{
  if (*(void *)(*(void *)a1 + 16) == *(void *)(*(void *)a2 + 16)) {
    return sub_1005BC434(*(void *)(*(void *)a1 + 24), *(void *)(*(void *)a2 + 24));
  }
  else {
    return 0;
  }
}

unint64_t sub_100A15E3C()
{
  unint64_t result = qword_10168C190;
  if (!qword_10168C190)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168C190);
  }
  return result;
}

unint64_t sub_100A15E90()
{
  unint64_t result = qword_10168C1A8;
  if (!qword_10168C1A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168C1A8);
  }
  return result;
}

uint64_t sub_100A15EE4(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100522D34(&qword_10168C198);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100A15F54()
{
  unint64_t result = qword_10168C1C0;
  if (!qword_10168C1C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168C1C0);
  }
  return result;
}

uint64_t sub_100A15FA8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_100A16008(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CRLProto_Data(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100A1606C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100A160B4(uint64_t a1, unint64_t a2)
{
  uint64_t v4 = sub_1005057FC((uint64_t *)&unk_101674160);
  __chkstk_darwin(v4 - 8, v5);
  uint64_t v63 = (uint64_t)&v50 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v65 = type metadata accessor for CRLProto_RealTimeOpaqueChangeRecord(0);
  __chkstk_darwin(v65, v7);
  uint64_t v64 = (char *)&v50 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for CRLProto_Data(0);
  uint64_t v57 = *(void *)(v9 - 8);
  __chkstk_darwin(v9, v10);
  char v12 = (long long *)((char *)&v50 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v13, v14);
  uint64_t v16 = (uint64_t *)((char *)&v50 - v15);
  uint64_t v17 = type metadata accessor for BinaryDecodingOptions();
  __chkstk_darwin(v17 - 8, v18);
  uint64_t v20 = (char *)&v50 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21, v22);
  uint64_t v23 = type metadata accessor for CRLProto_RealTimeMessage(0);
  __chkstk_darwin(v23, v24);
  uint64_t v26 = (uint64_t *)((char *)&v50 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v68 = 0;
  long long v66 = 0u;
  long long v67 = 0u;
  sub_100510D4C(a1, a2);
  BinaryDecodingOptions.init()();
  sub_100A1606C(&qword_10168C1D0, (void (*)(uint64_t))type metadata accessor for CRLProto_RealTimeMessage);
  uint64_t v27 = v69;
  Message.init(serializedData:extensions:partial:options:)();
  if (v27) {
    return sub_100510084(a1, a2);
  }
  uint64_t v61 = v20;
  uint64_t v62 = v16;
  uint64_t v59 = v12;
  uint64_t v60 = v9;
  uint64_t v30 = *v26;
  uint64_t v29 = v26[1];
  uint64_t v31 = *(void *)(v29 + 16);
  if (v31)
  {
    uint64_t v51 = *v26;
    unint64_t v52 = v26;
    uint64_t v53 = v29;
    uint64_t v54 = a1;
    unint64_t v55 = a2;
    uint64_t v32 = v29 + ((*(unsigned __int8 *)(v57 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v57 + 80));
    uint64_t v33 = *(void *)(v57 + 72);
    v57 += 48;
    uint64_t v58 = v33;
    swift_bridgeObjectRetain();
    uint64_t v69 = _swiftEmptyArrayStorage;
    long long v56 = xmmword_101180360;
    uint64_t v34 = v62;
    while (1)
    {
      sub_100A16008(v32, (uint64_t)v34);
      uint64_t v36 = *v34;
      unint64_t v35 = v34[1];
      sub_100510D4C(*v34, v35);
      sub_100A15FA8((uint64_t)v34, type metadata accessor for CRLProto_Data);
      uint64_t v68 = 0;
      long long v66 = 0u;
      long long v67 = 0u;
      sub_100510D4C(v36, v35);
      BinaryDecodingOptions.init()();
      sub_100A1606C(&qword_10168C1C8, (void (*)(uint64_t))type metadata accessor for CRLProto_RealTimeOpaqueChangeRecord);
      unint64_t v37 = (uint64_t *)v64;
      Message.init(serializedData:extensions:partial:options:)();
      uint64_t v38 = *v37;
      if ((unint64_t)*v37 >= 6) {
        break;
      }
      uint64_t v39 = v63;
      sub_1005CC4F0((uint64_t)v37 + *(int *)(v65 + 24), v63);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))v57)(v39, 1, v60) == 1)
      {
        int v40 = (uint64_t *)v59;
        *uint64_t v59 = v56;
        uint64_t v41 = v40;
        UnknownStorage.init()();
        sub_1008A9D98(v39);
      }
      else
      {
        uint64_t v41 = (uint64_t *)v59;
        sub_1005CC5B8(v39, (uint64_t)v59);
      }
      sub_100510084(v36, v35);
      sub_100A15FA8((uint64_t)v37, type metadata accessor for CRLProto_RealTimeOpaqueChangeRecord);
      uint64_t v42 = *v41;
      unint64_t v43 = v41[1];
      sub_100510D4C(*v41, v43);
      sub_100A15FA8((uint64_t)v41, type metadata accessor for CRLProto_Data);
      if (swift_isUniquelyReferenced_nonNull_native())
      {
        uint64_t v34 = v62;
        uint64_t v44 = v69;
      }
      else
      {
        uint64_t v44 = sub_100F6347C(0, *((void *)v69 + 2) + 1, 1, v69);
        uint64_t v34 = v62;
      }
      unint64_t v46 = *((void *)v44 + 2);
      unint64_t v45 = *((void *)v44 + 3);
      if (v46 >= v45 >> 1) {
        uint64_t v44 = sub_100F6347C((double *)(v45 > 1), v46 + 1, 1, v44);
      }
      *((void *)v44 + 2) = v46 + 1;
      uint64_t v69 = v44;
      uint64_t v47 = &v44[3 * v46];
      *((void *)v47 + 4) = v38;
      *((void *)v47 + 5) = v42;
      *((void *)v47 + 6) = v43;
      v32 += v58;
      if (!--v31)
      {
        sub_100510084(v54, v55);
        swift_bridgeObjectRelease();
        uint64_t v26 = v52;
        uint64_t v49 = v69;
        uint64_t v30 = v51;
        goto LABEL_18;
      }
    }
    sub_100A1673C();
    swift_allocError();
    *uint64_t v48 = v38;
    swift_willThrow();
    sub_100510084(v36, v35);
    sub_100A15FA8((uint64_t)v37, type metadata accessor for CRLProto_RealTimeOpaqueChangeRecord);
    sub_100510084(v54, v55);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return sub_100A15FA8((uint64_t)v52, type metadata accessor for CRLProto_RealTimeMessage);
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_100510084(a1, a2);
    swift_bridgeObjectRelease();
    uint64_t v49 = _swiftEmptyArrayStorage;
LABEL_18:
    sub_100A15FA8((uint64_t)v26, type metadata accessor for CRLProto_RealTimeMessage);
    type metadata accessor for CRLRealTimeMessage();
    uint64_t result = swift_allocObject();
    *(void *)(result + 16) = v30;
    *(void *)(result + 24) = v49;
  }
  return result;
}

unint64_t sub_100A1673C()
{
  unint64_t result = qword_10168C1D8;
  if (!qword_10168C1D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168C1D8);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for CRLRealTimeMessage.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100A1685CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLRealTimeMessage.CodingKeys()
{
  return &type metadata for CRLRealTimeMessage.CodingKeys;
}

unint64_t sub_100A16898()
{
  unint64_t result = qword_10168C1E0;
  if (!qword_10168C1E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168C1E0);
  }
  return result;
}

unint64_t sub_100A168F0()
{
  unint64_t result = qword_10168C1E8;
  if (!qword_10168C1E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168C1E8);
  }
  return result;
}

unint64_t sub_100A16948()
{
  unint64_t result = qword_10168C1F0;
  if (!qword_10168C1F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168C1F0);
  }
  return result;
}

uint64_t sub_100A1699C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6E6F6973726576 && a2 == 0xE700000000000000;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7365676E616863 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

id sub_100A16AE4()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLObservableDelta();
  return [super dealloc];
}

uint64_t type metadata accessor for CRLObservableDelta()
{
  return self;
}

void __swiftcall CRLCanvas.textRenderer(forLayer:context:)(CRLWPRenderer *__return_ptr retstr, CALayer_optional forLayer, CGContextRef context)
{
}

void CRLWPRep.hyperlinkRegions.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for URL();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2, v4);
  uint64_t v86 = (char *)&v86 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6, v7);
  uint64_t v9 = (char *)&v86 - v8;
  uint64_t v10 = sub_1005057FC(&qword_101672E90);
  __chkstk_darwin(v10 - 8, v11);
  uint64_t v13 = (char *)&v86 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14, v15);
  uint64_t v17 = (char *)&v86 - v16;
  uint64_t v18 = sub_1005057FC((uint64_t *)&unk_10167BE90);
  __chkstk_darwin(v18 - 8, v19);
  uint64_t v21 = (char *)&v86 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v111 = type metadata accessor for CRLWPHyperlinkSmartFieldData(0);
  float64_t v108 = *(char **)(v111 - 8);
  *(void *)&double v23 = __chkstk_darwin(v111, v22).n128_u64[0];
  uint64_t v100 = (uint64_t)&v86 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v113.receiver = v1;
  v113.super_class = (Class)CRLWPRep;
  id v25 = [super hyperlinkRegions:v23];
  sub_10050BF48(0, &qword_10168C228);
  uint64_t v26 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v114 = v26;
  id v27 = [v1 storage];
  id v93 = v1;
  id v28 = [v1 range];
  id v30 = [v27 smartFieldsWithAttributeKind:6 intersectingRange:v28, v29];

  unsigned int v102 = (char *)&type metadata for Any + 8;
  uint64_t v31 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v101 = *(void *)(v31 + 16);
  if (!v101)
  {
LABEL_40:
    swift_bridgeObjectRelease();
    return;
  }
  unint64_t v32 = 0;
  uint64_t v98 = v108 + 56;
  uint64_t v99 = v31 + 32;
  uint64_t v97 = (uint64_t (**)(char *, uint64_t, uint64_t))(v3 + 48);
  uint64_t v87 = (void (**)(char *, uint64_t))(v3 + 8);
  uint64_t v88 = (void (**)(char *, char *, uint64_t))(v3 + 32);
  uint64_t v89 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56);
  uint64_t v92 = v2;
  uint64_t v94 = v17;
  uint64_t v33 = v111;
  float64_t v109 = v9;
  uint64_t v90 = v13;
  float64_t v110 = v21;
  uint64_t v91 = v31;
  while (1)
  {
    if (v32 >= *(void *)(v31 + 16)) {
      goto LABEL_43;
    }
    unint64_t v107 = v32;
    sub_100522D7C(v99 + 32 * v32, (uint64_t)v112);
    char v34 = swift_dynamicCast();
    unint64_t v35 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))v98;
    if (v34) {
      break;
    }
    v35(v21, 1, 1, v33);
    sub_100522F00((uint64_t)v21, (uint64_t *)&unk_10167BE90);
LABEL_4:
    unint64_t v32 = v107 + 1;
    if (v107 + 1 == v101) {
      goto LABEL_40;
    }
  }
  v35(v21, 0, 1, v33);
  uint64_t v36 = v100;
  sub_1009197F0((uint64_t)v21, v100);
  uint64_t v37 = v33;
  id v38 = [v93 storage];
  uint64_t v39 = (uint64_t *)(v36 + *(int *)(v37 + 24));
  uint64_t v40 = v39[1];
  id v105 = (id)*v39;
  uint64_t v41 = v2;
  uint64_t v42 = (char *)sub_1009068B8((uint64_t)v105, v40);
  unint64_t v44 = v43;
  sub_1005F7C80(v36 + *(int *)(v37 + 20), (uint64_t)v17);
  float64_t v108 = v42;
  unint64_t v106 = v44;
  id v45 = [v38 stringEquivalentFromRange:v42, v44];
  static String._unconditionallyBridgeFromObjectiveC(_:)();

  id v104 = *v97;
  LODWORD(v45) = v104(v17, 1, v41);
  swift_bridgeObjectRetain();
  if (v45 == 1)
  {
    uint64_t v47 = 0;
  }
  else
  {
    URL._bridgeToObjectiveC()(v46);
    uint64_t v47 = v48;
    (*v87)(v17, v41);
  }
  id v49 = objc_allocWithZone((Class)CRLWPHyperlinkField);
  NSString v50 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  NSString v51 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v52 = [v49 initWithURL:v47 range:v108 displayText:v106 uuidString:v50, v51];

  id v53 = [v52 url];
  if (!v53)
  {
    uint64_t v57 = (uint64_t)v90;
    uint64_t v2 = v92;
    (*v89)(v90, 1, 1, v92);
    uint64_t v17 = v94;
    uint64_t v21 = v110;
    uint64_t v31 = v91;
    goto LABEL_36;
  }
  uint64_t v54 = v53;
  unint64_t v55 = v86;
  static URL._unconditionallyBridgeFromObjectiveC(_:)();

  long long v56 = *v88;
  uint64_t v57 = (uint64_t)v90;
  uint64_t v58 = v55;
  uint64_t v2 = v92;
  (*v88)(v90, v58, v92);
  (*v89)((char *)v57, 0, 1, v2);
  int v59 = v104((char *)v57, 1, v2);
  uint64_t v60 = v109;
  uint64_t v21 = v110;
  uint64_t v17 = v94;
  uint64_t v31 = v91;
  if (v59 == 1)
  {
LABEL_36:

    sub_100A17A14(v100);
    sub_100522F00(v57, &qword_101672E90);
    uint64_t v33 = v111;
    goto LABEL_4;
  }
  v56(v109, (char *)v57, v2);
  id v61 = [v52 range];
  float64_t v108 = (char *)[objc_allocWithZone((Class)CRLWPSelection) initWithRange:v61, v62];
  if (!v108)
  {

    (*v87)(v60, v2);
    sub_100A17A14(v100);
    uint64_t v33 = v111;
    uint64_t v17 = v94;
    goto LABEL_4;
  }
  id v63 = [objc_allocWithZone((Class)CRLBezierPath) init];
  id v64 = [v93 columns];
  sub_10050BF48(0, (unint64_t *)&unk_10167BC10);
  unint64_t v65 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  unint64_t v103 = v65;
  if (!(v65 >> 62))
  {
    uint64_t v66 = *(void *)((v65 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t v33 = v111;
    if (v66) {
      goto LABEL_15;
    }
    goto LABEL_39;
  }
  swift_bridgeObjectRetain();
  uint64_t v66 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  uint64_t v33 = v111;
  if (!v66)
  {
LABEL_39:

    swift_bridgeObjectRelease();
    uint64_t v2 = v92;
    (*v87)(v60, v92);
    sub_100A17A14(v100);
    uint64_t v17 = v94;
    uint64_t v31 = v91;
    goto LABEL_4;
  }
LABEL_15:
  unint64_t v67 = 0;
  unint64_t v106 = v103 & 0xC000000000000001;
  uint64_t v96 = v103 & 0xFFFFFFFFFFFFFF8;
  unint64_t v95 = v103 + 32;
  id v104 = (uint64_t (*)(char *, uint64_t, uint64_t))v66;
  id v105 = v52;
  while (2)
  {
    if (v106)
    {
      id v68 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else
    {
      if (v67 >= *(void *)(v96 + 16)) {
        goto LABEL_44;
      }
      id v68 = *(id *)(v95 + 8 * v67);
    }
    uint64_t v69 = v68;
    if (!__OFADD__(v67++, 1))
    {
      uint64_t v71 = v108;
      id v72 = [v108 range];
      id v74 = [v69 rectsForSelectionRange:v72 selectionType:v73 forParagraphMode:[v71 type] includeRuby:0 includePaginatedAttachments:0];
      if (!v74) {
        goto LABEL_45;
      }
      id v75 = v74;
      sub_10050BF48(0, (unint64_t *)&qword_10167AF10);
      unint64_t v76 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

      if (v76 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v77 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        if (v77)
        {
LABEL_24:
          if (v77 < 1) {
            goto LABEL_42;
          }
          uint64_t v78 = 0;
          do
          {
            if ((v76 & 0xC000000000000001) != 0) {
              id v79 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
            }
            else {
              id v79 = *(id *)(v76 + 8 * v78 + 32);
            }
            uint64_t v80 = v79;
            ++v78;
            [v79 CGRectValue];
            [v63 appendBezierPathWithRect:];
          }
          while (v77 != v78);
        }
      }
      else
      {
        uint64_t v77 = *(void *)((v76 & 0xFFFFFFFFFFFFFF8) + 0x10);
        if (v77) {
          goto LABEL_24;
        }
      }
      swift_bridgeObjectRelease();
      id v81 = objc_allocWithZone((Class)CRLHyperlinkRegion);
      id v82 = v63;
      uint64_t v60 = v109;
      URL._bridgeToObjectiveC()(v83);
      uint64_t v85 = v84;
      [v81 initWithURL:v84 bezierPath:v82];

      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)((v114 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v114 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();

      id v52 = v105;
      uint64_t v21 = v110;
      uint64_t v33 = v111;
      if ((uint64_t (*)(char *, uint64_t, uint64_t))v67 == v104) {
        goto LABEL_39;
      }
      continue;
    }
    break;
  }
  __break(1u);
LABEL_42:
  __break(1u);
LABEL_43:
  __break(1u);
LABEL_44:
  __break(1u);
LABEL_45:
  __break(1u);
}

void sub_100A177BC()
{
  id v1 = [v0 columns];
  sub_10050BF48(0, (unint64_t *)&unk_10167BC10);
  unint64_t v2 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v3 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  CGFloat x = CGRectNull.origin.x;
  CGFloat y = CGRectNull.origin.y;
  CGFloat width = CGRectNull.size.width;
  CGFloat height = CGRectNull.size.height;
  if (!v3)
  {
LABEL_12:
    swift_bridgeObjectRelease();
    return;
  }
  if (v3 >= 1)
  {
    uint64_t v8 = 0;
    CGFloat v22 = CGRectNull.origin.y;
    CGFloat v20 = CGRectNull.size.height;
    CGFloat v21 = CGRectNull.size.width;
    do
    {
      if ((v2 & 0xC000000000000001) != 0) {
        id v9 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v9 = *(id *)(v2 + 8 * v8 + 32);
      }
      uint64_t v10 = v9;
      v23.origin.CGFloat x = x;
      v23.origin.CGFloat y = y;
      v23.size.CGFloat width = width;
      v23.size.CGFloat height = height;
      v26.origin.CGFloat y = v22;
      v26.origin.CGFloat x = CGRectNull.origin.x;
      v26.size.CGFloat height = v20;
      v26.size.CGFloat width = v21;
      BOOL v11 = CGRectEqualToRect(v23, v26);
      [v10 typographicBounds];
      CGFloat v13 = v12;
      CGFloat v15 = v14;
      CGFloat v17 = v16;
      CGFloat v19 = v18;
      if (!v11)
      {
        v24.origin.CGFloat x = x;
        v24.origin.CGFloat y = y;
        v24.size.CGFloat width = width;
        v24.size.CGFloat height = height;
        v27.origin.CGFloat x = v13;
        v27.origin.CGFloat y = v15;
        v27.size.CGFloat width = v17;
        v27.size.CGFloat height = v19;
        CGRect v25 = CGRectUnion(v24, v27);
        CGFloat v13 = v25.origin.x;
        CGFloat v15 = v25.origin.y;
        CGFloat v17 = v25.size.width;
        CGFloat v19 = v25.size.height;
      }
      ++v8;

      CGFloat x = v13;
      CGFloat y = v15;
      CGFloat width = v17;
      CGFloat height = v19;
    }
    while (v3 != v8);
    goto LABEL_12;
  }
  __break(1u);
}

uint64_t sub_100A17A14(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for CRLWPHyperlinkSmartFieldData(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t destroy for AASSessionPropertiesController()
{
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for AASSessionPropertiesController(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v3 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v3;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for AASSessionPropertiesController(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  return a1;
}

__n128 initializeWithTake for AASSessionPropertiesController(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for AASSessionPropertiesController(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for AASSessionPropertiesController(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 33)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AASSessionPropertiesController(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(unsigned char *)(result + 32) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 33) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 33) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AASSessionPropertiesController()
{
  return &type metadata for AASSessionPropertiesController;
}

uint64_t sub_100A17C7C()
{
  id v1 = (void *)v0;
  uint64_t v2 = sub_1005057FC(&qword_101677BE0);
  uint64_t v70 = *(void *)(v2 - 8);
  uint64_t v71 = v2;
  __chkstk_darwin(v2, v3);
  id v74 = (char *)v60 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v68 = v4;
  __chkstk_darwin(v5, v6);
  id v75 = (char *)v60 - v7;
  uint64_t v73 = sub_1005057FC(&qword_10168C230);
  uint64_t v69 = *(void *)(v73 - 8);
  __chkstk_darwin(v73, v8);
  uint64_t v65 = v9;
  uint64_t v66 = (char *)v60 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10, v11);
  CGFloat v13 = (char *)v60 - v12;
  uint64_t v72 = sub_1005057FC(&qword_10168C238);
  uint64_t v67 = *(void *)(v72 - 8);
  __chkstk_darwin(v72, v14);
  uint64_t v63 = v15;
  id v64 = (char *)v60 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16, v17);
  CGFloat v19 = (char *)v60 - v18;
  char v20 = *(unsigned char *)(v0 + 8);
  uint64_t v22 = *(void *)(v0 + 16);
  unint64_t v21 = *(void *)(v0 + 24);
  char v23 = *(unsigned char *)(v0 + 32);
  swift_bridgeObjectRetain();
  id v24 = sub_1000772F0();
  uint64_t v25 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v27 = v26;

  uint64_t v76 = v22;
  unint64_t v77 = v21;
  LOBYTE(v78) = v20;
  uint64_t v79 = v25;
  uint64_t v80 = v27;
  char v81 = v23 & 1;
  sub_100A18238();
  SessionData.init(key:data:)();
  type metadata accessor for Client();
  id v28 = [self mainBundle];
  uint64_t v29 = (void *)Client.__allocating_init(bundle:)();
  uint64_t v30 = Client.version.getter();
  unint64_t v32 = v31;
  uint64_t v33 = Client.buildNumber.getter();
  uint64_t v76 = v30;
  unint64_t v77 = v32;
  uint64_t v78 = v33;
  uint64_t v79 = v34;
  sub_100A1828C();
  unint64_t v35 = v13;
  SessionData.init(key:data:)();

  id v36 = [self standardUserDefaults];
  NSString v37 = String._bridgeToObjectiveC()();
  id v38 = [v36 stringForKey:v37];

  if (v38)
  {
    uint64_t v39 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v41 = v40;
  }
  else
  {
    uint64_t v39 = 0;
    unint64_t v41 = 0xE000000000000000;
  }
  uint64_t v76 = v39;
  unint64_t v77 = v41;
  sub_10063F130();
  uint64_t v42 = v75;
  SessionData.init(key:data:)();
  v60[1] = *v1;
  uint64_t v43 = v67;
  unint64_t v44 = *(void (**)(char *, char *, uint64_t))(v67 + 16);
  id v45 = v64;
  uint64_t v62 = v19;
  v44(v64, v19, v72);
  uint64_t v46 = v69;
  uint64_t v47 = *(void (**)(char *, char *, uint64_t))(v69 + 16);
  uint64_t v48 = v66;
  id v61 = v35;
  v47(v66, v35, v73);
  uint64_t v50 = v70;
  uint64_t v49 = v71;
  (*(void (**)(char *, char *, uint64_t))(v70 + 16))(v74, v42, v71);
  unint64_t v51 = (*(unsigned __int8 *)(v43 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v43 + 80);
  unint64_t v52 = (v63 + *(unsigned __int8 *)(v46 + 80) + v51) & ~(unint64_t)*(unsigned __int8 *)(v46 + 80);
  unint64_t v53 = (v65 + *(unsigned __int8 *)(v50 + 80) + v52) & ~(unint64_t)*(unsigned __int8 *)(v50 + 80);
  uint64_t v54 = swift_allocObject();
  unint64_t v55 = v54 + v51;
  uint64_t v56 = v72;
  (*(void (**)(unint64_t, char *, uint64_t))(v43 + 32))(v55, v45, v72);
  unint64_t v57 = v54 + v52;
  uint64_t v58 = v73;
  (*(void (**)(unint64_t, char *, uint64_t))(v46 + 32))(v57, v48, v73);
  (*(void (**)(unint64_t, char *, uint64_t))(v50 + 32))(v54 + v53, v74, v49);
  SessionManager.transaction(_:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v50 + 8))(v75, v49);
  (*(void (**)(char *, uint64_t))(v46 + 8))(v61, v58);
  return (*(uint64_t (**)(char *, uint64_t))(v43 + 8))(v62, v56);
}

unint64_t sub_100A18238()
{
  unint64_t result = qword_10168C240;
  if (!qword_10168C240)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168C240);
  }
  return result;
}

unint64_t sub_100A1828C()
{
  unint64_t result = qword_10168C248;
  if (!qword_10168C248)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_10168C248);
  }
  return result;
}

uint64_t sub_100A182E0()
{
  sub_1005057FC(&qword_10167A078);
  uint64_t v9 = type metadata accessor for DataEventTrait();
  uint64_t v0 = *(void *)(v9 - 8);
  unint64_t v1 = (*(unsigned __int8 *)(v0 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 80);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_10117E810;
  uint64_t v3 = enum case for DataEventTrait.unique(_:);
  uint64_t v4 = *(void (**)(unint64_t, uint64_t, uint64_t))(v0 + 104);
  unsigned int v8 = enum case for DataEventTrait.unique(_:);
  v4(v2 + v1, enum case for DataEventTrait.unique(_:), v9);
  sub_100A18238();
  AccessSessionManager.push<A>(_:traits:file:line:)();
  swift_bridgeObjectRelease();
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_10117E810;
  v4(v5 + v1, v3, v9);
  sub_100A1828C();
  AccessSessionManager.push<A>(_:traits:file:line:)();
  swift_bridgeObjectRelease();
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_10117E810;
  v4(v6 + v1, v8, v9);
  sub_10063F130();
  AccessSessionManager.push<A>(_:traits:file:line:)();

  return swift_bridgeObjectRelease();
}

uint64_t sub_100A1851C()
{
  uint64_t v17 = sub_1005057FC(&qword_10168C238);
  uint64_t v1 = *(void *)(v17 - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(v1 + 64);
  uint64_t v16 = sub_1005057FC(&qword_10168C230);
  uint64_t v5 = *(void *)(v16 - 8);
  uint64_t v6 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = (v3 + v4 + v6) & ~v6;
  uint64_t v8 = *(void *)(v5 + 64);
  uint64_t v9 = sub_1005057FC(&qword_101677BE0);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v12 = (v7 + v8 + v11) & ~v11;
  uint64_t v15 = v12 + *(void *)(v10 + 64);
  uint64_t v13 = v2 | v6 | v11 | 7;
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v0 + v3, v17);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v0 + v7, v16);
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v0 + v12, v9);

  return _swift_deallocObject(v0, v15, v13);
}

uint64_t sub_100A18700()
{
  sub_1005057FC(&qword_10168C238);
  sub_1005057FC(&qword_10168C230);
  sub_1005057FC(&qword_101677BE0);

  return sub_100A182E0();
}

uint64_t sub_100A18844(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[2] = a4;
  uint64_t v5 = sub_1005057FC(&qword_10168C258);
  v4[3] = v5;
  uint64_t v6 = *(void *)(v5 - 8);
  v4[4] = v6;
  v4[5] = *(void *)(v6 + 64);
  v4[6] = swift_task_alloc();
  v4[7] = swift_task_alloc();
  uint64_t v7 = (void *)swift_task_alloc();
  v4[8] = v7;
  *uint64_t v7 = v4;
  v7[1] = sub_100A18950;
  return sub_100A18B90();
}

uint64_t sub_100A18950()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_100A18A4C, 0, 0);
}

uint64_t sub_100A18A4C()
{
  uint64_t v1 = v0[6];
  uint64_t v2 = v0[7];
  uint64_t v3 = v0[4];
  uint64_t v4 = v0[3];
  sub_100A14360(v2);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v1, v2, v4);
  unint64_t v5 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v6 = swift_allocObject();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v3 + 32))(v6 + v5, v1, v4);
  SessionManager.transaction(_:)();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

uint64_t sub_100A18B90()
{
  v1[2] = v0;
  sub_1005057FC(&qword_10168C268);
  uint64_t v2 = swift_task_alloc();
  v1[3] = v2;
  uint64_t v3 = sub_1005057FC(&qword_10168C0C8);
  v1[4] = v3;
  uint64_t v4 = *(void *)(v3 - 8);
  v1[5] = v4;
  v1[6] = *(void *)(v4 + 64);
  v1[7] = swift_task_alloc();
  v1[8] = swift_task_alloc();
  unint64_t v5 = (void *)swift_task_alloc();
  v1[9] = v5;
  *unint64_t v5 = v1;
  v5[1] = sub_100A18D00;
  return sub_100A148E4(v2);
}

uint64_t sub_100A18D00()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_100A18DFC, 0, 0);
}

uint64_t sub_100A18DFC()
{
  uint64_t v1 = v0[4];
  uint64_t v2 = v0[5];
  uint64_t v3 = v0[3];
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_100A194E8(v3);
  }
  else
  {
    uint64_t v5 = v0[7];
    uint64_t v4 = v0[8];
    uint64_t v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 32);
    v6(v4, v3, v1);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v5, v4, v1);
    unint64_t v7 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
    uint64_t v8 = swift_allocObject();
    v6(v8 + v7, v5, v1);
    SessionManager.transaction(_:)();
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v4, v1);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v9 = (uint64_t (*)(void))v0[1];
  return v9();
}

uint64_t sub_100A18F94()
{
  if (qword_10166FA40 != -1) {
    swift_once();
  }
  swift_beginAccess();
  id v0 = (id)static OS_os_log.crlAppAnalytics;
  uint64_t v1 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v0, (uint64_t)&_mh_execute_header, v1, (uint64_t)"update sessionData", 18, 2, (uint64_t)_swiftEmptyArrayStorage);

  sub_1005057FC(&qword_10167A078);
  uint64_t v2 = type metadata accessor for DataEventTrait();
  uint64_t v3 = *(void *)(v2 - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_10117E810;
  (*(void (**)(unint64_t, void, uint64_t))(v3 + 104))(v5 + v4, enum case for DataEventTrait.unique(_:), v2);
  sub_100A14EDC();
  AccessSessionManager.push<A>(_:traits:file:line:)();
  return swift_bridgeObjectRelease();
}

uint64_t sub_100A1914C()
{
  return sub_1006FA134(&qword_10168C258);
}

uint64_t sub_100A19158(uint64_t a1)
{
  return sub_100A19574(a1, &qword_10168C258, (uint64_t (*)(uint64_t, uint64_t))sub_100A18F94);
}

uint64_t sub_100A19178()
{
  if (qword_10166FA40 != -1) {
    swift_once();
  }
  swift_beginAccess();
  id v0 = (id)static OS_os_log.crlAppAnalytics;
  uint64_t v1 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v0, (uint64_t)&_mh_execute_header, v1, (uint64_t)"update debugData", 16, 2, (uint64_t)_swiftEmptyArrayStorage);

  sub_1005057FC(&qword_10167A078);
  uint64_t v2 = type metadata accessor for DataEventTrait();
  uint64_t v3 = *(void *)(v2 - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_10117E810;
  (*(void (**)(unint64_t, void, uint64_t))(v3 + 104))(v5 + v4, enum case for DataEventTrait.unique(_:), v2);
  sub_10063F130();
  AccessSessionManager.push<A>(_:traits:file:line:)();
  return swift_bridgeObjectRelease();
}

uint64_t sub_100A19330()
{
  if (qword_10166FA40 != -1) {
    swift_once();
  }
  swift_beginAccess();
  id v0 = (id)static OS_os_log.crlAppAnalytics;
  uint64_t v1 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v0, (uint64_t)&_mh_execute_header, v1, (uint64_t)"update userData", 15, 2, (uint64_t)_swiftEmptyArrayStorage);

  sub_1005057FC(&qword_10167A078);
  uint64_t v2 = type metadata accessor for DataEventTrait();
  uint64_t v3 = *(void *)(v2 - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_10117E810;
  (*(void (**)(unint64_t, void, uint64_t))(v3 + 104))(v5 + v4, enum case for DataEventTrait.unique(_:), v2);
  sub_100A14F30();
  AccessSessionManager.push<A>(_:traits:file:line:)();
  return swift_bridgeObjectRelease();
}

uint64_t sub_100A194E8(uint64_t a1)
{
  uint64_t v2 = sub_1005057FC(&qword_10168C268);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100A19548()
{
  return sub_1006FA134(&qword_10168C0C8);
}

uint64_t sub_100A19554(uint64_t a1)
{
  return sub_100A19574(a1, &qword_10168C0C8, (uint64_t (*)(uint64_t, uint64_t))sub_100A19330);
}

uint64_t sub_100A19574(uint64_t a1, uint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  uint64_t v5 = *(void *)(sub_1005057FC(a2) - 8);
  uint64_t v6 = v3 + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));

  return a3(a1, v6);
}

uint64_t destroy for CRLStrokeData(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 144))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 200))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for CRLStrokeData(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(unsigned char *)(a1 + 20) = *(unsigned char *)(a2 + 20);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 36) = *(void *)(a2 + 36);
  *(_DWORD *)(a1 + 44) = *(_DWORD *)(a2 + 44);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
  uint64_t v4 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v4;
  *(_DWORD *)(a1 + 104) = *(_DWORD *)(a2 + 104);
  *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  uint64_t v5 = *(void *)(a2 + 128);
  *(unsigned char *)(a1 + 136) = *(unsigned char *)(a2 + 136);
  *(void *)(a1 + 128) = v5;
  *(_DWORD *)(a1 + 140) = *(_DWORD *)(a2 + 140);
  uint64_t v7 = a2 + 144;
  uint64_t v6 = *(void *)(a2 + 144);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v6)
  {
    *(void *)(a1 + 144) = v6;
    *(_DWORD *)(a1 + 152) = *(_DWORD *)(a2 + 152);
    *(void *)(a1 + 160) = *(void *)(a2 + 160);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)(a1 + 144) = *(_OWORD *)v7;
    *(void *)(a1 + 160) = *(void *)(v7 + 16);
  }
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  *(unsigned char *)(a1 + 176) = *(unsigned char *)(a2 + 176);
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  uint64_t v8 = *(void *)(a2 + 200);
  swift_bridgeObjectRetain();
  if (v8)
  {
    *(void *)(a1 + 192) = *(void *)(a2 + 192);
    *(void *)(a1 + 200) = v8;
    *(_DWORD *)(a1 + 208) = *(_DWORD *)(a2 + 208);
    *(unsigned char *)(a1 + 212) = *(unsigned char *)(a2 + 212);
    *(void *)(a1 + 216) = *(void *)(a2 + 216);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v9 = *(_OWORD *)(a2 + 208);
    *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
    *(_OWORD *)(a1 + 208) = v9;
  }
  *(void *)(a1 + 224) = *(void *)(a2 + 224);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for CRLStrokeData(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
  *(void *)a1 = v4;
  LODWORD(v4) = *((_DWORD *)a2 + 4);
  *(unsigned char *)(a1 + 20) = *((unsigned char *)a2 + 20);
  *(_DWORD *)(a1 + 16) = v4;
  uint64_t v5 = a2[3];
  *(unsigned char *)(a1 + 32) = *((unsigned char *)a2 + 32);
  *(void *)(a1 + 24) = v5;
  *(_DWORD *)(a1 + 36) = *((_DWORD *)a2 + 9);
  *(_DWORD *)(a1 + 40) = *((_DWORD *)a2 + 10);
  *(_DWORD *)(a1 + 44) = *((_DWORD *)a2 + 11);
  *(void *)(a1 + 48) = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 56) = *((_DWORD *)a2 + 14);
  *(_DWORD *)(a1 + 60) = *((_DWORD *)a2 + 15);
  *(_DWORD *)(a1 + 64) = *((_DWORD *)a2 + 16);
  *(_DWORD *)(a1 + 68) = *((_DWORD *)a2 + 17);
  *(void *)(a1 + 72) = a2[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 80) = *((_DWORD *)a2 + 20);
  *(void *)(a1 + 88) = a2[11];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 96) = a2[12];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = (_OWORD *)(a1 + 144);
  uint64_t v7 = *(void *)(a1 + 144);
  *(_DWORD *)(a1 + 104) = *((_DWORD *)a2 + 26);
  uint64_t v8 = a2[14];
  *(unsigned char *)(a1 + 120) = *((unsigned char *)a2 + 120);
  *(void *)(a1 + 112) = v8;
  uint64_t v9 = a2[16];
  *(unsigned char *)(a1 + 136) = *((unsigned char *)a2 + 136);
  *(void *)(a1 + 128) = v9;
  *(_DWORD *)(a1 + 140) = *((_DWORD *)a2 + 35);
  uint64_t v11 = a2 + 18;
  uint64_t v10 = a2[18];
  if (v7)
  {
    if (v10)
    {
      *(void *)(a1 + 144) = v10;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_DWORD *)(a1 + 152) = *((_DWORD *)a2 + 38);
      *(void *)(a1 + 160) = a2[20];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_100A19AFC(a1 + 144);
      uint64_t v12 = a2[20];
      *uint64_t v6 = *v11;
      *(void *)(a1 + 160) = v12;
    }
  }
  else if (v10)
  {
    *(void *)(a1 + 144) = v10;
    *(_DWORD *)(a1 + 152) = *((_DWORD *)a2 + 38);
    *(void *)(a1 + 160) = a2[20];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v13 = *v11;
    *(void *)(a1 + 160) = a2[20];
    *uint64_t v6 = v13;
  }
  uint64_t v14 = a2[21];
  *(unsigned char *)(a1 + 176) = *((unsigned char *)a2 + 176);
  *(void *)(a1 + 168) = v14;
  *(void *)(a1 + 184) = a2[23];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v15 = (_OWORD *)(a1 + 192);
  uint64_t v16 = a2 + 24;
  uint64_t v17 = a2[25];
  if (*(void *)(a1 + 200))
  {
    if (v17)
    {
      *(void *)(a1 + 192) = a2[24];
      *(void *)(a1 + 200) = a2[25];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_DWORD *)(a1 + 208) = *((_DWORD *)a2 + 52);
      *(unsigned char *)(a1 + 212) = *((unsigned char *)a2 + 212);
      *(void *)(a1 + 216) = a2[27];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_100A19B30(a1 + 192);
      long long v18 = *((_OWORD *)a2 + 13);
      *uint64_t v15 = *v16;
      *(_OWORD *)(a1 + 208) = v18;
    }
  }
  else if (v17)
  {
    *(void *)(a1 + 192) = a2[24];
    *(void *)(a1 + 200) = a2[25];
    *(_DWORD *)(a1 + 208) = *((_DWORD *)a2 + 52);
    *(unsigned char *)(a1 + 212) = *((unsigned char *)a2 + 212);
    *(void *)(a1 + 216) = a2[27];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v19 = *((_OWORD *)a2 + 13);
    *uint64_t v15 = *v16;
    *(_OWORD *)(a1 + 208) = v19;
  }
  *(void *)(a1 + 224) = a2[28];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_100A19AFC(uint64_t a1)
{
  return a1;
}

uint64_t sub_100A19B30(uint64_t a1)
{
  return a1;
}

__n128 initializeWithTake for CRLStrokeData(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  long long v4 = a2[3];
  long long v5 = a2[4];
  long long v6 = a2[6];
  *(_OWORD *)(a1 + 80) = a2[5];
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  long long v7 = a2[7];
  long long v8 = a2[8];
  long long v9 = a2[10];
  *(_OWORD *)(a1 + 144) = a2[9];
  *(_OWORD *)(a1 + 160) = v9;
  *(_OWORD *)(a1 + 112) = v7;
  *(_OWORD *)(a1 + 128) = v8;
  __n128 result = (__n128)a2[11];
  long long v11 = a2[12];
  long long v12 = a2[13];
  *(void *)(a1 + 224) = *((void *)a2 + 28);
  *(_OWORD *)(a1 + 192) = v11;
  *(_OWORD *)(a1 + 208) = v12;
  *(__n128 *)(a1 + 176) = result;
  return result;
}

uint64_t assignWithTake for CRLStrokeData(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(unsigned char *)(a1 + 20) = *(unsigned char *)(a2 + 20);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 36) = *(void *)(a2 + 36);
  *(_DWORD *)(a1 + 44) = *(_DWORD *)(a2 + 44);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 144);
  uint64_t v5 = *(void *)(a1 + 144);
  *(_DWORD *)(a1 + 104) = *(_DWORD *)(a2 + 104);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(unsigned char *)(a1 + 136) = *(unsigned char *)(a2 + 136);
  *(_DWORD *)(a1 + 140) = *(_DWORD *)(a2 + 140);
  if (v5)
  {
    if (v4)
    {
      *(void *)(a1 + 144) = v4;
      swift_bridgeObjectRelease();
      *(_DWORD *)(a1 + 152) = *(_DWORD *)(a2 + 152);
      *(void *)(a1 + 160) = *(void *)(a2 + 160);
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_100A19AFC(a1 + 144);
  }
  *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
LABEL_6:
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  *(unsigned char *)(a1 + 176) = *(unsigned char *)(a2 + 176);
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  swift_bridgeObjectRelease();
  if (!*(void *)(a1 + 200))
  {
LABEL_10:
    long long v7 = *(_OWORD *)(a2 + 208);
    *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
    *(_OWORD *)(a1 + 208) = v7;
    goto LABEL_11;
  }
  uint64_t v6 = *(void *)(a2 + 200);
  if (!v6)
  {
    sub_100A19B30(a1 + 192);
    goto LABEL_10;
  }
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  *(void *)(a1 + 200) = v6;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 208) = *(_DWORD *)(a2 + 208);
  *(unsigned char *)(a1 + 212) = *(unsigned char *)(a2 + 212);
  *(void *)(a1 + 216) = *(void *)(a2 + 216);
  swift_bridgeObjectRelease();
LABEL_11:
  *(void *)(a1 + 224) = *(void *)(a2 + 224);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for CRLStrokeData(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 232)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 96);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CRLStrokeData(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 232) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 96) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 232) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLStrokeData()
{
  return &type metadata for CRLStrokeData;
}

uint64_t initializeWithCopy for CRLPencilKitInkStrokeData(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(unsigned char *)(a1 + 20) = *(unsigned char *)(a2 + 20);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for CRLPencilKitInkStrokeData(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(unsigned char *)(a1 + 20) = *(unsigned char *)(a2 + 20);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for CRLPencilKitInkStrokeData(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(unsigned char *)(a1 + 20) = *(unsigned char *)(a2 + 20);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for CRLPencilKitInkStrokeData()
{
  return &type metadata for CRLPencilKitInkStrokeData;
}

uint64_t destroy for CRLStrokePatternData()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t _s8Freeform20CRLStrokePatternDataVwCP_0(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for CRLStrokePatternData(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for CRLStrokePatternData(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for CRLStrokePatternData()
{
  return &type metadata for CRLStrokePatternData;
}

BOOL sub_100A1A0CC(char *a1, char *a2)
{
  return qword_10119F148[*a1] == qword_10119F148[*a2];
}

Swift::Int sub_100A1A0F0()
{
  uint64_t v1 = *v0;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(qword_10119F148[v1]);
  return Hasher._finalize()();
}

void sub_100A1A140()
{
  Hasher._combine(_:)(qword_10119F148[*v0]);
}

Swift::Int sub_100A1A178()
{
  uint64_t v1 = *v0;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(qword_10119F148[v1]);
  return Hasher._finalize()();
}

void sub_100A1A1C4(void *a1@<X8>)
{
  *a1 = qword_10119F148[*v1];
}

uint64_t sub_100A1A1DC()
{
  unint64_t v1 = 0x6573616870;
  if (*v0 != 1) {
    unint64_t v1 = 0xD000000000000010;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x6E726574746170;
  }
}

uint64_t sub_100A1A238@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100A1F638(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_100A1A260()
{
  return qword_10119F148[*v0];
}

void sub_100A1A278(void *a1@<X8>)
{
  *a1 = &off_101503100;
}

uint64_t sub_100A1A288(uint64_t a1, uint64_t a2)
{
  return sub_100A1CB20(a1, a2, (uint64_t (*)(void))sub_100A1AA78, (uint64_t (*)(void))sub_100A1AAD0);
}

uint64_t sub_100A1A2B4(uint64_t a1)
{
  unint64_t v2 = sub_100A1AAD0();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100A1A2F0(uint64_t a1)
{
  unint64_t v2 = sub_100A1AAD0();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100A1A32C(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = sub_1005057FC(&qword_10168C4A0);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7, v9);
  long long v11 = (char *)&v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10050F848(a1, a1[3]);
  sub_100A1AAD0();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  uint64_t v14 = a2;
  HIBYTE(v13) = 0;
  sub_1005057FC(&qword_10168C490);
  sub_100A21328(&qword_10168C4A8);
  KeyedEncodingContainer.encode<A>(_:forKey:)();
  if (!v3)
  {
    LOBYTE(v14) = 1;
    KeyedEncodingContainer.encode(_:forKey:)();
    uint64_t v14 = a3;
    HIBYTE(v13) = 2;
    sub_1005057FC((uint64_t *)&unk_101687A40);
    sub_1005573B0();
    KeyedEncodingContainer.encode<A>(_:forKey:)();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v11, v7);
}

uint64_t sub_100A1A530(uint64_t a1, uint64_t a2)
{
  float v2 = *(float *)(a1 + 8);
  uint64_t v3 = *(void *)(a1 + 16);
  float v4 = *(float *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  if (!sub_1005BAA8C(*(void *)a1, *(void *)a2) || v2 != v4) {
    return 0;
  }

  return sub_100ED60AC(v3, v5);
}

void sub_100A1A5B0(void *a1@<X0>, uint64_t a2@<X8>)
{
  float v6 = sub_100A1F784(a1);
  if (!v2)
  {
    *(void *)a2 = v4;
    *(float *)(a2 + 8) = v6;
    *(void *)(a2 + 16) = v5;
  }
}

uint64_t sub_100A1A5E4(void *a1)
{
  return sub_100A1A32C(a1, *v1, v1[2]);
}

uint64_t sub_100A1A608(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_100A2138C();

  return CRExtendableValueStruct.copy(renamingReferences:)(a1, a2, v4);
}

uint64_t sub_100A1A65C(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_100A2138C();

  return CRExtendableValueStruct.copy(renamingReferences:)(a1, a2, v4);
}

uint64_t sub_100A1A6B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100A1B42C(a1, a2, a3, a4, (uint64_t (*)(void))sub_100A1A8C0, (uint64_t (*)(void))sub_100A213E0);
}

uint64_t sub_100A1A6DC(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_100A2138C();

  return CRExtendableValueStruct.visitReferences(_:)(a1, a2, v4);
}

uint64_t sub_100A1A728()
{
  return CRValueStruct.init(from:)();
}

uint64_t sub_100A1A778()
{
  return CRValueStruct.encode(to:)();
}

uint64_t sub_100A1A7C0(uint64_t a1)
{
  unint64_t v2 = sub_100A1AC00();

  return CRValueStruct.minEncodingVersion.getter(a1, v2);
}

unint64_t sub_100A1A810()
{
  unint64_t result = qword_10168C270;
  if (!qword_10168C270)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168C270);
  }
  return result;
}

unint64_t sub_100A1A868()
{
  unint64_t result = qword_10168C278;
  if (!qword_10168C278)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168C278);
  }
  return result;
}

unint64_t sub_100A1A8C0()
{
  unint64_t result = qword_10168C280;
  if (!qword_10168C280)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168C280);
  }
  return result;
}

unint64_t sub_100A1A918()
{
  unint64_t result = qword_10168C288;
  if (!qword_10168C288)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168C288);
  }
  return result;
}

unint64_t sub_100A1A970()
{
  unint64_t result = qword_10168C290;
  if (!qword_10168C290)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168C290);
  }
  return result;
}

unint64_t sub_100A1A9C8()
{
  unint64_t result = qword_10168C298;
  if (!qword_10168C298)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168C298);
  }
  return result;
}

unint64_t sub_100A1AA20()
{
  unint64_t result = qword_10168C2A0;
  if (!qword_10168C2A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168C2A0);
  }
  return result;
}

unint64_t sub_100A1AA78()
{
  unint64_t result = qword_10168C2A8;
  if (!qword_10168C2A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168C2A8);
  }
  return result;
}

unint64_t sub_100A1AAD0()
{
  unint64_t result = qword_10168C2B0;
  if (!qword_10168C2B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168C2B0);
  }
  return result;
}

unint64_t sub_100A1AB28()
{
  unint64_t result = qword_10168C2B8;
  if (!qword_10168C2B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168C2B8);
  }
  return result;
}

unint64_t sub_100A1AB80()
{
  unint64_t result = qword_10168C2C0;
  if (!qword_10168C2C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168C2C0);
  }
  return result;
}

uint64_t sub_100A1ABD4()
{
  return sub_1006BFA64(&qword_10168C2C8, &qword_10168C2D0);
}

unint64_t sub_100A1AC00()
{
  unint64_t result = qword_10168C2D8;
  if (!qword_10168C2D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168C2D8);
  }
  return result;
}

id sub_100A1AC54(uint64_t a1, float a2)
{
  int64_t v4 = *(void *)(a1 + 16);
  if (v4)
  {
    swift_bridgeObjectRetain();
    sub_1006BB524(0, v4, 0);
    uint64_t v5 = 0;
    unint64_t v6 = *(void *)&_swiftEmptyArrayStorage[2];
    do
    {
      float v7 = *(float *)(a1 + 4 * v5 + 32);
      unint64_t v8 = *(void *)&_swiftEmptyArrayStorage[3];
      if (v6 >= v8 >> 1) {
        sub_1006BB524(v8 > 1, v6 + 1, 1);
      }
      ++v5;
      *(void *)&_swiftEmptyArrayStorage[2] = v6 + 1;
      _swiftEmptyArrayStorage[v6++ + 4] = v7;
    }
    while (v4 != v5);
    swift_bridgeObjectRelease_n();
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  id v9 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) initWithPattern:&_swiftEmptyArrayStorage[4] count:*(void *)&_swiftEmptyArrayStorage[2] phase:a2];
  swift_bridgeObjectRelease();
  return v9;
}

unint64_t sub_100A1ADA4@<X0>(unint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_100A1FA1C(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_100A1ADD0()
{
  return RawRepresentable<>.init(from:)();
}

uint64_t sub_100A1AE30()
{
  return RawRepresentable<>.encode(to:)();
}

uint64_t sub_100A1AE80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100A1C578(a1, a2, a3, a4, (uint64_t (*)(void))sub_100A222E4, (uint64_t (*)(void))sub_100A2222C);
}

uint64_t sub_100A1AEAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100A1C63C(a1, a2, a3, (void (*)(void))sub_100A222E4, (void (*)(void))sub_100A1E0BC);
}

uint64_t sub_100A1AEEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100A1C6F4(a1, a2, a3, (void (*)(void))sub_100A222E4, (void (*)(void))sub_100A1E0BC);
}

uint64_t sub_100A1AF2C(uint64_t a1, uint64_t a2)
{
  return sub_100A1C790(a1, a2, (uint64_t (*)(void))sub_100A222E4, (uint64_t (*)(void))sub_100A1E0BC);
}

uint64_t sub_100A1AF58()
{
  if (*v0) {
    return 0xD000000000000010;
  }
  else {
    return 0x7274537472616D73;
  }
}

uint64_t sub_100A1AFA4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100A1FA2C(a1, a2);
  *a3 = result;
  return result;
}

void sub_100A1AFCC(void *a1@<X8>)
{
  *a1 = &off_101503008;
}

uint64_t sub_100A1AFDC(uint64_t a1, uint64_t a2)
{
  return sub_100A1CB20(a1, a2, (uint64_t (*)(void))sub_100A21E94, (uint64_t (*)(void))sub_100A21EEC);
}

uint64_t sub_100A1B008(uint64_t a1)
{
  unint64_t v2 = sub_100A21EEC();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100A1B044(uint64_t a1)
{
  unint64_t v2 = sub_100A21EEC();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100A1B080(void *a1, uint64_t a2, char a3, uint64_t a4)
{
  uint64_t v15 = a4;
  uint64_t v8 = sub_1005057FC(&qword_10168C5B8);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8, v10);
  long long v12 = (char *)&v14 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10050F848(a1, a1[3]);
  sub_100A21EEC();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  uint64_t v16 = a2;
  char v17 = a3 & 1;
  char v18 = 0;
  sub_1005057FC(&qword_10168C4C0);
  sub_100A22280(&qword_10168C5C0, &qword_10168C4C0);
  KeyedEncodingContainer.encode<A>(_:forKey:)();
  if (!v4)
  {
    uint64_t v16 = v15;
    char v18 = 1;
    sub_1005057FC((uint64_t *)&unk_101687A40);
    sub_1005573B0();
    KeyedEncodingContainer.encode<A>(_:forKey:)();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v12, v8);
}

uint64_t sub_100A1B260(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void *)(a2 + 16);
  sub_100A1E0BC();
  if (static CRExtensible.== infix(_:_:)()) {
    char v4 = sub_100ED60AC(v2, v3);
  }
  else {
    char v4 = 0;
  }
  return v4 & 1;
}

uint64_t sub_100A1B2F4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = sub_100A1FB40(a1);
  if (!v2)
  {
    *(void *)a2 = result;
    *(unsigned char *)(a2 + 8) = v5 & 1;
    *(void *)(a2 + 16) = v6;
  }
  return result;
}

uint64_t sub_100A1B32C(void *a1)
{
  return sub_100A1B080(a1, *(void *)v1, *(unsigned char *)(v1 + 8), *(void *)(v1 + 16));
}

uint64_t sub_100A1B358(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_100A22338();

  return CRExtendableValueStruct.copy(renamingReferences:)(a1, a2, v4);
}

uint64_t sub_100A1B3AC(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_100A22338();

  return CRExtendableValueStruct.copy(renamingReferences:)(a1, a2, v4);
}

uint64_t sub_100A1B400(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100A1B42C(a1, a2, a3, a4, (uint64_t (*)(void))sub_100A21D84, (uint64_t (*)(void))sub_100A2238C);
}

uint64_t sub_100A1B42C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void), uint64_t (*a6)(void))
{
  uint64_t v10 = a5();
  uint64_t v11 = a6();

  return CRValue<>.observableDifference(from:with:)(a1, a2, a3, v10, v11);
}

uint64_t sub_100A1B4B0(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_100A22338();

  return CRExtendableValueStruct.visitReferences(_:)(a1, a2, v4);
}

uint64_t sub_100A1B4FC()
{
  return CRValueStruct.init(from:)();
}

uint64_t sub_100A1B54C()
{
  return CRValueStruct.encode(to:)();
}

uint64_t sub_100A1B594(uint64_t a1)
{
  unint64_t v2 = sub_100A2201C();

  return CRValueStruct.minEncodingVersion.getter(a1, v2);
}

BOOL sub_100A1B5E0(char *a1, char *a2)
{
  return qword_10119F160[*a1] == qword_10119F160[*a2];
}

Swift::Int sub_100A1B604()
{
  uint64_t v1 = *v0;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(qword_10119F160[v1]);
  return Hasher._finalize()();
}

void sub_100A1B654()
{
  Hasher._combine(_:)(qword_10119F160[*v0]);
}

Swift::Int sub_100A1B68C()
{
  uint64_t v1 = *v0;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(qword_10119F160[v1]);
  return Hasher._finalize()();
}

void sub_100A1B6D8(void *a1@<X8>)
{
  *a1 = qword_10119F160[*v1];
}

unint64_t sub_100A1B6F0()
{
  unint64_t result = 0x657079546B6E69;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x6874646977;
      break;
    case 2:
      unint64_t result = 0xD000000000000012;
      break;
    case 3:
      unint64_t result = 0xD000000000000010;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_100A1B788@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100A1FD58(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_100A1B7B0()
{
  return qword_10119F160[*v0];
}

void sub_100A1B7C8(void *a1@<X8>)
{
  *a1 = &off_1015033C0;
}

uint64_t sub_100A1B7D8(uint64_t a1, uint64_t a2)
{
  return sub_100A1CB20(a1, a2, (uint64_t (*)(void))sub_100A1BFB0, (uint64_t (*)(void))sub_100A1C008);
}

uint64_t sub_100A1B804(uint64_t a1)
{
  unint64_t v2 = sub_100A1C008();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100A1B840(uint64_t a1)
{
  unint64_t v2 = sub_100A1C008();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100A1B87C(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_1005057FC(&qword_10168C470);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5, v7);
  uint64_t v9 = &v11[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10050F848(a1, a1[3]);
  sub_100A1C008();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  char v15 = 0;
  KeyedEncodingContainer.encode(_:forKey:)();
  if (!v2)
  {
    char v14 = 1;
    KeyedEncodingContainer.encode(_:forKey:)();
    char v13 = 2;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    uint64_t v12 = *(void *)(v3 + 24);
    v11[15] = 3;
    sub_1005057FC((uint64_t *)&unk_101687A40);
    sub_1005573B0();
    KeyedEncodingContainer.encode<A>(_:forKey:)();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v9, v5);
}

uint64_t sub_100A1BA50(_OWORD *a1, _OWORD *a2)
{
  long long v2 = a1[1];
  v5[0] = *a1;
  v5[1] = v2;
  long long v3 = a2[1];
  v6[0] = *a2;
  v6[1] = v3;
  return sub_100A1D928((uint64_t)v5, (uint64_t)v6) & 1;
}

double sub_100A1BA8C@<D0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  sub_100A1FF00(a1, (uint64_t)v6);
  if (!v2)
  {
    double result = *(double *)v6;
    long long v5 = v6[1];
    *a2 = v6[0];
    a2[1] = v5;
  }
  return result;
}

uint64_t sub_100A1BAC8(void *a1)
{
  return sub_100A1B87C(a1);
}

uint64_t sub_100A1BAFC(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_100A21280();

  return CRExtendableValueStruct.copy(renamingReferences:)(a1, a2, v4);
}

uint64_t sub_100A1BB50(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_100A21280();

  return CRExtendableValueStruct.copy(renamingReferences:)(a1, a2, v4);
}

uint64_t sub_100A1BBA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_100A1BDF8();
  unint64_t v7 = sub_100A212D4();

  return CRValue<>.observableDifference(from:with:)(a1, a2, a3, v6, v7);
}

uint64_t sub_100A1BC14(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_100A21280();

  return CRExtendableValueStruct.visitReferences(_:)(a1, a2, v4);
}

uint64_t sub_100A1BC60()
{
  return CRValueStruct.init(from:)();
}

uint64_t sub_100A1BCB0()
{
  return CRValueStruct.encode(to:)();
}

uint64_t sub_100A1BCF8(uint64_t a1)
{
  unint64_t v2 = sub_100A1C138();

  return CRValueStruct.minEncodingVersion.getter(a1, v2);
}

unint64_t sub_100A1BD48()
{
  unint64_t result = qword_10168C2E0;
  if (!qword_10168C2E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168C2E0);
  }
  return result;
}

unint64_t sub_100A1BDA0()
{
  unint64_t result = qword_10168C2E8;
  if (!qword_10168C2E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168C2E8);
  }
  return result;
}

unint64_t sub_100A1BDF8()
{
  unint64_t result = qword_10168C2F0;
  if (!qword_10168C2F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168C2F0);
  }
  return result;
}

unint64_t sub_100A1BE50()
{
  unint64_t result = qword_10168C2F8;
  if (!qword_10168C2F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168C2F8);
  }
  return result;
}

unint64_t sub_100A1BEA8()
{
  unint64_t result = qword_10168C300;
  if (!qword_10168C300)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168C300);
  }
  return result;
}

unint64_t sub_100A1BF00()
{
  unint64_t result = qword_10168C308;
  if (!qword_10168C308)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168C308);
  }
  return result;
}

unint64_t sub_100A1BF58()
{
  unint64_t result = qword_10168C310;
  if (!qword_10168C310)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168C310);
  }
  return result;
}

unint64_t sub_100A1BFB0()
{
  unint64_t result = qword_10168C318;
  if (!qword_10168C318)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168C318);
  }
  return result;
}

unint64_t sub_100A1C008()
{
  unint64_t result = qword_10168C320;
  if (!qword_10168C320)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168C320);
  }
  return result;
}

unint64_t sub_100A1C060()
{
  unint64_t result = qword_10168C328;
  if (!qword_10168C328)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168C328);
  }
  return result;
}

unint64_t sub_100A1C0B8()
{
  unint64_t result = qword_10168C330;
  if (!qword_10168C330)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168C330);
  }
  return result;
}

uint64_t sub_100A1C10C()
{
  return sub_1006BFA64(&qword_10168C338, &qword_10168C340);
}

unint64_t sub_100A1C138()
{
  unint64_t result = qword_10168C348;
  if (!qword_10168C348)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168C348);
  }
  return result;
}

uint64_t sub_100A1C18C()
{
  return RawRepresentable<>.init(from:)();
}

uint64_t sub_100A1C1EC()
{
  return RawRepresentable<>.encode(to:)();
}

uint64_t sub_100A1C23C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100A1C578(a1, a2, a3, a4, (uint64_t (*)(void))sub_100A22488, (uint64_t (*)(void))sub_100A21A6C);
}

uint64_t sub_100A1C268(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100A1C63C(a1, a2, a3, (void (*)(void))sub_100A22488, (void (*)(void))sub_100A1DFC0);
}

uint64_t sub_100A1C2A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100A1C6F4(a1, a2, a3, (void (*)(void))sub_100A22488, (void (*)(void))sub_100A1DFC0);
}

uint64_t sub_100A1C2E8(uint64_t a1, uint64_t a2)
{
  return sub_100A1C790(a1, a2, (uint64_t (*)(void))sub_100A22488, (uint64_t (*)(void))sub_100A1DFC0);
}

uint64_t sub_100A1C314()
{
  return RawRepresentable<>.init(from:)();
}

uint64_t sub_100A1C374()
{
  return RawRepresentable<>.encode(to:)();
}

uint64_t sub_100A1C3C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100A1C578(a1, a2, a3, a4, (uint64_t (*)(void))sub_100A22434, (uint64_t (*)(void))sub_100A21B74);
}

uint64_t sub_100A1C3F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100A1C63C(a1, a2, a3, (void (*)(void))sub_100A22434, (void (*)(void))sub_100A1E014);
}

uint64_t sub_100A1C430(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100A1C6F4(a1, a2, a3, (void (*)(void))sub_100A22434, (void (*)(void))sub_100A1E014);
}

uint64_t sub_100A1C470(uint64_t a1, uint64_t a2)
{
  return sub_100A1C790(a1, a2, (uint64_t (*)(void))sub_100A22434, (uint64_t (*)(void))sub_100A1E014);
}

uint64_t sub_100A1C49C()
{
  return RawRepresentable<>.init(from:)();
}

uint64_t sub_100A1C4FC()
{
  return RawRepresentable<>.encode(to:)();
}

uint64_t sub_100A1C54C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100A1C578(a1, a2, a3, a4, (uint64_t (*)(void))sub_100A223E0, (uint64_t (*)(void))sub_100A21C7C);
}

uint64_t sub_100A1C578(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void), uint64_t (*a6)(void))
{
  uint64_t v10 = a5();
  uint64_t v11 = a6();

  return CRValue<>.observableDifference(from:with:)(a1, a2, a3, v10, v11);
}

uint64_t sub_100A1C5FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100A1C63C(a1, a2, a3, (void (*)(void))sub_100A223E0, (void (*)(void))sub_100A1E068);
}

uint64_t sub_100A1C63C(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void), void (*a5)(void))
{
  return CRValue<>.init(from:)();
}

uint64_t sub_100A1C6B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100A1C6F4(a1, a2, a3, (void (*)(void))sub_100A223E0, (void (*)(void))sub_100A1E068);
}

uint64_t sub_100A1C6F4(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void), void (*a5)(void))
{
  return CRValue<>.encode(to:)();
}

uint64_t sub_100A1C764(uint64_t a1, uint64_t a2)
{
  return sub_100A1C790(a1, a2, (uint64_t (*)(void))sub_100A223E0, (uint64_t (*)(void))sub_100A1E068);
}

uint64_t sub_100A1C790(uint64_t a1, uint64_t a2, uint64_t (*a3)(void), uint64_t (*a4)(void))
{
  uint64_t v6 = a3();
  uint64_t v7 = a4();

  return CRValue<>.minEncodingVersion.getter(a1, v6, v7, &protocol witness table for Int);
}

unint64_t sub_100A1C804(char a1)
{
  unint64_t result = 1701869940;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x726F6C6F63;
      break;
    case 2:
      unint64_t result = 0x6874646977;
      break;
    case 3:
      unint64_t result = 7364963;
      break;
    case 4:
      unint64_t result = 1852403562;
      break;
    case 5:
      unint64_t result = 0x6D694C726574696DLL;
      break;
    case 6:
      unint64_t result = 0x6E726574746170;
      break;
    case 7:
      unint64_t result = 0x7274537472616D73;
      break;
    case 8:
      unint64_t result = 0xD000000000000016;
      break;
    case 9:
      unint64_t result = 0xD000000000000010;
      break;
    default:
      return result;
  }
  return result;
}

BOOL sub_100A1C938(char *a1, char *a2)
{
  return qword_10119F180[*a1] == qword_10119F180[*a2];
}

Swift::Int sub_100A1C95C()
{
  uint64_t v1 = *v0;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(qword_10119F180[v1]);
  return Hasher._finalize()();
}

void sub_100A1C9AC()
{
  Hasher._combine(_:)(qword_10119F180[*v0]);
}

Swift::Int sub_100A1C9E4()
{
  uint64_t v1 = *v0;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(qword_10119F180[v1]);
  return Hasher._finalize()();
}

uint64_t sub_100A1CA30@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_100A2018C(*a1);
  *a2 = result;
  return result;
}

void sub_100A1CA5C(void *a1@<X8>)
{
  *a1 = qword_10119F180[*v1];
}

unint64_t sub_100A1CA74()
{
  return sub_100A1C804(*v0);
}

uint64_t sub_100A1CA7C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100A201B0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_100A1CAA4()
{
  return qword_10119F180[*v0];
}

uint64_t sub_100A1CABC@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_100A2018C(a1);
  *a2 = result;
  return result;
}

void sub_100A1CAE4(void *a1@<X8>)
{
  *a1 = &off_101502CC8;
}

uint64_t sub_100A1CAF4(uint64_t a1, uint64_t a2)
{
  return sub_100A1CB20(a1, a2, (uint64_t (*)(void))sub_100A1D6F4, (uint64_t (*)(void))sub_100A1D74C);
}

uint64_t sub_100A1CB20(uint64_t a1, uint64_t a2, uint64_t (*a3)(void), uint64_t (*a4)(void))
{
  uint64_t v7 = a3();
  uint64_t v8 = a4();

  return static CodingKey<>.intCases.getter(a1, a2, v7, v8);
}

uint64_t sub_100A1CB8C(uint64_t a1)
{
  unint64_t v2 = sub_100A1D74C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100A1CBC8(uint64_t a1)
{
  unint64_t v2 = sub_100A1D74C();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100A1CC08(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_1005057FC(&qword_10168C418);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5, v7);
  uint64_t v9 = (char *)v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10050F848(a1, a1[3]);
  sub_100A1D74C();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  sub_10051B3EC(v3, (uint64_t)v21, &qword_10168C3B8);
  sub_10051B3EC((uint64_t)v21, (uint64_t)v14, &qword_10168C3B8);
  char v22 = 0;
  sub_1005057FC(&qword_10168C3B8);
  sub_100A22280(&qword_10168C420, &qword_10168C3B8);
  KeyedEncodingContainer.encode<A>(_:forKey:)();
  if (!v2)
  {
    long long v10 = *(_OWORD *)(v3 + 64);
    v14[2] = *(_OWORD *)(v3 + 48);
    long long v11 = *(_OWORD *)(v3 + 80);
    v14[3] = v10;
    v14[4] = v11;
    uint64_t v15 = *(void *)(v3 + 96);
    long long v12 = *(_OWORD *)(v3 + 32);
    v14[0] = *(_OWORD *)(v3 + 16);
    v14[1] = v12;
    char v22 = 1;
    sub_1007B1FF8();
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    LOBYTE(v14[0]) = 2;
    KeyedEncodingContainer.encode(_:forKey:)();
    sub_10051B3EC(v3 + 112, (uint64_t)v20, &qword_10168C3C8);
    sub_10051B3EC((uint64_t)v20, (uint64_t)v14, &qword_10168C3C8);
    char v22 = 3;
    sub_1005057FC(&qword_10168C3C8);
    sub_100A22280(&qword_10168C428, &qword_10168C3C8);
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    sub_10051B3EC(v3 + 128, (uint64_t)v19, &qword_10168C3D8);
    sub_10051B3EC((uint64_t)v19, (uint64_t)v14, &qword_10168C3D8);
    char v22 = 4;
    sub_1005057FC(&qword_10168C3D8);
    sub_100A22280(&qword_10168C430, &qword_10168C3D8);
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    LOBYTE(v14[0]) = 5;
    KeyedEncodingContainer.encode(_:forKey:)();
    sub_10051B3EC(v3 + 144, (uint64_t)v18, &qword_10168C438);
    sub_10051B3EC((uint64_t)v18, (uint64_t)v14, &qword_10168C438);
    char v22 = 6;
    sub_100A1A970();
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
    sub_10051B3EC(v3 + 168, (uint64_t)v17, &qword_10168C440);
    sub_10051B3EC((uint64_t)v17, (uint64_t)v14, &qword_10168C440);
    char v22 = 7;
    sub_100A21184();
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
    sub_10051B3EC(v3 + 192, (uint64_t)v16, &qword_10168C450);
    sub_10051B3EC((uint64_t)v16, (uint64_t)v14, &qword_10168C450);
    char v22 = 8;
    sub_100A1BEA8();
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
    *(void *)&v14[0] = *(void *)(v3 + 224);
    char v22 = 9;
    sub_1005057FC((uint64_t *)&unk_101687A40);
    sub_1005573B0();
    KeyedEncodingContainer.encode<A>(_:forKey:)();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v5);
}

uint64_t sub_100A1D0E8()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_100A1D0F0(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 224) = a1;
  return result;
}

Freeform::SyncEvent::FetchedRecordZoneChanges::Deletion (__swiftcall *sub_100A1D11C())(CKRecordID recordID, Swift::String recordType)
{
  return SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:);
}

uint64_t sub_100A1D13C(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a1 + 208);
  v17[12] = *(_OWORD *)(a1 + 192);
  v17[13] = v2;
  uint64_t v18 = *(void *)(a1 + 224);
  long long v3 = *(_OWORD *)(a1 + 144);
  v17[8] = *(_OWORD *)(a1 + 128);
  v17[9] = v3;
  long long v4 = *(_OWORD *)(a1 + 176);
  v17[10] = *(_OWORD *)(a1 + 160);
  v17[11] = v4;
  long long v5 = *(_OWORD *)(a1 + 80);
  v17[4] = *(_OWORD *)(a1 + 64);
  v17[5] = v5;
  long long v6 = *(_OWORD *)(a1 + 112);
  void v17[6] = *(_OWORD *)(a1 + 96);
  v17[7] = v6;
  long long v7 = *(_OWORD *)(a1 + 16);
  v17[0] = *(_OWORD *)a1;
  v17[1] = v7;
  long long v8 = *(_OWORD *)(a1 + 48);
  _OWORD v17[2] = *(_OWORD *)(a1 + 32);
  v17[3] = v8;
  long long v9 = *(_OWORD *)(a2 + 208);
  v19[12] = *(_OWORD *)(a2 + 192);
  v19[13] = v9;
  uint64_t v20 = *(void *)(a2 + 224);
  long long v10 = *(_OWORD *)(a2 + 144);
  v19[8] = *(_OWORD *)(a2 + 128);
  v19[9] = v10;
  long long v11 = *(_OWORD *)(a2 + 176);
  v19[10] = *(_OWORD *)(a2 + 160);
  v19[11] = v11;
  long long v12 = *(_OWORD *)(a2 + 80);
  v19[4] = *(_OWORD *)(a2 + 64);
  v19[5] = v12;
  long long v13 = *(_OWORD *)(a2 + 112);
  v19[6] = *(_OWORD *)(a2 + 96);
  v19[7] = v13;
  long long v14 = *(_OWORD *)(a2 + 16);
  v19[0] = *(_OWORD *)a2;
  v19[1] = v14;
  long long v15 = *(_OWORD *)(a2 + 48);
  v19[2] = *(_OWORD *)(a2 + 32);
  v19[3] = v15;
  return sub_100A1CC04(v17, v19) & 1;
}

__n128 sub_100A1D1F0@<Q0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_100A205A8(a1, (uint64_t)v11);
  if (!v2)
  {
    long long v5 = v11[13];
    *(_OWORD *)(a2 + 192) = v11[12];
    *(_OWORD *)(a2 + 208) = v5;
    *(void *)(a2 + 224) = v12;
    long long v6 = v11[9];
    *(_OWORD *)(a2 + 128) = v11[8];
    *(_OWORD *)(a2 + 144) = v6;
    long long v7 = v11[11];
    *(_OWORD *)(a2 + 160) = v11[10];
    *(_OWORD *)(a2 + 176) = v7;
    long long v8 = v11[5];
    *(_OWORD *)(a2 + 64) = v11[4];
    *(_OWORD *)(a2 + 80) = v8;
    long long v9 = v11[7];
    *(_OWORD *)(a2 + 96) = v11[6];
    *(_OWORD *)(a2 + 112) = v9;
    long long v10 = v11[1];
    *(_OWORD *)a2 = v11[0];
    *(_OWORD *)(a2 + 16) = v10;
    __n128 result = (__n128)v11[3];
    *(_OWORD *)(a2 + 32) = v11[2];
    *(__n128 *)(a2 + 48) = result;
  }
  return result;
}

uint64_t sub_100A1D280(void *a1)
{
  return sub_100A1CC08(a1);
}

uint64_t sub_100A1D2EC(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_100A211D8();

  return CRExtendableValueStruct.copy(renamingReferences:)(a1, a2, v4);
}

uint64_t sub_100A1D340(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_100A211D8();

  return CRExtendableValueStruct.copy(renamingReferences:)(a1, a2, v4);
}

uint64_t sub_100A1D394(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_100552D2C();
  unint64_t v7 = sub_100A2122C();

  return CRValue<>.observableDifference(from:with:)(a1, a2, a3, v6, v7);
}

uint64_t sub_100A1D404(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_100A211D8();

  return CRExtendableValueStruct.visitReferences(_:)(a1, a2, v4);
}

uint64_t sub_100A1D450()
{
  return CRValueStruct.init(from:)();
}

uint64_t sub_100A1D4A0()
{
  return CRValueStruct.encode(to:)();
}

uint64_t sub_100A1D4E8(uint64_t a1)
{
  unint64_t v2 = sub_100A1D87C();

  return CRValueStruct.minEncodingVersion.getter(a1, v2);
}

unint64_t sub_100A1D538()
{
  unint64_t result = qword_10168C350;
  if (!qword_10168C350)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168C350);
  }
  return result;
}

unint64_t sub_100A1D594()
{
  unint64_t result = qword_10168C358;
  if (!qword_10168C358)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168C358);
  }
  return result;
}

unint64_t sub_100A1D5EC()
{
  unint64_t result = qword_10168C360;
  if (!qword_10168C360)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168C360);
  }
  return result;
}

unint64_t sub_100A1D644()
{
  unint64_t result = qword_10168C368;
  if (!qword_10168C368)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168C368);
  }
  return result;
}

unint64_t sub_100A1D69C()
{
  unint64_t result = qword_10168C370;
  if (!qword_10168C370)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168C370);
  }
  return result;
}

unint64_t sub_100A1D6F4()
{
  unint64_t result = qword_10168C378;
  if (!qword_10168C378)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168C378);
  }
  return result;
}

unint64_t sub_100A1D74C()
{
  unint64_t result = qword_10168C380;
  if (!qword_10168C380)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168C380);
  }
  return result;
}

unint64_t sub_100A1D7A4()
{
  unint64_t result = qword_10168C388;
  if (!qword_10168C388)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168C388);
  }
  return result;
}

unint64_t sub_100A1D7FC()
{
  unint64_t result = qword_10168C390;
  if (!qword_10168C390)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168C390);
  }
  return result;
}

uint64_t sub_100A1D850()
{
  return sub_1006BFA64(&qword_10168C398, &qword_10168C3A0);
}

unint64_t sub_100A1D87C()
{
  unint64_t result = qword_10168C3A8;
  if (!qword_10168C3A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168C3A8);
  }
  return result;
}

unint64_t sub_100A1D8D4()
{
  unint64_t result = qword_10168C3B0;
  if (!qword_10168C3B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168C3B0);
  }
  return result;
}

uint64_t sub_100A1D928(uint64_t a1, uint64_t a2)
{
  BOOL v4 = *(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8);
  if (!v4 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0 || *(float *)(a1 + 16) != *(float *)(a2 + 16)) {
    return 0;
  }
  int v5 = *(unsigned __int8 *)(a1 + 20);
  int v6 = *(unsigned __int8 *)(a2 + 20);
  if (v5 == 2)
  {
    if (v6 != 2) {
      return 0;
    }
  }
  else
  {
    BOOL v7 = (v5 & 1) == 0;
    if (v6 == 2 || ((v7 ^ v6) & 1) == 0) {
      return 0;
    }
  }
  uint64_t v8 = *(void *)(a1 + 24);
  uint64_t v9 = *(void *)(a2 + 24);

  return sub_100ED60AC(v8, v9);
}

uint64_t sub_100A1D9DC(uint64_t a1, uint64_t a2)
{
  sub_10051B3EC(a1, (uint64_t)v47, &qword_10168C3B8);
  sub_10051B3EC((uint64_t)v47, (uint64_t)v44, &qword_10168C3B8);
  sub_10051B3EC(a2, (uint64_t)v46, &qword_10168C3B8);
  sub_10051B3EC((uint64_t)v46, (uint64_t)v42, &qword_10168C3B8);
  sub_100A1DFC0();
  if ((static CRExtensible.== infix(_:_:)() & 1) == 0) {
    goto LABEL_21;
  }
  long long v4 = *(_OWORD *)(a1 + 64);
  v44[2] = *(_OWORD *)(a1 + 48);
  v44[3] = v4;
  v44[4] = *(_OWORD *)(a1 + 80);
  uint64_t v45 = *(void *)(a1 + 96);
  long long v5 = *(_OWORD *)(a1 + 32);
  v44[0] = *(_OWORD *)(a1 + 16);
  v44[1] = v5;
  long long v6 = *(_OWORD *)(a2 + 64);
  v42[2] = *(_OWORD *)(a2 + 48);
  void v42[3] = v6;
  v42[4] = *(_OWORD *)(a2 + 80);
  uint64_t v43 = *(void *)(a2 + 96);
  long long v7 = *(_OWORD *)(a2 + 32);
  v42[0] = *(_OWORD *)(a2 + 16);
  v42[1] = v7;
  if ((sub_1007B049C(v44, v42) & 1) == 0) {
    goto LABEL_21;
  }
  if (*(float *)(a1 + 104) != *(float *)(a2 + 104)) {
    goto LABEL_21;
  }
  sub_10051B3EC(a1 + 112, (uint64_t)v41, &qword_10168C3C8);
  sub_10051B3EC((uint64_t)v41, (uint64_t)v39, &qword_10168C3C8);
  sub_10051B3EC(a2 + 112, (uint64_t)v40, &qword_10168C3C8);
  sub_10051B3EC((uint64_t)v40, (uint64_t)v38, &qword_10168C3C8);
  sub_100A1E014();
  if ((static CRExtensible.== infix(_:_:)() & 1) == 0) {
    goto LABEL_21;
  }
  sub_10051B3EC(a1 + 128, (uint64_t)v39, &qword_10168C3D8);
  sub_10051B3EC((uint64_t)v39, (uint64_t)&v36, &qword_10168C3D8);
  sub_10051B3EC(a2 + 128, (uint64_t)v38, &qword_10168C3D8);
  sub_10051B3EC((uint64_t)v38, (uint64_t)&v34, &qword_10168C3D8);
  sub_100A1E068();
  if ((static CRExtensible.== infix(_:_:)() & 1) == 0 || *(float *)(a1 + 140) != *(float *)(a2 + 140)) {
    goto LABEL_21;
  }
  uint64_t v8 = *(void *)(a1 + 144);
  uint64_t v9 = *(void *)(a2 + 144);
  if (v8)
  {
    if (!v9) {
      goto LABEL_21;
    }
    uint64_t v10 = *(void *)(a1 + 152);
    uint64_t v11 = *(void *)(a1 + 160);
    uint64_t v13 = *(void *)(a2 + 152);
    uint64_t v12 = *(void *)(a2 + 160);
    if (sub_1005BAA8C(*(void *)(a1 + 144), *(void *)(a2 + 144)))
    {
      sub_10051A2E0(v8);
      sub_10051A2E0(v8);
      sub_10051A2E0(v9);
      if (*(float *)&v10 == *(float *)&v13)
      {
        char v14 = sub_100ED60AC(v11, v12);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_10051A034(v8);
        if ((v14 & 1) == 0) {
          goto LABEL_21;
        }
        goto LABEL_14;
      }
    }
    else
    {
      sub_10051A2E0(v8);
      sub_10051A2E0(v8);
      sub_10051A2E0(v9);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_10051A034(v8);
    goto LABEL_21;
  }
  if (v9) {
    goto LABEL_21;
  }
LABEL_14:
  uint64_t v15 = *(void *)(a1 + 184);
  uint64_t v16 = *(void *)(a2 + 184);
  if (!v15)
  {
    if (v16) {
      goto LABEL_21;
    }
LABEL_24:
    uint64_t v24 = *(void *)(a1 + 192);
    uint64_t v23 = *(void *)(a1 + 200);
    uint64_t v26 = *(void *)(a1 + 208);
    uint64_t v25 = *(void *)(a1 + 216);
    uint64_t v28 = *(void *)(a2 + 192);
    uint64_t v27 = *(void *)(a2 + 200);
    uint64_t v30 = *(void *)(a2 + 208);
    uint64_t v29 = *(void *)(a2 + 216);
    if (v23)
    {
      if (v27)
      {
        if ((v24 != v28 || v23 != v27) && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0
          || *(float *)&v26 != *(float *)&v30)
        {
          goto LABEL_40;
        }
        if ((v26 & 0xFF00000000) == 0x200000000)
        {
          if (BYTE4(v30) != 2)
          {
LABEL_40:
            sub_10051A320(v24, v23);
            sub_10051A320(v24, v23);
            sub_10051A320(v28, v27);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v31 = v24;
            uint64_t v32 = v23;
            goto LABEL_41;
          }
        }
        else if (BYTE4(v30) == 2 || ((v26 & (unint64_t)&_mh_execute_header) == 0) == (BYTE4(v30) & 1))
        {
          goto LABEL_40;
        }
        sub_10051A320(v24, v23);
        sub_10051A320(v24, v23);
        sub_10051A320(v28, v27);
        char v33 = sub_100ED60AC(v25, v29);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_10051A074(v24, v23);
        if (v33)
        {
LABEL_39:
          char v21 = sub_100ED60AC(*(void *)(a1 + 224), *(void *)(a2 + 224));
          return v21 & 1;
        }
        goto LABEL_21;
      }
    }
    else if (!v27)
    {
      goto LABEL_39;
    }
    sub_10051A320(*(void *)(a1 + 192), *(void *)(a1 + 200));
    sub_10051A320(v28, v27);
    sub_10051A074(v24, v23);
    uint64_t v31 = v28;
    uint64_t v32 = v27;
LABEL_41:
    sub_10051A074(v31, v32);
    goto LABEL_21;
  }
  if (v16)
  {
    uint64_t v17 = *(void *)(a1 + 176);
    uint64_t v18 = *(void *)(a2 + 168);
    uint64_t v19 = *(void *)(a2 + 176);
    uint64_t v36 = *(void *)(a1 + 168);
    char v37 = v17 & 1;
    uint64_t v34 = v18;
    char v35 = v19 & 1;
    sub_100A1E0BC();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if ((static CRExtensible.== infix(_:_:)() & 1) == 0)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_21;
    }
    char v20 = sub_100ED60AC(v15, v16);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v20) {
      goto LABEL_24;
    }
  }
LABEL_21:
  char v21 = 0;
  return v21 & 1;
}

unint64_t sub_100A1DFC0()
{
  unint64_t result = qword_10168C3C0;
  if (!qword_10168C3C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168C3C0);
  }
  return result;
}

unint64_t sub_100A1E014()
{
  unint64_t result = qword_10168C3D0;
  if (!qword_10168C3D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168C3D0);
  }
  return result;
}

unint64_t sub_100A1E068()
{
  unint64_t result = qword_10168C3E0;
  if (!qword_10168C3E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168C3E0);
  }
  return result;
}

unint64_t sub_100A1E0BC()
{
  unint64_t result = qword_10168C3E8;
  if (!qword_10168C3E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168C3E8);
  }
  return result;
}

id sub_100A1E110(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1005057FC(&qword_10168C4C8);
  __chkstk_darwin(v4 - 8, v5);
  long long v7 = &v17[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10051B3EC(a1 + 192, (uint64_t)v18, &qword_10168C450);
  sub_10051B3EC((uint64_t)v18, (uint64_t)v19, &qword_10168C450);
  if (v19[1])
  {
    float v8 = v20;
    char v9 = v21;
    swift_bridgeObjectRetain();
    PKInkingTool.InkType.init(rawValue:)();
    uint64_t v10 = type metadata accessor for PKInkingTool.InkType();
    int v11 = (*(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48))(v7, 1, v10);
    sub_100A21434((uint64_t)v7);
    if (v11 != 1)
    {
      NSString v15 = String._bridgeToObjectiveC()();
      id v14 = [objc_allocWithZone((Class)CRLPencilKitInkStroke) initWithInkType:v15 color:a2 adjustedWidth:v9 & 1 isFountainPenInkV2:v8];

      return v14;
    }
  }
  double v12 = *(float *)(a1 + 104);
  sub_10051B3EC(a1 + 168, (uint64_t)v17, &qword_10168C440);
  sub_10051B3EC((uint64_t)v17, (uint64_t)&v22, &qword_10168C440);
  if (!v23) {
    goto LABEL_8;
  }
  long long v24 = v22;
  uint64_t v25 = v23;
  sub_10051B3EC((uint64_t)&v24, (uint64_t)v26, &qword_10168C4C0);
  sub_10051B3EC((uint64_t)v26, (uint64_t)v27, &qword_10168C4C0);
  if (v27[8]) {
    goto LABEL_8;
  }
  if (v27[0] == 5)
  {
    uint64_t v13 = &PKInkTypeCrayon;
    return [objc_allocWithZone((Class)CRLPencilKitInkStroke) initWithInkType:*v13 color:a2 adjustedWidth:v12];
  }
  if (v27[0] == 4) {
    uint64_t v13 = &PKInkTypePencil;
  }
  else {
LABEL_8:
  }
    uint64_t v13 = &PKInkTypeMonoline;
  return [objc_allocWithZone((Class)CRLPencilKitInkStroke) initWithInkType:*v13 color:a2 adjustedWidth:v12];
}

id sub_100A1E370(uint64_t a1, char a2)
{
  sub_10050BF48(0, (unint64_t *)&qword_10168F9E0);
  long long v4 = *(_OWORD *)(a1 + 48);
  long long v5 = *(_OWORD *)(a1 + 80);
  v32[3] = *(_OWORD *)(a1 + 64);
  v32[4] = v5;
  uint64_t v33 = *(void *)(a1 + 96);
  long long v6 = *(_OWORD *)(a1 + 32);
  v32[0] = *(_OWORD *)(a1 + 16);
  v32[1] = v6;
  v32[2] = v4;
  sub_10068F4F8((uint64_t)v32);
  long long v7 = sub_1007B0B84((uint64_t)v32);
  float v8 = *(float *)(a1 + 104);
  sub_10051B3EC(a1 + 112, (uint64_t)v31, &qword_10168C3C8);
  sub_10051B3EC((uint64_t)v31, (uint64_t)v34, &qword_10168C3C8);
  if (v34[8])
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"createStroke(unarchiving:forceStrokeToPencilKit:)", 49, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCanvas/CRLStrokeData.swift", 83, 2, 303, (uint64_t)"Tried to decode unknown line cap value. Falling back to unarchiving butt.", 73, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"createStroke(unarchiving:forceStrokeToPencilKit:)", 49, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCanvas/CRLStrokeData.swift", 83, 2, 303);
    uint64_t v9 = 0;
  }
  else
  {
    uint64_t v9 = v34[0];
  }
  sub_10051B3EC(a1 + 128, (uint64_t)v30, &qword_10168C3D8);
  sub_10051B3EC((uint64_t)v30, (uint64_t)v35, &qword_10168C3D8);
  if (v35[8])
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"createStroke(unarchiving:forceStrokeToPencilKit:)", 49, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCanvas/CRLStrokeData.swift", 83, 2, 318, (uint64_t)"Tried to decode unknown line join value. Falling back to unarchiving miter.", 75, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"createStroke(unarchiving:forceStrokeToPencilKit:)", 49, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCanvas/CRLStrokeData.swift", 83, 2, 318);
    uint64_t v10 = 0;
    if (a2) {
      goto LABEL_9;
    }
  }
  else
  {
    uint64_t v10 = v35[0];
    if (a2)
    {
LABEL_9:
      id v12 = sub_100A1E110(a1, (uint64_t)v7);
      goto LABEL_10;
    }
  }
  float v11 = *(float *)(a1 + 140);
  sub_10051B3EC(a1 + 192, (uint64_t)v29, &qword_10168C450);
  sub_10051B3EC((uint64_t)v29, (uint64_t)v36, &qword_10168C450);
  if (v37) {
    goto LABEL_9;
  }
  double v14 = v8;
  double v15 = v11;
  sub_10051B3EC(a1 + 168, (uint64_t)v28, &qword_10168C440);
  sub_10051B3EC((uint64_t)v28, (uint64_t)&v38, &qword_10168C440);
  if (!v39)
  {
    sub_10051B3EC(a1, (uint64_t)v43, &qword_10168C3B8);
    sub_10051B3EC((uint64_t)v43, (uint64_t)&v40, &qword_10168C3B8);
    if (BYTE8(v40))
    {
      sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"createStroke(unarchiving:forceStrokeToPencilKit:)", 49, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCanvas/CRLStrokeData.swift", 83, 2, 373, (uint64_t)"Tried to decode unknown stroke type. Falling back to unarchiving solid.", 71, 2u, (uint64_t)_swiftEmptyArrayStorage);
      LOBYTE(v26) = 2;
      sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"createStroke(unarchiving:forceStrokeToPencilKit:)", 49, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCanvas/CRLStrokeData.swift", 83, 2, 373);
      id v16 = [self solidPattern:@"Tried to decode unknown stroke type. Falling back to unarchiving solid." 71 v26];
    }
    else if ((_BYTE)v40)
    {
      if (v40 == 1)
      {
        uint64_t v17 = *(void *)(a1 + 144);
        if (v17)
        {
          float v18 = *(float *)(a1 + 152);
          sub_10050BF48(0, &qword_10167F138);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v19 = (CGColorSpace *)sub_100A1AC54(v17, v18);
          goto LABEL_27;
        }
        sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"createStroke(unarchiving:forceStrokeToPencilKit:)", 49, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCanvas/CRLStrokeData.swift", 83, 2, 364, (uint64_t)"Stroke with pattern type should have pattern data. Falling back to unarchiving solid pattern.", 93, 2u, (uint64_t)_swiftEmptyArrayStorage);
        LOBYTE(v27) = 2;
        sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"createStroke(unarchiving:forceStrokeToPencilKit:)", 49, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCanvas/CRLStrokeData.swift", 83, 2, 364);
        id v16 = [self solidPattern:@"Stroke with pattern type should have pattern data. Falling back to unarchiving solid pattern." 93 v27];
      }
      else
      {
        id v16 = [self emptyPattern];
      }
    }
    else
    {
      id v16 = [self solidPattern];
    }
LABEL_26:
    uint64_t v19 = (CGColorSpace *)v16;
LABEL_27:
    uint64_t v23 = v19;
    long long v24 = CRLStroke;
LABEL_28:
    id v12 = [objc_allocWithZone((Class)v24) initWithColor:v7 width:v9 cap:v10 join:v23 pattern:v14 miterLimit:v15];

    long long v7 = v23;
    goto LABEL_10;
  }
  long long v40 = v38;
  uint64_t v41 = v39;
  sub_10051B3EC((uint64_t)&v40, (uint64_t)v42, &qword_10168C4C0);
  sub_10051B3EC((uint64_t)v42, (uint64_t)v43, &qword_10168C4C0);
  if (v43[8])
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"createStroke(unarchiving:forceStrokeToPencilKit:)", 49, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCanvas/CRLStrokeData.swift", 83, 2, 350, (uint64_t)"Tried to decode unknown smart stroke type. Falling back to unarchiving plain stroke.", 84, 2u, (uint64_t)_swiftEmptyArrayStorage);
    LOBYTE(v25) = 2;
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"createStroke(unarchiving:forceStrokeToPencilKit:)", 49, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCanvas/CRLStrokeData.swift", 83, 2, 350);
    id v16 = [self solidPattern:@"Tried to decode unknown smart stroke type. Falling back to unarchiving plain stroke." 84 v25];
    goto LABEL_26;
  }
  switch(v43[0])
  {
    case 6:
      uint64_t v23 = (CGColorSpace *)[self solidPattern];
      long long v24 = CRLCalligraphyStroke;
      goto LABEL_28;
    default:
      static String._unconditionallyBridgeFromObjectiveC(_:)();
      float v20 = (CGColorSpace *)[self solidPattern];
      id v21 = objc_allocWithZone((Class)CRLBrushStroke);
      NSString v22 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      id v12 = [v21 initWithName:v22 color:v7 width:v9 cap:v10 join:v20 pattern:v14 miterLimit:v11];

      long long v7 = v20;
      break;
  }
LABEL_10:

  return v12;
}

float *sub_100A1EAD8(void *a1)
{
  unint64_t v2 = (double *)[a1 pattern];
  long long v3 = (char *)[a1 count];
  if (v3)
  {
    long long v4 = v3;
    unint64_t result = (float *)sub_100F61954(0, 1, 1, &_swiftEmptyArrayStorage);
    long long v6 = result;
    unint64_t v7 = 0x8000000000000000;
    while (v7)
    {
      double v8 = v2[v7];
      unint64_t v10 = *((void *)v6 + 2);
      unint64_t v9 = *((void *)v6 + 3);
      if (v10 >= v9 >> 1)
      {
        unint64_t result = (float *)sub_100F61954((void *)(v9 > 1), v10 + 1, 1, v6);
        long long v6 = result;
      }
      float v11 = v8;
      *((void *)v6 + 2) = v10 + 1;
      v6[v10 + 8] = v11;
      ++v7;
      if (!--v4) {
        goto LABEL_9;
      }
    }
    __break(1u);
  }
  else
  {
    long long v6 = (float *)&_swiftEmptyArrayStorage;
LABEL_9:
    [a1 phase];
    return v6;
  }
  return result;
}

uint64_t sub_100A1EBE4(void *a1)
{
  id v2 = [a1 strokeName];
  uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v5 = v4;

  if (static String._unconditionallyBridgeFromObjectiveC(_:)() == v3 && v6 == v5)
  {

    swift_bridgeObjectRelease_n();
    return 0;
  }
  char v8 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  if (v8)
  {
    swift_bridgeObjectRelease();

    return 0;
  }
  if (static String._unconditionallyBridgeFromObjectiveC(_:)() == v3 && v11 == v5)
  {

    swift_bridgeObjectRelease_n();
    return 1;
  }
  else
  {
    char v13 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v13)
    {
      swift_bridgeObjectRelease();

      return 1;
    }
    else if (static String._unconditionallyBridgeFromObjectiveC(_:)() == v3 && v14 == v5)
    {

      uint64_t v9 = 2;
      swift_bridgeObjectRelease_n();
    }
    else
    {
      char v15 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if (v15)
      {
        swift_bridgeObjectRelease();

        return 2;
      }
      else if (static String._unconditionallyBridgeFromObjectiveC(_:)() == v3 && v16 == v5)
      {

        swift_bridgeObjectRelease_n();
        return 3;
      }
      else
      {
        char v17 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        if (v17)
        {
          swift_bridgeObjectRelease();

          return 3;
        }
        else if (static String._unconditionallyBridgeFromObjectiveC(_:)() == v3 && v18 == v5)
        {

          swift_bridgeObjectRelease_n();
          return 4;
        }
        else
        {
          char v19 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          if (v19)
          {
            swift_bridgeObjectRelease();

            return 4;
          }
          else if (static String._unconditionallyBridgeFromObjectiveC(_:)() == v3 && v20 == v5)
          {

            swift_bridgeObjectRelease_n();
            return 5;
          }
          else
          {
            char v21 = _stringCompareWithSmolCheck(_:_:expecting:)();
            swift_bridgeObjectRelease();
            if (v21)
            {
              swift_bridgeObjectRelease();

              return 5;
            }
            else if (static String._unconditionallyBridgeFromObjectiveC(_:)() == v3 && v22 == v5)
            {

              swift_bridgeObjectRelease_n();
              return 6;
            }
            else
            {
              char v23 = _stringCompareWithSmolCheck(_:_:expecting:)();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              if (v23)
              {

                return 6;
              }
              else
              {
                sub_1005057FC((uint64_t *)&unk_101672B40);
                uint64_t inited = swift_initStackObject();
                *(_OWORD *)(inited + 16) = xmmword_10117E810;
                id v25 = [a1 strokeName];
                uint64_t v26 = static String._unconditionallyBridgeFromObjectiveC(_:)();
                uint64_t v28 = v27;

                *(void *)(inited + 56) = &type metadata for String;
                *(void *)(inited + 64) = sub_100528BE4();
                *(void *)(inited + 32) = v26;
                *(void *)(inited + 40) = v28;
                sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"init(archiving:)", 16, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCanvas/CRLStrokeData.swift", 83, 2, 102, (uint64_t)"Unknown smart stroke type %@. Falling back to archiving dryBrush.", 65, 2u, inited);
                sub_1005598CC(inited, (uint64_t)"init(archiving:)", 16, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCanvas/CRLStrokeData.swift", 83, 2, 102);

                swift_setDeallocating();
                sub_1005057FC(&qword_101672B50);
                uint64_t v9 = 1;
                swift_arrayDestroy();
              }
            }
          }
        }
      }
    }
  }
  return v9;
}

float sub_100A1F088@<S0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  id v4 = [a1 pattern];
  id v5 = [v4 patternType];

  if (v5)
  {
    if (v5 == (id)2)
    {
      uint64_t v56 = 0;
      unint64_t v57 = 0;
      uint64_t v6 = 0;
      uint64_t v7 = 2;
    }
    else
    {
      if (v5 != (id)1)
      {
        sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"init(archiving:)", 16, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCanvas/CRLStrokeData.swift", 83, 2, 236, (uint64_t)"Unknown stroke pattern type. Falling back to archiving solid.", 61, 2u, (uint64_t)&_swiftEmptyArrayStorage);
        LOBYTE(v51) = 2;
        uint64_t v45 = "Unknown stroke pattern type. Falling back to archiving solid.";
        uint64_t v48 = 61;
        sub_1005598CC((uint64_t)&_swiftEmptyArrayStorage, (uint64_t)"init(archiving:)", 16, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCanvas/CRLStrokeData.swift", 83, 2, 236);
      }
      uint64_t v56 = 0;
      unint64_t v57 = 0;
      uint64_t v6 = 0;
      uint64_t v7 = 0;
    }
  }
  else
  {
    id v8 = [a1 pattern];
    uint64_t v9 = sub_100A1EAD8(v8);
    uint64_t v56 = v10;
    unint64_t v57 = v9;
    unsigned int v12 = v11;

    uint64_t v6 = v12;
    uint64_t v7 = 1;
  }
  sub_1007B16EC([a1 color:v45, v48, v51], (uint64_t)v62);
  *(_OWORD *)&v61[39] = v62[2];
  *(_OWORD *)&v61[55] = v62[3];
  *(_OWORD *)&v61[71] = v62[4];
  *(void *)&v61[87] = v63;
  *(_OWORD *)&v61[7] = v62[0];
  *(_OWORD *)&v61[23] = v62[1];
  [a1 widthForDefaultAndDowngradePersistence];
  double v14 = v13;
  id v15 = [a1 cap];
  if (v15 == (id)2)
  {
    uint64_t v16 = 2;
  }
  else if (v15 == (id)1)
  {
    uint64_t v16 = 1;
  }
  else
  {
    if (v15)
    {
      sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"init(archiving:)", 16, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCanvas/CRLStrokeData.swift", 83, 2, 252, (uint64_t)"Unknown stroke cap type. Falling back to archiving butt.", 56, 2u, (uint64_t)&_swiftEmptyArrayStorage);
      LOBYTE(v52) = 2;
      uint64_t v46 = "Unknown stroke cap type. Falling back to archiving butt.";
      uint64_t v49 = 56;
      sub_1005598CC((uint64_t)&_swiftEmptyArrayStorage, (uint64_t)"init(archiving:)", 16, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCanvas/CRLStrokeData.swift", 83, 2, 252);
    }
    uint64_t v16 = 0;
  }
  id v17 = [a1 join:v46, v49, v52];
  if (v17 == (id)2)
  {
    uint64_t v18 = 2;
  }
  else if (v17 == (id)1)
  {
    uint64_t v18 = 1;
  }
  else
  {
    if (v17)
    {
      sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"init(archiving:)", 16, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCanvas/CRLStrokeData.swift", 83, 2, 264, (uint64_t)"Unknown stroke cap type. Falling back to archiving miter.", 57, 2u, (uint64_t)&_swiftEmptyArrayStorage);
      LOBYTE(v53) = 2;
      uint64_t v47 = "Unknown stroke cap type. Falling back to archiving miter.";
      uint64_t v50 = 57;
      sub_1005598CC((uint64_t)&_swiftEmptyArrayStorage, (uint64_t)"init(archiving:)", 16, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCanvas/CRLStrokeData.swift", 83, 2, 264);
    }
    uint64_t v18 = 0;
  }
  [a1 miterLimit:v47, v50, v53];
  double v20 = v19;
  self;
  char v21 = (void *)swift_dynamicCastObjCClass();
  if (v21)
  {
    uint64_t v22 = (void *)sub_100A1EBE4(v21);
    uint64_t v24 = v23;
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    unint64_t v27 = 0;
    uint64_t v28 = 0;
    unsigned int v30 = v29 & 1;
  }
  else
  {
    self;
    uint64_t v22 = (void *)swift_dynamicCastObjCClass();
    if (v22)
    {
      uint64_t v55 = v18;
      id v31 = a1;
      id v32 = [v22 inkType];
      uint64_t v25 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v26 = v33;

      [v22 width];
      float v35 = v34;
      LODWORD(v32) = [v22 isFountainPenInkV2];

      uint64_t v36 = &_mh_execute_header;
      if (!v32) {
        uint64_t v36 = 0;
      }
      unint64_t v27 = (unint64_t)v36 | LODWORD(v35);
      id v37 = [v22 fallbackSmartStrokeForPersistence];
      if (v37)
      {
        uint64_t v22 = (void *)sub_100A1EBE4(v37);
        uint64_t v54 = v6;
        uint64_t v38 = v16;
        uint64_t v39 = v7;
        char v41 = v40;
        uint64_t v24 = v42;

        unsigned int v30 = v41 & 1;
        uint64_t v7 = v39;
        uint64_t v16 = v38;
        uint64_t v6 = v54;
      }
      else
      {

        uint64_t v22 = 0;
        unsigned int v30 = 0;
        uint64_t v24 = 0;
      }
      uint64_t v28 = &_swiftEmptyDictionarySingleton;
      uint64_t v18 = v55;
    }
    else
    {

      unsigned int v30 = 0;
      uint64_t v24 = 0;
      uint64_t v25 = 0;
      uint64_t v26 = 0;
      unint64_t v27 = 0;
      uint64_t v28 = 0;
    }
  }
  float result = v20;
  float v44 = v14;
  *(_DWORD *)(a2 + 121) = *(_DWORD *)v60;
  *(_DWORD *)(a2 + 124) = *(_DWORD *)&v60[3];
  *(_WORD *)(a2 + 137) = v58;
  *(unsigned char *)(a2 + 139) = v59;
  *(void *)a2 = v7;
  *(unsigned char *)(a2 + 8) = 0;
  *(_OWORD *)(a2 + 9) = *(_OWORD *)v61;
  *(_OWORD *)(a2 + 25) = *(_OWORD *)&v61[16];
  *(_OWORD *)(a2 + 88) = *(_OWORD *)&v61[79];
  *(_OWORD *)(a2 + 73) = *(_OWORD *)&v61[64];
  *(_OWORD *)(a2 + 57) = *(_OWORD *)&v61[48];
  *(_OWORD *)(a2 + 41) = *(_OWORD *)&v61[32];
  *(float *)(a2 + 104) = v44;
  *(void *)(a2 + 112) = v16;
  *(unsigned char *)(a2 + 120) = 0;
  *(void *)(a2 + 128) = v18;
  *(unsigned char *)(a2 + 136) = 0;
  *(float *)(a2 + 140) = result;
  *(void *)(a2 + 144) = v57;
  *(void *)(a2 + 152) = v6;
  *(void *)(a2 + 160) = v56;
  *(void *)(a2 + 168) = v22;
  *(void *)(a2 + 176) = v30;
  *(void *)(a2 + 184) = v24;
  *(void *)(a2 + 192) = v25;
  *(void *)(a2 + 200) = v26;
  *(void *)(a2 + 208) = v27;
  *(void *)(a2 + 216) = v28;
  *(void *)(a2 + 224) = &_swiftEmptyDictionarySingleton;
  return result;
}

uint64_t sub_100A1F638(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6E726574746170 && a2 == 0xE700000000000000;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6573616870 && a2 == 0xE500000000000000 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x800000010123A720)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

float sub_100A1F784(void *a1)
{
  uint64_t v4 = sub_1005057FC(&qword_10168C488);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4, v6);
  id v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10050F848(a1, a1[3]);
  sub_100A1AAD0();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v1)
  {
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)a1);
  }
  else
  {
    sub_1005057FC(&qword_10168C490);
    char v12 = 0;
    sub_100A21328(&qword_10168C498);
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    LOBYTE(v13) = 1;
    swift_bridgeObjectRetain();
    KeyedDecodingContainer.decode(_:forKey:)();
    float v2 = v10;
    sub_1005057FC((uint64_t *)&unk_101687A40);
    char v12 = 2;
    sub_100557304();
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
    swift_bridgeObjectRetain();
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v2;
}

unint64_t sub_100A1FA1C(unint64_t result)
{
  if (result >= 7) {
    return 7;
  }
  return result;
}

uint64_t sub_100A1FA2C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x7274537472616D73 && a2 == 0xEF65707954656B6FLL;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x800000010123A720)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_100A1FB40(void *a1)
{
  uint64_t v2 = sub_1005057FC(&qword_10168C5A8);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2, v4);
  char v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10050F848(a1, a1[3]);
  sub_100A21EEC();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  sub_1005057FC(&qword_10168C4C0);
  char v10 = 0;
  sub_100A22280(&qword_10168C5B0, &qword_10168C4C0);
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  uint64_t v7 = v11;
  sub_1005057FC((uint64_t *)&unk_101687A40);
  char v10 = 1;
  sub_100557304();
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)a1);
  return v7;
}

uint64_t sub_100A1FD58(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x657079546B6E69 && a2 == 0xE700000000000000;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6874646977 && a2 == 0xE500000000000000 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001012694C0 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x800000010123A720)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_100A1FF00@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_1005057FC(&qword_10168C468);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5, v7);
  uint64_t v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10050F848(a1, a1[3]);
  sub_100A1C008();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v2) {
    return _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)a1);
  }
  char v23 = 0;
  uint64_t v10 = KeyedDecodingContainer.decode(_:forKey:)();
  uint64_t v12 = v11;
  char v22 = 1;
  swift_bridgeObjectRetain();
  KeyedDecodingContainer.decode(_:forKey:)();
  int v14 = v13;
  char v21 = 2;
  int v18 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  sub_1005057FC((uint64_t *)&unk_101687A40);
  char v19 = 3;
  sub_100557304();
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  uint64_t v15 = v20;
  swift_bridgeObjectRetain();
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)a1);
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a2 = v10;
  *(void *)(a2 + 8) = v12;
  *(_DWORD *)(a2 + 16) = v14;
  *(unsigned char *)(a2 + 20) = v18;
  *(void *)(a2 + 24) = v15;
  return result;
}

uint64_t sub_100A2018C(uint64_t a1)
{
  if ((unint64_t)(a1 + 1) > 9) {
    return 10;
  }
  else {
    return byte_10119F1D0[a1 + 1];
  }
}

uint64_t sub_100A201B0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1701869940 && a2 == 0xE400000000000000;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x726F6C6F63 && a2 == 0xE500000000000000 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6874646977 && a2 == 0xE500000000000000 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 7364963 && a2 == 0xE300000000000000 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 1852403562 && a2 == 0xE400000000000000 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6D694C726574696DLL && a2 == 0xEA00000000007469 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x6E726574746170 && a2 == 0xE700000000000000 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x7274537472616D73 && a2 == 0xEF61746144656B6FLL {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000001012694A0 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x800000010123A720)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v6) {
      return 9;
    }
    else {
      return 10;
    }
  }
}

void *sub_100A205A8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_1005057FC(&qword_10168C3F0);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5, v7);
  uint64_t v9 = (char *)&v50 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = a1[3];
  float64_t v139 = a1;
  sub_10050F848(a1, v10);
  sub_100A1D74C();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v2)
  {
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v139);
    return (void *)swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v79 = v6;
    uint64_t v71 = a2;
    sub_1005057FC(&qword_10168C3B8);
    LOBYTE(v80) = 0;
    sub_100A22280(&qword_10168C3F8, &qword_10168C3B8);
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    uint64_t v11 = v95;
    int v12 = v96;
    char v138 = v96;
    LOBYTE(v80) = 1;
    sub_1007B1FA0();
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    int v61 = v12;
    int v62 = v95;
    int v13 = BYTE4(v95);
    uint64_t v68 = v11;
    uint64_t v69 = v96;
    uint64_t v14 = v99;
    uint64_t v66 = v98;
    uint64_t v67 = v97;
    uint64_t v64 = v101;
    uint64_t v65 = v100;
    uint64_t v15 = v102;
    uint64_t v63 = v103;
    uint64_t v16 = v104;
    uint64_t v17 = v105;
    char v136 = BYTE4(v95);
    LOBYTE(v95) = 2;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v70 = v14;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    KeyedDecodingContainer.decode(_:forKey:)();
    uint64_t v77 = v16;
    uint64_t v78 = v15;
    int v19 = v18;
    int v59 = v13;
    uint64_t v60 = v17;
    sub_1005057FC(&qword_10168C3C8);
    LOBYTE(v80) = 3;
    sub_100A22280(&qword_10168C400, &qword_10168C3C8);
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    uint64_t v20 = v95;
    int v21 = v96;
    char v133 = v96;
    sub_1005057FC(&qword_10168C3D8);
    LOBYTE(v80) = 4;
    sub_100A22280(&qword_10168C408, &qword_10168C3D8);
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    uint64_t v58 = v20;
    uint64_t v22 = v95;
    LODWORD(v16) = v96;
    char v131 = v96;
    LOBYTE(v95) = 5;
    KeyedDecodingContainer.decode(_:forKey:)();
    int v24 = v23;
    uint64_t v57 = v22;
    int v56 = v16;
    LOBYTE(v80) = 6;
    sub_100A1A918();
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
    uint64_t v25 = v95;
    uint64_t v26 = v96;
    LOBYTE(v80) = 7;
    uint64_t v76 = v97;
    sub_10051A2E0(v95);
    sub_100A2106C();
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
    *(void *)&long long v75 = v25;
    *((void *)&v75 + 1) = v26;
    int v53 = v21;
    uint64_t v27 = v97;
    uint64_t v54 = v96;
    uint64_t v55 = v95;
    LOBYTE(v80) = 8;
    sub_100A1BE50();
    swift_bridgeObjectRetain();
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
    uint64_t v28 = v27;
    uint64_t v30 = v95;
    uint64_t v29 = v96;
    uint64_t v32 = v97;
    uint64_t v31 = v98;
    uint64_t v52 = sub_1005057FC((uint64_t *)&unk_101687A40);
    char v127 = 9;
    uint64_t v72 = v29;
    uint64_t v73 = v31;
    uint64_t v74 = v32;
    sub_10051A320(v30, v29);
    sub_100557304();
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    (*(void (**)(char *, uint64_t))(v79 + 8))(v9, v5);
    uint64_t v79 = v128;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)&long long v80 = v68;
    BYTE8(v80) = v61;
    LODWORD(v81) = v62;
    BYTE4(v81) = v59;
    *((void *)&v81 + 1) = v69;
    *(void *)&long long v82 = v67;
    *((void *)&v82 + 1) = v66;
    *(void *)&long long v83 = v70;
    *((void *)&v83 + 1) = v65;
    *(void *)&long long v84 = v64;
    *((void *)&v84 + 1) = v78;
    *(void *)&long long v85 = v63;
    uint64_t v33 = v76;
    *((void *)&v85 + 1) = v77;
    *(void *)&long long v86 = v60;
    DWORD2(v86) = v19;
    *(void *)&long long v87 = v58;
    BYTE8(v87) = v53;
    *(void *)&long long v88 = v57;
    BYTE8(v88) = v56;
    HIDWORD(v88) = v24;
    uint64_t v34 = v75;
    long long v89 = v75;
    *(void *)&long long v90 = v76;
    *((void *)&v90 + 1) = v55;
    *(void *)&long long v91 = v54;
    *((void *)&v91 + 1) = v28;
    uint64_t v50 = v28;
    uint64_t v51 = v30;
    uint64_t v35 = v72;
    *(void *)&long long v92 = v30;
    *((void *)&v92 + 1) = v72;
    *(void *)&long long v93 = v74;
    *((void *)&v93 + 1) = v73;
    uint64_t v94 = v79;
    sub_100556A44(&v80);
    swift_bridgeObjectRelease();
    sub_10051A074(v30, v35);
    uint64_t v36 = v50;
    swift_bridgeObjectRelease();
    sub_10051A034(v34);
    uint64_t v37 = v60;
    swift_bridgeObjectRelease();
    uint64_t v38 = v77;
    swift_bridgeObjectRelease();
    uint64_t v39 = v78;
    swift_bridgeObjectRelease();
    uint64_t v40 = v70;
    swift_bridgeObjectRelease();
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v139);
    uint64_t v95 = v68;
    LOBYTE(v96) = v138;
    *(_DWORD *)((char *)&v96 + 1) = *(_DWORD *)v137;
    HIDWORD(v96) = *(_DWORD *)&v137[3];
    LODWORD(v97) = v62;
    BYTE4(v97) = v136;
    *(_WORD *)((char *)&v97 + 5) = v134;
    HIBYTE(v97) = v135;
    uint64_t v98 = v69;
    uint64_t v99 = v67;
    uint64_t v100 = v66;
    uint64_t v101 = v40;
    uint64_t v102 = v65;
    uint64_t v103 = v64;
    uint64_t v104 = v39;
    uint64_t v105 = v63;
    uint64_t v106 = v38;
    uint64_t v107 = v37;
    int v108 = v19;
    uint64_t v109 = v58;
    char v110 = v133;
    *(_DWORD *)uint64_t v111 = *(_DWORD *)v132;
    *(_DWORD *)&v111[3] = *(_DWORD *)&v132[3];
    uint64_t v112 = v57;
    char v113 = v131;
    __int16 v114 = v129;
    char v115 = v130;
    int v116 = v24;
    unsigned long long v117 = __PAIR128__(*((unint64_t *)&v75 + 1), v34);
    uint64_t v118 = v33;
    uint64_t v119 = v55;
    uint64_t v120 = v54;
    uint64_t v121 = v36;
    uint64_t v122 = v51;
    uint64_t v123 = v72;
    uint64_t v124 = v74;
    uint64_t v125 = v73;
    uint64_t v126 = v79;
    uint64_t result = sub_100A210C0(&v95);
    long long v42 = v93;
    uint64_t v43 = v71;
    *(_OWORD *)(v71 + 192) = v92;
    *(_OWORD *)(v43 + 208) = v42;
    *(void *)(v43 + 224) = v94;
    long long v44 = v89;
    *(_OWORD *)(v43 + 128) = v88;
    *(_OWORD *)(v43 + 144) = v44;
    long long v45 = v91;
    *(_OWORD *)(v43 + 160) = v90;
    *(_OWORD *)(v43 + 176) = v45;
    long long v46 = v85;
    *(_OWORD *)(v43 + 64) = v84;
    *(_OWORD *)(v43 + 80) = v46;
    long long v47 = v87;
    *(_OWORD *)(v43 + 96) = v86;
    *(_OWORD *)(v43 + 112) = v47;
    long long v48 = v81;
    *(_OWORD *)uint64_t v43 = v80;
    *(_OWORD *)(v43 + 16) = v48;
    long long v49 = v83;
    *(_OWORD *)(v43 + 32) = v82;
    *(_OWORD *)(v43 + 48) = v49;
  }
  return result;
}

unint64_t sub_100A2106C()
{
  unint64_t result = qword_10168C410;
  if (!qword_10168C410)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168C410);
  }
  return result;
}

void *sub_100A210C0(void *a1)
{
  uint64_t v2 = a1[18];
  uint64_t v3 = a1[24];
  uint64_t v4 = a1[25];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_10051A034(v2);
  swift_bridgeObjectRelease();
  sub_10051A074(v3, v4);
  swift_bridgeObjectRelease();
  return a1;
}

unint64_t sub_100A21184()
{
  unint64_t result = qword_10168C448;
  if (!qword_10168C448)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168C448);
  }
  return result;
}

unint64_t sub_100A211D8()
{
  unint64_t result = qword_10168C458;
  if (!qword_10168C458)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168C458);
  }
  return result;
}

unint64_t sub_100A2122C()
{
  unint64_t result = qword_10168C460;
  if (!qword_10168C460)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168C460);
  }
  return result;
}

unint64_t sub_100A21280()
{
  unint64_t result = qword_10168C478;
  if (!qword_10168C478)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168C478);
  }
  return result;
}

unint64_t sub_100A212D4()
{
  unint64_t result = qword_10168C480;
  if (!qword_10168C480)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168C480);
  }
  return result;
}

uint64_t sub_100A21328(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100522D34(&qword_10168C490);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100A2138C()
{
  unint64_t result = qword_10168C4B0;
  if (!qword_10168C4B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168C4B0);
  }
  return result;
}

unint64_t sub_100A213E0()
{
  unint64_t result = qword_10168C4B8;
  if (!qword_10168C4B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168C4B8);
  }
  return result;
}

uint64_t sub_100A21434(uint64_t a1)
{
  uint64_t v2 = sub_1005057FC(&qword_10168C4C8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unsigned char *storeEnumTagSinglePayload for CRLSmartStrokeData.SmartStrokeType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *unint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100A21560);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLSmartStrokeData.SmartStrokeType()
{
  return &type metadata for CRLSmartStrokeData.SmartStrokeType;
}

unsigned char *storeEnumTagSinglePayload for CRLStrokeData.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 9 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 9) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF7) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF6)
  {
    unsigned int v6 = ((a2 - 247) >> 8) + 1;
    *unint64_t result = a2 + 9;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100A21664);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 9;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLStrokeData.CodingKeys()
{
  return &type metadata for CRLStrokeData.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for CRLPencilKitInkStrokeData.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100A21768);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLPencilKitInkStrokeData.CodingKeys()
{
  return &type metadata for CRLPencilKitInkStrokeData.CodingKeys;
}

ValueMetadata *type metadata accessor for CRLStrokePatternData.CodingKeys()
{
  return &type metadata for CRLStrokePatternData.CodingKeys;
}

uint64_t initializeBufferWithCopyOfBuffer for CRLSmartStrokeData(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for CRLSmartStrokeData(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
  *(void *)a1 = v3;
  *(void *)(a1 + 16) = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for CRLSmartStrokeData(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for CRLSmartStrokeData()
{
  return &type metadata for CRLSmartStrokeData;
}

ValueMetadata *type metadata accessor for CRLStrokeData.JoinType()
{
  return &type metadata for CRLStrokeData.JoinType;
}

ValueMetadata *type metadata accessor for CRLStrokeData.CapType()
{
  return &type metadata for CRLStrokeData.CapType;
}

unsigned char *_s8Freeform13CRLStrokeDataV10StrokeTypeOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100A21980);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLStrokeData.StrokeType()
{
  return &type metadata for CRLStrokeData.StrokeType;
}

unint64_t sub_100A219BC()
{
  unint64_t result = qword_10168C4D0;
  if (!qword_10168C4D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168C4D0);
  }
  return result;
}

unint64_t sub_100A21A14()
{
  unint64_t result = qword_10168C4D8;
  if (!qword_10168C4D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168C4D8);
  }
  return result;
}

unint64_t sub_100A21A6C()
{
  unint64_t result = qword_10168C4E0;
  if (!qword_10168C4E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168C4E0);
  }
  return result;
}

unint64_t sub_100A21AC4()
{
  unint64_t result = qword_10168C4E8;
  if (!qword_10168C4E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168C4E8);
  }
  return result;
}

unint64_t sub_100A21B1C()
{
  unint64_t result = qword_10168C4F0;
  if (!qword_10168C4F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168C4F0);
  }
  return result;
}

unint64_t sub_100A21B74()
{
  unint64_t result = qword_10168C4F8;
  if (!qword_10168C4F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168C4F8);
  }
  return result;
}

unint64_t sub_100A21BCC()
{
  unint64_t result = qword_10168C500;
  if (!qword_10168C500)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168C500);
  }
  return result;
}

unint64_t sub_100A21C24()
{
  unint64_t result = qword_10168C508;
  if (!qword_10168C508)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168C508);
  }
  return result;
}

unint64_t sub_100A21C7C()
{
  unint64_t result = qword_10168C510;
  if (!qword_10168C510)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168C510);
  }
  return result;
}

unint64_t sub_100A21CD4()
{
  unint64_t result = qword_10168C518;
  if (!qword_10168C518)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168C518);
  }
  return result;
}

unint64_t sub_100A21D2C()
{
  unint64_t result = qword_10168C520;
  if (!qword_10168C520)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168C520);
  }
  return result;
}

unint64_t sub_100A21D84()
{
  unint64_t result = qword_10168C528;
  if (!qword_10168C528)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168C528);
  }
  return result;
}

unint64_t sub_100A21DE4()
{
  unint64_t result = qword_10168C530;
  if (!qword_10168C530)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168C530);
  }
  return result;
}

unint64_t sub_100A21E3C()
{
  unint64_t result = qword_10168C538;
  if (!qword_10168C538)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168C538);
  }
  return result;
}

unint64_t sub_100A21E94()
{
  unint64_t result = qword_10168C540;
  if (!qword_10168C540)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168C540);
  }
  return result;
}

unint64_t sub_100A21EEC()
{
  unint64_t result = qword_10168C548;
  if (!qword_10168C548)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168C548);
  }
  return result;
}

unint64_t sub_100A21F44()
{
  unint64_t result = qword_10168C550;
  if (!qword_10168C550)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168C550);
  }
  return result;
}

unint64_t sub_100A21F9C()
{
  unint64_t result = qword_10168C558;
  if (!qword_10168C558)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168C558);
  }
  return result;
}

uint64_t sub_100A21FF0()
{
  return sub_1006BFA64(&qword_10168C560, &qword_10168C568);
}

unint64_t sub_100A2201C()
{
  unint64_t result = qword_10168C570;
  if (!qword_10168C570)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168C570);
  }
  return result;
}

unint64_t sub_100A22074()
{
  unint64_t result = qword_10168C578;
  if (!qword_10168C578)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168C578);
  }
  return result;
}

unint64_t sub_100A220CC()
{
  unint64_t result = qword_10168C580;
  if (!qword_10168C580)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168C580);
  }
  return result;
}

unint64_t sub_100A22124()
{
  unint64_t result = qword_10168C588;
  if (!qword_10168C588)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168C588);
  }
  return result;
}

unint64_t sub_100A2217C()
{
  unint64_t result = qword_10168C590;
  if (!qword_10168C590)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168C590);
  }
  return result;
}

unint64_t sub_100A221D4()
{
  unint64_t result = qword_10168C598;
  if (!qword_10168C598)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168C598);
  }
  return result;
}

unint64_t sub_100A2222C()
{
  unint64_t result = qword_10168C5A0;
  if (!qword_10168C5A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168C5A0);
  }
  return result;
}

uint64_t sub_100A22280(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100522D34(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100A222E4()
{
  unint64_t result = qword_10168C5C8;
  if (!qword_10168C5C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168C5C8);
  }
  return result;
}

unint64_t sub_100A22338()
{
  unint64_t result = qword_10168C5D0;
  if (!qword_10168C5D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168C5D0);
  }
  return result;
}

unint64_t sub_100A2238C()
{
  unint64_t result = qword_10168C5D8;
  if (!qword_10168C5D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168C5D8);
  }
  return result;
}

unint64_t sub_100A223E0()
{
  unint64_t result = qword_10168C5E0;
  if (!qword_10168C5E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168C5E0);
  }
  return result;
}

unint64_t sub_100A22434()
{
  unint64_t result = qword_10168C5E8;
  if (!qword_10168C5E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168C5E8);
  }
  return result;
}

unint64_t sub_100A22488()
{
  unint64_t result = qword_10168C5F0;
  if (!qword_10168C5F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168C5F0);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for CRLSmartStrokeData.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100A225A8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLSmartStrokeData.CodingKeys()
{
  return &type metadata for CRLSmartStrokeData.CodingKeys;
}

unint64_t sub_100A225E4()
{
  unint64_t result = qword_10168C5F8;
  if (!qword_10168C5F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168C5F8);
  }
  return result;
}

uint64_t sub_100A22864()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 96) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_100A228F0;
  return sub_100A22DA8();
}

uint64_t sub_100A228F0()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 104) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return _swift_task_switch(sub_100A22A24, 0, 0);
  }
  else
  {
    uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_100A22A24()
{
  uint64_t v1 = v0[13];
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117E810;
  v0[11] = v1;
  swift_errorRetain();
  sub_1005057FC(&qword_101672BD0);
  uint64_t v3 = String.init<A>(describing:)();
  uint64_t v5 = v4;
  *(void *)(inited + 56) = &type metadata for String;
  *(void *)(inited + 64) = sub_100528BE4();
  *(void *)(inited + 32) = v3;
  *(void *)(inited + 40) = v5;
  sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"importBoardItem()", 17, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLUSDItemImporter.swift", 85, 2, 64, (uint64_t)"Unable to create CRLUSDZItem: %@", 32, 2u, inited);
  sub_1005598CC(inited, (uint64_t)"importBoardItem()", 17, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLUSDItemImporter.swift", 85, 2, 64);
  swift_bridgeObjectRelease();
  swift_errorRelease();
  unsigned int v6 = (uint64_t (*)(void))v0[1];
  return v6();
}

uint64_t sub_100A22D00(const void *a1, void *a2)
{
  v2[2] = a2;
  v2[3] = _Block_copy(a1);
  a2;
  uint64_t v4 = (void *)swift_task_alloc();
  v2[4] = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_1008A1150;
  return sub_100A22864();
}

uint64_t sub_100A22DA8()
{
  *(void *)(v1 + 40) = v0;
  sub_1005057FC(&qword_101672BB0);
  *(void *)(v1 + 48) = swift_task_alloc();
  return _swift_task_switch(sub_100A22E3C, 0, 0);
}

uint64_t sub_100A22E3C()
{
  uint64_t v1 = v0[5];
  uint64_t v2 = OBJC_IVAR____TtC8Freeform18CRLUSDItemImporter_importBoardItemTask;
  if (*(void *)(v1 + OBJC_IVAR____TtC8Freeform18CRLUSDItemImporter_importBoardItemTask))
  {
    swift_retain();
    char isCancelled = swift_task_isCancelled();
    swift_release();
    if (isCancelled)
    {
      sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"_importBoardItem()", 18, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLUSDItemImporter.swift", 85, 2, 69);
    }
    if (*(void *)(v1 + v2))
    {
      swift_retain();
      sub_1005057FC(&qword_101672BD0);
      Task.cancel()();
      swift_release();
    }
  }
  uint64_t v4 = v0[6];
  uint64_t v5 = type metadata accessor for TaskPriority();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v4, 1, 1, v5);
  uint64_t v6 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v7 = (void *)swift_allocObject();
  v7[2] = 0;
  v7[3] = 0;
  void v7[4] = v6;
  uint64_t v8 = sub_10061F26C(v4, (uint64_t)&unk_10168C680, (uint64_t)v7);
  sub_100522F00(v4, &qword_101672BB0);
  *(void *)(v1 + v2) = v8;
  swift_release();
  uint64_t v9 = *(void *)(v1 + v2);
  v0[7] = v9;
  if (v9)
  {
    swift_retain();
    uint64_t v10 = (void *)swift_task_alloc();
    v0[8] = v10;
    uint64_t v11 = sub_1005057FC(&qword_101672BD0);
    v0[9] = v11;
    *uint64_t v10 = v0;
    v10[1] = sub_100A23178;
    return Task.result.getter(v0 + 2, v9, (char *)&type metadata for () + 8, v11, &protocol self-conformance witness table for Error);
  }
  else
  {
    id v12 = *(id *)(v0[5] + OBJC_IVAR____TtC8Freeform18CRLUSDItemImporter__progress);
    [v12 maxValue];
    [v12 setValue:];

    swift_task_dealloc();
    int v13 = (uint64_t (*)(void))v0[1];
    return v13();
  }
}

uint64_t sub_100A23178()
{
  swift_task_dealloc();
  swift_release();
  return _swift_task_switch(sub_100A23290, 0, 0);
}

uint64_t sub_100A23290()
{
  if (*(unsigned char *)(v0 + 24))
  {
    *(void *)(v0 + 32) = *(void *)(v0 + 16);
    swift_willThrowTypedImpl();
  }
  else
  {
    id v2 = *(id *)(*(void *)(v0 + 40) + OBJC_IVAR____TtC8Freeform18CRLUSDItemImporter__progress);
    [v2 maxValue];
    [v2 setValue:];
  }
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100A2336C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 40) = a4;
  return _swift_task_switch(sub_100A2338C, 0, 0);
}

uint64_t sub_100A2338C()
{
  swift_beginAccess();
  uint64_t Strong = (char *)swift_unknownObjectWeakLoadStrong();
  id v2 = Strong;
  v0[6] = Strong;
  if (Strong)
  {
    id v3 = [Strong delegate];
    if (v3)
    {
      uint64_t v4 = v3;
      if ([v3 respondsToSelector:"boardItemImporterWillIgnoreMediaCompatibilityOnAllDevicesRequirement:"])[v4 boardItemImporterWillIgnoreMediaCompatibilityOnAllDevicesRequirement:v2]; {
      swift_unknownObjectRelease();
      }
    }
    id v5 = *(id *)&v2[OBJC_IVAR____TtC8Freeform18CRLUSDItemImporter__progress];
    [v5 maxValue];
    [v5 setValue:v6 * 0.01];

    uint64_t v7 = (void *)swift_task_alloc();
    v0[7] = v7;
    *uint64_t v7 = v0;
    v7[1] = sub_100A23514;
    return sub_100A236FC();
  }
  else
  {
    uint64_t v9 = (uint64_t (*)(void))v0[1];
    return v9();
  }
}

uint64_t sub_100A23514()
{
  *(void *)(*(void *)v1 + 64) = v0;
  swift_task_dealloc();
  if (v0) {
    id v2 = sub_1008A6E2C;
  }
  else {
    id v2 = sub_100A23628;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100A23628()
{
  uint64_t v1 = *(char **)(v0 + 48);
  if (!*(void *)&v1[OBJC_IVAR____TtC8Freeform18CRLUSDItemImporter__boardItem]
    && !*(void *)&v1[OBJC_IVAR____TtC8Freeform18CRLUSDItemImporter__error])
  {
    sub_100A26540();
    uint64_t v2 = swift_allocError();
    *id v3 = 0;
    uint64_t v4 = sub_100A25C78(v2);
    swift_errorRelease();
    sub_100A261F4(v4);
    swift_errorRelease();
    uint64_t v1 = *(char **)(v0 + 48);
  }

  id v5 = *(uint64_t (**)(void))(v0 + 8);
  return v5();
}

uint64_t sub_100A236FC()
{
  v1[21] = v0;
  sub_1005057FC((uint64_t *)&unk_10167D2B0);
  v1[22] = swift_task_alloc();
  uint64_t v2 = type metadata accessor for CRLAssetData();
  v1[23] = v2;
  v1[24] = *(void *)(v2 - 8);
  v1[25] = swift_task_alloc();
  v1[26] = swift_task_alloc();
  sub_1005057FC(&qword_101672E90);
  v1[27] = swift_task_alloc();
  v1[28] = swift_task_alloc();
  uint64_t v3 = type metadata accessor for URL();
  v1[29] = v3;
  v1[30] = *(void *)(v3 - 8);
  v1[31] = swift_task_alloc();
  v1[32] = swift_task_alloc();
  v1[33] = swift_task_alloc();
  return _swift_task_switch(sub_100A238B4, 0, 0);
}

uint64_t sub_100A238B4()
{
  id v1 = [*(id *)(v0 + 168) URL];
  if (v1)
  {
    uint64_t v2 = v1;
    uint64_t v3 = *(void *)(v0 + 256);
    uint64_t v4 = *(void *)(v0 + 232);
    uint64_t v5 = *(void *)(v0 + 240);
    uint64_t v6 = *(void *)(v0 + 224);
    static URL._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 32);
    v7(v6, v3, v4);
    uint64_t v8 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 56);
    v8(v6, 0, 1, v4);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v6, 1, v4) != 1)
    {
      uint64_t v9 = *(void *)(v0 + 256);
      uint64_t v10 = *(void *)(v0 + 264);
      uint64_t v11 = *(void *)(v0 + 232);
      uint64_t v12 = *(void *)(v0 + 240);
      uint64_t v33 = v12;
      int v13 = *(void **)(v0 + 168);
      uint64_t v34 = v10;
      v7(v10, *(void *)(v0 + 224), v11);
      uint64_t v14 = (char *)[v13 boardItemFactory];
      id v32 = *(id *)&v14[OBJC_IVAR____TtC8Freeform19CRLBoardItemFactory_board];

      uint64_t v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16);
      v15(v9, v10, v11);
      uint64_t v31 = (objc_class *)type metadata accessor for CRLPreinsertionAssetWrapper();
      uint64_t v16 = (char *)objc_allocWithZone(v31);
      uint64_t v17 = URL.lastPathComponent.getter();
      int v18 = (uint64_t *)&v16[OBJC_IVAR____TtC8Freeform27CRLPreinsertionAssetWrapper__filename];
      *int v18 = v17;
      v18[1] = v19;
      uint64_t v20 = &v16[OBJC_IVAR____TtC8Freeform27CRLPreinsertionAssetWrapper__url];
      v15((uint64_t)&v16[OBJC_IVAR____TtC8Freeform27CRLPreinsertionAssetWrapper__url], v9, v11);
      v8((uint64_t)v20, 0, 1, v11);
      *(void *)&v16[OBJC_IVAR____TtC8Freeform27CRLPreinsertionAssetWrapper__owner] = v32;
      *(void *)&v16[OBJC_IVAR____TtC8Freeform27CRLPreinsertionAssetWrapper__alreadyInsertedAsset] = 0;
      *(void *)&v16[OBJC_IVAR____TtC8Freeform27CRLPreinsertionAssetWrapper__tempDir] = 0;
      swift_unknownObjectRetain();

      *(void *)(v0 + 152) = v16;
      *(void *)(v0 + 160) = v31;
      [v0 init];

      uint64_t v22 = *(void (**)(uint64_t, uint64_t))(v33 + 8);
      v22(v9, v11);
      v22(v34, v11);
LABEL_6:
      *(void *)(v0 + 272) = v8;
      *(void *)(v0 + 280) = v21;
      v21;
      static Task<>.checkCancellation()();
      if (qword_10166F438 != -1) {
        swift_once();
      }
      uint64_t v24 = *(void *)(v0 + 168);
      *(unsigned char *)(v0 + 145) = byte_10171ADF0;
      uint64_t v25 = OBJC_IVAR____TtC8Freeform18CRLUSDItemImporter__progress;
      *(void *)(v0 + 288) = OBJC_IVAR____TtC8Freeform18CRLUSDItemImporter__progress;
      [*(id *)(v24 + v25) maxValue];
      *(void *)(v0 + 296) = v26;
      uint64_t v27 = (void *)swift_task_alloc();
      *(void *)(v0 + 304) = v27;
      *uint64_t v27 = v0;
      v27[1] = sub_100A23D50;
      uint64_t v28 = *(void *)(v0 + 208);
      return sub_100B4E54C(v28);
    }
  }
  else
  {
    uint64_t v8 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v0 + 240) + 56);
    v8(*(void *)(v0 + 224), 1, 1, *(void *)(v0 + 232));
  }
  int v23 = *(void **)(v0 + 168);
  sub_100522F00(*(void *)(v0 + 224), &qword_101672E90);
  id v21 = [v23 preinsertionAsset];
  if (v21) {
    goto LABEL_6;
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v30 = *(uint64_t (**)(void))(v0 + 8);
  return v30();
}

uint64_t sub_100A23D50()
{
  *(void *)(*(void *)v1 + 312) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_100A253E8;
  }
  else {
    uint64_t v2 = sub_100A23E64;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100A23E64()
{
  uint64_t v1 = *(void *)(v0 + 312);
  [*(id *)(*(void *)(v0 + 168) + *(void *)(v0 + 288)) setValue:*(double *)(v0 + 296) * 0.3];
  static Task<>.checkCancellation()();
  if (v1)
  {
    sub_100671108(*(void *)(v0 + 208));
    uint64_t v2 = *(void **)(v0 + 280);
    uint64_t v3 = sub_100A25C78(v1);
    sub_100A261F4(v3);
    swift_errorRelease();

    swift_errorRelease();
LABEL_8:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v22 = *(uint64_t (**)(void))(v0 + 8);
    return v22();
  }
  uint64_t v4 = (char *)[*(id *)(v0 + 168) boardItemFactory];
  uint64_t v5 = (char *)objc_retain(*(id *)(*(void *)&v4[OBJC_IVAR____TtC8Freeform19CRLBoardItemFactory_board]
                                 + OBJC_IVAR____TtC8Freeform8CRLBoard_store));

  uint64_t v6 = *(void *)&v5[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManagerLock];
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v6 + 16));
  uint64_t v7 = OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManager;
  uint64_t v8 = *(void **)&v5[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManager];
  if (v8)
  {
    id v9 = *(id *)&v5[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManager];
  }
  else
  {
    id v10 = objc_allocWithZone((Class)type metadata accessor for CRLAssetFileManager());
    uint64_t v11 = v5;
    id v12 = sub_100EAFDE4((uint64_t)v11);

    int v13 = *(void **)&v5[v7];
    *(void *)&v5[v7] = v12;
    id v9 = v12;

    uint64_t v8 = 0;
  }
  uint64_t v14 = *(void *)(v0 + 232);
  uint64_t v15 = *(void *)(v0 + 240);
  uint64_t v17 = *(void *)(v0 + 208);
  uint64_t v16 = *(char **)(v0 + 216);
  int v18 = *(os_unfair_lock_s **)(v6 + 16);
  id v19 = v8;
  os_unfair_lock_unlock(v18);
  sub_100EA7CA0(v17, 0, 3, 0, 0, v16);

  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v16, 1, v14) == 1)
  {
    uint64_t v20 = *(void **)(v0 + 280);
    uint64_t v21 = *(void *)(v0 + 216);
    sub_100671108(*(void *)(v0 + 208));

    sub_100522F00(v21, &qword_101672E90);
    goto LABEL_8;
  }
  uint64_t v24 = *(void *)(v0 + 168);
  (*(void (**)(void, void, void))(*(void *)(v0 + 240) + 32))(*(void *)(v0 + 248), *(void *)(v0 + 216), *(void *)(v0 + 232));
  id v25 = [objc_allocWithZone((Class)CRLCanvasInfoGeometry) initWithPosition:1 size:1 widthValid:0 heightValid:0 horizontalFlip:0 verticalFlip:0 angle:0.0 *(double *)(v24 + OBJC_IVAR____TtC8Freeform18CRLUSDItemImporter_largeBoundingSize) *(double *)(v24 + OBJC_IVAR____TtC8Freeform18CRLUSDItemImporter_largeBoundingSize + 8) 0.0];
  *(void *)(v0 + 320) = v25;
  [v25 size];
  *(double *)(v0 + 328) = sub_100064070();
  *(void *)(v0 + 336) = v26;
  *(void *)(v0 + 344) = v27;
  *(void *)(v0 + 352) = v28;
  *(void *)(v0 + 360) = type metadata accessor for MainActor();
  *(void *)(v0 + 368) = static MainActor.shared.getter();
  uint64_t v30 = dispatch thunk of Actor.unownedExecutor.getter();
  *(void *)(v0 + 376) = v30;
  *(void *)(v0 + 384) = v29;
  return _swift_task_switch(sub_100A241E0, v30, v29);
}

uint64_t sub_100A241E0()
{
  if (*(unsigned char *)(v0 + 145) == 1)
  {
    uint64_t v1 = *(void (**)(__int8 *, uint64_t, uint64_t, uint64_t))(v0 + 272);
    uint64_t v2 = *(void *)(v0 + 232);
    _s17QLSnapshotBackendCMa(0);
    uint64_t v3 = (int64x2_t *)swift_allocObject();
    *(void *)(v0 + 392) = v3;
    v3[1] = vdupq_n_s64(0x408F400000000000uLL);
    v1(&v3->i8[OBJC_IVAR____TtCO8Freeform15CRLUSDRendering17QLSnapshotBackend_modelURL], 1, 1, v2);
    uint64_t v4 = &v3->i8[OBJC_IVAR____TtCO8Freeform15CRLUSDRendering17QLSnapshotBackend_delegate];
    *(uint64_t *)((char *)&v3->i64[1] + OBJC_IVAR____TtCO8Freeform15CRLUSDRendering17QLSnapshotBackend_delegate) = 0;
    swift_unknownObjectWeakInit();
    UUID.init()();
    *((void *)v4 + 1) = 0;
    swift_unknownObjectWeakAssign();
    _s17QLSnapshotBackendC12BackendStateOMa(0);
    swift_storeEnumTagMultiPayload();
    *(void *)(v0 + 400) = static MainActor.shared.getter();
    uint64_t v5 = (void *)swift_task_alloc();
    *(void *)(v0 + 408) = v5;
    *uint64_t v5 = v0;
    v5[1] = sub_100A243F8;
    double v6 = *(double *)(v0 + 344);
    double v7 = *(double *)(v0 + 352);
    double v8 = *(double *)(v0 + 328);
    double v9 = *(double *)(v0 + 336);
    uint64_t v10 = *(void *)(v0 + 248);
    return sub_100F503DC(v0 + 64, v10, (uint64_t)v3, (uint64_t)&off_101515C20, 2.0, 1.0, v8, v9, v6, v7);
  }
  else
  {
    *(void *)(v0 + 472) = static MainActor.shared.getter();
    uint64_t v13 = dispatch thunk of Actor.unownedExecutor.getter();
    *(void *)(v0 + 480) = v13;
    *(void *)(v0 + 488) = v12;
    return _swift_task_switch(sub_100A24748, v13, v12);
  }
}

uint64_t sub_100A243F8()
{
  uint64_t v2 = *v1;
  long long v3 = *(_OWORD *)(*v1 + 80);
  *(_OWORD *)(v2 + 424) = *(_OWORD *)(v2 + 64);
  *(void *)(v2 + 416) = v0;
  *(_OWORD *)(v2 + 440) = v3;
  *(_OWORD *)(v2 + 456) = *(_OWORD *)(v2 + 96);
  swift_task_dealloc();
  uint64_t v5 = dispatch thunk of Actor.unownedExecutor.getter();
  if (v0) {
    double v6 = sub_100A2466C;
  }
  else {
    double v6 = sub_100A24570;
  }
  return _swift_task_switch(v6, v5, v4);
}

uint64_t sub_100A24570()
{
  swift_release();
  swift_release();
  uint64_t v1 = *(void *)(v0 + 376);
  uint64_t v2 = *(void *)(v0 + 384);
  return _swift_task_switch(sub_100A245DC, v1, v2);
}

uint64_t sub_100A245DC()
{
  uint64_t v1 = *(void *)(v0 + 440);
  uint64_t v2 = *(void *)(v0 + 432);
  long long v3 = *(_OWORD *)(v0 + 416);
  *(void *)(v0 + 624) = *(void *)(v0 + 464);
  *(_OWORD *)(v0 + 608) = *(_OWORD *)(v0 + 448);
  *(void *)(v0 + 600) = v1;
  *(void *)(v0 + 592) = v2;
  *(_OWORD *)(v0 + 576) = v3;
  swift_release();
  return _swift_task_switch(sub_100A24C40, 0, 0);
}

uint64_t sub_100A2466C()
{
  swift_release();
  uint64_t v1 = *(void *)(v0 + 376);
  uint64_t v2 = *(void *)(v0 + 384);
  return _swift_task_switch(sub_100A246D0, v1, v2);
}

uint64_t sub_100A246D0()
{
  swift_release();
  *(void *)(v0 + 632) = *(void *)(v0 + 416);
  swift_release();
  return _swift_task_switch(sub_100A24ED4, 0, 0);
}

uint64_t sub_100A24748()
{
  id v1 = objc_allocWithZone((Class)_s15AppExRepBackendCMa(0));
  id v2 = sub_10076B144(0, 0, 0);
  *((void *)v0 + 62) = v2;
  *((void *)v0 + 63) = static MainActor.shared.getter();
  long long v3 = (void *)swift_task_alloc();
  *((void *)v0 + 64) = v3;
  *long long v3 = v0;
  v3[1] = sub_100A24844;
  double v4 = v0[43];
  double v5 = v0[44];
  double v6 = v0[41];
  double v7 = v0[42];
  uint64_t v8 = *((void *)v0 + 31);
  return sub_100F503DC((uint64_t)(v0 + 2), v8, (uint64_t)v2, (uint64_t)&off_101512748, 2.0, 1.0, v6, v7, v4, v5);
}

uint64_t sub_100A24844()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 520) = v0;
  long long v3 = *(_OWORD *)(v2 + 32);
  *(_OWORD *)(v2 + 528) = *(_OWORD *)(v2 + 16);
  *(_OWORD *)(v2 + 544) = v3;
  *(_OWORD *)(v2 + 560) = *(_OWORD *)(v2 + 48);
  swift_task_dealloc();
  uint64_t v5 = dispatch thunk of Actor.unownedExecutor.getter();
  if (v0) {
    double v6 = sub_100A24B00;
  }
  else {
    double v6 = sub_100A249AC;
  }
  return _swift_task_switch(v6, v5, v4);
}

uint64_t sub_100A249AC()
{
  swift_release();
  uint64_t v1 = *(void *)(v0 + 480);
  uint64_t v2 = *(void *)(v0 + 488);
  return _swift_task_switch(sub_100A24A18, v1, v2);
}

uint64_t sub_100A24A18()
{
  swift_release();
  uint64_t v1 = *(void *)(v0 + 376);
  uint64_t v2 = *(void *)(v0 + 384);
  return _swift_task_switch(sub_100A24A7C, v1, v2);
}

uint64_t sub_100A24A7C()
{
  uint64_t v1 = *(void *)(v0 + 520);
  long long v2 = *(_OWORD *)(v0 + 560);
  long long v3 = *(_OWORD *)(v0 + 528);
  *(_OWORD *)(v0 + 600) = *(_OWORD *)(v0 + 544);
  *(_OWORD *)(v0 + 616) = v2;
  *(_OWORD *)(v0 + 584) = v3;
  *(void *)(v0 + 576) = v1;
  swift_release();
  return _swift_task_switch(sub_100A24C40, 0, 0);
}

uint64_t sub_100A24B00()
{
  swift_release();
  uint64_t v1 = *(void *)(v0 + 480);
  uint64_t v2 = *(void *)(v0 + 488);
  return _swift_task_switch(sub_100A24B64, v1, v2);
}

uint64_t sub_100A24B64()
{
  uint64_t v1 = (void *)v0[62];
  swift_release();

  uint64_t v2 = v0[47];
  uint64_t v3 = v0[48];
  return _swift_task_switch(sub_100A24BD0, v2, v3);
}

uint64_t sub_100A24BD0()
{
  *(void *)(v0 + 632) = *(void *)(v0 + 520);
  swift_release();
  return _swift_task_switch(sub_100A24ED4, 0, 0);
}

uint64_t sub_100A24C40()
{
  uint64_t v1 = *(void *)(v0 + 576);
  static Task<>.checkCancellation()();
  unint64_t v2 = *(void *)(v0 + 592);
  uint64_t v3 = *(void *)(v0 + 584);
  if (v1)
  {
    uint64_t v4 = *(void **)(v0 + 320);
    uint64_t v6 = *(void *)(v0 + 240);
    uint64_t v5 = *(void *)(v0 + 248);
    uint64_t v7 = *(void *)(v0 + 232);
    uint64_t v8 = *(void *)(v0 + 208);
    sub_100510084(*(void *)(v0 + 584), *(void *)(v0 + 592));

    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
    sub_100671108(v8);
    uint64_t v11 = *(void **)(v0 + 280);
    uint64_t v12 = sub_100A25C78(v1);
    sub_100A261F4(v12);
    swift_errorRelease();

    swift_errorRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v13 = *(uint64_t (**)(void))(v0 + 8);
    return v13();
  }
  else
  {
    double v9 = (char *)[*(id *)(v0 + 168) boardItemFactory];
    id v10 = *(id *)&v9[OBJC_IVAR____TtC8Freeform19CRLBoardItemFactory_board];

    objc_allocWithZone((Class)type metadata accessor for CRLPreinsertionAssetWrapper());
    sub_100510D4C(v3, v2);
    *(void *)(v0 + 640) = sub_100B4DED8(v3, v2, 0xD000000000000010, 0x80000001012698E0, (uint64_t)v10);
    uint64_t v15 = (void *)swift_task_alloc();
    *(void *)(v0 + 648) = v15;
    *uint64_t v15 = v0;
    v15[1] = sub_100A25000;
    uint64_t v16 = *(void *)(v0 + 200);
    return sub_100B4E54C(v16);
  }
}

uint64_t sub_100A24ED4()
{
  uint64_t v2 = *(void *)(v0 + 240);
  uint64_t v1 = *(void *)(v0 + 248);
  uint64_t v3 = *(void *)(v0 + 232);
  uint64_t v4 = *(void *)(v0 + 208);

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  sub_100671108(v4);
  uint64_t v5 = *(void **)(v0 + 280);
  uint64_t v6 = sub_100A25C78(*(void *)(v0 + 632));
  sub_100A261F4(v6);
  swift_errorRelease();

  swift_errorRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = *(uint64_t (**)(void))(v0 + 8);
  return v7();
}

uint64_t sub_100A25000()
{
  *(void *)(*(void *)v1 + 656) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_100A254E0;
  }
  else {
    uint64_t v2 = sub_100A25114;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100A25114()
{
  uint64_t v1 = *(void *)(v0 + 656);
  static Task<>.checkCancellation()();
  uint64_t v2 = *(void **)(v0 + 640);
  if (v1)
  {
    uint64_t v3 = *(void **)(v0 + 320);
    uint64_t v5 = *(void *)(v0 + 240);
    uint64_t v4 = *(void *)(v0 + 248);
    uint64_t v6 = *(void *)(v0 + 232);
    uint64_t v8 = *(void *)(v0 + 200);
    uint64_t v7 = *(void *)(v0 + 208);
    sub_100510084(*(void *)(v0 + 584), *(void *)(v0 + 592));

    sub_100671108(v8);
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
    sub_100671108(v7);
    uint64_t v9 = *(void **)(v0 + 280);
    uint64_t v10 = sub_100A25C78(v1);
    sub_100A261F4(v10);
    swift_errorRelease();

    swift_errorRelease();
  }
  else
  {
    uint64_t v11 = *(void *)(v0 + 624);
    uint64_t v12 = *(void *)(v0 + 616);
    long long v27 = *(_OWORD *)(v0 + 600);
    uint64_t v30 = *(void *)(v0 + 584);
    unint64_t v31 = *(void *)(v0 + 592);
    uint64_t v13 = *(void **)(v0 + 320);
    double v14 = *(double *)(v0 + 296);
    uint64_t v28 = *(void *)(v0 + 288);
    uint64_t v29 = *(void **)(v0 + 280);
    uint64_t v32 = *(void *)(v0 + 240);
    uint64_t v33 = *(void *)(v0 + 232);
    uint64_t v34 = *(void *)(v0 + 248);
    uint64_t v15 = *(void *)(v0 + 200);
    uint64_t v16 = *(void *)(v0 + 208);
    uint64_t v17 = *(void *)(v0 + 184);
    uint64_t v18 = *(void *)(v0 + 192);
    uint64_t v20 = *(char **)(v0 + 168);
    unint64_t v19 = *(void *)(v0 + 176);
    id v21 = [v20 boardItemFactory];
    sub_10077F98C(v15, v19);
    (*(void (**)(unint64_t, void, uint64_t, uint64_t))(v18 + 56))(v19, 0, 1, v17);
    *(_OWORD *)(v0 + 112) = v27;
    *(void *)(v0 + 128) = v12;
    *(void *)(v0 + 136) = v11;
    *(unsigned char *)(v0 + 144) = 0;
    id v22 = sub_100F3E7A0(v13, v16, v19, v0 + 112);

    sub_100522F00(v19, (uint64_t *)&unk_10167D2B0);
    int v23 = *(void **)&v20[OBJC_IVAR____TtC8Freeform18CRLUSDItemImporter__boardItem];
    *(void *)&v20[OBJC_IVAR____TtC8Freeform18CRLUSDItemImporter__boardItem] = v22;

    id v24 = *(id *)&v20[v28];
    [v24 setValue:v14 * 0.9];

    sub_100510084(v30, v31);
    sub_100671108(v15);
    (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v34, v33);
    sub_100671108(v16);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  id v25 = *(uint64_t (**)(void))(v0 + 8);
  return v25();
}

uint64_t sub_100A253E8()
{
  uint64_t v1 = (void *)v0[35];
  uint64_t v2 = sub_100A25C78(v0[39]);
  sub_100A261F4(v2);
  swift_errorRelease();

  swift_errorRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t sub_100A254E0()
{
  uint64_t v1 = (void *)v0[80];
  uint64_t v2 = (void *)v0[40];
  uint64_t v4 = v0[30];
  uint64_t v3 = v0[31];
  uint64_t v5 = v0[29];
  uint64_t v6 = v0[26];
  sub_100510084(v0[73], v0[74]);

  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  sub_100671108(v6);
  uint64_t v7 = (void *)v0[35];
  uint64_t v8 = sub_100A25C78(v0[82]);
  sub_100A261F4(v8);
  swift_errorRelease();

  swift_errorRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v9 = (uint64_t (*)(void))v0[1];
  return v9();
}

id sub_100A256A4(uint64_t a1, void *a2)
{
  *(void *)&v2[OBJC_IVAR____TtC8Freeform18CRLUSDItemImporter_cancellable] = 0;
  *(int64x2_t *)&v2[OBJC_IVAR____TtC8Freeform18CRLUSDItemImporter_largeBoundingSize] = vdupq_n_s64(0x4072C00000000000uLL);
  *(int64x2_t *)&v2[OBJC_IVAR____TtC8Freeform18CRLUSDItemImporter_smallBoundingSize] = vdupq_n_s64(0x4051800000000000uLL);
  uint64_t v5 = OBJC_IVAR____TtC8Freeform18CRLUSDItemImporter__progress;
  id v6 = objc_allocWithZone((Class)CRLBasicProgress);
  uint64_t v7 = v2;
  *(void *)&v2[v5] = [v6 initWithMaxValue:100.0];
  *(void *)&v7[OBJC_IVAR____TtC8Freeform18CRLUSDItemImporter_importBoardItemTask] = 0;
  *(void *)&v7[OBJC_IVAR____TtC8Freeform18CRLUSDItemImporter__boardItem] = 0;
  *(void *)&v7[OBJC_IVAR____TtC8Freeform18CRLUSDItemImporter__error] = 0;

  URL._bridgeToObjectiveC()(v8);
  uint64_t v10 = v9;
  v16.receiver = v7;
  v16.super_class = (Class)type metadata accessor for CRLUSDItemImporter();
  id v11 = [super initWithURL:v10 boardItemFactory:a2];

  uint64_t v12 = type metadata accessor for URL();
  uint64_t v13 = *(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8);
  id v14 = v11;
  v13(a1, v12);
  if (v14) {

  }
  return v14;
}

id sub_100A258A0(void *a1, void *a2)
{
  *(void *)&v2[OBJC_IVAR____TtC8Freeform18CRLUSDItemImporter_cancellable] = 0;
  *(int64x2_t *)&v2[OBJC_IVAR____TtC8Freeform18CRLUSDItemImporter_largeBoundingSize] = vdupq_n_s64(0x4072C00000000000uLL);
  *(int64x2_t *)&v2[OBJC_IVAR____TtC8Freeform18CRLUSDItemImporter_smallBoundingSize] = vdupq_n_s64(0x4051800000000000uLL);
  uint64_t v5 = OBJC_IVAR____TtC8Freeform18CRLUSDItemImporter__progress;
  id v6 = objc_allocWithZone((Class)CRLBasicProgress);
  uint64_t v7 = v2;
  *(void *)&v2[v5] = [v6 initWithMaxValue:100.0];
  *(void *)&v7[OBJC_IVAR____TtC8Freeform18CRLUSDItemImporter_importBoardItemTask] = 0;
  *(void *)&v7[OBJC_IVAR____TtC8Freeform18CRLUSDItemImporter__boardItem] = 0;
  *(void *)&v7[OBJC_IVAR____TtC8Freeform18CRLUSDItemImporter__error] = 0;

  v10.receiver = v7;
  v10.super_class = (Class)type metadata accessor for CRLUSDItemImporter();
  [super initWithData:a1 boardItemFactory:a2];

  return v8;
}

id sub_100A259F0()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLUSDItemImporter();
  return [super dealloc];
}

uint64_t type metadata accessor for CRLUSDItemImporter()
{
  return self;
}

uint64_t sub_100A25AC4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for URL();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2, v4);
  id v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  BOOL v7 = sub_1002094C4(0x2000000000000uLL);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v6, a1, v2);
  if (!v7) {
    goto LABEL_5;
  }
  id v8 = [self defaultManager];
  if ((URL.isFileURL.getter() & 1) == 0)
  {

LABEL_5:
    uint64_t v11 = 0;
    goto LABEL_6;
  }
  HIBYTE(v13) = 0;
  URL.path.getter();
  NSString v9 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  unsigned int v10 = [v8 fileExistsAtPath:v9 isDirectory:(char *)&v13 + 7];

  uint64_t v11 = v10 & (HIBYTE(v13) ^ 1);
LABEL_6:
  (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  return v11;
}

uint64_t sub_100A25C78(uint64_t a1)
{
  char v52 = a1;
  swift_errorRetain();
  sub_1005057FC(&qword_101672BD0);
  if (swift_dynamicCast())
  {
    if (v51 == 6 && v50 == 0)
    {
      uint64_t v34 = self;
      id v35 = [v34 mainBundle];
      NSString v36 = String._bridgeToObjectiveC()();
      NSString v37 = String._bridgeToObjectiveC()();
      id v38 = [v35 localizedStringForKey:v36 value:v37 table:0];

      uint64_t v39 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v41 = v40;

      id v42 = [v34 mainBundle];
      NSString v43 = String._bridgeToObjectiveC()();
      NSString v44 = String._bridgeToObjectiveC()();
      id v45 = [v42 localizedStringForKey:v43 value:v44 table:0];

      uint64_t v46 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v48 = v47;

      uint64_t v18 = sub_100DCA448(a1, (id)0x69, 0, 104, 0, 1, v39, v41, v46, v48, 0);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_12;
    }
    sub_1007676B8(v50, *((unint64_t *)&v50 + 1), v51);
  }
  swift_errorRelease();
  swift_errorRetain();
  if (swift_dynamicCast() && v52 == 1)
  {
    uint64_t v3 = self;
    id v4 = [v3 mainBundle];
    NSString v5 = String._bridgeToObjectiveC()();
    NSString v6 = String._bridgeToObjectiveC()();
    id v7 = [v4 localizedStringForKey:v5 value:v6 table:0];

    uint64_t v8 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v10 = v9;

    id v11 = [v3 mainBundle];
    NSString v12 = String._bridgeToObjectiveC()();
    NSString v13 = String._bridgeToObjectiveC()();
    id v14 = [v11 localizedStringForKey:v12 value:v13 table:0];

    uint64_t v15 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v17 = v16;

    uint64_t v18 = sub_100DCA448(a1, (id)0x67, 0, 104, 0, 1, v8, v10, v15, v17, 0);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_12:
    swift_errorRelease();
    return v18;
  }
  swift_errorRelease();
  unint64_t v19 = self;
  id v20 = [v19 mainBundle];
  NSString v21 = String._bridgeToObjectiveC()();
  NSString v22 = String._bridgeToObjectiveC()();
  id v23 = [v20 localizedStringForKey:v21 value:v22 table:0];

  uint64_t v24 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v26 = v25;

  id v27 = [v19 mainBundle];
  NSString v28 = String._bridgeToObjectiveC()();
  NSString v29 = String._bridgeToObjectiveC()();
  id v30 = [v27 localizedStringForKey:v28 value:v29 table:0];

  uint64_t v31 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v33 = v32;

  uint64_t v18 = sub_100DCA448(a1, (id)0x64, 0, 104, 0, 1, v24, v26, v31, v33, 0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v18;
}

uint64_t sub_100A261F4(uint64_t a1)
{
  uint64_t v2 = OBJC_IVAR____TtC8Freeform18CRLUSDItemImporter__error;
  *(void *)&v1[OBJC_IVAR____TtC8Freeform18CRLUSDItemImporter__error] = a1;
  swift_errorRetain();
  uint64_t result = swift_errorRelease();
  if (*(void *)&v1[v2])
  {
    swift_errorRetain();
    if (qword_10166F9C8 != -1) {
      swift_once();
    }
    swift_beginAccess();
    id v4 = (void *)static OS_os_log.crlDefault;
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_10117DF40;
    *(void *)(inited + 56) = type metadata accessor for CRLUSDItemImporter();
    *(void *)(inited + 64) = sub_100A263C8();
    *(void *)(inited + 32) = v1;
    swift_getErrorValue();
    id v6 = v4;
    id v7 = v1;
    uint64_t v8 = Error.publicDescription.getter(v16, v17);
    uint64_t v10 = v9;
    *(void *)(inited + 96) = &type metadata for String;
    unint64_t v11 = sub_100528BE4();
    *(void *)(inited + 104) = v11;
    *(void *)(inited + 72) = v8;
    *(void *)(inited + 80) = v10;
    swift_getErrorValue();
    uint64_t v12 = Error.fullDescription.getter(v15);
    *(void *)(inited + 136) = &type metadata for String;
    *(void *)(inited + 144) = v11;
    *(void *)(inited + 112) = v12;
    *(void *)(inited + 120) = v13;
    uint64_t v14 = static os_log_type_t.error.getter();
    sub_100BAC898((uint64_t)v6, (uint64_t)&_mh_execute_header, v14, (uint64_t)"Importer (%p) error: %{public}@ <%@>", 36, 2, inited);
    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();

    return swift_errorRelease();
  }
  return result;
}

unint64_t sub_100A263C8()
{
  unint64_t result = qword_10168C670;
  if (!qword_10168C670)
  {
    type metadata accessor for CRLUSDItemImporter();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_10168C670);
  }
  return result;
}

uint64_t sub_100A2641C()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100A26454()
{
  swift_unknownObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_100A26494()
{
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_100528488;
  v3[5] = v2;
  return _swift_task_switch(sub_100A2338C, 0, 0);
}

unint64_t sub_100A26540()
{
  unint64_t result = qword_10168C688;
  if (!qword_10168C688)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168C688);
  }
  return result;
}

uint64_t sub_100A26594()
{
  _Block_release(*(const void **)(v0 + 16));

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100A265D4()
{
  uint64_t v2 = *(const void **)(v0 + 16);
  uint64_t v3 = *(void **)(v0 + 24);
  id v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  *id v4 = v1;
  v4[1] = sub_100528488;
  uint64_t v5 = (uint64_t (*)(const void *, void *))((char *)&dword_10168C690 + dword_10168C690);
  return v5(v2, v3);
}

unsigned char *storeEnumTagSinglePayload for CRLUSDItemImporter.USDImportError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100A26754);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLUSDItemImporter.USDImportError()
{
  return &type metadata for CRLUSDItemImporter.USDImportError;
}

unint64_t sub_100A26790()
{
  unint64_t result = qword_10168C6A8;
  if (!qword_10168C6A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168C6A8);
  }
  return result;
}

id sub_100A267E4(void *a1, void *a2)
{
  uint64_t v5 = v2;
  UUID.init()();
  *(void *)&v5[OBJC_IVAR____TtC8Freeform10CRLFileRep____lazy_storage___placeholderImage] = 1;

  v11.receiver = v5;
  v11.super_class = (Class)type metadata accessor for CRLFileRep();
  id v6 = [super initWithLayout:a1 canvas:a2];
  id v7 = v6;
  if (a2)
  {
    id v8 = v6;
    id v9 = a2;
    if ([v9 isCanvasInteractive]) {
      sub_100A26E14();
    }
  }
  else
  {
    id v9 = a1;
  }

  return v7;
}

void sub_100A2690C()
{
  uint64_t v1 = type metadata accessor for UUID();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(void *)(v2 + 64);
  __chkstk_darwin(v1, v4);
  uint64_t v5 = (char *)v39 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1005057FC(&qword_101672BB0);
  __chkstk_darwin(v6 - 8, v7);
  id v9 = (char *)v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = (objc_class *)type metadata accessor for CRLFileRep();
  v45.receiver = v0;
  v45.super_class = v10;
  [super willBeRemoved];
  id v11 = [v0 layout];
  id v12 = [v11 info];

  if (!v12) {
    goto LABEL_11;
  }
  type metadata accessor for CRLFileItem();
  uint64_t v13 = swift_dynamicCastClass();
  if (!v13)
  {
    swift_unknownObjectRelease();
LABEL_11:
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"item", 4, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLFileRep.swift", 81, 2, 78, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"item", 4, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLFileRep.swift", 81, 2, 78);
    __break(1u);
    return;
  }
  uint64_t v14 = (char *)*(id *)(v13 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_store);
  swift_unknownObjectRelease();
  uint64_t v15 = *(void *)&v14[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetManagerLock];
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v15 + 16));
  uint64_t v16 = OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetManager;
  uint64_t v17 = *(void **)&v14[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetManager];
  if (v17)
  {
    id v18 = *(id *)&v14[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetManager];
  }
  else
  {
    Class v40 = (Class)type metadata accessor for CRLAssetManager();
    unint64_t v19 = (char *)objc_allocWithZone(v40);
    v39[1] = &v19[OBJC_IVAR____TtC8Freeform15CRLAssetManager_store];
    swift_unknownObjectWeakInit();
    uint64_t v43 = v3;
    uint64_t v20 = v1;
    uint64_t v21 = OBJC_IVAR____TtC8Freeform15CRLAssetManager_lock;
    type metadata accessor for CRLUnfairLock();
    uint64_t v22 = swift_allocObject();
    uint64_t v41 = v0;
    uint64_t v23 = v22;
    v39[0] = v14;
    uint64_t v24 = v19;
    id v42 = v9;
    uint64_t v25 = v24;
    uint64_t v26 = (_DWORD *)swift_slowAlloc();
    *uint64_t v26 = 0;
    *(void *)(v23 + 16) = v26;
    atomic_thread_fence(memory_order_acq_rel);
    *(void *)&v19[v21] = v23;
    uint64_t v1 = v20;
    uint64_t v5 = (char *)v39 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
    *(void *)&v25[OBJC_IVAR____TtC8Freeform15CRLAssetManager_assets] = _swiftEmptyDictionarySingleton;
    uint64_t v27 = OBJC_IVAR____TtC8Freeform15CRLAssetManager_owners;
    *(void *)&v25[v27] = [self mapTableWithKeyOptions:517 valueOptions:0];
    *(void *)&v25[OBJC_IVAR____TtC8Freeform15CRLAssetManager_garbageCollectionWorkItem] = 0;
    NSString v28 = (void *)v39[0];
    swift_unknownObjectWeakAssign();

    v44.receiver = v25;
    id v9 = v42;
    v44.super_class = v40;
    [super init];

    id v30 = *(void **)&v14[v16];
    *(void *)&v14[v16] = v29;
    id v18 = v29;

    uint64_t v0 = v41;
    uint64_t v17 = 0;
  }
  uint64_t v31 = *(os_unfair_lock_s **)(v15 + 16);
  id v32 = v17;
  os_unfair_lock_unlock(v31);

  uint64_t v33 = OBJC_IVAR____TtC8Freeform10CRLFileRep_downloadObserverIdentifier;
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v35 = Strong;
    uint64_t v36 = type metadata accessor for TaskPriority();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v36 - 8) + 56))(v9, 1, 1, v36);
    (*(void (**)(char *, char *, uint64_t))(v2 + 16))(v5, &v0[v33], v1);
    unint64_t v37 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
    id v38 = (char *)swift_allocObject();
    *((void *)v38 + 2) = 0;
    *((void *)v38 + 3) = 0;
    *((void *)v38 + 4) = v35;
    (*(void (**)(char *, char *, uint64_t))(v2 + 32))(&v38[v37], v5, v1);
    sub_1005912D0((uint64_t)v9, (uint64_t)&unk_101693C10, (uint64_t)v38);

    swift_release();
  }
  else
  {
  }
}

void sub_100A26E14()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for CRLFileItemAtomicDataStruct(0);
  __chkstk_darwin(v2 - 8, v3);
  uint64_t v5 = (char *)&v56 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for CRLAssetData();
  *(void *)&double v8 = __chkstk_darwin(v6 - 8, v7).n128_u64[0];
  uint64_t v58 = (uint64_t)&v56 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  [v0 layout:v8];
  id v11 = [v10 info];

  if (!v11) {
    goto LABEL_17;
  }
  Class v57 = (Class)type metadata accessor for CRLFileItem();
  if (!swift_dynamicCastClass())
  {
    swift_unknownObjectRelease();
LABEL_17:
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"item", 4, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLFileRep.swift", 81, 2, 78, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"item", 4, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLFileRep.swift", 81, 2, 78);
    __break(1u);
    goto LABEL_18;
  }
  uint64_t v12 = OBJC_IVAR____TtC8Freeform10CRLFileRep_downloadObserverIdentifier;
  Class v13 = sub_100A5B0AC();
  swift_unknownObjectRelease();
  uint64_t v14 = (void *)((char *)v13 + OBJC_IVAR____TtC8Freeform8CRLAsset_storage);
  uint64_t v15 = *(void *)((char *)v13 + OBJC_IVAR____TtC8Freeform8CRLAsset_storage + 24);
  uint64_t v16 = *(void *)((char *)v13 + OBJC_IVAR____TtC8Freeform8CRLAsset_storage + 32);
  sub_10050F848((Class)((char *)v13 + OBJC_IVAR____TtC8Freeform8CRLAsset_storage), v15);
  if ((*(uint64_t (**)(uint64_t, uint64_t))(v16 + 64))(v15, v16))
  {
    int v56 = &v1[v12];
    uint64_t v17 = swift_allocObject();
    swift_unknownObjectWeakInit();
    id v18 = v5;
    uint64_t v20 = v14[3];
    uint64_t v19 = v14[4];
    sub_10050F848(v14, v20);
    uint64_t v21 = *(void (**)(char *, uint64_t, void (*)(), uint64_t, uint64_t, uint64_t))(v19 + 72);
    swift_retain();
    uint64_t v22 = v19;
    uint64_t v5 = v18;
    v21(v56, 2, sub_100653724, v17, v20, v22);
    swift_release_n();
    uint64_t v23 = v14[3];
    uint64_t v24 = v14[4];
    sub_10050F848(v14, v23);
    if ((*(uint64_t (**)(uint64_t, uint64_t))(v24 + 64))(v23, v24))
    {
      uint64_t v25 = v14[3];
      uint64_t v26 = v14[4];
      sub_10050F848(v14, v25);
      (*(void (**)(uint64_t, uint64_t))(v26 + 88))(v25, v26);
    }
  }

  id v27 = [v1 layout];
  id v28 = [v27 info];

  if (!v28) {
    goto LABEL_19;
  }
  uint64_t v29 = swift_dynamicCastClass();
  if (!v29)
  {
LABEL_18:
    swift_unknownObjectRelease();
LABEL_19:
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"item", 4, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLFileRep.swift", 81, 2, 78, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"item", 4, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLFileRep.swift", 81, 2, 78);
    __break(1u);
    goto LABEL_20;
  }
  id v30 = (void *)v29;
  id v31 = [v1 layout];
  id v32 = [v31 info];

  if (!v32)
  {
LABEL_21:
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"item", 4, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLFileRep.swift", 81, 2, 78, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"item", 4, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLFileRep.swift", 81, 2, 78);
    __break(1u);
    return;
  }
  if (!swift_dynamicCastClass())
  {
LABEL_20:
    swift_unknownObjectRelease();
    goto LABEL_21;
  }
  swift_beginAccess();
  swift_retain();
  sub_1005057FC(&qword_101685450);
  CRRegister.wrappedValue.getter();
  swift_endAccess();
  swift_release();
  uint64_t v33 = v58;
  sub_10077F98C((uint64_t)v5, v58);
  sub_1008A79F0((uint64_t)v5, type metadata accessor for CRLFileItemAtomicDataStruct);
  swift_unknownObjectRelease();
  uint64_t v34 = (char *)[v30 store];
  uint64_t v35 = *(void *)&v34[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetManagerLock];
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v35 + 16));
  uint64_t v36 = OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetManager;
  unint64_t v37 = *(void **)&v34[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetManager];
  if (v37)
  {
    id v38 = *(id *)&v34[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetManager];
  }
  else
  {
    Class v57 = (Class)type metadata accessor for CRLAssetManager();
    uint64_t v39 = (char *)objc_allocWithZone(v57);
    int v56 = &v39[OBJC_IVAR____TtC8Freeform15CRLAssetManager_store];
    swift_unknownObjectWeakInit();
    uint64_t v40 = OBJC_IVAR____TtC8Freeform15CRLAssetManager_lock;
    type metadata accessor for CRLUnfairLock();
    uint64_t v41 = swift_allocObject();
    id v42 = v34;
    uint64_t v43 = v39;
    objc_super v44 = (_DWORD *)swift_slowAlloc();
    *objc_super v44 = 0;
    *(void *)(v41 + 16) = v44;
    atomic_thread_fence(memory_order_acq_rel);
    *(void *)&v39[v40] = v41;
    *(void *)&v43[OBJC_IVAR____TtC8Freeform15CRLAssetManager_assets] = _swiftEmptyDictionarySingleton;
    uint64_t v45 = OBJC_IVAR____TtC8Freeform15CRLAssetManager_owners;
    *(void *)&v43[v45] = [self mapTableWithKeyOptions:517 valueOptions:0];
    *(void *)&v43[OBJC_IVAR____TtC8Freeform15CRLAssetManager_garbageCollectionWorkItem] = 0;
    swift_unknownObjectWeakAssign();

    v59.receiver = v43;
    v59.super_class = v57;
    id v46 = [super init];

    uint64_t v47 = *(void **)&v34[v36];
    *(void *)&v34[v36] = v46;
    id v38 = v46;

    uint64_t v33 = v58;
    unint64_t v37 = 0;
  }
  uint64_t v48 = *(os_unfair_lock_s **)(v35 + 16);
  id v49 = v37;
  os_unfair_lock_unlock(v48);

  long long v50 = (char *)sub_100F453C8(v33, v30, v38);
  swift_unknownObjectRelease();

  sub_1008A79F0(v33, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
  char v51 = &v50[OBJC_IVAR____TtC8Freeform8CRLAsset_storage];
  uint64_t v52 = *(void *)&v50[OBJC_IVAR____TtC8Freeform8CRLAsset_storage + 24];
  uint64_t v53 = *(void *)&v50[OBJC_IVAR____TtC8Freeform8CRLAsset_storage + 32];
  sub_10050F848(&v50[OBJC_IVAR____TtC8Freeform8CRLAsset_storage], v52);
  if ((*(uint64_t (**)(uint64_t, uint64_t))(v53 + 64))(v52, v53))
  {
    uint64_t v54 = *((void *)v51 + 3);
    uint64_t v55 = *((void *)v51 + 4);
    sub_10050F848(v51, v54);
    (*(void (**)(uint64_t, uint64_t))(v55 + 88))(v54, v55);
  }
}

void sub_100A27610(uint64_t a1)
{
  v7.receiver = v1;
  v7.super_class = (Class)type metadata accessor for CRLFileRep();
  [super processChangedProperty:a1];
  if (a1 == 49)
  {
    uint64_t v3 = CRLLinkViewHostingRep.reloadView.getter();
    [v3 removeFromSuperview];

    uint64_t v4 = OBJC_IVAR____TtC8Freeform21CRLLinkViewHostingRep_linkView;
    uint64_t v5 = *(void **)&v1[OBJC_IVAR____TtC8Freeform21CRLLinkViewHostingRep_linkView];
    if (v5)
    {
      CRLLinkViewHostingRep.updateReloadView()();
      uint64_t v5 = *(void **)&v1[v4];
    }
    *(void *)&v1[v4] = 0;

    [v1 setNeedsDisplay];
    id v6 = [v1 interactiveCanvasController];
    [v6 invalidateContentLayersForRep:v1];
  }
}

void sub_100A27774()
{
  id v1 = [v0 layout];
  id v2 = [v1 info];

  if (v2)
  {
    type metadata accessor for CRLFileItem();
    if (swift_dynamicCastClass()) {
      return;
    }
    swift_unknownObjectRelease();
  }
  sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"item", 4, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLFileRep.swift", 81, 2, 78, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
  sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"item", 4, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLFileRep.swift", 81, 2, 78);
  __break(1u);
}

void sub_100A27890()
{
  uint64_t v1 = type metadata accessor for CRLFileItemAtomicDataStruct(0);
  __chkstk_darwin(v1 - 8, v2);
  uint64_t v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for CRLAssetData();
  *(void *)&double v7 = __chkstk_darwin(v5, v6).n128_u64[0];
  uint64_t v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  [v0 layout:v7];
  id v11 = [v10 info];

  if (v11)
  {
    type metadata accessor for CRLFileItem();
    if (swift_dynamicCastClass())
    {
      swift_beginAccess();
      swift_retain();
      sub_1005057FC(&qword_101685450);
      CRRegister.wrappedValue.getter();
      swift_endAccess();
      swift_release();
      sub_10077F98C((uint64_t)v4, (uint64_t)v9);
      sub_1008A79F0((uint64_t)v4, type metadata accessor for CRLFileItemAtomicDataStruct);
      swift_unknownObjectRelease();
      swift_bridgeObjectRetain();
      sub_1008A79F0((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
      return;
    }
    swift_unknownObjectRelease();
  }
  sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"item", 4, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLFileRep.swift", 81, 2, 78, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
  sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"item", 4, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLFileRep.swift", 81, 2, 78);
  __break(1u);
}

void sub_100A27B9C()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC8Freeform10CRLFileRep_downloadObserverIdentifier;
  uint64_t v2 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform10CRLFileRep____lazy_storage___placeholderImage);

  sub_100522AD8(v3);
}

id sub_100A27C18()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLFileRep();
  return [super dealloc];
}

uint64_t sub_100A27CD0()
{
  return type metadata accessor for CRLFileRep();
}

uint64_t type metadata accessor for CRLFileRep()
{
  uint64_t result = qword_10168C6E8;
  if (!qword_10168C6E8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100A27D24()
{
  uint64_t result = type metadata accessor for UUID();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_100A27DDC()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100A27E14()
{
  uint64_t v1 = type metadata accessor for UUID();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 40) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_unknownObjectRelease();

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_100A27EE8()
{
  uint64_t v0 = sub_1005057FC(&qword_101673B40);
  __chkstk_darwin(v0 - 8, v1);
  uint64_t v3 = (char *)v17 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[0] = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v4 = *(void *)(v17[0] - 8);
  __chkstk_darwin(v17[0], v5);
  double v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for Locale();
  __chkstk_darwin(v8 - 8, v9);
  uint64_t v10 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v10 - 8, v11);
  uint64_t v12 = type metadata accessor for LocalizedStringResource();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12, v14);
  uint64_t v15 = type metadata accessor for TypeDisplayRepresentation();
  sub_100568B28(v15, qword_10171B4A8);
  sub_100556B74(v15, (uint64_t)qword_10171B4A8);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  (*(void (**)(char *, void, void))(v4 + 104))(v7, enum case for LocalizedStringResource.BundleDescription.main(_:), v17[0]);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v3, 1, 1, v12);
  return TypeDisplayRepresentation.init(name:numericFormat:)();
}

unint64_t sub_100A281D8()
{
  uint64_t v0 = sub_1005057FC(&qword_10167D138);
  __chkstk_darwin(v0 - 8, v1);
  uint64_t v60 = (char *)&v41 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_1005057FC(&qword_101673B40);
  __chkstk_darwin(v3 - 8, v4);
  uint64_t v55 = (char *)&v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6, v8);
  uint64_t v10 = (char *)&v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for Locale();
  __chkstk_darwin(v11 - 8, v12);
  uint64_t v14 = (char *)&v41 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v15 - 8, v16);
  id v18 = (char *)&v41 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v58 = type metadata accessor for LocalizedStringResource();
  uint64_t v19 = *(void *)(v58 - 8);
  __chkstk_darwin(v58, v20);
  sub_1005057FC(&qword_10168C768);
  uint64_t v21 = sub_1005057FC(&qword_10168C770);
  uint64_t v22 = *(void *)(v21 - 8);
  uint64_t v51 = *(void *)(v22 + 72);
  uint64_t v23 = v21 - 8;
  unint64_t v24 = (*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80);
  uint64_t v25 = swift_allocObject();
  uint64_t v45 = v25;
  id v46 = v18;
  *(_OWORD *)(v25 + 16) = xmmword_10117E800;
  unint64_t v50 = v25 + v24;
  *(unsigned char *)(v25 + v24) = 0;
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  unsigned int v49 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  Class v57 = *(void (**)(char *))(v7 + 104);
  uint64_t v53 = v6;
  uint64_t v54 = v7 + 104;
  uint64_t v47 = v10;
  v57(v10);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  uint64_t v26 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v19 + 56);
  uint64_t v48 = v19 + 56;
  objc_super v59 = v26;
  uint64_t v27 = v58;
  v26(v55, 1, 1, v58);
  uint64_t v56 = type metadata accessor for DisplayRepresentation.Image();
  uint64_t v28 = *(void *)(v56 - 8);
  uint64_t v52 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v28 + 56);
  uint64_t v43 = v28 + 56;
  v52(v60, 1, 1, v56);
  DisplayRepresentation.init(title:subtitle:image:)();
  unint64_t v30 = v50;
  uint64_t v29 = v51;
  uint64_t v31 = *(int *)(v23 + 56);
  uint64_t v32 = v23;
  uint64_t v44 = v23;
  id v42 = (unsigned char *)(v50 + v51 + v31);
  *(unsigned char *)(v50 + v51) = 1;
  String.LocalizationValue.init(stringLiteral:)();
  uint64_t v41 = v14;
  static Locale.current.getter();
  uint64_t v33 = v49;
  ((void (*)(char *, void, uint64_t))v57)(v47, v49, v6);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  uint64_t v34 = v55;
  v59(v55, 1, 1, v27);
  v52(v60, 1, 1, v56);
  DisplayRepresentation.init(title:subtitle:image:)();
  uint64_t v35 = (unsigned char *)(v30 + 2 * v29);
  id v42 = &v35[*(int *)(v32 + 56)];
  *uint64_t v35 = 2;
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t v36 = v47;
  ((void (*)(char *, uint64_t, uint64_t))v57)(v47, v33, v53);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  unint64_t v37 = v34;
  v59(v34, 1, 1, v58);
  id v38 = v60;
  uint64_t v39 = v52;
  v52(v60, 1, 1, v56);
  DisplayRepresentation.init(title:subtitle:image:)();
  *(unsigned char *)(v50 + 2 * v29 + v51) = 3;
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  ((void (*)(char *, void, uint64_t))v57)(v36, v49, v53);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  v59(v37, 1, 1, v58);
  v39(v38, 1, 1, v56);
  DisplayRepresentation.init(title:subtitle:image:)();
  unint64_t result = sub_100A3C524(v45);
  qword_10171B4C0 = result;
  return result;
}

uint64_t sub_100A2894C(unsigned __int8 *a1, char *a2)
{
  return sub_10094EBA8(*a1, *a2);
}

unint64_t sub_100A2895C()
{
  unint64_t result = qword_10168C6F8;
  if (!qword_10168C6F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168C6F8);
  }
  return result;
}

Swift::Int sub_100A289B0()
{
  return Hasher._finalize()();
}

uint64_t sub_100A28A90()
{
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_100A28B58()
{
  return Hasher._finalize()();
}

unint64_t sub_100A28C34@<X0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_100A29428(*a1);
  *a2 = result;
  return result;
}

void sub_100A28C64(uint64_t a1@<X8>)
{
  unint64_t v2 = 0xE400000000000000;
  uint64_t v3 = 1684828002;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE600000000000000;
      uint64_t v3 = 0x63696C617469;
      goto LABEL_3;
    case 2:
      *(void *)a1 = 0x6E696C7265646E75;
      *(void *)(a1 + 8) = 0xE900000000000065;
      break;
    case 3:
      strcpy((char *)a1, "strikethrough");
      *(_WORD *)(a1 + 14) = -4864;
      break;
    default:
LABEL_3:
      *(void *)a1 = v3;
      *(void *)(a1 + 8) = v2;
      break;
  }
}

unint64_t sub_100A28D08()
{
  unint64_t result = qword_10168C700;
  if (!qword_10168C700)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168C700);
  }
  return result;
}

unint64_t sub_100A28D60()
{
  unint64_t result = qword_10168C708;
  if (!qword_10168C708)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168C708);
  }
  return result;
}

unint64_t sub_100A28DB8()
{
  unint64_t result = qword_10168C710;
  if (!qword_10168C710)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168C710);
  }
  return result;
}

unint64_t sub_100A28E10()
{
  unint64_t result = qword_10168C718;
  if (!qword_10168C718)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168C718);
  }
  return result;
}

unint64_t sub_100A28E68()
{
  unint64_t result = qword_10168C720;
  if (!qword_10168C720)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168C720);
  }
  return result;
}

unint64_t sub_100A28EC0()
{
  unint64_t result = qword_10168C728;
  if (!qword_10168C728)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168C728);
  }
  return result;
}

unint64_t sub_100A28F18()
{
  unint64_t result = qword_10168C730;
  if (!qword_10168C730)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168C730);
  }
  return result;
}

uint64_t sub_100A28F6C@<X0>(uint64_t a1@<X8>)
{
  if (qword_10166F6F0 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for TypeDisplayRepresentation();
  uint64_t v3 = sub_100556B74(v2, (uint64_t)qword_10171B4A8);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);

  return v4(a1, v3, v2);
}

uint64_t sub_100A29014()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_100A29064()
{
  unint64_t result = qword_10168C738;
  if (!qword_10168C738)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168C738);
  }
  return result;
}

uint64_t sub_100A290B8(uint64_t a1)
{
  unint64_t v2 = sub_100A29064();

  return static AppEnum.defaultResolverSpecification.getter(a1, v2);
}

unint64_t sub_100A29108()
{
  unint64_t result = qword_10168C740;
  if (!qword_10168C740)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168C740);
  }
  return result;
}

unint64_t sub_100A29160()
{
  unint64_t result = qword_10168C748;
  if (!qword_10168C748)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168C748);
  }
  return result;
}

unint64_t sub_100A291B8()
{
  unint64_t result = qword_10168C750;
  if (!qword_10168C750)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168C750);
  }
  return result;
}

uint64_t sub_100A2920C()
{
  if (qword_10166F6F8 != -1) {
    swift_once();
  }

  return swift_bridgeObjectRetain();
}

uint64_t sub_100A29268(uint64_t a1)
{
  unint64_t v2 = sub_100A28F18();

  return CaseDisplayRepresentable.localizedStringResource.getter(a1, v2);
}

unint64_t sub_100A292B8()
{
  unint64_t result = qword_10168C758;
  if (!qword_10168C758)
  {
    sub_100522D34(&qword_10168C760);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168C758);
  }
  return result;
}

void sub_100A29314(void *a1@<X8>)
{
  *a1 = &off_101502F18;
}

unsigned char *storeEnumTagSinglePayload for CRLFontStyleEntity(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100A293F0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLFontStyleEntity()
{
  return &type metadata for CRLFontStyleEntity;
}

unint64_t sub_100A29428(Swift::String string)
{
  object = string._object;
  v2._uint64_t countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  unint64_t v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_101504708, v2);
  swift_bridgeObjectRelease();
  if (v3 >= 4) {
    return 4;
  }
  else {
    return v3;
  }
}

id sub_100A29474(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v59 = a4;
  uint64_t v54 = a2;
  uint64_t v5 = type metadata accessor for CRLBoardItemParentAffinity();
  __chkstk_darwin(v5 - 8, v6);
  uint64_t v8 = (char *)&v51 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1005057FC((uint64_t *)&unk_101683E10);
  __chkstk_darwin(v9, v10);
  uint64_t v12 = (char *)&v51 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1005057FC((uint64_t *)&unk_101674520);
  __chkstk_darwin(v13 - 8, v14);
  uint64_t v55 = (uint64_t)&v51 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16, v17);
  uint64_t v53 = (char *)&v51 - v18;
  __chkstk_darwin(v19, v20);
  uint64_t v57 = (uint64_t)&v51 - v21;
  __chkstk_darwin(v22, v23);
  uint64_t v58 = (uint64_t)&v51 - v24;
  __chkstk_darwin(v25, v26);
  uint64_t v52 = (uint64_t)&v51 - v27;
  __chkstk_darwin(v28, v29);
  uint64_t v31 = (char *)&v51 - v30;
  uint64_t v56 = v4;
  swift_retain();
  uint64_t v32 = sub_100B74988(1);
  swift_release();
  uint64_t v33 = (uint64_t)v32 + *(void *)(*v32 + 632);
  swift_beginAccess();
  sub_100522E9C(v33, (uint64_t)v12, (uint64_t *)&unk_101683E10);
  swift_retain();
  uint64_t v34 = sub_1005057FC((uint64_t *)&unk_101683E30);
  CRRegister.wrappedValue.getter();
  sub_100522E9C((uint64_t)v8, (uint64_t)v31, (uint64_t *)&unk_101674520);
  sub_10068F1F4((uint64_t)v8);
  sub_100522F00((uint64_t)v12, (uint64_t *)&unk_101683E10);
  swift_release();
  id v35 = v32;
  uint64_t v36 = (uint64_t)v62;
  sub_100B74C3C(v59);
  if (v36)
  {
    sub_100522F00((uint64_t)v31, (uint64_t *)&unk_101674520);
    swift_release();
  }
  else
  {
    uint64_t v37 = v58;
    sub_100522E9C(v54, v58, (uint64_t *)&unk_101674520);
    int v62 = v31;
    sub_100522E9C((uint64_t)v31, v57, (uint64_t *)&unk_101674520);
    uint64_t v38 = type metadata accessor for UUID();
    uint64_t v39 = *(void *)(v38 - 8);
    int v40 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v39 + 48))(v37, 1, v38);
    uint64_t v41 = v52;
    uint64_t v42 = (uint64_t)v53;
    uint64_t v59 = v34;
    if (v40 == 1)
    {
      sub_100A2A208(v57, v52);
      swift_retain();
      sub_100522F00(v58, (uint64_t *)&unk_101674520);
    }
    else
    {
      swift_retain();
      sub_100522F00(v57, (uint64_t *)&unk_101674520);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v39 + 32))(v41, v58, v38);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v39 + 56))(v41, 0, 1, v38);
    }
    sub_100522E9C(v41, v42, (uint64_t *)&unk_101674520);
    swift_beginAccess();
    uint64_t v43 = v55;
    sub_100522E9C(v42, v55, (uint64_t *)&unk_101674520);
    uint64_t v44 = (void (*)(unsigned char *, void))CRRegister.wrappedValue.modify();
    sub_10068EA54(v43, v45);
    v44(v61, 0);
    sub_100522F00(v42, (uint64_t *)&unk_101674520);
    swift_endAccess();
    sub_100522F00(v41, (uint64_t *)&unk_101674520);
    swift_release();
    id v46 = *(void **)(v56 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_store);
    uint64_t v47 = (char *)objc_allocWithZone((Class)type metadata accessor for CRLUnknownItem());
    *(void *)&v47[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_store] = v46;
    *(void *)&v47[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData] = v32;
    uint64_t v48 = (objc_class *)type metadata accessor for CRLBoardItemBase(0);
    v60.receiver = v47;
    v60.super_class = v48;
    id v49 = v46;
    id v35 = [super init];
    sub_100522F00((uint64_t)v62, (uint64_t *)&unk_101674520);
  }
  return v35;
}

id sub_100A299C8()
{
  uint64_t v1 = v0;
  swift_retain();
  Swift::String v2 = sub_100B74988(0);
  swift_release();
  unint64_t v3 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_store);
  uint64_t v4 = (char *)objc_allocWithZone((Class)type metadata accessor for CRLUnknownItem());
  *(void *)&v4[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_store] = v3;
  *(void *)&v4[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData] = v2;
  v7.receiver = v4;
  v7.super_class = (Class)type metadata accessor for CRLBoardItemBase(0);
  id v5 = v3;
  return [super init];
}

uint64_t sub_100A29ABC()
{
  type metadata accessor for CRLUnknownItem();
  uint64_t v1 = swift_dynamicCastClass();
  if (!v1) {
    goto LABEL_34;
  }
  uint64_t v2 = v1;
  unint64_t v3 = *(_UNKNOWN *****)(v1 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
  if (*v3 != &off_101694008) {
    unint64_t v3 = 0;
  }
  uint64_t v4 = (char *)v3 + qword_101693FA8;
  if (v4[8]) {
    uint64_t v5 = *(void *)v4 + 2;
  }
  else {
    uint64_t v5 = *(void *)v4;
  }
  uint64_t v6 = *(_UNKNOWN *****)(v0 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
  if (*v6 != &off_101694008) {
    uint64_t v6 = 0;
  }
  objc_super v7 = (char *)v6 + qword_101693FA8;
  uint64_t v8 = *(void *)v7;
  if (v7[8] == 1)
  {
    switch(v8)
    {
      case 1:
        if (v5 != 3) {
          goto LABEL_34;
        }
        goto LABEL_14;
      case 2:
        if (v5 != 4) {
          goto LABEL_34;
        }
        goto LABEL_14;
      case 3:
        if (v5 != 5) {
          goto LABEL_34;
        }
        goto LABEL_14;
      case 4:
        if (v5 != 6) {
          goto LABEL_34;
        }
        goto LABEL_14;
      case 5:
        if (v5 != 7) {
          goto LABEL_34;
        }
        goto LABEL_14;
      case 6:
        if (v5 != 8) {
          goto LABEL_34;
        }
        goto LABEL_14;
      case 7:
        if (v5 != 9) {
          goto LABEL_34;
        }
        goto LABEL_14;
      case 8:
        if (v5 != 10) {
          goto LABEL_34;
        }
        goto LABEL_14;
      case 9:
        if (v5 != 11) {
          goto LABEL_34;
        }
        goto LABEL_14;
      case 10:
        if (v5 != 12) {
          goto LABEL_34;
        }
        goto LABEL_14;
      default:
        if (v5 != 2) {
          goto LABEL_34;
        }
        goto LABEL_14;
    }
  }
  if (v5 != v8)
  {
LABEL_34:
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"createUndoingMutations(fromSnapshot:)", 37, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLUnknownItem.swift", 85, 2, 38, (uint64_t)"Tried to generate undo from mismatched type", 43, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_100586FD4((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Tried to generate undo from mismatched type");
    sub_1005871AC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"createUndoingMutations(fromSnapshot:)", 37, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLUnknownItem.swift", 85, 2, 38);
    SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v11, v12);
    _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
    JUMPOUT(0x100A29D58);
  }
LABEL_14:
  swift_unknownObjectRetain();
  uint64_t v9 = sub_100CF6354(v2, v0);
  swift_unknownObjectRelease();
  return v9;
}

void *sub_100A29D84()
{
  type metadata accessor for CRLUnknownItem();
  uint64_t v1 = swift_dynamicCastClass();
  if (!v1) {
    goto LABEL_35;
  }
  uint64_t v2 = *(_UNKNOWN *****)(v1 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
  if (*v2 != &off_101694008) {
    uint64_t v2 = 0;
  }
  unint64_t v3 = (char *)v2 + qword_101693FA8;
  if (v3[8]) {
    uint64_t v4 = *(void *)v3 + 2;
  }
  else {
    uint64_t v4 = *(void *)v3;
  }
  uint64_t v5 = *(_UNKNOWN *****)(v0 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
  if (*v5 != &off_101694008) {
    uint64_t v5 = 0;
  }
  uint64_t v6 = (char *)v5 + qword_101693FA8;
  uint64_t v7 = *(void *)v6;
  if (v6[8] == 1)
  {
    switch(v7)
    {
      case 1:
        if (v4 != 3) {
          goto LABEL_35;
        }
        goto LABEL_14;
      case 2:
        if (v4 != 4) {
          goto LABEL_35;
        }
        goto LABEL_14;
      case 3:
        if (v4 != 5) {
          goto LABEL_35;
        }
        goto LABEL_14;
      case 4:
        if (v4 != 6) {
          goto LABEL_35;
        }
        goto LABEL_14;
      case 5:
        if (v4 != 7) {
          goto LABEL_35;
        }
        goto LABEL_14;
      case 6:
        if (v4 != 8) {
          goto LABEL_35;
        }
        goto LABEL_14;
      case 7:
        if (v4 != 9) {
          goto LABEL_35;
        }
        goto LABEL_14;
      case 8:
        if (v4 != 10) {
          goto LABEL_35;
        }
        goto LABEL_14;
      case 9:
        if (v4 != 11) {
          goto LABEL_35;
        }
        goto LABEL_14;
      case 10:
        if (v4 != 12) {
          goto LABEL_35;
        }
        goto LABEL_14;
      default:
        if (v4 != 2) {
          goto LABEL_35;
        }
        goto LABEL_14;
    }
  }
  if (v4 != v7)
  {
LABEL_35:
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"createSpecificDataObservableDeltas(fromSnapshot:)", 49, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLUnknownItem.swift", 85, 2, 48, (uint64_t)"Tried to create observable deltas from mismatched type", 54, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_100586FD4((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Tried to create observable deltas from mismatched type");
    uint64_t v9 = "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLUnknownItem.swift";
    uint64_t v10 = 85;
    uint64_t v11 = 48;
LABEL_37:
    sub_1005871AC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"createSpecificDataObservableDeltas(fromSnapshot:)", 49, 2, (uint64_t)v9, v10, 2, v11);
    SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v12, v13);
    _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
    JUMPOUT(0x100A2A0B8);
  }
LABEL_14:
  type metadata accessor for CRLBoardItemBase(0);
  if (!swift_dynamicCastClass())
  {
    swift_unknownObjectRetain();
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"createSpecificDataObservableDeltas(fromSnapshot:)", 49, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLBoardItem.swift", 83, 2, 835, (uint64_t)"Tried to create observable deltas from mismatched type", 54, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_100586FD4((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Tried to create observable deltas from mismatched type");
    uint64_t v9 = "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLBoardItem.swift";
    uint64_t v10 = 83;
    uint64_t v11 = 835;
    goto LABEL_37;
  }
  return _swiftEmptyDictionarySingleton;
}

id sub_100A2A144()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLUnknownItem();
  return [super dealloc];
}

uint64_t sub_100A2A17C()
{
  return type metadata accessor for CRLUnknownItem();
}

uint64_t type metadata accessor for CRLUnknownItem()
{
  uint64_t result = qword_10168C7A0;
  if (!qword_10168C7A0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100A2A1D0()
{
  return swift_updateClassMetadata2();
}

uint64_t sub_100A2A208(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1005057FC((uint64_t *)&unk_101674520);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_100A2A274()
{
  unint64_t result = qword_10168C7B0;
  if (!qword_10168C7B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168C7B0);
  }
  return result;
}

uint64_t sub_100A2A2CC(uint64_t a1)
{
  return sub_100A2ABB8(a1, &qword_10168C850, qword_10171B4C8, (void (*)(void))sub_10069A03C);
}

uint64_t sub_100A2A2FC()
{
  uint64_t v0 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0, v2);
  uint64_t v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for Locale();
  __chkstk_darwin(v5 - 8, v6);
  uint64_t v7 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v7 - 8, v8);
  uint64_t v9 = type metadata accessor for LocalizedStringResource();
  sub_100568B28(v9, qword_10171B4E0);
  sub_100556B74(v9, (uint64_t)qword_10171B4E0);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v4, enum case for LocalizedStringResource.BundleDescription.main(_:), v0);
  return LocalizedStringResource.init(_:table:locale:bundle:comment:)();
}

void sub_100A2A4F4()
{
  uint64_t v0 = sub_1005057FC(&qword_101672C30);
  __chkstk_darwin(v0 - 8, v1);
  uint64_t v3 = (char *)&v16 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v4 = [self sharedApplication];
  id v5 = [v4 delegate];

  if (v5)
  {
    type metadata accessor for CRLiOSAppDelegate();
    if (swift_dynamicCastClass())
    {
      sub_1006C6B2C();
      if (v6)
      {
        uint64_t v7 = v6;
        uint64_t v8 = *(void **)&v6[OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate_window];
        if (v8)
        {
          id v9 = [v8 windowScene];
          if (v9)
          {
            uint64_t v10 = v9;
            if (qword_10166FB38 != -1) {
              swift_once();
            }
            swift_beginAccess();
            id v11 = (id)static OS_os_log.sceneManagement;
            uint64_t v12 = static os_log_type_t.default.getter();
            sub_100BAC898((uint64_t)v11, (uint64_t)&_mh_execute_header, v12, (uint64_t)"Creating new board from app intent", 34, 2, (uint64_t)_swiftEmptyArrayStorage);

            sub_100A2BF30();
            uint64_t v13 = type metadata accessor for CRLBoardIdentifier(0);
            (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v3, 1, 1, v13);
            id v14 = sub_1009C3148(6, 1, (uint64_t)v3);
            sub_100A95BA8(v14);
            swift_unknownObjectRelease();

            goto LABEL_14;
          }
        }
      }
    }
    swift_unknownObjectRelease();
  }
  if (qword_10166FB38 != -1) {
    swift_once();
  }
  swift_beginAccess();
  id v14 = (id)static OS_os_log.sceneManagement;
  uint64_t v15 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v14, (uint64_t)&_mh_execute_header, v15, (uint64_t)"Failed to create new board from app intent", 42, 2, (uint64_t)_swiftEmptyArrayStorage);
LABEL_14:
}

uint64_t sub_100A2A7B4@<X0>(uint64_t a1@<X8>)
{
  return sub_100A2B378(&qword_10166F700, &qword_10168C850, (uint64_t)qword_10171B4C8, a1);
}

unint64_t sub_100A2A7E4()
{
  unint64_t result = qword_10168C7B8;
  if (!qword_10168C7B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168C7B8);
  }
  return result;
}

unint64_t sub_100A2A83C()
{
  unint64_t result = qword_10168C7C0;
  if (!qword_10168C7C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168C7C0);
  }
  return result;
}

uint64_t sub_100A2A890()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100A2A8AC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100A2A8C8@<X0>(uint64_t a1@<X8>)
{
  return sub_100568398(&qword_10166F708, (uint64_t)qword_10171B4E0, a1);
}

uint64_t sub_100A2A8EC()
{
  uint64_t v0 = sub_1005057FC(&qword_10168C848);
  __chkstk_darwin(v0 - 8, v1);
  ParameterSummaryString.init(stringLiteral:)();
  return IntentParameterSummary.init(_:table:)();
}

uint64_t sub_100A2A9C8(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return _swift_task_switch(sub_100A2A9E8, 0, 0);
}

uint64_t sub_100A2A9E8()
{
  type metadata accessor for MainActor();
  *(void *)(v0 + 24) = static MainActor.shared.getter();
  uint64_t v2 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_100A2AA7C, v2, v1);
}

uint64_t sub_100A2AA7C()
{
  swift_release();
  sub_100A2A4F4();
  return _swift_task_switch(sub_100A2BF9C, 0, 0);
}

uint64_t sub_100A2AAF4(uint64_t a1)
{
  unint64_t v2 = sub_100A2A274();

  return static AppIntent.persistentIdentifier.getter(a1, v2);
}

unint64_t sub_100A2AB34()
{
  unint64_t result = qword_10168C7D0;
  if (!qword_10168C7D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168C7D0);
  }
  return result;
}

uint64_t sub_100A2AB88(uint64_t a1)
{
  return sub_100A2ABB8(a1, &qword_10168C840, qword_10171B4F8, (void (*)(void))sub_1005F6380);
}

uint64_t sub_100A2ABB8(uint64_t a1, uint64_t *a2, uint64_t *a3, void (*a4)(void))
{
  uint64_t v6 = sub_1005057FC(a2);
  sub_100568B28(v6, a3);
  sub_100556B74(v6, (uint64_t)a3);
  a4();
  return IntentDeprecation.init(replacedBy:)();
}

uint64_t sub_100A2AC28()
{
  uint64_t v0 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0, v2);
  uint64_t v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for Locale();
  __chkstk_darwin(v5 - 8, v6);
  uint64_t v7 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v7 - 8, v8);
  uint64_t v9 = type metadata accessor for LocalizedStringResource();
  sub_100568B28(v9, qword_10171B510);
  sub_100556B74(v9, (uint64_t)qword_10171B510);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v4, enum case for LocalizedStringResource.BundleDescription.main(_:), v0);
  return LocalizedStringResource.init(_:table:locale:bundle:comment:)();
}

void sub_100A2AE20(uint64_t a1)
{
  uint64_t v43 = a1;
  uint64_t v2 = sub_1005057FC(&qword_101672C30);
  __chkstk_darwin(v2 - 8, v3);
  uint64_t v41 = (uint64_t)&v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for UUID();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5, v7);
  uint64_t v9 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for CRLBoardIdentifier(0);
  uint64_t v42 = *(void *)(v10 - 8);
  __chkstk_darwin(v10, v11);
  uint64_t v13 = (char *)&v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for CRLiOSBoardEntity();
  __chkstk_darwin(v14 - 8, v15);
  uint64_t v17 = (char *)&v35 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v18 = [self sharedApplication];
  id v19 = [v18 delegate];

  if (v19)
  {
    type metadata accessor for CRLiOSAppDelegate();
    if (swift_dynamicCastClass())
    {
      sub_1006C6B2C();
      if (v20)
      {
        uint64_t v21 = v20;
        uint64_t v22 = *(void **)&v20[OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate_window];
        if (v22)
        {
          id v23 = [v22 windowScene];
          if (v23)
          {
            id v38 = v23;
            uint64_t v39 = v21;
            uint64_t v40 = v1;
            if (qword_10166FB38 != -1) {
              swift_once();
            }
            swift_beginAccess();
            uint64_t v24 = (void *)static OS_os_log.sceneManagement;
            sub_1005057FC((uint64_t *)&unk_101672B40);
            uint64_t inited = swift_initStackObject();
            *(_OWORD *)(inited + 16) = xmmword_10117E810;
            id v36 = v24;
            IntentParameter.wrappedValue.getter();
            sub_100540CFC((uint64_t)v17, (uint64_t)v13);
            uint64_t v37 = type metadata accessor for CRLiOSBoardEntity;
            sub_100A2BED0((uint64_t)v17, (uint64_t (*)(void))type metadata accessor for CRLiOSBoardEntity);
            (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v9, v13, v5);
            sub_100A2BED0((uint64_t)v13, type metadata accessor for CRLBoardIdentifier);
            uint64_t v26 = UUID.uuidString.getter();
            uint64_t v28 = v27;
            (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
            *(void *)(inited + 56) = &type metadata for String;
            *(void *)(inited + 64) = sub_100528BE4();
            *(void *)(inited + 32) = v26;
            *(void *)(inited + 40) = v28;
            uint64_t v29 = static os_log_type_t.default.getter();
            id v30 = v36;
            sub_100BAC898((uint64_t)v36, (uint64_t)&_mh_execute_header, v29, (uint64_t)"Opening the board:%@ from app intent", 36, 2, inited);
            swift_setDeallocating();
            sub_1005057FC(&qword_101672B50);
            swift_arrayDestroy();

            sub_100A2BF30();
            IntentParameter.wrappedValue.getter();
            uint64_t v31 = v41;
            sub_100540CFC((uint64_t)v17, v41);
            sub_100A2BED0((uint64_t)v17, (uint64_t (*)(void))v37);
            (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v42 + 56))(v31, 0, 1, v10);
            id v32 = sub_1009C3148(5, 1, v31);
            uint64_t v33 = v39;
            sub_100A95BA8(v32);
            swift_unknownObjectRelease();

            goto LABEL_14;
          }
        }
      }
    }
    swift_unknownObjectRelease();
  }
  if (qword_10166FB38 != -1) {
    swift_once();
  }
  swift_beginAccess();
  id v32 = (id)static OS_os_log.sceneManagement;
  uint64_t v34 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v32, (uint64_t)&_mh_execute_header, v34, (uint64_t)"Failed to open a board from app intent", 38, 2, (uint64_t)_swiftEmptyArrayStorage);
LABEL_14:
}

uint64_t sub_100A2B34C@<X0>(uint64_t a1@<X8>)
{
  return sub_100A2B378(&qword_10166F710, &qword_10168C840, (uint64_t)qword_10171B4F8, a1);
}

uint64_t sub_100A2B378@<X0>(void *a1@<X2>, uint64_t *a2@<X3>, uint64_t a3@<X4>, uint64_t a4@<X8>)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v7 = sub_1005057FC(a2);
  uint64_t v8 = sub_100556B74(v7, a3);
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16);

  return v9(a4, v8, v7);
}

unint64_t sub_100A2B41C()
{
  unint64_t result = qword_10168C7D8;
  if (!qword_10168C7D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168C7D8);
  }
  return result;
}

unint64_t sub_100A2B474()
{
  unint64_t result = qword_10168C7E0;
  if (!qword_10168C7E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168C7E0);
  }
  return result;
}

uint64_t sub_100A2B4C8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100A2B4E4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100A2B500@<X0>(uint64_t a1@<X8>)
{
  return sub_100568398(&qword_10166F718, (uint64_t)qword_10171B510, a1);
}

uint64_t sub_100A2B524()
{
  uint64_t v0 = sub_1005057FC(&qword_10168C828);
  __chkstk_darwin(v0 - 8, v1);
  uint64_t v2 = sub_1005057FC(&qword_10168C830);
  __chkstk_darwin(v2, v3);
  ParameterSummaryString.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v4._uint64_t countAndFlagsBits = 0x616F42206E65704FLL;
  v4._object = (void *)0xEB00000000206472;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v4);
  swift_getKeyPath();
  sub_1005057FC(&qword_10168C838);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)();
  swift_release();
  v5._uint64_t countAndFlagsBits = 0;
  v5._object = (void *)0xE000000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v5);
  ParameterSummaryString.init(stringInterpolation:)();
  return IntentParameterSummary.init(_:table:)();
}

uint64_t sub_100A2B6C8(uint64_t a1)
{
  uint64_t v3 = *v1;
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v3;
  return _swift_task_switch(sub_100A2B6EC, 0, 0);
}

uint64_t sub_100A2B6EC()
{
  type metadata accessor for MainActor();
  *(void *)(v0 + 32) = static MainActor.shared.getter();
  uint64_t v2 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_100A2B780, v2, v1);
}

uint64_t sub_100A2B780()
{
  uint64_t v1 = *(void *)(v0 + 24);
  swift_release();
  sub_100A2AE20(v1);
  return _swift_task_switch(sub_100A2B7FC, 0, 0);
}

uint64_t sub_100A2B7FC()
{
  static IntentResult.result<>()();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100A2B860@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_100A2B998();
  *a1 = result;
  return result;
}

uint64_t sub_100A2B888(uint64_t a1)
{
  unint64_t v2 = sub_100A2AB34();

  return static AppIntent.persistentIdentifier.getter(a1, v2);
}

ValueMetadata *type metadata accessor for CRLiOSOpenBoardIntent()
{
  return &type metadata for CRLiOSOpenBoardIntent;
}

ValueMetadata *type metadata accessor for CRLiOSCreateBoardIntent()
{
  return &type metadata for CRLiOSCreateBoardIntent;
}

uint64_t sub_100A2B8E4()
{
  return sub_100523288(&qword_10168C7F0, &qword_10168C7F8);
}

uint64_t sub_100A2B920()
{
  return sub_100523288(&qword_101673B10, &qword_101673B18);
}

uint64_t sub_100A2B95C()
{
  return sub_100523288(&qword_10168C800, &qword_10168C808);
}

uint64_t sub_100A2B998()
{
  uint64_t v0 = type metadata accessor for InputConnectionBehavior();
  uint64_t v37 = *(void *)(v0 - 8);
  uint64_t v38 = v0;
  __chkstk_darwin(v0, v1);
  id v36 = (char *)v33 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_1005057FC(&qword_101673B38);
  __chkstk_darwin(v3 - 8, v4);
  uint64_t v35 = (char *)v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6, v7);
  uint64_t v34 = (char *)v33 - v8;
  uint64_t v9 = sub_1005057FC(&qword_10168C810);
  __chkstk_darwin(v9 - 8, v10);
  uint64_t v12 = (char *)v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1005057FC(&qword_101673B40);
  __chkstk_darwin(v13 - 8, v14);
  uint64_t v16 = (char *)v33 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v18 = *(void *)(v17 - 8);
  __chkstk_darwin(v17, v19);
  uint64_t v21 = (char *)v33 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = type metadata accessor for Locale();
  __chkstk_darwin(v22 - 8, v23);
  uint64_t v24 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v24 - 8, v25);
  uint64_t v26 = type metadata accessor for LocalizedStringResource();
  uint64_t v27 = *(void *)(v26 - 8);
  __chkstk_darwin(v26, v28);
  v33[1] = sub_1005057FC(&qword_10168C818);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  (*(void (**)(char *, void, uint64_t))(v18 + 104))(v21, enum case for LocalizedStringResource.BundleDescription.main(_:), v17);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v27 + 56))(v16, 1, 1, v26);
  uint64_t v29 = type metadata accessor for CRLiOSBoardEntity();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v12, 1, 1, v29);
  uint64_t v30 = type metadata accessor for IntentDialog();
  uint64_t v31 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56);
  v31(v34, 1, 1, v30);
  v31(v35, 1, 1, v30);
  (*(void (**)(char *, void, uint64_t))(v37 + 104))(v36, enum case for InputConnectionBehavior.default(_:), v38);
  sub_100A2BE78();
  return IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:)();
}

unint64_t sub_100A2BE78()
{
  unint64_t result = qword_10167D0F8[0];
  if (!qword_10167D0F8[0])
  {
    type metadata accessor for CRLiOSBoardEntity();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_10167D0F8);
  }
  return result;
}

uint64_t sub_100A2BED0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_100A2BF30()
{
  unint64_t result = qword_10168C820;
  if (!qword_10168C820)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_10168C820);
  }
  return result;
}

uint64_t sub_100A2BF70@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

id sub_100A2BFA0()
{
  uint64_t v1 = sub_1005057FC((uint64_t *)&unk_101676160);
  __chkstk_darwin(v1 - 8, v2);
  uint64_t v113 = (uint64_t)&v106 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for UTType();
  uint64_t v116 = *(void *)(v4 - 8);
  uint64_t v117 = v4;
  __chkstk_darwin(v4, v5);
  uint64_t v112 = (char *)&v106 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1005057FC(&qword_101672E90);
  __chkstk_darwin(v7 - 8, v8);
  __int16 v114 = (char *)&v106 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10, v11);
  uint64_t v120 = (char *)&v106 - v12;
  __chkstk_darwin(v13, v14);
  uint64_t v119 = (uint64_t)&v106 - v15;
  __chkstk_darwin(v16, v17);
  uint64_t v122 = (uint64_t)&v106 - v18;
  __chkstk_darwin(v19, v20);
  uint64_t v22 = (char *)&v106 - v21;
  uint64_t v123 = type metadata accessor for URL();
  uint64_t v23 = *(void **)(v123 - 8);
  __chkstk_darwin(v123, v24);
  uint64_t v111 = (char *)&v106 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26, v27);
  char v115 = (char *)&v106 - v28;
  uint64_t v110 = v29;
  __chkstk_darwin(v30, v31);
  uint64_t v33 = (char *)&v106 - v32;
  uint64_t v34 = type metadata accessor for CRLImageItemAssetData(0);
  __chkstk_darwin(v34 - 8, v35);
  uint64_t v37 = (char *)&v106 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = type metadata accessor for CRLAssetData();
  __chkstk_darwin(v38, v39);
  uint64_t v41 = (char *)&v106 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v42, v43);
  uint64_t v45 = (char *)&v106 - v44;
  swift_beginAccess();
  swift_retain();
  sub_1005057FC(&qword_10167F4B0);
  CRRegister.wrappedValue.getter();
  swift_endAccess();
  swift_release();
  sub_100A373FC((uint64_t)v37, (uint64_t)v41, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
  sub_100A374CC((uint64_t)v37, type metadata accessor for CRLImageItemAssetData);
  uint64_t v124 = v45;
  sub_100A37464((uint64_t)v41, (uint64_t)v45, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
  id v121 = v0;
  id v46 = *(char **)&v0[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_store];
  uint64_t v47 = *(void *)&v46[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManagerLock];
  uint64_t v48 = *(os_unfair_lock_s **)(v47 + 16);
  id v49 = v46;
  os_unfair_lock_lock(v48);
  uint64_t v50 = OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManager;
  uint64_t v51 = *(void **)&v49[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManager];
  if (v51)
  {
    id v52 = *(id *)&v49[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManager];
  }
  else
  {
    id v53 = objc_allocWithZone((Class)type metadata accessor for CRLAssetFileManager());
    uint64_t v54 = v49;
    id v55 = sub_100EAFDE4((uint64_t)v54);

    uint64_t v56 = *(void **)&v49[v50];
    *(void *)&v49[v50] = v55;
    id v52 = v55;

    uint64_t v51 = 0;
  }
  uint64_t v57 = *(os_unfair_lock_s **)(v47 + 16);
  id v58 = v51;
  os_unfair_lock_unlock(v57);
  uint64_t v59 = (uint64_t)v124;
  sub_100EA7CA0((uint64_t)v124, 0, 3, 0, 0, v22);

  objc_super v60 = (unsigned int (*)(char *, uint64_t, uint64_t))v23[6];
  uint64_t v61 = v123;
  if (v60(v22, 1, v123) == 1)
  {
    sub_100A374CC(v59, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
    sub_100522F00((uint64_t)v22, &qword_101672E90);
    if (qword_10166F9C8 != -1) {
      swift_once();
    }
    swift_beginAccess();
    id v62 = (id)static OS_os_log.crlDefault;
    uint64_t v63 = static os_log_type_t.error.getter();
    sub_100BAC898((uint64_t)v62, (uint64_t)&_mh_execute_header, v63, (uint64_t)"Unable to make itemProvider from backing asset because the asset is missing", 75, 2, (uint64_t)_swiftEmptyArrayStorage);

    return 0;
  }
  uint64_t v65 = (void (*)(unint64_t, char *, uint64_t))v23[4];
  uint64_t v109 = v33;
  uint64_t v106 = v65;
  v65((unint64_t)v33, v22, v61);
  uint64_t v118 = v23;
  uint64_t v66 = v122;
  uint64_t v107 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v23[7];
  v107(v122, 1, 1, v61);
  uint64_t v67 = (uint64_t *)(v59 + *(int *)(v38 + 20));
  uint64_t v68 = *v67;
  uint64_t v69 = v67[1];
  int v108 = v67;
  swift_bridgeObjectRetain();
  uint64_t v70 = v119;
  id v121 = sub_100FA45D8(v119, v68, v69);
  swift_bridgeObjectRelease();
  sub_100522F00(v66, &qword_101672E90);
  sub_10051B3EC(v70, v66, &qword_101672E90);
  uint64_t v71 = (uint64_t)v120;
  sub_100522E9C(v66, (uint64_t)v120, &qword_101672E90);
  if (v60((char *)v71, 1, v61) != 1)
  {
    long long v82 = v115;
    long long v83 = v106;
    v106((unint64_t)v115, (char *)v71, v61);
    id v64 = [objc_allocWithZone((Class)NSItemProvider) init];
    uint64_t v84 = v113;
    sub_1006F28D8(0, v113);
    uint64_t v86 = v116;
    uint64_t v85 = v117;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v116 + 48))(v84, 1, v117) == 1)
    {
      sub_100522F00(v84, (uint64_t *)&unk_101676160);
      long long v87 = v109;
      if (!v64)
      {
LABEL_23:
        if (v121)
        {
          aBlock[0] = v64;
          id v102 = v121;
          sub_1005057FC((uint64_t *)&unk_10168C920);
          [v102 setAssociatedLifetimeObject:Optional._bridgeToObjectiveC()()];

          swift_unknownObjectRelease();
          uint64_t v103 = (void (*)(char *, uint64_t))v118[1];
          v103(v82, v61);
          sub_100522F00(v122, &qword_101672E90);
          v103(v87, v61);
          sub_100A374CC((uint64_t)v124, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
        }
        else
        {
          uint64_t v104 = (void (*)(char *, uint64_t))v118[1];
          v104(v82, v61);
          sub_100522F00(v122, &qword_101672E90);
          v104(v87, v61);
          sub_100A374CC((uint64_t)v124, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
        }
        return v64;
      }
    }
    else
    {
      long long v88 = v112;
      (*(void (**)(char *, uint64_t, uint64_t))(v86 + 32))(v112, v84, v85);
      long long v87 = v109;
      if (v64)
      {
        uint64_t v120 = (char *)v64;
        UTType.identifier.getter();
        NSString v89 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        long long v90 = v118 + 2;
        long long v91 = v87;
        long long v92 = v83;
        long long v93 = v111;
        ((void (*)(char *, char *, uint64_t))v118[2])(v111, v82, v61);
        unint64_t v94 = (*((unsigned __int8 *)v90 + 64) + 16) & ~(unint64_t)*((unsigned __int8 *)v90 + 64);
        uint64_t v95 = swift_allocObject();
        unint64_t v96 = v95 + v94;
        long long v88 = v112;
        v92(v96, v93, v61);
        long long v87 = v91;
        aBlock[4] = sub_100A3760C;
        aBlock[5] = v95;
        aBlock[0] = _NSConcreteStackBlock;
        aBlock[1] = *(void *)"";
        aBlock[2] = sub_100A2CC28;
        aBlock[3] = &unk_10151EF90;
        uint64_t v97 = _Block_copy(aBlock);
        swift_release();
        id v98 = v120;
        [v120 registerFileRepresentationForTypeIdentifier:v89 fileOptions:0 visibility:0 loadHandler:v97];
        uint64_t v99 = v97;
        uint64_t v85 = v117;
        _Block_release(v99);

        uint64_t v86 = v116;
      }
      (*(void (**)(char *, uint64_t))(v86 + 8))(v88, v85);
      if (!v64) {
        goto LABEL_23;
      }
    }
    id v100 = v64;
    swift_bridgeObjectRetain();
    NSString v101 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v100 setSuggestedName:v101];

    goto LABEL_23;
  }
  sub_100522F00(v71, &qword_101672E90);
  if (qword_10166F9C8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  id v72 = (id)static OS_os_log.crlDefault;
  uint64_t v73 = static os_log_type_t.error.getter();
  sub_100BAC898((uint64_t)v72, (uint64_t)&_mh_execute_header, v73, (uint64_t)"Unable to cacheItemToURL", 24, 2, (uint64_t)_swiftEmptyArrayStorage);

  uint64_t v74 = v114;
  long long v75 = v109;
  uint64_t v76 = v123;
  ((void (*)(char *, char *, uint64_t))v118[2])(v114, v109, v123);
  v107((uint64_t)v74, 0, 1, v76);
  uint64_t v78 = 0;
  if (v60(v74, 1, v76) != 1)
  {
    URL._bridgeToObjectiveC()(v77);
    uint64_t v78 = v79;
    ((void (*)(char *, uint64_t))v118[1])(v74, v76);
  }
  id v64 = [objc_allocWithZone((Class)NSItemProvider) initWithContentsOfURL:v78];

  if (v64)
  {
    id v80 = v64;
    swift_bridgeObjectRetain();
    NSString v81 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v80 setSuggestedName:v81];
  }
  sub_100522F00(v122, &qword_101672E90);
  ((void (*)(char *, uint64_t))v118[1])(v75, v76);
  sub_100A374CC((uint64_t)v124, (uint64_t (*)(void))type metadata accessor for CRLAssetData);

  return v64;
}

id sub_100A2CC28(uint64_t a1, void *aBlock)
{
  uint64_t v2 = *(uint64_t (**)(void (*)(uint64_t, char, uint64_t), uint64_t))(a1 + 32);
  uint64_t v3 = _Block_copy(aBlock);
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = v3;
  swift_retain();
  uint64_t v5 = (void *)v2(sub_100A376C4, v4);
  swift_release();
  swift_release();

  return v5;
}

void sub_100A2CCC8(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = sub_1005057FC(&qword_101672E90);
  __chkstk_darwin(v8 - 8, v9);
  uint64_t v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100522E9C(a1, (uint64_t)v11, &qword_101672E90);
  uint64_t v12 = type metadata accessor for URL();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v15 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) != 1)
  {
    URL._bridgeToObjectiveC()(v14);
    uint64_t v15 = v16;
    (*(void (**)(char *, uint64_t))(v13 + 8))(v11, v12);
  }
  if (a3) {
    uint64_t v17 = (void *)_convertErrorToNSError(_:)();
  }
  else {
    uint64_t v17 = 0;
  }
  (*(void (**)(uint64_t, void *, void, void *))(a4 + 16))(a4, v15, a2 & 1, v17);
}

char *sub_100A2CEC8()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for CRLImageItemAssetData(0);
  __chkstk_darwin(v2 - 8, v3);
  uint64_t v5 = (char *)&v54 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for CRLAssetData();
  __chkstk_darwin(v6 - 8, v7);
  uint64_t v9 = (char *)&v54 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10, v11);
  uint64_t v13 = (char *)&v54 - v12;
  uint64_t v14 = type metadata accessor for UUID();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14, v16);
  uint64_t v18 = (char *)&v54 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19, v20);
  uint64_t v23 = (char *)&v54 - v22;
  uint64_t v24 = OBJC_IVAR____TtC8Freeform12CRLImageItem__imageAssetAsData;
  uint64_t v25 = *(char **)&v1[OBJC_IVAR____TtC8Freeform12CRLImageItem__imageAssetAsData];
  if (v25)
  {
    id v55 = v5;
    uint64_t v27 = *(void *)&v25[OBJC_IVAR____TtC8Freeform8CRLAsset_storage + 24];
    uint64_t v26 = *(void *)&v25[OBJC_IVAR____TtC8Freeform8CRLAsset_storage + 32];
    Class v57 = v21;
    sub_10050F848(&v25[OBJC_IVAR____TtC8Freeform8CRLAsset_storage], v27);
    uint64_t v56 = v13;
    uint64_t v28 = *(void (**)(uint64_t, uint64_t))(v26 + 24);
    id v58 = v25;
    v28(v27, v26);
    swift_beginAccess();
    swift_retain();
    sub_1005057FC(&qword_10167F4B0);
    uint64_t v29 = (uint64_t)v55;
    CRRegister.wrappedValue.getter();
    swift_endAccess();
    swift_release();
    uint64_t v30 = (uint64_t)v56;
    sub_100A373FC(v29, (uint64_t)v56, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
    sub_100A374CC(v29, type metadata accessor for CRLImageItemAssetData);
    Class v31 = v57;
    (*(void (**)(char *, uint64_t, Class))(v15 + 16))(v18, v30, v57);
    sub_100A374CC(v30, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
    LOBYTE(v30) = static UUID.== infix(_:_:)();
    uint64_t v32 = *(void (**)(char *, Class))(v15 + 8);
    v32(v18, v31);
    v32(v23, v31);
    if ((v30 & 1) == 0)
    {
      sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"imageAssetPayload", 17, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLImageItem.swift", 83, 2, 53, (uint64_t)"Cached CRLAsset instance has not been updated as expected.", 58, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"imageAssetPayload", 17, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLImageItem.swift", 83, 2, 53);
    }
    return v58;
  }
  else
  {
    swift_beginAccess();
    swift_retain();
    sub_1005057FC(&qword_10167F4B0);
    CRRegister.wrappedValue.getter();
    swift_endAccess();
    swift_release();
    sub_100A373FC((uint64_t)v5, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
    sub_100A374CC((uint64_t)v5, type metadata accessor for CRLImageItemAssetData);
    id v58 = v1;
    uint64_t v34 = (char *)[v1 store];
    uint64_t v35 = *(void *)&v34[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetManagerLock];
    os_unfair_lock_lock(*(os_unfair_lock_t *)(v35 + 16));
    uint64_t v36 = OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetManager;
    uint64_t v37 = *(void **)&v34[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetManager];
    if (v37)
    {
      id v38 = *(id *)&v34[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetManager];
    }
    else
    {
      Class v57 = (Class)type metadata accessor for CRLAssetManager();
      uint64_t v39 = (char *)objc_allocWithZone(v57);
      swift_unknownObjectWeakInit();
      uint64_t v40 = OBJC_IVAR____TtC8Freeform15CRLAssetManager_lock;
      type metadata accessor for CRLUnfairLock();
      uint64_t v41 = swift_allocObject();
      uint64_t v56 = v34;
      uint64_t v42 = v39;
      uint64_t v43 = (_DWORD *)swift_slowAlloc();
      *uint64_t v43 = 0;
      *(void *)(v41 + 16) = v43;
      atomic_thread_fence(memory_order_acq_rel);
      *(void *)&v39[v40] = v41;
      *(void *)&v42[OBJC_IVAR____TtC8Freeform15CRLAssetManager_assets] = _swiftEmptyDictionarySingleton;
      uint64_t v44 = OBJC_IVAR____TtC8Freeform15CRLAssetManager_owners;
      *(void *)&v42[v44] = [self mapTableWithKeyOptions:517 valueOptions:0];
      *(void *)&v42[OBJC_IVAR____TtC8Freeform15CRLAssetManager_garbageCollectionWorkItem] = 0;
      uint64_t v45 = v56;
      swift_unknownObjectWeakAssign();

      v59.receiver = v42;
      v59.super_class = v57;
      id v46 = [super init];

      uint64_t v47 = *(void **)&v34[v36];
      *(void *)&v34[v36] = v46;
      id v38 = v46;

      uint64_t v37 = 0;
    }
    uint64_t v48 = *(os_unfair_lock_s **)(v35 + 16);
    id v49 = v37;
    os_unfair_lock_unlock(v48);

    uint64_t v50 = v58;
    uint64_t v51 = (void *)sub_100F453C8(v9, v58, v38);

    sub_100A374CC((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
    id v52 = *(void **)&v50[v24];
    *(void *)&v50[v24] = v51;
    id v53 = v51;

    return (char *)v53;
  }
}

char *sub_100A2D5E4()
{
  uint64_t v1 = v0;
  uint64_t v2 = (objc_class *)type metadata accessor for UUID();
  uint64_t v3 = (char *)*((void *)v2 - 1);
  Class v51 = v2;
  id v52 = v3;
  __chkstk_darwin(v2, v4);
  uint64_t v6 = (char *)&v50 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for CRLImageItemAssetData(0);
  uint64_t v8 = v7 - 8;
  __chkstk_darwin(v7, v9);
  uint64_t v11 = (char *)&v50 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1005057FC((uint64_t *)&unk_10167D2B0);
  __chkstk_darwin(v12 - 8, v13);
  uint64_t v15 = (char *)&v50 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for CRLAssetData();
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16, v18);
  uint64_t v20 = (char *)&v50 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  swift_retain();
  sub_1005057FC(&qword_10167F4B0);
  CRRegister.wrappedValue.getter();
  swift_endAccess();
  swift_release();
  sub_100522E9C((uint64_t)&v11[*(int *)(v8 + 28)], (uint64_t)v15, (uint64_t *)&unk_10167D2B0);
  sub_100A374CC((uint64_t)v11, type metadata accessor for CRLImageItemAssetData);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16) == 1)
  {
    sub_100522F00((uint64_t)v15, (uint64_t *)&unk_10167D2B0);
    return 0;
  }
  else
  {
    uint64_t v22 = (void (**)(char *, Class))v52;
    sub_100A37464((uint64_t)v15, (uint64_t)v20, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
    uint64_t v23 = OBJC_IVAR____TtC8Freeform12CRLImageItem__thumbnailAssetAsData;
    uint64_t v21 = *(char **)&v0[OBJC_IVAR____TtC8Freeform12CRLImageItem__thumbnailAssetAsData];
    if (v21)
    {
      uint64_t v24 = *(void *)&v21[OBJC_IVAR____TtC8Freeform8CRLAsset_storage + 24];
      uint64_t v25 = *(void *)&v21[OBJC_IVAR____TtC8Freeform8CRLAsset_storage + 32];
      sub_10050F848(&v21[OBJC_IVAR____TtC8Freeform8CRLAsset_storage], v24);
      uint64_t v26 = *(void (**)(uint64_t, uint64_t))(v25 + 24);
      uint64_t v27 = v21;
      v26(v24, v25);
      char v28 = static UUID.== infix(_:_:)();
      v22[1](v6, v51);
      if ((v28 & 1) == 0)
      {
        sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"thumbnailAssetPayload", 21, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLImageItem.swift", 83, 2, 70, (uint64_t)"Cached CRLAsset instance has not been updated as expected.", 58, 2u, (uint64_t)_swiftEmptyArrayStorage);
        sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"thumbnailAssetPayload", 21, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLImageItem.swift", 83, 2, 70);
      }
      uint64_t v29 = (uint64_t)v20;
    }
    else
    {
      id v52 = v20;
      uint64_t v30 = (char *)[v0 store];
      uint64_t v31 = *(void *)&v30[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetManagerLock];
      os_unfair_lock_lock(*(os_unfair_lock_t *)(v31 + 16));
      uint64_t v32 = OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetManager;
      uint64_t v33 = *(void **)&v30[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetManager];
      if (v33)
      {
        id v34 = *(id *)&v30[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetManager];
      }
      else
      {
        Class v51 = (Class)type metadata accessor for CRLAssetManager();
        uint64_t v35 = (char *)objc_allocWithZone(v51);
        uint64_t v50 = &v35[OBJC_IVAR____TtC8Freeform15CRLAssetManager_store];
        swift_unknownObjectWeakInit();
        uint64_t v36 = OBJC_IVAR____TtC8Freeform15CRLAssetManager_lock;
        type metadata accessor for CRLUnfairLock();
        uint64_t v37 = swift_allocObject();
        id v38 = v30;
        uint64_t v39 = v35;
        uint64_t v40 = (_DWORD *)swift_slowAlloc();
        *uint64_t v40 = 0;
        *(void *)(v37 + 16) = v40;
        atomic_thread_fence(memory_order_acq_rel);
        *(void *)&v35[v36] = v37;
        *(void *)&v39[OBJC_IVAR____TtC8Freeform15CRLAssetManager_assets] = _swiftEmptyDictionarySingleton;
        uint64_t v41 = OBJC_IVAR____TtC8Freeform15CRLAssetManager_owners;
        *(void *)&v39[v41] = [self mapTableWithKeyOptions:517 valueOptions:0];
        *(void *)&v39[OBJC_IVAR____TtC8Freeform15CRLAssetManager_garbageCollectionWorkItem] = 0;
        swift_unknownObjectWeakAssign();

        v53.receiver = v39;
        v53.super_class = v51;
        id v42 = [super init];

        uint64_t v43 = *(void **)&v30[v32];
        *(void *)&v30[v32] = v42;
        id v34 = v42;

        uint64_t v33 = 0;
      }
      uint64_t v44 = *(os_unfair_lock_s **)(v31 + 16);
      id v45 = v33;
      os_unfair_lock_unlock(v44);

      uint64_t v46 = (uint64_t)v52;
      uint64_t v21 = (char *)sub_100F453C8(v52, v1, v34);

      uint64_t v47 = *(void **)&v1[v23];
      *(void *)&v1[v23] = v21;
      uint64_t v48 = v21;

      uint64_t v29 = v46;
    }
    sub_100A374CC(v29, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
  }
  return v21;
}

double sub_100A2DC74()
{
  uint64_t v0 = sub_100A2CEC8();
  id v1 = [self sharedPool];
  id v2 = [v1 providerForAsset:v0 shouldValidate:1];

  [v2 naturalSize];
  double v4 = v3;

  return v4;
}

uint64_t sub_100A2DD18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v55 = a4;
  uint64_t v51 = a2;
  uint64_t v5 = type metadata accessor for CRLBoardItemParentAffinity();
  __chkstk_darwin(v5 - 8, v6);
  uint64_t v8 = (char *)&v48 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1005057FC((uint64_t *)&unk_101683E10);
  __chkstk_darwin(v9, v10);
  uint64_t v12 = (char *)&v48 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1005057FC((uint64_t *)&unk_101674520);
  __chkstk_darwin(v13 - 8, v14);
  uint64_t v52 = (uint64_t)&v48 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16, v17);
  uint64_t v48 = (uint64_t)&v48 - v18;
  __chkstk_darwin(v19, v20);
  uint64_t v54 = (uint64_t)&v48 - v21;
  __chkstk_darwin(v22, v23);
  uint64_t v50 = (uint64_t)&v48 - v24;
  __chkstk_darwin(v25, v26);
  uint64_t v49 = (uint64_t)&v48 - v27;
  __chkstk_darwin(v28, v29);
  uint64_t v31 = (char *)&v48 - v30;
  uint64_t v53 = v4;
  swift_retain();
  uint64_t v32 = sub_100DECBF0(1);
  swift_release();
  uint64_t v33 = v32 + *(void *)(*(void *)v32 + 632);
  swift_beginAccess();
  sub_100522E9C(v33, (uint64_t)v12, (uint64_t *)&unk_101683E10);
  swift_retain();
  sub_1005057FC((uint64_t *)&unk_101683E30);
  CRRegister.wrappedValue.getter();
  sub_100522E9C((uint64_t)v8, (uint64_t)v31, (uint64_t *)&unk_101674520);
  sub_100A374CC((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for CRLBoardItemParentAffinity);
  sub_100522F00((uint64_t)v12, (uint64_t *)&unk_101683E10);
  swift_release();
  uint64_t v34 = v32;
  uint64_t v35 = (uint64_t)v57;
  sub_100DED06C(v55);
  if (v35)
  {
    sub_100522F00((uint64_t)v31, (uint64_t *)&unk_101674520);
    swift_release();
  }
  else
  {
    uint64_t v55 = v9;
    uint64_t v36 = v50;
    sub_100522E9C(v51, v50, (uint64_t *)&unk_101674520);
    Class v57 = v31;
    sub_100522E9C((uint64_t)v31, v54, (uint64_t *)&unk_101674520);
    uint64_t v37 = type metadata accessor for UUID();
    uint64_t v38 = *(void *)(v37 - 8);
    int v39 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v38 + 48))(v36, 1, v37);
    uint64_t v40 = v49;
    if (v39 == 1)
    {
      sub_10051B3EC(v54, v49, (uint64_t *)&unk_101674520);
      swift_retain();
      sub_100522F00(v36, (uint64_t *)&unk_101674520);
    }
    else
    {
      swift_retain();
      sub_100522F00(v54, (uint64_t *)&unk_101674520);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v38 + 32))(v40, v36, v37);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v38 + 56))(v40, 0, 1, v37);
    }
    uint64_t v41 = v48;
    sub_100522E9C(v40, v48, (uint64_t *)&unk_101674520);
    swift_beginAccess();
    uint64_t v42 = v52;
    sub_100522E9C(v41, v52, (uint64_t *)&unk_101674520);
    uint64_t v43 = (void (*)(unsigned char *, void))CRRegister.wrappedValue.modify();
    sub_1006063BC(v42, v44, (uint64_t *)&unk_101674520);
    v43(v56, 0);
    sub_100522F00(v41, (uint64_t *)&unk_101674520);
    swift_endAccess();
    sub_100522F00(v40, (uint64_t *)&unk_101674520);
    swift_release();
    id v45 = *(void **)(v53 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_store);
    uint64_t v46 = objc_allocWithZone((Class)type metadata accessor for CRLImageItem());
    uint64_t v34 = (uint64_t)sub_100F4530C((uint64_t)v45, v32, v46);
    sub_100522F00((uint64_t)v57, (uint64_t *)&unk_101674520);
  }
  return v34;
}

uint64_t sub_100A2E25C(uint64_t a1, uint64_t a2)
{
  uint64_t v57 = a2;
  uint64_t v61 = a1;
  uint64_t v3 = type metadata accessor for CRLImageItemAssetData(0);
  __chkstk_darwin(v3, v4);
  uint64_t v6 = (char *)v54 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7, v8);
  uint64_t v10 = (char *)v54 - v9;
  __chkstk_darwin(v11, v12);
  uint64_t v14 = (char *)v54 - v13;
  uint64_t v15 = sub_1005057FC((uint64_t *)&unk_10167D2B0);
  __chkstk_darwin(v15 - 8, v16);
  id v58 = (char *)v54 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18, v19);
  uint64_t v21 = (char *)v54 - v20;
  __chkstk_darwin(v22, v23);
  uint64_t v25 = (char *)v54 - v24;
  uint64_t v26 = type metadata accessor for CRLAssetData();
  uint64_t v62 = *(void *)(v26 - 8);
  __chkstk_darwin(v26, v27);
  uint64_t v56 = (uint64_t)v54 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v29, v30);
  uint64_t v63 = (uint64_t)v54 - v31;
  uint64_t v60 = v2;
  if (!*(void *)(v2 + OBJC_IVAR____TtC8Freeform12CRLBoardItem_transactionContext)
    && (uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong()) != 0
    && (uint64_t v33 = Strong,
        char v34 = (*(uint64_t (**)(void))((swift_isaMask & *Strong) + 0x2F0))(),
        v33,
        (v34 & 1) != 0))
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"_guardTransaction()", 19, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLTransactions/CRLTransactable.swift", 91, 2, 76, (uint64_t)"Attempting to mutate a CRLTransactable without a CRLTransactableContext set", 75, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_100586FD4((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Attempting to mutate a CRLTransactable without a CRLTransactableContext set");
    sub_1005871AC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"_guardTransaction()", 19, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLTransactions/CRLTransactable.swift", 91, 2, 76);
    SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v52, v53);
    uint64_t result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
  else
  {
    if (qword_101670198 != -1) {
      swift_once();
    }
    objc_super v59 = (int *)v3;
    uint64_t v35 = type metadata accessor for UUID();
    uint64_t v36 = sub_100556B74(v35, (uint64_t)qword_10171CB50);
    uint64_t v37 = v63;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 16))(v63, v36, v35);
    uint64_t v38 = (void *)(v37 + *(int *)(v26 + 20));
    *uint64_t v38 = 0;
    v38[1] = 0xE000000000000000;
    *(void *)(v37 + *(int *)(v26 + 24)) = _swiftEmptyDictionarySingleton;
    sub_1005498A4(v61 + OBJC_IVAR____TtC8Freeform8CRLAsset_storage, (uint64_t)aBlock);
    uint64_t v39 = sub_1005057FC(&qword_101693DB0);
    v54[0] = type metadata accessor for CRLAssetBackedAssetStorage();
    v54[1] = v39;
    if (swift_dynamicCast())
    {
      sub_100A373FC(v64 + OBJC_IVAR____TtC8Freeform26CRLAssetBackedAssetStorage_assetData, (uint64_t)v21, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
      swift_release();
      uint64_t v40 = v62;
      uint64_t v55 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v62 + 56);
      v55(v21, 0, 1, v26);
    }
    else
    {
      uint64_t v40 = v62;
      uint64_t v55 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v62 + 56);
      v55(v21, 1, 1, v26);
      sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"setAssetMedia(media:thumbnailData:)", 35, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLImageItem.swift", 83, 2, 139, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"setAssetMedia(media:thumbnailData:)", 35, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLImageItem.swift", 83, 2, 139);
    }
    sub_10051B3EC((uint64_t)v21, (uint64_t)v25, (uint64_t *)&unk_10167D2B0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v40 + 48))(v25, 1, v26) == 1)
    {
      sub_100522F00((uint64_t)v25, (uint64_t *)&unk_10167D2B0);
    }
    else
    {
      uint64_t v41 = v63;
      sub_100A374CC(v63, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
      sub_100A37464((uint64_t)v25, v41, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
    }
    id v42 = sub_100A368BC(v61);
    if (v42)
    {
      uint64_t v43 = swift_allocObject();
      *(void *)(v43 + 16) = _swiftEmptyArrayStorage;
      uint64_t v44 = (id *)(v43 + 16);
      aBlock[4] = sub_10089DD4C;
      aBlock[5] = v43;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = *(void *)"";
      aBlock[2] = sub_100AAF588;
      aBlock[3] = &unk_10151EF40;
      id v45 = _Block_copy(aBlock);
      swift_retain();
      swift_release();
      [v42 iteratePathElementsWithBlock:v45];

      _Block_release(v45);
      swift_beginAccess();
      id v42 = *v44;
      swift_bridgeObjectRetain();
      swift_release();
    }
    uint64_t v47 = (uint64_t)v58;
    uint64_t v46 = v59;
    uint64_t v48 = v56;
    sub_100A373FC(v63, v56, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
    if (v57
      && (sub_1005498A4(v57 + OBJC_IVAR____TtC8Freeform8CRLAsset_storage, (uint64_t)aBlock),
          swift_dynamicCast()))
    {
      sub_100A373FC(aBlock[6] + OBJC_IVAR____TtC8Freeform26CRLAssetBackedAssetStorage_assetData, v47, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
      swift_release();
      uint64_t v49 = v47;
      uint64_t v50 = 0;
    }
    else
    {
      uint64_t v49 = v47;
      uint64_t v50 = 1;
    }
    v55((char *)v49, v50, 1, v26);
    sub_100A37464(v48, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
    sub_10051B3EC(v47, (uint64_t)&v14[v46[5]], (uint64_t *)&unk_10167D2B0);
    *(void *)&v14[v46[6]] = v42;
    v14[v46[7]] = 2;
    *(void *)&v14[v46[8]] = _swiftEmptyDictionarySingleton;
    sub_100A373FC((uint64_t)v14, (uint64_t)v10, type metadata accessor for CRLImageItemAssetData);
    swift_beginAccess();
    sub_100A373FC((uint64_t)v10, (uint64_t)v6, type metadata accessor for CRLImageItemAssetData);
    swift_retain();
    sub_1005057FC(&qword_10167F4B0);
    CRRegister.wrappedValue.setter();
    sub_100A374CC((uint64_t)v10, type metadata accessor for CRLImageItemAssetData);
    swift_endAccess();
    swift_release();
    sub_100A374CC((uint64_t)v14, type metadata accessor for CRLImageItemAssetData);
    return sub_100A374CC(v63, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
  }
  return result;
}

id sub_100A2EC84()
{
  uint64_t v0 = type metadata accessor for CRLImageItemAssetData(0);
  uint64_t v1 = v0 - 8;
  __chkstk_darwin(v0, v2);
  uint64_t v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  swift_retain();
  sub_1005057FC(&qword_10167F4B0);
  CRRegister.wrappedValue.getter();
  swift_endAccess();
  swift_release();
  uint64_t v5 = *(void *)&v4[*(int *)(v1 + 32)];
  swift_bridgeObjectRetain();
  sub_100A374CC((uint64_t)v4, type metadata accessor for CRLImageItemAssetData);
  if (!v5) {
    return 0;
  }
  sub_10050BF48(0, (unint64_t *)&qword_101680C50);
  return sub_100ABF740(v5);
}

id sub_100A2EE7C()
{
  uint64_t v1 = type metadata accessor for CRLMaskInfoData();
  uint64_t v2 = v1 - 8;
  __chkstk_darwin(v1, v3);
  uint64_t v5 = (unsigned __int8 *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6, v7);
  uint64_t v9 = (char *)&v30 - v8;
  uint64_t v10 = *(uint64_t (**)(uint64_t))(**(void **)&v0[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData]
                                          + 288);
  uint64_t v11 = swift_retain();
  uint64_t v12 = (void *)v10(v11);
  swift_release();
  id v31 = v12;
  sub_100A04D58(v31, (uint64_t)v9);
  sub_100A373FC((uint64_t)v9, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for CRLMaskInfoData);
  id v13 = objc_allocWithZone((Class)CRLMaskInfo);
  uint64_t v14 = &v5[*(int *)(v2 + 28)];
  float v15 = *(float *)v14;
  float v16 = *((float *)v14 + 1);
  float v17 = *((float *)v14 + 2);
  float v18 = *((float *)v14 + 3);
  float v19 = *((float *)v14 + 4);
  uint64_t v20 = v14[20];
  uint64_t v21 = v14[21];
  uint64_t v22 = v14[22];
  uint64_t v23 = v14[23];
  id v24 = objc_allocWithZone((Class)CRLCanvasInfoGeometry);
  uint64_t v25 = v0;
  id v26 = [v24 initWithPosition:v20 size:v21 widthValid:v22 heightValid:v23 horizontalFlip:v15 verticalFlip:v16 angle:v17];
  uint64_t v27 = sub_100AB0C00(v5);
  id v28 = [v13 initWithImageItem:v25 geometry:v26 pathSource:v27];

  sub_100A374CC((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for CRLMaskInfoData);
  sub_100A374CC((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for CRLMaskInfoData);
  return v28;
}

uint64_t sub_100A2F154()
{
  uint64_t v1 = type metadata accessor for CRLMaskInfoData();
  __chkstk_darwin(v1, v2);
  uint64_t v4 = (unsigned __int8 *)&v39 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5, v6);
  uint64_t v8 = (char *)&v39 - v7;
  uint64_t v9 = (void *)sub_100A3653C();
  if (!v9) {
    return 0;
  }
  id v42 = v9;
  id v41 = [v42 geometry];
  uint64_t v10 = *(uint64_t (**)(uint64_t))(**(void **)&v0[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData]
                                          + 288);
  uint64_t v11 = swift_retain();
  uint64_t v12 = (void *)v10(v11);
  swift_release();
  id v40 = v12;
  sub_100A04D58(v40, (uint64_t)v8);
  sub_100A373FC((uint64_t)v8, (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for CRLMaskInfoData);
  id v13 = objc_allocWithZone((Class)CRLMaskInfo);
  uint64_t v14 = &v4[*(int *)(v1 + 20)];
  float v15 = *(float *)v14;
  float v16 = *((float *)v14 + 1);
  float v17 = *((float *)v14 + 2);
  float v18 = *((float *)v14 + 3);
  float v19 = *((float *)v14 + 4);
  uint64_t v20 = v14[20];
  uint64_t v21 = v14[21];
  uint64_t v22 = v14[22];
  uint64_t v23 = v14[23];
  id v24 = objc_allocWithZone((Class)CRLCanvasInfoGeometry);
  uint64_t v25 = v0;
  id v26 = [v24 initWithPosition:v20 size:v21 widthValid:v22 heightValid:v23 horizontalFlip:v15 verticalFlip:v16 angle:v17];
  uint64_t v27 = sub_100AB0C00(v4);
  id v28 = [v13 initWithImageItem:v25 geometry:v26 pathSource:v27];

  uint64_t v29 = (uint64_t)v4;
  uint64_t v30 = v41;
  sub_100A374CC(v29, (uint64_t (*)(void))type metadata accessor for CRLMaskInfoData);

  sub_100A374CC((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for CRLMaskInfoData);
  id v31 = [v28 geometry];

  LODWORD(v27) = [v30 isEqual:v31];
  if (v27)
  {
    id v32 = v42;
    id v33 = [v42 pathSource];
    self;
    char v34 = (void *)swift_dynamicCastObjCClass();
    if (v34)
    {
      id v35 = [v34 shouldShowKnob];
    }
    else
    {

      id v36 = [v32 pathSource];
      unsigned int v37 = [v36 isRectangular];

      return v37 ^ 1;
    }
  }
  else
  {

    return 1;
  }
  return (uint64_t)v35;
}

uint64_t sub_100A2F50C()
{
  uint64_t v0 = type metadata accessor for CRLImageItemAssetData(0);
  uint64_t v1 = v0 - 8;
  __chkstk_darwin(v0, v2);
  uint64_t v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  swift_retain();
  sub_1005057FC(&qword_10167F4B0);
  CRRegister.wrappedValue.getter();
  swift_endAccess();
  swift_release();
  LOBYTE(v1) = v4[*(int *)(v1 + 36)];
  sub_100A374CC((uint64_t)v4, type metadata accessor for CRLImageItemAssetData);
  return v1 & 1;
}

uint64_t sub_100A2F690(char a1)
{
  uint64_t v3 = type metadata accessor for CRLImageItemAssetData(0);
  __chkstk_darwin(v3, v4);
  uint64_t v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7, v8);
  uint64_t v10 = (char *)&v21 - v9;
  __chkstk_darwin(v11, v12);
  uint64_t v14 = (char *)&v21 - v13;
  if (!*(void *)(v1 + OBJC_IVAR____TtC8Freeform12CRLBoardItem_transactionContext)
    && (uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong()) != 0
    && (float v16 = Strong,
        char v17 = (*(uint64_t (**)(void))((swift_isaMask & *Strong) + 0x2F0))(),
        v16,
        (v17 & 1) != 0))
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"_guardTransaction()", 19, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLTransactions/CRLTransactable.swift", 91, 2, 76, (uint64_t)"Attempting to mutate a CRLTransactable without a CRLTransactableContext set", 75, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_100586FD4((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Attempting to mutate a CRLTransactable without a CRLTransactableContext set");
    sub_1005871AC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"_guardTransaction()", 19, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLTransactions/CRLTransactable.swift", 91, 2, 76);
    SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v19, v20);
    uint64_t result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
  else
  {
    swift_beginAccess();
    swift_retain();
    sub_1005057FC(&qword_10167F4B0);
    CRRegister.wrappedValue.getter();
    swift_endAccess();
    v14[*(int *)(v3 + 28)] = a1 & 1;
    sub_100A373FC((uint64_t)v14, (uint64_t)v10, type metadata accessor for CRLImageItemAssetData);
    swift_beginAccess();
    sub_100A373FC((uint64_t)v10, (uint64_t)v6, type metadata accessor for CRLImageItemAssetData);
    CRRegister.wrappedValue.setter();
    sub_100A374CC((uint64_t)v10, type metadata accessor for CRLImageItemAssetData);
    swift_endAccess();
    sub_100A374CC((uint64_t)v14, type metadata accessor for CRLImageItemAssetData);
    return swift_release();
  }
  return result;
}

id sub_100A2FA20()
{
  uint64_t v1 = OBJC_IVAR____TtC8Freeform12CRLImageItem__isSpatial;
  int v2 = *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC8Freeform12CRLImageItem__isSpatial);
  if (v2 != 2) {
    return (id)(v2 & 1);
  }
  uint64_t v3 = v0;
  uint64_t v4 = sub_100A2CEC8();
  uint64_t v5 = *(void *)&v4[OBJC_IVAR____TtC8Freeform8CRLAsset_storage + 24];
  uint64_t v6 = *(void *)&v4[OBJC_IVAR____TtC8Freeform8CRLAsset_storage + 32];
  sub_10050F848(&v4[OBJC_IVAR____TtC8Freeform8CRLAsset_storage], v5);
  char v7 = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 64))(v5, v6);

  if (v7) {
    return 0;
  }
  id v9 = [self sharedPool];
  uint64_t v10 = sub_100A2CEC8();
  id v11 = [v9 providerForAsset:v10 shouldValidate:1];

  self;
  uint64_t v12 = (void *)swift_dynamicCastObjCClass();
  if (v12 && (id v13 = [v12 CGImageSource]) != 0)
  {
    uint64_t v14 = v13;
    id v8 = [self imageSourceIsSpatial:v13];
  }
  else
  {
    id v8 = 0;
  }

  *(unsigned char *)(v3 + v1) = (_BYTE)v8;
  return v8;
}

BOOL sub_100A2FBC0()
{
  uint64_t v1 = v0;
  int v2 = sub_100A2CEC8();
  uint64_t v3 = self;
  id v4 = [v3 sharedPool];
  id v5 = [v4 providerForAsset:v2 shouldValidate:1];

  [v5 naturalSize];
  double v7 = v6;

  if (sub_100934114(v7, 0.0)) {
    return 0;
  }
  uint64_t v8 = OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData;
  id v9 = *(uint64_t (**)(uint64_t))(**(void **)(v1 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData)
                                         + 288);
  uint64_t v10 = swift_retain();
  id v11 = (void *)v9(v10);
  swift_release();
  [v11 size];
  double v13 = v12;

  if (sub_100934114(v13, 0.0)) {
    return 0;
  }
  float v15 = sub_100A2CEC8();
  id v16 = [v3 sharedPool];
  id v17 = [v16 providerForAsset:v15 shouldValidate:1];

  [v17 naturalSize];
  double v19 = v18;

  Swift::String v20 = sub_100A2CEC8();
  id v21 = [v3 sharedPool];
  id v22 = [v21 providerForAsset:v20 shouldValidate:1];

  [v22 naturalSize];
  double v24 = v23;

  double v25 = v19 / v24;
  id v26 = *(uint64_t (**)(uint64_t))(**(void **)(v1 + v8) + 288);
  uint64_t v27 = swift_retain();
  id v28 = (void *)v26(v27);
  swift_release();
  [v28 size];
  double v30 = v29;

  id v31 = *(uint64_t (**)(uint64_t))(**(void **)(v1 + v8) + 288);
  uint64_t v32 = swift_retain();
  id v33 = (void *)v31(v32);
  swift_release();
  [v33 size];
  double v35 = v34;

  return sub_100934114(fabs(v25), fabs(v30 / v35));
}

BOOL sub_100A2FED8()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for CRLImageItemAssetData(0);
  __chkstk_darwin(v2, v3);
  id v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = OBJC_IVAR____TtC8Freeform12CRLImageItem__isSpatial;
  int v7 = *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC8Freeform12CRLImageItem__isSpatial);
  if (v7 != 2)
  {
    if (v7) {
      goto LABEL_8;
    }
    return 0;
  }
  uint64_t v8 = sub_100A2CEC8();
  uint64_t v9 = *(void *)&v8[OBJC_IVAR____TtC8Freeform8CRLAsset_storage + 24];
  uint64_t v10 = *(void *)&v8[OBJC_IVAR____TtC8Freeform8CRLAsset_storage + 32];
  sub_10050F848(&v8[OBJC_IVAR____TtC8Freeform8CRLAsset_storage], v9);
  char v11 = (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 64))(v9, v10);

  if (v11) {
    return 0;
  }
  id v12 = [self sharedPool];
  double v13 = sub_100A2CEC8();
  id v14 = [v12 providerForAsset:v13 shouldValidate:1];

  self;
  float v15 = (void *)swift_dynamicCastObjCClass();
  if (v15)
  {
    id v16 = [v15 CGImageSource];
    if (v16)
    {
      id v17 = v16;
      unsigned int v18 = [self imageSourceIsSpatial:v16];

      *(unsigned char *)(v1 + v6) = v18;
      if (!v18) {
        return 0;
      }
LABEL_8:
      if ((sub_100A2F154() & 1) == 0 && sub_100A2FBC0())
      {
        swift_beginAccess();
        swift_retain();
        sub_1005057FC(&qword_10167F4B0);
        CRRegister.wrappedValue.getter();
        swift_endAccess();
        swift_release();
        char v19 = v5[*(int *)(v2 + 28)];
        sub_100A374CC((uint64_t)v5, type metadata accessor for CRLImageItemAssetData);
        return (v19 & 1) == 0;
      }
      return 0;
    }
  }

  BOOL result = 0;
  *(unsigned char *)(v1 + v6) = 0;
  return result;
}

id sub_100A30184()
{
  uint64_t v1 = type metadata accessor for UUID();
  uint64_t v74 = *(void *)(v1 - 8);
  uint64_t v75 = v1;
  __chkstk_darwin(v1, v2);
  uint64_t v73 = (char *)&v70 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for CRLMaskInfoData();
  __chkstk_darwin(v4, v5);
  int v7 = (unsigned __int8 *)&v70 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8, v9);
  char v11 = (char *)&v70 - v10;
  id v12 = (void *)sub_100A3653C();
  if (v12)
  {
    id v13 = v12;
    id v14 = [v13 pathSource];
    self;
    float v15 = (void *)swift_dynamicCastObjCClass();
    if (v15)
    {
      id v16 = v15;
      if (([v15 shouldShowKnob] & 1) == 0)
      {
        uint64_t v38 = v0;
        uint64_t v39 = *(uint64_t (**)(uint64_t))(**(void **)&v0[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData]
                                                + 288);
        uint64_t v40 = swift_retain();
        id v41 = (void *)v39(v40);
        swift_release();
        [v41 center];
        double v43 = v42;
        double v45 = v44;
        [v41 position];
        double v47 = sub_100064680(v43, v45, v46);
        double v49 = v48;
        [v41 size];
        id v52 = [objc_allocWithZone((Class)CRLCanvasInfoGeometry) initWithCenter:v47 size:v49 v50 v51];

        Swift::String v53 = self;
        [v16 scalar];
        double v55 = v54;
        double v34 = v38;
        [v52 size];
        id v58 = [v53 roundedRectangleWithScalar:1 naturalSize:v55 continuousCurve:v56];
        [v58 setShouldShowKnob:0];
        id v59 = objc_allocWithZone((Class)CRLMaskInfo);
        uint64_t v60 = v38;
        id v37 = [v59 initWithImageItem:v60 geometry:v52 pathSource:v58];

        goto LABEL_7;
      }
    }
  }
  uint64_t v17 = (uint64_t)v11;
  unsigned int v18 = *(uint64_t (**)(uint64_t))(**(void **)&v0[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData]
                                          + 288);
  uint64_t v19 = swift_retain();
  Swift::String v20 = (void *)v18(v19);
  swift_release();
  id v72 = v20;
  sub_100A04D58(v72, (uint64_t)v11);
  sub_100A373FC((uint64_t)v11, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for CRLMaskInfoData);
  id v71 = objc_allocWithZone((Class)CRLMaskInfo);
  uint64_t v21 = &v7[*(int *)(v4 + 20)];
  float v22 = *(float *)v21;
  float v23 = *((float *)v21 + 1);
  float v24 = *((float *)v21 + 2);
  float v25 = *((float *)v21 + 3);
  float v26 = *((float *)v21 + 4);
  uint64_t v27 = v21[20];
  uint64_t v28 = v21[21];
  uint64_t v29 = v21[22];
  uint64_t v30 = v21[23];
  id v31 = objc_allocWithZone((Class)CRLCanvasInfoGeometry);
  uint64_t v32 = v0;
  uint64_t v33 = v30;
  double v34 = v0;
  id v35 = [v31 initWithPosition:v27 size:v28 widthValid:v29 heightValid:v33 horizontalFlip:v22 verticalFlip:v23 angle:v24];
  id v36 = sub_100AB0C00(v7);
  id v37 = [v71 initWithImageItem:v32 geometry:v35 pathSource:v36];

  sub_100A374CC((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for CRLMaskInfoData);
  sub_100A374CC(v17, (uint64_t (*)(void))type metadata accessor for CRLMaskInfoData);
LABEL_7:
  id v61 = objc_allocWithZone((Class)type metadata accessor for CRLCommandSetMask());
  uint64_t v62 = *(void (**)(uint64_t))(**(void **)&v34[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData] + 256);
  uint64_t v63 = v34;
  id v64 = v37;
  uint64_t v65 = swift_retain();
  uint64_t v66 = v73;
  v62(v65);
  swift_release();
  Class isa = UUID._bridgeToObjectiveC()().super.isa;
  (*(void (**)(char *, uint64_t))(v74 + 8))(v66, v75);
  id v68 = [v61 initWithId:isa maskInfo:v64];

  return v68;
}

BOOL sub_100A30774(char a1)
{
  uint64_t v3 = (void *)sub_100A3653C();
  if (!v3) {
    return 0;
  }
  id v4 = v3;
  id v5 = [v4 geometry];
  [v5 position];
  CGFloat v7 = v6;
  CGFloat v9 = v8;

  v23.CGFloat x = 0.0;
  v23.CGFloat y = 0.0;
  v22.CGFloat x = v7;
  v22.CGFloat y = v9;
  if (!CGPointEqualToPoint(v22, v23)) {
    goto LABEL_7;
  }
  id v10 = [v4 geometry];
  char v11 = *(uint64_t (**)(uint64_t))(**(void **)(v1 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData)
                                          + 288);
  uint64_t v12 = swift_retain();
  id v13 = (void *)v11(v12);
  swift_release();
  unsigned int v14 = [v10 isEqualExceptForPosition:v13];

  if (!v14)
  {
LABEL_7:

    return 0;
  }
  id v15 = [v4 pathSource];
  id v16 = v15;
  if ((a1 & 1) == 0)
  {
    id v21 = [v15 isRectangular];
LABEL_12:
    id v19 = v21;

    return (BOOL)v19;
  }
  self;
  uint64_t v17 = (void *)swift_dynamicCastObjCClass();
  if (!v17)
  {

    id v16 = [v4 pathSource];
    id v21 = [v16 isRectangular];
    goto LABEL_12;
  }
  id v18 = [v17 type];

  return v18 == 0;
}

id sub_100A309D0()
{
  uint64_t v1 = (void *)sub_100A3653C();
  if (v1)
  {
    id v2 = v1;
    id v3 = [v2 geometry];
    id v4 = *(uint64_t (**)(uint64_t))(**(void **)(v0 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData)
                                           + 288);
    uint64_t v5 = swift_retain();
    double v6 = (void *)v4(v5);
    swift_release();
    id v7 = [v3 geometryWithParentGeometry:v6];

    return v7;
  }
  else
  {
    CGFloat v9 = *(uint64_t (**)(uint64_t))(**(void **)(v0 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData)
                                           + 288);
    uint64_t v10 = swift_retain();
    uint64_t v11 = v9(v10);
    swift_release();
    return (id)v11;
  }
}

void sub_100A30C54(uint64_t a1, uint64_t a2)
{
  uint64_t v62 = a1;
  uint64_t v4 = sub_1005057FC(&qword_10168C8A0);
  __chkstk_darwin(v4 - 8, v5);
  id v7 = (char *)&v60 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8, v9);
  uint64_t v11 = (char *)&v60 - v10;
  uint64_t v12 = type metadata accessor for CRLMaskInfoData();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12, v14);
  id v16 = (unsigned __int8 *)&v60 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17, v18);
  id v61 = (unsigned __int8 *)&v60 - v19;
  __chkstk_darwin(v20, v21);
  CGPoint v23 = (unsigned __int8 *)&v60 - v22;
  swift_beginAccess();
  type metadata accessor for CRLImageItemCRDTData(0);
  swift_retain();
  sub_1005057FC(&qword_10168C8A8);
  CRRegister.wrappedValue.getter();
  swift_endAccess();
  swift_release();
  float v24 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
  if (v24(v11, 1, v12) != 1)
  {
    uint64_t v60 = a2;
    sub_100A37464((uint64_t)v11, (uint64_t)v23, (uint64_t (*)(void))type metadata accessor for CRLMaskInfoData);
    sub_100522E9C(v62, (uint64_t)v7, &qword_10168C8A0);
    if (v24(v7, 1, v12) == 1)
    {
      sub_100522F00((uint64_t)v7, &qword_10168C8A0);
    }
    else
    {
      uint64_t v27 = v61;
      sub_100A37464((uint64_t)v7, (uint64_t)v61, (uint64_t (*)(void))type metadata accessor for CRLMaskInfoData);
      uint64_t v28 = *(void **)&v2[OBJC_IVAR____TtC8Freeform12CRLImageItem__maskInfo];
      if (v28)
      {
        id v29 = v28;
        id v30 = sub_100A04F68((uint64_t)v27);
        uint64_t v31 = v60;
        if (v30)
        {
          uint64_t v32 = v30;
          [v29 setGeometry:v30];
          if (v31)
          {
            uint64_t v33 = (void *)sub_100A3653C();
            if (v33)
            {
              *((void *)&v65 + 1) = sub_10050BF48(0, &qword_10168C900);
              *(void *)&long long v64 = v33;
            }
            else
            {
              long long v64 = 0u;
              long long v65 = 0u;
            }
            sub_100522E9C((uint64_t)&v64, (uint64_t)v63, &qword_101672BF0);
            swift_beginAccess();
            id v56 = v33;
            sub_10057D61C((uint64_t)v63, 0x25uLL);
            swift_endAccess();
            sub_100522F00((uint64_t)&v64, &qword_101672BF0);
          }
        }
        if ((sub_100AAFDA4(v23, v27) & 1) == 0)
        {
          double v57 = sub_100AB0C00(v23);
          [v29 setPathSource:v57];
          if (v31)
          {
            id v58 = (void *)sub_100A3653C();
            if (v58)
            {
              *((void *)&v65 + 1) = sub_10050BF48(0, &qword_10168C900);
              *(void *)&long long v64 = v58;
            }
            else
            {
              long long v64 = 0u;
              long long v65 = 0u;
            }
            sub_100522E9C((uint64_t)&v64, (uint64_t)v63, &qword_101672BF0);
            swift_beginAccess();
            id v59 = v58;
            sub_10057D61C((uint64_t)v63, 0x26uLL);
            swift_endAccess();
            sub_100522F00((uint64_t)&v64, &qword_101672BF0);
          }
        }
        sub_100A374CC((uint64_t)v27, (uint64_t (*)(void))type metadata accessor for CRLMaskInfoData);
        uint64_t v54 = (uint64_t)v23;
        goto LABEL_32;
      }
      sub_100A374CC((uint64_t)v27, (uint64_t (*)(void))type metadata accessor for CRLMaskInfoData);
    }
    sub_100A373FC((uint64_t)v23, (uint64_t)v16, (uint64_t (*)(void))type metadata accessor for CRLMaskInfoData);
    id v35 = objc_allocWithZone((Class)CRLMaskInfo);
    id v36 = &v16[*(int *)(v12 + 20)];
    float v37 = *(float *)v36;
    float v38 = *((float *)v36 + 1);
    float v39 = *((float *)v36 + 2);
    float v40 = *((float *)v36 + 3);
    float v41 = *((float *)v36 + 4);
    uint64_t v62 = (uint64_t)v23;
    uint64_t v42 = v36[20];
    uint64_t v43 = v36[21];
    uint64_t v44 = v36[22];
    uint64_t v45 = v36[23];
    id v46 = objc_allocWithZone((Class)CRLCanvasInfoGeometry);
    double v47 = v2;
    id v48 = [v46 initWithPosition:v42 size:v43 widthValid:v44 heightValid:v45 horizontalFlip:v37 verticalFlip:v38 angle:v39];
    double v49 = sub_100AB0C00(v16);
    id v50 = [v35 initWithImageItem:v47 geometry:v48 pathSource:v49];

    sub_100A374CC((uint64_t)v16, (uint64_t (*)(void))type metadata accessor for CRLMaskInfoData);
    double v51 = *(void **)&v47[OBJC_IVAR____TtC8Freeform12CRLImageItem__maskInfo];
    *(void *)&v47[OBJC_IVAR____TtC8Freeform12CRLImageItem__maskInfo] = v50;

    if (v60)
    {
      uint64_t v52 = v62;
      Swift::String v53 = (void *)sub_100A3653C();
      if (v53)
      {
        *((void *)&v65 + 1) = sub_10050BF48(0, &qword_10168C900);
        *(void *)&long long v64 = v53;
      }
      else
      {
        long long v64 = 0u;
        long long v65 = 0u;
      }
      sub_100522E9C((uint64_t)&v64, (uint64_t)v63, &qword_101672BF0);
      swift_beginAccess();
      id v55 = v53;
      sub_10057D61C((uint64_t)v63, 0x24uLL);
      swift_endAccess();
      sub_100522F00((uint64_t)&v64, &qword_101672BF0);
      uint64_t v54 = v52;
    }
    else
    {
      uint64_t v54 = v62;
    }
LABEL_32:
    sub_100A374CC(v54, (uint64_t (*)(void))type metadata accessor for CRLMaskInfoData);
    return;
  }
  sub_100522F00((uint64_t)v11, &qword_10168C8A0);
  float v25 = *(void **)&v2[OBJC_IVAR____TtC8Freeform12CRLImageItem__maskInfo];
  *(void *)&v2[OBJC_IVAR____TtC8Freeform12CRLImageItem__maskInfo] = 0;

  if (a2)
  {
    float v26 = (void *)sub_100A3653C();
    if (v26)
    {
      *((void *)&v65 + 1) = sub_10050BF48(0, &qword_10168C900);
      *(void *)&long long v64 = v26;
    }
    else
    {
      long long v64 = 0u;
      long long v65 = 0u;
    }
    sub_100522E9C((uint64_t)&v64, (uint64_t)v63, &qword_101672BF0);
    swift_beginAccess();
    id v34 = v26;
    sub_10057D61C((uint64_t)v63, 0x24uLL);
    swift_endAccess();
    sub_100522F00((uint64_t)&v64, &qword_101672BF0);
  }
}

uint64_t sub_100A31450()
{
  uint64_t v1 = v0;
  uint64_t v2 = OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData;
  id v3 = *(uint64_t (**)(uint64_t))(**(void **)(v0 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData)
                                         + 288);
  uint64_t v4 = swift_retain();
  uint64_t v5 = (void *)v3(v4);
  swift_release();
  [v5 transform];
  long long v25 = v32;
  long long v28 = v31;
  long long v22 = v33;

  long long v31 = v28;
  long long v32 = v25;
  long long v33 = v22;
  uint64_t result = sub_10007F910((double *)&v31, 0.0001);
  if (result)
  {
    id v7 = *(uint64_t (**)(uint64_t))(**(void **)(v0 + v2) + 336);
    uint64_t v8 = swift_retain();
    LOBYTE(v7) = v7(v8);
    swift_release();
    if (v7)
    {
      uint64_t v9 = (void *)sub_100A3653C();
      if (v9)
      {
        id v10 = v9;
        id v11 = [v10 geometry];
        [v11 transform];
        long long v26 = v32;
        long long v29 = v31;
        long long v23 = v33;

        long long v31 = v29;
        long long v32 = v26;
        long long v33 = v23;
        LODWORD(v11) = sub_10007F910((double *)&v31, 0.0001);

        if (!v11) {
          return 0;
        }
      }
      uint64_t v12 = *(uint64_t (**)(uint64_t))(**(void **)(v1 + v2) + 312);
      uint64_t v13 = swift_retain();
      LOBYTE(v12) = v12(v13);
      swift_release();
      if (v12) {
        return 0;
      }
    }
    uint64_t v14 = (void *)sub_100A3653C();
    if (v14)
    {
      id v15 = v14;
      id v16 = [v15 geometry];
      [v16 transform];
      long long v27 = v32;
      long long v30 = v31;
      long long v24 = v33;

      long long v31 = v30;
      long long v32 = v27;
      long long v33 = v24;
      LODWORD(v16) = sub_10007F910((double *)&v31, 0.0001);

      if (!v16) {
        return 0;
      }
    }
    uint64_t v17 = (void *)sub_100A3653C();
    if (v17)
    {
      id v18 = [v17 pathSource];
      if (v18)
      {
        uint64_t v19 = v18;
        if ([v18 conformsToProtocol:&OBJC_PROTOCOL___CRLSmartPathSource])
        {
          self;
          uint64_t v20 = (void *)swift_dynamicCastObjCClass();
          if (v20)
          {
            unsigned int v21 = [v20 shouldShowKnob];

            return v21 ^ 1;
          }
          else
          {

            return 0;
          }
        }
      }
    }
    return 1;
  }
  return result;
}

uint64_t sub_100A31788()
{
  uint64_t v1 = (void *)sub_100A3653C();
  if (!v1) {
    goto LABEL_3;
  }
  id v2 = v1;
  id v3 = [v2 geometry];
  [v3 transform];
  long long v9 = v12;
  long long v10 = v11;
  long long v8 = v13;

  long long v11 = v10;
  long long v12 = v9;
  long long v13 = v8;
  LODWORD(v3) = sub_10007F910((double *)&v11, 0.0001);

  if (!v3)
  {
    char v6 = 0;
  }
  else
  {
LABEL_3:
    uint64_t v4 = *(uint64_t (**)(uint64_t))(**(void **)(v0 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData)
                                           + 312);
    uint64_t v5 = swift_retain();
    LOBYTE(v4) = v4(v5);
    swift_release();
    char v6 = v4 ^ 1;
  }
  return v6 & 1;
}

void *sub_100A31894@<X0>(uint64_t *a1@<X8>)
{
  id v3 = v1;
  uint64_t v4 = (void *)sub_100BC934C();
  if (v4)
  {
    sub_100A1F088(v4, (uint64_t)v14);
    SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)((CKRecordID)v14, v5);
  }
  else
  {
    sub_10051A3F4((uint64_t)v14);
  }
  sub_10051B3EC((uint64_t)v14, (uint64_t)v16, (uint64_t *)&unk_101685110);
  char v6 = *(uint64_t (**)(uint64_t))(**(void **)&v3[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData] + 384);
  id v7 = v3;
  uint64_t v8 = swift_retain();
  long long v9 = (void *)v6(v8);

  swift_release();
  if (v9)
  {
    sub_10093D2D8(v9, (uint64_t)v14);
    SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)((CKRecordID)v14, v10);
  }
  else
  {
    sub_10051A41C(v14);
  }
  sub_10051B3EC((uint64_t)v14, (uint64_t)v15, (uint64_t *)&unk_101683E20);
  float v11 = sub_100A32280();

  sub_10051B3EC((uint64_t)v16, (uint64_t)v14, (uint64_t *)&unk_101685110);
  sub_10051B3EC((uint64_t)v15, (uint64_t)&v14[232], (uint64_t *)&unk_101683E20);
  *(float *)&v14[360] = v11;
  *(void *)&v14[368] = _swiftEmptyDictionarySingleton;
  a1[3] = (uint64_t)&type metadata for CRLImagePresetData;
  a1[4] = sub_1009F2CD4();
  uint64_t v12 = swift_allocObject();
  *a1 = v12;
  uint64_t result = memcpy((void *)(v12 + 16), v14, 0x178uLL);
  *(void *)(v12 + 392) = _swiftEmptyDictionarySingleton;
  return result;
}

void sub_100A31A44(void *a1)
{
  sub_100A3295C(a1);
  type metadata accessor for CRLMediaItem();
  uint64_t v3 = swift_dynamicCastClass();
  if (v3)
  {
    uint64_t v4 = (void *)v3;
    Swift::String v5 = a1;
    char v6 = (void *)sub_100BC934C();
    sub_100BC9500(v6);
    uint64_t v7 = OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData;
    uint64_t v8 = *(uint64_t (**)(uint64_t))(**(void **)((char *)v4
                                                         + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData)
                                           + 384);
    long long v9 = v5;
    uint64_t v10 = swift_retain();
    uint64_t v11 = v8(v10);

    swift_release();
    sub_10088B0DC((void *)v11);

    uint64_t v12 = *(uint64_t (**)(uint64_t))(**(void **)((char *)v4 + v7) + 336);
    long long v13 = v9;
    uint64_t v14 = swift_retain();
    LOBYTE(v11) = v12(v14);

    swift_release();
    uint64_t v15 = sub_10088AEB4(v11 & 1);
    *(unsigned char *)(v1 + OBJC_IVAR____TtC8Freeform12CRLMediaItem_isLooping) = (*(uint64_t (**)(uint64_t))((swift_isaMask & *v4) + 0x4B0))(v15) & 1;
  }
  type metadata accessor for CRLImageItem();
  if (swift_dynamicCastClass())
  {
    id v16 = a1;
    uint64_t v17 = (void *)sub_100A3653C();
    if (v17)
    {
      id v18 = v17;
      id v24 = [v18 pathSource];
      self;
      uint64_t v19 = (void *)swift_dynamicCastObjCClass();
      if (v19 && (uint64_t v20 = v19, ([v19 shouldShowKnob] & 1) == 0))
      {
        [v20 cornerRadius];
        *(float *)&double v22 = v22;
        id v23 = sub_100A3252C(*(float *)&v22);
        sub_100A36B4C(v23);

        unsigned int v21 = v23;
      }
      else
      {

        unsigned int v21 = v24;
      }
    }
    else
    {
      unsigned int v21 = v16;
    }
  }
}

void sub_100A31E88(uint64_t a1, double a2, double a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = (void *)sub_100A3653C();
  if (v8)
  {
    long long v9 = v8;
    id v27 = v8;
    id v10 = [v27 geometry];
    [v10 size];
    double v12 = v11;
    double v14 = v13;
    double v15 = sub_100067234(v11, v13, a2, a3);
    if (v15 < v12 || v16 < v14)
    {
      CGFloat v18 = v15 / v12;
      CGFloat v19 = v16 / v14;
      id v20 = [v27 geometry];
      CGAffineTransformMakeScale(&v28, v18, v19);
      id v21 = [v20 geometryByAppendingTransform:&v28];

      double v22 = *(uint64_t (**)(uint64_t))(**(void **)&v4[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData]
                                              + 288);
      uint64_t v23 = swift_retain();
      id v24 = (void *)v22(v23);
      swift_release();
      CGAffineTransformMakeScale(&v28, v18, v19);
      id v25 = [v24 geometryByAppendingTransform:&v28];

      [v27 setGeometry:v21];
      id v26 = v27;
      sub_100A36B4C(v9);

      sub_10088AA40(v25);
    }
    else
    {
    }
  }
  else
  {
    v29.receiver = v3;
    v29.super_class = (Class)type metadata accessor for CRLImageItem();
    [super scaleDownSizeToFitWithinSize:a1 board:a2];
  }
}

float sub_100A32280()
{
  uint64_t v0 = (void *)sub_100A3653C();
  float v1 = 0.0;
  if (v0)
  {
    id v2 = v0;
    id v3 = [v2 pathSource];
    self;
    uint64_t v4 = (void *)swift_dynamicCastObjCClass();
    if (v4 && (Swift::String v5 = v4, ![v4 type]))
    {
      [v5 scalar];
      double v7 = v6;

      return v7;
    }
    else
    {
    }
  }
  return v1;
}

id sub_100A32338(char a1)
{
  uint64_t v3 = type metadata accessor for UUID();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3, v5);
  double v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1) {
    float v8 = 10.0;
  }
  else {
    float v8 = 0.0;
  }
  long long v9 = v1;
  id v10 = sub_100A3252C(v8);
  id v11 = objc_allocWithZone((Class)type metadata accessor for CRLCommandSetMask());
  double v12 = *(void (**)(uint64_t))(**(void **)&v9[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData] + 256);
  uint64_t v13 = swift_retain();
  v12(v13);
  swift_release();
  Class isa = UUID._bridgeToObjectiveC()().super.isa;
  (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
  id v15 = [v11 initWithId:isa maskInfo:v10];

  return v15;
}

id sub_100A3252C(float a1)
{
  id v2 = v1;
  uint64_t v4 = (void *)sub_100A3653C();
  if (a1 <= 0.0)
  {
    if (!v4) {
      return 0;
    }
    id v6 = v4;
    id v7 = [v6 geometry];
    [v7 size];
    id v5 = [self pathSourceForShapeType:3 naturalSize:v8, v9];
    id v10 = objc_allocWithZone((Class)CRLMaskInfo);
    id v11 = v2;
    id v12 = [v10 initWithImageItem:v11 geometry:v7 pathSource:v5];
  }
  else
  {
    if (v4)
    {
      id v5 = [v4 geometry];
    }
    else
    {
      uint64_t v13 = *(uint64_t (**)(uint64_t))(**(void **)&v1[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData]
                                              + 288);
      uint64_t v14 = swift_retain();
      id v15 = (void *)v13(v14);
      swift_release();
      [v15 center];
      double v17 = v16;
      double v19 = v18;
      [v15 position];
      double v21 = sub_100064680(v17, v19, v20);
      double v23 = v22;
      [v15 size];
      id v5 = [objc_allocWithZone((Class)CRLCanvasInfoGeometry) initWithCenter:v21 size:v23];
    }
    id v26 = self;
    [v5 size];
    id v11 = [v26 roundedRectangleWithScalar:1 naturalSize:a1 continuousCurve:v27];
    [v11 setShouldShowKnob:0];
    id v29 = objc_allocWithZone((Class)CRLMaskInfo);
    id v7 = v2;
    id v12 = [v29 initWithImageItem:v7 geometry:v5 pathSource:v11];
  }

  return v12;
}

uint64_t sub_100A328CC()
{
  id v0 = [self standardUserDefaults];
  unsigned __int8 v1 = [v0 BOOLForKey:@"CRLImageItemsRequireAssetDownloadForSendCopyUserDefault"];

  if (v1) {
    return 1;
  }

  return sub_1008864EC();
}

void sub_100A3295C(void *a1)
{
  uint64_t v3 = type metadata accessor for CRLMaskInfoData();
  __chkstk_darwin(v3, v4);
  id v6 = &v60[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __n128 v9 = __chkstk_darwin(v7, v8);
  id v11 = &v60[-v10];
  id v12 = *(uint64_t (**)(__n128))((swift_isaMask & *a1) + 0xE0);
  uint64_t v13 = (void *)v12(v9);
  [v13 copy];

  _bridgeAnyObjectToAny(_:)();
  swift_unknownObjectRelease();
  sub_10050BF48(0, (unint64_t *)&qword_101684F50);
  if (!swift_dynamicCast())
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"updateGeometryToReplaceBoardItem(_:)", 36, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLImageItem.swift", 83, 2, 570, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"updateGeometryToReplaceBoardItem(_:)", 36, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLImageItem.swift", 83, 2, 570);
    return;
  }
  uint64_t v67 = v1;
  uint64_t v14 = v68;
  type metadata accessor for CRLImageItem();
  if (swift_dynamicCastClass())
  {
    id v15 = v14;
    double v16 = a1;
    double v17 = (void *)sub_100A3653C();
    if (v17)
    {
      id v18 = v17;
      id v19 = [v18 pathSource];
      id v20 = [v18 geometry];

      uint64_t v14 = v15;
      goto LABEL_8;
    }

    uint64_t v14 = v15;
  }
  [v14 size];
  double v21 = sub_100064070();
  double v25 = sub_100065738(v21, v22, v23, v24);
  double v27 = v26;
  double v28 = (void *)((uint64_t (*)(void))v12)();
  [v28 size];
  double v30 = v29;
  double v32 = v31;

  id v20 = [objc_allocWithZone((Class)CRLCanvasInfoGeometry) initWithCenter:v25 size:v27];
  id v19 = 0;
LABEL_8:
  [v14 mutableCopy];
  _bridgeAnyObjectToAny(_:)();
  swift_unknownObjectRelease();
  sub_10050BF48(0, (unint64_t *)&qword_101677CC0);
  if (!swift_dynamicCast())
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"updateGeometryToReplaceBoardItem(_:)", 36, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLImageItem.swift", 83, 2, 586, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"updateGeometryToReplaceBoardItem(_:)", 36, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLImageItem.swift", 83, 2, 586);
LABEL_14:

    return;
  }
  id v66 = v14;
  uint64_t v14 = v68;
  [v20 mutableCopy];
  _bridgeAnyObjectToAny(_:)();
  swift_unknownObjectRelease();
  if ((swift_dynamicCast() & 1) == 0)
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"updateGeometryToReplaceBoardItem(_:)", 36, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLImageItem.swift", 83, 2, 587, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"updateGeometryToReplaceBoardItem(_:)", 36, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLImageItem.swift", 83, 2, 587);

    goto LABEL_14;
  }
  long long v33 = v67;
  id v34 = v68;
  id v35 = sub_100A2CEC8();
  id v36 = v20;
  sub_100A36150(v14, v34, (uint64_t)v35, v66, v20, (uint64_t)v33);

  id v37 = v14;
  sub_10088AA40(v37);

  long long v65 = v35;
  if (v19)
  {
    id v38 = [objc_allocWithZone((Class)CRLMaskInfo) initWithImageItem:v33 geometry:v36 pathSource:v19];
    float v39 = v36;
  }
  else
  {
    uint64_t v40 = **(void **)&v33[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData];
    id v64 = v36;
    float v41 = *(uint64_t (**)(uint64_t))(v40 + 288);
    uint64_t v42 = swift_retain();
    uint64_t v43 = (void *)v41(v42);
    swift_release();
    id v63 = v43;
    sub_100A04D58(v63, (uint64_t)v11);
    sub_100A373FC((uint64_t)v11, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for CRLMaskInfoData);
    id v62 = objc_allocWithZone((Class)CRLMaskInfo);
    uint64_t v44 = &v6[*(int *)(v3 + 20)];
    float v45 = *(float *)v44;
    float v46 = *((float *)v44 + 1);
    float v47 = *((float *)v44 + 2);
    float v48 = *((float *)v44 + 3);
    float v49 = *((float *)v44 + 4);
    uint64_t v50 = v44[20];
    uint64_t v51 = v44[21];
    uint64_t v52 = v44[22];
    unsigned int v61 = v44[23];
    id v53 = objc_allocWithZone((Class)CRLCanvasInfoGeometry);
    uint64_t v54 = v67;
    id v55 = [v53 initWithPosition:v50 size:v51 widthValid:v52 heightValid:v61 horizontalFlip:v45 verticalFlip:v46 angle:v47];
    id v56 = sub_100AB0C00(v6);
    id v38 = [v62 initWithImageItem:v54 geometry:v55 pathSource:v56];

    sub_100A374CC((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for CRLMaskInfoData);
    uint64_t v57 = (uint64_t)v11;
    float v39 = v64;
    sub_100A374CC(v57, (uint64_t (*)(void))type metadata accessor for CRLMaskInfoData);
    id v19 = 0;
  }
  id v58 = v66;
  [v38 setGeometry:v34];
  id v59 = v38;
  sub_100A36B4C(v38);
}

double sub_100A33170()
{
  unsigned __int8 v1 = (void *)sub_100A3653C();
  if (v1)
  {
    id v2 = v1;
    id v3 = [v2 geometry];
    uint64_t v4 = *(uint64_t (**)(uint64_t))(**(void **)(v0 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData)
                                           + 288);
    uint64_t v5 = swift_retain();
    id v6 = (void *)v4(v5);
    swift_release();
    id v7 = [v3 geometryWithParentGeometry:v6];
  }
  else
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t))(**(void **)(v0 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData)
                                           + 288);
    uint64_t v9 = swift_retain();
    id v7 = (id)v8(v9);
    swift_release();
  }
  [v7 center];
  double v11 = v10;

  return v11;
}

double sub_100A333A4()
{
  unsigned __int8 v1 = sub_100A2CEC8();
  id v2 = [self sharedPool];
  id v3 = [v2 temporaryProviderForAsset:v1 shouldValidate:1];

  [v3 naturalSize];
  double v5 = v4;
  double v7 = v6;

  uint64_t v8 = *(uint64_t (**)(uint64_t))(**(void **)(v0 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData)
                                         + 288);
  uint64_t v9 = swift_retain();
  double v10 = (void *)v8(v9);
  swift_release();
  [v10 size];
  double v12 = v11;
  double v14 = v13;

  if (v5 == 0.0 || v7 == 0.0 || v12 == 0.0 || v14 == 0.0)
  {

    return 0.0;
  }
  double v17 = sub_100454A70();
  if (v17 < v5) {
    double v5 = v17;
  }
  sub_100454A70();
  if (v18 >= v7) {
    double v19 = v7;
  }
  else {
    double v19 = v18;
  }
  double v15 = sub_100067200(v12, v14, v5, v19) / v12;

  if (v15 <= 2.0) {
    return 0.0;
  }
  return v15;
}

id sub_100A33530()
{
  uint64_t v1 = v0;
  swift_retain();
  uint64_t v2 = sub_100DECBF0(0);
  swift_release();
  id v3 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_store);
  double v4 = objc_allocWithZone((Class)type metadata accessor for CRLImageItem());
  return sub_100F4530C((uint64_t)v3, v2, v4);
}

uint64_t sub_100A335F0(uint64_t a1)
{
  uint64_t v3 = sub_1005057FC(&qword_10168C8C0);
  uint64_t v39 = *(void *)(v3 - 8);
  __chkstk_darwin(v3, v4);
  uint64_t v37 = (uint64_t)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = type metadata accessor for CRLImageItemCRDTData(0);
  __chkstk_darwin(v38, v6);
  uint64_t v8 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9, v10);
  double v12 = (char *)&v37 - v11;
  uint64_t v13 = sub_1005057FC(&qword_10168C8B8);
  __chkstk_darwin(v13 - 8, v14);
  double v16 = (char *)&v37 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for CRLImageItem();
  uint64_t v17 = swift_dynamicCastClass();
  if (v17)
  {
    uint64_t v18 = v17;
    uint64_t v41 = a1;
    swift_unknownObjectRetain();
    uint64_t v40 = sub_100CF6354(v18, v1);
    double v19 = *(_UNKNOWN *****)(v1 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
    if (*v19 != &off_10169CA50) {
      double v19 = 0;
    }
    uint64_t v20 = (uint64_t)v19 + qword_10171C7A8;
    swift_beginAccess();
    sub_100A373FC(v20, (uint64_t)v12, type metadata accessor for CRLImageItemCRDTData);
    double v21 = *(_UNKNOWN *****)(v18 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
    if (*v21 != &off_10169CA50) {
      double v21 = 0;
    }
    uint64_t v22 = (uint64_t)v21 + qword_10171C7A8;
    swift_beginAccess();
    sub_100A373FC(v22, (uint64_t)v8, type metadata accessor for CRLImageItemCRDTData);
    sub_100A37210(&qword_10168C8E0);
    CRStruct_3.actionUndoingDifference(from:)();
    sub_100A374CC((uint64_t)v8, type metadata accessor for CRLImageItemCRDTData);
    sub_100A374CC((uint64_t)v12, type metadata accessor for CRLImageItemCRDTData);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v39 + 48))(v16, 1, v3) == 1)
    {
      sub_100522F00((uint64_t)v16, &qword_10168C8B8);
      memset(v42, 0, sizeof(v42));
      uint64_t v43 = 1;
    }
    else
    {
      uint64_t v23 = *(int *)(v3 + 48);
      uint64_t v24 = (uint64_t)&v16[v23];
      uint64_t v25 = *(int *)(v3 + 64);
      uint64_t v26 = (uint64_t)&v16[v25];
      uint64_t v27 = v37;
      uint64_t v28 = v37 + v23;
      uint64_t v29 = v37 + v25;
      sub_10051B3EC((uint64_t)v16, v37, &qword_10168C8C8);
      sub_10051B3EC(v24, v28, &qword_10168C8D0);
      sub_10051B3EC(v26, v29, &qword_10168C8D8);
      uint64_t v43 = v3;
      double v30 = sub_1005767BC(v42);
      uint64_t v31 = (uint64_t)v30 + *(int *)(v3 + 48);
      uint64_t v32 = (uint64_t)v30 + *(int *)(v3 + 64);
      sub_10051B3EC(v27, (uint64_t)v30, &qword_10168C8C8);
      sub_10051B3EC(v28, v31, &qword_10168C8D0);
      sub_10051B3EC(v29, v32, &qword_10168C8D8);
    }
    uint64_t v33 = v40;
    swift_beginAccess();
    sub_10057D560((uint64_t)v42, 3);
    swift_endAccess();
    swift_unknownObjectRelease();
    return v33;
  }
  else
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"createUndoingMutations(fromSnapshot:)", 37, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLImageItem.swift", 83, 2, 656, (uint64_t)"Tried to generate undo from mismatched type", 43, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_100586FD4((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Tried to generate undo from mismatched type");
    sub_1005871AC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"createUndoingMutations(fromSnapshot:)", 37, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLImageItem.swift", 83, 2, 656);
    SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v35, v36);
    uint64_t result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
  return result;
}

uint64_t sub_100A33B24(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1005057FC(&qword_10168C8E8);
  long long v87 = *(unsigned int (***)(char *, uint64_t, uint64_t))(v4 - 8);
  uint64_t v88 = v4;
  __chkstk_darwin(v4, v5);
  uint64_t v7 = (char *)&v82 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8, v9);
  uint64_t v11 = (char *)&v82 - v10;
  __chkstk_darwin(v12, v13);
  uint64_t v15 = (char *)&v82 - v14;
  __chkstk_darwin(v16, v17);
  uint64_t v89 = (uint64_t)&v82 - v18;
  uint64_t v86 = type metadata accessor for CRLImageItemCRDTData(0);
  __chkstk_darwin(v86, v19);
  double v21 = (char *)&v82 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22, v23);
  uint64_t v25 = (char *)&v82 - v24;
  uint64_t v26 = sub_1005057FC(&qword_10168C8F0);
  __chkstk_darwin(v26 - 8, v27);
  uint64_t v29 = (char *)&v82 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v30, v31);
  uint64_t v33 = (char *)&v82 - v32;
  type metadata accessor for CRLImageItem();
  uint64_t v34 = swift_dynamicCastClass();
  if (v34)
  {
    uint64_t v35 = v34;
    long long v83 = v15;
    uint64_t v84 = v11;
    uint64_t v85 = v7;
    long long v90 = v33;
    type metadata accessor for CRLBoardItemBase(0);
    if (swift_dynamicCastClass())
    {
      Swift::String v36 = *(_UNKNOWN *****)(v2 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
      if (*v36 != &off_10169CA50) {
        Swift::String v36 = 0;
      }
      uint64_t v37 = (uint64_t)v36 + qword_10171C7A8;
      swift_beginAccess();
      sub_100A373FC(v37, (uint64_t)v25, type metadata accessor for CRLImageItemCRDTData);
      uint64_t v38 = *(_UNKNOWN *****)(v35 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
      if (*v38 != &off_10169CA50) {
        uint64_t v38 = 0;
      }
      uint64_t v39 = (uint64_t)v38 + qword_10171C7A8;
      swift_beginAccess();
      sub_100A373FC(v39, (uint64_t)v21, type metadata accessor for CRLImageItemCRDTData);
      sub_100A37210(&qword_10168C8F8);
      swift_unknownObjectRetain();
      uint64_t v40 = (uint64_t)v90;
      CRType.observableDifference(from:)();
      sub_100A374CC((uint64_t)v21, type metadata accessor for CRLImageItemCRDTData);
      sub_100A374CC((uint64_t)v25, type metadata accessor for CRLImageItemCRDTData);
      sub_100522E9C(v40, (uint64_t)v29, &qword_10168C8F0);
      uint64_t v41 = v88;
      if (v87[6](v29, 1, v88) == 1)
      {
        sub_100522F00((uint64_t)v29, &qword_10168C8F0);
        uint64_t v42 = _swiftEmptyArrayStorage;
        if (!*(void *)&_swiftEmptyArrayStorage[2]) {
          goto LABEL_30;
        }
      }
      else
      {
        uint64_t v82 = a1;
        uint64_t v43 = *(int *)(v41 + 48);
        uint64_t v44 = v89;
        uint64_t v45 = v89 + v43;
        uint64_t v46 = *(int *)(v41 + 64);
        uint64_t v47 = v89 + v46;
        uint64_t v48 = (uint64_t)&v29[v43];
        uint64_t v49 = (uint64_t)&v29[v46];
        sub_10051B3EC((uint64_t)v29, v89, &qword_10167D310);
        sub_10051B3EC(v48, v45, &qword_10167D310);
        sub_10051B3EC(v49, v47, &qword_10167D310);
        uint64_t v50 = (uint64_t)v83;
        uint64_t v51 = (uint64_t)&v83[*(int *)(v41 + 48)];
        uint64_t v52 = (uint64_t)&v83[*(int *)(v41 + 64)];
        sub_100522E9C(v44, (uint64_t)v83, &qword_10167D310);
        sub_100522E9C(v45, v51, &qword_10167D310);
        sub_100522E9C(v47, v52, &qword_10167D310);
        uint64_t v53 = type metadata accessor for CRValueObservableDifference();
        uint64_t v54 = *(void *)(v53 - 8);
        id v55 = *(unsigned int (***)(char *, uint64_t, uint64_t))(v54 + 48);
        uint64_t v86 = v54 + 48;
        long long v87 = v55;
        if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v55)(v50, 1, v53) == 1)
        {
          sub_100522F00(v52, &qword_10167D310);
          sub_100522F00(v51, &qword_10167D310);
          sub_100522F00(v50, &qword_10167D310);
          uint64_t v42 = _swiftEmptyArrayStorage;
        }
        else
        {
          sub_100522F00(v50, &qword_10167D310);
          sub_100522F00(v52, &qword_10167D310);
          sub_100522F00(v51, &qword_10167D310);
          uint64_t v42 = sub_100F61B70(0, 1, 1, _swiftEmptyArrayStorage);
          unint64_t v57 = *((void *)v42 + 2);
          unint64_t v56 = *((void *)v42 + 3);
          if (v57 >= v56 >> 1) {
            uint64_t v42 = sub_100F61B70((double *)(v56 > 1), v57 + 1, 1, v42);
          }
          *((void *)v42 + 2) = v57 + 1;
          id v58 = &v42[2 * v57];
          *((void *)v58 + 4) = 0x737465737361;
          v58[5] = -2.12455197e183;
        }
        uint64_t v59 = (uint64_t)v84;
        uint64_t v60 = (uint64_t)&v84[*(int *)(v41 + 48)];
        uint64_t v61 = (uint64_t)&v84[*(int *)(v41 + 64)];
        sub_100522E9C(v44, (uint64_t)v84, &qword_10167D310);
        sub_100522E9C(v45, v60, &qword_10167D310);
        sub_100522E9C(v47, v61, &qword_10167D310);
        unsigned int v62 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v87)(v61, 1, v53);
        sub_100522F00(v61, &qword_10167D310);
        sub_100522F00(v60, &qword_10167D310);
        sub_100522F00(v59, &qword_10167D310);
        if (v62 == 1)
        {
          uint64_t v63 = v89;
          uint64_t v40 = (uint64_t)v90;
        }
        else
        {
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v42 = sub_100F61B70(0, *((void *)v42 + 2) + 1, 1, v42);
          }
          uint64_t v63 = v89;
          uint64_t v40 = (uint64_t)v90;
          unint64_t v65 = *((void *)v42 + 2);
          unint64_t v64 = *((void *)v42 + 3);
          if (v65 >= v64 >> 1) {
            uint64_t v42 = sub_100F61B70((double *)(v64 > 1), v65 + 1, 1, v42);
          }
          *((void *)v42 + 2) = v65 + 1;
          id v66 = &v42[2 * v65];
          *((void *)v66 + 4) = 1802723693;
          v66[5] = -4.94660803e173;
        }
        uint64_t v67 = *(int *)(v41 + 48);
        uint64_t v68 = v41;
        uint64_t v69 = (uint64_t)v85;
        uint64_t v70 = (uint64_t)&v85[v67];
        uint64_t v71 = (uint64_t)&v85[*(int *)(v68 + 64)];
        sub_100522E9C(v63, (uint64_t)v85, &qword_10167D310);
        sub_100522E9C(v45, v70, &qword_10167D310);
        sub_100522E9C(v47, v71, &qword_10167D310);
        if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v87)(v70, 1, v53) == 1)
        {
          sub_100522F00(v63, &qword_10168C8E8);
          sub_100522F00(v71, &qword_10167D310);
          sub_100522F00(v70, &qword_10167D310);
          sub_100522F00(v69, &qword_10167D310);
          if (!*((void *)v42 + 2))
          {
LABEL_30:
            swift_bridgeObjectRelease();
            swift_unknownObjectRelease();
            uint64_t v73 = _swiftEmptyDictionarySingleton;
            goto LABEL_31;
          }
        }
        else
        {
          sub_100522F00(v70, &qword_10167D310);
          sub_100522F00(v71, &qword_10167D310);
          sub_100522F00(v69, &qword_10167D310);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v42 = sub_100F61B70(0, *((void *)v42 + 2) + 1, 1, v42);
          }
          unint64_t v75 = *((void *)v42 + 2);
          unint64_t v74 = *((void *)v42 + 3);
          if (v75 >= v74 >> 1) {
            uint64_t v42 = sub_100F61B70((double *)(v74 > 1), v75 + 1, 1, v42);
          }
          *((void *)v42 + 2) = v75 + 1;
          uint64_t v76 = &v42[2 * v75];
          *((void *)v76 + 4) = 0x656B6F727473;
          v76[5] = -2.12455197e183;
          sub_100522F00(v63, &qword_10168C8E8);
          if (!*((void *)v42 + 2)) {
            goto LABEL_30;
          }
        }
      }
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      long long v91 = _swiftEmptyDictionarySingleton;
      sub_100972448((uint64_t)v42, 3, isUniquelyReferenced_nonNull_native);
      uint64_t v73 = v91;
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
LABEL_31:
      sub_100522F00(v40, &qword_10168C8F0);
      return (uint64_t)v73;
    }
    swift_unknownObjectRetain();
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"createSpecificDataObservableDeltas(fromSnapshot:)", 49, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLBoardItem.swift", 83, 2, 835, (uint64_t)"Tried to create observable deltas from mismatched type", 54, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_100586FD4((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Tried to create observable deltas from mismatched type");
    uint64_t v78 = "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLBoardItem.swift";
    uint64_t v79 = 835;
  }
  else
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"createSpecificDataObservableDeltas(fromSnapshot:)", 49, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLImageItem.swift", 83, 2, 668, (uint64_t)"Tried to create observable deltas from mismatched type", 54, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_100586FD4((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Tried to create observable deltas from mismatched type");
    uint64_t v78 = "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLImageItem.swift";
    uint64_t v79 = 668;
  }
  sub_1005871AC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"createSpecificDataObservableDeltas(fromSnapshot:)", 49, 2, (uint64_t)v78, 83, 2, v79);
  SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v80, v81);
  uint64_t result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100A3454C(uint64_t a1, uint64_t a2)
{
  uint64_t v102 = a2;
  uint64_t v97 = type metadata accessor for CRLMaskInfoData();
  uint64_t v94 = *(void *)(v97 - 8);
  __chkstk_darwin(v97, v4);
  long long v91 = (unsigned __int8 *)&v85 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v96 = sub_1005057FC(&qword_10168C8B0);
  __chkstk_darwin(v96, v6);
  uint64_t v95 = (char *)&v85 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1005057FC(&qword_10168C8A0);
  __chkstk_darwin(v8 - 8, v9);
  long long v93 = (char *)&v85 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11, v12);
  long long v92 = (unsigned __int8 *)&v85 - v13;
  __chkstk_darwin(v14, v15);
  uint64_t v99 = (uint64_t)&v85 - v16;
  __chkstk_darwin(v17, v18);
  uint64_t v98 = (uint64_t)&v85 - v19;
  uint64_t v100 = type metadata accessor for CRLImageItemCRDTData(0);
  __chkstk_darwin(v100, v20);
  uint64_t v101 = (uint64_t)&v85 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_1005057FC(&qword_10168C8B8);
  __chkstk_darwin(v22 - 8, v23);
  uint64_t v25 = (char *)&v85 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26, v27);
  uint64_t v29 = (char *)&v85 - v28;
  uint64_t v30 = sub_1005057FC(&qword_10168C8C0);
  uint64_t v31 = *(void (***)(uint64_t, uint64_t, uint64_t, uint64_t))(v30 - 8);
  __chkstk_darwin(v30, v32);
  uint64_t v34 = (char *)&v85 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = v135;
  uint64_t result = sub_10088B69C(a1);
  if (!v35)
  {
    long long v90 = v31;
    uint64_t v135 = (uint64_t)v29;
    uint64_t v88 = v25;
    uint64_t v89 = v34;
    uint64_t v102 = 0;
    uint64_t v37 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))v2;
    uint64_t v38 = (uint64_t *)(a1 + OBJC_IVAR____TtC8Freeform31CRLTransactableUndoingMutations_values);
    swift_beginAccess();
    uint64_t v39 = *v38;
    if (!*(void *)(v39 + 16))
    {
      uint64_t v126 = 0;
      uint64_t v125 = 0;
      uint64_t v127 = 0;
      uint64_t v128 = 1;
      uint64_t v42 = v30;
      uint64_t v43 = v135;
      uint64_t v44 = v90;
LABEL_8:
      uint64_t v45 = (uint64_t *)&unk_1016725E0;
      uint64_t v46 = &v125;
LABEL_9:
      sub_100522F00((uint64_t)v46, v45);
      v44[7](v43, 1, 1, v42);
LABEL_10:
      uint64_t v47 = &qword_10168C8B8;
      uint64_t v48 = v43;
      return sub_100522F00(v48, v47);
    }
    swift_bridgeObjectRetain();
    unint64_t v40 = sub_100956360(3);
    if (v41)
    {
      sub_100522E9C(*(void *)(v39 + 56) + 32 * v40, (uint64_t)&v125, &qword_101672BF0);
    }
    else
    {
      uint64_t v126 = 0;
      uint64_t v125 = 0;
      uint64_t v127 = 0;
      uint64_t v128 = 1;
    }
    uint64_t v43 = v135;
    swift_bridgeObjectRelease();
    uint64_t v42 = v30;
    uint64_t v44 = v90;
    if (v128 == 1) {
      goto LABEL_8;
    }
    sub_10051B3EC((uint64_t)&v125, (uint64_t)&v107, &qword_101672BF0);
    if (!*((void *)&v108 + 1))
    {
      uint64_t v45 = &qword_101672BF0;
      uint64_t v46 = (uint64_t *)&v107;
      goto LABEL_9;
    }
    int v49 = swift_dynamicCast();
    uint64_t v50 = (char *)(v44 + 7);
    uint64_t v51 = v44[7];
    v51(v43, v49 ^ 1u, 1, v42);
    if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v44[6])(v43, 1, v42) == 1) {
      goto LABEL_10;
    }
    uint64_t v52 = *(int *)(v42 + 48);
    long long v90 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))v51;
    uint64_t v53 = (uint64_t)v89;
    uint64_t v54 = (uint64_t)&v89[v52];
    uint64_t v55 = *(int *)(v42 + 64);
    uint64_t v56 = (uint64_t)&v89[v55];
    uint64_t v85 = &v89[v55];
    uint64_t v86 = &v89[v52];
    uint64_t v57 = v43 + v52;
    long long v87 = v50;
    uint64_t v58 = v42;
    uint64_t v59 = v43 + v55;
    sub_10051B3EC(v43, (uint64_t)v89, &qword_10168C8C8);
    sub_10051B3EC(v57, v54, &qword_10168C8D0);
    sub_10051B3EC(v59, v56, &qword_10168C8D8);
    uint64_t v135 = OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData;
    if (**(_UNKNOWN *****)((char *)v37 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData) == &off_10169CA50) {
      uint64_t v60 = *(uint64_t *)((char *)v37 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
    }
    else {
      uint64_t v60 = 0;
    }
    uint64_t v61 = v60 + qword_10171C7A8;
    swift_beginAccess();
    sub_100A373FC(v61, v101, type metadata accessor for CRLImageItemCRDTData);
    uint64_t v62 = (uint64_t)v88;
    uint64_t v63 = (uint64_t)&v88[*(int *)(v58 + 48)];
    uint64_t v64 = (uint64_t)&v88[*(int *)(v58 + 64)];
    sub_100522E9C(v53, (uint64_t)v88, &qword_10168C8C8);
    sub_100522E9C((uint64_t)v86, v63, &qword_10168C8D0);
    sub_100522E9C((uint64_t)v85, v64, &qword_10168C8D8);
    ((void (*)(uint64_t, void, uint64_t, uint64_t))v90)(v62, 0, 1, v58);
    swift_beginAccess();
    sub_100A37210(&qword_10168C8E0);
    swift_retain();
    CRStruct_3.apply(_:)();
    swift_endAccess();
    swift_release();
    sub_100522F00(v62, &qword_10168C8B8);
    sub_1005057FC(&qword_101673478);
    CRRegister.wrappedValue.getter();
    sub_10051B3EC((uint64_t)&v107, (uint64_t)v123, (uint64_t *)&unk_101685110);
    long long v90 = v37;
    swift_beginAccess();
    swift_retain();
    CRRegister.wrappedValue.getter();
    sub_10051B3EC((uint64_t)&v107, (uint64_t)v124, (uint64_t *)&unk_101685110);
    swift_endAccess();
    swift_release();
    sub_10051B3EC((uint64_t)v123, (uint64_t)&v125, (uint64_t *)&unk_101685110);
    if (sub_100556850((uint64_t)&v125) == 1)
    {
      sub_10051B3EC((uint64_t)v124, (uint64_t)&v107, (uint64_t *)&unk_101685110);
      int v65 = sub_100556850((uint64_t)&v107);
      uint64_t v67 = v94;
      uint64_t v66 = (uint64_t)v95;
      uint64_t v68 = v98;
      uint64_t v69 = v100;
      if (v65 == 1) {
        goto LABEL_30;
      }
    }
    else
    {
      sub_10051B3EC((uint64_t)v124, (uint64_t)&v107, (uint64_t *)&unk_101685110);
      if (sub_100556850((uint64_t)&v107) != 1)
      {
        sub_10051B3EC((uint64_t)v124, (uint64_t)v103, (uint64_t *)&unk_101685110);
        v133[12] = v103[12];
        v133[13] = v103[13];
        uint64_t v134 = v104;
        v133[8] = v103[8];
        v133[9] = v103[9];
        v133[11] = v103[11];
        v133[10] = v103[10];
        v133[4] = v103[4];
        v133[5] = v103[5];
        v133[7] = v103[7];
        v133[6] = v103[6];
        v133[0] = v103[0];
        v133[1] = v103[1];
        v133[3] = v103[3];
        v133[2] = v103[2];
        sub_10051B3EC((uint64_t)v123, (uint64_t)v105, (uint64_t *)&unk_101685110);
        v131[12] = v105[12];
        v131[13] = v105[13];
        uint64_t v132 = v106;
        v131[8] = v105[8];
        v131[9] = v105[9];
        v131[11] = v105[11];
        v131[10] = v105[10];
        v131[4] = v105[4];
        v131[5] = v105[5];
        v131[7] = v105[7];
        v131[6] = v105[6];
        v131[0] = v105[0];
        v131[1] = v105[1];
        v131[3] = v105[3];
        v131[2] = v105[2];
        sub_100A37194(v123, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_10051A1EC);
        char v70 = sub_100A1D9DC((uint64_t)v131, (uint64_t)v133);
        sub_100A37194(v124, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_100519F40);
        sub_100A37194(v123, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_100519F40);
        sub_100A37194(v123, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_100519F40);
        uint64_t v67 = v94;
        uint64_t v66 = (uint64_t)v95;
        uint64_t v68 = v98;
        uint64_t v69 = v100;
        if (v70) {
          goto LABEL_30;
        }
        goto LABEL_26;
      }
      uint64_t v67 = v94;
      uint64_t v66 = (uint64_t)v95;
      uint64_t v68 = v98;
      uint64_t v69 = v100;
    }
    sub_10051B3EC((uint64_t)v123, (uint64_t)&v107, (uint64_t *)&unk_101685110);
    sub_10051B3EC((uint64_t)v124, (uint64_t)&v122, (uint64_t *)&unk_101685110);
    sub_100556868((uint64_t)&v107);
LABEL_26:
    swift_beginAccess();
    swift_retain();
    CRRegister.wrappedValue.getter();
    sub_10051B3EC((uint64_t)v103, (uint64_t)v105, (uint64_t *)&unk_101685110);
    swift_endAccess();
    swift_release();
    sub_10051B3EC((uint64_t)v105, (uint64_t)&v107, (uint64_t *)&unk_101685110);
    if (sub_100556850((uint64_t)&v107) == 1)
    {
      uint64_t v71 = 0;
    }
    else
    {
      v129[12] = v119;
      v129[13] = v120;
      uint64_t v130 = v121;
      v129[8] = v115;
      v129[9] = v116;
      v129[11] = v118;
      v129[10] = v117;
      v129[4] = v111;
      v129[5] = v112;
      v129[7] = v114;
      v129[6] = v113;
      v129[0] = v107;
      v129[1] = v108;
      v129[3] = v110;
      v129[2] = v109;
      id v72 = sub_100A1E370((uint64_t)v129, 0);
      sub_100A37194(v105, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_100519F40);
      uint64_t v71 = v72;
    }
    sub_100BC9500(v71);
LABEL_30:
    uint64_t v73 = v101 + *(int *)(v69 + 24);
    sub_1005057FC(&qword_10168C8A8);
    uint64_t v100 = v73;
    CRRegister.wrappedValue.getter();
    swift_beginAccess();
    swift_retain();
    uint64_t v74 = v99;
    CRRegister.wrappedValue.getter();
    swift_endAccess();
    swift_release();
    uint64_t v75 = v66 + *(int *)(v96 + 48);
    sub_100522E9C(v68, v66, &qword_10168C8A0);
    sub_100522E9C(v74, v75, &qword_10168C8A0);
    uint64_t v76 = v68;
    uint64_t v77 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v67 + 48);
    uint64_t v78 = v97;
    if (v77(v66, 1, v97) == 1)
    {
      sub_100522F00(v74, &qword_10168C8A0);
      sub_100522F00(v76, &qword_10168C8A0);
      int v79 = v77(v75, 1, v78);
      uint64_t v80 = v101;
      uint64_t v81 = (uint64_t)v89;
      if (v79 == 1) {
        goto LABEL_38;
      }
    }
    else
    {
      uint64_t v82 = v92;
      sub_100522E9C(v66, (uint64_t)v92, &qword_10168C8A0);
      if (v77(v75, 1, v78) != 1)
      {
        long long v83 = v91;
        sub_100A37464(v75, (uint64_t)v91, (uint64_t (*)(void))type metadata accessor for CRLMaskInfoData);
        char v84 = sub_100A05F04(v82, v83);
        sub_100A374CC((uint64_t)v83, (uint64_t (*)(void))type metadata accessor for CRLMaskInfoData);
        sub_100522F00(v99, &qword_10168C8A0);
        sub_100522F00(v98, &qword_10168C8A0);
        sub_100A374CC((uint64_t)v82, (uint64_t (*)(void))type metadata accessor for CRLMaskInfoData);
        sub_100522F00(v66, &qword_10168C8A0);
        uint64_t v66 = (uint64_t)v93;
        uint64_t v80 = v101;
        uint64_t v81 = (uint64_t)v89;
        if (v84)
        {
LABEL_39:
          sub_100A374CC(v80, type metadata accessor for CRLImageItemCRDTData);
          uint64_t v47 = &qword_10168C8C0;
          uint64_t v48 = v81;
          return sub_100522F00(v48, v47);
        }
        goto LABEL_37;
      }
      sub_100522F00(v99, &qword_10168C8A0);
      sub_100522F00(v98, &qword_10168C8A0);
      sub_100A374CC((uint64_t)v82, (uint64_t (*)(void))type metadata accessor for CRLMaskInfoData);
      uint64_t v80 = v101;
      uint64_t v81 = (uint64_t)v89;
    }
    sub_100522F00(v66, &qword_10168C8B0);
    uint64_t v66 = (uint64_t)v93;
LABEL_37:
    CRRegister.wrappedValue.getter();
    sub_100A30C54(v66, 0);
LABEL_38:
    sub_100522F00(v66, &qword_10168C8A0);
    goto LABEL_39;
  }
  return result;
}

uint64_t sub_100A35378(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = sub_1005057FC(&qword_10168C8A0);
  __chkstk_darwin(v10 - 8, v11);
  uint64_t v61 = (char *)&v57 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v67 = type metadata accessor for CRLImageItemAssetData(0);
  __chkstk_darwin(v67, v13);
  uint64_t v66 = (char *)&v57 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  switch(a3)
  {
    case 3:
      swift_bridgeObjectRelease();
      goto LABEL_4;
    default:
      char v15 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if (v15)
      {
LABEL_4:
        uint64_t v60 = a1;
        type metadata accessor for CRLImageItem();
        uint64_t result = swift_dynamicCastClass();
        uint64_t v65 = result;
        if (result)
        {
          uint64_t v17 = *(void *)(a2 + 16);
          if (v17)
          {
            uint64_t v63 = OBJC_IVAR____TtC8Freeform12CRLImageItem__isSpatial;
            uint64_t v64 = OBJC_IVAR____TtC8Freeform12CRLImageItem__imageAssetAsData;
            uint64_t v62 = OBJC_IVAR____TtC8Freeform12CRLImageItem__thumbnailAssetAsData;
            uint64_t v18 = (void *)(v60 + OBJC_IVAR____TtC8Freeform14CRLPropertyMap_data);
            uint64_t v58 = a4;
            swift_unknownObjectRetain();
            swift_bridgeObjectRetain();
            uint64_t v59 = a2;
            uint64_t v19 = (uint64_t *)(a2 + 40);
            long long v57 = xmmword_10117E810;
            while (1)
            {
              uint64_t v21 = *(v19 - 1);
              uint64_t v20 = *v19;
              BOOL v22 = v21 == 0x656B6F727473 && v20 == 0xE600000000000000;
              if (v22 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
                break;
              }
              BOOL v29 = v21 == 0x737465737361 && v20 == 0xE600000000000000;
              if (v29 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
              {
                uint64_t v30 = *(void **)((char *)v5 + v64);
                *(void *)((char *)v5 + v64) = 0;

                *((unsigned char *)v5 + v63) = 2;
                uint64_t v31 = *(void **)((char *)v5 + v62);
                *(void *)((char *)v5 + v62) = 0;

                *((void *)&v71 + 1) = &type metadata for Bool;
                LOBYTE(v70) = 1;
                swift_beginAccess();
                sub_100522E9C((uint64_t)&v70, (uint64_t)v69, &qword_101672BF0);
                char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
                uint64_t v68 = (void *)*v18;
                *uint64_t v18 = 0x8000000000000000;
                sub_100972310((uint64_t)v69, 0x12uLL, isUniquelyReferenced_nonNull_native);
                *uint64_t v18 = v68;
                swift_bridgeObjectRelease();
                swift_endAccess();
                sub_100522F00((uint64_t)&v70, &qword_101672BF0);
                swift_beginAccess();
                swift_retain();
                sub_1005057FC(&qword_10167F4B0);
                uint64_t v33 = (uint64_t)v66;
                CRRegister.wrappedValue.getter();
                swift_endAccess();
                swift_release();
                int v34 = *(unsigned __int8 *)(v33 + *(int *)(v67 + 28));
                sub_100A374CC(v33, type metadata accessor for CRLImageItemAssetData);
                if (v34 == 2)
                {
                  long long v70 = 0u;
                  long long v71 = 0u;
                }
                else
                {
                  *((void *)&v71 + 1) = &type metadata for Bool;
                  LOBYTE(v70) = v34 & 1;
                }
                swift_beginAccess();
                sub_100522E9C((uint64_t)&v70, (uint64_t)v69, &qword_101672BF0);
                char v52 = swift_isUniquelyReferenced_nonNull_native();
                uint64_t v68 = (void *)*v18;
                *uint64_t v18 = 0x8000000000000000;
                sub_100972310((uint64_t)v69, 0x27uLL, v52);
                *uint64_t v18 = v68;
LABEL_39:
                swift_bridgeObjectRelease();
                swift_endAccess();
                uint64_t v53 = &v70;
                uint64_t v54 = &qword_101672BF0;
                goto LABEL_40;
              }
              if ((v21 != 1802723693 || v20 != 0xE400000000000000)
                && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
              {
                sub_1005057FC((uint64_t *)&unk_101672B40);
                uint64_t inited = swift_initStackObject();
                *(_OWORD *)(inited + 16) = v57;
                *(void *)(inited + 56) = &type metadata for String;
                *(void *)(inited + 64) = sub_100528BE4();
                *(void *)(inited + 32) = v21;
                *(void *)(inited + 40) = v20;
                swift_bridgeObjectRetain();
                sub_1005598CC(inited, (uint64_t)"populatePropertyMap(_:observedDifferenceLabels:withPropertyKey:snapshot:)", 73, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLImageItem.swift", 83, 2, 730);
                swift_setDeallocating();
                sub_1005057FC(&qword_101672B50);
                swift_arrayDestroy();
                goto LABEL_41;
              }
              swift_beginAccess();
              type metadata accessor for CRLImageItemCRDTData(0);
              swift_retain();
              sub_1005057FC(&qword_10168C8A8);
              uint64_t v55 = (uint64_t)v61;
              CRRegister.wrappedValue.getter();
              swift_endAccess();
              swift_release();
              sub_100A30C54(v55, v60);
              uint64_t v53 = (long long *)v55;
              uint64_t v54 = &qword_10168C8A0;
LABEL_40:
              sub_100522F00((uint64_t)v53, v54);
LABEL_41:
              v19 += 2;
              if (!--v17)
              {
                swift_unknownObjectRelease();
                return swift_bridgeObjectRelease();
              }
            }
            uint64_t v23 = OBJC_IVAR____TtC8Freeform13CRLStyledItem__stroke;
            uint64_t v24 = *(void **)((char *)v5 + OBJC_IVAR____TtC8Freeform13CRLStyledItem__stroke);
            if (v24)
            {
              id v25 = *(id *)((char *)v5 + OBJC_IVAR____TtC8Freeform13CRLStyledItem__stroke);
            }
            else
            {
              uint64_t v26 = *(uint64_t **)((char *)v5 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
              uint64_t v27 = *v26;
              uint64_t v28 = swift_conformsToProtocol2();
              if (!v28) {
                goto LABEL_54;
              }
              *(void *)&long long v70 = v26;
              (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v28 + 8))(v72, v27, v28);
              sub_10051B3EC((uint64_t)v72, (uint64_t)v73, (uint64_t *)&unk_101685110);
              if (sub_100556850((uint64_t)v73) == 1)
              {
                long long v70 = 0u;
                long long v71 = 0u;
LABEL_26:
                swift_beginAccess();
                sub_100522E9C((uint64_t)&v70, (uint64_t)v69, &qword_101672BF0);
                char v38 = swift_isUniquelyReferenced_nonNull_native();
                uint64_t v68 = (void *)*v18;
                uint64_t v39 = v68;
                *uint64_t v18 = 0x8000000000000000;
                unint64_t v41 = sub_1009563E8();
                uint64_t v42 = v39[2];
                BOOL v43 = (v40 & 1) == 0;
                uint64_t v44 = v42 + v43;
                if (__OFADD__(v42, v43))
                {
                  __break(1u);
LABEL_53:
                  __break(1u);
LABEL_54:
                  __break(1u);
LABEL_55:
                  type metadata accessor for CRLChangeProperty(0);
                  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
                  __break(1u);
                  JUMPOUT(0x100A35E10);
                }
                char v45 = v40;
                if (v39[3] >= v44)
                {
                  if ((v38 & 1) == 0) {
                    sub_10097C320();
                  }
                }
                else
                {
                  sub_10095F04C(v44, v38);
                  uint64_t v46 = sub_1009563E8();
                  if ((v45 & 1) != (v47 & 1)) {
                    goto LABEL_55;
                  }
                  unint64_t v41 = v46;
                }
                uint64_t v48 = v68;
                if (v45)
                {
                  sub_1006063BC((uint64_t)v69, v68[7] + 32 * v41, &qword_101672BF0);
                }
                else
                {
                  v68[(v41 >> 6) + 8] |= 1 << v41;
                  *(void *)(v48[6] + 8 * v41) = 15;
                  sub_10051B3EC((uint64_t)v69, v48[7] + 32 * v41, &qword_101672BF0);
                  uint64_t v49 = v48[2];
                  BOOL v50 = __OFADD__(v49, 1);
                  uint64_t v51 = v49 + 1;
                  if (v50) {
                    goto LABEL_53;
                  }
                  v48[2] = v51;
                }
                *uint64_t v18 = v48;
                goto LABEL_39;
              }
              v75[12] = v73[12];
              v75[13] = v73[13];
              uint64_t v76 = v74;
              v75[8] = v73[8];
              v75[9] = v73[9];
              v75[10] = v73[10];
              v75[11] = v73[11];
              v75[4] = v73[4];
              v75[5] = v73[5];
              v75[6] = v73[6];
              v75[7] = v73[7];
              v75[0] = v73[0];
              v75[1] = v73[1];
              v75[2] = v73[2];
              v75[3] = v73[3];
              id v35 = sub_100A1E370((uint64_t)v75, 0);
              sub_100A37194(v72, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_100519F40);
              Swift::String v36 = *(void **)((char *)v5 + v23);
              *(void *)((char *)v5 + v23) = v35;
              id v25 = v35;

              uint64_t v24 = 0;
            }
            *((void *)&v71 + 1) = sub_10050BF48(0, (unint64_t *)&qword_101686A50);
            *(void *)&long long v70 = v25;
            id v37 = v24;
            goto LABEL_26;
          }
        }
      }
      else
      {
        swift_getObjectType();
        return sub_100892474(a1, a2, a3, a4, v4);
      }
      return result;
  }
}

void sub_100A35E38()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform12CRLImageItem__maskInfo);
}

id sub_100A35E88()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLImageItem();
  return [super dealloc];
}

uint64_t sub_100A35F1C()
{
  return type metadata accessor for CRLImageItem();
}

uint64_t type metadata accessor for CRLImageItem()
{
  uint64_t result = qword_10168C890;
  if (!qword_10168C890) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100A35F70()
{
  return swift_updateClassMetadata2();
}

uint64_t sub_100A35FC8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = type metadata accessor for CRLImageItemAssetData(0);
  __chkstk_darwin(v2 - 8, v3);
  uint64_t v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  swift_retain();
  sub_1005057FC(&qword_10167F4B0);
  CRRegister.wrappedValue.getter();
  swift_endAccess();
  swift_release();
  sub_100A373FC((uint64_t)v5, a1, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
  sub_100A374CC((uint64_t)v5, type metadata accessor for CRLImageItemAssetData);
  uint64_t v6 = type metadata accessor for CRLAssetData();
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(a1, 0, 1, v6);
}

void sub_100A36150(void *a1, void *a2, uint64_t a3, id a4, void *a5, uint64_t a6)
{
  if (a5)
  {
    id v12 = a5;
  }
  else
  {
    [a4 size];
    id v12 = [objc_allocWithZone((Class)CRLCanvasInfoGeometry) initWithPosition:0.0 size:v13, v14];
  }
  id v15 = a5;
  [v12 transformedBounds];
  double v17 = v16;
  double v19 = v18;
  id v20 = [self sharedPool];
  id v21 = [v20 providerForAsset:a3 shouldValidate:1];

  [v21 naturalSize];
  double width = v63.width;
  double height = v63.height;
  v66.double width = 0.0;
  v66.double height = 0.0;
  if (!CGSizeEqualToSize(v63, v66))
  {
    double v17 = sub_10006729C(1, width, height, v17, v19);
    double v19 = v24;
  }
  double v25 = fmax(v17, 1.0);
  double v26 = fmax(v19, 1.0);
  [a1 setSize:v25, v26];
  [v12 center];
  CGFloat v28 = v27;
  CGFloat v30 = v29;
  [a4 transform];
  v64.CGFloat x = v28;
  v64.CGFloat y = v30;
  CGPoint v31 = CGPointApplyAffineTransform(v64, &v62);
  [a1 setCenter:v31.x, v31.y];
  [a1 size];
  double v32 = sub_100064070();
  [a2 setCenter:sub_100065738(v32, v33, v34, v35)];
  Swift::String v36 = self;
  [a2 transformedBounds];
  double v38 = v37;
  double v40 = v39;
  [a2 center];
  [v36 maskCenterForFacesInImageData:a3 imageSize:a6 maskSize:v25 defaultCenter:v26 assetOwner:v38];
  double v44 = v43;
  double v46 = v45;
  [a2 center];
  if (!sub_1000640F4(v47, v48, v44, v46))
  {
    [a2 setCenter:v44, v46];
    double v49 = sub_100064070();
    double v53 = sub_100065738(v49, v50, v51, v52);
    double v55 = sub_100064680(v53, v54, v44);
    [v12 center];
    double v58 = sub_100064698(v56, v57, v55);
    CGFloat v60 = v59;
    [a4 transform];
    v65.CGFloat x = v58;
    v65.CGFloat y = v60;
    CGPoint v61 = CGPointApplyAffineTransform(v65, &v62);
    [a1 setCenter:v61.x, v61.y];
  }
  if (![a1 heightValid] || !objc_msgSend(a1, "widthValid"))
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"adjustIncoming(newImageGeometry:newMaskGeometry:newImageData:targetImageGeometry:targetMaskGeometry:assetOwner:)", 112, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLImageItem.swift", 83, 2, 512, (uint64_t)"returning an image geometry with invalid height/width.", 54, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"adjustIncoming(newImageGeometry:newMaskGeometry:newImageData:targetImageGeometry:targetMaskGeometry:assetOwner:)", 112, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLImageItem.swift", 83, 2, 512);
  }
}

uint64_t sub_100A3653C()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1005057FC(&qword_10168C8A0);
  __chkstk_darwin(v2 - 8, v3);
  uint64_t v5 = &v32[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = type metadata accessor for CRLMaskInfoData();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v9 = __chkstk_darwin(v6, v8);
  uint64_t v11 = &v32[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v9, v12);
  double v14 = &v32[-v13];
  uint64_t v15 = OBJC_IVAR____TtC8Freeform12CRLImageItem__maskInfo;
  if (!*(void *)&v0[OBJC_IVAR____TtC8Freeform12CRLImageItem__maskInfo])
  {
    swift_beginAccess();
    type metadata accessor for CRLImageItemCRDTData(0);
    swift_retain();
    sub_1005057FC(&qword_10168C8A8);
    CRRegister.wrappedValue.getter();
    swift_endAccess();
    swift_release();
    if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
    {
      sub_100522F00((uint64_t)v5, &qword_10168C8A0);
    }
    else
    {
      sub_100A37464((uint64_t)v5, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for CRLMaskInfoData);
      sub_100A373FC((uint64_t)v14, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for CRLMaskInfoData);
      id v34 = objc_allocWithZone((Class)CRLMaskInfo);
      double v16 = &v11[*(int *)(v6 + 20)];
      float v17 = *(float *)v16;
      float v18 = *((float *)v16 + 1);
      float v19 = *((float *)v16 + 2);
      float v20 = *((float *)v16 + 3);
      float v21 = *((float *)v16 + 4);
      uint64_t v22 = v16[20];
      uint64_t v23 = v16[21];
      uint64_t v24 = v16[22];
      unsigned int v33 = v16[23];
      id v25 = objc_allocWithZone((Class)CRLCanvasInfoGeometry);
      double v26 = v0;
      id v27 = [v25 initWithPosition:v22 size:v23 widthValid:v24 heightValid:v33 horizontalFlip:v17 verticalFlip:v18 angle:v19];
      CGFloat v28 = sub_100AB0C00(v11);
      id v29 = [v34 initWithImageItem:v26 geometry:v27 pathSource:v28];

      sub_100A374CC((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for CRLMaskInfoData);
      CGFloat v30 = *(void **)&v1[v15];
      *(void *)&v1[v15] = v29;

      sub_100A374CC((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for CRLMaskInfoData);
    }
  }
  return *(void *)&v1[v15];
}

id sub_100A368BC(uint64_t a1)
{
  id v2 = [self sharedPool];
  id v3 = [v2 providerForAsset:a1 shouldValidate:1];

  self;
  uint64_t v4 = (void *)swift_dynamicCastObjCClass();
  if (v4)
  {
    uint64_t v5 = v4;
    uint64_t v6 = (CGImage *)[v4 CGImageOfLargestSafeSize];
    if (v6)
    {
      uint64_t v7 = v6;
      id v8 = [self tracedPathForImage:v6 alphaThreshold:0.5 pointSpacing:2.0];
      if (v8)
      {
        double Width = (double)(uint64_t)CGImageGetWidth(v7);
        double Height = (double)(uint64_t)CGImageGetHeight(v7);
        [v5 naturalSize];
        if (v11 != Width || v12 != Height)
        {
          CGAffineTransformMakeScale(&v30, v11 / Width, v12 / Height);
          long long v14 = *(_OWORD *)&v30.a;
          long long v15 = *(_OWORD *)&v30.c;
          long long v16 = *(_OWORD *)&v30.tx;
LABEL_12:
          *(_OWORD *)&v30.CGFloat a = v14;
          *(_OWORD *)&v30.CGFloat c = v15;
          *(_OWORD *)&v30.tCGFloat x = v16;
          [v8 transformUsingAffineTransform:&v30];
          goto LABEL_13;
        }
        sub_10043A6BC((CGAffineTransform *)[v5 orientation], 0, (uint64_t)&v30, 0.0, 0.0, 1.0, 1.0);
        CGFloat a = v30.a;
        CGFloat b = v30.b;
        CGFloat c = v30.c;
        CGFloat d = v30.d;
        tCGFloat x = v30.tx;
        tCGFloat y = v30.ty;
        if (!CGAffineTransformIsIdentity(&v30))
        {
          v31.origin.CGFloat x = sub_100064070();
          v30.CGFloat a = a;
          v30.CGFloat b = b;
          v30.CGFloat c = c;
          v30.CGFloat d = d;
          v30.tCGFloat x = tx;
          v30.tCGFloat y = ty;
          CGRect v32 = CGRectApplyAffineTransform(v31, &v30);
          CGFloat x = v32.origin.x;
          CGFloat y = v32.origin.y;
          CGFloat v28 = v32.size.height;
          CGFloat v29 = v32.size.width;
          v30.CGFloat a = a;
          v30.CGFloat b = b;
          v30.CGFloat c = c;
          v30.CGFloat d = d;
          v30.tCGFloat x = tx;
          v30.tCGFloat y = ty;
          [v8 transformUsingAffineTransform:&v30];
          v33.origin.CGFloat x = x;
          v33.origin.CGFloat y = y;
          v33.size.double width = v29;
          v33.size.double height = v28;
          CGFloat v25 = -CGRectGetMinX(v33);
          v34.origin.CGFloat x = x;
          v34.origin.CGFloat y = y;
          v34.size.double width = v29;
          v34.size.double height = v28;
          CGFloat MinY = CGRectGetMinY(v34);
          CGAffineTransformMakeTranslation(&v30, v25, -MinY);
          long long v14 = *(_OWORD *)&v30.a;
          long long v15 = *(_OWORD *)&v30.c;
          long long v16 = *(_OWORD *)&v30.tx;
          goto LABEL_12;
        }
      }
LABEL_13:

      return v8;
    }
  }

  return 0;
}

void sub_100A36B4C(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1005057FC(&qword_10168C8A0);
  __chkstk_darwin(v4 - 8, v5);
  uint64_t v7 = (char *)v45 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8, v9);
  double v11 = (char *)v45 - v10;
  __chkstk_darwin(v12, v13);
  long long v15 = (char *)v45 - v14;
  if (!*(void *)(v1 + OBJC_IVAR____TtC8Freeform12CRLBoardItem_transactionContext)
    && (long long v16 = (void *)swift_unknownObjectWeakLoadStrong()) != 0
    && (v17 = v16, char v18 = (*(uint64_t (**)(void))((swift_isaMask & *v16) + 0x2F0))(), v17, (v18 & 1) != 0))
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"_guardTransaction()", 19, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLTransactions/CRLTransactable.swift", 91, 2, 76, (uint64_t)"Attempting to mutate a CRLTransactable without a CRLTransactableContext set", 75, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_100586FD4((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Attempting to mutate a CRLTransactable without a CRLTransactableContext set");
    sub_1005871AC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"_guardTransaction()", 19, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLTransactions/CRLTransactable.swift", 91, 2, 76);
    SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v43, v44);
    _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
  else
  {
    if (a1)
    {
      if (**(_UNKNOWN *****)(v2 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData) == &off_10169CA50) {
        uint64_t v19 = *(void *)(v2 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
      }
      else {
        uint64_t v19 = 0;
      }
      v45[1] = v19;
      uint64_t v20 = type metadata accessor for CRLMaskInfoData();
      *(void *)&v15[*(int *)(v20 + 24)] = _swiftEmptyDictionarySingleton;
      id v21 = a1;
      swift_retain();
      id v46 = v21;
      sub_100AA59E0([v21 pathSource], (uint64_t)v15);
      id v22 = [v21 geometry];
      v45[0] = (uint64_t)v7;
      id v23 = v22;
      [v22 position];
      float v25 = v24;
      float v27 = v26;
      [v23 size];
      float v29 = v28;
      float v31 = v30;
      [v23 angle];
      float v33 = v32;
      unsigned __int8 v34 = [v23 widthValid];
      unsigned __int8 v35 = [v23 heightValid];
      unsigned __int8 v36 = [v23 horizontalFlip];
      LOBYTE(v21) = [v23 verticalFlip];

      double v37 = &v15[*(int *)(v20 + 20)];
      *(float *)double v37 = v25;
      *((float *)v37 + 1) = v27;
      *((float *)v37 + 2) = v29;
      *((float *)v37 + 3) = v31;
      *((float *)v37 + 4) = v33;
      v37[20] = v34;
      v37[21] = v35;
      v37[22] = v36;
      v37[23] = (char)v21;
      *((void *)v37 + 3) = _swiftEmptyDictionarySingleton;
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v15, 0, 1, v20);
      sub_100522E9C((uint64_t)v15, (uint64_t)v11, &qword_10168C8A0);
      swift_beginAccess();
      sub_100522E9C((uint64_t)v11, v45[0], &qword_10168C8A0);
      type metadata accessor for CRLImageItemCRDTData(0);
      sub_1005057FC(&qword_10168C8A8);
      CRRegister.wrappedValue.setter();
      sub_100522F00((uint64_t)v11, &qword_10168C8A0);
      swift_endAccess();
      sub_100522F00((uint64_t)v15, &qword_10168C8A0);
      swift_release();
    }
    else
    {
      uint64_t v38 = type metadata accessor for CRLMaskInfoData();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 56))(v15, 1, 1, v38);
      sub_100522E9C((uint64_t)v15, (uint64_t)v11, &qword_10168C8A0);
      swift_beginAccess();
      sub_100522E9C((uint64_t)v11, (uint64_t)v7, &qword_10168C8A0);
      type metadata accessor for CRLImageItemCRDTData(0);
      swift_retain();
      sub_1005057FC(&qword_10168C8A8);
      CRRegister.wrappedValue.setter();
      sub_100522F00((uint64_t)v11, &qword_10168C8A0);
      swift_endAccess();
      sub_100522F00((uint64_t)v15, &qword_10168C8A0);
      swift_release();
    }
    uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
    if (!Strong
      || (double v40 = Strong,
          char v41 = (*(uint64_t (**)(void))((swift_isaMask & *Strong) + 0x2F0))(),
          v40,
          (v41 & 1) == 0))
    {
      double v42 = *(void **)(v2 + OBJC_IVAR____TtC8Freeform12CRLImageItem__maskInfo);
      *(void *)(v2 + OBJC_IVAR____TtC8Freeform12CRLImageItem__maskInfo) = 0;
    }
  }
}

void *sub_100A37194(void *a1, void (*a2)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))
{
  a2(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6], a1[7], a1[8], a1[9], a1[10], a1[11], a1[12], a1[13], a1[14], a1[15], a1[16], a1[17], a1[18],
    a1[19],
    a1[20],
    a1[21],
    a1[22],
    a1[23],
    a1[24],
    a1[25],
    a1[26],
    a1[27],
    a1[28]);
  return a1;
}

uint64_t sub_100A37210(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for CRLImageItemCRDTData(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100A37254()
{
  id v0 = [self mainBundle];
  NSString v1 = String._bridgeToObjectiveC()();
  NSString v2 = String._bridgeToObjectiveC()();
  id v3 = [v0 localizedStringForKey:v1 value:v2 table:0];

  uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  return v4;
}

uint64_t sub_100A37324()
{
  if (v0[14])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v0[20])
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    if (v0[27])
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
  }
  if (v0[41])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 400, 7);
}

uint64_t sub_100A373FC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_100A37464(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_100A374CC(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_100A3752C()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100A37564(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100A37574()
{
  return swift_release();
}

uint64_t sub_100A3757C()
{
  uint64_t v1 = type metadata accessor for URL();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_100A3760C(void (*a1)(char *, void, void), uint64_t a2)
{
  uint64_t v5 = *(void *)(type metadata accessor for URL() - 8);
  uint64_t v6 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));

  return sub_1005CCA98(a1, a2, v6);
}

uint64_t sub_100A3768C()
{
  _Block_release(*(const void **)(v0 + 16));

  return _swift_deallocObject(v0, 24, 7);
}

void sub_100A376C4(uint64_t a1, char a2, uint64_t a3)
{
  sub_100A2CCC8(a1, a2, a3, *(void *)(v3 + 16));
}

void sub_100A376D4(uint64_t a1)
{
}

void sub_100A376E8()
{
  qword_10171B540 = 0x4024000000000000;
}

void sub_100A376F8()
{
  qword_10171B548 = 0;
}

void sub_100A37704()
{
  qword_10171B550 = 0x3FF0000000000000;
}

void sub_100A37714()
{
  qword_10171B558 = 0x4059000000000000;
}

void sub_100A37724(uint64_t a1)
{
}

void sub_100A37738(uint64_t a1, void **a2, void *a3)
{
  uint64_t v4 = *a2;
  uint64_t v5 = self;
  id v6 = v4;
  id v7 = [v5 functionWithName:v6];

  *a3 = v7;
}

void sub_100A377A4()
{
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {

    uint64_t v2 = OBJC_IVAR____TtC8Freeform26CRLSelectionViewController_overlayView;
    uint64_t v3 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform26CRLSelectionViewController_overlayView);
    if (v3)
    {
      id v4 = v3;
      [v4 removeFromSuperview];
      uint64_t v5 = *(void **)(v0 + v2);
      *(void *)(v0 + v2) = 0;
    }
    uint64_t v6 = OBJC_IVAR____TtC8Freeform26CRLSelectionViewController_underlayView;
    id v7 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform26CRLSelectionViewController_underlayView);
    if (v7)
    {
      id v8 = v7;
      [v8 removeFromSuperview];
      uint64_t v9 = *(void **)(v0 + v6);
      *(void *)(v0 + v6) = 0;
    }
    uint64_t v10 = OBJC_IVAR____TtC8Freeform26CRLSelectionViewController_rotatedOverlayView;
    double v11 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform26CRLSelectionViewController_rotatedOverlayView);
    if (v11)
    {
      id v12 = v11;
      [v12 removeFromSuperview];
      uint64_t v13 = *(void **)(v0 + v10);
      *(void *)(v0 + v10) = 0;
    }
    if (qword_10166EE60 != -1) {
      swift_once();
    }
    id v14 = (id)qword_10171A478;
    sub_1007FF540(v0, (uint64_t)&v61);

    double m11 = v61.m11;
    double m12 = v61.m12;
    double m13 = v61.m13;
    double m14 = v61.m14;
    id v19 = [objc_allocWithZone((Class)UIView) initWithFrame:v61.m11, v61.m12, v61.m13, v61.m14];
    id v20 = [v19 layer];
    id v21 = (void *)swift_unknownObjectWeakLoadStrong();

    if (v21)
    {
      double v22 = sub_100A37ED0();
      CGAffineTransformMakeRotation((CGAffineTransform *)&v61, v22);
      *(_OWORD *)&m.CGFloat a = *(_OWORD *)&v61.m11;
      *(_OWORD *)&m.CGFloat c = *(_OWORD *)&v61.m13;
      *(_OWORD *)&m.tCGFloat x = *(_OWORD *)&v61.m21;
      CATransform3DMakeAffineTransform(&v61, &m);
      long long v23 = *(_OWORD *)&v61.m11;
      long long v24 = *(_OWORD *)&v61.m13;
      long long v25 = *(_OWORD *)&v61.m21;
      long long v26 = *(_OWORD *)&v61.m23;
      long long v27 = *(_OWORD *)&v61.m31;
      long long v28 = *(_OWORD *)&v61.m33;
      long long v29 = *(_OWORD *)&v61.m41;
      long long v30 = *(_OWORD *)&v61.m43;
    }
    else
    {
      long long v23 = *(_OWORD *)&CATransform3DIdentity.m11;
      long long v24 = *(_OWORD *)&CATransform3DIdentity.m13;
      long long v25 = *(_OWORD *)&CATransform3DIdentity.m21;
      long long v26 = *(_OWORD *)&CATransform3DIdentity.m23;
      long long v27 = *(_OWORD *)&CATransform3DIdentity.m31;
      long long v28 = *(_OWORD *)&CATransform3DIdentity.m33;
      long long v29 = *(_OWORD *)&CATransform3DIdentity.m41;
      long long v30 = *(_OWORD *)&CATransform3DIdentity.m43;
    }
    *(_OWORD *)&v61.double m11 = v23;
    *(_OWORD *)&v61.double m13 = v24;
    *(_OWORD *)&v61.CGFloat m21 = v25;
    *(_OWORD *)&v61.CGFloat m23 = v26;
    *(_OWORD *)&v61.CGFloat m31 = v27;
    *(_OWORD *)&v61.CGFloat m33 = v28;
    *(_OWORD *)&v61.CGFloat m41 = v29;
    *(_OWORD *)&v61.CGFloat m43 = v30;
    [v20 setTransform:&v61];

    [v19 setUserInteractionEnabled:0];
    id v31 = [objc_allocWithZone((Class)UIView) initWithFrame:m11, m12, m13, m14];
    id v32 = [v31 layer];
    float v33 = (void *)swift_unknownObjectWeakLoadStrong();

    if (v33)
    {
      double v34 = sub_100A37ED0();
      CGAffineTransformMakeRotation((CGAffineTransform *)&v61, v34);
      *(_OWORD *)&m.CGFloat a = *(_OWORD *)&v61.m11;
      *(_OWORD *)&m.CGFloat c = *(_OWORD *)&v61.m13;
      *(_OWORD *)&m.tCGFloat x = *(_OWORD *)&v61.m21;
      CATransform3DMakeAffineTransform(&v61, &m);
      long long v35 = *(_OWORD *)&v61.m11;
      long long v36 = *(_OWORD *)&v61.m13;
      long long v37 = *(_OWORD *)&v61.m21;
      long long v38 = *(_OWORD *)&v61.m23;
      long long v39 = *(_OWORD *)&v61.m31;
      long long v40 = *(_OWORD *)&v61.m33;
      long long v41 = *(_OWORD *)&v61.m41;
      long long v42 = *(_OWORD *)&v61.m43;
    }
    else
    {
      long long v35 = *(_OWORD *)&CATransform3DIdentity.m11;
      long long v36 = *(_OWORD *)&CATransform3DIdentity.m13;
      long long v37 = *(_OWORD *)&CATransform3DIdentity.m21;
      long long v38 = *(_OWORD *)&CATransform3DIdentity.m23;
      long long v39 = *(_OWORD *)&CATransform3DIdentity.m31;
      long long v40 = *(_OWORD *)&CATransform3DIdentity.m33;
      long long v41 = *(_OWORD *)&CATransform3DIdentity.m41;
      long long v42 = *(_OWORD *)&CATransform3DIdentity.m43;
    }
    *(_OWORD *)&v61.double m11 = v35;
    *(_OWORD *)&v61.double m13 = v36;
    *(_OWORD *)&v61.CGFloat m21 = v37;
    *(_OWORD *)&v61.CGFloat m23 = v38;
    *(_OWORD *)&v61.CGFloat m31 = v39;
    *(_OWORD *)&v61.CGFloat m33 = v40;
    *(_OWORD *)&v61.CGFloat m41 = v41;
    *(_OWORD *)&v61.CGFloat m43 = v42;
    [v32 setTransform:&v61];

    [v31 setUserInteractionEnabled:0];
    id v43 = [objc_allocWithZone((Class)UIView) initWithFrame:m11, m12, m13, m14];
    id v44 = [v43 layer];
    double v45 = (void *)swift_unknownObjectWeakLoadStrong();

    if (v45)
    {
      double v46 = sub_100A37ED0();
      CGAffineTransformMakeRotation((CGAffineTransform *)&v61, v46);
      *(_OWORD *)&m.CGFloat a = *(_OWORD *)&v61.m11;
      *(_OWORD *)&m.CGFloat c = *(_OWORD *)&v61.m13;
      *(_OWORD *)&m.tCGFloat x = *(_OWORD *)&v61.m21;
      CATransform3DMakeAffineTransform(&v61, &m);
      long long v47 = *(_OWORD *)&v61.m11;
      long long v48 = *(_OWORD *)&v61.m13;
      long long v49 = *(_OWORD *)&v61.m21;
      long long v50 = *(_OWORD *)&v61.m23;
      long long v51 = *(_OWORD *)&v61.m31;
      long long v52 = *(_OWORD *)&v61.m33;
      long long v53 = *(_OWORD *)&v61.m41;
      long long v54 = *(_OWORD *)&v61.m43;
    }
    else
    {
      long long v47 = *(_OWORD *)&CATransform3DIdentity.m11;
      long long v48 = *(_OWORD *)&CATransform3DIdentity.m13;
      long long v49 = *(_OWORD *)&CATransform3DIdentity.m21;
      long long v50 = *(_OWORD *)&CATransform3DIdentity.m23;
      long long v51 = *(_OWORD *)&CATransform3DIdentity.m31;
      long long v52 = *(_OWORD *)&CATransform3DIdentity.m33;
      long long v53 = *(_OWORD *)&CATransform3DIdentity.m41;
      long long v54 = *(_OWORD *)&CATransform3DIdentity.m43;
    }
    *(_OWORD *)&v61.double m11 = v47;
    *(_OWORD *)&v61.double m13 = v48;
    *(_OWORD *)&v61.CGFloat m21 = v49;
    *(_OWORD *)&v61.CGFloat m23 = v50;
    *(_OWORD *)&v61.CGFloat m31 = v51;
    *(_OWORD *)&v61.CGFloat m33 = v52;
    *(_OWORD *)&v61.CGFloat m41 = v53;
    *(_OWORD *)&v61.CGFloat m43 = v54;
    [v44 setTransform:&v61];

    [v43 setUserInteractionEnabled:0];
    double v55 = *(void **)(v0 + v10);
    *(void *)(v0 + v10) = v19;
    id v56 = v19;

    double v57 = *(void **)(v0 + v2);
    *(void *)(v0 + v2) = v31;
    id v58 = v31;

    double v59 = *(void **)(v0 + v6);
    *(void *)(v0 + v6) = v43;
  }
  else
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"setupDecoratorViews()", 21, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/Editor/CRLSelectionViewController_i.swift", 101, 2, 25, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"setupDecoratorViews()", 21, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/Editor/CRLSelectionViewController_i.swift", 101, 2, 25);
  }
}

void sub_100A37C84()
{
  id v1 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v0
                                                             + OBJC_IVAR____TtC8Freeform26CRLSelectionViewController_icc), "textInputResponder"));
  if (v1)
  {
    uint64_t v2 = OBJC_IVAR____TtC8Freeform28CRLSelectionViewController_i_textSelectionInteraction;
    if (!*(void *)(v0 + OBJC_IVAR____TtC8Freeform28CRLSelectionViewController_i_textSelectionInteraction))
    {
      id v6 = v1;
      id v3 = [objc_allocWithZone((Class)UITextSelectionDisplayInteraction) initWithTextInput:v6 delegate:v6];
      id v4 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform26CRLSelectionViewController_rotatedOverlayView);
      if (v4) {
        [v4 addInteraction:v3];
      }
      [v3 setActivated:1];
      [v3 layoutManagedSubviews];
      id v5 = *(id *)(v0 + v2);
      *(void *)(v0 + v2) = v3;

      id v1 = v5;
    }
  }
  else
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"addSelectionManager()", 21, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/Editor/CRLSelectionViewController_i.swift", 101, 2, 76, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"addSelectionManager()", 21, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/Editor/CRLSelectionViewController_i.swift", 101, 2, 76);
  }
}

void sub_100A37E28()
{
  uint64_t v1 = OBJC_IVAR____TtC8Freeform28CRLSelectionViewController_i_textSelectionInteraction;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform28CRLSelectionViewController_i_textSelectionInteraction);
  if (v2)
  {
    id v3 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform26CRLSelectionViewController_rotatedOverlayView);
    if (v3)
    {
      [v3 removeInteraction:v2];
      id v4 = *(id *)(v0 + v1);
    }
    else
    {
      id v4 = v2;
    }
    id v5 = v4;
    *(void *)(v0 + v1) = 0;
  }
}

double sub_100A37ED0()
{
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  double v1 = 0.0;
  if (Strong)
  {
    uint64_t v2 = (char *)Strong;
    id v3 = (void *)swift_unknownObjectWeakLoadStrong();
    if (v3
      && (id v4 = v3,
          id v5 = [v3 layoutForInfo:*(void *)&v2[OBJC_IVAR____TtC8Freeform11CRLWPEditor_enclosingShape]], v4, v5))
    {
      self;
      id v6 = (void *)swift_dynamicCastObjCClass();
      if (v6)
      {
        [v6 transformInRoot];
        double v1 = sub_10007F7C8((double *)&v8);
      }
    }
    else
    {
    }
  }
  return v1;
}

void sub_100A37FCC()
{
  uint64_t v1 = OBJC_IVAR____TtC8Freeform26CRLSelectionViewController_rotatedOverlayView;
  if (*(void *)(v0 + OBJC_IVAR____TtC8Freeform26CRLSelectionViewController_rotatedOverlayView))
  {
    uint64_t v2 = v0;
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      id v4 = (char *)Strong;
      uint64_t v5 = swift_unknownObjectWeakLoadStrong();
      if (v5)
      {
        id v6 = (void *)v5;
        sub_10083B97C();
        if (!v7)
        {
LABEL_12:

          goto LABEL_13;
        }
        id v8 = [v7 selectedTextRange];

        if (v8)
        {
          if ([v8 isEmpty])
          {
            uint64_t v9 = OBJC_IVAR____TtC8Freeform28CRLSelectionViewController_i_textSelectionInteraction;
            uint64_t v10 = *(void **)(v2 + OBJC_IVAR____TtC8Freeform28CRLSelectionViewController_i_textSelectionInteraction);
            if (v10)
            {
              id v11 = [v10 cursorView];
              unsigned int v12 = [v11 isBlinking];

              uint64_t v13 = *(void **)(v2 + v9);
              if (v12)
              {
                if (v13)
                {
                  id v14 = [v13 cursorView];
                  [v14 resetBlinkAnimation];

                  id v8 = v14;
                }
              }
              else if (v13)
              {
                id v72 = [v13 cursorView];
                [v72 setBlinking:1];
              }
            }
            goto LABEL_15;
          }
          id v6 = v8;
          goto LABEL_12;
        }
      }
LABEL_13:
      long long v15 = *(void **)(v2 + OBJC_IVAR____TtC8Freeform28CRLSelectionViewController_i_textSelectionInteraction);
      if (!v15) {
        goto LABEL_16;
      }
      id v8 = [v15 cursorView];
      [v8 setBlinking:0];
LABEL_15:

LABEL_16:
      long long v16 = self;
      [v16 begin];
      id v73 = v16;
      [v16 setDisableActions:1];
      if (qword_10166EE60 != -1) {
        swift_once();
      }
      id v17 = (id)qword_10171A478;
      sub_1007FF540(v2, (uint64_t)&v75);

      double m13 = v75.m13;
      double m14 = v75.m14;
      id v20 = *(void **)(v2 + v1);
      if (v20)
      {
        id v21 = (void *)qword_10171A478;
        id v22 = v20;
        id v23 = v21;
        sub_1007FF540(v2, (uint64_t)&v75);

        [v22 setFrame:v75.m11, v75.m12, v75.m13, v75.m14];
        long long v24 = *(void **)(v2 + v1);
      }
      else
      {
        long long v24 = 0;
      }
      [v24 setBounds:0.0, 0.0, m13, m14];
      uint64_t v25 = OBJC_IVAR____TtC8Freeform26CRLSelectionViewController_overlayView;
      [*(id *)(v2 + OBJC_IVAR____TtC8Freeform26CRLSelectionViewController_overlayView) setBounds:0.0, 0.0, m13, m14];
      uint64_t v26 = OBJC_IVAR____TtC8Freeform26CRLSelectionViewController_underlayView;
      long long v27 = *(void **)(v2 + OBJC_IVAR____TtC8Freeform26CRLSelectionViewController_underlayView);
      if (v27)
      {
        long long v28 = (void *)qword_10171A478;
        id v29 = v27;
        id v30 = v28;
        sub_1007FF540(v2, (uint64_t)&v75);

        [v29 setFrame:v75.m11, v75.m12, v75.m13, v75.m14];
      }
      id v31 = *(void **)(v2 + v1);
      if (v31)
      {
        id v32 = [v31 layer];
        float v33 = (void *)swift_unknownObjectWeakLoadStrong();

        if (v33)
        {
          double v34 = sub_100A37ED0();
          CGAffineTransformMakeRotation((CGAffineTransform *)&v75, v34);
          *(_OWORD *)&m.CGFloat a = *(_OWORD *)&v75.m11;
          *(_OWORD *)&m.CGFloat c = *(_OWORD *)&v75.m13;
          *(_OWORD *)&m.tCGFloat x = *(_OWORD *)&v75.m21;
          CATransform3DMakeAffineTransform(&v75, &m);
          long long v35 = *(_OWORD *)&v75.m11;
          long long v36 = *(_OWORD *)&v75.m13;
          long long v37 = *(_OWORD *)&v75.m21;
          long long v38 = *(_OWORD *)&v75.m23;
          long long v39 = *(_OWORD *)&v75.m31;
          long long v40 = *(_OWORD *)&v75.m33;
          long long v41 = *(_OWORD *)&v75.m41;
          long long v42 = *(_OWORD *)&v75.m43;
        }
        else
        {
          long long v35 = *(_OWORD *)&CATransform3DIdentity.m11;
          long long v36 = *(_OWORD *)&CATransform3DIdentity.m13;
          long long v37 = *(_OWORD *)&CATransform3DIdentity.m21;
          long long v38 = *(_OWORD *)&CATransform3DIdentity.m23;
          long long v39 = *(_OWORD *)&CATransform3DIdentity.m31;
          long long v40 = *(_OWORD *)&CATransform3DIdentity.m33;
          long long v41 = *(_OWORD *)&CATransform3DIdentity.m41;
          long long v42 = *(_OWORD *)&CATransform3DIdentity.m43;
        }
        *(_OWORD *)&v75.double m11 = v35;
        *(_OWORD *)&v75.double m13 = v36;
        *(_OWORD *)&v75.CGFloat m21 = v37;
        *(_OWORD *)&v75.CGFloat m23 = v38;
        *(_OWORD *)&v75.CGFloat m31 = v39;
        *(_OWORD *)&v75.CGFloat m33 = v40;
        *(_OWORD *)&v75.CGFloat m41 = v41;
        *(_OWORD *)&v75.CGFloat m43 = v42;
        [v32 setTransform:&v75];
      }
      id v43 = *(void **)(v2 + v25);
      if (v43)
      {
        id v44 = [v43 layer];
        double v45 = (void *)swift_unknownObjectWeakLoadStrong();

        if (v45)
        {
          double v46 = sub_100A37ED0();
          CGAffineTransformMakeRotation((CGAffineTransform *)&v75, v46);
          *(_OWORD *)&m.CGFloat a = *(_OWORD *)&v75.m11;
          *(_OWORD *)&m.CGFloat c = *(_OWORD *)&v75.m13;
          *(_OWORD *)&m.tCGFloat x = *(_OWORD *)&v75.m21;
          CATransform3DMakeAffineTransform(&v75, &m);
          long long v47 = *(_OWORD *)&v75.m11;
          long long v48 = *(_OWORD *)&v75.m13;
          long long v49 = *(_OWORD *)&v75.m21;
          long long v50 = *(_OWORD *)&v75.m23;
          long long v51 = *(_OWORD *)&v75.m31;
          long long v52 = *(_OWORD *)&v75.m33;
          long long v53 = *(_OWORD *)&v75.m41;
          long long v54 = *(_OWORD *)&v75.m43;
        }
        else
        {
          long long v47 = *(_OWORD *)&CATransform3DIdentity.m11;
          long long v48 = *(_OWORD *)&CATransform3DIdentity.m13;
          long long v49 = *(_OWORD *)&CATransform3DIdentity.m21;
          long long v50 = *(_OWORD *)&CATransform3DIdentity.m23;
          long long v51 = *(_OWORD *)&CATransform3DIdentity.m31;
          long long v52 = *(_OWORD *)&CATransform3DIdentity.m33;
          long long v53 = *(_OWORD *)&CATransform3DIdentity.m41;
          long long v54 = *(_OWORD *)&CATransform3DIdentity.m43;
        }
        *(_OWORD *)&v75.double m11 = v47;
        *(_OWORD *)&v75.double m13 = v48;
        *(_OWORD *)&v75.CGFloat m21 = v49;
        *(_OWORD *)&v75.CGFloat m23 = v50;
        *(_OWORD *)&v75.CGFloat m31 = v51;
        *(_OWORD *)&v75.CGFloat m33 = v52;
        *(_OWORD *)&v75.CGFloat m41 = v53;
        *(_OWORD *)&v75.CGFloat m43 = v54;
        [v44 setTransform:&v75];
      }
      double v55 = *(void **)(v2 + v26);
      if (v55)
      {
        id v56 = [v55 layer];
        double v57 = (void *)swift_unknownObjectWeakLoadStrong();

        if (v57)
        {
          double v58 = sub_100A37ED0();
          CGAffineTransformMakeRotation((CGAffineTransform *)&v75, v58);
          *(_OWORD *)&m.CGFloat a = *(_OWORD *)&v75.m11;
          *(_OWORD *)&m.CGFloat c = *(_OWORD *)&v75.m13;
          *(_OWORD *)&m.tCGFloat x = *(_OWORD *)&v75.m21;
          CATransform3DMakeAffineTransform(&v75, &m);
          long long v59 = *(_OWORD *)&v75.m11;
          long long v60 = *(_OWORD *)&v75.m13;
          long long v61 = *(_OWORD *)&v75.m21;
          long long v62 = *(_OWORD *)&v75.m23;
          long long v63 = *(_OWORD *)&v75.m31;
          long long v64 = *(_OWORD *)&v75.m33;
          long long v65 = *(_OWORD *)&v75.m41;
          long long v66 = *(_OWORD *)&v75.m43;
        }
        else
        {
          long long v59 = *(_OWORD *)&CATransform3DIdentity.m11;
          long long v60 = *(_OWORD *)&CATransform3DIdentity.m13;
          long long v61 = *(_OWORD *)&CATransform3DIdentity.m21;
          long long v62 = *(_OWORD *)&CATransform3DIdentity.m23;
          long long v63 = *(_OWORD *)&CATransform3DIdentity.m31;
          long long v64 = *(_OWORD *)&CATransform3DIdentity.m33;
          long long v65 = *(_OWORD *)&CATransform3DIdentity.m41;
          long long v66 = *(_OWORD *)&CATransform3DIdentity.m43;
        }
        *(_OWORD *)&v75.double m11 = v59;
        *(_OWORD *)&v75.double m13 = v60;
        *(_OWORD *)&v75.CGFloat m21 = v61;
        *(_OWORD *)&v75.CGFloat m23 = v62;
        *(_OWORD *)&v75.CGFloat m31 = v63;
        *(_OWORD *)&v75.CGFloat m33 = v64;
        *(_OWORD *)&v75.CGFloat m41 = v65;
        *(_OWORD *)&v75.CGFloat m43 = v66;
        [v56 setTransform:&v75];
      }
      [v73 commit];
      uint64_t v67 = OBJC_IVAR____TtC8Freeform28CRLSelectionViewController_i_textSelectionInteraction;
      [*(id *)(v2 + OBJC_IVAR____TtC8Freeform28CRLSelectionViewController_i_textSelectionInteraction) setNeedsSelectionUpdate];
      [*(id *)(v2 + v67) layoutManagedSubviews];
      id v68 = [*(id *)&v4[OBJC_IVAR____TtC8Freeform11CRLWPEditor_editorController] selectionForEditor:v4];
      if (v68)
      {
        uint64_t v69 = v68;
        self;
        long long v70 = (void *)swift_dynamicCastObjCClass();
        if (v70)
        {
          if ([v70 type] == (id)3) {
            goto LABEL_43;
          }
          uint64_t v71 = *(void *)(*(void *)&v4[OBJC_IVAR____TtC8Freeform11CRLWPEditor_enclosingShape]
                          + OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage);
          if (!v71)
          {
            __break(1u);
            return;
          }
          if (*(void *)(v71 + OBJC_IVAR____TtC8Freeform12CRLWPStorage_markedTextRange))
          {
LABEL_43:
            sub_100A385F4();

LABEL_46:
            return;
          }
        }
      }
      sub_100A385FC();
      goto LABEL_46;
    }
  }
}

void *sub_100A385F4()
{
  return sub_100A38604(1);
}

void *sub_100A385FC()
{
  return sub_100A38604(0);
}

void *sub_100A38604(char a1)
{
  uint64_t result = *(void **)(v1 + OBJC_IVAR____TtC8Freeform28CRLSelectionViewController_i_textSelectionInteraction);
  if (result)
  {
    id v4 = [result handleViews];
    sub_1005057FC(&qword_10168C968);
    unint64_t v5 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    if (v5 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t result = (void *)_CocoaArrayWrapper.endIndex.getter();
      uint64_t v6 = (uint64_t)result;
      if (result) {
        goto LABEL_4;
      }
    }
    else
    {
      uint64_t v6 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
      uint64_t result = (void *)swift_bridgeObjectRetain();
      if (v6)
      {
LABEL_4:
        if (v6 < 1)
        {
          __break(1u);
          return result;
        }
        uint64_t v7 = 0;
        uint64_t v8 = a1 & 1;
        do
        {
          if ((v5 & 0xC000000000000001) != 0) {
            id v9 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else {
            id v9 = *(id *)(v5 + 8 * v7 + 32);
          }
          uint64_t v10 = v9;
          ++v7;
          [v9 setHidden:v8];
        }
        while (v6 != v7);
      }
    }
    return (void *)swift_bridgeObjectRelease_n();
  }
  return result;
}

void sub_100A387C0()
{
}

id sub_100A387D0()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLSelectionViewController_i();
  return [super dealloc];
}

uint64_t type metadata accessor for CRLSelectionViewController_i()
{
  return self;
}

uint64_t sub_100A38838()
{
  if (*(void *)(v0 + 24))
  {
    uint64_t v1 = *(void *)(v0 + 24);
  }
  else
  {
    uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
    type metadata accessor for CRLURLItemCommandProvider();
    uint64_t v1 = swift_allocObject();
    swift_unknownObjectWeakInit();
    *(void *)(v1 + 24) = 0;
    swift_unknownObjectWeakAssign();

    *(void *)(v0 + 24) = v1;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v1;
}

uint64_t sub_100A388D0()
{
  swift_unknownObjectWeakDestroy();
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for CRLBoardCommandProvider()
{
  return self;
}

unint64_t sub_100A38934(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    objc_super v2 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_1005057FC(&qword_10168D098);
  objc_super v2 = (void *)static _DictionaryStorage.allocate(capacity:)();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  id v4 = (uint64_t *)(a1 + 40);
  while (1)
  {
    uint64_t v5 = *v4;
    id v6 = (id)*(v4 - 1);
    unint64_t result = sub_10095609C();
    if (v8) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v9 = 8 * result;
    *(void *)(v2[6] + v9) = v6;
    *(void *)(v2[7] + v9) = v5;
    uint64_t v10 = v2[2];
    BOOL v11 = __OFADD__(v10, 1);
    uint64_t v12 = v10 + 1;
    if (v11) {
      goto LABEL_11;
    }
    v2[2] = v12;
    v4 += 2;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_100A38A40(uint64_t a1)
{
  return sub_100A38A90(a1, &qword_10168D088, &qword_10168D090, (uint64_t (*)(uint64_t))sub_10095609C);
}

unint64_t sub_100A38A68(uint64_t a1)
{
  return sub_100A38A90(a1, &qword_101689008, &qword_10168CF78, (uint64_t (*)(uint64_t))sub_10095609C);
}

unint64_t sub_100A38A90(uint64_t a1, uint64_t *a2, uint64_t *a3, uint64_t (*a4)(uint64_t))
{
  if (!*(void *)(a1 + 16))
  {
    char v8 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_1005057FC(a2);
  uint64_t v7 = static _DictionaryStorage.allocate(capacity:)();
  char v8 = (void *)v7;
  uint64_t v9 = *(void *)(a1 + 16);
  if (!v9)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v8;
  }
  uint64_t v10 = v7 + 64;
  uint64_t v11 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_100522E9C(v11, (uint64_t)&v18, a3);
    uint64_t v12 = v18;
    unint64_t result = a4(v18);
    if (v14) {
      break;
    }
    *(void *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(void *)(v8[6] + 8 * result) = v12;
    unint64_t result = (unint64_t)sub_100575CE8(&v19, (_OWORD *)(v8[7] + 32 * result));
    uint64_t v15 = v8[2];
    BOOL v16 = __OFADD__(v15, 1);
    uint64_t v17 = v15 + 1;
    if (v16) {
      goto LABEL_11;
    }
    v8[2] = v17;
    v11 += 40;
    if (!--v9)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_100A38BC0(uint64_t a1)
{
  return sub_100A39820(a1, &qword_10168D018);
}

unint64_t sub_100A38BCC(uint64_t a1)
{
  return sub_100A39820(a1, &qword_10168D010);
}

unint64_t sub_100A38BD8(uint64_t a1)
{
  uint64_t v2 = sub_1005057FC(&qword_10167AAD0);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2, v4);
  id v6 = (char *)v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(a1 + 16))
  {
    char v8 = _swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_1005057FC(&qword_101688ED8);
  uint64_t v7 = static _DictionaryStorage.allocate(capacity:)();
  char v8 = (void *)v7;
  uint64_t v9 = *(void *)(a1 + 16);
  if (!v9)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v8;
  }
  uint64_t v10 = *(int *)(v2 + 48);
  uint64_t v11 = v7 + 64;
  unint64_t v12 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v23[1] = a1;
  uint64_t v13 = a1 + v12;
  uint64_t v14 = *(void *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_100522E9C(v13, (uint64_t)v6, &qword_10167AAD0);
    unint64_t result = sub_100955FC8((uint64_t)v6);
    if (v16) {
      break;
    }
    unint64_t v17 = result;
    *(void *)(v11 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v18 = v8[6];
    uint64_t v19 = type metadata accessor for UUID();
    unint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(void *)(v19 - 8) + 32))(v18 + *(void *)(*(void *)(v19 - 8) + 72) * v17, v6, v19);
    *(_OWORD *)(v8[7] + 16 * v17) = *(_OWORD *)&v6[v10];
    uint64_t v20 = v8[2];
    BOOL v21 = __OFADD__(v20, 1);
    uint64_t v22 = v20 + 1;
    if (v21) {
      goto LABEL_11;
    }
    v8[2] = v22;
    v13 += v14;
    if (!--v9)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_100A38DCC(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = _swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_1005057FC(&qword_101689180);
  uint64_t v2 = static _DictionaryStorage.allocate(capacity:)();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_100522E9C(v6, (uint64_t)v16, &qword_10168CF88);
    unsigned __int8 v7 = v16[0];
    uint64_t v8 = v17;
    uint64_t v9 = v18;
    unint64_t result = sub_100956130(v16[0], v17, v18);
    if (v11) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v12 = v3[6] + 24 * result;
    *(unsigned char *)uint64_t v12 = v7;
    *(void *)(v12 + 8) = v8;
    *(void *)(v12 + 16) = v9;
    unint64_t result = sub_10053974C(&v19, v3[7] + 40 * result);
    uint64_t v13 = v3[2];
    BOOL v14 = __OFADD__(v13, 1);
    uint64_t v15 = v13 + 1;
    if (v14) {
      goto LABEL_11;
    }
    v3[2] = v15;
    v6 += 64;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_100A38F20(uint64_t a1)
{
  return sub_100A3B804(a1, (uint64_t *)&unk_10169A260, &qword_101688B58);
}

unint64_t sub_100A38F34(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_1005057FC(&qword_101688F28);
  uint64_t v2 = (void *)static _DictionaryStorage.allocate(capacity:)();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    uint64_t v5 = *(v4 - 2);
    uint64_t v6 = *(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    unint64_t result = sub_100955F50(v5, v6);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v10 = (uint64_t *)(v2[6] + 16 * result);
    *uint64_t v10 = v5;
    v10[1] = v6;
    *(void *)(v2[7] + 8 * result) = v7;
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v4 += 3;
    v2[2] = v13;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_100A39048(uint64_t a1)
{
  uint64_t v2 = sub_1005057FC(&qword_10168CF08);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2, v4);
  uint64_t v6 = (char *)v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(a1 + 16))
  {
    uint64_t v8 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_1005057FC(&qword_101688FF8);
  uint64_t v7 = static _DictionaryStorage.allocate(capacity:)();
  uint64_t v8 = (void *)v7;
  uint64_t v9 = *(void *)(a1 + 16);
  if (!v9)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v8;
  }
  uint64_t v10 = &v6[*(int *)(v2 + 48)];
  uint64_t v11 = v7 + 64;
  unint64_t v12 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v25[1] = a1;
  uint64_t v13 = a1 + v12;
  uint64_t v14 = *(void *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_100522E9C(v13, (uint64_t)v6, &qword_10168CF08);
    unint64_t result = sub_100955FC8((uint64_t)v6);
    if (v16) {
      break;
    }
    unint64_t v17 = result;
    *(void *)(v11 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v18 = v8[6];
    uint64_t v19 = type metadata accessor for UUID();
    unint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(void *)(v19 - 8) + 32))(v18 + *(void *)(*(void *)(v19 - 8) + 72) * v17, v6, v19);
    uint64_t v20 = v8[7] + 24 * v17;
    uint64_t v21 = *((void *)v10 + 2);
    *(_OWORD *)uint64_t v20 = *(_OWORD *)v10;
    *(void *)(v20 + 16) = v21;
    uint64_t v22 = v8[2];
    BOOL v23 = __OFADD__(v22, 1);
    uint64_t v24 = v22 + 1;
    if (v23) {
      goto LABEL_11;
    }
    v8[2] = v24;
    v13 += v14;
    if (!--v9)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_100A39250(uint64_t a1)
{
  return sub_100A3CDD8(a1, &qword_101689000, (uint64_t (*)(id))sub_10095642C);
}

unint64_t sub_100A39270(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_1005057FC(&qword_101689038);
  uint64_t v2 = (void *)static _DictionaryStorage.allocate(capacity:)();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (id *)(a1 + 48);
  while (1)
  {
    uint64_t v5 = (uint64_t)*(v4 - 2);
    uint64_t v6 = (uint64_t)*(v4 - 1);
    id v7 = *v4;
    id v8 = *v4;
    swift_bridgeObjectRetain();
    unint64_t result = sub_100955F50(v5, v6);
    if (v10) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v11 = (uint64_t *)(v2[6] + 16 * result);
    *uint64_t v11 = v5;
    v11[1] = v6;
    *(void *)(v2[7] + 8 * result) = v7;
    uint64_t v12 = v2[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v4 += 3;
    v2[2] = v14;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_100A39388(uint64_t a1)
{
  return sub_100A3CDD8(a1, &qword_1016891A8, (uint64_t (*)(id))sub_100956528);
}

unint64_t sub_100A393A8(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_1005057FC(&qword_101688F98);
  uint64_t v2 = static _DictionaryStorage.allocate(capacity:)();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_100522E9C(v6, (uint64_t)v15, &qword_10168CEF0);
    unint64_t result = sub_10095647C((uint64_t)v15);
    if (v8) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v9 = v3[6] + 40 * result;
    long long v10 = v15[0];
    long long v11 = v15[1];
    *(void *)(v9 + 32) = v16;
    *(_OWORD *)uint64_t v9 = v10;
    *(_OWORD *)(v9 + 16) = v11;
    unint64_t result = (unint64_t)sub_100575CE8(&v17, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v3[2] = v14;
    v6 += 72;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_100A394EC(uint64_t a1)
{
  uint64_t v2 = sub_1005057FC(&qword_10169A0F0);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2, v4);
  uint64_t v6 = (uint64_t *)((char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (!*(void *)(a1 + 16))
  {
    char v8 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_1005057FC(&qword_101688F40);
  uint64_t v7 = static _DictionaryStorage.allocate(capacity:)();
  char v8 = (void *)v7;
  uint64_t v9 = *(void *)(a1 + 16);
  if (!v9)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v8;
  }
  uint64_t v10 = (uint64_t)v6 + *(int *)(v2 + 48);
  uint64_t v25 = a1;
  uint64_t v26 = v10;
  uint64_t v11 = v7 + 64;
  uint64_t v12 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
  uint64_t v13 = *(void *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_100522E9C(v12, (uint64_t)v6, &qword_10169A0F0);
    uint64_t v14 = *v6;
    uint64_t v15 = v6[1];
    unint64_t result = sub_100955F50(*v6, v15);
    if (v17) {
      break;
    }
    unint64_t v18 = result;
    *(void *)(v11 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v19 = (uint64_t *)(v8[6] + 16 * result);
    *uint64_t v19 = v14;
    v19[1] = v15;
    uint64_t v20 = v8[7];
    uint64_t v21 = sub_1005057FC((uint64_t *)&unk_101674520);
    unint64_t result = sub_10051B3EC(v26, v20 + *(void *)(*(void *)(v21 - 8) + 72) * v18, (uint64_t *)&unk_101674520);
    uint64_t v22 = v8[2];
    BOOL v23 = __OFADD__(v22, 1);
    uint64_t v24 = v22 + 1;
    if (v23) {
      goto LABEL_11;
    }
    v8[2] = v24;
    v12 += v13;
    if (!--v9)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_100A396E0(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = _swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_1005057FC(&qword_101689080);
  uint64_t v2 = (void *)static _DictionaryStorage.allocate(capacity:)();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (unint64_t *)(a1 + 48);
  while (1)
  {
    unsigned __int8 v5 = *((unsigned char *)v4 - 16);
    uint64_t v6 = *(v4 - 1);
    unint64_t v7 = *v4;
    sub_100510D4C(v6, *v4);
    unint64_t result = sub_100956650(v5);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(unsigned char *)(v2[6] + result) = v5;
    uint64_t v10 = (uint64_t *)(v2[7] + 16 * result);
    *uint64_t v10 = v6;
    v10[1] = v7;
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v4 += 3;
    v2[2] = v13;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_100A397F4(uint64_t a1)
{
  return sub_100A3B6D8(a1, &qword_101688FC0, (uint64_t (*)(id))sub_10095678C);
}

unint64_t sub_100A39814(uint64_t a1)
{
  return sub_100A39820(a1, &qword_101688EC8);
}

unint64_t sub_100A39820(uint64_t a1, uint64_t *a2)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_1005057FC(a2);
  uint64_t v3 = (void *)static _DictionaryStorage.allocate(capacity:)();
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  swift_retain();
  unsigned __int8 v5 = (void **)(a1 + 48);
  while (1)
  {
    uint64_t v6 = (uint64_t)*(v5 - 2);
    uint64_t v7 = (uint64_t)*(v5 - 1);
    char v8 = *v5;
    swift_bridgeObjectRetain();
    id v9 = v8;
    unint64_t result = sub_100955F50(v6, v7);
    if (v11) {
      break;
    }
    *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    BOOL v12 = (uint64_t *)(v3[6] + 16 * result);
    *BOOL v12 = v6;
    v12[1] = v7;
    *(void *)(v3[7] + 8 * result) = v9;
    uint64_t v13 = v3[2];
    BOOL v14 = __OFADD__(v13, 1);
    uint64_t v15 = v13 + 1;
    if (v14) {
      goto LABEL_11;
    }
    v3[2] = v15;
    v5 += 3;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_100A39938(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = _swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_1005057FC(&qword_101688F88);
  uint64_t v2 = (void *)static _DictionaryStorage.allocate(capacity:)();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (id *)(a1 + 40);
  while (1)
  {
    char v5 = *(unsigned char *)v4;
    id v6 = *(v4 - 1);
    unint64_t result = sub_100956928((uint64_t)v6);
    if (v8) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(void *)(v2[6] + 8 * result) = v6;
    *(unsigned char *)(v2[7] + result) = v5;
    uint64_t v9 = v2[2];
    BOOL v10 = __OFADD__(v9, 1);
    uint64_t v11 = v9 + 1;
    if (v10) {
      goto LABEL_11;
    }
    v2[2] = v11;
    v4 += 2;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_100A39A38(uint64_t a1)
{
  return sub_100A38A90(a1, &qword_101688FB8, &qword_10168CFA8, sub_10095609C);
}

unint64_t sub_100A39A60(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_1005057FC(&qword_101685CE8);
  uint64_t v2 = static _DictionaryStorage.allocate(capacity:)();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_100522E9C(v6, (uint64_t)&v15, &qword_101685CF0);
    uint64_t v7 = v15;
    uint64_t v8 = v16;
    unint64_t result = sub_100955F50(v15, v16);
    if (v10) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v11 = (uint64_t *)(v3[6] + 16 * result);
    *uint64_t v11 = v7;
    v11[1] = v8;
    unint64_t result = (unint64_t)sub_100575CE8(&v17, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v3[2] = v14;
    v6 += 48;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_100A39B98(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = _swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_1005057FC(&qword_101689200);
  uint64_t v2 = (void *)static _DictionaryStorage.allocate(capacity:)();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (void **)(a1 + 72);
  while (1)
  {
    long long v5 = *(_OWORD *)(v4 - 3);
    long long v16 = *(_OWORD *)(v4 - 5);
    long long v17 = v5;
    uint64_t v6 = *v4;
    uint64_t v18 = (uint64_t)*(v4 - 1);
    sub_100A48200((uint64_t)&v16);
    id v7 = v6;
    unint64_t result = sub_100956B4C((uint64_t)&v16);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v10 = v2[6] + 40 * result;
    long long v11 = v16;
    long long v12 = v17;
    *(void *)(v10 + 32) = v18;
    *(_OWORD *)uint64_t v10 = v11;
    *(_OWORD *)(v10 + 16) = v12;
    *(void *)(v2[7] + 8 * result) = v7;
    uint64_t v13 = v2[2];
    BOOL v14 = __OFADD__(v13, 1);
    uint64_t v15 = v13 + 1;
    if (v14) {
      goto LABEL_11;
    }
    v2[2] = v15;
    v4 += 6;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_100A39CCC(uint64_t a1)
{
  return sub_100A3AD74(a1, &qword_10168D038, &qword_1016891E8);
}

unint64_t sub_100A39CE0(uint64_t a1)
{
  return sub_100A38A90(a1, &qword_10168D078, &qword_10168D080, sub_10095609C);
}

unint64_t sub_100A39D08(uint64_t a1)
{
  uint64_t v2 = sub_1005057FC(&qword_10168D040);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2, v4);
  uint64_t v6 = (char *)v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(a1 + 16))
  {
    uint64_t v8 = _swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_1005057FC(&qword_101688E38);
  uint64_t v7 = static _DictionaryStorage.allocate(capacity:)();
  uint64_t v8 = (void *)v7;
  uint64_t v9 = *(void *)(a1 + 16);
  if (!v9)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v8;
  }
  uint64_t v10 = *(int *)(v2 + 48);
  uint64_t v11 = v7 + 64;
  unint64_t v12 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v23[1] = a1;
  uint64_t v13 = a1 + v12;
  uint64_t v14 = *(void *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_100522E9C(v13, (uint64_t)v6, &qword_10168D040);
    unint64_t result = sub_100956A4C((uint64_t)v6);
    if (v16) {
      break;
    }
    unint64_t v17 = result;
    *(void *)(v11 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v18 = v8[6];
    uint64_t v19 = type metadata accessor for CRLBoardPreviewImageCache.Item(0);
    unint64_t result = sub_100A48198((uint64_t)v6, v18 + *(void *)(*(void *)(v19 - 8) + 72) * v17, type metadata accessor for CRLBoardPreviewImageCache.Item);
    *(void *)(v8[7] + 8 * v17) = *(void *)&v6[v10];
    uint64_t v20 = v8[2];
    BOOL v21 = __OFADD__(v20, 1);
    uint64_t v22 = v20 + 1;
    if (v21) {
      goto LABEL_11;
    }
    v8[2] = v22;
    v13 += v14;
    if (!--v9)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_100A39EF8(uint64_t a1)
{
  uint64_t v2 = sub_1005057FC(&qword_10168CF38);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2, v4);
  uint64_t v6 = (char *)v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(a1 + 16))
  {
    uint64_t v8 = _swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_1005057FC(&qword_101688E80);
  uint64_t v7 = static _DictionaryStorage.allocate(capacity:)();
  uint64_t v8 = (void *)v7;
  uint64_t v9 = *(void *)(a1 + 16);
  if (!v9)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v8;
  }
  uint64_t v10 = &v6[*(int *)(v2 + 48)];
  uint64_t v11 = v7 + 64;
  unint64_t v12 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v25[1] = a1;
  uint64_t v13 = a1 + v12;
  uint64_t v14 = *(void *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_100522E9C(v13, (uint64_t)v6, &qword_10168CF38);
    unint64_t result = sub_1009563EC((uint64_t)v6);
    if (v16) {
      break;
    }
    unint64_t v17 = result;
    *(void *)(v11 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v18 = v8[6];
    uint64_t v19 = type metadata accessor for CRLBoardIdentifier(0);
    unint64_t result = sub_100A48198((uint64_t)v6, v18 + *(void *)(*(void *)(v19 - 8) + 72) * v17, type metadata accessor for CRLBoardIdentifier);
    uint64_t v20 = (void *)(v8[7] + 16 * v17);
    uint64_t v21 = *((void *)v10 + 1);
    *uint64_t v20 = *(void *)v10;
    v20[1] = v21;
    uint64_t v22 = v8[2];
    BOOL v23 = __OFADD__(v22, 1);
    uint64_t v24 = v22 + 1;
    if (v23) {
      goto LABEL_11;
    }
    v8[2] = v24;
    v13 += v14;
    if (!--v9)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_100A3A0F0(uint64_t a1)
{
  uint64_t v2 = sub_1005057FC(&qword_10168CF30);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2, v4);
  uint64_t v6 = (char *)v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(a1 + 16))
  {
    uint64_t v8 = _swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_1005057FC(&qword_101688E78);
  uint64_t v7 = static _DictionaryStorage.allocate(capacity:)();
  uint64_t v8 = (void *)v7;
  uint64_t v9 = *(void *)(a1 + 16);
  if (!v9)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v8;
  }
  uint64_t v10 = &v6[*(int *)(v2 + 48)];
  uint64_t v11 = v7 + 64;
  unint64_t v12 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v25[1] = a1;
  uint64_t v13 = a1 + v12;
  uint64_t v14 = *(void *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_100522E9C(v13, (uint64_t)v6, &qword_10168CF30);
    unint64_t result = sub_1009563EC((uint64_t)v6);
    if (v16) {
      break;
    }
    unint64_t v17 = result;
    *(void *)(v11 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v18 = v8[6];
    uint64_t v19 = type metadata accessor for CRLBoardIdentifier(0);
    sub_100A48198((uint64_t)v6, v18 + *(void *)(*(void *)(v19 - 8) + 72) * v17, type metadata accessor for CRLBoardIdentifier);
    uint64_t v20 = v8[7];
    uint64_t v21 = type metadata accessor for Date();
    unint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(void *)(v21 - 8) + 32))(v20 + *(void *)(*(void *)(v21 - 8) + 72) * v17, v10, v21);
    uint64_t v22 = v8[2];
    BOOL v23 = __OFADD__(v22, 1);
    uint64_t v24 = v22 + 1;
    if (v23) {
      goto LABEL_11;
    }
    v8[2] = v24;
    v13 += v14;
    if (!--v9)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_100A3A320(uint64_t a1)
{
  return sub_100A3AD74(a1, &qword_10168CF28, &qword_101688E70);
}

unint64_t sub_100A3A334(uint64_t a1)
{
  return sub_100A3A3AC(a1, &qword_10168CF20, &qword_101688E68, type metadata accessor for CRLBoardViewModelMetadata.ShareMetadata, type metadata accessor for CRLBoardViewModelMetadata.ShareMetadata);
}

unint64_t sub_100A3A370(uint64_t a1)
{
  return sub_100A3A3AC(a1, &qword_10168CF18, &qword_101688E50, type metadata accessor for CRLBoardViewModelMetadata, type metadata accessor for CRLBoardViewModelMetadata);
}

unint64_t sub_100A3A3AC(uint64_t a1, uint64_t *a2, uint64_t *a3, uint64_t (*a4)(void), uint64_t (*a5)(void))
{
  id v32 = a4;
  float v33 = a5;
  uint64_t v8 = sub_1005057FC(a2);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8, v10);
  unint64_t v12 = (char *)v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(a1 + 16))
  {
    uint64_t v14 = _swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_1005057FC(a3);
  uint64_t v13 = static _DictionaryStorage.allocate(capacity:)();
  uint64_t v14 = (void *)v13;
  uint64_t v15 = *(void *)(a1 + 16);
  if (!v15)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v14;
  }
  uint64_t v16 = (uint64_t)&v12[*(int *)(v8 + 48)];
  uint64_t v17 = v13 + 64;
  unint64_t v18 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v31[1] = a1;
  uint64_t v19 = a1 + v18;
  uint64_t v20 = *(void *)(v9 + 72);
  swift_retain();
  while (1)
  {
    sub_100522E9C(v19, (uint64_t)v12, a2);
    unint64_t result = sub_1009563EC((uint64_t)v12);
    if (v22) {
      break;
    }
    unint64_t v23 = result;
    *(void *)(v17 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v24 = v14[6];
    uint64_t v25 = type metadata accessor for CRLBoardIdentifier(0);
    sub_100A48198((uint64_t)v12, v24 + *(void *)(*(void *)(v25 - 8) + 72) * v23, type metadata accessor for CRLBoardIdentifier);
    uint64_t v26 = v14[7];
    uint64_t v27 = v32(0);
    unint64_t result = sub_100A48198(v16, v26 + *(void *)(*(void *)(v27 - 8) + 72) * v23, v33);
    uint64_t v28 = v14[2];
    BOOL v29 = __OFADD__(v28, 1);
    uint64_t v30 = v28 + 1;
    if (v29) {
      goto LABEL_11;
    }
    v14[2] = v30;
    v19 += v20;
    if (!--v15)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_100A3A5C8(uint64_t a1)
{
  uint64_t v2 = sub_1005057FC(&qword_10168CF10);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2, v4);
  uint64_t v6 = (char *)v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(a1 + 16))
  {
    uint64_t v8 = _swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_1005057FC(&qword_101688E48);
  uint64_t v7 = static _DictionaryStorage.allocate(capacity:)();
  uint64_t v8 = (void *)v7;
  uint64_t v9 = *(void *)(a1 + 16);
  if (!v9)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v8;
  }
  uint64_t v10 = *(int *)(v2 + 48);
  uint64_t v11 = v7 + 64;
  unint64_t v12 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v23[1] = a1;
  uint64_t v13 = a1 + v12;
  uint64_t v14 = *(void *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_100522E9C(v13, (uint64_t)v6, &qword_10168CF10);
    unint64_t result = sub_10095697C((uint64_t)v6);
    if (v16) {
      break;
    }
    unint64_t v17 = result;
    *(void *)(v11 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v18 = v8[6];
    uint64_t v19 = type metadata accessor for CRLBoardLibraryViewModel.Folder(0);
    unint64_t result = sub_100A48198((uint64_t)v6, v18 + *(void *)(*(void *)(v19 - 8) + 72) * v17, type metadata accessor for CRLBoardLibraryViewModel.Folder);
    *(void *)(v8[7] + 8 * v17) = *(void *)&v6[v10];
    uint64_t v20 = v8[2];
    BOOL v21 = __OFADD__(v20, 1);
    uint64_t v22 = v20 + 1;
    if (v21) {
      goto LABEL_11;
    }
    v8[2] = v22;
    v13 += v14;
    if (!--v9)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_100A3A7B8(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = _swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_1005057FC(&qword_10168CF48);
  uint64_t v2 = static _DictionaryStorage.allocate(capacity:)();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_100522E9C(v6, (uint64_t)&v13, &qword_10168CF50);
    uint64_t v7 = v13;
    unint64_t result = sub_100956BF8(v13);
    if (v9) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(void *)(v3[6] + 8 * result) = v7;
    unint64_t result = (unint64_t)sub_100575CE8(&v14, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v10 = v3[2];
    BOOL v11 = __OFADD__(v10, 1);
    uint64_t v12 = v10 + 1;
    if (v11) {
      goto LABEL_11;
    }
    v3[2] = v12;
    v6 += 40;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_100A3A8E8(uint64_t a1)
{
  uint64_t v2 = sub_1005057FC(&qword_101679DF8);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2, v4);
  uint64_t v6 = (void *)((char *)v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (!*(void *)(a1 + 16))
  {
    uint64_t v8 = _swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_1005057FC(&qword_101688EE0);
  uint64_t v7 = static _DictionaryStorage.allocate(capacity:)();
  uint64_t v8 = (void *)v7;
  uint64_t v9 = *(void *)(a1 + 16);
  if (!v9)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v8;
  }
  uint64_t v10 = (char *)v6 + *(int *)(v2 + 48);
  uint64_t v11 = v7 + 64;
  unint64_t v12 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v26[1] = a1;
  uint64_t v13 = a1 + v12;
  uint64_t v14 = *(void *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_100522E9C(v13, (uint64_t)v6, &qword_101679DF8);
    uint64_t v15 = *v6;
    uint64_t v16 = v6[1];
    unint64_t result = sub_100955F50(*v6, v16);
    if (v18) {
      break;
    }
    unint64_t v19 = result;
    *(void *)(v11 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v20 = (uint64_t *)(v8[6] + 16 * result);
    *uint64_t v20 = v15;
    v20[1] = v16;
    uint64_t v21 = v8[7];
    uint64_t v22 = type metadata accessor for UUID();
    unint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(void *)(v22 - 8) + 32))(v21 + *(void *)(*(void *)(v22 - 8) + 72) * v19, v10, v22);
    uint64_t v23 = v8[2];
    BOOL v24 = __OFADD__(v23, 1);
    uint64_t v25 = v23 + 1;
    if (v24) {
      goto LABEL_11;
    }
    v8[2] = v25;
    v13 += v14;
    if (!--v9)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_100A3AAE8(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = _swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_1005057FC(&qword_1016891B8);
  uint64_t v2 = (void *)static _DictionaryStorage.allocate(capacity:)();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (void *)(a1 + 40);
  while (1)
  {
    unsigned __int8 v5 = *((unsigned char *)v4 - 8);
    uint64_t v6 = *v4;
    unint64_t result = sub_100956CFC(v5);
    if (v8) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(unsigned char *)(v2[6] + result) = v5;
    *(void *)(v2[7] + 8 * result) = v6;
    uint64_t v9 = v2[2];
    BOOL v10 = __OFADD__(v9, 1);
    uint64_t v11 = v9 + 1;
    if (v10) {
      goto LABEL_11;
    }
    v4 += 2;
    v2[2] = v11;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_100A3ABE4(uint64_t a1)
{
  return sub_100A38A90(a1, &qword_10168D068, &qword_10168D070, sub_10095609C);
}

unint64_t sub_100A3AC0C(uint64_t a1)
{
  return sub_100A3BA24(a1, &qword_10168D060);
}

unint64_t sub_100A3AC18(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = _swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_1005057FC(&qword_101689150);
  uint64_t v2 = (void *)static _DictionaryStorage.allocate(capacity:)();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 40);
  while (1)
  {
    uint64_t v5 = *v4;
    id v6 = (id)*(v4 - 1);
    swift_retain();
    unint64_t result = sub_100956E24((uint64_t)v6);
    if (v8) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v9 = 8 * result;
    *(void *)(v2[6] + v9) = v6;
    *(void *)(v2[7] + v9) = v5;
    uint64_t v10 = v2[2];
    BOOL v11 = __OFADD__(v10, 1);
    uint64_t v12 = v10 + 1;
    if (v11) {
      goto LABEL_11;
    }
    v2[2] = v12;
    v4 += 2;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_100A3AD24(uint64_t a1)
{
  return sub_100A3A3AC(a1, &qword_10168D048, &qword_101688E40, (uint64_t (*)(void))type metadata accessor for CRLBoardEntity, (uint64_t (*)(void))type metadata accessor for CRLBoardEntity);
}

unint64_t sub_100A3AD60(uint64_t a1)
{
  return sub_100A3AD74(a1, &qword_10168D050, &qword_101688E88);
}

unint64_t sub_100A3AD74(uint64_t a1, uint64_t *a2, uint64_t *a3)
{
  uint64_t v6 = sub_1005057FC(a2);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6, v8);
  uint64_t v10 = (char *)v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(a1 + 16))
  {
    uint64_t v12 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_1005057FC(a3);
  uint64_t v11 = static _DictionaryStorage.allocate(capacity:)();
  uint64_t v12 = (void *)v11;
  uint64_t v13 = *(void *)(a1 + 16);
  if (!v13)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v12;
  }
  uint64_t v14 = *(int *)(v6 + 48);
  uint64_t v15 = v11 + 64;
  unint64_t v16 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v27[1] = a1;
  uint64_t v17 = a1 + v16;
  uint64_t v18 = *(void *)(v7 + 72);
  swift_retain();
  while (1)
  {
    sub_100522E9C(v17, (uint64_t)v10, a2);
    unint64_t result = sub_1009563EC((uint64_t)v10);
    if (v20) {
      break;
    }
    unint64_t v21 = result;
    *(void *)(v15 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v22 = v12[6];
    uint64_t v23 = type metadata accessor for CRLBoardIdentifier(0);
    unint64_t result = sub_100A48198((uint64_t)v10, v22 + *(void *)(*(void *)(v23 - 8) + 72) * v21, type metadata accessor for CRLBoardIdentifier);
    *(void *)(v12[7] + 8 * v21) = *(void *)&v10[v14];
    uint64_t v24 = v12[2];
    BOOL v25 = __OFADD__(v24, 1);
    uint64_t v26 = v24 + 1;
    if (v25) {
      goto LABEL_11;
    }
    v12[2] = v26;
    v17 += v18;
    if (!--v13)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_100A3AF5C(uint64_t a1)
{
  return sub_100A3AD74(a1, &qword_10168D030, &qword_101688F10);
}

unint64_t sub_100A3AF70(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = _swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_1005057FC(&qword_10168D020);
  uint64_t v2 = (void *)static _DictionaryStorage.allocate(capacity:)();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 40);
  while (1)
  {
    uint64_t v5 = *v4;
    id v6 = (id)*(v4 - 1);
    swift_bridgeObjectRetain();
    unint64_t result = sub_10095609C(v6);
    if (v8) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v9 = 8 * result;
    *(void *)(v2[6] + v9) = v6;
    *(void *)(v2[7] + v9) = v5;
    uint64_t v10 = v2[2];
    BOOL v11 = __OFADD__(v10, 1);
    uint64_t v12 = v10 + 1;
    if (v11) {
      goto LABEL_11;
    }
    v2[2] = v12;
    v4 += 2;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_100A3B07C(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = _swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_1005057FC(&qword_101689028);
  uint64_t v2 = (void *)static _DictionaryStorage.allocate(capacity:)();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 56);
  while (1)
  {
    uint64_t v5 = *(v4 - 3);
    uint64_t v6 = *(v4 - 2);
    uint64_t v8 = *(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t result = sub_100955F50(v5, v6);
    if (v10) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    BOOL v11 = (uint64_t *)(v2[6] + 16 * result);
    *BOOL v11 = v5;
    v11[1] = v6;
    uint64_t v12 = (void *)(v2[7] + 16 * result);
    *uint64_t v12 = v8;
    v12[1] = v7;
    uint64_t v13 = v2[2];
    BOOL v14 = __OFADD__(v13, 1);
    uint64_t v15 = v13 + 1;
    if (v14) {
      goto LABEL_11;
    }
    v4 += 4;
    v2[2] = v15;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_100A3B1A0(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = _swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_1005057FC(&qword_101688EA8);
  uint64_t v2 = (void *)static _DictionaryStorage.allocate(capacity:)();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 40);
  while (1)
  {
    uint64_t v6 = *(v4 - 1);
    uint64_t v5 = *v4;
    swift_bridgeObjectRetain();
    unint64_t result = sub_100987CC0();
    if (v8) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v9 = (void *)(v2[7] + 16 * result);
    *uint64_t v9 = v6;
    v9[1] = v5;
    uint64_t v10 = v2[2];
    BOOL v11 = __OFADD__(v10, 1);
    uint64_t v12 = v10 + 1;
    if (v11) {
      goto LABEL_11;
    }
    v4 += 2;
    v2[2] = v12;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_100A3B298(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = _swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_1005057FC((uint64_t *)&unk_101693760);
  uint64_t v2 = (void *)static _DictionaryStorage.allocate(capacity:)();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    uint64_t v5 = *(v4 - 2);
    uint64_t v6 = *(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    unint64_t result = sub_100955F50(v5, v6);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v10 = (uint64_t *)(v2[6] + 16 * result);
    *uint64_t v10 = v5;
    v10[1] = v6;
    *(void *)(v2[7] + 8 * result) = v7;
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v4 += 3;
    v2[2] = v13;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_100A3B3AC(uint64_t a1)
{
  return sub_100A3C9A0(a1, &qword_10168CF58, &qword_101689030, _s6CoreREO19SceneRenderingStateC15SnapshotRequestVMa, _s6CoreREO19SceneRenderingStateC15SnapshotRequestVMa);
}

unint64_t sub_100A3B3E8(uint64_t a1)
{
  return sub_100A3CDD8(a1, &qword_1016890E8, (uint64_t (*)(id))sub_100956EE4);
}

unint64_t sub_100A3B408(uint64_t a1)
{
  return sub_100A3CDD8(a1, &qword_101689190, (uint64_t (*)(id))sub_100956EE4);
}

unint64_t sub_100A3B428(uint64_t a1)
{
  uint64_t v2 = sub_1005057FC(&qword_10168D008);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2, v4);
  uint64_t v6 = (char *)v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(a1 + 16))
  {
    char v8 = _swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_1005057FC(&qword_101689188);
  uint64_t v7 = static _DictionaryStorage.allocate(capacity:)();
  char v8 = (void *)v7;
  uint64_t v9 = *(void *)(a1 + 16);
  if (!v9)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v8;
  }
  uint64_t v10 = &v6[*(int *)(v2 + 48)];
  uint64_t v11 = v7 + 64;
  unint64_t v12 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v27[1] = a1;
  uint64_t v13 = a1 + v12;
  uint64_t v14 = *(void *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_100522E9C(v13, (uint64_t)v6, &qword_10168D008);
    unint64_t result = sub_100955FC8((uint64_t)v6);
    if (v16) {
      break;
    }
    unint64_t v17 = result;
    *(void *)(v11 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v18 = v8[6];
    uint64_t v19 = type metadata accessor for UUID();
    unint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(void *)(v19 - 8) + 32))(v18 + *(void *)(*(void *)(v19 - 8) + 72) * v17, v6, v19);
    uint64_t v20 = v8[7] + 48 * v17;
    uint64_t v21 = *((void *)v10 + 5);
    long long v22 = *(_OWORD *)(v10 + 8);
    long long v23 = *(_OWORD *)(v10 + 24);
    *(void *)uint64_t v20 = *(void *)v10;
    *(_OWORD *)(v20 + 8) = v22;
    *(_OWORD *)(v20 + 24) = v23;
    *(void *)(v20 + 40) = v21;
    uint64_t v24 = v8[2];
    BOOL v25 = __OFADD__(v24, 1);
    uint64_t v26 = v24 + 1;
    if (v25) {
      goto LABEL_11;
    }
    v8[2] = v26;
    v13 += v14;
    if (!--v9)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_100A3B640(uint64_t a1)
{
  return sub_100A3C714(a1, &qword_101682DA0, &qword_10168D0F8, (uint64_t (*)(void))sub_100956F38);
}

unint64_t sub_100A3B668(uint64_t a1)
{
  return sub_100A38A90(a1, &qword_10168CEF8, &qword_10168CF00, (uint64_t (*)(uint64_t))sub_10095609C);
}

unint64_t sub_100A3B690(uint64_t a1)
{
  return sub_100A3C21C(a1, &qword_101683F50, &qword_10168D0F0, (uint64_t (*)(void))sub_100956FC8);
}

unint64_t sub_100A3B6B8(uint64_t a1)
{
  return sub_100A3B6D8(a1, &qword_101689240, (uint64_t (*)(id))sub_1009570E8);
}

unint64_t sub_100A3B6D8(uint64_t a1, uint64_t *a2, uint64_t (*a3)(id))
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v5 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_1005057FC(a2);
  uint64_t v5 = (void *)static _DictionaryStorage.allocate(capacity:)();
  uint64_t v6 = *(void *)(a1 + 16);
  if (!v6)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v5;
  }
  swift_retain();
  uint64_t v7 = (void **)(a1 + 40);
  while (1)
  {
    char v8 = *v7;
    id v9 = *(v7 - 1);
    id v10 = v8;
    unint64_t result = a3(v9);
    if (v12) {
      break;
    }
    *(void *)((char *)v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v13 = 8 * result;
    *(void *)(v5[6] + v13) = v9;
    *(void *)(v5[7] + v13) = v10;
    uint64_t v14 = v5[2];
    BOOL v15 = __OFADD__(v14, 1);
    uint64_t v16 = v14 + 1;
    if (v15) {
      goto LABEL_11;
    }
    _OWORD v5[2] = v16;
    v7 += 2;
    if (!--v6)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_100A3B7F0(uint64_t a1)
{
  return sub_100A3B804(a1, &qword_10168D000, &qword_101689168);
}

unint64_t sub_100A3B804(uint64_t a1, uint64_t *a2, uint64_t *a3)
{
  uint64_t v6 = sub_1005057FC(a2);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6, v8);
  id v10 = (char *)v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(a1 + 16))
  {
    char v12 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_1005057FC(a3);
  uint64_t v11 = static _DictionaryStorage.allocate(capacity:)();
  char v12 = (void *)v11;
  uint64_t v13 = *(void *)(a1 + 16);
  if (!v13)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v12;
  }
  uint64_t v14 = *(int *)(v6 + 48);
  uint64_t v15 = v11 + 64;
  unint64_t v16 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v27[1] = a1;
  uint64_t v17 = a1 + v16;
  uint64_t v18 = *(void *)(v7 + 72);
  swift_retain();
  while (1)
  {
    sub_100522E9C(v17, (uint64_t)v10, a2);
    unint64_t result = sub_100955FC8((uint64_t)v10);
    if (v20) {
      break;
    }
    unint64_t v21 = result;
    *(void *)(v15 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v22 = v12[6];
    uint64_t v23 = type metadata accessor for UUID();
    unint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(void *)(v23 - 8) + 32))(v22 + *(void *)(*(void *)(v23 - 8) + 72) * v21, v10, v23);
    *(void *)(v12[7] + 8 * v21) = *(void *)&v10[v14];
    uint64_t v24 = v12[2];
    BOOL v25 = __OFADD__(v24, 1);
    uint64_t v26 = v24 + 1;
    if (v25) {
      goto LABEL_11;
    }
    v12[2] = v26;
    v17 += v18;
    if (!--v13)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_100A3B9F0(uint64_t a1)
{
  return sub_100A38A90(a1, &qword_10168CFE0, &qword_10168CFE8, sub_10095609C);
}

unint64_t sub_100A3BA18(uint64_t a1)
{
  return sub_100A3BA24(a1, &qword_101689130);
}

unint64_t sub_100A3BA24(uint64_t a1, uint64_t *a2)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = _swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_1005057FC(a2);
  uint64_t v3 = (void *)static _DictionaryStorage.allocate(capacity:)();
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  swift_retain();
  uint64_t v5 = (uint64_t *)(a1 + 48);
  while (1)
  {
    uint64_t v6 = *(v5 - 2);
    uint64_t v7 = *(v5 - 1);
    uint64_t v8 = *v5;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t result = sub_100955F50(v6, v7);
    if (v10) {
      break;
    }
    *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v11 = (uint64_t *)(v3[6] + 16 * result);
    *uint64_t v11 = v6;
    v11[1] = v7;
    *(void *)(v3[7] + 8 * result) = v8;
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v3[2] = v14;
    v5 += 3;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_100A3BB3C(uint64_t a1)
{
  uint64_t v2 = sub_1005057FC(&qword_101685D30);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2, v4);
  uint64_t v6 = (void *)((char *)v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (!*(void *)(a1 + 16))
  {
    uint64_t v8 = _swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_1005057FC(&qword_101689100);
  uint64_t v7 = static _DictionaryStorage.allocate(capacity:)();
  uint64_t v8 = (void *)v7;
  uint64_t v9 = *(void *)(a1 + 16);
  if (!v9)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v8;
  }
  uint64_t v10 = (uint64_t)v6 + *(int *)(v2 + 48);
  uint64_t v11 = v7 + 64;
  unint64_t v12 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v24[1] = a1;
  uint64_t v13 = a1 + v12;
  uint64_t v14 = *(void *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_100522E9C(v13, (uint64_t)v6, &qword_101685D30);
    uint64_t v15 = *v6;
    unint64_t result = sub_100956E24(*v6);
    if (v17) {
      break;
    }
    unint64_t v18 = result;
    *(void *)(v11 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(void *)(v8[6] + 8 * result) = v15;
    uint64_t v19 = v8[7];
    uint64_t v20 = type metadata accessor for CRLZoneSyncResultScenarios();
    unint64_t result = sub_100A48198(v10, v19 + *(void *)(*(void *)(v20 - 8) + 72) * v18, (uint64_t (*)(void))type metadata accessor for CRLZoneSyncResultScenarios);
    uint64_t v21 = v8[2];
    BOOL v22 = __OFADD__(v21, 1);
    uint64_t v23 = v21 + 1;
    if (v22) {
      goto LABEL_11;
    }
    v8[2] = v23;
    v13 += v14;
    if (!--v9)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_100A3BD30(uint64_t a1)
{
  return sub_100A38A90(a1, &qword_10168CFF0, &qword_10168CFF8, sub_10095609C);
}

unint64_t sub_100A3BD58(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = _swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_1005057FC(&qword_10168D168);
  uint64_t v2 = (void *)static _DictionaryStorage.allocate(capacity:)();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (_OWORD *)(a1 + 48);
  while (1)
  {
    uint64_t v5 = *((void *)v4 - 2);
    uint64_t v6 = *((void *)v4 - 1);
    long long v13 = *v4;
    swift_bridgeObjectRetain();
    unint64_t result = sub_100955F50(v5, v6);
    if (v8) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v9 = (uint64_t *)(v2[6] + 16 * result);
    *uint64_t v9 = v5;
    v9[1] = v6;
    *(_OWORD *)(v2[7] + 16 * result) = v13;
    uint64_t v10 = v2[2];
    BOOL v11 = __OFADD__(v10, 1);
    uint64_t v12 = v10 + 1;
    if (v11) {
      goto LABEL_11;
    }
    v2[2] = v12;
    v4 += 2;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_100A3BE78(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_1005057FC(&qword_101689010);
  uint64_t v2 = (void *)static _DictionaryStorage.allocate(capacity:)();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  uint64_t v4 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_100522E9C(v4, (uint64_t)v15, &qword_10168D100);
    unint64_t result = sub_10095647C((uint64_t)v15);
    if (v6) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v7 = v2[6] + 40 * result;
    long long v8 = v15[0];
    long long v9 = v15[1];
    *(void *)(v7 + 32) = v16;
    *(_OWORD *)uint64_t v7 = v8;
    *(_OWORD *)(v7 + 16) = v9;
    uint64_t v10 = (_OWORD *)(v2[7] + 32 * result);
    long long v11 = v18;
    *uint64_t v10 = v17;
    v10[1] = v11;
    uint64_t v12 = v2[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v2[2] = v14;
    v4 += 72;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_100A3BFAC(uint64_t a1)
{
  uint64_t v2 = sub_1005057FC(&qword_10168D160);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2, v4);
  char v6 = (char *)v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(a1 + 16))
  {
    long long v8 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_1005057FC(&qword_101689160);
  uint64_t v7 = static _DictionaryStorage.allocate(capacity:)();
  long long v8 = (void *)v7;
  uint64_t v9 = *(void *)(a1 + 16);
  if (!v9)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v8;
  }
  uint64_t v10 = &v6[*(int *)(v2 + 48)];
  uint64_t v11 = v7 + 64;
  unint64_t v12 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v28[1] = a1;
  uint64_t v13 = a1 + v12;
  uint64_t v14 = *(void *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_100522E9C(v13, (uint64_t)v6, &qword_10168D160);
    unint64_t result = sub_100955FC8((uint64_t)v6);
    if (v16) {
      break;
    }
    unint64_t v17 = result;
    *(void *)(v11 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v18 = v8[6];
    uint64_t v19 = type metadata accessor for UUID();
    unint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(void *)(v19 - 8) + 32))(v18 + *(void *)(*(void *)(v19 - 8) + 72) * v17, v6, v19);
    unint64_t v20 = v8[7] + (v17 << 6);
    uint64_t v21 = *((void *)v10 + 2);
    uint64_t v22 = *((void *)v10 + 7);
    long long v23 = *(_OWORD *)(v10 + 24);
    long long v24 = *(_OWORD *)(v10 + 40);
    *(_OWORD *)unint64_t v20 = *(_OWORD *)v10;
    *(void *)(v20 + 16) = v21;
    *(_OWORD *)(v20 + 24) = v23;
    *(_OWORD *)(v20 + 40) = v24;
    *(void *)(v20 + 56) = v22;
    uint64_t v25 = v8[2];
    BOOL v26 = __OFADD__(v25, 1);
    uint64_t v27 = v25 + 1;
    if (v26) {
      goto LABEL_11;
    }
    v8[2] = v27;
    v13 += v14;
    if (!--v9)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_100A3C1CC(uint64_t a1)
{
  return sub_100A3B804(a1, &qword_10168D158, &qword_1016890C8);
}

unint64_t sub_100A3C1E0(uint64_t a1)
{
  return sub_100A3B804(a1, &qword_10168D150, &qword_1016890C0);
}

unint64_t sub_100A3C1F4(uint64_t a1)
{
  return sub_100A3C21C(a1, &qword_101689678, &qword_10168D0E8, (uint64_t (*)(void))sub_100957254);
}

unint64_t sub_100A3C21C(uint64_t a1, uint64_t *a2, uint64_t *a3, uint64_t (*a4)(void))
{
  uint64_t v30 = a4;
  uint64_t v7 = sub_1005057FC(a2);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7, v9);
  uint64_t v11 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(a1 + 16))
  {
    uint64_t v13 = _swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_1005057FC(a3);
  uint64_t v12 = static _DictionaryStorage.allocate(capacity:)();
  uint64_t v13 = (void *)v12;
  uint64_t v14 = *(void *)(a1 + 16);
  if (!v14)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v13;
  }
  uint64_t v15 = &v11[*(int *)(v7 + 48)];
  uint64_t v16 = v12 + 64;
  unint64_t v17 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v29 = a1;
  uint64_t v18 = a1 + v17;
  uint64_t v19 = *(void *)(v8 + 72);
  swift_retain();
  while (1)
  {
    sub_100522E9C(v18, (uint64_t)v11, a2);
    char v20 = *v11;
    unint64_t result = v30(*v11);
    if (v22) {
      break;
    }
    unint64_t v23 = result;
    *(void *)(v16 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(unsigned char *)(v13[6] + result) = v20;
    uint64_t v24 = v13[7];
    uint64_t v25 = type metadata accessor for DisplayRepresentation();
    unint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(void *)(v25 - 8) + 32))(v24 + *(void *)(*(void *)(v25 - 8) + 72) * v23, v15, v25);
    uint64_t v26 = v13[2];
    BOOL v27 = __OFADD__(v26, 1);
    uint64_t v28 = v26 + 1;
    if (v27) {
      goto LABEL_11;
    }
    void v13[2] = v28;
    v18 += v19;
    if (!--v14)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_100A3C418(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = _swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_1005057FC(&qword_10168CFB0);
  uint64_t v2 = (void *)static _DictionaryStorage.allocate(capacity:)();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 40);
  while (1)
  {
    uint64_t v5 = *v4;
    id v6 = (id)*(v4 - 1);
    unint64_t result = sub_100956BF8((uint64_t)v6);
    if (v8) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v9 = 8 * result;
    *(void *)(v2[6] + v9) = v6;
    *(void *)(v2[7] + v9) = v5;
    uint64_t v10 = v2[2];
    BOOL v11 = __OFADD__(v10, 1);
    uint64_t v12 = v10 + 1;
    if (v11) {
      goto LABEL_11;
    }
    v2[2] = v12;
    v4 += 2;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_100A3C524(uint64_t a1)
{
  return sub_100A3C21C(a1, &qword_10168C770, &qword_10168D0E0, (uint64_t (*)(void))sub_10095731C);
}

unint64_t sub_100A3C54C(uint64_t a1)
{
  return sub_100A38A90(a1, &qword_10168CFC0, &qword_10168CFC8, sub_10095609C);
}

unint64_t sub_100A3C574(uint64_t a1)
{
  return sub_100A3C21C(a1, &qword_10168D0D0, &qword_10168D0D8, (uint64_t (*)(void))sub_1009574D0);
}

unint64_t sub_100A3C59C(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = _swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_1005057FC(&qword_101688FB0);
  uint64_t v2 = (void *)static _DictionaryStorage.allocate(capacity:)();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (void *)(a1 + 64);
  while (1)
  {
    uint64_t v5 = (void *)*(v4 - 4);
    id v6 = (void *)*(v4 - 3);
    uint64_t v7 = *(v4 - 2);
    unsigned __int8 v8 = *((unsigned char *)v4 - 8);
    uint64_t v9 = *v4;
    sub_10053BB6C(v5, v6, v7, v8);
    swift_bridgeObjectRetain();
    unint64_t result = sub_100957584((unint64_t)v5, (unint64_t)v6, v7, v8);
    if (v11) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v12 = v2[6] + 32 * result;
    *(void *)uint64_t v12 = v5;
    *(void *)(v12 + 8) = v6;
    *(void *)(v12 + 16) = v7;
    *(unsigned char *)(v12 + 24) = v8;
    *(void *)(v2[7] + 8 * result) = v9;
    uint64_t v13 = v2[2];
    BOOL v14 = __OFADD__(v13, 1);
    uint64_t v15 = v13 + 1;
    if (v14) {
      goto LABEL_11;
    }
    v2[2] = v15;
    v4 += 5;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_100A3C6EC(uint64_t a1)
{
  return sub_100A3C714(a1, &qword_10168D0C0, &qword_10168D0C8, (uint64_t (*)(void))sub_10095761C);
}

unint64_t sub_100A3C714(uint64_t a1, uint64_t *a2, uint64_t *a3, uint64_t (*a4)(void))
{
  uint64_t v30 = a4;
  uint64_t v7 = sub_1005057FC(a2);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7, v9);
  char v11 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(a1 + 16))
  {
    uint64_t v13 = _swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_1005057FC(a3);
  uint64_t v12 = static _DictionaryStorage.allocate(capacity:)();
  uint64_t v13 = (void *)v12;
  uint64_t v14 = *(void *)(a1 + 16);
  if (!v14)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v13;
  }
  uint64_t v15 = &v11[*(int *)(v7 + 48)];
  uint64_t v16 = v12 + 64;
  unint64_t v17 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v29 = a1;
  uint64_t v18 = a1 + v17;
  uint64_t v19 = *(void *)(v8 + 72);
  swift_retain();
  while (1)
  {
    sub_100522E9C(v18, (uint64_t)v11, a2);
    char v20 = *v11;
    unint64_t result = v30(*v11);
    if (v22) {
      break;
    }
    unint64_t v23 = result;
    *(void *)(v16 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(unsigned char *)(v13[6] + result) = v20;
    uint64_t v24 = v13[7];
    uint64_t v25 = type metadata accessor for DisplayRepresentation();
    unint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(void *)(v25 - 8) + 32))(v24 + *(void *)(*(void *)(v25 - 8) + 72) * v23, v15, v25);
    uint64_t v26 = v13[2];
    BOOL v27 = __OFADD__(v26, 1);
    uint64_t v28 = v26 + 1;
    if (v27) {
      goto LABEL_11;
    }
    void v13[2] = v28;
    v18 += v19;
    if (!--v14)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_100A3C910(uint64_t a1)
{
  return sub_100A3AD74(a1, &qword_10168CF68, &qword_10168CF70);
}

unint64_t sub_100A3C924(uint64_t a1)
{
  return sub_100A3CDD8(a1, &qword_101688FC8, (uint64_t (*)(id))sub_100957780);
}

unint64_t sub_100A3C944(uint64_t a1)
{
  return sub_100A3CDD8(a1, &qword_101688F90, (uint64_t (*)(id))sub_1009577D4);
}

unint64_t sub_100A3C964(uint64_t a1)
{
  return sub_100A3C9A0(a1, &qword_10168CF80, &qword_101688F78, type metadata accessor for CRLBoardItemPeerSyncUpdate, type metadata accessor for CRLBoardItemPeerSyncUpdate);
}

unint64_t sub_100A3C9A0(uint64_t a1, uint64_t *a2, uint64_t *a3, uint64_t (*a4)(void), uint64_t (*a5)(void))
{
  id v32 = a4;
  float v33 = a5;
  uint64_t v8 = sub_1005057FC(a2);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8, v10);
  uint64_t v12 = (char *)v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(a1 + 16))
  {
    uint64_t v14 = _swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_1005057FC(a3);
  uint64_t v13 = static _DictionaryStorage.allocate(capacity:)();
  uint64_t v14 = (void *)v13;
  uint64_t v15 = *(void *)(a1 + 16);
  if (!v15)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v14;
  }
  uint64_t v16 = (uint64_t)&v12[*(int *)(v8 + 48)];
  uint64_t v17 = v13 + 64;
  unint64_t v18 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v31[1] = a1;
  uint64_t v19 = a1 + v18;
  uint64_t v20 = *(void *)(v9 + 72);
  swift_retain();
  while (1)
  {
    sub_100522E9C(v19, (uint64_t)v12, a2);
    unint64_t result = sub_100955FC8((uint64_t)v12);
    if (v22) {
      break;
    }
    unint64_t v23 = result;
    *(void *)(v17 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v24 = v14[6];
    uint64_t v25 = type metadata accessor for UUID();
    (*(void (**)(unint64_t, char *, uint64_t))(*(void *)(v25 - 8) + 32))(v24 + *(void *)(*(void *)(v25 - 8) + 72) * v23, v12, v25);
    uint64_t v26 = v14[7];
    uint64_t v27 = v32(0);
    unint64_t result = sub_100A48198(v16, v26 + *(void *)(*(void *)(v27 - 8) + 72) * v23, v33);
    uint64_t v28 = v14[2];
    BOOL v29 = __OFADD__(v28, 1);
    uint64_t v30 = v28 + 1;
    if (v29) {
      goto LABEL_11;
    }
    v14[2] = v30;
    v19 += v20;
    if (!--v15)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_100A3CBC0(uint64_t a1)
{
  uint64_t v2 = sub_1005057FC(&qword_10168CFA0);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2, v4);
  id v6 = (char *)v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(a1 + 16))
  {
    uint64_t v8 = _swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_1005057FC(&qword_101688FA8);
  uint64_t v7 = static _DictionaryStorage.allocate(capacity:)();
  uint64_t v8 = (void *)v7;
  uint64_t v9 = *(void *)(a1 + 16);
  if (!v9)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v8;
  }
  uint64_t v10 = &v6[*(int *)(v2 + 48)];
  uint64_t v11 = v7 + 64;
  unint64_t v12 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v25[1] = a1;
  uint64_t v13 = a1 + v12;
  uint64_t v14 = *(void *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_100522E9C(v13, (uint64_t)v6, &qword_10168CFA0);
    unint64_t result = sub_1009563EC((uint64_t)v6);
    if (v16) {
      break;
    }
    unint64_t v17 = result;
    *(void *)(v11 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v18 = v8[6];
    uint64_t v19 = type metadata accessor for CRLBoardIdentifier(0);
    unint64_t result = sub_100A48198((uint64_t)v6, v18 + *(void *)(*(void *)(v19 - 8) + 72) * v17, type metadata accessor for CRLBoardIdentifier);
    uint64_t v20 = (void *)(v8[7] + 16 * v17);
    uint64_t v21 = *((void *)v10 + 1);
    *uint64_t v20 = *(void *)v10;
    v20[1] = v21;
    uint64_t v22 = v8[2];
    BOOL v23 = __OFADD__(v22, 1);
    uint64_t v24 = v22 + 1;
    if (v23) {
      goto LABEL_11;
    }
    v8[2] = v24;
    v13 += v14;
    if (!--v9)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_100A3CDB8(uint64_t a1)
{
  return sub_100A3CDD8(a1, &qword_101688B60, (uint64_t (*)(id))sub_100957828);
}

unint64_t sub_100A3CDD8(uint64_t a1, uint64_t *a2, uint64_t (*a3)(id))
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v5 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_1005057FC(a2);
  uint64_t v5 = (void *)static _DictionaryStorage.allocate(capacity:)();
  uint64_t v6 = *(void *)(a1 + 16);
  if (!v6)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v5;
  }
  swift_retain();
  uint64_t v7 = (uint64_t *)(a1 + 40);
  while (1)
  {
    uint64_t v8 = *v7;
    id v9 = (id)*(v7 - 1);
    swift_bridgeObjectRetain();
    unint64_t result = a3(v9);
    if (v11) {
      break;
    }
    *(void *)((char *)v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v12 = 8 * result;
    *(void *)(v5[6] + v12) = v9;
    *(void *)(v5[7] + v12) = v8;
    uint64_t v13 = v5[2];
    BOOL v14 = __OFADD__(v13, 1);
    uint64_t v15 = v13 + 1;
    if (v14) {
      goto LABEL_11;
    }
    _OWORD v5[2] = v15;
    v7 += 2;
    if (!--v6)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_100A3CEF0(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = _swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_1005057FC(&qword_101688F20);
  uint64_t v2 = (void *)static _DictionaryStorage.allocate(capacity:)();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  uint64_t v4 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_100522E9C(v4, (uint64_t)v15, &qword_10168CF60);
    unint64_t result = sub_10095647C((uint64_t)v15);
    if (v6) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v7 = v2[6] + 40 * result;
    long long v8 = v15[0];
    long long v9 = v15[1];
    *(void *)(v7 + 32) = v16;
    *(_OWORD *)uint64_t v7 = v8;
    *(_OWORD *)(v7 + 16) = v9;
    uint64_t v10 = v2[7] + 24 * result;
    uint64_t v11 = v18;
    *(_OWORD *)uint64_t v10 = v17;
    *(void *)(v10 + 16) = v11;
    uint64_t v12 = v2[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v2[2] = v14;
    v4 += 64;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_100A3D034(uint64_t a1)
{
  return sub_100A3C21C(a1, &qword_10168D0A0, &qword_10168D0A8, (uint64_t (*)(void))sub_1009578F4);
}

Swift::Int _s8Freeform21CRLUIPropertyNotifierC14PropertyFilterV23__derived_struct_equalsySbAE_AEtFZ_0(Swift::Int result, uint64_t a2)
{
  if (result == a2) {
    return 1;
  }
  Swift::Int v3 = result;
  if (*(void *)(result + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v4 = 0;
  Swift::Int v5 = result + 56;
  uint64_t v6 = 1 << *(unsigned char *)(result + 32);
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(result + 56);
  int64_t v9 = (unint64_t)(v6 + 63) >> 6;
  uint64_t v10 = a2 + 56;
  do
  {
LABEL_7:
    if (v8)
    {
      unint64_t v11 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v12 = v11 | (v4 << 6);
      goto LABEL_23;
    }
    int64_t v13 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
LABEL_33:
      __break(1u);
      return result;
    }
    if (v13 >= v9) {
      return 1;
    }
    unint64_t v14 = *(void *)(v5 + 8 * v13);
    ++v4;
    if (v14) {
      goto LABEL_22;
    }
    int64_t v4 = v13 + 1;
    if (v13 + 1 >= v9) {
      return 1;
    }
    unint64_t v14 = *(void *)(v5 + 8 * v4);
    if (v14) {
      goto LABEL_22;
    }
    int64_t v4 = v13 + 2;
    if (v13 + 2 >= v9) {
      return 1;
    }
    unint64_t v14 = *(void *)(v5 + 8 * v4);
    if (v14) {
      goto LABEL_22;
    }
    int64_t v15 = v13 + 3;
    if (v15 >= v9) {
      return 1;
    }
    unint64_t v14 = *(void *)(v5 + 8 * v15);
    if (!v14)
    {
      while (1)
      {
        int64_t v4 = v15 + 1;
        if (__OFADD__(v15, 1)) {
          goto LABEL_33;
        }
        if (v4 >= v9) {
          return 1;
        }
        unint64_t v14 = *(void *)(v5 + 8 * v4);
        ++v15;
        if (v14) {
          goto LABEL_22;
        }
      }
    }
    int64_t v4 = v15;
LABEL_22:
    unint64_t v8 = (v14 - 1) & v14;
    unint64_t v12 = __clz(__rbit64(v14)) + (v4 << 6);
LABEL_23:
    Swift::UInt v16 = *(void *)(*(void *)(v3 + 48) + 8 * v12);
    Hasher.init(_seed:)();
    Hasher._combine(_:)(v16);
    unint64_t result = Hasher._finalize()();
    uint64_t v17 = -1 << *(unsigned char *)(a2 + 32);
    unint64_t v18 = result & ~v17;
    if (((*(void *)(v10 + ((v18 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v18) & 1) == 0) {
      return 0;
    }
    uint64_t v19 = *(void *)(a2 + 48);
  }
  while (*(void *)(v19 + 8 * v18) == v16);
  uint64_t v20 = ~v17;
  while (1)
  {
    unint64_t v18 = (v18 + 1) & v20;
    if (((*(void *)(v10 + ((v18 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v18) & 1) == 0) {
      return 0;
    }
    if (*(void *)(v19 + 8 * v18) == v16) {
      goto LABEL_7;
    }
  }
}

Swift::Int _s8Freeform21CRLUIPropertyNotifierC10KindFilterV23__derived_struct_equalsySbAE_AEtFZ_0(Swift::Int result, uint64_t a2)
{
  if (result == a2) {
    return 1;
  }
  Swift::Int v3 = result;
  if (*(void *)(result + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v4 = 0;
  Swift::Int v5 = result + 56;
  uint64_t v6 = 1 << *(unsigned char *)(result + 32);
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(result + 56);
  int64_t v9 = (unint64_t)(v6 + 63) >> 6;
  uint64_t v10 = a2 + 56;
  do
  {
LABEL_7:
    if (v8)
    {
      unint64_t v11 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v12 = v11 | (v4 << 6);
      goto LABEL_23;
    }
    int64_t v13 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
LABEL_33:
      __break(1u);
      return result;
    }
    if (v13 >= v9) {
      return 1;
    }
    unint64_t v14 = *(void *)(v5 + 8 * v13);
    ++v4;
    if (v14) {
      goto LABEL_22;
    }
    int64_t v4 = v13 + 1;
    if (v13 + 1 >= v9) {
      return 1;
    }
    unint64_t v14 = *(void *)(v5 + 8 * v4);
    if (v14) {
      goto LABEL_22;
    }
    int64_t v4 = v13 + 2;
    if (v13 + 2 >= v9) {
      return 1;
    }
    unint64_t v14 = *(void *)(v5 + 8 * v4);
    if (v14) {
      goto LABEL_22;
    }
    int64_t v15 = v13 + 3;
    if (v15 >= v9) {
      return 1;
    }
    unint64_t v14 = *(void *)(v5 + 8 * v15);
    if (!v14)
    {
      while (1)
      {
        int64_t v4 = v15 + 1;
        if (__OFADD__(v15, 1)) {
          goto LABEL_33;
        }
        if (v4 >= v9) {
          return 1;
        }
        unint64_t v14 = *(void *)(v5 + 8 * v4);
        ++v15;
        if (v14) {
          goto LABEL_22;
        }
      }
    }
    int64_t v4 = v15;
LABEL_22:
    unint64_t v8 = (v14 - 1) & v14;
    unint64_t v12 = __clz(__rbit64(v14)) + (v4 << 6);
LABEL_23:
    Swift::UInt32 v16 = *(_DWORD *)(*(void *)(v3 + 48) + 4 * v12);
    Hasher.init(_seed:)();
    Hasher._combine(_:)(v16);
    unint64_t result = Hasher._finalize()();
    uint64_t v17 = -1 << *(unsigned char *)(a2 + 32);
    unint64_t v18 = result & ~v17;
    if (((*(void *)(v10 + ((v18 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v18) & 1) == 0) {
      return 0;
    }
    uint64_t v19 = *(void *)(a2 + 48);
  }
  while (*(_DWORD *)(v19 + 4 * v18) == v16);
  uint64_t v20 = ~v17;
  while (1)
  {
    unint64_t v18 = (v18 + 1) & v20;
    if (((*(void *)(v10 + ((v18 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v18) & 1) == 0) {
      return 0;
    }
    if (*(_DWORD *)(v19 + 4 * v18) == v16) {
      goto LABEL_7;
    }
  }
}

uint64_t sub_100A3D424(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = a2 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0)
  {
    if (a1 < 0) {
      uint64_t v5 = a1;
    }
    else {
      uint64_t v5 = a1 & 0xFFFFFFFFFFFFFF8;
    }
    if (v4)
    {
      if (a2 < 0) {
        uint64_t v6 = a2;
      }
      else {
        uint64_t v6 = a2 & 0xFFFFFFFFFFFFFF8;
      }
      return __CocoaSet.isEqual(to:)(v6, v5);
    }
    sub_100A43C50(v5, a2);
    return v8 & 1;
  }
  if (v4)
  {
    if (a2 < 0) {
      uint64_t v7 = a2;
    }
    else {
      uint64_t v7 = a2 & 0xFFFFFFFFFFFFFF8;
    }
    sub_100A43C50(v7, a1);
    return v8 & 1;
  }
  if (a1 == a2)
  {
LABEL_47:
    char v8 = 1;
    return v8 & 1;
  }
  if (*(void *)(a1 + 16) != *(void *)(a2 + 16))
  {
LABEL_49:
    char v8 = 0;
    return v8 & 1;
  }
  uint64_t v30 = a1 + 56;
  uint64_t v9 = 1 << *(unsigned char *)(a1 + 32);
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  else {
    uint64_t v10 = -1;
  }
  unint64_t v11 = v10 & *(void *)(a1 + 56);
  uint64_t v6 = type metadata accessor for CRLBoardItem(0);
  int64_t v12 = 0;
  int64_t v31 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v13 = a2 + 56;
  while (1)
  {
    if (v11)
    {
      unint64_t v14 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v15 = v14 | (v12 << 6);
      goto LABEL_41;
    }
    int64_t v16 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_52;
    }
    if (v16 >= v31) {
      goto LABEL_47;
    }
    unint64_t v17 = *(void *)(v30 + 8 * v16);
    ++v12;
    if (!v17)
    {
      int64_t v12 = v16 + 1;
      if (v16 + 1 >= v31) {
        goto LABEL_47;
      }
      unint64_t v17 = *(void *)(v30 + 8 * v12);
      if (!v17)
      {
        int64_t v12 = v16 + 2;
        if (v16 + 2 >= v31) {
          goto LABEL_47;
        }
        unint64_t v17 = *(void *)(v30 + 8 * v12);
        if (!v17) {
          break;
        }
      }
    }
LABEL_40:
    unint64_t v11 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v12 << 6);
LABEL_41:
    Swift::Int v19 = *(void *)(a2 + 40);
    id v20 = *(id *)(*(void *)(a1 + 48) + 8 * v15);
    Swift::Int v21 = NSObject._rawHashValue(seed:)(v19);
    uint64_t v22 = -1 << *(unsigned char *)(a2 + 32);
    unint64_t v23 = v21 & ~v22;
    if (((*(void *)(v13 + ((v23 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v23) & 1) == 0) {
      goto LABEL_48;
    }
    int64_t v32 = v12;
    id v24 = *(id *)(*(void *)(a2 + 48) + 8 * v23);
    char v25 = static NSObject.== infix(_:_:)();

    if ((v25 & 1) == 0)
    {
      uint64_t v26 = ~v22;
      while (1)
      {
        unint64_t v23 = (v23 + 1) & v26;
        if (((*(void *)(v13 + ((v23 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v23) & 1) == 0) {
          break;
        }
        id v27 = *(id *)(*(void *)(a2 + 48) + 8 * v23);
        char v28 = static NSObject.== infix(_:_:)();

        if (v28) {
          goto LABEL_24;
        }
      }
LABEL_48:

      goto LABEL_49;
    }
LABEL_24:

    int64_t v12 = v32;
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v31) {
    goto LABEL_47;
  }
  unint64_t v17 = *(void *)(v30 + 8 * v18);
  if (v17)
  {
    int64_t v12 = v18;
    goto LABEL_40;
  }
  while (1)
  {
    int64_t v12 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v12 >= v31) {
      goto LABEL_47;
    }
    unint64_t v17 = *(void *)(v30 + 8 * v12);
    ++v18;
    if (v17) {
      goto LABEL_40;
    }
  }
LABEL_52:
  __break(1u);
  return __CocoaSet.isEqual(to:)(v6, v5);
}

void sub_100A3D710(uint64_t a1, uint64_t a2)
{
  uint64_t v102 = (int *)_s17CategoryViewModelVMa();
  __chkstk_darwin(v102, v4);
  uint64_t v103 = (uint64_t)&v86 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6, v7);
  uint64_t v9 = (char *)&v86 - v8;
  __chkstk_darwin(v10, v11);
  uint64_t v13 = (char *)&v86 - v12;
  __chkstk_darwin(v14, v15);
  __chkstk_darwin(v16, v17);
  __chkstk_darwin(v18, v19);
  Swift::Int v21 = (char *)&v86 - v20;
  __chkstk_darwin(v22, v23);
  __chkstk_darwin((char *)&v86 - v24, v25);
  __chkstk_darwin(v27, (char *)&v86 - v26);
  BOOL v29 = (char *)&v86 - v28;
  __chkstk_darwin(v30, v31);
  float v33 = (char *)&v86 - v32;
  __chkstk_darwin(v34, v35);
  long long v42 = (char *)&v86 - v41;
  uint64_t v101 = a2;
  if (a1 != a2 && *(void *)(a1 + 16) == *(void *)(v101 + 16))
  {
    int64_t v43 = 0;
    uint64_t v44 = a1 + 56;
    uint64_t v45 = 1 << *(unsigned char *)(a1 + 32);
    if (v45 < 64) {
      uint64_t v46 = ~(-1 << v45);
    }
    else {
      uint64_t v46 = -1;
    }
    unint64_t v47 = v46 & *(void *)(a1 + 56);
    int64_t v48 = (unint64_t)(v45 + 63) >> 6;
    uint64_t v99 = v101 + 56;
    uint64_t v100 = v40;
    uint64_t v96 = v39;
    uint64_t v97 = v37;
    long long v93 = v21;
    uint64_t v94 = v36;
    uint64_t v90 = a1;
    uint64_t v89 = v38;
    uint64_t v88 = v42;
    uint64_t v87 = a1 + 56;
    int64_t v86 = v48;
    if (v47) {
      goto LABEL_7;
    }
LABEL_8:
    int64_t v50 = v43 + 1;
    if (__OFADD__(v43, 1))
    {
      __break(1u);
    }
    else
    {
      if (v50 >= v48) {
        return;
      }
      unint64_t v51 = *(void *)(v44 + 8 * v50);
      int64_t v52 = v43 + 1;
      if (v51) {
        goto LABEL_21;
      }
      int64_t v52 = v43 + 2;
      if (v43 + 2 >= v48) {
        return;
      }
      unint64_t v51 = *(void *)(v44 + 8 * v52);
      if (v51) {
        goto LABEL_21;
      }
      int64_t v52 = v43 + 3;
      if (v43 + 3 >= v48) {
        return;
      }
      unint64_t v51 = *(void *)(v44 + 8 * v52);
      if (v51) {
        goto LABEL_21;
      }
      uint64_t v53 = v43 + 4;
      if (v43 + 4 >= v48) {
        return;
      }
      unint64_t v51 = *(void *)(v44 + 8 * v53);
      if (v51)
      {
        int64_t v52 = v43 + 4;
LABEL_21:
        uint64_t v91 = (v51 - 1) & v51;
        int64_t v92 = v52;
        for (unint64_t i = __clz(__rbit64(v51)) + (v52 << 6); ; unint64_t i = __clz(__rbit64(v47)) | (v43 << 6))
        {
          uint64_t v54 = *(void *)(a1 + 48);
          uint64_t v98 = *(void *)(v38 + 72);
          sub_100A48294(v54 + v98 * i, (uint64_t)v42, (uint64_t (*)(void))_s17CategoryViewModelVMa);
          sub_100A48198((uint64_t)v42, (uint64_t)v33, (uint64_t (*)(void))_s17CategoryViewModelVMa);
          Hasher.init(_seed:)();
          type metadata accessor for UUID();
          sub_100A47064((unint64_t *)&qword_1016770E0, (void (*)(uint64_t))&type metadata accessor for UUID);
          dispatch thunk of Hashable.hash(into:)();
          double v55 = v102;
          swift_bridgeObjectRetain();
          String.hash(into:)();
          swift_bridgeObjectRelease();
          if (*(void *)&v33[v55[6] + 8])
          {
            Hasher._combine(_:)(1u);
            swift_bridgeObjectRetain();
            String.hash(into:)();
            swift_bridgeObjectRelease();
          }
          else
          {
            Hasher._combine(_:)(0);
          }
          uint64_t v56 = v94;
          double v57 = v102;
          swift_bridgeObjectRetain();
          String.hash(into:)();
          swift_bridgeObjectRelease();
          Hasher._combine(_:)(*(void *)&v33[v57[8]]);
          Swift::Int v58 = Hasher._finalize()();
          uint64_t v59 = -1 << *(unsigned char *)(v101 + 32);
          unint64_t v60 = v58 & ~v59;
          if (((*(void *)(v99 + ((v60 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v60) & 1) == 0)
          {
LABEL_60:
            sub_100A48050((uint64_t)v33, (uint64_t (*)(void))_s17CategoryViewModelVMa);
            return;
          }
          uint64_t v95 = ~v59;
          while (1)
          {
            sub_100A48294(*(void *)(v101 + 48) + v60 * v98, (uint64_t)v29, (uint64_t (*)(void))_s17CategoryViewModelVMa);
            char v63 = static UUID.== infix(_:_:)();
            uint64_t v64 = v97;
            sub_100A48294((uint64_t)v29, v97, (uint64_t (*)(void))_s17CategoryViewModelVMa);
            sub_100A48294((uint64_t)v33, v56, (uint64_t (*)(void))_s17CategoryViewModelVMa);
            if ((v63 & 1) == 0)
            {
              sub_100A48050(v64, (uint64_t (*)(void))_s17CategoryViewModelVMa);
              sub_100A48050(v56, (uint64_t (*)(void))_s17CategoryViewModelVMa);
              sub_100A48294((uint64_t)v29, (uint64_t)v21, (uint64_t (*)(void))_s17CategoryViewModelVMa);
              uint64_t v61 = v100;
              sub_100A48294((uint64_t)v33, v100, (uint64_t (*)(void))_s17CategoryViewModelVMa);
LABEL_28:
              sub_100A48050(v61, (uint64_t (*)(void))_s17CategoryViewModelVMa);
              sub_100A48050((uint64_t)v21, (uint64_t (*)(void))_s17CategoryViewModelVMa);
              goto LABEL_29;
            }
            uint64_t v65 = v102[5];
            uint64_t v66 = *(void *)(v64 + v65);
            uint64_t v67 = *(void *)(v64 + v65 + 8);
            id v68 = (void *)(v56 + v65);
            BOOL v69 = v66 == *v68 && v67 == v68[1];
            if (v69)
            {
              sub_100A48050(v64, (uint64_t (*)(void))_s17CategoryViewModelVMa);
              sub_100A48050(v56, (uint64_t (*)(void))_s17CategoryViewModelVMa);
              sub_100A48294((uint64_t)v29, (uint64_t)v21, (uint64_t (*)(void))_s17CategoryViewModelVMa);
              uint64_t v61 = v100;
              sub_100A48294((uint64_t)v33, v100, (uint64_t (*)(void))_s17CategoryViewModelVMa);
            }
            else
            {
              char v70 = _stringCompareWithSmolCheck(_:_:expecting:)();
              sub_100A48050(v64, (uint64_t (*)(void))_s17CategoryViewModelVMa);
              sub_100A48050(v56, (uint64_t (*)(void))_s17CategoryViewModelVMa);
              sub_100A48294((uint64_t)v29, (uint64_t)v21, (uint64_t (*)(void))_s17CategoryViewModelVMa);
              uint64_t v61 = v100;
              sub_100A48294((uint64_t)v33, v100, (uint64_t (*)(void))_s17CategoryViewModelVMa);
              if ((v70 & 1) == 0) {
                goto LABEL_28;
              }
            }
            uint64_t v71 = v102[6];
            id v72 = &v21[v71];
            uint64_t v73 = *(void *)&v21[v71 + 8];
            uint64_t v74 = (void *)(v61 + v71);
            uint64_t v75 = v61;
            uint64_t v76 = v74[1];
            if (!v73)
            {
              swift_bridgeObjectRetain();
              sub_100A48050(v75, (uint64_t (*)(void))_s17CategoryViewModelVMa);
              sub_100A48050((uint64_t)v21, (uint64_t (*)(void))_s17CategoryViewModelVMa);
              uint64_t v56 = v94;
              if (v76)
              {
                swift_bridgeObjectRelease();
LABEL_29:
                uint64_t v62 = v96;
                sub_100A48294((uint64_t)v29, v96, (uint64_t (*)(void))_s17CategoryViewModelVMa);
                sub_100A48294((uint64_t)v33, (uint64_t)v13, (uint64_t (*)(void))_s17CategoryViewModelVMa);
LABEL_30:
                sub_100A48050(v62, (uint64_t (*)(void))_s17CategoryViewModelVMa);
                sub_100A48050((uint64_t)v13, (uint64_t (*)(void))_s17CategoryViewModelVMa);
                sub_100A48294((uint64_t)v29, (uint64_t)v9, (uint64_t (*)(void))_s17CategoryViewModelVMa);
                sub_100A48294((uint64_t)v33, v103, (uint64_t (*)(void))_s17CategoryViewModelVMa);
                goto LABEL_31;
              }
              goto LABEL_48;
            }
            if (!v76)
            {
              swift_bridgeObjectRetain();
              sub_100A48050(v100, (uint64_t (*)(void))_s17CategoryViewModelVMa);
              Swift::Int v21 = v93;
              sub_100A48050((uint64_t)v93, (uint64_t (*)(void))_s17CategoryViewModelVMa);
              swift_bridgeObjectRelease();
              uint64_t v56 = v94;
              goto LABEL_29;
            }
            Swift::Int v21 = v93;
            if (*(void *)v72 == *v74 && v73 == v76)
            {
              swift_bridgeObjectRetain();
              sub_100A48050(v100, (uint64_t (*)(void))_s17CategoryViewModelVMa);
              sub_100A48050((uint64_t)v21, (uint64_t (*)(void))_s17CategoryViewModelVMa);
              swift_bridgeObjectRelease();
              uint64_t v56 = v94;
LABEL_48:
              uint64_t v62 = v96;
              sub_100A48294((uint64_t)v29, v96, (uint64_t (*)(void))_s17CategoryViewModelVMa);
              sub_100A48294((uint64_t)v33, (uint64_t)v13, (uint64_t (*)(void))_s17CategoryViewModelVMa);
              goto LABEL_51;
            }
            char v77 = _stringCompareWithSmolCheck(_:_:expecting:)();
            swift_bridgeObjectRetain();
            sub_100A48050(v100, (uint64_t (*)(void))_s17CategoryViewModelVMa);
            sub_100A48050((uint64_t)v21, (uint64_t (*)(void))_s17CategoryViewModelVMa);
            swift_bridgeObjectRelease();
            uint64_t v62 = v96;
            sub_100A48294((uint64_t)v29, v96, (uint64_t (*)(void))_s17CategoryViewModelVMa);
            sub_100A48294((uint64_t)v33, (uint64_t)v13, (uint64_t (*)(void))_s17CategoryViewModelVMa);
            uint64_t v56 = v94;
            if ((v77 & 1) == 0) {
              goto LABEL_30;
            }
LABEL_51:
            uint64_t v78 = v102[7];
            uint64_t v79 = *(void *)(v62 + v78);
            uint64_t v80 = *(void *)(v62 + v78 + 8);
            uint64_t v81 = &v13[v78];
            if (v79 == *(void *)v81 && v80 == *((void *)v81 + 1)) {
              break;
            }
            char v82 = _stringCompareWithSmolCheck(_:_:expecting:)();
            sub_100A48050(v62, (uint64_t (*)(void))_s17CategoryViewModelVMa);
            sub_100A48050((uint64_t)v13, (uint64_t (*)(void))_s17CategoryViewModelVMa);
            sub_100A48294((uint64_t)v29, (uint64_t)v9, (uint64_t (*)(void))_s17CategoryViewModelVMa);
            sub_100A48294((uint64_t)v33, v103, (uint64_t (*)(void))_s17CategoryViewModelVMa);
            if (v82) {
              goto LABEL_55;
            }
LABEL_31:
            sub_100A48050(v103, (uint64_t (*)(void))_s17CategoryViewModelVMa);
            sub_100A48050((uint64_t)v9, (uint64_t (*)(void))_s17CategoryViewModelVMa);
            sub_100A48050((uint64_t)v29, (uint64_t (*)(void))_s17CategoryViewModelVMa);
LABEL_32:
            unint64_t v60 = (v60 + 1) & v95;
            if (((*(void *)(v99 + ((v60 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v60) & 1) == 0) {
              goto LABEL_60;
            }
          }
          sub_100A48050(v62, (uint64_t (*)(void))_s17CategoryViewModelVMa);
          sub_100A48050((uint64_t)v13, (uint64_t (*)(void))_s17CategoryViewModelVMa);
          sub_100A48294((uint64_t)v29, (uint64_t)v9, (uint64_t (*)(void))_s17CategoryViewModelVMa);
          sub_100A48294((uint64_t)v33, v103, (uint64_t (*)(void))_s17CategoryViewModelVMa);
LABEL_55:
          long long v83 = v102;
          uint64_t v84 = *(void *)&v9[v102[8]];
          sub_100A48050((uint64_t)v9, (uint64_t (*)(void))_s17CategoryViewModelVMa);
          uint64_t v85 = *(void *)(v103 + v83[8]);
          sub_100A48050(v103, (uint64_t (*)(void))_s17CategoryViewModelVMa);
          sub_100A48050((uint64_t)v29, (uint64_t (*)(void))_s17CategoryViewModelVMa);
          BOOL v69 = v84 == v85;
          Swift::Int v21 = v93;
          if (!v69) {
            goto LABEL_32;
          }
          sub_100A48050((uint64_t)v33, (uint64_t (*)(void))_s17CategoryViewModelVMa);
          a1 = v90;
          uint64_t v38 = v89;
          long long v42 = v88;
          uint64_t v44 = v87;
          int64_t v43 = v92;
          int64_t v48 = v86;
          unint64_t v47 = v91;
          if (!v91) {
            goto LABEL_8;
          }
LABEL_7:
          uint64_t v91 = (v47 - 1) & v47;
          int64_t v92 = v43;
        }
      }
      while (1)
      {
        int64_t v52 = v53 + 1;
        if (__OFADD__(v53, 1)) {
          break;
        }
        if (v52 >= v48) {
          return;
        }
        unint64_t v51 = *(void *)(v44 + 8 * v52);
        ++v53;
        if (v51) {
          goto LABEL_21;
        }
      }
    }
    __break(1u);
  }
}

uint64_t sub_100A3E2D0(uint64_t result, uint64_t a2)
{
  if (result == a2) {
    return 1;
  }
  if (*(void *)(result + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v3 = 0;
  uint64_t v29 = result + 56;
  uint64_t v4 = 1 << *(unsigned char *)(result + 32);
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  else {
    uint64_t v5 = -1;
  }
  unint64_t v6 = v5 & *(void *)(result + 56);
  int64_t v30 = (unint64_t)(v4 + 63) >> 6;
  uint64_t v7 = a2 + 56;
  while (1)
  {
    if (v6)
    {
      unint64_t v8 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      int64_t v31 = v3;
      unint64_t v9 = v8 | (v3 << 6);
      goto LABEL_26;
    }
    int64_t v10 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_45;
    }
    if (v10 >= v30) {
      return 1;
    }
    unint64_t v11 = *(void *)(v29 + 8 * v10);
    int64_t v12 = v3 + 1;
    if (!v11)
    {
      int64_t v12 = v3 + 2;
      if (v3 + 2 >= v30) {
        return 1;
      }
      unint64_t v11 = *(void *)(v29 + 8 * v12);
      if (!v11)
      {
        int64_t v12 = v3 + 3;
        if (v3 + 3 >= v30) {
          return 1;
        }
        unint64_t v11 = *(void *)(v29 + 8 * v12);
        if (!v11)
        {
          int64_t v12 = v3 + 4;
          if (v3 + 4 >= v30) {
            return 1;
          }
          unint64_t v11 = *(void *)(v29 + 8 * v12);
          if (!v11) {
            break;
          }
        }
      }
    }
LABEL_25:
    unint64_t v6 = (v11 - 1) & v11;
    int64_t v31 = v12;
    unint64_t v9 = __clz(__rbit64(v11)) + (v12 << 6);
LABEL_26:
    uint64_t v14 = result;
    uint64_t v15 = (uint64_t *)(*(void *)(result + 48) + 16 * v9);
    uint64_t v17 = *v15;
    uint64_t v16 = v15[1];
    Hasher.init(_seed:)();
    swift_bridgeObjectRetain();
    String.hash(into:)();
    Swift::Int v18 = Hasher._finalize()();
    uint64_t v19 = -1 << *(unsigned char *)(a2 + 32);
    unint64_t v20 = v18 & ~v19;
    if (((*(void *)(v7 + ((v20 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v20) & 1) == 0) {
      goto LABEL_41;
    }
    uint64_t v21 = *(void *)(a2 + 48);
    uint64_t v22 = (void *)(v21 + 16 * v20);
    BOOL v23 = *v22 == v17 && v22[1] == v16;
    if (!v23 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
    {
      uint64_t v24 = ~v19;
      for (unint64_t i = v20 + 1; ; unint64_t i = v26 + 1)
      {
        uint64_t v26 = i & v24;
        if (((*(void *)(v7 + (((i & v24) >> 3) & 0xFFFFFFFFFFFFFF8)) >> (i & v24)) & 1) == 0) {
          break;
        }
        uint64_t v27 = (void *)(v21 + 16 * v26);
        BOOL v28 = *v27 == v17 && v27[1] == v16;
        if (v28 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
          goto LABEL_7;
        }
      }
LABEL_41:
      swift_bridgeObjectRelease();
      return 0;
    }
LABEL_7:
    swift_bridgeObjectRelease();
    unint64_t result = v14;
    int64_t v3 = v31;
  }
  uint64_t v13 = v3 + 5;
  if (v3 + 5 >= v30) {
    return 1;
  }
  unint64_t v11 = *(void *)(v29 + 8 * v13);
  if (v11)
  {
    int64_t v12 = v3 + 5;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v12 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      break;
    }
    if (v12 >= v30) {
      return 1;
    }
    unint64_t v11 = *(void *)(v29 + 8 * v12);
    ++v13;
    if (v11) {
      goto LABEL_25;
    }
  }
LABEL_45:
  __break(1u);
  return result;
}

uint64_t sub_100A3E574(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = a2 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0)
  {
    if (a1 < 0) {
      uint64_t v5 = a1;
    }
    else {
      uint64_t v5 = a1 & 0xFFFFFFFFFFFFFF8;
    }
    if (v4)
    {
      if (a2 < 0) {
        uint64_t v6 = a2;
      }
      else {
        uint64_t v6 = a2 & 0xFFFFFFFFFFFFFF8;
      }
      return __CocoaSet.isEqual(to:)(v6, v5);
    }
    sub_100A43C50(v5, a2);
    return v8 & 1;
  }
  if (v4)
  {
    if (a2 < 0) {
      uint64_t v7 = a2;
    }
    else {
      uint64_t v7 = a2 & 0xFFFFFFFFFFFFFF8;
    }
    sub_100A43C50(v7, a1);
    return v8 & 1;
  }
  if (a1 == a2)
  {
LABEL_49:
    char v8 = 1;
    return v8 & 1;
  }
  if (*(void *)(a1 + 16) != *(void *)(a2 + 16))
  {
LABEL_51:
    char v8 = 0;
    return v8 & 1;
  }
  uint64_t v30 = a1 + 56;
  uint64_t v9 = 1 << *(unsigned char *)(a1 + 32);
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  else {
    uint64_t v10 = -1;
  }
  unint64_t v11 = v10 & *(void *)(a1 + 56);
  uint64_t v6 = sub_10050BF48(0, (unint64_t *)&qword_101678790);
  int64_t v12 = 0;
  int64_t v31 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v13 = a2 + 56;
  while (1)
  {
    if (v11)
    {
      unint64_t v14 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v15 = v14 | (v12 << 6);
      goto LABEL_43;
    }
    int64_t v16 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_54;
    }
    if (v16 >= v31) {
      goto LABEL_49;
    }
    unint64_t v17 = *(void *)(v30 + 8 * v16);
    ++v12;
    if (!v17)
    {
      int64_t v12 = v16 + 1;
      if (v16 + 1 >= v31) {
        goto LABEL_49;
      }
      unint64_t v17 = *(void *)(v30 + 8 * v12);
      if (!v17)
      {
        int64_t v12 = v16 + 2;
        if (v16 + 2 >= v31) {
          goto LABEL_49;
        }
        unint64_t v17 = *(void *)(v30 + 8 * v12);
        if (!v17)
        {
          int64_t v12 = v16 + 3;
          if (v16 + 3 >= v31) {
            goto LABEL_49;
          }
          unint64_t v17 = *(void *)(v30 + 8 * v12);
          if (!v17) {
            break;
          }
        }
      }
    }
LABEL_42:
    unint64_t v11 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v12 << 6);
LABEL_43:
    Swift::Int v19 = *(void *)(a2 + 40);
    id v20 = *(id *)(*(void *)(a1 + 48) + 8 * v15);
    Swift::Int v21 = NSObject._rawHashValue(seed:)(v19);
    uint64_t v22 = -1 << *(unsigned char *)(a2 + 32);
    unint64_t v23 = v21 & ~v22;
    if (((*(void *)(v13 + ((v23 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v23) & 1) == 0) {
      goto LABEL_50;
    }
    int64_t v32 = v12;
    id v24 = *(id *)(*(void *)(a2 + 48) + 8 * v23);
    char v25 = static NSObject.== infix(_:_:)();

    if ((v25 & 1) == 0)
    {
      uint64_t v26 = ~v22;
      while (1)
      {
        unint64_t v23 = (v23 + 1) & v26;
        if (((*(void *)(v13 + ((v23 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v23) & 1) == 0) {
          break;
        }
        id v27 = *(id *)(*(void *)(a2 + 48) + 8 * v23);
        char v28 = static NSObject.== infix(_:_:)();

        if (v28) {
          goto LABEL_24;
        }
      }
LABEL_50:

      goto LABEL_51;
    }
LABEL_24:

    int64_t v12 = v32;
  }
  int64_t v18 = v16 + 4;
  if (v18 >= v31) {
    goto LABEL_49;
  }
  unint64_t v17 = *(void *)(v30 + 8 * v18);
  if (v17)
  {
    int64_t v12 = v18;
    goto LABEL_42;
  }
  while (1)
  {
    int64_t v12 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v12 >= v31) {
      goto LABEL_49;
    }
    unint64_t v17 = *(void *)(v30 + 8 * v12);
    ++v18;
    if (v17) {
      goto LABEL_42;
    }
  }
LABEL_54:
  __break(1u);
  return __CocoaSet.isEqual(to:)(v6, v5);
}

uint64_t sub_100A3E88C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UUID();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v7 = __chkstk_darwin(v4, v6);
  uint64_t v9 = (char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __chkstk_darwin(v7, v10);
  int64_t v48 = (char *)&v37 - v12;
  uint64_t result = __chkstk_darwin(v11, v13);
  int64_t v16 = (char *)&v37 - v15;
  if (a1 == a2) {
    return 1;
  }
  if (*(void *)(a1 + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v17 = 0;
  uint64_t v18 = *(void *)(a1 + 56);
  uint64_t v39 = a1;
  uint64_t v40 = a1 + 56;
  uint64_t v19 = 1 << *(unsigned char *)(a1 + 32);
  if (v19 < 64) {
    uint64_t v20 = ~(-1 << v19);
  }
  else {
    uint64_t v20 = -1;
  }
  unint64_t v21 = v20 & v18;
  int64_t v41 = (unint64_t)(v19 + 63) >> 6;
  uint64_t v45 = v5 + 32;
  uint64_t v46 = a2 + 56;
  uint64_t v47 = v5 + 16;
  uint64_t v22 = (void (**)(char *, uint64_t))(v5 + 8);
  uint64_t v37 = v16;
  uint64_t v38 = v5;
  if (!v21) {
    goto LABEL_9;
  }
LABEL_7:
  uint64_t v43 = (v21 - 1) & v21;
  int64_t v44 = v17;
  for (unint64_t i = __clz(__rbit64(v21)) | (v17 << 6); ; unint64_t i = __clz(__rbit64(v25)) + (v26 << 6))
  {
    uint64_t v28 = *(void *)(v5 + 72);
    uint64_t v29 = *(void (**)(char *, unint64_t, uint64_t))(v5 + 16);
    v29(v16, *(void *)(a1 + 48) + v28 * i, v4);
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v48, v16, v4);
    sub_100A47064((unint64_t *)&qword_1016770E0, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v30 = dispatch thunk of Hashable._rawHashValue(seed:)();
    uint64_t v31 = -1 << *(unsigned char *)(a2 + 32);
    unint64_t v32 = v30 & ~v31;
    if (((*(void *)(v46 + ((v32 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v32) & 1) == 0)
    {
      (*v22)(v48, v4);
      return 0;
    }
    uint64_t v42 = (unint64_t)v22 & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    uint64_t v33 = a2;
    uint64_t v34 = ~v31;
    while (1)
    {
      v29(v9, *(void *)(v33 + 48) + v32 * v28, v4);
      sub_100A47064((unint64_t *)&qword_10167BDC0, (void (*)(uint64_t))&type metadata accessor for UUID);
      char v35 = dispatch thunk of static Equatable.== infix(_:_:)();
      uint64_t v36 = *v22;
      (*v22)(v9, v4);
      if (v35) {
        break;
      }
      unint64_t v32 = (v32 + 1) & v34;
      if (((*(void *)(v46 + ((v32 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v32) & 1) == 0)
      {
        v36(v48, v4);
        return 0;
      }
    }
    uint64_t result = ((uint64_t (*)(char *, uint64_t))v36)(v48, v4);
    a2 = v33;
    uint64_t v5 = v38;
    a1 = v39;
    int64_t v16 = v37;
    unint64_t v21 = v43;
    int64_t v17 = v44;
    if (v43) {
      goto LABEL_7;
    }
LABEL_9:
    int64_t v24 = v17 + 1;
    if (__OFADD__(v17, 1))
    {
      __break(1u);
      goto LABEL_35;
    }
    if (v24 >= v41) {
      return 1;
    }
    unint64_t v25 = *(void *)(v40 + 8 * v24);
    int64_t v26 = v17 + 1;
    if (!v25)
    {
      int64_t v26 = v17 + 2;
      if (v17 + 2 >= v41) {
        return 1;
      }
      unint64_t v25 = *(void *)(v40 + 8 * v26);
      if (!v25)
      {
        int64_t v26 = v17 + 3;
        if (v17 + 3 >= v41) {
          return 1;
        }
        unint64_t v25 = *(void *)(v40 + 8 * v26);
        if (!v25)
        {
          int64_t v26 = v17 + 4;
          if (v17 + 4 >= v41) {
            return 1;
          }
          unint64_t v25 = *(void *)(v40 + 8 * v26);
          if (!v25) {
            break;
          }
        }
      }
    }
LABEL_24:
    uint64_t v43 = (v25 - 1) & v25;
    int64_t v44 = v26;
  }
  uint64_t v27 = v17 + 5;
  if (v17 + 5 >= v41) {
    return 1;
  }
  unint64_t v25 = *(void *)(v40 + 8 * v27);
  if (v25)
  {
    int64_t v26 = v17 + 5;
    goto LABEL_24;
  }
  while (1)
  {
    int64_t v26 = v27 + 1;
    if (__OFADD__(v27, 1)) {
      break;
    }
    if (v26 >= v41) {
      return 1;
    }
    unint64_t v25 = *(void *)(v40 + 8 * v26);
    ++v27;
    if (v25) {
      goto LABEL_24;
    }
  }
LABEL_35:
  __break(1u);
  return result;
}

uint64_t sub_100A3ECD0(uint64_t a1, uint64_t a2)
{
  if (a1 == a2) {
    return 1;
  }
  if (*(void *)(a1 + 16) == *(void *)(a2 + 16))
  {
    int64_t v3 = 0;
    uint64_t v4 = *(void *)(a1 + 56);
    uint64_t v36 = a1;
    uint64_t v37 = a1 + 56;
    uint64_t v5 = 1 << *(unsigned char *)(a1 + 32);
    if (v5 < 64) {
      uint64_t v6 = ~(-1 << v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & v4;
    int64_t v38 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v8 = a2 + 56;
    if ((v6 & v4) != 0) {
      goto LABEL_7;
    }
LABEL_8:
    int64_t v12 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_68;
    }
    if (v12 < v38)
    {
      unint64_t v13 = *(void *)(v37 + 8 * v12);
      ++v3;
      if (v13) {
        goto LABEL_23;
      }
      int64_t v3 = v12 + 1;
      if (v12 + 1 < v38)
      {
        unint64_t v13 = *(void *)(v37 + 8 * v3);
        if (v13) {
          goto LABEL_23;
        }
        int64_t v3 = v12 + 2;
        if (v12 + 2 < v38)
        {
          unint64_t v13 = *(void *)(v37 + 8 * v3);
          if (v13) {
            goto LABEL_23;
          }
          int64_t v3 = v12 + 3;
          if (v12 + 3 < v38)
          {
            unint64_t v13 = *(void *)(v37 + 8 * v3);
            if (v13) {
              goto LABEL_23;
            }
            int64_t v14 = v12 + 4;
            if (v14 < v38)
            {
              unint64_t v13 = *(void *)(v37 + 8 * v14);
              if (v13)
              {
                int64_t v3 = v14;
LABEL_23:
                uint64_t v10 = (v13 - 1) & v13;
                unint64_t v11 = __clz(__rbit64(v13)) + (v3 << 6);
                while (1)
                {
                  uint64_t v15 = *(void *)(a1 + 48) + 16 * v11;
                  int64_t v16 = *(void **)v15;
                  uint64_t v17 = *(unsigned __int8 *)(v15 + 8);
                  Hasher.init(_seed:)();
                  unint64_t v39 = v10;
                  int64_t v40 = v3;
                  switch(v17)
                  {
                    case 1:
                      Hasher._combine(_:)(1uLL);
                      id v19 = v16;
                      NSObject.hash(into:)();
                      sub_1007A0938(v16, 1u);
                      break;
                    case 2:
                      Hasher._combine(_:)(2uLL);
                      id v20 = v16;
                      NSObject.hash(into:)();
                      sub_1007A0938(v16, 2u);
                      break;
                    case 3:
                      if (v16)
                      {
                        if (v16 == (void *)1) {
                          Swift::UInt v21 = 4;
                        }
                        else {
                          Swift::UInt v21 = 5;
                        }
                      }
                      else
                      {
                        Swift::UInt v21 = 3;
                      }
                      Hasher._combine(_:)(v21);
                      break;
                    default:
                      Hasher._combine(_:)(0);
                      id v18 = v16;
                      NSObject.hash(into:)();
                      sub_1007A0938(v16, 0);
                      break;
                  }
                  Swift::Int v22 = Hasher._finalize()();
                  uint64_t v23 = -1 << *(unsigned char *)(a2 + 32);
                  unint64_t v24 = v22 & ~v23;
                  if (((*(void *)(v8 + ((v24 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v24) & 1) == 0) {
                    break;
                  }
                  uint64_t v25 = ~v23;
                  BOOL v26 = v16 == (void *)2 && v17 == 3;
                  BOOL v27 = v16 == (void *)1 && v17 == 3;
                  BOOL v41 = v27;
                  BOOL v42 = v26;
                  if (v16) {
                    BOOL v28 = 0;
                  }
                  else {
                    BOOL v28 = v17 == 3;
                  }
                  while (2)
                  {
                    uint64_t v29 = *(void *)(a2 + 48) + 16 * v24;
                    uint64_t v30 = *(void **)v29;
                    unsigned __int8 v31 = *(unsigned char *)(v29 + 8);
                    switch(v31)
                    {
                      case 1u:
                        if (v17 != 1) {
                          goto LABEL_45;
                        }
                        sub_10050BF48(0, (unint64_t *)&qword_101672E50);
                        sub_1007A0914(v16, 1u);
                        sub_1007A0914(v30, 1u);
                        char v32 = static NSObject.== infix(_:_:)();
                        sub_1007A0938(v16, 1u);
                        uint64_t v33 = v30;
                        unsigned __int8 v34 = 1;
                        goto LABEL_44;
                      case 2u:
                        if (v17 != 2) {
                          goto LABEL_45;
                        }
                        sub_10050BF48(0, (unint64_t *)&qword_101672E50);
                        sub_1007A0914(v16, 2u);
                        sub_1007A0914(v30, 2u);
                        char v32 = static NSObject.== infix(_:_:)();
                        sub_1007A0938(v16, 2u);
                        uint64_t v33 = v30;
                        unsigned __int8 v34 = 2;
                        goto LABEL_44;
                      case 3u:
                        if (!v30)
                        {
                          if (v28) {
                            goto LABEL_62;
                          }
LABEL_45:
                          unint64_t v24 = (v24 + 1) & v25;
                          if (((*(void *)(v8 + ((v24 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v24) & 1) == 0) {
                            goto LABEL_65;
                          }
                          continue;
                        }
                        if (v30 == (void *)1)
                        {
                          if (v41) {
                            goto LABEL_62;
                          }
                          goto LABEL_45;
                        }
                        if (!v42) {
                          goto LABEL_45;
                        }
LABEL_62:
                        a1 = v36;
                        unint64_t v7 = v39;
                        int64_t v3 = v40;
                        if (!v39) {
                          goto LABEL_8;
                        }
LABEL_7:
                        unint64_t v9 = __clz(__rbit64(v7));
                        uint64_t v10 = (v7 - 1) & v7;
                        unint64_t v11 = v9 | (v3 << 6);
                        break;
                      default:
                        if (v17) {
                          goto LABEL_45;
                        }
                        sub_10050BF48(0, (unint64_t *)&qword_101672E50);
                        sub_1007A0914(v16, 0);
                        sub_1007A0914(v30, 0);
                        char v32 = static NSObject.== infix(_:_:)();
                        sub_1007A0938(v16, 0);
                        uint64_t v33 = v30;
                        unsigned __int8 v34 = 0;
LABEL_44:
                        sub_1007A0938(v33, v34);
                        if ((v32 & 1) == 0) {
                          goto LABEL_45;
                        }
                        sub_1007A0938(v16, v31);
                        goto LABEL_62;
                    }
                    break;
                  }
                }
LABEL_65:
                sub_1007A0938(v16, v17);
                return 0;
              }
              while (1)
              {
                int64_t v3 = v14 + 1;
                if (__OFADD__(v14, 1)) {
                  break;
                }
                if (v3 >= v38) {
                  return 1;
                }
                unint64_t v13 = *(void *)(v37 + 8 * v3);
                ++v14;
                if (v13) {
                  goto LABEL_23;
                }
              }
LABEL_68:
              __break(1u);
              JUMPOUT(0x100A3F19CLL);
            }
          }
        }
      }
    }
    return 1;
  }
  return 0;
}

void sub_100A3F1BC()
{
  uint64_t v1 = *(void *)((char *)v0 + *(void *)((swift_isaMask & *v0) + 0x70));
  uint64_t v2 = *(os_unfair_lock_s **)(v1 + 16);
  os_unfair_lock_lock(v2);
  uint64_t v3 = *(void *)((swift_isaMask & *v0) + 0x88);
  uint64_t v4 = *(void **)((char *)v0 + v3);
  if (!v4 || (uint64_t v5 = (char *)v0 + *(void *)((swift_isaMask & *v0) + 0x90), v6 = v5[8], v6 == 255))
  {
    os_unfair_lock_unlock(v2);
  }
  else
  {
    uint64_t v7 = *(void *)v5;
    *(void *)((char *)v0 + v3) = 0;
    id v8 = v4;
    sub_1007BC988(v7, v6);

    uint64_t v9 = *(void *)v5;
    *(void *)uint64_t v5 = 0;
    unsigned __int8 v10 = v5[8];
    v5[8] = -1;
    sub_1007BC9A0(v9, v10);
    unint64_t v11 = (void *)((char *)v0 + *(void *)((swift_isaMask & *v0) + 0x98));
    swift_beginAccess();
    *unint64_t v11 = 0;
    swift_release();
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(v1 + 16));
    if (v6)
    {
      [v8 removeObserver:v0 forChangeSourceOfClass:swift_getObjCClassFromMetadata()];
    }
    else
    {
      sub_1007BA890(v7, 0);
      [v8 removeObserver:v0 forChangeSource:v7];

      sub_1007BC9A0(v7, v6);
      sub_1007BC9A0(v7, v6);
    }
  }
}

id CRLUIPropertyNotifier.__allocating_init(parent:)(void *a1)
{
  uint64_t v3 = (char *)objc_allocWithZone(v1);
  *(void *)&v3[OBJC_IVAR____TtC8Freeform21CRLUIPropertyNotifier_propertyStateUpdateCount] = 0;
  swift_unknownObjectWeakInit();
  uint64_t v4 = OBJC_IVAR____TtC8Freeform21CRLUIPropertyNotifier_subscribers;
  *(void *)&v3[v4] = sub_100A465E8(_swiftEmptyArrayStorage, &qword_1016890A0);
  swift_unknownObjectWeakAssign();
  v7.receiver = v3;
  v7.super_class = v1;
  id v5 = [super init];

  return v5;
}

id CRLUIPropertyNotifier.init(parent:)(void *a1)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  *(void *)&v1[OBJC_IVAR____TtC8Freeform21CRLUIPropertyNotifier_propertyStateUpdateCount] = 0;
  swift_unknownObjectWeakInit();
  uint64_t v4 = OBJC_IVAR____TtC8Freeform21CRLUIPropertyNotifier_subscribers;
  *(void *)&v1[v4] = sub_100A465E8(_swiftEmptyArrayStorage, &qword_1016890A0);
  swift_unknownObjectWeakAssign();
  v7.receiver = v1;
  v7.super_class = ObjectType;
  [super init];

  return v5;
}

void CRLUIPropertyNotifier.init()()
{
  *(void *)&v0[OBJC_IVAR____TtC8Freeform21CRLUIPropertyNotifier_propertyStateUpdateCount] = 0;
  swift_unknownObjectWeakInit();
  uint64_t v1 = OBJC_IVAR____TtC8Freeform21CRLUIPropertyNotifier_subscribers;
  *(void *)&v0[v1] = sub_100A465E8(_swiftEmptyArrayStorage, &qword_1016890A0);

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

uint64_t CRLUIPropertyNotifier.registerProperty(for:changeKind:seed:)(Swift::UInt a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_1005057FC(&qword_10168CA78);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117E810;
  *(_DWORD *)(inited + 32) = a2;
  Swift::Int v11 = sub_10050C034(inited);
  swift_setDeallocating();
  sub_100A3FFC4(a1, v11, (void (*)(_OWORD *, uint64_t))sub_100A45494, &qword_10168D148, (void (*)(_OWORD *, uint64_t))sub_100A45494);
  type metadata accessor for CRLUIPropertyNotifier.PropertySubscription();
  swift_allocObject();
  swift_weakInit();
  swift_weakAssign();
  swift_retain();
  swift_retain();
  uint64_t v12 = ObjectIdentifier.hashValue.getter();
  sub_100A41AB0(a3, a4, a5, v12);
  swift_release();
  swift_release();
  type metadata accessor for AnyCancellable();
  swift_allocObject();
  sub_100A47064(&qword_10168CA80, (void (*)(uint64_t))type metadata accessor for CRLUIPropertyNotifier.PropertySubscription);
  uint64_t v13 = AnyCancellable.init<A>(_:)();
  swift_bridgeObjectRelease();
  swift_release();
  return v13;
}

Swift::Int CRLUIPropertyNotifier.KindFilter.init(kind:)(int a1)
{
  sub_1005057FC(&qword_10168CA78);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117E810;
  *(_DWORD *)(inited + 32) = a1;
  Swift::Int v3 = sub_10050C034(inited);
  swift_setDeallocating();
  return v3;
}

uint64_t CRLUIPropertyNotifier.registerProperty<A>(for:changeFilter:seed:)(Swift::UInt a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  sub_100A407D4(a1, a2, a6);
  type metadata accessor for CRLUIPropertyNotifier.PropertySubscription();
  swift_allocObject();
  swift_weakInit();
  swift_weakAssign();
  swift_retain();
  swift_retain();
  uint64_t v9 = ObjectIdentifier.hashValue.getter();
  sub_100A41AB0(a3, a4, a5, v9);
  swift_release();
  swift_release();
  type metadata accessor for AnyCancellable();
  swift_allocObject();
  sub_100A47064(&qword_10168CA80, (void (*)(uint64_t))type metadata accessor for CRLUIPropertyNotifier.PropertySubscription);
  uint64_t v10 = AnyCancellable.init<A>(_:)();
  swift_release();
  return v10;
}

uint64_t CRLUIPropertyNotifier.registerProperty(for:changeKinds:seed:)(Swift::UInt a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_100A3FC68(a1, a2, a3, a4, a5, (void (*)(_OWORD *, uint64_t))sub_100A45494, &qword_10168D148);
}

uint64_t CRLUIPropertyNotifier.registerProperty(for:changeProperty:seed:)(Swift::UInt a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_1005057FC(&qword_10168CA88);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117E810;
  *(void *)(inited + 32) = a2;
  Swift::Int v11 = sub_10050C178(inited);
  swift_setDeallocating();
  sub_100A3FFC4(a1, v11, (void (*)(_OWORD *, uint64_t))sub_100A45328, &qword_10168D140, (void (*)(_OWORD *, uint64_t))sub_100A45328);
  type metadata accessor for CRLUIPropertyNotifier.PropertySubscription();
  swift_allocObject();
  swift_weakInit();
  swift_weakAssign();
  swift_retain();
  swift_retain();
  uint64_t v12 = ObjectIdentifier.hashValue.getter();
  sub_100A41AB0(a3, a4, a5, v12);
  swift_release();
  swift_release();
  type metadata accessor for AnyCancellable();
  swift_allocObject();
  sub_100A47064(&qword_10168CA80, (void (*)(uint64_t))type metadata accessor for CRLUIPropertyNotifier.PropertySubscription);
  uint64_t v13 = AnyCancellable.init<A>(_:)();
  swift_bridgeObjectRelease();
  swift_release();
  return v13;
}

Swift::Int CRLUIPropertyNotifier.PropertyFilter.init(property:)(uint64_t a1)
{
  sub_1005057FC(&qword_10168CA88);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117E810;
  *(void *)(inited + 32) = a1;
  Swift::Int v3 = sub_10050C178(inited);
  swift_setDeallocating();
  return v3;
}

uint64_t CRLUIPropertyNotifier.registerProperty(for:changeProperties:seed:)(Swift::UInt a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_100A3FC68(a1, a2, a3, a4, a5, (void (*)(_OWORD *, uint64_t))sub_100A45328, &qword_10168D140);
}

uint64_t sub_100A3FC68(Swift::UInt a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(_OWORD *, uint64_t), uint64_t *a7)
{
  swift_bridgeObjectRetain();
  sub_100A3FFC4(a1, a2, a6, a7, a6);
  type metadata accessor for CRLUIPropertyNotifier.PropertySubscription();
  swift_allocObject();
  swift_weakInit();
  swift_weakAssign();
  swift_retain();
  swift_retain();
  uint64_t v14 = ObjectIdentifier.hashValue.getter();
  sub_100A41AB0(a3, a4, a5, v14);
  swift_release();
  swift_release();
  type metadata accessor for AnyCancellable();
  swift_allocObject();
  sub_100A47064(&qword_10168CA80, (void (*)(uint64_t))type metadata accessor for CRLUIPropertyNotifier.PropertySubscription);
  uint64_t v15 = AnyCancellable.init<A>(_:)();
  swift_bridgeObjectRelease();
  swift_release();
  return v15;
}

uint64_t CRLUIPropertyNotifier.registerProperty(for:where:seed:)(Swift::UInt a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12 = type metadata accessor for CRLUIPropertyNotifier.CustomFilter();
  __chkstk_darwin(v12 - 8, v13);
  uint64_t v15 = (void *)((char *)v20 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  *uint64_t v15 = a2;
  v15[1] = a3;
  swift_retain();
  UUID.init()();
  sub_100A4022C(a1, (uint64_t)v15);
  type metadata accessor for CRLUIPropertyNotifier.PropertySubscription();
  uint64_t v16 = swift_allocObject();
  swift_weakInit();
  swift_weakAssign();
  swift_retain();
  swift_retain();
  uint64_t v17 = ObjectIdentifier.hashValue.getter();
  sub_100A41AB0(a4, a5, a6, v17);
  swift_release();
  swift_release();
  v20[1] = v16;
  type metadata accessor for AnyCancellable();
  swift_allocObject();
  sub_100A47064(&qword_10168CA80, (void (*)(uint64_t))type metadata accessor for CRLUIPropertyNotifier.PropertySubscription);
  uint64_t v18 = AnyCancellable.init<A>(_:)();
  swift_release();
  sub_100A48050((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for CRLUIPropertyNotifier.CustomFilter);
  return v18;
}

uint64_t CRLUIPropertyNotifier.CustomFilter.init(filter:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  *a3 = a1;
  a3[1] = a2;
  type metadata accessor for CRLUIPropertyNotifier.CustomFilter();
  return UUID.init()();
}

uint64_t sub_100A3FFC4(Swift::UInt a1, uint64_t a2, void (*a3)(_OWORD *, uint64_t), uint64_t *a4, void (*a5)(_OWORD *, uint64_t))
{
  uint64_t v9 = v5;
  Hasher.init()();
  Hasher._combine(_:)(a1);
  Hasher._combine(_:)(1uLL);
  swift_bridgeObjectRetain();
  a3(v23, a2);
  swift_bridgeObjectRelease();
  long long v27 = v23[2];
  long long v28 = v23[3];
  uint64_t v29 = v24;
  long long v25 = v23[0];
  long long v26 = v23[1];
  Swift::Int v12 = Hasher.finalize()();
  uint64_t v13 = &v5[OBJC_IVAR____TtC8Freeform21CRLUIPropertyNotifier_subscribers];
  swift_beginAccess();
  uint64_t v14 = *(void *)v13;
  if (*(void *)(v14 + 16) && (unint64_t v15 = sub_100955F14(v12), (v16 & 1) != 0))
  {
    uint64_t v17 = *(void *)(*(void *)(v14 + 56) + 8 * v15);
    swift_endAccess();
    swift_retain();
  }
  else
  {
    swift_endAccess();
    sub_1005057FC(a4);
    swift_allocObject();
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    id v18 = v9;
    uint64_t v17 = sub_100A46CF8(a1, a2, (uint64_t)v18, a5);
    swift_unknownObjectRelease();

    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      id v20 = (void *)Strong;
      swift_unknownObjectRetain();
      id v21 = v20;
      sub_100A40C8C(v17, v21, a1, 256);
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
    }
    else
    {
      sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"newSubscriber()", 15, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/SwiftUIProperties/CRLUIPropertyNotifier.swift", 115, 2, 225, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"newSubscriber()", 15, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/SwiftUIProperties/CRLUIPropertyNotifier.swift", 115, 2, 225);
      swift_bridgeObjectRelease();
    }
  }
  return v17;
}

uint64_t sub_100A4022C(Swift::UInt a1, uint64_t a2)
{
  Swift::Int v3 = v2;
  uint64_t v6 = type metadata accessor for CRLUIPropertyNotifier.CustomFilter();
  __chkstk_darwin(v6, v7);
  uint64_t v9 = &v25[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v10, v11);
  uint64_t v13 = &v25[-v12];
  Hasher.init()();
  Hasher._combine(_:)(a1);
  Hasher._combine(_:)(1uLL);
  type metadata accessor for UUID();
  sub_100A47064((unint64_t *)&qword_1016770E0, (void (*)(uint64_t))&type metadata accessor for UUID);
  dispatch thunk of Hashable.hash(into:)();
  long long v32 = v27;
  long long v33 = v28;
  uint64_t v34 = v29;
  long long v30 = *(_OWORD *)&v25[8];
  long long v31 = v26;
  Swift::Int v14 = Hasher.finalize()();
  unint64_t v15 = &v2[OBJC_IVAR____TtC8Freeform21CRLUIPropertyNotifier_subscribers];
  swift_beginAccess();
  uint64_t v16 = *(void *)v15;
  if (*(void *)(v16 + 16) && (unint64_t v17 = sub_100955F14(v14), (v18 & 1) != 0))
  {
    uint64_t v19 = *(void *)(*(void *)(v16 + 56) + 8 * v17);
    swift_retain();
  }
  else
  {
    uint64_t v19 = 0;
  }
  swift_endAccess();
  sub_100A48294(a2, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for CRLUIPropertyNotifier.CustomFilter);
  if (!v19)
  {
    sub_100A48294((uint64_t)v13, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for CRLUIPropertyNotifier.CustomFilter);
    sub_1005057FC(&qword_10168D138);
    swift_allocObject();
    swift_unknownObjectRetain();
    id v20 = v3;
    uint64_t v19 = sub_100A46DFC(a1, (uint64_t)v9);
    swift_unknownObjectRelease();

    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      Swift::Int v22 = (void *)Strong;
      swift_unknownObjectRetain();
      id v23 = v22;
      sub_100A40C8C(v19, v23, a1, 256);
      swift_unknownObjectRelease();
    }
    else
    {
      sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"newSubscriber()", 15, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/SwiftUIProperties/CRLUIPropertyNotifier.swift", 115, 2, 225, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"newSubscriber()", 15, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/SwiftUIProperties/CRLUIPropertyNotifier.swift", 115, 2, 225);
    }
  }
  sub_100A48050((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for CRLUIPropertyNotifier.CustomFilter);
  return v19;
}

uint64_t sub_100A40570(Swift::UInt a1)
{
  Hasher.init()();
  Hasher._combine(_:)(a1);
  Hasher._combine(_:)(1uLL);
  Swift::Int v3 = Hasher.finalize()();
  uint64_t v4 = (uint64_t *)(v1 + OBJC_IVAR____TtC8Freeform21CRLUIPropertyNotifier_subscribers);
  swift_beginAccess();
  uint64_t v5 = *v4;
  if (*(void *)(v5 + 16) && (unint64_t v6 = sub_100955F14(v3), (v7 & 1) != 0))
  {
    uint64_t v8 = *(void *)(*(void *)(v5 + 56) + 8 * v6);
    swift_endAccess();
    swift_retain();
  }
  else
  {
    swift_endAccess();
    sub_1005057FC(&qword_10168D118);
    uint64_t v8 = swift_allocObject();
    Hasher.init()();
    Hasher._combine(_:)(a1);
    Hasher._combine(_:)(1uLL);
    Swift::Int v9 = Hasher.finalize()();
    *(_OWORD *)(v8 + 48) = 0u;
    *(_OWORD *)(v8 + 64) = 0u;
    *(void *)(v8 + 80) = 0;
    *(void *)(v8 + 88) = v9;
    swift_unknownObjectWeakInit();
    *(void *)(v8 + 24) = sub_100A463A0(_swiftEmptyArrayStorage);
    *(void *)(v8 + 32) = 0;
    *(unsigned char *)(v8 + 40) = 1;
    swift_unknownObjectWeakAssign();
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      uint64_t v11 = (void *)Strong;
      swift_unknownObjectRetain();
      id v12 = v11;
      sub_100A40C8C(v8, v12, a1, 256);
      swift_unknownObjectRelease();
    }
    else
    {
      sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"newSubscriber()", 15, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/SwiftUIProperties/CRLUIPropertyNotifier.swift", 115, 2, 225, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"newSubscriber()", 15, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/SwiftUIProperties/CRLUIPropertyNotifier.swift", 115, 2, 225);
    }
  }
  return v8;
}

uint64_t sub_100A407D4(Swift::UInt a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v9 = *(void *)(a3 - 8);
  __chkstk_darwin(ObjectType, v10);
  id v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  Swift::Int v13 = sub_100A417A4(a1);
  Swift::Int v14 = &v3[OBJC_IVAR____TtC8Freeform21CRLUIPropertyNotifier_subscribers];
  swift_beginAccess();
  uint64_t v15 = *(void *)v14;
  if (*(void *)(v15 + 16) && (unint64_t v16 = sub_100955F14(v13), (v17 & 1) != 0))
  {
    uint64_t v18 = *(void *)(*(void *)(v15 + 56) + 8 * v16);
    swift_retain();
  }
  else
  {
    uint64_t v18 = 0;
  }
  swift_endAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v12, a2, a3);
  if (!v18) {
    uint64_t v18 = sub_100A41844(a1, (uint64_t)v12, v4);
  }
  (*(void (**)(char *, uint64_t))(v9 + 8))(v12, a3);
  return v18;
}

uint64_t CRLUIPropertyNotifier.registerProperty(forAllChangeRecordsOn:seed:)(Swift::UInt a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_100A40570(a1);
  type metadata accessor for CRLUIPropertyNotifier.PropertySubscription();
  swift_allocObject();
  swift_weakInit();
  swift_weakAssign();
  swift_retain();
  swift_retain();
  uint64_t v7 = ObjectIdentifier.hashValue.getter();
  sub_100A41AB0(a2, a3, a4, v7);
  swift_release();
  swift_release();
  type metadata accessor for AnyCancellable();
  swift_allocObject();
  sub_100A47064(&qword_10168CA80, (void (*)(uint64_t))type metadata accessor for CRLUIPropertyNotifier.PropertySubscription);
  uint64_t v8 = AnyCancellable.init<A>(_:)();
  swift_release();
  return v8;
}

uint64_t CRLUIPropertyNotifier.registerProperty<A>(updatePublisher:seed:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for CRLUIPropertyNotifier.PublisherSubscriber();
  uint64_t v7 = sub_100A4701C();
  sub_100A41160(v7);
  type metadata accessor for CRLUIPropertyNotifier.PropertySubscription();
  swift_allocObject();
  swift_weakInit();
  swift_weakAssign();
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v8 = ObjectIdentifier.hashValue.getter();
  sub_100A41AB0(a2, a3, a4, v8);
  swift_release();
  swift_release();
  swift_release();
  type metadata accessor for AnyCancellable();
  swift_allocObject();
  sub_100A47064(&qword_10168CA80, (void (*)(uint64_t))type metadata accessor for CRLUIPropertyNotifier.PropertySubscription);
  uint64_t v9 = AnyCancellable.init<A>(_:)();
  swift_release();
  return v9;
}

void sub_100A40C8C(uint64_t a1, void *a2, uint64_t a3, __int16 a4)
{
  uint64_t v9 = *(uint64_t (**)(void))(*(void *)a1 + 192);
  uint64_t v10 = v9();
  uint64_t v11 = (uint64_t *)(v4 + OBJC_IVAR____TtC8Freeform21CRLUIPropertyNotifier_subscribers);
  swift_beginAccess();
  if (*(void *)(*v11 + 16))
  {
    sub_100955F14(v10);
    char v13 = v12;
    uint64_t v14 = swift_endAccess();
    if (v13)
    {
      sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"addSubscriber(_:for:)", 21, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/SwiftUIProperties/CRLUIPropertyNotifier.swift", 115, 2, 260, (uint64_t)"Should not add identical subscribers.", 37, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"addSubscriber(_:for:)", 21, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/SwiftUIProperties/CRLUIPropertyNotifier.swift", 115, 2, 260);
    }
  }
  else
  {
    uint64_t v14 = swift_endAccess();
  }
  uint64_t v15 = ((uint64_t (*)(uint64_t))v9)(v14);
  swift_beginAccess();
  swift_retain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v21 = *v11;
  *uint64_t v11 = 0x8000000000000000;
  sub_100975AF0(a1, v15, isUniquelyReferenced_nonNull_native);
  *uint64_t v11 = v21;
  swift_bridgeObjectRelease();
  swift_endAccess();
  char v17 = objc_allocWithZone((Class)sub_1005057FC(&qword_10168D120));
  v17[*(void *)((swift_isaMask & *(void *)v17) + 0x138)] = HIBYTE(a4) & 1;
  swift_retain();
  id v18 = a2;
  char v19 = a4 & 1;
  sub_1007BA890(a3, v19);
  id v20 = sub_100A468AC(v18, a3, v19, a1);
  swift_release();
  sub_100A45994(v20, a1);
}

uint64_t sub_100A40EF8(uint64_t a1)
{
  Swift::Int v3 = *(uint64_t (**)(void))(*(void *)a1 + 192);
  uint64_t v4 = v3();
  uint64_t v5 = (uint64_t *)(v1 + OBJC_IVAR____TtC8Freeform21CRLUIPropertyNotifier_subscribers);
  swift_beginAccess();
  if (*(void *)(*v5 + 16))
  {
    sub_100955F14(v4);
    char v7 = v6;
    uint64_t v8 = swift_endAccess();
    if (v7)
    {
      sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"addSubscriber(_:for:)", 21, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/SwiftUIProperties/CRLUIPropertyNotifier.swift", 115, 2, 260, (uint64_t)"Should not add identical subscribers.", 37, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"addSubscriber(_:for:)", 21, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/SwiftUIProperties/CRLUIPropertyNotifier.swift", 115, 2, 260);
    }
  }
  else
  {
    uint64_t v8 = swift_endAccess();
  }
  uint64_t v9 = ((uint64_t (*)(uint64_t))v3)(v8);
  swift_beginAccess();
  swift_retain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v12 = *v5;
  *uint64_t v5 = 0x8000000000000000;
  sub_100975AF0(a1, v9, isUniquelyReferenced_nonNull_native);
  *uint64_t v5 = v12;
  swift_bridgeObjectRelease();
  swift_endAccess();
  type metadata accessor for NSNotificationCenter.Publisher();
  sub_100A47064((unint64_t *)&qword_1016773D0, (void (*)(uint64_t))&type metadata accessor for NSNotificationCenter.Publisher);
  sub_1005057FC(&qword_10168D108);
  sub_100523288(&qword_10168D110, &qword_10168D108);
  return dispatch thunk of Publisher.receive<A>(subscriber:)();
}

uint64_t sub_100A41160(uint64_t a1)
{
  Swift::Int v3 = *(uint64_t (**)(void))(*(void *)a1 + 192);
  uint64_t v4 = v3();
  uint64_t v5 = (uint64_t *)(v1 + OBJC_IVAR____TtC8Freeform21CRLUIPropertyNotifier_subscribers);
  swift_beginAccess();
  if (*(void *)(*v5 + 16))
  {
    sub_100955F14(v4);
    char v7 = v6;
    uint64_t v8 = swift_endAccess();
    if (v7)
    {
      sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"addSubscriber(_:for:)", 21, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/SwiftUIProperties/CRLUIPropertyNotifier.swift", 115, 2, 260, (uint64_t)"Should not add identical subscribers.", 37, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"addSubscriber(_:for:)", 21, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/SwiftUIProperties/CRLUIPropertyNotifier.swift", 115, 2, 260);
    }
  }
  else
  {
    uint64_t v8 = swift_endAccess();
  }
  uint64_t v9 = ((uint64_t (*)(uint64_t))v3)(v8);
  swift_beginAccess();
  swift_retain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v12 = *v5;
  *uint64_t v5 = 0x8000000000000000;
  sub_100975AF0(a1, v9, isUniquelyReferenced_nonNull_native);
  *uint64_t v5 = v12;
  swift_bridgeObjectRelease();
  swift_endAccess();
  type metadata accessor for CRLUIPropertyNotifier.PublisherSubscriber();
  swift_getWitnessTable();
  return dispatch thunk of Publisher.receive<A>(subscriber:)();
}

uint64_t CRLUIPropertyNotifier.registerProperty(notification:object:seed:)(uint64_t a1, Swift::UInt a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_100A414F4(a2);
  type metadata accessor for CRLUIPropertyNotifier.PropertySubscription();
  swift_allocObject();
  swift_weakInit();
  swift_weakAssign();
  swift_retain();
  swift_retain();
  uint64_t v8 = ObjectIdentifier.hashValue.getter();
  sub_100A41AB0(a3, a4, a5, v8);
  swift_release();
  swift_release();
  type metadata accessor for AnyCancellable();
  swift_allocObject();
  sub_100A47064(&qword_10168CA80, (void (*)(uint64_t))type metadata accessor for CRLUIPropertyNotifier.PropertySubscription);
  uint64_t v9 = AnyCancellable.init<A>(_:)();
  swift_release();
  return v9;
}

uint64_t sub_100A414F4(Swift::UInt a1)
{
  uint64_t v3 = type metadata accessor for NSNotificationCenter.Publisher();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3, v5);
  char v7 = &v16[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  Hasher.init()();
  if (a1) {
    Hasher._combine(_:)(a1);
  }
  else {
    Hasher._combine(_:)(0);
  }
  Hasher._combine(_:)(2uLL);
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  long long v23 = v18;
  long long v24 = v19;
  uint64_t v25 = v20;
  long long v21 = *(_OWORD *)&v16[8];
  long long v22 = v17;
  Swift::Int v8 = Hasher.finalize()();
  uint64_t v9 = (uint64_t *)(v1 + OBJC_IVAR____TtC8Freeform21CRLUIPropertyNotifier_subscribers);
  swift_beginAccess();
  uint64_t v10 = *v9;
  if (*(void *)(v10 + 16) && (unint64_t v11 = sub_100955F14(v8), (v12 & 1) != 0))
  {
    uint64_t v13 = *(void *)(*(void *)(v10 + 56) + 8 * v11);
    swift_endAccess();
    swift_retain();
  }
  else
  {
    swift_endAccess();
    id v14 = [self defaultCenter];
    NSNotificationCenter.publisher(for:object:)();

    sub_1005057FC(&qword_10168D108);
    uint64_t v13 = swift_allocObject();
    *(_OWORD *)(v13 + 48) = 0u;
    *(_OWORD *)(v13 + 64) = 0u;
    *(void *)(v13 + 80) = 0;
    swift_unknownObjectWeakInit();
    *(void *)(v13 + 24) = sub_100A463A0(_swiftEmptyArrayStorage);
    *(void *)(v13 + 32) = 0;
    *(unsigned char *)(v13 + 40) = 1;
    swift_unknownObjectWeakAssign();
    *(void *)(v13 + 32) = v8;
    *(unsigned char *)(v13 + 40) = 0;
    sub_100A40EF8(v13);
    (*(void (**)(unsigned char *, uint64_t))(v4 + 8))(v7, v3);
  }
  return v13;
}

uint64_t CRLUIPropertyNotifier.subscriberCount.getter()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC8Freeform21CRLUIPropertyNotifier_subscribers;
  swift_beginAccess();
  return *(void *)(*(void *)v1 + 16);
}

Swift::Int sub_100A417A4(Swift::UInt a1)
{
  return Hasher.finalize()();
}

uint64_t sub_100A41844(Swift::UInt a1, uint64_t a2, void *a3)
{
  type metadata accessor for CRLUIPropertyNotifier.ChangeSubscriber();
  swift_allocObject();
  swift_unknownObjectRetain();
  id v5 = a3;
  uint64_t v6 = sub_100A46B54(a1);
  swift_unknownObjectRelease();

  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    Swift::Int v8 = (void *)Strong;
    swift_unknownObjectRetain();
    id v9 = v8;
    sub_100A40C8C(v6, v9, a1, 256);
    swift_unknownObjectRelease();
  }
  else
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"newSubscriber()", 15, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/SwiftUIProperties/CRLUIPropertyNotifier.swift", 115, 2, 225, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"newSubscriber()", 15, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/SwiftUIProperties/CRLUIPropertyNotifier.swift", 115, 2, 225);
  }
  return v6;
}

uint64_t sub_100A419C0(uint64_t a1)
{
  uint64_t v2 = (*(uint64_t (**)(void))(*(void *)a1 + 192))();
  uint64_t v3 = (uint64_t *)(v1 + OBJC_IVAR____TtC8Freeform21CRLUIPropertyNotifier_subscribers);
  swift_beginAccess();
  unint64_t v4 = sub_100955F14(v2);
  if (v5)
  {
    unint64_t v6 = v4;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v8 = *v3;
    uint64_t v10 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_1009807D4();
      uint64_t v8 = v10;
    }
    sub_10058857C(v6, v8);
    *uint64_t v3 = v8;
    swift_release();
    swift_bridgeObjectRelease();
  }
  return swift_endAccess();
}

uint64_t sub_100A41AB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  swift_beginAccess();
  swift_retain();
  swift_retain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v11 = v4[3];
  v4[3] = 0x8000000000000000;
  sub_100975C44(a1, a2, a3, a4, isUniquelyReferenced_nonNull_native);
  v4[3] = v11;
  swift_bridgeObjectRelease();
  uint64_t result = swift_endAccess();
  if (!*(void *)(v4[3] + 16)) {
    return (*(uint64_t (**)(uint64_t))(*v4 + 184))(result);
  }
  return result;
}

void sub_100A41B9C()
{
  uint64_t v1 = v0;
  uint64_t v2 = ObjectIdentifier.hashValue.getter();
  uint64_t v3 = (uint64_t *)(v0 + 24);
  swift_beginAccess();
  if (*(void *)(*(void *)(v0 + 24) + 16) && (sub_100955F14(v2), (v4 & 1) != 0))
  {
    swift_beginAccess();
    unint64_t v5 = sub_100955F14(v2);
    if (v6)
    {
      unint64_t v7 = v5;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v9 = *v3;
      uint64_t v11 = *v3;
      *uint64_t v3 = 0x8000000000000000;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_1009807E0();
        uint64_t v9 = v11;
      }
      sub_10058A8F8(v7, v9);
      *uint64_t v3 = v9;
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
    }
    uint64_t v10 = swift_endAccess();
    if (!*(void *)(*v3 + 16)) {
      (*(void (**)(uint64_t))(*(void *)v1 + 184))(v10);
    }
  }
  else
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"removeProperty(_:)", 18, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/SwiftUIProperties/CRLUIPropertyNotifier.swift", 115, 2, 340, (uint64_t)"Unknown subscriber.", 19, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"removeProperty(_:)", 18, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/SwiftUIProperties/CRLUIPropertyNotifier.swift", 115, 2, 340);
  }
}

uint64_t sub_100A41D64()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2, v4);
  char v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for DispatchQoS();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7, v9);
  uint64_t v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t Strong = (char *)swift_unknownObjectWeakLoadStrong();
  if (Strong
    && (uint64_t v13 = *(void *)&Strong[OBJC_IVAR____TtC8Freeform21CRLUIPropertyNotifier_propertyStateUpdateCount],
        Strong,
        v13))
  {
    sub_10050BF48(0, (unint64_t *)&qword_1016725C0);
    uint64_t v14 = static OS_dispatch_queue.main.getter();
    aBlock[4] = sub_100A48178;
    aBlock[5] = v1;
    long long v19 = (void *)v14;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = *(void *)"";
    aBlock[2] = sub_100679958;
    aBlock[3] = &unk_10151F2D8;
    uint64_t v15 = _Block_copy(aBlock);
    swift_retain();
    swift_release();
    static DispatchQoS.unspecified.getter();
    aBlock[0] = _swiftEmptyArrayStorage;
    sub_100A47064((unint64_t *)&qword_1016747E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_1005057FC((uint64_t *)&unk_1016725D0);
    sub_100523288((unint64_t *)&qword_1016747F0, (uint64_t *)&unk_1016725D0);
    dispatch thunk of SetAlgebra.init<A>(_:)();
    unint64_t v16 = v19;
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v15);

    (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
    return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v11, v7);
  }
  else
  {
    return sub_100A42080(v1);
  }
}

uint64_t sub_100A42080(uint64_t a1)
{
  swift_beginAccess();
  uint64_t v2 = *(void *)(a1 + 24);
  uint64_t v3 = v2 + 64;
  uint64_t v4 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  uint64_t v6 = v5 & *(void *)(v2 + 64);
  int64_t v7 = (unint64_t)(v4 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v9 = 0;
  while (1)
  {
    if (v6)
    {
      v6 &= v6 - 1;
      goto LABEL_5;
    }
    int64_t v10 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v10 >= v7) {
      return swift_release();
    }
    uint64_t v11 = *(void *)(v3 + 8 * v10);
    ++v9;
    if (!v11)
    {
      int64_t v9 = v10 + 1;
      if (v10 + 1 >= v7) {
        return swift_release();
      }
      uint64_t v11 = *(void *)(v3 + 8 * v9);
      if (!v11)
      {
        int64_t v9 = v10 + 2;
        if (v10 + 2 >= v7) {
          return swift_release();
        }
        uint64_t v11 = *(void *)(v3 + 8 * v9);
        if (!v11)
        {
          int64_t v9 = v10 + 3;
          if (v10 + 3 >= v7) {
            return swift_release();
          }
          uint64_t v11 = *(void *)(v3 + 8 * v9);
          if (!v11) {
            break;
          }
        }
      }
    }
LABEL_22:
    uint64_t v6 = (v11 - 1) & v11;
LABEL_5:
    swift_retain();
    swift_retain();
    sub_1005057FC(&qword_10168CFD8);
    Binding.wrappedValue.getter();
    Binding.wrappedValue.setter();
    swift_release();
    uint64_t result = swift_release();
  }
  int64_t v12 = v10 + 4;
  if (v12 >= v7) {
    return swift_release();
  }
  uint64_t v11 = *(void *)(v3 + 8 * v12);
  if (v11)
  {
    int64_t v9 = v12;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v9 = v12 + 1;
    if (__OFADD__(v12, 1)) {
      break;
    }
    if (v9 >= v7) {
      return swift_release();
    }
    uint64_t v11 = *(void *)(v3 + 8 * v9);
    ++v12;
    if (v11) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

void sub_100A4226C()
{
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v2 = (id)Strong;
    sub_100A419C0(v0);
  }
}

uint64_t sub_100A422D4()
{
  if (*(unsigned char *)(v0 + 40) != 1) {
    return *(void *)(v0 + 32);
  }
  uint64_t result = ObjectIdentifier.hashValue.getter();
  *(void *)(v0 + 32) = result;
  *(unsigned char *)(v0 + 40) = 0;
  return result;
}

uint64_t sub_100A42310()
{
  swift_unknownObjectWeakDestroy();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t sub_100A42350()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 184))();
}

uint64_t sub_100A42394(void *a1)
{
  uint64_t v3 = v1 + 48;
  swift_beginAccess();
  uint64_t v4 = type metadata accessor for CRLUIPropertyNotifier.PublisherSubscriber.Status();
  uint64_t v5 = *(void *)(v4 - 8);
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v5 + 16))(v9, v3, v4);
  uint64_t v6 = v10;
  (*(void (**)(unsigned char *, uint64_t))(v5 + 8))(v9, v4);
  if (v6)
  {
    sub_10050F848(a1, a1[3]);
    return dispatch thunk of Cancellable.cancel()();
  }
  else
  {
    sub_1005498A4((uint64_t)a1, (uint64_t)v9);
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v5 + 32))(v8, v9, v4);
    swift_beginAccess();
    (*(void (**)(uint64_t, unsigned char *, uint64_t))(v5 + 40))(v3, v8, v4);
    swift_endAccess();
    sub_10050F848(a1, a1[3]);
    static Subscribers.Demand.unlimited.getter();
    return dispatch thunk of Subscription.request(_:)();
  }
}

uint64_t sub_100A4254C()
{
  sub_100A41D64();

  return static Subscribers.Demand.none.getter();
}

void sub_100A42574()
{
  uint64_t v1 = v0;
  swift_beginAccess();
  uint64_t v2 = type metadata accessor for CRLUIPropertyNotifier.PublisherSubscriber.Status();
  uint64_t v3 = *(void *)(v2 - 8);
  (*(void (**)(long long *, uint64_t, uint64_t))(v3 + 16))(&v6, v0 + 48, v2);
  if (v7 > 1)
  {
    sub_10053974C(&v6, (uint64_t)v8);
    sub_10050F848(v8, v9);
    dispatch thunk of Cancellable.cancel()();
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v8);
  }
  else
  {
    (*(void (**)(long long *, uint64_t))(v3 + 8))(&v6, v2);
  }
  memset(v8, 0, sizeof(v8));
  long long v9 = xmmword_10118D2A0;
  swift_beginAccess();
  (*(void (**)(uint64_t, void *, uint64_t))(v3 + 40))(v0 + 48, v8, v2);
  swift_endAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v5 = (void *)Strong;
    sub_100A419C0(v1);
  }
}

uint64_t sub_100A42724()
{
  uint64_t v1 = type metadata accessor for CRLUIPropertyNotifier.PublisherSubscriber.Status();
  uint64_t v2 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v1 - 8) + 8);

  return v2(v0 + 48, v1);
}

uint64_t sub_100A427C8()
{
  swift_unknownObjectWeakDestroy();
  swift_bridgeObjectRelease();
  uint64_t v1 = type metadata accessor for CRLUIPropertyNotifier.PublisherSubscriber.Status();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v0 + 48, v1);
  return v0;
}

uint64_t sub_100A4287C()
{
  sub_100A427C8();

  return swift_deallocClassInstance();
}

uint64_t sub_100A428AC(void *a1)
{
  return sub_100A42394(a1);
}

uint64_t sub_100A428D0()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 280))();
}

uint64_t sub_100A4291C()
{
  return sub_100A47F70();
}

uint64_t sub_100A42940()
{
  return *(void *)(v0 + *(void *)(*(void *)v0 + 320));
}

uint64_t sub_100A4295C(uint64_t a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *(void **)v2;
  uint64_t v6 = v5[37];
  uint64_t v7 = *(void *)(v6 - 8);
  __n128 v8 = __chkstk_darwin(a1, a2);
  uint64_t v10 = (char *)&v14 - v9;
  (*(void (**)(char *, char *, uint64_t, __n128))(v7 + 16))((char *)&v14 - v9, &v3[v5[39]], v6, v8);
  LOBYTE(v5) = (*(uint64_t (**)(void *, uint64_t))(v5[38] + 24))(a2, v6);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  if ((v5 & 1) == 0) {
    return static Subscribers.Demand.none.getter();
  }
  swift_unknownObjectRetain();
  id v11 = a2;
  sub_100A41D64();
  uint64_t v12 = static Subscribers.Demand.none.getter();

  swift_unknownObjectRelease();
  return v12;
}

uint64_t sub_100A42AE4()
{
  return (*(uint64_t (**)(uint64_t))(*(void *)(*(void *)(*(void *)v0 + 296) - 8) + 8))(v0 + *(void *)(*(void *)v0 + 312));
}

uint64_t *sub_100A42B3C()
{
  uint64_t v1 = *v0;
  swift_unknownObjectWeakDestroy();
  swift_bridgeObjectRelease();
  sub_100A48118((uint64_t)(v0 + 6));
  (*(void (**)(uint64_t))(*(void *)(*(void *)(v1 + 296) - 8) + 8))((uint64_t)v0 + *(void *)(*v0 + 312));
  return v0;
}

uint64_t sub_100A42BCC()
{
  sub_100A42B3C();

  return swift_deallocClassInstance();
}

uint64_t sub_100A42C20(uint64_t a1)
{
  return sub_100A4295C(*(void *)a1, *(void **)(a1 + 8));
}

uint64_t sub_100A42C2C()
{
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_100A41B9C();
    return swift_release();
  }
  return result;
}

uint64_t CRLUIPropertyNotifier.AllChanges.description.getter()
{
  return 0x746C6966206F6E28;
}

Swift::Int CRLUIPropertyNotifier.AllChanges.hashValue.getter()
{
  return Hasher._finalize()();
}

Swift::Int sub_100A42D28()
{
  return Hasher._finalize()();
}

Swift::Int sub_100A42D5C()
{
  Swift::Int result = sub_10050C034((uint64_t)&off_101504788);
  static CRLUIPropertyNotifier.KindFilter.invalidation = result;
  return result;
}

uint64_t *CRLUIPropertyNotifier.KindFilter.invalidation.unsafeMutableAddressor()
{
  if (qword_10166F750 != -1) {
    swift_once();
  }
  return &static CRLUIPropertyNotifier.KindFilter.invalidation;
}

uint64_t static CRLUIPropertyNotifier.KindFilter.invalidation.getter()
{
  if (qword_10166F750 != -1) {
    swift_once();
  }

  return swift_bridgeObjectRetain();
}

BOOL CRLUIPropertyNotifier.KindFilter.accepts(_:)(uint64_t a1, uint64_t a2)
{
  return sub_1006E62D8(*(_DWORD *)(a1 + OBJC_IVAR____TtC8Freeform15CRLChangeRecord_kind), a2);
}

unint64_t CRLUIPropertyNotifier.KindFilter.description.getter(uint64_t a1)
{
  if (*(void *)(a1 + 16) != 1)
  {
    _StringGuts.grow(_:)(19);
    swift_bridgeObjectRelease();
    unint64_t v6 = 0xD000000000000010;
    type metadata accessor for CRLChangeKind(0);
    sub_100A47064(&qword_10168CA90, type metadata accessor for CRLChangeKind);
    swift_bridgeObjectRetain();
    v4._uint64_t countAndFlagsBits = Set.description.getter();
    String.append(_:)(v4);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_5;
  }
  unint64_t v6 = 0;
  _StringGuts.grow(_:)(19);
  v2._object = (void *)0x800000010126A4E0;
  v2._uint64_t countAndFlagsBits = 0xD000000000000010;
  String.append(_:)(v2);
  unint64_t result = sub_100999680(a1);
  if ((result & 0x100000000) == 0)
  {
    type metadata accessor for CRLChangeKind(0);
    _print_unlocked<A, B>(_:_:)();
LABEL_5:
    v5._uint64_t countAndFlagsBits = 41;
    v5._object = (void *)0xE100000000000000;
    String.append(_:)(v5);
    return v6;
  }
  __break(1u);
  return result;
}

uint64_t CRLUIPropertyNotifier.KindFilter.hash(into:)(uint64_t a1, uint64_t a2)
{
  return sub_100A432A8(a1, a2, sub_100A45494);
}

Swift::Int CRLUIPropertyNotifier.KindFilter.hashValue.getter(uint64_t a1)
{
  return sub_100A43320(a1, (void (*)(unsigned char *, uint64_t))sub_100A45494);
}

BOOL sub_100A42FEC(uint64_t a1)
{
  return sub_1006E62D8(*(_DWORD *)(a1 + OBJC_IVAR____TtC8Freeform15CRLChangeRecord_kind), *v1);
}

Swift::Int sub_100A43004(uint64_t a1, uint64_t a2)
{
  return sub_100A43444(a1, a2, (void (*)(unsigned char *, uint64_t))sub_100A45494);
}

uint64_t sub_100A4301C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100A434BC(a1, a2, a3, sub_100A45494);
}

Swift::Int sub_100A43034(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100A43530(a1, a2, a3, (void (*)(unsigned char *, uint64_t))sub_100A45494);
}

unint64_t sub_100A4304C()
{
  return CRLUIPropertyNotifier.KindFilter.description.getter(*v0);
}

Swift::Int sub_100A43054(Swift::Int *a1, uint64_t *a2)
{
  return _s8Freeform21CRLUIPropertyNotifierC10KindFilterV23__derived_struct_equalsySbAE_AEtFZ_0(*a1, *a2);
}

BOOL CRLUIPropertyNotifier.PropertyFilter.accepts(_:)(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  swift_bridgeObjectRetain();
  uint64_t v3 = swift_bridgeObjectRetain();
  uint64_t v4 = sub_100A43E10(v3, a2, (uint64_t (*)(char *, unint64_t, uint64_t, uint64_t))sub_100A445E0);
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(v4 + 16);
  swift_release();
  return v5 != 0;
}

uint64_t CRLUIPropertyNotifier.PropertyFilter.description.getter(uint64_t a1)
{
  if (*(void *)(a1 + 16) != 1)
  {
    _StringGuts.grow(_:)(20);
    swift_bridgeObjectRelease();
    uint64_t v8 = 40;
    type metadata accessor for CRLChangeProperty(0);
    sub_100A47064(&qword_10168CA98, type metadata accessor for CRLChangeProperty);
    swift_bridgeObjectRetain();
    v7._uint64_t countAndFlagsBits = Set.description.getter();
    String.append(_:)(v7);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    unint64_t v5 = 0x800000010126A500;
    unint64_t v6 = 0x1000000000000011;
    goto LABEL_5;
  }
  uint64_t v8 = 0;
  _StringGuts.grow(_:)(19);
  v2._uint64_t countAndFlagsBits = 40;
  v2._object = (void *)0xE100000000000000;
  String.append(_:)(v2);
  uint64_t result = sub_100999604(a1);
  if ((v4 & 1) == 0)
  {
    type metadata accessor for CRLChangeProperty(0);
    _print_unlocked<A, B>(_:_:)();
    unint64_t v5 = 0x800000010126A520;
    unint64_t v6 = 0xD000000000000010;
LABEL_5:
    String.append(_:)(*(Swift::String *)&v6);
    return v8;
  }
  __break(1u);
  return result;
}

uint64_t CRLUIPropertyNotifier.PropertyFilter.hash(into:)(uint64_t a1, uint64_t a2)
{
  return sub_100A432A8(a1, a2, sub_100A45328);
}

uint64_t sub_100A432A8(uint64_t a1, uint64_t a2, void (*a3)(uint64_t, uint64_t))
{
  swift_bridgeObjectRetain();
  a3(a1, a2);

  return swift_bridgeObjectRelease();
}

Swift::Int CRLUIPropertyNotifier.PropertyFilter.hashValue.getter(uint64_t a1)
{
  return sub_100A43320(a1, (void (*)(unsigned char *, uint64_t))sub_100A45328);
}

Swift::Int sub_100A43320(uint64_t a1, void (*a2)(unsigned char *, uint64_t))
{
  Hasher.init(_seed:)();
  swift_bridgeObjectRetain();
  a2(v5, a1);
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

BOOL sub_100A43380()
{
  uint64_t v1 = *v0;
  swift_beginAccess();
  swift_bridgeObjectRetain();
  uint64_t v2 = swift_bridgeObjectRetain();
  uint64_t v3 = sub_100A43E10(v2, v1, (uint64_t (*)(char *, unint64_t, uint64_t, uint64_t))sub_100A445E0);
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(v3 + 16);
  swift_release();
  return v4 != 0;
}

Swift::Int sub_100A4342C(uint64_t a1, uint64_t a2)
{
  return sub_100A43444(a1, a2, (void (*)(unsigned char *, uint64_t))sub_100A45328);
}

Swift::Int sub_100A43444(uint64_t a1, uint64_t a2, void (*a3)(unsigned char *, uint64_t))
{
  uint64_t v5 = *v3;
  Hasher.init(_seed:)();
  swift_bridgeObjectRetain();
  a3(v7, v5);
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

uint64_t sub_100A434A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100A434BC(a1, a2, a3, sub_100A45328);
}

uint64_t sub_100A434BC(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t))
{
  uint64_t v7 = *v4;
  swift_bridgeObjectRetain();
  a4(a1, v7);

  return swift_bridgeObjectRelease();
}

Swift::Int sub_100A43518(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100A43530(a1, a2, a3, (void (*)(unsigned char *, uint64_t))sub_100A45328);
}

Swift::Int sub_100A43530(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(unsigned char *, uint64_t))
{
  uint64_t v6 = *v4;
  Hasher.init(_seed:)();
  swift_bridgeObjectRetain();
  a4(v8, v6);
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

uint64_t sub_100A4358C()
{
  return CRLUIPropertyNotifier.PropertyFilter.description.getter(*v0);
}

Swift::Int sub_100A43594(Swift::Int *a1, uint64_t *a2)
{
  return _s8Freeform21CRLUIPropertyNotifierC14PropertyFilterV23__derived_struct_equalsySbAE_AEtFZ_0(*a1, *a2);
}

uint64_t CRLUIPropertyNotifier.CustomFilter.filter.getter()
{
  uint64_t v1 = *v0;
  swift_retain();
  return v1;
}

uint64_t CRLUIPropertyNotifier.CustomFilter.accepts(_:)()
{
  return (*v0)() & 1;
}

uint64_t static CRLUIPropertyNotifier.CustomFilter.== infix(_:_:)()
{
  type metadata accessor for CRLUIPropertyNotifier.CustomFilter();

  return static UUID.== infix(_:_:)();
}

uint64_t CRLUIPropertyNotifier.CustomFilter.hash(into:)()
{
  return dispatch thunk of Hashable.hash(into:)();
}

unint64_t CRLUIPropertyNotifier.CustomFilter.description.getter()
{
  _StringGuts.grow(_:)(27);
  swift_bridgeObjectRelease();
  type metadata accessor for CRLUIPropertyNotifier.CustomFilter();
  type metadata accessor for UUID();
  sub_100A47064(&qword_101677460, (void (*)(uint64_t))&type metadata accessor for UUID);
  v0._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v0);
  swift_bridgeObjectRelease();
  v1._uint64_t countAndFlagsBits = 10558;
  v1._object = (void *)0xE200000000000000;
  String.append(_:)(v1);
  return 0xD000000000000017;
}

Swift::Int CRLUIPropertyNotifier.CustomFilter.hashValue.getter()
{
  return Hasher._finalize()();
}

Swift::Int sub_100A43848()
{
  return Hasher._finalize()();
}

uint64_t sub_100A438DC()
{
  return dispatch thunk of Hashable.hash(into:)();
}

Swift::Int sub_100A4395C()
{
  return Hasher._finalize()();
}

uint64_t sub_100A439F0()
{
  return static UUID.== infix(_:_:)();
}

uint64_t AnyCancellable.init(_:)(uint64_t a1)
{
  *(void *)(swift_allocObject() + 16) = a1;

  return dispatch thunk of AnyCancellable.__allocating_init(_:)();
}

uint64_t sub_100A43A60(uint64_t a1)
{
  uint64_t v2 = (void *)(a1 + 16);
  swift_beginAccess();
  unint64_t v3 = *(void *)(a1 + 16);
  if (!(v3 >> 62))
  {
    uint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v4) {
      goto LABEL_3;
    }
LABEL_10:
    swift_bridgeObjectRelease();
    swift_beginAccess();
    *uint64_t v2 = _swiftEmptyArrayStorage;
    return swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  uint64_t result = _CocoaArrayWrapper.endIndex.getter();
  uint64_t v4 = result;
  if (!result) {
    goto LABEL_10;
  }
LABEL_3:
  if (v4 >= 1)
  {
    for (uint64_t i = 0; i != v4; ++i)
    {
      if ((v3 & 0xC000000000000001) != 0) {
        specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        swift_retain();
      }
      AnyCancellable.cancel()();
      swift_release();
    }
    goto LABEL_10;
  }
  __break(1u);
  return result;
}

uint64_t AnyCancellable.init(_:_:)(uint64_t a1, unint64_t a2)
{
  sub_1005057FC((uint64_t *)&unk_101676C10);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_101177E70;
  *(void *)(v4 + 32) = a1;
  uint64_t v7 = v4;
  specialized Array._endMutation()();
  swift_retain();
  sub_1006E338C(a2);
  *(void *)(swift_allocObject() + 16) = v7;
  uint64_t v5 = dispatch thunk of AnyCancellable.__allocating_init(_:)();
  swift_release();
  return v5;
}

void sub_100A43C50(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  if (v3 != __CocoaSet.count.getter()) {
    return;
  }
  int64_t v4 = 0;
  uint64_t v5 = a2 + 56;
  uint64_t v6 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & *(void *)(a2 + 56);
  int64_t v9 = (unint64_t)(v6 + 63) >> 6;
  while (v8)
  {
    unint64_t v10 = __clz(__rbit64(v8));
    v8 &= v8 - 1;
    unint64_t v11 = v10 | (v4 << 6);
LABEL_6:
    id v12 = *(id *)(*(void *)(a2 + 48) + 8 * v11);
    char v13 = __CocoaSet.contains(_:)();

    if ((v13 & 1) == 0) {
      return;
    }
  }
  int64_t v14 = v4 + 1;
  if (__OFADD__(v4, 1))
  {
    __break(1u);
    goto LABEL_23;
  }
  if (v14 >= v9) {
    return;
  }
  unint64_t v15 = *(void *)(v5 + 8 * v14);
  ++v4;
  if (v15) {
    goto LABEL_19;
  }
  int64_t v4 = v14 + 1;
  if (v14 + 1 >= v9) {
    return;
  }
  unint64_t v15 = *(void *)(v5 + 8 * v4);
  if (v15)
  {
LABEL_19:
    unint64_t v8 = (v15 - 1) & v15;
    unint64_t v11 = __clz(__rbit64(v15)) + (v4 << 6);
    goto LABEL_6;
  }
  int64_t v16 = v14 + 2;
  if (v16 >= v9) {
    return;
  }
  unint64_t v15 = *(void *)(v5 + 8 * v16);
  if (v15)
  {
    int64_t v4 = v16;
    goto LABEL_19;
  }
  while (1)
  {
    int64_t v4 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v4 >= v9) {
      return;
    }
    unint64_t v15 = *(void *)(v5 + 8 * v4);
    ++v16;
    if (v15) {
      goto LABEL_19;
    }
  }
LABEL_23:
  __break(1u);
}

uint64_t sub_100A43DA4(uint64_t a1, uint64_t a2)
{
  return sub_100A43E10(a1, a2, (uint64_t (*)(char *, unint64_t, uint64_t, uint64_t))sub_100A44084);
}

uint64_t sub_100A43E10(uint64_t isStackAllocationSafe, uint64_t a2, uint64_t (*a3)(char *, unint64_t, uint64_t, uint64_t))
{
  uint64_t v5 = isStackAllocationSafe;
  char v6 = *(unsigned char *)(a2 + 32);
  unint64_t v7 = (unint64_t)((1 << v6) + 63) >> 6;
  size_t v8 = 8 * v7;
  if ((v6 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    __chkstk_darwin(isStackAllocationSafe, a2);
    bzero((char *)&v12 - ((v8 + 15) & 0x3FFFFFFFFFFFFFF0), v8);
    uint64_t v9 = a3((char *)&v12 - ((v8 + 15) & 0x3FFFFFFFFFFFFFF0), v7, v5, a2);
    swift_release();
  }
  else
  {
    unint64_t v10 = (void *)swift_slowAlloc();
    bzero(v10, v8);
    uint64_t v9 = a3((char *)v10, v7, v5, a2);
    swift_release();
    swift_slowDealloc();
  }
  return v9;
}

uint64_t sub_100A43FAC(uint64_t a1, uint64_t a2)
{
  return sub_100A43E10(a1, a2, (uint64_t (*)(char *, unint64_t, uint64_t, uint64_t))sub_100A44844);
}

uint64_t sub_100A44018(uint64_t a1, uint64_t a2)
{
  return sub_100A43E10(a1, a2, (uint64_t (*)(char *, unint64_t, uint64_t, uint64_t))sub_100A44C74);
}

uint64_t sub_100A44084(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v47 = a2;
  long long v49 = a1;
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v9 = __chkstk_darwin(v6, v8);
  unint64_t v11 = (char *)&v47 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9, v12);
  uint64_t v64 = (char *)&v47 - v13;
  uint64_t v14 = sub_1005057FC((uint64_t *)&unk_101674520);
  __chkstk_darwin(v14 - 8, v15);
  long long v17 = (char *)&v47 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = *(void *)(a3 + 64);
  uint64_t v51 = a3 + 64;
  uint64_t v19 = 1 << *(unsigned char *)(a3 + 32);
  if (v19 < 64) {
    uint64_t v20 = ~(-1 << v19);
  }
  else {
    uint64_t v20 = -1;
  }
  unint64_t v21 = v20 & v18;
  int64_t v52 = (unint64_t)(v19 + 63) >> 6;
  uint64_t v62 = v7 + 16;
  uint64_t v63 = a4;
  uint64_t v56 = v7;
  double v57 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56);
  uint64_t v54 = (void (**)(char *, char *, uint64_t))(v7 + 32);
  uint64_t v55 = v7 + 48;
  uint64_t v61 = a4 + 56;
  long long v22 = (void (**)(char *, uint64_t))(v7 + 8);
  uint64_t v58 = a3;
  uint64_t result = swift_bridgeObjectRetain();
  uint64_t v48 = 0;
  int64_t v24 = 0;
  int64_t v50 = v17;
  while (v21)
  {
    unint64_t v26 = __clz(__rbit64(v21));
    uint64_t v27 = (v21 - 1) & v21;
    unint64_t v28 = v26 | (v24 << 6);
LABEL_22:
    uint64_t v32 = v56;
    uint64_t v33 = *(void *)(v56 + 72);
    uint64_t v34 = *(void (**)(char *, unint64_t, uint64_t))(v56 + 16);
    v34(v17, *(void *)(v58 + 48) + v33 * v28, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v32 + 56))(v17, 0, 1, v6);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(v17, 1, v6) == 1) {
      goto LABEL_38;
    }
    unint64_t v59 = v27;
    int64_t v60 = v24;
    (*v54)(v64, v17, v6);
    uint64_t v35 = v63;
    sub_100A47064((unint64_t *)&qword_1016770E0, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v36 = dispatch thunk of Hashable._rawHashValue(seed:)();
    uint64_t v37 = -1 << *(unsigned char *)(v35 + 32);
    unint64_t v38 = v36 & ~v37;
    if ((*(void *)(v61 + ((v38 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v38))
    {
      uint64_t v53 = (unint64_t)v22 & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
      uint64_t v39 = ~v37;
      while (1)
      {
        v34(v11, *(void *)(v63 + 48) + v38 * v33, v6);
        sub_100A47064((unint64_t *)&qword_10167BDC0, (void (*)(uint64_t))&type metadata accessor for UUID);
        char v40 = dispatch thunk of static Equatable.== infix(_:_:)();
        uint64_t v25 = *v22;
        (*v22)(v11, v6);
        if (v40) {
          break;
        }
        unint64_t v38 = (v38 + 1) & v39;
        if (((*(void *)(v61 + ((v38 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v38) & 1) == 0)
        {
          long long v17 = v50;
          int64_t v24 = v60;
          goto LABEL_6;
        }
      }
      uint64_t result = ((uint64_t (*)(char *, uint64_t))v25)(v64, v6);
      uint64_t v41 = (v38 >> 3) & 0x1FFFFFFFFFFFFFF8;
      long long v17 = v50;
      uint64_t v42 = *(unint64_t *)((char *)v49 + v41);
      *(unint64_t *)((char *)v49 + v41) = v42 | (1 << v38);
      BOOL v43 = (v42 & (1 << v38)) == 0;
      unint64_t v21 = v59;
      int64_t v24 = v60;
      if (v43)
      {
        BOOL v29 = __OFADD__(v48++, 1);
        if (v29) {
          goto LABEL_41;
        }
      }
    }
    else
    {
      uint64_t v25 = *v22;
      int64_t v24 = v60;
LABEL_6:
      uint64_t result = ((uint64_t (*)(char *, uint64_t))v25)(v64, v6);
      unint64_t v21 = v59;
    }
  }
  BOOL v29 = __OFADD__(v24++, 1);
  if (v29)
  {
    __break(1u);
    goto LABEL_40;
  }
  if (v24 >= v52) {
    goto LABEL_37;
  }
  unint64_t v30 = *(void *)(v51 + 8 * v24);
  if (v30)
  {
LABEL_21:
    uint64_t v27 = (v30 - 1) & v30;
    unint64_t v28 = __clz(__rbit64(v30)) + (v24 << 6);
    goto LABEL_22;
  }
  int64_t v31 = v24 + 1;
  if (v24 + 1 >= v52) {
    goto LABEL_37;
  }
  unint64_t v30 = *(void *)(v51 + 8 * v31);
  if (v30) {
    goto LABEL_20;
  }
  int64_t v31 = v24 + 2;
  if (v24 + 2 >= v52) {
    goto LABEL_37;
  }
  unint64_t v30 = *(void *)(v51 + 8 * v31);
  if (v30) {
    goto LABEL_20;
  }
  int64_t v31 = v24 + 3;
  if (v24 + 3 >= v52) {
    goto LABEL_37;
  }
  unint64_t v30 = *(void *)(v51 + 8 * v31);
  if (v30) {
    goto LABEL_20;
  }
  int64_t v31 = v24 + 4;
  if (v24 + 4 >= v52)
  {
LABEL_37:
    (*v57)(v17, 1, 1, v6);
LABEL_38:
    swift_release();
    uint64_t v44 = v47;
    uint64_t v45 = v48;
    uint64_t v46 = v63;
    swift_retain();
    return sub_10052B840(v49, v44, v45, v46);
  }
  unint64_t v30 = *(void *)(v51 + 8 * v31);
  if (v30)
  {
LABEL_20:
    int64_t v24 = v31;
    goto LABEL_21;
  }
  while (1)
  {
    int64_t v24 = v31 + 1;
    if (__OFADD__(v31, 1)) {
      break;
    }
    if (v24 >= v52) {
      goto LABEL_37;
    }
    unint64_t v30 = *(void *)(v51 + 8 * v24);
    ++v31;
    if (v30) {
      goto LABEL_21;
    }
  }
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

Swift::Int sub_100A445E0(Swift::Int result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = (unint64_t *)result;
  uint64_t v7 = 0;
  int64_t v8 = 0;
  uint64_t v9 = a3 + 64;
  uint64_t v10 = 1 << *(unsigned char *)(a3 + 32);
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  else {
    uint64_t v11 = -1;
  }
  unint64_t v12 = v11 & *(void *)(a3 + 64);
  int64_t v31 = (unint64_t)(v10 + 63) >> 6;
  uint64_t v13 = a4 + 56;
LABEL_5:
  uint64_t v30 = v7;
  while (v12)
  {
    unint64_t v18 = __clz(__rbit64(v12));
    v12 &= v12 - 1;
    unint64_t v19 = v18 | (v8 << 6);
LABEL_26:
    Swift::UInt v23 = *(void *)(*(void *)(a3 + 48) + 8 * v19);
    Hasher.init(_seed:)();
    Hasher._combine(_:)(v23);
    uint64_t result = Hasher._finalize()();
    uint64_t v24 = -1 << *(unsigned char *)(a4 + 32);
    unint64_t v25 = result & ~v24;
    uint64_t v14 = v25 >> 6;
    uint64_t v15 = 1 << v25;
    if (((1 << v25) & *(void *)(v13 + 8 * (v25 >> 6))) != 0)
    {
      uint64_t v26 = *(void *)(a4 + 48);
      if (*(void *)(v26 + 8 * v25) == v23)
      {
LABEL_7:
        uint64_t v16 = v14;
        unint64_t v17 = v6[v14];
        v6[v16] = v15 | v17;
        if ((v15 & v17) == 0)
        {
          uint64_t v7 = v30 + 1;
          if (!__OFADD__(v30, 1)) {
            goto LABEL_5;
          }
          __break(1u);
LABEL_35:
          swift_retain();
          return sub_10052C224(v6, a2, v30, a4);
        }
      }
      else
      {
        for (unint64_t i = v25 + 1; ; unint64_t i = v28 + 1)
        {
          unint64_t v28 = i & ~v24;
          if (((*(void *)(v13 + ((v28 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v28) & 1) == 0) {
            break;
          }
          if (*(void *)(v26 + 8 * v28) == v23)
          {
            uint64_t v14 = v28 >> 6;
            uint64_t v15 = 1 << v28;
            goto LABEL_7;
          }
        }
      }
    }
  }
  int64_t v20 = v8 + 1;
  if (__OFADD__(v8, 1))
  {
    __break(1u);
    goto LABEL_37;
  }
  if (v20 >= v31) {
    goto LABEL_35;
  }
  unint64_t v21 = *(void *)(v9 + 8 * v20);
  ++v8;
  if (v21) {
    goto LABEL_25;
  }
  int64_t v8 = v20 + 1;
  if (v20 + 1 >= v31) {
    goto LABEL_35;
  }
  unint64_t v21 = *(void *)(v9 + 8 * v8);
  if (v21) {
    goto LABEL_25;
  }
  int64_t v8 = v20 + 2;
  if (v20 + 2 >= v31) {
    goto LABEL_35;
  }
  unint64_t v21 = *(void *)(v9 + 8 * v8);
  if (v21) {
    goto LABEL_25;
  }
  int64_t v8 = v20 + 3;
  if (v20 + 3 >= v31) {
    goto LABEL_35;
  }
  unint64_t v21 = *(void *)(v9 + 8 * v8);
  if (v21)
  {
LABEL_25:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v19 = __clz(__rbit64(v21)) + (v8 << 6);
    goto LABEL_26;
  }
  int64_t v22 = v20 + 4;
  if (v22 >= v31) {
    goto LABEL_35;
  }
  unint64_t v21 = *(void *)(v9 + 8 * v22);
  if (v21)
  {
    int64_t v8 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v8 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v8 >= v31) {
      goto LABEL_35;
    }
    unint64_t v21 = *(void *)(v9 + 8 * v8);
    ++v22;
    if (v21) {
      goto LABEL_25;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

void sub_100A44844(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a3;
  if ((a3 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    __CocoaSet.makeIterator()();
    sub_10050BF48(0, (unint64_t *)&qword_101674210);
    sub_100A480B0();
    Set.Iterator.init(_cocoa:)();
    uint64_t v4 = v40;
    uint64_t v35 = v41;
    uint64_t v5 = v42;
    uint64_t v6 = v43;
    uint64_t v7 = v44;
  }
  else
  {
    uint64_t v8 = -1 << *(unsigned char *)(a3 + 32);
    uint64_t v35 = a3 + 56;
    uint64_t v5 = ~v8;
    uint64_t v9 = -v8;
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    uint64_t v7 = v10 & *(void *)(a3 + 56);
    swift_bridgeObjectRetain();
    uint64_t v6 = 0;
  }
  uint64_t v33 = 0;
  int64_t v34 = (unint64_t)(v5 + 64) >> 6;
  uint64_t v38 = a4 + 56;
  uint64_t v37 = v4;
LABEL_8:
  uint64_t v11 = v6;
  unint64_t v12 = v7;
  while (v4 < 0)
  {
    if (!__CocoaSet.Iterator.next()()) {
      goto LABEL_45;
    }
    sub_10050BF48(0, (unint64_t *)&qword_101674210);
    swift_unknownObjectRetain();
    swift_dynamicCast();
    id v14 = v45;
    swift_unknownObjectRelease();
    uint64_t v6 = v11;
    uint64_t v7 = v12;
    if (!v45) {
      goto LABEL_45;
    }
LABEL_33:
    Swift::Int v18 = NSObject._rawHashValue(seed:)(*(void *)(a4 + 40));
    uint64_t v19 = -1 << *(unsigned char *)(a4 + 32);
    unint64_t v20 = v18 & ~v19;
    unint64_t v21 = v20 >> 6;
    uint64_t v22 = 1 << v20;
    if (((1 << v20) & *(void *)(v38 + 8 * (v20 >> 6))) == 0) {
      goto LABEL_9;
    }
    sub_10050BF48(0, (unint64_t *)&qword_101674210);
    id v23 = *(id *)(*(void *)(a4 + 48) + 8 * v20);
    char v24 = static NSObject.== infix(_:_:)();

    if (v24)
    {

LABEL_41:
      uint64_t v4 = v37;
      unint64_t v30 = a1[v21];
      a1[v21] = v22 | v30;
      uint64_t v11 = v6;
      unint64_t v12 = v7;
      if ((v22 & v30) == 0)
      {
        if (!__OFADD__(v33++, 1)) {
          goto LABEL_8;
        }
        __break(1u);
        goto LABEL_45;
      }
    }
    else
    {
      uint64_t v25 = ~v19;
      for (unint64_t i = v20 + 1; ; unint64_t i = v27 + 1)
      {
        unint64_t v27 = i & v25;
        if (((*(void *)(v38 + (((i & v25) >> 3) & 0xFFFFFFFFFFFFFF8)) >> (i & v25)) & 1) == 0) {
          break;
        }
        id v28 = *(id *)(*(void *)(a4 + 48) + 8 * v27);
        char v29 = static NSObject.== infix(_:_:)();

        if (v29)
        {

          unint64_t v21 = v27 >> 6;
          uint64_t v22 = 1 << v27;
          goto LABEL_41;
        }
      }
LABEL_9:

      uint64_t v11 = v6;
      uint64_t v4 = v37;
      unint64_t v12 = v7;
    }
  }
  if (v12)
  {
    uint64_t v7 = (v12 - 1) & v12;
    unint64_t v13 = __clz(__rbit64(v12)) | (v11 << 6);
    uint64_t v6 = v11;
LABEL_32:
    id v14 = *(id *)(*(void *)(v4 + 48) + 8 * v13);
    if (!v14) {
      goto LABEL_45;
    }
    goto LABEL_33;
  }
  int64_t v15 = v11 + 1;
  if (!__OFADD__(v11, 1))
  {
    if (v15 >= v34) {
      goto LABEL_45;
    }
    unint64_t v16 = *(void *)(v35 + 8 * v15);
    uint64_t v6 = v11 + 1;
    if (!v16)
    {
      uint64_t v6 = v11 + 2;
      if (v11 + 2 >= v34) {
        goto LABEL_45;
      }
      unint64_t v16 = *(void *)(v35 + 8 * v6);
      if (!v16)
      {
        uint64_t v6 = v11 + 3;
        if (v11 + 3 >= v34) {
          goto LABEL_45;
        }
        unint64_t v16 = *(void *)(v35 + 8 * v6);
        if (!v16)
        {
          uint64_t v6 = v11 + 4;
          if (v11 + 4 >= v34) {
            goto LABEL_45;
          }
          unint64_t v16 = *(void *)(v35 + 8 * v6);
          if (!v16)
          {
            uint64_t v6 = v11 + 5;
            if (v11 + 5 >= v34) {
              goto LABEL_45;
            }
            unint64_t v16 = *(void *)(v35 + 8 * v6);
            if (!v16)
            {
              uint64_t v17 = v11 + 6;
              while (v34 != v17)
              {
                unint64_t v16 = *(void *)(v35 + 8 * v17++);
                if (v16)
                {
                  uint64_t v6 = v17 - 1;
                  goto LABEL_31;
                }
              }
LABEL_45:
              sub_10052E1EC();
              swift_retain();
              sub_10052C218(a1, a2, v33, a4);
              return;
            }
          }
        }
      }
    }
LABEL_31:
    uint64_t v7 = (v16 - 1) & v16;
    unint64_t v13 = __clz(__rbit64(v16)) + (v6 << 6);
    goto LABEL_32;
  }
  __break(1u);
}

void sub_100A44C74(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a3;
  if ((a3 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    __CocoaSet.makeIterator()();
    type metadata accessor for CRLCollaborationParticipant(0);
    sub_100A47064((unint64_t *)&unk_10167C500, (void (*)(uint64_t))type metadata accessor for CRLCollaborationParticipant);
    Set.Iterator.init(_cocoa:)();
    uint64_t v4 = v41;
    uint64_t v36 = v42;
    uint64_t v5 = v43;
    uint64_t v6 = v44;
    unint64_t v7 = v45;
  }
  else
  {
    uint64_t v8 = -1 << *(unsigned char *)(a3 + 32);
    uint64_t v36 = a3 + 56;
    uint64_t v5 = ~v8;
    uint64_t v9 = -v8;
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v7 = v10 & *(void *)(a3 + 56);
    swift_bridgeObjectRetain();
    uint64_t v6 = 0;
  }
  uint64_t v34 = 0;
  int64_t v35 = (unint64_t)(v5 + 64) >> 6;
  uint64_t v39 = a4 + 56;
  uint64_t v38 = v4;
LABEL_8:
  uint64_t v11 = v6;
  unint64_t v12 = v7;
  while (v4 < 0)
  {
    if (!__CocoaSet.Iterator.next()()) {
      goto LABEL_45;
    }
    type metadata accessor for CRLCollaborationParticipant(0);
    swift_unknownObjectRetain();
    swift_dynamicCast();
    id v15 = v46;
    swift_unknownObjectRelease();
    uint64_t v6 = v11;
    uint64_t v13 = v12;
    if (!v46) {
      goto LABEL_45;
    }
LABEL_33:
    Swift::Int v19 = NSObject._rawHashValue(seed:)(*(void *)(a4 + 40));
    uint64_t v20 = -1 << *(unsigned char *)(a4 + 32);
    unint64_t v21 = v19 & ~v20;
    unint64_t v22 = v21 >> 6;
    uint64_t v23 = 1 << v21;
    if (((1 << v21) & *(void *)(v39 + 8 * (v21 >> 6))) == 0) {
      goto LABEL_9;
    }
    type metadata accessor for CRLCollaborationParticipant(0);
    id v24 = *(id *)(*(void *)(a4 + 48) + 8 * v21);
    char v25 = static NSObject.== infix(_:_:)();

    if (v25)
    {

LABEL_41:
      uint64_t v4 = v38;
      unint64_t v31 = a1[v22];
      a1[v22] = v23 | v31;
      uint64_t v11 = v6;
      unint64_t v7 = v13;
      unint64_t v12 = v13;
      if ((v23 & v31) == 0)
      {
        if (!__OFADD__(v34++, 1)) {
          goto LABEL_8;
        }
        __break(1u);
        goto LABEL_45;
      }
    }
    else
    {
      uint64_t v26 = ~v20;
      for (unint64_t i = v21 + 1; ; unint64_t i = v28 + 1)
      {
        unint64_t v28 = i & v26;
        if (((*(void *)(v39 + (((i & v26) >> 3) & 0xFFFFFFFFFFFFFF8)) >> (i & v26)) & 1) == 0) {
          break;
        }
        id v29 = *(id *)(*(void *)(a4 + 48) + 8 * v28);
        char v30 = static NSObject.== infix(_:_:)();

        if (v30)
        {

          unint64_t v22 = v28 >> 6;
          uint64_t v23 = 1 << v28;
          goto LABEL_41;
        }
      }
LABEL_9:

      uint64_t v11 = v6;
      uint64_t v4 = v38;
      unint64_t v12 = v13;
    }
  }
  if (v12)
  {
    uint64_t v13 = (v12 - 1) & v12;
    unint64_t v14 = __clz(__rbit64(v12)) | (v11 << 6);
    uint64_t v6 = v11;
LABEL_32:
    id v15 = *(id *)(*(void *)(v4 + 48) + 8 * v14);
    if (!v15) {
      goto LABEL_45;
    }
    goto LABEL_33;
  }
  int64_t v16 = v11 + 1;
  if (!__OFADD__(v11, 1))
  {
    if (v16 >= v35) {
      goto LABEL_45;
    }
    unint64_t v17 = *(void *)(v36 + 8 * v16);
    uint64_t v6 = v11 + 1;
    if (!v17)
    {
      uint64_t v6 = v11 + 2;
      if (v11 + 2 >= v35) {
        goto LABEL_45;
      }
      unint64_t v17 = *(void *)(v36 + 8 * v6);
      if (!v17)
      {
        uint64_t v6 = v11 + 3;
        if (v11 + 3 >= v35) {
          goto LABEL_45;
        }
        unint64_t v17 = *(void *)(v36 + 8 * v6);
        if (!v17)
        {
          uint64_t v6 = v11 + 4;
          if (v11 + 4 >= v35) {
            goto LABEL_45;
          }
          unint64_t v17 = *(void *)(v36 + 8 * v6);
          if (!v17)
          {
            uint64_t v6 = v11 + 5;
            if (v11 + 5 >= v35) {
              goto LABEL_45;
            }
            unint64_t v17 = *(void *)(v36 + 8 * v6);
            if (!v17)
            {
              uint64_t v18 = v11 + 6;
              while (v35 != v18)
              {
                unint64_t v17 = *(void *)(v36 + 8 * v18++);
                if (v17)
                {
                  uint64_t v6 = v18 - 1;
                  goto LABEL_31;
                }
              }
LABEL_45:
              sub_10052E1EC();
              swift_retain();
              sub_10052D1F8(a1, a2, v34, a4);
              return;
            }
          }
        }
      }
    }
LABEL_31:
    uint64_t v13 = (v17 - 1) & v17;
    unint64_t v14 = __clz(__rbit64(v17)) + (v6 << 6);
    goto LABEL_32;
  }
  __break(1u);
}

void sub_100A450A4(uint64_t a1, uint64_t a2)
{
  Swift::Int v3 = Hasher._finalize()();
  if ((a2 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    __CocoaSet.makeIterator()();
    type metadata accessor for CRLBoardItem(0);
    sub_100A47064((unint64_t *)&qword_101676C20, (void (*)(uint64_t))type metadata accessor for CRLBoardItem);
    Set.Iterator.init(_cocoa:)();
    a2 = v22;
    uint64_t v4 = v23;
    uint64_t v5 = v24;
    int64_t v6 = v25;
    unint64_t v7 = v26;
  }
  else
  {
    uint64_t v8 = -1 << *(unsigned char *)(a2 + 32);
    uint64_t v4 = a2 + 56;
    uint64_t v5 = ~v8;
    uint64_t v9 = -v8;
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v7 = v10 & *(void *)(a2 + 56);
    swift_bridgeObjectRetain();
    int64_t v6 = 0;
  }
  Swift::UInt v11 = 0;
  int64_t v12 = (unint64_t)(v5 + 64) >> 6;
  while (a2 < 0)
  {
    if (!__CocoaSet.Iterator.next()()) {
      goto LABEL_26;
    }
    type metadata accessor for CRLBoardItem(0);
    swift_dynamicCast();
    int64_t v16 = v21;
    if (!v21) {
      goto LABEL_26;
    }
    int64_t v15 = v6;
    uint64_t v13 = v7;
LABEL_10:
    Swift::Int v18 = NSObject._rawHashValue(seed:)(v3);

    v11 ^= v18;
    int64_t v6 = v15;
    unint64_t v7 = v13;
  }
  if (v7)
  {
    uint64_t v13 = (v7 - 1) & v7;
    unint64_t v14 = __clz(__rbit64(v7)) | (v6 << 6);
    int64_t v15 = v6;
LABEL_9:
    int64_t v16 = *(void **)(*(void *)(a2 + 48) + 8 * v14);
    unint64_t v21 = v16;
    id v17 = v16;
    if (!v16) {
      goto LABEL_26;
    }
    goto LABEL_10;
  }
  int64_t v15 = v6 + 1;
  if (!__OFADD__(v6, 1))
  {
    if (v15 >= v12) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v4 + 8 * v15);
    if (!v19)
    {
      int64_t v15 = v6 + 2;
      if (v6 + 2 >= v12) {
        goto LABEL_26;
      }
      unint64_t v19 = *(void *)(v4 + 8 * v15);
      if (!v19)
      {
        int64_t v20 = v6 + 3;
        while (v12 != v20)
        {
          unint64_t v19 = *(void *)(v4 + 8 * v20++);
          if (v19)
          {
            int64_t v15 = v20 - 1;
            goto LABEL_22;
          }
        }
LABEL_26:
        sub_10052E1EC();
        Hasher._combine(_:)(v11);
        return;
      }
    }
LABEL_22:
    uint64_t v13 = (v19 - 1) & v19;
    unint64_t v14 = __clz(__rbit64(v19)) + (v15 << 6);
    goto LABEL_9;
  }
  __break(1u);
}

void sub_100A45328(uint64_t a1, uint64_t a2)
{
  Hasher._finalize()();
  Swift::UInt v3 = 0;
  int64_t v4 = 0;
  uint64_t v5 = a2 + 56;
  uint64_t v6 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & *(void *)(a2 + 56);
  int64_t v9 = (unint64_t)(v6 + 63) >> 6;
  while (1)
  {
    if (v8)
    {
      unint64_t v10 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v11 = v10 | (v4 << 6);
      goto LABEL_5;
    }
    if (__OFADD__(v4++, 1)) {
      goto LABEL_19;
    }
    if (v4 >= v9)
    {
LABEL_17:
      Hasher._combine(_:)(v3);
      return;
    }
    unint64_t v14 = *(void *)(v5 + 8 * v4);
    if (!v14) {
      break;
    }
LABEL_16:
    unint64_t v8 = (v14 - 1) & v14;
    unint64_t v11 = __clz(__rbit64(v14)) + (v4 << 6);
LABEL_5:
    Swift::UInt v12 = *(void *)(*(void *)(a2 + 48) + 8 * v11);
    Hasher.init(_seed:)();
    Hasher._combine(_:)(v12);
    v3 ^= Hasher._finalize()();
  }
  int64_t v15 = v4 + 1;
  if (v4 + 1 >= v9) {
    goto LABEL_17;
  }
  unint64_t v14 = *(void *)(v5 + 8 * v15);
  if (v14)
  {
    ++v4;
    goto LABEL_16;
  }
  while (1)
  {
    int64_t v4 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v4 >= v9) {
      goto LABEL_17;
    }
    unint64_t v14 = *(void *)(v5 + 8 * v4);
    ++v15;
    if (v14) {
      goto LABEL_16;
    }
  }
  __break(1u);
LABEL_19:
  __break(1u);
}

void sub_100A45494(uint64_t a1, uint64_t a2)
{
  Hasher._finalize()();
  Swift::UInt v3 = 0;
  int64_t v4 = 0;
  uint64_t v5 = a2 + 56;
  uint64_t v6 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & *(void *)(a2 + 56);
  int64_t v9 = (unint64_t)(v6 + 63) >> 6;
  while (1)
  {
    if (v8)
    {
      unint64_t v10 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v11 = v10 | (v4 << 6);
      goto LABEL_5;
    }
    if (__OFADD__(v4++, 1)) {
      goto LABEL_19;
    }
    if (v4 >= v9)
    {
LABEL_17:
      Hasher._combine(_:)(v3);
      return;
    }
    unint64_t v14 = *(void *)(v5 + 8 * v4);
    if (!v14) {
      break;
    }
LABEL_16:
    unint64_t v8 = (v14 - 1) & v14;
    unint64_t v11 = __clz(__rbit64(v14)) + (v4 << 6);
LABEL_5:
    Swift::UInt32 v12 = *(_DWORD *)(*(void *)(a2 + 48) + 4 * v11);
    Hasher.init(_seed:)();
    Hasher._combine(_:)(v12);
    v3 ^= Hasher._finalize()();
  }
  int64_t v15 = v4 + 1;
  if (v4 + 1 >= v9) {
    goto LABEL_17;
  }
  unint64_t v14 = *(void *)(v5 + 8 * v15);
  if (v14)
  {
    ++v4;
    goto LABEL_16;
  }
  while (1)
  {
    int64_t v4 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v4 >= v9) {
      goto LABEL_17;
    }
    unint64_t v14 = *(void *)(v5 + 8 * v4);
    ++v15;
    if (v14) {
      goto LABEL_16;
    }
  }
  __break(1u);
LABEL_19:
  __break(1u);
}

void sub_100A45600(long long *a1, uint64_t a2)
{
  uint64_t v4 = _s17CategoryViewModelVMa();
  uint64_t v32 = *(void *)(v4 - 8);
  __chkstk_darwin(v4, v5);
  uint64_t v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8, v9);
  unint64_t v11 = (char *)&v29 - v10;
  uint64_t v12 = *((void *)a1 + 8);
  long long v13 = a1[1];
  long long v34 = *a1;
  long long v35 = v13;
  long long v14 = a1[2];
  long long v15 = a1[3];
  id v29 = a1;
  long long v36 = v14;
  long long v37 = v15;
  uint64_t v38 = v12;
  Swift::Int v31 = Hasher._finalize()();
  uint64_t v16 = *(void *)(a2 + 56);
  uint64_t v30 = a2 + 56;
  uint64_t v17 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v18 = -1;
  if (v17 < 64) {
    uint64_t v18 = ~(-1 << v17);
  }
  unint64_t v19 = v18 & v16;
  int64_t v20 = (unint64_t)(v17 + 63) >> 6;
  uint64_t v33 = a2;
  swift_bridgeObjectRetain();
  Swift::UInt v21 = 0;
  int64_t v22 = 0;
  while (1)
  {
    if (v19)
    {
      unint64_t v24 = __clz(__rbit64(v19));
      v19 &= v19 - 1;
      unint64_t v25 = v24 | (v22 << 6);
      goto LABEL_18;
    }
    if (__OFADD__(v22++, 1)) {
      goto LABEL_22;
    }
    if (v22 >= v20)
    {
LABEL_20:
      swift_release();
      Hasher._combine(_:)(v21);
      return;
    }
    unint64_t v27 = *(void *)(v30 + 8 * v22);
    if (!v27) {
      break;
    }
LABEL_17:
    unint64_t v19 = (v27 - 1) & v27;
    unint64_t v25 = __clz(__rbit64(v27)) + (v22 << 6);
LABEL_18:
    sub_100A48294(*(void *)(v33 + 48) + *(void *)(v32 + 72) * v25, (uint64_t)v11, (uint64_t (*)(void))_s17CategoryViewModelVMa);
    sub_100A48198((uint64_t)v11, (uint64_t)v7, (uint64_t (*)(void))_s17CategoryViewModelVMa);
    Hasher.init(_seed:)();
    type metadata accessor for UUID();
    sub_100A47064((unint64_t *)&qword_1016770E0, (void (*)(uint64_t))&type metadata accessor for UUID);
    dispatch thunk of Hashable.hash(into:)();
    swift_bridgeObjectRetain();
    String.hash(into:)();
    swift_bridgeObjectRelease();
    if (*(void *)&v7[*(int *)(v4 + 24) + 8])
    {
      Hasher._combine(_:)(1u);
      swift_bridgeObjectRetain();
      String.hash(into:)();
      swift_bridgeObjectRelease();
    }
    else
    {
      Hasher._combine(_:)(0);
    }
    swift_bridgeObjectRetain();
    String.hash(into:)();
    swift_bridgeObjectRelease();
    Hasher._combine(_:)(*(void *)&v7[*(int *)(v4 + 32)]);
    Swift::Int v23 = Hasher._finalize()();
    sub_100A48050((uint64_t)v7, (uint64_t (*)(void))_s17CategoryViewModelVMa);
    v21 ^= v23;
  }
  int64_t v28 = v22 + 1;
  if (v22 + 1 >= v20) {
    goto LABEL_20;
  }
  unint64_t v27 = *(void *)(v30 + 8 * v28);
  if (v27)
  {
    ++v22;
    goto LABEL_17;
  }
  while (1)
  {
    int64_t v22 = v28 + 1;
    if (__OFADD__(v28, 1)) {
      break;
    }
    if (v22 >= v20) {
      goto LABEL_20;
    }
    unint64_t v27 = *(void *)(v30 + 8 * v22);
    ++v28;
    if (v27) {
      goto LABEL_17;
    }
  }
  __break(1u);
LABEL_22:
  __break(1u);
}

uint64_t sub_100A45994(void *a1, uint64_t a2)
{
  v12[3] = sub_1005057FC(&qword_10168D120);
  void v12[4] = sub_100523288(&qword_10168D128, &qword_10168D120);
  v12[0] = a1;
  uint64_t v4 = a2 + 48;
  swift_beginAccess();
  sub_100522E9C(v4, (uint64_t)v10, &qword_10168CFD0);
  uint64_t v5 = v11;
  id v6 = a1;
  sub_100A48118((uint64_t)v10);
  if (v5)
  {
    sub_100A3F1BC();
  }
  else
  {
    sub_1005498A4((uint64_t)v12, (uint64_t)v10);
    sub_10051B3EC((uint64_t)v10, (uint64_t)v9, &qword_10168CFD0);
    swift_beginAccess();
    sub_100A4822C((uint64_t)v9, v4);
    swift_endAccess();
    uint64_t v7 = static Subscribers.Demand.unlimited.getter();
    sub_1007BB1B8(v7);
  }
  return _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v12);
}

unint64_t sub_100A45AB0(void *a1)
{
  uint64_t v1 = a1[2];
  if (!v1) {
    return (unint64_t)&_swiftEmptyDictionarySingleton;
  }
  sub_1005057FC(&qword_1016891B0);
  Swift::UInt v3 = (void *)static _DictionaryStorage.allocate(capacity:)();
  uint64_t v4 = a1[4];
  uint64_t v5 = (void *)a1[5];
  unint64_t result = sub_1009563E8(v4);
  if (v7)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    id v17 = v5;
    return (unint64_t)v3;
  }
  uint64_t v8 = (void **)(a1 + 7);
  while (1)
  {
    *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v9 = 8 * result;
    *(void *)(v3[6] + v9) = v4;
    *(void *)(v3[7] + v9) = v5;
    uint64_t v10 = v3[2];
    BOOL v11 = __OFADD__(v10, 1);
    uint64_t v12 = v10 + 1;
    if (v11) {
      break;
    }
    v3[2] = v12;
    if (!--v1) {
      goto LABEL_8;
    }
    long long v13 = v8 + 2;
    uint64_t v4 = (uint64_t)*(v8 - 1);
    long long v14 = *v8;
    id v15 = v5;
    unint64_t result = sub_1009563E8(v4);
    uint64_t v8 = v13;
    uint64_t v5 = v14;
    if (v16) {
      goto LABEL_7;
    }
  }
  __break(1u);
  return result;
}

unint64_t sub_100A45BA8(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (unint64_t)_swiftEmptyDictionarySingleton;
  }
  sub_1005057FC(&qword_10168CF98);
  Swift::UInt v3 = (void *)static _DictionaryStorage.allocate(capacity:)();
  long long v13 = *(_OWORD *)(a1 + 32);
  unint64_t result = sub_100955F14(*(void *)(a1 + 32));
  if (v5)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    swift_bridgeObjectRetain();
    return (unint64_t)v3;
  }
  id v6 = (long long *)(a1 + 48);
  uint64_t v7 = v1 - 1;
  while (1)
  {
    *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(void *)(v3[6] + 8 * result) = v13;
    *(void *)(v3[7] + 8 * result) = *((void *)&v13 + 1);
    uint64_t v8 = v3[2];
    BOOL v9 = __OFADD__(v8, 1);
    uint64_t v10 = v8 + 1;
    if (v9) {
      break;
    }
    v3[2] = v10;
    if (!v7) {
      goto LABEL_8;
    }
    long long v11 = *v6++;
    long long v13 = v11;
    swift_bridgeObjectRetain();
    unint64_t result = sub_100955F14(v11);
    --v7;
    if (v12) {
      goto LABEL_7;
    }
  }
  __break(1u);
  return result;
}

unint64_t sub_100A45CB0(void *a1)
{
  uint64_t v1 = a1[2];
  if (!v1) {
    return (unint64_t)&_swiftEmptyDictionarySingleton;
  }
  sub_1005057FC(&qword_10168CF90);
  Swift::UInt v3 = (void *)static _DictionaryStorage.allocate(capacity:)();
  uint64_t v5 = a1[4];
  uint64_t v4 = a1[5];
  unint64_t result = sub_100955F14(v5);
  if (v7)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    swift_bridgeObjectRetain();
    return (unint64_t)v3;
  }
  uint64_t v8 = a1 + 7;
  while (1)
  {
    *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v9 = 8 * result;
    *(void *)(v3[6] + v9) = v5;
    *(void *)(v3[7] + v9) = v4;
    uint64_t v10 = v3[2];
    BOOL v11 = __OFADD__(v10, 1);
    uint64_t v12 = v10 + 1;
    if (v11) {
      break;
    }
    v3[2] = v12;
    if (!--v1) {
      goto LABEL_8;
    }
    long long v13 = v8 + 2;
    uint64_t v5 = *(v8 - 1);
    uint64_t v14 = *v8;
    swift_bridgeObjectRetain();
    unint64_t result = sub_100955F14(v5);
    uint64_t v8 = v13;
    uint64_t v4 = v14;
    if (v15) {
      goto LABEL_7;
    }
  }
  __break(1u);
  return result;
}

unint64_t sub_100A45DB0(void *a1)
{
  return sub_100A465E8(a1, &qword_1016890A0);
}

unint64_t sub_100A45DBC(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    sub_1005057FC(&qword_101688E90);
    Swift::UInt v3 = (void *)static _DictionaryStorage.allocate(capacity:)();
    for (uint64_t i = a1 + 32; ; i += 40)
    {
      sub_100522E9C(i, (uint64_t)&v11, &qword_10168CF40);
      uint64_t v5 = v11;
      unint64_t result = sub_1009563E8(v11);
      if (v7) {
        break;
      }
      *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      *(void *)(v3[6] + 8 * result) = v5;
      unint64_t result = sub_10051B3EC((uint64_t)&v12, v3[7] + 32 * result, &qword_101672BF0);
      uint64_t v8 = v3[2];
      BOOL v9 = __OFADD__(v8, 1);
      uint64_t v10 = v8 + 1;
      if (v9) {
        goto LABEL_10;
      }
      v3[2] = v10;
      if (!--v1) {
        return (unint64_t)v3;
      }
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return (unint64_t)&_swiftEmptyDictionarySingleton;
  }
  return result;
}

unint64_t sub_100A45ED4(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    sub_1005057FC(&qword_101689248);
    Swift::UInt v3 = (void *)static _DictionaryStorage.allocate(capacity:)();
    for (uint64_t i = a1 + 32; ; i += 16)
    {
      sub_100522E9C(i, (uint64_t)&v11, &qword_10168D058);
      uint64_t v5 = v11;
      unint64_t result = sub_100955F14(v11);
      if (v7) {
        break;
      }
      *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      *(void *)(v3[6] + 8 * result) = v5;
      unint64_t result = sub_10051B3EC((uint64_t)&v12, v3[7] + 8 * result, &qword_101674258);
      uint64_t v8 = v3[2];
      BOOL v9 = __OFADD__(v8, 1);
      uint64_t v10 = v8 + 1;
      if (v9) {
        goto LABEL_10;
      }
      v3[2] = v10;
      if (!--v1) {
        return (unint64_t)v3;
      }
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return (unint64_t)_swiftEmptyDictionarySingleton;
  }
  return result;
}

unint64_t sub_100A45FF0(uint64_t a1)
{
  uint64_t v2 = sub_1005057FC(&qword_101679DC8);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2 - 8, v4);
  id v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)(a1 + 16);
  if (v7)
  {
    sub_1005057FC(&qword_1016891C0);
    uint64_t v8 = static _DictionaryStorage.allocate(capacity:)();
    uint64_t v9 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    uint64_t v10 = *(void *)(v3 + 72);
    while (1)
    {
      sub_100522E9C(v9, (uint64_t)v6, &qword_101679DC8);
      unint64_t result = sub_100987C40();
      if (v12) {
        break;
      }
      unint64_t v13 = result;
      *(void *)(v8 + 64 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
      uint64_t v14 = *(void *)(v8 + 56);
      uint64_t v15 = type metadata accessor for Date();
      unint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(void *)(v15 - 8) + 32))(v14 + *(void *)(*(void *)(v15 - 8) + 72) * v13, v6, v15);
      uint64_t v16 = *(void *)(v8 + 16);
      BOOL v17 = __OFADD__(v16, 1);
      uint64_t v18 = v16 + 1;
      if (v17) {
        goto LABEL_10;
      }
      *(void *)(v8 + 16) = v18;
      v9 += v10;
      if (!--v7) {
        return v8;
      }
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return (unint64_t)_swiftEmptyDictionarySingleton;
  }
  return result;
}

unint64_t sub_100A4619C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (unint64_t)_swiftEmptyDictionarySingleton;
  }
  sub_1005057FC(&qword_10168D028);
  uint64_t v3 = (void *)static _DictionaryStorage.allocate(capacity:)();
  char v4 = *(unsigned char *)(a1 + 32);
  uint64_t v5 = *(void **)(a1 + 40);
  unint64_t result = sub_100956E74(v4);
  if (v7)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    id v16 = v5;
    return (unint64_t)v3;
  }
  uint64_t v8 = (void *)(a1 + 56);
  while (1)
  {
    *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(unsigned char *)(v3[6] + result) = v4;
    *(void *)(v3[7] + 8 * result) = v5;
    uint64_t v9 = v3[2];
    BOOL v10 = __OFADD__(v9, 1);
    uint64_t v11 = v9 + 1;
    if (v10) {
      break;
    }
    v3[2] = v11;
    if (!--v1) {
      goto LABEL_8;
    }
    char v12 = v8 + 2;
    char v4 = *((unsigned char *)v8 - 8);
    unint64_t v13 = (void *)*v8;
    id v14 = v5;
    unint64_t result = sub_100956E74(v4);
    uint64_t v8 = v12;
    uint64_t v5 = v13;
    if (v15) {
      goto LABEL_7;
    }
  }
  __break(1u);
  return result;
}

unint64_t sub_100A46298(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (unint64_t)_swiftEmptyDictionarySingleton;
  }
  sub_1005057FC(&qword_101688EA0);
  uint64_t v3 = (void *)static _DictionaryStorage.allocate(capacity:)();
  long long v13 = *(_OWORD *)(a1 + 32);
  unint64_t result = sub_100955F14(*(void *)(a1 + 32));
  if (v5)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    swift_retain();
    return (unint64_t)v3;
  }
  id v6 = (long long *)(a1 + 48);
  uint64_t v7 = v1 - 1;
  while (1)
  {
    *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(void *)(v3[6] + 8 * result) = v13;
    *(void *)(v3[7] + 8 * result) = *((void *)&v13 + 1);
    uint64_t v8 = v3[2];
    BOOL v9 = __OFADD__(v8, 1);
    uint64_t v10 = v8 + 1;
    if (v9) {
      break;
    }
    v3[2] = v10;
    if (!v7) {
      goto LABEL_8;
    }
    long long v11 = *v6++;
    long long v13 = v11;
    swift_retain();
    unint64_t result = sub_100955F14(v11);
    --v7;
    if (v12) {
      goto LABEL_7;
    }
  }
  __break(1u);
  return result;
}

unint64_t sub_100A463A0(void *a1)
{
  uint64_t v1 = a1[2];
  if (!v1) {
    return (unint64_t)_swiftEmptyDictionarySingleton;
  }
  sub_1005057FC(&qword_1016890A8);
  uint64_t v3 = (void *)static _DictionaryStorage.allocate(capacity:)();
  uint64_t v5 = a1[4];
  uint64_t v4 = a1[5];
  uint64_t v6 = a1[6];
  uint64_t v7 = a1[7];
  unint64_t result = sub_100955F14(v5);
  if (v9)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    swift_retain();
    swift_retain();
    return (unint64_t)v3;
  }
  uint64_t v10 = a1 + 11;
  while (1)
  {
    *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(void *)(v3[6] + 8 * result) = v5;
    long long v11 = (void *)(v3[7] + 24 * result);
    *long long v11 = v4;
    v11[1] = v6;
    _OWORD v11[2] = v7;
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      break;
    }
    v3[2] = v14;
    if (!--v1) {
      goto LABEL_8;
    }
    char v15 = v10 + 4;
    uint64_t v5 = *(v10 - 3);
    uint64_t v16 = *(v10 - 2);
    uint64_t v17 = *(v10 - 1);
    uint64_t v7 = *v10;
    swift_retain();
    swift_retain();
    unint64_t result = sub_100955F14(v5);
    uint64_t v10 = v15;
    uint64_t v6 = v17;
    uint64_t v4 = v16;
    if (v18) {
      goto LABEL_7;
    }
  }
  __break(1u);
  return result;
}

unint64_t sub_100A464CC(double *a1)
{
  uint64_t v1 = *((void *)a1 + 2);
  if (!v1) {
    return (unint64_t)_swiftEmptyDictionarySingleton;
  }
  sub_1005057FC(&qword_10168CFB8);
  uint64_t v3 = (void *)static _DictionaryStorage.allocate(capacity:)();
  double v4 = a1[4];
  uint64_t v6 = *((void *)a1 + 5);
  double v5 = a1[6];
  unint64_t result = sub_100957420(v4);
  if (v8)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    swift_bridgeObjectRetain();
    return (unint64_t)v3;
  }
  char v9 = a1 + 9;
  while (1)
  {
    *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(double *)(v3[6] + 8 * result) = v4;
    uint64_t v10 = (double *)(v3[7] + 16 * result);
    *(void *)uint64_t v10 = v6;
    v10[1] = v5;
    uint64_t v11 = v3[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      break;
    }
    v3[2] = v13;
    if (!--v1) {
      goto LABEL_8;
    }
    uint64_t v14 = v9 + 3;
    double v4 = *(v9 - 2);
    uint64_t v6 = *((void *)v9 - 1);
    double v15 = *v9;
    swift_bridgeObjectRetain();
    unint64_t result = sub_100957420(v4);
    char v9 = v14;
    double v5 = v15;
    if (v16) {
      goto LABEL_7;
    }
  }
  __break(1u);
  return result;
}

unint64_t sub_100A465DC(void *a1)
{
  return sub_100A465E8(a1, (uint64_t *)&unk_10169A250);
}

unint64_t sub_100A465E8(void *a1, uint64_t *a2)
{
  uint64_t v2 = a1[2];
  if (!v2) {
    return (unint64_t)&_swiftEmptyDictionarySingleton;
  }
  sub_1005057FC(a2);
  double v4 = (void *)static _DictionaryStorage.allocate(capacity:)();
  uint64_t v6 = a1[4];
  uint64_t v5 = a1[5];
  unint64_t result = sub_100955F14(v6);
  if (v8)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    swift_retain();
    return (unint64_t)v4;
  }
  char v9 = a1 + 7;
  while (1)
  {
    *(void *)((char *)v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v10 = 8 * result;
    *(void *)(v4[6] + v10) = v6;
    *(void *)(v4[7] + v10) = v5;
    uint64_t v11 = v4[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      break;
    }
    v4[2] = v13;
    if (!--v2) {
      goto LABEL_8;
    }
    uint64_t v14 = v9 + 2;
    uint64_t v6 = *(v9 - 1);
    uint64_t v15 = *v9;
    swift_retain();
    unint64_t result = sub_100955F14(v6);
    char v9 = v14;
    uint64_t v5 = v15;
    if (v16) {
      goto LABEL_7;
    }
  }
  __break(1u);
  return result;
}

unint64_t sub_100A466E4(uint64_t a1)
{
  uint64_t v2 = sub_1005057FC(&qword_10168D0B0);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2, v4);
  uint64_t v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)(a1 + 16);
  if (v7)
  {
    sub_1005057FC(&qword_10168D0B8);
    char v8 = (void *)static _DictionaryStorage.allocate(capacity:)();
    char v9 = &v6[*(int *)(v2 + 48)];
    uint64_t v10 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    uint64_t v11 = *(void *)(v3 + 72);
    while (1)
    {
      sub_100522E9C(v10, (uint64_t)v6, &qword_10168D0B0);
      char v12 = *v6;
      unint64_t result = sub_10095787C(*v6);
      if (v14) {
        break;
      }
      unint64_t v15 = result;
      *(void *)((char *)v8 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      *(unsigned char *)(v8[6] + result) = v12;
      uint64_t v16 = v8[7];
      uint64_t v17 = type metadata accessor for DisplayRepresentation();
      unint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(void *)(v17 - 8) + 32))(v16 + *(void *)(*(void *)(v17 - 8) + 72) * v15, v9, v17);
      uint64_t v18 = v8[2];
      BOOL v19 = __OFADD__(v18, 1);
      uint64_t v20 = v18 + 1;
      if (v19) {
        goto LABEL_10;
      }
      v8[2] = v20;
      v10 += v11;
      if (!--v7) {
        return (unint64_t)v8;
      }
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return (unint64_t)_swiftEmptyDictionarySingleton;
  }
  return result;
}

id sub_100A468AC(void *a1, uint64_t a2, char a3, uint64_t a4)
{
  uint64_t v9 = *(void *)((swift_isaMask & *v4) + 0x70);
  type metadata accessor for CRLUnfairLock();
  uint64_t v10 = swift_allocObject();
  uint64_t v11 = v4;
  char v12 = (_DWORD *)swift_slowAlloc();
  *char v12 = 0;
  *(void *)(v10 + 16) = v12;
  atomic_thread_fence(memory_order_acq_rel);
  *(void *)((char *)v4 + v9) = v10;
  uint64_t v13 = *(void *)((swift_isaMask & *v11) + 0x78);
  type metadata accessor for CRLUnfairRecursiveLock();
  uint64_t v14 = swift_allocObject();
  unint64_t v15 = (void *)swift_slowAlloc();
  *unint64_t v15 = 0;
  *(void *)(v14 + 16) = v15;
  atomic_thread_fence(memory_order_acq_rel);
  *(void *)((char *)v11 + v13) = v14;
  uint64_t v16 = *(void *)((swift_isaMask & *v11) + 0x88);
  *(void *)((char *)v11 + v16) = 0;
  uint64_t v17 = (char *)v11 + *(void *)((swift_isaMask & *v11) + 0x90);
  *(void *)uint64_t v17 = 0;
  v17[8] = -1;
  uint64_t v18 = (void *)((char *)v11 + *(void *)((swift_isaMask & *v11) + 0x98));
  *uint64_t v18 = 0;
  *(void *)((char *)v11 + *(void *)((swift_isaMask & *v11) + 0x80)) = 0;
  BOOL v19 = *(void **)((char *)v11 + v16);
  *(void *)((char *)v11 + v16) = a1;
  id v20 = a1;

  uint64_t v21 = *(void *)v17;
  *(void *)uint64_t v17 = a2;
  LOBYTE(v19) = v17[8];
  v17[8] = a3 & 1;
  sub_1007BA890(a2, a3 & 1);
  sub_1007BC9A0(v21, v19);
  swift_beginAccess();
  *uint64_t v18 = a4;
  swift_retain();

  swift_release();
  v24.receiver = v11;
  v24.super_class = (Class)sub_1005057FC(&qword_10168D130);
  id v22 = [super init];
  if (a3)
  {
    [v20 addObserver:v22 forChangeSourceOfClass:swift_getObjCClassFromMetadata()];
  }
  else
  {
    [v20 addObserver:v22 forChangeSource:a2];

    sub_1007BC3D4(a2, 0);
  }
  return v22;
}

uint64_t type metadata accessor for CRLUIPropertyNotifier.PropertySubscription()
{
  return self;
}

uint64_t sub_100A46B54(Swift::UInt a1)
{
  (*(void (**)(uint64_t))(*(void *)(*(void *)(*(void *)v1 + 296) - 8) + 16))(v1 + *(void *)(*(void *)v1 + 312));
  type metadata accessor for CRLUIPropertyNotifier();
  swift_retain();
  *(void *)(v1 + *(void *)(*(void *)v1 + 320)) = sub_100A417A4(a1);
  swift_release();
  *(void *)(v1 + 80) = 0;
  *(_OWORD *)(v1 + 48) = 0u;
  *(_OWORD *)(v1 + 64) = 0u;
  swift_unknownObjectWeakInit();
  *(void *)(v1 + 24) = sub_100A463A0(_swiftEmptyArrayStorage);
  *(void *)(v1 + 32) = 0;
  *(unsigned char *)(v1 + 40) = 1;
  swift_unknownObjectWeakAssign();
  return v1;
}

uint64_t type metadata accessor for CRLUIPropertyNotifier.CustomFilter()
{
  uint64_t result = qword_10168CE38;
  if (!qword_10168CE38) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t type metadata accessor for CRLUIPropertyNotifier.PublisherSubscriber()
{
  return sub_100568E70();
}

uint64_t sub_100A46CF8(Swift::UInt a1, uint64_t a2, uint64_t a3, void (*a4)(_OWORD *, uint64_t))
{
  *(void *)(v4 + 88) = a2;
  Hasher.init()();
  Hasher._combine(_:)(a1);
  Hasher._combine(_:)(1uLL);
  swift_bridgeObjectRetain();
  swift_retain();
  a4(v9, a2);
  long long v13 = v9[2];
  long long v14 = v9[3];
  uint64_t v15 = v10;
  long long v11 = v9[0];
  long long v12 = v9[1];
  *(void *)(v4 + 96) = Hasher.finalize()();
  swift_release();
  *(void *)(v4 + 80) = 0;
  *(_OWORD *)(v4 + 48) = 0u;
  *(_OWORD *)(v4 + 64) = 0u;
  swift_unknownObjectWeakInit();
  *(void *)(v4 + 24) = sub_100A463A0(_swiftEmptyArrayStorage);
  *(void *)(v4 + 32) = 0;
  *(unsigned char *)(v4 + 40) = 1;
  swift_unknownObjectWeakAssign();
  return v4;
}

uint64_t sub_100A46DFC(Swift::UInt a1, uint64_t a2)
{
  sub_100A48294(a2, v2 + *(void *)(*(void *)v2 + 312), (uint64_t (*)(void))type metadata accessor for CRLUIPropertyNotifier.CustomFilter);
  Hasher.init()();
  Hasher._combine(_:)(a1);
  Hasher._combine(_:)(1uLL);
  type metadata accessor for CRLUIPropertyNotifier.CustomFilter();
  type metadata accessor for UUID();
  sub_100A47064((unint64_t *)&qword_1016770E0, (void (*)(uint64_t))&type metadata accessor for UUID);
  swift_retain();
  dispatch thunk of Hashable.hash(into:)();
  *(void *)(v2 + *(void *)(*(void *)v2 + 320)) = Hasher.finalize()();
  swift_release();
  *(void *)(v2 + 80) = 0;
  *(_OWORD *)(v2 + 48) = 0u;
  *(_OWORD *)(v2 + 64) = 0u;
  swift_unknownObjectWeakInit();
  *(void *)(v2 + 24) = sub_100A463A0(_swiftEmptyArrayStorage);
  *(void *)(v2 + 32) = 0;
  *(unsigned char *)(v2 + 40) = 1;
  swift_unknownObjectWeakAssign();
  sub_100A48050(a2, (uint64_t (*)(void))type metadata accessor for CRLUIPropertyNotifier.CustomFilter);
  return v2;
}

uint64_t sub_100A46FB0()
{
  *(void *)(v0 + 80) = 0;
  *(_OWORD *)(v0 + 48) = 0u;
  *(_OWORD *)(v0 + 64) = 0u;
  swift_unknownObjectWeakInit();
  *(void *)(v0 + 24) = sub_100A463A0(_swiftEmptyArrayStorage);
  *(void *)(v0 + 32) = 0;
  *(unsigned char *)(v0 + 40) = 1;
  swift_unknownObjectWeakAssign();
  return v0;
}

uint64_t sub_100A4701C()
{
  return sub_100A46FB0();
}

uint64_t sub_100A47064(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100A470AC()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100A470E4()
{
  return sub_100A43A60(v0);
}

uint64_t sub_100A470EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100A47370(a1, a2, a3, (uint64_t (*)(void))sub_100A47118, (uint64_t (*)(void))sub_100A4716C);
}

unint64_t sub_100A47118()
{
  unint64_t result = qword_10168CAA0;
  if (!qword_10168CAA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168CAA0);
  }
  return result;
}

unint64_t sub_100A4716C()
{
  unint64_t result = qword_10168CAA8;
  if (!qword_10168CAA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168CAA8);
  }
  return result;
}

unint64_t sub_100A471C4()
{
  unint64_t result = qword_10168CAB0;
  if (!qword_10168CAB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168CAB0);
  }
  return result;
}

uint64_t sub_100A47218(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100A47370(a1, a2, a3, (uint64_t (*)(void))sub_100A47244, (uint64_t (*)(void))sub_100A47298);
}

unint64_t sub_100A47244()
{
  unint64_t result = qword_10168CAB8;
  if (!qword_10168CAB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168CAB8);
  }
  return result;
}

unint64_t sub_100A47298()
{
  unint64_t result = qword_10168CAC0;
  if (!qword_10168CAC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168CAC0);
  }
  return result;
}

unint64_t sub_100A472F0()
{
  unint64_t result = qword_10168CAC8;
  if (!qword_10168CAC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168CAC8);
  }
  return result;
}

uint64_t sub_100A47344(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100A47370(a1, a2, a3, (uint64_t (*)(void))sub_100A473AC, (uint64_t (*)(void))sub_100A47400);
}

uint64_t sub_100A47370(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void), uint64_t (*a5)(void))
{
  *(void *)(a1 + 8) = a4();
  uint64_t result = a5();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_100A473AC()
{
  unint64_t result = qword_10168CAD0;
  if (!qword_10168CAD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168CAD0);
  }
  return result;
}

unint64_t sub_100A47400()
{
  unint64_t result = qword_10168CAD8;
  if (!qword_10168CAD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168CAD8);
  }
  return result;
}

unint64_t sub_100A47458()
{
  unint64_t result = qword_10168CAE0;
  if (!qword_10168CAE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168CAE0);
  }
  return result;
}

uint64_t sub_100A474AC(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_100A47064(&qword_10168CAE8, (void (*)(uint64_t))type metadata accessor for CRLUIPropertyNotifier.CustomFilter);
  uint64_t result = sub_100A47064(&qword_10168CAF0, (void (*)(uint64_t))type metadata accessor for CRLUIPropertyNotifier.CustomFilter);
  *(void *)(a1 + 16) = result;
  return result;
}

uint64_t sub_100A47530()
{
  return sub_100A47064(&qword_10168CAF8, (void (*)(uint64_t))type metadata accessor for CRLUIPropertyNotifier.CustomFilter);
}

uint64_t type metadata accessor for CRLUIPropertyNotifier()
{
  return self;
}

uint64_t type metadata accessor for CRLUIPropertyNotifier.AnySubscriber()
{
  return self;
}

uint64_t sub_100A475C0()
{
  return swift_initClassMetadata2();
}

uint64_t sub_100A47604()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for CRLUIPropertyNotifier.ChangeSubscriber()
{
  return sub_100568E70();
}

ValueMetadata *type metadata accessor for CRLUIPropertyNotifier.AllChanges()
{
  return &type metadata for CRLUIPropertyNotifier.AllChanges;
}

ValueMetadata *type metadata accessor for CRLUIPropertyNotifier.KindFilter()
{
  return &type metadata for CRLUIPropertyNotifier.KindFilter;
}

ValueMetadata *type metadata accessor for CRLUIPropertyNotifier.PropertyFilter()
{
  return &type metadata for CRLUIPropertyNotifier.PropertyFilter;
}

void *initializeBufferWithCopyOfBuffer for CRLUIPropertyNotifier.CustomFilter(void *a1, uint64_t *a2, uint64_t a3)
{
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v5 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    *a1 = v5;
    a1 = (void *)(v5 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v6 = a2[1];
    *a1 = v5;
    a1[1] = v6;
    uint64_t v7 = *(int *)(a3 + 20);
    char v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = type metadata accessor for UUID();
    long long v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
    swift_retain();
    v11(v8, v9, v10);
  }
  return a1;
}

uint64_t destroy for CRLUIPropertyNotifier.CustomFilter(uint64_t a1, uint64_t a2)
{
  swift_release();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = type metadata accessor for UUID();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);

  return v6(v4, v5);
}

void *initializeWithCopy for CRLUIPropertyNotifier.CustomFilter(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = *(int *)(a3 + 20);
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = type metadata accessor for UUID();
  uint64_t v9 = *(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 16);
  swift_retain();
  v9(v6, v7, v8);
  return a1;
}

void *assignWithCopy for CRLUIPropertyNotifier.CustomFilter(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_retain();
  swift_release();
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for UUID();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  return a1;
}

_OWORD *initializeWithTake for CRLUIPropertyNotifier.CustomFilter(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = type metadata accessor for UUID();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

_OWORD *assignWithTake for CRLUIPropertyNotifier.CustomFilter(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_release();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for UUID();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for CRLUIPropertyNotifier.CustomFilter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100A47A94);
}

uint64_t sub_100A47A94(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for UUID();
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    long long v11 = (char *)a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for CRLUIPropertyNotifier.CustomFilter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100A47B58);
}

void *sub_100A47B58(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for UUID();
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 20);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_100A47C00()
{
  uint64_t result = type metadata accessor for UUID();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_100A47C9C(uint64_t a1)
{
  if (*(void *)(a1 + 24) >= 0xFFFFFFFFuLL) {
    return _s8Freeform26AnyCRLCommandChangeContextVwxx_0(a1);
  }
  return a1;
}

uint64_t initializeWithCopy for CRLAcceptCloudKitShareAttempt.CancelReason(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 24);
  if (v3 < 0xFFFFFFFF)
  {
    long long v5 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v5;
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
  }
  else
  {
    uint64_t v4 = *(void *)(a2 + 32);
    *(void *)(a1 + 24) = v3;
    *(void *)(a1 + 32) = v4;
    (**(void (***)(uint64_t))(v3 - 8))(a1);
  }
  return a1;
}

uint64_t assignWithCopy for CRLAcceptCloudKitShareAttempt.CancelReason(uint64_t a1, long long *a2)
{
  unint64_t v4 = *((void *)a2 + 3);
  if (*(void *)(a1 + 24) < 0xFFFFFFFFuLL)
  {
    if (v4 >= 0xFFFFFFFF)
    {
      *(void *)(a1 + 24) = v4;
      *(void *)(a1 + 32) = *((void *)a2 + 4);
      (**(void (***)(uint64_t, long long *))(v4 - 8))(a1, a2);
      return a1;
    }
LABEL_7:
    long long v5 = *a2;
    long long v6 = a2[1];
    *(void *)(a1 + 32) = *((void *)a2 + 4);
    *(_OWORD *)a1 = v5;
    *(_OWORD *)(a1 + 16) = v6;
    return a1;
  }
  if (v4 < 0xFFFFFFFF)
  {
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(a1);
    goto LABEL_7;
  }
  sub_10054BB2C((uint64_t *)a1, (uint64_t *)a2);
  return a1;
}

uint64_t assignWithTake for CRLAcceptCloudKitShareAttempt.CancelReason(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 24) >= 0xFFFFFFFFuLL) {
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(a1);
  }
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  return a1;
}

uint64_t sub_100A47E38(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFE && *(unsigned char *)(a1 + 40)) {
    return (*(_DWORD *)a1 + 2147483646);
  }
  unint64_t v3 = *(void *)(a1 + 24);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  unsigned int v4 = v3 + 1;
  unsigned int v5 = v3 - 1;
  if (v4 >= 3) {
    return v5;
  }
  else {
    return 0;
  }
}

uint64_t sub_100A47E8C(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFD)
  {
    *(void *)(result + 32) = 0;
    *(_OWORD *)uint64_t result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)uint64_t result = a2 - 2147483646;
    if (a3 >= 0x7FFFFFFE) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFE) {
      *(unsigned char *)(result + 40) = 0;
    }
    if (a2) {
      *(void *)(result + 24) = a2 + 1;
    }
  }
  return result;
}

uint64_t sub_100A47EF0(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 24);
  if (v1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  return (v1 + 1);
}

double sub_100A47F08(uint64_t a1, int a2)
{
  if (a2 < 0)
  {
    double result = 0.0;
    *(_OWORD *)(a1 + 8) = 0u;
    *(_OWORD *)(a1 + 24) = 0u;
    *(void *)a1 = a2 ^ 0x80000000;
  }
  else if (a2)
  {
    *(void *)(a1 + 24) = (a2 - 1);
  }
  return result;
}

uint64_t type metadata accessor for CRLUIPropertyNotifier.PublisherSubscriber.Status()
{
  return sub_100568E70();
}

uint64_t sub_100A47F4C()
{
  return swift_getWitnessTable();
}

uint64_t sub_100A47F68(uint64_t a1, uint64_t a2)
{
  return *(void *)(a2 + 232);
}

uint64_t sub_100A47F70()
{
  sub_100A42574();
  memset(v3, 0, sizeof(v3));
  long long v4 = xmmword_10118D2A0;
  swift_beginAccess();
  uint64_t v1 = type metadata accessor for CRLUIPropertyNotifier.PublisherSubscriber.Status();
  (*(void (**)(uint64_t, void *, uint64_t))(*(void *)(v1 - 8) + 40))(v0 + 48, v3, v1);
  return swift_endAccess();
}

uint64_t sub_100A48050(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_100A480B0()
{
  unint64_t result = qword_101674218;
  if (!qword_101674218)
  {
    sub_10050BF48(255, (unint64_t *)&qword_101674210);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101674218);
  }
  return result;
}

uint64_t sub_100A48118(uint64_t a1)
{
  uint64_t v2 = sub_1005057FC(&qword_10168CFD0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100A48178()
{
  return sub_100A42080(v0);
}

uint64_t sub_100A48180(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100A48190()
{
  return swift_release();
}

uint64_t sub_100A48198(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_100A48200(uint64_t a1)
{
  id v2 = *(id *)(a1 + 24);
  return a1;
}

uint64_t sub_100A4822C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1005057FC(&qword_10168CFD0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_100A48294(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

ValueMetadata *type metadata accessor for CRLTipStencilLibraryFull()
{
  return &type metadata for CRLTipStencilLibraryFull;
}

uint64_t sub_100A4830C(uint64_t a1)
{
  return sub_100A483A4(a1, qword_10171B570);
}

uint64_t sub_100A48330(uint64_t a1)
{
  return sub_100A483A4(a1, qword_10171B588);
}

uint64_t sub_100A48354(uint64_t a1)
{
  return sub_100A483A4(a1, qword_10171B5A0);
}

uint64_t sub_100A48380(uint64_t a1)
{
  return sub_100A483A4(a1, qword_10171B5B8);
}

uint64_t sub_100A483A4(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = sub_1005057FC(&qword_10169FA10);
  sub_100568B28(v3, a2);
  sub_100556B74(v3, (uint64_t)a2);
  return Tips.Parameter.init<A>(_:_:_:_:)();
}

uint64_t sub_100A48448()
{
  uint64_t v0 = sub_1005057FC(&qword_10167A2C0);
  sub_100568B28(v0, qword_10171B5D0);
  sub_100556B74(v0, (uint64_t)qword_10171B5D0);
  return Tips.Event.init<>(id:)();
}

uint64_t sub_100A484B4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_1005057FC(&qword_10167A358);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2, v4);
  long long v6 = &v13[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = sub_1005057FC(&qword_10167A360);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7, v9);
  long long v11 = &v13[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_100523288(&qword_10167A368, &qword_10167A360);
  static PredicateExpressions.build_Arg<A>(_:)();
  v13[15] = 0;
  static PredicateExpressions.build_Arg<A>(_:)();
  a1[3] = sub_1005057FC(&qword_10167A370);
  a1[4] = sub_1006A14B4();
  sub_1005767BC(a1);
  sub_100523288(&qword_10167A390, &qword_10167A358);
  static PredicateExpressions.build_Equal<A, B>(lhs:rhs:)();
  (*(void (**)(unsigned char *, uint64_t))(v3 + 8))(v6, v2);
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v8 + 8))(v11, v7);
}

uint64_t sub_100A486F4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v54 = a1;
  uint64_t v1 = type metadata accessor for PredicateExpressions.ComparisonOperator();
  uint64_t v52 = *(void *)(v1 - 8);
  uint64_t v53 = v1;
  __chkstk_darwin(v1, v2);
  uint64_t v51 = (char *)&v42 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1005057FC(&qword_10167A2D8);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v55 = v4;
  uint64_t v56 = v5;
  __chkstk_darwin(v4, v6);
  int64_t v50 = (char *)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for Tips.DonationTimeRange();
  uint64_t v46 = *(void *)(v8 - 8);
  uint64_t v47 = v8;
  __chkstk_darwin(v8, v9);
  long long v11 = (char *)&v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1005057FC(&qword_10167A2E0);
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12, v14);
  uint64_t v16 = (char *)&v42 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_1005057FC(&qword_10167A2E8);
  uint64_t v18 = *(void *)(v17 - 8);
  __chkstk_darwin(v17, v19);
  uint64_t v21 = (char *)&v42 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_1005057FC(&qword_10167A2F0);
  uint64_t v23 = *(void *)(v22 - 8);
  uint64_t v44 = v22;
  uint64_t v45 = v23;
  __chkstk_darwin(v22, v24);
  unint64_t v26 = (char *)&v42 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = sub_1005057FC(&qword_10167A2F8);
  uint64_t v28 = *(void *)(v27 - 8);
  uint64_t v48 = v27;
  uint64_t v49 = v28;
  __chkstk_darwin(v27, v29);
  uint64_t v43 = (char *)&v42 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100523288(&qword_10167A300, &qword_10167A2E0);
  static PredicateExpressions.build_Arg<A>(_:)();
  swift_getKeyPath();
  static PredicateExpressions.build_KeyPath<A, B>(root:keyPath:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v16, v12);
  static Tips.DonationTimeRange.day.getter();
  type metadata accessor for Tips.EmptyDonation();
  sub_1006A1230(&qword_10167A2C8);
  sub_1006A1230(&qword_10167A2D0);
  sub_1006A12E0();
  static PredicateExpressions.build_donatedWithin<A, B>(_:_:)();
  (*(void (**)(char *, uint64_t))(v46 + 8))(v11, v47);
  (*(void (**)(char *, uint64_t))(v18 + 8))(v21, v17);
  swift_getKeyPath();
  sub_100523288(&qword_10167A318, &qword_10167A2F0);
  uint64_t v32 = v43;
  uint64_t v31 = v44;
  static PredicateExpressions.build_KeyPath<A, B>(root:keyPath:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v45 + 8))(v26, v31);
  uint64_t v57 = 1;
  uint64_t v33 = v50;
  static PredicateExpressions.build_Arg<A>(_:)();
  long long v35 = v51;
  uint64_t v34 = v52;
  uint64_t v36 = v53;
  (*(void (**)(char *, void, uint64_t))(v52 + 104))(v51, enum case for PredicateExpressions.ComparisonOperator.lessThan(_:), v53);
  uint64_t v37 = sub_1005057FC(&qword_10167A320);
  uint64_t v38 = v54;
  v54[3] = v37;
  v38[4] = sub_1006A137C();
  sub_1005767BC(v38);
  sub_100523288(&qword_10167A348, &qword_10167A2F8);
  sub_100523288(&qword_10167A350, &qword_10167A2D8);
  uint64_t v39 = v48;
  uint64_t v40 = v55;
  static PredicateExpressions.build_Comparison<A, B>(lhs:rhs:op:)();
  (*(void (**)(char *, uint64_t))(v34 + 8))(v35, v36);
  (*(void (**)(char *, uint64_t))(v56 + 8))(v33, v40);
  return (*(uint64_t (**)(char *, uint64_t))(v49 + 8))(v32, v39);
}

uint64_t sub_100A48D9C()
{
  return sub_1006A1628();
}

uint64_t sub_100A48DC8@<X0>(uint64_t *a1@<X8>)
{
  sub_1005C7700();
  uint64_t result = Tip.id.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

unint64_t sub_100A48E0C()
{
  unint64_t result = qword_10168D170;
  if (!qword_10168D170)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168D170);
  }
  return result;
}

unint64_t sub_100A48E60(uint64_t a1)
{
  unint64_t result = sub_1005C7700();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_100A48E88()
{
  uint64_t v0 = sub_1005057FC(&qword_10167A2C0);
  uint64_t v25 = *(void *)(v0 - 8);
  uint64_t v26 = v0;
  __chkstk_darwin(v0, v1);
  uint64_t v27 = (char *)v24 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_1005057FC(&qword_10169FA10);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3, v5);
  uint64_t v7 = (char *)v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for Tips.Rule();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8, v10);
  uint64_t v12 = (char *)v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10166F758 != -1) {
    swift_once();
  }
  uint64_t v13 = sub_100556B74(v3, (uint64_t)qword_10171B570);
  swift_beginAccess();
  uint64_t v14 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
  v14(v7, v13, v3);
  Tips.Rule.init<A>(_:_:)();
  void v24[2] = static Tips.RuleBuilder.buildExpression(_:)();
  uint64_t v15 = *(void (**)(char *, uint64_t))(v9 + 8);
  v15(v12, v8);
  if (qword_10166F760 != -1) {
    swift_once();
  }
  uint64_t v16 = sub_100556B74(v3, (uint64_t)qword_10171B588);
  swift_beginAccess();
  v14(v7, v16, v3);
  Tips.Rule.init<A>(_:_:)();
  v24[1] = static Tips.RuleBuilder.buildExpression(_:)();
  v15(v12, v8);
  if (qword_10166F770 != -1) {
    swift_once();
  }
  uint64_t v17 = sub_100556B74(v3, (uint64_t)qword_10171B5B8);
  swift_beginAccess();
  v14(v7, v17, v3);
  Tips.Rule.init<A>(_:_:)();
  static Tips.RuleBuilder.buildExpression(_:)();
  v15(v12, v8);
  uint64_t v18 = v8;
  if (qword_10166F768 != -1) {
    swift_once();
  }
  uint64_t v19 = sub_100556B74(v3, (uint64_t)qword_10171B5A0);
  swift_beginAccess();
  v14(v7, v19, v3);
  Tips.Rule.init<A>(_:_:)();
  static Tips.RuleBuilder.buildExpression(_:)();
  v15(v12, v18);
  if (qword_10166F778 != -1) {
    swift_once();
  }
  uint64_t v20 = v26;
  uint64_t v21 = sub_100556B74(v26, (uint64_t)qword_10171B5D0);
  (*(void (**)(char *, uint64_t, uint64_t))(v25 + 16))(v27, v21, v20);
  type metadata accessor for Tips.EmptyDonation();
  sub_1006A1230(&qword_10167A2C8);
  sub_1006A1230(&qword_10167A2D0);
  Tips.Rule.init<A>(_:_:)();
  static Tips.RuleBuilder.buildExpression(_:)();
  v15(v12, v18);
  static Tips.RuleBuilder.buildPartialBlock(first:)();
  swift_bridgeObjectRelease();
  static Tips.RuleBuilder.buildPartialBlock(accumulated:next:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  static Tips.RuleBuilder.buildPartialBlock(accumulated:next:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  static Tips.RuleBuilder.buildPartialBlock(accumulated:next:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v22 = static Tips.RuleBuilder.buildPartialBlock(accumulated:next:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v22;
}

void sub_100A49518(uint64_t a1, CGRect *a2)
{
  uint64_t v3 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    __CocoaSet.makeIterator()();
    sub_10055A764();
    sub_10055A7A4();
    Set.Iterator.init(_cocoa:)();
    uint64_t v3 = v36;
    uint64_t v34 = v37;
    uint64_t v4 = v38;
    uint64_t v5 = v39;
    unint64_t v6 = v40;
  }
  else
  {
    uint64_t v7 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v34 = a1 + 56;
    uint64_t v8 = ~v7;
    uint64_t v9 = -v7;
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v6 = v10 & *(void *)(a1 + 56);
    swift_bridgeObjectRetain();
    uint64_t v4 = v8;
    uint64_t v5 = 0;
  }
  int64_t v33 = (unint64_t)(v4 + 64) >> 6;
  while (v3 < 0)
  {
    uint64_t v14 = __CocoaSet.Iterator.next()();
    if (!v14) {
      goto LABEL_36;
    }
    uint64_t v41 = v14;
    sub_10055A764();
    swift_unknownObjectRetain();
    swift_dynamicCast();
    CGFloat a = v35.a;
    swift_unknownObjectRelease();
    uint64_t v13 = v5;
    uint64_t v11 = v6;
    if (a == 0.0) {
      goto LABEL_36;
    }
LABEL_32:
    id v19 = [*(id *)&a layout];
    [v19 frameForMiniFormatterPositioning];
    double x = v20;
    double y = v22;
    double width = v24;
    double height = v26;

    id v28 = [*(id *)&a layout];
    id v29 = [v28 parent];

    if (v29)
    {
      [v29 transformInRoot];
      v42.origin.double x = x;
      v42.origin.double y = y;
      v42.size.double width = width;
      v42.size.double height = height;
      CGRect v43 = CGRectApplyAffineTransform(v42, &v35);
      double x = v43.origin.x;
      double y = v43.origin.y;
      double width = v43.size.width;
      double height = v43.size.height;
    }
    if (!CGRectIsNull(*a2))
    {
      double x = sub_100064F28(a2->origin.x, a2->origin.y, a2->size.width, a2->size.height, x, y, width, height);
      double y = v30;
      double width = v31;
      double height = v32;
    }
    a2->origin.double x = x;
    a2->origin.double y = y;
    a2->size.double width = width;
    a2->size.double height = height;

    uint64_t v5 = v13;
    unint64_t v6 = v11;
  }
  if (v6)
  {
    uint64_t v11 = (v6 - 1) & v6;
    unint64_t v12 = __clz(__rbit64(v6)) | (v5 << 6);
    uint64_t v13 = v5;
LABEL_31:
    CGFloat a = COERCE_DOUBLE(*(id *)(*(void *)(v3 + 48) + 8 * v12));
    if (a == 0.0) {
      goto LABEL_36;
    }
    goto LABEL_32;
  }
  int64_t v16 = v5 + 1;
  if (!__OFADD__(v5, 1))
  {
    if (v16 >= v33) {
      goto LABEL_36;
    }
    unint64_t v17 = *(void *)(v34 + 8 * v16);
    uint64_t v13 = v5 + 1;
    if (!v17)
    {
      uint64_t v13 = v5 + 2;
      if (v5 + 2 >= v33) {
        goto LABEL_36;
      }
      unint64_t v17 = *(void *)(v34 + 8 * v13);
      if (!v17)
      {
        uint64_t v13 = v5 + 3;
        if (v5 + 3 >= v33) {
          goto LABEL_36;
        }
        unint64_t v17 = *(void *)(v34 + 8 * v13);
        if (!v17)
        {
          uint64_t v13 = v5 + 4;
          if (v5 + 4 >= v33) {
            goto LABEL_36;
          }
          unint64_t v17 = *(void *)(v34 + 8 * v13);
          if (!v17)
          {
            uint64_t v13 = v5 + 5;
            if (v5 + 5 >= v33) {
              goto LABEL_36;
            }
            unint64_t v17 = *(void *)(v34 + 8 * v13);
            if (!v17)
            {
              uint64_t v18 = v5 + 6;
              while (v33 != v18)
              {
                unint64_t v17 = *(void *)(v34 + 8 * v18++);
                if (v17)
                {
                  uint64_t v13 = v18 - 1;
                  goto LABEL_30;
                }
              }
LABEL_36:
              sub_10052E1EC();
              return;
            }
          }
        }
      }
    }
LABEL_30:
    uint64_t v11 = (v17 - 1) & v17;
    unint64_t v12 = __clz(__rbit64(v17)) + (v13 << 6);
    goto LABEL_31;
  }
  __break(1u);
}

void sub_100A498D8(char a1)
{
  int v2 = *(unsigned __int8 *)(v1 + 56);
  *(unsigned char *)(v1 + 56) = a1;
  if (v2 != (a1 & 1))
  {
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      id v4 = (id)Strong;
      if (swift_unknownObjectWeakLoadStrong())
      {
        swift_bridgeObjectRetain();
        sub_10080C26C();
        swift_bridgeObjectRelease();

        swift_unknownObjectRelease();
      }
      else
      {
      }
    }
  }
}

void sub_100A499AC()
{
  uint64_t v1 = swift_bridgeObjectRetain();
  int v2 = (void *)sub_10099985C(v1);
  swift_bridgeObjectRelease();
  id v99 = [v2 interactiveCanvasController];

  if (v99)
  {
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      id v4 = (void *)Strong;
      uint64_t v5 = swift_bridgeObjectRetain();
      double v6 = sub_100A4A098(v5);
      double v8 = v7;
      double v10 = v9;
      double v12 = v11;
      swift_bridgeObjectRelease();
      uint64_t v13 = swift_unknownObjectWeakLoadStrong();
      if (!v13
        || (char v14 = *(unsigned char *)(v13 + OBJC_IVAR____TtC8Freeform37CRLRepTrackingMiniFormatterViewHelper_viewIsFadingOut),
            swift_unknownObjectRelease(),
            (v14 & 1) == 0))
      {
        uint64_t v15 = swift_bridgeObjectRetain();
        int64_t v16 = (void *)sub_10099985C(v15);
        swift_bridgeObjectRelease();
        id v17 = [v16 interactiveCanvasController];

        if (v17)
        {
          [v17 visibleScaledRectForCanvasUI];
          CGFloat v19 = v18;
          CGFloat v21 = v20;
          CGFloat v23 = v22;
          rect_8CGFloat a = v24;
          [v17 convertUnscaledToBoundsRect:v6, v8, v10, v12];
          double v95 = v8;
          double v97 = v6;
          rectCGFloat a = v101.origin.x;
          CGFloat y = v101.origin.y;
          double rect_16 = v12;
          rect_24CGFloat a = v10;
          CGFloat width = v101.size.width;
          CGFloat height = v101.size.height;
          double MinY = CGRectGetMinY(v101);
          v102.origin.double x = v19;
          v102.origin.CGFloat y = v21;
          v102.size.CGFloat width = v23;
          v102.size.CGFloat height = rect_8a;
          double v87 = MinY - CGRectGetMinY(v102);
          v103.origin.double x = v19;
          v103.origin.CGFloat y = v21;
          v103.size.CGFloat width = v23;
          v103.size.CGFloat height = rect_8a;
          double MaxY = CGRectGetMaxY(v103);
          v104.origin.double x = recta;
          v104.origin.CGFloat y = y;
          v104.size.CGFloat width = width;
          double v10 = rect_24a;
          double v8 = v95;
          v104.size.CGFloat height = height;
          double v12 = rect_16;
          double v30 = CGRectGetMaxY(v104);

          double v31 = MaxY - v30;
          double v6 = v97;
          char v32 = v31 <= v87 + 1.0;
        }
        else
        {
          char v32 = 0;
        }
        sub_100A498D8(v32);
      }
      [v99 convertUnscaledToBoundsRect:v6, v8, v10, v12, *(void *)&v87];
      CGFloat v34 = v33;
      CGFloat v36 = v35;
      CGFloat v38 = v37;
      CGFloat v40 = v39;
      [v99 visibleScaledRectForCanvasUI];
      CGFloat v42 = v41;
      double v44 = v43;
      CGFloat v46 = v45;
      CGFloat v48 = v47;
      [v4 frame];
      double v96 = v49;
      double v98 = v50;
      CGFloat rect_24 = v34;
      v105.origin.double x = v34;
      double v51 = v36;
      v105.origin.CGFloat y = v36;
      double v52 = v38;
      v105.size.CGFloat width = v38;
      CGFloat v53 = v40;
      v105.size.CGFloat height = v40;
      v111.origin.double x = v42;
      v111.origin.CGFloat y = v44;
      v111.size.CGFloat width = v46;
      v111.size.CGFloat height = v48;
      CGRect v106 = CGRectIntersection(v105, v111);
      v112.origin.double x = v42;
      v112.origin.CGFloat y = v44;
      v112.size.CGFloat width = v46;
      v112.size.CGFloat height = v48;
      if (CGRectEqualToRect(v106, v112))
      {
        v107.origin.double x = v42;
        v107.origin.CGFloat y = v44;
        v107.size.CGFloat width = v46;
        v107.size.CGFloat height = v48;
        CGFloat v54 = v96;
        double v55 = CGRectGetMidX(v107) + v96 * -0.5;
        double v56 = v42;
        double v57 = v46;
        CGFloat v58 = v42;
        double v59 = v44;
        CGFloat v60 = v46;
        CGFloat v61 = v48;
        if (*(unsigned char *)(v0 + 56) == 1) {
          double v62 = CGRectGetMinY(*(CGRect *)&v58);
        }
        else {
          double v62 = CGRectGetMaxY(*(CGRect *)&v58);
        }
        double v75 = v62 - *(double *)(v0 + 48) - v98;
        double v69 = v48;
      }
      else
      {
        CGFloat rect_8 = v48;
        CGFloat rect = v52;
        CGFloat v63 = rect_24;
        CGFloat v64 = v51;
        double v65 = v51;
        double v66 = v52;
        CGFloat v67 = v53;
        if (*(unsigned char *)(v0 + 56) == 1)
        {
          double v68 = CGRectGetMinY(*(CGRect *)&v63);
          double v56 = v42;
          v108.origin.double x = v42;
          v108.origin.CGFloat y = v44;
          double v57 = v46;
          v108.size.CGFloat width = v46;
          double v69 = rect_8;
          v108.size.CGFloat height = rect_8;
          CGFloat v70 = CGRectGetMinY(v108);
          double v71 = *(double *)(v0 + 48);
          BOOL v72 = v98 + v71 < v68 - v70;
          double v73 = v68 + v71;
          double v74 = v68 - v71 - v98;
        }
        else
        {
          double v76 = CGRectGetMaxY(*(CGRect *)&v63);
          double v56 = v42;
          v109.origin.double x = v42;
          v109.origin.CGFloat y = v44;
          double v57 = v46;
          v109.size.CGFloat width = v46;
          double v69 = rect_8;
          v109.size.CGFloat height = rect_8;
          CGFloat v77 = CGRectGetMaxY(v109);
          double v78 = *(double *)(v0 + 48);
          BOOL v72 = v98 + v78 < v77 - v76;
          double v73 = v76 - v78 - v98;
          double v74 = v76 + v78;
        }
        if (v72) {
          double v79 = v74;
        }
        else {
          double v79 = v73;
        }
        v110.origin.double x = rect_24;
        v110.origin.CGFloat y = v64;
        v110.size.CGFloat width = rect;
        v110.size.CGFloat height = v53;
        CGFloat v54 = v96;
        double v55 = CGRectGetMidX(v110) + v96 * -0.5;
        double v75 = v79;
      }
      if (sub_100064EF4(v57, v69))
      {
        uint64_t v80 = v99;
        id v99 = v4;
      }
      else
      {
        double v81 = sub_100067CF8(5.0);
        double v83 = sub_100A4A174(v56, v44, v57, v69, v81, v82);
        [v4 setFrame:sub_100065E4C(v55, v75, v54, v98, v83, v84, v85, v86)];
        uint64_t v80 = v4;
      }
    }
  }
}

BOOL sub_100A49EB8(double a1, double a2)
{
  uint64_t v4 = swift_bridgeObjectRetain();
  uint64_t v5 = (void *)sub_10099985C(v4);
  swift_bridgeObjectRelease();
  id v6 = [v5 interactiveCanvasController];

  if (!v6) {
    return 0;
  }
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    double v8 = (void *)Strong;
    double v27 = a2;
    [v6 visibleScaledRectForCanvasUI];
    CGFloat v10 = v9;
    CGFloat v12 = v11;
    CGFloat v14 = v13;
    CGFloat v16 = v15;
    [v8 frame];
    CGFloat x = v28.origin.x;
    CGFloat y = v28.origin.y;
    CGFloat width = v28.size.width;
    CGFloat height = v28.size.height;
    double MinY = CGRectGetMinY(v28);
    v29.origin.CGFloat x = v10;
    v29.origin.CGFloat y = v12;
    v29.size.CGFloat width = v14;
    v29.size.CGFloat height = v16;
    double v25 = CGRectGetMinY(v29);
    v30.origin.CGFloat x = v10;
    v30.origin.CGFloat y = v12;
    v30.size.CGFloat width = v14;
    v30.size.CGFloat height = v16;
    double MaxY = CGRectGetMaxY(v30);
    v31.origin.CGFloat x = x;
    v31.origin.CGFloat y = y;
    v31.size.CGFloat width = width;
    v31.size.CGFloat height = height;
    double v22 = CGRectGetMaxY(v31);

    if (*(unsigned char *)(v2 + 56)) {
      double v23 = MinY - v25;
    }
    else {
      double v23 = MaxY - v22;
    }
    return v23 >= v27;
  }
  else
  {

    return 0;
  }
}

uint64_t sub_100A4A02C()
{
  swift_bridgeObjectRelease();
  swift_unknownObjectWeakDestroy();
  sub_100523398(v0 + 32);

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for CRLMiniFormatterPositionHelper()
{
  return self;
}

double sub_100A4A098(uint64_t a1)
{
  double x = CGRectNull.origin.x;
  CGFloat y = CGRectNull.origin.y;
  CGFloat width = CGRectNull.size.width;
  CGFloat height = CGRectNull.size.height;
  v8.origin.double x = CGRectNull.origin.x;
  v8.origin.CGFloat y = y;
  v8.size.CGFloat width = width;
  v8.size.CGFloat height = height;
  if ((a1 & 0xC000000000000001) != 0)
  {
    if (__CocoaSet.count.getter() < 1) {
      return x;
    }
  }
  else if (*(uint64_t *)(a1 + 16) < 1)
  {
    return x;
  }
  sub_100A49518(a1, &v8);
  double x = v8.origin.x;
  if (CGRectIsNull(v8)) {
    return 0.0;
  }
  return x;
}

double sub_100A4A174(double a1, double a2, double a3, double a4, double a5, double a6)
{
  return a1 + a6;
}

unint64_t sub_100A4A194()
{
  unint64_t result = qword_10168D2C8;
  if (!qword_10168D2C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168D2C8);
  }
  return result;
}

unint64_t sub_100A4A1F0()
{
  unint64_t result = qword_10168D2D0;
  if (!qword_10168D2D0)
  {
    sub_100522D34(qword_10168D2D8);
    sub_10077E404();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168D2D0);
  }
  return result;
}

uint64_t sub_100A4A264(uint64_t a1)
{
  *(void *)(v1 + 80) = a1;
  return _swift_task_switch(sub_100A4A284, 0, 0);
}

uint64_t sub_100A4A284()
{
  AppDependency.wrappedValue.getter();
  v0[5] = &type metadata for CRLBoardLibraryProvidingDependency;
  v0[6] = &off_10152F800;
  v0[11] = sub_10050F848(v0 + 2, (uint64_t)&type metadata for CRLBoardLibraryProvidingDependency);
  v0[12] = sub_10050F848(v0 + 2, v0[5]);
  type metadata accessor for MainActor();
  v0[13] = static MainActor.shared.getter();
  uint64_t v2 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_100A4A358, v2, v1);
}

uint64_t sub_100A4A358()
{
  uint64_t v1 = *(void **)(v0 + 96);
  swift_release();
  uint64_t v2 = (void *)(*v1 + OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_boardInfos);
  swift_beginAccess();
  *(void *)(v0 + 112) = *v2;
  swift_bridgeObjectRetain();
  return _swift_task_switch(sub_100A4A3FC, 0, 0);
}

uint64_t sub_100A4A3FC()
{
  uint64_t v1 = (uint64_t *)v0[11];
  uint64_t v2 = sub_1006BA9C0(v0[14]);
  v0[15] = v2;
  swift_bridgeObjectRelease();
  uint64_t v3 = *v1;
  uint64_t v4 = (void *)swift_task_alloc();
  v0[16] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_100A4A4BC;
  return sub_100E328B8((uint64_t)v2, v3);
}

uint64_t sub_100A4A4BC(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(v4 + 136) = v1;
  swift_task_dealloc();
  if (v1)
  {
    return _swift_task_switch(sub_100A4A61C, 0, 0);
  }
  else
  {
    swift_release();
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v4 + 16);
    uint64_t v5 = *(uint64_t (**)(uint64_t))(v4 + 8);
    return v5(a1);
  }
}

uint64_t sub_100A4A61C()
{
  swift_release();
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v0 + 16);
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100A4A68C(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 104) = a1;
  *(void *)(v2 + 112) = a2;
  return _swift_task_switch(sub_100A4A6AC, 0, 0);
}

uint64_t sub_100A4A6AC()
{
  AppDependency.wrappedValue.getter();
  v0[5] = &type metadata for CRLBoardLibraryProvidingDependency;
  v0[6] = &off_10152F800;
  v0[15] = sub_10050F848(v0 + 2, (uint64_t)&type metadata for CRLBoardLibraryProvidingDependency);
  v0[16] = sub_10050F848(v0 + 2, v0[5]);
  type metadata accessor for MainActor();
  v0[17] = static MainActor.shared.getter();
  uint64_t v2 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_100A4A780, v2, v1);
}

uint64_t sub_100A4A780()
{
  uint64_t v1 = *(void **)(v0 + 128);
  swift_release();
  uint64_t v2 = (void *)(*v1 + OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_boardInfos);
  swift_beginAccess();
  *(void *)(v0 + 144) = *v2;
  swift_bridgeObjectRetain();
  return _swift_task_switch(sub_100A4A824, 0, 0);
}

uint64_t sub_100A4A824()
{
  uint64_t v1 = (uint64_t *)v0[15];
  uint64_t v2 = sub_1006BA9C0(v0[18]);
  v0[19] = v2;
  swift_bridgeObjectRelease();
  uint64_t v3 = *v1;
  uint64_t v4 = (void *)swift_task_alloc();
  v0[20] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_100A4A8E4;
  return sub_100E328B8((uint64_t)v2, v3);
}

uint64_t sub_100A4A8E4(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 168) = a1;
  *(void *)(v3 + 176) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v4 = sub_100A4AB44;
  }
  else
  {
    swift_release();
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v3 + 16);
    uint64_t v4 = sub_100A4AA0C;
  }
  return _swift_task_switch(v4, 0, 0);
}

uint64_t sub_100A4AA0C()
{
  uint64_t v1 = v0[21];
  uint64_t v2 = v0[13];
  if (*(void *)(v1 + 16) == 1)
  {
    uint64_t v3 = type metadata accessor for CRLBoardEntity();
    uint64_t v4 = *(void *)(v3 - 8);
    sub_10057B3EC(v1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80)), v2);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v4 + 56))(v2, 0, 1, v3);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v5 = type metadata accessor for CRLBoardEntity();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v2, 1, 1, v5);
  }
  uint64_t v6 = (uint64_t (*)(void))v0[1];
  return v6();
}

uint64_t sub_100A4AB44()
{
  swift_release();
  swift_errorRelease();
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v0 + 16);
  if (qword_10166FB50 != -1) {
    swift_once();
  }
  uint64_t v1 = *(void *)(v0 + 104);
  swift_beginAccess();
  id v2 = (id)static OS_os_log.appIntents;
  uint64_t v3 = static os_log_type_t.debug.getter();
  sub_100BAC898((uint64_t)v2, (uint64_t)&_mh_execute_header, v3, (uint64_t)"No open boards found.", 21, 2, (uint64_t)_swiftEmptyArrayStorage);

  uint64_t v4 = type metadata accessor for CRLBoardEntity();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(v1, 1, 1, v4);
  uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
  return v5();
}

uint64_t sub_100A4AC8C(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  uint64_t v3 = *v1;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 24) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_1006D883C;
  v4[10] = v3;
  return _swift_task_switch(sub_100A4A284, 0, 0);
}

uint64_t sub_100A4AD3C(uint64_t a1)
{
  uint64_t v4 = *v1;
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_100528488;
  v5[13] = a1;
  v5[14] = v4;
  return _swift_task_switch(sub_100A4A6AC, 0, 0);
}

ValueMetadata *type metadata accessor for CRLOpenBoardsOptionsProvider()
{
  return &type metadata for CRLOpenBoardsOptionsProvider;
}

void sub_100A4B3B0(uint64_t a1, uint64_t a2)
{
  uint64_t v70 = a2;
  uint64_t v84 = a1;
  uint64_t v3 = type metadata accessor for CRLBoardCRDTData(0);
  __chkstk_darwin(v3 - 8, v4);
  uint64_t v83 = (uint64_t)&v69 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v95 = type metadata accessor for UUID();
  int64_t v6 = *(void *)(v95 - 8);
  __chkstk_darwin(v95, v7);
  double v82 = (char *)&v69 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9, v10);
  double v81 = (char *)&v69 - v11;
  __chkstk_darwin(v12, v13);
  uint64_t v80 = (char *)&v69 - v14;
  if (qword_10166FBD0 != -1) {
LABEL_43:
  }
    swift_once();
  swift_beginAccess();
  id v15 = (id)static OS_os_log.boardItemLifecycle;
  uint64_t v16 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v15, (uint64_t)&_mh_execute_header, v16, (uint64_t)"🟢 CRLCommandInsertBoardItems commit() begin", 46, 0, (uint64_t)_swiftEmptyArrayStorage);

  uint64_t v17 = *(void *)(v2 + OBJC_IVAR____TtC8Freeform26CRLCommandInsertBoardItems_boardItemsByIndex);
  uint64_t v18 = *(void *)(v17 + 64);
  uint64_t v71 = v17 + 64;
  uint64_t v19 = 1 << *(unsigned char *)(v17 + 32);
  uint64_t v20 = -1;
  if (v19 < 64) {
    uint64_t v20 = ~(-1 << v19);
  }
  unint64_t v21 = v20 & v18;
  unint64_t v73 = v2;
  uint64_t v74 = OBJC_IVAR____TtC8Freeform26CRLCommandInsertBoardItems_container;
  uint64_t v79 = OBJC_IVAR____TtC8Freeform8CRLBoard_data;
  int64_t v72 = (unint64_t)(v19 + 63) >> 6;
  uint64_t v94 = (void (**)(char *, uint64_t))(v6 + 8);
  swift_bridgeObjectRetain();
  int64_t v6 = 0;
  long long v78 = xmmword_10118E4B0;
  uint64_t v75 = v17;
  while (1)
  {
    if (v21)
    {
      unint64_t v22 = __clz(__rbit64(v21));
      uint64_t v23 = (v21 - 1) & v21;
      unint64_t v24 = v22 | (v6 << 6);
      if (!*(void *)(v17 + 16)) {
        goto LABEL_39;
      }
      goto LABEL_27;
    }
    int64_t v25 = v6 + 1;
    if (__OFADD__(v6, 1)) {
      goto LABEL_42;
    }
    if (v25 >= v72)
    {
LABEL_38:
      swift_release();
      sub_10084BFA8(v17, v70);
      return;
    }
    unint64_t v26 = *(void *)(v71 + 8 * v25);
    ++v6;
    if (!v26)
    {
      int64_t v6 = v25 + 1;
      if (v25 + 1 >= v72) {
        goto LABEL_38;
      }
      unint64_t v26 = *(void *)(v71 + 8 * v6);
      if (!v26)
      {
        int64_t v6 = v25 + 2;
        if (v25 + 2 >= v72) {
          goto LABEL_38;
        }
        unint64_t v26 = *(void *)(v71 + 8 * v6);
        if (!v26)
        {
          int64_t v6 = v25 + 3;
          if (v25 + 3 >= v72) {
            goto LABEL_38;
          }
          unint64_t v26 = *(void *)(v71 + 8 * v6);
          if (!v26)
          {
            int64_t v6 = v25 + 4;
            if (v25 + 4 >= v72) {
              goto LABEL_38;
            }
            unint64_t v26 = *(void *)(v71 + 8 * v6);
            if (!v26) {
              break;
            }
          }
        }
      }
    }
LABEL_26:
    uint64_t v23 = (v26 - 1) & v26;
    unint64_t v24 = __clz(__rbit64(v26)) + (v6 << 6);
    if (!*(void *)(v17 + 16))
    {
LABEL_39:
      __break(1u);
LABEL_40:
      __break(1u);
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      goto LABEL_43;
    }
LABEL_27:
    unint64_t v2 = v17;
    unint64_t v28 = sub_100955F14(*(void *)(*(void *)(v17 + 48) + 8 * v24));
    if ((v29 & 1) == 0) {
      goto LABEL_40;
    }
    unint64_t v2 = *(void *)(*(void *)(v17 + 56) + 8 * v28);
    unint64_t v76 = v23;
    int64_t v77 = v6;
    if (v2 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v30 = _CocoaArrayWrapper.endIndex.getter();
      if (!v30) {
        goto LABEL_5;
      }
    }
    else
    {
      uint64_t v30 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (!v30) {
        goto LABEL_5;
      }
    }
    if (v30 < 1) {
      goto LABEL_41;
    }
    uint64_t v31 = 0;
    double v87 = *(char **)(v73 + v74);
    unint64_t v85 = v2 & 0xC000000000000001;
    uint64_t v86 = OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData;
    uint64_t v88 = v30;
    unint64_t v89 = v2;
    do
    {
      if (v85) {
        char v32 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        char v32 = *(id *)(v2 + 8 * v31 + 32);
      }
      double v33 = v32;
      uint64_t v93 = v31 + 1;
      CGFloat v34 = (void *)static OS_os_log.boardItemLifecycle;
      sub_1005057FC((uint64_t *)&unk_101672B40);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = v78;
      CGFloat v36 = *(void (**)(void))((swift_isaMask & *v33) + 0x88);
      id v92 = v34;
      double v37 = v80;
      v36();
      uint64_t v38 = UUID.uuidString.getter();
      uint64_t v40 = v39;
      double v96 = *v94;
      uint64_t v41 = v95;
      v96(v37, v95);
      *(void *)(inited + 56) = &type metadata for String;
      unint64_t v42 = sub_100528BE4();
      *(void *)(inited + 64) = v42;
      *(void *)(inited + 32) = v38;
      uint64_t v91 = inited + 32;
      *(void *)(inited + 40) = v40;
      double v43 = v33;
      id v90 = v43;
      id v44 = [v43 description];
      uint64_t v45 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v47 = v46;

      *(void *)(inited + 96) = &type metadata for String;
      *(void *)(inited + 104) = v42;
      *(void *)(inited + 72) = v45;
      *(void *)(inited + 80) = v47;
      CGFloat v48 = v87;
      double v49 = *(void (**)(uint64_t))(**(void **)&v87[v86] + 256);
      uint64_t v50 = swift_retain();
      double v51 = v81;
      v49(v50);
      swift_release();
      uint64_t v52 = UUID.uuidString.getter();
      uint64_t v54 = v53;
      v96(v51, v41);
      *(void *)(inited + 136) = &type metadata for String;
      *(void *)(inited + 144) = v42;
      *(void *)(inited + 112) = v52;
      *(void *)(inited + 120) = v54;
      id v55 = v48;
      id v56 = [v55 description];
      uint64_t v57 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v59 = v58;

      *(void *)(inited + 176) = &type metadata for String;
      *(void *)(inited + 184) = v42;
      *(void *)(inited + 152) = v57;
      *(void *)(inited + 160) = v59;
      uint64_t v60 = *(void *)(v84 + v79) + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
      swift_beginAccess();
      uint64_t v61 = v60;
      uint64_t v62 = v83;
      sub_100530898(v61, v83);
      swift_retain();
      sub_1005057FC(&qword_101674550);
      CGFloat v63 = v82;
      CRRegister.wrappedValue.getter();
      sub_1005308FC(v62);
      swift_release();
      uint64_t v64 = UUID.uuidString.getter();
      uint64_t v66 = v65;
      v96(v63, v95);
      *(void *)(inited + 216) = &type metadata for String;
      *(void *)(inited + 224) = v42;
      uint64_t v31 = v93;
      *(void *)(inited + 192) = v64;
      *(void *)(inited + 200) = v66;
      uint64_t v67 = static os_log_type_t.default.getter();
      id v68 = v92;
      sub_100BAC898((uint64_t)v92, (uint64_t)&_mh_execute_header, v67, (uint64_t)"🟢 CRLCommandInsertBoardItems commit() add new %{public}@%{public}@ to parent %{public}@%{public}@. Board: %{public}@", 119, 0, inited);
      swift_setDeallocating();
      sub_1005057FC(&qword_101672B50);
      swift_arrayDestroy();

      unint64_t v2 = v89;
    }
    while (v88 != v31);
LABEL_5:
    swift_bridgeObjectRelease();
    uint64_t v17 = v75;
    unint64_t v21 = v76;
    int64_t v6 = v77;
  }
  int64_t v27 = v25 + 5;
  if (v27 >= v72) {
    goto LABEL_38;
  }
  unint64_t v26 = *(void *)(v71 + 8 * v27);
  if (v26)
  {
    int64_t v6 = v27;
    goto LABEL_26;
  }
  while (1)
  {
    int64_t v6 = v27 + 1;
    if (__OFADD__(v27, 1)) {
      break;
    }
    if (v6 >= v72) {
      goto LABEL_38;
    }
    unint64_t v26 = *(void *)(v71 + 8 * v6);
    ++v27;
    if (v26) {
      goto LABEL_26;
    }
  }
  __break(1u);
}

uint64_t sub_100A4BC18()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

id sub_100A4BC6C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLCommandInsertBoardItems();
  return [super dealloc];
}

uint64_t type metadata accessor for CRLCommandInsertBoardItems()
{
  return self;
}

uint64_t sub_100A4BD24()
{
  uint64_t v1 = *(void *)(*v0 + OBJC_IVAR____TtC8Freeform26CRLCommandInsertBoardItems_actionString);
  swift_bridgeObjectRetain();
  return v1;
}

id sub_100A4BD64(void *a1, uint64_t a2)
{
  uint64_t v5 = (uint64_t *)&v2[OBJC_IVAR____TtC8Freeform26CRLCommandInsertBoardItems_actionString];
  int64_t v6 = self;
  uint64_t v7 = v2;
  id v8 = [v6 mainBundle];
  NSString v9 = String._bridgeToObjectiveC()();
  NSString v10 = String._bridgeToObjectiveC()();
  NSString v11 = String._bridgeToObjectiveC()();
  id v12 = [v8 localizedStringForKey:v9 value:v10 table:v11];

  uint64_t v13 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v15 = v14;

  *uint64_t v5 = v13;
  v5[1] = v15;
  *(void *)&v7[OBJC_IVAR____TtC8Freeform26CRLCommandInsertBoardItems_container] = a1;
  *(void *)&v7[OBJC_IVAR____TtC8Freeform26CRLCommandInsertBoardItems_boardItemsByIndex] = a2;
  id v16 = a1;

  v18.receiver = v7;
  v18.super_class = (Class)type metadata accessor for CRLCommandInsertBoardItems();
  return [super init];
}

double *sub_100A4BECC(unint64_t a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_1005057FC(&qword_10168D428);
  __chkstk_darwin(v6 - 8, v7);
  NSString v9 = (char *)v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = type metadata accessor for CRLSELibraryViewModeItemNode(0);
  uint64_t v30 = *(void *)(v34 - 8);
  __chkstk_darwin(v34, v10);
  uint64_t v33 = (uint64_t)v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12, v13);
  uint64_t v29 = (uint64_t)v28 - v14;
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = a2;
  if (a1 >> 62) {
    goto LABEL_18;
  }
  uint64_t v16 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  id v17 = a2;
  swift_bridgeObjectRetain();
  for (; v16; uint64_t v16 = _CocoaArrayWrapper.endIndex.getter())
  {
    v28[1] = v15;
    void v28[2] = v3;
    unint64_t v32 = a1 & 0xC000000000000001;
    objc_super v18 = (unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48);
    uint64_t v19 = _swiftEmptyArrayStorage;
    uint64_t v20 = 4;
    uint64_t v31 = (id *)a1;
    uint64_t v3 = v16;
    while (1)
    {
      uint64_t v15 = v20 - 4;
      unint64_t v21 = v32 ? (id *)specialized _ArrayBuffer._getElementSlowPath(_:)() : (id *)*(id *)(a1 + 8 * v20);
      a1 = (unint64_t)v21;
      uint64_t v22 = v20 - 3;
      if (__OFADD__(v15, 1)) {
        break;
      }
      sub_100A4C228(v21, (uint64_t)v9);

      if ((*v18)(v9, 1, v34) == 1)
      {
        sub_100522F00((uint64_t)v9, &qword_10168D428);
      }
      else
      {
        uint64_t v23 = v29;
        sub_100A54AB4((uint64_t)v9, v29, type metadata accessor for CRLSELibraryViewModeItemNode);
        sub_100A54AB4(v23, v33, type metadata accessor for CRLSELibraryViewModeItemNode);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v19 = (double *)sub_100F64000(0, *((void *)v19 + 2) + 1, 1, (unint64_t)v19);
        }
        unint64_t v25 = *((void *)v19 + 2);
        unint64_t v24 = *((void *)v19 + 3);
        if (v25 >= v24 >> 1) {
          uint64_t v19 = (double *)sub_100F64000(v24 > 1, v25 + 1, 1, (unint64_t)v19);
        }
        *((void *)v19 + 2) = v25 + 1;
        sub_100A54AB4(v33, (uint64_t)v19+ ((*(unsigned __int8 *)(v30 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80))+ *(void *)(v30 + 72) * v25, type metadata accessor for CRLSELibraryViewModeItemNode);
      }
      ++v20;
      a1 = (unint64_t)v31;
      if (v22 == v3)
      {
        swift_bridgeObjectRelease();
        goto LABEL_20;
      }
    }
    __break(1u);
LABEL_18:
    id v26 = a2;
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  uint64_t v19 = _swiftEmptyArrayStorage;
LABEL_20:

  swift_release();
  return v19;
}

uint64_t sub_100A4C228@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v125 = a2;
  uint64_t v126 = 0;
  uint64_t v3 = type metadata accessor for CRLSELibraryViewModel.Item(0);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3, v5);
  long long v117 = &v100[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = sub_1005057FC((uint64_t *)&unk_1016741E0);
  __chkstk_darwin(v7 - 8, v8);
  CGRect v108 = &v100[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v10, v11);
  CGRect v106 = &v100[-v12];
  uint64_t v13 = sub_1005057FC((uint64_t *)&unk_1016741D0);
  __chkstk_darwin(v13 - 8, v14);
  CGRect v111 = &v100[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v112 = type metadata accessor for CRLBoardViewModelMetadata(0);
  uint64_t v110 = *(void *)(v112 - 8);
  __chkstk_darwin(v112, v16);
  CGRect v107 = &v100[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v18 = sub_1005057FC(&qword_101672EB0);
  __chkstk_darwin(v18 - 8, v19);
  long long v119 = &v100[-((v20 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v21 = type metadata accessor for CRLSEBoardIdentifier(0);
  __chkstk_darwin(v21 - 8, v22);
  long long v118 = &v100[-((v23 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v24 = type metadata accessor for CRLSEBoardIdentifierStorage(0);
  __chkstk_darwin(v24, v25);
  long long v113 = &v100[-((v26 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v27 = type metadata accessor for CRLBoardIdentifier(0);
  __chkstk_darwin(v27 - 8, v28);
  uint64_t v30 = &v100[-((v29 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v31 = type metadata accessor for CRLBoardLibraryViewModel.Folder(0);
  __chkstk_darwin(v31 - 8, v32);
  uint64_t v34 = &v100[-((v33 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v35 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  __chkstk_darwin(v35, v36);
  uint64_t v38 = &v100[-((v37 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v39 = sub_1005057FC(&qword_10168D3C8);
  __chkstk_darwin(v39 - 8, v40);
  uint64_t v122 = &v100[-((v41 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v42, v43);
  uint64_t v45 = &v100[-v44];
  uint64_t v46 = sub_1005057FC(&qword_10168D428);
  __chkstk_darwin(v46 - 8, v47);
  double v49 = &v100[-((v48 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v50 = type metadata accessor for CRLSELibraryViewModeItemNode(0);
  uint64_t v51 = *(void *)(v50 - 8);
  long long v115 = *(void (**)(unsigned char *, uint64_t, uint64_t))(v51 + 56);
  uint64_t v116 = v50;
  uint64_t v114 = v51 + 56;
  v115(v49, 1, 1);
  uint64_t v123 = v4;
  uint64_t v124 = v3;
  uint64_t v121 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56);
  v121(v45, 1, 1, v3);
  sub_100A549EC((uint64_t)a1 + OBJC_IVAR____TtC8Freeform32CRLBoardLibraryViewModelItemNode_item, (uint64_t)v38, type metadata accessor for CRLBoardLibraryViewModel.Item);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    CGRect v109 = a1;
    if (EnumCaseMultiPayload == 1)
    {
      sub_100522F00((uint64_t)v45, &qword_10168D3C8);
      sub_100A54AB4((uint64_t)v38, (uint64_t)v34, type metadata accessor for CRLBoardLibraryViewModel.Folder);
      uint64_t v53 = sub_1005057FC(&qword_101670F30);
      int v54 = (*(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v53 - 8) + 48))(v34, 5, v53);
      uint64_t v55 = v125;
      id v56 = v121;
      switch(v54)
      {
        case 1:
          *uint64_t v45 = 0;
          goto LABEL_24;
        case 2:
          char v90 = 1;
          goto LABEL_23;
        case 3:
          char v90 = 2;
          goto LABEL_23;
        case 4:
          char v90 = 3;
LABEL_23:
          *uint64_t v45 = v90;
LABEL_24:
          uint64_t v60 = v124;
          swift_storeEnumTagMultiPayload();
          uint64_t v58 = v45;
          uint64_t v59 = 0;
          goto LABEL_25;
        case 5:
          goto LABEL_5;
        default:
          swift_bridgeObjectRelease();
          uint64_t v57 = type metadata accessor for UUID();
          (*(void (**)(unsigned char *, uint64_t))(*(void *)(v57 - 8) + 8))(v34, v57);
LABEL_5:
          uint64_t v58 = v45;
          uint64_t v59 = 1;
          uint64_t v60 = v124;
LABEL_25:
          v56(v58, v59, 1, v60);
          break;
      }
      goto LABEL_26;
    }
    uint64_t v62 = (uint64_t *)&v38[*(int *)(sub_1005057FC(&qword_101677100) + 48)];
    uint64_t v64 = *v62;
    uint64_t v63 = v62[1];
    uint64_t v104 = v64;
    uint64_t v105 = v63;
    sub_100A54AB4((uint64_t)v38, (uint64_t)v30, type metadata accessor for CRLBoardIdentifier);
    uint64_t v65 = type metadata accessor for UUID();
    uint64_t v66 = v113;
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v65 - 8) + 16))(v113, v30, v65);
    uint64_t v67 = (uint64_t *)&v30[*(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20)];
    uint64_t v68 = *v67;
    uint64_t v69 = v67[1];
    uint64_t v70 = &v66[*(int *)(v24 + 20)];
    void *v70 = v68;
    v70[1] = v69;
    sub_100A549EC((uint64_t)v66, (uint64_t)v118, type metadata accessor for CRLSEBoardIdentifierStorage);
    uint64_t v71 = type metadata accessor for Date();
    uint64_t v102 = *(void *)(v71 - 8);
    CGRect v103 = *(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v102 + 56);
    v103(v119, 1, 1, v71);
    swift_bridgeObjectRetain();
    int64_t v72 = v111;
    uint64_t v73 = v126;
    sub_100ED7F04((uint64_t)v30, (uint64_t)v111);
    if (v73)
    {
      swift_errorRelease();
      (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v110 + 56))(v72, 1, 1, v112);
      sub_100A54A54((uint64_t)v66, type metadata accessor for CRLSEBoardIdentifierStorage);
      sub_100A54A54((uint64_t)v30, type metadata accessor for CRLBoardIdentifier);
      sub_100522F00((uint64_t)v72, (uint64_t *)&unk_1016741D0);
      BOOL v74 = 0;
      uint64_t v126 = 0;
      uint64_t v75 = v123;
      uint64_t v60 = v124;
      uint64_t v76 = (uint64_t)v122;
    }
    else
    {
      uint64_t v126 = 0;
      uint64_t v77 = v112;
      (*(void (**)(unsigned char *, void, uint64_t))(v110 + 56))(v72, 0, 1);
      long long v78 = v107;
      sub_100A54AB4((uint64_t)v72, (uint64_t)v107, type metadata accessor for CRLBoardViewModelMetadata);
      CGRect v111 = &v78[*(int *)(v77 + 28)];
      uint64_t v79 = v106;
      sub_100522E9C((uint64_t)v111, (uint64_t)v106, (uint64_t *)&unk_1016741E0);
      uint64_t v110 = type metadata accessor for CRLBoardViewModelMetadata.ShareMetadata(0);
      uint64_t v80 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v110 - 8) + 48);
      BOOL v101 = v80(v79, 1, v110) != 1;
      sub_100522F00((uint64_t)v79, (uint64_t *)&unk_1016741E0);
      double v81 = v119;
      sub_100522F00((uint64_t)v119, &qword_101672EB0);
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v102 + 16))(v81, &v78[*(int *)(v112 + 24)], v71);
      v103(v81, 0, 1, v71);
      double v82 = v108;
      sub_100522E9C((uint64_t)v111, (uint64_t)v108, (uint64_t *)&unk_1016741E0);
      if (v80(v82, 1, v110) == 1)
      {
        sub_100522F00((uint64_t)v82, (uint64_t *)&unk_1016741E0);
        sub_100A54A54((uint64_t)v78, type metadata accessor for CRLBoardViewModelMetadata);
        sub_100A54A54((uint64_t)v113, type metadata accessor for CRLSEBoardIdentifierStorage);
        sub_100A54A54((uint64_t)v30, type metadata accessor for CRLBoardIdentifier);
      }
      else
      {
        char v84 = v82[24];
        sub_100A54A54((uint64_t)v82, type metadata accessor for CRLBoardViewModelMetadata.ShareMetadata);
        sub_100A54A54((uint64_t)v78, type metadata accessor for CRLBoardViewModelMetadata);
        sub_100A54A54((uint64_t)v113, type metadata accessor for CRLSEBoardIdentifierStorage);
        sub_100A54A54((uint64_t)v30, type metadata accessor for CRLBoardIdentifier);
        if ((v84 & 1) == 0)
        {
          swift_bridgeObjectRelease();
          sub_100522F00((uint64_t)v119, &qword_101672EB0);
          sub_100A54A54((uint64_t)v118, type metadata accessor for CRLSEBoardIdentifier);
          uint64_t v60 = v124;
          uint64_t v55 = v125;
LABEL_26:
          a1 = v109;
          uint64_t v76 = (uint64_t)v122;
          uint64_t v75 = v123;
          goto LABEL_27;
        }
      }
      uint64_t v75 = v123;
      uint64_t v60 = v124;
      uint64_t v76 = (uint64_t)v122;
      BOOL v74 = v101;
    }
    sub_100522F00((uint64_t)v45, &qword_10168D3C8);
    unint64_t v85 = (int *)sub_1005057FC((uint64_t *)&unk_10169B720);
    uint64_t v86 = &v45[v85[12]];
    uint64_t v87 = v85[16];
    uint64_t v88 = (uint64_t)&v45[v85[20]];
    sub_100A54AB4((uint64_t)v118, (uint64_t)v45, type metadata accessor for CRLSEBoardIdentifier);
    uint64_t v89 = v105;
    *(void *)uint64_t v86 = v104;
    *((void *)v86 + 1) = v89;
    v45[v87] = v74;
    sub_10051B3EC((uint64_t)v119, v88, &qword_101672EB0);
    swift_storeEnumTagMultiPayload();
    v121(v45, 0, 1, v60);
    uint64_t v55 = v125;
    a1 = v109;
    goto LABEL_27;
  }
  sub_100522F00((uint64_t)v45, &qword_10168D3C8);
  int v61 = *v38;
  if (*v38)
  {
    if (v61 != 1) {
      LOBYTE(v61) = 2;
    }
    *uint64_t v45 = v61;
  }
  else
  {
    *uint64_t v45 = 0;
  }
  uint64_t v75 = v123;
  uint64_t v60 = v124;
  uint64_t v83 = v121;
  uint64_t v76 = (uint64_t)v122;
  uint64_t v55 = v125;
  swift_storeEnumTagMultiPayload();
  v83(v45, 0, 1, v60);
LABEL_27:
  sub_100522E9C((uint64_t)v45, v76, &qword_10168D3C8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v75 + 48))(v76, 1, v60) == 1)
  {
    sub_100522F00((uint64_t)v45, &qword_10168D3C8);
    sub_100522F00(v76, &qword_10168D3C8);
  }
  else
  {
    uint64_t v91 = v117;
    sub_100A54AB4(v76, (uint64_t)v117, type metadata accessor for CRLSELibraryViewModel.Item);
    sub_100522F00((uint64_t)v49, &qword_10168D428);
    sub_100A549EC((uint64_t)v91, (uint64_t)v49, type metadata accessor for CRLSELibraryViewModel.Item);
    uint64_t v92 = v116;
    *(void *)&v49[*(int *)(v116 + 20)] = _swiftEmptyArrayStorage;
    ((void (*)(unsigned char *, void, uint64_t, uint64_t))v115)(v49, 0, 1, v92);
    id v93 = [a1 children];
    type metadata accessor for CRLBoardLibraryViewModelItemNode();
    uint64_t v94 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    id v95 = v120;
    uint64_t v96 = v55;
    uint64_t v97 = sub_100A4BECC(v94, v95, &unk_10151F4D0);
    swift_bridgeObjectRelease();
    sub_100A54A54((uint64_t)v91, type metadata accessor for CRLSELibraryViewModel.Item);
    sub_100522F00((uint64_t)v45, &qword_10168D3C8);

    uint64_t v98 = *(int *)(v92 + 20);
    swift_bridgeObjectRelease();
    *(void *)&v49[v98] = v97;
    uint64_t v55 = v96;
  }
  sub_100522E9C((uint64_t)v49, v55, &qword_10168D428);
  return sub_100522F00((uint64_t)v49, &qword_10168D428);
}

void sub_100A4D028()
{
  id v1 = v0;
  unint64_t v2 = swift_bridgeObjectRetain();
  uint64_t v3 = sub_100A4BECC(v2, v1);
  swift_bridgeObjectRelease();
  id v4 = [objc_allocWithZone((Class)NSFileCoordinator) initWithFilePresenter:v1];
  URL._bridgeToObjectiveC()((NSURL *)OBJC_IVAR____TtC8Freeform13CRLSEImporter_librarySnapshotURL);
  uint64_t v6 = v5;
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = v3;
  *(void *)(v7 + 24) = v1;
  uint64_t v8 = (void *)swift_allocObject();
  v8[2] = sub_100A548E8;
  void v8[3] = v7;
  aBlock[4] = sub_1008A82BC;
  aBlock[5] = v8;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = *(id *)"";
  aBlock[2] = sub_1006F3260;
  aBlock[3] = &unk_10151F470;
  uint64_t v9 = _Block_copy(aBlock);
  id v10 = v1;
  swift_retain();
  swift_release();
  aBlock[0] = 0;
  [v4 coordinateWritingItemAtURL:v6 options:0 error:aBlock byAccessor:v9];
  _Block_release(v9);

  id v11 = aBlock[0];
  LOBYTE(v6) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (v6)
  {
    __break(1u);
LABEL_8:
    swift_once();
    goto LABEL_4;
  }
  if (!v11)
  {
    swift_release();
    goto LABEL_6;
  }
  uint64_t v12 = qword_10166FA70;
  uint64_t v8 = v11;
  if (v12 != -1) {
    goto LABEL_8;
  }
LABEL_4:
  swift_beginAccess();
  uint64_t v13 = (void *)static OS_os_log.crlSharingExtension;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117D8C0;
  uint64_t v15 = v8;
  id v16 = v13;
  uint64_t v17 = sub_1009F4864();
  uint64_t v19 = v18;

  *(void *)(inited + 56) = &type metadata for String;
  unint64_t v20 = sub_100528BE4();
  *(void *)(inited + 64) = v20;
  *(void *)(inited + 32) = v17;
  *(void *)(inited + 40) = v19;
  sub_10050BF48(0, (unint64_t *)&qword_10168D3C0);
  uint64_t v21 = v15;
  uint64_t v22 = String.init<A>(reflecting:)();
  *(void *)(inited + 96) = &type metadata for String;
  *(void *)(inited + 104) = v20;
  *(void *)(inited + 72) = v22;
  *(void *)(inited + 80) = v23;
  uint64_t v24 = static os_log_type_t.error.getter();
  sub_100BAC898((uint64_t)v16, (uint64_t)&_mh_execute_header, v24, (uint64_t)"Failed to write library snapshot data due to file coordination error : %{public}@ <%@>", 86, 2, inited);

  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();
  swift_release();

  id v4 = v16;
LABEL_6:
}

uint64_t sub_100A4D3C4()
{
  type metadata accessor for PropertyListEncoder();
  swift_allocObject();
  PropertyListEncoder.init()();
  dispatch thunk of PropertyListEncoder.outputFormat.setter();
  sub_1005057FC((uint64_t *)&unk_10168D410);
  sub_100A54900();
  uint64_t v0 = dispatch thunk of PropertyListEncoder.encode<A>(_:)();
  unint64_t v2 = v1;
  Data.write(to:options:)();
  sub_100510084(v0, v2);
  return swift_release();
}

void sub_100A4D644()
{
  unint64_t v1 = v0;
  uint64_t v2 = sub_1005057FC(&qword_101672E90);
  __chkstk_darwin(v2 - 8, v3);
  uint64_t v5 = (char *)v49 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for URL();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6, v8);
  id v10 = (char *)v49 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v11 = [objc_allocWithZone((Class)NSFileCoordinator) initWithFilePresenter:v1];
  uint64_t v12 = (uint64_t)v1 + OBJC_IVAR____TtC8Freeform13CRLSEImporter_presentedItemURL;
  swift_beginAccess();
  sub_100522E9C(v12, (uint64_t)v5, &qword_101672E90);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {

    sub_100522F00((uint64_t)v5, &qword_101672E90);
    return;
  }
  id v52 = v11;
  uint64_t v51 = v7;
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v10, v5, v6);
  uint64_t v13 = self;
  id v14 = [v13 defaultManager];
  URL.path(percentEncoded:)(1);
  NSString v15 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  unsigned __int8 v16 = [v14 fileExistsAtPath:v15];

  if ((v16 & 1) == 0)
  {
    id v18 = [v13 defaultManager];
    URL._bridgeToObjectiveC()(v19);
    uint64_t v21 = v20;
    aBlock[0] = 0;
    unsigned int v22 = [v18 createDirectoryAtURL:v20 withIntermediateDirectories:1 attributes:0 error:aBlock];

    if (v22)
    {
      id v23 = aBlock[0];
    }
    else
    {
      id v24 = aBlock[0];
      _convertNSErrorToError(_:)();

      swift_willThrow();
      swift_errorRelease();
    }
  }
  URL._bridgeToObjectiveC()(v17);
  uint64_t v26 = v25;
  URL._bridgeToObjectiveC()(v27);
  uint64_t v29 = v28;
  uint64_t v30 = swift_allocObject();
  *(void *)(v30 + 16) = v1;
  uint64_t v31 = (void *)swift_allocObject();
  void v31[2] = sub_100A546E8;
  v31[3] = v30;
  aBlock[4] = sub_100A54700;
  aBlock[5] = v31;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = *(id *)"";
  aBlock[2] = sub_100A4EC38;
  aBlock[3] = &unk_10151F3F8;
  uint64_t v32 = _Block_copy(aBlock);
  id v33 = v1;
  swift_retain();
  swift_release();
  aBlock[0] = 0;
  id v34 = v52;
  [v52 coordinateReadingItemAtURL:v26 options:0 writingItemAtURL:v29 options:0 error:aBlock byAccessor:v32];
  _Block_release(v32);

  id v35 = aBlock[0];
  LOBYTE(v26) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (v26)
  {
    __break(1u);
LABEL_14:
    swift_once();
    goto LABEL_10;
  }
  if (!v35)
  {
    (*(void (**)(char *, uint64_t))(v51 + 8))(v10, v6);

    goto LABEL_12;
  }
  v49[1] = v30;
  uint64_t v50 = v6;
  uint64_t v36 = qword_10166FA70;
  uint64_t v31 = v35;
  if (v36 != -1) {
    goto LABEL_14;
  }
LABEL_10:
  swift_beginAccess();
  uint64_t v37 = (void *)static OS_os_log.crlSharingExtension;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117D8C0;
  uint64_t v39 = v31;
  id v40 = v37;
  uint64_t v41 = sub_1009F4864();
  uint64_t v43 = v42;

  *(void *)(inited + 56) = &type metadata for String;
  unint64_t v44 = sub_100528BE4();
  *(void *)(inited + 64) = v44;
  *(void *)(inited + 32) = v41;
  *(void *)(inited + 40) = v43;
  uint64_t v53 = v39;
  sub_10050BF48(0, (unint64_t *)&qword_10168D3C0);
  uint64_t v45 = v39;
  uint64_t v46 = String.init<A>(reflecting:)();
  *(void *)(inited + 96) = &type metadata for String;
  *(void *)(inited + 104) = v44;
  *(void *)(inited + 72) = v46;
  *(void *)(inited + 80) = v47;
  uint64_t v48 = static os_log_type_t.error.getter();
  sub_100BAC898((uint64_t)v40, (uint64_t)&_mh_execute_header, v48, (uint64_t)"Failed to import sharing extension content due to file coordination error: %{public}@ <%@>", 90, 2, inited);

  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  (*(void (**)(char *, uint64_t))(v51 + 8))(v10, v50);
LABEL_12:
  swift_release();
}

uint64_t sub_100A4DC6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v105 = a3;
  uint64_t v3 = sub_1005057FC(&qword_10168D3C8);
  __chkstk_darwin(v3 - 8, v4);
  uint64_t v87 = (uint64_t)v83 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6, v7);
  uint64_t v92 = (uint64_t)v83 - v8;
  uint64_t v91 = type metadata accessor for CRLSELibraryViewModel.Item(0);
  uint64_t v9 = *(char **)(v91 - 8);
  __chkstk_darwin(v91, v10);
  uint64_t v86 = (uint64_t)v83 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1005057FC((uint64_t *)&unk_101674520);
  __chkstk_darwin(v12 - 8, v13);
  uint64_t v108 = (uint64_t)v83 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for UUID();
  uint64_t v94 = *(char **)(v15 - 8);
  __chkstk_darwin(v15, v16);
  id v18 = (char *)v83 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = type metadata accessor for URL();
  uint64_t v106 = *(void *)(v19 - 8);
  __chkstk_darwin(v19, v20);
  unsigned int v22 = (double *)((char *)v83 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v23 = sub_1005057FC(&qword_101672E90);
  __chkstk_darwin(v23 - 8, v24);
  uint64_t v104 = (char *)v83 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  CGRect v107 = (char *)self;
  id v26 = [v107 defaultManager];
  URL._bridgeToObjectiveC()(v27);
  uint64_t v29 = v28;
  v114[0] = 0;
  id v30 = [v26 contentsOfDirectoryAtURL:v28 includingPropertiesForKeys:0 options:4 error:v114];

  id v31 = v114[0];
  uint64_t v93 = v19;
  uint64_t v102 = v18;
  uint64_t v85 = v15;
  id v95 = (double *)v9;
  if (v30)
  {
    uint64_t v32 = (double *)static Array._unconditionallyBridgeFromObjectiveC(_:)();
    id v33 = v31;
  }
  else
  {
    id v34 = v114[0];
    _convertNSErrorToError(_:)();

    swift_willThrow();
    if (qword_10166FA70 != -1) {
      swift_once();
    }
    swift_beginAccess();
    id v35 = (void *)static OS_os_log.crlSharingExtension;
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_10117D8C0;
    swift_getErrorValue();
    uint64_t v37 = v112;
    uint64_t v38 = v113;
    id v39 = v35;
    uint64_t v40 = Error.publicDescription.getter(v37, v38);
    uint64_t v42 = v41;
    *(void *)(inited + 56) = &type metadata for String;
    unint64_t v43 = sub_100528BE4();
    *(void *)(inited + 64) = v43;
    *(void *)(inited + 32) = v40;
    *(void *)(inited + 40) = v42;
    swift_getErrorValue();
    uint64_t v44 = Error.fullDescription.getter(v111);
    *(void *)(inited + 96) = &type metadata for String;
    *(void *)(inited + 104) = v43;
    *(void *)(inited + 72) = v44;
    *(void *)(inited + 80) = v45;
    uint64_t v46 = static os_log_type_t.error.getter();
    sub_100BAC898((uint64_t)v39, (uint64_t)&_mh_execute_header, v46, (uint64_t)"Error loading contents of import directory: %{public}@ <%@>", 59, 2, inited);
    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();

    swift_errorRelease();
    uint64_t v32 = _swiftEmptyArrayStorage;
  }
  uint64_t v101 = *((void *)v32 + 2);
  if (!v101) {
    return swift_bridgeObjectRelease();
  }
  if (qword_10166FA70 != -1) {
LABEL_26:
  }
    swift_once();
  swift_beginAccess();
  uint64_t v47 = (void *)static OS_os_log.crlSharingExtension;
  v83[1] = sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t v48 = swift_initStackObject();
  long long v103 = xmmword_10117E810;
  *(_OWORD *)(v48 + 16) = xmmword_10117E810;
  char v84 = v32;
  uint64_t v49 = *((void *)v32 + 2);
  *(void *)(v48 + 56) = &type metadata for Int;
  *(void *)(v48 + 64) = &protocol witness table for Int;
  *(void *)(v48 + 32) = v49;
  id v50 = v47;
  uint64_t v51 = static os_log_type_t.debug.getter();
  sub_100BAC898((uint64_t)v50, (uint64_t)&_mh_execute_header, v51, (uint64_t)"Begin import of %d items", 24, 2, v48);
  swift_setDeallocating();
  uint64_t v52 = sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  type metadata accessor for PropertyListDecoder();
  swift_allocObject();
  PropertyListDecoder.init()();
  id v53 = [v107 defaultManager];
  uint64_t v54 = v105 + OBJC_IVAR____TtC8Freeform13CRLSEImporter_pendingBoardsURL;
  URL.path(percentEncoded:)(0);
  NSString v55 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  LODWORD(v48) = [v53 fileExistsAtPath:v55];

  CGRect v107 = (char *)v22;
  v83[0] = v52;
  v83[2] = v54;
  if (v48)
  {
    uint64_t v56 = Data.init(contentsOf:options:)();
    uint64_t v57 = v85;
    uint64_t v58 = v104;
    uint64_t v60 = v56;
    uint64_t v62 = v61;
    sub_1005057FC(&qword_10168D3E8);
    sub_100A54804();
    uint64_t v100 = v62;
    dispatch thunk of PropertyListDecoder.decode<A>(_:from:)();
    unsigned int v22 = v95;
    swift_release();
    sub_100510084(v60, (unint64_t)v100);
    double v82 = v110;
  }
  else
  {
    unsigned int v22 = v95;
    swift_release();
    double v82 = _swiftEmptyArrayStorage;
    uint64_t v57 = v85;
    uint64_t v58 = v104;
  }
  uint64_t v63 = sub_100CDE304((uint64_t)v82);
  swift_bridgeObjectRelease();
  uint64_t v64 = 0;
  uint64_t v65 = *(void (**)(char *, double *, uint64_t))(v106 + 16);
  uint64_t v110 = (double *)v63;
  uint64_t v32 = (double *)((char *)v84
                 + ((*(unsigned __int8 *)(v106 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v106 + 80)));
  *(void *)&long long v103 = v106 + 56;
  id v99 = (unsigned int (**)(char *, uint64_t, uint64_t))(v106 + 48);
  uint64_t v100 = v65;
  uint64_t v97 = *(void *)(v106 + 72);
  uint64_t v98 = (void (**)(id, char *, uint64_t))(v106 + 32);
  uint64_t v66 = v93;
  char v90 = (uint64_t (**)(char *, uint64_t, uint64_t))(v94 + 32);
  uint64_t v89 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v22 + 6);
  v106 += 16;
  id v95 = (double *)(v106 - 8);
  uint64_t v96 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v94 + 48);
  uint64_t v88 = (void (**)(char *, uint64_t))(v94 + 8);
  v65(v58, v32, v93);
  while (1)
  {
    uint64_t v67 = v64 + 1;
    if (__OFADD__(v64, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    uint64_t v94 = *(char **)v103;
    ((void (*)(char *, void, uint64_t, uint64_t))v94)(v58, 0, 1, v66);
    if ((*v99)(v58, 1, v66) == 1) {
      goto LABEL_24;
    }
    unsigned int v22 = (double *)v107;
    (*v98)(v107, v58, v66);
    sub_100A4ED74((uint64_t)v22);
    URL.lastPathComponent.getter();
    uint64_t v68 = v57;
    uint64_t v69 = v108;
    UUID.init(uuidString:)();
    swift_bridgeObjectRelease();
    uint64_t v70 = v69;
    uint64_t v57 = v68;
    if ((*v96)(v70, 1, v68) == 1)
    {
      (*(void (**)(double *, uint64_t))v95)(v22, v66);
      sub_100522F00(v108, (uint64_t *)&unk_101674520);
    }
    else
    {
      uint64_t v71 = v102;
      uint64_t v72 = (*v90)(v102, v108, v68);
      unsigned int v22 = v110;
      __chkstk_darwin(v72, v73);
      v83[-2] = v71;
      swift_bridgeObjectRetain();
      uint64_t v74 = v92;
      sub_100ED5618((uint64_t (*)(char *))sub_100A547E4, (uint64_t)v22, v92);
      swift_bridgeObjectRelease();
      if ((*v89)(v74, 1, v91) == 1)
      {
        uint64_t v75 = v93;
        (*(void (**)(char *, uint64_t))v95)(v107, v93);
        (*v88)(v102, v68);
        uint64_t v76 = v74;
        uint64_t v66 = v75;
        sub_100522F00(v76, &qword_10168D3C8);
      }
      else
      {
        uint64_t v77 = v86;
        sub_100A54AB4(v74, v86, type metadata accessor for CRLSELibraryViewModel.Item);
        uint64_t v78 = v87;
        sub_100D17EFC(v77, v87);
        sub_100522F00(v78, &qword_10168D3C8);
        sub_100A54A54(v77, type metadata accessor for CRLSELibraryViewModel.Item);
        uint64_t v66 = v93;
        (*(void (**)(char *, uint64_t))v95)(v107, v93);
        (*v88)(v102, v68);
      }
      uint64_t v57 = v68;
    }
    uint64_t v58 = v104;
    ++v64;
    uint64_t v32 = (double *)((char *)v32 + v97);
    if (v67 == v101) {
      break;
    }
    v100(v104, v32, v66);
  }
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v94)(v104, 1, 1, v66);
LABEL_24:
  swift_bridgeObjectRelease();
  type metadata accessor for PropertyListEncoder();
  swift_allocObject();
  PropertyListEncoder.init()();
  dispatch thunk of PropertyListEncoder.outputFormat.setter();
  CGRect v109 = v110;
  sub_1005057FC(&qword_10168D3D0);
  sub_100A54740();
  uint64_t v79 = dispatch thunk of PropertyListEncoder.encode<A>(_:)();
  unint64_t v81 = v80;
  swift_bridgeObjectRelease();
  Data.write(to:options:)();
  sub_100510084(v79, v81);
  return swift_release();
}

uint64_t sub_100A4EA50(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for CRLSELibraryViewModel.Item(0);
  __chkstk_darwin(v2, v3);
  uint64_t v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6, v8);
  uint64_t v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100A549EC(a1, (uint64_t)v5, type metadata accessor for CRLSELibraryViewModel.Item);
  if (swift_getEnumCaseMultiPayload() == 3)
  {
    uint64_t v11 = sub_1005057FC((uint64_t *)&unk_10168D400);
    swift_bridgeObjectRelease();
    uint64_t v12 = (uint64_t)&v5[*(int *)(v11 + 64)];
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v10, v5, v6);
    sub_100522F00(v12, &qword_101672EB0);
    char v13 = static UUID.== infix(_:_:)();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  }
  else
  {
    sub_100A54A54((uint64_t)v5, type metadata accessor for CRLSELibraryViewModel.Item);
    char v13 = 0;
  }
  return v13 & 1;
}

uint64_t sub_100A4EC38(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for URL();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2, v4);
  uint64_t v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7, v8);
  uint64_t v10 = (char *)&v14 - v9;
  uint64_t v11 = *(void (**)(char *, char *))(a1 + 32);
  static URL._unconditionallyBridgeFromObjectiveC(_:)();
  static URL._unconditionallyBridgeFromObjectiveC(_:)();
  v11(v10, v6);
  uint64_t v12 = *(void (**)(char *, uint64_t))(v3 + 8);
  v12(v6, v2);
  return ((uint64_t (*)(char *, uint64_t))v12)(v10, v2);
}

uint64_t sub_100A4ED74(uint64_t a1)
{
  uint64_t v2 = sub_1005057FC(&qword_101672BB0);
  __chkstk_darwin(v2 - 8, v3);
  uint64_t v68 = (uint64_t)&v60 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1005057FC((uint64_t *)&unk_10168D380);
  __chkstk_darwin(v5 - 8, v6);
  uint64_t v70 = (char *)&v60 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v69 = (uint64_t (*)(void))type metadata accessor for CRLSEImportManifest(0);
  uint64_t v71 = *((void *)v69 - 1);
  __chkstk_darwin(v69, v8);
  uint64_t v63 = v9;
  uint64_t v64 = (uint64_t)&v60 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10, v11);
  uint64_t v67 = (uint64_t)&v60 - v12;
  unint64_t v76 = type metadata accessor for URL.DirectoryHint();
  uint64_t v13 = *(void *)(v76 - 8);
  __chkstk_darwin(v76, v14);
  uint64_t v16 = (char *)&v60 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v78 = type metadata accessor for URL();
  uint64_t v75 = *(void *)(v78 - 8);
  __chkstk_darwin(v78, v17);
  uint64_t v66 = (char *)&v60 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = v18;
  __chkstk_darwin(v19, v20);
  unsigned int v22 = (char *)&v60 - v21;
  type metadata accessor for PropertyListDecoder();
  swift_allocObject();
  uint64_t v77 = PropertyListDecoder.init()();
  if (qword_10166FA70 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v23 = (void *)static OS_os_log.crlSharingExtension;
  uint64_t v73 = sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  long long v72 = xmmword_10117E810;
  *(_OWORD *)(inited + 16) = xmmword_10117E810;
  id v25 = v23;
  uint64_t v26 = URL.relativeString.getter();
  uint64_t v28 = v27;
  *(void *)(inited + 56) = &type metadata for String;
  unint64_t v74 = sub_100528BE4();
  *(void *)(inited + 64) = v74;
  *(void *)(inited + 32) = v26;
  *(void *)(inited + 40) = v28;
  uint64_t v29 = a1;
  uint64_t v30 = static os_log_type_t.debug.getter();
  sub_100BAC898((uint64_t)v25, (uint64_t)&_mh_execute_header, v30, (uint64_t)"Beginning Import for %@", 23, 2, inited);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  strcpy(v79, "Manifest.plist");
  v79[15] = -18;
  unint64_t v31 = v76;
  (*(void (**)(char *, void, unint64_t))(v13 + 104))(v16, enum case for URL.DirectoryHint.inferFromPath(_:), v76);
  sub_10052E310();
  URL.appending<A>(path:directoryHint:)();
  (*(void (**)(char *, unint64_t))(v13 + 8))(v16, v31);
  swift_bridgeObjectRelease();
  uint64_t v32 = v22;
  uint64_t v33 = Data.init(contentsOf:options:)();
  unint64_t v35 = v34;
  sub_100A549A4(&qword_10168D390, (void (*)(uint64_t))type metadata accessor for CRLSEImportManifest);
  uint64_t v37 = v69;
  uint64_t v36 = (uint64_t)v70;
  uint64_t v61 = v33;
  unint64_t v76 = v35;
  dispatch thunk of PropertyListDecoder.decode<A>(_:from:)();
  uint64_t v38 = v78;
  uint64_t v40 = *(void (**)(uint64_t, void, uint64_t, uint64_t (*)(void)))(v71 + 56);
  v71 += 56;
  v40(v36, 0, 1, v37);
  uint64_t v69 = type metadata accessor for CRLSEImportManifest;
  uint64_t v41 = v67;
  sub_100A54AB4(v36, v67, type metadata accessor for CRLSEImportManifest);
  uint64_t v42 = (void *)static OS_os_log.crlSharingExtension;
  uint64_t v43 = swift_initStackObject();
  *(_OWORD *)(v43 + 16) = v72;
  id v44 = v42;
  uint64_t v45 = URL.relativeString.getter();
  unint64_t v46 = v74;
  *(void *)(v43 + 56) = &type metadata for String;
  *(void *)(v43 + 64) = v46;
  *(void *)(v43 + 32) = v45;
  *(void *)(v43 + 40) = v47;
  uint64_t v48 = static os_log_type_t.debug.getter();
  sub_100BAC898((uint64_t)v44, (uint64_t)&_mh_execute_header, v48, (uint64_t)"Manifest file loaded %@", 23, 2, v43);
  swift_setDeallocating();
  swift_arrayDestroy();

  uint64_t v49 = type metadata accessor for TaskPriority();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v49 - 8) + 56))(v68, 1, 1, v49);
  uint64_t v50 = v41;
  uint64_t v51 = v64;
  sub_100A549EC(v50, v64, type metadata accessor for CRLSEImportManifest);
  uint64_t v52 = v75;
  (*(void (**)(char *, uint64_t, uint64_t))(v75 + 16))(v66, v29, v38);
  unint64_t v53 = (*(unsigned __int8 *)(v71 + 24) + 32) & ~(unint64_t)*(unsigned __int8 *)(v71 + 24);
  unint64_t v54 = (v63 + v53 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v55 = (*(unsigned __int8 *)(v52 + 80) + v54 + 8) & ~(unint64_t)*(unsigned __int8 *)(v52 + 80);
  uint64_t v56 = swift_allocObject();
  *(void *)(v56 + 16) = 0;
  *(void *)(v56 + 24) = 0;
  sub_100A54AB4(v51, v56 + v53, v69);
  uint64_t v58 = v65;
  uint64_t v57 = v66;
  *(void *)(v56 + v54) = v65;
  (*(void (**)(unint64_t, char *, uint64_t))(v52 + 32))(v56 + v55, v57, v38);
  id v59 = v58;
  sub_1005912D0(v68, (uint64_t)&unk_10168D3A0, v56);
  sub_100510084(v61, v76);
  swift_release();
  swift_release();
  sub_100A54A54(v67, type metadata accessor for CRLSEImportManifest);
  return (*(uint64_t (**)(char *, uint64_t))(v52 + 8))(v32, v38);
}

uint64_t sub_100A4F624(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[87] = a6;
  v6[86] = a5;
  v6[85] = a4;
  sub_1005057FC((uint64_t *)&unk_1016741E0);
  v6[88] = swift_task_alloc();
  sub_1005057FC((uint64_t *)&unk_1016741D0);
  v6[89] = swift_task_alloc();
  uint64_t v7 = type metadata accessor for CRLBoardViewModelMetadata(0);
  v6[90] = v7;
  v6[91] = *(void *)(v7 - 8);
  v6[92] = swift_task_alloc();
  type metadata accessor for CRLBoardLibraryViewModel.Folder(0);
  v6[93] = swift_task_alloc();
  v6[94] = swift_task_alloc();
  sub_1005057FC((uint64_t *)&unk_101674520);
  v6[95] = swift_task_alloc();
  uint64_t v8 = type metadata accessor for UUID();
  v6[96] = v8;
  v6[97] = *(void *)(v8 - 8);
  v6[98] = swift_task_alloc();
  v6[99] = swift_task_alloc();
  v6[100] = swift_task_alloc();
  type metadata accessor for CRLBoardIdentifier(0);
  v6[101] = swift_task_alloc();
  v6[102] = swift_task_alloc();
  v6[103] = swift_task_alloc();
  return _swift_task_switch(sub_100A4F8A4, 0, 0);
}

uint64_t sub_100A4F8A4()
{
  uint64_t v1 = v0[97];
  uint64_t v2 = v0[96];
  uint64_t v3 = v0[95];
  sub_100522E9C(v0[85], v3, (uint64_t *)&unk_101674520);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v1 + 48))(v3, 1, v2) == 1)
  {
    uint64_t v4 = v0[103];
    uint64_t v5 = v0[99];
    uint64_t v6 = v0[94];
    uint64_t v7 = v0[86];
    uint64_t v8 = v0[85];
    sub_100522F00(v0[95], (uint64_t *)&unk_101674520);
    UUID.init()();
    sub_100753370(v5, 0, 0xE000000000000000, v4);
    uint64_t v9 = *(void *)(v7 + OBJC_IVAR____TtC8Freeform13CRLSEImporter_boardLibrary);
    v0[104] = v9;
    uint64_t v10 = *(void **)(v9 + OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_store);
    v0[105] = (uint64_t)v10;
    uint64_t v11 = (uint64_t *)(v8 + *(int *)(type metadata accessor for CRLSEImportManifest(0) + 24));
    uint64_t v12 = *v11;
    uint64_t v13 = v11[1];
    uint64_t v14 = sub_1005057FC(&qword_101670F30);
    uint64_t v15 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56);
    v15(v6, 1, 5, v14);
    v0[106] = sub_1006F7638(v12, v13, v6, 0, (uint64_t)v10, 0);
    v0[107] = v16;
    uint64_t v25 = v0[93];
    sub_100A54A54(v0[94], type metadata accessor for CRLBoardLibraryViewModel.Folder);
    v15(v25, 1, 5, v14);
    type metadata accessor for MainActor();
    v0[110] = static MainActor.shared.getter();
    uint64_t v26 = dispatch thunk of Actor.unownedExecutor.getter();
    v0[111] = v26;
    v0[112] = v27;
    uint64_t v28 = v26;
    uint64_t v29 = v27;
    uint64_t v30 = sub_100A506F0;
    uint64_t v31 = v28;
  }
  else
  {
    uint64_t v17 = v0[100];
    uint64_t v18 = v0[98];
    uint64_t v19 = v0[97];
    uint64_t v20 = v0[96];
    uint64_t v21 = v0[85];
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v19 + 32))(v17, v0[95], v20);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v19 + 16))(v18, v17, v20);
    unsigned int v22 = (uint64_t *)(v21 + *(int *)(type metadata accessor for CRLSEImportManifest(0) + 20));
    if (v22[1])
    {
      uint64_t v23 = *v22;
      unint64_t v24 = v22[1];
    }
    else
    {
      uint64_t v23 = 0;
      unint64_t v24 = 0xE000000000000000;
    }
    uint64_t v32 = v0[103];
    uint64_t v33 = v0[102];
    uint64_t v34 = v0[101];
    uint64_t v35 = v0[98];
    uint64_t v36 = v0[86];
    swift_bridgeObjectRetain();
    sub_100753370(v35, v23, v24, v33);
    sub_100A54AB4(v33, v32, type metadata accessor for CRLBoardIdentifier);
    v0[108] = *(void *)(v36 + OBJC_IVAR____TtC8Freeform13CRLSEImporter_boardLibrary);
    sub_100A549EC(v32, v34, type metadata accessor for CRLBoardIdentifier);
    type metadata accessor for MainActor();
    v0[109] = static MainActor.shared.getter();
    uint64_t v37 = dispatch thunk of Actor.unownedExecutor.getter();
    uint64_t v39 = v38;
    uint64_t v30 = sub_100A4FF00;
    uint64_t v31 = v37;
    uint64_t v29 = v39;
  }
  return _swift_task_switch(v30, v31, v29);
}

uint64_t sub_100A4FF00()
{
  uint64_t v1 = *(void *)(v0 + 808);
  uint64_t v2 = *(void *)(v0 + 712);
  swift_release();
  sub_100ED7F04(v1, v2);
  sub_100A54A54(*(void *)(v0 + 808), type metadata accessor for CRLBoardIdentifier);
  return _swift_task_switch(sub_100A50010, 0, 0);
}

uint64_t sub_100A50010()
{
  uint64_t v1 = v0[92];
  uint64_t v2 = v0[90];
  uint64_t v3 = v0[89];
  uint64_t v4 = v0[88];
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v0[91] + 56))(v3, 0, 1, v2);
  sub_100A54AB4(v3, v1, type metadata accessor for CRLBoardViewModelMetadata);
  sub_100522E9C(v1 + *(int *)(v2 + 28), v4, (uint64_t *)&unk_1016741E0);
  uint64_t v5 = type metadata accessor for CRLBoardViewModelMetadata.ShareMetadata(0);
  int v6 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v4, 1, v5);
  uint64_t v7 = v0[88];
  if (v6 == 1)
  {
    sub_100522F00(v7, (uint64_t *)&unk_1016741E0);
LABEL_4:
    uint64_t v9 = v0[100];
    uint64_t v10 = v0[97];
    uint64_t v11 = v0[96];
    sub_100A54A54(v0[92], type metadata accessor for CRLBoardViewModelMetadata);
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v9, v11);
    v0[116] = v0[108];
    uint64_t v12 = v0[85];
    uint64_t v13 = type metadata accessor for CRLSEImportManifest(0);
    v0[117] = sub_100A539C4(*(void *)(v12 + *(int *)(v13 + 28)));
    v0[118] = v14;
    uint64_t v15 = (void *)swift_task_alloc();
    v0[119] = v15;
    *uint64_t v15 = v0;
    v15[1] = sub_100A50F98;
    uint64_t v16 = v0[103];
    return sub_100EDC29C(v16);
  }
  char v8 = *(unsigned char *)(v7 + 24);
  sub_100A54A54(v7, type metadata accessor for CRLBoardViewModelMetadata.ShareMetadata);
  if (v8) {
    goto LABEL_4;
  }
  if (qword_10166FA70 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v18 = (void *)static OS_os_log.crlSharingExtension;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117D8C0;
  id v20 = v18;
  uint64_t v21 = UUID.uuidString.getter();
  uint64_t v23 = v22;
  *(void *)(inited + 56) = &type metadata for String;
  unint64_t v24 = sub_100528BE4();
  *(void *)(inited + 64) = v24;
  *(void *)(inited + 32) = v21;
  *(void *)(inited + 40) = v23;
  uint64_t v25 = URL.relativeString.getter();
  *(void *)(inited + 96) = &type metadata for String;
  *(void *)(inited + 104) = v24;
  *(void *)(inited + 72) = v25;
  *(void *)(inited + 80) = v26;
  uint64_t v27 = static os_log_type_t.debug.getter();
  sub_100BAC898((uint64_t)v20, (uint64_t)&_mh_execute_header, v27, (uint64_t)"Can't import content to read-only board (%@), deleting %@", 57, 2, inited);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  id v28 = [self defaultManager];
  URL._bridgeToObjectiveC()(v29);
  uint64_t v31 = v30;
  v0[84] = 0;
  unsigned int v32 = [v28 removeItemAtURL:v30 error:v0 + 84];

  uint64_t v33 = (void *)v0[84];
  uint64_t v34 = v0[103];
  uint64_t v35 = v0[100];
  uint64_t v36 = v0[97];
  uint64_t v37 = v0[96];
  uint64_t v38 = v0[92];
  if (v32)
  {
    id v39 = v33;
    sub_100A54A54(v38, type metadata accessor for CRLBoardViewModelMetadata);
    (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v35, v37);
    sub_100A54A54(v34, type metadata accessor for CRLBoardIdentifier);
  }
  else
  {
    id v40 = v33;
    _convertNSErrorToError(_:)();

    swift_willThrow();
    sub_100A54A54(v38, type metadata accessor for CRLBoardViewModelMetadata);
    (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v35, v37);
    sub_100A54A54(v34, type metadata accessor for CRLBoardIdentifier);
    if (qword_10166FA70 != -1) {
      swift_once();
    }
    swift_beginAccess();
    uint64_t v41 = (void *)static OS_os_log.crlSharingExtension;
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t v42 = swift_initStackObject();
    *(_OWORD *)(v42 + 16) = xmmword_10117D8C0;
    swift_getErrorValue();
    uint64_t v43 = v0[72];
    uint64_t v44 = v0[73];
    id v45 = v41;
    uint64_t v46 = Error.publicDescription.getter(v43, v44);
    *(void *)(v42 + 56) = &type metadata for String;
    *(void *)(v42 + 64) = v24;
    *(void *)(v42 + 32) = v46;
    *(void *)(v42 + 40) = v47;
    swift_getErrorValue();
    uint64_t v48 = Error.fullDescription.getter(v0[78]);
    *(void *)(v42 + 96) = &type metadata for String;
    *(void *)(v42 + 104) = v24;
    *(void *)(v42 + 72) = v48;
    *(void *)(v42 + 80) = v49;
    uint64_t v50 = static os_log_type_t.error.getter();
    sub_100BAC898((uint64_t)v45, (uint64_t)&_mh_execute_header, v50, (uint64_t)"Error importing sharing extension content %{public}@ <%@>", 57, 2, v42);
    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();

    sub_100A53530();
    swift_errorRelease();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v51 = (uint64_t (*)(void))v0[1];
  return v51();
}

uint64_t sub_100A506F0()
{
  if (qword_10166FA60 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v1 = (void *)static OS_os_log.crlBoardLibrary;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117E810;
  id v3 = v1;
  uint64_t v4 = UUID.uuidString.getter();
  uint64_t v6 = v5;
  *(void *)(inited + 56) = &type metadata for String;
  *(void *)(inited + 64) = sub_100528BE4();
  *(void *)(inited + 32) = v4;
  *(void *)(inited + 40) = v6;
  uint64_t v7 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v3, (uint64_t)&_mh_execute_header, v7, (uint64_t)"Creating new board with Board UUID (%@).", 40, 2, inited);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  char v8 = (void *)swift_task_alloc();
  v0[113] = v8;
  *char v8 = v0;
  v8[1] = sub_100A508D8;
  uint64_t v9 = v0[107];
  uint64_t v10 = v0[106];
  uint64_t v11 = v0[103];
  uint64_t v12 = v0[93];
  return sub_100EED748(v11, v12, v10, v9, 0);
}

uint64_t sub_100A508D8(uint64_t a1)
{
  uint64_t v4 = *(void **)v2;
  *(void *)(*(void *)v2 + 912) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = v4[112];
    uint64_t v6 = v4[111];
    uint64_t v7 = sub_100A50A30;
  }
  else
  {
    v4[115] = a1;
    uint64_t v5 = v4[112];
    uint64_t v6 = v4[111];
    uint64_t v7 = sub_100A50DD0;
  }
  return _swift_task_switch(v7, v6, v5);
}

uint64_t sub_100A50A30()
{
  uint64_t v1 = *(void *)(v0 + 744);
  swift_release();
  sub_100A54A54(v1, type metadata accessor for CRLBoardLibraryViewModel.Folder);
  swift_bridgeObjectRelease();
  return _swift_task_switch(sub_100A50AF8, 0, 0);
}

uint64_t sub_100A50AF8()
{
  uint64_t v1 = *(void *)(v0 + 824);

  sub_100A54A54(v1, type metadata accessor for CRLBoardIdentifier);
  if (qword_10166FA70 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v2 = (void *)static OS_os_log.crlSharingExtension;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117D8C0;
  swift_getErrorValue();
  uint64_t v4 = *(void *)(v0 + 576);
  uint64_t v5 = *(void *)(v0 + 584);
  id v6 = v2;
  uint64_t v7 = Error.publicDescription.getter(v4, v5);
  uint64_t v9 = v8;
  *(void *)(inited + 56) = &type metadata for String;
  unint64_t v10 = sub_100528BE4();
  *(void *)(inited + 64) = v10;
  *(void *)(inited + 32) = v7;
  *(void *)(inited + 40) = v9;
  swift_getErrorValue();
  uint64_t v11 = Error.fullDescription.getter(*(void *)(v0 + 624));
  *(void *)(inited + 96) = &type metadata for String;
  *(void *)(inited + 104) = v10;
  *(void *)(inited + 72) = v11;
  *(void *)(inited + 80) = v12;
  uint64_t v13 = static os_log_type_t.error.getter();
  sub_100BAC898((uint64_t)v6, (uint64_t)&_mh_execute_header, v13, (uint64_t)"Error importing sharing extension content %{public}@ <%@>", 57, 2, inited);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  sub_100A53530();
  swift_errorRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v14 = *(uint64_t (**)(void))(v0 + 8);
  return v14();
}

uint64_t sub_100A50DD0()
{
  uint64_t v1 = *(void *)(v0 + 744);
  swift_release();
  sub_100A54A54(v1, type metadata accessor for CRLBoardLibraryViewModel.Folder);
  swift_bridgeObjectRelease();
  return _swift_task_switch(sub_100A50E98, 0, 0);
}

uint64_t sub_100A50E98()
{
  uint64_t v1 = *(void **)(v0 + 920);

  *(void *)(v0 + 928) = *(void *)(v0 + 832);
  uint64_t v2 = *(void *)(v0 + 680);
  uint64_t v3 = type metadata accessor for CRLSEImportManifest(0);
  *(void *)(v0 + 936) = sub_100A539C4(*(void *)(v2 + *(int *)(v3 + 28)));
  *(void *)(v0 + 944) = v4;
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v0 + 952) = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_100A50F98;
  uint64_t v6 = *(void *)(v0 + 824);
  return sub_100EDC29C(v6);
}

uint64_t sub_100A50F98(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 960) = a1;
  *(void *)(v3 + 968) = v1;
  swift_task_dealloc();
  if (v1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v4 = sub_100A51E7C;
  }
  else
  {
    uint64_t v4 = sub_100A510F8;
  }
  return _swift_task_switch(v4, 0, 0);
}

uint64_t sub_100A510F8()
{
  uint64_t v1 = v0[121];
  uint64_t v2 = v0[117];
  uint64_t v3 = *(void **)(*(void *)(v0[120] + OBJC_IVAR____TtC8Freeform33CRLBoardLibraryHeadlessController_editingCoordinator)
                + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_boardItemFactory);
  v0[122] = v3;
  id v4 = v3;
  unint64_t v5 = (unint64_t)sub_100A52AAC(v2, (uint64_t)v4);
  v0[123] = v1;
  if (qword_10166FA70 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v6 = (void *)static OS_os_log.crlSharingExtension;
  v0[124] = sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117D8C0;
  if (v5 >> 62)
  {
    id v15 = v6;
    swift_bridgeObjectRetain();
    uint64_t v8 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v8 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
    id v9 = v6;
  }
  uint64_t v10 = v0[117];
  *(void *)(inited + 56) = &type metadata for Int;
  *(void *)(inited + 64) = &protocol witness table for Int;
  *(void *)(inited + 32) = v8;
  uint64_t v11 = *(void *)(v10 + 16);
  *(void *)(inited + 96) = &type metadata for Int;
  *(void *)(inited + 104) = &protocol witness table for Int;
  *(void *)(inited + 72) = v11;
  uint64_t v12 = static os_log_type_t.debug.getter();
  sub_100BAC898((uint64_t)v6, (uint64_t)&_mh_execute_header, v12, (uint64_t)"%d of %d Text items imported", 28, 2, inited);
  swift_setDeallocating();
  v0[125] = sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  if (v5 >> 62)
  {
    type metadata accessor for CRLBoardItem(0);
    swift_bridgeObjectRetain();
    uint64_t v13 = _bridgeCocoaArray<A>(_:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain();
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
    swift_bridgeObjectRelease();
    type metadata accessor for CRLBoardItem(0);
    uint64_t v13 = v5;
  }
  v0[126] = v13;
  swift_bridgeObjectRelease();
  uint64_t v14 = (void *)swift_task_alloc();
  v0[127] = v14;
  *uint64_t v14 = v0;
  v14[1] = sub_100A513FC;
  v14[54] = v0[118];
  v14[55] = v4;
  return _swift_task_switch(sub_100A54050, 0, 0);
}

uint64_t sub_100A513FC(uint64_t a1)
{
  *(void *)(*(void *)v1 + 1024) = a1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return _swift_task_switch(sub_100A51548, 0, 0);
}

uint64_t sub_100A51548()
{
  uint64_t v3 = v0[126];
  sub_1006E0C70(v0[128]);
  v0[129] = v3;
  uint64_t v1 = (void *)swift_task_alloc();
  v0[130] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_100A5162C;
  return sub_100E17CF0(v3);
}

uint64_t sub_100A5162C()
{
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return _swift_task_switch(sub_100A51770, 0, 0);
}

uint64_t sub_100A51770()
{
  type metadata accessor for MainActor();
  *(void *)(v0 + 1048) = static MainActor.shared.getter();
  uint64_t v2 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_100A51838, v2, v1);
}

uint64_t sub_100A51838()
{
  uint64_t v1 = v0[123];
  uint64_t v2 = (char *)v0[120];
  swift_release();
  sub_100EDCA20(v2);
  v0[132] = v1;
  if (v1) {
    uint64_t v3 = sub_100A52148;
  }
  else {
    uint64_t v3 = sub_100A51900;
  }
  return _swift_task_switch(v3, 0, 0);
}

uint64_t sub_100A51900()
{
  uint64_t v1 = (void *)static OS_os_log.crlSharingExtension;
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117E810;
  id v3 = v1;
  uint64_t v4 = URL.relativeString.getter();
  uint64_t v6 = v5;
  *(void *)(inited + 56) = &type metadata for String;
  unint64_t v7 = sub_100528BE4();
  *(void *)(inited + 64) = v7;
  *(void *)(inited + 32) = v4;
  *(void *)(inited + 40) = v6;
  uint64_t v8 = static os_log_type_t.debug.getter();
  sub_100BAC898((uint64_t)v3, (uint64_t)&_mh_execute_header, v8, (uint64_t)"Shared content imported, deleting %@", 36, 2, inited);
  swift_setDeallocating();
  swift_arrayDestroy();

  id v9 = [self defaultManager];
  URL._bridgeToObjectiveC()(v10);
  uint64_t v12 = v11;
  v0[81] = 0;
  LODWORD(inited) = [v9 removeItemAtURL:v11 error:v0 + 81];

  uint64_t v13 = (void *)v0[81];
  uint64_t v14 = (void *)v0[122];
  id v15 = (void *)v0[120];
  uint64_t v16 = v0[103];
  if (inited)
  {
    id v17 = v13;
    sub_100A54A54(v16, type metadata accessor for CRLBoardIdentifier);
  }
  else
  {
    id v18 = v13;
    _convertNSErrorToError(_:)();

    swift_willThrow();
    sub_100A54A54(v16, type metadata accessor for CRLBoardIdentifier);
    if (qword_10166FA70 != -1) {
      swift_once();
    }
    swift_beginAccess();
    uint64_t v19 = (void *)static OS_os_log.crlSharingExtension;
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t v20 = swift_initStackObject();
    *(_OWORD *)(v20 + 16) = xmmword_10117D8C0;
    swift_getErrorValue();
    uint64_t v21 = v0[72];
    uint64_t v22 = v0[73];
    id v23 = v19;
    uint64_t v24 = Error.publicDescription.getter(v21, v22);
    *(void *)(v20 + 56) = &type metadata for String;
    *(void *)(v20 + 64) = v7;
    *(void *)(v20 + 32) = v24;
    *(void *)(v20 + 40) = v25;
    swift_getErrorValue();
    uint64_t v26 = Error.fullDescription.getter(v0[78]);
    *(void *)(v20 + 96) = &type metadata for String;
    *(void *)(v20 + 104) = v7;
    *(void *)(v20 + 72) = v26;
    *(void *)(v20 + 80) = v27;
    uint64_t v28 = static os_log_type_t.error.getter();
    sub_100BAC898((uint64_t)v23, (uint64_t)&_mh_execute_header, v28, (uint64_t)"Error importing sharing extension content %{public}@ <%@>", 57, 2, v20);
    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();

    sub_100A53530();
    swift_errorRelease();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v29 = (uint64_t (*)(void))v0[1];
  return v29();
}

uint64_t sub_100A51D28()
{
  uint64_t v1 = v0[100];
  uint64_t v2 = v0[97];
  uint64_t v3 = v0[96];
  uint64_t v4 = v0[89];
  (*(void (**)(uint64_t, uint64_t, uint64_t, void))(v0[91] + 56))(v4, 1, 1, v0[90]);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  sub_100522F00(v4, (uint64_t *)&unk_1016741D0);
  v0[116] = v0[108];
  uint64_t v5 = v0[85];
  uint64_t v6 = type metadata accessor for CRLSEImportManifest(0);
  v0[117] = sub_100A539C4(*(void *)(v5 + *(int *)(v6 + 28)));
  v0[118] = v7;
  uint64_t v8 = (void *)swift_task_alloc();
  v0[119] = v8;
  *uint64_t v8 = v0;
  v8[1] = sub_100A50F98;
  uint64_t v9 = v0[103];
  return sub_100EDC29C(v9);
}

uint64_t sub_100A51E7C()
{
  sub_100A54A54(v0[103], type metadata accessor for CRLBoardIdentifier);
  if (qword_10166FA70 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v1 = (void *)static OS_os_log.crlSharingExtension;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117D8C0;
  swift_getErrorValue();
  uint64_t v3 = v0[72];
  uint64_t v4 = v0[73];
  id v5 = v1;
  uint64_t v6 = Error.publicDescription.getter(v3, v4);
  uint64_t v8 = v7;
  *(void *)(inited + 56) = &type metadata for String;
  unint64_t v9 = sub_100528BE4();
  *(void *)(inited + 64) = v9;
  *(void *)(inited + 32) = v6;
  *(void *)(inited + 40) = v8;
  swift_getErrorValue();
  uint64_t v10 = Error.fullDescription.getter(v0[78]);
  *(void *)(inited + 96) = &type metadata for String;
  *(void *)(inited + 104) = v9;
  *(void *)(inited + 72) = v10;
  *(void *)(inited + 80) = v11;
  uint64_t v12 = static os_log_type_t.error.getter();
  sub_100BAC898((uint64_t)v5, (uint64_t)&_mh_execute_header, v12, (uint64_t)"Error importing sharing extension content %{public}@ <%@>", 57, 2, inited);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  sub_100A53530();
  swift_errorRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v13 = (uint64_t (*)(void))v0[1];
  return v13();
}

uint64_t sub_100A52148()
{
  uint64_t v1 = *(void **)(v0 + 960);
  uint64_t v2 = *(void *)(v0 + 824);

  sub_100A54A54(v2, type metadata accessor for CRLBoardIdentifier);
  if (qword_10166FA70 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v3 = (void *)static OS_os_log.crlSharingExtension;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117D8C0;
  swift_getErrorValue();
  uint64_t v5 = *(void *)(v0 + 576);
  uint64_t v6 = *(void *)(v0 + 584);
  id v7 = v3;
  uint64_t v8 = Error.publicDescription.getter(v5, v6);
  uint64_t v10 = v9;
  *(void *)(inited + 56) = &type metadata for String;
  unint64_t v11 = sub_100528BE4();
  *(void *)(inited + 64) = v11;
  *(void *)(inited + 32) = v8;
  *(void *)(inited + 40) = v10;
  swift_getErrorValue();
  uint64_t v12 = Error.fullDescription.getter(*(void *)(v0 + 624));
  *(void *)(inited + 96) = &type metadata for String;
  *(void *)(inited + 104) = v11;
  *(void *)(inited + 72) = v12;
  *(void *)(inited + 80) = v13;
  uint64_t v14 = static os_log_type_t.error.getter();
  sub_100BAC898((uint64_t)v7, (uint64_t)&_mh_execute_header, v14, (uint64_t)"Error importing sharing extension content %{public}@ <%@>", 57, 2, inited);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  sub_100A53530();
  swift_errorRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v15 = *(uint64_t (**)(void))(v0 + 8);
  return v15();
}

id sub_100A52848()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLSEImporter();
  return [super dealloc];
}

uint64_t sub_100A52974()
{
  return type metadata accessor for CRLSEImporter();
}

uint64_t type metadata accessor for CRLSEImporter()
{
  uint64_t result = qword_10168D370;
  if (!qword_10168D370) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_100A529C8()
{
  type metadata accessor for URL();
  if (v0 <= 0x3F)
  {
    sub_100757DF8();
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

double *sub_100A52AAC(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = sub_1005057FC((uint64_t *)&unk_101674610);
  __chkstk_darwin(v5 - 8, v6);
  uint64_t v8 = (char *)v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for AttributedString();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9, v11);
  uint64_t v13 = (char *)v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = *(void *)(a1 + 16);
  uint64_t result = _swiftEmptyArrayStorage;
  if (v14)
  {
    v24[1] = v2;
    uint64_t v33 = _swiftEmptyArrayStorage;
    specialized ContiguousArray.reserveCapacity(_:)();
    unint64_t v16 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
    uint64_t v29 = v13;
    uint64_t v17 = a1 + v16;
    uint64_t v28 = sub_10050BF48(0, (unint64_t *)&qword_10168D3B0);
    id v27 = self;
    sub_1005C6DF0((uint64_t)v31);
    sub_10051B3EC((uint64_t)v31, (uint64_t)v32, &qword_10168D670);
    id v18 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
    uint64_t v30 = v10 + 16;
    uint64_t v25 = *(void *)(v10 + 72);
    uint64_t v26 = v18;
    void v24[2] = a2;
    do
    {
      v26(v29, v17, v9);
      uint64_t v19 = v9;
      uint64_t v20 = (char *)NSAttributedString.init(_:)();
      id v21 = [v27 pathSourceForShapeType:0 naturalSize:sub_1004C840C(0)];
      uint64_t v22 = type metadata accessor for CRLWPStorageCRDTData(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v8, 1, 1, v22);
      id v23 = v21;
      sub_100F40DC0(0, 0, (uint64_t)v21, 0, 0, 0, 1, 0, 1, (void *)1, (void *)1, (void *)1, (void *)1, v20, v8, v32, 0, 0, 0);

      sub_100522F00((uint64_t)v8, (uint64_t *)&unk_101674610);
      type metadata accessor for CRLWPShapeItem();
      swift_dynamicCastClassUnconditional();
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      uint64_t v9 = v19;
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
      v17 += v25;
      --v14;
    }
    while (v14);
    return v33;
  }
  return result;
}

id sub_100A52DD8(uint64_t a1, void *a2)
{
  uint64_t v61 = a2;
  uint64_t v67 = a1;
  uint64_t v3 = sub_1005057FC(&qword_101672E90);
  __chkstk_darwin(v3 - 8, v4);
  uint64_t v60 = (char *)v54 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for URL.DirectoryHint();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6, v8);
  uint64_t v10 = (char *)v54 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = type metadata accessor for URL();
  uint64_t v66 = *(void *)(v55 - 8);
  __chkstk_darwin(v55, v11);
  uint64_t v13 = (char *)v54 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v16 = __chkstk_darwin(v14, v15);
  uint64_t v56 = (char *)v54 - v17;
  id v59 = &v2[OBJC_IVAR____TtC8Freeform13CRLSEImporter_presentedItemURL];
  uint64_t v19 = *(void (**)(__n128))(v18 + 56);
  uint64_t v57 = v18 + 56;
  uint64_t v58 = v19;
  v19(v16);
  v69[0] = 0x74726F706D49;
  v69[1] = 0xE600000000000000;
  unsigned int v63 = enum case for URL.DirectoryHint.inferFromPath(_:);
  uint64_t v62 = *(void (**)(char *))(v7 + 104);
  v62(v10);
  unint64_t v20 = sub_10052E310();
  uint64_t v64 = v2;
  v54[1] = v20;
  URL.appending<A>(path:directoryHint:)();
  id v21 = *(void (**)(char *, uint64_t))(v7 + 8);
  v21(v10, v6);
  uint64_t v65 = v21;
  void v54[2] = v7 + 8;
  swift_bridgeObjectRelease();
  strcpy((char *)v69, "ImportFailures");
  HIBYTE(v69[1]) = -18;
  uint64_t v22 = v63;
  id v23 = (void (*)(char *, uint64_t, uint64_t))v62;
  ((void (*)(char *, void, uint64_t))v62)(v10, v63, v6);
  v54[3] = v7 + 104;
  URL.appending<A>(path:directoryHint:)();
  v21(v10, v6);
  swift_bridgeObjectRelease();
  v54[0] = *(void *)(v66 + 32);
  uint64_t v24 = v55;
  ((void (*)(char *, char *, uint64_t))v54[0])(&v64[OBJC_IVAR____TtC8Freeform13CRLSEImporter_importFailureURL], v13, v55);
  strcpy((char *)v69, "Snapshot.plist");
  HIBYTE(v69[1]) = -18;
  v23(v10, v22, v6);
  URL.appending<A>(path:directoryHint:)();
  v65(v10, v6);
  swift_bridgeObjectRelease();
  uint64_t v25 = v64;
  uint64_t v26 = v24;
  uint64_t v27 = v24;
  uint64_t v28 = (void (*)(char *, char *, uint64_t))v54[0];
  ((void (*)(char *, char *, uint64_t))v54[0])(&v64[OBJC_IVAR____TtC8Freeform13CRLSEImporter_librarySnapshotURL], v13, v26);
  v69[0] = 0xD000000000000013;
  v69[1] = 0x800000010126AF00;
  ((void (*)(char *, void, uint64_t))v62)(v10, v63, v6);
  URL.appending<A>(path:directoryHint:)();
  uint64_t v29 = v10;
  uint64_t v30 = v56;
  uint64_t v31 = v6;
  uint64_t v32 = v66;
  v65(v29, v31);
  swift_bridgeObjectRelease();
  v28(&v25[OBJC_IVAR____TtC8Freeform13CRLSEImporter_pendingBoardsURL], v13, v27);
  uint64_t v33 = (uint64_t)v60;
  (*(void (**)(char *, char *, uint64_t))(v32 + 16))(v60, v30, v27);
  ((void (*)(uint64_t, void, uint64_t, uint64_t))v58)(v33, 0, 1, v27);
  uint64_t v34 = (uint64_t)v59;
  swift_beginAccess();
  sub_100757E50(v33, v34);
  swift_endAccess();
  id v35 = [objc_allocWithZone((Class)NSOperationQueue) init];
  uint64_t v36 = OBJC_IVAR____TtC8Freeform13CRLSEImporter_presentedItemOperationQueue;
  *(void *)&v25[OBJC_IVAR____TtC8Freeform13CRLSEImporter_presentedItemOperationQueue] = v35;
  id v37 = v35;
  NSString v38 = String._bridgeToObjectiveC()();
  [v37 setName:v38];

  [*(id *)&v25[v36] setMaxConcurrentOperationCount:1];
  [*(id *)&v25[v36] setQualityOfService:17];
  id v39 = v61;
  *(void *)&v25[OBJC_IVAR____TtC8Freeform13CRLSEImporter_boardLibrary] = v61;
  id v40 = v39;
  uint64_t v41 = v25;

  if (qword_10166FA70 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v42 = (void *)static OS_os_log.crlSharingExtension;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117E810;
  id v44 = v42;
  uint64_t v45 = URL.relativePath.getter();
  uint64_t v46 = v30;
  uint64_t v48 = v47;
  *(void *)(inited + 56) = &type metadata for String;
  *(void *)(inited + 64) = sub_100528BE4();
  *(void *)(inited + 32) = v45;
  *(void *)(inited + 40) = v48;
  uint64_t v49 = static os_log_type_t.debug.getter();
  sub_100BAC898((uint64_t)v44, (uint64_t)&_mh_execute_header, v49, (uint64_t)"Container URL %@", 16, 2, inited);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  uint64_t v50 = (objc_class *)type metadata accessor for CRLSEImporter();
  v68.receiver = v41;
  v68.super_class = v50;
  id v51 = [super init];
  uint64_t v52 = *(void (**)(uint64_t, uint64_t))(v32 + 8);
  v52(v67, v27);
  v52((uint64_t)v46, v27);
  return v51;
}

id sub_100A53530()
{
  id v0 = [self defaultManager];
  URL._bridgeToObjectiveC()(v1);
  uint64_t v3 = v2;
  id v8 = 0;
  unsigned int v4 = [v0 removeItemAtURL:v2 error:&v8];

  id v5 = v8;
  if (v4)
  {
    return v5;
  }
  else
  {
    id v7 = v8;
    _convertNSErrorToError(_:)();

    swift_willThrow();
    return (id)swift_errorRelease();
  }
}

uint64_t sub_100A53650()
{
  uint64_t v1 = *(void *)(type metadata accessor for CRLSEImportManifest(0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 32) & ~v2;
  uint64_t v12 = *(void *)(v1 + 64);
  uint64_t v13 = type metadata accessor for URL();
  uint64_t v4 = *(void *)(v13 - 8);
  uint64_t v5 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = *(void *)(v4 + 64);
  swift_unknownObjectRelease();
  uint64_t v7 = type metadata accessor for UUID();
  uint64_t v8 = *(void *)(v7 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v0 + v3, 1, v7)) {
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v0 + v3, v7);
  }
  unint64_t v9 = (v12 + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v10 = (v9 + v5 + 8) & ~v5;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v0 + v10, v13);

  return _swift_deallocObject(v0, v10 + v6, v2 | v5 | 7);
}

uint64_t sub_100A53858(uint64_t a1)
{
  uint64_t v3 = v2;
  uint64_t v5 = *(void *)(type metadata accessor for CRLSEImportManifest(0) - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  unint64_t v7 = (*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v8 = *(unsigned __int8 *)(*(void *)(type metadata accessor for URL() - 8) + 80);
  uint64_t v9 = v7 + v8 + 8;
  uint64_t v10 = *(void *)(v1 + 16);
  uint64_t v11 = *(void *)(v1 + 24);
  uint64_t v12 = v1 + v6;
  uint64_t v13 = *(void *)(v1 + v7);
  uint64_t v14 = v1 + (v9 & ~v8);
  uint64_t v15 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v15;
  *uint64_t v15 = v3;
  v15[1] = sub_100528488;
  return sub_100A4F624(a1, v10, v11, v12, v13, v14);
}

double *sub_100A539C4(uint64_t a1)
{
  uint64_t v2 = sub_1005057FC(&qword_101672E90);
  __chkstk_darwin(v2 - 8, v3);
  uint64_t v5 = (char *)v52 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for URL();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6, v8);
  objc_super v68 = (char *)v52 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10, v11);
  uint64_t v13 = (char *)v52 - v12;
  uint64_t v14 = sub_1005057FC(&qword_101678470);
  __chkstk_darwin(v14 - 8, v15);
  uint64_t v70 = (char *)v52 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for AttributedString();
  uint64_t v18 = *(void *)(v17 - 8);
  __chkstk_darwin(v17, v19);
  uint64_t v67 = (char *)v52 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21, v22);
  uint64_t v66 = (char *)v52 - v23;
  uint64_t v72 = type metadata accessor for CRLSEManifestItem(0);
  __chkstk_darwin(v72, v24);
  uint64_t v27 = (char *)v52 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = *(void *)(a1 + 16);
  if (!v28) {
    return _swiftEmptyArrayStorage;
  }
  uint64_t v71 = v17;
  unint64_t v29 = (*(unsigned __int8 *)(v25 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80);
  unsigned int v63 = v13;
  uint64_t v30 = a1 + v29;
  uint64_t v31 = *(void *)(v25 + 72);
  uint64_t v61 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v18 + 48);
  uint64_t v62 = v31;
  uint64_t v55 = (void (**)(char *, char *, uint64_t))(v18 + 16);
  uint64_t v56 = v18;
  id v59 = (unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
  uint64_t v60 = (void (**)(char *, uint64_t, uint64_t))(v18 + 32);
  uint64_t v57 = v7;
  uint64_t v58 = (void (**)(char *, char *, uint64_t))(v7 + 32);
  unint64_t v53 = (void (**)(char *, char *, uint64_t))(v7 + 16);
  uint64_t v54 = v18 + 8;
  v52[2] = v7 + 8;
  v52[1] = a1;
  swift_bridgeObjectRetain();
  uint64_t v32 = _swiftEmptyArrayStorage;
  uint64_t v33 = &qword_101672E90;
  uint64_t v69 = _swiftEmptyArrayStorage;
  uint64_t v64 = v6;
  uint64_t v65 = v5;
  uint64_t v34 = (uint64_t)v70;
  do
  {
    id v35 = v33;
    sub_100A549EC(v30, (uint64_t)v27, type metadata accessor for CRLSEManifestItem);
    sub_100522E9C((uint64_t)&v27[*(int *)(v72 + 24)], v34, &qword_101678470);
    uint64_t v36 = v71;
    if ((*v61)(v34, 1, v71) == 1)
    {
      sub_100522F00(v34, &qword_101678470);
    }
    else
    {
      uint64_t v37 = v34;
      NSString v38 = *v60;
      id v39 = v66;
      (*v60)(v66, v37, v36);
      (*v55)(v67, v39, v36);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v32 = (double *)sub_100F6486C(0, *((void *)v32 + 2) + 1, 1, (unint64_t)v32);
      }
      unint64_t v41 = *((void *)v32 + 2);
      unint64_t v40 = *((void *)v32 + 3);
      if (v41 >= v40 >> 1) {
        uint64_t v32 = (double *)sub_100F6486C(v40 > 1, v41 + 1, 1, (unint64_t)v32);
      }
      *((void *)v32 + 2) = v41 + 1;
      uint64_t v42 = v56;
      uint64_t v43 = v71;
      v38((char *)v32+ ((*(unsigned __int8 *)(v42 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v42 + 80))+ *(void *)(v56 + 72) * v41, (uint64_t)v67, v71);
      (*(void (**)(char *, uint64_t))(v42 + 8))(v66, v43);
      uint64_t v6 = v64;
      uint64_t v5 = v65;
      uint64_t v34 = (uint64_t)v70;
    }
    sub_100522E9C((uint64_t)&v27[*(int *)(v72 + 28)], (uint64_t)v5, v33);
    if ((*v59)(v5, 1, v6) == 1)
    {
      sub_100A54A54((uint64_t)v27, type metadata accessor for CRLSEManifestItem);
      sub_100522F00((uint64_t)v5, v33);
    }
    else
    {
      id v44 = *v58;
      uint64_t v45 = v63;
      (*v58)(v63, v5, v6);
      (*v53)(v68, v45, v6);
      unint64_t v46 = (unint64_t)v69;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v46 = sub_100F62784(0, *(void *)(v46 + 16) + 1, 1, v46);
      }
      unint64_t v48 = *(void *)(v46 + 16);
      unint64_t v47 = *(void *)(v46 + 24);
      if (v48 >= v47 >> 1) {
        unint64_t v46 = sub_100F62784(v47 > 1, v48 + 1, 1, v46);
      }
      *(void *)(v46 + 16) = v48 + 1;
      uint64_t v49 = v57;
      unint64_t v50 = (*(unsigned __int8 *)(v49 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v49 + 80);
      uint64_t v69 = (double *)v46;
      uint64_t v6 = v64;
      v44((char *)(v46 + v50 + *(void *)(v57 + 72) * v48), v68, v64);
      (*(void (**)(char *, uint64_t))(v49 + 8))(v63, v6);
      sub_100A54A54((uint64_t)v27, type metadata accessor for CRLSEManifestItem);
      uint64_t v5 = v65;
      uint64_t v34 = (uint64_t)v70;
      uint64_t v33 = v35;
    }
    v30 += v62;
    --v28;
  }
  while (v28);
  swift_bridgeObjectRelease();
  return v32;
}

uint64_t sub_100A54030(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 432) = a1;
  *(void *)(v2 + 440) = a2;
  return _swift_task_switch(sub_100A54050, 0, 0);
}

uint64_t sub_100A54050()
{
  uint64_t v1 = (void *)v0[55];
  id v2 = objc_allocWithZone((Class)CRLMultipleItemImporter);
  type metadata accessor for URL();
  swift_bridgeObjectRetain();
  id v3 = v1;
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v5 = [v2 initWithURLs:isa boardItemFactory:v3];
  v0[56] = v5;

  v0[2] = v0;
  v0[3] = sub_100A541BC;
  uint64_t v6 = swift_continuation_init();
  v0[38] = _NSConcreteStackBlock;
  v0[39] = 0x40000000;
  v0[40] = sub_1005BFB40;
  v0[41] = &unk_10151F390;
  v0[42] = v6;
  [v5 importBoardItemsWithCompletionHandler:v0 + 38];
  return _swift_continuation_await(v0 + 2);
}

uint64_t sub_100A541BC()
{
  return _swift_task_switch(sub_100A5429C, 0, 0);
}

uint64_t sub_100A5429C()
{
  if (qword_10166FA70 != -1) {
    swift_once();
  }
  uint64_t v1 = (void *)v0[56];
  id v2 = (void **)&static OS_os_log.crlSharingExtension;
  swift_beginAccess();
  id v3 = (void *)static OS_os_log.crlSharingExtension;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117D8C0;
  id v5 = v3;
  id v6 = [v1 boardItems];
  type metadata accessor for CRLBoardItem(0);
  unint64_t v7 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v7 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v8 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v8 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v36 = v0;
  uint64_t v9 = (void *)v0[56];
  uint64_t v10 = v0[54];
  swift_bridgeObjectRelease();
  *(void *)(inited + 56) = &type metadata for Int;
  *(void *)(inited + 64) = &protocol witness table for Int;
  *(void *)(inited + 32) = v8;
  uint64_t v11 = *(void *)(v10 + 16);
  *(void *)(inited + 96) = &type metadata for Int;
  *(void *)(inited + 104) = &protocol witness table for Int;
  *(void *)(inited + 72) = v11;
  uint64_t v12 = static os_log_type_t.debug.getter();
  sub_100BAC898((uint64_t)v5, (uint64_t)&_mh_execute_header, v12, (uint64_t)"%d of %d URL items imported", 27, 2, inited);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  id v13 = [v9 errors];
  sub_1005057FC(&qword_101672BD0);
  uint64_t v14 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v15 = *(void *)(v14 + 16);
  if (v15)
  {
    swift_bridgeObjectRetain();
    uint64_t v16 = 0;
    uint64_t v35 = v15;
    do
    {
      ++v16;
      uint64_t v17 = *v2;
      uint64_t v18 = swift_initStackObject();
      *(_OWORD *)(v18 + 16) = xmmword_10117D8C0;
      swift_getErrorValue();
      uint64_t v19 = v2;
      uint64_t v20 = v36[47];
      uint64_t v21 = v36[48];
      swift_errorRetain();
      id v22 = v17;
      uint64_t v23 = Error.publicDescription.getter(v20, v21);
      uint64_t v25 = v24;
      *(void *)(v18 + 56) = &type metadata for String;
      unint64_t v26 = sub_100528BE4();
      *(void *)(v18 + 64) = v26;
      *(void *)(v18 + 32) = v23;
      *(void *)(v18 + 40) = v25;
      id v2 = v19;
      uint64_t v0 = v36;
      swift_getErrorValue();
      uint64_t v27 = Error.fullDescription.getter(v36[50]);
      *(void *)(v18 + 96) = &type metadata for String;
      *(void *)(v18 + 104) = v26;
      *(void *)(v18 + 72) = v27;
      *(void *)(v18 + 80) = v28;
      uint64_t v29 = static os_log_type_t.error.getter();
      sub_100BAC898((uint64_t)v22, (uint64_t)&_mh_execute_header, v29, (uint64_t)"Error creating board items from sharing extension content %{public}@ <%@>", 73, 2, v18);
      swift_setDeallocating();
      swift_arrayDestroy();

      swift_errorRelease();
    }
    while (v35 != v16);
    swift_bridgeObjectRelease();
  }
  uint64_t v30 = (void *)v0[56];
  swift_bridgeObjectRelease();
  id v31 = [v30 boardItems];
  uint64_t v32 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v33 = (uint64_t (*)(uint64_t))v0[1];
  return v33(v32);
}

uint64_t sub_100A546B0()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100A546E8(uint64_t a1, uint64_t a2)
{
  return sub_100A4DC6C(a1, a2, *(void *)(v2 + 16));
}

uint64_t sub_100A546F0()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100A54700()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_100A54728(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100A54738()
{
  return swift_release();
}

unint64_t sub_100A54740()
{
  unint64_t result = qword_10168D3D8;
  if (!qword_10168D3D8)
  {
    sub_100522D34(&qword_10168D3D0);
    sub_100A549A4(&qword_10168D3E0, (void (*)(uint64_t))type metadata accessor for CRLSELibraryViewModel.Item);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168D3D8);
  }
  return result;
}

uint64_t sub_100A547E4(uint64_t a1)
{
  return sub_100A4EA50(a1) & 1;
}

unint64_t sub_100A54804()
{
  unint64_t result = qword_10168D3F0;
  if (!qword_10168D3F0)
  {
    sub_100522D34(&qword_10168D3E8);
    sub_100A549A4(&qword_10167CBE8, (void (*)(uint64_t))type metadata accessor for CRLSELibraryViewModel.Item);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168D3F0);
  }
  return result;
}

uint64_t sub_100A548A8()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100A548E8()
{
  return sub_100A4D3C4();
}

uint64_t sub_100A548F0()
{
  return _swift_deallocObject(v0, 32, 7);
}

unint64_t sub_100A54900()
{
  unint64_t result = qword_10167CC08;
  if (!qword_10167CC08)
  {
    sub_100522D34((uint64_t *)&unk_10168D410);
    sub_100A549A4(&qword_10168D420, (void (*)(uint64_t))type metadata accessor for CRLSELibraryViewModeItemNode);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10167CC08);
  }
  return result;
}

uint64_t sub_100A549A4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100A549EC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_100A54A54(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_100A54AB4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

void sub_100A54B1C()
{
}

uint64_t sub_100A54C38()
{
  uint64_t v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC8Freeform14CRLPropertyMap_data);
  swift_beginAccess();
  uint64_t v2 = *v1;
  if (*(void *)(v2 + 16) && (uint64_t v3 = sub_1009563E8(), (v4 & 1) != 0))
  {
    sub_100557A70(*(void *)(v2 + 56) + 32 * v3, (uint64_t)v7);
    uint64_t v5 = 1;
  }
  else
  {
    uint64_t v5 = 0;
    memset(v7, 0, 24);
    v7[3] = 1;
  }
  sub_100522F00((uint64_t)v7, (uint64_t *)&unk_1016725E0);
  return v5;
}

id sub_100A54DC8(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void *__return_ptr, uint64_t))
{
  a4(v12, a3);
  uint64_t v4 = v13;
  if (v13)
  {
    uint64_t v5 = sub_10050F848(v12, v13);
    uint64_t v6 = *(void *)(v4 - 8);
    __n128 v7 = __chkstk_darwin(v5, v5);
    uint64_t v9 = (char *)v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, __n128))(v6 + 16))(v9, v7);
    uint64_t v10 = (void *)_bridgeAnythingToObjectiveC<A>(_:)();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v4);
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v12);
  }
  else
  {
    uint64_t v10 = 0;
  }

  return v10;
}

double sub_100A54F04@<D0>(uint64_t a1@<X8>)
{
  uint64_t v3 = (uint64_t *)(v1 + OBJC_IVAR____TtC8Freeform14CRLPropertyMap_data);
  swift_beginAccess();
  uint64_t v4 = *v3;
  if (*(void *)(v4 + 16) && (uint64_t v5 = sub_1009563E8(), (v6 & 1) != 0))
  {
    sub_100557A70(*(void *)(v4 + 56) + 32 * v5, (uint64_t)v9);
    *(void *)(a1 + 24) = sub_1005057FC(&qword_101672BF0);
    uint64_t v7 = swift_allocObject();
    *(void *)a1 = v7;
    sub_10051B3EC((uint64_t)v9, v7 + 16, &qword_101672BF0);
  }
  else
  {
    double result = 0.0;
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
  }
  return result;
}

uint64_t sub_100A55088(void (*a1)(uint64_t, _OWORD *, char *))
{
  char v19 = 0;
  uint64_t v3 = (uint64_t *)(v1 + OBJC_IVAR____TtC8Freeform14CRLPropertyMap_data);
  swift_beginAccess();
  uint64_t v4 = *v3;
  uint64_t v18 = v4 + 64;
  uint64_t v5 = 1 << *(unsigned char *)(v4 + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(v4 + 64);
  int64_t v8 = (unint64_t)(v5 + 63) >> 6;
  swift_bridgeObjectRetain();
  int64_t v9 = 0;
  do
  {
    if (!v7)
    {
      int64_t v13 = v9 + 1;
      if (__OFADD__(v9, 1))
      {
        __break(1u);
LABEL_29:
        __break(1u);
      }
      if (v13 >= v8) {
        goto LABEL_24;
      }
      unint64_t v14 = *(void *)(v18 + 8 * v13);
      if (v14) {
        goto LABEL_10;
      }
      int64_t v15 = v9 + 2;
      ++v9;
      if (v13 + 1 >= v8) {
        goto LABEL_24;
      }
      unint64_t v14 = *(void *)(v18 + 8 * v15);
      if (!v14)
      {
        int64_t v9 = v13 + 1;
        if (v13 + 2 >= v8) {
          goto LABEL_24;
        }
        unint64_t v14 = *(void *)(v18 + 8 * (v13 + 2));
        if (v14)
        {
          v13 += 2;
          goto LABEL_10;
        }
        int64_t v15 = v13 + 3;
        int64_t v9 = v13 + 2;
        if (v13 + 3 >= v8) {
          goto LABEL_24;
        }
        unint64_t v14 = *(void *)(v18 + 8 * v15);
        if (!v14)
        {
          while (1)
          {
            int64_t v13 = v15 + 1;
            if (__OFADD__(v15, 1)) {
              goto LABEL_29;
            }
            if (v13 >= v8) {
              break;
            }
            unint64_t v14 = *(void *)(v18 + 8 * v13);
            ++v15;
            if (v14) {
              goto LABEL_10;
            }
          }
          int64_t v9 = v8 - 1;
LABEL_24:
          unint64_t v7 = 0;
          memset(v20, 0, sizeof(v20));
          uint64_t v21 = 1;
          goto LABEL_25;
        }
      }
      int64_t v13 = v15;
LABEL_10:
      unint64_t v7 = (v14 - 1) & v14;
      unint64_t v11 = __clz(__rbit64(v14)) + (v13 << 6);
      int64_t v9 = v13;
      goto LABEL_6;
    }
    unint64_t v10 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    unint64_t v11 = v10 | (v9 << 6);
LABEL_6:
    uint64_t v12 = *(void *)(v4 + 56);
    *(void *)&v20[0] = *(void *)(*(void *)(v4 + 48) + 8 * v11);
    sub_100557A70(v12 + 32 * v11, (uint64_t)v20 + 8);
LABEL_25:
    sub_10051B3EC((uint64_t)v20, (uint64_t)&v22, &qword_10168D460);
    if (v23[3] == 1) {
      break;
    }
    uint64_t v16 = v22;
    sub_10051B3EC((uint64_t)v23, (uint64_t)v20, &qword_101672BF0);
    a1(v16, v20, &v19);
    sub_100522F00((uint64_t)v20, &qword_101672BF0);
  }
  while (v19 != 1);
  return swift_release();
}

id sub_100A553A4()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLPropertyMap();
  [super dealloc];
}

uint64_t type metadata accessor for CRLPropertyMap()
{
  return self;
}

uint64_t sub_100A5540C()
{
  if (*(void *)(v0 + 40)) {
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v0 + 16);
  }

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_100A5544C(uint64_t a1, uint64_t a2)
{
  char v32 = 0;
  uint64_t v3 = (uint64_t *)(a1 + OBJC_IVAR____TtC8Freeform14CRLPropertyMap_data);
  swift_beginAccess();
  uint64_t v4 = *v3;
  uint64_t v5 = *(void *)(*v3 + 64);
  uint64_t v26 = *v3 + 64;
  uint64_t v6 = 1 << *(unsigned char *)(v4 + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & v5;
  uint64_t v28 = (uint64_t)v35 + 8;
  id v31 = v38;
  uint64_t v30 = a2 + 16;
  int64_t v27 = (unint64_t)(v6 + 63) >> 6;
  int64_t v25 = v27 - 1;
  uint64_t v29 = v4;
  swift_bridgeObjectRetain();
  int64_t v9 = 0;
  do
  {
    if (!v8)
    {
      int64_t v19 = v9 + 1;
      if (__OFADD__(v9, 1))
      {
        __break(1u);
LABEL_32:
        __break(1u);
      }
      if (v19 >= v27) {
        goto LABEL_26;
      }
      unint64_t v20 = *(void *)(v26 + 8 * v19);
      if (v20) {
        goto LABEL_12;
      }
      int64_t v21 = v9 + 2;
      ++v9;
      if (v19 + 1 >= v27) {
        goto LABEL_26;
      }
      unint64_t v20 = *(void *)(v26 + 8 * v21);
      if (!v20)
      {
        int64_t v9 = v19 + 1;
        if (v19 + 2 >= v27) {
          goto LABEL_26;
        }
        unint64_t v20 = *(void *)(v26 + 8 * (v19 + 2));
        if (v20)
        {
          v19 += 2;
          goto LABEL_12;
        }
        int64_t v21 = v19 + 3;
        int64_t v9 = v19 + 2;
        if (v19 + 3 >= v27) {
          goto LABEL_26;
        }
        unint64_t v20 = *(void *)(v26 + 8 * v21);
        if (!v20)
        {
          while (1)
          {
            int64_t v19 = v21 + 1;
            if (__OFADD__(v21, 1)) {
              goto LABEL_32;
            }
            if (v19 >= v27) {
              break;
            }
            unint64_t v20 = *(void *)(v26 + 8 * v19);
            ++v21;
            if (v20) {
              goto LABEL_12;
            }
          }
          int64_t v9 = v25;
LABEL_26:
          unint64_t v8 = 0;
          memset(v35, 0, sizeof(v35));
          uint64_t v36 = 1;
          goto LABEL_27;
        }
      }
      int64_t v19 = v21;
LABEL_12:
      unint64_t v8 = (v20 - 1) & v20;
      unint64_t v17 = __clz(__rbit64(v20)) + (v19 << 6);
      int64_t v9 = v19;
      goto LABEL_8;
    }
    unint64_t v16 = __clz(__rbit64(v8));
    v8 &= v8 - 1;
    unint64_t v17 = v16 | (v9 << 6);
LABEL_8:
    uint64_t v18 = *(void *)(v29 + 56);
    *(void *)&v35[0] = *(void *)(*(void *)(v29 + 48) + 8 * v17);
    sub_100557A70(v18 + 32 * v17, v28);
LABEL_27:
    sub_10051B3EC((uint64_t)v35, (uint64_t)&v37, &qword_10168D460);
    if (v38[3] == 1) {
      break;
    }
    uint64_t v22 = v37;
    sub_10051B3EC((uint64_t)v31, (uint64_t)v35, &qword_101672BF0);
    sub_100557A70((uint64_t)v35, (uint64_t)v33);
    uint64_t v23 = v34;
    if (v34)
    {
      unint64_t v10 = sub_10050F848(v33, v34);
      uint64_t v11 = *(void *)(v23 - 8);
      __n128 v12 = __chkstk_darwin(v10, v10);
      unint64_t v14 = (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, __n128))(v11 + 16))(v14, v12);
      uint64_t v15 = _bridgeAnythingToObjectiveC<A>(_:)();
      (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v23);
      _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v33);
    }
    else
    {
      uint64_t v15 = 0;
    }
    (*(void (**)(uint64_t, uint64_t, uint64_t, char *))(a2 + 16))(a2, v22, v15, &v32);
    swift_unknownObjectRelease();
    sub_100522F00((uint64_t)v35, &qword_101672BF0);
  }
  while ((v32 & 1) == 0);
  return swift_release();
}

uint64_t sub_100A55840()
{
  sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"boxedValue(for:)", 16, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/Style/CRLWPStyleProxy.swift", 87, 2, 47, (uint64_t)"Requesting value for invalid property", 37, 2u, (uint64_t)_swiftEmptyArrayStorage);
  sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"boxedValue(for:)", 16, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/Style/CRLWPStyleProxy.swift", 87, 2, 47);

  return swift_unknownObjectRetain();
}

id sub_100A55CA0()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLWPStyle();
  return [super dealloc];
}

uint64_t type metadata accessor for CRLWPStyle()
{
  return self;
}

Class sub_100A55CF8(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    specialized ContiguousArray.reserveCapacity(_:)();
    uint64_t v3 = (int *)(a1 + 32);
    do
    {
      int v4 = *v3++;
      id v5 = objc_allocWithZone((Class)NSNumber);
      LODWORD(v6) = v4;
      [v5 initWithFloat:v6];
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
      --v1;
    }
    while (v1);
  }
  sub_100752EE0();
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  return isa;
}

Class sub_100A55DEC(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    specialized ContiguousArray.reserveCapacity(_:)();
    uint64_t v3 = (unsigned __int8 *)(a1 + 32);
    do
    {
      unsigned int v4 = *v3++;
      [objc_allocWithZone((Class)NSNumber) initWithBool:v4];
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
      --v1;
    }
    while (v1);
  }
  sub_100752EE0();
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  return isa;
}

UIImage *sub_100A55ED8(void *a1)
{
  [a1 size];
  double v4 = v3;
  [v1 size];
  if (v4 <= v5) {
    double v4 = v5;
  }
  [a1 size];
  double v7 = v6;
  [v1 size];
  if (v7 > v8) {
    double v8 = v7;
  }
  double v9 = v4;
  UIGraphicsBeginImageContextWithOptions(*(CGSize *)(&v8 - 1), 0, 0.0);
  [v1 size];
  double v11 = v10 * 0.5;
  [a1 size];
  double v13 = v11 - v12 * 0.5;
  [v1 size];
  double v15 = v14 * 0.5;
  [a1 size];
  double v17 = v15 - v16 * 0.5;
  [a1 size];
  double v19 = v18;
  [a1 size];
  [a1 drawInRect:v13, v17, v19, v20];
  [v1 size];
  double v22 = v21;
  [v1 size];
  [v1 drawInRect:0.0, 0.0, v22, v23];
  uint64_t v24 = UIGraphicsGetImageFromCurrentImageContext();
  UIGraphicsEndImageContext();
  return v24;
}

uint64_t sub_100A56040(char *a1)
{
  uint64_t v3 = type metadata accessor for CRLTextInputModifierKeyMask();
  uint64_t v4 = *(void *)&a1[OBJC_IVAR____TtC8Freeform27CRLTextInputModifierKeyMask_rawValue];
  double v5 = (char *)objc_allocWithZone((Class)v3);
  *(void *)&v5[OBJC_IVAR____TtC8Freeform27CRLTextInputModifierKeyMask_rawValue] = v4;
  v14.receiver = v5;
  v14.super_class = (Class)v3;
  double v6 = a1;
  double v7 = (char *)[v14 init];
  uint64_t v8 = *(void *)&v7[OBJC_IVAR____TtC8Freeform27CRLTextInputModifierKeyMask_rawValue];

  uint64_t v9 = *(void *)(v1 + OBJC_IVAR____TtC8Freeform27CRLTextInputModifierKeyMask_rawValue) & v8;
  double v10 = (char *)objc_allocWithZone((Class)v3);
  *(void *)&v10[OBJC_IVAR____TtC8Freeform27CRLTextInputModifierKeyMask_rawValue] = v9;
  v13.receiver = v10;
  v13.super_class = (Class)v3;
  id v11 = [super init];

  LOBYTE(v3) = static NSObject.== infix(_:_:)();
  return v3 & 1;
}

id sub_100A56114(void *a1)
{
  uint64_t v3 = *v1;
  uint64_t v4 = *(void *)((char *)*v1 + OBJC_IVAR____TtC8Freeform27CRLTextInputModifierKeyMask_rawValue);
  uint64_t v5 = type metadata accessor for CRLTextInputModifierKeyMask();
  double v6 = (char *)objc_allocWithZone((Class)v5);
  *(void *)&v6[OBJC_IVAR____TtC8Freeform27CRLTextInputModifierKeyMask_rawValue] = v4;
  v18.receiver = v6;
  v18.super_class = (Class)v5;
  id v7 = v3;
  uint64_t v8 = (char *)[v18 init];
  uint64_t v9 = *(void *)&v8[OBJC_IVAR____TtC8Freeform27CRLTextInputModifierKeyMask_rawValue];

  uint64_t v10 = *(void *)((unsigned char *)a1 + OBJC_IVAR____TtC8Freeform27CRLTextInputModifierKeyMask_rawValue) & v9;
  id v11 = (char *)objc_allocWithZone((Class)v5);
  *(void *)&v11[OBJC_IVAR____TtC8Freeform27CRLTextInputModifierKeyMask_rawValue] = v10;
  v17.receiver = v11;
  v17.super_class = (Class)v5;
  [super init];

  objc_super v13 = (char *)objc_allocWithZone((Class)v5);
  *(void *)&v13[OBJC_IVAR____TtC8Freeform27CRLTextInputModifierKeyMask_rawValue] = 0;
  v16.receiver = v13;
  v16.super_class = (Class)v5;
  id v14 = [super init];
  LOBYTE(v5) = static NSObject.== infix(_:_:)();

  if (v5)
  {

    return 0;
  }
  else
  {
    sub_100A564CC(a1);
  }
  return v12;
}

BOOL sub_100A56234(void *a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = (char *)*v2;
  uint64_t v6 = OBJC_IVAR____TtC8Freeform27CRLTextInputModifierKeyMask_rawValue;
  uint64_t v7 = *(void *)((char *)*v2 + OBJC_IVAR____TtC8Freeform27CRLTextInputModifierKeyMask_rawValue);
  uint64_t v8 = (objc_class *)type metadata accessor for CRLTextInputModifierKeyMask();
  uint64_t v9 = (char *)objc_allocWithZone(v8);
  *(void *)&v9[OBJC_IVAR____TtC8Freeform27CRLTextInputModifierKeyMask_rawValue] = v7;
  v25.receiver = v9;
  v25.super_class = v8;
  uint64_t v10 = v5;
  id v11 = [(char *)[super init]];
  uint64_t v12 = *(void *)&v11[OBJC_IVAR____TtC8Freeform27CRLTextInputModifierKeyMask_rawValue];

  uint64_t v13 = OBJC_IVAR____TtC8Freeform27CRLTextInputModifierKeyMask_rawValue;
  uint64_t v14 = *(void *)((unsigned char *)a2 + OBJC_IVAR____TtC8Freeform27CRLTextInputModifierKeyMask_rawValue) & v12;
  double v15 = (char *)objc_allocWithZone(v8);
  *(void *)&v15[OBJC_IVAR____TtC8Freeform27CRLTextInputModifierKeyMask_rawValue] = v14;
  v24.receiver = v15;
  v24.super_class = v8;
  id v16 = [super init];

  char v17 = static NSObject.== infix(_:_:)();
  if ((v17 & 1) == 0)
  {

    uint64_t v18 = *(void *)&v5[v6];
    id v16 = a2;

    uint64_t v19 = *(void *)((char *)a2 + v13) | v18;
    double v20 = (char *)objc_allocWithZone(v8);
    *(void *)&v20[OBJC_IVAR____TtC8Freeform27CRLTextInputModifierKeyMask_rawValue] = v19;
    v23.receiver = v20;
    v23.super_class = v8;
    *uint64_t v3 = [super init];
  }
  *a1 = v16;
  return (v17 & 1) == 0;
}

id sub_100A56370(void *a1)
{
  uint64_t v3 = (char *)*v1;
  uint64_t v4 = OBJC_IVAR____TtC8Freeform27CRLTextInputModifierKeyMask_rawValue;
  uint64_t v5 = *(void *)((char *)*v1 + OBJC_IVAR____TtC8Freeform27CRLTextInputModifierKeyMask_rawValue);
  uint64_t v6 = type metadata accessor for CRLTextInputModifierKeyMask();
  uint64_t v7 = (char *)objc_allocWithZone((Class)v6);
  *(void *)&v7[OBJC_IVAR____TtC8Freeform27CRLTextInputModifierKeyMask_rawValue] = v5;
  v26.receiver = v7;
  v26.super_class = (Class)v6;
  uint64_t v8 = v3;
  uint64_t v9 = (char *)[super init];
  uint64_t v10 = *(void *)&v9[OBJC_IVAR____TtC8Freeform27CRLTextInputModifierKeyMask_rawValue];

  uint64_t v11 = OBJC_IVAR____TtC8Freeform27CRLTextInputModifierKeyMask_rawValue;
  uint64_t v12 = *(void *)((unsigned char *)a1 + OBJC_IVAR____TtC8Freeform27CRLTextInputModifierKeyMask_rawValue) & v10;
  uint64_t v13 = (char *)objc_allocWithZone((Class)v6);
  *(void *)&v13[OBJC_IVAR____TtC8Freeform27CRLTextInputModifierKeyMask_rawValue] = v12;
  v25.receiver = v13;
  v25.super_class = (Class)v6;
  id v14 = [super init];

  uint64_t v15 = *(void *)&v3[v4];
  id v16 = a1;

  uint64_t v17 = *(void *)((char *)a1 + v11) | v15;
  uint64_t v18 = (char *)objc_allocWithZone((Class)v6);
  *(void *)&v18[OBJC_IVAR____TtC8Freeform27CRLTextInputModifierKeyMask_rawValue] = v17;
  v24.receiver = v18;
  v24.super_class = (Class)v6;
  id v19 = [super init];

  *uint64_t v1 = v19;
  double v20 = (char *)objc_allocWithZone((Class)v6);
  *(void *)&v20[OBJC_IVAR____TtC8Freeform27CRLTextInputModifierKeyMask_rawValue] = 0;
  v23.receiver = v20;
  v23.super_class = (Class)v6;
  [super init];
  LOBYTE(v6) = static NSObject.== infix(_:_:)();

  if (v6)
  {

    return 0;
  }
  return v14;
}

void sub_100A564CC(void *a1)
{
  uint64_t v3 = (char *)*v1;
  uint64_t v4 = OBJC_IVAR____TtC8Freeform27CRLTextInputModifierKeyMask_rawValue;
  uint64_t v5 = *(void *)((char *)*v1 + OBJC_IVAR____TtC8Freeform27CRLTextInputModifierKeyMask_rawValue);
  uint64_t v6 = (objc_class *)type metadata accessor for CRLTextInputModifierKeyMask();
  uint64_t v7 = (char *)objc_allocWithZone(v6);
  *(void *)&v7[OBJC_IVAR____TtC8Freeform27CRLTextInputModifierKeyMask_rawValue] = v5;
  v22.receiver = v7;
  v22.super_class = v6;
  uint64_t v8 = v3;
  id v9 = a1;
  uint64_t v10 = (char *)[super init];
  uint64_t v11 = *(void *)&v10[OBJC_IVAR____TtC8Freeform27CRLTextInputModifierKeyMask_rawValue];
  uint64_t v12 = (char *)v9;

  uint64_t v13 = *(void *)&v12[OBJC_IVAR____TtC8Freeform27CRLTextInputModifierKeyMask_rawValue] ^ v11;
  id v14 = (char *)objc_allocWithZone(v6);
  *(void *)&v14[OBJC_IVAR____TtC8Freeform27CRLTextInputModifierKeyMask_rawValue] = v13;
  v21.receiver = v14;
  v21.super_class = v6;
  id v15 = [super init];

  uint64_t v16 = *(void *)&v3[v4];
  uint64_t v17 = *(void *)((unsigned char *)v15 + OBJC_IVAR____TtC8Freeform27CRLTextInputModifierKeyMask_rawValue) & v16;
  uint64_t v18 = (char *)objc_allocWithZone(v6);
  *(void *)&v18[OBJC_IVAR____TtC8Freeform27CRLTextInputModifierKeyMask_rawValue] = v17;
  v20.receiver = v18;
  v20.super_class = v6;
  [super init];

  *uint64_t v1 = v19;
}

id sub_100A565F4()
{
  uint64_t v0 = (objc_class *)type metadata accessor for CRLTextInputModifierKeyMask();
  uint64_t v1 = (char *)objc_allocWithZone(v0);
  *(void *)&v1[OBJC_IVAR____TtC8Freeform27CRLTextInputModifierKeyMask_rawValue] = 0;
  v3.receiver = v1;
  v3.super_class = v0;
  id result = [super init];
  qword_10171B610 = (uint64_t)result;
  return result;
}

id sub_100A56670()
{
  uint64_t v0 = (objc_class *)type metadata accessor for CRLTextInputModifierKeyMask();
  uint64_t v1 = (char *)objc_allocWithZone(v0);
  *(void *)&v1[OBJC_IVAR____TtC8Freeform27CRLTextInputModifierKeyMask_rawValue] = 1;
  v3.receiver = v1;
  v3.super_class = v0;
  id result = [super init];
  qword_10171B618 = (uint64_t)result;
  return result;
}

id sub_100A566F0()
{
  uint64_t v0 = (objc_class *)type metadata accessor for CRLTextInputModifierKeyMask();
  uint64_t v1 = (char *)objc_allocWithZone(v0);
  *(void *)&v1[OBJC_IVAR____TtC8Freeform27CRLTextInputModifierKeyMask_rawValue] = 2;
  v3.receiver = v1;
  v3.super_class = v0;
  id result = [super init];
  qword_10171B620 = (uint64_t)result;
  return result;
}

id sub_100A56770()
{
  uint64_t v0 = (objc_class *)type metadata accessor for CRLTextInputModifierKeyMask();
  uint64_t v1 = (char *)objc_allocWithZone(v0);
  *(void *)&v1[OBJC_IVAR____TtC8Freeform27CRLTextInputModifierKeyMask_rawValue] = 4;
  v3.receiver = v1;
  v3.super_class = v0;
  id result = [super init];
  qword_10171B628 = (uint64_t)result;
  return result;
}

id sub_100A567F0()
{
  uint64_t v0 = (objc_class *)type metadata accessor for CRLTextInputModifierKeyMask();
  uint64_t v1 = (char *)objc_allocWithZone(v0);
  *(void *)&v1[OBJC_IVAR____TtC8Freeform27CRLTextInputModifierKeyMask_rawValue] = 8;
  v3.receiver = v1;
  v3.super_class = v0;
  id result = [super init];
  qword_10171B630 = (uint64_t)result;
  return result;
}

uint64_t sub_100A56870(uint64_t a1)
{
  return sub_100A568EC(a1, &qword_10166F790, (void **)&qword_10171B620, &qword_10171B638);
}

uint64_t sub_100A568C0(uint64_t a1)
{
  return sub_100A568EC(a1, &qword_10166F798, (void **)&qword_10171B628, &qword_10171B640);
}

uint64_t sub_100A568EC(uint64_t a1, void *a2, void **a3, uint64_t *a4)
{
  sub_1005057FC((uint64_t *)&unk_101676C10);
  unint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117DF50;
  if (*a2 != -1) {
    swift_once();
  }
  uint64_t v8 = *a3;
  *(void *)(inited + 32) = *a3;
  uint64_t v9 = qword_10166F788;
  id v10 = v8;
  if (v9 != -1) {
    swift_once();
  }
  uint64_t v11 = (void *)qword_10171B618;
  *(void *)(inited + 40) = qword_10171B618;
  specialized Array._endMutation()();
  id v12 = v11;
  uint64_t v13 = sub_100A571A4(inited);
  uint64_t result = swift_bridgeObjectRelease();
  *a4 = v13;
  return result;
}

uint64_t sub_100A569E4(uint64_t a1)
{
  return sub_100A568EC(a1, &qword_10166F7A0, (void **)&qword_10171B630, &qword_10171B648);
}

BOOL sub_100A56A40(uint64_t a1)
{
  swift_getObjectType();
  sub_100557A70(a1, (uint64_t)v7);
  if (v8)
  {
    if (swift_dynamicCast())
    {
      uint64_t v3 = *(void *)(v1 + OBJC_IVAR____TtC8Freeform27CRLTextInputModifierKeyMask_rawValue);
      uint64_t v4 = *(void *)&v6[OBJC_IVAR____TtC8Freeform27CRLTextInputModifierKeyMask_rawValue];

      return v3 == v4;
    }
  }
  else
  {
    sub_10052E2B0((uint64_t)v7);
  }
  return 0;
}

id sub_100A56B8C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLTextInputModifierKeyMask();
  return [super dealloc];
}

uint64_t type metadata accessor for CRLTextInputModifierKeyMask()
{
  return self;
}

id sub_100A56BE8@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t v4 = (objc_class *)type metadata accessor for CRLTextInputModifierKeyMask();
  uint64_t v5 = (char *)objc_allocWithZone(v4);
  *(void *)&v5[OBJC_IVAR____TtC8Freeform27CRLTextInputModifierKeyMask_rawValue] = v3;
  v7.receiver = v5;
  v7.super_class = v4;
  id result = [super init];
  *a2 = result;
  return result;
}

uint64_t sub_100A56C4C(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  unint64_t v3 = sub_10050AE0C();

  return OptionSet<>.init()(a1, WitnessTable, v3);
}

uint64_t sub_100A56CBC(char **a1)
{
  return sub_100A56040(*a1) & 1;
}

void sub_100A56CE8(void **a1, uint64_t a2, uint64_t a3)
{
}

void sub_100A56D00()
{
  swift_getWitnessTable();
  OptionSet.intersection(_:)();
  uint64_t v1 = *v0;
}

void sub_100A56D70(void **a1, uint64_t a2, uint64_t a3)
{
}

void sub_100A56D88(void **a1, uint64_t a2, uint64_t a3, void (*a4)(void **, uint64_t, uint64_t))
{
  uint64_t WitnessTable = swift_getWitnessTable();
  a4(a1, a2, WitnessTable);

  uint64_t v9 = *a1;
}

BOOL sub_100A56E10(void *a1, void **a2)
{
  objc_super v2 = *a2;
  BOOL v3 = sub_100A56234(a1, *a2);

  return v3;
}

id sub_100A56E44@<X0>(void **a1@<X0>, void *a2@<X8>)
{
  id result = sub_100A56114(*a1);
  *a2 = result;
  return result;
}

void sub_100A56E70(void **a1@<X0>, void *a2@<X8>)
{
  BOOL v3 = *a1;
  id v4 = sub_100A56370(*a1);

  *a2 = v4;
}

void sub_100A56EB0(void **a1, uint64_t a2, uint64_t a3)
{
}

uint64_t sub_100A56EC8(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  unint64_t v5 = sub_10050AE0C();

  return OptionSet<>.formIntersection(_:)(a1, a2, WitnessTable, v5);
}

void sub_100A56F34(void **a1, uint64_t a2, uint64_t a3)
{
}

void sub_100A56F4C(void **a1, uint64_t a2, uint64_t a3, void (*a4)(void **, uint64_t, uint64_t, unint64_t))
{
  uint64_t WitnessTable = swift_getWitnessTable();
  unint64_t v8 = sub_10050AE0C();
  a4(a1, a2, WitnessTable, v8);
  uint64_t v9 = *a1;
}

void sub_100A56FD0()
{
  SetAlgebra.subtracting(_:)();
  uint64_t v1 = *v0;
}

void sub_100A57010(void *a1@<X8>)
{
  *a1 = *(void *)(*v1 + OBJC_IVAR____TtC8Freeform27CRLTextInputModifierKeyMask_rawValue);
}

uint64_t sub_100A57028@<X0>(unint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = sub_100A571A4(a1);
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v3;
  return result;
}

uint64_t sub_100A57094()
{
  return sub_100A57164(&qword_10168D4C0);
}

uint64_t sub_100A570C8()
{
  return sub_100A57164(&qword_10168D4C8);
}

uint64_t sub_100A570FC()
{
  return sub_100A57164(&qword_10168D4D0);
}

uint64_t sub_100A57130()
{
  return sub_100A57164(&qword_10168D4D8);
}

uint64_t sub_100A57164(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for CRLTextInputModifierKeyMask();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100A571A4(unint64_t a1)
{
  objc_super v2 = (objc_class *)type metadata accessor for CRLTextInputModifierKeyMask();
  uint64_t v3 = (char *)objc_allocWithZone(v2);
  id v4 = &qword_10168D000;
  *(void *)&v3[OBJC_IVAR____TtC8Freeform27CRLTextInputModifierKeyMask_rawValue] = 0;
  v33.receiver = v3;
  v33.super_class = v2;
  uint64_t result = [v33 init];
  uint64_t v6 = (char *)result;
  if (!(a1 >> 62))
  {
    uint64_t v7 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v7) {
      goto LABEL_3;
    }
    return (uint64_t)v6;
  }
  swift_bridgeObjectRetain();
  uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
  uint64_t result = swift_bridgeObjectRelease();
  if (!v7) {
    return (uint64_t)v6;
  }
LABEL_3:
  if (v7 >= 1)
  {
    uint64_t v8 = 0;
    unint64_t v26 = a1 & 0xC000000000000001;
    uint64_t v27 = v7;
    unint64_t v28 = a1;
    do
    {
      if (v26) {
        id v9 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v9 = *(id *)(a1 + 8 * v8 + 32);
      }
      id v10 = v9;
      uint64_t v29 = v4[146];
      uint64_t v11 = *(void *)&v6[v29];
      id v12 = (char *)objc_allocWithZone(v2);
      *(void *)&v12[v4[146]] = v11;
      v32.receiver = v12;
      v32.super_class = v2;
      uint64_t v13 = v4;
      id v14 = v6;
      id v15 = [super init];
      uint64_t v16 = *(void *)&v15[v4[146]];

      uint64_t v17 = v13[146];
      uint64_t v18 = *(void *)((unsigned char *)v10 + v17) & v16;
      id v19 = (char *)objc_allocWithZone(v2);
      *(void *)&v19[v13[146]] = v18;
      v31.receiver = v19;
      v31.super_class = v2;
      id v20 = [super init];

      char v21 = static NSObject.== infix(_:_:)();
      if ((v21 & 1) == 0)
      {
        uint64_t v22 = *(void *)&v6[v29];
        id v23 = v10;

        uint64_t v24 = *(void *)((char *)v10 + v17) | v22;
        objc_super v25 = (char *)objc_allocWithZone(v2);
        *(void *)&v25[v13[146]] = v24;
        v30.receiver = v25;
        v30.super_class = v2;
        id v14 = [(char *)[super init]];
      }
      id v4 = v13;

      ++v8;
      uint64_t v6 = v14;
      a1 = v28;
    }
    while (v27 != v8);
    return (uint64_t)v14;
  }
  __break(1u);
  return result;
}

id sub_100A573A4(int a1)
{
  objc_super v2 = (objc_class *)type metadata accessor for CRLTextInputModifierKeyMask();
  uint64_t v3 = (char *)objc_allocWithZone(v2);
  *(void *)&v3[OBJC_IVAR____TtC8Freeform27CRLTextInputModifierKeyMask_rawValue] = 0;
  v59.receiver = v3;
  v59.super_class = v2;
  [super init];
  id v5 = v4;
  if ((*(void *)&a1 & 0x30000) != 0)
  {
    uint64_t v6 = qword_10166F788;
    uint64_t v7 = (char *)v4;
    if (v6 != -1) {
      swift_once();
    }
    uint64_t v8 = (void *)qword_10171B618;
    uint64_t v9 = *(void *)&v7[OBJC_IVAR____TtC8Freeform27CRLTextInputModifierKeyMask_rawValue];
    id v10 = (char *)objc_allocWithZone(v2);
    *(void *)&v10[OBJC_IVAR____TtC8Freeform27CRLTextInputModifierKeyMask_rawValue] = v9;
    v52.receiver = v10;
    v52.super_class = v2;
    id v11 = v8;
    id v12 = [(char *)[super init]];
    uint64_t v13 = *(void *)&v12[OBJC_IVAR____TtC8Freeform27CRLTextInputModifierKeyMask_rawValue];
    id v14 = (char *)v11;

    uint64_t v15 = *(void *)&v14[OBJC_IVAR____TtC8Freeform27CRLTextInputModifierKeyMask_rawValue] | v13;
    uint64_t v16 = (char *)objc_allocWithZone(v2);
    *(void *)&v16[OBJC_IVAR____TtC8Freeform27CRLTextInputModifierKeyMask_rawValue] = v15;
    v51.receiver = v16;
    v51.super_class = v2;
    id v5 = [super init];
  }
  if ((a1 & 0x80000) != 0)
  {
    uint64_t v17 = qword_10166F790;
    uint64_t v18 = (char *)v5;
    if (v17 != -1) {
      swift_once();
    }
    id v19 = (void *)qword_10171B620;
    uint64_t v20 = *(void *)&v18[OBJC_IVAR____TtC8Freeform27CRLTextInputModifierKeyMask_rawValue];
    char v21 = (char *)objc_allocWithZone(v2);
    *(void *)&v21[OBJC_IVAR____TtC8Freeform27CRLTextInputModifierKeyMask_rawValue] = v20;
    v54.receiver = v21;
    v54.super_class = v2;
    id v22 = v19;
    id v23 = [(char *)[super init]];
    uint64_t v24 = *(void *)&v23[OBJC_IVAR____TtC8Freeform27CRLTextInputModifierKeyMask_rawValue];
    objc_super v25 = (char *)v22;

    uint64_t v26 = *(void *)&v25[OBJC_IVAR____TtC8Freeform27CRLTextInputModifierKeyMask_rawValue] | v24;
    uint64_t v27 = (char *)objc_allocWithZone(v2);
    *(void *)&v27[OBJC_IVAR____TtC8Freeform27CRLTextInputModifierKeyMask_rawValue] = v26;
    v53.receiver = v27;
    v53.super_class = v2;
    id v5 = [super init];

    if ((a1 & 0x40000) == 0)
    {
LABEL_7:
      if ((a1 & 0x100000) == 0) {
        return v5;
      }
      goto LABEL_15;
    }
  }
  else if ((a1 & 0x40000) == 0)
  {
    goto LABEL_7;
  }
  uint64_t v28 = qword_10166F7A0;
  uint64_t v29 = (char *)v5;
  if (v28 != -1) {
    swift_once();
  }
  objc_super v30 = (void *)qword_10171B630;
  uint64_t v31 = *(void *)&v29[OBJC_IVAR____TtC8Freeform27CRLTextInputModifierKeyMask_rawValue];
  objc_super v32 = (char *)objc_allocWithZone(v2);
  *(void *)&v32[OBJC_IVAR____TtC8Freeform27CRLTextInputModifierKeyMask_rawValue] = v31;
  v56.receiver = v32;
  v56.super_class = v2;
  id v33 = v30;
  uint64_t v34 = (char *)[super init];
  uint64_t v35 = *(void *)&v34[OBJC_IVAR____TtC8Freeform27CRLTextInputModifierKeyMask_rawValue];
  uint64_t v36 = (char *)v33;

  uint64_t v37 = *(void *)&v36[OBJC_IVAR____TtC8Freeform27CRLTextInputModifierKeyMask_rawValue] | v35;
  NSString v38 = (char *)objc_allocWithZone(v2);
  *(void *)&v38[OBJC_IVAR____TtC8Freeform27CRLTextInputModifierKeyMask_rawValue] = v37;
  v55.receiver = v38;
  v55.super_class = v2;
  id v5 = [super init];

  if ((a1 & 0x100000) != 0)
  {
LABEL_15:
    uint64_t v39 = qword_10166F798;
    unint64_t v40 = (char *)v5;
    if (v39 != -1) {
      swift_once();
    }
    unint64_t v41 = (void *)qword_10171B628;
    uint64_t v42 = *(void *)&v40[OBJC_IVAR____TtC8Freeform27CRLTextInputModifierKeyMask_rawValue];
    uint64_t v43 = (char *)objc_allocWithZone(v2);
    *(void *)&v43[OBJC_IVAR____TtC8Freeform27CRLTextInputModifierKeyMask_rawValue] = v42;
    v58.receiver = v43;
    v58.super_class = v2;
    id v44 = v41;
    uint64_t v45 = (char *)[super init];
    uint64_t v46 = *(void *)&v45[OBJC_IVAR____TtC8Freeform27CRLTextInputModifierKeyMask_rawValue];
    unint64_t v47 = (char *)v44;

    uint64_t v48 = *(void *)&v47[OBJC_IVAR____TtC8Freeform27CRLTextInputModifierKeyMask_rawValue] | v46;
    uint64_t v49 = (char *)objc_allocWithZone(v2);
    *(void *)&v49[OBJC_IVAR____TtC8Freeform27CRLTextInputModifierKeyMask_rawValue] = v48;
    v57.receiver = v49;
    v57.super_class = v2;
    [super init];
  }
  return v5;
}

uint64_t sub_100A57768()
{
  sub_100510028(v0 + OBJC_IVAR____TtC8Freeform35CRLFreehandDrawingBucketDatabaseRow_boardIdentifier);
  sub_100510084(*(void *)(v0 + OBJC_IVAR____TtC8Freeform35CRLFreehandDrawingBucketDatabaseRow_bucketData), *(void *)(v0 + OBJC_IVAR____TtC8Freeform35CRLFreehandDrawingBucketDatabaseRow_bucketData + 8));
  sub_100514260(*(void *)(v0 + OBJC_IVAR____TtC8Freeform35CRLFreehandDrawingBucketDatabaseRow_syncData), *(void *)(v0 + OBJC_IVAR____TtC8Freeform35CRLFreehandDrawingBucketDatabaseRow_syncData + 8));
  sub_100514260(*(void *)(v0 + OBJC_IVAR____TtC8Freeform35CRLFreehandDrawingBucketDatabaseRow_ckMergeableRecordValueData), *(void *)(v0 + OBJC_IVAR____TtC8Freeform35CRLFreehandDrawingBucketDatabaseRow_ckMergeableRecordValueData + 8));

  return swift_deallocClassInstance();
}

uint64_t sub_100A57808()
{
  return type metadata accessor for CRLFreehandDrawingBucketDatabaseRow();
}

uint64_t type metadata accessor for CRLFreehandDrawingBucketDatabaseRow()
{
  uint64_t result = qword_10168D508;
  if (!qword_10168D508) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100A5785C()
{
  uint64_t result = type metadata accessor for CRLBoardIdentifierStorage(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLFreehandDrawingBucketUnsyncedChanges()
{
  return &type metadata for CRLFreehandDrawingBucketUnsyncedChanges;
}

unint64_t sub_100A57930()
{
  unint64_t result = qword_10168D620;
  if (!qword_10168D620)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168D620);
  }
  return result;
}

unint64_t sub_100A57988()
{
  unint64_t result = qword_10168D628;
  if (!qword_10168D628)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168D628);
  }
  return result;
}

unint64_t sub_100A579E0()
{
  unint64_t result = qword_10168D630;
  if (!qword_10168D630)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168D630);
  }
  return result;
}

unint64_t sub_100A57A38()
{
  unint64_t result = qword_10168D638;
  if (!qword_10168D638)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168D638);
  }
  return result;
}

uint64_t sub_100A57A8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, long long a10, long long a11, uint64_t a12)
{
  uint64_t v38 = a8;
  uint64_t v40 = a12;
  long long v39 = a11;
  long long v37 = a10;
  uint64_t v35 = a7;
  uint64_t v36 = a9;
  uint64_t v18 = type metadata accessor for CRLBoardIdentifier(0);
  __chkstk_darwin(v18 - 8, v19);
  char v21 = (char *)&v35 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100540CFC(a1, (uint64_t)v21);
  type metadata accessor for CRLFreehandDrawingBucketDatabaseRow();
  uint64_t v22 = swift_allocObject();
  *(_OWORD *)(v22 + OBJC_IVAR____TtC8Freeform35CRLFreehandDrawingBucketDatabaseRow_syncData) = xmmword_101190880;
  *(_OWORD *)(v22 + OBJC_IVAR____TtC8Freeform35CRLFreehandDrawingBucketDatabaseRow_ckMergeableRecordValueData) = xmmword_101190880;
  sub_1005394E4((uint64_t)v21, v22 + OBJC_IVAR____TtC8Freeform35CRLFreehandDrawingBucketDatabaseRow_boardIdentifier);
  *(void *)(v22 + OBJC_IVAR____TtC8Freeform35CRLFreehandDrawingBucketDatabaseRow_bucketIndex) = a2;
  id v23 = (void *)(v22 + OBJC_IVAR____TtC8Freeform35CRLFreehandDrawingBucketDatabaseRow_bucketData);
  void *v23 = a3;
  v23[1] = a4;
  *(void *)(v22 + OBJC_IVAR____TtC8Freeform35CRLFreehandDrawingBucketDatabaseRow_unsyncedChanges) = a5;
  uint64_t v24 = (void *)(v22 + OBJC_IVAR____TtC8Freeform35CRLFreehandDrawingBucketDatabaseRow_syncData);
  uint64_t v25 = *(void *)(v22 + OBJC_IVAR____TtC8Freeform35CRLFreehandDrawingBucketDatabaseRow_syncData);
  unint64_t v26 = *(void *)(v22 + OBJC_IVAR____TtC8Freeform35CRLFreehandDrawingBucketDatabaseRow_syncData + 8);
  uint64_t v27 = v35;
  *uint64_t v24 = a6;
  v24[1] = v27;
  sub_100514260(v25, v26);
  uint64_t v28 = (void *)(v22 + OBJC_IVAR____TtC8Freeform35CRLFreehandDrawingBucketDatabaseRow_ckMergeableRecordValueData);
  uint64_t v29 = *(void *)(v22 + OBJC_IVAR____TtC8Freeform35CRLFreehandDrawingBucketDatabaseRow_ckMergeableRecordValueData);
  unint64_t v30 = *(void *)(v22 + OBJC_IVAR____TtC8Freeform35CRLFreehandDrawingBucketDatabaseRow_ckMergeableRecordValueData + 8);
  uint64_t v31 = v36;
  *uint64_t v28 = v38;
  v28[1] = v31;
  sub_100514260(v29, v30);
  uint64_t v32 = v22 + OBJC_IVAR____TtC8Freeform35CRLFreehandDrawingBucketDatabaseRow_minRequiredVersions;
  long long v33 = v39;
  *(_OWORD *)uint64_t v32 = v37;
  *(_OWORD *)(v32 + 16) = v33;
  *(void *)(v32 + 32) = v40;
  sub_100510028(a1);
  return v22;
}

void sub_100A57C30(void *a1)
{
  type metadata accessor for CRLBoardItem(0);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  [a1 setTemporaryAdditionalBoardItemsToDisplay:isa];
}

id sub_100A57E30()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLShapeLibraryPopoverHelper();
  return [super dealloc];
}

uint64_t type metadata accessor for CRLShapeLibraryPopoverHelper()
{
  return self;
}

void sub_100A57E88(void *a1, uint64_t a2, void *a3)
{
  uint64_t v92 = a2;
  uint64_t v5 = sub_1005057FC((uint64_t *)&unk_101674610);
  __chkstk_darwin(v5 - 8, v6);
  uint64_t v105 = (char *)&v90 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v104 = type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData(0);
  __chkstk_darwin(v104, v8);
  uint64_t v96 = (char *)&v90 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&double v12 = __chkstk_darwin(v10, v11).n128_u64[0];
  uint64_t v97 = (char *)&v90 - v13;
  id v93 = a1;
  id v14 = [a1 allShapeItems:v12];
  type metadata accessor for CRLShapeItem();
  unint64_t v15 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v15 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v16 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v16 = *(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  if (!v16 || (uint64_t v17 = (char *)[a3 editingCoordinator]) == 0)
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"changeShape(forEditor:shapePathSource:interactiveCanvasController:)", 67, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/CRLShapeLibraryPopoverHelper.swift", 104, 2, 45, (uint64_t)"Could not create a temporary board item for the animation.", 58, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"changeShape(forEditor:shapePathSource:interactiveCanvasController:)", 67, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/CRLShapeLibraryPopoverHelper.swift", 104, 2, 45);
    uint64_t v77 = v92;
    id v76 = v93;
    [v76 changeShapeToUsePathSource:v77];
    return;
  }
  uint64_t v18 = v17;
  id v103 = *(id *)&v17[OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_boardItemFactory];

  unint64_t v120 = (unint64_t)_swiftEmptyArrayStorage;
  unint64_t v121 = (unint64_t)_swiftEmptyArrayStorage;
  id v19 = [v93 allShapeItems];
  unint64_t v20 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  unint64_t v112 = v20;
  if (v20 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v21 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v21) {
      goto LABEL_7;
    }
LABEL_37:
    swift_bridgeObjectRelease();
    unint64_t v78 = (unint64_t)_swiftEmptyArrayStorage;
LABEL_38:
    [v93 changeShapeToUsePathSource:v92];
    if (v78 >> 62)
    {
      type metadata accessor for CRLBoardItem(0);
      swift_bridgeObjectRetain();
      _bridgeCocoaArray<A>(_:)();
    }
    else
    {
      swift_bridgeObjectRetain_n();
      dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
      type metadata accessor for CRLBoardItem(0);
    }
    swift_bridgeObjectRelease();
    type metadata accessor for CRLBoardItem(0);
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [a3 setTemporaryAdditionalBoardItemsToDisplay:isa];

    unint64_t v80 = (double *)v121;
    if (v121 >> 62)
    {
      swift_bridgeObjectRetain();
      sub_1005057FC(&qword_101673060);
      uint64_t v81 = _bridgeCocoaArray<A>(_:)();
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRetain();
      dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
      uint64_t v81 = (uint64_t)v80;
    }
    swift_bridgeObjectRelease();
    double v82 = (double *)v120;
    if (v120 >> 62)
    {
      swift_bridgeObjectRetain();
      sub_1005057FC(&qword_101673060);
      uint64_t v83 = _bridgeCocoaArray<A>(_:)();
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRetain();
      dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
      uint64_t v83 = (uint64_t)v82;
    }
    swift_bridgeObjectRelease();
    uint64_t v84 = swift_allocObject();
    *(void *)(v84 + 16) = a3;
    id v85 = a3;
    id v86 = [v85 canvas];
    uint64_t v87 = (void *)swift_allocObject();
    v87[2] = v81;
    id v87[3] = v85;
    v87[4] = v83;
    v87[5] = sub_100A596C0;
    v87[6] = v84;
    long long v117 = sub_1008612C0;
    long long v118 = v87;
    uint64_t v113 = _NSConcreteStackBlock;
    uint64_t v114 = *(void *)"";
    long long v115 = sub_100679958;
    uint64_t v116 = &unk_10151F620;
    uint64_t v88 = _Block_copy(&v113);
    id v89 = v85;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_release();
    [v86 afterLayoutIncludingLayers:1 performBlock:v88];
    _Block_release(v88);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();

    return;
  }
  uint64_t v21 = *(void *)((v112 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v21) {
    goto LABEL_37;
  }
LABEL_7:
  uint64_t v91 = a3;
  if (v21 >= 1)
  {
    uint64_t v22 = 0;
    unint64_t v23 = v112 & 0xC000000000000001;
    unint64_t v101 = v112 & 0xC000000000000001;
    uint64_t v102 = v21;
    do
    {
      if (v23) {
        uint64_t v24 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        uint64_t v24 = *(id *)(v112 + 8 * v22 + 32);
      }
      uint64_t v25 = v24;
      if ((*(uint64_t (**)(void))((swift_isaMask & *v24) + 0x530))())
      {
        uint64_t v111 = (void *)(*(uint64_t (**)(void))((swift_isaMask & *v25) + 0x478))();
        unint64_t v26 = *(uint64_t (**)(void))((swift_isaMask & *v25) + 0xE0);
        uint64_t v27 = v25;
        uint64_t v28 = (void *)v26();

        [v28 position];
        uint64_t v30 = v29;
        uint64_t v32 = v31;

        long long v33 = v27;
        uint64_t v34 = (void *)v26();

        [v34 angle];
        uint64_t v36 = v35;

        long long v37 = *(uint64_t (**)(void))((swift_isaMask & *v33) + 0x420);
        uint64_t v38 = v33;
        uint64_t v110 = (void *)v37();

        CGRect v109 = (void *)sub_100A9B204();
        uint64_t v39 = (swift_isaMask & *v38) + 1216;
        uint64_t v40 = *(uint64_t (**)(void))((swift_isaMask & *v38) + 0x4C0);
        if (v40())
        {
          id v107 = 0;
        }
        else
        {
          uint64_t v100 = v39;
          uint64_t v41 = **(void **)((char *)v38 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
          uint64_t v42 = swift_conformsToProtocol2();
          if (!v42) {
            goto LABEL_49;
          }
          uint64_t v43 = v42;
          id v44 = *(void (**)(uint64_t, uint64_t))(v42 + 16);
          swift_retain();
          uint64_t v45 = (uint64_t)v97;
          v44(v41, v43);
          swift_release();
          sub_1005057FC((uint64_t *)&unk_10168A0D0);
          CRRegister.wrappedValue.getter();
          uint64_t v46 = (uint64_t)v113;
          uint64_t v47 = v114;
          uint64_t v48 = (uint64_t)v115;
          uint64_t v49 = (uint64_t)v116;
          uint64_t v50 = (uint64_t)v118;
          uint64_t v98 = v119;
          id v99 = v117;
          sub_100A59730(v45);
          if (v50)
          {
            v131[0] = v46;
            v131[1] = v47;
            uint64_t v95 = v47;
            char v132 = v48 & 1;
            int v133 = HIDWORD(v48);
            int v134 = v49;
            char v135 = BYTE4(v49) & 1;
            uint64_t v51 = (uint64_t)v99;
            char v136 = v99;
            uint64_t v137 = v50;
            uint64_t v138 = v98;
            sub_100531444();
            uint64_t v94 = v46;
            id v107 = sub_10089D008((uint64_t)v131);
            sub_10051AC38(v94, v95, v48, v49, v51, v50);
          }
          else
          {
            id v107 = 0;
          }
        }
        char v52 = v40();
        id v108 = v38;
        uint64_t v106 = v22;
        if (v52) {
          goto LABEL_25;
        }
        uint64_t v53 = **(void **)((char *)v38 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
        uint64_t v54 = swift_conformsToProtocol2();
        if (!v54) {
          goto LABEL_50;
        }
        uint64_t v55 = v54;
        objc_super v56 = *(void (**)(uint64_t, uint64_t))(v54 + 16);
        swift_retain();
        uint64_t v57 = (uint64_t)v96;
        v56(v53, v55);
        swift_release();
        sub_1005057FC((uint64_t *)&unk_10168A0D0);
        CRRegister.wrappedValue.getter();
        uint64_t v58 = (uint64_t)v113;
        uint64_t v59 = v114;
        uint64_t v60 = (uint64_t)v115;
        uint64_t v61 = (uint64_t)v116;
        unsigned int v63 = v117;
        uint64_t v62 = (uint64_t)v118;
        uint64_t v100 = v119;
        sub_100A59730(v57);
        if (!v62)
        {
LABEL_25:
          uint64_t v66 = 0;
        }
        else
        {
          v123[0] = v58;
          v123[1] = v59;
          char v124 = v60 & 1;
          int v125 = HIDWORD(v60);
          int v126 = v61;
          char v127 = BYTE4(v61) & 1;
          uint64_t v128 = v63;
          uint64_t v129 = v62;
          uint64_t v130 = v100;
          sub_100531444();
          id v64 = sub_10089D008((uint64_t)v123);
          uint64_t v65 = (uint64_t)v63;
          uint64_t v66 = v64;
          sub_10051AC38(v58, v59, v60, v61, v65, v62);
        }
        uint64_t v67 = type metadata accessor for CRLWPStorageCRDTData(0);
        objc_super v68 = v105;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v67 - 8) + 56))(v105, 1, 1, v67);
        sub_1005C6DF0((uint64_t)&v113);
        sub_100A5978C((uint64_t)&v113, (uint64_t)v122);
        uint64_t v69 = v107;
        uint64_t v70 = v109;
        uint64_t v71 = v110;
        uint64_t v72 = v111;
        id v73 = sub_100F40DC0(3, 0, (uint64_t)v111, 1, v30, v32, 0, v36, 0, v110, v109, v107, v66, 0, v68, v122, 0, 0, 0);
        sub_100A597F4((uint64_t)v68);

        id v74 = v73;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)((v121 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v121 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
        id v75 = v108;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        uint64_t v22 = v106;
        if (*(void *)((v120 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v120 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();

        unint64_t v23 = v101;
        uint64_t v21 = v102;
      }
      else
      {
      }
      ++v22;
    }
    while (v21 != v22);
    swift_bridgeObjectRelease();
    unint64_t v78 = v121;
    a3 = v91;
    goto LABEL_38;
  }
  __break(1u);
LABEL_49:
  __break(1u);
LABEL_50:
  __break(1u);
}

void sub_100A58B10(void *a1)
{
  id v2 = [a1 interactiveCanvasController];
  if (!v2) {
    return;
  }
  id v57 = v2;
  id v3 = [v2 layerHost];
  if (!v3) {
    goto LABEL_26;
  }
  id v4 = v3;
  if ([v3 respondsToSelector:"asiOSCVC"])
  {
    id v56 = [v4 asiOSCVC];
    swift_unknownObjectRelease();
    id v5 = [v57 editorController];
    if (v5
      && (uint64_t v6 = v5, v7 = [v5 selectionPath], v6, v7))
    {
      id v54 = v7;
      id v8 = [v57 infosForSelectionPath:v54];
      uint64_t v9 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v10 = sub_1006B99BC(v9);
      swift_bridgeObjectRelease();
      uint64_t v11 = sub_10065C080((uint64_t)v10);

      swift_release();
      if (v11)
      {
        id v57 = v57;
        double v12 = sub_100668568((unint64_t)v11, v57);
        swift_bridgeObjectRelease();

        uint64_t v13 = sub_100CDCFF0((unint64_t)v12);
        swift_bridgeObjectRelease();
        double v14 = sub_100A4A098(v13);
        double v16 = v15;
        double v18 = v17;
        double v20 = v19;
        swift_bridgeObjectRelease();
        [v57 convertUnscaledToBoundsRect:v14, v16, v18, v20];
        CGFloat v22 = v21;
        CGFloat v53 = v24;
        CGFloat v55 = v23;
        CGFloat r1 = v25;
        double v26 = sub_100065738(v23, v24, v25, v21);
        double v28 = v27;
        [v57 visibleScaledRectForCanvasUI];
        CGFloat x = v60.origin.x;
        CGFloat y = v60.origin.y;
        CGFloat width = v60.size.width;
        CGFloat height = v60.size.height;
        double v33 = v26;
        v59.CGFloat x = v26;
        v59.CGFloat y = v28;
        if (!CGRectContainsPoint(v60, v59))
        {
          v61.origin.CGFloat y = v53;
          v61.origin.CGFloat x = v55;
          v61.size.CGFloat width = r1;
          v61.size.CGFloat height = v22;
          v63.origin.CGFloat x = x;
          v63.origin.CGFloat y = y;
          v63.size.CGFloat width = width;
          v63.size.CGFloat height = height;
          CGRect v62 = CGRectIntersection(v61, v63);
          CGFloat v34 = v62.origin.x;
          CGFloat v35 = v62.origin.y;
          CGFloat v36 = v62.size.width;
          CGFloat v37 = v62.size.height;
          if (CGRectIsNull(v62))
          {
            [v56 lastTapPoint];
            [v57 convertUnscaledToBoundsPoint:];
          }
          else
          {
            double v38 = sub_100065738(v34, v35, v36, v37);
          }
          double v33 = v38;
          double v28 = v39;
        }
        id v41 = [objc_allocWithZone((Class)CRLiOSShapeLibraryViewController) initWithDelegate:v56 shouldChangeSelectedShapes:1];
        id v42 = [a1 boardItems];
        type metadata accessor for CRLBoardItem(0);
        sub_10060A334();
        static Set._unconditionallyBridgeFromObjectiveC(_:)();

        Class isa = Set._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease();
        [v41 setAssociatedBoardItems:isa];

        [v41 setShowLinesInLibrary:0];
        [v41 setModalPresentationStyle:7];
        id v44 = [v41 popoverPresentationController];
        if (v44)
        {
          uint64_t v45 = v44;
          id v46 = [v56 canvasView];
          [v45 setSourceView:v46];
        }
        id v47 = [v41 popoverPresentationController:&r1, &v53];
        if (v47)
        {
          uint64_t v48 = v47;
          [v47 setSourceRect:v33, v28, 1.0, 1.0];
        }
        id v49 = [v41 popoverPresentationController];
        [v49 setCanOverlapSourceViewRect:1];

        [v56 presentViewController:v41 animated:1 completion:0];
        id v50 = [v57 layerHost];
        if (v50
          && (id v51 = [v50 miniFormatterPresenter],
              swift_unknownObjectRelease(),
              v51))
        {
          [v51 dismissMiniFormatter];

          swift_unknownObjectRelease();
        }
        else
        {
        }
LABEL_26:
        uint64_t v40 = v57;
        goto LABEL_27;
      }

      uint64_t v40 = v54;
    }
    else
    {

      uint64_t v40 = v56;
    }
LABEL_27:

    return;
  }

  swift_unknownObjectRelease();
}

void sub_100A590A0(void *a1, double a2, double a3)
{
  id v6 = [a1 interactiveCanvasController];
  if (!v6) {
    return;
  }
  id v41 = v6;
  id v7 = [v6 layerHost];
  if (!v7)
  {
    double v16 = v41;
LABEL_13:

    return;
  }
  id v8 = v7;
  if ([v7 respondsToSelector:"asiOSCVC"])
  {
    id v40 = [v8 asiOSCVC];
    swift_unknownObjectRelease();
    id v9 = [a1 anyConnectionLine];
    id v10 = [v9 connectionLineInfo];

    if (v10)
    {
      sub_1005057FC((uint64_t *)&unk_101676C10);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_101177E70;
      *(void *)(inited + 32) = v10;
      unint64_t v43 = inited;
      specialized Array._endMutation()();
      if (v43 >> 62)
      {
        id v17 = v10;
        swift_bridgeObjectRetain();
        uint64_t v18 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        if (v18) {
          goto LABEL_7;
        }
      }
      else
      {
        uint64_t v12 = *(void *)((v43 & 0xFFFFFFFFFFFFFF8) + 0x10);
        id v13 = v10;
        if (v12)
        {
LABEL_7:
          sub_100508DCC(v43);
          double v15 = v14;
          goto LABEL_18;
        }
      }
      double v15 = &_swiftEmptySetSingleton;
LABEL_18:
      swift_bridgeObjectRelease();
      unint64_t v43 = (unint64_t)v15;
      id v19 = [v41 layoutForInfo:v10];
      if (v19)
      {
        double v20 = v19;
        self;
        CGFloat v21 = (void *)swift_dynamicCastObjCClass();
        if (v21)
        {
          id v22 = [v21 connectedFrom];
          if (!v22)
          {
            __break(1u);
            return;
          }
          CGFloat v23 = v22;
          id v24 = [v22 info];

          if (v24)
          {
            type metadata accessor for CRLBoardItem(0);
            uint64_t v25 = swift_dynamicCastClass();
            if (v25)
            {
              double v26 = (void *)v25;
              swift_unknownObjectRetain();
              sub_100CB7040(&v42, v26);
              swift_unknownObjectRelease();

              goto LABEL_26;
            }
            swift_unknownObjectRelease();
          }
        }
      }
LABEL_26:
      id v27 = [objc_allocWithZone((Class)CRLiOSShapeLibraryViewController) initWithDelegate:v40 unscaledPopoverAnchorPoint:a2];
      type metadata accessor for CRLBoardItem(0);
      sub_10060A334();
      Class isa = Set._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      [v27 setAssociatedBoardItems:isa];

      [v27 setShowLinesInLibrary:0];
      [v27 setModalPresentationStyle:7];
      id v29 = [v27 popoverPresentationController];
      if (v29)
      {
        uint64_t v30 = v29;
        id v31 = [v40 canvasView];
        [v30 setSourceView:v31];
      }
      [v41 convertUnscaledToBoundsPoint:a2, a3];
      double v33 = v32;
      double v35 = v34;
      id v36 = [v27 popoverPresentationController];
      if (v36)
      {
        CGFloat v37 = v36;
        [v36 setSourceRect:v33, v35, 1.0, 1.0];
      }
      id v38 = [v27 popoverPresentationController];
      if (v38)
      {
        double v39 = v38;
        [v38 setCanOverlapSourceViewRect:1];
      }
      [v40 presentViewController:v27 animated:1 completion:0];

      return;
    }

    double v16 = v40;
    goto LABEL_13;
  }

  swift_unknownObjectRelease();
}

void sub_100A59534(void *a1)
{
  if (!a1) {
    return;
  }
  id v1 = [a1 interactiveCanvasController];
  if (!v1) {
    return;
  }
  id v8 = v1;
  id v2 = [v1 layerHost];
  if (!v2) {
    goto LABEL_11;
  }
  id v3 = v2;
  if ([v2 respondsToSelector:"asiOSCVC"])
  {
    id v4 = [v3 asiOSCVC];
    swift_unknownObjectRelease();
    id v5 = [v4 presentedViewController];
    if (v5)
    {
      id v6 = v5;
      self;
      id v7 = (void *)swift_dynamicCastObjCClass();
      if (v7 && ([v7 isBeingDismissed] & 1) == 0) {
        [v4 dismissViewControllerAnimated:1 completion:0];
      }
    }
LABEL_11:

    return;
  }

  swift_unknownObjectRelease();
}

uint64_t sub_100A59688()
{
  return _swift_deallocObject(v0, 24, 7);
}

void sub_100A596C0()
{
  sub_100A57C30(*(void **)(v0 + 16));
}

uint64_t sub_100A596C8()
{
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_100A59718(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100A59728()
{
  return swift_release();
}

uint64_t sub_100A59730(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100A5978C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1005057FC(&qword_10168D670);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100A597F4(uint64_t a1)
{
  uint64_t v2 = sub_1005057FC((uint64_t *)&unk_101674610);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

id sub_100A599C0()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLFollowBorderHighlightView();
  return [super dealloc];
}

uint64_t type metadata accessor for CRLFollowBorderHighlightView()
{
  return self;
}

void sub_100A59A64()
{
  id v1 = [*(id *)&v0[OBJC_IVAR____TtC8Freeform28CRLFollowBorderHighlightView_color] UIColor];
  [v1 set];

  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    [Strong rectForBorder];
    uint64_t v4 = v3;
    uint64_t v6 = v5;
    uint64_t v8 = v7;
    uint64_t v10 = v9;
    swift_unknownObjectRelease();
    uint64_t v11 = &v0[OBJC_IVAR____TtC8Freeform28CRLFollowBorderHighlightView_canvasRect];
    *(void *)uint64_t v11 = v4;
    *((void *)v11 + 1) = v6;
    *((void *)v11 + 2) = v8;
    *((void *)v11 + 3) = v10;
  }
  uint64_t v12 = (double *)&v0[OBJC_IVAR____TtC8Freeform28CRLFollowBorderHighlightView_canvasRect];
  double v13 = *(double *)&v0[OBJC_IVAR____TtC8Freeform28CRLFollowBorderHighlightView_canvasRect];
  double v14 = *(double *)&v0[OBJC_IVAR____TtC8Freeform28CRLFollowBorderHighlightView_canvasRect + 8];
  double v15 = *(double *)&v0[OBJC_IVAR____TtC8Freeform28CRLFollowBorderHighlightView_canvasRect + 16];
  double v16 = *(double *)&v0[OBJC_IVAR____TtC8Freeform28CRLFollowBorderHighlightView_canvasRect + 24];
  id v17 = self;
  id v18 = [v17 bezierPathWithRect:v13, v14, v15, v16];
  double v19 = *v12;
  double v20 = v12[1];
  double v21 = v12[2];
  double v22 = v12[3];
  double v23 = *(double *)&v0[OBJC_IVAR____TtC8Freeform28CRLFollowBorderHighlightView_width];
  double v24 = sub_100067CF8(v23);
  double v26 = sub_100A4A174(v19, v20, v21, v22, v24, v25);
  double v28 = v27;
  double v30 = v29;
  double v32 = v31;
  double v33 = (void *)swift_unknownObjectWeakLoadStrong();
  double v34 = 16.0;
  double v35 = 16.0;
  if (v33)
  {
    id v36 = v33;
    if ([v33 isPresentingCompactScenesNavigator]
      && (objc_msgSend(self, "crl_phoneUI") & 1) != 0)
    {
      [v36 displayCornerRadius];
      double v38 = v37;
      swift_unknownObjectRelease();
      double v35 = v38 - v23;
    }
    else
    {
      swift_unknownObjectRelease();
    }
  }
  double v39 = (void *)swift_unknownObjectWeakLoadStrong();
  if (v39)
  {
    id v40 = v39;
    if ([v39 isPresentingCompactScenesNavigator]
      && (objc_msgSend(self, "crl_phoneUI") & 1) != 0)
    {
      [v40 displayCornerRadius];
      double v42 = v41;
      swift_unknownObjectRelease();
      double v34 = v42 - v23;
    }
    else
    {
      swift_unknownObjectRelease();
    }
  }
  id v43 = [v17 bezierPathWithRoundedRect:0 upperRightRadius:0 lowerRightRadius:v26 lowerLeftRadius:v28 upperLeftRadius:v30 useLegacyCorners:16.0 keepNoOpElements:v35];
  if (v18) {
    id v44 = [v18 subtractBezierPath:v43];
  }
  else {
    id v44 = 0;
  }
  id v45 = v44;
  [v44 fill];
  [v0 setIsAccessibilityElement:0];
}

void *sub_100A59D64(void *a1)
{
  objc_super v2 = v1;
  double v22 = a1;
  uint64_t v21 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
  uint64_t v3 = *(void *)(v21 - 8);
  __chkstk_darwin(v21, v4);
  uint64_t v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for OS_dispatch_queue.Attributes();
  __chkstk_darwin(v7, v8);
  uint64_t v9 = type metadata accessor for DispatchQoS();
  __chkstk_darwin(v9 - 8, v10);
  sub_100656064();
  static DispatchQoS.unspecified.getter();
  *(void *)flags = _swiftEmptyArrayStorage;
  sub_100A5AAD0();
  sub_1005057FC(&qword_101693440);
  sub_100A5AB28();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v6, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v21);
  uint64_t v11 = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
  v1[4] = 0;
  v1[5] = 0;
  v1[7] = 0;
  v1[8] = 0;
  v1[6] = 1;
  uint64_t v12 = v22;
  v1[2] = v22;
  v1[3] = v11;
  flags[0] = 0;
  id v13 = v12;
  if (SCNetworkReachabilityGetFlags((SCNetworkReachabilityRef)v13, flags))
  {
    char v14 = flags[0];
    sub_1005057FC(&qword_10168D888);
    swift_allocObject();
    v1[9] = CurrentValueSubject.init(_:)();
    LOBYTE(flags[0]) = (v14 & 2) != 0;
    sub_1005057FC(&qword_1016791E8);
    swift_allocObject();
    uint64_t v15 = CurrentValueSubject.init(_:)();

    v2[10] = v15;
  }
  else
  {
    if (qword_10166FA30 != -1) {
      swift_once();
    }
    swift_beginAccess();
    id v16 = (id)static OS_os_log.crlNetworkReachability;
    uint64_t v17 = static os_log_type_t.error.getter();
    sub_100BAC898((uint64_t)v16, (uint64_t)&_mh_execute_header, v17, (uint64_t)"Failed to retrieve flags from network reachability listener.", 60, 2, (uint64_t)_swiftEmptyArrayStorage);

    sub_10067900C();
    swift_allocError();
    *id v18 = 0;
    swift_willThrow();

    type metadata accessor for CRLNetworkReachabilityListener();
    swift_deallocPartialClassInstance();
  }
  return v2;
}

uint64_t sub_100A5A11C()
{
  if (*(void *)(v0 + 48) != 1)
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"deinit", 6, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLUtility/CRLNetworkReachabilityListener.swift", 101, 2, 63, (uint64_t)"CRLNetworkReachabilityListener.stop() was not called. CRLNetworkReachabilityListenerContextInfo will leak.", 106, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"deinit", 6, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLUtility/CRLNetworkReachabilityListener.swift", 101, 2, 63);
  }

  swift_release();
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for CRLNetworkReachabilityListener()
{
  return self;
}

uint64_t sub_100A5A24C(uint64_t result)
{
  id v1 = (void *)(result + 48);
  if (*(void *)(result + 48) != 1) {
    return result;
  }
  objc_super v2 = (void *)result;
  uint64_t v3 = *(const __SCNetworkReachability **)(result + 16);
  if (SCNetworkReachabilitySetDispatchQueue(v3, *(dispatch_queue_t *)(result + 24)))
  {
    type metadata accessor for CRLNetworkReachabilityListenerContextInfo();
    uint64_t v4 = (void *)swift_allocObject();
    swift_weakInit();
    swift_weakAssign();
    context.version = 0;
    context.info = v4;
    memset(&context.retain, 0, 24);
    v2[4] = 0;
    v2[5] = v4;
    v1[1] = 0;
    v1[2] = 0;
    *id v1 = 0;
    swift_retain();
    if (SCNetworkReachabilitySetCallback(v3, (SCNetworkReachabilityCallBack)sub_100A5A5B8, &context))
    {
      flags[0] = 0;
      if (SCNetworkReachabilityGetFlags(v3, flags))
      {
        sub_100A5A948(flags[0]);
      }
      else
      {
        if (qword_10166FA30 != -1) {
          swift_once();
        }
        swift_beginAccess();
        id v11 = (id)static OS_os_log.crlNetworkReachability;
        uint64_t v12 = static os_log_type_t.error.getter();
        sub_100BAC898((uint64_t)v11, (uint64_t)&_mh_execute_header, v12, (uint64_t)"Failed to retrieve flags from network reachability listener.", 60, 2, (uint64_t)_swiftEmptyArrayStorage);
      }
      return swift_release();
    }
    if (qword_10166FA30 != -1) {
      swift_once();
    }
    swift_beginAccess();
    id v8 = (id)static OS_os_log.crlNetworkReachability;
    uint64_t v9 = static os_log_type_t.error.getter();
    sub_100BAC898((uint64_t)v8, (uint64_t)&_mh_execute_header, v9, (uint64_t)"Failed to set callback for network reachability listener.", 57, 2, (uint64_t)_swiftEmptyArrayStorage);

    sub_10067900C();
    swift_allocError();
    *uint64_t v10 = 1;
    swift_willThrow();
    swift_release();
  }
  else
  {
    if (qword_10166FA30 != -1) {
      swift_once();
    }
    swift_beginAccess();
    id v5 = (id)static OS_os_log.crlNetworkReachability;
    uint64_t v6 = static os_log_type_t.error.getter();
    sub_100BAC898((uint64_t)v5, (uint64_t)&_mh_execute_header, v6, (uint64_t)"Failed to set target queue for network reachability listener.", 61, 2, (uint64_t)_swiftEmptyArrayStorage);

    sub_10067900C();
    swift_allocError();
    *uint64_t v7 = 1;
    swift_willThrow();
  }
  if (v2[6] != 1)
  {
    if (v2[5]) {
      swift_release();
    }
    *(v1 - 2) = 0;
    *(v1 - 1) = 0;
    *id v1 = 1;
    v1[1] = 0;
    v1[2] = 0;
  }
  return swift_willThrow();
}

uint64_t sub_100A5A5B8(uint64_t result, int a2, uint64_t a3)
{
  if (a3)
  {
    uint64_t v4 = (void *)result;
    swift_retain();
    if (swift_weakLoadStrong())
    {
      id v5 = v4;
      sub_100A5A948(a2);

      swift_release();
    }
    return swift_release();
  }
  return result;
}

void sub_100A5A640(void *a1)
{
  if (a1[6] != 1)
  {
    uint64_t v2 = a1[5];
    uint64_t v3 = (const __SCNetworkReachability *)a1[2];
    if (SCNetworkReachabilitySetCallback(v3, 0, 0))
    {
      if (v2) {
        swift_release();
      }
      a1[4] = 0;
      a1[5] = 0;
      a1[6] = 1;
      a1[7] = 0;
      a1[8] = 0;
      if (!SCNetworkReachabilitySetDispatchQueue(v3, 0))
      {
        if (qword_10166FA30 != -1) {
          swift_once();
        }
        swift_beginAccess();
        id v4 = (id)static OS_os_log.crlNetworkReachability;
        uint64_t v5 = static os_log_type_t.error.getter();
        sub_100BAC898((uint64_t)v4, (uint64_t)&_mh_execute_header, v5, (uint64_t)"Failed to clear target queue for network reachability listener.", 63, 2, (uint64_t)_swiftEmptyArrayStorage);
      }
    }
    else
    {
      if (qword_10166FA30 != -1) {
        swift_once();
      }
      swift_beginAccess();
      id v6 = (id)static OS_os_log.crlNetworkReachability;
      uint64_t v7 = static os_log_type_t.error.getter();
      sub_100BAC898((uint64_t)v6, (uint64_t)&_mh_execute_header, v7, (uint64_t)"Failed to clear callback for network reachability listener.", 59, 2, (uint64_t)_swiftEmptyArrayStorage);

      sub_10067900C();
      swift_allocError();
      *id v8 = 2;
      swift_willThrow();
    }
  }
}

uint64_t sub_100A5A828@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  if (*(void *)(a1 + 48) != 1)
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"isReachablePublisher", 20, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLUtility/CRLNetworkReachabilityListener.swift", 101, 2, 148, (uint64_t)"Cannot access publisher once started.", 37, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"isReachablePublisher", 20, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLUtility/CRLNetworkReachabilityListener.swift", 101, 2, 148);
  }
  *a2 = *(void *)(a1 + 80);
  return swift_retain();
}

uint64_t sub_100A5A91C()
{
  return CurrentValueSubject.value.getter();
}

uint64_t sub_100A5A948(int a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for DispatchPredicate();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4, v6);
  id v8 = &v13[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = *(void **)(v2 + 24);
  *id v8 = v9;
  (*(void (**)(void *, void, uint64_t))(v5 + 104))(v8, enum case for DispatchPredicate.onQueue(_:), v4);
  id v10 = v9;
  LOBYTE(v9) = _dispatchPreconditionTest(_:)();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v5 + 8))(v8, v4);
  if (v9)
  {
    CurrentValueSubject.value.getter();
    if (v15 != a1)
    {
      int v14 = a1;
      CurrentValueSubject.value.setter();
    }
    unsigned int v12 = a1 & 2;
    uint64_t result = CurrentValueSubject.value.getter();
    if (v13[7] != v12 >> 1)
    {
      v13[6] = v12 >> 1;
      return CurrentValueSubject.value.setter();
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t type metadata accessor for CRLNetworkReachabilityListenerContextInfo()
{
  return self;
}

unint64_t sub_100A5AAD0()
{
  unint64_t result = qword_101676560;
  if (!qword_101676560)
  {
    type metadata accessor for OS_dispatch_queue.Attributes();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101676560);
  }
  return result;
}

unint64_t sub_100A5AB28()
{
  unint64_t result = qword_101676568;
  if (!qword_101676568)
  {
    sub_100522D34(&qword_101693440);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101676568);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for CRLNetworkReachabilityListenerError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100A5AC50);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLNetworkReachabilityListenerError()
{
  return &type metadata for CRLNetworkReachabilityListenerError;
}

unint64_t sub_100A5AC8C()
{
  unint64_t result = qword_10168D890;
  if (!qword_10168D890)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168D890);
  }
  return result;
}

uint64_t sub_100A5AE04@<X0>(char *a1@<X8>)
{
  uint64_t v3 = type metadata accessor for CRLFileItemAtomicDataStruct(0);
  __chkstk_darwin(v3 - 8, v4);
  unsigned int v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for CRLAssetData();
  __chkstk_darwin(v7 - 8, v8);
  id v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  swift_retain();
  sub_1005057FC(&qword_101685450);
  CRRegister.wrappedValue.getter();
  swift_endAccess();
  swift_release();
  sub_100A5E810((uint64_t)v6, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
  sub_100A5E878((uint64_t)v6, type metadata accessor for CRLFileItemAtomicDataStruct);
  id v11 = *(char **)(v1 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_store);
  uint64_t v12 = *(void *)&v11[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManagerLock];
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v12 + 16));
  uint64_t v13 = OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManager;
  int v14 = *(void **)&v11[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManager];
  if (v14)
  {
    id v15 = *(id *)&v11[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManager];
  }
  else
  {
    id v16 = objc_allocWithZone((Class)type metadata accessor for CRLAssetFileManager());
    uint64_t v17 = v11;
    id v18 = sub_100EAFDE4((uint64_t)v17);

    double v19 = *(void **)&v11[v13];
    *(void *)&v11[v13] = v18;
    id v15 = v18;

    int v14 = 0;
  }
  uint64_t v20 = *(os_unfair_lock_s **)(v12 + 16);
  id v21 = v14;
  os_unfair_lock_unlock(v20);
  sub_100EA7CA0((uint64_t)v10, 0, 3, 0, 0, a1);

  return sub_100A5E878((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
}

Class sub_100A5B0AC()
{
  uint64_t v1 = v0;
  uint64_t v57 = type metadata accessor for CRLFileItemAtomicDataStruct(0);
  __chkstk_darwin(v57, v2);
  uint64_t v4 = (char *)&v53 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for CRLAssetData();
  __chkstk_darwin(v5 - 8, v6);
  uint64_t v8 = (char *)&v53 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9, v10);
  uint64_t v12 = (char *)&v53 - v11;
  uint64_t v13 = type metadata accessor for UUID();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13, v15);
  uint64_t v17 = (char *)&v53 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18, v19);
  double v22 = (char *)&v53 - v21;
  uint64_t v23 = OBJC_IVAR____TtC8Freeform11CRLFileItem__metadataPayload;
  double v24 = *(char **)&v1[OBJC_IVAR____TtC8Freeform11CRLFileItem__metadataPayload];
  if (v24)
  {
    CGFloat v53 = v4;
    uint64_t v26 = *(void *)&v24[OBJC_IVAR____TtC8Freeform8CRLAsset_storage + 24];
    uint64_t v25 = *(void *)&v24[OBJC_IVAR____TtC8Freeform8CRLAsset_storage + 32];
    CGFloat v55 = v20;
    sub_10050F848(&v24[OBJC_IVAR____TtC8Freeform8CRLAsset_storage], v26);
    id v54 = v12;
    double v27 = *(void (**)(uint64_t, uint64_t))(v25 + 24);
    id v56 = v24;
    v27(v26, v25);
    swift_beginAccess();
    swift_retain();
    sub_1005057FC(&qword_101685450);
    uint64_t v28 = (uint64_t)v53;
    CRRegister.wrappedValue.getter();
    swift_endAccess();
    swift_release();
    uint64_t v29 = (uint64_t)v54;
    sub_100A5E810(v28 + *(int *)(v57 + 20), (uint64_t)v54, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
    sub_100A5E878(v28, type metadata accessor for CRLFileItemAtomicDataStruct);
    double v30 = v55;
    (*(void (**)(char *, uint64_t, char *))(v14 + 16))(v17, v29, v55);
    sub_100A5E878(v29, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
    LOBYTE(v29) = static UUID.== infix(_:_:)();
    double v31 = *(void (**)(char *, char *))(v14 + 8);
    v31(v17, v30);
    v31(v22, v30);
    if ((v29 & 1) == 0)
    {
      sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"metadataPayload", 15, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLFileItem.swift", 82, 2, 49, (uint64_t)"Cached CRLAsset instance has not been updated as expected.", 58, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"metadataPayload", 15, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLFileItem.swift", 82, 2, 49);
    }
    return (Class)v56;
  }
  else
  {
    swift_beginAccess();
    swift_retain();
    sub_1005057FC(&qword_101685450);
    CRRegister.wrappedValue.getter();
    swift_endAccess();
    swift_release();
    sub_100A5E810((uint64_t)&v4[*(int *)(v57 + 20)], (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
    sub_100A5E878((uint64_t)v4, type metadata accessor for CRLFileItemAtomicDataStruct);
    uint64_t v57 = (uint64_t)v1;
    double v33 = (char *)[v1 store];
    uint64_t v34 = *(void *)&v33[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetManagerLock];
    os_unfair_lock_lock(*(os_unfair_lock_t *)(v34 + 16));
    uint64_t v35 = OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetManager;
    id v36 = *(void **)&v33[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetManager];
    if (v36)
    {
      id v37 = *(id *)&v33[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetManager];
    }
    else
    {
      id v56 = (char *)type metadata accessor for CRLAssetManager();
      double v38 = (char *)objc_allocWithZone((Class)v56);
      swift_unknownObjectWeakInit();
      uint64_t v39 = OBJC_IVAR____TtC8Freeform15CRLAssetManager_lock;
      type metadata accessor for CRLUnfairLock();
      uint64_t v40 = swift_allocObject();
      CGFloat v55 = v33;
      double v41 = v38;
      double v42 = (_DWORD *)swift_slowAlloc();
      *double v42 = 0;
      *(void *)(v40 + 16) = v42;
      atomic_thread_fence(memory_order_acq_rel);
      *(void *)&v38[v39] = v40;
      *(void *)&v41[OBJC_IVAR____TtC8Freeform15CRLAssetManager_assets] = _swiftEmptyDictionarySingleton;
      uint64_t v43 = OBJC_IVAR____TtC8Freeform15CRLAssetManager_owners;
      *(void *)&v41[v43] = [self mapTableWithKeyOptions:517 valueOptions:0];
      *(void *)&v41[OBJC_IVAR____TtC8Freeform15CRLAssetManager_garbageCollectionWorkItem] = 0;
      id v44 = v55;
      swift_unknownObjectWeakAssign();

      v58.receiver = v41;
      v58.super_class = (Class)v56;
      id v45 = [super init];

      id v46 = *(void **)&v33[v35];
      *(void *)&v33[v35] = v45;
      id v37 = v45;

      id v36 = 0;
    }
    id v47 = *(os_unfair_lock_s **)(v34 + 16);
    id v48 = v36;
    os_unfair_lock_unlock(v47);

    uint64_t v49 = v57;
    id v50 = (void *)sub_100F453C8(v8, v57, v37);

    sub_100A5E878((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
    id v51 = *(void **)(v49 + v23);
    *(void *)(v49 + v23) = v50;
    id v52 = v50;

    return (Class)v52;
  }
}

id sub_100A5B744(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v59 = a4;
  uint64_t v54 = a2;
  uint64_t v5 = type metadata accessor for CRLBoardItemParentAffinity();
  __chkstk_darwin(v5 - 8, v6);
  uint64_t v8 = (char *)&v51 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1005057FC((uint64_t *)&unk_101683E10);
  __chkstk_darwin(v9, v10);
  uint64_t v12 = (char *)&v51 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1005057FC((uint64_t *)&unk_101674520);
  __chkstk_darwin(v13 - 8, v14);
  uint64_t v55 = (uint64_t)&v51 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16, v17);
  CGFloat v53 = (char *)&v51 - v18;
  __chkstk_darwin(v19, v20);
  uint64_t v57 = (uint64_t)&v51 - v21;
  __chkstk_darwin(v22, v23);
  uint64_t v58 = (uint64_t)&v51 - v24;
  __chkstk_darwin(v25, v26);
  uint64_t v52 = (uint64_t)&v51 - v27;
  __chkstk_darwin(v28, v29);
  double v31 = (char *)&v51 - v30;
  uint64_t v56 = v4;
  swift_retain();
  double v32 = sub_100DCB3FC(1);
  swift_release();
  uint64_t v33 = (uint64_t)v32 + *(void *)(*v32 + 632);
  swift_beginAccess();
  sub_100522E9C(v33, (uint64_t)v12, (uint64_t *)&unk_101683E10);
  swift_retain();
  uint64_t v34 = sub_1005057FC((uint64_t *)&unk_101683E30);
  CRRegister.wrappedValue.getter();
  sub_100522E9C((uint64_t)v8, (uint64_t)v31, (uint64_t *)&unk_101674520);
  sub_100A5E878((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for CRLBoardItemParentAffinity);
  sub_100522F00((uint64_t)v12, (uint64_t *)&unk_101683E10);
  swift_release();
  id v35 = v32;
  uint64_t v36 = (uint64_t)v62;
  sub_100DCB770(v59);
  if (v36)
  {
    sub_100522F00((uint64_t)v31, (uint64_t *)&unk_101674520);
    swift_release();
  }
  else
  {
    uint64_t v37 = v58;
    sub_100522E9C(v54, v58, (uint64_t *)&unk_101674520);
    CGRect v62 = v31;
    sub_100522E9C((uint64_t)v31, v57, (uint64_t *)&unk_101674520);
    uint64_t v38 = type metadata accessor for UUID();
    uint64_t v39 = *(void *)(v38 - 8);
    int v40 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v39 + 48))(v37, 1, v38);
    uint64_t v41 = v52;
    uint64_t v42 = (uint64_t)v53;
    uint64_t v59 = v34;
    if (v40 == 1)
    {
      sub_10051B3EC(v57, v52, (uint64_t *)&unk_101674520);
      swift_retain();
      sub_100522F00(v58, (uint64_t *)&unk_101674520);
    }
    else
    {
      swift_retain();
      sub_100522F00(v57, (uint64_t *)&unk_101674520);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v39 + 32))(v41, v58, v38);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v39 + 56))(v41, 0, 1, v38);
    }
    sub_100522E9C(v41, v42, (uint64_t *)&unk_101674520);
    swift_beginAccess();
    uint64_t v43 = v55;
    sub_100522E9C(v42, v55, (uint64_t *)&unk_101674520);
    id v44 = (void (*)(unsigned char *, void))CRRegister.wrappedValue.modify();
    sub_1006063BC(v43, v45, (uint64_t *)&unk_101674520);
    v44(v61, 0);
    sub_100522F00(v42, (uint64_t *)&unk_101674520);
    swift_endAccess();
    sub_100522F00(v41, (uint64_t *)&unk_101674520);
    swift_release();
    id v46 = *(void **)(v56 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_store);
    id v47 = (char *)objc_allocWithZone((Class)type metadata accessor for CRLFileItem());
    *(void *)&v47[OBJC_IVAR____TtC8Freeform11CRLFileItem__metadataPayload] = 0;
    *(void *)&v47[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_store] = v46;
    *(void *)&v47[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData] = v32;
    id v48 = (objc_class *)type metadata accessor for CRLBoardItemBase(0);
    v60.receiver = v47;
    v60.super_class = v48;
    id v49 = v46;
    [super init];
    sub_100522F00((uint64_t)v62, (uint64_t *)&unk_101674520);
  }
  return v35;
}