id sub_100A5BCC4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  void *v19;
  void *v20;
  char *v21;
  objc_class *v22;
  id v23;
  objc_super v25;

  v1 = v0;
  v2 = type metadata accessor for CRLFileItemCRDTData(0);
  __chkstk_darwin(v2 - 8, v3);
  v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1005057FC((uint64_t *)&unk_101683E10);
  __chkstk_darwin(v6 - 8, v7);
  v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (**(_UNKNOWN *****)(v0 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData) == &off_10169BCB8) {
    v10 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
  }
  else {
    v10 = 0;
  }
  v11 = (uint64_t)v10 + *(void *)(*v10 + 632);
  swift_beginAccess();
  sub_100522E9C(v11, (uint64_t)v9, (uint64_t *)&unk_101683E10);
  v12 = (uint64_t)v10 + qword_10171C738;
  swift_beginAccess();
  sub_100A5E810(v12, (uint64_t)v5, type metadata accessor for CRLFileItemCRDTData);
  v13 = v10[4];
  v14 = v10[5];
  v17 = v10 + 2;
  v16 = v10[2];
  v15 = v17[1];
  type metadata accessor for CRLFileItemData(0);
  v18 = swift_allocObject();
  sub_100A5E7A8((uint64_t)v5, v18 + qword_10171C738, type metadata accessor for CRLFileItemCRDTData);
  sub_10051B3EC((uint64_t)v9, v18 + *(void *)(*(void *)v18 + 632), (uint64_t *)&unk_101683E10);
  v19 = sub_10068B398(v15, v13, v14, v16);
  v20 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_store);
  v21 = (char *)objc_allocWithZone((Class)type metadata accessor for CRLFileItem());
  *(void *)&v21[OBJC_IVAR____TtC8Freeform11CRLFileItem__metadataPayload] = 0;
  *(void *)&v21[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_store] = v20;
  *(void *)&v21[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData] = v19;
  v22 = (objc_class *)type metadata accessor for CRLBoardItemBase(0);
  v25.receiver = v21;
  v25.super_class = v22;
  v23 = v20;
  return [super init];
}

uint64_t sub_100A5BF54(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for CRLFileItemCRDTData(0);
  __chkstk_darwin(v3, v4);
  v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7, v8);
  v10 = (char *)&v28 - v9;
  uint64_t v11 = sub_1005057FC(&qword_10168D8E0);
  __chkstk_darwin(v11 - 8, v12);
  v14 = (char *)&v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for CRLFileItem();
  uint64_t v15 = swift_dynamicCastClass();
  if (v15)
  {
    uint64_t v16 = v15;
    uint64_t v30 = a1;
    swift_unknownObjectRetain();
    uint64_t v29 = sub_100CF6354(v16, v1);
    v17 = *(_UNKNOWN *****)(v1 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
    if (*v17 != &off_10169BCB8) {
      v17 = 0;
    }
    uint64_t v18 = (uint64_t)v17 + qword_10171C738;
    swift_beginAccess();
    sub_100A5E810(v18, (uint64_t)v10, type metadata accessor for CRLFileItemCRDTData);
    v19 = *(_UNKNOWN *****)(v16 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
    if (*v19 != &off_10169BCB8) {
      v19 = 0;
    }
    uint64_t v20 = (uint64_t)v19 + qword_10171C738;
    swift_beginAccess();
    sub_100A5E810(v20, (uint64_t)v6, type metadata accessor for CRLFileItemCRDTData);
    sub_100A5E918(&qword_10168D8F0, (void (*)(uint64_t))type metadata accessor for CRLFileItemCRDTData);
    CRStruct_1.actionUndoingDifference(from:)();
    sub_100A5E878((uint64_t)v6, type metadata accessor for CRLFileItemCRDTData);
    sub_100A5E878((uint64_t)v10, type metadata accessor for CRLFileItemCRDTData);
    uint64_t v21 = sub_1005057FC(&qword_10168D8E8);
    uint64_t v22 = *(void *)(v21 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v14, 1, v21) == 1)
    {
      sub_100522F00((uint64_t)v14, &qword_10168D8E0);
      memset(v31, 0, sizeof(v31));
      uint64_t v32 = 1;
    }
    else
    {
      uint64_t v32 = v21;
      v23 = sub_1005767BC(v31);
      (*(void (**)(uint64_t *, char *, uint64_t))(v22 + 32))(v23, v14, v21);
    }
    uint64_t v24 = v29;
    swift_beginAccess();
    sub_10057D560((uint64_t)v31, 6);
    swift_endAccess();
    swift_unknownObjectRelease();
    return v24;
  }
  else
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"createUndoingMutations(fromSnapshot:)", 37, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLFileItem.swift", 82, 2, 88, (uint64_t)"Tried to generate undo from mismatched type", 43, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_100586FD4((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Tried to generate undo from mismatched type");
    sub_1005871AC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"createUndoingMutations(fromSnapshot:)", 37, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLFileItem.swift", 82, 2, 88);
    SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v26, v27);
    uint64_t result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
  return result;
}

uint64_t sub_100A5C3CC()
{
  uint64_t v1 = sub_1005057FC(&qword_101688D68);
  uint64_t v52 = *(void *)(v1 - 8);
  __chkstk_darwin(v1, v2);
  uint64_t v4 = (char *)&v48 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5, v6);
  uint64_t v8 = (char *)&v48 - v7;
  uint64_t v51 = type metadata accessor for CRLFileItemCRDTData(0);
  __chkstk_darwin(v51, v9);
  uint64_t v11 = (char *)&v48 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12, v13);
  uint64_t v15 = (char *)&v48 - v14;
  uint64_t v16 = sub_1005057FC(&qword_101688D70);
  __chkstk_darwin(v16 - 8, v17);
  v19 = (char *)&v48 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20, v21);
  v23 = (char *)&v48 - v22;
  type metadata accessor for CRLFileItem();
  uint64_t v24 = swift_dynamicCastClass();
  if (v24)
  {
    uint64_t v25 = v24;
    uint64_t v53 = v1;
    v54 = v23;
    v49 = v4;
    v50 = v8;
    type metadata accessor for CRLBoardItemBase(0);
    if (swift_dynamicCastClass())
    {
      CKRecordID v26 = *(_UNKNOWN *****)(v0 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
      if (*v26 != &off_10169BCB8) {
        CKRecordID v26 = 0;
      }
      uint64_t v27 = (uint64_t)v26 + qword_10171C738;
      swift_beginAccess();
      sub_100A5E810(v27, (uint64_t)v15, type metadata accessor for CRLFileItemCRDTData);
      uint64_t v28 = *(_UNKNOWN *****)(v25 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
      if (*v28 != &off_10169BCB8) {
        uint64_t v28 = 0;
      }
      uint64_t v29 = (uint64_t)v28 + qword_10171C738;
      swift_beginAccess();
      sub_100A5E810(v29, (uint64_t)v11, type metadata accessor for CRLFileItemCRDTData);
      sub_100A5E918(&qword_10168D8F8, (void (*)(uint64_t))type metadata accessor for CRLFileItemCRDTData);
      swift_unknownObjectRetain();
      uint64_t v30 = (uint64_t)v54;
      CRType.observableDifference(from:)();
      sub_100A5E878((uint64_t)v11, type metadata accessor for CRLFileItemCRDTData);
      sub_100A5E878((uint64_t)v15, type metadata accessor for CRLFileItemCRDTData);
      sub_100522E9C(v30, (uint64_t)v19, &qword_101688D70);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v52 + 48))(v19, 1, v53) == 1)
      {
        v31 = &qword_101688D70;
        uint64_t v32 = (uint64_t)v19;
      }
      else
      {
        uint64_t v33 = (uint64_t)v50;
        sub_10051B3EC((uint64_t)v19, (uint64_t)v50, &qword_10167D310);
        uint64_t v34 = (uint64_t)v49;
        sub_100522E9C(v33, (uint64_t)v49, &qword_10167D310);
        uint64_t v35 = type metadata accessor for CRValueObservableDifference();
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 48))(v34, 1, v35) != 1)
        {
          sub_100522F00(v34, &qword_10167D310);
          v36 = sub_100F61B70(0, 1, 1, _swiftEmptyArrayStorage);
          unint64_t v40 = *((void *)v36 + 2);
          unint64_t v39 = *((void *)v36 + 3);
          if (v40 >= v39 >> 1) {
            v36 = sub_100F61B70((double *)(v39 > 1), v40 + 1, 1, v36);
          }
          *((void *)v36 + 2) = v40 + 1;
          v41 = &v36[2 * v40];
          v41[4] = 3.58302061e160;
          v41[5] = -3.91910665e202;
          sub_100522F00(v33, &qword_101688D68);
          if (*((void *)v36 + 2)) {
            goto LABEL_12;
          }
          goto LABEL_16;
        }
        sub_100522F00(v33, &qword_101688D68);
        v31 = &qword_10167D310;
        uint64_t v32 = v34;
      }
      sub_100522F00(v32, v31);
      v36 = _swiftEmptyArrayStorage;
      if (*(void *)&_swiftEmptyArrayStorage[2])
      {
LABEL_12:
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v55 = _swiftEmptyDictionarySingleton;
        sub_100972448((uint64_t)v36, 6, isUniquelyReferenced_nonNull_native);
        v38 = v55;
        swift_unknownObjectRelease();
        swift_bridgeObjectRelease();
LABEL_17:
        sub_100522F00(v30, &qword_101688D70);
        return (uint64_t)v38;
      }
LABEL_16:
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
      v38 = _swiftEmptyDictionarySingleton;
      goto LABEL_17;
    }
    swift_unknownObjectRetain();
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"createSpecificDataObservableDeltas(fromSnapshot:)", 49, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLBoardItem.swift", 83, 2, 835, (uint64_t)"Tried to create observable deltas from mismatched type", 54, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_100586FD4((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Tried to create observable deltas from mismatched type");
    v43 = "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLBoardItem.swift";
    uint64_t v44 = 83;
    uint64_t v45 = 835;
  }
  else
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"createSpecificDataObservableDeltas(fromSnapshot:)", 49, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLFileItem.swift", 82, 2, 100, (uint64_t)"Tried to create observable deltas from mismatched type", 54, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_100586FD4((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Tried to create observable deltas from mismatched type");
    v43 = "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLFileItem.swift";
    uint64_t v44 = 82;
    uint64_t v45 = 100;
  }
  sub_1005871AC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"createSpecificDataObservableDeltas(fromSnapshot:)", 49, 2, (uint64_t)v43, v44, 2, v45);
  SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v46, v47);
  uint64_t result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100A5CAC0(uint64_t a1)
{
  uint64_t v3 = sub_1005057FC(&qword_10168D8E0);
  __chkstk_darwin(v3 - 8, v4);
  uint64_t v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7, v8);
  uint64_t v10 = (char *)&v25 - v9;
  uint64_t v11 = sub_1005057FC(&qword_10168D8E8);
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11, v13);
  uint64_t v15 = (char *)&v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = sub_10088B69C(a1);
  if (!v1)
  {
    uint64_t v17 = (uint64_t *)(a1 + OBJC_IVAR____TtC8Freeform31CRLTransactableUndoingMutations_values);
    swift_beginAccess();
    uint64_t v18 = *v17;
    if (*(void *)(v18 + 16))
    {
      swift_bridgeObjectRetain();
      unint64_t v19 = sub_100956360(6);
      if (v20)
      {
        sub_100522E9C(*(void *)(v18 + 56) + 32 * v19, (uint64_t)&v26, &qword_101672BF0);
      }
      else
      {
        uint64_t v26 = 0;
        uint64_t v27 = 0;
        uint64_t v28 = 0;
        uint64_t v29 = 1;
      }
      swift_bridgeObjectRelease();
      if (v29 != 1)
      {
        sub_10051B3EC((uint64_t)&v26, (uint64_t)v30, &qword_101672BF0);
        if (v31)
        {
          int v23 = swift_dynamicCast();
          uint64_t v24 = *(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56);
          v24(v10, v23 ^ 1u, 1, v11);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) != 1)
          {
            (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v15, v10, v11);
            (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v6, v15, v11);
            v24(v6, 0, 1, v11);
            swift_beginAccess();
            type metadata accessor for CRLFileItemCRDTData(0);
            sub_100A5E918(&qword_10168D8F0, (void (*)(uint64_t))type metadata accessor for CRLFileItemCRDTData);
            swift_retain();
            CRStruct_1.apply(_:)();
            swift_endAccess();
            swift_release();
            sub_100522F00((uint64_t)v6, &qword_10168D8E0);
            return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v15, v11);
          }
          return sub_100522F00((uint64_t)v10, &qword_10168D8E0);
        }
        uint64_t v21 = &qword_101672BF0;
        uint64_t v22 = (uint64_t *)v30;
LABEL_9:
        sub_100522F00((uint64_t)v22, v21);
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v10, 1, 1, v11);
        return sub_100522F00((uint64_t)v10, &qword_10168D8E0);
      }
    }
    else
    {
      uint64_t v26 = 0;
      uint64_t v27 = 0;
      uint64_t v28 = 0;
      uint64_t v29 = 1;
    }
    uint64_t v21 = (uint64_t *)&unk_1016725E0;
    uint64_t v22 = &v26;
    goto LABEL_9;
  }
  return result;
}

uint64_t sub_100A5CEDC(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  uint64_t v5 = v4;
  switch(a3)
  {
    case 6:
      uint64_t result = swift_bridgeObjectRelease();
      uint64_t v12 = *(void *)(a2 + 16);
      if (!v12) {
        return result;
      }
      goto LABEL_4;
    default:
      char v10 = _stringCompareWithSmolCheck(_:_:expecting:)();
      uint64_t result = swift_bridgeObjectRelease();
      if (v10)
      {
        uint64_t v12 = *(void *)(a2 + 16);
        if (v12)
        {
LABEL_4:
          uint64_t v13 = OBJC_IVAR____TtC8Freeform11CRLFileItem__metadataPayload;
          uint64_t v14 = (void *)(a1 + OBJC_IVAR____TtC8Freeform14CRLPropertyMap_data);
          swift_bridgeObjectRetain();
          uint64_t v15 = (uint64_t *)(a2 + 40);
          do
          {
            uint64_t v17 = *(v15 - 1);
            uint64_t v16 = *v15;
            BOOL v18 = v17 == 0x614463696D6F7461 && v16 == 0xEA00000000006174;
            if (v18 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
            {
              unint64_t v19 = *(void **)((char *)v5 + v13);
              *(void *)((char *)v5 + v13) = 0;

              v37 = &type metadata for Bool;
              v36[0] = 1;
              swift_beginAccess();
              sub_100522E9C((uint64_t)v36, (uint64_t)v35, &qword_101672BF0);
              char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
              uint64_t v21 = (void *)*v14;
              uint64_t v34 = (void *)*v14;
              void *v14 = 0x8000000000000000;
              unint64_t v23 = sub_1009563E8();
              uint64_t v24 = v21[2];
              BOOL v25 = (v22 & 1) == 0;
              uint64_t v26 = v24 + v25;
              if (__OFADD__(v24, v25))
              {
                __break(1u);
LABEL_31:
                __break(1u);
LABEL_32:
                type metadata accessor for CRLChangeProperty(0);
                KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
                __break(1u);
                JUMPOUT(0x100A5D3F4);
              }
              char v27 = v22;
              if (v21[3] >= v26)
              {
                if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
                  sub_10097C320();
                }
              }
              else
              {
                sub_10095F04C(v26, isUniquelyReferenced_nonNull_native);
                uint64_t v28 = sub_1009563E8();
                if ((v27 & 1) != (v29 & 1)) {
                  goto LABEL_32;
                }
                unint64_t v23 = v28;
              }
              if (v27)
              {
                sub_1006063BC((uint64_t)v35, v34[7] + 32 * v23, &qword_101672BF0);
              }
              else
              {
                v34[(v23 >> 6) + 8] |= 1 << v23;
                *(void *)(v34[6] + 8 * v23) = 49;
                sub_10051B3EC((uint64_t)v35, v34[7] + 32 * v23, &qword_101672BF0);
                uint64_t v30 = v34[2];
                BOOL v31 = __OFADD__(v30, 1);
                uint64_t v32 = v30 + 1;
                if (v31) {
                  goto LABEL_31;
                }
                v34[2] = v32;
              }
              void *v14 = v34;
              swift_bridgeObjectRelease();
              swift_endAccess();
              sub_100522F00((uint64_t)v36, &qword_101672BF0);
            }
            else
            {
              sub_1005057FC((uint64_t *)&unk_101672B40);
              uint64_t inited = swift_initStackObject();
              *(_OWORD *)(inited + 16) = xmmword_10117E810;
              *(void *)(inited + 56) = &type metadata for String;
              *(void *)(inited + 64) = sub_100528BE4();
              *(void *)(inited + 32) = v17;
              *(void *)(inited + 40) = v16;
              swift_bridgeObjectRetain();
              sub_1005598CC(inited, (uint64_t)"populatePropertyMap(_:observedDifferenceLabels:withPropertyKey:snapshot:)", 73, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLFileItem.swift", 82, 2, 140);
              swift_setDeallocating();
              sub_1005057FC(&qword_101672B50);
              swift_arrayDestroy();
            }
            v15 += 2;
            --v12;
          }
          while (v12);
          return swift_bridgeObjectRelease();
        }
      }
      else
      {
        swift_getObjectType();
        return sub_100892474(a1, a2, a3, a4, v5);
      }
      return result;
  }
}

double *sub_100A5D570()
{
  uint64_t v1 = sub_1005057FC((uint64_t *)&unk_101676160);
  __chkstk_darwin(v1 - 8, v2);
  uint64_t v4 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for UTType();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5, v7);
  uint64_t v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v10 = v0;
  sub_100BE6360((uint64_t)v4);

  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_100522F00((uint64_t)v4, (uint64_t *)&unk_101676160);
    return _swiftEmptyArrayStorage;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v9, v4, v5);
    sub_1005057FC((uint64_t *)&unk_101672610);
    uint64_t v11 = swift_allocObject();
    *(_OWORD *)(v11 + 16) = xmmword_10117E810;
    *(void *)(v11 + 32) = UTType.identifier.getter();
    *(void *)(v11 + 40) = v12;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  }
  return (double *)v11;
}

void sub_100A5D88C(void *a1)
{
  uint64_t v1 = (void *)(*(uint64_t (**)(void))((swift_isaMask & *a1) + 0xE0))();
  [v1 copy];

  _bridgeAnyObjectToAny(_:)();
  swift_unknownObjectRelease();
  sub_100A5E8D8();
  if (swift_dynamicCast())
  {
    [v4 size];
    if (!sub_100064EF4(v2, v3)) {
      sub_10088AA40(v4);
    }
  }
  else
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"updateGeometryToReplaceBoardItem(_:)", 36, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLFileItem.swift", 82, 2, 177, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"updateGeometryToReplaceBoardItem(_:)", 36, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLFileItem.swift", 82, 2, 177);
  }
}

void sub_100A5DAFC()
{
}

id sub_100A5DB0C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLFileItem();
  [super dealloc];
}

uint64_t sub_100A5DB54()
{
  return type metadata accessor for CRLFileItem();
}

uint64_t type metadata accessor for CRLFileItem()
{
  uint64_t result = qword_10168D8C8;
  if (!qword_10168D8C8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100A5DBA8()
{
  return swift_updateClassMetadata2();
}

uint64_t sub_100A5DBFC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = type metadata accessor for CRLFileItemAtomicDataStruct(0);
  __chkstk_darwin(v2 - 8, v3);
  uint64_t v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  swift_retain();
  sub_1005057FC(&qword_101685450);
  CRRegister.wrappedValue.getter();
  swift_endAccess();
  swift_release();
  sub_100A5E810((uint64_t)v5, a1, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
  sub_100A5E878((uint64_t)v5, type metadata accessor for CRLFileItemAtomicDataStruct);
  uint64_t v6 = type metadata accessor for CRLAssetData();
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(a1, 0, 1, v6);
}

uint64_t sub_100A5DD84()
{
  id v0 = [self mainBundle];
  NSString v1 = String._bridgeToObjectiveC()();
  NSString v2 = String._bridgeToObjectiveC()();
  id v3 = [v0 localizedStringForKey:v1 value:v2 table:0];

  uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  return v4;
}

id sub_100A5DE54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v105 = a4;
  uint64_t v106 = a3;
  uint64_t v102 = a1;
  uint64_t v7 = sub_1005057FC(&qword_101685450);
  uint64_t v97 = *(void *)(v7 - 8);
  uint64_t v98 = v7;
  __chkstk_darwin(v7, v8);
  v96 = (char *)&v80 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v95 = (uint64_t (*)(void))type metadata accessor for CRLFileItemCRDTData(0);
  __chkstk_darwin(v95, v10);
  v99 = (char *)&v80 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12, v13);
  uint64_t v101 = (uint64_t)&v80 - v14;
  uint64_t v93 = type metadata accessor for CRLFileItemAtomicDataStruct(0);
  __chkstk_darwin(v93, v15);
  uint64_t v92 = (uint64_t)&v80 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17, v18);
  uint64_t v91 = (uint64_t)&v80 - v19;
  __chkstk_darwin(v20, v21);
  uint64_t v100 = (uint64_t)&v80 - v22;
  uint64_t v23 = type metadata accessor for UUID();
  uint64_t v24 = *(void *)(v23 - 8);
  __chkstk_darwin(v23, v25);
  v87 = (char *)&v80 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v86 = sub_1005057FC((uint64_t *)&unk_101683E10);
  __chkstk_darwin(v86, v27);
  uint64_t v94 = (uint64_t)&v80 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v29, v30);
  uint64_t v104 = (uint64_t)&v80 - v31;
  uint64_t v32 = sub_1005057FC((uint64_t *)&unk_101674520);
  __chkstk_darwin(v32 - 8, v33);
  uint64_t v35 = (char *)&v80 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v36, v37);
  unint64_t v39 = (char *)&v80 - v38;
  uint64_t v84 = type metadata accessor for CRLBoardItemParentAffinity();
  __chkstk_darwin(v84, v40);
  v42 = (char *)&v80 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v45 = __chkstk_darwin(v43, v44);
  uint64_t v103 = (uint64_t)&v80 - v46;
  if (a5) {
    id v47 = a5;
  }
  else {
    id v47 = [objc_allocWithZone((Class)CRLCanvasInfoGeometry) init];
  }
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v24 + 16))(v39, a2, v23, v45);
  uint64_t v90 = v24;
  v83 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v24 + 56);
  v83(v39, 0, 1, v23);
  id v89 = a5;
  id v48 = v47;
  [v48 position];
  float v50 = v49;
  float v52 = v51;
  [v48 size];
  float v54 = v53;
  float v56 = v55;
  [v48 angle];
  float v58 = v57;
  unsigned int v82 = [v48 widthValid];
  unsigned int v81 = [v48 heightValid];
  unsigned __int8 v59 = [v48 horizontalFlip];
  uint64_t v88 = a2;
  unsigned __int8 v60 = v59;
  unsigned __int8 v61 = [v48 verticalFlip];

  uint64_t v85 = v23;
  sub_100522E9C((uint64_t)v39, (uint64_t)v35, (uint64_t *)&unk_101674520);
  v83(v42, 1, 1, v23);
  uint64_t v62 = v84;
  *(void *)&v42[*(int *)(v84 + 24)] = _swiftEmptyDictionarySingleton;
  sub_1006063BC((uint64_t)v35, (uint64_t)v42, (uint64_t *)&unk_101674520);
  v63 = &v42[*(int *)(v62 + 20)];
  *(float *)v63 = v50;
  *((float *)v63 + 1) = v52;
  *((float *)v63 + 2) = v54;
  *((float *)v63 + 3) = v56;
  *((float *)v63 + 4) = v58;
  v63[20] = v82;
  v63[21] = v81;
  v63[22] = v60;
  v63[23] = v61;
  *((void *)v63 + 3) = _swiftEmptyDictionarySingleton;
  uint64_t v64 = v103;
  sub_100A5E7A8((uint64_t)v42, v103, (uint64_t (*)(void))type metadata accessor for CRLBoardItemParentAffinity);
  sub_100522F00((uint64_t)v39, (uint64_t *)&unk_101674520);
  sub_100A5E810(v64, (uint64_t)v42, (uint64_t (*)(void))type metadata accessor for CRLBoardItemParentAffinity);
  sub_10051A41C(v109);
  sub_10051B3EC((uint64_t)v109, (uint64_t)v110, (uint64_t *)&unk_101683E20);
  uint64_t v65 = (uint64_t)v87;
  UUID.init()();
  uint64_t v66 = v104;
  sub_100FC2584(v65, (uint64_t)v42, 0, 0, 0, 0xE000000000000000, (uint64_t)v110, v104);
  char v108 = 1;
  sub_1005057FC((uint64_t *)&unk_101689310);
  CRRegister.wrappedValue.setter();
  uint64_t v67 = v100;
  sub_100A5E810(v106, v100, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
  uint64_t v68 = v93;
  sub_100A5E810(v105, v67 + *(int *)(v93 + 20), (uint64_t (*)(void))type metadata accessor for CRLAssetData);
  *(void *)(v67 + *(int *)(v68 + 24)) = _swiftEmptyDictionarySingleton;
  uint64_t v69 = v91;
  sub_100A5E810(v67, v91, type metadata accessor for CRLFileItemAtomicDataStruct);
  uint64_t v70 = (uint64_t)v99;
  *(void *)&v99[*((int *)v95 + 5)] = _swiftEmptyDictionarySingleton;
  sub_100A5E810(v69, v92, type metadata accessor for CRLFileItemAtomicDataStruct);
  sub_100A5E918(&qword_10168D8D8, (void (*)(uint64_t))type metadata accessor for CRLFileItemAtomicDataStruct);
  v71 = v96;
  CRRegister.init(_:)();
  v95 = type metadata accessor for CRLFileItemAtomicDataStruct;
  sub_100A5E878(v69, type metadata accessor for CRLFileItemAtomicDataStruct);
  (*(void (**)(uint64_t, char *, uint64_t))(v97 + 32))(v70, v71, v98);
  uint64_t v72 = v101;
  sub_100A5E7A8(v70, v101, type metadata accessor for CRLFileItemCRDTData);
  uint64_t v73 = v94;
  sub_100522E9C(v66, v94, (uint64_t *)&unk_101683E10);
  sub_100A5E810(v72, v70, type metadata accessor for CRLFileItemCRDTData);
  type metadata accessor for CRLFileItemData(0);
  uint64_t v74 = swift_allocObject();
  sub_100A5E7A8(v70, v74 + qword_10171C738, type metadata accessor for CRLFileItemCRDTData);
  sub_10051B3EC(v73, v74 + *(void *)(*(void *)v74 + 632), (uint64_t *)&unk_101683E10);
  v75 = sub_10068B398(0x1000000000000, 0x2000400000000, 0x1000000000000, 2);
  v76 = (char *)objc_allocWithZone((Class)type metadata accessor for CRLFileItem());
  *(void *)&v76[OBJC_IVAR____TtC8Freeform11CRLFileItem__metadataPayload] = 0;
  *(void *)&v76[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_store] = v102;
  *(void *)&v76[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData] = v75;
  v77 = (objc_class *)type metadata accessor for CRLBoardItemBase(0);
  v107.receiver = v76;
  v107.super_class = v77;
  [super init];

  sub_100A5E878(v105, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
  sub_100A5E878(v106, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
  (*(void (**)(uint64_t, uint64_t))(v90 + 8))(v88, v85);
  sub_100A5E878(v72, type metadata accessor for CRLFileItemCRDTData);
  sub_100A5E878(v67, v95);
  sub_100522F00(v104, (uint64_t *)&unk_101683E10);
  sub_100A5E878(v103, (uint64_t (*)(void))type metadata accessor for CRLBoardItemParentAffinity);
  return v78;
}

uint64_t sub_100A5E7A8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_100A5E810(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_100A5E878(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_100A5E8D8()
{
  unint64_t result = qword_101684F50;
  if (!qword_101684F50)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_101684F50);
  }
  return result;
}

uint64_t sub_100A5E918(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void *sub_100A5E964(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  unint64_t v4 = a2[2];
  sub_100510D4C(v3, v4);
  a1[1] = v3;
  a1[2] = v4;
  return a1;
}

void *assignWithCopy for CRLRealTimeOpaqueChangeRecord(void *a1, void *a2)
{
  *a1 = *a2;
  uint64_t v3 = a2[1];
  unint64_t v4 = a2[2];
  sub_100510D4C(v3, v4);
  uint64_t v5 = a1[1];
  unint64_t v6 = a1[2];
  a1[1] = v3;
  a1[2] = v4;
  sub_100510084(v5, v6);
  return a1;
}

uint64_t assignWithTake for CRLRealTimeOpaqueChangeRecord(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  uint64_t v4 = *(void *)(a1 + 8);
  unint64_t v5 = *(void *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = v3;
  sub_100510084(v4, v5);
  return a1;
}

uint64_t getEnumTagSinglePayload for CRLRealTimeOpaqueChangeRecord(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xD && *(unsigned char *)(a1 + 24)) {
    return (*(_DWORD *)a1 + 13);
  }
  unsigned int v3 = (((*(void *)(a1 + 16) >> 60) >> 2) & 0xFFFFFFF3 | (4 * ((*(void *)(a1 + 16) >> 60) & 3))) ^ 0xF;
  if (v3 >= 0xC) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for CRLRealTimeOpaqueChangeRecord(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xC)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)uint64_t result = a2 - 13;
    if (a3 >= 0xD) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if (a3 >= 0xD) {
      *(unsigned char *)(result + 24) = 0;
    }
    if (a2)
    {
      *(void *)(result + 8) = 0;
      *(void *)(result + 16) = (unint64_t)(((-a2 >> 2) & 3) - 4 * a2) << 60;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLRealTimeOpaqueChangeRecord()
{
  return &type metadata for CRLRealTimeOpaqueChangeRecord;
}

unint64_t sub_100A5EAF4(unint64_t result)
{
  if (result >= 6) {
    return 6;
  }
  return result;
}

uint64_t sub_100A5EB04(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v14 = a4;
  uint64_t v7 = sub_1005057FC(&qword_10168D910);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7, v9);
  uint64_t v11 = (char *)&v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10050F848(a1, a1[3]);
  sub_100A5F090();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  LOBYTE(v15) = 0;
  KeyedEncodingContainer.encode(_:forKey:)();
  if (!v4)
  {
    uint64_t v15 = a3;
    uint64_t v16 = v14;
    char v17 = 1;
    sub_10060D344();
    KeyedEncodingContainer.encode<A>(_:forKey:)();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v11, v7);
}

uint64_t sub_100A5EC8C()
{
  if (*v0) {
    return 0x64616F6C796170;
  }
  else {
    return 0xD000000000000010;
  }
}

uint64_t sub_100A5ECCC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100A5EDE0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_100A5ECF4(uint64_t a1)
{
  unint64_t v2 = sub_100A5F090();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100A5ED30(uint64_t a1)
{
  unint64_t v2 = sub_100A5F090();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100A5ED6C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_100A5EED0(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
    a2[2] = v6;
  }
  return result;
}

uint64_t sub_100A5ED9C(void *a1)
{
  return sub_100A5EB04(a1, *v1, v1[1], v1[2]);
}

uint64_t sub_100A5EDBC(void *a1, void *a2)
{
  if (*a1 == *a2) {
    return sub_1008D44A8(a1[1], a1[2], a2[1], a2[2]);
  }
  else {
    return 0;
  }
}

uint64_t sub_100A5EDE0(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000010 && a2 == 0x800000010126B950
    || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x64616F6C796170 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v5 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v5) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_100A5EED0(void *a1)
{
  uint64_t v3 = sub_1005057FC(&qword_10168D900);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3, v5);
  uint64_t v7 = &v10[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = a1[3];
  sub_10050F848(a1, v8);
  sub_100A5F090();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (!v1)
  {
    v10[16] = 0;
    uint64_t v8 = KeyedDecodingContainer.decode(_:forKey:)();
    v10[15] = 1;
    sub_10060D184();
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    (*(void (**)(unsigned char *, uint64_t))(v4 + 8))(v7, v3);
  }
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)a1);
  return v8;
}

unint64_t sub_100A5F090()
{
  unint64_t result = qword_10168D908;
  if (!qword_10168D908)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168D908);
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLRealTimeOpaqueChangeRecord.ProtobufCodingError()
{
  return &type metadata for CRLRealTimeOpaqueChangeRecord.ProtobufCodingError;
}

unsigned char *storeEnumTagSinglePayload for CRLRealTimeOpaqueChangeRecord.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100A5F1C0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLRealTimeOpaqueChangeRecord.CodingKeys()
{
  return &type metadata for CRLRealTimeOpaqueChangeRecord.CodingKeys;
}

unint64_t sub_100A5F1FC()
{
  unint64_t result = qword_10168D918;
  if (!qword_10168D918)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168D918);
  }
  return result;
}

unint64_t sub_100A5F254()
{
  unint64_t result = qword_10168D920;
  if (!qword_10168D920)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168D920);
  }
  return result;
}

unint64_t sub_100A5F2AC()
{
  unint64_t result = qword_10168D928;
  if (!qword_10168D928)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168D928);
  }
  return result;
}

void sub_100A5F3B4()
{
  id v1 = [objc_allocWithZone((Class)UIView) initWithFrame:0.0, 0.0, 520.0, 77.0];
  [v0 setView:v1];

  id v2 = [v0 view];
  if (!v2)
  {
    __break(1u);
    goto LABEL_9;
  }
  int v3 = v2;
  [v2 setDirectionalLayoutMargins:12.0, 16.0, 12.0, 12.0];

  id v4 = [v0 view];
  if (!v4)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  uint64_t v5 = v4;
  id v6 = [v4 layer];

  LODWORD(v7) = 1041865114;
  [v6 setShadowOpacity:v7];

  id v8 = [v0 view];
  if (!v8)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  uint64_t v9 = v8;
  id v10 = [v8 layer];

  [v10 setShadowRadius:12.0];
  id v11 = [v0 view];
  if (!v11)
  {
LABEL_11:
    __break(1u);
    return;
  }
  uint64_t v12 = v11;
  id v13 = [v11 layer];

  [v13 setShadowOffset:0.0, 1.0];
}

id sub_100A5F5D8()
{
  id v1 = v0;
  id v2 = (objc_class *)type metadata accessor for CRLiOSFeatureHintController();
  v37.receiver = v0;
  v37.super_class = v2;
  [super viewDidLoad];
  id result = [v0 view];
  if (!result)
  {
    __break(1u);
    goto LABEL_7;
  }
  id v4 = result;
  id v5 = [self systemBackgroundColor];
  [v4 setBackgroundColor:v5];

  id result = [v1 view];
  if (!result)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  id v6 = result;
  double v7 = *(void **)&v1[OBJC_IVAR____TtC8Freeform27CRLiOSFeatureHintController_textHolder];
  [result addSubview:v7];

  [v7 addArrangedSubview:*(void *)&v1[OBJC_IVAR____TtC8Freeform27CRLiOSFeatureHintController_titleLabel]];
  [v7 addArrangedSubview:*(void *)&v1[OBJC_IVAR____TtC8Freeform27CRLiOSFeatureHintController_subtitleLabel]];
  id result = [v1 view];
  if (!result)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  id v8 = result;
  uint64_t v35 = v2;
  uint64_t v9 = *(void **)&v1[OBJC_IVAR____TtC8Freeform27CRLiOSFeatureHintController_closeButton];
  [result addSubview:v9];

  id result = [v1 view];
  if (result)
  {
    id v10 = result;
    id v11 = [result layoutMarginsGuide];

    sub_1005057FC((uint64_t *)&unk_101676C10);
    uint64_t v12 = swift_allocObject();
    *(_OWORD *)(v12 + 16) = xmmword_101181A80;
    id v13 = [v7 leadingAnchor];
    id v14 = [v11 leadingAnchor];
    id v15 = [v13 constraintEqualToAnchor:v14];

    *(void *)(v12 + 32) = v15;
    id v16 = [v7 topAnchor];
    id v17 = [v11 topAnchor];
    id v18 = [v16 constraintEqualToAnchor:v17];

    *(void *)(v12 + 40) = v18;
    id v19 = [v7 bottomAnchor];
    id v20 = [v11 bottomAnchor];
    id v21 = [v19 constraintEqualToAnchor:v20];

    *(void *)(v12 + 48) = v21;
    id v22 = [v9 leadingAnchor];
    id v23 = [v7 trailingAnchor];
    id v24 = [v22 constraintEqualToAnchor:v23 constant:12.0];

    *(void *)(v12 + 56) = v24;
    id v25 = [v9 topAnchor];
    id v26 = [v11 topAnchor];
    id v27 = [v25 constraintEqualToAnchor:v26];

    *(void *)(v12 + 64) = v27;
    id v28 = [v9 trailingAnchor];
    id v29 = [v11 trailingAnchor];
    id v30 = [v28 constraintEqualToAnchor:v29];

    *(void *)(v12 + 72) = v30;
    specialized Array._endMutation()();
    uint64_t v31 = self;
    sub_10053BBC0();
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v31 activateConstraints:isa];

    sub_100A5FB34();
    sub_1005057FC((uint64_t *)&unk_10168D9A0);
    uint64_t v33 = swift_allocObject();
    *(_OWORD *)(v33 + 16) = xmmword_10117D8C0;
    *(void *)(v33 + 32) = type metadata accessor for UITraitHorizontalSizeClass();
    *(void *)(v33 + 40) = &protocol witness table for UITraitHorizontalSizeClass;
    *(void *)(v33 + 48) = type metadata accessor for UITraitVerticalSizeClass();
    *(void *)(v33 + 56) = &protocol witness table for UITraitVerticalSizeClass;
    v36[3] = v35;
    v36[0] = v1;
    uint64_t v34 = v1;
    UIViewController.registerForTraitChanges(_:target:action:)();
    swift_bridgeObjectRelease();

    swift_unknownObjectRelease();
    return (id)_s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v36);
  }
LABEL_9:
  __break(1u);
  return result;
}

id sub_100A5FB34()
{
  id v1 = v0;
  id v2 = [v0 presentingViewController];
  if (!v2) {
    goto LABEL_11;
  }
  int v3 = v2;
  id v4 = [v2 traitCollection];
  unsigned __int8 v5 = [v4 crl_isCompactWidth];

  if (v5) {
    goto LABEL_9;
  }
  id v6 = *(void **)&v1[OBJC_IVAR____TtC8Freeform27CRLiOSFeatureHintController_subtitleLabel];
  id v7 = [v6 text];
  if (!v7) {
    goto LABEL_9;
  }
  id v8 = v7;
  static String._unconditionallyBridgeFromObjectiveC(_:)();

  NSString v9 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id result = [v6 font];
  if (!result)
  {
    __break(1u);
    goto LABEL_19;
  }
  id v11 = result;
  double v12 = sub_100D53704(result);

  id result = [v1 view];
  if (!result)
  {
LABEL_19:
    __break(1u);
    return result;
  }
  id v13 = result;
  id v14 = [result window];

  if (!v14)
  {
LABEL_9:
    id v14 = v3;
LABEL_10:

LABEL_11:
    id v6 = *(void **)&v1[OBJC_IVAR____TtC8Freeform27CRLiOSFeatureHintController_subtitleLabel];
    [v6 setNumberOfLines:0];
    [v6 invalidateIntrinsicContentSize];
    goto LABEL_12;
  }
  [v14 bounds];
  if (v12 + 12.0 + 44.0 >= CGRectGetWidth(v27))
  {

    goto LABEL_10;
  }
  [v6 setNumberOfLines:1];
  [v6 invalidateIntrinsicContentSize];

LABEL_12:
  id v15 = *(void **)&v1[OBJC_IVAR____TtC8Freeform27CRLiOSFeatureHintController_titleLabel];
  [v15 intrinsicContentSize];
  double v17 = v16;
  [v6 intrinsicContentSize];
  if (v17 > v18) {
    double v18 = v17;
  }
  double v19 = v18 + 16.0 + 12.0;
  [*(id *)&v1[OBJC_IVAR____TtC8Freeform27CRLiOSFeatureHintController_closeButton] intrinsicContentSize];
  double v21 = v19 + v20 + 12.0 + 20.0;
  [v6 intrinsicContentSize];
  double v23 = v22 + 24.0;
  [v15 intrinsicContentSize];
  double v25 = v23 + v24;

  return [v1 setPreferredContentSize:v21, v25];
}

id sub_100A5FE68()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLiOSFeatureHintController();
  return [super dealloc];
}

uint64_t type metadata accessor for CRLiOSFeatureHintController()
{
  return self;
}

NSString sub_100A5FF34()
{
  NSString result = String._bridgeToObjectiveC()();
  qword_10171B688 = (uint64_t)result;
  return result;
}

uint64_t sub_100A5FF6C()
{
  sub_1005057FC(&qword_10168DB08);
  OS_dispatch_queue.sync<A>(execute:)();
  return v1;
}

uint64_t sub_100A60184()
{
  uint64_t v1 = *(char **)(v0 + 16);
  char v2 = *(unsigned char *)(v0 + 24);
  int v3 = *(NSObject **)&v1[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore_writeQueue];
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = v1;
  *(unsigned char *)(v4 + 24) = v2;
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = sub_100A64894;
  *(void *)(v5 + 24) = v4;
  v9[4] = sub_100659320;
  v9[5] = v5;
  v9[0] = _NSConcreteStackBlock;
  v9[1] = *(void *)"";
  v9[2] = sub_1006D9628;
  v9[3] = &unk_10151FAC8;
  id v6 = _Block_copy(v9);
  id v7 = v1;
  swift_retain();
  swift_release();
  dispatch_sync(v3, v6);
  _Block_release(v6);
  LOBYTE(v3) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (v3) {
    __break(1u);
  }
  return result;
}

uint64_t sub_100A602E4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v19 = a1;
  uint64_t v2 = type metadata accessor for CKSyncEngine.State.Serialization();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2, v4);
  id v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for CRLBoardDataStore.KeyValueTableKey(0);
  __chkstk_darwin(v7, v8);
  id v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for PropertyListDecoder();
  swift_allocObject();
  PropertyListDecoder.init()();
  uint64_t v11 = *(void *)(v1 + 16);
  swift_storeEnumTagMultiPayload();
  uint64_t v20 = v11;
  double v21 = v10;
  sub_1005057FC(&qword_10168DB00);
  OS_dispatch_queue.sync<A>(execute:)();
  uint64_t v13 = v22;
  unint64_t v12 = v23;
  sub_100A64798((uint64_t)v10, type metadata accessor for CRLBoardDataStore.KeyValueTableKey);
  if (v12 >> 60 == 15)
  {
    id v14 = (_OWORD *)v19;
    *(void *)(v19 + 32) = 0;
    _OWORD *v14 = 0u;
    v14[1] = 0u;
  }
  else
  {
    sub_100510D4C(v13, v12);
    sub_100A64814(&qword_10167B488, (void (*)(uint64_t))&type metadata accessor for CKSyncEngine.State.Serialization);
    dispatch thunk of PropertyListDecoder.decode<A>(_:from:)();
    id v15 = (uint64_t *)v19;
    *(void *)(v19 + 24) = v2;
    v15[4] = sub_100A64814(&qword_10167B448, (void (*)(uint64_t))&type metadata accessor for CKSyncEngine.State.Serialization);
    double v16 = sub_1005767BC(v15);
    (*(void (**)(uint64_t *, char *, uint64_t))(v3 + 32))(v16, v6, v2);
    sub_100514260(v13, v12);
    sub_100514260(v13, v12);
  }
  return swift_release();
}

uint64_t sub_100A6078C(void *a1)
{
  uint64_t v3 = type metadata accessor for CRLBoardDataStore.KeyValueTableKey(0);
  __chkstk_darwin(v3, v4);
  id v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for PropertyListEncoder();
  swift_allocObject();
  PropertyListEncoder.init()();
  sub_10050F848(a1, a1[3]);
  uint64_t v7 = dispatch thunk of PropertyListEncoder.encode<A>(_:)();
  unint64_t v9 = v8;
  uint64_t v10 = *(void *)(v1 + 16);
  uint64_t v11 = swift_storeEnumTagMultiPayload();
  __chkstk_darwin(v11, v12);
  *(&v14 - 4) = v10;
  *(&v14 - 3) = v7;
  *(&v14 - 2) = v9;
  *(&v14 - 1) = (uint64_t)v6;
  sub_100510D4C(v7, v9);
  OS_dispatch_queue.sync<A>(execute:)();
  sub_100A64798((uint64_t)v6, type metadata accessor for CRLBoardDataStore.KeyValueTableKey);
  sub_100510084(v7, v9);
  sub_100510084(v7, v9);
  return swift_release();
}

void sub_100A60AC8(uint64_t a1, int a2)
{
  int v126 = a2;
  uint64_t v133 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v132 = *(void *)(v133 - 8);
  __chkstk_darwin(v133, v3);
  v131 = (char *)&v115 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v130 = type metadata accessor for DispatchQoS();
  uint64_t v129 = *(void *)(v130 - 8);
  __chkstk_darwin(v130, v5);
  v128 = (char *)&v115 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v125 = type metadata accessor for CRLBoardIdentifierStorage(0);
  __chkstk_darwin(v125, v7);
  v124 = (char *)&v115 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1005057FC((uint64_t *)&unk_101674520);
  __chkstk_darwin(v9 - 8, v10);
  uint64_t v12 = (char *)&v115 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for UUID();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13, v15);
  v138 = (char *)&v115 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17, v18);
  v139 = (char *)&v115 - v19;
  __chkstk_darwin(v20, v21);
  v137 = (char *)&v115 - v22;
  uint64_t v23 = type metadata accessor for CRLBoardIdentifier(0);
  __chkstk_darwin(v23 - 8, v24);
  uint64_t v123 = (uint64_t)&v115 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26, v27);
  uint64_t v122 = (uint64_t)&v115 - v28;
  __chkstk_darwin(v29, v30);
  uint64_t v121 = (uint64_t)&v115 - v31;
  __chkstk_darwin(v32, v33);
  uint64_t v120 = (uint64_t)&v115 - v34;
  uint64_t v35 = type metadata accessor for CRLZoneSyncResultScenarios();
  uint64_t v148 = *(void *)(v35 - 8);
  __chkstk_darwin(v35 - 8, v36);
  uint64_t v119 = (uint64_t)&v115 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v38, v39);
  uint64_t v41 = (char *)&v115 - v40;
  uint64_t v42 = sub_1005057FC(&qword_10168DAD8);
  __chkstk_darwin(v42 - 8, v43);
  __n128 v45 = (uint64_t *)((char *)&v115 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v46, v47);
  double v49 = (void **)((char *)&v115 - v48);
  uint64_t v50 = *(void *)(a1 + 64);
  uint64_t v141 = a1 + 64;
  uint64_t v51 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v52 = -1;
  if (v51 < 64) {
    uint64_t v52 = ~(-1 << v51);
  }
  unint64_t v53 = v52 & v50;
  v146 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56);
  v147 = (unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48);
  v136 = (void (**)(char *, char *, uint64_t))(v14 + 32);
  v135 = (void (**)(char *, char *, uint64_t))(v14 + 16);
  v134 = CKCurrentUserDefaultName;
  v118 = (void (**)(char *, uint64_t))(v14 + 8);
  int64_t v142 = (unint64_t)(v51 + 63) >> 6;
  int64_t v116 = v142 - 1;
  uint64_t v149 = a1;
  swift_bridgeObjectRetain();
  int64_t v151 = 0;
  v140 = _swiftEmptyDictionarySingleton;
  v143 = v12;
  v144 = v45;
  v145 = v41;
  v150 = v49;
  if (!v53) {
    goto LABEL_46;
  }
LABEL_44:
  unint64_t v97 = __clz(__rbit64(v53));
  v53 &= v53 - 1;
  unint64_t v98 = v97 | (v151 << 6);
LABEL_45:
  uint64_t v99 = *(void *)(v149 + 56);
  uint64_t v100 = *(void **)(*(void *)(v149 + 48) + 8 * v98);
  *__n128 v45 = v100;
  uint64_t v101 = v99 + *(void *)(v148 + 72) * v98;
  uint64_t v102 = sub_1005057FC(&qword_10168DAE0);
  sub_100A6443C(v101, (uint64_t)v45 + *(int *)(v102 + 48), (uint64_t (*)(void))type metadata accessor for CRLZoneSyncResultScenarios);
  (*(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v102 - 8) + 56))(v45, 0, 1, v102);
  id v103 = v100;
  while (1)
  {
    sub_100A64350((uint64_t)v45, (uint64_t)v49);
    uint64_t v108 = sub_1005057FC(&qword_10168DAE0);
    if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(*(void *)(v108 - 8) + 48))(v49, 1, v108) == 1)
    {
      swift_release();
      sub_10050BF48(0, (unint64_t *)&qword_1016725C0);
      v109 = (void *)static OS_dispatch_queue.main.getter();
      uint64_t v110 = swift_allocObject();
      *(void *)(v110 + 16) = v140;
      *(unsigned char *)(v110 + 24) = v126 & 1;
      *(void *)(v110 + 32) = v127;
      aBlock[4] = sub_100A64768;
      aBlock[5] = v110;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = *(void *)"";
      aBlock[2] = sub_100679958;
      aBlock[3] = &unk_10151FA50;
      v111 = _Block_copy(aBlock);
      swift_retain();
      swift_release();
      v112 = v128;
      static DispatchQoS.unspecified.getter();
      aBlock[0] = _swiftEmptyArrayStorage;
      sub_100A64814((unint64_t *)&qword_1016747E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
      sub_1005057FC((uint64_t *)&unk_1016725D0);
      sub_10056B494();
      v113 = v131;
      uint64_t v114 = v133;
      dispatch thunk of SetAlgebra.init<A>(_:)();
      OS_dispatch_queue.async(group:qos:flags:execute:)();
      _Block_release(v111);

      (*(void (**)(char *, uint64_t))(v132 + 8))(v113, v114);
      (*(void (**)(char *, uint64_t))(v129 + 8))(v112, v130);
      return;
    }
    float v54 = v49;
    double v55 = *v49;
    sub_100A643D4((uint64_t)v54 + *(int *)(v108 + 48), (uint64_t)v41, (uint64_t (*)(void))type metadata accessor for CRLZoneSyncResultScenarios);
    id v56 = [v55 zoneName];
    uint64_t v57 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v59 = v58;

    v60._countAndFlagsBits = 0x5F6472616F42;
    v60._object = (void *)0xE600000000000000;
    if (String.hasPrefix(_:)(v60))
    {
      if ((v59 & 0x2000000000000000) != 0) {
        uint64_t v61 = HIBYTE(v59) & 0xF;
      }
      else {
        uint64_t v61 = v57 & 0xFFFFFFFFFFFFLL;
      }
      if (!v61) {
        goto LABEL_24;
      }
      unint64_t v62 = String.index(before:)();
      if (String.subscript.getter() == 95 && v63 == 0xE100000000000000)
      {
LABEL_25:
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v65 = v13;
        char v66 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        if ((v66 & 1) == 0)
        {
          while (1)
          {
            uint64_t v13 = v65;
            if (v62 < 0x4000) {
              break;
            }
            unint64_t v62 = String.index(before:)();
            if (String.subscript.getter() == 95 && v67 == 0xE100000000000000) {
              goto LABEL_25;
            }
            char v69 = _stringCompareWithSmolCheck(_:_:expecting:)();
            swift_bridgeObjectRelease();
            if (v69) {
              goto LABEL_15;
            }
          }
LABEL_24:
          swift_bridgeObjectRelease();
          uint64_t v12 = v143;
          (*v146)(v143, 1, 1, v13);
          __n128 v45 = v144;
          uint64_t v41 = v145;
LABEL_29:
          sub_100522F00((uint64_t)v12, (uint64_t *)&unk_101674520);
          sub_100A64798((uint64_t)v41, (uint64_t (*)(void))type metadata accessor for CRLZoneSyncResultScenarios);

          double v49 = v150;
          if (v53) {
            goto LABEL_44;
          }
          goto LABEL_46;
        }
LABEL_15:
        uint64_t v13 = v65;
      }
      if (4 * v61 < (unint64_t)String.index(after:)() >> 14) {
        goto LABEL_67;
      }
      String.subscript.getter();
      swift_bridgeObjectRelease();
      static String._fromSubstring(_:)();
      swift_bridgeObjectRelease();
      uint64_t v12 = v143;
      UUID.init(uuidString:)();
      __n128 v45 = v144;
      uint64_t v41 = v145;
    }
    else
    {
      (*v146)(v12, 1, 1, v13);
    }
    swift_bridgeObjectRelease();
    if ((*v147)(v12, 1, v13) == 1) {
      goto LABEL_29;
    }
    uint64_t v70 = *v136;
    v71 = v137;
    (*v136)(v137, v12, v13);
    uint64_t v72 = *v135;
    (*v135)(v139, v71, v13);
    id v73 = [v55 ownerName];
    uint64_t v74 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v76 = v75;

    if (v74 != static String._unconditionallyBridgeFromObjectiveC(_:)()) {
      goto LABEL_34;
    }
    if (v76 == v77)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
LABEL_34:
      char v78 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v78 & 1) == 0)
      {
        id v81 = [v55 ownerName];
        uint64_t v79 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        unint64_t v80 = v82;

        goto LABEL_37;
      }
    }
    uint64_t v79 = 0;
    unint64_t v80 = 0xE000000000000000;
LABEL_37:
    v72(v138, v139, v13);
    if (v79 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v80 == v83)
    {
      swift_bridgeObjectRelease();
LABEL_41:
      uint64_t v85 = v70;
      swift_bridgeObjectRelease();
      uint64_t v117 = 0;
      unint64_t v80 = 0xE000000000000000;
      goto LABEL_43;
    }
    char v84 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v84) {
      goto LABEL_41;
    }
    uint64_t v117 = v79;
    uint64_t v85 = v70;
LABEL_43:
    uint64_t v86 = *v118;
    (*v118)(v139, v13);
    uint64_t v87 = (uint64_t)v124;
    v85(v124, v138, v13);
    uint64_t v88 = (uint64_t *)(v87 + *(int *)(v125 + 20));
    *uint64_t v88 = v117;
    v88[1] = v80;
    uint64_t v89 = v122;
    sub_100A643D4(v87, v122, type metadata accessor for CRLBoardIdentifierStorage);
    uint64_t v90 = v89;
    uint64_t v91 = v121;
    sub_100A643D4(v90, v121, type metadata accessor for CRLBoardIdentifier);
    v86(v137, v13);
    uint64_t v92 = v120;
    sub_100A643D4(v91, v120, type metadata accessor for CRLBoardIdentifier);
    uint64_t v93 = v123;
    sub_100A6443C(v92, v123, type metadata accessor for CRLBoardIdentifier);
    uint64_t v41 = v145;
    uint64_t v94 = v119;
    sub_100A6443C((uint64_t)v145, v119, (uint64_t (*)(void))type metadata accessor for CRLZoneSyncResultScenarios);
    v95 = v140;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    aBlock[0] = v95;
    sub_100976C78(v94, v93, isUniquelyReferenced_nonNull_native);
    v140 = (void *)aBlock[0];
    swift_bridgeObjectRelease();
    sub_100A64798(v93, type metadata accessor for CRLBoardIdentifier);

    sub_100A64798(v92, type metadata accessor for CRLBoardIdentifier);
    sub_100A64798((uint64_t)v41, (uint64_t (*)(void))type metadata accessor for CRLZoneSyncResultScenarios);
    __n128 v45 = v144;
    double v49 = v150;
    if (v53) {
      goto LABEL_44;
    }
LABEL_46:
    int64_t v104 = v151 + 1;
    if (__OFADD__(v151, 1)) {
      break;
    }
    if (v104 < v142)
    {
      unint64_t v105 = *(void *)(v141 + 8 * v104);
      if (v105) {
        goto LABEL_49;
      }
      int64_t v106 = v151 + 2;
      ++v151;
      if (v104 + 1 < v142)
      {
        unint64_t v105 = *(void *)(v141 + 8 * v106);
        if (v105) {
          goto LABEL_52;
        }
        int64_t v151 = v104 + 1;
        if (v104 + 2 < v142)
        {
          unint64_t v105 = *(void *)(v141 + 8 * (v104 + 2));
          if (v105)
          {
            v104 += 2;
            goto LABEL_49;
          }
          int64_t v106 = v104 + 3;
          int64_t v151 = v104 + 2;
          if (v104 + 3 < v142)
          {
            unint64_t v105 = *(void *)(v141 + 8 * v106);
            if (!v105)
            {
              while (1)
              {
                int64_t v104 = v106 + 1;
                if (__OFADD__(v106, 1)) {
                  goto LABEL_68;
                }
                if (v104 >= v142)
                {
                  int64_t v151 = v116;
                  goto LABEL_63;
                }
                unint64_t v105 = *(void *)(v141 + 8 * v104);
                ++v106;
                if (v105) {
                  goto LABEL_49;
                }
              }
            }
LABEL_52:
            int64_t v104 = v106;
LABEL_49:
            unint64_t v53 = (v105 - 1) & v105;
            unint64_t v98 = __clz(__rbit64(v105)) + (v104 << 6);
            int64_t v151 = v104;
            goto LABEL_45;
          }
        }
      }
    }
LABEL_63:
    uint64_t v107 = sub_1005057FC(&qword_10168DAE0);
    (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v107 - 8) + 56))(v45, 1, 1, v107);
    unint64_t v53 = 0;
  }
  __break(1u);
LABEL_67:
  __break(1u);
LABEL_68:
  __break(1u);
}

void sub_100A61A80(uint64_t a1, char a2, uint64_t a3)
{
  sub_1005057FC(&qword_10168B3D0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117D8C0;
  *(void *)(inited + 32) = 0xD000000000000026;
  *(void *)(inited + 40) = 0x800000010126BC20;
  uint64_t v7 = sub_1005057FC(&qword_10168DAF8);
  *(void *)(inited + 48) = a1;
  *(void *)(inited + 72) = v7;
  *(void *)(inited + 80) = 0xD000000000000029;
  *(void *)(inited + 88) = 0x800000010126BC50;
  *(void *)(inited + 120) = &type metadata for Bool;
  *(unsigned char *)(inited + 96) = a2;
  swift_bridgeObjectRetain();
  unint64_t v8 = sub_100A39A60(inited);
  id v9 = [self defaultCenter];
  if (qword_10166F7C0 != -1) {
    swift_once();
  }
  uint64_t v10 = qword_10171B688;
  sub_100ED2BB8(v8);
  swift_bridgeObjectRelease();
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v9 postNotificationName:v10 object:a3 userInfo:isa];
}

void sub_100A61C14(uint64_t a1, unsigned __int8 a2)
{
  int v4 = a2;
  uint64_t v5 = sub_1005057FC(&qword_101672BB0);
  __chkstk_darwin(v5 - 8, v6);
  unint64_t v8 = (char *)&v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1005057FC(&qword_10168DAD8);
  __chkstk_darwin(v9 - 8, v10);
  uint64_t v12 = (uint64_t *)((char *)&v47 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v13, v14);
  uint64_t v16 = (void **)((char *)&v47 - v15);
  if (v4 != 2) {
    goto LABEL_40;
  }
  id v56 = v8;
  uint64_t v17 = *(void *)(a1 + 64);
  uint64_t v51 = a1 + 64;
  uint64_t v18 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v19 = -1;
  if (v18 < 64) {
    uint64_t v19 = ~(-1 << v18);
  }
  unint64_t v20 = v19 & v17;
  unint64_t v21 = (unint64_t)(v18 + 63) >> 6;
  unint64_t v48 = v21 - 1;
  swift_bridgeObjectRetain();
  unint64_t v22 = 0;
  int64_t v52 = v21;
  uint64_t v49 = a1 + 104;
  unint64_t v50 = v21 - 5;
  float v54 = v12;
  double v55 = (char *)&type metadata for () + 8;
  uint64_t v57 = v2;
  unint64_t v58 = v16;
  uint64_t v53 = a1;
  if (!v20) {
    goto LABEL_9;
  }
LABEL_7:
  unint64_t v23 = __clz(__rbit64(v20));
  v20 &= v20 - 1;
  unint64_t v24 = v23 | (v22 << 6);
LABEL_8:
  uint64_t v25 = *(void *)(a1 + 56);
  uint64_t v26 = *(void **)(*(void *)(a1 + 48) + 8 * v24);
  *uint64_t v12 = v26;
  uint64_t v27 = v25 + *(void *)(*(void *)(type metadata accessor for CRLZoneSyncResultScenarios() - 8) + 72) * v24;
  uint64_t v28 = sub_1005057FC(&qword_10168DAE0);
  sub_100A6443C(v27, (uint64_t)v12 + *(int *)(v28 + 48), (uint64_t (*)(void))type metadata accessor for CRLZoneSyncResultScenarios);
  (*(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v12, 0, 1, v28);
  id v29 = v26;
  uint64_t v16 = v58;
  while (1)
  {
    sub_100A64350((uint64_t)v12, (uint64_t)v16);
    uint64_t v34 = sub_1005057FC(&qword_10168DAE0);
    if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(*(void *)(v34 - 8) + 48))(v16, 1, v34) == 1)
    {
      swift_release();
LABEL_40:
      sub_100A60AC8(a1, 1);
      return;
    }
    uint64_t v35 = *v16;
    uint64_t v36 = (unsigned __int8 *)v16 + *(int *)(v34 + 48);
    int v37 = *v36;
    sub_100A64798((uint64_t)v36, (uint64_t (*)(void))type metadata accessor for CRLZoneSyncResultScenarios);
    if (v37 == 1)
    {
      uint64_t v38 = type metadata accessor for TaskPriority();
      uint64_t v39 = *(void *)(v38 - 8);
      uint64_t v40 = (uint64_t)v56;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v39 + 56))(v56, 1, 1, v38);
      uint64_t v41 = (void *)swift_allocObject();
      v41[2] = 0;
      v41[3] = 0;
      v41[4] = v2;
      v41[5] = v35;
      int v42 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v39 + 48))(v40, 1, v38);
      swift_retain();
      id v43 = v35;
      if (v42 == 1)
      {
        sub_100522F00(v40, &qword_101672BB0);
      }
      else
      {
        TaskPriority.rawValue.getter();
        (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v40, v38);
      }
      uint64_t v16 = v58;
      if (v41[2])
      {
        swift_getObjectType();
        swift_unknownObjectRetain();
        uint64_t v44 = dispatch thunk of Actor.unownedExecutor.getter();
        uint64_t v46 = v45;
        swift_unknownObjectRelease();
      }
      else
      {
        uint64_t v44 = 0;
        uint64_t v46 = 0;
      }
      a1 = v53;
      if (v46 | v44)
      {
        uint64_t v59 = 0;
        uint64_t v60 = 0;
        uint64_t v61 = v44;
        uint64_t v62 = v46;
      }
      swift_task_create();

      swift_release();
      uint64_t v2 = v57;
      uint64_t v12 = v54;
      if (v20) {
        goto LABEL_7;
      }
    }
    else
    {

      if (v20) {
        goto LABEL_7;
      }
    }
LABEL_9:
    int64_t v30 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v30 >= v52)
    {
      unint64_t v32 = v22;
    }
    else
    {
      unint64_t v31 = *(void *)(v51 + 8 * v30);
      if (v31) {
        goto LABEL_12;
      }
      unint64_t v32 = v22 + 1;
      if ((uint64_t)(v22 + 2) < v52)
      {
        unint64_t v31 = *(void *)(v51 + 8 * (v22 + 2));
        if (v31)
        {
          int64_t v30 = v22 + 2;
LABEL_12:
          unint64_t v20 = (v31 - 1) & v31;
          unint64_t v24 = __clz(__rbit64(v31)) + (v30 << 6);
          unint64_t v22 = v30;
          goto LABEL_8;
        }
        unint64_t v32 = v22 + 2;
        if ((uint64_t)(v22 + 3) < v52)
        {
          unint64_t v31 = *(void *)(v51 + 8 * (v22 + 3));
          if (v31)
          {
            int64_t v30 = v22 + 3;
            goto LABEL_12;
          }
          int64_t v30 = v22 + 4;
          unint64_t v32 = v22 + 3;
          if ((uint64_t)(v22 + 4) < v52)
          {
            unint64_t v31 = *(void *)(v51 + 8 * v30);
            if (v31) {
              goto LABEL_12;
            }
            while (v50 != v22)
            {
              unint64_t v31 = *(void *)(v49 + 8 * v22++);
              if (v31)
              {
                int64_t v30 = v22 + 4;
                goto LABEL_12;
              }
            }
            unint64_t v32 = v48;
          }
        }
      }
    }
    uint64_t v33 = sub_1005057FC(&qword_10168DAE0);
    (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56))(v12, 1, 1, v33);
    unint64_t v20 = 0;
    unint64_t v22 = v32;
  }
  __break(1u);
}

uint64_t sub_100A621E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(void *)(v5 + 16) = a4;
  *(void *)(v5 + 24) = a5;
  return _swift_task_switch(sub_100A62208, 0, 0);
}

uint64_t sub_100A62208()
{
  uint64_t v1 = v0[3];
  uint64_t v2 = *(void *)(v0[2] + 16);
  uint64_t v3 = swift_task_alloc();
  v0[4] = v3;
  *(void *)(v3 + 16) = v1;
  *(void *)(v3 + 24) = v2;
  int v4 = (void *)swift_task_alloc();
  v0[5] = v4;
  *int v4 = v0;
  v4[1] = sub_1006DA938;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v4, 0, 0, 0xD00000000000002FLL, 0x800000010126BBF0, sub_100A64720, v3, (char *)&type metadata for () + 8);
}

void sub_100A62300(uint64_t a1)
{
  uint64_t v140 = type metadata accessor for CRLBoardIdentifierStorage(0);
  __chkstk_darwin(v140, v2);
  v139 = (char *)&v126 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1005057FC((uint64_t *)&unk_101674520);
  __chkstk_darwin(v4 - 8, v5);
  uint64_t v7 = (char *)&v126 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for UUID();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8, v10);
  v147 = (char *)&v126 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12, v13);
  v154 = (char *)&v126 - v14;
  __chkstk_darwin(v15, v16);
  v146 = (char *)&v126 - v17;
  uint64_t v18 = type metadata accessor for CRLBoardIdentifier(0);
  uint64_t v130 = *(void *)(v18 - 8);
  __chkstk_darwin(v18 - 8, v19);
  uint64_t v127 = (uint64_t)&v126 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21, v22);
  uint64_t v133 = (uint64_t)&v126 - v23;
  __chkstk_darwin(v24, v25);
  uint64_t v138 = (uint64_t)&v126 - v26;
  __chkstk_darwin(v27, v28);
  uint64_t v137 = (uint64_t)&v126 - v29;
  uint64_t v129 = v30;
  __chkstk_darwin(v31, v32);
  uint64_t v34 = (char *)&v126 - v33;
  uint64_t v35 = type metadata accessor for CRLZoneSyncResultScenarios();
  uint64_t v148 = *(void *)(v35 - 8);
  __chkstk_darwin(v35 - 8, v36);
  uint64_t v134 = (uint64_t)&v126 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v38, v39);
  uint64_t v41 = (char *)&v126 - v40;
  uint64_t v42 = sub_1005057FC(&qword_10168DAD8);
  __chkstk_darwin(v42 - 8, v43);
  uint64_t v45 = (int64_t *)((char *)&v126 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v46, v47);
  uint64_t v49 = (void **)((char *)&v126 - v48);
  v159 = &_swiftEmptySetSingleton;
  uint64_t v50 = *(void *)(a1 + 64);
  uint64_t v132 = a1 + 64;
  uint64_t v51 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v52 = -1;
  if (v51 < 64) {
    uint64_t v52 = ~(-1 << v51);
  }
  unint64_t v53 = v52 & v50;
  int64_t v142 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
  v145 = (unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48);
  v144 = (void (**)(char *, char *, uint64_t))(v9 + 32);
  v136 = (void (**)(char *, char *, uint64_t))(v9 + 16);
  v143 = CKCurrentUserDefaultName;
  v135 = (void (**)(char *, uint64_t))(v9 + 8);
  v128 = v158;
  int64_t v141 = (unint64_t)(v51 + 63) >> 6;
  int64_t v126 = v141 - 1;
  uint64_t v149 = a1;
  swift_bridgeObjectRetain();
  int64_t v155 = 0;
  v150 = v7;
  uint64_t v156 = v8;
  v152 = v41;
  v153 = v49;
  int64_t v151 = v45;
  while (1)
  {
    if (v53)
    {
      unint64_t v54 = __clz(__rbit64(v53));
      v53 &= v53 - 1;
      unint64_t v55 = v54 | (v155 << 6);
LABEL_8:
      uint64_t v56 = *(void *)(v149 + 56);
      uint64_t v57 = *(void **)(*(void *)(v149 + 48) + 8 * v55);
      *uint64_t v45 = v57;
      uint64_t v58 = v56 + *(void *)(v148 + 72) * v55;
      uint64_t v59 = sub_1005057FC(&qword_10168DAE0);
      sub_100A6443C(v58, (uint64_t)v45 + *(int *)(v59 + 48), (uint64_t (*)(void))type metadata accessor for CRLZoneSyncResultScenarios);
      (*(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v59 - 8) + 56))(v45, 0, 1, v59);
      id v60 = v57;
      goto LABEL_27;
    }
    int64_t v61 = v155 + 1;
    if (__OFADD__(v155, 1))
    {
      __break(1u);
LABEL_75:
      __break(1u);
LABEL_76:
      __break(1u);
      swift_once();
      swift_beginAccess();
      int64_t v116 = (void *)static OS_os_log.dataSync;
      sub_1005057FC((uint64_t *)&unk_101672B40);
      uint64_t inited = swift_initStackObject();
      v118 = (void *)inited;
      *(_OWORD *)(inited + 16) = xmmword_10117D8C0;
      if (*(unsigned char *)(v131 + 24)) {
        uint64_t v119 = 0x5320646572616853;
      }
      else {
        uint64_t v119 = 0x2065746176697250;
      }
      if (*(unsigned char *)(v131 + 24)) {
        unint64_t v120 = 0xEC00000065706F63;
      }
      else {
        unint64_t v120 = 0xED000065706F6353;
      }
      *(void *)(inited + 56) = &type metadata for String;
      unint64_t v121 = sub_100528BE4();
      v118[8] = v121;
      v118[4] = v119;
      v118[5] = v120;
      swift_getErrorValue();
      id v122 = v116;
      uint64_t v123 = Error.localizedDescription.getter();
      v118[12] = &type metadata for String;
      v118[13] = v121;
      v118[9] = v123;
      v118[10] = v124;
      uint64_t v125 = static os_log_type_t.error.getter();
      sub_100BAC898((uint64_t)v122, (uint64_t)&_mh_execute_header, v125, (uint64_t)"<%{public}@> Failed to remove board identifiers from sync reset boards with error %@", 84, 2, (uint64_t)v118);
      swift_setDeallocating();
      sub_1005057FC(&qword_101672B50);
      swift_arrayDestroy();

      swift_errorRelease();
LABEL_73:
      sub_100A60AC8(v149, 0);
      return;
    }
    if (v61 < v141)
    {
      unint64_t v62 = *(void *)(v132 + 8 * v61);
      if (v62) {
        goto LABEL_12;
      }
      int64_t v63 = v155 + 2;
      ++v155;
      if (v61 + 1 < v141)
      {
        unint64_t v62 = *(void *)(v132 + 8 * v63);
        if (v62) {
          goto LABEL_15;
        }
        int64_t v155 = v61 + 1;
        if (v61 + 2 < v141)
        {
          unint64_t v62 = *(void *)(v132 + 8 * (v61 + 2));
          if (v62)
          {
            v61 += 2;
            goto LABEL_12;
          }
          int64_t v63 = v61 + 3;
          int64_t v155 = v61 + 2;
          if (v61 + 3 < v141) {
            break;
          }
        }
      }
    }
LABEL_26:
    uint64_t v64 = sub_1005057FC(&qword_10168DAE0);
    (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v64 - 8) + 56))(v45, 1, 1, v64);
    unint64_t v53 = 0;
LABEL_27:
    sub_100A64350((uint64_t)v45, (uint64_t)v49);
    uint64_t v65 = sub_1005057FC(&qword_10168DAE0);
    if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(*(void *)(v65 - 8) + 48))(v49, 1, v65) == 1)
    {
      uint64_t v112 = swift_release();
      int64_t v113 = (int64_t)v159;
      __chkstk_darwin(v112, v114);
      *(&v126 - 2) = v115;
      *(&v126 - 1) = v113;
      OS_dispatch_queue.sync<A>(execute:)();
      swift_bridgeObjectRelease();
      goto LABEL_73;
    }
    char v66 = v34;
    uint64_t v67 = *v49;
    sub_100A643D4((uint64_t)v49 + *(int *)(v65 + 48), (uint64_t)v41, (uint64_t (*)(void))type metadata accessor for CRLZoneSyncResultScenarios);
    id v68 = [v67 zoneName];
    uint64_t v69 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v71 = v70;

    v72._countAndFlagsBits = 0x5F6472616F42;
    v72._object = (void *)0xE600000000000000;
    if (String.hasPrefix(_:)(v72))
    {
      if ((v71 & 0x2000000000000000) != 0) {
        uint64_t v73 = HIBYTE(v71) & 0xF;
      }
      else {
        uint64_t v73 = v69 & 0xFFFFFFFFFFFFLL;
      }
      if (!v73)
      {
LABEL_4:
        swift_bridgeObjectRelease();
        uint64_t v7 = v150;
        uint64_t v8 = v156;
        (*v142)(v150, 1, 1, v156);
        uint64_t v41 = v152;
        goto LABEL_5;
      }
      while (1)
      {
        unint64_t v74 = String.index(before:)();
        if (String.subscript.getter() == 95 && v75 == 0xE100000000000000) {
          break;
        }
        char v77 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        if (v77) {
          goto LABEL_42;
        }
        uint64_t v49 = v153;
        if (v74 < 0x4000) {
          goto LABEL_4;
        }
      }
      swift_bridgeObjectRelease();
LABEL_42:
      if (4 * v73 < (unint64_t)String.index(after:)() >> 14) {
        goto LABEL_75;
      }
      String.subscript.getter();
      swift_bridgeObjectRelease();
      uint64_t v49 = v153;
      static String._fromSubstring(_:)();
      swift_bridgeObjectRelease();
      uint64_t v7 = v150;
      UUID.init(uuidString:)();
      uint64_t v8 = v156;
      uint64_t v41 = v152;
    }
    else
    {
      (*v142)(v7, 1, 1, v8);
    }
    swift_bridgeObjectRelease();
    if ((*v145)(v7, 1, v8) == 1)
    {
LABEL_5:
      sub_100522F00((uint64_t)v7, (uint64_t *)&unk_101674520);
      sub_100A64798((uint64_t)v41, (uint64_t (*)(void))type metadata accessor for CRLZoneSyncResultScenarios);

      uint64_t v34 = v66;
      uint64_t v45 = v151;
    }
    else
    {
      char v78 = *v144;
      uint64_t v79 = v146;
      (*v144)(v146, v7, v8);
      unint64_t v80 = *v136;
      (*v136)(v154, v79, v8);
      id v81 = [v67 ownerName];
      uint64_t v82 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v84 = v83;

      if (v82 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v84 == v85)
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
        char v86 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v86 & 1) == 0)
        {
          id v89 = [v67 ownerName];
          uint64_t v87 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          unint64_t v88 = v90;

          goto LABEL_51;
        }
      }
      uint64_t v87 = 0;
      unint64_t v88 = 0xE000000000000000;
LABEL_51:
      v80(v147, v154, v156);
      if (v87 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v88 == v91)
      {
        swift_bridgeObjectRelease();
        uint64_t v34 = v66;
      }
      else
      {
        char v92 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        uint64_t v34 = v66;
        if ((v92 & 1) == 0) {
          goto LABEL_56;
        }
      }
      swift_bridgeObjectRelease();
      uint64_t v87 = 0;
      unint64_t v88 = 0xE000000000000000;
LABEL_56:
      uint64_t v8 = v156;
      uint64_t v93 = *v135;
      (*v135)(v154, v156);
      uint64_t v94 = (uint64_t)v139;
      v78(v139, v147, v8);
      v95 = (uint64_t *)(v94 + *(int *)(v140 + 20));
      uint64_t *v95 = v87;
      v95[1] = v88;
      uint64_t v96 = v138;
      sub_100A643D4(v94, v138, type metadata accessor for CRLBoardIdentifierStorage);
      uint64_t v97 = v96;
      uint64_t v98 = v137;
      sub_100A643D4(v97, v137, type metadata accessor for CRLBoardIdentifier);
      v93(v146, v8);
      sub_100A643D4(v98, (uint64_t)v34, type metadata accessor for CRLBoardIdentifier);
      uint64_t v41 = v152;
      if (v152[2])
      {
        uint64_t v99 = *(char **)(v131 + 16);
        uint64_t v100 = *(NSObject **)&v99[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore_writeQueue];
        uint64_t v101 = v133;
        sub_100A6443C((uint64_t)v34, v133, type metadata accessor for CRLBoardIdentifier);
        unint64_t v102 = (*(unsigned __int8 *)(v130 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v130 + 80);
        uint64_t v103 = swift_allocObject();
        *(unsigned char *)(v103 + 16) = 1;
        *(void *)(v103 + 24) = v99;
        sub_100A643D4(v101, v103 + v102, type metadata accessor for CRLBoardIdentifier);
        uint64_t v104 = swift_allocObject();
        *(void *)(v104 + 16) = sub_100A6459C;
        *(void *)(v104 + 24) = v103;
        v158[2] = sub_1006591F0;
        v158[3] = v104;
        aBlock[0] = _NSConcreteStackBlock;
        aBlock[1] = *(void *)"";
        v158[0] = sub_1006D9628;
        v158[1] = &unk_10151F9D8;
        unint64_t v105 = _Block_copy(aBlock);
        int64_t v106 = v99;
        swift_retain();
        swift_release();
        dispatch_sync(v100, v105);
        _Block_release(v105);
        LOBYTE(v100) = swift_isEscapingClosureAtFileLocation();
        swift_release();
        swift_release();
        if (v100) {
          goto LABEL_76;
        }
        uint64_t v41 = v152;
        char v107 = v152[2];
        uint64_t v108 = v134;
        sub_100A6443C((uint64_t)v152, v134, (uint64_t (*)(void))type metadata accessor for CRLZoneSyncResultScenarios);
        uint64_t v8 = v156;
        if (v107)
        {

          sub_100A64798(v108, (uint64_t (*)(void))type metadata accessor for CRLZoneSyncResultScenarios);
          uint64_t v7 = v150;
          goto LABEL_63;
        }
      }
      else
      {
        uint64_t v108 = v134;
        sub_100A6443C((uint64_t)v152, v134, (uint64_t (*)(void))type metadata accessor for CRLZoneSyncResultScenarios);
      }
      char v109 = *(unsigned char *)(v108 + 1);
      sub_100A64798(v108, (uint64_t (*)(void))type metadata accessor for CRLZoneSyncResultScenarios);
      uint64_t v7 = v150;
      if (v109)
      {

LABEL_63:
        uint64_t v45 = v151;
        uint64_t v49 = v153;
        sub_100A64798((uint64_t)v34, type metadata accessor for CRLBoardIdentifier);
        sub_100A64798((uint64_t)v41, (uint64_t (*)(void))type metadata accessor for CRLZoneSyncResultScenarios);
      }
      else
      {
        uint64_t v110 = v127;
        sub_100A6443C((uint64_t)v34, v127, type metadata accessor for CRLBoardIdentifier);
        uint64_t v111 = v133;
        sub_100CB7090(v133, v110);

        sub_100A64798(v111, type metadata accessor for CRLBoardIdentifier);
        sub_100A64798((uint64_t)v34, type metadata accessor for CRLBoardIdentifier);
        sub_100A64798((uint64_t)v41, (uint64_t (*)(void))type metadata accessor for CRLZoneSyncResultScenarios);
        uint64_t v45 = v151;
        uint64_t v49 = v153;
      }
    }
  }
  unint64_t v62 = *(void *)(v132 + 8 * v63);
  if (v62)
  {
LABEL_15:
    int64_t v61 = v63;
LABEL_12:
    unint64_t v53 = (v62 - 1) & v62;
    unint64_t v55 = __clz(__rbit64(v62)) + (v61 << 6);
    int64_t v155 = v61;
    goto LABEL_8;
  }
  while (1)
  {
    int64_t v61 = v63 + 1;
    if (__OFADD__(v63, 1)) {
      break;
    }
    if (v61 >= v141)
    {
      int64_t v155 = v126;
      goto LABEL_26;
    }
    unint64_t v62 = *(void *)(v132 + 8 * v61);
    ++v63;
    if (v62) {
      goto LABEL_12;
    }
  }
  __break(1u);
}

Swift::Int sub_100A63554()
{
  sub_1002094A4();
  sub_1005057FC(&qword_101672BF8);
  OS_dispatch_queue.sync<A>(execute:)();
  swift_retain();
  return sub_100A63AB0(v2, v0);
}

uint64_t sub_100A63788(id *a1, uint64_t a2)
{
  id v2 = *a1;
  char v3 = *(unsigned char *)(a2 + 24);
  id v4 = [*a1 ownerName];
  uint64_t v5 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v7 = v6;

  BOOL v10 = v5 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v7 == v8;
  if (v3)
  {
    if (v10)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      char v11 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v11 & 1) == 0)
      {
        id v15 = [v2 ownerName];
        uint64_t v16 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        unint64_t v12 = v17;

        if (v16) {
          goto LABEL_19;
        }
        goto LABEL_17;
      }
    }
    unint64_t v12 = 0xE000000000000000;
LABEL_17:
    if (v12 == 0xE000000000000000)
    {
      swift_bridgeObjectRelease();
      char v18 = 0;
      return v18 & 1;
    }
LABEL_19:
    char v19 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    char v18 = v19 ^ 1;
    return v18 & 1;
  }
  if (v10)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v13 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v13 & 1) == 0)
    {
      id v20 = [v2 ownerName];
      uint64_t v21 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v14 = v22;

      if (v21) {
        goto LABEL_24;
      }
      goto LABEL_21;
    }
  }
  unint64_t v14 = 0xE000000000000000;
LABEL_21:
  if (v14 == 0xE000000000000000)
  {
    swift_bridgeObjectRelease();
    char v18 = 1;
    return v18 & 1;
  }
LABEL_24:
  char v24 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  return v24 & 1;
}

uint64_t sub_100A639A8()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for CRLDatabaseSyncDataSource()
{
  return self;
}

uint64_t sub_100A63A04(uint64_t a1)
{
  uint64_t v5 = (uint64_t (*)(uint64_t))((char *)&dword_10168DAD0 + dword_10168DAD0);
  char v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *char v3 = v1;
  v3[1] = sub_100528488;
  return v5(a1);
}

Swift::Int sub_100A63AB0(uint64_t a1, uint64_t a2)
{
  if ((a1 & 0xC000000000000001) != 0)
  {
    id v4 = &_swiftEmptySetSingleton;
    id v20 = &_swiftEmptySetSingleton;
    swift_retain();
    __CocoaSet.makeIterator()();
    if (__CocoaSet.Iterator.next()())
    {
      id v4 = (void *)sub_10050BF48(0, (unint64_t *)&qword_101674210);
      do
      {
        swift_dynamicCast();
        char v5 = sub_100A63788(&v19, a2);
        if (v2)
        {
          swift_release();

          swift_release_n();
          swift_release();
          return (Swift::Int)v4;
        }
        id v6 = v19;
        if (v5)
        {
          uint64_t v7 = v20;
          unint64_t v8 = v20[2];
          if (v20[3] <= v8)
          {
            sub_100CC24E8(v8 + 1);
            uint64_t v7 = v20;
          }
          Swift::Int result = NSObject._rawHashValue(seed:)(v7[5]);
          BOOL v10 = v7 + 7;
          uint64_t v11 = -1 << *((unsigned char *)v7 + 32);
          unint64_t v12 = result & ~v11;
          unint64_t v13 = v12 >> 6;
          if (((-1 << v12) & ~v7[(v12 >> 6) + 7]) != 0)
          {
            unint64_t v14 = __clz(__rbit64((-1 << v12) & ~v7[(v12 >> 6) + 7])) | v12 & 0x7FFFFFFFFFFFFFC0;
          }
          else
          {
            char v15 = 0;
            unint64_t v16 = (unint64_t)(63 - v11) >> 6;
            do
            {
              if (++v13 == v16 && (v15 & 1) != 0)
              {
                __break(1u);
                return result;
              }
              BOOL v17 = v13 == v16;
              if (v13 == v16) {
                unint64_t v13 = 0;
              }
              v15 |= v17;
              uint64_t v18 = v10[v13];
            }
            while (v18 == -1);
            unint64_t v14 = __clz(__rbit64(~v18)) + (v13 << 6);
          }
          *(void *)((char *)v10 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
          *(void *)(v7[6] + 8 * v14) = v6;
          ++v7[2];
        }
        else
        {
        }
      }
      while (__CocoaSet.Iterator.next()());
      id v4 = v20;
    }
    swift_release_n();
    swift_release();
  }
  else
  {
    id v4 = (void *)sub_100A63F08(a1, a2);
    swift_release();
  }
  return (Swift::Int)v4;
}

void sub_100A63D20(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int64_t v7 = 0;
  uint64_t v8 = a3 + 56;
  uint64_t v9 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v10 = -1;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  unint64_t v11 = v10 & *(void *)(a3 + 56);
  uint64_t v21 = 0;
  int64_t v22 = (unint64_t)(v9 + 63) >> 6;
  while (v11)
  {
    unint64_t v12 = __clz(__rbit64(v11));
    v11 &= v11 - 1;
    unint64_t v13 = v12 | (v7 << 6);
LABEL_17:
    id v23 = *(id *)(*(void *)(a3 + 48) + 8 * v13);
    id v17 = v23;
    char v18 = sub_100A63788(&v23, a4);

    if (v4) {
      return;
    }
    if (v18)
    {
      *(unint64_t *)((char *)a1 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      BOOL v14 = __OFADD__(v21++, 1);
      if (v14) {
        goto LABEL_30;
      }
    }
  }
  BOOL v14 = __OFADD__(v7++, 1);
  if (v14)
  {
    __break(1u);
    goto LABEL_29;
  }
  if (v7 >= v22) {
    goto LABEL_26;
  }
  unint64_t v15 = *(void *)(v8 + 8 * v7);
  if (v15)
  {
LABEL_16:
    unint64_t v11 = (v15 - 1) & v15;
    unint64_t v13 = __clz(__rbit64(v15)) + (v7 << 6);
    goto LABEL_17;
  }
  int64_t v16 = v7 + 1;
  if (v7 + 1 >= v22) {
    goto LABEL_26;
  }
  unint64_t v15 = *(void *)(v8 + 8 * v16);
  if (v15) {
    goto LABEL_15;
  }
  int64_t v16 = v7 + 2;
  if (v7 + 2 >= v22) {
    goto LABEL_26;
  }
  unint64_t v15 = *(void *)(v8 + 8 * v16);
  if (v15) {
    goto LABEL_15;
  }
  int64_t v16 = v7 + 3;
  if (v7 + 3 >= v22)
  {
LABEL_26:
    swift_retain();
    sub_10052C218(a1, a2, v21, a3);
    return;
  }
  unint64_t v15 = *(void *)(v8 + 8 * v16);
  if (v15)
  {
LABEL_15:
    int64_t v7 = v16;
    goto LABEL_16;
  }
  while (1)
  {
    int64_t v7 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v7 >= v22) {
      goto LABEL_26;
    }
    unint64_t v15 = *(void *)(v8 + 8 * v7);
    ++v16;
    if (v15) {
      goto LABEL_16;
    }
  }
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
}

uint64_t sub_100A63F08(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  char v6 = *(unsigned char *)(a1 + 32);
  unsigned int v7 = v6 & 0x3F;
  unint64_t v8 = (unint64_t)((1 << v6) + 63) >> 6;
  size_t v9 = 8 * v8;
  uint64_t isStackAllocationSafe = swift_retain_n();
  if (v7 <= 0xD || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    __chkstk_darwin(isStackAllocationSafe, v11);
    bzero((char *)&v17 - ((v9 + 15) & 0x3FFFFFFFFFFFFFF0), v9);
    swift_retain();
    sub_100A63D20((unint64_t *)((char *)&v17 - ((v9 + 15) & 0x3FFFFFFFFFFFFFF0)), v8, a1, a2);
    uint64_t v13 = v12;
    swift_release();
    swift_release();
    if (v3) {
      swift_willThrow();
    }
    swift_release_n();
  }
  else
  {
    BOOL v14 = (void *)swift_slowAlloc();
    bzero(v14, v9);
    swift_retain();
    sub_100A63D20((unint64_t *)v14, v8, a1, a2);
    uint64_t v13 = v15;
    swift_release();
    swift_release();
    swift_slowDealloc();
    swift_release_n();
  }
  return v13;
}

uint64_t sub_100A640D4(uint64_t a1)
{
  *(void *)(v2 + 112) = a1;
  *(void *)(v2 + 120) = v1;
  return _swift_task_switch(sub_100A640F4, 0, 0);
}

uint64_t sub_100A640F4()
{
  if (v0[14])
  {
    uint64_t v1 = *(void *)(v0[15] + 16);
    *(void *)(swift_task_alloc() + 16) = v1;
    OS_dispatch_queue.sync<A>(execute:)();
    swift_task_dealloc();
  }
  uint64_t v2 = (uint64_t (*)(void))v0[1];
  return v2();
}

void sub_100A64318()
{
  sub_100CB2260(*(void **)(v0 + 16));
}

uint64_t sub_100A64334@<X0>(uint64_t *a1@<X8>)
{
  return sub_100C7194C(*(void **)(v1 + 24), a1);
}

uint64_t sub_100A64350(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1005057FC(&qword_10168DAD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100A643B8()
{
  return sub_100CAE208(*(void **)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_100A643D4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_100A6443C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_100A644A4()
{
  uint64_t v1 = *(void *)(type metadata accessor for CRLBoardIdentifier(0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 32) & ~v2;
  uint64_t v4 = v3 + *(void *)(v1 + 64);
  uint64_t v5 = v2 | 7;

  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v0 + v3, v6);
  type metadata accessor for CRLBoardIdentifierStorage(0);
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, v4, v5);
}

uint64_t sub_100A6459C()
{
  uint64_t v1 = *(void *)(type metadata accessor for CRLBoardIdentifier(0) - 8);
  char v2 = *(unsigned char *)(v0 + 16);
  uint64_t v3 = *(void *)(v0 + 24);
  uint64_t v4 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));

  return sub_100CAE188(v2, v3, v4);
}

uint64_t sub_100A64604()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100A64614(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100A64624()
{
  return swift_release();
}

uint64_t sub_100A6462C()
{
  swift_unknownObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_100A64674()
{
  uint64_t v2 = swift_task_alloc();
  long long v3 = *(_OWORD *)(v0 + 32);
  *(void *)(v1 + 16) = v2;
  *(void *)uint64_t v2 = v1;
  *(void *)(v2 + 8) = sub_100528488;
  *(_OWORD *)(v2 + 16) = v3;
  return _swift_task_switch(sub_100A62208, 0, 0);
}

uint64_t sub_100A64720(uint64_t a1)
{
  return sub_100C8BEC8(a1, *(void *)(v1 + 16), *(char **)(v1 + 24));
}

uint64_t sub_100A64728()
{
  swift_bridgeObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

void sub_100A64768()
{
  sub_100A61A80(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24), *(void *)(v0 + 32));
}

void sub_100A64778()
{
}

uint64_t sub_100A64798(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_100A647F8@<X0>(uint64_t *a1@<X8>)
{
  return sub_100C884D0(*(void *)(v1 + 24), a1);
}

uint64_t sub_100A64814(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100A6485C()
{
  return _swift_deallocObject(v0, 25, 7);
}

uint64_t sub_100A64894()
{
  return sub_100CA9858(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24));
}

uint64_t sub_100A648A0()
{
  return _swift_deallocObject(v0, 32, 7);
}

void sub_100A648B0(void *a1@<X8>)
{
  sub_100C9C9CC(*(unsigned char *)(v1 + 24), a1);
}

void sub_100A648E0(uint64_t a1, uint64_t a2, float a3)
{
  unint64_t v6 = *(void *)(a1 + 16);
  unint64_t v7 = *(void *)(a2 + 16);
  if (v7 >= v6) {
    int64_t v8 = *(void *)(a1 + 16);
  }
  else {
    int64_t v8 = *(void *)(a2 + 16);
  }
  sub_1006BB524(0, v8, 0);
  int64_t v31 = v7;
  uint64_t v33 = a2;
  uint64_t v34 = a1;
  unint64_t v32 = v6;
  if (v8)
  {
    size_t v9 = (double *)(a1 + 32);
    uint64_t v10 = (double *)(a2 + 32);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    int64_t v11 = v8;
    while (v6)
    {
      if (!v7) {
        goto LABEL_26;
      }
      double v12 = *v9;
      double v13 = *v10;
      double v15 = _swiftEmptyArrayStorage[2];
      double v14 = _swiftEmptyArrayStorage[3];
      if (*(void *)&v15 >= *(void *)&v14 >> 1) {
        sub_1006BB524(*(void *)&v14 > 1uLL, *(void *)&v15 + 1, 1);
      }
      double v16 = sub_100065C88(v12, v13, a3);
      *(void *)&_swiftEmptyArrayStorage[2] = *(void *)&v15 + 1;
      _swiftEmptyArrayStorage[*(void *)&v15 + 4] = v16;
      --v7;
      --v6;
      ++v10;
      ++v9;
      if (!--v11) {
        goto LABEL_13;
      }
    }
    __break(1u);
LABEL_26:
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
LABEL_13:
    if (v32 <= v31)
    {
LABEL_24:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return;
    }
    uint64_t v17 = 0;
    double v18 = a3;
    if (v8 <= v31) {
      int64_t v19 = v31;
    }
    else {
      int64_t v19 = v8;
    }
    int64_t v20 = v19 - v8;
    unint64_t v21 = v32 - v8;
    int64_t v22 = v31 - v8;
    uint64_t v23 = 8 * v8 + 32;
    uint64_t v24 = v34 + v23;
    uint64_t v25 = v33 + v23;
    while (v21 != v17)
    {
      if (v22 == v17) {
        goto LABEL_24;
      }
      if (v20 == v17) {
        goto LABEL_28;
      }
      double v26 = *(double *)(v24 + 8 * v17);
      double v27 = *(double *)(v25 + 8 * v17);
      double v29 = _swiftEmptyArrayStorage[2];
      double v28 = _swiftEmptyArrayStorage[3];
      if (*(void *)&v29 >= *(void *)&v28 >> 1) {
        sub_1006BB524(*(void *)&v28 > 1uLL, *(void *)&v29 + 1, 1);
      }
      double v30 = sub_100065C88(v26, v27, v18);
      *(void *)&_swiftEmptyArrayStorage[2] = *(void *)&v29 + 1;
      _swiftEmptyArrayStorage[*(void *)&v29 + 4] = v30;
      if (v21 == ++v17) {
        goto LABEL_24;
      }
    }
  }
  __break(1u);
LABEL_28:
  __break(1u);
}

void sub_100A64B1C(uint64_t a1@<X0>, uint64_t a2@<X8>, float a3@<S0>)
{
  sub_100557A70(v3, (uint64_t)&v70);
  if (!*((void *)&v71 + 1)) {
    goto LABEL_6;
  }
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_7;
  }
  sub_100557A70(a1, (uint64_t)&v70);
  if (*((void *)&v71 + 1))
  {
    if (swift_dynamicCast())
    {
      double v7 = sub_100065C88(*(double *)&v62, *(double *)&v62, a3);
      *(void *)(a2 + 24) = &type metadata for CGFloat;
      *(double *)a2 = v7;
      return;
    }
  }
  else
  {
LABEL_6:
    sub_10052E2B0((uint64_t)&v70);
  }
LABEL_7:
  sub_100557A70(v3, (uint64_t)&v70);
  if (!*((void *)&v71 + 1))
  {
LABEL_12:
    sub_10052E2B0((uint64_t)&v70);
    goto LABEL_13;
  }
  type metadata accessor for CGPoint(0);
  uint64_t v9 = v8;
  if (swift_dynamicCast())
  {
    double v11 = *((double *)&v62 + 1);
    double v10 = *(double *)&v62;
    sub_100557A70(a1, (uint64_t)&v70);
    if (*((void *)&v71 + 1))
    {
      if (swift_dynamicCast()) {
        goto LABEL_23;
      }
      goto LABEL_13;
    }
    goto LABEL_12;
  }
LABEL_13:
  sub_100557A70(v3, (uint64_t)&v70);
  if (!*((void *)&v71 + 1)) {
    goto LABEL_18;
  }
  type metadata accessor for CGRect(0);
  uint64_t v13 = v12;
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_19;
  }
  sub_100557A70(a1, (uint64_t)&v70);
  if (*((void *)&v71 + 1))
  {
    if (swift_dynamicCast())
    {
      double v14 = sub_100065E1C(*(double *)&v62, *((double *)&v62 + 1), *(double *)&v63, *((double *)&v63 + 1), *(double *)&v62, *((double *)&v62 + 1), *(double *)&v63, *((double *)&v63 + 1), a3);
      uint64_t v16 = v15;
      uint64_t v18 = v17;
      uint64_t v20 = v19;
      *(void *)(a2 + 24) = v13;
      unint64_t v21 = (double *)swift_allocObject();
      *(void *)a2 = v21;
      v21[2] = v14;
      *((void *)v21 + 3) = v16;
      *((void *)v21 + 4) = v18;
      *((void *)v21 + 5) = v20;
      return;
    }
  }
  else
  {
LABEL_18:
    sub_10052E2B0((uint64_t)&v70);
  }
LABEL_19:
  sub_100557A70(v3, (uint64_t)&v70);
  if (!*((void *)&v71 + 1))
  {
LABEL_24:
    sub_10052E2B0((uint64_t)&v70);
    goto LABEL_25;
  }
  type metadata accessor for CGSize(0);
  uint64_t v9 = v22;
  if (swift_dynamicCast())
  {
    double v11 = *((double *)&v62 + 1);
    double v10 = *(double *)&v62;
    sub_100557A70(a1, (uint64_t)&v70);
    if (*((void *)&v71 + 1))
    {
      if (swift_dynamicCast())
      {
LABEL_23:
        double v23 = sub_100065E00(v10, v11, *(double *)&v62, *((double *)&v62 + 1), a3);
        *(void *)(a2 + 24) = v9;
        *(double *)a2 = v23;
        *(void *)(a2 + 8) = v24;
        return;
      }
      goto LABEL_25;
    }
    goto LABEL_24;
  }
LABEL_25:
  sub_100557A70(v3, (uint64_t)&v70);
  if (!*((void *)&v71 + 1)) {
    goto LABEL_30;
  }
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_31;
  }
  sub_100557A70(a1, (uint64_t)&v70);
  if (*((void *)&v71 + 1))
  {
    if (swift_dynamicCast())
    {
      float v25 = (float)((float)(1.0 - a3) * *(float *)&v62) + (float)(*(float *)&v62 * a3);
      *(void *)(a2 + 24) = &type metadata for Float;
      *(float *)a2 = v25;
      return;
    }
  }
  else
  {
LABEL_30:
    sub_10052E2B0((uint64_t)&v70);
  }
LABEL_31:
  sub_100557A70(v3, (uint64_t)v78);
  if (!v79)
  {
    double v29 = v78;
LABEL_38:
    sub_10052E2B0((uint64_t)v29);
    goto LABEL_39;
  }
  type metadata accessor for CATransform3D(0);
  uint64_t v27 = v26;
  if (swift_dynamicCast())
  {
    long long v66 = v74;
    long long v67 = v75;
    long long v68 = v76;
    long long v69 = v77;
    long long v62 = v70;
    long long v63 = v71;
    long long v64 = v72;
    long long v65 = v73;
    sub_100557A70(a1, (uint64_t)v60);
    if (v61)
    {
      if (swift_dynamicCast())
      {
        long long v55 = *(_OWORD *)&CATransform3DIdentity.m31;
        long long v56 = *(_OWORD *)&CATransform3DIdentity.m33;
        long long v57 = *(_OWORD *)&CATransform3DIdentity.m41;
        long long v58 = *(_OWORD *)&CATransform3DIdentity.m43;
        long long v51 = *(_OWORD *)&CATransform3DIdentity.m11;
        long long v52 = *(_OWORD *)&CATransform3DIdentity.m13;
        long long v53 = *(_OWORD *)&CATransform3DIdentity.m21;
        long long v54 = *(_OWORD *)&CATransform3DIdentity.m23;
        CATransform3DInterpolate();
        *(void *)(a2 + 24) = v27;
        double v28 = (_OWORD *)swift_allocObject();
        *(void *)a2 = v28;
        v28[5] = v55;
        v28[6] = v56;
        v28[7] = v57;
        v28[8] = v58;
        v28[1] = v51;
        v28[2] = v52;
        v28[3] = v53;
        v28[4] = v54;
        return;
      }
      goto LABEL_39;
    }
    double v29 = v60;
    goto LABEL_38;
  }
LABEL_39:
  sub_100557A70(v3, (uint64_t)&v62);
  if (!*((void *)&v63 + 1)) {
    goto LABEL_44;
  }
  type metadata accessor for CGAffineTransform(0);
  uint64_t v31 = v30;
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_45;
  }
  long long v32 = v70;
  long long v33 = v71;
  long long v34 = v72;
  sub_100557A70(a1, (uint64_t)&v62);
  if (*((void *)&v63 + 1))
  {
    if (swift_dynamicCast())
    {
      long long v35 = v70;
      long long v36 = v71;
      long long v37 = v72;
      long long v70 = v32;
      long long v71 = v33;
      long long v72 = v34;
      long long v62 = v35;
      long long v63 = v36;
      long long v64 = v37;
      sub_100080274(&v70, &v62, (uint64_t)v59, a3);
      long long v49 = v59[1];
      long long v50 = v59[0];
      long long v38 = v59[2];
      *(void *)(a2 + 24) = v31;
      uint64_t v39 = (_OWORD *)swift_allocObject();
      *(void *)a2 = v39;
      v39[1] = v50;
      v39[2] = v49;
      v39[3] = v38;
      return;
    }
  }
  else
  {
LABEL_44:
    sub_10052E2B0((uint64_t)&v62);
  }
LABEL_45:
  sub_1005057FC(&qword_101672BF0);
  uint64_t v40 = (const void *)Optional._bridgeToObjectiveC()();
  CFTypeID v41 = CFGetTypeID(v40);
  swift_unknownObjectRelease();
  if (v41 == CGColorGetTypeID())
  {
    sub_100557A70(v3, (uint64_t)&v62);
    if (*((void *)&v63 + 1))
    {
      sub_100575CE8(&v62, &v70);
      type metadata accessor for CGColor(0);
      uint64_t v43 = v42;
      swift_dynamicCast();
      uint64_t v44 = *(void **)&v59[0];
      sub_100557A70(a1, (uint64_t)&v62);
      if (*((void *)&v63 + 1))
      {
        sub_100575CE8(&v62, &v70);
        swift_dynamicCast();
        uint64_t v45 = *(void **)&v59[0];
        sub_100A65300(*(void **)&v59[0], a3);
        uint64_t v47 = v46;
        *(void *)(a2 + 24) = v43;

        *(void *)a2 = v47;
        return;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
  }
  else
  {
    if (lroundf(a3) < 1) {
      uint64_t v48 = v3;
    }
    else {
      uint64_t v48 = a1;
    }
    sub_100A65294(v48, a2);
  }
}

uint64_t sub_100A65294(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  if (v3)
  {
    *(void *)(a2 + 24) = v3;
    (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  }
  else
  {
    long long v4 = *(_OWORD *)(a1 + 16);
    *(_OWORD *)a2 = *(_OWORD *)a1;
    *(_OWORD *)(a2 + 16) = v4;
  }
  return a2;
}

void sub_100A65300(void *a1, float a2)
{
  swift_getObjectType();
  uint64_t v4 = CGColorRef.components.getter();
  if (!v4)
  {
LABEL_10:
    if (lroundf(a2) <= 0)
    {
      uint64_t v16 = color;
    }
    else
    {
      swift_dynamicCastUnknownClassUnconditional();
      id v15 = a1;
    }
    return;
  }
  uint64_t v5 = v4;
  uint64_t v6 = CGColorRef.components.getter();
  if (!v6)
  {
    swift_bridgeObjectRelease();
    goto LABEL_10;
  }
  uint64_t v7 = v6;
  uint64_t v8 = CGColorGetColorSpace(color);
  uint64_t v9 = CGColorGetColorSpace((CGColorRef)a1);
  if (lroundf(a2) <= 0) {
    double v10 = v8;
  }
  else {
    double v10 = v9;
  }
  double v11 = v10;

  if (v11)
  {
    sub_100A648E0(v5, v7, a2);
    uint64_t v13 = v12;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    CGColorRef v14 = CGColorCreate(v11, (const CGFloat *)(v13 + 32));

    swift_bridgeObjectRelease();
    if (v14)
    {
      swift_dynamicCastUnknownClassUnconditional();
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

uint64_t sub_100A6549C()
{
  return _swift_deallocObject(v0, 64, 7);
}

uint64_t sub_100A654AC()
{
  return _swift_deallocObject(v0, 144, 7);
}

uint64_t sub_100A654BC()
{
  return _swift_deallocObject(v0, 48, 7);
}

uint64_t destroy for InterpolatableAny(uint64_t a1)
{
  if (*(void *)(a1 + 24)) {
    return _s8Freeform26AnyCRLCommandChangeContextVwxx_0(a1);
  }
  return a1;
}

uint64_t initializeWithCopy for InterpolatableAny(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 24);
  if (v3)
  {
    *(void *)(a1 + 24) = v3;
    (**(void (***)(uint64_t))(v3 - 8))(a1);
  }
  else
  {
    long long v4 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v4;
  }
  return a1;
}

uint64_t assignWithCopy for InterpolatableAny(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 24);
  if (!*(void *)(a1 + 24))
  {
    if (v4)
    {
      *(void *)(a1 + 24) = v4;
      (**(void (***)(uint64_t, uint64_t))(v4 - 8))(a1, a2);
      return a1;
    }
LABEL_7:
    long long v5 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v5;
    return a1;
  }
  if (!v4)
  {
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(a1);
    goto LABEL_7;
  }
  sub_10082092C((uint64_t *)a1, (uint64_t *)a2);
  return a1;
}

uint64_t assignWithTake for InterpolatableAny(uint64_t a1, _OWORD *a2)
{
  if (*(void *)(a1 + 24)) {
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(a1);
  }
  long long v4 = a2[1];
  *(_OWORD *)a1 = *a2;
  *(_OWORD *)(a1 + 16) = v4;
  return a1;
}

uint64_t getEnumTagSinglePayload for InterpolatableAny(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 32)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 24);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for InterpolatableAny(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)uint64_t result = a2 - 0x7FFFFFFF;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 32) = 0;
    }
    if (a2) {
      *(void *)(result + 24) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for InterpolatableAny()
{
  return &type metadata for InterpolatableAny;
}

id sub_100A65734()
{
  id result = [objc_allocWithZone((Class)type metadata accessor for CRLApplicationCoordinator()) init];
  qword_10168DB10 = (uint64_t)result;
  return result;
}

void sub_100A657C0()
{
  id v1 = [self defaultCenter];
  [v1 addObserver:v0 selector:"applicationWillEnterForeground" name:UIApplicationWillEnterForegroundNotification object:0];
  [v1 addObserver:v0 selector:"applicationDidBecomeActive" name:UIApplicationDidBecomeActiveNotification object:0];
  [v1 addObserver:v0 selector:"applicationDidEnterBackground" name:UIApplicationDidEnterBackgroundNotification object:0];
  [v1 addObserver:v0 selector:"applicationWillTerminate" name:UIApplicationWillTerminateNotification object:0];
}

id sub_100A65998()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLApplicationCoordinator();
  return [super dealloc];
}

uint64_t type metadata accessor for CRLApplicationCoordinator()
{
  return self;
}

uint64_t sub_100A659F4()
{
  id v0 = [self mainBundle];
  NSString v1 = String._bridgeToObjectiveC()();
  id v2 = [v0 objectForInfoDictionaryKey:v1];

  if (v2)
  {
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
  }
  else
  {
    long long v15 = 0u;
    long long v16 = 0u;
  }
  sub_10052E248((uint64_t)&v15, (uint64_t)v17);
  if (v18)
  {
    if (swift_dynamicCast())
    {
      uint64_t v4 = v13;
      unint64_t v3 = v14;
      goto LABEL_9;
    }
  }
  else
  {
    sub_10052E2B0((uint64_t)v17);
  }
  unint64_t v3 = 0xE100000000000000;
  uint64_t v4 = 63;
LABEL_9:
  NSString v5 = String._bridgeToObjectiveC()();
  id v6 = [v0 objectForInfoDictionaryKey:v5];

  if (v6)
  {
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
  }
  else
  {
    long long v15 = 0u;
    long long v16 = 0u;
  }
  sub_10052E248((uint64_t)&v15, (uint64_t)v17);
  if (!v18)
  {
    sub_10052E2B0((uint64_t)v17);
    goto LABEL_16;
  }
  if (!swift_dynamicCast())
  {
LABEL_16:
    unint64_t v7 = 0xE100000000000000;
    uint64_t v8 = 63;
    goto LABEL_17;
  }
  uint64_t v8 = v13;
  unint64_t v7 = v14;
LABEL_17:
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_10117DF40;
  *(void *)(v9 + 56) = &type metadata for String;
  unint64_t v10 = sub_100528BE4();
  *(void *)(v9 + 32) = v4;
  *(void *)(v9 + 40) = v3;
  *(void *)(v9 + 96) = &type metadata for String;
  *(void *)(v9 + 104) = v10;
  *(void *)(v9 + 64) = v10;
  *(void *)(v9 + 72) = v8;
  *(void *)(v9 + 80) = v7;
  *(void *)(v9 + 136) = &type metadata for String;
  *(void *)(v9 + 144) = v10;
  *(void *)(v9 + 112) = 0;
  *(void *)(v9 + 120) = 0xE000000000000000;
  uint64_t v11 = String.init(format:_:)();

  return v11;
}

unint64_t sub_100A65C54()
{
  unint64_t result = qword_10168DB58;
  if (!qword_10168DB58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168DB58);
  }
  return result;
}

uint64_t sub_100A65CA8@<X0>(uint64_t *a1@<X8>)
{
  long long v75 = a1;
  uint64_t v1 = sub_1005057FC(&qword_101678010);
  __chkstk_darwin(v1 - 8, v2);
  long long v68 = &v53[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v74 = type metadata accessor for InputConnectionBehavior();
  uint64_t v76 = *(void *)(v74 - 8);
  __chkstk_darwin(v74, v4);
  long long v73 = &v53[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = sub_1005057FC(&qword_101673B38);
  __chkstk_darwin(v6 - 8, v7);
  long long v67 = &v53[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v9, v10);
  long long v72 = &v53[-v11];
  uint64_t v12 = sub_1005057FC(&qword_101691F20);
  __chkstk_darwin(v12 - 8, v13);
  long long v71 = &v53[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v15 = sub_1005057FC(&qword_101673B40);
  __chkstk_darwin(v15 - 8, v16);
  long long v57 = &v53[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v18 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v19 = *(void *)(v18 - 8);
  __chkstk_darwin(v18, v20);
  uint64_t v22 = &v53[-((v21 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v23 = type metadata accessor for Locale();
  __chkstk_darwin(v23 - 8, v24);
  uint64_t v25 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v25 - 8, v26);
  uint64_t v27 = type metadata accessor for LocalizedStringResource();
  uint64_t v65 = v27;
  uint64_t v28 = *(void *)(v27 - 8);
  __chkstk_darwin(v27, v29);
  long long v70 = &v53[-((v30 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v31, v32);
  long long v69 = &v53[-v33];
  uint64_t v63 = sub_1005057FC(&qword_101673B48);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t v34 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  long long v35 = *(void (**)(unsigned char *, uint64_t, uint64_t))(v19 + 104);
  v35(v22, enum case for LocalizedStringResource.BundleDescription.main(_:), v18);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  unsigned int v54 = v34;
  uint64_t v36 = v18;
  uint64_t v55 = v18;
  v35(v22, v34, v18);
  long long v56 = v35;
  long long v37 = v57;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  long long v38 = *(void (**)(unsigned char *, void, uint64_t, uint64_t))(v28 + 56);
  uint64_t v64 = v28 + 56;
  long long v66 = v38;
  v38(v37, 0, 1, v27);
  uint64_t v39 = type metadata accessor for CRLBoardEntity();
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v39 - 8) + 56))(v71, 1, 1, v39);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  v35(v22, v34, v36);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  uint64_t v40 = v72;
  IntentDialog.init(_:)();
  uint64_t v41 = type metadata accessor for IntentDialog();
  uint64_t v60 = v41;
  uint64_t v42 = *(void *)(v41 - 8);
  uint64_t v43 = *(void (**)(unsigned char *, void, uint64_t, uint64_t))(v42 + 56);
  uint64_t v62 = v42 + 56;
  uint64_t v61 = v43;
  v43(v40, 0, 1, v41);
  v43(v67, 1, 1, v41);
  unsigned int v58 = enum case for InputConnectionBehavior.default(_:);
  uint64_t v44 = *(void (**)(void))(v76 + 104);
  v76 += 104;
  uint64_t v59 = (void (*)(unsigned char *, void, uint64_t))v44;
  v44(v73);
  sub_100651FFC((unint64_t *)&qword_101673B60, (void (*)(uint64_t))type metadata accessor for CRLBoardEntity);
  uint64_t *v75 = IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:)();
  long long v71 = (unsigned char *)sub_1005057FC(&qword_10168DB88);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t v45 = v54;
  uint64_t v46 = v55;
  uint64_t v47 = v56;
  v56(v22, v54, v55);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  v47(v22, v45, v46);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  v66(v37, 0, 1, v65);
  uint64_t v48 = type metadata accessor for String.IntentInputOptions();
  uint64_t v79 = 0;
  uint64_t v80 = 0;
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v48 - 8) + 56))(v68, 1, 1, v48);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  v47(v22, v45, v46);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  long long v49 = v72;
  IntentDialog.init(_:)();
  v61(v49, 0, 1, v60);
  v59(v73, v58, v74);
  uint64_t v50 = IntentParameter<>.init(title:description:default:inputOptions:requestValueDialog:inputConnectionBehavior:)();
  long long v51 = v75;
  v75[1] = v50;
  sub_1005057FC(&qword_101673B50);
  unint64_t v77 = 0xD00000000000001FLL;
  unint64_t v78 = 0x800000010123B260;
  AnyHashable.init<A>(_:)();
  type metadata accessor for AppDependencyManager();
  static AppDependencyManager.shared.getter();
  uint64_t result = AppDependency.__allocating_init(key:manager:)();
  v51[2] = result;
  v51[6] = (uint64_t)&type metadata for CRLRenameBoardIntentPerformer;
  v51[7] = (uint64_t)&off_101517150;
  return result;
}

uint64_t sub_100A66714(uint64_t a1)
{
  v2[32] = a1;
  v2[33] = v1;
  type metadata accessor for LocalizedStringResource();
  v2[34] = swift_task_alloc();
  sub_1005057FC(&qword_101673B38);
  v2[35] = swift_task_alloc();
  sub_1005057FC(&qword_101672C30);
  v2[36] = swift_task_alloc();
  v2[37] = type metadata accessor for CRLBoardEntity();
  v2[38] = swift_task_alloc();
  v2[39] = swift_task_alloc();
  uint64_t v3 = type metadata accessor for Logger();
  v2[40] = v3;
  v2[41] = *(void *)(v3 - 8);
  v2[42] = swift_task_alloc();
  return _swift_task_switch(sub_100A668A0, 0, 0);
}

uint64_t sub_100A668A0()
{
  if (qword_10166FB50 != -1) {
    swift_once();
  }
  swift_beginAccess();
  id v1 = (id)static OS_os_log.appIntents;
  Logger.init(_:)();
  IntentParameter.wrappedValue.getter();
  IntentParameter.wrappedValue.getter();
  uint64_t v2 = v0[26];
  v0[43] = v0[25];
  v0[44] = v2;
  AppDependency.wrappedValue.getter();
  v0[13] = &type metadata for CRLBoardLibraryProvidingDependency;
  v0[14] = &off_10152F800;
  v0[45] = *sub_10050F848(v0 + 10, (uint64_t)&type metadata for CRLBoardLibraryProvidingDependency);
  v0[46] = type metadata accessor for MainActor();
  v0[47] = static MainActor.shared.getter();
  uint64_t v4 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_100A66A08, v4, v3);
}

uint64_t sub_100A66A08()
{
  uint64_t v1 = v0[44];
  uint64_t v2 = v0[45];
  uint64_t v3 = v0[43];
  uint64_t v4 = (void *)v0[36];
  swift_release();
  uint64_t v5 = *(void **)(v2 + OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_store);
  uint64_t v6 = type metadata accessor for CRLBoardIdentifier(0);
  (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v4, 1, 1, v6);
  uint64_t v7 = v5;
  v0[48] = sub_1006F7E58(v3, v1, 0, v4, v7);
  v0[49] = v8;
  sub_100522F00(v0[36], &qword_101672C30);

  return _swift_task_switch(sub_100A66B44, 0, 0);
}

uint64_t sub_100A66B44()
{
  sub_10050F848(v0 + 10, v0[13]);
  v0[50] = static MainActor.shared.getter();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[51] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_100A66C00;
  uint64_t v2 = v0[48];
  uint64_t v3 = v0[49];
  uint64_t v4 = v0[39];
  return sub_100EDFE94(v4, v2, v3, 0);
}

uint64_t sub_100A66C00(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *v3;
  *(void *)(*v3 + 416) = v2;
  swift_task_dealloc();
  if (v2)
  {
    uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
    uint64_t v8 = v7;
    uint64_t v9 = sub_100A66FC0;
  }
  else
  {
    *(void *)(v5 + 424) = a2;
    uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
    uint64_t v8 = v10;
    uint64_t v9 = sub_100A66D80;
  }
  return _swift_task_switch(v9, v6, v8);
}

uint64_t sub_100A66D80()
{
  swift_release();
  swift_bridgeObjectRelease();
  return _swift_task_switch(sub_100A66DF4, 0, 0);
}

uint64_t sub_100A66DF4()
{
  uint64_t v1 = v0[48];
  uint64_t v2 = v0[49];
  uint64_t v4 = v0[41];
  uint64_t v3 = v0[42];
  uint64_t v8 = v0[40];
  uint64_t v5 = v0[38];
  sub_1005F6324(v0[39]);
  swift_bridgeObjectRelease();
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)(v0 + 10));
  IntentParameter.wrappedValue.getter();
  v0[23] = v1;
  v0[24] = v2;
  EntityProperty.wrappedValue.setter();
  sub_1005F6324(v5);
  IntentParameter.wrappedValue.getter();
  v0[31] = IntentParameter.projectedValue.getter();
  sub_100651FFC((unint64_t *)&qword_101675F88, (void (*)(uint64_t))type metadata accessor for CRLBoardEntity);
  sub_1005F6380();
  static IntentResult.result<A, B>(value:opensIntent:)();
  swift_release();
  sub_1005F6324(v5);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v8);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v6 = (uint64_t (*)(void))v0[1];
  return v6();
}

uint64_t sub_100A66FC0()
{
  swift_release();
  return _swift_task_switch(sub_100A67028, 0, 0);
}

uint64_t sub_100A67028()
{
  swift_bridgeObjectRelease();
  v0[54] = v0[52];
  sub_1005F6324(v0[39]);
  swift_bridgeObjectRelease();
  return _swift_task_switch(sub_100A670AC, 0, 0);
}

uint64_t sub_100A670AC()
{
  uint64_t v28 = v0;
  uint64_t v1 = *(void *)(v0 + 432);
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v0 + 80);
  *(void *)(v0 + 216) = v1;
  swift_errorRetain();
  sub_1005057FC(&qword_101672BD0);
  if (swift_dynamicCast())
  {
    uint64_t v2 = *(void *)(v0 + 264);
    swift_errorRelease();
    uint64_t v3 = *(void *)(v0 + 144);
    uint64_t v4 = *(void *)(v0 + 152);
    unsigned __int8 v5 = *(unsigned char *)(v0 + 160);
    sub_100A67DC4(v2, v0 + 16);
    sub_100651F78(v3, v4, v5);
    sub_100651F78(v3, v4, v5);
    uint64_t v6 = Logger.logObject.getter();
    os_log_type_t v7 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v6, v7))
    {
      uint64_t v8 = swift_slowAlloc();
      uint64_t v26 = (void *)swift_slowAlloc();
      uint64_t v27 = swift_slowAlloc();
      *(_DWORD *)uint64_t v8 = 136315394;
      IntentParameter.wrappedValue.getter();
      *(void *)(v0 + 224) = sub_100E04348(*(void *)(v0 + 168), *(void *)(v0 + 176), &v27);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_100A67DFC(v0 + 16);
      *(_WORD *)(v8 + 12) = 2112;
      sub_100651FA8();
      swift_allocError();
      *(void *)uint64_t v9 = v3;
      *(void *)(v9 + 8) = v4;
      *(unsigned char *)(v9 + 16) = v5;
      sub_100651F78(v3, v4, v5);
      uint64_t v10 = _swift_stdlib_bridgeErrorToNSError();
      *(void *)(v0 + 232) = v10;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v26 = v10;
      sub_100651F90(v3, v4, v5);
      sub_100651F90(v3, v4, v5);
      _os_log_impl((void *)&_mh_execute_header, v6, v7, "Tried to rename board with invalid title: %s - %@", (uint8_t *)v8, 0x16u);
      sub_1005057FC(&qword_101678028);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      sub_100A67DFC(v0 + 16);
      sub_100651F90(v3, v4, v5);
      sub_100651F90(v3, v4, v5);
    }
    uint64_t v17 = *(void *)(v0 + 328);
    uint64_t v16 = *(void *)(v0 + 336);
    uint64_t v18 = *(void *)(v0 + 320);
    uint64_t v19 = *(void *)(v0 + 280);
    IntentParameter.projectedValue.getter();
    sub_1006F6830(v3, v4, v5);
    sub_100651F90(v3, v4, v5);
    IntentDialog.init(_:)();
    uint64_t v20 = type metadata accessor for IntentDialog();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v19, 0, 1, v20);
    type metadata accessor for AppIntentError();
    sub_100651FFC(&qword_101675F98, (void (*)(uint64_t))&type metadata accessor for AppIntentError);
    swift_allocError();
    IntentParameter.needsValueError(_:)();
    swift_release();
    sub_100522F00(v19, &qword_101673B38);
    swift_willThrow();
    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v16, v18);
    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v11 = Logger.logObject.getter();
    os_log_type_t v12 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v11, v12))
    {
      uint64_t v13 = (uint8_t *)swift_slowAlloc();
      uint64_t v14 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v13 = 138412290;
      swift_errorRetain();
      uint64_t v15 = _swift_stdlib_bridgeErrorToNSError();
      *(void *)(v0 + 240) = v15;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      void *v14 = v15;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v11, v12, "Error renaming the board: %@", v13, 0xCu);
      sub_1005057FC(&qword_101678028);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_errorRelease();
      swift_errorRelease();
    }
    uint64_t v22 = *(void *)(v0 + 328);
    uint64_t v21 = *(void *)(v0 + 336);
    uint64_t v23 = *(void *)(v0 + 320);
    type metadata accessor for AppIntentError();
    sub_100651FFC(&qword_101675F98, (void (*)(uint64_t))&type metadata accessor for AppIntentError);
    swift_allocError();
    static AppIntentError.Unrecoverable.unknown.getter();
    swift_willThrow();
    swift_errorRelease();
    (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v21, v23);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v24 = *(uint64_t (**)(void))(v0 + 8);
  return v24();
}

uint64_t sub_100A67708()
{
  uint64_t v0 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0, v2);
  uint64_t v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for Locale();
  __chkstk_darwin(v5 - 8, v6);
  uint64_t v7 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v7 - 8, v8);
  uint64_t v9 = type metadata accessor for LocalizedStringResource();
  sub_100568B28(v9, qword_10171B690);
  sub_100556B74(v9, (uint64_t)qword_10171B690);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v4, enum case for LocalizedStringResource.BundleDescription.main(_:), v0);
  return LocalizedStringResource.init(_:table:locale:bundle:comment:)();
}

uint64_t sub_100A67904()
{
  uint64_t v0 = sub_1005057FC(&qword_10168DB98);
  __chkstk_darwin(v0 - 8, v1);
  uint64_t v2 = sub_1005057FC(&qword_10168DBA0);
  __chkstk_darwin(v2, v3);
  sub_100A65C54();
  ParameterSummaryString.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v4._countAndFlagsBits = 0x20656D616E6552;
  v4._object = (void *)0xE700000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v4);
  swift_getKeyPath();
  sub_1005057FC(&qword_10168DBA8);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)();
  swift_release();
  v5._countAndFlagsBits = 544175136;
  v5._object = (void *)0xE400000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v5);
  swift_getKeyPath();
  sub_1005057FC(&qword_10168DBB0);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)();
  swift_release();
  v6._countAndFlagsBits = 0;
  v6._object = (void *)0xE000000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v6);
  ParameterSummaryString.init(stringInterpolation:)();
  return IntentParameterSummary.init(_:table:)();
}

unint64_t sub_100A67AF8()
{
  unint64_t result = qword_10168DB60;
  if (!qword_10168DB60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168DB60);
  }
  return result;
}

unint64_t sub_100A67B50()
{
  unint64_t result = qword_10168DB68;
  if (!qword_10168DB68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168DB68);
  }
  return result;
}

uint64_t sub_100A67BA4()
{
  return *(void *)(swift_getOpaqueTypeConformance2() + 8);
}

uint64_t sub_100A67BD8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100A67BF4@<X0>(uint64_t a1@<X8>)
{
  if (qword_10166F7D0 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for LocalizedStringResource();
  uint64_t v3 = sub_100556B74(v2, (uint64_t)qword_10171B690);
  Swift::String v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);

  return v4(a1, v3, v2);
}

uint64_t sub_100A67CA0(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_100528488;
  return sub_100A66714(a1);
}

uint64_t sub_100A67D3C(uint64_t a1)
{
  unint64_t v2 = sub_100A65C54();

  return static AppIntent.persistentIdentifier.getter(a1, v2);
}

ValueMetadata *type metadata accessor for CRLRenameBoardIntent()
{
  return &type metadata for CRLRenameBoardIntent;
}

uint64_t sub_100A67D88()
{
  return sub_100523288(&qword_10168DB78, &qword_10168DB80);
}

uint64_t sub_100A67DC4(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_100A67DFC(uint64_t a1)
{
  return a1;
}

uint64_t sub_100A67E2C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_100A67E58@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

id sub_100A67E84()
{
  sub_1005057FC((uint64_t *)&unk_101693750);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117D8C0;
  *(void *)(inited + 32) = 0;
  uint64_t v2 = swift_initStackObject();
  *(_OWORD *)(v2 + 16) = xmmword_10117D8C0;
  *(void *)(v2 + 32) = 0;
  [v0 getControlPointAtIndex:0 values:inited + 32];
  [v0 getControlPointAtIndex:1 values:v2 + 32];
  float v3 = 1.0 - *(float *)(v2 + 32);
  float v4 = 1.0 - *(float *)(v2 + 36);
  float v5 = 1.0 - *(float *)(inited + 32);
  float v6 = 1.0 - *(float *)(inited + 36);
  id v7 = objc_allocWithZone((Class)CAMediaTimingFunction);
  *(float *)&double v8 = v3;
  *(float *)&double v9 = v4;
  *(float *)&double v10 = v5;
  *(float *)&double v11 = v6;
  id v12 = [v7 initWithControlPoints:v8 :v9 :v10 :v11];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v12;
}

CGFloat sub_100A67FB0(_OWORD *a1, _OWORD *a2)
{
  long long v3 = a1[1];
  *(_OWORD *)&a.m11 = *a1;
  *(_OWORD *)&a.m13 = v3;
  long long v4 = a1[3];
  *(_OWORD *)&a.m21 = a1[2];
  *(_OWORD *)&a.m23 = v4;
  long long v5 = a1[5];
  *(_OWORD *)&a.m31 = a1[4];
  *(_OWORD *)&a.m33 = v5;
  long long v6 = a1[7];
  *(_OWORD *)&a.m41 = a1[6];
  *(_OWORD *)&a.m43 = v6;
  long long v7 = a2[1];
  *(_OWORD *)&b.m11 = *a2;
  *(_OWORD *)&b.m13 = v7;
  long long v8 = a2[3];
  *(_OWORD *)&b.m21 = a2[2];
  *(_OWORD *)&b.m23 = v8;
  long long v9 = a2[5];
  *(_OWORD *)&b.m31 = a2[4];
  *(_OWORD *)&b.m33 = v9;
  long long v10 = a2[7];
  *(_OWORD *)&b.m41 = a2[6];
  *(_OWORD *)&b.m43 = v10;
  CATransform3DConcat(&v19, &a, &b);
  CGFloat result = v19.m11;
  long long v12 = *(_OWORD *)&v19.m13;
  long long v13 = *(_OWORD *)&v19.m21;
  long long v14 = *(_OWORD *)&v19.m23;
  long long v15 = *(_OWORD *)&v19.m31;
  long long v16 = *(_OWORD *)&v19.m33;
  long long v17 = *(_OWORD *)&v19.m41;
  long long v18 = *(_OWORD *)&v19.m43;
  *a1 = *(_OWORD *)&v19.m11;
  a1[1] = v12;
  a1[2] = v13;
  a1[3] = v14;
  a1[4] = v15;
  a1[5] = v16;
  a1[6] = v17;
  a1[7] = v18;
  return result;
}

__n128 sub_100A68048@<Q0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  long long v4 = *(_OWORD *)&CATransform3DIdentity.m33;
  v18[4] = *(_OWORD *)&CATransform3DIdentity.m31;
  v18[5] = v4;
  long long v5 = *(_OWORD *)&CATransform3DIdentity.m43;
  v18[6] = *(_OWORD *)&CATransform3DIdentity.m41;
  v18[7] = v5;
  long long v6 = *(_OWORD *)&CATransform3DIdentity.m13;
  v18[0] = *(_OWORD *)&CATransform3DIdentity.m11;
  v18[1] = v6;
  long long v7 = *(_OWORD *)&CATransform3DIdentity.m23;
  v18[2] = *(_OWORD *)&CATransform3DIdentity.m21;
  v18[3] = v7;
  id v8 = [a1 ancestorSharedWithLayer:a2];

  if (v8)
  {
    long long v9 = (const CATransform3D *)v18;
    CALayerMapGeometry();
  }
  else
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"transform(fromLayer:toLayer:)", 29, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/Animation/CRLLayerAnimationMath.swift", 107, 2, 135, (uint64_t)"layerForApplying must be related to repLayer to add insertion animation. Falling back to using the identity transform; animation may appear incorrect.",
      150,
      2u,
      (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"transform(fromLayer:toLayer:)", 29, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/Animation/CRLLayerAnimationMath.swift", 107, 2, 135);
    long long v9 = &CATransform3DIdentity;
  }
  __n128 result = *(__n128 *)&v9->m31;
  long long v11 = *(_OWORD *)&v9->m33;
  __n128 v22 = result;
  long long v23 = v11;
  long long v13 = *(_OWORD *)&v9->m43;
  long long v24 = *(_OWORD *)&v9->m41;
  long long v12 = v24;
  long long v25 = v13;
  long long v15 = *(_OWORD *)&v9->m13;
  long long v19 = *(_OWORD *)&v9->m11;
  long long v14 = v19;
  long long v20 = v15;
  long long v17 = *(_OWORD *)&v9->m23;
  long long v21 = *(_OWORD *)&v9->m21;
  long long v16 = v21;
  *(__n128 *)(a3 + 64) = result;
  *(_OWORD *)(a3 + 80) = v11;
  *(_OWORD *)(a3 + 96) = v12;
  *(_OWORD *)(a3 + 112) = v13;
  *(_OWORD *)a3 = v14;
  *(_OWORD *)(a3 + 16) = v15;
  *(_OWORD *)(a3 + 32) = v16;
  *(_OWORD *)(a3 + 48) = v17;
  return result;
}

__n128 sub_100A681F4@<Q0>(double *a1@<X0>, void *a2@<X1>, void *a3@<X2>, char a4@<W3>, _OWORD *a5@<X8>, double a6@<D0>, double a7@<D1>)
{
  double v11 = *a1;
  double v12 = a1[1];
  double v13 = a1[2];
  double v14 = a1[3];
  double v15 = a1[4];
  double v16 = a1[5];
  CGFloat v76 = a1[7];
  CGFloat v79 = a1[6];
  CGFloat v72 = a1[9];
  CGFloat v73 = a1[8];
  CGFloat v70 = a1[11];
  CGFloat v71 = a1[10];
  CGFloat v68 = a1[13];
  CGFloat v69 = a1[12];
  CGFloat v66 = a1[15];
  CGFloat v67 = a1[14];
  id v17 = a2;
  if (!a2) {
    id v17 = a3;
  }
  id v18 = a2;
  [a3 anchorPoint];
  double v20 = v19;
  double v22 = v21;
  [a3 bounds];
  double v24 = sub_1000652F0(v20, v22, v23);
  CATransform3DMakeTranslation(&v127, v24, v25, 1.0);
  CGFloat v97 = v11;
  CGFloat v94 = v12;
  CGFloat v91 = v13;
  CGFloat v88 = v14;
  CGFloat v85 = v15;
  CGFloat v82 = v16;
  if (a4)
  {
    CGFloat m12 = CATransform3DIdentity.m12;
    CGFloat m11 = CATransform3DIdentity.m11;
    CGFloat m14 = CATransform3DIdentity.m14;
    CGFloat m13 = CATransform3DIdentity.m13;
    CGFloat m22 = CATransform3DIdentity.m22;
    CGFloat m21 = CATransform3DIdentity.m21;
    CGFloat m24 = CATransform3DIdentity.m24;
    CGFloat m23 = CATransform3DIdentity.m23;
    CGFloat m31 = CATransform3DIdentity.m31;
    CGFloat m32 = CATransform3DIdentity.m32;
    CGFloat m33 = CATransform3DIdentity.m33;
    CGFloat m34 = CATransform3DIdentity.m34;
    CGFloat m41 = CATransform3DIdentity.m41;
    CGFloat m42 = CATransform3DIdentity.m42;
    CGFloat m43 = CATransform3DIdentity.m43;
    CGFloat m44 = CATransform3DIdentity.m44;
  }
  else
  {
    CGFloat v27 = v127.m11;
    CGFloat v28 = v127.m12;
    CGFloat v29 = v127.m13;
    CGFloat v30 = v127.m14;
    CGFloat v31 = v127.m21;
    CGFloat v32 = v127.m22;
    CGFloat v33 = v127.m23;
    CGFloat v34 = v127.m24;
    CGFloat v122 = v127.m31;
    CGFloat v119 = v127.m32;
    CGFloat v116 = v127.m33;
    CGFloat v113 = v127.m34;
    CGFloat v110 = v127.m41;
    CGFloat v107 = v127.m42;
    CGFloat v104 = v127.m43;
    CGFloat v100 = v127.m44;
    sub_100A68048(a3, (uint64_t)v17, (uint64_t)&v127);
    a.CGFloat m11 = v27;
    a.CGFloat m12 = v28;
    a.CGFloat m13 = v29;
    a.CGFloat m14 = v30;
    a.CGFloat m21 = v31;
    a.CGFloat m22 = v32;
    a.CGFloat m23 = v33;
    a.CGFloat m24 = v34;
    a.CGFloat m31 = v122;
    a.CGFloat m32 = v119;
    a.CGFloat m33 = v116;
    a.CGFloat m34 = v113;
    a.CGFloat m41 = v110;
    a.CGFloat m42 = v107;
    a.CGFloat m43 = v104;
    a.CGFloat m44 = v100;
    CATransform3D b = v127;
    CATransform3DConcat(&v124, &a, &b);
    CGFloat m12 = v124.m12;
    CGFloat m11 = v124.m11;
    CGFloat m14 = v124.m14;
    CGFloat m13 = v124.m13;
    CGFloat m22 = v124.m22;
    CGFloat m21 = v124.m21;
    CGFloat m24 = v124.m24;
    CGFloat m23 = v124.m23;
    CGFloat m31 = v124.m31;
    CGFloat m32 = v124.m32;
    CGFloat m33 = v124.m33;
    CGFloat m34 = v124.m34;
    CGFloat m41 = v124.m41;
    CGFloat m42 = v124.m42;
    CGFloat m43 = v124.m43;
    CGFloat m44 = v124.m44;
  }
  CGFloat v101 = m44;
  [v17 bounds];
  [v17 bounds];
  if (v35 > 0.001) {
    double v36 = v35;
  }
  else {
    double v36 = 0.001;
  }
  [v17 bounds];
  [v17 bounds];
  [v17 bounds];
  [v17 bounds];
  if (v37 > 0.001) {
    double v38 = v37;
  }
  else {
    double v38 = 0.001;
  }
  CATransform3DMakeTranslation(&a, -(v36 * a6), -(v38 * a7), 1.0);
  CGFloat v39 = a.m11;
  CGFloat v40 = a.m12;
  CGFloat v41 = a.m13;
  CGFloat v42 = a.m14;
  CGFloat v43 = a.m21;
  CGFloat v44 = a.m22;
  CGFloat v45 = a.m23;
  CGFloat v46 = a.m24;
  CGFloat v61 = a.m32;
  CGFloat v63 = a.m31;
  CGFloat v59 = a.m34;
  CGFloat v60 = a.m33;
  CGFloat v57 = a.m42;
  CGFloat v58 = a.m41;
  CGFloat v56 = a.m43;
  CGFloat v65 = a.m44;
  b.CGFloat m11 = v97;
  b.CGFloat m12 = v94;
  b.CGFloat m13 = v91;
  b.CGFloat m14 = v88;
  b.CGFloat m21 = v85;
  b.CGFloat m22 = v82;
  b.CGFloat m23 = v79;
  b.CGFloat m24 = v76;
  b.CGFloat m31 = v73;
  b.CGFloat m32 = v72;
  b.CGFloat m33 = v71;
  b.CGFloat m34 = v70;
  b.CGFloat m41 = v69;
  b.CGFloat m42 = v68;
  b.CGFloat m43 = v67;
  b.CGFloat m44 = v66;
  CATransform3DConcat(&v124, &a, &b);
  long long v95 = *(_OWORD *)&v124.m13;
  long long v98 = *(_OWORD *)&v124.m11;
  long long v89 = *(_OWORD *)&v124.m23;
  long long v92 = *(_OWORD *)&v124.m21;
  long long v83 = *(_OWORD *)&v124.m33;
  long long v86 = *(_OWORD *)&v124.m31;
  long long v80 = *(_OWORD *)&v124.m41;
  CGFloat v74 = v124.m44;
  CGFloat v77 = v124.m43;
  a.CGFloat m11 = v39;
  a.CGFloat m12 = v40;
  a.CGFloat m13 = v41;
  a.CGFloat m14 = v42;
  a.CGFloat m21 = v43;
  a.CGFloat m22 = v44;
  a.CGFloat m23 = v45;
  a.CGFloat m24 = v46;
  a.CGFloat m31 = v63;
  a.CGFloat m32 = v61;
  a.CGFloat m33 = v60;
  a.CGFloat m34 = v59;
  a.CGFloat m41 = v58;
  a.CGFloat m42 = v57;
  a.CGFloat m43 = v56;
  a.CGFloat m44 = v65;
  CATransform3DInvert(&b, &a);
  *(_OWORD *)&a.CGFloat m11 = v98;
  *(_OWORD *)&a.CGFloat m13 = v95;
  *(_OWORD *)&a.CGFloat m21 = v92;
  *(_OWORD *)&a.CGFloat m23 = v89;
  *(_OWORD *)&a.CGFloat m31 = v86;
  *(_OWORD *)&a.CGFloat m33 = v83;
  *(_OWORD *)&a.CGFloat m41 = v80;
  a.CGFloat m43 = v77;
  a.CGFloat m44 = v74;
  CATransform3DConcat(&v124, &a, &b);
  a.CGFloat m11 = m11;
  a.CGFloat m12 = m12;
  a.CGFloat m13 = m13;
  a.CGFloat m14 = m14;
  a.CGFloat m21 = m21;
  a.CGFloat m22 = m22;
  a.CGFloat m23 = m23;
  a.CGFloat m24 = m24;
  a.CGFloat m31 = m31;
  a.CGFloat m32 = m32;
  a.CGFloat m33 = m33;
  a.CGFloat m34 = m34;
  a.CGFloat m41 = m41;
  a.CGFloat m42 = m42;
  a.CGFloat m43 = m43;
  a.CGFloat m44 = v101;
  CATransform3D b = v124;
  CATransform3DConcat(&v124, &a, &b);
  long long v99 = *(_OWORD *)&v124.m11;
  long long v96 = *(_OWORD *)&v124.m13;
  long long v93 = *(_OWORD *)&v124.m21;
  long long v90 = *(_OWORD *)&v124.m23;
  long long v87 = *(_OWORD *)&v124.m31;
  long long v84 = *(_OWORD *)&v124.m33;
  long long v81 = *(_OWORD *)&v124.m41;
  CGFloat v78 = v124.m43;
  CGFloat v75 = v124.m44;
  a.CGFloat m11 = m11;
  a.CGFloat m12 = m12;
  a.CGFloat m13 = m13;
  a.CGFloat m14 = m14;
  a.CGFloat m21 = m21;
  a.CGFloat m22 = m22;
  a.CGFloat m23 = m23;
  a.CGFloat m24 = m24;
  a.CGFloat m31 = m31;
  a.CGFloat m32 = m32;
  a.CGFloat m33 = m33;
  a.CGFloat m34 = m34;
  a.CGFloat m41 = m41;
  a.CGFloat m42 = m42;
  a.CGFloat m43 = m43;
  a.CGFloat m44 = v101;
  CATransform3DInvert(&b, &a);
  *(_OWORD *)&a.CGFloat m11 = v99;
  *(_OWORD *)&a.CGFloat m13 = v96;
  *(_OWORD *)&a.CGFloat m21 = v93;
  *(_OWORD *)&a.CGFloat m23 = v90;
  *(_OWORD *)&a.CGFloat m31 = v87;
  *(_OWORD *)&a.CGFloat m33 = v84;
  *(_OWORD *)&a.CGFloat m41 = v81;
  a.CGFloat m43 = v78;
  a.CGFloat m44 = v75;
  CATransform3DConcat(&v124, &a, &b);
  CATransform3D a = v124;
  CATransform3DGetAffineTransform((CGAffineTransform *)&b, &a);
  CATransform3DMakeAffineTransform(&a, (CGAffineTransform *)&b);
  long long v120 = *(_OWORD *)&a.m13;
  long long v123 = *(_OWORD *)&a.m11;
  long long v114 = *(_OWORD *)&a.m23;
  long long v117 = *(_OWORD *)&a.m21;
  long long v108 = *(_OWORD *)&a.m33;
  long long v111 = *(_OWORD *)&a.m31;
  __n128 v102 = *(__n128 *)&a.m43;
  long long v105 = *(_OWORD *)&a.m41;

  *a5 = v123;
  a5[1] = v120;
  a5[2] = v117;
  a5[3] = v114;
  a5[4] = v111;
  a5[5] = v108;
  __n128 result = v102;
  a5[6] = v105;
  a5[7] = v102;
  return result;
}

uint64_t sub_100A68A04(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t result = sub_10103405C(a1, (uint64_t)&off_10152A280);
  if (!v3) {
    return sub_101023724(a1, (uint64_t)&off_10152A280, a3);
  }
  return result;
}

id sub_100A68A98()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLCommandDirtyBoard();
  return [super dealloc];
}

uint64_t type metadata accessor for CRLCommandDirtyBoard()
{
  return self;
}

uint64_t sub_100A68AF0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = type metadata accessor for UUID();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5, v7);
  long long v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1005057FC((uint64_t *)&unk_101674520);
  __chkstk_darwin(v10 - 8, v11);
  double v13 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v14 = (uint64_t *)(v2 + OBJC_IVAR____TtC8Freeform18CRLUUIDRemapHelper_assetUUIDMap);
  swift_beginAccess();
  uint64_t v15 = *v14;
  if (*(void *)(v15 + 16) && (unint64_t v16 = sub_100955FC8(a1), (v17 & 1) != 0))
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v6 + 16))(v13, *(void *)(v15 + 56) + *(void *)(v6 + 72) * v16, v5);
    uint64_t v18 = 0;
  }
  else
  {
    uint64_t v18 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v13, v18, 1, v5);
  swift_endAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v9, a1, v5);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v13, 1, v5) == 1)
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v6 + 32))(a2, v9, v5);
    return sub_100510824((uint64_t)v13);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v6 + 32))(a2, v13, v5);
  }
}

uint64_t sub_100A68D30@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = type metadata accessor for UUID();
  uint64_t v26 = *(void *)(v5 - 8);
  __chkstk_darwin(v5, v6);
  uint64_t v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1005057FC((uint64_t *)&unk_101674520);
  __chkstk_darwin(v9 - 8, v10);
  uint64_t v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v15 = __chkstk_darwin(v13, v14);
  char v17 = (char *)&v26 - v16;
  if (*(unsigned char *)(v2 + OBJC_IVAR____TtC8Freeform18CRLUUIDRemapHelper_shouldResetObjectUUIDs) == 1)
  {
    uint64_t v18 = (uint64_t *)(v2 + OBJC_IVAR____TtC8Freeform18CRLUUIDRemapHelper_objectUUIDMap);
    swift_beginAccess();
    uint64_t v19 = *v18;
    if (*(void *)(*v18 + 16) && (unint64_t v20 = sub_100955FC8(a1), (v21 & 1) != 0))
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v26 + 16))(v17, *(void *)(v19 + 56) + *(void *)(v26 + 72) * v20, v5);
      double v22 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v26 + 56);
      v22(v17, 0, 1, v5);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v17, 1, v5) != 1)
      {
        (*(void (**)(uint64_t, char *, uint64_t))(v26 + 32))(a2, v17, v5);
        return swift_endAccess();
      }
    }
    else
    {
      double v22 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v26 + 56);
      v22(v17, 1, 1, v5);
    }
    sub_100510824((uint64_t)v17);
    swift_endAccess();
    UUID.init()();
    CGFloat v25 = *(void (**)(char *, uint64_t, uint64_t))(v26 + 16);
    v26 += 16;
    v25(v8, a1, v5);
    v25(v12, a2, v5);
    v22(v12, 0, 1, v5);
    swift_beginAccess();
    sub_10057D960((uint64_t)v12, (uint64_t)v8);
    v25(v8, a2, v5);
    v25(v12, a2, v5);
    v22(v12, 0, 1, v5);
    sub_10057D960((uint64_t)v12, (uint64_t)v8);
    return swift_endAccess();
  }
  double v23 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, __n128))(v26 + 16);

  return v23(a2, a1, v5, v15);
}

uint64_t sub_100A69148()
{
  uint64_t v1 = sub_1005057FC((uint64_t *)&unk_101674520);
  __chkstk_darwin(v1 - 8, v2);
  long long v4 = (char *)&v86 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5, v6);
  CGFloat v94 = (char *)&v86 - v7;
  uint64_t v8 = type metadata accessor for UUID();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8, v10);
  long long v92 = (char *)&v86 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12, v13);
  CGFloat v97 = (char *)&v86 - v14;
  __chkstk_darwin(v15, v16);
  CGFloat v104 = (char *)&v86 - v17;
  __chkstk_darwin(v18, v19);
  char v21 = (char *)&v86 - v20;
  uint64_t v22 = sub_1005057FC(&qword_10168DC20);
  __chkstk_darwin(v22 - 8, v23);
  CGFloat v25 = (char *)&v86 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26, v27);
  CGFloat v29 = (char *)&v86 - v28;
  CGFloat v30 = (uint64_t *)(v0 + OBJC_IVAR____TtC8Freeform18CRLUUIDRemapHelper_objectUUIDMap);
  swift_beginAccess();
  uint64_t v31 = *v30;
  uint64_t v32 = *(void *)(*v30 + 64);
  uint64_t v98 = *v30 + 64;
  uint64_t v33 = 1 << *(unsigned char *)(v31 + 32);
  uint64_t v34 = -1;
  if (v33 < 64) {
    uint64_t v34 = ~(-1 << v33);
  }
  unint64_t v35 = v34 & v32;
  __n128 v102 = (void (**)(uint64_t, char *, uint64_t))(v9 + 16);
  long long v105 = (void (**)(char *, char *, uint64_t))(v9 + 32);
  long long v95 = (void (**)(uint64_t, void, uint64_t, uint64_t))(v9 + 56);
  long long v93 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
  uint64_t v90 = v9 + 40;
  int64_t v99 = (unint64_t)(v33 + 63) >> 6;
  uint64_t v100 = v9;
  double v36 = (void (**)(char *, uint64_t))(v9 + 8);
  int64_t v88 = v99 - 1;
  uint64_t v101 = v31;
  swift_bridgeObjectRetain();
  int64_t v106 = 0;
  long long v96 = _swiftEmptyDictionarySingleton;
  CGFloat v91 = v4;
  uint64_t v103 = v21;
  while (v35)
  {
    unint64_t v37 = __clz(__rbit64(v35));
    v35 &= v35 - 1;
    unint64_t v38 = v37 | (v106 << 6);
LABEL_6:
    uint64_t v39 = v101;
    unint64_t v40 = *(void *)(v100 + 72) * v38;
    CGFloat v41 = *(void (**)(char *, unint64_t, uint64_t))(v100 + 16);
    v41(v25, *(void *)(v101 + 48) + v40, v8);
    unint64_t v42 = *(void *)(v39 + 56) + v40;
    uint64_t v43 = sub_1005057FC(&qword_10168DC28);
    v41(&v25[*(int *)(v43 + 48)], v42, v8);
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v43 - 8) + 56))(v25, 0, 1, v43);
    char v21 = v103;
LABEL_25:
    sub_100A69E88((uint64_t)v25, (uint64_t)v29);
    uint64_t v48 = sub_1005057FC(&qword_10168DC28);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v48 - 8) + 48))(v29, 1, v48) == 1)
    {
      swift_release();
      return (uint64_t)v96;
    }
    long long v49 = &v29[*(int *)(v48 + 48)];
    uint64_t v50 = *v105;
    (*v105)(v21, v29, v8);
    long long v51 = v104;
    v50(v104, v49, v8);
    sub_100A69E44((unint64_t *)&qword_10167BDC0);
    if (dispatch thunk of static Equatable.== infix(_:_:)())
    {
      long long v52 = *v36;
      (*v36)(v51, v8);
      v52(v21, v8);
    }
    else
    {
      long long v53 = *v102;
      (*v102)((uint64_t)v97, v51, v8);
      uint64_t v54 = (uint64_t)v94;
      unint64_t v89 = (unint64_t)v53;
      v53((uint64_t)v94, v103, v8);
      uint64_t v55 = *v95;
      (*v95)(v54, 0, 1, v8);
      if ((*v93)(v54, 1, v8) == 1)
      {
        sub_100510824(v54);
        CGFloat v56 = v96;
        swift_bridgeObjectRetain();
        unint64_t v89 = sub_100955FC8((uint64_t)v97);
        char v58 = v57;
        swift_bridgeObjectRelease();
        uint64_t v59 = (uint64_t)v91;
        if (v58)
        {
          long long v87 = v55;
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          CGFloat v107 = v56;
          char v21 = v103;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            sub_10097CFAC();
            CGFloat v56 = v107;
          }
          int64_t v61 = *(void *)(v100 + 72) * v89;
          int64_t v62 = v56[6] + v61;
          long long v86 = *(void (**)(int64_t, uint64_t))(v100 + 8);
          v86(v62, v8);
          CGFloat v63 = v107;
          int64_t v64 = v107[7] + v61;
          uint64_t v59 = (uint64_t)v91;
          v50(v91, (char *)v64, v8);
          long long v96 = v63;
          uint64_t v65 = (uint64_t)v63;
          CGFloat v66 = (void (*)(char *, uint64_t))v86;
          sub_100588714(v89, v65);
          swift_bridgeObjectRelease();
          v87(v59, 0, 1, v8);
        }
        else
        {
          v55((uint64_t)v91, 1, 1, v8);
          CGFloat v66 = *v36;
          char v21 = v103;
        }
        v66(v97, v8);
        sub_100510824(v59);
        CGFloat v77 = v104;
      }
      else
      {
        v50(v92, (char *)v54, v8);
        CGFloat v67 = v96;
        int v68 = swift_isUniquelyReferenced_nonNull_native();
        CGFloat v107 = v67;
        unint64_t v70 = sub_100955FC8((uint64_t)v97);
        uint64_t v71 = v67[2];
        BOOL v72 = (v69 & 1) == 0;
        uint64_t v73 = v71 + v72;
        if (__OFADD__(v71, v72)) {
          goto LABEL_49;
        }
        char v74 = v69;
        if (v67[3] >= v73)
        {
          char v78 = v68;
          char v21 = v103;
          if ((v78 & 1) == 0) {
            sub_10097CFAC();
          }
        }
        else
        {
          sub_100960D80(v73, v68);
          unint64_t v75 = sub_100955FC8((uint64_t)v97);
          char v21 = v103;
          if ((v74 & 1) != (v76 & 1)) {
            goto LABEL_52;
          }
          unint64_t v70 = v75;
        }
        uint64_t v79 = (uint64_t)v97;
        long long v80 = v107;
        if (v74)
        {
          (*(void (**)(unint64_t, char *, uint64_t))(v100 + 40))(v107[7] + *(void *)(v100 + 72) * v70, v92, v8);
        }
        else
        {
          v107[(v70 >> 6) + 8] |= 1 << v70;
          unint64_t v81 = *(void *)(v100 + 72) * v70;
          ((void (*)(unint64_t, uint64_t, uint64_t))v89)(v80[6] + v81, v79, v8);
          v50((char *)(v80[7] + v81), v92, v8);
          uint64_t v82 = v80[2];
          BOOL v83 = __OFADD__(v82, 1);
          uint64_t v84 = v82 + 1;
          if (v83) {
            goto LABEL_50;
          }
          v80[2] = v84;
        }
        CGFloat v77 = v104;
        long long v96 = v107;
        swift_bridgeObjectRelease();
        CGFloat v66 = *v36;
        (*v36)(v97, v8);
      }
      v66(v77, v8);
      v66(v21, v8);
    }
  }
  int64_t v44 = v106 + 1;
  if (__OFADD__(v106, 1))
  {
    __break(1u);
LABEL_49:
    __break(1u);
LABEL_50:
    __break(1u);
    goto LABEL_51;
  }
  if (v44 >= v99)
  {
LABEL_24:
    uint64_t v47 = sub_1005057FC(&qword_10168DC28);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v47 - 8) + 56))(v25, 1, 1, v47);
    unint64_t v35 = 0;
    goto LABEL_25;
  }
  unint64_t v45 = *(void *)(v98 + 8 * v44);
  if (v45)
  {
LABEL_10:
    unint64_t v35 = (v45 - 1) & v45;
    unint64_t v38 = __clz(__rbit64(v45)) + (v44 << 6);
    int64_t v106 = v44;
    goto LABEL_6;
  }
  int64_t v46 = v106 + 2;
  ++v106;
  if (v44 + 1 >= v99) {
    goto LABEL_24;
  }
  unint64_t v45 = *(void *)(v98 + 8 * v46);
  if (v45) {
    goto LABEL_13;
  }
  int64_t v106 = v44 + 1;
  if (v44 + 2 >= v99) {
    goto LABEL_24;
  }
  unint64_t v45 = *(void *)(v98 + 8 * (v44 + 2));
  if (v45)
  {
    v44 += 2;
    goto LABEL_10;
  }
  int64_t v46 = v44 + 3;
  int64_t v106 = v44 + 2;
  if (v44 + 3 >= v99) {
    goto LABEL_24;
  }
  unint64_t v45 = *(void *)(v98 + 8 * v46);
  if (v45)
  {
LABEL_13:
    int64_t v44 = v46;
    goto LABEL_10;
  }
  while (1)
  {
    int64_t v44 = v46 + 1;
    if (__OFADD__(v46, 1)) {
      break;
    }
    if (v44 >= v99)
    {
      int64_t v106 = v88;
      goto LABEL_24;
    }
    unint64_t v45 = *(void *)(v98 + 8 * v44);
    ++v46;
    if (v45) {
      goto LABEL_10;
    }
  }
LABEL_51:
  __break(1u);
LABEL_52:
  uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

uint64_t sub_100A69AC8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_1005057FC((uint64_t *)&unk_101674520);
  __chkstk_darwin(v6 - 8, v7);
  uint64_t v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for UUID();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10, v12);
  uint64_t v14 = (char *)&v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15, v16);
  uint64_t v18 = (char *)&v23 - v17;
  sub_100A69E44((unint64_t *)&qword_10167BDC0);
  uint64_t v24 = a2;
  uint64_t result = dispatch thunk of static Equatable.== infix(_:_:)();
  if ((result & 1) == 0)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v14, v24, v10);
    uint64_t v20 = (uint64_t *)(v3 + OBJC_IVAR____TtC8Freeform18CRLUUIDRemapHelper_assetUUIDMap);
    swift_beginAccess();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v25 = *v20;
    *uint64_t v20 = 0x8000000000000000;
    sub_1007C05D4((uint64_t)v14, a1, isUniquelyReferenced_nonNull_native, (uint64_t)v9);
    *uint64_t v20 = v25;
    swift_bridgeObjectRelease();
    swift_endAccess();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
    {
      return sub_100510824((uint64_t)v9);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v18, v9, v10);
      if (dispatch thunk of static Equatable.== infix(_:_:)())
      {
        return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v18, v10);
      }
      else
      {
        sub_1005F7CE8();
        swift_allocError();
        *uint64_t v22 = 13;
        swift_willThrow();
        return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v18, v10);
      }
    }
  }
  return result;
}

uint64_t type metadata accessor for CRLUUIDRemapHelper()
{
  return self;
}

uint64_t sub_100A69E44(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for UUID();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100A69E88(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1005057FC(&qword_10168DC20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_100A69EF0()
{
  id v0 = [self mainBundle];
  NSString v1 = String._bridgeToObjectiveC()();
  NSString v2 = String._bridgeToObjectiveC()();
  id v3 = [v0 localizedStringForKey:v1 value:v2 table:0];

  uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v6 = v5;

  qword_10171B6A8 = v4;
  unk_10171B6B0 = v6;
}

void sub_100A69FC4()
{
  id v0 = [self mainBundle];
  NSString v1 = String._bridgeToObjectiveC()();
  NSString v2 = String._bridgeToObjectiveC()();
  id v3 = [v0 localizedStringForKey:v1 value:v2 table:0];

  uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v6 = v5;

  qword_10171B6B8 = v4;
  unk_10171B6C0 = v6;
}

NSString sub_100A6A098()
{
  NSString result = String._bridgeToObjectiveC()();
  qword_10171B6C8 = (uint64_t)result;
  return result;
}

void sub_100A6A0D0()
{
  id v0 = [self mainBundle];
  NSString v1 = String._bridgeToObjectiveC()();
  NSString v2 = String._bridgeToObjectiveC()();
  id v3 = [v0 localizedStringForKey:v1 value:v2 table:0];

  uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v6 = v5;

  qword_10171B6D0 = v4;
  *(void *)algn_10171B6D8 = v6;
}

void sub_100A6A1AC()
{
  id v0 = [self mainBundle];
  NSString v1 = String._bridgeToObjectiveC()();
  NSString v2 = String._bridgeToObjectiveC()();
  id v3 = [v0 localizedStringForKey:v1 value:v2 table:0];

  uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v6 = v5;

  qword_10171B6E0 = v4;
  *(void *)algn_10171B6E8 = v6;
}

void sub_100A6A278()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1005057FC(&qword_101672BB0);
  __chkstk_darwin(v2 - 8, v3);
  int64_t v64 = (char *)&v59 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1005057FC(&qword_101672C30);
  __chkstk_darwin(v5 - 8, v6);
  uint64_t v8 = (char *)&v59 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9, v10);
  uint64_t v12 = (char *)&v59 - v11;
  __chkstk_darwin(v13, v14);
  uint64_t v16 = (char *)&v59 - v15;
  uint64_t v17 = type metadata accessor for CRLBoardIdentifier(0);
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = *(void *)(v18 + 64);
  __chkstk_darwin(v17, v20);
  uint64_t v63 = (uint64_t)&v59 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&double v23 = __chkstk_darwin(v21, v22).n128_u64[0];
  uint64_t v25 = (char *)&v59 - v24;
  id v26 = [*(id *)(v0 + 16) share:v23];
  id v27 = [v26 recordID];

  id v28 = [v27 zoneID];
  sub_100D29C10((uint64_t)v16);

  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17) == 1)
  {
    sub_100522F00((uint64_t)v16, &qword_101672C30);
    if (qword_10166FBE0 != -1) {
      swift_once();
    }
    swift_beginAccess();
    id v29 = (id)static OS_os_log.shareState;
    uint64_t v30 = static os_log_type_t.error.getter();
    sub_100BAC898((uint64_t)v29, (uint64_t)&_mh_execute_header, v30, (uint64_t)"Could not extract board identifier from share metadata.", 55, 2, (uint64_t)_swiftEmptyArrayStorage);
  }
  else
  {
    sub_100A6D12C((uint64_t)v16, (uint64_t)v25, type metadata accessor for CRLBoardIdentifier);
    sub_100540CFC((uint64_t)v25, (uint64_t)v12);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(v12, 0, 1, v17);
    sub_1006050B4((uint64_t)v12, (uint64_t)v8);
    uint64_t v31 = v1 + OBJC_IVAR____TtC8Freeform29CRLAcceptCloudKitShareAttempt_boardIdentifier;
    swift_beginAccess();
    sub_1006063BC((uint64_t)v8, v31, &qword_101672C30);
    swift_endAccess();
    id v32 = [self defaultCenter];
    uint64_t v33 = v1;
    if (qword_1016700C0 != -1) {
      swift_once();
    }
    uint64_t v60 = qword_10171C6C8;
    uint64_t v34 = *(void *)(v1 + 24);
    uint64_t v35 = swift_allocObject();
    swift_weakInit();
    uint64_t v36 = v63;
    sub_100540CFC((uint64_t)v25, v63);
    uint64_t v37 = *(unsigned __int8 *)(v18 + 80);
    uint64_t v61 = ~v37;
    uint64_t v62 = v37 | 7;
    uint64_t v38 = swift_allocObject();
    *(void *)(v38 + 16) = v35;
    uint64_t v39 = v36;
    uint64_t v40 = v33;
    sub_100A6D12C(v39, v38 + ((v37 + 24) & ~v37), type metadata accessor for CRLBoardIdentifier);
    CGFloat v67 = sub_100A6CD48;
    uint64_t v68 = v38;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = *(void *)"";
    void aBlock[2] = sub_1005E5680;
    ObjectType = &unk_10151FE08;
    CGFloat v41 = _Block_copy(aBlock);
    swift_release();
    id v42 = [v32 addObserverForName:v60 object:v34 queue:0 usingBlock:v41];
    _Block_release(v41);

    ObjectType = (void *)swift_getObjectType();
    aBlock[0] = v42;
    sub_100A6BFC8((uint64_t)aBlock);
    if (qword_10166FBE0 != -1) {
      swift_once();
    }
    swift_beginAccess();
    uint64_t v43 = (void *)static OS_os_log.shareState;
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_10117E810;
    id v45 = v43;
    uint64_t v46 = sub_100753038();
    uint64_t v48 = v47;
    *(void *)(inited + 56) = &type metadata for String;
    *(void *)(inited + 64) = sub_100528BE4();
    *(void *)(inited + 32) = v46;
    *(void *)(inited + 40) = v48;
    uint64_t v49 = static os_log_type_t.default.getter();
    sub_100BAC898((uint64_t)v45, (uint64_t)&_mh_execute_header, v49, (uint64_t)"Started listening for a CRLBoardLibraryProvidingDidUpdateSnapshot notification that contains the identifier for the board we are trying to join: %@.", 148, 2, inited);
    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();

    uint64_t v50 = type metadata accessor for TaskPriority();
    uint64_t v51 = (uint64_t)v64;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v50 - 8) + 56))(v64, 1, 1, v50);
    uint64_t v52 = swift_allocObject();
    swift_weakInit();
    sub_100540CFC((uint64_t)v25, v39);
    type metadata accessor for MainActor();
    swift_retain();
    uint64_t v53 = static MainActor.shared.getter();
    uint64_t v54 = v40;
    uint64_t v55 = v39;
    uint64_t v56 = (v37 + 40) & v61;
    char v57 = (void *)swift_allocObject();
    v57[2] = v53;
    v57[3] = &protocol witness table for MainActor;
    v57[4] = v52;
    sub_100A6D12C(v55, (uint64_t)v57 + v56, type metadata accessor for CRLBoardIdentifier);
    swift_release();
    uint64_t v58 = sub_1005912D0(v51, (uint64_t)&unk_10168DE18, (uint64_t)v57);
    sub_100A6D194((uint64_t)v25, type metadata accessor for CRLBoardIdentifier);
    *(void *)(v54 + OBJC_IVAR____TtC8Freeform29CRLAcceptCloudKitShareAttempt_acceptShareTask) = v58;
    swift_release();
  }
}

void sub_100A6A9E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v50 = a1;
  uint64_t v4 = type metadata accessor for CRLBoardViewModelMetadata(0);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4, v6);
  uint64_t v8 = (char *)&v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1005057FC((uint64_t *)&unk_1016741D0);
  __chkstk_darwin(v9 - 8, v10);
  uint64_t v12 = (char *)&v44 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13, v14);
  uint64_t v16 = (char *)&v44 - v15;
  uint64_t v17 = type metadata accessor for Notification();
  uint64_t v18 = *(void *)(v17 - 8);
  __chkstk_darwin(v17, v19);
  uint64_t v21 = (char *)&v44 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v23 = Strong;
    uint64_t v46 = v12;
    uint64_t v47 = v5;
    uint64_t v48 = v4;
    id v45 = v8;
    uint64_t v49 = v16;
    if (qword_10166FBE0 != -1) {
      swift_once();
    }
    swift_beginAccess();
    uint64_t v24 = (void *)static OS_os_log.shareState;
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_10117E810;
    id v26 = v24;
    uint64_t v27 = UUID.uuidString.getter();
    uint64_t v29 = v28;
    *(void *)(inited + 56) = &type metadata for String;
    *(void *)(inited + 64) = sub_100528BE4();
    *(void *)(inited + 32) = v27;
    *(void *)(inited + 40) = v29;
    uint64_t v30 = static os_log_type_t.default.getter();
    sub_100BAC898((uint64_t)v26, (uint64_t)&_mh_execute_header, v30, (uint64_t)"Snapshot updated after a share was accepted. Attempting to open accepted shared board with UUID: %@.", 100, 2, inited);
    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();

    (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))(v21, v50, v17);
    if (!sub_100DC6278((uint64_t)v21)
      || (char v32 = sub_1006E5EA4(a3, v31),
          swift_bridgeObjectRelease(),
          swift_bridgeObjectRelease(),
          swift_bridgeObjectRelease(),
          (v32 & 1) == 0))
    {
      id v36 = (id)static OS_os_log.shareState;
      uint64_t v37 = static os_log_type_t.default.getter();
      sub_100BAC898((uint64_t)v36, (uint64_t)&_mh_execute_header, v37, (uint64_t)"Snapshot update didn't contain shared board identifier. Skipping.", 65, 2, (uint64_t)_swiftEmptyArrayStorage);
      swift_release();

      return;
    }
    id v33 = *(id *)(v23 + 24);
    uint64_t v34 = (uint64_t)v49;
    sub_100ED7F04(a3, (uint64_t)v49);
    uint64_t v35 = v48;

    uint64_t v38 = v47;
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v47 + 56))(v34, 0, 1, v35);
    uint64_t v39 = (uint64_t)v46;
    sub_100522E9C(v34, (uint64_t)v46, (uint64_t *)&unk_1016741D0);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v38 + 48))(v39, 1, v35) == 1)
    {
      sub_100522F00(v39, (uint64_t *)&unk_1016741D0);
    }
    else
    {
      uint64_t v40 = (uint64_t)v45;
      sub_100A6D12C(v39, (uint64_t)v45, type metadata accessor for CRLBoardViewModelMetadata);
      if ((*(unsigned char *)(v40 + *(int *)(v35 + 32)) & 1) == 0)
      {
        sub_100A6C130();
        char v43 = *(unsigned char *)(v23 + OBJC_IVAR____TtC8Freeform29CRLAcceptCloudKitShareAttempt_didConfirmBoardIsReadyToOpen);
        *(unsigned char *)(v23 + OBJC_IVAR____TtC8Freeform29CRLAcceptCloudKitShareAttempt_didConfirmBoardIsReadyToOpen) = 1;
        if ((v43 & 1) == 0) {
          sub_100A6C25C();
        }
        swift_release();
        sub_100A6D194(v40, type metadata accessor for CRLBoardViewModelMetadata);
        goto LABEL_16;
      }
      sub_100A6D194(v40, type metadata accessor for CRLBoardViewModelMetadata);
    }
    id v41 = (id)static OS_os_log.shareState;
    uint64_t v42 = static os_log_type_t.default.getter();
    sub_100BAC898((uint64_t)v41, (uint64_t)&_mh_execute_header, v42, (uint64_t)"Snapshot update contained the board identifier but the board metadata says it's still just an invitation. Keep watching for snapshot updates.", 141, 2, (uint64_t)_swiftEmptyArrayStorage);
    swift_release();

LABEL_16:
    sub_100522F00(v34, (uint64_t *)&unk_1016741D0);
  }
}

uint64_t sub_100A6AF30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[17] = a4;
  v5[18] = a5;
  sub_1005057FC(&qword_101672EB0);
  v5[19] = swift_task_alloc();
  sub_1005057FC(&qword_101672BB0);
  v5[20] = swift_task_alloc();
  type metadata accessor for CRLBoardIdentifier(0);
  v5[21] = swift_task_alloc();
  v5[22] = type metadata accessor for MainActor();
  v5[23] = static MainActor.shared.getter();
  uint64_t v7 = dispatch thunk of Actor.unownedExecutor.getter();
  v5[24] = v7;
  v5[25] = v6;
  return _swift_task_switch(sub_100A6B058, v7, v6);
}

uint64_t sub_100A6B058()
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  v0[26] = Strong;
  if (Strong)
  {
    uint64_t v2 = Strong;
    if (qword_10166FBE0 != -1) {
      swift_once();
    }
    swift_beginAccess();
    uint64_t v3 = (void *)static OS_os_log.shareState;
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_10117E810;
    uint64_t v5 = *(void **)(v2 + 16);
    *(void *)(inited + 56) = sub_100A6CED4();
    *(void *)(inited + 64) = sub_100A6CF14();
    *(void *)(inited + 32) = v5;
    id v6 = v3;
    id v7 = v5;
    uint64_t v8 = static os_log_type_t.default.getter();
    sub_100BAC898((uint64_t)v6, (uint64_t)&_mh_execute_header, v8, (uint64_t)"Accepting share with metadata: %@.", 34, 2, inited);
    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();

    uint64_t v9 = *(void **)(v2 + 24);
    v0[27] = v9;
    uint64_t v10 = *(void **)(v2 + 16);
    v0[28] = v10;
    v9;
    id v11 = v10;
    uint64_t v12 = (void *)swift_task_alloc();
    v0[29] = v12;
    *uint64_t v12 = v0;
    v12[1] = sub_100A6B2A8;
    uint64_t v13 = v0[18];
    return sub_100EDD1C4((uint64_t)v11, v13);
  }
  else
  {
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v15 = (uint64_t (*)(void))v0[1];
    return v15();
  }
}

uint64_t sub_100A6B2A8(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 240) = a1;
  *(void *)(v3 + 248) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v4 = *(void *)(v3 + 192);
    uint64_t v5 = *(void *)(v3 + 200);
    id v6 = sub_100A6B7C8;
  }
  else
  {
    id v7 = *(void **)(v3 + 216);

    uint64_t v4 = *(void *)(v3 + 192);
    uint64_t v5 = *(void *)(v3 + 200);
    id v6 = sub_100A6B3C8;
  }
  return _swift_task_switch(v6, v4, v5);
}

uint64_t sub_100A6B3C8()
{
  swift_release();
  char v1 = static Task<>.isCancelled.getter();
  uint64_t v2 = (void *)v0[30];
  if (v1) {
    goto LABEL_14;
  }
  sub_100540CFC(v0[18], v0[21]);
  if (v2)
  {
    sub_100A6D194(v0[21], type metadata accessor for CRLBoardIdentifier);
  }
  else
  {
    uint64_t v8 = v0[21];
    unint64_t v9 = *(void *)(*(void *)(v0[26] + 24) + OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_storeHierarchySnapshot);
    uint64_t v10 = swift_task_alloc();
    *(void *)(v10 + 16) = v8;
    swift_bridgeObjectRetain();
    id v11 = (void *)sub_1008E81F4(1, (uint64_t (*)(id))sub_10062E948, v10, v9);
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    sub_100A6D194(v8, type metadata accessor for CRLBoardIdentifier);

    if (v11)
    {
      uint64_t v12 = v0[26];
      id v13 = (id)static OS_os_log.shareState;
      uint64_t v14 = static os_log_type_t.default.getter();
      sub_100BAC898((uint64_t)v13, (uint64_t)&_mh_execute_header, v14, (uint64_t)"Found an existing board to open.", 32, 2, (uint64_t)_swiftEmptyArrayStorage);

      char v15 = *(unsigned char *)(v12 + OBJC_IVAR____TtC8Freeform29CRLAcceptCloudKitShareAttempt_didConfirmBoardIsReadyToOpen);
      *(unsigned char *)(v12 + OBJC_IVAR____TtC8Freeform29CRLAcceptCloudKitShareAttempt_didConfirmBoardIsReadyToOpen) = 1;
      if ((v15 & 1) == 0) {
        sub_100A6C25C();
      }
      goto LABEL_12;
    }
  }
  if (swift_unknownObjectWeakLoadStrong())
  {
    uint64_t v3 = v0[20];
    uint64_t v4 = type metadata accessor for TaskPriority();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(v3, 1, 1, v4);
    uint64_t v5 = swift_allocObject();
    swift_unknownObjectWeakInit();
    swift_retain();
    uint64_t v6 = static MainActor.shared.getter();
    id v7 = (void *)swift_allocObject();
    v7[2] = v6;
    v7[3] = &protocol witness table for MainActor;
    v7[4] = v5;
    swift_release();
    sub_1005912FC(v3, (uint64_t)&unk_10168DE38, (uint64_t)v7);
    swift_release();
    swift_unknownObjectRelease();
  }
  else
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"attemptToAcceptShareAndOpenBoard()", 34, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/CRLAcceptCloudKitShareAttempt.swift", 105, 2, 128, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"attemptToAcceptShareAndOpenBoard()", 34, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/CRLAcceptCloudKitShareAttempt.swift", 105, 2, 128);
  }
  if (*(void *)(v0[26] + 32))
  {
    uint64_t v16 = v0[19];
    Class v17 = sub_100D3EC2C(v0[18]);
    uint64_t v18 = type metadata accessor for Date();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v16, 1, 1, v18);
    sub_1008B4C34(v17, 0, 0, v16, 33);

    sub_100522F00(v16, &qword_101672EB0);
  }
LABEL_12:
  uint64_t v19 = v0[26];
  char v20 = *(unsigned char *)(v19 + OBJC_IVAR____TtC8Freeform29CRLAcceptCloudKitShareAttempt_didCheckIfBoardAlreadyExistsInSnapshot);
  *(unsigned char *)(v19 + OBJC_IVAR____TtC8Freeform29CRLAcceptCloudKitShareAttempt_didCheckIfBoardAlreadyExistsInSnapshot) = 1;
  uint64_t v2 = (void *)v0[30];
  if ((v20 & 1) == 0) {
    sub_100A6C25C();
  }
LABEL_14:
  swift_release();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v21 = (uint64_t (*)(void))v0[1];
  return v21();
}

uint64_t sub_100A6B7C8()
{
  char v1 = (void *)v0[27];
  uint64_t v2 = (void *)v0[28];
  swift_release();

  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  uint64_t v4 = v0[31];
  if (Strong)
  {
    uint64_t v5 = v0[20];
    uint64_t v6 = type metadata accessor for TaskPriority();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v5, 1, 1, v6);
    uint64_t v7 = swift_allocObject();
    swift_unknownObjectWeakInit();
    swift_retain();
    swift_errorRetain();
    uint64_t v8 = static MainActor.shared.getter();
    unint64_t v9 = (void *)swift_allocObject();
    v9[2] = v8;
    v9[3] = &protocol witness table for MainActor;
    v9[4] = v7;
    v9[5] = v4;
    swift_release();
    sub_1005912D0(v5, (uint64_t)&unk_10168DE30, (uint64_t)v9);
    swift_release();
    swift_unknownObjectRelease();
  }
  else
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"attemptToAcceptShareAndOpenBoard()", 34, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/CRLAcceptCloudKitShareAttempt.swift", 105, 2, 136, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"attemptToAcceptShareAndOpenBoard()", 34, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/CRLAcceptCloudKitShareAttempt.swift", 105, 2, 136);
  }
  swift_errorRelease();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v10 = (uint64_t (*)(void))v0[1];
  return v10();
}

void sub_100A6BA08(long long *a1)
{
  uint64_t v3 = sub_1005057FC(&qword_101672BB0);
  __chkstk_darwin(v3 - 8, v4);
  id v36 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1005057FC(&qword_101672C30);
  __chkstk_darwin(v6, v7);
  unint64_t v9 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100A6CAA4(a1, (uint64_t)&v41);
  if (v42)
  {
    uint64_t v37 = v6;
    uint64_t v38 = a1;
    sub_10053974C(&v41, (uint64_t)v40);
    if (qword_10166FBE0 != -1) {
      swift_once();
    }
    swift_beginAccess();
    uint64_t v10 = (void *)static OS_os_log.shareState;
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_10117D8C0;
    sub_1005498A4((uint64_t)v40, (uint64_t)&v39);
    id v12 = v10;
    sub_1005057FC(&qword_10168DE00);
    uint64_t v13 = String.init<A>(describing:)();
    uint64_t v15 = v14;
    *(void *)(inited + 56) = &type metadata for String;
    unint64_t v16 = sub_100528BE4();
    *(void *)(inited + 64) = v16;
    *(void *)(inited + 32) = v13;
    *(void *)(inited + 40) = v15;
    uint64_t v17 = v1 + OBJC_IVAR____TtC8Freeform29CRLAcceptCloudKitShareAttempt_boardIdentifier;
    swift_beginAccess();
    sub_100522E9C(v17, (uint64_t)v9, &qword_101672C30);
    uint64_t v18 = String.init<A>(describing:)();
    *(void *)(inited + 96) = &type metadata for String;
    *(void *)(inited + 104) = v16;
    *(void *)(inited + 72) = v18;
    *(void *)(inited + 80) = v19;
    uint64_t v20 = static os_log_type_t.default.getter();
    sub_100BAC898((uint64_t)v12, (uint64_t)&_mh_execute_header, v20, (uint64_t)"Timed out after %@ opening newly-joined board with identifier: %@.", 66, 2, inited);
    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();

    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v40);
    a1 = v38;
  }
  else
  {
    if (qword_10166FBE0 != -1) {
      swift_once();
    }
    swift_beginAccess();
    uint64_t v21 = (void *)static OS_os_log.shareState;
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t v22 = swift_initStackObject();
    *(_OWORD *)(v22 + 16) = xmmword_10117E810;
    uint64_t v23 = v1 + OBJC_IVAR____TtC8Freeform29CRLAcceptCloudKitShareAttempt_boardIdentifier;
    swift_beginAccess();
    sub_100522E9C(v23, (uint64_t)v9, &qword_101672C30);
    id v24 = v21;
    uint64_t v25 = String.init<A>(describing:)();
    uint64_t v27 = v26;
    *(void *)(v22 + 56) = &type metadata for String;
    *(void *)(v22 + 64) = sub_100528BE4();
    *(void *)(v22 + 32) = v25;
    *(void *)(v22 + 40) = v27;
    uint64_t v28 = static os_log_type_t.default.getter();
    sub_100BAC898((uint64_t)v24, (uint64_t)&_mh_execute_header, v28, (uint64_t)"Received a user-initiated request to cancel opening newly-joined board with identifier: %@.", 91, 2, v22);
    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();
  }
  sub_100A6C130();
  uint64_t v29 = OBJC_IVAR____TtC8Freeform29CRLAcceptCloudKitShareAttempt_acceptShareTask;
  if (*(void *)(v1 + OBJC_IVAR____TtC8Freeform29CRLAcceptCloudKitShareAttempt_acceptShareTask))
  {
    swift_retain();
    Task.cancel()();
    swift_release();
  }
  *(void *)(v1 + v29) = 0;
  swift_release();
  sub_100A6CAA4(a1, (uint64_t)&v41);
  if (v42)
  {
    sub_100A6CB24((uint64_t)&v41);
  }
  else if (swift_unknownObjectWeakLoadStrong())
  {
    uint64_t v30 = type metadata accessor for TaskPriority();
    uint64_t v31 = (uint64_t)v36;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(v36, 1, 1, v30);
    uint64_t v32 = swift_allocObject();
    swift_unknownObjectWeakInit();
    type metadata accessor for MainActor();
    swift_retain();
    uint64_t v33 = static MainActor.shared.getter();
    uint64_t v34 = (void *)swift_allocObject();
    v34[2] = v33;
    v34[3] = &protocol witness table for MainActor;
    v34[4] = v32;
    swift_release();
    sub_1005912D0(v31, (uint64_t)&unk_10168DE08, (uint64_t)v34);
    swift_release();
    swift_unknownObjectRelease();
  }
  else
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"cancel(reason:)", 15, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/CRLAcceptCloudKitShareAttempt.swift", 105, 2, 181, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"cancel(reason:)", 15, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/CRLAcceptCloudKitShareAttempt.swift", 105, 2, 181);
  }
}

uint64_t sub_100A6BFC8(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC8Freeform29CRLAcceptCloudKitShareAttempt_snapshotUpdateObservationToken;
  swift_beginAccess();
  sub_100522E9C(v3, (uint64_t)&v7, &qword_101672BF0);
  if (v8)
  {
    sub_100575CE8(&v7, &v9);
    id v4 = [self defaultCenter];
    sub_10050F848(&v9, v10);
    uint64_t v5 = _bridgeAnythingToObjectiveC<A>(_:)();
    if (qword_1016700C0 != -1) {
      swift_once();
    }
    [v4 removeObserver:v5 name:qword_10171C6C8 object:*(void *)(v1 + 24)];

    swift_unknownObjectRelease();
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v9);
  }
  else
  {
    sub_100522F00((uint64_t)&v7, &qword_101672BF0);
  }
  swift_beginAccess();
  sub_1006063BC(a1, v3, &qword_101672BF0);
  return swift_endAccess();
}

uint64_t sub_100A6C130()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC8Freeform29CRLAcceptCloudKitShareAttempt_snapshotUpdateObservationToken;
  swift_beginAccess();
  sub_100522E9C(v1, (uint64_t)&v5, &qword_101672BF0);
  if (!v6) {
    return sub_100522F00((uint64_t)&v5, &qword_101672BF0);
  }
  sub_100575CE8(&v5, &v7);
  id v2 = [self defaultCenter];
  sub_10050F848(&v7, v8);
  uint64_t v3 = _bridgeAnythingToObjectiveC<A>(_:)();
  if (qword_1016700C0 != -1) {
    swift_once();
  }
  [v2 removeObserver:v3 name:qword_10171C6C8 object:*(void *)(v0 + 24)];

  swift_unknownObjectRelease();
  return _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v7);
}

void sub_100A6C25C()
{
  uint64_t v1 = sub_1005057FC(&qword_101672BB0);
  __chkstk_darwin(v1 - 8, v2);
  id v4 = (char *)v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1005057FC(&qword_101672C30);
  __chkstk_darwin(v5 - 8, v6);
  uint64_t v8 = (char *)v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for CRLBoardIdentifier(0);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  __chkstk_darwin(v9, v12);
  uint64_t v13 = (char *)v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14, v15);
  uint64_t v17 = (char *)v28 - v16;
  if (*(unsigned char *)(v0 + OBJC_IVAR____TtC8Freeform29CRLAcceptCloudKitShareAttempt_didConfirmBoardIsReadyToOpen) == 1
    && *(unsigned char *)(v0 + OBJC_IVAR____TtC8Freeform29CRLAcceptCloudKitShareAttempt_didCheckIfBoardAlreadyExistsInSnapshot) == 1)
  {
    uint64_t v18 = v0 + OBJC_IVAR____TtC8Freeform29CRLAcceptCloudKitShareAttempt_boardIdentifier;
    swift_beginAccess();
    sub_100522E9C(v18, (uint64_t)v8, &qword_101672C30);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
    {
      sub_100522F00((uint64_t)v8, &qword_101672C30);
    }
    else
    {
      sub_100A6D12C((uint64_t)v8, (uint64_t)v17, type metadata accessor for CRLBoardIdentifier);
      id v19 = [self defaultCenter];
      if (qword_10166F7E8 != -1) {
        swift_once();
      }
      v28[0] = qword_10171B6C8;
      sub_1005057FC(&qword_101677430);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_10117E810;
      v28[1] = 0xD000000000000033;
      v28[2] = 0x800000010126C1C0;
      AnyHashable.init<A>(_:)();
      *(void *)(inited + 96) = v9;
      uint64_t v21 = sub_1005767BC((uint64_t *)(inited + 72));
      sub_100540CFC((uint64_t)v17, (uint64_t)v21);
      sub_100A393A8(inited);
      Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      [v19 postNotificationName:v28[0] object:0 userInfo:isa];

      if (swift_unknownObjectWeakLoadStrong())
      {
        uint64_t v23 = type metadata accessor for TaskPriority();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v4, 1, 1, v23);
        uint64_t v24 = swift_allocObject();
        swift_unknownObjectWeakInit();
        sub_100540CFC((uint64_t)v17, (uint64_t)v13);
        type metadata accessor for MainActor();
        swift_retain();
        uint64_t v25 = static MainActor.shared.getter();
        unint64_t v26 = (*(unsigned __int8 *)(v10 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
        uint64_t v27 = (void *)swift_allocObject();
        v27[2] = v25;
        v27[3] = &protocol witness table for MainActor;
        v27[4] = v24;
        sub_100A6D12C((uint64_t)v13, (uint64_t)v27 + v26, type metadata accessor for CRLBoardIdentifier);
        swift_release();
        sub_1006D9104((uint64_t)v4, (uint64_t)&unk_10168DDF8, (uint64_t)v27);
        swift_unknownObjectRelease();
        swift_release();
      }
      else
      {
        sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"signalReadyToOpenBoardIfNeeded()", 32, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/CRLAcceptCloudKitShareAttempt.swift", 105, 2, 236, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
        sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"signalReadyToOpenBoardIfNeeded()", 32, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/CRLAcceptCloudKitShareAttempt.swift", 105, 2, 236);
      }
      sub_100A6D194((uint64_t)v17, type metadata accessor for CRLBoardIdentifier);
    }
  }
}

uint64_t sub_100A6C798()
{
  sub_100523398((uint64_t)(v0 + 5));
  sub_100522F00((uint64_t)v0 + OBJC_IVAR____TtC8Freeform29CRLAcceptCloudKitShareAttempt_boardIdentifier, &qword_101672C30);
  swift_release();
  sub_100522F00((uint64_t)v0 + OBJC_IVAR____TtC8Freeform29CRLAcceptCloudKitShareAttempt_snapshotUpdateObservationToken, &qword_101672BF0);

  return swift_deallocClassInstance();
}

uint64_t sub_100A6C84C()
{
  return type metadata accessor for CRLAcceptCloudKitShareAttempt();
}

uint64_t type metadata accessor for CRLAcceptCloudKitShareAttempt()
{
  uint64_t result = qword_10168DC80;
  if (!qword_10168DC80) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_100A6C8A0()
{
  sub_1006040BC();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t sub_100A6C96C()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100A6C9A8(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for CRLBoardIdentifier(0) - 8);
  uint64_t v5 = v1[2];
  uint64_t v6 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v8 = (uint64_t)v1 + ((*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_100528488;
  return sub_100A8A260(a1, v5, v6, v7, v8);
}

uint64_t sub_100A6CAA4(long long *a1, uint64_t a2)
{
  unint64_t v3 = *((void *)a1 + 3);
  if (v3 < 0xFFFFFFFF)
  {
    long long v5 = *a1;
    long long v6 = a1[1];
    *(void *)(a2 + 32) = *((void *)a1 + 4);
    *(_OWORD *)a2 = v5;
    *(_OWORD *)(a2 + 16) = v6;
  }
  else
  {
    uint64_t v4 = *((void *)a1 + 4);
    *(void *)(a2 + 24) = v3;
    *(void *)(a2 + 32) = v4;
    (**(void (***)(uint64_t))(v3 - 8))(a2);
  }
  return a2;
}

uint64_t sub_100A6CB24(uint64_t a1)
{
  if (*(void *)(a1 + 24) >= 0xFFFFFFFFuLL) {
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(a1);
  }
  return a1;
}

uint64_t sub_100A6CB64(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_100528488;
  return sub_100A89EFC(a1, v4, v5, v6);
}

uint64_t sub_100A6CC18()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100A6CC50()
{
  uint64_t v1 = *(void *)(type metadata accessor for CRLBoardIdentifier(0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 24) & ~v2;
  uint64_t v4 = v3 + *(void *)(v1 + 64);
  uint64_t v5 = v2 | 7;
  swift_release();
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v0 + v3, v6);
  type metadata accessor for CRLBoardIdentifierStorage(0);
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, v4, v5);
}

void sub_100A6CD48(uint64_t a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for CRLBoardIdentifier(0) - 8);
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  sub_100A6A9E4(a1, v4, v5);
}

uint64_t sub_100A6CDBC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100A6CDCC()
{
  return swift_release();
}

uint64_t sub_100A6CDD8(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for CRLBoardIdentifier(0) - 8);
  uint64_t v5 = v1[2];
  uint64_t v6 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v8 = (uint64_t)v1 + ((*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_100528D08;
  return sub_100A6AF30(a1, v5, v6, v7, v8);
}

unint64_t sub_100A6CED4()
{
  unint64_t result = qword_10168DE20;
  if (!qword_10168DE20)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_10168DE20);
  }
  return result;
}

unint64_t sub_100A6CF14()
{
  unint64_t result = qword_10168DE28;
  if (!qword_10168DE28)
  {
    sub_100A6CED4();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168DE28);
  }
  return result;
}

uint64_t sub_100A6CF6C()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_errorRelease();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_100A6CFB4(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v6 = v1[5];
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_100528D08;
  return sub_100A895DC(a1, v4, v5, v7, v6);
}

uint64_t sub_100A6D078(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_100528D08;
  return sub_100A892FC(a1, v4, v5, v6);
}

uint64_t sub_100A6D12C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_100A6D194(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unsigned char *storeEnumTagSinglePayload for CRLAcceptCloudKitShareAttemptError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100A6D2C0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLAcceptCloudKitShareAttemptError()
{
  return &type metadata for CRLAcceptCloudKitShareAttemptError;
}

uint64_t destroy for CRLAcceptCloudKitShareAttempt.CancelReason(uint64_t result)
{
  if (*(void *)(result + 24) >= 0xFFFFFFFFuLL) {
    return _s8Freeform26AnyCRLCommandChangeContextVwxx_0(result);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for CRLAcceptCloudKitShareAttempt.CancelReason(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 40)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 24);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  if ((v3 + 1) >= 2) {
    return v3;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for CRLAcceptCloudKitShareAttempt.CancelReason(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 32) = 0;
    *(_OWORD *)unint64_t result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)unint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 40) = 0;
    }
    if (a2) {
      *(void *)(result + 24) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLAcceptCloudKitShareAttempt.CancelReason()
{
  return &type metadata for CRLAcceptCloudKitShareAttempt.CancelReason;
}

unint64_t sub_100A6D3E0()
{
  unint64_t result = qword_10168DE40[0];
  if (!qword_10168DE40[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_10168DE40);
  }
  return result;
}

uint64_t destroy for CRLSyncSchedulerConfiguration()
{
  return swift_release();
}

void *sub_100A6D440(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  uint64_t v4 = a2[2];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = v4;
  swift_retain();
  return a1;
}

void *sub_100A6D478(void *a1, void *a2)
{
  *a1 = *a2;
  uint64_t v3 = a2[2];
  a1[1] = a2[1];
  a1[2] = v3;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_100A6D4BC(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_release();
  return a1;
}

uint64_t type metadata accessor for CRLTimeoutTask()
{
  return sub_100568E70();
}

unsigned char *storeEnumTagSinglePayload for CRLTimeoutTaskError(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x100A6D5ACLL);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLTimeoutTaskError()
{
  return &type metadata for CRLTimeoutTaskError;
}

unint64_t sub_100A6D5E8()
{
  unint64_t result = qword_10168DEC8;
  if (!qword_10168DEC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168DEC8);
  }
  return result;
}

id sub_100A6D63C(uint64_t a1)
{
  uint64_t v1 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    __CocoaSet.makeIterator()();
    sub_10050BF48(0, (unint64_t *)&qword_10168C820);
    sub_10062E0F4((unint64_t *)&unk_10168E2A0, (unint64_t *)&qword_10168C820);
    Set.Iterator.init(_cocoa:)();
    uint64_t v1 = v32;
    uint64_t v30 = v33;
    uint64_t v2 = v34;
    int64_t v3 = v35;
    unint64_t v4 = v36;
  }
  else
  {
    uint64_t v5 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v30 = a1 + 56;
    uint64_t v6 = ~v5;
    uint64_t v7 = -v5;
    if (v7 < 64) {
      uint64_t v8 = ~(-1 << v7);
    }
    else {
      uint64_t v8 = -1;
    }
    unint64_t v4 = v8 & *(void *)(a1 + 56);
    swift_bridgeObjectRetain();
    uint64_t v2 = v6;
    int64_t v3 = 0;
  }
  int64_t v29 = (unint64_t)(v2 + 64) >> 6;
  int64_t v31 = v3;
  if (v1 < 0) {
    goto LABEL_10;
  }
LABEL_8:
  if (v4)
  {
    unint64_t v9 = __clz(__rbit64(v4));
    v4 &= v4 - 1;
    unint64_t v10 = v9 | (v3 << 6);
    goto LABEL_29;
  }
  int64_t v12 = v3 + 1;
  if (__OFADD__(v3, 1))
  {
    __break(1u);
    JUMPOUT(0x100A6DCD4);
  }
  if (v12 >= v29)
  {
LABEL_45:
    id v11 = 0;
    goto LABEL_48;
  }
  unint64_t v13 = *(void *)(v30 + 8 * v12);
  ++v3;
  if (!v13)
  {
    int64_t v3 = v12 + 1;
    if (v12 + 1 >= v29) {
      goto LABEL_46;
    }
    unint64_t v13 = *(void *)(v30 + 8 * v3);
    if (!v13)
    {
      int64_t v3 = v12 + 2;
      if (v12 + 2 >= v29) {
        goto LABEL_46;
      }
      unint64_t v13 = *(void *)(v30 + 8 * v3);
      if (!v13)
      {
        int64_t v3 = v12 + 3;
        if (v12 + 3 >= v29) {
          goto LABEL_46;
        }
        unint64_t v13 = *(void *)(v30 + 8 * v3);
        if (!v13)
        {
          int64_t v3 = v12 + 4;
          if (v12 + 4 < v29)
          {
            unint64_t v13 = *(void *)(v30 + 8 * v3);
            if (!v13)
            {
              uint64_t v14 = v31 + 6;
              do
              {
                if (v29 == v14) {
                  goto LABEL_45;
                }
                unint64_t v13 = *(void *)(v30 + 8 * v14++);
              }
              while (!v13);
              int64_t v3 = v14 - 1;
            }
            goto LABEL_28;
          }
LABEL_46:
          id v11 = 0;
          goto LABEL_48;
        }
      }
    }
  }
LABEL_28:
  unint64_t v4 = (v13 - 1) & v13;
  unint64_t v10 = __clz(__rbit64(v13)) + (v3 << 6);
LABEL_29:
  id v11 = *(id *)(*(void *)(v1 + 48) + 8 * v10);
  if (v11)
  {
    while (1)
    {
      uint64_t v15 = v1;
      id v16 = [v11 activityType:v26, v27, v28];
      uint64_t v17 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      id v19 = v18;

      swift_bridgeObjectRetain();
      v38._countAndFlagsBits = v17;
      v38._object = v19;
      if (sub_1009C37F0(v38) != 10)
      {
        swift_bridgeObjectRelease();
        uint64_t v1 = v15;
        switch("torBoardItemsKey")
        {
          case 2u:
            swift_bridgeObjectRelease();
            goto LABEL_48;
          default:
            goto LABEL_42;
        }
      }
      if (v17 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v19 == v20) {
        break;
      }
      char v21 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if (v21) {
        goto LABEL_36;
      }
      if (v17 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v19 == v22)
      {
        swift_bridgeObjectRelease_n();
        uint64_t v1 = v15;
      }
      else
      {
        char v23 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v1 = v15;
        if ((v23 & 1) == 0)
        {
          LOBYTE(v28) = 2;
          uint64_t v27 = 66;
          sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"init(typeString:)", 17, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/Extensions/NSUserActivity_Extensions.swift", 112, 2, 26);
        }
      }
LABEL_42:
      char v24 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if (v24) {
        goto LABEL_48;
      }

      int64_t v31 = v3;
      if ((v1 & 0x8000000000000000) == 0) {
        goto LABEL_8;
      }
LABEL_10:
      if (!__CocoaSet.Iterator.next()()) {
        goto LABEL_45;
      }
      sub_10050BF48(0, (unint64_t *)&qword_10168C820);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      id v11 = v37;
      swift_unknownObjectRelease();
      if (!v37) {
        goto LABEL_48;
      }
    }
    swift_bridgeObjectRelease();
LABEL_36:
    swift_bridgeObjectRelease();
    uint64_t v1 = v15;
    goto LABEL_42;
  }
LABEL_48:
  sub_10052E1EC();
  return v11;
}

id sub_100A6DCFC(uint64_t a1)
{
  uint64_t v1 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    __CocoaSet.makeIterator()();
    sub_10050BF48(0, (unint64_t *)&qword_10168C820);
    sub_10062E0F4((unint64_t *)&unk_10168E2A0, (unint64_t *)&qword_10168C820);
    Set.Iterator.init(_cocoa:)();
    uint64_t v1 = v32;
    uint64_t v30 = v33;
    uint64_t v2 = v34;
    int64_t v3 = v35;
    unint64_t v4 = v36;
  }
  else
  {
    uint64_t v5 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v30 = a1 + 56;
    uint64_t v6 = ~v5;
    uint64_t v7 = -v5;
    if (v7 < 64) {
      uint64_t v8 = ~(-1 << v7);
    }
    else {
      uint64_t v8 = -1;
    }
    unint64_t v4 = v8 & *(void *)(a1 + 56);
    swift_bridgeObjectRetain();
    uint64_t v2 = v6;
    int64_t v3 = 0;
  }
  int64_t v29 = (unint64_t)(v2 + 64) >> 6;
  int64_t v31 = v3;
  if (v1 < 0) {
    goto LABEL_10;
  }
LABEL_8:
  if (v4)
  {
    unint64_t v9 = __clz(__rbit64(v4));
    v4 &= v4 - 1;
    unint64_t v10 = v9 | (v3 << 6);
    goto LABEL_29;
  }
  int64_t v12 = v3 + 1;
  if (__OFADD__(v3, 1))
  {
    __break(1u);
    JUMPOUT(0x100A6E3A8);
  }
  if (v12 >= v29)
  {
LABEL_49:
    id v11 = 0;
    goto LABEL_48;
  }
  unint64_t v13 = *(void *)(v30 + 8 * v12);
  ++v3;
  if (!v13)
  {
    int64_t v3 = v12 + 1;
    if (v12 + 1 >= v29) {
      goto LABEL_50;
    }
    unint64_t v13 = *(void *)(v30 + 8 * v3);
    if (v13) {
      goto LABEL_28;
    }
    int64_t v3 = v12 + 2;
    if (v12 + 2 >= v29) {
      goto LABEL_50;
    }
    unint64_t v13 = *(void *)(v30 + 8 * v3);
    if (v13) {
      goto LABEL_28;
    }
    int64_t v3 = v12 + 3;
    if (v12 + 3 >= v29) {
      goto LABEL_50;
    }
    unint64_t v13 = *(void *)(v30 + 8 * v3);
    if (v13) {
      goto LABEL_28;
    }
    int64_t v3 = v12 + 4;
    if (v12 + 4 >= v29)
    {
LABEL_50:
      id v11 = 0;
      goto LABEL_48;
    }
    unint64_t v13 = *(void *)(v30 + 8 * v3);
    if (!v13)
    {
      uint64_t v14 = v31 + 6;
      while (v29 != v14)
      {
        unint64_t v13 = *(void *)(v30 + 8 * v14++);
        if (v13)
        {
          int64_t v3 = v14 - 1;
          goto LABEL_28;
        }
      }
      goto LABEL_49;
    }
  }
LABEL_28:
  unint64_t v4 = (v13 - 1) & v13;
  unint64_t v10 = __clz(__rbit64(v13)) + (v3 << 6);
LABEL_29:
  id v11 = *(id *)(*(void *)(v1 + 48) + 8 * v10);
  if (v11)
  {
    while (1)
    {
      uint64_t v15 = v1;
      id v16 = [v11 activityType:v26, v27, v28];
      uint64_t v17 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      id v19 = v18;

      swift_bridgeObjectRetain();
      v38._countAndFlagsBits = v17;
      v38._object = v19;
      if (sub_1009C37F0(v38) != 10)
      {
        swift_bridgeObjectRelease();
        uint64_t v1 = v15;
        switch("com.apple.freeform.newBoard")
        {
          case 7u:
            goto LABEL_47;
          case 9u:
            goto LABEL_43;
          default:
            goto LABEL_39;
        }
      }
      if (v17 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v19 == v20) {
        break;
      }
      char v21 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if (v21) {
        goto LABEL_46;
      }
      if (v17 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v19 == v22)
      {
        swift_bridgeObjectRelease_n();
        uint64_t v1 = v15;
      }
      else
      {
        char v23 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v1 = v15;
        if ((v23 & 1) == 0)
        {
          LOBYTE(v28) = 2;
          uint64_t v27 = 66;
          sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"init(typeString:)", 17, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/Extensions/NSUserActivity_Extensions.swift", 112, 2, 26);
LABEL_43:
          if (0x8000000101235680 == 0x8000000101235640) {
            goto LABEL_47;
          }
        }
      }
LABEL_39:
      char v24 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if (v24) {
        goto LABEL_48;
      }

      int64_t v31 = v3;
      if ((v1 & 0x8000000000000000) == 0) {
        goto LABEL_8;
      }
LABEL_10:
      if (!__CocoaSet.Iterator.next()()) {
        goto LABEL_49;
      }
      sub_10050BF48(0, (unint64_t *)&qword_10168C820);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      id v11 = v37;
      swift_unknownObjectRelease();
      if (!v37) {
        goto LABEL_48;
      }
    }
    swift_bridgeObjectRelease();
LABEL_46:
    swift_bridgeObjectRelease();
LABEL_47:
    swift_bridgeObjectRelease();
  }
LABEL_48:
  sub_10052E1EC();
  return v11;
}

id sub_100A6E3D0(uint64_t a1)
{
  uint64_t v1 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    __CocoaSet.makeIterator()();
    sub_10050BF48(0, (unint64_t *)&qword_10168C820);
    sub_10062E0F4((unint64_t *)&unk_10168E2A0, (unint64_t *)&qword_10168C820);
    Set.Iterator.init(_cocoa:)();
    uint64_t v1 = v33;
    uint64_t v31 = v34;
    uint64_t v2 = v35;
    uint64_t v3 = v36;
    unint64_t v4 = v37;
  }
  else
  {
    uint64_t v5 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v31 = a1 + 56;
    uint64_t v6 = ~v5;
    uint64_t v7 = -v5;
    if (v7 < 64) {
      uint64_t v8 = ~(-1 << v7);
    }
    else {
      uint64_t v8 = -1;
    }
    unint64_t v4 = v8 & *(void *)(a1 + 56);
    swift_bridgeObjectRetain();
    uint64_t v2 = v6;
    uint64_t v3 = 0;
  }
  int64_t v30 = (unint64_t)(v2 + 64) >> 6;
  if ((v1 & 0x8000000000000000) == 0) {
    goto LABEL_11;
  }
LABEL_8:
  if (__CocoaSet.Iterator.next()())
  {
    sub_10050BF48(0, (unint64_t *)&qword_10168C820);
    swift_unknownObjectRetain();
    swift_dynamicCast();
    id v9 = v38;
    swift_unknownObjectRelease();
    uint64_t v10 = v3;
    uint64_t v11 = v4;
    if (!v38) {
      goto LABEL_47;
    }
    while (1)
    {
      unint64_t v32 = v11;
      id v16 = [v9 activityType:v27, v28, v29];
      uint64_t v17 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      id v19 = v18;

      swift_bridgeObjectRetain();
      v39._countAndFlagsBits = v17;
      v39._object = v19;
      if (sub_1009C37F0(v39) != 10)
      {
        swift_bridgeObjectRelease();
        switch("torBoardItemsKey")
        {
          case 8u:
            goto LABEL_46;
          default:
            goto LABEL_41;
        }
      }
      uint64_t v20 = v1;
      if (v17 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v19 == v21) {
        break;
      }
      char v22 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if (v22) {
        goto LABEL_36;
      }
      if (v17 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v19 == v23)
      {
        swift_bridgeObjectRelease_n();
LABEL_46:
        swift_bridgeObjectRelease();
        goto LABEL_47;
      }
      char v24 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v1 = v20;
      if (v24) {
        goto LABEL_46;
      }
      LOBYTE(v29) = 2;
      uint64_t v28 = 66;
      sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"init(typeString:)", 17, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/Extensions/NSUserActivity_Extensions.swift", 112, 2, 26);
LABEL_41:
      char v25 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if (v25) {
        goto LABEL_47;
      }

      uint64_t v3 = v10;
      unint64_t v4 = v32;
      if (v1 < 0) {
        goto LABEL_8;
      }
LABEL_11:
      if (v4)
      {
        uint64_t v11 = (v4 - 1) & v4;
        unint64_t v12 = __clz(__rbit64(v4)) | (v3 << 6);
        uint64_t v10 = v3;
      }
      else
      {
        int64_t v13 = v3 + 1;
        if (__OFADD__(v3, 1))
        {
          __break(1u);
          JUMPOUT(0x100A6EA44);
        }
        if (v13 >= v30) {
          goto LABEL_44;
        }
        unint64_t v14 = *(void *)(v31 + 8 * v13);
        uint64_t v10 = v3 + 1;
        if (!v14)
        {
          uint64_t v10 = v3 + 2;
          if (v3 + 2 >= v30) {
            goto LABEL_44;
          }
          unint64_t v14 = *(void *)(v31 + 8 * v10);
          if (!v14)
          {
            uint64_t v10 = v3 + 3;
            if (v3 + 3 >= v30) {
              goto LABEL_44;
            }
            unint64_t v14 = *(void *)(v31 + 8 * v10);
            if (!v14)
            {
              uint64_t v10 = v3 + 4;
              if (v3 + 4 >= v30) {
                goto LABEL_44;
              }
              unint64_t v14 = *(void *)(v31 + 8 * v10);
              if (!v14)
              {
                uint64_t v10 = v3 + 5;
                if (v3 + 5 >= v30) {
                  goto LABEL_44;
                }
                unint64_t v14 = *(void *)(v31 + 8 * v10);
                if (!v14)
                {
                  uint64_t v15 = v3 + 6;
                  while (v30 != v15)
                  {
                    unint64_t v14 = *(void *)(v31 + 8 * v15++);
                    if (v14)
                    {
                      uint64_t v10 = v15 - 1;
                      goto LABEL_28;
                    }
                  }
                  goto LABEL_44;
                }
              }
            }
          }
        }
LABEL_28:
        uint64_t v11 = (v14 - 1) & v14;
        unint64_t v12 = __clz(__rbit64(v14)) + (v10 << 6);
      }
      id v9 = *(id *)(*(void *)(v1 + 48) + 8 * v12);
      if (!v9) {
        goto LABEL_47;
      }
    }
    swift_bridgeObjectRelease();
LABEL_36:
    swift_bridgeObjectRelease();
    uint64_t v1 = v20;
    goto LABEL_41;
  }
LABEL_44:
  id v9 = 0;
LABEL_47:
  sub_10052E1EC();
  return v9;
}

id sub_100A6EA6C(uint64_t a1)
{
  uint64_t v1 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    __CocoaSet.makeIterator()();
    sub_10050BF48(0, (unint64_t *)&qword_10168C820);
    sub_10062E0F4((unint64_t *)&unk_10168E2A0, (unint64_t *)&qword_10168C820);
    Set.Iterator.init(_cocoa:)();
    uint64_t v1 = v32;
    uint64_t v30 = v33;
    uint64_t v2 = v34;
    int64_t v3 = v35;
    unint64_t v4 = v36;
  }
  else
  {
    uint64_t v5 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v30 = a1 + 56;
    uint64_t v6 = ~v5;
    uint64_t v7 = -v5;
    if (v7 < 64) {
      uint64_t v8 = ~(-1 << v7);
    }
    else {
      uint64_t v8 = -1;
    }
    unint64_t v4 = v8 & *(void *)(a1 + 56);
    swift_bridgeObjectRetain();
    uint64_t v2 = v6;
    int64_t v3 = 0;
  }
  int64_t v29 = (unint64_t)(v2 + 64) >> 6;
  int64_t v31 = v3;
  if (v1 < 0) {
    goto LABEL_10;
  }
LABEL_8:
  if (v4)
  {
    unint64_t v9 = __clz(__rbit64(v4));
    v4 &= v4 - 1;
    unint64_t v10 = v9 | (v3 << 6);
    goto LABEL_29;
  }
  int64_t v12 = v3 + 1;
  if (__OFADD__(v3, 1))
  {
    __break(1u);
    JUMPOUT(0x100A6F104);
  }
  if (v12 >= v29)
  {
LABEL_45:
    id v11 = 0;
    goto LABEL_48;
  }
  unint64_t v13 = *(void *)(v30 + 8 * v12);
  ++v3;
  if (!v13)
  {
    int64_t v3 = v12 + 1;
    if (v12 + 1 >= v29) {
      goto LABEL_46;
    }
    unint64_t v13 = *(void *)(v30 + 8 * v3);
    if (!v13)
    {
      int64_t v3 = v12 + 2;
      if (v12 + 2 >= v29) {
        goto LABEL_46;
      }
      unint64_t v13 = *(void *)(v30 + 8 * v3);
      if (!v13)
      {
        int64_t v3 = v12 + 3;
        if (v12 + 3 >= v29) {
          goto LABEL_46;
        }
        unint64_t v13 = *(void *)(v30 + 8 * v3);
        if (!v13)
        {
          int64_t v3 = v12 + 4;
          if (v12 + 4 < v29)
          {
            unint64_t v13 = *(void *)(v30 + 8 * v3);
            if (!v13)
            {
              uint64_t v14 = v31 + 6;
              do
              {
                if (v29 == v14) {
                  goto LABEL_45;
                }
                unint64_t v13 = *(void *)(v30 + 8 * v14++);
              }
              while (!v13);
              int64_t v3 = v14 - 1;
            }
            goto LABEL_28;
          }
LABEL_46:
          id v11 = 0;
          goto LABEL_48;
        }
      }
    }
  }
LABEL_28:
  unint64_t v4 = (v13 - 1) & v13;
  unint64_t v10 = __clz(__rbit64(v13)) + (v3 << 6);
LABEL_29:
  id v11 = *(id *)(*(void *)(v1 + 48) + 8 * v10);
  if (v11)
  {
    while (1)
    {
      uint64_t v15 = v1;
      id v16 = [v11 activityType:v26, v27, v28];
      uint64_t v17 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      id v19 = v18;

      swift_bridgeObjectRetain();
      v38._countAndFlagsBits = v17;
      v38._object = v19;
      if (sub_1009C37F0(v38) != 10)
      {
        swift_bridgeObjectRelease();
        uint64_t v1 = v15;
        switch("ateStateRestoration")
        {
          case 1u:
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
          case 7u:
          case 8u:
          case 9u:
            goto LABEL_42;
          default:
            swift_bridgeObjectRelease();
            goto LABEL_48;
        }
      }
      if (v17 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v19 == v20) {
        break;
      }
      char v21 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if (v21) {
        goto LABEL_36;
      }
      if (v17 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v19 == v22)
      {
        swift_bridgeObjectRelease_n();
        uint64_t v1 = v15;
      }
      else
      {
        char v23 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v1 = v15;
        if ((v23 & 1) == 0)
        {
          LOBYTE(v28) = 2;
          uint64_t v27 = 66;
          sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"init(typeString:)", 17, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/Extensions/NSUserActivity_Extensions.swift", 112, 2, 26);
        }
      }
LABEL_42:
      char v24 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if (v24) {
        goto LABEL_48;
      }

      int64_t v31 = v3;
      if ((v1 & 0x8000000000000000) == 0) {
        goto LABEL_8;
      }
LABEL_10:
      if (!__CocoaSet.Iterator.next()()) {
        goto LABEL_45;
      }
      sub_10050BF48(0, (unint64_t *)&qword_10168C820);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      id v11 = v37;
      swift_unknownObjectRelease();
      if (!v37) {
        goto LABEL_48;
      }
    }
    swift_bridgeObjectRelease();
LABEL_36:
    swift_bridgeObjectRelease();
    uint64_t v1 = v15;
    goto LABEL_42;
  }
LABEL_48:
  sub_10052E1EC();
  return v11;
}

uint64_t sub_100A6F12C(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = sub_1005057FC(&qword_10168E300);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5 - 8, v7);
  unint64_t v9 = (uint64_t *)((char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  *unint64_t v9 = a1;
  v9[1] = a2;
  swift_retain();
  UUID.init()();
  unint64_t v10 = *(void *)(v2 + 16);
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    unint64_t v10 = sub_100F64858(0, *(void *)(v10 + 16) + 1, 1, v10);
  }
  unint64_t v12 = *(void *)(v10 + 16);
  unint64_t v11 = *(void *)(v10 + 24);
  if (v12 >= v11 >> 1) {
    unint64_t v10 = sub_100F64858(v11 > 1, v12 + 1, 1, v10);
  }
  *(void *)(v10 + 16) = v12 + 1;
  sub_10051B3EC((uint64_t)v9, v10+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(void *)(v6 + 72) * v12, &qword_10168E300);
  uint64_t v13 = *(void *)(v2 + 16);
  *(void *)(v2 + 16) = v10;
  sub_100A6F29C(v13);
  return swift_bridgeObjectRelease();
}

void sub_100A6F29C(uint64_t a1)
{
  uint64_t v37 = a1;
  uint64_t v2 = sub_1005057FC(&qword_10168E300);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2, v4);
  uint64_t v6 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1005057FC(&qword_10168E308);
  __chkstk_darwin(v7, v8);
  unint64_t v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1005057FC(&qword_10168E310);
  __chkstk_darwin(v11 - 8, v12);
  __chkstk_darwin(v13, v14);
  id v16 = (char *)&v32 - v15;
  __chkstk_darwin(v17, v18);
  char v21 = (char *)&v32 - v19;
  uint64_t v22 = *(void *)(v1 + 16);
  if (*(void *)(v22 + 16))
  {
    uint64_t v33 = v6;
    uint64_t v34 = v20;
    uint64_t v35 = v1;
    unint64_t v36 = v10;
    unint64_t v23 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
    sub_100522E9C(v22 + v23, (uint64_t)&v32 - v19, &qword_10168E300);
    char v24 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56);
    uint64_t v25 = 1;
    v24(v21, 0, 1, v2);
    if (*(void *)(v37 + 16))
    {
      sub_100522E9C(v37 + v23, (uint64_t)v16, &qword_10168E300);
      uint64_t v25 = 0;
    }
    v24(v16, v25, 1, v2);
    uint64_t v26 = (uint64_t)v36;
    uint64_t v27 = (uint64_t)&v36[*(int *)(v7 + 48)];
    sub_100522E9C((uint64_t)v21, (uint64_t)v36, &qword_10168E310);
    sub_100522E9C((uint64_t)v16, v27, &qword_10168E310);
    uint64_t v28 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48);
    if (v28(v26, 1, v2) == 1)
    {
      sub_100522F00((uint64_t)v16, &qword_10168E310);
      sub_100522F00((uint64_t)v21, &qword_10168E310);
      if (v28(v27, 1, v2) == 1)
      {
        sub_100522F00(v26, &qword_10168E310);
        return;
      }
    }
    else
    {
      uint64_t v29 = v34;
      sub_100522E9C(v26, v34, &qword_10168E310);
      if (v28(v27, 1, v2) != 1)
      {
        uint64_t v30 = (uint64_t)v33;
        sub_10051B3EC(v27, (uint64_t)v33, &qword_10168E300);
        char v31 = static UUID.== infix(_:_:)();
        sub_100522F00(v30, &qword_10168E300);
        sub_100522F00((uint64_t)v16, &qword_10168E310);
        sub_100522F00((uint64_t)v21, &qword_10168E310);
        sub_100522F00(v29, &qword_10168E300);
        sub_100522F00(v26, &qword_10168E310);
        if (v31) {
          return;
        }
        goto LABEL_11;
      }
      sub_100522F00((uint64_t)v16, &qword_10168E310);
      sub_100522F00((uint64_t)v21, &qword_10168E310);
      sub_100522F00(v29, &qword_10168E300);
    }
    sub_100522F00(v26, &qword_10168E308);
LABEL_11:
    sub_100A6F680();
  }
}

uint64_t sub_100A6F680()
{
  uint64_t v1 = sub_1005057FC(&qword_101672BB0);
  __chkstk_darwin(v1 - 8, v2);
  uint64_t v4 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1005057FC(&qword_10168E310);
  __chkstk_darwin(v5 - 8, v6);
  uint64_t v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9, v10);
  uint64_t v12 = (char *)&v30 - v11;
  uint64_t v13 = sub_1005057FC(&qword_10168E300);
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(void *)(v14 + 64);
  __chkstk_darwin(v13, v16);
  uint64_t v17 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v20 = __chkstk_darwin(v18, v19);
  uint64_t v22 = (char *)&v30 - v21;
  uint64_t v23 = *(void *)(v0 + 16);
  if (*(void *)(v23 + 16))
  {
    sub_100522E9C(v23 + ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80)), (uint64_t)v8, &qword_10168E300);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v8, 0, 1, v13);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v14 + 56))(v8, 1, 1, v13, v20);
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"runNextTask()", 13, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLUtility/CRLTaskQueue.swift", 83, 2, 31, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"runNextTask()", 13, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLUtility/CRLTaskQueue.swift", 83, 2, 31);
  }
  sub_10051B3EC((uint64_t)v8, (uint64_t)v12, &qword_10168E310);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
  {
    char v24 = &qword_10168E310;
    uint64_t v25 = (uint64_t)v12;
  }
  else
  {
    sub_10051B3EC((uint64_t)v12, (uint64_t)v22, &qword_10168E300);
    uint64_t v26 = type metadata accessor for TaskPriority();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v4, 1, 1, v26);
    sub_100522E9C((uint64_t)v22, (uint64_t)v17, &qword_10168E300);
    unint64_t v27 = (*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
    uint64_t v28 = swift_allocObject();
    *(void *)(v28 + 16) = 0;
    *(void *)(v28 + 24) = 0;
    sub_10051B3EC((uint64_t)v17, v28 + v27, &qword_10168E300);
    *(void *)(v28 + ((v15 + v27 + 7) & 0xFFFFFFFFFFFFFFF8)) = v0;
    swift_retain();
    sub_1005912D0((uint64_t)v4, (uint64_t)&unk_10168E320, v28);
    swift_release();
    uint64_t v25 = (uint64_t)v22;
    char v24 = &qword_10168E300;
  }
  return sub_100522F00(v25, v24);
}

uint64_t sub_100A6FA68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(void *)(v5 + 16) = a4;
  *(void *)(v5 + 24) = a5;
  return _swift_task_switch(sub_100A6FA88, 0, 0);
}

uint64_t sub_100A6FA88()
{
  uint64_t v1 = (**(uint64_t (***)(void))(v0 + 16))();
  *(void *)(v0 + 32) = v1;
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 40) = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_100A6FB50;
  return Task.value.getter(v2, v1, (char *)&type metadata for () + 8, &type metadata for Never, &protocol witness table for Never);
}

uint64_t sub_100A6FB50()
{
  *(void *)(*(void *)v1 + 48) = v0;
  swift_task_dealloc();
  if (v0)
  {
    swift_release();
    swift_errorRelease();
    uint64_t v2 = sub_100A6FD70;
  }
  else
  {
    uint64_t v2 = sub_100A6FC74;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100A6FC74()
{
  swift_release();
  uint64_t v1 = v0[2];
  uint64_t v2 = v0[3];
  *(void *)(swift_task_alloc() + 16) = v1;
  uint64_t v7 = *(void *)(v2 + 16);
  swift_bridgeObjectRetain();
  uint64_t result = sub_100B30744((uint64_t (*)(unint64_t))sub_100A999EC);
  uint64_t v4 = *(void *)(v7 + 16);
  if (v4 < result)
  {
    __break(1u);
  }
  else
  {
    sub_100F4D448(result, v4);
    uint64_t v5 = *(void *)(v2 + 16);
    *(void *)(v2 + 16) = v7;
    sub_100A6F29C(v5);
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v6 = (uint64_t (*)(void))v0[1];
    return v6();
  }
  return result;
}

uint64_t sub_100A6FD70()
{
  uint64_t v1 = v0[2];
  uint64_t v2 = v0[3];
  *(void *)(swift_task_alloc() + 16) = v1;
  uint64_t v7 = *(void *)(v2 + 16);
  swift_bridgeObjectRetain();
  uint64_t result = sub_100B30744((uint64_t (*)(unint64_t))sub_100A999EC);
  uint64_t v4 = *(void *)(v7 + 16);
  if (v4 < result)
  {
    __break(1u);
  }
  else
  {
    sub_100F4D448(result, v4);
    uint64_t v5 = *(void *)(v2 + 16);
    *(void *)(v2 + 16) = v7;
    sub_100A6F29C(v5);
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v6 = (uint64_t (*)(void))v0[1];
    return v6();
  }
  return result;
}

NSString sub_100A6FE64()
{
  NSString result = String._bridgeToObjectiveC()();
  qword_10171B6F0 = (uint64_t)result;
  return result;
}

NSString sub_100A6FE9C()
{
  NSString result = String._bridgeToObjectiveC()();
  qword_10171B6F8 = (uint64_t)result;
  return result;
}

NSString sub_100A6FED4()
{
  NSString result = String._bridgeToObjectiveC()();
  qword_10171B700 = (uint64_t)result;
  return result;
}

NSString sub_100A6FF0C()
{
  NSString result = String._bridgeToObjectiveC()();
  qword_10171B708 = (uint64_t)result;
  return result;
}

NSString sub_100A6FF44()
{
  NSString result = String._bridgeToObjectiveC()();
  qword_10171B710 = (uint64_t)result;
  return result;
}

id sub_100A6FF7C(uint64_t a1)
{
  return sub_100711538(a1, &qword_10166F800, (void **)&qword_10171B6F0, (void **)&qword_10171B718);
}

id sub_100A6FFCC(uint64_t a1)
{
  return sub_100711538(a1, &qword_10166F808, (void **)&qword_10171B6F8, (void **)&qword_10171B720);
}

id sub_100A7001C(uint64_t a1)
{
  return sub_100711538(a1, &qword_10166F810, (void **)&qword_10171B700, (void **)&qword_10171B728);
}

id sub_100A7006C(uint64_t a1)
{
  return sub_100711538(a1, &qword_10166F818, (void **)&qword_10171B708, (void **)&qword_10171B730);
}

id sub_100A70114()
{
  id v0 = sub_100A70A50();
  id v1 = [v0 presentedViewController];

  if (v1)
  {
    self;
    uint64_t v2 = (void *)swift_dynamicCastObjCClass();
    if (v2)
    {
      id v3 = [v2 topViewController];

      if (v3)
      {
        type metadata accessor for CRLiOSBoardViewController();
        uint64_t v4 = swift_dynamicCastClass();
        if (v4)
        {
          id v1 = objc_retain(*(id *)(*(void *)(v4
                                             + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_editingCoordinator)
                                 + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard));

          return v1;
        }
      }
    }
    else
    {
    }
    return 0;
  }
  return v1;
}

uint64_t sub_100A701F0()
{
  id v0 = sub_100A70A50();
  id v1 = [v0 viewControllerForColumn:2];

  if (!v1) {
    goto LABEL_7;
  }
  self;
  uint64_t v2 = (void *)swift_dynamicCastObjCClass();
  if (!v2)
  {

LABEL_7:
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"folderGridViewController", 24, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/App/CRLiOSSceneDelegate.swift", 87, 2, 1820, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"folderGridViewController", 24, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/App/CRLiOSSceneDelegate.swift", 87, 2, 1820);
    return 0;
  }
  id v3 = [v2 topViewController];

  if (v3)
  {
    type metadata accessor for CRLiOSFolderGridViewController();
    uint64_t result = swift_dynamicCastClass();
    if (result) {
      return result;
    }
  }
  return 0;
}

uint64_t sub_100A7033C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = type metadata accessor for CRLBoardLibraryViewModel.Folder(0);
  uint64_t v4 = __chkstk_darwin(v2 - 8, v3);
  uint64_t v6 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4, v7);
  uint64_t v9 = (char *)&v35 - v8;
  uint64_t v10 = type metadata accessor for CRLBoardCRDTData(0);
  __chkstk_darwin(v10, v11);
  uint64_t v13 = (char *)&v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for UUID();
  __chkstk_darwin(v14 - 8, v15);
  uint64_t v17 = (char *)&v35 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = (char *)sub_100A70114();
  if (v18)
  {
    uint64_t v19 = v18;
    unint64_t v36 = (void *)(a1 + *(int *)(sub_1005057FC(&qword_101677100) + 48));
    uint64_t v20 = OBJC_IVAR____TtC8Freeform8CRLBoard_data;
    uint64_t v21 = *(void *)&v19[OBJC_IVAR____TtC8Freeform8CRLBoard_data] + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
    swift_beginAccess();
    sub_100A982B0(v21, (uint64_t)v13, type metadata accessor for CRLBoardCRDTData);
    swift_retain();
    sub_1005057FC(&qword_101674550);
    CRRegister.wrappedValue.getter();
    sub_100A98CC0((uint64_t)v13, type metadata accessor for CRLBoardCRDTData);
    swift_release();
    uint64_t v22 = (uint64_t *)(*(void *)&v19[v20] + OBJC_IVAR____TtC8Freeform12CRLBoardData_ownerName);
    uint64_t v23 = *v22;
    unint64_t v24 = v22[1];
    swift_bridgeObjectRetain();
    sub_100753370((uint64_t)v17, v23, v24, a1);
    uint64_t v25 = *(void *)&v19[v20] + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
    swift_beginAccess();
    sub_100A982B0(v25, (uint64_t)v13, type metadata accessor for CRLBoardCRDTData);
    sub_1005057FC(&qword_101674450);
    CRRegister.wrappedValue.getter();
    uint64_t v26 = v37;
    uint64_t v27 = v38;
    sub_100A98CC0((uint64_t)v13, type metadata accessor for CRLBoardCRDTData);

    uint64_t v28 = v36;
    void *v36 = v26;
    v28[1] = v27;
    uint64_t v29 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
LABEL_5:
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(a1, 0, 1, v29);
  }
  uint64_t v30 = sub_100A701F0();
  if (v30)
  {
    char v31 = (void *)v30;
    sub_100A982B0(v30 + OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_folder, (uint64_t)v6, type metadata accessor for CRLBoardLibraryViewModel.Folder);

    sub_100A98C58((uint64_t)v6, (uint64_t)v9, type metadata accessor for CRLBoardLibraryViewModel.Folder);
    sub_100A98C58((uint64_t)v9, a1, type metadata accessor for CRLBoardLibraryViewModel.Folder);
    uint64_t v29 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
    goto LABEL_5;
  }
  uint64_t v33 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  uint64_t v34 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56);

  return v34(a1, 1, 1, v33);
}

void sub_100A70728()
{
  uint64_t v1 = OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate____lazy_storage___boardLibrary;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate____lazy_storage___boardLibrary);
  if (v2 != (void *)1)
  {
LABEL_6:
    sub_10052315C(v2);
    return;
  }
  id v3 = [self sharedApplication];
  id v4 = [v3 delegate];

  if (v4)
  {
    type metadata accessor for CRLiOSAppDelegate();
    uint64_t v5 = *(void **)(swift_dynamicCastClassUnconditional() + OBJC_IVAR____TtC8Freeform17CRLiOSAppDelegate_boardLibrary);
    id v6 = v5;
    swift_unknownObjectRelease();
    if (!v5)
    {
      sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"boardLibrary", 12, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/App/CRLiOSSceneDelegate.swift", 87, 2, 74, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"boardLibrary", 12, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/App/CRLiOSSceneDelegate.swift", 87, 2, 74);
    }
    uint64_t v7 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v5;
    id v8 = v6;
    sub_100522AD8(v7);
    goto LABEL_6;
  }
  __break(1u);
}

void sub_100A708BC()
{
  uint64_t v1 = OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate____lazy_storage___boardPreviewImageCache;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate____lazy_storage___boardPreviewImageCache);
  if (v2 != (void *)1)
  {
LABEL_6:
    sub_10052315C(v2);
    return;
  }
  id v3 = [self sharedApplication];
  id v4 = [v3 delegate];

  if (v4)
  {
    type metadata accessor for CRLiOSAppDelegate();
    uint64_t v5 = *(void **)(swift_dynamicCastClassUnconditional()
                  + OBJC_IVAR____TtC8Freeform17CRLiOSAppDelegate_boardPreviewImageCache);
    id v6 = v5;
    swift_unknownObjectRelease();
    if (!v5)
    {
      sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"boardPreviewImageCache", 22, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/App/CRLiOSSceneDelegate.swift", 87, 2, 76, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"boardPreviewImageCache", 22, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/App/CRLiOSSceneDelegate.swift", 87, 2, 76);
    }
    uint64_t v7 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v5;
    id v8 = v6;
    sub_100522AD8(v7);
    goto LABEL_6;
  }
  __break(1u);
}

id sub_100A70A50()
{
  uint64_t v1 = OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate____lazy_storage___splitViewController;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate____lazy_storage___splitViewController);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate____lazy_storage___splitViewController);
  }
  else
  {
    id v4 = [objc_allocWithZone((Class)UISplitViewController) initWithStyle:1];
    if (objc_msgSend(self, "crl_phoneUI")) {
      uint64_t v5 = 2;
    }
    else {
      uint64_t v5 = 1;
    }
    [v4 setPreferredSplitBehavior:v5];
    sub_100A70B24();
    uint64_t v7 = v6;
    [v4 setViewController:v6 forColumn:0];

    id v8 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v9 = v2;
  return v3;
}

void sub_100A70B24()
{
  uint64_t v1 = OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate____lazy_storage___sidebarViewController;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate____lazy_storage___sidebarViewController);
  if (v2) {
    goto LABEL_4;
  }
  sub_100A70728();
  if (v3)
  {
    id v4 = v3;
    id v5 = objc_allocWithZone((Class)UICollectionViewLayout);
    swift_unknownObjectRetain();
    id v6 = [v5 init];
    uint64_t v7 = objc_allocWithZone((Class)type metadata accessor for CRLiOSSidebarViewController());
    id v8 = (char *)sub_100A95A64((uint64_t)v4, (uint64_t)v6, v7);

    *(void *)&v8[OBJC_IVAR____TtC8Freeform27CRLiOSSidebarViewController_delegate + 8] = &off_101520158;
    swift_unknownObjectWeakAssign();
    id v9 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v8;
    v8;

    uint64_t v2 = 0;
LABEL_4:
    id v10 = v2;
    return;
  }
  __break(1u);
}

uint64_t sub_100A70C14(uint64_t a1)
{
  uint64_t v3 = sub_1005057FC(&qword_10168E108);
  uint64_t v5 = __chkstk_darwin(v3 - 8, v4);
  uint64_t v7 = &v15[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v5, v8);
  id v10 = &v15[-v9];
  uint64_t v11 = v1 + OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate_welcomeControllerDidDismissContinuation;
  swift_beginAccess();
  sub_100522E9C(v11, (uint64_t)v10, &qword_10168E108);
  swift_beginAccess();
  sub_100A99C2C(a1, v11);
  swift_endAccess();
  sub_100522E9C((uint64_t)v10, (uint64_t)v7, &qword_10168E108);
  uint64_t v12 = sub_1005057FC(&qword_101682E08);
  uint64_t v13 = *(void *)(v12 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v13 + 48))(v7, 1, v12) == 1)
  {
    sub_100522F00((uint64_t)v7, &qword_10168E108);
  }
  else
  {
    CheckedContinuation.resume(returning:)();
    (*(void (**)(unsigned char *, uint64_t))(v13 + 8))(v7, v12);
  }
  sub_100522F00(a1, &qword_10168E108);
  return sub_100522F00((uint64_t)v10, &qword_10168E108);
}

uint64_t sub_100A70DDC()
{
  id v0 = sub_100A70A50();
  id v1 = [v0 presentedViewController];

  if (v1)
  {
    id v2 = sub_100A70A50();
    id v3 = [v2 presentedViewController];

    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    uint64_t v5 = (void *)Strong;
    if (v3)
    {
      if (!Strong)
      {
        LOBYTE(v1) = 0;
        goto LABEL_9;
      }
      sub_10050BF48(0, (unint64_t *)&qword_1016745A0);
      id v6 = v3;
      LOBYTE(v1) = static NSObject.== infix(_:_:)();

LABEL_7:
      id v3 = v5;
LABEL_9:

      goto LABEL_10;
    }
    if (Strong)
    {
      LOBYTE(v1) = 0;
      goto LABEL_7;
    }
    LOBYTE(v1) = 1;
  }
LABEL_10:
  id v7 = sub_100A70A50();
  id v8 = [v7 presentedViewController];

  if (v8)
  {
    self;
    uint64_t v9 = (void *)swift_dynamicCastObjCClass();
    if (!v9) {
      goto LABEL_28;
    }
    id v10 = [v9 topViewController];

    if (v10)
    {
      type metadata accessor for CRLiOSBoardViewController();
      uint64_t v11 = (void *)swift_dynamicCastClass();
      if (!v11)
      {

        return v1 & 1;
      }
      id v12 = [v11 presentedViewController];

      if (v12)
      {

        id v13 = sub_100A70A50();
        id v8 = [v13 presentedViewController];

        if (v8)
        {
          self;
          uint64_t v14 = (void *)swift_dynamicCastObjCClass();
          if (v14)
          {
            id v15 = [v14 topViewController];

            if (v15)
            {
              uint64_t v16 = (void *)swift_dynamicCastClass();
              if (v16)
              {
                id v8 = [v16 presentedViewController];

                goto LABEL_25;
              }
            }
          }
          else
          {
          }
          id v8 = 0;
        }
LABEL_25:
        uint64_t v17 = (void *)swift_unknownObjectWeakLoadStrong();
        uint64_t v18 = v17;
        if (v8)
        {
          if (v17)
          {
            sub_10050BF48(0, (unint64_t *)&qword_1016745A0);
            id v19 = v8;
            char v20 = static NSObject.== infix(_:_:)();

            LOBYTE(v1) = v20 | v1;
            return v1 & 1;
          }
LABEL_28:

          return v1 & 1;
        }
        if (v17) {

        }
        else {
          LOBYTE(v1) = 1;
        }
      }
    }
  }
  return v1 & 1;
}

uint64_t sub_100A710A0()
{
  v1[35] = v0;
  type metadata accessor for MainActor();
  v1[36] = static MainActor.shared.getter();
  uint64_t v3 = dispatch thunk of Actor.unownedExecutor.getter();
  v1[37] = v3;
  v1[38] = v2;
  return _swift_task_switch(sub_100A71138, v3, v2);
}

uint64_t sub_100A71138()
{
  id v1 = sub_100A70A50();
  id v2 = [v1 presentedViewController];

  if (!v2) {
    goto LABEL_6;
  }
  self;
  uint64_t v3 = (void *)swift_dynamicCastObjCClass();
  if (!v3) {
    goto LABEL_5;
  }
  id v4 = [v3 topViewController];

  if (v4)
  {
    type metadata accessor for CRLiOSBoardViewController();
    uint64_t v5 = (void *)swift_dynamicCastClass();
    id v2 = v4;
    if (v5) {
      goto LABEL_7;
    }
LABEL_5:
  }
LABEL_6:
  uint64_t v5 = sub_100A70A50();
LABEL_7:
  v0[39] = v5;
  id v6 = [v5 presentedViewController];
  v0[40] = v6;
  if (v6)
  {
    id v7 = v6;
    if (qword_10166FB38 != -1) {
      swift_once();
    }
    swift_beginAccess();
    id v8 = (void *)static OS_os_log.sceneManagement;
    v0[41] = sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_10117D8C0;
    uint64_t v10 = sub_10050BF48(0, (unint64_t *)&qword_1016745A0);
    *(void *)(inited + 56) = v10;
    uint64_t v11 = sub_10062E0F4(&qword_10169FC60, (unint64_t *)&qword_1016745A0);
    *(void *)(inited + 32) = v7;
    *(void *)(inited + 96) = v10;
    *(void *)(inited + 104) = v11;
    *(void *)(inited + 64) = v11;
    *(void *)(inited + 72) = v5;
    id v12 = v8;
    id v13 = v7;
    id v14 = v5;
    uint64_t v15 = static os_log_type_t.default.getter();
    sub_100BAC898((uint64_t)v12, (uint64_t)&_mh_execute_header, v15, (uint64_t)"Trying to dismiss presentedViewController:%@ of topViewController:%@", 68, 2, inited);
    swift_setDeallocating();
    v0[42] = sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();

    if (objc_msgSend(v13, "crl_canBeDismissed"))
    {
      self;
      char v16 = swift_dynamicCastObjCClass() == 0;
      uint64_t v17 = (void *)swift_task_alloc();
      v0[43] = v17;
      *uint64_t v17 = v0;
      v17[1] = sub_100A71478;
      return sub_100B758E8(v16);
    }
  }
  swift_release();

  id v19 = (uint64_t (*)(void))v0[1];
  return v19();
}

uint64_t sub_100A71478()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 352) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 304);
  uint64_t v4 = *(void *)(v2 + 296);
  if (v0) {
    uint64_t v5 = sub_100A71624;
  }
  else {
    uint64_t v5 = sub_100A715B4;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_100A715B4()
{
  id v1 = *(void **)(v0 + 312);

  swift_release();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_100A71624()
{
  id v1 = (void *)v0[40];
  swift_release();

  if (qword_10166F9D8 != -1) {
    swift_once();
  }
  uint64_t v2 = (void *)v0[39];
  swift_beginAccess();
  uint64_t v3 = (void *)static OS_os_log.crlError;
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117E810;
  swift_getErrorValue();
  id v5 = v3;
  uint64_t v6 = Error.localizedDescription.getter();
  uint64_t v8 = v7;
  *(void *)(inited + 56) = &type metadata for String;
  *(void *)(inited + 64) = sub_100528BE4();
  *(void *)(inited + 32) = v6;
  *(void *)(inited + 40) = v8;
  uint64_t v9 = static os_log_type_t.error.getter();
  sub_100BAC898((uint64_t)v5, (uint64_t)&_mh_execute_header, v9, (uint64_t)"Caught error trying to dismiss view controller: %@", 50, 2, inited);

  swift_setDeallocating();
  swift_arrayDestroy();

  swift_errorRelease();
  uint64_t v10 = (uint64_t (*)(void))v0[1];
  return v10();
}

void sub_100A717D8(void *a1, void *a2, void *a3)
{
  uint64_t v6 = sub_1005057FC(&qword_101672E90);
  __chkstk_darwin(v6 - 8, v7);
  uint64_t v9 = (char *)&v117 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = (void *)type metadata accessor for URL();
  uint64_t v11 = *(v10 - 1);
  uint64_t v12 = *(void *)(v11 + 64);
  __chkstk_darwin(v10, v13);
  id v14 = (char *)&v117 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15, v16);
  uint64_t v18 = (char *)&v117 - v17;
  uint64_t v19 = sub_1005057FC(&qword_101672BB0);
  __chkstk_darwin(v19 - 8, v20);
  uint64_t v22 = (char *)&v117 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  self;
  uint64_t v23 = (void *)swift_dynamicCastObjCClass();
  if (v23)
  {
    CGFloat v119 = v18;
    id v118 = a2;
    uint64_t v120 = v11;
    id v121 = v10;
    id v122 = v22;
    CATransform3D v124 = v23;
    id v123 = a1;
    id v24 = [a3 userActivities];
    sub_10050BF48(0, (unint64_t *)&qword_10168C820);
    sub_10062E0F4((unint64_t *)&unk_10168E2A0, (unint64_t *)&qword_10168C820);
    uint64_t v25 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

    id v26 = sub_100A6D63C(v25);
    swift_bridgeObjectRelease();
    id v125 = a3;
    if (v26) {
      goto LABEL_5;
    }
    id v27 = [a3 userActivities];
    uint64_t v28 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

    id v26 = sub_100A6DCFC(v28);
    swift_bridgeObjectRelease();
    if (v26
      || (id v29 = [v125 userActivities],
          uint64_t v30 = static Set._unconditionallyBridgeFromObjectiveC(_:)(),
          v29,
          id v26 = sub_100A6E3D0(v30),
          swift_bridgeObjectRelease(),
          v26))
    {
LABEL_5:
      char v31 = 0;
LABEL_6:
      id v32 = v126;
LABEL_7:
      uint64_t v33 = self;
      id v34 = [v33 firstLaunchActionForVersion:[v33 currentVersion] userDefaultsVersion:0];
      if (v34)
      {
        if (qword_10166FB38 != -1) {
          swift_once();
        }
        swift_beginAccess();
        uint64_t v35 = (void *)static OS_os_log.sceneManagement;
        sub_1005057FC((uint64_t *)&unk_101672B40);
        uint64_t inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = xmmword_10117E810;
        *(void *)(inited + 56) = type metadata accessor for CRLiOSSceneDelegate();
        *(void *)(inited + 64) = sub_100A99018((unint64_t *)&unk_10168E260, (void (*)(uint64_t))type metadata accessor for CRLiOSSceneDelegate);
        *(void *)(inited + 32) = v32;
        id v37 = v32;
        id v38 = v35;
        uint64_t v39 = static os_log_type_t.default.getter();
        sub_100BAC898((uint64_t)v38, (uint64_t)&_mh_execute_header, v39, (uint64_t)"Scene delegate (%p) will show First Launch. Updating user default.", 66, 2, inited);
        swift_setDeallocating();
        sub_1005057FC(&qword_101672B50);
        swift_arrayDestroy();

        [v33 updateUserDefaultsVersion:0];
      }
      BOOL v40 = v34 != 0;
      if (v34) {
        char v41 = 1;
      }
      else {
        char v41 = v31;
      }
      sub_100A75058(v124, v41);
      char v43 = v42;
      int64_t v126 = (unsigned char *)swift_allocObject();
      v126[16] = 0;
      uint64_t v44 = swift_allocObject();
      *(void *)(v44 + 16) = v32;
      *(void *)(v44 + 24) = v43;
      *(unsigned char *)(v44 + 32) = v40;
      *(void *)(v44 + 40) = v34;
      id v45 = v43;
      id v46 = v32;
      id v47 = v45;
      id v48 = v46;
      sub_100A70728();
      if (v49)
      {
        uint64_t v50 = v49;
        uint64_t v51 = swift_allocObject();
        id v52 = v125;
        *(void *)(v51 + 16) = v48;
        *(void *)(v51 + 24) = v52;
        *(void *)(v51 + 32) = v26;
        *(void *)(v51 + 40) = sub_100A99474;
        uint64_t v53 = v126;
        *(void *)(v51 + 48) = v44;
        *(void *)(v51 + 56) = v53;
        *(unsigned char *)(v51 + 64) = v40;
        LOBYTE(v53) = v50[OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_didStartUpdating];
        CATransform3D v124 = v50;
        if (v53)
        {
          BOOL v54 = v34 != 0;
          id v122 = v26;
          swift_retain();
          id v121 = v34;
          uint64_t v55 = (uint64_t)v126;
          swift_retain_n();
          id v56 = v48;
          id v57 = v52;
          uint64_t v58 = (char *)v56;
          id v59 = v47;
          id v60 = v57;
          sub_100A96850(v58, v60, v26, v55, v54, v58, v43, v54, (uint64_t)v121);

          swift_release();
          swift_release();
          swift_release_n();
        }
        else
        {
          unint64_t v70 = self;
          id v71 = v26;
          id v72 = v48;
          id v73 = v52;
          id v121 = v71;
          swift_retain();
          swift_retain();
          id v125 = v72;
          id v122 = v73;
          swift_retain();
          swift_retain();
          id v74 = [v70 defaultCenter];
          uint64_t v75 = swift_allocObject();
          *(void *)(v75 + 16) = 0;
          if (qword_1016700C0 != -1) {
            swift_once();
          }
          uint64_t v76 = qword_10171C6C8;
          id v77 = [self mainQueue];
          char v78 = (void *)swift_allocObject();
          v78[2] = v75;
          v78[3] = v74;
          v78[4] = sub_100A994DC;
          v78[5] = v51;
          aBlock[4] = sub_10062E80C;
          aBlock[5] = v78;
          aBlock[0] = _NSConcreteStackBlock;
          aBlock[1] = *(void *)"";
          void aBlock[2] = sub_1005E5680;
          void aBlock[3] = &unk_101520618;
          uint64_t v79 = _Block_copy(aBlock);
          swift_retain();
          id v80 = v74;
          swift_retain();
          swift_release();
          uint64_t v81 = v76;
          uint64_t v82 = v124;
          id v83 = [v80 addObserverForName:v81 object:v124 queue:v77 usingBlock:v79];

          _Block_release(v79);
          swift_beginAccess();
          *(void *)(v75 + 16) = v83;
          swift_release();
          id v84 = v121;

          swift_release_n();
          swift_release();
          id v85 = v125;

          swift_release_n();
          swift_unknownObjectRelease();
        }
      }
      else
      {

        __break(1u);
      }
      return;
    }
    id v86 = v125;
    id v87 = [v125 shortcutItem];
    if (v87)
    {
      int64_t v88 = v87;
      id v89 = [v87 type];
      uint64_t v90 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      long long v92 = v91;

      v93._countAndFlagsBits = v90;
      v93._object = v92;
      Swift::Int v94 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1015047B0, v93);
      swift_bridgeObjectRelease();
      if (v94)
      {

        char v31 = 0;
        id v26 = 0;
        goto LABEL_6;
      }
      uint64_t v108 = type metadata accessor for TaskPriority();
      uint64_t v109 = (uint64_t)v122;
      (*(void (**)(id, uint64_t, uint64_t, uint64_t))(*(void *)(v108 - 8) + 56))(v122, 1, 1, v108);
      type metadata accessor for MainActor();
      id v32 = v126;
      CGFloat v110 = v126;
      uint64_t v111 = static MainActor.shared.getter();
      uint64_t v112 = (void *)swift_allocObject();
      v112[2] = v111;
      v112[3] = &protocol witness table for MainActor;
      v112[4] = v110;
      sub_1005914F0(v109, (uint64_t)&unk_10168E2D8, (uint64_t)v112);
      swift_release();
    }
    else
    {
      id v95 = [v86 URLContexts];
      sub_10050BF48(0, &qword_1016787B8);
      sub_10062E0F4((unint64_t *)&unk_10168E2B0, &qword_1016787B8);
      uint64_t v96 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

      CGFloat v97 = (void *)sub_100999AF8(v96);
      swift_bridgeObjectRelease();
      if (v97)
      {
        id v98 = [v97 URL];

        static URL._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v99 = v120;
        uint64_t v100 = *(void (**)(char *, char *, id))(v120 + 32);
        id v101 = v121;
        v100(v9, v14, v121);
        (*(void (**)(char *, void, uint64_t, id))(v99 + 56))(v9, 0, 1, v101);
        if ((*(unsigned int (**)(char *, uint64_t, id))(v99 + 48))(v9, 1, v101) != 1)
        {
          __n128 v102 = v119;
          v100(v119, v9, v101);
          uint64_t v103 = type metadata accessor for TaskPriority();
          (*(void (**)(id, uint64_t, uint64_t, uint64_t))(*(void *)(v103 - 8) + 56))(v122, 1, 1, v103);
          (*(void (**)(char *, char *, id))(v99 + 16))(v14, v102, v101);
          type metadata accessor for MainActor();
          CGFloat v104 = v126;
          uint64_t v105 = static MainActor.shared.getter();
          unint64_t v106 = (*(unsigned __int8 *)(v99 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v99 + 80);
          CGFloat v107 = (char *)swift_allocObject();
          *((void *)v107 + 2) = v105;
          *((void *)v107 + 3) = &protocol witness table for MainActor;
          *((void *)v107 + 4) = v104;
          v100(&v107[v106], v14, v101);
          sub_1005912D0((uint64_t)v122, (uint64_t)&unk_10168E2C8, (uint64_t)v107);
          swift_release();
          id v32 = v126;
          (*(void (**)(char *, id))(v99 + 8))(v102, v101);
          goto LABEL_39;
        }
      }
      else
      {
        (*(void (**)(char *, uint64_t, uint64_t, id))(v120 + 56))(v9, 1, 1, v121);
      }
      sub_100522F00((uint64_t)v9, &qword_101672E90);
      id v113 = [v125 userActivities];
      uint64_t v114 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

      id v26 = sub_100A6EA6C(v114);
      swift_bridgeObjectRelease();
      if (v26)
      {
        id v32 = v126;
      }
      else
      {
        id v26 = [v118 stateRestorationActivity];
        id v32 = v126;
        if (!v26)
        {
          char v31 = 0;
          goto LABEL_7;
        }
      }
      if (sub_1009C302C())
      {
        char v31 = 1;
        goto LABEL_7;
      }
      if (qword_10166F9E0 != -1) {
        swift_once();
      }
      swift_beginAccess();
      id v115 = (id)static OS_os_log.crlWarning;
      uint64_t v116 = static os_log_type_t.info.getter();
      sub_100BAC898((uint64_t)v115, (uint64_t)&_mh_execute_header, v116, (uint64_t)"Skipping user activity from a newer version.", 44, 2, (uint64_t)_swiftEmptyArrayStorage);
    }
LABEL_39:
    char v31 = 0;
    id v26 = 0;
    goto LABEL_7;
  }
  if (qword_10166FB38 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v61 = (void *)static OS_os_log.sceneManagement;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t v62 = swift_initStackObject();
  *(_OWORD *)(v62 + 16) = xmmword_10117E810;
  id v63 = a1;
  id v64 = v61;
  id v65 = [v63 description];
  uint64_t v66 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v68 = v67;

  *(void *)(v62 + 56) = &type metadata for String;
  *(void *)(v62 + 64) = sub_100528BE4();
  *(void *)(v62 + 32) = v66;
  *(void *)(v62 + 40) = v68;
  uint64_t v69 = static os_log_type_t.error.getter();
  sub_100BAC898((uint64_t)v64, (uint64_t)&_mh_execute_header, v69, (uint64_t)"Connecting to unexpected scene: %@", 34, 2, v62);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();
}

uint64_t sub_100A72788(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[2] = a1;
  v4[3] = a4;
  type metadata accessor for CRLBoardLibraryViewModel.Folder(0);
  v4[4] = swift_task_alloc();
  type metadata accessor for MainActor();
  v4[5] = static MainActor.shared.getter();
  uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
  v4[6] = v6;
  v4[7] = v5;
  return _swift_task_switch(sub_100A7284C, v6, v5);
}

uint64_t sub_100A7284C()
{
  uint64_t v1 = v0[4];
  uint64_t v2 = sub_1005057FC(&qword_101670F30);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(v1, 1, 5, v2);
  id v3 = [self mainBundle];
  NSString v4 = String._bridgeToObjectiveC()();
  NSString v5 = String._bridgeToObjectiveC()();
  id v6 = [v3 localizedStringForKey:v4 value:v5 table:0];

  uint64_t v7 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v9 = v8;

  v0[8] = v9;
  uint64_t v10 = (void *)swift_task_alloc();
  v0[9] = v10;
  void *v10 = v0;
  v10[1] = sub_100A729E4;
  uint64_t v11 = v0[4];
  return sub_100A72B60(v11, v7, v9, 1);
}

uint64_t sub_100A729E4(uint64_t a1)
{
  uint64_t v2 = *v1;
  uint64_t v3 = *(void *)(*v1 + 32);
  *(void *)(*v1 + 80) = a1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  sub_100A98CC0(v3, type metadata accessor for CRLBoardLibraryViewModel.Folder);
  uint64_t v4 = *(void *)(v2 + 56);
  uint64_t v5 = *(void *)(v2 + 48);
  return _swift_task_switch(sub_100A9A6DC, v5, v4);
}

uint64_t sub_100A72B60(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  *(unsigned char *)(v5 + 408) = a4;
  *(void *)(v5 + 184) = a3;
  *(void *)(v5 + 192) = v4;
  *(void *)(v5 + 168) = a1;
  *(void *)(v5 + 176) = a2;
  uint64_t v6 = type metadata accessor for CRLBoardLibraryViewModel.Folder(0);
  *(void *)(v5 + 200) = v6;
  *(void *)(v5 + 208) = *(void *)(v6 - 8);
  *(void *)(v5 + 216) = swift_task_alloc();
  *(void *)(v5 + 224) = sub_1005057FC(&qword_10168E120);
  *(void *)(v5 + 232) = swift_task_alloc();
  sub_1005057FC(&qword_10168E128);
  *(void *)(v5 + 240) = swift_task_alloc();
  *(void *)(v5 + 248) = swift_task_alloc();
  *(void *)(v5 + 256) = swift_task_alloc();
  *(void *)(v5 + 264) = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  *(void *)(v5 + 272) = swift_task_alloc();
  *(void *)(v5 + 280) = type metadata accessor for MainActor();
  *(void *)(v5 + 288) = static MainActor.shared.getter();
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v5 + 296) = v7;
  *uint64_t v7 = v5;
  v7[1] = sub_100A72D24;
  return sub_100A710A0();
}

uint64_t sub_100A72D24()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v3 = dispatch thunk of Actor.unownedExecutor.getter();
  *(void *)(v1 + 304) = v3;
  *(void *)(v1 + 312) = v2;
  return _swift_task_switch(sub_100A72E68, v3, v2);
}

void sub_100A72E68()
{
  sub_100A982B0(v0[21], v0[34], type metadata accessor for CRLBoardLibraryViewModel.Folder);
  swift_storeEnumTagMultiPayload();
  sub_100A70728();
  v0[40] = v1;
  if (v1)
  {
    v0[41] = static MainActor.shared.getter();
    uint64_t v2 = (void *)swift_task_alloc();
    v0[42] = (uint64_t)v2;
    *uint64_t v2 = v0;
    v2[1] = sub_100A72F6C;
    uint64_t v3 = v0[22];
    uint64_t v4 = v0[23];
    uint64_t v5 = v0[21];
    sub_100EE1C1C(v5, v3, v4, 0, 1);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_100A72F6C(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 344) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = dispatch thunk of Actor.unownedExecutor.getter();
    uint64_t v7 = v6;
    uint64_t v8 = sub_100A7360C;
  }
  else
  {
    *(void *)(v4 + 352) = a1;
    uint64_t v5 = dispatch thunk of Actor.unownedExecutor.getter();
    uint64_t v7 = v9;
    uint64_t v8 = sub_100A730EC;
  }
  return _swift_task_switch(v8, v5, v7);
}

uint64_t sub_100A730EC()
{
  uint64_t v1 = v0[44];
  uint64_t v2 = (void *)v0[40];
  swift_release();
  v0[45] = sub_100EEC1AC(v1, v2);

  swift_release();
  uint64_t v3 = v0[38];
  uint64_t v4 = v0[39];
  return _swift_task_switch(sub_100A73170, v3, v4);
}

uint64_t sub_100A73170()
{
  uint64_t v1 = *(void *)(v0 + 360);
  uint64_t v2 = *(void *)(v0 + 192);
  *(void *)(v1 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_delegate + 8) = &off_101520118;
  swift_unknownObjectWeakAssign();
  uint64_t v3 = *(char **)(v1 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_shareSheetProvider);
  uint64_t v4 = &v3[OBJC_IVAR____TtC8Freeform27CRLGelatoShareSheetProvider_thumbnailProvider];
  *(void *)uint64_t v4 = v2;
  *((void *)v4 + 1) = &off_101520148;
  uint64_t v5 = v3;
  swift_unknownObjectRelease();
  swift_unknownObjectRetain();

  uint64_t v6 = *(void *)(v1 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_appAnalyticsBoardTracker);
  if (v6) {
    *(unsigned char *)(v6 + 16) = 1;
  }
  uint64_t v7 = sub_100A701F0();
  uint64_t v8 = *(void *)(v0 + 256);
  uint64_t v9 = *(void *)(v0 + 200);
  uint64_t v10 = *(void *)(v0 + 208);
  if (v7)
  {
    uint64_t v11 = (void *)v7;
    sub_100A982B0(v7 + OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_folder, *(void *)(v0 + 256), type metadata accessor for CRLBoardLibraryViewModel.Folder);

    uint64_t v12 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);
    v12(v8, 0, 1, v9);
  }
  else
  {
    uint64_t v12 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);
    v12(*(void *)(v0 + 256), 1, 1, v9);
  }
  uint64_t v14 = *(void *)(v0 + 248);
  uint64_t v13 = *(void *)(v0 + 256);
  uint64_t v15 = *(void *)(v0 + 224);
  uint64_t v16 = *(void *)(v0 + 232);
  uint64_t v17 = *(void *)(v0 + 200);
  uint64_t v18 = *(void *)(v0 + 208);
  sub_100A982B0(*(void *)(v0 + 168), v14, type metadata accessor for CRLBoardLibraryViewModel.Folder);
  v12(v14, 0, 1, v17);
  uint64_t v19 = v16 + *(int *)(v15 + 48);
  sub_100522E9C(v13, v16, &qword_10168E128);
  sub_100522E9C(v14, v19, &qword_10168E128);
  uint64_t v20 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v18 + 48);
  if (v20(v16, 1, v17) == 1)
  {
    uint64_t v21 = *(void *)(v0 + 256);
    uint64_t v22 = *(void *)(v0 + 200);
    sub_100522F00(*(void *)(v0 + 248), &qword_10168E128);
    sub_100522F00(v21, &qword_10168E128);
    if (v20(v19, 1, v22) == 1)
    {
      sub_100522F00(*(void *)(v0 + 232), &qword_10168E128);
LABEL_13:
      char v31 = *(void **)(*(void *)(*(void *)(v0 + 360)
                                 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_editingCoordinator)
                     + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard);
      *(void *)(v0 + 384) = v31;
      id v32 = v31;
      sub_1005B09AC();
      uint64_t v33 = (void *)swift_task_alloc();
      *(void *)(v0 + 392) = v33;
      *uint64_t v33 = v0;
      v33[1] = sub_100A73A8C;
      uint64_t v34 = *(void *)(v0 + 360);
      char v35 = *(unsigned char *)(v0 + 408);
      return sub_100A86230(v34, 0, v35);
    }
    goto LABEL_11;
  }
  uint64_t v23 = *(void *)(v0 + 200);
  sub_100522E9C(*(void *)(v0 + 232), *(void *)(v0 + 240), &qword_10168E128);
  unsigned int v24 = v20(v19, 1, v23);
  uint64_t v26 = *(void *)(v0 + 248);
  uint64_t v25 = *(void *)(v0 + 256);
  uint64_t v27 = *(void *)(v0 + 240);
  if (v24 == 1)
  {
    sub_100522F00(*(void *)(v0 + 248), &qword_10168E128);
    sub_100522F00(v25, &qword_10168E128);
    sub_100A98CC0(v27, type metadata accessor for CRLBoardLibraryViewModel.Folder);
LABEL_11:
    sub_100522F00(*(void *)(v0 + 232), &qword_10168E120);
    goto LABEL_16;
  }
  uint64_t v28 = *(void *)(v0 + 232);
  uint64_t v29 = *(void *)(v0 + 216);
  sub_100A98C58(v19, v29, type metadata accessor for CRLBoardLibraryViewModel.Folder);
  char v30 = sub_100DDC744(v27, v29);
  sub_100A98CC0(v29, type metadata accessor for CRLBoardLibraryViewModel.Folder);
  sub_100522F00(v26, &qword_10168E128);
  sub_100522F00(v25, &qword_10168E128);
  sub_100A98CC0(v27, type metadata accessor for CRLBoardLibraryViewModel.Folder);
  sub_100522F00(v28, &qword_10168E128);
  if (v30) {
    goto LABEL_13;
  }
LABEL_16:
  id v37 = (void *)swift_task_alloc();
  *(void *)(v0 + 368) = v37;
  void *v37 = v0;
  v37[1] = sub_100A73874;
  uint64_t v38 = *(void *)(v0 + 272);
  return sub_100A7B5C4(v38, 0, 0, 0);
}

uint64_t sub_100A7360C()
{
  uint64_t v1 = (void *)v0[40];
  swift_release();

  uint64_t v2 = v0[38];
  uint64_t v3 = v0[39];
  return _swift_task_switch(sub_100A73674, v2, v3);
}

uint64_t sub_100A73674()
{
  uint64_t v1 = v0[43];
  uint64_t v2 = v0[34];
  swift_release();
  sub_100A98CC0(v2, type metadata accessor for CRLBoardLibraryViewModel.Item);
  if (qword_10166F9C8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v3 = (void *)static OS_os_log.crlDefault;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117E810;
  v0[20] = v1;
  id v5 = v3;
  swift_errorRetain();
  sub_1005057FC(&qword_101672BD0);
  uint64_t v6 = String.init<A>(describing:)();
  uint64_t v8 = v7;
  *(void *)(inited + 56) = &type metadata for String;
  *(void *)(inited + 64) = sub_100528BE4();
  *(void *)(inited + 32) = v6;
  *(void *)(inited + 40) = v8;
  uint64_t v9 = static os_log_type_t.error.getter();
  sub_100BAC898((uint64_t)v5, (uint64_t)&_mh_execute_header, v9, (uint64_t)"Error adding new board: %@", 26, 2, inited);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  swift_errorRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v10 = (uint64_t (*)(void))v0[1];
  return v10(0);
}

uint64_t sub_100A73874(void *a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 376) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = *(void *)(v4 + 304);
    uint64_t v6 = *(void *)(v4 + 312);
    uint64_t v7 = sub_100A73D6C;
  }
  else
  {

    uint64_t v5 = *(void *)(v4 + 304);
    uint64_t v6 = *(void *)(v4 + 312);
    uint64_t v7 = sub_100A73998;
  }
  return _swift_task_switch(v7, v5, v6);
}

uint64_t sub_100A73998()
{
  uint64_t v1 = *(void *)(v0 + 272);
  sub_100A70B24();
  uint64_t v3 = v2;
  sub_10056D504(v1, 1);

  uint64_t v4 = *(void **)(*(void *)(*(void *)(v0 + 360)
                            + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_editingCoordinator)
                + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard);
  *(void *)(v0 + 384) = v4;
  id v5 = v4;
  sub_1005B09AC();
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v0 + 392) = v6;
  void *v6 = v0;
  v6[1] = sub_100A73A8C;
  uint64_t v7 = *(void *)(v0 + 360);
  char v8 = *(unsigned char *)(v0 + 408);
  return sub_100A86230(v7, 0, v8);
}

uint64_t sub_100A73A8C()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 400) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 312);
  uint64_t v4 = *(void *)(v2 + 304);
  if (v0) {
    id v5 = sub_100A73F74;
  }
  else {
    id v5 = sub_100A73BC8;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_100A73BC8()
{
  swift_release();
  sub_1005057FC((uint64_t *)&unk_101676C10);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117DF50;
  *(void *)(inited + 32) = sub_100A783E0();
  *(void *)(inited + 40) = sub_100A783F0();
  specialized Array._endMutation()();
  if ((inited & 0xC000000000000001) != 0)
  {
    uint64_t v2 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
    sub_100A78C10(v2);

    id v3 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  else
  {
    id v4 = *(id *)(inited + 32);
    sub_100A78C10(v4);

    id v3 = *(id *)(inited + 40);
  }
  id v5 = v3;
  uint64_t v6 = (void *)v0[48];
  uint64_t v7 = (void *)v0[45];
  uint64_t v8 = v0[34];
  sub_100A78C10(v3);
  swift_bridgeObjectRelease();

  sub_100A78688();
  sub_100A98CC0(v8, type metadata accessor for CRLBoardLibraryViewModel.Item);
  uint64_t v9 = v0[48];
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v10 = (uint64_t (*)(uint64_t))v0[1];
  return v10(v9);
}

uint64_t sub_100A73D6C()
{
  uint64_t v1 = *(void *)(v0 + 376);
  uint64_t v2 = *(void *)(v0 + 272);
  swift_release();
  sub_100A98CC0(v2, type metadata accessor for CRLBoardLibraryViewModel.Item);
  if (qword_10166F9C8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  id v3 = (void *)static OS_os_log.crlDefault;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117E810;
  *(void *)(v0 + 160) = v1;
  id v5 = v3;
  swift_errorRetain();
  sub_1005057FC(&qword_101672BD0);
  uint64_t v6 = String.init<A>(describing:)();
  uint64_t v8 = v7;
  *(void *)(inited + 56) = &type metadata for String;
  *(void *)(inited + 64) = sub_100528BE4();
  *(void *)(inited + 32) = v6;
  *(void *)(inited + 40) = v8;
  uint64_t v9 = static os_log_type_t.error.getter();
  sub_100BAC898((uint64_t)v5, (uint64_t)&_mh_execute_header, v9, (uint64_t)"Error adding new board: %@", 26, 2, inited);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  swift_errorRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v10 = *(uint64_t (**)(void))(v0 + 8);
  return v10(0);
}

uint64_t sub_100A73F74()
{
  uint64_t v1 = *(void **)(v0 + 384);

  uint64_t v2 = *(void *)(v0 + 400);
  uint64_t v3 = *(void *)(v0 + 384);
  uint64_t v4 = *(void *)(v0 + 272);
  swift_release();
  sub_100A98CC0(v4, type metadata accessor for CRLBoardLibraryViewModel.Item);
  if (qword_10166F9C8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  id v5 = (void *)static OS_os_log.crlDefault;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117E810;
  *(void *)(v0 + 160) = v2;
  id v7 = v5;
  swift_errorRetain();
  sub_1005057FC(&qword_101672BD0);
  uint64_t v8 = String.init<A>(describing:)();
  uint64_t v10 = v9;
  *(void *)(inited + 56) = &type metadata for String;
  *(void *)(inited + 64) = sub_100528BE4();
  *(void *)(inited + 32) = v8;
  *(void *)(inited + 40) = v10;
  uint64_t v11 = static os_log_type_t.error.getter();
  sub_100BAC898((uint64_t)v7, (uint64_t)&_mh_execute_header, v11, (uint64_t)"Error adding new board: %@", 26, 2, inited);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  swift_errorRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v12 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v12(v3);
}

uint64_t sub_100A74190(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[2] = type metadata accessor for MainActor();
  v5[3] = static MainActor.shared.getter();
  id v7 = (void *)swift_task_alloc();
  v5[4] = v7;
  *id v7 = v5;
  v7[1] = sub_10053DCA8;
  return sub_100A7424C(a5);
}

uint64_t sub_100A7424C(uint64_t a1)
{
  v2[32] = a1;
  v2[33] = v1;
  sub_1005057FC(&qword_101672E90);
  v2[34] = swift_task_alloc();
  uint64_t v3 = type metadata accessor for URL();
  v2[35] = v3;
  v2[36] = *(void *)(v3 - 8);
  v2[37] = swift_task_alloc();
  sub_1005057FC(&qword_101672C30);
  v2[38] = swift_task_alloc();
  v2[39] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for CRLBoardIdentifier(0);
  v2[40] = v4;
  v2[41] = *(void *)(v4 - 8);
  v2[42] = swift_task_alloc();
  v2[43] = swift_task_alloc();
  type metadata accessor for MainActor();
  v2[44] = static MainActor.shared.getter();
  uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
  v2[45] = v6;
  v2[46] = v5;
  return _swift_task_switch(sub_100A7441C, v6, v5);
}

uint64_t sub_100A7441C()
{
  if (qword_10166F9C8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v1 = (void *)static OS_os_log.crlDefault;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117E810;
  id v3 = v1;
  uint64_t v4 = URL.description.getter();
  uint64_t v6 = v5;
  *(void *)(inited + 56) = &type metadata for String;
  *(void *)(inited + 64) = sub_100528BE4();
  *(void *)(inited + 32) = v4;
  *(void *)(inited + 40) = v6;
  uint64_t v7 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v3, (uint64_t)&_mh_execute_header, v7, (uint64_t)"Opening board from URL: %@.", 27, 2, inited);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  sub_100A70728();
  if (!v8)
  {
    __break(1u);
    return _swift_continuation_await(v8);
  }
  uint64_t v9 = v8;
  uint64_t v10 = *(void *)(v0 + 320);
  uint64_t v11 = *(void *)(v0 + 328);
  uint64_t v12 = *(void *)(v0 + 312);
  sub_100EDE1E8(*(void *)(v0 + 256), 0, v12);

  uint64_t v13 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48);
  if (v13(v12, 1, v10) == 1)
  {
    uint64_t v14 = *(void *)(v0 + 320);
    uint64_t v15 = *(void *)(v0 + 304);
    sub_100522F00(*(void *)(v0 + 312), &qword_101672C30);
    sub_1006F529C(v15);
    if (v13(v15, 1, v14) == 1)
    {
      sub_100522F00(*(void *)(v0 + 304), &qword_101672C30);
      uint64_t v16 = sub_1006F5D00();
      if (v17)
      {
        uint64_t v18 = *(void *)(v0 + 280);
        uint64_t v19 = *(void *)(v0 + 288);
        uint64_t v20 = *(void *)(v0 + 272);
        String.append(_:)(*(Swift::String *)&v16);
        URL.init(string:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v19 + 48))(v20, 1, v18) == 1)
        {
          uint64_t v21 = *(void *)(v0 + 272);
          swift_release();
          sub_100522F00(v21, &qword_101672E90);
LABEL_18:
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          uint64_t v28 = *(uint64_t (**)(void))(v0 + 8);
          return v28();
        }
        (*(void (**)(void, void, void))(*(void *)(v0 + 288) + 32))(*(void *)(v0 + 296), *(void *)(v0 + 272), *(void *)(v0 + 280));
        id v29 = (id)static OS_os_log.crlDefault;
        uint64_t v30 = static os_log_type_t.default.getter();
        sub_100BAC898((uint64_t)v29, (uint64_t)&_mh_execute_header, v30, (uint64_t)"Opening URL to start share acceptance flow.", 43, 2, (uint64_t)_swiftEmptyArrayStorage);

        id v31 = [self sharedApplication];
        *(void *)(v0 + 392) = v31;
        URL._bridgeToObjectiveC()(v32);
        uint64_t v34 = v33;
        *(void *)(v0 + 400) = v33;
        sub_100A3B668((uint64_t)_swiftEmptyArrayStorage);
        type metadata accessor for OpenExternalURLOptionsKey(0);
        sub_100A99018((unint64_t *)&qword_101671788, type metadata accessor for OpenExternalURLOptionsKey);
        Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
        *(void *)(v0 + 408) = isa;
        swift_bridgeObjectRelease();
        *(void *)(v0 + 16) = v0;
        *(void *)(v0 + 56) = v0 + 416;
        *(void *)(v0 + 24) = sub_100A74E70;
        uint64_t v36 = swift_continuation_init();
        *(void *)(v0 + 152) = _NSConcreteStackBlock;
        *(void *)(v0 + 160) = 0x40000000;
        *(void *)(v0 + 168) = sub_100A93014;
        *(void *)(v0 + 176) = &unk_101520690;
        *(void *)(v0 + 184) = v36;
        [v31 openURL:v34 options:isa completionHandler:v0 + 152];
        uint64_t v8 = (void *)(v0 + 16);
        return _swift_continuation_await(v8);
      }
LABEL_17:
      swift_release();
      goto LABEL_18;
    }
    sub_100A98C58(*(void *)(v0 + 304), *(void *)(v0 + 336), type metadata accessor for CRLBoardIdentifier);
    *(void *)(v0 + 216) = &type metadata for CRLFeatureFlags;
    *(void *)(v0 + 224) = sub_1005396A8();
    *(unsigned char *)(v0 + 192) = 18;
    char v25 = isFeatureEnabled(_:)();
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v0 + 192);
    if ((v25 & 1) == 0)
    {
      sub_100A98CC0(*(void *)(v0 + 336), type metadata accessor for CRLBoardIdentifier);
      goto LABEL_17;
    }
    uint64_t v26 = (void *)swift_task_alloc();
    *(void *)(v0 + 384) = v26;
    *uint64_t v26 = v0;
    v26[1] = sub_100A74C84;
    uint64_t v27 = *(void *)(v0 + 336);
    return sub_100A7C85C(v27);
  }
  else
  {
    sub_100A98C58(*(void *)(v0 + 312), *(void *)(v0 + 344), type metadata accessor for CRLBoardIdentifier);
    uint64_t v22 = (void *)swift_task_alloc();
    *(void *)(v0 + 376) = v22;
    *uint64_t v22 = v0;
    v22[1] = sub_100A74A9C;
    uint64_t v23 = *(void *)(v0 + 344);
    return sub_100A92810(v23);
  }
}

uint64_t sub_100A74A9C()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 368);
  uint64_t v3 = *(void *)(v1 + 360);
  return _swift_task_switch(sub_100A74BBC, v3, v2);
}

uint64_t sub_100A74BBC()
{
  uint64_t v1 = *(void *)(v0 + 344);
  swift_release();
  sub_100A98CC0(v1, type metadata accessor for CRLBoardIdentifier);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_100A74C84()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 368);
  uint64_t v3 = *(void *)(v1 + 360);
  return _swift_task_switch(sub_100A74DA4, v3, v2);
}

uint64_t sub_100A74DA4()
{
  uint64_t v1 = *(void *)(v0 + 336);
  swift_release();
  sub_100A98CC0(v1, type metadata accessor for CRLBoardIdentifier);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_100A74E70()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 368);
  uint64_t v2 = *(void *)(*(void *)v0 + 360);
  return _swift_task_switch(sub_100A74F78, v2, v1);
}

uint64_t sub_100A74F78()
{
  uint64_t v2 = (void *)v0[50];
  uint64_t v1 = (void *)v0[51];
  uint64_t v3 = (void *)v0[49];
  uint64_t v5 = v0[36];
  uint64_t v4 = v0[37];
  uint64_t v6 = v0[35];
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

void sub_100A75058(void *a1, char a2)
{
  uint64_t v5 = type metadata accessor for CRLBoardLibraryViewModel.Folder(0);
  __chkstk_darwin(v5 - 8, v6);
  uint64_t v8 = (char *)&v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&double v11 = __chkstk_darwin(v9, v10).n128_u64[0];
  uint64_t v13 = (char *)&v47 - v12;
  [a1 setActivityItemsConfigurationSource:v2 v11];
  uint64_t v14 = sub_1005057FC(&qword_101670F30);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v13, 1, 5, v14);
  sub_100A982B0((uint64_t)v13, (uint64_t)v8, type metadata accessor for CRLBoardLibraryViewModel.Folder);
  sub_100A70728();
  if (!v15)
  {
    __break(1u);
    goto LABEL_16;
  }
  uint64_t v16 = v15;
  sub_100A708BC();
  if (!v17)
  {
LABEL_16:
    __break(1u);
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  uint64_t v18 = v17;
  sub_100A70728();
  if (v19)
  {
    uint64_t v20 = v19;
    *((void *)&v48 + 1) = type metadata accessor for CRLBoardLibrary();
    uint64_t v49 = &off_101532E40;
    *(void *)&long long v47 = v20;
  }
  else
  {
    uint64_t v49 = 0;
    long long v47 = 0u;
    long long v48 = 0u;
  }
  uint64_t v21 = objc_allocWithZone((Class)type metadata accessor for CRLiOSFolderGridViewController());
  uint64_t v22 = v2;
  uint64_t v23 = (char *)sub_100A96080((uint64_t)v8, v16, v18, (uint64_t)v22, (uint64_t)&v47, 1, v21);

  *(void *)&v23[OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_thumbnailProvider + 8] = &off_101520148;
  swift_unknownObjectWeakAssign();
  sub_100A98CC0((uint64_t)v13, type metadata accessor for CRLBoardLibraryViewModel.Folder);
  id v24 = objc_allocWithZone((Class)UINavigationController);
  id v25 = [v24 initWithRootViewController:v23, v47];
  [v25 setDelegate:v22];
  id v26 = sub_100A70A50();
  [v26 setViewController:v25 forColumn:2];

  uint64_t v27 = *(void *)&v22[OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate_navigationStack];
  sub_1005057FC(&qword_10169B510);
  uint64_t v28 = *(void *)(type metadata accessor for CRLBoardLibraryViewModel.Item(0) - 8);
  unint64_t v29 = (*(unsigned __int8 *)(v28 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80);
  uint64_t v30 = swift_allocObject();
  *(_OWORD *)(v30 + 16) = xmmword_10117E810;
  sub_100A982B0((uint64_t)&v23[OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_folder], v30 + v29, type metadata accessor for CRLBoardLibraryViewModel.Folder);
  swift_storeEnumTagMultiPayload();
  swift_beginAccess();
  *(void *)(v27 + 16) = v30;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  id v31 = [self defaultCenter];
  if (qword_10166F008 != -1) {
    swift_once();
  }
  [v31 postNotificationName:qword_10171A6E8 object:v27];

  swift_bridgeObjectRelease();
  swift_release();
  id v32 = [objc_allocWithZone((Class)UIWindow) initWithWindowScene:a1];
  id v33 = sub_100A70A50();
  [v32 setRootViewController:v33];

  if ((a2 & 1) == 0) {
    goto LABEL_12;
  }
  id v34 = [objc_allocWithZone((Class)UIView) init];
  [v34 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v35 = [self whiteColor];
  [v34 setBackgroundColor:v35];

  id v36 = sub_100A70A50();
  id v37 = [v36 view];

  if (!v37) {
    goto LABEL_17;
  }
  [v37 addSubview:v34];

  id v38 = sub_100A70A50();
  id v39 = [v38 view];

  if (!v39)
  {
LABEL_18:
    __break(1u);
    return;
  }
  sub_1009E32D0(v34, v39);

LABEL_12:
  uint64_t v40 = OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate_window;
  char v41 = *(void **)&v22[OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate_window];
  *(void *)&v22[OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate_window] = v32;
  id v42 = v32;

  char v43 = *(void **)&v22[v40];
  if (v43)
  {
    id v44 = v43;
    NSString v45 = String._bridgeToObjectiveC()();
    id v46 = [self colorNamed:v45];

    [v44 setTintColor:v46];
  }
  [v42 makeKeyAndVisible];
}

void sub_100A7562C(void *a1, void *a2, char a3, uint64_t a4)
{
  if (qword_10166FB38 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v8 = (void *)static OS_os_log.sceneManagement;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117E810;
  *(void *)(inited + 56) = type metadata accessor for CRLiOSSceneDelegate();
  *(void *)(inited + 64) = sub_100A99018((unint64_t *)&unk_10168E260, (void (*)(uint64_t))type metadata accessor for CRLiOSSceneDelegate);
  *(void *)(inited + 32) = a1;
  id v10 = v8;
  double v11 = a1;
  uint64_t v12 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v10, (uint64_t)&_mh_execute_header, v12, (uint64_t)"Scene delegate (%p) performing cleanup", 38, 2, inited);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  [a2 removeFromSuperview];
  sub_1005057FC((uint64_t *)&unk_101676C10);
  uint64_t v13 = swift_initStackObject();
  *(_OWORD *)(v13 + 16) = xmmword_10117DF50;
  *(void *)(v13 + 32) = sub_100A783E0();
  *(void *)(v13 + 40) = sub_100A783F0();
  specialized Array._endMutation()();
  if ((v13 & 0xC000000000000001) != 0)
  {
    uint64_t v14 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
    sub_100A78C10(v14);

    id v15 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  else
  {
    id v16 = *(id *)(v13 + 32);
    sub_100A78C10(v16);

    id v15 = *(id *)(v13 + 40);
  }
  uint64_t v17 = v15;
  sub_100A78C10(v15);

  swift_bridgeObjectRelease();
  sub_100A78688();
  if ((a3 & 1) == 0 || *(void *)&v11[OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate_acceptCloudKitShareAttempt])
  {
    id v18 = sub_100A70A50();
    id v19 = [v18 presentedViewController];

    if (!v19) {
      goto LABEL_15;
    }
    self;
    uint64_t v20 = (void *)swift_dynamicCastObjCClass();
    if (v20)
    {
      id v21 = [v20 topViewController];

      if (!v21) {
        goto LABEL_15;
      }
      type metadata accessor for CRLiOSBoardViewController();
      uint64_t v22 = (void *)swift_dynamicCastClass();
      id v19 = v21;
      if (v22)
      {
        sub_100AC4DC0();
        if (v23)
        {
LABEL_13:
          sub_100AC5154(v22, 0, 0);
LABEL_17:

          return;
        }
LABEL_16:
        id v25 = [self standardUserDefaults];
        uint64_t v26 = sub_100077344();
        NSString v27 = String._bridgeToObjectiveC()();
        [v25 setInteger:v26 forKey:v27];

        goto LABEL_17;
      }
    }

LABEL_15:
    uint64_t v22 = sub_100A70A50();
    sub_100AC4DC0();
    if (v24) {
      goto LABEL_13;
    }
    goto LABEL_16;
  }
  if (a4 == 2)
  {
    sub_100A8C724();
  }
  else if (a4 == 1)
  {
    sub_100A8BE60();
  }
}

void sub_100A759CC(char *a1, void *a2, void *a3, void (*a4)(void), uint64_t a5, uint64_t a6, char a7)
{
  id v57 = a4;
  uint64_t v13 = sub_1005057FC(&qword_101672BB0);
  *(void *)&double v15 = __chkstk_darwin(v13 - 8, v14).n128_u64[0];
  uint64_t v17 = (char *)&v56 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v18 = *(void **)&a1[OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate_window];
  if (!v18
    || (id v19 = objc_msgSend(v18, "rootViewController", v15)) == 0
    || (uint64_t v20 = v19,
        id v21 = objc_msgSend(v19, "crl_windowWrapper"),
        v20,
        !v21)
    || (id v22 = [v21 newWrapperBeginningIgnoringUserInteractionSafely], v21, !v22))
  {
    if (qword_10166F9D8 != -1) {
      swift_once();
    }
    swift_beginAccess();
    id v23 = (id)static OS_os_log.crlError;
    uint64_t v24 = static os_log_type_t.error.getter();
    sub_100BAC898((uint64_t)v23, (uint64_t)&_mh_execute_header, v24, (uint64_t)"Could not create token for ignoring user interaction; view hierarchy may not be set up yet",
      90,
      2,
      (uint64_t)_swiftEmptyArrayStorage);

    id v22 = 0;
  }
  id v25 = (unsigned char *)(a6 + 16);
  id v26 = [a2 cloudKitShareMetadata];
  if (v26)
  {
    NSString v27 = v26;
    if (qword_10166FB38 != -1) {
      swift_once();
    }
    swift_beginAccess();
    uint64_t v28 = (void *)static OS_os_log.sceneManagement;
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_10117E810;
    *(void *)(inited + 56) = type metadata accessor for CRLiOSSceneDelegate();
    *(void *)(inited + 64) = sub_100A99018((unint64_t *)&unk_10168E260, (void (*)(uint64_t))type metadata accessor for CRLiOSSceneDelegate);
    *(void *)(inited + 32) = a1;
    id v30 = v28;
    id v31 = a1;
    uint64_t v32 = static os_log_type_t.default.getter();
    sub_100BAC898((uint64_t)v30, (uint64_t)&_mh_execute_header, v32, (uint64_t)"Scene delegate (%p) accepting CloudKit share", 44, 2, inited);
    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();

    sub_100A7D46C(v27);
  }
  else if (a3)
  {
    uint64_t v33 = qword_10166FB38;
    id v34 = a3;
    if (v33 != -1) {
      swift_once();
    }
    swift_beginAccess();
    id v35 = (void *)static OS_os_log.sceneManagement;
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t v36 = swift_initStackObject();
    *(_OWORD *)(v36 + 16) = xmmword_10117E810;
    *(void *)(v36 + 56) = type metadata accessor for CRLiOSSceneDelegate();
    *(void *)(v36 + 64) = sub_100A99018((unint64_t *)&unk_10168E260, (void (*)(uint64_t))type metadata accessor for CRLiOSSceneDelegate);
    *(void *)(v36 + 32) = a1;
    id v37 = a1;
    id v38 = v35;
    uint64_t v39 = static os_log_type_t.default.getter();
    sub_100BAC898((uint64_t)v38, (uint64_t)&_mh_execute_header, v39, (uint64_t)"Scene delegate (%p) handling user activity", 42, 2, v36);
    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();

    uint64_t v40 = (void *)swift_allocObject();
    v40[2] = v37;
    v40[3] = v34;
    v40[4] = v57;
    v40[5] = a5;
    v40[6] = v22;
    id v41 = v22;
    id v42 = v37;
    id v43 = v34;
    swift_retain();
    sub_100A6F12C((uint64_t)sub_100A997C0, (uint64_t)v40);

    swift_release();
    swift_beginAccess();
    *id v25 = 1;
  }
  else if (a7)
  {
    if (qword_10166FB38 != -1) {
      swift_once();
    }
    swift_beginAccess();
    id v44 = (void *)static OS_os_log.sceneManagement;
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t v45 = swift_initStackObject();
    *(_OWORD *)(v45 + 16) = xmmword_10117E810;
    *(void *)(v45 + 56) = type metadata accessor for CRLiOSSceneDelegate();
    *(void *)(v45 + 64) = sub_100A99018((unint64_t *)&unk_10168E260, (void (*)(uint64_t))type metadata accessor for CRLiOSSceneDelegate);
    *(void *)(v45 + 32) = a1;
    id v46 = a1;
    id v47 = v44;
    uint64_t v48 = static os_log_type_t.default.getter();
    sub_100BAC898((uint64_t)v47, (uint64_t)&_mh_execute_header, v48, (uint64_t)"Scene delegate (%p) showing new board before First Launch", 57, 2, v45);
    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();

    uint64_t v49 = type metadata accessor for TaskPriority();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v49 - 8) + 56))(v17, 1, 1, v49);
    type metadata accessor for MainActor();
    id v50 = v22;
    uint64_t v51 = v46;
    swift_retain();
    uint64_t v52 = static MainActor.shared.getter();
    uint64_t v53 = (void *)swift_allocObject();
    v53[2] = v52;
    v53[3] = &protocol witness table for MainActor;
    BOOL v54 = v57;
    unsigned char v53[4] = v51;
    v53[5] = v54;
    v53[6] = a5;
    v53[7] = v22;
    sub_1005912D0((uint64_t)v17, (uint64_t)&unk_10168E338, (uint64_t)v53);
    swift_release();
    swift_beginAccess();
    *id v25 = 1;
  }
  uint64_t v55 = swift_beginAccess();
  if (*v25 != 1)
  {
    v57(v55);
    [v22 endIgnoringUserInteractionSafely];
  }
}

uint64_t sub_100A760D0(void *a1, void *a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v10 = sub_1005057FC(&qword_101672BB0);
  __chkstk_darwin(v10 - 8, v11);
  uint64_t v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v13, 1, 1, v14);
  type metadata accessor for MainActor();
  id v15 = a5;
  id v16 = a1;
  id v17 = a2;
  swift_retain();
  uint64_t v18 = static MainActor.shared.getter();
  id v19 = (void *)swift_allocObject();
  v19[2] = v18;
  v19[3] = &protocol witness table for MainActor;
  v19[4] = v16;
  v19[5] = v17;
  v19[6] = a3;
  v19[7] = a4;
  v19[8] = a5;
  return sub_1005912D0((uint64_t)v13, (uint64_t)&unk_10168E330, (uint64_t)v19);
}

uint64_t sub_100A76224(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[3] = a7;
  v8[4] = a8;
  v8[2] = a6;
  v8[5] = type metadata accessor for MainActor();
  v8[6] = static MainActor.shared.getter();
  uint64_t v10 = (void *)swift_task_alloc();
  v8[7] = v10;
  void *v10 = v8;
  v10[1] = sub_100A762E8;
  return sub_100A7951C(a5);
}

uint64_t sub_100A762E8()
{
  swift_task_dealloc();
  uint64_t v1 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_100A76424, v1, v0);
}

uint64_t sub_100A76424()
{
  uint64_t v1 = (void *)v0[4];
  uint64_t v2 = (void (*)(uint64_t))v0[2];
  uint64_t v3 = swift_release();
  v2(v3);
  [v1 endIgnoringUserInteractionSafely];
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_100A764AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[4] = a6;
  v7[5] = a7;
  v7[2] = a4;
  v7[3] = a5;
  type metadata accessor for CRLBoardLibraryViewModel.Folder(0);
  v7[6] = swift_task_alloc();
  type metadata accessor for MainActor();
  v7[7] = static MainActor.shared.getter();
  uint64_t v9 = dispatch thunk of Actor.unownedExecutor.getter();
  v7[8] = v9;
  v7[9] = v8;
  return _swift_task_switch(sub_100A76574, v9, v8);
}

uint64_t sub_100A76574()
{
  uint64_t v1 = v0[6];
  uint64_t v2 = sub_1005057FC(&qword_101670F30);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(v1, 1, 5, v2);
  id v3 = [self mainBundle];
  NSString v4 = String._bridgeToObjectiveC()();
  NSString v5 = String._bridgeToObjectiveC()();
  id v6 = [v3 localizedStringForKey:v4 value:v5 table:0];

  uint64_t v7 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v9 = v8;

  v0[10] = v9;
  uint64_t v10 = (void *)swift_task_alloc();
  v0[11] = v10;
  void *v10 = v0;
  v10[1] = sub_100A76710;
  uint64_t v11 = v0[6];
  return sub_100A72B60(v11, v7, v9, 0);
}

uint64_t sub_100A76710(void *a1)
{
  uint64_t v3 = *v1;
  uint64_t v4 = *(void *)(*v1 + 48);
  swift_task_dealloc();
  swift_bridgeObjectRelease();

  sub_100A98CC0(v4, type metadata accessor for CRLBoardLibraryViewModel.Folder);
  uint64_t v5 = *(void *)(v3 + 72);
  uint64_t v6 = *(void *)(v3 + 64);
  return _swift_task_switch(sub_100A76894, v6, v5);
}

uint64_t sub_100A76894()
{
  uint64_t v1 = (void *)v0[5];
  uint64_t v2 = (void (*)(uint64_t))v0[3];
  uint64_t v3 = swift_release();
  v2(v3);
  [v1 endIgnoringUserInteractionSafely];
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_100A769AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[2] = a4;
  v5[3] = type metadata accessor for MainActor();
  v5[4] = static MainActor.shared.getter();
  uint64_t v7 = (void *)swift_task_alloc();
  v5[5] = v7;
  *uint64_t v7 = v5;
  v7[1] = sub_100A76A6C;
  return sub_100A7424C(a5);
}

uint64_t sub_100A76A6C()
{
  swift_task_dealloc();
  uint64_t v1 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_100A76BA8, v1, v0);
}

uint64_t sub_100A76BA8()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_release();
  *(unsigned char *)(v1 + OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate_boardOpenInFlight) = 0;
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

void sub_100A76CF0(char *a1, void (*a2)(uint64_t))
{
  uint64_t v4 = sub_1005057FC((uint64_t *)&unk_101676310);
  __chkstk_darwin(v4 - 8, v5);
  uint64_t v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v11 = __chkstk_darwin(v8, v10);
  uint64_t v13 = (char *)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __chkstk_darwin(v11, v14);
  id v17 = (char *)&v28 - v16;
  a1[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_isClosing] = 1;
  if (a2) {
    a2(v15);
  }
  sub_100A70728();
  if (v18)
  {
    id v19 = v18;
    sub_100EDD9B0(a1);

    sub_100E3E52C();
    a1[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_isClosed] = 1;
    sub_100A7033C((uint64_t)v7);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    {
      sub_100522F00((uint64_t)v7, (uint64_t *)&unk_101676310);
    }
    else
    {
      sub_100A98C58((uint64_t)v7, (uint64_t)v17, type metadata accessor for CRLBoardLibraryViewModel.Item);
      sub_100A982B0((uint64_t)v17, (uint64_t)v13, type metadata accessor for CRLBoardLibraryViewModel.Item);
      if (swift_getEnumCaseMultiPayload() == 2)
      {
        sub_1005057FC(&qword_101677100);
        swift_bridgeObjectRelease();
        sub_100A98CC0((uint64_t)v13, type metadata accessor for CRLBoardIdentifier);
      }
      else
      {
        sub_100A98CC0((uint64_t)v13, type metadata accessor for CRLBoardLibraryViewModel.Item);
        sub_100A70B24();
        uint64_t v21 = v20;
        sub_10056D504((uint64_t)v17, 1);
      }
      sub_100A98CC0((uint64_t)v17, type metadata accessor for CRLBoardLibraryViewModel.Item);
    }
    sub_1005057FC((uint64_t *)&unk_101676C10);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_10117DF50;
    *(void *)(inited + 32) = sub_100A783E0();
    *(void *)(inited + 40) = sub_100A783F0();
    uint64_t v29 = inited;
    specialized Array._endMutation()();
    uint64_t v23 = v29;
    if ((v29 & 0xC000000000000001) != 0)
    {
      uint64_t v24 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
      sub_100A78C10(v24);

      id v25 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else
    {
      id v26 = *(id *)(v29 + 32);
      sub_100A78C10(v26);

      id v25 = *(id *)(v23 + 40);
    }
    NSString v27 = v25;
    sub_100A78C10(v25);

    swift_bridgeObjectRelease();
    sub_100A78688();
  }
  else
  {
    __break(1u);
  }
}

void sub_100A771E8(uint64_t a1)
{
  uint64_t v2 = sub_1005057FC(&qword_101672BB0);
  __chkstk_darwin(v2 - 8, v3);
  id v41 = (char *)&v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for CRLBoardCRDTData(0);
  __chkstk_darwin(v5 - 8, v6);
  uint64_t v8 = (char *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for UUID();
  __chkstk_darwin(v9 - 8, v10);
  uint64_t v12 = (char *)&v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for CRLBoardIdentifier(0);
  __chkstk_darwin(v13 - 8, v14);
  uint64_t v16 = (char *)&v40 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v17 = (char *)sub_100A70114();
  if (v17)
  {
    uint64_t v18 = v17;
    uint64_t v19 = a1;
    sub_100A70728();
    if (!v20)
    {
      __break(1u);
      return;
    }
    uint64_t v21 = v20;
    swift_retain();

    uint64_t v22 = OBJC_IVAR____TtC8Freeform8CRLBoard_data;
    uint64_t v23 = *(void *)&v18[OBJC_IVAR____TtC8Freeform8CRLBoard_data] + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
    swift_beginAccess();
    sub_100A982B0(v23, (uint64_t)v8, type metadata accessor for CRLBoardCRDTData);
    swift_retain();
    sub_1005057FC(&qword_101674550);
    CRRegister.wrappedValue.getter();
    sub_100A98CC0((uint64_t)v8, type metadata accessor for CRLBoardCRDTData);
    swift_release();
    uint64_t v24 = (uint64_t *)(*(void *)&v18[v22] + OBJC_IVAR____TtC8Freeform12CRLBoardData_ownerName);
    uint64_t v25 = *v24;
    unint64_t v26 = v24[1];
    swift_bridgeObjectRetain();
    sub_100753370((uint64_t)v12, v25, v26, (uint64_t)v16);
    sub_100604C5C((uint64_t)v16);
    swift_release();

    sub_100A98CC0((uint64_t)v16, type metadata accessor for CRLBoardIdentifier);
    a1 = v19;
  }
  id v27 = sub_100A70A50();
  id v28 = [v27 presentedViewController];

  if (v28)
  {
    self;
    uint64_t v29 = (void *)swift_dynamicCastObjCClass();
    if (!v29)
    {
LABEL_12:

      goto LABEL_13;
    }
    id v30 = [v29 topViewController];

    if (v30)
    {
      type metadata accessor for CRLiOSBoardViewController();
      uint64_t v31 = swift_dynamicCastClass();
      if (v31
        && (uint64_t v32 = v31,
            id v43 = &type metadata for CRLFeatureFlags,
            unint64_t v44 = sub_1005396A8(),
            v42[0] = 1,
            char v33 = isFeatureEnabled(_:)(),
            _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v42),
            (v33 & 1) != 0))
      {
        uint64_t v34 = type metadata accessor for TaskPriority();
        uint64_t v35 = (uint64_t)v41;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56))(v41, 1, 1, v34);
        type metadata accessor for MainActor();
        id v28 = v30;
        uint64_t v36 = static MainActor.shared.getter();
        id v37 = (void *)swift_allocObject();
        v37[2] = v36;
        v37[3] = &protocol witness table for MainActor;
        v37[4] = v32;
        sub_1005912D0(v35, (uint64_t)&unk_10168E298, (uint64_t)v37);
        swift_release();
        if (*(void *)(v32 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_appAnalyticsBoardTracker))
        {
          swift_retain();
          sub_100696B74();
          swift_release();
        }
      }
      else
      {
        id v28 = v30;
      }
      goto LABEL_12;
    }
  }
LABEL_13:
  id v38 = sub_100A783F0();
  [v38 becomeCurrent];

  id v39 = [self defaultCenter];
  if (qword_10166F828 != -1) {
    swift_once();
  }
  [v39 postNotificationName:qword_10171B718 object:a1];
}

void sub_100A77710(uint64_t a1)
{
  id v2 = sub_100A70A50();
  id v3 = [v2 presentedViewController];

  if (v3)
  {
    self;
    uint64_t v4 = (void *)swift_dynamicCastObjCClass();
    if (v4)
    {
      id v5 = [v4 topViewController];

      if (!v5) {
        goto LABEL_8;
      }
      type metadata accessor for CRLiOSBoardViewController();
      if (swift_dynamicCastClass()) {
        sub_100E44DBC(0);
      }
    }
    else
    {
      id v5 = v3;
    }
  }
LABEL_8:
  id v6 = sub_100A783F0();
  [v6 resignCurrent];

  id v7 = [self defaultCenter];
  id v8 = v7;
  if (qword_10166F830 != -1)
  {
    swift_once();
    id v7 = v8;
  }
  [v7 postNotificationName:qword_10171B720 object:a1];
}

void sub_100A779A8(uint64_t a1)
{
  uint64_t v2 = sub_1005057FC(&qword_101672BB0);
  __chkstk_darwin(v2 - 8, v3);
  id v5 = (char *)v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v6 = sub_100A70A50();
  id v7 = [v6 presentedViewController];

  if (v7)
  {
    self;
    id v8 = (void *)swift_dynamicCastObjCClass();
    if (!v8) {
      goto LABEL_14;
    }
    id v9 = [v8 topViewController];

    if (!v9) {
      goto LABEL_15;
    }
    type metadata accessor for CRLiOSBoardViewController();
    uint64_t v10 = (void *)swift_dynamicCastClass();
    if (!v10)
    {
LABEL_13:
      id v7 = v9;
      goto LABEL_14;
    }
    id v11 = [v10 presentedViewController];

    if (v11)
    {
      self;
      uint64_t v12 = swift_dynamicCastObjCClass();

      if (v12)
      {
        id v13 = sub_100A70A50();
        id v7 = [v13 presentedViewController];

        if (v7)
        {
          self;
          uint64_t v14 = (void *)swift_dynamicCastObjCClass();
          if (v14)
          {
            id v9 = [v14 topViewController];

            if (!v9) {
              goto LABEL_15;
            }
            uint64_t v15 = (void *)swift_dynamicCastClass();
            if (v15)
            {
              id v7 = [v15 presentedViewController];

              if (!v7) {
                goto LABEL_15;
              }
              [v7 dismissViewControllerAnimated:0 completion:0];
              goto LABEL_14;
            }
            goto LABEL_13;
          }
LABEL_14:
        }
      }
    }
  }
LABEL_15:
  id v16 = sub_100A70A50();
  id v17 = [v16 presentedViewController];

  if (!v17) {
    goto LABEL_21;
  }
  self;
  uint64_t v18 = (void *)swift_dynamicCastObjCClass();
  if (!v18) {
    goto LABEL_20;
  }
  id v19 = [v18 topViewController];

  if (!v19) {
    goto LABEL_21;
  }
  type metadata accessor for CRLiOSBoardViewController();
  uint64_t v20 = swift_dynamicCastClass();
  if (v20)
  {
    uint64_t v21 = v20;
    sub_100E481F4((uint64_t)v28);
    uint64_t v22 = type metadata accessor for TaskPriority();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v5, 1, 1, v22);
    uint64_t v23 = swift_allocObject();
    *(void *)(v23 + 16) = 0;
    *(void *)(v23 + 24) = 0;
    *(void *)(v23 + 32) = v21;
    long long v24 = v28[0];
    *(_OWORD *)(v23 + 56) = v28[1];
    long long v25 = v29[0];
    *(_OWORD *)(v23 + 72) = v28[2];
    *(_OWORD *)(v23 + 88) = v25;
    *(_OWORD *)(v23 + 97) = *(_OWORD *)((char *)v29 + 9);
    *(_OWORD *)(v23 + 40) = v24;
    id v17 = v19;
    sub_100A99318(v28, (void (*)(uint64_t, uint64_t))sub_1005FA2A0);
    sub_100B107F4((uint64_t)v5, (uint64_t)&unk_10168E290, v23);
    swift_release();
    sub_100A99318(v28, (void (*)(uint64_t, uint64_t))sub_100514260);
    sub_100522F00((uint64_t)v5, &qword_101672BB0);
LABEL_20:

    goto LABEL_21;
  }

LABEL_21:
  id v26 = sub_100A783E0();
  sub_100A78C10(v26);

  id v27 = [self defaultCenter];
  if (qword_10166F840 != -1) {
    swift_once();
  }
  [v27 postNotificationName:qword_10171B730 object:a1];
}

uint64_t sub_100A77E0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[2] = a1;
  v4[3] = a4;
  type metadata accessor for CRLBoardLibraryViewModel.Folder(0);
  v4[4] = swift_task_alloc();
  type metadata accessor for MainActor();
  v4[5] = static MainActor.shared.getter();
  uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
  v4[6] = v6;
  v4[7] = v5;
  return _swift_task_switch(sub_100A77ED0, v6, v5);
}

uint64_t sub_100A77ED0()
{
  uint64_t v1 = v0[4];
  uint64_t v2 = sub_1005057FC(&qword_101670F30);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(v1, 1, 5, v2);
  id v3 = [self mainBundle];
  NSString v4 = String._bridgeToObjectiveC()();
  NSString v5 = String._bridgeToObjectiveC()();
  id v6 = [v3 localizedStringForKey:v4 value:v5 table:0];

  uint64_t v7 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v9 = v8;

  v0[8] = v9;
  uint64_t v10 = (void *)swift_task_alloc();
  v0[9] = v10;
  void *v10 = v0;
  v10[1] = sub_100A78068;
  uint64_t v11 = v0[4];
  return sub_100A72B60(v11, v7, v9, 1);
}

uint64_t sub_100A78068(uint64_t a1)
{
  uint64_t v2 = *v1;
  uint64_t v3 = *(void *)(*v1 + 32);
  *(void *)(*v1 + 80) = a1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  sub_100A98CC0(v3, type metadata accessor for CRLBoardLibraryViewModel.Folder);
  uint64_t v4 = *(void *)(v2 + 56);
  uint64_t v5 = *(void *)(v2 + 48);
  return _swift_task_switch(sub_100A781E4, v5, v4);
}

uint64_t sub_100A781E4()
{
  uint64_t v1 = v0[10];
  uint64_t v2 = (void *)v0[2];
  swift_release();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

id sub_100A783E0()
{
  return sub_100A78400(&OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate____lazy_storage___stateRestorationUserActivity, 0);
}

id sub_100A783F0()
{
  return sub_100A78400(&OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate____lazy_storage___handoffUserActivity, 2);
}

id sub_100A78400(uint64_t *a1, char a2)
{
  uint64_t v5 = v2;
  uint64_t v6 = sub_1005057FC(&qword_101672C30);
  __chkstk_darwin(v6 - 8, v7);
  uint64_t v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *a1;
  uint64_t v11 = *(void **)(v5 + *a1);
  if (v11)
  {
    id v12 = *(id *)(v5 + *a1);
  }
  else
  {
    sub_10050BF48(0, (unint64_t *)&qword_10168C820);
    uint64_t v13 = type metadata accessor for CRLBoardIdentifier(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v9, 1, 1, v13);
    id v14 = sub_1009C3148(a2, 1, (uint64_t)v9);
    [v14 setDelegate:v5];
    [v14 setNeedsSave:1];
    uint64_t v15 = *(void **)(v5 + v10);
    *(void *)(v5 + v10) = v14;
    id v12 = v14;

    uint64_t v11 = 0;
  }
  id v16 = v11;
  return v12;
}

void sub_100A78688()
{
  uint64_t v1 = sub_1005057FC(&qword_101672BB0);
  __chkstk_darwin(v1 - 8, v2);
  uint64_t v4 = (char *)&v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v5 = sub_100A70A50();
  id v6 = [v5 presentedViewController];

  if (!v6) {
    goto LABEL_6;
  }
  self;
  uint64_t v7 = (void *)swift_dynamicCastObjCClass();
  if (!v7) {
    goto LABEL_5;
  }
  id v8 = [v7 topViewController];

  if (v8)
  {
    type metadata accessor for CRLiOSBoardViewController();
    uint64_t v9 = (void *)swift_dynamicCastClass();
    id v6 = v8;
    if (v9) {
      goto LABEL_7;
    }
LABEL_5:
  }
LABEL_6:
  uint64_t v9 = sub_100A70A50();
LABEL_7:
  uint64_t v10 = (void *)sub_100A7E710(v9);
  uint64_t v12 = v11;

  if (v10)
  {
    uint64_t v13 = type metadata accessor for TaskPriority();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v4, 1, 1, v13);
    type metadata accessor for MainActor();
    id v14 = v10;
    id v15 = v0;
    uint64_t v16 = static MainActor.shared.getter();
    id v17 = (void *)swift_allocObject();
    v17[2] = v16;
    v17[3] = &protocol witness table for MainActor;
    v17[4] = v14;
    v17[5] = v12;
    v17[6] = v15;
    sub_1005912D0((uint64_t)v4, (uint64_t)&unk_10168E280, (uint64_t)v17);

    swift_release();
  }
}

uint64_t sub_100A78868(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[5] = a5;
  v6[6] = a6;
  v6[4] = a4;
  type metadata accessor for MainActor();
  v6[7] = static MainActor.shared.getter();
  uint64_t v8 = dispatch thunk of Actor.unownedExecutor.getter();
  v6[8] = v8;
  v6[9] = v7;
  return _swift_task_switch(sub_100A78904, v8, v7);
}

void sub_100A78904()
{
  uint64_t v1 = v0[4];
  uint64_t ObjectType = swift_getObjectType();
  v0[2] = v1;
  v0[10] = ObjectType;
  sub_100A70728();
  v0[11] = v3;
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v7 = (void (*)(uint64_t, _UNKNOWN **, uint64_t, uint64_t))(*(void *)(v0[5] + 8) + **(int **)(v0[5] + 8));
    id v5 = (void *)swift_task_alloc();
    v0[12] = v5;
    *id v5 = v0;
    v5[1] = sub_100A78A3C;
    uint64_t v6 = v0[5];
    v7(v4, &off_101532D48, ObjectType, v6);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_100A78A3C()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void **)(*v0 + 88);
  swift_task_dealloc();

  uint64_t v3 = *(void *)(v1 + 72);
  uint64_t v4 = *(void *)(v1 + 64);
  return _swift_task_switch(sub_100A78B7C, v4, v3);
}

uint64_t sub_100A78B7C()
{
  uint64_t v1 = v0[10];
  uint64_t v3 = v0[4];
  uint64_t v2 = v0[5];
  swift_release();
  v0[3] = v3;
  (*(void (**)(uint64_t, uint64_t))(v2 + 16))(v1, v2);
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

void sub_100A78C10(void *a1)
{
  uint64_t v2 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  uint64_t v63 = *(void *)(v2 - 8);
  __chkstk_darwin(v2, v3);
  uint64_t v62 = (uint64_t)&v61 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for CRLBoardLibraryViewModel.Folder(0);
  uint64_t v7 = __chkstk_darwin(v5 - 8, v6);
  uint64_t v9 = (char *)&v61 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7, v10);
  uint64_t v12 = (char *)&v61 - v11;
  uint64_t v13 = sub_1005057FC((uint64_t *)&unk_101676310);
  uint64_t v15 = __chkstk_darwin(v13 - 8, v14);
  id v17 = (char *)&v61 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15, v18);
  uint64_t v20 = (char *)&v61 - v19;
  id v21 = [a1 activityType];
  uint64_t v22 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  long long v24 = v23;

  char v25 = sub_1009C383C(v22, v24);
  if (sub_1009C2D88(v25) == 0xD00000000000001ALL && v26 == 0x8000000101235680)
  {
    swift_bridgeObjectRelease();
LABEL_5:
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"update(userActivity:)", 21, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/App/CRLiOSSceneDelegate.swift", 87, 2, 454);
    return;
  }
  char v27 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  if (v27) {
    goto LABEL_5;
  }
  id v28 = [a1 activityType];
  uint64_t v29 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v31 = v30;

  if ((sub_1009C383C(v29, v31) | 2) != 2)
  {
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"update(userActivity:)", 21, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/App/CRLiOSSceneDelegate.swift", 87, 2, 466);
    goto LABEL_18;
  }
  id v32 = sub_100A70A50();
  id v33 = [v32 presentedViewController];

  if (v33)
  {
    self;
    uint64_t v34 = (void *)swift_dynamicCastObjCClass();
    if (v34)
    {
      id v35 = [v34 topViewController];

      if (!v35) {
        goto LABEL_16;
      }
      type metadata accessor for CRLiOSBoardViewController();
      uint64_t v36 = (void *)swift_dynamicCastClass();
      if (v36)
      {
        [v36 loadViewIfNeeded];
        sub_100B88734(a1);
      }
    }
    else
    {
      id v35 = v33;
    }
  }
LABEL_16:
  id v37 = (void *)sub_100A701F0();
  if (v37)
  {
    id v38 = v37;
    [v37 loadViewIfNeeded];
    sub_1005057FC(&qword_101677430);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_10117E810;
    unint64_t v65 = sub_100DD54C4();
    uint64_t v66 = v40;
    AnyHashable.init<A>(_:)();
    unint64_t v41 = sub_10101B2C0();
    *(void *)(inited + 96) = sub_1005057FC(&qword_10168E270);
    *(void *)(inited + 72) = v41;
    sub_100A393A8(inited);
    Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [a1 addUserInfoEntriesFromDictionary:isa];
  }
LABEL_18:
  sub_100A7033C((uint64_t)v20);
  id v43 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v63 + 48);
  if (v43(v20, 1, v2) == 1)
  {
    sub_100522F00((uint64_t)v20, (uint64_t *)&unk_101676310);
LABEL_25:
    sub_100A7033C((uint64_t)v17);
    if (v43(v17, 1, v2) == 1)
    {
      sub_100522F00((uint64_t)v17, (uint64_t *)&unk_101676310);
    }
    else
    {
      sub_100DD6D5C(a1);
      sub_100A98CC0((uint64_t)v17, type metadata accessor for CRLBoardLibraryViewModel.Item);
    }
    char v51 = 0;
    goto LABEL_29;
  }
  id v64 = v12;
  sub_100A70728();
  if (!v44)
  {
    __break(1u);
    return;
  }
  uint64_t v45 = v44;
  char v46 = sub_100DD6A3C();

  sub_100A98CC0((uint64_t)v20, type metadata accessor for CRLBoardLibraryViewModel.Item);
  if ((v46 & 1) == 0) {
    goto LABEL_25;
  }
  uint64_t v47 = sub_100A701F0();
  if (v47)
  {
    uint64_t v48 = (void *)v47;
    sub_100A982B0(v47 + OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_folder, (uint64_t)v9, type metadata accessor for CRLBoardLibraryViewModel.Folder);

    uint64_t v49 = (uint64_t)v64;
    sub_100A98C58((uint64_t)v9, (uint64_t)v64, type metadata accessor for CRLBoardLibraryViewModel.Folder);
    uint64_t v50 = v62;
    sub_100A982B0(v49, v62, type metadata accessor for CRLBoardLibraryViewModel.Folder);
    swift_storeEnumTagMultiPayload();
    sub_100DD6D5C(a1);
    sub_100A98CC0(v50, type metadata accessor for CRLBoardLibraryViewModel.Item);
    sub_100A98CC0(v49, type metadata accessor for CRLBoardLibraryViewModel.Folder);
  }
  char v51 = 1;
LABEL_29:
  sub_1005057FC(&qword_101677430);
  uint64_t v52 = swift_initStackObject();
  *(_OWORD *)(v52 + 16) = xmmword_10117E810;
  unint64_t v65 = qword_10168DED0;
  uint64_t v66 = off_10168DED8;
  swift_bridgeObjectRetain();
  AnyHashable.init<A>(_:)();
  *(void *)(v52 + 96) = &type metadata for Bool;
  *(unsigned char *)(v52 + 72) = v51;
  sub_100A393A8(v52);
  Class v53 = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [a1 addUserInfoEntriesFromDictionary:v53];

  [a1 setNeedsSave:1];
  id v54 = [a1 activityType];
  uint64_t v55 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  id v57 = v56;

  char v58 = sub_1009C383C(v55, v57);
  if (sub_1009C2D88(v58) == 0xD000000000000027 && v59 == 0x8000000101235570)
  {
    swift_bridgeObjectRelease();
LABEL_33:
    [a1 becomeCurrent];
    return;
  }
  char v60 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  if (v60) {
    goto LABEL_33;
  }
}

uint64_t sub_100A7951C(uint64_t a1)
{
  v2[84] = v1;
  v2[83] = a1;
  sub_1005057FC(&qword_101672C30);
  v2[85] = swift_task_alloc();
  uint64_t v3 = type metadata accessor for CRLBoardIdentifier(0);
  v2[86] = v3;
  v2[87] = *(void *)(v3 - 8);
  v2[88] = swift_task_alloc();
  type metadata accessor for CRLBoardLibraryViewModel.Folder(0);
  v2[89] = swift_task_alloc();
  sub_1005057FC((uint64_t *)&unk_101676310);
  v2[90] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  v2[91] = v4;
  v2[92] = *(void *)(v4 - 8);
  v2[93] = swift_task_alloc();
  v2[94] = swift_task_alloc();
  type metadata accessor for MainActor();
  v2[95] = static MainActor.shared.getter();
  uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
  v2[96] = v6;
  v2[97] = v5;
  return _swift_task_switch(sub_100A79710, v6, v5);
}

void sub_100A79710()
{
  sub_100A70B24();
  uint64_t v2 = v1;
  [v1 loadViewIfNeeded];

  if (sub_100A7B2CC())
  {
    if (qword_10166FB38 != -1) {
      swift_once();
    }
    uint64_t v3 = *(void *)(v0 + 712);
    uint64_t v4 = *(void **)(v0 + 672);
    swift_beginAccess();
    uint64_t v5 = (void *)static OS_os_log.sceneManagement;
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_10117E810;
    *(void *)(inited + 56) = type metadata accessor for CRLiOSSceneDelegate();
    *(void *)(inited + 64) = sub_100A99018((unint64_t *)&unk_10168E260, (void (*)(uint64_t))type metadata accessor for CRLiOSSceneDelegate);
    *(void *)(inited + 32) = v4;
    id v7 = v4;
    id v8 = v5;
    uint64_t v9 = static os_log_type_t.default.getter();
    sub_100BAC898((uint64_t)v8, (uint64_t)&_mh_execute_header, v9, (uint64_t)"Scene delete (%p) creating new board instead of restoring a discardable board.", 78, 2, inited);
    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();

    uint64_t v10 = sub_1005057FC(&qword_101670F30);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v3, 1, 5, v10);
    id v11 = [self mainBundle];
    NSString v12 = String._bridgeToObjectiveC()();
    NSString v13 = String._bridgeToObjectiveC()();
    id v14 = [v11 localizedStringForKey:v12 value:v13 table:0];

    uint64_t v15 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v17 = v16;

    *(void *)(v0 + 872) = v17;
    uint64_t v18 = (void *)swift_task_alloc();
    *(void *)(v0 + 880) = v18;
    *uint64_t v18 = v0;
    uint64_t v19 = sub_100A7ADE0;
LABEL_5:
    v18[1] = v19;
    uint64_t v20 = *(void *)(v0 + 712);
    sub_100A72B60(v20, v15, v17, 1);
    return;
  }
  uint64_t v21 = *(void *)(v0 + 736);
  uint64_t v22 = *(void *)(v0 + 728);
  uint64_t v23 = *(void *)(v0 + 720);
  sub_1009C35C8(v23);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v21 + 48))(v23, 1, v22) != 1)
  {
    sub_100A98C58(*(void *)(v0 + 720), *(void *)(v0 + 752), type metadata accessor for CRLBoardLibraryViewModel.Item);
    sub_100A70728();
    if (!v43)
    {
      __break(1u);
      return;
    }
    unint64_t v44 = v43;
    uint64_t v45 = *(void *)(v0 + 752);
    unint64_t v46 = *(void *)&v43[OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_storeHierarchySnapshot];
    swift_bridgeObjectRetain();

    uint64_t v47 = swift_task_alloc();
    *(void *)(v47 + 16) = v45;
    uint64_t v48 = (void *)sub_1008E81F4(1, (uint64_t (*)(id))sub_100A99060, v47, v46);
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    if (!v48)
    {
      swift_release();
      if (qword_10166FB38 != -1) {
        swift_once();
      }
      uint64_t v56 = *(void *)(v0 + 752);
      id v57 = *(void **)(v0 + 672);
      swift_beginAccess();
      char v58 = (void *)static OS_os_log.sceneManagement;
      sub_1005057FC((uint64_t *)&unk_101672B40);
      uint64_t v59 = swift_initStackObject();
      *(_OWORD *)(v59 + 16) = xmmword_10117D8C0;
      *(void *)(v59 + 56) = type metadata accessor for CRLiOSSceneDelegate();
      *(void *)(v59 + 64) = sub_100A99018((unint64_t *)&unk_10168E260, (void (*)(uint64_t))type metadata accessor for CRLiOSSceneDelegate);
      *(void *)(v59 + 32) = v57;
      id v60 = v57;
      id v61 = v58;
      uint64_t v62 = sub_100DD71D4();
      uint64_t v64 = v63;
      *(void *)(v59 + 96) = &type metadata for String;
      *(void *)(v59 + 104) = sub_100528BE4();
      *(void *)(v59 + 72) = v62;
      *(void *)(v59 + 80) = v64;
      uint64_t v65 = static os_log_type_t.default.getter();
      sub_100BAC898((uint64_t)v61, (uint64_t)&_mh_execute_header, v65, (uint64_t)"Scene delete (%p) ignoring user activity because item was not found: %@", 71, 2, v59);
      swift_setDeallocating();
      sub_1005057FC(&qword_101672B50);
      swift_arrayDestroy();

      sub_100A98CC0(v56, type metadata accessor for CRLBoardLibraryViewModel.Item);
LABEL_33:
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v76 = *(void (**)(void))(v0 + 8);
      v76();
      return;
    }
    uint64_t v49 = *(void **)(v0 + 664);

    id v50 = [v49 activityType];
    uint64_t v51 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    Class v53 = v52;

    char v54 = sub_1009C383C(v51, v53);
    if (sub_1009C2D88(v54) == 0xD000000000000027 && v55 == 0x8000000101235570)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      char v77 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      char v78 = 0;
      if ((v77 & 1) == 0) {
        goto LABEL_38;
      }
    }
    uint64_t v79 = self;
    NSString v80 = String._bridgeToObjectiveC()();
    _s8Freeform23CRLAnalyticsFeatureUsedC14featurePayload3forSDySSSo8NSObjectCGAA0bC4NameO_tFZ_0(2);
    sub_10050BF48(0, (unint64_t *)&qword_101672E50);
    Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    char v78 = 1;
    [v79 sendEventInDomain:v80 lazily:1 eventPayload:isa];

LABEL_38:
    *(unsigned char *)(v0 + 888) = v78;
    id v82 = [*(id *)(v0 + 664) activityType];
    uint64_t v83 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    id v85 = v84;

    char v86 = sub_1009C383C(v83, v85);
    if (sub_1009C2D88(v86) == 0xD000000000000033 && v87 == 0x80000001012354F0)
    {
      swift_bridgeObjectRelease();
      char v88 = 1;
    }
    else
    {
      char v88 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
    }
    *(unsigned char *)(v0 + 889) = v88 & 1;
    if (qword_10166FB38 != -1) {
      swift_once();
    }
    id v89 = *(void **)(v0 + 672);
    uint64_t v90 = *(void *)(v0 + 664);
    swift_beginAccess();
    CGFloat v91 = (void *)static OS_os_log.sceneManagement;
    *(void *)(v0 + 784) = sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t v92 = swift_initStackObject();
    *(_OWORD *)(v92 + 16) = xmmword_10117E800;
    *(void *)(v92 + 56) = type metadata accessor for CRLiOSSceneDelegate();
    *(void *)(v92 + 64) = sub_100A99018((unint64_t *)&unk_10168E260, (void (*)(uint64_t))type metadata accessor for CRLiOSSceneDelegate);
    *(void *)(v92 + 32) = v89;
    *(void *)(v92 + 96) = &type metadata for Bool;
    *(void *)(v92 + 104) = &protocol witness table for Bool;
    *(unsigned char *)(v92 + 72) = v88 & 1;
    *(void *)(v92 + 136) = &type metadata for Bool;
    *(void *)(v92 + 144) = &protocol witness table for Bool;
    *(unsigned char *)(v92 + 112) = v78;
    id v93 = v91;
    id v94 = v89;
    uint64_t v95 = sub_100DD71D4();
    uint64_t v97 = v96;
    *(void *)(v92 + 176) = &type metadata for String;
    unint64_t v98 = sub_100528BE4();
    *(void *)(v0 + 792) = v98;
    *(void *)(v92 + 184) = v98;
    *(void *)(v92 + 152) = v95;
    *(void *)(v92 + 160) = v97;
    uint64_t v99 = static os_log_type_t.default.getter();
    sub_100BAC898((uint64_t)v93, (uint64_t)&_mh_execute_header, v99, (uint64_t)"Scene delete (%p) handling user activity. isStateRestoration = %d, isHandoff = %d, item = %@", 92, 2, v92);
    swift_setDeallocating();
    *(void *)(v0 + 800) = sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();

    uint64_t v100 = (void *)swift_task_alloc();
    *(void *)(v0 + 808) = v100;
    *uint64_t v100 = v0;
    v100[1] = sub_100A7A658;
    uint64_t v101 = *(void *)(v0 + 752);
    sub_100A7B5C4(v101, 0, ((v78 | v88) & 1) == 0, v90);
    return;
  }
  long long v24 = *(void **)(v0 + 664);
  sub_100522F00(*(void *)(v0 + 720), (uint64_t *)&unk_101676310);
  id v25 = [v24 activityType];
  uint64_t v26 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  id v28 = v27;

  int v29 = sub_1009C383C(v26, v28);
  if (v29 != 8)
  {
    if (v29 == 6)
    {
      if (qword_10166FB38 != -1) {
        swift_once();
      }
      uint64_t v30 = *(void *)(v0 + 712);
      uint64_t v31 = *(void **)(v0 + 672);
      swift_beginAccess();
      id v32 = (void *)static OS_os_log.sceneManagement;
      sub_1005057FC((uint64_t *)&unk_101672B40);
      uint64_t v33 = swift_initStackObject();
      *(_OWORD *)(v33 + 16) = xmmword_10117E810;
      *(void *)(v33 + 56) = type metadata accessor for CRLiOSSceneDelegate();
      *(void *)(v33 + 64) = sub_100A99018((unint64_t *)&unk_10168E260, (void (*)(uint64_t))type metadata accessor for CRLiOSSceneDelegate);
      *(void *)(v33 + 32) = v31;
      id v34 = v31;
      id v35 = v32;
      uint64_t v36 = static os_log_type_t.default.getter();
      sub_100BAC898((uint64_t)v35, (uint64_t)&_mh_execute_header, v36, (uint64_t)"Scene delete (%p) creating new board.", 37, 2, v33);
      swift_setDeallocating();
      sub_1005057FC(&qword_101672B50);
      swift_arrayDestroy();

      uint64_t v37 = sub_1005057FC(&qword_101670F30);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v37 - 8) + 56))(v30, 1, 5, v37);
      id v38 = [self mainBundle];
      NSString v39 = String._bridgeToObjectiveC()();
      NSString v40 = String._bridgeToObjectiveC()();
      id v41 = [v38 localizedStringForKey:v39 value:v40 table:0];

      uint64_t v15 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v17 = v42;

      *(void *)(v0 + 824) = v17;
      uint64_t v18 = (void *)swift_task_alloc();
      *(void *)(v0 + 832) = v18;
      *uint64_t v18 = v0;
      uint64_t v19 = sub_100A7A924;
      goto LABEL_5;
    }
    swift_release();
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"handle(userActivity:)", 21, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/App/CRLiOSSceneDelegate.swift", 87, 2, 552);
    goto LABEL_33;
  }
  uint64_t v66 = *(void *)(v0 + 696);
  uint64_t v67 = *(void *)(v0 + 688);
  uint64_t v68 = *(void *)(v0 + 680);
  sub_100A7CD0C(*(void **)(v0 + 664), v68);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v66 + 48))(v68, 1, v67) == 1)
  {
    sub_100522F00(*(void *)(v0 + 680), &qword_101672C30);
    id v69 = sub_100A96FE0(1u);
    *(void *)(v0 + 848) = v69;
    id v70 = sub_100A70A50();
    id v71 = [v70 presentedViewController];

    if (v71)
    {
      self;
      id v72 = (void *)swift_dynamicCastObjCClass();
      if (!v72)
      {
LABEL_27:

        goto LABEL_28;
      }
      id v73 = [v72 topViewController];

      if (v73)
      {
        type metadata accessor for CRLiOSBoardViewController();
        uint64_t v74 = swift_dynamicCastClass();
        id v71 = v73;
        if (v74)
        {
LABEL_29:
          *(void *)(v0 + 856) = v74;
          uint64_t v75 = (void *)swift_task_alloc();
          *(void *)(v0 + 864) = v75;
          void *v75 = v0;
          v75[1] = sub_100A7AC9C;
          sub_100B75534((uint64_t)v69, 1);
          return;
        }
        goto LABEL_27;
      }
    }
LABEL_28:
    uint64_t v74 = (uint64_t)sub_100A70A50();
    goto LABEL_29;
  }
  sub_100A98C58(*(void *)(v0 + 680), *(void *)(v0 + 704), type metadata accessor for CRLBoardIdentifier);
  __n128 v102 = (void *)swift_task_alloc();
  *(void *)(v0 + 840) = v102;
  *__n128 v102 = v0;
  v102[1] = sub_100A7AAA8;
  uint64_t v103 = *(void *)(v0 + 704);
  sub_100A7C85C(v103);
}

uint64_t sub_100A7A658(void *a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 816) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = *(void *)(v4 + 776);
    uint64_t v6 = *(void *)(v4 + 768);
    id v7 = sub_100A7B018;
  }
  else
  {

    uint64_t v5 = *(void *)(v4 + 776);
    uint64_t v6 = *(void *)(v4 + 768);
    id v7 = sub_100A7A784;
  }
  return _swift_task_switch(v7, v6, v5);
}

uint64_t sub_100A7A784()
{
  uint64_t v1 = *(void *)(v0 + 752);
  uint64_t v2 = *(void *)(v0 + 744);
  swift_release();
  sub_100A982B0(v1, v2, type metadata accessor for CRLBoardLibraryViewModel.Item);
  if (swift_getEnumCaseMultiPayload() == 2)
  {
    uint64_t v3 = *(void *)(v0 + 744);
    sub_1005057FC(&qword_101677100);
    swift_bridgeObjectRelease();
    sub_100A98CC0(v3, type metadata accessor for CRLBoardIdentifier);
  }
  else
  {
    uint64_t v4 = *(void *)(v0 + 752);
    char v5 = *(unsigned char *)(v0 + 889) | *(unsigned char *)(v0 + 888);
    sub_100A98CC0(*(void *)(v0 + 744), type metadata accessor for CRLBoardLibraryViewModel.Item);
    sub_100A70B24();
    id v7 = v6;
    sub_10056D504(v4, (v5 & 1) == 0);
  }
  sub_100A98CC0(*(void *)(v0 + 752), type metadata accessor for CRLBoardLibraryViewModel.Item);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  id v8 = *(uint64_t (**)(void))(v0 + 8);
  return v8();
}

uint64_t sub_100A7A924(void *a1)
{
  uint64_t v3 = *v1;
  uint64_t v4 = *(void *)(*v1 + 712);
  swift_task_dealloc();
  swift_bridgeObjectRelease();

  sub_100A98CC0(v4, type metadata accessor for CRLBoardLibraryViewModel.Folder);
  uint64_t v5 = *(void *)(v3 + 776);
  uint64_t v6 = *(void *)(v3 + 768);
  return _swift_task_switch(sub_100A9A6E4, v6, v5);
}

uint64_t sub_100A7AAA8()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 776);
  uint64_t v3 = *(void *)(v1 + 768);
  return _swift_task_switch(sub_100A7ABC8, v3, v2);
}

uint64_t sub_100A7ABC8()
{
  uint64_t v1 = *(void *)(v0 + 704);
  swift_release();
  sub_100A98CC0(v1, type metadata accessor for CRLBoardIdentifier);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_100A7AC9C()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *(void **)(*v1 + 856);
  swift_task_dealloc();

  if (v0)
  {
    swift_errorRelease();
    uint64_t v4 = *(void *)(v2 + 776);
    uint64_t v5 = *(void *)(v2 + 768);
    uint64_t v6 = sub_100A7B208;
  }
  else
  {
    uint64_t v4 = *(void *)(v2 + 776);
    uint64_t v5 = *(void *)(v2 + 768);
    uint64_t v6 = sub_100A9A6E0;
  }
  return _swift_task_switch(v6, v5, v4);
}

uint64_t sub_100A7ADE0(void *a1)
{
  uint64_t v3 = *v1;
  uint64_t v4 = *(void *)(*v1 + 712);
  swift_task_dealloc();
  swift_bridgeObjectRelease();

  sub_100A98CC0(v4, type metadata accessor for CRLBoardLibraryViewModel.Folder);
  uint64_t v5 = *(void *)(v3 + 776);
  uint64_t v6 = *(void *)(v3 + 768);
  return _swift_task_switch(sub_100A7AF64, v6, v5);
}

uint64_t sub_100A7AF64()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100A7B018()
{
  swift_release();
  if (qword_10166F9D8 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[102];
  uint64_t v2 = v0[99];
  swift_beginAccess();
  uint64_t v3 = (void *)static OS_os_log.crlError;
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117E810;
  v0[82] = v1;
  id v5 = v3;
  swift_errorRetain();
  sub_1005057FC(&qword_101672BD0);
  uint64_t v6 = String.init<A>(describing:)();
  *(void *)(inited + 56) = &type metadata for String;
  *(void *)(inited + 64) = v2;
  *(void *)(inited + 32) = v6;
  *(void *)(inited + 40) = v7;
  uint64_t v8 = static os_log_type_t.debug.getter();
  sub_100BAC898((uint64_t)v5, (uint64_t)&_mh_execute_header, v8, (uint64_t)"Caught exception trying to show view controller while handling user activity. %@", 80, 2, inited);
  swift_errorRelease();
  swift_setDeallocating();
  swift_arrayDestroy();

  sub_100A98CC0(v0[94], type metadata accessor for CRLBoardLibraryViewModel.Item);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v9 = (uint64_t (*)(void))v0[1];
  return v9();
}

uint64_t sub_100A7B208()
{
  uint64_t v1 = *(void **)(v0 + 848);
  swift_release();
  sub_100F2BCC8(v1);

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_100A7B2CC()
{
  uint64_t v1 = v0;
  id v2 = [v0 activityType];
  uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  id v5 = v4;

  char v6 = sub_1009C383C(v3, v5);
  if (sub_1009C2D88(v6) == 0xD00000000000001BLL && v7 == 0x8000000101235620) {
    goto LABEL_3;
  }
  char v9 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  uint64_t result = 0;
  if (v9) {
    return result;
  }
  id v10 = [v1 userInfo];
  if (v10)
  {
    uint64_t v11 = v10;
    uint64_t v12 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

    swift_bridgeObjectRetain();
    AnyHashable.init<A>(_:)();
    if (*(void *)(v12 + 16) && (unint64_t v13 = sub_10095647C((uint64_t)v22), (v14 & 1) != 0))
    {
      sub_100522D7C(*(void *)(v12 + 56) + 32 * v13, (uint64_t)&v23);
    }
    else
    {
      long long v23 = 0u;
      long long v24 = 0u;
    }
    sub_10050BFE0((uint64_t)v22);
    swift_bridgeObjectRelease();
    if (*((void *)&v24 + 1))
    {
      if (swift_dynamicCast()) {
        return v22[0];
      }
      goto LABEL_17;
    }
  }
  else
  {
    long long v23 = 0u;
    long long v24 = 0u;
  }
  sub_100522F00((uint64_t)&v23, &qword_101672BF0);
LABEL_17:
  id v15 = [v1 activityType];
  uint64_t v16 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v18 = v17;

  char v19 = sub_1009C383C(v16, v18);
  if (sub_1009C2D88(v19) == 0xD000000000000018 && v20 == 0x8000000101235600)
  {
LABEL_3:
    swift_bridgeObjectRelease();
    return 0;
  }
  char v21 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  uint64_t result = 0;
  if ((v21 & 1) == 0)
  {
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"crl_viewModelItemIsDiscardableBoard", 35, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/App/CRLiOSSceneDelegate.swift", 87, 2, 2077);
    return 0;
  }
  return result;
}

uint64_t sub_100A7B5C4(uint64_t a1, char a2, char a3, uint64_t a4)
{
  *(void *)(v5 + 96) = a4;
  *(void *)(v5 + 104) = v4;
  *(unsigned char *)(v5 + 313) = a3;
  *(unsigned char *)(v5 + 312) = a2;
  *(void *)(v5 + 88) = a1;
  uint64_t v6 = type metadata accessor for Date();
  *(void *)(v5 + 112) = v6;
  *(void *)(v5 + 120) = *(void *)(v6 - 8);
  *(void *)(v5 + 128) = swift_task_alloc();
  *(void *)(v5 + 136) = swift_task_alloc();
  uint64_t v7 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  *(void *)(v5 + 144) = v7;
  *(void *)(v5 + 152) = *(void *)(v7 - 8);
  *(void *)(v5 + 160) = swift_task_alloc();
  sub_1005057FC(&qword_101672EB0);
  *(void *)(v5 + 168) = swift_task_alloc();
  *(void *)(v5 + 176) = swift_task_alloc();
  *(void *)(v5 + 184) = type metadata accessor for MainActor();
  *(void *)(v5 + 192) = static MainActor.shared.getter();
  uint64_t v9 = dispatch thunk of Actor.unownedExecutor.getter();
  *(void *)(v5 + 200) = v9;
  *(void *)(v5 + 208) = v8;
  return _swift_task_switch(sub_100A7B774, v9, v8);
}

uint64_t sub_100A7B774()
{
  if (sub_100A70DDC())
  {
    v0[27] = static MainActor.shared.getter();
    uint64_t v2 = dispatch thunk of Actor.unownedExecutor.getter();
    v0[28] = v2;
    v0[29] = v1;
    return _swift_task_switch(sub_100A7B874, v2, v1);
  }
  else
  {
    uint64_t v3 = (void *)swift_task_alloc();
    v0[33] = v3;
    *uint64_t v3 = v0;
    v3[1] = sub_100A7BB74;
    return sub_100A710A0();
  }
}

uint64_t sub_100A7B874()
{
  uint64_t v1 = v0[13];
  v0[30] = static MainActor.shared.getter();
  uint64_t v2 = swift_task_alloc();
  v0[31] = v2;
  *(void *)(v2 + 16) = v1;
  uint64_t v3 = (void *)swift_task_alloc();
  v0[32] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_100A7B97C;
  return withCheckedContinuation<A>(isolation:function:_:)();
}

uint64_t sub_100A7B97C()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_release();
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 232);
  uint64_t v3 = *(void *)(v1 + 224);
  return _swift_task_switch(sub_100A7BADC, v3, v2);
}

uint64_t sub_100A7BADC()
{
  swift_release();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 264) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_100A7BB74;
  return sub_100A710A0();
}

uint64_t sub_100A7BB74()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 208);
  uint64_t v3 = *(void *)(v1 + 200);
  return _swift_task_switch(sub_100A7BC94, v3, v2);
}

uint64_t sub_100A7BC94()
{
  sub_100A982B0(v0[11], v0[20], type metadata accessor for CRLBoardLibraryViewModel.Item);
  if (swift_getEnumCaseMultiPayload() == 2)
  {
    uint64_t v1 = v0[20];
    sub_1005057FC(&qword_101677100);
    swift_bridgeObjectRelease();
    sub_100A98CC0(v1, type metadata accessor for CRLBoardIdentifier);
    Date.init()();
    uint64_t v2 = 0;
  }
  else
  {
    sub_100A98CC0(v0[20], type metadata accessor for CRLBoardLibraryViewModel.Item);
    uint64_t v2 = 1;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v0[15] + 56))(v0[22], v2, 1, v0[14]);
  uint64_t v3 = (void *)swift_task_alloc();
  v0[34] = (uint64_t)v3;
  *uint64_t v3 = v0;
  v3[1] = sub_100A7BDF4;
  uint64_t v4 = v0[11];
  return sub_100A8E66C(v4);
}

uint64_t sub_100A7BDF4(uint64_t a1)
{
  uint64_t v3 = *v2;
  uint64_t v4 = *v2;
  *(void *)(v4 + 280) = a1;
  *(void *)(v4 + 288) = v1;
  swift_task_dealloc();
  uint64_t v5 = *(void *)(v3 + 208);
  uint64_t v6 = *(void *)(v3 + 200);
  if (v1) {
    uint64_t v7 = sub_100A7C6E4;
  }
  else {
    uint64_t v7 = sub_100A7BF38;
  }
  return _swift_task_switch(v7, v6, v5);
}

uint64_t sub_100A7BF38()
{
  uint64_t v1 = *(void **)(v0 + 280);
  if (v1)
  {
    uint64_t v2 = *(void *)(*(void *)(v0 + 104) + OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate_navigationStack);
    if (*(unsigned char *)(v0 + 312) == 1)
    {
      uint64_t v3 = *(void *)(v0 + 88);
      swift_retain();
      sub_10076EE88(v3);
      swift_release();
      uint64_t v4 = *(void **)(v0 + 96);
      if (!v4) {
        goto LABEL_12;
      }
    }
    else
    {
      uint64_t v10 = *(void *)(v0 + 152);
      uint64_t v11 = *(void *)(v0 + 88);
      sub_1005057FC(&qword_10169B510);
      unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
      uint64_t v13 = swift_allocObject();
      *(_OWORD *)(v13 + 16) = xmmword_10117E810;
      sub_100A982B0(v11, v13 + v12, type metadata accessor for CRLBoardLibraryViewModel.Item);
      swift_beginAccess();
      *(void *)(v2 + 16) = v13;
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      id v14 = [self defaultCenter];
      if (qword_10166F008 != -1) {
        swift_once();
      }
      [v14 postNotificationName:qword_10171A6E8 object:v2];
      swift_release();
      swift_bridgeObjectRelease();

      uint64_t v4 = *(void **)(v0 + 96);
      if (!v4) {
        goto LABEL_12;
      }
    }
    id v15 = v4;
    [v1 restoreUserActivityState:v15];
    [v15 setNeedsSave:1];

LABEL_12:
    uint64_t v16 = (void *)swift_task_alloc();
    *(void *)(v0 + 296) = v16;
    *uint64_t v16 = v0;
    v16[1] = sub_100A7C348;
    char v17 = *(unsigned char *)(v0 + 313);
    char v18 = *(unsigned char *)(v0 + 312);
    return sub_100A86230((uint64_t)v1, v18, v17);
  }
  sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"showViewController(for:push:animated:restoringFrom:)", 52, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/App/CRLiOSSceneDelegate.swift", 87, 2, 1531, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
  sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"showViewController(for:push:animated:restoringFrom:)", 52, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/App/CRLiOSSceneDelegate.swift", 87, 2, 1531);
  swift_release();
  _StringGuts.grow(_:)(57);
  v5._object = (void *)0x800000010126CD90;
  v5._countAndFlagsBits = 0xD000000000000037;
  String.append(_:)(v5);
  v6._countAndFlagsBits = sub_100DD71D4();
  String.append(_:)(v6);
  swift_bridgeObjectRelease();
  sub_100A98254();
  swift_allocError();
  *(void *)uint64_t v7 = 0;
  *(void *)(v7 + 8) = 0xE000000000000000;
  *(void *)(v7 + 16) = 0;
  *(void *)(v7 + 24) = 0;
  *(unsigned char *)(v7 + 32) = 2;
  swift_willThrow();
  sub_100522F00(*(void *)(v0 + 176), &qword_101672EB0);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v8 = *(uint64_t (**)(void))(v0 + 8);
  return v8();
}

uint64_t sub_100A7C348()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 304) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 208);
  uint64_t v4 = *(void *)(v2 + 200);
  if (v0) {
    Swift::String v5 = sub_100A7C79C;
  }
  else {
    Swift::String v5 = sub_100A7C484;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_100A7C484()
{
  swift_release();
  sub_1005057FC((uint64_t *)&unk_101676C10);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117DF50;
  *(void *)(inited + 32) = sub_100A783E0();
  *(void *)(inited + 40) = sub_100A783F0();
  specialized Array._endMutation()();
  if ((inited & 0xC000000000000001) != 0)
  {
    uint64_t v2 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
    sub_100A78C10(v2);

    id v3 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  else
  {
    id v4 = *(id *)(inited + 32);
    sub_100A78C10(v4);

    id v3 = *(id *)(inited + 40);
  }
  Swift::String v5 = v3;
  uint64_t v7 = v0 + 22;
  uint64_t v6 = v0[22];
  uint64_t v8 = v0[21];
  uint64_t v9 = v0[14];
  uint64_t v10 = v0[15];
  sub_100A78C10(v3);
  swift_bridgeObjectRelease();

  sub_100A78688();
  sub_100522E9C(v6, v8, &qword_101672EB0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_100522F00(*v7, &qword_101672EB0);
    uint64_t v7 = v0 + 21;
  }
  else
  {
    uint64_t v12 = v0[16];
    uint64_t v11 = v0[17];
    uint64_t v13 = v0[14];
    uint64_t v14 = v0[15];
    (*(void (**)(uint64_t, void, uint64_t))(v14 + 32))(v11, v0[21], v13);
    Date.init()();
    Date.timeIntervalSince(_:)();
    double v16 = v15;
    char v17 = *(void (**)(uint64_t, uint64_t))(v14 + 8);
    v17(v12, v13);
    sub_100AE9874(v16);
    v17(v11, v13);
  }
  sub_100522F00(*v7, &qword_101672EB0);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  char v18 = (uint64_t (*)(uint64_t))v0[1];
  uint64_t v19 = v0[35];
  return v18(v19);
}

uint64_t sub_100A7C6E4()
{
  swift_release();
  sub_100522F00(*(void *)(v0 + 176), &qword_101672EB0);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100A7C79C()
{
  uint64_t v1 = (void *)v0[35];
  swift_release();

  sub_100522F00(v0[22], &qword_101672EB0);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = (uint64_t (*)(void))v0[1];
  return v2();
}

uint64_t sub_100A7C85C(uint64_t a1)
{
  v2[16] = a1;
  v2[17] = v1;
  type metadata accessor for CRLBoardIdentifier(0);
  v2[18] = swift_task_alloc();
  type metadata accessor for MainActor();
  v2[19] = static MainActor.shared.getter();
  uint64_t v4 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_100A7C920, v4, v3);
}

void sub_100A7C920()
{
  uint64_t v1 = *(void *)(v0 + 136);
  swift_release();
  uint64_t v2 = OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate_downloadSharedCopyAttempt;
  if (*(void *)(v1 + OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate_downloadSharedCopyAttempt))
  {
    if (qword_10166FA90 != -1) {
      swift_once();
    }
    swift_beginAccess();
    id v3 = (id)static OS_os_log.crlSendACopy;
    uint64_t v4 = static os_log_type_t.info.getter();
    sub_100BAC898((uint64_t)v3, (uint64_t)&_mh_execute_header, v4, (uint64_t)"Trying to download multiple shared board copies at the same time; this is unsupported.",
      86,
      2,
      (uint64_t)_swiftEmptyArrayStorage);
    goto LABEL_10;
  }
  sub_100A70728();
  if (!v5)
  {
    __break(1u);
LABEL_14:
    __break(1u);
    return;
  }
  uint64_t v6 = v5;
  uint64_t v31 = v1;
  id v7 = *(id *)&v5[OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_store];

  if (qword_10166EE68 != -1) {
    swift_once();
  }
  uint64_t v8 = *(void *)(v0 + 144);
  uint64_t v9 = *(void *)(v0 + 128);
  uint64_t v10 = (void *)qword_10171A488;
  type metadata accessor for CRLPublicCloudRecordProvider();
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = v7;
  id v12 = v7;
  id v13 = v10;
  id v14 = [v13 publicCloudDatabase];
  swift_retain();

  sub_100A982B0(v9, v8, type metadata accessor for CRLBoardIdentifier);
  sub_100A70728();
  uint64_t v30 = v15;
  if (!v15) {
    goto LABEL_14;
  }
  uint64_t v29 = *(void *)(v0 + 144);
  id v28 = *(void **)(v0 + 136);
  *(void *)(v0 + 88) = &type metadata for CRLSendACopyBoardDataHandler;
  *(void *)(v0 + 96) = &off_10152B8C8;
  double v16 = (void *)swift_allocObject();
  *(void *)(v0 + 64) = v16;
  v16[2] = v12;
  v16[3] = v12;
  v16[4] = v11;
  v16[5] = &off_101519ED8;
  v16[6] = v14;
  v16[7] = v11;
  type metadata accessor for CRLDownloadSharedCopyAttempt();
  uint64_t v27 = swift_allocObject();
  uint64_t v17 = sub_1005231B4(v0 + 64, (uint64_t)&type metadata for CRLSendACopyBoardDataHandler);
  char v18 = (_OWORD *)swift_task_alloc();
  ((void (*)(_OWORD *, uint64_t, ValueMetadata *))initializeWithCopy for CRLSendACopyBoardDataHandler)(v18, v17, &type metadata for CRLSendACopyBoardDataHandler);
  long long v20 = v18[1];
  long long v19 = v18[2];
  *(_OWORD *)(v0 + 16) = *v18;
  *(_OWORD *)(v0 + 32) = v20;
  *(_OWORD *)(v0 + 48) = v19;
  id v21 = v12;
  swift_retain_n();
  id v22 = v21;
  id v23 = v14;
  id v24 = v22;
  id v3 = v23;
  uint64_t v25 = sub_100A95808(v29, v30, (_OWORD *)(v0 + 16), v28, v27);
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v0 + 64);

  swift_release_n();
  swift_task_dealloc();
  *(void *)(v31 + v2) = v25;
  swift_retain();
  swift_release();
  sub_10079784C();
  swift_release_n();

  swift_release();
LABEL_10:

  swift_task_dealloc();
  uint64_t v26 = *(void (**)(void))(v0 + 8);
  v26();
}

uint64_t sub_100A7CD0C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1005057FC(&qword_101672C30);
  __chkstk_darwin(v4 - 8, v5);
  id v7 = (char *)&v45 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1005057FC(&qword_101672E90);
  __chkstk_darwin(v8 - 8, v9);
  uint64_t v11 = (char *)&v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for URL();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12, v14);
  double v16 = (char *)&v45 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17, v18);
  long long v20 = (char *)&v45 - v19;
  uint64_t v48 = &type metadata for CRLFeatureFlags;
  unint64_t v49 = sub_1005396A8();
  v47[0] = 18;
  char v21 = isFeatureEnabled(_:)();
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v47);
  if ((v21 & 1) == 0)
  {
LABEL_13:
    uint64_t v37 = type metadata accessor for CRLBoardIdentifier(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v37 - 8) + 56))(a2, 1, 1, v37);
  }
  id v22 = [a1 webpageURL];
  if (!v22)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v11, 1, 1, v12);
    goto LABEL_10;
  }
  id v23 = v22;
  static URL._unconditionallyBridgeFromObjectiveC(_:)();

  id v24 = *(void (**)(char *, char *, uint64_t))(v13 + 32);
  v24(v11, v16, v12);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v11, 0, 1, v12);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
  {
LABEL_10:
    sub_100522F00((uint64_t)v11, &qword_101672E90);
    if (qword_10166FA90 != -1) {
      swift_once();
    }
    swift_beginAccess();
    id v35 = (id)static OS_os_log.crlSendACopy;
    uint64_t v36 = static os_log_type_t.error.getter();
    sub_100BAC898((uint64_t)v35, (uint64_t)&_mh_execute_header, v36, (uint64_t)"Missing url for Send-A-Copy", 27, 2, (uint64_t)_swiftEmptyArrayStorage);

    goto LABEL_13;
  }
  v24(v20, v11, v12);
  if ((sub_1006F5E40() & 1) == 0)
  {
    if (qword_10166FA90 != -1) {
      swift_once();
    }
    swift_beginAccess();
    id v38 = (void *)static OS_os_log.crlSendACopy;
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_10117E810;
    sub_100A99018(&qword_10168E250, (void (*)(uint64_t))&type metadata accessor for URL);
    id v40 = v38;
    uint64_t v41 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v43 = v42;
    *(void *)(inited + 56) = &type metadata for String;
    *(void *)(inited + 64) = sub_100528BE4();
    *(void *)(inited + 32) = v41;
    *(void *)(inited + 40) = v43;
    uint64_t v44 = static os_log_type_t.error.getter();
    sub_100BAC898((uint64_t)v40, (uint64_t)&_mh_execute_header, v44, (uint64_t)"Invalidate url for Send-A-Copy %{public}@", 41, 2, inited);
    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();

    (*(void (**)(char *, uint64_t))(v13 + 8))(v20, v12);
    goto LABEL_13;
  }
  sub_1006F5484((uint64_t)v7);
  uint64_t v25 = type metadata accessor for CRLBoardIdentifier(0);
  uint64_t v26 = *(void *)(v25 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v7, 1, v25) == 1)
  {
    sub_100522F00((uint64_t)v7, &qword_101672C30);
    if (qword_10166FA90 != -1) {
      swift_once();
    }
    swift_beginAccess();
    uint64_t v27 = (void *)static OS_os_log.crlSendACopy;
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t v28 = swift_initStackObject();
    *(_OWORD *)(v28 + 16) = xmmword_10117E810;
    sub_100A99018(&qword_10168E250, (void (*)(uint64_t))&type metadata accessor for URL);
    id v46 = v27;
    uint64_t v29 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v31 = v30;
    *(void *)(v28 + 56) = &type metadata for String;
    *(void *)(v28 + 64) = sub_100528BE4();
    *(void *)(v28 + 32) = v29;
    *(void *)(v28 + 40) = v31;
    uint64_t v32 = static os_log_type_t.error.getter();
    id v33 = v46;
    sub_100BAC898((uint64_t)v46, (uint64_t)&_mh_execute_header, v32, (uint64_t)"Failed to extract board identifier to download for Send-A-Copy %{public}@", 73, 2, v28);
    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();

    (*(void (**)(char *, uint64_t))(v13 + 8))(v20, v12);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v26 + 56))(a2, 1, 1, v25);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v20, v12);
    sub_100A98C58((uint64_t)v7, a2, type metadata accessor for CRLBoardIdentifier);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v26 + 56))(a2, 0, 1, v25);
  }
}

void sub_100A7D46C(void *a1)
{
  uint64_t v2 = OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate_acceptCloudKitShareAttempt;
  if (*(void *)(v1 + OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate_acceptCloudKitShareAttempt))
  {
    if (qword_10166FBE0 != -1) {
      swift_once();
    }
    swift_beginAccess();
    id v3 = (id)static OS_os_log.shareState;
    uint64_t v4 = static os_log_type_t.error.getter();
    sub_100BAC898((uint64_t)v3, (uint64_t)&_mh_execute_header, v4, (uint64_t)"Trying to accept multiple CloudKit shares at the same time; this is unsupported.",
      80,
      2,
      (uint64_t)_swiftEmptyArrayStorage);

    return;
  }
  sub_100A70728();
  if (!v6)
  {
    __break(1u);
    goto LABEL_14;
  }
  uint64_t v7 = v6;
  id v8 = [self sharedApplication];
  id v9 = [v8 delegate];

  if (!v9)
  {
LABEL_14:
    __break(1u);
    return;
  }
  type metadata accessor for CRLiOSAppDelegate();
  uint64_t v10 = *(void *)(swift_dynamicCastClassUnconditional() + OBJC_IVAR____TtC8Freeform17CRLiOSAppDelegate_syncDriver);
  if (v10)
  {
    uint64_t v11 = *(void **)(v10 + 32);
    id v12 = v11;
  }
  else
  {
    uint64_t v11 = 0;
  }
  swift_unknownObjectRelease();
  type metadata accessor for CRLAcceptCloudKitShareAttempt();
  uint64_t v13 = (void *)swift_allocObject();
  v13[6] = 0;
  swift_unknownObjectWeakInit();
  uint64_t v14 = (char *)v13 + OBJC_IVAR____TtC8Freeform29CRLAcceptCloudKitShareAttempt_boardIdentifier;
  uint64_t v15 = type metadata accessor for CRLBoardIdentifier(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v14, 1, 1, v15);
  *(void *)((char *)v13 + OBJC_IVAR____TtC8Freeform29CRLAcceptCloudKitShareAttempt_acceptShareTask) = 0;
  double v16 = (_OWORD *)((char *)v13 + OBJC_IVAR____TtC8Freeform29CRLAcceptCloudKitShareAttempt_snapshotUpdateObservationToken);
  *double v16 = 0u;
  v16[1] = 0u;
  *((unsigned char *)v13 + OBJC_IVAR____TtC8Freeform29CRLAcceptCloudKitShareAttempt_didConfirmBoardIsReadyToOpen) = 0;
  *((unsigned char *)v13 + OBJC_IVAR____TtC8Freeform29CRLAcceptCloudKitShareAttempt_didCheckIfBoardAlreadyExistsInSnapshot) = 0;
  v13[2] = a1;
  v13[3] = v7;
  v13[4] = v11;
  v13[6] = &off_1015200B0;
  swift_unknownObjectWeakAssign();
  *(void *)(v1 + v2) = v13;
  id v17 = a1;
  swift_retain();
  swift_release();
  sub_100A6A278();

  swift_release();
}

uint64_t sub_100A7D70C(uint64_t a1)
{
  v2[18] = a1;
  v2[19] = v1;
  v2[20] = type metadata accessor for MainActor();
  v2[21] = static MainActor.shared.getter();
  uint64_t v4 = dispatch thunk of Actor.unownedExecutor.getter();
  v2[22] = v4;
  v2[23] = v3;
  return _swift_task_switch(sub_100A7D7A8, v4, v3);
}

uint64_t sub_100A7D7A8()
{
  id v1 = sub_100A70A50();
  id v2 = [v1 presentedViewController];

  if (!v2) {
    goto LABEL_6;
  }
  self;
  uint64_t v3 = (void *)swift_dynamicCastObjCClass();
  if (!v3) {
    goto LABEL_5;
  }
  id v4 = [v3 topViewController];

  if (!v4)
  {
LABEL_6:
    uint64_t v5 = sub_100A70A50();
    goto LABEL_7;
  }
  type metadata accessor for CRLiOSBoardViewController();
  uint64_t v5 = (void *)swift_dynamicCastClass();
  id v2 = v4;
  if (!v5)
  {
LABEL_5:

    goto LABEL_6;
  }
LABEL_7:
  v0[24] = v5;
  id v6 = v5;
  id v7 = sub_100A70A50();
  id v8 = [v7 presentedViewController];

  id v9 = v6;
  if (!v8) {
    goto LABEL_25;
  }
  self;
  uint64_t v10 = (void *)swift_dynamicCastObjCClass();
  if (!v10)
  {

    id v9 = v8;
    goto LABEL_25;
  }
  id v11 = [v10 topViewController];

  id v9 = v6;
  if (!v11) {
    goto LABEL_25;
  }
  type metadata accessor for CRLiOSBoardViewController();
  uint64_t v12 = swift_dynamicCastClass();

  if (!v12) {
    goto LABEL_26;
  }
  if (v6 != (id)v12) {
    goto LABEL_26;
  }
  id v13 = sub_100A70A50();
  id v9 = [v13 presentedViewController];

  if (!v9) {
    goto LABEL_26;
  }
  self;
  uint64_t v14 = (void *)swift_dynamicCastObjCClass();
  if (!v14)
  {
LABEL_25:

    goto LABEL_26;
  }
  id v15 = [v14 topViewController];

  if (!v15) {
    goto LABEL_26;
  }
  uint64_t v16 = swift_dynamicCastClass();
  if (!v16)
  {
    id v9 = v15;
    goto LABEL_25;
  }
  uint64_t v17 = *(void *)(v16 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_undoAlertController);

  if (v17)
  {
    id v18 = sub_100A70A50();
    id v19 = [v18 presentedViewController];

    if (!v19) {
      goto LABEL_35;
    }
    self;
    long long v20 = (void *)swift_dynamicCastObjCClass();
    if (v20)
    {
      id v21 = [v20 topViewController];
      v0[25] = v21;

      if (v21)
      {
        uint64_t v22 = swift_dynamicCastClass();
        v0[26] = v22;
        id v19 = v21;
        if (v22)
        {
          v0[27] = static MainActor.shared.getter();
          uint64_t v24 = dispatch thunk of Actor.unownedExecutor.getter();
          v0[28] = v24;
          v0[29] = v23;
          return _swift_task_switch(sub_100A7DC70, v24, v23);
        }
        goto LABEL_34;
      }
LABEL_35:
      uint64_t v27 = (void *)swift_task_alloc();
      v0[34] = v27;
      *uint64_t v27 = v0;
      v27[1] = sub_100A7E1F8;
      uint64_t v28 = v0[18];
      return sub_100B75534(v28, 1);
    }
LABEL_34:

    goto LABEL_35;
  }
LABEL_26:
  id v25 = [v6 presentedViewController];
  v0[31] = v25;
  if (!v25) {
    goto LABEL_35;
  }
  id v19 = v25;
  sub_10050BF48(0, &qword_10169FC50);
  if (([v19 isKindOfClass:swift_getObjCClassFromMetadata()] & 1) == 0)
  {
    sub_10050BF48(0, &qword_10168E230);
    if (([v19 isKindOfClass:swift_getObjCClassFromMetadata()] & 1) == 0)
    {
      sub_10050BF48(0, &qword_10168E238);
      if (([v19 isKindOfClass:swift_getObjCClassFromMetadata()] & 1) == 0)
      {
        sub_10050BF48(0, (unint64_t *)&unk_10168E240);
        if (![v19 isKindOfClass:swift_getObjCClassFromMetadata()]) {
          goto LABEL_34;
        }
      }
    }
  }
  uint64_t v26 = (void *)swift_task_alloc();
  v0[32] = v26;
  *uint64_t v26 = v0;
  v26[1] = sub_100A7E018;
  return sub_100B758E8(1);
}

uint64_t sub_100A7DC70()
{
  if (*(void *)(v0[26] + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_undoAlertController))
  {
    id v1 = (void *)swift_task_alloc();
    v0[30] = v1;
    *id v1 = v0;
    v1[1] = sub_100A7DE48;
    return sub_100E5291C();
  }
  else
  {
    uint64_t v3 = (void *)v0[25];
    swift_release();
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"dismissUndoMenu()", 17, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSBoardViewController-ToolbarAdditions.swift", 112, 2, 1933, (uint64_t)"Not showing undo menu", 21, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"dismissUndoMenu()", 17, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSBoardViewController-ToolbarAdditions.swift", 112, 2, 1933);

    id v4 = (void *)swift_task_alloc();
    v0[34] = v4;
    *id v4 = v0;
    v4[1] = sub_100A7E1F8;
    uint64_t v5 = v0[18];
    return sub_100B75534(v5, 1);
  }
}

uint64_t sub_100A7DE48()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 232);
  uint64_t v3 = *(void *)(v1 + 224);
  return _swift_task_switch(sub_100A7DF68, v3, v2);
}

uint64_t sub_100A7DF68()
{
  uint64_t v1 = (void *)v0[25];
  swift_release();
  sub_1005B1790();

  uint64_t v2 = (void *)swift_task_alloc();
  v0[34] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_100A7E1F8;
  uint64_t v3 = v0[18];
  return sub_100B75534(v3, 1);
}

uint64_t sub_100A7E018()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 264) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 184);
  uint64_t v4 = *(void *)(v2 + 176);
  if (v0) {
    uint64_t v5 = sub_100A7E3A0;
  }
  else {
    uint64_t v5 = sub_100A7E154;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_100A7E154()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 272) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_100A7E1F8;
  uint64_t v2 = *(void *)(v0 + 144);
  return sub_100B75534(v2, 1);
}

uint64_t sub_100A7E1F8()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 280) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 184);
  uint64_t v4 = *(void *)(v2 + 176);
  if (v0) {
    uint64_t v5 = sub_100A7E55C;
  }
  else {
    uint64_t v5 = sub_100A7E334;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_100A7E334()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100A7E3A0()
{
  swift_release();
  if (qword_10166F9D8 != -1) {
    swift_once();
  }
  uint64_t v1 = *(void **)(v0 + 192);
  swift_beginAccess();
  uint64_t v2 = (void *)static OS_os_log.crlError;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117E810;
  swift_getErrorValue();
  id v4 = v2;
  uint64_t v5 = Error.localizedDescription.getter();
  uint64_t v7 = v6;
  *(void *)(inited + 56) = &type metadata for String;
  *(void *)(inited + 64) = sub_100528BE4();
  *(void *)(inited + 32) = v5;
  *(void *)(inited + 40) = v7;
  uint64_t v8 = static os_log_type_t.error.getter();
  sub_100BAC898((uint64_t)v4, (uint64_t)&_mh_execute_header, v8, (uint64_t)"Caught error trying to present view controller: %@", 50, 2, inited);

  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  swift_errorRelease();
  id v9 = *(uint64_t (**)(void))(v0 + 8);
  return v9();
}

uint64_t sub_100A7E55C()
{
  swift_release();
  if (qword_10166F9D8 != -1) {
    swift_once();
  }
  uint64_t v1 = *(void **)(v0 + 192);
  swift_beginAccess();
  uint64_t v2 = (void *)static OS_os_log.crlError;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117E810;
  swift_getErrorValue();
  id v4 = v2;
  uint64_t v5 = Error.localizedDescription.getter();
  uint64_t v7 = v6;
  *(void *)(inited + 56) = &type metadata for String;
  *(void *)(inited + 64) = sub_100528BE4();
  *(void *)(inited + 32) = v5;
  *(void *)(inited + 40) = v7;
  uint64_t v8 = static os_log_type_t.error.getter();
  sub_100BAC898((uint64_t)v4, (uint64_t)&_mh_execute_header, v8, (uint64_t)"Caught error trying to present view controller: %@", 50, 2, inited);

  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  swift_errorRelease();
  id v9 = *(uint64_t (**)(void))(v0 + 8);
  return v9();
}

uint64_t sub_100A7E710(void *a1)
{
  swift_getObjectType();
  if (swift_conformsToProtocol2()) {
    uint64_t v2 = (uint64_t)a1;
  }
  else {
    uint64_t v2 = 0;
  }
  if (!v2)
  {
    id v4 = [a1 childViewControllers];
    sub_10050BF48(0, (unint64_t *)&qword_1016745A0);
    unint64_t v5 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    if (v5 >> 62) {
      goto LABEL_22;
    }
    unint64_t v6 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v6)
    {
LABEL_16:
      swift_bridgeObjectRelease();
      return 0;
    }
    while (1)
    {
      while (__OFSUB__(v6--, 1))
      {
        __break(1u);
LABEL_20:
        __break(1u);
LABEL_21:
        __break(1u);
LABEL_22:
        swift_bridgeObjectRetain();
        unint64_t v6 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        if (!v6) {
          goto LABEL_16;
        }
      }
      if ((v5 & 0xC000000000000001) != 0)
      {
        id v8 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        goto LABEL_14;
      }
      if ((v6 & 0x8000000000000000) != 0) {
        goto LABEL_20;
      }
      if (v6 >= *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        goto LABEL_21;
      }
      id v8 = *(id *)(v5 + 32 + 8 * v6);
LABEL_14:
      id v9 = v8;
      uint64_t v2 = sub_100A7E710();

      if (v2)
      {
        swift_bridgeObjectRelease();
        return v2;
      }
      if (!v6) {
        goto LABEL_16;
      }
    }
  }
  id v3 = a1;
  return v2;
}

uint64_t sub_100A7E894()
{
  v1[8] = v0;
  type metadata accessor for MainActor();
  v1[9] = static MainActor.shared.getter();
  uint64_t v3 = dispatch thunk of Actor.unownedExecutor.getter();
  v1[10] = v3;
  v1[11] = v2;
  return _swift_task_switch(sub_100A7E92C, v3, v2);
}

uint64_t sub_100A7E92C()
{
  uint64_t v1 = v0[8];
  uint64_t v2 = OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate_acceptCloudKitShareAlertController;
  uint64_t v3 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate_acceptCloudKitShareAlertController);
  if (v3)
  {
    id v4 = v3;
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"presentAcceptCloudKitShareAlertController()", 43, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/App/CRLiOSSceneDelegate.swift", 87, 2, 713, (uint64_t)"expected nil value, but non-nil found", 37, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"presentAcceptCloudKitShareAlertController()", 43, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/App/CRLiOSSceneDelegate.swift", 87, 2, 713);
  }
  if (qword_10166F7F0 != -1) {
    swift_once();
  }
  swift_bridgeObjectRetain();
  NSString v5 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v6 = [self alertControllerWithTitle:v5 message:0 preferredStyle:1];
  v0[12] = v6;

  if (qword_10166F7F8 != -1) {
    swift_once();
  }
  uint64_t v7 = swift_allocObject();
  swift_unknownObjectWeakInit();
  swift_bridgeObjectRetain();
  swift_retain();
  NSString v8 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  v0[6] = sub_100A99010;
  v0[7] = v7;
  v0[2] = _NSConcreteStackBlock;
  v0[3] = *(void *)"";
  v0[4] = sub_10051CE64;
  v0[5] = &unk_101520460;
  id v9 = _Block_copy(v0 + 2);
  swift_release();
  id v10 = [self actionWithTitle:v8 style:1 handler:v9];
  v0[13] = v10;
  _Block_release(v9);
  swift_release();

  [v6 addAction:v10];
  uint64_t v11 = *(void **)(v1 + v2);
  *(void *)(v1 + v2) = v6;
  id v12 = v6;

  id v13 = (void *)swift_task_alloc();
  v0[14] = v13;
  *id v13 = v0;
  v13[1] = sub_100A7EC84;
  return sub_100A7D70C((uint64_t)v12);
}

uint64_t sub_100A7EC84()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 88);
  uint64_t v3 = *(void *)(v1 + 80);
  return _swift_task_switch(sub_100A7EDA4, v3, v2);
}

uint64_t sub_100A7EDA4()
{
  uint64_t v2 = (void *)v0[12];
  uint64_t v1 = (void *)v0[13];
  swift_release();
  sub_100F2BCC8(v2);

  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

void sub_100A7EE18()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    uint64_t v2 = *(void *)(Strong + OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate_acceptCloudKitShareAttempt);
    swift_retain();

    if (v2)
    {
      uint64_t v4 = 0;
      memset(v3, 0, sizeof(v3));
      sub_100A6BA08(v3);
      swift_release();
      sub_100A6CB24((uint64_t)v3);
    }
  }
}

uint64_t sub_100A7EEA4()
{
  v1[18] = v0;
  type metadata accessor for MainActor();
  v1[19] = static MainActor.shared.getter();
  uint64_t v3 = dispatch thunk of Actor.unownedExecutor.getter();
  v1[20] = v3;
  v1[21] = v2;
  return _swift_task_switch(sub_100A7EF3C, v3, v2);
}

uint64_t sub_100A7EF3C()
{
  uint64_t v1 = v0[18];
  uint64_t v2 = OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate_acceptCloudKitShareAlertController;
  v0[22] = OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate_acceptCloudKitShareAlertController;
  uint64_t v3 = *(void **)(v1 + v2);
  if (v3
    || (sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"dismissAcceptCloudKitShareAlertController()", 43, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/App/CRLiOSSceneDelegate.swift", 87, 2, 729, (uint64_t)"invalid nil value found", 23, 2u, (uint64_t)_swiftEmptyArrayStorage), sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"dismissAcceptCloudKitShareAlertController()", 43, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/App/CRLiOSSceneDelegate.swift", 87,
          2,
          729),
        (uint64_t v3 = *(void **)(v1 + v2)) != 0))
  {
    v0[23] = v3;
    v3;
    uint64_t v4 = (void *)swift_task_alloc();
    v0[24] = v4;
    *uint64_t v4 = v0;
    v4[1] = sub_100A7F104;
    return sub_100B758E8(1);
  }
  else
  {
    swift_release();
    uint64_t v6 = v0[22];
    uint64_t v7 = v0[18];
    NSString v8 = *(void **)(v7 + v6);
    *(void *)(v7 + v6) = 0;

    id v9 = (uint64_t (*)(void))v0[1];
    return v9();
  }
}

uint64_t sub_100A7F104()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 200) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 160);
    uint64_t v4 = *(void *)(v2 + 168);
    uint64_t v5 = sub_100A7F220;
  }
  else
  {

    uint64_t v3 = *(void *)(v2 + 160);
    uint64_t v4 = *(void *)(v2 + 168);
    uint64_t v5 = sub_100A9A6A0;
  }
  return _swift_task_switch(v5, v3, v4);
}

uint64_t sub_100A7F220()
{
  uint64_t v1 = *(void **)(v0 + 184);
  swift_release();

  if (qword_10166F9D8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v2 = (void *)static OS_os_log.crlError;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117E810;
  swift_getErrorValue();
  id v4 = v2;
  uint64_t v5 = Error.localizedDescription.getter();
  uint64_t v7 = v6;
  *(void *)(inited + 56) = &type metadata for String;
  *(void *)(inited + 64) = sub_100528BE4();
  *(void *)(inited + 32) = v5;
  *(void *)(inited + 40) = v7;
  uint64_t v8 = static os_log_type_t.error.getter();
  sub_100BAC898((uint64_t)v4, (uint64_t)&_mh_execute_header, v8, (uint64_t)"Caught error trying to dismiss acceptCloudKitShareAlertController: %@", 69, 2, inited);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  swift_errorRelease();
  id v9 = *(uint64_t (**)(void))(v0 + 8);
  return v9();
}

void sub_100A7F3D4()
{
  uint64_t v0 = sub_1005057FC(&qword_101672BB0);
  __chkstk_darwin(v0 - 8, v1);
  uint64_t v3 = (char *)v29 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10050BF48(0, (unint64_t *)&qword_10167B170);
  id v4 = (void *)static OS_os_log.default.getter();
  uint64_t v5 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v4, (uint64_t)&_mh_execute_header, v5, (uint64_t)"Showing alert: Maximum Boards Reached: iCloud limits the number of boards you can create. Permanently delete one or more boards, then try again.", 144, 2, (uint64_t)_swiftEmptyArrayStorage);

  uint64_t v6 = self;
  id v7 = [v6 mainBundle];
  NSString v8 = String._bridgeToObjectiveC()();
  NSString v9 = String._bridgeToObjectiveC()();
  id v10 = [v7 localizedStringForKey:v8 value:v9 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  id v11 = [v6 mainBundle];
  NSString v12 = String._bridgeToObjectiveC()();
  NSString v13 = String._bridgeToObjectiveC()();
  id v14 = [v11 localizedStringForKey:v12 value:v13 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  id v15 = [v6 mainBundle];
  NSString v16 = String._bridgeToObjectiveC()();
  NSString v17 = String._bridgeToObjectiveC()();
  id v18 = [v15 localizedStringForKey:v16 value:v17 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v19 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  NSString v20 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v21 = [self alertControllerWithTitle:v19 message:v20 preferredStyle:1];

  NSString v22 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v23 = [self actionWithTitle:v22 style:0 handler:0];

  [v21 addAction:v23];
  uint64_t v24 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v3, 1, 1, v24);
  type metadata accessor for MainActor();
  id v25 = v29[1];
  id v26 = v21;
  uint64_t v27 = static MainActor.shared.getter();
  uint64_t v28 = (void *)swift_allocObject();
  v28[2] = v27;
  _OWORD v28[3] = &protocol witness table for MainActor;
  v28[4] = v25;
  v28[5] = v26;
  sub_1005912D0((uint64_t)v3, (uint64_t)&unk_10168E220, (uint64_t)v28);

  swift_release();
}

uint64_t sub_100A7F804(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[2] = a5;
  v5[3] = type metadata accessor for MainActor();
  v5[4] = static MainActor.shared.getter();
  id v7 = (void *)swift_task_alloc();
  v5[5] = v7;
  *id v7 = v5;
  v7[1] = sub_100A7F8C4;
  return sub_100A7D70C(a5);
}

uint64_t sub_100A7F8C4()
{
  swift_task_dealloc();
  uint64_t v1 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_100A7FA00, v1, v0);
}

uint64_t sub_100A7FA00()
{
  uint64_t v1 = *(void **)(v0 + 16);
  swift_release();
  sub_100F2BCC8(v1);
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_100A7FA6C()
{
  v1[8] = v0;
  type metadata accessor for MainActor();
  v1[9] = static MainActor.shared.getter();
  uint64_t v3 = dispatch thunk of Actor.unownedExecutor.getter();
  v1[10] = v3;
  v1[11] = v2;
  return _swift_task_switch(sub_100A7FB04, v3, v2);
}

uint64_t sub_100A7FB04()
{
  if (qword_10166F0C8 != -1) {
    swift_once();
  }
  swift_bridgeObjectRetain();
  NSString v1 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v2 = [self alertControllerWithTitle:v1 message:0 preferredStyle:1];
  v0[12] = v2;

  if (qword_10166F0D0 != -1) {
    swift_once();
  }
  uint64_t v3 = v0[8];
  uint64_t v4 = swift_allocObject();
  swift_unknownObjectWeakInit();
  swift_bridgeObjectRetain();
  swift_retain();
  NSString v5 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  v0[6] = sub_100A98EFC;
  v0[7] = v4;
  v0[2] = _NSConcreteStackBlock;
  v0[3] = *(void *)"";
  v0[4] = sub_10051CE64;
  v0[5] = &unk_101520410;
  uint64_t v6 = _Block_copy(v0 + 2);
  swift_release();
  id v7 = [self actionWithTitle:v5 style:1 handler:v6];
  v0[13] = v7;
  _Block_release(v6);
  swift_release();

  [v2 addAction:v7];
  uint64_t v8 = OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate_downloadSharedCopyAlertController;
  v0[14] = OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate_downloadSharedCopyAlertController;
  uint64_t v9 = *(void **)(v3 + v8);
  *(void *)(v3 + v8) = v2;
  id v10 = v2;

  id v11 = (void *)swift_task_alloc();
  v0[15] = v11;
  *id v11 = v0;
  v11[1] = sub_100A7FDB0;
  return static Task<>.sleep(nanoseconds:)(1000000000);
}

uint64_t sub_100A7FDB0()
{
  uint64_t v2 = *v1;
  swift_task_dealloc();
  if (v0)
  {
    swift_errorRelease();
    uint64_t v3 = *(void *)(v2 + 80);
    uint64_t v4 = *(void *)(v2 + 88);
    NSString v5 = sub_100A9A674;
  }
  else
  {
    uint64_t v3 = *(void *)(v2 + 80);
    uint64_t v4 = *(void *)(v2 + 88);
    NSString v5 = sub_100A7FED4;
  }
  return _swift_task_switch(v5, v3, v4);
}

uint64_t sub_100A7FED4()
{
  NSString v1 = *(void **)(v0[8] + v0[14]);
  v0[16] = v1;
  if (!v1)
  {
    id v8 = (id)v0[12];
    uint64_t v9 = (void *)v0[13];
    swift_release();
    goto LABEL_12;
  }
  id v2 = v1;
  id v3 = sub_100A70A50();
  id v4 = [v3 presentedViewController];

  if (!v4) {
    goto LABEL_7;
  }
  self;
  NSString v5 = (void *)swift_dynamicCastObjCClass();
  if (!v5) {
    goto LABEL_6;
  }
  id v6 = [v5 topViewController];

  if (v6)
  {
    type metadata accessor for CRLiOSBoardViewController();
    uint64_t v7 = (void *)swift_dynamicCastClass();
    id v4 = v6;
    if (v7) {
      goto LABEL_8;
    }
LABEL_6:
  }
LABEL_7:
  uint64_t v7 = sub_100A70A50();
LABEL_8:
  id v8 = [v7 presentedViewController];

  if (v8)
  {
    self;
    if (swift_dynamicCastObjCClass())
    {
      uint64_t v9 = (void *)v0[12];
      id v10 = (void *)v0[13];

      swift_release();
LABEL_12:

      id v11 = (uint64_t (*)(void))v0[1];
      return v11();
    }
  }
  uint64_t v13 = (void *)swift_task_alloc();
  v0[17] = v13;
  *uint64_t v13 = v0;
  v13[1] = sub_100A800D0;
  return sub_100A7D70C((uint64_t)v2);
}

uint64_t sub_100A800D0()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 88);
  uint64_t v3 = *(void *)(v1 + 80);
  return _swift_task_switch(sub_100A801F0, v3, v2);
}

uint64_t sub_100A801F0()
{
  uint64_t v1 = (void *)v0[16];
  uint64_t v2 = (void *)v0[12];
  uint64_t v3 = (void *)v0[13];
  swift_release();
  sub_100F2BCC8(v2);

  id v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

void sub_100A80274()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    uint64_t v2 = *(void *)(Strong + OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate_downloadSharedCopyAttempt);
    swift_retain();

    if (v2)
    {
      sub_10079A114();
      swift_release();
    }
  }
}

uint64_t sub_100A802E8()
{
  v1[18] = v0;
  type metadata accessor for MainActor();
  v1[19] = static MainActor.shared.getter();
  uint64_t v3 = dispatch thunk of Actor.unownedExecutor.getter();
  v1[20] = v3;
  v1[21] = v2;
  return _swift_task_switch(sub_100A80380, v3, v2);
}

uint64_t sub_100A80380()
{
  uint64_t v1 = v0[18];
  uint64_t v2 = OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate_downloadSharedCopyAlertController;
  v0[22] = OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate_downloadSharedCopyAlertController;
  uint64_t v3 = *(void **)(v1 + v2);
  if (v3
    || (sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"dismissDownloadSharedCopyAlertController()", 42, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/App/CRLiOSSceneDelegate.swift", 87, 2, 782, (uint64_t)"invalid nil value found", 23, 2u, (uint64_t)_swiftEmptyArrayStorage), sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"dismissDownloadSharedCopyAlertController()", 42, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/App/CRLiOSSceneDelegate.swift", 87,
          2,
          782),
        (uint64_t v3 = *(void **)(v1 + v2)) != 0))
  {
    v0[23] = v3;
    v3;
    id v4 = (void *)swift_task_alloc();
    v0[24] = v4;
    *id v4 = v0;
    v4[1] = sub_100A80548;
    return sub_100B758E8(1);
  }
  else
  {
    swift_release();
    uint64_t v6 = v0[22];
    uint64_t v7 = v0[18];
    id v8 = *(void **)(v7 + v6);
    *(void *)(v7 + v6) = 0;

    uint64_t v9 = (uint64_t (*)(void))v0[1];
    return v9();
  }
}

uint64_t sub_100A80548()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 200) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 160);
    uint64_t v4 = *(void *)(v2 + 168);
    uint64_t v5 = sub_100A806D8;
  }
  else
  {

    uint64_t v3 = *(void *)(v2 + 160);
    uint64_t v4 = *(void *)(v2 + 168);
    uint64_t v5 = sub_100A80664;
  }
  return _swift_task_switch(v5, v3, v4);
}

uint64_t sub_100A80664()
{
  swift_release();
  uint64_t v1 = v0[22];
  uint64_t v2 = v0[18];
  uint64_t v3 = *(void **)(v2 + v1);
  *(void *)(v2 + v1) = 0;

  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_100A806D8()
{
  uint64_t v1 = *(void **)(v0 + 184);
  swift_release();

  if (qword_10166F9D8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v2 = (void *)static OS_os_log.crlError;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117E810;
  swift_getErrorValue();
  id v4 = v2;
  uint64_t v5 = Error.localizedDescription.getter();
  uint64_t v7 = v6;
  *(void *)(inited + 56) = &type metadata for String;
  *(void *)(inited + 64) = sub_100528BE4();
  *(void *)(inited + 32) = v5;
  *(void *)(inited + 40) = v7;
  uint64_t v8 = static os_log_type_t.error.getter();
  sub_100BAC898((uint64_t)v4, (uint64_t)&_mh_execute_header, v8, (uint64_t)"Caught error trying to dismiss downloadSharedCopyAlertController: %@", 68, 2, inited);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  swift_errorRelease();
  uint64_t v9 = *(uint64_t (**)(void))(v0 + 8);
  return v9();
}

uint64_t sub_100A8088C(uint64_t a1, uint64_t a2)
{
  v3[16] = a2;
  v3[17] = v2;
  v3[15] = a1;
  type metadata accessor for MainActor();
  v3[18] = static MainActor.shared.getter();
  uint64_t v5 = dispatch thunk of Actor.unownedExecutor.getter();
  v3[19] = v5;
  v3[20] = v4;
  return _swift_task_switch(sub_100A80928, v5, v4);
}

uint64_t sub_100A80928()
{
  char v1 = sub_100CEB290();
  unsigned __int8 v2 = [self crl_iPadDevice];
  if (qword_10166F0D8 != -1) {
    swift_once();
  }
  aBlock = v0 + 2;
  if (v1)
  {
    if (v2)
    {
      uint64_t v3 = qword_10166F0F0;
      swift_bridgeObjectRetain();
      if (v3 == -1) {
        goto LABEL_13;
      }
      goto LABEL_42;
    }
    uint64_t v5 = qword_10166F0E0;
    swift_bridgeObjectRetain();
    if (v5 != -1) {
      goto LABEL_42;
    }
  }
  else
  {
    if ((v2 & 1) == 0)
    {
      uint64_t v6 = qword_10166F0E8;
      swift_bridgeObjectRetain();
      if (v6 == -1) {
        goto LABEL_13;
      }
      goto LABEL_42;
    }
    uint64_t v4 = qword_10166F0F8;
    swift_bridgeObjectRetain();
    if (v4 != -1) {
LABEL_42:
    }
      swift_once();
  }
LABEL_13:
  unint64_t v7 = (unint64_t)(v0 + 14);
  swift_bridgeObjectRetain();
  NSString v8 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  NSString v9 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v10 = [self alertControllerWithTitle:v8 message:v9 preferredStyle:1];
  v0[21] = v10;

  v0[14] = _swiftEmptyArrayStorage;
  uint64_t v11 = dword_101178000;
  if ((v1 & 1) == 0) {
    goto LABEL_16;
  }
  id v12 = [self mainBundle:aBlock];
  NSString v13 = String._bridgeToObjectiveC()();
  NSString v14 = String._bridgeToObjectiveC()();
  id v15 = [v12 localizedStringForKey:v13 value:v14 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v16 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  v0[12] = sub_100A9A6D8;
  v0[13] = 0;
  v0[8] = _NSConcreteStackBlock;
  NSString v17 = dword_101178000;
  v0[9] = *(void *)"";
  v0[10] = sub_10051CE64;
  v0[11] = &unk_1015203E8;
  id v18 = _Block_copy(v0 + 8);
  swift_release();
  id v19 = [self actionWithTitle:v16 style:0 handler:v18];
  _Block_release(v18);

  unint64_t v20 = (unint64_t)v19;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)((v0[14] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v0[14] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    goto LABEL_41;
  }
  while (1)
  {
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();

    uint64_t v11 = v17;
LABEL_16:
    uint64_t v22 = v0[15];
    uint64_t v21 = v0[16];
    id v23 = [self mainBundle];
    NSString v24 = String._bridgeToObjectiveC()();
    NSString v25 = String._bridgeToObjectiveC()();
    NSString v17 = (unsigned int *)[v23 localizedStringForKey:v24 value:v25 table:0];

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v26 = swift_allocObject();
    *(void *)(v26 + 16) = v22;
    *(void *)(v26 + 24) = v21;
    swift_retain();
    NSString v27 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    v0[6] = sub_1006DAE04;
    v0[7] = v26;
    v0[2] = _NSConcreteStackBlock;
    v0[3] = *((void *)v11 + 468);
    v0[4] = sub_10051CE64;
    v0[5] = &unk_1015203C0;
    uint64_t v28 = _Block_copy(aBlock);
    swift_release();
    id v29 = [self actionWithTitle:v27 style:0 handler:v28];
    v0[22] = v29;
    _Block_release(v28);

    id v30 = v29;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    unint64_t v20 = *(void *)((v0[14] & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v20 >= *(void *)((v0[14] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
    unint64_t v7 = *(void *)v7;
    if (v7 >> 62)
    {
      swift_bridgeObjectRetain_n();
      uint64_t v31 = _CocoaArrayWrapper.endIndex.getter();
      if (!v31) {
        goto LABEL_27;
      }
    }
    else
    {
      uint64_t v31 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain_n();
      if (!v31) {
        goto LABEL_27;
      }
    }
    if (v31 < 1) {
      break;
    }
    unint64_t v20 = 0;
    NSString v17 = (unsigned int *)&selRef_PNGRepresentation;
    do
    {
      if ((v7 & 0xC000000000000001) != 0) {
        id v32 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v32 = *(id *)(v7 + 8 * v20 + 32);
      }
      id v33 = v32;
      ++v20;
      [v10 addAction:v32 aBlock];
    }
    while (v31 != v20);
LABEL_27:
    swift_bridgeObjectRelease_n();
    if (v7 >> 62)
    {
      swift_bridgeObjectRetain();
      id v34 = (void *)_CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (!v34) {
        goto LABEL_33;
      }
    }
    else
    {
      id v34 = *(void **)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (!v34) {
        goto LABEL_33;
      }
    }
    if ((v7 & 0xC000000000000001) != 0) {
      goto LABEL_39;
    }
    if (*(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      id v35 = *(id *)(v7 + 32);
      goto LABEL_32;
    }
    __break(1u);
LABEL_41:
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  __break(1u);
LABEL_39:
  id v35 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_32:
  id v34 = v35;
LABEL_33:
  swift_bridgeObjectRelease();
  [v10 setPreferredAction:v34];

  uint64_t v36 = (void *)swift_task_alloc();
  v0[23] = v36;
  void *v36 = v0;
  v36[1] = sub_100A810B4;
  return sub_100A7D70C((uint64_t)v10);
}

uint64_t sub_100A810B4()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 160);
  uint64_t v3 = *(void *)(v1 + 152);
  return _swift_task_switch(sub_100A811D4, v3, v2);
}

uint64_t sub_100A811D4()
{
  uint64_t v2 = (void *)v0[21];
  uint64_t v1 = (void *)v0[22];
  swift_release();
  sub_100F2BCC8(v2);

  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

void sub_100A81248(char *a1, void *a2)
{
  uint64_t v4 = *(void **)&a1[OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate_window];
  if (!v4
    || (id v5 = [v4 rootViewController]) == 0
    || (v6 = v5, id v7 = objc_msgSend(v5, "crl_windowWrapper"), v6, !v7)
    || (id v8 = [v7 newWrapperBeginningIgnoringUserInteractionSafely], v7, !v8))
  {
    if (qword_10166F9D8 != -1) {
      swift_once();
    }
    swift_beginAccess();
    id v9 = (id)static OS_os_log.crlError;
    uint64_t v10 = static os_log_type_t.error.getter();
    sub_100BAC898((uint64_t)v9, (uint64_t)&_mh_execute_header, v10, (uint64_t)"Could not create token for ignoring user interaction; view hierarchy may not be set up yet",
      90,
      2,
      (uint64_t)_swiftEmptyArrayStorage);

    id v8 = 0;
  }
  uint64_t v11 = (void *)swift_allocObject();
  v11[2] = a1;
  v11[3] = a2;
  v11[4] = v8;
  id v12 = v8;
  NSString v13 = a1;
  id v14 = a2;
  sub_100A6F12C((uint64_t)sub_100A9A6CC, (uint64_t)v11);
  swift_release();
}

uint64_t sub_100A813E0(void *a1, void *a2, void *a3)
{
  uint64_t v6 = sub_1005057FC(&qword_101672BB0);
  __chkstk_darwin(v6 - 8, v7);
  id v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v9, 1, 1, v10);
  type metadata accessor for MainActor();
  id v11 = a3;
  id v12 = a1;
  id v13 = a2;
  uint64_t v14 = static MainActor.shared.getter();
  id v15 = (void *)swift_allocObject();
  v15[2] = v14;
  v15[3] = &protocol witness table for MainActor;
  v15[4] = v12;
  v15[5] = v13;
  v15[6] = a3;
  return sub_1005912D0((uint64_t)v9, (uint64_t)&unk_10168E370, (uint64_t)v15);
}

uint64_t sub_100A81518(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[2] = a6;
  v6[3] = type metadata accessor for MainActor();
  v6[4] = static MainActor.shared.getter();
  uint64_t v8 = (void *)swift_task_alloc();
  v6[5] = v8;
  *uint64_t v8 = v6;
  v8[1] = sub_100A815D8;
  return sub_100A7951C(a5);
}

uint64_t sub_100A815D8()
{
  swift_task_dealloc();
  uint64_t v1 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_100A81714, v1, v0);
}

uint64_t sub_100A81714()
{
  uint64_t v1 = *(void **)(v0 + 16);
  swift_release();
  [v1 endIgnoringUserInteractionSafely];
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_100A8188C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, char a7)
{
  *(unsigned char *)(v7 + 241) = a7;
  *(unsigned char *)(v7 + 240) = a6;
  *(void *)(v7 + 168) = a4;
  *(void *)(v7 + 176) = a5;
  type metadata accessor for MainActor();
  *(void *)(v7 + 184) = static MainActor.shared.getter();
  uint64_t v9 = dispatch thunk of Actor.unownedExecutor.getter();
  *(void *)(v7 + 192) = v9;
  *(void *)(v7 + 200) = v8;
  return _swift_task_switch(sub_100A8192C, v9, v8);
}

uint64_t sub_100A8192C()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  *(void *)(v0 + 208) = Strong;
  if (Strong)
  {
    uint64_t v2 = (void *)swift_task_alloc();
    *(void *)(v0 + 216) = v2;
    *uint64_t v2 = v0;
    v2[1] = sub_100A81C40;
    char v3 = *(unsigned char *)(v0 + 241);
    char v4 = *(unsigned char *)(v0 + 240);
    uint64_t v5 = *(void *)(v0 + 176);
    return sub_100A7B5C4(v5, v4, v3, 0);
  }
  else
  {
    swift_release();
    _StringGuts.grow(_:)(84);
    v7._object = (void *)0x800000010126CCF0;
    v7._countAndFlagsBits = 0xD000000000000026;
    String.append(_:)(v7);
    v8._countAndFlagsBits = sub_100DD71D4();
    String.append(_:)(v8);
    swift_bridgeObjectRelease();
    v9._countAndFlagsBits = 0xD00000000000002CLL;
    v9._object = (void *)0x800000010126CD20;
    String.append(_:)(v9);
    sub_100A98254();
    swift_allocError();
    *(void *)uint64_t v10 = 0;
    *(void *)(v10 + 8) = 0xE000000000000000;
    *(void *)(v10 + 16) = 0;
    *(void *)(v10 + 24) = 0;
    *(unsigned char *)(v10 + 32) = 2;
    swift_willThrow();
    if (qword_10166F9D8 != -1) {
      swift_once();
    }
    swift_beginAccess();
    uint64_t v11 = (void *)static OS_os_log.crlError;
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_10117E810;
    swift_getErrorValue();
    id v13 = v11;
    uint64_t v14 = Error.localizedDescription.getter();
    uint64_t v16 = v15;
    *(void *)(inited + 56) = &type metadata for String;
    *(void *)(inited + 64) = sub_100528BE4();
    *(void *)(inited + 32) = v14;
    *(void *)(inited + 40) = v16;
    uint64_t v17 = static os_log_type_t.debug.getter();
    sub_100BAC898((uint64_t)v13, (uint64_t)&_mh_execute_header, v17, (uint64_t)"Caught error trying to show view controller for PPT: %@", 55, 2, inited);
    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();

    swift_errorRelease();
    id v18 = *(uint64_t (**)(void))(v0 + 8);
    return v18();
  }
}

uint64_t sub_100A81C40(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 224) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = *(void *)(v4 + 192);
    uint64_t v6 = *(void *)(v4 + 200);
    Swift::String v7 = sub_100A81DD8;
  }
  else
  {

    *(void *)(v4 + 232) = a1;
    uint64_t v5 = *(void *)(v4 + 192);
    uint64_t v6 = *(void *)(v4 + 200);
    Swift::String v7 = sub_100A81D70;
  }
  return _swift_task_switch(v7, v5, v6);
}

uint64_t sub_100A81D70()
{
  uint64_t v1 = *(void **)(v0 + 232);
  swift_release();

  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_100A81DD8()
{
  uint64_t v1 = *(void **)(v0 + 208);
  swift_release();

  if (qword_10166F9D8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v2 = (void *)static OS_os_log.crlError;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117E810;
  swift_getErrorValue();
  id v4 = v2;
  uint64_t v5 = Error.localizedDescription.getter();
  uint64_t v7 = v6;
  *(void *)(inited + 56) = &type metadata for String;
  *(void *)(inited + 64) = sub_100528BE4();
  *(void *)(inited + 32) = v5;
  *(void *)(inited + 40) = v7;
  uint64_t v8 = static os_log_type_t.debug.getter();
  sub_100BAC898((uint64_t)v4, (uint64_t)&_mh_execute_header, v8, (uint64_t)"Caught error trying to show view controller for PPT: %@", 55, 2, inited);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  swift_errorRelease();
  uint64_t v9 = *(uint64_t (**)(void))(v0 + 8);
  return v9();
}

id sub_100A81F8C()
{
  *(void *)&v0[OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate_window] = 0;
  uint64_t v1 = &v0[OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate_CRLUpdateInfoKey];
  strcpy(&v0[OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate_CRLUpdateInfoKey], "iOSUpdateInfo");
  *((_WORD *)v1 + 7) = -4864;
  uint64_t v2 = &v0[OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate_CRLUnsupportedDevicesKey];
  *(void *)uint64_t v2 = 0xD000000000000012;
  *((void *)v2 + 1) = 0x800000010126E3B0;
  v0[OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate_boardOpenInFlight] = 0;
  uint64_t v3 = OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate_navigationStack;
  type metadata accessor for CRLNavigationStack();
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = _swiftEmptyArrayStorage;
  swift_beginAccess();
  *(void *)(v4 + 16) = _swiftEmptyArrayStorage;
  uint64_t v5 = v0;
  swift_bridgeObjectRelease();
  *(void *)&v0[v3] = v4;
  *(void *)&v5[OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate____lazy_storage___boardLibrary] = 1;
  *(void *)&v5[OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate____lazy_storage___boardPreviewImageCache] = 1;
  *(void *)&v5[OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate____lazy_storage___splitViewController] = 0;
  *(void *)&v5[OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate____lazy_storage___sidebarViewController] = 0;
  uint64_t v6 = OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate_boardViewControllerTransitioningDelegate;
  *(void *)&v5[v6] = [objc_allocWithZone((Class)type metadata accessor for CRLiOSBoardViewControllerTransitioningDelegate()) init];
  swift_unknownObjectWeakInit();
  uint64_t v7 = &v5[OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate_welcomeControllerDidDismissContinuation];
  uint64_t v8 = sub_1005057FC(&qword_101682E08);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v7, 1, 1, v8);
  uint64_t v9 = OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate_handleUserActivityTaskQueue;
  sub_1005057FC(&qword_10168E360);
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = _swiftEmptyArrayStorage;
  *(void *)&v5[v9] = v10;
  *(void *)&v5[OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate____lazy_storage___stateRestorationUserActivity] = 0;
  *(void *)&v5[OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate____lazy_storage___handoffUserActivity] = 0;
  *(void *)&v5[OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate_downloadSharedCopyAttempt] = 0;
  *(void *)&v5[OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate_acceptCloudKitShareAttempt] = 0;
  *(void *)&v5[OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate_acceptCloudKitShareAlertController] = 0;
  *(void *)&v5[OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate_downloadSharedCopyAlertController] = 0;

  v12.receiver = v5;
  v12.super_class = (Class)type metadata accessor for CRLiOSSceneDelegate();
  return [super init];
}

id sub_100A82204()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLiOSSceneDelegate();
  return [super dealloc];
}

uint64_t sub_100A82398()
{
  return type metadata accessor for CRLiOSSceneDelegate();
}

uint64_t type metadata accessor for CRLiOSSceneDelegate()
{
  uint64_t result = qword_10168E000;
  if (!qword_10168E000) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_100A823EC()
{
  sub_100A824E4();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_100A824E4()
{
  if (!qword_10168E050)
  {
    sub_100522D34(&qword_101682E08);
    unint64_t v0 = type metadata accessor for Optional();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_10168E050);
    }
  }
}

uint64_t sub_100A82540(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[21] = a4;
  v5[22] = a5;
  type metadata accessor for MainActor();
  v5[23] = static MainActor.shared.getter();
  uint64_t v7 = dispatch thunk of Actor.unownedExecutor.getter();
  v5[24] = v7;
  v5[25] = v6;
  return _swift_task_switch(sub_100A825D8, v7, v6);
}

uint64_t sub_100A825D8()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  v0[26] = Strong;
  if (Strong)
  {
    objc_super v2 = (void *)swift_task_alloc();
    v0[27] = v2;
    *objc_super v2 = v0;
    v2[1] = sub_100A826E0;
    uint64_t v3 = v0[22];
    return sub_100A7B5C4(v3, 0, 0, 0);
  }
  else
  {
    swift_release();
    uint64_t v5 = (uint64_t (*)(void))v0[1];
    return v5();
  }
}

uint64_t sub_100A826E0(void *a1)
{
  uint64_t v4 = *(void **)v2;
  *(void *)(*(void *)v2 + 224) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = v4[24];
    uint64_t v6 = v4[25];
    uint64_t v7 = sub_100A8286C;
  }
  else
  {
    uint64_t v8 = (void *)v4[26];

    uint64_t v5 = v4[24];
    uint64_t v6 = v4[25];
    uint64_t v7 = sub_100A8280C;
  }
  return _swift_task_switch(v7, v5, v6);
}

uint64_t sub_100A8280C()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100A8286C()
{
  uint64_t v1 = *(void **)(v0 + 208);
  swift_release();

  if (qword_10166F9D8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v2 = (void *)static OS_os_log.crlError;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117E810;
  swift_getErrorValue();
  id v4 = v2;
  uint64_t v5 = Error.localizedDescription.getter();
  uint64_t v7 = v6;
  *(void *)(inited + 56) = &type metadata for String;
  *(void *)(inited + 64) = sub_100528BE4();
  *(void *)(inited + 32) = v5;
  *(void *)(inited + 40) = v7;
  uint64_t v8 = static os_log_type_t.error.getter();
  sub_100BAC898((uint64_t)v4, (uint64_t)&_mh_execute_header, v8, (uint64_t)"Caught error trying to show view controller from sidebar: %@", 60, 2, inited);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  swift_errorRelease();
  uint64_t v9 = *(uint64_t (**)(void))(v0 + 8);
  return v9();
}

uint64_t sub_100A82A20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[2] = a4;
  v5[3] = a5;
  type metadata accessor for CRLBoardLibraryViewModel.Folder(0);
  v5[4] = swift_task_alloc();
  type metadata accessor for MainActor();
  v5[5] = static MainActor.shared.getter();
  uint64_t v7 = dispatch thunk of Actor.unownedExecutor.getter();
  v5[6] = v7;
  v5[7] = v6;
  return _swift_task_switch(sub_100A82AE4, v7, v6);
}

uint64_t sub_100A82AE4()
{
  uint64_t v1 = v0[4];
  uint64_t v2 = sub_1005057FC(&qword_101670F30);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(v1, 1, 5, v2);
  id v3 = [self mainBundle];
  NSString v4 = String._bridgeToObjectiveC()();
  NSString v5 = String._bridgeToObjectiveC()();
  id v6 = [v3 localizedStringForKey:v4 value:v5 table:0];

  uint64_t v7 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v9 = v8;

  v0[8] = v9;
  uint64_t v10 = (void *)swift_task_alloc();
  v0[9] = v10;
  void *v10 = v0;
  v10[1] = sub_100A82C80;
  uint64_t v11 = v0[4];
  return sub_100A72B60(v11, v7, v9, 1);
}

uint64_t sub_100A82C80(void *a1)
{
  uint64_t v3 = *v1;
  uint64_t v4 = *(void *)(*v1 + 32);
  swift_task_dealloc();
  swift_bridgeObjectRelease();

  sub_100A98CC0(v4, type metadata accessor for CRLBoardLibraryViewModel.Folder);
  uint64_t v5 = *(void *)(v3 + 56);
  uint64_t v6 = *(void *)(v3 + 48);
  return _swift_task_switch(sub_100A9A658, v6, v5);
}

uint64_t sub_100A82E04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[23] = a4;
  v6[24] = a6;
  v6[25] = type metadata accessor for MainActor();
  v6[26] = static MainActor.shared.getter();
  uint64_t v8 = (void *)swift_task_alloc();
  v6[27] = v8;
  *uint64_t v8 = v6;
  v8[1] = sub_100A82EC4;
  return sub_100A833A8(a5);
}

uint64_t sub_100A82EC4()
{
  *(void *)(*(void *)v1 + 224) = v0;
  swift_task_dealloc();
  uint64_t v3 = dispatch thunk of Actor.unownedExecutor.getter();
  if (v0) {
    uint64_t v4 = sub_100A8313C;
  }
  else {
    uint64_t v4 = sub_100A83020;
  }
  return _swift_task_switch(v4, v3, v2);
}

uint64_t sub_100A83020()
{
  swift_release();
  [*(id *)(v0 + 192) endIgnoringUserInteractionSafely];
  *(void *)(v0 + 112) = &type metadata for CRLFeatureFlags;
  unint64_t v1 = sub_1005396A8();
  *(unsigned char *)(v0 + 88) = 14;
  *(void *)(v0 + 120) = v1;
  char v2 = isFeatureEnabled(_:)();
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v0 + 88);
  if (v2)
  {
    id v3 = [self defaultCenter];
    if (qword_10166F820 != -1) {
      swift_once();
    }
    [v3 postNotificationName:qword_10171B710 object:*(void *)(v0 + 184)];
  }
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_100A8313C()
{
  swift_release();
  if (qword_10166F9D8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  unint64_t v1 = (void *)static OS_os_log.crlError;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117E810;
  swift_getErrorValue();
  id v3 = v1;
  uint64_t v4 = Error.localizedDescription.getter();
  uint64_t v6 = v5;
  *(void *)(inited + 56) = &type metadata for String;
  *(void *)(inited + 64) = sub_100528BE4();
  *(void *)(inited + 32) = v4;
  *(void *)(inited + 40) = v6;
  uint64_t v7 = static os_log_type_t.error.getter();
  sub_100BAC898((uint64_t)v3, (uint64_t)&_mh_execute_header, v7, (uint64_t)"Caught error trying to close board view controller: %@", 54, 2, inited);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  swift_errorRelease();
  [*(id *)(v0 + 192) endIgnoringUserInteractionSafely];
  *(void *)(v0 + 112) = &type metadata for CRLFeatureFlags;
  *(void *)(v0 + 120) = sub_1005396A8();
  *(unsigned char *)(v0 + 88) = 14;
  LOBYTE(v4) = isFeatureEnabled(_:)();
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v0 + 88);
  if (v4)
  {
    id v8 = [self defaultCenter];
    if (qword_10166F820 != -1) {
      swift_once();
    }
    [v8 postNotificationName:qword_10171B710 object:*(void *)(v0 + 184)];
  }
  uint64_t v9 = *(uint64_t (**)(void))(v0 + 8);
  return v9();
}

uint64_t sub_100A833A8(uint64_t a1)
{
  v2[17] = a1;
  v2[18] = v1;
  type metadata accessor for CRLBoardCRDTData(0);
  v2[19] = swift_task_alloc();
  uint64_t v3 = type metadata accessor for UUID();
  v2[20] = v3;
  v2[21] = *(void *)(v3 - 8);
  v2[22] = swift_task_alloc();
  type metadata accessor for CRLBoardIdentifier(0);
  v2[23] = swift_task_alloc();
  type metadata accessor for MainActor();
  v2[24] = static MainActor.shared.getter();
  uint64_t v5 = dispatch thunk of Actor.unownedExecutor.getter();
  v2[25] = v5;
  v2[26] = v4;
  return _swift_task_switch(sub_100A834F4, v5, v4);
}

uint64_t sub_100A834F4()
{
  id v1 = [*(id *)(v0 + 136) navigationController];
  *(void *)(v0 + 216) = v1;
  if (v1)
  {
    char v2 = v1;
    id v3 = [v1 topViewController];
    if (v3)
    {
      uint64_t v4 = v3;
      uint64_t v5 = *(void **)(v0 + 136);
      sub_10050BF48(0, (unint64_t *)&qword_1016745A0);
      id v6 = v5;
      id v7 = v4;
      LOBYTE(v4) = static NSObject.== infix(_:_:)();

      if (v4)
      {
        if (qword_10166FB38 != -1) {
          swift_once();
        }
        uint64_t v8 = *(void *)(v0 + 176);
        uint64_t v9 = *(void *)(v0 + 168);
        uint64_t v45 = *(void *)(v0 + 184);
        uint64_t v46 = *(void *)(v0 + 160);
        uint64_t v10 = *(void *)(v0 + 152);
        uint64_t v11 = *(void *)(v0 + 136);
        swift_beginAccess();
        objc_super v12 = (void *)static OS_os_log.sceneManagement;
        sub_1005057FC((uint64_t *)&unk_101672B40);
        uint64_t inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = xmmword_10117E810;
        uint64_t v14 = *(char **)(*(void *)(v11 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_editingCoordinator)
                       + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard);
        uint64_t v15 = OBJC_IVAR____TtC8Freeform8CRLBoard_data;
        uint64_t v16 = *(void *)&v14[OBJC_IVAR____TtC8Freeform8CRLBoard_data]
            + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
        swift_beginAccess();
        sub_100A982B0(v16, v10, type metadata accessor for CRLBoardCRDTData);
        id v17 = v12;
        id v18 = v14;
        swift_retain();
        sub_1005057FC(&qword_101674550);
        CRRegister.wrappedValue.getter();
        sub_100A98CC0(v10, type metadata accessor for CRLBoardCRDTData);
        swift_release();
        uint64_t v19 = (uint64_t *)(*(void *)&v14[v15] + OBJC_IVAR____TtC8Freeform12CRLBoardData_ownerName);
        uint64_t v20 = *v19;
        unint64_t v21 = v19[1];
        swift_bridgeObjectRetain();
        sub_100753370(v8, v20, v21, v45);

        (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(v8, v45, v46);
        sub_100A98CC0(v45, type metadata accessor for CRLBoardIdentifier);
        uint64_t v22 = UUID.uuidString.getter();
        uint64_t v24 = v23;
        (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v46);
        *(void *)(inited + 56) = &type metadata for String;
        *(void *)(inited + 64) = sub_100528BE4();
        *(void *)(inited + 32) = v22;
        *(void *)(inited + 40) = v24;
        uint64_t v25 = static os_log_type_t.default.getter();
        sub_100BAC898((uint64_t)v17, (uint64_t)&_mh_execute_header, v25, (uint64_t)"Tearing down the board view controller due to close for identifier %{public}@", 77, 2, inited);
        swift_setDeallocating();
        sub_1005057FC(&qword_101672B50);
        swift_arrayDestroy();

        uint64_t v26 = sub_100A701F0();
        if (v26)
        {
          NSString v27 = (unsigned char *)v26;
          sub_100D76A6C(0);
          v27[OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_isPresentingBoardNavigationController] = 0;
        }
        uint64_t v28 = (char *)[*(id *)(*(void *)(v0 + 136)+ OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interactiveCanvasController) textInputResponder];
        if (v28)
        {
          id v29 = v28;
          id v30 = *(void **)&v28[OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_editor];
          swift_unknownObjectRetain();

          if (v30)
          {
            [v30 setResignFirstResponderWhenKeyboardHides:1];
            swift_unknownObjectRelease();
          }
        }
        uint64_t v31 = *(void **)(*(void *)(v0 + 144) + OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate_window);
        if (v31)
        {
          id v32 = [v31 windowScene];
          if (v32)
          {
            id v33 = v32;
            if (sub_100E1BF78()) {
              sub_100E1C164((uint64_t)v33);
            }
          }
        }
        *(void *)(v0 + 224) = sub_100A70A50();
        id v34 = (void *)swift_task_alloc();
        *(void *)(v0 + 232) = v34;
        *id v34 = v0;
        v34[1] = sub_100A83B48;
        return sub_100B758E8(1);
      }
    }
  }
  else
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"closeBoard(_:)", 14, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/App/CRLiOSSceneDelegate.swift", 87, 2, 1925, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"closeBoard(_:)", 14, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/App/CRLiOSSceneDelegate.swift", 87, 2, 1925);
  }
  uint64_t v36 = *(void **)(v0 + 136);
  swift_release();
  _StringGuts.grow(_:)(67);
  v37._object = (void *)0x800000010126CB70;
  v37._countAndFlagsBits = 0xD000000000000041;
  String.append(_:)(v37);
  id v38 = [v36 description];
  uint64_t v39 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v41 = v40;

  v42._countAndFlagsBits = v39;
  v42._object = v41;
  String.append(_:)(v42);
  swift_bridgeObjectRelease();
  sub_100A95774();
  swift_allocError();
  void *v43 = 0;
  v43[1] = 0xE000000000000000;
  swift_willThrow();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v44 = *(uint64_t (**)(void))(v0 + 8);
  return v44();
}

uint64_t sub_100A83B48()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 240) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 200);
    uint64_t v4 = *(void *)(v2 + 208);
    uint64_t v5 = sub_100A83D5C;
  }
  else
  {

    uint64_t v3 = *(void *)(v2 + 200);
    uint64_t v4 = *(void *)(v2 + 208);
    uint64_t v5 = sub_100A83C64;
  }
  return _swift_task_switch(v5, v3, v4);
}

uint64_t sub_100A83C64()
{
  id v1 = (void *)v0[27];
  uint64_t v2 = (void *)v0[18];
  uint64_t v3 = (char *)v0[17];
  swift_release();
  *(void *)(swift_allocObject() + 16) = v2;
  id v4 = v2;
  sub_100A76CF0(v3, (void (*)(uint64_t))sub_100A95800);
  swift_release();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

uint64_t sub_100A83D5C()
{
  id v1 = (void *)v0[27];
  uint64_t v2 = (void *)v0[28];
  swift_release();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t sub_100A83DF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[2] = a4;
  v5[3] = a5;
  type metadata accessor for CRLBoardLibraryViewModel.Folder(0);
  v5[4] = swift_task_alloc();
  type metadata accessor for MainActor();
  v5[5] = static MainActor.shared.getter();
  uint64_t v7 = dispatch thunk of Actor.unownedExecutor.getter();
  v5[6] = v7;
  v5[7] = v6;
  return _swift_task_switch(sub_100A83EB4, v7, v6);
}

uint64_t sub_100A83EB4()
{
  uint64_t v1 = v0[4];
  uint64_t v2 = sub_1005057FC(&qword_101670F30);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(v1, 1, 5, v2);
  id v3 = [self mainBundle];
  NSString v4 = String._bridgeToObjectiveC()();
  NSString v5 = String._bridgeToObjectiveC()();
  id v6 = [v3 localizedStringForKey:v4 value:v5 table:0];

  uint64_t v7 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v9 = v8;

  v0[8] = v9;
  uint64_t v10 = (void *)swift_task_alloc();
  v0[9] = v10;
  void *v10 = v0;
  v10[1] = sub_100A84050;
  uint64_t v11 = v0[4];
  return sub_100A72B60(v11, v7, v9, 1);
}

uint64_t sub_100A84050(void *a1)
{
  uint64_t v3 = *v1;
  uint64_t v4 = *(void *)(*v1 + 32);
  swift_task_dealloc();
  swift_bridgeObjectRelease();

  sub_100A98CC0(v4, type metadata accessor for CRLBoardLibraryViewModel.Folder);
  uint64_t v5 = *(void *)(v3 + 56);
  uint64_t v6 = *(void *)(v3 + 48);
  return _swift_task_switch(sub_100A841D4, v6, v5);
}

uint64_t sub_100A841D4()
{
  uint64_t v1 = *(void **)(v0 + 24);
  swift_release();
  [v1 endIgnoringUserInteractionSafely];
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_100A84250(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[39] = a5;
  v6[40] = a6;
  v6[38] = a4;
  v6[41] = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  v6[42] = swift_task_alloc();
  type metadata accessor for MainActor();
  v6[43] = static MainActor.shared.getter();
  uint64_t v8 = dispatch thunk of Actor.unownedExecutor.getter();
  v6[44] = v8;
  v6[45] = v7;
  return _swift_task_switch(sub_100A8431C, v8, v7);
}

uint64_t sub_100A8431C()
{
  sub_100A982B0(v0[38], v0[42], type metadata accessor for CRLBoardLibraryViewModel.Item);
  if (swift_getEnumCaseMultiPayload() == 2)
  {
    uint64_t v1 = v0[42];
    uint64_t v2 = v0[39];
    sub_1005057FC(&qword_101677100);
    swift_bridgeObjectRelease();
    sub_100A98CC0(v1, type metadata accessor for CRLBoardIdentifier);
    swift_beginAccess();
    uint64_t v3 = *(void **)(v2 + 16);
    if (v3) {
      [v3 endIgnoringUserInteractionSafely];
    }
    uint64_t v4 = v0[39];
    swift_beginAccess();
    uint64_t v5 = *(void **)(v4 + 16);
    *(void *)(v4 + 16) = 0;

    uint64_t v6 = (void *)swift_task_alloc();
    v0[46] = (uint64_t)v6;
    void *v6 = v0;
    v6[1] = sub_100A84524;
    uint64_t v7 = v0[38];
    return sub_100A84DE4(v7);
  }
  else
  {
    sub_100A98CC0(v0[42], type metadata accessor for CRLBoardLibraryViewModel.Item);
    uint64_t v9 = (void *)swift_task_alloc();
    v0[48] = (uint64_t)v9;
    *uint64_t v9 = v0;
    v9[1] = sub_100A84828;
    uint64_t v10 = v0[38];
    return sub_100A7B5C4(v10, 1, 1, 0);
  }
}

uint64_t sub_100A84524()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 376) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 360);
  uint64_t v4 = *(void *)(v2 + 352);
  if (v0) {
    uint64_t v5 = sub_100A849E4;
  }
  else {
    uint64_t v5 = sub_100A84660;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_100A84660()
{
  uint64_t v1 = *(void **)(v0[40] + OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate_window);
  if (!v1
    || (id v2 = [v1 rootViewController]) == 0
    || (uint64_t v3 = v2, v4 = objc_msgSend(v2, "crl_windowWrapper"), v3, !v4)
    || (id v5 = [v4 newWrapperBeginningIgnoringUserInteractionSafely], v4, !v5))
  {
    if (qword_10166F9D8 != -1) {
      swift_once();
    }
    swift_beginAccess();
    id v6 = (id)static OS_os_log.crlError;
    uint64_t v7 = static os_log_type_t.error.getter();
    sub_100BAC898((uint64_t)v6, (uint64_t)&_mh_execute_header, v7, (uint64_t)"Could not create token for ignoring user interaction; view hierarchy may not be set up yet",
      90,
      2,
      (uint64_t)_swiftEmptyArrayStorage);

    id v5 = 0;
  }
  uint64_t v8 = v0[39];
  swift_beginAccess();
  uint64_t v9 = *(void **)(v8 + 16);
  *(void *)(v8 + 16) = v5;

  uint64_t v10 = (void *)swift_task_alloc();
  v0[48] = v10;
  void *v10 = v0;
  v10[1] = sub_100A84828;
  uint64_t v11 = v0[38];
  return sub_100A7B5C4(v11, 1, 1, 0);
}

uint64_t sub_100A84828(void *a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 392) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = *(void *)(v4 + 352);
    uint64_t v6 = *(void *)(v4 + 360);
    uint64_t v7 = sub_100A84BE4;
  }
  else
  {

    uint64_t v5 = *(void *)(v4 + 352);
    uint64_t v6 = *(void *)(v4 + 360);
    uint64_t v7 = sub_100A8494C;
  }
  return _swift_task_switch(v7, v5, v6);
}

uint64_t sub_100A8494C()
{
  swift_release();
  uint64_t v1 = *(void *)(v0 + 312);
  swift_beginAccess();
  id v2 = *(void **)(v1 + 16);
  if (v2) {
    [v2 endIgnoringUserInteractionSafely];
  }
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t sub_100A849E4()
{
  swift_release();
  if (qword_10166F9D8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v1 = (void *)static OS_os_log.crlError;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117D8C0;
  id v3 = v1;
  uint64_t v4 = sub_100DD71D4();
  uint64_t v6 = v5;
  *(void *)(inited + 56) = &type metadata for String;
  unint64_t v7 = sub_100528BE4();
  *(void *)(inited + 64) = v7;
  *(void *)(inited + 32) = v4;
  *(void *)(inited + 40) = v6;
  swift_getErrorValue();
  uint64_t v8 = Error.localizedDescription.getter();
  *(void *)(inited + 96) = &type metadata for String;
  *(void *)(inited + 104) = v7;
  *(void *)(inited + 72) = v8;
  *(void *)(inited + 80) = v9;
  uint64_t v10 = static os_log_type_t.error.getter();
  sub_100BAC898((uint64_t)v3, (uint64_t)&_mh_execute_header, v10, (uint64_t)"Caught error trying to navigate to view model item %@: %@", 57, 2, inited);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  swift_errorRelease();
  uint64_t v11 = *(void *)(v0 + 312);
  swift_beginAccess();
  objc_super v12 = *(void **)(v11 + 16);
  if (v12) {
    [v12 endIgnoringUserInteractionSafely];
  }
  swift_task_dealloc();
  uint64_t v13 = *(uint64_t (**)(void))(v0 + 8);
  return v13();
}

uint64_t sub_100A84BE4()
{
  swift_release();
  if (qword_10166F9D8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v1 = (void *)static OS_os_log.crlError;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117D8C0;
  id v3 = v1;
  uint64_t v4 = sub_100DD71D4();
  uint64_t v6 = v5;
  *(void *)(inited + 56) = &type metadata for String;
  unint64_t v7 = sub_100528BE4();
  *(void *)(inited + 64) = v7;
  *(void *)(inited + 32) = v4;
  *(void *)(inited + 40) = v6;
  swift_getErrorValue();
  uint64_t v8 = Error.localizedDescription.getter();
  *(void *)(inited + 96) = &type metadata for String;
  *(void *)(inited + 104) = v7;
  *(void *)(inited + 72) = v8;
  *(void *)(inited + 80) = v9;
  uint64_t v10 = static os_log_type_t.error.getter();
  sub_100BAC898((uint64_t)v3, (uint64_t)&_mh_execute_header, v10, (uint64_t)"Caught error trying to navigate to view model item %@: %@", 57, 2, inited);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  swift_errorRelease();
  uint64_t v11 = *(void *)(v0 + 312);
  swift_beginAccess();
  objc_super v12 = *(void **)(v11 + 16);
  if (v12) {
    [v12 endIgnoringUserInteractionSafely];
  }
  swift_task_dealloc();
  uint64_t v13 = *(uint64_t (**)(void))(v0 + 8);
  return v13();
}

uint64_t sub_100A84DE4(uint64_t a1)
{
  v2[11] = a1;
  v2[12] = v1;
  sub_1005057FC((uint64_t *)&unk_1016741D0);
  v2[13] = swift_task_alloc();
  uint64_t v3 = type metadata accessor for CRLBoardViewModelMetadata(0);
  v2[14] = v3;
  v2[15] = *(void *)(v3 - 8);
  v2[16] = swift_task_alloc();
  v2[17] = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  v2[18] = swift_task_alloc();
  uint64_t v4 = *(void *)(type metadata accessor for CRLBoardIdentifier(0) - 8);
  v2[19] = v4;
  v2[20] = *(void *)(v4 + 64);
  v2[21] = swift_task_alloc();
  v2[22] = swift_task_alloc();
  type metadata accessor for MainActor();
  v2[23] = static MainActor.shared.getter();
  uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
  v2[24] = v6;
  v2[25] = v5;
  return _swift_task_switch(sub_100A84FA8, v6, v5);
}

void sub_100A84FA8()
{
  sub_100A982B0(v0[11], v0[18], type metadata accessor for CRLBoardLibraryViewModel.Item);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v2 = v0[18];
  if (EnumCaseMultiPayload != 2)
  {
    swift_release();
    sub_100A98CC0(v2, type metadata accessor for CRLBoardLibraryViewModel.Item);
    if (qword_10166F9D8 != -1) {
      swift_once();
    }
    swift_beginAccess();
    id v6 = (id)static OS_os_log.crlError;
    uint64_t v7 = static os_log_type_t.error.getter();
    sub_100BAC898((uint64_t)v6, (uint64_t)&_mh_execute_header, v7, (uint64_t)"presentOpenBoardErrorAlertIfNeeded(for:) requires item to be a .board", 69, 2, (uint64_t)_swiftEmptyArrayStorage);

    goto LABEL_7;
  }
  uint64_t v3 = v0[22];
  sub_1005057FC(&qword_101677100);
  swift_bridgeObjectRelease();
  sub_100A98C58(v2, v3, type metadata accessor for CRLBoardIdentifier);
  sub_100A70728();
  if (!v4)
  {
    __break(1u);
    goto LABEL_28;
  }
  uint64_t v5 = v4;
  sub_100ED7F04(v0[22], v0[13]);
  uint64_t v10 = v0[15];
  uint64_t v9 = v0[16];
  uint64_t v12 = v0[13];
  uint64_t v11 = v0[14];

  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v10 + 56))(v12, 0, 1, v11);
  sub_100A98C58(v12, v9, type metadata accessor for CRLBoardViewModelMetadata);
  if (*(unsigned char *)(v9 + *(int *)(v11 + 40)))
  {
    sub_100A98CC0(v0[16], type metadata accessor for CRLBoardViewModelMetadata);
    if (qword_10166F9E0 != -1) {
      swift_once();
    }
    swift_beginAccess();
    id v13 = (id)static OS_os_log.crlWarning;
    uint64_t v14 = static os_log_type_t.debug.getter();
    sub_100BAC898((uint64_t)v13, (uint64_t)&_mh_execute_header, v14, (uint64_t)"Tried to open unsupported board.", 32, 2, (uint64_t)_swiftEmptyArrayStorage);

    uint64_t v15 = (void *)swift_task_alloc();
    v0[29] = v15;
    *uint64_t v15 = v0;
    v15[1] = sub_100A85810;
    sub_100A912D0();
    return;
  }
  sub_100A70728();
  if (!v16)
  {
LABEL_28:
    __break(1u);
    return;
  }
  id v17 = v16;
  uint64_t v18 = v0[16] + *(int *)(v0[14] + 44);
  if (*(unsigned char *)(v18 + 8))
  {
    swift_release();

LABEL_21:
    uint64_t v21 = v0[22];
    sub_100A98CC0(v0[16], type metadata accessor for CRLBoardViewModelMetadata);
    sub_100A98CC0(v21, type metadata accessor for CRLBoardIdentifier);
LABEL_7:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v8 = (void (*)(void))v0[1];
    v8();
    return;
  }
  unint64_t v19 = *(void *)v18;
  unint64_t v20 = sub_1002094A4();

  if (v19 < v20)
  {
    swift_release();
    goto LABEL_21;
  }
  if (qword_10166F9E0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  id v22 = (id)static OS_os_log.crlWarning;
  uint64_t v23 = static os_log_type_t.debug.getter();
  sub_100BAC898((uint64_t)v22, (uint64_t)&_mh_execute_header, v23, (uint64_t)"Tried to open board which crashed on last open.", 47, 2, (uint64_t)_swiftEmptyArrayStorage);

  v0[26] = sub_100A98B54();
  uint64_t v24 = swift_allocError();
  v0[27] = v24;
  *uint64_t v25 = 0;
  uint64_t v26 = (void *)swift_task_alloc();
  v0[28] = v26;
  *uint64_t v26 = v0;
  v26[1] = sub_100A85524;
  uint64_t v27 = v0[11];
  sub_100A91DCC(v27, v24);
}

uint64_t sub_100A85524(char a1)
{
  uint64_t v2 = *v1;
  *(unsigned char *)(*v1 + 240) = a1;
  swift_task_dealloc();
  swift_errorRelease();
  uint64_t v3 = *(void *)(v2 + 200);
  uint64_t v4 = *(void *)(v2 + 192);
  return _swift_task_switch(sub_100A85670, v4, v3);
}

uint64_t sub_100A85670()
{
  char v1 = *(unsigned char *)(v0 + 240);
  swift_release();
  uint64_t v2 = *(void *)(v0 + 128);
  if (v1)
  {
    uint64_t v3 = *(void *)(v0 + 176);
    sub_100A98CC0(*(void *)(v0 + 128), type metadata accessor for CRLBoardViewModelMetadata);
    sub_100A98CC0(v3, type metadata accessor for CRLBoardIdentifier);
  }
  else
  {
    swift_allocError();
    *uint64_t v5 = 0;
    swift_willThrow();
    sub_100A98CC0(v2, type metadata accessor for CRLBoardViewModelMetadata);
    sub_100A98CC0(*(void *)(v0 + 176), type metadata accessor for CRLBoardIdentifier);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_100A85810()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 200);
  uint64_t v3 = *(void *)(v1 + 192);
  return _swift_task_switch(sub_100A85930, v3, v2);
}

void sub_100A85930()
{
  swift_release();
  id v1 = [self standardUserDefaults];
  unsigned int v2 = [v1 BOOLForKey:@"CRLAllowInteractionWithUnsupportedBoardAndBoardItemsUserDefault"];

  if (v2)
  {
    sub_100A70728();
    if (!v3)
    {
      __break(1u);
      return;
    }
    uint64_t v4 = v3;
    uint64_t v5 = v0[21];
    uint64_t v7 = v0[19];
    uint64_t v6 = v0[20];
    sub_100A982B0(v0[22], v5, type metadata accessor for CRLBoardIdentifier);
    unint64_t v8 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
    unint64_t v9 = (v6 + v8 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v10 = swift_allocObject();
    sub_100A98C58(v5, v10 + v8, type metadata accessor for CRLBoardIdentifier);
    *(void *)(v10 + v9) = v4;
    id v11 = v4;
    sub_100C74ABC((uint64_t)sub_100A98BAC, v10);
    swift_release();
  }
  sub_100A98B54();
  swift_allocError();
  *uint64_t v12 = 1;
  swift_willThrow();
  sub_100A98CC0(v0[22], type metadata accessor for CRLBoardIdentifier);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  id v13 = (void (*)(void))v0[1];
  v13();
}

void sub_100A85B40(void *a1)
{
  uint64_t v3 = sub_1005057FC(&qword_101672BB0);
  __chkstk_darwin(v3 - 8, v4);
  uint64_t v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v7 = sub_100A70A50();
  id v8 = [v7 presentedViewController];

  if (!v8)
  {
    uint64_t v9 = OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate_window;
    uint64_t v10 = *(void **)&v1[OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate_window];
    if (v10)
    {
      if ([v10 isUserInteractionEnabled])
      {
        id v11 = self;
        NSString v12 = String._bridgeToObjectiveC()();
        _s8Freeform23CRLAnalyticsFeatureUsedC14featurePayload3forSDySSSo8NSObjectCGAA0bC4NameO_tFZ_0(4);
        sub_10050BF48(0, (unint64_t *)&qword_101672E50);
        Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease();
        [v11 sendEventInDomain:v12 lazily:1 eventPayload:isa];

        uint64_t v14 = *(void **)&v1[v9];
        if (!v14
          || (id v15 = [v14 rootViewController]) == 0
          || (uint64_t v16 = v15,
              id v17 = objc_msgSend(v15, "crl_windowWrapper"),
              v16,
              !v17)
          || (id v18 = [v17 newWrapperBeginningIgnoringUserInteractionSafely], v17, !v18))
        {
          if (qword_10166F9D8 != -1) {
            swift_once();
          }
          swift_beginAccess();
          id v19 = (id)static OS_os_log.crlError;
          uint64_t v20 = static os_log_type_t.error.getter();
          sub_100BAC898((uint64_t)v19, (uint64_t)&_mh_execute_header, v20, (uint64_t)"Could not create token for ignoring user interaction; view hierarchy may not be set up yet",
            90,
            2,
            (uint64_t)_swiftEmptyArrayStorage);

          id v18 = 0;
        }
        uint64_t v21 = type metadata accessor for TaskPriority();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v6, 1, 1, v21);
        type metadata accessor for MainActor();
        id v22 = v18;
        uint64_t v23 = v1;
        id v24 = a1;
        uint64_t v25 = static MainActor.shared.getter();
        uint64_t v26 = (void *)swift_allocObject();
        v26[2] = v25;
        v26[3] = &protocol witness table for MainActor;
        v26[4] = v23;
        v26[5] = v24;
        v26[6] = v18;
        sub_1005912D0((uint64_t)v6, (uint64_t)&unk_10168E1A0, (uint64_t)v26);
        swift_release();
      }
    }
  }
}

uint64_t sub_100A85E6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[3] = a5;
  v6[4] = a6;
  v6[2] = a4;
  type metadata accessor for MainActor();
  v6[5] = static MainActor.shared.getter();
  uint64_t v8 = dispatch thunk of Actor.unownedExecutor.getter();
  v6[6] = v8;
  v6[7] = v7;
  return _swift_task_switch(sub_100A85F08, v8, v7);
}

uint64_t sub_100A85F08()
{
  uint64_t v1 = v0[3] + OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_folder;
  id v2 = [self mainBundle];
  NSString v3 = String._bridgeToObjectiveC()();
  NSString v4 = String._bridgeToObjectiveC()();
  id v5 = [v2 localizedStringForKey:v3 value:v4 table:0];

  uint64_t v6 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v8 = v7;

  v0[8] = v8;
  uint64_t v9 = (void *)swift_task_alloc();
  v0[9] = v9;
  *uint64_t v9 = v0;
  v9[1] = sub_100A86074;
  return sub_100A72B60(v1, v6, v8, 1);
}

uint64_t sub_100A86074(void *a1)
{
  uint64_t v3 = *v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();

  uint64_t v4 = *(void *)(v3 + 56);
  uint64_t v5 = *(void *)(v3 + 48);
  return _swift_task_switch(sub_100A861C0, v5, v4);
}

uint64_t sub_100A861C0()
{
  uint64_t v1 = *(void **)(v0 + 32);
  swift_release();
  [v1 endIgnoringUserInteractionSafely];
  id v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_100A86230(uint64_t a1, char a2, char a3)
{
  *(unsigned char *)(v4 + 81) = a3;
  *(unsigned char *)(v4 + 80) = a2;
  *(void *)(v4 + 16) = a1;
  *(void *)(v4 + 24) = v3;
  type metadata accessor for MainActor();
  *(void *)(v4 + 32) = static MainActor.shared.getter();
  uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
  *(void *)(v4 + 40) = v6;
  *(void *)(v4 + 48) = v5;
  return _swift_task_switch(sub_100A862D0, v6, v5);
}

uint64_t sub_100A862D0()
{
  id v1 = sub_100A70A50();
  id v2 = [v1 viewControllerForColumn:2];
  *(void *)(v0 + 56) = v2;

  if (!v2) {
    goto LABEL_9;
  }
  self;
  uint64_t v3 = (void *)swift_dynamicCastObjCClass();
  if (!v3)
  {

LABEL_9:
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"show(viewController:push:animated:)", 35, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/App/CRLiOSSceneDelegate.swift", 87, 2, 1568, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"show(viewController:push:animated:)", 35, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/App/CRLiOSSceneDelegate.swift", 87, 2, 1568);
LABEL_10:
    swift_release();
    goto LABEL_11;
  }
  id v4 = [v3 topViewController];
  if (v4)
  {
    uint64_t v5 = v4;
    uint64_t v6 = *(void **)(v0 + 16);
    sub_10050BF48(0, (unint64_t *)&qword_1016745A0);
    id v7 = v6;
    id v8 = v5;
    LOBYTE(v5) = static NSObject.== infix(_:_:)();

    if (v5)
    {
      swift_release();
      id v9 = sub_100A70A50();
      [v9 showColumn:2];

LABEL_11:
      uint64_t v16 = *(uint64_t (**)(void))(v0 + 8);
      return v16();
    }
  }
  uint64_t v10 = *(void **)(v0 + 16);
  type metadata accessor for CRLiOSFolderGridViewController();
  uint64_t v11 = swift_dynamicCastClass();
  if (v11)
  {
    NSString v12 = (void *)v11;
    char v13 = *(unsigned char *)(v0 + 81);
    char v14 = *(unsigned char *)(v0 + 80);
    id v15 = v10;
    swift_release();
    sub_100A8ECB0(v12, v14, 1, v13);

    goto LABEL_11;
  }
  type metadata accessor for CRLiOSBoardViewController();
  uint64_t v18 = swift_dynamicCastClass();
  if (!v18)
  {
    swift_release();

    goto LABEL_11;
  }
  uint64_t v19 = v18;
  id v20 = v10;
  id v21 = sub_100A70A50();
  id v22 = [v21 presentedViewController];

  if (!v22) {
    goto LABEL_24;
  }
  self;
  uint64_t v23 = (void *)swift_dynamicCastObjCClass();
  if (!v23)
  {
LABEL_23:

    goto LABEL_24;
  }
  id v24 = [v23 topViewController];

  if (!v24) {
    goto LABEL_24;
  }
  if (!swift_dynamicCastClass())
  {
    id v22 = v24;
    goto LABEL_23;
  }
  id v25 = *(id *)(v0 + 16);
  id v26 = v24;
  char v27 = static NSObject.== infix(_:_:)();

  if (v27)
  {
    uint64_t v28 = *(void **)(v0 + 16);

    goto LABEL_10;
  }
LABEL_24:
  id v29 = (void *)swift_task_alloc();
  *(void *)(v0 + 64) = v29;
  *id v29 = v0;
  v29[1] = sub_100A86694;
  char v30 = *(unsigned char *)(v0 + 81);
  return sub_100A8EEEC(v19, v30);
}

uint64_t sub_100A86694()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 72) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 48);
  uint64_t v4 = *(void *)(v2 + 40);
  if (v0) {
    uint64_t v5 = sub_100A86848;
  }
  else {
    uint64_t v5 = sub_100A867D0;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_100A867D0()
{
  id v1 = *(void **)(v0 + 16);

  swift_release();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_100A86848()
{
  id v1 = *(void **)(v0 + 56);

  swift_release();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_100A868C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[5] = a1;
  v4[6] = a4;
  type metadata accessor for MainActor();
  v4[7] = static MainActor.shared.getter();
  uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
  v4[8] = v6;
  v4[9] = v5;
  return _swift_task_switch(sub_100A86958, v6, v5);
}

uint64_t sub_100A86958()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  *(void *)(v0 + 80) = Strong;
  if (Strong)
  {
    uint64_t v2 = (void *)swift_task_alloc();
    *(void *)(v0 + 88) = v2;
    *uint64_t v2 = v0;
    v2[1] = sub_100A86A60;
    return sub_100A7FA6C();
  }
  else
  {
    swift_release();
    **(unsigned char **)(v0 + 40) = *(void *)(v0 + 80) == 0;
    uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
    return v4();
  }
}

uint64_t sub_100A86A60()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void **)(*v0 + 80);
  swift_task_dealloc();

  uint64_t v3 = *(void *)(v1 + 72);
  uint64_t v4 = *(void *)(v1 + 64);
  return _swift_task_switch(sub_100A86BA0, v4, v3);
}

uint64_t sub_100A86BA0()
{
  swift_release();
  **(unsigned char **)(v0 + 40) = *(void *)(v0 + 80) == 0;
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100A86C14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  *(unsigned char *)(v5 + 248) = a5;
  *(void *)(v5 + 168) = a4;
  type metadata accessor for MainActor();
  *(void *)(v5 + 176) = static MainActor.shared.getter();
  uint64_t v7 = dispatch thunk of Actor.unownedExecutor.getter();
  *(void *)(v5 + 184) = v7;
  *(void *)(v5 + 192) = v6;
  return _swift_task_switch(sub_100A86CB0, v7, v6);
}

uint64_t sub_100A86CB0()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  *(void *)(v0 + 200) = Strong;
  if (Strong)
  {
    *(void *)(v0 + 208) = sub_100A96FE0(*(unsigned char *)(v0 + 248));
    uint64_t v2 = (void *)swift_task_alloc();
    *(void *)(v0 + 216) = v2;
    *uint64_t v2 = v0;
    v2[1] = sub_100A86DB0;
    return sub_100A802E8();
  }
  else
  {
    swift_release();
    uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
    return v4();
  }
}

uint64_t sub_100A86DB0()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 192);
  uint64_t v3 = *(void *)(v1 + 184);
  return _swift_task_switch(sub_100A86ED0, v3, v2);
}

uint64_t sub_100A86ED0()
{
  id v1 = sub_100A70A50();
  id v2 = [v1 presentedViewController];

  if (!v2) {
    goto LABEL_6;
  }
  self;
  uint64_t v3 = (void *)swift_dynamicCastObjCClass();
  if (!v3) {
    goto LABEL_5;
  }
  id v4 = [v3 topViewController];

  if (v4)
  {
    type metadata accessor for CRLiOSBoardViewController();
    uint64_t v5 = swift_dynamicCastClass();
    id v2 = v4;
    if (v5) {
      goto LABEL_7;
    }
LABEL_5:
  }
LABEL_6:
  uint64_t v5 = (uint64_t)sub_100A70A50();
LABEL_7:
  v0[28] = v5;
  uint64_t v6 = (void *)swift_task_alloc();
  v0[29] = v6;
  void *v6 = v0;
  v6[1] = sub_100A87010;
  uint64_t v7 = v0[26];
  return sub_100B75534(v7, 1);
}

uint64_t sub_100A87010()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 240) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 184);
    uint64_t v4 = *(void *)(v2 + 192);
    uint64_t v5 = sub_100A871BC;
  }
  else
  {

    uint64_t v3 = *(void *)(v2 + 184);
    uint64_t v4 = *(void *)(v2 + 192);
    uint64_t v5 = sub_100A8712C;
  }
  return _swift_task_switch(v5, v3, v4);
}

uint64_t sub_100A8712C()
{
  id v1 = (void *)v0[26];
  swift_release();
  sub_100F2BCC8(v1);
  uint64_t v3 = (char *)v0[25];
  uint64_t v2 = (void *)v0[26];
  *(void *)&v3[OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate_downloadSharedCopyAttempt] = 0;

  swift_release();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_100A871BC()
{
  id v1 = (void *)v0[28];
  swift_release();

  if (qword_10166F9D8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v2 = (void *)static OS_os_log.crlError;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117E810;
  swift_getErrorValue();
  id v4 = v2;
  uint64_t v5 = Error.localizedDescription.getter();
  uint64_t v7 = v6;
  *(void *)(inited + 56) = &type metadata for String;
  *(void *)(inited + 64) = sub_100528BE4();
  *(void *)(inited + 32) = v5;
  *(void *)(inited + 40) = v7;
  uint64_t v8 = static os_log_type_t.error.getter();
  sub_100BAC898((uint64_t)v4, (uint64_t)&_mh_execute_header, v8, (uint64_t)"Caught error trying to present failed-to-download-shared-copy alert: %@", 71, 2, inited);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  swift_errorRelease();
  uint64_t v10 = (char *)v0[25];
  uint64_t v9 = (void *)v0[26];
  *(void *)&v10[OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate_downloadSharedCopyAttempt] = 0;

  swift_release();
  uint64_t v11 = (uint64_t (*)(void))v0[1];
  return v11();
}

uint64_t sub_100A87394(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[5] = a4;
  type metadata accessor for MainActor();
  v4[6] = static MainActor.shared.getter();
  uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
  v4[7] = v6;
  v4[8] = v5;
  return _swift_task_switch(sub_100A8742C, v6, v5);
}

uint64_t sub_100A8742C()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  v0[9] = Strong;
  if (Strong)
  {
    if (*(void *)(Strong + OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate_downloadSharedCopyAlertController))
    {
      uint64_t v2 = (void *)swift_task_alloc();
      v0[10] = v2;
      *uint64_t v2 = v0;
      v2[1] = sub_100A87558;
      return sub_100A802E8();
    }
    swift_release();
    id v4 = (char *)v0[9];
    *(void *)&v4[OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate_downloadSharedCopyAttempt] = 0;
  }
  swift_release();
  uint64_t v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

uint64_t sub_100A87558()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 64);
  uint64_t v3 = *(void *)(v1 + 56);
  return _swift_task_switch(sub_100A87678, v3, v2);
}

uint64_t sub_100A87678()
{
  swift_release();
  uint64_t v1 = *(char **)(v0 + 72);
  *(void *)&v1[OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate_downloadSharedCopyAttempt] = 0;

  swift_release();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_100A876F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[5] = a4;
  v5[6] = a5;
  uint64_t v6 = *(void *)(type metadata accessor for CRLBoardIdentifier(0) - 8);
  v5[7] = v6;
  v5[8] = *(void *)(v6 + 64);
  v5[9] = swift_task_alloc();
  v5[10] = swift_task_alloc();
  v5[11] = type metadata accessor for MainActor();
  v5[12] = static MainActor.shared.getter();
  uint64_t v8 = dispatch thunk of Actor.unownedExecutor.getter();
  v5[13] = v8;
  v5[14] = v7;
  return _swift_task_switch(sub_100A87804, v8, v7);
}

uint64_t sub_100A87804()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  *(void *)(v0 + 120) = Strong;
  if (!Strong) {
    goto LABEL_6;
  }
  if (*(void *)(Strong + OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate_downloadSharedCopyAlertController))
  {
    uint64_t v2 = (void *)swift_task_alloc();
    *(void *)(v0 + 128) = v2;
    *uint64_t v2 = v0;
    v2[1] = sub_100A87D88;
    return sub_100A802E8();
  }
  id v5 = sub_100A70A50();
  id v6 = [v5 presentedViewController];

  if (!v6) {
    goto LABEL_14;
  }
  self;
  uint64_t v7 = (void *)swift_dynamicCastObjCClass();
  if (!v7) {
    goto LABEL_13;
  }
  id v8 = [v7 topViewController];

  if (!v8)
  {
LABEL_14:
    uint64_t v9 = sub_100A70A50();
    goto LABEL_15;
  }
  type metadata accessor for CRLiOSBoardViewController();
  uint64_t v9 = (void *)swift_dynamicCastClass();
  id v6 = v8;
  if (!v9)
  {
LABEL_13:

    goto LABEL_14;
  }
LABEL_15:
  id v10 = [v9 presentedViewController];
  *(void *)(v0 + 136) = v10;

  if (v10)
  {
    sub_10050BF48(0, &qword_10168E230);
    if ([v10 isKindOfClass:swift_getObjCClassFromMetadata()])
    {
      id v11 = sub_100A70A50();
      id v12 = [v11 presentedViewController];

      if (v12)
      {
        self;
        uint64_t v13 = (void *)swift_dynamicCastObjCClass();
        if (!v13)
        {
LABEL_21:

          goto LABEL_22;
        }
        id v14 = [v13 topViewController];

        if (v14)
        {
          type metadata accessor for CRLiOSBoardViewController();
          uint64_t v15 = swift_dynamicCastClass();
          id v12 = v14;
          if (v15)
          {
LABEL_23:
            *(void *)(v0 + 144) = v15;
            uint64_t v16 = (void *)swift_task_alloc();
            *(void *)(v0 + 152) = v16;
            *uint64_t v16 = v0;
            v16[1] = sub_100A8837C;
            return sub_100B758E8(1);
          }
          goto LABEL_21;
        }
      }
LABEL_22:
      uint64_t v15 = (uint64_t)sub_100A70A50();
      goto LABEL_23;
    }
  }
  if (sub_100A70DDC())
  {
    *(void *)(v0 + 168) = static MainActor.shared.getter();
    uint64_t v18 = dispatch thunk of Actor.unownedExecutor.getter();
    *(void *)(v0 + 176) = v18;
    *(void *)(v0 + 184) = v17;
    return _swift_task_switch(sub_100A88774, v18, v17);
  }
  uint64_t v19 = *(void *)(v0 + 120);
  uint64_t v21 = *(void *)(v0 + 72);
  uint64_t v20 = *(void *)(v0 + 80);
  uint64_t v23 = *(void *)(v0 + 56);
  uint64_t v22 = *(void *)(v0 + 64);
  sub_100A982B0(*(void *)(v0 + 48), v20, type metadata accessor for CRLBoardIdentifier);
  sub_100A982B0(v20, v21, type metadata accessor for CRLBoardIdentifier);
  unint64_t v24 = (*(unsigned __int8 *)(v23 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80);
  uint64_t v25 = swift_allocObject();
  *(void *)(v0 + 216) = v25;
  sub_100A98C58(v20, v25 + v24, type metadata accessor for CRLBoardIdentifier);
  *(void *)(v25 + ((v22 + v24 + 7) & 0xFFFFFFFFFFFFFFF8)) = v19;
  uint64_t v26 = OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate_downloadSharedCopyAttempt;
  *(void *)(v0 + 224) = OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate_downloadSharedCopyAttempt;
  uint64_t v27 = *(void *)(v19 + v26);
  if (v27
    && *(unsigned char *)(v27 + OBJC_IVAR____TtC8Freeform28CRLDownloadSharedCopyAttempt_didEncounterUnsupportedContent) == 1)
  {
    uint64_t v28 = *(void *)(v0 + 72);
    id v29 = *(id *)(v0 + 120);
    sub_100A98CC0(v28, type metadata accessor for CRLBoardIdentifier);
    char v30 = (void *)swift_task_alloc();
    *(void *)(v0 + 232) = v30;
    *char v30 = v0;
    v30[1] = sub_100A88C9C;
    return sub_100A8088C((uint64_t)sub_100A9A324, v25);
  }
  uint64_t v31 = *(void *)(v0 + 72);
  id v32 = (char *)*(id *)(v0 + 120);
  swift_release();
  sub_100A88F00(v31, v32);
  sub_100A98CC0(v31, type metadata accessor for CRLBoardIdentifier);
  id v33 = *(char **)(v0 + 120);
  *(void *)&v33[*(void *)(v0 + 224)] = 0;

  swift_release();
LABEL_6:
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_100A87D88()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 112);
  uint64_t v3 = *(void *)(v1 + 104);
  return _swift_task_switch(sub_100A87EA8, v3, v2);
}

uint64_t sub_100A87EA8()
{
  id v1 = sub_100A70A50();
  id v2 = [v1 presentedViewController];

  if (!v2) {
    goto LABEL_6;
  }
  self;
  uint64_t v3 = (void *)swift_dynamicCastObjCClass();
  if (!v3) {
    goto LABEL_5;
  }
  id v4 = [v3 topViewController];

  if (v4)
  {
    type metadata accessor for CRLiOSBoardViewController();
    uint64_t v5 = (void *)swift_dynamicCastClass();
    id v2 = v4;
    if (v5) {
      goto LABEL_7;
    }
LABEL_5:
  }
LABEL_6:
  uint64_t v5 = sub_100A70A50();
LABEL_7:
  id v6 = [v5 presentedViewController];
  *(void *)(v0 + 136) = v6;

  if (v6)
  {
    sub_10050BF48(0, &qword_10168E230);
    if ([v6 isKindOfClass:swift_getObjCClassFromMetadata()])
    {
      id v7 = sub_100A70A50();
      id v8 = [v7 presentedViewController];

      if (v8)
      {
        self;
        uint64_t v9 = (void *)swift_dynamicCastObjCClass();
        if (!v9)
        {
LABEL_13:

          goto LABEL_14;
        }
        id v10 = [v9 topViewController];

        if (v10)
        {
          type metadata accessor for CRLiOSBoardViewController();
          uint64_t v11 = swift_dynamicCastClass();
          id v8 = v10;
          if (v11)
          {
LABEL_15:
            *(void *)(v0 + 144) = v11;
            id v12 = (void *)swift_task_alloc();
            *(void *)(v0 + 152) = v12;
            *id v12 = v0;
            v12[1] = sub_100A8837C;
            return sub_100B758E8(1);
          }
          goto LABEL_13;
        }
      }
LABEL_14:
      uint64_t v11 = (uint64_t)sub_100A70A50();
      goto LABEL_15;
    }
  }
  if (sub_100A70DDC())
  {
    *(void *)(v0 + 168) = static MainActor.shared.getter();
    uint64_t v15 = dispatch thunk of Actor.unownedExecutor.getter();
    *(void *)(v0 + 176) = v15;
    *(void *)(v0 + 184) = v14;
    return _swift_task_switch(sub_100A88774, v15, v14);
  }
  else
  {
    uint64_t v16 = *(void *)(v0 + 120);
    uint64_t v18 = *(void *)(v0 + 72);
    uint64_t v17 = *(void *)(v0 + 80);
    uint64_t v20 = *(void *)(v0 + 56);
    uint64_t v19 = *(void *)(v0 + 64);
    sub_100A982B0(*(void *)(v0 + 48), v17, type metadata accessor for CRLBoardIdentifier);
    sub_100A982B0(v17, v18, type metadata accessor for CRLBoardIdentifier);
    unint64_t v21 = (*(unsigned __int8 *)(v20 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
    uint64_t v22 = swift_allocObject();
    *(void *)(v0 + 216) = v22;
    sub_100A98C58(v17, v22 + v21, type metadata accessor for CRLBoardIdentifier);
    *(void *)(v22 + ((v19 + v21 + 7) & 0xFFFFFFFFFFFFFFF8)) = v16;
    uint64_t v23 = OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate_downloadSharedCopyAttempt;
    *(void *)(v0 + 224) = OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate_downloadSharedCopyAttempt;
    uint64_t v24 = *(void *)(v16 + v23);
    if (v24
      && *(unsigned char *)(v24 + OBJC_IVAR____TtC8Freeform28CRLDownloadSharedCopyAttempt_didEncounterUnsupportedContent) == 1)
    {
      uint64_t v25 = *(void *)(v0 + 72);
      id v26 = *(id *)(v0 + 120);
      sub_100A98CC0(v25, type metadata accessor for CRLBoardIdentifier);
      uint64_t v27 = (void *)swift_task_alloc();
      *(void *)(v0 + 232) = v27;
      *uint64_t v27 = v0;
      v27[1] = sub_100A88C9C;
      return sub_100A8088C((uint64_t)sub_100A9A324, v22);
    }
    else
    {
      uint64_t v28 = *(void *)(v0 + 72);
      id v29 = (char *)*(id *)(v0 + 120);
      swift_release();
      sub_100A88F00(v28, v29);
      sub_100A98CC0(v28, type metadata accessor for CRLBoardIdentifier);
      char v30 = *(char **)(v0 + 120);
      *(void *)&v30[*(void *)(v0 + 224)] = 0;

      swift_release();
      swift_release();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v31 = *(uint64_t (**)(void))(v0 + 8);
      return v31();
    }
  }
}

uint64_t sub_100A8837C()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 160) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 104);
    uint64_t v4 = *(void *)(v2 + 112);
    uint64_t v5 = sub_100A88E60;
  }
  else
  {

    uint64_t v3 = *(void *)(v2 + 104);
    uint64_t v4 = *(void *)(v2 + 112);
    uint64_t v5 = sub_100A88498;
  }
  return _swift_task_switch(v5, v3, v4);
}

uint64_t sub_100A88498()
{
  if (sub_100A70DDC())
  {
    *(void *)(v0 + 168) = static MainActor.shared.getter();
    uint64_t v2 = dispatch thunk of Actor.unownedExecutor.getter();
    *(void *)(v0 + 176) = v2;
    *(void *)(v0 + 184) = v1;
    return _swift_task_switch(sub_100A88774, v2, v1);
  }
  else
  {
    uint64_t v3 = *(void *)(v0 + 120);
    uint64_t v5 = *(void *)(v0 + 72);
    uint64_t v4 = *(void *)(v0 + 80);
    uint64_t v7 = *(void *)(v0 + 56);
    uint64_t v6 = *(void *)(v0 + 64);
    sub_100A982B0(*(void *)(v0 + 48), v4, type metadata accessor for CRLBoardIdentifier);
    sub_100A982B0(v4, v5, type metadata accessor for CRLBoardIdentifier);
    unint64_t v8 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
    uint64_t v9 = swift_allocObject();
    *(void *)(v0 + 216) = v9;
    sub_100A98C58(v4, v9 + v8, type metadata accessor for CRLBoardIdentifier);
    *(void *)(v9 + ((v6 + v8 + 7) & 0xFFFFFFFFFFFFFFF8)) = v3;
    uint64_t v10 = OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate_downloadSharedCopyAttempt;
    *(void *)(v0 + 224) = OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate_downloadSharedCopyAttempt;
    uint64_t v11 = *(void *)(v3 + v10);
    if (v11
      && *(unsigned char *)(v11 + OBJC_IVAR____TtC8Freeform28CRLDownloadSharedCopyAttempt_didEncounterUnsupportedContent) == 1)
    {
      uint64_t v12 = *(void *)(v0 + 72);
      id v13 = *(id *)(v0 + 120);
      sub_100A98CC0(v12, type metadata accessor for CRLBoardIdentifier);
      uint64_t v14 = (void *)swift_task_alloc();
      *(void *)(v0 + 232) = v14;
      void *v14 = v0;
      v14[1] = sub_100A88C9C;
      return sub_100A8088C((uint64_t)sub_100A9A324, v9);
    }
    else
    {
      uint64_t v15 = *(void *)(v0 + 72);
      uint64_t v16 = (char *)*(id *)(v0 + 120);
      swift_release();
      sub_100A88F00(v15, v16);
      sub_100A98CC0(v15, type metadata accessor for CRLBoardIdentifier);
      uint64_t v17 = *(char **)(v0 + 120);
      *(void *)&v17[*(void *)(v0 + 224)] = 0;

      swift_release();
      swift_release();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v18 = *(uint64_t (**)(void))(v0 + 8);
      return v18();
    }
  }
}

uint64_t sub_100A88774()
{
  uint64_t v1 = v0[15];
  uint64_t v2 = static MainActor.shared.getter();
  v0[24] = v2;
  uint64_t v3 = swift_task_alloc();
  v0[25] = v3;
  *(void *)(v3 + 16) = v1;
  uint64_t v4 = (void *)swift_task_alloc();
  v0[26] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_100A8887C;
  return withCheckedContinuation<A>(isolation:function:_:)(v4, v2, &protocol witness table for MainActor, 0xD000000000000023, 0x800000010126CDD0, sub_100A9A660, v3, (char *)&type metadata for () + 8);
}

uint64_t sub_100A8887C()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_release();
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 184);
  uint64_t v3 = *(void *)(v1 + 176);
  return _swift_task_switch(sub_100A889DC, v3, v2);
}

uint64_t sub_100A889DC()
{
  swift_release();
  uint64_t v1 = *(void *)(v0 + 104);
  uint64_t v2 = *(void *)(v0 + 112);
  return _swift_task_switch(sub_100A88A40, v1, v2);
}

uint64_t sub_100A88A40()
{
  uint64_t v1 = *(void *)(v0 + 120);
  uint64_t v3 = *(void *)(v0 + 72);
  uint64_t v2 = *(void *)(v0 + 80);
  uint64_t v5 = *(void *)(v0 + 56);
  uint64_t v4 = *(void *)(v0 + 64);
  sub_100A982B0(*(void *)(v0 + 48), v2, type metadata accessor for CRLBoardIdentifier);
  sub_100A982B0(v2, v3, type metadata accessor for CRLBoardIdentifier);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = swift_allocObject();
  *(void *)(v0 + 216) = v7;
  sub_100A98C58(v2, v7 + v6, type metadata accessor for CRLBoardIdentifier);
  *(void *)(v7 + ((v4 + v6 + 7) & 0xFFFFFFFFFFFFFFF8)) = v1;
  uint64_t v8 = OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate_downloadSharedCopyAttempt;
  *(void *)(v0 + 224) = OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate_downloadSharedCopyAttempt;
  uint64_t v9 = *(void *)(v1 + v8);
  if (v9
    && *(unsigned char *)(v9 + OBJC_IVAR____TtC8Freeform28CRLDownloadSharedCopyAttempt_didEncounterUnsupportedContent) == 1)
  {
    uint64_t v10 = *(void *)(v0 + 72);
    id v11 = *(id *)(v0 + 120);
    sub_100A98CC0(v10, type metadata accessor for CRLBoardIdentifier);
    uint64_t v12 = (void *)swift_task_alloc();
    *(void *)(v0 + 232) = v12;
    *uint64_t v12 = v0;
    v12[1] = sub_100A88C9C;
    return sub_100A8088C((uint64_t)sub_100A9A324, v7);
  }
  else
  {
    uint64_t v14 = *(void *)(v0 + 72);
    uint64_t v15 = (char *)*(id *)(v0 + 120);
    swift_release();
    sub_100A88F00(v14, v15);
    sub_100A98CC0(v14, type metadata accessor for CRLBoardIdentifier);
    uint64_t v16 = *(char **)(v0 + 120);
    *(void *)&v16[*(void *)(v0 + 224)] = 0;

    swift_release();
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v17 = *(uint64_t (**)(void))(v0 + 8);
    return v17();
  }
}

uint64_t sub_100A88C9C()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 112);
  uint64_t v3 = *(void *)(v1 + 104);
  return _swift_task_switch(sub_100A88DBC, v3, v2);
}

uint64_t sub_100A88DBC()
{
  swift_release();
  uint64_t v1 = (char *)v0[15];
  *(void *)&v1[v0[28]] = 0;

  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = (uint64_t (*)(void))v0[1];
  return v2();
}

uint64_t sub_100A88E60()
{
  uint64_t v1 = *(void **)(v0 + 136);
  uint64_t v2 = *(void **)(v0 + 120);

  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t sub_100A88F00(uint64_t a1, char *a2)
{
  uint64_t v4 = sub_1005057FC(&qword_101672BB0);
  __chkstk_darwin(v4 - 8, v5);
  uint64_t v7 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  __chkstk_darwin(v8, v11);
  uint64_t v12 = (char *)&v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13, v14);
  uint64_t v16 = (char *)&v36 - v15;
  uint64_t v17 = (char **)((char *)&v36 + *(int *)(sub_1005057FC(&qword_101677100) + 48) - v15);
  sub_100A982B0(a1, (uint64_t)v16, type metadata accessor for CRLBoardIdentifier);
  *uint64_t v17 = 0;
  v17[1] = 0xE000000000000000;
  swift_storeEnumTagMultiPayload();
  uint64_t v18 = sub_100A701F0();
  if (v18)
  {
    uint64_t v19 = (void *)v18;
    uint64_t v20 = OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate_window;
    unint64_t v21 = *(void **)&a2[OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate_window];
    if (v21 && [v21 isUserInteractionEnabled])
    {
      uint64_t v22 = *(void **)&a2[v20];
      if (!v22
        || (id v23 = [v22 rootViewController]) == 0
        || (uint64_t v24 = v23,
            id v25 = objc_msgSend(v23, "crl_windowWrapper"),
            v24,
            !v25)
        || (id v26 = [v25 newWrapperBeginningIgnoringUserInteractionSafely], v25, !v26))
      {
        if (qword_10166F9D8 != -1) {
          swift_once();
        }
        swift_beginAccess();
        id v27 = (id)static OS_os_log.crlError;
        uint64_t v28 = static os_log_type_t.error.getter();
        sub_100BAC898((uint64_t)v27, (uint64_t)&_mh_execute_header, v28, (uint64_t)"Could not create token for ignoring user interaction; view hierarchy may not be set up yet",
          90,
          2,
          (uint64_t)_swiftEmptyArrayStorage);

        id v26 = 0;
      }
      uint64_t v29 = swift_allocObject();
      *(void *)(v29 + 16) = v26;
      uint64_t v30 = type metadata accessor for TaskPriority();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(v7, 1, 1, v30);
      sub_100A982B0((uint64_t)v16, (uint64_t)v12, type metadata accessor for CRLBoardLibraryViewModel.Item);
      type metadata accessor for MainActor();
      swift_retain();
      uint64_t v36 = a2;
      uint64_t v31 = static MainActor.shared.getter();
      unint64_t v32 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
      unint64_t v33 = (v10 + v32 + 7) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v34 = swift_allocObject();
      *(void *)(v34 + 16) = v31;
      *(void *)(v34 + 24) = &protocol witness table for MainActor;
      sub_100A98C58((uint64_t)v12, v34 + v32, type metadata accessor for CRLBoardLibraryViewModel.Item);
      *(void *)(v34 + v33) = v29;
      *(void *)(v34 + ((v33 + 15) & 0xFFFFFFFFFFFFFFF8)) = v36;
      sub_1005912D0((uint64_t)v7, (uint64_t)&unk_10168E3E0, v34);
      swift_release();
      swift_release();
    }
  }
  return sub_100A98CC0((uint64_t)v16, type metadata accessor for CRLBoardLibraryViewModel.Item);
}

uint64_t sub_100A892FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[5] = a1;
  v4[6] = a4;
  type metadata accessor for MainActor();
  v4[7] = static MainActor.shared.getter();
  uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
  v4[8] = v6;
  v4[9] = v5;
  return _swift_task_switch(sub_100A89394, v6, v5);
}

uint64_t sub_100A89394()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  *(void *)(v0 + 80) = Strong;
  if (Strong)
  {
    uint64_t v2 = (void *)swift_task_alloc();
    *(void *)(v0 + 88) = v2;
    *uint64_t v2 = v0;
    v2[1] = sub_100A8949C;
    return sub_100A7E894();
  }
  else
  {
    swift_release();
    **(unsigned char **)(v0 + 40) = *(void *)(v0 + 80) == 0;
    uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
    return v4();
  }
}

uint64_t sub_100A8949C()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void **)(*v0 + 80);
  swift_task_dealloc();

  uint64_t v3 = *(void *)(v1 + 72);
  uint64_t v4 = *(void *)(v1 + 64);
  return _swift_task_switch(sub_100A9A670, v4, v3);
}

uint64_t sub_100A895DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[44] = a4;
  v5[45] = a5;
  type metadata accessor for MainActor();
  v5[46] = static MainActor.shared.getter();
  uint64_t v7 = dispatch thunk of Actor.unownedExecutor.getter();
  v5[47] = v7;
  v5[48] = v6;
  return _swift_task_switch(sub_100A89674, v7, v6);
}

uint64_t sub_100A89674()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  v0[49] = Strong;
  if (Strong)
  {
    v0[41] = v0[45];
    swift_errorRetain();
    sub_1005057FC(&qword_101672BD0);
    swift_dynamicCast();
    if (qword_10166F7D8 != -1) {
      swift_once();
    }
    uint64_t v2 = qword_10166F7E0;
    swift_bridgeObjectRetain();
    if (v2 != -1) {
      swift_once();
    }
    swift_bridgeObjectRetain();
    NSString v3 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    NSString v4 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v5 = [self alertControllerWithTitle:v3 message:v4 preferredStyle:1];
    v0[50] = v5;

    id v6 = [self mainBundle];
    NSString v7 = String._bridgeToObjectiveC()();
    NSString v8 = String._bridgeToObjectiveC()();
    id v9 = [v6 localizedStringForKey:v7 value:v8 table:0];

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    NSString v10 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v11 = [self actionWithTitle:v10 style:0 handler:0];

    [v5 addAction:v11];
    if (qword_10166F9D8 != -1) {
      swift_once();
    }
    swift_beginAccess();
    uint64_t v12 = (void *)static OS_os_log.crlError;
    v0[51] = sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_10117D8C0;
    swift_getErrorValue();
    uint64_t v14 = v0[26];
    uint64_t v15 = v0[27];
    id v16 = v12;
    uint64_t v17 = Error.publicDescription.getter(v14, v15);
    uint64_t v19 = v18;
    *(void *)(inited + 56) = &type metadata for String;
    unint64_t v20 = sub_100528BE4();
    v0[52] = v20;
    *(void *)(inited + 64) = v20;
    *(void *)(inited + 32) = v17;
    *(void *)(inited + 40) = v19;
    swift_getErrorValue();
    uint64_t v21 = Error.fullDescription.getter(v0[35]);
    *(void *)(inited + 96) = &type metadata for String;
    *(void *)(inited + 104) = v20;
    *(void *)(inited + 72) = v21;
    *(void *)(inited + 80) = v22;
    uint64_t v23 = static os_log_type_t.error.getter();
    sub_100BAC898((uint64_t)v16, (uint64_t)&_mh_execute_header, v23, (uint64_t)"Could not join or download board. Error: \"%{public}@ <%@>\"", 58, 2, inited);
    swift_setDeallocating();
    v0[53] = sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();

    id v24 = sub_100A70A50();
    id v25 = [v24 presentedViewController];

    if (!v25) {
      goto LABEL_13;
    }
    self;
    id v26 = (void *)swift_dynamicCastObjCClass();
    if (v26)
    {
      id v27 = [v26 topViewController];

      if (!v27)
      {
LABEL_13:
        uint64_t v28 = (uint64_t)sub_100A70A50();
        goto LABEL_14;
      }
      type metadata accessor for CRLiOSBoardViewController();
      uint64_t v28 = swift_dynamicCastClass();
      id v25 = v27;
      if (v28)
      {
LABEL_14:
        v0[54] = v28;
        uint64_t v29 = (void *)swift_task_alloc();
        v0[55] = v29;
        *uint64_t v29 = v0;
        v29[1] = sub_100A89BDC;
        return sub_100B75534((uint64_t)v5, 1);
      }
    }

    goto LABEL_13;
  }
  swift_release();
  uint64_t v31 = (uint64_t (*)(void))v0[1];
  return v31();
}

uint64_t sub_100A89BDC()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 448) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 376);
    uint64_t v4 = *(void *)(v2 + 384);
    id v5 = sub_100A89D88;
  }
  else
  {

    uint64_t v3 = *(void *)(v2 + 376);
    uint64_t v4 = *(void *)(v2 + 384);
    id v5 = sub_100A89CF8;
  }
  return _swift_task_switch(v5, v3, v4);
}

uint64_t sub_100A89CF8()
{
  uint64_t v1 = (void *)v0[50];
  swift_release();
  sub_100F2BCC8(v1);
  uint64_t v2 = (char *)v0[49];
  uint64_t v3 = (void *)v0[50];
  *(void *)&v2[OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate_acceptCloudKitShareAttempt] = 0;

  swift_release();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_100A89D88()
{
  uint64_t v1 = (void *)v0[54];
  uint64_t v2 = v0[52];
  swift_release();

  uint64_t v3 = (void *)static OS_os_log.crlError;
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117E810;
  swift_getErrorValue();
  id v5 = v3;
  uint64_t v6 = Error.localizedDescription.getter();
  *(void *)(inited + 56) = &type metadata for String;
  *(void *)(inited + 64) = v2;
  *(void *)(inited + 32) = v6;
  *(void *)(inited + 40) = v7;
  uint64_t v8 = static os_log_type_t.error.getter();
  sub_100BAC898((uint64_t)v5, (uint64_t)&_mh_execute_header, v8, (uint64_t)"Caught error trying to present failed-to-join alert: %@", 55, 2, inited);
  swift_setDeallocating();
  swift_arrayDestroy();

  swift_errorRelease();
  id v9 = (char *)v0[49];
  NSString v10 = (void *)v0[50];
  *(void *)&v9[OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate_acceptCloudKitShareAttempt] = 0;

  swift_release();
  id v11 = (uint64_t (*)(void))v0[1];
  return v11();
}

uint64_t sub_100A89EFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[5] = a4;
  type metadata accessor for MainActor();
  v4[6] = static MainActor.shared.getter();
  uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
  v4[7] = v6;
  v4[8] = v5;
  return _swift_task_switch(sub_100A89F94, v6, v5);
}

uint64_t sub_100A89F94()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  v0[9] = Strong;
  if (Strong)
  {
    if (*(void *)(Strong + OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate_acceptCloudKitShareAlertController))
    {
      uint64_t v2 = (void *)swift_task_alloc();
      v0[10] = v2;
      *uint64_t v2 = v0;
      v2[1] = sub_100A8A0C0;
      return sub_100A7EEA4();
    }
    swift_release();
    uint64_t v4 = (char *)v0[9];
    *(void *)&v4[OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate_acceptCloudKitShareAttempt] = 0;
  }
  swift_release();
  uint64_t v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

uint64_t sub_100A8A0C0()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 64);
  uint64_t v3 = *(void *)(v1 + 56);
  return _swift_task_switch(sub_100A8A1E0, v3, v2);
}

uint64_t sub_100A8A1E0()
{
  swift_release();
  uint64_t v1 = *(char **)(v0 + 72);
  *(void *)&v1[OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate_acceptCloudKitShareAttempt] = 0;

  swift_release();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_100A8A260(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[8] = a4;
  v5[9] = a5;
  sub_1005057FC(&qword_101672BB0);
  v5[10] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  v5[11] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  v5[12] = v7;
  v5[13] = *(void *)(v7 + 64);
  v5[14] = swift_task_alloc();
  v5[15] = swift_task_alloc();
  v5[16] = type metadata accessor for MainActor();
  v5[17] = static MainActor.shared.getter();
  uint64_t v9 = dispatch thunk of Actor.unownedExecutor.getter();
  v5[18] = v9;
  v5[19] = v8;
  return _swift_task_switch(sub_100A8A3A0, v9, v8);
}

uint64_t sub_100A8A3A0()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  v0[20] = Strong;
  if (!Strong)
  {
    swift_release();
    goto LABEL_7;
  }
  if (*(void *)(Strong + OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate_acceptCloudKitShareAlertController))
  {
    uint64_t v2 = (void *)swift_task_alloc();
    v0[21] = v2;
    *uint64_t v2 = v0;
    v2[1] = sub_100A8AA90;
    return sub_100A7EEA4();
  }
  id v5 = sub_100A70A50();
  id v6 = [v5 presentedViewController];

  if (!v6) {
    goto LABEL_15;
  }
  self;
  uint64_t v7 = (void *)swift_dynamicCastObjCClass();
  if (!v7) {
    goto LABEL_14;
  }
  id v8 = [v7 topViewController];

  if (!v8)
  {
LABEL_15:
    uint64_t v9 = sub_100A70A50();
    goto LABEL_16;
  }
  type metadata accessor for CRLiOSBoardViewController();
  uint64_t v9 = (void *)swift_dynamicCastClass();
  id v6 = v8;
  if (!v9)
  {
LABEL_14:

    goto LABEL_15;
  }
LABEL_16:
  id v10 = [v9 presentedViewController];
  v0[22] = v10;

  if (v10)
  {
    sub_10050BF48(0, &qword_10168E230);
    if ([v10 isKindOfClass:swift_getObjCClassFromMetadata()])
    {
      id v11 = sub_100A70A50();
      id v12 = [v11 presentedViewController];

      if (v12)
      {
        self;
        uint64_t v13 = (void *)swift_dynamicCastObjCClass();
        if (!v13)
        {
LABEL_22:

          goto LABEL_23;
        }
        id v14 = [v13 topViewController];

        if (v14)
        {
          type metadata accessor for CRLiOSBoardViewController();
          uint64_t v15 = swift_dynamicCastClass();
          id v12 = v14;
          if (v15)
          {
LABEL_24:
            v0[23] = v15;
            id v16 = (void *)swift_task_alloc();
            v0[24] = v16;
            *id v16 = v0;
            v16[1] = sub_100A8B1E4;
            return sub_100B758E8(1);
          }
          goto LABEL_22;
        }
      }
LABEL_23:
      uint64_t v15 = (uint64_t)sub_100A70A50();
      goto LABEL_24;
    }
  }
  if (sub_100A70DDC())
  {
    v0[26] = static MainActor.shared.getter();
    uint64_t v18 = dispatch thunk of Actor.unownedExecutor.getter();
    v0[27] = v18;
    v0[28] = v17;
    return _swift_task_switch(sub_100A8B734, v18, v17);
  }
  swift_release();
  uint64_t v19 = v0[15];
  uint64_t v20 = v0[9];
  uint64_t v21 = (void *)(v19 + *(int *)(sub_1005057FC(&qword_101677100) + 48));
  sub_100A982B0(v20, v19, type metadata accessor for CRLBoardIdentifier);
  *uint64_t v21 = 0;
  v21[1] = 0xE000000000000000;
  swift_storeEnumTagMultiPayload();
  uint64_t v22 = sub_100A701F0();
  if (v22)
  {
    uint64_t v23 = (void *)v22;
    uint64_t v24 = v0[20];
    uint64_t v25 = OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate_window;
    id v26 = *(void **)(v24 + OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate_window);
    if (v26 && [v26 isUserInteractionEnabled])
    {
      id v27 = *(void **)(v24 + v25);
      if (!v27
        || (id v28 = [v27 rootViewController]) == 0
        || (uint64_t v29 = v28,
            id v30 = objc_msgSend(v28, "crl_windowWrapper"),
            v29,
            !v30)
        || (id v31 = [v30 newWrapperBeginningIgnoringUserInteractionSafely], v30, !v31))
      {
        if (qword_10166F9D8 != -1) {
          swift_once();
        }
        swift_beginAccess();
        id v32 = (id)static OS_os_log.crlError;
        uint64_t v33 = static os_log_type_t.error.getter();
        sub_100BAC898((uint64_t)v32, (uint64_t)&_mh_execute_header, v33, (uint64_t)"Could not create token for ignoring user interaction; view hierarchy may not be set up yet",
          90,
          2,
          (uint64_t)_swiftEmptyArrayStorage);

        id v31 = 0;
      }
      uint64_t v34 = (void *)v0[20];
      uint64_t v35 = v0[15];
      uint64_t v36 = v0[14];
      uint64_t v37 = v0[12];
      uint64_t v38 = v0[10];
      uint64_t v48 = v0[13];
      uint64_t v39 = swift_allocObject();
      *(void *)(v39 + 16) = v31;
      uint64_t v40 = type metadata accessor for TaskPriority();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v40 - 8) + 56))(v38, 1, 1, v40);
      sub_100A982B0(v35, v36, type metadata accessor for CRLBoardLibraryViewModel.Item);
      swift_retain();
      id v41 = v34;
      uint64_t v42 = static MainActor.shared.getter();
      unint64_t v43 = (*(unsigned __int8 *)(v37 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v37 + 80);
      unint64_t v44 = (v48 + v43 + 7) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v45 = swift_allocObject();
      *(void *)(v45 + 16) = v42;
      *(void *)(v45 + 24) = &protocol witness table for MainActor;
      sub_100A98C58(v36, v45 + v43, type metadata accessor for CRLBoardLibraryViewModel.Item);
      *(void *)(v45 + v44) = v39;
      *(void *)(v45 + ((v44 + 15) & 0xFFFFFFFFFFFFFFF8)) = v41;
      sub_1005912D0(v38, (uint64_t)&unk_10168E3A0, v45);
      swift_release();
      swift_release();
    }
  }
  uint64_t v46 = (char *)v0[20];
  uint64_t v47 = v0[15];
  *(void *)&v46[OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate_acceptCloudKitShareAttempt] = 0;

  swift_release();
  sub_100A98CC0(v47, type metadata accessor for CRLBoardLibraryViewModel.Item);
LABEL_7:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_100A8AA90()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 152);
  uint64_t v3 = *(void *)(v1 + 144);
  return _swift_task_switch(sub_100A8ABB0, v3, v2);
}

uint64_t sub_100A8ABB0()
{
  id v1 = sub_100A70A50();
  id v2 = [v1 presentedViewController];

  if (!v2) {
    goto LABEL_6;
  }
  self;
  uint64_t v3 = (void *)swift_dynamicCastObjCClass();
  if (!v3) {
    goto LABEL_5;
  }
  id v4 = [v3 topViewController];

  if (v4)
  {
    type metadata accessor for CRLiOSBoardViewController();
    uint64_t v5 = (void *)swift_dynamicCastClass();
    id v2 = v4;
    if (v5) {
      goto LABEL_7;
    }
LABEL_5:
  }
LABEL_6:
  uint64_t v5 = sub_100A70A50();
LABEL_7:
  id v6 = [v5 presentedViewController];
  v0[22] = v6;

  if (v6)
  {
    sub_10050BF48(0, &qword_10168E230);
    if ([v6 isKindOfClass:swift_getObjCClassFromMetadata()])
    {
      id v7 = sub_100A70A50();
      id v8 = [v7 presentedViewController];

      if (v8)
      {
        self;
        uint64_t v9 = (void *)swift_dynamicCastObjCClass();
        if (!v9)
        {
LABEL_13:

          goto LABEL_14;
        }
        id v10 = [v9 topViewController];

        if (v10)
        {
          type metadata accessor for CRLiOSBoardViewController();
          uint64_t v11 = swift_dynamicCastClass();
          id v8 = v10;
          if (v11)
          {
LABEL_15:
            v0[23] = v11;
            id v12 = (void *)swift_task_alloc();
            v0[24] = v12;
            *id v12 = v0;
            v12[1] = sub_100A8B1E4;
            return sub_100B758E8(1);
          }
          goto LABEL_13;
        }
      }
LABEL_14:
      uint64_t v11 = (uint64_t)sub_100A70A50();
      goto LABEL_15;
    }
  }
  if (sub_100A70DDC())
  {
    v0[26] = static MainActor.shared.getter();
    uint64_t v15 = dispatch thunk of Actor.unownedExecutor.getter();
    v0[27] = v15;
    v0[28] = v14;
    return _swift_task_switch(sub_100A8B734, v15, v14);
  }
  else
  {
    swift_release();
    uint64_t v16 = v0[15];
    uint64_t v17 = v0[9];
    uint64_t v18 = (void *)(v16 + *(int *)(sub_1005057FC(&qword_101677100) + 48));
    sub_100A982B0(v17, v16, type metadata accessor for CRLBoardIdentifier);
    *uint64_t v18 = 0;
    v18[1] = 0xE000000000000000;
    swift_storeEnumTagMultiPayload();
    uint64_t v19 = sub_100A701F0();
    if (v19)
    {
      uint64_t v20 = (void *)v19;
      uint64_t v21 = v0[20];
      uint64_t v22 = OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate_window;
      uint64_t v23 = *(void **)(v21 + OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate_window);
      if (v23 && [v23 isUserInteractionEnabled])
      {
        uint64_t v24 = *(void **)(v21 + v22);
        if (!v24
          || (id v25 = [v24 rootViewController]) == 0
          || (id v26 = v25,
              id v27 = objc_msgSend(v25, "crl_windowWrapper"),
              v26,
              !v27)
          || (id v28 = [v27 newWrapperBeginningIgnoringUserInteractionSafely], v27, !v28))
        {
          if (qword_10166F9D8 != -1) {
            swift_once();
          }
          swift_beginAccess();
          id v29 = (id)static OS_os_log.crlError;
          uint64_t v30 = static os_log_type_t.error.getter();
          sub_100BAC898((uint64_t)v29, (uint64_t)&_mh_execute_header, v30, (uint64_t)"Could not create token for ignoring user interaction; view hierarchy may not be set up yet",
            90,
            2,
            (uint64_t)_swiftEmptyArrayStorage);

          id v28 = 0;
        }
        id v31 = (void *)v0[20];
        uint64_t v32 = v0[15];
        uint64_t v33 = v0[14];
        uint64_t v34 = v0[12];
        uint64_t v35 = v0[10];
        uint64_t v46 = v0[13];
        uint64_t v36 = swift_allocObject();
        *(void *)(v36 + 16) = v28;
        uint64_t v37 = type metadata accessor for TaskPriority();
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v37 - 8) + 56))(v35, 1, 1, v37);
        sub_100A982B0(v32, v33, type metadata accessor for CRLBoardLibraryViewModel.Item);
        swift_retain();
        id v38 = v31;
        uint64_t v39 = static MainActor.shared.getter();
        unint64_t v40 = (*(unsigned __int8 *)(v34 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80);
        unint64_t v41 = (v46 + v40 + 7) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v42 = swift_allocObject();
        *(void *)(v42 + 16) = v39;
        *(void *)(v42 + 24) = &protocol witness table for MainActor;
        sub_100A98C58(v33, v42 + v40, type metadata accessor for CRLBoardLibraryViewModel.Item);
        *(void *)(v42 + v41) = v36;
        *(void *)(v42 + ((v41 + 15) & 0xFFFFFFFFFFFFFFF8)) = v38;
        sub_1005912D0(v35, (uint64_t)&unk_10168E3A0, v42);
        swift_release();
        swift_release();
      }
    }
    unint64_t v43 = (char *)v0[20];
    uint64_t v44 = v0[15];
    *(void *)&v43[OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate_acceptCloudKitShareAttempt] = 0;

    swift_release();
    sub_100A98CC0(v44, type metadata accessor for CRLBoardLibraryViewModel.Item);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v45 = (uint64_t (*)(void))v0[1];
    return v45();
  }
}

uint64_t sub_100A8B1E4()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 200) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 144);
    uint64_t v4 = *(void *)(v2 + 152);
    uint64_t v5 = sub_100A8BDAC;
  }
  else
  {

    uint64_t v3 = *(void *)(v2 + 144);
    uint64_t v4 = *(void *)(v2 + 152);
    uint64_t v5 = sub_100A8B300;
  }
  return _swift_task_switch(v5, v3, v4);
}

uint64_t sub_100A8B300()
{
  if (sub_100A70DDC())
  {
    *(void *)(v0 + 208) = static MainActor.shared.getter();
    uint64_t v2 = dispatch thunk of Actor.unownedExecutor.getter();
    *(void *)(v0 + 216) = v2;
    *(void *)(v0 + 224) = v1;
    return _swift_task_switch(sub_100A8B734, v2, v1);
  }
  else
  {
    swift_release();
    uint64_t v3 = *(void *)(v0 + 120);
    uint64_t v4 = *(void *)(v0 + 72);
    uint64_t v5 = (void *)(v3 + *(int *)(sub_1005057FC(&qword_101677100) + 48));
    sub_100A982B0(v4, v3, type metadata accessor for CRLBoardIdentifier);
    *uint64_t v5 = 0;
    v5[1] = 0xE000000000000000;
    swift_storeEnumTagMultiPayload();
    uint64_t v6 = sub_100A701F0();
    if (v6)
    {
      uint64_t v7 = (void *)v6;
      uint64_t v8 = *(void *)(v0 + 160);
      uint64_t v9 = OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate_window;
      id v10 = *(void **)(v8 + OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate_window);
      if (v10 && [v10 isUserInteractionEnabled])
      {
        uint64_t v11 = *(void **)(v8 + v9);
        if (!v11
          || (id v12 = [v11 rootViewController]) == 0
          || (uint64_t v13 = v12,
              id v14 = objc_msgSend(v12, "crl_windowWrapper"),
              v13,
              !v14)
          || (id v15 = [v14 newWrapperBeginningIgnoringUserInteractionSafely], v14, !v15))
        {
          if (qword_10166F9D8 != -1) {
            swift_once();
          }
          swift_beginAccess();
          id v16 = (id)static OS_os_log.crlError;
          uint64_t v17 = static os_log_type_t.error.getter();
          sub_100BAC898((uint64_t)v16, (uint64_t)&_mh_execute_header, v17, (uint64_t)"Could not create token for ignoring user interaction; view hierarchy may not be set up yet",
            90,
            2,
            (uint64_t)_swiftEmptyArrayStorage);

          id v15 = 0;
        }
        uint64_t v18 = *(void **)(v0 + 160);
        uint64_t v19 = *(void *)(v0 + 120);
        uint64_t v20 = *(void *)(v0 + 112);
        uint64_t v21 = *(void *)(v0 + 96);
        uint64_t v22 = *(void *)(v0 + 80);
        uint64_t v34 = *(void *)(v0 + 104);
        uint64_t v23 = swift_allocObject();
        *(void *)(v23 + 16) = v15;
        uint64_t v24 = type metadata accessor for TaskPriority();
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v22, 1, 1, v24);
        sub_100A982B0(v19, v20, type metadata accessor for CRLBoardLibraryViewModel.Item);
        swift_retain();
        id v25 = v18;
        uint64_t v26 = static MainActor.shared.getter();
        unint64_t v27 = (*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
        unint64_t v28 = (v34 + v27 + 7) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v29 = swift_allocObject();
        *(void *)(v29 + 16) = v26;
        *(void *)(v29 + 24) = &protocol witness table for MainActor;
        sub_100A98C58(v20, v29 + v27, type metadata accessor for CRLBoardLibraryViewModel.Item);
        *(void *)(v29 + v28) = v23;
        *(void *)(v29 + ((v28 + 15) & 0xFFFFFFFFFFFFFFF8)) = v25;
        sub_1005912D0(v22, (uint64_t)&unk_10168E3A0, v29);
        swift_release();
        swift_release();
      }
    }
    uint64_t v30 = *(char **)(v0 + 160);
    uint64_t v31 = *(void *)(v0 + 120);
    *(void *)&v30[OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate_acceptCloudKitShareAttempt] = 0;

    swift_release();
    sub_100A98CC0(v31, type metadata accessor for CRLBoardLibraryViewModel.Item);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v32 = *(uint64_t (**)(void))(v0 + 8);
    return v32();
  }
}

uint64_t sub_100A8B734()
{
  uint64_t v1 = v0[20];
  uint64_t v2 = static MainActor.shared.getter();
  v0[29] = v2;
  uint64_t v3 = swift_task_alloc();
  v0[30] = v3;
  *(void *)(v3 + 16) = v1;
  uint64_t v4 = (void *)swift_task_alloc();
  v0[31] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_100A8B83C;
  return withCheckedContinuation<A>(isolation:function:_:)(v4, v2, &protocol witness table for MainActor, 0xD000000000000023, 0x800000010126CDD0, sub_100A9A660, v3, (char *)&type metadata for () + 8);
}

uint64_t sub_100A8B83C()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_release();
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 224);
  uint64_t v3 = *(void *)(v1 + 216);
  return _swift_task_switch(sub_100A8B99C, v3, v2);
}

uint64_t sub_100A8B99C()
{
  swift_release();
  uint64_t v1 = *(void *)(v0 + 144);
  uint64_t v2 = *(void *)(v0 + 152);
  return _swift_task_switch(sub_100A8BA00, v1, v2);
}

uint64_t sub_100A8BA00()
{
  swift_release();
  uint64_t v1 = v0[15];
  uint64_t v2 = v0[9];
  uint64_t v3 = (void *)(v1 + *(int *)(sub_1005057FC(&qword_101677100) + 48));
  sub_100A982B0(v2, v1, type metadata accessor for CRLBoardIdentifier);
  *uint64_t v3 = 0;
  v3[1] = 0xE000000000000000;
  swift_storeEnumTagMultiPayload();
  uint64_t v4 = sub_100A701F0();
  if (v4)
  {
    uint64_t v5 = (void *)v4;
    uint64_t v6 = v0[20];
    uint64_t v7 = OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate_window;
    uint64_t v8 = *(void **)(v6 + OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate_window);
    if (v8 && [v8 isUserInteractionEnabled])
    {
      uint64_t v9 = *(void **)(v6 + v7);
      if (!v9
        || (id v10 = [v9 rootViewController]) == 0
        || (uint64_t v11 = v10,
            id v12 = objc_msgSend(v10, "crl_windowWrapper"),
            v11,
            !v12)
        || (id v13 = [v12 newWrapperBeginningIgnoringUserInteractionSafely], v12, !v13))
      {
        if (qword_10166F9D8 != -1) {
          swift_once();
        }
        swift_beginAccess();
        id v14 = (id)static OS_os_log.crlError;
        uint64_t v15 = static os_log_type_t.error.getter();
        sub_100BAC898((uint64_t)v14, (uint64_t)&_mh_execute_header, v15, (uint64_t)"Could not create token for ignoring user interaction; view hierarchy may not be set up yet",
          90,
          2,
          (uint64_t)_swiftEmptyArrayStorage);

        id v13 = 0;
      }
      id v16 = (void *)v0[20];
      uint64_t v17 = v0[15];
      uint64_t v18 = v0[14];
      uint64_t v19 = v0[12];
      uint64_t v20 = v0[10];
      uint64_t v32 = v0[13];
      uint64_t v21 = swift_allocObject();
      *(void *)(v21 + 16) = v13;
      uint64_t v22 = type metadata accessor for TaskPriority();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v20, 1, 1, v22);
      sub_100A982B0(v17, v18, type metadata accessor for CRLBoardLibraryViewModel.Item);
      swift_retain();
      id v23 = v16;
      uint64_t v24 = static MainActor.shared.getter();
      unint64_t v25 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
      unint64_t v26 = (v32 + v25 + 7) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v27 = swift_allocObject();
      *(void *)(v27 + 16) = v24;
      *(void *)(v27 + 24) = &protocol witness table for MainActor;
      sub_100A98C58(v18, v27 + v25, type metadata accessor for CRLBoardLibraryViewModel.Item);
      *(void *)(v27 + v26) = v21;
      *(void *)(v27 + ((v26 + 15) & 0xFFFFFFFFFFFFFFF8)) = v23;
      sub_1005912D0(v20, (uint64_t)&unk_10168E3A0, v27);
      swift_release();
      swift_release();
    }
  }
  unint64_t v28 = (char *)v0[20];
  uint64_t v29 = v0[15];
  *(void *)&v28[OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate_acceptCloudKitShareAttempt] = 0;

  swift_release();
  sub_100A98CC0(v29, type metadata accessor for CRLBoardLibraryViewModel.Item);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v30 = (uint64_t (*)(void))v0[1];
  return v30();
}

uint64_t sub_100A8BDAC()
{
  uint64_t v1 = *(void **)(v0 + 176);
  uint64_t v2 = *(void **)(v0 + 160);

  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t sub_100A8BE60()
{
  if (qword_10166FB38 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v1 = (void *)static OS_os_log.sceneManagement;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117E810;
  *(void *)(inited + 56) = type metadata accessor for CRLiOSSceneDelegate();
  *(void *)(inited + 64) = sub_100A99018((unint64_t *)&unk_10168E260, (void (*)(uint64_t))type metadata accessor for CRLiOSSceneDelegate);
  *(void *)(inited + 32) = v0;
  id v3 = v1;
  v0;
  uint64_t v4 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v3, (uint64_t)&_mh_execute_header, v4, (uint64_t)"Scene delegate (%p) showing Welcome.", 36, 2, inited);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  uint64_t v5 = self;
  id v6 = [v5 mainBundle];
  NSString v7 = String._bridgeToObjectiveC()();
  NSString v8 = String._bridgeToObjectiveC()();
  id v9 = [v6 localizedStringForKey:v7 value:v8 table:0];

  uint64_t v10 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v12 = v11;

  id v13 = sub_100A965B0(0x5F656D6F636C6577, 0xED00006E69617262, 0, 0);
  if (v13)
  {
    id v14 = v13;
    id v15 = sub_100A965B0(0x5F656D6F636C6577, 0xEC00000073636F64, 0, 0);
    if (v15)
    {
      id v16 = v15;
      id v17 = sub_100A965B0(0x5F656D6F636C6577, 0xEE006E6F73726570, 0, 0);
      if (!v17)
      {
        sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"showWelcome()", 13, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/App/CRLiOSSceneDelegate.swift", 87, 2, 1259, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
        sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"showWelcome()", 13, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/App/CRLiOSSceneDelegate.swift", 87, 2, 1259);

        return swift_bridgeObjectRelease();
      }
      uint64_t v67 = v17;
      uint64_t v68 = v10;
      id v18 = [v5 mainBundle];
      NSString v19 = String._bridgeToObjectiveC()();
      NSString v20 = String._bridgeToObjectiveC()();
      id v21 = [v18 localizedStringForKey:v19 value:v20 table:0];

      uint64_t v22 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v65 = v23;
      uint64_t v66 = v22;

      id v24 = [v5 mainBundle];
      NSString v25 = String._bridgeToObjectiveC()();
      NSString v26 = String._bridgeToObjectiveC()();
      id v27 = [v24 localizedStringForKey:v25 value:v26 table:0];

      uint64_t v28 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v63 = v29;
      uint64_t v64 = v28;

      id v30 = [v5 mainBundle];
      NSString v31 = String._bridgeToObjectiveC()();
      NSString v32 = String._bridgeToObjectiveC()();
      id v33 = [v30 localizedStringForKey:v31 value:v32 table:0];

      uint64_t v34 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v61 = v35;
      uint64_t v62 = v34;

      id v36 = [v5 mainBundle];
      NSString v37 = String._bridgeToObjectiveC()();
      NSString v38 = String._bridgeToObjectiveC()();
      id v39 = [v36 localizedStringForKey:v37 value:v38 table:0];

      uint64_t v59 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v60 = v40;

      id v41 = [v5 mainBundle];
      NSString v42 = String._bridgeToObjectiveC()();
      NSString v43 = String._bridgeToObjectiveC()();
      id v44 = [v41 localizedStringForKey:v42 value:v43 table:0];

      uint64_t v45 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v47 = v46;

      id v48 = [v5 mainBundle];
      NSString v49 = String._bridgeToObjectiveC()();
      NSString v50 = String._bridgeToObjectiveC()();
      id v51 = [v48 localizedStringForKey:v49 value:v50 table:0];

      uint64_t v52 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v54 = v53;

      sub_1005057FC(&qword_10168E340);
      uint64_t v55 = swift_initStackObject();
      *(_OWORD *)(v55 + 16) = xmmword_10117DF40;
      *(void *)(v55 + 32) = v66;
      *(void *)(v55 + 40) = v65;
      *(void *)(v55 + 48) = v59;
      *(void *)(v55 + 56) = v60;
      *(void *)(v55 + 64) = v14;
      *(void *)(v55 + 72) = v64;
      *(void *)(v55 + 80) = v63;
      *(void *)(v55 + 88) = v45;
      *(void *)(v55 + 96) = v47;
      *(void *)(v55 + 104) = v16;
      *(void *)(v55 + 112) = v62;
      *(void *)(v55 + 120) = v61;
      *(void *)(v55 + 128) = v52;
      *(void *)(v55 + 136) = v54;
      *(void *)(v55 + 144) = v67;
      id v14 = v14;
      id v56 = v16;
      id v57 = v67;
      sub_100A8D978(v68, v12, v55);
      swift_setDeallocating();
      sub_1005057FC(&qword_10168E348);
      swift_arrayDestroy();
    }
    else
    {
      sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"showWelcome()", 13, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/App/CRLiOSSceneDelegate.swift", 87, 2, 1258, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"showWelcome()", 13, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/App/CRLiOSSceneDelegate.swift", 87, 2, 1258);
    }
  }
  else
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"showWelcome()", 13, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/App/CRLiOSSceneDelegate.swift", 87, 2, 1257, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"showWelcome()", 13, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/App/CRLiOSSceneDelegate.swift", 87, 2, 1257);
  }
  return swift_bridgeObjectRelease();
}

void sub_100A8C724()
{
  uint64_t v1 = type metadata accessor for Locale();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1, v3);
  uint64_t v5 = (char *)&v109 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10166FB38 != -1) {
    swift_once();
  }
  swift_beginAccess();
  id v6 = (void *)static OS_os_log.sceneManagement;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117E810;
  *(void *)(inited + 56) = type metadata accessor for CRLiOSSceneDelegate();
  *(void *)(inited + 64) = sub_100A99018((unint64_t *)&unk_10168E260, (void (*)(uint64_t))type metadata accessor for CRLiOSSceneDelegate);
  *(void *)(inited + 32) = v0;
  id v8 = v6;
  id v127 = v0;
  uint64_t v9 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v8, (uint64_t)&_mh_execute_header, v9, (uint64_t)"Scene delegate (%p) showing What's New.", 39, 2, inited);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  id v128 = self;
  id v10 = [v128 mainBundle];
  NSString v11 = String._bridgeToObjectiveC()();
  NSString v12 = String._bridgeToObjectiveC()();
  id v13 = [v10 localizedStringForKey:v11 value:v12 table:0];

  uint64_t v126 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v129 = v14;

  uint64_t v132 = &type metadata for CRLFeatureFlags;
  unint64_t v15 = sub_1005396A8();
  unint64_t v133 = v15;
  LOBYTE(v131[0]) = 14;
  LOBYTE(v10) = isFeatureEnabled(_:)();
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v131);
  if (v10)
  {
    unint64_t v16 = v15;
    uint64_t v17 = self;
    id v18 = [self currentLocale];
    static Locale._unconditionallyBridgeFromObjectiveC(_:)();

    Class isa = Locale._bridgeToObjectiveC()().super.isa;
    (*(void (**)(char *, uint64_t))(v2 + 8))(v5, v1);
    NSString v20 = (void *)v17;
    unint64_t v15 = v16;
    unsigned int v21 = [v20 isLocaleSupported:isa];
  }
  else
  {
    unsigned int v21 = 0;
  }
  uint64_t v132 = &type metadata for CRLPencilAndPaperFeatureFlags;
  unint64_t v133 = sub_1005C5D40();
  LOBYTE(v131[0]) = 0;
  char v22 = isFeatureEnabled(_:)();
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v131);
  if ((v22 & 1) != 0
    && (uint64_t v132 = &type metadata for CRLFeatureFlags,
        unint64_t v133 = v15,
        LOBYTE(v131[0]) = 15,
        char v23 = isFeatureEnabled(_:)(),
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v131),
        (v23 & 1) != 0))
  {
    if (qword_10166F928 != -1) {
      swift_once();
    }
    id v24 = (unsigned char *)(qword_101692F10
                  + OBJC_IVAR____TtC8Freeform38CRLDeviceManagementRestrictionsManager_isMathPaperSolvingAllowed);
    swift_beginAccess();
    char v25 = *v24 ^ 1;
  }
  else
  {
    char v25 = 1;
  }
  id v26 = sub_100A965B0(0xD000000000000016, 0x800000010123D360, 1, 0);
  if (v26)
  {
    id v27 = v26;
    id v28 = sub_100A965B0(0xD000000000000026, 0x800000010126E0D0, 0, 0);
    if (v28)
    {
      id v124 = v28;
      unint64_t v112 = v15;
      id v119 = v27;
      LODWORD(v125) = v21;
      id v29 = v128;
      id v30 = [v128 mainBundle];
      NSString v31 = String._bridgeToObjectiveC()();
      NSString v32 = String._bridgeToObjectiveC()();
      id v33 = [v30 localizedStringForKey:v31 value:v32 table:0];

      uint64_t v111 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v118 = v34;

      id v35 = [v29 mainBundle];
      NSString v36 = String._bridgeToObjectiveC()();
      NSString v37 = String._bridgeToObjectiveC()();
      id v38 = [v35 localizedStringForKey:v36 value:v37 table:0];

      uint64_t v116 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v123 = v39;

      id v40 = [v29 mainBundle];
      NSString v41 = String._bridgeToObjectiveC()();
      NSString v42 = String._bridgeToObjectiveC()();
      id v43 = [v40 localizedStringForKey:v41 value:v42 table:0];

      uint64_t v110 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v117 = v44;

      id v45 = [v29 mainBundle];
      NSString v46 = String._bridgeToObjectiveC()();
      NSString v47 = String._bridgeToObjectiveC()();
      id v48 = [v45 localizedStringForKey:v46 value:v47 table:0];

      uint64_t v115 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v122 = v49;

      if (v25 & 1 | ((v125 & 1) == 0))
      {
        id v125 = sub_100A965B0(0xD000000000000013, 0x800000010123D180, 1, 0);
        if (!v125)
        {
          sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"showWhatsNew()", 14, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/App/CRLiOSSceneDelegate.swift", 87, 2, 1313, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
          sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"showWhatsNew()", 14, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/App/CRLiOSSceneDelegate.swift", 87, 2, 1313);
        }
        id v121 = sub_100A965B0(0xD000000000000016, 0x8000000101259360, 1, 1);
        if (!v121)
        {
          sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"showWhatsNew()", 14, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/App/CRLiOSSceneDelegate.swift", 87, 2, 1314, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
          sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"showWhatsNew()", 14, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/App/CRLiOSSceneDelegate.swift", 87, 2, 1314);
        }
        id v50 = v128;
        id v51 = [v128 mainBundle];
        NSString v52 = String._bridgeToObjectiveC()();
        NSString v53 = String._bridgeToObjectiveC()();
        id v54 = [v51 localizedStringForKey:v52 value:v53 table:0];

        uint64_t v114 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v120 = v55;

        id v56 = [v50 mainBundle];
        NSString v57 = String._bridgeToObjectiveC()();
        NSString v58 = String._bridgeToObjectiveC()();
        id v59 = [v56 localizedStringForKey:v57 value:v58 table:0];

        uint64_t v113 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v61 = v60;

        id v62 = [v50 mainBundle];
        NSString v63 = String._bridgeToObjectiveC()();
        NSString v64 = String._bridgeToObjectiveC()();
        id v65 = [v62 localizedStringForKey:v63 value:v64 table:0];

        uint64_t v66 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v68 = v67;

        id v69 = [v50 mainBundle];
      }
      else
      {
        id v125 = sub_100A965B0(0xD000000000000016, 0x8000000101259360, 1, 1);
        if (!v125)
        {
          sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"showWhatsNew()", 14, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/App/CRLiOSSceneDelegate.swift", 87, 2, 1304, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
          sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"showWhatsNew()", 14, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/App/CRLiOSSceneDelegate.swift", 87, 2, 1304);
        }
        id v121 = sub_100A965B0(0x6573697270727573, 0xEB00000000786F62, 0, 0);
        if (!v121)
        {
          sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"showWhatsNew()", 14, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/App/CRLiOSSceneDelegate.swift", 87, 2, 1305, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
          sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"showWhatsNew()", 14, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/App/CRLiOSSceneDelegate.swift", 87, 2, 1305);
        }
        id v70 = v128;
        id v71 = [v128 mainBundle];
        NSString v72 = String._bridgeToObjectiveC()();
        NSString v73 = String._bridgeToObjectiveC()();
        id v74 = [v71 localizedStringForKey:v72 value:v73 table:0];

        uint64_t v114 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v120 = v75;

        id v76 = [v70 mainBundle];
        NSString v77 = String._bridgeToObjectiveC()();
        NSString v78 = String._bridgeToObjectiveC()();
        id v79 = [v76 localizedStringForKey:v77 value:v78 table:0];

        uint64_t v113 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v61 = v80;

        id v81 = [v70 mainBundle];
        NSString v82 = String._bridgeToObjectiveC()();
        NSString v83 = String._bridgeToObjectiveC()();
        id v84 = [v81 localizedStringForKey:v82 value:v83 table:0];

        uint64_t v66 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v68 = v85;

        id v69 = [v70 mainBundle];
      }
      NSString v86 = String._bridgeToObjectiveC()();
      NSString v87 = String._bridgeToObjectiveC()();
      id v88 = [v69 localizedStringForKey:v86 value:v87 table:0];

      uint64_t v89 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v91 = v90;

      uint64_t v92 = v125;
      if (!v125)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        return;
      }
      id v93 = v121;
      if (v121)
      {
        sub_1005057FC(&qword_10168E340);
        uint64_t v94 = swift_initStackObject();
        *(_OWORD *)(v94 + 16) = xmmword_10117DF40;
        uint64_t v95 = v123;
        id v96 = v124;
        *(void *)(v94 + 32) = v116;
        *(void *)(v94 + 40) = v95;
        uint64_t v97 = v122;
        *(void *)(v94 + 48) = v115;
        *(void *)(v94 + 56) = v97;
        uint64_t v98 = v114;
        *(void *)(v94 + 64) = v96;
        *(void *)(v94 + 72) = v98;
        *(void *)(v94 + 80) = v120;
        *(void *)(v94 + 88) = v66;
        *(void *)(v94 + 96) = v68;
        *(void *)(v94 + 104) = v92;
        *(void *)(v94 + 112) = v113;
        *(void *)(v94 + 120) = v61;
        *(void *)(v94 + 128) = v89;
        *(void *)(v94 + 136) = v91;
        *(void *)(v94 + 144) = v93;
        uint64_t v130 = v94;
        uint64_t v132 = &type metadata for CRLGenerativePlaygroundFeatureFlags;
        unint64_t v133 = sub_1005C6C64();
        id v99 = v92;
        id v100 = v93;
        id v101 = v99;
        id v102 = v100;
        id v103 = v96;
        LOBYTE(v100) = isFeatureEnabled(_:)();
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v131);
        if (v100)
        {
          uint64_t v132 = &type metadata for CRLFeatureFlags;
          unint64_t v133 = v112;
          LOBYTE(v131[0]) = 13;
          char v104 = isFeatureEnabled(_:)();
          _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v131);
          uint64_t v105 = v129;
          if (v104)
          {
            unsigned __int8 v106 = [(id)type metadata accessor for ImagePlaygroundViewController() available];
            id v107 = v119;
            if (v106)
            {
              v131[0] = v111;
              v131[1] = v118;
              v131[2] = v110;
              uint64_t v132 = v117;
              unint64_t v133 = (unint64_t)v119;
              id v108 = v119;
              sub_100F4A02C(0, 0, (uint64_t)v131);
            }
            else
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
            }
          }
          else
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            id v107 = v119;
          }
        }
        else
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v105 = v129;
          id v107 = v119;
        }
        sub_100A8D978(v126, v105, v130);

        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
    }
    else
    {
      sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"showWhatsNew()", 14, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/App/CRLiOSSceneDelegate.swift", 87, 2, 1287, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"showWhatsNew()", 14, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/App/CRLiOSSceneDelegate.swift", 87, 2, 1287);
    }
  }
  else
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"showWhatsNew()", 14, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/App/CRLiOSSceneDelegate.swift", 87, 2, 1286, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"showWhatsNew()", 14, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/App/CRLiOSSceneDelegate.swift", 87, 2, 1286);
  }
  swift_bridgeObjectRelease();
}

void sub_100A8D978(uint64_t a1, uint64_t a2, uint64_t a3)
{
  NSString v5 = String._bridgeToObjectiveC()();
  id v6 = [self imageNamed:v5];

  id v7 = objc_allocWithZone((Class)OBWelcomeController);
  swift_bridgeObjectRetain();
  id v32 = v6;
  NSString v8 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v9 = [v7 initWithTitle:v8 detailText:0 icon:v32];

  uint64_t v10 = *(void *)(a3 + 16);
  if (v10)
  {
    id v31 = v9;
    id v11 = v9;
    swift_bridgeObjectRetain();
    NSString v12 = (void **)(a3 + 64);
    do
    {
      id v13 = *v12;
      v12 += 5;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      id v14 = v13;
      NSString v15 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRetain();
      NSString v16 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v11 addBulletedListItemWithTitle:v15 description:v16 image:v14 tintColor:0];

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      --v10;
    }
    while (v10);
    swift_bridgeObjectRelease();
    id v9 = v31;
  }
  else
  {
    id v17 = v9;
  }
  id v18 = [self boldButton];
  id v19 = [self mainBundle];
  NSString v20 = String._bridgeToObjectiveC()();
  NSString v21 = String._bridgeToObjectiveC()();
  id v22 = [v19 localizedStringForKey:v20 value:v21 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v23 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v18 setTitle:v23 forState:0];

  [v18 addTarget:v3 action:"didTapWelcomeContinueButton:" forControlEvents:64];
  id v24 = [v9 buttonTray];
  [v24 addButton:v18];

  swift_unknownObjectWeakAssign();
  sub_100A8DECC();
  id v25 = sub_100A70A50();
  id v26 = [v25 presentedViewController];

  if (!v26) {
    goto LABEL_12;
  }
  self;
  id v27 = (void *)swift_dynamicCastObjCClass();
  if (!v27) {
    goto LABEL_11;
  }
  id v28 = [v27 topViewController];

  if (v28)
  {
    type metadata accessor for CRLiOSBoardViewController();
    id v29 = (void *)swift_dynamicCastClass();
    if (v29) {
      goto LABEL_13;
    }
    id v26 = v28;
LABEL_11:
  }
LABEL_12:
  id v29 = sub_100A70A50();
  id v28 = v29;
LABEL_13:
  [v29 presentViewController:v9 animated:1 completion:0];

  id v30 = [v9 presentationController];
  if (v30)
  {
    [v30 setDelegate:v3];
  }
  else
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"showFirstLaunch(mainTitle:bullets:)", 35, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/App/CRLiOSSceneDelegate.swift", 87, 2, 1392, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"showFirstLaunch(mainTitle:bullets:)", 35, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/App/CRLiOSSceneDelegate.swift", 87, 2, 1392);
  }
}

id sub_100A8DE38(void *a1)
{
  id v1 = [a1 userInterfaceStyle];
  id v2 = objc_allocWithZone((Class)UIColor);
  if (v1 == (id)1)
  {
    double v3 = 0.517647059;
    double v4 = 0.803921569;
    double v5 = 0.941176471;
  }
  else
  {
    double v3 = 0.278431373;
    double v4 = 0.537254902;
    double v5 = 0.647058824;
  }

  return [v2 initWithRed:v3 green:v4 blue:v5 alpha:1.0];
}

void sub_100A8DECC()
{
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (!Strong) {
    return;
  }
  id v20 = Strong;
  id v1 = [Strong headerView];
  id v2 = [v1 subviews];

  sub_10050BF48(0, (unint64_t *)&qword_1016725F0);
  unint64_t v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v3 >> 62)
  {
LABEL_20:
    swift_bridgeObjectRetain();
    uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
    if (v4)
    {
LABEL_4:
      uint64_t v5 = 4;
      while (1)
      {
        if ((v3 & 0xC000000000000001) != 0) {
          id v6 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          id v6 = *(id *)(v3 + 8 * v5);
        }
        id v7 = v6;
        uint64_t v8 = v5 - 3;
        if (__OFADD__(v5 - 4, 1))
        {
          __break(1u);
          goto LABEL_20;
        }
        self;
        uint64_t v9 = swift_dynamicCastObjCClass();
        if (v9) {
          break;
        }

        ++v5;
        if (v8 == v4) {
          goto LABEL_11;
        }
      }
      id v11 = (void *)v9;
      swift_bridgeObjectRelease_n();
      id v12 = [v11 layer];
      [v12 setCornerCurve:kCACornerCurveContinuous];

      id v13 = [v11 layer];
      [v13 setCornerRadius:24.0];

      id v14 = [v11 layer];
      [v14 setMasksToBounds:1];

      NSString v15 = String._bridgeToObjectiveC()();
      id v16 = [self colorNamed:v15];

      if (v16)
      {
        id v17 = [v11 layer];
        id v18 = [v16 CGColor];
        [v17 setBorderColor:v18];

        id v19 = [v11 layer];
        [v19 setBorderWidth:1.0];
      }
      uint64_t v10 = v7;
      goto LABEL_16;
    }
  }
  else
  {
    uint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v4) {
      goto LABEL_4;
    }
  }
LABEL_11:
  swift_bridgeObjectRelease_n();
  uint64_t v10 = v20;
LABEL_16:
}

void sub_100A8E268()
{
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v1 = Strong;
    id v8 = [Strong presentationController];
  }
  else
  {
    id v8 = 0;
  }
  uint64_t v2 = swift_unknownObjectWeakLoadStrong();
  if (v2)
  {
    unint64_t v3 = (void *)v2;
    uint64_t v4 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = v8;
    *(void *)(v5 + 24) = v4;
    aBlock[4] = sub_100A98EBC;
    aBlock[5] = v5;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = *(void *)"";
    void aBlock[2] = sub_100679958;
    void aBlock[3] = &unk_101520370;
    id v6 = _Block_copy(aBlock);
    id v7 = v8;
    swift_release();
    [v3 dismissViewControllerAnimated:1 completion:v6];

    _Block_release(v6);
  }
  else
  {
  }
}

void sub_100A8E3F0(uint64_t a1)
{
  if (a1)
  {
    swift_beginAccess();
    uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      unint64_t v3 = Strong;
      [Strong presentationControllerDidDismiss:a1];
    }
  }
  else
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"didTapWelcomeContinueButton(_:)", 31, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/App/CRLiOSSceneDelegate.swift", 87, 2, 1420, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"didTapWelcomeContinueButton(_:)", 31, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/App/CRLiOSSceneDelegate.swift", 87, 2, 1420);
  }
}

uint64_t sub_100A8E568(uint64_t a1)
{
  uint64_t v2 = sub_1005057FC(&qword_10168E108);
  __chkstk_darwin(v2 - 8, v3);
  uint64_t v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1005057FC(&qword_101682E08);
  uint64_t v7 = *(void *)(v6 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v5, a1, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v5, 0, 1, v6);
  return sub_100A70C14((uint64_t)v5);
}

uint64_t sub_100A8E66C(uint64_t a1)
{
  v2[2] = a1;
  v2[3] = v1;
  type metadata accessor for CRLBoardIdentifier(0);
  v2[4] = swift_task_alloc();
  type metadata accessor for CRLBoardLibraryViewModel.Folder(0);
  v2[5] = swift_task_alloc();
  v2[6] = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  v2[7] = swift_task_alloc();
  type metadata accessor for MainActor();
  v2[8] = static MainActor.shared.getter();
  uint64_t v4 = dispatch thunk of Actor.unownedExecutor.getter();
  v2[9] = v4;
  v2[10] = v3;
  return _swift_task_switch(sub_100A8E78C, v4, v3);
}

uint64_t sub_100A8E78C()
{
  sub_100A982B0(v0[2], v0[7], type metadata accessor for CRLBoardLibraryViewModel.Item);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload)
  {
    swift_release();
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"viewController(for:)", 20, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/App/CRLiOSSceneDelegate.swift", 87, 2, 1605, (uint64_t)"Library should not be selectable", 32, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"viewController(for:)", 20, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/App/CRLiOSSceneDelegate.swift", 87, 2, 1605);
    uint64_t v5 = 0;
    goto LABEL_5;
  }
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v2 = v0[7];
    uint64_t v3 = v0[5];
    swift_release();
    sub_100A98C58(v2, v3, type metadata accessor for CRLBoardLibraryViewModel.Folder);
    sub_100A8FCC8(v3);
    uint64_t v5 = v4;
    sub_100A98CC0(v3, type metadata accessor for CRLBoardLibraryViewModel.Folder);
LABEL_5:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v6 = (uint64_t (*)(uint64_t))v0[1];
    return v6(v5);
  }
  uint64_t v8 = v0[7];
  uint64_t v9 = v0[4];
  uint64_t v10 = (uint64_t *)(v8 + *(int *)(sub_1005057FC(&qword_101677100) + 48));
  uint64_t v11 = *v10;
  uint64_t v12 = v10[1];
  v0[11] = v12;
  sub_100A98C58(v8, v9, type metadata accessor for CRLBoardIdentifier);
  id v13 = (void *)swift_task_alloc();
  v0[12] = v13;
  *id v13 = v0;
  v13[1] = sub_100A8EA10;
  uint64_t v14 = v0[4];
  return sub_100A901D8(v14, v11, v12);
}

uint64_t sub_100A8EA10(uint64_t a1)
{
  uint64_t v4 = *(void **)v2;
  *(void *)(*(void *)v2 + 104) = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (v1)
  {
    uint64_t v5 = v4[9];
    uint64_t v6 = v4[10];
    uint64_t v7 = sub_100A8EC0C;
  }
  else
  {
    v4[14] = a1;
    uint64_t v5 = v4[9];
    uint64_t v6 = v4[10];
    uint64_t v7 = sub_100A8EB5C;
  }
  return _swift_task_switch(v7, v5, v6);
}

uint64_t sub_100A8EB5C()
{
  uint64_t v1 = v0[4];
  swift_release();
  sub_100A98CC0(v1, type metadata accessor for CRLBoardIdentifier);
  uint64_t v2 = v0[14];
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = (uint64_t (*)(uint64_t))v0[1];
  return v3(v2);
}

uint64_t sub_100A8EC0C()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_release();
  sub_100A98CC0(v1, type metadata accessor for CRLBoardIdentifier);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

void sub_100A8ECB0(void *a1, char a2, char a3, char a4)
{
  id v8 = sub_100A70A50();
  id v16 = [v8 viewControllerForColumn:2];

  if (!v16) {
    goto LABEL_7;
  }
  self;
  uint64_t v9 = (void *)swift_dynamicCastObjCClass();
  if (!v9)
  {

LABEL_7:
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"setContentViewController(_:push:show:animated:)", 47, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/App/CRLiOSSceneDelegate.swift", 87, 2, 1841, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"setContentViewController(_:push:show:animated:)", 47, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/App/CRLiOSSceneDelegate.swift", 87, 2, 1841);
    return;
  }
  uint64_t v10 = v9;
  if ((a2 & 1) == 0)
  {
    sub_1005057FC((uint64_t *)&unk_101676C10);
    uint64_t v12 = swift_allocObject();
    *(_OWORD *)(v12 + 16) = xmmword_101177E70;
    *(void *)(v12 + 32) = a1;
    specialized Array._endMutation()();
    sub_10050BF48(0, (unint64_t *)&qword_1016745A0);
    id v13 = a1;
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v10 setViewControllers:isa animated:a4 & 1];

    if ((a3 & 1) == 0) {
      goto LABEL_5;
    }
LABEL_9:
    id v15 = sub_100A70A50();
    [v15 showColumn:2];

    uint64_t v11 = v15;
    goto LABEL_10;
  }
  [v9 pushViewController:a1 animated:a4 & 1];
  if (a3) {
    goto LABEL_9;
  }
LABEL_5:
  uint64_t v11 = v16;
LABEL_10:
}

uint64_t sub_100A8EEEC(uint64_t a1, char a2)
{
  *(unsigned char *)(v3 + 312) = a2;
  *(void *)(v3 + 136) = a1;
  *(void *)(v3 + 144) = v2;
  type metadata accessor for CRLBoardCRDTData(0);
  *(void *)(v3 + 152) = swift_task_alloc();
  uint64_t v4 = type metadata accessor for UUID();
  *(void *)(v3 + 160) = v4;
  *(void *)(v3 + 168) = *(void *)(v4 - 8);
  *(void *)(v3 + 176) = swift_task_alloc();
  type metadata accessor for CRLBoardIdentifier(0);
  *(void *)(v3 + 184) = swift_task_alloc();
  type metadata accessor for MainActor();
  *(void *)(v3 + 192) = static MainActor.shared.getter();
  uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
  *(void *)(v3 + 200) = v6;
  *(void *)(v3 + 208) = v5;
  return _swift_task_switch(sub_100A8F03C, v6, v5);
}

uint64_t sub_100A8F03C()
{
  id v1 = sub_100A70A50();
  id v2 = [v1 presentedViewController];
  *(void *)(v0 + 216) = v2;

  if (!v2) {
    goto LABEL_11;
  }
  self;
  uint64_t v3 = swift_dynamicCastObjCClass();
  *(void *)(v0 + 224) = v3;
  if (!v3)
  {

LABEL_11:
    uint64_t v23 = *(void *)(v0 + 144);
    id v24 = [objc_allocWithZone((Class)UINavigationController) initWithRootViewController:*(void *)(v0 + 136)];
    *(void *)(v0 + 280) = v24;
    [v24 setModalPresentationStyle:4];
    [v24 setTransitioningDelegate:*(void *)(v23 + OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate_boardViewControllerTransitioningDelegate)];
    *(void *)(v0 + 288) = sub_100A70A50();
    id v25 = (void *)swift_task_alloc();
    *(void *)(v0 + 296) = v25;
    *id v25 = v0;
    v25[1] = sub_100A8F9C0;
    char v26 = *(unsigned char *)(v0 + 312);
    uint64_t v27 = (uint64_t)v24;
    goto LABEL_15;
  }
  id v4 = sub_100A70A50();
  id v5 = [v4 presentedViewController];

  if (v5)
  {
    self;
    uint64_t v6 = (void *)swift_dynamicCastObjCClass();
    if (!v6)
    {
      id v7 = v5;
LABEL_13:

      goto LABEL_14;
    }
    id v7 = [v6 topViewController];

    if (v7)
    {
      type metadata accessor for CRLiOSBoardViewController();
      uint64_t v8 = swift_dynamicCastClass();
      if (v8)
      {
        NSString v47 = (char *)v8;
        if (qword_10166FB38 != -1) {
          swift_once();
        }
        uint64_t v9 = *(void *)(v0 + 176);
        uint64_t v44 = *(void *)(v0 + 184);
        uint64_t v45 = *(void *)(v0 + 168);
        uint64_t v10 = *(void *)(v0 + 152);
        uint64_t v11 = *(void *)(v0 + 136);
        uint64_t v46 = *(void *)(v0 + 160);
        swift_beginAccess();
        NSString v41 = (void *)static OS_os_log.sceneManagement;
        sub_1005057FC((uint64_t *)&unk_101672B40);
        uint64_t inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = xmmword_10117E810;
        id v13 = *(char **)(*(void *)(v11 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_editingCoordinator)
                       + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard);
        uint64_t v42 = OBJC_IVAR____TtC8Freeform8CRLBoard_data;
        uint64_t v14 = *(void *)&v13[OBJC_IVAR____TtC8Freeform8CRLBoard_data]
            + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
        swift_beginAccess();
        sub_100A982B0(v14, v10, type metadata accessor for CRLBoardCRDTData);
        id v43 = v41;
        id v15 = v13;
        swift_retain();
        sub_1005057FC(&qword_101674550);
        CRRegister.wrappedValue.getter();
        sub_100A98CC0(v10, type metadata accessor for CRLBoardCRDTData);
        swift_release();
        id v16 = (uint64_t *)(*(void *)&v13[v42] + OBJC_IVAR____TtC8Freeform12CRLBoardData_ownerName);
        uint64_t v17 = *v16;
        unint64_t v18 = v16[1];
        swift_bridgeObjectRetain();
        sub_100753370(v9, v17, v18, v44);

        (*(void (**)(uint64_t, uint64_t, uint64_t))(v45 + 16))(v9, v44, v46);
        sub_100A98CC0(v44, type metadata accessor for CRLBoardIdentifier);
        uint64_t v19 = UUID.uuidString.getter();
        uint64_t v21 = v20;
        (*(void (**)(uint64_t, uint64_t))(v45 + 8))(v9, v46);
        *(void *)(inited + 56) = &type metadata for String;
        *(void *)(inited + 64) = sub_100528BE4();
        *(void *)(inited + 32) = v19;
        *(void *)(inited + 40) = v21;
        uint64_t v22 = static os_log_type_t.default.getter();
        sub_100BAC898((uint64_t)v43, (uint64_t)&_mh_execute_header, v22, (uint64_t)"Tearing down the outgoing board view controller for identifier %{public}@", 73, 2, inited);
        swift_setDeallocating();
        sub_1005057FC(&qword_101672B50);
        swift_arrayDestroy();

        sub_100A76CF0(v47, 0);
      }
      goto LABEL_13;
    }
  }
LABEL_14:
  id v28 = *(void **)(v0 + 136);
  uint64_t v29 = *(void *)(v0 + 144);
  id v30 = [objc_allocWithZone((Class)UIViewController) initWithNibName:0 bundle:0];
  *(void *)(v0 + 232) = v30;
  id v31 = [v30 navigationItem];
  NSString v32 = String._bridgeToObjectiveC()();
  id v33 = [objc_allocWithZone((Class)UIBarButtonItem) initWithTitle:v32 style:0 target:0 action:0];

  [v31 setBackBarButtonItem:v33];
  id v34 = [objc_allocWithZone((Class)UINavigationController) initWithRootViewController:v28];
  *(void *)(v0 + 240) = v34;
  [v34 setModalPresentationStyle:4];
  [v34 setTransitioningDelegate:*(void *)(v29 + OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate_boardViewControllerTransitioningDelegate)];
  *(void *)(v0 + 248) = sub_1005057FC((uint64_t *)&unk_101676C10);
  uint64_t v35 = swift_allocObject();
  *(_OWORD *)(v35 + 16) = xmmword_10117DF50;
  *(void *)(v35 + 32) = v30;
  *(void *)(v35 + 40) = v28;
  specialized Array._endMutation()();
  *(void *)(v0 + 256) = sub_10050BF48(0, (unint64_t *)&qword_1016745A0);
  id v36 = v30;
  id v37 = v28;
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v34 setViewControllers:isa];

  uint64_t v39 = (void *)swift_task_alloc();
  *(void *)(v0 + 264) = v39;
  *uint64_t v39 = v0;
  v39[1] = sub_100A8F6AC;
  char v26 = *(unsigned char *)(v0 + 312);
  uint64_t v27 = (uint64_t)v34;
LABEL_15:
  return sub_100B75534(v27, v26);
}

uint64_t sub_100A8F6AC()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 272) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 208);
  uint64_t v4 = *(void *)(v2 + 200);
  if (v0) {
    id v5 = sub_100A8FB98;
  }
  else {
    id v5 = sub_100A8F7E8;
  }
  return _swift_task_switch(v5, v4, v3);
}

id sub_100A8F7E8()
{
  uint64_t v2 = (void *)v0[29];
  id v1 = (void *)v0[30];
  uint64_t v3 = (void *)v0[28];
  uint64_t v4 = (void *)v0[17];
  swift_release();
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_101177E70;
  *(void *)(v5 + 32) = v2;
  specialized Array._endMutation()();
  id v6 = v2;
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v1 setViewControllers:isa];

  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_101177E70;
  *(void *)(v8 + 32) = v4;
  specialized Array._endMutation()();
  id v9 = v4;
  Class v10 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v3 setViewControllers:v10];

  id result = [v1 view];
  if (result)
  {
    uint64_t v12 = result;
    uint64_t v14 = (void *)v0[29];
    id v13 = (void *)v0[30];
    id v15 = (void *)v0[27];
    [result setHidden:1];

    [v13 dismissViewControllerAnimated:0 completion:0];
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    id v16 = (uint64_t (*)(void))v0[1];
    return (id)v16();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100A8F9C0()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 304) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 200);
    uint64_t v4 = *(void *)(v2 + 208);
    uint64_t v5 = sub_100A8FC34;
  }
  else
  {

    uint64_t v3 = *(void *)(v2 + 200);
    uint64_t v4 = *(void *)(v2 + 208);
    uint64_t v5 = sub_100A8FADC;
  }
  return _swift_task_switch(v5, v3, v4);
}

uint64_t sub_100A8FADC()
{
  swift_release();
  uint64_t v1 = sub_100A701F0();
  uint64_t v2 = *(void **)(v0 + 280);
  if (v1)
  {
    uint64_t v3 = (unsigned char *)v1;
    sub_100D76A6C(1);
    v3[OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_isPresentingBoardNavigationController] = 1;
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_100A8FB98()
{
  uint64_t v1 = (void *)v0[29];
  uint64_t v2 = (void *)v0[30];
  uint64_t v3 = (void *)v0[27];
  swift_release();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_100A8FC34()
{
  uint64_t v1 = (void *)v0[35];
  uint64_t v2 = (void *)v0[36];
  swift_release();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

void sub_100A8FCC8(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for CRLBoardLibraryViewModel.Folder(0);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v6 = __chkstk_darwin(v3, v5);
  uint64_t v47 = (uint64_t)&v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6, v8);
  uint64_t v44 = (uint64_t)&v43 - v9;
  uint64_t v48 = sub_1005057FC(&qword_10168E120);
  __chkstk_darwin(v48, v10);
  uint64_t v12 = (char *)&v43 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1005057FC(&qword_10168E128);
  uint64_t v15 = __chkstk_darwin(v13 - 8, v14);
  uint64_t v45 = (uint64_t)&v43 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __chkstk_darwin(v15, v17);
  uint64_t v20 = (char *)&v43 - v19;
  __chkstk_darwin(v18, v21);
  uint64_t v23 = (char *)&v43 - v22;
  uint64_t v46 = a1;
  sub_100A982B0(a1, (uint64_t)&v43 - v22, type metadata accessor for CRLBoardLibraryViewModel.Folder);
  id v24 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56);
  uint64_t v25 = 1;
  v24(v23, 0, 1, v3);
  uint64_t v26 = sub_100A701F0();
  if (v26)
  {
    uint64_t v27 = (void *)v26;
    sub_100A982B0(v26 + OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_folder, (uint64_t)v20, type metadata accessor for CRLBoardLibraryViewModel.Folder);

    uint64_t v25 = 0;
  }
  v24(v20, v25, 1, v3);
  uint64_t v28 = (uint64_t)&v12[*(int *)(v48 + 48)];
  sub_100522E9C((uint64_t)v23, (uint64_t)v12, &qword_10168E128);
  sub_100522E9C((uint64_t)v20, v28, &qword_10168E128);
  uint64_t v29 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
  if (v29((uint64_t)v12, 1, v3) == 1)
  {
    sub_100522F00((uint64_t)v20, &qword_10168E128);
    sub_100522F00((uint64_t)v23, &qword_10168E128);
    if (v29(v28, 1, v3) == 1)
    {
      sub_100522F00((uint64_t)v12, &qword_10168E128);
LABEL_10:
      sub_100A701F0();
      return;
    }
    goto LABEL_8;
  }
  uint64_t v30 = v45;
  sub_100522E9C((uint64_t)v12, v45, &qword_10168E128);
  if (v29(v28, 1, v3) == 1)
  {
    sub_100522F00((uint64_t)v20, &qword_10168E128);
    sub_100522F00((uint64_t)v23, &qword_10168E128);
    sub_100A98CC0(v30, type metadata accessor for CRLBoardLibraryViewModel.Folder);
LABEL_8:
    sub_100522F00((uint64_t)v12, &qword_10168E120);
    goto LABEL_11;
  }
  uint64_t v31 = v44;
  sub_100A98C58(v28, v44, type metadata accessor for CRLBoardLibraryViewModel.Folder);
  char v32 = sub_100DDC744(v30, v31);
  sub_100A98CC0(v31, type metadata accessor for CRLBoardLibraryViewModel.Folder);
  sub_100522F00((uint64_t)v20, &qword_10168E128);
  sub_100522F00((uint64_t)v23, &qword_10168E128);
  sub_100A98CC0(v30, type metadata accessor for CRLBoardLibraryViewModel.Folder);
  sub_100522F00((uint64_t)v12, &qword_10168E128);
  if (v32) {
    goto LABEL_10;
  }
LABEL_11:
  uint64_t v33 = v47;
  sub_100A982B0(v46, v47, type metadata accessor for CRLBoardLibraryViewModel.Folder);
  sub_100A70728();
  if (!v34)
  {
    __break(1u);
    goto LABEL_18;
  }
  uint64_t v35 = v34;
  sub_100A708BC();
  if (!v36)
  {
LABEL_18:
    __break(1u);
    return;
  }
  id v37 = v36;
  sub_100A70728();
  if (v38)
  {
    uint64_t v39 = v38;
    *((void *)&v50 + 1) = type metadata accessor for CRLBoardLibrary();
    id v51 = &off_101532E40;
    *(void *)&long long v49 = v39;
  }
  else
  {
    id v51 = 0;
    long long v49 = 0u;
    long long v50 = 0u;
  }
  id v40 = objc_allocWithZone((Class)type metadata accessor for CRLiOSFolderGridViewController());
  id v41 = v1;
  uint64_t v42 = (char *)sub_100A96080(v33, v35, v37, (uint64_t)v41, (uint64_t)&v49, 1, v40);

  *(void *)&v42[OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_thumbnailProvider + 8] = &off_101520148;
  swift_unknownObjectWeakAssign();
}

uint64_t sub_100A901D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[7] = a3;
  v4[8] = v3;
  v4[5] = a1;
  v4[6] = a2;
  type metadata accessor for CRLBoardCRDTData(0);
  v4[9] = swift_task_alloc();
  type metadata accessor for UUID();
  v4[10] = swift_task_alloc();
  type metadata accessor for CRLBoardIdentifier(0);
  v4[11] = swift_task_alloc();
  v4[12] = swift_task_alloc();
  v4[13] = swift_task_alloc();
  type metadata accessor for MainActor();
  v4[14] = static MainActor.shared.getter();
  uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
  v4[15] = v6;
  v4[16] = v5;
  return _swift_task_switch(sub_100A90314, v6, v5);
}

uint64_t sub_100A90314()
{
  uint64_t v1 = (char *)sub_100A70114();
  if (v1)
  {
    uint64_t v2 = v1;
    uint64_t v4 = v0[12];
    uint64_t v3 = v0[13];
    uint64_t v5 = v0[10];
    uint64_t v33 = v0[11];
    uint64_t v6 = v0[9];
    uint64_t v7 = v0[5];
    uint64_t v8 = OBJC_IVAR____TtC8Freeform8CRLBoard_data;
    uint64_t v9 = *(void *)&v1[OBJC_IVAR____TtC8Freeform8CRLBoard_data] + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
    swift_beginAccess();
    sub_100A982B0(v9, v6, type metadata accessor for CRLBoardCRDTData);
    swift_retain();
    sub_1005057FC(&qword_101674550);
    CRRegister.wrappedValue.getter();
    sub_100A98CC0(v6, type metadata accessor for CRLBoardCRDTData);
    swift_release();
    uint64_t v10 = (uint64_t *)(*(void *)&v2[v8] + OBJC_IVAR____TtC8Freeform12CRLBoardData_ownerName);
    uint64_t v11 = *v10;
    unint64_t v12 = v10[1];
    swift_bridgeObjectRetain();
    sub_100753370(v5, v11, v12, v3);
    LOBYTE(v11) = static UUID.== infix(_:_:)();
    sub_100A982B0(v3, v4, type metadata accessor for CRLBoardIdentifier);
    sub_100A982B0(v7, v33, type metadata accessor for CRLBoardIdentifier);
    if (v11)
    {
      uint64_t v14 = v0[11];
      uint64_t v13 = v0[12];
      uint64_t v15 = *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20);
      uint64_t v16 = *(void *)(v13 + v15);
      uint64_t v17 = *(void *)(v13 + v15 + 8);
      uint64_t v18 = (void *)(v14 + v15);
      uint64_t v19 = v0[13];
      if (v16 == *v18 && v17 == v18[1])
      {
        sub_100A98CC0(v14, type metadata accessor for CRLBoardIdentifier);
        sub_100A98CC0(v13, type metadata accessor for CRLBoardIdentifier);
        sub_100A98CC0(v19, type metadata accessor for CRLBoardIdentifier);
        goto LABEL_8;
      }
      char v22 = _stringCompareWithSmolCheck(_:_:expecting:)();
      sub_100A98CC0(v14, type metadata accessor for CRLBoardIdentifier);
      sub_100A98CC0(v13, type metadata accessor for CRLBoardIdentifier);
      sub_100A98CC0(v19, type metadata accessor for CRLBoardIdentifier);
      if (v22)
      {
LABEL_8:
        swift_release();
        id v23 = sub_100A70A50();
        id v24 = [v23 presentedViewController];

        if (v24)
        {
          self;
          uint64_t v25 = (void *)swift_dynamicCastObjCClass();
          if (v25)
          {
            id v26 = [v25 topViewController];

            if (v26)
            {
              type metadata accessor for CRLiOSBoardViewController();
              id v24 = (id)swift_dynamicCastClass();

              if (!v24) {
              goto LABEL_21;
              }
            }
          }
          else
          {
          }
          id v24 = 0;
        }
        else
        {
        }
LABEL_21:
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        char v32 = (uint64_t (*)(id))v0[1];
        return v32(v24);
      }
    }
    else
    {
      uint64_t v21 = v0[12];
      uint64_t v20 = v0[13];
      sub_100A98CC0(v0[11], type metadata accessor for CRLBoardIdentifier);
      sub_100A98CC0(v21, type metadata accessor for CRLBoardIdentifier);
      sub_100A98CC0(v20, type metadata accessor for CRLBoardIdentifier);
    }
  }
  uint64_t v27 = (void *)swift_task_alloc();
  v0[17] = v27;
  *uint64_t v27 = v0;
  v27[1] = sub_100A90728;
  uint64_t v28 = v0[7];
  uint64_t v30 = v0[5];
  uint64_t v29 = v0[6];
  return sub_100A909A0(v30, v29, v28);
}

uint64_t sub_100A90728(uint64_t a1)
{
  uint64_t v4 = *(void **)v2;
  *(void *)(*(void *)v2 + 144) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = v4[15];
    uint64_t v6 = v4[16];
    uint64_t v7 = sub_100A908FC;
  }
  else
  {
    v4[19] = a1;
    uint64_t v5 = v4[15];
    uint64_t v6 = v4[16];
    uint64_t v7 = sub_100A90850;
  }
  return _swift_task_switch(v7, v5, v6);
}

uint64_t sub_100A90850()
{
  swift_release();
  uint64_t v1 = *(void *)(v0 + 152);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v2(v1);
}

uint64_t sub_100A908FC()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100A909A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[20] = a3;
  v4[21] = v3;
  v4[18] = a1;
  v4[19] = a2;
  sub_1005057FC(&qword_101672BB0);
  v4[22] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  v4[23] = v5;
  uint64_t v6 = *(void *)(v5 - 8);
  v4[24] = v6;
  v4[25] = *(void *)(v6 + 64);
  v4[26] = swift_task_alloc();
  v4[27] = swift_task_alloc();
  v4[28] = type metadata accessor for MainActor();
  v4[29] = static MainActor.shared.getter();
  uint64_t v8 = dispatch thunk of Actor.unownedExecutor.getter();
  v4[30] = v8;
  v4[31] = v7;
  return _swift_task_switch(sub_100A90AE4, v8, v7);
}

void sub_100A90AE4()
{
  uint64_t v1 = v0[27];
  uint64_t v2 = v0[20];
  uint64_t v3 = v0[18];
  uint64_t v4 = v0[19];
  uint64_t v5 = (void *)(v1 + *(int *)(sub_1005057FC(&qword_101677100) + 48));
  sub_100A982B0(v3, v1, type metadata accessor for CRLBoardIdentifier);
  *uint64_t v5 = v4;
  v5[1] = v2;
  swift_storeEnumTagMultiPayload();
  swift_bridgeObjectRetain();
  sub_100A70728();
  v0[32] = v6;
  if (v6)
  {
    v0[33] = static MainActor.shared.getter();
    uint64_t v7 = (void *)swift_task_alloc();
    v0[34] = v7;
    *uint64_t v7 = v0;
    v7[1] = sub_100A90C14;
    uint64_t v8 = v0[18];
    sub_100EEBCCC(v8);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_100A90C14(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 280) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = dispatch thunk of Actor.unownedExecutor.getter();
    uint64_t v7 = v6;
    uint64_t v8 = sub_100A90F48;
  }
  else
  {
    *(void *)(v4 + 288) = a1;
    uint64_t v5 = dispatch thunk of Actor.unownedExecutor.getter();
    uint64_t v7 = v9;
    uint64_t v8 = sub_100A90D94;
  }
  return _swift_task_switch(v8, v5, v7);
}

uint64_t sub_100A90D94()
{
  uint64_t v1 = v0[36];
  uint64_t v2 = (void *)v0[32];
  swift_release();
  v0[37] = sub_100EEC1AC(v1, v2);

  swift_release();
  uint64_t v3 = v0[30];
  uint64_t v4 = v0[31];
  return _swift_task_switch(sub_100A90E18, v3, v4);
}

uint64_t sub_100A90E18()
{
  uint64_t v1 = v0[37];
  uint64_t v2 = v0[27];
  uint64_t v3 = v0[21];
  swift_release();
  *(void *)(v1 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_delegate + 8) = &off_101520118;
  swift_unknownObjectWeakAssign();
  uint64_t v4 = *(char **)(v1 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_shareSheetProvider);
  uint64_t v5 = &v4[OBJC_IVAR____TtC8Freeform27CRLGelatoShareSheetProvider_thumbnailProvider];
  *(void *)uint64_t v5 = v3;
  *((void *)v5 + 1) = &off_101520148;
  uint64_t v6 = v4;
  swift_unknownObjectRelease();
  swift_unknownObjectRetain();

  sub_100A98CC0(v2, type metadata accessor for CRLBoardLibraryViewModel.Item);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = (uint64_t (*)(uint64_t))v0[1];
  return v7(v1);
}

uint64_t sub_100A90F48()
{
  swift_release();
  uint64_t v1 = *(void *)(v0 + 240);
  uint64_t v2 = *(void *)(v0 + 248);
  return _swift_task_switch(sub_100A90FAC, v1, v2);
}

uint64_t sub_100A90FAC()
{
  uint64_t v1 = (void *)v0[32];
  swift_release();

  if (qword_10166F9D8 != -1) {
    swift_once();
  }
  uint64_t v2 = v0[35];
  uint64_t v3 = v0[27];
  uint64_t v4 = v0[26];
  uint64_t v22 = v0[25];
  uint64_t v19 = v0[22];
  uint64_t v20 = (void *)v0[21];
  uint64_t v21 = v0[24];
  swift_beginAccess();
  uint64_t v5 = (void *)static OS_os_log.crlError;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117E810;
  swift_getErrorValue();
  id v7 = v5;
  uint64_t v8 = Error.localizedDescription.getter();
  uint64_t v10 = v9;
  *(void *)(inited + 56) = &type metadata for String;
  *(void *)(inited + 64) = sub_100528BE4();
  *(void *)(inited + 32) = v8;
  *(void *)(inited + 40) = v10;
  uint64_t v11 = static os_log_type_t.error.getter();
  sub_100BAC898((uint64_t)v7, (uint64_t)&_mh_execute_header, v11, (uint64_t)"Caught error trying to make board view controller: %@", 53, 2, inited);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  uint64_t v12 = type metadata accessor for TaskPriority();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v19, 1, 1, v12);
  sub_100A982B0(v3, v4, type metadata accessor for CRLBoardLibraryViewModel.Item);
  id v13 = v20;
  swift_errorRetain();
  uint64_t v14 = static MainActor.shared.getter();
  unint64_t v15 = (*(unsigned __int8 *)(v21 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
  uint64_t v16 = (void *)swift_allocObject();
  v16[2] = v14;
  v16[3] = &protocol witness table for MainActor;
  v16[4] = v13;
  sub_100A98C58(v4, (uint64_t)v16 + v15, type metadata accessor for CRLBoardLibraryViewModel.Item);
  *(void *)((char *)v16 + ((v22 + v15 + 7) & 0xFFFFFFFFFFFFFFF8)) = v2;
  sub_100591324(v19, (uint64_t)&unk_10168E158, (uint64_t)v16);
  swift_release();
  swift_willThrow();
  sub_100A98CC0(v3, type metadata accessor for CRLBoardLibraryViewModel.Item);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v17 = (uint64_t (*)(void))v0[1];
  return v17();
}

uint64_t sub_100A912D0()
{
  v1[24] = v0;
  type metadata accessor for MainActor();
  v1[25] = static MainActor.shared.getter();
  uint64_t v3 = dispatch thunk of Actor.unownedExecutor.getter();
  v1[26] = v3;
  v1[27] = v2;
  return _swift_task_switch(sub_100A91368, v3, v2);
}

uint64_t sub_100A91368()
{
  char v1 = sub_100A924F8();
  uint64_t v2 = self;
  id v3 = [v2 mainBundle];
  NSString v4 = String._bridgeToObjectiveC()();
  NSString v5 = String._bridgeToObjectiveC()();
  id v6 = [v3 localizedStringForKey:v4 value:v5 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  id v7 = self;
  if (objc_msgSend(v7, "crl_iPadDevice"))
  {
    if (v1)
    {
LABEL_3:
      id v8 = [v2 mainBundle];
      goto LABEL_6;
    }
  }
  else if (v1)
  {
    goto LABEL_3;
  }
  [v7 crl_iPadDevice];
  id v8 = [v2 mainBundle];
LABEL_6:
  NSString v9 = String._bridgeToObjectiveC()();
  NSString v10 = String._bridgeToObjectiveC()();
  id v11 = [v8 localizedStringForKey:v9 value:v10 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v12 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  NSString v13 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v14 = [self alertControllerWithTitle:v12 message:v13 preferredStyle:1];
  v0[28] = v14;

  id v15 = [v2 mainBundle];
  if (v1)
  {
    NSString v16 = String._bridgeToObjectiveC()();
    NSString v17 = String._bridgeToObjectiveC()();
    id v18 = [v15 localizedStringForKey:v16 value:v17 table:0];

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    NSString v19 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    v0[15] = sub_100A92694;
    v0[16] = 0;
    v0[11] = _NSConcreteStackBlock;
    v0[12] = *(void *)"";
    v0[13] = sub_10051CE64;
    v0[14] = &unk_101520280;
    uint64_t v20 = _Block_copy(v0 + 11);
    swift_release();
    uint64_t v21 = self;
    id v22 = [v21 actionWithTitle:v19 style:0 handler:v20];
    _Block_release(v20);

    [v14 addAction:v22];
    id v23 = [v2 mainBundle];
    NSString v24 = String._bridgeToObjectiveC()();
    NSString v25 = String._bridgeToObjectiveC()();
    id v26 = [v23 localizedStringForKey:v24 value:v25 table:0];

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    NSString v27 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v28 = [v21 actionWithTitle:v27 style:1 handler:0];

    [v14 addAction:v28];
  }
  else
  {
    NSString v29 = String._bridgeToObjectiveC()();
    NSString v30 = String._bridgeToObjectiveC()();
    id v31 = [v15 localizedStringForKey:v29 value:v30 table:0];

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    NSString v32 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v22 = [self actionWithTitle:v32 style:0 handler:0];

    [v14 addAction:v22];
  }

  id v33 = sub_100A70A50();
  id v34 = [v33 presentedViewController];

  if (!v34) {
    goto LABEL_14;
  }
  self;
  uint64_t v35 = (void *)swift_dynamicCastObjCClass();
  if (!v35) {
    goto LABEL_13;
  }
  id v36 = [v35 topViewController];

  if (v36)
  {
    type metadata accessor for CRLiOSBoardViewController();
    uint64_t v37 = swift_dynamicCastClass();
    id v34 = v36;
    if (v37) {
      goto LABEL_15;
    }
LABEL_13:
  }
LABEL_14:
  uint64_t v37 = (uint64_t)sub_100A70A50();
LABEL_15:
  v0[29] = v37;
  uint64_t v38 = (void *)swift_task_alloc();
  v0[30] = v38;
  void *v38 = v0;
  v38[1] = sub_100A91A84;
  return sub_100B75534((uint64_t)v14, 1);
}

uint64_t sub_100A91A84()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 248) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 208);
    uint64_t v4 = *(void *)(v2 + 216);
    NSString v5 = sub_100A91C10;
  }
  else
  {

    uint64_t v3 = *(void *)(v2 + 208);
    uint64_t v4 = *(void *)(v2 + 216);
    NSString v5 = sub_100A91BA0;
  }
  return _swift_task_switch(v5, v3, v4);
}

uint64_t sub_100A91BA0()
{
  char v1 = *(void **)(v0 + 224);
  swift_release();
  sub_100F2BCC8(v1);

  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_100A91C10()
{
  char v1 = (void *)v0[29];
  swift_release();

  if (qword_10166F9D8 != -1) {
    swift_once();
  }
  uint64_t v2 = (void *)v0[28];
  swift_beginAccess();
  uint64_t v3 = (void *)static OS_os_log.crlError;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117E810;
  swift_getErrorValue();
  id v5 = v3;
  uint64_t v6 = Error.localizedDescription.getter();
  uint64_t v8 = v7;
  *(void *)(inited + 56) = &type metadata for String;
  *(void *)(inited + 64) = sub_100528BE4();
  *(void *)(inited + 32) = v6;
  *(void *)(inited + 40) = v8;
  uint64_t v9 = static os_log_type_t.error.getter();
  sub_100BAC898((uint64_t)v5, (uint64_t)&_mh_execute_header, v9, (uint64_t)"Caught error trying to present alert for handling unsupported board: %@", 71, 2, inited);

  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  swift_errorRelease();
  NSString v10 = (uint64_t (*)(void))v0[1];
  return v10();
}

uint64_t sub_100A91DCC(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  long long v3[2] = a1;
  v3[5] = type metadata accessor for MainActor();
  v3[6] = static MainActor.shared.getter();
  uint64_t v5 = dispatch thunk of Actor.unownedExecutor.getter();
  v3[7] = v5;
  v3[8] = v4;
  return _swift_task_switch(sub_100A91E6C, v5, v4);
}

uint64_t sub_100A91E6C()
{
  char v1 = (void *)v0[4];
  uint64_t v2 = swift_allocObject();
  v0[9] = v2;
  *(void *)(v2 + 16) = v1;
  id v3 = v1;
  v0[10] = static MainActor.shared.getter();
  uint64_t v5 = dispatch thunk of Actor.unownedExecutor.getter();
  v0[11] = v5;
  v0[12] = v4;
  return _swift_task_switch(sub_100A91F18, v5, v4);
}

uint64_t sub_100A91F18()
{
  uint64_t v1 = v0[9];
  uint64_t v3 = v0[2];
  uint64_t v2 = v0[3];
  uint64_t v4 = static MainActor.shared.getter();
  v0[13] = v4;
  uint64_t v5 = (void *)swift_task_alloc();
  v0[14] = v5;
  v5[2] = v3;
  v5[3] = v2;
  v5[4] = &unk_10168E170;
  v5[5] = v1;
  uint64_t v6 = (void *)swift_task_alloc();
  v0[15] = v6;
  void *v6 = v0;
  v6[1] = sub_100A92048;
  return withCheckedContinuation<A>(isolation:function:_:)(v0 + 16, v4, &protocol witness table for MainActor, 0xD000000000000035, 0x800000010126CF20, sub_100A986C4, v5, &type metadata for Bool);
}

uint64_t sub_100A92048()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_release();
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 96);
  uint64_t v3 = *(void *)(v1 + 88);
  return _swift_task_switch(sub_100A921A8, v3, v2);
}

uint64_t sub_100A921A8()
{
  swift_release();
  swift_release();
  *(unsigned char *)(v0 + 129) = *(unsigned char *)(v0 + 128);
  uint64_t v1 = *(void *)(v0 + 56);
  uint64_t v2 = *(void *)(v0 + 64);
  return _swift_task_switch(sub_100A9221C, v1, v2);
}

uint64_t sub_100A9221C()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(uint64_t))(v0 + 8);
  uint64_t v2 = *(unsigned __int8 *)(v0 + 129);
  return v1(v2);
}

uint64_t sub_100A92280(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[2] = a1;
  v6[3] = type metadata accessor for MainActor();
  v6[4] = static MainActor.shared.getter();
  uint64_t v9 = (void *)swift_task_alloc();
  v6[5] = v9;
  *uint64_t v9 = v6;
  v9[1] = sub_100A92348;
  return sub_100A91DCC(a5, a6);
}

uint64_t sub_100A92348(char a1)
{
  *(unsigned char *)(*(void *)v1 + 48) = a1;
  swift_task_dealloc();
  uint64_t v3 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_100A9248C, v3, v2);
}

uint64_t sub_100A9248C()
{
  char v1 = *(unsigned char *)(v0 + 48);
  uint64_t v2 = *(unsigned char **)(v0 + 16);
  swift_release();
  *uint64_t v2 = v1;
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t sub_100A924F8()
{
  id v1 = [self sharedDefaults];
  NSString v2 = String._bridgeToObjectiveC()();
  id v3 = [v1 dictionaryForKey:v2];

  if (!v3) {
    goto LABEL_8;
  }
  uint64_t v4 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

  unint64_t v5 = sub_100CEAE88(v4);
  swift_bridgeObjectRelease();
  if (!v5) {
    goto LABEL_8;
  }
  if (!*(void *)(v5 + 16))
  {
LABEL_7:
    swift_bridgeObjectRelease();
LABEL_8:
    char v16 = 1;
    return v16 & 1;
  }
  uint64_t v6 = v0 + OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate_CRLUnsupportedDevicesKey;
  uint64_t v7 = *(void *)(v0 + OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate_CRLUnsupportedDevicesKey);
  uint64_t v8 = *(void *)(v6 + 8);
  swift_bridgeObjectRetain();
  unint64_t v9 = sub_100955F50(v7, v8);
  if ((v10 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  uint64_t v11 = *(void **)(*(void *)(v5 + 56) + 8 * v9);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  id v12 = [self crl_platformString];
  uint64_t v13 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v15 = v14;

  LOBYTE(v12) = sub_100ED5CE8(v13, v15, v11);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  char v16 = v12 ^ 1;
  return v16 & 1;
}

id sub_100A92694()
{
  uint64_t v0 = self;

  return [v0 crl_openSoftwareUpdatePane];
}

uint64_t sub_100A926CC(uint64_t a1, uint64_t a2)
{
  v2[2] = a1;
  v2[3] = a2;
  type metadata accessor for MainActor();
  v2[4] = static MainActor.shared.getter();
  uint64_t v4 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_100A92764, v4, v3);
}

uint64_t sub_100A92764()
{
  uint64_t v1 = v0[3];
  swift_release();
  NSString v2 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate_window);
  if (v2)
  {
    id v3 = [v2 rootViewController];
    if (v3)
    {
      uint64_t v4 = v3;
      [v3 presentViewController:v0[2] animated:1 completion:0];
    }
  }
  unint64_t v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

uint64_t sub_100A92810(uint64_t a1)
{
  v2[33] = a1;
  v2[34] = v1;
  uint64_t v3 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  v2[35] = v3;
  v2[36] = *(void *)(v3 - 8);
  v2[37] = swift_task_alloc();
  type metadata accessor for MainActor();
  v2[38] = static MainActor.shared.getter();
  uint64_t v5 = dispatch thunk of Actor.unownedExecutor.getter();
  v2[39] = v5;
  v2[40] = v4;
  return _swift_task_switch(sub_100A92904, v5, v4);
}

uint64_t sub_100A92904()
{
  if (qword_10166F9C8 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[36];
  uint64_t v2 = v0[37];
  uint64_t v3 = v0[34];
  uint64_t v4 = v0[33];
  swift_beginAccess();
  uint64_t v5 = (void *)static OS_os_log.crlDefault;
  v0[41] = sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117E810;
  id v7 = v5;
  uint64_t v8 = UUID.uuidString.getter();
  uint64_t v10 = v9;
  *(void *)(inited + 56) = &type metadata for String;
  unint64_t v11 = sub_100528BE4();
  v0[42] = v11;
  *(void *)(inited + 64) = v11;
  *(void *)(inited + 32) = v8;
  *(void *)(inited + 40) = v10;
  uint64_t v12 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v7, (uint64_t)&_mh_execute_header, v12, (uint64_t)"Opening board with UUID: %@.", 28, 2, inited);
  swift_setDeallocating();
  v0[43] = sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  uint64_t v13 = (void *)(v2 + *(int *)(sub_1005057FC(&qword_101677100) + 48));
  sub_100A982B0(v4, v2, type metadata accessor for CRLBoardIdentifier);
  *uint64_t v13 = 0;
  v13[1] = 0xE000000000000000;
  swift_storeEnumTagMultiPayload();
  sub_100A70B24();
  uint64_t v15 = v14;
  [v14 loadViewIfNeeded];

  uint64_t v16 = *(void *)(v3 + OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate_navigationStack);
  sub_1005057FC(&qword_10169B510);
  unint64_t v17 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_10117E810;
  uint64_t v19 = sub_1005057FC(&qword_101670F30);
  (*(void (**)(unint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v18 + v17, 1, 5, v19);
  swift_storeEnumTagMultiPayload();
  swift_beginAccess();
  *(void *)(v16 + 16) = v18;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  id v20 = [self defaultCenter];
  if (qword_10166F008 != -1) {
    swift_once();
  }
  [v20 postNotificationName:qword_10171A6E8 object:v16];
  swift_release();
  swift_bridgeObjectRelease();

  uint64_t v21 = (void *)swift_task_alloc();
  v0[44] = v21;
  *uint64_t v21 = v0;
  v21[1] = sub_100A92CB0;
  uint64_t v22 = v0[37];
  return sub_100A7B5C4(v22, 1, 1, 0);
}

uint64_t sub_100A92CB0(void *a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 360) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = *(void *)(v4 + 312);
    uint64_t v6 = *(void *)(v4 + 320);
    id v7 = sub_100A92E5C;
  }
  else
  {

    uint64_t v5 = *(void *)(v4 + 312);
    uint64_t v6 = *(void *)(v4 + 320);
    id v7 = sub_100A92DD4;
  }
  return _swift_task_switch(v7, v5, v6);
}

uint64_t sub_100A92DD4()
{
  swift_release();
  sub_100A98CC0(*(void *)(v0 + 296), type metadata accessor for CRLBoardLibraryViewModel.Item);
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100A92E5C()
{
  swift_release();
  if (qword_10166F9D8 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[42];
  swift_beginAccess();
  uint64_t v2 = (void *)static OS_os_log.crlError;
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117E810;
  swift_getErrorValue();
  id v4 = v2;
  uint64_t v5 = Error.localizedDescription.getter();
  *(void *)(inited + 56) = &type metadata for String;
  *(void *)(inited + 64) = v1;
  *(void *)(inited + 32) = v5;
  *(void *)(inited + 40) = v6;
  uint64_t v7 = static os_log_type_t.error.getter();
  sub_100BAC898((uint64_t)v4, (uint64_t)&_mh_execute_header, v7, (uint64_t)"Caught error trying to show view controller: %@", 47, 2, inited);
  swift_setDeallocating();
  swift_arrayDestroy();

  swift_errorRelease();
  sub_100A98CC0(v0[37], type metadata accessor for CRLBoardLibraryViewModel.Item);
  swift_task_dealloc();
  uint64_t v8 = (uint64_t (*)(void))v0[1];
  return v8();
}

uint64_t sub_100A93014(uint64_t a1, char a2)
{
  uint64_t v2 = *(void *)(a1 + 32);
  **(unsigned char **)(*(void *)(v2 + 64) + 40) = a2;
  return _swift_continuation_resume(v2);
}

void sub_100A93038(uint64_t a1)
{
  uint64_t v2 = sub_1005057FC((uint64_t *)&unk_101676310);
  __chkstk_darwin(v2 - 8, v3);
  uint64_t v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate_navigationStack;
  swift_retain();
  sub_10076F538((uint64_t)v5);
  swift_release();
  sub_100522F00((uint64_t)v5, (uint64_t *)&unk_101676310);
  uint64_t v7 = *(void *)(a1 + v6);
  swift_beginAccess();
  if (!*(void *)(*(void *)(v7 + 16) + 16))
  {
    sub_1005057FC(&qword_10169B510);
    uint64_t v8 = *(void *)(type metadata accessor for CRLBoardLibraryViewModel.Item(0) - 8);
    unint64_t v9 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    uint64_t v10 = swift_allocObject();
    *(_OWORD *)(v10 + 16) = xmmword_10117E810;
    uint64_t v11 = sub_1005057FC(&qword_101670F30);
    (*(void (**)(unint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v10 + v9, 1, 5, v11);
    swift_storeEnumTagMultiPayload();
    *(void *)(v7 + 16) = v10;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    id v12 = [self defaultCenter];
    if (qword_10166F008 != -1) {
      swift_once();
    }
    [v12 postNotificationName:qword_10171A6E8 object:v7];
    swift_release();
    swift_bridgeObjectRelease();
  }
}

void sub_100A93298(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1005057FC(&qword_10168E108);
  __chkstk_darwin(v4 - 8, v5);
  uint64_t v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&double v10 = __chkstk_darwin(v8, v9).n128_u64[0];
  id v12 = (char *)&v29 - v11;
  id v31 = [a1 presentedViewController];
  id Strong = (id)swift_unknownObjectWeakLoadStrong();
  if (v31)
  {
    if (Strong)
    {
      id v30 = Strong;
      sub_10050BF48(0, (unint64_t *)&qword_1016745A0);
      id v14 = v31;
      char v15 = static NSObject.== infix(_:_:)();

      if ((v15 & 1) == 0) {
        return;
      }
LABEL_6:
      uint64_t v16 = v2 + OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate_welcomeControllerDidDismissContinuation;
      swift_beginAccess();
      sub_100522E9C(v16, (uint64_t)v12, &qword_10168E108);
      uint64_t v17 = sub_1005057FC(&qword_101682E08);
      uint64_t v18 = *(void *)(v17 - 8);
      int v19 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v18 + 48))(v12, 1, v17);
      sub_100522F00((uint64_t)v12, &qword_10168E108);
      if (v19 != 1)
      {
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v18 + 56))(v7, 1, 1, v17);
        sub_100A70C14((uint64_t)v7);
        return;
      }
      id v20 = sub_100A70A50();
      id v21 = [v20 presentedViewController];

      if (!v21) {
        goto LABEL_12;
      }
      self;
      uint64_t v22 = (void *)swift_dynamicCastObjCClass();
      if (v22)
      {
        id v23 = [v22 topViewController];

        if (!v23)
        {
LABEL_12:
          uint64_t v24 = sub_100A70A50();
LABEL_13:
          sub_100AC4DC0();
          if (v25)
          {
            sub_100AC5154(v24, 0, 0);
          }
          else
          {
            id v26 = [self standardUserDefaults];
            uint64_t v27 = sub_100077344();
            NSString v28 = String._bridgeToObjectiveC()();
            [v26 setInteger:v27 forKey:v28];
          }
          return;
        }
        type metadata accessor for CRLiOSBoardViewController();
        uint64_t v24 = (void *)swift_dynamicCastClass();
        id v21 = v23;
        if (v24) {
          goto LABEL_13;
        }
      }

      goto LABEL_12;
    }
    id Strong = v31;
  }
  else if (!Strong)
  {
    goto LABEL_6;
  }
}

uint64_t sub_100A93668(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[27] = a4;
  v5[28] = a5;
  sub_1005057FC(&qword_101672E90);
  v5[29] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for URL();
  v5[30] = v6;
  v5[31] = *(void *)(v6 - 8);
  v5[32] = swift_task_alloc();
  type metadata accessor for MainActor();
  v5[33] = static MainActor.shared.getter();
  uint64_t v8 = dispatch thunk of Actor.unownedExecutor.getter();
  v5[34] = v8;
  v5[35] = v7;
  return _swift_task_switch(sub_100A9378C, v8, v7);
}

uint64_t sub_100A9378C()
{
  uint64_t v1 = (void *)v0[27];
  id v2 = [objc_allocWithZone((Class)type metadata accessor for CRLQAImportFileDocumentPickerDelegate()) init];
  v0[36] = v2;
  sub_1005057FC(&qword_101675F70);
  type metadata accessor for UTType();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_10117E810;
  static UTType.data.getter();
  id v3 = objc_allocWithZone((Class)UIDocumentPickerViewController);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v5 = [v3 initForOpeningContentTypes:isa asCopy:1];
  v0[37] = v5;

  [v5 setAllowsMultipleSelection:0];
  [v5 setDelegate:v2];
  [v1 presentViewController:v5 animated:1 completion:0];
  uint64_t v6 = (void *)swift_task_alloc();
  v0[38] = v6;
  void *v6 = v0;
  v6[1] = sub_100A93978;
  uint64_t v7 = v0[29];
  return sub_1006052C4(v7);
}

uint64_t sub_100A93978()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 280);
  uint64_t v3 = *(void *)(v1 + 272);
  return _swift_task_switch(sub_100A93A98, v3, v2);
}

uint64_t sub_100A93A98()
{
  uint64_t v1 = v0[30];
  uint64_t v2 = v0[31];
  uint64_t v3 = v0[29];
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    uint64_t v5 = (void *)v0[36];
    uint64_t v4 = (void *)v0[37];
    swift_release();

    sub_100522F00(v3, &qword_101672E90);
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v6 = (uint64_t (*)(void))v0[1];
    return v6();
  }
  else
  {
    (*(void (**)(void, uint64_t, uint64_t))(v2 + 32))(v0[32], v3, v1);
    uint64_t v8 = (void *)swift_task_alloc();
    v0[39] = v8;
    *uint64_t v8 = v0;
    v8[1] = sub_100A93BF0;
    uint64_t v9 = v0[32];
    return sub_100A940BC(v9);
  }
}

uint64_t sub_100A93BF0()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 320) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 280);
  uint64_t v4 = *(void *)(v2 + 272);
  if (v0) {
    uint64_t v5 = sub_100A93DD8;
  }
  else {
    uint64_t v5 = sub_100A93D2C;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_100A93D2C()
{
  uint64_t v2 = (void *)v0[36];
  uint64_t v1 = (void *)v0[37];
  uint64_t v3 = v0[32];
  uint64_t v4 = v0[30];
  uint64_t v5 = v0[31];
  swift_release();

  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v6 = (uint64_t (*)(void))v0[1];
  return v6();
}

uint64_t sub_100A93DD8()
{
  swift_release();
  if (qword_10166F9D8 != -1) {
    swift_once();
  }
  uint64_t v18 = (void *)v0[37];
  int v19 = (void *)v0[36];
  uint64_t v20 = v0[31];
  uint64_t v21 = v0[30];
  uint64_t v16 = v0[32];
  id v17 = (id)v0[27];
  swift_beginAccess();
  uint64_t v1 = (void *)static OS_os_log.crlError;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117D8C0;
  id v3 = v1;
  uint64_t v4 = URL.path.getter();
  uint64_t v6 = v5;
  *(void *)(inited + 56) = &type metadata for String;
  unint64_t v7 = sub_100528BE4();
  *(void *)(inited + 64) = v7;
  *(void *)(inited + 32) = v4;
  *(void *)(inited + 40) = v6;
  swift_getErrorValue();
  uint64_t v8 = Error.localizedDescription.getter();
  *(void *)(inited + 96) = &type metadata for String;
  *(void *)(inited + 104) = v7;
  *(void *)(inited + 72) = v8;
  *(void *)(inited + 80) = v9;
  uint64_t v10 = static os_log_type_t.error.getter();
  sub_100BAC898((uint64_t)v3, (uint64_t)&_mh_execute_header, v10, (uint64_t)"Error loading board from %@: %@", 31, 2, inited);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  swift_getErrorValue();
  Error.localizedDescription.getter();
  NSString v11 = String._bridgeToObjectiveC()();
  NSString v12 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v13 = [self alertControllerWithTitle:v11 message:v12 preferredStyle:1];

  [v17 presentViewController:v13 animated:1 completion:0];
  sub_100F2BCC8(v13);

  swift_errorRelease();
  (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v16, v21);
  swift_task_dealloc();
  swift_task_dealloc();
  id v14 = (uint64_t (*)(void))v0[1];
  return v14();
}

uint64_t sub_100A940BC(uint64_t a1)
{
  v2[31] = a1;
  v2[32] = v1;
  type metadata accessor for CRLBoardIdentifier(0);
  v2[33] = swift_task_alloc();
  type metadata accessor for CRLBoardLibraryViewModel.Folder(0);
  v2[34] = swift_task_alloc();
  type metadata accessor for CRLBoardCRDTData(0);
  v2[35] = swift_task_alloc();
  uint64_t v3 = type metadata accessor for UUID();
  v2[36] = v3;
  v2[37] = *(void *)(v3 - 8);
  v2[38] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for URL();
  v2[39] = v4;
  v2[40] = *(void *)(v4 - 8);
  v2[41] = swift_task_alloc();
  type metadata accessor for MainActor();
  v2[42] = static MainActor.shared.getter();
  uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
  v2[43] = v6;
  v2[44] = v5;
  return _swift_task_switch(sub_100A94290, v6, v5);
}

void sub_100A94290()
{
  sub_100A70728();
  if (v1)
  {
    uint64_t v2 = v1;
    uint64_t v3 = *(void **)&v1[OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_store];
    *(void *)(v0 + 360) = v3;
    uint64_t v4 = v3;

    uint64_t v5 = *(void **)&v4[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore_crdtContext];
    *(void *)(v0 + 368) = v5;
    uint64_t v6 = qword_10166F9C8;
    id v29 = v5;
    if (v6 != -1) {
      swift_once();
    }
    uint64_t v7 = *(void *)(v0 + 320);
    uint64_t v30 = *(void *)(v0 + 328);
    uint64_t v8 = *(void *)(v0 + 312);
    uint64_t v9 = *(void *)(v0 + 248);
    swift_beginAccess();
    uint64_t v10 = (void *)static OS_os_log.crlDefault;
    *(void *)(v0 + 376) = sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_10117E810;
    id v12 = v10;
    uint64_t v13 = URL.absoluteString.getter();
    uint64_t v15 = v14;
    *(void *)(inited + 56) = &type metadata for String;
    unint64_t v16 = sub_100528BE4();
    *(void *)(v0 + 384) = v16;
    *(void *)(inited + 64) = v16;
    *(void *)(inited + 32) = v13;
    *(void *)(inited + 40) = v15;
    uint64_t v17 = static os_log_type_t.default.getter();
    sub_100BAC898((uint64_t)v12, (uint64_t)&_mh_execute_header, v17, (uint64_t)"QA Import file %{public}@", 25, 2, inited);
    swift_setDeallocating();
    *(void *)(v0 + 392) = sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();

    uint64_t v18 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16);
    v18(v30, v9, v8);
    uint64_t v19 = qword_1016700F0;
    NSString v28 = v4;
    id v20 = v29;
    if (v19 != -1) {
      swift_once();
    }
    uint64_t v22 = *(void *)(v0 + 320);
    uint64_t v21 = *(void *)(v0 + 328);
    uint64_t v23 = *(void *)(v0 + 312);
    swift_getKeyPath();
    swift_getKeyPath();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    BOOL v24 = (*(unsigned char *)(v0 + 440) & 1) == 0;
    Assistant = (objc_class *)type metadata accessor for CRLBoardFileReadAssistant();
    id v26 = (char *)objc_allocWithZone(Assistant);
    *(void *)&v26[OBJC_IVAR____TtC8Freeform25CRLBoardFileReadAssistant_readAssistant] = 0;
    v18((uint64_t)&v26[OBJC_IVAR____TtC8Freeform25CRLBoardFileReadAssistant_url], v21, v23);
    *(void *)&v26[OBJC_IVAR____TtC8Freeform25CRLBoardFileReadAssistant_store] = v28;
    *(void *)&v26[OBJC_IVAR____TtC8Freeform25CRLBoardFileReadAssistant_context] = v20;
    *(void *)&v26[OBJC_IVAR____TtC8Freeform25CRLBoardFileReadAssistant_options] = v24;
    *(void *)(v0 + 232) = v26;
    *(void *)(v0 + 240) = Assistant;
    [super init];
    (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v21, v23);
    uint64_t v27 = (void *)swift_task_alloc();
    *(void *)(v0 + 408) = v27;
    *uint64_t v27 = v0;
    v27[1] = sub_100A94618;
    sub_100654444();
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_100A94618(uint64_t a1)
{
  uint64_t v3 = *v2;
  uint64_t v4 = *v2;
  *(void *)(v4 + 416) = a1;
  *(void *)(v4 + 424) = v1;
  swift_task_dealloc();
  uint64_t v5 = *(void *)(v3 + 352);
  uint64_t v6 = *(void *)(v3 + 344);
  if (v1) {
    uint64_t v7 = sub_100A94DD0;
  }
  else {
    uint64_t v7 = sub_100A9475C;
  }
  return _swift_task_switch(v7, v6, v5);
}

void sub_100A9475C()
{
  uint64_t v1 = v0[52];
  uint64_t v36 = v0[48];
  uint64_t v2 = v0[37];
  uint64_t v3 = v0[38];
  uint64_t v4 = v0[35];
  uint64_t v5 = v0[36];
  uint64_t v6 = (void *)static OS_os_log.crlDefault;
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117E810;
  uint64_t v34 = OBJC_IVAR____TtC8Freeform8CRLBoard_data;
  uint64_t v35 = v1;
  uint64_t v8 = *(void *)(v1 + OBJC_IVAR____TtC8Freeform8CRLBoard_data) + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
  swift_beginAccess();
  sub_100A982B0(v8, v4, type metadata accessor for CRLBoardCRDTData);
  id v9 = v6;
  swift_retain();
  sub_1005057FC(&qword_101674550);
  CRRegister.wrappedValue.getter();
  sub_100A98CC0(v4, type metadata accessor for CRLBoardCRDTData);
  swift_release();
  uint64_t v10 = UUID.uuidString.getter();
  uint64_t v12 = v11;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v3, v5);
  *(void *)(inited + 56) = &type metadata for String;
  *(void *)(inited + 64) = v36;
  *(void *)(inited + 32) = v10;
  *(void *)(inited + 40) = v12;
  uint64_t v13 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v9, (uint64_t)&_mh_execute_header, v13, (uint64_t)"QA Import read board from file %{public}@, attempting to save.", 62, 2, inited);
  swift_setDeallocating();
  swift_arrayDestroy();

  sub_100A70728();
  if (v14)
  {
    uint64_t v15 = v14;
    uint64_t v17 = (char *)v0[52];
    uint64_t v16 = v0[53];
    uint64_t v18 = v0[34];
    uint64_t v19 = sub_1005057FC(&qword_101670F30);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v18, 1, 5, v19);
    sub_100EDF4A8(v17, v18);
    if (v16)
    {
      id v20 = (void *)v0[52];
      uint64_t v21 = (void *)v0[50];
      uint64_t v23 = (void *)v0[45];
      uint64_t v22 = (void *)v0[46];
      sub_100A98CC0(v0[34], type metadata accessor for CRLBoardLibraryViewModel.Folder);

      swift_release();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      BOOL v24 = (void (*)(void))v0[1];
      v24();
    }
    else
    {
      uint64_t v25 = v0[38];
      uint64_t v26 = v0[35];
      uint64_t v27 = v0[33];
      sub_100A98CC0(v0[34], type metadata accessor for CRLBoardLibraryViewModel.Folder);

      uint64_t v28 = *(void *)(v35 + v34) + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
      swift_beginAccess();
      sub_100A982B0(v28, v26, type metadata accessor for CRLBoardCRDTData);
      swift_retain();
      CRRegister.wrappedValue.getter();
      sub_100A98CC0(v26, type metadata accessor for CRLBoardCRDTData);
      swift_release();
      id v29 = (uint64_t *)(*(void *)(v35 + v34) + OBJC_IVAR____TtC8Freeform12CRLBoardData_ownerName);
      uint64_t v31 = *v29;
      unint64_t v30 = v29[1];
      swift_bridgeObjectRetain();
      sub_100753370(v25, v31, v30, v27);
      NSString v32 = (void *)swift_task_alloc();
      v0[54] = v32;
      *NSString v32 = v0;
      v32[1] = sub_100A94BA0;
      uint64_t v33 = v0[33];
      sub_100A92810(v33);
    }
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_100A94BA0()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 264);
  swift_task_dealloc();
  sub_100A98CC0(v2, type metadata accessor for CRLBoardIdentifier);
  uint64_t v3 = *(void *)(v1 + 352);
  uint64_t v4 = *(void *)(v1 + 344);
  return _swift_task_switch(sub_100A94CF8, v4, v3);
}

uint64_t sub_100A94CF8()
{
  uint64_t v1 = *(void **)(v0 + 400);
  uint64_t v3 = *(void **)(v0 + 360);
  uint64_t v2 = *(void **)(v0 + 368);

  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_100A94DD0()
{
  uint64_t v1 = (void *)v0[50];
  uint64_t v3 = (void *)v0[45];
  uint64_t v2 = (void *)v0[46];
  swift_release();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

void sub_100A95020()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for CRLBoardCRDTData(0);
  __chkstk_darwin(v2, v3);
  uint64_t v5 = (char *)&v44 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for UUID();
  __chkstk_darwin(v6 - 8, v7);
  id v9 = (char *)&v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for CRLBoardIdentifier(0);
  __chkstk_darwin(v10 - 8, v11);
  uint64_t v46 = (uint64_t)&v44 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = (char *)sub_100A70114();
  if (v13)
  {
    uint64_t v14 = OBJC_IVAR____TtC8Freeform8CRLBoard_data;
    uint64_t v15 = *(void *)&v13[OBJC_IVAR____TtC8Freeform8CRLBoard_data] + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
    uint64_t v16 = v13;
    swift_beginAccess();
    sub_100A982B0(v15, (uint64_t)v5, type metadata accessor for CRLBoardCRDTData);
    swift_retain();
    sub_1005057FC(&qword_101674550);
    CRRegister.wrappedValue.getter();
    sub_100A98CC0((uint64_t)v5, type metadata accessor for CRLBoardCRDTData);
    swift_release();
    uint64_t v17 = (uint64_t *)(*(void *)&v16[v14] + OBJC_IVAR____TtC8Freeform12CRLBoardData_ownerName);
    uint64_t v18 = *v17;
    unint64_t v19 = v17[1];
    swift_bridgeObjectRetain();
    sub_100753370((uint64_t)v9, v18, v19, v46);
    uint64_t v20 = *(void *)&v16[v14] + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
    swift_beginAccess();
    sub_100A982B0(v20, (uint64_t)v5, type metadata accessor for CRLBoardCRDTData);
    sub_1005057FC(&qword_101674450);
    CRRegister.wrappedValue.getter();
    uint64_t v21 = (uint64_t)aBlock;
    uint64_t v22 = v48;
    sub_100A98CC0((uint64_t)v5, type metadata accessor for CRLBoardCRDTData);
    id v45 = v16;
    uint64_t v23 = *(void **)(*(void *)&v16[OBJC_IVAR____TtC8Freeform8CRLBoard_shareState] + 16);
    id v24 = v23;
    sub_100A70728();
    if (v25)
    {
      uint64_t v26 = v25;
      uint64_t v27 = type metadata accessor for CRLBoardShareItemProviderHelper();
      uint64_t v28 = v46;
      id v29 = sub_100B73A38(v23, (uint64_t)v26, v46, v21, v22, 0, 0xF000000000000000);

      id v30 = sub_100648F48(v28, v21, v22, v1, v27);
      sub_1005057FC(&qword_10168E1D8);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_10117D8C0;
      *(void *)(inited + 32) = UIActivityItemsConfigurationMetadataKeyTitle;
      *(void *)(inited + 40) = v21;
      *(void *)(inited + 48) = v22;
      *(void *)(inited + 64) = &type metadata for String;
      *(void *)(inited + 72) = UIActivityItemsConfigurationMetadataKeyLinkPresentationMetadata;
      *(void *)(inited + 104) = sub_10050BF48(0, (unint64_t *)&unk_10168E1E0);
      *(void *)(inited + 80) = v30;
      NSString v32 = UIActivityItemsConfigurationMetadataKeyTitle;
      uint64_t v33 = UIActivityItemsConfigurationMetadataKeyLinkPresentationMetadata;
      id v34 = v30;
      unint64_t v35 = sub_100A3C54C(inited);
      sub_1005057FC((uint64_t *)&unk_101676C10);
      uint64_t v36 = swift_allocObject();
      *(_OWORD *)(v36 + 16) = xmmword_101177E70;
      *(void *)(v36 + 32) = v29;
      aBlock = (void **)v36;
      specialized Array._endMutation()();
      id v37 = objc_allocWithZone((Class)UIActivityItemsConfiguration);
      sub_10050BF48(0, (unint64_t *)&unk_10169FAE0);
      id v38 = v29;
      Class isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      id v40 = [v37 initWithItemProviders:isa];

      uint64_t v41 = swift_allocObject();
      *(void *)(v41 + 16) = v35;
      id v51 = sub_100A98D70;
      uint64_t v52 = v41;
      aBlock = _NSConcreteStackBlock;
      uint64_t v48 = *(void *)"";
      long long v49 = sub_100A9561C;
      long long v50 = &unk_1015202D0;
      uint64_t v42 = _Block_copy(&aBlock);
      swift_release();
      [v40 setMetadataProvider:v42];
      _Block_release(v42);
      type metadata accessor for UIActivityItemsConfigurationInteraction(0);
      Class v43 = Array._bridgeToObjectiveC()().super.isa;
      [v40 setSupportedInteractions:v43];

      sub_100A98CC0(v28, type metadata accessor for CRLBoardIdentifier);
    }
    else
    {
      __break(1u);
    }
  }
}

void sub_100A95590(void *a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  if (*(void *)(a2 + 16))
  {
    id v7 = a1;
    uint64_t v5 = sub_10095609C(v7);
    if (v6)
    {
      sub_100522D7C(*(void *)(a2 + 56) + 32 * v5, (uint64_t)a3);
    }
    else
    {
      *a3 = 0u;
      a3[1] = 0u;
    }
  }
  else
  {
    *a3 = 0u;
    a3[1] = 0u;
  }
}

id sub_100A9561C(uint64_t a1, void *a2)
{
  void (*v3)(void *__return_ptr);
  id v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  char *v10;
  void *v11;
  void v13[3];
  uint64_t v14;
  uint64_t vars8;

  uint64_t v3 = *(void (**)(void *__return_ptr))(a1 + 32);
  swift_retain();
  uint64_t v4 = a2;
  v3(v13);
  swift_release();

  uint64_t v5 = v14;
  if (v14)
  {
    char v6 = sub_10050F848(v13, v14);
    id v7 = *(void *)(v5 - 8);
    uint64_t v8 = __chkstk_darwin(v6, v6);
    uint64_t v10 = (char *)v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, __n128))(v7 + 16))(v10, v8);
    uint64_t v11 = (void *)_bridgeAnythingToObjectiveC<A>(_:)();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v5);
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v13);
  }
  else
  {
    uint64_t v11 = 0;
  }

  return v11;
}

unint64_t sub_100A95774()
{
  unint64_t result = qword_10168E0D0;
  if (!qword_10168E0D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_10168E0D0);
  }
  return result;
}

uint64_t sub_100A957C8()
{
  return _swift_deallocObject(v0, 24, 7);
}

void sub_100A95800()
{
  sub_100A93038(*(void *)(v0 + 16));
}

uint64_t sub_100A95808(uint64_t a1, uint64_t a2, _OWORD *a3, void *a4, uint64_t a5)
{
  uint64_t v10 = sub_1005057FC(&qword_101672C30);
  __chkstk_darwin(v10 - 8, v11);
  uint64_t v13 = (char *)&v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = (void *)(a5 + OBJC_IVAR____TtC8Freeform28CRLDownloadSharedCopyAttempt_dataHandler);
  v14[3] = &type metadata for CRLSendACopyBoardDataHandler;
  v14[4] = &off_10152B8C8;
  uint64_t v15 = (_OWORD *)swift_allocObject();
  void *v14 = v15;
  long long v16 = a3[1];
  v15[1] = *a3;
  v15[2] = v16;
  v15[3] = a3[2];
  uint64_t v17 = a5 + OBJC_IVAR____TtC8Freeform28CRLDownloadSharedCopyAttempt_boardIdentifier;
  uint64_t v18 = type metadata accessor for CRLBoardIdentifier(0);
  unint64_t v19 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56);
  v19(v17, 1, 1, v18);
  v19(a5 + OBJC_IVAR____TtC8Freeform28CRLDownloadSharedCopyAttempt_boardIdentifierToOpen, 1, 1, v18);
  *(void *)(a5 + OBJC_IVAR____TtC8Freeform28CRLDownloadSharedCopyAttempt_downloadTask) = 0;
  *(unsigned char *)(a5 + OBJC_IVAR____TtC8Freeform28CRLDownloadSharedCopyAttempt_didEncounterUnsupportedContent) = 0;
  *(void *)(a5 + OBJC_IVAR____TtC8Freeform28CRLDownloadSharedCopyAttempt_delegate + 8) = 0;
  swift_unknownObjectWeakInit();
  uint64_t v20 = (_OWORD *)(a5 + OBJC_IVAR____TtC8Freeform28CRLDownloadSharedCopyAttempt_snapshotUpdateObservationToken);
  *uint64_t v20 = 0u;
  v20[1] = 0u;
  *(unsigned char *)(a5 + OBJC_IVAR____TtC8Freeform28CRLDownloadSharedCopyAttempt_didConfirmBoardIsReadyToOpen) = 0;
  uint64_t v21 = (void *)(a5 + OBJC_IVAR____TtC8Freeform28CRLDownloadSharedCopyAttempt_boardLibrary);
  *uint64_t v21 = a2;
  v21[1] = &off_101532D48;
  *(void *)(a5 + OBJC_IVAR____TtC8Freeform28CRLDownloadSharedCopyAttempt_delegate + 8) = &off_1015200D8;
  swift_unknownObjectWeakAssign();

  sub_100A98C58(a1, (uint64_t)v13, type metadata accessor for CRLBoardIdentifier);
  v19((uint64_t)v13, 0, 1, v18);
  uint64_t v22 = a5 + OBJC_IVAR____TtC8Freeform28CRLDownloadSharedCopyAttempt_boardIdentifier;
  swift_beginAccess();
  sub_10060511C((uint64_t)v13, v22);
  swift_endAccess();
  return a5;
}

id sub_100A95A64(uint64_t a1, uint64_t a2, unsigned char *a3)
{
  *(void *)&a3[OBJC_IVAR____TtC8Freeform27CRLiOSSidebarViewController_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  *(void *)&a3[OBJC_IVAR____TtC8Freeform27CRLiOSSidebarViewController_viewModelController] = 0;
  char v6 = &a3[OBJC_IVAR____TtC8Freeform27CRLiOSSidebarViewController_selectedItem];
  uint64_t v7 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v6, 1, 1, v7);
  *(void *)&a3[OBJC_IVAR____TtC8Freeform27CRLiOSSidebarViewController_syncDidEndObserver] = 0;
  *(void *)&a3[OBJC_IVAR____TtC8Freeform27CRLiOSSidebarViewController_syncDidBeginObserver] = 0;
  *(void *)&a3[OBJC_IVAR____TtC8Freeform27CRLiOSSidebarViewController_highlightSyncDidEndObserver] = 0;
  *(void *)&a3[OBJC_IVAR____TtC8Freeform27CRLiOSSidebarViewController_highlightSyncDidBeginObserver] = 0;
  a3[OBJC_IVAR____TtC8Freeform27CRLiOSSidebarViewController_isFetchingChanges] = 0;
  a3[OBJC_IVAR____TtC8Freeform27CRLiOSSidebarViewController_isFetchingHighlights] = 0;
  uint64_t v8 = &a3[OBJC_IVAR____TtC8Freeform27CRLiOSSidebarViewController_libraryProvider];
  *uint64_t v8 = a1;
  v8[1] = &off_101532D48;
  v10.receiver = a3;
  v10.super_class = (Class)type metadata accessor for CRLiOSSidebarViewController();
  swift_unknownObjectRetain();
  return [super initWithCollectionViewLayout:a2];
}

void sub_100A95BA8(void *a1)
{
  uint64_t v2 = v1;
  if ((sub_1009C302C() & 1) == 0)
  {
    if (qword_10166F9E0 != -1) {
      swift_once();
    }
    swift_beginAccess();
    id v5 = (id)static OS_os_log.crlWarning;
    uint64_t v16 = static os_log_type_t.info.getter();
    sub_100BAC898((uint64_t)v5, (uint64_t)&_mh_execute_header, v16, (uint64_t)"Skipping user activity from a newer version.", 44, 2, (uint64_t)_swiftEmptyArrayStorage);
    goto LABEL_20;
  }
  sub_100A70728();
  if (v4)
  {
    id v5 = v4;
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = v1;
    *(void *)(v6 + 24) = a1;
    if (*((unsigned char *)v5 + OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_didStartUpdating))
    {
      uint64_t v7 = *(void **)&v1[OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate_window];
      if (v7)
      {
        id v8 = v2;
        id v9 = a1;
        id v10 = v8;
        id v11 = v9;
        id v12 = [v7 rootViewController];
        if (v12)
        {
          uint64_t v13 = v12;
          id v14 = [v12 crl_windowWrapper];

          if (v14)
          {
            id v15 = [v14 newWrapperBeginningIgnoringUserInteractionSafely];

            if (v15)
            {
LABEL_19:
              unint64_t v35 = (void *)swift_allocObject();
              v35[2] = v2;
              v35[3] = a1;
              v35[4] = v15;
              id v36 = v15;
              id v37 = v2;
              id v38 = a1;
              sub_100A6F12C((uint64_t)sub_100A99D2C, (uint64_t)v35);
              swift_release();

              swift_release();
LABEL_20:

              return;
            }
          }
        }
      }
      else
      {
        id v29 = v2;
        id v30 = a1;
        id v31 = v29;
        id v32 = v30;
      }
      if (qword_10166F9D8 != -1) {
        swift_once();
      }
      swift_beginAccess();
      id v33 = (id)static OS_os_log.crlError;
      uint64_t v34 = static os_log_type_t.error.getter();
      sub_100BAC898((uint64_t)v33, (uint64_t)&_mh_execute_header, v34, (uint64_t)"Could not create token for ignoring user interaction; view hierarchy may not be set up yet",
        90,
        2,
        (uint64_t)_swiftEmptyArrayStorage);

      id v15 = 0;
      goto LABEL_19;
    }
    uint64_t v17 = self;
    uint64_t v18 = v1;
    id v19 = a1;
    uint64_t v39 = v18;
    id v20 = v19;
    id v21 = [v17 defaultCenter];
    uint64_t v22 = swift_allocObject();
    *(void *)(v22 + 16) = 0;
    if (qword_1016700C0 != -1) {
      swift_once();
    }
    uint64_t v23 = qword_10171C6C8;
    id v24 = [self mainQueue];
    uint64_t v25 = (void *)swift_allocObject();
    v25[2] = v22;
    v25[3] = v21;
    v25[4] = sub_100A99CD4;
    v25[5] = v6;
    aBlock[4] = sub_100A9A664;
    aBlock[5] = v25;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = *(void *)"";
    void aBlock[2] = sub_1005E5680;
    void aBlock[3] = &unk_101520838;
    uint64_t v26 = _Block_copy(aBlock);
    swift_retain();
    id v27 = v21;
    swift_retain();
    swift_release();
    id v28 = [v27 addObserverForName:v23 object:v5 queue:v24 usingBlock:v26];

    _Block_release(v26);
    swift_beginAccess();
    *(void *)(v22 + 16) = v28;
    swift_release();
    swift_release();

    swift_unknownObjectRelease();
  }
  else
  {
    __break(1u);
  }
}

id sub_100A96080(uint64_t a1, void *a2, void *a3, uint64_t a4, uint64_t a5, char a6, unsigned char *a7)
{
  id v8 = &a7[OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_delegate];
  *(void *)&a7[OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  *(void *)&a7[OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_thumbnailProvider + 8] = 0;
  swift_unknownObjectWeakInit();
  *(void *)&a7[OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController____lazy_storage___diffableDataSource] = 0;
  *(void *)&a7[OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_pendingBoardIdentifiersToRefresh] = &_swiftEmptySetSingleton;
  *(void *)&a7[OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_imageCacheObserver] = 0;
  *(void *)&a7[OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_storeMetadataObserver] = 0;
  *(void *)&a7[OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_renameDeleteObserver] = 0;
  id v9 = &a7[OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_searchString];
  *id v9 = 0;
  v9[1] = 0xE000000000000000;
  a7[OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_searchComplete] = 0;
  a7[OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_isCurrentlyInMultipleSelectionInteraction] = 0;
  *(void *)&a7[OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_gridLayout] = 0;
  *(void *)&a7[OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_listLayout] = 0;
  id v10 = &a7[OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_iCloudStatusObserver];
  _OWORD *v10 = 0u;
  v10[1] = 0u;
  *(void *)&a7[OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController____lazy_storage___libraryProviderRefreshLimiter] = 0;
  *(void *)&a7[OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_syncDidEndObserver] = 0;
  *(void *)&a7[OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_syncDidBeginObserver] = 0;
  a7[OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_isPresentingBoardNavigationController] = 0;
  id v11 = &a7[OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController__currentSnapshotWithExpandedSections];
  uint64_t v12 = sub_1005057FC((uint64_t *)&unk_10168E130);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v11, 1, 1, v12);
  *(void *)&a7[OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_collapsedSections] = &_swiftEmptySetSingleton;
  a7[OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_shouldSaveViewState] = 0;
  *(void *)&a7[OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController____lazy_storage___layoutBarButtonItem] = 0;
  *(void *)&a7[OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController____lazy_storage___toolbarItemToAddBoard] = 0;
  *(void *)&a7[OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController____lazy_storage___toolbarItemToSelectAllOrNone] = 0;
  *(void *)&a7[OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController____lazy_storage___editModeToolbarButtonToDuplicateSelectedItems] = 0;
  uint64_t v13 = (uint64_t *)&a7[OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_defaultTitleForToolbarItemToSelectAllOrNone];
  id v14 = self;
  id v15 = a7;
  id v16 = [v14 mainBundle];
  NSString v17 = String._bridgeToObjectiveC()();
  NSString v18 = String._bridgeToObjectiveC()();
  id v19 = [v16 localizedStringForKey:v17 value:v18 table:0];

  uint64_t v20 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v22 = v21;

  *uint64_t v13 = v20;
  v13[1] = v22;
  uint64_t v23 = (uint64_t *)&v15[OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_alternateTitleForToolbarItemToSelectAllOrNone];
  id v24 = [v14 mainBundle];
  NSString v25 = String._bridgeToObjectiveC()();
  NSString v26 = String._bridgeToObjectiveC()();
  id v27 = [v24 localizedStringForKey:v25 value:v26 table:0];

  uint64_t v28 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v30 = v29;

  uint64_t *v23 = v28;
  v23[1] = v30;
  *(void *)&v15[OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController____lazy_storage___emptyFolderViewController] = 0;
  *(void *)&v15[OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_emptyFolderBottomConstraint] = 0;
  *(void *)&v15[OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_keyboardHeight] = 0;
  v15[OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_showsEmptyFolderView] = 0;
  sub_100A982B0(a1, (uint64_t)&v15[OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_folder], type metadata accessor for CRLBoardLibraryViewModel.Folder);
  id v31 = &v15[OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_libraryProvider];
  void *v31 = a2;
  v31[1] = &off_101532D48;
  *((void *)v8 + 1) = &off_101520100;
  swift_unknownObjectWeakAssign();
  *(void *)&v15[OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_boardPreviewImageCache] = a3;
  sub_100522E9C(a5, (uint64_t)v44, &qword_101680008);
  type metadata accessor for CRLBoardSearchHelper();
  swift_allocObject();
  id v32 = a2;
  id v33 = a3;
  *(void *)&v15[OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_boardSearchHelper] = sub_1007A0CB0((uint64_t)v44);
  v15[OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController_isGridLayout] = a6;
  uint64_t v34 = &v15[OBJC_IVAR____TtC8Freeform30CRLiOSFolderGridViewController__persistedSortOptions];
  *(_WORD *)uint64_t v34 = 1;
  v34[2] = 0;

  id v35 = [objc_allocWithZone((Class)UICollectionViewLayout) init];
  v43.receiver = v15;
  v43.super_class = (Class)type metadata accessor for CRLiOSFolderGridViewController();
  [super initWithCollectionViewLayout:v35];

  [v36 setHidesBottomBarWhenPushed:1];
  sub_100522F00(a5, &qword_101680008);
  sub_100A98CC0(a1, type metadata accessor for CRLBoardLibraryViewModel.Folder);
  return v36;
}

id sub_100A965B0(uint64_t a1, uint64_t a2, char a3, char a4)
{
  swift_bridgeObjectRetain();
  NSString v6 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  uint64_t v7 = self;
  id v8 = &selRef_systemImageNamed_;
  if ((a3 & 1) == 0) {
    id v8 = &selRef_imageNamed_;
  }
  id v9 = [v7 *v8 v6];

  if (!v9) {
    return 0;
  }
  id v10 = [self systemCyanColor];
  id v11 = objc_allocWithZone((Class)UIColor);
  v24[4] = sub_100A8DE38;
  v24[5] = 0;
  v24[0] = _NSConcreteStackBlock;
  v24[1] = *(void *)"";
  v24[2] = sub_1005058D4;
  v24[3] = &unk_1015207C0;
  uint64_t v12 = _Block_copy(v24);
  id v13 = [v11 initWithDynamicProvider:v12];
  _Block_release(v12);
  swift_release();
  sub_1005057FC((uint64_t *)&unk_101676C10);
  uint64_t v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_10117DF50;
  if (a4)
  {
    *(void *)(v14 + 32) = v13;
    *(void *)(v14 + 40) = v10;
  }
  else
  {
    *(void *)(v14 + 32) = v10;
    *(void *)(v14 + 40) = v13;
  }
  v24[0] = v14;
  specialized Array._endMutation()();
  sub_10050BF48(0, (unint64_t *)&qword_101687FC0);
  id v16 = v13;
  id v17 = v10;
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v19 = self;
  id v20 = [v19 configurationWithPaletteColors:isa];

  id v21 = [v19 configurationWithScale:2];
  id v22 = [v20 configurationByApplyingConfiguration:v21];

  id v15 = [v9 imageWithConfiguration:v22];
  return v15;
}

uint64_t sub_100A96850(char *a1, void *a2, void *a3, uint64_t a4, int a5, void *a6, void *a7, int a8, uint64_t a9)
{
  int v64 = a5;
  uint64_t v16 = sub_1005057FC(&qword_101672BB0);
  __chkstk_darwin(v16 - 8, v17);
  NSString v63 = (char *)&v63 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = a6;
  *(void *)(v19 + 24) = a7;
  int v66 = a8;
  *(unsigned char *)(v19 + 32) = a8;
  uint64_t v65 = a9;
  *(void *)(v19 + 40) = a9;
  id v20 = *(void **)&a1[OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate_window];
  uint64_t v67 = a7;
  uint64_t v68 = a6;
  if (v20)
  {
    id v21 = a7;
    id v22 = a6;
    id v23 = [v20 rootViewController];
    if (v23)
    {
      id v24 = v23;
      id v25 = [v23 crl_windowWrapper];

      if (v25)
      {
        id v26 = [v25 newWrapperBeginningIgnoringUserInteractionSafely];

        if (v26) {
          goto LABEL_10;
        }
      }
    }
  }
  else
  {
    id v27 = a7;
    id v28 = a6;
  }
  if (qword_10166F9D8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  id v29 = (id)static OS_os_log.crlError;
  uint64_t v30 = static os_log_type_t.error.getter();
  sub_100BAC898((uint64_t)v29, (uint64_t)&_mh_execute_header, v30, (uint64_t)"Could not create token for ignoring user interaction; view hierarchy may not be set up yet",
    90,
    2,
    (uint64_t)_swiftEmptyArrayStorage);

  id v26 = 0;
LABEL_10:
  id v31 = (unsigned char *)(a4 + 16);
  id v32 = [a2 cloudKitShareMetadata];
  id v33 = v68;
  if (v32)
  {
    uint64_t v34 = v32;
    if (qword_10166FB38 != -1) {
      swift_once();
    }
    swift_beginAccess();
    id v35 = (void *)static OS_os_log.sceneManagement;
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_10117E810;
    *(void *)(inited + 56) = type metadata accessor for CRLiOSSceneDelegate();
    *(void *)(inited + 64) = sub_100A99018((unint64_t *)&unk_10168E260, (void (*)(uint64_t))type metadata accessor for CRLiOSSceneDelegate);
    *(void *)(inited + 32) = a1;
    id v37 = v35;
    id v38 = a1;
    uint64_t v39 = static os_log_type_t.default.getter();
    sub_100BAC898((uint64_t)v37, (uint64_t)&_mh_execute_header, v39, (uint64_t)"Scene delegate (%p) accepting CloudKit share", 44, 2, inited);
    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();

    sub_100A7D46C(v34);
  }
  else if (a3)
  {
    uint64_t v40 = qword_10166FB38;
    id v41 = a3;
    if (v40 != -1) {
      swift_once();
    }
    swift_beginAccess();
    uint64_t v42 = (void *)static OS_os_log.sceneManagement;
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t v43 = swift_initStackObject();
    *(_OWORD *)(v43 + 16) = xmmword_10117E810;
    *(void *)(v43 + 56) = type metadata accessor for CRLiOSSceneDelegate();
    *(void *)(v43 + 64) = sub_100A99018((unint64_t *)&unk_10168E260, (void (*)(uint64_t))type metadata accessor for CRLiOSSceneDelegate);
    *(void *)(v43 + 32) = a1;
    uint64_t v44 = a1;
    id v45 = v42;
    uint64_t v46 = static os_log_type_t.default.getter();
    sub_100BAC898((uint64_t)v45, (uint64_t)&_mh_execute_header, v46, (uint64_t)"Scene delegate (%p) handling user activity", 42, 2, v43);
    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();

    uint64_t v47 = (void *)swift_allocObject();
    v47[2] = v44;
    v47[3] = v41;
    v47[4] = sub_100A9A65C;
    v47[5] = v19;
    v47[6] = v26;
    id v48 = v26;
    long long v49 = v44;
    id v50 = v41;
    swift_retain();
    sub_100A6F12C((uint64_t)sub_100A997C0, (uint64_t)v47);

    swift_release();
    swift_beginAccess();
    unsigned char *v31 = 1;
  }
  else
  {
    if ((v64 & 1) == 0) {
      goto LABEL_23;
    }
    if (qword_10166FB38 != -1) {
      swift_once();
    }
    swift_beginAccess();
    id v51 = (void *)static OS_os_log.sceneManagement;
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t v52 = swift_initStackObject();
    *(_OWORD *)(v52 + 16) = xmmword_10117E810;
    *(void *)(v52 + 56) = type metadata accessor for CRLiOSSceneDelegate();
    *(void *)(v52 + 64) = sub_100A99018((unint64_t *)&unk_10168E260, (void (*)(uint64_t))type metadata accessor for CRLiOSSceneDelegate);
    *(void *)(v52 + 32) = a1;
    NSString v53 = a1;
    id v54 = v51;
    uint64_t v55 = static os_log_type_t.default.getter();
    sub_100BAC898((uint64_t)v54, (uint64_t)&_mh_execute_header, v55, (uint64_t)"Scene delegate (%p) showing new board before First Launch", 57, 2, v52);
    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();

    uint64_t v56 = type metadata accessor for TaskPriority();
    uint64_t v57 = (uint64_t)v63;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v56 - 8) + 56))(v63, 1, 1, v56);
    type metadata accessor for MainActor();
    id v58 = v26;
    id v59 = v53;
    swift_retain();
    uint64_t v60 = static MainActor.shared.getter();
    uint64_t v61 = (void *)swift_allocObject();
    v61[2] = v60;
    v61[3] = &protocol witness table for MainActor;
    v61[4] = v59;
    v61[5] = sub_100A9A65C;
    v61[6] = v19;
    v61[7] = v26;
    sub_1005912D0(v57, (uint64_t)&unk_10168E2F8, (uint64_t)v61);
    swift_release();
    swift_beginAccess();
    unsigned char *v31 = 1;
  }
  id v33 = v68;
LABEL_23:
  swift_beginAccess();
  if ((*v31 & 1) == 0)
  {
    sub_100A7562C(v33, v67, v66 & 1, v65);
    [v26 endIgnoringUserInteractionSafely];
  }

  return swift_release();
}

id sub_100A96FE0(unsigned __int8 a1)
{
  int v1 = a1;
  uint64_t v2 = self;
  uint64_t v3 = &selRef_lineFragmentClosestToPoint_knobTag_;
  id v4 = [(id)v2 mainBundle];
  NSString v5 = String._bridgeToObjectiveC()();
  NSString v6 = String._bridgeToObjectiveC()();
  id v7 = [v4 localizedStringForKey:v5 value:v6 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  sub_1007976C0();
  if (v1 != 2) {
    goto LABEL_15;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  LOBYTE(v8) = sub_100CEB290();
  LOBYTE(v9) = [self crl_iPadDevice];
  if (qword_10166F100 != -1) {
    goto LABEL_43;
  }
  while (1)
  {
    if (v8)
    {
      if (v9)
      {
        uint64_t v10 = qword_10166F118;
        swift_bridgeObjectRetain();
        if (v10 == -1) {
          goto LABEL_12;
        }
      }
      else
      {
        uint64_t v12 = qword_10166F108;
        swift_bridgeObjectRetain();
        if (v12 == -1)
        {
LABEL_12:
          swift_bridgeObjectRetain();
          id v13 = [(id)v2 v3[111]];
          NSString v14 = String._bridgeToObjectiveC()();
          NSString v15 = String._bridgeToObjectiveC()();
          id v16 = [v13 localizedStringForKey:v14 value:v15 table:0];

          static String._unconditionallyBridgeFromObjectiveC(_:)();
          NSString v17 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease();
          v38[4] = sub_100A9A6D8;
          v38[5] = 0;
          v38[0] = _NSConcreteStackBlock;
          v38[1] = *(void *)"";
          v38[2] = sub_10051CE64;
          v38[3] = &unk_1015204B0;
          uint64_t v18 = _Block_copy(v38);
          swift_release();
          id v8 = [self actionWithTitle:v17 style:0 handler:v18];
          uint64_t v19 = v18;
          uint64_t v3 = &selRef_lineFragmentClosestToPoint_knobTag_;
          _Block_release(v19);

          goto LABEL_16;
        }
      }
      swift_once();
      goto LABEL_12;
    }
    if ((v9 & 1) == 0)
    {
      uint64_t v20 = qword_10166F110;
      swift_bridgeObjectRetain();
      if (v20 == -1) {
        goto LABEL_14;
      }
LABEL_45:
      swift_once();
      goto LABEL_14;
    }
    uint64_t v11 = qword_10166F120;
    swift_bridgeObjectRetain();
    if (v11 != -1) {
      goto LABEL_45;
    }
LABEL_14:
    swift_bridgeObjectRetain();
LABEL_15:
    id v8 = 0;
LABEL_16:
    NSString v21 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    NSString v22 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v23 = [self alertControllerWithTitle:v21 message:v22 preferredStyle:1];

    v38[0] = _swiftEmptyArrayStorage;
    if (v8)
    {
      id v24 = v8;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)((v38[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v38[0] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
    }
    id v25 = [v2 v3[111] v38[0]];
    NSString v26 = String._bridgeToObjectiveC()();
    NSString v27 = String._bridgeToObjectiveC()();
    id v28 = [v25 localizedStringForKey:v26 value:v27 table:0];

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    NSString v29 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v30 = [self actionWithTitle:v29 style:0 handler:0];

    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    unint64_t v9 = *(void *)((v38[0] & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v9 >= *(void *)((v38[0] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
    uint64_t v2 = v38[0];
    uint64_t v31 = v38[0] >> 62;
    if (v38[0] >> 62)
    {
      swift_bridgeObjectRetain_n();
      uint64_t v32 = _CocoaArrayWrapper.endIndex.getter();
      if (!v32) {
        goto LABEL_31;
      }
    }
    else
    {
      uint64_t v32 = *(void *)((v38[0] & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain_n();
      if (!v32) {
        goto LABEL_31;
      }
    }
    if (v32 < 1) {
      break;
    }
    unint64_t v9 = 0;
    uint64_t v3 = (char **)(v2 & 0xC000000000000001);
    do
    {
      if (v3) {
        id v33 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v33 = *(id *)(v2 + 8 * v9 + 32);
      }
      uint64_t v34 = v33;
      ++v9;
      [v23 addAction:v33];
    }
    while (v32 != v9);
LABEL_31:
    swift_bridgeObjectRelease_n();
    if (v31)
    {
      swift_bridgeObjectRetain();
      id v35 = (void *)_CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (!v35) {
        goto LABEL_37;
      }
    }
    else
    {
      id v35 = *(void **)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (!v35) {
        goto LABEL_37;
      }
    }
    if ((v2 & 0xC000000000000001) != 0) {
      goto LABEL_41;
    }
    if (*(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      id v36 = *(id *)(v2 + 32);
      goto LABEL_36;
    }
    __break(1u);
LABEL_43:
    swift_once();
  }
  __break(1u);
LABEL_41:
  id v36 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_36:
  id v35 = v36;
LABEL_37:
  swift_bridgeObjectRelease();
  [v23 setPreferredAction:v35];

  return v23;
}

uint64_t sub_100A97738()
{
  uint64_t v1 = sub_1005057FC(&qword_101672BB0);
  __chkstk_darwin(v1 - 8, v2);
  id v4 = (char *)&v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1005057FC(&qword_101672E90);
  __chkstk_darwin(v5 - 8, v6);
  id v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for URL();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  __chkstk_darwin(v9, v12);
  id v13 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14, v15);
  NSString v17 = (char *)&v27 - v16;
  uint64_t v18 = swift_bridgeObjectRetain();
  uint64_t v19 = (void *)sub_100999AF8(v18);
  swift_bridgeObjectRelease();
  if (!v19)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v8, 1, 1, v9);
    return sub_100522F00((uint64_t)v8, &qword_101672E90);
  }
  id v20 = [v19 URL];

  static URL._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v21 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
  v21(v8, v13, v9);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v8, 0, 1, v9);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1) {
    return sub_100522F00((uint64_t)v8, &qword_101672E90);
  }
  v21(v17, v8, v9);
  if ((v0[OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate_boardOpenInFlight] & 1) == 0)
  {
    v0[OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate_boardOpenInFlight] = 1;
    uint64_t v22 = type metadata accessor for TaskPriority();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v4, 1, 1, v22);
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v13, v17, v9);
    type metadata accessor for MainActor();
    id v28 = v0;
    uint64_t v23 = static MainActor.shared.getter();
    unint64_t v24 = (*(unsigned __int8 *)(v10 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
    id v25 = (char *)swift_allocObject();
    *((void *)v25 + 2) = v23;
    *((void *)v25 + 3) = &protocol witness table for MainActor;
    *((void *)v25 + 4) = v28;
    v21(&v25[v24], v13, v9);
    sub_1005912D0((uint64_t)v4, (uint64_t)&unk_10168E390, (uint64_t)v25);
    swift_release();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v17, v9);
}

void sub_100A97AD0()
{
  uint64_t v0 = type metadata accessor for CRLBoardCRDTData(0);
  __chkstk_darwin(v0 - 8, v1);
  uint64_t v3 = (char *)&v32 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for UUID();
  uint64_t v5 = *(void **)(v4 - 8);
  __chkstk_darwin(v4, v6);
  id v8 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for CRLBoardIdentifier(0);
  __chkstk_darwin(v9 - 8, v10);
  uint64_t v12 = (char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v13 = sub_100A70A50();
  id v37 = [v13 presentedViewController];

  if (!v37) {
    return;
  }
  self;
  uint64_t v14 = (void *)swift_dynamicCastObjCClass();
  if (v14)
  {
    id v36 = [v14 topViewController];

    if (!v36) {
      return;
    }
    type metadata accessor for CRLiOSBoardViewController();
    uint64_t v15 = swift_dynamicCastClass();
    if (v15)
    {
      uint64_t v16 = (char *)v15;
      id v37 = v5;
      if (qword_10166FB38 != -1) {
        swift_once();
      }
      swift_beginAccess();
      id v34 = (id)static OS_os_log.sceneManagement;
      sub_1005057FC((uint64_t *)&unk_101672B40);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_10117E810;
      uint64_t v18 = *(void *)&v16[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_editingCoordinator];
      id v35 = v16;
      uint64_t v19 = *(char **)(v18 + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard);
      uint64_t v20 = OBJC_IVAR____TtC8Freeform8CRLBoard_data;
      uint64_t v21 = *(void *)&v19[OBJC_IVAR____TtC8Freeform8CRLBoard_data] + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
      swift_beginAccess();
      sub_100A982B0(v21, (uint64_t)v3, type metadata accessor for CRLBoardCRDTData);
      id v34 = v34;
      id v33 = v19;
      swift_retain();
      sub_1005057FC(&qword_101674550);
      CRRegister.wrappedValue.getter();
      sub_100A98CC0((uint64_t)v3, type metadata accessor for CRLBoardCRDTData);
      swift_release();
      uint64_t v22 = (uint64_t *)(*(void *)&v19[v20] + OBJC_IVAR____TtC8Freeform12CRLBoardData_ownerName);
      uint64_t v23 = *v22;
      unint64_t v24 = v22[1];
      swift_bridgeObjectRetain();
      sub_100753370((uint64_t)v8, v23, v24, (uint64_t)v12);

      id v25 = (void (**)(char *, uint64_t))v37;
      (*((void (**)(char *, char *, uint64_t))v37 + 2))(v8, v12, v4);
      sub_100A98CC0((uint64_t)v12, type metadata accessor for CRLBoardIdentifier);
      uint64_t v26 = UUID.uuidString.getter();
      uint64_t v28 = v27;
      v25[1](v8, v4);
      *(void *)(inited + 56) = &type metadata for String;
      *(void *)(inited + 64) = sub_100528BE4();
      *(void *)(inited + 32) = v26;
      *(void *)(inited + 40) = v28;
      uint64_t v29 = static os_log_type_t.default.getter();
      id v30 = v34;
      sub_100BAC898((uint64_t)v34, (uint64_t)&_mh_execute_header, v29, (uint64_t)"Tearing down the board view controller after disconnecting the scene for identifier %{public}@", 94, 2, inited);
      swift_setDeallocating();
      sub_1005057FC(&qword_101672B50);
      swift_arrayDestroy();

      sub_100A76CF0(v35, 0);
      return;
    }
    id v31 = v36;
  }
  else
  {
    id v31 = v37;
  }
}

uint64_t sub_100A97F68(void *a1)
{
  uint64_t v3 = sub_1005057FC(&qword_101672BB0);
  *(void *)&double v5 = __chkstk_darwin(v3 - 8, v4).n128_u64[0];
  uint64_t v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v8 = [a1 type];
  uint64_t v9 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v11 = v10;

  v12._countAndFlagsBits = v9;
  v12._object = v11;
  Swift::Int v13 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1015047E8, v12);
  uint64_t result = swift_bridgeObjectRelease();
  if (!v13)
  {
    uint64_t v15 = type metadata accessor for TaskPriority();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v7, 1, 1, v15);
    type metadata accessor for MainActor();
    id v16 = v1;
    uint64_t v17 = static MainActor.shared.getter();
    uint64_t v18 = (void *)swift_allocObject();
    v18[2] = v17;
    v18[3] = &protocol witness table for MainActor;
    v18[4] = v16;
    sub_1005914F0((uint64_t)v7, (uint64_t)&unk_10168E380, (uint64_t)v18);
    return swift_release();
  }
  return result;
}

void sub_100A980DC(uint64_t a1, uint64_t a2)
{
  if (qword_10166F9D8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v4 = (void *)static OS_os_log.crlError;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117D8C0;
  *(void *)(inited + 56) = &type metadata for String;
  unint64_t v6 = sub_100528BE4();
  *(void *)(inited + 64) = v6;
  *(void *)(inited + 32) = a1;
  *(void *)(inited + 40) = a2;
  swift_getErrorValue();
  id v7 = v4;
  swift_bridgeObjectRetain();
  uint64_t v8 = Error.localizedDescription.getter();
  *(void *)(inited + 96) = &type metadata for String;
  *(void *)(inited + 104) = v6;
  *(void *)(inited + 72) = v8;
  *(void *)(inited + 80) = v9;
  uint64_t v10 = static os_log_type_t.error.getter();
  sub_100BAC898((uint64_t)v7, (uint64_t)&_mh_execute_header, v10, (uint64_t)"Unable to accept Handoff with type: %@, error: %@.", 50, 2, inited);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();
}

unint64_t sub_100A98254()
{
  unint64_t result = qword_10168E0E8;
  if (!qword_10168E0E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168E0E8);
  }
  return result;
}

uint64_t sub_100A982A8(uint64_t a1)
{
  return sub_100A8E568(a1);
}

uint64_t sub_100A982B0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_100A98318()
{
  uint64_t v1 = *(void *)(type metadata accessor for CRLBoardLibraryViewModel.Item(0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 40) & ~v2;
  uint64_t v4 = *(void *)(v1 + 64);
  swift_unknownObjectRelease();

  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    uint64_t v8 = type metadata accessor for UUID();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v0 + v3, v8);
    type metadata accessor for CRLBoardIdentifierStorage(0);
    swift_bridgeObjectRelease();
    sub_1005057FC(&qword_101677100);
    goto LABEL_6;
  }
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v6 = sub_1005057FC(&qword_101670F30);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48))(v0 + v3, 5, v6))
    {
      uint64_t v7 = type metadata accessor for UUID();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v0 + v3, v7);
LABEL_6:
      swift_bridgeObjectRelease();
    }
  }
  swift_errorRelease();

  return _swift_deallocObject(v0, ((v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 8, v2 | 7);
}

uint64_t sub_100A984FC(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for CRLBoardLibraryViewModel.Item(0) - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = v1[2];
  uint64_t v7 = v1[3];
  uint64_t v8 = v1[4];
  uint64_t v9 = (uint64_t)v1 + v5;
  uint64_t v10 = *(void *)((char *)v1 + ((*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v11;
  *uint64_t v11 = v2;
  v11[1] = sub_100528D08;
  return sub_100A92280(a1, v6, v7, v8, v9, v10);
}

uint64_t sub_100A98628(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  unint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *unint64_t v5 = v2;
  v5[1] = sub_100528488;
  return sub_100A926CC(a1, v4);
}

void sub_100A986C4(uint64_t a1)
{
  sub_100BC70EC(a1, *(void *)(v1 + 16), *(void ***)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40));
}

void sub_100A986D0()
{
  uint64_t v1 = sub_1005057FC(&qword_101672BB0);
  *(void *)&double v3 = __chkstk_darwin(v1 - 8, v2).n128_u64[0];
  unint64_t v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate_window;
  uint64_t v7 = *(void **)&v0[OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate_window];
  if (v7 && objc_msgSend(v7, "isUserInteractionEnabled", v3) && (sub_100A70DDC() & 1) == 0)
  {
    uint64_t v8 = self;
    NSString v9 = String._bridgeToObjectiveC()();
    _s8Freeform23CRLAnalyticsFeatureUsedC14featurePayload3forSDySSSo8NSObjectCGAA0bC4NameO_tFZ_0(5);
    sub_10050BF48(0, (unint64_t *)&qword_101672E50);
    Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v8 sendEventInDomain:v9 lazily:1 eventPayload:isa];

    uint64_t v11 = *(void **)&v0[v6];
    if (!v11
      || (id v12 = [v11 rootViewController]) == 0
      || (uint64_t v13 = v12,
          id v14 = objc_msgSend(v12, "crl_windowWrapper"),
          v13,
          !v14)
      || (id v15 = [v14 newWrapperBeginningIgnoringUserInteractionSafely], v14, !v15))
    {
      if (qword_10166F9D8 != -1) {
        swift_once();
      }
      swift_beginAccess();
      id v16 = (id)static OS_os_log.crlError;
      uint64_t v17 = static os_log_type_t.error.getter();
      sub_100BAC898((uint64_t)v16, (uint64_t)&_mh_execute_header, v17, (uint64_t)"Could not create token for ignoring user interaction; view hierarchy may not be set up yet",
        90,
        2,
        (uint64_t)_swiftEmptyArrayStorage);

      id v15 = 0;
    }
    uint64_t v18 = type metadata accessor for TaskPriority();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v5, 1, 1, v18);
    type metadata accessor for MainActor();
    id v19 = v15;
    uint64_t v20 = v0;
    uint64_t v21 = static MainActor.shared.getter();
    uint64_t v22 = (void *)swift_allocObject();
    v22[2] = v21;
    v22[3] = &protocol witness table for MainActor;
    v22[4] = v20;
    v22[5] = v15;
    sub_1005912D0((uint64_t)v5, (uint64_t)&unk_10168E190, (uint64_t)v22);
    swift_release();
  }
}

uint64_t sub_100A989C8(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v6 = v1[5];
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_100528D08;
  return sub_100A83DF0(a1, v4, v5, v7, v6);
}

uint64_t sub_100A98A8C(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  NSString v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *NSString v9 = v2;
  v9[1] = sub_100528D08;
  return sub_100A85E6C(a1, v4, v5, v6, v7, v8);
}

unint64_t sub_100A98B54()
{
  unint64_t result = qword_10168E1C8;
  if (!qword_10168E1C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168E1C8);
  }
  return result;
}

void sub_100A98BAC(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(type metadata accessor for CRLBoardIdentifier(0) - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = *(void *)(v2 + ((*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8));

  sub_100EFD5F0(a1, a2, v2 + v6, v7);
}

uint64_t sub_100A98C58(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_100A98CC0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_100A98D20(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100A98D30()
{
  return swift_release();
}

uint64_t sub_100A98D38()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_100A98D70(void *a1@<X0>, _OWORD *a2@<X8>)
{
  sub_100A95590(a1, *(void *)(v2 + 16), a2);
}

uint64_t sub_100A98D7C(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v6 = v1[5];
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_100528D08;
  return sub_100A93668(a1, v4, v5, v7, v6);
}

uint64_t sub_100A98E44()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100A98E7C()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

void sub_100A98EBC()
{
  sub_100A8E3F0(*(void *)(v0 + 16));
}

uint64_t sub_100A98EC4()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

void sub_100A98EFC()
{
}

uint64_t sub_100A98F08()
{
  swift_unknownObjectRelease();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_100A98F50(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v6 = v1[5];
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_100528D08;
  return sub_100A7F804(a1, v4, v5, v7, v6);
}

void sub_100A99010()
{
}

uint64_t sub_100A99018(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100A99060(uint64_t a1)
{
  return sub_100DDCC28(*(void *)(v1 + 16), a1 + OBJC_IVAR____TtC8Freeform32CRLBoardLibraryViewModelItemNode_item);
}

uint64_t sub_100A9907C()
{
  swift_unknownObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 64, 7);
}

uint64_t sub_100A990D4()
{
  swift_unknownObjectRelease();

  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_100A9911C(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  NSString v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *NSString v9 = v2;
  v9[1] = sub_100528D08;
  return sub_100A78868(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_100A991E4()
{
  swift_unknownObjectRelease();

  unint64_t v1 = *(void *)(v0 + 88);
  if (v1 >> 60 != 15) {
    sub_100510084(*(void *)(v0 + 80), v1);
  }
  unint64_t v2 = *(void *)(v0 + 104);
  if (v2 >> 60 != 15) {
    sub_100510084(*(void *)(v0 + 96), v2);
  }

  return _swift_deallocObject(v0, 113, 7);
}

uint64_t sub_100A99254(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_100528D08;
  return sub_100E47D00(a1, v4, v5, v6, (uint64_t)(v1 + 5));
}

void *sub_100A99318(void *a1, void (*a2)(uint64_t, uint64_t))
{
  uint64_t v4 = a1[7];
  uint64_t v5 = a1[8];
  a2(a1[5], a1[6]);
  a2(v4, v5);
  return a1;
}

uint64_t sub_100A99370()
{
  unint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *unint64_t v1 = v0;
  v1[1] = sub_100528D08;
  return sub_100E4523C();
}

uint64_t sub_100A99424()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100A99434()
{
  return _swift_deallocObject(v0, 48, 7);
}

void sub_100A99474()
{
  sub_100A7562C(*(void **)(v0 + 16), *(void **)(v0 + 24), *(unsigned char *)(v0 + 32), *(void *)(v0 + 40));
}

uint64_t sub_100A99484()
{
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 65, 7);
}

void sub_100A994DC()
{
  sub_100A759CC(*(char **)(v0 + 16), *(void **)(v0 + 24), *(void **)(v0 + 32), *(void (**)(void))(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 56), *(unsigned char *)(v0 + 64));
}

uint64_t sub_100A994F0()
{
  swift_unknownObjectRelease();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100A99530(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for URL() - 8);
  uint64_t v5 = v1[2];
  uint64_t v6 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v8 = (uint64_t)v1 + ((*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_100528D08;
  return sub_100A74190(a1, v5, v6, v7, v8);
}

uint64_t sub_100A99630(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_100528D08;
  return sub_100A72788(a1, v4, v5, v6);
}

uint64_t sub_100A996E8(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v9 = v1[6];
  uint64_t v8 = v1[7];
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  void *v10 = v2;
  v10[1] = sub_100528D08;
  return sub_100A764AC(a1, v4, v5, v6, v7, v9, v8);
}

uint64_t sub_100A997C4()
{
  unint64_t v1 = (int *)(sub_1005057FC(&qword_10168E300) - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 32) & ~v2;
  uint64_t v4 = v2 | 7;
  unint64_t v5 = ((*(void *)(*(void *)v1 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  swift_unknownObjectRelease();
  swift_release();
  uint64_t v6 = v0 + v3 + v1[13];
  uint64_t v7 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  swift_release();

  return _swift_deallocObject(v0, v5, v4);
}

uint64_t sub_100A998D8()
{
  uint64_t v2 = *(void *)(sub_1005057FC(&qword_10168E300) - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = v0 + v3;
  uint64_t v5 = *(void *)(v0 + ((*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v6;
  void *v6 = v1;
  v6[2] = v4;
  v6[3] = v5;
  v6[1] = sub_100528488;
  return _swift_task_switch(sub_100A6FA88, 0, 0);
}

uint64_t sub_100A999EC()
{
  return static UUID.== infix(_:_:)() & 1;
}

uint64_t sub_100A99A40()
{
  swift_unknownObjectRelease();

  swift_release();

  return _swift_deallocObject(v0, 72, 7);
}

uint64_t sub_100A99A98(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  uint64_t v9 = v1[7];
  uint64_t v10 = v1[8];
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v11;
  *uint64_t v11 = v2;
  v11[1] = sub_100528D08;
  return sub_100A76224(a1, v4, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_100A99B78()
{
  swift_unknownObjectRelease();

  swift_release();

  return _swift_deallocObject(v0, 64, 7);
}

uint64_t sub_100A99BCC()
{
  swift_release();

  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_100A99C1C()
{
  return sub_100A760D0(*(void **)(v0 + 16), *(void **)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(void **)(v0 + 48));
}

uint64_t sub_100A99C2C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1005057FC(&qword_10168E108);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_100A99C94()
{
  return _swift_deallocObject(v0, 32, 7);
}

void sub_100A99CD4()
{
  sub_100A81248(*(char **)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_100A99CE0()
{
  swift_release();

  swift_release();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_100A99D2C()
{
  return sub_100A813E0(v0[2], v0[3], v0[4]);
}

uint64_t sub_100A99D3C(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_100528D08;
  return sub_100A81518(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_100A99E08()
{
  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_100A99E54(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_100528D08;
  return sub_100A77E0C(a1, v4, v5, v6);
}

uint64_t sub_100A99F0C()
{
  uint64_t v1 = type metadata accessor for URL();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 40) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_unknownObjectRelease();

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_100A99FE0(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for URL() - 8);
  uint64_t v5 = v1[2];
  uint64_t v6 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v8 = (uint64_t)v1 + ((*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_100528D08;
  return sub_100A769AC(a1, v5, v6, v7, v8);
}

uint64_t sub_100A9A0E0(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for CRLBoardLibraryViewModel.Item(0) - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  unint64_t v6 = (*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v7 = *(void *)(v1 + 16);
  uint64_t v8 = *(void *)(v1 + 24);
  uint64_t v9 = v1 + v5;
  uint64_t v10 = *(void *)(v1 + v6);
  uint64_t v11 = *(void *)(v1 + ((v6 + 15) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v12;
  *uint64_t v12 = v2;
  v12[1] = sub_100528D08;
  return sub_100A84250(a1, v7, v8, v9, v10, v11);
}

uint64_t sub_100A9A218()
{
  uint64_t v1 = *(void *)(type metadata accessor for CRLBoardIdentifier(0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = v2 | 7;
  unint64_t v5 = (*(void *)(v1 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v6 = v0 + v3;
  uint64_t v7 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  type metadata accessor for CRLBoardIdentifierStorage(0);
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, v5 + 8, v4);
}

uint64_t sub_100A9A324()
{
  uint64_t v1 = *(void *)(type metadata accessor for CRLBoardIdentifier(0) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = *(char **)(v0 + ((*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8));

  return sub_100A88F00(v0 + v2, v3);
}

uint64_t sub_100A9A3B4()
{
  uint64_t v1 = *(void *)(type metadata accessor for CRLBoardLibraryViewModel.Item(0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 32) & ~v2;
  uint64_t v4 = *(void *)(v1 + 64);
  swift_unknownObjectRelease();
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    uint64_t v8 = type metadata accessor for UUID();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v0 + v3, v8);
    type metadata accessor for CRLBoardIdentifierStorage(0);
    swift_bridgeObjectRelease();
    sub_1005057FC(&qword_101677100);
    goto LABEL_6;
  }
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v6 = sub_1005057FC(&qword_101670F30);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48))(v0 + v3, 5, v6))
    {
      uint64_t v7 = type metadata accessor for UUID();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v0 + v3, v7);
LABEL_6:
      swift_bridgeObjectRelease();
    }
  }
  unint64_t v9 = (((v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  swift_release();

  return _swift_deallocObject(v0, v9 + 8, v2 | 7);
}

void *_s18AssetNameRecordKeyVwCP(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for CRLiOSSceneDelegateError(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *_s18AssetNameRecordKeyVwta(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for CRLiOSSceneDelegateError()
{
  return &type metadata for CRLiOSSceneDelegateError;
}

uint64_t sub_100A9A6E8()
{
  return sub_100A9A728((SEL *)&selRef_inferredAccessibilityDescriptionNoShapeNames, (uint64_t (*)(uint64_t, uint64_t))sub_10088BE6C);
}

uint64_t sub_100A9A708()
{
  return sub_100A9A728((SEL *)&selRef_inferredLocalizedAccessibilityDescriptionPlaceholder, (uint64_t (*)(uint64_t, uint64_t))sub_10088C380);
}

uint64_t sub_100A9A728(SEL *a1, uint64_t (*a2)(uint64_t, uint64_t))
{
  uint64_t v4 = (uint64_t (**)(void))(**(void **)((char *)v2 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData) + 408);
  unint64_t v5 = *v4;
  uint64_t v6 = (*v4)();
  if ((v7 & 1) != 0 && v6 == 1)
  {
    uint64_t v8 = (void *)(*(uint64_t (**)(void))((swift_isaMask & *v2) + 0x478))();
    id v9 = [v8 *a1];

    uint64_t v10 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    return v10;
  }
  else
  {
    uint64_t v12 = ((uint64_t (*)(uint64_t))v5)(v6);
    uint64_t v14 = v13 & 1;
    return a2(v12, v14);
  }
}

uint64_t sub_100A9A868()
{
  if ((*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x490))()) {
    return 0;
  }
  uint64_t v2 = (void *)(*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x478))();
  id v3 = [v2 bezierPath];

  LODWORD(v2) = [v3 isLineSegment];
  return v2 ^ 1;
}

uint64_t sub_100A9A93C(uint64_t a1)
{
  swift_getObjectType();

  return sub_100A9E5F8(a1, v1);
}

ProtocolDescriptor *sub_100A9A98C(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  uint64_t ObjectType = (ProtocolDescriptor *)swift_getObjectType();

  return sub_100A9EB60(a1, a2, a3, a4, v5, ObjectType, a5);
}

void sub_100A9AA00(void *a1)
{
  if ((*(uint64_t (**)(void))((swift_isaMask & *v1) + 0x4C0))())
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"shadow", 6, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLShapeItem.swift", 83, 2, 65, (uint64_t)"Should not try to set a shadow on a shape in a freehand drawing.", 64, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"shadow", 6, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLShapeItem.swift", 83, 2, 65);
  }
  else
  {
    sub_10088B0DC(a1);
  }
}

uint64_t sub_100A9AB20()
{
  uint64_t v1 = (void *)(*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x478))();
  id v2 = [v1 bezierPath];

  [v2 bounds];
  double v4 = v3;
  double v6 = v5;
  unsigned int v7 = [v2 isLineSegment];

  if (v6 >= 0.00000001) {
    return (v4 >= 0.00000001) & ~v7;
  }
  else {
    return 0;
  }
}

uint64_t sub_100A9ABEC()
{
  uint64_t v1 = OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData;
  id v2 = *(uint64_t (**)(uint64_t))(**(void **)((char *)v0
                                                       + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData)
                                         + 312);
  uint64_t v3 = swift_retain();
  char v4 = v2(v3);
  uint64_t v5 = swift_release();
  if (v4)
  {
    char v6 = 0;
  }
  else if ((*(uint64_t (**)(uint64_t))((swift_isaMask & *v0) + 0x490))(v5))
  {
    unsigned int v7 = *(uint64_t (**)(uint64_t))(**(void **)((char *)v0 + v1) + 336);
    uint64_t v8 = swift_retain();
    LOBYTE(v7) = v7(v8);
    swift_release();
    char v6 = v7 & (v4 ^ 1);
  }
  else
  {
    char v6 = 1;
  }
  return v6 & 1;
}

uint64_t sub_100A9AD14()
{
  uint64_t v1 = *(uint64_t (**)(uint64_t))(**(void **)((char *)v0
                                                       + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData)
                                         + 336);
  uint64_t v2 = swift_retain();
  LOBYTE(v1) = v1(v2);
  uint64_t v3 = swift_release();
  if (v1)
  {
    uint64_t v3 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *v0) + 0x290))(v3);
    if ((v3 & 1) == 0) {
      return 0;
    }
  }
  char v4 = *(uint64_t (**)(void))((swift_isaMask & *v0) + 0x478);
  uint64_t v5 = (void *)((uint64_t (*)(uint64_t))v4)(v3);
  sub_10050BF48(0, &qword_10168E4C8);
  unsigned __int8 v6 = [v5 isKindOfClass:swift_getObjCClassFromMetadata()];

  if (v6) {
    return 1;
  }
  uint64_t v8 = (void *)v4();
  sub_10050BF48(0, &qword_10168E4D0);
  id v7 = [v8 isKindOfClass:swift_getObjCClassFromMetadata()];

  return (uint64_t)v7;
}

uint64_t sub_100A9AEB0()
{
  uint64_t v1 = **(void **)(v0 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
  uint64_t result = swift_conformsToProtocol2();
  if (result)
  {
    uint64_t v3 = *(uint64_t (**)(uint64_t))(v1 + 704);
    uint64_t v4 = swift_retain();
    uint64_t v5 = v3(v4);
    swift_release();
    return v5;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100A9AF5C(uint64_t a1)
{
  uint64_t v2 = v1;
  if (!*(void *)(v1 + OBJC_IVAR____TtC8Freeform12CRLBoardItem_transactionContext))
  {
    id Strong = (void *)swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      uint64_t v5 = Strong;
      char v6 = (*(uint64_t (**)(void))((swift_isaMask & *Strong) + 0x2F0))();

      if (v6) {
        goto LABEL_9;
      }
    }
  }
  uint64_t v7 = **(void **)(v2 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
  if (!swift_conformsToProtocol2())
  {
    __break(1u);
LABEL_9:
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"_guardTransaction()", 19, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLTransactions/CRLTransactable.swift", 91, 2, 76, (uint64_t)"Attempting to mutate a CRLTransactable without a CRLTransactableContext set", 75, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_100586FD4((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Attempting to mutate a CRLTransactable without a CRLTransactableContext set");
    sub_1005871AC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"_guardTransaction()", 19, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLTransactions/CRLTransactable.swift", 91, 2, 76);
    SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v10, v11);
    uint64_t result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
    return result;
  }
  uint64_t v8 = *(void (**)(uint64_t))(v7 + 712);
  swift_retain();
  v8(a1);

  return swift_release();
}

id sub_100A9B170()
{
  uint64_t v1 = (void *)(*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x478))();
  id v2 = [v1 bezierPath];

  id v3 = [v2 isLineSegment];
  return v3;
}

uint64_t sub_100A9B204()
{
  uint64_t v1 = type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData(0);
  __chkstk_darwin(v1 - 8, v2);
  uint64_t v4 = (char *)&v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = **(void **)(v0 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
  uint64_t result = swift_conformsToProtocol2();
  if (result)
  {
    uint64_t v7 = result;
    uint64_t v8 = *(void (**)(uint64_t, uint64_t))(result + 16);
    swift_retain();
    v8(v5, v7);
    swift_release();
    sub_1005057FC((uint64_t *)&unk_1016A8B50);
    CRRegister.wrappedValue.getter();
    uint64_t v9 = v37;
    uint64_t v11 = v39;
    uint64_t v10 = v40;
    uint64_t v13 = v41;
    uint64_t v12 = v42;
    uint64_t v15 = v43;
    uint64_t v14 = v44;
    uint64_t v16 = v46;
    uint64_t v17 = v48;
    uint64_t v33 = v47;
    uint64_t v34 = v45;
    uint64_t v35 = v50;
    uint64_t v36 = v38;
    uint64_t v18 = (uint64_t)v4;
    id v19 = v49;
    sub_100AA0E64(v18, type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData);
    if (v19)
    {
      uint64_t v32 = v9;
      sub_10050BF48(0, (unint64_t *)&qword_10168F9E0);
      LODWORD(v37) = v11;
      uint64_t v29 = v11;
      BYTE4(v37) = BYTE4(v11) & 1;
      uint64_t v31 = v10;
      uint64_t v38 = v10;
      uint64_t v39 = v13;
      uint64_t v20 = v13;
      uint64_t v30 = v12;
      uint64_t v40 = v12;
      uint64_t v41 = v15;
      uint64_t v21 = v14;
      uint64_t v42 = v14;
      uint64_t v23 = v33;
      uint64_t v22 = v34;
      uint64_t v43 = v34;
      uint64_t v44 = v16;
      uint64_t v45 = v33;
      uint64_t v46 = v17;
      uint64_t v47 = (uint64_t)v19;
      uint64_t v28 = v17;
      swift_bridgeObjectRetain();
      uint64_t v27 = (uint64_t)v19;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      unint64_t v24 = sub_1007B0B84((uint64_t)&v37);
      if (v36)
      {
        if (qword_10166FB80 != -1) {
          swift_once();
        }
        swift_beginAccess();
        id v25 = (id)static OS_os_log.persistence;
        uint64_t v26 = static os_log_type_t.info.getter();
        sub_100BAC898((uint64_t)v25, (uint64_t)&_mh_execute_header, v26, (uint64_t)"Tried to decode unknown fill value. Falling back to unarchiving color fill.", 75, 2, (uint64_t)&_swiftEmptyArrayStorage);
      }
      id v19 = [objc_allocWithZone((Class)CRLColorFill) initWithColor:v24];

      sub_10051ABBC(v32, v36, v29, v31, v20, v30, v15, v21, v22, v16, v23, v28, v27);
    }
    return (uint64_t)v19;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100A9B548(void *a1)
{
  uint64_t v2 = v1;
  if (*(void *)(v1 + OBJC_IVAR____TtC8Freeform12CRLBoardItem_transactionContext)
    || (id Strong = (void *)swift_unknownObjectWeakLoadStrong()) == 0
    || (uint64_t v5 = Strong, v6 = (*(uint64_t (**)(void))((swift_isaMask & *Strong) + 0x2F0))(),
                     v5,
                     (v6 & 1) == 0))
  {
    uint64_t v7 = **(void **)(v2 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
    uint64_t v8 = swift_conformsToProtocol2();
    uint64_t v9 = v8;
    if (a1)
    {
      if (v8)
      {
        id v10 = a1;
        swift_retain();
        sub_100F91F6C(v10, (uint64_t)v35);
        uint64_t v11 = *(void *)&v35[0];
        uint64_t v12 = BYTE8(v35[0]);
        long long v25 = *(_OWORD *)((char *)&v35[2] + 8);
        long long v26 = *(_OWORD *)((char *)&v35[1] + 8);
        long long v23 = *(_OWORD *)((char *)&v35[4] + 8);
        long long v24 = *(_OWORD *)((char *)&v35[3] + 8);
        long long v22 = *(_OWORD *)((char *)&v35[5] + 8);
        uint64_t v13 = *((void *)&v35[6] + 1);
        uint64_t v14 = &_mh_execute_header;
        if (!BYTE4(v35[1])) {
          uint64_t v14 = 0;
        }
        unint64_t v15 = (unint64_t)v14 | LODWORD(v35[1]);
        uint64_t v16 = (void (*)(unsigned char *, void))(*(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v9 + 32))(v34, v7, v9);
        v27[0] = v11;
        v27[1] = v12;
        v27[2] = v15;
        long long v28 = v26;
        long long v29 = v25;
        long long v30 = v24;
        long long v31 = v23;
        long long v32 = v22;
        uint64_t v33 = v13;
        sub_1005057FC((uint64_t *)&unk_1016A8B50);
        CRRegister.wrappedValue.setter();
        v16(v34, 0);

        return swift_release();
      }
      __break(1u);
    }
    else if (v8)
    {
      uint64_t v17 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v8 + 32);
      swift_retain();
      uint64_t v18 = (void (*)(void *, void))v17(v27, v7, v9);
      memset(v35, 0, 112);
      sub_1005057FC((uint64_t *)&unk_1016A8B50);
      CRRegister.wrappedValue.setter();
      v18(v27, 0);
      return swift_release();
    }
    __break(1u);
  }
  sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"_guardTransaction()", 19, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLTransactions/CRLTransactable.swift", 91, 2, 76, (uint64_t)"Attempting to mutate a CRLTransactable without a CRLTransactableContext set", 75, 2u, (uint64_t)_swiftEmptyArrayStorage);
  sub_100586FD4((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Attempting to mutate a CRLTransactable without a CRLTransactableContext set");
  sub_1005871AC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"_guardTransaction()", 19, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLTransactions/CRLTransactable.swift", 91, 2, 76);
  SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v20, v21);
  uint64_t result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100A9B8C4()
{
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    type metadata accessor for CRLFreehandDrawingItem();
    if ([v1 isKindOfClass:swift_getObjCClassFromMetadata()])
    {
      sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"isFreehandDrawingShape", 22, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLShapeItem.swift", 83, 2, 152, (uint64_t)"Regular shapes should not be inside freehand drawings.", 54, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"isFreehandDrawingShape", 22, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLShapeItem.swift", 83, 2, 152);
    }
  }
  return 0;
}

BOOL sub_100A9B9CC()
{
  if (((*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x4C0))() & 1) == 0)
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"isTreatedAsFillForFreehandDrawing", 33, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLShapeItem.swift", 83, 2, 158, (uint64_t)"Should only ask about being a fill for a freehand drawing on freehand drawing shapes.", 85, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"isTreatedAsFillForFreehandDrawing", 33, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLShapeItem.swift", 83, 2, 158);
  }
  uint64_t v1 = (void *)sub_100A9B204();
  uint64_t v4 = (void *)(*(uint64_t (**)(void *, uint64_t, uint64_t))((swift_isaMask & *v0) + 0x420))(v1, v2, v3);
  uint64_t v5 = v4;
  if (v1)
  {
    if (v4)
    {
      if (([v4 isNullStroke] & 1) == 0)
      {
        sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"isTreatedAsFillForFreehandDrawing", 33, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLShapeItem.swift", 83, 2, 165, (uint64_t)"Should not have both fill and stroke.", 37, 2u, (uint64_t)_swiftEmptyArrayStorage);
        sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"isTreatedAsFillForFreehandDrawing", 33, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLShapeItem.swift", 83, 2, 165);
      }
    }
    else
    {
    }
  }
  else if (v4)
  {
  }
  else
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"isTreatedAsFillForFreehandDrawing", 33, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLShapeItem.swift", 83, 2, 171, (uint64_t)"Should have a fill or a stroke.", 31, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"isTreatedAsFillForFreehandDrawing", 33, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLShapeItem.swift", 83, 2, 171);
  }
  return v1 != 0;
}

uint64_t sub_100A9BC64()
{
  uint64_t v1 = type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData(0);
  __n128 v3 = __chkstk_darwin(v1, v2);
  uint64_t v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v6 = 0;
  if ((*(uint64_t (**)(__n128))((swift_isaMask & *v0) + 0x4C0))(v3)) {
    return (uint64_t)v6;
  }
  uint64_t v7 = **(void **)((char *)v0 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
  uint64_t result = swift_conformsToProtocol2();
  if (result)
  {
    uint64_t v9 = result;
    id v10 = *(void (**)(uint64_t, uint64_t))(result + 16);
    swift_retain();
    v10(v7, v9);
    swift_release();
    sub_1005057FC((uint64_t *)&unk_10168A0D0);
    CRRegister.wrappedValue.getter();
    uint64_t v11 = v19;
    uint64_t v12 = v20;
    uint64_t v13 = v21;
    uint64_t v14 = v22;
    uint64_t v15 = v23;
    uint64_t v16 = v24;
    uint64_t v17 = v25;
    sub_100AA0E64((uint64_t)v5, type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData);
    if (!v16) {
      return 0;
    }
    uint64_t v19 = v11;
    uint64_t v20 = v12;
    LOBYTE(v21) = v13 & 1;
    HIDWORD(v21) = HIDWORD(v13);
    LODWORD(v22) = v14;
    BYTE4(v22) = BYTE4(v14) & 1;
    uint64_t v23 = v15;
    uint64_t v24 = v16;
    uint64_t v25 = v17;
    sub_10050BF48(0, (unint64_t *)&qword_101672AC0);
    id v6 = sub_10089D008((uint64_t)&v19);
    sub_10051AC38(v11, v12, v13, v14, v15, v16);
    return (uint64_t)v6;
  }
  __break(1u);
  return result;
}

void sub_100A9BE98(void *a1)
{
  uint64_t v2 = v1;
  if (!*(void *)((char *)v1 + OBJC_IVAR____TtC8Freeform12CRLBoardItem_transactionContext))
  {
    uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      uint64_t v4 = Strong;
      char v5 = (*(uint64_t (**)(void))((swift_isaMask & *Strong) + 0x2F0))();

      if (v5) {
        goto LABEL_18;
      }
    }
  }
  if (((*(uint64_t (**)(void))((swift_isaMask & *v2) + 0x4C0))() & 1) == 0)
  {
    uint64_t v6 = **(void **)((char *)v2 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
    uint64_t v7 = swift_conformsToProtocol2();
    if (a1)
    {
      if (v7)
      {
        id v8 = a1;
        swift_retain();
        sub_10089D1B0(v8, (uint64_t)&v27);
        long long v9 = v27;
        *(_OWORD *)uint64_t v20 = v29;
        uint64_t v10 = v30;
        unint64_t v11 = v28 | ((unint64_t)DWORD1(v28) << 32);
        uint64_t v12 = &_mh_execute_header;
        if (!BYTE12(v28)) {
          uint64_t v12 = 0;
        }
        unint64_t v13 = (unint64_t)v12 | DWORD2(v28);
        uint64_t v14 = (void (*)(unsigned char *, void))(*(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v7 + 32))(v26, v6, v7);
        long long v21 = v9;
        unint64_t v22 = v11;
        unint64_t v23 = v13;
        long long v24 = *(_OWORD *)v20;
        uint64_t v25 = v10;
        type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData(0);
        sub_1005057FC((uint64_t *)&unk_10168A0D0);
        CRRegister.wrappedValue.setter();
        v14(v26, 0);

        goto LABEL_15;
      }
      __break(1u);
    }
    else if (v7)
    {
      uint64_t v15 = *(uint64_t (**)(long long *, uint64_t, uint64_t))(v7 + 32);
      swift_retain();
      uint64_t v16 = (void (*)(long long *, void))v15(&v21, v6, v7);
      type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData(0);
      long long v28 = 0u;
      long long v29 = 0u;
      uint64_t v30 = 0;
      long long v27 = 0u;
      sub_1005057FC((uint64_t *)&unk_10168A0D0);
      CRRegister.wrappedValue.setter();
      v16(&v21, 0);
LABEL_15:
      swift_release();
      return;
    }
    __break(1u);
LABEL_18:
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"_guardTransaction()", 19, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLTransactions/CRLTransactable.swift", 91, 2, 76, (uint64_t)"Attempting to mutate a CRLTransactable without a CRLTransactableContext set", 75, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_100586FD4((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Attempting to mutate a CRLTransactable without a CRLTransactableContext set");
    sub_1005871AC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"_guardTransaction()", 19, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLTransactions/CRLTransactable.swift", 91, 2, 76);
    SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v17, v18);
    _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
    return;
  }
  sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"headLineEnd", 11, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLShapeItem.swift", 83, 2, 194, (uint64_t)"Should not try to set a line end on a shape in a freehand drawing.", 66, 2u, (uint64_t)_swiftEmptyArrayStorage);
  sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"headLineEnd", 11, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLShapeItem.swift", 83, 2, 194);
}

uint64_t sub_100A9C2F4()
{
  uint64_t v1 = type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData(0);
  __n128 v3 = __chkstk_darwin(v1, v2);
  char v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v6 = 0;
  if ((*(uint64_t (**)(__n128))((swift_isaMask & *v0) + 0x4C0))(v3)) {
    return (uint64_t)v6;
  }
  uint64_t v7 = **(void **)((char *)v0 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
  uint64_t result = swift_conformsToProtocol2();
  if (result)
  {
    uint64_t v9 = result;
    uint64_t v10 = *(void (**)(uint64_t, uint64_t))(result + 16);
    swift_retain();
    v10(v7, v9);
    swift_release();
    sub_1005057FC((uint64_t *)&unk_10168A0D0);
    CRRegister.wrappedValue.getter();
    uint64_t v11 = v19;
    uint64_t v12 = v20;
    uint64_t v13 = v21;
    uint64_t v14 = v22;
    uint64_t v15 = v23;
    uint64_t v16 = v24;
    uint64_t v17 = v25;
    sub_100AA0E64((uint64_t)v5, type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData);
    if (!v16) {
      return 0;
    }
    uint64_t v19 = v11;
    uint64_t v20 = v12;
    LOBYTE(v21) = v13 & 1;
    HIDWORD(v21) = HIDWORD(v13);
    LODWORD(v22) = v14;
    BYTE4(v22) = BYTE4(v14) & 1;
    uint64_t v23 = v15;
    uint64_t v24 = v16;
    uint64_t v25 = v17;
    sub_10050BF48(0, (unint64_t *)&qword_101672AC0);
    id v6 = sub_10089D008((uint64_t)&v19);
    sub_10051AC38(v11, v12, v13, v14, v15, v16);
    return (uint64_t)v6;
  }
  __break(1u);
  return result;
}

void sub_100A9C528(void *a1)
{
  uint64_t v2 = v1;
  if (!*(void *)((char *)v1 + OBJC_IVAR____TtC8Freeform12CRLBoardItem_transactionContext))
  {
    uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      uint64_t v4 = Strong;
      char v5 = (*(uint64_t (**)(void))((swift_isaMask & *Strong) + 0x2F0))();

      if (v5) {
        goto LABEL_18;
      }
    }
  }
  if (((*(uint64_t (**)(void))((swift_isaMask & *v2) + 0x4C0))() & 1) == 0)
  {
    uint64_t v6 = **(void **)((char *)v2 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
    uint64_t v7 = swift_conformsToProtocol2();
    if (a1)
    {
      if (v7)
      {
        id v8 = a1;
        swift_retain();
        sub_10089D1B0(v8, (uint64_t)&v27);
        long long v9 = v27;
        *(_OWORD *)uint64_t v20 = v29;
        uint64_t v10 = v30;
        unint64_t v11 = v28 | ((unint64_t)DWORD1(v28) << 32);
        uint64_t v12 = &_mh_execute_header;
        if (!BYTE12(v28)) {
          uint64_t v12 = 0;
        }
        unint64_t v13 = (unint64_t)v12 | DWORD2(v28);
        uint64_t v14 = (void (*)(unsigned char *, void))(*(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v7 + 32))(v26, v6, v7);
        long long v21 = v9;
        unint64_t v22 = v11;
        unint64_t v23 = v13;
        long long v24 = *(_OWORD *)v20;
        uint64_t v25 = v10;
        type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData(0);
        sub_1005057FC((uint64_t *)&unk_10168A0D0);
        CRRegister.wrappedValue.setter();
        v14(v26, 0);

        goto LABEL_15;
      }
      __break(1u);
    }
    else if (v7)
    {
      uint64_t v15 = *(uint64_t (**)(long long *, uint64_t, uint64_t))(v7 + 32);
      swift_retain();
      uint64_t v16 = (void (*)(long long *, void))v15(&v21, v6, v7);
      type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData(0);
      long long v28 = 0u;
      long long v29 = 0u;
      uint64_t v30 = 0;
      long long v27 = 0u;
      sub_1005057FC((uint64_t *)&unk_10168A0D0);
      CRRegister.wrappedValue.setter();
      v16(&v21, 0);
LABEL_15:
      swift_release();
      return;
    }
    __break(1u);
LABEL_18:
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"_guardTransaction()", 19, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLTransactions/CRLTransactable.swift", 91, 2, 76, (uint64_t)"Attempting to mutate a CRLTransactable without a CRLTransactableContext set", 75, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_100586FD4((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Attempting to mutate a CRLTransactable without a CRLTransactableContext set");
    sub_1005871AC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"_guardTransaction()", 19, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLTransactions/CRLTransactable.swift", 91, 2, 76);
    SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v17, v18);
    _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
    return;
  }
  sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"tailLineEnd", 11, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLShapeItem.swift", 83, 2, 222, (uint64_t)"Should not try to set a line end on a shape in a freehand drawing.", 66, 2u, (uint64_t)_swiftEmptyArrayStorage);
  sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"tailLineEnd", 11, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLShapeItem.swift", 83, 2, 222);
}

uint64_t sub_100A9C984()
{
  uint64_t v0 = swift_allocObject();
  *(unsigned char *)(v0 + 16) = 0;
  swift_retain();
  sub_100888194((uint64_t)sub_100AA0F2C, v0);
  swift_release();
  swift_beginAccess();
  uint64_t v1 = *(unsigned __int8 *)(v0 + 16);
  swift_release();
  return v1;
}

uint64_t sub_100A9CA1C()
{
  uint64_t v1 = v0;
  if (*(void *)(v0 + OBJC_IVAR____TtC8Freeform12CRLBoardItem_transactionContext)
    || (uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong()) == 0
    || (__n128 v3 = Strong, v4 = (*(uint64_t (**)(void))((swift_isaMask & *Strong) + 0x2F0))(),
                     v3,
                     (v4 & 1) == 0))
  {
    uint64_t v5 = **(void **)(v1 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
    uint64_t v6 = swift_conformsToProtocol2();
    if (v6)
    {
      uint64_t v7 = v6;
      id v8 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v6 + 32);
      swift_retain();
      long long v9 = (void (*)(unsigned char *, void))v8(v13, v5, v7);
      type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData(0);
      sub_1005057FC(&qword_101689320);
      CRRegister.wrappedValue.setter();
      v9(v13, 0);
      return swift_release();
    }
    __break(1u);
  }
  sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"_guardTransaction()", 19, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLTransactions/CRLTransactable.swift", 91, 2, 76, (uint64_t)"Attempting to mutate a CRLTransactable without a CRLTransactableContext set", 75, 2u, (uint64_t)_swiftEmptyArrayStorage);
  sub_100586FD4((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Attempting to mutate a CRLTransactable without a CRLTransactableContext set");
  sub_1005871AC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"_guardTransaction()", 19, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLTransactions/CRLTransactable.swift", 91, 2, 76);
  SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v11, v12);
  uint64_t result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100A9CC94@<X0>(void *a1@<X1>, void *a2@<X2>, void *a3@<X3>, void *a4@<X4>, double a5@<X5>, char a6@<W6>, uint64_t a7@<X8>)
{
  if (a1)
  {
    sub_100F91F6C(a1, (uint64_t)&v39);
    uint64_t v13 = v39;
    uint64_t v14 = v40;
    long long v15 = v43;
    long long v16 = v44;
    long long v17 = v45;
    long long v18 = v46;
    uint64_t v19 = v47;
    long long v20 = v48;
    long long v21 = &_mh_execute_header;
    if (!v42) {
      long long v21 = 0;
    }
    unint64_t v22 = (unint64_t)v21 | v41;
  }
  else
  {
    uint64_t v13 = 0;
    uint64_t v14 = 0;
    unint64_t v22 = 0;
    uint64_t v19 = 0;
    long long v15 = 0uLL;
    long long v16 = 0uLL;
    long long v17 = 0uLL;
    long long v18 = 0uLL;
    long long v20 = 0uLL;
  }
  v63[0] = v13;
  v63[1] = v14;
  long long v64 = v15;
  long long v65 = v16;
  long long v66 = v17;
  long long v67 = v18;
  v63[2] = v22;
  uint64_t v68 = v19;
  long long v69 = v20;
  if (a2)
  {
    sub_100A1F088(a2, (uint64_t)v70);
    SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)((CKRecordID)v70, v23);
  }
  else
  {
    sub_10051A3F4((uint64_t)v70);
  }
  sub_10051B3EC((uint64_t)v70, (uint64_t)v38, (uint64_t *)&unk_101685110);
  sub_10051B3EC((uint64_t)v38, (uint64_t)v70, (uint64_t *)&unk_101685110);
  if (a3)
  {
    sub_10089D1B0(a3, (uint64_t)&v49);
    long long v24 = v49;
    uint64_t v25 = v54;
    long long v26 = v55;
    unint64_t v27 = v50 | ((unint64_t)v51 << 32);
    long long v28 = &_mh_execute_header;
    if (!v53) {
      long long v28 = 0;
    }
    unint64_t v29 = (unint64_t)v28 | v52;
  }
  else
  {
    unint64_t v27 = 0;
    unint64_t v29 = 0;
    uint64_t v25 = 0;
    long long v24 = 0uLL;
    long long v26 = 0uLL;
  }
  long long v71 = v24;
  unint64_t v72 = v27;
  unint64_t v73 = v29;
  uint64_t v74 = v25;
  long long v75 = v26;
  if (a4)
  {
    sub_10089D1B0(a4, (uint64_t)&v56);
    long long v30 = v56;
    uint64_t v31 = v61;
    long long v32 = v62;
    unint64_t v33 = v57 | ((unint64_t)v58 << 32);
    uint64_t v34 = &_mh_execute_header;
    if (!v60) {
      uint64_t v34 = 0;
    }
    unint64_t v35 = (unint64_t)v34 | v59;
  }
  else
  {
    unint64_t v33 = 0;
    unint64_t v35 = 0;
    uint64_t v31 = 0;
    long long v32 = 0uLL;
    long long v30 = 0uLL;
  }
  long long v76 = v30;
  unint64_t v77 = v33;
  unint64_t v78 = v35;
  uint64_t v79 = v31;
  long long v80 = v32;
  float v36 = a5;
  if (a6) {
    float v36 = 0.0;
  }
  sub_100E21C10((uint64_t)v63, (uint64_t)v70, (uint64_t)&v71, (uint64_t)&v76, a7, v36);
  uint64_t result = type metadata accessor for CRLShapeItemCRDTData(0);
  *(void *)(a7 + *(int *)(result + 20)) = &_swiftEmptyDictionarySingleton;
  return result;
}

uint64_t sub_100A9CEF0@<X0>(uint64_t a1@<X1>, void *a2@<X2>, void *a3@<X3>, void *a4@<X4>, void *a5@<X5>, uint64_t a6@<X8>)
{
  uint64_t v83 = a6;
  id v84 = a5;
  id v78 = a3;
  id v79 = a4;
  id v8 = (void *)type metadata accessor for UUID();
  uint64_t v9 = *(v8 - 1);
  __chkstk_darwin(v8, v10);
  NSString v82 = (char *)&v70 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1005057FC(&qword_10168E498);
  __chkstk_darwin(v12 - 8, v13);
  uint64_t v71 = (uint64_t)&v70 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v77 = type metadata accessor for CRLShapeItemParentAffinity(0) - 8;
  uint64_t v16 = __chkstk_darwin(v77, v15);
  uint64_t v81 = (uint64_t)&v70 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16, v18);
  uint64_t v76 = (uint64_t)&v70 - v19;
  uint64_t v20 = sub_1005057FC((uint64_t *)&unk_101674520);
  uint64_t v22 = __chkstk_darwin(v20 - 8, v21);
  long long v80 = (char *)&v70 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22, v24);
  long long v26 = (char *)&v70 - v25;
  uint64_t v27 = type metadata accessor for CRLBoardItemParentAffinity();
  uint64_t v28 = v27 - 8;
  uint64_t v30 = __chkstk_darwin(v27, v29);
  uint64_t v85 = (uint64_t)&v70 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = __chkstk_darwin(v30, v32);
  unint64_t v35 = (char *)&v70 - v34;
  __chkstk_darwin(v33, v36);
  uint64_t v38 = (char *)&v70 - v37;
  uint64_t v39 = *(void (**)(char *, uint64_t, void *))(v9 + 16);
  id v75 = v8;
  v39(v26, a1, v8);
  unsigned __int8 v40 = *(void (**)(char *, uint64_t, uint64_t, id))(v9 + 56);
  uint64_t v74 = v9 + 56;
  v40(v26, 0, 1, v8);
  unsigned int v41 = v40;
  id v42 = a2;
  [v42 position];
  float v44 = v43;
  float v46 = v45;
  [v42 size];
  float v48 = v47;
  float v50 = v49;
  [v42 angle];
  float v52 = v51;
  unsigned int v73 = [v42 widthValid];
  unsigned int v72 = [v42 heightValid];
  LOBYTE(v9) = [v42 horizontalFlip];
  LOBYTE(v8) = [v42 verticalFlip];

  uint64_t v53 = (uint64_t)v80;
  sub_100522E9C((uint64_t)v26, (uint64_t)v80, (uint64_t *)&unk_101674520);
  v41(v35, 1, 1, v75);
  *(void *)&v35[*(int *)(v28 + 32)] = &_swiftEmptyDictionarySingleton;
  sub_1006063BC(v53, (uint64_t)v35, (uint64_t *)&unk_101674520);
  uint64_t v54 = &v35[*(int *)(v28 + 28)];
  *(float *)uint64_t v54 = v44;
  *((float *)v54 + 1) = v46;
  *((float *)v54 + 2) = v48;
  *((float *)v54 + 3) = v50;
  *((float *)v54 + 4) = v52;
  v54[20] = v73;
  v54[21] = v72;
  v54[22] = v9;
  v54[23] = (char)v8;
  *((void *)v54 + 3) = &_swiftEmptyDictionarySingleton;
  sub_10068EABC((uint64_t)v35, (uint64_t)v38);
  sub_100522F00((uint64_t)v26, (uint64_t *)&unk_101674520);
  long long v80 = v38;
  uint64_t v55 = v85;
  sub_100AA0DFC((uint64_t)v38, v85, (uint64_t (*)(void))type metadata accessor for CRLBoardItemParentAffinity);
  uint64_t v56 = v76;
  sub_100AA0DFC(v55, v76, (uint64_t (*)(void))type metadata accessor for CRLBoardItemParentAffinity);
  unsigned __int8 v57 = (int *)v77;
  uint64_t v58 = v56 + *(int *)(v77 + 28);
  id v75 = v84;
  id v59 = v78;
  id v60 = v79;
  id v61 = v79;
  sub_100AA59E0(v59, v58);
  uint64_t v62 = v56 + v57[8];
  uint64_t v63 = type metadata accessor for CRLPKStrokePathData();
  long long v64 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v63 - 8) + 56);
  v64(v62, 1, 1, v63);
  uint64_t v65 = v56 + v57[9];
  *(void *)uint64_t v65 = 0;
  *(unsigned char *)(v65 + 8) = -1;
  *(void *)(v56 + v57[10]) = &_swiftEmptyDictionarySingleton;
  *(void *)uint64_t v65 = 0;
  *(unsigned char *)(v65 + 8) = -1;
  if (v60)
  {
    uint64_t v66 = v71;
    sub_100B3560C(v61, v84, v71);
    sub_100AA0E64(v85, (uint64_t (*)(void))type metadata accessor for CRLBoardItemParentAffinity);
    v64(v66, 0, 1, v63);
    sub_1006063BC(v66, v62, &qword_10168E498);
  }
  else
  {

    sub_100AA0E64(v85, (uint64_t (*)(void))type metadata accessor for CRLBoardItemParentAffinity);
  }
  uint64_t v67 = v81;
  sub_100AA0DFC(v56, v81, type metadata accessor for CRLShapeItemParentAffinity);
  sub_10051A41C(v86);
  sub_10051B3EC((uint64_t)v86, (uint64_t)v87, (uint64_t *)&unk_101683E20);
  uint64_t v68 = (uint64_t)v82;
  UUID.init()();
  sub_100FC21CC(v68, v67, 0, 0, 0, 0xE000000000000000, (uint64_t)v87, v83);
  sub_100AA0E64(v56, type metadata accessor for CRLShapeItemParentAffinity);
  return sub_100AA0E64((uint64_t)v80, (uint64_t (*)(void))type metadata accessor for CRLBoardItemParentAffinity);
}

void *sub_100A9D53C@<X0>(uint64_t *a1@<X8>)
{
  sub_100EC25E0(v1, 1, v5);
  a1[3] = (uint64_t)&type metadata for CRLShapePresetData;
  a1[4] = sub_1009F2E58();
  uint64_t v3 = swift_allocObject();
  *a1 = v3;
  return memcpy((void *)(v3 + 16), v5, 0x258uLL);
}

id sub_100A9D9B8(void *a1, uint64_t a2, SEL *a3, void (*a4)(uint64_t, void))
{
  uint64_t v7 = (uint64_t (**)(void))(**(void **)((char *)a1 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData) + 408);
  id v8 = *v7;
  uint64_t v9 = (*v7)();
  if ((v10 & 1) != 0 && v9 == 1)
  {
    uint64_t v11 = *(uint64_t (**)(void))((swift_isaMask & *a1) + 0x478);
    uint64_t v12 = a1;
    uint64_t v13 = (void *)v11();
    id v14 = [v13 *a3];

    static String._unconditionallyBridgeFromObjectiveC(_:)();
  }
  else
  {
    uint64_t v15 = ((uint64_t (*)(uint64_t))v8)(v9);
    a4(v15, v16 & 1);
  }
  NSString v17 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();

  return v17;
}

id sub_100A9DD1C(void *a1, uint64_t a2, SEL *a3)
{
  char v4 = *(uint64_t (**)(void))((swift_isaMask & *a1) + 0x478);
  uint64_t v5 = a1;
  uint64_t v6 = (void *)v4();
  id v7 = [v6 bezierPath];

  id v8 = [v7 *a3];
  return v8;
}

void *sub_100A9E0B4(void *result, uint64_t a2)
{
  if (result)
  {
    self;
    uint64_t result = (void *)swift_dynamicCastObjCClass();
    if (result)
    {
      unsigned __int8 v3 = [result isTailEndOnLeft];
      uint64_t result = (void *)swift_beginAccess();
      *(unsigned char *)(a2 + 16) = v3;
    }
  }
  return result;
}

id sub_100A9E534()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLShapeItem();
  return [super dealloc];
}

uint64_t sub_100A9E56C()
{
  return type metadata accessor for CRLShapeItem();
}

uint64_t type metadata accessor for CRLShapeItem()
{
  uint64_t result = qword_10168E488;
  if (!qword_10168E488) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100A9E5C0()
{
  return swift_updateClassMetadata2();
}

uint64_t sub_100A9E5F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData(0);
  __chkstk_darwin(v4, v5);
  id v7 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8, v9);
  uint64_t v11 = (char *)&v39 - v10;
  uint64_t v12 = sub_1005057FC(&qword_10168E4A0);
  __chkstk_darwin(v12 - 8, v13);
  uint64_t v15 = (char *)&v39 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for CRLShapeItem();
  uint64_t v41 = a1;
  uint64_t v16 = swift_dynamicCastClass();
  if (v16)
  {
    uint64_t v17 = v16;
    type metadata accessor for CRLBoardItemBase(0);
    if (!swift_dynamicCastClass())
    {
      swift_unknownObjectRetain();
      sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"createSpecificDataObservableDeltas(fromSnapshot:)", 49, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLBoardItem.swift", 83, 2, 835, (uint64_t)"Tried to create observable deltas from mismatched type", 54, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_100586FD4((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Tried to create observable deltas from mismatched type");
      unint64_t v35 = "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLBoardItem.swift";
      uint64_t v36 = 835;
      goto LABEL_17;
    }
    uint64_t v39 = v4;
    unsigned __int8 v40 = v15;
    uint64_t v18 = **(void **)(a2 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
    uint64_t v19 = swift_conformsToProtocol2();
    if (v19)
    {
      uint64_t v20 = v19;
      uint64_t v21 = *(void (**)(uint64_t, uint64_t))(v19 + 16);
      swift_unknownObjectRetain();
      swift_retain();
      v21(v18, v20);
      swift_release();
      uint64_t v22 = **(void **)(v17 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
      uint64_t v23 = swift_conformsToProtocol2();
      if (v23)
      {
        uint64_t v24 = v23;
        uint64_t v25 = *(void (**)(uint64_t, uint64_t))(v23 + 16);
        swift_retain();
        v25(v22, v24);
        swift_release();
        sub_100AA0EC4();
        uint64_t v26 = (uint64_t)v40;
        CRType.observableDifference(from:)();
        sub_100AA0E64((uint64_t)v7, type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData);
        sub_100AA0E64((uint64_t)v11, type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData);
        uint64_t v27 = sub_1005057FC(&qword_10168E4B0);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 48))(v26, 1, v27) == 1)
        {
          uint64_t v28 = _swiftEmptyArrayStorage;
          if (!*(void *)&_swiftEmptyArrayStorage[2])
          {
            swift_unknownObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v29 = _swiftEmptyDictionarySingleton;
LABEL_12:
            sub_100522F00(v26, &qword_10168E4A0);
            return (uint64_t)v29;
          }
        }
        else
        {
          uint64_t v28 = sub_100F61B70(0, 1, 1, _swiftEmptyArrayStorage);
          unint64_t v31 = *((void *)v28 + 2);
          unint64_t v30 = *((void *)v28 + 3);
          if (v31 >= v30 >> 1) {
            uint64_t v28 = sub_100F61B70((double *)(v30 > 1), v31 + 1, 1, v28);
          }
          *((void *)v28 + 2) = v31 + 1;
          uint64_t v32 = &v28[2 * v31];
          strcpy((char *)v32 + 32, "shapeStyleData");
          *((unsigned char *)v32 + 47) = -18;
        }
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        id v42 = _swiftEmptyDictionarySingleton;
        sub_100972448((uint64_t)v28, 5, isUniquelyReferenced_nonNull_native);
        uint64_t v29 = v42;
        swift_unknownObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_12;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
  }
  sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"createSpecificDataObservableDeltas(fromSnapshot:)", 49, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLShapeItem.swift", 83, 2, 325, (uint64_t)"Tried to create observable deltas from mismatched type", 54, 2u, (uint64_t)_swiftEmptyArrayStorage);
  sub_100586FD4((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Tried to create observable deltas from mismatched type");
  unint64_t v35 = "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLShapeItem.swift";
  uint64_t v36 = 325;
LABEL_17:
  sub_1005871AC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"createSpecificDataObservableDeltas(fromSnapshot:)", 49, 2, (uint64_t)v35, 83, 2, v36);
  SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v37, v38);
  uint64_t result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

ProtocolDescriptor *sub_100A9EB60(uint64_t a1, uint64_t a2, char a3, uint64_t a4, char *a5, ProtocolDescriptor *a6, uint64_t a7)
{
  uint64_t v278 = a7;
  v269 = a6;
  v280 = a5;
  uint64_t v237 = a2;
  uint64_t v238 = a4;
  v267 = (void *)a1;
  uint64_t v277 = type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData(0);
  __chkstk_darwin(v277, v8);
  uint64_t v10 = &v232[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v11, v12);
  uint64_t v14 = &v232[-v13];
  __chkstk_darwin(v15, v16);
  uint64_t v18 = &v232[-v17];
  __chkstk_darwin(v19, v20);
  uint64_t v22 = &v232[-v21];
  __chkstk_darwin(v23, v24);
  v246 = &v232[-v25];
  __chkstk_darwin(v26, v27);
  v256 = &v232[-v28];
  __chkstk_darwin(v29, v30);
  v247 = &v232[-v31];
  __chkstk_darwin(v32, v33);
  v248 = &v232[-v34];
  __chkstk_darwin(v35, v36);
  Swift::String v38 = &v232[-v37];
  __chkstk_darwin(v39, v40);
  id v42 = &v232[-v41];
  __chkstk_darwin(v43, v44);
  float v46 = &v232[-v45];
  __chkstk_darwin(v47, v48);
  float v50 = &v232[-v49];
  uint64_t v51 = type metadata accessor for CRLPathSourceData(0);
  __chkstk_darwin(v51 - 8, v52);
  v276 = &v232[-((v53 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v54, v55);
  v275 = &v232[-v56];
  uint64_t v274 = type metadata accessor for CRLShapeItemParentAffinity(0);
  __chkstk_darwin(v274, v57);
  v273 = &v232[-((v58 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v59, v60);
  v272 = &v232[-v61];
  v279 = (ProtocolDescriptor *)sub_1005057FC(&qword_1016892B0);
  __chkstk_darwin(v279, v62);
  v271 = &v232[-((v63 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v64, v65);
  v270 = &v232[-v66];
  if (a3 != 5)
  {
    if (a3)
    {
      uint64_t v226 = (uint64_t)v267;
      uint64_t v227 = v237;
      uint64_t v228 = v238;
      v229 = v280;
      return (ProtocolDescriptor *)sub_100892474(v226, v227, a3, v228, v229);
    }
    type metadata accessor for CRLShapeItem();
    uint64_t result = (ProtocolDescriptor *)swift_dynamicCastClass();
    uint64_t v68 = v237;
    if (!result) {
      return result;
    }
    v265 = result;
    uint64_t v69 = *(void *)((char *)&result->Flags + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
    v269 = &protocol descriptor for CRLAbstractShapeItemDataProtocol;
    uint64_t result = (ProtocolDescriptor *)swift_conformsToProtocol2();
    if (!result) {
      goto LABEL_103;
    }
    uint64_t v70 = *(void *)(v68 + 16);
    if (!v70)
    {
      swift_unknownObjectRetain();
      swift_retain();
LABEL_92:
      swift_unknownObjectRetain();
      sub_100CF6C64((uint64_t)v267, v68, 0, v265, v280);
      swift_release();
      return (ProtocolDescriptor *)swift_unknownObjectRelease_n();
    }
    p_Flags = (void *)((char *)v267 + OBJC_IVAR____TtC8Freeform14CRLPropertyMap_data);
    swift_unknownObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    uint64_t v71 = (void *)(v68 + 40);
    uint64_t v268 = v69;
    uint64_t v72 = (uint64_t)v271;
    while (1)
    {
      BOOL v73 = *(v71 - 1) == 0x6641746E65726170 && *v71 == 0xEE007974696E6966;
      if (v73 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
      {
        uint64_t v277 = (uint64_t)v71;
        uint64_t v278 = v70;
        uint64_t v74 = *(void *)&v280[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData];
        uint64_t result = (ProtocolDescriptor *)swift_conformsToProtocol2();
        if (!result)
        {
          __break(1u);
LABEL_95:
          __break(1u);
LABEL_96:
          __break(1u);
LABEL_97:
          __break(1u);
LABEL_98:
          __break(1u);
LABEL_99:
          __break(1u);
LABEL_100:
          __break(1u);
LABEL_101:
          __break(1u);
LABEL_102:
          __break(1u);
LABEL_103:
          __break(1u);
LABEL_104:
          __break(1u);
          return result;
        }
        id v75 = v270;
        (*(void (**)(void))(*(void *)v69 + 640))();
        swift_retain();
        sub_1005057FC(&qword_101686808);
        uint64_t v76 = (uint64_t)v272;
        CRRegister.wrappedValue.getter();
        sub_100522F00((uint64_t)v75, &qword_1016892B0);
        uint64_t v78 = v274;
        uint64_t v77 = v275;
        sub_100AA0DFC(v76 + *(int *)(v274 + 20), (uint64_t)v275, type metadata accessor for CRLPathSourceData);
        uint64_t v79 = sub_100AA0E64(v76, type metadata accessor for CRLShapeItemParentAffinity);
        (*(void (**)(uint64_t))(*(void *)v74 + 640))(v79);
        uint64_t v80 = (uint64_t)v273;
        CRRegister.wrappedValue.getter();
        sub_100522F00(v72, &qword_1016892B0);
        uint64_t v81 = v80 + *(int *)(v78 + 20);
        NSString v82 = v276;
        sub_100AA0DFC(v81, (uint64_t)v276, type metadata accessor for CRLPathSourceData);
        sub_100AA0E64(v80, type metadata accessor for CRLShapeItemParentAffinity);
        char v83 = sub_100AAFDA4(v77, v82);
        sub_100AA0E64((uint64_t)v82, type metadata accessor for CRLPathSourceData);
        sub_100AA0E64((uint64_t)v77, type metadata accessor for CRLPathSourceData);
        if ((v83 & 1) == 0)
        {
          id v84 = *(void (**)(uint64_t))(*(void *)v74 + 728);
          uint64_t v85 = swift_retain();
          v84(v85);
          uint64_t v86 = swift_release();
          uint64_t v87 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *(void *)v280) + 0x478))(v86);
          *((void *)&v286 + 1) = sub_10050BF48(0, (unint64_t *)&qword_1016800B8);
          *(void *)&long long v285 = v87;
          id v88 = p_Flags;
          swift_beginAccess();
          sub_100522E9C((uint64_t)&v285, (uint64_t)v365, &qword_101672BF0);
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v313 = *v88;
          *id v88 = 0x8000000000000000;
          sub_100972310((uint64_t)v365, 0x13uLL, isUniquelyReferenced_nonNull_native);
          *id v88 = v313;
          swift_bridgeObjectRelease();
          swift_endAccess();
          sub_100522F00((uint64_t)&v285, &qword_101672BF0);
        }
        swift_release();
        uint64_t v69 = v268;
        uint64_t v71 = (void *)v277;
        uint64_t v70 = v278;
      }
      v71 += 2;
      if (!--v70)
      {
        uint64_t v68 = v237;
        swift_bridgeObjectRelease();
        goto LABEL_92;
      }
    }
  }
  v235 = v14;
  v244 = v46;
  v245 = v42;
  v243 = v38;
  type metadata accessor for CRLShapeItem();
  uint64_t result = (ProtocolDescriptor *)swift_dynamicCastClass();
  uint64_t v90 = v237;
  if (result)
  {
    uint64_t v91 = (uint64_t)v50;
    v276 = *(unsigned __int8 **)((char *)&result->Flags + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
    v279 = &protocol descriptor for CRLAbstractShapeItemDataProtocol;
    uint64_t result = (ProtocolDescriptor *)swift_conformsToProtocol2();
    v275 = (unsigned __int8 *)result;
    if (!result) {
      goto LABEL_104;
    }
    uint64_t v92 = *(void *)(v90 + 16);
    if (v92)
    {
      v271 = (char *)v267 + OBJC_IVAR____TtC8Freeform14CRLPropertyMap_data;
      uint64_t v274 = (uint64_t)(v275 + 16);
      v236 = &v310;
      swift_unknownObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain();
      id v93 = (void *)(v90 + 40);
      long long v234 = xmmword_10117E810;
      v249 = v10;
      uint64_t v250 = v91;
      v241 = v18;
      v242 = v22;
      while (1)
      {
        uint64_t v95 = *(v93 - 1);
        uint64_t v94 = *v93;
        v267 = v93;
        BOOL v96 = v95 == 0x7974536570616873 && v94 == 0xEE0061746144656CLL;
        if (v96 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
          break;
        }
        sub_1005057FC((uint64_t *)&unk_101672B40);
        uint64_t v128 = swift_allocObject();
        *(_OWORD *)(v128 + 16) = v234;
        *(void *)(v128 + 56) = &type metadata for String;
        *(void *)(v128 + 64) = sub_100528BE4();
        *(void *)(v128 + 32) = v95;
        *(void *)(v128 + 40) = v94;
        swift_bridgeObjectRetain();
        sub_1005598CC(v128, (uint64_t)"populatePropertyMap(_:observedDifferenceLabels:withPropertyKey:snapshot:)", 73, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLShapeItem.swift", 83, 2, 398);
        swift_setDeallocating();
        sub_1005057FC(&qword_101672B50);
        swift_arrayDestroy();
        swift_deallocClassInstance();
LABEL_22:
        id v93 = v267 + 2;
        --v92;
        uint64_t v91 = v250;
        if (!v92)
        {
          swift_unknownObjectRelease();
          swift_release();
          return (ProtocolDescriptor *)swift_bridgeObjectRelease();
        }
      }
      uint64_t v257 = v92;
      uint64_t v97 = (void (*)(void))*((void *)v275 + 2);
      v272 = *(unsigned char **)v276;
      v273 = v97;
      v97(v272);
      sub_1005057FC((uint64_t *)&unk_1016A8B50);
      CRRegister.wrappedValue.getter();
      *(void *)&v264[24] = v286;
      *(void *)&v264[32] = *((void *)&v285 + 1);
      *((void *)&v263 + 1) = *((void *)&v286 + 1);
      *(void *)v264 = v285;
      *(void *)&long long v263 = v287;
      uint64_t v98 = v290;
      v265 = v289;
      p_Flags = (uint64_t *)v292;
      v269 = v293;
      v270 = v291;
      uint64_t v268 = v294;
      uint64_t v99 = v295;
      *(void *)&v264[8] = v288;
      *(void *)&v264[16] = v296;
      sub_100AA0E64(v91, type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData);
      uint64_t v278 = OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData;
      uint64_t v100 = **(void **)&v280[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData];
      uint64_t result = (ProtocolDescriptor *)swift_conformsToProtocol2();
      if (!result) {
        goto LABEL_95;
      }
      id v101 = result;
      id v102 = *(void (**)(uint64_t, ProtocolDescriptor *))&result->NumRequirements;
      swift_retain();
      uint64_t v103 = (uint64_t)v244;
      v102(v100, v101);
      swift_release();
      CRRegister.wrappedValue.getter();
      long long v259 = v285;
      uint64_t v258 = *((void *)&v286 + 1);
      uint64_t v104 = v286;
      uint64_t v260 = (uint64_t)v287;
      uint64_t v261 = v288;
      uint64_t v262 = (uint64_t)v289;
      uint64_t v105 = v290;
      uint64_t v254 = v292;
      v255 = v291;
      uint64_t v252 = v294;
      v253 = v293;
      uint64_t v106 = v295;
      uint64_t v251 = v296;
      sub_100AA0E64(v103, type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData);
      uint64_t v107 = v99;
      uint64_t v108 = v98;
      if (v99)
      {
        uint64_t v110 = *(void *)&v264[16];
        uint64_t v109 = *(void *)&v264[24];
        unint64_t v112 = v269;
        uint64_t v111 = v270;
        uint64_t v113 = (uint64_t)p_Flags;
        if (v106)
        {
          uint64_t v239 = v105;
          uint64_t v240 = v108;
          *(void *)&long long v285 = *(void *)v264;
          BYTE8(v285) = v264[32] & 1;
          long long v114 = v259;
          uint64_t v313 = v259;
          char v314 = BYTE8(v259) & 1;
          sub_1008EE6D8();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (static CRExtensible.== infix(_:_:)())
          {
            int v367 = v109;
            char v368 = BYTE4(v109) & 1;
            uint64_t v369 = *((void *)&v263 + 1);
            uint64_t v370 = v263;
            uint64_t v371 = *(void *)&v264[8];
            v372 = v265;
            uint64_t v115 = v240;
            uint64_t v373 = v240;
            v374 = v270;
            uint64_t v375 = (uint64_t)p_Flags;
            uint64_t v116 = v268;
            v376 = v269;
            uint64_t v377 = v268;
            uint64_t v378 = v99;
            int v379 = v104;
            char v380 = BYTE4(v104) & 1;
            uint64_t v381 = v258;
            uint64_t v382 = v260;
            uint64_t v383 = v261;
            uint64_t v384 = v262;
            uint64_t v118 = v254;
            uint64_t v117 = (uint64_t)v255;
            uint64_t v385 = v239;
            uint64_t v386 = (uint64_t)v255;
            uint64_t v120 = v252;
            uint64_t v119 = (uint64_t)v253;
            uint64_t v387 = v254;
            uint64_t v388 = (uint64_t)v253;
            uint64_t v389 = v252;
            uint64_t v390 = v106;
            if (sub_1007B12DC((uint64_t)&v367, (uint64_t)&v379))
            {
              int v233 = sub_100ED60AC(*(uint64_t *)&v264[16], v251);
              sub_10051ABBC(v259, *((uint64_t *)&v259 + 1), v104, v258, v260, v261, v262, v239, v117, v118, v119, v120, v106);
              uint64_t v121 = (uint64_t)p_Flags;
              uint64_t v123 = *((void *)&v263 + 1);
              uint64_t v122 = *(void *)v264;
              uint64_t v124 = *(void *)&v264[32];
              uint64_t v125 = v263;
              uint64_t v126 = *(void *)&v264[8];
              uint64_t v127 = (uint64_t)v265;
              sub_10051ABBC(*(uint64_t *)v264, *(uint64_t *)&v264[32], *(uint64_t *)&v264[24], *((uint64_t *)&v263 + 1), v263, *(uint64_t *)&v264[8], (uint64_t)v265, v240, (uint64_t)v270, (uint64_t)p_Flags, (uint64_t)v269, v268, v107);
              sub_10051ABBC(v122, v124, *(uint64_t *)&v264[24], v123, v125, v126, v127, v240, (uint64_t)v270, v121, (uint64_t)v269, v268, v107);
              if (v233) {
                goto LABEL_44;
              }
            }
            else
            {
              sub_10051ABBC(v259, *((uint64_t *)&v259 + 1), v104, v258, v260, v261, v262, v239, v117, v118, v119, v120, v106);
              uint64_t v230 = v116;
              uint64_t v137 = (uint64_t)p_Flags;
              uint64_t v138 = *(void *)v264;
              uint64_t v139 = *(void *)&v264[32];
              uint64_t v140 = v263;
              uint64_t v141 = *(void *)&v264[8];
              uint64_t v142 = (uint64_t)v265;
              sub_10051ABBC(*(uint64_t *)v264, *(uint64_t *)&v264[32], *(uint64_t *)&v264[24], *((uint64_t *)&v263 + 1), v263, *(uint64_t *)&v264[8], (uint64_t)v265, v115, (uint64_t)v270, (uint64_t)p_Flags, (uint64_t)v269, v230, v107);
              sub_10051ABBC(v138, v139, *(uint64_t *)&v264[24], *((uint64_t *)&v263 + 1), v140, v141, v142, v115, (uint64_t)v270, v137, (uint64_t)v269, v268, v107);
            }
          }
          else
          {
            sub_10051ABBC(v114, *((uint64_t *)&v114 + 1), v104, v258, v260, v261, v262, v239, (uint64_t)v255, v254, (uint64_t)v253, v252, v106);
            uint64_t v231 = v99;
            uint64_t v262 = v99;
            uint64_t v129 = v269;
            uint64_t v130 = (uint64_t)p_Flags;
            uint64_t v131 = v270;
            uint64_t v133 = *((void *)&v263 + 1);
            uint64_t v132 = *(void *)v264;
            uint64_t v134 = (uint64_t)v265;
            uint64_t v135 = v263;
            uint64_t v136 = v240;
            sub_10051ABBC(*(uint64_t *)v264, *(uint64_t *)&v264[32], v109, *((uint64_t *)&v263 + 1), v263, *(uint64_t *)&v264[8], (uint64_t)v265, v240, (uint64_t)v270, (uint64_t)p_Flags, (uint64_t)v269, v268, v231);
            sub_10051ABBC(v132, *(uint64_t *)&v264[32], v109, v133, v135, *(uint64_t *)&v264[8], v134, v136, (uint64_t)v131, v130, (uint64_t)v129, v268, v262);
          }
LABEL_40:
          uint64_t v143 = sub_100A9B204();
          if (v143)
          {
            uint64_t v144 = v143;
            *((void *)&v286 + 1) = sub_10050BF48(0, (unint64_t *)&qword_101687660);
            *(void *)&long long v285 = v144;
          }
          else
          {
            long long v285 = 0u;
            long long v286 = 0u;
          }
          sub_100522E9C((uint64_t)&v285, (uint64_t)&v313, &qword_101672BF0);
          swift_beginAccess();
          sub_10057D61C((uint64_t)&v313, 0x14uLL);
          swift_endAccess();
          sub_100522F00((uint64_t)&v285, &qword_101672BF0);
LABEL_44:
          uint64_t v145 = (uint64_t)v245;
          ((void (*)(unsigned char *, unsigned __int8 *))v273)(v272, v275);
          sub_1005057FC(&qword_101673478);
          CRRegister.wrappedValue.getter();
          sub_10051B3EC((uint64_t)&v285, (uint64_t)v311, (uint64_t *)&unk_101685110);
          sub_100AA0E64(v145, type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData);
          uint64_t v146 = **(void **)&v280[v278];
          uint64_t result = (ProtocolDescriptor *)swift_conformsToProtocol2();
          if (!result) {
            goto LABEL_96;
          }
          v147 = result;
          uint64_t v148 = *(void (**)(uint64_t, ProtocolDescriptor *))&result->NumRequirements;
          swift_retain();
          uint64_t v149 = (uint64_t)v243;
          v148(v146, v147);
          swift_release();
          CRRegister.wrappedValue.getter();
          sub_10051B3EC((uint64_t)&v285, (uint64_t)v312, (uint64_t *)&unk_101685110);
          sub_100AA0E64(v149, type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData);
          sub_10051B3EC((uint64_t)v311, (uint64_t)&v313, (uint64_t *)&unk_101685110);
          if (sub_100556850((uint64_t)&v313) == 1)
          {
            sub_10051B3EC((uint64_t)v312, (uint64_t)&v285, (uint64_t *)&unk_101685110);
            int v150 = sub_100556850((uint64_t)&v285);
            uint64_t v151 = (uint64_t)v248;
            if (v150 == 1) {
              goto LABEL_56;
            }
          }
          else
          {
            sub_10051B3EC((uint64_t)v312, (uint64_t)&v285, (uint64_t *)&unk_101685110);
            if (sub_100556850((uint64_t)&v285) != 1)
            {
              sub_10051B3EC((uint64_t)v312, (uint64_t)v281, (uint64_t *)&unk_101685110);
              v365[12] = v281[12];
              v365[13] = v281[13];
              uint64_t v366 = v282;
              v365[8] = v281[8];
              v365[9] = v281[9];
              v365[11] = v281[11];
              v365[10] = v281[10];
              v365[4] = v281[4];
              v365[5] = v281[5];
              v365[7] = v281[7];
              v365[6] = v281[6];
              v365[0] = v281[0];
              v365[1] = v281[1];
              v365[3] = v281[3];
              v365[2] = v281[2];
              sub_10051B3EC((uint64_t)v311, (uint64_t)v283, (uint64_t *)&unk_101685110);
              v363[12] = v283[12];
              v363[13] = v283[13];
              uint64_t v364 = v284;
              v363[8] = v283[8];
              v363[9] = v283[9];
              v363[11] = v283[11];
              v363[10] = v283[10];
              v363[4] = v283[4];
              v363[5] = v283[5];
              v363[7] = v283[7];
              v363[6] = v283[6];
              v363[0] = v283[0];
              v363[1] = v283[1];
              v363[3] = v283[3];
              v363[2] = v283[2];
              sub_100AA0D80(v311, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_10051A1EC);
              char v152 = sub_100A1D9DC((uint64_t)v363, (uint64_t)v365);
              sub_100AA0D80(v312, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_100519F40);
              sub_100AA0D80(v311, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_100519F40);
              sub_100AA0D80(v311, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_100519F40);
              uint64_t v151 = (uint64_t)v248;
              if (v152) {
                goto LABEL_56;
              }
              goto LABEL_52;
            }
            uint64_t v151 = (uint64_t)v248;
          }
          sub_10051B3EC((uint64_t)v311, (uint64_t)&v285, (uint64_t *)&unk_101685110);
          sub_10051B3EC((uint64_t)v312, (uint64_t)v236, (uint64_t *)&unk_101685110);
          sub_100556868((uint64_t)&v285);
LABEL_52:
          v153 = v280;
          v154 = *(void **)&v280[OBJC_IVAR____TtC8Freeform13CRLStyledItem__stroke];
          *(void *)&v280[OBJC_IVAR____TtC8Freeform13CRLStyledItem__stroke] = 0;

          uint64_t v155 = (*(uint64_t (**)(void))((swift_isaMask & *(void *)v153) + 0x420))();
          if (v155)
          {
            uint64_t v156 = v155;
            *((void *)&v286 + 1) = sub_10050BF48(0, (unint64_t *)&qword_101686A50);
            *(void *)&long long v285 = v156;
          }
          else
          {
            long long v285 = 0u;
            long long v286 = 0u;
          }
          sub_100522E9C((uint64_t)&v285, (uint64_t)v283, &qword_101672BF0);
          swift_beginAccess();
          sub_10057D61C((uint64_t)v283, 0xFuLL);
          swift_endAccess();
          sub_100522F00((uint64_t)&v285, &qword_101672BF0);
LABEL_56:
          ((void (*)(unsigned char *, unsigned __int8 *))v273)(v272, v275);
          v157 = (unsigned char *)sub_1005057FC((uint64_t *)&unk_10168A0D0);
          CRRegister.wrappedValue.getter();
          *(_OWORD *)v264 = v285;
          *(_OWORD *)&v264[16] = v286;
          p_Flags = (uint64_t *)v288;
          *(void *)&v264[32] = v287;
          v265 = v289;
          sub_100AA0E64(v151, type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData);
          uint64_t v158 = **(void **)&v280[v278];
          uint64_t result = (ProtocolDescriptor *)swift_conformsToProtocol2();
          if (!result) {
            goto LABEL_97;
          }
          v159 = result;
          v160 = *(void (**)(uint64_t, ProtocolDescriptor *))&result->NumRequirements;
          swift_retain();
          uint64_t v161 = (uint64_t)v247;
          v160(v158, v159);
          swift_release();
          CRRegister.wrappedValue.getter();
          long long v162 = v285;
          uint64_t v164 = *((void *)&v286 + 1);
          uint64_t v163 = v286;
          uint64_t v165 = v288;
          uint64_t v268 = (uint64_t)v287;
          v269 = v289;
          sub_100AA0E64(v161, type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData);
          v270 = v157;
          if (p_Flags)
          {
            uint64_t v166 = (uint64_t)v256;
            if (v165)
            {
              long long v263 = v162;
              long long v355 = v162;
              char v356 = v163 & 1;
              int v357 = HIDWORD(v163);
              int v358 = v164;
              char v359 = BYTE4(v164) & 1;
              uint64_t v360 = v268;
              uint64_t v361 = v165;
              v362 = v269;
              uint64_t v262 = v165;
              long long v167 = *(_OWORD *)v264;
              long long v347 = *(_OWORD *)v264;
              uint64_t v168 = *(void *)&v264[16];
              char v348 = v264[16] & 1;
              int v349 = *(_DWORD *)&v264[20];
              *((void *)&v259 + 1) = v164;
              uint64_t v260 = v163;
              uint64_t v169 = *(void *)&v264[24];
              uint64_t v170 = *(void *)&v264[32];
              int v350 = *(_DWORD *)&v264[24];
              char v351 = v264[28] & 1;
              uint64_t v352 = *(void *)&v264[32];
              uint64_t v353 = (uint64_t)p_Flags;
              v354 = v265;
              uint64_t v171 = (uint64_t)p_Flags;
              sub_10051B364(*(uint64_t *)v264, *(uint64_t *)&v264[8], *(uint64_t *)&v264[16], *(uint64_t *)&v264[24], *(uint64_t *)&v264[32], (uint64_t)p_Flags);
              LODWORD(v261) = sub_10089CE74((uint64_t)&v347, (uint64_t)&v355);
              sub_10051AC38(v263, *((uint64_t *)&v263 + 1), v260, *((uint64_t *)&v259 + 1), v268, v262);
              sub_10051AC38(v167, *((uint64_t *)&v167 + 1), v168, v169, v170, v171);
              uint64_t v172 = sub_10051AC38(v167, *((uint64_t *)&v167 + 1), v168, v169, v170, v171);
              if (v261) {
                goto LABEL_69;
              }
              goto LABEL_63;
            }
          }
          else
          {
            uint64_t v166 = (uint64_t)v256;
            if (!v165) {
              goto LABEL_69;
            }
          }
          sub_10051AC38(*(uint64_t *)v264, *(uint64_t *)&v264[8], *(uint64_t *)&v264[16], *(uint64_t *)&v264[24], *(uint64_t *)&v264[32], (uint64_t)p_Flags);
          uint64_t v172 = sub_10051AC38(v162, *((uint64_t *)&v162 + 1), v163, v164, v268, v165);
LABEL_63:
          if ((*(uint64_t (**)(uint64_t))((swift_isaMask & *(void *)v280) + 0x4C0))(v172)) {
            goto LABEL_67;
          }
          uint64_t v173 = **(void **)&v280[v278];
          uint64_t result = (ProtocolDescriptor *)swift_conformsToProtocol2();
          if (!result) {
            goto LABEL_101;
          }
          v174 = result;
          v175 = *(void (**)(uint64_t, ProtocolDescriptor *))&result->NumRequirements;
          swift_retain();
          uint64_t v176 = (uint64_t)v249;
          v175(v173, v174);
          swift_release();
          CRRegister.wrappedValue.getter();
          long long v177 = v285;
          uint64_t v179 = *((void *)&v286 + 1);
          uint64_t v178 = v286;
          uint64_t v180 = (uint64_t)v287;
          uint64_t v181 = v288;
          v182 = v289;
          sub_100AA0E64(v176, type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData);
          if (!v181)
          {
LABEL_67:
            long long v285 = 0u;
            long long v286 = 0u;
          }
          else
          {
            long long v339 = v177;
            char v340 = v178 & 1;
            int v341 = HIDWORD(v178);
            int v342 = v179;
            char v343 = BYTE4(v179) & 1;
            uint64_t v344 = v180;
            uint64_t v345 = v181;
            v346 = v182;
            uint64_t v183 = sub_10050BF48(0, (unint64_t *)&qword_101672AC0);
            id v184 = sub_10089D008((uint64_t)&v339);
            sub_10051AC38(v177, *((uint64_t *)&v177 + 1), v178, v179, v180, v181);
            *((void *)&v286 + 1) = v183;
            *(void *)&long long v285 = v184;
          }
          sub_100522E9C((uint64_t)&v285, (uint64_t)v283, &qword_101672BF0);
          swift_beginAccess();
          sub_10057D61C((uint64_t)v283, 0x15uLL);
          swift_endAccess();
          sub_100522F00((uint64_t)&v285, &qword_101672BF0);
          uint64_t v166 = (uint64_t)v256;
LABEL_69:
          ((void (*)(unsigned char *, unsigned __int8 *))v273)(v272, v275);
          CRRegister.wrappedValue.getter();
          *(_OWORD *)&v264[8] = v285;
          *(_OWORD *)&v264[24] = v286;
          uint64_t v185 = v288;
          v265 = v287;
          p_Flags = (uint64_t *)&v289->Flags;
          sub_100AA0E64(v166, type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData);
          uint64_t v186 = **(void **)&v280[v278];
          uint64_t result = (ProtocolDescriptor *)swift_conformsToProtocol2();
          if (!result) {
            goto LABEL_98;
          }
          v187 = result;
          v188 = *(void (**)(uint64_t, ProtocolDescriptor *))&result->NumRequirements;
          swift_retain();
          uint64_t v189 = (uint64_t)v246;
          v188(v186, v187);
          swift_release();
          CRRegister.wrappedValue.getter();
          long long v190 = v285;
          uint64_t v268 = *((void *)&v286 + 1);
          uint64_t v191 = v286;
          v269 = v287;
          uint64_t v192 = v288;
          v193 = v289;
          sub_100AA0E64(v189, type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData);
          uint64_t v194 = v185;
          if (v185)
          {
            if (v192)
            {
              uint64_t v195 = *(void *)&v264[24];
              *((void *)&v263 + 1) = *((void *)&v190 + 1);
              *(void *)v264 = v190;
              long long v331 = v190;
              uint64_t v196 = v191;
              char v332 = v191 & 1;
              int v333 = HIDWORD(v191);
              int v334 = v268;
              char v335 = BYTE4(v268) & 1;
              v336 = v269;
              uint64_t v337 = v192;
              v338 = v193;
              *(void *)&long long v263 = v193;
              uint64_t v197 = *(void *)&v264[8];
              uint64_t v198 = *(void *)&v264[16];
              v323[0] = *(void *)&v264[8];
              v323[1] = *(void *)&v264[16];
              char v324 = v264[24] & 1;
              int v325 = *(_DWORD *)&v264[28];
              uint64_t v200 = *(void *)&v264[32];
              uint64_t v199 = (uint64_t)v265;
              int v326 = *(_DWORD *)&v264[32];
              char v327 = v264[36] & 1;
              v328 = v265;
              uint64_t v329 = v194;
              uint64_t v330 = (uint64_t)p_Flags;
              uint64_t v201 = v194;
              sub_10051B364(*(uint64_t *)&v264[8], *(uint64_t *)&v264[16], *(uint64_t *)&v264[24], *(uint64_t *)&v264[32], (uint64_t)v265, v194);
              LODWORD(v262) = sub_10089CE74((uint64_t)v323, (uint64_t)&v331);
              sub_10051AC38(*(uint64_t *)v264, *((uint64_t *)&v263 + 1), v196, v268, (uint64_t)v269, v192);
              sub_10051AC38(v197, v198, v195, v200, v199, v201);
              uint64_t v202 = sub_10051AC38(v197, v198, v195, v200, v199, v201);
              if (v262) {
                goto LABEL_82;
              }
LABEL_76:
              if ((*(uint64_t (**)(uint64_t))((swift_isaMask & *(void *)v280) + 0x4C0))(v202)) {
                goto LABEL_80;
              }
              uint64_t v203 = **(void **)&v280[v278];
              uint64_t result = (ProtocolDescriptor *)swift_conformsToProtocol2();
              if (!result) {
                goto LABEL_102;
              }
              v204 = result;
              v205 = *(void (**)(uint64_t, ProtocolDescriptor *))&result->NumRequirements;
              swift_retain();
              uint64_t v206 = (uint64_t)v235;
              v205(v203, v204);
              swift_release();
              CRRegister.wrappedValue.getter();
              long long v207 = v285;
              uint64_t v209 = *((void *)&v286 + 1);
              uint64_t v208 = v286;
              uint64_t v210 = (uint64_t)v287;
              uint64_t v211 = v288;
              v212 = v289;
              sub_100AA0E64(v206, type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData);
              if (!v211)
              {
LABEL_80:
                long long v285 = 0u;
                long long v286 = 0u;
              }
              else
              {
                long long v315 = v207;
                char v316 = v208 & 1;
                int v317 = HIDWORD(v208);
                int v318 = v209;
                char v319 = BYTE4(v209) & 1;
                uint64_t v320 = v210;
                uint64_t v321 = v211;
                v322 = v212;
                uint64_t v213 = sub_10050BF48(0, (unint64_t *)&qword_101672AC0);
                id v214 = sub_10089D008((uint64_t)&v315);
                sub_10051AC38(v207, *((uint64_t *)&v207 + 1), v208, v209, v210, v211);
                *((void *)&v286 + 1) = v213;
                *(void *)&long long v285 = v214;
              }
              sub_100522E9C((uint64_t)&v285, (uint64_t)v283, &qword_101672BF0);
              swift_beginAccess();
              sub_10057D61C((uint64_t)v283, 0x16uLL);
              swift_endAccess();
              sub_100522F00((uint64_t)&v285, &qword_101672BF0);
              goto LABEL_82;
            }
          }
          else if (!v192)
          {
LABEL_82:
            uint64_t v215 = (uint64_t)v242;
            ((void (*)(unsigned char *, unsigned __int8 *))v273)(v272, v275);
            sub_1005057FC(&qword_101689320);
            CRRegister.wrappedValue.getter();
            float v216 = *(float *)&v285;
            sub_100AA0E64(v215, type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData);
            uint64_t v217 = **(void **)&v280[v278];
            uint64_t result = (ProtocolDescriptor *)swift_conformsToProtocol2();
            if (!result) {
              goto LABEL_99;
            }
            v218 = result;
            v219 = *(void (**)(uint64_t, ProtocolDescriptor *))&result->NumRequirements;
            swift_retain();
            uint64_t v220 = (uint64_t)v241;
            v219(v217, v218);
            swift_release();
            CRRegister.wrappedValue.getter();
            float v221 = *(float *)&v285;
            sub_100AA0E64(v220, type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData);
            if (v216 != v221)
            {
              uint64_t v222 = **(void **)&v280[v278];
              uint64_t result = (ProtocolDescriptor *)swift_conformsToProtocol2();
              if (!result) {
                goto LABEL_100;
              }
              v223 = result;
              v224 = *(void (**)(uint64_t, ProtocolDescriptor *))&result->NumRequirements;
              swift_retain();
              v224(v222, v223);
              swift_release();
              CRRegister.wrappedValue.getter();
              float v225 = *(float *)&v285;
              sub_100AA0E64(v215, type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData);
              *((void *)&v286 + 1) = &type metadata for CGFloat;
              *(double *)&long long v285 = v225;
              sub_100522E9C((uint64_t)&v285, (uint64_t)v283, &qword_101672BF0);
              swift_beginAccess();
              sub_10057D61C((uint64_t)v283, 0x17uLL);
              swift_endAccess();
              sub_100522F00((uint64_t)&v285, &qword_101672BF0);
            }
            uint64_t v92 = v257;
            goto LABEL_22;
          }
          sub_10051AC38(*(uint64_t *)&v264[8], *(uint64_t *)&v264[16], *(uint64_t *)&v264[24], *(uint64_t *)&v264[32], (uint64_t)v265, v185);
          uint64_t v202 = sub_10051AC38(v190, *((uint64_t *)&v190 + 1), v191, v268, (uint64_t)v269, v192);
          goto LABEL_76;
        }
      }
      else
      {
        uint64_t v110 = *(void *)&v264[16];
        uint64_t v109 = *(void *)&v264[24];
        unint64_t v112 = v269;
        uint64_t v111 = v270;
        uint64_t v113 = (uint64_t)p_Flags;
        if (!v106) {
          goto LABEL_44;
        }
      }
      *(void *)&long long v285 = *(void *)v264;
      *((void *)&v285 + 1) = *(void *)&v264[32];
      *(void *)&long long v286 = v109;
      *((void *)&v286 + 1) = *((void *)&v263 + 1);
      v287 = (ProtocolDescriptor *)v263;
      uint64_t v288 = *(void *)&v264[8];
      v289 = v265;
      uint64_t v290 = v108;
      v291 = v111;
      uint64_t v292 = v113;
      v293 = v112;
      uint64_t v294 = v268;
      uint64_t v295 = v99;
      uint64_t v296 = v110;
      long long v297 = v259;
      uint64_t v298 = v104;
      uint64_t v299 = v258;
      uint64_t v300 = v260;
      uint64_t v301 = v261;
      uint64_t v302 = v262;
      uint64_t v303 = v105;
      uint64_t v304 = (uint64_t)v255;
      uint64_t v305 = v254;
      uint64_t v306 = (uint64_t)v253;
      uint64_t v307 = v252;
      uint64_t v308 = v106;
      uint64_t v309 = v251;
      sub_1008EE60C((uint64_t)&v285);
      goto LABEL_40;
    }
  }
  return result;
}

void *sub_100AA0D80(void *a1, void (*a2)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))
{
  a2(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6], a1[7], a1[8], a1[9], a1[10], a1[11], a1[12], a1[13], a1[14], a1[15], a1[16], a1[17], a1[18],
    a1[19],
    a1[20],
    a1[21],
    a1[22],
    a1[23],
    a1[24],
    a1[25],
    a1[26],
    a1[27],
    a1[28]);
  return a1;
}

uint64_t sub_100AA0DFC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_100AA0E64(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_100AA0EC4()
{
  unint64_t result = qword_10168E4A8;
  if (!qword_10168E4A8)
  {
    type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168E4A8);
  }
  return result;
}

uint64_t sub_100AA0F1C()
{
  return _swift_deallocObject(v0, 17, 7);
}

void *sub_100AA0F2C(void *a1)
{
  return sub_100A9E0B4(a1, v1);
}

uint64_t sub_100AA0F34()
{
  if (v0[14])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v0[20])
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    if (v0[27])
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
  }
  if (v0[43])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (v0[55])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (v0[67])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (v0[74])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 616, 7);
}

unint64_t sub_100AA1074(void *a1)
{
  objc_super v2 = v1;
  uint64_t v91 = type metadata accessor for UUID();
  uint64_t v4 = *(void *)(v91 - 8);
  __n128 v6 = __chkstk_darwin(v91 - 8, v5);
  uint64_t v8 = (char *)&v82 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v93 = (unint64_t)_swiftEmptyArrayStorage;
  char v9 = (*(uint64_t (**)(__n128))((swift_isaMask & *(void *)v1) + 0x528))(v6);
  uint64_t v90 = a1;
  uint64_t v87 = v8;
  if (v9)
  {
    sub_10051B3EC((uint64_t)(a1 + 29), (uint64_t)v95, &qword_101686E98);
    sub_10051B3EC((uint64_t)v95, (uint64_t)v118, &qword_101686E98);
    if ((void)v119)
    {
      long long v124 = v118[4];
      long long v125 = v118[5];
      long long v126 = v119;
      long long v120 = v118[0];
      long long v121 = v118[1];
      long long v122 = v118[2];
      long long v123 = v118[3];
      sub_10050BF48(0, (unint64_t *)&qword_10168F9E0);
      v129[2] = v123;
      v129[3] = v124;
      v129[4] = v125;
      uint64_t v130 = v126;
      v129[0] = v121;
      v129[1] = v122;
      v116[0] = v121;
      v116[1] = v122;
      v116[3] = v124;
      v116[4] = v125;
      v116[2] = v123;
      uint64_t v117 = v126;
      uint64_t v10 = v1;
      sub_10068F4F8((uint64_t)v129);
      uint64_t v11 = sub_1007B0B84((uint64_t)v116);
      sub_10051B3EC((uint64_t)&v120, (uint64_t)v131, &qword_101687C08);
      sub_10051B3EC((uint64_t)v131, (uint64_t)v132, &qword_101687C08);
      if (v132[8])
      {
        if (qword_10166FB80 != -1) {
          swift_once();
        }
        swift_beginAccess();
        id v12 = (id)static OS_os_log.persistence;
        uint64_t v13 = static os_log_type_t.info.getter();
        sub_100BAC898((uint64_t)v12, (uint64_t)&_mh_execute_header, v13, (uint64_t)"Tried to decode unknown fill value. Falling back to unarchiving color fill.", 75, 2, (uint64_t)_swiftEmptyArrayStorage);
      }
      id v14 = [objc_allocWithZone((Class)CRLColorFill) initWithColor:v11];
    }
    else
    {
      uint64_t v15 = v1;
      id v14 = 0;
    }
    id v16 = objc_allocWithZone((Class)type metadata accessor for CRLCommandSetFill());
    uint64_t v17 = *(void (**)(uint64_t))(**(void **)&v2[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData] + 256);
    uint64_t v18 = swift_retain();
    uint64_t v19 = v87;
    v17(v18);
    swift_release();
    Class isa = UUID._bridgeToObjectiveC()().super.isa;
    (*(void (**)(char *, uint64_t))(v4 + 8))(v19, v91);
    [v16 initWithId:isa fill:v14];

    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)((v93 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v93 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
    a1 = v90;
    uint64_t v8 = v87;
  }
  sub_10051B3EC((uint64_t)a1, (uint64_t)v94, (uint64_t *)&unk_101685110);
  sub_10051B3EC((uint64_t)v94, (uint64_t)v127, (uint64_t *)&unk_101685110);
  int v21 = sub_100556850((uint64_t)v127);
  uint64_t v92 = v4;
  if (v21 == 1)
  {
    id v22 = 0;
  }
  else
  {
    v114[12] = v127[12];
    v114[13] = v127[13];
    uint64_t v115 = v128;
    v114[8] = v127[8];
    v114[9] = v127[9];
    v114[10] = v127[10];
    v114[11] = v127[11];
    v114[4] = v127[4];
    v114[5] = v127[5];
    v114[6] = v127[6];
    v114[7] = v127[7];
    v114[0] = v127[0];
    v114[1] = v127[1];
    v114[2] = v127[2];
    v114[3] = v127[3];
    id v22 = sub_100A1E370((uint64_t)v114, 0);
  }
  id v23 = objc_allocWithZone((Class)type metadata accessor for CRLCommandSetStroke());
  uint64_t v24 = OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData;
  uint64_t v25 = *(void (**)(uint64_t))(**(void **)&v2[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData] + 256);
  uint64_t v26 = v2;
  uint64_t v27 = v2;
  uint64_t v28 = swift_retain();
  v25(v28);
  swift_release();
  Class v29 = UUID._bridgeToObjectiveC()().super.isa;
  id v88 = *(void (**)(char *, uint64_t))(v92 + 8);
  v92 += 8;
  v88(v8, v91);
  [v23 initWithId:v29 stroke:v22];

  id v86 = v27;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  uint64_t v30 = v8;
  if (*(void *)((v93 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v93 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  uint64_t v31 = v90;
  id v32 = sub_100EBFD98();
  id v33 = objc_allocWithZone((Class)type metadata accessor for CRLCommandSetShadow());
  uint64_t v89 = v26;
  uint64_t v85 = v24;
  uint64_t v34 = *(void (**)(uint64_t))(**(void **)&v26[v24] + 256);
  uint64_t v35 = v86;
  uint64_t v36 = swift_retain();
  v34(v36);
  swift_release();
  Class v37 = UUID._bridgeToObjectiveC()().super.isa;
  v88(v30, v91);
  [v33 initWithId:v37 shadow:v32];

  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)((v93 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v93 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  uint64_t v38 = specialized Array._endMutation()();
  if (v31[59])
  {
    uint64_t v39 = (void *)(*(uint64_t (**)(uint64_t))((swift_isaMask & *v35) + 0x478))(v38);
    id v40 = [v39 bezierPath];

    LODWORD(v39) = [v40 isOpen];
    if (v39)
    {
      uint64_t v41 = *(uint64_t (**)(void))((swift_isaMask & *v35) + 0x500);
      id v83 = v35;
      char v42 = v41();
      uint64_t v43 = v31[65];
      if (v42)
      {
        if (v43)
        {
          uint64_t v44 = v90;
          uint64_t v45 = v90[66];
          uint64_t v47 = v90[63];
          uint64_t v46 = v90[64];
          uint64_t v48 = v90[61];
          uint64_t v49 = v90[62];
          uint64_t v105 = v90[60];
          uint64_t v50 = v105;
          uint64_t v106 = v48;
          char v107 = v49 & 1;
          int v108 = HIDWORD(v49);
          int v109 = v47;
          char v110 = BYTE4(v47) & 1;
          uint64_t v111 = v46;
          uint64_t v112 = v43;
          uint64_t v113 = v45;
          sub_10050BF48(0, (unint64_t *)&qword_101672AC0);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          id v86 = sub_10089D008((uint64_t)&v105);
          sub_10051AC38(v50, v48, v49, v47, v46, v43);
          uint64_t v51 = v44[72];
          if (v51)
          {
LABEL_24:
            uint64_t v52 = v44[73];
            uint64_t v53 = v44[71];
            uint64_t v54 = v44[70];
            uint64_t v55 = v44[69];
            uint64_t v56 = v44[68];
            uint64_t v57 = v44[67];
            uint64_t v96 = v57;
            uint64_t v97 = v56;
            char v98 = v55 & 1;
            int v99 = HIDWORD(v55);
            int v100 = v54;
            char v101 = BYTE4(v54) & 1;
            uint64_t v102 = v53;
            uint64_t v103 = v51;
            uint64_t v58 = v53;
            uint64_t v104 = v52;
            sub_10050BF48(0, (unint64_t *)&qword_101672AC0);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            id v59 = sub_10089D008((uint64_t)&v96);
LABEL_28:
            sub_10051AC38(v57, v56, v55, v54, v58, v51);
LABEL_33:
            uint64_t v68 = v85;
            Class v84 = (Class)type metadata accessor for CRLCommandSetLineEnd();
            id v69 = objc_allocWithZone(v84);
            uint64_t v70 = *(void (**)(void))(**(void **)&v89[v68] + 256);
            uint64_t v71 = v59;
            swift_retain();
            id v72 = v83;
            BOOL v73 = v87;
            v70();
            swift_release();
            Class v74 = UUID._bridgeToObjectiveC()().super.isa;
            id v75 = v88;
            v88(v73, v91);
            [v69 initWithId:v74 lineEnd:v71 chirality:0];

            uint64_t v90 = v71;
            specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
            if (*(void *)((v93 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v93 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
              specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
            }
            specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
            specialized Array._endMutation()();
            id v76 = objc_allocWithZone(v84);
            uint64_t v77 = *(void (**)(void))(**(void **)&v89[v85] + 256);
            id v78 = v86;
            swift_retain();
            id v79 = v72;
            v77();
            swift_release();
            Class v80 = UUID._bridgeToObjectiveC()().super.isa;
            v75(v73, v91);
            [v76 initWithId:v80 lineEnd:v78 chirality:1];

            specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
            if (*(void *)((v93 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v93 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
              specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
            }
            specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
            specialized Array._endMutation()();

            return v93;
          }
        }
        else
        {
          id v86 = 0;
          uint64_t v44 = v90;
          uint64_t v51 = v90[72];
          if (v51) {
            goto LABEL_24;
          }
        }
        id v59 = 0;
        goto LABEL_33;
      }
      if (v43)
      {
        uint64_t v60 = v90;
        uint64_t v61 = v90[66];
        uint64_t v63 = v90[63];
        uint64_t v62 = v90[64];
        uint64_t v64 = v90[62];
        id v86 = (id)v90[61];
        uint64_t v105 = v90[60];
        uint64_t v65 = v105;
        uint64_t v106 = (uint64_t)v86;
        char v107 = v64 & 1;
        int v108 = HIDWORD(v64);
        int v109 = v63;
        char v110 = BYTE4(v63) & 1;
        uint64_t v111 = v62;
        uint64_t v112 = v43;
        uint64_t v113 = v61;
        sub_10050BF48(0, (unint64_t *)&qword_101672AC0);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        id v59 = sub_10089D008((uint64_t)&v105);
        sub_10051AC38(v65, (uint64_t)v86, v64, v63, v62, v43);
        uint64_t v51 = v60[72];
        if (v51)
        {
LABEL_27:
          uint64_t v66 = v60[73];
          uint64_t v67 = v60[71];
          uint64_t v54 = v60[70];
          uint64_t v55 = v60[69];
          uint64_t v56 = v60[68];
          uint64_t v57 = v60[67];
          uint64_t v96 = v57;
          uint64_t v97 = v56;
          char v98 = v55 & 1;
          int v99 = HIDWORD(v55);
          int v100 = v54;
          char v101 = BYTE4(v54) & 1;
          uint64_t v102 = v67;
          uint64_t v103 = v51;
          uint64_t v58 = v67;
          uint64_t v104 = v66;
          sub_10050BF48(0, (unint64_t *)&qword_101672AC0);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          id v86 = sub_10089D008((uint64_t)&v96);
          goto LABEL_28;
        }
      }
      else
      {
        id v59 = 0;
        uint64_t v60 = v90;
        uint64_t v51 = v90[72];
        if (v51) {
          goto LABEL_27;
        }
      }
      id v86 = 0;
      goto LABEL_33;
    }
  }
  return v93;
}

uint64_t *sub_100AA1D64(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *a1 = *a2;
    uint64_t v7 = a3[5];
    uint64_t v8 = (char *)a1 + v7;
    char v9 = (char *)a2 + v7;
    uint64_t v10 = type metadata accessor for UUID();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    uint64_t v11 = a3[7];
    *(_DWORD *)((char *)v4 + a3[6]) = *(_DWORD *)((char *)a2 + a3[6]);
    id v12 = (_OWORD *)((char *)v4 + v11);
    uint64_t v13 = (_OWORD *)((char *)a2 + v11);
    long long v14 = v13[1];
    *id v12 = *v13;
    v12[1] = v14;
  }
  return v4;
}

void *sub_100AA1E5C(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for UUID();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
  uint64_t v10 = a3[7];
  *(_DWORD *)((char *)a1 + a3[6]) = *(_DWORD *)((char *)a2 + a3[6]);
  uint64_t v11 = (_OWORD *)((char *)a1 + v10);
  id v12 = (_OWORD *)((char *)a2 + v10);
  long long v13 = v12[1];
  *uint64_t v11 = *v12;
  v11[1] = v13;
  return a1;
}

void *sub_100AA1F04(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for UUID();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  *(_DWORD *)((char *)a1 + a3[6]) = *(_DWORD *)((char *)a2 + a3[6]);
  uint64_t v10 = a3[7];
  uint64_t v11 = (void *)((char *)a1 + v10);
  id v12 = (void *)((char *)a2 + v10);
  *uint64_t v11 = *v12;
  v11[1] = v12[1];
  v11[2] = v12[2];
  v11[3] = v12[3];
  return a1;
}

void *sub_100AA1FC8(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for UUID();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = a3[7];
  *(_DWORD *)((char *)a1 + a3[6]) = *(_DWORD *)((char *)a2 + a3[6]);
  uint64_t v11 = (_OWORD *)((char *)a1 + v10);
  id v12 = (_OWORD *)((char *)a2 + v10);
  long long v13 = v12[1];
  *uint64_t v11 = *v12;
  v11[1] = v13;
  return a1;
}

void *sub_100AA2070(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for UUID();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  uint64_t v10 = a3[7];
  *(_DWORD *)((char *)a1 + a3[6]) = *(_DWORD *)((char *)a2 + a3[6]);
  uint64_t v11 = (_OWORD *)((char *)a1 + v10);
  id v12 = (_OWORD *)((char *)a2 + v10);
  long long v13 = v12[1];
  *uint64_t v11 = *v12;
  v11[1] = v13;
  return a1;
}

uint64_t sub_100AA2118(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100AA212C);
}

uint64_t sub_100AA212C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = a1 + *(int *)(a3 + 20);
  uint64_t v5 = type metadata accessor for UUID();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48);

  return v6(v4, a2, v5);
}

uint64_t sub_100AA219C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100AA21B0);
}

uint64_t sub_100AA21B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = a1 + *(int *)(a4 + 20);
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);

  return v7(v5, a2, a2, v6);
}

uint64_t type metadata accessor for CRLFollowViewportState()
{
  uint64_t result = qword_10168E530;
  if (!qword_10168E530) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100AA2270()
{
  uint64_t result = type metadata accessor for UUID();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_100AA2324@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v90 = a3;
  uint64_t v89 = type metadata accessor for CRLFollowViewportState();
  __chkstk_darwin(v89, v5);
  id v88 = (char *)&v84 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1005057FC((uint64_t *)&unk_101674520);
  __chkstk_darwin(v7 - 8, v8);
  uint64_t v97 = (uint64_t)&v84 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10, v11);
  char v98 = (char *)&v84 - v12;
  uint64_t v13 = sub_1005057FC(&qword_10168E578);
  __chkstk_darwin(v13 - 8, v14);
  uint64_t v96 = (char *)&v84 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v94 = type metadata accessor for CRLProto_Size(0);
  uint64_t v93 = *(void *)(v94 - 8);
  __chkstk_darwin(v94, v16);
  uint64_t v95 = (char *)&v84 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_1005057FC(&qword_10168E570);
  __chkstk_darwin(v18 - 8, v19);
  uint64_t v103 = (char *)&v84 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v92 = type metadata accessor for CRLProto_Point(0);
  uint64_t v91 = *(void *)(v92 - 8);
  __chkstk_darwin(v92, v21);
  int v99 = (float *)((char *)&v84 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v23 = sub_1005057FC((uint64_t *)&unk_101674160);
  __chkstk_darwin(v23 - 8, v24);
  uint64_t v102 = (uint64_t)&v84 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = type metadata accessor for CRLProto_Data(0);
  uint64_t v100 = *(void *)(v26 - 8);
  uint64_t v101 = v26;
  __chkstk_darwin(v26, v27);
  Class v29 = (uint64_t *)((char *)&v84 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v30 = type metadata accessor for UUID();
  uint64_t v104 = *(void *)(v30 - 8);
  __chkstk_darwin(v30, v31);
  id v33 = (char *)&v84 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v34, v35);
  Class v37 = (char *)&v84 - v36;
  uint64_t v38 = type metadata accessor for BinaryDecodingOptions();
  __chkstk_darwin(v38 - 8, v39);
  id v40 = (int *)type metadata accessor for CRLProto_FollowViewportState(0);
  __chkstk_darwin(v40, v41);
  uint64_t v43 = (char *)&v84 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v108 = 0;
  long long v106 = 0u;
  long long v107 = 0u;
  sub_100510D4C(a1, a2);
  BinaryDecodingOptions.init()();
  sub_100AA35A8();
  uint64_t v44 = v105;
  Message.init(serializedData:extensions:partial:options:)();
  if (v44) {
    return sub_100510084(a1, a2);
  }
  uint64_t v85 = v33;
  uint64_t v105 = a1;
  unint64_t v87 = a2;
  uint64_t v46 = v43;
  uint64_t v47 = v102;
  sub_100522E9C((uint64_t)&v43[v40[7]], v102, (uint64_t *)&unk_101674160);
  int v48 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v100 + 48))(v47, 1, v101);
  uint64_t v86 = v30;
  if (v48 == 1)
  {
    *(_OWORD *)Class v29 = xmmword_101180360;
    UnknownStorage.init()();
    sub_100522F00(v47, (uint64_t *)&unk_101674160);
  }
  else
  {
    sub_100AA3660(v47, (uint64_t)v29, type metadata accessor for CRLProto_Data);
  }
  uint64_t v49 = (uint64_t)v103;
  uint64_t v50 = *v29;
  unint64_t v51 = v29[1];
  sub_100510D4C(*v29, v51);
  sub_100AA3600((uint64_t)v29, type metadata accessor for CRLProto_Data);
  uint64_t v52 = v37;
  UUID.init(crl_data:)(v50, v51);
  uint64_t v53 = v104;
  int v54 = *v46;
  uint64_t v55 = v40[8];
  Class v84 = v46;
  sub_100522E9C((uint64_t)v46 + v55, v49, &qword_10168E570);
  int v56 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v91 + 48))(v49, 1, v92);
  uint64_t v57 = v49;
  uint64_t v59 = (uint64_t)v95;
  uint64_t v58 = (uint64_t)v96;
  if (v56 == 1)
  {
    uint64_t v60 = v99;
    *(void *)int v99 = 0;
    UnknownStorage.init()();
    sub_100522F00(v57, &qword_10168E570);
  }
  else
  {
    uint64_t v61 = v49;
    uint64_t v60 = v99;
    sub_100AA3660(v61, (uint64_t)v99, type metadata accessor for CRLProto_Point);
  }
  float v62 = *v60;
  float v63 = v60[1];
  sub_100AA3600((uint64_t)v60, type metadata accessor for CRLProto_Point);
  uint64_t v64 = (uint64_t)v84;
  sub_100522E9C((uint64_t)v84 + v40[9], v58, &qword_10168E578);
  int v65 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v93 + 48))(v58, 1, v94);
  unint64_t v66 = v87;
  uint64_t v67 = (uint64_t)v98;
  if (v65 == 1)
  {
    *(void *)uint64_t v59 = 0;
    UnknownStorage.init()();
    sub_100522F00(v58, &qword_10168E578);
  }
  else
  {
    sub_100AA3660(v58, v59, type metadata accessor for CRLProto_Size);
  }
  float v68 = *(float *)v59;
  float v69 = *(float *)(v59 + 4);
  sub_100AA3600(v59, type metadata accessor for CRLProto_Size);
  uint64_t v70 = v52;
  uint64_t v71 = *(void *)(v64 + 8);
  uint64_t v72 = v86;
  (*(void (**)(uint64_t, char *, uint64_t))(v53 + 16))(v67, v52, v86);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v53 + 56))(v67, 0, 1, v72);
  uint64_t v73 = v97;
  sub_100522E9C(v67, v97, (uint64_t *)&unk_101674520);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v53 + 48))(v73, 1, v72) == 1)
  {
    sub_100522F00(v73, (uint64_t *)&unk_101674520);
    sub_1005F7CE8();
    swift_allocError();
    *Class v74 = 0;
    swift_willThrow();
    sub_100522F00(v67, (uint64_t *)&unk_101674520);
    sub_100510084(v105, v66);
    (*(void (**)(char *, uint64_t))(v53 + 8))(v70, v72);
    uint64_t v75 = v64;
  }
  else
  {
    uint64_t v102 = v71;
    uint64_t v103 = v70;
    uint64_t v76 = v53;
    uint64_t v77 = v72;
    id v78 = *(void (**)(char *, uint64_t, uint64_t))(v76 + 32);
    id v79 = v85;
    v78(v85, v73, v77);
    sub_100522F00(v67, (uint64_t *)&unk_101674520);
    unint64_t v80 = v66;
    uint64_t v81 = v89;
    uint64_t v82 = v88;
    v78(&v88[*(int *)(v89 + 20)], (uint64_t)v79, v77);
    *(_DWORD *)((char *)v82 + *(int *)(v81 + 24)) = v54;
    id v83 = (double *)((char *)v82 + *(int *)(v81 + 28));
    *id v83 = v62;
    v83[1] = v63;
    v83[2] = v68;
    v83[3] = v69;
    *uint64_t v82 = v102;
    sub_100AA3660((uint64_t)v82, v90, (uint64_t (*)(void))type metadata accessor for CRLFollowViewportState);
    sub_100510084(v105, v80);
    (*(void (**)(char *, uint64_t))(v76 + 8))(v103, v77);
    uint64_t v75 = (uint64_t)v84;
  }
  return sub_100AA3600(v75, type metadata accessor for CRLProto_FollowViewportState);
}

BOOL sub_100AA2D38(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CRLFollowViewportState();
  __chkstk_darwin(v4, v5);
  uint64_t v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8, v9);
  uint64_t v11 = (char *)&v25 - v10;
  __chkstk_darwin(v12, v13);
  uint64_t v15 = (char *)&v25 - v14;
  __chkstk_darwin(v16, v17);
  uint64_t v19 = (char *)&v25 - v18;
  char v20 = static UUID.== infix(_:_:)();
  sub_100AA2F58(a1, (uint64_t)v19);
  sub_100AA2F58(a2, (uint64_t)v15);
  if ((v20 & 1) == 0)
  {
    sub_100AA3600((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for CRLFollowViewportState);
    sub_100AA3600((uint64_t)v19, (uint64_t (*)(void))type metadata accessor for CRLFollowViewportState);
    sub_100AA2F58(a1, (uint64_t)v11);
    sub_100AA2F58(a2, (uint64_t)v7);
    goto LABEL_5;
  }
  float v21 = *(float *)&v19[*(int *)(v4 + 24)];
  sub_100AA3600((uint64_t)v19, (uint64_t (*)(void))type metadata accessor for CRLFollowViewportState);
  float v22 = *(float *)&v15[*(int *)(v4 + 24)];
  sub_100AA3600((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for CRLFollowViewportState);
  sub_100AA2F58(a1, (uint64_t)v11);
  sub_100AA2F58(a2, (uint64_t)v7);
  if (v21 != v22)
  {
LABEL_5:
    BOOL v23 = 0;
    goto LABEL_6;
  }
  BOOL v23 = CGRectEqualToRect(*(CGRect *)&v11[*(int *)(v4 + 28)], *(CGRect *)&v7[*(int *)(v4 + 28)]);
LABEL_6:
  sub_100AA3600((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for CRLFollowViewportState);
  sub_100AA3600((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for CRLFollowViewportState);
  return v23;
}

uint64_t sub_100AA2F58(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CRLFollowViewportState();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100AA2FBC()
{
  uint64_t v56 = type metadata accessor for CRLProto_Size(0);
  uint64_t v58 = *(void *)(v56 - 8);
  __chkstk_darwin(v56, v0);
  int v54 = (float32x2_t *)((char *)&v43 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v55 = type metadata accessor for CRLProto_Point(0);
  uint64_t v2 = *(void *)(v55 - 8);
  __chkstk_darwin(v55, v3);
  uint64_t v52 = (float32x2_t *)((char *)&v43 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v5 = sub_1005057FC((uint64_t *)&unk_101674160);
  __chkstk_darwin(v5 - 8, v6);
  uint64_t v45 = (uint64_t)&v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for CRLProto_Data(0);
  uint64_t v44 = *(void *)(v8 - 8);
  uint64_t v9 = v44;
  __chkstk_darwin(v8, v10);
  uint64_t v12 = (char *)&v43 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13, v14);
  uint64_t v16 = (long long *)((char *)&v43 - v15);
  uint64_t v17 = (int *)type metadata accessor for CRLProto_FollowViewportState(0);
  __chkstk_darwin(v17, v18);
  char v20 = (char *)&v43 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_DWORD *)char v20 = 0;
  *((void *)v20 + 1) = 0;
  UnknownStorage.init()();
  uint64_t v21 = (uint64_t)&v20[v17[7]];
  float v22 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
  v22(v21, 1, 1, v8);
  BOOL v23 = *(void (**)(void))(v2 + 56);
  uint64_t v47 = &v20[v17[8]];
  int v48 = v23;
  uint64_t v53 = v2 + 56;
  v23();
  uint64_t v24 = *(void (**)(void))(v58 + 56);
  uint64_t v49 = &v20[v17[9]];
  v58 += 56;
  uint64_t v50 = v24;
  unint64_t v51 = v17;
  v24();
  long long v43 = xmmword_101180360;
  *uint64_t v16 = xmmword_101180360;
  UnknownStorage.init()();
  sub_100522F00(v21, (uint64_t *)&unk_101674160);
  sub_100AA3660((uint64_t)v16, v21, type metadata accessor for CRLProto_Data);
  uint64_t v46 = v22;
  v22(v21, 0, 1, v8);
  uint64_t v25 = type metadata accessor for CRLFollowViewportState();
  uint64_t v26 = UUID.crl_data()();
  uint64_t v28 = v27;
  uint64_t v29 = v45;
  sub_100522E9C(v21, v45, (uint64_t *)&unk_101674160);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v44 + 48))(v29, 1, v8) == 1)
  {
    *(_OWORD *)uint64_t v12 = v43;
    UnknownStorage.init()();
    sub_100522F00(v29, (uint64_t *)&unk_101674160);
  }
  else
  {
    sub_100AA3660(v29, (uint64_t)v12, type metadata accessor for CRLProto_Data);
  }
  sub_100510084(*(void *)v12, *((void *)v12 + 1));
  *(void *)uint64_t v12 = v26;
  *((void *)v12 + 1) = v28;
  sub_100522F00(v21, (uint64_t *)&unk_101674160);
  sub_100AA3660((uint64_t)v12, v21, type metadata accessor for CRLProto_Data);
  v46(v21, 0, 1, v8);
  uint64_t v30 = *(int *)(v25 + 28);
  uint64_t v31 = v57;
  *(_DWORD *)char v20 = *(_DWORD *)((char *)v57 + *(int *)(v25 + 24));
  uint64_t v32 = (float64x2_t *)((char *)v31 + v30);
  uint64_t v33 = v55;
  uint64_t v34 = v52;
  float32x2_t v35 = vcvt_f32_f64(*(float64x2_t *)((char *)v31 + v30));
  UnknownStorage.init()();
  *uint64_t v34 = v35;
  uint64_t v36 = (uint64_t)v47;
  sub_100522F00((uint64_t)v47, &qword_10168E570);
  sub_100AA3660((uint64_t)v34, v36, type metadata accessor for CRLProto_Point);
  ((void (*)(uint64_t, void, uint64_t, uint64_t))v48)(v36, 0, 1, v33);
  uint64_t v37 = v56;
  uint64_t v38 = v54;
  float32x2_t v39 = vcvt_f32_f64(v32[1]);
  UnknownStorage.init()();
  float32x2_t *v38 = v39;
  uint64_t v40 = (uint64_t)v49;
  sub_100522F00((uint64_t)v49, &qword_10168E578);
  sub_100AA3660((uint64_t)v38, v40, type metadata accessor for CRLProto_Size);
  ((void (*)(uint64_t, void, uint64_t, uint64_t))v50)(v40, 0, 1, v37);
  *((void *)v20 + 1) = *v31;
  sub_100AA35A8();
  uint64_t v41 = Message.serializedData(partial:)();
  sub_100AA3600((uint64_t)v20, type metadata accessor for CRLProto_FollowViewportState);
  return v41;
}

unint64_t sub_100AA35A8()
{
  unint64_t result = qword_10168E580;
  if (!qword_10168E580)
  {
    type metadata accessor for CRLProto_FollowViewportState(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168E580);
  }
  return result;
}

uint64_t sub_100AA3600(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_100AA3660(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t destroy for CRLConnectionLinePathSourceData()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for CRLConnectionLinePathSourceData(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v3 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v3;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(void *)(a1 + 60) = *(void *)(a2 + 60);
  uint64_t v4 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v4;
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  *(void *)(a1 + 92) = *(void *)(a2 + 92);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for CRLConnectionLinePathSourceData(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
  *(void *)a1 = v4;
  *(void *)(a1 + 16) = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 24) = *((_DWORD *)a2 + 6);
  *(_DWORD *)(a1 + 28) = *((_DWORD *)a2 + 7);
  *(void *)(a1 + 32) = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 40) = *((_DWORD *)a2 + 10);
  *(_DWORD *)(a1 + 44) = *((_DWORD *)a2 + 11);
  uint64_t v5 = a2[6];
  *(unsigned char *)(a1 + 56) = *((unsigned char *)a2 + 56);
  *(void *)(a1 + 48) = v5;
  *(_DWORD *)(a1 + 60) = *((_DWORD *)a2 + 15);
  *(_DWORD *)(a1 + 64) = *((_DWORD *)a2 + 16);
  *(void *)(a1 + 72) = a2[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a2[10];
  *(unsigned char *)(a1 + 88) = *((unsigned char *)a2 + 88);
  *(void *)(a1 + 80) = v6;
  *(_DWORD *)(a1 + 92) = *((_DWORD *)a2 + 23);
  *(_DWORD *)(a1 + 96) = *((_DWORD *)a2 + 24);
  *(void *)(a1 + 104) = a2[13];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 112) = *((unsigned char *)a2 + 112);
  *(void *)(a1 + 120) = a2[15];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for CRLConnectionLinePathSourceData(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(void *)(a1 + 60) = *(void *)(a2 + 60);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  *(void *)(a1 + 92) = *(void *)(a2 + 92);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for CRLConnectionLinePathSourceData(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 128)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CRLConnectionLinePathSourceData(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 120) = 0;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 128) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 128) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLConnectionLinePathSourceData()
{
  return &type metadata for CRLConnectionLinePathSourceData;
}

void *sub_100AA3A90(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for CRLBezierPathSourceData(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(_DWORD *)(a1 + 12) = *(_DWORD *)(a2 + 12);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for CRLBezierPathSourceData(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for CRLBezierPathSourceData()
{
  return &type metadata for CRLBezierPathSourceData;
}

uint64_t *sub_100AA3BA8(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for UUID();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[6];
    *(uint64_t *)((char *)a1 + a3[5]) = *(uint64_t *)((char *)a2 + a3[5]);
    *(uint64_t *)((char *)a1 + v8) = *(uint64_t *)((char *)a2 + v8);
    *(uint64_t *)((char *)a1 + a3[7]) = *(uint64_t *)((char *)a2 + a3[7]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_100AA3C94(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_100AA3D14(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_100AA3DB0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v7 = a3[6];
  uint64_t v8 = (_DWORD *)(a1 + v7);
  uint64_t v9 = (_DWORD *)(a2 + v7);
  *uint64_t v8 = *v9;
  v8[1] = v9[1];
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_100AA3E74(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  return a1;
}

uint64_t sub_100AA3F04(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  swift_bridgeObjectRelease();
  uint64_t v7 = a3[7];
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_100AA3FA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100AA3FB8);
}

uint64_t sub_100AA3FB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_100AA4078(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100AA408C);
}

uint64_t sub_100AA408C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for UUID();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
  return result;
}

uint64_t type metadata accessor for CRLEditableBezierPathSourceData(uint64_t a1)
{
  return sub_100512D5C(a1, qword_10168E5E0);
}

uint64_t sub_100AA4168()
{
  uint64_t result = type metadata accessor for UUID();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

_WORD *sub_100AA420C(_WORD *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *(void *)uint64_t v4 = *a2;
    uint64_t v4 = (_WORD *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *a1 = *(_WORD *)a2;
    uint64_t v7 = a2[2];
    *((void *)v4 + 1) = a2[1];
    *((void *)v4 + 2) = v7;
    uint64_t v8 = a2[4];
    *((void *)v4 + 3) = a2[3];
    *((void *)v4 + 4) = v8;
    *((void *)v4 + 5) = a2[5];
    *((unsigned char *)v4 + 48) = *((unsigned char *)a2 + 48);
    *(_OWORD *)(v4 + 26) = *(_OWORD *)((char *)a2 + 52);
    unint64_t v10 = a2 + 15;
    uint64_t v9 = a2[15];
    uint64_t v11 = a2[10];
    *((void *)v4 + 9) = a2[9];
    *((void *)v4 + 10) = v11;
    *((unsigned char *)v4 + 88) = *((unsigned char *)a2 + 88);
    *((_DWORD *)v4 + 23) = *((_DWORD *)a2 + 23);
    *((void *)v4 + 12) = a2[12];
    v4[52] = *((_WORD *)a2 + 52);
    *((void *)v4 + 14) = a2[14];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v9)
    {
      uint64_t v12 = a2[16];
      uint64_t v13 = a2[17];
      *((void *)v4 + 15) = v9;
      *((void *)v4 + 16) = v12;
      *((void *)v4 + 17) = v13;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      *(_OWORD *)(v4 + 60) = *v10;
      *((void *)v4 + 17) = a2[17];
    }
    *((void *)v4 + 18) = a2[18];
    *((void *)v4 + 19) = a2[19];
    *((unsigned char *)v4 + 160) = *((unsigned char *)a2 + 160);
    *(void *)(v4 + 82) = *(uint64_t *)((char *)a2 + 164);
    *((void *)v4 + 22) = a2[22];
    uint64_t v15 = v4 + 92;
    uint64_t v16 = a2 + 23;
    uint64_t v17 = a2[25];
    swift_bridgeObjectRetain();
    if (v17)
    {
      *uint64_t v15 = *v16;
      *((unsigned char *)v4 + 192) = *((unsigned char *)a2 + 192);
      uint64_t v18 = a2[26];
      uint64_t v19 = a2[27];
      *((void *)v4 + 25) = v17;
      *((void *)v4 + 26) = v18;
      *((void *)v4 + 27) = v19;
      *((void *)v4 + 28) = a2[28];
      *((void *)v4 + 29) = a2[29];
      *((unsigned char *)v4 + 240) = *((unsigned char *)a2 + 240);
      *(void *)(v4 + 122) = *(uint64_t *)((char *)a2 + 244);
      uint64_t v20 = a2[33];
      *((void *)v4 + 32) = a2[32];
      *((void *)v4 + 33) = v20;
      *((unsigned char *)v4 + 272) = *((unsigned char *)a2 + 272);
      *(void *)(v4 + 138) = *(uint64_t *)((char *)a2 + 276);
      *((void *)v4 + 36) = a2[36];
      *((unsigned char *)v4 + 296) = *((unsigned char *)a2 + 296);
      *((void *)v4 + 38) = a2[38];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v21 = *(_OWORD *)(a2 + 33);
      *(_OWORD *)(v4 + 124) = *(_OWORD *)(a2 + 31);
      *(_OWORD *)(v4 + 132) = v21;
      long long v22 = *(_OWORD *)(a2 + 37);
      *(_OWORD *)(v4 + 140) = *(_OWORD *)(a2 + 35);
      *(_OWORD *)(v4 + 148) = v22;
      long long v23 = *(_OWORD *)(a2 + 25);
      *(_OWORD *)uint64_t v15 = *(_OWORD *)v16;
      *(_OWORD *)(v4 + 100) = v23;
      long long v24 = *(_OWORD *)(a2 + 29);
      *(_OWORD *)(v4 + 108) = *(_OWORD *)(a2 + 27);
      *(_OWORD *)(v4 + 116) = v24;
    }
    uint64_t v25 = *(int *)(a3 + 52);
    uint64_t v26 = (char *)v4 + v25;
    uint64_t v27 = (char *)a2 + v25;
    uint64_t v28 = (int *)type metadata accessor for CRLEditableBezierPathSourceData(0);
    uint64_t v29 = *((void *)v28 - 1);
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v29 + 48))(v27, 1, v28))
    {
      uint64_t v30 = sub_1005057FC(&qword_10168B6F8);
      memcpy(v26, v27, *(void *)(*(void *)(v30 - 8) + 64));
    }
    else
    {
      uint64_t v31 = type metadata accessor for UUID();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 16))(v26, v27, v31);
      *(void *)&v26[v28[5]] = *(void *)&v27[v28[5]];
      *(void *)&v26[v28[6]] = *(void *)&v27[v28[6]];
      *(void *)&v26[v28[7]] = *(void *)&v27[v28[7]];
      uint64_t v32 = *(void (**)(char *, void, uint64_t, int *))(v29 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v32(v26, 0, 1, v28);
    }
    *(void *)((char *)v4 + *(int *)(a3 + 56)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 56));
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_100AA45A4(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 120))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 200))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v4 = a1 + *(int *)(a2 + 52);
  uint64_t v5 = type metadata accessor for CRLEditableBezierPathSourceData(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v4, 1, v5))
  {
    uint64_t v6 = type metadata accessor for UUID();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v4, v6);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }

  return swift_bridgeObjectRelease();
}

uint64_t sub_100AA46EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_WORD *)a1 = *(_WORD *)a2;
  uint64_t v6 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v6;
  uint64_t v7 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(_OWORD *)(a1 + 52) = *(_OWORD *)(a2 + 52);
  uint64_t v9 = a2 + 120;
  uint64_t v8 = *(void *)(a2 + 120);
  uint64_t v10 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v10;
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  *(_DWORD *)(a1 + 92) = *(_DWORD *)(a2 + 92);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(_WORD *)(a1 + 104) = *(_WORD *)(a2 + 104);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v8)
  {
    uint64_t v11 = *(void *)(a2 + 128);
    uint64_t v12 = *(void *)(a2 + 136);
    *(void *)(a1 + 120) = v8;
    *(void *)(a1 + 128) = v11;
    *(void *)(a1 + 136) = v12;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)(a1 + 120) = *(_OWORD *)v9;
    *(void *)(a1 + 136) = *(void *)(v9 + 16);
  }
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(unsigned char *)(a1 + 160) = *(unsigned char *)(a2 + 160);
  *(void *)(a1 + 164) = *(void *)(a2 + 164);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  uint64_t v13 = (void *)(a1 + 184);
  uint64_t v14 = (void *)(a2 + 184);
  uint64_t v15 = *(void *)(a2 + 200);
  swift_bridgeObjectRetain();
  if (v15)
  {
    *uint64_t v13 = *v14;
    *(unsigned char *)(a1 + 192) = *(unsigned char *)(a2 + 192);
    uint64_t v16 = *(void *)(a2 + 208);
    uint64_t v17 = *(void *)(a2 + 216);
    *(void *)(a1 + 200) = v15;
    *(void *)(a1 + 208) = v16;
    *(void *)(a1 + 216) = v17;
    *(void *)(a1 + 224) = *(void *)(a2 + 224);
    *(void *)(a1 + 232) = *(void *)(a2 + 232);
    *(unsigned char *)(a1 + 240) = *(unsigned char *)(a2 + 240);
    *(void *)(a1 + 244) = *(void *)(a2 + 244);
    uint64_t v18 = *(void *)(a2 + 264);
    *(void *)(a1 + 256) = *(void *)(a2 + 256);
    *(void *)(a1 + 264) = v18;
    *(unsigned char *)(a1 + 272) = *(unsigned char *)(a2 + 272);
    *(void *)(a1 + 276) = *(void *)(a2 + 276);
    *(void *)(a1 + 288) = *(void *)(a2 + 288);
    *(unsigned char *)(a1 + 296) = *(unsigned char *)(a2 + 296);
    *(void *)(a1 + 304) = *(void *)(a2 + 304);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v19 = *(_OWORD *)(a2 + 264);
    *(_OWORD *)(a1 + 248) = *(_OWORD *)(a2 + 248);
    *(_OWORD *)(a1 + 264) = v19;
    long long v20 = *(_OWORD *)(a2 + 296);
    *(_OWORD *)(a1 + 280) = *(_OWORD *)(a2 + 280);
    *(_OWORD *)(a1 + 296) = v20;
    long long v21 = *(_OWORD *)(a2 + 200);
    *(_OWORD *)uint64_t v13 = *(_OWORD *)v14;
    *(_OWORD *)(a1 + 200) = v21;
    long long v22 = *(_OWORD *)(a2 + 232);
    *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 216);
    *(_OWORD *)(a1 + 232) = v22;
  }
  uint64_t v23 = *(int *)(a3 + 52);
  long long v24 = (char *)(a1 + v23);
  uint64_t v25 = (char *)(a2 + v23);
  uint64_t v26 = (int *)type metadata accessor for CRLEditableBezierPathSourceData(0);
  uint64_t v27 = *((void *)v26 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v27 + 48))(v25, 1, v26))
  {
    uint64_t v28 = sub_1005057FC(&qword_10168B6F8);
    memcpy(v24, v25, *(void *)(*(void *)(v28 - 8) + 64));
  }
  else
  {
    uint64_t v29 = type metadata accessor for UUID();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 16))(v24, v25, v29);
    *(void *)&v24[v26[5]] = *(void *)&v25[v26[5]];
    *(void *)&v24[v26[6]] = *(void *)&v25[v26[6]];
    *(void *)&v24[v26[7]] = *(void *)&v25[v26[7]];
    uint64_t v30 = *(void (**)(char *, void, uint64_t, int *))(v27 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v30(v24, 0, 1, v26);
  }
  *(void *)(a1 + *(int *)(a3 + 56)) = *(void *)(a2 + *(int *)(a3 + 56));
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_100AA4A34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(unsigned char *)(a1 + 1) = *(unsigned char *)(a2 + 1);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 40) = v6;
  *(_DWORD *)(a1 + 52) = *(_DWORD *)(a2 + 52);
  *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 56);
  *(_DWORD *)(a1 + 60) = *(_DWORD *)(a2 + 60);
  *(_DWORD *)(a1 + 64) = *(_DWORD *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 80);
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  *(void *)(a1 + 80) = v7;
  *(_DWORD *)(a1 + 92) = *(_DWORD *)(a2 + 92);
  *(_DWORD *)(a1 + 96) = *(_DWORD *)(a2 + 96);
  *(_DWORD *)(a1 + 100) = *(_DWORD *)(a2 + 100);
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  *(unsigned char *)(a1 + 105) = *(unsigned char *)(a2 + 105);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v8 = (_OWORD *)(a1 + 120);
  uint64_t v10 = (_OWORD *)(a2 + 120);
  uint64_t v9 = *(void *)(a2 + 120);
  if (*(void *)(a1 + 120))
  {
    if (v9)
    {
      *(void *)(a1 + 120) = v9;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_DWORD *)(a1 + 128) = *(_DWORD *)(a2 + 128);
      *(_DWORD *)(a1 + 132) = *(_DWORD *)(a2 + 132);
      *(void *)(a1 + 136) = *(void *)(a2 + 136);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_100A040A4(a1 + 120);
      uint64_t v11 = *(void *)(a2 + 136);
      *uint64_t v8 = *v10;
      *(void *)(a1 + 136) = v11;
    }
  }
  else if (v9)
  {
    *(void *)(a1 + 120) = v9;
    *(void *)(a1 + 128) = *(void *)(a2 + 128);
    *(void *)(a1 + 136) = *(void *)(a2 + 136);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v12 = *v10;
    *(void *)(a1 + 136) = *(void *)(a2 + 136);
    *uint64_t v8 = v12;
  }
  *(_DWORD *)(a1 + 144) = *(_DWORD *)(a2 + 144);
  *(_DWORD *)(a1 + 148) = *(_DWORD *)(a2 + 148);
  *(_DWORD *)(a1 + 152) = *(_DWORD *)(a2 + 152);
  *(_DWORD *)(a1 + 156) = *(_DWORD *)(a2 + 156);
  *(unsigned char *)(a1 + 160) = *(unsigned char *)(a2 + 160);
  *(_DWORD *)(a1 + 164) = *(_DWORD *)(a2 + 164);
  *(_DWORD *)(a1 + 168) = *(_DWORD *)(a2 + 168);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v13 = (void *)(a1 + 184);
  uint64_t v14 = (uint64_t *)(a2 + 184);
  uint64_t v15 = *(void *)(a2 + 200);
  if (*(void *)(a1 + 200))
  {
    if (v15)
    {
      uint64_t v16 = *v14;
      *(unsigned char *)(a1 + 192) = *(unsigned char *)(a2 + 192);
      *uint64_t v13 = v16;
      *(void *)(a1 + 200) = *(void *)(a2 + 200);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_DWORD *)(a1 + 208) = *(_DWORD *)(a2 + 208);
      *(_DWORD *)(a1 + 212) = *(_DWORD *)(a2 + 212);
      *(void *)(a1 + 216) = *(void *)(a2 + 216);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_DWORD *)(a1 + 224) = *(_DWORD *)(a2 + 224);
      *(_DWORD *)(a1 + 228) = *(_DWORD *)(a2 + 228);
      uint64_t v17 = *(void *)(a2 + 232);
      *(unsigned char *)(a1 + 240) = *(unsigned char *)(a2 + 240);
      *(void *)(a1 + 232) = v17;
      *(_DWORD *)(a1 + 244) = *(_DWORD *)(a2 + 244);
      *(_DWORD *)(a1 + 248) = *(_DWORD *)(a2 + 248);
      *(void *)(a1 + 256) = *(void *)(a2 + 256);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v18 = *(void *)(a2 + 264);
      *(unsigned char *)(a1 + 272) = *(unsigned char *)(a2 + 272);
      *(void *)(a1 + 264) = v18;
      *(_DWORD *)(a1 + 276) = *(_DWORD *)(a2 + 276);
      *(_DWORD *)(a1 + 280) = *(_DWORD *)(a2 + 280);
      *(void *)(a1 + 288) = *(void *)(a2 + 288);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 296) = *(unsigned char *)(a2 + 296);
      *(void *)(a1 + 304) = *(void *)(a2 + 304);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_100A040F8(a1 + 184);
      long long v22 = *(_OWORD *)(a2 + 232);
      long long v24 = *(_OWORD *)v14;
      long long v23 = *(_OWORD *)(a2 + 200);
      *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 216);
      *(_OWORD *)(a1 + 232) = v22;
      *(_OWORD *)uint64_t v13 = v24;
      *(_OWORD *)(a1 + 200) = v23;
      long long v25 = *(_OWORD *)(a2 + 296);
      long long v27 = *(_OWORD *)(a2 + 248);
      long long v26 = *(_OWORD *)(a2 + 264);
      *(_OWORD *)(a1 + 280) = *(_OWORD *)(a2 + 280);
      *(_OWORD *)(a1 + 296) = v25;
      *(_OWORD *)(a1 + 248) = v27;
      *(_OWORD *)(a1 + 264) = v26;
    }
  }
  else if (v15)
  {
    uint64_t v19 = *v14;
    *(unsigned char *)(a1 + 192) = *(unsigned char *)(a2 + 192);
    *uint64_t v13 = v19;
    *(void *)(a1 + 200) = *(void *)(a2 + 200);
    *(void *)(a1 + 208) = *(void *)(a2 + 208);
    *(void *)(a1 + 216) = *(void *)(a2 + 216);
    *(_DWORD *)(a1 + 224) = *(_DWORD *)(a2 + 224);
    *(_DWORD *)(a1 + 228) = *(_DWORD *)(a2 + 228);
    uint64_t v20 = *(void *)(a2 + 232);
    *(unsigned char *)(a1 + 240) = *(unsigned char *)(a2 + 240);
    *(void *)(a1 + 232) = v20;
    *(void *)(a1 + 244) = *(void *)(a2 + 244);
    *(void *)(a1 + 256) = *(void *)(a2 + 256);
    uint64_t v21 = *(void *)(a2 + 264);
    *(unsigned char *)(a1 + 272) = *(unsigned char *)(a2 + 272);
    *(void *)(a1 + 264) = v21;
    *(void *)(a1 + 276) = *(void *)(a2 + 276);
    *(void *)(a1 + 288) = *(void *)(a2 + 288);
    *(unsigned char *)(a1 + 296) = *(unsigned char *)(a2 + 296);
    *(void *)(a1 + 304) = *(void *)(a2 + 304);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v28 = *(_OWORD *)v14;
    long long v29 = *(_OWORD *)(a2 + 200);
    long long v30 = *(_OWORD *)(a2 + 232);
    *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 216);
    *(_OWORD *)(a1 + 232) = v30;
    *(_OWORD *)uint64_t v13 = v28;
    *(_OWORD *)(a1 + 200) = v29;
    long long v31 = *(_OWORD *)(a2 + 248);
    long long v32 = *(_OWORD *)(a2 + 264);
    long long v33 = *(_OWORD *)(a2 + 296);
    *(_OWORD *)(a1 + 280) = *(_OWORD *)(a2 + 280);
    *(_OWORD *)(a1 + 296) = v33;
    *(_OWORD *)(a1 + 248) = v31;
    *(_OWORD *)(a1 + 264) = v32;
  }
  uint64_t v34 = *(int *)(a3 + 52);
  float32x2_t v35 = (char *)(a1 + v34);
  uint64_t v36 = (char *)(a2 + v34);
  uint64_t v37 = (int *)type metadata accessor for CRLEditableBezierPathSourceData(0);
  uint64_t v38 = *((void *)v37 - 1);
  float32x2_t v39 = *(uint64_t (**)(char *, uint64_t, int *))(v38 + 48);
  int v40 = v39(v35, 1, v37);
  int v41 = v39(v36, 1, v37);
  if (!v40)
  {
    if (!v41)
    {
      uint64_t v46 = type metadata accessor for UUID();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v46 - 8) + 24))(v35, v36, v46);
      *(void *)&v35[v37[5]] = *(void *)&v36[v37[5]];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v47 = v37[6];
      int v48 = &v35[v47];
      uint64_t v49 = &v36[v47];
      *(_DWORD *)int v48 = *(_DWORD *)v49;
      *((_DWORD *)v48 + 1) = *((_DWORD *)v49 + 1);
      *(void *)&v35[v37[7]] = *(void *)&v36[v37[7]];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      goto LABEL_21;
    }
    sub_100AB5148((uint64_t)v35, type metadata accessor for CRLEditableBezierPathSourceData);
    goto LABEL_20;
  }
  if (v41)
  {
LABEL_20:
    uint64_t v44 = sub_1005057FC(&qword_10168B6F8);
    memcpy(v35, v36, *(void *)(*(void *)(v44 - 8) + 64));
    goto LABEL_21;
  }
  uint64_t v42 = type metadata accessor for UUID();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v42 - 8) + 16))(v35, v36, v42);
  *(void *)&v35[v37[5]] = *(void *)&v36[v37[5]];
  *(void *)&v35[v37[6]] = *(void *)&v36[v37[6]];
  *(void *)&v35[v37[7]] = *(void *)&v36[v37[7]];
  long long v43 = *(void (**)(char *, void, uint64_t, int *))(v38 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v43(v35, 0, 1, v37);
LABEL_21:
  *(void *)(a1 + *(int *)(a3 + 56)) = *(void *)(a2 + *(int *)(a3 + 56));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_100AA5098(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_WORD *)a1 = *(_WORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  long long v6 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v6;
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  long long v7 = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 160) = v7;
  *(_OWORD *)(a1 + 232) = *(_OWORD *)(a2 + 232);
  *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 216);
  *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
  *(_OWORD *)(a1 + 184) = *(_OWORD *)(a2 + 184);
  long long v8 = *(_OWORD *)(a2 + 296);
  long long v9 = *(_OWORD *)(a2 + 264);
  *(_OWORD *)(a1 + 280) = *(_OWORD *)(a2 + 280);
  *(_OWORD *)(a1 + 296) = v8;
  *(_OWORD *)(a1 + 264) = v9;
  uint64_t v10 = *(int *)(a3 + 52);
  uint64_t v11 = (char *)(a1 + v10);
  long long v12 = (char *)(a2 + v10);
  *(_OWORD *)(a1 + 248) = *(_OWORD *)(a2 + 248);
  uint64_t v13 = (int *)type metadata accessor for CRLEditableBezierPathSourceData(0);
  uint64_t v14 = *((void *)v13 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v14 + 48))(v12, 1, v13))
  {
    uint64_t v15 = sub_1005057FC(&qword_10168B6F8);
    memcpy(v11, v12, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    uint64_t v16 = type metadata accessor for UUID();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 32))(v11, v12, v16);
    *(void *)&v11[v13[5]] = *(void *)&v12[v13[5]];
    *(void *)&v11[v13[6]] = *(void *)&v12[v13[6]];
    *(void *)&v11[v13[7]] = *(void *)&v12[v13[7]];
    (*(void (**)(char *, void, uint64_t, int *))(v14 + 56))(v11, 0, 1, v13);
  }
  *(void *)(a1 + *(int *)(a3 + 56)) = *(void *)(a2 + *(int *)(a3 + 56));
  return a1;
}

uint64_t sub_100AA52A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(unsigned char *)(a1 + 1) = *(unsigned char *)(a2 + 1);
  uint64_t v6 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v7;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(_OWORD *)(a1 + 52) = *(_OWORD *)(a2 + 52);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  *(void *)(a1 + 92) = *(void *)(a2 + 92);
  *(_DWORD *)(a1 + 100) = *(_DWORD *)(a2 + 100);
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  *(unsigned char *)(a1 + 105) = *(unsigned char *)(a2 + 105);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 120);
  if (*(void *)(a1 + 120))
  {
    if (v8)
    {
      *(void *)(a1 + 120) = v8;
      swift_bridgeObjectRelease();
      *(void *)(a1 + 128) = *(void *)(a2 + 128);
      *(void *)(a1 + 136) = *(void *)(a2 + 136);
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_100A040A4(a1 + 120);
  }
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
LABEL_6:
  *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
  *(unsigned char *)(a1 + 160) = *(unsigned char *)(a2 + 160);
  *(void *)(a1 + 164) = *(void *)(a2 + 164);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  swift_bridgeObjectRelease();
  long long v9 = (void *)(a1 + 184);
  uint64_t v10 = (void *)(a2 + 184);
  if (*(void *)(a1 + 200))
  {
    uint64_t v11 = *(void *)(a2 + 200);
    if (v11)
    {
      *long long v9 = *v10;
      *(unsigned char *)(a1 + 192) = *(unsigned char *)(a2 + 192);
      *(void *)(a1 + 200) = v11;
      swift_bridgeObjectRelease();
      *(void *)(a1 + 208) = *(void *)(a2 + 208);
      *(void *)(a1 + 216) = *(void *)(a2 + 216);
      swift_bridgeObjectRelease();
      *(void *)(a1 + 224) = *(void *)(a2 + 224);
      *(void *)(a1 + 232) = *(void *)(a2 + 232);
      *(unsigned char *)(a1 + 240) = *(unsigned char *)(a2 + 240);
      *(void *)(a1 + 244) = *(void *)(a2 + 244);
      *(void *)(a1 + 256) = *(void *)(a2 + 256);
      swift_bridgeObjectRelease();
      *(void *)(a1 + 264) = *(void *)(a2 + 264);
      *(unsigned char *)(a1 + 272) = *(unsigned char *)(a2 + 272);
      *(_DWORD *)(a1 + 276) = *(_DWORD *)(a2 + 276);
      *(_DWORD *)(a1 + 280) = *(_DWORD *)(a2 + 280);
      *(void *)(a1 + 288) = *(void *)(a2 + 288);
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 296) = *(unsigned char *)(a2 + 296);
      *(void *)(a1 + 304) = *(void *)(a2 + 304);
      swift_bridgeObjectRelease();
      goto LABEL_11;
    }
    sub_100A040F8(a1 + 184);
  }
  long long v12 = *(_OWORD *)(a2 + 264);
  *(_OWORD *)(a1 + 248) = *(_OWORD *)(a2 + 248);
  *(_OWORD *)(a1 + 264) = v12;
  long long v13 = *(_OWORD *)(a2 + 296);
  *(_OWORD *)(a1 + 280) = *(_OWORD *)(a2 + 280);
  *(_OWORD *)(a1 + 296) = v13;
  long long v14 = *(_OWORD *)(a2 + 200);
  *(_OWORD *)long long v9 = *(_OWORD *)v10;
  *(_OWORD *)(a1 + 200) = v14;
  long long v15 = *(_OWORD *)(a2 + 232);
  *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 216);
  *(_OWORD *)(a1 + 232) = v15;
LABEL_11:
  uint64_t v16 = *(int *)(a3 + 52);
  uint64_t v17 = (char *)(a1 + v16);
  uint64_t v18 = (char *)(a2 + v16);
  uint64_t v19 = (int *)type metadata accessor for CRLEditableBezierPathSourceData(0);
  uint64_t v20 = *((void *)v19 - 1);
  uint64_t v21 = *(uint64_t (**)(char *, uint64_t, int *))(v20 + 48);
  int v22 = v21(v17, 1, v19);
  int v23 = v21(v18, 1, v19);
  if (!v22)
  {
    if (!v23)
    {
      uint64_t v27 = type metadata accessor for UUID();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 40))(v17, v18, v27);
      *(void *)&v17[v19[5]] = *(void *)&v18[v19[5]];
      swift_bridgeObjectRelease();
      *(void *)&v17[v19[6]] = *(void *)&v18[v19[6]];
      *(void *)&v17[v19[7]] = *(void *)&v18[v19[7]];
      swift_bridgeObjectRelease();
      goto LABEL_17;
    }
    sub_100AB5148((uint64_t)v17, type metadata accessor for CRLEditableBezierPathSourceData);
    goto LABEL_16;
  }
  if (v23)
  {
LABEL_16:
    uint64_t v25 = sub_1005057FC(&qword_10168B6F8);
    memcpy(v17, v18, *(void *)(*(void *)(v25 - 8) + 64));
    goto LABEL_17;
  }
  uint64_t v24 = type metadata accessor for UUID();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 32))(v17, v18, v24);
  *(void *)&v17[v19[5]] = *(void *)&v18[v19[5]];
  *(void *)&v17[v19[6]] = *(void *)&v18[v19[6]];
  *(void *)&v17[v19[7]] = *(void *)&v18[v19[7]];
  (*(void (**)(char *, void, uint64_t, int *))(v20 + 56))(v17, 0, 1, v19);
LABEL_17:
  *(void *)(a1 + *(int *)(a3 + 56)) = *(void *)(a2 + *(int *)(a3 + 56));
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_100AA56E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100AA56F4);
}

uint64_t sub_100AA56F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1005057FC(&qword_10168B6F8);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1 + *(int *)(a3 + 52);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v10(v9, a2, v8);
  }
  else
  {
    unint64_t v12 = *(void *)(a1 + *(int *)(a3 + 56));
    if (v12 >= 0xFFFFFFFF) {
      LODWORD(v12) = -1;
    }
    return (v12 + 1);
  }
}

uint64_t sub_100AA57BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100AA57D0);
}

uint64_t sub_100AA57D0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_1005057FC(&qword_10168B6F8);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = result;
    uint64_t v11 = a1 + *(int *)(a4 + 52);
    unint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v12(v11, a2, a2, v10);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 56)) = (a2 - 1);
  }
  return result;
}

uint64_t type metadata accessor for CRLPathSourceData(uint64_t a1)
{
  return sub_100512D5C(a1, (uint64_t *)&unk_10168E678);
}

void sub_100AA58B4()
{
  sub_100AA5988();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_100AA5988()
{
  if (!qword_10168E688)
  {
    type metadata accessor for CRLEditableBezierPathSourceData(255);
    unint64_t v0 = type metadata accessor for Optional();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_10168E688);
    }
  }
}

uint64_t sub_100AA59E0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for CRLPathSourceData(0);
  *(void *)(a2 + 120) = 0;
  *(void *)(a2 + 128) = 0;
  *(void *)(a2 + 136) = 0;
  *(void *)(a2 + *(int *)(v4 + 56)) = &_swiftEmptyDictionarySingleton;
  *(unsigned char *)a2 = [a1 hasHorizontalFlip];
  *(unsigned char *)(a2 + 1) = [a1 hasVerticalFlip];
  id v5 = [a1 localizationKey];
  if (v5)
  {
    uint64_t v6 = v5;
    uint64_t v7 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v9 = v8;
  }
  else
  {
    uint64_t v7 = 0;
    uint64_t v9 = 0;
  }
  *(void *)(a2 + 8) = v7;
  *(void *)(a2 + 16) = v9;
  id v10 = [a1 userDefinedName];
  if (v10)
  {
    uint64_t v11 = v10;
    uint64_t v12 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v14 = v13;
  }
  else
  {
    uint64_t v12 = 0;
    uint64_t v14 = 0;
  }
  *(void *)(a2 + 24) = v12;
  *(void *)(a2 + 32) = v14;
  self;
  long long v15 = (void *)swift_dynamicCastObjCClass();
  if (v15)
  {
    sub_100AB12F8(v15, (uint64_t)&v83);
    uint64_t v16 = v83;
    uint64_t v17 = v84;
    uint64_t v18 = v86;
    uint64_t v19 = v87;
    uint64_t v20 = v88;
    uint64_t v21 = v85;

    *(void *)(a2 + 40) = v16;
    *(void *)(a2 + 48) = v17 | (v21 << 32);
    *(void *)(a2 + 56) = v18;
    *(void *)(a2 + 64) = v19;
    *(void *)(a2 + 72) = v20;
    *(_OWORD *)(a2 + 80) = 0u;
    *(_OWORD *)(a2 + 96) = 0u;
    *(_OWORD *)(a2 + 112) = 0u;
    *(_OWORD *)(a2 + 128) = 0u;
    *(_OWORD *)(a2 + 144) = 0u;
    *(_OWORD *)(a2 + 160) = 0u;
    *(void *)(a2 + 176) = 0;
    sub_10051A41C(&aBlock);
    sub_10051B3EC((uint64_t)&aBlock, a2 + 184, &qword_10168A060);
    uint64_t v22 = *(int *)(v4 + 52);
LABEL_17:
    uint64_t v34 = a2 + v22;
    uint64_t v35 = type metadata accessor for CRLEditableBezierPathSourceData(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 56))(v34, 1, 1, v35);
  }
  uint64_t v77 = v4;
  self;
  int v23 = (void *)swift_dynamicCastObjCClass();
  if (v23)
  {
    sub_100AB1470(v23, (uint64_t)&v83);
    uint64_t v24 = v83;
    uint64_t v25 = v84;
    uint64_t v26 = v86;
    uint64_t v27 = v87;
    int v28 = BYTE1(v87);
    uint64_t v29 = v88;
    uint64_t v30 = v85;

    *(void *)(a2 + 88) = v25 | (v30 << 32);
    *(void *)(a2 + 96) = v26;
    uint64_t v31 = 256;
    if (!v28) {
      uint64_t v31 = 0;
    }
    *(void *)(a2 + 104) = v31 | v27;
    *(void *)(a2 + 112) = v29;
    *(_OWORD *)(a2 + 40) = 0u;
    *(_OWORD *)(a2 + 56) = 0u;
    *(void *)(a2 + 72) = 0;
    *(void *)(a2 + 80) = v24;
    *(_OWORD *)(a2 + 120) = 0u;
    *(_OWORD *)(a2 + 136) = 0u;
    *(_OWORD *)(a2 + 152) = 0u;
    *(_OWORD *)(a2 + 168) = 0u;
    goto LABEL_13;
  }
  self;
  long long v32 = (void *)swift_dynamicCastObjCClass();
  if (v32)
  {
    sub_100AB1608(v32, (uint64_t)&aBlock);

    SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)((CKRecordID)&aBlock, v33);
    sub_10051B3EC((uint64_t)&aBlock, a2 + 184, &qword_10168A060);
    *(_OWORD *)(a2 + 40) = 0u;
    *(_OWORD *)(a2 + 56) = 0u;
    *(_OWORD *)(a2 + 72) = 0u;
    *(_OWORD *)(a2 + 88) = 0u;
    *(_OWORD *)(a2 + 104) = 0u;
    *(_OWORD *)(a2 + 120) = 0u;
    *(_OWORD *)(a2 + 136) = 0u;
    *(_OWORD *)(a2 + 152) = 0u;
    *(_OWORD *)(a2 + 168) = 0u;
    goto LABEL_16;
  }
  self;
  uint64_t v37 = swift_dynamicCastObjCClass();
  if (v37)
  {
    uint64_t v38 = (void *)v37;
    id v39 = a1;
    id v40 = [v38 bezierPathWithoutFlips];
    uint64_t v41 = swift_allocObject();
    *(void *)(v41 + 16) = _swiftEmptyArrayStorage;
    uint64_t v42 = (uint64_t *)(v41 + 16);
    uint64_t v81 = sub_10089DD4C;
    uint64_t v82 = v41;
    *(void *)&long long aBlock = _NSConcreteStackBlock;
    *((void *)&aBlock + 1) = *(void *)"";
    id v79 = sub_100AAF588;
    unint64_t v80 = &unk_101520BF0;
    long long v43 = _Block_copy(&aBlock);
    swift_retain();
    swift_release();
    [v40 iteratePathElementsWithBlock:v43];

    _Block_release(v43);
    swift_beginAccess();
    uint64_t v44 = *v42;
    swift_bridgeObjectRetain();
    swift_release();
    [v38 naturalSize];
    double v46 = v45;
    double v48 = v47;

    *(float *)&unsigned int v49 = v46;
    *(float *)&unsigned int v50 = v48;
    unint64_t v51 = v49 | ((unint64_t)v50 << 32);
    sub_10051A034(*(void *)(a2 + 120));
    *(void *)(a2 + 120) = v44;
    *(void *)(a2 + 128) = v51;
    *(void *)(a2 + 136) = &_swiftEmptyDictionarySingleton;
    *(_OWORD *)(a2 + 40) = 0u;
    *(_OWORD *)(a2 + 56) = 0u;
    *(_OWORD *)(a2 + 72) = 0u;
    *(_OWORD *)(a2 + 88) = 0u;
    *(_OWORD *)(a2 + 104) = 0u;
    *(_OWORD *)(a2 + 144) = 0u;
    *(_OWORD *)(a2 + 160) = 0u;
    *(void *)(a2 + 176) = 0;
LABEL_13:
    sub_10051A41C(&aBlock);
    sub_10051B3EC((uint64_t)&aBlock, a2 + 184, &qword_10168A060);
LABEL_16:
    uint64_t v22 = *(int *)(v77 + 52);
    goto LABEL_17;
  }
  self;
  uint64_t v52 = (void *)swift_dynamicCastObjCClass();
  if (v52)
  {
    uint64_t v53 = v52;
    [v52 rawTailPosition];
    float64_t v75 = v54;
    float64_t v76 = v55;
    [v53 tailSize];
    float64_t v74 = v56;
    [v53 cornerRadius];
    float64_t v73 = v57;
    unsigned int v58 = [v53 isTailAtCenter];
    [v53 naturalSize];
    double v60 = v59;
    double v62 = v61;

    *(float *)&unsigned int v63 = v60;
    *(float *)&unsigned int v64 = v62;
    unint64_t v65 = v58 | ((unint64_t)v63 << 32);
    uint64_t v66 = v64;
    v67.f64[0] = v75;
    v67.f64[1] = v74;
    *(float32x2_t *)&v67.f64[0] = vcvt_f32_f64(v67);
    v68.f64[0] = v76;
    v68.f64[1] = v73;
    v69.i64[0] = LODWORD(v67.f64[0]);
    v69.i64[1] = HIDWORD(v67.f64[0]);
    *(int8x16_t *)(a2 + 144) = vorrq_s8((int8x16_t)vshll_n_s32((int32x2_t)vcvt_f32_f64(v68), 0x20uLL), v69);
    *(void *)(a2 + 160) = v65;
    *(void *)(a2 + 168) = v66;
    *(void *)(a2 + 176) = &_swiftEmptyDictionarySingleton;
    *(_OWORD *)(a2 + 40) = 0u;
    *(_OWORD *)(a2 + 56) = 0u;
    *(_OWORD *)(a2 + 72) = 0u;
    *(_OWORD *)(a2 + 88) = 0u;
    *(_OWORD *)(a2 + 104) = 0u;
    *(_OWORD *)(a2 + 120) = 0u;
    *(void *)(a2 + 136) = 0;
    goto LABEL_13;
  }
  self;
  uint64_t v70 = (void *)swift_dynamicCastObjCClass();
  if (!v70)
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"init(archiving:)", 16, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCanvas/CRLPathSourceData.swift", 87, 2, 100, (uint64_t)"Unknown path source subclass.", 29, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"init(archiving:)", 16, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCanvas/CRLPathSourceData.swift", 87, 2, 100);

    *(_OWORD *)(a2 + 168) = 0u;
    *(_OWORD *)(a2 + 152) = 0u;
    *(_OWORD *)(a2 + 136) = 0u;
    *(_OWORD *)(a2 + 120) = 0u;
    *(_OWORD *)(a2 + 104) = 0u;
    *(_OWORD *)(a2 + 88) = 0u;
    *(_OWORD *)(a2 + 72) = 0u;
    *(_OWORD *)(a2 + 56) = 0u;
    *(_OWORD *)(a2 + 40) = 0u;
    sub_10051A41C(&aBlock);
    sub_10051B3EC((uint64_t)&aBlock, a2 + 184, &qword_10168A060);
    uint64_t v22 = *(int *)(v4 + 52);
    goto LABEL_17;
  }
  uint64_t v71 = a2 + *(int *)(v4 + 52);
  sub_100AA64C0(v70, a2 + *(int *)(v77 + 52));
  uint64_t v72 = type metadata accessor for CRLEditableBezierPathSourceData(0);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v72 - 8) + 56))(v71, 0, 1, v72);
  *(void *)(a2 + 136) = 0;
  *(_OWORD *)(a2 + 120) = 0u;
  *(_OWORD *)(a2 + 104) = 0u;
  *(_OWORD *)(a2 + 88) = 0u;
  *(_OWORD *)(a2 + 72) = 0u;
  *(_OWORD *)(a2 + 56) = 0u;
  *(_OWORD *)(a2 + 40) = 0u;
  sub_10051A41C(&aBlock);
  uint64_t result = sub_10051B3EC((uint64_t)&aBlock, a2 + 184, &qword_10168A060);
  *(_OWORD *)(a2 + 144) = 0u;
  *(_OWORD *)(a2 + 160) = 0u;
  *(void *)(a2 + 176) = 0;
  return result;
}

unint64_t sub_100AA6104(char a1)
{
  unint64_t result = 0xD000000000000011;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x6974726556736168;
      break;
    case 2:
      unint64_t result = 0x617A696C61636F6CLL;
      break;
    case 3:
      unint64_t result = 0x6966654472657375;
      break;
    case 4:
      unint64_t result = 0xD000000000000013;
      break;
    case 5:
    case 6:
      unint64_t result = 0xD000000000000014;
      break;
    case 7:
      unint64_t result = 0xD000000000000015;
      break;
    case 8:
      unint64_t result = 0xD00000000000001CLL;
      break;
    case 9:
      unint64_t result = 0xD00000000000001CLL;
      break;
    case 10:
      unint64_t result = 0xD000000000000010;
      break;
    default:
      return result;
  }
  return result;
}

BOOL sub_100AA6260(char *a1, char *a2)
{
  return qword_1011A42E8[*a1] == qword_1011A42E8[*a2];
}

Swift::Int sub_100AA6284()
{
  uint64_t v1 = *v0;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(qword_1011A42E8[v1]);
  return Hasher._finalize()();
}

void sub_100AA62D4()
{
  Hasher._combine(_:)(qword_1011A42E8[*v0]);
}

Swift::Int sub_100AA630C()
{
  uint64_t v1 = *v0;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(qword_1011A42E8[v1]);
  return Hasher._finalize()();
}

uint64_t sub_100AA6358@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_100AB19F4(*a1);
  *a2 = result;
  return result;
}

void sub_100AA6384(void *a1@<X8>)
{
  *a1 = qword_1011A42E8[*v1];
}

unint64_t sub_100AA639C()
{
  return sub_100AA6104(*v0);
}

uint64_t sub_100AA63A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100AB1A18(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_100AA63CC()
{
  return qword_1011A42E8[*v0];
}

uint64_t sub_100AA63E4@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_100AB19F4(a1);
  *a2 = result;
  return result;
}

void sub_100AA640C(void *a1@<X8>)
{
  *a1 = &off_101502EE8;
}

uint64_t sub_100AA641C(uint64_t a1, uint64_t a2)
{
  return sub_100AAE998(a1, a2, (uint64_t (*)(void))sub_100AA82FC, (uint64_t (*)(void))sub_100AA8354);
}

uint64_t sub_100AA6448(uint64_t a1)
{
  unint64_t v2 = sub_100AA8354();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100AA6484(uint64_t a1)
{
  unint64_t v2 = sub_100AA8354();

  return CodingKey.debugDescription.getter(a1, v2);
}

float sub_100AA64C0@<S0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  double v60 = (int *)type metadata accessor for CRLEditableBezierPathSourceData(0);
  id v61 = a1;
  uint64_t v62 = a2;
  *(void *)(a2 + v60[7]) = &_swiftEmptyDictionarySingleton;
  id v4 = [a1 subpaths];
  sub_10050BF48(0, &qword_10168E9E0);
  unint64_t v5 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v5 >> 62) {
    goto LABEL_44;
  }
  uint64_t v6 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
LABEL_3:
  if (v6)
  {
    unint64_t v7 = 0;
    unint64_t v8 = v5 & 0xC000000000000001;
    unint64_t v63 = v5 + 32;
    uint64_t v64 = v5 & 0xFFFFFFFFFFFFFF8;
    uint64_t v9 = &selRef_lineFragmentClosestToPoint_knobTag_;
    uint64_t v70 = _swiftEmptyArrayStorage;
    uint64_t v65 = v6;
    unint64_t v66 = v5;
    unint64_t v67 = v5 & 0xC000000000000001;
    while (1)
    {
      if (v8)
      {
        id v11 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        BOOL v12 = __OFADD__(v7++, 1);
        if (v12) {
          goto LABEL_41;
        }
      }
      else
      {
        if (v7 >= *(void *)(v64 + 16)) {
          goto LABEL_42;
        }
        id v11 = *(id *)(v63 + 8 * v7);
        BOOL v12 = __OFADD__(v7++, 1);
        if (v12)
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
LABEL_43:
          __break(1u);
LABEL_44:
          swift_bridgeObjectRetain();
          uint64_t v6 = _CocoaArrayWrapper.endIndex.getter();
          swift_bridgeObjectRelease();
          goto LABEL_3;
        }
      }
      uint64_t v71 = v11;
      id v13 = [v11 v9[473] v57 v58 v59];
      sub_10050BF48(0, &qword_10168E9E8);
      unint64_t v14 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

      if (v14 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v15 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v15 = *(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
      swift_bridgeObjectRelease();
      if (v15 > 1) {
        break;
      }
LABEL_6:

      if (v7 == v6) {
        goto LABEL_40;
      }
    }
    id v69 = v71;
    id v16 = [v69 v9[473]];
    unint64_t v17 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    if (v17 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v18 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      unint64_t v68 = v7;
      if (v18) {
        goto LABEL_18;
      }
    }
    else
    {
      uint64_t v18 = *(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10);
      unint64_t v68 = v7;
      if (v18)
      {
LABEL_18:
        if (v18 < 1) {
          goto LABEL_43;
        }
        uint64_t v19 = 0;
        uint64_t v20 = _swiftEmptyArrayStorage;
        do
        {
          if ((v17 & 0xC000000000000001) != 0) {
            id v21 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else {
            id v21 = *(id *)(v17 + 8 * v19 + 32);
          }
          uint64_t v22 = v21;
          [v21 inControlPoint:v57, v58, v59];
          double v24 = v23;
          double v26 = v25;
          [v22 nodePoint];
          double v28 = v27;
          double v30 = v29;
          [v22 outControlPoint];
          double v32 = v31;
          double v34 = v33;
          unint64_t v35 = (unint64_t)[v22 type];
          if (v35 >= 5)
          {
            sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"init(archiving:)", 16, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCanvas/CRLPathSourceData.swift", 87, 2, 552, (uint64_t)"Unknown bezier node type. Falling back to sharp.", 48, 2u, (uint64_t)_swiftEmptyArrayStorage);
            LOBYTE(v59) = 2;
            double v57 = "Unknown bezier node type. Falling back to sharp.";
            uint64_t v58 = 48;
            sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"init(archiving:)", 16, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCanvas/CRLPathSourceData.swift", 87, 2, 552);
            uint64_t v36 = 0;
          }
          else
          {
            uint64_t v36 = qword_1011A4340[v35];
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v20 = sub_100F62CD8(0, *((void *)v20 + 2) + 1, 1, v20);
          }
          unint64_t v38 = *((void *)v20 + 2);
          unint64_t v37 = *((void *)v20 + 3);
          if (v38 >= v37 >> 1) {
            uint64_t v20 = sub_100F62CD8((double *)(v37 > 1), v38 + 1, 1, v20);
          }
          ++v19;
          float v39 = v24;
          float v40 = v26;
          float v41 = v28;
          float v42 = v30;
          float v43 = v32;
          *((void *)v20 + 2) = v38 + 1;
          uint64_t v44 = &v20[6 * v38];
          *((float *)v44 + 8) = v39;
          *((float *)v44 + 9) = v40;
          float v45 = v34;
          *((float *)v44 + 10) = v41;
          *((float *)v44 + 11) = v42;
          *((float *)v44 + 12) = v43;
          *((float *)v44 + 13) = v45;
          *((void *)v44 + 7) = v36;
          *((unsigned char *)v44 + 64) = 0;
          *((void *)v44 + 9) = &_swiftEmptyDictionarySingleton;
        }
        while (v18 != v19);
        goto LABEL_35;
      }
    }
    uint64_t v20 = _swiftEmptyArrayStorage;
LABEL_35:
    swift_bridgeObjectRelease();
    unsigned __int8 v46 = [v69 isClosed];

    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v70 = sub_100F62E00(0, *((void *)v70 + 2) + 1, 1, v70);
    }
    uint64_t v6 = v65;
    unint64_t v5 = v66;
    unint64_t v7 = v68;
    unint64_t v48 = *((void *)v70 + 2);
    unint64_t v47 = *((void *)v70 + 3);
    if (v48 >= v47 >> 1) {
      uint64_t v70 = sub_100F62E00((double *)(v47 > 1), v48 + 1, 1, v70);
    }
    *((void *)v70 + 2) = v48 + 1;
    id v10 = &v70[3 * v48];
    *((void *)v10 + 4) = v20;
    *((unsigned char *)v10 + 40) = v46;
    *((void *)v10 + 6) = &_swiftEmptyDictionarySingleton;
    unint64_t v8 = v67;
    uint64_t v9 = &selRef_lineFragmentClosestToPoint_knobTag_;
    goto LABEL_6;
  }
  uint64_t v70 = _swiftEmptyArrayStorage;
LABEL_40:
  swift_bridgeObjectRelease();
  UUID.init()();
  Class isa = UUID._bridgeToObjectiveC()().super.isa;
  [v61 setPersistedUUID:isa];

  *(void *)(v62 + v60[5]) = v70;
  [v61 naturalSize];
  double v51 = v50;
  double v53 = v52;

  float result = v51;
  float v55 = v53;
  double v56 = (float *)(v62 + v60[6]);
  *double v56 = result;
  v56[1] = v55;
  return result;
}

BOOL sub_100AA6AA8(void *a1)
{
  uint64_t v3 = sub_1005057FC((uint64_t *)&unk_101674520);
  __chkstk_darwin(v3 - 8, v4);
  uint64_t v6 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for UUID();
  uint64_t v37 = *(void *)(v7 - 8);
  __chkstk_darwin(v7, v8);
  id v10 = (char *)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11, v12);
  uint64_t v36 = (char *)&v36 - v13;
  uint64_t v14 = sub_1005057FC(&qword_10168B6F8);
  __chkstk_darwin(v14 - 8, v15);
  unint64_t v17 = (char *)&v36 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for CRLEditableBezierPathSourceData(0);
  uint64_t v19 = *(void *)(v18 - 8);
  __chkstk_darwin(v18, v20);
  uint64_t v22 = (char *)&v36 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  self;
  uint64_t v23 = swift_dynamicCastObjCClass();
  if (!v23) {
    return 0;
  }
  double v24 = (void *)v23;
  uint64_t v25 = type metadata accessor for CRLPathSourceData(0);
  sub_100AB09D4(v1 + *(int *)(v25 + 52), (uint64_t)v17);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18) == 1)
  {
    double v26 = &qword_10168B6F8;
    uint64_t v27 = (uint64_t)v17;
LABEL_10:
    sub_100522F00(v27, v26);
    return 0;
  }
  sub_100AB0A3C((uint64_t)v17, (uint64_t)v22);
  id v28 = a1;
  id v29 = [v24 persistedUUID];
  if (!v29)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v37 + 56))(v6, 1, 1, v7);
    goto LABEL_9;
  }
  double v30 = v29;
  static UUID._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v31 = v37;
  double v32 = *(void (**)(char *, char *, uint64_t))(v37 + 32);
  v32(v6, v10, v7);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v31 + 56))(v6, 0, 1, v7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48))(v6, 1, v7) == 1)
  {
LABEL_9:

    sub_100AB5148((uint64_t)v22, type metadata accessor for CRLEditableBezierPathSourceData);
    double v26 = (uint64_t *)&unk_101674520;
    uint64_t v27 = (uint64_t)v6;
    goto LABEL_10;
  }
  double v33 = v36;
  v32(v36, v6, v7);
  char v34 = static UUID.== infix(_:_:)();

  (*(void (**)(char *, uint64_t))(v31 + 8))(v33, v7);
  sub_100AB5148((uint64_t)v22, type metadata accessor for CRLEditableBezierPathSourceData);
  return (v34 & 1) != 0;
}

uint64_t sub_100AA6E78(void *a1)
{
  sub_10051B3EC(v1 + 184, (uint64_t)v29, &qword_10168A060);
  sub_10051B3EC((uint64_t)v29, (uint64_t)v30, &qword_10168A060);
  if (sub_1008E0338((uint64_t)v30) == 1) {
    return 0;
  }
  self;
  uint64_t result = swift_dynamicCastObjCClass();
  if (result)
  {
    uint64_t v4 = (void *)result;
    id v5 = a1;
    id v6 = [v4 headMagnet];
    if (v6)
    {
      uint64_t v7 = v6;
      if (v33)
      {
        float v8 = v31;
        float v9 = v32;
        id v10 = [v6 magnetType];
        sub_1005057FC(&qword_10168EA00);
        CRExtensible.rawValue.getter();
        if ((v28 & 0x8000000000000000) != 0 || v10 != (id)v28)
        {

          BOOL v15 = 0;
        }
        else
        {
          [v7 magnetNormalizedPosition];
          double v12 = v11;
          double v14 = v13;

          BOOL v15 = sub_100064084(v12, v14, v8, v9);
        }
LABEL_14:
        id v17 = [v4 tailMagnet];
        if (v17)
        {
          uint64_t v18 = v17;
          if (v36)
          {
            float v19 = v34;
            float v20 = v35;
            swift_bridgeObjectRetain();
            id v21 = [v18 magnetType];
            sub_1005057FC(&qword_10168EA00);
            CRExtensible.rawValue.getter();
            if ((v28 & 0x8000000000000000) != 0 || v21 != (id)v28)
            {
              swift_bridgeObjectRelease();

              BOOL v26 = 0;
            }
            else
            {
              [v18 magnetNormalizedPosition];
              double v23 = v22;
              double v25 = v24;
              swift_bridgeObjectRelease();

              BOOL v26 = sub_100064084(v23, v25, v19, v20);
            }
            return v15 & v26;
          }
        }
        id v27 = [v4 tailMagnet];

        if (v27) {
          BOOL v26 = 0;
        }
        else {
          BOOL v26 = v36 == 0;
        }
        return v15 & v26;
      }
    }
    id v16 = [v4 headMagnet];

    if (v16) {
      BOOL v15 = 0;
    }
    else {
      BOOL v15 = v33 == 0;
    }
    goto LABEL_14;
  }
  return result;
}

uint64_t sub_100AA7148(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_1005057FC(&qword_10168E9B0);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5, v7);
  float v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10050F848(a1, a1[3]);
  sub_100AA8354();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  LOBYTE(v22) = 0;
  KeyedEncodingContainer.encode(_:forKey:)();
  if (!v2)
  {
    LOBYTE(v22) = 1;
    KeyedEncodingContainer.encode(_:forKey:)();
    LOBYTE(v22) = 2;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    LOBYTE(v22) = 3;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    uint64_t v10 = *(void *)(v3 + 72);
    long long v11 = *(_OWORD *)(v3 + 56);
    long long v22 = *(_OWORD *)(v3 + 40);
    long long v23 = v11;
    uint64_t v24 = v10;
    LOBYTE(v21[0]) = 4;
    sub_100AB51A8();
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
    uint64_t v12 = *(void *)(v3 + 112);
    long long v13 = *(_OWORD *)(v3 + 96);
    long long v22 = *(_OWORD *)(v3 + 80);
    long long v23 = v13;
    uint64_t v24 = v12;
    LOBYTE(v21[0]) = 5;
    sub_100AB51FC();
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
    uint64_t v14 = *(void *)(v3 + 136);
    long long v22 = *(_OWORD *)(v3 + 120);
    *(void *)&long long v23 = v14;
    LOBYTE(v21[0]) = 6;
    sub_100AAD48C();
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
    uint64_t v15 = *(void *)(v3 + 176);
    long long v16 = *(_OWORD *)(v3 + 160);
    long long v26 = *(_OWORD *)(v3 + 144);
    long long v27 = v16;
    uint64_t v28 = v15;
    char v25 = 7;
    sub_100AB5250();
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
    sub_10051B3EC(v3 + 184, (uint64_t)&v22, &qword_10168A060);
    sub_10051B3EC((uint64_t)&v22, (uint64_t)v21, &qword_10168A060);
    char v20 = 8;
    sub_100AAF2A4();
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
    uint64_t v17 = type metadata accessor for CRLPathSourceData(0);
    LOBYTE(v21[0]) = 9;
    type metadata accessor for CRLEditableBezierPathSourceData(0);
    sub_100AA8128(&qword_10168E760, (void (*)(uint64_t))type metadata accessor for CRLEditableBezierPathSourceData);
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
    v21[0] = *(void *)(v3 + *(int *)(v17 + 56));
    char v20 = 10;
    sub_1005057FC((uint64_t *)&unk_101687A40);
    sub_1005573B0();
    KeyedEncodingContainer.encode<A>(_:forKey:)();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v5);
}

uint64_t sub_100AA7560@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v32 = a2;
  uint64_t v4 = sub_1005057FC(&qword_10168B6F8);
  __chkstk_darwin(v4 - 8, v5);
  uint64_t v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = sub_1005057FC(&qword_10168E990);
  uint64_t v8 = *(void *)(v34 - 8);
  __chkstk_darwin(v34, v9);
  long long v11 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for CRLPathSourceData(0);
  __chkstk_darwin(v12, v13);
  uint64_t v15 = (char *)&v30 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  *((void *)v15 + 15) = 0;
  *((void *)v15 + 16) = 0;
  *((void *)v15 + 17) = 0;
  uint64_t v35 = v16;
  uint64_t v43 = *(int *)(v16 + 56);
  *(void *)&v15[v43] = _swiftEmptyDictionarySingleton;
  uint64_t v17 = a1[3];
  uint64_t v36 = a1;
  sub_10050F848(a1, v17);
  sub_100AA8354();
  uint64_t v33 = v11;
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v2)
  {
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v36);
    sub_10051A034(*((void *)v15 + 15));
    return swift_bridgeObjectRelease();
  }
  else
  {
    float v31 = v7;
    LOBYTE(v40) = 0;
    *uint64_t v15 = KeyedDecodingContainer.decode(_:forKey:)() & 1;
    LOBYTE(v40) = 1;
    v15[1] = KeyedDecodingContainer.decode(_:forKey:)() & 1;
    LOBYTE(v40) = 2;
    *((void *)v15 + 1) = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
    *((void *)v15 + 2) = v18;
    LOBYTE(v40) = 3;
    *((void *)v15 + 3) = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
    *((void *)v15 + 4) = v19;
    v39[0] = 4;
    sub_100AB4FE4();
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
    uint64_t v20 = v42;
    long long v21 = v41;
    *(_OWORD *)(v15 + 40) = v40;
    *(_OWORD *)(v15 + 56) = v21;
    *((void *)v15 + 9) = v20;
    v39[0] = 5;
    sub_100AB5038();
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
    uint64_t v22 = v42;
    long long v23 = v41;
    *((_OWORD *)v15 + 5) = v40;
    *((_OWORD *)v15 + 6) = v23;
    *((void *)v15 + 14) = v22;
    v39[0] = 6;
    sub_100AAD434();
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
    uint64_t v24 = v41;
    *(_OWORD *)(v15 + 120) = v40;
    *((void *)v15 + 17) = v24;
    v39[0] = 7;
    sub_100AB508C();
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
    uint64_t v25 = v42;
    long long v26 = v41;
    *((_OWORD *)v15 + 9) = v40;
    *((_OWORD *)v15 + 10) = v26;
    *((void *)v15 + 22) = v25;
    v39[135] = 8;
    sub_100AAF24C();
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
    sub_10051B3EC((uint64_t)&v40, (uint64_t)v39, &qword_10168A060);
    sub_10051B3EC((uint64_t)v39, (uint64_t)(v15 + 184), &qword_10168A060);
    type metadata accessor for CRLEditableBezierPathSourceData(0);
    LOBYTE(v38) = 9;
    sub_100AA8128(&qword_10168E758, (void (*)(uint64_t))type metadata accessor for CRLEditableBezierPathSourceData);
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
    sub_10051B3EC((uint64_t)v31, (uint64_t)&v15[*(int *)(v35 + 52)], &qword_10168B6F8);
    sub_1005057FC((uint64_t *)&unk_101687A40);
    char v37 = 10;
    sub_100557304();
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v33, v34);
    uint64_t v27 = v38;
    uint64_t v28 = v43;
    swift_bridgeObjectRelease();
    *(void *)&v15[v28] = v27;
    sub_100AB50E0((uint64_t)v15, v32, type metadata accessor for CRLPathSourceData);
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v36);
    return sub_100AB5148((uint64_t)v15, type metadata accessor for CRLPathSourceData);
  }
}

uint64_t sub_100AA7CA4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100AA7560(a1, a2);
}

uint64_t sub_100AA7CBC(void *a1)
{
  return sub_100AA7148(a1);
}

uint64_t sub_100AA7CD4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100AA8128(&qword_10168E9D0, (void (*)(uint64_t))type metadata accessor for CRLPathSourceData);

  return CRExtendableValueStruct.copy(renamingReferences:)(a1, a2, v4);
}

uint64_t sub_100AA7D58(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100AA8128(&qword_10168E9D0, (void (*)(uint64_t))type metadata accessor for CRLPathSourceData);

  return CRExtendableValueStruct.copy(renamingReferences:)(a1, a2, v4);
}

uint64_t sub_100AA7DDC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_100AA8128(&qword_10168E6F0, (void (*)(uint64_t))type metadata accessor for CRLPathSourceData);
  uint64_t v7 = sub_100AA8128(&qword_10168E9D8, (void (*)(uint64_t))type metadata accessor for CRLPathSourceData);

  return CRValue<>.observableDifference(from:with:)(a1, a2, a3, v6, v7);
}

uint64_t sub_100AA7EA8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100AA8128(&qword_10168E9D0, (void (*)(uint64_t))type metadata accessor for CRLPathSourceData);

  return CRExtendableValueStruct.visitReferences(_:)(a1, a2, v4);
}

uint64_t sub_100AA7F24()
{
  return CRValueStruct.init(from:)();
}

uint64_t sub_100AA7FA4()
{
  return CRValueStruct.encode(to:)();
}

uint64_t sub_100AA801C(uint64_t a1)
{
  uint64_t v2 = sub_100AA8128(&qword_10168E738, (void (*)(uint64_t))type metadata accessor for CRLPathSourceData);

  return CRValueStruct.minEncodingVersion.getter(a1, v2);
}

uint64_t sub_100AA8098()
{
  return sub_100AA8128(&qword_10168E6E0, (void (*)(uint64_t))type metadata accessor for CRLPathSourceData);
}

uint64_t sub_100AA80E0()
{
  return sub_100AA8128(&qword_10168E6E8, (void (*)(uint64_t))type metadata accessor for CRLPathSourceData);
}

uint64_t sub_100AA8128(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100AA8170()
{
  return sub_100AA8128(&qword_10168E6F0, (void (*)(uint64_t))type metadata accessor for CRLPathSourceData);
}

uint64_t sub_100AA81B8()
{
  return sub_100AA8128(&qword_10168B810, (void (*)(uint64_t))type metadata accessor for CRLPathSourceData);
}

uint64_t sub_100AA8200()
{
  return sub_100AA8128(&qword_10168B820, (void (*)(uint64_t))type metadata accessor for CRLPathSourceData);
}

unint64_t sub_100AA824C()
{
  unint64_t result = qword_10168E6F8;
  if (!qword_10168E6F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168E6F8);
  }
  return result;
}

unint64_t sub_100AA82A4()
{
  unint64_t result = qword_10168E700;
  if (!qword_10168E700)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168E700);
  }
  return result;
}

unint64_t sub_100AA82FC()
{
  unint64_t result = qword_10168E708;
  if (!qword_10168E708)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168E708);
  }
  return result;
}

unint64_t sub_100AA8354()
{
  unint64_t result = qword_10168E710;
  if (!qword_10168E710)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168E710);
  }
  return result;
}

unint64_t sub_100AA83AC()
{
  unint64_t result = qword_10168E718;
  if (!qword_10168E718)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168E718);
  }
  return result;
}

unint64_t sub_100AA8404()
{
  unint64_t result = qword_10168E720;
  if (!qword_10168E720)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168E720);
  }
  return result;
}

uint64_t sub_100AA8458()
{
  return sub_1006BFA64(&qword_10168E728, &qword_10168E730);
}

uint64_t sub_100AA8480()
{
  return sub_100AA8128(&qword_10168E738, (void (*)(uint64_t))type metadata accessor for CRLPathSourceData);
}

id sub_100AA84C8(float *a1)
{
  sub_10051B3EC((uint64_t)a1, (uint64_t)v5, &qword_10168E898);
  sub_10051B3EC((uint64_t)v5, (uint64_t)v6, &qword_10168E898);
  if (v6[8])
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"init(unarchiving:)", 18, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCanvas/CRLPathSourceData.swift", 87, 2, 317, (uint64_t)"Unknown point path source type. Falling back to left single arrow.", 66, 2u, (uint64_t)&_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)&_swiftEmptyArrayStorage, (uint64_t)"init(unarchiving:)", 18, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCanvas/CRLPathSourceData.swift", 87, 2, 317);
    uint64_t v2 = 0;
  }
  else
  {
    uint64_t v2 = qword_1011A4368[v6[0]];
  }
  ObjCClassFromMetadatCATransform3D a = (objc_class *)swift_getObjCClassFromMetadata();
  sub_100AB52F4((uint64_t)a1);
  return [objc_allocWithZone(ObjCClassFromMetadata) initWithType:v2 point:a1[3] naturalSize:a1[4] a1[5] a1[6]];
}

id sub_100AA8618(uint64_t a1)
{
  sub_10051B3EC(a1, (uint64_t)v7, &qword_10168E8A8);
  sub_10051B3EC((uint64_t)v7, (uint64_t)v8, &qword_10168E8A8);
  if (v8[8])
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"init(unarchiving:)", 18, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCanvas/CRLPathSourceData.swift", 87, 2, 396, (uint64_t)"Unknown scalar path source type. Falling back to rounded rectangle.", 67, 2u, (uint64_t)&_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)&_swiftEmptyArrayStorage, (uint64_t)"init(unarchiving:)", 18, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCanvas/CRLPathSourceData.swift", 87, 2, 396);
    uint64_t v2 = 0;
  }
  else
  {
    uint64_t v2 = v8[0];
  }
  id v3 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) initWithType:v2 scalar:*(unsigned __int8 *)(a1 + 24) naturalSize:*(float *)(a1 + 12) continuousCurve:*(float *)(a1 + 16) continuousCurve:*(float *)(a1 + 20)];
  uint64_t v4 = *(unsigned __int8 *)(a1 + 25);
  id v5 = v3;
  [v5 setShouldShowKnob:v4];
  sub_100AB52F4(a1);

  return v5;
}

uint64_t sub_100AA8778(uint64_t a1)
{
  id v2 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  sub_10050BF48(0, (unint64_t *)&qword_101680C50);
  uint64_t v3 = swift_bridgeObjectRetain();
  id v4 = sub_100ABF740(v3);
  id v5 = [v2 initWithBezierPath:v4];

  if (!v5)
  {
    sub_100AB4C84(a1);
    return (uint64_t)v5;
  }

  sub_10051B3EC(a1, (uint64_t)v20, &qword_10168E8B8);
  sub_10051B3EC((uint64_t)v20, (uint64_t)v21, &qword_10168E8B8);
  if (v21[8])
  {
    id v6 = v5;
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"init(unarchiving:)", 18, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCanvas/CRLPathSourceData.swift", 87, 2, 794, (uint64_t)"Unknown connection line path source type. Falling back to quadratic.", 68, 2u, (uint64_t)&_swiftEmptyArrayStorage);
    LOBYTE(v15) = 2;
    uint64_t v13 = "Unknown connection line path source type. Falling back to quadratic.";
    uint64_t v14 = 68;
    sub_1005598CC((uint64_t)&_swiftEmptyArrayStorage, (uint64_t)"init(unarchiving:)", 18, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCanvas/CRLPathSourceData.swift", 87, 2, 794);
    uint64_t v7 = 0;
  }
  else
  {
    uint64_t v7 = v21[0];
    id v8 = v5;
  }
  [v5 setType:v7, v13, v14, v15];
  [v5 setOutsetTo:*(float *)(a1 + 44)];
  [v5 setOutsetFrom:*(float *)(a1 + 40)];
  sub_10051B3EC(a1 + 48, (uint64_t)v19, &qword_10168E8F8);
  sub_10051B3EC((uint64_t)v19, (uint64_t)&v22, &qword_10168E8F8);
  if (*((void *)&v23 + 1))
  {
    long long v24 = v22;
    long long v25 = v23;
    sub_10051B3EC((uint64_t)&v24, (uint64_t)v31, &qword_10168EA00);
    sub_10051B3EC((uint64_t)v31, (uint64_t)&v28, &qword_10168EA00);
    sub_1005057FC(&qword_10168EA00);
    CRExtensible.rawValue.getter();
    if ((v26 & 0x8000000000000000) != 0) {
      goto LABEL_18;
    }
    id v9 = [objc_allocWithZone((Class)CRLConnectionLineMagnet) initWithType:(void)v26 normalizedPosition:*(float *)&v24 + 3, *(float *)&v25];
    [v5 setHeadMagnet:v9];
  }
  else
  {
    [v5 setHeadMagnet:0];
  }
  sub_10051B3EC(a1 + 80, (uint64_t)v18, &qword_10168E8F8);
  sub_10051B3EC((uint64_t)v18, (uint64_t)&v26, &qword_10168E8F8);
  if (!*((void *)&v27 + 1))
  {
    [v5 setTailMagnet:0];
    sub_100AB4C84(a1);
    sub_10051B3EC(a1 + 112, (uint64_t)v30, &qword_101683780);
    sub_10051B3EC((uint64_t)v30, (uint64_t)&v28, &qword_101683780);
    char v11 = v28;
    if (v28 == 2) {
      goto LABEL_13;
    }
    goto LABEL_15;
  }
  long long v28 = v26;
  long long v29 = v27;
  sub_10051B3EC((uint64_t)&v28, (uint64_t)v30, &qword_10168EA00);
  sub_10051B3EC((uint64_t)v30, (uint64_t)v16, &qword_10168EA00);
  sub_1005057FC(&qword_10168EA00);
  CRExtensible.rawValue.getter();
  if ((v17 & 0x8000000000000000) == 0)
  {
    id v10 = [objc_allocWithZone((Class)CRLConnectionLineMagnet) initWithType:v17 normalizedPosition:*((float *)&v28 + 3) *(float *)&v29];
    [v5 setTailMagnet:v10];

    sub_100AB4C84(a1);
    sub_10051B3EC(a1 + 112, (uint64_t)&v17, &qword_101683780);
    sub_10051B3EC((uint64_t)&v17, (uint64_t)v16, &qword_101683780);
    char v11 = v16[0];
    if (v16[0] == 2)
    {
LABEL_13:
      [v5 setUserDidSetControlPoint:1];
LABEL_16:

      return (uint64_t)v5;
    }
LABEL_15:
    [v5 setUserDidSetControlPoint:v11 & 1];
    goto LABEL_16;
  }
LABEL_18:
  uint64_t result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

id sub_100AA8BF8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for CRLEditableBezierPathSourceData(0);
  uint64_t v3 = *(void *)(a1 + *(int *)(v2 + 20));
  uint64_t v4 = *(void *)(v3 + 16);
  if (v4)
  {
    sub_10050BF48(0, &qword_10168E9E0);
    swift_bridgeObjectRetain();
    uint64_t v5 = v3 + 48;
    do
    {
      uint64_t v6 = *(void *)(v5 - 16);
      char v7 = *(unsigned char *)(v5 - 8);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_100AAD770(v6, v7);
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)(((unint64_t)&_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)&_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
      v5 += 24;
      --v4;
    }
    while (v4);
    swift_bridgeObjectRelease();
  }
  id v8 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
  Class isa = UUID._bridgeToObjectiveC()().super.isa;
  [v8 setPersistedUUID:isa];

  if ((unint64_t)&_swiftEmptyArrayStorage >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v11 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v11) {
      goto LABEL_9;
    }
LABEL_11:
    swift_bridgeObjectRelease();
    id v12 = [objc_allocWithZone((Class)CRLBezierSubpath) init];
    id v13 = [self bezierNodeWithPoint:0.0, 0.0];
    [v12 addNode:v13];

    sub_1005057FC((uint64_t *)&unk_101676C10);
    uint64_t v14 = swift_allocObject();
    *(_OWORD *)(v14 + 16) = xmmword_101177E70;
    *(void *)(v14 + 32) = v12;
    uint64_t v17 = v14;
    specialized Array._endMutation()();
    sub_10050BF48(0, &qword_10168E9E0);
    id v15 = v12;
    v10.super.Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v8 setSubpaths:v10.super.isa, v17];

    goto LABEL_12;
  }
  if (!*(void *)(((unint64_t)&_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    goto LABEL_11;
  }
LABEL_9:
  sub_10050BF48(0, &qword_10168E9E0);
  v10.super.Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v8 setSubpaths:v10.super.isa];
LABEL_12:

  [v8 setNaturalSize:*(float *)(a1 + *(int *)(v2 + 24)) * *(float *)(a1 + *(int *)(v2 + 24) + 4)];
  sub_100AB5148(a1, type metadata accessor for CRLEditableBezierPathSourceData);
  return v8;
}

unint64_t sub_100AA8F3C@<X0>(unint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_100AB1EB4(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_100AA8F68()
{
  return RawRepresentable<>.init(from:)();
}

uint64_t sub_100AA8FC8()
{
  return RawRepresentable<>.encode(to:)();
}

uint64_t sub_100AA9018(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100AAE468(a1, a2, a3, a4, (uint64_t (*)(void))sub_100AB7D7C, (uint64_t (*)(void))sub_100AB73B8);
}

uint64_t sub_100AA9044(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100AADBCC(a1, a2, a3, (void (*)(void))sub_100AB7D7C, (void (*)(void))sub_100AB0B04);
}

uint64_t sub_100AA9084(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100AAE598(a1, a2, a3, (void (*)(void))sub_100AB7D7C, (void (*)(void))sub_100AB0B04);
}

uint64_t sub_100AA90C4(uint64_t a1, uint64_t a2)
{
  return sub_100AAE634(a1, a2, (uint64_t (*)(void))sub_100AB7D7C, (uint64_t (*)(void))sub_100AB0B04);
}

BOOL sub_100AA90F0(char *a1, char *a2)
{
  return qword_1011A43E8[*a1] == qword_1011A43E8[*a2];
}

Swift::Int sub_100AA9114()
{
  uint64_t v1 = *v0;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(qword_1011A43E8[v1]);
  return Hasher._finalize()();
}

void sub_100AA9164()
{
  Hasher._combine(_:)(qword_1011A43E8[*v0]);
}

Swift::Int sub_100AA919C()
{
  uint64_t v1 = *v0;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(qword_1011A43E8[v1]);
  return Hasher._finalize()();
}

void sub_100AA91E8(void *a1@<X8>)
{
  *a1 = qword_1011A43E8[*v1];
}

unint64_t sub_100AA9200()
{
  unint64_t result = 1701869940;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x746E696F70;
      break;
    case 2:
      unint64_t result = 0x536C61727574616ELL;
      break;
    case 3:
      unint64_t result = 0xD000000000000010;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_100AA9290@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100AB1EC4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_100AA92B8()
{
  return qword_1011A43E8[*v0];
}

void sub_100AA92D0(void *a1@<X8>)
{
  *a1 = &off_1015031F0;
}

uint64_t sub_100AA92E0(uint64_t a1, uint64_t a2)
{
  return sub_100AAE998(a1, a2, (uint64_t (*)(void))sub_100AB6040, (uint64_t (*)(void))sub_100AB6098);
}

uint64_t sub_100AA930C(uint64_t a1)
{
  unint64_t v2 = sub_100AB6098();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100AA9348(uint64_t a1)
{
  unint64_t v2 = sub_100AB6098();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100AA9388(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_1005057FC(&qword_10168ED60);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5, v7);
  id v9 = (char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10050F848(a1, a1[3]);
  sub_100AB6098();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  sub_10051B3EC((uint64_t)v3, (uint64_t)v14, &qword_10168E898);
  sub_10051B3EC((uint64_t)v14, (uint64_t)&v13, &qword_10168E898);
  char v12 = 0;
  sub_1005057FC(&qword_10168E898);
  sub_100A22280(&qword_10168ED68, &qword_10168E898);
  KeyedEncodingContainer.encode<A>(_:forKey:)();
  if (!v2)
  {
    uint64_t v13 = *(void *)((char *)v3 + 12);
    char v12 = 1;
    sub_10089DC18();
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    uint64_t v13 = *(void *)((char *)v3 + 20);
    char v12 = 2;
    sub_100AB4E40();
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    uint64_t v13 = v3[4];
    char v12 = 3;
    sub_1005057FC((uint64_t *)&unk_101687A40);
    sub_1005573B0();
    KeyedEncodingContainer.encode<A>(_:forKey:)();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v5);
}

uint64_t sub_100AA95EC()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_100AA95F4(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 32) = a1;
  return result;
}

Freeform::SyncEvent::FetchedRecordZoneChanges::Deletion (__swiftcall *sub_100AA9620())(CKRecordID recordID, Swift::String recordType)
{
  return SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:);
}

uint64_t sub_100AA9640(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a1 + 16);
  v5[0] = *(_OWORD *)a1;
  v5[1] = v2;
  uint64_t v6 = *(void *)(a1 + 32);
  long long v3 = *(_OWORD *)(a2 + 16);
  v7[0] = *(_OWORD *)a2;
  v7[1] = v3;
  uint64_t v8 = *(void *)(a2 + 32);
  return sub_100AA9384(v5, v7) & 1;
}

double sub_100AA968C@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_100AB207C(a1, (uint64_t)v6);
  if (!v2)
  {
    double result = *(double *)v6;
    long long v5 = v6[1];
    *(_OWORD *)a2 = v6[0];
    *(_OWORD *)(a2 + 16) = v5;
    *(void *)(a2 + 32) = v7;
  }
  return result;
}

uint64_t sub_100AA96D4(void *a1)
{
  return sub_100AA9388(a1);
}

uint64_t sub_100AA9710(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_100AB80C4();

  return CRExtendableValueStruct.copy(renamingReferences:)(a1, a2, v4);
}

uint64_t sub_100AA9764(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_100AB80C4();

  return CRExtendableValueStruct.copy(renamingReferences:)(a1, a2, v4);
}

uint64_t sub_100AA97B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100AAA898(a1, a2, a3, a4, (uint64_t (*)(void))sub_100AB5F30, (uint64_t (*)(void))sub_100AB8118);
}

uint64_t sub_100AA97E4(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_100AB80C4();

  return CRExtendableValueStruct.visitReferences(_:)(a1, a2, v4);
}

uint64_t sub_100AA9830()
{
  return CRValueStruct.init(from:)();
}

uint64_t sub_100AA9880()
{
  return CRValueStruct.encode(to:)();
}

uint64_t sub_100AA98C8(uint64_t a1)
{
  unint64_t v2 = sub_100AB61C8();

  return CRValueStruct.minEncodingVersion.getter(a1, v2);
}

uint64_t sub_100AA9914()
{
  return RawRepresentable<>.init(from:)();
}

uint64_t sub_100AA9974()
{
  return RawRepresentable<>.encode(to:)();
}

uint64_t sub_100AA99C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100AAE468(a1, a2, a3, a4, (uint64_t (*)(void))sub_100AB7D28, (uint64_t (*)(void))sub_100AB74C0);
}

uint64_t sub_100AA99F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100AADBCC(a1, a2, a3, (void (*)(void))sub_100AB7D28, (void (*)(void))sub_100AB0B58);
}

uint64_t sub_100AA9A30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100AAE598(a1, a2, a3, (void (*)(void))sub_100AB7D28, (void (*)(void))sub_100AB0B58);
}

uint64_t sub_100AA9A70(uint64_t a1, uint64_t a2)
{
  return sub_100AAE634(a1, a2, (uint64_t (*)(void))sub_100AB7D28, (uint64_t (*)(void))sub_100AB0B58);
}

unint64_t sub_100AA9A9C(char a1)
{
  unint64_t result = 1701869940;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x72616C616373;
      break;
    case 2:
      unint64_t result = 0x536C61727574616ELL;
      break;
    case 3:
      unint64_t result = 0xD000000000000011;
      break;
    case 4:
      unint64_t result = 0x6853646C756F6873;
      break;
    case 5:
      unint64_t result = 0xD000000000000010;
      break;
    default:
      return result;
  }
  return result;
}

BOOL sub_100AA9B7C(char *a1, char *a2)
{
  return qword_1011A4390[*a1] == qword_1011A4390[*a2];
}

Swift::Int sub_100AA9BA0()
{
  uint64_t v1 = *v0;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(qword_1011A4390[v1]);
  return Hasher._finalize()();
}

void sub_100AA9BF0()
{
  Hasher._combine(_:)(qword_1011A4390[*v0]);
}

Swift::Int sub_100AA9C28()
{
  uint64_t v1 = *v0;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(qword_1011A4390[v1]);
  return Hasher._finalize()();
}

void sub_100AA9C74(void *a1@<X8>)
{
  *a1 = qword_1011A4390[*v1];
}

unint64_t sub_100AA9C8C()
{
  return sub_100AA9A9C(*v0);
}

uint64_t sub_100AA9C94@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100AB232C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_100AA9CBC()
{
  return qword_1011A4390[*v0];
}

void sub_100AA9CD4(void *a1@<X8>)
{
  *a1 = &off_1015032F8;
}

uint64_t sub_100AA9CE4(uint64_t a1, uint64_t a2)
{
  return sub_100AAE998(a1, a2, (uint64_t (*)(void))sub_100AB63E0, (uint64_t (*)(void))sub_100AB6438);
}

uint64_t sub_100AA9D10(uint64_t a1)
{
  unint64_t v2 = sub_100AB6438();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100AA9D4C(uint64_t a1)
{
  unint64_t v2 = sub_100AB6438();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100AA9D8C(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_1005057FC(&qword_10168ED70);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5, v7);
  id v9 = (char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10050F848(a1, a1[3]);
  sub_100AB6438();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  sub_10051B3EC(v3, (uint64_t)v14, &qword_10168E8A8);
  sub_10051B3EC((uint64_t)v14, (uint64_t)&v13, &qword_10168E8A8);
  char v12 = 0;
  sub_1005057FC(&qword_10168E8A8);
  sub_100A22280(&qword_10168ED78, &qword_10168E8A8);
  KeyedEncodingContainer.encode<A>(_:forKey:)();
  if (!v2)
  {
    LOBYTE(v13) = 1;
    KeyedEncodingContainer.encode(_:forKey:)();
    uint64_t v13 = *(void *)(v3 + 16);
    char v12 = 2;
    sub_100AB4E40();
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    LOBYTE(v13) = 3;
    KeyedEncodingContainer.encode(_:forKey:)();
    LOBYTE(v13) = 4;
    KeyedEncodingContainer.encode(_:forKey:)();
    uint64_t v13 = *(void *)(v3 + 32);
    char v12 = 5;
    sub_1005057FC((uint64_t *)&unk_101687A40);
    sub_1005573B0();
    KeyedEncodingContainer.encode<A>(_:forKey:)();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v5);
}

uint64_t sub_100AAA028(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a1 + 16);
  v5[0] = *(_OWORD *)a1;
  v5[1] = v2;
  uint64_t v6 = *(void *)(a1 + 32);
  long long v3 = *(_OWORD *)(a2 + 16);
  v7[0] = *(_OWORD *)a2;
  v7[1] = v3;
  uint64_t v8 = *(void *)(a2 + 32);
  return sub_100AA9D88(v5, v7) & 1;
}

double sub_100AAA074@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_100AB25C8(a1, (uint64_t)v6);
  if (!v2)
  {
    double result = *(double *)v6;
    long long v5 = v6[1];
    *(_OWORD *)a2 = v6[0];
    *(_OWORD *)(a2 + 16) = v5;
    *(void *)(a2 + 32) = v7;
  }
  return result;
}

uint64_t sub_100AAA0BC(void *a1)
{
  return sub_100AA9D8C(a1);
}

uint64_t sub_100AAA0F8(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_100AB801C();

  return CRExtendableValueStruct.copy(renamingReferences:)(a1, a2, v4);
}

uint64_t sub_100AAA14C(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_100AB801C();

  return CRExtendableValueStruct.copy(renamingReferences:)(a1, a2, v4);
}

uint64_t sub_100AAA1A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100AAA898(a1, a2, a3, a4, (uint64_t (*)(void))sub_100AB62D0, (uint64_t (*)(void))sub_100AB8070);
}

uint64_t sub_100AAA1CC(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_100AB801C();

  return CRExtendableValueStruct.visitReferences(_:)(a1, a2, v4);
}

uint64_t sub_100AAA218()
{
  return CRValueStruct.init(from:)();
}

uint64_t sub_100AAA268()
{
  return CRValueStruct.encode(to:)();
}

uint64_t sub_100AAA2B0(uint64_t a1)
{
  unint64_t v2 = sub_100AB6568();

  return CRValueStruct.minEncodingVersion.getter(a1, v2);
}

uint64_t sub_100AAA300(void *a1)
{
  long long v3 = v1;
  uint64_t v5 = sub_1005057FC(&qword_10168ED80);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5, v7);
  id v9 = (char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10050F848(a1, a1[3]);
  sub_100AB67D8();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  uint64_t v12 = *v3;
  HIBYTE(v11) = 0;
  sub_10089DC18();
  KeyedEncodingContainer.encode<A>(_:forKey:)();
  if (!v2)
  {
    LOBYTE(v12) = 1;
    KeyedEncodingContainer.encode(_:forKey:)();
    LOBYTE(v12) = 2;
    KeyedEncodingContainer.encode(_:forKey:)();
    LOBYTE(v12) = 3;
    KeyedEncodingContainer.encode(_:forKey:)();
    uint64_t v12 = *(uint64_t *)((char *)v3 + 20);
    HIBYTE(v11) = 4;
    sub_100AB4E40();
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    uint64_t v12 = v3[4];
    HIBYTE(v11) = 5;
    sub_1005057FC((uint64_t *)&unk_101687A40);
    sub_1005573B0();
    KeyedEncodingContainer.encode<A>(_:forKey:)();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v5);
}

unint64_t sub_100AAA554()
{
  unint64_t result = 0x69736F506C696174;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x657A69536C696174;
      break;
    case 2:
      unint64_t result = 0x615272656E726F63;
      break;
    case 3:
      unint64_t result = 0x61547265746E6563;
      break;
    case 4:
      unint64_t result = 0x536C61727574616ELL;
      break;
    case 5:
      unint64_t result = 0xD000000000000010;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_100AAA63C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100AB2900(a1, a2);
  *a3 = result;
  return result;
}

void sub_100AAA664(void *a1@<X8>)
{
  *a1 = &off_101503370;
}

uint64_t sub_100AAA674(uint64_t a1, uint64_t a2)
{
  return sub_100AAE998(a1, a2, (uint64_t (*)(void))sub_100AB6780, (uint64_t (*)(void))sub_100AB67D8);
}

uint64_t sub_100AAA6A0(uint64_t a1)
{
  unint64_t v2 = sub_100AB67D8();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100AAA6DC(uint64_t a1)
{
  unint64_t v2 = sub_100AB67D8();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100AAA718(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a1 + 16);
  v5[0] = *(_OWORD *)a1;
  v5[1] = v2;
  uint64_t v6 = *(void *)(a1 + 32);
  long long v3 = *(_OWORD *)(a2 + 16);
  v7[0] = *(_OWORD *)a2;
  v7[1] = v3;
  uint64_t v8 = *(void *)(a2 + 32);
  return sub_100AAA2FC(v5, v7) & 1;
}

double sub_100AAA764@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_100AB2BD4(a1, (uint64_t)v6);
  if (!v2)
  {
    double result = *(double *)v6;
    long long v5 = v6[1];
    *(_OWORD *)a2 = v6[0];
    *(_OWORD *)(a2 + 16) = v5;
    *(void *)(a2 + 32) = v7;
  }
  return result;
}

uint64_t sub_100AAA7AC(void *a1)
{
  return sub_100AAA300(a1);
}

uint64_t sub_100AAA7C4(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_100AB7F74();

  return CRExtendableValueStruct.copy(renamingReferences:)(a1, a2, v4);
}

uint64_t sub_100AAA818(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_100AB7F74();

  return CRExtendableValueStruct.copy(renamingReferences:)(a1, a2, v4);
}

uint64_t sub_100AAA86C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100AAA898(a1, a2, a3, a4, (uint64_t (*)(void))sub_100AB6670, (uint64_t (*)(void))sub_100AB7FC8);
}

uint64_t sub_100AAA898(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void), uint64_t (*a6)(void))
{
  uint64_t v10 = a5();
  uint64_t v11 = a6();

  return CRValue<>.observableDifference(from:with:)(a1, a2, a3, v10, v11);
}

uint64_t sub_100AAA91C(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_100AB7F74();

  return CRExtendableValueStruct.visitReferences(_:)(a1, a2, v4);
}

uint64_t sub_100AAA968()
{
  return CRValueStruct.init(from:)();
}

uint64_t sub_100AAA9B8()
{
  return CRValueStruct.encode(to:)();
}

uint64_t sub_100AAAA00(uint64_t a1)
{
  unint64_t v2 = sub_100AB6908();

  return CRValueStruct.minEncodingVersion.getter(a1, v2);
}

uint64_t sub_100AAAA4C(void *a1, unint64_t a2, unint64_t a3, float a4, float a5)
{
  uint64_t v11 = sub_1005057FC(&qword_10168E928);
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11, v13);
  id v15 = (char *)&v17 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10050F848(a1, a1[3]);
  sub_100AAD5EC();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  unint64_t v19 = a2;
  char v18 = 0;
  sub_10089DB5C();
  KeyedEncodingContainer.encode<A>(_:forKey:)();
  if (!v5)
  {
    unint64_t v19 = __PAIR64__(LODWORD(a5), LODWORD(a4));
    char v18 = 1;
    sub_100AB4E40();
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    unint64_t v19 = a3;
    char v18 = 2;
    sub_1005057FC((uint64_t *)&unk_101687A40);
    sub_1005573B0();
    KeyedEncodingContainer.encode<A>(_:forKey:)();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v15, v11);
}

BOOL sub_100AAAC38(char *a1, char *a2)
{
  return qword_1011A4408[*a1] == qword_1011A4408[*a2];
}

Swift::Int sub_100AAAC5C()
{
  uint64_t v1 = *v0;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(qword_1011A4408[v1]);
  return Hasher._finalize()();
}

void sub_100AAACAC()
{
  Hasher._combine(_:)(qword_1011A4408[*v0]);
}

Swift::Int sub_100AAACE4()
{
  uint64_t v1 = *v0;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(qword_1011A4408[v1]);
  return Hasher._finalize()();
}

void sub_100AAAD30(void *a1@<X8>)
{
  *a1 = qword_1011A4408[*v1];
}

uint64_t sub_100AAAD48()
{
  unint64_t v1 = 0x536C61727574616ELL;
  if (*v0 != 1) {
    unint64_t v1 = 0xD000000000000010;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x61507265697A6562;
  }
}

uint64_t sub_100AAADBC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100AB2EBC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_100AAADE4()
{
  return qword_1011A4408[*v0];
}

void sub_100AAADFC(void *a1@<X8>)
{
  *a1 = &off_1015032D0;
}

uint64_t sub_100AAAE0C(uint64_t a1, uint64_t a2)
{
  return sub_100AAE998(a1, a2, (uint64_t (*)(void))sub_100AAD594, (uint64_t (*)(void))sub_100AAD5EC);
}

uint64_t sub_100AAAE38(uint64_t a1)
{
  unint64_t v2 = sub_100AAD5EC();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100AAAE74(uint64_t a1)
{
  unint64_t v2 = sub_100AAD5EC();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100AAAEB0(uint64_t a1, uint64_t a2)
{
  float v2 = *(float *)(a1 + 8);
  float v3 = *(float *)(a1 + 12);
  uint64_t v4 = *(void *)(a1 + 16);
  float v5 = *(float *)(a2 + 8);
  float v6 = *(float *)(a2 + 12);
  uint64_t v7 = *(void *)(a2 + 16);
  if (!sub_1005BA910(*(void *)a1, *(void *)a2)) {
    return 0;
  }
  if (v2 != v5 || v3 != v6) {
    return 0;
  }

  return sub_100ED60AC(v4, v7);
}

void sub_100AAAF40(void *a1@<X0>, uint64_t a2@<X8>)
{
  float v6 = sub_100AB304C(a1);
  if (!v2)
  {
    *(void *)a2 = v4;
    *(float *)(a2 + 8) = v6;
    *(_DWORD *)(a2 + 12) = v7;
    *(void *)(a2 + 16) = v5;
  }
}

uint64_t sub_100AAAF74(void *a1)
{
  return sub_100AAAA4C(a1, *(void *)v1, *(void *)(v1 + 16), *(float *)(v1 + 8), *(float *)(v1 + 12));
}

uint64_t sub_100AAAF98(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_100AB4E94();

  return CRExtendableValueStruct.copy(renamingReferences:)(a1, a2, v4);
}

uint64_t sub_100AAAFEC(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_100AB4E94();

  return CRExtendableValueStruct.copy(renamingReferences:)(a1, a2, v4);
}

uint64_t sub_100AAB040(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100AAC824(a1, a2, a3, a4, (uint64_t (*)(void))sub_100AAD3DC, (uint64_t (*)(void))sub_100AB4EE8);
}

uint64_t sub_100AAB06C(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_100AB4E94();

  return CRExtendableValueStruct.visitReferences(_:)(a1, a2, v4);
}

uint64_t sub_100AAB0B8()
{
  return CRValueStruct.init(from:)();
}

uint64_t sub_100AAB108()
{
  return CRValueStruct.encode(to:)();
}

uint64_t sub_100AAB150(uint64_t a1)
{
  unint64_t v2 = sub_100AAD71C();

  return CRValueStruct.minEncodingVersion.getter(a1, v2);
}

uint64_t sub_100AAB19C()
{
  return RawRepresentable<>.init(from:)();
}

uint64_t sub_100AAB1FC()
{
  return RawRepresentable<>.encode(to:)();
}

uint64_t sub_100AAB24C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100AAE468(a1, a2, a3, a4, (uint64_t (*)(void))sub_100AB7C80, (uint64_t (*)(void))sub_100AB76D0);
}

uint64_t sub_100AAB278(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100AADBCC(a1, a2, a3, (void (*)(void))sub_100AB7C80, (void (*)(void))sub_1005C694C);
}

uint64_t sub_100AAB2B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100AAE598(a1, a2, a3, (void (*)(void))sub_100AB7C80, (void (*)(void))sub_1005C694C);
}

uint64_t sub_100AAB2F8(uint64_t a1, uint64_t a2)
{
  return sub_100AAE634(a1, a2, (uint64_t (*)(void))sub_100AB7C80, (uint64_t (*)(void))sub_1005C694C);
}

BOOL sub_100AAB324(char *a1, char *a2)
{
  return qword_1011A43C0[*a1] == qword_1011A43C0[*a2];
}

Swift::Int sub_100AAB348()
{
  uint64_t v1 = *v0;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(qword_1011A43C0[v1]);
  return Hasher._finalize()();
}

void sub_100AAB398()
{
  Hasher._combine(_:)(qword_1011A43C0[*v0]);
}

Swift::Int sub_100AAB3D0()
{
  uint64_t v1 = *v0;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(qword_1011A43C0[v1]);
  return Hasher._finalize()();
}

void sub_100AAB41C(void *a1@<X8>)
{
  *a1 = qword_1011A43C0[*v1];
}

unint64_t sub_100AAB434()
{
  unint64_t result = 0x6F72746E6F436E69;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x6E696F5065646F6ELL;
      break;
    case 2:
      unint64_t result = 0x72746E6F4374756FLL;
      break;
    case 3:
      unint64_t result = 1701869940;
      break;
    case 4:
      unint64_t result = 0xD000000000000010;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_100AAB4F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100AB32D4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_100AAB520()
{
  return qword_1011A43C0[*v0];
}

void sub_100AAB538(void *a1@<X8>)
{
  *a1 = &off_1015035A8;
}

uint64_t sub_100AAB548(uint64_t a1, uint64_t a2)
{
  return sub_100AAE998(a1, a2, (uint64_t (*)(void))sub_100AB7990, (uint64_t (*)(void))sub_100AB79E8);
}

uint64_t sub_100AAB574(uint64_t a1)
{
  unint64_t v2 = sub_100AB79E8();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100AAB5B0(uint64_t a1)
{
  unint64_t v2 = sub_100AB79E8();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100AAB5EC(void *a1)
{
  float v3 = v1;
  uint64_t v5 = sub_1005057FC(&qword_10168ED98);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5, v7);
  id v9 = (char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10050F848(a1, a1[3]);
  sub_100AB79E8();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  uint64_t v11 = *v3;
  char v12 = 0;
  sub_10089DC18();
  KeyedEncodingContainer.encode<A>(_:forKey:)();
  if (!v2)
  {
    uint64_t v11 = v3[1];
    char v12 = 1;
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    uint64_t v11 = v3[2];
    char v12 = 2;
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    sub_10051B3EC((uint64_t)(v3 + 3), (uint64_t)v13, &qword_10168E8C8);
    sub_10051B3EC((uint64_t)v13, (uint64_t)&v11, &qword_10168E8C8);
    char v12 = 3;
    sub_1005057FC(&qword_10168E8C8);
    sub_100A22280(&qword_10168EDA0, &qword_10168E8C8);
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    uint64_t v11 = v3[5];
    char v12 = 4;
    sub_1005057FC((uint64_t *)&unk_101687A40);
    sub_1005573B0();
    KeyedEncodingContainer.encode<A>(_:forKey:)();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v5);
}

uint64_t sub_100AAB88C()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_100AAB894(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 40) = a1;
  return result;
}

uint64_t sub_100AAB8C0(_OWORD *a1, long long *a2)
{
  long long v2 = a1[1];
  v7[0] = *a1;
  v7[1] = v2;
  long long v3 = *a2;
  long long v4 = a2[1];
  _OWORD v7[2] = a1[2];
  v8[0] = v3;
  long long v5 = a2[2];
  v8[1] = v4;
  v8[2] = v5;
  return sub_100AAF6C8((uint64_t)v7, (uint64_t)v8) & 1;
}

double sub_100AAB908@<D0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  sub_100AB3534(a1, (uint64_t)v6);
  if (!v2)
  {
    long long v5 = v6[1];
    *a2 = v6[0];
    a2[1] = v5;
    double result = *(double *)&v7;
    a2[2] = v7;
  }
  return result;
}

uint64_t sub_100AAB94C(void *a1)
{
  return sub_100AAB5EC(a1);
}

uint64_t sub_100AAB988(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_100AB7BD8();

  return CRExtendableValueStruct.copy(renamingReferences:)(a1, a2, v4);
}

uint64_t sub_100AAB9DC(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_100AB7BD8();

  return CRExtendableValueStruct.copy(renamingReferences:)(a1, a2, v4);
}

uint64_t sub_100AABA30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_100AB77D8();
  unint64_t v7 = sub_100AB7C2C();

  return CRValue<>.observableDifference(from:with:)(a1, a2, a3, v6, v7);
}

uint64_t sub_100AABAA0(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_100AB7BD8();

  return CRExtendableValueStruct.visitReferences(_:)(a1, a2, v4);
}

uint64_t sub_100AABAEC()
{
  return CRValueStruct.init(from:)();
}

uint64_t sub_100AABB3C()
{
  return CRValueStruct.encode(to:)();
}

uint64_t sub_100AABB84(uint64_t a1)
{
  unint64_t v2 = sub_100AB7B18();

  return CRValueStruct.minEncodingVersion.getter(a1, v2);
}

uint64_t sub_100AABBD0()
{
  unint64_t v1 = 0x6465736F6C63;
  if (*v0 != 1) {
    unint64_t v1 = 0xD000000000000010;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x7365646F6ELL;
  }
}

uint64_t sub_100AABC28@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100AB3850(a1, a2);
  *a3 = result;
  return result;
}

void sub_100AABC50(void *a1@<X8>)
{
  *a1 = &off_1015035D0;
}

uint64_t sub_100AABC60(uint64_t a1, uint64_t a2)
{
  return sub_100AAE998(a1, a2, (uint64_t (*)(void))sub_100AB6B20, (uint64_t (*)(void))sub_100AB6B78);
}

uint64_t sub_100AABC8C(uint64_t a1)
{
  unint64_t v2 = sub_100AB6B78();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100AABCC8(uint64_t a1)
{
  unint64_t v2 = sub_100AB6B78();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100AABD04(void *a1, uint64_t a2, int a3, uint64_t a4)
{
  v14[2] = a3;
  uint64_t v8 = sub_1005057FC(&qword_10168ED28);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8, v10);
  char v12 = (char *)v14 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10050F848(a1, a1[3]);
  sub_100AB6B78();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  uint64_t v16 = a2;
  char v15 = 0;
  sub_1005057FC(&qword_10168ED18);
  sub_100AB7B6C(&qword_10168ED30, &qword_10168ED18, (void (*)(void))sub_100AB7888);
  KeyedEncodingContainer.encode<A>(_:forKey:)();
  if (!v4)
  {
    LOBYTE(v16) = 1;
    KeyedEncodingContainer.encode(_:forKey:)();
    uint64_t v16 = a4;
    char v15 = 2;
    sub_1005057FC((uint64_t *)&unk_101687A40);
    sub_1005573B0();
    KeyedEncodingContainer.encode<A>(_:forKey:)();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v12, v8);
}

uint64_t sub_100AABF18(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_1005057FC(&qword_10168E968);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5, v7);
  uint64_t v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10050F848(a1, a1[3]);
  sub_100AAD1B4();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  LOBYTE(v13) = 0;
  type metadata accessor for UUID();
  sub_100AA8128(&qword_101671E70, (void (*)(uint64_t))&type metadata accessor for UUID);
  KeyedEncodingContainer.encode<A>(_:forKey:)();
  if (!v2)
  {
    uint64_t v10 = (int *)type metadata accessor for CRLEditableBezierPathSourceData(0);
    uint64_t v13 = *(void *)(v3 + v10[5]);
    HIBYTE(v12) = 1;
    sub_1005057FC(&qword_10168E950);
    sub_100AB7B6C(&qword_10168E970, &qword_10168E950, (void (*)(void))sub_100AB4F90);
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    uint64_t v13 = *(void *)(v3 + v10[6]);
    HIBYTE(v12) = 2;
    sub_100AB4E40();
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    uint64_t v13 = *(void *)(v3 + v10[7]);
    HIBYTE(v12) = 3;
    sub_1005057FC((uint64_t *)&unk_101687A40);
    sub_1005573B0();
    KeyedEncodingContainer.encode<A>(_:forKey:)();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v5);
}

uint64_t sub_100AAC1C0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v25 = a2;
  uint64_t v4 = type metadata accessor for UUID();
  uint64_t v27 = *(void *)(v4 - 8);
  __chkstk_darwin(v4, v5);
  long long v28 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = sub_1005057FC(&qword_10168E948);
  uint64_t v26 = *(void *)(v29 - 8);
  __chkstk_darwin(v29, v7);
  uint64_t v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for CRLEditableBezierPathSourceData(0);
  __chkstk_darwin(v10, v11);
  uint64_t v31 = *(int *)(v13 + 28);
  uint64_t v14 = (char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&v14[v31] = _swiftEmptyDictionarySingleton;
  sub_10050F848(a1, a1[3]);
  sub_100AAD1B4();
  uint64_t v30 = v9;
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v2)
  {
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)a1);
    return swift_bridgeObjectRelease();
  }
  else
  {
    long long v24 = a1;
    uint64_t v16 = v26;
    uint64_t v15 = v27;
    LOBYTE(v33) = 0;
    sub_100AA8128(&qword_101671E58, (void (*)(uint64_t))&type metadata accessor for UUID);
    char v18 = v28;
    uint64_t v17 = v29;
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    unint64_t v19 = *(void (**)(char *, char *))(v15 + 32);
    long long v28 = (char *)v4;
    v19(v14, v18);
    sub_1005057FC(&qword_10168E950);
    char v32 = 1;
    sub_100AB7B6C(&qword_10168E958, &qword_10168E950, (void (*)(void))sub_100AB4F3C);
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    *(void *)&v14[*(int *)(v10 + 20)] = v33;
    char v32 = 2;
    sub_100AB4DEC();
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    *(void *)&v14[*(int *)(v10 + 24)] = v33;
    sub_1005057FC((uint64_t *)&unk_101687A40);
    char v32 = 3;
    sub_100557304();
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v30, v17);
    uint64_t v20 = v33;
    uint64_t v21 = v31;
    swift_bridgeObjectRelease();
    *(void *)&v14[v21] = v20;
    sub_100AB50E0((uint64_t)v14, v25, type metadata accessor for CRLEditableBezierPathSourceData);
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v24);
    return sub_100AB5148((uint64_t)v14, type metadata accessor for CRLEditableBezierPathSourceData);
  }
}

uint64_t sub_100AAC674(uint64_t a1, uint64_t a2)
{
  int v2 = *(unsigned __int8 *)(a1 + 8);
  uint64_t v3 = *(void *)(a1 + 16);
  int v4 = *(unsigned __int8 *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  if (sub_1005B80B0(*(void *)a1, *(void *)a2) & 1) == 0 || ((v2 ^ v4)) {
    return 0;
  }

  return sub_100ED60AC(v3, v5);
}

uint64_t sub_100AAC6F4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = sub_100AB3994(a1);
  if (!v2)
  {
    *(void *)a2 = result;
    *(unsigned char *)(a2 + 8) = v5 & 1;
    *(void *)(a2 + 16) = v6;
  }
  return result;
}

uint64_t sub_100AAC72C(void *a1)
{
  return sub_100AABD04(a1, *(void *)v1, *(unsigned __int8 *)(v1 + 8), *(void *)(v1 + 16));
}

uint64_t sub_100AAC750(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_100AB7ECC();

  return CRExtendableValueStruct.copy(renamingReferences:)(a1, a2, v4);
}

uint64_t sub_100AAC7A4(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_100AB7ECC();

  return CRExtendableValueStruct.copy(renamingReferences:)(a1, a2, v4);
}

uint64_t sub_100AAC7F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100AAC824(a1, a2, a3, a4, (uint64_t (*)(void))sub_100AB6A10, (uint64_t (*)(void))sub_100AB7F20);
}

uint64_t sub_100AAC824(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void), uint64_t (*a6)(void))
{
  uint64_t v10 = a5();
  uint64_t v11 = a6();

  return CRValue<>.observableDifference(from:with:)(a1, a2, a3, v10, v11);
}

uint64_t sub_100AAC8A8(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_100AB7ECC();

  return CRExtendableValueStruct.visitReferences(_:)(a1, a2, v4);
}

uint64_t sub_100AAC8F4()
{
  return CRValueStruct.init(from:)();
}

uint64_t sub_100AAC944()
{
  return CRValueStruct.encode(to:)();
}

uint64_t sub_100AAC98C(uint64_t a1)
{
  unint64_t v2 = sub_100AB6CA8();

  return CRValueStruct.minEncodingVersion.getter(a1, v2);
}

unint64_t sub_100AAC9D8()
{
  unint64_t result = 1684632949;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x7368746170627573;
      break;
    case 2:
      unint64_t result = 0x536C61727574616ELL;
      break;
    case 3:
      unint64_t result = 0xD000000000000010;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_100AACA6C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100AB3C38(a1, a2);
  *a3 = result;
  return result;
}

void sub_100AACA94(void *a1@<X8>)
{
  *a1 = &off_101503580;
}

uint64_t sub_100AACAA4(uint64_t a1, uint64_t a2)
{
  return sub_100AAE998(a1, a2, (uint64_t (*)(void))sub_100AAD15C, (uint64_t (*)(void))sub_100AAD1B4);
}

uint64_t sub_100AACAD0(uint64_t a1)
{
  unint64_t v2 = sub_100AAD1B4();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100AACB0C(uint64_t a1)
{
  unint64_t v2 = sub_100AAD1B4();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100AACB4C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100AAC1C0(a1, a2);
}

uint64_t sub_100AACB64(void *a1)
{
  return sub_100AABF18(a1);
}

uint64_t sub_100AACB7C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100AA8128(&qword_10168E980, (void (*)(uint64_t))type metadata accessor for CRLEditableBezierPathSourceData);

  return CRExtendableValueStruct.copy(renamingReferences:)(a1, a2, v4);
}

uint64_t sub_100AACC00(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100AA8128(&qword_10168E980, (void (*)(uint64_t))type metadata accessor for CRLEditableBezierPathSourceData);

  return CRExtendableValueStruct.copy(renamingReferences:)(a1, a2, v4);
}

uint64_t sub_100AACC84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_100AA8128(&qword_10168E750, (void (*)(uint64_t))type metadata accessor for CRLEditableBezierPathSourceData);
  uint64_t v7 = sub_100AA8128(&qword_10168E988, (void (*)(uint64_t))type metadata accessor for CRLEditableBezierPathSourceData);

  return CRValue<>.observableDifference(from:with:)(a1, a2, a3, v6, v7);
}

uint64_t sub_100AACD50(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100AA8128(&qword_10168E980, (void (*)(uint64_t))type metadata accessor for CRLEditableBezierPathSourceData);

  return CRExtendableValueStruct.visitReferences(_:)(a1, a2, v4);
}

uint64_t sub_100AACDCC()
{
  return CRValueStruct.init(from:)();
}

uint64_t sub_100AACE4C()
{
  return CRValueStruct.encode(to:)();
}

uint64_t sub_100AACEC4(uint64_t a1)
{
  uint64_t v2 = sub_100AA8128(&qword_10168E7A8, (void (*)(uint64_t))type metadata accessor for CRLEditableBezierPathSourceData);

  return CRValueStruct.minEncodingVersion.getter(a1, v2);
}

uint64_t sub_100AACF40()
{
  return sub_100AA8128(&qword_10168E740, (void (*)(uint64_t))type metadata accessor for CRLEditableBezierPathSourceData);
}

uint64_t sub_100AACF88()
{
  return sub_100AA8128(&qword_10168E748, (void (*)(uint64_t))type metadata accessor for CRLEditableBezierPathSourceData);
}

uint64_t sub_100AACFD0()
{
  return sub_100AA8128(&qword_10168E750, (void (*)(uint64_t))type metadata accessor for CRLEditableBezierPathSourceData);
}

uint64_t sub_100AAD018()
{
  return sub_100AA8128(&qword_10168E758, (void (*)(uint64_t))type metadata accessor for CRLEditableBezierPathSourceData);
}

uint64_t sub_100AAD060()
{
  return sub_100AA8128(&qword_10168E760, (void (*)(uint64_t))type metadata accessor for CRLEditableBezierPathSourceData);
}

unint64_t sub_100AAD0AC()
{
  unint64_t result = qword_10168E768;
  if (!qword_10168E768)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168E768);
  }
  return result;
}

unint64_t sub_100AAD104()
{
  unint64_t result = qword_10168E770;
  if (!qword_10168E770)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168E770);
  }
  return result;
}

unint64_t sub_100AAD15C()
{
  unint64_t result = qword_10168E778;
  if (!qword_10168E778)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168E778);
  }
  return result;
}

unint64_t sub_100AAD1B4()
{
  unint64_t result = qword_10168E780;
  if (!qword_10168E780)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168E780);
  }
  return result;
}

unint64_t sub_100AAD20C()
{
  unint64_t result = qword_10168E788;
  if (!qword_10168E788)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168E788);
  }
  return result;
}

unint64_t sub_100AAD264()
{
  unint64_t result = qword_10168E790;
  if (!qword_10168E790)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168E790);
  }
  return result;
}

uint64_t sub_100AAD2B8()
{
  return sub_1006BFA64(&qword_10168E798, &qword_10168E7A0);
}

uint64_t sub_100AAD2E0()
{
  return sub_100AA8128(&qword_10168E7A8, (void (*)(uint64_t))type metadata accessor for CRLEditableBezierPathSourceData);
}

unint64_t sub_100AAD32C()
{
  unint64_t result = qword_10168E7B0;
  if (!qword_10168E7B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168E7B0);
  }
  return result;
}

unint64_t sub_100AAD384()
{
  unint64_t result = qword_10168E7B8;
  if (!qword_10168E7B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168E7B8);
  }
  return result;
}

unint64_t sub_100AAD3DC()
{
  unint64_t result = qword_10168E7C0;
  if (!qword_10168E7C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168E7C0);
  }
  return result;
}

unint64_t sub_100AAD434()
{
  unint64_t result = qword_10168E7C8;
  if (!qword_10168E7C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168E7C8);
  }
  return result;
}

unint64_t sub_100AAD48C()
{
  unint64_t result = qword_10168E7D0;
  if (!qword_10168E7D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168E7D0);
  }
  return result;
}

unint64_t sub_100AAD4E4()
{
  unint64_t result = qword_10168E7D8;
  if (!qword_10168E7D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168E7D8);
  }
  return result;
}

unint64_t sub_100AAD53C()
{
  unint64_t result = qword_10168E7E0;
  if (!qword_10168E7E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168E7E0);
  }
  return result;
}

unint64_t sub_100AAD594()
{
  unint64_t result = qword_10168E7E8;
  if (!qword_10168E7E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168E7E8);
  }
  return result;
}

unint64_t sub_100AAD5EC()
{
  unint64_t result = qword_10168E7F0;
  if (!qword_10168E7F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168E7F0);
  }
  return result;
}

unint64_t sub_100AAD644()
{
  unint64_t result = qword_10168E7F8;
  if (!qword_10168E7F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168E7F8);
  }
  return result;
}

unint64_t sub_100AAD69C()
{
  unint64_t result = qword_10168E800;
  if (!qword_10168E800)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168E800);
  }
  return result;
}

uint64_t sub_100AAD6F0()
{
  return sub_1006BFA64(&qword_10168E808, &qword_10168E810);
}

unint64_t sub_100AAD71C()
{
  unint64_t result = qword_10168E818;
  if (!qword_10168E818)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168E818);
  }
  return result;
}

id sub_100AAD770(uint64_t a1, char a2)
{
  id v4 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
  [v4 setClosed:a2 & 1];
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a1 + 16);
  if (v5)
  {
    id v21 = v4;
    id v22 = self;
    uint64_t v6 = a1 + 36;
    do
    {
      uint64_t v7 = *(void *)(v6 + 20);
      char v8 = *(unsigned char *)(v6 + 28);
      double v9 = *(float *)(v6 + 4);
      double v10 = *(float *)(v6 + 8);
      double v11 = *(float *)(v6 - 4);
      double v12 = *(float *)v6;
      double v13 = *(float *)(v6 + 12);
      double v14 = *(float *)(v6 + 16);
      swift_bridgeObjectRetain();
      id v15 = [v22 bezierNodeWithPoint:v9 inControlPoint:v10 outControlPoint:v11 v12 v13 v14];
      uint64_t v16 = v15;
      if (v8)
      {
        swift_bridgeObjectRelease();
        sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"init(unarchiving:)", 18, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCanvas/CRLPathSourceData.swift", 87, 2, 639, (uint64_t)"Unknown bezier node type. Falling back to sharp.", 48, 2u, (uint64_t)&_swiftEmptyArrayStorage);
        LOBYTE(v20) = 2;
        sub_1005598CC((uint64_t)&_swiftEmptyArrayStorage, (uint64_t)"init(unarchiving:)", 18, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCanvas/CRLPathSourceData.swift", 87, 2, 639);
        [v16 setType:1 "Unknown bezier node type. Falling back to sharp." 48 v20];
      }
      else
      {
        if ((_BYTE)v7)
        {
          if (v7 == 1) {
            [v15 setType:2];
          }
          else {
            [v15 setType:3];
          }
        }
        else
        {
          [v15 setType:1];
        }
        swift_bridgeObjectRelease();
      }
      id v17 = v16;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)(((unint64_t)&_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)&_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();

      v6 += 48;
      --v5;
    }
    while (v5);
    swift_bridgeObjectRelease();
    id v4 = v21;
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  sub_10050BF48(0, &qword_10168E9E8);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v4 setNodes:isa];

  return v4;
}

unint64_t sub_100AADA84@<X0>(unint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_100AB15F8(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_100AADAB0()
{
  return RawRepresentable<>.init(from:)();
}

uint64_t sub_100AADB10()
{
  return RawRepresentable<>.encode(to:)();
}

uint64_t sub_100AADB60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100AAE468(a1, a2, a3, a4, (uint64_t (*)(void))sub_100AB7CD4, (uint64_t (*)(void))sub_100AB75C8);
}

uint64_t sub_100AADB8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100AADBCC(a1, a2, a3, (void (*)(void))sub_100AB7CD4, (void (*)(void))sub_1009C1D4C);
}

uint64_t sub_100AADBCC(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void), void (*a5)(void))
{
  return CRValue<>.init(from:)();
}

uint64_t sub_100AADC44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100AAE598(a1, a2, a3, (void (*)(void))sub_100AB7CD4, (void (*)(void))sub_1009C1D4C);
}

uint64_t sub_100AADC84(uint64_t a1, uint64_t a2)
{
  return sub_100AAE634(a1, a2, (uint64_t (*)(void))sub_100AB7CD4, (uint64_t (*)(void))sub_1009C1D4C);
}

uint64_t sub_100AADCB0()
{
  unint64_t v1 = 0xD000000000000018;
  if (*v0 != 1) {
    unint64_t v1 = 0xD000000000000010;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x795474656E67616DLL;
  }
}

uint64_t sub_100AADD1C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100AB3DF8(a1, a2);
  *a3 = result;
  return result;
}

void sub_100AADD44(void *a1@<X8>)
{
  *a1 = &off_1015034B0;
}

uint64_t sub_100AADD54(uint64_t a1, uint64_t a2)
{
  return sub_100AAE998(a1, a2, (uint64_t (*)(void))sub_100AB6FC8, (uint64_t (*)(void))sub_100AB7020);
}

uint64_t sub_100AADD80(uint64_t a1)
{
  unint64_t v2 = sub_100AB7020();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100AADDBC(uint64_t a1)
{
  unint64_t v2 = sub_100AB7020();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100AADDF8(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_1005057FC(&qword_10168ED00);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5, v7);
  double v9 = (char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10050F848(a1, a1[3]);
  sub_100AB7020();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  sub_10051B3EC(v3, (uint64_t)v14, &qword_10168EA00);
  sub_10051B3EC((uint64_t)v14, (uint64_t)&v13, &qword_10168EA00);
  char v12 = 0;
  sub_1005057FC(&qword_10168EA00);
  sub_100A22280(&qword_10168ED08, &qword_10168EA00);
  KeyedEncodingContainer.encode<A>(_:forKey:)();
  if (!v2)
  {
    uint64_t v13 = *(void *)(v3 + 12);
    char v12 = 1;
    sub_10089DC18();
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    uint64_t v13 = *(void *)(v3 + 24);
    char v12 = 2;
    sub_1005057FC((uint64_t *)&unk_101687A40);
    sub_1005573B0();
    KeyedEncodingContainer.encode<A>(_:forKey:)();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v5);
}

uint64_t sub_100AAE01C(uint64_t a1, uint64_t a2)
{
  float v2 = *(float *)(a1 + 12);
  float v3 = *(float *)(a1 + 16);
  uint64_t v4 = *(void *)(a1 + 24);
  float v5 = *(float *)(a2 + 12);
  float v6 = *(float *)(a2 + 16);
  uint64_t v7 = *(void *)(a2 + 24);
  sub_1009C1D4C();
  char v8 = static CRExtensible.== infix(_:_:)();
  char v9 = 0;
  if ((v8 & 1) != 0 && v2 == v5 && v3 == v6) {
    char v9 = sub_100ED60AC(v4, v7);
  }
  return v9 & 1;
}

double sub_100AAE0D4@<D0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  sub_100AB3F50(a1, (uint64_t)v6);
  if (!v2)
  {
    double result = *(double *)v6;
    long long v5 = v6[1];
    *a2 = v6[0];
    a2[1] = v5;
  }
  return result;
}

uint64_t sub_100AAE110(void *a1)
{
  return sub_100AADDF8(a1);
}

uint64_t sub_100AAE144(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_100AB7DD0();

  return CRExtendableValueStruct.copy(renamingReferences:)(a1, a2, v4);
}

uint64_t sub_100AAE198(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_100AB7DD0();

  return CRExtendableValueStruct.copy(renamingReferences:)(a1, a2, v4);
}

uint64_t sub_100AAE1EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_100AB6EB8();
  unint64_t v7 = sub_100AB7E24();

  return CRValue<>.observableDifference(from:with:)(a1, a2, a3, v6, v7);
}

uint64_t sub_100AAE25C(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_100AB7DD0();

  return CRExtendableValueStruct.visitReferences(_:)(a1, a2, v4);
}

uint64_t sub_100AAE2A8()
{
  return CRValueStruct.init(from:)();
}

uint64_t sub_100AAE2F8()
{
  return CRValueStruct.encode(to:)();
}

uint64_t sub_100AAE340(uint64_t a1)
{
  unint64_t v2 = sub_100AB7150();

  return CRValueStruct.minEncodingVersion.getter(a1, v2);
}

uint64_t sub_100AAE38C()
{
  return RawRepresentable<>.init(from:)();
}

uint64_t sub_100AAE3EC()
{
  return RawRepresentable<>.encode(to:)();
}

uint64_t sub_100AAE43C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100AAE468(a1, a2, a3, a4, (uint64_t (*)(void))sub_100AB7E78, (uint64_t (*)(void))sub_100AB6DB0);
}

uint64_t sub_100AAE468(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void), uint64_t (*a6)(void))
{
  uint64_t v10 = a5();
  uint64_t v11 = a6();

  return CRValue<>.observableDifference(from:with:)(a1, a2, a3, v10, v11);
}

uint64_t sub_100AAE4EC()
{
  return CRValue<>.init(from:)();
}

uint64_t sub_100AAE558(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100AAE598(a1, a2, a3, (void (*)(void))sub_100AB7E78, (void (*)(void))sub_100AB0BAC);
}

uint64_t sub_100AAE598(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void), void (*a5)(void))
{
  return CRValue<>.encode(to:)();
}

uint64_t sub_100AAE608(uint64_t a1, uint64_t a2)
{
  return sub_100AAE634(a1, a2, (uint64_t (*)(void))sub_100AB7E78, (uint64_t (*)(void))sub_100AB0BAC);
}

uint64_t sub_100AAE634(uint64_t a1, uint64_t a2, uint64_t (*a3)(void), uint64_t (*a4)(void))
{
  uint64_t v6 = a3();
  uint64_t v7 = a4();

  return CRValue<>.minEncodingVersion.getter(a1, v6, v7, &protocol witness table for Int);
}

uint64_t sub_100AAE6A8(char a1)
{
  uint64_t result = 1701869940;
  switch(a1)
  {
    case 1:
      uint64_t result = 0xD000000000000014;
      break;
    case 2:
      uint64_t result = 0x724674657374756FLL;
      break;
    case 3:
      uint64_t result = 0x6F5474657374756FLL;
      break;
    case 4:
      unsigned int v3 = 1684104552;
      goto LABEL_7;
    case 5:
      unsigned int v3 = 1818845556;
LABEL_7:
      uint64_t result = v3 | 0x6E67614D00000000;
      break;
    case 6:
      uint64_t result = 0xD000000000000016;
      break;
    case 7:
      uint64_t result = 0xD000000000000010;
      break;
    default:
      return result;
  }
  return result;
}

BOOL sub_100AAE7B0(char *a1, char *a2)
{
  return qword_1011A4420[*a1] == qword_1011A4420[*a2];
}

Swift::Int sub_100AAE7D4()
{
  uint64_t v1 = *v0;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(qword_1011A4420[v1]);
  return Hasher._finalize()();
}

void sub_100AAE824()
{
  Hasher._combine(_:)(qword_1011A4420[*v0]);
}

Swift::Int sub_100AAE85C()
{
  uint64_t v1 = *v0;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(qword_1011A4420[v1]);
  return Hasher._finalize()();
}

uint64_t sub_100AAE8A8@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_100AB41BC(*a1);
  *a2 = result;
  return result;
}

void sub_100AAE8D4(void *a1@<X8>)
{
  *a1 = qword_1011A4420[*v1];
}

uint64_t sub_100AAE8EC()
{
  return sub_100AAE6A8(*v0);
}

uint64_t sub_100AAE8F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100AB41E8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_100AAE91C()
{
  return qword_1011A4420[*v0];
}

uint64_t sub_100AAE934@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_100AB41BC(a1);
  *a2 = result;
  return result;
}

void sub_100AAE95C(void *a1@<X8>)
{
  *a1 = &off_101503558;
}

uint64_t sub_100AAE96C(uint64_t a1, uint64_t a2)
{
  return sub_100AAE998(a1, a2, (uint64_t (*)(void))sub_100AAF3AC, (uint64_t (*)(void))sub_100AAF404);
}

uint64_t sub_100AAE998(uint64_t a1, uint64_t a2, uint64_t (*a3)(void), uint64_t (*a4)(void))
{
  uint64_t v7 = a3();
  uint64_t v8 = a4();

  return static CodingKey<>.intCases.getter(a1, a2, v7, v8);
}

uint64_t sub_100AAEA04(uint64_t a1)
{
  unint64_t v2 = sub_100AAF404();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100AAEA40(uint64_t a1)
{
  unint64_t v2 = sub_100AAF404();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100AAEA80(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_1005057FC(&qword_10168E8E8);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5, v7);
  char v9 = (char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10050F848(a1, a1[3]);
  sub_100AAF404();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  sub_10051B3EC(v3, (uint64_t)v16, &qword_10168E8B8);
  sub_10051B3EC((uint64_t)v16, (uint64_t)&v11, &qword_10168E8B8);
  char v13 = 0;
  sub_1005057FC(&qword_10168E8B8);
  sub_100A22280(&qword_10168E8F0, &qword_10168E8B8);
  KeyedEncodingContainer.encode<A>(_:forKey:)();
  if (!v2)
  {
    long long v11 = *(_OWORD *)(v3 + 16);
    uint64_t v12 = *(void *)(v3 + 32);
    char v13 = 1;
    sub_100AAD48C();
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    LOBYTE(v11) = 2;
    KeyedEncodingContainer.encode(_:forKey:)();
    LOBYTE(v11) = 3;
    KeyedEncodingContainer.encode(_:forKey:)();
    sub_10051B3EC(v3 + 48, (uint64_t)v15, &qword_10168E8F8);
    sub_10051B3EC((uint64_t)v15, (uint64_t)&v11, &qword_10168E8F8);
    char v13 = 4;
    sub_100AB4CF0();
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
    sub_10051B3EC(v3 + 80, (uint64_t)v14, &qword_10168E8F8);
    sub_10051B3EC((uint64_t)v14, (uint64_t)&v11, &qword_10168E8F8);
    char v13 = 5;
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
    LOBYTE(v11) = 6;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    *(void *)&long long v11 = *(void *)(v3 + 120);
    char v13 = 7;
    sub_1005057FC((uint64_t *)&unk_101687A40);
    sub_1005573B0();
    KeyedEncodingContainer.encode<A>(_:forKey:)();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v5);
}

uint64_t sub_100AAEDE4(_OWORD *a1, long long *a2)
{
  long long v2 = a1[5];
  v13[4] = a1[4];
  v13[5] = v2;
  long long v3 = a1[7];
  v13[6] = a1[6];
  v13[7] = v3;
  long long v4 = a1[1];
  v13[0] = *a1;
  v13[1] = v4;
  long long v5 = a1[3];
  v13[2] = a1[2];
  v13[3] = v5;
  long long v6 = *a2;
  long long v7 = a2[1];
  long long v8 = a2[3];
  v14[2] = a2[2];
  _DWORD v14[3] = v8;
  v14[0] = v6;
  v14[1] = v7;
  long long v9 = a2[4];
  long long v10 = a2[5];
  long long v11 = a2[7];
  v14[6] = a2[6];
  v14[7] = v11;
  v14[4] = v9;
  v14[5] = v10;
  return sub_100AAEA7C(v13, v14) & 1;
}

double sub_100AAEE58@<D0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  sub_100AB4518(a1, v9);
  if (!v2)
  {
    long long v5 = v13;
    a2[4] = v12;
    a2[5] = v5;
    long long v6 = v15;
    a2[6] = v14;
    a2[7] = v6;
    long long v7 = v9[1];
    *a2 = v9[0];
    a2[1] = v7;
    double result = *(double *)&v10;
    long long v8 = v11;
    a2[2] = v10;
    a2[3] = v8;
  }
  return result;
}

uint64_t sub_100AAEEAC(void *a1)
{
  return sub_100AAEA80(a1);
}

uint64_t sub_100AAEEF8(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_100AB4D44();

  return CRExtendableValueStruct.copy(renamingReferences:)(a1, a2, v4);
}

uint64_t sub_100AAEF4C(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_100AB4D44();

  return CRExtendableValueStruct.copy(renamingReferences:)(a1, a2, v4);
}

uint64_t sub_100AAEFA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_100AAF1F4();
  unint64_t v7 = sub_100AB4D98();

  return CRValue<>.observableDifference(from:with:)(a1, a2, a3, v6, v7);
}

uint64_t sub_100AAF010(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_100AB4D44();

  return CRExtendableValueStruct.visitReferences(_:)(a1, a2, v4);
}

uint64_t sub_100AAF05C()
{
  return CRValueStruct.init(from:)();
}

uint64_t sub_100AAF0AC()
{
  return CRValueStruct.encode(to:)();
}

uint64_t sub_100AAF0F4(uint64_t a1)
{
  unint64_t v2 = sub_100AAF534();

  return CRValueStruct.minEncodingVersion.getter(a1, v2);
}

unint64_t sub_100AAF144()
{
  unint64_t result = qword_10168E820;
  if (!qword_10168E820)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168E820);
  }
  return result;
}

unint64_t sub_100AAF19C()
{
  unint64_t result = qword_10168E828;
  if (!qword_10168E828)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168E828);
  }
  return result;
}

unint64_t sub_100AAF1F4()
{
  unint64_t result = qword_10168E830;
  if (!qword_10168E830)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168E830);
  }
  return result;
}

unint64_t sub_100AAF24C()
{
  unint64_t result = qword_10168E838;
  if (!qword_10168E838)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168E838);
  }
  return result;
}

unint64_t sub_100AAF2A4()
{
  unint64_t result = qword_10168E840;
  if (!qword_10168E840)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168E840);
  }
  return result;
}

unint64_t sub_100AAF2FC()
{
  unint64_t result = qword_10168E848;
  if (!qword_10168E848)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168E848);
  }
  return result;
}

unint64_t sub_100AAF354()
{
  unint64_t result = qword_10168E850;
  if (!qword_10168E850)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168E850);
  }
  return result;
}

unint64_t sub_100AAF3AC()
{
  unint64_t result = qword_10168E858;
  if (!qword_10168E858)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168E858);
  }
  return result;
}

unint64_t sub_100AAF404()
{
  unint64_t result = qword_10168E860;
  if (!qword_10168E860)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168E860);
  }
  return result;
}

unint64_t sub_100AAF45C()
{
  unint64_t result = qword_10168E868;
  if (!qword_10168E868)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168E868);
  }
  return result;
}

unint64_t sub_100AAF4B4()
{
  unint64_t result = qword_10168E870;
  if (!qword_10168E870)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168E870);
  }
  return result;
}

uint64_t sub_100AAF508()
{
  return sub_1006BFA64(&qword_10168E878, &qword_10168E880);
}

unint64_t sub_100AAF534()
{
  unint64_t result = qword_10168E888;
  if (!qword_10168E888)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168E888);
  }
  return result;
}

uint64_t sub_100AAF588(uint64_t a1, uint64_t a2, double a3, double a4, double a5, double a6, double a7, double a8)
{
  long long v15 = *(void (**)(uint64_t, double, double, double, double, double, double))(a1 + 32);
  swift_retain();
  v15(a2, a3, a4, a5, a6, a7, a8);

  return swift_release();
}

uint64_t sub_100AAF624(uint64_t a1, uint64_t a2)
{
  if ((static UUID.== infix(_:_:)() & 1) == 0) {
    return 0;
  }
  unint64_t v4 = (int *)type metadata accessor for CRLEditableBezierPathSourceData(0);
  if ((sub_1005BCE10(*(void *)(a1 + v4[5]), *(void *)(a2 + v4[5])) & 1) == 0) {
    return 0;
  }
  uint64_t v5 = v4[6];
  float v6 = *(float *)(a1 + v5);
  float v7 = *(float *)(a1 + v5 + 4);
  long long v8 = (float *)(a2 + v5);
  if (v6 != *v8 || v7 != v8[1]) {
    return 0;
  }
  uint64_t v11 = v4[7];
  uint64_t v12 = *(void *)(a1 + v11);
  uint64_t v13 = *(void *)(a2 + v11);

  return sub_100ED60AC(v12, v13);
}

uint64_t sub_100AAF6C8(uint64_t a1, uint64_t a2)
{
  if (*(float *)a1 == *(float *)a2
    && *(float *)(a1 + 4) == *(float *)(a2 + 4)
    && *(float *)(a1 + 8) == *(float *)(a2 + 8)
    && *(float *)(a1 + 12) == *(float *)(a2 + 12)
    && *(float *)(a1 + 16) == *(float *)(a2 + 16)
    && *(float *)(a1 + 20) == *(float *)(a2 + 20)
    && (sub_10051B3EC(a1 + 24, (uint64_t)v9, &qword_10168E8C8),
        sub_10051B3EC((uint64_t)v9, (uint64_t)v7, &qword_10168E8C8),
        sub_10051B3EC(a2 + 24, (uint64_t)v8, &qword_10168E8C8),
        sub_10051B3EC((uint64_t)v8, (uint64_t)&v6, &qword_10168E8C8),
        sub_1005C694C(),
        (static CRExtensible.== infix(_:_:)() & 1) != 0))
  {
    char v4 = sub_100ED60AC(*(void *)(a1 + 40), *(void *)(a2 + 40));
  }
  else
  {
    char v4 = 0;
  }
  return v4 & 1;
}

uint64_t sub_100AAF7EC(uint64_t a1, uint64_t a2)
{
  sub_10051B3EC(a1, (uint64_t)v38, &qword_10168E8B8);
  sub_10051B3EC((uint64_t)v38, (uint64_t)&v35, &qword_10168E8B8);
  sub_10051B3EC(a2, (uint64_t)v37, &qword_10168E8B8);
  sub_10051B3EC((uint64_t)v37, (uint64_t)&v33, &qword_10168E8B8);
  sub_100AB0BAC();
  if ((static CRExtensible.== infix(_:_:)() & 1) == 0) {
    goto LABEL_27;
  }
  float v4 = *(float *)(a1 + 24);
  float v5 = *(float *)(a1 + 28);
  uint64_t v6 = *(void *)(a1 + 32);
  float v7 = *(float *)(a2 + 24);
  float v8 = *(float *)(a2 + 28);
  uint64_t v9 = *(void *)(a2 + 32);
  BOOL v10 = sub_1005BA910(*(void *)(a1 + 16), *(void *)(a2 + 16));
  char v11 = 0;
  if (v10 && v4 == v7 && v5 == v8)
  {
    if ((sub_100ED60AC(v6, v9) & 1) == 0
      || *(float *)(a1 + 40) != *(float *)(a2 + 40)
      || *(float *)(a1 + 44) != *(float *)(a2 + 44))
    {
      goto LABEL_27;
    }
    uint64_t v13 = *(void *)(a1 + 72);
    uint64_t v14 = *(void *)(a2 + 72);
    if (v13)
    {
      if (!v14) {
        goto LABEL_27;
      }
      uint64_t v15 = *(void *)(a1 + 56);
      uint64_t v16 = *(void *)(a2 + 48);
      uint64_t v17 = *(void *)(a2 + 56);
      uint64_t v18 = *(void *)(a2 + 64);
      float v19 = *(float *)(a1 + 64);
      uint64_t v35 = *(void *)(a1 + 48);
      char v36 = v15 & 1;
      uint64_t v33 = v16;
      char v34 = v17 & 1;
      sub_1009C1D4C();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if ((static CRExtensible.== infix(_:_:)() & 1) == 0
        || *((float *)&v15 + 1) != *((float *)&v17 + 1)
        || v19 != *(float *)&v18)
      {
        goto LABEL_26;
      }
      char v20 = sub_100ED60AC(v13, v14);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v20 & 1) == 0) {
        goto LABEL_27;
      }
    }
    else if (v14)
    {
      goto LABEL_27;
    }
    uint64_t v21 = *(void *)(a1 + 104);
    uint64_t v22 = *(void *)(a2 + 104);
    if (!v21)
    {
      if (v22) {
        goto LABEL_27;
      }
LABEL_30:
      int v30 = *(unsigned __int8 *)(a1 + 112);
      int v31 = *(unsigned __int8 *)(a2 + 112);
      if (v30 != 2)
      {
        char v11 = 0;
        BOOL v32 = (v30 & 1) == 0;
        if (v31 == 2 || ((v32 ^ v31) & 1) == 0) {
          return v11 & 1;
        }
LABEL_35:
        char v11 = sub_100ED60AC(*(void *)(a1 + 120), *(void *)(a2 + 120));
        return v11 & 1;
      }
      if (v31 == 2) {
        goto LABEL_35;
      }
LABEL_27:
      char v11 = 0;
      return v11 & 1;
    }
    if (!v22) {
      goto LABEL_27;
    }
    uint64_t v23 = *(void *)(a1 + 88);
    uint64_t v24 = *(void *)(a2 + 80);
    uint64_t v25 = *(void *)(a2 + 88);
    uint64_t v26 = *(void *)(a2 + 96);
    float v27 = *(float *)(a1 + 96);
    uint64_t v35 = *(void *)(a1 + 80);
    char v36 = v23 & 1;
    uint64_t v33 = v24;
    char v34 = v25 & 1;
    sub_1009C1D4C();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if ((static CRExtensible.== infix(_:_:)() & 1) != 0
      && *((float *)&v23 + 1) == *((float *)&v25 + 1)
      && v27 == *(float *)&v26)
    {
      char v28 = sub_100ED60AC(v21, v22);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v28 & 1) == 0) {
        goto LABEL_27;
      }
      goto LABEL_30;
    }
LABEL_26:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_27;
  }
  return v11 & 1;
}

uint64_t sub_100AAFB10(uint64_t a1, uint64_t a2)
{
  if (*(float *)a1 == *(float *)a2
    && *(float *)(a1 + 4) == *(float *)(a2 + 4)
    && *(float *)(a1 + 8) == *(float *)(a2 + 8)
    && *(float *)(a1 + 12) == *(float *)(a2 + 12)
    && ((*(unsigned __int8 *)(a1 + 16) ^ *(unsigned __int8 *)(a2 + 16)) & 1) == 0
    && *(float *)(a1 + 20) == *(float *)(a2 + 20)
    && *(float *)(a1 + 24) == *(float *)(a2 + 24))
  {
    return sub_100ED60AC(*(void *)(a1 + 32), *(void *)(a2 + 32));
  }
  else
  {
    return 0;
  }
}

uint64_t sub_100AAFB94(uint64_t a1, uint64_t a2)
{
  sub_10051B3EC(a1, (uint64_t)v9, &qword_10168E8A8);
  sub_10051B3EC((uint64_t)v9, (uint64_t)v7, &qword_10168E8A8);
  sub_10051B3EC(a2, (uint64_t)v8, &qword_10168E8A8);
  sub_10051B3EC((uint64_t)v8, (uint64_t)&v6, &qword_10168E8A8);
  sub_100AB0B58();
  if ((static CRExtensible.== infix(_:_:)() & 1) != 0
    && *(float *)(a1 + 12) == *(float *)(a2 + 12)
    && *(float *)(a1 + 16) == *(float *)(a2 + 16)
    && *(float *)(a1 + 20) == *(float *)(a2 + 20)
    && ((*(unsigned __int8 *)(a1 + 24) ^ *(unsigned __int8 *)(a2 + 24)) & 1) == 0
    && ((*(unsigned __int8 *)(a1 + 25) ^ *(unsigned __int8 *)(a2 + 25)) & 1) == 0)
  {
    char v4 = sub_100ED60AC(*(void *)(a1 + 32), *(void *)(a2 + 32));
  }
  else
  {
    char v4 = 0;
  }
  return v4 & 1;
}

uint64_t sub_100AAFCA4(uint64_t a1, uint64_t a2)
{
  sub_10051B3EC(a1, (uint64_t)v9, &qword_10168E898);
  sub_10051B3EC((uint64_t)v9, (uint64_t)v7, &qword_10168E898);
  sub_10051B3EC(a2, (uint64_t)v8, &qword_10168E898);
  sub_10051B3EC((uint64_t)v8, (uint64_t)&v6, &qword_10168E898);
  sub_100AB0B04();
  if ((static CRExtensible.== infix(_:_:)() & 1) != 0
    && *(float *)(a1 + 12) == *(float *)(a2 + 12)
    && *(float *)(a1 + 16) == *(float *)(a2 + 16)
    && *(float *)(a1 + 20) == *(float *)(a2 + 20)
    && *(float *)(a1 + 24) == *(float *)(a2 + 24))
  {
    char v4 = sub_100ED60AC(*(void *)(a1 + 32), *(void *)(a2 + 32));
  }
  else
  {
    char v4 = 0;
  }
  return v4 & 1;
}

uint64_t sub_100AAFDA4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  char v4 = (int *)type metadata accessor for CRLEditableBezierPathSourceData(0);
  uint64_t v84 = *((void *)v4 - 1);
  __chkstk_darwin(v4, v5);
  float v7 = (char *)&v77 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1005057FC(&qword_10168E890);
  __chkstk_darwin(v8, v9);
  char v11 = (char *)&v77 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1005057FC(&qword_10168B6F8);
  __chkstk_darwin(v12 - 8, v13);
  uint64_t v15 = (char *)&v77 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16, v17);
  float v19 = (char *)&v77 - v18;
  __chkstk_darwin(v20, v21);
  uint64_t v23 = (char *)&v77 - v22;
  if (*a1 != *a2 || a1[1] != a2[1]) {
    goto LABEL_3;
  }
  uint64_t v26 = *((void *)a1 + 2);
  uint64_t v27 = *((void *)a2 + 2);
  if (v26)
  {
    if (!v27) {
      goto LABEL_3;
    }
    if (*((void *)a1 + 1) != *((void *)a2 + 1) || v26 != v27)
    {
      char v28 = _stringCompareWithSmolCheck(_:_:expecting:)();
      char v24 = 0;
      if ((v28 & 1) == 0) {
        return v24 & 1;
      }
    }
  }
  else if (v27)
  {
    goto LABEL_3;
  }
  uint64_t v29 = *((void *)a1 + 4);
  uint64_t v30 = *((void *)a2 + 4);
  if (!v29)
  {
    if (v30) {
      goto LABEL_3;
    }
    goto LABEL_19;
  }
  if (!v30) {
    goto LABEL_3;
  }
  if (*((void *)a1 + 3) == *((void *)a2 + 3) && v29 == v30
    || (v31 = _stringCompareWithSmolCheck(_:_:expecting:)(), char v24 = 0, (v31 & 1) != 0))
  {
LABEL_19:
    BOOL v32 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))*((void *)a1 + 9);
    uint64_t v33 = (int *)*((void *)a2 + 9);
    if (v32)
    {
      if (!v33) {
        goto LABEL_3;
      }
      uint64_t v34 = *((void *)a1 + 6);
      uint64_t v35 = *((void *)a2 + 5);
      uint64_t v36 = *((void *)a2 + 6);
      uint64_t v37 = *((void *)a2 + 7);
      uint64_t v38 = *((void *)a2 + 8);
      uint64_t v40 = *((void *)a1 + 7);
      uint64_t v39 = *((void *)a1 + 8);
      uint64_t v116 = *((void *)a1 + 5);
      char v117 = v34 & 1;
      int v118 = HIDWORD(v34);
      uint64_t v119 = v40;
      int v120 = v39;
      long long v121 = v32;
      uint64_t v122 = v35;
      char v123 = v36 & 1;
      int v124 = HIDWORD(v36);
      uint64_t v125 = v37;
      int v126 = v38;
      uint64_t v127 = v33;
      uint64_t v82 = v32;
      uint64_t v83 = v33;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      LODWORD(v81) = sub_100AAFCA4((uint64_t)&v116, (uint64_t)&v122);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v81 & 1) == 0) {
        goto LABEL_3;
      }
    }
    else if (v33)
    {
      goto LABEL_3;
    }
    long long v41 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))*((void *)a1 + 14);
    uint64_t v42 = (int *)*((void *)a2 + 14);
    if (v41)
    {
      if (!v42) {
        goto LABEL_3;
      }
      uint64_t v43 = *((void *)a1 + 11);
      uint64_t v44 = *((void *)a2 + 10);
      uint64_t v45 = *((void *)a2 + 11);
      uint64_t v46 = *((void *)a2 + 12);
      uint64_t v47 = *((void *)a2 + 13);
      uint64_t v49 = *((void *)a1 + 12);
      uint64_t v48 = *((void *)a1 + 13);
      uint64_t v104 = *((void *)a1 + 10);
      char v105 = v43 & 1;
      int v106 = HIDWORD(v43);
      uint64_t v107 = v49;
      __int16 v108 = v48 & 0x101;
      int v109 = v41;
      uint64_t v110 = v44;
      char v111 = v45 & 1;
      int v112 = HIDWORD(v45);
      uint64_t v113 = v46;
      __int16 v114 = v47 & 0x101;
      uint64_t v115 = v42;
      uint64_t v82 = v41;
      uint64_t v83 = v42;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      LODWORD(v81) = sub_100AAFB94((uint64_t)&v104, (uint64_t)&v110);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v81 & 1) == 0) {
        goto LABEL_3;
      }
    }
    else if (v42)
    {
      goto LABEL_3;
    }
    uint64_t v51 = *((void *)a1 + 15);
    double v50 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))*((void *)a1 + 16);
    double v52 = (int *)*((void *)a1 + 17);
    uint64_t v53 = *((void *)a2 + 15);
    uint64_t v54 = *((void *)a2 + 17);
    if (v51)
    {
      if (v53)
      {
        uint64_t v78 = *((void *)a2 + 16);
        uint64_t v79 = v53;
        uint64_t v80 = v54;
        uint64_t v81 = v51;
        uint64_t v82 = v50;
        uint64_t v83 = v52;
        if (sub_1005BA910(v51, v53))
        {
          float v55 = *(float *)&v78;
          float v56 = *(float *)&v82;
          sub_10051A2E0(v81);
          sub_10051A2E0(v81);
          sub_10051A2E0(v79);
          if (v56 == v55 && *((float *)&v82 + 1) == *((float *)&v78 + 1))
          {
            LODWORD(v78) = sub_100ED60AC((uint64_t)v83, v80);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            sub_10051A034(v81);
            if ((v78 & 1) == 0) {
              goto LABEL_3;
            }
LABEL_40:
            id v61 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))*((void *)a1 + 22);
            uint64_t v62 = (int *)*((void *)a2 + 22);
            if (v61)
            {
              if (!v62) {
                goto LABEL_3;
              }
              uint64_t v63 = *((void *)a2 + 18);
              uint64_t v64 = *((void *)a2 + 19);
              uint64_t v65 = *((void *)a2 + 20);
              uint64_t v66 = *((void *)a2 + 21);
              uint64_t v67 = *((void *)a1 + 20);
              uint64_t v68 = *((void *)a1 + 21);
              uint64_t v69 = *((void *)a1 + 19);
              v94[0] = *((void *)a1 + 18);
              v94[1] = v69;
              char v95 = v67 & 1;
              int v96 = HIDWORD(v67);
              int v97 = v68;
              char v98 = v61;
              v99[0] = v63;
              v99[1] = v64;
              char v100 = v65 & 1;
              int v101 = HIDWORD(v65);
              int v102 = v66;
              uint64_t v103 = v62;
              uint64_t v82 = v61;
              uint64_t v83 = v62;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              LODWORD(v81) = sub_100AAFB10((uint64_t)v94, (uint64_t)v99);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              if ((v81 & 1) == 0) {
                goto LABEL_3;
              }
            }
            else if (v62)
            {
              goto LABEL_3;
            }
            sub_10051B3EC((uint64_t)(a1 + 184), (uint64_t)v90, &qword_10168A060);
            sub_10051B3EC((uint64_t)(a2 + 184), (uint64_t)v91, &qword_10168A060);
            sub_10051B3EC((uint64_t)v90, (uint64_t)v92, &qword_10168A060);
            if (sub_1008E0338((uint64_t)v92) == 1)
            {
              sub_10051B3EC((uint64_t)v91, (uint64_t)v88, &qword_10168A060);
              if (sub_1008E0338((uint64_t)v88) == 1)
              {
LABEL_51:
                uint64_t v83 = (int *)type metadata accessor for CRLPathSourceData(0);
                sub_100AB09D4((uint64_t)&a1[v83[13]], (uint64_t)v23);
                sub_100AB09D4((uint64_t)&a2[v83[13]], (uint64_t)v19);
                uint64_t v70 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))&v11[*(int *)(v8 + 48)];
                sub_100AB09D4((uint64_t)v23, (uint64_t)v11);
                uint64_t v82 = v70;
                sub_100AB09D4((uint64_t)v19, (uint64_t)v70);
                uint64_t v84 = *(void *)(v84 + 48);
                if (((unsigned int (*)(char *, uint64_t, int *))v84)(v11, 1, v4) == 1)
                {
                  sub_100522F00((uint64_t)v19, &qword_10168B6F8);
                  sub_100522F00((uint64_t)v23, &qword_10168B6F8);
                  if (((unsigned int (*)(void, uint64_t, int *))v84)(v82, 1, v4) == 1)
                  {
                    sub_100522F00((uint64_t)v11, &qword_10168B6F8);
LABEL_54:
                    char v24 = sub_100ED60AC(*(void *)&a1[v83[14]], *(void *)&a2[v83[14]]);
                    return v24 & 1;
                  }
                  uint64_t v71 = &qword_10168E890;
                  goto LABEL_66;
                }
                sub_100AB09D4((uint64_t)v11, (uint64_t)v15);
                if (((unsigned int (*)(void, uint64_t, int *))v84)(v82, 1, v4) == 1)
                {
                  uint64_t v71 = &qword_10168E890;
LABEL_65:
                  sub_100522F00((uint64_t)v19, &qword_10168B6F8);
                  sub_100522F00((uint64_t)v23, &qword_10168B6F8);
                  sub_100AB5148((uint64_t)v15, type metadata accessor for CRLEditableBezierPathSourceData);
LABEL_66:
                  sub_100522F00((uint64_t)v11, v71);
                  goto LABEL_3;
                }
                sub_100AB0A3C((uint64_t)v82, (uint64_t)v7);
                if ((static UUID.== infix(_:_:)() & 1) == 0
                  || (sub_1005BCE10(*(void *)&v15[v4[5]], *(void *)&v7[v4[5]]) & 1) == 0
                  || (uint64_t v72 = v4[6], v73 = &v15[v72], v74 = *(float *)&v15[v72], v75 = (float *)&v7[v72], v74 != *v75)
                  || *((float *)v73 + 1) != v75[1])
                {
                  sub_100AB5148((uint64_t)v7, type metadata accessor for CRLEditableBezierPathSourceData);
                  uint64_t v71 = &qword_10168B6F8;
                  goto LABEL_65;
                }
                char v76 = sub_100ED60AC(*(void *)&v15[v4[7]], *(void *)&v7[v4[7]]);
                sub_100AB5148((uint64_t)v7, type metadata accessor for CRLEditableBezierPathSourceData);
                sub_100522F00((uint64_t)v19, &qword_10168B6F8);
                sub_100522F00((uint64_t)v23, &qword_10168B6F8);
                sub_100AB5148((uint64_t)v15, type metadata accessor for CRLEditableBezierPathSourceData);
                sub_100522F00((uint64_t)v11, &qword_10168B6F8);
                if (v76) {
                  goto LABEL_54;
                }
LABEL_3:
                char v24 = 0;
                return v24 & 1;
              }
            }
            else
            {
              sub_10051B3EC((uint64_t)v91, (uint64_t)v87, &qword_10168A060);
              if (sub_1008E0338((uint64_t)v87) != 1)
              {
                sub_10051B3EC((uint64_t)v90, (uint64_t)v85, &qword_10168A060);
                v93[4] = v85[4];
                v93[5] = v85[5];
                v93[6] = v85[6];
                v93[7] = v85[7];
                v93[0] = v85[0];
                v93[1] = v85[1];
                v93[2] = v85[2];
                v93[3] = v85[3];
                sub_10051B3EC((uint64_t)v91, (uint64_t)v86, &qword_10168A060);
                v88[4] = v86[4];
                v88[5] = v86[5];
                v88[6] = v86[6];
                v88[7] = v86[7];
                v88[0] = v86[0];
                v88[1] = v86[1];
                v88[2] = v86[2];
                v88[3] = v86[3];
                uint64_t v83 = (int *)sub_100AB0810;
                sub_100AB0AA0(v90, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_100AB0810);
                sub_100AB0AA0(v91, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))v83);
                LODWORD(v83) = sub_100AAF7EC((uint64_t)v93, (uint64_t)v88);
                uint64_t v82 = sub_100AB0964;
                sub_100AB0AA0(v91, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_100AB0964);
                sub_100AB0AA0(v90, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))v82);
                if ((v83 & 1) == 0) {
                  goto LABEL_3;
                }
                goto LABEL_51;
              }
            }
            sub_10051B3EC((uint64_t)v90, (uint64_t)v88, &qword_10168A060);
            sub_10051B3EC((uint64_t)v91, (uint64_t)&v89, &qword_10168A060);
            sub_100AB0AA0(v90, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_100AB0810);
            sub_100AB0AA0(v91, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_100AB0810);
            sub_100AB0880((uint64_t *)v88);
            goto LABEL_3;
          }
        }
        else
        {
          uint64_t v59 = v81;
          sub_10051A2E0(v81);
          sub_10051A2E0(v59);
          sub_10051A2E0(v79);
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v60 = v81;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_10051A034(v60);
        goto LABEL_3;
      }
    }
    else if (!v53)
    {
      goto LABEL_40;
    }
    uint64_t v57 = *((void *)a1 + 15);
    uint64_t v58 = *((void *)a2 + 15);
    sub_10051A2E0(v57);
    sub_10051A2E0(v58);
    sub_10051A034(v57);
    sub_10051A034(v58);
    goto LABEL_3;
  }
  return v24 & 1;
}

uint64_t sub_100AB0810(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a3)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t *sub_100AB0880(uint64_t *a1)
{
  uint64_t v2 = a1[17];
  uint64_t v5 = a1[16];
  uint64_t v3 = a1[18];
  sub_100AB0964(*a1, a1[1], a1[2]);
  sub_100AB0964(v5, v2, v3);
  return a1;
}

uint64_t sub_100AB0964(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a3)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_100AB09D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1005057FC(&qword_10168B6F8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100AB0A3C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CRLEditableBezierPathSourceData(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void *sub_100AB0AA0(void *a1, void (*a2)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))
{
  return a1;
}

unint64_t sub_100AB0B04()
{
  unint64_t result = qword_10168E8A0;
  if (!qword_10168E8A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168E8A0);
  }
  return result;
}

unint64_t sub_100AB0B58()
{
  unint64_t result = qword_10168E8B0;
  if (!qword_10168E8B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168E8B0);
  }
  return result;
}

unint64_t sub_100AB0BAC()
{
  unint64_t result = qword_10168E8C0;
  if (!qword_10168E8C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168E8C0);
  }
  return result;
}

unsigned char *sub_100AB0C00(unsigned __int8 *a1)
{
  uint64_t v2 = sub_1005057FC(&qword_10168B6F8);
  __chkstk_darwin(v2 - 8, v3);
  uint64_t v5 = &v39[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = type metadata accessor for CRLEditableBezierPathSourceData(0);
  float v7 = *(const char **)(v6 - 8);
  uint64_t v9 = __chkstk_darwin(v6, v8);
  char v11 = &v39[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v9, v12);
  uint64_t v14 = (uint64_t)&v39[-v13];
  uint64_t v15 = *((void *)a1 + 9);
  if (v15)
  {
    uint64_t v17 = *((void *)a1 + 7);
    uint64_t v16 = *((void *)a1 + 8);
    uint64_t v18 = *((void *)a1 + 6);
    *(void *)&long long v41 = *((void *)a1 + 5);
    BYTE8(v41) = v18 & 1;
    HIDWORD(v41) = HIDWORD(v18);
    *(void *)&long long v42 = v17;
    DWORD2(v42) = v16;
    *(void *)&long long v43 = v15;
    sub_10050BF48(0, &qword_10168E9F8);
    swift_bridgeObjectRetain();
    float v19 = sub_100AA84C8((float *)&v41);
LABEL_5:
    uint64_t v5 = v19;
    goto LABEL_6;
  }
  uint64_t v20 = *((void *)a1 + 14);
  if (v20)
  {
    int v21 = *((_DWORD *)a1 + 26);
    uint64_t v23 = *((void *)a1 + 11);
    uint64_t v22 = *((void *)a1 + 12);
    *(void *)&long long v41 = *((void *)a1 + 10);
    BYTE8(v41) = v23 & 1;
    HIDWORD(v41) = HIDWORD(v23);
    *(void *)&long long v42 = v22;
    WORD4(v42) = v21 & 0x101;
    *(void *)&long long v43 = v20;
    sub_10050BF48(0, &qword_10168E9F0);
    swift_bridgeObjectRetain();
    float v19 = sub_100AA8618((uint64_t)&v41);
    goto LABEL_5;
  }
  sub_10051B3EC((uint64_t)(a1 + 184), (uint64_t)v39, &qword_10168A060);
  sub_10051B3EC((uint64_t)v39, (uint64_t)v40, &qword_10168A060);
  if (sub_1008E0338((uint64_t)v40) == 1)
  {
    uint64_t v27 = *((void *)a1 + 15);
    if (!v27) {
      goto LABEL_21;
    }
    id v28 = objc_allocWithZone((Class)CRLBezierPathSource);
    sub_10050BF48(0, (unint64_t *)&qword_101680C50);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v29 = sub_100ABF740(v27);
    swift_bridgeObjectRelease();
    uint64_t v5 = [v28 initWithBezierPath:v29];

    if (v5) {
      goto LABEL_6;
    }
    __break(1u);
  }
  long long v45 = v40[4];
  long long v46 = v40[5];
  long long v47 = v40[6];
  long long v48 = v40[7];
  long long v41 = v40[0];
  long long v42 = v40[1];
  long long v43 = v40[2];
  long long v44 = v40[3];
  sub_10050BF48(0, (unint64_t *)&unk_10168A0E0);
  sub_100AB4C18((uint64_t)v40);
  float v19 = (unsigned char *)sub_100AA8778((uint64_t)&v41);
  if (v19) {
    goto LABEL_5;
  }
  uint64_t v6 = 2;
  float v7 = "Unable to make connection line path source from connection line path data. Falling back to rectangle.";
  uint64_t v14 = (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCanvas/CRLPathSourceData.swift";
  sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"createPathSource(data:)", 23, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCanvas/CRLPathSourceData.swift", 87, 2, 222, (uint64_t)"Unable to make connection line path source from connection line path data. Falling back to rectangle.", 101, 2u, (uint64_t)&_swiftEmptyArrayStorage);
  sub_1005598CC((uint64_t)&_swiftEmptyArrayStorage, (uint64_t)"createPathSource(data:)", 23, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCanvas/CRLPathSourceData.swift", 87, 2, 222);
  double v30 = sub_100064070();
  char v11 = (char *)[self bezierPathWithRect:v30, v31, v32, v33];
  uint64_t v5 = [objc_allocWithZone((Class)CRLBezierPathSource) initWithBezierPath:v11];

  if (v5) {
    goto LABEL_6;
  }
  __break(1u);
LABEL_21:
  if (*((void *)a1 + 22))
  {
    float v19 = [objc_allocWithZone((Class)CRLCalloutPathSource) initWithCornerRadius:*((_DWORD *)a1 + 40) & 1 tailPosition:*((float *)a1 + 39) tailSize:*((float *)a1 + 36) naturalSize:*((float *)a1 + 37) tailAtCenter:*((float *)a1 + 38)];
    goto LABEL_5;
  }
  uint64_t v34 = type metadata accessor for CRLPathSourceData(0);
  sub_100AB09D4((uint64_t)&a1[*(int *)(v34 + 52)], (uint64_t)v5);
  if ((*((unsigned int (**)(unsigned char *, uint64_t, uint64_t))v7 + 6))(v5, 1, v6) == 1)
  {
    sub_100522F00((uint64_t)v5, &qword_10168B6F8);
    uint64_t v14 = 2;
    char v11 = "/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCanvas/CRLPathSourceData.swift";
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"createPathSource(data:)", 23, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCanvas/CRLPathSourceData.swift", 87, 2, 232, (uint64_t)"Missing path source type specific data. Falling back to rectangle.", 66, 2u, (uint64_t)&_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)&_swiftEmptyArrayStorage, (uint64_t)"createPathSource(data:)", 23, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCanvas/CRLPathSourceData.swift", 87, 2, 232);
    double v35 = sub_100064070();
    a1 = [self bezierPathWithRect:v35, v36, v37, v38];
    uint64_t v5 = [objc_allocWithZone((Class)CRLBezierPathSource) initWithBezierPath:a1];

    if (v5) {
      return v5;
    }
    __break(1u);
  }
  sub_100AB0A3C((uint64_t)v5, v14);
  sub_10050BF48(0, &qword_10168E4D0);
  sub_100AB50E0(v14, (uint64_t)v11, type metadata accessor for CRLEditableBezierPathSourceData);
  uint64_t v5 = sub_100AA8BF8((uint64_t)v11);
  sub_100AB5148(v14, type metadata accessor for CRLEditableBezierPathSourceData);
LABEL_6:
  [v5 setHasHorizontalFlip:*a1];
  [v5 setHasVerticalFlip:a1[1]];
  if (*((void *)a1 + 2)) {
    NSString v24 = String._bridgeToObjectiveC()();
  }
  else {
    NSString v24 = 0;
  }
  [v5 setLocalizationKey:v24];

  if (*((void *)a1 + 4)) {
    NSString v25 = String._bridgeToObjectiveC()();
  }
  else {
    NSString v25 = 0;
  }
  [v5 setUserDefinedName:v25];

  return v5;
}

float sub_100AB12F8@<S0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = (uint64_t)[a1 type];
  uint64_t v5 = v4;
  if (v4 <= 9)
  {
    if ((unint64_t)v4 < 2) {
      goto LABEL_10;
    }
LABEL_7:
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"init(archiving:)", 16, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCanvas/CRLPathSourceData.swift", 87, 2, 292, (uint64_t)"Unknown point path source type. Falling back to left single arrow.", 66, 2u, (uint64_t)_swiftEmptyArrayStorage);
    LOBYTE(v15) = 2;
    uint64_t v13 = "Unknown point path source type. Falling back to left single arrow.";
    uint64_t v14 = 66;
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"init(archiving:)", 16, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCanvas/CRLPathSourceData.swift", 87, 2, 292);
    uint64_t v5 = 0;
    goto LABEL_10;
  }
  if (v4 == 10)
  {
    uint64_t v5 = 2;
    goto LABEL_10;
  }
  if (v4 == 100)
  {
    uint64_t v5 = 3;
    goto LABEL_10;
  }
  if (v4 != 200) {
    goto LABEL_7;
  }
  uint64_t v5 = 4;
LABEL_10:
  [a1 point:v13, v14, v15];
  float v7 = v6;
  float v9 = v8;
  [a1 naturalSize];
  float result = v10;
  *(float *)&double v12 = v12;
  *(void *)a2 = v5;
  *(unsigned char *)(a2 + 8) = 0;
  *(float *)(a2 + 12) = v7;
  *(float *)(a2 + 16) = v9;
  *(float *)(a2 + 20) = result;
  *(_DWORD *)(a2 + 24) = LODWORD(v12);
  *(void *)(a2 + 32) = &_swiftEmptyDictionarySingleton;
  return result;
}

id sub_100AB1470@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  id v4 = [a1 type];
  id v5 = v4;
  if (v4 == (id)2 || v4 == (id)1)
  {
    unsigned __int8 v6 = 0;
  }
  else if (v4)
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"init(archiving:)", 16, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCanvas/CRLPathSourceData.swift", 87, 2, 373, (uint64_t)"Unknown point path source type. Falling back to rounded rectangle.", 66, 2u, (uint64_t)_swiftEmptyArrayStorage);
    LOBYTE(v16) = 2;
    uint64_t v14 = "Unknown point path source type. Falling back to rounded rectangle.";
    uint64_t v15 = 66;
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"init(archiving:)", 16, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCanvas/CRLPathSourceData.swift", 87, 2, 373);
    id v5 = 0;
    unsigned __int8 v6 = 1;
  }
  else
  {
    unsigned __int8 v6 = [a1 isCurveContinuous];
  }
  [a1 scalar:v14, v15, v16];
  float v8 = v7;
  [a1 naturalSize];
  float v10 = v9;
  float v12 = v11;
  id result = [a1 shouldShowKnob];
  *(void *)a2 = v5;
  *(unsigned char *)(a2 + 8) = 0;
  *(float *)(a2 + 12) = v8;
  *(float *)(a2 + 16) = v10;
  *(float *)(a2 + 20) = v12;
  *(unsigned char *)(a2 + 24) = v6;
  *(unsigned char *)(a2 + 25) = (_BYTE)result;
  *(void *)(a2 + 32) = &_swiftEmptyDictionarySingleton;
  return result;
}

unint64_t sub_100AB15F8(unint64_t result)
{
  if (result >= 8) {
    return 8;
  }
  return result;
}

void sub_100AB1608(void *a1@<X0>, uint64_t a2@<X8>)
{
  id v4 = [a1 type];
  if ((unint64_t)v4 >= 2)
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"init(archiving:)", 16, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCanvas/CRLPathSourceData.swift", 87, 2, 757, (uint64_t)"Unknown point path source type. Falling back to quadratic.", 58, 2u, (uint64_t)_swiftEmptyArrayStorage);
    LOBYTE(v51) = 2;
    uint64_t v49 = "Unknown point path source type. Falling back to quadratic.";
    uint64_t v50 = 58;
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"init(archiving:)", 16, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCanvas/CRLPathSourceData.swift", 87, 2, 757);
    id v4 = 0;
  }
  [a1 outsetFrom:v49, v50, v51];
  double v6 = v5;
  [a1 outsetTo];
  double v8 = v7;
  id v9 = a1;
  id v10 = [v9 bezierPathWithoutFlips];
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = _swiftEmptyArrayStorage;
  float v12 = (uint64_t *)(v11 + 16);
  aBlock[4] = sub_10089DD4C;
  aBlock[5] = v11;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = *(void *)"";
  void aBlock[2] = sub_100AAF588;
  void aBlock[3] = &unk_101520C18;
  uint64_t v13 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  [v10 iteratePathElementsWithBlock:v13];

  _Block_release(v13);
  swift_beginAccess();
  uint64_t v14 = *v12;
  swift_bridgeObjectRetain();
  swift_release();
  [v9 naturalSize];
  double v16 = v15;
  double v18 = v17;

  id v19 = [v9 headMagnet];
  id v54 = v4;
  if (v19)
  {
    uint64_t v20 = v19;
    unint64_t v21 = (unint64_t)[v19 magnetType];
    [v20 magnetNormalizedPosition];
    double v23 = v22;
    double v25 = v24;

    if ((v21 & 0x8000000000000000) != 0)
    {
      __break(1u);
      goto LABEL_13;
    }
    *(float *)&unsigned int v26 = v25;
    *(float *)&unsigned int v27 = v23;
    unint64_t v28 = (v21 > 7) | ((unint64_t)v27 << 32);
    uint64_t v29 = v26;
    double v30 = &_swiftEmptyDictionarySingleton;
  }
  else
  {
    unint64_t v21 = 0;
    unint64_t v28 = 0;
    uint64_t v29 = 0;
    double v30 = 0;
  }
  id v31 = [v9 tailMagnet];
  double v32 = v31;
  unint64_t v53 = v28;
  double v52 = v30;
  if (!v31)
  {
    uint64_t v38 = v14;
    id v39 = v54;
    unint64_t v33 = 0;
    uint64_t v42 = 0;
    long long v43 = 0;
    goto LABEL_11;
  }
  unint64_t v33 = (unint64_t)[v31 magnetType];
  [v32 magnetNormalizedPosition];
  double v35 = v34;
  double v37 = v36;

  if ((v33 & 0x8000000000000000) == 0)
  {
    uint64_t v38 = v14;
    id v39 = v54;
    *(float *)&unsigned int v40 = v37;
    *(float *)&unsigned int v41 = v35;
    double v32 = (void *)((v33 > 7) | ((unint64_t)v41 << 32));
    uint64_t v42 = v40;
    long long v43 = &_swiftEmptyDictionarySingleton;
LABEL_11:
    unsigned __int8 v48 = [v9 userDidSetControlPoint];
    *(void *)a2 = v39;
    *(unsigned char *)(a2 + 8) = 0;
    *(void *)(a2 + 16) = v38;
    float v45 = v16;
    *(float *)(a2 + 24) = v45;
    float v44 = v18;
    *(float *)(a2 + 28) = v44;
    *(void *)(a2 + 32) = &_swiftEmptyDictionarySingleton;
    float v47 = v6;
    *(float *)(a2 + 40) = v47;
    float v46 = v8;
    *(float *)(a2 + 44) = v46;
    *(void *)(a2 + 48) = v21;
    *(void *)(a2 + 56) = v53;
    *(void *)(a2 + 64) = v29;
    *(void *)(a2 + 72) = v52;
    *(void *)(a2 + 80) = v33;
    *(void *)(a2 + 88) = v32;
    *(void *)(a2 + 96) = v42;
    *(void *)(a2 + 104) = v43;
    *(unsigned char *)(a2 + 112) = v48;
    *(void *)(a2 + 120) = &_swiftEmptyDictionarySingleton;
    return;
  }
LABEL_13:
  __break(1u);
}

uint64_t sub_100AB19F4(uint64_t a1)
{
  if ((unint64_t)(a1 + 1) > 0xA) {
    return 11;
  }
  else {
    return byte_1011A4460[a1 + 1];
  }
}

uint64_t sub_100AB1A18(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000011 && a2 == 0x800000010126E940
    || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6974726556736168 && a2 == 0xEF70696C466C6163 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x617A696C61636F6CLL && a2 == 0xEF79654B6E6F6974 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6966654472657375 && a2 == 0xEF656D614E64656ELL {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x800000010126E960 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x800000010126E980 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x800000010126E900 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x800000010126E9A0 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD00000000000001CLL && a2 == 0x800000010126E9C0 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0xD00000000000001CLL && a2 == 0x800000010126E9E0 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x800000010123A720)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else
  {
    char v5 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v5) {
      return 10;
    }
    else {
      return 11;
    }
  }
}

unint64_t sub_100AB1EB4(unint64_t result)
{
  if (result >= 5) {
    return 5;
  }
  return result;
}

uint64_t sub_100AB1EC4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1701869940 && a2 == 0xE400000000000000;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x746E696F70 && a2 == 0xE500000000000000 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x536C61727574616ELL && a2 == 0xEB00000000657A69 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x800000010123A720)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_100AB207C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_1005057FC(&qword_10168ED38);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5, v7);
  id v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10050F848(a1, a1[3]);
  sub_100AB6098();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v2) {
    return _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)a1);
  }
  sub_1005057FC(&qword_10168E898);
  char v18 = 0;
  sub_100A22280(&qword_10168ED40, &qword_10168E898);
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  uint64_t v10 = v16;
  char v11 = v17;
  char v18 = 1;
  sub_10089DB08();
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  uint64_t v12 = v16;
  char v18 = 2;
  sub_100AB4DEC();
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  uint64_t v13 = v16;
  sub_1005057FC((uint64_t *)&unk_101687A40);
  char v18 = 3;
  sub_100557304();
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  uint64_t v14 = v16;
  uint64_t result = _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)a1);
  *(void *)a2 = v10;
  *(unsigned char *)(a2 + 8) = v11;
  *(void *)(a2 + 12) = v12;
  *(void *)(a2 + 20) = v13;
  *(void *)(a2 + 32) = v14;
  return result;
}

uint64_t sub_100AB232C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1701869940 && a2 == 0xE400000000000000;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x72616C616373 && a2 == 0xE600000000000000 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x536C61727574616ELL && a2 == 0xEB00000000657A69 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x800000010126ED40 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6853646C756F6873 && a2 == 0xEE00626F6E4B776FLL {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x800000010123A720)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v6) {
      return 5;
    }
    else {
      return 6;
    }
  }
}

uint64_t sub_100AB25C8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_1005057FC(&qword_10168ED48);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5, v7);
  id v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10050F848(a1, a1[3]);
  sub_100AB6438();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v2)
  {
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)a1);
    return swift_bridgeObjectRelease();
  }
  else
  {
    sub_1005057FC(&qword_10168E8A8);
    char v22 = 0;
    sub_100A22280(&qword_10168ED50, &qword_10168E8A8);
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    uint64_t v10 = v19;
    char v11 = v20;
    LOBYTE(v19) = 1;
    KeyedDecodingContainer.decode(_:forKey:)();
    int v13 = v12;
    char v22 = 2;
    sub_100AB4DEC();
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    uint64_t v14 = v19;
    LOBYTE(v19) = 3;
    int v21 = KeyedDecodingContainer.decode(_:forKey:)();
    LOBYTE(v19) = 4;
    int v18 = KeyedDecodingContainer.decode(_:forKey:)();
    sub_1005057FC((uint64_t *)&unk_101687A40);
    char v22 = 5;
    sub_100557304();
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    v21 &= 1u;
    v18 &= 1u;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
    uint64_t v15 = v19;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)a1);
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)a2 = v10;
    *(unsigned char *)(a2 + 8) = v11;
    *(_DWORD *)(a2 + 12) = v13;
    *(void *)(a2 + 16) = v14;
    *(unsigned char *)(a2 + 24) = v21;
    *(unsigned char *)(a2 + 25) = v18;
    *(void *)(a2 + 32) = v15;
  }
  return result;
}

uint64_t sub_100AB2900(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x69736F506C696174 && a2 == 0xEC0000006E6F6974;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x657A69536C696174 && a2 == 0xE800000000000000 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x615272656E726F63 && a2 == 0xEC00000073756964 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x61547265746E6563 && a2 == 0xEA00000000006C69 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x536C61727574616ELL && a2 == 0xEB00000000657A69 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x800000010123A720)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v6) {
      return 5;
    }
    else {
      return 6;
    }
  }
}

uint64_t sub_100AB2BD4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_1005057FC(&qword_10168ED58);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5, v7);
  id v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10050F848(a1, a1[3]);
  sub_100AB67D8();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v2)
  {
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)a1);
    return swift_bridgeObjectRelease();
  }
  else
  {
    char v20 = 0;
    sub_10089DB08();
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    uint64_t v10 = v21;
    LOBYTE(v21) = 1;
    KeyedDecodingContainer.decode(_:forKey:)();
    int v12 = v11;
    LOBYTE(v21) = 2;
    KeyedDecodingContainer.decode(_:forKey:)();
    int v14 = v13;
    LOBYTE(v21) = 3;
    char v15 = KeyedDecodingContainer.decode(_:forKey:)();
    char v20 = 4;
    sub_100AB4DEC();
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    uint64_t v16 = v21;
    sub_1005057FC((uint64_t *)&unk_101687A40);
    char v20 = 5;
    sub_100557304();
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
    uint64_t v17 = v21;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)a1);
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)a2 = v10;
    *(_DWORD *)(a2 + 8) = v12;
    *(_DWORD *)(a2 + 12) = v14;
    *(unsigned char *)(a2 + 16) = v15 & 1;
    *(void *)(a2 + 20) = v16;
    *(void *)(a2 + 32) = v17;
  }
  return result;
}

uint64_t sub_100AB2EBC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x61507265697A6562 && a2 == 0xEE00617461446874;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x536C61727574616ELL && a2 == 0xEB00000000657A69 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x800000010123A720)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

float sub_100AB304C(void *a1)
{
  uint64_t v4 = sub_1005057FC(&qword_10168E918);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4, v6);
  uint64_t v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10050F848(a1, a1[3]);
  sub_100AAD5EC();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v1)
  {
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)a1);
  }
  else
  {
    HIBYTE(v10) = 0;
    sub_10089DAB4();
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    HIBYTE(v10) = 1;
    sub_100AB4DEC();
    swift_bridgeObjectRetain();
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    float v2 = *(float *)&v11;
    sub_1005057FC((uint64_t *)&unk_101687A40);
    HIBYTE(v10) = 2;
    sub_100557304();
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
    swift_bridgeObjectRetain();
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v2;
}

uint64_t sub_100AB32D4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6F72746E6F436E69 && a2 == 0xEE00746E696F506CLL;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E696F5065646F6ELL && a2 == 0xE900000000000074 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x72746E6F4374756FLL && a2 == 0xEF746E696F506C6FLL {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 1701869940 && a2 == 0xE400000000000000 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x800000010123A720)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v6) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

uint64_t sub_100AB3534@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_1005057FC(&qword_10168ED88);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5, v7);
  id v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10050F848(a1, a1[3]);
  sub_100AB79E8();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v2)
  {
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)a1);
    return swift_bridgeObjectRelease();
  }
  else
  {
    char v19 = 0;
    sub_10089DB08();
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    uint64_t v10 = v17;
    char v19 = 1;
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    uint64_t v11 = v17;
    char v19 = 2;
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    uint64_t v12 = v17;
    sub_1005057FC(&qword_10168E8C8);
    char v19 = 3;
    sub_100A22280(&qword_10168ED90, &qword_10168E8C8);
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    uint64_t v13 = v17;
    char v14 = v18;
    sub_1005057FC((uint64_t *)&unk_101687A40);
    char v19 = 4;
    sub_100557304();
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
    uint64_t v15 = v17;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)a1);
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)a2 = v10;
    *(void *)(a2 + 8) = v11;
    *(void *)(a2 + 16) = v12;
    *(void *)(a2 + 24) = v13;
    *(unsigned char *)(a2 + 32) = v14;
    *(void *)(a2 + 40) = v15;
  }
  return result;
}

uint64_t sub_100AB3850(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x7365646F6ELL && a2 == 0xE500000000000000;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6465736F6C63 && a2 == 0xE600000000000000 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x800000010123A720)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_100AB3994(void *a1)
{
  uint64_t v3 = sub_1005057FC(&qword_10168ED10);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3, v5);
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = a1[3];
  sub_10050F848(a1, v8);
  sub_100AB6B78();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v1)
  {
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)a1);
  }
  else
  {
    sub_1005057FC(&qword_10168ED18);
    HIBYTE(v10) = 0;
    sub_100AB7B6C(&qword_10168ED20, &qword_10168ED18, (void (*)(void))sub_100AB7830);
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    uint64_t v8 = v11;
    LOBYTE(v11) = 1;
    swift_bridgeObjectRetain();
    KeyedDecodingContainer.decode(_:forKey:)();
    sub_1005057FC((uint64_t *)&unk_101687A40);
    HIBYTE(v10) = 2;
    sub_100557304();
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
    swift_bridgeObjectRetain();
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v8;
}

uint64_t sub_100AB3C38(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1684632949 && a2 == 0xE400000000000000;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7368746170627573 && a2 == 0xE800000000000000 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x536C61727574616ELL && a2 == 0xEB00000000657A69 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x800000010123A720)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_100AB3DF8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x795474656E67616DLL && a2 == 0xEA00000000006570;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x800000010126ED20 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x800000010123A720)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_100AB3F50@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_1005057FC(&qword_10168ECF0);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5, v7);
  id v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10050F848(a1, a1[3]);
  sub_100AB7020();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v2) {
    return _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)a1);
  }
  sub_1005057FC(&qword_10168EA00);
  char v16 = 0;
  sub_100A22280(&qword_10168ECF8, &qword_10168EA00);
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  uint64_t v10 = v17;
  char v11 = v18;
  char v16 = 1;
  sub_10089DB08();
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  uint64_t v12 = v17;
  sub_1005057FC((uint64_t *)&unk_101687A40);
  char v16 = 2;
  sub_100557304();
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  uint64_t v13 = v17;
  uint64_t result = _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)a1);
  *(void *)a2 = v10;
  *(unsigned char *)(a2 + 8) = v11;
  *(void *)(a2 + 12) = v12;
  *(void *)(a2 + 24) = v13;
  return result;
}

uint64_t sub_100AB41BC(uint64_t a1)
{
  if ((unint64_t)(a1 + 1) >= 8) {
    return 8;
  }
  else {
    return (0x605040302010007uLL >> (8 * (a1 + 1)));
  }
}

uint64_t sub_100AB41E8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1701869940 && a2 == 0xE400000000000000;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x800000010126E900 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x724674657374756FLL && a2 == 0xEA00000000006D6FLL {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6F5474657374756FLL && a2 == 0xE800000000000000 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6E67614D64616568 && a2 == 0xEA00000000007465 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6E67614D6C696174 && a2 == 0xEA00000000007465 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x800000010126E920 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x800000010123A720)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v6) {
      return 7;
    }
    else {
      return 8;
    }
  }
}

uint64_t sub_100AB4518@<X0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v5 = sub_1005057FC(&qword_10168E8D0);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5, v7);
  id v9 = (char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = a1[3];
  uint64_t v51 = a1;
  sub_10050F848(a1, v10);
  sub_100AAF404();
  uint64_t v50 = v9;
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v2)
  {
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v51);
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v11 = v6;
    sub_1005057FC(&qword_10168E8B8);
    LOBYTE(v52) = 0;
    sub_100A22280(&qword_10168E8D8, &qword_10168E8B8);
    uint64_t v12 = v5;
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    uint64_t v13 = v60;
    int v14 = v61;
    char v78 = v61;
    LOBYTE(v52) = 1;
    sub_100AAD434();
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    uint64_t v15 = (uint64_t)v51;
    uint64_t v48 = v13;
    int v47 = v14;
    uint64_t v16 = v60;
    uint64_t v17 = v61;
    uint64_t v18 = v62;
    LOBYTE(v60) = 2;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    KeyedDecodingContainer.decode(_:forKey:)();
    uint64_t v49 = v16;
    unsigned int v20 = v19;
    uint64_t v46 = v18;
    LOBYTE(v60) = 3;
    KeyedDecodingContainer.decode(_:forKey:)();
    unsigned int v22 = v21;
    LOBYTE(v52) = 4;
    sub_100AB4BC4();
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
    uint64_t v23 = v60;
    uint64_t v43 = v62;
    uint64_t v44 = v61;
    LOBYTE(v52) = 5;
    uint64_t v45 = v63;
    swift_bridgeObjectRetain();
    double v24 = v50;
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
    uint64_t v41 = v60;
    uint64_t v42 = v23;
    uint64_t v25 = v62;
    uint64_t v40 = v61;
    uint64_t v26 = v63;
    LOBYTE(v60) = 6;
    swift_bridgeObjectRetain();
    int v38 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
    *(void *)&long long v39 = v25;
    *((void *)&v39 + 1) = v26;
    sub_1005057FC((uint64_t *)&unk_101687A40);
    char v79 = 7;
    sub_100557304();
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v24, v12);
    uint64_t v27 = v77;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v28 = v49;
    *(void *)&long long v52 = v48;
    BYTE8(v52) = v47;
    *(void *)&long long v53 = v49;
    *((void *)&v53 + 1) = v17;
    uint64_t v30 = v45;
    uint64_t v29 = v46;
    *(void *)&long long v54 = v46;
    *((void *)&v54 + 1) = __PAIR64__(v22, v20);
    *(void *)&long long v55 = v42;
    *((void *)&v55 + 1) = v44;
    *(void *)&long long v56 = v43;
    *((void *)&v56 + 1) = v45;
    uint64_t v31 = *((void *)&v39 + 1);
    *(void *)&long long v57 = v41;
    *((void *)&v57 + 1) = v40;
    long long v58 = v39;
    LOBYTE(v59) = v38;
    *((void *)&v59 + 1) = v27;
    sub_100AB4C18((uint64_t)&v52);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v15);
    uint64_t v60 = v48;
    LOBYTE(v61) = v78;
    uint64_t v62 = v28;
    uint64_t v63 = v17;
    uint64_t v64 = v29;
    unsigned int v65 = v20;
    unsigned int v66 = v22;
    uint64_t v67 = v42;
    uint64_t v68 = v44;
    uint64_t v69 = v43;
    uint64_t v70 = v30;
    uint64_t v71 = v41;
    uint64_t v72 = v40;
    uint64_t v73 = v39;
    uint64_t v74 = v31;
    char v75 = v38;
    uint64_t v76 = v27;
    uint64_t result = sub_100AB4C84((uint64_t)&v60);
    long long v33 = v57;
    a2[4] = v56;
    a2[5] = v33;
    long long v34 = v59;
    a2[6] = v58;
    a2[7] = v34;
    long long v35 = v53;
    *a2 = v52;
    a2[1] = v35;
    long long v36 = v55;
    a2[2] = v54;
    a2[3] = v36;
  }
  return result;
}

unint64_t sub_100AB4BC4()
{
  unint64_t result = qword_10168E8E0;
  if (!qword_10168E8E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168E8E0);
  }
  return result;
}

uint64_t sub_100AB4C18(uint64_t a1)
{
  return a1;
}

uint64_t sub_100AB4C84(uint64_t a1)
{
  return a1;
}

unint64_t sub_100AB4CF0()
{
  unint64_t result = qword_10168E900;
  if (!qword_10168E900)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168E900);
  }
  return result;
}

unint64_t sub_100AB4D44()
{
  unint64_t result = qword_10168E908;
  if (!qword_10168E908)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168E908);
  }
  return result;
}

unint64_t sub_100AB4D98()
{
  unint64_t result = qword_10168E910;
  if (!qword_10168E910)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168E910);
  }
  return result;
}

unint64_t sub_100AB4DEC()
{
  unint64_t result = qword_10168E920;
  if (!qword_10168E920)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168E920);
  }
  return result;
}

unint64_t sub_100AB4E40()
{
  unint64_t result = qword_10168E930;
  if (!qword_10168E930)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168E930);
  }
  return result;
}

unint64_t sub_100AB4E94()
{
  unint64_t result = qword_10168E938;
  if (!qword_10168E938)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168E938);
  }
  return result;
}

unint64_t sub_100AB4EE8()
{
  unint64_t result = qword_10168E940;
  if (!qword_10168E940)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168E940);
  }
  return result;
}

unint64_t sub_100AB4F3C()
{
  unint64_t result = qword_10168E960;
  if (!qword_10168E960)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168E960);
  }
  return result;
}

unint64_t sub_100AB4F90()
{
  unint64_t result = qword_10168E978;
  if (!qword_10168E978)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168E978);
  }
  return result;
}

unint64_t sub_100AB4FE4()
{
  unint64_t result = qword_10168E998;
  if (!qword_10168E998)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168E998);
  }
  return result;
}

unint64_t sub_100AB5038()
{
  unint64_t result = qword_10168E9A0;
  if (!qword_10168E9A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168E9A0);
  }
  return result;
}

unint64_t sub_100AB508C()
{
  unint64_t result = qword_10168E9A8;
  if (!qword_10168E9A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168E9A8);
  }
  return result;
}

uint64_t sub_100AB50E0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_100AB5148(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_100AB51A8()
{
  unint64_t result = qword_10168E9B8;
  if (!qword_10168E9B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168E9B8);
  }
  return result;
}

unint64_t sub_100AB51FC()
{
  unint64_t result = qword_10168E9C0;
  if (!qword_10168E9C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168E9C0);
  }
  return result;
}

unint64_t sub_100AB5250()
{
  unint64_t result = qword_10168E9C8;
  if (!qword_10168E9C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168E9C8);
  }
  return result;
}

uint64_t sub_100AB52A4()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100AB52DC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100AB52EC()
{
  return swift_release();
}

uint64_t sub_100AB52F4(uint64_t a1)
{
  return a1;
}

uint64_t initializeWithCopy for CRLEditableBezierPathSourceData.Node(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v3 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v3;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for CRLEditableBezierPathSourceData.Node(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_DWORD *)(a1 + 4) = *(_DWORD *)(a2 + 4);
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(_DWORD *)(a1 + 12) = *(_DWORD *)(a2 + 12);
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = *(_DWORD *)(a2 + 20);
  uint64_t v3 = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 24) = v3;
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for CRLEditableBezierPathSourceData.Node(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for CRLEditableBezierPathSourceData.Node()
{
  return &type metadata for CRLEditableBezierPathSourceData.Node;
}

ValueMetadata *type metadata accessor for CRLEditableBezierPathSourceData.NodeType()
{
  return &type metadata for CRLEditableBezierPathSourceData.NodeType;
}

ValueMetadata *type metadata accessor for CRLConnectionLineMagnetData.MagnetType()
{
  return &type metadata for CRLConnectionLineMagnetData.MagnetType;
}

ValueMetadata *type metadata accessor for CRLScalarPathSourceData.ScalarPathSourceType()
{
  return &type metadata for CRLScalarPathSourceData.ScalarPathSourceType;
}

ValueMetadata *type metadata accessor for CRLPointPathSourceData.PointPathSourceType()
{
  return &type metadata for CRLPointPathSourceData.PointPathSourceType;
}

unsigned char *_s8Freeform27CRLConnectionLineMagnetDataV10MagnetTypeOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    *unint64_t result = a2 + 7;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100AB5564);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 7;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLConnectionLinePathSourceData.CodingKeys()
{
  return &type metadata for CRLConnectionLinePathSourceData.CodingKeys;
}

ValueMetadata *type metadata accessor for CRLBezierPathSourceData.CodingKeys()
{
  return &type metadata for CRLBezierPathSourceData.CodingKeys;
}

ValueMetadata *type metadata accessor for CRLEditableBezierPathSourceData.CodingKeys()
{
  return &type metadata for CRLEditableBezierPathSourceData.CodingKeys;
}

uint64_t getEnumTagSinglePayload for CRLPathSourceData.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF6) {
    goto LABEL_17;
  }
  if (a2 + 10 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 10) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 10;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 10;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 10;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xB;
  int v8 = v6 - 11;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for CRLPathSourceData.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 10 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 10) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF6) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF5)
  {
    unsigned int v6 = ((a2 - 246) >> 8) + 1;
    *unint64_t result = a2 + 10;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100AB571CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 10;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLPathSourceData.CodingKeys()
{
  return &type metadata for CRLPathSourceData.CodingKeys;
}

uint64_t initializeWithCopy for CRLConnectionLineMagnetData(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 12) = *(void *)(a2 + 12);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for CRLConnectionLineMagnetData(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
  *(void *)a1 = v3;
  *(_DWORD *)(a1 + 12) = *((_DWORD *)a2 + 3);
  *(_DWORD *)(a1 + 16) = *((_DWORD *)a2 + 4);
  *(void *)(a1 + 24) = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for CRLConnectionLineMagnetData(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 12) = *(void *)(a2 + 12);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for CRLConnectionLineMagnetData()
{
  return &type metadata for CRLConnectionLineMagnetData;
}

unsigned char *storeEnumTagSinglePayload for CRLConnectionLinePathSourceData.ConnectionLinePathSourceType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100AB5920);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLConnectionLinePathSourceData.ConnectionLinePathSourceType()
{
  return &type metadata for CRLConnectionLinePathSourceData.ConnectionLinePathSourceType;
}

uint64_t sub_100AB595C(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for CRLEditableBezierPathSourceData.Subpath(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for CRLEditableBezierPathSourceData.Subpath(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for CRLEditableBezierPathSourceData.Subpath()
{
  return &type metadata for CRLEditableBezierPathSourceData.Subpath;
}

uint64_t initializeWithCopy for CRLCalloutPathSourceData(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 20) = *(void *)(a2 + 20);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for CRLCalloutPathSourceData(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_DWORD *)(a1 + 4) = *(_DWORD *)(a2 + 4);
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(_DWORD *)(a1 + 12) = *(_DWORD *)(a2 + 12);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = *(_DWORD *)(a2 + 20);
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for CRLCalloutPathSourceData(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 20) = *(void *)(a2 + 20);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for CRLCalloutPathSourceData()
{
  return &type metadata for CRLCalloutPathSourceData;
}

uint64_t initializeWithCopy for CRLScalarPathSourceData(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(_DWORD *)(a1 + 12) = *(_DWORD *)(a2 + 12);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(_WORD *)(a1 + 24) = *(_WORD *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for CRLScalarPathSourceData(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
  *(void *)a1 = v3;
  *(_DWORD *)(a1 + 12) = *((_DWORD *)a2 + 3);
  *(_DWORD *)(a1 + 16) = *((_DWORD *)a2 + 4);
  *(_DWORD *)(a1 + 20) = *((_DWORD *)a2 + 5);
  *(unsigned char *)(a1 + 24) = *((unsigned char *)a2 + 24);
  *(unsigned char *)(a1 + 25) = *((unsigned char *)a2 + 25);
  *(void *)(a1 + 32) = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for CRLScalarPathSourceData(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 12) = *(void *)(a2 + 12);
  *(_DWORD *)(a1 + 20) = *(_DWORD *)(a2 + 20);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(unsigned char *)(a1 + 25) = *(unsigned char *)(a2 + 25);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for CRLScalarPathSourceData()
{
  return &type metadata for CRLScalarPathSourceData;
}

uint64_t destroy for CRLPointPathSourceData()
{
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for CRLPointPathSourceData(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(_OWORD *)(a1 + 12) = *(_OWORD *)(a2 + 12);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for CRLPointPathSourceData(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
  *(void *)a1 = v3;
  *(_DWORD *)(a1 + 12) = *((_DWORD *)a2 + 3);
  *(_DWORD *)(a1 + 16) = *((_DWORD *)a2 + 4);
  *(_DWORD *)(a1 + 20) = *((_DWORD *)a2 + 5);
  *(_DWORD *)(a1 + 24) = *((_DWORD *)a2 + 6);
  *(void *)(a1 + 32) = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for CRLPointPathSourceData(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(_OWORD *)(a1 + 12) = *(_OWORD *)(a2 + 12);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s8Freeform22CRLPointPathSourceDataVwet_0(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 40)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 32);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_100AB5E24(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 32) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 40) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLPointPathSourceData()
{
  return &type metadata for CRLPointPathSourceData;
}

unint64_t sub_100AB5E80()
{
  unint64_t result = qword_10168EA08;
  if (!qword_10168EA08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168EA08);
  }
  return result;
}

unint64_t sub_100AB5ED8()
{
  unint64_t result = qword_10168EA10;
  if (!qword_10168EA10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168EA10);
  }
  return result;
}

unint64_t sub_100AB5F30()
{
  unint64_t result = qword_10168EA18;
  if (!qword_10168EA18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168EA18);
  }
  return result;
}

unint64_t sub_100AB5F90()
{
  unint64_t result = qword_10168EA20;
  if (!qword_10168EA20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168EA20);
  }
  return result;
}

unint64_t sub_100AB5FE8()
{
  unint64_t result = qword_10168EA28;
  if (!qword_10168EA28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168EA28);
  }
  return result;
}

unint64_t sub_100AB6040()
{
  unint64_t result = qword_10168EA30;
  if (!qword_10168EA30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168EA30);
  }
  return result;
}

unint64_t sub_100AB6098()
{
  unint64_t result = qword_10168EA38;
  if (!qword_10168EA38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168EA38);
  }
  return result;
}

unint64_t sub_100AB60F0()
{
  unint64_t result = qword_10168EA40;
  if (!qword_10168EA40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168EA40);
  }
  return result;
}

unint64_t sub_100AB6148()
{
  unint64_t result = qword_10168EA48;
  if (!qword_10168EA48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168EA48);
  }
  return result;
}

uint64_t sub_100AB619C()
{
  return sub_1006BFA64(&qword_10168EA50, &qword_10168EA58);
}

unint64_t sub_100AB61C8()
{
  unint64_t result = qword_10168EA60;
  if (!qword_10168EA60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168EA60);
  }
  return result;
}

unint64_t sub_100AB6220()
{
  unint64_t result = qword_10168EA68;
  if (!qword_10168EA68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168EA68);
  }
  return result;
}

unint64_t sub_100AB6278()
{
  unint64_t result = qword_10168EA70;
  if (!qword_10168EA70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168EA70);
  }
  return result;
}

unint64_t sub_100AB62D0()
{
  unint64_t result = qword_10168EA78;
  if (!qword_10168EA78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168EA78);
  }
  return result;
}

unint64_t sub_100AB6330()
{
  unint64_t result = qword_10168EA80;
  if (!qword_10168EA80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168EA80);
  }
  return result;
}

unint64_t sub_100AB6388()
{
  unint64_t result = qword_10168EA88;
  if (!qword_10168EA88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168EA88);
  }
  return result;
}

unint64_t sub_100AB63E0()
{
  unint64_t result = qword_10168EA90;
  if (!qword_10168EA90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168EA90);
  }
  return result;
}

unint64_t sub_100AB6438()
{
  unint64_t result = qword_10168EA98;
  if (!qword_10168EA98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168EA98);
  }
  return result;
}

unint64_t sub_100AB6490()
{
  unint64_t result = qword_10168EAA0;
  if (!qword_10168EAA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168EAA0);
  }
  return result;
}

unint64_t sub_100AB64E8()
{
  unint64_t result = qword_10168EAA8;
  if (!qword_10168EAA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168EAA8);
  }
  return result;
}

uint64_t sub_100AB653C()
{
  return sub_1006BFA64(&qword_10168EAB0, &qword_10168EAB8);
}

unint64_t sub_100AB6568()
{
  unint64_t result = qword_10168EAC0;
  if (!qword_10168EAC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168EAC0);
  }
  return result;
}

unint64_t sub_100AB65C0()
{
  unint64_t result = qword_10168EAC8;
  if (!qword_10168EAC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168EAC8);
  }
  return result;
}

unint64_t sub_100AB6618()
{
  unint64_t result = qword_10168EAD0;
  if (!qword_10168EAD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168EAD0);
  }
  return result;
}

unint64_t sub_100AB6670()
{
  unint64_t result = qword_10168EAD8;
  if (!qword_10168EAD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168EAD8);
  }
  return result;
}

unint64_t sub_100AB66D0()
{
  unint64_t result = qword_10168EAE0;
  if (!qword_10168EAE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168EAE0);
  }
  return result;
}

unint64_t sub_100AB6728()
{
  unint64_t result = qword_10168EAE8;
  if (!qword_10168EAE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168EAE8);
  }
  return result;
}

unint64_t sub_100AB6780()
{
  unint64_t result = qword_10168EAF0;
  if (!qword_10168EAF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168EAF0);
  }
  return result;
}

unint64_t sub_100AB67D8()
{
  unint64_t result = qword_10168EAF8;
  if (!qword_10168EAF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168EAF8);
  }
  return result;
}

unint64_t sub_100AB6830()
{
  unint64_t result = qword_10168EB00;
  if (!qword_10168EB00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168EB00);
  }
  return result;
}

unint64_t sub_100AB6888()
{
  unint64_t result = qword_10168EB08;
  if (!qword_10168EB08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168EB08);
  }
  return result;
}

uint64_t sub_100AB68DC()
{
  return sub_1006BFA64(&qword_10168EB10, &qword_10168EB18);
}

unint64_t sub_100AB6908()
{
  unint64_t result = qword_10168EB20;
  if (!qword_10168EB20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168EB20);
  }
  return result;
}

unint64_t sub_100AB6960()
{
  unint64_t result = qword_10168EB28;
  if (!qword_10168EB28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168EB28);
  }
  return result;
}

unint64_t sub_100AB69B8()
{
  unint64_t result = qword_10168EB30;
  if (!qword_10168EB30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168EB30);
  }
  return result;
}

unint64_t sub_100AB6A10()
{
  unint64_t result = qword_10168EB38;
  if (!qword_10168EB38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168EB38);
  }
  return result;
}

unint64_t sub_100AB6A70()
{
  unint64_t result = qword_10168EB40;
  if (!qword_10168EB40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168EB40);
  }
  return result;
}

unint64_t sub_100AB6AC8()
{
  unint64_t result = qword_10168EB48;
  if (!qword_10168EB48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168EB48);
  }
  return result;
}

unint64_t sub_100AB6B20()
{
  unint64_t result = qword_10168EB50;
  if (!qword_10168EB50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168EB50);
  }
  return result;
}

unint64_t sub_100AB6B78()
{
  unint64_t result = qword_10168EB58;
  if (!qword_10168EB58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168EB58);
  }
  return result;
}

unint64_t sub_100AB6BD0()
{
  unint64_t result = qword_10168EB60;
  if (!qword_10168EB60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168EB60);
  }
  return result;
}

unint64_t sub_100AB6C28()
{
  unint64_t result = qword_10168EB68;
  if (!qword_10168EB68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168EB68);
  }
  return result;
}

uint64_t sub_100AB6C7C()
{
  return sub_1006BFA64(&qword_10168EB70, &qword_10168EB78);
}

unint64_t sub_100AB6CA8()
{
  unint64_t result = qword_10168EB80;
  if (!qword_10168EB80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168EB80);
  }
  return result;
}

unint64_t sub_100AB6D00()
{
  unint64_t result = qword_10168EB88;
  if (!qword_10168EB88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168EB88);
  }
  return result;
}

unint64_t sub_100AB6D58()
{
  unint64_t result = qword_10168EB90;
  if (!qword_10168EB90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168EB90);
  }
  return result;
}

unint64_t sub_100AB6DB0()
{
  unint64_t result = qword_10168EB98;
  if (!qword_10168EB98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168EB98);
  }
  return result;
}

unint64_t sub_100AB6E08()
{
  unint64_t result = qword_10168EBA0;
  if (!qword_10168EBA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168EBA0);
  }
  return result;
}

unint64_t sub_100AB6E60()
{
  unint64_t result = qword_10168EBA8;
  if (!qword_10168EBA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168EBA8);
  }
  return result;
}

unint64_t sub_100AB6EB8()
{
  unint64_t result = qword_10168EBB0;
  if (!qword_10168EBB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168EBB0);
  }
  return result;
}

unint64_t sub_100AB6F18()
{
  unint64_t result = qword_10168EBB8;
  if (!qword_10168EBB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168EBB8);
  }
  return result;
}

unint64_t sub_100AB6F70()
{
  unint64_t result = qword_10168EBC0;
  if (!qword_10168EBC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168EBC0);
  }
  return result;
}

unint64_t sub_100AB6FC8()
{
  unint64_t result = qword_10168EBC8;
  if (!qword_10168EBC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168EBC8);
  }
  return result;
}

unint64_t sub_100AB7020()
{
  unint64_t result = qword_10168EBD0;
  if (!qword_10168EBD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168EBD0);
  }
  return result;
}

unint64_t sub_100AB7078()
{
  unint64_t result = qword_10168EBD8;
  if (!qword_10168EBD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168EBD8);
  }
  return result;
}

unint64_t sub_100AB70D0()
{
  unint64_t result = qword_10168EBE0;
  if (!qword_10168EBE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168EBE0);
  }
  return result;
}

uint64_t sub_100AB7124()
{
  return sub_1006BFA64(&qword_10168EBE8, &qword_10168EBF0);
}

unint64_t sub_100AB7150()
{
  unint64_t result = qword_10168EBF8;
  if (!qword_10168EBF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168EBF8);
  }
  return result;
}

unint64_t sub_100AB71A8()
{
  unint64_t result = qword_10168EC00;
  if (!qword_10168EC00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168EC00);
  }
  return result;
}

unint64_t sub_100AB7200()
{
  unint64_t result = qword_10168EC08;
  if (!qword_10168EC08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168EC08);
  }
  return result;
}

unint64_t sub_100AB7258()
{
  unint64_t result = qword_10168EC10;
  if (!qword_10168EC10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168EC10);
  }
  return result;
}

unint64_t sub_100AB72B0()
{
  unint64_t result = qword_10168EC18;
  if (!qword_10168EC18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168EC18);
  }
  return result;
}

unint64_t sub_100AB7308()
{
  unint64_t result = qword_10168EC20;
  if (!qword_10168EC20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168EC20);
  }
  return result;
}

unint64_t sub_100AB7360()
{
  unint64_t result = qword_10168EC28;
  if (!qword_10168EC28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168EC28);
  }
  return result;
}

unint64_t sub_100AB73B8()
{
  unint64_t result = qword_10168EC30;
  if (!qword_10168EC30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168EC30);
  }
  return result;
}

unint64_t sub_100AB7410()
{
  unint64_t result = qword_10168EC38;
  if (!qword_10168EC38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168EC38);
  }
  return result;
}

unint64_t sub_100AB7468()
{
  unint64_t result = qword_10168EC40;
  if (!qword_10168EC40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168EC40);
  }
  return result;
}

unint64_t sub_100AB74C0()
{
  unint64_t result = qword_10168EC48;
  if (!qword_10168EC48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168EC48);
  }
  return result;
}

unint64_t sub_100AB7518()
{
  unint64_t result = qword_10168EC50;
  if (!qword_10168EC50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168EC50);
  }
  return result;
}

unint64_t sub_100AB7570()
{
  unint64_t result = qword_10168EC58;
  if (!qword_10168EC58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168EC58);
  }
  return result;
}

unint64_t sub_100AB75C8()
{
  unint64_t result = qword_10168EC60;
  if (!qword_10168EC60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168EC60);
  }
  return result;
}

unint64_t sub_100AB7620()
{
  unint64_t result = qword_10168EC68;
  if (!qword_10168EC68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168EC68);
  }
  return result;
}

unint64_t sub_100AB7678()
{
  unint64_t result = qword_10168EC70;
  if (!qword_10168EC70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168EC70);
  }
  return result;
}

unint64_t sub_100AB76D0()
{
  unint64_t result = qword_10168EC78;
  if (!qword_10168EC78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168EC78);
  }
  return result;
}

unint64_t sub_100AB7728()
{
  unint64_t result = qword_10168EC80;
  if (!qword_10168EC80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168EC80);
  }
  return result;
}

unint64_t sub_100AB7780()
{
  unint64_t result = qword_10168EC88;
  if (!qword_10168EC88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168EC88);
  }
  return result;
}

unint64_t sub_100AB77D8()
{
  unint64_t result = qword_10168EC90;
  if (!qword_10168EC90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168EC90);
  }
  return result;
}

unint64_t sub_100AB7830()
{
  unint64_t result = qword_10168EC98;
  if (!qword_10168EC98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168EC98);
  }
  return result;
}

unint64_t sub_100AB7888()
{
  unint64_t result = qword_10168ECA0;
  if (!qword_10168ECA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168ECA0);
  }
  return result;
}

unint64_t sub_100AB78E0()
{
  unint64_t result = qword_10168ECA8;
  if (!qword_10168ECA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168ECA8);
  }
  return result;
}

unint64_t sub_100AB7938()
{
  unint64_t result = qword_10168ECB0;
  if (!qword_10168ECB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168ECB0);
  }
  return result;
}

unint64_t sub_100AB7990()
{
  unint64_t result = qword_10168ECB8;
  if (!qword_10168ECB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168ECB8);
  }
  return result;
}

unint64_t sub_100AB79E8()
{
  unint64_t result = qword_10168ECC0;
  if (!qword_10168ECC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168ECC0);
  }
  return result;
}

unint64_t sub_100AB7A40()
{
  unint64_t result = qword_10168ECC8;
  if (!qword_10168ECC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168ECC8);
  }
  return result;
}

unint64_t sub_100AB7A98()
{
  unint64_t result = qword_10168ECD0;
  if (!qword_10168ECD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168ECD0);
  }
  return result;
}

uint64_t sub_100AB7AEC()
{
  return sub_1006BFA64(&qword_10168ECD8, &qword_10168ECE0);
}

unint64_t sub_100AB7B18()
{
  unint64_t result = qword_10168ECE8;
  if (!qword_10168ECE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168ECE8);
  }
  return result;
}

uint64_t sub_100AB7B6C(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100522D34(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100AB7BD8()
{
  unint64_t result = qword_10168EDA8;
  if (!qword_10168EDA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168EDA8);
  }
  return result;
}

unint64_t sub_100AB7C2C()
{
  unint64_t result = qword_10168EDB0;
  if (!qword_10168EDB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168EDB0);
  }
  return result;
}

unint64_t sub_100AB7C80()
{
  unint64_t result = qword_10168EDB8;
  if (!qword_10168EDB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168EDB8);
  }
  return result;
}

unint64_t sub_100AB7CD4()
{
  unint64_t result = qword_10168EDC0;
  if (!qword_10168EDC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168EDC0);
  }
  return result;
}

unint64_t sub_100AB7D28()
{
  unint64_t result = qword_10168EDC8;
  if (!qword_10168EDC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168EDC8);
  }
  return result;
}

unint64_t sub_100AB7D7C()
{
  unint64_t result = qword_10168EDD0;
  if (!qword_10168EDD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168EDD0);
  }
  return result;
}

unint64_t sub_100AB7DD0()
{
  unint64_t result = qword_10168EDD8;
  if (!qword_10168EDD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168EDD8);
  }
  return result;
}

unint64_t sub_100AB7E24()
{
  unint64_t result = qword_10168EDE0;
  if (!qword_10168EDE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168EDE0);
  }
  return result;
}

unint64_t sub_100AB7E78()
{
  unint64_t result = qword_10168EDE8;
  if (!qword_10168EDE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168EDE8);
  }
  return result;
}

unint64_t sub_100AB7ECC()
{
  unint64_t result = qword_10168EDF0;
  if (!qword_10168EDF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168EDF0);
  }
  return result;
}

unint64_t sub_100AB7F20()
{
  unint64_t result = qword_10168EDF8;
  if (!qword_10168EDF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168EDF8);
  }
  return result;
}

unint64_t sub_100AB7F74()
{
  unint64_t result = qword_10168EE00;
  if (!qword_10168EE00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168EE00);
  }
  return result;
}

unint64_t sub_100AB7FC8()
{
  unint64_t result = qword_10168EE08;
  if (!qword_10168EE08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168EE08);
  }
  return result;
}

unint64_t sub_100AB801C()
{
  unint64_t result = qword_10168EE10;
  if (!qword_10168EE10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168EE10);
  }
  return result;
}

unint64_t sub_100AB8070()
{
  unint64_t result = qword_10168EE18;
  if (!qword_10168EE18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168EE18);
  }
  return result;
}

unint64_t sub_100AB80C4()
{
  unint64_t result = qword_10168EE20;
  if (!qword_10168EE20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168EE20);
  }
  return result;
}

unint64_t sub_100AB8118()
{
  unint64_t result = qword_10168EE28;
  if (!qword_10168EE28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168EE28);
  }
  return result;
}

unsigned char *_s8Freeform22CRLPointPathSourceDataV19PointPathSourceTypeOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100AB8238);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLEditableBezierPathSourceData.Node.CodingKeys()
{
  return &type metadata for CRLEditableBezierPathSourceData.Node.CodingKeys;
}

ValueMetadata *type metadata accessor for CRLConnectionLineMagnetData.CodingKeys()
{
  return &type metadata for CRLConnectionLineMagnetData.CodingKeys;
}

unsigned char *_s8Freeform23CRLScalarPathSourceDataV20ScalarPathSourceTypeOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100AB834CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLEditableBezierPathSourceData.Subpath.CodingKeys()
{
  return &type metadata for CRLEditableBezierPathSourceData.Subpath.CodingKeys;
}

ValueMetadata *type metadata accessor for CRLCalloutPathSourceData.CodingKeys()
{
  return &type metadata for CRLCalloutPathSourceData.CodingKeys;
}

unsigned char *_s8Freeform24CRLCalloutPathSourceDataV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *unint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100AB8468);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLScalarPathSourceData.CodingKeys()
{
  return &type metadata for CRLScalarPathSourceData.CodingKeys;
}

unsigned char *_s8Freeform31CRLEditableBezierPathSourceDataV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100AB856CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLPointPathSourceData.CodingKeys()
{
  return &type metadata for CRLPointPathSourceData.CodingKeys;
}

unint64_t sub_100AB85A8()
{
  unint64_t result = qword_10168EE30;
  if (!qword_10168EE30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168EE30);
  }
  return result;
}

unint64_t sub_100AB8600()
{
  unint64_t result = qword_10168EE38;
  if (!qword_10168EE38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168EE38);
  }
  return result;
}

unint64_t sub_100AB8658()
{
  unint64_t result = qword_10168EE40;
  if (!qword_10168EE40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168EE40);
  }
  return result;
}

unint64_t sub_100AB86B0()
{
  unint64_t result = qword_10168EE48;
  if (!qword_10168EE48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168EE48);
  }
  return result;
}

unint64_t sub_100AB8708()
{
  unint64_t result = qword_10168EE50;
  if (!qword_10168EE50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168EE50);
  }
  return result;
}

unint64_t sub_100AB8760()
{
  unint64_t result = qword_10168EE58;
  if (!qword_10168EE58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168EE58);
  }
  return result;
}

id sub_100AB87E4(uint64_t a1, double a2, double a3, double a4, double a5)
{
  uint64_t v11 = (uint64_t *)&v5[OBJC_IVAR____TtC8Freeform21CRLCommandCreateScene_actionString];
  uint64_t v12 = self;
  uint64_t v13 = v5;
  id v14 = [v12 mainBundle];
  NSString v15 = String._bridgeToObjectiveC()();
  NSString v16 = String._bridgeToObjectiveC()();
  NSString v17 = String._bridgeToObjectiveC()();
  id v18 = [v14 localizedStringForKey:v15 value:v16 table:v17];

  uint64_t v19 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v21 = v20;

  *uint64_t v11 = v19;
  v11[1] = v21;
  unsigned int v22 = &v13[OBJC_IVAR____TtC8Freeform21CRLCommandCreateScene_sceneID];
  uint64_t v23 = type metadata accessor for UUID();
  uint64_t v24 = *(void *)(v23 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v24 + 16))(v22, a1, v23);
  uint64_t v25 = (double *)&v13[OBJC_IVAR____TtC8Freeform21CRLCommandCreateScene_savedRect];
  *uint64_t v25 = a2;
  v25[1] = a3;
  v25[2] = a4;
  v25[3] = a5;

  v28.receiver = v13;
  v28.super_class = (Class)type metadata accessor for CRLCommandCreateScene();
  [super init];
  (*(void (**)(uint64_t, uint64_t))(v24 + 8))(a1, v23);
  return v26;
}

uint64_t sub_100AB89D8(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t v7 = type metadata accessor for UUID();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7, v9);
  uint64_t v11 = (char *)&v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = sub_10103405C(a1, (uint64_t)&off_10152A280);
  if (!v4)
  {
    sub_100D09F14(v3 + OBJC_IVAR____TtC8Freeform21CRLCommandCreateScene_sceneID, (uint64_t)v11, *(double *)(v3 + OBJC_IVAR____TtC8Freeform21CRLCommandCreateScene_savedRect), *(double *)(v3 + OBJC_IVAR____TtC8Freeform21CRLCommandCreateScene_savedRect + 8), *(double *)(v3 + OBJC_IVAR____TtC8Freeform21CRLCommandCreateScene_savedRect + 16), *(double *)(v3 + OBJC_IVAR____TtC8Freeform21CRLCommandCreateScene_savedRect + 24));
    (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
    return sub_101023724(a1, (uint64_t)&off_10152A280, a3);
  }
  return result;
}

uint64_t sub_100AB8B5C()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC8Freeform21CRLCommandCreateScene_sceneID;
  uint64_t v2 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  return swift_bridgeObjectRelease();
}

id sub_100AB8BDC()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLCommandCreateScene();
  return [super dealloc];
}

uint64_t sub_100AB8C98()
{
  return type metadata accessor for CRLCommandCreateScene();
}

uint64_t type metadata accessor for CRLCommandCreateScene()
{
  uint64_t result = qword_10168EE90;
  if (!qword_10168EE90) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100AB8CEC()
{
  uint64_t result = type metadata accessor for UUID();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_100AB8D90()
{
  uint64_t v1 = *(void *)(*v0 + OBJC_IVAR____TtC8Freeform21CRLCommandCreateScene_actionString);
  swift_bridgeObjectRetain();
  return v1;
}

__n128 sub_100AB8DD0()
{
  __asm { FMOV            V0.2D, #22.0 }
  xmmword_10171B750 = (__int128)result;
  return result;
}

int64x2_t sub_100AB8DE0()
{
  int64x2_t result = vdupq_n_s64(0x4046000000000000uLL);
  xmmword_10171B760 = (__int128)result;
  return result;
}

void sub_100AB8DF4()
{
  qword_10171B770 = 0x4020000000000000;
}

void sub_100AB8E04()
{
  qword_10171B778 = 0x4024000000000000;
}

void sub_100AB8E14()
{
  qword_10171B780 = 0x4030000000000000;
}

ValueMetadata *type metadata accessor for CRLMiniShapePickerUI()
{
  return &type metadata for CRLMiniShapePickerUI;
}

uint64_t destroy for CRLMiniShapePickerUI.ShapeButtonGrid(uint64_t a1)
{
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(a1);

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for CRLMiniShapePickerUI.ShapeButtonGrid(uint64_t a1, uint64_t a2)
{
  long long v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t *assignWithCopy for CRLMiniShapePickerUI.ShapeButtonGrid(uint64_t *a1, uint64_t *a2)
{
  a1[5] = a2[5];
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for CRLMiniShapePickerUI.ShapeButtonGrid(uint64_t a1, uint64_t a2)
{
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(a1);
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for CRLMiniShapePickerUI.ShapeButtonGrid(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 64)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CRLMiniShapePickerUI.ShapeButtonGrid(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)int64x2_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 64) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 64) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLMiniShapePickerUI.ShapeButtonGrid()
{
  return &type metadata for CRLMiniShapePickerUI.ShapeButtonGrid;
}

uint64_t sub_100AB902C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100AB9048@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = type metadata accessor for LabelStyleConfiguration.Icon();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2, v4);
  unsigned int v6 = (char *)v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  LabelStyleConfiguration.icon.getter();
  if (qword_10166F848 != -1) {
    swift_once();
  }
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  (*(void (**)(uint64_t, char *, uint64_t))(v3 + 16))(a1, v6, v2);
  uint64_t v7 = (_OWORD *)(a1 + *(int *)(sub_1005057FC(&qword_10168F138) + 36));
  long long v8 = v10[1];
  *uint64_t v7 = v10[0];
  v7[1] = v8;
  _OWORD v7[2] = v10[2];
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v6, v2);
}

uint64_t sub_100AB91C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v75 = a2;
  uint64_t v3 = type metadata accessor for ColorSchemeContrast();
  uint64_t v71 = *(void *)(v3 - 8);
  uint64_t v72 = v3;
  __chkstk_darwin(v3, v4);
  uint64_t v70 = (char *)&v60 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6, v7);
  uint64_t v69 = (uint64_t)&v60 - v8;
  uint64_t v63 = type metadata accessor for RoundedRectangle();
  __chkstk_darwin(v63, v9);
  uint64_t v11 = (uint64_t *)((char *)&v60 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v68 = sub_1005057FC(&qword_10168F0B8);
  __chkstk_darwin(v68, v12);
  id v14 = (char *)&v60 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v67 = sub_1005057FC(&qword_10168F0C0);
  __chkstk_darwin(v67, v15);
  uint64_t v73 = (uint64_t)&v60 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for ButtonStyleConfiguration.Label();
  uint64_t v18 = *(void *)(v17 - 8);
  __chkstk_darwin(v17, v19);
  uint64_t v21 = (char *)&v60 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_1005057FC(&qword_10168F0C8);
  uint64_t v23 = *(void *)(v22 - 8);
  __chkstk_darwin(v22, v24);
  id v26 = (char *)&v60 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v61 = sub_1005057FC(&qword_10168F0D0);
  __chkstk_darwin(v61, v27);
  uint64_t v29 = (char *)&v60 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = sub_1005057FC(&qword_10168F0D8);
  __chkstk_darwin(v62, v30);
  unsigned int v66 = (char *)&v60 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v65 = sub_1005057FC(&qword_10168F0E0);
  __chkstk_darwin(v65, v32);
  uint64_t v64 = (uint64_t)&v60 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v74 = a1;
  ButtonStyleConfiguration.label.getter();
  sub_100ABB364(&qword_10168F0E8, (void (*)(uint64_t))&type metadata accessor for ButtonStyleConfiguration.Label);
  sub_100ABD144();
  View.labelStyle<A>(_:)();
  (*(void (**)(char *, uint64_t))(v18 + 8))(v21, v17);
  if (qword_10166F850 != -1) {
    swift_once();
  }
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  (*(void (**)(char *, char *, uint64_t))(v23 + 16))(v29, v26, v22);
  long long v34 = &v29[*(int *)(v61 + 36)];
  long long v35 = v77;
  *(_OWORD *)long long v34 = v76;
  *((_OWORD *)v34 + 1) = v35;
  *((_OWORD *)v34 + 2) = v78;
  (*(void (**)(char *, uint64_t))(v23 + 8))(v26, v22);
  if (qword_10166F858 != -1) {
    swift_once();
  }
  uint64_t v36 = qword_10171B770;
  uint64_t v37 = (char *)v11 + *(int *)(v63 + 20);
  uint64_t v38 = enum case for RoundedCornerStyle.continuous(_:);
  uint64_t v39 = type metadata accessor for RoundedCornerStyle();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v39 - 8) + 104))(v37, v38, v39);
  *uint64_t v11 = v36;
  v11[1] = v36;
  int v40 = static HierarchicalShapeStyle.quaternary.getter();
  uint64_t v41 = v69;
  sub_100E03A18(v69);
  uint64_t v43 = v70;
  uint64_t v42 = v71;
  uint64_t v44 = v72;
  (*(void (**)(char *, void, uint64_t))(v71 + 104))(v70, enum case for ColorSchemeContrast.increased(_:), v72);
  LOBYTE(v38) = static ColorSchemeContrast.== infix(_:_:)();
  uint64_t v45 = *(void (**)(char *, uint64_t))(v42 + 8);
  v45(v43, v44);
  v45((char *)v41, v44);
  if (v38) {
    float v46 = 0.2;
  }
  else {
    float v46 = 1.0;
  }
  sub_100ABD198((uint64_t)v11, (uint64_t)v14, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
  uint64_t v47 = v68;
  uint64_t v48 = &v14[*(int *)(v68 + 52)];
  *(_DWORD *)uint64_t v48 = v40;
  *((float *)v48 + 1) = v46;
  *(_WORD *)&v14[*(int *)(v47 + 56)] = 256;
  sub_100ABC6E4((uint64_t)v11, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
  uint64_t v49 = v73;
  sub_100522E9C((uint64_t)v14, v73, &qword_10168F0B8);
  uint64_t v50 = v49 + *(int *)(v67 + 36);
  *(void *)uint64_t v50 = 0;
  *(_WORD *)(v50 + 8) = 257;
  sub_100522F00((uint64_t)v14, &qword_10168F0B8);
  uint64_t v51 = static Alignment.center.getter();
  uint64_t v53 = v52;
  uint64_t v54 = (uint64_t)v66;
  uint64_t v55 = (uint64_t)&v66[*(int *)(v62 + 36)];
  sub_100522E9C(v49, v55, &qword_10168F0C0);
  long long v56 = (uint64_t *)(v55 + *(int *)(sub_1005057FC(&qword_10168F0F8) + 36));
  *long long v56 = v51;
  v56[1] = v53;
  sub_100522E9C((uint64_t)v29, v54, &qword_10168F0D0);
  sub_100522F00(v49, &qword_10168F0C0);
  sub_100522F00((uint64_t)v29, &qword_10168F0D0);
  if (ButtonStyleConfiguration.isPressed.getter()) {
    double v57 = 0.5;
  }
  else {
    double v57 = 1.0;
  }
  uint64_t v58 = v64;
  sub_100522E9C(v54, v64, &qword_10168F0D8);
  *(double *)(v58 + *(int *)(v65 + 36)) = v57;
  sub_100522F00(v54, &qword_10168F0D8);
  return sub_10051B3EC(v58, v75, &qword_10168F0E0);
}

void sub_100AB9984(int a1@<W0>, uint64_t a2@<X8>)
{
  int v4 = a1;
  uint64_t v5 = type metadata accessor for DynamicTypeSize();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5, v7);
  uint64_t v9 = (char *)v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1005057FC(&qword_10168F100);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10, v12);
  id v14 = (char *)v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1005057FC(&qword_10168F108);
  __chkstk_darwin(v15 - 8, v16);
  uint64_t v18 = (char *)v28 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = a2;
  _OWORD v28[3] = a1;
  if (v4 == 8)
  {
    sub_100B9B600(8);
    uint64_t v19 = Image.init(systemName:)();
  }
  else
  {
    sub_100B9B600(a1);
    uint64_t v19 = Image.init(_:bundle:)();
  }
  uint64_t v20 = v19;
  NSString v21 = String._bridgeToObjectiveC()();
  id v22 = [self colorNamed:v21];

  if (v22)
  {
    uint64_t v23 = Color.init(_:)();
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v32 = v20;
    uint64_t v33 = KeyPath;
    uint64_t v34 = v23;
    (*(void (**)(char *, void, uint64_t))(v6 + 104))(v9, enum case for DynamicTypeSize.large(_:), v5);
    uint64_t v25 = sub_1005057FC(&qword_101682C58);
    unint64_t v26 = sub_10080FF6C();
    View.dynamicTypeSize(_:)();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
    swift_release();
    swift_release();
    swift_release();
    uint64_t v32 = sub_100B9B700();
    uint64_t v33 = v27;
    uint64_t v30 = v25;
    unint64_t v31 = v26;
    swift_getOpaqueTypeConformance2();
    sub_10052E310();
    View.accessibilityLabel<A>(_:)();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
    sub_10051B3EC((uint64_t)v18, v29, &qword_10168F108);
  }
  else
  {
    __break(1u);
  }
}

void sub_100AB9CD8(uint64_t a1@<X8>)
{
  sub_100AB9984(*v1, a1);
}

uint64_t sub_100AB9CE0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v57 = a1;
  uint64_t v55 = sub_1005057FC(&qword_10168EFB0);
  __chkstk_darwin(v55, v3);
  uint64_t v5 = (char *)v45 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for CRLMiniShapePickerUI.ShapeButton(0);
  uint64_t v7 = v6 - 8;
  uint64_t v51 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v51 + 64);
  __chkstk_darwin(v6, v9);
  uint64_t v53 = (uint64_t)v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v56 = sub_1005057FC(&qword_10168EFB8);
  uint64_t v10 = *(void *)(v56 - 8);
  __chkstk_darwin(v56, v11);
  uint64_t v13 = (char *)v45 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v52 = sub_1005057FC(&qword_10168EFC0);
  uint64_t v50 = *(void *)(v52 - 8);
  __chkstk_darwin(v52, v14);
  uint64_t v16 = (char *)v45 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v54 = sub_1005057FC(&qword_10168EFC8);
  __chkstk_darwin(v54, v17);
  uint64_t v19 = (char *)v45 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20, v21);
  uint64_t v23 = (char *)v45 - v22;
  int v24 = *(unsigned __int8 *)(v2 + *(int *)(v7 + 36));
  sub_100ABA364((uint64_t)v13);
  if (v24 == 1)
  {
    sub_1005057FC(&qword_10168EEF0);
    AccessibilityFocusState.projectedValue.getter();
    v45[1] = v58;
    uint64_t v47 = v8;
    int v46 = v60;
    uint64_t v48 = sub_100522D34(&qword_10168EFD8);
    uint64_t v49 = v5;
    uint64_t v25 = sub_100522D34(&qword_10168EFE0);
    uint64_t v26 = type metadata accessor for CRLMiniShapePickerUI.ShapeButtonStyle(255);
    uint64_t v27 = sub_100523288(&qword_10168EFE8, &qword_10168EFE0);
    uint64_t v28 = sub_100ABB364(&qword_10168EFF0, (void (*)(uint64_t))type metadata accessor for CRLMiniShapePickerUI.ShapeButtonStyle);
    uint64_t v58 = v25;
    uint64_t v59 = v26;
    uint64_t v60 = v27;
    uint64_t v61 = v28;
    uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
    uint64_t v58 = v48;
    uint64_t v59 = OpaqueTypeConformance2;
    uint64_t v48 = swift_getOpaqueTypeConformance2();
    uint64_t v30 = v56;
    View.accessibilityFocused(_:)();
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v30);
    uint64_t v31 = v53;
    sub_100ABD198(v2, v53, type metadata accessor for CRLMiniShapePickerUI.ShapeButton);
    unint64_t v32 = (*(unsigned __int8 *)(v51 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v51 + 80);
    uint64_t v33 = swift_allocObject();
    sub_100ABC67C(v31, v33 + v32, type metadata accessor for CRLMiniShapePickerUI.ShapeButton);
    uint64_t v34 = v50;
    uint64_t v35 = v52;
    (*(void (**)(char *, char *, uint64_t))(v50 + 16))(v19, v16, v52);
    uint64_t v36 = (uint64_t (**)())&v19[*(int *)(v54 + 36)];
    void *v36 = sub_100ABC358;
    v36[1] = (uint64_t (*)())v33;
    v36[2] = 0;
    v36[3] = 0;
    (*(void (**)(char *, uint64_t))(v34 + 8))(v16, v35);
    sub_10051B3EC((uint64_t)v19, (uint64_t)v23, &qword_10168EFC8);
    sub_100522E9C((uint64_t)v23, (uint64_t)v49, &qword_10168EFC8);
    swift_storeEnumTagMultiPayload();
    sub_100ABC1A0();
    _ConditionalContent<>.init(storage:)();
    return sub_100522F00((uint64_t)v23, &qword_10168EFC8);
  }
  else
  {
    uint64_t v38 = v56;
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v5, v13, v56);
    swift_storeEnumTagMultiPayload();
    sub_100ABC1A0();
    uint64_t v39 = sub_100522D34(&qword_10168EFD8);
    uint64_t v40 = sub_100522D34(&qword_10168EFE0);
    uint64_t v41 = type metadata accessor for CRLMiniShapePickerUI.ShapeButtonStyle(255);
    uint64_t v42 = sub_100523288(&qword_10168EFE8, &qword_10168EFE0);
    uint64_t v43 = sub_100ABB364(&qword_10168EFF0, (void (*)(uint64_t))type metadata accessor for CRLMiniShapePickerUI.ShapeButtonStyle);
    uint64_t v58 = v40;
    uint64_t v59 = v41;
    uint64_t v60 = v42;
    uint64_t v61 = v43;
    uint64_t v44 = swift_getOpaqueTypeConformance2();
    uint64_t v58 = v39;
    uint64_t v59 = v44;
    swift_getOpaqueTypeConformance2();
    _ConditionalContent<>.init(storage:)();
    return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v13, v38);
  }
}

uint64_t sub_100ABA364@<X0>(uint64_t a1@<X8>)
{
  uint64_t v34 = a1;
  uint64_t v33 = type metadata accessor for CRLMiniShapePickerUI.ShapeButtonStyle(0);
  __chkstk_darwin(v33, v2);
  uint64_t v4 = (uint64_t *)((char *)&v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v5, v6);
  uint64_t v8 = (char *)&v29 - v7;
  uint64_t v9 = type metadata accessor for CRLMiniShapePickerUI.ShapeButton(0);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  __chkstk_darwin(v9 - 8, v12);
  uint64_t v13 = sub_1005057FC(&qword_10168EFE0);
  uint64_t v30 = *(void *)(v13 - 8);
  __chkstk_darwin(v13, v14);
  uint64_t v16 = (char *)&v29 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_1005057FC(&qword_10168EFD8);
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v31 = v17;
  uint64_t v32 = v18;
  __chkstk_darwin(v17, v19);
  uint64_t v21 = (char *)&v29 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100ABD198(v1, (uint64_t)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for CRLMiniShapePickerUI.ShapeButton);
  unint64_t v22 = (*(unsigned __int8 *)(v10 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v23 = swift_allocObject();
  sub_100ABC67C((uint64_t)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v23 + v22, type metadata accessor for CRLMiniShapePickerUI.ShapeButton);
  uint64_t v35 = v1;
  sub_100ABC624();
  Button.init(action:label:)();
  *uint64_t v4 = swift_getKeyPath();
  sub_1005057FC(&qword_10168F000);
  swift_storeEnumTagMultiPayload();
  sub_100ABC67C((uint64_t)v4, (uint64_t)v8, type metadata accessor for CRLMiniShapePickerUI.ShapeButtonStyle);
  uint64_t v24 = sub_100523288(&qword_10168EFE8, &qword_10168EFE0);
  uint64_t v25 = sub_100ABB364(&qword_10168EFF0, (void (*)(uint64_t))type metadata accessor for CRLMiniShapePickerUI.ShapeButtonStyle);
  uint64_t v26 = v33;
  View.buttonStyle<A>(_:)();
  sub_100ABC6E4((uint64_t)v8, type metadata accessor for CRLMiniShapePickerUI.ShapeButtonStyle);
  (*(void (**)(char *, uint64_t))(v30 + 8))(v16, v13);
  uint64_t v36 = v13;
  uint64_t v37 = v26;
  uint64_t v38 = v24;
  uint64_t v39 = v25;
  swift_getOpaqueTypeConformance2();
  uint64_t v27 = v31;
  View.accessibilityShowsLargeContentViewer()();
  return (*(uint64_t (**)(char *, uint64_t))(v32 + 8))(v21, v27);
}

uint64_t sub_100ABA794(uint64_t a1)
{
  uint64_t v27 = a1;
  uint64_t v31 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v34 = *(void *)(v31 - 8);
  __chkstk_darwin(v31, v1);
  uint64_t v3 = (char *)&v27 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for DispatchQoS();
  uint64_t v32 = *(void *)(v4 - 8);
  uint64_t v33 = v4;
  __chkstk_darwin(v4, v5);
  uint64_t v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for CRLMiniShapePickerUI.ShapeButton(0);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  __chkstk_darwin(v8 - 8, v11);
  uint64_t v12 = type metadata accessor for DispatchTime();
  uint64_t v30 = v12;
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12, v14);
  uint64_t v16 = (char *)&v27 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17, v18);
  uint64_t v20 = (char *)&v27 - v19;
  sub_100656064();
  uint64_t v28 = static OS_dispatch_queue.main.getter();
  static DispatchTime.now()();
  + infix(_:_:)();
  uint64_t v29 = *(void (**)(char *, uint64_t))(v13 + 8);
  v29(v16, v12);
  sub_100ABD198(v27, (uint64_t)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for CRLMiniShapePickerUI.ShapeButton);
  unint64_t v21 = (*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v22 = swift_allocObject();
  sub_100ABC67C((uint64_t)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v22 + v21, type metadata accessor for CRLMiniShapePickerUI.ShapeButton);
  aBlock[4] = sub_100ABC4C4;
  aBlock[5] = v22;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = *(void *)"";
  void aBlock[2] = sub_100679958;
  void aBlock[3] = &unk_101521950;
  uint64_t v23 = _Block_copy(aBlock);
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_100ABB364((unint64_t *)&qword_1016747E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_1005057FC((uint64_t *)&unk_1016725D0);
  sub_100523288((unint64_t *)&qword_1016747F0, (uint64_t *)&unk_1016725D0);
  uint64_t v24 = v31;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  uint64_t v25 = (void *)v28;
  OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
  _Block_release(v23);

  (*(void (**)(char *, uint64_t))(v34 + 8))(v3, v24);
  (*(void (**)(char *, uint64_t))(v32 + 8))(v7, v33);
  return ((uint64_t (*)(char *, uint64_t))v29)(v20, v30);
}

uint64_t sub_100ABAC00(uint64_t a1)
{
  uint64_t v2 = (int *)type metadata accessor for CRLMiniShapePickerUI.ShapeButton(0);
  uint64_t v3 = (void *)(a1 + v2[6]);
  uint64_t v4 = v3[3];
  uint64_t v5 = v3[4];
  sub_10050F848(v3, v4);
  uint64_t v6 = (double *)(a1 + v2[8]);
  uint64_t v7 = *(unsigned __int8 *)(a1 + v2[5]);
  (*(void (**)(uint64_t, uint64_t, uint64_t, double, double))(v5 + 16))(v7, v4, v5, *v6, v6[1]);
  unint64_t v8 = sub_100B9B600(v7);
  sub_10057BB38(v8, v9, 1);

  return swift_bridgeObjectRelease();
}

uint64_t sub_100ABACB0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1005057FC(&qword_10168EEA0);
  __chkstk_darwin(v4 - 8, v5);
  uint64_t v7 = (char *)v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = static Alignment.center.getter();
  uint64_t v10 = v9;
  if (qword_10166F860 != -1) {
    swift_once();
  }
  uint64_t v11 = qword_10171B778;
  *(void *)uint64_t v7 = v8;
  *((void *)v7 + 1) = v10;
  *((void *)v7 + 2) = v11;
  v7[24] = 0;
  *((void *)v7 + 4) = v11;
  v7[40] = 0;
  sub_1005057FC(&qword_10168EEA8);
  sub_100ABB15C(v2, (uint64_t)v26);
  uint64_t v12 = (_OWORD *)swift_allocObject();
  long long v13 = v26[1];
  v12[1] = v26[0];
  v12[2] = v13;
  long long v14 = v26[3];
  v12[3] = v26[2];
  v12[4] = v14;
  sub_1005057FC(&qword_10168EEB0);
  sub_100523288(&qword_10168EEB8, &qword_10168EEB0);
  ForEach<>.init(_:content:)();
  char v15 = static Edge.Set.all.getter();
  if (qword_10166F868 != -1) {
    swift_once();
  }
  EdgeInsets.init(_all:)();
  uint64_t v17 = v16;
  uint64_t v19 = v18;
  uint64_t v21 = v20;
  uint64_t v23 = v22;
  sub_100522E9C((uint64_t)v7, a1, &qword_10168EEA0);
  uint64_t v24 = a1 + *(int *)(sub_1005057FC(&qword_10168EEC0) + 36);
  *(unsigned char *)uint64_t v24 = v15;
  *(void *)(v24 + 8) = v17;
  *(void *)(v24 + 16) = v19;
  *(void *)(v24 + 24) = v21;
  *(void *)(v24 + 32) = v23;
  *(unsigned char *)(v24 + 40) = 0;
  return sub_100522F00((uint64_t)v7, &qword_10168EEA0);
}

uint64_t sub_100ABAEE8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  *(void *)a3 = 0;
  *(unsigned char *)(a3 + 8) = 1;
  sub_1005057FC(&qword_10168EEB0);
  sub_100ABB15C(a2, (uint64_t)v9);
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = a1;
  long long v6 = v9[1];
  *(_OWORD *)(v5 + 24) = v9[0];
  *(_OWORD *)(v5 + 40) = v6;
  long long v7 = v9[3];
  *(_OWORD *)(v5 + 56) = v9[2];
  *(_OWORD *)(v5 + 72) = v7;
  sub_1005057FC(&qword_10168EEC8);
  sub_100ABB268();
  return ForEach<>.init(_:content:)();
}

void sub_100ABAFC4(uint64_t a1, uint64_t a2, void *a3)
{
  long long v6 = (int *)type metadata accessor for CRLMiniShapePickerUI.ShapeButton(0);
  __chkstk_darwin(v6, v7);
  uint64_t v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = 3 * a2;
  if ((unsigned __int128)(a2 * (__int128)3) >> 64 != (3 * a2) >> 63)
  {
    __break(1u);
    goto LABEL_7;
  }
  BOOL v11 = __OFADD__(v10, a1);
  unint64_t v12 = v10 + a1;
  if (v11)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if ((v12 & 0x8000000000000000) != 0)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  uint64_t v13 = a3[7];
  if (v12 < *(void *)(v13 + 16))
  {
    char v14 = *(unsigned char *)(v13 + v12 + 32);
    sub_1005498A4((uint64_t)a3, (uint64_t)&v9[v6[6]]);
    uint64_t v15 = a3[5];
    uint64_t v16 = a3[6];
    AccessibilityFocusState.init<>()();
    v9[v6[5]] = v14;
    uint64_t v17 = &v9[v6[8]];
    *(void *)uint64_t v17 = v15;
    *((void *)v17 + 1) = v16;
    v9[v6[7]] = v12 == 0;
    sub_100ABB364(&qword_10168EED8, (void (*)(uint64_t))type metadata accessor for CRLMiniShapePickerUI.ShapeButton);
    View.accessibilitySortPriority(_:)();
    sub_100ABC6E4((uint64_t)v9, type metadata accessor for CRLMiniShapePickerUI.ShapeButton);
    return;
  }
LABEL_9:
  __break(1u);
}

uint64_t sub_100ABB15C(uint64_t a1, uint64_t a2)
{
  long long v4 = *(_OWORD *)(a1 + 24);
  *(_OWORD *)(a2 + 24) = v4;
  (**(void (***)(uint64_t, uint64_t))(v4 - 8))(a2, a1);
  *(_OWORD *)(a2 + 40) = *(_OWORD *)(a1 + 40);
  *(void *)(a2 + 56) = *(void *)(a1 + 56);
  swift_bridgeObjectRetain();
  return a2;
}

uint64_t sub_100ABB1D4()
{
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v0 + 16);
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 80, 7);
}

uint64_t sub_100ABB214@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100ABAEE8(a1, v2 + 16, a2);
}

uint64_t sub_100ABB21C()
{
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v0 + 24);
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 88, 7);
}

void sub_100ABB25C(uint64_t a1)
{
  sub_100ABAFC4(a1, *(void *)(v1 + 16), (void *)(v1 + 24));
}

unint64_t sub_100ABB268()
{
  unint64_t result = qword_10168EED0;
  if (!qword_10168EED0)
  {
    sub_100522D34(&qword_10168EEC8);
    sub_100ABB364(&qword_10168EED8, (void (*)(uint64_t))type metadata accessor for CRLMiniShapePickerUI.ShapeButton);
    sub_100ABB364(&qword_10168EEE0, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168EED0);
  }
  return result;
}

uint64_t type metadata accessor for CRLMiniShapePickerUI.ShapeButton(uint64_t a1)
{
  return sub_100512D5C(a1, (uint64_t *)&unk_10168EF50);
}

uint64_t sub_100ABB364(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t *sub_100ABB3AC(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for AccessibilityTechnologies();
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      uint64_t v9 = sub_1005057FC(&qword_10168EEE8);
      memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    BOOL v11 = (int *)sub_1005057FC(&qword_10168EEF0);
    *((unsigned char *)a1 + v11[9]) = *((unsigned char *)a2 + v11[9]);
    *(uint64_t *)((char *)a1 + v11[10]) = *(uint64_t *)((char *)a2 + v11[10]);
    *((unsigned char *)a1 + v11[11]) = *((unsigned char *)a2 + v11[11]);
    uint64_t v12 = a3[6];
    *((unsigned char *)a1 + a3[5]) = *((unsigned char *)a2 + a3[5]);
    uint64_t v13 = (char *)a1 + v12;
    char v14 = (char *)a2 + v12;
    long long v15 = *(_OWORD *)((char *)a2 + v12 + 24);
    *(_OWORD *)((char *)a1 + v12 + 24) = v15;
    uint64_t v16 = v15;
    uint64_t v17 = **(void (***)(char *, char *, uint64_t))(v15 - 8);
    swift_retain();
    v17(v13, v14, v16);
    uint64_t v18 = a3[8];
    *((unsigned char *)a1 + a3[7]) = *((unsigned char *)a2 + a3[7]);
    *(_OWORD *)((char *)a1 + v18) = *(_OWORD *)((char *)a2 + v18);
  }
  return a1;
}

uint64_t sub_100ABB5D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AccessibilityTechnologies();
  uint64_t v5 = *(void *)(v4 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a1, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  }
  sub_1005057FC(&qword_10168EEF0);
  swift_release();
  uint64_t v6 = a1 + *(int *)(a2 + 24);

  return _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v6);
}

char *sub_100ABB6B8(char *a1, char *a2, int *a3)
{
  uint64_t v6 = type metadata accessor for AccessibilityTechnologies();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = sub_1005057FC(&qword_10168EEE8);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v9 = (int *)sub_1005057FC(&qword_10168EEF0);
  a1[v9[9]] = a2[v9[9]];
  *(void *)&a1[v9[10]] = *(void *)&a2[v9[10]];
  a1[v9[11]] = a2[v9[11]];
  uint64_t v10 = a3[6];
  a1[a3[5]] = a2[a3[5]];
  BOOL v11 = &a1[v10];
  uint64_t v12 = &a2[v10];
  long long v13 = *(_OWORD *)&a2[v10 + 24];
  *(_OWORD *)&a1[v10 + 24] = v13;
  uint64_t v14 = v13;
  long long v15 = **(void (***)(char *, char *, uint64_t))(v13 - 8);
  swift_retain();
  v15(v11, v12, v14);
  uint64_t v16 = a3[8];
  a1[a3[7]] = a2[a3[7]];
  *(_OWORD *)&a1[v16] = *(_OWORD *)&a2[v16];
  return a1;
}

char *sub_100ABB890(char *a1, char *a2, int *a3)
{
  uint64_t v6 = type metadata accessor for AccessibilityTechnologies();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    uint64_t v11 = sub_1005057FC(&qword_10168EEE8);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  uint64_t v12 = (int *)sub_1005057FC(&qword_10168EEF0);
  a1[v12[9]] = a2[v12[9]];
  *(void *)&a1[v12[10]] = *(void *)&a2[v12[10]];
  swift_retain();
  swift_release();
  a1[v12[11]] = a2[v12[11]];
  a1[a3[5]] = a2[a3[5]];
  sub_10054BB2C((uint64_t *)&a1[a3[6]], (uint64_t *)&a2[a3[6]]);
  a1[a3[7]] = a2[a3[7]];
  uint64_t v13 = a3[8];
  uint64_t v14 = &a1[v13];
  long long v15 = &a2[v13];
  *(void *)uint64_t v14 = *(void *)v15;
  *((void *)v14 + 1) = *((void *)v15 + 1);
  return a1;
}

char *sub_100ABBA98(char *a1, char *a2, int *a3)
{
  uint64_t v6 = type metadata accessor for AccessibilityTechnologies();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = sub_1005057FC(&qword_10168EEE8);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  int v9 = (int *)sub_1005057FC(&qword_10168EEF0);
  a1[v9[9]] = a2[v9[9]];
  *(void *)&a1[v9[10]] = *(void *)&a2[v9[10]];
  a1[v9[11]] = a2[v9[11]];
  uint64_t v10 = a3[6];
  a1[a3[5]] = a2[a3[5]];
  uint64_t v11 = &a1[v10];
  uint64_t v12 = &a2[v10];
  long long v13 = *((_OWORD *)v12 + 1);
  *(_OWORD *)uint64_t v11 = *(_OWORD *)v12;
  *((_OWORD *)v11 + 1) = v13;
  *((void *)v11 + 4) = *((void *)v12 + 4);
  uint64_t v14 = a3[8];
  a1[a3[7]] = a2[a3[7]];
  *(_OWORD *)&a1[v14] = *(_OWORD *)&a2[v14];
  return a1;
}

char *sub_100ABBC1C(char *a1, char *a2, int *a3)
{
  uint64_t v6 = type metadata accessor for AccessibilityTechnologies();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    uint64_t v11 = sub_1005057FC(&qword_10168EEE8);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  uint64_t v12 = (int *)sub_1005057FC(&qword_10168EEF0);
  a1[v12[9]] = a2[v12[9]];
  *(void *)&a1[v12[10]] = *(void *)&a2[v12[10]];
  swift_release();
  a1[v12[11]] = a2[v12[11]];
  uint64_t v13 = a3[6];
  a1[a3[5]] = a2[a3[5]];
  uint64_t v14 = &a1[v13];
  long long v15 = &a2[v13];
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&a1[v13]);
  long long v16 = *((_OWORD *)v15 + 1);
  *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
  *((_OWORD *)v14 + 1) = v16;
  *((void *)v14 + 4) = *((void *)v15 + 4);
  uint64_t v17 = a3[8];
  a1[a3[7]] = a2[a3[7]];
  *(_OWORD *)&a1[v17] = *(_OWORD *)&a2[v17];
  return a1;
}

uint64_t sub_100ABBE18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100ABBE2C);
}

uint64_t sub_100ABBE2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1005057FC(&qword_10168EEF0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 24) + 24);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_100ABBEF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100ABBF08);
}

uint64_t sub_100ABBF08(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_1005057FC(&qword_10168EEF0);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 24) + 24) = (a2 - 1);
  }
  return result;
}

void sub_100ABBFCC()
{
  sub_100ABC080();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_100ABC080()
{
  if (!qword_10168EF60)
  {
    unint64_t v0 = type metadata accessor for AccessibilityFocusState();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_10168EF60);
    }
  }
}

unint64_t sub_100ABC0E4()
{
  unint64_t result = qword_10168EFA0;
  if (!qword_10168EFA0)
  {
    sub_100522D34(&qword_10168EEC0);
    sub_100523288(&qword_10168EFA8, &qword_10168EEA0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168EFA0);
  }
  return result;
}

uint64_t sub_100ABC184()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_100ABC1A0()
{
  unint64_t result = qword_10168EFD0;
  if (!qword_10168EFD0)
  {
    sub_100522D34(&qword_10168EFC8);
    sub_100522D34(&qword_10168EFB8);
    sub_100522D34(&qword_10168EFD8);
    sub_100522D34(&qword_10168EFE0);
    type metadata accessor for CRLMiniShapePickerUI.ShapeButtonStyle(255);
    sub_100523288(&qword_10168EFE8, &qword_10168EFE0);
    sub_100ABB364(&qword_10168EFF0, (void (*)(uint64_t))type metadata accessor for CRLMiniShapePickerUI.ShapeButtonStyle);
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168EFD0);
  }
  return result;
}

uint64_t type metadata accessor for CRLMiniShapePickerUI.ShapeButtonStyle(uint64_t a1)
{
  return sub_100512D5C(a1, (uint64_t *)&unk_10168F068);
}

uint64_t sub_100ABC358()
{
  return sub_100ABC578(sub_100ABA794);
}

uint64_t sub_100ABC374()
{
  uint64_t v1 = type metadata accessor for CRLMiniShapePickerUI.ShapeButton(0);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(*(void *)(v1 - 8) + 64);
  uint64_t v5 = type metadata accessor for AccessibilityTechnologies();
  uint64_t v6 = *(void *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v0 + v3, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v0 + v3, v5);
  }
  sub_1005057FC(&qword_10168EEF0);
  swift_release();
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v0 + v3 + *(int *)(v1 + 24));

  return _swift_deallocObject(v0, v3 + v4, v2 | 7);
}

uint64_t sub_100ABC4C4()
{
  return AccessibilityFocusState.wrappedValue.setter();
}

uint64_t sub_100ABC544(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100ABC554()
{
  return swift_release();
}

uint64_t sub_100ABC560()
{
  return sub_100ABC578(sub_100ABAC00);
}

uint64_t sub_100ABC578(uint64_t (*a1)(uint64_t))
{
  uint64_t v2 = *(void *)(type metadata accessor for CRLMiniShapePickerUI.ShapeButton(0) - 8);
  uint64_t v3 = v1 + ((*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));

  return a1(v3);
}

uint64_t sub_100ABC5EC@<X0>(unsigned char *a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t result = type metadata accessor for CRLMiniShapePickerUI.ShapeButton(0);
  *a1 = *(unsigned char *)(v3 + *(int *)(result + 20));
  return result;
}

unint64_t sub_100ABC624()
{
  unint64_t result = qword_10168EFF8;
  if (!qword_10168EFF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168EFF8);
  }
  return result;
}

uint64_t sub_100ABC67C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_100ABC6E4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t *sub_100ABC744(uint64_t *a1, uint64_t *a2)
{
  int v4 = *(_DWORD *)(*(void *)(sub_1005057FC(&qword_10168F000) - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v6 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v6 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v5 = type metadata accessor for ColorSchemeContrast();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v5 - 8) + 16))(a1, a2, v5);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_100ABC850(uint64_t a1)
{
  sub_1005057FC(&qword_10168F000);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v2 = type metadata accessor for ColorSchemeContrast();
    uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
    return v3(a1, v2);
  }
  else
  {
    return swift_release();
  }
}

void *sub_100ABC8F4(void *a1, void *a2)
{
  sub_1005057FC(&qword_10168F000);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = type metadata accessor for ColorSchemeContrast();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *sub_100ABC9B0(void *a1, void *a2)
{
  if (a1 != a2)
  {
    sub_100522F00((uint64_t)a1, &qword_10168F000);
    sub_1005057FC(&qword_10168F000);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v4 = type metadata accessor for ColorSchemeContrast();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *sub_100ABCA84(void *a1, const void *a2)
{
  uint64_t v4 = sub_1005057FC(&qword_10168F000);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = type metadata accessor for ColorSchemeContrast();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v5 - 8) + 32))(a1, a2, v5);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v4 - 8) + 64));
  }
  return a1;
}

void *sub_100ABCB48(void *a1, const void *a2)
{
  if (a1 != a2)
  {
    sub_100522F00((uint64_t)a1, &qword_10168F000);
    uint64_t v4 = sub_1005057FC(&qword_10168F000);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v5 = type metadata accessor for ColorSchemeContrast();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v5 - 8) + 32))(a1, a2, v5);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v4 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_100ABCC24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100ABCC38);
}

uint64_t sub_100ABCC38(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1005057FC(&qword_10168F008);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t sub_100ABCCA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100ABCCBC);
}

uint64_t sub_100ABCCBC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1005057FC(&qword_10168F008);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

void sub_100ABCD30()
{
  sub_100ABCDBC();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_100ABCDBC()
{
  if (!qword_10168F078)
  {
    type metadata accessor for ColorSchemeContrast();
    unint64_t v0 = type metadata accessor for Environment.Content();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_10168F078);
    }
  }
}

uint64_t getEnumTagSinglePayload for CRLBoardLibraryFolderViewModel.TimeBucket.BucketType(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF8) {
    goto LABEL_17;
  }
  if (a2 + 8 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 8) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 8;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 8;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 8;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 9;
  int v8 = v6 - 9;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for CRLMiniShapePickerUI.ShapeImage(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 8 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 8) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF8) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF7)
  {
    unsigned int v6 = ((a2 - 248) >> 8) + 1;
    *unint64_t result = a2 + 8;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100ABCF70);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 8;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLMiniShapePickerUI.ShapeImage()
{
  return &type metadata for CRLMiniShapePickerUI.ShapeImage;
}

unint64_t sub_100ABCFAC()
{
  unint64_t result = qword_10168F0A8;
  if (!qword_10168F0A8)
  {
    sub_100522D34(&qword_10168F0B0);
    sub_100ABC1A0();
    sub_100522D34(&qword_10168EFD8);
    sub_100522D34(&qword_10168EFE0);
    type metadata accessor for CRLMiniShapePickerUI.ShapeButtonStyle(255);
    sub_100523288(&qword_10168EFE8, &qword_10168EFE0);
    sub_100ABB364(&qword_10168EFF0, (void (*)(uint64_t))type metadata accessor for CRLMiniShapePickerUI.ShapeButtonStyle);
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168F0A8);
  }
  return result;
}

uint64_t sub_100ABD10C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100ABD128()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_100ABD144()
{
  unint64_t result = qword_10168F0F0;
  if (!qword_10168F0F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168F0F0);
  }
  return result;
}

uint64_t sub_100ABD198(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

ValueMetadata *type metadata accessor for CRLMiniShapePickerUI.ShapeButtonLabelStyle()
{
  return &type metadata for CRLMiniShapePickerUI.ShapeButtonLabelStyle;
}

unint64_t sub_100ABD21C()
{
  unint64_t result = qword_10168F110;
  if (!qword_10168F110)
  {
    sub_100522D34(&qword_10168F0E0);
    sub_100ABD298();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168F110);
  }
  return result;
}

unint64_t sub_100ABD298()
{
  unint64_t result = qword_10168F118;
  if (!qword_10168F118)
  {
    sub_100522D34(&qword_10168F0D8);
    sub_100ABD338();
    sub_100523288(&qword_10168F128, &qword_10168F0F8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168F118);
  }
  return result;
}

unint64_t sub_100ABD338()
{
  unint64_t result = qword_10168F120;
  if (!qword_10168F120)
  {
    sub_100522D34(&qword_10168F0D0);
    type metadata accessor for ButtonStyleConfiguration.Label();
    sub_100ABB364(&qword_10168F0E8, (void (*)(uint64_t))&type metadata accessor for ButtonStyleConfiguration.Label);
    sub_100ABD144();
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168F120);
  }
  return result;
}

unint64_t sub_100ABD434()
{
  unint64_t result = qword_10168F130;
  if (!qword_10168F130)
  {
    sub_100522D34(&qword_10168F108);
    sub_100522D34(&qword_101682C58);
    sub_10080FF6C();
    swift_getOpaqueTypeConformance2();
    sub_100ABB364(&qword_10168EEE0, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168F130);
  }
  return result;
}

uint64_t sub_100ABD514()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_100ABD534()
{
  unint64_t result = qword_10168F140;
  if (!qword_10168F140)
  {
    sub_100522D34(&qword_10168F138);
    sub_100ABB364(qword_10168F148, (void (*)(uint64_t))&type metadata accessor for LabelStyleConfiguration.Icon);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168F140);
  }
  return result;
}

uint64_t destroy for CRLNumericRegexGenerator.Cache()
{
  swift_release();

  return swift_bridgeObjectRelease();
}

void *_s8Freeform24CRLNumericRegexGeneratorV5CacheVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for CRLNumericRegexGenerator.Cache(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *assignWithTake for CRLNumericRegexGenerator.Cache(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t type metadata accessor for CRLAtomicDictionaryVar()
{
  return sub_100568E70();
}

uint64_t sub_100ABD710()
{
  uint64_t v1 = sub_1005057FC(&qword_101672E90);
  __chkstk_darwin(v1 - 8, v2);
  unsigned int v4 = &v13[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = type metadata accessor for URL();
  uint64_t v6 = *(void *)(v5 - 8);
  __n128 v8 = __chkstk_darwin(v5, v7);
  unint64_t v10 = &v13[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(__n128))(*(void *)v0 + 80))(v8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_100522F00((uint64_t)v4, &qword_101672E90);
    return 0;
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v6 + 32))(v10, v4, v5);
    uint64_t v11 = Data.init(contentsOf:options:)();
    (*(void (**)(unsigned char *, uint64_t))(v6 + 8))(v10, v5);
  }
  return v11;
}

void sub_100ABD8F0(void (*a1)(id))
{
  uint64_t v3 = sub_1005057FC(&qword_101672E90);
  __chkstk_darwin(v3 - 8, v4);
  uint64_t v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for URL();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7, v9);
  uint64_t v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v14 = __chkstk_darwin(v12, v13);
  long long v16 = (char *)&v24 - v15;
  (*(void (**)(__n128))(*(void *)v1 + 80))(v14);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_100522F00((uint64_t)v6, &qword_101672E90);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v16, v6, v7);
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v11, v16, v7);
    id v17 = objc_allocWithZone((Class)CRLFileIOChannel);
    id v18 = sub_1009B0748((uint64_t)v11);
    URL._bridgeToObjectiveC()(v19);
    uint64_t v21 = v20;
    unint64_t v22 = [v20 crl_fileSize];

    if ((v22 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else
    {
      id v23 = [objc_allocWithZone((Class)CRLReadChannelInputStreamAdapter) initWithReadChannel:v18 length:v22 closeChannelOnClose:1];

      a1(v23);
      [v23 close];

      (*(void (**)(char *, uint64_t))(v8 + 8))(v16, v7);
    }
  }
}

id sub_100ABDCA4()
{
  uint64_t v1 = sub_1005057FC(&qword_101672E90);
  __chkstk_darwin(v1 - 8, v2);
  uint64_t v4 = (char *)v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for URL();
  uint64_t v6 = *(void *)(v5 - 8);
  __n128 v8 = __chkstk_darwin(v5, v7);
  uint64_t v10 = (char *)v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(__n128))(*(void *)v0 + 80))(v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_100522F00((uint64_t)v4, &qword_101672E90);
    sub_100679060();
    swift_allocError();
    *uint64_t v11 = xmmword_101176ED0;
    swift_willThrow();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v10, v4, v5);
    id v12 = objc_allocWithZone((Class)AVURLAsset);
    swift_bridgeObjectRetain();
    URL._bridgeToObjectiveC()(v13);
    uint64_t v15 = v14;
    Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    id v0 = [v12 initWithURL:v15 options:isa];

    (*(void (**)(char *, uint64_t))(v6 + 8))(v10, v5);
  }
  return v0;
}

uint64_t sub_100ABDEFC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC8Freeform19CRLFileAssetStorage__url;
  uint64_t v4 = type metadata accessor for URL();
  uint64_t v7 = *(void *)(v4 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(a1, v3, v4);
  uint64_t v5 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v7 + 56);

  return v5(a1, 0, 1, v4);
}

uint64_t sub_100ABDFD4()
{
  return URL.lastPathComponent.getter();
}

void sub_100ABE000(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for SHA256();
  uint64_t v47 = *(void *)(v3 - 8);
  __chkstk_darwin(v3, v4);
  uint64_t v6 = (char *)&v40 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = type metadata accessor for SHA256Digest();
  uint64_t v45 = *(void *)(v46 - 8);
  __chkstk_darwin(v46, v7);
  uint64_t v44 = (char *)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v51 = type metadata accessor for URL();
  uint64_t v52 = *(void *)(v51 - 8);
  __chkstk_darwin(v51, v9);
  uint64_t v11 = (char *)&v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for UUID();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12, v14);
  uint64_t v43 = (char *)&v40 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16, v17);
  uint64_t v19 = (char *)&v40 - v18;
  uint64_t v20 = sub_1005057FC((uint64_t *)&unk_101674520);
  __chkstk_darwin(v20 - 8, v21);
  uint64_t v50 = (uint64_t)&v40 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23, v24);
  uint64_t v49 = (char *)&v40 - v25;
  __chkstk_darwin(v26, v27);
  uint64_t v29 = (char *)&v40 - v28;
  uint64_t v53 = *(void *)(v1 + OBJC_IVAR____TtC8Freeform19CRLFileAssetStorage_lock);
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v53 + 16));
  uint64_t v30 = v1 + OBJC_IVAR____TtC8Freeform19CRLFileAssetStorage__assetUUID;
  swift_beginAccess();
  uint64_t v48 = v30;
  sub_1005107BC(v30, (uint64_t)v29);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v29, 1, v12) == 1)
  {
    uint64_t v41 = v19;
    uint64_t v42 = a1;
    sub_100522F00((uint64_t)v29, (uint64_t *)&unk_101674520);
    (*(void (**)(char *, uint64_t, uint64_t))(v52 + 16))(v11, v1 + OBJC_IVAR____TtC8Freeform19CRLFileAssetStorage__url, v51);
    sub_100ABF3B4();
    dispatch thunk of HashFunction.init()();
    sub_100EAF508((uint64_t)v11);
    uint64_t v31 = (void (**)(char *, uint64_t))(v47 + 8);
    uint64_t v32 = v44;
    dispatch thunk of HashFunction.finalize()();
    (*v31)(v6, v3);
    uint64_t v33 = v43;
    SHA256Digest.withUnsafeBytes<A>(_:)();
    (*(void (**)(char *, uint64_t))(v52 + 8))(v11, v51);
    (*(void (**)(char *, uint64_t))(v45 + 8))(v32, v46);
    uint64_t v34 = v41;
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v41, v33, v12);
    uint64_t v35 = v49;
    (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v49, v34, v12);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v35, 0, 1, v12);
    uint64_t v36 = (uint64_t)v35;
    uint64_t v37 = v50;
    sub_100A2A208(v36, v50);
    uint64_t v38 = v48;
    swift_beginAccess();
    sub_10068EA54(v37, v38);
    swift_endAccess();
    a1 = v42;
  }
  else
  {
    uint64_t v34 = v29;
  }
  uint64_t v39 = v53;
  (*(void (**)(uint64_t, char *, uint64_t))(v13 + 32))(a1, v34, v12);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v39 + 16));
}

void sub_100ABE704(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  if ((a2 & 2) != 0)
  {
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = a3;
    *(void *)(v6 + 24) = a4;
    v11[4] = sub_10080D4E4;
    v11[5] = v6;
    v11[0] = _NSConcreteStackBlock;
    v11[1] = *(void *)"";
    v11[2] = sub_100679958;
    v11[3] = &unk_101521B28;
    uint64_t v7 = _Block_copy(v11);
    swift_retain();
    swift_release();
    uint64_t v8 = v7;
    if (+[NSThread isMainThread])
    {
      v8[2](v8);
    }
    else
    {
      id v9 = &_dispatch_main_q;
      id v10 = &_dispatch_main_q;
      dispatch_async((dispatch_queue_t)&_dispatch_main_q, v8);
    }
    _Block_release(v8);
  }
}

uint64_t sub_100ABE830()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC8Freeform19CRLFileAssetStorage__url;
  uint64_t v2 = type metadata accessor for URL();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  return sub_100522F00(v0 + OBJC_IVAR____TtC8Freeform19CRLFileAssetStorage__assetUUID, (uint64_t *)&unk_101674520);
}

uint64_t sub_100ABE8B8()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC8Freeform19CRLFileAssetStorage__url;
  uint64_t v2 = type metadata accessor for URL();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  sub_100522F00(v0 + OBJC_IVAR____TtC8Freeform19CRLFileAssetStorage__assetUUID, (uint64_t *)&unk_101674520);

  return swift_deallocClassInstance();
}

uint64_t sub_100ABE980()
{
  return type metadata accessor for CRLFileAssetStorage();
}

uint64_t type metadata accessor for CRLFileAssetStorage()
{
  uint64_t result = qword_10168F298;
  if (!qword_10168F298) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_100ABE9D4()
{
  type metadata accessor for URL();
  if (v0 <= 0x3F)
  {
    sub_100510764();
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

void sub_100ABEAAC()
{
}

void sub_100ABEB08()
{
}

void sub_100ABEB64()
{
}

void sub_100ABEBC0()
{
}

void sub_100ABEC1C()
{
}

void sub_100ABEC78()
{
}

void sub_100ABECD4()
{
}

void sub_100ABED30()
{
}

uint64_t type metadata accessor for CRLFileAssetStorageBase()
{
  return self;
}

id sub_100ABEDB0()
{
  uint64_t v1 = sub_1005057FC(&qword_101672E90);
  __chkstk_darwin(v1 - 8, v2);
  uint64_t v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for URL();
  uint64_t v6 = *(void *)(v5 - 8);
  __n128 v8 = __chkstk_darwin(v5, v7);
  id v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(__n128))(**(void **)v0 + 80))(v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_100522F00((uint64_t)v4, &qword_101672E90);
    return 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v10, v4, v5);
    URL._bridgeToObjectiveC()(v12);
    uint64_t v14 = v13;
    id v11 = [v13 crl_fileSize];

    (*(void (**)(char *, uint64_t))(v6 + 8))(v10, v5);
  }
  return v11;
}

uint64_t sub_100ABEF68()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 88))();
}

uint64_t sub_100ABEFAC()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 96))();
}

uint64_t sub_100ABEFF0()
{
  return sub_100ABD710();
}

CGDataProviderRef sub_100ABF014()
{
  uint64_t v1 = sub_1005057FC(&qword_101672E90);
  __chkstk_darwin(v1 - 8, v2);
  uint64_t v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for URL();
  uint64_t v6 = *(void *)(v5 - 8);
  __n128 v8 = __chkstk_darwin(v5, v7);
  id v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(__n128))(**(void **)v0 + 80))(v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_100522F00((uint64_t)v4, &qword_101672E90);
    return 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v10, v4, v5);
    URL._bridgeToObjectiveC()(v12);
    CFURLRef v14 = v13;
    CGDataProviderRef v11 = CGDataProviderCreateWithURL(v13);

    (*(void (**)(char *, uint64_t))(v6 + 8))(v10, v5);
  }
  return v11;
}

void sub_100ABF1C4(void (*a1)(id))
{
}

id sub_100ABF1E8()
{
  return sub_100ABDCA4();
}

uint64_t sub_100ABF20C()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 144))() & 1;
}

uint64_t sub_100ABF254()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 152))();
}

uint64_t sub_100ABF298()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 160))();
}

uint64_t sub_100ABF2DC()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 168))();
}

uint64_t sub_100ABF320()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 176))();
}

uint64_t sub_100ABF364()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100ABF39C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100ABF3AC()
{
  return swift_release();
}

unint64_t sub_100ABF3B4()
{
  unint64_t result = qword_101672020;
  if (!qword_101672020)
  {
    type metadata accessor for SHA256();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101672020);
  }
  return result;
}

void sub_100ABF40C(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v6 = (*(uint64_t (**)(uint64_t, uint64_t))(a3 + 24))(ObjectType, a3);
  if ((v6 & 0xFF00000000) == 0x200000000)
  {
    if (qword_10166FB50 != -1) {
      swift_once();
    }
    swift_beginAccess();
    id v7 = (id)static OS_os_log.appIntents;
    uint64_t v8 = static os_log_type_t.debug.getter();
    uint64_t v9 = "Trying to set font size on non text selection";
    uint64_t v10 = (uint64_t)v7;
    uint64_t v11 = 45;
    goto LABEL_11;
  }
  if ((~v6 & 0x7F800000) == 0)
  {
    __break(1u);
    goto LABEL_25;
  }
  if (*(float *)&v6 <= -9.2234e18)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  if (*(float *)&v6 >= 9.2234e18)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  uint64_t v12 = sub_100F9F344((uint64_t)*(float *)&v6);
  if (v12 == 10)
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"changeSelectionFontSize(operation:using:)", 41, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/AppIntents/Performers/Intents/CRLChangeSelectioFontSizeIntentPerformer.swift", 130, 2, 28, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"changeSelectionFontSize(operation:using:)", 41, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/AppIntents/Performers/Intents/CRLChangeSelectioFontSizeIntentPerformer.swift", 130, 2, 28);
    if (qword_10166FB50 == -1)
    {
LABEL_10:
      swift_beginAccess();
      id v7 = (id)static OS_os_log.appIntents;
      uint64_t v8 = static os_log_type_t.error.getter();
      uint64_t v9 = "Unsupported text size found";
      uint64_t v10 = (uint64_t)v7;
      uint64_t v11 = 27;
LABEL_11:
      sub_100BAC898(v10, (uint64_t)&_mh_execute_header, v8, (uint64_t)v9, v11, 2, (uint64_t)_swiftEmptyArrayStorage);

      return;
    }
LABEL_27:
    swift_once();
    goto LABEL_10;
  }
  char v13 = sub_100F9D888(a1 & 1, v12);
  v14.n128_u32[0] = 10.0;
  switch(v13)
  {
    case 1:
      v14.n128_u32[0] = 12.0;
      goto LABEL_23;
    case 2:
      v14.n128_u32[0] = 14.0;
      goto LABEL_23;
    case 3:
      v14.n128_u32[0] = 18.0;
      goto LABEL_23;
    case 4:
      v14.n128_u32[0] = 24.0;
      goto LABEL_23;
    case 5:
      int v15 = 1108344832;
      goto LABEL_22;
    case 6:
      int v15 = 1111490560;
      goto LABEL_22;
    case 7:
      int v15 = 1116733440;
      goto LABEL_22;
    case 8:
      int v15 = 1119879168;
      goto LABEL_22;
    case 9:
      int v15 = 1125122048;
LABEL_22:
      v14.n128_u32[0] = v15;
      goto LABEL_23;
    case 10:
      return;
    default:
LABEL_23:
      (*(void (**)(uint64_t, uint64_t, __n128))(a3 + 32))(ObjectType, a3, v14);
      break;
  }
}

ValueMetadata *type metadata accessor for CRLChangeSelectionFontSizeIntentPerformer()
{
  return &type metadata for CRLChangeSelectionFontSizeIntentPerformer;
}

id sub_100ABF740(uint64_t a1)
{
  id v2 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
  id v3 = v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (v4)
  {
    id v5 = v2;
    uint64_t v6 = a1 + 40;
    do
    {
      id v7 = (double *)v6;
      double v9 = *(double *)(v6 - 8);
      double v8 = *(double *)v6;
      uint64_t v10 = *(unsigned __int8 *)(v6 + 40);
      v6 += 56;
      switch(v10)
      {
        case 1:
          [v5 lineToPoint:v9, v8];
          break;
        case 2:
          [v5 curveToPoint:v9 controlPoint1:v8 controlPoint2:v7[1], v7[2], v7[3], v7[4]];
          break;
        case 3:
          [v5 closePath];
          break;
        default:
          [v5 moveToPoint:v9, v8];
          break;
      }
      --v4;
    }
    while (v4);
  }
  swift_bridgeObjectRelease();
  return v3;
}

BOOL sub_100ABF870(uint64_t a1, uint64_t a2)
{
  double v2 = *(double *)(a2 + 16);
  double v3 = *(double *)(a2 + 24);
  double v4 = *(double *)(a2 + 32);
  double v5 = *(double *)(a2 + 40);
  int v6 = *(unsigned __int8 *)(a2 + 48);
  switch(*(unsigned char *)(a1 + 48))
  {
    case 1:
      if (v6 != 1) {
        goto LABEL_14;
      }
      goto LABEL_5;
    case 2:
      if (v6 != 2) {
        goto LABEL_14;
      }
      double v9 = *(double *)(a1 + 32);
      double v8 = *(double *)(a1 + 40);
      double v11 = *(double *)(a1 + 16);
      double v10 = *(double *)(a1 + 24);
      if (!sub_100064084(*(double *)a1, *(double *)(a1 + 8), *(double *)a2, *(double *)(a2 + 8))) {
        goto LABEL_14;
      }
      BOOL result = sub_100064084(v11, v10, v2, v3);
      if (result) {
        BOOL result = sub_100064084(v9, v8, v4, v5);
      }
      break;
    case 3:
      if (v6 != 3
        || (*(void *)(a2 + 8) | *(void *)a2 | *(void *)&v2 | *(void *)&v3 | *(void *)&v4 | *(void *)&v5) != 0)
      {
        goto LABEL_14;
      }
      BOOL result = 1;
      break;
    default:
      if (*(unsigned char *)(a2 + 48)) {
LABEL_14:
      }
        BOOL result = 0;
      else {
LABEL_5:
      }
        BOOL result = sub_100064084(*(double *)a1, *(double *)(a1 + 8), *(double *)a2, *(double *)(a2 + 8));
      break;
  }
  return result;
}

void sub_100ABF998(uint64_t a1, uint64_t a2, double a3, double a4, double a5, double a6, double a7, double a8)
{
  double v8 = (void **)(a2 + 16);
  char v9 = 3;
  double v10 = 0.0;
  double v11 = 0.0;
  double v12 = 0.0;
  double v13 = 0.0;
  double v14 = 0.0;
  double v15 = 0.0;
  switch(a1)
  {
    case 0:
      char v9 = 0;
      goto LABEL_5;
    case 1:
      char v9 = 1;
LABEL_5:
      double v11 = a3;
      double v12 = a4;
      goto LABEL_7;
    case 2:
      char v9 = 2;
      double v11 = a3;
      double v12 = a4;
      double v10 = a5;
      double v13 = a6;
      double v14 = a7;
      double v15 = a8;
      goto LABEL_7;
    case 3:
LABEL_7:
      swift_beginAccess();
      uint64_t v16 = *v8;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *double v8 = v16;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        uint64_t v16 = sub_100F649C4(0, v16[2] + 1, 1, v16);
        *double v8 = v16;
      }
      unint64_t v19 = v16[2];
      unint64_t v18 = v16[3];
      if (v19 >= v18 >> 1)
      {
        uint64_t v16 = sub_100F649C4((void *)(v18 > 1), v19 + 1, 1, v16);
        *double v8 = v16;
      }
      v16[2] = v19 + 1;
      uint64_t v20 = (double *)&v16[7 * v19];
      v20[4] = v11;
      v20[5] = v12;
      v20[6] = v10;
      v20[7] = v13;
      v20[8] = v14;
      v20[9] = v15;
      *((unsigned char *)v20 + 80) = v9;
      swift_endAccess();
      break;
    default:
      sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"init(archiving:)", 16, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLUtility/CRLBezierPathData.swift", 88, 2, 64, (uint64_t)"Unknown path element type. Ignoring element.", 44, 2u, (uint64_t)&_swiftEmptyArrayStorage);
      sub_1005598CC((uint64_t)&_swiftEmptyArrayStorage, (uint64_t)"init(archiving:)", 16, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLUtility/CRLBezierPathData.swift", 88, 2, 64);
      break;
  }
}

uint64_t sub_100ABFBA4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CRLProto_Path(0);
  __chkstk_darwin(v4, v5);
  id v7 = (unint64_t *)((char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t result = sub_100ABFCCC(a2, v7);
  if (!v2)
  {
    sub_100AC1A98();
    uint64_t v9 = Message.serializedData(partial:)();
    unint64_t v11 = v10;
    sub_100AC14A4((uint64_t)v7, type metadata accessor for CRLProto_Path);
    dispatch thunk of CREncoder.valueContainer()();
    dispatch thunk of CREncoder.CRValueContainer.encode(_:)();
    swift_release();
    return sub_100510084(v9, v11);
  }
  return result;
}

uint64_t sub_100ABFCCC@<X0>(uint64_t a1@<X0>, unint64_t *a2@<X8>)
{
  uint64_t v5 = type metadata accessor for CRLProto_Path.Element(0);
  uint64_t v105 = *(void *)(v5 - 8);
  uint64_t v106 = v5;
  __chkstk_darwin(v5, v6);
  double v8 = (char *)v84 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9, v10);
  uint64_t v12 = (char *)v84 - v11;
  *a2 = (unint64_t)_swiftEmptyArrayStorage;
  type metadata accessor for CRLProto_Path(0);
  uint64_t v107 = a2;
  uint64_t result = UnknownStorage.init()();
  uint64_t v14 = *(void *)(a1 + 16);
  if (v14)
  {
    v84[1] = v2;
    int v97 = &v127;
    char v98 = v126;
    uint64_t v91 = &v125;
    uint64_t v92 = v124;
    uint64_t v89 = &v119;
    uint64_t v90 = v118;
    unsigned int v87 = &v123;
    uint64_t v88 = v122;
    unsigned int v85 = &v121;
    uint64_t v86 = v120;
    char v95 = &v117;
    int v96 = v116;
    uint64_t v93 = v112;
    uint64_t v94 = v111;
    swift_bridgeObjectRetain();
    uint64_t v15 = 0;
    long long v104 = xmmword_101180360;
    long long v99 = xmmword_10117D8C0;
    double v103 = 0.0009;
    while (2)
    {
      uint64_t v16 = a1;
      uint64_t v17 = a1 + v15;
      double v19 = *(double *)(a1 + v15 + 32);
      double v18 = *(double *)(a1 + v15 + 40);
      double v21 = *(double *)(v17 + 48);
      double v20 = *(double *)(v17 + 56);
      double v22 = *(double *)(v17 + 64);
      double v23 = *(double *)(v17 + 72);
      uint64_t v24 = *(unsigned __int8 *)(v17 + 80);
      long long v25 = v104;
      *((_OWORD *)v12 + 1) = v104;
      *((_OWORD *)v12 + 2) = v25;
      *((_OWORD *)v12 + 3) = v25;
      UnknownStorage.init()();
      switch(v24)
      {
        case 1:
          *(void *)uint64_t v12 = 1;
          v12[8] = 1;
          v135.x = 0.0;
          v135.y = 0.0;
          v130.x = v19;
          v130.y = v18;
          if (CGPointEqualToPoint(v130, v135)) {
            goto LABEL_9;
          }
          long long v115 = v99;
          float v56 = v19;
          float v57 = v18;
          *(float *)uint64_t v116 = v56;
          *(float *)&v116[1] = v57;
          uint64_t v113 = &type metadata for UnsafeRawBufferPointer;
          __int16 v114 = &protocol witness table for UnsafeRawBufferPointer;
          v112[0] = v96;
          uint64_t v28 = v95;
          goto LABEL_19;
        case 2:
          *(void *)uint64_t v12 = 2;
          v12[8] = 1;
          v134.x = 0.0;
          v134.y = 0.0;
          v129.x = v19;
          v129.y = v18;
          BOOL v29 = CGPointEqualToPoint(v129, v134);
          double v102 = v23;
          if (v29)
          {
            uint64_t v32 = 0;
            unint64_t v33 = 0xC000000000000000;
          }
          else
          {
            v126[0] = v19;
            v126[1] = v18;
            uint64_t v32 = sub_1009B6AEC((uint64_t)v98, (uint64_t)v97);
          }
          *((void *)v12 + 2) = v32;
          *((void *)v12 + 3) = v33;
          double v101 = v19;
          _D15 = sub_100064680(v21, v20, v19);
          _D14 = v37;
          float v30 = v19;
          double v39 = v30;
          __asm
          {
            FCVT            H10, D0
            FCVT            D0, H10
          }
          double v100 = v39;
          double v46 = vabdd_f64(v39 + _D0, v21);
          float v31 = v18;
          double v47 = v31;
          v136.x = 0.0;
          v136.y = 0.0;
          v131.x = _D15;
          v131.y = _D14;
          BOOL v48 = CGPointEqualToPoint(v131, v136);
          if (v46 >= v103) {
            goto LABEL_16;
          }
          __asm
          {
            FCVT            H0, D14
            FCVT            D1, H0
          }
          if (vabdd_f64(v47 + _D1, v20) >= v103)
          {
LABEL_16:
            if (v48)
            {
LABEL_17:
              double v51 = v47;
              uint64_t v54 = 0;
              unint64_t v55 = 0xC000000000000000;
              goto LABEL_30;
            }
            double v51 = v47;
            float v63 = _D15;
            float v64 = _D14;
            *(float *)int v124 = v63;
            *(float *)&v124[1] = v64;
            uint64_t v53 = (uint64_t)v91;
            uint64_t v52 = (uint64_t)v92;
          }
          else
          {
            if (v48) {
              goto LABEL_17;
            }
            double v51 = v47;
            v118[0] = _H10;
            v118[1] = _H0;
            uint64_t v53 = (uint64_t)v89;
            uint64_t v52 = (uint64_t)v90;
          }
          uint64_t v54 = sub_1009B6AEC(v52, v53);
LABEL_30:
          double v65 = v101;
          double v66 = v102;
          *((void *)v12 + 4) = v54;
          *((void *)v12 + 5) = v55;
          _D11 = sub_100064680(v22, v66, v65);
          _D10 = v132.y;
          __asm
          {
            FCVT            H8, D0
            FCVT            D0, H8
          }
          double v71 = vabdd_f64(v100 + _D0, v22);
          v137.x = 0.0;
          v137.y = 0.0;
          v132.x = _D11;
          BOOL v72 = CGPointEqualToPoint(v132, v137);
          if (v71 >= v103) {
            goto LABEL_34;
          }
          __asm
          {
            FCVT            H0, D10
            FCVT            D1, H0
          }
          if (vabdd_f64(v51 + _D1, v66) >= v103)
          {
LABEL_34:
            if (v72)
            {
LABEL_35:
              uint64_t v77 = 0;
              unint64_t v78 = 0xC000000000000000;
              goto LABEL_38;
            }
            float v79 = _D11;
            float v80 = _D10;
            *(float *)uint64_t v122 = v79;
            *(float *)&v122[1] = v80;
            uint64_t v76 = (uint64_t)v87;
            uint64_t v75 = (uint64_t)v88;
          }
          else
          {
            if (v72) {
              goto LABEL_35;
            }
            v120[0] = _H8;
            v120[1] = _H0;
            uint64_t v76 = (uint64_t)v85;
            uint64_t v75 = (uint64_t)v86;
          }
          uint64_t v77 = sub_1009B6AEC(v75, v76);
LABEL_38:
          *((void *)v12 + 6) = v77;
          *((void *)v12 + 7) = v78;
LABEL_39:
          sub_100AC1AF0((uint64_t)v12, (uint64_t)v8, type metadata accessor for CRLProto_Path.Element);
          unint64_t v81 = *v107;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            unint64_t v81 = sub_100F64B18(0, *(void *)(v81 + 16) + 1, 1, v81);
          }
          unint64_t v83 = *(void *)(v81 + 16);
          unint64_t v82 = *(void *)(v81 + 24);
          if (v83 >= v82 >> 1) {
            unint64_t v81 = sub_100F64B18(v82 > 1, v83 + 1, 1, v81);
          }
          *(void *)(v81 + 16) = v83 + 1;
          sub_100AC06C0((uint64_t)v8, v81+ ((*(unsigned __int8 *)(v105 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v105 + 80))+ *(void *)(v105 + 72) * v83);
          *uint64_t v107 = v81;
          sub_100AC14A4((uint64_t)v12, type metadata accessor for CRLProto_Path.Element);
          v15 += 56;
          --v14;
          a1 = v16;
          if (v14) {
            continue;
          }
          uint64_t result = swift_bridgeObjectRelease();
          break;
        case 3:
          *(void *)uint64_t v12 = 3;
          v12[8] = 1;
          goto LABEL_39;
        default:
          *(void *)uint64_t v12 = 0;
          v12[8] = 1;
          v133.x = 0.0;
          v133.y = 0.0;
          v128.x = v19;
          v128.y = v18;
          if (CGPointEqualToPoint(v128, v133))
          {
LABEL_9:
            uint64_t v34 = 0;
            unint64_t v35 = 0xC000000000000000;
            goto LABEL_24;
          }
          long long v110 = v99;
          float v26 = v19;
          float v27 = v18;
          *(float *)char v111 = v26;
          *(float *)&v111[1] = v27;
          uint64_t v113 = &type metadata for UnsafeRawBufferPointer;
          __int16 v114 = &protocol witness table for UnsafeRawBufferPointer;
          v112[0] = v94;
          uint64_t v28 = v93;
LABEL_19:
          v112[1] = v28;
          uint64_t v58 = (char **)sub_10050F848(v112, (uint64_t)&type metadata for UnsafeRawBufferPointer);
          uint64_t v34 = *v58;
          if (!*v58) {
            goto LABEL_22;
          }
          uint64_t v59 = v58[1];
          uint64_t v60 = v59 - v34;
          if (v59 == v34)
          {
            uint64_t v34 = 0;
LABEL_22:
            unint64_t v35 = 0xC000000000000000;
          }
          else if (v60 <= 14)
          {
            memset(v108, 0, sizeof(v108));
            unsigned __int8 v109 = (_BYTE)v59 - (_BYTE)v34;
            memcpy(v108, v34, v59 - v34);
            uint64_t v34 = *(char **)v108;
            unint64_t v35 = *(unsigned int *)&v108[8] | ((unint64_t)v108[12] << 32) | ((unint64_t)v108[13] << 40) | ((unint64_t)v109 << 48);
          }
          else
          {
            type metadata accessor for __DataStorage();
            swift_allocObject();
            uint64_t v61 = __DataStorage.init(bytes:length:)();
            uint64_t v62 = v61;
            if ((unint64_t)v60 >= 0x7FFFFFFF)
            {
              type metadata accessor for Data.RangeReference();
              uint64_t v34 = (char *)swift_allocObject();
              *((void *)v34 + 2) = 0;
              *((void *)v34 + 3) = v60;
              unint64_t v35 = v62 | 0x8000000000000000;
            }
            else
            {
              uint64_t v34 = (char *)(v60 << 32);
              unint64_t v35 = v61 | 0x4000000000000000;
            }
          }
          _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v112);
LABEL_24:
          *((void *)v12 + 2) = v34;
          *((void *)v12 + 3) = v35;
          goto LABEL_39;
      }
      break;
    }
  }
  return result;
}

uint64_t sub_100AC03C4(void *a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for CRLProto_Path(0);
  __chkstk_darwin(v5, v6);
  double v8 = (void *)((char *)v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t result = sub_100ABFCCC(a2, v8);
  if (!v2)
  {
    sub_100AC1A98();
    uint64_t v10 = Message.serializedData(partial:)();
    unint64_t v12 = v11;
    sub_100AC14A4((uint64_t)v8, type metadata accessor for CRLProto_Path);
    sub_10050F848(a1, a1[3]);
    dispatch thunk of Encoder.singleValueContainer()();
    v13[1] = v10;
    v13[2] = v12;
    sub_1005231B4((uint64_t)v14, v15);
    sub_10060D344();
    dispatch thunk of SingleValueEncodingContainer.encode<A>(_:)();
    sub_100510084(v10, v12);
    return _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v14);
  }
  return result;
}

uint64_t sub_100AC0530@<X0>(double **a1@<X8>)
{
  dispatch thunk of CRDecoder.valueContainer()();
  if (v1) {
    return swift_release();
  }
  uint64_t v3 = dispatch thunk of CRDecoder.CRValueContainer.decode(_:)();
  unint64_t v5 = v4;
  swift_release();
  uint64_t v6 = sub_100AC16B0(v3, v5);
  sub_100510084(v3, v5);
  uint64_t result = swift_release();
  *a1 = v6;
  return result;
}

uint64_t sub_100AC05E0(uint64_t a1)
{
  return sub_100ABFBA4(a1, *v1);
}

void *sub_100AC05FC@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t result = sub_100AC1848(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_100AC0628(void *a1)
{
  return sub_100AC03C4(a1, *v1);
}

BOOL sub_100AC0644(uint64_t *a1, uint64_t *a2)
{
  return sub_1005BA910(*a1, *a2);
}

uint64_t sub_100AC0650(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_100AC1B58();
  unint64_t v7 = sub_100AC1BAC();

  return CRValue<>.observableDifference(from:with:)(a1, a2, a3, v6, v7);
}

uint64_t sub_100AC06C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CRLProto_Path.Element(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

double *sub_100AC0724(uint64_t a1, unint64_t a2, char a3)
{
  unint64_t v3 = a2 >> 62;
  uint64_t result = 0;
  switch(a2 >> 62)
  {
    case 1uLL:
      if (__OFSUB__(HIDWORD(a1), a1))
      {
        __break(1u);
LABEL_77:
        __break(1u);
LABEL_78:
        __break(1u);
LABEL_79:
        __break(1u);
LABEL_80:
        __break(1u);
        goto LABEL_81;
      }
      uint64_t result = (double *)(HIDWORD(a1) - (int)a1);
LABEL_6:
      if (result)
      {
        if (result != (double *)4)
        {
          if (result != (double *)8) {
            return 0;
          }
          if (v3)
          {
            if (v3 == 1)
            {
              if (a1 >> 32 >= (int)a1)
              {
                sub_100510D4C(a1, a2);
                uint64_t v9 = __DataStorage._bytes.getter();
                if (!v9)
                {
                  __DataStorage._length.getter();
                  uint64_t v14 = 0;
                  uint64_t v15 = 0;
                  goto LABEL_50;
                }
                uint64_t v10 = v9;
                uint64_t v11 = __DataStorage._offset.getter();
                uint64_t v12 = (int)a1 - v11;
                if (!__OFSUB__((int)a1, v11))
                {
                  uint64_t v13 = __DataStorage._length.getter();
                  uint64_t v14 = (char *)(v10 + v12);
                  if (v13 >= (a1 >> 32) - (int)a1) {
                    uint64_t v13 = (a1 >> 32) - (int)a1;
                  }
                  uint64_t v15 = v13 / 4;
LABEL_50:
                  double v23 = sub_1006B9BB0(v14, v15);
                  sub_100510084(a1, a2);
                  int64_t v24 = *((void *)v23 + 2);
                  if (!v24) {
                    goto LABEL_68;
                  }
                  goto LABEL_54;
                }
                goto LABEL_80;
              }
              goto LABEL_78;
            }
            uint64_t v25 = *(void *)(a1 + 16);
            uint64_t v26 = *(void *)(a1 + 24);
            swift_retain();
            swift_retain();
            float v27 = (char *)__DataStorage._bytes.getter();
            if (v27)
            {
              uint64_t v28 = __DataStorage._offset.getter();
              if (__OFSUB__(v25, v28))
              {
LABEL_81:
                __break(1u);
                goto LABEL_82;
              }
              v27 += v25 - v28;
            }
            _VF = __OFSUB__(v26, v25);
            uint64_t v30 = v26 - v25;
            if (_VF) {
              goto LABEL_79;
            }
            uint64_t v31 = __DataStorage._length.getter();
            if (v27)
            {
              if (v31 >= v30) {
                uint64_t v32 = v30;
              }
              else {
                uint64_t v32 = v31;
              }
              uint64_t v33 = v32 / 4;
            }
            else
            {
              uint64_t v33 = 0;
            }
            double v23 = sub_1006B9BB0(v27, v33);
            swift_release();
            swift_release();
            int64_t v24 = *((void *)v23 + 2);
            if (!v24) {
              goto LABEL_68;
            }
LABEL_54:
            float v63 = _swiftEmptyArrayStorage;
            sub_1006BB524(0, v24, 0);
            uint64_t v44 = 0;
            uint64_t v45 = v63;
            unint64_t v46 = *((void *)v63 + 2);
            do
            {
              float v47 = *((float *)v23 + v44 + 8);
              float v63 = v45;
              unint64_t v48 = *((void *)v45 + 3);
              if (v46 >= v48 >> 1)
              {
                sub_1006BB524(v48 > 1, v46 + 1, 1);
                uint64_t v45 = v63;
              }
              ++v44;
              *((void *)v45 + 2) = v46 + 1;
              v45[v46++ + 4] = v47;
            }
            while (v24 != v44);
LABEL_65:
            swift_bridgeObjectRelease();
LABEL_69:
            if (*((void *)v45 + 2) == 2)
            {
              float v57 = (double *)*((void *)v45 + 4);
              uint64_t v58 = *((void *)v45 + 5);
              swift_bridgeObjectRelease();
              uint64_t result = v57;
              if ((~(unint64_t)v57 & 0x7FF0000000000000) == 0 || (~v58 & 0x7FF0000000000000) == 0)
              {
                sub_1005057FC((uint64_t *)&unk_101672B40);
                uint64_t inited = swift_initStackObject();
                *(_OWORD *)(inited + 16) = xmmword_10117E810;
                float v63 = v57;
                uint64_t v64 = v58;
                type metadata accessor for CGPoint(0);
                uint64_t v60 = String.init<A>(describing:)();
                uint64_t v62 = v61;
                *(void *)(inited + 56) = &type metadata for String;
                *(void *)(inited + 64) = sub_100528BE4();
                *(void *)(inited + 32) = v60;
                *(void *)(inited + 40) = v62;
                sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"decodeRawPoint(fromPointData:allow16BitDecode:)", 47, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLUtility/CRLBezierPathData.swift", 88, 2, 279, (uint64_t)"Corrupt bezier path point detected %{public}@. Using a default (0, 0) point instead to avoid a crash.", 101, 2u, inited);
                sub_1005598CC(inited, (uint64_t)"decodeRawPoint(fromPointData:allow16BitDecode:)", 47, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLUtility/CRLBezierPathData.swift", 88, 2, 279);
                swift_setDeallocating();
                sub_1005057FC(&qword_101672B50);
                swift_arrayDestroy();
                return 0;
              }
              return result;
            }
            swift_bridgeObjectRelease();
            return 0;
          }
          float v63 = (double *)a1;
          LOWORD(v64) = a2;
          BYTE2(v64) = BYTE2(a2);
          BYTE3(v64) = BYTE3(a2);
          BYTE4(v64) = BYTE4(a2);
          BYTE5(v64) = BYTE5(a2);
          double v23 = sub_1006B9BB0((char *)&v63, (a2 >> 50) & 0x3F);
          int64_t v24 = *((void *)v23 + 2);
          if (v24) {
            goto LABEL_54;
          }
LABEL_68:
          swift_bridgeObjectRelease();
          uint64_t v45 = _swiftEmptyArrayStorage;
          goto LABEL_69;
        }
        if ((a3 & 1) == 0) {
          return 0;
        }
        if (v3)
        {
          if (v3 == 1)
          {
            if (a1 >> 32 < (int)a1)
            {
LABEL_82:
              __break(1u);
LABEL_83:
              __break(1u);
              goto LABEL_84;
            }
            sub_100510D4C(a1, a2);
            uint64_t v16 = __DataStorage._bytes.getter();
            if (v16)
            {
              uint64_t v17 = v16;
              uint64_t v18 = __DataStorage._offset.getter();
              uint64_t v19 = (int)a1 - v18;
              if (__OFSUB__((int)a1, v18))
              {
LABEL_84:
                __break(1u);
LABEL_85:
                __break(1u);
              }
              uint64_t v20 = __DataStorage._length.getter();
              double v21 = (char *)(v17 + v19);
              if (v20 >= (a1 >> 32) - (int)a1) {
                uint64_t v20 = (a1 >> 32) - (int)a1;
              }
              uint64_t v22 = v20 / 2;
            }
            else
            {
              __DataStorage._length.getter();
              double v21 = 0;
              uint64_t v22 = 0;
            }
            uint64_t v34 = sub_1006BAB54(v21, v22);
            sub_100510084(a1, a2);
            int64_t v35 = *((void *)v34 + 2);
            if (!v35) {
              goto LABEL_68;
            }
          }
          else
          {
            uint64_t v36 = *(void *)(a1 + 16);
            uint64_t v37 = *(void *)(a1 + 24);
            swift_retain();
            swift_retain();
            uint64_t v38 = (char *)__DataStorage._bytes.getter();
            if (v38)
            {
              uint64_t v39 = __DataStorage._offset.getter();
              if (__OFSUB__(v36, v39)) {
                goto LABEL_85;
              }
              v38 += v36 - v39;
            }
            _VF = __OFSUB__(v37, v36);
            uint64_t v40 = v37 - v36;
            if (_VF) {
              goto LABEL_83;
            }
            uint64_t v41 = __DataStorage._length.getter();
            if (v38)
            {
              if (v41 >= v40) {
                uint64_t v42 = v40;
              }
              else {
                uint64_t v42 = v41;
              }
              uint64_t v43 = v42 / 2;
            }
            else
            {
              uint64_t v43 = 0;
            }
            uint64_t v34 = sub_1006BAB54(v38, v43);
            swift_release();
            swift_release();
            int64_t v35 = *((void *)v34 + 2);
            if (!v35) {
              goto LABEL_68;
            }
          }
        }
        else
        {
          float v63 = (double *)a1;
          LOWORD(v64) = a2;
          BYTE2(v64) = BYTE2(a2);
          BYTE3(v64) = BYTE3(a2);
          BYTE4(v64) = BYTE4(a2);
          BYTE5(v64) = BYTE5(a2);
          uint64_t v34 = sub_1006BAB54((char *)&v63, (a2 >> 49) & 0x7F);
          int64_t v35 = *((void *)v34 + 2);
          if (!v35) {
            goto LABEL_68;
          }
        }
        float v63 = _swiftEmptyArrayStorage;
        sub_1006BB524(0, v35, 0);
        uint64_t v49 = 0;
        uint64_t v45 = v63;
        unint64_t v50 = *((void *)v63 + 2);
        do
        {
          _H8 = *((_WORD *)v34 + v49 + 16);
          float v63 = v45;
          unint64_t v52 = *((void *)v45 + 3);
          if (v50 >= v52 >> 1)
          {
            sub_1006BB524(v52 > 1, v50 + 1, 1);
            uint64_t v45 = v63;
          }
          ++v49;
          __asm { FCVT            D0, H8 }
          *((void *)v45 + 2) = v50 + 1;
          v45[v50++ + 4] = _D0;
        }
        while (v35 != v49);
        goto LABEL_65;
      }
      return result;
    case 2uLL:
      uint64_t v8 = *(void *)(a1 + 16);
      uint64_t v7 = *(void *)(a1 + 24);
      uint64_t result = (double *)(v7 - v8);
      if (!__OFSUB__(v7, v8)) {
        goto LABEL_6;
      }
      goto LABEL_77;
    case 3uLL:
      return result;
    default:
      uint64_t result = (double *)BYTE6(a2);
      goto LABEL_6;
  }
}

double *sub_100AC0E30(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for CRLProto_Path.Element(0) - 8;
  __chkstk_darwin(v2, v3);
  unint64_t v6 = (char *)v40 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)a1;
  uint64_t v8 = *(void *)(*(void *)a1 + 16);
  v40[1] = *(void *)a1;
  uint64_t v41 = a1;
  if (v8)
  {
    uint64_t v9 = v7 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    uint64_t v42 = *(void *)(v4 + 72);
    swift_bridgeObjectRetain();
    uint64_t v10 = _swiftEmptyArrayStorage;
    do
    {
      sub_100AC1AF0(v9, (uint64_t)v6, type metadata accessor for CRLProto_Path.Element);
      if (v6[8] == 1)
      {
        char v12 = 3;
        double v13 = 0.0;
        double v14 = 0.0;
        double v15 = 0.0;
        uint64_t v16 = 0;
        double v17 = 0.0;
        uint64_t v18 = 0;
        switch(*(void *)v6)
        {
          case 1:
            *(double *)&uint64_t v22 = COERCE_DOUBLE(sub_100AC0724(*((void *)v6 + 2), *((void *)v6 + 3), 0));
            if ((v24 & 1) == 0)
            {
              double v14 = *(double *)&v22;
              double v15 = v23;
              char v12 = 1;
              goto LABEL_12;
            }
            sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"init(_:)", 8, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLUtility/CRLBezierPathData.swift", 88, 2, 102, (uint64_t)"Missing or invalid line end point. Ignoring element.", 52, 2u, (uint64_t)_swiftEmptyArrayStorage);
            uint64_t v11 = 102;
            goto LABEL_4;
          case 2:
            *(double *)&uint64_t v28 = COERCE_DOUBLE(sub_100AC0724(*((void *)v6 + 2), *((void *)v6 + 3), 0));
            if (v30)
            {
              sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"init(_:)", 8, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLUtility/CRLBezierPathData.swift", 88, 2, 109, (uint64_t)"Missing or invalid curve end point. Ignoring element.", 53, 2u, (uint64_t)_swiftEmptyArrayStorage);
              uint64_t v11 = 109;
            }
            else
            {
              double v14 = *(double *)&v28;
              double v15 = v29;
              *(double *)&uint64_t v31 = COERCE_DOUBLE(sub_100AC0724(*((void *)v6 + 4), *((void *)v6 + 5), 1));
              if (v32)
              {
                sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"init(_:)", 8, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLUtility/CRLBezierPathData.swift", 88, 2, 115, (uint64_t)"Missing or invalid curve control point 1. Ignoring element.", 59, 2u, (uint64_t)_swiftEmptyArrayStorage);
                uint64_t v11 = 115;
              }
              else
              {
                double v33 = *(double *)&v31;
                *(double *)&uint64_t v34 = COERCE_DOUBLE(sub_100AC0724(*((void *)v6 + 6), *((void *)v6 + 7), 1));
                if ((v35 & 1) == 0)
                {
                  double v36 = *(double *)&v34;
                  double v13 = sub_100064698(v14, v15, v33);
                  uint64_t v16 = v37;
                  double v17 = sub_100064698(v14, v15, v36);
                  uint64_t v18 = v38;
                  char v12 = 2;
                  goto LABEL_12;
                }
                sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"init(_:)", 8, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLUtility/CRLBezierPathData.swift", 88, 2, 121, (uint64_t)"Missing or invalid curve control point 2. Ignoring element.", 59, 2u, (uint64_t)_swiftEmptyArrayStorage);
                uint64_t v11 = 121;
              }
            }
            goto LABEL_4;
          case 3:
            goto LABEL_12;
          default:
            *(double *)&uint64_t v19 = COERCE_DOUBLE(sub_100AC0724(*((void *)v6 + 2), *((void *)v6 + 3), 0));
            if (v21)
            {
              sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"init(_:)", 8, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLUtility/CRLBezierPathData.swift", 88, 2, 95, (uint64_t)"Missing or invalid move end point. Ignoring element.", 52, 2u, (uint64_t)_swiftEmptyArrayStorage);
              uint64_t v11 = 95;
              goto LABEL_4;
            }
            double v14 = *(double *)&v19;
            double v15 = v20;
            char v12 = 0;
LABEL_12:
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              uint64_t v10 = (double *)sub_100F649C4(0, *((void *)v10 + 2) + 1, 1, v10);
            }
            unint64_t v26 = *((void *)v10 + 2);
            unint64_t v25 = *((void *)v10 + 3);
            if (v26 >= v25 >> 1) {
              uint64_t v10 = (double *)sub_100F649C4((void *)(v25 > 1), v26 + 1, 1, v10);
            }
            *((void *)v10 + 2) = v26 + 1;
            float v27 = &v10[7 * v26];
            v27[4] = v14;
            v27[5] = v15;
            v27[6] = v13;
            *((void *)v27 + 7) = v16;
            v27[8] = v17;
            *((void *)v27 + 9) = v18;
            *((unsigned char *)v27 + 80) = v12;
            break;
        }
      }
      else
      {
        sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"init(_:)", 8, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLUtility/CRLBezierPathData.swift", 88, 2, 130, (uint64_t)"Unknown bezier point type. Ignoring element.", 44, 2u, (uint64_t)_swiftEmptyArrayStorage);
        uint64_t v11 = 130;
LABEL_4:
        sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"init(_:)", 8, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLUtility/CRLBezierPathData.swift", 88, 2, v11);
      }
      sub_100AC14A4((uint64_t)v6, type metadata accessor for CRLProto_Path.Element);
      v9 += v42;
      --v8;
    }
    while (v8);
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = _swiftEmptyArrayStorage;
  }
  sub_100AC14A4(v41, type metadata accessor for CRLProto_Path);
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_100AC14A4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t getEnumTagSinglePayload for CRLBezierPathPointData(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFD && *(unsigned char *)(a1 + 49)) {
    return (*(_DWORD *)a1 + 253);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 48);
  if (v3 <= 3) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for CRLBezierPathPointData(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 48) = 0;
    *(void *)uint64_t result = a2 - 253;
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 49) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 49) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 48) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_100AC15A0(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 48) <= 2u) {
    return *(unsigned __int8 *)(a1 + 48);
  }
  else {
    return (*(_DWORD *)a1 + 3);
  }
}

uint64_t sub_100AC15B8(uint64_t result, unsigned int a2)
{
  if (a2 >= 3)
  {
    *(void *)uint64_t result = a2 - 3;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)(result + 40) = 0;
    LOBYTE(a2) = 3;
  }
  *(unsigned char *)(result + 48) = a2;
  return result;
}

ValueMetadata *type metadata accessor for CRLBezierPathPointData()
{
  return &type metadata for CRLBezierPathPointData;
}

ValueMetadata *type metadata accessor for CRLBezierPathData()
{
  return &type metadata for CRLBezierPathData;
}

unint64_t sub_100AC1604()
{
  unint64_t result = qword_10168F490;
  if (!qword_10168F490)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168F490);
  }
  return result;
}

unint64_t sub_100AC165C()
{
  unint64_t result = qword_10168F498;
  if (!qword_10168F498)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168F498);
  }
  return result;
}

double *sub_100AC16B0(uint64_t a1, unint64_t a2)
{
  uint64_t v5 = type metadata accessor for BinaryDecodingOptions();
  __chkstk_darwin(v5 - 8, v6);
  uint64_t v7 = type metadata accessor for CRLProto_Path(0);
  __chkstk_darwin(v7, v8);
  uint64_t v10 = (char *)v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11, v12);
  double v14 = (char *)v17 - v13;
  uint64_t v18 = 0;
  memset(v17, 0, sizeof(v17));
  sub_100510D4C(a1, a2);
  BinaryDecodingOptions.init()();
  sub_100AC1A98();
  double v15 = (double *)v7;
  Message.init(serializedData:extensions:partial:options:)();
  if (!v2)
  {
    sub_100AC1AF0((uint64_t)v14, (uint64_t)v10, type metadata accessor for CRLProto_Path);
    double v15 = sub_100AC0E30((uint64_t)v10);
    sub_100AC14A4((uint64_t)v14, type metadata accessor for CRLProto_Path);
  }
  return v15;
}

void *sub_100AC1848(void *a1)
{
  uint64_t v3 = type metadata accessor for BinaryDecodingOptions();
  __chkstk_darwin(v3 - 8, v4);
  uint64_t v5 = type metadata accessor for CRLProto_Path(0);
  __chkstk_darwin(v5, v6);
  uint64_t v8 = (char *)v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9, v10);
  uint64_t v12 = (char *)v17 - v11;
  uint64_t v13 = sub_10050F848(a1, a1[3]);
  dispatch thunk of Decoder.singleValueContainer()();
  if (!v1)
  {
    sub_10050F848(&v18, *((uint64_t *)&v19 + 1));
    sub_10060D184();
    dispatch thunk of SingleValueDecodingContainer.decode<A>(_:)();
    uint64_t v14 = v17[0];
    unint64_t v15 = v17[1];
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v18);
    uint64_t v20 = 0;
    long long v18 = 0u;
    long long v19 = 0u;
    sub_100510D4C(v14, v15);
    BinaryDecodingOptions.init()();
    sub_100AC1A98();
    Message.init(serializedData:extensions:partial:options:)();
    sub_100AC1AF0((uint64_t)v12, (uint64_t)v8, type metadata accessor for CRLProto_Path);
    uint64_t v13 = sub_100AC0E30((uint64_t)v8);
    sub_100AC14A4((uint64_t)v12, type metadata accessor for CRLProto_Path);
    sub_100510084(v14, v15);
  }
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)a1);
  return v13;
}

unint64_t sub_100AC1A98()
{
  unint64_t result = qword_10168F4A0;
  if (!qword_10168F4A0)
  {
    type metadata accessor for CRLProto_Path(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168F4A0);
  }
  return result;
}

uint64_t sub_100AC1AF0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

unint64_t sub_100AC1B58()
{
  unint64_t result = qword_10168F4A8;
  if (!qword_10168F4A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168F4A8);
  }
  return result;
}

unint64_t sub_100AC1BAC()
{
  unint64_t result = qword_10168F4B0;
  if (!qword_10168F4B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168F4B0);
  }
  return result;
}

uint64_t CRLiCloudConnectionStatus.rawValue.getter(uint64_t result)
{
  return result;
}

uint64_t sub_100AC1C10()
{
  uint64_t v1 = *(void *)(v0 + 32);
  if (v1 == 1) {
    return 1;
  }
  uint64_t v3 = *(void *)(v0 + 24);
  if (v3 == 1) {
    unsigned int v4 = 2;
  }
  else {
    unsigned int v4 = 3;
  }
  if (v1 == 4 || v3 == 4) {
    unsigned int v4 = 0;
  }
  if (v1) {
    BOOL v6 = v3 == 0;
  }
  else {
    BOOL v6 = 1;
  }
  if (v6) {
    return 0;
  }
  else {
    return v4;
  }
}

void sub_100AC1C50(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v29 = *(void *)(v4 - 8);
  __chkstk_darwin(v4, v5);
  uint64_t v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for DispatchQoS();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8, v10);
  uint64_t v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10166FBA0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v13 = (void *)static OS_os_log.realTimeSync;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117E810;
  uint64_t v15 = *(void *)(v2 + 24);
  *(void *)(inited + 56) = &type metadata for Int;
  *(void *)(inited + 64) = &protocol witness table for Int;
  *(void *)(inited + 32) = v15;
  id v16 = v13;
  uint64_t v17 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v16, (uint64_t)&_mh_execute_header, v17, (uint64_t)"Cached account status: %d", 25, 2, inited);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  uint64_t v18 = *(void *)(v2 + 24);
  if (v18 != a1)
  {
    uint64_t v19 = *(void *)(v2 + 32);
    if (v19 == 1)
    {
      char v20 = 1;
    }
    else
    {
      char v20 = 0;
      if (v18)
      {
        if (v19)
        {
          char v20 = 0;
          if (v18 != 4 && v19 != 4)
          {
            if (v18 == 1) {
              char v20 = 2;
            }
            else {
              char v20 = 3;
            }
          }
        }
      }
    }
    if ((*(unsigned char *)(v2 + 64) & 1) == 0)
    {
      LOBYTE(aBlock) = v20;
      swift_retain();
      CurrentValueSubject.send(_:)();
      swift_release();
    }
    sub_10050BF48(0, (unint64_t *)&qword_1016725C0);
    char v21 = (void *)static OS_dispatch_queue.main.getter();
    uint64_t v22 = swift_allocObject();
    *(void *)(v22 + 16) = v2;
    *(unsigned char *)(v22 + 24) = v20;
    uint64_t v34 = sub_100AC5ED4;
    char v35 = (void *)v22;
    long long aBlock = _NSConcreteStackBlock;
    uint64_t v31 = *(void *)"";
    char v32 = sub_100679958;
    double v33 = &unk_101521F28;
    double v23 = _Block_copy(&aBlock);
    swift_retain();
    swift_release();
    static DispatchQoS.unspecified.getter();
    long long aBlock = (void **)_swiftEmptyArrayStorage;
    sub_100522CDC();
    sub_1005057FC((uint64_t *)&unk_1016725D0);
    sub_10056B494();
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v23);

    (*(void (**)(char *, uint64_t))(v29 + 8))(v7, v4);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
    char v24 = *(void **)(v2 + 40);
    *(void *)(v2 + 40) = 0;
    sub_100AC279C(v24);

    unint64_t v25 = *(void **)(v2 + 72);
    uint64_t v26 = swift_allocObject();
    swift_weakInit();
    float v27 = (void *)swift_allocObject();
    v27[2] = CRLWPObjcUserDefaults.setAutomaticSpellingCorrection(enabled:);
    void v27[3] = 0;
    v27[4] = v26;
    uint64_t v34 = sub_100AC5F5C;
    char v35 = v27;
    long long aBlock = _NSConcreteStackBlock;
    uint64_t v31 = *(void *)"";
    char v32 = (uint64_t (*)(uint64_t))sub_100AC1C00;
    double v33 = &unk_101521F78;
    uint64_t v28 = _Block_copy(&aBlock);
    swift_release();
    [v25 fetchUserRecordIDWithCompletionHandler:v28];
    _Block_release(v28);
  }
}

void sub_100AC2144(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v29 = *(void *)(v4 - 8);
  __chkstk_darwin(v4, v5);
  uint64_t v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for DispatchQoS();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8, v10);
  uint64_t v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10166FBA0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v13 = (void *)static OS_os_log.realTimeSync;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117E810;
  uint64_t v15 = *(void *)(v2 + 32);
  *(void *)(inited + 56) = &type metadata for Int;
  *(void *)(inited + 64) = &protocol witness table for Int;
  *(void *)(inited + 32) = v15;
  id v16 = v13;
  uint64_t v17 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v16, (uint64_t)&_mh_execute_header, v17, (uint64_t)"Cached dataclass status: %d", 27, 2, inited);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  uint64_t v18 = *(void *)(v2 + 32);
  if (v18 != a1)
  {
    if (v18 == 1)
    {
      char v19 = 1;
    }
    else
    {
      char v19 = 0;
      if (v18)
      {
        uint64_t v28 = *(void *)(v2 + 24);
        if (v28)
        {
          char v19 = 0;
          if (v18 != 4 && v28 != 4)
          {
            if (v28 == 1) {
              char v19 = 2;
            }
            else {
              char v19 = 3;
            }
          }
        }
      }
    }
    if ((*(unsigned char *)(v2 + 64) & 1) == 0)
    {
      LOBYTE(aBlock) = v19;
      swift_retain();
      CurrentValueSubject.send(_:)();
      swift_release();
    }
    sub_10050BF48(0, (unint64_t *)&qword_1016725C0);
    char v20 = (void *)static OS_dispatch_queue.main.getter();
    uint64_t v21 = swift_allocObject();
    *(void *)(v21 + 16) = v2;
    *(unsigned char *)(v21 + 24) = v19;
    uint64_t v34 = sub_100AC5D20;
    char v35 = (void *)v21;
    long long aBlock = _NSConcreteStackBlock;
    uint64_t v31 = *(void *)"";
    char v32 = sub_100679958;
    double v33 = &unk_101521E88;
    uint64_t v22 = _Block_copy(&aBlock);
    swift_retain();
    swift_release();
    static DispatchQoS.unspecified.getter();
    long long aBlock = (void **)_swiftEmptyArrayStorage;
    sub_100522CDC();
    sub_1005057FC((uint64_t *)&unk_1016725D0);
    sub_10056B494();
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v22);

    (*(void (**)(char *, uint64_t))(v29 + 8))(v7, v4);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
    double v23 = *(void **)(v2 + 40);
    *(void *)(v2 + 40) = 0;
    sub_100AC279C(v23);

    char v24 = *(void **)(v2 + 72);
    uint64_t v25 = swift_allocObject();
    swift_weakInit();
    uint64_t v26 = (void *)swift_allocObject();
    v26[2] = SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:);
    v26[3] = 0;
    _OWORD v26[4] = v25;
    uint64_t v34 = (void (*)())sub_100AC5F5C;
    char v35 = v26;
    long long aBlock = _NSConcreteStackBlock;
    uint64_t v31 = *(void *)"";
    char v32 = (uint64_t (*)(uint64_t))sub_100AC1C00;
    double v33 = &unk_101521ED8;
    float v27 = _Block_copy(&aBlock);
    swift_release();
    [v24 fetchUserRecordIDWithCompletionHandler:v27];
    _Block_release(v27);
  }
}

void sub_100AC2638(uint64_t a1, char a2)
{
  id v4 = [self defaultCenter];
  if (qword_10166F878 != -1) {
    swift_once();
  }
  uint64_t v5 = qword_10171B790;
  sub_1005057FC(&qword_101677430);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117E810;
  AnyHashable.init<A>(_:)();
  *(void *)(inited + 96) = &type metadata for CRLiCloudConnectionStatus;
  *(unsigned char *)(inited + 72) = a2;
  sub_100A393A8(inited);
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v4 postNotificationName:v5 object:a1 userInfo:isa];
}

void sub_100AC279C(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v23 = *(void *)(v4 - 8);
  __chkstk_darwin(v4, v5);
  uint64_t v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for DispatchQoS();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8, v10);
  uint64_t v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = *(void **)(v2 + 40);
  if (!a1) {
    goto LABEL_5;
  }
  if (v13)
  {
    sub_10050BF48(0, &qword_10167BED0);
    id v14 = v13;
    id v15 = a1;
    char v16 = static NSObject.== infix(_:_:)();

    if ((v16 & 1) == 0)
    {
      uint64_t v13 = *(void **)(v2 + 40);
LABEL_5:
      if (v13)
      {
        sub_10050BF48(0, (unint64_t *)&qword_1016725C0);
        id v17 = v13;
        uint64_t v18 = (void *)static OS_dispatch_queue.main.getter();
        uint64_t v19 = swift_allocObject();
        *(void *)(v19 + 16) = v2;
        *(void *)(v19 + 24) = v17;
        aBlock[4] = sub_100AC5BC0;
        aBlock[5] = v19;
        aBlock[0] = _NSConcreteStackBlock;
        aBlock[1] = *(void *)"";
        void aBlock[2] = sub_100679958;
        void aBlock[3] = &unk_101521DE8;
        char v20 = _Block_copy(aBlock);
        id v21 = v17;
        swift_retain();
        swift_release();
        static DispatchQoS.unspecified.getter();
        aBlock[0] = _swiftEmptyArrayStorage;
        sub_100522CDC();
        sub_1005057FC((uint64_t *)&unk_1016725D0);
        sub_10056B494();
        dispatch thunk of SetAlgebra.init<A>(_:)();
        OS_dispatch_queue.async(group:qos:flags:execute:)();
        _Block_release(v20);

        (*(void (**)(char *, uint64_t))(v23 + 8))(v7, v4);
        (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
      }
    }
  }
}

void sub_100AC2AA4(uint64_t a1, void *a2)
{
  id v4 = [self defaultCenter];
  if (qword_10166F880 != -1) {
    swift_once();
  }
  uint64_t v5 = qword_10171B798;
  sub_1005057FC(&qword_101677430);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117E810;
  AnyHashable.init<A>(_:)();
  *(void *)(inited + 96) = sub_10050BF48(0, &qword_10167BED0);
  *(void *)(inited + 72) = a2;
  id v7 = a2;
  sub_100A393A8(inited);
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v4 postNotificationName:v5 object:a1 userInfo:isa];
}

void sub_100AC2C18(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v20 = *(void *)(v4 - 8);
  __chkstk_darwin(v4, v5);
  id v7 = (char *)&aBlock[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for DispatchQoS();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8, v10);
  uint64_t v12 = (char *)&aBlock[-1] - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10166FBA0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v13 = (void *)static OS_os_log.realTimeSync;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117E810;
  uint64_t v15 = *(void *)(v2 + 48);
  *(void *)(inited + 56) = &type metadata for Int;
  *(void *)(inited + 64) = &protocol witness table for Int;
  *(void *)(inited + 32) = v15;
  id v16 = v13;
  uint64_t v17 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v16, (uint64_t)&_mh_execute_header, v17, (uint64_t)"Cached device to device encryption availability: %d", 51, 2, inited);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  if (*(void *)(v2 + 48) != a1)
  {
    sub_10050BF48(0, (unint64_t *)&qword_1016725C0);
    uint64_t v18 = (void *)static OS_dispatch_queue.main.getter();
    aBlock[4] = sub_100AC5ECC;
    aBlock[5] = v2;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = *(void *)"";
    void aBlock[2] = sub_100679958;
    void aBlock[3] = &unk_101522180;
    uint64_t v19 = _Block_copy(aBlock);
    swift_retain();
    swift_release();
    static DispatchQoS.unspecified.getter();
    aBlock[0] = _swiftEmptyArrayStorage;
    sub_100522CDC();
    sub_1005057FC((uint64_t *)&unk_1016725D0);
    sub_10056B494();
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v19);

    (*(void (**)(char *, uint64_t))(v20 + 8))(v7, v4);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
    sub_1005CC644(*(void *)(v2 + 48));
  }
}

void sub_100AC2F9C(uint64_t a1)
{
  id v2 = [self defaultCenter];
  if (qword_10166F870 != -1) {
    swift_once();
  }
  uint64_t v3 = qword_10171B788;
  sub_1005057FC(&qword_101677430);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117E810;
  AnyHashable.init<A>(_:)();
  uint64_t v5 = *(void *)(a1 + 48);
  type metadata accessor for CKDeviceToDeviceEncryptionStatus(0);
  *(void *)(inited + 96) = v6;
  *(void *)(inited + 72) = v5;
  sub_100A393A8(inited);
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v2 postNotificationName:v3 object:a1 userInfo:isa];
}

uint64_t sub_100AC30FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1005057FC(&qword_10168F680);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  __n128 v8 = __chkstk_darwin(v4, v7);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v5 + 16))((char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v4, v8);
  unint64_t v9 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v10 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v10 + v9, (char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  uint64_t v11 = *(void **)(a2 + 72);
  uint64_t v12 = swift_allocObject();
  swift_weakInit();
  uint64_t v13 = (void *)swift_allocObject();
  v13[2] = sub_100AC5A48;
  void v13[3] = v10;
  v13[4] = v12;
  aBlock[4] = sub_100AC5B08;
  aBlock[5] = v13;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = *(void *)"";
  void aBlock[2] = sub_100AC1C00;
  void aBlock[3] = &unk_101521D48;
  id v14 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  [v11 fetchUserRecordIDWithCompletionHandler:v14];
  _Block_release(v14);
  return swift_release();
}

uint64_t sub_100AC330C(void *a1, char a2)
{
  if (a2)
  {
    swift_errorRetain();
    sub_1005057FC(&qword_10168F680);
    return CheckedContinuation.resume(throwing:)();
  }
  else
  {
    id v2 = a1;
    sub_1005057FC(&qword_10168F680);
    return CheckedContinuation.resume(returning:)();
  }
}

uint64_t sub_100AC337C()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1005057FC(&qword_101672BB0);
  __chkstk_darwin(v2 - 8, v3);
  uint64_t v5 = (char *)v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for TaskPriority();
  uint64_t v7 = *(void *)(v6 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v5, 1, 1, v6);
  __n128 v8 = (void *)swift_allocObject();
  v8[2] = 0;
  _OWORD v8[3] = 0;
  v8[4] = v1;
  int v9 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6);
  swift_retain();
  if (v9 == 1)
  {
    sub_100522F00((uint64_t)v5, &qword_101672BB0);
    uint64_t v10 = 0;
    uint64_t v11 = 0;
  }
  else
  {
    TaskPriority.rawValue.getter();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v5, v6);
    if (v8[2])
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v10 = dispatch thunk of Actor.unownedExecutor.getter();
      uint64_t v11 = v12;
      swift_unknownObjectRelease();
    }
    else
    {
      uint64_t v10 = 0;
      uint64_t v11 = 0;
    }
  }
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = &unk_10168F690;
  *(void *)(v13 + 24) = v8;
  if (v11 | v10)
  {
    v15[0] = 0;
    v15[1] = 0;
    v15[2] = v10;
    v15[3] = v11;
  }
  swift_task_create();
  return swift_release();
}

uint64_t sub_100AC35C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 16) = a4;
  return _swift_task_switch(sub_100AC35E0, 0, 0);
}

id sub_100AC35E0()
{
  uint64_t v1 = *(void *)(v0 + 16);
  *(unsigned char *)(v1 + 64) = 1;
  uint64_t v2 = self;
  id result = [v2 defaultStore];
  if (!result)
  {
    __break(1u);
    goto LABEL_29;
  }
  uint64_t v4 = result;
  uint64_t v5 = *(void *)(v0 + 16);
  id v6 = [result aa_primaryAppleAccount];

  uint64_t v7 = *(void *)(v5 + 24);
  uint64_t v8 = *(void *)(v0 + 16);
  if (!v6)
  {
    *(void *)(v5 + 24) = 3;
    sub_100AC1C50(v7);
    uint64_t v13 = *(void *)(v8 + 32);
    *(void *)(v8 + 32) = 3;
LABEL_10:
    sub_100AC2144(v13);
    goto LABEL_11;
  }
  *(void *)(v5 + 24) = 1;
  sub_100AC1C50(v7);
  id result = [v2 defaultStore];
  if (!result)
  {
LABEL_29:
    __break(1u);
    return result;
  }
  int v9 = result;
  id v10 = [result aa_primaryAppleAccount];

  if (!v10)
  {
LABEL_9:
    uint64_t v14 = *(void *)(v0 + 16);
    uint64_t v13 = *(void *)(v14 + 32);
    *(void *)(v14 + 32) = 3;
    goto LABEL_10;
  }
  if (([v10 isEnabledForDataclass:ACAccountDataclassFreeform] & 1) == 0)
  {

    goto LABEL_9;
  }
  uint64_t v11 = *(void *)(v0 + 16);
  uint64_t v12 = *(void *)(v11 + 32);
  *(void *)(v11 + 32) = 1;
  sub_100AC2144(v12);

LABEL_11:
  uint64_t v15 = *(void *)(v0 + 16);
  uint64_t v16 = *(void *)(v15 + 32);
  if (v16 != 1)
  {
    uint64_t v17 = *(void *)(v15 + 24);
    if (v17 == 1) {
      char v18 = 2;
    }
    else {
      char v18 = 3;
    }
    if (v17 == 4) {
      char v18 = 0;
    }
    if (v16 == 4) {
      char v18 = 0;
    }
    if (v17) {
      char v19 = v18;
    }
    else {
      char v19 = 0;
    }
    if (v16) {
      LOBYTE(v16) = v19;
    }
    else {
      LOBYTE(v16) = 0;
    }
  }
  *(unsigned char *)(v0 + 24) = v16;
  swift_retain();
  CurrentValueSubject.send(_:)();
  swift_release();
  *(unsigned char *)(v1 + 64) = 0;
  uint64_t v20 = *(uint64_t (**)(void))(v0 + 8);
  return (id)v20();
}

uint64_t sub_100AC37D8(void *a1, void *a2, void (*a3)(id, uint64_t), uint64_t a4, uint64_t a5)
{
  uint64_t v10 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10, v12);
  uint64_t v14 = (char *)&v47 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for DispatchQoS();
  __chkstk_darwin(v15, v16);
  uint64_t v20 = (char *)&v47 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    uint64_t v49 = v17;
    uint64_t v48 = v18;
    sub_10050BF48(0, (unint64_t *)&qword_1016725C0);
    id v21 = a1;
    uint64_t v22 = (void *)static OS_dispatch_queue.main.getter();
    uint64_t v23 = (void *)swift_allocObject();
    v23[2] = a5;
    v23[3] = v21;
    v23[4] = a3;
    v23[5] = a4;
    aBlock[4] = sub_100AC5B74;
    aBlock[5] = v23;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = *(void *)"";
    void aBlock[2] = sub_100679958;
    void aBlock[3] = &unk_101521D98;
    char v24 = _Block_copy(aBlock);
    id v25 = v21;
    swift_retain();
    swift_retain();
    swift_release();
    static DispatchQoS.unspecified.getter();
    aBlock[0] = _swiftEmptyArrayStorage;
    sub_100522CDC();
    sub_1005057FC((uint64_t *)&unk_1016725D0);
    sub_10056B494();
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v24);

    (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
    return (*(uint64_t (**)(char *, uint64_t))(v48 + 8))(v20, v49);
  }
  if (qword_10166F9C8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  float v27 = (void *)static OS_os_log.crlDefault;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117D8C0;
  if (a2)
  {
    swift_getErrorValue();
    uint64_t v29 = aBlock[7];
    uint64_t v30 = aBlock[8];
    id v31 = v27;
    uint64_t v32 = Error.publicDescription.getter(v29, v30);
    unint64_t v34 = v33;
  }
  else
  {
    id v35 = v27;
    uint64_t v32 = 0;
    unint64_t v34 = 0;
  }
  *(void *)(inited + 56) = &type metadata for String;
  unint64_t v36 = sub_100528BE4();
  unint64_t v37 = v36;
  *(void *)(inited + 64) = v36;
  if (v34) {
    uint64_t v38 = v32;
  }
  else {
    uint64_t v38 = 0;
  }
  unint64_t v39 = 0xE000000000000000;
  if (v34) {
    unint64_t v39 = v34;
  }
  *(void *)(inited + 32) = v38;
  *(void *)(inited + 40) = v39;
  if (!a2)
  {
    uint64_t v42 = (uint64_t *)(inited + 72);
    *(void *)(inited + 96) = &type metadata for String;
    *(void *)(inited + 104) = v36;
    goto LABEL_17;
  }
  swift_getErrorValue();
  uint64_t v40 = Error.fullDescription.getter(aBlock[11]);
  uint64_t v42 = (uint64_t *)(inited + 72);
  *(void *)(inited + 96) = &type metadata for String;
  *(void *)(inited + 104) = v37;
  if (!v41)
  {
LABEL_17:
    uint64_t *v42 = 0;
    unint64_t v41 = 0xE000000000000000;
    goto LABEL_18;
  }
  uint64_t *v42 = v40;
LABEL_18:
  *(void *)(inited + 80) = v41;
  uint64_t v43 = static os_log_type_t.error.getter();
  sub_100BAC898((uint64_t)v27, (uint64_t)&_mh_execute_header, v43, (uint64_t)"Error fetching user record ID: %{public}@ <%@>", 46, 2, inited);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  if (a2)
  {
    id v44 = a2;
  }
  else
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    id v45 = objc_allocWithZone((Class)NSError);
    NSString v46 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v44 = [v45 initWithDomain:v46 code:-1 userInfo:0];
  }
  swift_errorRetain();
  a3(v44, 1);
  return swift_errorRelease();
}

uint64_t sub_100AC3D08(uint64_t a1, void *a2, uint64_t (*a3)(void *, void))
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    id v6 = *(void **)(Strong + 40);
    *(void *)(Strong + 40) = a2;
    id v7 = a2;
    sub_100AC279C(v6);

    swift_release();
  }
  return a3(a2, 0);
}

void sub_100AC3DB0(uint64_t a1, void *a2, void *a3)
{
  uint64_t v5 = *(void (**)(void *, void *))(a1 + 32);
  swift_retain();
  id v7 = a2;
  id v6 = a3;
  v5(a2, a3);
  swift_release();
}

void sub_100AC3E3C(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6, v8);
  uint64_t v10 = (char *)&aBlock[-1] - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for DispatchQoS();
  uint64_t v12 = *(void *)(v11 - 8);
  *(void *)&double v14 = __chkstk_darwin(v11, v13).n128_u64[0];
  uint64_t v16 = (char *)&aBlock[-1] - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    id v17 = [a1 deviceToDeviceEncryptionAvailability:v14];
    sub_10050BF48(0, (unint64_t *)&qword_1016725C0);
    uint64_t v18 = (void *)static OS_dispatch_queue.main.getter();
    uint64_t v19 = swift_allocObject();
    *(void *)(v19 + 16) = a3;
    *(void *)(v19 + 24) = v17;
    aBlock[4] = sub_100AC5EC4;
    aBlock[5] = v19;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = *(void *)"";
    void aBlock[2] = sub_100679958;
    void aBlock[3] = &unk_101522158;
    uint64_t v20 = _Block_copy(aBlock);
    swift_retain();
    swift_release();
    static DispatchQoS.unspecified.getter();
    aBlock[0] = _swiftEmptyArrayStorage;
    sub_100522CDC();
    sub_1005057FC((uint64_t *)&unk_1016725D0);
    sub_10056B494();
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v20);

    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
    (*(void (**)(char *, uint64_t))(v12 + 8))(v16, v11);
    return;
  }
  sub_10050BF48(0, (unint64_t *)&qword_10167B170);
  id v21 = (void *)static OS_os_log.default.getter();
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117D8C0;
  if (a2)
  {
    swift_getErrorValue();
    uint64_t v23 = Error.publicDescription.getter(aBlock[7], aBlock[8]);
    unint64_t v25 = v24;
  }
  else
  {
    uint64_t v23 = 0;
    unint64_t v25 = 0;
  }
  *(void *)(inited + 56) = &type metadata for String;
  unint64_t v26 = sub_100528BE4();
  unint64_t v27 = v26;
  *(void *)(inited + 64) = v26;
  if (v25) {
    uint64_t v28 = v23;
  }
  else {
    uint64_t v28 = 0;
  }
  unint64_t v29 = 0xE000000000000000;
  if (v25) {
    unint64_t v29 = v25;
  }
  *(void *)(inited + 32) = v28;
  *(void *)(inited + 40) = v29;
  if (!a2)
  {
    uint64_t v32 = (uint64_t *)(inited + 72);
    *(void *)(inited + 96) = &type metadata for String;
    *(void *)(inited + 104) = v26;
    goto LABEL_15;
  }
  swift_getErrorValue();
  uint64_t v30 = Error.fullDescription.getter(aBlock[11]);
  uint64_t v32 = (uint64_t *)(inited + 72);
  *(void *)(inited + 96) = &type metadata for String;
  *(void *)(inited + 104) = v27;
  if (!v31)
  {
LABEL_15:
    *uint64_t v32 = 0;
    unint64_t v31 = 0xE000000000000000;
    goto LABEL_16;
  }
  *uint64_t v32 = v30;
LABEL_16:
  *(void *)(inited + 80) = v31;
  uint64_t v33 = static os_log_type_t.error.getter();
  sub_100BAC898((uint64_t)v21, (uint64_t)&_mh_execute_header, v33, (uint64_t)"Error fetching device to device encryption availability: %{public}@ <%@>", 72, 2, inited);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();
}

uint64_t sub_100AC4264(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v4 = result;
    uint64_t v5 = *(void *)(result + 48);
    *(void *)(v4 + 48) = a2;
    sub_100AC2C18(v5);
    return swift_release();
  }
  return result;
}

uint64_t sub_100AC42C8()
{
  uint64_t v1 = v0;
  LOBYTE(aBlock) = 4;
  sub_1005057FC(&qword_10168F698);
  swift_allocObject();
  uint64_t v2 = CurrentValueSubject.init(_:)();
  *(void *)(v0 + 56) = _swiftEmptyArrayStorage;
  uint64_t v3 = (double **)(v0 + 56);
  *(void *)(v0 + 16) = v2;
  *(_OWORD *)(v0 + 24) = 0u;
  *(_OWORD *)(v0 + 40) = 0u;
  *(unsigned char *)(v0 + 64) = 0;
  if (qword_10166EE68 != -1) {
    swift_once();
  }
  uint64_t v4 = (void *)qword_10171A488;
  *(void *)(v0 + 72) = qword_10171A488;
  id v5 = v4;
  sub_100AC337C();
  id v6 = [self defaultContainer];
  uint64_t v7 = swift_allocObject();
  swift_weakInit();
  unint64_t v34 = sub_100AC5E14;
  uint64_t v35 = v7;
  *(void *)&long long aBlock = _NSConcreteStackBlock;
  *((void *)&aBlock + 1) = *(void *)"";
  uint64_t v32 = (uint64_t (*)(uint64_t))sub_100AC1C00;
  uint64_t ObjectType = &unk_101522068;
  uint64_t v8 = _Block_copy(&aBlock);
  swift_release();
  [v6 accountInfoWithCompletionHandler:v8];
  _Block_release(v8);

  uint64_t v9 = self;
  id v10 = [v9 defaultCenter];
  uint64_t v11 = self;
  id v12 = [v11 mainQueue];
  uint64_t v13 = swift_allocObject();
  swift_weakInit();
  unint64_t v34 = sub_100AC5E1C;
  uint64_t v35 = v13;
  *(void *)&long long aBlock = _NSConcreteStackBlock;
  *((void *)&aBlock + 1) = *(void *)"";
  uint64_t v32 = sub_1005E5680;
  uint64_t ObjectType = &unk_101522090;
  double v14 = _Block_copy(&aBlock);
  swift_release();
  id v15 = [v10 addObserverForName:CKAccountChangedNotification object:0 queue:v12 usingBlock:v14];
  _Block_release(v14);

  uint64_t ObjectType = (void *)swift_getObjectType();
  *(void *)&long long aBlock = v15;
  swift_beginAccess();
  uint64_t v16 = *(double **)(v1 + 56);
  swift_unknownObjectRetain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)(v1 + 56) = v16;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    uint64_t v16 = sub_100F63E88(0, *((void *)v16 + 2) + 1, 1, v16);
    *uint64_t v3 = v16;
  }
  unint64_t v19 = *((void *)v16 + 2);
  unint64_t v18 = *((void *)v16 + 3);
  if (v19 >= v18 >> 1)
  {
    uint64_t v16 = sub_100F63E88((double *)(v18 > 1), v19 + 1, 1, v16);
    *uint64_t v3 = v16;
  }
  *((void *)v16 + 2) = v19 + 1;
  sub_100575CE8(&aBlock, &v16[4 * v19 + 4]);
  swift_endAccess();
  id v20 = [v9 defaultCenter];
  uint64_t v21 = ACDAccountStoreDidChangeNotification;
  id v22 = [v11 mainQueue];
  uint64_t v23 = swift_allocObject();
  swift_weakInit();
  unint64_t v34 = sub_100AC5E54;
  uint64_t v35 = v23;
  *(void *)&long long aBlock = _NSConcreteStackBlock;
  *((void *)&aBlock + 1) = *(void *)"";
  uint64_t v32 = sub_1005E5680;
  uint64_t ObjectType = &unk_1015220B8;
  unint64_t v24 = _Block_copy(&aBlock);
  swift_release();
  id v25 = [v20 addObserverForName:v21 object:0 queue:v22 usingBlock:v24];
  _Block_release(v24);

  uint64_t ObjectType = (void *)swift_getObjectType();
  *(void *)&long long aBlock = v25;
  swift_beginAccess();
  unint64_t v26 = *(double **)(v1 + 56);
  swift_unknownObjectRetain();
  char v27 = swift_isUniquelyReferenced_nonNull_native();
  *(void *)(v1 + 56) = v26;
  if ((v27 & 1) == 0)
  {
    unint64_t v26 = sub_100F63E88(0, *((void *)v26 + 2) + 1, 1, v26);
    *uint64_t v3 = v26;
  }
  unint64_t v29 = *((void *)v26 + 2);
  unint64_t v28 = *((void *)v26 + 3);
  if (v29 >= v28 >> 1)
  {
    unint64_t v26 = sub_100F63E88((double *)(v28 > 1), v29 + 1, 1, v26);
    *uint64_t v3 = v26;
  }
  *((void *)v26 + 2) = v29 + 1;
  sub_100575CE8(&aBlock, &v26[4 * v29 + 4]);
  swift_endAccess();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return v1;
}

void sub_100AC4818(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    sub_100AC337C();
    swift_release();
  }
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    id v6 = [self defaultContainer];
    uint64_t v7 = swift_allocObject();
    swift_weakInit();
    _OWORD v9[4] = a3;
    v9[5] = v7;
    v9[0] = _NSConcreteStackBlock;
    v9[1] = *(void *)"";
    _OWORD v9[2] = sub_100AC1C00;
    v9[3] = a4;
    uint64_t v8 = _Block_copy(v9);
    swift_release();
    [v6 accountInfoWithCompletionHandler:v8];
    _Block_release(v8);
    swift_release();
  }
}

uint64_t sub_100AC4970()
{
  swift_beginAccess();
  uint64_t v1 = *(void *)(v0 + 56);
  uint64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    uint64_t v3 = self;
    uint64_t v4 = v1 + 32;
    swift_bridgeObjectRetain();
    do
    {
      sub_100522D7C(v4, (uint64_t)v7);
      id v5 = [v3 defaultCenter];
      sub_10050F848(v7, v7[3]);
      [v5 removeObserver:_bridgeAnythingToObjectiveC<A>(_:)()];

      swift_unknownObjectRelease();
      _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v7);
      v4 += 32;
      --v2;
    }
    while (v2);
    swift_bridgeObjectRelease();
  }
  swift_release();

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_100AC4A94()
{
  sub_100AC4970();

  return swift_deallocClassInstance();
}

NSString sub_100AC4B88()
{
  NSString result = String._bridgeToObjectiveC()();
  qword_10171B788 = (uint64_t)result;
  return result;
}

NSString sub_100AC4BC0()
{
  NSString result = String._bridgeToObjectiveC()();
  qword_10171B790 = (uint64_t)result;
  return result;
}

NSString sub_100AC4BF8()
{
  NSString result = String._bridgeToObjectiveC()();
  qword_10171B798 = (uint64_t)result;
  return result;
}

id sub_100AC4C30(uint64_t a1)
{
  return sub_100711538(a1, &qword_10166F870, (void **)&qword_10171B788, &qword_10171B7A0);
}

id sub_100AC4C80(uint64_t a1)
{
  return sub_100711538(a1, &qword_10166F878, (void **)&qword_10171B790, &qword_10171B7A8);
}

id sub_100AC4CD0(uint64_t a1)
{
  return sub_100711538(a1, &qword_10166F880, (void **)&qword_10171B798, &qword_10171B7B0);
}

void sub_100AC4D20()
{
  id v0 = [self standardUserDefaults];
  uint64_t v1 = sub_100077344();
  id v2 = String._bridgeToObjectiveC()();
  [v0 setInteger:v1 forKey:v2];
}

void sub_100AC4DC0()
{
  id v0 = self;
  id v1 = [v0 standardUserDefaults];
  NSString v2 = String._bridgeToObjectiveC()();
  unsigned __int8 v3 = [v1 BOOLForKey:v2];

  if (v3)
  {
    if (qword_10166F9C8 != -1) {
      swift_once();
    }
    swift_beginAccess();
    id v4 = (id)static OS_os_log.crlDefault;
    uint64_t v5 = static os_log_type_t.default.getter();
    sub_100BAC898((uint64_t)v4, (uint64_t)&_mh_execute_header, v5, (uint64_t)"Skipping iCloud dialog due to user default", 42, 2, (uint64_t)_swiftEmptyArrayStorage);
  }
  else
  {
    id v6 = [v0 standardUserDefaults];
    NSString v7 = String._bridgeToObjectiveC()();
    id v8 = [v6 integerForKey:v7];

    if (!v8 || (uint64_t)v8 < sub_100077344())
    {
      id v9 = [self sharedApplication];
      id v10 = [v9 delegate];

      if (v10)
      {
        type metadata accessor for CRLiOSAppDelegate();
        swift_dynamicCastClassUnconditional();
        swift_retain();
        swift_unknownObjectRelease();
        swift_release();
      }
      else
      {
        __break(1u);
      }
    }
  }
}

uint64_t sub_100AC5024()
{
  NSString v7 = &type metadata for CRLAppleAccountFeatureFlags;
  unint64_t v8 = sub_1007B9E4C();
  isFeatureEnabled(_:)();
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v6);
  id v0 = [self mainBundle];
  NSString v1 = String._bridgeToObjectiveC()();
  NSString v2 = String._bridgeToObjectiveC()();
  id v3 = [v0 localizedStringForKey:v1 value:v2 table:0];

  uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  return v4;
}

void sub_100AC5154(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = self;
  id v5 = [v4 mainBundle];
  NSString v6 = String._bridgeToObjectiveC()();
  NSString v7 = String._bridgeToObjectiveC()();
  id v8 = [v5 localizedStringForKey:v6 value:v7 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  id v9 = [v4 mainBundle];
  NSString v10 = String._bridgeToObjectiveC()();
  NSString v11 = String._bridgeToObjectiveC()();
  id v12 = [v9 localizedStringForKey:v10 value:v11 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  sub_100AC5024();
  NSString v13 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  NSString v14 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v43 = [self alertControllerWithTitle:v13 message:v14 preferredStyle:1];

  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = a2;
  *(void *)(v15 + 24) = a3;
  sub_1005173A0(a2);
  NSString v16 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  unint64_t v52 = sub_100AC5D8C;
  uint64_t v53 = v15;
  long long aBlock = _NSConcreteStackBlock;
  uint64_t v49 = *(void *)"";
  unint64_t v50 = sub_10051CE64;
  double v51 = &unk_101521FC8;
  id v17 = _Block_copy(&aBlock);
  swift_release();
  unint64_t v18 = self;
  id v19 = [v18 actionWithTitle:v16 style:0 handler:v17];
  _Block_release(v17);

  id v46 = v4;
  id v20 = [v4 mainBundle];
  NSString v21 = String._bridgeToObjectiveC()();
  NSString v22 = String._bridgeToObjectiveC()();
  id v23 = [v20 localizedStringForKey:v21 value:v22 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v24 = swift_allocObject();
  *(void *)(v24 + 16) = a2;
  *(void *)(v24 + 24) = a3;
  sub_1005173A0(a2);
  NSString v25 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  unint64_t v52 = sub_10073EED8;
  uint64_t v53 = v24;
  long long aBlock = _NSConcreteStackBlock;
  uint64_t v49 = *(void *)"";
  unint64_t v50 = sub_10051CE64;
  double v51 = &unk_101522018;
  unint64_t v26 = _Block_copy(&aBlock);
  swift_release();
  id v27 = [v18 actionWithTitle:v25 style:1 handler:v26];
  _Block_release(v26);

  id v45 = v19;
  [v43 addAction:v19];
  [v43 addAction:v27];
  if (qword_10166F9C8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  unint64_t v28 = (void *)static OS_os_log.crlDefault;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117D8C0;
  id v30 = v28;
  id v31 = [v46 mainBundle];
  NSString v32 = String._bridgeToObjectiveC()();
  NSString v33 = String._bridgeToObjectiveC()();
  id v34 = [v31 localizedStringForKey:v32 value:v33 table:0];

  uint64_t v35 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v37 = v36;

  *(void *)(inited + 56) = &type metadata for String;
  unint64_t v38 = sub_100528BE4();
  *(void *)(inited + 64) = v38;
  *(void *)(inited + 32) = v35;
  *(void *)(inited + 40) = v37;
  uint64_t v39 = sub_100AC5024();
  *(void *)(inited + 96) = &type metadata for String;
  *(void *)(inited + 104) = v38;
  *(void *)(inited + 72) = v39;
  *(void *)(inited + 80) = v40;
  uint64_t v41 = static os_log_type_t.error.getter();
  sub_100BAC898((uint64_t)v30, (uint64_t)&_mh_execute_header, v41, (uint64_t)"Presenting alert: %@ %@", 23, 2, inited);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  unint64_t v52 = sub_100AC4D20;
  uint64_t v53 = 0;
  long long aBlock = _NSConcreteStackBlock;
  uint64_t v49 = *(void *)"";
  unint64_t v50 = sub_100679958;
  double v51 = &unk_101522040;
  uint64_t v42 = _Block_copy(&aBlock);
  swift_release();
  [a1 presentViewController:v43 animated:1 completion:v42];
  _Block_release(v42);
}

unint64_t sub_100AC5838()
{
  unint64_t result = qword_10168F4B8;
  if (!qword_10168F4B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168F4B8);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for CRLiCloudConnectionStatus(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100AC5958);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLiCloudConnectionStatus()
{
  return &type metadata for CRLiCloudConnectionStatus;
}

uint64_t type metadata accessor for CRLiCloudStatusObserver()
{
  return self;
}

uint64_t sub_100AC59B4()
{
  uint64_t v1 = sub_1005057FC(&qword_10168F680);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_100AC5A48(void *a1, char a2)
{
  char v3 = a2 & 1;
  sub_1005057FC(&qword_10168F680);

  return sub_100AC330C(a1, v3);
}

uint64_t sub_100AC5ACC()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100AC5B08(void *a1, void *a2)
{
  return sub_100AC37D8(a1, a2, *(void (**)(id, uint64_t))(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32));
}

uint64_t sub_100AC5B14(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100AC5B24()
{
  return swift_release();
}

uint64_t sub_100AC5B2C()
{
  swift_release();

  swift_release();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_100AC5B74()
{
  return sub_100AC3D08(*(void *)(v0 + 16), *(void **)(v0 + 24), *(uint64_t (**)(void *, void))(v0 + 32));
}

uint64_t sub_100AC5B80()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

void sub_100AC5BC0()
{
  sub_100AC2AA4(*(void *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_100AC5BC8()
{
  swift_unknownObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_100AC5C08()
{
  uint64_t v2 = *(void *)(v0 + 32);
  char v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *char v3 = v1;
  v3[1] = sub_100528488;
  long long v3[2] = v2;
  return _swift_task_switch(sub_100AC35E0, 0, 0);
}

uint64_t sub_100AC5CB0()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100AC5CE8()
{
  swift_release();

  return _swift_deallocObject(v0, 25, 7);
}

void sub_100AC5D20()
{
  sub_100AC2638(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24));
}

uint64_t sub_100AC5D48()
{
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

id sub_100AC5D8C()
{
  uint64_t v1 = *(uint64_t (**)(id))(v0 + 16);
  id result = [self crl_openICloudPreferencePane];
  if (v1) {
    return (id)v1(result);
  }
  return result;
}

uint64_t sub_100AC5DD4()
{
  if (*(void *)(v0 + 16)) {
    swift_release();
  }

  return _swift_deallocObject(v0, 32, 7);
}

void sub_100AC5E14(void *a1, uint64_t a2)
{
  sub_100AC3E3C(a1, a2, v2);
}

void sub_100AC5E1C(uint64_t a1)
{
  sub_100AC4818(a1, v1, (uint64_t)sub_100AC5E14, (uint64_t)&unk_101522108);
}

void sub_100AC5E54(uint64_t a1)
{
  sub_100AC4818(a1, v1, (uint64_t)sub_100AC5E14, (uint64_t)&unk_1015220E0);
}

uint64_t sub_100AC5E8C()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100AC5EC4()
{
  return sub_100AC4264(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

void sub_100AC5ECC()
{
  sub_100AC2F9C(v0);
}

uint64_t sub_100AC5F60()
{
  swift_bridgeObjectRelease();
  sub_100AC6108(v0 + OBJC_IVAR____TtC8Freeform24CRLAssetSyncRemoteRecord_metadata);
  sub_1005CCBB8(v0 + OBJC_IVAR____TtC8Freeform24CRLAssetSyncRemoteRecord_downloadedFileURL);

  return swift_deallocClassInstance();
}

uint64_t sub_100AC5FDC()
{
  return type metadata accessor for CRLAssetSyncRemoteRecord();
}

uint64_t type metadata accessor for CRLAssetSyncRemoteRecord()
{
  uint64_t result = qword_10168F6C8;
  if (!qword_10168F6C8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_100AC6030()
{
  type metadata accessor for CRLAssetSyncMetadata();
  if (v0 <= 0x3F)
  {
    sub_100757DF8();
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

uint64_t sub_100AC6108(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for CRLAssetSyncMetadata();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100AC6164(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100AC6178);
}

uint64_t sub_100AC6178(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    id v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    int v11 = v10 - 1;
    if (v11 < 0) {
      int v11 = -1;
    }
    return (v11 + 1);
  }
}

uint64_t sub_100AC6248(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100AC625C);
}

uint64_t sub_100AC625C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for UUID();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = a2;
  }
  return result;
}

uint64_t type metadata accessor for CRLAssetSyncMetadata()
{
  uint64_t result = qword_10168F7B8;
  if (!qword_10168F7B8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100AC6368()
{
  uint64_t result = type metadata accessor for UUID();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_100AC63FC()
{
  if (*v0) {
    return 0x65747845656C6966;
  }
  else {
    return 0x4955557465737361;
  }
}

uint64_t sub_100AC6448@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100AC6D30(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_100AC6470(uint64_t a1)
{
  unint64_t v2 = sub_100AC69EC();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100AC64AC(uint64_t a1)
{
  unint64_t v2 = sub_100AC69EC();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100AC64E8(void *a1)
{
  uint64_t v3 = sub_1005057FC(&qword_10168F800);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3, v5);
  uint64_t v7 = &v9[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10050F848(a1, a1[3]);
  sub_100AC69EC();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  v9[15] = 0;
  type metadata accessor for UUID();
  sub_100A69E44(&qword_101671E70);
  KeyedEncodingContainer.encode<A>(_:forKey:)();
  if (!v1)
  {
    type metadata accessor for CRLAssetSyncMetadata();
    v9[14] = 1;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v7, v3);
}

uint64_t sub_100AC668C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v26 = a2;
  uint64_t v29 = type metadata accessor for UUID();
  uint64_t v27 = *(void *)(v29 - 8);
  __chkstk_darwin(v29, v4);
  uint64_t v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_1005057FC(&qword_10168F7F0);
  uint64_t v28 = *(void *)(v30 - 8);
  __chkstk_darwin(v30, v7);
  uint64_t v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for CRLAssetSyncMetadata();
  __chkstk_darwin(v10, v11);
  NSString v13 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10050F848(a1, a1[3]);
  sub_100AC69EC();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v2) {
    return _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)a1);
  }
  NSString v14 = v13;
  uint64_t v15 = v27;
  char v32 = 0;
  sub_100A69E44(&qword_101671E58);
  uint64_t v16 = v29;
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  id v17 = *(void (**)(char *, char *, uint64_t))(v15 + 32);
  uint64_t v25 = (uint64_t)v14;
  v17(v14, v6, v16);
  char v31 = 1;
  uint64_t v18 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  uint64_t v20 = v19;
  (*(void (**)(char *, uint64_t))(v28 + 8))(v9, v30);
  uint64_t v22 = v25;
  uint64_t v21 = v26;
  id v23 = (uint64_t *)(v25 + *(int *)(v10 + 20));
  uint64_t *v23 = v18;
  v23[1] = v20;
  sub_100AC6A40(v22, v21);
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)a1);
  return sub_100AC6108(v22);
}

uint64_t sub_100AC69B8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100AC668C(a1, a2);
}

uint64_t sub_100AC69D0(void *a1)
{
  return sub_100AC64E8(a1);
}

unint64_t sub_100AC69EC()
{
  unint64_t result = qword_10168F7F8;
  if (!qword_10168F7F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168F7F8);
  }
  return result;
}

uint64_t sub_100AC6A40(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CRLAssetSyncMetadata();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100AC6AA4(uint64_t a1, uint64_t a2)
{
  if (static UUID.== infix(_:_:)())
  {
    uint64_t v4 = *(int *)(type metadata accessor for CRLAssetSyncMetadata() + 20);
    uint64_t v5 = (void *)(a1 + v4);
    uint64_t v6 = *(void *)(a1 + v4 + 8);
    uint64_t v7 = (void *)(a2 + v4);
    uint64_t v8 = v7[1];
    if (v6)
    {
      if (v8)
      {
        BOOL v9 = *v5 == *v7 && v6 == v8;
        if (v9 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
          return 1;
        }
      }
    }
    else if (!v8)
    {
      return 1;
    }
  }
  return 0;
}

unsigned char *storeEnumTagSinglePayload for CRLAssetSyncMetadata.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100AC6BF0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLAssetSyncMetadata.CodingKeys()
{
  return &type metadata for CRLAssetSyncMetadata.CodingKeys;
}

unint64_t sub_100AC6C2C()
{
  unint64_t result = qword_10168F808;
  if (!qword_10168F808)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168F808);
  }
  return result;
}

unint64_t sub_100AC6C84()
{
  unint64_t result = qword_10168F810;
  if (!qword_10168F810)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168F810);
  }
  return result;
}

unint64_t sub_100AC6CDC()
{
  unint64_t result = qword_10168F818;
  if (!qword_10168F818)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168F818);
  }
  return result;
}

uint64_t sub_100AC6D30(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x4955557465737361 && a2 == 0xE900000000000044;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x65747845656C6966 && a2 == 0xED00006E6F69736ELL)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_100AC6E54(void *a1, unint64_t a2)
{
  uint64_t v4 = type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData(0);
  uint64_t result = __chkstk_darwin(v4 - 8, v5);
  float v56 = (char *)&v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = a2 >> 62;
  if (a2 >> 62) {
    goto LABEL_40;
  }
  for (i = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10); i; uint64_t result = swift_bridgeObjectRelease())
  {
    if ((a2 & 0xC000000000000001) != 0)
    {
      id v10 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else
    {
      if (!*(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        __break(1u);
LABEL_45:
        __break(1u);
LABEL_46:
        __break(1u);
LABEL_47:
        __break(1u);
LABEL_48:
        __break(1u);
        return result;
      }
      id v10 = *(id *)(a2 + 32);
    }
    uint64_t v11 = v10;
    uint64_t result = sub_100A9B204();
    if (i < 0) {
      goto LABEL_48;
    }
    id v12 = (id)result;
    if (v8)
    {
      swift_bridgeObjectRetain();
      uint64_t result = _CocoaArrayWrapper.endIndex.getter();
      if (result < 1) {
        goto LABEL_45;
      }
      swift_bridgeObjectRetain();
      uint64_t v13 = _CocoaArrayWrapper.endIndex.getter();
      uint64_t result = swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v13 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
      uint64_t result = swift_bridgeObjectRetain();
      if (!v13) {
        goto LABEL_45;
      }
    }
    if (v13 < i) {
      goto LABEL_46;
    }
    if ((a2 & 0xC000000000000001) != 0 && i != 1)
    {
      type metadata accessor for CRLShapeItem();
      Swift::Int v14 = 1;
      do
      {
        Swift::Int v15 = v14 + 1;
        _ArrayBuffer._typeCheckSlowPath(_:)(v14);
        Swift::Int v14 = v15;
      }
      while (i != v15);
    }
    id v45 = v11;
    id v46 = a1;
    if (v8)
    {
      swift_bridgeObjectRetain();
      uint64_t v44 = _CocoaArrayWrapper.subscript.getter();
      uint64_t v49 = v16;
      uint64_t v8 = v17;
      unint64_t v19 = v18;
      swift_bridgeObjectRelease_n();
      uint64_t i = v19 >> 1;
      if (v8 == v19 >> 1)
      {
LABEL_21:

        swift_unknownObjectRelease();
        uint64_t result = 0;
LABEL_38:
        a1 = v46;
        goto LABEL_42;
      }
    }
    else
    {
      uint64_t v44 = a2 & 0xFFFFFFFFFFFFFF8;
      uint64_t v49 = (a2 & 0xFFFFFFFFFFFFFF8) + 32;
      uint64_t v8 = 1;
      if (i == 1) {
        goto LABEL_21;
      }
    }
    uint64_t v47 = i;
    id v48 = v12;
    while (v8 < i)
    {
      uint64_t v62 = v8;
      uint64_t v20 = *(char **)(v49 + 8 * v8);
      uint64_t v21 = **(void **)&v20[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData];
      uint64_t result = swift_conformsToProtocol2();
      if (!result) {
        goto LABEL_47;
      }
      uint64_t v22 = result;
      id v23 = *(void (**)(uint64_t, uint64_t))(result + 16);
      float v63 = v20;
      swift_retain();
      uint64_t v24 = (uint64_t)v56;
      v23(v21, v22);
      swift_release();
      sub_1005057FC((uint64_t *)&unk_1016A8B50);
      CRRegister.wrappedValue.getter();
      uint64_t v25 = v64;
      uint64_t v60 = v65;
      a1 = v66;
      uint64_t v26 = v67;
      uint64_t v59 = v68;
      uint64_t v27 = v70;
      uint64_t v58 = v69;
      uint64_t v28 = v71;
      uint64_t v29 = v72;
      uint64_t v30 = v73;
      uint64_t v57 = v74;
      uint64_t v32 = v75;
      uint64_t v31 = v76;
      uint64_t v61 = v77;
      sub_100A59730(v24);
      if (v31)
      {
        uint64_t v55 = v25;
        sub_10050BF48(0, (unint64_t *)&qword_10168F9E0);
        int v78 = (int)a1;
        uint64_t v53 = a1;
        char v79 = BYTE4(a1) & 1;
        uint64_t v54 = v26;
        uint64_t v80 = v26;
        uint64_t v33 = v59;
        a1 = v58;
        uint64_t v81 = v59;
        unint64_t v82 = v58;
        uint64_t v83 = v27;
        uint64_t v84 = v28;
        uint64_t v51 = v28;
        uint64_t v50 = v29;
        uint64_t v85 = v29;
        uint64_t v86 = v30;
        uint64_t v34 = v57;
        uint64_t v87 = v57;
        uint64_t v88 = v32;
        uint64_t v89 = v31;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v52 = v27;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v35 = sub_1007B0B84((uint64_t)&v78);
        uint64_t v36 = v63;
        uint64_t v37 = v60;
        uint64_t v38 = v34;
        if (v60)
        {
          if (qword_10166FB80 != -1) {
            swift_once();
          }
          swift_beginAccess();
          id v39 = (id)static OS_os_log.persistence;
          uint64_t v40 = static os_log_type_t.info.getter();
          sub_100BAC898((uint64_t)v39, (uint64_t)&_mh_execute_header, v40, (uint64_t)"Tried to decode unknown fill value. Falling back to unarchiving color fill.", 75, 2, (uint64_t)_swiftEmptyArrayStorage);
        }
        id v41 = [objc_allocWithZone((Class)CRLColorFill) initWithColor:v35];

        sub_10051ABBC(v55, v37, (uint64_t)v53, v54, v33, (uint64_t)a1, v52, v51, v50, v30, v38, v32, v31);
        id v12 = v48;
        if (!v48)
        {

          swift_unknownObjectRelease();
          goto LABEL_37;
        }
        sub_10050BF48(0, (unint64_t *)&qword_101687660);
        a2 = (unint64_t)v12;
        char v42 = static NSObject.== infix(_:_:)();

        if ((v42 & 1) == 0)
        {

          swift_unknownObjectRelease();
LABEL_37:
          uint64_t result = 1;
          goto LABEL_38;
        }
      }
      else
      {
        id v12 = v48;
        a2 = (unint64_t)v48;

        if (v12)
        {

          swift_unknownObjectRelease();
          goto LABEL_37;
        }
      }
      uint64_t v8 = v62 + 1;
      uint64_t i = v47;
      if (v47 == v62 + 1) {
        goto LABEL_21;
      }
    }
    __break(1u);
LABEL_40:
    swift_bridgeObjectRetain();
    uint64_t i = _CocoaArrayWrapper.endIndex.getter();
  }
  id v12 = 0;
  uint64_t result = 0;
LABEL_42:
  *a1 = v12;
  return result;
}

uint64_t sub_100AC7504(uint64_t a1, unint64_t a2, uint64_t a3)
{
  return sub_100AC789C(a1, a2, a3, (SEL *)&selRef_color, (unint64_t *)&qword_10168F9E0);
}

uint64_t sub_100AC7520(uint64_t result, unint64_t a2)
{
  unint64_t v2 = a2;
  int v3 = (void *)result;
  uint64_t v4 = (uint64_t (*)(void))(a2 >> 62);
  if (a2 >> 62) {
    goto LABEL_34;
  }
  uint64_t v5 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v5)
  {
LABEL_35:
    uint64_t v8 = 0;
    uint64_t result = 0;
LABEL_36:
    *int v3 = v8;
    return result;
  }
  while ((v2 & 0xC000000000000001) != 0)
  {
    char v6 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_6:
    uint64_t v7 = v6;
    uint64_t result = (*(uint64_t (**)(void))((swift_isaMask & *v6) + 0x420))();
    if (v5 < 0) {
      goto LABEL_41;
    }
    uint64_t v8 = (void *)result;
    if (v4)
    {
      swift_bridgeObjectRetain();
      uint64_t result = _CocoaArrayWrapper.endIndex.getter();
      if (result < 1) {
        goto LABEL_39;
      }
      swift_bridgeObjectRetain();
      uint64_t v9 = _CocoaArrayWrapper.endIndex.getter();
      uint64_t result = swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v9 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
      uint64_t result = swift_bridgeObjectRetain();
      if (!v9) {
        goto LABEL_39;
      }
    }
    if (v9 < v5) {
      goto LABEL_40;
    }
    if ((v2 & 0xC000000000000001) != 0 && v5 != 1)
    {
      type metadata accessor for CRLStyledItem();
      Swift::Int v10 = 1;
      do
      {
        Swift::Int v11 = v10 + 1;
        _ArrayBuffer._typeCheckSlowPath(_:)(v10);
        Swift::Int v10 = v11;
      }
      while (v5 != v11);
    }
    id v23 = v7;
    uint64_t v24 = v3;
    if (v4)
    {
      swift_bridgeObjectRetain();
      _CocoaArrayWrapper.subscript.getter();
      int v3 = v13;
      uint64_t v12 = v14;
      unint64_t v16 = v15;
      swift_bridgeObjectRelease_n();
      uint64_t v5 = v16 >> 1;
      if (v12 == v16 >> 1)
      {
LABEL_21:

        swift_unknownObjectRelease();
        uint64_t result = 0;
        int v3 = v24;
        goto LABEL_36;
      }
    }
    else
    {
      int v3 = (void *)((v2 & 0xFFFFFFFFFFFFFF8) + 32);
      uint64_t v12 = 1;
      if (v5 == 1) {
        goto LABEL_21;
      }
    }
    unint64_t v2 = (unint64_t)&qword_101686A50;
    while (v12 < v5)
    {
      unint64_t v18 = (void *)v3[v12];
      uint64_t v4 = *(uint64_t (**)(void))((swift_isaMask & *v18) + 0x420);
      unint64_t v19 = v18;
      uint64_t v20 = v4();
      if (v20)
      {
        uint64_t v21 = (void *)v20;
        if (!v8)
        {

          swift_unknownObjectRelease();
          goto LABEL_32;
        }
        sub_10050BF48(0, (unint64_t *)&qword_101686A50);
        uint64_t v4 = v8;
        char v22 = static NSObject.== infix(_:_:)();

        if ((v22 & 1) == 0)
        {

          swift_unknownObjectRelease();
LABEL_32:
          uint64_t result = 1;
          int v3 = v24;
          goto LABEL_36;
        }
      }
      else
      {
        id v17 = v8;

        if (v8)
        {

          swift_unknownObjectRelease();
          goto LABEL_32;
        }
      }
      if (v5 == ++v12) {
        goto LABEL_21;
      }
    }
    __break(1u);
LABEL_34:
    swift_bridgeObjectRetain();
    uint64_t v5 = _CocoaArrayWrapper.endIndex.getter();
    uint64_t result = swift_bridgeObjectRelease();
    if (!v5) {
      goto LABEL_35;
    }
  }
  if (*(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    char v6 = *(id *)(v2 + 32);
    goto LABEL_6;
  }
  __break(1u);
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_100AC7880(uint64_t a1, unint64_t a2, uint64_t a3)
{
  return sub_100AC789C(a1, a2, a3, (SEL *)&selRef_pattern, &qword_10167F138);
}

uint64_t sub_100AC789C(uint64_t result, unint64_t a2, uint64_t a3, SEL *a4, unint64_t *a5)
{
  unint64_t v6 = a2;
  uint64_t v7 = (void *)result;
  uint64_t v8 = a2 >> 62;
  if (a2 >> 62) {
    goto LABEL_38;
  }
  for (i = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10); i; uint64_t v7 = v36)
  {
    uint64_t v38 = v7;
    if ((v6 & 0xC000000000000001) != 0)
    {
      Swift::Int v10 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else
    {
      if (!*(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        __break(1u);
LABEL_43:
        __break(1u);
LABEL_44:
        __break(1u);
        return result;
      }
      Swift::Int v10 = *(id *)(v6 + 32);
    }
    Swift::Int v11 = &swift_isaMask;
    uint64_t v37 = v10;
    id v12 = v10;
    uint64_t v13 = (void *)(*(uint64_t (**)(void))((swift_isaMask & *v10) + 0x420))();
    if (v13)
    {
      uint64_t v14 = v13;
      id v15 = [v13 *a4];

      if (i < 0) {
        goto LABEL_33;
      }
    }
    else
    {
      id v15 = 0;
      if (i < 0)
      {
LABEL_33:
        __break(1u);
LABEL_34:

        swift_unknownObjectRelease();
LABEL_36:
        uint64_t result = 1;
        uint64_t v7 = v38;
        goto LABEL_40;
      }
    }
    if (v8)
    {
      swift_bridgeObjectRetain();
      uint64_t result = _CocoaArrayWrapper.endIndex.getter();
      if (result < 1) {
        goto LABEL_43;
      }
      swift_bridgeObjectRetain();
      uint64_t v16 = _CocoaArrayWrapper.endIndex.getter();
      uint64_t result = swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v16 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
      uint64_t result = swift_bridgeObjectRetain();
      if (!v16) {
        goto LABEL_43;
      }
    }
    if (v16 < i) {
      goto LABEL_44;
    }
    if ((v6 & 0xC000000000000001) != 0 && i != 1)
    {
      type metadata accessor for CRLStyledItem();
      Swift::Int v17 = 1;
      do
      {
        Swift::Int v18 = v17 + 1;
        _ArrayBuffer._typeCheckSlowPath(_:)(v17);
        Swift::Int v17 = v18;
      }
      while (i != v18);
    }
    if (v8)
    {
      swift_bridgeObjectRetain();
      _CocoaArrayWrapper.subscript.getter();
      uint64_t v19 = v20;
      uint64_t v8 = v21;
      unint64_t v23 = v22;
      swift_bridgeObjectRelease_n();
      uint64_t i = v23 >> 1;
      if (v8 == v23 >> 1)
      {
LABEL_22:

        swift_unknownObjectRelease();
        uint64_t result = 0;
        uint64_t v7 = v38;
        goto LABEL_40;
      }
    }
    else
    {
      uint64_t v19 = (v6 & 0xFFFFFFFFFFFFFF8) + 32;
      uint64_t v8 = 1;
      if (i == 1) {
        goto LABEL_22;
      }
    }
    id v39 = v15;
    while (v8 < i)
    {
      uint64_t v24 = *(void **)(v19 + 8 * v8);
      uint64_t v25 = *(uint64_t (**)(void))((*v11 & *v24) + 0x420);
      unint64_t v6 = v24;
      uint64_t v26 = (void *)v25();
      if (v26 && (uint64_t v27 = v26, v28 = [v26 *a4], v27, v28))
      {
        if (!v15)
        {

          swift_unknownObjectRelease();
          goto LABEL_36;
        }
        sub_10050BF48(0, a5);
        id v29 = v15;
        uint64_t v30 = v19;
        uint64_t v31 = a4;
        uint64_t v32 = v11;
        id v33 = v29;
        id v34 = v28;
        char v35 = static NSObject.== infix(_:_:)();

        Swift::Int v11 = v32;
        a4 = v31;
        uint64_t v19 = v30;
        id v15 = v39;
        if ((v35 & 1) == 0)
        {

          swift_unknownObjectRelease();
          goto LABEL_36;
        }
      }
      else
      {
        id v12 = v15;

        if (v15) {
          goto LABEL_34;
        }
      }
      if (i == ++v8) {
        goto LABEL_22;
      }
    }
    __break(1u);
LABEL_38:
    uint64_t v36 = v7;
    swift_bridgeObjectRetain();
    uint64_t i = _CocoaArrayWrapper.endIndex.getter();
    uint64_t result = swift_bridgeObjectRelease();
  }
  id v15 = 0;
  uint64_t result = 0;
LABEL_40:
  *uint64_t v7 = v15;
  return result;
}

Swift::Int sub_100AC7C5C(Swift::Int result, unint64_t a2)
{
  unint64_t v2 = a2;
  Swift::Int v3 = result;
  unint64_t v4 = a2 >> 62;
  if (a2 >> 62) {
    goto LABEL_34;
  }
  uint64_t v5 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v5)
  {
LABEL_35:
    uint64_t result = 0;
    *(void *)Swift::Int v3 = 0;
    char v21 = 1;
LABEL_36:
    *(unsigned char *)(v3 + 8) = v21;
    return result;
  }
  while ((v2 & 0xC000000000000001) != 0)
  {
    unint64_t v6 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_6:
    uint64_t v7 = v6;
    uint64_t v8 = (void *)(*(uint64_t (**)(void))((swift_isaMask & *(void *)v6) + 0x420))();
    uint64_t v9 = v8;
    BOOL v10 = v8 == 0;
    if (v8)
    {
      [v8 width];
      double v12 = v11;

      if (v5 < 0) {
        goto LABEL_32;
      }
    }
    else
    {
      double v12 = 0.0;
      if (v5 < 0)
      {
LABEL_32:
        __break(1u);
        goto LABEL_33;
      }
    }
    if (v4)
    {
      swift_bridgeObjectRetain();
      uint64_t result = _CocoaArrayWrapper.endIndex.getter();
      if (result < 1) {
        goto LABEL_39;
      }
      swift_bridgeObjectRetain();
      uint64_t v13 = _CocoaArrayWrapper.endIndex.getter();
      uint64_t result = swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v13 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
      uint64_t result = swift_bridgeObjectRetain();
      if (!v13) {
        goto LABEL_39;
      }
    }
    if (v13 < v5) {
      goto LABEL_40;
    }
    if ((v2 & 0xC000000000000001) != 0 && v5 != 1)
    {
      type metadata accessor for CRLStyledItem();
      uint64_t result = 1;
      do
      {
        Swift::Int v14 = result + 1;
        _ArrayBuffer._typeCheckSlowPath(_:)(result);
        uint64_t result = v14;
      }
      while (v5 != v14);
    }
    char v25 = v10;
    if (v4)
    {
      swift_bridgeObjectRetain();
      unint64_t v4 = _CocoaArrayWrapper.subscript.getter();
      uint64_t v15 = v17;
      uint64_t v16 = v18;
      unint64_t v20 = v19;
      uint64_t result = swift_bridgeObjectRelease_n();
      uint64_t v5 = v20 >> 1;
      if (v16 == v20 >> 1)
      {
LABEL_22:

        swift_unknownObjectRelease();
        uint64_t result = 0;
        *(double *)Swift::Int v3 = v12;
        char v21 = v25;
        goto LABEL_36;
      }
    }
    else
    {
      unint64_t v4 = v2 & 0xFFFFFFFFFFFFFF8;
      uint64_t v15 = (v2 & 0xFFFFFFFFFFFFFF8) + 32;
      uint64_t v16 = 1;
      if (v5 == 1) {
        goto LABEL_22;
      }
    }
    unint64_t v2 = (unint64_t)&selRef_viewController;
    while (v16 < v5)
    {
      uint64_t result = (*(uint64_t (**)(Swift::Int))((swift_isaMask & **(void **)(v15 + 8 * v16)) + 0x420))(result);
      if (result)
      {
        unint64_t v22 = (void *)result;
        [(id)result width];
        double v24 = v23;

        if (!v9 || v24 != v12)
        {
LABEL_30:

          swift_unknownObjectRelease();
          *(double *)Swift::Int v3 = v12;
          uint64_t result = 1;
          char v21 = v25;
          goto LABEL_36;
        }
      }
      else if (v9)
      {
        goto LABEL_30;
      }
      if (v5 == ++v16) {
        goto LABEL_22;
      }
    }
LABEL_33:
    __break(1u);
LABEL_34:
    swift_bridgeObjectRetain();
    uint64_t v5 = _CocoaArrayWrapper.endIndex.getter();
    uint64_t result = swift_bridgeObjectRelease();
    if (!v5) {
      goto LABEL_35;
    }
  }
  if (*(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    unint64_t v6 = (char *)*(id *)(v2 + 32);
    goto LABEL_6;
  }
  __break(1u);
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
  return result;
}

uint64_t sub_100AC7F6C(uint64_t a1, unint64_t a2, uint64_t a3)
{
  return sub_100AC7F84(a1, a2, a3, (SEL *)&selRef_rightLineEndForShape_);
}

uint64_t sub_100AC7F78(uint64_t a1, unint64_t a2, uint64_t a3)
{
  return sub_100AC7F84(a1, a2, a3, (SEL *)&selRef_leftLineEndForShape_);
}

uint64_t sub_100AC7F84(uint64_t result, unint64_t a2, uint64_t a3, SEL *a4)
{
  uint64_t v4 = a2;
  uint64_t v5 = (void *)result;
  id v6 = (id)(a2 >> 62);
  if (a2 >> 62) {
    goto LABEL_33;
  }
  uint64_t v7 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v7)
  {
LABEL_34:
    double v11 = 0;
    uint64_t result = 0;
LABEL_35:
    *uint64_t v5 = v11;
    return result;
  }
  while ((v4 & 0xC000000000000001) != 0)
  {
    id v8 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_6:
    id v9 = v8;
    BOOL v10 = self;
    uint64_t result = [v10 *a4 v9];
    if (v7 < 0) {
      goto LABEL_40;
    }
    double v11 = (void *)result;
    if (v6)
    {
      swift_bridgeObjectRetain();
      uint64_t result = _CocoaArrayWrapper.endIndex.getter();
      if (result < 1) {
        goto LABEL_38;
      }
      swift_bridgeObjectRetain();
      uint64_t v12 = _CocoaArrayWrapper.endIndex.getter();
      uint64_t result = swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v12 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
      uint64_t result = swift_bridgeObjectRetain();
      if (!v12) {
        goto LABEL_38;
      }
    }
    if (v12 < v7) {
      goto LABEL_39;
    }
    if ((v4 & 0xC000000000000001) != 0 && v7 != 1)
    {
      type metadata accessor for CRLShapeItem();
      Swift::Int v13 = 1;
      do
      {
        Swift::Int v14 = v13 + 1;
        _ArrayBuffer._typeCheckSlowPath(_:)(v13);
        Swift::Int v13 = v14;
      }
      while (v7 != v14);
    }
    char v25 = v9;
    uint64_t v26 = v5;
    if (!v6)
    {
      uint64_t v15 = (v4 & 0xFFFFFFFFFFFFFF8) + 32;
      uint64_t v16 = 1;
      if (v7 != 1) {
        goto LABEL_24;
      }
LABEL_21:

      swift_unknownObjectRelease();
      uint64_t result = 0;
      uint64_t v5 = v26;
      goto LABEL_35;
    }
    swift_bridgeObjectRetain();
    _CocoaArrayWrapper.subscript.getter();
    uint64_t v15 = v17;
    uint64_t v16 = v18;
    unint64_t v20 = v19;
    swift_bridgeObjectRelease_n();
    uint64_t v7 = v20 >> 1;
    if (v16 == v20 >> 1) {
      goto LABEL_21;
    }
LABEL_24:
    while (v16 < v7)
    {
      uint64_t v5 = *(id *)(v15 + 8 * v16);
      id v21 = [v10 *a4:v5];
      if (v21)
      {
        unint64_t v22 = v21;
        if (!v11)
        {

          swift_unknownObjectRelease();
          goto LABEL_31;
        }
        uint64_t v23 = sub_10050BF48(0, (unint64_t *)&qword_101672AC0);
        id v24 = v11;
        id v6 = v22;
        uint64_t v4 = v23;
        LOBYTE(v23) = static NSObject.== infix(_:_:)();

        if ((v23 & 1) == 0)
        {

          swift_unknownObjectRelease();
LABEL_31:
          uint64_t result = 1;
          uint64_t v5 = v26;
          goto LABEL_35;
        }
      }
      else
      {
        uint64_t v4 = v11;

        if (v11)
        {

          swift_unknownObjectRelease();
          goto LABEL_31;
        }
      }
      if (v7 == ++v16) {
        goto LABEL_21;
      }
    }
    __break(1u);
LABEL_33:
    swift_bridgeObjectRetain();
    uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
    uint64_t result = swift_bridgeObjectRelease();
    if (!v7) {
      goto LABEL_34;
    }
  }
  if (*(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v8 = *(id *)(v4 + 32);
    goto LABEL_6;
  }
  __break(1u);
LABEL_38:
  __break(1u);
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
  return result;
}

uint64_t sub_100AC82AC(uint64_t result, unint64_t a2)
{
  unint64_t v2 = a2;
  Swift::Int v3 = (unsigned char *)result;
  uint64_t v4 = a2 >> 62;
  if (a2 >> 62) {
    goto LABEL_30;
  }
  uint64_t v5 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v5)
  {
    while (1)
    {
      if ((v2 & 0xC000000000000001) != 0)
      {
        id v6 = (unsigned char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        if (!*(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
LABEL_35:
          __break(1u);
LABEL_36:
          __break(1u);
LABEL_37:
          __break(1u);
          return result;
        }
        id v6 = *(id *)(v2 + 32);
      }
      uint64_t v7 = v6;
      uint64_t result = (uint64_t)[v6 connectionType];
      if (v5 < 0) {
        goto LABEL_37;
      }
      id v8 = (id)result;
      if (v4)
      {
        swift_bridgeObjectRetain();
        uint64_t result = _CocoaArrayWrapper.endIndex.getter();
        if (result < 1) {
          goto LABEL_35;
        }
        swift_bridgeObjectRetain();
        uint64_t v9 = _CocoaArrayWrapper.endIndex.getter();
        uint64_t result = swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v9 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
        uint64_t result = swift_bridgeObjectRetain();
        if (!v9) {
          goto LABEL_35;
        }
      }
      if (v9 < v5) {
        goto LABEL_36;
      }
      unint64_t v20 = v3;
      if ((v2 & 0xC000000000000001) != 0 && v5 != 1)
      {
        sub_10050BF48(0, (unint64_t *)&qword_101680130);
        Swift::Int v10 = 1;
        do
        {
          Swift::Int v11 = v10 + 1;
          _ArrayBuffer._typeCheckSlowPath(_:)(v10);
          Swift::Int v10 = v11;
        }
        while (v5 != v11);
      }
      Swift::Int v3 = v7;
      if (!v4) {
        break;
      }
      swift_bridgeObjectRetain();
      _CocoaArrayWrapper.subscript.getter();
      uint64_t v4 = v16;
      uint64_t v12 = v17;
      unint64_t v19 = v18;
      swift_bridgeObjectRelease_n();
      uint64_t v13 = v19 >> 1;
      if (v12 == v13) {
        goto LABEL_27;
      }
LABEL_19:
      while (v12 < v13)
      {
        id v14 = [*(id *)(v4 + 8 * v12) connectionType];
        unint64_t v2 = v14 != v8;
        if (v14 != v8 || v13 - 1 == v12++) {
          goto LABEL_28;
        }
      }
      __break(1u);
LABEL_30:
      swift_bridgeObjectRetain();
      uint64_t v5 = _CocoaArrayWrapper.endIndex.getter();
      uint64_t result = swift_bridgeObjectRelease();
      if (!v5) {
        goto LABEL_31;
      }
    }
    uint64_t v4 = (v2 & 0xFFFFFFFFFFFFFF8) + 32;
    uint64_t v12 = 1;
    uint64_t v13 = v5;
    if (v5 != 1) {
      goto LABEL_19;
    }
LABEL_27:
    unint64_t v2 = 0;
LABEL_28:

    swift_unknownObjectRelease();
    Swift::Int v3 = v20;
  }
  else
  {
LABEL_31:
    id v8 = 0;
    unint64_t v2 = 0;
  }
  *(void *)Swift::Int v3 = v8;
  v3[8] = v5 == 0;
  return v2;
}

id sub_100AC8538()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLMiniFormatterDataProvider();
  return [super dealloc];
}

uint64_t type metadata accessor for CRLMiniFormatterDataProvider()
{
  return self;
}

double *sub_100AC85A0(int64_t a1, int64_t a2, uint64_t a3, unint64_t a4, uint64_t a5)
{
  uint64_t v6 = v5;
  int64_t v9 = a1;
  int64_t v10 = 0;
  int64_t v11 = a1;
  while (1)
  {
    BOOL v12 = v11 <= a2;
    if (a3 > 0) {
      BOOL v12 = v11 >= a2;
    }
    if (v12) {
      break;
    }
    BOOL v13 = __OFADD__(v11, a3);
    v11 += a3;
    if (v13) {
      int64_t v11 = (v11 >> 63) ^ 0x8000000000000000;
    }
    BOOL v13 = __OFADD__(v10++, 1);
    if (v13)
    {
      __break(1u);
      break;
    }
  }
  uint64_t result = (double *)sub_1006BB664(0, v10, 0);
  if (v10)
  {
    while (1)
    {
      BOOL v15 = v9 <= a2;
      if (a3 > 0) {
        BOOL v15 = v9 >= a2;
      }
      if (v15) {
        break;
      }
      if (__OFADD__(v9, a3)) {
        int64_t v16 = ((v9 + a3) >> 63) ^ 0x8000000000000000;
      }
      else {
        int64_t v16 = v9 + a3;
      }
      uint64_t result = sub_100ACEB10(v9, a4, a5, v9 + a3);
      if (v6) {
        goto LABEL_37;
      }
      double v17 = *(double *)&result;
      uint64_t v6 = 0;
      double v19 = _swiftEmptyArrayStorage[2];
      double v18 = _swiftEmptyArrayStorage[3];
      if (*(void *)&v19 >= *(void *)&v18 >> 1) {
        uint64_t result = (double *)sub_1006BB664(*(void *)&v18 > 1uLL, *(void *)&v19 + 1, 1);
      }
      *(void *)&_swiftEmptyArrayStorage[2] = *(void *)&v19 + 1;
      _swiftEmptyArrayStorage[*(void *)&v19 + 4] = v17;
      int64_t v9 = v16;
      if (!--v10) {
        goto LABEL_23;
      }
    }
    __break(1u);
  }
  else
  {
    int64_t v16 = v9;
LABEL_23:
    BOOL v20 = v16 <= a2;
    if (a3 > 0) {
      BOOL v20 = v16 >= a2;
    }
    if (v20)
    {
LABEL_26:
      swift_bridgeObjectRelease();
    }
    else
    {
      while (1)
      {
        int64_t v21 = __OFADD__(v16, a3) ? ((v16 + a3) >> 63) ^ 0x8000000000000000 : v16 + a3;
        unint64_t v22 = sub_100ACEB10(v16, a4, a5, v16 + a3);
        if (v6) {
          break;
        }
        double v23 = *(double *)&v22;
        uint64_t v6 = 0;
        double v25 = _swiftEmptyArrayStorage[2];
        double v24 = _swiftEmptyArrayStorage[3];
        if (*(void *)&v25 >= *(void *)&v24 >> 1) {
          sub_1006BB664(*(void *)&v24 > 1uLL, *(void *)&v25 + 1, 1);
        }
        *(void *)&_swiftEmptyArrayStorage[2] = *(void *)&v25 + 1;
        _swiftEmptyArrayStorage[*(void *)&v25 + 4] = v23;
        BOOL v26 = v21 <= a2;
        if (a3 > 0) {
          BOOL v26 = v21 >= a2;
        }
        int64_t v16 = v21;
        if (v26) {
          goto LABEL_26;
        }
      }
LABEL_37:
      swift_bridgeObjectRelease();
      swift_release();
    }
    return _swiftEmptyArrayStorage;
  }
  return result;
}

double *sub_100AC87D4(uint64_t a1, void *a2, char a3, void *a4)
{
  uint64_t v6 = sub_100ACF30C(a1, a2, a3, a4);

  return v6;
}

uint64_t sub_100AC8830(uint64_t a1, unsigned char *a2, uint64_t a3)
{
  swift_getObjectType();
  uint64_t result = swift_conformsToProtocol2();
  if (result) {
    uint64_t v7 = result;
  }
  else {
    uint64_t v7 = 0;
  }
  if (result) {
    uint64_t v8 = a1;
  }
  else {
    uint64_t v8 = 0;
  }
  if (v8)
  {
    swift_beginAccess();
    *(void *)(a3 + 16) = v8;
    *(void *)(a3 + 24) = v7;
    swift_unknownObjectRetain();
    uint64_t result = swift_unknownObjectRelease();
    *a2 = 1;
  }
  return result;
}

UIImage *sub_100AC88D8(void *a1, char a2)
{
  id v4 = [self mainScreen];
  id v5 = [v4 traitCollection];

  unsigned __int8 v6 = [v5 crl_isUserInterfaceStyleDark];
  switch(a2)
  {
    case 1:
      sub_10050BF48(0, &qword_10168F9E8);
      id v14 = self;
      id v15 = a1;
      if (v6)
      {
        id v16 = [v14 blackColor];
        char v17 = static NSObject.== infix(_:_:)();

        if (v17)
        {
          uint64_t v18 = 0xD000000000000020;
          uint64_t v19 = 0x800000010126FD30;
          BOOL v20 = &selRef_blackColor;
LABEL_22:
          unint64_t v22 = sub_100ACF1DC(v18, v19, (SEL *)v20);
          goto LABEL_25;
        }
      }
      else
      {
        id v33 = [v14 whiteColor];
        char v34 = static NSObject.== infix(_:_:)();

        if (v34)
        {
          uint64_t v18 = 0xD00000000000001BLL;
          uint64_t v19 = 0x800000010126FD60;
          BOOL v20 = &selRef_whiteColor;
          goto LABEL_22;
        }
      }
      id v35 = [v15 color];
      id v36 = [v35 UIColor];

      NSString v37 = String._bridgeToObjectiveC()();
      id v38 = [self imageNamed:v37];

      if (!v38)
      {

        uint64_t v47 = a1;
        unsigned __int8 v48 = 1;
        goto LABEL_43;
      }
      unint64_t v22 = (UIImage *)[v38 imageWithTintColor:v36 renderingMode:1];

LABEL_25:
      sub_1007A0938(a1, 1u);
      return v22;
    case 2:
      if (a1)
      {
        int64_t v21 = (UIImage *)[a1 referenceColor];
        unint64_t v22 = v21;
        if (v21)
        {
          id v23 = [(UIImage *)v21 UIColor];

          if (!v23)
          {
            sub_1007A0938(a1, 2u);
            uint64_t v47 = a1;
            unsigned __int8 v48 = 2;
            goto LABEL_43;
          }
          unint64_t v22 = sub_100ACF0B8((uint64_t)v23);
        }
        sub_1007A0938(a1, 2u);
        sub_1007A0938(a1, 2u);
      }
      else
      {
        NSString v39 = String._bridgeToObjectiveC()();
        unint64_t v22 = (UIImage *)[self imageNamed:v39];
      }
      return v22;
    case 3:
      NSString v24 = String._bridgeToObjectiveC()();
      id v25 = [self systemImageNamed:v24];

      sub_1005057FC((uint64_t *)&unk_101676C10);
      uint64_t v26 = swift_allocObject();
      *(_OWORD *)(v26 + 16) = xmmword_10117DF50;
      uint64_t v27 = self;
      *(void *)(v26 + 32) = [v27 redColor];
      *(void *)(v26 + 40) = [v27 whiteColor];
      specialized Array._endMutation()();
      sub_10050BF48(0, (unint64_t *)&qword_101687FC0);
      Class isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      id v29 = [self configurationWithPaletteColors:isa];

      unint64_t v22 = (UIImage *)[v25 imageByApplyingSymbolConfiguration:v29];
      return v22;
    default:
      id v7 = a1;
      id v8 = [v7 referenceColor];
      int64_t v9 = self;
      if ((v6 & 1) == 0)
      {
        id v30 = [v9 whiteColor];
        int64_t v11 = v30;
        if (v8)
        {
          if (!v30) {
            goto LABEL_27;
          }
          sub_10050BF48(0, (unint64_t *)&qword_10168F9E0);
          id v31 = v8;
          char v32 = static NSObject.== infix(_:_:)();

          if ((v32 & 1) == 0) {
            goto LABEL_32;
          }
        }
        else if (v30)
        {
          goto LABEL_31;
        }
        uint64_t v40 = 0xD00000000000001BLL;
        uint64_t v41 = 0x800000010126FD60;
        char v42 = &selRef_whiteColor;
        goto LABEL_38;
      }
      id v10 = [v9 blackColor];
      int64_t v11 = v10;
      if (!v8)
      {
        if (!v10) {
          goto LABEL_29;
        }
LABEL_31:

        goto LABEL_32;
      }
      if (!v10)
      {
LABEL_27:
        int64_t v11 = v8;
        goto LABEL_31;
      }
      sub_10050BF48(0, (unint64_t *)&qword_10168F9E0);
      id v12 = v8;
      char v13 = static NSObject.== infix(_:_:)();

      if (v13)
      {
LABEL_29:
        uint64_t v40 = 0xD000000000000020;
        uint64_t v41 = 0x800000010126FD30;
        char v42 = &selRef_blackColor;
LABEL_38:
        unint64_t v22 = sub_100ACF1DC(v40, v41, (SEL *)v42);
        goto LABEL_39;
      }
LABEL_32:
      uint64_t v43 = (UIImage *)[v7 referenceColor];
      unint64_t v22 = v43;
      if (!v43)
      {
LABEL_39:
        sub_1007A0938(a1, 0);
        return v22;
      }
      id v44 = [(UIImage *)v43 UIColor];

      if (v44)
      {
        NSString v45 = String._bridgeToObjectiveC()();
        id v46 = [self imageNamed:v45];

        if (v46)
        {
          unint64_t v22 = (UIImage *)[v46 imageWithTintColor:v44 renderingMode:1];

          goto LABEL_39;
        }
      }
      uint64_t v47 = a1;
      unsigned __int8 v48 = 0;
LABEL_43:
      sub_1007A0938(v47, v48);
      return 0;
  }
}

UIImage *sub_100AC8FFC(void *a1, char a2)
{
  id v4 = [self mainScreen];
  id v5 = [v4 traitCollection];

  unsigned __int8 v6 = [v5 crl_isUserInterfaceStyleDark];
  if (!a2)
  {
    id v14 = a1;
    id v15 = [v14 referenceColor];
    if (!v15) {
      goto LABEL_32;
    }
    id v16 = v15;
    id v17 = [v15 UIColor];

    if (!v17) {
      goto LABEL_32;
    }
    id v18 = [v14 referenceColor];
    uint64_t v19 = self;
    if (v6)
    {
      id v20 = [v19 blackColor];
      int64_t v21 = v20;
      if (!v18)
      {
        if (!v20)
        {
LABEL_26:
          uint64_t v36 = 0xD000000000000023;
          uint64_t v37 = 0x800000010126FDF0;
          id v38 = &selRef_blackColor;
LABEL_37:
          uint64_t v26 = sub_100ACF1DC(v36, v37, (SEL *)v38);

          goto LABEL_38;
        }
        goto LABEL_28;
      }
      if (v20)
      {
        sub_10050BF48(0, (unint64_t *)&qword_10168F9E0);
        id v22 = v18;
        char v23 = static NSObject.== infix(_:_:)();

        if ((v23 & 1) == 0) {
          goto LABEL_29;
        }
        goto LABEL_26;
      }
      goto LABEL_24;
    }
    id v31 = [v19 whiteColor];
    int64_t v21 = v31;
    if (v18)
    {
      if (!v31)
      {
LABEL_24:
        int64_t v21 = v18;
LABEL_28:

        goto LABEL_29;
      }
      sub_10050BF48(0, (unint64_t *)&qword_10168F9E0);
      id v32 = v18;
      char v33 = static NSObject.== infix(_:_:)();

      if ((v33 & 1) == 0)
      {
LABEL_29:
        NSString v39 = String._bridgeToObjectiveC()();
        id v40 = [self imageNamed:v39];

        if (v40)
        {
          uint64_t v26 = (UIImage *)[v40 imageWithTintColor:v17 renderingMode:1];

LABEL_38:
          sub_1007A0938(a1, 0);
          return v26;
        }

LABEL_32:
        char v34 = a1;
        unsigned __int8 v35 = 0;
LABEL_33:
        sub_1007A0938(v34, v35);
        return 0;
      }
    }
    else if (v31)
    {
      goto LABEL_28;
    }
    uint64_t v36 = 0xD00000000000001ELL;
    uint64_t v37 = 0x800000010126FE20;
    id v38 = &selRef_whiteColor;
    goto LABEL_37;
  }
  if (a2 != 1) {
    return 0;
  }
  sub_10050BF48(0, &qword_10168F9E8);
  id v7 = self;
  id v8 = a1;
  if ((v6 & 1) == 0)
  {
    id v24 = [v7 whiteColor];
    char v25 = static NSObject.== infix(_:_:)();

    if (v25)
    {
      uint64_t v11 = 0xD00000000000001ELL;
      uint64_t v12 = 0x800000010126FE20;
      char v13 = &selRef_whiteColor;
      goto LABEL_15;
    }
    goto LABEL_16;
  }
  id v9 = [v7 blackColor];
  char v10 = static NSObject.== infix(_:_:)();

  if ((v10 & 1) == 0)
  {
LABEL_16:
    id v27 = [v8 color];
    id v28 = [v27 UIColor];

    NSString v29 = String._bridgeToObjectiveC()();
    id v30 = [self imageNamed:v29];

    if (v30)
    {
      uint64_t v26 = (UIImage *)[v30 imageWithTintColor:v28 renderingMode:1];

      goto LABEL_18;
    }

    char v34 = a1;
    unsigned __int8 v35 = 1;
    goto LABEL_33;
  }
  uint64_t v11 = 0xD000000000000023;
  uint64_t v12 = 0x800000010126FDF0;
  char v13 = &selRef_blackColor;
LABEL_15:
  uint64_t v26 = sub_100ACF1DC(v11, v12, (SEL *)v13);
LABEL_18:
  sub_1007A0938(a1, 1u);
  return v26;
}

id sub_100AC94B4()
{
  sub_1005057FC((uint64_t *)&unk_10168F9F0);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1011A4DB0;
  if (qword_10166F138 != -1) {
    swift_once();
  }
  uint64_t v1 = (void *)qword_10171A948;
  *(void *)(v0 + 32) = qword_10171A948;
  *(unsigned char *)(v0 + 40) = 1;
  uint64_t v2 = qword_10166F140;
  id v3 = v1;
  if (v2 != -1) {
    swift_once();
  }
  id v4 = (void *)qword_10171A950;
  *(void *)(v0 + 48) = qword_10171A950;
  *(unsigned char *)(v0 + 56) = 1;
  uint64_t v5 = qword_10166F148;
  id v6 = v4;
  if (v5 != -1) {
    swift_once();
  }
  id v7 = (void *)qword_10171A958;
  *(void *)(v0 + 64) = qword_10171A958;
  *(unsigned char *)(v0 + 72) = 1;
  uint64_t v8 = qword_10166F150;
  id v9 = v7;
  if (v8 != -1) {
    swift_once();
  }
  char v10 = (void *)qword_10171A960;
  *(void *)(v0 + 80) = qword_10171A960;
  *(unsigned char *)(v0 + 88) = 1;
  uint64_t v11 = qword_10166F158;
  id v12 = v10;
  if (v11 != -1) {
    swift_once();
  }
  char v13 = (void *)qword_10171A968;
  *(void *)(v0 + 96) = qword_10171A968;
  *(unsigned char *)(v0 + 104) = 1;
  uint64_t v14 = qword_10166F160;
  id v15 = v13;
  if (v14 != -1) {
    swift_once();
  }
  id v16 = (void *)qword_10171A970;
  *(void *)(v0 + 112) = qword_10171A970;
  *(unsigned char *)(v0 + 120) = 1;
  uint64_t v17 = qword_10166F168;
  id v18 = v16;
  if (v17 != -1) {
    swift_once();
  }
  uint64_t v19 = (void *)qword_10171A978;
  *(void *)(v0 + 128) = qword_10171A978;
  *(unsigned char *)(v0 + 136) = 1;
  uint64_t v20 = qword_10166F170;
  id v21 = v19;
  if (v20 != -1) {
    swift_once();
  }
  id v22 = (void *)qword_10171A980;
  *(void *)(v0 + 144) = qword_10171A980;
  *(unsigned char *)(v0 + 152) = 1;
  uint64_t v23 = qword_10166F178;
  id v24 = v22;
  if (v23 != -1) {
    swift_once();
  }
  char v25 = (void *)qword_10171A988;
  *(void *)(v0 + 160) = qword_10171A988;
  *(unsigned char *)(v0 + 168) = 1;
  uint64_t v26 = qword_10166F180;
  id v27 = v25;
  if (v26 != -1) {
    swift_once();
  }
  id v28 = (void *)qword_10171A990;
  *(void *)(v0 + 176) = qword_10171A990;
  *(unsigned char *)(v0 + 184) = 1;
  uint64_t v29 = qword_10166F188;
  id v30 = v28;
  if (v29 != -1) {
    swift_once();
  }
  id v31 = (void *)qword_10171A998;
  *(void *)(v0 + 192) = qword_10171A998;
  *(unsigned char *)(v0 + 200) = 1;
  uint64_t v32 = qword_10166F190;
  id v33 = v31;
  if (v32 != -1) {
    swift_once();
  }
  char v34 = (void *)qword_10171A9A0;
  *(void *)(v0 + 208) = qword_10171A9A0;
  *(unsigned char *)(v0 + 216) = 1;
  xmmword_10171B7D0 = xmmword_1011A4DC0;
  qword_10171B7E0 = v0;

  return v34;
}

id sub_100AC986C()
{
  sub_1005057FC((uint64_t *)&unk_10168F9F0);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1011807B0;
  if (qword_10166F198 != -1) {
    swift_once();
  }
  uint64_t v1 = (void *)qword_10171A9A8;
  *(void *)(v0 + 32) = qword_10171A9A8;
  *(unsigned char *)(v0 + 40) = 0;
  uint64_t v2 = qword_10166F1A0;
  id v3 = v1;
  if (v2 != -1) {
    swift_once();
  }
  id v4 = (void *)qword_10171A9B0;
  *(void *)(v0 + 48) = qword_10171A9B0;
  *(unsigned char *)(v0 + 56) = 0;
  uint64_t v5 = qword_10166F1A8;
  id v6 = v4;
  if (v5 != -1) {
    swift_once();
  }
  id v7 = (void *)qword_10171A9B8;
  *(void *)(v0 + 64) = qword_10171A9B8;
  *(unsigned char *)(v0 + 72) = 0;
  uint64_t v8 = qword_10166F1B0;
  id v9 = v7;
  if (v8 != -1) {
    swift_once();
  }
  char v10 = (void *)qword_10171A9C0;
  *(void *)(v0 + 80) = qword_10171A9C0;
  *(unsigned char *)(v0 + 88) = 0;
  uint64_t v11 = qword_10166F1B8;
  id v12 = v10;
  if (v11 != -1) {
    swift_once();
  }
  char v13 = (void *)qword_10171A9C8;
  *(void *)(v0 + 96) = qword_10171A9C8;
  *(unsigned char *)(v0 + 104) = 0;
  uint64_t v14 = qword_10166F1C0;
  id v15 = v13;
  if (v14 != -1) {
    swift_once();
  }
  id v16 = (void *)qword_10171A9D0;
  *(void *)(v0 + 112) = qword_10171A9D0;
  *(unsigned char *)(v0 + 120) = 0;
  uint64_t v17 = qword_10166F1C8;
  id v18 = v16;
  if (v17 != -1) {
    swift_once();
  }
  uint64_t v19 = (void *)qword_10171A9D8;
  *(void *)(v0 + 128) = qword_10171A9D8;
  *(unsigned char *)(v0 + 136) = 0;
  xmmword_10171B7F0 = xmmword_1011A4DD0;
  qword_10171B800 = v0;

  return v19;
}

id sub_100AC9AB0()
{
  sub_1005057FC((uint64_t *)&unk_10168F9F0);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_101196C50;
  if (qword_10166F138 != -1) {
    swift_once();
  }
  uint64_t v1 = (void *)qword_10171A948;
  *(void *)(v0 + 32) = qword_10171A948;
  *(unsigned char *)(v0 + 40) = 1;
  uint64_t v2 = qword_10166F140;
  id v3 = v1;
  if (v2 != -1) {
    swift_once();
  }
  id v4 = (void *)qword_10171A950;
  *(void *)(v0 + 48) = qword_10171A950;
  *(unsigned char *)(v0 + 56) = 1;
  uint64_t v5 = qword_10166F148;
  id v6 = v4;
  if (v5 != -1) {
    swift_once();
  }
  id v7 = (void *)qword_10171A958;
  *(void *)(v0 + 64) = qword_10171A958;
  *(unsigned char *)(v0 + 72) = 1;
  uint64_t v8 = qword_10166F150;
  id v9 = v7;
  if (v8 != -1) {
    swift_once();
  }
  char v10 = (void *)qword_10171A960;
  *(void *)(v0 + 80) = qword_10171A960;
  *(unsigned char *)(v0 + 88) = 1;
  uint64_t v11 = qword_10166F158;
  id v12 = v10;
  if (v11 != -1) {
    swift_once();
  }
  char v13 = (void *)qword_10171A968;
  *(void *)(v0 + 96) = qword_10171A968;
  *(unsigned char *)(v0 + 104) = 1;
  uint64_t v14 = qword_10166F160;
  id v15 = v13;
  if (v14 != -1) {
    swift_once();
  }
  id v16 = (void *)qword_10171A970;
  *(void *)(v0 + 112) = qword_10171A970;
  *(unsigned char *)(v0 + 120) = 1;
  uint64_t v17 = qword_10166F168;
  id v18 = v16;
  if (v17 != -1) {
    swift_once();
  }
  uint64_t v19 = (void *)qword_10171A978;
  *(void *)(v0 + 128) = qword_10171A978;
  *(unsigned char *)(v0 + 136) = 1;
  uint64_t v20 = qword_10166F170;
  id v21 = v19;
  if (v20 != -1) {
    swift_once();
  }
  id v22 = (void *)qword_10171A980;
  *(void *)(v0 + 144) = qword_10171A980;
  *(unsigned char *)(v0 + 152) = 1;
  uint64_t v23 = qword_10166F178;
  id v24 = v22;
  if (v23 != -1) {
    swift_once();
  }
  char v25 = (void *)qword_10171A988;
  *(void *)(v0 + 160) = qword_10171A988;
  *(unsigned char *)(v0 + 168) = 1;
  uint64_t v26 = qword_10166F180;
  id v27 = v25;
  if (v26 != -1) {
    swift_once();
  }
  id v28 = (void *)qword_10171A990;
  *(void *)(v0 + 176) = qword_10171A990;
  *(unsigned char *)(v0 + 184) = 1;
  uint64_t v29 = qword_10166F188;
  id v30 = v28;
  if (v29 != -1) {
    swift_once();
  }
  id v31 = (void *)qword_10171A998;
  *(void *)(v0 + 192) = qword_10171A998;
  *(unsigned char *)(v0 + 200) = 1;
  uint64_t v32 = qword_10166F190;
  id v33 = v31;
  if (v32 != -1) {
    swift_once();
  }
  char v34 = (void *)qword_10171A9A0;
  *(void *)(v0 + 208) = qword_10171A9A0;
  *(unsigned char *)(v0 + 216) = 1;
  *(void *)(v0 + 224) = 0;
  *(unsigned char *)(v0 + 232) = 2;
  xmmword_10171B810 = xmmword_1011A4DE0;
  qword_10171B820 = v0;

  return v34;
}

void sub_100AC9E74()
{
  qword_10171B828 = 0x4041000000000000;
}

void *sub_100AC9E84()
{
  uint64_t v1 = v0;
  uint64_t v2 = self;
  id v3 = [v2 mainScreen];
  id v4 = [v3 traitCollection];

  [v4 crl_isUserInterfaceStyleDark];
  NSString v5 = String._bridgeToObjectiveC()();
  uint64_t v60 = (UIImage *)[self imageNamed:v5];

  id v6 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform26CRLiOSMiniFormatterBuilder_element);
  if (([v6 options] & 4) == 0
    && ([v6 options] & 0x1000) == 0
    && ([v6 options] & 0x80000) == 0)
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"makeBaseLayerButton()", 21, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Formatters/CRLiOSMiniFormatterColorPaletteBuilder.swift", 113, 2, 165, (uint64_t)"The Color Palette base layer button is only used for color palette and sticky notes elements", 92, 2u, (uint64_t)_swiftEmptyArrayStorage);
    LOBYTE(v56) = 2;
    uint64_t v52 = "The Color Palette base layer button is only used for color palette and sticky notes elements";
    uint64_t v54 = 92;
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"makeBaseLayerButton()", 21, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Formatters/CRLiOSMiniFormatterColorPaletteBuilder.swift", 113, 2, 165);
  }
  if ((objc_msgSend(v6, "options", v52, v54, v56) & 4) == 0
    && ([v6 options] & 0x1000) == 0
    && ([v6 options] & 0x80000) == 0
    || (id v7 = (void *)sub_100ACCC24(), v7 == (void *)1))
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"makeBaseLayerButton()", 21, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Formatters/CRLiOSMiniFormatterColorPaletteBuilder.swift", 113, 2, 187, (uint64_t)"Unable to retrieve shape fill information from the shapeFillDataProvider", 72, 2u, (uint64_t)_swiftEmptyArrayStorage);
    LOBYTE(v57) = 2;
    uint64_t v53 = "Unable to retrieve shape fill information from the shapeFillDataProvider";
    uint64_t v55 = 72;
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"makeBaseLayerButton()", 21, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Formatters/CRLiOSMiniFormatterColorPaletteBuilder.swift", 113, 2, 187);
    id v9 = v60;
    char v10 = v60;
    uint64_t v11 = 0;
    goto LABEL_24;
  }
  id v12 = v7;
  if (v8)
  {
    NSString v22 = String._bridgeToObjectiveC()();
    id v23 = [self imageNamed:v22];

    if (v23)
    {
      id v24 = [self labelColor];
      id v9 = (UIImage *)[v23 imageWithTintColor:v24];
    }
    else
    {
      id v9 = 0;
    }
    id v32 = [self mainBundle];
    NSString v33 = String._bridgeToObjectiveC()();
    NSString v34 = String._bridgeToObjectiveC()();
    id v35 = [v32 localizedStringForKey:v33 value:v34 table:0];

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v11 = v36;

    sub_100522AD8(v12);
LABEL_24:
    id v15 = 0;
    if (v9) {
      goto LABEL_25;
    }
    goto LABEL_33;
  }
  if (v7
    && (id v13 = [v7 referenceColor]) != 0
    && (v14 = v13, id v15 = [v13 UIColor], v14, v15))
  {
    NSString v16 = String._bridgeToObjectiveC()();
    uint64_t v17 = self;
    id v18 = [v17 imageNamed:v16];

    if (v18)
    {
      id v9 = (UIImage *)[v18 imageWithTintColor:v15];

      if (v9)
      {
        id v59 = v17;
        uint64_t v19 = v9;
        if (sub_100B04AD8())
        {
          id v20 = [v2 mainScreen];
          id v21 = [v20 traitCollection];

          [v21 crl_isUserInterfaceStyleDark];
          NSString v38 = String._bridgeToObjectiveC()();
          id v39 = [v59 imageNamed:v38];

          if (v39)
          {
            id v40 = (UIImage *)v39;
            id v9 = sub_100A55ED8(v19);

            uint64_t v19 = v40;
          }
          else
          {
            id v9 = 0;
          }
        }
      }
    }
    else
    {
      id v9 = 0;
    }
    id v41 = v15;
    id v42 = [v41 accessibilityName];
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v11 = v43;
    sub_100522AD8(v12);

    if (v9) {
      goto LABEL_25;
    }
  }
  else
  {
    char v25 = self;
    uint64_t v26 = v60;
    id v27 = [v25 mainBundle];
    NSString v28 = String._bridgeToObjectiveC()();
    NSString v29 = String._bridgeToObjectiveC()();
    id v30 = [v27 localizedStringForKey:v28 value:v29 table:0];

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v11 = v31;

    sub_100522AD8(v12);
    id v15 = 0;
    id v9 = v60;
    if (v60)
    {
LABEL_25:
      id v37 = -[UIImage crl_imageWithAlpha:renderingMode:](v9, "crl_imageWithAlpha:renderingMode:", 0, 0.4, v53, v55, v57);
      goto LABEL_34;
    }
  }
LABEL_33:
  id v37 = 0;
LABEL_34:
  sub_10050BF48(0, (unint64_t *)&qword_101672600);
  uint64_t v44 = swift_allocObject();
  swift_unknownObjectWeakInit();
  id v45 = v15;
  id v46 = v9;
  uint64_t v58 = v44;
  uint64_t v47 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
  unsigned __int8 v48 = sub_10051C358(v47, v15, v9, v37);

  id v49 = v48;
  if (v11)
  {
    NSString v50 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v50 = 0;
  }
  [v48 setAccessibilityValue:v50];

  return v48;
}

void sub_100ACA6A4(uint64_t a1@<X0>, void *a2@<X1>, char a3@<W2>, void *a4@<X3>, objc_class **a5@<X8>)
{
  id v9 = *(void **)a1;
  int v10 = *(unsigned __int8 *)(a1 + 8);
  sub_10050BF48(0, (unint64_t *)&qword_101672600);
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = v9;
  *(unsigned char *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = a2;
  sub_1007A0914(v9, v10);
  id v12 = a2;
  uint64_t v36 = 0;
  uint64_t v37 = 0;
  id v39 = sub_100ACF7FC;
  uint64_t v40 = v11;
  uint64_t v38 = 0;
  id v13 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
  if (a3) {
    goto LABEL_18;
  }
  if (!a4 && v10 == 3 && !v9)
  {
    id v21 = sub_100AC8FFC(0, 3);
    int v20 = 1;
    goto LABEL_19;
  }
  if (v10)
  {
    if (v10 != 1 || !a4) {
      goto LABEL_18;
    }
    id v14 = v9;
    id v15 = [a4 referenceColor:0, 0, 0, sub_100ACF7FC, v11];
    if (v15)
    {
      NSString v16 = v15;
      id v17 = [v15 UIColor];

      if (v17)
      {
        sub_10050BF48(0, (unint64_t *)&qword_101672E50);
        id v18 = [v14 UIColor];
        char v19 = static NSObject.== infix(_:_:)();

        if (v19)
        {
          int v20 = 1;
          id v21 = sub_100AC8FFC(v9, 1);
          sub_1007A0938(v9, 1u);

          goto LABEL_19;
        }
      }
    }
    goto LABEL_17;
  }
  if (a4)
  {
    sub_10050BF48(0, (unint64_t *)&qword_101687660);
    sub_1007A0914(v9, 0);
    id v22 = a4;
    char v23 = static NSObject.== infix(_:_:)();

    if (v23)
    {
      id v21 = sub_100AC8FFC(v9, 0);
      sub_1007A0938(v9, 0);
      int v20 = 1;
      goto LABEL_19;
    }
LABEL_17:
    sub_1007A0938(v9, v10);
  }
LABEL_18:
  id v21 = sub_100AC88D8(v9, v10);
  int v20 = 0;
LABEL_19:
  if (qword_10166F8B8 != -1) {
    swift_once();
  }
  double v24 = *(double *)&qword_10171B828;
  uint64_t v25 = sub_1007A03F4(v9, v10);
  Class v27 = sub_100BAE53C(v21, v13, v25, v26, v24);
  swift_bridgeObjectRelease();
  UIAccessibilityTraits v28 = UIAccessibilityTraitSelected;
  NSString v29 = v27;
  unint64_t v30 = (unint64_t)[(objc_class *)v29 accessibilityTraits];
  uint64_t v31 = -1;
  if ((v30 & v28) != 0) {
    uint64_t v31 = ~v28;
  }
  unint64_t v32 = v31 & v30;
  if ((v30 & v28) == v28) {
    UIAccessibilityTraits v33 = 0;
  }
  else {
    UIAccessibilityTraits v33 = v28;
  }
  unint64_t v34 = v33 | v30;
  if (v20) {
    unint64_t v35 = v34;
  }
  else {
    unint64_t v35 = v32;
  }
  -[objc_class setAccessibilityTraits:](v29, "setAccessibilityTraits:", v35, v36, v37, v38, v39, v40);

  *a5 = v29;
}

void sub_100ACAA08(uint64_t a1, void *a2, char a3)
{
  switch(a3)
  {
    case 1:
      id v7 = a2;
      sub_100ACC824(a2);
      NSString v5 = a2;
      unsigned __int8 v6 = 1;
      goto LABEL_7;
    case 2:
      sub_100ACCD98();
      break;
    case 3:
      sub_100ACC824(0);
      break;
    default:
      id v4 = a2;
      sub_100ACC824(a2);
      NSString v5 = a2;
      unsigned __int8 v6 = 0;
LABEL_7:
      sub_1007A0938(v5, v6);
      break;
  }
}

id sub_100ACAAB8()
{
  if (*(unsigned char *)(v0 + OBJC_IVAR____TtC8Freeform38CRLiOSMiniFormatterColorPaletteBuilder_showHeaderView) == 1)
  {
    sub_1005057FC((uint64_t *)&unk_101676C10);
    uint64_t v1 = swift_allocObject();
    *(_OWORD *)(v1 + 16) = xmmword_10117DF50;
    *(void *)(v1 + 32) = sub_100ACACBC();
    unsigned __int16 v2 = (unsigned __int16)[*(id *)(v0 + OBJC_IVAR____TtC8Freeform26CRLiOSMiniFormatterBuilder_element) options];
    id v3 = &OBJC_IVAR____TtC8Freeform38CRLiOSMiniFormatterColorPaletteBuilder_fullColorPalette;
    if ((v2 & 0x1000) != 0) {
      id v3 = &OBJC_IVAR____TtC8Freeform38CRLiOSMiniFormatterColorPaletteBuilder_stickyColorPalette;
    }
    uint64_t v4 = v0 + *v3;
    uint64_t v6 = *(void *)(v4 + 8);
    uint64_t v5 = *(void *)(v4 + 16);
    uint64_t v7 = swift_bridgeObjectRetain();
    id v8 = sub_100ACB784(v7, v6, v5);
    swift_bridgeObjectRelease();
    *(void *)(v1 + 40) = v8;
    specialized Array._endMutation()();
    id v9 = objc_allocWithZone((Class)UIStackView);
    sub_10050BF48(0, (unint64_t *)&qword_1016725F0);
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    id v11 = [v9 initWithArrangedSubviews:isa];

    [v11 setAxis:1];
    if (qword_10166EB58 != -1) {
      swift_once();
    }
    [v11 setSpacing:*(double *)&qword_101719DD8];
  }
  else
  {
    unsigned __int16 v12 = (unsigned __int16)[*(id *)(v0 + OBJC_IVAR____TtC8Freeform26CRLiOSMiniFormatterBuilder_element) options];
    id v13 = &OBJC_IVAR____TtC8Freeform38CRLiOSMiniFormatterColorPaletteBuilder_fullColorPalette;
    if ((v12 & 0x1000) != 0) {
      id v13 = &OBJC_IVAR____TtC8Freeform38CRLiOSMiniFormatterColorPaletteBuilder_stickyColorPalette;
    }
    uint64_t v14 = v0 + *v13;
    uint64_t v15 = *(void *)(v14 + 8);
    uint64_t v16 = *(void *)(v14 + 16);
    uint64_t v17 = swift_bridgeObjectRetain();
    id v11 = sub_100ACB784(v17, v15, v16);
    swift_bridgeObjectRelease();
  }
  return v11;
}

id sub_100ACACBC()
{
  uint64_t v1 = v0;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v3 = sub_1005057FC((uint64_t *)&unk_1016725A0);
  __chkstk_darwin(v3 - 8, v4);
  uint64_t v6 = (char *)&v54 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for UIButton.Configuration();
  uint64_t v60 = *(void *)(v7 - 8);
  __chkstk_darwin(v7, v8);
  int v10 = (char *)&v54 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11, v12);
  uint64_t v14 = (char *)&v54 - v13;
  static UIButton.Configuration.plain()();
  id v57 = self;
  id v15 = [v57 mainBundle];
  NSString v16 = String._bridgeToObjectiveC()();
  NSString v17 = String._bridgeToObjectiveC()();
  id v18 = [v15 localizedStringForKey:v16 value:v17 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  UIButton.Configuration.title.setter();
  *(void *)(swift_allocObject() + 16) = ObjectType;
  UIConfigurationTextAttributesTransformer.init(_:)();
  uint64_t v19 = type metadata accessor for UIConfigurationTextAttributesTransformer();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v6, 0, 1, v19);
  UIButton.Configuration.titleTextAttributesTransformer.setter();
  NSString v20 = String._bridgeToObjectiveC()();
  id v21 = [self systemImageNamed:v20];

  UIButton.Configuration.image.setter();
  id v22 = [self configurationWithPointSize:7 weight:14.0];
  UIButton.Configuration.preferredSymbolConfigurationForImage.setter();
  UIButton.Configuration.imagePadding.setter();
  UIButton.Configuration.contentInsets.setter();
  sub_10050BF48(0, (unint64_t *)&qword_101672600);
  swift_allocObject();
  swift_unknownObjectWeakInit();
  char v23 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
  sub_10050BF48(0, (unint64_t *)&unk_101672590);
  double v24 = *(void (**)(char *, char *, uint64_t))(v60 + 16);
  uint64_t v59 = v7;
  v24(v10, v14, v7);
  id v58 = v23;
  uint64_t v25 = (void *)UIButton.init(configuration:primaryAction:)();
  LODWORD(v26) = 1148846080;
  [v25 setContentCompressionResistancePriority:0 forAxis:v26];
  id v27 = [objc_allocWithZone((Class)UILabel) initWithFrame:0.0, 0.0, 0.0, 0.0];
  id v55 = self;
  id v28 = [v55 boldSystemFontOfSize:18.0];
  [v27 setFont:v28];

  NSString v29 = *(NSString *)(v1 + OBJC_IVAR____TtC8Freeform38CRLiOSMiniFormatterColorPaletteBuilder_headerTitle + 8);
  if (v29) {
    NSString v30 = String._bridgeToObjectiveC()();
  }
  else {
    NSString v30 = 0;
  }
  [v27 setText:v30];

  id v31 = [self labelColor];
  [v27 setTextColor:v31];

  [v27 setTextAlignment:1];
  [v27 setAdjustsFontSizeToFitWidth:1];
  [v27 setAllowsDefaultTighteningForTruncation:1];
  [v27 setMinimumScaleFactor:0.6];
  [v27 setShowsLargeContentViewer:1];
  id v32 = v27;
  if (v29) {
    NSString v29 = String._bridgeToObjectiveC()();
  }
  [v27 setLargeContentTitle:v29];

  id v33 = [objc_allocWithZone((Class)UILargeContentViewerInteraction) initWithDelegate:v1];
  [v27 addInteraction:v33];

  swift_allocObject();
  swift_unknownObjectWeakInit();
  unint64_t v34 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
  id v56 = v34;
  v62.value.super.super.Class isa = (Class)v34;
  v35.super.super.super.super.Class isa = UIButton.init(type:primaryAction:)(UIButtonTypeSystem, v62).super.super.super.super.isa;
  id v36 = [v57 mainBundle];
  NSString v37 = String._bridgeToObjectiveC()();
  NSString v38 = String._bridgeToObjectiveC()();
  id v39 = [v36 localizedStringForKey:v37 value:v38 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v40 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [(objc_class *)v35.super.super.super.super.isa setTitle:v40 forState:0];

  id v41 = [(objc_class *)v35.super.super.super.super.isa titleLabel];
  if (v41)
  {
    uint64_t v43 = v41;
    id v44 = [v55 systemFontOfSize:18.0];
    [v43 setFont:v44];
  }
  LODWORD(v42) = 1148846080;
  [(objc_class *)v35.super.super.super.super.isa setContentCompressionResistancePriority:0 forAxis:v42];
  [(objc_class *)v35.super.super.super.super.isa setShowsLargeContentViewer:1];
  id v45 = [objc_allocWithZone((Class)UILargeContentViewerInteraction) initWithDelegate:v1];
  [(objc_class *)v35.super.super.super.super.isa addInteraction:v45];

  sub_1005057FC((uint64_t *)&unk_101676C10);
  uint64_t v46 = swift_allocObject();
  *(_OWORD *)(v46 + 16) = xmmword_10117FBD0;
  *(void *)(v46 + 32) = v25;
  *(void *)(v46 + 40) = v27;
  *(UIButton *)(v46 + 48) = v35;
  uint64_t v61 = v46;
  specialized Array._endMutation()();
  id v47 = objc_allocWithZone((Class)UIStackView);
  sub_10050BF48(0, (unint64_t *)&qword_1016725F0);
  id v48 = v27;
  id v49 = v25;
  NSString v50 = v35.super.super.super.super.isa;
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v52 = [v47 initWithArrangedSubviews:isa];

  [v52 setDistribution:4];
  [v52 setSpacing:2.5];

  (*(void (**)(char *, uint64_t))(v60 + 8))(v14, v59);
  return v52;
}

uint64_t sub_100ACB5C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for AttributeContainer();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  uint64_t KeyPath = swift_getKeyPath();
  swift_getKeyPath();
  [self systemFontOfSize:18.0 KeyPath];
  sub_100522B9C();
  return AttributeContainer.subscript.setter();
}

void sub_100ACB68C()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    uint64_t v2 = Strong + OBJC_IVAR____TtC8Freeform26CRLiOSMiniFormatterBuilder_presenter;
    uint64_t v3 = swift_unknownObjectWeakLoadStrong();
    uint64_t v4 = *(void *)(v2 + 16);

    if (v3)
    {
      uint64_t ObjectType = swift_getObjectType();
      (*(void (**)(uint64_t, uint64_t))(v4 + 56))(ObjectType, v4);
      swift_unknownObjectRelease();
    }
  }
}

void sub_100ACB730()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    sub_100ACCD98();
  }
}

id sub_100ACB784(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_getObjectType();
  uint64_t v6 = sub_100ACCC24();
  char v8 = (v6 != 1) & v7;
  if (v6 == 1) {
    uint64_t v9 = 0;
  }
  else {
    uint64_t v9 = (void *)v6;
  }
  id v10 = v9;
  swift_bridgeObjectRetain();
  uint64_t v11 = v3;
  unint64_t v12 = (unint64_t)sub_100AC87D4(a3, v11, v8, v9);

  swift_bridgeObjectRelease();
  if (!(v12 >> 62))
  {
    int64_t v13 = *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (a2) {
      goto LABEL_6;
    }
LABEL_23:
    __break(1u);
LABEL_24:
    sub_10050BF48(0, (unint64_t *)&qword_1016725F0);
    swift_bridgeObjectRetain();
    _bridgeCocoaArray<A>(_:)();
    swift_bridgeObjectRelease();
    goto LABEL_21;
  }
  swift_bridgeObjectRetain();
  int64_t v13 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (!a2) {
    goto LABEL_23;
  }
LABEL_6:
  uint64_t v14 = sub_100AC85A0(0, v13, a2, v12, a2);
  uint64_t v15 = *((void *)v14 + 2);
  if (v15)
  {
    specialized ContiguousArray.reserveCapacity(_:)();
    uint64_t v16 = 0;
    do
    {
      if (*(void *)&v14[v16 + 4] >> 62)
      {
        sub_10050BF48(0, (unint64_t *)&qword_1016725F0);
        swift_bridgeObjectRetain();
        _bridgeCocoaArray<A>(_:)();
      }
      else
      {
        swift_bridgeObjectRetain_n();
        dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
        sub_10050BF48(0, (unint64_t *)&qword_1016725F0);
      }
      id v17 = objc_allocWithZone((Class)UIStackView);
      sub_10050BF48(0, (unint64_t *)&qword_1016725F0);
      Class isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      id v19 = [v17 initWithArrangedSubviews:isa];

      [v19 setDistribution:3];
      id v20 = [v19 heightAnchor];
      if (qword_10166EB60 != -1) {
        swift_once();
      }
      ++v16;
      id v21 = [v20 constraintGreaterThanOrEqualToConstant:*(double *)&qword_101719DE0];

      [v21 setActive:1];
      swift_bridgeObjectRelease();

      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
    }
    while (v15 != v16);
  }
  swift_bridgeObjectRelease();
  id v22 = sub_100ACBC3C();
  if (v22)
  {
    id v23 = v22;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
  }
  if ((unint64_t)_swiftEmptyArrayStorage >> 62) {
    goto LABEL_24;
  }
  swift_bridgeObjectRetain();
  dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
  sub_10050BF48(0, (unint64_t *)&qword_1016725F0);
LABEL_21:
  swift_bridgeObjectRelease();
  id v24 = objc_allocWithZone((Class)UIStackView);
  sub_10050BF48(0, (unint64_t *)&qword_1016725F0);
  Class v25 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v26 = [v24 initWithArrangedSubviews:v25];

  [v26 setAxis:1];
  [v26 setSpacing:*(double *)&v11[OBJC_IVAR____TtC8Freeform38CRLiOSMiniFormatterColorPaletteBuilder_rowSpacing]];
  return v26;
}

id sub_100ACBC3C()
{
  uint64_t v1 = *(void **)&v0[OBJC_IVAR____TtC8Freeform26CRLiOSMiniFormatterBuilder_element];
  if (([v1 options] & 4) != 0)
  {
    sub_10050BF48(0, (unint64_t *)&qword_101672600);
    uint64_t v21 = swift_allocObject();
    *(void *)(v21 + 16) = v0;
    id v22 = v0;
    uint64_t v85 = v21;
    id v23 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
    id v89 = self;
    id v24 = [v89 mainBundle];
    NSString v25 = String._bridgeToObjectiveC()();
    NSString v26 = String._bridgeToObjectiveC()();
    id v27 = [v24 localizedStringForKey:v25 value:v26 table:0];

    uint64_t v28 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v30 = v29;

    uint64_t v31 = self;
    id v32 = v23;
    id v33 = (void *)v31;
    unint64_t v34 = v22;
    id v35 = [v33 labelColor];
    id v36 = sub_10051F614(v28, v30, 0, (uint64_t)v35, 0, 1, v23, 0);
    swift_bridgeObjectRelease();
    uint64_t v88 = v32;

    uint64_t v90 = v36;
    id v37 = [v36 heightAnchor];
    if (qword_10166EB60 != -1) {
      swift_once();
    }
    id v38 = [v37 constraintGreaterThanOrEqualToConstant:*(double *)&qword_101719DE0];

    [v38 setActive:1];
    id v39 = (void *)sub_100ACCC24();
    if ((unint64_t)v39 < 2) {
      goto LABEL_32;
    }
    id v41 = v39;
    if (v40) {
      goto LABEL_31;
    }
    id v87 = v39;
    unsigned __int16 v42 = (unsigned __int16)[v1 options];
    uint64_t v43 = &OBJC_IVAR____TtC8Freeform38CRLiOSMiniFormatterColorPaletteBuilder_fullColorPalette;
    if ((v42 & 0x1000) != 0) {
      uint64_t v43 = &OBJC_IVAR____TtC8Freeform38CRLiOSMiniFormatterColorPaletteBuilder_stickyColorPalette;
    }
    uint64_t v44 = *(void *)&v22[*v43 + 16];
    uint64_t v45 = *(void *)(v44 + 16);
    if (!v45)
    {
      swift_bridgeObjectRetain();
      sub_100522AD8(v41);
      swift_bridgeObjectRelease();
      goto LABEL_33;
    }
    swift_bridgeObjectRetain_n();
    sub_10052315C(v41);
    swift_bridgeObjectRetain();
    uint64_t v46 = (unsigned char *)(v44 + 40);
    id v47 = v87;
    while (1)
    {
      int v49 = *v46;
      if ((v49 - 2) < 2) {
        goto LABEL_16;
      }
      NSString v50 = (void *)*((void *)v46 - 1);
      if (*v46)
      {
        sub_1007A0914(*((id *)v46 - 1), 1u);
        id v51 = [v50 color];
        id v52 = [v47 referenceColor];
        uint64_t v53 = v52;
        if (v51)
        {
          if (v52)
          {
            sub_10050BF48(0, (unint64_t *)&qword_10168F9E0);
            uint64_t v54 = v34;
            id v55 = v51;
            id v47 = v87;
            char v56 = static NSObject.== infix(_:_:)();
            sub_1007A0938(v50, 1u);

            unint64_t v34 = v54;
            if (v56) {
              goto LABEL_30;
            }
            goto LABEL_15;
          }
          sub_1007A0938(v50, 1u);
          uint64_t v53 = v51;
        }
        else
        {
          sub_1007A0938(v50, 1u);
          if (!v53)
          {
LABEL_30:
            swift_bridgeObjectRelease_n();
            sub_1007A0938(v50, v49);
            sub_100522AD8(v41);
            sub_100522AD8(v41);
            swift_bridgeObjectRelease();
LABEL_31:
            sub_100522AD8(v41);
LABEL_32:
            id v41 = 0;
LABEL_33:
            id v58 = v41;
            uint64_t v59 = sub_100AC88D8(v41, 2);
            if (qword_10166F8B8 != -1) {
              swift_once();
            }
            double v60 = *(double *)&qword_10171B828;
            uint64_t v61 = swift_allocObject();
            *(void *)(v61 + 16) = v34;
            UIAction_optional v62 = v34;
            uint64_t v86 = v61;
            float v63 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
            id v64 = [v89 mainBundle];
            NSString v65 = String._bridgeToObjectiveC()();
            NSString v66 = String._bridgeToObjectiveC()();
            id v67 = [v64 localizedStringForKey:v65 value:v66 table:0];

            uint64_t v68 = static String._unconditionallyBridgeFromObjectiveC(_:)();
            uint64_t v70 = v69;

            Class v71 = sub_100BAE53C(v59, v63, v68, v70, v60);
            swift_bridgeObjectRelease();

            LODWORD(v72) = 1148846080;
            [(objc_class *)v71 setContentHuggingPriority:0 forAxis:v72];
            LODWORD(v73) = 1148846080;
            [(objc_class *)v71 setContentCompressionResistancePriority:0 forAxis:v73];
            id v74 = v90;
            if (!((unint64_t)_swiftEmptyArrayStorage >> 62))
            {
              uint64_t v75 = *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
              id v76 = v90;
              uint64_t v77 = v71;
              uint64_t v78 = v75 + 2;
              if (!__OFADD__(v75, 2)) {
                goto LABEL_37;
              }
LABEL_45:
              __break(1u);
              goto LABEL_46;
            }
            id v82 = v90;
            uint64_t v83 = v71;
            swift_bridgeObjectRetain();
            uint64_t v84 = _CocoaArrayWrapper.endIndex.getter();
            swift_bridgeObjectRelease();
            uint64_t v78 = v84 + 2;
            if (__OFADD__(v84, 2)) {
              goto LABEL_45;
            }
LABEL_37:
            sub_101044ABC(v78, 1);
            specialized Array._endMutation()();
            id v74 = v90;
            specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
            if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
LABEL_46:
            }
              specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
            specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
            specialized Array._endMutation()();
            id v20 = v71;
            specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
            if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
              specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
            }
            specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
            specialized Array._endMutation()();

LABEL_41:
            id v79 = objc_allocWithZone((Class)UIStackView);
            sub_10050BF48(0, (unint64_t *)&qword_1016725F0);
            Class isa = Array._bridgeToObjectiveC()().super.isa;
            swift_bridgeObjectRelease();
            id v57 = [v79 initWithArrangedSubviews:isa];

            [v57 setAlignment:1];
            [v57 setSpacing:7.5];
            return v57;
          }
        }

        LOBYTE(v49) = 1;
      }
      else
      {
        sub_10050BF48(0, (unint64_t *)&qword_101687660);
        sub_1007A0914(v50, 0);
        sub_10052315C(v41);
        sub_1007A0914(v50, 0);
        char v48 = static NSObject.== infix(_:_:)();
        sub_1007A0938(v50, 0);
        sub_100522AD8(v41);
        if (v48) {
          goto LABEL_30;
        }
      }
LABEL_15:
      sub_1007A0938(v50, v49);
LABEL_16:
      v46 += 16;
      if (!--v45)
      {
        swift_bridgeObjectRelease_n();
        sub_100522AD8(v41);
        sub_100522AD8(v41);
        swift_bridgeObjectRelease();
        goto LABEL_33;
      }
    }
  }
  if (v0[OBJC_IVAR____TtC8Freeform38CRLiOSMiniFormatterColorPaletteBuilder_showMoreOptionsButton])
  {
    sub_10050BF48(0, (unint64_t *)&qword_101672600);
    uint64_t v2 = swift_allocObject();
    *(void *)(v2 + 16) = v0;
    uint64_t v3 = v0;
    uint64_t v4 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
    id v5 = [self mainBundle];
    NSString v6 = String._bridgeToObjectiveC()();
    NSString v7 = String._bridgeToObjectiveC()();
    id v8 = [v5 localizedStringForKey:v6 value:v7 table:0];

    uint64_t v9 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v11 = v10;

    NSString v12 = String._bridgeToObjectiveC()();
    id v13 = [self imageNamed:v12];

    uint64_t v14 = self;
    id v15 = v4;
    id v16 = [v14 preferredFontForTextStyle:UIFontTextStyleBody];
    id v17 = sub_10051F614(v9, v11, v13, 0, 0x4024000000000000, 0, v4, v16);
    swift_bridgeObjectRelease();

    id v18 = [v17 heightAnchor];
    id v19 = [v18 constraintGreaterThanOrEqualToConstant:46.0];

    [v19 setActive:1];
    id v20 = v17;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
    goto LABEL_41;
  }
  swift_bridgeObjectRelease();
  return 0;
}

void sub_100ACC824(void *a1)
{
  uint64_t v3 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform26CRLiOSMiniFormatterBuilder_element);
  if (([v3 options] & 4) != 0 || (objc_msgSend(v3, "options") & 0x1000) != 0)
  {
    uint64_t v11 = *(void **)(*(void *)(v1
                               + OBJC_IVAR____TtC8Freeform38CRLiOSMiniFormatterColorPaletteBuilder_shapeFillDataProvider)
                   + OBJC_IVAR____TtC8Freeform28CRLMiniFormatterDataProvider_editorController);
    if (sub_10050BF48(0, (unint64_t *)&qword_101686A40)) {
      ObjCClassFromMetadatCATransform3D a = swift_getObjCClassFromMetadata();
    }
    else {
      ObjCClassFromMetadatCATransform3D a = 0;
    }
    id v13 = [v11 mostSpecificCurrentEditorOfClass:ObjCClassFromMetadata];
    self;
    uint64_t v14 = (void *)swift_dynamicCastObjCClass();
    id v16 = v14;
    if (!v14)
    {
      swift_unknownObjectRelease();
      uint64_t v14 = 0;
    }
    [v14 setShapeFill:a1];
  }
  else
  {
    if (([v3 options] & 8) != 0)
    {
      if (!a1 || (id v7 = [a1 referenceColor]) == 0) {
        id v7 = [self clearColor];
      }
      if ([*(id *)(*(void *)(v1+ OBJC_IVAR____TtC8Freeform38CRLiOSMiniFormatterColorPaletteBuilder_strokeDataProvider)+ OBJC_IVAR____TtC8Freeform28CRLMiniFormatterDataProvider_editorController) mostSpecificEditorConformingToProtocol:&OBJC_PROTOCOL___CRLStrokeEditor])
      {
        void aBlock[6] = &OBJC_PROTOCOL___CRLStrokeEditor;
        id v15 = (void *)swift_dynamicCastObjCProtocolConditional();
        if (v15) {
          [v15 applyStrokeColor:v7];
        }
        swift_unknownObjectRelease();
      }
      sub_1008E2764();
LABEL_25:

      return;
    }
    if (([v3 options] & 0x10) != 0
      || ([v3 options] & 0x80000) != 0)
    {
      if (a1)
      {
        uint64_t v4 = *(void **)(*(void *)(v1
                                  + OBJC_IVAR____TtC8Freeform38CRLiOSMiniFormatterColorPaletteBuilder_textDataProvider)
                      + OBJC_IVAR____TtC8Freeform28CRLMiniFormatterDataProvider_editorController);
        uint64_t v5 = swift_allocObject();
        *(void *)(v5 + 24) = 0;
        *(void *)(v5 + 16) = 0;
        aBlock[4] = sub_100565100;
        aBlock[5] = v5;
        aBlock[0] = _NSConcreteStackBlock;
        aBlock[1] = *(void *)"";
        void aBlock[2] = sub_1005B74EC;
        void aBlock[3] = &unk_101522318;
        NSString v6 = _Block_copy(aBlock);
        swift_retain();
        id v7 = a1;
        swift_release();
        [v4 enumerateEditorsOnStackUsingBlock:v6];
        _Block_release(v6);
        swift_beginAccess();
        uint64_t v8 = *(void *)(v5 + 16);
        uint64_t v9 = *(void *)(v5 + 24);
        swift_unknownObjectRetain();
        swift_release();
        if (v8)
        {
          uint64_t ObjectType = swift_getObjectType();
          (*(void (**)(id, uint64_t, uint64_t))(v9 + 176))(v7, ObjectType, v9);

          swift_unknownObjectRelease();
          return;
        }
        goto LABEL_25;
      }
      sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"set(fill:)", 10, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Formatters/CRLiOSMiniFormatterColorPaletteBuilder.swift", 113, 2, 398, (uint64_t)"invalid nil value found", 23, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"set(fill:)", 10, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Formatters/CRLiOSMiniFormatterColorPaletteBuilder.swift", 113, 2, 398);
    }
  }
}

uint64_t sub_100ACCC24()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform26CRLiOSMiniFormatterBuilder_element);
  if ((([v1 options] & 4) != 0 || (objc_msgSend(v1, "options") & 0x1000) != 0)
    && (unint64_t v2 = sub_1005D1384()) != 0)
  {
    sub_100AC6E54(&v9, v2);
    swift_bridgeObjectRelease();
    return v9;
  }
  else
  {
    if (([v1 options] & 8) != 0)
    {
      uint64_t v4 = (void *)sub_1008E2AE4();
      if ((unint64_t)v4 >= 2)
      {
        NSString v6 = v4;
        if ((v5 & 1) == 0)
        {
          id v3 = [objc_allocWithZone((Class)CRLColorFill) initWithColor:v4];
          sub_100522AD8(v6);
          return (uint64_t)v3;
        }
        sub_100522AD8(v4);
      }
    }
    if (([v1 options] & 0x10) != 0
      || ([v1 options] & 0x80000) != 0)
    {
      uint64_t v7 = sub_100993370();
      if (v7) {
        return v7;
      }
      else {
        return 1;
      }
    }
    else
    {
      return 1;
    }
  }
}

void sub_100ACCD98()
{
  if (v0[OBJC_IVAR____TtC8Freeform38CRLiOSMiniFormatterColorPaletteBuilder_isEditingText] == 1)
  {
    uint64_t v2 = *(void *)&v0[OBJC_IVAR____TtC8Freeform38CRLiOSMiniFormatterColorPaletteBuilder_headerTitle];
    uint64_t v1 = *(void *)&v0[OBJC_IVAR____TtC8Freeform38CRLiOSMiniFormatterColorPaletteBuilder_headerTitle + 8];
    id v3 = (objc_class *)type metadata accessor for CRLiOSMiniFormatterTextEditingColorPickerViewController();
    uint64_t v4 = (char *)objc_allocWithZone(v3);
    *(void *)&v4[OBJC_IVAR____TtC8Freeform55CRLiOSMiniFormatterTextEditingColorPickerViewController_builder] = v0;
    id v5 = objc_allocWithZone((Class)PKColorPicker);
    swift_bridgeObjectRetain();
    NSString v6 = v0;
    uint64_t v7 = v4;
    id v8 = [v5 init];
    *(void *)&v7[OBJC_IVAR____TtC8Freeform55CRLiOSMiniFormatterTextEditingColorPickerViewController_colorPicker] = v8;
    uint64_t v9 = &v7[OBJC_IVAR____TtC8Freeform55CRLiOSMiniFormatterTextEditingColorPickerViewController_headerTitle];
    *(void *)uint64_t v9 = v2;
    *((void *)v9 + 1) = v1;

    v27.receiver = v7;
    v27.super_class = v3;
    id v10 = [super initWithNibName:0 bundle:0];
    uint64_t v11 = &v6[OBJC_IVAR____TtC8Freeform26CRLiOSMiniFormatterBuilder_presenter];
    if (swift_unknownObjectWeakLoadStrong())
    {
      uint64_t v12 = *((void *)v11 + 2);
      uint64_t ObjectType = swift_getObjectType();
      (*(void (**)(id, uint64_t, uint64_t))(v12 + 24))(v10, ObjectType, v12);

      swift_unknownObjectRelease();
    }
    else
    {
    }
    return;
  }
  uint64_t v14 = &v0[OBJC_IVAR____TtC8Freeform26CRLiOSMiniFormatterBuilder_presenter];
  if (!swift_unknownObjectWeakLoadStrong()) {
    return;
  }
  uint64_t v15 = *((void *)v14 + 2);
  uint64_t v16 = type metadata accessor for CRLiOSMiniFormatterColorPickerViewController();
  uint64_t v17 = swift_getObjectType();
  id v18 = v0;
  uint64_t v19 = swift_unknownObjectRetain();
  id v26 = sub_100521AEC(v19, (uint64_t)v18, v16, v17, v15);
  [v26 setDelegate:v18];
  id v20 = (void *)sub_100ACCC24();
  if (v20 != (void *)1)
  {
    id v22 = v20;
    if (v21)
    {
LABEL_11:
      sub_100522AD8(v22);
      goto LABEL_12;
    }
    if (v20)
    {
      id v23 = [v20 referenceColor];
      if (v23)
      {
        id v24 = v23;
        id v25 = [v23 UIColor];

        if (v25)
        {
          [v26 crl_ifVisuallyDifferentSetSelectedColor:v25];
        }
      }
      goto LABEL_11;
    }
  }
LABEL_12:
  (*(void (**)(id, char *, uint64_t, uint64_t))(v15 + 32))(v26, v18, v17, v15);
  swift_unknownObjectRelease();
}

void *sub_100ACD040()
{
  unint64_t v1 = sub_1007FE0AC();
  if (v1) {
    sub_10057C1E4(v1);
  }
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform26CRLiOSMiniFormatterBuilder_element);
  if ((([v2 options] & 4) != 0 || (objc_msgSend(v2, "options") & 0x1000) != 0)
    && (unint64_t v3 = sub_1005D1384()) != 0
    || ([v2 options] & 8) != 0 && (unint64_t v3 = sub_1005D1384()) != 0
    || (([v2 options] & 0x10) != 0
     || ([v2 options] & 0x80000) != 0)
    && (unint64_t v3 = sub_1005D1384()) != 0)
  {
    unint64_t v4 = v3;
    if (v3 >> 62)
    {
      type metadata accessor for CRLBoardItem(0);
      unint64_t v5 = _bridgeCocoaArray<A>(_:)();
    }
    else
    {
      swift_bridgeObjectRetain();
      dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
      type metadata accessor for CRLBoardItem(0);
      unint64_t v5 = v4;
    }
    swift_bridgeObjectRelease();
    sub_10058EBD0(v5);
    swift_bridgeObjectRelease();
  }
  return &_swiftEmptySetSingleton;
}

uint64_t sub_100ACD1B8(uint64_t a1, uint64_t a2)
{
  unint64_t v5 = *(void **)(v2 + OBJC_IVAR____TtC8Freeform26CRLiOSMiniFormatterBuilder_element);
  if (([v5 options] & 4) != 0 || (objc_msgSend(v5, "options") & 0x1000) != 0)
  {
    uint64_t v6 = sub_1005D1384();
    if (v6)
    {
      unint64_t v7 = v6;
      sub_100522D7C(a2, (uint64_t)&v32);
      type metadata accessor for CRLShapeItem();
      if (swift_dynamicCast())
      {
        id v8 = v31;
        char v9 = sub_100ED5958((uint64_t)v31, v7);
        swift_bridgeObjectRelease();
        if (v9)
        {
          uint64_t v10 = *(void *)(a1 + OBJC_IVAR____TtC8Freeform15CRLChangeRecord_details)
              + OBJC_IVAR____TtC8Freeform14CRLPropertyMap_data;
          swift_beginAccess();
          uint64_t v11 = *(void *)v10;
          if (!*(void *)(*(void *)v10 + 16) || (uint64_t v12 = sub_1009563E8(20), (v13 & 1) == 0))
          {
LABEL_35:
            char v18 = 0;
            uint64_t v32 = 0;
            uint64_t v33 = 0;
            uint64_t v34 = 0;
            uint64_t v35 = 1;
            goto LABEL_36;
          }
LABEL_17:
          sub_100557A70(*(void *)(v11 + 56) + 32 * v12, (uint64_t)&v32);
          char v18 = 1;
LABEL_36:
          sub_1006C3968((uint64_t)&v32);

          return v18 & 1;
        }
      }
      else
      {
        swift_bridgeObjectRelease();
      }
    }
  }
  if (([v5 options] & 8) != 0)
  {
    sub_100522D7C(a2, (uint64_t)&v32);
    type metadata accessor for CRLShapeItem();
    if (swift_dynamicCast())
    {
      id v8 = v31;
      unint64_t v14 = sub_1005D1384();
      if (v14)
      {
        char v15 = sub_100ED5958((uint64_t)v31, v14);
        swift_bridgeObjectRelease();
        if (v15)
        {
          uint64_t v16 = *(void *)(a1 + OBJC_IVAR____TtC8Freeform15CRLChangeRecord_details)
              + OBJC_IVAR____TtC8Freeform14CRLPropertyMap_data;
          swift_beginAccess();
          uint64_t v11 = *(void *)v16;
          if (!*(void *)(*(void *)v16 + 16)) {
            goto LABEL_35;
          }
          uint64_t v12 = sub_1009563E8(15);
          if ((v17 & 1) == 0) {
            goto LABEL_35;
          }
          goto LABEL_17;
        }
      }
    }
  }
  if (([v5 options] & 0x10) == 0
    && ([v5 options] & 0x80000) == 0)
  {
    goto LABEL_34;
  }
  sub_100522D7C(a2, (uint64_t)&v32);
  type metadata accessor for CRLShapeItem();
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_34;
  }
  unint64_t v19 = sub_1005D1384();
  if (!v19 || (char v20 = sub_100ED5958((uint64_t)v31, v19), swift_bridgeObjectRelease(), (v20 & 1) == 0))
  {

LABEL_34:
    char v18 = sub_100520CB4(a1, a2);
    return v18 & 1;
  }
  char v21 = *(char **)(a1 + OBJC_IVAR____TtC8Freeform15CRLChangeRecord_details);
  id v22 = &v21[OBJC_IVAR____TtC8Freeform14CRLPropertyMap_data];
  id v23 = v21;
  swift_beginAccess();
  uint64_t v24 = *(void *)v22;
  if (*(void *)(*(void *)v22 + 16))
  {
    uint64_t v25 = sub_1009563E8(25);
    if (v26) {
      goto LABEL_32;
    }
  }
  uint64_t v32 = 0;
  uint64_t v33 = 0;
  uint64_t v34 = 0;
  uint64_t v35 = 1;
  sub_1006C3968((uint64_t)&v32);
  uint64_t v24 = *(void *)v22;
  if (*(void *)(*(void *)v22 + 16))
  {
    uint64_t v25 = sub_1009563E8(27);
    if (v27) {
      goto LABEL_32;
    }
  }
  uint64_t v32 = 0;
  uint64_t v33 = 0;
  uint64_t v34 = 0;
  uint64_t v35 = 1;
  sub_1006C3968((uint64_t)&v32);
  uint64_t v24 = *(void *)v22;
  if (*(void *)(*(void *)v22 + 16))
  {
    uint64_t v25 = sub_1009563E8(29);
    if (v28) {
      goto LABEL_32;
    }
  }
  uint64_t v32 = 0;
  uint64_t v33 = 0;
  uint64_t v34 = 0;
  uint64_t v35 = 1;
  sub_1006C3968((uint64_t)&v32);
  uint64_t v24 = *(void *)v22;
  if (*(void *)(*(void *)v22 + 16) && (uint64_t v25 = sub_1009563E8(30), (v29 & 1) != 0))
  {
LABEL_32:
    sub_100557A70(*(void *)(v24 + 56) + 32 * v25, (uint64_t)&v32);
    sub_1006C3968((uint64_t)&v32);

    char v18 = 1;
  }
  else
  {
    uint64_t v32 = 0;
    uint64_t v33 = 0;
    uint64_t v34 = 0;
    uint64_t v35 = 1;
    sub_1006C3968((uint64_t)&v32);

    char v18 = 0;
  }
  return v18 & 1;
}

unint64_t sub_100ACD5E4()
{
  unint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform26CRLiOSMiniFormatterBuilder_element);
  if (([v1 options] & 0x10) != 0) {
    return 1;
  }
  else {
    return ((unint64_t)[v1 options] >> 19) & 1;
  }
}

uint64_t sub_100ACD63C(uint64_t a1, uint64_t a2)
{
  unint64_t v5 = *(void **)(v2 + OBJC_IVAR____TtC8Freeform26CRLiOSMiniFormatterBuilder_element);
  if (([v5 options] & 4) == 0
    && ([v5 options] & 0x1000) == 0
    && ([v5 options] & 0x80000) == 0)
  {
    goto LABEL_13;
  }
  uint64_t v6 = sub_1005D1384();
  if (!v6) {
    goto LABEL_13;
  }
  unint64_t v7 = v6;
  sub_100522D7C(a2, (uint64_t)&v24);
  type metadata accessor for CRLShapeItem();
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
  char v8 = sub_100ED5958((uint64_t)v23, v7);
  swift_bridgeObjectRelease();
  if ((v8 & 1) == 0)
  {

    goto LABEL_13;
  }
  char v9 = (char *)*(id *)(a1 + OBJC_IVAR____TtC8Freeform15CRLChangeRecord_details);
  if (([v5 options] & 4) != 0 || (objc_msgSend(v5, "options") & 0x1000) != 0)
  {
    uint64_t v12 = &v9[OBJC_IVAR____TtC8Freeform14CRLPropertyMap_data];
    swift_beginAccess();
    uint64_t v13 = *(void *)v12;
    if (*(void *)(v13 + 16) && (uint64_t v14 = sub_1009563E8(), (v15 & 1) != 0))
    {
      sub_100557A70(*(void *)(v13 + 56) + 32 * v14, (uint64_t)&v24);
      char v10 = 1;
    }
    else
    {
      char v10 = 0;
      uint64_t v24 = 0;
      uint64_t v25 = 0;
      uint64_t v26 = 0;
      uint64_t v27 = 1;
    }
    sub_1006C3968((uint64_t)&v24);
  }
  else
  {
    if (([v5 options] & 0x80000) == 0)
    {

LABEL_13:
      char v10 = sub_100520CB4(a1, a2);
      return v10 & 1;
    }
    uint64_t v16 = &v9[OBJC_IVAR____TtC8Freeform14CRLPropertyMap_data];
    swift_beginAccess();
    uint64_t v17 = *(void *)v16;
    if (*(void *)(*(void *)v16 + 16) && (uint64_t v18 = sub_1009563E8(), (v19 & 1) != 0))
    {
      sub_100557A70(*(void *)(v17 + 56) + 32 * v18, (uint64_t)&v24);
      sub_1006C3968((uint64_t)&v24);

      char v10 = 1;
    }
    else
    {
      uint64_t v24 = 0;
      uint64_t v25 = 0;
      uint64_t v26 = 0;
      uint64_t v27 = 1;
      sub_1006C3968((uint64_t)&v24);
      uint64_t v20 = *(void *)v16;
      if (*(void *)(*(void *)v16 + 16) && (uint64_t v21 = sub_1009563E8(), (v22 & 1) != 0))
      {
        sub_100557A70(*(void *)(v20 + 56) + 32 * v21, (uint64_t)&v24);
        char v10 = 1;
      }
      else
      {
        char v10 = 0;
        uint64_t v24 = 0;
        uint64_t v25 = 0;
        uint64_t v26 = 0;
        uint64_t v27 = 1;
      }
      sub_1006C3968((uint64_t)&v24);
    }
  }
  return v10 & 1;
}

BOOL sub_100ACD8F8()
{
  if (([*(id *)(v0 + OBJC_IVAR____TtC8Freeform26CRLiOSMiniFormatterBuilder_element) options] & 8) == 0)return 0; {
  unint64_t v1 = (void *)sub_1008E2994();
  }
  if (v1)
  {
    if (v1 != (void *)1) {
      sub_100522AD8(v1);
    }
    return 0;
  }
  return (v2 & 1) == 0;
}

uint64_t sub_100ACD964()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

id sub_100ACDA04()
{
  return sub_100ACE994(type metadata accessor for CRLiOSMiniFormatterColorPaletteBuilder);
}

uint64_t type metadata accessor for CRLiOSMiniFormatterColorPaletteBuilder()
{
  return self;
}

void sub_100ACDD8C()
{
  unint64_t v1 = v0;
  v26.receiver = v0;
  v26.super_class = (Class)type metadata accessor for CRLiOSMiniFormatterTextEditingColorPickerViewController();
  [super loadView];
  id v2 = [v0 view];
  if (!v2)
  {
    __break(1u);
    goto LABEL_16;
  }
  unint64_t v3 = v2;
  id v4 = [self systemBackgroundColor];
  [v3 setBackgroundColor:v4];

  unint64_t v5 = *(void **)&v1[OBJC_IVAR____TtC8Freeform55CRLiOSMiniFormatterTextEditingColorPickerViewController_colorPicker];
  [v5 setDelegate:*(void *)&v1[OBJC_IVAR____TtC8Freeform55CRLiOSMiniFormatterTextEditingColorPickerViewController_builder]];
  [v5 setColorUserInterfaceStyle:1];
  [v5 setEdgesForExtendedLayout:0];
  uint64_t v6 = (void *)sub_100ACCC24();
  id v8 = 0;
  if (v6 != (void *)1)
  {
    char v9 = v6;
    if ((v7 & 1) == 0)
    {
      if (!v6)
      {
LABEL_8:
        id v8 = 0;
        goto LABEL_9;
      }
      id v10 = [v6 referenceColor];
      if (v10)
      {
        uint64_t v11 = v10;
        id v8 = [v10 UIColor];
        sub_100522AD8(v9);

        goto LABEL_9;
      }
    }
    sub_100522AD8(v9);
    goto LABEL_8;
  }
LABEL_9:
  [v5 setSelectedColor:v8];

  id v12 = [v5 view];
  if (!v12)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  uint64_t v13 = v12;
  [v12 setTranslatesAutoresizingMaskIntoConstraints:0];

  [v1 addChildViewController:v5];
  id v14 = sub_100ACE20C();
  sub_1005057FC((uint64_t *)&unk_101676C10);
  uint64_t v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_10117DF50;
  *(void *)(v15 + 32) = v14;
  id v16 = v14;
  id v17 = [v5 view];
  if (!v17)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  *(void *)(v15 + 40) = v17;
  specialized Array._endMutation()();
  id v18 = objc_allocWithZone((Class)UIStackView);
  sub_10050BF48(0, (unint64_t *)&qword_1016725F0);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v20 = [v18 initWithArrangedSubviews:isa];

  [v20 setAxis:1];
  [v20 setSpacing:8.0];
  [v20 setLayoutMarginsRelativeArrangement:1];
  [v20 setDirectionalLayoutMargins:12.0, 8.0, 8.0, 8.0];
  [v20 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v21 = [v1 view];
  if (!v21)
  {
LABEL_18:
    __break(1u);
    return;
  }
  char v22 = v21;
  [v21 addSubview:v20];

  id v25 = [v1 view];
  sub_1005057FC((uint64_t *)&unk_10168F9D0);
  uint64_t v23 = Optional._bridgeToObjectiveC()();

  Class v24 = [v20 crl_constraintsToAllSidesOfItem:v23];
  swift_unknownObjectRelease();
  if (!v24)
  {
    sub_10050BF48(0, (unint64_t *)&qword_101674200);
    static Array._unconditionallyBridgeFromObjectiveC(_:)();
    Class v24 = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
  }
  [self activateConstraints:v24];

  [v5 didMoveToParentViewController:v1];
}

id sub_100ACE20C()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1005057FC((uint64_t *)&unk_1016725A0);
  __chkstk_darwin(v2 - 8, v3);
  unint64_t v5 = (char *)&v43 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for UIButton.Configuration();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6, v8);
  id v10 = (char *)&v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11, v12);
  id v14 = (char *)&v43 - v13;
  static UIButton.Configuration.plain()();
  id v15 = [self mainBundle];
  NSString v16 = String._bridgeToObjectiveC()();
  NSString v17 = String._bridgeToObjectiveC()();
  id v18 = [v15 localizedStringForKey:v16 value:v17 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  UIButton.Configuration.title.setter();
  UIConfigurationTextAttributesTransformer.init(_:)();
  uint64_t v19 = type metadata accessor for UIConfigurationTextAttributesTransformer();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v5, 0, 1, v19);
  UIButton.Configuration.titleTextAttributesTransformer.setter();
  NSString v20 = String._bridgeToObjectiveC()();
  id v21 = [self systemImageNamed:v20];

  UIButton.Configuration.image.setter();
  id v22 = [self configurationWithPointSize:7 weight:14.0];
  UIButton.Configuration.preferredSymbolConfigurationForImage.setter();
  UIButton.Configuration.imagePadding.setter();
  UIButton.Configuration.contentInsets.setter();
  sub_10050BF48(0, (unint64_t *)&qword_101672600);
  swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v23 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
  sub_10050BF48(0, (unint64_t *)&unk_101672590);
  Class v24 = *(void (**)(char *, char *, uint64_t))(v7 + 16);
  uint64_t v45 = v6;
  v24(v10, v14, v6);
  id v44 = v23;
  id v25 = (void *)UIButton.init(configuration:primaryAction:)();
  LODWORD(v26) = 1148846080;
  [v25 setContentHuggingPriority:0 forAxis:v26];
  id v27 = [objc_allocWithZone((Class)UILabel) initWithFrame:0.0, 0.0, 0.0, 0.0];
  id v28 = [self boldSystemFontOfSize:18.0];
  [v27 setFont:v28];

  if (*(void *)(v1
                 + OBJC_IVAR____TtC8Freeform55CRLiOSMiniFormatterTextEditingColorPickerViewController_headerTitle
                 + 8))
    NSString v29 = String._bridgeToObjectiveC()();
  else {
    NSString v29 = 0;
  }
  [v27 setText:v29];

  id v30 = [self labelColor];
  [v27 setTextColor:v30];

  [v27 setTextAlignment:1];
  id v31 = [objc_allocWithZone((Class)UIView) initWithFrame:0.0, 0.0, 0.0, 0.0];
  sub_1005057FC((uint64_t *)&unk_101676C10);
  uint64_t v32 = swift_allocObject();
  *(_OWORD *)(v32 + 16) = xmmword_10117FBD0;
  *(void *)(v32 + 32) = v25;
  *(void *)(v32 + 40) = v27;
  *(void *)(v32 + 48) = v31;
  uint64_t v46 = v32;
  specialized Array._endMutation()();
  id v33 = objc_allocWithZone((Class)UIStackView);
  sub_10050BF48(0, (unint64_t *)&qword_1016725F0);
  id v34 = v25;
  id v35 = v27;
  id v36 = v31;
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v38 = [v33 initWithArrangedSubviews:isa];

  id v39 = [v36 widthAnchor];
  id v40 = [v34 widthAnchor];
  id v41 = [v39 constraintEqualToAnchor:v40];

  [v41 setActive:1];
  (*(void (**)(char *, uint64_t))(v7 + 8))(v14, v45);
  return v38;
}

void sub_100ACE870()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    uint64_t v2 = (char *)objc_retain(*(id *)(Strong
                                   + OBJC_IVAR____TtC8Freeform55CRLiOSMiniFormatterTextEditingColorPickerViewController_builder));

    uint64_t v3 = &v2[OBJC_IVAR____TtC8Freeform26CRLiOSMiniFormatterBuilder_presenter];
    uint64_t v4 = swift_unknownObjectWeakLoadStrong();
    uint64_t v5 = *((void *)v3 + 2);

    if (v4)
    {
      uint64_t ObjectType = swift_getObjectType();
      (*(void (**)(uint64_t, uint64_t))(v5 + 56))(ObjectType, v5);
      swift_unknownObjectRelease();
    }
  }
}

id sub_100ACE97C()
{
  return sub_100ACE994(type metadata accessor for CRLiOSMiniFormatterTextEditingColorPickerViewController);
}

id sub_100ACE994(uint64_t (*a1)(void))
{
  v3.receiver = v1;
  v3.super_class = (Class)a1();
  [super dealloc];
}

uint64_t type metadata accessor for CRLiOSMiniFormatterTextEditingColorPickerViewController()
{
  return self;
}

uint64_t sub_100ACEA50(uint64_t a1, uint64_t a2)
{
  return sub_100ACD1B8(a1, a2) & 1;
}

unint64_t sub_100ACEA84()
{
  uint64_t v1 = *(void **)(*(void *)(*v0
                            + OBJC_IVAR____TtC8Freeform55CRLiOSMiniFormatterTextEditingColorPickerViewController_builder)
                + OBJC_IVAR____TtC8Freeform26CRLiOSMiniFormatterBuilder_element);
  if (([v1 options] & 0x10) != 0) {
    return 1;
  }
  else {
    return ((unint64_t)[v1 options] >> 19) & 1;
  }
}

void sub_100ACEAEC()
{
}

double *sub_100ACEB10@<X0>(int64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  int64_t v7 = a1 + a3;
  if (__OFADD__(a1, a3))
  {
    __break(1u);
LABEL_32:
    if (v5 < 0) {
      uint64_t v8 = v5;
    }
    else {
      uint64_t v8 = a4;
    }
    swift_bridgeObjectRetain();
    int64_t v9 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v9 >= v7) {
      int64_t v9 = v7;
    }
    if (v9 < v4) {
      goto LABEL_43;
    }
    swift_bridgeObjectRetain();
    uint64_t v8 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v8 >= v4) {
      goto LABEL_8;
    }
LABEL_39:
    __break(1u);
    goto LABEL_40;
  }
  uint64_t v5 = a2;
  uint64_t v4 = a1;
  a4 = a2 & 0xFFFFFFFFFFFFFF8;
  uint64_t v6 = a2 >> 62;
  if (a2 >> 62) {
    goto LABEL_32;
  }
  uint64_t v8 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v8 >= v7) {
    int64_t v9 = a1 + a3;
  }
  else {
    int64_t v9 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (v9 < a1) {
    goto LABEL_43;
  }
  if (v8 < a1) {
    goto LABEL_39;
  }
LABEL_8:
  if (v4 < 0)
  {
LABEL_40:
    __break(1u);
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v8 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v8 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (v8 < v9) {
    goto LABEL_41;
  }
  if (v9 < 0)
  {
LABEL_42:
    __break(1u);
LABEL_43:
    __break(1u);
    goto LABEL_44;
  }
  if ((v5 & 0xC000000000000001) != 0 && v9 != v4)
  {
    if (v9 > (unint64_t)v4)
    {
      sub_10050BF48(0, (unint64_t *)&unk_101672590);
      Swift::Int v10 = v4;
      do
      {
        Swift::Int v11 = v10 + 1;
        _ArrayBuffer._typeCheckSlowPath(_:)(v10);
        Swift::Int v10 = v11;
      }
      while (v9 != v11);
      goto LABEL_19;
    }
LABEL_44:
    __break(1u);
LABEL_45:
    __break(1u);
    goto LABEL_46;
  }
LABEL_19:
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v8 = _CocoaArrayWrapper.subscript.getter();
    uint64_t v6 = v12;
    uint64_t v4 = v13;
    int64_t v9 = v14;
    swift_bridgeObjectRelease();
    if (v9) {
      goto LABEL_24;
    }
LABEL_23:
    id v15 = sub_1006B9810(v8, v6, v4, v9);
    goto LABEL_30;
  }
  uint64_t v8 = v5 & 0xFFFFFFFFFFFFFF8;
  uint64_t v6 = (v5 & 0xFFFFFFFFFFFFFF8) + 32;
  int64_t v9 = (2 * v9) | 1;
  swift_bridgeObjectRetain();
  if ((v9 & 1) == 0) {
    goto LABEL_23;
  }
LABEL_24:
  type metadata accessor for __ContiguousArrayStorageBase();
  swift_unknownObjectRetain_n();
  NSString v16 = (double *)swift_dynamicCastClass();
  if (!v16)
  {
    swift_unknownObjectRelease();
    NSString v16 = _swiftEmptyArrayStorage;
  }
  uint64_t v17 = *((void *)v16 + 2);
  swift_release();
  if (__OFSUB__((unint64_t)v9 >> 1, v4)) {
    goto LABEL_45;
  }
  if (v17 != ((unint64_t)v9 >> 1) - v4)
  {
LABEL_46:
    swift_unknownObjectRelease();
    goto LABEL_23;
  }
  id v15 = (double *)swift_dynamicCastClass();
  if (!v15)
  {
    swift_unknownObjectRelease();
    id v15 = _swiftEmptyArrayStorage;
  }
LABEL_30:
  swift_unknownObjectRelease();
  return v15;
}

id sub_100ACED98(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, void *a5, void *a6, char a7, char a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, char a13)
{
  id v15 = &v13[OBJC_IVAR____TtC8Freeform38CRLiOSMiniFormatterColorPaletteBuilder_fullColorPalette];
  uint64_t v16 = qword_10166F8A0;
  uint64_t v17 = v13;
  if (v16 != -1) {
    swift_once();
  }
  uint64_t v18 = qword_10171B7E0;
  *(_OWORD *)id v15 = xmmword_10171B7D0;
  *((void *)v15 + 2) = v18;
  uint64_t v19 = &v17[OBJC_IVAR____TtC8Freeform38CRLiOSMiniFormatterColorPaletteBuilder_stickyColorPalette];
  uint64_t v20 = qword_10166F8A8;
  swift_bridgeObjectRetain();
  if (v20 != -1) {
    swift_once();
  }
  uint64_t v22 = qword_10171B800;
  *(_OWORD *)uint64_t v19 = xmmword_10171B7F0;
  *((void *)v19 + 2) = v22;
  uint64_t v23 = &v17[OBJC_IVAR____TtC8Freeform38CRLiOSMiniFormatterColorPaletteBuilder_singleRowPalette];
  uint64_t v24 = qword_10166F8B0;
  swift_bridgeObjectRetain();
  if (v24 != -1) {
    swift_once();
  }
  uint64_t v25 = qword_10171B820;
  *(_OWORD *)uint64_t v23 = xmmword_10171B810;
  *((void *)v23 + 2) = v25;
  double v26 = (char *)objc_allocWithZone((Class)type metadata accessor for CRLMiniFormatterShapeFillDataProvider());
  *(void *)&v26[OBJC_IVAR____TtC8Freeform28CRLMiniFormatterDataProvider_editorController] = a5;
  id v27 = (objc_class *)type metadata accessor for CRLMiniFormatterDataProvider();
  v45.receiver = v26;
  v45.super_class = v27;
  swift_bridgeObjectRetain();
  id v28 = a5;
  *(void *)&v17[OBJC_IVAR____TtC8Freeform38CRLiOSMiniFormatterColorPaletteBuilder_shapeFillDataProvider] = [v45 init];
  NSString v29 = (char *)objc_allocWithZone((Class)type metadata accessor for CRLMiniFormatterStrokeDataProvider());
  id v30 = &v29[OBJC_IVAR____TtC8Freeform34CRLMiniFormatterStrokeDataProvider_strokeChangingState];
  *(void *)id v30 = 0;
  v30[8] = 1;
  *(void *)&v29[OBJC_IVAR____TtC8Freeform28CRLMiniFormatterDataProvider_editorController] = v28;
  v44.receiver = v29;
  v44.super_class = v27;
  id v31 = v28;
  *(void *)&v17[OBJC_IVAR____TtC8Freeform38CRLiOSMiniFormatterColorPaletteBuilder_strokeDataProvider] = [super init];
  uint64_t v32 = (char *)objc_allocWithZone((Class)type metadata accessor for CRLMiniFormatterTextDataProvider());
  *(void *)&v32[OBJC_IVAR____TtC8Freeform28CRLMiniFormatterDataProvider_editorController] = v31;
  v43.receiver = v32;
  v43.super_class = v27;
  id v33 = v31;
  *(void *)&v17[OBJC_IVAR____TtC8Freeform38CRLiOSMiniFormatterColorPaletteBuilder_textDataProvider] = [v43 init];
  v17[OBJC_IVAR____TtC8Freeform38CRLiOSMiniFormatterColorPaletteBuilder_showMoreOptionsButton] = a7 & 1;
  v17[OBJC_IVAR____TtC8Freeform38CRLiOSMiniFormatterColorPaletteBuilder_showHeaderView] = a8 & 1;
  id v34 = &v17[OBJC_IVAR____TtC8Freeform38CRLiOSMiniFormatterColorPaletteBuilder_headerTitle];
  *(void *)id v34 = a9;
  *((void *)v34 + 1) = a10;
  if (a12)
  {
    if (qword_10166EB58 != -1) {
      swift_once();
    }
    a11 = qword_101719DD8;
  }
  *(void *)&v17[OBJC_IVAR____TtC8Freeform38CRLiOSMiniFormatterColorPaletteBuilder_rowSpacing] = a11;
  v17[OBJC_IVAR____TtC8Freeform38CRLiOSMiniFormatterColorPaletteBuilder_isEditingText] = a13 & 1;

  return sub_100521CB4(a1, a2, a3, a4, v33, a6);
}

UIImage *sub_100ACF0B8(uint64_t a1)
{
  NSString v2 = String._bridgeToObjectiveC()();
  objc_super v3 = self;
  id v4 = [v3 imageNamed:v2];

  if (!v4) {
    return 0;
  }
  NSString v5 = String._bridgeToObjectiveC()();
  id v6 = [v3 imageNamed:v5];

  if (v6
    && (id v7 = [v6 imageWithTintColor:a1 renderingMode:1],
        v6,
        v7))
  {
    uint64_t v8 = sub_100A55ED8(v7);

    id v4 = v7;
  }
  else
  {
    uint64_t v8 = 0;
  }

  return v8;
}

UIImage *sub_100ACF1DC(uint64_t a1, uint64_t a2, SEL *a3)
{
  NSString v4 = String._bridgeToObjectiveC()();
  NSString v5 = self;
  id v6 = (UIImage *)[v5 imageNamed:v4];

  if (v6)
  {
    id v7 = (UIImage *)[self *a3];
    NSString v8 = String._bridgeToObjectiveC()();
    int64_t v9 = (UIImage *)[v5 imageNamed:v8];

    if (v9)
    {
      Swift::Int v10 = [(UIImage *)v9 imageWithTintColor:v7 renderingMode:1];

      if (!v10)
      {
        int64_t v9 = 0;
        goto LABEL_8;
      }
      int64_t v9 = sub_100A55ED8(v10);
      id v7 = v10;
    }

    id v6 = v7;
LABEL_8:

    return v9;
  }
  return 0;
}

double *sub_100ACF30C(uint64_t a1, void *a2, char a3, void *a4)
{
  uint64_t v5 = v4;
  uint64_t v7 = *(void *)(a1 + 16);
  uint64_t result = _swiftEmptyArrayStorage;
  if (v7)
  {
    uint64_t v19 = _swiftEmptyArrayStorage;
    specialized ContiguousArray.reserveCapacity(_:)();
    uint64_t v12 = (unsigned __int8 *)(a1 + 40);
    char v13 = a3 & 1;
    while (1)
    {
      int64_t v14 = (void *)*((void *)v12 - 1);
      unsigned __int8 v15 = *v12;
      uint64_t v16 = v14;
      unsigned __int8 v17 = v15;
      sub_1007A0914(v14, v15);
      sub_100ACA6A4((uint64_t)&v16, a2, v13, a4, &v18);
      if (v5) {
        break;
      }
      uint64_t v5 = 0;
      v12 += 16;
      sub_1007A0938(v14, v15);
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
      if (!--v7) {
        return v19;
      }
    }
    sub_1007A0938(v14, v15);
    return (double *)swift_release();
  }
  return result;
}

void sub_100ACF448()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform55CRLiOSMiniFormatterTextEditingColorPickerViewController_colorPicker);
  NSString v2 = (void *)sub_100ACCC24();
  if (v2 == (void *)1) {
    goto LABEL_7;
  }
  uint64_t v4 = v2;
  if (v3) {
    goto LABEL_6;
  }
  if (v2)
  {
    id v5 = [v2 referenceColor];
    if (v5)
    {
      id v6 = v5;
      id v8 = [v5 UIColor];
      sub_100522AD8(v4);

      id v7 = v8;
      goto LABEL_8;
    }
LABEL_6:
    sub_100522AD8(v4);
  }
LABEL_7:
  id v7 = 0;
LABEL_8:
  id v9 = v7;
  [v1 setSelectedColor:];
}

uint64_t sub_100ACF530()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_100ACF568()
{
}

uint64_t sub_100ACF57C()
{
  return 8;
}

uint64_t sub_100ACF588()
{
  return swift_release();
}

uint64_t sub_100ACF590(void *a1, void *a2)
{
  *a2 = *a1;
  return swift_retain();
}

void *sub_100ACF5A4(void *result, void *a2)
{
  *a2 = *result;
  return result;
}

uint64_t sub_100ACF5B0(uint64_t a1, char a2)
{
  uint64_t v5 = v2 + OBJC_IVAR____TtC8Freeform26CRLiOSMiniFormatterBuilder_presenter;
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (!result) {
    return result;
  }
  uint64_t v7 = *(void *)(v5 + 16);
  uint64_t ObjectType = swift_getObjectType();
  char v9 = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 96))(ObjectType, v7);
  if (a2)
  {
    if ((v9 & 1) == 0) {
      (*(void (**)(uint64_t, uint64_t))(v7 + 80))(ObjectType, v7);
    }
    goto LABEL_8;
  }
  if ((v9 & 1) == 0)
  {
LABEL_8:
    id v10 = [objc_allocWithZone((Class)CRLColorFill) initWithUIColor:a1];
    sub_100ACC824(v10);

    goto LABEL_9;
  }
  (*(void (**)(uint64_t, uint64_t))(v7 + 88))(ObjectType, v7);
LABEL_9:

  return swift_unknownObjectRelease();
}

uint64_t sub_100ACF6E4()
{
  swift_unknownObjectRelease();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100ACF71C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100ACF72C()
{
  return swift_release();
}

uint64_t sub_100ACF734()
{
  return _swift_deallocObject(v0, 24, 7);
}

void sub_100ACF76C()
{
}

void sub_100ACF794()
{
}

uint64_t sub_100ACF7B8()
{
  sub_1007A0938(*(id *)(v0 + 16), *(unsigned char *)(v0 + 24));

  return _swift_deallocObject(v0, 40, 7);
}

void sub_100ACF7FC(uint64_t a1)
{
  sub_100ACAA08(a1, *(void **)(v1 + 16), *(unsigned char *)(v1 + 24));
}

uint64_t sub_100ACF80C()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100ACF81C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100ACB5C4(a1, a2);
}

void sub_100ACF824()
{
}

void sub_100ACF82C()
{
}

uint64_t sub_100ACF8A0()
{
  return type metadata accessor for CRLCanvasDotGridBackgroundView();
}

void sub_100ACFAF0(long double a1)
{
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    char v3 = Strong;
    [Strong viewScale];
    double v5 = v4;
  }
  else
  {
    double v5 = 1.0;
  }
  -[CRLCanvasDotGridBackground snapDistanceForViewScale:]_0(v5);
  fmod(a1, v6);
}

id sub_100ACFC04()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLCanvasDotGridBackground();
  return [super dealloc];
}

uint64_t type metadata accessor for CRLCanvasDotGridBackground()
{
  return self;
}

uint64_t sub_100ACFD68(void *a1)
{
  if (qword_10166EE60 != -1) {
    swift_once();
  }
  char v3 = (void *)qword_10171A478;
  sub_1005057FC((uint64_t *)&unk_10167BEF0);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_10117E810;
  *(void *)(v4 + 56) = type metadata accessor for CRLTextRange();
  *(void *)(v4 + 32) = a1;
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117E810;
  *(void *)(inited + 56) = sub_1005057FC((uint64_t *)&unk_10167C8C0);
  *(void *)(inited + 32) = v4;
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong)
  {
    id v35 = v3;
    id v36 = a1;
    swift_bridgeObjectRetain();
    goto LABEL_20;
  }
  uint64_t v7 = (void *)Strong;
  uint64_t v8 = *(void *)(v1 + OBJC_IVAR____TtC8Freeform25CRLWPTextSelectionManager_textStorage);
  id v9 = v3;
  id v10 = a1;
  swift_bridgeObjectRetain();
  id v11 = [v7 layoutForInfo:v8];

  if (!v11)
  {
LABEL_20:
    swift_release();
    unint64_t v37 = (unint64_t)_swiftEmptyArrayStorage;
    goto LABEL_21;
  }
  type metadata accessor for CRLWPLayout();
  uint64_t v12 = (void *)swift_dynamicCastClass();
  if (!v12)
  {

    goto LABEL_20;
  }
  char v13 = v12;
  if (([v12 layoutIsValid] & 1) == 0) {
    [v13 validate];
  }
  sub_1005057FC((uint64_t *)&unk_101676C10);
  uint64_t v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_101177E70;
  *(void *)(v14 + 32) = v10;
  unint64_t v41 = v14;
  specialized Array._endMutation()();
  unsigned __int8 v15 = (void *)qword_10171A478;
  id v16 = v10;
  id v17 = v15;
  swift_bridgeObjectRetain();
  sub_1006E976C((uint64_t)v13, v41, &v41);

  swift_bridgeObjectRelease_n();
  unint64_t v18 = v41;
  if (!(v41 >> 62))
  {
    uint64_t v19 = *(void *)((v41 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v19) {
      goto LABEL_10;
    }
LABEL_23:
    swift_bridgeObjectRelease();
    unint64_t v37 = (unint64_t)_swiftEmptyArrayStorage;
    if (!((unint64_t)_swiftEmptyArrayStorage >> 62))
    {
LABEL_18:
      swift_bridgeObjectRetain();
      dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
      sub_10069FE48();
      swift_release();

      swift_bridgeObjectRelease();
LABEL_21:

      swift_bridgeObjectRelease();
      return v37;
    }
LABEL_24:
    sub_10069FE48();
    swift_bridgeObjectRetain();
    uint64_t v38 = _bridgeCocoaArray<A>(_:)();
    swift_release();

    swift_bridgeObjectRelease_n();
    unint64_t v37 = v38;
    goto LABEL_21;
  }
  swift_bridgeObjectRetain();
  uint64_t v19 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (!v19) {
    goto LABEL_23;
  }
LABEL_10:
  id v39 = v3;
  unint64_t v41 = (unint64_t)_swiftEmptyArrayStorage;
  uint64_t result = specialized ContiguousArray.reserveCapacity(_:)();
  if ((v19 & 0x8000000000000000) == 0)
  {
    uint64_t v21 = 0;
    do
    {
      if ((v18 & 0xC000000000000001) != 0) {
        id v22 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v22 = *(id *)(v18 + 8 * v21 + 32);
      }
      uint64_t v23 = v22;
      ++v21;
      [v22 rect];
      [v13 convertNaturalRectToUnscaledCanvas];
      uint64_t v25 = v24;
      uint64_t v27 = v26;
      uint64_t v29 = v28;
      uint64_t v31 = v30;
      uint64_t v32 = (objc_class *)type metadata accessor for CRLTextSelectionRect();
      id v33 = objc_allocWithZone(v32);
      v33[OBJC_IVAR____TtC8Freeform20CRLTextSelectionRect__containsStart] = 0;
      v33[OBJC_IVAR____TtC8Freeform20CRLTextSelectionRect__containsEnd] = 0;
      id v34 = &v33[OBJC_IVAR____TtC8Freeform20CRLTextSelectionRect__rect];
      *id v34 = v25;
      v34[1] = v27;
      v34[2] = v29;
      v34[3] = v31;
      *(void *)&v33[OBJC_IVAR____TtC8Freeform20CRLTextSelectionRect__writingDirection] = 0;
      v40.receiver = v33;
      v40.super_class = v32;
      [super init];

      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
    }
    while (v19 != v21);
    unint64_t v37 = v41;
    swift_bridgeObjectRelease();
    char v3 = v39;
    if (!(v37 >> 62)) {
      goto LABEL_18;
    }
    goto LABEL_24;
  }
  __break(1u);
  return result;
}

void *sub_100AD025C(CGFloat a1, CGFloat a2)
{
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong) {
    return 0;
  }
  long double v6 = (char *)Strong;
  uint64_t result = (void *)swift_unknownObjectWeakLoadStrong();
  if (!result) {
    goto LABEL_12;
  }
  if (*(void *)(*(void *)&v6[OBJC_IVAR____TtC8Freeform11CRLWPEditor_enclosingShape]
                 + OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage))
  {
    uint64_t v8 = result;
    id v9 = [result layoutForInfo:];

    if (v9)
    {
      type metadata accessor for CRLWPLayout();
      id v10 = (void *)swift_dynamicCastClass();

      if (v10 && (id v11 = sub_10069C510()) != 0)
      {
        long double v6 = v11;
        if ([v11 isEmpty])
        {
          id v12 = [v6 start];
          double v13 = sub_100AD0D54(v12);
          double v15 = v14;
          double v17 = v16;
          double v19 = v18;

          [v10 convertNaturalRectFromUnscaledCanvas:v13, v15, v17, v19];
          CGFloat x = v30.origin.x;
          CGFloat y = v30.origin.y;
          CGFloat width = v30.size.width;
          CGFloat height = v30.size.height;
          double v24 = CGRectGetWidth(v30) + 5.0 + 5.0;
          if (v24 > *(double *)(v2 + OBJC_IVAR____TtC8Freeform25CRLWPTextSelectionManager_minimumCaretHitRegionWidth)) {
            double v25 = v24;
          }
          else {
            double v25 = *(double *)(v2 + OBJC_IVAR____TtC8Freeform25CRLWPTextSelectionManager_minimumCaretHitRegionWidth);
          }
          v31.origin.CGFloat x = x;
          v31.origin.CGFloat y = y;
          v31.size.CGFloat width = width;
          v31.size.CGFloat height = height;
          CGRectGetHeight(v31);
          double v26 = sub_100065738(x, y, width, height);
          v32.origin.CGFloat x = sub_10006402C(v26, v27, v25);
          v29.CGFloat x = a1;
          v29.CGFloat y = a2;
          BOOL v28 = CGRectContainsPoint(v32, v29);
        }
        else
        {
          BOOL v28 = 0;
        }
      }
      else
      {
        BOOL v28 = 0;
        long double v6 = v9;
      }
      goto LABEL_17;
    }
LABEL_12:
    BOOL v28 = 0;
LABEL_17:

    return (void *)v28;
  }
  __break(1u);
  return result;
}

double sub_100AD04D4(void *a1)
{
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (!Strong) {
    return CGRectInfinite.origin.x;
  }
  uint64_t v4 = Strong;
  id v5 = [Strong layoutForInfo:*(void *)(v1 + OBJC_IVAR____TtC8Freeform25CRLWPTextSelectionManager_textStorage)];

  if (!v5) {
    return CGRectInfinite.origin.x;
  }
  type metadata accessor for CRLWPLayout();
  long double v6 = (void *)swift_dynamicCastClass();
  if (!v6)
  {

    return CGRectInfinite.origin.x;
  }
  uint64_t v7 = v6;
  if (([v6 layoutIsValid] & 1) == 0) {
    [v7 validate];
  }
  if (qword_10166EE60 != -1) {
    swift_once();
  }
  id v8 = (id)qword_10171A478;
  id v9 = a1;
  sub_1006E8D20((char *)v7, v9, v13);

  [v7 convertNaturalRectToUnscaledCanvas:v13[0], v13[1], v13[2], v13[3]];
  double v11 = v10;

  return v11;
}

void sub_100AD0668(uint64_t a1, uint64_t a2, char **a3)
{
  uint64_t v4 = v3;
  char v56 = (char *)a1;
  uint64_t v7 = sub_1005057FC((uint64_t *)&unk_10167BC20);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7, v9);
  double v11 = (char *)&v46 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for CRLWPShapeItemCRDTData(0);
  __chkstk_darwin(v12, v13);
  double v15 = (char *)&v46 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for CRLWPStorageCRDTData(0);
  __chkstk_darwin(v16 - 8, v17);
  double v19 = (char *)&v46 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (!Strong) {
    return;
  }
  uint64_t v21 = Strong;
  uint64_t v54 = a3;
  uint64_t v55 = OBJC_IVAR____TtC8Freeform25CRLWPTextSelectionManager_textStorage;
  id v22 = [Strong layoutForInfo:*(void *)(v4 + OBJC_IVAR____TtC8Freeform25CRLWPTextSelectionManager_textStorage)];

  if (!v22) {
    return;
  }
  type metadata accessor for CRLWPLayout();
  uint64_t v23 = (void *)swift_dynamicCastClass();
  if (!v23)
  {

    return;
  }
  double v24 = v23;
  id v53 = v22;
  if (([v23 layoutIsValid] & 1) == 0) {
    [v24 validate];
  }
  if ((char *)NSNotFound.getter() == v56) {
    goto LABEL_9;
  }
  id v47 = (char *)v24;
  uint64_t v52 = a2;
  double v25 = *(char **)(v4 + v55);
  uint64_t v26 = *(void *)&v25[OBJC_IVAR____TtC8Freeform12CRLWPStorage_shapeItemData];
  if (!v26)
  {
    __break(1u);
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  (*(void (**)(void))(*(void *)v26 + 760))();
  sub_1005D3C94((uint64_t)&v15[*(int *)(v12 + 20)], (uint64_t)v19);
  id v51 = v25;
  sub_1005D3CF8((uint64_t)v15, type metadata accessor for CRLWPShapeItemCRDTData);
  int v49 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
  v49(v11, v19, v7);
  sub_1005D3CF8((uint64_t)v19, type metadata accessor for CRLWPStorageCRDTData);
  double v27 = (void *)CRAttributedString.attributedString.getter();
  BOOL v28 = *(void (**)(char *, uint64_t))(v8 + 8);
  uint64_t v50 = v8 + 8;
  char v48 = v28;
  v28(v11, v7);
  CGPoint v29 = (char *)[v27 length];

  if ((uint64_t)v29 < (uint64_t)v56)
  {
LABEL_9:

    return;
  }
  CGRect v30 = *(char **)(v4 + v55);
  uint64_t v31 = *(void *)&v30[OBJC_IVAR____TtC8Freeform12CRLWPStorage_shapeItemData];
  if (!v31) {
    goto LABEL_22;
  }
  id v51 = &v56[v52];
  (*(void (**)(void))(*(void *)v31 + 760))();
  sub_1005D3C94((uint64_t)&v15[*(int *)(v12 + 20)], (uint64_t)v19);
  uint64_t v46 = v30;
  sub_1005D3CF8((uint64_t)v15, type metadata accessor for CRLWPShapeItemCRDTData);
  v49(v11, v19, v7);
  sub_1005D3CF8((uint64_t)v19, type metadata accessor for CRLWPStorageCRDTData);
  CGRect v32 = (void *)CRAttributedString.attributedString.getter();
  v48(v11, v7);
  id v33 = (char *)[v32 length];

  uint64_t v34 = v52;
  id v35 = v56;
  if ((uint64_t)v33 < (uint64_t)v51)
  {
    id v36 = *(char **)(v4 + v55);
    uint64_t v37 = *(void *)&v36[OBJC_IVAR____TtC8Freeform12CRLWPStorage_shapeItemData];
    if (v37)
    {
      (*(void (**)(void))(*(void *)v37 + 760))();
      sub_1005D3C94((uint64_t)&v15[*(int *)(v12 + 20)], (uint64_t)v19);
      uint64_t v38 = v36;
      sub_1005D3CF8((uint64_t)v15, type metadata accessor for CRLWPShapeItemCRDTData);
      v49(v11, v19, v7);
      sub_1005D3CF8((uint64_t)v19, type metadata accessor for CRLWPStorageCRDTData);
      id v39 = (void *)CRAttributedString.attributedString.getter();
      v48(v11, v7);
      id v35 = (char *)[v39 length];

      uint64_t v34 = 0;
      goto LABEL_16;
    }
LABEL_23:
    __break(1u);
    return;
  }
LABEL_16:
  objc_super v40 = v54;
  if (v54)
  {
    char *v54 = v35;
    v40[1] = (char *)v34;
  }
  id v41 = objc_allocWithZone((Class)type metadata accessor for CRLTextRange());
  unsigned __int16 v42 = (void *)sub_1006CC83C((uint64_t)v56, v52);
  if (qword_10166EE60 != -1) {
    swift_once();
  }
  id v43 = (id)qword_10171A478;
  objc_super v44 = v42;
  objc_super v45 = v47;
  sub_1006E8D20(v47, v44, v57);

  [v45 convertNaturalRectToUnscaledCanvas:v57[0], v57[1], v57[2], v57[3]];
}

double sub_100AD0D54(void *a1)
{
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (!Strong) {
    return CGRectInfinite.origin.x;
  }
  uint64_t v4 = Strong;
  id v5 = [Strong layoutForInfo:*(void *)(v1 + OBJC_IVAR____TtC8Freeform25CRLWPTextSelectionManager_textStorage)];

  if (!v5) {
    return CGRectInfinite.origin.x;
  }
  type metadata accessor for CRLWPLayout();
  long double v6 = (void *)swift_dynamicCastClass();
  if (!v6)
  {

    return CGRectInfinite.origin.x;
  }
  uint64_t v7 = v6;
  if (([v6 layoutIsValid] & 1) == 0) {
    [v7 validate];
  }
  [v7 convertNaturalRectToUnscaledCanvas:sub_1006E95EC(a1)];
  double v9 = v8;

  return v9;
}

double sub_100AD0E80(void *a1, uint64_t a2, void *a3, double (*a4)(id))
{
  id v6 = a3;
  id v7 = a1;
  double v8 = a4(v6);

  return v8;
}

id sub_100AD0F00()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLWPTextSelectionManager_x();
  return [super dealloc];
}

uint64_t type metadata accessor for CRLWPTextSelectionManager_x()
{
  return self;
}

unint64_t sub_100AD0F58()
{
  _StringGuts.grow(_:)(35);
  swift_bridgeObjectRelease();
  type metadata accessor for URL();
  sub_100ADF7C0(&qword_10168E250, 255, (void (*)(uint64_t))&type metadata accessor for URL);
  v0._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v0);
  swift_bridgeObjectRelease();
  v1._countAndFlagsBits = 0x69666E6F63202C3ELL;
  v1._object = (void *)0xEB00000000203A67;
  String.append(_:)(v1);
  type metadata accessor for CRLUSDRendering.SceneRequest(0);
  v2._countAndFlagsBits = sub_100AD6110();
  String.append(_:)(v2);
  swift_bridgeObjectRelease();
  v3._countAndFlagsBits = 41;
  v3._object = (void *)0xE100000000000000;
  String.append(_:)(v3);
  return 0xD000000000000013;
}

uint64_t sub_100AD10A4()
{
  uint64_t result = 7107189;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x6D6B6F6F426C7275;
      break;
    case 2:
      uint64_t result = 0x72756769666E6F63;
      break;
    case 3:
      uint64_t result = 0x46746C7561666564;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_100AD114C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100AD9878(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_100AD1174(uint64_t a1)
{
  unint64_t v2 = sub_100ADE93C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100AD11B0(uint64_t a1)
{
  unint64_t v2 = sub_100ADE93C();

  return CodingKey.debugDescription.getter(a1, v2);
}

unint64_t sub_100AD11EC()
{
  unint64_t result = 0x4F466172656D6163;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x7461746E6569726FLL;
      break;
    case 2:
      unint64_t result = 0x724664656C616373;
      break;
    case 3:
      unint64_t result = 0xD000000000000011;
      break;
    case 4:
      unint64_t result = 0x73746E65746E6F63;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_100AD12C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100AD9A84(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_100AD12E8(uint64_t a1)
{
  unint64_t v2 = sub_100ADF420();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100AD1324(uint64_t a1)
{
  unint64_t v2 = sub_100ADF420();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100AD1360()
{
  uint64_t result = 0x6D696E4179616C70;
  switch(*v0)
  {
    case 1:
      uint64_t v2 = 0x416573756170;
      goto LABEL_5;
    case 2:
      uint64_t result = 0xD000000000000010;
      break;
    case 3:
      uint64_t v2 = 0x417465736572;
LABEL_5:
      uint64_t result = v2 & 0xFFFFFFFFFFFFLL | 0x696E000000000000;
      break;
    case 4:
      uint64_t result = 0x6D696E41706F7473;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_100AD141C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100AD9D08(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_100AD1444(uint64_t a1)
{
  unint64_t v2 = sub_100ADE9F4();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100AD1480(uint64_t a1)
{
  unint64_t v2 = sub_100ADE9F4();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100AD14BC(uint64_t a1)
{
  unint64_t v2 = sub_100ADEB44();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100AD14F8(uint64_t a1)
{
  unint64_t v2 = sub_100ADEB44();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100AD1534()
{
  if (*v0) {
    return 0x6150737472617473;
  }
  else {
    return 0xD000000000000012;
  }
}

uint64_t sub_100AD157C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100AD9F98(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_100AD15A4(uint64_t a1)
{
  unint64_t v2 = sub_100ADEB98();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100AD15E0(uint64_t a1)
{
  unint64_t v2 = sub_100ADEB98();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100AD161C(uint64_t a1)
{
  unint64_t v2 = sub_100ADEA9C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100AD1658(uint64_t a1)
{
  unint64_t v2 = sub_100ADEA9C();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100AD1694(uint64_t a1)
{
  unint64_t v2 = sub_100ADEAF0();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100AD16D0(uint64_t a1)
{
  unint64_t v2 = sub_100ADEAF0();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100AD170C(uint64_t a1)
{
  unint64_t v2 = sub_100ADEA48();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100AD1748(uint64_t a1)
{
  unint64_t v2 = sub_100ADEA48();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100AD1784()
{
  uint64_t result = 0x6465737561507369;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x656C706D6F437369;
      break;
    case 2:
      uint64_t result = 0x6E6979616C507369;
      break;
    case 3:
      uint64_t result = 0x6570706F74537369;
      break;
    case 4:
      uint64_t result = 0x6465657073;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_100AD183C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100ADA0A0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_100AD1864(uint64_t a1)
{
  unint64_t v2 = sub_100ADED90();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100AD18A0(uint64_t a1)
{
  unint64_t v2 = sub_100ADED90();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100AD18DC(uint64_t a1)
{
  unint64_t v2 = sub_100ADEC40();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100AD1918(uint64_t a1)
{
  unint64_t v2 = sub_100ADEC40();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100AD1954()
{
  if (*v0) {
    return 0x657669746361;
  }
  else {
    return 0x6576697463616E69;
  }
}

uint64_t sub_100AD198C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100ADA2D8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_100AD19B4(uint64_t a1)
{
  unint64_t v2 = sub_100ADEBEC();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100AD19F0(uint64_t a1)
{
  unint64_t v2 = sub_100ADEBEC();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100AD1A2C(uint64_t a1)
{
  unint64_t v2 = sub_100ADECE8();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100AD1A68(uint64_t a1)
{
  unint64_t v2 = sub_100ADECE8();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100AD1AA4()
{
  uint64_t result = 0x756F426C65646F6DLL;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x6F6974616D696E61;
      break;
    case 2:
      uint64_t result = 0x6956734977656976;
      break;
    case 3:
      uint64_t result = 0x617461646174656DLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_100AD1B4C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100ADA3C4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_100AD1B74(uint64_t a1)
{
  unint64_t v2 = sub_100ADF474();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100AD1BB0(uint64_t a1)
{
  unint64_t v2 = sub_100ADF474();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100AD1BEC()
{
  uint64_t result = 0x64656C6261736964;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x6574736575716572;
      break;
    case 2:
      uint64_t result = 0x676E6964616F6CLL;
      break;
    case 3:
      uint64_t result = 0x6E697265646E6572;
      break;
    case 4:
      uint64_t result = 0x726F727265;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_100AD1CA0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100ADA5C8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_100AD1CC8(uint64_t a1)
{
  unint64_t v2 = sub_100ADEDE4();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100AD1D04(uint64_t a1)
{
  unint64_t v2 = sub_100ADEDE4();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100AD1D40(uint64_t a1)
{
  unint64_t v2 = sub_100ADEFDC();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100AD1D7C(uint64_t a1)
{
  unint64_t v2 = sub_100ADEFDC();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100AD1DB8(uint64_t a1)
{
  unint64_t v2 = sub_100ADEE38();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100AD1DF4(uint64_t a1)
{
  unint64_t v2 = sub_100ADEE38();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100AD1E30(uint64_t a1)
{
  unint64_t v2 = sub_100ADEF34();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100AD1E6C(uint64_t a1)
{
  unint64_t v2 = sub_100ADEF34();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100AD1EA8(uint64_t a1)
{
  unint64_t v2 = sub_100ADEE8C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100AD1EE4(uint64_t a1)
{
  unint64_t v2 = sub_100ADEE8C();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100AD1F20(uint64_t a1)
{
  unint64_t v2 = sub_100ADEF88();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100AD1F5C(uint64_t a1)
{
  unint64_t v2 = sub_100ADEF88();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100AD1F98(uint64_t a1, uint64_t a2)
{
  sub_10076E5A4(a1, (uint64_t)v4);
  sub_10076E5A4(a2, (uint64_t)v5);
  return sub_100AD8F5C((uint64_t)v4, (uint64_t)v5) & 1;
}

uint64_t sub_100AD1FE4(uint64_t a1)
{
  unint64_t v2 = sub_100ADF378();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100AD2020(uint64_t a1)
{
  unint64_t v2 = sub_100ADF378();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100AD205C()
{
  uint64_t result = 0x7245676E69646F63;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x726F7272456C7275;
      break;
    case 2:
      uint64_t result = 0x45676E6964616F6CLL;
      break;
    case 3:
      uint64_t result = 0x7272456574617473;
      break;
    case 4:
      uint64_t result = 0x4574756F656D6974;
      break;
    case 5:
      uint64_t result = 0x6F69736E65747865;
      break;
    case 6:
      uint64_t result = 0x45636972656E6567;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_100AD2158@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100ADA7F0(a1, a2);
  *a3 = result;
  return result;
}

void sub_100AD2180(unsigned char *a1@<X8>)
{
  *a1 = 7;
}

uint64_t sub_100AD218C(uint64_t a1)
{
  unint64_t v2 = sub_100ADF0D8();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100AD21C8(uint64_t a1)
{
  unint64_t v2 = sub_100ADF0D8();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100AD2204(uint64_t a1)
{
  unint64_t v2 = sub_100ADF180();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100AD2240(uint64_t a1)
{
  unint64_t v2 = sub_100ADF180();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100AD227C(uint64_t a1)
{
  unint64_t v2 = sub_100ADF12C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100AD22B8(uint64_t a1)
{
  unint64_t v2 = sub_100ADF12C();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100AD22F4(uint64_t a1)
{
  unint64_t v2 = sub_100ADF2D0();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100AD2330(uint64_t a1)
{
  unint64_t v2 = sub_100ADF2D0();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100AD236C(uint64_t a1)
{
  unint64_t v2 = sub_100ADF27C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100AD23A8(uint64_t a1)
{
  unint64_t v2 = sub_100ADF27C();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100AD23E4(uint64_t a1)
{
  unint64_t v2 = sub_100ADF228();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100AD2420(uint64_t a1)
{
  unint64_t v2 = sub_100ADF228();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100AD245C(uint64_t a1)
{
  unint64_t v2 = sub_100ADF324();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100AD2498(uint64_t a1)
{
  unint64_t v2 = sub_100ADF324();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100AD24D4(uint64_t a1)
{
  unint64_t v2 = sub_100ADF6F8();

  return Error<>._domain.getter(a1, v2);
}

uint64_t sub_100AD2510(uint64_t a1)
{
  unint64_t v2 = sub_100ADF6F8();

  return Error<>._code.getter(a1, v2);
}

uint64_t sub_100AD254C(uint64_t a1, uint64_t a2)
{
  return sub_100AD8D30(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16), *(void *)a2, *(void *)(a2 + 8), *(unsigned char *)(a2 + 16));
}

uint64_t sub_100AD2568(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_1005057FC(&qword_10168FDF8);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5, v7);
  double v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10050F848(a1, a1[3]);
  sub_100ADE93C();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  LOBYTE(v17) = 0;
  type metadata accessor for URL();
  sub_100ADF7C0(&qword_101687A68, 255, (void (*)(uint64_t))&type metadata accessor for URL);
  KeyedEncodingContainer.encode<A>(_:forKey:)();
  if (!v2)
  {
    uint64_t v10 = (int *)type metadata accessor for CRLUSDRendering.SceneRequest(0);
    long long v17 = *(_OWORD *)(v3 + v10[5]);
    char v22 = 1;
    sub_10060D344();
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    uint64_t v11 = v3 + v10[6];
    uint64_t v12 = *(void *)(v11 + 64);
    LODWORD(v17) = *(_DWORD *)v11;
    long long v13 = *(_OWORD *)(v11 + 32);
    long long v18 = *(_OWORD *)(v11 + 16);
    long long v19 = v13;
    long long v20 = *(_OWORD *)(v11 + 48);
    uint64_t v21 = v12;
    char v22 = 2;
    sub_1007CCE50();
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    uint64_t v14 = (long long *)(v3 + v10[7]);
    long long v15 = v14[1];
    long long v17 = *v14;
    long long v18 = v15;
    char v22 = 3;
    type metadata accessor for CGRect(0);
    sub_100ADF7C0(&qword_1016772F0, 255, type metadata accessor for CGRect);
    KeyedEncodingContainer.encode<A>(_:forKey:)();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v5);
}

uint64_t sub_100AD2820@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v26 = a2;
  uint64_t v4 = type metadata accessor for URL();
  uint64_t v28 = *(void *)(v4 - 8);
  __chkstk_darwin(v4, v5);
  CGPoint v29 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_1005057FC(&qword_10168FDE8);
  uint64_t v27 = *(void *)(v30 - 8);
  __chkstk_darwin(v30, v7);
  double v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = (int *)type metadata accessor for CRLUSDRendering.SceneRequest(0);
  __chkstk_darwin(v10, v11);
  long long v13 = (char *)&v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10050F848(a1, a1[3]);
  sub_100ADE93C();
  uint64_t v31 = v9;
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v2) {
    return _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)a1);
  }
  double v25 = a1;
  uint64_t v14 = (uint64_t)v13;
  uint64_t v15 = v28;
  LOBYTE(v32) = 0;
  sub_100ADF7C0(&qword_101687A38, 255, (void (*)(uint64_t))&type metadata accessor for URL);
  uint64_t v16 = v29;
  uint64_t v17 = v30;
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  (*(void (**)(uint64_t, char *, uint64_t))(v15 + 32))(v14, v16, v4);
  char v37 = 1;
  sub_10060D184();
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  *(_OWORD *)(v14 + v10[5]) = v32;
  char v37 = 2;
  sub_1007CEF7C();
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  uint64_t v18 = v36;
  uint64_t v19 = v14 + v10[6];
  *(_DWORD *)uint64_t v19 = v32;
  long long v20 = v34;
  *(_OWORD *)(v19 + 16) = v33;
  *(_OWORD *)(v19 + 32) = v20;
  *(_OWORD *)(v19 + 48) = v35;
  *(void *)(v19 + 64) = v18;
  type metadata accessor for CGRect(0);
  char v37 = 3;
  sub_100ADF7C0(&qword_1016772A0, 255, type metadata accessor for CGRect);
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  (*(void (**)(char *, uint64_t))(v27 + 8))(v31, v17);
  uint64_t v21 = (_OWORD *)(v14 + v10[7]);
  long long v22 = v33;
  *uint64_t v21 = v32;
  v21[1] = v22;
  sub_100ADE990(v14, v26);
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v25);
  return sub_1007CF168(v14);
}

void sub_100AD2CA4(uint64_t a1, Swift::UInt64 a2, char a3)
{
  switch(a3)
  {
    case 2:
      Swift::UInt v3 = 1;
      goto LABEL_10;
    case 3:
      Swift::UInt v3 = 2;
      goto LABEL_10;
    case 4:
      Swift::UInt v3 = 3;
      goto LABEL_10;
    case 5:
      Swift::UInt v3 = 4;
LABEL_10:
      Hasher._combine(_:)(v3);
      break;
    default:
      Swift::UInt8 v5 = a3 & 1;
      Hasher._combine(_:)(0);
      if ((a2 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
        Swift::UInt64 v6 = a2;
      }
      else {
        Swift::UInt64 v6 = 0;
      }
      Hasher._combine(_:)(v6);
      Hasher._combine(_:)(v5);
      break;
  }
}

uint64_t sub_100AD2D54(void *a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t v43 = a2;
  int v50 = a3;
  uint64_t v4 = sub_1005057FC(&qword_10168FE60);
  uint64_t v45 = *(void *)(v4 - 8);
  uint64_t v46 = v4;
  __chkstk_darwin(v4, v5);
  objc_super v44 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1005057FC(&qword_10168FE68);
  uint64_t v41 = *(void *)(v7 - 8);
  uint64_t v42 = v7;
  __chkstk_darwin(v7, v8);
  objc_super v40 = (char *)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1005057FC(&qword_10168FE70);
  uint64_t v38 = *(void *)(v10 - 8);
  uint64_t v39 = v10;
  __chkstk_darwin(v10, v11);
  long long v13 = (char *)&v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1005057FC(&qword_10168FE78);
  uint64_t v37 = *(void *)(v14 - 8);
  __chkstk_darwin(v14, v15);
  uint64_t v17 = (char *)&v36 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_1005057FC(&qword_10168FE80);
  uint64_t v36 = *(void *)(v18 - 8);
  __chkstk_darwin(v18, v19);
  uint64_t v21 = (char *)&v36 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_1005057FC(&qword_10168FE88);
  uint64_t v23 = *(void *)(v22 - 8);
  uint64_t v47 = v22;
  uint64_t v48 = v23;
  __chkstk_darwin(v22, v24);
  uint64_t v26 = (char *)&v36 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10050F848(a1, a1[3]);
  sub_100ADE9F4();
  int v27 = v50;
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  switch(v27)
  {
    case 2:
      char v54 = 1;
      sub_100ADEB44();
      uint64_t v28 = v47;
      KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
      (*(void (**)(char *, uint64_t))(v37 + 8))(v17, v14);
      goto LABEL_10;
    case 3:
      char v55 = 2;
      sub_100ADEAF0();
      uint64_t v28 = v47;
      KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
      (*(void (**)(char *, uint64_t))(v38 + 8))(v13, v39);
      goto LABEL_10;
    case 4:
      char v56 = 3;
      sub_100ADEA9C();
      long long v33 = v40;
      uint64_t v28 = v47;
      KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
      uint64_t v35 = v41;
      uint64_t v34 = v42;
      goto LABEL_9;
    case 5:
      char v57 = 4;
      sub_100ADEA48();
      long long v33 = v44;
      uint64_t v28 = v47;
      KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
      uint64_t v35 = v45;
      uint64_t v34 = v46;
LABEL_9:
      (*(void (**)(char *, uint64_t))(v35 + 8))(v33, v34);
LABEL_10:
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v48 + 8))(v26, v28);
      break;
    default:
      uint64_t v29 = v36;
      char v53 = 0;
      sub_100ADEB98();
      uint64_t v30 = v47;
      KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
      char v52 = 0;
      uint64_t v31 = v49;
      KeyedEncodingContainer.encode(_:forKey:)();
      if (!v31)
      {
        char v51 = 1;
        KeyedEncodingContainer.encode(_:forKey:)();
      }
      (*(void (**)(char *, uint64_t))(v29 + 8))(v21, v18);
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v48 + 8))(v26, v30);
      break;
  }
  return result;
}

uint64_t sub_100AD3304(void *a1, uint64_t a2)
{
  uint64_t v4 = sub_1005057FC(&qword_10168FEC8);
  uint64_t v21 = *(void *)(v4 - 8);
  uint64_t v22 = v4;
  __chkstk_darwin(v4, v5);
  uint64_t v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1005057FC(&qword_10168FED0);
  uint64_t v19 = *(void *)(v8 - 8);
  uint64_t v20 = v8;
  __chkstk_darwin(v8, v9);
  uint64_t v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1005057FC(&qword_10168FED8);
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12, v14);
  uint64_t v16 = (char *)&v19 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10050F848(a1, a1[3]);
  sub_100ADEBEC();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  if (a2 == 2)
  {
    char v27 = 0;
    sub_100ADECE8();
    KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v11, v20);
  }
  else
  {
    char v28 = 1;
    sub_100ADEC40();
    KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
    __int16 v23 = a2 & 0x101;
    char v24 = BYTE2(a2) & 1;
    char v25 = BYTE3(a2) & 1;
    int v26 = HIDWORD(a2);
    sub_100ADED3C();
    uint64_t v18 = v22;
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    (*(void (**)(char *, uint64_t))(v21 + 8))(v7, v18);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v16, v12);
}

Swift::Int sub_100AD3620(uint64_t a1)
{
  Hasher.init(_seed:)();
  if (a1 == 2)
  {
    Hasher._combine(_:)(0);
  }
  else
  {
    Hasher._combine(_:)(1uLL);
    Hasher._combine(_:)(a1 & 1);
    Hasher._combine(_:)(BYTE1(a1) & 1);
    Hasher._combine(_:)(BYTE2(a1) & 1);
    Hasher._combine(_:)(BYTE3(a1) & 1);
    if ((a1 & 0x7FFFFF00000000) == 0 && (a1 & 0x7F80000000000000) == 0) {
      Swift::UInt32 v3 = 0;
    }
    else {
      Swift::UInt32 v3 = HIDWORD(a1);
    }
    Hasher._combine(_:)(v3);
  }
  return Hasher._finalize()();
}

void sub_100AD36D8(float a1, uint64_t a2, int a3)
{
  Hasher._combine(_:)(a3 & 1);
  Hasher._combine(_:)(BYTE1(a3) & 1);
  Hasher._combine(_:)(BYTE2(a3) & 1);
  Hasher._combine(_:)(HIBYTE(a3) & 1);
  if ((LODWORD(a1) & 0x7FFFFFFF) != 0) {
    Swift::UInt32 v5 = LODWORD(a1);
  }
  else {
    Swift::UInt32 v5 = 0;
  }
  Hasher._combine(_:)(v5);
}

uint64_t sub_100AD3738(void *a1)
{
  uint64_t v3 = sub_1005057FC(&qword_10168FEF8);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3, v5);
  uint64_t v7 = &v9[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10050F848(a1, a1[3]);
  sub_100ADED90();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  v9[15] = 0;
  KeyedEncodingContainer.encode(_:forKey:)();
  if (!v1)
  {
    v9[14] = 1;
    KeyedEncodingContainer.encode(_:forKey:)();
    v9[13] = 2;
    KeyedEncodingContainer.encode(_:forKey:)();
    v9[12] = 3;
    KeyedEncodingContainer.encode(_:forKey:)();
    v9[11] = 4;
    KeyedEncodingContainer.encode(_:forKey:)();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v7, v3);
}

Swift::Int sub_100AD3928(int a1, float a2)
{
  Hasher.init(_seed:)();
  Hasher._combine(_:)(a1 & 1);
  Hasher._combine(_:)(BYTE1(a1) & 1);
  Hasher._combine(_:)(BYTE2(a1) & 1);
  Hasher._combine(_:)(HIBYTE(a1) & 1);
  if ((LODWORD(a2) & 0x7FFFFFFF) != 0) {
    Swift::UInt32 v4 = LODWORD(a2);
  }
  else {
    Swift::UInt32 v4 = 0;
  }
  Hasher._combine(_:)(v4);
  return Hasher._finalize()();
}

void sub_100AD39B4(uint64_t a1)
{
  uint64_t v2 = v1;
  sub_10076E5A4((uint64_t)v2, (uint64_t)&v12);
  char v5 = v15;
  uint64_t v4 = v16;
  if (v15 >> 62)
  {
    if (v15 >> 62 == 1)
    {
      v15 &= 0x3FFFFFFFFFFFFFFFuLL;
      sub_100776EC0(&v12, &v17);
      Hasher._combine(_:)(4uLL);
      sub_100776EC0(&v17, &v18);
      switch(v19)
      {
        case 1:
          Swift::UInt v6 = 1;
          goto LABEL_22;
        case 2:
          Swift::UInt v6 = 2;
          goto LABEL_22;
        case 3:
          Swift::UInt v6 = 3;
          goto LABEL_22;
        case 4:
          sub_100ADE8E0(&v18, &v20);
          Hasher._combine(_:)(5uLL);
          sub_100ADE8E0(&v20, &v21);
          if (!v21.n128_u64[1]) {
            goto LABEL_20;
          }
          if (v21.n128_u64[1] == 1) {
            goto LABEL_13;
          }
          Hasher._combine(_:)(2uLL);
          goto LABEL_23;
        case 5:
          unint64_t v9 = v18.n128_u64[1];
          Hasher._combine(_:)(6uLL);
          if (v9)
          {
            Hasher._combine(_:)(1u);
            swift_bridgeObjectRetain();
            String.hash(into:)();
            sub_100ADE8A8(v2);
          }
          else
          {
            Hasher._combine(_:)(0);
          }
          return;
        case 6:
          Hasher._combine(_:)(4uLL);
          return;
        default:
          Swift::UInt v6 = 0;
LABEL_22:
          Hasher._combine(_:)(v6);
LABEL_23:
          String.hash(into:)();
          break;
      }
    }
    else if (v15 == 0x8000000000000000 {
           && (v16 | v12.n128_u64[0] | v14 | v13.n128_u64[1] | v13.n128_u64[0] | v12.n128_u64[1]) == 0)
    }
    {
LABEL_20:
      Hasher._combine(_:)(0);
    }
    else if (v15 == 0x8000000000000000 {
           && v12.n128_u64[0] == 1
    }
           && !(v13.n128_u64[1] | v14 | v13.n128_u64[0] | v12.n128_u64[1] | v16))
    {
LABEL_13:
      Hasher._combine(_:)(1uLL);
    }
    else
    {
      Hasher._combine(_:)(2uLL);
    }
  }
  else
  {
    v15 &= 0x3FFFFFFFFFFFFFFFuLL;
    __n128 v10 = v12;
    __n128 v11 = v13;
    uint64_t v7 = v14;
    Hasher._combine(_:)(3uLL);
    sub_100AD8B0C(v10);
    sub_100AD8B0C(v11);
    swift_bridgeObjectRetain();
    sub_100AD8900(a1, v7);
    swift_bridgeObjectRelease();
    Hasher._combine(_:)(v5 & 1);
    swift_bridgeObjectRetain();
    sub_100AD8738(a1, v4);
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_100AD3C40(void *a1)
{
  uint64_t v38 = sub_1005057FC(&qword_10168FF68);
  uint64_t v37 = *(void *)(v38 - 8);
  __chkstk_darwin(v38, v2);
  uint64_t v4 = (char *)&v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = sub_1005057FC(&qword_10168FF70);
  uint64_t v35 = *(void *)(v36 - 8);
  __chkstk_darwin(v36, v5);
  uint64_t v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = sub_1005057FC(&qword_10168FF78);
  uint64_t v32 = *(void *)(v33 - 8);
  __chkstk_darwin(v33, v8);
  uint64_t v31 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_1005057FC(&qword_10168FF80);
  uint64_t v29 = *(void *)(v30 - 8);
  __chkstk_darwin(v30, v10);
  __n128 v12 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1005057FC(&qword_10168FF88);
  uint64_t v34 = *(void *)(v13 - 8);
  __chkstk_darwin(v13, v14);
  uint64_t v16 = (char *)&v28 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = sub_1005057FC(&qword_10168FF90);
  uint64_t v40 = *(void *)(v41 - 8);
  __chkstk_darwin(v41, v17);
  char v19 = (char *)&v28 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10050F848(a1, a1[3]);
  sub_100ADEDE4();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  sub_10076E5A4(v39, (uint64_t)&v44);
  if (!(v46.n128_u64[1] >> 62))
  {
    v46.n128_u64[1] &= 0x3FFFFFFFFFFFFFFFuLL;
    __n128 v48 = v44;
    __n128 v49 = v45;
    uint64_t v51 = v47;
    __n128 v50 = v46;
    v42[0].n128_u8[0] = 3;
    sub_100ADEE8C();
    uint64_t v20 = v41;
    KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
    v42[0] = v48;
    v42[1] = v49;
    v42[2] = v50;
    uint64_t v43 = v51;
    sub_100ADF084();
    uint64_t v22 = v36;
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    (*(void (**)(char *, uint64_t))(v35 + 8))(v7, v22);
    return (*(uint64_t (**)(char *, uint64_t))(v40 + 8))(v19, v20);
  }
  if (v46.n128_u64[1] >> 62 == 1)
  {
    v46.n128_u64[1] &= 0x3FFFFFFFFFFFFFFFuLL;
    sub_100776EC0(&v44, &v52);
    v42[0].n128_u8[0] = 4;
    sub_100ADEE38();
    uint64_t v20 = v41;
    KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
    sub_100776EC0(&v52, v42);
    sub_100ADF030();
    uint64_t v21 = v38;
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    (*(void (**)(char *, uint64_t))(v37 + 8))(v4, v21);
    return (*(uint64_t (**)(char *, uint64_t))(v40 + 8))(v19, v20);
  }
  unint64_t v24 = v45.n128_u64[0] | v44.n128_u64[1];
  if (v46.n128_u64[1] != 0x8000000000000000 || v47 | v44.n128_u64[0] | v46.n128_u64[0] | v45.n128_u64[1] | v24)
  {
    if (v46.n128_u64[1] == 0x8000000000000000
      && v44.n128_u64[0] == 1
      && !(v45.n128_u64[1] | v46.n128_u64[0] | v24 | v47))
    {
      v42[0].n128_u8[0] = 1;
      sub_100ADEF88();
      uint64_t v26 = v41;
      KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
      (*(void (**)(char *, uint64_t))(v29 + 8))(v12, v30);
    }
    else
    {
      v42[0].n128_u8[0] = 2;
      sub_100ADEF34();
      char v27 = v31;
      uint64_t v26 = v41;
      KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
      (*(void (**)(char *, uint64_t))(v32 + 8))(v27, v33);
    }
    return (*(uint64_t (**)(char *, uint64_t))(v40 + 8))(v19, v26);
  }
  else
  {
    v42[0].n128_u8[0] = 0;
    sub_100ADEFDC();
    uint64_t v25 = v41;
    KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
    (*(void (**)(char *, uint64_t))(v34 + 8))(v16, v13);
    return (*(uint64_t (**)(char *, uint64_t))(v40 + 8))(v19, v25);
  }
}

void sub_100AD434C(uint64_t a1, uint64_t a2, unint64_t a3, char a4)
{
  switch(a4)
  {
    case 1:
      Swift::UInt v6 = 1;
      goto LABEL_9;
    case 2:
      goto LABEL_8;
    case 3:
      Swift::UInt v6 = 3;
      goto LABEL_9;
    case 4:
      Hasher._combine(_:)(5uLL);
      if (!a3)
      {
        Swift::UInt v7 = 0;
        goto LABEL_18;
      }
      if (a3 == 1)
      {
        Swift::UInt v7 = 1;
LABEL_18:
        Hasher._combine(_:)(v7);
        return;
      }
LABEL_8:
      Swift::UInt v6 = 2;
LABEL_9:
      Hasher._combine(_:)(v6);
      String.hash(into:)();
      return;
    case 5:
      Hasher._combine(_:)(6uLL);
      if (a3)
      {
        Hasher._combine(_:)(1u);
        swift_bridgeObjectRetain();
        String.hash(into:)();
        sub_1007676B8(a2, a3, 5);
      }
      else
      {
        Hasher._combine(_:)(0);
      }
      return;
    case 6:
      Swift::UInt v7 = 4;
      goto LABEL_18;
    default:
      Swift::UInt v6 = 0;
      goto LABEL_9;
  }
}

uint64_t sub_100AD4498(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v64 = a4;
  uint64_t v58 = a2;
  uint64_t v59 = a3;
  uint64_t v5 = sub_1005057FC(&qword_101690030);
  uint64_t v56 = *(void *)(v5 - 8);
  uint64_t v57 = v5;
  __chkstk_darwin(v5, v6);
  char v55 = (char *)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1005057FC(&qword_101690038);
  uint64_t v53 = *(void *)(v8 - 8);
  uint64_t v54 = v8;
  __chkstk_darwin(v8, v9);
  __n128 v52 = (char *)&v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1005057FC(&qword_101690040);
  uint64_t v50 = *(void *)(v11 - 8);
  uint64_t v51 = v11;
  __chkstk_darwin(v11, v12);
  __n128 v48 = (char *)&v42 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = sub_1005057FC(&qword_101690048);
  uint64_t v47 = *(void *)(v49 - 8);
  __chkstk_darwin(v49, v14);
  __n128 v46 = (char *)&v42 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_1005057FC(&qword_101690050);
  uint64_t v44 = *(void *)(v16 - 8);
  uint64_t v45 = v16;
  __chkstk_darwin(v16, v17);
  char v19 = (char *)&v42 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_1005057FC(&qword_101690058);
  uint64_t v43 = *(void *)(v20 - 8);
  __chkstk_darwin(v20, v21);
  __int16 v23 = (char *)&v42 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = sub_1005057FC(&qword_101690060);
  uint64_t v42 = *(void *)(v24 - 8);
  __chkstk_darwin(v24, v25);
  char v27 = (char *)&v42 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = sub_1005057FC(&qword_101690068);
  uint64_t v29 = *(void *)(v28 - 8);
  uint64_t v60 = v28;
  uint64_t v61 = v29;
  __chkstk_darwin(v28, v30);
  uint64_t v32 = (char *)&v42 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10050F848(a1, a1[3]);
  sub_100ADF0D8();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  switch((char)v64)
  {
    case 1:
      LOBYTE(v62) = 1;
      sub_100ADF324();
      uint64_t v33 = v60;
      KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
      KeyedEncodingContainer.encode(_:forKey:)();
      (*(void (**)(char *, uint64_t))(v43 + 8))(v23, v20);
      return (*(uint64_t (**)(char *, uint64_t))(v61 + 8))(v32, v33);
    case 2:
      LOBYTE(v62) = 2;
      sub_100ADF2D0();
      uint64_t v34 = v60;
      KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
      uint64_t v35 = v45;
      KeyedEncodingContainer.encode(_:forKey:)();
      (*(void (**)(char *, uint64_t))(v44 + 8))(v19, v35);
      return (*(uint64_t (**)(char *, uint64_t))(v61 + 8))(v32, v34);
    case 3:
      LOBYTE(v62) = 3;
      sub_100ADF27C();
      uint64_t v37 = v46;
      uint64_t v33 = v60;
      KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
      uint64_t v38 = v49;
      KeyedEncodingContainer.encode(_:forKey:)();
      uint64_t v39 = v47;
      goto LABEL_8;
    case 4:
      LOBYTE(v62) = 5;
      sub_100ADF180();
      uint64_t v37 = v52;
      uint64_t v33 = v60;
      KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
      uint64_t v62 = v58;
      uint64_t v63 = v59;
      sub_100ADF3CC();
      uint64_t v38 = v54;
      KeyedEncodingContainer.encode<A>(_:forKey:)();
      uint64_t v39 = v53;
      goto LABEL_8;
    case 5:
      LOBYTE(v62) = 6;
      sub_100ADF12C();
      uint64_t v37 = v55;
      uint64_t v33 = v60;
      KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
      uint64_t v38 = v57;
      KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
      uint64_t v39 = v56;
LABEL_8:
      (*(void (**)(char *, uint64_t))(v39 + 8))(v37, v38);
      return (*(uint64_t (**)(char *, uint64_t))(v61 + 8))(v32, v33);
    case 6:
      LOBYTE(v62) = 4;
      sub_100ADF228();
      uint64_t v40 = v48;
      uint64_t v41 = v60;
      KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
      (*(void (**)(char *, uint64_t))(v50 + 8))(v40, v51);
      return (*(uint64_t (**)(char *, uint64_t))(v61 + 8))(v32, v41);
    default:
      LOBYTE(v62) = 0;
      sub_100ADF378();
      uint64_t v33 = v60;
      KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
      KeyedEncodingContainer.encode(_:forKey:)();
      (*(void (**)(char *, uint64_t))(v42 + 8))(v27, v24);
      return (*(uint64_t (**)(char *, uint64_t))(v61 + 8))(v32, v33);
  }
}

Swift::Int sub_100AD4C68(uint64_t a1, unint64_t a2, char a3)
{
  Hasher.init(_seed:)();
  switch(a3)
  {
    case 1:
      Swift::UInt v6 = 1;
      goto LABEL_9;
    case 2:
      goto LABEL_8;
    case 3:
      Swift::UInt v6 = 3;
      goto LABEL_9;
    case 4:
      Hasher._combine(_:)(5uLL);
      if (!a2)
      {
        Swift::UInt v7 = 0;
        goto LABEL_14;
      }
      if (a2 == 1)
      {
        Swift::UInt v7 = 1;
LABEL_14:
        Hasher._combine(_:)(v7);
        return Hasher._finalize()();
      }
LABEL_8:
      Swift::UInt v6 = 2;
LABEL_9:
      Hasher._combine(_:)(v6);
      String.hash(into:)();
      return Hasher._finalize()();
    case 5:
      Hasher._combine(_:)(6uLL);
      if (a2)
      {
        Hasher._combine(_:)(1u);
        swift_bridgeObjectRetain();
        String.hash(into:)();
        sub_1007676B8(a1, a2, 5);
      }
      else
      {
        Hasher._combine(_:)(0);
      }
      return Hasher._finalize()();
    case 6:
      Swift::UInt v7 = 4;
      goto LABEL_14;
    default:
      Swift::UInt v6 = 0;
      goto LABEL_9;
  }
}

uint64_t sub_100AD4DCC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100AD2820(a1, a2);
}

uint64_t sub_100AD4DE4(void *a1)
{
  return sub_100AD2568(a1);
}

Swift::Int sub_100AD4DFC()
{
  Swift::UInt64 v1 = *(void *)v0;
  char v2 = *(unsigned char *)(v0 + 8);
  Hasher.init(_seed:)();
  sub_100AD2CA4((uint64_t)v4, v1, v2);
  return Hasher._finalize()();
}

void sub_100AD4E4C(uint64_t a1)
{
  sub_100AD2CA4(a1, *(void *)v1, *(unsigned char *)(v1 + 8));
}

Swift::Int sub_100AD4E58()
{
  Swift::UInt64 v1 = *(void *)v0;
  char v2 = *(unsigned char *)(v0 + 8);
  Hasher.init(_seed:)();
  sub_100AD2CA4((uint64_t)v4, v1, v2);
  return Hasher._finalize()();
}

uint64_t sub_100AD4EA4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = sub_100ADAB58(a1);
  if (!v2)
  {
    *(void *)a2 = result;
    *(unsigned char *)(a2 + 8) = v5;
  }
  return result;
}

uint64_t sub_100AD4ED4(void *a1)
{
  return sub_100AD2D54(a1, *(void *)v1, *(unsigned char *)(v1 + 8));
}

uint64_t sub_100AD4EF4(uint64_t a1, uint64_t a2)
{
  int v2 = *(unsigned __int8 *)(a2 + 8);
  switch(*(unsigned char *)(a1 + 8))
  {
    case 2:
      BOOL v3 = v2 == 2;
      goto LABEL_9;
    case 3:
      BOOL v3 = v2 == 3;
      goto LABEL_9;
    case 4:
      BOOL v3 = v2 == 4;
      goto LABEL_9;
    case 5:
      BOOL v3 = v2 == 5;
LABEL_9:
      char v5 = v3;
      uint64_t result = v5 & 1;
      break;
    default:
      if ((v2 - 2) >= 4 && *(double *)a1 == *(double *)a2) {
        uint64_t result = (((*(unsigned char *)(a1 + 8) & 1) == 0) ^ v2) & 1;
      }
      else {
        uint64_t result = 0;
      }
      break;
  }
  return result;
}

Swift::Int sub_100AD4F98()
{
  return sub_100AD3620(*v0);
}

void sub_100AD4FA0()
{
  uint64_t v1 = *v0;
  if (*v0 == 2)
  {
    Hasher._combine(_:)(0);
  }
  else
  {
    Hasher._combine(_:)(1uLL);
    Hasher._combine(_:)(v1 & 1);
    Hasher._combine(_:)(BYTE1(v1) & 1);
    Hasher._combine(_:)(BYTE2(v1) & 1);
    Hasher._combine(_:)(BYTE3(v1) & 1);
    if ((v1 & 0x7FFFFF00000000) == 0 && (v1 & 0x7F80000000000000) == 0) {
      Swift::UInt32 v3 = 0;
    }
    else {
      Swift::UInt32 v3 = HIDWORD(v1);
    }
    Hasher._combine(_:)(v3);
  }
}

Swift::Int sub_100AD5028()
{
  uint64_t v1 = *v0;
  Hasher.init(_seed:)();
  if (v1 == 2)
  {
    Hasher._combine(_:)(0);
  }
  else
  {
    Hasher._combine(_:)(1uLL);
    Hasher._combine(_:)(v1 & 1);
    Hasher._combine(_:)(BYTE1(v1) & 1);
    Hasher._combine(_:)(BYTE2(v1) & 1);
    Hasher._combine(_:)(BYTE3(v1) & 1);
    if ((v1 & 0x7FFFFF00000000) == 0 && (v1 & 0x7F80000000000000) == 0) {
      Swift::UInt32 v3 = 0;
    }
    else {
      Swift::UInt32 v3 = HIDWORD(v1);
    }
    Hasher._combine(_:)(v3);
  }
  return Hasher._finalize()();
}

unint64_t sub_100AD50DC@<X0>(void *a1@<X0>, unint64_t *a2@<X8>)
{
  unint64_t result = sub_100ADB388(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_100AD5108(void *a1)
{
  return sub_100AD3304(a1, *v1);
}

uint64_t sub_100AD5124(uint64_t *a1, void *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *a1;
  uint64_t result = *a2 == 2 && v3 == 2;
  if (v3 != 2 && *a2 != 2)
  {
    if (*((float *)&v2 + 1) == COERCE_FLOAT(HIDWORD(*a2))) {
      return (((v2 & 1) == 0) ^ *a2) & (((v2 & 0x100) == 0) ^ ((*(_DWORD *)a2 & 0x100u) >> 8)) & (((v2 & 0x10000) == 0) ^ WORD1(*a2)) & (((v2 & 0x1000000) == 0) ^ BYTE3(*a2));
    }
    else {
      return 0;
    }
  }
  return result;
}

Swift::Int sub_100AD51AC()
{
  if (*((unsigned char *)v0 + 1)) {
    int v1 = 256;
  }
  else {
    int v1 = 0;
  }
  int v2 = v1 | *(unsigned __int8 *)v0;
  if (*((unsigned char *)v0 + 2)) {
    int v3 = 0x10000;
  }
  else {
    int v3 = 0;
  }
  if (*((unsigned char *)v0 + 3)) {
    int v4 = 0x1000000;
  }
  else {
    int v4 = 0;
  }
  return sub_100AD3928(v2 | v3 | v4, v0[1]);
}

void sub_100AD51F4(uint64_t a1)
{
  if (*((unsigned char *)v1 + 1)) {
    int v2 = 256;
  }
  else {
    int v2 = 0;
  }
  int v3 = v2 | *(unsigned __int8 *)v1;
  if (*((unsigned char *)v1 + 2)) {
    int v4 = 0x10000;
  }
  else {
    int v4 = 0;
  }
  if (*((unsigned char *)v1 + 3)) {
    int v5 = 0x1000000;
  }
  else {
    int v5 = 0;
  }
  sub_100AD36D8(v1[1], a1, v3 | v4 | v5);
}

Swift::Int sub_100AD523C()
{
  Swift::UInt8 v1 = *(unsigned char *)v0;
  Swift::UInt8 v2 = *(unsigned char *)(v0 + 1);
  Swift::UInt8 v3 = *(unsigned char *)(v0 + 2);
  Swift::UInt8 v4 = *(unsigned char *)(v0 + 3);
  Swift::UInt32 v5 = *(_DWORD *)(v0 + 4);
  Hasher.init(_seed:)();
  Hasher._combine(_:)(v1);
  Hasher._combine(_:)(v2);
  Hasher._combine(_:)(v3);
  Hasher._combine(_:)(v4);
  if ((v5 & 0x7FFFFFFF) != 0) {
    Swift::UInt32 v6 = v5;
  }
  else {
    Swift::UInt32 v6 = 0;
  }
  Hasher._combine(_:)(v6);
  return Hasher._finalize()();
}

void sub_100AD52D4(void *a1@<X0>, uint64_t a2@<X8>)
{
  float v5 = sub_100ADB828(a1);
  if (!v2)
  {
    *(unsigned char *)a2 = v4 & 1;
    *(unsigned char *)(a2 + 1) = BYTE1(v4) & 1;
    *(unsigned char *)(a2 + 2) = BYTE2(v4) & 1;
    *(unsigned char *)(a2 + 3) = HIBYTE(v4) & 1;
    *(float *)(a2 + 4) = v5;
  }
}

uint64_t sub_100AD5320(void *a1)
{
  return sub_100AD3738(a1);
}

BOOL sub_100AD537C(float *a1, float *a2)
{
  BOOL result = 0;
  if (*(unsigned __int8 *)a1 == *(unsigned __int8 *)a2
    && ((*((unsigned __int8 *)a1 + 1) ^ *((unsigned __int8 *)a2 + 1)) & 1) == 0
    && ((*((unsigned __int8 *)a1 + 2) ^ *((unsigned __int8 *)a2 + 2)) & 1) == 0
    && ((*((unsigned __int8 *)a1 + 3) ^ *((unsigned __int8 *)a2 + 3)) & 1) == 0)
  {
    return a1[1] == a2[1];
  }
  return result;
}

Swift::Int sub_100AD53D8()
{
  sub_10076E5A4(v0, (uint64_t)v3);
  Hasher.init(_seed:)();
  sub_100AD39B4((uint64_t)v2);
  return Hasher._finalize()();
}

void sub_100AD5428(uint64_t a1)
{
  sub_10076E5A4(v1, (uint64_t)&v3);
  sub_100AD39B4(a1);
}

Swift::Int sub_100AD5468()
{
  sub_10076E5A4(v0, (uint64_t)v3);
  Hasher.init(_seed:)();
  sub_100AD39B4((uint64_t)v2);
  return Hasher._finalize()();
}

uint64_t sub_100AD54BC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = sub_100ADBA80(a1, v5);
  if (!v2) {
    return sub_10076E5A4((uint64_t)v5, a2);
  }
  return result;
}

uint64_t sub_100AD5504(void *a1)
{
  sub_10076E5A4(v1, (uint64_t)&v4);
  return sub_100AD3C40(a1);
}

Swift::Int sub_100AD5554()
{
  return sub_100AD4C68(*(void *)v0, *(void *)(v0 + 8), *(unsigned char *)(v0 + 16));
}

void sub_100AD5560(uint64_t a1)
{
  sub_100AD434C(a1, *(void *)v1, *(void *)(v1 + 8), *(unsigned char *)(v1 + 16));
}

Swift::Int sub_100AD556C()
{
  uint64_t v2 = *(void *)v0;
  unint64_t v1 = *(void *)(v0 + 8);
  uint64_t v3 = *(unsigned __int8 *)(v0 + 16);
  Hasher.init(_seed:)();
  switch(v3)
  {
    case 1:
      Swift::UInt v4 = 1;
      goto LABEL_9;
    case 2:
      goto LABEL_8;
    case 3:
      Swift::UInt v4 = 3;
      goto LABEL_9;
    case 4:
      Hasher._combine(_:)(5uLL);
      if (!v1)
      {
        Swift::UInt v5 = 0;
        goto LABEL_14;
      }
      if (v1 == 1)
      {
        Swift::UInt v5 = 1;
LABEL_14:
        Hasher._combine(_:)(v5);
        return Hasher._finalize()();
      }
LABEL_8:
      Swift::UInt v4 = 2;
LABEL_9:
      Hasher._combine(_:)(v4);
      String.hash(into:)();
      return Hasher._finalize()();
    case 5:
      Hasher._combine(_:)(6uLL);
      if (v1)
      {
        Hasher._combine(_:)(1u);
        swift_bridgeObjectRetain();
        String.hash(into:)();
        sub_1007676B8(v2, v1, 5);
      }
      else
      {
        Hasher._combine(_:)(0);
      }
      return Hasher._finalize()();
    case 6:
      Swift::UInt v5 = 4;
      goto LABEL_14;
    default:
      Swift::UInt v4 = 0;
      goto LABEL_9;
  }
}

uint64_t sub_100AD56C4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = sub_100ADC3E8(a1);
  if (!v2)
  {
    *(void *)a2 = result;
    *(void *)(a2 + 8) = v5;
    *(unsigned char *)(a2 + 16) = v6;
  }
  return result;
}

uint64_t sub_100AD56F4(void *a1)
{
  return sub_100AD4498(a1, *(void *)v1, *(void *)(v1 + 8), *(unsigned __int8 *)(v1 + 16));
}

void sub_100AD5714()
{
  if ((*(_DWORD *)v0 & 0x7FFFFFFF) != 0) {
    Swift::UInt32 v1 = *(_DWORD *)v0;
  }
  else {
    Swift::UInt32 v1 = 0;
  }
  Hasher._combine(_:)(v1);
  simd_quatf.hash(into:)();
  Swift::UInt64 v2 = *(void *)(v0 + 40);
  if ((*(void *)(v0 + 32) & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v3 = *(void *)(v0 + 32);
  }
  else {
    Swift::UInt64 v3 = 0;
  }
  Hasher._combine(_:)(v3);
  if ((v2 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v4 = v2;
  }
  else {
    Swift::UInt64 v4 = 0;
  }
  Hasher._combine(_:)(v4);
  Swift::UInt64 v5 = *(void *)(v0 + 56);
  if ((*(void *)(v0 + 48) & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v6 = *(void *)(v0 + 48);
  }
  else {
    Swift::UInt64 v6 = 0;
  }
  Hasher._combine(_:)(v6);
  if ((v5 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v7 = v5;
  }
  else {
    Swift::UInt64 v7 = 0;
  }
  Hasher._combine(_:)(v7);
  if ((*(void *)(v0 + 64) & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v8 = *(void *)(v0 + 64);
  }
  else {
    Swift::UInt64 v8 = 0;
  }
  Hasher._combine(_:)(v8);
}

uint64_t sub_100AD57A4(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_1005057FC(&qword_101690090);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5, v7);
  uint64_t v9 = (char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10050F848(a1, a1[3]);
  sub_100ADF420();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  LOBYTE(v13) = 0;
  KeyedEncodingContainer.encode(_:forKey:)();
  if (!v2)
  {
    long long v13 = *(_OWORD *)(v3 + 16);
    char v12 = 1;
    type metadata accessor for simd_quatf(0);
    sub_100ADF7C0(&qword_101690098, 255, type metadata accessor for simd_quatf);
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    long long v13 = *(_OWORD *)(v3 + 32);
    char v12 = 2;
    type metadata accessor for CGSize(0);
    sub_100ADF7C0(&qword_101677258, 255, type metadata accessor for CGSize);
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    long long v13 = *(_OWORD *)(v3 + 48);
    char v12 = 3;
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    *(void *)&long long v13 = *(void *)(v3 + 64);
    char v12 = 4;
    sub_10060D1D8();
    KeyedEncodingContainer.encode<A>(_:forKey:)();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v5);
}

Swift::Int sub_100AD5A50()
{
  return Hasher._finalize()();
}

Swift::Int sub_100AD5A94()
{
  return Hasher._finalize()();
}

__n128 sub_100AD5AD0@<Q0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_100ADCF8C(a1, (uint64_t)v6);
  if (!v2)
  {
    long long v5 = v6[3];
    *(_OWORD *)(a2 + 32) = v6[2];
    *(_OWORD *)(a2 + 48) = v5;
    *(void *)(a2 + 64) = v7;
    __n128 result = (__n128)v6[1];
    *(_OWORD *)a2 = v6[0];
    *(__n128 *)(a2 + 16) = result;
  }
  return result;
}

uint64_t sub_100AD5B1C(void *a1)
{
  return sub_100AD57A4(a1);
}

BOOL sub_100AD5B34(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a1 + 48);
  _OWORD v7[2] = *(_OWORD *)(a1 + 32);
  _OWORD v7[3] = v2;
  uint64_t v8 = *(void *)(a1 + 64);
  long long v3 = *(_OWORD *)(a1 + 16);
  v7[0] = *(_OWORD *)a1;
  v7[1] = v3;
  long long v4 = *(_OWORD *)(a2 + 48);
  _OWORD v9[2] = *(_OWORD *)(a2 + 32);
  v9[3] = v4;
  uint64_t v10 = *(void *)(a2 + 64);
  long long v5 = *(_OWORD *)(a2 + 16);
  v9[0] = *(_OWORD *)a2;
  v9[1] = v5;
  return sub_100AD8B70((uint64_t)v7, (uint64_t)v9);
}

uint64_t sub_100AD5B90(void *a1)
{
  long long v3 = v1;
  uint64_t v5 = sub_1005057FC(&qword_1016900D8);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5, v7);
  uint64_t v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10050F848(a1, a1[3]);
  sub_100ADF474();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  long long v10 = v3[1];
  long long v14 = *v3;
  long long v15 = v10;
  char v13 = 0;
  sub_100ADF570();
  KeyedEncodingContainer.encode<A>(_:forKey:)();
  if (!v2)
  {
    *(void *)&long long v14 = *((void *)v3 + 4);
    char v13 = 1;
    sub_1005057FC(&qword_1016900B8);
    sub_100ADF5C4(&qword_1016900E8, (void (*)(void))sub_100ADF640);
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    LOBYTE(v14) = 2;
    KeyedEncodingContainer.encode(_:forKey:)();
    *(void *)&long long v14 = *((void *)v3 + 6);
    char v13 = 3;
    sub_1005057FC(&qword_10167D908);
    sub_100ADF694(&qword_1016900F8);
    KeyedEncodingContainer.encode<A>(_:forKey:)();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v5);
}

Swift::Int sub_100AD5DFC()
{
  __n128 v5 = *v0;
  __n128 v6 = v0[1];
  uint64_t v1 = v0[2].n128_i64[0];
  Swift::UInt8 v2 = v0[2].n128_u8[8];
  uint64_t v3 = v0[3].n128_i64[0];
  Hasher.init(_seed:)();
  sub_100AD8B0C(v5);
  sub_100AD8B0C(v6);
  swift_bridgeObjectRetain();
  sub_100AD8900((uint64_t)v7, v1);
  swift_bridgeObjectRelease();
  Hasher._combine(_:)(v2);
  swift_bridgeObjectRetain();
  sub_100AD8738((uint64_t)v7, v3);
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

uint64_t sub_100AD5EB0(uint64_t a1)
{
  __n128 v7 = v1[1];
  uint64_t v3 = v1[2].n128_i64[0];
  Swift::UInt8 v4 = v1[2].n128_u8[8];
  uint64_t v5 = v1[3].n128_i64[0];
  sub_100AD8B0C(*v1);
  sub_100AD8B0C(v7);
  swift_bridgeObjectRetain();
  sub_100AD8900(a1, v3);
  swift_bridgeObjectRelease();
  Hasher._combine(_:)(v4);
  swift_bridgeObjectRetain();
  sub_100AD8738(a1, v5);

  return swift_bridgeObjectRelease();
}

Swift::Int sub_100AD5F5C()
{
  __n128 v5 = *v0;
  __n128 v6 = v0[1];
  uint64_t v1 = v0[2].n128_i64[0];
  Swift::UInt8 v2 = v0[2].n128_u8[8];
  uint64_t v3 = v0[3].n128_i64[0];
  Hasher.init(_seed:)();
  sub_100AD8B0C(v5);
  sub_100AD8B0C(v6);
  swift_bridgeObjectRetain();
  sub_100AD8900((uint64_t)v7, v1);
  swift_bridgeObjectRelease();
  Hasher._combine(_:)(v2);
  swift_bridgeObjectRetain();
  sub_100AD8738((uint64_t)v7, v3);
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

double sub_100AD600C@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_100ADD2B0(a1, (uint64_t)v6);
  if (!v2)
  {
    long long v5 = v6[1];
    *(_OWORD *)a2 = v6[0];
    *(_OWORD *)(a2 + 16) = v5;
    double result = *(double *)&v7;
    *(_OWORD *)(a2 + 32) = v7;
    *(void *)(a2 + 48) = v8;
  }
  return result;
}

uint64_t sub_100AD6058(void *a1)
{
  return sub_100AD5B90(a1);
}

uint64_t sub_100AD6070(__n128 *a1, __n128 *a2)
{
  uint64_t v2 = a1[2].n128_i64[0];
  int v3 = a1[2].n128_u8[8];
  uint64_t v4 = a1[3].n128_i64[0];
  uint64_t v5 = a2[2].n128_i64[0];
  int v6 = a2[2].n128_u8[8];
  uint64_t v7 = a2[3].n128_i64[0];
  if (!sub_100AD8E88(*a1, a1[1], *a2, a2[1]) || (sub_100ED65D8(v2, v5) & 1) == 0 || ((v3 ^ v6) & 1) != 0) {
    return 0;
  }

  return sub_100ED67F0(v4, v7);
}

uint64_t sub_100AD6110()
{
  _StringGuts.grow(_:)(66);
  v0._object = (void *)0x8000000101270060;
  v0._countAndFlagsBits = 0xD000000000000011;
  String.append(_:)(v0);
  Float.write<A>(to:)();
  v1._countAndFlagsBits = 0x746E6569726F202CLL;
  v1._object = (void *)0xEF203A6E6F697461;
  String.append(_:)(v1);
  sub_1005057FC(&qword_10168FAE8);
  sub_100523288(&qword_10168FDE0, &qword_10168FAE8);
  v2._countAndFlagsBits = SIMD.description.getter();
  String.append(_:)(v2);
  swift_bridgeObjectRelease();
  v3._countAndFlagsBits = 0x203A657A6973202CLL;
  v3._object = (void *)0xE800000000000000;
  String.append(_:)(v3);
  type metadata accessor for CGSize(0);
  _print_unlocked<A, B>(_:_:)();
  v4._object = (void *)0x8000000101270080;
  v4._countAndFlagsBits = 0xD000000000000011;
  String.append(_:)(v4);
  v5._countAndFlagsBits = Double.description.getter();
  String.append(_:)(v5);
  swift_bridgeObjectRelease();
  v6._countAndFlagsBits = 41;
  v6._object = (void *)0xE100000000000000;
  String.append(_:)(v6);
  return 0;
}

void sub_100AD62CC()
{
  sub_100AD9278(*(void *)(v0 + 32), *(unsigned char *)(v0 + 40));
}

uint64_t sub_100AD62DC(char *a1, char *a2)
{
  return sub_10094FAE4(*a1, *a2);
}

Swift::Int sub_100AD62E8()
{
  return Hasher._finalize()();
}

uint64_t sub_100AD6350()
{
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_100AD639C()
{
  return Hasher._finalize()();
}

uint64_t sub_100AD6400@<X0>(Swift::String *a1@<X0>, char *a2@<X8>)
{
  Swift::Int v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_101504870, *a1);
  uint64_t result = swift_bridgeObjectRelease();
  if (v3 == 1) {
    char v5 = 1;
  }
  else {
    char v5 = 2;
  }
  if (!v3) {
    char v5 = 0;
  }
  *a2 = v5;
  return result;
}

void sub_100AD6460(uint64_t *a1@<X8>)
{
  uint64_t v2 = 7235949;
  if (*v1) {
    uint64_t v2 = 7889261;
  }
  *a1 = v2;
  a1[1] = 0xE300000000000000;
}

uint64_t sub_100AD6488()
{
  if (*v0) {
    return 7889261;
  }
  else {
    return 7235949;
  }
}

uint64_t sub_100AD64AC@<X0>(Swift::String string@<0:X0, 8:X1>, char *a2@<X8>)
{
  object = string._object;
  v3._countAndFlagsBits = string._countAndFlagsBits;
  v3._object = object;
  Swift::Int v5 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_101504870, v3);
  uint64_t result = swift_bridgeObjectRelease();
  if (v5 == 1) {
    char v7 = 1;
  }
  else {
    char v7 = 2;
  }
  if (!v5) {
    char v7 = 0;
  }
  *a2 = v7;
  return result;
}

uint64_t sub_100AD6510(uint64_t a1)
{
  unint64_t v2 = sub_100AD6790();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100AD654C(uint64_t a1)
{
  unint64_t v2 = sub_100AD6790();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t BoundingBox.init(from:)(void *a1)
{
  uint64_t v3 = sub_1005057FC(&qword_10168FAB8);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3, v5);
  char v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10050F848(a1, a1[3]);
  sub_100AD6790();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (!v1)
  {
    sub_1005057FC(&qword_10168FAC8);
    LOBYTE(v14) = 0;
    sub_100523288(&qword_10168FAD0, &qword_10168FAC8);
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    long long v12 = v15;
    char v13 = 1;
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    BoundingBox.init(min:max:)();
    long long v11 = v9;
    long long v12 = v8;
    (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
  }
  return _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)a1);
}

unint64_t sub_100AD6790()
{
  unint64_t result = qword_10168FAC0;
  if (!qword_10168FAC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168FAC0);
  }
  return result;
}

uint64_t BoundingBox.encode(to:)(void *a1, __n128 a2, __n128 a3)
{
  __n128 v11 = a3;
  __n128 v12 = a2;
  uint64_t v5 = sub_1005057FC(&qword_10168FAD8);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5, v7);
  long long v9 = (char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10050F848(a1, a1[3]);
  sub_100AD6790();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  __n128 v13 = v12;
  char v14 = 0;
  sub_1005057FC(&qword_10168FAC8);
  sub_100523288(&qword_10168FAE0, &qword_10168FAC8);
  KeyedEncodingContainer.encode<A>(_:forKey:)();
  if (!v3)
  {
    __n128 v13 = v11;
    char v14 = 1;
    KeyedEncodingContainer.encode<A>(_:forKey:)();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v5);
}

uint64_t sub_100AD69A0@<X0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t result = BoundingBox.init(from:)(a1);
  if (!v2)
  {
    *a2 = v5;
    a2[1] = v6;
  }
  return result;
}

uint64_t sub_100AD69CC(void *a1)
{
  return BoundingBox.encode(to:)(a1, *v1, v1[1]);
}

uint64_t simd_quatf.init(from:)(void *a1)
{
  return sub_100ADD600(a1);
}

uint64_t simd_quatf.encode(to:)(void *a1)
{
  sub_10050F848(a1, a1[3]);
  dispatch thunk of Encoder.singleValueContainer()();
  sub_1005231B4((uint64_t)v2, v3);
  sub_1005057FC(&qword_10168FAE8);
  sub_100523288(&qword_10168FAF0, &qword_10168FAE8);
  dispatch thunk of SingleValueEncodingContainer.encode<A>(_:)();
  return _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v2);
}

uint64_t sub_100AD6ADC@<X0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t result = sub_100ADD600(a1);
  if (!v2) {
    *a2 = v5;
  }
  return result;
}

uint64_t sub_100AD6B08(void *a1)
{
  sub_10050F848(a1, a1[3]);
  dispatch thunk of Encoder.singleValueContainer()();
  sub_1005231B4((uint64_t)v2, v3);
  sub_1005057FC(&qword_10168FAE8);
  sub_100523288(&qword_10168FAF0, &qword_10168FAE8);
  dispatch thunk of SingleValueEncodingContainer.encode<A>(_:)();
  return _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v2);
}

double sub_100AD6BE8()
{
  type metadata accessor for CRLUSDRendering.TaskQueue();
  uint64_t v0 = swift_allocObject();
  swift_defaultActor_initialize();
  *(void *)(v0 + 128) = _swiftEmptyArrayStorage;
  *(void *)&double result = 1;
  *(_OWORD *)(v0 + 112) = xmmword_10118D2A0;
  qword_10168FAB0 = v0;
  return result;
}

uint64_t sub_100AD6C3C()
{
  *(void *)(v1 + 24) = v0;
  return _swift_task_switch(sub_100AD6C5C, 0, 0);
}

uint64_t sub_100AD6C5C()
{
  if (qword_10166F8C0 != -1) {
    swift_once();
  }
  uint64_t v1 = qword_10168FAB0;
  *(void *)(v0 + 32) = qword_10168FAB0;
  swift_retain();
  return _swift_task_switch(sub_100AD6D04, v1, 0);
}

uint64_t sub_100AD6D04()
{
  static Task<>.checkCancellation()();
  uint64_t v1 = *(void *)(v0 + 32);
  uint64_t v3 = sub_100ADF7C0(&qword_10167ED80, v2, (void (*)(uint64_t))type metadata accessor for CRLUSDRendering.TaskQueue);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 40) = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_100AD6E68;
  uint64_t v5 = *(void *)(v0 + 32);
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v4, v1, v3, 0xD000000000000013, 0x800000010124E2C0, sub_100776E90, v5, (char *)&type metadata for () + 8);
}

uint64_t sub_100AD6E68()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 48) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 32);
  if (v0) {
    uint64_t v4 = sub_100AD70A0;
  }
  else {
    uint64_t v4 = sub_100AD6F94;
  }
  return _swift_task_switch(v4, v3, 0);
}

uint64_t sub_100AD6F94()
{
  uint64_t v1 = v0[6];
  uint64_t v2 = static Task<>.checkCancellation()();
  if (v1)
  {
    uint64_t v5 = v0[4];
    uint64_t v6 = *(void *)(v5 + 120);
    BOOL v7 = __OFSUB__(v6, 1);
    uint64_t v8 = v6 - 1;
    if (v7)
    {
      __break(1u);
    }
    else
    {
      *(void *)(v5 + 120) = v8;
      sub_100AD7FDC();
      v0[9] = v1;
      uint64_t v2 = (uint64_t)sub_100AD72FC;
      uint64_t v3 = 0;
      uint64_t v4 = 0;
    }
    return _swift_task_switch(v2, v3, v4);
  }
  else
  {
    long long v9 = (void *)swift_task_alloc();
    v0[7] = v9;
    *long long v9 = v0;
    v9[1] = sub_100AD70C4;
    uint64_t v10 = v0[3];
    return sub_100AD7360((uint64_t)(v0 + 2), v10);
  }
}

uint64_t sub_100AD70A0()
{
  *(void *)(v0 + 72) = *(void *)(v0 + 48);
  return _swift_task_switch(sub_100AD72FC, 0, 0);
}

uint64_t sub_100AD70C4()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 64) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 32);
  if (v0) {
    uint64_t v4 = sub_100AD7278;
  }
  else {
    uint64_t v4 = sub_100AD71F0;
  }
  return _swift_task_switch(v4, v3, 0);
}

void sub_100AD71F0()
{
  uint64_t v1 = v0[4];
  uint64_t v2 = *(void *)(v1 + 120);
  BOOL v3 = __OFSUB__(v2, 1);
  uint64_t v4 = v2 - 1;
  if (v3)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v1 + 120) = v4;
    sub_100AD7FDC();
    swift_release();
    uint64_t v5 = v0[2];
    uint64_t v6 = (void (*)(uint64_t))v0[1];
    v6(v5);
  }
}

uint64_t sub_100AD7278(uint64_t (*a1)(), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3[4];
  uint64_t v5 = *(void *)(v4 + 120);
  BOOL v6 = __OFSUB__(v5, 1);
  uint64_t v7 = v5 - 1;
  if (v6)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v4 + 120) = v7;
    sub_100AD7FDC();
    v3[9] = v3[8];
    a1 = sub_100AD72FC;
    a2 = 0;
    a3 = 0;
  }
  return _swift_task_switch(a1, a2, a3);
}

uint64_t sub_100AD72FC()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100AD7360(uint64_t a1, uint64_t a2)
{
  v2[2] = a1;
  v2[3] = a2;
  v2[4] = type metadata accessor for MainActor();
  v2[5] = static MainActor.shared.getter();
  uint64_t v4 = dispatch thunk of Actor.unownedExecutor.getter();
  v2[6] = v4;
  v2[7] = v3;
  return _swift_task_switch(sub_100AD73FC, v4, v3);
}

uint64_t sub_100AD73FC()
{
  uint64_t v1 = v0[3];
  uint64_t v2 = type metadata accessor for Entity();
  uint64_t v3 = static Entity.loadAsync(contentsOf:withName:)();
  v0[8] = v3;
  *(void *)(v1 + OBJC_IVAR____TtCO8Freeform15CRLUSDRendering11LoadReceipt_entityLoadRequest) = v3;
  swift_retain();
  swift_release();
  uint64_t v4 = swift_allocObject();
  v0[9] = v4;
  *(unsigned char *)(v4 + 16) = 0;
  uint64_t v5 = static MainActor.shared.getter();
  v0[10] = v5;
  uint64_t v6 = (void *)swift_task_alloc();
  v0[11] = v6;
  _OWORD v6[2] = v1;
  v6[3] = v3;
  _OWORD v6[4] = v4;
  uint64_t v7 = (void *)swift_task_alloc();
  v0[12] = v7;
  *uint64_t v7 = v0;
  v7[1] = sub_100AD7584;
  uint64_t v8 = v0[2];
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v8, v5, &protocol witness table for MainActor, 0x746E45636E797361, 0xED00002928797469, sub_100ADF818, v6, v2);
}

uint64_t sub_100AD7584()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 104) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 48);
    uint64_t v4 = *(void *)(v2 + 56);
    uint64_t v5 = sub_100AD7720;
  }
  else
  {
    swift_release();
    swift_task_dealloc();
    uint64_t v3 = *(void *)(v2 + 48);
    uint64_t v4 = *(void *)(v2 + 56);
    uint64_t v5 = sub_100AD76A8;
  }
  return _swift_task_switch(v5, v3, v4);
}

uint64_t sub_100AD76A8()
{
  swift_release();
  swift_release();
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100AD7720()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100AD77B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v20 = a4;
  uint64_t v21 = a1;
  uint64_t v22 = a2;
  uint64_t v7 = sub_1005057FC(&qword_101690130);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  __n128 v11 = __chkstk_darwin(v7, v10);
  uint64_t v12 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = a3;
  __n128 v13 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v8 + 16);
  v13(v12, a1, v7, v11);
  unint64_t v14 = (*(unsigned __int8 *)(v8 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = a4;
  uint64_t v16 = *(void (**)(unint64_t, char *, uint64_t))(v8 + 32);
  v16(v15 + v14, v12, v7);
  ((void (*)(char *, uint64_t, uint64_t))v13)(v12, v21, v7);
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = v20;
  v16(v17 + v14, v12, v7);
  swift_retain_n();
  sub_1005057FC(&qword_101690138);
  sub_100523288(&qword_101690140, &qword_101690138);
  uint64_t v18 = Publisher.sink(receiveCompletion:receiveValue:)();
  swift_release();
  swift_release();
  *(void *)(v22 + OBJC_IVAR____TtCO8Freeform15CRLUSDRendering11LoadReceipt_cancellable) = v18;
  return swift_release();
}

uint64_t sub_100AD79F8(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = (unsigned char *)(a2 + 16);
  uint64_t result = swift_beginAccess();
  if ((*(unsigned char *)(a2 + 16) & 1) == 0)
  {
    swift_beginAccess();
    *uint64_t v4 = 1;
    if (v3)
    {
      swift_errorRetain();
    }
    else
    {
      sub_100776FC8();
      swift_allocError();
      *(void *)uint64_t v6 = 0xD00000000000001CLL;
      *(void *)(v6 + 8) = 0x80000001012700E0;
      *(unsigned char *)(v6 + 16) = 2;
    }
    sub_1005057FC(&qword_101690130);
    return CheckedContinuation.resume(throwing:)();
  }
  return result;
}

uint64_t sub_100AD7AF8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (unsigned char *)(a2 + 16);
  uint64_t result = swift_beginAccess();
  if ((*(unsigned char *)(a2 + 16) & 1) == 0)
  {
    swift_beginAccess();
    *uint64_t v3 = 1;
    swift_retain();
    sub_1005057FC(&qword_101690130);
    return CheckedContinuation.resume(returning:)();
  }
  return result;
}

uint64_t sub_100AD7B90()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtCO8Freeform15CRLUSDRendering11LoadReceipt_url;
  uint64_t v2 = type metadata accessor for URL();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_100AD7C50()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1005057FC(&qword_10167F0F0);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2, v4);
  uint64_t v6 = (char *)v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t v7 = *(void *)(v1 + 128);
  uint64_t v8 = *(void *)(v7 + 16);
  if (v8)
  {
    v16[2] = v1 + 128;
    v16[3] = v1;
    __n128 v11 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    uint64_t v10 = v3 + 16;
    uint64_t v9 = v11;
    uint64_t v12 = v7 + ((*(unsigned __int8 *)(v10 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 64));
    uint64_t v13 = *(void *)(v10 + 56);
    v16[1] = v7;
    swift_bridgeObjectRetain();
    do
    {
      v9(v6, v12, v2);
      type metadata accessor for CancellationError();
      sub_100ADF7C0(&qword_1016727E0, 255, (void (*)(uint64_t))&type metadata accessor for CancellationError);
      uint64_t v14 = swift_allocError();
      CancellationError.init()();
      v16[4] = v14;
      CheckedContinuation.resume(throwing:)();
      (*(void (**)(char *, uint64_t))(v10 - 8))(v6, v2);
      v12 += v13;
      --v8;
    }
    while (v8);
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_defaultActor_destroy();
  return swift_defaultActor_deallocate();
}

uint64_t sub_100AD7E38(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1005057FC(&qword_10167F0F0);
  uint64_t v5 = *(void *)(v4 - 8);
  __n128 v7 = __chkstk_darwin(v4, v6);
  uint64_t v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v5 + 16))(v9, a1, v4, v7);
  uint64_t v10 = (unint64_t *)(a2 + 128);
  swift_beginAccess();
  unint64_t v11 = *(void *)(a2 + 128);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)(a2 + 128) = v11;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    unint64_t v11 = sub_100F642B4(0, *(void *)(v11 + 16) + 1, 1, v11);
    unint64_t *v10 = v11;
  }
  unint64_t v14 = *(void *)(v11 + 16);
  unint64_t v13 = *(void *)(v11 + 24);
  if (v14 >= v13 >> 1)
  {
    unint64_t v11 = sub_100F642B4(v13 > 1, v14 + 1, 1, v11);
    unint64_t *v10 = v11;
  }
  *(void *)(v11 + 16) = v14 + 1;
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v11+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(void *)(v5 + 72) * v14, v9, v4);
  swift_endAccess();
  return sub_100AD7FDC();
}

uint64_t sub_100AD7FDC()
{
  uint64_t v1 = sub_1005057FC(&qword_10167F0F0);
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1, v3);
  uint64_t v5 = &v9[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t result = swift_beginAccess();
  if (*(void *)(*(void *)(v0 + 128) + 16))
  {
    uint64_t v7 = *(void *)(v0 + 120);
    if (v7 <= 0)
    {
      *(void *)(v0 + 120) = v7 + 1;
      uint64_t result = swift_beginAccess();
      uint64_t v8 = *(void *)(v0 + 128);
      if (*(void *)(v8 + 16))
      {
        (*(void (**)(unsigned char *, unint64_t, uint64_t))(v2 + 16))(v5, v8 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80)), v1);
        sub_100F4D994(0, 1);
        swift_endAccess();
        CheckedContinuation.resume(returning:)();
        return (*(uint64_t (**)(unsigned char *, uint64_t))(v2 + 8))(v5, v1);
      }
      else
      {
        __break(1u);
      }
    }
  }
  return result;
}

unint64_t sub_100AD8150()
{
  if (qword_10166F250 != -1) {
    swift_once();
  }
  sub_100ADF030();
  uint64_t v0 = dispatch thunk of JSONEncoder.encode<A>(_:)();
  uint64_t v2 = v1;
  sub_1005057FC(&qword_10168B3D0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117E810;
  *(void *)(inited + 32) = 0xD000000000000026;
  *(void *)(inited + 40) = 0x8000000101270010;
  *(void *)(inited + 72) = &type metadata for Data;
  *(void *)(inited + 48) = v0;
  *(void *)(inited + 56) = v2;
  return sub_100A39A60(inited);
}

unint64_t sub_100AD825C()
{
  return sub_100AD8150();
}

uint64_t sub_100AD8268()
{
  return sub_100ADF74C(*(uint64_t (**)(void))(v0 + 8));
}

void sub_100AD82A0(long long *a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AnyCRValue();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4, v6);
  __n128 v48 = (char *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1005057FC(&qword_101690110);
  uint64_t v10 = __chkstk_darwin(v8 - 8, v9);
  uint64_t v12 = (char *)&v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10, v13);
  uint64_t v15 = (Swift::UInt *)((char *)&v40 - v14);
  uint64_t v16 = *(void *)(a2 + 64);
  uint64_t v42 = a2 + 64;
  uint64_t v17 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v18 = -1;
  if (v17 < 64) {
    uint64_t v18 = ~(-1 << v17);
  }
  unint64_t v19 = v18 & v16;
  uint64_t v45 = v5 + 16;
  uint64_t v46 = v5;
  uint64_t v49 = (void (**)(char *, uint64_t))(v5 + 8);
  uint64_t v50 = (void (**)(char *, char *, uint64_t))(v5 + 32);
  int64_t v43 = (unint64_t)(v17 + 63) >> 6;
  int64_t v41 = v43 - 1;
  uint64_t v47 = a2;
  swift_bridgeObjectRetain();
  Swift::UInt v20 = 0;
  int64_t v51 = 0;
  uint64_t v44 = v4;
  if (!v19) {
    goto LABEL_6;
  }
LABEL_4:
  Swift::UInt v21 = v20;
  unint64_t v22 = __clz(__rbit64(v19));
  v19 &= v19 - 1;
  unint64_t v23 = v22 | (v51 << 6);
LABEL_5:
  uint64_t v24 = v46;
  uint64_t v25 = *(void *)(*(void *)(v47 + 48) + 8 * v23);
  unint64_t v26 = *(void *)(v47 + 56) + *(void *)(v46 + 72) * v23;
  uint64_t v27 = sub_1005057FC(&qword_101690118);
  uint64_t v28 = *(void (**)(char *, unint64_t, uint64_t))(v24 + 16);
  uint64_t v4 = v44;
  v28(&v12[*(int *)(v27 + 48)], v26, v44);
  *(void *)uint64_t v12 = v25;
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v12, 0, 1, v27);
  Swift::UInt v20 = v21;
  while (1)
  {
    sub_100ADF758((uint64_t)v12, (uint64_t)v15);
    uint64_t v34 = sub_1005057FC(&qword_101690118);
    if ((*(unsigned int (**)(Swift::UInt *, uint64_t, uint64_t))(*(void *)(v34 - 8) + 48))(v15, 1, v34) == 1)
    {
      swift_release();
      Hasher._combine(_:)(v20);
      return;
    }
    Swift::UInt v35 = *v15;
    uint64_t v36 = v48;
    (*v50)(v48, (char *)v15 + *(int *)(v34 + 48), v4);
    uint64_t v37 = *((void *)a1 + 8);
    long long v38 = a1[1];
    long long v52 = *a1;
    long long v53 = v38;
    long long v39 = a1[3];
    long long v54 = a1[2];
    long long v55 = v39;
    uint64_t v56 = v37;
    Hasher._combine(_:)(v35);
    sub_100ADF7C0(&qword_101690120, 255, (void (*)(uint64_t))&type metadata accessor for AnyCRValue);
    dispatch thunk of Hashable.hash(into:)();
    (*v49)(v36, v4);
    v20 ^= Hasher._finalize()();
    if (v19) {
      goto LABEL_4;
    }
LABEL_6:
    int64_t v29 = v51 + 1;
    if (__OFADD__(v51, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v29 < v43)
    {
      unint64_t v30 = *(void *)(v42 + 8 * v29);
      if (v30) {
        goto LABEL_9;
      }
      int64_t v31 = v51 + 2;
      ++v51;
      if (v29 + 1 < v43)
      {
        unint64_t v30 = *(void *)(v42 + 8 * v31);
        if (v30)
        {
          ++v29;
LABEL_9:
          Swift::UInt v21 = v20;
          unint64_t v19 = (v30 - 1) & v30;
          unint64_t v23 = __clz(__rbit64(v30)) + (v29 << 6);
          int64_t v51 = v29;
          goto LABEL_5;
        }
        int64_t v32 = v29 + 2;
        int64_t v51 = v29 + 1;
        if (v29 + 2 < v43) {
          break;
        }
      }
    }
LABEL_21:
    uint64_t v33 = sub_1005057FC(&qword_101690118);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56))(v12, 1, 1, v33);
    unint64_t v19 = 0;
  }
  unint64_t v30 = *(void *)(v42 + 8 * v32);
  if (v30)
  {
    v29 += 2;
    goto LABEL_9;
  }
  while (1)
  {
    int64_t v29 = v32 + 1;
    if (__OFADD__(v32, 1)) {
      break;
    }
    if (v29 >= v43)
    {
      int64_t v51 = v41;
      goto LABEL_21;
    }
    unint64_t v30 = *(void *)(v42 + 8 * v29);
    ++v32;
    if (v30) {
      goto LABEL_9;
    }
  }
LABEL_27:
  __break(1u);
}

void sub_100AD8738(uint64_t a1, uint64_t a2)
{
  uint64_t v11 = a2 + 64;
  uint64_t v2 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v3 = -1;
  if (v2 < 64) {
    uint64_t v3 = ~(-1 << v2);
  }
  uint64_t v4 = v3 & *(void *)(a2 + 64);
  int64_t v5 = (unint64_t)(v2 + 63) >> 6;
  swift_bridgeObjectRetain();
  Swift::UInt v6 = 0;
  int64_t v7 = 0;
  while (1)
  {
    if (v4)
    {
      v4 &= v4 - 1;
      goto LABEL_5;
    }
    int64_t v8 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
      goto LABEL_21;
    }
    if (v8 >= v5) {
      goto LABEL_19;
    }
    uint64_t v9 = *(void *)(v11 + 8 * v8);
    ++v7;
    if (!v9)
    {
      int64_t v7 = v8 + 1;
      if (v8 + 1 >= v5) {
        goto LABEL_19;
      }
      uint64_t v9 = *(void *)(v11 + 8 * v7);
      if (!v9) {
        break;
      }
    }
LABEL_18:
    uint64_t v4 = (v9 - 1) & v9;
LABEL_5:
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    String.hash(into:)();
    swift_bridgeObjectRelease();
    String.hash(into:)();
    swift_bridgeObjectRelease();
    v6 ^= Hasher._finalize()();
  }
  int64_t v10 = v8 + 2;
  if (v10 >= v5)
  {
LABEL_19:
    swift_release();
    Hasher._combine(_:)(v6);
    return;
  }
  uint64_t v9 = *(void *)(v11 + 8 * v10);
  if (v9)
  {
    int64_t v7 = v10;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v7 = v10 + 1;
    if (__OFADD__(v10, 1)) {
      break;
    }
    if (v7 >= v5) {
      goto LABEL_19;
    }
    uint64_t v9 = *(void *)(v11 + 8 * v7);
    ++v10;
    if (v9) {
      goto LABEL_18;
    }
  }
LABEL_21:
  __break(1u);
}

void sub_100AD8900(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = a2 + 64;
  uint64_t v4 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(a2 + 64);
  int64_t v7 = (unint64_t)(v4 + 63) >> 6;
  swift_bridgeObjectRetain();
  Swift::UInt v8 = 0;
  int64_t v9 = 0;
  while (1)
  {
    if (v6)
    {
      unint64_t v10 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      unint64_t v11 = v10 | (v9 << 6);
      goto LABEL_20;
    }
    int64_t v12 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v12 >= v7) {
      goto LABEL_28;
    }
    unint64_t v13 = *(void *)(v3 + 8 * v12);
    ++v9;
    if (!v13)
    {
      int64_t v9 = v12 + 1;
      if (v12 + 1 >= v7) {
        goto LABEL_28;
      }
      unint64_t v13 = *(void *)(v3 + 8 * v9);
      if (!v13) {
        break;
      }
    }
LABEL_19:
    unint64_t v6 = (v13 - 1) & v13;
    unint64_t v11 = __clz(__rbit64(v13)) + (v9 << 6);
LABEL_20:
    uint64_t v15 = *(void *)(*(void *)(a2 + 56) + 8 * v11);
    swift_bridgeObjectRetain();
    String.hash(into:)();
    swift_bridgeObjectRelease();
    if (v15 == 2)
    {
      Hasher._combine(_:)(0);
    }
    else
    {
      Hasher._combine(_:)(1uLL);
      Hasher._combine(_:)(v15 & 1);
      Hasher._combine(_:)(BYTE1(v15) & 1);
      Hasher._combine(_:)(BYTE2(v15) & 1);
      Hasher._combine(_:)(BYTE3(v15) & 1);
      if ((v15 & 0x7FFFFF00000000) == 0 && (v15 & 0x7F80000000000000) == 0) {
        Swift::UInt32 v17 = 0;
      }
      else {
        Swift::UInt32 v17 = HIDWORD(v15);
      }
      Hasher._combine(_:)(v17);
    }
    v8 ^= Hasher._finalize()();
  }
  int64_t v14 = v12 + 2;
  if (v14 >= v7)
  {
LABEL_28:
    swift_release();
    Hasher._combine(_:)(v8);
    return;
  }
  unint64_t v13 = *(void *)(v3 + 8 * v14);
  if (v13)
  {
    int64_t v9 = v14;
    goto LABEL_19;
  }
  while (1)
  {
    int64_t v9 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v9 >= v7) {
      goto LABEL_28;
    }
    unint64_t v13 = *(void *)(v3 + 8 * v9);
    ++v14;
    if (v13) {
      goto LABEL_19;
    }
  }
LABEL_30:
  __break(1u);
}

void sub_100AD8B0C(__n128 a1)
{
  if ((a1.n128_u32[0] & 0x7FFFFFFF) != 0) {
    Swift::UInt32 v1 = a1.n128_u32[0];
  }
  else {
    Swift::UInt32 v1 = 0;
  }
  Hasher._combine(_:)(v1);
  if ((a1.n128_u32[1] & 0x7FFFFFFF) != 0) {
    Swift::UInt32 v2 = a1.n128_u32[1];
  }
  else {
    Swift::UInt32 v2 = 0;
  }
  Hasher._combine(_:)(v2);
  if ((a1.n128_u32[2] & 0x7FFFFFFF) != 0) {
    Swift::UInt32 v3 = a1.n128_u32[2];
  }
  else {
    Swift::UInt32 v3 = 0;
  }
  Hasher._combine(_:)(v3);
}

BOOL sub_100AD8B70(uint64_t a1, uint64_t a2)
{
  if (*(float *)a1 != *(float *)a2) {
    return 0;
  }
  uint64_t v2 = 0;
  long long v3 = *(_OWORD *)(a1 + 16);
  long long v4 = *(_OWORD *)(a2 + 16);
  BOOL v5 = 1;
  while (!v5)
  {
    BOOL v5 = 0;
    uint64_t v8 = 0;
    if (v2 == 3) {
      return v8;
    }
LABEL_4:
    ++v2;
  }
  long long v10 = v3;
  float v6 = *(float *)((unint64_t)&v10 & 0xFFFFFFFFFFFFFFF3 | (4 * (v2 & 3)));
  long long v11 = v4;
  float v7 = *(float *)((unint64_t)&v11 & 0xFFFFFFFFFFFFFFF3 | (4 * (v2 & 3)));
  BOOL v5 = v6 == v7;
  if (v2 != 3) {
    goto LABEL_4;
  }
  if (v6 != v7
    || *(double *)(a1 + 32) != *(double *)(a2 + 32)
    || *(double *)(a1 + 40) != *(double *)(a2 + 40)
    || *(double *)(a1 + 48) != *(double *)(a2 + 48)
    || *(double *)(a1 + 56) != *(double *)(a2 + 56))
  {
    return 0;
  }
  return *(double *)(a1 + 64) == *(double *)(a2 + 64);
}

BOOL sub_100AD8C54(uint64_t a1, uint64_t a2)
{
  if ((static URL.== infix(_:_:)() & 1) == 0) {
    return 0;
  }
  long long v4 = (int *)type metadata accessor for CRLUSDRendering.SceneRequest(0);
  if ((sub_1008D44A8(*(void *)(a1 + v4[5]), *(void *)(a1 + v4[5] + 8), *(void *)(a2 + v4[5]), *(void *)(a2 + v4[5] + 8)) & 1) == 0)return 0; {
  uint64_t v5 = a1 + v4[6];
  }
  long long v6 = *(_OWORD *)(v5 + 48);
  v12[2] = *(_OWORD *)(v5 + 32);
  v12[3] = v6;
  uint64_t v13 = *(void *)(v5 + 64);
  long long v7 = *(_OWORD *)(v5 + 16);
  v12[0] = *(_OWORD *)v5;
  v12[1] = v7;
  uint64_t v8 = a2 + v4[6];
  uint64_t v15 = *(void *)(v8 + 64);
  long long v9 = *(_OWORD *)(v8 + 48);
  v14[2] = *(_OWORD *)(v8 + 32);
  _DWORD v14[3] = v9;
  long long v10 = *(_OWORD *)(v8 + 16);
  v14[0] = *(_OWORD *)v8;
  v14[1] = v10;
  return sub_100AD8B70((uint64_t)v12, (uint64_t)v14)
      && CGRectEqualToRect(*(CGRect *)(a1 + v4[7]), *(CGRect *)(a2 + v4[7]));
}

uint64_t sub_100AD8D30(uint64_t a1, uint64_t a2, char a3, uint64_t a4, unint64_t a5, char a6)
{
  switch(a3)
  {
    case 1:
      if (a6 == 1) {
        goto LABEL_14;
      }
      return 0;
    case 2:
      if (a6 != 2) {
        return 0;
      }
      goto LABEL_14;
    case 3:
      if (a6 == 3) {
        goto LABEL_14;
      }
      return 0;
    case 4:
      if (a6 != 4) {
        return 0;
      }
      if (!a2) {
        return !a5;
      }
      if (a2 == 1) {
        return a5 == 1;
      }
      if (a5 < 2) {
        return 0;
      }
      return a1 == a4 && a2 == a5 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0;
    case 5:
      if (a6 != 5) {
        return 0;
      }
      if (a2)
      {
        if (!a5) {
          return 0;
        }
        return a1 == a4 && a2 == a5 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0;
      }
      return !a5;
    case 6:
      return a6 == 6 && !(a5 | a4);
    default:
      if (a6) {
        return 0;
      }
LABEL_14:
      if (a1 == a4 && a2 == a5) {
        return 1;
      }
      return _stringCompareWithSmolCheck(_:_:expecting:)();
  }
}

BOOL sub_100AD8E88(__n128 a1, __n128 a2, __n128 a3, __n128 a4)
{
  uint64_t v4 = 0;
  BOOL v5 = 1;
  while (!v5)
  {
    BOOL v5 = 0;
    BOOL result = 0;
    if (v4 == 2) {
      return result;
    }
LABEL_3:
    ++v4;
  }
  __n128 v14 = a1;
  float v7 = *(float *)((unint64_t)&v14 & 0xFFFFFFFFFFFFFFF3 | (4 * (v4 & 3)));
  __n128 v15 = a3;
  float v8 = *(float *)((unint64_t)&v15 & 0xFFFFFFFFFFFFFFF3 | (4 * (v4 & 3)));
  BOOL v5 = v7 == v8;
  if (v4 != 2) {
    goto LABEL_3;
  }
  if (v7 != v8) {
    return 0;
  }
  uint64_t v9 = 0;
  while (1)
  {
    __n128 v12 = a2;
    float v10 = *(float *)((unint64_t)&v12 & 0xFFFFFFFFFFFFFFF3 | (4 * (v9 & 3)));
    __n128 v13 = a4;
    BOOL v11 = v10 == *(float *)((unint64_t)&v13 & 0xFFFFFFFFFFFFFFF3 | (4 * (v9 & 3)));
    BOOL result = v11;
    if (v9 == 2) {
      break;
    }
    while (1)
    {
      ++v9;
      if (v11) {
        break;
      }
      BOOL v11 = 0;
      BOOL result = 0;
      if (v9 == 2) {
        return result;
      }
    }
  }
  return result;
}

uint64_t sub_100AD8F5C(uint64_t a1, uint64_t a2)
{
  sub_10076E5A4(a1, (uint64_t)&v33);
  int v4 = v36;
  uint64_t v3 = v37;
  if (!(v36 >> 62))
  {
    v36 &= 0x3FFFFFFFFFFFFFFFuLL;
    long long v24 = v33;
    long long v25 = v34;
    uint64_t v9 = v35;
    sub_10076E5A4(a2, (uint64_t)v30);
    int v10 = v31;
    unint64_t v11 = v31 >> 62;
    if (v31 >> 62) {
      goto LABEL_45;
    }
    BOOL v12 = 1;
    uint64_t v13 = v32;
    while (1)
    {
      while (!v12)
      {
        if (v11 == 2) {
          goto LABEL_45;
        }
        BOOL v12 = 0;
        ++v11;
      }
      long long v28 = v24;
      float v14 = *(float *)((unint64_t)&v28 & 0xFFFFFFFFFFFFFFF3 | (4 * (v11 & 3)));
      long long v29 = *(_OWORD *)v30;
      float v15 = *(float *)((unint64_t)&v29 & 0xFFFFFFFFFFFFFFF3 | (4 * (v11 & 3)));
      BOOL v12 = v14 == v15;
      if (v11 == 2) {
        break;
      }
      ++v11;
    }
    if (v14 != v15) {
      goto LABEL_45;
    }
    uint64_t v18 = 0;
    BOOL v19 = 1;
    while (1)
    {
      while (!v19)
      {
        if (v18 == 2) {
          goto LABEL_45;
        }
        BOOL v19 = 0;
        ++v18;
      }
      long long v26 = v25;
      float v20 = *(float *)((unint64_t)&v26 & 0xFFFFFFFFFFFFFFF3 | (4 * (v18 & 3)));
      long long v27 = *(_OWORD *)&v30[16];
      float v21 = *(float *)((unint64_t)&v27 & 0xFFFFFFFFFFFFFFF3 | (4 * (v18 & 3)));
      BOOL v19 = v20 == v21;
      if (v18 == 2) {
        break;
      }
      ++v18;
    }
    if (v20 != v21
      || (sub_100ED65D8(v9, *(uint64_t *)&v30[32]) & 1) == 0
      || ((v4 ^ v10) & 1) != 0
      || (sub_100ED67F0(v3, v13) & 1) == 0)
    {
      goto LABEL_45;
    }
    goto LABEL_40;
  }
  uint64_t v5 = v33;
  if (v36 >> 62 != 1)
  {
    if (v36 == 0x8000000000000000
      && (v37 | (unint64_t)v33 | v35 | *((void *)&v34 + 1) | (unint64_t)v34 | *((void *)&v33 + 1)) == 0)
    {
      sub_10076E5A4(a2, (uint64_t)v30);
      if (v31 >> 62 != 2) {
        goto LABEL_45;
      }
      if (v31 != 0x8000000000000000) {
        goto LABEL_45;
      }
      int8x16_t v17 = vorrq_s8(*(int8x16_t *)&v30[8], *(int8x16_t *)&v30[24]);
      if (*(void *)&vorr_s8(*(int8x8_t *)v17.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v17, v17, 8uLL)) | v32 | *(void *)v30) {
        goto LABEL_45;
      }
    }
    else
    {
      if (v36 == 0x8000000000000000
        && (void)v33 == 1
        && !(*((void *)&v34 + 1) | v35 | (unint64_t)v34 | *((void *)&v33 + 1) | v37))
      {
        sub_10076E5A4(a2, (uint64_t)v30);
        if (v31 >> 62 != 2 || v32 || v31 != 0x8000000000000000 || *(void *)v30 != 1) {
          goto LABEL_45;
        }
      }
      else
      {
        sub_10076E5A4(a2, (uint64_t)v30);
        if (v31 >> 62 != 2 || v32 || v31 != 0x8000000000000000 || *(void *)v30 != 2) {
          goto LABEL_45;
        }
      }
      int8x16_t v22 = vorrq_s8(*(int8x16_t *)&v30[8], *(int8x16_t *)&v30[24]);
      if (vorr_s8(*(int8x8_t *)v22.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v22, v22, 8uLL)))
      {
LABEL_45:
        char v8 = 0;
        return v8 & 1;
      }
    }
LABEL_40:
    char v8 = 1;
    return v8 & 1;
  }
  v36 &= 0x3FFFFFFFFFFFFFFFuLL;
  uint64_t v6 = *((void *)&v33 + 1);
  char v7 = v34;
  sub_10076E5A4(a2, (uint64_t)v30);
  if (v31 >> 62 != 1) {
    goto LABEL_45;
  }
  v31 &= 0x3FFFFFFFFFFFFFFFuLL;
  char v8 = sub_100AD8D30(v5, v6, v7, *(uint64_t *)v30, *(unint64_t *)&v30[8], v30[16]);
  return v8 & 1;
}

void sub_100AD9278(uint64_t a1, char a2)
{
  uint64_t v3 = 0;
  uint64_t v4 = 0;
  int64_t v5 = 0;
  uint64_t v6 = a1 + 64;
  uint64_t v7 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v8 = -1;
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  unint64_t v9 = v8 & *(void *)(a1 + 64);
  int64_t v10 = (unint64_t)(v7 + 63) >> 6;
  do
  {
    while (1)
    {
      if (v9)
      {
        unint64_t v12 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        unint64_t v13 = v12 | (v5 << 6);
      }
      else
      {
        int64_t v14 = v5 + 1;
        if (__OFADD__(v5, 1))
        {
          __break(1u);
LABEL_34:
          __break(1u);
LABEL_35:
          __break(1u);
LABEL_36:
          __break(1u);
          return;
        }
        if (v14 >= v10) {
          goto LABEL_25;
        }
        unint64_t v15 = *(void *)(v6 + 8 * v14);
        ++v5;
        if (!v15)
        {
          int64_t v5 = v14 + 1;
          if (v14 + 1 >= v10) {
            goto LABEL_25;
          }
          unint64_t v15 = *(void *)(v6 + 8 * v5);
          if (!v15)
          {
            int64_t v5 = v14 + 2;
            if (v14 + 2 >= v10) {
              goto LABEL_25;
            }
            unint64_t v15 = *(void *)(v6 + 8 * v5);
            if (!v15)
            {
              int64_t v16 = v14 + 3;
              if (v16 >= v10) {
                goto LABEL_25;
              }
              unint64_t v15 = *(void *)(v6 + 8 * v16);
              if (!v15)
              {
                while (1)
                {
                  int64_t v5 = v16 + 1;
                  if (__OFADD__(v16, 1)) {
                    goto LABEL_34;
                  }
                  if (v5 >= v10) {
                    goto LABEL_25;
                  }
                  unint64_t v15 = *(void *)(v6 + 8 * v5);
                  ++v16;
                  if (v15) {
                    goto LABEL_20;
                  }
                }
              }
              int64_t v5 = v16;
            }
          }
        }
LABEL_20:
        unint64_t v9 = (v15 - 1) & v15;
        unint64_t v13 = __clz(__rbit64(v15)) + (v5 << 6);
      }
      if (*(unsigned char *)(*(void *)(a1 + 56) + 8 * v13) != 2) {
        break;
      }
      BOOL v11 = __OFADD__(v3++, 1);
      if (v11) {
        goto LABEL_35;
      }
    }
    BOOL v11 = __OFADD__(v4++, 1);
  }
  while (!v11);
  __break(1u);
LABEL_25:
  BoundingBox.extents.getter();
  long long v40 = v17;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_10117E810;
  *(void *)(v18 + 56) = &type metadata for Float;
  *(void *)(v18 + 64) = &protocol witness table for Float;
  *(_DWORD *)(v18 + 32) = v40;
  v19._countAndFlagsBits = String.init(format:_:)();
  String.append(_:)(v19);
  swift_bridgeObjectRelease();
  v20._countAndFlagsBits = 2127904;
  v20._object = (void *)0xE300000000000000;
  String.append(_:)(v20);
  uint64_t v21 = swift_allocObject();
  *(_OWORD *)(v21 + 16) = xmmword_10117E810;
  *(void *)(v21 + 56) = &type metadata for Float;
  *(void *)(v21 + 64) = &protocol witness table for Float;
  *(_DWORD *)(v21 + 32) = DWORD1(v40);
  v22._countAndFlagsBits = String.init(format:_:)();
  String.append(_:)(v22);
  swift_bridgeObjectRelease();
  v23._countAndFlagsBits = 2127904;
  v23._object = (void *)0xE300000000000000;
  String.append(_:)(v23);
  uint64_t v24 = swift_allocObject();
  *(_OWORD *)(v24 + 16) = xmmword_10117E810;
  *(void *)(v24 + 56) = &type metadata for Float;
  *(void *)(v24 + 64) = &protocol witness table for Float;
  *(_DWORD *)(v24 + 32) = DWORD2(v40);
  v25._countAndFlagsBits = String.init(format:_:)();
  String.append(_:)(v25);
  swift_bridgeObjectRelease();
  v26._countAndFlagsBits = 41;
  v26._object = (void *)0xE100000000000000;
  String.append(_:)(v26);
  _StringGuts.grow(_:)(69);
  v27._object = (void *)0x80000001012700A0;
  v27._countAndFlagsBits = 0xD000000000000012;
  String.append(_:)(v27);
  v28._countAndFlagsBits = 40;
  v28._object = (void *)0xE100000000000000;
  String.append(_:)(v28);
  swift_bridgeObjectRelease();
  v29._countAndFlagsBits = 8236;
  v29._object = (void *)0xE200000000000000;
  String.append(_:)(v29);
  if (__OFADD__(v4, v3)) {
    goto LABEL_36;
  }
  v30._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v30);
  swift_bridgeObjectRelease();
  v31._countAndFlagsBits = 0x2820736D696E6120;
  v31._object = (void *)0xE800000000000000;
  String.append(_:)(v31);
  v32._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v32);
  swift_bridgeObjectRelease();
  v33._countAndFlagsBits = 0x2C65766974636120;
  v33._object = (void *)0xE900000000000020;
  String.append(_:)(v33);
  v34._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v34);
  swift_bridgeObjectRelease();
  v35._countAndFlagsBits = 0xD000000000000015;
  v35._object = (void *)0x80000001012700C0;
  String.append(_:)(v35);
  if (a2) {
    uint64_t v36 = 1702195828;
  }
  else {
    uint64_t v36 = 0x65736C6166;
  }
  if (a2) {
    unint64_t v37 = 0xE400000000000000;
  }
  else {
    unint64_t v37 = 0xE500000000000000;
  }
  unint64_t v38 = v37;
  String.append(_:)(*(Swift::String *)&v36);
  swift_bridgeObjectRelease();
  v39._countAndFlagsBits = 41;
  v39._object = (void *)0xE100000000000000;
  String.append(_:)(v39);
}

uint64_t sub_100AD96E8(void *a1)
{
  id v1 = [a1 userInfo];
  uint64_t v2 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

  if (!*(void *)(v2 + 16) || (unint64_t v3 = sub_100955F50(0xD000000000000026, 0x8000000101270010), (v4 & 1) == 0))
  {
    long long v8 = 0u;
    long long v9 = 0u;
    swift_bridgeObjectRelease();
    goto LABEL_9;
  }
  sub_100522D7C(*(void *)(v2 + 56) + 32 * v3, (uint64_t)&v8);
  swift_bridgeObjectRelease();
  if (!*((void *)&v9 + 1))
  {
LABEL_9:
    sub_10052E2B0((uint64_t)&v8);
    return 0;
  }
  if ((swift_dynamicCast() & 1) == 0) {
    return 0;
  }
  if (qword_10166F258 != -1) {
    swift_once();
  }
  sub_100ADE854();
  dispatch thunk of JSONDecoder.decode<A>(_:from:)();
  sub_100510084(v6, v7);
  return v8;
}

uint64_t sub_100AD9878(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 7107189 && a2 == 0xE300000000000000;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6D6B6F6F426C7275 && a2 == 0xEF617461446B7261 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x72756769666E6F63 && a2 == 0xED00006E6F697461 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x46746C7561666564 && a2 == 0xEC000000656D6172)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_100AD9A84(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x4F466172656D6163 && a2 == 0xE900000000000056;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7461746E6569726FLL && a2 == 0xEB000000006E6F69 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x724664656C616373 && a2 == 0xEF657A6953656D61 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x8000000101270140 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x73746E65746E6F63 && a2 == 0xED0000656C616353)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v6) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

uint64_t sub_100AD9D08(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6D696E4179616C70 && a2 == 0xEE00736E6F697461;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x696E416573756170 && a2 == 0xEF736E6F6974616DLL {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x8000000101270100 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x696E417465736572 && a2 == 0xEF736E6F6974616DLL {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6D696E41706F7473 && a2 == 0xEE00736E6F697461)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v6) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

uint64_t sub_100AD9F98(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000012 && a2 == 0x8000000101270120
    || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6150737472617473 && a2 == 0xEC00000064657375)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v5 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v5) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_100ADA0A0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6465737561507369 && a2 == 0xE800000000000000;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656C706D6F437369 && a2 == 0xEA00000000006574 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6E6979616C507369 && a2 == 0xE900000000000067 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6570706F74537369 && a2 == 0xE900000000000064 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6465657073 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v6) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

uint64_t sub_100ADA2D8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6576697463616E69 && a2 == 0xE800000000000000;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x657669746361 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_100ADA3C4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x756F426C65646F6DLL && a2 == 0xEB0000000073646ELL;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6F6974616D696E61 && a2 == 0xEA0000000000736ELL {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6956734977656976 && a2 == 0xED0000656C626973 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x617461646174656DLL && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_100ADA5C8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x64656C6261736964 && a2 == 0xE800000000000000;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6574736575716572 && a2 == 0xE900000000000064 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x676E6964616F6CLL && a2 == 0xE700000000000000 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6E697265646E6572 && a2 == 0xE900000000000067 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x726F727265 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v6) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

uint64_t sub_100ADA7F0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x7245676E69646F63 && a2 == 0xEB00000000726F72;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x726F7272456C7275 && a2 == 0xE800000000000000 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x45676E6964616F6CLL && a2 == 0xEC000000726F7272 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x7272456574617473 && a2 == 0xEA0000000000726FLL {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x4574756F656D6974 && a2 == 0xEC000000726F7272 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6F69736E65747865 && a2 == 0xEE00726F7272456ELL {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x45636972656E6567 && a2 == 0xEC000000726F7272)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v6) {
      return 6;
    }
    else {
      return 7;
    }
  }
}

uint64_t sub_100ADAB58(void *a1)
{
  uint64_t v47 = sub_1005057FC(&qword_10168FE00);
  uint64_t v42 = *(void *)(v47 - 8);
  __chkstk_darwin(v47, v2);
  int64_t v51 = (char *)&v39 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = sub_1005057FC(&qword_10168FE08);
  uint64_t v48 = *(void *)(v43 - 8);
  __chkstk_darwin(v43, v4);
  uint64_t v50 = (char *)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1005057FC(&qword_10168FE10);
  uint64_t v45 = *(void *)(v6 - 8);
  uint64_t v46 = v6;
  __chkstk_darwin(v6, v7);
  uint64_t v49 = (char *)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1005057FC(&qword_10168FE18);
  uint64_t v40 = *(void *)(v9 - 8);
  uint64_t v41 = v9;
  __chkstk_darwin(v9, v10);
  unint64_t v12 = (char *)&v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1005057FC(&qword_10168FE20);
  uint64_t v44 = *(void *)(v13 - 8);
  __chkstk_darwin(v13, v14);
  int64_t v16 = (char *)&v39 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_1005057FC(&qword_10168FE28);
  uint64_t v18 = *(void *)(v17 - 8);
  __chkstk_darwin(v17, v19);
  uint64_t v21 = (char *)&v39 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = a1[3];
  long long v52 = a1;
  sub_10050F848(a1, v22);
  sub_100ADE9F4();
  Swift::String v23 = v53;
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v23) {
    goto LABEL_10;
  }
  long long v53 = v12;
  uint64_t v24 = v16;
  Swift::String v25 = v49;
  Swift::String v26 = v50;
  uint64_t v39 = v13;
  Swift::String v27 = v51;
  uint64_t v28 = KeyedDecodingContainer.allKeys.getter();
  if (*(void *)(v28 + 16) != 1)
  {
    uint64_t v31 = v17;
    uint64_t v17 = type metadata accessor for DecodingError();
    swift_allocError();
    Swift::String v32 = v21;
    Swift::String v34 = v33;
    sub_1005057FC(&qword_1016771E0);
    *Swift::String v34 = &type metadata for CRLUSDRendering.SceneAction;
    KeyedDecodingContainer.codingPath.getter();
    DecodingError.Context.init(codingPath:debugDescription:underlyingError:)();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v17 - 8) + 104))(v34, enum case for DecodingError.typeMismatch(_:), v17);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v18 + 8))(v32, v31);
LABEL_10:
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v52);
    return v17;
  }
  switch(*(unsigned char *)(v28 + 32))
  {
    case 1:
      char v57 = 1;
      sub_100ADEB44();
      Swift::String v35 = v53;
      KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)();
      (*(void (**)(char *, uint64_t))(v40 + 8))(v35, v41);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v18 + 8))(v21, v17);
      uint64_t v17 = 0;
      goto LABEL_10;
    case 2:
      char v58 = 2;
      sub_100ADEAF0();
      KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)();
      (*(void (**)(char *, uint64_t))(v45 + 8))(v25, v46);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v18 + 8))(v21, v17);
      uint64_t v17 = 0;
      goto LABEL_10;
    case 3:
      char v59 = 3;
      sub_100ADEA9C();
      KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)();
      (*(void (**)(char *, uint64_t))(v48 + 8))(v26, v43);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v18 + 8))(v21, v17);
      uint64_t v17 = 0;
      goto LABEL_10;
    case 4:
      char v60 = 4;
      sub_100ADEA48();
      KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)();
      (*(void (**)(char *, uint64_t))(v42 + 8))(v27, v47);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v18 + 8))(v21, v17);
      uint64_t v17 = 0;
      goto LABEL_10;
    default:
      char v56 = 0;
      sub_100ADEB98();
      Swift::String v29 = v24;
      KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)();
      char v55 = 0;
      uint64_t v30 = v39;
      KeyedDecodingContainer.decode(_:forKey:)();
      uint64_t v38 = v37;
      char v54 = 1;
      KeyedDecodingContainer.decode(_:forKey:)();
      (*(void (**)(char *, uint64_t))(v44 + 8))(v29, v30);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v18 + 8))(v21, v17);
      uint64_t v17 = v38;
      _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v52);
      break;
  }
  return v17;
}

unint64_t sub_100ADB388(void *a1)
{
  uint64_t v2 = sub_1005057FC(&qword_10168FE90);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v30 = v2;
  uint64_t v31 = v3;
  __chkstk_darwin(v2, v4);
  uint64_t v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1005057FC(&qword_10168FE98);
  uint64_t v32 = *(void *)(v7 - 8);
  __chkstk_darwin(v7, v8);
  uint64_t v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1005057FC(&qword_10168FEA0);
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11, v13);
  uint64_t v15 = (char *)&v30 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = a1[3];
  Swift::String v33 = a1;
  unint64_t v17 = (unint64_t)sub_10050F848(a1, v16);
  sub_100ADEBEC();
  uint64_t v18 = v34;
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (!v18)
  {
    uint64_t v19 = v32;
    uint64_t v34 = v12;
    unint64_t v17 = (unint64_t)v15;
    uint64_t v20 = KeyedDecodingContainer.allKeys.getter();
    if (*(void *)(v20 + 16) == 1)
    {
      if (*(unsigned char *)(v20 + 32))
      {
        char v41 = 1;
        sub_100ADEC40();
        KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)();
        sub_100ADEC94();
        uint64_t v21 = v30;
        KeyedDecodingContainer.decode<A>(_:forKey:)();
        (*(void (**)(char *, uint64_t))(v31 + 8))(v6, v21);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v34 + 8))(v15, v11);
        uint64_t v22 = 256;
        if (!v36) {
          uint64_t v22 = 0;
        }
        uint64_t v23 = v22 | v35;
        uint64_t v24 = 0x10000;
        if (!v37) {
          uint64_t v24 = 0;
        }
        uint64_t v25 = 0x1000000;
        if (!v38) {
          uint64_t v25 = 0;
        }
        unint64_t v17 = v23 | v24 | v25 | ((unint64_t)v39 << 32);
      }
      else
      {
        char v40 = 0;
        sub_100ADECE8();
        KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)();
        (*(void (**)(char *, uint64_t))(v19 + 8))(v10, v7);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v34 + 8))(v15, v11);
        unint64_t v17 = 2;
      }
    }
    else
    {
      uint64_t v26 = type metadata accessor for DecodingError();
      swift_allocError();
      uint64_t v28 = v27;
      sub_1005057FC(&qword_1016771E0);
      *uint64_t v28 = &type metadata for CRLUSDRendering.SceneDescription.AnimationState;
      KeyedDecodingContainer.codingPath.getter();
      DecodingError.Context.init(codingPath:debugDescription:underlyingError:)();
      (*(void (**)(void *, void, uint64_t))(*(void *)(v26 - 8) + 104))(v28, enum case for DecodingError.typeMismatch(_:), v26);
      swift_willThrow();
      swift_bridgeObjectRelease();
      (*(void (**)(unint64_t, uint64_t))(v34 + 8))(v17, v11);
    }
  }
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v33);
  return v17;
}

float sub_100ADB828(void *a1)
{
  uint64_t v2 = sub_1005057FC(&qword_10168FEE8);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2, v4);
  uint64_t v6 = (char *)v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10050F848(a1, a1[3]);
  sub_100ADED90();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  char v15 = 0;
  KeyedDecodingContainer.decode(_:forKey:)();
  char v14 = 1;
  KeyedDecodingContainer.decode(_:forKey:)();
  char v13 = 2;
  KeyedDecodingContainer.decode(_:forKey:)();
  char v12 = 3;
  v10[1] = KeyedDecodingContainer.decode(_:forKey:)();
  char v11 = 4;
  KeyedDecodingContainer.decode(_:forKey:)();
  float v9 = v8;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)a1);
  return v9;
}

uint64_t sub_100ADBA80@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v70 = a2;
  uint64_t v63 = sub_1005057FC(&qword_10168FF00);
  uint64_t v65 = *(void *)(v63 - 8);
  __chkstk_darwin(v63, v3);
  uint64_t v69 = (char *)&v54 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = sub_1005057FC(&qword_10168FF08);
  uint64_t v64 = *(void *)(v62 - 8);
  __chkstk_darwin(v62, v5);
  uint64_t v68 = (char *)&v54 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v61 = sub_1005057FC(&qword_10168FF10);
  uint64_t v67 = *(void *)(v61 - 8);
  __chkstk_darwin(v61, v7);
  NSString v66 = (char *)&v54 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1005057FC(&qword_10168FF18);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v59 = v9;
  uint64_t v60 = v10;
  __chkstk_darwin(v9, v11);
  char v13 = (char *)&v54 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1005057FC(&qword_10168FF20);
  uint64_t v58 = *(void *)(v14 - 8);
  __chkstk_darwin(v14, v15);
  unint64_t v17 = (char *)&v54 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_1005057FC(&qword_10168FF28);
  uint64_t v19 = *(void *)(v18 - 8);
  __chkstk_darwin(v18, v20);
  uint64_t v22 = (char *)&v54 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = a1[3];
  Class v71 = a1;
  sub_10050F848(a1, v23);
  sub_100ADEDE4();
  uint64_t v24 = v79;
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v24) {
    return _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v71);
  }
  char v56 = v17;
  uint64_t v55 = v14;
  uint64_t v25 = v13;
  Swift::String v27 = v66;
  uint64_t v26 = v67;
  uint64_t v28 = v68;
  Swift::String v29 = v69;
  uint64_t v57 = 0;
  uint64_t v79 = v19;
  uint64_t v30 = v70;
  uint64_t v31 = KeyedDecodingContainer.allKeys.getter();
  if (*(void *)(v31 + 16) != 1)
  {
    uint64_t v35 = v18;
    uint64_t v36 = type metadata accessor for DecodingError();
    swift_allocError();
    char v38 = v37;
    sub_1005057FC(&qword_1016771E0);
    void *v38 = &type metadata for CRLUSDRendering.RendererState;
    KeyedDecodingContainer.codingPath.getter();
    DecodingError.Context.init(codingPath:debugDescription:underlyingError:)();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v36 - 8) + 104))(v38, enum case for DecodingError.typeMismatch(_:), v36);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v79 + 8))(v22, v35);
    return _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v71);
  }
  switch(*(unsigned char *)(v31 + 32))
  {
    case 1:
      LOBYTE(v72) = 1;
      sub_100ADEF88();
      uint64_t v39 = v57;
      KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)();
      uint64_t v34 = v39;
      if (v39) {
        goto LABEL_14;
      }
      uint64_t v57 = 0;
      (*(void (**)(char *, uint64_t))(v60 + 8))(v25, v59);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v79 + 8))(v22, v18);
      uint64_t v45 = 0;
      uint64_t v46 = 0;
      uint64_t v47 = 0;
      uint64_t v48 = 0;
      unint64_t v49 = 0x8000000000000000;
      uint64_t v44 = 1;
      goto LABEL_21;
    case 2:
      LOBYTE(v72) = 2;
      sub_100ADEF34();
      uint64_t v40 = v57;
      KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)();
      uint64_t v34 = v40;
      if (v40) {
        goto LABEL_14;
      }
      uint64_t v57 = 0;
      (*(void (**)(char *, uint64_t))(v26 + 8))(v27, v61);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v79 + 8))(v22, v18);
      uint64_t v45 = 0;
      uint64_t v46 = 0;
      uint64_t v47 = 0;
      uint64_t v48 = 0;
      unint64_t v49 = 0x8000000000000000;
      uint64_t v44 = 2;
      goto LABEL_21;
    case 3:
      LOBYTE(v72) = 3;
      sub_100ADEE8C();
      uint64_t v41 = v57;
      KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)();
      if (v41) {
        goto LABEL_14;
      }
      sub_100ADEEE0();
      uint64_t v50 = v62;
      KeyedDecodingContainer.decode<A>(_:forKey:)();
      uint64_t v51 = v79;
      uint64_t v57 = 0;
      (*(void (**)(char *, uint64_t))(v64 + 8))(v28, v50);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v51 + 8))(v22, v18);
      uint64_t v44 = v72;
      uint64_t v34 = v73;
      uint64_t v45 = v74;
      uint64_t v46 = v75;
      uint64_t v47 = v76;
      unint64_t v49 = v77;
      uint64_t v48 = v78;
      goto LABEL_21;
    case 4:
      uint64_t v68 = (char *)v31;
      LOBYTE(v72) = 4;
      sub_100ADEE38();
      uint64_t v42 = v57;
      KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)();
      if (v42) {
        goto LABEL_14;
      }
      sub_100ADE854();
      uint64_t v52 = v63;
      KeyedDecodingContainer.decode<A>(_:forKey:)();
      uint64_t v53 = v79;
      uint64_t v57 = 0;
      (*(void (**)(char *, uint64_t))(v65 + 8))(v29, v52);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v53 + 8))(v22, v18);
      uint64_t v46 = 0;
      uint64_t v47 = 0;
      uint64_t v48 = 0;
      uint64_t v44 = v72;
      uint64_t v34 = v73;
      unint64_t v49 = 0x4000000000000000;
      uint64_t v45 = v74;
      goto LABEL_21;
    default:
      LOBYTE(v72) = 0;
      sub_100ADEFDC();
      uint64_t v32 = v56;
      uint64_t v33 = v57;
      KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)();
      uint64_t v34 = v33;
      if (v33)
      {
LABEL_14:
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v79 + 8))(v22, v18);
        return _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v71);
      }
      uint64_t v57 = 0;
      (*(void (**)(char *, uint64_t))(v58 + 8))(v32, v55);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v79 + 8))(v22, v18);
      uint64_t v44 = 0;
      uint64_t v45 = 0;
      uint64_t v46 = 0;
      uint64_t v47 = 0;
      uint64_t v48 = 0;
      unint64_t v49 = 0x8000000000000000;
LABEL_21:
      uint64_t result = _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v71);
      *uint64_t v30 = v44;
      v30[1] = v34;
      v30[2] = v45;
      v30[3] = v46;
      v30[4] = v47;
      v30[5] = v49;
      v30[6] = v48;
      break;
  }
  return result;
}

uint64_t sub_100ADC3E8(void *a1)
{
  uint64_t v80 = sub_1005057FC(&qword_10168FFA8);
  uint64_t v86 = *(void *)(v80 - 8);
  __chkstk_darwin(v80, v2);
  uint64_t v91 = (char *)&v70 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1005057FC(&qword_10168FFB0);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v84 = v4;
  uint64_t v85 = v5;
  __chkstk_darwin(v4, v6);
  uint64_t v90 = (char *)&v70 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v81 = sub_1005057FC(&qword_10168FFB8);
  uint64_t v79 = *(void *)(v81 - 8);
  __chkstk_darwin(v81, v8);
  id v89 = (char *)&v70 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1005057FC(&qword_10168FFC0);
  uint64_t v82 = *(void *)(v10 - 8);
  uint64_t v83 = v10;
  __chkstk_darwin(v10, v11);
  uint64_t v88 = (char *)&v70 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1005057FC(&qword_10168FFC8);
  uint64_t v77 = *(void *)(v13 - 8);
  uint64_t v78 = v13;
  __chkstk_darwin(v13, v14);
  id v87 = (char *)&v70 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_1005057FC(&qword_10168FFD0);
  uint64_t v75 = *(void *)(v16 - 8);
  uint64_t v76 = v16;
  __chkstk_darwin(v16, v17);
  uint64_t v19 = (char *)&v70 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_1005057FC(&qword_10168FFD8);
  uint64_t v74 = *(void *)(v20 - 8);
  __chkstk_darwin(v20, v21);
  uint64_t v23 = (char *)&v70 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = sub_1005057FC(&qword_10168FFE0);
  uint64_t v25 = *(void *)(v24 - 8);
  __chkstk_darwin(v24, v26);
  uint64_t v28 = (char *)&v70 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = a1[3];
  uint64_t v92 = a1;
  sub_10050F848(a1, v29);
  sub_100ADF0D8();
  uint64_t v30 = v94;
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (!v30)
  {
    Class v71 = v23;
    uint64_t v70 = v20;
    uint64_t v72 = v19;
    uint64_t v73 = 0;
    uint64_t v32 = v87;
    uint64_t v31 = v88;
    uint64_t v33 = v89;
    uint64_t v34 = v90;
    uint64_t v35 = v91;
    uint64_t v94 = v25;
    uint64_t v36 = KeyedDecodingContainer.allKeys.getter();
    if (*(void *)(v36 + 16) == 1)
    {
      switch(*(unsigned char *)(v36 + 32))
      {
        case 1:
          LOBYTE(v93) = 1;
          sub_100ADF324();
          uint64_t v47 = v72;
          uint64_t v48 = v73;
          KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)();
          if (v48) {
            goto LABEL_7;
          }
          uint64_t v49 = v24;
          uint64_t v50 = v76;
          uint64_t v24 = KeyedDecodingContainer.decode(_:forKey:)();
          (*(void (**)(char *, uint64_t))(v75 + 8))(v47, v50);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v94 + 8))(v28, v49);
          break;
        case 2:
          LOBYTE(v93) = 2;
          sub_100ADF2D0();
          uint64_t v51 = v73;
          KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)();
          if (v51) {
            goto LABEL_7;
          }
          uint64_t v52 = v24;
          uint64_t v53 = v78;
          uint64_t v54 = KeyedDecodingContainer.decode(_:forKey:)();
          uint64_t v55 = v94;
          uint64_t v24 = v54;
          (*(void (**)(char *, uint64_t))(v77 + 8))(v32, v53);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v55 + 8))(v28, v52);
          break;
        case 3:
          LOBYTE(v93) = 3;
          sub_100ADF27C();
          uint64_t v56 = v73;
          KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)();
          if (v56) {
            goto LABEL_7;
          }
          uint64_t v57 = v24;
          uint64_t v58 = v83;
          uint64_t v59 = KeyedDecodingContainer.decode(_:forKey:)();
          uint64_t v60 = v94;
          uint64_t v24 = v59;
          (*(void (**)(char *, uint64_t))(v82 + 8))(v31, v58);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v60 + 8))(v28, v57);
          break;
        case 4:
          LOBYTE(v93) = 4;
          sub_100ADF228();
          uint64_t v61 = v73;
          KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)();
          if (v61) {
            goto LABEL_7;
          }
          (*(void (**)(char *, uint64_t))(v79 + 8))(v33, v81);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v94 + 8))(v28, v24);
          uint64_t v24 = 0;
          break;
        case 5:
          LOBYTE(v93) = 5;
          sub_100ADF180();
          uint64_t v62 = v73;
          KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)();
          if (v62) {
            goto LABEL_7;
          }
          sub_100ADF1D4();
          uint64_t v63 = v84;
          KeyedDecodingContainer.decode<A>(_:forKey:)();
          uint64_t v64 = v94;
          (*(void (**)(char *, uint64_t))(v85 + 8))(v34, v63);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v64 + 8))(v28, v24);
          uint64_t v24 = v93;
          break;
        case 6:
          LOBYTE(v93) = 6;
          sub_100ADF12C();
          uint64_t v65 = v73;
          KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)();
          if (v65) {
            goto LABEL_7;
          }
          uint64_t v66 = v24;
          uint64_t v67 = v80;
          uint64_t v24 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
          uint64_t v68 = v35;
          uint64_t v69 = v94;
          (*(void (**)(char *, uint64_t))(v86 + 8))(v68, v67);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v69 + 8))(v28, v66);
          break;
        default:
          LOBYTE(v93) = 0;
          sub_100ADF378();
          char v37 = v71;
          uint64_t v38 = v73;
          KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)();
          if (v38) {
            goto LABEL_7;
          }
          uint64_t v39 = v24;
          uint64_t v40 = v70;
          uint64_t v41 = KeyedDecodingContainer.decode(_:forKey:)();
          uint64_t v42 = v94;
          uint64_t v24 = v41;
          (*(void (**)(char *, uint64_t))(v74 + 8))(v37, v40);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v42 + 8))(v28, v39);
          break;
      }
    }
    else
    {
      uint64_t v43 = type metadata accessor for DecodingError();
      swift_allocError();
      uint64_t v45 = v44;
      sub_1005057FC(&qword_1016771E0);
      *uint64_t v45 = &type metadata for CRLUSDRendering.RendererError;
      KeyedDecodingContainer.codingPath.getter();
      DecodingError.Context.init(codingPath:debugDescription:underlyingError:)();
      (*(void (**)(void *, void, uint64_t))(*(void *)(v43 - 8) + 104))(v45, enum case for DecodingError.typeMismatch(_:), v43);
      swift_willThrow();
LABEL_7:
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v94 + 8))(v28, v24);
    }
  }
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v92);
  return v24;
}

uint64_t sub_100ADCF8C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_1005057FC(&qword_101690078);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5, v7);
  uint64_t v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10050F848(a1, a1[3]);
  sub_100ADF420();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v2) {
    return _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)a1);
  }
  LOBYTE(v17) = 0;
  KeyedDecodingContainer.decode(_:forKey:)();
  int v11 = v10;
  type metadata accessor for simd_quatf(0);
  char v18 = 1;
  sub_100ADF7C0(&qword_101690088, 255, type metadata accessor for simd_quatf);
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  long long v16 = v17;
  type metadata accessor for CGSize(0);
  char v18 = 2;
  sub_100ADF7C0(&qword_1016771F0, 255, type metadata accessor for CGSize);
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  long long v12 = v17;
  char v18 = 3;
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  long long v13 = v17;
  char v18 = 4;
  sub_10060D130();
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  uint64_t v14 = v17;
  uint64_t result = _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)a1);
  *(_DWORD *)a2 = v11;
  *(_OWORD *)(a2 + 16) = v16;
  *(_OWORD *)(a2 + 32) = v12;
  *(_OWORD *)(a2 + 48) = v13;
  *(void *)(a2 + 64) = v14;
  return result;
}

uint64_t sub_100ADD2B0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_1005057FC(&qword_1016900A0);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5, v7);
  uint64_t v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v17 = sub_100A3B07C((uint64_t)_swiftEmptyArrayStorage);
  sub_10050F848(a1, a1[3]);
  sub_100ADF474();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v2)
  {
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)a1);
    return swift_bridgeObjectRelease();
  }
  else
  {
    char v20 = 0;
    sub_100ADF4C8();
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    long long v15 = v19;
    long long v16 = v18;
    sub_1005057FC(&qword_1016900B8);
    char v20 = 1;
    sub_100ADF5C4(&qword_1016900C0, (void (*)(void))sub_100ADF51C);
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    uint64_t v10 = v18;
    LOBYTE(v18) = 2;
    swift_bridgeObjectRetain();
    char v11 = KeyedDecodingContainer.decode(_:forKey:)();
    sub_1005057FC(&qword_10167D908);
    char v20 = 3;
    sub_100ADF694(&qword_1016900D0);
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
    uint64_t v12 = v18;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)a1);
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    long long v14 = v15;
    *(_OWORD *)a2 = v16;
    *(_OWORD *)(a2 + 16) = v14;
    *(void *)(a2 + 32) = v10;
    *(unsigned char *)(a2 + 40) = v11 & 1;
    *(void *)(a2 + 48) = v12;
  }
  return result;
}

uint64_t sub_100ADD600(void *a1)
{
  sub_10050F848(a1, a1[3]);
  dispatch thunk of Decoder.singleValueContainer()();
  if (!v1)
  {
    sub_10050F848(v4, v4[3]);
    sub_1005057FC(&qword_10168FAE8);
    sub_100523288(&qword_101690148, &qword_10168FAE8);
    dispatch thunk of SingleValueDecodingContainer.decode<A>(_:)();
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v4);
  }
  return _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)a1);
}

uint64_t sub_100ADD718()
{
  return type metadata accessor for CRLUSDRendering.LoadReceipt(0);
}

uint64_t type metadata accessor for CRLUSDRendering.LoadReceipt(uint64_t a1)
{
  return sub_100512D5C(a1, (uint64_t *)&unk_10168FB20);
}

uint64_t sub_100ADD740()
{
  uint64_t result = type metadata accessor for URL();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for CRLUSDRendering.TaskQueue()
{
  return self;
}

__n128 initializeWithCopy for CRLUSDRendering.SceneConfiguration(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t getEnumTagSinglePayload for CRLUSDRendering.SceneConfiguration(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 72)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for CRLUSDRendering.SceneConfiguration(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(void *)__n128 result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 72) = v3;
  return result;
}

ValueMetadata *type metadata accessor for CRLUSDRendering.SceneConfiguration()
{
  return &type metadata for CRLUSDRendering.SceneConfiguration;
}

uint64_t destroy for CRLUSDRendering.SceneDescription()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for CRLUSDRendering.SceneDescription(uint64_t a1, uint64_t a2)
{
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v3;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for CRLUSDRendering.SceneDescription(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 initializeWithTake for CRLUSDRendering.SceneDescription(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for CRLUSDRendering.SceneDescription(uint64_t a1, uint64_t a2)
{
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for CRLUSDRendering.SceneDescription(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 56)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 32);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CRLUSDRendering.SceneDescription(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 56) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 32) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 56) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLUSDRendering.SceneDescription()
{
  return &type metadata for CRLUSDRendering.SceneDescription;
}

uint64_t destroy for CRLUSDRendering.RendererState(uint64_t *a1)
{
  return sub_100767658(*a1, a1[1], a1[2], a1[3], a1[4], a1[5]);
}

uint64_t *initializeWithCopy for CRLUSDRendering.RendererState(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  unint64_t v4 = a2[1];
  uint64_t v5 = a2[2];
  uint64_t v6 = a2[3];
  uint64_t v7 = a2[4];
  unint64_t v8 = a2[5];
  uint64_t v9 = a2[6];
  sub_1007673E8(*a2, v4, v5, v6, v7, v8);
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  a1[4] = v7;
  a1[5] = v8;
  a1[6] = v9;
  return a1;
}

uint64_t *assignWithCopy for CRLUSDRendering.RendererState(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  unint64_t v4 = a2[1];
  uint64_t v5 = a2[2];
  uint64_t v6 = a2[3];
  uint64_t v7 = a2[4];
  unint64_t v8 = a2[5];
  uint64_t v9 = a2[6];
  sub_1007673E8(*a2, v4, v5, v6, v7, v8);
  uint64_t v10 = *a1;
  unint64_t v11 = a1[1];
  uint64_t v12 = a1[2];
  uint64_t v13 = a1[3];
  uint64_t v14 = a1[4];
  unint64_t v15 = a1[5];
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  a1[4] = v7;
  a1[5] = v8;
  a1[6] = v9;
  sub_100767658(v10, v11, v12, v13, v14, v15);
  return a1;
}

uint64_t *assignWithTake for CRLUSDRendering.RendererState(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 48);
  uint64_t v4 = *a1;
  unint64_t v6 = a1[1];
  uint64_t v5 = a1[2];
  uint64_t v7 = a1[3];
  uint64_t v8 = a1[4];
  unint64_t v9 = a1[5];
  long long v10 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *((_OWORD *)a1 + 1) = v10;
  *((_OWORD *)a1 + 2) = *(_OWORD *)(a2 + 32);
  a1[6] = v3;
  sub_100767658(v4, v6, v5, v7, v8, v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for CRLUSDRendering.RendererState(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 56)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *(void *)(a1 + 40) >> 1;
  if (v2 > 0x80000000) {
    int v3 = ~v2;
  }
  else {
    int v3 = -1;
  }
  return (v3 + 1);
}

double storeEnumTagSinglePayload for CRLUSDRendering.RendererState(uint64_t a1, int a2, int a3)
{
  if (a2 < 0)
  {
    double result = 0.0;
    *(_OWORD *)(a1 + 40) = 0u;
    *(_OWORD *)(a1 + 24) = 0u;
    *(_OWORD *)(a1 + 8) = 0u;
    *(void *)a1 = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(a1 + 56) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      double result = 0.0;
      *(_OWORD *)a1 = 0u;
      *(_OWORD *)(a1 + 16) = 0u;
      *(void *)(a1 + 32) = 0;
      *(void *)(a1 + 40) = 2 * -a2;
      *(void *)(a1 + 48) = 0;
      return result;
    }
    *(unsigned char *)(a1 + 56) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t sub_100ADDCD0(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 40) >> 62;
  if (v1 <= 1) {
    return v1;
  }
  else {
    return (*(_DWORD *)a1 + 2);
  }
}

uint64_t sub_100ADDCEC(uint64_t result)
{
  *(void *)(result + 40) &= 0x3FFFFFFFFFFFFFFFuLL;
  return result;
}

uint64_t sub_100ADDCFC(uint64_t result, uint64_t a2)
{
  if (a2 < 2)
  {
    *(void *)(result + 40) = *(void *)(result + 40) & 1 | (a2 << 62);
  }
  else
  {
    *(void *)double result = (a2 - 2);
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 40) = xmmword_10118D180;
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLUSDRendering.RendererState()
{
  return &type metadata for CRLUSDRendering.RendererState;
}

uint64_t *sub_100ADDD48(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v22 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v22 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for URL();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    unint64_t v9 = (uint64_t *)((char *)a1 + v8);
    long long v10 = (uint64_t *)((char *)a2 + v8);
    uint64_t v11 = *v10;
    unint64_t v12 = v10[1];
    sub_100510D4C(*v10, v12);
    *unint64_t v9 = v11;
    v9[1] = v12;
    uint64_t v13 = a3[6];
    uint64_t v14 = a3[7];
    unint64_t v15 = (char *)a1 + v13;
    long long v16 = (char *)a2 + v13;
    long long v17 = *((_OWORD *)v16 + 3);
    *((_OWORD *)v15 + 2) = *((_OWORD *)v16 + 2);
    *((_OWORD *)v15 + 3) = v17;
    *((void *)v15 + 8) = *((void *)v16 + 8);
    long long v18 = *((_OWORD *)v16 + 1);
    *(_OWORD *)unint64_t v15 = *(_OWORD *)v16;
    *((_OWORD *)v15 + 1) = v18;
    long long v19 = (_OWORD *)((char *)a1 + v14);
    char v20 = (_OWORD *)((char *)a2 + v14);
    long long v21 = v20[1];
    _OWORD *v19 = *v20;
    v19[1] = v21;
  }
  return a1;
}

uint64_t sub_100ADDE64(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for URL();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  int v5 = (uint64_t *)(a1 + *(int *)(a2 + 20));
  uint64_t v6 = *v5;
  unint64_t v7 = v5[1];

  return sub_100510084(v6, v7);
}

uint64_t sub_100ADDEDC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for URL();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (uint64_t *)(a1 + v7);
  unint64_t v9 = (uint64_t *)(a2 + v7);
  uint64_t v10 = *v9;
  unint64_t v11 = v9[1];
  sub_100510D4C(*v9, v11);
  *uint64_t v8 = v10;
  v8[1] = v11;
  uint64_t v12 = a3[6];
  uint64_t v13 = a3[7];
  uint64_t v14 = a1 + v12;
  uint64_t v15 = a2 + v12;
  long long v16 = *(_OWORD *)(v15 + 48);
  *(_OWORD *)(v14 + 32) = *(_OWORD *)(v15 + 32);
  *(_OWORD *)(v14 + 48) = v16;
  *(void *)(v14 + 64) = *(void *)(v15 + 64);
  long long v17 = *(_OWORD *)(v15 + 16);
  *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
  *(_OWORD *)(v14 + 16) = v17;
  long long v18 = (_OWORD *)(a1 + v13);
  long long v19 = (_OWORD *)(a2 + v13);
  long long v20 = v19[1];
  *long long v18 = *v19;
  v18[1] = v20;
  return a1;
}

uint64_t sub_100ADDFA8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for URL();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (uint64_t *)(a1 + v7);
  unint64_t v9 = (uint64_t *)(a2 + v7);
  uint64_t v10 = *v9;
  unint64_t v11 = v9[1];
  sub_100510D4C(*v9, v11);
  uint64_t v12 = *v8;
  unint64_t v13 = v8[1];
  *uint64_t v8 = v10;
  v8[1] = v11;
  sub_100510084(v12, v13);
  uint64_t v14 = a3[6];
  uint64_t v15 = a1 + v14;
  uint64_t v16 = a2 + v14;
  *(_DWORD *)uint64_t v15 = *(_DWORD *)v16;
  *(_OWORD *)(v15 + 16) = *(_OWORD *)(v16 + 16);
  *(void *)(v15 + 32) = *(void *)(v16 + 32);
  *(void *)(v15 + 40) = *(void *)(v16 + 40);
  *(void *)(v15 + 48) = *(void *)(v16 + 48);
  *(void *)(v15 + 56) = *(void *)(v16 + 56);
  *(void *)(v15 + 64) = *(void *)(v16 + 64);
  uint64_t v17 = a3[7];
  long long v18 = (void *)(a1 + v17);
  long long v19 = (void *)(a2 + v17);
  *long long v18 = *v19;
  v18[1] = v19[1];
  void v18[2] = v19[2];
  v18[3] = v19[3];
  return a1;
}

uint64_t sub_100ADE0B8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for URL();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(void *)(v8 + 64) = *(void *)(v9 + 64);
  long long v10 = *(_OWORD *)(v9 + 48);
  *(_OWORD *)(v8 + 32) = *(_OWORD *)(v9 + 32);
  *(_OWORD *)(v8 + 48) = v10;
  long long v11 = *(_OWORD *)(v9 + 16);
  *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
  *(_OWORD *)(v8 + 16) = v11;
  uint64_t v12 = a3[7];
  unint64_t v13 = (_OWORD *)(a1 + v12);
  uint64_t v14 = (_OWORD *)(a2 + v12);
  long long v15 = v14[1];
  *unint64_t v13 = *v14;
  v13[1] = v15;
  return a1;
}

uint64_t sub_100ADE168(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for URL();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = *(void *)(a1 + v7);
  unint64_t v9 = *(void *)(a1 + v7 + 8);
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  sub_100510084(v8, v9);
  uint64_t v10 = a3[6];
  uint64_t v11 = a3[7];
  uint64_t v12 = a1 + v10;
  uint64_t v13 = a2 + v10;
  *(_DWORD *)uint64_t v12 = *(_DWORD *)v13;
  long long v14 = *(_OWORD *)(v13 + 32);
  *(_OWORD *)(v12 + 16) = *(_OWORD *)(v13 + 16);
  *(_OWORD *)(v12 + 32) = v14;
  *(_OWORD *)(v12 + 48) = *(_OWORD *)(v13 + 48);
  *(void *)(v12 + 64) = *(void *)(v13 + 64);
  long long v15 = (_OWORD *)(a1 + v11);
  uint64_t v16 = (_OWORD *)(a2 + v11);
  long long v17 = v16[1];
  *long long v15 = *v16;
  v15[1] = v17;
  return a1;
}

uint64_t sub_100ADE22C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100ADE240);
}

uint64_t sub_100ADE240(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for URL();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    uint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 8) >> 60;
    if (((4 * v10) & 0xC) != 0) {
      return 16 - ((4 * v10) & 0xC | (v10 >> 2));
    }
    else {
      return 0;
    }
  }
}

uint64_t sub_100ADE314(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100ADE328);
}

uint64_t sub_100ADE328(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for URL();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    uint64_t v11 = (void *)(a1 + *(int *)(a4 + 20));
    *uint64_t v11 = 0;
    v11[1] = (unint64_t)(((-(int)a2 >> 2) & 3) - 4 * a2) << 60;
  }
  return result;
}

uint64_t type metadata accessor for CRLUSDRendering.SceneRequest(uint64_t a1)
{
  return sub_100512D5C(a1, qword_10168FD48);
}

uint64_t sub_100ADE414()
{
  uint64_t result = type metadata accessor for URL();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLUSDRendering()
{
  return &type metadata for CRLUSDRendering;
}

ValueMetadata *_s10CodingKeysOMa()
{
  return &_s10CodingKeysON;
}

unint64_t sub_100ADE4E4()
{
  unint64_t result = qword_10168FD88;
  if (!qword_10168FD88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168FD88);
  }
  return result;
}

unint64_t sub_100ADE540()
{
  unint64_t result = qword_10168FD90;
  if (!qword_10168FD90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168FD90);
  }
  return result;
}

unint64_t sub_100ADE598()
{
  unint64_t result = qword_10168FD98;
  if (!qword_10168FD98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168FD98);
  }
  return result;
}

unint64_t sub_100ADE5F0()
{
  unint64_t result = qword_10168FDA0;
  if (!qword_10168FDA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168FDA0);
  }
  return result;
}

unint64_t sub_100ADE648()
{
  unint64_t result = qword_10168FDA8;
  if (!qword_10168FDA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168FDA8);
  }
  return result;
}

unint64_t sub_100ADE6A0()
{
  unint64_t result = qword_10168FDB0;
  if (!qword_10168FDB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168FDB0);
  }
  return result;
}

unint64_t sub_100ADE6F8()
{
  unint64_t result = qword_10168FDB8;
  if (!qword_10168FDB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168FDB8);
  }
  return result;
}

unint64_t sub_100ADE750()
{
  unint64_t result = qword_10168FDC0;
  if (!qword_10168FDC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168FDC0);
  }
  return result;
}

unint64_t sub_100ADE7A8()
{
  unint64_t result = qword_10168FDC8;
  if (!qword_10168FDC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168FDC8);
  }
  return result;
}

unint64_t sub_100ADE800()
{
  unint64_t result = qword_10168FDD0;
  if (!qword_10168FDD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168FDD0);
  }
  return result;
}

unint64_t sub_100ADE854()
{
  unint64_t result = qword_10168FDD8;
  if (!qword_10168FDD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168FDD8);
  }
  return result;
}

uint64_t *sub_100ADE8A8(uint64_t *a1)
{
  return a1;
}

__n128 *sub_100ADE8E0(__n128 *a1, __n128 *a2)
{
  return a2;
}

unint64_t sub_100ADE93C()
{
  unint64_t result = qword_10168FDF0;
  if (!qword_10168FDF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168FDF0);
  }
  return result;
}

uint64_t sub_100ADE990(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CRLUSDRendering.SceneRequest(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_100ADE9F4()
{
  unint64_t result = qword_10168FE30;
  if (!qword_10168FE30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168FE30);
  }
  return result;
}

unint64_t sub_100ADEA48()
{
  unint64_t result = qword_10168FE38;
  if (!qword_10168FE38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168FE38);
  }
  return result;
}

unint64_t sub_100ADEA9C()
{
  unint64_t result = qword_10168FE40;
  if (!qword_10168FE40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168FE40);
  }
  return result;
}

unint64_t sub_100ADEAF0()
{
  unint64_t result = qword_10168FE48;
  if (!qword_10168FE48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168FE48);
  }
  return result;
}

unint64_t sub_100ADEB44()
{
  unint64_t result = qword_10168FE50;
  if (!qword_10168FE50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168FE50);
  }
  return result;
}

unint64_t sub_100ADEB98()
{
  unint64_t result = qword_10168FE58;
  if (!qword_10168FE58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168FE58);
  }
  return result;
}

unint64_t sub_100ADEBEC()
{
  unint64_t result = qword_10168FEA8;
  if (!qword_10168FEA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168FEA8);
  }
  return result;
}

unint64_t sub_100ADEC40()
{
  unint64_t result = qword_10168FEB0;
  if (!qword_10168FEB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168FEB0);
  }
  return result;
}

unint64_t sub_100ADEC94()
{
  unint64_t result = qword_10168FEB8;
  if (!qword_10168FEB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168FEB8);
  }
  return result;
}

unint64_t sub_100ADECE8()
{
  unint64_t result = qword_10168FEC0;
  if (!qword_10168FEC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168FEC0);
  }
  return result;
}

unint64_t sub_100ADED3C()
{
  unint64_t result = qword_10168FEE0;
  if (!qword_10168FEE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168FEE0);
  }
  return result;
}

unint64_t sub_100ADED90()
{
  unint64_t result = qword_10168FEF0;
  if (!qword_10168FEF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168FEF0);
  }
  return result;
}

unint64_t sub_100ADEDE4()
{
  unint64_t result = qword_10168FF30;
  if (!qword_10168FF30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168FF30);
  }
  return result;
}

unint64_t sub_100ADEE38()
{
  unint64_t result = qword_10168FF38;
  if (!qword_10168FF38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168FF38);
  }
  return result;
}

unint64_t sub_100ADEE8C()
{
  unint64_t result = qword_10168FF40;
  if (!qword_10168FF40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168FF40);
  }
  return result;
}

unint64_t sub_100ADEEE0()
{
  unint64_t result = qword_10168FF48;
  if (!qword_10168FF48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168FF48);
  }
  return result;
}

unint64_t sub_100ADEF34()
{
  unint64_t result = qword_10168FF50;
  if (!qword_10168FF50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168FF50);
  }
  return result;
}

unint64_t sub_100ADEF88()
{
  unint64_t result = qword_10168FF58;
  if (!qword_10168FF58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168FF58);
  }
  return result;
}

unint64_t sub_100ADEFDC()
{
  unint64_t result = qword_10168FF60;
  if (!qword_10168FF60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168FF60);
  }
  return result;
}

unint64_t sub_100ADF030()
{
  unint64_t result = qword_10168FF98;
  if (!qword_10168FF98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168FF98);
  }
  return result;
}

unint64_t sub_100ADF084()
{
  unint64_t result = qword_10168FFA0;
  if (!qword_10168FFA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168FFA0);
  }
  return result;
}

unint64_t sub_100ADF0D8()
{
  unint64_t result = qword_10168FFE8;
  if (!qword_10168FFE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168FFE8);
  }
  return result;
}

unint64_t sub_100ADF12C()
{
  unint64_t result = qword_10168FFF0;
  if (!qword_10168FFF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168FFF0);
  }
  return result;
}

unint64_t sub_100ADF180()
{
  unint64_t result = qword_10168FFF8;
  if (!qword_10168FFF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10168FFF8);
  }
  return result;
}

unint64_t sub_100ADF1D4()
{
  unint64_t result = qword_101690000;
  if (!qword_101690000)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101690000);
  }
  return result;
}

unint64_t sub_100ADF228()
{
  unint64_t result = qword_101690008;
  if (!qword_101690008)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101690008);
  }
  return result;
}

unint64_t sub_100ADF27C()
{
  unint64_t result = qword_101690010;
  if (!qword_101690010)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101690010);
  }
  return result;
}

unint64_t sub_100ADF2D0()
{
  unint64_t result = qword_101690018;
  if (!qword_101690018)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101690018);
  }
  return result;
}

unint64_t sub_100ADF324()
{
  unint64_t result = qword_101690020;
  if (!qword_101690020)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101690020);
  }
  return result;
}

unint64_t sub_100ADF378()
{
  unint64_t result = qword_101690028;
  if (!qword_101690028)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101690028);
  }
  return result;
}

unint64_t sub_100ADF3CC()
{
  unint64_t result = qword_101690070;
  if (!qword_101690070)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101690070);
  }
  return result;
}

unint64_t sub_100ADF420()
{
  unint64_t result = qword_101690080;
  if (!qword_101690080)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101690080);
  }
  return result;
}

unint64_t sub_100ADF474()
{
  unint64_t result = qword_1016900A8;
  if (!qword_1016900A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016900A8);
  }
  return result;
}

unint64_t sub_100ADF4C8()
{
  unint64_t result = qword_1016900B0;
  if (!qword_1016900B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016900B0);
  }
  return result;
}

unint64_t sub_100ADF51C()
{
  unint64_t result = qword_1016900C8;
  if (!qword_1016900C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016900C8);
  }
  return result;
}

unint64_t sub_100ADF570()
{
  unint64_t result = qword_1016900E0;
  if (!qword_1016900E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016900E0);
  }
  return result;
}

uint64_t sub_100ADF5C4(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100522D34(&qword_1016900B8);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100ADF640()
{
  unint64_t result = qword_1016900F0;
  if (!qword_1016900F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016900F0);
  }
  return result;
}

uint64_t sub_100ADF694(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100522D34(&qword_10167D908);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100ADF6F8()
{
  unint64_t result = qword_101690100;
  if (!qword_101690100)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101690100);
  }
  return result;
}

uint64_t sub_100ADF74C(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_100ADF758(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1005057FC(&qword_101690110);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100ADF7C0(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100ADF808()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100ADF818(uint64_t a1)
{
  return sub_100AD77B4(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_100ADF828(uint64_t a1)
{
  return sub_100ADF92C(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100AD79F8);
}

uint64_t sub_100ADF844()
{
  uint64_t v1 = sub_1005057FC(&qword_101690130);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_100ADF914(uint64_t a1)
{
  return sub_100ADF92C(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100AD7AF8);
}

uint64_t sub_100ADF92C(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v4 = *(void *)(sub_1005057FC(&qword_101690130) - 8);
  uint64_t v5 = *(void *)(v2 + 16);
  uint64_t v6 = v2 + ((*(unsigned __int8 *)(v4 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));

  return a2(a1, v5, v6);
}

ValueMetadata *type metadata accessor for CRLUSDRendering.SceneDescription.CodingKeys()
{
  return &type metadata for CRLUSDRendering.SceneDescription.CodingKeys;
}

ValueMetadata *type metadata accessor for CRLUSDRendering.SceneConfiguration.CodingKeys()
{
  return &type metadata for CRLUSDRendering.SceneConfiguration.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for CRLUSDRendering.RendererError.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *uint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100ADFAACLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLUSDRendering.RendererError.CodingKeys()
{
  return &type metadata for CRLUSDRendering.RendererError.CodingKeys;
}

ValueMetadata *type metadata accessor for CRLUSDRendering.RendererError.CodingErrorCodingKeys()
{
  return &type metadata for CRLUSDRendering.RendererError.CodingErrorCodingKeys;
}

ValueMetadata *type metadata accessor for CRLUSDRendering.RendererError.UrlErrorCodingKeys()
{
  return &type metadata for CRLUSDRendering.RendererError.UrlErrorCodingKeys;
}

ValueMetadata *type metadata accessor for CRLUSDRendering.RendererError.LoadingErrorCodingKeys()
{
  return &type metadata for CRLUSDRendering.RendererError.LoadingErrorCodingKeys;
}

ValueMetadata *type metadata accessor for CRLUSDRendering.RendererError.StateErrorCodingKeys()
{
  return &type metadata for CRLUSDRendering.RendererError.StateErrorCodingKeys;
}

ValueMetadata *type metadata accessor for CRLUSDRendering.RendererError.TimeoutErrorCodingKeys()
{
  return &type metadata for CRLUSDRendering.RendererError.TimeoutErrorCodingKeys;
}

ValueMetadata *type metadata accessor for CRLUSDRendering.RendererError.ExtensionErrorCodingKeys()
{
  return &type metadata for CRLUSDRendering.RendererError.ExtensionErrorCodingKeys;
}

ValueMetadata *type metadata accessor for CRLUSDRendering.RendererError.GenericErrorCodingKeys()
{
  return &type metadata for CRLUSDRendering.RendererError.GenericErrorCodingKeys;
}

ValueMetadata *type metadata accessor for CRLUSDRendering.RendererState.CodingKeys()
{
  return &type metadata for CRLUSDRendering.RendererState.CodingKeys;
}

ValueMetadata *type metadata accessor for CRLUSDRendering.RendererState.DisabledCodingKeys()
{
  return &type metadata for CRLUSDRendering.RendererState.DisabledCodingKeys;
}

ValueMetadata *type metadata accessor for CRLUSDRendering.RendererState.RequestedCodingKeys()
{
  return &type metadata for CRLUSDRendering.RendererState.RequestedCodingKeys;
}

ValueMetadata *type metadata accessor for CRLUSDRendering.RendererState.LoadingCodingKeys()
{
  return &type metadata for CRLUSDRendering.RendererState.LoadingCodingKeys;
}

ValueMetadata *type metadata accessor for CRLUSDRendering.RendererState.RenderingCodingKeys()
{
  return &type metadata for CRLUSDRendering.RendererState.RenderingCodingKeys;
}

ValueMetadata *type metadata accessor for CRLUSDRendering.RendererState.ErrorCodingKeys()
{
  return &type metadata for CRLUSDRendering.RendererState.ErrorCodingKeys;
}

ValueMetadata *type metadata accessor for CRLUSDRendering.SceneDescription.AnimationState.PlaybackState.CodingKeys()
{
  return &type metadata for CRLUSDRendering.SceneDescription.AnimationState.PlaybackState.CodingKeys;
}

ValueMetadata *type metadata accessor for CRLUSDRendering.SceneDescription.AnimationState.CodingKeys()
{
  return &type metadata for CRLUSDRendering.SceneDescription.AnimationState.CodingKeys;
}

ValueMetadata *type metadata accessor for CRLUSDRendering.SceneDescription.AnimationState.InactiveCodingKeys()
{
  return &type metadata for CRLUSDRendering.SceneDescription.AnimationState.InactiveCodingKeys;
}

unsigned char *_s8Freeform15CRLUSDRenderingO13RendererErrorO21CodingErrorCodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x100ADFC84);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLUSDRendering.SceneDescription.AnimationState.ActiveCodingKeys()
{
  return &type metadata for CRLUSDRendering.SceneDescription.AnimationState.ActiveCodingKeys;
}

unsigned char *_s8Freeform15CRLUSDRenderingO18SceneConfigurationV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100ADFD88);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLUSDRendering.SceneAction.CodingKeys()
{
  return &type metadata for CRLUSDRendering.SceneAction.CodingKeys;
}

unsigned char *_s10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100ADFE8CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLUSDRendering.SceneAction.PlayAnimationsCodingKeys()
{
  return &type metadata for CRLUSDRendering.SceneAction.PlayAnimationsCodingKeys;
}

ValueMetadata *type metadata accessor for CRLUSDRendering.SceneAction.PauseAnimationsCodingKeys()
{
  return &type metadata for CRLUSDRendering.SceneAction.PauseAnimationsCodingKeys;
}

ValueMetadata *type metadata accessor for CRLUSDRendering.SceneAction.ResumeAnimationsCodingKeys()
{
  return &type metadata for CRLUSDRendering.SceneAction.ResumeAnimationsCodingKeys;
}

ValueMetadata *type metadata accessor for CRLUSDRendering.SceneAction.ResetAnimationsCodingKeys()
{
  return &type metadata for CRLUSDRendering.SceneAction.ResetAnimationsCodingKeys;
}

ValueMetadata *type metadata accessor for CRLUSDRendering.SceneAction.StopAnimationsCodingKeys()
{
  return &type metadata for CRLUSDRendering.SceneAction.StopAnimationsCodingKeys;
}

unsigned char *_s8Freeform15CRLUSDRenderingO16SceneDescriptionV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100ADFFD0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLUSDRendering.SceneRequest.CodingKeys()
{
  return &type metadata for CRLUSDRendering.SceneRequest.CodingKeys;
}

uint64_t getEnumTagSinglePayload for CRLUSDRendering.SceneAction(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFB && *(unsigned char *)(a1 + 9)) {
    return (*(_DWORD *)a1 + 251);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 < 2) {
    return 0;
  }
  unsigned int v4 = (v3 + 2147483646) & 0x7FFFFFFF;
  uint64_t result = v4 - 3;
  if (v4 <= 3) {
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for CRLUSDRendering.SceneAction(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFA)
  {
    *(void *)uint64_t result = 0;
    *(unsigned char *)(result + 8) = 0;
    *(_DWORD *)uint64_t result = a2 - 251;
    if (a3 >= 0xFB) {
      *(unsigned char *)(result + 9) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFB) {
      *(unsigned char *)(result + 9) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 8) = a2 + 5;
    }
  }
  return result;
}

uint64_t sub_100AE0098(uint64_t a1)
{
  unsigned int v1 = *(unsigned __int8 *)(a1 + 8);
  BOOL v2 = v1 >= 2;
  int v3 = (v1 + 2147483646) & 0x7FFFFFFF;
  if (v2) {
    return (v3 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_100AE00B4(uint64_t result, unsigned int a2)
{
  if (a2 > 0xFE)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)uint64_t result = a2 - 255;
  }
  else if (a2)
  {
    *(unsigned char *)(result + 8) = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLUSDRendering.SceneAction()
{
  return &type metadata for CRLUSDRendering.SceneAction;
}

uint64_t getEnumTagSinglePayload for CRLUSDRendering.SceneDescription.AnimationState.PlaybackState(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && a1[8]) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *a1;
  BOOL v4 = v3 >= 2;
  int v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for CRLUSDRendering.SceneDescription.AnimationState.PlaybackState(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(void *)uint64_t result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2) {
      *(unsigned char *)uint64_t result = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLUSDRendering.SceneDescription.AnimationState.PlaybackState()
{
  return &type metadata for CRLUSDRendering.SceneDescription.AnimationState.PlaybackState;
}

uint64_t getEnumTagSinglePayload for CRLUSDRendering.SceneDescription.AnimationState(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE && a1[8]) {
    return (*(_DWORD *)a1 + 254);
  }
  unsigned int v3 = *a1;
  BOOL v4 = v3 >= 2;
  unsigned int v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4) {
    unsigned int v5 = -1;
  }
  if (v5 + 1 >= 2) {
    return v5;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for CRLUSDRendering.SceneDescription.AnimationState(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(void *)uint64_t result = 0;
    *(_DWORD *)uint64_t result = a2 - 254;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2) {
      *(unsigned char *)uint64_t result = a2 + 2;
    }
  }
  return result;
}

uint64_t sub_100AE0228(unsigned __int8 *a1)
{
  unsigned int v1 = *a1;
  BOOL v2 = v1 >= 2;
  int v3 = (v1 + 2147483646) & 0x7FFFFFFF;
  if (v2) {
    return (v3 + 1);
  }
  else {
    return 0;
  }
}

void *sub_100AE0244(void *result, unsigned int a2)
{
  if (a2 > 0xFE)
  {
    *uint64_t result = a2 - 255;
  }
  else if (a2)
  {
    *(unsigned char *)uint64_t result = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLUSDRendering.SceneDescription.AnimationState()
{
  return &type metadata for CRLUSDRendering.SceneDescription.AnimationState;
}

uint64_t destroy for CRLUSDRendering.RendererError(uint64_t a1)
{
  return sub_1007676B8(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
}

uint64_t _s8Freeform15CRLUSDRenderingO13RendererErrorOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  unint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_100767448(*(void *)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for CRLUSDRendering.RendererError(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  unint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_100767448(*(void *)a2, v4, v5);
  uint64_t v6 = *(void *)a1;
  unint64_t v7 = *(void *)(a1 + 8);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  char v8 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v5;
  sub_1007676B8(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for CRLUSDRendering.RendererError(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)a1;
  unint64_t v5 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  char v6 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v3;
  sub_1007676B8(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for CRLUSDRendering.RendererError(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFA && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 250);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 6) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for CRLUSDRendering.RendererError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xF9)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)uint64_t result = a2 - 250;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFA) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFA) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_100AE0404(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 16) <= 5u) {
    return *(unsigned __int8 *)(a1 + 16);
  }
  else {
    return (*(_DWORD *)a1 + 6);
  }
}

uint64_t sub_100AE041C(uint64_t result, unsigned int a2)
{
  if (a2 >= 6)
  {
    *(void *)uint64_t result = a2 - 6;
    *(void *)(result + 8) = 0;
    LOBYTE(a2) = 6;
  }
  *(unsigned char *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for CRLUSDRendering.RendererError()
{
  return &type metadata for CRLUSDRendering.RendererError;
}

unint64_t sub_100AE0448()
{
  unint64_t result = qword_101690150;
  if (!qword_101690150)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101690150);
  }
  return result;
}

unint64_t sub_100AE04A0()
{
  unint64_t result = qword_101690158;
  if (!qword_101690158)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101690158);
  }
  return result;
}

unint64_t sub_100AE04F8()
{
  unint64_t result = qword_101690160;
  if (!qword_101690160)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101690160);
  }
  return result;
}

unint64_t sub_100AE0550()
{
  unint64_t result = qword_101690168;
  if (!qword_101690168)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101690168);
  }
  return result;
}

unint64_t sub_100AE05A8()
{
  unint64_t result = qword_101690170;
  if (!qword_101690170)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101690170);
  }
  return result;
}

unint64_t sub_100AE0600()
{
  unint64_t result = qword_101690178;
  if (!qword_101690178)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101690178);
  }
  return result;
}

unint64_t sub_100AE0658()
{
  unint64_t result = qword_101690180;
  if (!qword_101690180)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101690180);
  }
  return result;
}

unint64_t sub_100AE06B0()
{
  unint64_t result = qword_101690188;
  if (!qword_101690188)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101690188);
  }
  return result;
}

unint64_t sub_100AE0708()
{
  unint64_t result = qword_101690190;
  if (!qword_101690190)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101690190);
  }
  return result;
}

unint64_t sub_100AE0760()
{
  unint64_t result = qword_101690198;
  if (!qword_101690198)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101690198);
  }
  return result;
}

unint64_t sub_100AE07B8()
{
  unint64_t result = qword_1016901A0;
  if (!qword_1016901A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016901A0);
  }
  return result;
}

unint64_t sub_100AE0810()
{
  unint64_t result = qword_1016901A8;
  if (!qword_1016901A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016901A8);
  }
  return result;
}

unint64_t sub_100AE0868()
{
  unint64_t result = qword_1016901B0;
  if (!qword_1016901B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016901B0);
  }
  return result;
}

unint64_t sub_100AE08C0()
{
  unint64_t result = qword_1016901B8;
  if (!qword_1016901B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016901B8);
  }
  return result;
}

unint64_t sub_100AE0918()
{
  unint64_t result = qword_1016901C0;
  if (!qword_1016901C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016901C0);
  }
  return result;
}

unint64_t sub_100AE0970()
{
  unint64_t result = qword_1016901C8;
  if (!qword_1016901C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016901C8);
  }
  return result;
}

unint64_t sub_100AE09C8()
{
  unint64_t result = qword_1016901D0;
  if (!qword_1016901D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016901D0);
  }
  return result;
}

unint64_t sub_100AE0A20()
{
  unint64_t result = qword_1016901D8;
  if (!qword_1016901D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016901D8);
  }
  return result;
}

unint64_t sub_100AE0A78()
{
  unint64_t result = qword_1016901E0;
  if (!qword_1016901E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016901E0);
  }
  return result;
}

unint64_t sub_100AE0AD0()
{
  unint64_t result = qword_1016901E8;
  if (!qword_1016901E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016901E8);
  }
  return result;
}

unint64_t sub_100AE0B28()
{
  unint64_t result = qword_1016901F0;
  if (!qword_1016901F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016901F0);
  }
  return result;
}

unint64_t sub_100AE0B80()
{
  unint64_t result = qword_1016901F8;
  if (!qword_1016901F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016901F8);
  }
  return result;
}

unint64_t sub_100AE0BD8()
{
  unint64_t result = qword_101690200;
  if (!qword_101690200)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101690200);
  }
  return result;
}

unint64_t sub_100AE0C30()
{
  unint64_t result = qword_101690208;
  if (!qword_101690208)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101690208);
  }
  return result;
}

unint64_t sub_100AE0C88()
{
  unint64_t result = qword_101690210;
  if (!qword_101690210)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101690210);
  }
  return result;
}

unint64_t sub_100AE0CE0()
{
  unint64_t result = qword_101690218;
  if (!qword_101690218)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101690218);
  }
  return result;
}

unint64_t sub_100AE0D38()
{
  unint64_t result = qword_101690220;
  if (!qword_101690220)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101690220);
  }
  return result;
}

unint64_t sub_100AE0D90()
{
  unint64_t result = qword_101690228;
  if (!qword_101690228)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101690228);
  }
  return result;
}

unint64_t sub_100AE0DE8()
{
  unint64_t result = qword_101690230;
  if (!qword_101690230)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101690230);
  }
  return result;
}

unint64_t sub_100AE0E40()
{
  unint64_t result = qword_101690238;
  if (!qword_101690238)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101690238);
  }
  return result;
}

unint64_t sub_100AE0E98()
{
  unint64_t result = qword_101690240;
  if (!qword_101690240)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101690240);
  }
  return result;
}

unint64_t sub_100AE0EF0()
{
  unint64_t result = qword_101690248;
  if (!qword_101690248)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101690248);
  }
  return result;
}

unint64_t sub_100AE0F48()
{
  unint64_t result = qword_101690250;
  if (!qword_101690250)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101690250);
  }
  return result;
}

unint64_t sub_100AE0FA0()
{
  unint64_t result = qword_101690258;
  if (!qword_101690258)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101690258);
  }
  return result;
}

unint64_t sub_100AE0FF8()
{
  unint64_t result = qword_101690260;
  if (!qword_101690260)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101690260);
  }
  return result;
}

unint64_t sub_100AE1050()
{
  unint64_t result = qword_101690268;
  if (!qword_101690268)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101690268);
  }
  return result;
}

unint64_t sub_100AE10A8()
{
  unint64_t result = qword_101690270;
  if (!qword_101690270)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101690270);
  }
  return result;
}

unint64_t sub_100AE1100()
{
  unint64_t result = qword_101690278;
  if (!qword_101690278)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101690278);
  }
  return result;
}

unint64_t sub_100AE1158()
{
  unint64_t result = qword_101690280;
  if (!qword_101690280)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101690280);
  }
  return result;
}

unint64_t sub_100AE11B0()
{
  unint64_t result = qword_101690288;
  if (!qword_101690288)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101690288);
  }
  return result;
}

unint64_t sub_100AE1208()
{
  unint64_t result = qword_101690290;
  if (!qword_101690290)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101690290);
  }
  return result;
}

unint64_t sub_100AE1260()
{
  unint64_t result = qword_101690298;
  if (!qword_101690298)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101690298);
  }
  return result;
}

unint64_t sub_100AE12B8()
{
  unint64_t result = qword_1016902A0;
  if (!qword_1016902A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016902A0);
  }
  return result;
}

unint64_t sub_100AE1310()
{
  unint64_t result = qword_1016902A8;
  if (!qword_1016902A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016902A8);
  }
  return result;
}

unint64_t sub_100AE1368()
{
  unint64_t result = qword_1016902B0;
  if (!qword_1016902B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016902B0);
  }
  return result;
}

unint64_t sub_100AE13C0()
{
  unint64_t result = qword_1016902B8;
  if (!qword_1016902B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016902B8);
  }
  return result;
}

unint64_t sub_100AE1418()
{
  unint64_t result = qword_1016902C0;
  if (!qword_1016902C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016902C0);
  }
  return result;
}

unint64_t sub_100AE1470()
{
  unint64_t result = qword_1016902C8;
  if (!qword_1016902C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016902C8);
  }
  return result;
}

unint64_t sub_100AE14C8()
{
  unint64_t result = qword_1016902D0;
  if (!qword_1016902D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016902D0);
  }
  return result;
}

unint64_t sub_100AE1520()
{
  unint64_t result = qword_1016902D8;
  if (!qword_1016902D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016902D8);
  }
  return result;
}

unint64_t sub_100AE1578()
{
  unint64_t result = qword_1016902E0;
  if (!qword_1016902E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016902E0);
  }
  return result;
}

unint64_t sub_100AE15D0()
{
  unint64_t result = qword_1016902E8;
  if (!qword_1016902E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016902E8);
  }
  return result;
}

unint64_t sub_100AE1628()
{
  unint64_t result = qword_1016902F0;
  if (!qword_1016902F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016902F0);
  }
  return result;
}

unint64_t sub_100AE1680()
{
  unint64_t result = qword_1016902F8;
  if (!qword_1016902F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016902F8);
  }
  return result;
}

unint64_t sub_100AE16D8()
{
  unint64_t result = qword_101690300;
  if (!qword_101690300)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101690300);
  }
  return result;
}

unint64_t sub_100AE1730()
{
  unint64_t result = qword_101690308;
  if (!qword_101690308)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101690308);
  }
  return result;
}

unint64_t sub_100AE1788()
{
  unint64_t result = qword_101690310;
  if (!qword_101690310)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101690310);
  }
  return result;
}

unint64_t sub_100AE17E0()
{
  unint64_t result = qword_101690318;
  if (!qword_101690318)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101690318);
  }
  return result;
}

unint64_t sub_100AE1838()
{
  unint64_t result = qword_101690320;
  if (!qword_101690320)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101690320);
  }
  return result;
}

unint64_t sub_100AE1890()
{
  unint64_t result = qword_101690328;
  if (!qword_101690328)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101690328);
  }
  return result;
}

unint64_t sub_100AE18E8()
{
  unint64_t result = qword_101690330;
  if (!qword_101690330)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101690330);
  }
  return result;
}

unint64_t sub_100AE1940()
{
  unint64_t result = qword_101690338;
  if (!qword_101690338)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101690338);
  }
  return result;
}

unint64_t sub_100AE1998()
{
  unint64_t result = qword_101690340;
  if (!qword_101690340)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101690340);
  }
  return result;
}

unint64_t sub_100AE19F0()
{
  unint64_t result = qword_101690348;
  if (!qword_101690348)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101690348);
  }
  return result;
}

unint64_t sub_100AE1A48()
{
  unint64_t result = qword_101690350;
  if (!qword_101690350)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101690350);
  }
  return result;
}

unint64_t sub_100AE1AA0()
{
  unint64_t result = qword_101690358;
  if (!qword_101690358)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101690358);
  }
  return result;
}

unint64_t sub_100AE1AF8()
{
  unint64_t result = qword_101690360;
  if (!qword_101690360)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101690360);
  }
  return result;
}

unint64_t sub_100AE1B50()
{
  unint64_t result = qword_101690368;
  if (!qword_101690368)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101690368);
  }
  return result;
}

unint64_t sub_100AE1BA8()
{
  unint64_t result = qword_101690370;
  if (!qword_101690370)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101690370);
  }
  return result;
}

unint64_t sub_100AE1C00()
{
  unint64_t result = qword_101690378;
  if (!qword_101690378)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101690378);
  }
  return result;
}

unint64_t sub_100AE1C58()
{
  unint64_t result = qword_101690380;
  if (!qword_101690380)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101690380);
  }
  return result;
}

unint64_t sub_100AE1CB0()
{
  unint64_t result = qword_101690388;
  if (!qword_101690388)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101690388);
  }
  return result;
}

uint64_t type metadata accessor for CRLAnalyticsFileImported()
{
  return self;
}

void sub_100AE1D28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_100A39814((uint64_t)_swiftEmptyArrayStorage);
  NSString v4 = String._bridgeToObjectiveC()();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_100973904((uint64_t)v4, 0xD000000000000011, 0x8000000101270190, isUniquelyReferenced_nonNull_native);
  swift_bridgeObjectRelease();
  id v6 = [objc_allocWithZone((Class)NSNumber) initWithUnsignedLongLong:a3];
  char v7 = swift_isUniquelyReferenced_nonNull_native();
  sub_100973904((uint64_t)v6, 0x6D657449656C6966, 0xEC000000657A6953, v7);
  swift_bridgeObjectRelease();
  char v8 = self;
  NSString v9 = String._bridgeToObjectiveC()();
  sub_10057BCD8();
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v8 sendEventInDomain:v9 lazily:1 eventPayload:isa];
}

void sub_100AE1EBC(uint64_t a1)
{
  uint64_t v2 = a1 + 64;
  uint64_t v3 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v4 = -1;
  if (v3 < 64) {
    uint64_t v4 = ~(-1 << v3);
  }
  unint64_t v5 = v4 & *(void *)(a1 + 64);
  int64_t v6 = (unint64_t)(v3 + 63) >> 6;
  swift_bridgeObjectRetain();
  int64_t v7 = 0;
  while (v5)
  {
    unint64_t v9 = __clz(__rbit64(v5));
    v5 &= v5 - 1;
    unint64_t v10 = v9 | (v7 << 6);
LABEL_23:
    uint64_t v14 = *(void *)(*(void *)(a1 + 56) + 8 * v10);
    long long v15 = *(void **)(v14 + 24);
    swift_retain();
    id v16 = [v15 anyObject];
    if (v16)
    {
      char v8 = v16;
      swift_release();
    }
    else
    {
      id v17 = [*(id *)(v14 + 32) anyObject];
      swift_unknownObjectRelease();
      if (v17)
      {
        swift_release();
      }
      else
      {
        id v18 = *(id *)(v14 + 16);
        swift_release();
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
      }
    }
  }
  int64_t v11 = v7 + 1;
  if (__OFADD__(v7, 1))
  {
    __break(1u);
    goto LABEL_31;
  }
  if (v11 >= v6) {
    goto LABEL_29;
  }
  unint64_t v12 = *(void *)(v2 + 8 * v11);
  ++v7;
  if (v12) {
    goto LABEL_22;
  }
  int64_t v7 = v11 + 1;
  if (v11 + 1 >= v6) {
    goto LABEL_29;
  }
  unint64_t v12 = *(void *)(v2 + 8 * v7);
  if (v12) {
    goto LABEL_22;
  }
  int64_t v7 = v11 + 2;
  if (v11 + 2 >= v6) {
    goto LABEL_29;
  }
  unint64_t v12 = *(void *)(v2 + 8 * v7);
  if (v12) {
    goto LABEL_22;
  }
  int64_t v7 = v11 + 3;
  if (v11 + 3 >= v6) {
    goto LABEL_29;
  }
  unint64_t v12 = *(void *)(v2 + 8 * v7);
  if (v12)
  {
LABEL_22:
    unint64_t v5 = (v12 - 1) & v12;
    unint64_t v10 = __clz(__rbit64(v12)) + (v7 << 6);
    goto LABEL_23;
  }
  int64_t v13 = v11 + 4;
  if (v13 >= v6)
  {
LABEL_29:
    swift_release();
    return;
  }
  unint64_t v12 = *(void *)(v2 + 8 * v13);
  if (v12)
  {
    int64_t v7 = v13;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v7 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      break;
    }
    if (v7 >= v6) {
      goto LABEL_29;
    }
    unint64_t v12 = *(void *)(v2 + 8 * v7);
    ++v13;
    if (v12) {
      goto LABEL_22;
    }
  }
LABEL_31:
  __break(1u);
}

double *sub_100AE20F4(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  unint64_t result = _swiftEmptyArrayStorage;
  if (v2)
  {
    specialized ContiguousArray.reserveCapacity(_:)();
    unint64_t result = (double *)sub_10058EAB8(a1);
    uint64_t v4 = (uint64_t)result;
    int v6 = v5;
    uint64_t v7 = 0;
    uint64_t v8 = a1 + 64;
    uint64_t v17 = v2;
    while ((v4 & 0x8000000000000000) == 0 && v4 < 1 << *(unsigned char *)(a1 + 32))
    {
      unint64_t v10 = (unint64_t)v4 >> 6;
      if ((*(void *)(v8 + 8 * ((unint64_t)v4 >> 6)) & (1 << v4)) == 0) {
        goto LABEL_22;
      }
      if (*(_DWORD *)(a1 + 36) != v6) {
        goto LABEL_23;
      }
      uint64_t v18 = v7;
      id v11 = *(id *)(*(void *)(*(void *)(a1 + 56) + 8 * v4) + 16);
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      unint64_t result = (double *)specialized ContiguousArray._endMutation()();
      int64_t v9 = 1 << *(unsigned char *)(a1 + 32);
      if (v4 >= v9) {
        goto LABEL_24;
      }
      uint64_t v12 = *(void *)(v8 + 8 * v10);
      if ((v12 & (1 << v4)) == 0) {
        goto LABEL_25;
      }
      if (*(_DWORD *)(a1 + 36) != v6) {
        goto LABEL_26;
      }
      unint64_t v13 = v12 & (-2 << (v4 & 0x3F));
      if (v13)
      {
        int64_t v9 = __clz(__rbit64(v13)) | v4 & 0xFFFFFFFFFFFFFFC0;
      }
      else
      {
        unint64_t v14 = v10 + 1;
        unint64_t v15 = (unint64_t)(v9 + 63) >> 6;
        if (v10 + 1 < v15)
        {
          unint64_t v16 = *(void *)(v8 + 8 * v14);
          if (v16)
          {
LABEL_18:
            int64_t v9 = __clz(__rbit64(v16)) + (v14 << 6);
          }
          else
          {
            while (v15 - 2 != v10)
            {
              unint64_t v16 = *(void *)(a1 + 80 + 8 * v10++);
              if (v16)
              {
                unint64_t v14 = v10 + 1;
                goto LABEL_18;
              }
            }
          }
        }
      }
      uint64_t v7 = v18 + 1;
      uint64_t v4 = v9;
      if (v18 + 1 == v17) {
        return _swiftEmptyArrayStorage;
      }
    }
    __break(1u);
LABEL_22:
    __break(1u);
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
  }
  return result;
}

uint64_t sub_100AE22D8()
{
  uint64_t v0 = type metadata accessor for CRLDataAssetStorage();
  uint64_t v1 = swift_allocObject();
  type metadata accessor for CRLUnfairLock();
  uint64_t v2 = swift_allocObject();
  uint64_t v3 = (_DWORD *)swift_slowAlloc();
  *uint64_t v3 = 0;
  *(void *)(v2 + 16) = v3;
  atomic_thread_fence(memory_order_acq_rel);
  *(void *)(v1 + 48) = v2;
  uint64_t v4 = v1 + OBJC_IVAR____TtC8Freeform19CRLDataAssetStorage__assetUUID;
  uint64_t v5 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v4, 1, 1, v5);
  *(void *)(v1 + OBJC_IVAR____TtC8Freeform19CRLDataAssetStorage__temporaryDirectoryForAVAsset) = 0;
  uint64_t v6 = v1 + OBJC_IVAR____TtC8Freeform19CRLDataAssetStorage__temporaryURLForAVAsset;
  uint64_t v7 = type metadata accessor for URL();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v6, 1, 1, v7);
  *(_OWORD *)(v1 + 16) = xmmword_101180360;
  *(void *)(v1 + 32) = 0;
  *(void *)(v1 + 40) = 0xE000000000000000;
  void v13[3] = v0;
  double v13[4] = &off_1015160C0;
  v13[0] = v1;
  uint64_t v8 = (objc_class *)type metadata accessor for CRLAsset();
  id v9 = objc_allocWithZone(v8);
  sub_1005498A4((uint64_t)v13, (uint64_t)v9 + OBJC_IVAR____TtC8Freeform8CRLAsset_storage);
  v12.receiver = v9;
  v12.super_class = v8;
  swift_retain();
  id v10 = [super init];
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v13);
  uint64_t result = swift_release();
  qword_10171B848 = (uint64_t)v10;
  return result;
}

uint64_t sub_100AE2510()
{
  sub_1005498A4(v0 + OBJC_IVAR____TtC8Freeform8CRLAsset_storage, (uint64_t)v22);
  sub_1005057FC(&qword_101693DB0);
  type metadata accessor for CRLAssetBackedAssetStorage();
  if (swift_dynamicCast())
  {
    uint64_t v1 = (char *)*(id *)(v21 + OBJC_IVAR____TtC8Freeform26CRLAssetBackedAssetStorage_store);
    swift_release();
    uint64_t v2 = *(void *)&v1[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetManagerLock];
    os_unfair_lock_lock(*(os_unfair_lock_t *)(v2 + 16));
    uint64_t v3 = OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetManager;
    uint64_t v4 = *(void **)&v1[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetManager];
    if (v4)
    {
      id v5 = *(id *)&v1[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetManager];
    }
    else
    {
      long long v19 = (objc_class *)type metadata accessor for CRLAssetManager();
      uint64_t v7 = (char *)objc_allocWithZone(v19);
      swift_unknownObjectWeakInit();
      uint64_t v8 = OBJC_IVAR____TtC8Freeform15CRLAssetManager_lock;
      type metadata accessor for CRLUnfairLock();
      uint64_t v9 = swift_allocObject();
      id v10 = v1;
      id v11 = v7;
      objc_super v12 = (_DWORD *)swift_slowAlloc();
      *objc_super v12 = 0;
      *(void *)(v9 + 16) = v12;
      atomic_thread_fence(memory_order_acq_rel);
      *(void *)&v7[v8] = v9;
      *(void *)&v11[OBJC_IVAR____TtC8Freeform15CRLAssetManager_assets] = _swiftEmptyDictionarySingleton;
      uint64_t v13 = OBJC_IVAR____TtC8Freeform15CRLAssetManager_owners;
      *(void *)&v11[v13] = [self mapTableWithKeyOptions:517 valueOptions:0];
      *(void *)&v11[OBJC_IVAR____TtC8Freeform15CRLAssetManager_garbageCollectionWorkItem] = 0;
      swift_unknownObjectWeakAssign();

      v20.receiver = v11;
      v20.super_class = v19;
      id v14 = [super init];

      unint64_t v15 = *(void **)&v1[v3];
      *(void *)&v1[v3] = v14;
      id v5 = v14;

      uint64_t v4 = 0;
    }
    unint64_t v16 = *(os_unfair_lock_s **)(v2 + 16);
    id v17 = v4;
    os_unfair_lock_unlock(v16);
    char v6 = sub_100AE43E0(v0);
  }
  else
  {
    char v6 = 0;
  }
  return v6 & 1;
}

uint64_t sub_100AE2BB0(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for UUID();
  uint64_t v54 = *(void *)(v3 - 8);
  uint64_t v55 = v3;
  __chkstk_darwin(v3, v4);
  char v6 = (char *)&v51 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7, v8);
  id v10 = (char *)&v51 - v9;
  uint64_t v11 = sub_1005057FC((uint64_t *)&unk_10167D2B0);
  __chkstk_darwin(v11 - 8, v12);
  id v14 = (char *)&v51 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for CRLAssetData();
  uint64_t v56 = *(void *)(v15 - 8);
  __chkstk_darwin(v15, v16);
  uint64_t v18 = (char *)&v51 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19, v20);
  uint64_t v22 = (char *)&v51 - v21;
  __chkstk_darwin(v23, v24);
  uint64_t v26 = (char *)&v51 - v25;
  __chkstk_darwin(v27, v28);
  uint64_t v30 = (char *)&v51 - v29;
  sub_100557A70(a1, (uint64_t)v57);
  if (!v58)
  {
    uint64_t v40 = &qword_101672BF0;
    uint64_t v41 = v57;
LABEL_11:
    sub_100522F00((uint64_t)v41, v40);
    goto LABEL_12;
  }
  type metadata accessor for CRLAsset();
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_12:
    char v39 = 0;
    return v39 & 1;
  }
  uint64_t v52 = v15;
  uint64_t v53 = v59;
  uint64_t v31 = (void *)(v1 + OBJC_IVAR____TtC8Freeform8CRLAsset_storage);
  sub_1005498A4(v1 + OBJC_IVAR____TtC8Freeform8CRLAsset_storage, (uint64_t)v57);
  sub_1005057FC(&qword_101693DB0);
  type metadata accessor for CRLAssetBackedAssetStorage();
  if (!swift_dynamicCast())
  {
    uint64_t v43 = v53;
    uint64_t v44 = &v53[OBJC_IVAR____TtC8Freeform8CRLAsset_storage];
    sub_1005498A4((uint64_t)&v53[OBJC_IVAR____TtC8Freeform8CRLAsset_storage], (uint64_t)v57);
    if (!swift_dynamicCast())
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v56 + 56))(v14, 1, 1, v52);
      sub_100522F00((uint64_t)v14, (uint64_t *)&unk_10167D2B0);
      uint64_t v45 = v31[3];
      uint64_t v46 = v31[4];
      sub_10050F848(v31, v45);
      (*(void (**)(uint64_t, uint64_t))(v46 + 24))(v45, v46);
      uint64_t v47 = *((void *)v44 + 3);
      uint64_t v48 = *((void *)v44 + 4);
      sub_10050F848(v44, v47);
      (*(void (**)(uint64_t, uint64_t))(v48 + 24))(v47, v48);
      char v39 = static UUID.== infix(_:_:)();

      uint64_t v49 = v55;
      uint64_t v50 = *(void (**)(char *, uint64_t))(v54 + 8);
      v50(v6, v55);
      v50(v10, v49);
      return v39 & 1;
    }
    sub_10077F98C((uint64_t)&v59[OBJC_IVAR____TtC8Freeform26CRLAssetBackedAssetStorage_assetData], (uint64_t)v14);
    swift_release();
    (*(void (**)(char *, void, uint64_t, uint64_t))(v56 + 56))(v14, 0, 1, v52);

    uint64_t v40 = (uint64_t *)&unk_10167D2B0;
    uint64_t v41 = v14;
    goto LABEL_11;
  }
  sub_10077F98C((uint64_t)&v59[OBJC_IVAR____TtC8Freeform26CRLAssetBackedAssetStorage_assetData], (uint64_t)v26);
  swift_release();
  sub_1008A7A50((uint64_t)v26, (uint64_t)v30);
  uint64_t v32 = v53;
  sub_1005498A4((uint64_t)&v53[OBJC_IVAR____TtC8Freeform8CRLAsset_storage], (uint64_t)v57);
  uint64_t v33 = v32;
  if (!swift_dynamicCast())
  {
    sub_100671108((uint64_t)v30);

    goto LABEL_12;
  }
  sub_10077F98C((uint64_t)&v59[OBJC_IVAR____TtC8Freeform26CRLAssetBackedAssetStorage_assetData], (uint64_t)v18);
  swift_release();
  sub_1008A7A50((uint64_t)v18, (uint64_t)v22);
  if (static UUID.== infix(_:_:)())
  {
    uint64_t v34 = v52;
    uint64_t v35 = *(int *)(v52 + 20);
    uint64_t v36 = *(void *)&v30[v35];
    uint64_t v37 = *(void *)&v30[v35 + 8];
    uint64_t v38 = &v22[v35];
    if (v36 == *(void *)v38 && v37 == *((void *)v38 + 1)
      || (char v39 = 0, (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0))
    {
      char v39 = sub_100ED60AC(*(void *)&v30[*(int *)(v34 + 24)], *(void *)&v22[*(int *)(v34 + 24)]);
    }
  }
  else
  {
    char v39 = 0;
  }

  sub_100671108((uint64_t)v22);
  sub_100671108((uint64_t)v30);
  return v39 & 1;
}

id sub_100AE3D34()
{
  return sub_100AE63A8(type metadata accessor for CRLAsset);
}

uint64_t type metadata accessor for CRLAsset()
{
  return self;
}

uint64_t sub_100AE3FB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(void *)(v5 + 40) = a4;
  *(void *)(v5 + 48) = a5;
  return _swift_task_switch(sub_100AE3FD8, 0, 0);
}

uint64_t sub_100AE3FD8()
{
  uint64_t v1 = *(void *)(v0 + 40);
  uint64_t v2 = *(void *)(v1 + OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetDownloadManagerLock);
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v2 + 16));
  uint64_t v3 = OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetDownloadManager;
  uint64_t v4 = *(void *)(v1 + OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetDownloadManager);
  if (!v4)
  {
    uint64_t v5 = (char *)*(id *)(v0 + 40);
    uint64_t v4 = sub_100678E6C(v5);

    *(void *)(v1 + v3) = v4;
    swift_retain();
    swift_release();
  }
  *(void *)(v0 + 56) = v4;
  char v6 = *(os_unfair_lock_s **)(v2 + 16);
  swift_retain();
  os_unfair_lock_unlock(v6);
  return _swift_task_switch(sub_100AE40C0, v4, 0);
}

uint64_t sub_100AE40C0()
{
  uint64_t v2 = v0[6];
  uint64_t v1 = v0[7];
  swift_beginAccess();
  uint64_t v3 = *(void *)(v1 + 272);
  uint64_t v4 = swift_task_alloc();
  *(void *)(v4 + 16) = v2;
  swift_bridgeObjectRetain();
  sub_100FD5DF0((void (*)(char *))sub_100AE723C, v4, v3);
  swift_bridgeObjectRelease();
  swift_release();
  swift_task_dealloc();
  uint64_t v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

uint64_t sub_100AE43E0(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for UUID();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3, v5);
  uint64_t v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *(void *)(v1 + OBJC_IVAR____TtC8Freeform15CRLAssetManager_lock);
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v8 + 16));
  uint64_t v9 = *(void *)(a1 + OBJC_IVAR____TtC8Freeform8CRLAsset_storage + 24);
  uint64_t v10 = *(void *)(a1 + OBJC_IVAR____TtC8Freeform8CRLAsset_storage + 32);
  sub_10050F848((void *)(a1 + OBJC_IVAR____TtC8Freeform8CRLAsset_storage), v9);
  (*(void (**)(uint64_t, uint64_t))(v10 + 24))(v9, v10);
  uint64_t v11 = (uint64_t *)(v1 + OBJC_IVAR____TtC8Freeform15CRLAssetManager_assets);
  swift_beginAccess();
  uint64_t v12 = *v11;
  if (!*(void *)(v12 + 16)) {
    goto LABEL_7;
  }
  swift_bridgeObjectRetain();
  unint64_t v13 = sub_100955FC8((uint64_t)v7);
  if ((v14 & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_7:
    (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
LABEL_8:
    uint64_t v19 = 0;
    goto LABEL_9;
  }
  uint64_t v15 = *(id **)(*(void *)(v12 + 56) + 8 * v13);
  swift_retain();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
  sub_10050BF48(0, (unint64_t *)&qword_101672E50);
  id v16 = v15[2];
  char v17 = static NSObject.== infix(_:_:)();

  if ((v17 & 1) == 0)
  {
    swift_release();
    goto LABEL_8;
  }
  id v18 = [v15[3] anyObject];
  if (v18)
  {

    swift_release();
    uint64_t v19 = 1;
  }
  else
  {
    uint64_t v19 = (uint64_t)[v15[4] anyObject];
    swift_release();
    if (v19)
    {
      swift_unknownObjectRelease();
      uint64_t v19 = 1;
    }
  }
LABEL_9:
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v8 + 16));
  return v19;
}

void sub_100AE4640(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v5 = type metadata accessor for UUID();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5, v7);
  uint64_t v9 = (char *)v54 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1005057FC((uint64_t *)&unk_101674520);
  __chkstk_darwin(v10 - 8, v11);
  uint64_t v60 = (char *)v54 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = *(void *)(v2 + OBJC_IVAR____TtC8Freeform15CRLAssetManager_lock);
  unint64_t v13 = *(os_unfair_lock_s **)(v55 + 16);
  os_unfair_lock_lock(v13);
  uint64_t v72 = OBJC_IVAR____TtC8Freeform15CRLAssetManager_owners;
  char v14 = [*(id *)(v2 + OBJC_IVAR____TtC8Freeform15CRLAssetManager_owners) objectForKeyedSubscript:a1];
  if (!v14)
  {
    os_unfair_lock_unlock(v13);
    return;
  }
  v54[0] = ObjectType;
  unsigned char v14[24] = 1;
  unint64_t v75 = (unint64_t)_swiftEmptyArrayStorage;
  uint64_t v59 = v9;
  uint64_t v15 = v14;
  swift_beginAccess();
  sub_101044ABC(*(void *)(*((void *)v15 + 2) + 16), 0);
  specialized Array._endMutation()();
  v54[1] = v15;
  uint64_t v16 = *((void *)v15 + 2);
  uint64_t v17 = (uint64_t)v59;
  uint64_t v18 = *(void *)(v16 + 56);
  uint64_t v62 = v16 + 56;
  uint64_t v19 = 1 << *(unsigned char *)(v16 + 32);
  uint64_t v20 = -1;
  if (v19 < 64) {
    uint64_t v20 = ~(-1 << v19);
  }
  uint64_t v71 = v20 & v18;
  uint64_t v21 = (uint64_t *)(v2 + OBJC_IVAR____TtC8Freeform15CRLAssetManager_assets);
  swift_bridgeObjectRetain();
  uint64_t v66 = v21;
  swift_beginAccess();
  int64_t v22 = 0;
  uint64_t v68 = v6 + 16;
  uint64_t v69 = (void (**)(unint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56);
  uint64_t v67 = v6 + 48;
  uint64_t v65 = (void (**)(uint64_t, unint64_t, uint64_t))(v6 + 32);
  int64_t v63 = (unint64_t)(v19 + 63) >> 6;
  uint64_t v64 = (void (**)(uint64_t, uint64_t))(v6 + 8);
  uint64_t v73 = v2;
  unint64_t v23 = (unint64_t)v60;
  uint64_t v56 = v16;
  uint64_t v58 = v5;
  uint64_t v57 = v6;
  unint64_t v24 = v71;
  if (!v71) {
    goto LABEL_8;
  }
LABEL_5:
  uint64_t v71 = (v24 - 1) & v24;
  for (unint64_t i = __clz(__rbit64(v24)) | (v22 << 6); ; unint64_t i = __clz(__rbit64(v27)) + (v22 << 6))
  {
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v6 + 16))(v23, *(void *)(v16 + 48) + *(void *)(v6 + 72) * i, v5);
    (*(void (**)(unint64_t, void, uint64_t, uint64_t))(v6 + 56))(v23, 0, 1, v5);
    if ((*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v6 + 48))(v23, 1, v5) == 1) {
      goto LABEL_65;
    }
    int64_t v70 = v22;
    (*v65)(v17, v23, v5);
    uint64_t v29 = *v66;
    if (!*(void *)(*v66 + 16)) {
      goto LABEL_7;
    }
    swift_bridgeObjectRetain();
    unint64_t v30 = sub_100955FC8(v17);
    if ((v31 & 1) == 0)
    {
      swift_bridgeObjectRelease();
LABEL_7:
      (*v64)(v17, v5);
      goto LABEL_50;
    }
    uint64_t v32 = *(void *)(*(void *)(v29 + 56) + 8 * v30);
    swift_retain();
    swift_bridgeObjectRelease();
    (*v64)(v17, v5);
    uint64_t v33 = *(void **)(v32 + 32);
    id v34 = [v33 count];
    uint64_t v61 = v32;
    uint64_t v35 = *(void **)(v32 + 24);
    if ((uint64_t)v34 <= 0)
    {
      id v48 = [*(id *)(v32 + 24) allObjects];
      type metadata accessor for CRLBoard(0);
      unint64_t v23 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

      if (!(v23 >> 62))
      {
        swift_bridgeObjectRetain();
        dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
        swift_bridgeObjectRelease();
LABEL_30:
        uint64_t v41 = *(void *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        if (!v41) {
          break;
        }
        goto LABEL_31;
      }
      swift_bridgeObjectRetain();
      sub_1005057FC(&qword_10167AE78);
      unint64_t v50 = _bridgeCocoaArray<A>(_:)();
      swift_bridgeObjectRelease_n();
      unint64_t v23 = v50;
      if (!(v50 >> 62)) {
        goto LABEL_30;
      }
    }
    else if ((uint64_t)[*(id *)(v32 + 24) count] <= 0)
    {
      id v49 = [v33 allObjects];
      sub_1005057FC(&qword_10167AE78);
      unint64_t v23 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

      if (!(v23 >> 62)) {
        goto LABEL_30;
      }
    }
    else
    {
      id v36 = [v35 allObjects];
      type metadata accessor for CRLBoard(0);
      unint64_t v37 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

      swift_bridgeObjectRetain();
      if (v37 >> 62)
      {
        sub_1005057FC(&qword_10167AE78);
        uint64_t v38 = _bridgeCocoaArray<A>(_:)();
        swift_bridgeObjectRelease();
      }
      else
      {
        dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
        uint64_t v38 = v37;
      }
      swift_bridgeObjectRelease();
      id v39 = [v33 allObjects];
      sub_1005057FC(&qword_10167AE78);
      unint64_t v40 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

      unint64_t v74 = v38;
      sub_1006E21E0(v40);
      uint64_t v2 = v73;
      unint64_t v23 = v74;
      if (!(v74 >> 62)) {
        goto LABEL_30;
      }
    }
    swift_bridgeObjectRetain();
    uint64_t v41 = _CocoaArrayWrapper.endIndex.getter();
    if (!v41) {
      break;
    }
LABEL_31:
    if (v41 < 1) {
      goto LABEL_69;
    }
    uint64_t v42 = 0;
    char v43 = 0;
    char v44 = 1;
    do
    {
      if ((v23 & 0xC000000000000001) != 0)
      {
        uint64_t v45 = specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        uint64_t v45 = *(void *)(v23 + 8 * v42 + 32);
        swift_unknownObjectRetain();
      }
      if (v44)
      {
        uint64_t v46 = [*(id *)(v2 + v72) objectForKeyedSubscript:v45];
        if (v46)
        {
          char v44 = v46[24];
          swift_unknownObjectRelease();
          swift_release();
        }
        else
        {
          swift_unknownObjectRelease();
          char v44 = 0;
        }
        uint64_t v2 = v73;
      }
      else
      {
        swift_unknownObjectRelease();
        char v44 = 0;
      }
      v43 |= v45 == a1;
      ++v42;
    }
    while (v41 != v42);
    swift_bridgeObjectRelease_n();
    if ((v43 & 1) == 0) {
      goto LABEL_75;
    }
    uint64_t v17 = (uint64_t)v59;
    uint64_t v16 = v56;
    if (v44)
    {
      id v47 = *(id *)(v61 + 16);
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      uint64_t v5 = v58;
      if (*(void *)((v75 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v75 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
      swift_release();
    }
    else
    {
      swift_release();
      uint64_t v5 = v58;
    }
    uint64_t v6 = v57;
    unint64_t v23 = (unint64_t)v60;
LABEL_50:
    int64_t v22 = v70;
    unint64_t v24 = v71;
    if (v71) {
      goto LABEL_5;
    }
LABEL_8:
    int64_t v26 = v22 + 1;
    if (__OFADD__(v22, 1))
    {
      __break(1u);
LABEL_69:
      __break(1u);
LABEL_70:
      __break(1u);
LABEL_71:
      swift_bridgeObjectRetain();
      uint64_t v51 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (v51 < 1)
      {
LABEL_72:
        swift_release();
        swift_bridgeObjectRelease();
        goto LABEL_73;
      }
LABEL_67:
      sub_100AE5558(v23);
      swift_bridgeObjectRelease();
      swift_release();
LABEL_73:
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v55 + 16));
      return;
    }
    if (v26 >= v63) {
      goto LABEL_64;
    }
    unint64_t v27 = *(void *)(v62 + 8 * v26);
    ++v22;
    if (!v27)
    {
      int64_t v22 = v26 + 1;
      if (v26 + 1 >= v63) {
        goto LABEL_64;
      }
      unint64_t v27 = *(void *)(v62 + 8 * v22);
      if (!v27)
      {
        int64_t v22 = v26 + 2;
        if (v26 + 2 >= v63) {
          goto LABEL_64;
        }
        unint64_t v27 = *(void *)(v62 + 8 * v22);
        if (!v27)
        {
          int64_t v28 = v26 + 3;
          if (v28 >= v63)
          {
LABEL_64:
            (*v69)(v23, 1, 1, v5);
LABEL_65:
            swift_release();
            unint64_t v23 = v75;
            if (v75 >> 62) {
              goto LABEL_71;
            }
            if (*(uint64_t *)((v75 & 0xFFFFFFFFFFFFFF8) + 0x10) < 1) {
              goto LABEL_72;
            }
            goto LABEL_67;
          }
          unint64_t v27 = *(void *)(v62 + 8 * v28);
          if (!v27)
          {
            while (1)
            {
              int64_t v22 = v28 + 1;
              if (__OFADD__(v28, 1)) {
                goto LABEL_70;
              }
              if (v22 >= v63) {
                goto LABEL_64;
              }
              unint64_t v27 = *(void *)(v62 + 8 * v22);
              ++v28;
              if (v27) {
                goto LABEL_21;
              }
            }
          }
          int64_t v22 = v28;
        }
      }
    }
LABEL_21:
    uint64_t v71 = (v27 - 1) & v27;
  }
  swift_bridgeObjectRelease_n();
LABEL_75:
  sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"boardWillClose(_:)", 18, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLAsset.swift", 80, 2, 346, (uint64_t)"Bookkeeping for asset owners is wrong.", 38, 2u, (uint64_t)_swiftEmptyArrayStorage);
  sub_100586FD4((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Bookkeeping for asset owners is wrong.");
  sub_1005871AC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"boardWillClose(_:)", 18, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLAsset.swift", 80, 2, 346);
  SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v52, v53);
  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

void sub_100AE5080()
{
  swift_getObjectType();
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC8Freeform15CRLAssetManager_lock);
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v1 + 16));
  swift_beginAccess();
  uint64_t v2 = swift_bridgeObjectRetain();
  unint64_t v3 = (unint64_t)sub_100AE20F4(v2);
  swift_bridgeObjectRelease();
  if (v3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v4 < 1) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  if (*(uint64_t *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10) >= 1) {
LABEL_3:
  }
    sub_100AE5580(v3);
LABEL_4:
  swift_bridgeObjectRelease();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v1 + 16));
}

uint64_t sub_100AE5180()
{
  uint64_t v0 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0, v2);
  uint64_t v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for OS_dispatch_queue.Attributes();
  __chkstk_darwin(v5, v6);
  uint64_t v7 = type metadata accessor for DispatchQoS();
  __chkstk_darwin(v7 - 8, v8);
  sub_10050BF48(0, (unint64_t *)&qword_1016725C0);
  static DispatchQoS.unspecified.getter();
  v10[1] = _swiftEmptyArrayStorage;
  sub_100AE76E8((unint64_t *)&qword_101676560, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
  sub_1005057FC(&qword_101693440);
  sub_100636834((unint64_t *)&qword_101676568, &qword_101693440);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v4, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v0);
  uint64_t result = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
  qword_101690430 = result;
  return result;
}

void sub_100AE53D0()
{
  type metadata accessor for CRLUnfairLock();
  uint64_t v0 = swift_allocObject();
  uint64_t v1 = (_DWORD *)swift_slowAlloc();
  *uint64_t v1 = 0;
  *(void *)(v0 + 16) = v1;
  atomic_thread_fence(memory_order_acq_rel);
  off_101690438 = (_UNKNOWN *)v0;
}

id sub_100AE5428()
{
  id result = [self hashTableWithOptions:517];
  qword_101690440 = (uint64_t)result;
  return result;
}

uint64_t sub_100AE5480(uint64_t a1, uint64_t a2, uint64_t a3, SEL *a4)
{
  uint64_t v6 = qword_10166F8D8;
  swift_unknownObjectRetain();
  if (v6 != -1) {
    swift_once();
  }
  os_unfair_lock_lock(*((os_unfair_lock_t *)off_101690438 + 2));
  if (qword_10166F8E0 != -1) {
    swift_once();
  }
  [qword_101690440 *a4 a3];
  os_unfair_lock_unlock(*((os_unfair_lock_t *)off_101690438 + 2));

  return swift_unknownObjectRelease();
}

uint64_t sub_100AE5558(uint64_t a1)
{
  return sub_100AE55A8(a1, (uint64_t)&unk_101523558, (uint64_t)sub_100AE75B8, (uint64_t)&unk_101523570);
}

uint64_t sub_100AE5580(uint64_t a1)
{
  return sub_100AE55A8(a1, (uint64_t)&unk_101523508, (uint64_t)sub_100AE7594, (uint64_t)&unk_101523520);
}

uint64_t sub_100AE55A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8, v10);
  uint64_t v12 = (char *)v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = type metadata accessor for DispatchQoS();
  uint64_t v13 = *(void *)(v21 - 8);
  __chkstk_darwin(v21, v14);
  uint64_t v16 = (char *)v20 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10166F8D0 != -1) {
    swift_once();
  }
  v20[1] = qword_101690430;
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = v4;
  *(void *)(v17 + 24) = a1;
  aBlock[4] = a3;
  aBlock[5] = v17;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = *(void *)"";
  void aBlock[2] = sub_100679958;
  void aBlock[3] = a4;
  uint64_t v18 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  static DispatchQoS.unspecified.getter();
  int64_t v22 = _swiftEmptyArrayStorage;
  sub_100AE76E8((unint64_t *)&qword_1016747E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_1005057FC((uint64_t *)&unk_1016725D0);
  sub_100636834((unint64_t *)&qword_1016747F0, (uint64_t *)&unk_1016725D0);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v18);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v16, v21);
  return swift_release();
}

uint64_t sub_100AE5878(uint64_t a1, uint64_t a2, SEL *a3)
{
  if (qword_10166F8D8 != -1) {
    swift_once();
  }
  os_unfair_lock_lock(*((os_unfair_lock_t *)off_101690438 + 2));
  if (qword_10166F8E0 != -1) {
    swift_once();
  }
  id v4 = [(id)qword_101690440 allObjects];
  sub_1005057FC((uint64_t *)&unk_101690670);
  unint64_t v5 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  os_unfair_lock_unlock(*((os_unfair_lock_t *)off_101690438 + 2));
  if (!(v5 >> 62))
  {
    uint64_t v6 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v6) {
      goto LABEL_7;
    }
    return swift_bridgeObjectRelease_n();
  }
  swift_bridgeObjectRetain();
  uint64_t result = _CocoaArrayWrapper.endIndex.getter();
  uint64_t v6 = result;
  if (!result) {
    return swift_bridgeObjectRelease_n();
  }
LABEL_7:
  if (v6 >= 1)
  {
    uint64_t v8 = 0;
    do
    {
      if ((v5 & 0xC000000000000001) != 0)
      {
        uint64_t v9 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        uint64_t v9 = *(void **)(v5 + 8 * v8 + 32);
        swift_unknownObjectRetain();
      }
      ++v8;
      type metadata accessor for CRLAsset();
      Class isa = Array._bridgeToObjectiveC()().super.isa;
      [v9 *a3];
      swift_unknownObjectRelease();
    }
    while (v6 != v8);
    return swift_bridgeObjectRelease_n();
  }
  __break(1u);
  return result;
}

uint64_t sub_100AE5A38()
{
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v2 = type metadata accessor for DispatchTime();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2, v4);
  uint64_t v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7, v8);
  unint64_t v24 = (char *)&v22 - v9;
  uint64_t v10 = type metadata accessor for DispatchWorkItemFlags();
  __chkstk_darwin(v10, v11);
  uint64_t v12 = OBJC_IVAR____TtC8Freeform15CRLAssetManager_garbageCollectionWorkItem;
  if (!*(void *)(v0 + OBJC_IVAR____TtC8Freeform15CRLAssetManager_garbageCollectionWorkItem)
    || (swift_retain(),
        char v13 = dispatch thunk of DispatchWorkItem.isCancelled.getter(),
        uint64_t result = swift_release(),
        (v13 & 1) != 0))
  {
    uint64_t v22 = v3;
    uint64_t v23 = v2;
    uint64_t v15 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v16 = swift_allocObject();
    *(void *)(v16 + 16) = v15;
    *(void *)(v16 + 24) = ObjectType;
    aBlock[4] = sub_100AE753C;
    aBlock[5] = v16;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = *(void *)"";
    void aBlock[2] = sub_100679958;
    void aBlock[3] = &unk_1015234D0;
    _Block_copy(aBlock);
    uint64_t v25 = _swiftEmptyArrayStorage;
    sub_100AE76E8((unint64_t *)&qword_1016747E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    swift_retain();
    sub_1005057FC((uint64_t *)&unk_1016725D0);
    sub_100636834((unint64_t *)&qword_1016747F0, (uint64_t *)&unk_1016725D0);
    dispatch thunk of SetAlgebra.init<A>(_:)();
    type metadata accessor for DispatchWorkItem();
    swift_allocObject();
    uint64_t v17 = DispatchWorkItem.init(flags:block:)();
    swift_release();
    swift_release();
    *(void *)(v0 + v12) = v17;
    swift_release();
    if (qword_10166F8D0 != -1) {
      swift_once();
    }
    static DispatchTime.now()();
    uint64_t v18 = v24;
    + infix(_:_:)();
    uint64_t v19 = *(uint64_t (**)(char *, uint64_t))(v22 + 8);
    uint64_t v20 = v6;
    uint64_t v21 = v23;
    uint64_t result = v19(v20, v23);
    if (*(void *)(v0 + v12))
    {
      swift_retain();
      OS_dispatch_queue.asyncAfter(deadline:execute:)();
      swift_release();
      return v19(v18, v21);
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_100AE5DD8()
{
  uint64_t v0 = type metadata accessor for UUID();
  uint64_t v37 = *(void *)(v0 - 8);
  __chkstk_darwin(v0, v1);
  uint64_t v3 = (char *)&v33 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v5 = (char *)result;
    uint64_t v6 = OBJC_IVAR____TtC8Freeform15CRLAssetManager_lock;
    os_unfair_lock_lock(*(os_unfair_lock_t *)(*(void *)(result + OBJC_IVAR____TtC8Freeform15CRLAssetManager_lock)
                                            + 16));
    *(void *)&v5[OBJC_IVAR____TtC8Freeform15CRLAssetManager_garbageCollectionWorkItem] = 0;
    swift_release();
    uint64_t v7 = &v5[OBJC_IVAR____TtC8Freeform15CRLAssetManager_assets];
    swift_beginAccess();
    uint64_t v8 = swift_bridgeObjectRetain();
    sub_100AE1EBC(v8);
    unint64_t v10 = v9;
    swift_bridgeObjectRelease();
    uint64_t v35 = v6;
    id v36 = v5;
    unint64_t v34 = v10 >> 62;
    if (v10 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v11 = _CocoaArrayWrapper.endIndex.getter();
      if (!v11) {
        goto LABEL_16;
      }
    }
    else
    {
      uint64_t v11 = *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (!v11) {
        goto LABEL_16;
      }
    }
    if (v11 < 1)
    {
      __break(1u);
      goto LABEL_34;
    }
    uint64_t v12 = 0;
    uint64_t v38 = (void (**)(unint64_t, uint64_t))(v37 + 8);
    unint64_t v39 = v10 & 0xC000000000000001;
    uint64_t v41 = v0;
    unint64_t v42 = v10;
    uint64_t v40 = v11;
    do
    {
      if (v39) {
        uint64_t v15 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        uint64_t v15 = (char *)*(id *)(v10 + 8 * v12 + 32);
      }
      uint64_t v16 = v15;
      uint64_t v17 = &v15[OBJC_IVAR____TtC8Freeform8CRLAsset_storage];
      uint64_t v18 = *((void *)v17 + 3);
      uint64_t v19 = *((void *)v17 + 4);
      sub_10050F848(v17, v18);
      (*(void (**)(uint64_t, uint64_t))(v19 + 24))(v18, v19);
      swift_beginAccess();
      swift_bridgeObjectRetain();
      unint64_t v20 = sub_100955FC8((uint64_t)v3);
      LOBYTE(v19) = v21;
      swift_bridgeObjectRelease();
      if (v19)
      {
        int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v23 = *(void *)v7;
        uint64_t v43 = *(void *)v7;
        *(void *)uint64_t v7 = 0x8000000000000000;
        if (!isUniquelyReferenced_nonNull_native)
        {
          sub_10097D2A8();
          uint64_t v23 = v43;
        }
        char v13 = *(void (**)(unint64_t, uint64_t))(v37 + 8);
        uint64_t v14 = v41;
        v13(*(void *)(v23 + 48) + *(void *)(v37 + 72) * v20, v41);
        uint64_t v24 = v43;
        sub_10058822C(v20, v43);
        *(void *)uint64_t v7 = v24;
        swift_bridgeObjectRelease();
      }
      else
      {
        char v13 = *v38;
        uint64_t v14 = v41;
      }
      ++v12;
      v13((unint64_t)v3, v14);
      swift_endAccess();

      swift_release();
      unint64_t v10 = v42;
    }
    while (v40 != v12);
LABEL_16:
    uint64_t v25 = swift_bridgeObjectRelease();
    uint64_t v5 = v36;
    if (*(void *)(*(void *)v7 + 16)) {
      sub_100AE5A38(v25, 3600.0);
    }
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(*(void *)&v5[v35] + 16));
    if (v34)
    {
      swift_bridgeObjectRetain();
      uint64_t v26 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (v26 < 1) {
        goto LABEL_20;
      }
    }
    else if (*(uint64_t *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10) < 1)
    {
LABEL_20:

      return swift_bridgeObjectRelease();
    }
    if (qword_10166F8D8 == -1)
    {
LABEL_23:
      os_unfair_lock_lock(*((os_unfair_lock_t *)off_101690438 + 2));
      if (qword_10166F8E0 != -1) {
        swift_once();
      }
      id v27 = [(id)qword_101690440 allObjects];
      sub_1005057FC((uint64_t *)&unk_101690670);
      unint64_t v28 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

      os_unfair_lock_unlock(*((os_unfair_lock_t *)off_101690438 + 2));
      if (v28 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t result = _CocoaArrayWrapper.endIndex.getter();
        uint64_t v29 = result;
        if (result) {
          goto LABEL_27;
        }
      }
      else
      {
        uint64_t v29 = *(void *)((v28 & 0xFFFFFFFFFFFFFF8) + 0x10);
        uint64_t result = swift_bridgeObjectRetain();
        if (v29)
        {
LABEL_27:
          if (v29 < 1)
          {
            __break(1u);
            return result;
          }
          uint64_t v30 = 0;
          do
          {
            if ((v28 & 0xC000000000000001) != 0)
            {
              char v31 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
            }
            else
            {
              char v31 = *(void **)(v28 + 8 * v30 + 32);
              swift_unknownObjectRetain();
            }
            ++v30;
            type metadata accessor for CRLAsset();
            Class isa = Array._bridgeToObjectiveC()().super.isa;
            [v31 willCullAssets:isa];
            swift_unknownObjectRelease();
          }
          while (v29 != v30);
        }
      }

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
LABEL_34:
    swift_once();
    goto LABEL_23;
  }
  return result;
}

uint64_t sub_100AE6328()
{
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

id sub_100AE6390()
{
  return sub_100AE63A8(type metadata accessor for CRLAssetManager);
}

id sub_100AE63A8(uint64_t (*a1)(void))
{
  v3.receiver = v1;
  v3.super_class = (Class)a1();
  return [super dealloc];
}

uint64_t type metadata accessor for CRLAssetManager()
{
  return self;
}

uint64_t type metadata accessor for CRLAssetManager.AssetInfo()
{
  return self;
}

uint64_t type metadata accessor for CRLAssetManager.OwnerInfo()
{
  return self;
}

id sub_100AE64C8(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v128 = a3;
  uint64_t v123 = a1;
  uint64_t v5 = type metadata accessor for CRLAssetData();
  __chkstk_darwin(v5 - 8, v6);
  uint64_t v8 = (char *)&v113 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v125 = type metadata accessor for UUID();
  uint64_t v127 = *(void *)(v125 - 8);
  __chkstk_darwin(v125 - 8, v9);
  uint64_t v11 = (char *)&v113 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12, v13);
  uint64_t v124 = (uint64_t)&v113 - v14;
  __chkstk_darwin(v15, v16);
  int v126 = (char *)&v113 - v17;
  uint64_t v18 = *(void *)(a3 + OBJC_IVAR____TtC8Freeform15CRLAssetManager_lock);
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v18 + 16));
  uint64_t v19 = (void (*)(uint64_t, uint64_t, uint64_t))(a3 + OBJC_IVAR____TtC8Freeform15CRLAssetManager_store);
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();

  uint64_t v119 = v18;
  long long v115 = v11;
  uint64_t v116 = v8;
  uint64_t v122 = v19;
  if (Strong)
  {
    id result = (id)swift_unknownObjectWeakLoadStrong();
    if (!result)
    {
      __break(1u);
      return result;
    }
    uint64_t v22 = result;
    id v23 = [result description];
    uint64_t v24 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v26 = v25;
  }
  else
  {
    unint64_t v26 = 0xE300000000000000;
    uint64_t v24 = 7104878;
  }
  uint64_t v120 = sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  long long v113 = xmmword_10117D8C0;
  *(_OWORD *)(inited + 16) = xmmword_10117D8C0;
  *(void *)(inited + 56) = &type metadata for String;
  unint64_t v28 = (void *)sub_100528BE4();
  *(void *)(inited + 64) = v28;
  uint64_t v114 = v24;
  *(void *)(inited + 32) = v24;
  *(void *)(inited + 40) = v26;
  uint64_t v117 = (char *)v26;
  swift_bridgeObjectRetain();
  id v29 = [a2 store];
  id v30 = [v29 description];
  uint64_t v31 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v33 = v32;

  *(void *)(inited + 96) = &type metadata for String;
  *(void *)(inited + 104) = v28;
  id v121 = v28;
  *(void *)(inited + 72) = v31;
  *(void *)(inited + 80) = v33;
  id v34 = [a2 store];
  uint64_t v35 = swift_unknownObjectWeakLoadStrong();
  if (!v35)
  {

    goto LABEL_9;
  }
  id v36 = (void *)v35;
  type metadata accessor for CRLBoardDataStore(0);
  id v37 = v34;
  char v38 = static NSObject.== infix(_:_:)();

  if ((v38 & 1) == 0)
  {
LABEL_9:
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"asset(forAssetData:owner:)", 26, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLAsset.swift", 80, 2, 234, (uint64_t)"Unexpected board data store. expected=%{public}@, actual=%{public}@", 67, 2u, inited);
    sub_1005598CC(inited, (uint64_t)"asset(forAssetData:owner:)", 26, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLAsset.swift", 80, 2, 234);
  }
  swift_bridgeObjectRelease();
  unint64_t v39 = (char *)a2;
  uint64_t v40 = (char *)[a2 parentBoard];
  id v118 = v40;
  if (v40)
  {
    uint64_t v41 = v40;
    uint64_t v42 = swift_initStackObject();
    *(_OWORD *)(v42 + 16) = v113;
    id v43 = v121;
    *(void *)(v42 + 56) = &type metadata for String;
    *(void *)(v42 + 64) = v43;
    char v44 = v117;
    *(void *)(v42 + 32) = v114;
    *(void *)(v42 + 40) = v44;
    uint64_t v45 = OBJC_IVAR____TtC8Freeform8CRLBoard_store;
    id v46 = *(id *)&v41[OBJC_IVAR____TtC8Freeform8CRLBoard_store];
    uint64_t v117 = v41;
    id v47 = [v46 description];
    uint64_t v48 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v50 = v49;

    *(void *)(v42 + 96) = &type metadata for String;
    *(void *)(v42 + 104) = v43;
    *(void *)(v42 + 72) = v48;
    *(void *)(v42 + 80) = v50;
    uint64_t v51 = *(void **)&v41[v45];
    uint64_t v52 = swift_unknownObjectWeakLoadStrong();
    if (!v52
      || (Swift::String v53 = (void *)v52,
          type metadata accessor for CRLBoardDataStore(0),
          id v54 = v51,
          char v55 = static NSObject.== infix(_:_:)(),
          v54,
          v54,
          v53,
          (v55 & 1) == 0))
    {
      sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"asset(forAssetData:owner:)", 26, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLAsset.swift", 80, 2, 240, (uint64_t)"Unexpected board data store. expected=%{public}@, actual=%{public}@", 67, 2u, v42);
      sub_1005598CC(v42, (uint64_t)"asset(forAssetData:owner:)", 26, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLAsset.swift", 80, 2, 240);
    }
    swift_bridgeObjectRelease();
    uint64_t v56 = v128;
    uint64_t v58 = v125;
    uint64_t v57 = (uint64_t)v126;
    unint64_t v39 = v117;
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_unknownObjectRetain();
    uint64_t v56 = v128;
    uint64_t v58 = v125;
    uint64_t v57 = (uint64_t)v126;
  }
  uint64_t v59 = (char *)(v127 + 16);
  uint64_t v60 = v123;
  uint64_t v122 = *(void (**)(uint64_t, uint64_t, uint64_t))(v127 + 16);
  v122(v57, v123, v58);
  uint64_t v61 = (uint64_t *)(v56 + OBJC_IVAR____TtC8Freeform15CRLAssetManager_assets);
  swift_beginAccess();
  uint64_t v62 = *v61;
  if (!*(void *)(*v61 + 16)) {
    goto LABEL_21;
  }
  swift_bridgeObjectRetain();
  unint64_t v63 = sub_100955FC8(v57);
  if ((v64 & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_21:
    uint64_t v117 = v59;
    uint64_t v69 = (uint64_t)v116;
    sub_10077F98C(v60, (uint64_t)v116);
    id v70 = [v39 store];
    id v71 = sub_100AE70F4(v69, v70);

    type metadata accessor for CRLAssetManager.AssetInfo();
    uint64_t v65 = swift_allocObject();
    uint64_t v72 = v39;
    uint64_t v73 = self;
    id v74 = v71;
    swift_unknownObjectRetain();
    id v75 = [v73 hashTableWithOptions:517];
    *(void *)(v65 + 24) = v75;
    id v76 = [self hashTableWithOptions:517];
    *(void *)(v65 + 32) = v76;
    *(void *)(v65 + 16) = v74;
    type metadata accessor for CRLBoard(0);
    uint64_t v77 = swift_dynamicCastClass();
    id v78 = v74;
    if (v77)
    {
      uint64_t v79 = v75;
      uint64_t v80 = v77;
    }
    else
    {
      uint64_t v79 = v76;
      uint64_t v80 = (uint64_t)v72;
    }
    [v79 addObject:v80];
    unint64_t v39 = v72;

    swift_unknownObjectRelease();
    uint64_t v81 = v124;
    uint64_t v58 = v125;
    uint64_t v57 = (uint64_t)v126;
    v122(v124, (uint64_t)v126, v125);
    swift_beginAccess();
    swift_retain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v129 = *v61;
    *uint64_t v61 = 0x8000000000000000;
    sub_100973174(v65, v81, isUniquelyReferenced_nonNull_native);
    *uint64_t v61 = v129;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v127 + 8))(v81, v58);
    swift_endAccess();
    if (qword_10166FBD8 != -1) {
      swift_once();
    }
    swift_beginAccess();
    uint64_t v83 = (void *)static OS_os_log.assetManagement;
    uint64_t v84 = swift_initStackObject();
    *(_OWORD *)(v84 + 16) = xmmword_10117E810;
    id v85 = v83;
    uint64_t v86 = UUID.uuidString.getter();
    id v87 = v121;
    *(void *)(v84 + 56) = &type metadata for String;
    *(void *)(v84 + 64) = v87;
    *(void *)(v84 + 32) = v86;
    *(void *)(v84 + 40) = v88;
    uint64_t v89 = static os_log_type_t.default.getter();
    sub_100BAC898((uint64_t)v85, (uint64_t)&_mh_execute_header, v89, (uint64_t)"CRLAssetManager asset(forAssetData:%@, owner:) create new", 57, 2, v84);
    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();

    goto LABEL_31;
  }
  uint64_t v65 = *(void *)(*(void *)(v62 + 56) + 8 * v63);
  swift_retain();
  swift_bridgeObjectRelease();
  type metadata accessor for CRLBoard(0);
  uint64_t v66 = swift_dynamicCastClass();
  if (v66)
  {
    uint64_t v67 = v66;
    uint64_t v68 = *(void **)(v65 + 24);
    swift_retain();
    [v68 addObject:v67];
  }
  else
  {
    uint64_t v90 = *(void **)(v65 + 32);
    swift_retain();
    [v90 addObject:v39];
  }
  if (qword_10166FBD8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v91 = (void *)static OS_os_log.assetManagement;
  uint64_t v92 = swift_initStackObject();
  *(_OWORD *)(v92 + 16) = xmmword_10117E810;
  id v85 = v91;
  uint64_t v93 = UUID.uuidString.getter();
  id v94 = v121;
  *(void *)(v92 + 56) = &type metadata for String;
  *(void *)(v92 + 64) = v94;
  *(void *)(v92 + 32) = v93;
  *(void *)(v92 + 40) = v95;
  uint64_t v96 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v85, (uint64_t)&_mh_execute_header, v96, (uint64_t)"CRLAssetManager asset(forAssetData:%@, owner:) add owner to existing", 68, 2, v92);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();
  swift_release();
LABEL_31:

  uint64_t v97 = OBJC_IVAR____TtC8Freeform15CRLAssetManager_owners;
  uint64_t v98 = v128;
  if ([*(id *)(v128 + OBJC_IVAR____TtC8Freeform15CRLAssetManager_owners) objectForKeyedSubscript:v39])
  {
    long long v99 = v115;
    v122((uint64_t)v115, v57, v58);
    swift_beginAccess();
    uint64_t v100 = v124;
    sub_100CB4BC8(v124, v99);
    double v101 = *(void (**)(uint64_t, uint64_t))(v127 + 8);
    v101(v100, v58);
    swift_endAccess();
    swift_unknownObjectRelease();

    swift_release();
    v101(v57, v58);
  }
  else
  {
    id v121 = *(id *)(v98 + v97);
    uint64_t v123 = v65;
    uint64_t v102 = v124;
    double v103 = (void (*)(unint64_t, uint64_t, uint64_t))v122;
    v122(v124, v57, v58);
    type metadata accessor for CRLAssetManager.OwnerInfo();
    uint64_t v104 = swift_allocObject();
    *(unsigned char *)(v104 + 24) = 0;
    sub_1005057FC(&qword_10167AD08);
    uint64_t v117 = v39;
    uint64_t v105 = v127;
    unint64_t v106 = (*(unsigned __int8 *)(v127 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v127 + 80);
    uint64_t v107 = swift_allocObject();
    *(_OWORD *)(v107 + 16) = xmmword_10117E810;
    v103(v107 + v106, v102, v58);
    id v108 = v121;
    uint64_t v109 = sub_100CDCB64(v107);
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    long long v110 = *(void (**)(uint64_t, uint64_t))(v105 + 8);
    uint64_t v111 = v102;
    uint64_t v65 = v123;
    v110(v111, v58);
    *(void *)(v104 + 16) = v109;
    [v108 setObject:v104 forKeyedSubscript:v117];
    swift_unknownObjectRelease();

    swift_release();
    v110((uint64_t)v126, v58);
  }
  id v112 = *(id *)(v65 + 16);
  swift_release();
  sub_100AE5A38();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v119 + 16));
  return v112;
}

id sub_100AE70F4(uint64_t a1, void *a2)
{
  uint64_t v4 = type metadata accessor for CRLAssetData();
  __chkstk_darwin(v4 - 8, v5);
  uint64_t v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10077F98C(a1, (uint64_t)v7);
  uint64_t v8 = type metadata accessor for CRLAssetBackedAssetStorage();
  uint64_t v9 = swift_allocObject();
  sub_1008A7A50((uint64_t)v7, v9 + OBJC_IVAR____TtC8Freeform26CRLAssetBackedAssetStorage_assetData);
  *(void *)(v9 + OBJC_IVAR____TtC8Freeform26CRLAssetBackedAssetStorage_store) = a2;
  v17[3] = v8;
  v17[4] = &off_101521A98;
  v17[0] = v9;
  uint64_t v10 = (objc_class *)type metadata accessor for CRLAsset();
  id v11 = objc_allocWithZone(v10);
  sub_1005498A4((uint64_t)v17, (uint64_t)v11 + OBJC_IVAR____TtC8Freeform8CRLAsset_storage);
  v16.receiver = v11;
  v16.super_class = v10;
  id v12 = a2;
  swift_retain();
  id v13 = [super init];
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v17);
  swift_release();
  sub_100671108(a1);
  return v13;
}

uint64_t sub_100AE723C(uint64_t a1)
{
  return sub_100671B9C(a1, *(void *)(v1 + 16));
}

id sub_100AE7258(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for URL();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2, v4);
  uint64_t v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v9 = __chkstk_darwin(v7, v8);
  id v11 = (char *)&v24 - v10;
  id v12 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v3 + 16);
  v12((char *)&v24 - v10, a1, v2, v9);
  ((void (*)(char *, char *, uint64_t))v12)(v6, v11, v2);
  uint64_t v13 = type metadata accessor for CRLFileAssetStorage();
  uint64_t v14 = swift_allocObject();
  uint64_t v15 = OBJC_IVAR____TtC8Freeform19CRLFileAssetStorage_lock;
  type metadata accessor for CRLUnfairLock();
  uint64_t v16 = swift_allocObject();
  swift_retain();
  uint64_t v17 = (_DWORD *)swift_slowAlloc();
  *uint64_t v17 = 0;
  *(void *)(v16 + 16) = v17;
  atomic_thread_fence(memory_order_acq_rel);
  *(void *)(v14 + v15) = v16;
  uint64_t v18 = v14 + OBJC_IVAR____TtC8Freeform19CRLFileAssetStorage__assetUUID;
  uint64_t v19 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v18, 1, 1, v19);
  (*(void (**)(uint64_t, char *, uint64_t))(v3 + 32))(v14 + OBJC_IVAR____TtC8Freeform19CRLFileAssetStorage__url, v6, v2);
  swift_release();
  v26[3] = v13;
  _OWORD v26[4] = &off_101521A98;
  v26[0] = v14;
  unint64_t v20 = (objc_class *)type metadata accessor for CRLAsset();
  id v21 = objc_allocWithZone(v20);
  sub_1005498A4((uint64_t)v26, (uint64_t)v21 + OBJC_IVAR____TtC8Freeform8CRLAsset_storage);
  v25.receiver = v21;
  v25.super_class = v20;
  swift_retain();
  id v22 = [super init];
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v26);
  swift_release();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v11, v2);
  return v22;
}

uint64_t sub_100AE74CC()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100AE7504()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100AE753C()
{
  return sub_100AE5DD8();
}

uint64_t sub_100AE7544(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100AE7554()
{
  return swift_release();
}

uint64_t sub_100AE755C()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100AE7594()
{
  return sub_100AE5878(*(void *)(v0 + 16), *(void *)(v0 + 24), (SEL *)&selRef_willCloseBoardDataStoreForAssets_);
}

uint64_t sub_100AE75B8()
{
  return sub_100AE5878(*(void *)(v0 + 16), *(void *)(v0 + 24), (SEL *)&selRef_willCloseContainerForAssets_);
}

uint64_t sub_100AE75DC()
{
  uint64_t v1 = type metadata accessor for UUID();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 40) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_unknownObjectRelease();

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_100AE76B0()
{
  _Block_release(*(const void **)(v0 + 16));

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100AE76E8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

id sub_100AE7778()
{
  return sub_100AE8714(type metadata accessor for CRLiOSPencilHoverStates);
}

void sub_100AE77F4(void *a1)
{
  uint64_t v2 = v1;
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong) {
    return;
  }
  id v64 = (id)Strong;
  if (![self prefersHoverToolPreview])
  {

    return;
  }
  id v5 = [v64 canvasView];
  [a1 locationInView:v5];
  double v7 = v6;
  double v9 = v8;

  [v64 convertBoundsToUnscaledPoint:v7, v9];
  double v11 = v10;
  double v13 = v12;
  [a1 zOffset];
  double v15 = v14;
  id v63 = [v64 freehandDrawingToolkit];
  id v16 = [v64 canvasView];
  id v17 = [v16 enclosingScrollView];

  sub_100AE80BC();
  char v18 = sub_100AE9248(a1, v15);
  if (qword_10166FAF0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v19 = (void *)static OS_os_log.crlPencilHover;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117E810;
  uint64_t v65 = 0;
  unint64_t v66 = 0xE000000000000000;
  id v21 = v19;
  _StringGuts.grow(_:)(61);
  v22._countAndFlagsBits = 0xD000000000000012;
  v22._object = (void *)0x8000000101270770;
  String.append(_:)(v22);
  if (v18) {
    uint64_t v23 = 1702195828;
  }
  else {
    uint64_t v23 = 0x65736C6166;
  }
  if (v18) {
    unint64_t v24 = 0xE400000000000000;
  }
  else {
    unint64_t v24 = 0xE500000000000000;
  }
  unint64_t v25 = v24;
  String.append(_:)(*(Swift::String *)&v23);
  swift_bridgeObjectRelease();
  v26._countAndFlagsBits = 0x657366664F7A202CLL;
  v26._object = (void *)0xEA00000000003A74;
  String.append(_:)(v26);
  v27._countAndFlagsBits = Double.description.getter();
  String.append(_:)(v27);
  swift_bridgeObjectRelease();
  v28._countAndFlagsBits = 0x3A6574617473202CLL;
  v28._object = (void *)0xE900000000000020;
  String.append(_:)(v28);
  [a1 state];
  v29._countAndFlagsBits = 0x746C7561666564;
  v29._object = (void *)0xE700000000000000;
  String.append(_:)(v29);
  swift_bridgeObjectRelease();
  v30._object = (void *)0x8000000101270790;
  v30._countAndFlagsBits = 0xD000000000000010;
  String.append(_:)(v30);
  uint64_t v31 = swift_allocObject();
  *(void *)(v31 + 16) = v2;
  uint64_t v32 = swift_allocObject();
  *(void *)(v32 + 16) = sub_100AE9454;
  *(void *)(v32 + 24) = v31;
  v67[0] = sub_100AE94B0;
  v67[1] = v32;
  uint64_t v33 = v2;
  sub_1005057FC((uint64_t *)&unk_101690710);
  _print_unlocked<A, B>(_:_:)();
  swift_release();
  uint64_t v34 = v65;
  unint64_t v35 = v66;
  *(void *)(inited + 56) = &type metadata for String;
  *(void *)(inited + 64) = sub_100528BE4();
  *(void *)(inited + 32) = v34;
  *(void *)(inited + 40) = v35;
  uint64_t v36 = static os_log_type_t.debug.getter();
  sub_100BAC898((uint64_t)v21, (uint64_t)&_mh_execute_header, v36, (uint64_t)"**** %@", 7, 2, inited);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  sub_100AE81E0();
  uint64_t v37 = OBJC_IVAR____TtC8Freeform31CRLiOSPencilHoverGestureHandler_pencilHoverStates;
  char v38 = *(id *)&v33[OBJC_IVAR____TtC8Freeform31CRLiOSPencilHoverGestureHandler_pencilHoverStates];
  sub_100AE8420(v11, v13);
  v38[OBJC_IVAR____TtC8Freeform23CRLiOSPencilHoverStates_currentHoverToolType] = v39;

  uint64_t v40 = v63;
  if (v18)
  {
    uint64_t v41 = OBJC_IVAR____TtC8Freeform31CRLiOSPencilHoverGestureHandler_decorator;
    uint64_t v42 = *(void **)&v33[OBJC_IVAR____TtC8Freeform31CRLiOSPencilHoverGestureHandler_decorator];
    if (v42)
    {
      if (v63 && v17)
      {
        id v62 = v42;
        id v43 = v63;
        id v44 = v17;
        if (([v44 isDragging] & 1) != 0
          || ([v44 isDragging] & 1) != 0
          || ([v44 isDecelerating] & 1) != 0)
        {

          uint64_t v40 = v63;
          goto LABEL_23;
        }
        [v64 viewScale];
        double v53 = v52;
        id v54 = [v64 backgroundColorAtUnscaledCanvasPoint:v7, v9];
        id v55 = [v54 CGColor];

        sub_100AE8420(v11, v13);
        LOBYTE(v54) = v56;
        id v57 = *(id *)&v33[v37];
        sub_100BE4EA4(v55, v54, v57, (uint64_t)v67, v7, v9, v15, v53);

        sub_100BAE8EC(v43, (unsigned __int8 *)v67);
        [v43 keepPencilShadowVisible];
        [v43 inputPointFromHoverGesture:a1];
        [v43 updatePencilShadowWithInputPoint:&v65];
        if ([v43 isInDrawingMode])
        {
          [a1 state];
          sub_100AE952C(v7, v9);
        }
        else
        {
          id v58 = *(id *)&v33[OBJC_IVAR____TtC8Freeform31CRLiOSPencilHoverGestureHandler_hoverRepManager];
          unsigned __int8 v59 = sub_1010356C4();

          if (v59)
          {
            uint64_t v60 = (void *)swift_unknownObjectWeakLoadStrong();
            if (v60)
            {
              uint64_t v61 = v60;
              if (*(void *)&v33[v41]) {
                [v60 invalidateLayersForDecorator:];
              }

              goto LABEL_41;
            }
          }
        }

LABEL_41:
        sub_100AE94E4((uint64_t)v67);

        return;
      }
    }
  }
LABEL_23:
  uint64_t v45 = OBJC_IVAR____TtC8Freeform31CRLiOSPencilHoverGestureHandler_decorator;
  id v46 = *(void **)&v33[OBJC_IVAR____TtC8Freeform31CRLiOSPencilHoverGestureHandler_decorator];
  if (v46)
  {
    id v47 = v46;
    sub_100744E08();
  }
  id v48 = *(id *)&v33[OBJC_IVAR____TtC8Freeform31CRLiOSPencilHoverGestureHandler_hoverRepManager];
  unsigned __int8 v49 = sub_1010356C4();

  if ((v49 & 1) != 0 && (uint64_t v50 = (void *)swift_unknownObjectWeakLoadStrong()) != 0)
  {
    uint64_t v51 = v50;
    if (*(void *)&v33[v45])
    {
      [v50 invalidateLayersForDecorator:];

      return;
    }

    id v17 = v40;
  }
  else
  {
    uint64_t v51 = v40;
  }
}

void sub_100AE80BC()
{
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = Strong;
    id v2 = [Strong layerHost];

    if (v2)
    {
      if ([v2 respondsToSelector:"asiOSCVC"])
      {
        id v3 = [v2 asiOSCVC];
        swift_unknownObjectRelease();
        id v4 = [v3 delegate];

        if (!v4)
        {
          __break(1u);
          return;
        }
        if ([v4 respondsToSelector:"currentDocumentMode"])
        {
          id v5 = [v4 currentDocumentMode];
          swift_unknownObjectRelease();
          [v5 pencilModeType];

          return;
        }
      }
      swift_unknownObjectRelease();
    }
  }
}

void sub_100AE81E0()
{
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  uint64_t v2 = OBJC_IVAR____TtC8Freeform31CRLiOSPencilHoverGestureHandler_decorator;
  id v3 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform31CRLiOSPencilHoverGestureHandler_decorator);
  if (Strong)
  {
    if (!v3)
    {
      id v8 = Strong;
      id v4 = [objc_allocWithZone((Class)type metadata accessor for CRLiOSPencilToolShapeDecorator()) init];
      id v5 = *(void **)(v0 + v2);
      *(void *)(v0 + v2) = v4;

      double v6 = *(void **)(v0 + v2);
      if (!v6)
      {
        __break(1u);
        return;
      }
      id v7 = v6;
      [v8 addDecorator:v7];

      uint64_t Strong = v8;
    }
  }
  else
  {
    *(void *)(v0 + OBJC_IVAR____TtC8Freeform31CRLiOSPencilHoverGestureHandler_decorator) = 0;
    uint64_t Strong = v3;
  }
}

void sub_100AE8304()
{
  uint64_t v1 = v0;
  uint64_t v2 = OBJC_IVAR____TtC8Freeform31CRLiOSPencilHoverGestureHandler_decorator;
  id v3 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform31CRLiOSPencilHoverGestureHandler_decorator);
  if (v3)
  {
    id v4 = v3;
    sub_100744E08();
  }
  id v5 = *(id *)(v0 + OBJC_IVAR____TtC8Freeform31CRLiOSPencilHoverGestureHandler_hoverRepManager);
  unsigned __int8 v6 = sub_1010356C4();

  if (v6)
  {
    uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      if (*(void *)(v1 + v2))
      {
        id v8 = Strong;
        [Strong invalidateLayersForDecorator:];
        uint64_t Strong = v8;
      }
    }
  }
}

void sub_100AE8420(double a1, double a2)
{
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v5 = Strong;
    id v6 = [Strong layerHost];

    if (v6)
    {
      if (([v6 respondsToSelector:"asiOSCVC"] & 1) == 0) {
        goto LABEL_9;
      }
      id v7 = [v6 asiOSCVC];
      swift_unknownObjectRelease();
      id v8 = [v7 delegate];

      if (!v8)
      {
        __break(1u);
        return;
      }
      if ([v8 respondsToSelector:"currentDocumentMode"])
      {
        id v9 = [v8 currentDocumentMode];
        swift_unknownObjectRelease();
        unint64_t v10 = (unint64_t)[v9 pencilModeType];

        if (v10)
        {
          if (v10 == 2) {
            return;
          }
          goto LABEL_13;
        }
      }
      else
      {
LABEL_9:
        swift_unknownObjectRelease();
      }
    }
  }
  double v11 = (void *)swift_unknownObjectWeakLoadStrong();
  if (!v11) {
    return;
  }
  id v12 = [v11 pencilBehaviorOutsideModesAtUnscaledPoint:a1, a2];
  swift_unknownObjectRelease();
  if (v12 == (id)2) {
    return;
  }
  unint64_t v10 = v12 == (id)1;
LABEL_13:
  if (v10 == 1)
  {
    double v13 = (void *)swift_unknownObjectWeakLoadStrong();
    if (v13
      && (double v14 = v13,
          id v15 = [v13 freehandDrawingToolkit],
          v14,
          v15))
    {
      sub_100BE4D7C();
    }
    else
    {
      sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"hoverToolType(at:)", 18, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLiOSPencilHoverGestureHandler.swift", 102, 2, 103, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"hoverToolType(at:)", 18, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLiOSPencilHoverGestureHandler.swift", 102, 2, 103);
    }
  }
}

void CRLiOSPencilHoverGestureHandler.init()()
{
}

id CRLiOSPencilHoverGestureHandler.__deallocating_deinit()
{
  return sub_100AE8714(type metadata accessor for CRLiOSPencilHoverGestureHandler);
}

id sub_100AE8714(uint64_t (*a1)(void))
{
  v3.receiver = v1;
  v3.super_class = (Class)a1();
  return [super dealloc];
}

uint64_t type metadata accessor for CRLiOSPencilHoverGestureHandler()
{
  return self;
}

uint64_t type metadata accessor for CRLiOSPencilHoverStates()
{
  return self;
}

double *sub_100AE8820(double a1, double a2)
{
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (!Strong) {
    return _swiftEmptyArrayStorage;
  }
  id v5 = Strong;
  [Strong convertBoundsToUnscaledPoint:a1, a2];
  double v7 = v6;
  double v9 = v8;
  id v10 = [v5 parentForFreehandDrawingLayoutsAtPoint:];
  uint64_t v37 = v10;
  if (v10)
  {
    id v11 = [v10 children];
    sub_10050BF48(0, (unint64_t *)&qword_101690720);
    static Array._unconditionallyBridgeFromObjectiveC(_:)();
  }
  id v12 = self;
  sub_10050BF48(0, (unint64_t *)&qword_101690720);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v14 = [v12 freehandDrawingLayoutsToInteractWithFromLayouts:isa];

  sub_10050BF48(0, &qword_10168AB90);
  unint64_t v15 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  id v16 = v5;
  id v17 = sub_100AE8F78(v15, v16);
  swift_bridgeObjectRelease();
  uint64_t v36 = v16;

  if ((unint64_t)v17 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = (double *)_CocoaArrayWrapper.endIndex.getter();
    uint64_t v18 = (uint64_t)result;
    if (!result) {
      goto LABEL_15;
    }
  }
  else
  {
    uint64_t v18 = *(void *)(((unint64_t)v17 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = (double *)swift_bridgeObjectRetain();
    if (!v18) {
      goto LABEL_15;
    }
  }
  if (v18 < 1)
  {
    __break(1u);
    goto LABEL_45;
  }
  uint64_t v20 = 0;
  do
  {
    if (((unint64_t)v17 & 0xC000000000000001) != 0) {
      id v21 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v21 = *(id *)&v17[v20 + 4];
    }
    Swift::String v22 = v21;
    ++v20;
    id v23 = [v21 childReps:v36, v37];
    sub_10050BF48(0, (unint64_t *)&qword_101678790);
    unint64_t v24 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    sub_1006E33A4(v24);
  }
  while (v18 != v20);
LABEL_15:
  swift_bridgeObjectRelease_n();
  if (!((unint64_t)_swiftEmptyArrayStorage >> 62))
  {
    uint64_t v25 = *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = (double *)swift_bridgeObjectRetain();
    if (v25) {
      goto LABEL_17;
    }
LABEL_26:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((unint64_t)_swiftEmptyArrayStorage >> 62) {
      goto LABEL_41;
    }
    uint64_t v29 = *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
    while (v29)
    {
      uint64_t v30 = 4;
      while (1)
      {
        id v31 = ((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000001) != 0
            ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)()
            : *(id *)&_swiftEmptyArrayStorage[v30];
        uint64_t v32 = v31;
        uint64_t v33 = v30 - 3;
        if (__OFADD__(v30 - 4, 1)) {
          break;
        }
        [v31 convertNaturalPointFromUnscaledCanvas:v7, v9];
        if (!objc_msgSend(v32, "containsPoint:withPrecision:", 1)) {
          goto LABEL_29;
        }
        uint64_t result = (double *)[v32 shapeInfo];
        if (!result) {
          goto LABEL_46;
        }
        uint64_t v34 = result;
        char v35 = (*(uint64_t (**)(void))((swift_isaMask & *(void *)result) + 0x4C0))();

        if (v35)
        {
          specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
          specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
          specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized ContiguousArray._endMutation()();
        }
        else
        {
LABEL_29:
        }
        ++v30;
        if (v33 == v29) {
          goto LABEL_42;
        }
      }
      __break(1u);
LABEL_41:
      swift_bridgeObjectRetain();
      uint64_t v29 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
LABEL_42:
    swift_bridgeObjectRelease();

    return _swiftEmptyArrayStorage;
  }
  swift_bridgeObjectRetain();
  uint64_t result = (double *)_CocoaArrayWrapper.endIndex.getter();
  uint64_t v25 = (uint64_t)result;
  if (!result) {
    goto LABEL_26;
  }
LABEL_17:
  if (v25 >= 1)
  {
    for (uint64_t i = 0; i != v25; ++i)
    {
      double v27 = _swiftEmptyArrayStorage[i + 4];
      self;
      if (swift_dynamicCastObjCClass())
      {
        id v28 = *(id *)&v27;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
      }
    }
    goto LABEL_26;
  }
LABEL_45:
  __break(1u);
LABEL_46:
  __break(1u);
  return result;
}

id sub_100AE8D9C(unint64_t a1)
{
  uint64_t v3 = *v1;
  swift_bridgeObjectRetain();
  unsigned __int8 v4 = sub_1005BF09C(a1, v3);
  swift_bridgeObjectRelease();
  if (v4) {
    return (id)((v4 & 1) == 0);
  }
  sub_101035868();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *uint64_t v1 = a1;
  if (!(a1 >> 62))
  {
    uint64_t v5 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v5) {
      goto LABEL_4;
    }
    goto LABEL_13;
  }
LABEL_16:
  swift_bridgeObjectRetain();
  uint64_t v5 = _CocoaArrayWrapper.endIndex.getter();
  if (!v5)
  {
LABEL_13:
    swift_bridgeObjectRelease();
    return (id)((v4 & 1) == 0);
  }
LABEL_4:
  uint64_t v6 = 4;
  while (1)
  {
    if ((a1 & 0xC000000000000001) != 0) {
      id v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v7 = *(id *)(a1 + 8 * v6);
    }
    double v8 = v7;
    uint64_t v9 = v6 - 3;
    if (__OFADD__(v6 - 4, 1))
    {
      __break(1u);
      goto LABEL_16;
    }
    id result = [v7 styledLayout];
    if (!result) {
      break;
    }
    id v11 = result;
    [result opacity];
    double v13 = v12;

    id result = [v8 styledLayout];
    if (!result) {
      goto LABEL_19;
    }
    id v14 = result;
    [result dynamicOpacityChangeDidBegin];

    id result = [v8 styledLayout];
    if (!result) {
      goto LABEL_20;
    }
    unint64_t v15 = result;
    [result dynamicOpacityUpdateToValue:v13 * 0.2];

    ++v6;
    if (v9 == v5) {
      goto LABEL_13;
    }
  }
  __break(1u);
LABEL_19:
  __break(1u);
LABEL_20:
  __break(1u);
  return result;
}

double *sub_100AE8F78(unint64_t a1, void *a2)
{
  if (a1 >> 62) {
    goto LABEL_15;
  }
  uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v4; uint64_t v4 = _CocoaArrayWrapper.endIndex.getter())
  {
    uint64_t v5 = 4;
    while (1)
    {
      id v6 = (a1 & 0xC000000000000001) != 0
         ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)()
         : *(id *)(a1 + 8 * v5);
      id v7 = v6;
      uint64_t v8 = v5 - 3;
      if (__OFADD__(v5 - 4, 1)) {
        break;
      }
      id v9 = [a2 repForLayout:v6];

      if (v9)
      {
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
      }
      ++v5;
      if (v8 == v4) {
        goto LABEL_16;
      }
    }
    __break(1u);
LABEL_15:
    swift_bridgeObjectRetain();
  }
LABEL_16:
  swift_bridgeObjectRelease();
  return _swiftEmptyArrayStorage;
}

id sub_100AE9100()
{
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();
  *(void *)&v0[OBJC_IVAR____TtC8Freeform31CRLiOSPencilHoverGestureHandler_decorator] = 0;
  uint64_t v1 = OBJC_IVAR____TtC8Freeform31CRLiOSPencilHoverGestureHandler_previewImageProvider;
  type metadata accessor for CRLiOSPencilHoverPreviewImageProvider();
  uint64_t v2 = (void *)swift_allocObject();
  v2[3] = 0;
  v2[4] = 0;
  v2[2] = 0;
  *(void *)&v0[v1] = v2;
  uint64_t v3 = OBJC_IVAR____TtC8Freeform31CRLiOSPencilHoverGestureHandler_pencilHoverStates;
  uint64_t v4 = (objc_class *)type metadata accessor for CRLiOSPencilHoverStates();
  uint64_t v5 = objc_allocWithZone(v4);
  v5[OBJC_IVAR____TtC8Freeform23CRLiOSPencilHoverStates_currentHoverToolType] = 8;
  v9.receiver = v5;
  v9.super_class = v4;
  id v6 = v0;
  *(void *)&v0[v3] = [super init];
  swift_unknownObjectWeakAssign();
  swift_unknownObjectWeakAssign();
  *(void *)&v6[OBJC_IVAR____TtC8Freeform31CRLiOSPencilHoverGestureHandler_hoverRepManager] = [objc_allocWithZone((Class)type metadata accessor for CRLiOSPencilHoveredRepManager()) init];

  v8.receiver = v6;
  v8.super_class = (Class)type metadata accessor for CRLiOSPencilHoverGestureHandler();
  return [super init];
}

uint64_t sub_100AE9248(void *a1, double a2)
{
  if ((char *)[a1 state] - 1 > (char *)1) {
    return 0;
  }
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (!Strong)
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"shouldHandleHover(zOffset:hoverGesture:currentHoverToolWorksOutsideDrawingBounds:)", 82, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLiOSPencilHoverGestureHandler.swift", 102, 2, 189, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"shouldHandleHover(zOffset:hoverGesture:currentHoverToolWorksOutsideDrawingBounds:)", 82, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLiOSPencilHoverGestureHandler.swift", 102, 2, 189);
    return 1;
  }
  uint64_t v5 = Strong;
  id v6 = [Strong canvasView];
  [a1 locationInView:v6];
  double v8 = v7;
  double v10 = v9;

  [v5 convertBoundsToUnscaledPoint:v8, v10];
  if (a2 < 0.0 || (double v13 = v11, a2 >= 1.0))
  {

    return 0;
  }
  double v14 = v12;
  unint64_t v15 = (void *)swift_unknownObjectWeakLoadStrong();
  if (!v15)
  {

    return 1;
  }
  id v16 = [v15 shouldAllowNativeHoverPreviewAtUnscaledPoint:v13, v14];

  swift_unknownObjectRelease();
  return (uint64_t)v16;
}

uint64_t sub_100AE941C()
{
  return _swift_deallocObject(v0, 24, 7);
}

void sub_100AE9454(double a1, double a2)
{
}

uint64_t sub_100AE9478()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100AE94B0@<X0>(double *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(double, double))(v2 + 16))(*a1, a1[1]);
  *a2 = result;
  return result;
}

uint64_t sub_100AE94E4(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 32);
  uint64_t v3 = *(void **)(a1 + 64);
  uint64_t v4 = *(void **)(a1 + 72);

  return a1;
}

void sub_100AE952C(double a1, double a2)
{
  uint64_t v3 = v2;
  uint64_t v4 = OBJC_IVAR____TtC8Freeform31CRLiOSPencilHoverGestureHandler_decorator;
  uint64_t v5 = *(void **)(v2 + OBJC_IVAR____TtC8Freeform31CRLiOSPencilHoverGestureHandler_decorator);
  if (v5)
  {
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      double v9 = (void *)Strong;
      id v10 = v5;
      id v11 = [v9 freehandDrawingToolkit];
      if (v11
        && (double v12 = v11, v13 = [v11 currentTool],
                       v12,
                       v13))
      {
        if ([v13 type] == (id)8)
        {
          if (*((unsigned char *)v10 + OBJC_IVAR____TtC8Freeform30CRLiOSPencilToolShapeDecorator_isHoveredWithObjectEraser) != 1)
          {
            id v22 = *(id *)(v3 + OBJC_IVAR____TtC8Freeform31CRLiOSPencilHoverGestureHandler_hoverRepManager);
            unsigned __int8 v23 = sub_1010356C4();

            if ((v23 & 1) == 0)
            {
LABEL_27:

              goto LABEL_28;
            }
LABEL_22:
            id v24 = v10;
            [v9 invalidateLayersForDecorator:v24];

LABEL_28:
            return;
          }
          unint64_t v14 = (unint64_t)sub_100AE8820(a1, a2);
          unint64_t v15 = *(void **)(v3 + OBJC_IVAR____TtC8Freeform31CRLiOSPencilHoverGestureHandler_hoverRepManager);
          if (v14 >> 62)
          {
            sub_10050BF48(0, &qword_101674750);
            id v25 = v15;
            unint64_t v17 = _bridgeCocoaArray<A>(_:)();
            swift_bridgeObjectRelease();
            unint64_t v14 = v17;
            if (v17 >> 62)
            {
              swift_bridgeObjectRetain();
              uint64_t v26 = _CocoaArrayWrapper.endIndex.getter();
              swift_bridgeObjectRelease();
              if (v26) {
                goto LABEL_10;
              }
              goto LABEL_25;
            }
          }
          else
          {
            id v16 = v15;
            swift_bridgeObjectRetain();
            dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
            sub_10050BF48(0, &qword_101674750);
            swift_bridgeObjectRelease();
            unint64_t v17 = v14;
          }
          if (*(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
LABEL_10:
            swift_beginAccess();
            unsigned __int8 v18 = sub_100AE8D9C(v14);
            swift_endAccess();
            goto LABEL_26;
          }
LABEL_25:
          unsigned __int8 v18 = sub_1010356C4();
LABEL_26:

          swift_bridgeObjectRelease();
          if ((v18 & 1) == 0) {
            goto LABEL_27;
          }
          goto LABEL_22;
        }

        id v10 = v9;
      }
      else
      {
        id v13 = v9;
      }
    }
  }
  id v19 = *(id *)(v3 + OBJC_IVAR____TtC8Freeform31CRLiOSPencilHoverGestureHandler_hoverRepManager);
  unsigned __int8 v20 = sub_1010356C4();

  if (v20)
  {
    id v21 = (void *)swift_unknownObjectWeakLoadStrong();
    if (v21)
    {
      if (*(void *)(v3 + v4))
      {
        id v27 = v21;
        [v21 invalidateLayersForDecorator:];
        id v21 = v27;
      }
    }
  }
}

uint64_t type metadata accessor for CRLAnalyticsBoardOpenedTime()
{
  return self;
}

void sub_100AE9874(double a1)
{
  sub_100A39814((uint64_t)_swiftEmptyArrayStorage);
  id v2 = [objc_allocWithZone((Class)NSNumber) initWithDouble:a1];
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_100973904((uint64_t)v2, 0x65704F6472616F62, 0xED0000656D69546ELL, isUniquelyReferenced_nonNull_native);
  swift_bridgeObjectRelease();
  uint64_t v4 = self;
  NSString v5 = String._bridgeToObjectiveC()();
  sub_10057BCD8();
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v4 sendEventInDomain:v5 lazily:1 eventPayload:isa];
}

id sub_100AE9A70()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLCanvasLayerSnapshotHostingView();
  return [super dealloc];
}

uint64_t type metadata accessor for CRLCanvasLayerSnapshotHostingView()
{
  return self;
}

void sub_100AE9AC8()
{
  uint64_t ObjectType = &type metadata for CRLFeatureFlags;
  unint64_t v20 = sub_1005396A8();
  LOBYTE(aBlock[0]) = 6;
  char v1 = isFeatureEnabled(_:)();
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)aBlock);
  if (v1)
  {
    objc_super v2 = self;
    if (([v2 isMainThread] & 1) == 0)
    {
      sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"beginObserving()", 16, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Sync/CRLCloudQuotaMessagingObserver.swift", 95, 2, 42, (uint64_t)"This operation must only be performed on the main thread.", 57, 2u, (uint64_t)_swiftEmptyArrayStorage);
      LOBYTE(v15) = 2;
      sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"beginObserving()", 16, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Sync/CRLCloudQuotaMessagingObserver.swift", 95, 2, 42);
      [self logFullBacktrace:@"This operation must only be performed on the main thread." 57 v15];
    }
    if (([v2 isMainThread] & 1) == 0)
    {
      sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"isObserving", 11, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Sync/CRLCloudQuotaMessagingObserver.swift", 95, 2, 33, (uint64_t)"This operation must only be performed on the main thread.", 57, 2u, (uint64_t)_swiftEmptyArrayStorage);
      LOBYTE(v16) = 2;
      sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"isObserving", 11, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Sync/CRLCloudQuotaMessagingObserver.swift", 95, 2, 33);
      [self logFullBacktrace:@"This operation must only be performed on the main thread." 57 v16];
    }
    uint64_t v3 = v0 + 48;
    swift_beginAccess();
    sub_100557A70(v0 + 48, (uint64_t)aBlock);
    uint64_t v4 = ObjectType;
    sub_100522F00((uint64_t)aBlock, &qword_101672BF0);
    if (v4)
    {
      sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"beginObserving()", 16, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Sync/CRLCloudQuotaMessagingObserver.swift", 95, 2, 45, (uint64_t)"beginning cloud quota in-app messaging observation with an existing observation", 79, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"beginObserving()", 16, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Sync/CRLCloudQuotaMessagingObserver.swift", 95, 2, 45);
    }
    else
    {
      uint64_t v5 = swift_allocObject();
      swift_weakInit();
      uint64_t v6 = swift_allocObject();
      *(void *)(v6 + 16) = sub_100AEBBAC;
      *(void *)(v6 + 24) = v5;
      double v7 = self;
      swift_retain();
      id v8 = [v7 defaultCenter];
      uint64_t v9 = *(void *)(v0 + 40);
      unint64_t v20 = (unint64_t)sub_100AEBBEC;
      uint64_t v21 = v6;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = *(void *)"";
      void aBlock[2] = sub_1005E5680;
      uint64_t ObjectType = (ValueMetadata *)&unk_101523718;
      id v10 = _Block_copy(aBlock);
      swift_retain();
      swift_release();
      id v11 = [v8 addObserverForName:v9 object:0 queue:0 usingBlock:v10];
      _Block_release(v10);

      uint64_t ObjectType = (ValueMetadata *)swift_getObjectType();
      aBlock[0] = v11;
      sub_10052E248((uint64_t)aBlock, (uint64_t)v17);
      swift_beginAccess();
      sub_1005E93B8((uint64_t)v17, v3);
      swift_endAccess();
      id v12 = [self shared];
      [v12 observeUpdates];

      if (qword_10166FB10 != -1) {
        swift_once();
      }
      swift_beginAccess();
      id v13 = (id)static OS_os_log.crlCloudQuotaMessaging;
      uint64_t v14 = static os_log_type_t.default.getter();
      sub_100BAC898((uint64_t)v13, (uint64_t)&_mh_execute_header, v14, (uint64_t)"enabled cloud quota in-app messaging update observation", 55, 2, (uint64_t)_swiftEmptyArrayStorage);
      swift_release();
      swift_release();
    }
  }
}

void sub_100AE9FB0()
{
  uint64_t v0 = Notification.userInfo.getter();
  if (!v0)
  {
    long long v8 = 0u;
    long long v9 = 0u;
LABEL_12:
    sub_100522F00((uint64_t)&v8, &qword_101672BF0);
    goto LABEL_13;
  }
  uint64_t v1 = v0;
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  AnyHashable.init<A>(_:)();
  if (*(void *)(v1 + 16) && (unint64_t v2 = sub_10095647C((uint64_t)v7), (v3 & 1) != 0))
  {
    sub_100522D7C(*(void *)(v1 + 56) + 32 * v2, (uint64_t)&v8);
  }
  else
  {
    long long v8 = 0u;
    long long v9 = 0u;
  }
  swift_bridgeObjectRelease();
  sub_10050BFE0((uint64_t)v7);
  if (!*((void *)&v9 + 1)) {
    goto LABEL_12;
  }
  sub_10050BF48(0, &qword_101690960);
  if (swift_dynamicCast())
  {
    uint64_t v4 = (void *)v7[0];
    swift_beginAccess();
    if (swift_weakLoadStrong())
    {
      sub_100AEA8D4(v4);
      swift_release();
    }

    return;
  }
LABEL_13:
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    if (qword_10166FB10 != -1) {
      swift_once();
    }
    swift_beginAccess();
    id v5 = (id)static OS_os_log.crlCloudQuotaMessaging;
    uint64_t v6 = static os_log_type_t.default.getter();
    sub_100BAC898((uint64_t)v5, (uint64_t)&_mh_execute_header, v6, (uint64_t)"received empty cloud quota in-app message; resetting messaging",
      62,
      2,
      (uint64_t)_swiftEmptyArrayStorage);

    sub_100AEAB0C((void *)1);
    swift_release();
  }
}

uint64_t sub_100AEA1BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v24 = a2;
  uint64_t v5 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v27 = *(void *)(v5 - 8);
  __chkstk_darwin(v5, v6);
  long long v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for DispatchQoS();
  uint64_t v25 = *(void *)(v9 - 8);
  uint64_t v26 = v9;
  __chkstk_darwin(v9, v10);
  id v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for Notification();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(void *)(v14 + 64);
  __chkstk_darwin(v13, v16);
  sub_10050BF48(0, (unint64_t *)&qword_1016725C0);
  uint64_t v23 = static OS_dispatch_queue.main.getter();
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))((char *)&v22 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v13);
  unint64_t v17 = (*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = v24;
  *(void *)(v18 + 24) = a3;
  (*(void (**)(unint64_t, char *, uint64_t))(v14 + 32))(v18 + v17, (char *)&v22 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0), v13);
  aBlock[4] = sub_100AEBCD8;
  aBlock[5] = v18;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = *(void *)"";
  void aBlock[2] = sub_100679958;
  void aBlock[3] = &unk_101523768;
  id v19 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_100522CDC();
  sub_1005057FC((uint64_t *)&unk_1016725D0);
  sub_10056B494();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  unint64_t v20 = (void *)v23;
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v19);

  (*(void (**)(char *, uint64_t))(v27 + 8))(v8, v5);
  return (*(uint64_t (**)(char *, uint64_t))(v25 + 8))(v12, v26);
}

void sub_100AEA51C()
{
  uint64_t v13 = &type metadata for CRLFeatureFlags;
  unint64_t v14 = sub_1005396A8();
  LOBYTE(v12) = 6;
  char v1 = isFeatureEnabled(_:)();
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v12);
  if (v1)
  {
    unint64_t v2 = self;
    if (([v2 isMainThread] & 1) == 0)
    {
      sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"isObserving", 11, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Sync/CRLCloudQuotaMessagingObserver.swift", 95, 2, 33, (uint64_t)"This operation must only be performed on the main thread.", 57, 2u, (uint64_t)_swiftEmptyArrayStorage);
      LOBYTE(v8) = 2;
      sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"isObserving", 11, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Sync/CRLCloudQuotaMessagingObserver.swift", 95, 2, 33);
      [self logFullBacktrace:@"This operation must only be performed on the main thread." 57 v8];
    }
    swift_beginAccess();
    sub_100557A70(v0 + 48, (uint64_t)&v12);
    char v3 = v13;
    sub_100522F00((uint64_t)&v12, &qword_101672BF0);
    if (v3)
    {
      if (([v2 isMainThread] & 1) == 0)
      {
        sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"endObserving()", 14, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Sync/CRLCloudQuotaMessagingObserver.swift", 95, 2, 70, (uint64_t)"This operation must only be performed on the main thread.", 57, 2u, (uint64_t)_swiftEmptyArrayStorage);
        LOBYTE(v9) = 2;
        sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"endObserving()", 14, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Sync/CRLCloudQuotaMessagingObserver.swift", 95, 2, 70);
        [self logFullBacktrace:@"This operation must only be performed on the main thread." 57 v9];
      }
      sub_100557A70(v0 + 48, (uint64_t)&v10);
      if (*((void *)&v11 + 1))
      {
        sub_100575CE8(&v10, &v12);
        id v4 = [self defaultCenter];
        sub_10050F848(&v12, (uint64_t)v13);
        [v4 removeObserver:_bridgeAnythingToObjectiveC<A>(_:)() name:*(void *)(v0 + 40) object:0];

        swift_unknownObjectRelease();
        long long v10 = 0u;
        long long v11 = 0u;
        swift_beginAccess();
        sub_1005E93B8((uint64_t)&v10, v0 + 48);
        swift_endAccess();
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v12);
      }
      else
      {
        sub_100522F00((uint64_t)&v10, &qword_101672BF0);
      }
      id v5 = [self shared];
      [v5 stopObservingUpdates];

      if (qword_10166FB10 != -1) {
        swift_once();
      }
      swift_beginAccess();
      id v6 = (id)static OS_os_log.crlCloudQuotaMessaging;
      uint64_t v7 = static os_log_type_t.default.getter();
      sub_100BAC898((uint64_t)v6, (uint64_t)&_mh_execute_header, v7, (uint64_t)"disabled cloud quota in-app messaging update observation", 56, 2, (uint64_t)_swiftEmptyArrayStorage);
    }
  }
}

void sub_100AEA8D4(void *a1)
{
  if (qword_10166FB10 != -1) {
    swift_once();
  }
  swift_beginAccess();
  unint64_t v2 = (void *)static OS_os_log.crlCloudQuotaMessaging;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117E810;
  id v4 = v2;
  id v5 = [a1 reason];
  if (v5)
  {
    id v6 = v5;
    uint64_t v7 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v9 = v8;
  }
  else
  {
    unint64_t v9 = 0xE900000000000029;
    uint64_t v7 = 0x6E776F6E6B6E7528;
  }
  *(void *)(inited + 56) = &type metadata for String;
  *(void *)(inited + 64) = sub_100528BE4();
  *(void *)(inited + 32) = v7;
  *(void *)(inited + 40) = v9;
  uint64_t v10 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v4, (uint64_t)&_mh_execute_header, v10, (uint64_t)"received cloud quota in-app message for reason %@", 49, 2, inited);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  id v11 = [a1 reason];
  if (v11)
  {
    long long v12 = v11;
    uint64_t v13 = (void *)ICQUIInAppMessageReasoniCloudAlmostFull;
    uint64_t v14 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v16 = v15;
    if (v14 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v16 == v17)
    {
      id v18 = v13;

      swift_bridgeObjectRelease_n();
    }
    else
    {
      char v19 = _stringCompareWithSmolCheck(_:_:expecting:)();
      id v20 = v13;

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v19 & 1) == 0) {
        return;
      }
    }
    sub_100AEAB0C(a1);
  }
}

void sub_100AEAB0C(void *a1)
{
  if (([self isMainThread] & 1) == 0)
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"updateEvent(to:)", 16, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Sync/CRLCloudQuotaMessagingObserver.swift", 95, 2, 95, (uint64_t)"This operation must only be performed on the main thread.", 57, 2u, (uint64_t)_swiftEmptyArrayStorage);
    LOBYTE(v5) = 2;
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"updateEvent(to:)", 16, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Sync/CRLCloudQuotaMessagingObserver.swift", 95, 2, 95);
    [self logFullBacktrace:@"This operation must only be performed on the main thread." 57 v5];
  }
  char v3 = *(void **)(v1 + 32);
  *(void *)(v1 + 32) = a1;
  sub_100AEBB54(a1);
  sub_100AEBB64(v3);
  if (swift_unknownObjectWeakLoadStrong())
  {
    id v4 = *(void **)(v1 + 32);
    if ((unint64_t)v4 > 1)
    {
      sub_100E5196C(v4);
      swift_unknownObjectRelease();
      sub_100AEBB64(v4);
    }
    else
    {
      swift_unknownObjectRelease();
    }
  }
}

uint64_t sub_100AEACB4(void *a1, uint64_t a2)
{
  uint64_t v4 = sub_1005057FC(&qword_101672EB0);
  __chkstk_darwin(v4 - 8, v5);
  uint64_t v7 = (char *)v51 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v53 = type metadata accessor for Date();
  uint64_t v8 = *(void *)(v53 - 8);
  __chkstk_darwin(v53, v9);
  id v11 = (char *)v51 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&double v14 = __chkstk_darwin(v12, v13).n128_u64[0];
  uint64_t v16 = (char *)v51 - v15;
  id v17 = [a1 reason:v14];
  double v52 = v16;
  if (v17)
  {
    id v18 = v17;
    uint64_t v55 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v56 = v19;
  }
  else
  {
    unint64_t v56 = 0xE900000000000029;
    uint64_t v55 = 0x6E776F6E6B6E7528;
  }
  uint64_t v57 = UUID.uuidString.getter();
  uint64_t v58 = v20;
  swift_bridgeObjectRetain();
  v21._countAndFlagsBits = 58;
  v21._object = (void *)0xE100000000000000;
  String.append(_:)(v21);
  swift_bridgeObjectRelease();
  uint64_t v22 = v57;
  uint64_t v23 = v58;
  uint64_t v24 = (uint64_t *)(a2 + *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20));
  uint64_t v26 = *v24;
  uint64_t v25 = (void *)v24[1];
  uint64_t v57 = v22;
  uint64_t v58 = v23;
  swift_bridgeObjectRetain();
  v27._countAndFlagsBits = v26;
  v27._object = v25;
  String.append(_:)(v27);
  swift_bridgeObjectRelease();
  uint64_t v28 = v58;
  uint64_t v54 = v57;
  id v29 = [self standardUserDefaults];
  sub_100AEB240(a2);
  NSString v30 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  LODWORD(v22) = [v29 BOOLForKey:v30];

  if (v22)
  {
    if (qword_10166FB10 != -1) {
      swift_once();
    }
    swift_beginAccess();
    id v31 = (void *)static OS_os_log.crlCloudQuotaMessaging;
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_10117D8C0;
    *(void *)(inited + 56) = &type metadata for String;
    unint64_t v33 = sub_100528BE4();
    *(void *)(inited + 32) = v55;
    *(void *)(inited + 40) = v56;
    *(void *)(inited + 96) = &type metadata for String;
    *(void *)(inited + 104) = v33;
    uint64_t v34 = v54;
    *(void *)(inited + 64) = v33;
    *(void *)(inited + 72) = v34;
    *(void *)(inited + 80) = v28;
    id v35 = v31;
    uint64_t v36 = static os_log_type_t.default.getter();
    sub_100BAC898((uint64_t)v35, (uint64_t)&_mh_execute_header, v36, (uint64_t)"cloud quota message alert for reason %@ was already shown for board %@", 70, 2, inited);
    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();

    return 0;
  }
  else
  {
    sub_100AEB404(a1, (uint64_t)v7);
    uint64_t v38 = v8;
    char v39 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48);
    uint64_t v40 = v53;
    if (v39(v7, 1, v53) == 1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_100522F00((uint64_t)v7, &qword_101672EB0);
      return 1;
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v38 + 32))(v52, v7, v40);
      static Date.now.getter();
      Date.timeIntervalSince(_:)();
      double v42 = v41;
      id v43 = *(void (**)(char *, uint64_t))(v38 + 8);
      v51[1] = v38 + 8;
      v43(v11, v40);
      BOOL v37 = v42 > 604800.0;
      if (qword_10166FB10 != -1) {
        swift_once();
      }
      swift_beginAccess();
      id v44 = (void *)static OS_os_log.crlCloudQuotaMessaging;
      sub_1005057FC((uint64_t *)&unk_101672B40);
      uint64_t v45 = swift_initStackObject();
      *(_OWORD *)(v45 + 16) = xmmword_10117DF40;
      *(void *)(v45 + 56) = &type metadata for String;
      unint64_t v46 = sub_100528BE4();
      *(void *)(v45 + 32) = v55;
      *(void *)(v45 + 40) = v56;
      *(void *)(v45 + 96) = &type metadata for String;
      *(void *)(v45 + 104) = v46;
      uint64_t v47 = v54;
      *(void *)(v45 + 64) = v46;
      *(void *)(v45 + 72) = v47;
      *(void *)(v45 + 80) = v28;
      *(void *)(v45 + 136) = &type metadata for Bool;
      *(void *)(v45 + 144) = &protocol witness table for Bool;
      *(unsigned char *)(v45 + 112) = v42 > 604800.0;
      id v48 = v44;
      uint64_t v49 = static os_log_type_t.default.getter();
      sub_100BAC898((uint64_t)v48, (uint64_t)&_mh_execute_header, v49, (uint64_t)"cloud quota message alert for reason %@ and board %@ timeout is elapsed = %d", 76, 2, v45);
      swift_setDeallocating();
      sub_1005057FC(&qword_101672B50);
      swift_arrayDestroy();

      v43(v52, v40);
    }
  }
  return v37;
}

uint64_t sub_100AEB240(uint64_t a1)
{
  uint64_t v20 = UUID.uuidString.getter();
  uint64_t v22 = v3;
  swift_bridgeObjectRetain();
  v4._countAndFlagsBits = 58;
  v4._object = (void *)0xE100000000000000;
  String.append(_:)(v4);
  swift_bridgeObjectRelease();
  uint64_t v5 = (uint64_t *)(a1 + *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20));
  uint64_t v6 = *v5;
  uint64_t v7 = (void *)v5[1];
  swift_bridgeObjectRetain();
  v8._countAndFlagsBits = v6;
  v8._object = v7;
  String.append(_:)(v8);
  swift_bridgeObjectRelease();
  uint64_t v9 = v20;
  uint64_t v21 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  swift_bridgeObjectRetain();
  v10._countAndFlagsBits = 45;
  v10._object = (void *)0xE100000000000000;
  String.append(_:)(v10);
  swift_bridgeObjectRelease();
  id v11 = [v1 reason];
  if (v11)
  {
    uint64_t v12 = v11;
    uint64_t v13 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v15 = v14;
  }
  else
  {
    uint64_t v15 = (void *)0xE900000000000029;
    uint64_t v13 = 0x6E776F6E6B6E7528;
  }
  swift_bridgeObjectRetain();
  v16._countAndFlagsBits = v13;
  v16._object = v15;
  String.append(_:)(v16);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  v17._countAndFlagsBits = 45;
  v17._object = (void *)0xE100000000000000;
  String.append(_:)(v17);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  v18._countAndFlagsBits = v9;
  v18._object = v22;
  String.append(_:)(v18);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v21;
}

uint64_t sub_100AEB404@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  id v4 = [self standardUserDefaults];
  *(void *)&v19[0] = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *((void *)&v19[0] + 1) = v5;
  swift_bridgeObjectRetain();
  v6._countAndFlagsBits = 45;
  v6._object = (void *)0xE100000000000000;
  String.append(_:)(v6);
  swift_bridgeObjectRelease();
  id v7 = [a1 reason];
  if (v7)
  {
    Swift::String v8 = v7;
    uint64_t v9 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    id v11 = v10;
  }
  else
  {
    id v11 = (void *)0xE900000000000029;
    uint64_t v9 = 0x6E776F6E6B6E7528;
  }
  swift_bridgeObjectRetain();
  v12._countAndFlagsBits = v9;
  v12._object = v11;
  String.append(_:)(v12);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  NSString v13 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v14 = [v4 objectForKey:v13, v19[0]];

  if (v14)
  {
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v19, 0, sizeof(v19));
  }
  sub_10052E248((uint64_t)v19, (uint64_t)v20);
  if (v21)
  {
    uint64_t v15 = type metadata accessor for Date();
    int v16 = swift_dynamicCast();
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(a2, v16 ^ 1u, 1, v15);
  }
  else
  {
    sub_100522F00((uint64_t)v20, &qword_101672BF0);
    uint64_t v18 = type metadata accessor for Date();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(a2, 1, 1, v18);
  }
}

uint64_t sub_100AEB644()
{
  sub_100523398(v0 + 16);
  sub_100AEBB64(*(id *)(v0 + 32));

  sub_100522F00(v0 + 48, &qword_101672BF0);

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for CRLCloudQuotaMessagingObserver()
{
  return self;
}

void *initializeBufferWithCopyOfBuffer for CRLCloudQuotaMessagingEvent(void *a1, void **a2)
{
  char v3 = *a2;
  if ((unint64_t)*a2 >= 0xFFFFFFFF) {
    id v4 = v3;
  }
  *a1 = v3;
  return a1;
}

void destroy for CRLCloudQuotaMessagingEvent(void **a1)
{
  uint64_t v1 = *a1;
  if ((unint64_t)v1 >= 0xFFFFFFFF) {
}
  }

void **assignWithCopy for CRLCloudQuotaMessagingEvent(void **a1, void **a2)
{
  char v3 = *a1;
  id v4 = *a2;
  if ((unint64_t)*a1 < 0xFFFFFFFF)
  {
    if ((unint64_t)v4 >= 0xFFFFFFFF)
    {
      *a1 = v4;
      id v6 = v4;
      return a1;
    }
LABEL_7:
    *a1 = v4;
    return a1;
  }
  if ((unint64_t)v4 < 0xFFFFFFFF)
  {

    id v4 = *a2;
    goto LABEL_7;
  }
  *a1 = v4;
  id v5 = v4;

  return a1;
}

void **assignWithTake for CRLCloudQuotaMessagingEvent(void **a1, unint64_t *a2)
{
  char v3 = *a1;
  unint64_t v4 = *a2;
  if ((unint64_t)*a1 < 0xFFFFFFFF) {
    goto LABEL_6;
  }
  if (v4 < 0xFFFFFFFF)
  {

LABEL_6:
    *a1 = (void *)v4;
    return a1;
  }
  *a1 = (void *)v4;

  return a1;
}

uint64_t getEnumTagSinglePayload for CRLCloudQuotaMessagingEvent(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFE && *((unsigned char *)a1 + 8)) {
    return (*(_DWORD *)a1 + 2147483646);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  unsigned int v4 = v3 + 1;
  unsigned int v5 = v3 - 1;
  if (v4 >= 3) {
    return v5;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for CRLCloudQuotaMessagingEvent(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFD)
  {
    *(void *)uint64_t result = 0;
    *(_DWORD *)uint64_t result = a2 - 2147483646;
    if (a3 >= 0x7FFFFFFE) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFE) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2) {
      *(void *)uint64_t result = a2 + 1;
    }
  }
  return result;
}

uint64_t sub_100AEB8AC(uint64_t *a1)
{
  uint64_t v1 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  return (v1 + 1);
}

void *sub_100AEB8C4(void *result, int a2)
{
  if (a2 < 0)
  {
    unsigned int v2 = a2 ^ 0x80000000;
  }
  else
  {
    if (!a2) {
      return result;
    }
    unsigned int v2 = a2 - 1;
  }
  *uint64_t result = v2;
  return result;
}

ValueMetadata *type metadata accessor for CRLCloudQuotaMessagingEvent()
{
  return &type metadata for CRLCloudQuotaMessagingEvent;
}

void sub_100AEB8F4(void *a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Date();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4, v6);
  Swift::String v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = self;
  id v10 = [v9 standardUserDefaults];
  static Date.now.getter();
  v11.super.Class isa = Date._bridgeToObjectiveC()().super.isa;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  uint64_t v25 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v26 = v12;
  swift_bridgeObjectRetain();
  v13._countAndFlagsBits = 45;
  v13._object = (void *)0xE100000000000000;
  String.append(_:)(v13);
  swift_bridgeObjectRelease();
  uint64_t v15 = v25;
  uint64_t v14 = v26;
  id v16 = [a1 reason];
  if (v16)
  {
    Swift::String v17 = v16;
    uint64_t v18 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v20 = v19;
  }
  else
  {
    uint64_t v20 = (void *)0xE900000000000029;
    uint64_t v18 = 0x6E776F6E6B6E7528;
  }
  uint64_t v25 = v15;
  uint64_t v26 = v14;
  swift_bridgeObjectRetain();
  v21._countAndFlagsBits = v18;
  v21._object = v20;
  String.append(_:)(v21);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  NSString v22 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v10 setObject:v11.super.isa forKey:v22];

  id v23 = [v9 standardUserDefaults];
  sub_100AEB240(a2);
  NSString v24 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v23 setBool:1 forKey:v24];
}

id sub_100AEBB54(id result)
{
  if ((unint64_t)result >= 2) {
    return result;
  }
  return result;
}

void sub_100AEBB64(id a1)
{
  if ((unint64_t)a1 >= 2) {
}
  }

uint64_t sub_100AEBB74()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_100AEBBAC()
{
}

uint64_t sub_100AEBBB4()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100AEBBEC(uint64_t a1)
{
  return sub_100AEA1BC(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_100AEBBF4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100AEBC04()
{
  return swift_release();
}

uint64_t sub_100AEBC0C()
{
  uint64_t v1 = type metadata accessor for Notification();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 32) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_100AEBCD8()
{
  uint64_t v1 = *(void *)(type metadata accessor for Notification() - 8);
  return (*(uint64_t (**)(unint64_t))(v0 + 16))(v0 + ((*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80)));
}

void sub_100AEBD4C(void *a1, uint64_t a2, uint64_t a3)
{
  NSString v7 = String._bridgeToObjectiveC()();
  (*(void (**)(uint64_t, uint64_t))(a3 + 8))(a2, a3);
  NSString v8 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [a1 startedSubTest:v7 forTest:v8];

  uint64_t v9 = (void *)swift_allocObject();
  _OWORD v9[2] = a2;
  v9[3] = a3;
  _OWORD v9[4] = a1;
  v9[5] = v3;
  _OWORD v12[4] = sub_100AF3240;
  v12[5] = v9;
  v12[0] = _NSConcreteStackBlock;
  v12[1] = *(void *)"";
  v12[2] = sub_100679958;
  v12[3] = &unk_101523D80;
  id v10 = _Block_copy(v12);
  id v11 = a1;
  swift_release();
  [v11 installCACommitCompletionBlock:v10];
  _Block_release(v10);
}

void sub_100AEBEBC(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  NSString v7 = String._bridgeToObjectiveC()();
  NSString v8 = *(void (**)(uint64_t, uint64_t))(a4 + 8);
  v8(a3, a4);
  NSString v9 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [a1 finishedSubTest:v7 forTest:v9];

  NSString v10 = String._bridgeToObjectiveC()();
  v8(a3, a4);
  id v11 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [a1 startedSubTest:v10 forTest:v11];
}

void sub_100AEC000(void *a1, uint64_t a2, uint64_t a3)
{
  NSString v6 = String._bridgeToObjectiveC()();
  (*(void (**)(uint64_t, uint64_t))(a3 + 8))(a2, a3);
  id v7 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [a1 finishedSubTest:v6 forTest:v7];
}

void sub_100AEC0C0(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  if (qword_10166F6B0 != -1) {
    swift_once();
  }
  uint64_t v46 = 0x6F69746172657469;
  unint64_t v47 = 0xEA0000000000736ELL;
  AnyHashable.init<A>(_:)();
  swift_beginAccess();
  uint64_t v7 = qword_10171B3F8;
  if (*(void *)(qword_10171B3F8 + 16) && (unint64_t v8 = sub_10095647C((uint64_t)&aBlock), (v9 & 1) != 0))
  {
    sub_100522D7C(*(void *)(v7 + 56) + 32 * v8, (uint64_t)&v48);
  }
  else
  {
    long long v48 = 0u;
    long long v49 = 0u;
  }
  swift_endAccess();
  sub_10050BFE0((uint64_t)&aBlock);
  if (*((void *)&v49 + 1))
  {
    if (swift_dynamicCast())
    {
      uint64_t v10 = v46;
      unint64_t v11 = v47;
      goto LABEL_12;
    }
  }
  else
  {
    sub_100522F00((uint64_t)&v48, &qword_101672BF0);
  }
  unint64_t v11 = 0xE100000000000000;
  uint64_t v10 = 53;
LABEL_12:
  uint64_t v12 = HIBYTE(v11) & 0xF;
  uint64_t v13 = v10 & 0xFFFFFFFFFFFFLL;
  if ((v11 & 0x2000000000000000) != 0) {
    uint64_t v14 = HIBYTE(v11) & 0xF;
  }
  else {
    uint64_t v14 = v10 & 0xFFFFFFFFFFFFLL;
  }
  if (!v14)
  {
    uint64_t v10 = swift_bridgeObjectRelease();
    goto LABEL_67;
  }
  if ((v11 & 0x1000000000000000) != 0) {
    goto LABEL_68;
  }
  if ((v11 & 0x2000000000000000) == 0)
  {
    if ((v10 & 0x1000000000000000) != 0) {
      uint64_t v15 = (unsigned __int8 *)((v11 & 0xFFFFFFFFFFFFFFFLL) + 32);
    }
    else {
      uint64_t v15 = (unsigned __int8 *)_StringObject.sharedUTF8.getter();
    }
    uint64_t v16 = (uint64_t)sub_100AF2340(v15, v13, 10);
    char v18 = v17 & 1;
    goto LABEL_45;
  }
  long long aBlock = (void **)v10;
  uint64_t v41 = v11 & 0xFFFFFFFFFFFFFFLL;
  if (v10 == 43)
  {
    if (v12)
    {
      if (v12 != 1 && (BYTE1(v10) - 48) <= 9u)
      {
        uint64_t v16 = (BYTE1(v10) - 48);
        if (v12 == 2) {
          goto LABEL_44;
        }
        if ((BYTE2(v10) - 48) <= 9u)
        {
          uint64_t v16 = 10 * (BYTE1(v10) - 48) + (BYTE2(v10) - 48);
          uint64_t v19 = v12 - 3;
          if (v19)
          {
            uint64_t v20 = (unsigned __int8 *)&aBlock + 3;
            while (1)
            {
              unsigned int v21 = *v20 - 48;
              if (v21 > 9) {
                goto LABEL_42;
              }
              uint64_t v22 = 10 * v16;
              if ((unsigned __int128)(v16 * (__int128)10) >> 64 != (10 * v16) >> 63) {
                goto LABEL_42;
              }
              uint64_t v16 = v22 + v21;
              if (__OFADD__(v22, v21)) {
                goto LABEL_42;
              }
              char v18 = 0;
              ++v20;
              if (!--v19) {
                goto LABEL_45;
              }
            }
          }
          goto LABEL_44;
        }
      }
      goto LABEL_42;
    }
LABEL_71:
    __break(1u);
    goto LABEL_72;
  }
  if (v10 != 45)
  {
    if (v12 && (v10 - 48) <= 9u)
    {
      uint64_t v16 = (v10 - 48);
      if (v12 == 1) {
        goto LABEL_44;
      }
      if ((BYTE1(v10) - 48) <= 9u)
      {
        uint64_t v16 = 10 * (v10 - 48) + (BYTE1(v10) - 48);
        uint64_t v31 = v12 - 2;
        if (v31)
        {
          uint64_t v32 = (unsigned __int8 *)&aBlock + 2;
          while (1)
          {
            unsigned int v33 = *v32 - 48;
            if (v33 > 9) {
              goto LABEL_42;
            }
            uint64_t v34 = 10 * v16;
            if ((unsigned __int128)(v16 * (__int128)10) >> 64 != (10 * v16) >> 63) {
              goto LABEL_42;
            }
            uint64_t v16 = v34 + v33;
            if (__OFADD__(v34, v33)) {
              goto LABEL_42;
            }
            char v18 = 0;
            ++v32;
            if (!--v31) {
              goto LABEL_45;
            }
          }
        }
        goto LABEL_44;
      }
    }
LABEL_42:
    uint64_t v16 = 0;
    char v18 = 1;
    goto LABEL_45;
  }
  if (!v12)
  {
    __break(1u);
    goto LABEL_71;
  }
  if (v12 == 1 || (BYTE1(v10) - 48) > 9u) {
    goto LABEL_42;
  }
  if (v12 != 2)
  {
    if ((BYTE2(v10) - 48) <= 9u)
    {
      uint64_t v16 = -10 * (BYTE1(v10) - 48) - (BYTE2(v10) - 48);
      uint64_t v35 = v12 - 3;
      if (v35)
      {
        uint64_t v36 = (unsigned __int8 *)&aBlock + 3;
        while (1)
        {
          unsigned int v37 = *v36 - 48;
          if (v37 > 9) {
            goto LABEL_42;
          }
          uint64_t v38 = 10 * v16;
          if ((unsigned __int128)(v16 * (__int128)10) >> 64 != (10 * v16) >> 63) {
            goto LABEL_42;
          }
          uint64_t v16 = v38 - v37;
          if (__OFSUB__(v38, v37)) {
            goto LABEL_42;
          }
          char v18 = 0;
          ++v36;
          if (!--v35) {
            goto LABEL_45;
          }
        }
      }
LABEL_44:
      char v18 = 0;
      goto LABEL_45;
    }
    goto LABEL_42;
  }
  char v18 = 0;
  uint64_t v16 = -(uint64_t)(BYTE1(v10) - 48);
LABEL_45:
  while (1)
  {
    uint64_t v10 = swift_bridgeObjectRelease();
    if ((v18 & 1) == 0) {
      break;
    }
LABEL_67:
    __break(1u);
LABEL_68:
    uint64_t v16 = (uint64_t)sub_100AF2258(v10, v11, 10);
    char v18 = v39;
  }
  sub_1008E1F2C();
  NSString v23 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [a2 startedTest:v23];

  uint64_t v24 = swift_allocObject();
  *(void *)(v24 + 16) = a2;
  *(void *)(v24 + 24) = a4;
  if (v16 < 1)
  {
    id v30 = a2;
    sub_100AEC634(v30);

    swift_release();
    return;
  }
  uint64_t v25 = *(void **)(a3 + 16);
  if (v25)
  {
    uint64_t v26 = (void *)swift_allocObject();
    v26[2] = 4;
    v26[3] = a3;
    _OWORD v26[4] = v16;
    void v26[5] = sub_100AF3078;
    v26[6] = v24;
    id v44 = sub_100AF3084;
    uint64_t v45 = v26;
    long long aBlock = _NSConcreteStackBlock;
    uint64_t v41 = *(void *)"";
    double v42 = sub_100F8FD18;
    id v43 = &unk_101523AB0;
    Swift::String v27 = _Block_copy(&aBlock);
    id v28 = a2;
    id v29 = v25;
    swift_retain();
    swift_retain();
    swift_release();
    [v29 rotateIfNeeded:4 completion:v27];
    _Block_release(v27);

    swift_release();
    return;
  }
LABEL_72:
  __break(1u);
}

void sub_100AEC634(void *a1)
{
  sub_1008E1F2C();
  id v2 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [a1 finishedTest:v2];
}

uint64_t sub_100AEC6AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v25 = a4;
  uint64_t v26 = a5;
  uint64_t v9 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9, v11);
  uint64_t v13 = (char *)&v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = type metadata accessor for DispatchQoS();
  uint64_t v14 = *(void *)(v27 - 8);
  __chkstk_darwin(v27, v15);
  char v17 = (char *)&v24 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2 == 1) {
    uint64_t v18 = 4;
  }
  else {
    uint64_t v18 = 1;
  }
  sub_100656064();
  uint64_t v19 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v20 = (void *)swift_allocObject();
  void v20[2] = a3;
  v20[3] = v18;
  uint64_t v21 = v26;
  v20[4] = v25;
  v20[5] = v21;
  v20[6] = a6;
  aBlock[4] = sub_100AF30C8;
  aBlock[5] = v20;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = *(void *)"";
  void aBlock[2] = sub_100679958;
  void aBlock[3] = &unk_101523B00;
  uint64_t v22 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_100AF2F98((unint64_t *)&qword_1016747E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_1005057FC((uint64_t *)&unk_1016725D0);
  sub_10056B494();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v22);

  (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
  return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v17, v27);
}

void sub_100AEC98C(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void), uint64_t a5)
{
  uint64_t v5 = a3 - 1;
  if (__OFSUB__(a3, 1))
  {
    __break(1u);
LABEL_8:
    __break(1u);
    return;
  }
  if (v5 >= 1)
  {
    uint64_t v9 = *(void **)(a1 + 16);
    if (v9)
    {
      uint64_t v11 = (void *)swift_allocObject();
      v11[2] = a2;
      v11[3] = a1;
      v11[4] = v5;
      v11[5] = a4;
      void v11[6] = a5;
      _OWORD v14[4] = sub_100AF3084;
      v14[5] = v11;
      v14[0] = _NSConcreteStackBlock;
      v14[1] = *(void *)"";
      v14[2] = sub_100F8FD18;
      _DWORD v14[3] = &unk_101523B50;
      uint64_t v12 = _Block_copy(v14);
      id v13 = v9;
      swift_retain();
      swift_retain();
      swift_release();
      [v13 rotateIfNeeded:a2 completion:v12];
      _Block_release(v12);

      return;
    }
    goto LABEL_8;
  }
  a4();
}

uint64_t sub_100AECAC8()
{
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = 0;
  *(unsigned char *)(result + 24) = 1;
  return result;
}

void sub_100AECAF8(void *a1)
{
  sub_1008E1F2C();
  NSString v2 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  _StringGuts.grow(_:)(24);
  swift_bridgeObjectRelease();
  id v3 = String._bridgeToObjectiveC()();
  [a1 failedTest:v2 withFailure:v3];
}

uint64_t sub_100AECBE0(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v38 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v41 = *(void *)(v38 - 8);
  __chkstk_darwin(v38, v4);
  unsigned int v37 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for DispatchQoS();
  uint64_t v39 = *(void *)(v6 - 8);
  uint64_t v40 = v6;
  __chkstk_darwin(v6, v7);
  uint64_t v36 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for DispatchTimeInterval();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9, v11);
  id v13 = (uint64_t *)((char *)&v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v34 = type metadata accessor for DispatchTime();
  uint64_t v14 = *(void *)(v34 - 8);
  __chkstk_darwin(v34, v15);
  char v17 = (char *)&v34 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18, v19);
  uint64_t v21 = (char *)&v34 - v20;
  uint64_t v22 = *(void **)(v2 + 16);
  *(void *)(v2 + 16) = a1;
  id v23 = a1;

  *(unsigned char *)(v2 + 24) = 1;
  sub_100656064();
  uint64_t v35 = static OS_dispatch_queue.main.getter();
  static DispatchTime.now()();
  *id v13 = 1;
  (*(void (**)(void *, void, uint64_t))(v10 + 104))(v13, enum case for DispatchTimeInterval.seconds(_:), v9);
  DispatchTime.advanced(by:)();
  (*(void (**)(void *, uint64_t))(v10 + 8))(v13, v9);
  uint64_t v24 = *(void (**)(char *, uint64_t))(v14 + 8);
  uint64_t v25 = v34;
  v24(v17, v34);
  uint64_t v26 = swift_allocObject();
  *(void *)(v26 + 16) = v2;
  *(void *)(v26 + 24) = v23;
  aBlock[4] = sub_100AF2238;
  aBlock[5] = v26;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = *(void *)"";
  void aBlock[2] = sub_100679958;
  void aBlock[3] = &unk_101523808;
  uint64_t v27 = _Block_copy(aBlock);
  id v28 = v23;
  swift_retain();
  swift_release();
  id v29 = v36;
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_100AF2F98((unint64_t *)&qword_1016747E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_1005057FC((uint64_t *)&unk_1016725D0);
  sub_10056B494();
  uint64_t v31 = v37;
  uint64_t v30 = v38;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  uint64_t v32 = (void *)v35;
  OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
  _Block_release(v27);

  (*(void (**)(char *, uint64_t))(v41 + 8))(v31, v30);
  (*(void (**)(char *, uint64_t))(v39 + 8))(v29, v40);
  return ((uint64_t (*)(char *, uint64_t))v24)(v21, v25);
}

void sub_100AED060(uint64_t a1, void *a2)
{
  id v71 = a2;
  uint64_t v69 = a1;
  uint64_t v2 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v75 = *(void *)(v2 - 8);
  __chkstk_darwin(v2, v3);
  uint64_t v72 = (char *)&v62 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for DispatchQoS();
  uint64_t v73 = *(void *)(v5 - 8);
  uint64_t v74 = v5;
  __chkstk_darwin(v5, v6);
  id v70 = (char *)&v62 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for DispatchTimeInterval();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8, v10);
  uint64_t v12 = (id *)((char *)&v62 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v13 = type metadata accessor for DispatchTime();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13, v15);
  char v17 = (char *)&v62 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18, v19);
  uint64_t v21 = (char *)&v62 - v20;
  uint64_t v22 = sub_1005057FC(&qword_101672BB0);
  __chkstk_darwin(v22 - 8, v23);
  uint64_t v67 = (char *)&v62 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v25 = [self sharedApplication];
  id v26 = [v25 delegate];

  if (!v26)
  {
    __break(1u);
    return;
  }
  type metadata accessor for CRLiOSAppDelegate();
  swift_dynamicCastClassUnconditional();
  sub_1006C6B2C();
  id v28 = v27;
  swift_unknownObjectRelease();
  if (v28)
  {
    uint64_t v68 = v2;
    id v29 = sub_100A70A50();
    id v30 = [v29 presentedViewController];

    if (v30)
    {
      self;
      uint64_t v31 = (void *)swift_dynamicCastObjCClass();
      if (v31)
      {
        id v32 = [v31 topViewController];

        if (v32)
        {
          type metadata accessor for CRLiOSBoardViewController();
          uint64_t v33 = swift_dynamicCastClass();
          if (v33)
          {
            uint64_t v34 = v33;
            id v66 = v32;
            uint64_t Strong = swift_unknownObjectWeakLoadStrong();
            if (!Strong)
            {
              id v44 = v66;
LABEL_23:

              goto LABEL_24;
            }
            uint64_t v36 = Strong;
            uint64_t v65 = v34;
            uint64_t v37 = OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate_window;
            uint64_t v38 = *(void **)(Strong + OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate_window);
            if (v38 && ([v38 isUserInteractionEnabled] & 1) != 0)
            {
              uint64_t v39 = *(void **)(v36 + v37);
              uint64_t v63 = v36;
              if (v39
                && (id v40 = [v39 rootViewController]) != 0
                && (uint64_t v41 = v40,
                    id v62 = objc_msgSend(v40, "crl_windowWrapper"),
                    v41,
                    v62)
                && (id v42 = v62,
                    id v64 = [v62 newWrapperBeginningIgnoringUserInteractionSafely],
                    v42,
                    v64))
              {
                id v43 = v64;
              }
              else
              {
                if (qword_10166F9D8 != -1) {
                  swift_once();
                }
                swift_beginAccess();
                id v45 = (id)static OS_os_log.crlError;
                uint64_t v46 = static os_log_type_t.error.getter();
                sub_100BAC898((uint64_t)v45, (uint64_t)&_mh_execute_header, v46, (uint64_t)"Could not create token for ignoring user interaction; view hierarchy may not be set up yet",
                  90,
                  2,
                  (uint64_t)_swiftEmptyArrayStorage);

                id v43 = 0;
              }
              uint64_t v47 = type metadata accessor for TaskPriority();
              (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v47 - 8) + 56))(v67, 1, 1, v47);
              type metadata accessor for MainActor();
              id v64 = v43;
              id v62 = v43;
              uint64_t v48 = v63;
              swift_unknownObjectRetain();
              id v66 = v66;
              uint64_t v49 = static MainActor.shared.getter();
              uint64_t v50 = (void *)swift_allocObject();
              v50[2] = v49;
              v50[3] = &protocol witness table for MainActor;
              uint64_t v51 = v65;
              v50[4] = v48;
              v50[5] = v51;
              v50[6] = v64;
              sub_1005912D0((uint64_t)v67, (uint64_t)&unk_10169FAF0, (uint64_t)v50);

              swift_unknownObjectRelease();
              swift_release();
              id v44 = v62;
              goto LABEL_23;
            }

            swift_unknownObjectRelease();
          }
          else
          {
          }
        }
      }
      else
      {
      }
    }
LABEL_24:
    sub_100656064();
    uint64_t v67 = (char *)static OS_dispatch_queue.main.getter();
    static DispatchTime.now()();
    *uint64_t v12 = 1;
    (*(void (**)(void *, void, uint64_t))(v9 + 104))(v12, enum case for DispatchTimeInterval.seconds(_:), v8);
    DispatchTime.advanced(by:)();
    (*(void (**)(void *, uint64_t))(v9 + 8))(v12, v8);
    id v66 = *(id *)(v14 + 8);
    ((void (*)(char *, uint64_t))v66)(v17, v13);
    double v52 = (void *)swift_allocObject();
    uint64_t v53 = v69;
    v52[2] = v28;
    v52[3] = v53;
    uint64_t v54 = v71;
    v52[4] = v71;
    aBlock[4] = sub_100AF2AB0;
    aBlock[5] = v52;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = *(void *)"";
    void aBlock[2] = sub_100679958;
    void aBlock[3] = &unk_101523858;
    uint64_t v55 = _Block_copy(aBlock);
    id v56 = v28;
    swift_retain();
    id v57 = v54;
    swift_release();
    uint64_t v58 = v70;
    static DispatchQoS.unspecified.getter();
    aBlock[0] = _swiftEmptyArrayStorage;
    sub_100AF2F98((unint64_t *)&qword_1016747E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_1005057FC((uint64_t *)&unk_1016725D0);
    sub_10056B494();
    unsigned __int8 v59 = v72;
    uint64_t v60 = v68;
    dispatch thunk of SetAlgebra.init<A>(_:)();
    uint64_t v61 = v67;
    OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
    _Block_release(v55);

    (*(void (**)(char *, uint64_t))(v75 + 8))(v59, v60);
    (*(void (**)(char *, uint64_t))(v73 + 8))(v58, v74);
    ((void (*)(char *, uint64_t))v66)(v21, v13);
  }
}

uint64_t sub_100AED8C0(uint64_t a1, uint64_t a2, void *a3)
{
  id v62 = a3;
  uint64_t v64 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v67 = *(void *)(v64 - 8);
  __chkstk_darwin(v64, v4);
  uint64_t v63 = (char *)&v53 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for DispatchQoS();
  uint64_t v65 = *(void *)(v6 - 8);
  uint64_t v66 = v6;
  __chkstk_darwin(v6, v7);
  uint64_t v61 = (char *)&v53 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v60 = type metadata accessor for DispatchTimeInterval();
  uint64_t v57 = *(void *)(v60 - 8);
  __chkstk_darwin(v60, v9);
  uint64_t v11 = (uint64_t *)((char *)&v53 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v12 = type metadata accessor for DispatchTime();
  uint64_t v58 = *(void *)(v12 - 8);
  uint64_t v59 = v12;
  __chkstk_darwin(v12, v13);
  uint64_t v15 = (char *)&v53 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16, v17);
  id v56 = (char *)&v53 - v18;
  uint64_t v19 = sub_1005057FC(&qword_101672BB0);
  __chkstk_darwin(v19 - 8, v20);
  uint64_t v22 = (char *)&v53 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  uint64_t v24 = *(void *)(v23 - 8);
  uint64_t v25 = *(void *)(v24 + 64);
  __chkstk_darwin(v23 - 8, v26);
  uint64_t v27 = (char *)&v53 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v30 = __chkstk_darwin(v28, v29);
  id v32 = (char *)&v53 - v31;
  uint64_t v55 = a2;
  (*(void (**)(__n128))(*(void *)a2 + 96))(v30);
  uint64_t v33 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56))(v22, 1, 1, v33);
  uint64_t v34 = swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_10076F9F8((uint64_t)v32, (uint64_t)v27);
  type metadata accessor for MainActor();
  swift_retain();
  uint64_t v35 = static MainActor.shared.getter();
  unint64_t v36 = (*(unsigned __int8 *)(v24 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80);
  uint64_t v37 = v36 + v25;
  uint64_t v38 = (void *)swift_allocObject();
  v38[2] = v35;
  v38[3] = &protocol witness table for MainActor;
  v38[4] = v34;
  sub_1009A05B8((uint64_t)v27, (uint64_t)v38 + v36);
  *(_WORD *)((char *)v38 + v37) = 0;
  swift_release();
  sub_1005912D0((uint64_t)v22, (uint64_t)&unk_101691BD8, (uint64_t)v38);
  swift_release();
  sub_1009A055C((uint64_t)v32);
  sub_100656064();
  uint64_t v54 = static OS_dispatch_queue.main.getter();
  static DispatchTime.now()();
  *uint64_t v11 = 2;
  uint64_t v39 = v57;
  uint64_t v40 = v60;
  (*(void (**)(void *, void, uint64_t))(v57 + 104))(v11, enum case for DispatchTimeInterval.seconds(_:), v60);
  uint64_t v41 = v56;
  DispatchTime.advanced(by:)();
  (*(void (**)(void *, uint64_t))(v39 + 8))(v11, v40);
  uint64_t v42 = v59;
  id v43 = *(void (**)(char *, uint64_t))(v58 + 8);
  v43(v15, v59);
  uint64_t v44 = swift_allocObject();
  id v45 = v62;
  *(void *)(v44 + 16) = v55;
  *(void *)(v44 + 24) = v45;
  aBlock[4] = sub_100AF2E40;
  aBlock[5] = v44;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = *(void *)"";
  void aBlock[2] = sub_100679958;
  void aBlock[3] = &unk_101523920;
  uint64_t v46 = _Block_copy(aBlock);
  swift_retain();
  id v47 = v45;
  swift_release();
  uint64_t v48 = v61;
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_100AF2F98((unint64_t *)&qword_1016747E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_1005057FC((uint64_t *)&unk_1016725D0);
  sub_10056B494();
  uint64_t v50 = v63;
  uint64_t v49 = v64;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  uint64_t v51 = (void *)v54;
  OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
  _Block_release(v46);

  (*(void (**)(char *, uint64_t))(v67 + 8))(v50, v49);
  (*(void (**)(char *, uint64_t))(v65 + 8))(v48, v66);
  return ((uint64_t (*)(char *, uint64_t))v43)(v41, v42);
}

uint64_t type metadata accessor for CRLPPTTestStartingAt()
{
  return self;
}

uint64_t sub_100AEDF74@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(v1 + 152))();
  *a1 = result;
  return result;
}

uint64_t sub_100AEDFAC(void *a1)
{
  return sub_100AECBE0(a1);
}

uint64_t sub_100AEDFD0()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 168))();
}

uint64_t sub_100AEE014()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 176))();
}

uint64_t sub_100AEE058()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 184))();
}

uint64_t sub_100AEE09C()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 192))();
}

void sub_100AEE0E0(void *a1)
{
  sub_1008E1F2C();
  NSString v2 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  _StringGuts.grow(_:)(24);
  swift_bridgeObjectRelease();
  id v3 = String._bridgeToObjectiveC()();
  [a1 failedTest:v2 withFailure:v3];
}

void sub_100AEE1C8(void *a1)
{
  uint64_t v93 = a1;
  uint64_t v89 = *v1;
  uint64_t v2 = sub_1005057FC(&qword_101672BB0);
  __chkstk_darwin(v2 - 8, v3);
  uint64_t v84 = (char *)&v78 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v98 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v5 = *(void *)(v98 - 8);
  __chkstk_darwin(v98, v6);
  uint64_t v96 = (char *)&v78 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v97 = type metadata accessor for DispatchQoS();
  uint64_t v95 = *(void *)(v97 - 8);
  __chkstk_darwin(v97, v8);
  id v94 = (char *)&v78 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v86 = type metadata accessor for DispatchTimeInterval();
  uint64_t v85 = *(void *)(v86 - 8);
  __chkstk_darwin(v86, v10);
  uint64_t v12 = (char *)&v78 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for DispatchTime();
  uint64_t v91 = *(void *)(v13 - 8);
  uint64_t v92 = v13;
  __chkstk_darwin(v13, v14);
  uint64_t v16 = (char *)&v78 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17, v18);
  uint64_t v90 = (char *)&v78 - v19;
  uint64_t v20 = sub_1005057FC((uint64_t *)&unk_101676310);
  __chkstk_darwin(v20 - 8, v21);
  uint64_t v23 = (char *)&v78 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  uint64_t v25 = *(void *)(v24 - 8);
  uint64_t v26 = *(void *)(v25 + 64);
  __chkstk_darwin(v24, v27);
  uint64_t v83 = (uint64_t)&v78 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v28, v29);
  uint64_t v100 = (uint64_t)&v78 - v30;
  uint64_t v88 = type metadata accessor for IndexPath();
  uint64_t v87 = *(void *)(v88 - 8);
  __chkstk_darwin(v88, v31);
  long long v99 = (char *)&v78 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v33 = [self sharedApplication];
  id v34 = [v33 delegate];

  if (!v34)
  {
    __break(1u);
    goto LABEL_26;
  }
  type metadata accessor for CRLiOSAppDelegate();
  swift_dynamicCastClassUnconditional();
  sub_1006C6B2C();
  id v101 = v35;
  swift_unknownObjectRelease();
  if (!v101) {
    return;
  }
  uint64_t v82 = v12;
  unint64_t v36 = v16;
  uint64_t v37 = v1;
  uint64_t v38 = v5;
  uint64_t v39 = sub_100A701F0();
  if (v39)
  {
    uint64_t v40 = (void *)v39;
    IndexPath.init(item:section:)();
    id v41 = sub_100D72460();
    dispatch thunk of UICollectionViewDiffableDataSource.itemIdentifier(for:)();

    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v23, 1, v24) != 1)
    {
      sub_1009A05B8((uint64_t)v23, v100);
      id v81 = v40;
      uint64_t Strong = swift_unknownObjectWeakLoadStrong();
      if (Strong)
      {
        uint64_t v43 = Strong;
        uint64_t v44 = OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate_window;
        id v45 = *(void **)(Strong + OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate_window);
        uint64_t v80 = v38;
        if (v45)
        {
          uint64_t v46 = v37;
          if ([v45 isUserInteractionEnabled])
          {
            id v47 = *(void **)(v43 + v44);
            uint64_t v48 = v36;
            uint64_t v79 = v46;
            if (v47
              && (id v49 = [v47 rootViewController]) != 0
              && (uint64_t v50 = v49,
                  id v51 = objc_msgSend(v49, "crl_windowWrapper"),
                  v50,
                  v51)
              && (id v52 = [v51 newWrapperBeginningIgnoringUserInteractionSafely], v51, v52))
            {
              uint64_t v53 = v82;
            }
            else
            {
              uint64_t v53 = v82;
              if (qword_10166F9D8 != -1) {
                swift_once();
              }
              swift_beginAccess();
              id v55 = (id)static OS_os_log.crlError;
              uint64_t v56 = static os_log_type_t.error.getter();
              sub_100BAC898((uint64_t)v55, (uint64_t)&_mh_execute_header, v56, (uint64_t)"Could not create token for ignoring user interaction; view hierarchy may not be set up yet",
                90,
                2,
                (uint64_t)_swiftEmptyArrayStorage);

              id v52 = 0;
            }
            uint64_t v57 = swift_allocObject();
            *(void *)(v57 + 16) = v52;
            uint64_t v58 = type metadata accessor for TaskPriority();
            (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v58 - 8) + 56))(v84, 1, 1, v58);
            uint64_t v59 = v83;
            sub_10076F9F8(v100, v83);
            type metadata accessor for MainActor();
            swift_retain();
            swift_unknownObjectRetain();
            uint64_t v60 = static MainActor.shared.getter();
            unint64_t v61 = (*(unsigned __int8 *)(v25 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80);
            unint64_t v62 = (v26 + v61 + 7) & 0xFFFFFFFFFFFFFFF8;
            uint64_t v63 = swift_allocObject();
            *(void *)(v63 + 16) = v60;
            *(void *)(v63 + 24) = &protocol witness table for MainActor;
            sub_1009A05B8(v59, v63 + v61);
            *(void *)(v63 + v62) = v57;
            *(void *)(v63 + ((v62 + 15) & 0xFFFFFFFFFFFFFFF8)) = v43;
            sub_1005912D0((uint64_t)v84, (uint64_t)&unk_101691BF8, v63);
            swift_unknownObjectRelease();
            swift_release();
            swift_release();
            uint64_t v46 = v79;
            goto LABEL_23;
          }
          swift_unknownObjectRelease();
        }
        else
        {
          swift_unknownObjectRelease();
          uint64_t v46 = v37;
        }
        uint64_t v48 = v36;
        uint64_t v53 = v82;
LABEL_23:
        sub_100656064();
        uint64_t v84 = (char *)static OS_dispatch_queue.main.getter();
        static DispatchTime.now()();
        *uint64_t v53 = 5;
        uint64_t v64 = v85;
        uint64_t v65 = v86;
        (*(void (**)(void *, void, uint64_t))(v85 + 104))(v53, enum case for DispatchTimeInterval.seconds(_:), v86);
        uint64_t v66 = v90;
        DispatchTime.advanced(by:)();
        (*(void (**)(void *, uint64_t))(v64 + 8))(v53, v65);
        uint64_t v67 = v92;
        uint64_t v91 = *(void *)(v91 + 8);
        ((void (*)(char *, uint64_t))v91)(v48, v92);
        uint64_t v68 = (void *)swift_allocObject();
        v68[2] = v101;
        v68[3] = v46;
        uint64_t v69 = v93;
        uint64_t v70 = v89;
        v68[4] = v93;
        v68[5] = v70;
        aBlock[4] = sub_100AF33B0;
        aBlock[5] = v68;
        aBlock[0] = _NSConcreteStackBlock;
        aBlock[1] = *(void *)"";
        void aBlock[2] = sub_100679958;
        void aBlock[3] = &unk_101523E48;
        id v71 = _Block_copy(aBlock);
        id v72 = v101;
        swift_retain();
        id v73 = v69;
        swift_release();
        uint64_t v74 = v94;
        static DispatchQoS.unspecified.getter();
        aBlock[0] = _swiftEmptyArrayStorage;
        sub_100AF2F98((unint64_t *)&qword_1016747E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
        sub_1005057FC((uint64_t *)&unk_1016725D0);
        sub_10056B494();
        uint64_t v75 = v96;
        uint64_t v76 = v98;
        dispatch thunk of SetAlgebra.init<A>(_:)();
        uint64_t v77 = v84;
        OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
        _Block_release(v71);

        (*(void (**)(char *, uint64_t))(v80 + 8))(v75, v76);
        (*(void (**)(char *, uint64_t))(v95 + 8))(v74, v97);
        ((void (*)(char *, uint64_t))v91)(v66, v67);
        sub_1009A055C(v100);
        (*(void (**)(char *, uint64_t))(v87 + 8))(v99, v88);
        return;
      }
LABEL_27:
      __break(1u);
      return;
    }
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  id v54 = v101;
}

void sub_100AEECC0(uint64_t a1, uint64_t a2, void *a3)
{
  id v5 = sub_100A70A50();
  id v6 = [v5 presentedViewController];

  if (!v6) {
    goto LABEL_8;
  }
  self;
  uint64_t v7 = (void *)swift_dynamicCastObjCClass();
  if (!v7) {
    goto LABEL_7;
  }
  id v10 = [v7 topViewController];

  if (v10)
  {
    type metadata accessor for CRLiOSBoardViewController();
    uint64_t v8 = swift_dynamicCastClass();
    if (v8)
    {
      (*(void (**)(void *, uint64_t))(*(void *)a2 + 200))(a3, v8);
      goto LABEL_9;
    }
    id v6 = v10;
LABEL_7:
  }
LABEL_8:
  sub_1008E1F2C();
  NSString v9 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v10 = String._bridgeToObjectiveC()();
  [a3 failedTest:v9];

LABEL_9:
}

uint64_t type metadata accessor for CRLPPTTestWithFirstBoard()
{
  return self;
}

void sub_100AEEE60(void *a1)
{
  uint64_t v3 = sub_1005057FC(&qword_101672BB0);
  __chkstk_darwin(v3 - 8, v4);
  uint64_t v52 = (uint64_t)&v50 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1005057FC((uint64_t *)&unk_101676310);
  __chkstk_darwin(v6 - 8, v7);
  NSString v9 = (char *)&v50 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void *)(v11 + 64);
  __chkstk_darwin(v10, v13);
  uint64_t v51 = (uint64_t)&v50 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14, v15);
  uint64_t v17 = (char *)&v50 - v16;
  uint64_t v18 = type metadata accessor for IndexPath();
  uint64_t v53 = *(void *)(v18 - 8);
  uint64_t v54 = v18;
  __chkstk_darwin(v18, v19);
  id v55 = (char *)&v50 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v21 = [self sharedApplication];
  id v22 = [v21 delegate];

  if (!v22)
  {
    __break(1u);
    goto LABEL_23;
  }
  type metadata accessor for CRLiOSAppDelegate();
  swift_dynamicCastClassUnconditional();
  sub_1006C6B2C();
  id v56 = v23;
  swift_unknownObjectRelease();
  if (!v56) {
    return;
  }
  *(unsigned char *)(v1 + 24) = 0;
  sub_1008E1F2C();
  NSString v24 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [a1 startedTest:v24];

  uint64_t v25 = sub_100A701F0();
  if (v25)
  {
    uint64_t v26 = (void *)v25;
    uint64_t v27 = v55;
    IndexPath.init(item:section:)();
    id v28 = sub_100D72460();
    dispatch thunk of UICollectionViewDiffableDataSource.itemIdentifier(for:)();

    uint64_t v29 = v11;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) != 1)
    {
      uint64_t v30 = (uint64_t)v17;
      sub_1009A05B8((uint64_t)v9, (uint64_t)v17);
      uint64_t Strong = swift_unknownObjectWeakLoadStrong();
      if (Strong)
      {
        uint64_t v32 = Strong;
        uint64_t v33 = OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate_window;
        id v34 = *(void **)(Strong + OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate_window);
        if (v34 && ([v34 isUserInteractionEnabled] & 1) != 0)
        {
          uint64_t v35 = *(void **)(v32 + v33);
          if (!v35
            || (id v36 = [v35 rootViewController]) == 0
            || (uint64_t v37 = v36,
                id v38 = objc_msgSend(v36, "crl_windowWrapper"),
                v37,
                !v38)
            || (id v39 = [v38 newWrapperBeginningIgnoringUserInteractionSafely], v38, !v39))
          {
            if (qword_10166F9D8 != -1) {
              swift_once();
            }
            swift_beginAccess();
            id v40 = (id)static OS_os_log.crlError;
            uint64_t v41 = static os_log_type_t.error.getter();
            sub_100BAC898((uint64_t)v40, (uint64_t)&_mh_execute_header, v41, (uint64_t)"Could not create token for ignoring user interaction; view hierarchy may not be set up yet",
              90,
              2,
              (uint64_t)_swiftEmptyArrayStorage);

            id v39 = 0;
          }
          uint64_t v42 = swift_allocObject();
          *(void *)(v42 + 16) = v39;
          uint64_t v43 = type metadata accessor for TaskPriority();
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v43 - 8) + 56))(v52, 1, 1, v43);
          uint64_t v44 = v51;
          sub_10076F9F8(v30, v51);
          type metadata accessor for MainActor();
          swift_retain();
          swift_unknownObjectRetain();
          uint64_t v45 = static MainActor.shared.getter();
          unint64_t v46 = (*(unsigned __int8 *)(v29 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80);
          unint64_t v47 = (v12 + v46 + 7) & 0xFFFFFFFFFFFFFFF8;
          uint64_t v48 = swift_allocObject();
          *(void *)(v48 + 16) = v45;
          *(void *)(v48 + 24) = &protocol witness table for MainActor;
          sub_1009A05B8(v44, v48 + v46);
          *(void *)(v48 + v47) = v42;
          *(void *)(v48 + ((v47 + 15) & 0xFFFFFFFFFFFFFFF8)) = v32;
          sub_1005912D0(v52, (uint64_t)&unk_10168E3A0, v48);

          swift_unknownObjectRelease();
          swift_release();
          swift_release();
          uint64_t v27 = v55;
        }
        else
        {

          swift_unknownObjectRelease();
        }
        sub_1009A055C(v30);
        (*(void (**)(char *, uint64_t))(v53 + 8))(v27, v54);
        return;
      }
LABEL_24:
      __break(1u);
      return;
    }
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  id v49 = v56;
}

void sub_100AEF494(void *a1)
{
}

void sub_100AEF4B4(void *a1)
{
}

uint64_t type metadata accessor for CRLPPTNavigate_OpenBoard()
{
  return self;
}

void sub_100AEF4F8(void *a1)
{
  id v3 = [self sharedApplication];
  id v4 = [v3 delegate];

  if (!v4)
  {
    __break(1u);
    goto LABEL_11;
  }
  type metadata accessor for CRLiOSAppDelegate();
  swift_dynamicCastClassUnconditional();
  sub_1006C6B2C();
  id v9 = v5;
  swift_unknownObjectRelease();
  if (!v9) {
    return;
  }
  *(unsigned char *)(v1 + 24) = 0;
  sub_1008E1F2C();
  NSString v6 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [a1 startedTest:v6];

  uint64_t v7 = sub_100A701F0();
  if (v7)
  {
    uint64_t v8 = (void *)v7;
    if (swift_unknownObjectWeakLoadStrong())
    {
      sub_100A85B40(v8);

      swift_unknownObjectRelease();
      goto LABEL_6;
    }
LABEL_11:
    __break(1u);
    return;
  }
LABEL_6:
}

uint64_t type metadata accessor for CRLPPTNavigate_OpenNewBoard()
{
  return self;
}

void sub_100AEF6B0(void *a1, void *a2)
{
  uint64_t v5 = sub_1005057FC(&qword_101672BB0);
  __chkstk_darwin(v5 - 8, v6);
  uint64_t v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1008E1F2C();
  NSString v9 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [a1 startedTest:v9];

  *(unsigned char *)(v2 + 24) = 0;
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v11 = Strong;
    uint64_t v12 = OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate_window;
    uint64_t v13 = *(void **)(Strong + OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate_window);
    if (v13 && ([v13 isUserInteractionEnabled] & 1) != 0)
    {
      uint64_t v14 = *(void **)(v11 + v12);
      if (!v14
        || (id v15 = [v14 rootViewController]) == 0
        || (uint64_t v16 = v15,
            id v17 = objc_msgSend(v15, "crl_windowWrapper"),
            v16,
            !v17)
        || (id v18 = [v17 newWrapperBeginningIgnoringUserInteractionSafely], v17, !v18))
      {
        if (qword_10166F9D8 != -1) {
          swift_once();
        }
        swift_beginAccess();
        id v19 = (id)static OS_os_log.crlError;
        uint64_t v20 = static os_log_type_t.error.getter();
        sub_100BAC898((uint64_t)v19, (uint64_t)&_mh_execute_header, v20, (uint64_t)"Could not create token for ignoring user interaction; view hierarchy may not be set up yet",
          90,
          2,
          (uint64_t)_swiftEmptyArrayStorage);

        id v18 = 0;
      }
      uint64_t v21 = type metadata accessor for TaskPriority();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v8, 1, 1, v21);
      type metadata accessor for MainActor();
      id v22 = v18;
      swift_unknownObjectRetain();
      id v23 = a2;
      uint64_t v24 = static MainActor.shared.getter();
      uint64_t v25 = (void *)swift_allocObject();
      v25[2] = v24;
      v25[3] = &protocol witness table for MainActor;
      v25[4] = v11;
      v25[5] = v23;
      v25[6] = v18;
      sub_1005912D0((uint64_t)v8, (uint64_t)&unk_101691BF0, (uint64_t)v25);
      swift_unknownObjectRelease();
      swift_release();
    }
    else
    {
      swift_unknownObjectRelease();
    }
  }
  else
  {
    __break(1u);
  }
}

void sub_100AEF9CC(void *a1)
{
}

void sub_100AEF9E8(void *a1, Swift::Int a2)
{
  if (*(unsigned char *)(v2 + 24)) {
    return;
  }
  uint64_t v5 = *(void *)v2;
  uint64_t v6 = type metadata accessor for CRLiOSBoardViewController();
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v8 = *(void **)(v2 + 16);
  if (v6 == ObjectType)
  {
    if (v8)
    {
      id v18 = v8;
      sub_100AEBD4C(v18, v5, (uint64_t)&off_101523790);
      goto LABEL_7;
    }
LABEL_11:
    __break(1u);
    return;
  }
  if (!v8)
  {
    __break(1u);
    goto LABEL_11;
  }
  id v9 = v8;
  sub_1008E1F2C();
  NSString v10 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  _StringGuts.grow(_:)(a2);
  swift_bridgeObjectRelease();
  id v11 = [a1 description];
  uint64_t v12 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v14 = v13;

  v15._countAndFlagsBits = v12;
  v15._object = v14;
  String.append(_:)(v15);
  swift_bridgeObjectRelease();
  v16._countAndFlagsBits = 0x746365707865202CLL;
  v16._object = (void *)0xEB00000000206465;
  String.append(_:)(v16);
  v17._object = (void *)0x8000000101271050;
  v17._countAndFlagsBits = 0xD000000000000019;
  String.append(_:)(v17);
  id v18 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v9 failedTest:v10 withFailure:v18];

LABEL_7:
}

void sub_100AEFBF4(void *a1)
{
}

void sub_100AEFC10(void *a1, Swift::Int a2)
{
  uint64_t v3 = v2;
  if (*(unsigned char *)(v2 + 24)) {
    return;
  }
  uint64_t v6 = *(void *)v2;
  uint64_t v7 = type metadata accessor for CRLiOSBoardViewController();
  uint64_t ObjectType = swift_getObjectType();
  id v9 = *(void **)(v3 + 16);
  if (v7 == ObjectType)
  {
    if (v9)
    {
      id v19 = v9;
      sub_100AEC000(v19, v6, (uint64_t)&off_101523790);

      uint64_t v20 = *(void **)(v3 + 16);
      if (v20)
      {
        NSString v11 = v20;
        sub_1008E1F2C();
        id v21 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        [v11 finishedTest:v21];
        goto LABEL_8;
      }
LABEL_13:
      __break(1u);
      return;
    }
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  if (!v9)
  {
    __break(1u);
    goto LABEL_12;
  }
  id v10 = v9;
  sub_1008E1F2C();
  NSString v11 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  _StringGuts.grow(_:)(a2);
  swift_bridgeObjectRelease();
  id v12 = [a1 description];
  uint64_t v13 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  Swift::String v15 = v14;

  v16._countAndFlagsBits = v13;
  v16._object = v15;
  String.append(_:)(v16);
  swift_bridgeObjectRelease();
  v17._countAndFlagsBits = 0x746365707865202CLL;
  v17._object = (void *)0xEB00000000206465;
  String.append(_:)(v17);
  v18._object = (void *)0x8000000101271050;
  v18._countAndFlagsBits = 0xD000000000000019;
  String.append(_:)(v18);
  id v21 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v10 failedTest:v11 withFailure:v21];

LABEL_8:
}

uint64_t type metadata accessor for CRLPPTNavigate_CloseBoard()
{
  return self;
}

void sub_100AEFE8C(void *a1)
{
  id v2 = [self sharedApplication];
  id v3 = [v2 delegate];

  if (v3)
  {
    type metadata accessor for CRLiOSAppDelegate();
    swift_dynamicCastClassUnconditional();
    sub_1006C6B2C();
    uint64_t v5 = v4;
    swift_unknownObjectRelease();
    if (v5)
    {
      uint64_t v6 = (void *)sub_100A701F0();
      if (v6)
      {
        id v11 = v6;
        id v7 = [v6 collectionView];
        sub_1008E1F2C();
        NSString v8 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        if (v7)
        {
          [v7 _performScrollTest:v8 iterations:5 delta:18];
        }
        else
        {
          NSString v10 = String._bridgeToObjectiveC()();
          [a1 failedTest:v8 withFailure:v10];
          id v7 = v8;
          NSString v8 = v10;
        }

        id v9 = v11;
      }
      else
      {
        id v9 = v5;
      }
    }
  }
  else
  {
    __break(1u);
  }
}

uint64_t type metadata accessor for CRLPPTLibrary_Scroll()
{
  return self;
}

void sub_100AF0080(void *a1)
{
  id v2 = [self sharedApplication];
  id v3 = [v2 delegate];

  if (!v3)
  {
    __break(1u);
    return;
  }
  type metadata accessor for CRLiOSAppDelegate();
  swift_dynamicCastClassUnconditional();
  sub_1006C6B2C();
  id v20 = v4;
  swift_unknownObjectRelease();
  if (v20)
  {
    uint64_t v5 = (void *)sub_100A701F0();
    if (v5)
    {
      id v19 = v5;
      id v6 = [v5 collectionView];
      if (!v6)
      {

        Swift::String v16 = v19;
LABEL_11:

        return;
      }
      id v7 = v6;
      NSString v8 = self;
      unsigned __int8 v9 = [v8 isRecapAvailable];
      sub_1008E1F2C();
      if (v9)
      {
        id v10 = objc_allocWithZone((Class)RPTScrollViewTestParameters);
        id v11 = v7;
        NSString v12 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        aBlock[4] = SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:);
        aBlock[5] = 0;
        aBlock[0] = _NSConcreteStackBlock;
        aBlock[1] = *(void *)"";
        void aBlock[2] = sub_100679958;
        void aBlock[3] = &unk_101523D30;
        uint64_t v13 = _Block_copy(aBlock);
        swift_release();
        id v14 = [v10 initWithTestName:v12 scrollView:v11 completionHandler:v13];

        _Block_release(v13);
        id v15 = v14;
        [v8 runTestWithParameters:v15];

        return;
      }
      NSString v17 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      NSString v18 = String._bridgeToObjectiveC()();
      [a1 failedTest:v17 withFailure:v18];
    }
    Swift::String v16 = v20;
    goto LABEL_11;
  }
}

uint64_t type metadata accessor for CRLPPTLibrary_ScrollRecap()
{
  return self;
}

uint64_t sub_100AF0394@<X0>(unsigned char *a1@<X8>)
{
  *a1 = 1;
  type metadata accessor for CRLBoardLibraryViewModel.Item(0);

  return swift_storeEnumTagMultiPayload();
}

void sub_100AF03E0(void *a1)
{
  uint64_t v3 = *v1;
  id v4 = (void *)swift_allocObject();
  v4[2] = a1;
  v4[3] = v1;
  void v4[4] = v3;
  _OWORD v7[4] = sub_100AF34CC;
  void v7[5] = v4;
  v7[0] = _NSConcreteStackBlock;
  v7[1] = *(void *)"";
  _OWORD v7[2] = sub_100F8FD18;
  _OWORD v7[3] = &unk_101523D08;
  uint64_t v5 = _Block_copy(v7);
  id v6 = a1;
  swift_retain();
  swift_release();
  [v6 rotateIfNeeded:1 completion:v5];
  _Block_release(v5);
}

uint64_t type metadata accessor for CRLPPTLibrary_Rotate()
{
  return self;
}

void sub_100AF0518(void *a1)
{
  id v2 = self;
  if (![v2 isRecapAvailable]) {
    goto LABEL_10;
  }
  id v3 = [self sharedApplication];
  id v4 = [v3 delegate];

  if (!v4)
  {
    __break(1u);
    goto LABEL_15;
  }
  type metadata accessor for CRLiOSAppDelegate();
  swift_dynamicCastClassUnconditional();
  sub_1006C6B2C();
  id v6 = v5;
  swift_unknownObjectRelease();
  if (!v6) {
    goto LABEL_10;
  }
  id v7 = (void *)sub_100A701F0();

  if (!v7) {
    goto LABEL_10;
  }
  id v8 = [v7 view];
  if (!v8)
  {
LABEL_15:
    __break(1u);
    return;
  }
  unsigned __int8 v9 = v8;
  id v10 = [v8 window];

  if (!v10)
  {

LABEL_10:
    sub_1008E1F2C();
    NSString v12 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v14 = String._bridgeToObjectiveC()();
    [a1 failedTest:v12];
    goto LABEL_11;
  }
  sub_1008E1F2C();
  id v11 = objc_allocWithZone((Class)RPTResizeTestParameters);
  NSString v12 = v10;
  NSString v13 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v14 = [v11 initWithTestName:v13 window:v12 completionHandler:0];

  [v2 runTestWithParameters:v14];
LABEL_11:
}

uint64_t type metadata accessor for CRLPPTLibrary_Resize()
{
  return self;
}

void sub_100AF07E8(uint64_t a1, uint64_t a2)
{
}

uint64_t type metadata accessor for CRLPPTBoard_ScrollVertical()
{
  return self;
}

void sub_100AF0814(uint64_t a1, uint64_t a2)
{
}

void sub_100AF081C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v4 = *(id *)(a2 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_scrollView);
  sub_1008E1F2C();
  id v5 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v4 _performScrollTest:v5 iterations:5 delta:18 scrollAxis:a3];
}

uint64_t type metadata accessor for CRLPPTBoard_ScrollHorizontal()
{
  return self;
}

void sub_100AF090C(void *a1, uint64_t a2)
{
  uint64_t v5 = *v2;
  sub_1008E1F2C();
  NSString v6 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [a1 startedTest:v6];

  id v7 = *(void **)(a2 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_scrollView);
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a1;
  *(void *)(v8 + 24) = v5;
  uint64_t v25 = sub_100AF312C;
  uint64_t v26 = v8;
  id v21 = _NSConcreteStackBlock;
  uint64_t v22 = *(void *)"";
  id v23 = sub_100679958;
  uint64_t v24 = &unk_101523BC8;
  unsigned __int8 v9 = _Block_copy(&v21);
  id v10 = v7;
  id v11 = a1;
  swift_release();
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = v11;
  *(void *)(v12 + 24) = v5;
  uint64_t v25 = sub_100AF3154;
  uint64_t v26 = v12;
  id v21 = _NSConcreteStackBlock;
  uint64_t v22 = *(void *)"";
  id v23 = sub_100F8FD18;
  uint64_t v24 = &unk_101523C18;
  NSString v13 = _Block_copy(&v21);
  id v14 = v11;
  swift_release();
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = v14;
  *(void *)(v15 + 24) = v5;
  uint64_t v25 = sub_100AF315C;
  uint64_t v26 = v15;
  id v21 = _NSConcreteStackBlock;
  uint64_t v22 = *(void *)"";
  id v23 = sub_100679958;
  uint64_t v24 = &unk_101523C68;
  Swift::String v16 = _Block_copy(&v21);
  id v17 = v14;
  swift_release();
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = v17;
  *(void *)(v18 + 24) = v5;
  uint64_t v25 = sub_100AF3190;
  uint64_t v26 = v18;
  id v21 = _NSConcreteStackBlock;
  uint64_t v22 = *(void *)"";
  id v23 = sub_100679958;
  uint64_t v24 = &unk_101523CB8;
  id v19 = _Block_copy(&v21);
  id v20 = v17;
  swift_release();
  [v10 _simulateScrollWithTranslation:v9 duration:v13 willBeginDragging:v16 didEndDragging:v19 willBeginDecelerating:1000.0 didEndDecelerating:250.0];
  _Block_release(v19);
  _Block_release(v16);
  _Block_release(v13);
  _Block_release(v9);
}

void sub_100AF0C48(char a1, void *a2)
{
  NSString v4 = String._bridgeToObjectiveC()();
  sub_1008E1F2C();
  NSString v5 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [a2 finishedSubTest:v4 forTest:v5];

  if ((a1 & 1) == 0)
  {
    sub_1008E1F2C();
    id v6 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [a2 finishedTest:v6];
  }
}

uint64_t type metadata accessor for CRLPPTBoard_ScrollNatural()
{
  return self;
}

void sub_100AF0D6C(void *a1, uint64_t a2)
{
  NSString v4 = self;
  if ([v4 isRecapAvailable])
  {
    NSString v5 = *(void **)(a2 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_scrollView);
    RPTGetBoundsForView();
    double v7 = v6;
    double v9 = v8;
    double v11 = v10;
    double v13 = v12;
    sub_1008E1F2C();
    [v5 contentSize];
    double v15 = v14;
    id v16 = objc_allocWithZone((Class)RPTScrollViewTestParameters);
    NSString v17 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    aBlock[4] = SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:);
    aBlock[5] = 0;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = *(void *)"";
    void aBlock[2] = sub_100679958;
    void aBlock[3] = &unk_101523B78;
    uint64_t v18 = _Block_copy(aBlock);
    swift_release();
    id v19 = [v16 initWithTestName:v17 scrollBounds:2 amplitude:v18 direction:v7 completionHandler:v9, v11, v13, v15];
    _Block_release(v18);

    [v4 runTestWithParameters:v19];
  }
  else
  {
    sub_1008E1F2C();
    NSString v20 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v21 = String._bridgeToObjectiveC()();
    [a1 failedTest:v20 withFailure:v21];
  }
}

uint64_t type metadata accessor for CRLPPTBoard_ScrollRecap()
{
  return self;
}

void sub_100AF0FF8(void *a1, void *a2)
{
  NSString v4 = self;
  unsigned int v5 = [v4 isRecapAvailable];
  sub_1008E1F2C();
  if (!v5)
  {
    NSString v11 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v12 = String._bridgeToObjectiveC()();
    [a1 failedTest:v11];

    goto LABEL_6;
  }
  id v6 = [a2 view];
  if (!v6)
  {
    __break(1u);
    goto LABEL_10;
  }
  double v7 = v6;
  id v8 = [v6 window];

  if (!v8)
  {
LABEL_10:
    __break(1u);
    return;
  }
  id v9 = objc_allocWithZone((Class)RPTResizeTestParameters);
  NSString v10 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v12 = [v9 initWithTestName:v10 window:v8 completionHandler:0];

  [v4 runTestWithParameters:v12];
LABEL_6:
}

uint64_t type metadata accessor for CRLPPTBoard_Resize()
{
  return self;
}

void sub_100AF11D4(void *a1)
{
  uint64_t v3 = *v1;
  NSString v4 = (void *)swift_allocObject();
  v4[2] = a1;
  v4[3] = v1;
  void v4[4] = v3;
  _OWORD v7[4] = sub_100AF306C;
  void v7[5] = v4;
  v7[0] = _NSConcreteStackBlock;
  v7[1] = *(void *)"";
  _OWORD v7[2] = sub_100F8FD18;
  _OWORD v7[3] = &unk_101523A38;
  unsigned int v5 = _Block_copy(v7);
  id v6 = a1;
  swift_retain();
  swift_release();
  [v6 rotateIfNeeded:1 completion:v5];
  _Block_release(v5);
}

uint64_t type metadata accessor for CRLPPTBoard_Rotate()
{
  return self;
}

void sub_100AF130C(void *a1, uint64_t a2)
{
  uint64_t v5 = *v2;
  sub_1008E1F2C();
  NSString v6 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [a1 startedTest:v6];

  double v7 = *(void **)(a2 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_scrollView);
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a1;
  *(void *)(v8 + 24) = v5;
  id v19 = sub_100AF3018;
  uint64_t v20 = v8;
  double v15 = _NSConcreteStackBlock;
  uint64_t v16 = *(void *)"";
  NSString v17 = sub_100679958;
  uint64_t v18 = &unk_101523998;
  id v9 = _Block_copy(&v15);
  id v10 = v7;
  id v11 = a1;
  swift_release();
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = v11;
  *(void *)(v12 + 24) = v5;
  id v19 = sub_100AF3040;
  uint64_t v20 = v12;
  double v15 = _NSConcreteStackBlock;
  uint64_t v16 = *(void *)"";
  NSString v17 = sub_100679958;
  uint64_t v18 = &unk_1015239E8;
  double v13 = _Block_copy(&v15);
  id v14 = v11;
  swift_release();
  [v10 _simulateZoomByScaleFactor:v9 duration:v13 willBeginZooming:1.5 didEndZooming:1.0];
  _Block_release(v13);
  _Block_release(v9);
}

void sub_100AF1514(void *a1)
{
  NSString v2 = String._bridgeToObjectiveC()();
  sub_1008E1F2C();
  id v3 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [a1 startedSubTest:v2 forTest:v3];
}

void sub_100AF15AC(void *a1)
{
  NSString v2 = String._bridgeToObjectiveC()();
  sub_1008E1F2C();
  NSString v3 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [a1 finishedSubTest:v2 forTest:v3];

  sub_1008E1F2C();
  id v4 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [a1 finishedTest:v4];
}

uint64_t type metadata accessor for CRLPPTBoard_ZoomScroll()
{
  return self;
}

uint64_t sub_100AF16AC(void *a1, void *a2)
{
  uint64_t v5 = *v2;
  uint64_t v6 = sub_1005057FC(&qword_101672BB0);
  __chkstk_darwin(v6 - 8, v7);
  id v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v9, 1, 1, v10);
  type metadata accessor for MainActor();
  id v11 = a2;
  id v12 = a1;
  uint64_t v13 = static MainActor.shared.getter();
  id v14 = (void *)swift_allocObject();
  v14[2] = v13;
  _DWORD v14[3] = &protocol witness table for MainActor;
  _OWORD v14[4] = v11;
  v14[5] = v12;
  void v14[6] = v5;
  sub_1005912D0((uint64_t)v9, (uint64_t)&unk_101691BE8, (uint64_t)v14);
  return swift_release();
}

uint64_t sub_100AF1804(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _OWORD v6[4] = a5;
  v6[5] = a6;
  v6[3] = a4;
  sub_1005057FC(&qword_101672BE0);
  v6[6] = swift_task_alloc();
  uint64_t v7 = type metadata accessor for NSNotificationCenter.Notifications.Iterator();
  v6[7] = v7;
  v6[8] = *(void *)(v7 - 8);
  v6[9] = swift_task_alloc();
  v6[10] = type metadata accessor for MainActor();
  v6[11] = static MainActor.shared.getter();
  uint64_t v9 = dispatch thunk of Actor.unownedExecutor.getter();
  v6[12] = v9;
  v6[13] = v8;
  return _swift_task_switch(sub_100AF1930, v9, v8);
}

uint64_t sub_100AF1930()
{
  uint64_t v1 = *(void **)(v0[3] + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interactiveCanvasController);
  v0[14] = v1;
  id v2 = v1;
  id v3 = [v2 layerHost];
  if (v3
    && (id v4 = [v3 canvasLayer],
        v0[15] = v4,
        swift_unknownObjectRelease(),
        v4))
  {
    uint64_t v5 = (void *)v0[4];
    sub_1008E1F2C();
    NSString v6 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v5 startedTest:v6];

    id v7 = [objc_allocWithZone((Class)CRLCanvasZoomTracker) initWithCanvasLayer:v4];
    v0[16] = v7;
    NSString v8 = String._bridgeToObjectiveC()();
    sub_1008E1F2C();
    NSString v9 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v5 startedSubTest:v8 forTest:v9];

    [v7 zoomWithScale:0 velocity:0.999 locationInView:0.5 phase:400.0];
    [v7 zoomWithScale:1 velocity:0.5 locationInView:0.5, 400.0, 300.0];
    [v7 zoomWithScale:2 velocity:0.25 locationInView:0.5 phase:400.0];
    id v10 = [self defaultCenter];
    NSNotificationCenter.notifications(named:object:)();

    NSNotificationCenter.Notifications.makeAsyncIterator()();
    v0[17] = static MainActor.shared.getter();
    uint64_t v11 = sub_100AF2F98(&qword_101672BE8, (void (*)(uint64_t))&type metadata accessor for NSNotificationCenter.Notifications.Iterator);
    id v12 = (void *)swift_task_alloc();
    v0[18] = v12;
    *id v12 = v0;
    v12[1] = sub_100AF1CF4;
    uint64_t v13 = v0[6];
    uint64_t v14 = v0[7];
    return dispatch thunk of AsyncIteratorProtocol.next()(v13, v14, v11);
  }
  else
  {
    double v15 = (void *)v0[4];
    swift_release();
    sub_1008E1F2C();
    NSString v16 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    NSString v17 = String._bridgeToObjectiveC()();
    [v15 failedTest:v16 withFailure:v17];

    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v18 = (uint64_t (*)(void))v0[1];
    return v18();
  }
}

uint64_t sub_100AF1CF4()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 152) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 136);
  if (v0)
  {
    if (v3)
    {
      swift_getObjectType();
      uint64_t v4 = dispatch thunk of Actor.unownedExecutor.getter();
      uint64_t v6 = v5;
    }
    else
    {
      uint64_t v4 = 0;
      uint64_t v6 = 0;
    }
    id v7 = sub_100AF2168;
  }
  else
  {
    if (v3)
    {
      swift_getObjectType();
      uint64_t v4 = dispatch thunk of Actor.unownedExecutor.getter();
      uint64_t v6 = v8;
    }
    else
    {
      uint64_t v4 = 0;
      uint64_t v6 = 0;
    }
    id v7 = sub_100AF1E8C;
  }
  return _swift_task_switch(v7, v4, v6);
}

uint64_t sub_100AF1E8C()
{
  swift_release();
  uint64_t v1 = *(void *)(v0 + 96);
  uint64_t v2 = *(void *)(v0 + 104);
  return _swift_task_switch(sub_100AF1EF0, v1, v2);
}

uint64_t sub_100AF1EF0()
{
  uint64_t v1 = *(void *)(v0 + 48);
  uint64_t v2 = type metadata accessor for Notification();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48))(v1, 1, v2) == 1)
  {
    uint64_t v4 = *(void **)(v0 + 120);
    uint64_t v3 = *(void **)(v0 + 128);
    (*(void (**)(void, void))(*(void *)(v0 + 64) + 8))(*(void *)(v0 + 72), *(void *)(v0 + 56));

    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
    return v5();
  }
  else
  {
    id v7 = *(void **)(v0 + 32);
    NSString v8 = String._bridgeToObjectiveC()();
    sub_1008E1F2C();
    NSString v9 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v7 finishedSubTest:v8 forTest:v9];

    sub_1008E1F2C();
    NSString v10 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v7 finishedTest:v10];

    sub_100522F00(v1, &qword_101672BE0);
    *(void *)(v0 + 136) = static MainActor.shared.getter();
    uint64_t v11 = sub_100AF2F98(&qword_101672BE8, (void (*)(uint64_t))&type metadata accessor for NSNotificationCenter.Notifications.Iterator);
    id v12 = (void *)swift_task_alloc();
    *(void *)(v0 + 144) = v12;
    *id v12 = v0;
    v12[1] = sub_100AF1CF4;
    uint64_t v13 = *(void *)(v0 + 48);
    uint64_t v14 = *(void *)(v0 + 56);
    return dispatch thunk of AsyncIteratorProtocol.next()(v13, v14, v11);
  }
}

uint64_t sub_100AF2168()
{
  *(void *)(v0 + 16) = *(void *)(v0 + 152);
  sub_1005057FC(&qword_101672BD0);
  swift_dynamicCast();
  return swift_willThrowTypedImpl();
}

uint64_t type metadata accessor for CRLPPTBoard_Zoom()
{
  return self;
}

uint64_t type metadata accessor for CRLPPTTests()
{
  return self;
}

void sub_100AF2238()
{
  sub_100AED060(*(void *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_100AF2240(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100AF2250()
{
  return swift_release();
}

unsigned __int8 *sub_100AF2258(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v13 = a1;
  uint64_t v14 = a2;
  swift_bridgeObjectRetain();
  uint64_t v5 = String.init<A>(_:)();
  unint64_t v6 = v4;
  if ((v4 & 0x1000000000000000) == 0)
  {
    if ((v4 & 0x2000000000000000) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t v8 = HIBYTE(v6) & 0xF;
    uint64_t v13 = v5;
    uint64_t v14 = v6 & 0xFFFFFFFFFFFFFFLL;
    id v7 = (unsigned __int8 *)&v13;
    goto LABEL_7;
  }
  uint64_t v5 = sub_100AF25BC();
  unint64_t v10 = v9;
  swift_bridgeObjectRelease();
  unint64_t v6 = v10;
  if ((v10 & 0x2000000000000000) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v5 & 0x1000000000000000) != 0)
  {
    id v7 = (unsigned __int8 *)((v6 & 0xFFFFFFFFFFFFFFFLL) + 32);
    uint64_t v8 = v5 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    id v7 = (unsigned __int8 *)_StringObject.sharedUTF8.getter();
  }
LABEL_7:
  uint64_t v11 = sub_100AF2340(v7, v8, a3);
  swift_bridgeObjectRelease();
  return v11;
}

unsigned __int8 *sub_100AF2340(unsigned __int8 *result, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = a2;
  int v4 = *result;
  if (v4 != 43)
  {
    if (v4 == 45)
    {
      if (a2 >= 1)
      {
        uint64_t v5 = a2 - 1;
        if (a2 != 1)
        {
          unsigned __int8 v6 = a3 + 48;
          unsigned __int8 v7 = a3 + 55;
          unsigned __int8 v8 = a3 + 87;
          if (a3 > 10)
          {
            unsigned __int8 v6 = 58;
          }
          else
          {
            unsigned __int8 v8 = 97;
            unsigned __int8 v7 = 65;
          }
          if (result)
          {
            uint64_t v9 = 0;
            for (uint64_t i = result + 1; ; ++i)
            {
              unsigned int v11 = *i;
              if (v11 < 0x30 || v11 >= v6)
              {
                if (v11 < 0x41 || v11 >= v7)
                {
                  if (v11 < 0x61 || v11 >= v8) {
                    return 0;
                  }
                  char v12 = -87;
                }
                else
                {
                  char v12 = -55;
                }
              }
              else
              {
                char v12 = -48;
              }
              uint64_t v13 = v9 * a3;
              if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63) {
                return 0;
              }
              uint64_t v9 = v13 - (v11 + v12);
              if (__OFSUB__(v13, (v11 + v12))) {
                return 0;
              }
              if (!--v5) {
                return (unsigned __int8 *)v9;
              }
            }
          }
          return 0;
        }
        return 0;
      }
      __break(1u);
      goto LABEL_65;
    }
    if (a2)
    {
      unsigned __int8 v22 = a3 + 48;
      unsigned __int8 v23 = a3 + 55;
      unsigned __int8 v24 = a3 + 87;
      if (a3 > 10)
      {
        unsigned __int8 v22 = 58;
      }
      else
      {
        unsigned __int8 v24 = 97;
        unsigned __int8 v23 = 65;
      }
      if (result)
      {
        uint64_t v25 = 0;
        do
        {
          unsigned int v26 = *result;
          if (v26 < 0x30 || v26 >= v22)
          {
            if (v26 < 0x41 || v26 >= v23)
            {
              if (v26 < 0x61 || v26 >= v24) {
                return 0;
              }
              char v27 = -87;
            }
            else
            {
              char v27 = -55;
            }
          }
          else
          {
            char v27 = -48;
          }
          uint64_t v28 = v25 * a3;
          if ((unsigned __int128)(v25 * (__int128)a3) >> 64 != (v25 * a3) >> 63) {
            return 0;
          }
          uint64_t v25 = v28 + (v26 + v27);
          if (__OFADD__(v28, (v26 + v27))) {
            return 0;
          }
          ++result;
          --v3;
        }
        while (v3);
        return (unsigned __int8 *)(v28 + (v26 + v27));
      }
      return 0;
    }
    return 0;
  }
  if (a2 < 1)
  {
LABEL_65:
    __break(1u);
    return result;
  }
  uint64_t v14 = a2 - 1;
  if (a2 == 1) {
    return 0;
  }
  unsigned __int8 v15 = a3 + 48;
  unsigned __int8 v16 = a3 + 55;
  unsigned __int8 v17 = a3 + 87;
  if (a3 > 10)
  {
    unsigned __int8 v15 = 58;
  }
  else
  {
    unsigned __int8 v17 = 97;
    unsigned __int8 v16 = 65;
  }
  if (!result) {
    return 0;
  }
  uint64_t v9 = 0;
  uint64_t v18 = result + 1;
  do
  {
    unsigned int v19 = *v18;
    if (v19 < 0x30 || v19 >= v15)
    {
      if (v19 < 0x41 || v19 >= v16)
      {
        if (v19 < 0x61 || v19 >= v17) {
          return 0;
        }
        char v20 = -87;
      }
      else
      {
        char v20 = -55;
      }
    }
    else
    {
      char v20 = -48;
    }
    uint64_t v21 = v9 * a3;
    if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63) {
      return 0;
    }
    uint64_t v9 = v21 + (v19 + v20);
    if (__OFADD__(v21, (v19 + v20))) {
      return 0;
    }
    ++v18;
    --v14;
  }
  while (v14);
  return (unsigned __int8 *)v9;
}

uint64_t sub_100AF25BC()
{
  unint64_t v0 = String.subscript.getter();
  uint64_t v4 = sub_100AF263C(v0, v1, v2, v3);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_100AF263C(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  if ((a4 & 0x1000000000000000) != 0)
  {
    uint64_t v9 = sub_100AF2794(a1, a2, a3, a4);
    if (!v9
      || (uint64_t v10 = v9,
          unsigned int v11 = sub_100E047E8(v9, 0),
          unint64_t v12 = sub_100AF2894((unint64_t)v14, (uint64_t)(v11 + 4), v10, a1, a2, a3, a4),
          swift_bridgeObjectRetain(),
          swift_bridgeObjectRelease(),
          v12 == v10))
    {
      uint64_t v13 = static String._uncheckedFromUTF8(_:)();
      swift_release();
      return v13;
    }
    __break(1u);
  }
  else
  {
    if ((a4 & 0x2000000000000000) != 0)
    {
      v14[0] = a3;
      v14[1] = a4 & 0xFFFFFFFFFFFFFFLL;
      return static String._uncheckedFromUTF8(_:)();
    }
    if ((a3 & 0x1000000000000000) != 0) {
      goto LABEL_4;
    }
  }
  _StringObject.sharedUTF8.getter();
LABEL_4:

  return static String._uncheckedFromUTF8(_:)();
}

uint64_t sub_100AF2794(uint64_t result, unint64_t a2, unint64_t a3, unint64_t a4)
{
  unint64_t v7 = result;
  uint64_t v8 = (a3 >> 59) & 1;
  if ((a4 & 0x1000000000000000) == 0) {
    LOBYTE(v8) = 1;
  }
  uint64_t v9 = 4 << v8;
  if ((result & 0xC) == 4 << v8)
  {
    uint64_t result = sub_1009B7FE8(result, a3, a4);
    unint64_t v7 = result;
  }
  if ((a2 & 0xC) == v9)
  {
    uint64_t result = sub_1009B7FE8(a2, a3, a4);
    a2 = result;
    if ((a4 & 0x1000000000000000) == 0) {
      return (a2 >> 16) - (v7 >> 16);
    }
  }
  else if ((a4 & 0x1000000000000000) == 0)
  {
    return (a2 >> 16) - (v7 >> 16);
  }
  unint64_t v10 = HIBYTE(a4) & 0xF;
  if ((a4 & 0x2000000000000000) == 0) {
    unint64_t v10 = a3 & 0xFFFFFFFFFFFFLL;
  }
  if (v10 < v7 >> 16)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v10 < a2 >> 16)
  {
LABEL_17:
    __break(1u);
    return result;
  }

  return String.UTF8View._foreignDistance(from:to:)();
}

unint64_t sub_100AF2894(unint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, unint64_t a5, unint64_t a6, unint64_t a7)
{
  uint64_t v9 = (void *)result;
  if (!a2) {
    goto LABEL_5;
  }
  if (!a3)
  {
    unint64_t v12 = a4;
    uint64_t v11 = 0;
    goto LABEL_33;
  }
  if (a3 < 0) {
    goto LABEL_36;
  }
  unint64_t v10 = a5 >> 14;
  unint64_t v27 = a4 >> 14;
  if (a4 >> 14 == a5 >> 14)
  {
LABEL_5:
    uint64_t v11 = 0;
    unint64_t v12 = a4;
LABEL_33:
    *uint64_t v9 = a4;
    v9[1] = a5;
    _OWORD v9[2] = a6;
    v9[3] = a7;
    _OWORD v9[4] = v12;
    return v11;
  }
  uint64_t v11 = 0;
  uint64_t v14 = (a6 >> 59) & 1;
  if ((a7 & 0x1000000000000000) == 0) {
    LOBYTE(v14) = 1;
  }
  uint64_t v15 = 4 << v14;
  uint64_t v21 = (a7 & 0xFFFFFFFFFFFFFFFLL) + 32;
  uint64_t v22 = a7 & 0xFFFFFFFFFFFFFFLL;
  uint64_t v16 = HIBYTE(a7) & 0xF;
  if ((a7 & 0x2000000000000000) == 0) {
    uint64_t v16 = a6 & 0xFFFFFFFFFFFFLL;
  }
  unint64_t v23 = v16;
  uint64_t v26 = a3 - 1;
  unint64_t v12 = a4;
  while (1)
  {
    unint64_t v17 = v12 & 0xC;
    uint64_t result = v12;
    if (v17 == v15) {
      uint64_t result = sub_1009B7FE8(v12, a6, a7);
    }
    if (result >> 14 < v27 || result >> 14 >= v10) {
      break;
    }
    if ((a7 & 0x1000000000000000) != 0)
    {
      uint64_t result = String.UTF8View._foreignSubscript(position:)();
      char v19 = result;
      if (v17 != v15) {
        goto LABEL_23;
      }
    }
    else
    {
      unint64_t v18 = result >> 16;
      if ((a7 & 0x2000000000000000) != 0)
      {
        v28[0] = a6;
        v28[1] = v22;
        char v19 = *((unsigned char *)v28 + v18);
        if (v17 != v15) {
          goto LABEL_23;
        }
      }
      else
      {
        uint64_t result = v21;
        if ((a6 & 0x1000000000000000) == 0) {
          uint64_t result = _StringObject.sharedUTF8.getter();
        }
        char v19 = *(unsigned char *)(result + v18);
        if (v17 != v15)
        {
LABEL_23:
          if ((a7 & 0x1000000000000000) == 0) {
            goto LABEL_24;
          }
          goto LABEL_27;
        }
      }
    }
    uint64_t result = sub_1009B7FE8(v12, a6, a7);
    unint64_t v12 = result;
    if ((a7 & 0x1000000000000000) == 0)
    {
LABEL_24:
      unint64_t v12 = (v12 & 0xFFFFFFFFFFFF0000) + 65540;
      goto LABEL_29;
    }
LABEL_27:
    if (v23 <= v12 >> 16) {
      goto LABEL_35;
    }
    unint64_t v12 = String.UTF8View._foreignIndex(after:)();
LABEL_29:
    *(unsigned char *)(a2 + v11) = v19;
    if (v26 == v11)
    {
      uint64_t v11 = a3;
      goto LABEL_33;
    }
    ++v11;
    if (v10 == v12 >> 14) {
      goto LABEL_33;
    }
  }
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

uint64_t sub_100AF2AA8()
{
  return sub_100AF335C(40);
}

uint64_t sub_100AF2AB0()
{
  return sub_100AED8C0(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void **)(v0 + 32));
}

uint64_t sub_100AF2AC0()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100AF2AF8()
{
  uint64_t v1 = *(void *)(type metadata accessor for CRLBoardLibraryViewModel.Item(0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 40) & ~v2;
  uint64_t v4 = *(void *)(v1 + 64);
  swift_unknownObjectRelease();
  swift_release();
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    uint64_t v8 = type metadata accessor for UUID();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v0 + v3, v8);
    type metadata accessor for CRLBoardIdentifierStorage(0);
    swift_bridgeObjectRelease();
    sub_1005057FC(&qword_101677100);
    goto LABEL_6;
  }
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v6 = sub_1005057FC(&qword_101670F30);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48))(v0 + v3, 5, v6))
    {
      uint64_t v7 = type metadata accessor for UUID();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v0 + v3, v7);
LABEL_6:
      swift_bridgeObjectRelease();
    }
  }

  return _swift_deallocObject(v0, v4 + v3 + 2, v2 | 7);
}

uint64_t sub_100AF2CC4(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for CRLBoardLibraryViewModel.Item(0) - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = v1[2];
  uint64_t v7 = v1[3];
  uint64_t v8 = v1[4];
  uint64_t v9 = (uint64_t)v1 + v5;
  unint64_t v10 = (char *)v1 + *(void *)(v4 + 64) + v5;
  char v11 = *v10;
  char v12 = v10[1];
  uint64_t v13 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v13;
  *uint64_t v13 = v2;
  v13[1] = sub_100528D08;
  return sub_100A8188C(a1, v6, v7, v8, v9, v11, v12);
}

uint64_t sub_100AF2E00()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100AF2E40()
{
  return (*(uint64_t (**)(void))(**(void **)(v0 + 16) + 160))(*(void *)(v0 + 24));
}

uint64_t sub_100AF2E88()
{
  swift_unknownObjectRelease();

  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_100AF2ED0(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_100528488;
  return sub_100AF1804(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_100AF2F98(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100AF2FE0()
{
  return _swift_deallocObject(v0, 32, 7);
}

void sub_100AF3018()
{
  sub_100AF1514(*(void **)(v0 + 16));
}

void sub_100AF3040()
{
  sub_100AF15AC(*(void **)(v0 + 16));
}

void sub_100AF306C(uint64_t a1)
{
  sub_100AEC0C0(a1, *(void **)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32));
}

void sub_100AF3078()
{
  sub_100AEC634(*(void **)(v0 + 16));
}

uint64_t sub_100AF3088()
{
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 56, 7);
}

void sub_100AF30C8()
{
  sub_100AEC98C(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void (**)(void))(v0 + 40), *(void *)(v0 + 48));
}

uint64_t sub_100AF30DC()
{
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_100AF311C(uint64_t a1)
{
  return sub_100AEC6AC(a1, v1[2], v1[3], v1[4], v1[5], v1[6]);
}

void sub_100AF312C()
{
  sub_100AF1514(*(void **)(v0 + 16));
}

void sub_100AF3154(char a1)
{
  sub_100AF0C48(a1, *(void **)(v1 + 16));
}

void sub_100AF315C()
{
  sub_100AF1514(*(void **)(v0 + 16));
}

void sub_100AF3190()
{
  sub_100AF15AC(*(void **)(v0 + 16));
}

uint64_t sub_100AF31C8()
{
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_100AF3208()
{
  return _swift_deallocObject(v0, 48, 7);
}

void sub_100AF3240()
{
  sub_100AEBEBC(*(void **)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_100AF3250(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_100528D08;
  return sub_100A82E04(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_100AF3318()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100AF3354()
{
  return sub_100AF335C(48);
}

uint64_t sub_100AF335C(uint64_t a1)
{
  swift_release();

  return _swift_deallocObject(v1, a1, 7);
}

void sub_100AF33B0()
{
  sub_100AEECC0(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void **)(v0 + 32));
}

uint64_t sub_100AF33C0()
{
  sub_1005057FC(&qword_101691C00);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_101198A40;
  *(void *)(v0 + 32) = type metadata accessor for CRLPPTNavigate_OpenBoard();
  *(void *)(v0 + 40) = &off_101523790;
  *(void *)(v0 + 48) = &off_1015237A8;
  *(void *)(v0 + 56) = type metadata accessor for CRLPPTNavigate_OpenNewBoard();
  *(void *)(v0 + 64) = &off_101523790;
  *(void *)(v0 + 72) = &off_1015237A8;
  *(void *)(v0 + 80) = type metadata accessor for CRLPPTNavigate_CloseBoard();
  *(void *)(v0 + 88) = &off_101523790;
  *(void *)(v0 + 96) = &off_1015237A8;
  *(void *)(v0 + 104) = type metadata accessor for CRLPPTLibrary_Scroll();
  *(void *)(v0 + 112) = &off_101523790;
  *(void *)(v0 + 120) = &off_1015237A8;
  *(void *)(v0 + 128) = type metadata accessor for CRLPPTLibrary_ScrollRecap();
  *(void *)(v0 + 136) = &off_101523790;
  *(void *)(v0 + 144) = &off_1015237A8;
  *(void *)(v0 + 152) = type metadata accessor for CRLPPTLibrary_Rotate();
  *(void *)(v0 + 160) = &off_101523790;
  *(void *)(v0 + 168) = &off_1015237A8;
  *(void *)(v0 + 176) = type metadata accessor for CRLPPTLibrary_Resize();
  *(void *)(v0 + 184) = &off_101523790;
  *(void *)(v0 + 192) = &off_1015237A8;
  *(void *)(v0 + 200) = type metadata accessor for CRLPPTBoard_ScrollVertical();
  *(void *)(v0 + 208) = &off_101523790;
  *(void *)(v0 + 216) = &off_1015237A8;
  *(void *)(v0 + 224) = type metadata accessor for CRLPPTBoard_ScrollHorizontal();
  *(void *)(v0 + 232) = &off_101523790;
  *(void *)(v0 + 240) = &off_1015237A8;
  *(void *)(v0 + 248) = type metadata accessor for CRLPPTBoard_ScrollNatural();
  *(void *)(v0 + 256) = &off_101523790;
  *(void *)(v0 + 264) = &off_1015237A8;
  *(void *)(v0 + 272) = type metadata accessor for CRLPPTBoard_ScrollRecap();
  *(void *)(v0 + 280) = &off_101523790;
  *(void *)(v0 + 288) = &off_1015237A8;
  *(void *)(v0 + 296) = type metadata accessor for CRLPPTBoard_Rotate();
  *(void *)(v0 + 304) = &off_101523790;
  *(void *)(v0 + 312) = &off_1015237A8;
  *(void *)(v0 + 320) = type metadata accessor for CRLPPTBoard_Resize();
  *(void *)(v0 + 328) = &off_101523790;
  *(void *)(v0 + 336) = &off_1015237A8;
  *(void *)(v0 + 344) = type metadata accessor for CRLPPTBoard_Zoom();
  *(void *)(v0 + 352) = &off_101523790;
  *(void *)(v0 + 360) = &off_1015237A8;
  return v0;
}

void sub_100AF3578(void *a1, void *a2, uint64_t a3)
{
  uint64_t v7 = sub_1005057FC(&qword_101672BB0);
  __chkstk_darwin(v7 - 8, v8);
  unint64_t v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = self;
  char v12 = v3;
  id v13 = [v11 sharedApplication];
  id v14 = [v13 delegate];

  if (!v14)
  {
    __break(1u);
    goto LABEL_12;
  }
  type metadata accessor for CRLiOSAppDelegate();
  uint64_t v15 = *(void *)(swift_dynamicCastClassUnconditional() + OBJC_IVAR____TtC8Freeform17CRLiOSAppDelegate_stencilLibrary);
  swift_retain();
  swift_unknownObjectRelease();
  if (!v15)
  {
LABEL_12:
    __break(1u);
    return;
  }
  *(void *)&v12[OBJC_IVAR____TtC8Freeform34CRLiOSStencilLibraryViewController_stencilLibrary] = v15;
  uint64_t v16 = &v12[OBJC_IVAR____TtC8Freeform34CRLiOSStencilLibraryViewController____lazy_storage___gridView];
  uint64_t v17 = _s11SwiftUIViewVMa(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v16, 1, 1, v17);
  *(void *)&v12[OBJC_IVAR____TtC8Freeform34CRLiOSStencilLibraryViewController____lazy_storage___gridViewController] = 0;
  uint64_t v18 = OBJC_IVAR____TtC8Freeform34CRLiOSStencilLibraryViewController_swiftUIPublisher;
  _s11SwiftUIViewV9PublisherCMa(0);
  uint64_t v19 = swift_allocObject();
  uint64_t v31 = 0;
  sub_1005057FC((uint64_t *)&unk_10169DC30);
  Published.init(initialValue:)();
  *(void *)&v12[v18] = v19;
  swift_unknownObjectUnownedInit();
  swift_unknownObjectUnownedInit();
  if ((a3 & 0xC000000000000001) == 0)
  {
    if (*(void *)(a3 + 16)) {
      goto LABEL_5;
    }
LABEL_7:
    swift_bridgeObjectRelease();
    uint64_t v20 = 0;
    goto LABEL_8;
  }
  if (!__CocoaSet.count.getter()) {
    goto LABEL_7;
  }
LABEL_5:
  _s12DataArchiverCMa();
  uint64_t v20 = swift_allocObject();
  *(_OWORD *)(v20 + 32) = xmmword_10118C770;
  *(void *)(v20 + 48) = 0;
  *(void *)(v20 + 56) = 0;
  swift_unknownObjectUnownedInit();
  *(void *)(v20 + 16) = a3;
LABEL_8:
  *(void *)&v12[OBJC_IVAR____TtC8Freeform34CRLiOSStencilLibraryViewController_stencilDataArchiver] = v20;

  uint64_t v21 = (objc_class *)type metadata accessor for CRLiOSStencilLibraryViewController();
  v30.receiver = v12;
  v30.super_class = v21;
  uint64_t v22 = (char *)objc_msgSendSuper2(&v30, "initWithNibName:bundle:", 0, 0);
  uint64_t v23 = *(void *)&v22[OBJC_IVAR____TtC8Freeform34CRLiOSStencilLibraryViewController_stencilDataArchiver];
  if (v23)
  {
    uint64_t v24 = type metadata accessor for TaskPriority();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v10, 1, 1, v24);
    type metadata accessor for MainActor();
    uint64_t v25 = v22;
    swift_retain_n();
    uint64_t v26 = v25;
    uint64_t v27 = static MainActor.shared.getter();
    uint64_t v28 = (void *)swift_allocObject();
    void v28[2] = v27;
    _OWORD v28[3] = &protocol witness table for MainActor;
    _DWORD v28[4] = v26;
    v28[5] = v23;
    sub_1006D9104((uint64_t)v10, (uint64_t)&unk_101691CC0, (uint64_t)v28);
    swift_release();
    swift_release();
  }
}

uint64_t sub_100AF3904(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[5] = a4;
  v5[6] = a5;
  type metadata accessor for MainActor();
  v5[7] = static MainActor.shared.getter();
  uint64_t v7 = dispatch thunk of Actor.unownedExecutor.getter();
  uint64_t v5[8] = v7;
  v5[9] = v6;
  return _swift_task_switch(sub_100AF399C, v7, v6);
}

uint64_t sub_100AF399C()
{
  *(void *)(v0 + 80) = *(void *)(*(void *)(v0 + 40)
                                   + OBJC_IVAR____TtC8Freeform34CRLiOSStencilLibraryViewController_swiftUIPublisher);
  return _swift_task_switch(sub_100AF39CC, 0, 0);
}

uint64_t sub_100AF39CC()
{
  uint64_t v1 = sub_1009CF220();
  *(void *)(v0 + 88) = v1;
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 96) = v2;
  type metadata accessor for CGImage(0);
  uint64_t v4 = v3;
  uint64_t v5 = sub_1005057FC(&qword_101672BD0);
  *uint64_t v2 = v0;
  v2[1] = sub_100AF3AAC;
  return Task.result.getter(v0 + 16, v1, v4, v5, &protocol self-conformance witness table for Error);
}

uint64_t sub_100AF3AAC()
{
  swift_task_dealloc();
  swift_release();
  return _swift_task_switch(sub_100AF3BC4, 0, 0);
}

uint64_t sub_100AF3BC4()
{
  *(void *)(v0 + 104) = *(void *)(v0 + 16);
  if (*(unsigned char *)(v0 + 24))
  {
    swift_willThrow();
    uint64_t v1 = *(void *)(v0 + 64);
    uint64_t v2 = *(void *)(v0 + 72);
    uint64_t v3 = sub_100AF3D3C;
  }
  else
  {
    uint64_t v1 = *(void *)(v0 + 64);
    uint64_t v2 = *(void *)(v0 + 72);
    uint64_t v3 = sub_100AF3C50;
  }
  return _swift_task_switch(v3, v1, v2);
}

uint64_t sub_100AF3C50()
{
  uint64_t v1 = (void *)v0[13];
  swift_release();
  id v2 = [objc_allocWithZone((Class)UIImage) initWithCGImage:v1];
  sub_100541080(v1, 0);
  swift_getKeyPath();
  swift_getKeyPath();
  v0[4] = v2;
  swift_retain();
  static Published.subscript.setter();
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t sub_100AF3D3C()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100AF3F48(char a1)
{
  v12.receiver = v1;
  v12.super_class = (Class)type metadata accessor for CRLiOSStencilLibraryViewController();
  [super viewDidAppear:a1 & 1];
  unint64_t v10 = &type metadata for CRLFeatureFlags;
  unint64_t v11 = sub_1005396A8();
  v9[0] = 0;
  char v3 = isFeatureEnabled(_:)();
  uint64_t result = _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v9);
  if (v3)
  {
    id v5 = [v1 traitCollection];
    unsigned int v6 = [v5 crl_isCompactWidth];

    if (v6)
    {
      if (qword_10166EE28 != -1) {
        swift_once();
      }
      uint64_t v7 = sub_1005057FC(&qword_10169FA10);
      uint64_t v8 = qword_10171A300;
    }
    else
    {
      if (qword_10166F758 != -1) {
        swift_once();
      }
      uint64_t v7 = sub_1005057FC(&qword_10169FA10);
      uint64_t v8 = qword_10171B570;
    }
    sub_100556B74(v7, (uint64_t)v8);
    swift_beginAccess();
    Tips.Parameter.wrappedValue.setter();
    return swift_endAccess();
  }
  return result;
}

void sub_100AF4124(uint64_t a1)
{
  uint64_t v3 = *(void *)(*(void *)&v1[OBJC_IVAR____TtC8Freeform34CRLiOSStencilLibraryViewController_stencilLibrary]
                 + OBJC_IVAR____TtC8Freeform17CRLStencilLibrary_fakeDataStore);
  swift_beginAccess();
  uint64_t v4 = *(void *)(v3 + 16);
  v24[2] = a1;
  swift_bridgeObjectRetain();
  uint64_t v5 = sub_100ED51B8(sub_100AF5F50, (uint64_t)v24, v4);
  swift_bridgeObjectRelease();
  if (v5)
  {
    uint64_t Strong = (void *)swift_unknownObjectUnownedLoadStrong();
    id v7 = [Strong canvasEditor];

    if (v7)
    {
      id v8 = [self pasteboardWithUniqueName];
      type metadata accessor for CRLBoardItem(0);
      sub_100AF5F70((unint64_t *)&qword_101676C20, (void (*)(uint64_t))type metadata accessor for CRLBoardItem);
      swift_bridgeObjectRetain();
      Class isa = Set._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      [v7 copyBoardItems:isa toPasteboard:v8 asPDF:0 nativeOnly:1];

      [v7 pasteWithPasteboard:v8 sender:0];
      [v1 dismissViewControllerAnimated:1 completion:0];
      swift_release();
      swift_unknownObjectRelease();
    }
    else
    {
      if (qword_10166FA78 != -1) {
        swift_once();
      }
      swift_beginAccess();
      uint64_t v16 = (void *)static OS_os_log.crlStencilLibrary;
      sub_1005057FC((uint64_t *)&unk_101672B40);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_10117E810;
      uint64_t v18 = (void *)swift_unknownObjectUnownedLoadStrong();
      id v8 = v16;
      id v19 = [v18 description];
      uint64_t v20 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v22 = v21;

      *(void *)(inited + 56) = &type metadata for String;
      *(void *)(inited + 64) = sub_100528BE4();
      *(void *)(inited + 32) = v20;
      *(void *)(inited + 40) = v22;
      uint64_t v23 = static os_log_type_t.error.getter();
      sub_100BAC898((uint64_t)v8, (uint64_t)&_mh_execute_header, v23, (uint64_t)"Tried to insert stencil, but could not retrieve canvas editor from ICC %@", 73, 2, inited);
      swift_setDeallocating();
      sub_1005057FC(&qword_101672B50);
      swift_arrayDestroy();
      swift_release();
    }
  }
  else
  {
    if (qword_10166FA78 != -1) {
      swift_once();
    }
    swift_beginAccess();
    unint64_t v10 = (void *)static OS_os_log.crlStencilLibrary;
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t v11 = swift_initStackObject();
    *(_OWORD *)(v11 + 16) = xmmword_10117E810;
    type metadata accessor for UUID();
    sub_100AF5F70(&qword_101677460, (void (*)(uint64_t))&type metadata accessor for UUID);
    id v8 = v10;
    uint64_t v12 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v14 = v13;
    *(void *)(v11 + 56) = &type metadata for String;
    *(void *)(v11 + 64) = sub_100528BE4();
    *(void *)(v11 + 32) = v12;
    *(void *)(v11 + 40) = v14;
    uint64_t v15 = static os_log_type_t.error.getter();
    sub_100BAC898((uint64_t)v8, (uint64_t)&_mh_execute_header, v15, (uint64_t)"Tried to insert stencil, but could not retrieve stencil data for identifier %@", 78, 2, v11);
    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();
  }
}

void sub_100AF467C(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = sub_1005057FC(&qword_101672BB0);
  __chkstk_darwin(v5 - 8, v6);
  id v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *(void *)&v2[OBJC_IVAR____TtC8Freeform34CRLiOSStencilLibraryViewController_stencilDataArchiver];
  if (v9)
  {
    uint64_t v10 = type metadata accessor for TaskPriority();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v8, 1, 1, v10);
    type metadata accessor for MainActor();
    swift_retain_n();
    swift_bridgeObjectRetain();
    uint64_t v11 = v2;
    uint64_t v12 = static MainActor.shared.getter();
    uint64_t v13 = (void *)swift_allocObject();
    v13[2] = v12;
    void v13[3] = &protocol witness table for MainActor;
    double v13[4] = a1;
    void v13[5] = a2;
    v13[6] = v9;
    v13[7] = v11;
    sub_1006D9104((uint64_t)v8, (uint64_t)&unk_101691CB0, (uint64_t)v13);
    swift_release();
    swift_release();
  }
  else
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"saveStencil(title:)", 19, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSStencilLibraryViewController.swift", 104, 2, 116, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"saveStencil(title:)", 19, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSStencilLibraryViewController.swift", 104, 2, 116);
  }
}

uint64_t sub_100AF4878(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[27] = a6;
  v7[28] = a7;
  v7[25] = a4;
  v7[26] = a5;
  v7[29] = type metadata accessor for MainActor();
  v7[30] = static MainActor.shared.getter();
  return _swift_task_switch(sub_100AF48F8, 0, 0);
}

uint64_t sub_100AF48F8()
{
  uint64_t v1 = sub_1009CF220();
  v0[31] = v1;
  id v2 = (void *)swift_task_alloc();
  v0[32] = v2;
  type metadata accessor for CGImage(0);
  uint64_t v4 = v3;
  uint64_t v5 = sub_1005057FC(&qword_101672BD0);
  v0[33] = v5;
  *id v2 = v0;
  v2[1] = sub_100AF49DC;
  return Task.result.getter(v0 + 22, v1, v4, v5, &protocol self-conformance witness table for Error);
}

uint64_t sub_100AF49DC()
{
  swift_task_dealloc();
  swift_release();
  return _swift_task_switch(sub_100AF4AF4, 0, 0);
}

uint64_t sub_100AF4AF4()
{
  *(void *)(v0 + 272) = *(void *)(v0 + 176);
  if (*(unsigned char *)(v0 + 184))
  {
    swift_willThrow();
    uint64_t v1 = dispatch thunk of Actor.unownedExecutor.getter();
    uint64_t v3 = v2;
    uint64_t v4 = sub_100AF4D00;
    uint64_t v5 = v1;
    uint64_t v6 = v3;
  }
  else
  {
    uint64_t v7 = dispatch thunk of Actor.unownedExecutor.getter();
    uint64_t v6 = v8;
    *(void *)(v0 + 280) = v7;
    *(void *)(v0 + 288) = v8;
    uint64_t v4 = sub_100AF4BC0;
    uint64_t v5 = v7;
  }
  return _swift_task_switch(v4, v5, v6);
}

uint64_t sub_100AF4BC0()
{
  *(void *)(v0 + 88) = *(void *)(v0 + 272);
  uint64_t v1 = *(void *)(v0 + 224);
  uint64_t v2 = *(void *)(v0 + 208);
  *(void *)(v0 + 96) = *(void *)(v0 + 200);
  *(void *)(v0 + 104) = v2;
  *(void *)(v0 + 112) = 0;
  *(void *)(v0 + 120) = 0;
  *(void *)(v0 + 128) = &_swiftEmptySetSingleton;
  *(void *)(v0 + 136) = &_swiftEmptySetSingleton;
  *(_WORD *)(v0 + 144) = 1;
  uint64_t v3 = *(void *)(v1 + OBJC_IVAR____TtC8Freeform34CRLiOSStencilLibraryViewController_stencilDataArchiver);
  if (v3)
  {
    uint64_t v4 = *(void **)(v3 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    swift_bridgeObjectRetain();
    if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0 && _CocoaArrayWrapper.endIndex.getter())
    {
      sub_100508DCC((unint64_t)_swiftEmptyArrayStorage);
      uint64_t v4 = v7;
    }
    else
    {
      uint64_t v4 = &_swiftEmptySetSingleton;
    }
  }
  *(void *)(v0 + 296) = v4;
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v0 + 304) = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_100AF4D64;
  return sub_100BD6CC0((uint64_t)v4, v0 + 88);
}

uint64_t sub_100AF4D00()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100AF4D64()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 312) = v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  uint64_t v3 = *(void *)(v2 + 288);
  uint64_t v4 = *(void *)(v2 + 280);
  if (v0) {
    uint64_t v5 = sub_100AF4F6C;
  }
  else {
    uint64_t v5 = sub_100AF4EB8;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_100AF4EB8()
{
  uint64_t v1 = (void *)v0[34];
  uint64_t v2 = (void *)v0[28];
  swift_release();
  [v2 dismissViewControllerAnimated:1 completion:0];

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t sub_100AF4F6C()
{
  swift_release();
  if (qword_10166FA78 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[39];
  uint64_t v2 = (void *)v0[34];
  swift_beginAccess();
  uint64_t v3 = (void *)static OS_os_log.crlStencilLibrary;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117E810;
  v0[24] = v1;
  id v5 = v3;
  swift_errorRetain();
  uint64_t v6 = String.init<A>(describing:)();
  uint64_t v8 = v7;
  *(void *)(inited + 56) = &type metadata for String;
  *(void *)(inited + 64) = sub_100528BE4();
  *(void *)(inited + 32) = v6;
  *(void *)(inited + 40) = v8;
  uint64_t v9 = static os_log_type_t.error.getter();
  sub_100BAC898((uint64_t)v5, (uint64_t)&_mh_execute_header, v9, (uint64_t)"Error saving stencil: %@", 24, 2, inited);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  swift_errorRelease();
  uint64_t v10 = (uint64_t (*)(void))v0[1];
  return v10();
}

id sub_100AF5138()
{
  id result = [self systemBackgroundColor];
  qword_101691C08 = (uint64_t)result;
  return result;
}

double sub_100AF5174()
{
  double result = 800.0;
  xmmword_101691C10 = xmmword_1011A7810;
  return result;
}

uint64_t sub_100AF518C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1005057FC(&qword_101691CA0);
  __chkstk_darwin(v3 - 8, v4);
  uint64_t v6 = &v17[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v7, v8);
  uint64_t v10 = &v17[-v9];
  uint64_t v11 = (uint64_t)&v1[OBJC_IVAR____TtC8Freeform34CRLiOSStencilLibraryViewController____lazy_storage___gridView];
  swift_beginAccess();
  sub_100AF5C34(v11, (uint64_t)v10);
  uint64_t v12 = _s11SwiftUIViewVMa(0);
  uint64_t v13 = *(void *)(v12 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v13 + 48))(v10, 1, v12) != 1) {
    return sub_100AF5DC8((uint64_t)v10, a1);
  }
  sub_100AF5C9C((uint64_t)v10);
  char v14 = *(void *)&v1[OBJC_IVAR____TtC8Freeform34CRLiOSStencilLibraryViewController_stencilDataArchiver] != 0;
  uint64_t v15 = *(void *)&v1[OBJC_IVAR____TtC8Freeform34CRLiOSStencilLibraryViewController_swiftUIPublisher];
  swift_retain();
  sub_1008760A8((uint64_t)v1, (uint64_t)&off_101523E98, v14, v15, a1);
  sub_100AF5CFC(a1, (uint64_t)v6);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v13 + 56))(v6, 0, 1, v12);
  swift_beginAccess();
  sub_100AF5D60((uint64_t)v6, v11);
  return swift_endAccess();
}

id sub_100AF5370()
{
  uint64_t v1 = v0;
  uint64_t v2 = _s11SwiftUIViewVMa(0);
  __chkstk_darwin(v2 - 8, v3);
  uint64_t v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = OBJC_IVAR____TtC8Freeform34CRLiOSStencilLibraryViewController____lazy_storage___gridViewController;
  uint64_t v7 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform34CRLiOSStencilLibraryViewController____lazy_storage___gridViewController);
  if (v7)
  {
    id v8 = *(id *)(v0 + OBJC_IVAR____TtC8Freeform34CRLiOSStencilLibraryViewController____lazy_storage___gridViewController);
  }
  else
  {
    sub_100AF518C((uint64_t)v5);
    id v9 = objc_allocWithZone((Class)sub_1005057FC(&qword_101691C98));
    uint64_t v10 = (void *)UIHostingController.init(rootView:)();
    uint64_t v11 = *(void **)(v0 + v6);
    *(void *)(v1 + v6) = v10;
    id v8 = v10;

    uint64_t v7 = 0;
  }
  id v12 = v7;
  return v8;
}

void sub_100AF5440()
{
  if (qword_10166F8F0 != -1) {
    swift_once();
  }
  [v0 setPreferredContentSize:xmmword_101691C10];
  id v1 = sub_100AF5370();
  id v2 = [v1 view];

  if (!v2)
  {
    __break(1u);
    goto LABEL_18;
  }
  [v2 setTranslatesAutoresizingMaskIntoConstraints:0];

  id v3 = [v0 view];
  if (!v3)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  uint64_t v4 = v3;
  id v5 = sub_100AF5370();
  id v6 = [v5 view];

  if (!v6)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  [v4 addSubview:v6];

  id v7 = sub_100AF5370();
  [v0 addChildViewController:v7];

  id v8 = sub_100AF5370();
  [v8 didMoveToParentViewController:v0];

  sub_1005057FC((uint64_t *)&unk_101676C10);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_10117FBE0;
  id v10 = sub_100AF5370();
  id v11 = [v10 view];

  if (!v11)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  id v12 = [v11 topAnchor];

  id v13 = [v0 view];
  if (!v13)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v14 = v13;
  id v15 = [v13 safeAreaLayoutGuide];

  id v16 = [v15 topAnchor];
  id v17 = [v12 constraintEqualToAnchor:v16];

  *(void *)(v9 + 32) = v17;
  id v18 = sub_100AF5370();
  id v19 = [v18 view];

  if (!v19)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  id v20 = [v19 leadingAnchor];

  id v21 = [v0 view];
  if (!v21)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  uint64_t v22 = v21;
  id v23 = [v21 safeAreaLayoutGuide];

  id v24 = [v23 leadingAnchor];
  id v25 = [v20 constraintEqualToAnchor:v24];

  *(void *)(v9 + 40) = v25;
  id v26 = sub_100AF5370();
  id v27 = [v26 view];

  if (!v27)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  id v28 = [v27 trailingAnchor];

  id v29 = [v0 view];
  if (!v29)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  objc_super v30 = v29;
  id v31 = [v29 safeAreaLayoutGuide];

  id v32 = [v31 trailingAnchor];
  id v33 = [v28 constraintEqualToAnchor:v32];

  *(void *)(v9 + 48) = v33;
  id v34 = sub_100AF5370();
  id v35 = [v34 view];

  if (!v35)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  id v36 = [v35 bottomAnchor];

  id v37 = [v0 view];
  if (!v37)
  {
LABEL_27:
    __break(1u);
    return;
  }
  id v38 = v37;
  id v39 = self;
  id v40 = [v38 bottomAnchor];

  id v41 = [v36 constraintEqualToAnchor:v40];
  *(void *)(v9 + 56) = v41;
  specialized Array._endMutation()();
  sub_10053BBC0();
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v39 activateConstraints:isa];
}

id sub_100AF59F4()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLiOSStencilLibraryViewController();
  return [super dealloc];
}

uint64_t sub_100AF5AC8()
{
  return type metadata accessor for CRLiOSStencilLibraryViewController();
}

uint64_t type metadata accessor for CRLiOSStencilLibraryViewController()
{
  uint64_t result = qword_101691C80;
  if (!qword_101691C80) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_100AF5B1C()
{
  sub_100AF5BDC();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_100AF5BDC()
{
  if (!qword_101691C90)
  {
    _s11SwiftUIViewVMa(255);
    unint64_t v0 = type metadata accessor for Optional();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_101691C90);
    }
  }
}

uint64_t sub_100AF5C34(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1005057FC(&qword_101691CA0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100AF5C9C(uint64_t a1)
{
  uint64_t v2 = sub_1005057FC(&qword_101691CA0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100AF5CFC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s11SwiftUIViewVMa(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100AF5D60(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1005057FC(&qword_101691CA0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_100AF5DC8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s11SwiftUIViewVMa(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100AF5E2C()
{
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 64, 7);
}

uint64_t sub_100AF5E7C(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v9 = v1[6];
  uint64_t v8 = v1[7];
  id v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  void *v10 = v2;
  v10[1] = sub_100528488;
  return sub_100AF4878(a1, v4, v5, v6, v7, v9, v8);
}

uint64_t sub_100AF5F50(void *a1)
{
  return sub_100BD71E0(a1, *(void *)(v1 + 16)) & 1;
}

uint64_t sub_100AF5F70(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_100AF5FB8()
{
  id v1 = [self sharedApplication];
  id v2 = [v1 delegate];

  if (!v2) {
    __break(1u);
  }
  type metadata accessor for CRLiOSAppDelegate();
  uint64_t v3 = *(void *)(swift_dynamicCastClassUnconditional() + OBJC_IVAR____TtC8Freeform17CRLiOSAppDelegate_stencilLibrary);
  swift_retain();
  swift_unknownObjectRelease();
  if (!v3) {
    __break(1u);
  }
  *(void *)&v0[OBJC_IVAR____TtC8Freeform34CRLiOSStencilLibraryViewController_stencilLibrary] = v3;
  uint64_t v4 = &v0[OBJC_IVAR____TtC8Freeform34CRLiOSStencilLibraryViewController____lazy_storage___gridView];
  uint64_t v5 = _s11SwiftUIViewVMa(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v4, 1, 1, v5);
  *(void *)&v0[OBJC_IVAR____TtC8Freeform34CRLiOSStencilLibraryViewController____lazy_storage___gridViewController] = 0;
  uint64_t v6 = OBJC_IVAR____TtC8Freeform34CRLiOSStencilLibraryViewController_swiftUIPublisher;
  _s11SwiftUIViewV9PublisherCMa(0);
  uint64_t v7 = swift_allocObject();
  sub_1005057FC((uint64_t *)&unk_10169DC30);
  Published.init(initialValue:)();
  *(void *)&v0[v6] = v7;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

uint64_t sub_100AF6164()
{
  swift_unknownObjectRelease();

  swift_release();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_100AF61AC(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v6 = v1[5];
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_100528D08;
  return sub_100AF3904(a1, v4, v5, v7, v6);
}

uint64_t sub_100AF6274@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, char *a3@<X8>)
{
  id v38 = a3;
  uint64_t v5 = sub_1005057FC((uint64_t *)&unk_101674160);
  __chkstk_darwin(v5 - 8, v6);
  uint64_t v41 = (uint64_t)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for CRLProto_Data(0);
  uint64_t v39 = *(void *)(v8 - 8);
  uint64_t v40 = v8;
  __chkstk_darwin(v8, v9);
  id v11 = (uint64_t *)((char *)&v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v12 = type metadata accessor for UUID();
  uint64_t v37 = *(void *)(v12 - 8);
  __chkstk_darwin(v12, v13);
  id v15 = (char *)&v36 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16, v17);
  id v19 = (char *)&v36 - v18;
  uint64_t v20 = type metadata accessor for BinaryDecodingOptions();
  __chkstk_darwin(v20 - 8, v21);
  uint64_t v22 = type metadata accessor for CRLProto_CollaboratorCursorColor(0);
  __chkstk_darwin(v22, v23);
  id v25 = (_DWORD *)((char *)&v36 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v44 = 0;
  long long v42 = 0u;
  long long v43 = 0u;
  sub_100510D4C(a1, a2);
  BinaryDecodingOptions.init()();
  sub_100AF69DC();
  id v26 = v45;
  Message.init(serializedData:extensions:partial:options:)();
  if (v26) {
    return sub_100510084(a1, a2);
  }
  uint64_t v45 = v15;
  uint64_t v36 = v12;
  uint64_t v28 = v41;
  sub_1005CC4F0((uint64_t)v25 + *(int *)(v22 + 24), v41);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v39 + 48))(v28, 1, v40) == 1)
  {
    *(_OWORD *)id v11 = xmmword_101180360;
    UnknownStorage.init()();
    sub_1008A9D98(v28);
  }
  else
  {
    sub_1005CC5B8(v28, (uint64_t)v11);
  }
  id v29 = v38;
  uint64_t v30 = *v11;
  unint64_t v31 = v11[1];
  sub_100510D4C(*v11, v31);
  sub_100AF6A34((uint64_t)v11, type metadata accessor for CRLProto_Data);
  UUID.init(crl_data:)(v30, v31);
  sub_100510084(a1, a2);
  id v32 = *(void (**)(char *, char *, uint64_t))(v37 + 32);
  id v33 = v45;
  id v34 = v19;
  uint64_t v35 = v36;
  v32(v45, v34, v36);
  LODWORD(v31) = *v25;
  sub_100AF6A34((uint64_t)v25, type metadata accessor for CRLProto_CollaboratorCursorColor);
  v32(v29, v33, v35);
  uint64_t result = type metadata accessor for CRLCollaboratorCursorColor();
  *(_DWORD *)&v29[*(int *)(result + 20)] = v31;
  return result;
}

uint64_t sub_100AF6674()
{
  uint64_t v0 = sub_1005057FC((uint64_t *)&unk_101674160);
  __chkstk_darwin(v0 - 8, v1);
  uint64_t v3 = (char *)&v25 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for CRLProto_Data(0);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4, v6);
  uint64_t v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9, v10);
  uint64_t v12 = (long long *)((char *)&v25 - v11);
  uint64_t v13 = type metadata accessor for CRLProto_CollaboratorCursorColor(0);
  __chkstk_darwin(v13, v14);
  uint64_t v16 = (_DWORD *)((char *)&v25 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  *uint64_t v16 = 0;
  UnknownStorage.init()();
  uint64_t v27 = v13;
  uint64_t v17 = (uint64_t)v16 + *(int *)(v13 + 24);
  uint64_t v18 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 56);
  v18(v17, 1, 1, v4);
  long long v25 = xmmword_101180360;
  *uint64_t v12 = xmmword_101180360;
  UnknownStorage.init()();
  sub_1008A9D98(v17);
  sub_1005CC5B8((uint64_t)v12, v17);
  id v26 = v18;
  v18(v17, 0, 1, v4);
  uint64_t v19 = (uint64_t)v3;
  uint64_t v20 = UUID.crl_data()();
  uint64_t v22 = v21;
  sub_1005CC4F0(v17, v19);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v19, 1, v4) == 1)
  {
    *(_OWORD *)uint64_t v8 = v25;
    UnknownStorage.init()();
    sub_1008A9D98(v19);
  }
  else
  {
    sub_1005CC5B8(v19, (uint64_t)v8);
  }
  sub_100510084(*(void *)v8, *((void *)v8 + 1));
  *(void *)uint64_t v8 = v20;
  *((void *)v8 + 1) = v22;
  sub_1008A9D98(v17);
  sub_1005CC5B8((uint64_t)v8, v17);
  v26(v17, 0, 1, v4);
  *uint64_t v16 = *(_DWORD *)(v28 + *(int *)(type metadata accessor for CRLCollaboratorCursorColor() + 20));
  sub_100AF69DC();
  uint64_t v23 = Message.serializedData(partial:)();
  sub_100AF6A34((uint64_t)v16, type metadata accessor for CRLProto_CollaboratorCursorColor);
  return v23;
}

uint64_t type metadata accessor for CRLCollaboratorCursorColor()
{
  uint64_t result = qword_101691D28;
  if (!qword_101691D28) {
    return swift_getSingletonMetadata();
  }
  return result;
}

unint64_t sub_100AF69DC()
{
  unint64_t result = qword_101691CC8;
  if (!qword_101691CC8)
  {
    type metadata accessor for CRLProto_CollaboratorCursorColor(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101691CC8);
  }
  return result;
}

uint64_t sub_100AF6A34(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t *sub_100AF6A94(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for UUID();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    *(_DWORD *)((char *)a1 + *(int *)(a3 + 20)) = *(_DWORD *)((char *)a2 + *(int *)(a3 + 20));
  }
  return a1;
}

uint64_t sub_100AF6B60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  *(_DWORD *)(a1 + *(int *)(a3 + 20)) = *(_DWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_100AF6BDC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(_DWORD *)(a1 + *(int *)(a3 + 20)) = *(_DWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_100AF6C58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  *(_DWORD *)(a1 + *(int *)(a3 + 20)) = *(_DWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_100AF6CD4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  *(_DWORD *)(a1 + *(int *)(a3 + 20)) = *(_DWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_100AF6D50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100AF6D64);
}

uint64_t sub_100AF6D64(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UUID();
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t sub_100AF6DD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100AF6DE4);
}

uint64_t sub_100AF6DE4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UUID();
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

uint64_t sub_100AF6E54()
{
  uint64_t result = type metadata accessor for UUID();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_100AF6EEC(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for CRLBoardIdentifier(0);
  uint64_t v47 = *(void *)(v3 - 8);
  __chkstk_darwin(v3 - 8, v4);
  uint64_t v46 = (uint64_t)v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6, v7);
  uint64_t v45 = (uint64_t)v39 - v8;
  int64_t v9 = *(void *)(a1 + 16);
  uint64_t v10 = _swiftEmptyArrayStorage;
  if (!v9) {
    return (uint64_t)v10;
  }
  v39[1] = v1;
  uint64_t v50 = _swiftEmptyArrayStorage;
  sub_1006BB504(0, v9, 0);
  uint64_t result = sub_100D4F4DC(a1);
  uint64_t v13 = result;
  uint64_t v14 = 0;
  uint64_t v15 = a1 + 64;
  uint64_t v40 = a1 + 80;
  int64_t v41 = v9;
  uint64_t v43 = a1 + 64;
  uint64_t v44 = a1;
  uint64_t v42 = v12;
  while ((v13 & 0x8000000000000000) == 0 && v13 < 1 << *(unsigned char *)(a1 + 32))
  {
    unint64_t v18 = (unint64_t)v13 >> 6;
    if ((*(void *)(v15 + 8 * ((unint64_t)v13 >> 6)) & (1 << v13)) == 0) {
      goto LABEL_25;
    }
    if (*(_DWORD *)(a1 + 36) != v12) {
      goto LABEL_26;
    }
    uint64_t v19 = v45;
    sub_100B009B4(*(void *)(a1 + 48) + *(void *)(v47 + 72) * v13, v45, type metadata accessor for CRLBoardIdentifier);
    uint64_t v20 = v46;
    sub_100B02A28(v19, v46, type metadata accessor for CRLBoardIdentifier);
    uint64_t v48 = UUID.uuidString.getter();
    uint64_t v49 = v21;
    swift_bridgeObjectRetain();
    v22._countAndFlagsBits = 58;
    v22._object = (void *)0xE100000000000000;
    String.append(_:)(v22);
    swift_bridgeObjectRelease();
    uint64_t v24 = v48;
    uint64_t v23 = v49;
    long long v25 = (uint64_t *)(v20 + *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20));
    uint64_t v26 = *v25;
    uint64_t v27 = (void *)v25[1];
    uint64_t v48 = v24;
    uint64_t v49 = v23;
    swift_bridgeObjectRetain();
    v28._countAndFlagsBits = v26;
    v28._object = v27;
    String.append(_:)(v28);
    swift_bridgeObjectRelease();
    uint64_t v29 = v48;
    uint64_t v30 = v49;
    sub_100B00348(v20, type metadata accessor for CRLBoardIdentifier);
    uint64_t v10 = v50;
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      uint64_t result = sub_1006BB504(0, *((void *)v10 + 2) + 1, 1);
      uint64_t v10 = v50;
    }
    unint64_t v32 = *((void *)v10 + 2);
    unint64_t v31 = *((void *)v10 + 3);
    if (v32 >= v31 >> 1)
    {
      uint64_t result = sub_1006BB504(v31 > 1, v32 + 1, 1);
      uint64_t v10 = v50;
    }
    *((void *)v10 + 2) = v32 + 1;
    id v33 = &v10[2 * v32];
    *((void *)v33 + 4) = v29;
    *((void *)v33 + 5) = v30;
    a1 = v44;
    int64_t v16 = 1 << *(unsigned char *)(v44 + 32);
    if (v13 >= v16) {
      goto LABEL_27;
    }
    uint64_t v15 = v43;
    uint64_t v34 = *(void *)(v43 + 8 * v18);
    if ((v34 & (1 << v13)) == 0) {
      goto LABEL_28;
    }
    LODWORD(v12) = v42;
    if (*(_DWORD *)(v44 + 36) != v42) {
      goto LABEL_29;
    }
    unint64_t v35 = v34 & (-2 << (v13 & 0x3F));
    if (v35)
    {
      int64_t v16 = __clz(__rbit64(v35)) | v13 & 0xFFFFFFFFFFFFFFC0;
      int64_t v17 = v41;
    }
    else
    {
      unint64_t v36 = v18 + 1;
      unint64_t v37 = (unint64_t)(v16 + 63) >> 6;
      int64_t v17 = v41;
      if (v18 + 1 < v37)
      {
        unint64_t v38 = *(void *)(v43 + 8 * v36);
        if (v38)
        {
LABEL_22:
          int64_t v16 = __clz(__rbit64(v38)) + (v36 << 6);
        }
        else
        {
          while (v37 - 2 != v18)
          {
            unint64_t v38 = *(void *)(v40 + 8 * v18++);
            if (v38)
            {
              unint64_t v36 = v18 + 1;
              goto LABEL_22;
            }
          }
        }
      }
    }
    ++v14;
    uint64_t v13 = v16;
    if (v14 == v17) {
      return (uint64_t)v10;
    }
  }
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_100AF7288()
{
  uint64_t v1 = type metadata accessor for CRLBoardIdentifier(0);
  __chkstk_darwin(v1 - 8, v2);
  uint64_t v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for CRLSpotlightManager.ChangeType(0);
  __chkstk_darwin(v5, v6);
  uint64_t v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100B009B4(v0, (uint64_t)v8, type metadata accessor for CRLSpotlightManager.ChangeType);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  sub_100B02A28((uint64_t)v8, (uint64_t)v4, type metadata accessor for CRLBoardIdentifier);
  Hasher._combine(_:)(EnumCaseMultiPayload == 1);
  type metadata accessor for UUID();
  sub_100B00300((unint64_t *)&qword_1016770E0, (void (*)(uint64_t))&type metadata accessor for UUID);
  dispatch thunk of Hashable.hash(into:)();
  type metadata accessor for CRLBoardIdentifierStorage(0);
  swift_bridgeObjectRetain();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  return sub_100B00348((uint64_t)v4, type metadata accessor for CRLBoardIdentifier);
}

Swift::Int sub_100AF745C()
{
  return Hasher._finalize()();
}

Swift::Int sub_100AF74A0()
{
  return Hasher._finalize()();
}

id sub_100AF74E0(char *a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v6 = sub_1005057FC(&qword_101672BB0);
  __chkstk_darwin(v6 - 8, v7);
  int64_t v41 = (char *)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for URL();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9, v11);
  uint64_t v13 = (char *)&v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_defaultActor_initialize();
  id v14 = objc_allocWithZone((Class)CSSearchableIndex);
  swift_retain();
  NSString v15 = String._bridgeToObjectiveC()();
  id v16 = [v14 initWithName:v15];

  v3[14] = v16;
  v3[19] = _swiftEmptyDictionarySingleton;
  type metadata accessor for CRLUnfairLock();
  uint64_t v17 = swift_allocObject();
  unint64_t v18 = (_DWORD *)swift_slowAlloc();
  *unint64_t v18 = 0;
  *(void *)(v17 + 16) = v18;
  atomic_thread_fence(memory_order_acq_rel);
  v3[20] = v17;
  *((unsigned char *)v3 + OBJC_IVAR____TtC8Freeform19CRLSpotlightManager_isIndexing) = 0;
  uint64_t v19 = OBJC_IVAR____TtC8Freeform19CRLSpotlightManager_boardChangedPublisher;
  sub_1005057FC(&qword_101691FE0);
  swift_allocObject();
  *(void *)((char *)v3 + v19) = PassthroughSubject.init()();
  *(void *)((char *)v3 + OBJC_IVAR____TtC8Freeform19CRLSpotlightManager_pendingChanges) = &_swiftEmptySetSingleton;
  uint64_t v20 = OBJC_IVAR____TtC8Freeform19CRLSpotlightManager_pendingChangesLock;
  uint64_t v21 = swift_allocObject();
  Swift::String v22 = (_DWORD *)swift_slowAlloc();
  *Swift::String v22 = 0;
  *(void *)(v21 + 16) = v22;
  atomic_thread_fence(memory_order_acq_rel);
  *(void *)((char *)v3 + v20) = v21;
  uint64_t v23 = OBJC_IVAR____TtC8Freeform19CRLSpotlightManager_didUpdateSpotlightPublisher;
  sub_1005057FC(&qword_101692068);
  swift_allocObject();
  *(void *)((char *)v3 + v23) = PassthroughSubject.init()();
  *(void *)((char *)v3 + OBJC_IVAR____TtC8Freeform19CRLSpotlightManager_subscriptionSet) = &_swiftEmptySetSingleton;
  uint64_t v24 = OBJC_IVAR____TtC8Freeform19CRLSpotlightManager_drawingIndexableContentHelper;
  *(void *)((char *)v3 + v24) = [objc_allocWithZone((Class)CRLiOSPKDrawingIndexableContentHelper) init];
  v3[15] = a1;
  v3[16] = &off_101532D48;
  long long v25 = *(void **)&a1[OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_store];
  v3[17] = v25;
  v3[18] = a2;
  id v26 = a2;
  uint64_t v27 = a1;
  id v28 = v25;
  sub_100AF796C((uint64_t)v13);
  (*(void (**)(uint64_t, char *, uint64_t))(v10 + 32))((uint64_t)v3 + OBJC_IVAR____TtC8Freeform19CRLSpotlightManager_boardIndexStateURL, v13, v9);
  swift_release();
  uint64_t v29 = (objc_class *)type metadata accessor for CRLSpotlightManager(0);
  v43.receiver = v3;
  v43.super_class = v29;
  id v30 = [super init];
  unint64_t v31 = self;
  id v32 = v30;
  if ([v31 isIndexingAvailable])
  {
    uint64_t v33 = type metadata accessor for TaskPriority();
    uint64_t v34 = (uint64_t)v41;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56))(v41, 1, 1, v33);
    unint64_t v35 = (void *)swift_allocObject();
    v35[2] = 0;
    v35[3] = 0;
    v35[4] = v32;
    id v36 = v32;
    sub_1005912D0(v34, (uint64_t)&unk_101692130, (uint64_t)v35);
    swift_release();
  }
  else
  {
    if (qword_10166FA28 != -1) {
      swift_once();
    }
    swift_beginAccess();
    id v37 = (id)static OS_os_log.crlSpotlight;
    uint64_t v38 = static os_log_type_t.default.getter();
    sub_100BAC898((uint64_t)v37, (uint64_t)&_mh_execute_header, v38, (uint64_t)"CoreSpotlight indexing not available on this device.", 52, 2, (uint64_t)_swiftEmptyArrayStorage);
  }
  return v32;
}

uint64_t sub_100AF796C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = type metadata accessor for URL();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2, v4);
  uint64_t v38 = (char *)v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6, v7);
  uint64_t v9 = (char *)v37 - v8;
  __chkstk_darwin(v10, v11);
  uint64_t v13 = (char *)v37 - v12;
  id v14 = [self defaultManager];
  sub_100B9E9B8();
  (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v13, v9, v2);
  URL._bridgeToObjectiveC()(v15);
  uint64_t v17 = v16;
  v40[0] = 0;
  unsigned int v18 = [v14 createDirectoryAtURL:v16 withIntermediateDirectories:1 attributes:0 error:v40];

  if (v18)
  {
    id v19 = v40[0];

LABEL_7:
    URL.appendingPathComponent(_:)();
    return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v13, v2);
  }
  id v20 = v40[0];
  _convertNSErrorToError(_:)();

  swift_willThrow();
  v37[1] = a1;

  if (qword_10166FA28 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v21 = (void *)static OS_os_log.crlSpotlight;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117E810;
  swift_getErrorValue();
  id v23 = v21;
  uint64_t v24 = Error.localizedDescription.getter();
  uint64_t v26 = v25;
  *(void *)(inited + 56) = &type metadata for String;
  *(void *)(inited + 64) = sub_100528BE4();
  *(void *)(inited + 32) = v24;
  *(void *)(inited + 40) = v26;
  uint64_t v27 = static os_log_type_t.error.getter();
  sub_100BAC898((uint64_t)v23, (uint64_t)&_mh_execute_header, v27, (uint64_t)"Could not get board index state URL: %@", 39, 2, inited);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  id v28 = objc_allocWithZone((Class)CRLTemporaryDirectory);
  id v39 = 0;
  id v29 = [v28 initWithError:&v39];
  id v30 = v39;
  if (v29)
  {
    unint64_t v31 = v29;
    id v39 = (id)v37[2];
    id v32 = v30;
    sub_1005057FC(&qword_101692138);
    [v31 setAssociatedLifetimeObject:_bridgeAnythingNonVerbatimToObjectiveC<A>(_:)()];
    swift_unknownObjectRelease();
    id v33 = [v31 URL];
    uint64_t v34 = v38;
    static URL._unconditionallyBridgeFromObjectiveC(_:)();

    swift_errorRelease();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v13, v2);
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v13, v34, v2);
    goto LABEL_7;
  }
  id v36 = v39;
  _convertNSErrorToError(_:)();

  swift_willThrow();
  uint64_t result = swift_unexpectedError();
  __break(1u);
  return result;
}

uint64_t sub_100AF7E08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 16) = a4;
  return _swift_task_switch(sub_100AF7E28, a4, 0);
}

uint64_t sub_100AF7E28()
{
  sub_100AFB8D4();
  sub_100AF8278();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100AF7E8C()
{
  uint64_t v1 = (id *)((char *)v0 + OBJC_IVAR____TtC8Freeform19CRLSpotlightManager_subscriptionSet);
  swift_beginAccess();
  uint64_t v2 = *v1;
  uint64_t v21 = v1;
  Swift::String v22 = v0;
  if ((*v1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    __CocoaSet.makeIterator()();
    type metadata accessor for AnyCancellable();
    sub_100B00300(&qword_101677490, (void (*)(uint64_t))&type metadata accessor for AnyCancellable);
    uint64_t result = Set.Iterator.init(_cocoa:)();
    uint64_t v2 = v24;
    uint64_t v4 = v25;
    uint64_t v5 = v26;
    uint64_t v6 = v27;
    unint64_t v7 = v28;
  }
  else
  {
    uint64_t v8 = -1 << *(unsigned char *)(v2 + 32);
    uint64_t v4 = v2 + 56;
    uint64_t v5 = ~v8;
    uint64_t v9 = -v8;
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v7 = v10 & *(void *)(v2 + 56);
    uint64_t result = swift_bridgeObjectRetain();
    uint64_t v6 = 0;
  }
  int64_t v11 = (unint64_t)(v5 + 64) >> 6;
  if (v2 < 0) {
    goto LABEL_10;
  }
  while (1)
  {
    if (v7)
    {
      uint64_t v12 = (v7 - 1) & v7;
      unint64_t v13 = __clz(__rbit64(v7)) | (v6 << 6);
      uint64_t v14 = v6;
      goto LABEL_27;
    }
    int64_t v15 = v6 + 1;
    if (__OFADD__(v6, 1)) {
      break;
    }
    if (v15 >= v11) {
      goto LABEL_30;
    }
    unint64_t v16 = *(void *)(v4 + 8 * v15);
    uint64_t v14 = v6 + 1;
    if (!v16)
    {
      uint64_t v14 = v6 + 2;
      if (v6 + 2 >= v11) {
        goto LABEL_30;
      }
      unint64_t v16 = *(void *)(v4 + 8 * v14);
      if (!v16)
      {
        uint64_t v14 = v6 + 3;
        if (v6 + 3 >= v11) {
          goto LABEL_30;
        }
        unint64_t v16 = *(void *)(v4 + 8 * v14);
        if (!v16)
        {
          uint64_t v14 = v6 + 4;
          if (v6 + 4 >= v11) {
            goto LABEL_30;
          }
          unint64_t v16 = *(void *)(v4 + 8 * v14);
          if (!v16)
          {
            uint64_t v17 = v6 + 5;
            while (v11 != v17)
            {
              unint64_t v16 = *(void *)(v4 + 8 * v17++);
              if (v16)
              {
                uint64_t v14 = v17 - 1;
                goto LABEL_26;
              }
            }
LABEL_30:
            sub_10052E1EC();
            *uint64_t v21 = &_swiftEmptySetSingleton;
            swift_bridgeObjectRelease();

            swift_unknownObjectRelease();
            swift_bridgeObjectRelease();
            swift_release();
            id v19 = (char *)v22 + OBJC_IVAR____TtC8Freeform19CRLSpotlightManager_boardIndexStateURL;
            uint64_t v20 = type metadata accessor for URL();
            (*(void (**)(char *, uint64_t))(*(void *)(v20 - 8) + 8))(v19, v20);
            swift_release();
            swift_bridgeObjectRelease();
            swift_release();
            swift_release();
            swift_bridgeObjectRelease();
            objc_release(*(id *)((char *)v22
                               + OBJC_IVAR____TtC8Freeform19CRLSpotlightManager_drawingIndexableContentHelper));
            swift_defaultActor_destroy();
            return (uint64_t)v22;
          }
        }
      }
    }
LABEL_26:
    uint64_t v12 = (v16 - 1) & v16;
    unint64_t v13 = __clz(__rbit64(v16)) + (v14 << 6);
LABEL_27:
    uint64_t v18 = *(void *)(*(void *)(v2 + 48) + 8 * v13);
    swift_retain();
    if (!v18) {
      goto LABEL_30;
    }
    while (1)
    {
      AnyCancellable.cancel()();
      uint64_t result = swift_release();
      uint64_t v6 = v14;
      unint64_t v7 = v12;
      if ((v2 & 0x8000000000000000) == 0) {
        break;
      }
LABEL_10:
      if (__CocoaSet.Iterator.next()())
      {
        type metadata accessor for AnyCancellable();
        swift_unknownObjectRetain();
        swift_dynamicCast();
        swift_unknownObjectRelease();
        uint64_t v14 = v6;
        uint64_t v12 = v7;
        if (v23) {
          continue;
        }
      }
      goto LABEL_30;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_100AF8224()
{
  sub_100AF7E8C();

  return swift_defaultActor_deallocate();
}

uint64_t sub_100AF8250()
{
  return type metadata accessor for CRLSpotlightManager(0);
}

uint64_t type metadata accessor for CRLSpotlightManager(uint64_t a1)
{
  return sub_100512D5C(a1, (uint64_t *)&unk_101691DC0);
}

void sub_100AF8278()
{
  uint64_t v1 = type metadata accessor for NSNotificationCenter.Publisher();
  uint64_t v109 = *(void *)(v1 - 8);
  uint64_t v110 = v1;
  __chkstk_darwin(v1, v2);
  id v108 = (char *)v78 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1005057FC((uint64_t *)&unk_101691F90);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v106 = v4;
  uint64_t v107 = v5;
  __chkstk_darwin(v4, v6);
  uint64_t v105 = (char *)v78 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1005057FC(&qword_101677370);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v112 = v8;
  uint64_t v113 = v9;
  __chkstk_darwin(v8, v10);
  uint64_t v111 = (void *)((char *)v78 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v12 = sub_1005057FC(&qword_101691FA0);
  __chkstk_darwin(v12 - 8, v13);
  int64_t v15 = (char *)v78 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for DispatchQoS.QoSClass();
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16, v18);
  uint64_t v20 = (char *)v78 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v80 = sub_1005057FC(&qword_101691FA8);
  uint64_t v87 = *(void (***)(void, uint64_t))(v80 - 8);
  __chkstk_darwin(v80, v21);
  v78[0] = (char *)v78 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v84 = sub_1005057FC(&qword_101691FB0);
  uint64_t v85 = *(void *)(v84 - 8);
  __chkstk_darwin(v84, v23);
  uint64_t v79 = (char *)v78 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v88 = sub_1005057FC(&qword_101691FB8);
  uint64_t v94 = *(void *)(v88 - 8);
  __chkstk_darwin(v88, v25);
  id v81 = (char *)v78 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = sub_1005057FC(&qword_101691FC0);
  uint64_t v28 = *(void *)(v27 - 8);
  uint64_t v98 = v27;
  uint64_t v99 = v28;
  __chkstk_darwin(v27, v29);
  uint64_t v82 = (char *)v78 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = sub_1005057FC(&qword_101691FC8);
  uint64_t v32 = *(void *)(v31 - 8);
  uint64_t v100 = v31;
  uint64_t v101 = v32;
  __chkstk_darwin(v31, v33);
  uint64_t v86 = (char *)v78 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = sub_1005057FC((uint64_t *)&unk_101691FD0);
  uint64_t v36 = *(void *)(v35 - 8);
  uint64_t v102 = v35;
  uint64_t v103 = v36;
  __chkstk_darwin(v35, v37);
  uint64_t v97 = (char *)v78 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v114 = *(void *)(v0 + OBJC_IVAR____TtC8Freeform19CRLSpotlightManager_boardChangedPublisher);
  uint64_t v39 = sub_10050BF48(0, (unint64_t *)&qword_1016725C0);
  (*(void (**)(char *, void, uint64_t))(v17 + 104))(v20, enum case for DispatchQoS.QoSClass.background(_:), v16);
  swift_retain();
  uint64_t v40 = v39;
  int64_t v41 = (void *)static OS_dispatch_queue.global(qos:)();
  (*(void (**)(char *, uint64_t))(v17 + 8))(v20, v16);
  id v115 = v41;
  uint64_t v42 = type metadata accessor for OS_dispatch_queue.SchedulerOptions();
  uint64_t v43 = *(void *)(v42 - 8);
  uint64_t v44 = *(void (**)(char *, uint64_t, uint64_t))(v43 + 56);
  uint64_t v45 = v43 + 56;
  uint64_t v46 = (uint64_t)v15;
  uint64_t v47 = v15;
  uint64_t v48 = v42;
  uint64_t v90 = v42;
  v44(v47, 1, 1);
  uint64_t v91 = v45;
  uint64_t v93 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v44;
  sub_1005057FC(&qword_101691FE0);
  uint64_t v104 = &protocol conformance descriptor for PassthroughSubject<A, B>;
  sub_100523288(&qword_101691FE8, &qword_101691FE0);
  uint64_t v96 = sub_10062E0F4((unint64_t *)&qword_101691FF0, (unint64_t *)&qword_1016725C0);
  Publisher.receive<A>(on:options:)();
  sub_100522F00(v46, &qword_101691FA0);

  swift_release();
  sub_1005057FC((uint64_t *)&unk_10169FCF0);
  uint64_t v49 = v111;
  uint64_t v83 = v40;
  uint64_t *v49 = static OS_dispatch_queue.main.getter();
  static OS_dispatch_queue.SchedulerTimeType.Stride.seconds(_:)();
  uint64_t v50 = v113;
  uint64_t v51 = *(void (**)(uint64_t *, void, uint64_t))(v113 + 104);
  uint64_t v89 = v113 + 104;
  uint64_t v92 = v51;
  uint64_t v52 = v112;
  v51(v49, enum case for Publishers.TimeGroupingStrategy.byTime<A>(_:), v112);
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v44)(v46, 1, 1, v48);
  sub_100523288(&qword_101692000, &qword_101691FA8);
  uint64_t v53 = v79;
  uint64_t v54 = v80;
  uint64_t v55 = v78[1];
  uint64_t v56 = v78[0];
  Publisher.collect<A>(_:options:)();
  uint64_t v57 = v46;
  sub_100522F00(v46, &qword_101691FA0);
  uint64_t v58 = *(void (**)(uint64_t *, uint64_t))(v50 + 8);
  uint64_t v113 = v50 + 8;
  uint64_t v95 = v58;
  v58(v49, v52);
  v87[1](v56, v54);
  static Subscribers.Demand.unlimited.getter();
  sub_1005057FC(&qword_101692008);
  uint64_t v87 = (void (**)(void, uint64_t))&protocol conformance descriptor for Publishers.CollectByTime<A, B>;
  sub_100523288(&qword_101692010, &qword_101691FB0);
  sub_100523288(&qword_101692018, &qword_101692008);
  uint64_t v59 = v81;
  uint64_t v60 = v84;
  Publisher<>.flatMap<A>(maxPublishers:_:)();
  (*(void (**)(char *, uint64_t))(v85 + 8))(v53, v60);
  sub_100523288(&qword_101692020, &qword_101691FB8);
  swift_retain();
  unint64_t v61 = v82;
  uint64_t v62 = v88;
  Publisher.filter(_:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v94 + 8))(v59, v62);
  swift_retain();
  static Subscribers.Demand.unlimited.getter();
  sub_1005057FC(&qword_101692028);
  sub_100523288(&qword_101692030, &qword_101691FC0);
  sub_100523288(&qword_101692038, &qword_101692028);
  uint64_t v63 = v86;
  uint64_t v64 = v98;
  Publisher<>.flatMap<A>(maxPublishers:_:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v99 + 8))(v61, v64);
  swift_retain();
  static Subscribers.Demand.unlimited.getter();
  sub_1005057FC(&qword_101692040);
  sub_100523288(&qword_101692048, &qword_101691FC8);
  sub_100523288(&qword_101692050, &qword_101692040);
  uint64_t v65 = v97;
  uint64_t v66 = v100;
  Publisher<>.flatMap<A>(maxPublishers:_:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v101 + 8))(v63, v66);
  sub_100523288(&qword_101692058, (uint64_t *)&unk_101691FD0);
  swift_retain();
  uint64_t v67 = v102;
  Publisher<>.sink(receiveValue:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v103 + 8))(v65, v67);
  swift_beginAccess();
  AnyCancellable.store(in:)();
  swift_endAccess();
  swift_release();
  sub_100AFC084();
  uint64_t v114 = *(void *)(v55 + OBJC_IVAR____TtC8Freeform19CRLSpotlightManager_didUpdateSpotlightPublisher);
  uint64_t v68 = sub_1005057FC(&qword_101692060);
  uint64_t v69 = v111;
  uint64_t v70 = *(int *)(v68 + 64);
  swift_retain();
  *uint64_t v69 = static OS_dispatch_queue.main.getter();
  static OS_dispatch_queue.SchedulerTimeType.Stride.seconds(_:)();
  *(uint64_t *)((char *)v69 + v70) = 5;
  uint64_t v71 = v112;
  v92(v69, enum case for Publishers.TimeGroupingStrategy.byTimeOrCount<A>(_:), v112);
  v93(v57, 1, 1, v90);
  sub_1005057FC(&qword_101692068);
  sub_100523288(&qword_101692070, &qword_101692068);
  id v72 = v105;
  Publisher.collect<A>(_:options:)();
  sub_100522F00(v57, &qword_101691FA0);
  v95(v69, v71);
  swift_release();
  sub_100523288((unint64_t *)&unk_101692078, (uint64_t *)&unk_101691F90);
  swift_retain();
  uint64_t v73 = v106;
  Publisher<>.sink(receiveValue:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v107 + 8))(v72, v73);
  swift_beginAccess();
  AnyCancellable.store(in:)();
  swift_endAccess();
  swift_release();
  id v74 = [self defaultCenter];
  if (qword_10166FE08 != -1) {
    swift_once();
  }
  uint64_t v75 = v108;
  NSNotificationCenter.publisher(for:object:)();
  swift_allocObject();
  swift_weakInit();
  sub_100B00300((unint64_t *)&qword_1016773D0, (void (*)(uint64_t))&type metadata accessor for NSNotificationCenter.Publisher);
  uint64_t v76 = v110;
  Publisher<>.sink(receiveValue:)();
  swift_release();
  uint64_t v77 = *(void (**)(char *, uint64_t))(v109 + 8);
  v77(v75, v76);
  swift_beginAccess();
  AnyCancellable.store(in:)();
  swift_endAccess();
  swift_release();
  if (qword_10166FE00 != -1) {
    swift_once();
  }
  NSNotificationCenter.publisher(for:object:)();
  swift_allocObject();
  swift_weakInit();
  Publisher<>.sink(receiveValue:)();
  swift_release();
  v77(v75, v76);
  swift_beginAccess();
  AnyCancellable.store(in:)();
  swift_endAccess();
  swift_release();
  if (qword_10166F7E8 != -1) {
    swift_once();
  }
  NSNotificationCenter.publisher(for:object:)();
  swift_allocObject();
  swift_weakInit();
  Publisher<>.sink(receiveValue:)();
  swift_release();
  v77(v75, v76);
  swift_beginAccess();
  AnyCancellable.store(in:)();
  swift_endAccess();
  swift_release();
  [*(id *)(v55 + 112) setIndexDelegate:v55];

  *(unsigned char *)(v55 + OBJC_IVAR____TtC8Freeform19CRLSpotlightManager_isIndexing) = 1;
}

uint64_t sub_100AF9400@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_1005057FC(&qword_101692100);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2, v4);
  uint64_t v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = swift_bridgeObjectRetain();
  sub_100C32020(v7);
  uint64_t v8 = swift_bridgeObjectRetain();
  uint64_t v9 = sub_100B01A14(v8, v8);
  swift_bridgeObjectRelease();
  uint64_t v12 = v9;
  sub_1005057FC(&qword_101692108);
  sub_100523288(&qword_101692110, &qword_101692108);
  Sequence.publisher.getter();
  swift_release();
  sub_100523288((unint64_t *)&unk_101692118, &qword_101692100);
  uint64_t v10 = Publisher.eraseToAnyPublisher()();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  *a1 = v10;
  return result;
}

BOOL sub_100AF959C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + OBJC_IVAR____TtC8Freeform19CRLSpotlightManager_pendingChangesLock);
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v4 + 16));
  uint64_t v5 = (uint64_t *)(a2 + OBJC_IVAR____TtC8Freeform19CRLSpotlightManager_pendingChanges);
  swift_beginAccess();
  uint64_t v6 = *v5;
  swift_bridgeObjectRetain();
  LOBYTE(a1) = sub_1006E72D8(a1, v6);
  swift_bridgeObjectRelease();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v4 + 16));
  return (a1 & 1) == 0;
}

uint64_t sub_100AF9638@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v27 = a3;
  uint64_t v5 = sub_1005057FC(&qword_1016920B8);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v25 = v5;
  uint64_t v26 = v6;
  __chkstk_darwin(v5, v7);
  uint64_t v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for CRLSpotlightManager.ChangeType(0);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void *)(v11 + 64);
  __chkstk_darwin(v10 - 8, v13);
  uint64_t v14 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15, v16);
  uint64_t v18 = (char *)&v25 - v17;
  uint64_t v19 = *(void *)(a2 + OBJC_IVAR____TtC8Freeform19CRLSpotlightManager_pendingChangesLock);
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v19 + 16));
  sub_100B009B4(a1, (uint64_t)v14, type metadata accessor for CRLSpotlightManager.ChangeType);
  swift_beginAccess();
  sub_100CBB68C((uint64_t)v18, (uint64_t)v14);
  sub_100B00348((uint64_t)v18, type metadata accessor for CRLSpotlightManager.ChangeType);
  swift_endAccess();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v19 + 16));
  sub_100B009B4(a1, (uint64_t)v18, type metadata accessor for CRLSpotlightManager.ChangeType);
  unint64_t v20 = (*(unsigned __int8 *)(v11 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  uint64_t v21 = swift_allocObject();
  *(void *)(v21 + 16) = a2;
  sub_100B02A28((uint64_t)v18, v21 + v20, type metadata accessor for CRLSpotlightManager.ChangeType);
  sub_1005057FC(&qword_1016920C0);
  swift_allocObject();
  swift_retain();
  uint64_t v28 = Future.init(_:)();
  type metadata accessor for CRLSpotlightManager.IndexDecision(0);
  sub_100523288(&qword_1016920C8, &qword_1016920C0);
  Publisher.compactMap<A>(_:)();
  swift_release();
  sub_100523288(&qword_1016920D0, &qword_1016920B8);
  uint64_t v22 = v25;
  uint64_t v23 = Publisher.eraseToAnyPublisher()();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v26 + 8))(v9, v22);
  *uint64_t v27 = v23;
  return result;
}

uint64_t sub_100AF9994(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for CRLSpotlightManager.ChangeType(0);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  __chkstk_darwin(v8 - 8, v11);
  uint64_t v12 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1005057FC(&qword_101672BB0);
  __chkstk_darwin(v13 - 8, v14);
  uint64_t v16 = (char *)&v24 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  static TaskPriority.background.getter();
  uint64_t v17 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v16, 0, 1, v17);
  sub_100B009B4(a4, (uint64_t)v12, type metadata accessor for CRLSpotlightManager.ChangeType);
  uint64_t v18 = sub_100B00300(&qword_1016920A0, (void (*)(uint64_t))type metadata accessor for CRLSpotlightManager);
  unint64_t v19 = (*(unsigned __int8 *)(v9 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  unint64_t v20 = (v10 + v19 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v21 = (void *)swift_allocObject();
  v21[2] = a3;
  v21[3] = v18;
  v21[4] = a3;
  sub_100B02A28((uint64_t)v12, (uint64_t)v21 + v19, type metadata accessor for CRLSpotlightManager.ChangeType);
  uint64_t v22 = (void *)((char *)v21 + v20);
  *uint64_t v22 = a1;
  v22[1] = a2;
  swift_retain_n();
  swift_retain();
  sub_1005912D0((uint64_t)v16, (uint64_t)&unk_1016920E8, (uint64_t)v21);
  return swift_release();
}

uint64_t sub_100AF9BD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[7] = a6;
  v7[8] = a7;
  void v7[5] = a4;
  void v7[6] = a5;
  v7[9] = sub_1005057FC(&qword_1016920F0);
  v7[10] = swift_task_alloc();
  type metadata accessor for CRLBoardIdentifier(0);
  v7[11] = swift_task_alloc();
  v7[12] = type metadata accessor for CRLSpotlightManager.ChangeType(0);
  v7[13] = swift_task_alloc();
  sub_1005057FC(&qword_1016920D8);
  v7[14] = swift_task_alloc();
  sub_1005057FC(&qword_1016920F8);
  v7[15] = swift_task_alloc();
  return _swift_task_switch(sub_100AF9D30, a4, 0);
}

uint64_t sub_100AF9D30()
{
  uint64_t v1 = v0[15];
  uint64_t v2 = v0[13];
  uint64_t v3 = v0[6];
  uint64_t v4 = *(void *)(v0[5] + OBJC_IVAR____TtC8Freeform19CRLSpotlightManager_pendingChangesLock);
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v4 + 16));
  swift_beginAccess();
  sub_100D1815C(v3, v1);
  sub_100522F00(v1, &qword_1016920F8);
  swift_endAccess();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v4 + 16));
  sub_100B009B4(v3, v2, type metadata accessor for CRLSpotlightManager.ChangeType);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_100B02A28(v0[13], v0[14], type metadata accessor for CRLBoardIdentifier);
    uint64_t v5 = type metadata accessor for CRLSpotlightManager.IndexDecision(0);
    swift_storeEnumTagMultiPayload();
    uint64_t v6 = v0[14];
    uint64_t v7 = v0[10];
    uint64_t v8 = (void (*)(uint64_t))v0[7];
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v6, 0, 1, v5);
    sub_100B03428(v6, v7);
    swift_storeEnumTagMultiPayload();
    v8(v7);
    sub_100522F00(v7, &qword_1016920F0);
    sub_100522F00(v6, &qword_1016920D8);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v9 = (uint64_t (*)(void))v0[1];
    return v9();
  }
  else
  {
    sub_100B02A28(v0[13], v0[11], type metadata accessor for CRLBoardIdentifier);
    uint64_t v11 = (void *)swift_task_alloc();
    v0[16] = v11;
    *uint64_t v11 = v0;
    v11[1] = sub_100AF9FE4;
    uint64_t v12 = v0[11];
    return sub_100AFE020(v12);
  }
}

uint64_t sub_100AF9FE4(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(*v2 + 136) = a1;
  swift_task_dealloc();
  uint64_t v4 = *(void *)(v3 + 40);
  if (v1)
  {
    swift_errorRelease();
    uint64_t v5 = sub_100AFA6A4;
  }
  else
  {
    uint64_t v5 = sub_100AFA124;
  }
  return _swift_task_switch(v5, v4, 0);
}

uint64_t sub_100AFA124()
{
  uint64_t v1 = (void *)v0[17];
  if (v1)
  {
    id v2 = [v1 attributeSet];
    v0[18] = v2;
    id v3 = [v2 title];
    if (v3)
    {
      uint64_t v4 = v3;
      uint64_t v5 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v7 = v6;
    }
    else
    {
      uint64_t v5 = 0;
      uint64_t v7 = 0xE000000000000000;
    }
    v0[19] = v7;
    uint64_t v14 = (void *)swift_task_alloc();
    v0[20] = v14;
    void *v14 = v0;
    v14[1] = sub_100AFA354;
    uint64_t v15 = v0[11];
    return sub_100AFF22C(v15, v5, v7);
  }
  else
  {
    sub_100B00348(v0[11], type metadata accessor for CRLBoardIdentifier);
    uint64_t v8 = type metadata accessor for CRLSpotlightManager.IndexDecision(0);
    uint64_t v9 = v0[14];
    uint64_t v10 = v0[10];
    uint64_t v11 = (void (*)(uint64_t))v0[7];
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v9, 1, 1, v8);
    sub_100B03428(v9, v10);
    swift_storeEnumTagMultiPayload();
    v11(v10);
    sub_100522F00(v10, &qword_1016920F0);
    sub_100522F00(v9, &qword_1016920D8);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v12 = (uint64_t (*)(void))v0[1];
    return v12();
  }
}

uint64_t sub_100AFA354(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *v3;
  uint64_t v5 = *v3;
  *(void *)(v5 + 168) = a1;
  *(void *)(v5 + 176) = a2;
  swift_task_dealloc();
  uint64_t v6 = *(void *)(v4 + 40);
  if (v2)
  {
    swift_errorRelease();
    swift_bridgeObjectRelease();
    uint64_t v7 = sub_100AFA7F4;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v7 = sub_100AFA4B8;
  }
  return _swift_task_switch(v7, v6, 0);
}

uint64_t sub_100AFA4B8()
{
  unint64_t v1 = *(void *)(v0 + 176);
  if (v1 >> 60 == 15)
  {
  }
  else
  {
    uint64_t v2 = *(void *)(v0 + 168);
    id v3 = *(void **)(v0 + 144);
    Class isa = Data._bridgeToObjectiveC()().super.isa;
    [v3 setThumbnailData:isa];

    sub_100514260(v2, v1);
  }
  uint64_t v5 = *(void *)(v0 + 136);
  uint64_t v6 = *(void *)(v0 + 112);
  uint64_t v7 = *(void *)(v0 + 88);
  uint64_t v8 = *(int *)(sub_1005057FC((uint64_t *)&unk_101691F40) + 48);
  sub_100B02A28(v7, v6, type metadata accessor for CRLBoardIdentifier);
  *(void *)(v6 + v8) = v5;
  uint64_t v9 = type metadata accessor for CRLSpotlightManager.IndexDecision(0);
  swift_storeEnumTagMultiPayload();
  uint64_t v10 = *(void *)(v0 + 112);
  uint64_t v11 = *(void *)(v0 + 80);
  uint64_t v12 = *(void (**)(uint64_t))(v0 + 56);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v10, 0, 1, v9);
  sub_100B03428(v10, v11);
  swift_storeEnumTagMultiPayload();
  v12(v11);
  sub_100522F00(v11, &qword_1016920F0);
  sub_100522F00(v10, &qword_1016920D8);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v13 = *(uint64_t (**)(void))(v0 + 8);
  return v13();
}

uint64_t sub_100AFA6A4()
{
  sub_100B00348(v0[11], type metadata accessor for CRLBoardIdentifier);
  uint64_t v1 = type metadata accessor for CRLSpotlightManager.IndexDecision(0);
  uint64_t v2 = v0[14];
  uint64_t v3 = v0[10];
  uint64_t v4 = (void (*)(uint64_t))v0[7];
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v1 - 8) + 56))(v2, 1, 1, v1);
  sub_100B03428(v2, v3);
  swift_storeEnumTagMultiPayload();
  v4(v3);
  sub_100522F00(v3, &qword_1016920F0);
  sub_100522F00(v2, &qword_1016920D8);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

uint64_t sub_100AFA7F4()
{
  uint64_t v1 = *(void *)(v0 + 136);
  uint64_t v2 = *(void *)(v0 + 112);
  uint64_t v3 = *(void *)(v0 + 88);
  uint64_t v4 = *(int *)(sub_1005057FC((uint64_t *)&unk_101691F40) + 48);
  sub_100B02A28(v3, v2, type metadata accessor for CRLBoardIdentifier);
  *(void *)(v2 + v4) = v1;
  uint64_t v5 = type metadata accessor for CRLSpotlightManager.IndexDecision(0);
  swift_storeEnumTagMultiPayload();
  uint64_t v6 = *(void *)(v0 + 112);
  uint64_t v7 = *(void *)(v0 + 80);
  uint64_t v8 = *(void (**)(uint64_t))(v0 + 56);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v6, 0, 1, v5);
  sub_100B03428(v6, v7);
  swift_storeEnumTagMultiPayload();
  v8(v7);
  sub_100522F00(v7, &qword_1016920F0);
  sub_100522F00(v6, &qword_1016920D8);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v9 = *(uint64_t (**)(void))(v0 + 8);
  return v9();
}

uint64_t sub_100AFA98C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100B03428(a1, a2);
}

uint64_t sub_100AFA994@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6 = type metadata accessor for CRLSpotlightManager.IndexDecision(0);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  __chkstk_darwin(v6 - 8, v9);
  sub_100B009B4(a1, (uint64_t)v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for CRLSpotlightManager.IndexDecision);
  unint64_t v10 = (*(unsigned __int8 *)(v7 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = a2;
  sub_100B02A28((uint64_t)v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v11 + v10, type metadata accessor for CRLSpotlightManager.IndexDecision);
  sub_1005057FC(&qword_101692088);
  swift_allocObject();
  swift_retain();
  v14[1] = Future.init(_:)();
  sub_100523288(&qword_101692090, &qword_101692088);
  uint64_t v12 = Publisher.eraseToAnyPublisher()();
  uint64_t result = swift_release();
  *a3 = v12;
  return result;
}

uint64_t sub_100AFAB44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for CRLSpotlightManager.IndexDecision(0);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  __chkstk_darwin(v8 - 8, v11);
  uint64_t v12 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1005057FC(&qword_101672BB0);
  __chkstk_darwin(v13 - 8, v14);
  uint64_t v16 = (char *)&v24 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v16, 1, 1, v17);
  sub_100B009B4(a4, (uint64_t)v12, type metadata accessor for CRLSpotlightManager.IndexDecision);
  uint64_t v18 = sub_100B00300(&qword_1016920A0, (void (*)(uint64_t))type metadata accessor for CRLSpotlightManager);
  unint64_t v19 = (*(unsigned __int8 *)(v9 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  unint64_t v20 = (v10 + v19 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v21 = (void *)swift_allocObject();
  v21[2] = a3;
  v21[3] = v18;
  v21[4] = a3;
  sub_100B02A28((uint64_t)v12, (uint64_t)v21 + v19, type metadata accessor for CRLSpotlightManager.IndexDecision);
  uint64_t v22 = (void *)((char *)v21 + v20);
  *uint64_t v22 = a1;
  v22[1] = a2;
  swift_retain_n();
  swift_retain();
  sub_1005912D0((uint64_t)v16, (uint64_t)&unk_1016920A8, (uint64_t)v21);
  return swift_release();
}

uint64_t sub_100AFAD7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _OWORD v7[3] = a6;
  _OWORD v7[4] = a7;
  _OWORD v7[2] = a4;
  void v7[5] = sub_1005057FC(&qword_1016920B0);
  void v7[6] = swift_task_alloc();
  type metadata accessor for CRLBoardIdentifier(0);
  uint64_t v9 = swift_task_alloc();
  v7[7] = v9;
  uint64_t v10 = (void *)swift_task_alloc();
  v7[8] = v10;
  void *v10 = v7;
  v10[1] = sub_100AFAE90;
  return sub_100AFCA98(v9, a5);
}

uint64_t sub_100AFAE90()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 16);
  swift_task_dealloc();
  return _swift_task_switch(sub_100AFAFA0, v1, 0);
}

uint64_t sub_100AFAFA0()
{
  uint64_t v2 = v0[6];
  uint64_t v1 = v0[7];
  uint64_t v3 = (void (*)(uint64_t))v0[3];
  sub_100B009B4(v1, v2, type metadata accessor for CRLBoardIdentifier);
  swift_storeEnumTagMultiPayload();
  v3(v2);
  sub_100522F00(v2, &qword_1016920B0);
  sub_100B00348(v1, type metadata accessor for CRLBoardIdentifier);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_100AFB08C()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v1 = Notification.userInfo.getter();
    if (v1)
    {
      uint64_t v2 = v1;
      AnyHashable.init<A>(_:)();
      if (*(void *)(v2 + 16) && (unint64_t v3 = sub_10095647C((uint64_t)v6), (v4 & 1) != 0))
      {
        sub_100522D7C(*(void *)(v2 + 56) + 32 * v3, (uint64_t)&v7);
      }
      else
      {
        long long v7 = 0u;
        long long v8 = 0u;
      }
      swift_bridgeObjectRelease();
      sub_10050BFE0((uint64_t)v6);
      if (*((void *)&v8 + 1))
      {
        sub_1005057FC(&qword_101677400);
        if (swift_dynamicCast())
        {
          uint64_t v5 = sub_100B0106C(v6[0], (uint64_t)&_swiftEmptySetSingleton);
          swift_bridgeObjectRelease();
          v6[0] = v5;
          PassthroughSubject.send(_:)();
          swift_release();
          return swift_bridgeObjectRelease();
        }
        goto LABEL_12;
      }
    }
    else
    {
      long long v7 = 0u;
      long long v8 = 0u;
    }
    sub_100522F00((uint64_t)&v7, &qword_101672BF0);
LABEL_12:
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"startIndexing()", 15, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Spotlight/CRLSpotlightManager.swift", 89, 2, 224, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"startIndexing()", 15, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Spotlight/CRLSpotlightManager.swift", 89, 2, 224);
    return swift_release();
  }
  return result;
}

uint64_t sub_100AFB2A4()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (!result) {
    return result;
  }
  uint64_t v1 = Notification.userInfo.getter();
  if (!v1)
  {
    long long v7 = 0u;
    long long v8 = 0u;
LABEL_12:
    swift_release();
    return sub_100522F00((uint64_t)&v7, &qword_101672BF0);
  }
  uint64_t v2 = v1;
  AnyHashable.init<A>(_:)();
  if (*(void *)(v2 + 16) && (unint64_t v3 = sub_10095647C((uint64_t)v6), (v4 & 1) != 0))
  {
    sub_100522D7C(*(void *)(v2 + 56) + 32 * v3, (uint64_t)&v7);
  }
  else
  {
    long long v7 = 0u;
    long long v8 = 0u;
  }
  swift_bridgeObjectRelease();
  sub_10050BFE0((uint64_t)v6);
  if (!*((void *)&v8 + 1)) {
    goto LABEL_12;
  }
  sub_1005057FC(&qword_101677400);
  if (swift_dynamicCast())
  {
    uint64_t v5 = sub_100B0106C((uint64_t)&_swiftEmptySetSingleton, v6[0]);
    swift_bridgeObjectRelease();
    if (*(void *)(v5 + 16))
    {
      v6[0] = v5;
      PassthroughSubject.send(_:)();
      swift_release();
      return swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
  }
  return swift_release();
}

uint64_t sub_100AFB440()
{
  uint64_t v0 = sub_1005057FC(&qword_101672C30);
  __chkstk_darwin(v0 - 8, v1);
  unint64_t v3 = (char *)v23 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4, v5);
  long long v7 = (char *)v23 - v6;
  uint64_t v8 = type metadata accessor for CRLBoardIdentifier(0);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8, v10);
  uint64_t v12 = (char *)v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v14 = Notification.userInfo.getter();
    if (v14)
    {
      uint64_t v15 = v14;
      v23[1] = 0xD000000000000033;
      v23[2] = 0x800000010126C1C0;
      AnyHashable.init<A>(_:)();
      if (*(void *)(v15 + 16) && (unint64_t v16 = sub_10095647C((uint64_t)v24), (v17 & 1) != 0))
      {
        sub_100522D7C(*(void *)(v15 + 56) + 32 * v16, (uint64_t)&v25);
      }
      else
      {
        long long v25 = 0u;
        long long v26 = 0u;
      }
      swift_bridgeObjectRelease();
      sub_10050BFE0((uint64_t)v24);
      if (*((void *)&v26 + 1))
      {
        int v18 = swift_dynamicCast();
        (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v3, v18 ^ 1u, 1, v8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v3, 1, v8) != 1)
        {
LABEL_13:
          sub_10051B3EC((uint64_t)v3, (uint64_t)v7, &qword_101672C30);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
          {
            swift_release();
            return sub_100522F00((uint64_t)v7, &qword_101672C30);
          }
          else
          {
            sub_100B02A28((uint64_t)v7, (uint64_t)v12, type metadata accessor for CRLBoardIdentifier);
            sub_1005057FC(&qword_10167ADD0);
            unint64_t v19 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
            uint64_t v20 = swift_allocObject();
            *(_OWORD *)(v20 + 16) = xmmword_10117E810;
            sub_100B009B4((uint64_t)v12, v20 + v19, type metadata accessor for CRLBoardIdentifier);
            uint64_t v21 = sub_1005087BC(v20);
            swift_setDeallocating();
            swift_arrayDestroy();
            swift_deallocClassInstance();
            uint64_t v22 = sub_100B0106C((uint64_t)v21, (uint64_t)&_swiftEmptySetSingleton);
            swift_bridgeObjectRelease();
            v24[0] = v22;
            PassthroughSubject.send(_:)();
            sub_100B00348((uint64_t)v12, type metadata accessor for CRLBoardIdentifier);
            swift_release();
            return swift_bridgeObjectRelease();
          }
        }
LABEL_12:
        sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"startIndexing()", 15, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Spotlight/CRLSpotlightManager.swift", 89, 2, 251, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
        sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"startIndexing()", 15, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Spotlight/CRLSpotlightManager.swift", 89, 2, 251);
        goto LABEL_13;
      }
    }
    else
    {
      long long v25 = 0u;
      long long v26 = 0u;
    }
    sub_100522F00((uint64_t)&v25, &qword_101672BF0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v3, 1, 1, v8);
    goto LABEL_12;
  }
  return result;
}

uint64_t sub_100AFB8D4()
{
  uint64_t v1 = type metadata accessor for URL();
  __n128 v3 = __chkstk_darwin(v1, v2);
  uint64_t v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = v0;
  uint64_t v25 = v7;
  uint64_t v26 = v6;
  (*(void (**)(char *, uint64_t, __n128))(v7 + 16))(v5, v0 + OBJC_IVAR____TtC8Freeform19CRLSpotlightManager_boardIndexStateURL, v3);
  if (qword_10166FA28 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v8 = (void *)static OS_os_log.crlSpotlight;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117E810;
  id v10 = v8;
  uint64_t v11 = URL.absoluteString.getter();
  uint64_t v13 = v12;
  *(void *)(inited + 56) = &type metadata for String;
  *(void *)(inited + 64) = sub_100528BE4();
  *(void *)(inited + 32) = v11;
  *(void *)(inited + 40) = v13;
  uint64_t v14 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v10, (uint64_t)&_mh_execute_header, v14, (uint64_t)"Loading Spotlight state from %@", 31, 2, inited);
  swift_setDeallocating();
  uint64_t v24 = sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  uint64_t v15 = Data.init(contentsOf:options:)();
  unint64_t v17 = v16;
  os_unfair_lock_t v22 = *(os_unfair_lock_t *)(*(void *)(v23 + 160) + 16);
  os_unfair_lock_lock(v22);
  type metadata accessor for PropertyListDecoder();
  swift_allocObject();
  PropertyListDecoder.init()();
  sub_1005057FC(&qword_101691F68);
  sub_100B02CF4();
  dispatch thunk of PropertyListDecoder.decode<A>(_:from:)();
  swift_release();
  uint64_t v18 = v27;
  uint64_t v19 = v23;
  swift_beginAccess();
  *(void *)(v19 + 152) = v18;
  swift_bridgeObjectRelease();
  os_unfair_lock_unlock(v22);
  (*(void (**)(char *, uint64_t))(v25 + 8))(v5, v26);
  return sub_100510084(v15, v17);
}

uint64_t sub_100AFBCA8()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for URL();
  __n128 v4 = __chkstk_darwin(v2, v3);
  uint64_t v6 = (char *)v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = v8;
  uint64_t v23 = v7;
  (*(void (**)(char *, uint64_t, __n128))(v8 + 16))(v6, v0 + OBJC_IVAR____TtC8Freeform19CRLSpotlightManager_boardIndexStateURL, v4);
  if (qword_10166FA28 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v9 = (void *)static OS_os_log.crlSpotlight;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117E810;
  id v11 = v9;
  uint64_t v12 = URL.absoluteString.getter();
  uint64_t v14 = v13;
  *(void *)(inited + 56) = &type metadata for String;
  *(void *)(inited + 64) = sub_100528BE4();
  *(void *)(inited + 32) = v12;
  *(void *)(inited + 40) = v14;
  uint64_t v15 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v11, (uint64_t)&_mh_execute_header, v15, (uint64_t)"Saving Spotlight state to %@", 28, 2, inited);
  swift_setDeallocating();
  v21[1] = sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  unint64_t v16 = *(os_unfair_lock_s **)(*(void *)(v1 + 160) + 16);
  os_unfair_lock_lock(v16);
  type metadata accessor for PropertyListEncoder();
  swift_allocObject();
  PropertyListEncoder.init()();
  swift_beginAccess();
  uint64_t v24 = *(void *)(v1 + 152);
  swift_bridgeObjectRetain();
  sub_1005057FC(&qword_101691F68);
  sub_100B02C18();
  uint64_t v17 = dispatch thunk of PropertyListEncoder.encode<A>(_:)();
  unint64_t v19 = v18;
  swift_bridgeObjectRelease();
  swift_release();
  os_unfair_lock_unlock(v16);
  Data.write(to:options:)();
  (*(void (**)(char *, uint64_t))(v22 + 8))(v6, v23);
  return sub_100510084(v17, v19);
}

uint64_t sub_100AFC084()
{
  sub_1005057FC(&qword_101691F60);
  OS_dispatch_queue.sync<A>(execute:)();
  sub_100AFC248(v1);
  return swift_bridgeObjectRelease();
}

uint64_t sub_100AFC248(double *a1)
{
  uint64_t v3 = type metadata accessor for CRLBoardIdentifier(0);
  uint64_t v87 = *(void *)(v3 - 8);
  __chkstk_darwin(v3 - 8, v4);
  uint64_t v86 = (uint64_t)&v74 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6, v7);
  uint64_t v85 = (uint64_t)&v74 - v8;
  swift_beginAccess();
  uint64_t v80 = v1;
  unint64_t v9 = *(void *)(v1 + 152);
  swift_bridgeObjectRetain_n();
  uint64_t v10 = sub_100C31858(v9);
  uint64_t v11 = swift_bridgeObjectRetain();
  uint64_t v12 = (char *)sub_10102D150(v11, v10);
  swift_bridgeObjectRelease();
  if (qword_10166FA28 != -1) {
    goto LABEL_35;
  }
  while (1)
  {
    swift_beginAccess();
    uint64_t v13 = (void *)static OS_os_log.crlSpotlight;
    uint64_t v14 = sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t inited = swift_initStackObject();
    long long v82 = xmmword_10117E810;
    uint64_t v81 = inited;
    *(_OWORD *)(inited + 16) = xmmword_10117E810;
    int64_t v16 = *((void *)v12 + 2);
    uint64_t v84 = v12;
    if (v16)
    {
      unint64_t v77 = v14;
      unint64_t v78 = v9;
      uint64_t v79 = a1;
      uint64_t v88 = _swiftEmptyArrayStorage;
      uint64_t v76 = v13;
      id v17 = v13;
      sub_1006BB504(0, v16, 0);
      uint64_t v18 = sub_100F27B7C(v12);
      uint64_t v20 = v19;
      char v22 = v21 & 1;
      uint64_t v83 = v12 + 56;
      while ((v18 & 0x8000000000000000) == 0 && v18 < 1 << v12[32])
      {
        if (((*(void *)&v83[((unint64_t)v18 >> 3) & 0x1FFFFFFFFFFFFFF8] >> v18) & 1) == 0) {
          goto LABEL_30;
        }
        if (*((_DWORD *)v12 + 9) != v20) {
          goto LABEL_31;
        }
        uint64_t v23 = v85;
        sub_100B009B4(*((void *)v12 + 6) + *(void *)(v87 + 72) * v18, v85, type metadata accessor for CRLBoardIdentifier);
        uint64_t v24 = v23;
        uint64_t v25 = v86;
        sub_100B02A28(v24, v86, type metadata accessor for CRLBoardIdentifier);
        a1 = (double *)UUID.uuidString.getter();
        uint64_t v27 = v26;
        sub_100B00348(v25, type metadata accessor for CRLBoardIdentifier);
        uint64_t v28 = v88;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1006BB504(0, *((void *)v28 + 2) + 1, 1);
          uint64_t v28 = v88;
        }
        unint64_t v9 = *((void *)v28 + 2);
        unint64_t v29 = *((void *)v28 + 3);
        if (v9 >= v29 >> 1)
        {
          sub_1006BB504(v29 > 1, v9 + 1, 1);
          uint64_t v28 = v88;
        }
        *((void *)v28 + 2) = v9 + 1;
        uint64_t v30 = &v28[2 * v9];
        *((void *)v30 + 4) = a1;
        *((void *)v30 + 5) = v27;
        uint64_t v12 = v84;
        uint64_t v31 = sub_100666C8C(v18, v20, v22 & 1, v84);
        uint64_t v18 = v31;
        uint64_t v20 = v32;
        char v22 = v33 & 1;
        if (!--v16)
        {
          sub_10056A4C4(v31, v32, v33 & 1);
          a1 = v79;
          unint64_t v9 = v78;
          uint64_t v34 = v76;
          goto LABEL_15;
        }
      }
      __break(1u);
LABEL_30:
      __break(1u);
LABEL_31:
      __break(1u);
      goto LABEL_32;
    }
    id v35 = v13;
    uint64_t v28 = _swiftEmptyArrayStorage;
    uint64_t v34 = v13;
LABEL_15:
    uint64_t v36 = (void *)v81;
    uint64_t v83 = (char *)(v81 + 32);
    uint64_t v88 = v28;
    uint64_t v37 = sub_1005057FC((uint64_t *)&unk_1016773F0);
    uint64_t v38 = sub_100523288((unint64_t *)&qword_101672620, (uint64_t *)&unk_1016773F0);
    uint64_t v79 = (double *)v37;
    unint64_t v78 = v38;
    uint64_t v39 = BidirectionalCollection<>.joined(separator:)();
    uint64_t v41 = v40;
    swift_bridgeObjectRelease();
    uint64_t v12 = (char *)&type metadata for String;
    v36[7] = &type metadata for String;
    unint64_t v42 = sub_100528BE4();
    v36[8] = v42;
    void v36[4] = v39;
    v36[5] = v41;
    uint64_t v43 = static os_log_type_t.default.getter();
    sub_100BAC898((uint64_t)v34, (uint64_t)&_mh_execute_header, v43, (uint64_t)"DELETED BOARDS [%{public}@]", 27, 2, (uint64_t)v36);
    swift_setDeallocating();
    uint64_t v81 = sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();

    uint64_t v44 = swift_bridgeObjectRetain();
    sub_100B00A1C(v44, v9, (uint64_t)a1);
    uint64_t v46 = v45;
    swift_bridgeObjectRelease();
    unint64_t v9 = sub_100CDDF48(v46);
    swift_bridgeObjectRelease();
    uint64_t v47 = (void *)static OS_os_log.crlSpotlight;
    uint64_t v48 = swift_initStackObject();
    uint64_t v49 = (void *)v48;
    *(_OWORD *)(v48 + 16) = v82;
    int64_t v50 = *(void *)(v9 + 16);
    if (!v50) {
      break;
    }
    uint64_t v75 = (void *)v48;
    unint64_t v77 = v42;
    uint64_t v88 = _swiftEmptyArrayStorage;
    uint64_t v76 = v47;
    id v51 = v47;
    sub_1006BB504(0, v50, 0);
    uint64_t v52 = sub_100F27B7C(v9);
    uint64_t v54 = v53;
    char v56 = v55 & 1;
    uint64_t v83 = (char *)(v9 + 56);
    *(void *)&long long v82 = v9;
    while ((v52 & 0x8000000000000000) == 0 && v52 < 1 << *(unsigned char *)(v9 + 32))
    {
      if (((*(void *)&v83[((unint64_t)v52 >> 3) & 0x1FFFFFFFFFFFFFF8] >> v52) & 1) == 0) {
        goto LABEL_33;
      }
      if (*(_DWORD *)(v9 + 36) != v54) {
        goto LABEL_34;
      }
      uint64_t v57 = v85;
      sub_100B009B4(*(void *)(v9 + 48) + *(void *)(v87 + 72) * v52, v85, type metadata accessor for CRLBoardIdentifier);
      uint64_t v58 = v86;
      sub_100B02A28(v57, v86, type metadata accessor for CRLBoardIdentifier);
      uint64_t v12 = (char *)UUID.uuidString.getter();
      uint64_t v60 = v59;
      sub_100B00348(v58, type metadata accessor for CRLBoardIdentifier);
      a1 = v88;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1006BB504(0, *((void *)a1 + 2) + 1, 1);
        a1 = v88;
      }
      unint64_t v62 = *((void *)a1 + 2);
      unint64_t v61 = *((void *)a1 + 3);
      if (v62 >= v61 >> 1)
      {
        sub_1006BB504(v61 > 1, v62 + 1, 1);
        a1 = v88;
      }
      *((void *)a1 + 2) = v62 + 1;
      uint64_t v63 = &a1[2 * v62];
      *((void *)v63 + 4) = v12;
      *((void *)v63 + 5) = v60;
      unint64_t v9 = v82;
      uint64_t v64 = sub_100666C8C(v52, v54, v56 & 1, v82);
      uint64_t v52 = v64;
      uint64_t v54 = v65;
      char v56 = v66 & 1;
      if (!--v50)
      {
        sub_10056A4C4(v64, v65, v66 & 1);
        unint64_t v42 = v77;
        uint64_t v47 = v76;
        uint64_t v49 = v75;
        goto LABEL_28;
      }
    }
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    swift_once();
  }
  id v67 = v47;
  a1 = _swiftEmptyArrayStorage;
LABEL_28:
  uint64_t v88 = a1;
  uint64_t v68 = BidirectionalCollection<>.joined(separator:)();
  uint64_t v70 = v69;
  swift_bridgeObjectRelease();
  v49[7] = &type metadata for String;
  v49[8] = v42;
  v49[4] = v68;
  v49[5] = v70;
  uint64_t v71 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v47, (uint64_t)&_mh_execute_header, v71, (uint64_t)"CHANGED BOARDS [%{public}@]", 27, 2, (uint64_t)v49);
  swift_setDeallocating();
  swift_arrayDestroy();

  uint64_t v72 = sub_100B0106C(v9, (uint64_t)v84);
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v88 = (double *)v72;
  PassthroughSubject.send(_:)();
  return swift_bridgeObjectRelease();
}

uint64_t sub_100AFCA98(uint64_t a1, uint64_t a2)
{
  v3[60] = a2;
  v3[61] = v2;
  v3[59] = a1;
  sub_1005057FC(&qword_101672EB0);
  v3[62] = swift_task_alloc();
  type metadata accessor for CRLBoardIdentifier(0);
  v3[63] = swift_task_alloc();
  unsigned char v3[64] = swift_task_alloc();
  v3[65] = swift_task_alloc();
  v3[66] = type metadata accessor for CRLSpotlightManager.IndexDecision(0);
  v3[67] = swift_task_alloc();
  return _swift_task_switch(sub_100AFCBA8, v2, 0);
}

uint64_t sub_100AFCBA8()
{
  sub_100B009B4(*(void *)(v0 + 480), *(void *)(v0 + 536), type metadata accessor for CRLSpotlightManager.IndexDecision);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v2 = *(void *)(v0 + 536);
  uint64_t v3 = *(void *)(v0 + 472);
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v4 = *(void *)(v0 + 512);
    sub_100B02A28(*(void *)(v0 + 536), v4, type metadata accessor for CRLBoardIdentifier);
    sub_100B009B4(v4, v3, type metadata accessor for CRLBoardIdentifier);
    if (qword_10166FA28 != -1) {
      swift_once();
    }
    uint64_t v5 = *(void *)(v0 + 488);
    uint64_t v6 = *(void *)(v0 + 472);
    swift_beginAccess();
    uint64_t v7 = (void *)static OS_os_log.crlSpotlight;
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_10117E810;
    id v9 = v7;
    uint64_t v34 = UUID.uuidString.getter();
    uint64_t v37 = v10;
    swift_bridgeObjectRetain();
    v11._countAndFlagsBits = 58;
    v11._object = (void *)0xE100000000000000;
    String.append(_:)(v11);
    swift_bridgeObjectRelease();
    uint64_t v12 = *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20);
    *(_DWORD *)(v0 + 632) = v12;
    uint64_t v13 = (uint64_t *)(v6 + v12);
    uint64_t v14 = *v13;
    uint64_t v15 = (void *)v13[1];
    swift_bridgeObjectRetain();
    v16._countAndFlagsBits = v14;
    v16._object = v15;
    String.append(_:)(v16);
    swift_bridgeObjectRelease();
    *(void *)(inited + 56) = &type metadata for String;
    *(void *)(inited + 64) = sub_100528BE4();
    *(void *)(inited + 32) = v34;
    *(void *)(inited + 40) = v37;
    uint64_t v17 = static os_log_type_t.default.getter();
    sub_100BAC898((uint64_t)v9, (uint64_t)&_mh_execute_header, v17, (uint64_t)"CoreSpotlight DELETE %@", 23, 2, inited);
    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();

    *(void *)(v0 + 592) = *(void *)(v5 + 112);
    sub_1005057FC((uint64_t *)&unk_101672610);
    uint64_t v18 = swift_allocObject();
    *(void *)(v0 + 600) = v18;
    *(_OWORD *)(v18 + 16) = xmmword_10117E810;
    uint64_t v35 = UUID.uuidString.getter();
    uint64_t v38 = v19;
    swift_bridgeObjectRetain();
    v20._countAndFlagsBits = 58;
    v20._object = (void *)0xE100000000000000;
    String.append(_:)(v20);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    v21._countAndFlagsBits = v14;
    v21._object = v15;
    String.append(_:)(v21);
    swift_bridgeObjectRelease();
    *(void *)(v18 + 32) = v35;
    *(void *)(v18 + 40) = v38;
    char v22 = sub_100AFD6F4;
  }
  else
  {
    uint64_t v23 = *(void *)(v0 + 520);
    uint64_t v24 = *(void **)(v2 + *(int *)(sub_1005057FC((uint64_t *)&unk_101691F40) + 48));
    *(void *)(v0 + 544) = v24;
    sub_100B02A28(v2, v23, type metadata accessor for CRLBoardIdentifier);
    sub_100B009B4(v23, v3, type metadata accessor for CRLBoardIdentifier);
    if (qword_10166FA28 != -1) {
      swift_once();
    }
    uint64_t v25 = *(void *)(v0 + 488);
    swift_beginAccess();
    uint64_t v26 = (void *)static OS_os_log.crlSpotlight;
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t v27 = swift_initStackObject();
    *(_OWORD *)(v27 + 16) = xmmword_10117E810;
    *(void *)(v27 + 56) = sub_10050BF48(0, &qword_101680050);
    *(void *)(v27 + 64) = sub_10062E0F4((unint64_t *)&unk_101691F50, &qword_101680050);
    *(void *)(v27 + 32) = v24;
    id v28 = v26;
    id v29 = v24;
    uint64_t v30 = static os_log_type_t.default.getter();
    sub_100BAC898((uint64_t)v28, (uint64_t)&_mh_execute_header, v30, (uint64_t)"CoreSpotlight INDEX %@", 22, 2, v27);
    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();

    *(void *)(v0 + 552) = *(void *)(v25 + 112);
    sub_1005057FC((uint64_t *)&unk_101676C10);
    uint64_t v31 = swift_allocObject();
    *(_OWORD *)(v31 + 16) = xmmword_101177E70;
    *(void *)(v31 + 32) = v29;
    uint64_t v36 = v31;
    specialized Array._endMutation()();
    *(void *)(v0 + 560) = v36;
    id v32 = v29;
    char v22 = sub_100AFD0A8;
  }
  return _swift_task_switch(v22, 0, 0);
}

uint64_t sub_100AFD0A8()
{
  uint64_t v1 = swift_task_alloc();
  *(void *)(v0 + 568) = v1;
  *(_OWORD *)(v1 + 16) = *(_OWORD *)(v0 + 552);
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 576) = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_100AFD198;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v2, 0, 0, 0xD00000000000001CLL, 0x8000000101271640, sub_100B02BF4, v1, (char *)&type metadata for () + 8);
}

uint64_t sub_100AFD198()
{
  *(void *)(*(void *)v1 + 584) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_100AFD438;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_100AFD2B4;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100AFD2B4()
{
  uint64_t v1 = *(void *)(v0 + 488);
  swift_bridgeObjectRelease();
  return _swift_task_switch(sub_100AFD320, v1, 0);
}

void sub_100AFD320()
{
  uint64_t v1 = *(void *)(v0 + 584);
  uint64_t v2 = *(void **)(v0 + 544);
  uint64_t v3 = *(void *)(v0 + 488);
  uint64_t v4 = *(void *)(v0 + 472);
  uint64_t v5 = *(os_unfair_lock_s **)(*(void *)(v3 + 160) + 16);
  os_unfair_lock_lock(v5);
  sub_100AFDE40(v3, v4, v2);
  os_unfair_lock_unlock(v5);
  if (!v1)
  {
    uint64_t v6 = *(void *)(v0 + 520);

    sub_100B00348(v6, type metadata accessor for CRLBoardIdentifier);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v7 = *(void (**)(void))(v0 + 8);
    v7();
  }
}

uint64_t sub_100AFD438()
{
  uint64_t v1 = *(void *)(v0 + 488);
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  return _swift_task_switch(sub_100AFD4B0, v1, 0);
}

uint64_t sub_100AFD4B0()
{
  sub_100B00348(*(void *)(v0 + 520), type metadata accessor for CRLBoardIdentifier);
  if (qword_10166FA28 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v1 = (void *)static OS_os_log.crlSpotlight;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117DF40;
  id v3 = v1;
  uint64_t v4 = UUID.uuidString.getter();
  uint64_t v6 = v5;
  *(void *)(inited + 56) = &type metadata for String;
  unint64_t v7 = sub_100528BE4();
  *(void *)(inited + 64) = v7;
  *(void *)(inited + 32) = v4;
  *(void *)(inited + 40) = v6;
  swift_getErrorValue();
  uint64_t v8 = Error.publicDescription.getter(*(void *)(v0 + 416), *(void *)(v0 + 424));
  *(void *)(inited + 96) = &type metadata for String;
  *(void *)(inited + 104) = v7;
  *(void *)(inited + 72) = v8;
  *(void *)(inited + 80) = v9;
  swift_getErrorValue();
  uint64_t v10 = Error.fullDescription.getter(*(void *)(v0 + 344));
  *(void *)(inited + 136) = &type metadata for String;
  *(void *)(inited + 144) = v7;
  *(void *)(inited + 112) = v10;
  *(void *)(inited + 120) = v11;
  uint64_t v12 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v3, (uint64_t)&_mh_execute_header, v12, (uint64_t)"Spotlight ERROR identifier:%{public}@ error: %{public}@, <%@>", 61, 2, inited);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  swift_errorRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v13 = *(uint64_t (**)(void))(v0 + 8);
  return v13();
}

uint64_t sub_100AFD6F4()
{
  uint64_t v1 = swift_task_alloc();
  *(void *)(v0 + 608) = v1;
  *(_OWORD *)(v1 + 16) = *(_OWORD *)(v0 + 592);
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 616) = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_100AFD7E0;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v2, 0, 0, 0xD00000000000002BLL, 0x80000001012715B0, sub_100B02BEC, v1, (char *)&type metadata for () + 8);
}

uint64_t sub_100AFD7E0()
{
  *(void *)(*(void *)v1 + 624) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_100AFDB8C;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_100AFD8FC;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100AFD8FC()
{
  uint64_t v1 = *(void *)(v0 + 488);
  swift_bridgeObjectRelease();
  return _swift_task_switch(sub_100AFD968, v1, 0);
}

uint64_t sub_100AFD968()
{
  uint64_t v1 = *(void *)(v0 + 504);
  uint64_t v16 = *(void *)(v0 + 512);
  uint64_t v2 = *(void *)(v0 + 488);
  uint64_t v3 = *(void *)(v0 + 496);
  uint64_t v4 = *(void *)(v0 + 472);
  uint64_t v5 = (uint64_t *)(v4 + *(int *)(v0 + 632));
  uint64_t v6 = *(void **)(v2 + OBJC_IVAR____TtC8Freeform19CRLSpotlightManager_drawingIndexableContentHelper);
  UUID.uuidString.getter();
  swift_bridgeObjectRetain();
  v7._countAndFlagsBits = 58;
  v7._object = (void *)0xE100000000000000;
  String.append(_:)(v7);
  swift_bridgeObjectRelease();
  uint64_t v9 = *v5;
  uint64_t v8 = (void *)v5[1];
  swift_bridgeObjectRetain();
  v10._countAndFlagsBits = v9;
  v10._object = v8;
  String.append(_:)(v10);
  swift_bridgeObjectRelease();
  NSString v11 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v6 removeDrawingIndexedContentsFromBoardWithIdentifierString:v11];

  uint64_t v12 = *(os_unfair_lock_s **)(*(void *)(v2 + 160) + 16);
  os_unfair_lock_lock(v12);
  sub_100B009B4(v4, v1, type metadata accessor for CRLBoardIdentifier);
  uint64_t v13 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v3, 1, 1, v13);
  swift_beginAccess();
  sub_10057EBF0(v3, v1);
  swift_endAccess();
  os_unfair_lock_unlock(v12);
  sub_100B00348(v16, type metadata accessor for CRLBoardIdentifier);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v14 = *(uint64_t (**)(void))(v0 + 8);
  return v14();
}

uint64_t sub_100AFDB8C()
{
  uint64_t v1 = *(void *)(v0 + 488);
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  return _swift_task_switch(sub_100AFDC04, v1, 0);
}

uint64_t sub_100AFDC04()
{
  sub_100B00348(v0[64], type metadata accessor for CRLBoardIdentifier);
  if (qword_10166FA28 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v1 = (void *)static OS_os_log.crlSpotlight;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117DF40;
  id v3 = v1;
  uint64_t v4 = UUID.uuidString.getter();
  uint64_t v6 = v5;
  *(void *)(inited + 56) = &type metadata for String;
  unint64_t v7 = sub_100528BE4();
  *(void *)(inited + 64) = v7;
  *(void *)(inited + 32) = v4;
  *(void *)(inited + 40) = v6;
  swift_getErrorValue();
  uint64_t v8 = Error.publicDescription.getter(v0[52], v0[53]);
  *(void *)(inited + 96) = &type metadata for String;
  *(void *)(inited + 104) = v7;
  *(void *)(inited + 72) = v8;
  *(void *)(inited + 80) = v9;
  swift_getErrorValue();
  uint64_t v10 = Error.fullDescription.getter(v0[43]);
  *(void *)(inited + 136) = &type metadata for String;
  *(void *)(inited + 144) = v7;
  *(void *)(inited + 112) = v10;
  *(void *)(inited + 120) = v11;
  uint64_t v12 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v3, (uint64_t)&_mh_execute_header, v12, (uint64_t)"Spotlight ERROR identifier:%{public}@ error: %{public}@, <%@>", 61, 2, inited);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  swift_errorRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v13 = (uint64_t (*)(void))v0[1];
  return v13();
}

uint64_t sub_100AFDE40(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5 = sub_1005057FC(&qword_101672EB0);
  __chkstk_darwin(v5 - 8, v6);
  uint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for CRLBoardIdentifier(0);
  __chkstk_darwin(v9 - 8, v10);
  uint64_t v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100B009B4(a2, (uint64_t)v12, type metadata accessor for CRLBoardIdentifier);
  id v13 = [a3 attributeSet];
  id v14 = [v13 contentModificationDate];

  if (v14)
  {
    static Date._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v15 = type metadata accessor for Date();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v8, 0, 1, v15);
  }
  else
  {
    uint64_t v16 = type metadata accessor for Date();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v8, 1, 1, v16);
  }
  swift_beginAccess();
  sub_10057EBF0((uint64_t)v8, (uint64_t)v12);
  return swift_endAccess();
}

uint64_t sub_100AFE020(uint64_t a1)
{
  v2[45] = a1;
  v2[46] = v1;
  sub_1005057FC(&qword_101691F20);
  v2[47] = swift_task_alloc();
  uint64_t v3 = type metadata accessor for CRLBoardEntity();
  v2[48] = v3;
  v2[49] = *(void *)(v3 - 8);
  v2[50] = swift_task_alloc();
  sub_1005057FC(&qword_101672EB0);
  v2[51] = swift_task_alloc();
  v2[52] = swift_task_alloc();
  v2[53] = type metadata accessor for CRLBoardCRDTData(0);
  v2[54] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for Date();
  v2[55] = v4;
  v2[56] = *(void *)(v4 - 8);
  v2[57] = swift_task_alloc();
  type metadata accessor for CRLBoardIdentifier(0);
  v2[58] = swift_task_alloc();
  return _swift_task_switch(sub_100AFE208, v1, 0);
}

uint64_t sub_100AFE208()
{
  uint64_t v1 = v0[58];
  uint64_t v2 = v0[46];
  sub_100B009B4(v0[45], v1, type metadata accessor for CRLBoardIdentifier);
  uint64_t v3 = *(void **)(v2 + 136);
  type metadata accessor for CRLBoardActor();
  uint64_t v4 = swift_allocObject();
  v0[59] = v4;
  id v5 = v3;
  swift_defaultActor_initialize();
  sub_100B02A28(v1, v4 + OBJC_IVAR____TtC8Freeform13CRLBoardActor_boardIdentifier, type metadata accessor for CRLBoardIdentifier);
  *(void *)(v4 + OBJC_IVAR____TtC8Freeform13CRLBoardActor_store) = v5;
  return _swift_task_switch(sub_100AFE2FC, v4, 0);
}

uint64_t sub_100AFE2FC()
{
  uint64_t v1 = *(void *)(v0 + 472);
  type metadata accessor for CRLImmutableBoard(0);
  uint64_t v2 = *(void *)(v1 + OBJC_IVAR____TtC8Freeform13CRLBoardActor_store);
  uint64_t v3 = v1 + OBJC_IVAR____TtC8Freeform13CRLBoardActor_boardIdentifier;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 480) = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_100AFE3C8;
  return sub_1006D9650(v2, v3, 1);
}

uint64_t sub_100AFE3C8(uint64_t a1)
{
  uint64_t v3 = *v2;
  uint64_t v4 = *v2;
  *(void *)(v4 + 488) = a1;
  *(void *)(v4 + 496) = v1;
  swift_task_dealloc();
  uint64_t v5 = *(void *)(v3 + 368);
  if (v1) {
    uint64_t v6 = sub_100AFEC28;
  }
  else {
    uint64_t v6 = sub_100AFE4FC;
  }
  return _swift_task_switch(v6, v5, 0);
}

uint64_t sub_100AFE4FC()
{
  uint64_t v1 = *(void *)(v0 + 360);
  UUID.uuidString.getter();
  swift_bridgeObjectRetain();
  v2._countAndFlagsBits = 58;
  v2._object = (void *)0xE100000000000000;
  String.append(_:)(v2);
  swift_bridgeObjectRelease();
  uint64_t v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20));
  uint64_t v4 = *v3;
  uint64_t v5 = (void *)v3[1];
  swift_bridgeObjectRetain();
  v6._countAndFlagsBits = v4;
  v6._object = v5;
  String.append(_:)(v6);
  swift_bridgeObjectRelease();
  *(void *)(v0 + 264) = &type metadata for CRLFeatureFlags;
  unint64_t v7 = sub_1005396A8();
  *(unsigned char *)(v0 + 240) = 14;
  *(void *)(v0 + 272) = v7;
  LOBYTE(v4) = isFeatureEnabled(_:)();
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v0 + 240);
  uint64_t v8 = *(void **)(v0 + 488);
  if (v4)
  {
    uint64_t v9 = *(void **)(*(void *)(v0 + 368) + OBJC_IVAR____TtC8Freeform19CRLSpotlightManager_drawingIndexableContentHelper);
    UUID.uuidString.getter();
    swift_bridgeObjectRetain();
    v10._countAndFlagsBits = 58;
    v10._object = (void *)0xE100000000000000;
    String.append(_:)(v10);
    swift_bridgeObjectRelease();
    uint64_t v11 = *v3;
    uint64_t v12 = (void *)v3[1];
    swift_bridgeObjectRetain();
    v13._countAndFlagsBits = v11;
    v13._object = v12;
    String.append(_:)(v13);
    swift_bridgeObjectRelease();
    NSString v14 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v15 = [v9 drawingIndexedContentsFromBoardWithIdentifierString:v14];

    id v16 = [v8 searchableItemAttributeSet:v15];
  }
  else
  {
    id v16 = [*(id *)(v0 + 488) searchableItemAttributeSet:0];
  }
  *(void *)(v0 + 504) = v16;
  uint64_t v17 = *(void *)(v0 + 448);
  uint64_t v18 = *(void *)(v0 + 456);
  uint64_t v20 = *(void *)(v0 + 432);
  uint64_t v19 = *(void *)(v0 + 440);
  uint64_t v21 = *(void *)(*(void *)(v0 + 488) + OBJC_IVAR____TtC8Freeform8CRLBoard_data)
      + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
  swift_beginAccess();
  sub_100B009B4(v21, v20, type metadata accessor for CRLBoardCRDTData);
  sub_1005057FC(&qword_101691F28);
  CRMaxRegister.wrappedValue.getter();
  sub_100B00348(v20, type metadata accessor for CRLBoardCRDTData);
  Date.init(timeIntervalSinceReferenceDate:)();
  Class isa = Date._bridgeToObjectiveC()().super.isa;
  unint64_t v62 = *(void (**)(uint64_t, uint64_t))(v17 + 8);
  v62(v18, v19);
  [v16 setContentModificationDate:isa];

  id v23 = objc_allocWithZone((Class)CSSearchableItem);
  id v24 = v16;
  NSString v25 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  NSString v26 = String._bridgeToObjectiveC()();
  id v27 = [v23 initWithUniqueIdentifier:v25 domainIdentifier:v26 attributeSet:v24];
  *(void *)(v0 + 512) = v27;

  if (qword_10166FA28 != -1) {
    swift_once();
  }
  swift_beginAccess();
  id v28 = (void *)static OS_os_log.crlSpotlight;
  *(void *)(v0 + 520) = sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117DF40;
  id v30 = v28;
  id v31 = [v27 uniqueIdentifier];
  uint64_t v32 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v34 = v33;

  *(void *)(inited + 56) = &type metadata for String;
  unint64_t v35 = sub_100528BE4();
  *(void *)(v0 + 528) = v35;
  *(void *)(inited + 32) = v32;
  *(void *)(inited + 64) = v35;
  *(void *)(inited + 40) = v34;
  id v36 = [v27 attributeSet];
  id v37 = [v36 contentModificationDate];

  if (v37)
  {
    static Date._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v38 = 0;
  }
  else
  {
    uint64_t v38 = 1;
  }
  uint64_t v39 = *(void *)(v0 + 440);
  uint64_t v40 = *(void *)(v0 + 448);
  uint64_t v42 = *(void *)(v0 + 408);
  uint64_t v41 = *(void *)(v0 + 416);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v40 + 56))(v42, v38, 1, v39);
  sub_10051B3EC(v42, v41, &qword_101672EB0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v40 + 48))(v41, 1, v39))
  {
    sub_100522F00(*(void *)(v0 + 416), &qword_101672EB0);
    uint64_t v43 = (uint64_t *)(inited + 72);
    *(void *)(inited + 96) = &type metadata for String;
    *(void *)(inited + 104) = v35;
LABEL_11:
    uint64_t v44 = &selRef_crl_dispatchData;
    uint64_t *v43 = 0x4E574F4E4B4E55;
    unint64_t v45 = 0xE700000000000000;
    goto LABEL_14;
  }
  uint64_t v46 = *(void *)(v0 + 456);
  uint64_t v47 = *(void *)(v0 + 440);
  uint64_t v48 = *(void *)(v0 + 416);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 + 448) + 16))(v46, v48, v47);
  sub_100522F00(v48, &qword_101672EB0);
  uint64_t v49 = Date.description.getter();
  unint64_t v45 = v50;
  v62(v46, v47);
  uint64_t v43 = (uint64_t *)(inited + 72);
  *(void *)(inited + 96) = &type metadata for String;
  *(void *)(inited + 104) = v35;
  if (!v45) {
    goto LABEL_11;
  }
  uint64_t *v43 = v49;
  uint64_t v44 = &selRef_crl_dispatchData;
LABEL_14:
  *(void *)(inited + 80) = v45;
  id v51 = [v27 v44[15]];
  id v52 = [v51 title];

  if (v52)
  {
    uint64_t v53 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v55 = v54;

    char v56 = (uint64_t *)(inited + 112);
    *(void *)(inited + 136) = &type metadata for String;
    *(void *)(inited + 144) = v35;
    if (v55)
    {
      *char v56 = v53;
      goto LABEL_19;
    }
  }
  else
  {
    char v56 = (uint64_t *)(inited + 112);
    *(void *)(inited + 136) = &type metadata for String;
    *(void *)(inited + 144) = v35;
  }
  *char v56 = 0x4E574F4E4B4E55;
  unint64_t v55 = 0xE700000000000000;
LABEL_19:
  *(void *)(inited + 120) = v55;
  uint64_t v57 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v30, (uint64_t)&_mh_execute_header, v57, (uint64_t)"Indexed UUID:%s Date:%s Title:%s", 32, 2, inited);
  swift_setDeallocating();
  *(void *)(v0 + 536) = sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  uint64_t v63 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_1016A09D0 + dword_1016A09D0);
  uint64_t v58 = (void *)swift_task_alloc();
  *(void *)(v0 + 544) = v58;
  *uint64_t v58 = v0;
  v58[1] = sub_100AFECF0;
  uint64_t v59 = *(void *)(v0 + 376);
  uint64_t v60 = *(void *)(v0 + 360);
  return v63(v59, v60);
}

uint64_t sub_100AFEC28()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100AFECF0()
{
  uint64_t v2 = *v1;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 368);
  if (v0)
  {
    swift_errorRelease();
    uint64_t v4 = sub_100AFF118;
  }
  else
  {
    uint64_t v4 = sub_100AFEE28;
  }
  return _swift_task_switch(v4, v3, 0);
}

uint64_t sub_100AFEE28()
{
  uint64_t v1 = *(void *)(v0 + 376);
  if ((*(unsigned int (**)(uint64_t, uint64_t, void))(*(void *)(v0 + 392) + 48))(v1, 1, *(void *)(v0 + 384)) == 1)
  {
    uint64_t v2 = *(void **)(v0 + 504);

    swift_release();
    sub_100522F00(v1, &qword_101691F20);
  }
  else
  {
    sub_100B02A28(v1, *(void *)(v0 + 400), (uint64_t (*)(void))type metadata accessor for CRLBoardEntity);
    sub_100B00300((unint64_t *)&unk_101691F30, (void (*)(uint64_t))type metadata accessor for CRLBoardEntity);
    CSSearchableItem.associate<A>(appEntity:priority:)();
    if (qword_10166FB50 != -1) {
      swift_once();
    }
    uint64_t v3 = *(void *)(v0 + 528);
    uint64_t v4 = *(void **)(v0 + 512);
    uint64_t v5 = *(void **)(v0 + 488);
    uint64_t v17 = *(void **)(v0 + 504);
    uint64_t v18 = *(void *)(v0 + 400);
    swift_beginAccess();
    uint64_t v6 = (void *)static OS_os_log.appIntents;
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_10117E810;
    id v8 = v6;
    id v9 = [v4 uniqueIdentifier];
    uint64_t v10 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v12 = v11;

    *(void *)(inited + 56) = &type metadata for String;
    *(void *)(inited + 64) = v3;
    *(void *)(inited + 32) = v10;
    *(void *)(inited + 40) = v12;
    uint64_t v13 = static os_log_type_t.default.getter();
    sub_100BAC898((uint64_t)v8, (uint64_t)&_mh_execute_header, v13, (uint64_t)"Associated entity with spotlight searchable item: %@", 52, 2, inited);
    swift_release();
    swift_setDeallocating();
    swift_arrayDestroy();

    sub_100B00348(v18, (uint64_t (*)(void))type metadata accessor for CRLBoardEntity);
  }
  uint64_t v14 = *(void *)(v0 + 512);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  id v15 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v15(v14);
}

uint64_t sub_100AFF118()
{
  (*(void (**)(void, uint64_t, uint64_t, void))(*(void *)(v0 + 392) + 56))(*(void *)(v0 + 376), 1, 1, *(void *)(v0 + 384));
  uint64_t v1 = *(void **)(v0 + 504);
  uint64_t v2 = *(void *)(v0 + 376);

  swift_release();
  sub_100522F00(v2, &qword_101691F20);
  uint64_t v3 = *(void *)(v0 + 512);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v4(v3);
}

uint64_t sub_100AFF22C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[31] = a3;
  v4[32] = v3;
  v4[29] = a1;
  v4[30] = a2;
  v4[33] = type metadata accessor for CRLBoardPreviewImageCache.Item(0);
  v4[34] = swift_task_alloc();
  return _swift_task_switch(sub_100AFF2C4, v3, 0);
}

uint64_t sub_100AFF2C4()
{
  uint64_t v1 = *(void **)(v0[32] + 144);
  v0[35] = v1;
  if (v1)
  {
    sub_100B009B4(v0[29], v0[34], type metadata accessor for CRLBoardIdentifier);
    swift_storeEnumTagMultiPayload();
    v1;
    uint64_t v2 = (void *)swift_task_alloc();
    v0[36] = v2;
    *uint64_t v2 = v0;
    v2[1] = sub_100AFF410;
    uint64_t v3 = v0[34];
    return sub_100618E4C(v3, 4, 0, 1, 2.0);
  }
  else
  {
    swift_task_dealloc();
    uint64_t v5 = (uint64_t (*)(void, unint64_t))v0[1];
    return v5(0, 0xF000000000000000);
  }
}

uint64_t sub_100AFF410(uint64_t a1)
{
  uint64_t v3 = *v2;
  uint64_t v4 = *v2;
  uint64_t v5 = *(void *)(*v2 + 272);
  *(void *)(v4 + 296) = a1;
  *(void *)(v4 + 304) = v1;
  swift_task_dealloc();
  sub_100B00348(v5, type metadata accessor for CRLBoardPreviewImageCache.Item);
  uint64_t v6 = *(void *)(v3 + 256);
  if (v1) {
    unint64_t v7 = sub_100AFF804;
  }
  else {
    unint64_t v7 = sub_100AFF574;
  }
  return _swift_task_switch(v7, v6, 0);
}

uint64_t sub_100AFF574()
{
  id v1 = [*(id *)(v0 + 296) PNGRepresentation];
  uint64_t v2 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v4 = v3;

  if (qword_10166FA28 != -1) {
    swift_once();
  }
  uint64_t v5 = *(void **)(v0 + 296);
  swift_beginAccess();
  uint64_t v6 = (void *)static OS_os_log.crlSpotlight;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117E800;
  id v8 = v6;
  [v5 size];
  uint64_t v10 = v9;
  *(void *)(inited + 56) = &type metadata for CGFloat;
  unint64_t v11 = sub_1009DB5B4();
  *(void *)(inited + 32) = v10;
  *(void *)(inited + 64) = v11;
  [v5 size];
  *(void *)(inited + 96) = &type metadata for CGFloat;
  *(void *)(inited + 104) = v11;
  *(void *)(inited + 72) = v12;
  uint64_t v13 = 0;
  switch(v4 >> 62)
  {
    case 1uLL:
      LODWORD(v13) = HIDWORD(v2) - v2;
      if (__OFSUB__(HIDWORD(v2), v2))
      {
        __break(1u);
LABEL_12:
        __break(1u);
        JUMPOUT(0x100AFF7F4);
      }
      uint64_t v13 = (int)v13;
LABEL_8:
      uint64_t v17 = *(void **)(v0 + 296);
      uint64_t v18 = *(void **)(v0 + 280);
      uint64_t v20 = *(void *)(v0 + 240);
      uint64_t v19 = *(void *)(v0 + 248);
      *(void *)(inited + 136) = &type metadata for Int;
      *(void *)(inited + 144) = &protocol witness table for Int;
      *(void *)(inited + 112) = v13;
      *(void *)(inited + 176) = &type metadata for String;
      *(void *)(inited + 184) = sub_100528BE4();
      *(void *)(inited + 152) = v20;
      *(void *)(inited + 160) = v19;
      swift_bridgeObjectRetain();
      uint64_t v21 = static os_log_type_t.default.getter();
      sub_100BAC898((uint64_t)v8, (uint64_t)&_mh_execute_header, v21, (uint64_t)"Created preview image %.1fx%.1f size=%d title=%@", 48, 2, inited);
      swift_setDeallocating();
      sub_1005057FC(&qword_101672B50);
      swift_arrayDestroy();

      swift_task_dealloc();
      char v22 = *(uint64_t (**)(uint64_t, unint64_t))(v0 + 8);
      return v22(v2, v4);
    case 2uLL:
      uint64_t v15 = *(void *)(v2 + 16);
      uint64_t v14 = *(void *)(v2 + 24);
      BOOL v16 = __OFSUB__(v14, v15);
      uint64_t v13 = v14 - v15;
      if (!v16) {
        goto LABEL_8;
      }
      goto LABEL_12;
    case 3uLL:
      goto LABEL_8;
    default:
      uint64_t v13 = BYTE6(v4);
      goto LABEL_8;
  }
}

uint64_t sub_100AFF804()
{
  swift_task_dealloc();
  id v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100AFF8A4()
{
  uint64_t result = type metadata accessor for URL();
  if (v1 <= 0x3F) {
    return swift_updateClassMetadata2();
  }
  return result;
}

uint64_t sub_100AFF998(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = sub_1005057FC(&qword_101672BB0);
  __chkstk_darwin(v8 - 8, v9);
  unint64_t v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10166FA28 != -1) {
    swift_once();
  }
  swift_beginAccess();
  id v12 = (id)static OS_os_log.crlSpotlight;
  uint64_t v13 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v12, (uint64_t)&_mh_execute_header, v13, (uint64_t)"REINDEX ALL", 11, 2, (uint64_t)_swiftEmptyArrayStorage);

  uint64_t v14 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v11, 1, 1, v14);
  uint64_t v15 = (void *)swift_allocObject();
  v15[2] = 0;
  v15[3] = 0;
  void v15[4] = v4;
  v15[5] = a1;
  v15[6] = a2;
  v15[7] = a3;
  swift_retain();
  id v16 = a1;
  swift_retain();
  sub_1005912D0((uint64_t)v11, (uint64_t)&unk_101691F10, (uint64_t)v15);
  return swift_release();
}

uint64_t sub_100AFFB4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[7] = a6;
  v7[8] = a7;
  void v7[6] = a4;
  return _swift_task_switch(sub_100AFFB70, a4, 0);
}

uint64_t sub_100AFFB70()
{
  unint64_t v1 = *(os_unfair_lock_s **)(*(void *)(*(void *)(v0 + 48) + 160) + 16);
  os_unfair_lock_lock(v1);
  swift_beginAccess();
  uint64_t v2 = swift_bridgeObjectRetain();
  *(void *)(v0 + 72) = sub_100AF6EEC(v2);
  swift_bridgeObjectRelease();
  os_unfair_lock_unlock(v1);
  return _swift_task_switch(sub_100AFFC3C, 0, 0);
}

uint64_t sub_100AFFC3C()
{
  sub_100B01BE0(*(void *)(v0 + 72), *(uint64_t (**)(void))(v0 + 56), *(void *)(v0 + 64));
  swift_bridgeObjectRelease();
  unint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t *sub_100AFFDF8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    swift_getEnumCaseMultiPayload();
    uint64_t v6 = type metadata accessor for UUID();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    uint64_t v7 = *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20);
    uint64_t v8 = (uint64_t *)((char *)a1 + v7);
    uint64_t v9 = (uint64_t *)((char *)a2 + v7);
    uint64_t v10 = v9[1];
    *uint64_t v8 = *v9;
    v8[1] = v10;
    swift_bridgeObjectRetain();
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_100AFFF08(uint64_t a1, uint64_t a2)
{
  swift_getEnumCaseMultiPayload();
  uint64_t v4 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  uint64_t v5 = *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20);
  uint64_t v6 = (void *)(a1 + v5);
  uint64_t v7 = (void *)(a2 + v5);
  uint64_t v8 = v7[1];
  void *v6 = *v7;
  v6[1] = v8;
  swift_bridgeObjectRetain();
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_100AFFFBC(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    sub_100B00348(a1, type metadata accessor for CRLSpotlightManager.ChangeType);
    swift_getEnumCaseMultiPayload();
    uint64_t v4 = type metadata accessor for UUID();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
    uint64_t v5 = *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20);
    uint64_t v6 = (void *)(a1 + v5);
    uint64_t v7 = (void *)(a2 + v5);
    void *v6 = *v7;
    v6[1] = v7[1];
    swift_bridgeObjectRetain();
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t type metadata accessor for CRLSpotlightManager.ChangeType(uint64_t a1)
{
  return sub_100512D5C(a1, qword_101691EB8);
}

uint64_t sub_100B000BC(uint64_t a1, uint64_t a2)
{
  swift_getEnumCaseMultiPayload();
  uint64_t v4 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
  uint64_t v5 = type metadata accessor for CRLBoardIdentifierStorage(0);
  *(_OWORD *)(a1 + *(int *)(v5 + 20)) = *(_OWORD *)(a2 + *(int *)(v5 + 20));
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_100B00164(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    sub_100B00348(a1, type metadata accessor for CRLSpotlightManager.ChangeType);
    swift_getEnumCaseMultiPayload();
    uint64_t v4 = type metadata accessor for UUID();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
    uint64_t v5 = type metadata accessor for CRLBoardIdentifierStorage(0);
    *(_OWORD *)(a1 + *(int *)(v5 + 20)) = *(_OWORD *)(a2 + *(int *)(v5 + 20));
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_100B00230()
{
  uint64_t result = type metadata accessor for CRLBoardIdentifierStorage(319);
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t sub_100B002B8()
{
  return sub_100B00300((unint64_t *)&unk_101691EF0, (void (*)(uint64_t))type metadata accessor for CRLSpotlightManager.ChangeType);
}

uint64_t sub_100B00300(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100B00348(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_100B003A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CRLBoardIdentifier(0);
  __chkstk_darwin(v4 - 8, v5);
  uint64_t v58 = (uint64_t)&v57 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7, v8);
  uint64_t v59 = (uint64_t)&v57 - v9;
  __chkstk_darwin(v10, v11);
  uint64_t v60 = (uint64_t)&v57 - v12;
  __chkstk_darwin(v13, v14);
  id v16 = (char *)&v57 - v15;
  __chkstk_darwin(v17, v18);
  uint64_t v57 = (uint64_t)&v57 - v19;
  __chkstk_darwin(v20, v21);
  id v23 = (char *)&v57 - v22;
  uint64_t v24 = type metadata accessor for CRLSpotlightManager.ChangeType(0);
  __chkstk_darwin(v24, v25);
  id v27 = (char *)&v57 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v28, v29);
  id v31 = (char *)&v57 - v30;
  uint64_t v32 = sub_1005057FC(&qword_101691F00);
  __chkstk_darwin(v32 - 8, v33);
  unint64_t v35 = (char *)&v57 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = (uint64_t)&v35[*(int *)(v36 + 56)];
  sub_100B009B4(a1, (uint64_t)v35, type metadata accessor for CRLSpotlightManager.ChangeType);
  sub_100B009B4(a2, v37, type metadata accessor for CRLSpotlightManager.ChangeType);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_100B009B4((uint64_t)v35, (uint64_t)v27, type metadata accessor for CRLSpotlightManager.ChangeType);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v38 = v60;
      sub_100B02A28(v37, v60, type metadata accessor for CRLBoardIdentifier);
      char v39 = static UUID.== infix(_:_:)();
      uint64_t v40 = v59;
      sub_100B009B4((uint64_t)v27, v59, type metadata accessor for CRLBoardIdentifier);
      uint64_t v41 = v58;
      sub_100B009B4(v38, v58, type metadata accessor for CRLBoardIdentifier);
      if (v39)
      {
        uint64_t v42 = *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20);
        uint64_t v43 = *(void *)(v40 + v42);
        uint64_t v44 = *(void *)(v40 + v42 + 8);
        unint64_t v45 = (void *)(v41 + v42);
        if (v43 == *v45 && v44 == v45[1])
        {
          sub_100B00348(v41, type metadata accessor for CRLBoardIdentifier);
          sub_100B00348(v40, type metadata accessor for CRLBoardIdentifier);
          sub_100B00348(v38, type metadata accessor for CRLBoardIdentifier);
          uint64_t v46 = (uint64_t)v27;
LABEL_12:
          sub_100B00348(v46, type metadata accessor for CRLBoardIdentifier);
LABEL_21:
          sub_100B00348((uint64_t)v35, type metadata accessor for CRLSpotlightManager.ChangeType);
          return 1;
        }
        char v54 = _stringCompareWithSmolCheck(_:_:expecting:)();
        sub_100B00348(v41, type metadata accessor for CRLBoardIdentifier);
        sub_100B00348(v40, type metadata accessor for CRLBoardIdentifier);
        sub_100B00348(v38, type metadata accessor for CRLBoardIdentifier);
        uint64_t v55 = (uint64_t)v27;
LABEL_20:
        sub_100B00348(v55, type metadata accessor for CRLBoardIdentifier);
        if (v54) {
          goto LABEL_21;
        }
        goto LABEL_22;
      }
      sub_100B00348(v41, type metadata accessor for CRLBoardIdentifier);
      sub_100B00348(v40, type metadata accessor for CRLBoardIdentifier);
      sub_100B00348(v38, type metadata accessor for CRLBoardIdentifier);
      uint64_t v53 = (uint64_t)v27;
      goto LABEL_17;
    }
    id v31 = v27;
  }
  else
  {
    sub_100B009B4((uint64_t)v35, (uint64_t)v31, type metadata accessor for CRLSpotlightManager.ChangeType);
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      sub_100B02A28(v37, (uint64_t)v23, type metadata accessor for CRLBoardIdentifier);
      char v47 = static UUID.== infix(_:_:)();
      uint64_t v48 = v57;
      sub_100B009B4((uint64_t)v31, v57, type metadata accessor for CRLBoardIdentifier);
      sub_100B009B4((uint64_t)v23, (uint64_t)v16, type metadata accessor for CRLBoardIdentifier);
      if (v47)
      {
        uint64_t v49 = *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20);
        uint64_t v50 = *(void *)(v48 + v49);
        uint64_t v51 = *(void *)(v48 + v49 + 8);
        id v52 = &v16[v49];
        if (v50 == *(void *)v52 && v51 == *((void *)v52 + 1))
        {
          sub_100B00348((uint64_t)v16, type metadata accessor for CRLBoardIdentifier);
          sub_100B00348(v48, type metadata accessor for CRLBoardIdentifier);
          sub_100B00348((uint64_t)v23, type metadata accessor for CRLBoardIdentifier);
          uint64_t v46 = (uint64_t)v31;
          goto LABEL_12;
        }
        char v54 = _stringCompareWithSmolCheck(_:_:expecting:)();
        sub_100B00348((uint64_t)v16, type metadata accessor for CRLBoardIdentifier);
        sub_100B00348(v48, type metadata accessor for CRLBoardIdentifier);
        sub_100B00348((uint64_t)v23, type metadata accessor for CRLBoardIdentifier);
        uint64_t v55 = (uint64_t)v31;
        goto LABEL_20;
      }
      sub_100B00348((uint64_t)v16, type metadata accessor for CRLBoardIdentifier);
      sub_100B00348(v48, type metadata accessor for CRLBoardIdentifier);
      sub_100B00348((uint64_t)v23, type metadata accessor for CRLBoardIdentifier);
      uint64_t v53 = (uint64_t)v31;
LABEL_17:
      sub_100B00348(v53, type metadata accessor for CRLBoardIdentifier);
LABEL_22:
      sub_100B00348((uint64_t)v35, type metadata accessor for CRLSpotlightManager.ChangeType);
      return 0;
    }
  }
  sub_100B00348((uint64_t)v31, type metadata accessor for CRLBoardIdentifier);
  sub_100522F00((uint64_t)v35, &qword_101691F00);
  return 0;
}

uint64_t sub_100B009B4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

void sub_100B00A1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1005057FC(&qword_101672EB0);
  __chkstk_darwin(v6 - 8, v7);
  uint64_t v9 = (char *)&v54 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v72 = type metadata accessor for Date();
  uint64_t v10 = *(void *)(v72 - 8);
  __chkstk_darwin(v72, v11);
  uint64_t v65 = (char *)&v54 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13, v14);
  uint64_t v71 = (char *)&v54 - v15;
  uint64_t v16 = type metadata accessor for CRLBoardIdentifier(0);
  uint64_t v69 = *(void *)(v16 - 8);
  __chkstk_darwin(v16 - 8, v17);
  uint64_t v63 = (uint64_t)&v54 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19, v20);
  uint64_t v67 = (uint64_t)&v54 - v21;
  __chkstk_darwin(v22, v23);
  uint64_t v25 = (char *)&v54 - v24;
  int64_t v26 = 0;
  uint64_t v73 = _swiftEmptyArrayStorage;
  uint64_t v27 = *(void *)(a1 + 64);
  uint64_t v58 = v10;
  uint64_t v59 = a1 + 64;
  uint64_t v28 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v29 = -1;
  if (v28 < 64) {
    uint64_t v29 = ~(-1 << v28);
  }
  unint64_t v30 = v29 & v27;
  int64_t v60 = (unint64_t)(v28 + 63) >> 6;
  uint64_t v61 = a2;
  char v66 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56);
  uint64_t v56 = v10 + 48;
  uint64_t v57 = v10 + 16;
  uint64_t v55 = (void (**)(char *, char *, uint64_t))(v10 + 32);
  uint64_t v64 = (void (**)(char *, uint64_t))(v10 + 8);
  uint64_t v68 = a1;
  uint64_t v70 = (char *)&v54 - v24;
  unint64_t v62 = v9;
  if ((v29 & v27) != 0) {
    goto LABEL_6;
  }
LABEL_7:
  int64_t v33 = v26 + 1;
  if (__OFADD__(v26, 1)) {
    goto LABEL_41;
  }
  if (v33 >= v60) {
    goto LABEL_38;
  }
  unint64_t v34 = *(void *)(v59 + 8 * v33);
  ++v26;
  if (!v34)
  {
    int64_t v26 = v33 + 1;
    if (v33 + 1 >= v60) {
      goto LABEL_38;
    }
    unint64_t v34 = *(void *)(v59 + 8 * v26);
    if (!v34)
    {
      int64_t v26 = v33 + 2;
      if (v33 + 2 >= v60) {
        goto LABEL_38;
      }
      unint64_t v34 = *(void *)(v59 + 8 * v26);
      if (!v34)
      {
        int64_t v26 = v33 + 3;
        if (v33 + 3 >= v60) {
          goto LABEL_38;
        }
        unint64_t v34 = *(void *)(v59 + 8 * v26);
        if (!v34)
        {
          int64_t v35 = v33 + 4;
          if (v35 < v60)
          {
            unint64_t v34 = *(void *)(v59 + 8 * v35);
            if (v34)
            {
              int64_t v26 = v35;
              goto LABEL_22;
            }
            while (1)
            {
              int64_t v26 = v35 + 1;
              if (__OFADD__(v35, 1)) {
                goto LABEL_42;
              }
              if (v26 >= v60) {
                break;
              }
              unint64_t v34 = *(void *)(v59 + 8 * v26);
              ++v35;
              if (v34) {
                goto LABEL_22;
              }
            }
          }
LABEL_38:
          swift_release();
          return;
        }
      }
    }
  }
LABEL_22:
  unint64_t v30 = (v34 - 1) & v34;
  for (unint64_t i = __clz(__rbit64(v34)) + (v26 << 6); ; unint64_t i = v31 | (v26 << 6))
  {
    uint64_t v36 = *(void *)(v69 + 72);
    uint64_t v37 = v67;
    sub_100B009B4(*(void *)(v68 + 48) + v36 * i, v67, type metadata accessor for CRLBoardIdentifier);
    sub_100B02A28(v37, (uint64_t)v25, type metadata accessor for CRLBoardIdentifier);
    if (*(void *)(a2 + 16) && (unint64_t v38 = sub_1009563EC((uint64_t)v25), (v39 & 1) != 0))
    {
      uint64_t v40 = v58;
      uint64_t v41 = v72;
      (*(void (**)(char *, unint64_t, uint64_t))(v58 + 16))(v9, *(void *)(a2 + 56) + *(void *)(v58 + 72) * v38, v72);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v40 + 56))(v9, 0, 1, v41);
      uint64_t v42 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v40 + 48);
      uint64_t v25 = v70;
      if (v42(v9, 1, v41) != 1)
      {
        (*v55)(v71, v9, v72);
        goto LABEL_29;
      }
    }
    else
    {
      (*v66)(v9, 1, 1, v72);
    }
    static Date.distantPast.getter();
    sub_100522F00((uint64_t)v9, &qword_101672EB0);
LABEL_29:
    if (!*(void *)(a3 + 16)) {
      break;
    }
    sub_1009563EC((uint64_t)v25);
    if ((v43 & 1) == 0) {
      goto LABEL_40;
    }
    uint64_t v44 = a3;
    unint64_t v45 = v65;
    Date.init(timeIntervalSinceReferenceDate:)();
    uint64_t v46 = v71;
    char v47 = static Date.< infix(_:_:)();
    uint64_t v48 = *v64;
    uint64_t v49 = v45;
    uint64_t v50 = v72;
    (*v64)(v49, v72);
    v48(v46, v50);
    if (v47)
    {
      sub_100B02A28((uint64_t)v70, v63, type metadata accessor for CRLBoardIdentifier);
      uint64_t v51 = v73;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1006BB8A4(0, *((void *)v51 + 2) + 1, 1);
        uint64_t v51 = v73;
      }
      unint64_t v53 = *((void *)v51 + 2);
      unint64_t v52 = *((void *)v51 + 3);
      if (v53 >= v52 >> 1)
      {
        sub_1006BB8A4(v52 > 1, v53 + 1, 1);
        uint64_t v51 = v73;
      }
      *((void *)v51 + 2) = v53 + 1;
      sub_100B02A28(v63, (uint64_t)v51+ ((*(unsigned __int8 *)(v69 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v69 + 80))+ v53 * v36, type metadata accessor for CRLBoardIdentifier);
      a3 = v44;
      a2 = v61;
      uint64_t v9 = v62;
      uint64_t v25 = v70;
      if (!v30) {
        goto LABEL_7;
      }
    }
    else
    {
      uint64_t v25 = v70;
      sub_100B00348((uint64_t)v70, type metadata accessor for CRLBoardIdentifier);
      a3 = v44;
      a2 = v61;
      uint64_t v9 = v62;
      if (!v30) {
        goto LABEL_7;
      }
    }
LABEL_6:
    unint64_t v31 = __clz(__rbit64(v30));
    v30 &= v30 - 1;
  }
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
}

uint64_t sub_100B0106C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CRLBoardIdentifier(0);
  uint64_t v57 = *(void *)(v4 - 8);
  __chkstk_darwin(v4 - 8, v5);
  uint64_t v56 = (uint64_t)&v49 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7, v8);
  uint64_t v55 = (uint64_t)&v49 - v9;
  uint64_t v10 = type metadata accessor for CRLSpotlightManager.ChangeType(0);
  uint64_t v53 = *(void *)(v10 - 8);
  uint64_t v54 = v10;
  __chkstk_darwin(v10, v11);
  uint64_t v52 = (uint64_t)&v49 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13, v14);
  uint64_t v16 = (char *)&v49 - v15;
  int64_t v17 = *(void *)(a1 + 16);
  uint64_t v18 = _swiftEmptyArrayStorage;
  uint64_t v51 = a2;
  if (v17)
  {
    uint64_t v58 = _swiftEmptyArrayStorage;
    sub_1006BBAE4(0, v17, 0);
    uint64_t result = sub_100F27B7C(a1);
    uint64_t v20 = result;
    uint64_t v22 = v21;
    char v24 = v23 & 1;
    uint64_t v50 = a1 + 56;
    while ((v20 & 0x8000000000000000) == 0 && v20 < 1 << *(unsigned char *)(a1 + 32))
    {
      if (((*(void *)(v50 + (((unint64_t)v20 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v20) & 1) == 0) {
        goto LABEL_27;
      }
      if (*(_DWORD *)(a1 + 36) != v22) {
        goto LABEL_28;
      }
      uint64_t v25 = v55;
      sub_100B009B4(*(void *)(a1 + 48) + *(void *)(v57 + 72) * v20, v55, type metadata accessor for CRLBoardIdentifier);
      uint64_t v26 = v25;
      uint64_t v27 = v56;
      sub_100B02A28(v26, v56, type metadata accessor for CRLBoardIdentifier);
      sub_100B009B4(v27, (uint64_t)v16, type metadata accessor for CRLBoardIdentifier);
      swift_storeEnumTagMultiPayload();
      sub_100B00348(v27, type metadata accessor for CRLBoardIdentifier);
      uint64_t v18 = v58;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1006BBAE4(0, *((void *)v18 + 2) + 1, 1);
        uint64_t v18 = v58;
      }
      unint64_t v29 = *((void *)v18 + 2);
      unint64_t v28 = *((void *)v18 + 3);
      if (v29 >= v28 >> 1)
      {
        sub_1006BBAE4(v28 > 1, v29 + 1, 1);
        uint64_t v18 = v58;
      }
      *((void *)v18 + 2) = v29 + 1;
      sub_100B02A28((uint64_t)v16, (uint64_t)v18+ ((*(unsigned __int8 *)(v53 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v53 + 80))+ *(void *)(v53 + 72) * v29, type metadata accessor for CRLSpotlightManager.ChangeType);
      uint64_t result = sub_100666C8C(v20, v22, v24 & 1, a1);
      uint64_t v20 = result;
      uint64_t v22 = v30;
      char v24 = v31 & 1;
      if (!--v17)
      {
        sub_10056A4C4(result, v30, v31 & 1);
        a2 = v51;
        goto LABEL_13;
      }
    }
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    __break(1u);
  }
  else
  {
LABEL_13:
    int64_t v32 = *(void *)(a2 + 16);
    int64_t v33 = _swiftEmptyArrayStorage;
    if (!v32)
    {
LABEL_25:
      uint64_t v58 = v18;
      sub_1006E33BC((uint64_t)v33);
      uint64_t v48 = sub_100CDE494((uint64_t)v58);
      swift_bridgeObjectRelease();
      return v48;
    }
    uint64_t v58 = _swiftEmptyArrayStorage;
    sub_1006BBAE4(0, v32, 0);
    uint64_t v34 = v51;
    uint64_t result = sub_100F27B7C(v51);
    uint64_t v35 = result;
    uint64_t v37 = v36;
    char v39 = v38 & 1;
    uint64_t v40 = v34 + 56;
    while ((v35 & 0x8000000000000000) == 0 && v35 < 1 << *(unsigned char *)(v34 + 32))
    {
      if (((*(void *)(v40 + (((unint64_t)v35 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v35) & 1) == 0) {
        goto LABEL_30;
      }
      if (*(_DWORD *)(v34 + 36) != v37) {
        goto LABEL_31;
      }
      uint64_t v41 = v55;
      sub_100B009B4(*(void *)(v34 + 48) + *(void *)(v57 + 72) * v35, v55, type metadata accessor for CRLBoardIdentifier);
      uint64_t v42 = v41;
      uint64_t v43 = v56;
      sub_100B02A28(v42, v56, type metadata accessor for CRLBoardIdentifier);
      sub_100B009B4(v43, v52, type metadata accessor for CRLBoardIdentifier);
      swift_storeEnumTagMultiPayload();
      sub_100B00348(v43, type metadata accessor for CRLBoardIdentifier);
      int64_t v33 = v58;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1006BBAE4(0, *((void *)v33 + 2) + 1, 1);
        int64_t v33 = v58;
      }
      unint64_t v45 = *((void *)v33 + 2);
      unint64_t v44 = *((void *)v33 + 3);
      uint64_t v34 = v51;
      if (v45 >= v44 >> 1)
      {
        sub_1006BBAE4(v44 > 1, v45 + 1, 1);
        uint64_t v34 = v51;
        int64_t v33 = v58;
      }
      *((void *)v33 + 2) = v45 + 1;
      sub_100B02A28(v52, (uint64_t)v33+ ((*(unsigned __int8 *)(v53 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v53 + 80))+ *(void *)(v53 + 72) * v45, type metadata accessor for CRLSpotlightManager.ChangeType);
      uint64_t result = sub_100666C8C(v35, v37, v39 & 1, v34);
      uint64_t v35 = result;
      uint64_t v37 = v46;
      char v39 = v47 & 1;
      if (!--v32)
      {
        sub_10056A4C4(result, v46, v47 & 1);
        goto LABEL_25;
      }
    }
  }
  __break(1u);
LABEL_30:
  __break(1u);
LABEL_31:
  __break(1u);
  return result;
}

void sub_100B01608(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v34 = a2;
  uint64_t v39 = a4;
  uint64_t v35 = a1;
  uint64_t v5 = type metadata accessor for CRLBoardIdentifier(0);
  __chkstk_darwin(v5 - 8, v6);
  uint64_t v8 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for CRLSpotlightManager.ChangeType(0);
  uint64_t v40 = *(void *)(v9 - 8);
  __chkstk_darwin(v9, v10);
  uint64_t v12 = (char *)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13, v14);
  uint64_t v16 = (char *)&v34 - v15;
  __chkstk_darwin(v17, v18);
  uint64_t v20 = (char *)&v34 - v19;
  int64_t v21 = 0;
  uint64_t v41 = a3;
  uint64_t v22 = *(void *)(a3 + 56);
  uint64_t v36 = 0;
  uint64_t v37 = a3 + 56;
  uint64_t v23 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v24 = -1;
  if (v23 < 64) {
    uint64_t v24 = ~(-1 << v23);
  }
  unint64_t v25 = v24 & v22;
  int64_t v38 = (unint64_t)(v23 + 63) >> 6;
  while (v25)
  {
    unint64_t v26 = __clz(__rbit64(v25));
    v25 &= v25 - 1;
    unint64_t v27 = v26 | (v21 << 6);
LABEL_21:
    sub_100B009B4(*(void *)(v41 + 48) + *(void *)(v40 + 72) * v27, (uint64_t)v20, type metadata accessor for CRLSpotlightManager.ChangeType);
    sub_100B009B4((uint64_t)v20, (uint64_t)v16, type metadata accessor for CRLSpotlightManager.ChangeType);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_100B00348((uint64_t)v16, type metadata accessor for CRLSpotlightManager.ChangeType);
LABEL_25:
      sub_100B00348((uint64_t)v20, type metadata accessor for CRLSpotlightManager.ChangeType);
      *(unint64_t *)((char *)v35 + ((v27 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v27;
      if (__OFADD__(v36++, 1))
      {
        __break(1u);
LABEL_28:
        uint64_t v33 = v41;
        swift_retain();
        sub_10052C73C(v35, v34, v36, v33);
        return;
      }
    }
    else
    {
      sub_100B02A28((uint64_t)v16, (uint64_t)v8, type metadata accessor for CRLBoardIdentifier);
      sub_100B009B4((uint64_t)v8, (uint64_t)v12, type metadata accessor for CRLBoardIdentifier);
      swift_storeEnumTagMultiPayload();
      char v31 = sub_1006E72D8((uint64_t)v12, v39);
      sub_100B00348((uint64_t)v12, type metadata accessor for CRLSpotlightManager.ChangeType);
      sub_100B00348((uint64_t)v8, type metadata accessor for CRLBoardIdentifier);
      if ((v31 & 1) == 0) {
        goto LABEL_25;
      }
      sub_100B00348((uint64_t)v20, type metadata accessor for CRLSpotlightManager.ChangeType);
    }
  }
  int64_t v28 = v21 + 1;
  if (__OFADD__(v21, 1))
  {
    __break(1u);
    goto LABEL_30;
  }
  if (v28 >= v38) {
    goto LABEL_28;
  }
  unint64_t v29 = *(void *)(v37 + 8 * v28);
  ++v21;
  if (v29) {
    goto LABEL_20;
  }
  int64_t v21 = v28 + 1;
  if (v28 + 1 >= v38) {
    goto LABEL_28;
  }
  unint64_t v29 = *(void *)(v37 + 8 * v21);
  if (v29) {
    goto LABEL_20;
  }
  int64_t v21 = v28 + 2;
  if (v28 + 2 >= v38) {
    goto LABEL_28;
  }
  unint64_t v29 = *(void *)(v37 + 8 * v21);
  if (v29)
  {
LABEL_20:
    unint64_t v25 = (v29 - 1) & v29;
    unint64_t v27 = __clz(__rbit64(v29)) + (v21 << 6);
    goto LABEL_21;
  }
  int64_t v30 = v28 + 3;
  if (v30 >= v38) {
    goto LABEL_28;
  }
  unint64_t v29 = *(void *)(v37 + 8 * v30);
  if (v29)
  {
    int64_t v21 = v30;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v21 = v30 + 1;
    if (__OFADD__(v30, 1)) {
      break;
    }
    if (v21 >= v38) {
      goto LABEL_28;
    }
    unint64_t v29 = *(void *)(v37 + 8 * v21);
    ++v30;
    if (v29) {
      goto LABEL_20;
    }
  }
LABEL_30:
  __break(1u);
}

uint64_t sub_100B01A14(uint64_t a1, uint64_t a2)
{
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  unint64_t v7 = (unint64_t)((1 << v5) + 63) >> 6;
  size_t v8 = 8 * v7;
  uint64_t isStackAllocationSafe = swift_bridgeObjectRetain_n();
  if (v6 <= 0xD || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    __chkstk_darwin(isStackAllocationSafe, v10);
    bzero((char *)&v16 - ((v8 + 15) & 0x3FFFFFFFFFFFFFF0), v8);
    swift_bridgeObjectRetain();
    sub_100B01608((unint64_t *)((char *)&v16 - ((v8 + 15) & 0x3FFFFFFFFFFFFFF0)), v7, a1, a2);
    uint64_t v12 = v11;
    swift_bridgeObjectRelease();
    swift_release();
    if (v2) {
      swift_willThrow();
    }
    swift_bridgeObjectRelease_n();
  }
  else
  {
    uint64_t v13 = (void *)swift_slowAlloc();
    bzero(v13, v8);
    swift_bridgeObjectRetain();
    sub_100B01608((unint64_t *)v13, v7, a1, a2);
    uint64_t v12 = v14;
    swift_bridgeObjectRelease();
    swift_release();
    swift_slowDealloc();
    swift_bridgeObjectRelease_n();
  }
  return v12;
}

uint64_t sub_100B01BE0(uint64_t a1, uint64_t (*a2)(void), unint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = sub_1005057FC((uint64_t *)&unk_101674520);
  __chkstk_darwin(v8 - 8, v9);
  uint64_t v11 = (char *)v58 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v69 = type metadata accessor for UUID();
  unint64_t v71 = *(void *)(v69 - 8);
  __chkstk_darwin(v69, v12);
  uint64_t v72 = (char *)v58 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v67 = type metadata accessor for CRLBoardIdentifierStorage(0);
  __chkstk_darwin(v67, v14);
  char v66 = (char *)v58 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for CRLBoardIdentifier(0);
  __chkstk_darwin(v16 - 8, v17);
  uint64_t v65 = (uint64_t)v58 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19, v20);
  uint64_t v64 = (uint64_t)v58 - v21;
  __chkstk_darwin(v22, v23);
  uint64_t v63 = (uint64_t)v58 - v24;
  __chkstk_darwin(v25, v26);
  uint64_t v62 = (uint64_t)v58 - v27;
  __chkstk_darwin(v28, v29);
  uint64_t v61 = (uint64_t)v58 - v30;
  if (qword_10166FA28 != -1) {
    goto LABEL_19;
  }
  while (1)
  {
    swift_beginAccess();
    char v31 = (void *)static OS_os_log.crlSpotlight;
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_10117E810;
    uint64_t v73 = a1;
    id v33 = v31;
    sub_1005057FC((uint64_t *)&unk_1016773F0);
    sub_100523288((unint64_t *)&qword_101672620, (uint64_t *)&unk_1016773F0);
    uint64_t v34 = BidirectionalCollection<>.joined(separator:)();
    uint64_t v36 = v35;
    *(void *)(inited + 56) = &type metadata for String;
    *(void *)(inited + 64) = sub_100528BE4();
    *(void *)(inited + 32) = v34;
    *(void *)(inited + 40) = v36;
    uint64_t v37 = static os_log_type_t.default.getter();
    sub_100BAC898((uint64_t)v33, (uint64_t)&_mh_execute_header, v37, (uint64_t)"REINDEX [%@]", 12, 2, inited);
    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();

    int64_t v38 = &_swiftEmptySetSingleton;
    uint64_t v75 = &_swiftEmptySetSingleton;
    uint64_t v39 = a1;
    a1 = *(void *)(a1 + 16);
    if (!a1) {
      break;
    }
    v58[2] = v4;
    v58[3] = a3;
    uint64_t v59 = a2;
    uint64_t v40 = (unsigned int (**)(char *, uint64_t, uint64_t (*)(void)))(v71 + 48);
    uint64_t v70 = (void (**)(char *, char *, uint64_t (*)(void)))(v71 + 32);
    swift_bridgeObjectRetain();
    unint64_t v71 = sub_10052E310();
    v58[1] = v39;
    uint64_t v4 = (uint64_t *)(v39 + 40);
    uint64_t v68 = v11;
    a2 = (uint64_t (*)(void))v69;
    int64_t v60 = v40;
    while (1)
    {
      uint64_t v41 = *v4;
      uint64_t v73 = *(v4 - 1);
      uint64_t v74 = v41;
      swift_bridgeObjectRetain_n();
      uint64_t v42 = StringProtocol<>.split(separator:maxSplits:omittingEmptySubsequences:)();
      a3 = *(void *)(v42 + 16);
      if (!a3) {
        goto LABEL_9;
      }
      swift_bridgeObjectRelease();
      if (!*(void *)(v42 + 16)) {
        break;
      }
      swift_bridgeObjectRetain();
      a2 = (uint64_t (*)(void))v69;
      static String._fromSubstring(_:)();
      uint64_t v11 = v68;
      swift_bridgeObjectRelease();
LABEL_9:
      UUID.init(uuidString:)();
      swift_bridgeObjectRelease();
      if ((*v40)(v11, 1, a2) == 1)
      {
        swift_bridgeObjectRelease();
        sub_100522F00((uint64_t)v11, (uint64_t *)&unk_101674520);
      }
      else
      {
        uint64_t v43 = *v70;
        (*v70)(v72, v11, a2);
        if (a3 <= 1)
        {
          swift_bridgeObjectRelease();
          uint64_t v44 = 0;
          unint64_t v46 = 0xE000000000000000;
        }
        else
        {
          if (*(void *)(v42 + 16) < 2uLL) {
            goto LABEL_18;
          }
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          a2 = (uint64_t (*)(void))v69;
          uint64_t v44 = static String._fromSubstring(_:)();
          unint64_t v46 = v45;
          uint64_t v11 = v68;
          swift_bridgeObjectRelease();
        }
        uint64_t v47 = (uint64_t)v66;
        v43(v66, v72, a2);
        uint64_t v48 = (uint64_t *)(v47 + *(int *)(v67 + 20));
        *uint64_t v48 = v44;
        v48[1] = v46;
        uint64_t v49 = v63;
        sub_100B02A28(v47, v63, type metadata accessor for CRLBoardIdentifierStorage);
        uint64_t v50 = v49;
        uint64_t v51 = v62;
        sub_100B02A28(v50, v62, type metadata accessor for CRLBoardIdentifier);
        uint64_t v52 = v61;
        sub_100B02A28(v51, v61, type metadata accessor for CRLBoardIdentifier);
        uint64_t v53 = v65;
        sub_100B009B4(v52, v65, type metadata accessor for CRLBoardIdentifier);
        uint64_t v54 = v64;
        sub_100CB7090(v64, v53);
        sub_100B00348(v54, type metadata accessor for CRLBoardIdentifier);
        sub_100B00348(v52, type metadata accessor for CRLBoardIdentifier);
        uint64_t v40 = v60;
      }
      v4 += 2;
      swift_bridgeObjectRelease();
      if (!--a1)
      {
        swift_bridgeObjectRelease();
        int64_t v38 = v75;
        a2 = v59;
        goto LABEL_16;
      }
    }
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    swift_once();
  }
LABEL_16:
  uint64_t v55 = sub_100B0106C((uint64_t)v38, (uint64_t)&_swiftEmptySetSingleton);
  swift_bridgeObjectRelease();
  uint64_t v73 = v55;
  PassthroughSubject.send(_:)();
  uint64_t v56 = swift_bridgeObjectRelease();
  return a2(v56);
}

uint64_t sub_100B02310(void *a1, unint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1005057FC((uint64_t *)&unk_101674520);
  __chkstk_darwin(v6 - 8, v7);
  uint64_t v9 = (char *)v55 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v66 = type metadata accessor for UUID();
  unint64_t v68 = *(void *)(v66 - 8);
  __chkstk_darwin(v66, v10);
  uint64_t v69 = (char *)v55 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v64 = type metadata accessor for CRLBoardIdentifierStorage(0);
  __chkstk_darwin(v64, v12);
  uint64_t v63 = (char *)v55 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for CRLBoardIdentifier(0);
  __chkstk_darwin(v14 - 8, v15);
  uint64_t v62 = (uint64_t)v55 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17, v18);
  uint64_t v61 = (uint64_t)v55 - v19;
  __chkstk_darwin(v20, v21);
  uint64_t v60 = (uint64_t)v55 - v22;
  __chkstk_darwin(v23, v24);
  uint64_t v59 = (uint64_t)v55 - v25;
  __chkstk_darwin(v26, v27);
  uint64_t v58 = (uint64_t)v55 - v28;
  if (qword_10166FA28 != -1) {
    goto LABEL_19;
  }
  while (1)
  {
    swift_beginAccess();
    uint64_t v29 = (void *)static OS_os_log.crlSpotlight;
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_10117E810;
    uint64_t v70 = a1;
    id v31 = v29;
    sub_1005057FC((uint64_t *)&unk_1016773F0);
    sub_100523288((unint64_t *)&qword_101672620, (uint64_t *)&unk_1016773F0);
    uint64_t v32 = BidirectionalCollection<>.joined(separator:)();
    uint64_t v34 = v33;
    *(void *)(inited + 56) = &type metadata for String;
    *(void *)(inited + 64) = sub_100528BE4();
    *(void *)(inited + 32) = v32;
    *(void *)(inited + 40) = v34;
    uint64_t v35 = static os_log_type_t.default.getter();
    sub_100BAC898((uint64_t)v31, (uint64_t)&_mh_execute_header, v35, (uint64_t)"REINDEX [%@]", 12, 2, inited);
    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();

    uint64_t v36 = &_swiftEmptySetSingleton;
    uint64_t v72 = &_swiftEmptySetSingleton;
    uint64_t v37 = a1[2];
    if (!v37) {
      break;
    }
    v55[1] = a2;
    uint64_t v56 = a3;
    int64_t v38 = (unsigned int (**)(char *, uint64_t, uint64_t))(v68 + 48);
    uint64_t v67 = (void (**)(char *, char *, uint64_t))(v68 + 32);
    swift_bridgeObjectRetain();
    unint64_t v68 = sub_10052E310();
    v55[0] = a1;
    a1 += 5;
    uint64_t v65 = v9;
    a3 = v66;
    uint64_t v57 = v38;
    while (1)
    {
      uint64_t v39 = *a1;
      uint64_t v70 = (void *)*(a1 - 1);
      uint64_t v71 = v39;
      swift_bridgeObjectRetain_n();
      uint64_t v40 = StringProtocol<>.split(separator:maxSplits:omittingEmptySubsequences:)();
      a2 = *(void *)(v40 + 16);
      if (!a2) {
        goto LABEL_9;
      }
      swift_bridgeObjectRelease();
      if (!*(void *)(v40 + 16)) {
        break;
      }
      swift_bridgeObjectRetain();
      a3 = v66;
      static String._fromSubstring(_:)();
      uint64_t v9 = v65;
      swift_bridgeObjectRelease();
LABEL_9:
      UUID.init(uuidString:)();
      swift_bridgeObjectRelease();
      if ((*v38)(v9, 1, a3) == 1)
      {
        swift_bridgeObjectRelease();
        sub_100522F00((uint64_t)v9, (uint64_t *)&unk_101674520);
      }
      else
      {
        uint64_t v41 = *v67;
        (*v67)(v69, v9, a3);
        if (a2 <= 1)
        {
          swift_bridgeObjectRelease();
          uint64_t v42 = 0;
          unint64_t v44 = 0xE000000000000000;
        }
        else
        {
          if (*(void *)(v40 + 16) < 2uLL) {
            goto LABEL_18;
          }
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          uint64_t v9 = v65;
          a3 = v66;
          uint64_t v42 = static String._fromSubstring(_:)();
          unint64_t v44 = v43;
          swift_bridgeObjectRelease();
        }
        uint64_t v45 = (uint64_t)v63;
        v41(v63, v69, a3);
        unint64_t v46 = (uint64_t *)(v45 + *(int *)(v64 + 20));
        *unint64_t v46 = v42;
        v46[1] = v44;
        uint64_t v47 = v60;
        sub_100B02A28(v45, v60, type metadata accessor for CRLBoardIdentifierStorage);
        uint64_t v48 = v47;
        uint64_t v49 = v59;
        sub_100B02A28(v48, v59, type metadata accessor for CRLBoardIdentifier);
        uint64_t v50 = v58;
        sub_100B02A28(v49, v58, type metadata accessor for CRLBoardIdentifier);
        uint64_t v51 = v62;
        sub_100B009B4(v50, v62, type metadata accessor for CRLBoardIdentifier);
        uint64_t v52 = v61;
        sub_100CB7090(v61, v51);
        sub_100B00348(v52, type metadata accessor for CRLBoardIdentifier);
        sub_100B00348(v50, type metadata accessor for CRLBoardIdentifier);
        int64_t v38 = v57;
      }
      a1 += 2;
      swift_bridgeObjectRelease();
      if (!--v37)
      {
        swift_bridgeObjectRelease();
        uint64_t v36 = v72;
        a3 = v56;
        goto LABEL_16;
      }
    }
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    swift_once();
  }
LABEL_16:
  uint64_t v53 = sub_100B0106C((uint64_t)v36, (uint64_t)&_swiftEmptySetSingleton);
  swift_bridgeObjectRelease();
  uint64_t v70 = (void *)v53;
  PassthroughSubject.send(_:)();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(uint64_t))(a3 + 16))(a3);
}

uint64_t sub_100B02A28(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_100B02A90()
{
  _Block_release(*(const void **)(v0 + 16));

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100B02AC8()
{
  swift_unknownObjectRelease();
  swift_release();

  swift_release();

  return _swift_deallocObject(v0, 64, 7);
}

uint64_t sub_100B02B18()
{
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v3 = swift_task_alloc();
  long long v4 = *(_OWORD *)(v0 + 48);
  *(void *)(v1 + 16) = v3;
  *(void *)uint64_t v3 = v1;
  *(void *)(v3 + 8) = sub_100528D08;
  *(_OWORD *)(v3 + 56) = v4;
  *(void *)(v3 + 48) = v2;
  return _swift_task_switch(sub_100AFFB70, v2, 0);
}

uint64_t type metadata accessor for CRLSpotlightManager.IndexDecision(uint64_t a1)
{
  return sub_100512D5C(a1, qword_1016921B0);
}

void sub_100B02BEC(uint64_t a1)
{
  sub_100845490(a1, *(void **)(v1 + 16));
}

void sub_100B02BF4(uint64_t a1)
{
  sub_100845658(a1, *(void **)(v1 + 16));
}

uint64_t sub_100B02BFC@<X0>(uint64_t *a1@<X8>)
{
  return sub_100C717C0(a1);
}

unint64_t sub_100B02C18()
{
  unint64_t result = qword_101691F70;
  if (!qword_101691F70)
  {
    sub_100522D34(&qword_101691F68);
    sub_100B00300((unint64_t *)&unk_1016772E0, (void (*)(uint64_t))type metadata accessor for CRLBoardIdentifier);
    sub_100B00300(&qword_101691F80, (void (*)(uint64_t))&type metadata accessor for Date);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101691F70);
  }
  return result;
}

unint64_t sub_100B02CF4()
{
  unint64_t result = qword_101691F88;
  if (!qword_101691F88)
  {
    sub_100522D34(&qword_101691F68);
    sub_100B00300((unint64_t *)&unk_101677290, (void (*)(uint64_t))type metadata accessor for CRLBoardIdentifier);
    sub_100B00300(&qword_101679BE8, (void (*)(uint64_t))&type metadata accessor for Date);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101691F88);
  }
  return result;
}

BOOL sub_100B02DD0(uint64_t a1)
{
  return sub_100AF959C(a1, v1);
}

uint64_t sub_100B02DD8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_100AF9638(a1, v2, a2);
}

uint64_t sub_100B02DE0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_100AFA994(a1, v2, a2);
}

uint64_t sub_100B02DE8()
{
  return PassthroughSubject.send(_:)();
}

uint64_t sub_100B02E14(uint64_t result)
{
  if (*(void *)(*(void *)result + 16)) {
    return sub_100AFBCA8();
  }
  return result;
}

uint64_t sub_100B02E28()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100B02E60()
{
  return sub_100AFB08C();
}

uint64_t sub_100B02E68()
{
  return sub_100AFB2A4();
}

uint64_t sub_100B02E70()
{
  return sub_100AFB440();
}

uint64_t sub_100B02E78()
{
  uint64_t v1 = *(void *)(type metadata accessor for CRLSpotlightManager.IndexDecision(0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 24) & ~v2;
  uint64_t v4 = *(void *)(v1 + 64);
  swift_release();
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v0 + v3, v6);
  type metadata accessor for CRLBoardIdentifierStorage(0);
  swift_bridgeObjectRelease();
  if (EnumCaseMultiPayload != 1) {

  }
  return _swift_deallocObject(v0, v3 + v4, v2 | 7);
}

uint64_t sub_100B02FA8(uint64_t a1, uint64_t a2)
{
  return sub_100B0338C(a1, a2, type metadata accessor for CRLSpotlightManager.IndexDecision, sub_100AFAB44);
}

uint64_t sub_100B02FD4()
{
  uint64_t v1 = *(void *)(type metadata accessor for CRLSpotlightManager.IndexDecision(0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 40) & ~v2;
  uint64_t v4 = *(void *)(v1 + 64);
  swift_unknownObjectRelease();
  swift_release();
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v0 + v3, v6);
  type metadata accessor for CRLBoardIdentifierStorage(0);
  swift_bridgeObjectRelease();
  if (EnumCaseMultiPayload != 1) {

  }
  swift_release();

  return _swift_deallocObject(v0, ((v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 16, v2 | 7);
}

uint64_t sub_100B0312C(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for CRLSpotlightManager.IndexDecision(0) - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = v1[2];
  uint64_t v7 = v1[3];
  uint64_t v8 = v1[4];
  uint64_t v9 = (uint64_t)v1 + v5;
  uint64_t v10 = (void *)((char *)v1 + ((*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v11 = *v10;
  uint64_t v12 = v10[1];
  uint64_t v13 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v13;
  *uint64_t v13 = v2;
  v13[1] = sub_100528D08;
  return sub_100AFAD7C(a1, v6, v7, v8, v9, v11, v12);
}

uint64_t sub_100B03268()
{
  uint64_t v1 = *(void *)(type metadata accessor for CRLSpotlightManager.ChangeType(0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 24) & ~v2;
  uint64_t v4 = *(void *)(v1 + 64);
  swift_release();
  uint64_t v5 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v0 + v3, v5);
  type metadata accessor for CRLBoardIdentifierStorage(0);
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, v3 + v4, v2 | 7);
}

uint64_t sub_100B03360(uint64_t a1, uint64_t a2)
{
  return sub_100B0338C(a1, a2, type metadata accessor for CRLSpotlightManager.ChangeType, sub_100AF9994);
}

uint64_t sub_100B0338C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void), uint64_t (*a4)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v7 = *(void *)(a3(0) - 8);
  uint64_t v8 = *(void *)(v4 + 16);
  uint64_t v9 = v4 + ((*(unsigned __int8 *)(v7 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));

  return a4(a1, a2, v8, v9);
}

uint64_t sub_100B03428(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1005057FC(&qword_1016920D8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100B03490()
{
  uint64_t v1 = *(void *)(type metadata accessor for CRLSpotlightManager.ChangeType(0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 40) & ~v2;
  uint64_t v4 = *(void *)(v1 + 64);
  swift_unknownObjectRelease();
  swift_release();
  uint64_t v5 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v0 + v3, v5);
  type metadata accessor for CRLBoardIdentifierStorage(0);
  swift_bridgeObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, ((v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 16, v2 | 7);
}

uint64_t sub_100B035B0(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for CRLSpotlightManager.ChangeType(0) - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = v1[2];
  uint64_t v7 = v1[3];
  uint64_t v8 = v1[4];
  uint64_t v9 = (uint64_t)v1 + v5;
  uint64_t v10 = (void *)((char *)v1 + ((*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v11 = *v10;
  uint64_t v12 = v10[1];
  uint64_t v13 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v13;
  *uint64_t v13 = v2;
  v13[1] = sub_100528D08;
  return sub_100AF9BD4(a1, v6, v7, v8, v9, v11, v12);
}

uint64_t sub_100B036EC()
{
  swift_unknownObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_100B0372C()
{
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_100528488;
  long long v3[2] = v2;
  return _swift_task_switch(sub_100AF7E28, v2, 0);
}

uint64_t *sub_100B037D4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v7 = type metadata accessor for UUID();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20);
    uint64_t v9 = (uint64_t *)((char *)a1 + v8);
    uint64_t v10 = (uint64_t *)((char *)a2 + v8);
    uint64_t v11 = v10[1];
    *uint64_t v9 = *v10;
    v9[1] = v11;
    swift_bridgeObjectRetain();
    if (EnumCaseMultiPayload != 1)
    {
      uint64_t v13 = *(int *)(sub_1005057FC((uint64_t *)&unk_101691F40) + 48);
      uint64_t v14 = *(void **)((char *)a2 + v13);
      *(uint64_t *)((char *)a1 + v13) = (uint64_t)v14;
      id v15 = v14;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void sub_100B03908(uint64_t a1)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v3 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  type metadata accessor for CRLBoardIdentifierStorage(0);
  swift_bridgeObjectRelease();
  if (EnumCaseMultiPayload != 1)
  {
    uint64_t v4 = *(void **)(a1 + *(int *)(sub_1005057FC((uint64_t *)&unk_101691F40) + 48));
  }
}

uint64_t sub_100B039B8(uint64_t a1, uint64_t a2)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v5 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a1, a2, v5);
  uint64_t v6 = *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20);
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (void *)(a2 + v6);
  uint64_t v9 = v8[1];
  *uint64_t v7 = *v8;
  v7[1] = v9;
  swift_bridgeObjectRetain();
  if (EnumCaseMultiPayload != 1)
  {
    uint64_t v10 = *(int *)(sub_1005057FC((uint64_t *)&unk_101691F40) + 48);
    uint64_t v11 = *(void **)(a2 + v10);
    *(void *)(a1 + v10) = v11;
    id v12 = v11;
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_100B03A94(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    sub_100B00348(a1, type metadata accessor for CRLSpotlightManager.IndexDecision);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v5 = type metadata accessor for UUID();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a1, a2, v5);
    uint64_t v6 = *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20);
    uint64_t v7 = (void *)(a1 + v6);
    uint64_t v8 = (void *)(a2 + v6);
    *uint64_t v7 = *v8;
    v7[1] = v8[1];
    swift_bridgeObjectRetain();
    if (EnumCaseMultiPayload != 1)
    {
      uint64_t v9 = *(int *)(sub_1005057FC((uint64_t *)&unk_101691F40) + 48);
      uint64_t v10 = *(void **)(a2 + v9);
      *(void *)(a1 + v9) = v10;
      id v11 = v10;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_100B03B9C(uint64_t a1, uint64_t a2)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v5 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a1, a2, v5);
  uint64_t v6 = type metadata accessor for CRLBoardIdentifierStorage(0);
  *(_OWORD *)(a1 + *(int *)(v6 + 20)) = *(_OWORD *)(a2 + *(int *)(v6 + 20));
  if (EnumCaseMultiPayload != 1)
  {
    uint64_t v7 = sub_1005057FC((uint64_t *)&unk_101691F40);
    *(void *)(a1 + *(int *)(v7 + 48)) = *(void *)(a2 + *(int *)(v7 + 48));
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_100B03C68(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    sub_100B00348(a1, type metadata accessor for CRLSpotlightManager.IndexDecision);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v5 = type metadata accessor for UUID();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a1, a2, v5);
    uint64_t v6 = type metadata accessor for CRLBoardIdentifierStorage(0);
    *(_OWORD *)(a1 + *(int *)(v6 + 20)) = *(_OWORD *)(a2 + *(int *)(v6 + 20));
    if (EnumCaseMultiPayload != 1)
    {
      uint64_t v7 = sub_1005057FC((uint64_t *)&unk_101691F40);
      *(void *)(a1 + *(int *)(v7 + 48)) = *(void *)(a2 + *(int *)(v7 + 48));
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_100B03D58()
{
  uint64_t result = type metadata accessor for CRLBoardIdentifierStorage(319);
  if (v1 <= 0x3F)
  {
    uint64_t v2 = *(void *)(result - 8) + 64;
    swift_getTupleTypeLayout2();
    v3[4] = v3;
    v3[5] = v2;
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

void *sub_100B03E04(objc_class *a1, char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v9 = sub_100B894C0(a2, a1, KeyPath);
  swift_release();
  if (v9)
  {
    sub_1005057FC((uint64_t *)&unk_101676C10);
    uint64_t v10 = swift_allocObject();
    *(_OWORD *)(v10 + 16) = xmmword_101177E70;
    *(void *)(v10 + 32) = v9;
    uint64_t v17 = v10;
    specialized Array._endMutation()();
    id v11 = objc_allocWithZone((Class)type metadata accessor for CRLCommandGroup());
    id v12 = v9;
    uint64_t v9 = [v11 init];
    uint64_t v13 = (void *)((char *)v9 + OBJC_IVAR____TtC8Freeform15CRLCommandGroup_commands);
    swift_beginAccess();
    *uint64_t v13 = v17;

    swift_bridgeObjectRelease();
    if (a4)
    {
      uint64_t v14 = *(void (**)(uint64_t, uint64_t))((swift_isaMask & *v9) + 0x110);
      swift_bridgeObjectRetain();
      id v15 = v9;
      v14(a3, a4);
    }
  }
  return v9;
}

uint64_t sub_100B03F7C()
{
  return swift_release();
}

uint64_t sub_100B04044(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for CRLUSDZAssetDataStruct(0);
  __chkstk_darwin(v2 - 8, v3);
  uint64_t v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100B040FC(a1, (uint64_t)v5);
  return sub_10072E170((uint64_t)v5);
}

uint64_t type metadata accessor for CRLUSDZItemCommandProvider()
{
  return self;
}

uint64_t sub_100B040FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CRLUSDZAssetDataStruct(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

id sub_100B04160(double a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_10072E910();
  if (!v5) {
    return 0;
  }
  uint64_t v6 = v5;
  id v7 = [self sharedPool];
  id v8 = [v7 providerForAsset:v6 shouldValidate:1];

  self;
  uint64_t v9 = (void *)swift_dynamicCastObjCClass();
  if (!v9
    || (uint64_t v10 = v9, ![v9 isValid])
    || ([v10 isError] & 1) != 0
    || ([v10 naturalSize],
        double v13 = sub_10006727C(v11, v12, 1000000.0),
        (id v14 = [v10 CGImageResampledToSize:1 lowQuality:a3 assetOwner:sub_10006538C(v13)]) == 0))
  {

    return 0;
  }
  id v15 = v14;
  uint64_t v16 = self;
  id v17 = [v16 tracedPathForImage:v15 alphaThreshold:a1 pointSpacing:1.0];
  if (!v17)
  {

    return 0;
  }
  uint64_t v18 = v17;
  id result = [v16 smoothBezierPath:v17 withThreshold:2.0];
  if (result)
  {
    uint64_t v20 = result;
    [v10 naturalSize];
    CGFloat v22 = v21 / (double)(uint64_t)CGImageGetWidth((CGImageRef)v15);
    [v10 naturalSize];
    double v24 = v23;
    int64_t Height = CGImageGetHeight((CGImageRef)v15);
    CGAffineTransformMakeScale(&v26, v22, v24 / (double)Height);
    [v20 transformUsingAffineTransform:&v26];

    return v20;
  }
  __break(1u);
  return result;
}

uint64_t sub_100B0438C(uint64_t a1, uint64_t a2)
{
  v2[2] = a1;
  v2[3] = a2;
  type metadata accessor for MainActor();
  v2[4] = static MainActor.shared.getter();
  uint64_t v4 = dispatch thunk of Actor.unownedExecutor.getter();
  v2[5] = v4;
  v2[6] = v3;
  return _swift_task_switch(sub_100B04424, v4, v3);
}

uint64_t sub_100B04424()
{
  uint64_t v1 = *(void *)(v0 + 24);
  uint64_t v2 = sub_10047EC98(*(CGImage **)(v0 + 16));
  uint64_t v3 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v5 = v4;

  *(void *)(v0 + 56) = v3;
  *(void *)(v0 + 64) = v5;
  id v6 = objc_allocWithZone((Class)type metadata accessor for CRLPreinsertionAssetWrapper());
  sub_100510D4C(v3, v5);
  swift_unknownObjectRetain();
  *(void *)(v0 + 72) = sub_100B4DED8(v3, v5, 0x6D49726574736F70, 0xEF676E702E656761, v1);
  id v7 = (void *)swift_task_alloc();
  *(void *)(v0 + 80) = v7;
  *id v7 = v0;
  v7[1] = sub_100B0459C;
  return sub_100B4EA78();
}

uint64_t sub_100B0459C(uint64_t a1)
{
  unint64_t v4 = *(void **)v2;
  *(void *)(*(void *)v2 + 88) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = v4[5];
    uint64_t v6 = v4[6];
    id v7 = sub_100B04740;
  }
  else
  {
    v4[12] = a1;
    uint64_t v5 = v4[5];
    uint64_t v6 = v4[6];
    id v7 = sub_100B046C4;
  }
  return _swift_task_switch(v7, v5, v6);
}

uint64_t sub_100B046C4()
{
  uint64_t v1 = (void *)v0[9];
  sub_100510084(v0[7], v0[8]);
  swift_release();

  uint64_t v2 = (uint64_t (*)(uint64_t))v0[1];
  uint64_t v3 = v0[12];
  return v2(v3);
}

uint64_t sub_100B04740()
{
  uint64_t v1 = (void *)v0[9];
  swift_release();

  sub_100510084(v0[7], v0[8]);
  uint64_t v2 = (uint64_t (*)(void))v0[1];
  return v2();
}

id sub_100B047B4(double a1)
{
  id v3 = [v1 fontDescriptor];
  sub_1005057FC(&qword_1016922F0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117E810;
  *(void *)(inited + 32) = UIFontDescriptorTraitsAttribute;
  sub_1005057FC(&qword_1016922F8);
  uint64_t v5 = swift_initStackObject();
  *(_OWORD *)(v5 + 16) = xmmword_10117E810;
  *(void *)(v5 + 32) = UIFontWeightTrait;
  *(double *)(v5 + 40) = a1;
  uint64_t v6 = UIFontDescriptorTraitsAttribute;
  id v7 = UIFontWeightTrait;
  unint64_t v8 = sub_100A38934(v5);
  *(void *)(inited + 64) = sub_1005057FC(&qword_101692300);
  *(void *)(inited + 40) = v8;
  sub_100A38A40(inited);
  type metadata accessor for AttributeName(0);
  sub_100B04958();
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v10 = [v3 fontDescriptorByAddingAttributes:isa];

  [v1 pointSize];
  id v12 = [self fontWithDescriptor:v10 size:v11];

  return v12;
}

unint64_t sub_100B04958()
{
  unint64_t result = qword_1016716B0;
  if (!qword_1016716B0)
  {
    type metadata accessor for AttributeName(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016716B0);
  }
  return result;
}

id sub_100B049B0(void *a1)
{
  double v10 = 0.0;
  double v11 = 0.0;
  uint64_t v8 = 0;
  double v9 = 0.0;
  double v6 = 0.0;
  double v7 = 0.0;
  double v4 = 0.0;
  double v5 = 0.0;
  [v1 getRed:&v11 green:&v10 blue:&v9 alpha:&v8];
  [a1 getRed:&v7 green:&v6 blue:&v5 alpha:&v4];
  return [objc_allocWithZone((Class)UIColor) initWithRed:v4 * v7 + (1.0 - v4) * v11 green:v4 * v6 + (1.0 - v4) * v10 blue:v4 * v5 + (1.0 - v4) * v9 alpha:1.0];
}

BOOL sub_100B04AD8()
{
  id v1 = [self mainScreen];
  id v2 = [v1 traitCollection];

  LODWORD(v1) = [v2 crl_isUserInterfaceStyleDark];
  id v3 = (CGColor *)[v0 CGColor];
  double v4 = sub_10001056C(v3);

  if (!v1)
  {
    if (v4 <= 0.8) {
      goto LABEL_5;
    }
    return 1;
  }
  if (v4 < 0.4) {
    return 1;
  }
LABEL_5:
  double v5 = (CGColor *)[v0 CGColor];
  BOOL v6 = sub_10001054C(v5);

  if (v6) {
    return 1;
  }
  uint64_t v8 = (CGColor *)[v0 CGColor];
  AlphCATransform3D a = CGColorGetAlpha(v8);

  return Alpha < 0.1;
}

id sub_100B04C20(char a1, unint64_t a2, void *a3)
{
  if (a3)
  {
    double v4 = v3;
    id v7 = 0;
    switch(a1)
    {
      case 2:
        unint64_t v44 = 0x8000000101271A20;
        id v8 = a3;
        v9._countAndFlagsBits = 45;
        v9._object = (void *)0xE100000000000000;
        String.append(_:)(v9);
        if (!__OFADD__(a2, 1)) {
          goto LABEL_7;
        }
        __break(1u);
        goto LABEL_6;
      case 3:
LABEL_6:
        unint64_t v44 = 0x8000000101271A40;
        id v10 = a3;
        v11._countAndFlagsBits = 45;
        v11._object = (void *)0xE100000000000000;
        String.append(_:)(v11);
        if (__OFADD__(a2, 1))
        {
          __break(1u);
          goto LABEL_27;
        }
LABEL_7:
        v12._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
        String.append(_:)(v12);
        swift_bridgeObjectRelease();
        unint64_t v13 = 0xD000000000000017;
        a2 = v44;
LABEL_12:
        unint64_t v42 = v13;
        unint64_t v43 = v13;
        swift_bridgeObjectRetain();
        v18._countAndFlagsBits = 95;
        v18._object = (void *)0xE100000000000000;
        String.append(_:)(v18);
        CGColorRef.components.getter();
        v19._countAndFlagsBits = Array.description.getter();
        String.append(_:)(v19);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v20 = v3[3];
        if (v20)
        {
          if (id v7 = (id)v4[4], v43 == v4[2]) && v20 == a2 || (_stringCompareWithSmolCheck(_:_:expecting:)())
          {
            swift_bridgeObjectRetain();
            id v21 = v7;

            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            return v7;
          }
        }
        swift_bridgeObjectRetain();
        NSString v22 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        id v23 = [self imageNamed:v22];

        if (v23)
        {
          id v24 = [objc_allocWithZone((Class)CRLImage) initWithUIImage:v23];
          if (v24)
          {
            uint64_t v25 = v24;
            uint64_t v41 = v23;
            id v26 = objc_allocWithZone((Class)CRLColor);
            id v27 = v25;
            id v28 = [v26 initWithCGColor:a3];
            [v28 alphaComponent];
            uint64_t v39 = v28;
            uint64_t v40 = v27;
            id v7 = [v27 compositedImageWithColor:v28 alpha:20];
            uint64_t v30 = v4[2];
            uint64_t v29 = v4[3];
            id v31 = (void *)v4[4];
            v4[2] = v43;
            v4[3] = a2;
            void v4[4] = v7;
            id v32 = v7;
            sub_100B0533C(v30, v29, v31);
            if (qword_10166FAF0 == -1)
            {
LABEL_20:
              swift_beginAccess();
              uint64_t v33 = (void *)static OS_os_log.crlPencilHover;
              sub_1005057FC((uint64_t *)&unk_101672B40);
              uint64_t inited = swift_initStackObject();
              *(_OWORD *)(inited + 16) = xmmword_10117D8C0;
              id v35 = v33;
              _print_unlocked<A, B>(_:_:)();
              *(void *)(inited + 56) = &type metadata for String;
              unint64_t v36 = sub_100528BE4();
              *(void *)(inited + 32) = 0;
              *(void *)(inited + 40) = 0xE000000000000000;
              *(void *)(inited + 96) = &type metadata for String;
              *(void *)(inited + 104) = v36;
              *(void *)(inited + 64) = v36;
              *(void *)(inited + 72) = v42;
              *(void *)(inited + 80) = a2;
              uint64_t v37 = static os_log_type_t.debug.getter();
              sub_100BAC898((uint64_t)v35, (uint64_t)&_mh_execute_header, v37, (uint64_t)"preview image loaded for %@: %@", 31, 2, inited);

              swift_setDeallocating();
              sub_1005057FC(&qword_101672B50);
              swift_arrayDestroy();

              return v7;
            }
LABEL_27:
            swift_once();
            goto LABEL_20;
          }
          sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"tintedImage(for:strokeWidthIndex:tintColor:)", 44, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLiOSPencilHoverPreviewImageProvider.swift", 108, 2, 28, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
          sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"tintedImage(for:strokeWidthIndex:tintColor:)", 44, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLiOSPencilHoverPreviewImageProvider.swift", 108, 2, 28);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        else
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }

        break;
      case 4:
        id v14 = a3;
        unint64_t v13 = 0xD000000000000015;
        id v15 = "sf_drawing_hover_fill";
        goto LABEL_11;
      case 5:
        id v16 = a3;
        unint64_t v13 = 0xD00000000000001DLL;
        id v15 = "sf_drawing_hover_objecteraser";
        goto LABEL_11;
      case 7:
        id v17 = a3;
        unint64_t v13 = 0xD000000000000016;
        id v15 = "sf_drawing_hover_lasso";
LABEL_11:
        a2 = (unint64_t)(v15 - 32) | 0x8000000000000000;
        goto LABEL_12;
      default:
        return v7;
    }
  }
  return 0;
}

uint64_t sub_100B051A4()
{
  sub_100B0533C(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void **)(v0 + 32));

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for CRLiOSPencilHoverPreviewImageProvider()
{
  return self;
}

void destroy for CRLiOSPencilHoverPreviewImageProvider.CachedImage(uint64_t a1)
{
  swift_bridgeObjectRelease();
  id v2 = *(void **)(a1 + 16);
}

void *_s8Freeform37CRLiOSPencilHoverPreviewImageProviderC11CachedImageVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  double v4 = (void *)a2[2];
  a1[2] = v4;
  swift_bridgeObjectRetain();
  id v5 = v4;
  return a1;
}

void *assignWithCopy for CRLiOSPencilHoverPreviewImageProvider.CachedImage(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  double v4 = (void *)a2[2];
  id v5 = (void *)a1[2];
  a1[2] = v4;
  id v6 = v4;

  return a1;
}

uint64_t assignWithTake for CRLiOSPencilHoverPreviewImageProvider.CachedImage(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  double v4 = *(void **)(a1 + 16);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);

  return a1;
}

ValueMetadata *type metadata accessor for CRLiOSPencilHoverPreviewImageProvider.CachedImage()
{
  return &type metadata for CRLiOSPencilHoverPreviewImageProvider.CachedImage;
}

void sub_100B0533C(uint64_t a1, uint64_t a2, void *a3)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_100B05380()
{
  sub_100B07C2C(v0, (uint64_t)__src);
  memcpy(__dst, __src, sizeof(__dst));
  type metadata accessor for CRContext();
  uint64_t v6 = 0;
  memset(v5, 0, sizeof(v5));
  id v1 = (void *)static CRContext.newTransientContext(uniqueAssetManager:encryptionDelegate:)();
  sub_100B0C9AC((uint64_t)v5);
  if (qword_10166EE10 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for CRCodableVersion();
  sub_100556B74(v2, (uint64_t)qword_10171A2D8);
  sub_100B06890();
  uint64_t v3 = CRValue.serializedData(_:version:)();

  sub_100B0C5F0((uint64_t)__src);
  return v3;
}

uint64_t sub_100B05534(char a1)
{
  uint64_t result = 0xD00000000000001CLL;
  switch(a1)
  {
    case 1:
    case 5:
    case 8:
    case 24:
      return 0xD000000000000011;
    case 2:
      return 0xD000000000000013;
    case 3:
      return 0xD000000000000019;
    case 4:
      uint64_t v3 = 0x6C69636E6570;
      goto LABEL_21;
    case 6:
      return 0xD000000000000017;
    case 7:
      uint64_t v3 = 0x6E6F79617263;
      goto LABEL_21;
    case 9:
      return 0xD000000000000017;
    case 10:
    case 11:
      return 0x6C6F6F546C6C6966;
    case 12:
      return 0xD000000000000015;
    case 13:
      return 0xD00000000000001CLL;
    case 14:
      return 0x436C6F6F546E6570;
    case 15:
      return 0x4F6C6F6F546E6570;
    case 16:
      return 0xD000000000000014;
    case 17:
      return 0xD000000000000013;
    case 18:
      return 0xD000000000000015;
    case 19:
      return 0xD00000000000001BLL;
    case 20:
      return 0xD000000000000014;
    case 21:
      return 0xD000000000000016;
    case 22:
      return 0xD00000000000001CLL;
    case 23:
      uint64_t v3 = 0x72656B72616DLL;
LABEL_21:
      uint64_t result = v3 & 0xFFFFFFFFFFFFLL | 0x6F54000000000000;
      break;
    case 25:
      uint64_t result = 0xD000000000000017;
      break;
    case 26:
      uint64_t result = 0xD000000000000013;
      break;
    case 27:
      uint64_t result = 0xD000000000000010;
      break;
    default:
      return result;
  }
  return result;
}

BOOL sub_100B057F0(char *a1, char *a2)
{
  return qword_1011A7EF8[*a1] == qword_1011A7EF8[*a2];
}

Swift::Int sub_100B05814()
{
  uint64_t v1 = *v0;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(qword_1011A7EF8[v1]);
  return Hasher._finalize()();
}

void sub_100B05864()
{
  Hasher._combine(_:)(qword_1011A7EF8[*v0]);
}

Swift::Int sub_100B0589C()
{
  uint64_t v1 = *v0;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(qword_1011A7EF8[v1]);
  return Hasher._finalize()();
}

uint64_t sub_100B058E8@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_100B08574(*a1);
  *a2 = result;
  return result;
}

void sub_100B05914(void *a1@<X8>)
{
  *a1 = qword_1011A7EF8[*v1];
}

uint64_t sub_100B0592C()
{
  return sub_100B05534(*v0);
}

uint64_t sub_100B05934@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100B08598(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_100B0595C()
{
  return qword_1011A7EF8[*v0];
}

uint64_t sub_100B05974@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_100B08574(a1);
  *a2 = result;
  return result;
}

void sub_100B0599C(void *a1@<X8>)
{
  *a1 = &off_101503678;
}

uint64_t sub_100B059AC(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_100B0ED68();
  unint64_t v5 = sub_100B0EDC0();

  return static CodingKey<>.intCases.getter(a1, a2, v4, v5);
}

uint64_t sub_100B05A04(uint64_t a1)
{
  unint64_t v2 = sub_100B0EDC0();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100B05A40(uint64_t a1)
{
  unint64_t v2 = sub_100B0EDC0();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100B05A7C(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_1005057FC(&qword_101692478);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5, v7);
  Swift::String v9 = (char *)v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10050F848(a1, a1[3]);
  sub_100B0EDC0();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  sub_10051B3EC(v3, (uint64_t)v37, &qword_1016923D8);
  sub_10051B3EC((uint64_t)v37, (uint64_t)v27, &qword_1016923D8);
  char v38 = 0;
  sub_1005057FC(&qword_1016923F0);
  sub_100A22280(&qword_101692480, &qword_1016923F0);
  KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
  if (!v2)
  {
    sub_10051B3EC(v3 + 16, (uint64_t)v36, &qword_101692488);
    sub_10051B3EC((uint64_t)v36, (uint64_t)v27, &qword_101692488);
    char v38 = 1;
    sub_1007B1FF8();
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
    char v10 = *(unsigned char *)(v3 + 108);
    LOBYTE(v27[0]) = 2;
    char v38 = v10;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    char v11 = *(unsigned char *)(v3 + 116);
    LOBYTE(v27[0]) = 3;
    char v38 = v11;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    sub_10051B3EC(v3 + 224, (uint64_t)v35, &qword_101692488);
    sub_10051B3EC((uint64_t)v35, (uint64_t)v27, &qword_101692488);
    char v38 = 4;
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
    char v12 = *(unsigned char *)(v3 + 316);
    LOBYTE(v27[0]) = 5;
    char v38 = v12;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    char v13 = *(unsigned char *)(v3 + 324);
    LOBYTE(v27[0]) = 6;
    char v38 = v13;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    sub_10051B3EC(v3 + 328, (uint64_t)v34, &qword_101692488);
    sub_10051B3EC((uint64_t)v34, (uint64_t)v27, &qword_101692488);
    char v38 = 7;
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
    char v14 = *(unsigned char *)(v3 + 420);
    LOBYTE(v27[0]) = 8;
    char v38 = v14;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    char v15 = *(unsigned char *)(v3 + 428);
    LOBYTE(v27[0]) = 9;
    char v38 = v15;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    sub_10051B3EC(v3 + 744, (uint64_t)v33, &qword_101692488);
    sub_10051B3EC((uint64_t)v33, (uint64_t)v27, &qword_101692488);
    char v38 = 10;
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
    char v16 = *(unsigned char *)(v3 + 836);
    LOBYTE(v27[0]) = 11;
    char v38 = v16;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    char v17 = *(unsigned char *)(v3 + 844);
    LOBYTE(v27[0]) = 12;
    char v38 = v17;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    LOBYTE(v27[0]) = 13;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    sub_10051B3EC(v3 + 120, (uint64_t)v32, &qword_101692488);
    sub_10051B3EC((uint64_t)v32, (uint64_t)v27, &qword_101692488);
    char v38 = 14;
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
    char v18 = *(unsigned char *)(v3 + 212);
    LOBYTE(v27[0]) = 15;
    char v38 = v18;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    char v19 = *(unsigned char *)(v3 + 220);
    LOBYTE(v27[0]) = 16;
    char v38 = v19;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    sub_10051B3EC(v3 + 432, (uint64_t)v31, &qword_101692488);
    sub_10051B3EC((uint64_t)v31, (uint64_t)v27, &qword_101692488);
    char v38 = 17;
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
    char v20 = *(unsigned char *)(v3 + 524);
    LOBYTE(v27[0]) = 18;
    char v38 = v20;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    char v21 = *(unsigned char *)(v3 + 532);
    LOBYTE(v27[0]) = 19;
    char v38 = v21;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    sub_10051B3EC(v3 + 536, (uint64_t)v30, &qword_101692488);
    sub_10051B3EC((uint64_t)v30, (uint64_t)v27, &qword_101692488);
    char v38 = 20;
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
    char v22 = *(unsigned char *)(v3 + 628);
    LOBYTE(v27[0]) = 21;
    char v38 = v22;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    char v23 = *(unsigned char *)(v3 + 636);
    LOBYTE(v27[0]) = 22;
    char v38 = v23;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    sub_10051B3EC(v3 + 640, (uint64_t)v29, &qword_101692488);
    sub_10051B3EC((uint64_t)v29, (uint64_t)v27, &qword_101692488);
    char v38 = 23;
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
    char v24 = *(unsigned char *)(v3 + 732);
    LOBYTE(v27[0]) = 24;
    char v38 = v24;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    char v25 = *(unsigned char *)(v3 + 740);
    LOBYTE(v27[0]) = 25;
    char v38 = v25;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    sub_10051B3EC(v3 + 848, (uint64_t)v28, &qword_1016923E0);
    sub_10051B3EC((uint64_t)v28, (uint64_t)v27, &qword_1016923E0);
    char v38 = 26;
    sub_1005057FC(&qword_1016923E8);
    sub_100A22280(&qword_101692490, &qword_1016923E8);
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
    v27[0] = *(void *)(v3 + 864);
    char v38 = 27;
    sub_1005057FC((uint64_t *)&unk_101687A40);
    sub_1005573B0();
    KeyedEncodingContainer.encode<A>(_:forKey:)();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v5);
}

uint64_t sub_100B06398()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_100B063A0(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 864) = a1;
  return result;
}

Freeform::SyncEvent::FetchedRecordZoneChanges::Deletion (__swiftcall *sub_100B063CC())(CKRecordID recordID, Swift::String recordType)
{
  return SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:);
}

uint64_t sub_100B063EC(void *__src, const void *a2)
{
  memcpy(v4, __src, sizeof(v4));
  memcpy(__dst, a2, sizeof(__dst));
  return sub_100B068E4(v4, __dst) & 1;
}

void *sub_100B06444@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t result = sub_100B0904C(a1, __src);
  if (!v2) {
    return memcpy(a2, __src, 0x368uLL);
  }
  return result;
}

uint64_t sub_100B06498(void *a1)
{
  memcpy(__dst, v1, sizeof(__dst));
  return sub_100B05A7C(a1);
}

uint64_t sub_100B064EC(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_100B0F450();

  return CRExtendableValueStruct.copy(renamingReferences:)(a1, a2, v4);
}

uint64_t sub_100B06540(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_100B0F450();

  return CRExtendableValueStruct.copy(renamingReferences:)(a1, a2, v4);
}

uint64_t sub_100B06594(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_100B06890();
  unint64_t v7 = sub_100B0F4A4();

  return CRValue<>.observableDifference(from:with:)(a1, a2, a3, v6, v7);
}

uint64_t sub_100B06604(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_100B0F450();

  return CRExtendableValueStruct.visitReferences(_:)(a1, a2, v4);
}

uint64_t sub_100B06650()
{
  return CRValueStruct.init(from:)();
}

uint64_t sub_100B066A0()
{
  return CRValueStruct.encode(to:)();
}

uint64_t sub_100B066E8(uint64_t a1)
{
  unint64_t v2 = sub_100B0EF28();

  return CRValueStruct.minEncodingVersion.getter(a1, v2);
}

id sub_100B06734(uint64_t a1, unint64_t a2)
{
  sub_100510D4C(a1, a2);
  sub_100B06890();
  CRValue.init(serializedData:)();
  memcpy(__dst, __src, sizeof(__dst));
  id v4 = sub_100B0B9E4((uint64_t)__dst);
  sub_100B0C5F0((uint64_t)__dst);
  sub_100510084(a1, a2);
  return v4;
}

unint64_t sub_100B06890()
{
  unint64_t result = qword_1016923D0;
  if (!qword_1016923D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016923D0);
  }
  return result;
}

uint64_t sub_100B068E4(float *a1, uint64_t *a2)
{
  sub_10051B3EC((uint64_t)a1, (uint64_t)v269, &qword_1016923D8);
  uint64_t v4 = *a2;
  int v5 = *((unsigned __int8 *)a2 + 8);
  sub_10051B3EC((uint64_t)v269, (uint64_t)v449, &qword_1016923D8);
  if (v449[8] == 255)
  {
    if (v5 != 255) {
      goto LABEL_14;
    }
  }
  else
  {
    sub_10051B3EC((uint64_t)v449, (uint64_t)v450, &qword_1016923F0);
    sub_10051B3EC((uint64_t)v269, (uint64_t)&v246, &qword_1016923D8);
    if (v5 == 255) {
      goto LABEL_14;
    }
    uint64_t v438 = v4;
    LOBYTE(v439) = v5 & 1;
    sub_1006C91C8();
    if ((static CRExtensible.== infix(_:_:)() & 1) == 0) {
      goto LABEL_14;
    }
  }
  uint64_t v6 = *((void *)a1 + 2);
  uint64_t v7 = *((void *)a1 + 3);
  uint64_t v8 = *((void *)a1 + 4);
  uint64_t v9 = *((void *)a1 + 5);
  uint64_t v10 = *((void *)a1 + 6);
  uint64_t v11 = *((void *)a1 + 7);
  uint64_t v12 = *((void *)a1 + 8);
  uint64_t v13 = *((void *)a1 + 9);
  uint64_t v14 = *((void *)a1 + 10);
  uint64_t v15 = *((void *)a1 + 11);
  v242 = a1;
  v243 = a2;
  uint64_t v16 = *((void *)a1 + 12);
  uint64_t v17 = a2[2];
  uint64_t v18 = a2[3];
  uint64_t v20 = a2[4];
  uint64_t v19 = a2[5];
  uint64_t v22 = a2[6];
  uint64_t v21 = a2[7];
  uint64_t v23 = a2[8];
  uint64_t v24 = a2[9];
  uint64_t v25 = a2[10];
  uint64_t v26 = a2[11];
  uint64_t v27 = a2[12];
  if (!v16)
  {
    if (!v27) {
      goto LABEL_16;
    }
LABEL_11:
    uint64_t v246 = v6;
    uint64_t v247 = v7;
    uint64_t v248 = v8;
    uint64_t v249 = v9;
    uint64_t v250 = v10;
    uint64_t v251 = v11;
    uint64_t v252 = v12;
    uint64_t v253 = v13;
    uint64_t v254 = v14;
    uint64_t v255 = v15;
    uint64_t v256 = v16;
    uint64_t v257 = v17;
    uint64_t v258 = v18;
    uint64_t v259 = v20;
    uint64_t v260 = v19;
    uint64_t v261 = v22;
    uint64_t v262 = v21;
    uint64_t v263 = v23;
    uint64_t v264 = v24;
    uint64_t v265 = v25;
    uint64_t v266 = v26;
    uint64_t v267 = v27;
    uint64_t v244 = v24;
    uint64_t v31 = v21;
    uint64_t v32 = v22;
    uint64_t v33 = v19;
    uint64_t v34 = v25;
    sub_100B0EFD4(v6, v7, v8, v9, v10, v11, v12, v13, v14, v15, v16);
LABEL_12:
    sub_100B0EFD4(v17, v18, v20, v33, v32, v31, v23, v244, v34, v26, v27);
LABEL_13:
    sub_100B0F044((uint64_t)&v246);
    goto LABEL_14;
  }
  if (!v27) {
    goto LABEL_11;
  }
  int v426 = v6;
  char v427 = BYTE4(v6) & 1;
  uint64_t v428 = v7;
  uint64_t v429 = v8;
  uint64_t v430 = v9;
  uint64_t v431 = v10;
  uint64_t v432 = v11;
  uint64_t v433 = v12;
  uint64_t v434 = v13;
  uint64_t v435 = v14;
  uint64_t v436 = v15;
  uint64_t v437 = v16;
  uint64_t v162 = v17;
  LODWORD(v438) = v17;
  BYTE4(v438) = BYTE4(v17) & 1;
  uint64_t v439 = v18;
  uint64_t v440 = v20;
  uint64_t v441 = v19;
  uint64_t v442 = v22;
  uint64_t v443 = v21;
  uint64_t v444 = v23;
  uint64_t v445 = v24;
  uint64_t v446 = v25;
  uint64_t v447 = v26;
  uint64_t v448 = v27;
  uint64_t v154 = v16;
  uint64_t v194 = v6;
  uint64_t v202 = v7;
  uint64_t v210 = v8;
  uint64_t v218 = v9;
  uint64_t v226 = v10;
  uint64_t v231 = v11;
  uint64_t v236 = v12;
  uint64_t v239 = v13;
  uint64_t v28 = v23;
  uint64_t v29 = v21;
  uint64_t v178 = v15;
  uint64_t v186 = v14;
  uint64_t v30 = v25;
  sub_100B0EFD4(v6, v7, v8, v9, v10, v11, v12, v13, v14, v15, v16);
  sub_100B0EFD4(v162, v18, v20, v19, v22, v29, v28, v24, v30, v26, v27);
  char v170 = sub_1007B049C(&v426, &v438);
  sub_100B0C93C(v162, v18, v20, v19, v22, v29, v28, v24, v30, v26, v27);
  sub_100B0C93C(v194, v202, v210, v218, v226, v231, v236, v239, v186, v178, v154);
  if ((v170 & 1) == 0) {
    goto LABEL_14;
  }
LABEL_16:
  char v37 = *((unsigned char *)v243 + 108);
  if ((_BYTE)v242[27])
  {
    if (!*((unsigned char *)v243 + 108)) {
      goto LABEL_14;
    }
  }
  else
  {
    if (v242[26] != *((float *)v243 + 26)) {
      char v37 = 1;
    }
    if (v37) {
      goto LABEL_14;
    }
  }
  char v38 = *((unsigned char *)v243 + 116);
  if ((_BYTE)v242[29])
  {
    if (!*((unsigned char *)v243 + 116)) {
      goto LABEL_14;
    }
  }
  else
  {
    if (v242[28] != *((float *)v243 + 28)) {
      char v38 = 1;
    }
    if (v38) {
      goto LABEL_14;
    }
  }
  uint64_t v39 = *((void *)v242 + 15);
  uint64_t v40 = *((void *)v242 + 16);
  uint64_t v41 = *((void *)v242 + 17);
  uint64_t v42 = *((void *)v242 + 18);
  uint64_t v43 = *((void *)v242 + 19);
  uint64_t v44 = *((void *)v242 + 20);
  uint64_t v45 = *((void *)v242 + 21);
  uint64_t v46 = *((void *)v242 + 22);
  uint64_t v47 = *((void *)v242 + 23);
  uint64_t v48 = *((void *)v242 + 24);
  uint64_t v49 = *((void *)v242 + 25);
  uint64_t v17 = v243[15];
  uint64_t v18 = v243[16];
  uint64_t v20 = v243[17];
  uint64_t v50 = v243[18];
  uint64_t v52 = v243[19];
  uint64_t v51 = v243[20];
  uint64_t v23 = v243[21];
  uint64_t v53 = v243[22];
  uint64_t v54 = v243[23];
  uint64_t v26 = v243[24];
  uint64_t v27 = v243[25];
  if (v49)
  {
    if (!v27) {
      goto LABEL_33;
    }
    int v402 = *((void *)v242 + 15);
    char v403 = BYTE4(v39) & 1;
    uint64_t v404 = v40;
    uint64_t v405 = v41;
    uint64_t v406 = v42;
    uint64_t v407 = v43;
    uint64_t v408 = v44;
    uint64_t v409 = v45;
    uint64_t v410 = v46;
    uint64_t v411 = v47;
    uint64_t v412 = v48;
    uint64_t v413 = v49;
    uint64_t v163 = v17;
    int v414 = v17;
    char v415 = BYTE4(v17) & 1;
    uint64_t v416 = v18;
    uint64_t v417 = v20;
    uint64_t v418 = v50;
    uint64_t v419 = v52;
    uint64_t v420 = v51;
    uint64_t v421 = v23;
    uint64_t v422 = v53;
    uint64_t v423 = v54;
    uint64_t v424 = v26;
    uint64_t v155 = v49;
    uint64_t v425 = v27;
    uint64_t v195 = v39;
    uint64_t v203 = v40;
    uint64_t v211 = v41;
    uint64_t v219 = v42;
    uint64_t v227 = v43;
    uint64_t v232 = v44;
    uint64_t v237 = v45;
    uint64_t v240 = v46;
    uint64_t v55 = v23;
    uint64_t v56 = v51;
    uint64_t v179 = v48;
    uint64_t v187 = v47;
    uint64_t v57 = v54;
    sub_100B0EFD4(v39, v40, v41, v42, v43, v44, v45, v46, v47, v48, v49);
    sub_100B0EFD4(v163, v18, v20, v50, v52, v56, v55, v53, v57, v26, v27);
    char v171 = sub_1007B049C(&v402, &v414);
    sub_100B0C93C(v163, v18, v20, v50, v52, v56, v55, v53, v57, v26, v27);
    sub_100B0C93C(v195, v203, v211, v219, v227, v232, v237, v240, v187, v179, v155);
    if ((v171 & 1) == 0) {
      goto LABEL_14;
    }
  }
  else if (v27)
  {
    goto LABEL_33;
  }
  char v58 = *((unsigned char *)v243 + 212);
  if ((_BYTE)v242[53])
  {
    if (!*((unsigned char *)v243 + 212)) {
      goto LABEL_14;
    }
  }
  else
  {
    if (v242[52] != *((float *)v243 + 52)) {
      char v58 = 1;
    }
    if (v58) {
      goto LABEL_14;
    }
  }
  char v59 = *((unsigned char *)v243 + 220);
  if ((_BYTE)v242[55])
  {
    if (!*((unsigned char *)v243 + 220)) {
      goto LABEL_14;
    }
  }
  else
  {
    if (v242[54] != *((float *)v243 + 54)) {
      char v59 = 1;
    }
    if (v59) {
      goto LABEL_14;
    }
  }
  uint64_t v39 = *((void *)v242 + 28);
  uint64_t v40 = *((void *)v242 + 29);
  uint64_t v41 = *((void *)v242 + 30);
  uint64_t v42 = *((void *)v242 + 31);
  uint64_t v43 = *((void *)v242 + 32);
  uint64_t v44 = *((void *)v242 + 33);
  uint64_t v45 = *((void *)v242 + 34);
  uint64_t v46 = *((void *)v242 + 35);
  uint64_t v47 = *((void *)v242 + 36);
  uint64_t v48 = *((void *)v242 + 37);
  uint64_t v49 = *((void *)v242 + 38);
  uint64_t v17 = v243[28];
  uint64_t v18 = v243[29];
  uint64_t v20 = v243[30];
  uint64_t v50 = v243[31];
  uint64_t v52 = v243[32];
  uint64_t v51 = v243[33];
  uint64_t v23 = v243[34];
  uint64_t v53 = v243[35];
  uint64_t v54 = v243[36];
  uint64_t v26 = v243[37];
  uint64_t v27 = v243[38];
  if (!v49)
  {
    if (!v27) {
      goto LABEL_51;
    }
    goto LABEL_33;
  }
  if (!v27)
  {
LABEL_33:
    uint64_t v246 = v39;
    uint64_t v247 = v40;
    uint64_t v248 = v41;
    uint64_t v249 = v42;
    uint64_t v250 = v43;
    uint64_t v251 = v44;
    uint64_t v252 = v45;
    uint64_t v253 = v46;
    uint64_t v254 = v47;
    uint64_t v255 = v48;
    uint64_t v256 = v49;
    uint64_t v257 = v17;
    uint64_t v258 = v18;
    uint64_t v259 = v20;
    uint64_t v260 = v50;
    uint64_t v261 = v52;
    uint64_t v262 = v51;
    uint64_t v263 = v23;
    uint64_t v264 = v53;
    uint64_t v265 = v54;
    uint64_t v266 = v26;
    uint64_t v267 = v27;
    uint64_t v244 = v53;
    uint64_t v31 = v51;
    uint64_t v32 = v52;
    uint64_t v33 = v50;
    uint64_t v34 = v54;
    sub_100B0EFD4(v39, v40, v41, v42, v43, v44, v45, v46, v47, v48, v49);
    goto LABEL_12;
  }
  int v378 = *((void *)v242 + 28);
  char v379 = BYTE4(v39) & 1;
  uint64_t v380 = v40;
  uint64_t v381 = v41;
  uint64_t v382 = v42;
  uint64_t v383 = v43;
  uint64_t v384 = v44;
  uint64_t v385 = v45;
  uint64_t v386 = v46;
  uint64_t v387 = v47;
  uint64_t v388 = v48;
  uint64_t v389 = v49;
  uint64_t v164 = v17;
  int v390 = v17;
  char v391 = BYTE4(v17) & 1;
  uint64_t v392 = v18;
  uint64_t v393 = v20;
  uint64_t v394 = v50;
  uint64_t v395 = v52;
  uint64_t v396 = v51;
  uint64_t v397 = v23;
  uint64_t v398 = v53;
  uint64_t v399 = v54;
  uint64_t v400 = v26;
  uint64_t v156 = v49;
  uint64_t v401 = v27;
  uint64_t v196 = v39;
  uint64_t v204 = v40;
  uint64_t v212 = v41;
  uint64_t v220 = v42;
  uint64_t v228 = v43;
  uint64_t v233 = v44;
  uint64_t v238 = v45;
  uint64_t v241 = v46;
  uint64_t v60 = v23;
  uint64_t v61 = v51;
  uint64_t v180 = v48;
  uint64_t v188 = v47;
  uint64_t v62 = v54;
  sub_100B0EFD4(v39, v40, v41, v42, v43, v44, v45, v46, v47, v48, v49);
  sub_100B0EFD4(v164, v18, v20, v50, v52, v61, v60, v53, v62, v26, v27);
  char v172 = sub_1007B049C(&v378, &v390);
  sub_100B0C93C(v164, v18, v20, v50, v52, v61, v60, v53, v62, v26, v27);
  sub_100B0C93C(v196, v204, v212, v220, v228, v233, v238, v241, v188, v180, v156);
  if ((v172 & 1) == 0) {
    goto LABEL_14;
  }
LABEL_51:
  char v63 = *((unsigned char *)v243 + 316);
  if ((_BYTE)v242[79])
  {
    if (!*((unsigned char *)v243 + 316)) {
      goto LABEL_14;
    }
  }
  else
  {
    if (v242[78] != *((float *)v243 + 78)) {
      char v63 = 1;
    }
    if (v63) {
      goto LABEL_14;
    }
  }
  char v64 = *((unsigned char *)v243 + 324);
  if ((_BYTE)v242[81])
  {
    if (!*((unsigned char *)v243 + 324)) {
      goto LABEL_14;
    }
  }
  else
  {
    if (v242[80] != *((float *)v243 + 80)) {
      char v64 = 1;
    }
    if (v64) {
      goto LABEL_14;
    }
  }
  uint64_t v65 = *((void *)v242 + 41);
  uint64_t v66 = *((void *)v242 + 42);
  uint64_t v67 = *((void *)v242 + 43);
  uint64_t v68 = *((void *)v242 + 44);
  uint64_t v69 = *((void *)v242 + 45);
  uint64_t v70 = *((void *)v242 + 46);
  uint64_t v71 = *((void *)v242 + 47);
  uint64_t v72 = *((void *)v242 + 48);
  uint64_t v73 = *((void *)v242 + 49);
  uint64_t v74 = *((void *)v242 + 50);
  uint64_t v75 = *((void *)v242 + 51);
  uint64_t v76 = v243[41];
  uint64_t v18 = v243[42];
  uint64_t v77 = v243[43];
  uint64_t v78 = v243[44];
  uint64_t v80 = v243[45];
  uint64_t v79 = v243[46];
  uint64_t v23 = v243[47];
  uint64_t v81 = v243[48];
  uint64_t v82 = v243[49];
  uint64_t v26 = v243[50];
  uint64_t v27 = v243[51];
  if (!v75)
  {
    if (!v27) {
      goto LABEL_69;
    }
    goto LABEL_68;
  }
  if (!v27)
  {
LABEL_68:
    uint64_t v246 = *((void *)v242 + 41);
    uint64_t v247 = v66;
    uint64_t v248 = v67;
    uint64_t v249 = v68;
    uint64_t v250 = v69;
    uint64_t v251 = v70;
    uint64_t v252 = v71;
    uint64_t v253 = v72;
    uint64_t v254 = v73;
    uint64_t v255 = v74;
    uint64_t v256 = v75;
    uint64_t v257 = v76;
    uint64_t v87 = v76;
    uint64_t v258 = v18;
    uint64_t v259 = v77;
    uint64_t v260 = v78;
    uint64_t v261 = v80;
    uint64_t v262 = v79;
    uint64_t v263 = v23;
    uint64_t v264 = v81;
    uint64_t v265 = v82;
    uint64_t v266 = v26;
    uint64_t v267 = v27;
    uint64_t v135 = v75;
    uint64_t v244 = v81;
    uint64_t v31 = v79;
    uint64_t v32 = v80;
    uint64_t v33 = v78;
    uint64_t v20 = v77;
    uint64_t v17 = v87;
    uint64_t v34 = v82;
    sub_100B0EFD4(v65, v66, v67, v68, v69, v70, v71, v72, v73, v74, v135);
    goto LABEL_12;
  }
  int v354 = *((void *)v242 + 41);
  char v355 = BYTE4(v65) & 1;
  uint64_t v356 = v66;
  uint64_t v357 = v67;
  uint64_t v358 = v68;
  uint64_t v359 = v69;
  uint64_t v360 = v70;
  uint64_t v361 = v71;
  uint64_t v362 = v72;
  uint64_t v363 = v73;
  uint64_t v364 = v74;
  uint64_t v365 = v75;
  uint64_t v149 = v76;
  int v366 = v76;
  char v367 = BYTE4(v76) & 1;
  uint64_t v368 = v18;
  uint64_t v369 = v77;
  uint64_t v370 = v78;
  uint64_t v371 = v80;
  uint64_t v372 = v79;
  uint64_t v373 = v23;
  uint64_t v374 = v81;
  uint64_t v375 = v82;
  uint64_t v376 = v26;
  uint64_t v144 = v75;
  uint64_t v377 = v27;
  uint64_t v134 = v75;
  uint64_t v181 = v65;
  uint64_t v189 = v66;
  uint64_t v197 = v67;
  uint64_t v205 = v68;
  uint64_t v213 = v69;
  uint64_t v221 = v70;
  uint64_t v229 = v71;
  uint64_t v234 = v72;
  uint64_t v83 = v23;
  uint64_t v84 = v79;
  uint64_t v165 = v74;
  uint64_t v173 = v73;
  uint64_t v85 = v77;
  uint64_t v86 = v82;
  sub_100B0EFD4(v65, v66, v67, v68, v69, v70, v71, v72, v73, v74, v134);
  sub_100B0EFD4(v149, v18, v85, v78, v80, v84, v83, v81, v86, v26, v27);
  char v157 = sub_1007B049C(&v354, &v366);
  sub_100B0C93C(v149, v18, v85, v78, v80, v84, v83, v81, v86, v26, v27);
  sub_100B0C93C(v181, v189, v197, v205, v213, v221, v229, v234, v173, v165, v144);
  if ((v157 & 1) == 0) {
    goto LABEL_14;
  }
LABEL_69:
  char v88 = *((unsigned char *)v243 + 420);
  if ((_BYTE)v242[105])
  {
    if (!*((unsigned char *)v243 + 420)) {
      goto LABEL_14;
    }
  }
  else
  {
    if (v242[104] != *((float *)v243 + 104)) {
      char v88 = 1;
    }
    if (v88) {
      goto LABEL_14;
    }
  }
  char v89 = *((unsigned char *)v243 + 428);
  if ((_BYTE)v242[107])
  {
    if (!*((unsigned char *)v243 + 428)) {
      goto LABEL_14;
    }
  }
  else
  {
    if (v242[106] != *((float *)v243 + 106)) {
      char v89 = 1;
    }
    if (v89) {
      goto LABEL_14;
    }
  }
  uint64_t v90 = *((void *)v242 + 54);
  uint64_t v91 = *((void *)v242 + 55);
  uint64_t v92 = *((void *)v242 + 56);
  uint64_t v93 = *((void *)v242 + 57);
  uint64_t v94 = *((void *)v242 + 58);
  uint64_t v95 = *((void *)v242 + 59);
  uint64_t v96 = *((void *)v242 + 60);
  uint64_t v97 = *((void *)v242 + 61);
  uint64_t v98 = *((void *)v242 + 62);
  uint64_t v99 = *((void *)v242 + 63);
  uint64_t v100 = *((void *)v242 + 64);
  uint64_t v101 = v243[54];
  uint64_t v102 = v243[55];
  uint64_t v103 = v243[56];
  uint64_t v104 = v243[57];
  uint64_t v106 = v243[58];
  uint64_t v105 = v243[59];
  uint64_t v108 = v243[60];
  uint64_t v107 = v243[61];
  uint64_t v109 = v243[62];
  uint64_t v110 = v243[63];
  uint64_t v111 = v243[64];
  if (v100)
  {
    if (!v111) {
      goto LABEL_86;
    }
    int v330 = *((void *)v242 + 54);
    uint64_t v214 = v97;
    uint64_t v222 = v90;
    char v331 = BYTE4(v90) & 1;
    uint64_t v332 = v91;
    uint64_t v166 = v91;
    uint64_t v174 = v92;
    uint64_t v333 = v92;
    uint64_t v334 = v93;
    uint64_t v182 = v93;
    uint64_t v190 = v94;
    uint64_t v335 = v94;
    uint64_t v336 = v95;
    uint64_t v198 = v95;
    uint64_t v206 = v96;
    uint64_t v337 = v96;
    uint64_t v338 = v97;
    uint64_t v339 = v98;
    uint64_t v150 = v99;
    uint64_t v158 = v98;
    uint64_t v340 = v99;
    uint64_t v341 = v100;
    int v342 = v101;
    char v343 = BYTE4(v101) & 1;
    uint64_t v136 = v102;
    uint64_t v140 = v103;
    uint64_t v344 = v102;
    uint64_t v345 = v103;
    uint64_t v346 = v104;
    uint64_t v347 = v106;
    uint64_t v348 = v105;
    uint64_t v349 = v108;
    uint64_t v350 = v107;
    uint64_t v112 = v109;
    uint64_t v351 = v109;
    uint64_t v113 = v110;
    uint64_t v352 = v110;
    uint64_t v353 = v111;
    sub_100B0EFD4(v90, v91, v92, v93, v94, v95, v96, v97, v98, v99, v100);
    sub_100B0EFD4(v101, v136, v140, v104, v106, v105, v108, v107, v112, v113, v111);
    char v145 = sub_1007B049C(&v330, &v342);
    sub_100B0C93C(v101, v136, v140, v104, v106, v105, v108, v107, v112, v113, v111);
    sub_100B0C93C(v222, v166, v174, v182, v190, v198, v206, v214, v158, v150, v100);
    if ((v145 & 1) == 0) {
      goto LABEL_14;
    }
  }
  else if (v111)
  {
    goto LABEL_86;
  }
  char v116 = *((unsigned char *)v243 + 524);
  if ((_BYTE)v242[131])
  {
    if (!*((unsigned char *)v243 + 524)) {
      goto LABEL_14;
    }
  }
  else
  {
    if (v242[130] != *((float *)v243 + 130)) {
      char v116 = 1;
    }
    if (v116) {
      goto LABEL_14;
    }
  }
  char v117 = *((unsigned char *)v243 + 532);
  if ((_BYTE)v242[133])
  {
    if (!*((unsigned char *)v243 + 532)) {
      goto LABEL_14;
    }
  }
  else
  {
    if (v242[132] != *((float *)v243 + 132)) {
      char v117 = 1;
    }
    if (v117) {
      goto LABEL_14;
    }
  }
  uint64_t v90 = *((void *)v242 + 67);
  uint64_t v91 = *((void *)v242 + 68);
  uint64_t v92 = *((void *)v242 + 69);
  uint64_t v93 = *((void *)v242 + 70);
  uint64_t v94 = *((void *)v242 + 71);
  uint64_t v95 = *((void *)v242 + 72);
  uint64_t v96 = *((void *)v242 + 73);
  uint64_t v97 = *((void *)v242 + 74);
  uint64_t v98 = *((void *)v242 + 75);
  uint64_t v99 = *((void *)v242 + 76);
  uint64_t v100 = *((void *)v242 + 77);
  uint64_t v101 = v243[67];
  uint64_t v102 = v243[68];
  uint64_t v103 = v243[69];
  uint64_t v104 = v243[70];
  uint64_t v106 = v243[71];
  uint64_t v105 = v243[72];
  uint64_t v108 = v243[73];
  uint64_t v107 = v243[74];
  uint64_t v109 = v243[75];
  uint64_t v110 = v243[76];
  uint64_t v111 = v243[77];
  if (v100)
  {
    if (!v111) {
      goto LABEL_86;
    }
    int v306 = *((void *)v242 + 67);
    uint64_t v215 = v97;
    uint64_t v223 = v90;
    char v307 = BYTE4(v90) & 1;
    uint64_t v308 = v91;
    uint64_t v167 = v91;
    uint64_t v175 = v92;
    uint64_t v309 = v92;
    uint64_t v310 = v93;
    uint64_t v183 = v93;
    uint64_t v191 = v94;
    uint64_t v311 = v94;
    uint64_t v312 = v95;
    uint64_t v199 = v95;
    uint64_t v207 = v96;
    uint64_t v313 = v96;
    uint64_t v314 = v97;
    uint64_t v315 = v98;
    uint64_t v151 = v99;
    uint64_t v159 = v98;
    uint64_t v316 = v99;
    uint64_t v317 = v100;
    int v318 = v101;
    char v319 = BYTE4(v101) & 1;
    uint64_t v137 = v102;
    uint64_t v141 = v103;
    uint64_t v320 = v102;
    uint64_t v321 = v103;
    uint64_t v322 = v104;
    uint64_t v323 = v106;
    uint64_t v324 = v105;
    uint64_t v325 = v108;
    uint64_t v326 = v107;
    uint64_t v118 = v109;
    uint64_t v327 = v109;
    uint64_t v119 = v110;
    uint64_t v328 = v110;
    uint64_t v329 = v111;
    sub_100B0EFD4(v90, v91, v92, v93, v94, v95, v96, v97, v98, v99, v100);
    sub_100B0EFD4(v101, v137, v141, v104, v106, v105, v108, v107, v118, v119, v111);
    char v146 = sub_1007B049C(&v306, &v318);
    sub_100B0C93C(v101, v137, v141, v104, v106, v105, v108, v107, v118, v119, v111);
    sub_100B0C93C(v223, v167, v175, v183, v191, v199, v207, v215, v159, v151, v100);
    if ((v146 & 1) == 0) {
      goto LABEL_14;
    }
  }
  else if (v111)
  {
    goto LABEL_86;
  }
  char v120 = *((unsigned char *)v243 + 628);
  if ((_BYTE)v242[157])
  {
    if (!*((unsigned char *)v243 + 628)) {
      goto LABEL_14;
    }
  }
  else
  {
    if (v242[156] != *((float *)v243 + 156)) {
      char v120 = 1;
    }
    if (v120) {
      goto LABEL_14;
    }
  }
  char v121 = *((unsigned char *)v243 + 636);
  if ((_BYTE)v242[159])
  {
    if (!*((unsigned char *)v243 + 636)) {
      goto LABEL_14;
    }
  }
  else
  {
    if (v242[158] != *((float *)v243 + 158)) {
      char v121 = 1;
    }
    if (v121) {
      goto LABEL_14;
    }
  }
  uint64_t v90 = *((void *)v242 + 80);
  uint64_t v91 = *((void *)v242 + 81);
  uint64_t v92 = *((void *)v242 + 82);
  uint64_t v93 = *((void *)v242 + 83);
  uint64_t v94 = *((void *)v242 + 84);
  uint64_t v95 = *((void *)v242 + 85);
  uint64_t v96 = *((void *)v242 + 86);
  uint64_t v97 = *((void *)v242 + 87);
  uint64_t v98 = *((void *)v242 + 88);
  uint64_t v99 = *((void *)v242 + 89);
  uint64_t v100 = *((void *)v242 + 90);
  uint64_t v101 = v243[80];
  uint64_t v102 = v243[81];
  uint64_t v103 = v243[82];
  uint64_t v104 = v243[83];
  uint64_t v106 = v243[84];
  uint64_t v105 = v243[85];
  uint64_t v108 = v243[86];
  uint64_t v107 = v243[87];
  uint64_t v109 = v243[88];
  uint64_t v110 = v243[89];
  uint64_t v111 = v243[90];
  if (v100)
  {
    if (!v111) {
      goto LABEL_86;
    }
    int v282 = *((void *)v242 + 80);
    uint64_t v216 = v97;
    uint64_t v224 = v90;
    char v283 = BYTE4(v90) & 1;
    uint64_t v284 = v91;
    uint64_t v168 = v91;
    uint64_t v176 = v92;
    uint64_t v285 = v92;
    uint64_t v286 = v93;
    uint64_t v184 = v93;
    uint64_t v192 = v94;
    uint64_t v287 = v94;
    uint64_t v288 = v95;
    uint64_t v200 = v95;
    uint64_t v208 = v96;
    uint64_t v289 = v96;
    uint64_t v290 = v97;
    uint64_t v291 = v98;
    uint64_t v152 = v99;
    uint64_t v160 = v98;
    uint64_t v292 = v99;
    uint64_t v293 = v100;
    int v294 = v101;
    char v295 = BYTE4(v101) & 1;
    uint64_t v138 = v102;
    uint64_t v142 = v103;
    uint64_t v296 = v102;
    uint64_t v297 = v103;
    uint64_t v298 = v104;
    uint64_t v299 = v106;
    uint64_t v300 = v105;
    uint64_t v301 = v108;
    uint64_t v302 = v107;
    uint64_t v122 = v109;
    uint64_t v303 = v109;
    uint64_t v123 = v110;
    uint64_t v304 = v110;
    uint64_t v305 = v111;
    sub_100B0EFD4(v90, v91, v92, v93, v94, v95, v96, v97, v98, v99, v100);
    sub_100B0EFD4(v101, v138, v142, v104, v106, v105, v108, v107, v122, v123, v111);
    char v147 = sub_1007B049C(&v282, &v294);
    sub_100B0C93C(v101, v138, v142, v104, v106, v105, v108, v107, v122, v123, v111);
    sub_100B0C93C(v224, v168, v176, v184, v192, v200, v208, v216, v160, v152, v100);
    if ((v147 & 1) == 0) {
      goto LABEL_14;
    }
  }
  else if (v111)
  {
    goto LABEL_86;
  }
  char v124 = *((unsigned char *)v243 + 732);
  if ((_BYTE)v242[183])
  {
    if (!*((unsigned char *)v243 + 732)) {
      goto LABEL_14;
    }
  }
  else
  {
    if (v242[182] != *((float *)v243 + 182)) {
      char v124 = 1;
    }
    if (v124) {
      goto LABEL_14;
    }
  }
  char v125 = *((unsigned char *)v243 + 740);
  if ((_BYTE)v242[185])
  {
    if (!*((unsigned char *)v243 + 740)) {
      goto LABEL_14;
    }
  }
  else
  {
    if (v242[184] != *((float *)v243 + 184)) {
      char v125 = 1;
    }
    if (v125) {
      goto LABEL_14;
    }
  }
  uint64_t v90 = *((void *)v242 + 93);
  uint64_t v91 = *((void *)v242 + 94);
  uint64_t v92 = *((void *)v242 + 95);
  uint64_t v93 = *((void *)v242 + 96);
  uint64_t v94 = *((void *)v242 + 97);
  uint64_t v95 = *((void *)v242 + 98);
  uint64_t v96 = *((void *)v242 + 99);
  uint64_t v97 = *((void *)v242 + 100);
  uint64_t v98 = *((void *)v242 + 101);
  uint64_t v99 = *((void *)v242 + 102);
  uint64_t v100 = *((void *)v242 + 103);
  uint64_t v101 = v243[93];
  uint64_t v102 = v243[94];
  uint64_t v103 = v243[95];
  uint64_t v104 = v243[96];
  uint64_t v106 = v243[97];
  uint64_t v105 = v243[98];
  uint64_t v108 = v243[99];
  uint64_t v107 = v243[100];
  uint64_t v109 = v243[101];
  uint64_t v110 = v243[102];
  uint64_t v111 = v243[103];
  if (!v100)
  {
    if (!v111) {
      goto LABEL_138;
    }
    goto LABEL_86;
  }
  if (!v111)
  {
LABEL_86:
    uint64_t v246 = v90;
    uint64_t v247 = v91;
    uint64_t v248 = v92;
    uint64_t v249 = v93;
    uint64_t v250 = v94;
    uint64_t v251 = v95;
    uint64_t v252 = v96;
    uint64_t v253 = v97;
    uint64_t v254 = v98;
    uint64_t v255 = v99;
    uint64_t v256 = v100;
    uint64_t v257 = v101;
    uint64_t v230 = v101;
    uint64_t v235 = v105;
    uint64_t v258 = v102;
    uint64_t v259 = v103;
    uint64_t v260 = v104;
    uint64_t v261 = v106;
    uint64_t v262 = v105;
    uint64_t v263 = v108;
    uint64_t v264 = v107;
    uint64_t v265 = v109;
    uint64_t v114 = v109;
    uint64_t v115 = v110;
    uint64_t v266 = v110;
    uint64_t v267 = v111;
    sub_100B0EFD4(v90, v91, v92, v93, v94, v95, v96, v97, v98, v99, v100);
    sub_100B0EFD4(v230, v102, v103, v104, v106, v235, v108, v107, v114, v115, v111);
    goto LABEL_13;
  }
  int v270 = *((void *)v242 + 93);
  uint64_t v217 = v97;
  uint64_t v225 = v90;
  char v271 = BYTE4(v90) & 1;
  uint64_t v272 = v91;
  uint64_t v273 = v92;
  uint64_t v169 = v91;
  uint64_t v177 = v92;
  uint64_t v274 = v93;
  uint64_t v275 = v94;
  uint64_t v185 = v93;
  uint64_t v193 = v94;
  uint64_t v276 = v95;
  uint64_t v277 = v96;
  uint64_t v201 = v95;
  uint64_t v209 = v96;
  uint64_t v278 = v97;
  uint64_t v279 = v98;
  uint64_t v153 = v99;
  uint64_t v161 = v98;
  uint64_t v280 = v99;
  uint64_t v281 = v100;
  LODWORD(v246) = v101;
  BYTE4(v246) = BYTE4(v101) & 1;
  uint64_t v139 = v102;
  uint64_t v143 = v103;
  uint64_t v247 = v102;
  uint64_t v248 = v103;
  uint64_t v249 = v104;
  uint64_t v250 = v106;
  uint64_t v251 = v105;
  uint64_t v252 = v108;
  uint64_t v253 = v107;
  uint64_t v254 = v109;
  uint64_t v126 = v109;
  uint64_t v127 = v110;
  uint64_t v255 = v110;
  uint64_t v256 = v111;
  sub_100B0EFD4(v90, v91, v92, v93, v94, v95, v96, v97, v98, v99, v100);
  sub_100B0EFD4(v101, v139, v143, v104, v106, v105, v108, v107, v126, v127, v111);
  char v148 = sub_1007B049C(&v270, &v246);
  sub_100B0C93C(v101, v139, v143, v104, v106, v105, v108, v107, v126, v127, v111);
  sub_100B0C93C(v225, v169, v177, v185, v193, v201, v209, v217, v161, v153, v100);
  if ((v148 & 1) == 0) {
    goto LABEL_14;
  }
LABEL_138:
  char v128 = *((unsigned char *)v243 + 836);
  if ((_BYTE)v242[209])
  {
    if (!*((unsigned char *)v243 + 836)) {
      goto LABEL_14;
    }
  }
  else
  {
    if (v242[208] != *((float *)v243 + 208)) {
      char v128 = 1;
    }
    if (v128) {
      goto LABEL_14;
    }
  }
  char v129 = *((unsigned char *)v243 + 844);
  if ((_BYTE)v242[211])
  {
    if (!*((unsigned char *)v243 + 844)) {
      goto LABEL_14;
    }
  }
  else
  {
    if (v242[210] != *((float *)v243 + 210)) {
      char v129 = 1;
    }
    if (v129) {
      goto LABEL_14;
    }
  }
  int v130 = *((unsigned __int8 *)v242 + 845);
  int v131 = *((unsigned __int8 *)v243 + 845);
  if (v130 == 2)
  {
    if (v131 != 2) {
      goto LABEL_14;
    }
    goto LABEL_155;
  }
  char v35 = 0;
  BOOL v132 = (v130 & 1) == 0;
  if (v131 != 2 && ((v132 ^ v131) & 1) != 0)
  {
LABEL_155:
    sub_10051B3EC((uint64_t)(v242 + 212), (uint64_t)v268, &qword_1016923E0);
    int v133 = *((unsigned __int8 *)v243 + 856);
    sub_10051B3EC((uint64_t)v268, (uint64_t)v451, &qword_1016923E0);
    if (v451[8] == 255)
    {
      if (v133 == 255)
      {
LABEL_160:
        char v35 = sub_100ED60AC(*((void *)v242 + 108), v243[108]);
        return v35 & 1;
      }
    }
    else
    {
      sub_10051B3EC((uint64_t)v451, (uint64_t)v452, &qword_1016923E8);
      sub_10051B3EC((uint64_t)v268, (uint64_t)v245, &qword_1016923E0);
      if (v133 != 255)
      {
        sub_10052EA30();
        if (static CRExtensible.== infix(_:_:)()) {
          goto LABEL_160;
        }
      }
    }
LABEL_14:
    char v35 = 0;
  }
  return v35 & 1;
}