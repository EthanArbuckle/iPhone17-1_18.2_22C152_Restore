void sub_100E5479C(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  id v3;
  id v4;
  id v5;
  void *v6;
  objc_class *v7;
  char *v8;
  id v9;
  id v10;
  id v11;
  char *v12;
  id v13;
  id v14;
  objc_super v15;
  objc_super v16;

  if (a1)
  {
    v2 = v1;
    v3 = a1;
    v4 = sub_100E3C594();
    v5 = [v4 mode];

    v6 = *(void **)(v2 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_selectionModelTranslator);
    v7 = (objc_class *)type metadata accessor for CRLSelectionPathValidator();
    v8 = (char *)objc_allocWithZone(v7);
    swift_unknownObjectWeakInit();
    swift_unknownObjectWeakAssign();
    *(void *)&v8[OBJC_IVAR____TtC8Freeform25CRLSelectionPathValidator_selectionModelTranslator] = v6;
    v16.receiver = v8;
    v16.super_class = v7;
    v9 = v6;
    v10 = [super init];
    v11 = [v5 validateSelectionPathIfNeededFromPersistableSelectionPath:v3 withSelectionPathValidator:v10];

    if (!v11)
    {
      v12 = (char *)objc_allocWithZone(v7);
      swift_unknownObjectWeakInit();
      swift_unknownObjectWeakAssign();
      *(void *)&v12[OBJC_IVAR____TtC8Freeform25CRLSelectionPathValidator_selectionModelTranslator] = v9;
      v15.receiver = v12;
      v15.super_class = v7;
      v13 = v9;
      v14 = [super init];
      v11 = sub_10060A4AC((uint64_t)v3);
    }
    [*(id *)(v2 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interactiveCanvasController) setSelectionPath:v11 withSelectionFlags:3200 v15.receiver, v15.super_class, v16.receiver, v16.super_class];
  }
}

void sub_100E54A5C(void *a1)
{
  sub_100E54B8C(a1);
  sub_100E54D34(a1);
  v3 = *(void **)&v1[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_canvasZoomControlViewController];
  if (v3) {
    id v4 = [v3 view];
  }
  else {
    id v4 = 0;
  }
  v5 = *(void **)&v1[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_scenesNavigatorViewController];
  if (v5) {
    id v6 = [v5 view];
  }
  else {
    id v6 = 0;
  }
  sub_100E5502C(v4, v6);

  id v7 = [*(id *)&v1[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_canvasViewController] presentedHUDView];
  if (v7)
  {
    id v10 = v7;
    id v8 = [v1 view];
    if (v8)
    {
      v9 = v8;
      [v8 bringSubviewToFront:v10];
    }
    else
    {
      __break(1u);
    }
  }
}

void sub_100E54B8C(void *a1)
{
  if ([a1 horizontalSizeClass] == (id)1
    || objc_msgSend(self, "crl_phoneUI"))
  {
    uint64_t v2 = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_canvasZoomControlViewController;
    v3 = *(void **)&v1[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_canvasZoomControlViewController];
    if (!v3) {
      return;
    }
    id v4 = v3;
    [v4 removeFromParentViewController];
    [v4 didMoveToParentViewController:0];
    id v5 = [v4 view];
    if (!v5)
    {
      __break(1u);
      return;
    }
    id v6 = v5;
    [v5 removeFromSuperview];

    id v10 = *(id *)&v1[v2];
    *(void *)&v1[v2] = 0;

    id v7 = v10;
  }
  else
  {
    uint64_t v8 = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_canvasZoomControlViewController;
    if (*(void *)&v1[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_canvasZoomControlViewController]) {
      return;
    }
    type metadata accessor for CRLiOSCanvasZoomControlViewController();
    v9 = (char *)[objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
    *(void *)&v9[OBJC_IVAR____TtC8Freeform37CRLiOSCanvasZoomControlViewController_viewScaleDetents] = &off_101504E78;
    swift_bridgeObjectRelease();
    *(void *)&v9[OBJC_IVAR____TtC8Freeform37CRLiOSCanvasZoomControlViewController_delegate + 8] = &off_10152FA30;
    swift_unknownObjectWeakAssign();
    [v1 addChildViewController:v9];
    [v9 didMoveToParentViewController:v1];
    id v7 = *(void **)&v1[v8];
    *(void *)&v1[v8] = v9;
  }
}

void sub_100E54D34(void *a1)
{
  uint64_t v2 = v1;
  if ([a1 horizontalSizeClass] == (id)1
    || objc_msgSend(self, "crl_phoneUI"))
  {
    uint64_t v3 = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_scenesNavigatorViewController;
    id v4 = *(void **)&v1[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_scenesNavigatorViewController];
    if (!v4)
    {
LABEL_10:
      uint64_t v10 = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_compactScenesNavigatorViewController;
      if (*(void *)&v2[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_compactScenesNavigatorViewController]) {
        return;
      }
      v11 = *(void **)&v2[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_scenesNavigatorState];
      v12 = *(void **)&v2[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_scenesPopoverState];
      v13 = (char *)objc_allocWithZone((Class)type metadata accessor for CRLScenesNavigatorViewController());
      v14 = v2;
      id v15 = v11;
      id v16 = v12;
      id v17 = sub_100E728BC(1, v15, v16, (uint64_t)v14, (uint64_t)v14, v13);

      v18 = *(void **)&v2[v10];
      *(void *)&v2[v10] = v17;
      id v35 = v17;

      [v35 setModalPresentationStyle:6];
      goto LABEL_13;
    }
    [v4 removeFromParentViewController];
    id v5 = *(void **)&v1[v3];
    if (!v5 || ([v5 didMoveToParentViewController:0], (id v6 = *(void **)&v1[v3]) == 0))
    {
      v9 = 0;
      goto LABEL_9;
    }
    id v7 = [v6 view];
    if (v7)
    {
      uint64_t v8 = v7;
      [v7 removeFromSuperview];

      v9 = *(void **)&v2[v3];
LABEL_9:
      *(void *)&v2[v3] = 0;

      goto LABEL_10;
    }
    __break(1u);
LABEL_24:
    __break(1u);
    return;
  }
  uint64_t v19 = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_scenesNavigatorViewController;
  if (!*(void *)&v1[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_scenesNavigatorViewController])
  {
    uint64_t v20 = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_scenesNavigatorState;
    id v21 = *(id *)&v1[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_scenesNavigatorState];
    sub_100E4FD60();
    sub_10080F0BC();

    v22 = *(void **)&v1[v20];
    v23 = *(void **)&v1[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_scenesPopoverState];
    v24 = (char *)objc_allocWithZone((Class)type metadata accessor for CRLScenesNavigatorViewController());
    v25 = v2;
    id v26 = v22;
    id v27 = v23;
    id v28 = sub_100E728BC(0, v26, v27, (uint64_t)v25, (uint64_t)v25, v24);

    [v25 addChildViewController:v28];
    [v28 didMoveToParentViewController:v25];
    v29 = *(void **)&v2[v19];
    *(void *)&v2[v19] = v28;
  }
  uint64_t v30 = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_compactScenesNavigatorViewController;
  v31 = *(void **)&v2[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_compactScenesNavigatorViewController];
  if (v31)
  {
    [v31 removeFromParentViewController];
    v32 = *(void **)&v2[v30];
    if (v32)
    {
      [v32 didMoveToParentViewController:0];
      v33 = *(void **)&v2[v30];
      if (v33)
      {
        id v34 = [v33 view];
        if (v34)
        {
          id v35 = v34;
          [v34 removeFromSuperview];
LABEL_13:

          return;
        }
        goto LABEL_24;
      }
    }
  }
}

void sub_100E5502C(void *a1, void *a2)
{
  uint64_t v3 = v2;
  if (a1 && a2)
  {
    uint64_t v6 = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_canvasZoomAndScenesContainerView;
    id v7 = *(void **)&v2[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_canvasZoomAndScenesContainerView];
    if (v7)
    {
      id v8 = a1;
      id v9 = a2;
      id v70 = v7;
      id v10 = [v70 subviews];
      sub_10050BF48(0, (unint64_t *)&qword_1016725F0);
      unint64_t v11 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

      sub_1005057FC((uint64_t *)&unk_101676C10);
      uint64_t v12 = swift_allocObject();
      *(_OWORD *)(v12 + 16) = xmmword_10117DF50;
      *(void *)(v12 + 32) = v8;
      *(void *)(v12 + 40) = v9;
      uint64_t v72 = v12;
      specialized Array._endMutation()();
      id v13 = v8;
      id v14 = v9;
      LOBYTE(v9) = sub_1005BF0B0(v11, v72);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v9)
      {

        goto LABEL_15;
      }
      [v70 removeFromSuperview];
      uint64_t v20 = *(void **)&v3[v6];
      uint64_t v69 = v6;
      *(void *)&v3[v6] = 0;
    }
    else
    {
      uint64_t v69 = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_canvasZoomAndScenesContainerView;
      id v18 = a1;
      id v19 = a2;
    }
    [a1 setTranslatesAutoresizingMaskIntoConstraints:0];
    [a2 setTranslatesAutoresizingMaskIntoConstraints:0];
    type metadata accessor for CRLShadowView();
    id v21 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
    [v21 setTranslatesAutoresizingMaskIntoConstraints:0];
    v22 = self;
    id v23 = v21;
    id v24 = [v22 clearColor];
    [v23 setBackgroundColor:v24];

    id v25 = [v23 layer];
    [v25 setCornerRadius:10.0];

    id v26 = [v23 layer];
    [v26 setShadowOffset:0.0, 3.0];

    id v27 = [v23 layer];
    LODWORD(v28) = 1034147594;
    [v27 setShadowOpacity:v28];

    id v29 = [v23 layer];
    [v29 setShadowRadius:7.0];

    id v30 = [v23 layer];
    [v30 setCornerCurve:kCACornerCurveContinuous];

    id v31 = [v23 layer];
    [v31 setBorderWidth:0.5];

    id v32 = [v23 layer];
    id v33 = [v22 blackColor];
    id v34 = [v33 colorWithAlphaComponent:0.08];

    id v35 = [v34 CGColor];
    [v32 setBorderColor:v35];

    [v23 addSubview:a2];
    [v23 addSubview:a1];
    id v36 = [v3 view];
    if (v36)
    {
      v37 = v36;
      [v36 addSubview:v23];

      sub_1005057FC((uint64_t *)&unk_101676C10);
      uint64_t v38 = swift_allocObject();
      *(_OWORD *)(v38 + 16) = xmmword_10117E9C0;
      id v39 = [v23 leadingAnchor];
      id v40 = [v3 view];
      if (v40)
      {
        v41 = v40;
        id v68 = a2;
        id v42 = [v40 leadingAnchor];

        id v43 = [v39 constraintEqualToAnchor:v42 constant:20.0];
        *(void *)(v38 + 32) = v43;
        id v44 = [v23 bottomAnchor];
        id v45 = [v3 view];
        if (v45)
        {
          v46 = v45;
          id v71 = self;
          id v47 = [v46 bottomAnchor];

          id v48 = [v44 constraintEqualToAnchor:v47 constant:-20.0];
          *(void *)(v38 + 40) = v48;
          id v49 = [a1 topAnchor];
          id v50 = [v23 topAnchor];
          id v51 = [v49 constraintEqualToAnchor:v50];

          *(void *)(v38 + 48) = v51;
          id v52 = [a1 bottomAnchor];
          id v53 = [v23 bottomAnchor];
          id v54 = [v52 constraintEqualToAnchor:v53];

          *(void *)(v38 + 56) = v54;
          id v55 = [a1 leadingAnchor];
          id v56 = [v23 leadingAnchor];
          id v57 = [v55 constraintEqualToAnchor:v56];

          *(void *)(v38 + 64) = v57;
          id v58 = [a1 trailingAnchor];
          id v59 = [v68 leadingAnchor];
          id v60 = [v58 constraintEqualToAnchor:v59];

          *(void *)(v38 + 72) = v60;
          id v61 = [v68 bottomAnchor];
          id v62 = [v23 bottomAnchor];
          id v63 = [v61 constraintEqualToAnchor:v62];

          *(void *)(v38 + 80) = v63;
          id v64 = [v68 trailingAnchor];
          id v65 = [v23 trailingAnchor];
          id v66 = [v64 constraintEqualToAnchor:v65];

          *(void *)(v38 + 88) = v66;
          specialized Array._endMutation()();
          sub_10050BF48(0, (unint64_t *)&qword_101674200);
          Class isa = Array._bridgeToObjectiveC()().super.isa;
          swift_bridgeObjectRelease();
          [v71 activateConstraints:isa];

          id v70 = *(id *)&v3[v69];
          *(void *)&v3[v69] = v23;

          goto LABEL_15;
        }
LABEL_20:
        __break(1u);
        return;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v15 = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_canvasZoomAndScenesContainerView;
  id v16 = *(void **)&v2[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_canvasZoomAndScenesContainerView];
  if (!v16) {
    return;
  }
  id v17 = v16;
  [v17 removeFromSuperview];
  id v70 = *(id *)&v3[v15];
  *(void *)&v3[v15] = 0;

LABEL_15:
}

void sub_100E5589C(void *a1)
{
  uint64_t v2 = v1;
  if ([a1 horizontalSizeClass] != (id)1
    && !objc_msgSend(self, "crl_phoneUI"))
  {
    uint64_t v9 = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_canvasZoomControlViewController;
    if (*(void *)&v1[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_canvasZoomControlViewController]) {
      return;
    }
    type metadata accessor for CRLiOSCanvasZoomControlViewController();
    id v10 = (char *)[objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
    *(void *)&v10[OBJC_IVAR____TtC8Freeform37CRLiOSCanvasZoomControlViewController_viewScaleDetents] = &off_101504ED0;
    swift_bridgeObjectRelease();
    *(void *)&v10[OBJC_IVAR____TtC8Freeform37CRLiOSCanvasZoomControlViewController_delegate + 8] = &off_10152FA30;
    swift_unknownObjectWeakAssign();
    [v1 addChildViewController:v10];
    [v10 didMoveToParentViewController:v1];
    id v11 = [v1 view];
    if (v11)
    {
      uint64_t v12 = v11;
      id v13 = [v10 view];
      if (v13)
      {
        id v14 = v13;
        [v12 addSubview:v13];

        sub_1005057FC((uint64_t *)&unk_101676C10);
        uint64_t v15 = swift_allocObject();
        *(_OWORD *)(v15 + 16) = xmmword_10117DF50;
        id v16 = [v10 view];
        if (v16)
        {
          id v17 = v16;
          id v18 = [v16 leadingAnchor];

          id v19 = [v2 view];
          if (v19)
          {
            uint64_t v20 = v19;
            id v21 = [v19 leadingAnchor];

            id v22 = [v18 constraintEqualToAnchor:v21 constant:20.0];
            *(void *)(v15 + 32) = v22;
            id v23 = [v10 view];
            if (v23)
            {
              id v24 = v23;
              id v25 = [v23 bottomAnchor];

              id v26 = [v2 view];
              if (v26)
              {
                id v27 = v26;
                double v28 = self;
                id v29 = [v27 bottomAnchor];

                id v30 = [v25 constraintEqualToAnchor:v29 constant:-20.0];
                *(void *)(v15 + 40) = v30;
                specialized Array._endMutation()();
                sub_10050BF48(0, (unint64_t *)&qword_101674200);
                Class isa = Array._bridgeToObjectiveC()().super.isa;
                swift_bridgeObjectRelease();
                [v28 activateConstraints:isa];

                id v32 = [v2 view];
                if (v32)
                {
                  id v33 = v32;
                  id v34 = [v10 view];
                  if (v34)
                  {
                    id v35 = v34;
                    [v33 bringSubviewToFront:v34];

                    id v36 = *(void **)&v2[v9];
                    *(void *)&v2[v9] = v10;
                    v41 = v10;

                    v37 = (char *)[*(id *)&v2[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_canvasViewController] presentedHUDView];
                    if (!v37) {
                      goto LABEL_6;
                    }
                    uint64_t v38 = v37;
                    id v39 = [v2 view];
                    if (v39)
                    {
                      id v40 = v39;
                      [v39 bringSubviewToFront:v38];

                      id v8 = v38;
                      goto LABEL_7;
                    }
LABEL_32:
                    __break(1u);
                    return;
                  }
LABEL_31:
                  __break(1u);
                  goto LABEL_32;
                }
LABEL_30:
                __break(1u);
                goto LABEL_31;
              }
LABEL_29:
              __break(1u);
              goto LABEL_30;
            }
LABEL_28:
            __break(1u);
            goto LABEL_29;
          }
LABEL_27:
          __break(1u);
          goto LABEL_28;
        }
LABEL_26:
        __break(1u);
        goto LABEL_27;
      }
LABEL_25:
      __break(1u);
      goto LABEL_26;
    }
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  uint64_t v3 = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_canvasZoomControlViewController;
  id v4 = *(void **)&v1[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_canvasZoomControlViewController];
  if (!v4) {
    return;
  }
  id v5 = v4;
  [v5 removeFromParentViewController];
  [v5 didMoveToParentViewController:0];
  id v6 = [v5 view];
  if (!v6)
  {
    __break(1u);
    goto LABEL_24;
  }
  id v7 = v6;
  [v6 removeFromSuperview];

  v41 = *(char **)&v2[v3];
  *(void *)&v2[v3] = 0;

LABEL_6:
  id v8 = v41;
LABEL_7:
}

void sub_100E55D74()
{
  v1 = v0;
  uint64_t v2 = sub_1005057FC((uint64_t *)&unk_101683E40);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2, v4);
  id v6 = (char *)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_scenesPresenter;
  if (!*(void *)&v1[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_scenesPresenter])
  {
    uint64_t v8 = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_scenesPopoverState;
    uint64_t v9 = *(void **)&v1[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_scenesPopoverState];
    id v10 = *(void **)&v1[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interactiveCanvasController];
    id v11 = objc_allocWithZone((Class)type metadata accessor for CRLScenesViewController_i());
    id v12 = v9;
    id v13 = v10;
    id v14 = v1;
    id v15 = sub_100E72B60((uint64_t)v14, v12, v13, v11);

    id v16 = *(void **)&v1[v7];
    *(void *)&v1[v7] = v15;

    id v17 = *(void **)&v1[v8];
    id v18 = objc_allocWithZone((Class)type metadata accessor for CRLCompactScenesViewController_i());
    id v19 = v13;
    uint64_t v20 = v14;
    id v21 = v17;
    id v22 = sub_100E72CD8((uint64_t)v20, v21, v19, v18);

    id v23 = *(void **)&v20[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_compactScenesPresenter];
    *(void *)&v20[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_compactScenesPresenter] = v22;

    id v24 = *(void **)&v1[v8];
    id v25 = *(char **)(*(void *)&v20[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_editingCoordinator]
                   + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard);
    uint64_t v26 = *(void *)&v25[OBJC_IVAR____TtC8Freeform8CRLBoard_data] + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
    swift_beginAccess();
    uint64_t v27 = type metadata accessor for CRLBoardCRDTData(0);
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v6, v26 + *(int *)(v27 + 36), v2);
    double v28 = v25;
    id v29 = v24;
    id v30 = sub_1005C2550((uint64_t)v6, (uint64_t)v28);
    (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);

    sub_1009CD428((uint64_t)v30);
    id v31 = *(id *)&v1[v8];
    LOBYTE(v30) = [v19 documentIsSharedReadOnly];
    swift_getKeyPath();
    swift_getKeyPath();
    LOBYTE(v40) = (_BYTE)v30;
    static Published.subscript.setter();
    [v19 visibleUnscaledRect];
    CGFloat x = v41.origin.x;
    CGFloat y = v41.origin.y;
    CGFloat width = v41.size.width;
    CGFloat height = v41.size.height;
    if (!CGRectIsEmpty(v41))
    {
      id v36 = *(id *)&v1[v8];
      v42.origin.CGFloat x = x;
      v42.origin.CGFloat y = y;
      v42.size.CGFloat width = width;
      v42.size.CGFloat height = height;
      double v37 = CGRectGetWidth(v42);
      v43.origin.CGFloat x = x;
      v43.origin.CGFloat y = y;
      v43.size.CGFloat width = width;
      v43.size.CGFloat height = height;
      double v38 = v37 / CGRectGetHeight(v43);
      swift_getKeyPath();
      swift_getKeyPath();
      double v40 = v38;
      static Published.subscript.setter();
    }
  }
}

uint64_t sub_100E560EC()
{
  [*(id *)(v0 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interactiveCanvasController) visibleUnscaledRect];
  uint64_t v1 = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_scenesPopoverState;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_scenesPopoverState);
  double v5 = v3 / v4;
  swift_getKeyPath();
  swift_getKeyPath();
  id v6 = v2;
  static Published.subscript.getter();

  swift_release();
  swift_release();
  uint64_t result = sub_100934114(v5, v10);
  if ((result & 1) == 0)
  {
    uint64_t v8 = *(void **)(v0 + v1);
    swift_getKeyPath();
    swift_getKeyPath();
    id v9 = v8;
    return static Published.subscript.setter();
  }
  return result;
}

void sub_100E561EC(void *a1)
{
  uint64_t v2 = v1;
  if ([a1 horizontalSizeClass] != (id)1
    && !objc_msgSend(self, "crl_phoneUI"))
  {
    uint64_t v8 = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_boardControlsViewController;
    if (*(void *)&v1[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_boardControlsViewController]) {
      return;
    }
    id v9 = (objc_class *)type metadata accessor for CRLiOSFloatingBoardViewControlsViewController();
    double v10 = (char *)objc_allocWithZone(v9);
    swift_unknownObjectWeakInit();
    *(void *)&v10[OBJC_IVAR____TtC8Freeform45CRLiOSFloatingBoardViewControlsViewController____lazy_storage___stackView] = 0;
    *(void *)&v10[OBJC_IVAR____TtC8Freeform45CRLiOSFloatingBoardViewControlsViewController_stackViewWidthConstraint] = 0;
    *(void *)&v10[OBJC_IVAR____TtC8Freeform45CRLiOSFloatingBoardViewControlsViewController_stackViewHeightConstraint] = 0;
    *(void *)&v10[OBJC_IVAR____TtC8Freeform45CRLiOSFloatingBoardViewControlsViewController____lazy_storage___gridButton] = 0;
    *(void *)&v10[OBJC_IVAR____TtC8Freeform45CRLiOSFloatingBoardViewControlsViewController____lazy_storage___connectorButton] = 0;
    *(void *)&v10[OBJC_IVAR____TtC8Freeform45CRLiOSFloatingBoardViewControlsViewController____lazy_storage___separator] = 0;
    swift_unknownObjectWeakAssign();
    v44.receiver = v10;
    v44.super_class = v9;
    id v11 = [super initWithNibName:0 bundle:0];
    [v2 addChildViewController:v11];
    [v11 didMoveToParentViewController:v2];
    id v12 = [v2 view];
    if (v12)
    {
      id v13 = v12;
      id v14 = [v11 view];
      if (v14)
      {
        id v15 = v14;
        [v13 addSubview:v14];

        sub_1005057FC((uint64_t *)&unk_101676C10);
        uint64_t v16 = swift_allocObject();
        *(_OWORD *)(v16 + 16) = xmmword_10117DF50;
        id v17 = [v11 view];
        if (v17)
        {
          id v18 = v17;
          id v19 = [v17 trailingAnchor];

          id v20 = [v2 view];
          if (v20)
          {
            id v21 = v20;
            id v22 = [v20 trailingAnchor];

            id v23 = [v19 constraintEqualToAnchor:v22 constant:-20.0];
            *(void *)(v16 + 32) = v23;
            id v24 = [v11 view];
            if (v24)
            {
              id v25 = v24;
              id v26 = [v24 bottomAnchor];

              id v27 = [v2 view];
              if (v27)
              {
                double v28 = v27;
                id v29 = self;
                id v30 = [v28 bottomAnchor];

                id v31 = [v26 constraintEqualToAnchor:v30 constant:-20.0];
                *(void *)(v16 + 40) = v31;
                specialized Array._endMutation()();
                sub_10050BF48(0, (unint64_t *)&qword_101674200);
                Class isa = Array._bridgeToObjectiveC()().super.isa;
                swift_bridgeObjectRelease();
                [v29 activateConstraints:isa];

                id v33 = [v2 view];
                if (v33)
                {
                  id v34 = v33;
                  id v35 = [v11 view];
                  if (v35)
                  {
                    id v36 = v35;
                    [v34 bringSubviewToFront:v35];

                    double v37 = *(void **)&v2[v8];
                    *(void *)&v2[v8] = v11;
                    id v38 = v11;

                    id v39 = [*(id *)&v2[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_canvasViewController] presentedHUDView];
                    if (v39)
                    {
                      double v40 = v39;
                      id v41 = [v2 view];
                      if (!v41)
                      {
LABEL_31:
                        __break(1u);
                        return;
                      }
                      CGRect v42 = v41;
                      [v41 bringSubviewToFront:v40];
                    }
                    return;
                  }
LABEL_30:
                  __break(1u);
                  goto LABEL_31;
                }
LABEL_29:
                __break(1u);
                goto LABEL_30;
              }
LABEL_28:
              __break(1u);
              goto LABEL_29;
            }
LABEL_27:
            __break(1u);
            goto LABEL_28;
          }
LABEL_26:
          __break(1u);
          goto LABEL_27;
        }
LABEL_25:
        __break(1u);
        goto LABEL_26;
      }
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  uint64_t v3 = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_boardControlsViewController;
  double v4 = *(void **)&v1[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_boardControlsViewController];
  if (!v4) {
    return;
  }
  id v5 = v4;
  [v5 removeFromParentViewController];
  [v5 didMoveToParentViewController:0];
  id v6 = [v5 view];
  if (!v6)
  {
    __break(1u);
    goto LABEL_23;
  }
  uint64_t v7 = v6;
  [v6 removeFromSuperview];

  id v43 = *(id *)&v2[v3];
  *(void *)&v2[v3] = 0;
}

void sub_100E566F4()
{
  uint64_t v1 = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_connectorModeMessageViewController;
  if (!*(void *)&v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_connectorModeMessageViewController])
  {
    uint64_t v2 = v0;
    uint64_t v3 = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_connectorModeMessageViewState;
    double v4 = *(void **)&v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_connectorModeMessageViewState];
    uint64_t v5 = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController__isConnectorModeEnabled;
    int v6 = v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController__isConnectorModeEnabled];
    if (v6 == 2)
    {
      id v7 = v4;
      char v8 = sub_100E4F834() & 1;
      v0[v5] = v8;
    }
    else
    {
      char v8 = v6 & 1;
      id v9 = v4;
    }
    swift_getKeyPath();
    swift_getKeyPath();
    LOBYTE(v56[0]) = v8;
    static Published.subscript.setter();
    id v10 = *(id *)&v0[v3];
    sub_1007D43E0(v56);
    id v11 = objc_allocWithZone((Class)sub_1005057FC(&qword_10169FB78));
    id v12 = (void *)UIHostingController.init(rootView:)();
    id v13 = [v12 view:v56[0]];
    if (v13)
    {
      id v14 = v13;
      [v13 setTranslatesAutoresizingMaskIntoConstraints:0];

      id v15 = [v12 view];
      if (v15)
      {
        uint64_t v16 = v15;
        id v17 = [self clearColor];
        [v16 setBackgroundColor:v17];

        id v18 = [v12 view];
        if (v18)
        {
          id v19 = v18;
          [v18 setUserInteractionEnabled:0];

          id v20 = [v2 view];
          if (v20)
          {
            id v21 = v20;
            id v22 = [v12 view];
            if (v22)
            {
              id v23 = v22;
              [v21 addSubview:v22];

              [v2 addChildViewController:v12];
              [v12 didMoveToParentViewController:v2];
              sub_1005057FC((uint64_t *)&unk_101676C10);
              uint64_t v24 = swift_allocObject();
              *(_OWORD *)(v24 + 16) = xmmword_10117FBE0;
              id v25 = [v12 view];
              if (v25)
              {
                id v26 = v25;
                id v27 = [v25 leftAnchor];

                id v28 = [v2 view];
                if (v28)
                {
                  id v29 = v28;
                  id v30 = [v28 leftAnchor];

                  id v31 = [v27 constraintEqualToAnchor:v30];
                  *(void *)(v24 + 32) = v31;
                  id v32 = [v12 view];
                  if (v32)
                  {
                    id v33 = v32;
                    id v34 = [v32 rightAnchor];

                    id v35 = [v2 view];
                    if (v35)
                    {
                      id v36 = v35;
                      id v37 = [v35 rightAnchor];

                      id v38 = [v34 constraintEqualToAnchor:v37];
                      *(void *)(v24 + 40) = v38;
                      id v39 = [v12 view];
                      if (v39)
                      {
                        double v40 = v39;
                        id v41 = [v39 topAnchor];

                        id v42 = [v2 view];
                        if (v42)
                        {
                          id v43 = v42;
                          id v44 = [v42 topAnchor];

                          id v45 = [v41 constraintEqualToAnchor:v44];
                          *(void *)(v24 + 48) = v45;
                          id v46 = [v12 view];
                          if (v46)
                          {
                            id v47 = v46;
                            id v48 = [v46 bottomAnchor];

                            id v49 = [v2 view];
                            if (v49)
                            {
                              id v50 = v49;
                              id v51 = self;
                              id v52 = [v50 bottomAnchor];

                              id v53 = [v48 constraintEqualToAnchor:v52];
                              *(void *)(v24 + 56) = v53;
                              v56[0] = v24;
                              specialized Array._endMutation()();
                              sub_10050BF48(0, (unint64_t *)&qword_101674200);
                              Class isa = Array._bridgeToObjectiveC()().super.isa;
                              swift_bridgeObjectRelease();
                              [v51 activateConstraints:isa];

                              id v55 = *(void **)&v2[v1];
                              *(void *)&v2[v1] = v12;

                              return;
                            }
LABEL_32:
                            __break(1u);
                            return;
                          }
LABEL_31:
                          __break(1u);
                          goto LABEL_32;
                        }
LABEL_30:
                        __break(1u);
                        goto LABEL_31;
                      }
LABEL_29:
                      __break(1u);
                      goto LABEL_30;
                    }
LABEL_28:
                    __break(1u);
                    goto LABEL_29;
                  }
LABEL_27:
                  __break(1u);
                  goto LABEL_28;
                }
LABEL_26:
                __break(1u);
                goto LABEL_27;
              }
LABEL_25:
              __break(1u);
              goto LABEL_26;
            }
LABEL_24:
            __break(1u);
            goto LABEL_25;
          }
LABEL_23:
          __break(1u);
          goto LABEL_24;
        }
LABEL_22:
        __break(1u);
        goto LABEL_23;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_22;
  }
}

uint64_t sub_100E56C84()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_canvasZoomControlViewController);
  if (!v1) {
    return 1;
  }
  uint64_t v2 = self;
  id v3 = v1;
  id v4 = [v2 sharedKeyboardMonitor];
  [v4 keyboardFrame];
  CGFloat v6 = v5;
  CGFloat v8 = v7;
  CGFloat v10 = v9;
  CGFloat v12 = v11;

  uint64_t result = (uint64_t)[v3 view];
  if (result)
  {
    id v14 = (void *)result;
    [(id)result frame];
    CGFloat v16 = v15;
    CGFloat v18 = v17;
    CGFloat v20 = v19;
    CGFloat v22 = v21;

    v24.origin.CGFloat x = v6;
    v24.origin.CGFloat y = v8;
    v24.size.CGFloat width = v10;
    v24.size.CGFloat height = v12;
    v25.origin.CGFloat x = v16;
    v25.origin.CGFloat y = v18;
    v25.size.CGFloat width = v20;
    v25.size.CGFloat height = v22;
    BOOL v23 = CGRectContainsRect(v24, v25);

    return v23;
  }
  __break(1u);
  return result;
}

id sub_100E56E60@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  id v4 = v3;
  CGFloat v8 = *(void **)&v4[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_canvasViewController];
  id v36 = v4;
  id v37 = v8;
  sub_100522E9C(a2, (uint64_t)&v39, &qword_101672BF0);
  uint64_t v9 = *((void *)&v40 + 1);
  if (*((void *)&v40 + 1))
  {
    CGFloat v10 = sub_10050F848(&v39, *((uint64_t *)&v40 + 1));
    uint64_t v11 = *(void *)(v9 - 8);
    __n128 v12 = __chkstk_darwin(v10, v10);
    id v14 = (char *)&v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, __n128))(v11 + 16))(v14, v12);
    uint64_t v15 = _bridgeAnythingToObjectiveC<A>(_:)();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v9);
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v39);
  }
  else
  {
    uint64_t v15 = 0;
  }
  unsigned int v16 = [v37 canPerformAction:a1 withSender:v15];
  swift_unknownObjectRelease();
  if (v16)
  {
    a3[3] = sub_10050BF48(0, (unint64_t *)&unk_10169FC40);
    id v17 = v37;
LABEL_11:
    *a3 = v17;
    return v17;
  }
  sub_100522E9C(a2, (uint64_t)&v39, &qword_101672BF0);
  uint64_t v18 = *((void *)&v40 + 1);
  if (*((void *)&v40 + 1))
  {
    double v19 = sub_10050F848(&v39, *((uint64_t *)&v40 + 1));
    uint64_t v20 = *(void *)(v18 - 8);
    __n128 v21 = __chkstk_darwin(v19, v19);
    BOOL v23 = (char *)&v36 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, __n128))(v20 + 16))(v23, v21);
    uint64_t v24 = _bridgeAnythingToObjectiveC<A>(_:)();
    (*(void (**)(char *, uint64_t))(v20 + 8))(v23, v18);
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v39);
  }
  else
  {
    uint64_t v24 = 0;
  }
  unsigned int v25 = [v36 canPerformAction:a1 withSender:v24];
  swift_unknownObjectRelease();
  if (v25)
  {
    a3[3] = type metadata accessor for CRLiOSBoardViewController();
    id v17 = v36;
    goto LABEL_11;
  }
  sub_100522E9C(a2, (uint64_t)&v39, &qword_101672BF0);
  uint64_t v27 = *((void *)&v40 + 1);
  if (*((void *)&v40 + 1))
  {
    id v28 = sub_10050F848(&v39, *((uint64_t *)&v40 + 1));
    uint64_t v29 = *(void *)(v27 - 8);
    __n128 v30 = __chkstk_darwin(v28, v28);
    id v32 = (char *)&v36 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, __n128))(v29 + 16))(v32, v30);
    uint64_t v33 = _bridgeAnythingToObjectiveC<A>(_:)();
    (*(void (**)(char *, uint64_t))(v29 + 8))(v32, v27);
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v39);
  }
  else
  {
    uint64_t v33 = 0;
  }
  id v34 = (objc_class *)type metadata accessor for CRLiOSBoardViewController();
  v38.receiver = v36;
  v38.super_class = v34;
  [super targetForAction:a1 withSender:v33];
  swift_unknownObjectRelease();
  if (v35)
  {
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
  }
  else
  {
    long long v39 = 0u;
    long long v40 = 0u;
  }
  return (id)sub_10051B3EC((uint64_t)&v39, (uint64_t)a3, &qword_101672BF0);
}

uint64_t sub_100E57450(uint64_t a1, uint64_t a2)
{
  double v5 = (NSString *)String._bridgeToObjectiveC()();
  NSSelectorFromString(v5);

  if (static Selector.== infix(_:_:)()) {
    return 1;
  }
  if ((static Selector.== infix(_:_:)() & 1) == 0)
  {
    if ((static Selector.== infix(_:_:)() & 1) != 0
      || (static Selector.== infix(_:_:)() & 1) != 0
      || (static Selector.== infix(_:_:)() & 1) != 0)
    {
      return [*(id *)&v2[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interactiveCanvasController] documentIsSharedReadOnly] ^ 1;
    }
    if ((static Selector.== infix(_:_:)() & 1) == 0)
    {
      sub_100522E9C(a2, (uint64_t)v17, &qword_101672BF0);
      uint64_t v8 = v18;
      if (v18)
      {
        uint64_t v9 = sub_10050F848(v17, v18);
        uint64_t v10 = *(void *)(v8 - 8);
        __n128 v11 = __chkstk_darwin(v9, v9);
        uint64_t v13 = (char *)&v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
        (*(void (**)(char *, __n128))(v10 + 16))(v13, v11);
        uint64_t v14 = _bridgeAnythingToObjectiveC<A>(_:)();
        (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v8);
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v17);
      }
      else
      {
        uint64_t v14 = 0;
      }
      uint64_t v15 = (objc_class *)type metadata accessor for CRLiOSBoardViewController();
      v16.receiver = v2;
      v16.super_class = v15;
      [super canPerformAction:a1 withSender:v14];
      swift_unknownObjectRelease();
      return (uint64_t)v6;
    }
    return 1;
  }

  return (uint64_t)sub_100E59028();
}

uint64_t sub_100E578E4()
{
  uint64_t v1 = sub_1005057FC(&qword_101672BB0);
  __chkstk_darwin(v1 - 8, v2);
  id v4 = (char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1005057FC((uint64_t *)&unk_101683E40);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5, v7);
  uint64_t v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *(char **)(*(void *)&v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_editingCoordinator]
                 + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard);
  uint64_t v11 = *(void *)&v10[OBJC_IVAR____TtC8Freeform8CRLBoard_data] + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
  swift_beginAccess();
  uint64_t v12 = type metadata accessor for CRLBoardCRDTData(0);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v9, v11 + *(int *)(v12 + 36), v5);
  uint64_t v13 = v10;
  uint64_t v14 = sub_1005C2550((uint64_t)v9, (uint64_t)v13);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);

  [*(id *)&v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interactiveCanvasController] endEditing];
  uint64_t v15 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v4, 1, 1, v15);
  type metadata accessor for MainActor();
  objc_super v16 = v0;
  swift_bridgeObjectRetain();
  uint64_t v17 = static MainActor.shared.getter();
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = v17;
  *(void *)(v18 + 24) = &protocol witness table for MainActor;
  *(void *)(v18 + 32) = v16;
  *(unsigned char *)(v18 + 40) = 0;
  *(void *)(v18 + 48) = v14;
  sub_1005912D0((uint64_t)v4, (uint64_t)&unk_10169FC38, v18);
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_100E57B88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6)
{
  *(unsigned char *)(v6 + 304) = a5;
  *(void *)(v6 + 168) = a4;
  *(void *)(v6 + 176) = a6;
  sub_1005057FC(&qword_101672EB0);
  *(void *)(v6 + 184) = swift_task_alloc();
  *(void *)(v6 + 192) = swift_task_alloc();
  *(void *)(v6 + 200) = swift_task_alloc();
  *(void *)(v6 + 208) = type metadata accessor for MainActor();
  *(void *)(v6 + 216) = static MainActor.shared.getter();
  uint64_t v8 = dispatch thunk of Actor.unownedExecutor.getter();
  *(void *)(v6 + 224) = v8;
  *(void *)(v6 + 232) = v7;
  return _swift_task_switch(sub_100E57C74, v8, v7);
}

uint64_t sub_100E57C74()
{
  if (qword_10166F248 != -1) {
    swift_once();
  }
  if (*(unsigned char *)(qword_10171AA10 + OBJC_IVAR____TtC8Freeform22CRLiOSPrintCoordinator_isPresenting) == 1)
  {
    uint64_t v1 = *(void **)(qword_10171AA10 + OBJC_IVAR____TtC8Freeform22CRLiOSPrintCoordinator_parentViewController);
    if (v1)
    {
      uint64_t v2 = *(void **)(v0 + 168);
      sub_10050BF48(0, (unint64_t *)&qword_1016745A0);
      id v3 = v2;
      id v4 = v1;
      LOBYTE(v1) = static NSObject.== infix(_:_:)();
    }
    *(unsigned char *)(v0 + 305) = v1 & 1;
    id v5 = [self sharedPrintController];
    *(void *)(v0 + 240) = v5;
    *(void *)(v0 + 16) = v0;
    *(void *)(v0 + 24) = sub_100E57EA8;
    uint64_t v6 = swift_continuation_init();
    *(void *)(v0 + 80) = _NSConcreteStackBlock;
    *(void *)(v0 + 88) = 0x40000000;
    *(void *)(v0 + 96) = sub_1005BFB40;
    *(void *)(v0 + 104) = &unk_10152FD60;
    *(void *)(v0 + 112) = v6;
    [v5 dismissAnimated:1 completionHandler:v0 + 80];
    return _swift_continuation_await(v0 + 16);
  }
  else
  {
    *(void *)(v0 + 248) = static MainActor.shared.getter();
    uint64_t v8 = dispatch thunk of Actor.unownedExecutor.getter();
    *(void *)(v0 + 256) = v8;
    *(void *)(v0 + 264) = v7;
    return _swift_task_switch(sub_100E582C8, v8, v7);
  }
}

uint64_t sub_100E57EA8()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 232);
  uint64_t v2 = *(void *)(*(void *)v0 + 224);
  return _swift_task_switch(sub_100E57FB0, v2, v1);
}

uint64_t sub_100E57FB0()
{
  char v1 = *(unsigned char *)(v0 + 305);

  if (v1) {
    goto LABEL_2;
  }
  uint64_t v4 = *(void *)(v0 + 200);
  uint64_t v5 = *(void *)(v0 + 168) + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_lastPrintContentDate;
  swift_beginAccess();
  sub_100522E9C(v5, v4, &qword_101672EB0);
  uint64_t v6 = type metadata accessor for Date();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(v4, 1, v6);
  sub_100522F00(v4, &qword_101672EB0);
  if (v9 == 1) {
    goto LABEL_8;
  }
  uint64_t v10 = *(void *)(v0 + 192);
  sub_100522E9C(v5, v10, &qword_101672EB0);
  uint64_t result = v8(v10, 1, v6);
  if (result == 1)
  {
    __break(1u);
    return result;
  }
  uint64_t v11 = *(void *)(v0 + 192);
  Date.timeIntervalSinceNow.getter();
  double v13 = v12;
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v11, v6);
  if (fabs(v13) <= 1.5)
  {
LABEL_2:
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
    return v2();
  }
  else
  {
LABEL_8:
    uint64_t v14 = *(void *)(v0 + 184);
    static Date.now.getter();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v7 + 56))(v14, 0, 1, v6);
    swift_beginAccess();
    sub_1006063BC(v14, v5, &qword_101672EB0);
    swift_endAccess();
    id v15 = sub_100E3C594();
    id v16 = [v15 mode];

    LODWORD(v15) = [v16 wantsToEndForNonPopoverPresentations];
    if (v15)
    {
      id v17 = sub_100E3C594();
      [v17 resetToDefaultModeAnimated:1];
    }
    uint64_t v18 = (void *)swift_task_alloc();
    *(void *)(v0 + 296) = v18;
    void *v18 = v0;
    v18[1] = sub_100E588A0;
    uint64_t v19 = *(void *)(v0 + 176);
    char v20 = *(unsigned char *)(v0 + 304);
    return sub_100E58A3C(v20, v19);
  }
}

uint64_t sub_100E582C8()
{
  uint64_t v1 = v0[21];
  uint64_t v2 = static MainActor.shared.getter();
  v0[34] = v2;
  uint64_t v3 = swift_task_alloc();
  v0[35] = v3;
  *(void *)(v3 + 16) = v1;
  *(unsigned char *)(v3 + 24) = 1;
  uint64_t v4 = (void *)swift_task_alloc();
  v0[36] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_100E583D8;
  return withCheckedContinuation<A>(isolation:function:_:)(v4, v2, &protocol witness table for MainActor, 0xD000000000000048, 0x800000010128FA20, sub_100E71AA0, v3, (char *)&type metadata for () + 8);
}

uint64_t sub_100E583D8()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_release();
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 264);
  uint64_t v3 = *(void *)(v1 + 256);
  return _swift_task_switch(sub_100E58538, v3, v2);
}

uint64_t sub_100E58538()
{
  swift_release();
  uint64_t v1 = *(void *)(v0 + 224);
  uint64_t v2 = *(void *)(v0 + 232);
  return _swift_task_switch(sub_100E5859C, v1, v2);
}

uint64_t sub_100E5859C()
{
  uint64_t v1 = *(void *)(v0 + 200);
  uint64_t v2 = *(void *)(v0 + 168) + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_lastPrintContentDate;
  swift_beginAccess();
  sub_100522E9C(v2, v1, &qword_101672EB0);
  uint64_t v3 = type metadata accessor for Date();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
  int v6 = v5(v1, 1, v3);
  sub_100522F00(v1, &qword_101672EB0);
  if (v6 == 1) {
    goto LABEL_4;
  }
  uint64_t v7 = *(void *)(v0 + 192);
  sub_100522E9C(v2, v7, &qword_101672EB0);
  uint64_t result = v5(v7, 1, v3);
  if (result == 1)
  {
    __break(1u);
    return result;
  }
  uint64_t v9 = *(void *)(v0 + 192);
  Date.timeIntervalSinceNow.getter();
  double v11 = v10;
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v9, v3);
  if (fabs(v11) > 1.5)
  {
LABEL_4:
    uint64_t v12 = *(void *)(v0 + 184);
    static Date.now.getter();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v4 + 56))(v12, 0, 1, v3);
    swift_beginAccess();
    sub_1006063BC(v12, v2, &qword_101672EB0);
    swift_endAccess();
    id v13 = sub_100E3C594();
    id v14 = [v13 mode];

    LODWORD(v13) = [v14 wantsToEndForNonPopoverPresentations];
    if (v13)
    {
      id v15 = sub_100E3C594();
      [v15 resetToDefaultModeAnimated:1];
    }
    id v16 = (void *)swift_task_alloc();
    *(void *)(v0 + 296) = v16;
    *id v16 = v0;
    v16[1] = sub_100E588A0;
    char v17 = *(unsigned char *)(v0 + 304);
    uint64_t v18 = *(void *)(v0 + 176);
    return sub_100E58A3C(v17, v18);
  }
  else
  {
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v19 = *(uint64_t (**)(void))(v0 + 8);
    return v19();
  }
}

uint64_t sub_100E588A0()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 232);
  uint64_t v3 = *(void *)(v1 + 224);
  return _swift_task_switch(sub_100E589C0, v3, v2);
}

uint64_t sub_100E589C0()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100E58A3C(char a1, uint64_t a2)
{
  *(void *)(v3 + 120) = a2;
  *(void *)(v3 + 128) = v2;
  *(unsigned char *)(v3 + 184) = a1;
  type metadata accessor for MainActor();
  *(void *)(v3 + 136) = static MainActor.shared.getter();
  uint64_t v5 = dispatch thunk of Actor.unownedExecutor.getter();
  *(void *)(v3 + 144) = v5;
  *(void *)(v3 + 152) = v4;
  return _swift_task_switch(sub_100E58AD8, v5, v4);
}

uint64_t sub_100E58AD8()
{
  uint64_t v1 = *(void **)(*(void *)(v0 + 128)
                + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interactiveCanvasController);
  *(void *)(v0 + 160) = v1;
  uint64_t v2 = [v1 textInputResponder];
  if (v2)
  {
    v2[OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_endTextInputWhenFirstResponderResigns] = 0;
  }
  if (qword_10166F248 != -1) {
    swift_once();
  }
  uint64_t v4 = *(void *)(v0 + 120);
  uint64_t v3 = *(char **)(v0 + 128);
  char v5 = *(unsigned char *)(v0 + 184);
  uint64_t v6 = *(void *)(*(void *)&v3[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_editingCoordinator]
                 + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_boardActor);
  swift_retain();
  id v7 = [v3 topMostViewController];
  [v1 visibleUnscaledRect];
  sub_1007BEEA4(v6, v7, v4, v5, v8, v9, v10, v11);

  swift_release();
  id v14 = (uint64_t (*)(void))((char *)&dword_101680D60 + dword_101680D60);
  uint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v0 + 168) = v12;
  void *v12 = v0;
  v12[1] = sub_100E58C80;
  return v14();
}

uint64_t sub_100E58C80()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 176) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 152);
  uint64_t v4 = *(void *)(v2 + 144);
  if (v0) {
    char v5 = sub_100E58E50;
  }
  else {
    char v5 = sub_100E58DBC;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_100E58DBC()
{
  swift_release();
  uint64_t v1 = [*(id *)(v0 + 160) textInputResponder];
  if (v1)
  {
    v1[OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_endTextInputWhenFirstResponderResigns] = 1;
  }
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_100E58E50()
{
  swift_release();
  if (qword_10166F9C8 != -1) {
    swift_once();
  }
  uint64_t v1 = *(void *)(v0 + 176);
  swift_beginAccess();
  uint64_t v2 = (void *)static OS_os_log.crlDefault;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117E810;
  *(void *)(v0 + 112) = v1;
  id v4 = v2;
  swift_errorRetain();
  sub_1005057FC(&qword_101672BD0);
  uint64_t v5 = String.init<A>(describing:)();
  uint64_t v7 = v6;
  *(void *)(inited + 56) = &type metadata for String;
  *(void *)(inited + 64) = sub_100528BE4();
  *(void *)(inited + 32) = v5;
  *(void *)(inited + 40) = v7;
  uint64_t v8 = static os_log_type_t.error.getter();
  sub_100BAC898((uint64_t)v4, (uint64_t)&_mh_execute_header, v8, (uint64_t)"Error trying to show print UI. %@", 33, 2, inited);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  swift_errorRelease();
  double v9 = [*(id *)(v0 + 160) textInputResponder];
  if (v9)
  {
    v9[OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_endTextInputWhenFirstResponderResigns] = 1;
  }
  double v10 = *(uint64_t (**)(void))(v0 + 8);
  return v10();
}

id sub_100E59028()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for CRLBoardCRDTData(0);
  __chkstk_darwin(v2 - 8, v3);
  uint64_t v5 = (char *)&v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for UUID();
  __chkstk_darwin(v6 - 8, v7);
  double v9 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for CRLBoardIdentifier(0);
  __chkstk_darwin(v10 - 8, v11);
  id v13 = (char *)&v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for CRLBoardViewModelMetadata(0);
  __chkstk_darwin(v14 - 8, v15);
  char v17 = (char *)&v32 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v19 = (void *)Strong;
    uint64_t v20 = *(char **)(*(void *)(v1 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_editingCoordinator)
                   + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard);
    uint64_t v21 = OBJC_IVAR____TtC8Freeform8CRLBoard_data;
    uint64_t v22 = *(void *)&v20[OBJC_IVAR____TtC8Freeform8CRLBoard_data] + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
    swift_beginAccess();
    sub_100E77E88(v22, (uint64_t)v5, type metadata accessor for CRLBoardCRDTData);
    BOOL v23 = v20;
    swift_retain();
    sub_1005057FC(&qword_101674550);
    CRRegister.wrappedValue.getter();
    sub_100E77EF0((uint64_t)v5, type metadata accessor for CRLBoardCRDTData);
    swift_release();
    uint64_t v24 = (uint64_t *)(*(void *)&v20[v21] + OBJC_IVAR____TtC8Freeform12CRLBoardData_ownerName);
    uint64_t v25 = *v24;
    unint64_t v26 = v24[1];
    swift_bridgeObjectRetain();
    sub_100753370((uint64_t)v9, v25, v26, (uint64_t)v13);

    sub_100ED7F04((uint64_t)v13, (uint64_t)v17);
    sub_100E77EF0((uint64_t)v13, type metadata accessor for CRLBoardIdentifier);

    LOBYTE(v25) = *v17;
    sub_100E77EF0((uint64_t)v17, type metadata accessor for CRLBoardViewModelMetadata);
    uint64_t v27 = v25 ^ 1u;
  }
  else
  {
    LOBYTE(v27) = 1;
  }
  unsigned int v28 = [*(id *)(v1 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interactiveCanvasController) documentIsSharedReadOnly];
  id v29 = (id)(v28 ^ 1);
  if ((v28 & 1) == 0 && (v27 & 1) == 0)
  {
    id v30 = sub_100E3C82C();
    id v29 = [v30 isEnabled];
  }
  return v29;
}

void sub_100E59390()
{
  sub_1005E873C();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

id sub_100E59800(void *a1)
{
  id v3 = sub_100E3C594();
  [v3 resetToDefaultModeAnimated:1];

  [*(id *)&v1[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_canvasViewController] leaveQuickSelectModeIfNeeded];
  uint64_t v4 = *(void **)&v1[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_compactScenesNavigatorViewController];
  if (v4) {
    [v4 dismissViewControllerAnimated:1 completion:0];
  }
  id v5 = [a1 collaboratorColorForType:2];
  [v1 rectForBorder];
  double v7 = v6;
  double v9 = v8;
  double v11 = v10;
  double v13 = v12;
  uint64_t v14 = (char *)objc_allocWithZone((Class)type metadata accessor for CRLFollowBorderHighlightView());
  uint64_t v15 = v1;
  id v16 = sub_100E6F8E4(v15, v5, v14, 8.0, v7, v9, v11, v13);
  uint64_t v17 = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_followBorderHighlightView;
  uint64_t v18 = *(void **)&v15[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_followBorderHighlightView];
  *(void *)&v15[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_followBorderHighlightView] = v16;

  uint64_t v19 = *(void **)&v15[v17];
  if (!v19) {
    goto LABEL_10;
  }
  id v20 = v19;
  [v20 setTranslatesAutoresizingMaskIntoConstraints:0];
  id result = [v15 view];
  if (!result)
  {
    __break(1u);
    goto LABEL_21;
  }
  uint64_t v22 = result;
  [result addSubview:v20];

  sub_1005057FC((uint64_t *)&unk_101676C10);
  uint64_t v23 = swift_allocObject();
  *(_OWORD *)(v23 + 16) = xmmword_10117FBE0;
  id v24 = [v20 topAnchor];
  id result = [v15 view];
  if (!result)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v25 = result;
  id v26 = [result safeAreaLayoutGuide];

  id v27 = [v26 topAnchor];
  id v28 = [v24 constraintEqualToAnchor:v27];

  *(void *)(v23 + 32) = v28;
  id v29 = [v20 leadingAnchor];
  id result = [v15 view];
  if (!result)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  id v30 = result;
  id v31 = [result leadingAnchor];

  id v32 = [v29 constraintEqualToAnchor:v31];
  *(void *)(v23 + 40) = v32;
  id v33 = [v20 trailingAnchor];
  id result = [v15 view];
  if (!result)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  id v34 = result;
  id v35 = [result trailingAnchor];

  id v36 = [v33 constraintEqualToAnchor:v35];
  *(void *)(v23 + 48) = v36;
  id v37 = [v20 bottomAnchor];
  id result = [v15 view];
  if (!result)
  {
LABEL_24:
    __break(1u);
    return result;
  }
  objc_super v38 = result;
  long long v39 = self;
  id v40 = [v38 bottomAnchor];

  id v41 = [v37 constraintEqualToAnchor:v40];
  *(void *)(v23 + 56) = v41;
  children._rawValue = (void *)v23;
  specialized Array._endMutation()();
  sub_10050BF48(0, (unint64_t *)&qword_101674200);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v39 activateConstraints:isa];

LABEL_10:
  id v43 = *(void **)&v15[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_canvasZoomControlViewController];
  if (v43)
  {
    id v44 = v43;
    Class v45 = sub_1005E9AA8();
    uint64_t v46 = OBJC_IVAR____TtC8Freeform37CRLiOSCanvasZoomControlViewController_menu;
    id v47 = *(void **)&v44[OBJC_IVAR____TtC8Freeform37CRLiOSCanvasZoomControlViewController_menu];
    *(void *)&v44[OBJC_IVAR____TtC8Freeform37CRLiOSCanvasZoomControlViewController_menu] = v45;

    id v48 = sub_1005E9728();
    id v49 = *(id *)&v44[v46];
    [v48 setMenu:v49];
  }
  id v50 = *(void **)&v15[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_boardControlsViewController];
  if (v50)
  {
    id v51 = v50;
    sub_1009A5FA0();
  }
  id v52 = sub_100E3C92C();
  sub_10050BF48(0, &qword_101673A80);
  UIMenuElementSize preferredElementSize = sub_10059D888();
  v53._countAndFlagsBits = 0;
  v53._object = (void *)0xE000000000000000;
  v71.value.super.Class isa = 0;
  v71.is_nil = 0;
  Class v54 = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v53, (Swift::String_optional)0, v71, (UIMenuIdentifier_optional)1, 0xFFFFFFFFFFFFFFFFLL, preferredElementSize, children).super.super.isa;
  [v52 setMenu:v54];

  id v55 = *(void **)&v15[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interactiveCanvasController];
  id v56 = *(id *)&v15[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_statusHUDManager];
  id v57 = a1;
  [v55 unobscuredScrollViewFrame];
  double v59 = v58;
  id v60 = objc_retain(*(id *)(*(void *)&v15[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_editingCoordinator]
                          + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_followCoordinator));
  id v61 = sub_1007F9FB0();

  uint64_t v62 = swift_allocObject();
  *(void *)(v62 + 16) = v15;
  id v63 = objc_allocWithZone((Class)type metadata accessor for CRLPersistentFollowHUDController());
  id v64 = v15;
  id v65 = sub_100E6F6EC(v56, v57, 0, v61, (uint64_t)sub_100E76DC8, v62, v59);
  swift_unknownObjectWeakAssign();
  uint64_t v66 = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_followHUD;
  v67 = *(void **)&v64[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_followHUD];
  if (v67)
  {
    swift_unknownObjectRetain();
    sub_100E6E688(v67, v65, (uint64_t)v56);
    swift_unknownObjectRelease();
  }
  else
  {
    sub_100E6EDF0(v65, (uint64_t)v56, (uint64_t (*)(uint64_t *))sub_100E77F50, (uint64_t (*)(uint64_t *))sub_100E77F6C, (uint64_t)&unk_101530558, (uint64_t)sub_100E77F88, (uint64_t)&unk_101530570, 0.0);
  }

  *(void *)&v64[v66] = v65;

  return (id)swift_unknownObjectRelease();
}

void sub_100E59EE4(uint64_t a1)
{
  uint64_t v1 = *(void **)(*(void *)(a1 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_editingCoordinator)
                + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_followCoordinator);
  v5[3] = &type metadata for CRLFeatureFlags;
  v5[4] = (id)sub_1005396A8();
  LOBYTE(v5[0]) = 12;
  id v2 = v1;
  LOBYTE(v1) = isFeatureEnabled(_:)();
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v5);
  if (v1)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    if (v5[0])
    {

      if (qword_10166FAE0 != -1) {
        swift_once();
      }
      swift_beginAccess();
      id v3 = (id)static OS_os_log.crlFollow;
      uint64_t v4 = static os_log_type_t.default.getter();
      sub_100BAC898((uint64_t)v3, (uint64_t)&_mh_execute_header, v4, (uint64_t)"Calling didEndFollowing because of the public endFollowSessionForLocalParticipant method was called", 99, 2, (uint64_t)_swiftEmptyArrayStorage);

      sub_1007ECCE4(0);
    }
  }
}

void sub_100E5A0B8(void *a1, char a2)
{
  id v3 = v2;
  uint64_t v6 = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_followBorderHighlightView;
  double v7 = *(void **)&v3[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_followBorderHighlightView];
  if (v7)
  {
    [v7 removeFromSuperview];
    double v8 = *(void **)&v3[v6];
  }
  else
  {
    double v8 = 0;
  }
  *(void *)&v3[v6] = 0;

  double v9 = *(void **)&v3[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_canvasZoomControlViewController];
  if (v9)
  {
    double v10 = v9;
    Class v11 = sub_1005E9AA8();
    uint64_t v12 = OBJC_IVAR____TtC8Freeform37CRLiOSCanvasZoomControlViewController_menu;
    double v13 = *(void **)&v10[OBJC_IVAR____TtC8Freeform37CRLiOSCanvasZoomControlViewController_menu];
    *(void *)&v10[OBJC_IVAR____TtC8Freeform37CRLiOSCanvasZoomControlViewController_menu] = v11;

    id v14 = sub_1005E9728();
    id v15 = *(id *)&v10[v12];
    [v14 setMenu:v15];
  }
  id v16 = *(void **)&v3[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_boardControlsViewController];
  if (v16)
  {
    id v17 = v16;
    sub_1009A5FA0();
  }
  id v18 = sub_100E3C92C();
  sub_10050BF48(0, &qword_101673A80);
  UIMenuElementSize preferredElementSize = sub_10059D888();
  v19._countAndFlagsBits = 0;
  v19._object = (void *)0xE000000000000000;
  v42.value.super.Class isa = 0;
  v42.is_nil = 0;
  Class isa = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v19, (Swift::String_optional)0, v42, (UIMenuIdentifier_optional)1, 0xFFFFFFFFFFFFFFFFLL, preferredElementSize, v40).super.super.isa;
  [v18 setMenu:isa];

  uint64_t v21 = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_followHUD;
  if (*(void *)&v3[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_followHUD])
  {
    uint64_t v22 = *(void **)&v3[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_statusHUDManager];
    if ((a2 & 1) != 0 && a1)
    {
      uint64_t v23 = *(void **)&v3[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interactiveCanvasController];
      id v24 = v22;
      id v25 = a1;
      id v26 = v24;
      id v27 = v25;
      swift_unknownObjectRetain();
      [v23 unobscuredScrollViewFrame];
      double v29 = v28;
      uint64_t v30 = swift_allocObject();
      *(void *)(v30 + 16) = v3;
      *(void *)(v30 + 24) = v27;
      id v31 = objc_allocWithZone((Class)type metadata accessor for CRLTransientRefollowHUDController());
      id v32 = v27;
      id v33 = v3;
      id v34 = sub_100E6FA5C(v26, v32, 0, (uint64_t)sub_100E76DBC, v30, v29);
      id v35 = (void *)swift_unknownObjectRetain();
      sub_100E6EA3C(v35, v34, (uint64_t)v26);
      swift_unknownObjectRelease();
      *(void *)&v3[v21] = v34;
      id v36 = v34;
      swift_unknownObjectRelease();
      CRLAccessibilityPostLayoutChangedNotification(*(void **)&v36[OBJC_IVAR____TtC8Freeform33CRLTransientRefollowHUDController_hudView]);
      swift_unknownObjectWeakAssign();
    }
    else
    {
      id v37 = v22;
      objc_super v38 = (void *)swift_unknownObjectRetain();
      CRLStatusHUDManager.hide(hudController:)(v38);
      *(void *)&v3[v21] = 0;

      swift_unknownObjectRelease();
    }
    swift_unknownObjectRelease();
  }
}

void sub_100E5A3DC(uint64_t a1, void *a2)
{
  id v3 = objc_retain(*(id *)(*(void *)(a1 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_editingCoordinator)
                         + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_followCoordinator));
  sub_1007EDEA4(a2, 1);
}

void sub_100E5A4D4(char *a1, uint64_t a2, void *a3, char a4)
{
  uint64_t v6 = *(void **)&a1[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_statusHUDManager];
  double v7 = *(void **)&a1[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interactiveCanvasController];
  id v8 = a3;
  id v9 = v6;
  id v10 = v8;
  Class v11 = a1;
  [v7 unobscuredScrollViewFrame];
  double v13 = v12;
  id v14 = objc_allocWithZone((Class)type metadata accessor for CRLTransientStartEndFollowHUDController());
  id v15 = sub_100E6FCDC(v9, v10, 0, a4, v13);
  sub_100E6EDF0(v15, (uint64_t)v9, (uint64_t (*)(uint64_t *))sub_100E77F50, (uint64_t (*)(uint64_t *))sub_100E77F6C, (uint64_t)&unk_101530468, (uint64_t)sub_100E77F88, (uint64_t)&unk_101530480, 0.0);
}

void sub_100E5A61C(char *a1, uint64_t a2, void *a3, char a4)
{
  double v7 = *(void **)&a1[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interactiveCanvasController];
  id v8 = *(id *)&a1[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_statusHUDManager];
  id v9 = a1;
  [v7 unobscuredScrollViewFrame];
  double v11 = v10;
  id v12 = objc_allocWithZone((Class)type metadata accessor for CRLTransientStartEndFollowHUDController());
  double v13 = sub_100E6FF04(v8, a3, 0, a4, v11);
  sub_100E6EDF0(v13, (uint64_t)v8, (uint64_t (*)(uint64_t *))sub_100E77F50, (uint64_t (*)(uint64_t *))sub_100E77F6C, (uint64_t)&unk_101530468, (uint64_t)sub_100E77F88, (uint64_t)&unk_101530480, 0.0);
}

void sub_100E5A744(unint64_t a1)
{
  sub_100DC1D10(a1);
  sub_100DC1E34(a1);
  NSString v3 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  NSString v4 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v11 = [self alertControllerWithTitle:v3 message:v4 preferredStyle:1];

  id v5 = [self mainBundle];
  NSString v6 = String._bridgeToObjectiveC()();
  NSString v7 = String._bridgeToObjectiveC()();
  id v8 = [v5 localizedStringForKey:v6 value:v7 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v9 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v10 = [self actionWithTitle:v9 style:0 handler:0];

  [v11 addAction:v10];
  sub_100F2BCC8(v11);
  [v1 presentViewController:v11 animated:1 completion:0];
}

void sub_100E5A97C(uint64_t a1, uint64_t a2)
{
  id v5 = self;
  id v6 = [v5 mainBundle];
  NSString v7 = String._bridgeToObjectiveC()();
  NSString v8 = String._bridgeToObjectiveC()();
  id v9 = [v6 localizedStringForKey:v7 value:v8 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  sub_100DC1F8C(a1, a2);
  NSString v10 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  NSString v11 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v18 = [self alertControllerWithTitle:v10 message:v11 preferredStyle:1];

  id v12 = [v5 mainBundle];
  NSString v13 = String._bridgeToObjectiveC()();
  NSString v14 = String._bridgeToObjectiveC()();
  id v15 = [v12 localizedStringForKey:v13 value:v14 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v16 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v17 = [self actionWithTitle:v16 style:0 handler:0];

  [v18 addAction:v17];
  sub_100F2BCC8(v18);
  [v2 presentViewController:v18 animated:1 completion:0];
}

void sub_100E5AC6C()
{
  uint64_t v1 = self;
  id v2 = [v1 mainBundle];
  NSString v3 = String._bridgeToObjectiveC()();
  NSString v4 = String._bridgeToObjectiveC()();
  id v5 = [v2 localizedStringForKey:v3 value:v4 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  id v6 = [v1 mainBundle];
  NSString v7 = String._bridgeToObjectiveC()();
  NSString v8 = String._bridgeToObjectiveC()();
  id v9 = [v6 localizedStringForKey:v7 value:v8 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v10 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  NSString v11 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v18 = [self alertControllerWithTitle:v10 message:v11 preferredStyle:1];

  id v12 = [v1 mainBundle];
  NSString v13 = String._bridgeToObjectiveC()();
  NSString v14 = String._bridgeToObjectiveC()();
  id v15 = [v12 localizedStringForKey:v13 value:v14 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v16 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v17 = [self actionWithTitle:v16 style:0 handler:0];

  [v18 addAction:v17];
  sub_100F2BCC8(v18);
  [v0 presentViewController:v18 animated:1 completion:0];
}

void *sub_100E5B070(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, void *a5)
{
  NSString v11 = String._bridgeToObjectiveC()();
  if (a4)
  {
    uint64_t v30 = (void (*)(int))a4;
    id v31 = a5;
    aBlock = _NSConcreteStackBlock;
    uint64_t v27 = *(void *)"";
    double v28 = sub_100679958;
    double v29 = &unk_101530340;
    id v12 = _Block_copy(&aBlock);
    swift_retain();
    swift_release();
  }
  else
  {
    id v12 = 0;
  }
  id v13 = [v5 beginModalOperationWithLocalizedMessage:v11 progress:a3 cancelHandler:v12];
  _Block_release(v12);

  if (v13)
  {
    self;
    uint64_t v14 = swift_dynamicCastObjCClass();
    if (v14)
    {
      id v15 = (void *)v14;
      if (!a3) {
        return v15;
      }
      goto LABEL_10;
    }
    swift_unknownObjectRelease();
  }
  sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"beginModalOperation(withPresentedLocalizedMessage:progress:cancelHandler:)", 74, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSBoardViewController.swift", 95, 2, 2822, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
  sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"beginModalOperation(withPresentedLocalizedMessage:progress:cancelHandler:)", 74, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSBoardViewController.swift", 95, 2, 2822);
  id v15 = 0;
  if (a3)
  {
LABEL_10:
    NSString v16 = self;
    id v17 = (void *)swift_allocObject();
    v17[2] = a3;
    void v17[3] = v5;
    v17[4] = a1;
    v17[5] = a2;
    v17[6] = a4;
    v17[7] = a5;
    v17[8] = v15;
    uint64_t v30 = sub_100E76D6C;
    id v31 = v17;
    aBlock = _NSConcreteStackBlock;
    uint64_t v27 = *(void *)"";
    double v28 = sub_10051CE64;
    double v29 = &unk_101530318;
    id v18 = _Block_copy(&aBlock);
    id v19 = a3;
    sub_1005173A0(a4);
    id v20 = v15;
    id v21 = v19;
    uint64_t v22 = v5;
    swift_bridgeObjectRetain();
    swift_release();
    id v23 = [v16 scheduledTimerWithTimeInterval:1 repeats:v18 block:1.0];
    _Block_release(v18);
    id v24 = *(void **)&v22[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_progressTimer];
    *(void *)&v22[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_progressTimer] = v23;
  }
  return v15;
}

void sub_100E5B364(int a1, id a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8)
{
  [a2 value];
  if (v13 >= 0.0)
  {
    [a2 value];
    double v15 = v14;
    [a2 maxValue];
    if (v15 < v16)
    {
      [*(id *)(a3 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_progressTimer) invalidate];
      if (a6)
      {
        uint64_t v17 = swift_allocObject();
        *(void *)(v17 + 16) = a6;
        *(void *)(v17 + 24) = a7;
        id v18 = sub_1006591F0;
      }
      else
      {
        id v18 = SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:);
        uint64_t v17 = 0;
      }
      uint64_t v19 = swift_allocObject();
      *(void *)(v19 + 16) = v18;
      *(void *)(v19 + 24) = v17;
      sub_1005173A0(a6);
      swift_bridgeObjectRetain();
      id v20 = a2;
      NSString v21 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      id v34 = sub_100E76D80;
      uint64_t v35 = v19;
      uint64_t v30 = _NSConcreteStackBlock;
      uint64_t v31 = *(void *)"";
      id v32 = sub_100679958;
      id v33 = &unk_101530390;
      uint64_t v22 = _Block_copy(&v30);
      id v23 = [self progressViewControllerWithTitle:v21 crlProgress:v20 cancelHandler:v22];

      _Block_release(v22);
      swift_release();
      id v24 = *(void **)(a3 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_progressViewController);
      *(void *)(a3 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_progressViewController) = v23;
      id v25 = v23;

      id v26 = *(void **)(a3 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_canvasViewController);
      uint64_t v27 = swift_allocObject();
      *(void *)(v27 + 16) = a8;
      id v34 = sub_100E76DA8;
      uint64_t v35 = v27;
      uint64_t v30 = _NSConcreteStackBlock;
      uint64_t v31 = *(void *)"";
      id v32 = sub_100679958;
      id v33 = &unk_1015303E0;
      double v28 = _Block_copy(&v30);
      id v29 = a8;
      swift_release();
      [v26 presentViewController:v25 animated:1 completion:v28];
      _Block_release(v28);
    }
  }
}

void sub_100E5B734(uint64_t a1)
{
  uint64_t v2 = v1;
  if (a1 && (self, (uint64_t v3 = swift_dynamicCastObjCClass()) != 0))
  {
    NSString v4 = (void *)v3;
    swift_unknownObjectRetain();
    [v4 endIgnoringUserInteractionSafely];
    if (!*(void *)(*(void *)(v2 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_editingCoordinator)
                    + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_suspendResumeCoordinator))
    {
      __break(1u);
      return;
    }
    sub_100740C8C(0xD000000000000012, 0x800000010128FF80);
    swift_unknownObjectRelease();
  }
  else
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"endModalOperation(with:)", 24, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSBoardViewController.swift", 95, 2, 2847, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    LOBYTE(v12) = 2;
    NSString v10 = "invalid nil found when unwrapping value";
    uint64_t v11 = 39;
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"endModalOperation(with:)", 24, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSBoardViewController.swift", 95, 2, 2847);
  }
  uint64_t v5 = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_progressTimer;
  [*(id *)(v2 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_progressTimer) invalidate:v10, v11, v12];
  uint64_t v6 = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_progressViewController;
  NSString v7 = *(void **)(v2 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_progressViewController);
  if (v7) {
    [v7 dismissViewControllerAnimated:1 completion:0];
  }
  NSString v8 = *(void **)(v2 + v5);
  *(void *)(v2 + v5) = 0;

  id v9 = *(void **)(v2 + v6);
  *(void *)(v2 + v6) = 0;
}

BOOL sub_100E5BA58()
{
  uint64_t v1 = v0;
  if ([v0 isInDrawingMode])
  {
    if (qword_10166F9C8 != -1) {
      swift_once();
    }
    swift_beginAccess();
    id v2 = (id)static OS_os_log.crlDefault;
    uint64_t v3 = static os_log_type_t.info.getter();
    NSString v4 = "attempting to present tip whilst in drawing mode!";
    uint64_t v5 = (uint64_t)v2;
    uint64_t v6 = 49;
LABEL_10:
    sub_100BAC898(v5, (uint64_t)&_mh_execute_header, v3, (uint64_t)v4, v6, 2, (uint64_t)_swiftEmptyArrayStorage);

    return 0;
  }
  id v7 = sub_100D7A804();
  if (v7)
  {
    NSString v8 = v7;
    char v9 = sub_100A70DDC();

    if (v9)
    {
      if (qword_10166F9C8 != -1) {
        swift_once();
      }
      swift_beginAccess();
      id v2 = (id)static OS_os_log.crlDefault;
      uint64_t v3 = static os_log_type_t.info.getter();
      NSString v4 = "attempting to present tip whilst welcome controller is visible";
      uint64_t v5 = (uint64_t)v2;
      uint64_t v6 = 62;
      goto LABEL_10;
    }
  }
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();

  if (!Strong)
  {
    uint64_t v13 = (uint64_t)v1 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_currentlyPresentedTip;
    swift_beginAccess();
    sub_100522E9C(v13, (uint64_t)v14, &qword_101674708);
    BOOL v11 = v15 == 0;
    sub_100522F00((uint64_t)v14, &qword_101674708);
    return v11;
  }
  return 0;
}

void sub_100E5BC48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, ValueMetadata *a5, unint64_t a6)
{
  uint64_t v36 = a2;
  Description = a5[-1].Description;
  uint64_t v38 = a3;
  uint64_t v11 = Description[8];
  __chkstk_darwin(a1, a2);
  Swift::OpaquePointer v40 = &type metadata for CRLFeatureFlags;
  unint64_t v41 = sub_1005396A8();
  LOBYTE(aBlock[0]) = 0;
  char v12 = isFeatureEnabled(_:)();
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)aBlock);
  if (v12)
  {
    uint64_t v35 = v6;
    uint64_t v34 = a4;
    if (qword_10166F9C8 != -1) {
      swift_once();
    }
    swift_beginAccess();
    uint64_t v13 = (void *)static OS_os_log.crlDefault;
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_10117E810;
    id v15 = v13;
    uint64_t v16 = dispatch thunk of Tip.id.getter();
    uint64_t v18 = v17;
    *(void *)(inited + 56) = &type metadata for String;
    *(void *)(inited + 64) = sub_100528BE4();
    *(void *)(inited + 32) = v16;
    *(void *)(inited + 40) = v18;
    uint64_t v19 = static os_log_type_t.info.getter();
    sub_100BAC898((uint64_t)v15, (uint64_t)&_mh_execute_header, v19, (uint64_t)"presenting tip from a barButtonItem: %{public}@", 47, 2, inited);
    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();

    id v20 = v35;
    if (sub_100E5BA58())
    {
      v33[1] = type metadata accessor for TipUIPopoverViewController();
      Swift::OpaquePointer v40 = a5;
      unint64_t v41 = a6;
      NSString v21 = sub_1005767BC(aBlock);
      uint64_t v22 = Description;
      id v23 = (void (*)(uint64_t *, uint64_t, ValueMetadata *))Description[2];
      v23(v21, a1, a5);
      swift_unknownObjectRetain();
      id v24 = (void *)TipUIPopoverViewController.__allocating_init(_:sourceItem:actionHandler:)();
      swift_unknownObjectRetain();
      TipUIPopoverViewController.presentationDelegate.setter();
      v23((void *)((char *)v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0)), a1, a5);
      unint64_t v25 = (*((unsigned __int8 *)v22 + 80) + 48) & ~(unint64_t)*((unsigned __int8 *)v22 + 80);
      id v26 = (char *)swift_allocObject();
      *((void *)v26 + 2) = a5;
      *((void *)v26 + 3) = a6;
      *((void *)v26 + 4) = v20;
      *((void *)v26 + 5) = v24;
      ((void (*)(char *, char *, ValueMetadata *))v22[4])(&v26[v25], (char *)v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), a5);
      uint64_t v27 = (uint64_t *)&v26[(v11 + v25 + 7) & 0xFFFFFFFFFFFFFFF8];
      uint64_t v28 = v38;
      uint64_t v29 = v34;
      *uint64_t v27 = v38;
      v27[1] = v29;
      unint64_t v41 = (unint64_t)sub_100E77CC4;
      UIImage_optional v42 = v26;
      aBlock[0] = (uint64_t)_NSConcreteStackBlock;
      aBlock[1] = *(void *)"";
      aBlock[2] = (uint64_t)sub_100679958;
      Swift::OpaquePointer v40 = (ValueMetadata *)&unk_101530E30;
      uint64_t v30 = _Block_copy(aBlock);
      id v31 = v20;
      id v32 = v24;
      sub_1005173A0(v28);
      swift_release();
      [v31 presentViewController:v32 animated:1 completion:v30];

      _Block_release(v30);
    }
  }
}

uint64_t sub_100E5C020(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t), uint64_t a5, uint64_t a6, uint64_t a7)
{
  swift_unknownObjectWeakAssign();
  v15[3] = a6;
  v15[4] = a7;
  char v12 = sub_1005767BC(v15);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a6 - 8) + 16))(v12, a3, a6);
  uint64_t v13 = a1 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_currentlyPresentedTip;
  swift_beginAccess();
  sub_1006063BC((uint64_t)v15, v13, &qword_101674708);
  uint64_t result = swift_endAccess();
  if (a4) {
    return a4(result);
  }
  return result;
}

void sub_100E5C100(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v30 = &type metadata for CRLFeatureFlags;
  unint64_t v31 = sub_1005396A8();
  LOBYTE(aBlock[0]) = 0;
  char v9 = isFeatureEnabled(_:)();
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)aBlock);
  if (v9)
  {
    uint64_t v28 = a2;
    uint64_t v10 = a4;
    if (qword_10166F9C8 != -1) {
      swift_once();
    }
    swift_beginAccess();
    uint64_t v11 = (void *)static OS_os_log.crlDefault;
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_10117E810;
    unint64_t v13 = sub_1005C6E1C();
    id v14 = v11;
    uint64_t v15 = dispatch thunk of Tip.id.getter();
    uint64_t v17 = v16;
    *(void *)(inited + 56) = &type metadata for String;
    *(void *)(inited + 64) = sub_100528BE4();
    *(void *)(inited + 32) = v15;
    *(void *)(inited + 40) = v17;
    uint64_t v18 = static os_log_type_t.info.getter();
    sub_100BAC898((uint64_t)v14, (uint64_t)&_mh_execute_header, v18, (uint64_t)"presenting tip on canvas: %{public}@", 36, 2, inited);
    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();

    if (sub_100E5BA58())
    {
      type metadata accessor for TipUIPopoverViewController();
      uint64_t v30 = &type metadata for CRLTipConnectionLinesEntryPointFull;
      unint64_t v31 = v13;
      swift_unknownObjectRetain();
      uint64_t v19 = (void *)TipUIPopoverViewController.__allocating_init(_:sourceItem:actionHandler:)();
      swift_unknownObjectRetain();
      TipUIPopoverViewController.presentationDelegate.setter();
      uint64_t v20 = TipUIPopoverViewController.popoverPresentationController.getter();
      if (v20)
      {
        NSString v21 = (void *)v20;
        id v22 = [v5 traitCollection];
        id v23 = [v22 verticalSizeClass];

        if (v23 != (id)1) {
          [v21 setPermittedArrowDirections:v28];
        }
      }
      id v24 = (void *)swift_allocObject();
      v24[2] = v5;
      v24[3] = v19;
      v24[4] = a3;
      v24[5] = v10;
      unint64_t v31 = (unint64_t)sub_100E77D38;
      id v32 = v24;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = *(void *)"";
      aBlock[2] = sub_100679958;
      uint64_t v30 = (ValueMetadata *)&unk_101530E80;
      unint64_t v25 = _Block_copy(aBlock);
      id v26 = v5;
      id v27 = v19;
      sub_1005173A0(a3);
      swift_release();
      [v26 presentViewController:v27 animated:1 completion:v25];

      _Block_release(v25);
    }
  }
}

void sub_100E5C438(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v30 = &type metadata for CRLFeatureFlags;
  unint64_t v31 = sub_1005396A8();
  LOBYTE(aBlock[0]) = 0;
  char v9 = isFeatureEnabled(_:)();
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)aBlock);
  if (v9)
  {
    uint64_t v28 = a2;
    uint64_t v10 = a4;
    if (qword_10166F9C8 != -1) {
      swift_once();
    }
    swift_beginAccess();
    uint64_t v11 = (void *)static OS_os_log.crlDefault;
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_10117E810;
    unint64_t v13 = sub_1005C6E70();
    id v14 = v11;
    uint64_t v15 = dispatch thunk of Tip.id.getter();
    uint64_t v17 = v16;
    *(void *)(inited + 56) = &type metadata for String;
    *(void *)(inited + 64) = sub_100528BE4();
    *(void *)(inited + 32) = v15;
    *(void *)(inited + 40) = v17;
    uint64_t v18 = static os_log_type_t.info.getter();
    sub_100BAC898((uint64_t)v14, (uint64_t)&_mh_execute_header, v18, (uint64_t)"presenting tip on canvas: %{public}@", 36, 2, inited);
    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();

    if (sub_100E5BA58())
    {
      type metadata accessor for TipUIPopoverViewController();
      uint64_t v30 = &type metadata for CRLTipConnectionLinesOnSelection;
      unint64_t v31 = v13;
      swift_unknownObjectRetain();
      uint64_t v19 = (void *)TipUIPopoverViewController.__allocating_init(_:sourceItem:actionHandler:)();
      swift_unknownObjectRetain();
      TipUIPopoverViewController.presentationDelegate.setter();
      uint64_t v20 = TipUIPopoverViewController.popoverPresentationController.getter();
      if (v20)
      {
        NSString v21 = (void *)v20;
        id v22 = [v5 traitCollection];
        id v23 = [v22 verticalSizeClass];

        if (v23 != (id)1) {
          [v21 setPermittedArrowDirections:v28];
        }
      }
      id v24 = (void *)swift_allocObject();
      v24[2] = v5;
      v24[3] = v19;
      v24[4] = a3;
      v24[5] = v10;
      unint64_t v31 = (unint64_t)sub_100E7749C;
      id v32 = v24;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = *(void *)"";
      aBlock[2] = sub_100679958;
      uint64_t v30 = (ValueMetadata *)&unk_101530B10;
      unint64_t v25 = _Block_copy(aBlock);
      id v26 = v5;
      id v27 = v19;
      sub_1005173A0(a3);
      swift_release();
      [v26 presentViewController:v27 animated:1 completion:v25];

      _Block_release(v25);
    }
  }
}

void sub_100E5C770(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v30 = &type metadata for CRLFeatureFlags;
  unint64_t v31 = sub_1005396A8();
  LOBYTE(aBlock[0]) = 0;
  char v9 = isFeatureEnabled(_:)();
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)aBlock);
  if (v9)
  {
    uint64_t v28 = a2;
    uint64_t v10 = a4;
    if (qword_10166F9C8 != -1) {
      swift_once();
    }
    swift_beginAccess();
    uint64_t v11 = (void *)static OS_os_log.crlDefault;
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_10117E810;
    unint64_t v13 = sub_1005C75A4();
    id v14 = v11;
    uint64_t v15 = dispatch thunk of Tip.id.getter();
    uint64_t v17 = v16;
    *(void *)(inited + 56) = &type metadata for String;
    *(void *)(inited + 64) = sub_100528BE4();
    *(void *)(inited + 32) = v15;
    *(void *)(inited + 40) = v17;
    uint64_t v18 = static os_log_type_t.info.getter();
    sub_100BAC898((uint64_t)v14, (uint64_t)&_mh_execute_header, v18, (uint64_t)"presenting tip on canvas: %{public}@", 36, 2, inited);
    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();

    if (sub_100E5BA58())
    {
      type metadata accessor for TipUIPopoverViewController();
      uint64_t v30 = &type metadata for CRLTipScenesEntryPointFull;
      unint64_t v31 = v13;
      swift_unknownObjectRetain();
      uint64_t v19 = (void *)TipUIPopoverViewController.__allocating_init(_:sourceItem:actionHandler:)();
      swift_unknownObjectRetain();
      TipUIPopoverViewController.presentationDelegate.setter();
      uint64_t v20 = TipUIPopoverViewController.popoverPresentationController.getter();
      if (v20)
      {
        NSString v21 = (void *)v20;
        id v22 = [v5 traitCollection];
        id v23 = [v22 verticalSizeClass];

        if (v23 != (id)1) {
          [v21 setPermittedArrowDirections:v28];
        }
      }
      id v24 = (void *)swift_allocObject();
      v24[2] = v5;
      v24[3] = v19;
      v24[4] = a3;
      v24[5] = v10;
      unint64_t v31 = (unint64_t)sub_100E77D90;
      id v32 = v24;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = *(void *)"";
      aBlock[2] = sub_100679958;
      uint64_t v30 = (ValueMetadata *)&unk_101530F70;
      unint64_t v25 = _Block_copy(aBlock);
      id v26 = v5;
      id v27 = v19;
      sub_1005173A0(a3);
      swift_release();
      [v26 presentViewController:v27 animated:1 completion:v25];

      _Block_release(v25);
    }
  }
}

uint64_t sub_100E5CAA8(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  swift_unknownObjectWeakAssign();
  char v9 = &type metadata for CRLTipConnectionLinesEntryPointFull;
  unint64_t v10 = sub_1005C6E1C();
  sub_10051B3EC((uint64_t)v8, (uint64_t)v7, &qword_101674708);
  uint64_t v5 = a1 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_currentlyPresentedTip;
  swift_beginAccess();
  sub_1006063BC((uint64_t)v7, v5, &qword_101674708);
  uint64_t result = swift_endAccess();
  if (a3) {
    return a3(result);
  }
  return result;
}

void sub_100E5CB60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  NSString v4 = v3;
  id v23 = &type metadata for CRLFeatureFlags;
  unint64_t v24 = sub_1005396A8();
  LOBYTE(v22[0]) = 0;
  char v7 = isFeatureEnabled(_:)();
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v22);
  if (v7)
  {
    uint64_t v8 = a3;
    if (qword_10166F9C8 != -1) {
      swift_once();
    }
    swift_beginAccess();
    char v9 = (void *)static OS_os_log.crlDefault;
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_10117E810;
    unint64_t v11 = sub_1005C7550();
    id v12 = v9;
    uint64_t v13 = dispatch thunk of Tip.id.getter();
    uint64_t v15 = v14;
    *(void *)(inited + 56) = &type metadata for String;
    *(void *)(inited + 64) = sub_100528BE4();
    *(void *)(inited + 32) = v13;
    *(void *)(inited + 40) = v15;
    uint64_t v16 = static os_log_type_t.info.getter();
    sub_100BAC898((uint64_t)v12, (uint64_t)&_mh_execute_header, v16, (uint64_t)"presenting tip on source item  menu: %{public}@", 47, 2, inited);
    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();

    if (sub_100E5BA58())
    {
      type metadata accessor for TipUIPopoverViewController();
      id v23 = &type metadata for CRLTipScenesEntryPointCompact;
      unint64_t v24 = v11;
      swift_unknownObjectRetain();
      uint64_t v17 = (void *)TipUIPopoverViewController.__allocating_init(_:sourceItem:actionHandler:)();
      swift_unknownObjectRetain();
      TipUIPopoverViewController.presentationDelegate.setter();
      uint64_t v18 = (void *)swift_allocObject();
      v18[2] = v4;
      v18[3] = v17;
      v18[4] = a2;
      v18[5] = v8;
      unint64_t v24 = (unint64_t)sub_100E77D50;
      unint64_t v25 = v18;
      v22[0] = _NSConcreteStackBlock;
      v22[1] = *(void *)"";
      v22[2] = sub_100679958;
      id v23 = (ValueMetadata *)&unk_101530F20;
      uint64_t v19 = _Block_copy(v22);
      id v20 = v4;
      id v21 = v17;
      sub_1005173A0(a2);
      swift_release();
      [v20 presentViewController:v21 animated:1 completion:v19];

      _Block_release(v19);
    }
  }
}

uint64_t sub_100E5CE2C()
{
  return sub_100E5CE74(&qword_10166F6E8, (uint64_t)qword_10171B490);
}

uint64_t sub_100E5CE50()
{
  return sub_100E5CE74(&qword_101670248, (uint64_t)qword_10171CCF0);
}

uint64_t sub_100E5CE74(void *a1, uint64_t a2)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v3 = sub_1005057FC(&qword_10167A2C0);
  sub_100556B74(v3, a2);
  Tips.Event.sendDonation<>(_:)();
  if (qword_10166F5A8 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_1005057FC(&qword_10169FA10);
  sub_100556B74(v4, (uint64_t)qword_10171B0D0);
  swift_beginAccess();
  Tips.Parameter.wrappedValue.setter();
  return swift_endAccess();
}

uint64_t sub_100E5CF54(void *a1)
{
  uint64_t v4 = (char **)[a1 knobs];
  sub_10050BF48(0, &qword_1016787C0);
  uint64_t v5 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if ((unint64_t)v5 >> 62)
  {
    if (v5 < 0) {
      uint64_t v4 = (char **)v5;
    }
    else {
      uint64_t v4 = (char **)(v5 & 0xFFFFFFFFFFFFFF8);
    }
    swift_bridgeObjectRetain();
    uint64_t v6 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v6) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v6 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v6)
    {
LABEL_3:
      if (v6 >= 1)
      {
        uint64_t v33 = v1;
        uint64_t v7 = 0;
        while (1)
        {
          if ((v5 & 0xC000000000000001) != 0) {
            id v8 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else {
            id v8 = *(id *)(v5 + 8 * v7 + 32);
          }
          char v9 = v8;
          type metadata accessor for CRLConnectionLineKnob();
          uint64_t v10 = swift_dynamicCastClass();
          if (!v10) {
            goto LABEL_6;
          }
          unint64_t v11 = (void *)v10;
          id v12 = v9;
          id v13 = [v11 rep];
          if (!v13)
          {

LABEL_17:
            goto LABEL_7;
          }
          char v9 = v13;
          id v14 = [v13 interactiveCanvasController];
          if (!v14) {
            break;
          }
          uint64_t v15 = v14;
          [v11 position];
          [v9 convertNaturalPointToUnscaledCanvas:];
          [v15 convertUnscaledToBoundsPoint:];
          CGFloat v17 = v16;
          CGFloat v19 = v18;
          [v15 visibleBoundsRect];
          v34.CGFloat x = v17;
          v34.CGFloat y = v19;
          BOOL v20 = CGRectContainsPoint(v35, v34);

          if (!v20) {
            goto LABEL_17;
          }
          specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
          specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
          specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized ContiguousArray._endMutation()();
LABEL_7:
          if (v6 == ++v7)
          {
            swift_bridgeObjectRelease();
            uint64_t v1 = v33;
            unint64_t v3 = (unint64_t)_swiftEmptyArrayStorage;
            goto LABEL_24;
          }
        }

LABEL_6:
        goto LABEL_7;
      }
LABEL_53:
      __break(1u);
      goto LABEL_54;
    }
  }
  swift_bridgeObjectRelease();
  unint64_t v3 = (unint64_t)_swiftEmptyArrayStorage;
LABEL_24:
  id v21 = [(id)v1 traitCollection];
  LODWORD(v6) = [v21 crl_isCompactWidth];

  uint64_t v4 = (char **)&off_1015038A0;
  id v2 = (char **)&off_101503860;
  id v22 = (uint64_t *)&unk_101503870;
  if (!v6) {
    id v22 = (uint64_t *)&unk_1015038B0;
  }
  uint64_t v1 = *v22;
  if (!*v22)
  {
LABEL_47:
    swift_release();
    swift_bridgeObjectRelease();
    return 0;
  }
  if (((unint64_t)_swiftEmptyArrayStorage & 0x8000000000000000) == 0
    && ((unint64_t)_swiftEmptyArrayStorage & 0x4000000000000000) == 0)
  {
    uint64_t v23 = *(void *)&_swiftEmptyArrayStorage[2];
    goto LABEL_30;
  }
LABEL_54:
  swift_bridgeObjectRetain();
  uint64_t v23 = _CocoaArrayWrapper.endIndex.getter();
  swift_release();
LABEL_30:
  uint64_t v24 = 0;
  if (v6) {
    unint64_t v25 = v2;
  }
  else {
    unint64_t v25 = v4;
  }
  id v26 = v25 + 4;
  uint64_t v27 = v1 & ~(v1 >> 63);
  uint64_t v4 = &selRef_shouldHitTestWithFill;
  id v32 = v26;
  while (1)
  {
    if (v24 == v27)
    {
LABEL_52:
      __break(1u);
      goto LABEL_53;
    }
    if (v23) {
      break;
    }
LABEL_34:
    if (++v24 == v1) {
      goto LABEL_47;
    }
  }
  uint64_t v28 = v26[v24];
  swift_retain();
  uint64_t v29 = 4;
  while (1)
  {
    if ((v3 & 0xC000000000000001) != 0) {
      id v30 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v30 = *(id *)(v3 + 8 * v29);
    }
    uint64_t v6 = (uint64_t)v30;
    id v2 = (char **)(v29 - 3);
    if (__OFADD__(v29 - 4, 1))
    {
      __break(1u);
      goto LABEL_52;
    }
    if ([v30 tag] == v28) {
      break;
    }

    ++v29;
    if (v2 == (char **)v23)
    {
      swift_release();
      uint64_t v27 = v1 & ~(v1 >> 63);
      id v26 = v32;
      goto LABEL_34;
    }
  }
  swift_bridgeObjectRelease();
  swift_release_n();
  type metadata accessor for CRLConnectionLineKnob();
  uint64_t result = swift_dynamicCastClass();
  if (result) {
    return result;
  }

  return 0;
}

uint64_t sub_100E5D348()
{
  id v0 = sub_100D5ED8C();
  sub_100E5C770((uint64_t)v0, 3, 0, 0);

  if (qword_10166F980 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_1005057FC(&qword_10167A2C0);
  sub_100556B74(v1, (uint64_t)qword_10171BA40);
  return Tips.Event.sendDonation<>(_:)();
}

void sub_100E5D3EC()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for Tips.InvalidationReason();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2, v4);
  uint64_t v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v7 = [v0 traitCollection];
  if ([v7 horizontalSizeClass] == (id)1)
  {
  }
  else
  {
    unsigned __int8 v8 = [self crl_phoneUI];

    if ((v8 & 1) == 0) {
      goto LABEL_7;
    }
  }
  if (qword_10166F978 != -1) {
    swift_once();
  }
  uint64_t v9 = sub_1005057FC(&qword_10169FA10);
  sub_100556B74(v9, (uint64_t)qword_10171BA28);
  swift_beginAccess();
  Tips.Parameter.wrappedValue.getter();
  char v10 = HIBYTE(v15);
  swift_endAccess();
  if ((v10 & 1) == 0)
  {
    HIBYTE(v15) = 1;
    swift_beginAccess();
    Tips.Parameter.wrappedValue.setter();
    swift_endAccess();
    (*(void (**)(char *, void, uint64_t))(v3 + 104))(v6, enum case for Tips.InvalidationReason.actionPerformed(_:), v2);
    sub_1005C7550();
LABEL_10:
    Tip.invalidate(reason:)();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
    return;
  }
LABEL_7:
  id v11 = [v1 traitCollection];
  if ([v11 horizontalSizeClass] == (id)1)
  {

    return;
  }
  unsigned __int8 v12 = [self crl_phoneUI];

  if ((v12 & 1) == 0)
  {
    if (qword_10166F028 != -1) {
      swift_once();
    }
    uint64_t v13 = sub_1005057FC(&qword_10169FA10);
    sub_100556B74(v13, (uint64_t)qword_10171A770);
    swift_beginAccess();
    Tips.Parameter.wrappedValue.getter();
    char v14 = HIBYTE(v15);
    swift_endAccess();
    if ((v14 & 1) == 0)
    {
      HIBYTE(v15) = 1;
      swift_beginAccess();
      Tips.Parameter.wrappedValue.setter();
      swift_endAccess();
      (*(void (**)(char *, void, uint64_t))(v3 + 104))(v6, enum case for Tips.InvalidationReason.actionPerformed(_:), v2);
      sub_1005C75A4();
      goto LABEL_10;
    }
  }
}

void sub_100E5D74C(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void **)&v1[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interactiveCanvasController];
  id v4 = [v3 editorController];
  if (!v4
    || (v5 = v4, id v6 = [v4 selectionPath], v5, !v6))
  {
    if (qword_10166F9D8 != -1) {
      swift_once();
    }
    swift_beginAccess();
    id v26 = (id)static OS_os_log.crlError;
    uint64_t v27 = static os_log_type_t.error.getter();
    sub_100BAC898((uint64_t)v26, (uint64_t)&_mh_execute_header, v27, (uint64_t)"Unable to get the knob position for the first selected item because we cannot get the current selection path", 108, 2, (uint64_t)_swiftEmptyArrayStorage);
    goto LABEL_19;
  }
  id v7 = [v3 selectionModelTranslator];
  if (!v7
    || (unsigned __int8 v8 = v7,
        id v9 = [v7 infosForSelectionPath:v6],
        v8,
        uint64_t v10 = static Set._unconditionallyBridgeFromObjectiveC(_:)(),
        v9,
        !v10))
  {
    uint64_t v37 = 0;
    long long v35 = 0u;
    long long v36 = 0u;
    goto LABEL_15;
  }
  sub_100999A30(v10, (uint64_t)&v35);
  swift_bridgeObjectRelease();
  if (!*((void *)&v36 + 1))
  {
LABEL_15:
    sub_100522F00((uint64_t)&v35, &qword_10167B190);
    goto LABEL_16;
  }
  sub_1005057FC(&qword_101673060);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_16:
    if (qword_10166F9D8 != -1) {
      swift_once();
    }
    swift_beginAccess();
    id v26 = (id)static OS_os_log.crlError;
    uint64_t v28 = static os_log_type_t.error.getter();
    sub_100BAC898((uint64_t)v26, (uint64_t)&_mh_execute_header, v28, (uint64_t)"Unable to get the knob position for the first selected item because the returned first selected item is not a canvas element", 124, 2, (uint64_t)_swiftEmptyArrayStorage);

    goto LABEL_19;
  }
  id v11 = [v3 repForInfo:v34 createIfNeeded:0];
  if (!v11)
  {
    if (qword_10166F9D8 != -1) {
      swift_once();
    }
    swift_beginAccess();
    id v26 = (id)static OS_os_log.crlError;
    uint64_t v31 = static os_log_type_t.error.getter();
    sub_100BAC898((uint64_t)v26, (uint64_t)&_mh_execute_header, v31, (uint64_t)"Unable to get the knob position for the first selected item because could not fetch a rep for the first selected canvas element", 127, 2, (uint64_t)_swiftEmptyArrayStorage);

    swift_unknownObjectRelease();
    goto LABEL_19;
  }
  unsigned __int8 v12 = v11;
  uint64_t v13 = (void *)sub_100E5CF54(v11);
  if (!v13)
  {
    if (qword_10166F9D8 != -1) {
      swift_once();
    }
    swift_beginAccess();
    id v26 = (id)static OS_os_log.crlError;
    uint64_t v32 = static os_log_type_t.error.getter();
    sub_100BAC898((uint64_t)v26, (uint64_t)&_mh_execute_header, v32, (uint64_t)"Unable to get the knob position for the first selected item because there is no connection line knob to present off of", 118, 2, (uint64_t)_swiftEmptyArrayStorage);

    swift_unknownObjectRelease();
LABEL_19:

    uint64_t v29 = 0;
    char v30 = 1;
    double v17 = 0.0;
    uint64_t v19 = 0;
    uint64_t v21 = 0;
    uint64_t v23 = 0;
    goto LABEL_20;
  }
  char v14 = v13;
  [v13 position];
  [v12 convertNaturalPointToUnscaledCanvas:];
  [v3 convertUnscaledToBoundsPoint:];
  double v17 = sub_10006402C(v15, v16, 25.0);
  uint64_t v19 = v18;
  uint64_t v21 = v20;
  uint64_t v23 = v22;
  id v24 = [v1 traitCollection];
  unsigned int v25 = [v24 crl_isCompactWidth];

  if (v25)
  {

    swift_unknownObjectRelease();
LABEL_29:
    uint64_t v29 = 3;
    char v30 = 0;
    goto LABEL_20;
  }
  uint64_t v33 = (char *)[v14 tag];

  swift_unknownObjectRelease();
  if ((unint64_t)(v33 - 2) > 4) {
    goto LABEL_29;
  }
  uint64_t v29 = qword_1011BA290[(void)(v33 - 2)];
  char v30 = 0;
LABEL_20:
  *(double *)a1 = v17;
  *(void *)(a1 + 8) = v19;
  *(void *)(a1 + 16) = v21;
  *(void *)(a1 + 24) = v23;
  *(void *)(a1 + 32) = v29;
  *(unsigned char *)(a1 + 40) = v30;
}

uint64_t sub_100E5DC48()
{
  return sub_100E5DC90(&qword_10166F778, (uint64_t)qword_10171B5D0);
}

uint64_t sub_100E5DC6C()
{
  return sub_100E5DC90(&qword_10166EE48, (uint64_t)qword_10171A360);
}

uint64_t sub_100E5DC90(void *a1, uint64_t a2)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v3 = sub_1005057FC(&qword_10167A2C0);
  sub_100556B74(v3, a2);
  return Tips.Event.sendDonation<>(_:)();
}

void sub_100E5DCEC(char a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for Tips.InvalidationReason();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4, v6);
  unsigned __int8 v8 = (char *)v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_unknownObjectWeakAssign();
  if (a1)
  {
    uint64_t v9 = v2 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_currentlyPresentedTip;
    swift_beginAccess();
    sub_100522E9C(v9, (uint64_t)&v16, &qword_101674708);
    uint64_t v10 = *((void *)&v17 + 1);
    sub_100522F00((uint64_t)&v16, &qword_101674708);
    if (v10)
    {
      sub_100522E9C(v9, (uint64_t)&v16, &qword_101674708);
      if (*((void *)&v17 + 1))
      {
        sub_1005498A4((uint64_t)&v16, (uint64_t)v15);
        sub_100522F00((uint64_t)&v16, &qword_101674708);
        sub_10050F848(v15, v15[3]);
        (*(void (**)(char *, void, uint64_t))(v5 + 104))(v8, enum case for Tips.InvalidationReason.tipClosed(_:), v4);
        Tip.invalidate(reason:)();
        (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v15);
      }
      else
      {
        sub_100522F00((uint64_t)&v16, &qword_101674708);
      }
    }
  }
  uint64_t v18 = 0;
  long long v16 = 0u;
  long long v17 = 0u;
  uint64_t v11 = v2 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_currentlyPresentedTip;
  swift_beginAccess();
  sub_1006063BC((uint64_t)&v16, v11, &qword_101674708);
  swift_endAccess();
  uint64_t v12 = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_tipPresentationView;
  uint64_t v13 = *(void **)(v2 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_tipPresentationView);
  if (v13)
  {
    [v13 removeFromSuperview];
    char v14 = *(void **)(v2 + v12);
    *(void *)(v2 + v12) = 0;
  }
}

void sub_100E5DF9C()
{
  uint64_t v1 = *(void **)&v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_canvasViewController];
  id v2 = [v1 miniFormatterPresenter];
  if (v2 && (unsigned int v3 = [v2 isPresentingSecondLayerPopover], swift_unknownObjectRelease(), v3))
  {
    id v4 = [v1 presentedViewController];
    if (v4)
    {
      uint64_t v5 = v4;
      uint64_t v6 = swift_allocObject();
      *(void *)(v6 + 16) = v0;
      v9[4] = sub_100E76CC4;
      v9[5] = v6;
      v9[0] = _NSConcreteStackBlock;
      v9[1] = *(void *)"";
      v9[2] = sub_100679958;
      v9[3] = &unk_101530200;
      uint64_t v7 = _Block_copy(v9);
      unsigned __int8 v8 = v0;
      swift_release();
      [v5 dismissViewControllerAnimated:1 completion:v7];
      _Block_release(v7);
    }
  }
  else if (swift_unknownObjectWeakLoadStrong())
  {
    sub_100A986D0();
    swift_unknownObjectRelease();
  }
}

void sub_100E5E128()
{
  uint64_t v0 = sub_1005057FC(&qword_101672BB0);
  __chkstk_darwin(v0 - 8, v1);
  unsigned int v3 = (char *)&v22 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v5 = Strong;
    uint64_t v6 = OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate_window;
    uint64_t v7 = *(void **)(Strong + OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate_window);
    if (v7 && ([v7 isUserInteractionEnabled] & 1) != 0 && (sub_100A70DDC() & 1) == 0)
    {
      unsigned __int8 v8 = self;
      NSString v9 = String._bridgeToObjectiveC()();
      _s8Freeform23CRLAnalyticsFeatureUsedC14featurePayload3forSDySSSo8NSObjectCGAA0bC4NameO_tFZ_0(5);
      sub_10050BF48(0, (unint64_t *)&qword_101672E50);
      Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      [v8 sendEventInDomain:v9 lazily:1 eventPayload:isa];

      uint64_t v11 = *(void **)(v5 + v6);
      if (!v11
        || (id v12 = [v11 rootViewController]) == 0
        || (uint64_t v13 = v12,
            id v14 = objc_msgSend(v12, "crl_windowWrapper"),
            v13,
            !v14)
        || (id v15 = [v14 newWrapperBeginningIgnoringUserInteractionSafely], v14, !v15))
      {
        if (qword_10166F9D8 != -1) {
          swift_once();
        }
        swift_beginAccess();
        id v16 = (id)static OS_os_log.crlError;
        uint64_t v17 = static os_log_type_t.error.getter();
        sub_100BAC898((uint64_t)v16, (uint64_t)&_mh_execute_header, v17, (uint64_t)"Could not create token for ignoring user interaction; view hierarchy may not be set up yet",
          90,
          2,
          (uint64_t)_swiftEmptyArrayStorage);

        id v15 = 0;
      }
      uint64_t v18 = type metadata accessor for TaskPriority();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v3, 1, 1, v18);
      type metadata accessor for MainActor();
      id v19 = v15;
      swift_unknownObjectRetain();
      uint64_t v20 = static MainActor.shared.getter();
      uint64_t v21 = (void *)swift_allocObject();
      v21[2] = v20;
      v21[3] = &protocol witness table for MainActor;
      v21[4] = v5;
      v21[5] = v15;
      sub_1005912D0((uint64_t)v3, (uint64_t)&unk_10168E190, (uint64_t)v21);
      swift_unknownObjectRelease();
      swift_release();
    }
    else
    {
      swift_unknownObjectRelease();
    }
  }
}

uint64_t sub_100E5E494(void *a1, uint64_t a2, uint64_t a3, void (*a4)(id))
{
  if (a3)
  {
    id v6 = a1;
    swift_unknownObjectRetain();
    _bridgeAnyObjectToAny(_:)();
    id v7 = (id)swift_unknownObjectRelease();
  }
  else
  {
    memset(v9, 0, sizeof(v9));
    id v7 = a1;
  }
  a4(v7);

  return sub_100522F00((uint64_t)v9, &qword_101672BF0);
}

void sub_100E5E518()
{
  uint64_t v1 = sub_1005057FC(&qword_101672BB0);
  *(void *)&double v3 = __chkstk_darwin(v1 - 8, v2).n128_u64[0];
  uint64_t v5 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v6 = [v0 presentedViewController];

  if (v6)
  {
    id v7 = [v0 presentedViewController];
    if (v7)
    {
      id v28 = v7;
      id v8 = [v0 presentedViewController];
      if (v8)
      {
        NSString v9 = v8;
        self;
        BOOL v10 = swift_dynamicCastObjCClass() == 0;
      }
      else
      {
        BOOL v10 = 1;
      }
      [v28 dismissViewControllerAnimated:v10 completion:0];
      id v27 = v28;
    }
  }
  else
  {
    [*(id *)&v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_canvasViewController] hideEditMenu];
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      uint64_t v12 = Strong;
      uint64_t v13 = OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate_window;
      id v14 = *(void **)(Strong + OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate_window);
      if (v14 && ([v14 isUserInteractionEnabled] & 1) != 0)
      {
        id v15 = *(void **)(v12 + v13);
        if (!v15
          || (id v16 = [v15 rootViewController]) == 0
          || (uint64_t v17 = v16,
              id v18 = objc_msgSend(v16, "crl_windowWrapper"),
              v17,
              !v18)
          || (id v19 = [v18 newWrapperBeginningIgnoringUserInteractionSafely], v18, !v19))
        {
          if (qword_10166F9D8 != -1) {
            swift_once();
          }
          swift_beginAccess();
          id v20 = (id)static OS_os_log.crlError;
          uint64_t v21 = static os_log_type_t.error.getter();
          sub_100BAC898((uint64_t)v20, (uint64_t)&_mh_execute_header, v21, (uint64_t)"Could not create token for ignoring user interaction; view hierarchy may not be set up yet",
            90,
            2,
            (uint64_t)_swiftEmptyArrayStorage);

          id v19 = 0;
        }
        uint64_t v22 = type metadata accessor for TaskPriority();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v5, 1, 1, v22);
        type metadata accessor for MainActor();
        id v23 = v19;
        swift_unknownObjectRetain();
        id v24 = v0;
        uint64_t v25 = static MainActor.shared.getter();
        id v26 = (void *)swift_allocObject();
        v26[2] = v25;
        v26[3] = &protocol witness table for MainActor;
        v26[4] = v12;
        v26[5] = v24;
        v26[6] = v19;
        sub_1005912D0((uint64_t)v5, (uint64_t)&unk_10169FB68, (uint64_t)v26);
        swift_unknownObjectRelease();
        swift_release();
      }
      else
      {
        swift_unknownObjectRelease();
      }
    }
  }
}

void sub_100E5E974()
{
  uint64_t v1 = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_scenesPopoverState;
  uint64_t v2 = *(void **)&v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_scenesPopoverState];
  swift_getKeyPath();
  swift_getKeyPath();
  id v3 = v2;
  static Published.subscript.getter();

  swift_release();
  swift_release();
  if (v29 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v4 = *(void *)((v29 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  if (!v4) {
    return;
  }
  id v5 = [v0 presentedViewController];
  if (v5)
  {
    id v6 = v5;
    type metadata accessor for CRLScenesViewController_i();
    uint64_t v7 = swift_dynamicCastClass();
    if (v7)
    {
      id v8 = (void *)v7;
      unsigned int v9 = [self isReduceMotionEnabled];
      if (([v8 isBeingDismissed] & 1) == 0) {
        [v8 dismissViewControllerAnimated:v9 ^ 1 completion:0];
      }
      int v10 = 0;
      goto LABEL_18;
    }
  }
  id v11 = [v0 presentedViewController];
  if (!v11
    || (uint64_t v12 = v11,
        type metadata accessor for CRLCompactScenesViewController_i(),
        uint64_t v13 = swift_dynamicCastClass(),
        v12,
        !v13))
  {
    int v10 = 0;
    goto LABEL_19;
  }
  id v14 = *(void **)&v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_compactScenesPresenter];
  if (!v14)
  {
    int v10 = 1;
    goto LABEL_19;
  }
  id v6 = v14;
  int v10 = 1;
  if (([v6 isBeingDismissed] & 1) == 0) {
    [v6 dismissViewControllerAnimated:1 completion:0];
  }
LABEL_18:

LABEL_19:
  id v15 = [v0 presentedViewController];
  if (v15)
  {
    id v16 = v15;
    type metadata accessor for CRLScenesViewController_i();
    uint64_t v17 = swift_dynamicCastClass();
    if (v17)
    {
      id v18 = (void *)v17;
      unsigned int v19 = [self isReduceMotionEnabled];
      if (([v18 isBeingDismissed] & 1) == 0) {
        [v18 dismissViewControllerAnimated:v19 ^ 1 completion:0];
      }
    }
  }
  id v20 = &v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_currentSceneIndex];
  if (v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_currentSceneIndex + 8]) {
    goto LABEL_29;
  }
  uint64_t v21 = *(void *)v20 + 1;
  if (__OFADD__(*(void *)v20, 1)) {
    goto LABEL_42;
  }
  uint64_t v22 = *(void **)&v0[v1];
  swift_getKeyPath();
  swift_getKeyPath();
  id v23 = v22;
  static Published.subscript.getter();

  swift_release();
  swift_release();
  if (v29 >> 62) {
    goto LABEL_43;
  }
  uint64_t v24 = *(void *)((v29 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    swift_bridgeObjectRelease();
    if (v21 >= v24) {
LABEL_29:
    }
      uint64_t v21 = 0;
    *(void *)id v20 = v21;
    v20[8] = 0;
    uint64_t v25 = *(void **)&v0[v1];
    swift_getKeyPath();
    swift_getKeyPath();
    id v26 = v25;
    static Published.subscript.getter();

    swift_release();
    swift_release();
    if ((v29 & 0xC000000000000001) != 0) {
      break;
    }
    if (v21 < 0)
    {
      __break(1u);
    }
    else if ((unint64_t)v21 < *(void *)((v29 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      id v27 = (char *)*(id *)(v29 + 8 * v21 + 32);
      goto LABEL_34;
    }
    __break(1u);
LABEL_42:
    __break(1u);
LABEL_43:
    swift_bridgeObjectRetain();
    uint64_t v24 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  id v27 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_34:
  id v28 = v27;
  swift_bridgeObjectRelease();
  sub_100E6A324(v28);
  if (v10) {
    sub_100E3AD00((uint64_t)SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:), 0);
  }
}

void sub_100E5EDC0()
{
  uint64_t v1 = (char *)OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_scenesPopoverState;
  uint64_t v2 = *(void **)((char *)v0 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_scenesPopoverState);
  swift_getKeyPath();
  swift_getKeyPath();
  id v3 = v2;
  static Published.subscript.getter();

  swift_release();
  swift_release();
  if (v23 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v4 = *(void *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  if (!v4) {
    return;
  }
  id v5 = [v0 presentedViewController];
  if (v5)
  {
    id v6 = v5;
    type metadata accessor for CRLScenesViewController_i();
    uint64_t v7 = swift_dynamicCastClass();
    if (v7)
    {
      id v8 = (void *)v7;
      unsigned int v9 = [self isReduceMotionEnabled];
      if (([v8 isBeingDismissed] & 1) == 0) {
        [v8 dismissViewControllerAnimated:v9 ^ 1 completion:0];
      }
      int v10 = 0;
LABEL_18:

      goto LABEL_19;
    }
  }
  id v11 = [v0 presentedViewController];
  if (v11
    && (uint64_t v12 = v11,
        type metadata accessor for CRLCompactScenesViewController_i(),
        uint64_t v13 = swift_dynamicCastClass(),
        v12,
        v13))
  {
    id v14 = *(void **)((char *)v0 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_compactScenesPresenter);
    if (v14)
    {
      id v6 = v14;
      int v10 = 1;
      if (([v6 isBeingDismissed] & 1) == 0) {
        [v6 dismissViewControllerAnimated:1 completion:0];
      }
      goto LABEL_18;
    }
    int v10 = 1;
  }
  else
  {
    int v10 = 0;
  }
LABEL_19:
  id v15 = (char *)v0 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_currentSceneIndex;
  if ((*((unsigned char *)v0 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_currentSceneIndex + 8) & 1) == 0)
  {
    unint64_t v16 = *(void *)v15 - 1;
    if (__OFSUB__(*(void *)v15, 1))
    {
LABEL_39:
      __break(1u);
      return;
    }
    if ((v16 & 0x8000000000000000) == 0) {
      goto LABEL_25;
    }
  }
  uint64_t v17 = *(void **)&v1[(void)v0];
  swift_getKeyPath();
  swift_getKeyPath();
  id v18 = v17;
  static Published.subscript.getter();

  swift_release();
  swift_release();
  if (v23 >> 62) {
    goto LABEL_37;
  }
  uint64_t v19 = *(void *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    swift_bridgeObjectRelease();
    unint64_t v16 = v19 - 1;
    if (__OFSUB__(v19, 1))
    {
      __break(1u);
      goto LABEL_39;
    }
LABEL_25:
    *(void *)id v15 = v16;
    v15[8] = 0;
    id v20 = *(void **)&v1[(void)v0];
    swift_getKeyPath();
    swift_getKeyPath();
    uint64_t v1 = v20;
    static Published.subscript.getter();

    swift_release();
    swift_release();
    if ((v23 & 0xC000000000000001) != 0) {
      break;
    }
    if ((v16 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v16 < *(void *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      uint64_t v21 = (char *)*(id *)(v23 + 8 * v16 + 32);
      goto LABEL_29;
    }
    __break(1u);
LABEL_37:
    swift_bridgeObjectRetain();
    uint64_t v19 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  uint64_t v21 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_29:
  uint64_t v22 = v21;
  swift_bridgeObjectRelease();
  sub_100E6A324(v22);
  if (v10) {
    sub_100E3AD00((uint64_t)SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:), 0);
  }
}

uint64_t sub_100E5F18C(void *a1, uint64_t a2, uint64_t a3, void (*a4)(id))
{
  if (a3)
  {
    id v6 = a1;
    swift_unknownObjectRetain();
    _bridgeAnyObjectToAny(_:)();
    id v7 = (id)swift_unknownObjectRelease();
  }
  else
  {
    memset(v9, 0, sizeof(v9));
    id v7 = a1;
  }
  a4(v7);

  return sub_100522F00((uint64_t)v9, &qword_101672BF0);
}

void sub_100E5F944()
{
  id v1 = sub_100E3C594();
  id v2 = [v1 mode];

  id v3 = [v2 pencilModeType];
  if (v3 != (id)1)
  {
    uint64_t v4 = v0;
    id v5 = [v4 interactiveCanvasControllerForFreehandDrawingTools];
    id v7 = [objc_allocWithZone((Class)CRLiOSDocumentModeFreehandDrawing) initWithBoardViewController:v4 andInteractiveCanvasController:v5];

    id v6 = sub_100E3C594();
    [v6 setMode:v7 animated:1];

    [*(id *)&v4[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interactiveCanvasController] collapseAllExpandedCollaboratorHUDs];
  }
}

void sub_100E5FB5C()
{
  id v0 = sub_100E3C594();
  id v1 = [v0 mode];

  self;
  id v2 = (void *)swift_dynamicCastObjCClass();
  id v6 = v2;
  if (!v2)
  {

    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"beginDrawingTransformModeIfNeeded()", 35, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSBoardViewController.swift", 95, 2, 3536, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    LOBYTE(v5) = 2;
    id v3 = "invalid nil found when unwrapping value";
    uint64_t v4 = 39;
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"beginDrawingTransformModeIfNeeded()", 35, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSBoardViewController.swift", 95, 2, 3536);
    id v2 = 0;
  }
  [v2 beginDrawingTransformMode:v3, v4, v5];
}

void sub_100E5FCCC()
{
  id v1 = [v0 interactiveCanvasControllerForFreehandDrawingTools];
  id v2 = [v1 layerHost];

  if (!v2) {
    goto LABEL_9;
  }
  if (([v2 respondsToSelector:"asiOSCVC"] & 1) == 0)
  {
    swift_unknownObjectRelease();
    goto LABEL_9;
  }
  id v3 = [v2 asiOSCVC];
  swift_unknownObjectRelease();
  id v4 = [v3 pencilMediator];

  if (!v4)
  {
LABEL_9:
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"toolkitDidDrawWithPencil()", 26, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSBoardViewController.swift", 95, 2, 3543, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"toolkitDidDrawWithPencil()", 26, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSBoardViewController.swift", 95, 2, 3543);
    return;
  }
  [v4 markPencilUsedForMode:1];
  uint64_t v5 = *(void *)&v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_appAnalyticsBoardTracker];
  if (v5)
  {
    uint64_t v6 = qword_10166FA40;
    swift_retain();
    if (v6 != -1) {
      swift_once();
    }
    swift_beginAccess();
    id v7 = (id)static OS_os_log.crlAppAnalytics;
    uint64_t v8 = static os_log_type_t.error.getter();
    sub_100BAC898((uint64_t)v7, (uint64_t)&_mh_execute_header, v8, (uint64_t)"pencil used for given session", 29, 2, (uint64_t)_swiftEmptyArrayStorage);

    *(unsigned char *)(v5 + 72) = 1;
    swift_release();
    swift_unknownObjectRelease();
  }
  else
  {
    swift_unknownObjectRelease();
  }
}

void sub_100E5FF74()
{
  id v1 = [v0 interactiveCanvasControllerForFreehandDrawingTools];
  id v2 = [v1 layerHost];

  if (!v2) {
    goto LABEL_8;
  }
  if (([v2 respondsToSelector:"asiOSCVC"] & 1) == 0)
  {
    swift_unknownObjectRelease();
    goto LABEL_8;
  }
  id v3 = [v2 asiOSCVC];
  swift_unknownObjectRelease();
  id v4 = [v3 pencilMediator];

  if (!v4)
  {
LABEL_8:
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"toolkitDidDrawWithFinger()", 26, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSBoardViewController.swift", 95, 2, 3551, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"toolkitDidDrawWithFinger()", 26, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSBoardViewController.swift", 95, 2, 3551);
    return;
  }
  [v4 fingerUsedForFreehandDrawingMode];

  swift_unknownObjectRelease();
}

void sub_100E60158()
{
  id v1 = [v0 interactiveCanvasControllerForFreehandDrawingTools];
  id v2 = [v1 layerHost];

  if (!v2) {
    goto LABEL_8;
  }
  if (([v2 respondsToSelector:"asiOSCVC"] & 1) == 0)
  {
    swift_unknownObjectRelease();
    goto LABEL_8;
  }
  id v3 = [v2 asiOSCVC];
  swift_unknownObjectRelease();
  id v4 = [v3 pencilMediator];

  if (!v4)
  {
LABEL_8:
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"toolkitDidDrawWithIndirectTouch()", 33, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSBoardViewController.swift", 95, 2, 3558, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"toolkitDidDrawWithIndirectTouch()", 33, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSBoardViewController.swift", 95, 2, 3558);
    return;
  }
  [v4 indirectTouchUsedForFreehandDrawingMode];

  swift_unknownObjectRelease();
}

uint64_t sub_100E6033C(double a1, double a2)
{
  id v5 = sub_100E3C594();
  id v6 = [v5 mode];

  id v7 = [v6 pencilModeType];
  if (v7)
  {
    if (v7 == (id)1) {
      return 3;
    }
    if (v7 == (id)2) {
      return 0;
    }
    type metadata accessor for CRLiOSPencilModeType(0);
    _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)();
    __break(1u);
    goto LABEL_12;
  }
  id v9 = [v2 interactiveCanvasControllerForFreehandDrawingTools];
  id v10 = [v9 layerHost];

  if (!v10) {
    goto LABEL_13;
  }
  if (([v10 respondsToSelector:"asiOSCVC"] & 1) == 0)
  {
LABEL_12:
    swift_unknownObjectRelease();
    goto LABEL_13;
  }
  id v11 = [v10 asiOSCVC];
  swift_unknownObjectRelease();
  id v12 = [v11 pencilMediator];

  if (!v12)
  {
LABEL_13:
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"freehandDrawingBehavior(atUnscaledPoint:)", 41, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSBoardViewController.swift", 95, 2, 3574, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"freehandDrawingBehavior(atUnscaledPoint:)", 41, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSBoardViewController.swift", 95, 2, 3574);
    return 0;
  }
  id v13 = [v12 pencilBehaviorOutsideModesAtUnscaledPoint:a1, a2];
  swift_unknownObjectRelease();
  if (v13 == (id)1) {
    return 3;
  }
  else {
    return 0;
  }
}

uint64_t sub_100E606E4(uint64_t a1)
{
  switch(a1)
  {
    case 1:
      id v2 = v1;
      id v3 = [v2 interactiveCanvasControllerForFreehandDrawingTools];
      id v4 = [objc_allocWithZone((Class)CRLiOSDocumentModeFreehandDrawing) initWithBoardViewController:v2 andInteractiveCanvasController:v3];
LABEL_5:
      id v7 = v4;

      return (uint64_t)v7;
    case 2:
      id v2 = v1;
      id v3 = [v2 interactiveCanvasControllerForFreehandDrawingTools];
      id v5 = (objc_class *)type metadata accessor for CRLiOSDocumentModeHandwriting();
      id v6 = objc_allocWithZone(v5);
      v6[OBJC_IVAR____TtC8Freeform29CRLiOSDocumentModeHandwriting_currentlyChangingModes] = 0;
      v6[OBJC_IVAR____TtC8Freeform29CRLiOSDocumentModeHandwriting_stayInHandwritingModeForSelectionChange] = 0;
      v6[OBJC_IVAR____TtC8Freeform29CRLiOSDocumentModeHandwriting_endModeCheckQueuedAfterTextGestures] = 0;
      *(void *)&v6[OBJC_IVAR____TtC8Freeform29CRLiOSDocumentModeHandwriting_subscriptions] = &_swiftEmptySetSingleton;
      swift_unknownObjectUnownedInit();
      v11.receiver = v6;
      v11.super_class = v5;
      [super initWithBoardViewController:v2];
      goto LABEL_5;
    case 0:
      sub_1005871AC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"pencilDocumentMode(for:)", 24, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSBoardViewController.swift", 95, 2, 3624);
      SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v9, v10);
      _assertionFailure(_:_:file:line:flags:)();
      __break(1u);
      break;
  }
  type metadata accessor for CRLiOSPencilModeType(0);
  uint64_t result = _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)();
  __break(1u);
  return result;
}

void sub_100E60A3C(unint64_t a1)
{
  unint64_t v3 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v4 < 1) {
      return;
    }
  }
  else
  {
    uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v4 < 1) {
      return;
    }
  }
  id v5 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_statusHUDManager);
  uint64_t v6 = qword_10166FAE8;
  id v7 = v5;
  if (v6 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v8 = (void *)static OS_os_log.crlJoinLeave;
  id v9 = (id)sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117E810;
  *(void *)(inited + 56) = &type metadata for Int;
  *(void *)(inited + 64) = &protocol witness table for Int;
  *(void *)(inited + 32) = v4;
  id v11 = v8;
  uint64_t v12 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v11, (uint64_t)&_mh_execute_header, v12, (uint64_t)"collaboratorsAdded: %li", 23, 2, inited);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  uint64_t v13 = v4 - 1;
  if (v4 == 1)
  {
    if (v3)
    {
      swift_bridgeObjectRetain();
      uint64_t v14 = _CocoaArrayWrapper.endIndex.getter();
      if (v14)
      {
LABEL_8:
        if ((a1 & 0xC000000000000001) != 0)
        {
          id v15 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else
        {
          if (!*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
            goto LABEL_34;
          }
          id v15 = *(id *)(a1 + 32);
        }
        unint64_t v16 = v15;
        swift_bridgeObjectRelease();
        id v17 = v16;
        sub_100701F80();
        uint64_t v14 = v18;

        swift_getKeyPath();
        swift_getKeyPath();
        id v9 = v17;
        static Published.subscript.getter();

        swift_release();
        swift_release();
        uint64_t v4 = v60;
        if (!(v60 >> 62))
        {
          if (*(void *)((v60 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
            goto LABEL_13;
          }
          goto LABEL_35;
        }
LABEL_34:
        swift_bridgeObjectRetain();
        uint64_t v45 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        if (v45)
        {
LABEL_13:
          if ((v4 & 0xC000000000000001) != 0)
          {
            id v19 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else
          {
            if (!*(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10))
            {
              __break(1u);
              return;
            }
            id v19 = *(id *)(v4 + 32);
          }
          id v20 = v19;
          swift_bridgeObjectRelease();
          uint64_t Strong = (char *)swift_unknownObjectWeakLoadStrong();

          if (Strong)
          {
            id v22 = *(id *)&Strong[OBJC_IVAR____TtC8Freeform27CRLCollaborationParticipant_cnContact];

LABEL_37:
            id v46 = [self blueColor];
            id v47 = v22;
            if (v14)
            {
              NSString v48 = String._bridgeToObjectiveC()();
              swift_bridgeObjectRelease();
            }
            else
            {
              NSString v48 = 0;
            }
            id v49 = [objc_allocWithZone((Class)CRLLobbySession_mi) initWithDisplayName:v48 indicatorDarkColor:v46 cnContact:v22];

            sub_1005057FC((uint64_t *)&unk_101676C10);
            uint64_t v50 = swift_allocObject();
            *(_OWORD *)(v50 + 16) = xmmword_101177E70;
            *(void *)(v50 + 32) = v49;
            unint64_t v61 = v50;
            specialized Array._endMutation()();
            id v51 = objc_allocWithZone((Class)type metadata accessor for CRLCollaboratorStatusHUDController_mi());
            *(void *)&v51[OBJC_IVAR____TtC8Freeform37CRLCollaboratorStatusHUDController_mi__cachedAccessoryView] = 0;
            id v52 = &v51[OBJC_IVAR____TtC8Freeform37CRLCollaboratorStatusHUDController_mi_event];
            *(void *)id v52 = v61;
            *((void *)v52 + 1) = 0;
            v52[16] = 0;
            id v53 = v7;
            id v54 = v49;
            swift_bridgeObjectRetain();
            id v55 = sub_100E70118(v53, 0, v51);
            id v56 = sub_100DDF47C(v61, 0, 0);
            uint64_t v58 = v57;
            swift_bridgeObjectRelease();
            double v59 = &v55[OBJC_IVAR____TtC8Freeform41CRLCollaboratorBaseStatusHUDController_mi_accessibilityAnnouncement];
            *(void *)double v59 = v56;
            *((void *)v59 + 1) = v58;

            swift_bridgeObjectRelease();
            sub_100E6EDF0(v55, (uint64_t)v53, (uint64_t (*)(uint64_t *))sub_100E71F38, (uint64_t (*)(uint64_t *))sub_100E71F58, (uint64_t)&unk_10152FF68, (uint64_t)sub_100E71F7C, (uint64_t)&unk_10152FF80, 0.0);

            return;
          }
LABEL_36:
          id v22 = 0;
          goto LABEL_37;
        }
LABEL_35:
        swift_bridgeObjectRelease();
        goto LABEL_36;
      }
    }
    else
    {
      uint64_t v14 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v14) {
        goto LABEL_8;
      }
    }
    swift_bridgeObjectRelease();
    id v22 = 0;
    id v9 = 0;
    goto LABEL_37;
  }
  id v23 = [self blueColor];
  id v24 = objc_allocWithZone((Class)CRLLobbySession_mi);
  NSString v25 = String._bridgeToObjectiveC()();
  id v26 = [v24 initWithDisplayName:v25 indicatorDarkColor:v23 cnContact:0];

  id v27 = v26;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  do
  {
    id v28 = v27;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
    --v13;
  }
  while (v13);
  unint64_t v29 = objc_allocWithZone((Class)type metadata accessor for CRLCollaboratorStatusHUDController_mi());
  *(void *)&v29[OBJC_IVAR____TtC8Freeform37CRLCollaboratorStatusHUDController_mi__cachedAccessoryView] = 0;
  char v30 = &v29[OBJC_IVAR____TtC8Freeform37CRLCollaboratorStatusHUDController_mi_event];
  *(void *)char v30 = _swiftEmptyArrayStorage;
  *((void *)v30 + 1) = 0;
  v30[16] = 2;
  id v31 = v7;
  swift_bridgeObjectRetain();
  uint64_t v32 = sub_100E70118(v31, 0, v29);
  uint64_t v33 = self;
  uint64_t v34 = v32;
  id v35 = [v33 mainBundle];
  v62._countAndFlagsBits = 0xD00000000000003FLL;
  v62._object = (void *)0x800000010128B3A0;
  v36._object = (void *)0x800000010128B380;
  v36._countAndFlagsBits = 0xD000000000000017;
  v37._countAndFlagsBits = 0;
  v37._object = (void *)0xE000000000000000;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v36, (Swift::String_optional)0, (NSBundle)v35, v37, v62);

  uint64_t v38 = swift_allocObject();
  *(_OWORD *)(v38 + 16) = xmmword_10117E810;
  if ((unint64_t)_swiftEmptyArrayStorage >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v39 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v39 = *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  *(void *)(v38 + 56) = &type metadata for Int;
  *(void *)(v38 + 64) = &protocol witness table for Int;
  *(void *)(v38 + 32) = v39;
  uint64_t v40 = String.init(format:_:)();
  uint64_t v42 = v41;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  id v43 = (uint64_t *)&v34[OBJC_IVAR____TtC8Freeform41CRLCollaboratorBaseStatusHUDController_mi_accessibilityAnnouncement];
  *id v43 = v40;
  v43[1] = v42;

  swift_bridgeObjectRelease();
  id v44 = v34;
  sub_100E6EDF0(v44, (uint64_t)v31, (uint64_t (*)(uint64_t *))sub_100E71F38, (uint64_t (*)(uint64_t *))sub_100E71F58, (uint64_t)&unk_10152FF68, (uint64_t)sub_100E71F7C, (uint64_t)&unk_10152FF80, 0.0);
}

void sub_100E612E0(unint64_t a1)
{
  unint64_t v3 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v4 < 1) {
      return;
    }
  }
  else
  {
    uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v4 < 1) {
      return;
    }
  }
  id v5 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_statusHUDManager);
  uint64_t v6 = qword_10166FAE8;
  id v7 = v5;
  if (v6 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v8 = (void *)static OS_os_log.crlJoinLeave;
  id v9 = (id)sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117E810;
  *(void *)(inited + 56) = &type metadata for Int;
  *(void *)(inited + 64) = &protocol witness table for Int;
  *(void *)(inited + 32) = v4;
  id v11 = v8;
  uint64_t v12 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v11, (uint64_t)&_mh_execute_header, v12, (uint64_t)"collaboratorsRemoved: %li", 25, 2, inited);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  uint64_t v13 = v4 - 1;
  if (v4 == 1)
  {
    if (v3)
    {
      swift_bridgeObjectRetain();
      uint64_t v14 = _CocoaArrayWrapper.endIndex.getter();
      if (v14)
      {
LABEL_8:
        if ((a1 & 0xC000000000000001) != 0)
        {
          id v15 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else
        {
          if (!*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
            goto LABEL_34;
          }
          id v15 = *(id *)(a1 + 32);
        }
        unint64_t v16 = v15;
        swift_bridgeObjectRelease();
        id v17 = v16;
        sub_100701F80();
        uint64_t v14 = v18;

        swift_getKeyPath();
        swift_getKeyPath();
        id v9 = v17;
        static Published.subscript.getter();

        swift_release();
        swift_release();
        uint64_t v4 = v60;
        if (!(v60 >> 62))
        {
          if (*(void *)((v60 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
            goto LABEL_13;
          }
          goto LABEL_35;
        }
LABEL_34:
        swift_bridgeObjectRetain();
        uint64_t v45 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        if (v45)
        {
LABEL_13:
          if ((v4 & 0xC000000000000001) != 0)
          {
            id v19 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else
          {
            if (!*(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10))
            {
              __break(1u);
              return;
            }
            id v19 = *(id *)(v4 + 32);
          }
          id v20 = v19;
          swift_bridgeObjectRelease();
          uint64_t Strong = (char *)swift_unknownObjectWeakLoadStrong();

          if (Strong)
          {
            id v22 = *(id *)&Strong[OBJC_IVAR____TtC8Freeform27CRLCollaborationParticipant_cnContact];

LABEL_37:
            id v46 = [self blueColor];
            id v47 = v22;
            if (v14)
            {
              NSString v48 = String._bridgeToObjectiveC()();
              swift_bridgeObjectRelease();
            }
            else
            {
              NSString v48 = 0;
            }
            id v49 = [objc_allocWithZone((Class)CRLLobbySession_mi) initWithDisplayName:v48 indicatorDarkColor:v46 cnContact:v22];

            sub_1005057FC((uint64_t *)&unk_101676C10);
            uint64_t v50 = swift_allocObject();
            *(_OWORD *)(v50 + 16) = xmmword_101177E70;
            *(void *)(v50 + 32) = v49;
            unint64_t v61 = v50;
            specialized Array._endMutation()();
            id v51 = objc_allocWithZone((Class)type metadata accessor for CRLCollaboratorStatusHUDController_mi());
            *(void *)&v51[OBJC_IVAR____TtC8Freeform37CRLCollaboratorStatusHUDController_mi__cachedAccessoryView] = 0;
            id v52 = &v51[OBJC_IVAR____TtC8Freeform37CRLCollaboratorStatusHUDController_mi_event];
            *(void *)id v52 = v61;
            *((void *)v52 + 1) = 0;
            v52[16] = 1;
            id v53 = v7;
            id v54 = v49;
            swift_bridgeObjectRetain();
            id v55 = sub_100E70118(v53, 0, v51);
            id v56 = sub_100DDF47C(v61, 0, 1);
            uint64_t v58 = v57;
            swift_bridgeObjectRelease();
            double v59 = &v55[OBJC_IVAR____TtC8Freeform41CRLCollaboratorBaseStatusHUDController_mi_accessibilityAnnouncement];
            *(void *)double v59 = v56;
            *((void *)v59 + 1) = v58;

            swift_bridgeObjectRelease();
            sub_100E6EDF0(v55, (uint64_t)v53, (uint64_t (*)(uint64_t *))sub_100E71F38, (uint64_t (*)(uint64_t *))sub_100E71F58, (uint64_t)&unk_10152FF68, (uint64_t)sub_100E71F7C, (uint64_t)&unk_10152FF80, 0.0);

            return;
          }
LABEL_36:
          id v22 = 0;
          goto LABEL_37;
        }
LABEL_35:
        swift_bridgeObjectRelease();
        goto LABEL_36;
      }
    }
    else
    {
      uint64_t v14 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v14) {
        goto LABEL_8;
      }
    }
    swift_bridgeObjectRelease();
    id v22 = 0;
    id v9 = 0;
    goto LABEL_37;
  }
  id v23 = [self blueColor];
  id v24 = objc_allocWithZone((Class)CRLLobbySession_mi);
  NSString v25 = String._bridgeToObjectiveC()();
  id v26 = [v24 initWithDisplayName:v25 indicatorDarkColor:v23 cnContact:0];

  id v27 = v26;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  do
  {
    id v28 = v27;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
    --v13;
  }
  while (v13);
  unint64_t v29 = objc_allocWithZone((Class)type metadata accessor for CRLCollaboratorStatusHUDController_mi());
  *(void *)&v29[OBJC_IVAR____TtC8Freeform37CRLCollaboratorStatusHUDController_mi__cachedAccessoryView] = 0;
  char v30 = &v29[OBJC_IVAR____TtC8Freeform37CRLCollaboratorStatusHUDController_mi_event];
  *(void *)char v30 = _swiftEmptyArrayStorage;
  *((void *)v30 + 1) = 0;
  v30[16] = 3;
  id v31 = v7;
  swift_bridgeObjectRetain();
  uint64_t v32 = sub_100E70118(v31, 0, v29);
  uint64_t v33 = self;
  uint64_t v34 = v32;
  id v35 = [v33 mainBundle];
  v62._countAndFlagsBits = 0xD00000000000003DLL;
  v62._object = (void *)0x800000010128B340;
  v36._object = (void *)0x800000010128B320;
  v36._countAndFlagsBits = 0xD000000000000015;
  v37._countAndFlagsBits = 0;
  v37._object = (void *)0xE000000000000000;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v36, (Swift::String_optional)0, (NSBundle)v35, v37, v62);

  uint64_t v38 = swift_allocObject();
  *(_OWORD *)(v38 + 16) = xmmword_10117E810;
  if ((unint64_t)_swiftEmptyArrayStorage >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v39 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v39 = *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  *(void *)(v38 + 56) = &type metadata for Int;
  *(void *)(v38 + 64) = &protocol witness table for Int;
  *(void *)(v38 + 32) = v39;
  uint64_t v40 = String.init(format:_:)();
  uint64_t v42 = v41;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  id v43 = (uint64_t *)&v34[OBJC_IVAR____TtC8Freeform41CRLCollaboratorBaseStatusHUDController_mi_accessibilityAnnouncement];
  *id v43 = v40;
  v43[1] = v42;

  swift_bridgeObjectRelease();
  id v44 = v34;
  sub_100E6EDF0(v44, (uint64_t)v31, (uint64_t (*)(uint64_t *))sub_100E71F38, (uint64_t (*)(uint64_t *))sub_100E71F58, (uint64_t)&unk_10152FF68, (uint64_t)sub_100E71F7C, (uint64_t)&unk_10152FF80, 0.0);
}

void sub_100E61E38(uint64_t a1)
{
  [*(id *)(a1 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interactiveCanvasController) endEditing];
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v2 = (void *)Strong;
    id v3 = sub_100E3CE10();
    NSString v4 = [v3 searchString];

    if (!v4)
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)();
      NSString v4 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
    }
    [v2 setSearchText:v4];
  }
  id v5 = (void *)swift_unknownObjectWeakLoadStrong();
  if (v5)
  {
    id v6 = v5;
    [v5 presentFindNavigatorShowingReplace:0];
  }
}

unint64_t sub_100E62124()
{
  uint64_t v1 = _swiftEmptyArrayStorage;
  unint64_t v29 = (unint64_t)_swiftEmptyArrayStorage;
  id v2 = *(char **)(*(void *)(*(void *)(v0 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_editingCoordinator)
                            + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard)
                + OBJC_IVAR____TtC8Freeform8CRLBoard_rootContainer);
  uint64_t v3 = OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedOrderedItems;
  uint64_t v4 = *(void *)&v2[OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedOrderedItems];
  id v5 = v2;
  if (!v4)
  {
    sub_100846AB0();
    uint64_t v4 = *(void *)&v2[v3];
  }
  if (v4) {
    uint64_t v6 = v4;
  }
  else {
    uint64_t v6 = (uint64_t)_swiftEmptyArrayStorage;
  }
  swift_bridgeObjectRetain();

  v28[0] = _swiftEmptyArrayStorage;
  if (!((unint64_t)v6 >> 62))
  {
    uint64_t v7 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v7) {
      goto LABEL_8;
    }
LABEL_20:
    swift_bridgeObjectRelease();
    unint64_t v11 = (unint64_t)_swiftEmptyArrayStorage;
    if (((unint64_t)_swiftEmptyArrayStorage & 0x8000000000000000) != 0) {
      goto LABEL_35;
    }
    goto LABEL_21;
  }
  swift_bridgeObjectRetain();
  uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (!v7) {
    goto LABEL_20;
  }
LABEL_8:
  if (v7 < 1)
  {
    __break(1u);
    goto LABEL_49;
  }
  uint64_t v8 = 0;
  uint64_t v1 = (double *)(v6 & 0xC000000000000001);
  do
  {
    if (v1) {
      id v9 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v9 = *(id *)(v6 + 8 * v8 + 32);
    }
    Swift::String v10 = v9;
    if ([v9 conformsToProtocol:&OBJC_PROTOCOL___CRLSearchable])
    {
    }
    else
    {
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
    }
    ++v8;
  }
  while (v7 != v8);
  swift_bridgeObjectRelease();
  unint64_t v11 = v28[0];
  if ((v28[0] & 0x8000000000000000) != 0) {
    goto LABEL_35;
  }
LABEL_21:
  if ((v11 & 0x4000000000000000) == 0)
  {
    uint64_t v6 = *(void *)(v11 + 16);
    if (!v6) {
      goto LABEL_36;
    }
    goto LABEL_23;
  }
LABEL_35:
  swift_bridgeObjectRetain();
  uint64_t v6 = _CocoaArrayWrapper.endIndex.getter();
  swift_release();
  if (!v6) {
    goto LABEL_36;
  }
LABEL_23:
  if (v6 < 1)
  {
LABEL_49:
    __break(1u);
    goto LABEL_50;
  }
  uint64_t v12 = 0;
  uint64_t v13 = *(void **)(v27 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interactiveCanvasController);
  unint64_t v14 = v11 & 0xC000000000000001;
  id v15 = &selRef_invalidateSizedImageIfNeededForBakedMaskPathFromBlock_;
  unint64_t v16 = &protocolRef_CRLReadChannel;
  do
  {
    if (v14) {
      id v17 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v17 = *(id *)(v11 + 8 * v12 + 32);
    }
    uint64_t v18 = v17;
    id v19 = [v13 v15[440] v17];
    if (v19)
    {
      id v20 = v19;
      if ([v19 conformsToProtocol:v16[34]])
      {
        id v21 = v20;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)((v29 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v29 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
        unint64_t v14 = v11 & 0xC000000000000001;
        id v15 = &selRef_invalidateSizedImageIfNeededForBakedMaskPathFromBlock_;
        unint64_t v16 = &protocolRef_CRLReadChannel;
      }
    }
    ++v12;
  }
  while (v6 != v12);
LABEL_36:
  swift_release();
  id v22 = (double *)[*(id *)(v27 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interactiveCanvasController) layerHost];
  uint64_t v1 = v22;
  if (v22)
  {
    if ([v22 respondsToSelector:"asiOSCVC"]) {
      id v23 = [v1 asiOSCVC];
    }
    else {
      id v23 = 0;
    }
    swift_unknownObjectRelease();
    uint64_t v1 = (double *)[v23 smartSelectionManager];
  }
  v28[3] = &type metadata for CRLFeatureFlags;
  v28[4] = sub_1005396A8();
  LOBYTE(v28[0]) = 14;
  char v24 = isFeatureEnabled(_:)();
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v28);
  if ((v24 & 1) == 0) {
    goto LABEL_46;
  }
  if (v1)
  {
    id v25 = [v1 makeFreehandDrawingItemsSearchTargetForCurrentlyCachedDrawing];
    if (!v25)
    {
LABEL_46:

      return v29;
    }
    uint64_t v6 = (uint64_t)v25;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)((v29 & 0xFFFFFFFFFFFFFF8) + 0x10) < *(void *)((v29 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    {
LABEL_45:
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();

      goto LABEL_46;
    }
LABEL_50:
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    goto LABEL_45;
  }
  return v29;
}

uint64_t sub_100E62604()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1005057FC(&qword_101672BB0);
  __chkstk_darwin(v2 - 8, v3);
  id v5 = (char *)&v46[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(void *)&v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_editingCoordinator];
  uint64_t v7 = OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_followCoordinator;
  id v8 = *(id *)(v6 + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_followCoordinator);
  char v9 = sub_1007E9F6C();

  if (v9)
  {
    id v10 = *(id *)(v6 + v7);
    id v11 = sub_1007F9FB0();

    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    if (!Strong)
    {

      return 0;
    }
    uint64_t v13 = (void *)Strong;
    v46[3] = &type metadata for CRLFeatureFlags;
    v46[4] = (id)sub_1005396A8();
    LOBYTE(v46[0]) = 12;
    char v14 = isFeatureEnabled(_:)();
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v46);
    if (v14)
    {
      swift_getKeyPath();
      swift_getKeyPath();
      static Published.subscript.getter();
      swift_release();
      swift_release();
      if (v46[0])
      {

        if (qword_10166FAE0 != -1) {
          swift_once();
        }
        swift_beginAccess();
        id v15 = (id)static OS_os_log.crlFollow;
        uint64_t v16 = static os_log_type_t.default.getter();
        sub_100BAC898((uint64_t)v15, (uint64_t)&_mh_execute_header, v16, (uint64_t)"Calling didEndFollowing because of the public endFollowSessionForLocalParticipant method was called", 99, 2, (uint64_t)_swiftEmptyArrayStorage);

        uint64_t v17 = 1;
        sub_1007ECCE4(1);

        return v17;
      }
    }

    return 1;
  }
  uint64_t v18 = swift_unknownObjectWeakLoadStrong();
  if (!v18)
  {
    Swift::String v37 = (objc_class *)type metadata accessor for CRLiOSBoardViewController();
    v47.receiver = v1;
    v47.super_class = v37;
    return (uint64_t)[super accessibilityPerformEscape];
  }
  uint64_t v19 = v18;
  uint64_t v20 = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController__isConnectorModeEnabled;
  int v21 = v1[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController__isConnectorModeEnabled];
  if (v21 != 2)
  {
    if ((v21 & 1) == 0) {
      goto LABEL_11;
    }
LABEL_25:
    sub_100E4EE64(0);
    id v38 = [v1 view];
    id v39 = [self mainBundle];
    NSString v40 = String._bridgeToObjectiveC()();
    NSString v41 = String._bridgeToObjectiveC()();
    id v42 = [v39 localizedStringForKey:v40 value:v41 table:0];

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    NSString v43 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    CRLAccessibilityPostAnnouncementNotification(v38, v43);

LABEL_26:
    swift_unknownObjectRelease();
    return 1;
  }
  char v22 = sub_100E4F834();
  v1[v20] = v22 & 1;
  if (v22) {
    goto LABEL_25;
  }
LABEL_11:
  uint64_t v23 = OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate_window;
  char v24 = *(void **)(v19 + OBJC_IVAR____TtC8Freeform19CRLiOSSceneDelegate_window);
  if (!v24 || ([v24 isUserInteractionEnabled] & 1) == 0) {
    goto LABEL_26;
  }
  id v25 = *(void **)(v19 + v23);
  if (!v25
    || (id v26 = [v25 rootViewController]) == 0
    || (uint64_t v27 = v26,
        id v28 = objc_msgSend(v26, "crl_windowWrapper"),
        v27,
        !v28)
    || (id v29 = [v28 newWrapperBeginningIgnoringUserInteractionSafely], v28, !v29))
  {
    if (qword_10166F9D8 != -1) {
      swift_once();
    }
    swift_beginAccess();
    id v30 = (id)static OS_os_log.crlError;
    uint64_t v31 = static os_log_type_t.error.getter();
    sub_100BAC898((uint64_t)v30, (uint64_t)&_mh_execute_header, v31, (uint64_t)"Could not create token for ignoring user interaction; view hierarchy may not be set up yet",
      90,
      2,
      (uint64_t)_swiftEmptyArrayStorage);

    id v29 = 0;
  }
  uint64_t v32 = type metadata accessor for TaskPriority();
  uint64_t v17 = 1;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56))(v5, 1, 1, v32);
  type metadata accessor for MainActor();
  id v33 = v29;
  swift_unknownObjectRetain();
  uint64_t v34 = v1;
  uint64_t v35 = static MainActor.shared.getter();
  Swift::String v36 = (void *)swift_allocObject();
  v36[2] = v35;
  v36[3] = &protocol witness table for MainActor;
  v36[4] = v19;
  v36[5] = v34;
  v36[6] = v29;
  sub_1005912D0((uint64_t)v5, (uint64_t)&unk_10169FAF0, (uint64_t)v36);
  swift_unknownObjectRelease();
  swift_release();

  return v17;
}

uint64_t sub_100E62BD4()
{
  uint64_t v1 = v0;
  uint64_t v2 = *(void *)(v0 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_editingCoordinator);
  uint64_t v3 = OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_followCoordinator;
  id v4 = *(id *)(v2 + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_followCoordinator);
  id v5 = sub_1007F9FB0();

  id v6 = *(id *)(v2 + v3);
  LOBYTE(v2) = sub_1007E9F6C();

  if (v2)
  {
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      id v8 = (void *)Strong;
      void v17[3] = &type metadata for CRLFeatureFlags;
      v17[4] = (id)sub_1005396A8();
      LOBYTE(v17[0]) = 12;
      char v9 = isFeatureEnabled(_:)();
      _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v17);
      if (v9)
      {
        swift_getKeyPath();
        swift_getKeyPath();
        static Published.subscript.getter();
        swift_release();
        swift_release();
        if (v17[0])
        {

          if (qword_10166FAE0 != -1) {
            swift_once();
          }
          swift_beginAccess();
          id v10 = (id)static OS_os_log.crlFollow;
          uint64_t v11 = static os_log_type_t.default.getter();
          sub_100BAC898((uint64_t)v10, (uint64_t)&_mh_execute_header, v11, (uint64_t)"Calling didEndFollowing because of the public endFollowSessionForLocalParticipant method was called", 99, 2, (uint64_t)_swiftEmptyArrayStorage);

          uint64_t v12 = 1;
          sub_1007ECCE4(1);
          goto LABEL_16;
        }
      }

LABEL_15:
      return 1;
    }
  }
  else
  {
    if (*(void *)(v1 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_followHUD))
    {
      uint64_t ObjectType = swift_getObjectType();
      swift_unknownObjectRetain();
      sub_100516358(1, ObjectType);
      swift_unknownObjectRelease();
    }
    uint64_t v14 = swift_unknownObjectWeakLoadStrong();
    if (v14)
    {
      id v8 = (void *)v14;
      id v15 = (void *)swift_unknownObjectWeakLoadStrong();
      uint64_t v12 = (uint64_t)v15;
      if (!v15)
      {
LABEL_16:

        return v12;
      }
      sub_1007EDEA4(v15, 0);

      goto LABEL_15;
    }
  }

  return 0;
}

uint64_t sub_100E62E88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[56] = a4;
  v5[57] = a5;
  v5[58] = type metadata accessor for CRLBoardCRDTData(0);
  v5[59] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for URL();
  v5[60] = v6;
  v5[61] = *(void *)(v6 - 8);
  v5[62] = swift_task_alloc();
  v5[63] = swift_task_alloc();
  v5[64] = swift_task_alloc();
  v5[65] = swift_task_alloc();
  sub_1005057FC(&qword_101672E90);
  v5[66] = swift_task_alloc();
  type metadata accessor for MainActor();
  v5[67] = static MainActor.shared.getter();
  uint64_t v7 = dispatch thunk of Actor.unownedExecutor.getter();
  v5[68] = v7;
  v5[69] = v8;
  return _swift_task_switch(sub_100E6303C, v7, v8);
}

uint64_t sub_100E6303C()
{
  uint64_t v1 = *(void *)(v0 + 528);
  uint64_t v2 = *(void *)(v0 + 480);
  uint64_t v3 = *(void *)(v0 + 488);
  uint64_t v4 = *(void *)(v0 + 448);
  id v5 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v3 + 56);
  *(void *)(v0 + 560) = v5;
  *(void *)(v0 + 568) = (v3 + 56) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
  v5(v1, 1, 1, v2);
  type metadata accessor for CRContext();
  *(_OWORD *)(v0 + 192) = 0u;
  *(void *)(v0 + 208) = 0;
  *(_OWORD *)(v0 + 176) = 0u;
  *(void *)(v0 + 576) = static CRContext.newTransientContext(uniqueAssetManager:encryptionDelegate:)();
  sub_100522F00(v0 + 176, (uint64_t *)&unk_10169A780);
  uint64_t v6 = *(void *)(*(void *)(v4 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_editingCoordinator)
                 + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_boardActor);
  *(void *)(v0 + 584) = v6;
  swift_retain();
  return _swift_task_switch(sub_100E63170, v6, 0);
}

uint64_t sub_100E63170()
{
  uint64_t v1 = *(void *)(v0 + 584);
  type metadata accessor for CRLImmutableBoard(0);
  uint64_t v2 = *(void *)(v1 + OBJC_IVAR____TtC8Freeform13CRLBoardActor_store);
  uint64_t v3 = OBJC_IVAR____TtC8Freeform13CRLBoardActor_boardIdentifier;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 592) = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_100E6326C;
  return sub_1006D9650(v2, v1 + v3, 1);
}

uint64_t sub_100E6326C(uint64_t a1)
{
  uint64_t v4 = (void *)*v2;
  id v5 = (void *)*v2;
  v4[75] = a1;
  v4[76] = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v6 = v4[69];
    uint64_t v7 = v4[68];
    return _swift_task_switch(sub_100E63F2C, v7, v6);
  }
  else
  {
    swift_release();
    uint64_t v8 = (void *)swift_task_alloc();
    v4[77] = v8;
    *uint64_t v8 = v5;
    v8[1] = sub_100E6344C;
    return sub_100E64BD0(a1);
  }
}

uint64_t sub_100E6344C()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 552);
  uint64_t v3 = *(void *)(v1 + 544);
  return _swift_task_switch(sub_100E635A0, v3, v2);
}

uint64_t sub_100E635A0()
{
  id v1 = objc_allocWithZone((Class)CRLTemporaryDirectory);
  NSString v2 = String._bridgeToObjectiveC()();
  *(void *)(v0 + 432) = 0;
  id v3 = [v1 initWithSignature:v2 error:v0 + 432];
  *(void *)(v0 + 624) = v3;

  uint64_t v4 = *(void **)(v0 + 432);
  if (v3)
  {
    uint64_t v5 = *(char **)(v0 + 600);
    unint64_t v60 = *(objc_super **)(v0 + 576);
    uint64_t v54 = *(void *)(v0 + 520);
    uint64_t v55 = *(void *)(v0 + 528);
    uint64_t v7 = *(void *)(v0 + 504);
    uint64_t v6 = *(void *)(v0 + 512);
    uint64_t v8 = *(void *)(v0 + 488);
    uint64_t v56 = *(void *)(v0 + 496);
    uint64_t v57 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v0 + 560);
    uint64_t v10 = *(void *)(v0 + 472);
    uint64_t v9 = *(void *)(v0 + 480);
    id v11 = v4;
    id v12 = [v3 URL];
    static URL._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v13 = *(void *)&v5[OBJC_IVAR____TtC8Freeform8CRLBoard_data] + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
    swift_beginAccess();
    sub_100E77E88(v13, v10, type metadata accessor for CRLBoardCRDTData);
    uint64_t v14 = v5;
    sub_1005057FC(&qword_101674450);
    CRRegister.wrappedValue.getter();
    sub_100E77EF0(v10, type metadata accessor for CRLBoardCRDTData);

    URL.appendingPathComponent(_:)();
    swift_bridgeObjectRelease();
    id v15 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
    *(void *)(v0 + 632) = v15;
    *(void *)(v0 + 640) = (v8 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    v15(v7, v9);
    URL.appendingPathExtension(_:)();
    double v59 = v15;
    v15(v6, v9);
    sub_100522F00(v55, &qword_101672E90);
    uint64_t v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16);
    *(void *)(v0 + 648) = v16;
    *(void *)(v0 + 656) = (v8 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    v16(v55, v54, v9);
    v57(v55, 0, 1, v9);
    v16(v56, v54, v9);
    uint64_t v17 = qword_1016700F0;
    id v58 = *(id *)&v14[OBJC_IVAR____TtC8Freeform8CRLBoard_store];
    uint64_t v18 = v60;
    if (v17 != -1) {
      swift_once();
    }
    uint64_t v19 = *(void *)(v0 + 576);
    uint64_t v20 = *(void *)(v0 + 496);
    uint64_t v21 = *(void *)(v0 + 480);
    swift_getKeyPath();
    swift_getKeyPath();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    BOOL v22 = (*(unsigned char *)(v0 + 688) & 1) == 0;
    uint64_t v23 = (objc_class *)type metadata accessor for CRLBoardFileWriteAssistant();
    char v24 = (char *)objc_allocWithZone(v23);
    v16((uint64_t)&v24[OBJC_IVAR____TtC8Freeform26CRLBoardFileWriteAssistant_url], v20, v21);
    *(void *)&v24[OBJC_IVAR____TtC8Freeform26CRLBoardFileWriteAssistant_store] = v58;
    *(void *)&v24[OBJC_IVAR____TtC8Freeform26CRLBoardFileWriteAssistant_context] = v19;
    *(void *)&v24[OBJC_IVAR____TtC8Freeform26CRLBoardFileWriteAssistant_options] = v22;
    *(void *)(v0 + 392) = v24;
    *(void *)(v0 + 400) = v23;
    *(void *)(v0 + 664) = [super init];
    v59(v20, v21);
    id v25 = (void *)swift_task_alloc();
    *(void *)(v0 + 672) = v25;
    void *v25 = v0;
    v25[1] = sub_100E63DC4;
    uint64_t v26 = *(void *)(v0 + 600);
    return sub_1009A2874(v26);
  }
  else
  {
    id v28 = *(void **)(v0 + 600);
    id v29 = *(void **)(v0 + 576);
    id v30 = v4;
    _convertNSErrorToError(_:)();

    swift_willThrow();
    swift_release();

    if (qword_10166F9D8 != -1) {
      swift_once();
    }
    uint64_t v31 = *(void *)(v0 + 528);
    uint64_t v33 = *(void *)(v0 + 480);
    uint64_t v32 = *(void *)(v0 + 488);
    swift_beginAccess();
    uint64_t v34 = (void *)static OS_os_log.crlError;
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_10117D8C0;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v32 + 48))(v31, 1, v33))
    {
      id v36 = v34;
      uint64_t v37 = 0;
      unint64_t v38 = 0;
    }
    else
    {
      uint64_t v39 = *(void *)(v0 + 512);
      uint64_t v41 = *(void *)(v0 + 480);
      uint64_t v40 = *(void *)(v0 + 488);
      (*(void (**)(uint64_t, void, uint64_t))(v40 + 16))(v39, *(void *)(v0 + 528), v41);
      id v42 = v34;
      uint64_t v37 = URL.path.getter();
      unint64_t v38 = v43;
      (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v39, v41);
    }
    id v61 = *(id *)(v0 + 448);
    *(void *)(inited + 56) = &type metadata for String;
    unint64_t v44 = sub_100528BE4();
    *(void *)(inited + 64) = v44;
    if (v38) {
      uint64_t v45 = v37;
    }
    else {
      uint64_t v45 = 0;
    }
    unint64_t v46 = 0xE000000000000000;
    if (v38) {
      unint64_t v46 = v38;
    }
    *(void *)(inited + 32) = v45;
    *(void *)(inited + 40) = v46;
    swift_getErrorValue();
    uint64_t v47 = Error.localizedDescription.getter();
    *(void *)(inited + 96) = &type metadata for String;
    *(void *)(inited + 104) = v44;
    *(void *)(inited + 72) = v47;
    *(void *)(inited + 80) = v48;
    uint64_t v49 = static os_log_type_t.error.getter();
    sub_100BAC898((uint64_t)v34, (uint64_t)&_mh_execute_header, v49, (uint64_t)"Error exporting board to file %@: %@", 36, 2, inited);
    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();

    swift_getErrorValue();
    Error.localizedDescription.getter();
    NSString v50 = String._bridgeToObjectiveC()();
    NSString v51 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v52 = [self alertControllerWithTitle:v50 message:v51 preferredStyle:1];

    [v61 presentViewController:v52 animated:1 completion:0];
    swift_errorRelease();
    sub_100522F00(*(void *)(v0 + 528), &qword_101672E90);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    id v53 = *(uint64_t (**)(void))(v0 + 8);
    return v53();
  }
}

uint64_t sub_100E63DC4()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 680) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 552);
  uint64_t v4 = *(void *)(v2 + 544);
  if (v0) {
    uint64_t v5 = sub_100E64800;
  }
  else {
    uint64_t v5 = sub_100E642D0;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_100E63F2C()
{
  id v1 = (void *)v0[72];
  swift_release();
  swift_release();

  if (qword_10166F9D8 != -1) {
    swift_once();
  }
  uint64_t v2 = v0[66];
  uint64_t v4 = v0[60];
  uint64_t v3 = v0[61];
  swift_beginAccess();
  uint64_t v5 = (void *)static OS_os_log.crlError;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117D8C0;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v2, 1, v4))
  {
    id v7 = v5;
    uint64_t v8 = 0;
    unint64_t v9 = 0;
  }
  else
  {
    uint64_t v10 = v0[64];
    uint64_t v12 = v0[60];
    uint64_t v11 = v0[61];
    (*(void (**)(uint64_t, void, uint64_t))(v11 + 16))(v10, v0[66], v12);
    id v13 = v5;
    uint64_t v8 = URL.path.getter();
    unint64_t v9 = v14;
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v10, v12);
  }
  id v26 = (id)v0[56];
  *(void *)(inited + 56) = &type metadata for String;
  unint64_t v15 = sub_100528BE4();
  *(void *)(inited + 64) = v15;
  if (v9) {
    uint64_t v16 = v8;
  }
  else {
    uint64_t v16 = 0;
  }
  unint64_t v17 = 0xE000000000000000;
  if (v9) {
    unint64_t v17 = v9;
  }
  *(void *)(inited + 32) = v16;
  *(void *)(inited + 40) = v17;
  swift_getErrorValue();
  uint64_t v18 = Error.localizedDescription.getter();
  *(void *)(inited + 96) = &type metadata for String;
  *(void *)(inited + 104) = v15;
  *(void *)(inited + 72) = v18;
  *(void *)(inited + 80) = v19;
  uint64_t v20 = static os_log_type_t.error.getter();
  sub_100BAC898((uint64_t)v5, (uint64_t)&_mh_execute_header, v20, (uint64_t)"Error exporting board to file %@: %@", 36, 2, inited);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  swift_getErrorValue();
  Error.localizedDescription.getter();
  NSString v21 = String._bridgeToObjectiveC()();
  NSString v22 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v23 = [self alertControllerWithTitle:v21 message:v22 preferredStyle:1];

  [v26 presentViewController:v23 animated:1 completion:0];
  swift_errorRelease();
  sub_100522F00(v0[66], &qword_101672E90);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  char v24 = (uint64_t (*)(void))v0[1];
  return v24();
}

uint64_t sub_100E642D0()
{
  id v1 = (void (*)(uint64_t *, uint64_t, uint64_t))v0[81];
  uint64_t v2 = (void *)v0[78];
  uint64_t v3 = v0[65];
  uint64_t v4 = v0[60];
  swift_release();
  sub_1005057FC((uint64_t *)&unk_10167BEF0);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_10117E810;
  *(void *)(v5 + 56) = v4;
  uint64_t v6 = sub_1005767BC((uint64_t *)(v5 + 32));
  v1(v6, v3, v4);
  id v7 = objc_allocWithZone((Class)type metadata accessor for CRLSelectionAwareActivityViewController());
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  id v9 = [v7 initWithActivityItems:isa applicationActivities:0];

  uint64_t v10 = sub_100DC6BC4(v9);
  swift_bridgeObjectRelease();
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = v2;
  v0[20] = SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:);
  v0[21] = v11;
  v0[16] = _NSConcreteStackBlock;
  v0[17] = *(void *)"";
  v0[18] = sub_100864858;
  v0[19] = &unk_10152FE18;
  uint64_t v12 = _Block_copy(v0 + 16);
  id v13 = v10;
  id v14 = v2;
  swift_release();
  [v13 setCompletionWithItemsHandler:v12];
  _Block_release(v12);

  if (objc_msgSend(self, "crl_padUI"))
  {
    uint64_t v15 = v0[57];
    [v13 setModalPresentationStyle:7];
    sub_100522E9C(v15, (uint64_t)(v0 + 31), &qword_101672BF0);
    if (v0[34])
    {
      sub_10050BF48(0, (unint64_t *)&qword_101674470);
      if (swift_dynamicCast())
      {
        id v16 = (id)v0[53];
        id v17 = [v13 popoverPresentationController];
        if (!v17)
        {
LABEL_19:

          goto LABEL_20;
        }
        id v18 = v17;
        [v17 setBarButtonItem:v16];
LABEL_12:

        goto LABEL_19;
      }
    }
    else
    {
      sub_100522F00((uint64_t)(v0 + 31), &qword_101672BF0);
    }
    sub_100522E9C(v0[57], (uint64_t)(v0 + 27), &qword_101672BF0);
    if (v0[30])
    {
      sub_10050BF48(0, (unint64_t *)&qword_1016725F0);
      if (swift_dynamicCast())
      {
        id v16 = (id)v0[55];
        id v19 = [v13 popoverPresentationController];
        if (v19)
        {
          uint64_t v20 = v19;
          [v19 setSourceView:v16];
        }
        id v18 = [v13 popoverPresentationController];
        [v18 setCanOverlapSourceViewRect:1];
        goto LABEL_12;
      }
    }
    else
    {
      sub_100522F00((uint64_t)(v0 + 27), &qword_101672BF0);
    }
    id v21 = [v13 popoverPresentationController];
    if (v21)
    {
      NSString v22 = v21;
      id v23 = [(id)v0[56] view];
      [v22 setSourceView:v23];
    }
    id v24 = [v13 popoverPresentationController];
    if (v24)
    {
      id v25 = v24;
      [v24 setSourceRect:0.0, 0.0, 0.0, 0.0];
    }
    id v16 = [v13 popoverPresentationController];
    [v16 setCanOverlapSourceViewRect:1];
    goto LABEL_19;
  }
LABEL_20:
  id v26 = (void *)v0[83];
  uint64_t v27 = (void (*)(uint64_t, uint64_t))v0[79];
  id v28 = (void *)v0[78];
  id v29 = (void *)v0[75];
  id v30 = (void *)v0[72];
  uint64_t v31 = v0[65];
  uint64_t v32 = v0[60];
  [(id)v0[56] presentViewController:v13 animated:1 completion:0];

  v27(v31, v32);
  sub_100522F00(v0[66], &qword_101672E90);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v33 = (uint64_t (*)(void))v0[1];
  return v33();
}

uint64_t sub_100E64800()
{
  id v1 = (void *)v0[83];
  uint64_t v2 = (void (*)(uint64_t, uint64_t))v0[79];
  uint64_t v3 = (void *)v0[78];
  uint64_t v4 = (void *)v0[75];
  uint64_t v5 = (void *)v0[72];
  uint64_t v6 = v0[65];
  uint64_t v7 = v0[60];
  swift_release();

  v2(v6, v7);
  if (qword_10166F9D8 != -1) {
    swift_once();
  }
  uint64_t v8 = v0[66];
  uint64_t v10 = v0[60];
  uint64_t v9 = v0[61];
  swift_beginAccess();
  uint64_t v11 = (void *)static OS_os_log.crlError;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117D8C0;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v8, 1, v10))
  {
    id v13 = v11;
    uint64_t v14 = 0;
    unint64_t v15 = 0;
  }
  else
  {
    uint64_t v16 = v0[64];
    uint64_t v18 = v0[60];
    uint64_t v17 = v0[61];
    (*(void (**)(uint64_t, void, uint64_t))(v17 + 16))(v16, v0[66], v18);
    id v19 = v11;
    uint64_t v14 = URL.path.getter();
    unint64_t v15 = v20;
    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v16, v18);
  }
  id v32 = (id)v0[56];
  *(void *)(inited + 56) = &type metadata for String;
  unint64_t v21 = sub_100528BE4();
  *(void *)(inited + 64) = v21;
  if (v15) {
    uint64_t v22 = v14;
  }
  else {
    uint64_t v22 = 0;
  }
  unint64_t v23 = 0xE000000000000000;
  if (v15) {
    unint64_t v23 = v15;
  }
  *(void *)(inited + 32) = v22;
  *(void *)(inited + 40) = v23;
  swift_getErrorValue();
  uint64_t v24 = Error.localizedDescription.getter();
  *(void *)(inited + 96) = &type metadata for String;
  *(void *)(inited + 104) = v21;
  *(void *)(inited + 72) = v24;
  *(void *)(inited + 80) = v25;
  uint64_t v26 = static os_log_type_t.error.getter();
  sub_100BAC898((uint64_t)v11, (uint64_t)&_mh_execute_header, v26, (uint64_t)"Error exporting board to file %@: %@", 36, 2, inited);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  swift_getErrorValue();
  Error.localizedDescription.getter();
  NSString v27 = String._bridgeToObjectiveC()();
  NSString v28 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v29 = [self alertControllerWithTitle:v27 message:v28 preferredStyle:1];

  [v32 presentViewController:v29 animated:1 completion:0];
  swift_errorRelease();
  sub_100522F00(v0[66], &qword_101672E90);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  id v30 = (uint64_t (*)(void))v0[1];
  return v30();
}

uint64_t sub_100E64BD0(uint64_t a1)
{
  v2[12] = a1;
  v2[13] = v1;
  type metadata accessor for MainActor();
  v2[14] = static MainActor.shared.getter();
  uint64_t v4 = dispatch thunk of Actor.unownedExecutor.getter();
  v2[15] = v4;
  v2[16] = v3;
  return _swift_task_switch(sub_100E64C68, v4, v3);
}

uint64_t sub_100E64C68()
{
  id v1 = objc_allocWithZone((Class)type metadata accessor for CRLFileWriteAssetDownloadAlertViewController());
  *(unsigned char *)(v0 + 152) = 0;
  State.init(wrappedValue:)();
  *(unsigned char *)(v0 + 16) = *(unsigned char *)(v0 + 80);
  *(void *)(v0 + 24) = *(void *)(v0 + 88);
  *(_OWORD *)(v0 + 32) = 0u;
  *(_OWORD *)(v0 + 48) = 0u;
  *(_OWORD *)(v0 + 64) = 0u;
  uint64_t v2 = (void *)UIHostingController.init(rootView:)();
  *(void *)(v0 + 136) = v2;
  [v2 setModalPresentationStyle:2];
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 144) = v3;
  void *v3 = v0;
  v3[1] = sub_100E64D68;
  uint64_t v5 = *(void *)(v0 + 96);
  uint64_t v4 = *(void *)(v0 + 104);
  return sub_100F6FD20(v5, v4);
}

uint64_t sub_100E64D68()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 128);
  uint64_t v3 = *(void *)(v1 + 120);
  return _swift_task_switch(sub_100E64E88, v3, v2);
}

uint64_t sub_100E64E88()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100E64EF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[49] = a4;
  v5[50] = a5;
  v5[51] = type metadata accessor for CRLBoardCRDTData(0);
  v5[52] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for URL();
  v5[53] = v6;
  v5[54] = *(void *)(v6 - 8);
  v5[55] = swift_task_alloc();
  v5[56] = swift_task_alloc();
  v5[57] = swift_task_alloc();
  sub_1005057FC(&qword_101672E90);
  v5[58] = swift_task_alloc();
  type metadata accessor for MainActor();
  v5[59] = static MainActor.shared.getter();
  uint64_t v7 = dispatch thunk of Actor.unownedExecutor.getter();
  v5[60] = v7;
  v5[61] = v8;
  return _swift_task_switch(sub_100E65098, v7, v8);
}

uint64_t sub_100E65098()
{
  uint64_t v1 = v0[58];
  uint64_t v2 = v0[53];
  uint64_t v3 = v0[54];
  uint64_t v4 = v0[49];
  uint64_t v5 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v3 + 56);
  v0[62] = v5;
  v0[63] = (v3 + 56) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
  v5(v1, 1, 1, v2);
  uint64_t v6 = *(void *)(*(void *)(v4 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_editingCoordinator)
                 + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_boardActor);
  v0[64] = v6;
  swift_retain();
  return _swift_task_switch(sub_100E65188, v6, 0);
}

uint64_t sub_100E65188()
{
  uint64_t v1 = *(void *)(v0 + 512);
  type metadata accessor for CRLImmutableBoard(0);
  uint64_t v2 = *(void *)(v1 + OBJC_IVAR____TtC8Freeform13CRLBoardActor_store);
  uint64_t v3 = OBJC_IVAR____TtC8Freeform13CRLBoardActor_boardIdentifier;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 520) = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_100E65284;
  return sub_1006D9650(v2, v1 + v3, 1);
}

uint64_t sub_100E65284(uint64_t a1)
{
  uint64_t v3 = (void *)*v2;
  v3[66] = a1;
  v3[67] = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v4 = v3[60];
    uint64_t v5 = v3[61];
    uint64_t v6 = sub_100E65E70;
  }
  else
  {
    swift_release();
    uint64_t v4 = v3[60];
    uint64_t v5 = v3[61];
    uint64_t v6 = sub_100E653D8;
  }
  return _swift_task_switch(v6, v4, v5);
}

uint64_t sub_100E653D8()
{
  swift_release();
  id v1 = objc_allocWithZone((Class)CRLTemporaryDirectory);
  NSString v2 = String._bridgeToObjectiveC()();
  v0[46] = 0;
  id v3 = [v1 initWithSignature:v2 error:v0 + 46];

  uint64_t v4 = (void *)v0[46];
  if (!v3)
  {
    id v19 = (void *)v0[66];
    id v20 = v4;
    _convertNSErrorToError(_:)();

    swift_willThrow();
    goto LABEL_6;
  }
  uint64_t v5 = (char *)v0[66];
  uint64_t v78 = v0[67];
  uint64_t v76 = v0[58];
  v77 = (void (*)(uint64_t, void, uint64_t, uint64_t))v0[62];
  uint64_t v6 = v0[56];
  uint64_t v75 = v0[57];
  uint64_t v7 = v0[55];
  uint64_t v74 = v0[54];
  uint64_t v9 = v0[52];
  uint64_t v8 = v0[53];
  id v10 = v4;
  v80 = v3;
  id v11 = [v3 URL];
  static URL._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v12 = *(void *)&v5[OBJC_IVAR____TtC8Freeform8CRLBoard_data] + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
  swift_beginAccess();
  sub_100E77E88(v12, v9, type metadata accessor for CRLBoardCRDTData);
  id v13 = v5;
  sub_1005057FC(&qword_101674450);
  CRRegister.wrappedValue.getter();
  sub_100E77EF0(v9, type metadata accessor for CRLBoardCRDTData);

  URL.appendingPathComponent(_:)();
  swift_bridgeObjectRelease();
  uint64_t v14 = *(void (**)(uint64_t, uint64_t))(v74 + 8);
  v14(v7, v8);
  URL.appendingPathExtension(_:)();
  v14(v6, v8);
  sub_100522F00(v76, &qword_101672E90);
  unint64_t v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(v74 + 16);
  v15(v76, v75, v8);
  v77(v76, 0, 1, v8);
  uint64_t v16 = sub_100D13860();
  if (!v78)
  {
    uint64_t v21 = (uint64_t)v16;
    unint64_t v22 = v17;
    Data.write(to:options:)();
    v79 = v14;
    uint64_t v48 = v0[57];
    uint64_t v49 = v0[53];
    sub_1005057FC((uint64_t *)&unk_10167BEF0);
    uint64_t v50 = swift_allocObject();
    *(_OWORD *)(v50 + 16) = xmmword_10117E810;
    *(void *)(v50 + 56) = v49;
    NSString v51 = sub_1005767BC((uint64_t *)(v50 + 32));
    v15((uint64_t)v51, v48, v49);
    id v52 = objc_allocWithZone((Class)type metadata accessor for CRLSelectionAwareActivityViewController());
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    id v54 = [v52 initWithActivityItems:isa applicationActivities:0];

    uint64_t v55 = sub_100DC6BC4(v54);
    swift_bridgeObjectRelease();
    uint64_t v56 = swift_allocObject();
    *(void *)(v56 + 16) = v80;
    v0[20] = SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:);
    v0[21] = v56;
    v0[16] = _NSConcreteStackBlock;
    v0[17] = *(void *)"";
    v0[18] = sub_100864858;
    v0[19] = &unk_10152FE68;
    uint64_t v57 = _Block_copy(v0 + 16);
    id v58 = v55;
    id v59 = v80;
    swift_release();
    [v58 setCompletionWithItemsHandler:v57];
    _Block_release(v57);

    if (!objc_msgSend(self, "crl_padUI")) {
      goto LABEL_39;
    }
    uint64_t v60 = v0[50];
    [v58 setModalPresentationStyle:7];
    sub_100522E9C(v60, (uint64_t)(v0 + 26), &qword_101672BF0);
    if (v0[29])
    {
      sub_10050BF48(0, (unint64_t *)&qword_101674470);
      if (swift_dynamicCast())
      {
        id v61 = (id)v0[48];
        id v62 = [v58 popoverPresentationController];
        if (!v62)
        {
LABEL_38:

LABEL_39:
          UIImage_optional v71 = (void *)v0[66];
          uint64_t v72 = v0[57];
          uint64_t v73 = v0[53];
          [(id)v0[49] presentViewController:v58 animated:1 completion:0];
          sub_100510084(v21, v22);

          v79(v72, v73);
          goto LABEL_17;
        }
        id v63 = v62;
        [v62 setBarButtonItem:v61];
LABEL_31:

        goto LABEL_38;
      }
    }
    else
    {
      sub_100522F00((uint64_t)(v0 + 26), &qword_101672BF0);
    }
    sub_100522E9C(v0[50], (uint64_t)(v0 + 22), &qword_101672BF0);
    if (v0[25])
    {
      sub_10050BF48(0, (unint64_t *)&qword_1016725F0);
      if (swift_dynamicCast())
      {
        id v61 = (id)v0[47];
        id v64 = [v58 popoverPresentationController];
        if (v64)
        {
          id v65 = v64;
          [v64 setSourceView:v61];
        }
        id v63 = [v58 popoverPresentationController];
        [v63 setCanOverlapSourceViewRect:1];
        goto LABEL_31;
      }
    }
    else
    {
      sub_100522F00((uint64_t)(v0 + 22), &qword_101672BF0);
    }
    id v66 = [v58 popoverPresentationController];
    if (v66)
    {
      v67 = v66;
      id v68 = [(id)v0[49] view];
      [v67 setSourceView:v68];
    }
    id v69 = [v58 popoverPresentationController];
    if (v69)
    {
      id v70 = v69;
      [v69 setSourceRect:0.0, 0.0, 0.0, 0.0];
    }
    id v61 = [v58 popoverPresentationController];
    [v61 setCanOverlapSourceViewRect:1];
    goto LABEL_38;
  }
  uint64_t v18 = (void *)v0[66];
  v14(v0[57], v0[53]);

LABEL_6:
  if (qword_10166F9D8 != -1) {
    swift_once();
  }
  uint64_t v23 = v0[58];
  uint64_t v24 = v0[53];
  uint64_t v25 = v0[54];
  swift_beginAccess();
  uint64_t v26 = (void *)static OS_os_log.crlError;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117D8C0;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v25 + 48))(v23, 1, v24))
  {
    id v28 = v26;
    uint64_t v29 = 0;
    unint64_t v30 = 0;
  }
  else
  {
    uint64_t v31 = v0[56];
    uint64_t v32 = v0[53];
    uint64_t v33 = v0[54];
    (*(void (**)(uint64_t, void, uint64_t))(v33 + 16))(v31, v0[58], v32);
    id v34 = v26;
    uint64_t v29 = URL.path.getter();
    unint64_t v30 = v35;
    (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v31, v32);
  }
  id v36 = (void *)v0[49];
  *(void *)(inited + 56) = &type metadata for String;
  unint64_t v37 = sub_100528BE4();
  *(void *)(inited + 64) = v37;
  if (v30) {
    uint64_t v38 = v29;
  }
  else {
    uint64_t v38 = 0;
  }
  unint64_t v39 = 0xE000000000000000;
  if (v30) {
    unint64_t v39 = v30;
  }
  *(void *)(inited + 32) = v38;
  *(void *)(inited + 40) = v39;
  swift_getErrorValue();
  uint64_t v40 = Error.localizedDescription.getter();
  *(void *)(inited + 96) = &type metadata for String;
  *(void *)(inited + 104) = v37;
  *(void *)(inited + 72) = v40;
  *(void *)(inited + 80) = v41;
  uint64_t v42 = static os_log_type_t.error.getter();
  sub_100BAC898((uint64_t)v26, (uint64_t)&_mh_execute_header, v42, (uint64_t)"Error exporting board drawings to file %@: %@", 45, 2, inited);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  swift_getErrorValue();
  Error.localizedDescription.getter();
  NSString v43 = String._bridgeToObjectiveC()();
  NSString v44 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v45 = [self alertControllerWithTitle:v43 message:v44 preferredStyle:1];

  [v36 presentViewController:v45 animated:1 completion:0];
  swift_errorRelease();
LABEL_17:
  sub_100522F00(v0[58], &qword_101672E90);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v46 = (uint64_t (*)(void))v0[1];
  return v46();
}

uint64_t sub_100E65E70()
{
  swift_release();
  swift_release();
  if (qword_10166F9D8 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[58];
  uint64_t v3 = v0[53];
  uint64_t v2 = v0[54];
  swift_beginAccess();
  uint64_t v4 = (void *)static OS_os_log.crlError;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117D8C0;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v1, 1, v3))
  {
    id v6 = v4;
    uint64_t v7 = 0;
    unint64_t v8 = 0;
  }
  else
  {
    uint64_t v9 = v0[56];
    uint64_t v11 = v0[53];
    uint64_t v10 = v0[54];
    (*(void (**)(uint64_t, void, uint64_t))(v10 + 16))(v9, v0[58], v11);
    id v12 = v4;
    uint64_t v7 = URL.path.getter();
    unint64_t v8 = v13;
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v9, v11);
  }
  id v25 = (id)v0[49];
  *(void *)(inited + 56) = &type metadata for String;
  unint64_t v14 = sub_100528BE4();
  *(void *)(inited + 64) = v14;
  if (v8) {
    uint64_t v15 = v7;
  }
  else {
    uint64_t v15 = 0;
  }
  unint64_t v16 = 0xE000000000000000;
  if (v8) {
    unint64_t v16 = v8;
  }
  *(void *)(inited + 32) = v15;
  *(void *)(inited + 40) = v16;
  swift_getErrorValue();
  uint64_t v17 = Error.localizedDescription.getter();
  *(void *)(inited + 96) = &type metadata for String;
  *(void *)(inited + 104) = v14;
  *(void *)(inited + 72) = v17;
  *(void *)(inited + 80) = v18;
  uint64_t v19 = static os_log_type_t.error.getter();
  sub_100BAC898((uint64_t)v4, (uint64_t)&_mh_execute_header, v19, (uint64_t)"Error exporting board drawings to file %@: %@", 45, 2, inited);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  swift_getErrorValue();
  Error.localizedDescription.getter();
  NSString v20 = String._bridgeToObjectiveC()();
  NSString v21 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v22 = [self alertControllerWithTitle:v20 message:v21 preferredStyle:1];

  [v25 presentViewController:v22 animated:1 completion:0];
  swift_errorRelease();
  sub_100522F00(v0[58], &qword_101672E90);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v23 = (uint64_t (*)(void))v0[1];
  return v23();
}

void sub_100E664C8()
{
  sub_100E446A8(0);
  if (sub_100E3CCB4()) {
    return;
  }
  id v7 = [self sharedKeyboardMonitor];
  [v7 onScreenHeight];
  if (v1 <= 0.0)
  {
    id v6 = v7;
    goto LABEL_7;
  }
  [*(id *)&v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interactiveCanvasController] scrollCurrentSelectionToVisibleWithOptions:0];
  id v2 = [v0 view];
  if (!v2)
  {
    __break(1u);
    goto LABEL_11;
  }
  uint64_t v3 = v2;
  [v2 setNeedsLayout];

  id v4 = [v0 view];
  if (!v4)
  {
LABEL_11:
    __break(1u);
    return;
  }
  id v5 = v4;
  [v4 layoutIfNeeded];

  id v6 = v5;
LABEL_7:
}

double sub_100E666D4(double a1, double a2, double a3, double a4)
{
  id v9 = [v4 view];
  double v10 = 0.0;
  if (v9)
  {
    uint64_t v11 = v9;
    id v12 = [v9 window];
    if (v12
      && (unint64_t v13 = v12,
          id v14 = [v12 screen],
          v13,
          id v15 = [v14 coordinateSpace],
          v14,
          v15))
    {
      [v11 convertRect:v15 fromCoordinateSpace:a1, a2, a3, a4];
      CGFloat x = v24.origin.x;
      CGFloat y = v24.origin.y;
      CGFloat width = v24.size.width;
      CGFloat height = v24.size.height;
      double MinY = CGRectGetMinY(v24);
      v25.origin.CGFloat x = x;
      v25.origin.CGFloat y = y;
      v25.size.CGFloat width = width;
      v25.size.CGFloat height = height;
      double MaxY = CGRectGetMaxY(v25);
      [v11 bounds];
      double v22 = CGRectGetMaxY(v26);
      swift_unknownObjectRelease();

      if (MaxY >= v22)
      {
        if (v22 - MinY < 0.0) {
          return 0.0;
        }
        else {
          return v22 - MinY;
        }
      }
    }
    else
    {
    }
  }
  return v10;
}

uint64_t sub_100E6683C(uint64_t a1)
{
  v2[8] = a1;
  v2[9] = v1;
  type metadata accessor for MainActor();
  v2[10] = static MainActor.shared.getter();
  uint64_t v4 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_100E668D4, v4, v3);
}

uint64_t sub_100E668D4()
{
  uint64_t v1 = v0[9];
  swift_release();
  id v2 = (char *)[*(id *)(v1 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interactiveCanvasController) editingCoordinator];
  uint64_t v3 = v2;
  if (v2)
  {
    id v5 = (void *)v0[8];
    uint64_t v4 = (void *)v0[9];
    id v6 = *(id *)&v2[OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_boardItemFactory];

    sub_1005057FC((uint64_t *)&unk_101676C10);
    uint64_t v7 = swift_allocObject();
    *(_OWORD *)(v7 + 16) = xmmword_101177E70;
    *(void *)(v7 + 32) = v5;
    specialized Array._endMutation()();
    id v8 = objc_allocWithZone((Class)CRLiOSItemProviderItemSource);
    sub_10050BF48(0, (unint64_t *)&unk_10169FAE0);
    id v9 = v5;
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    id v11 = [v8 initWithItemProviders:isa];

    uint64_t v12 = swift_allocObject();
    *(void *)(v12 + 16) = v4;
    v0[6] = sub_100E76C00;
    v0[7] = v12;
    v0[2] = _NSConcreteStackBlock;
    v0[3] = *(void *)"";
    v0[4] = sub_100E66CC0;
    v0[5] = &unk_1015300C0;
    unint64_t v13 = _Block_copy(v0 + 2);
    id v14 = v4;
    swift_release();
    id v15 = [v11 loadProvidersForImportedBoardItemsUsingBoardItemFactory:v6 WithLoadHandler:v13];

    _Block_release(v13);
  }
  unint64_t v16 = (uint64_t (*)(BOOL))v0[1];
  return v16(v3 != 0);
}

void sub_100E66B04(uint64_t a1, char *a2)
{
  uint64_t v4 = (char *)[*(id *)&a2[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interactiveCanvasController] editingCoordinator];
  if (v4)
  {
    id v5 = v4;
    id v13 = *(id *)&v4[OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_boardItemFactory];

    if (a1)
    {
      id v6 = objc_allocWithZone((Class)CRLPasteboardMultipleImportableBoardItemProvider);
      swift_bridgeObjectRetain();
      sub_1005057FC(&qword_101676170);
      Class isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      id v8 = [v6 initWithImportableBoardItemProviders:isa];

      uint64_t v9 = swift_allocObject();
      *(void *)(v9 + 16) = v8;
      *(void *)(v9 + 24) = a2;
      aBlock[4] = sub_100E76C08;
      aBlock[5] = v9;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = *(void *)"";
      aBlock[2] = sub_100679958;
      void aBlock[3] = &unk_101530110;
      double v10 = _Block_copy(aBlock);
      id v11 = v8;
      uint64_t v12 = a2;
      swift_release();
      [v11 provideBoardItemsWithFactory:v13 completionHandler:v10];
      _Block_release(v10);
    }
    else
    {
    }
  }
}

uint64_t sub_100E66CC0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2;
  uint64_t v3 = *(void (**)(uint64_t))(a1 + 32);
  if (a2)
  {
    sub_1005057FC(&qword_101676170);
    uint64_t v2 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
  }
  swift_retain();
  v3(v2);
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t sub_100E66EB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  type metadata accessor for MainActor();
  v3[5] = static MainActor.shared.getter();
  uint64_t v5 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_100E66F54, v5, v4);
}

uint64_t sub_100E66F54()
{
  uint64_t v1 = (void *)v0[4];
  uint64_t v3 = (void *)v0[2];
  uint64_t v2 = (const void *)v0[3];
  swift_release();
  v0[6] = _Block_copy(v2);
  id v4 = v3;
  id v5 = v1;
  id v6 = (void *)swift_task_alloc();
  v0[7] = v6;
  *id v6 = v0;
  v6[1] = sub_100E67018;
  uint64_t v7 = v0[2];
  return sub_100E6683C(v7);
}

uint64_t sub_100E67018(char a1)
{
  uint64_t v3 = *(void (***)(void, void))(*v1 + 48);
  id v4 = *(void **)(*v1 + 32);
  id v5 = *(void **)(*v1 + 16);
  uint64_t v8 = *v1;
  swift_task_dealloc();

  v3[2](v3, a1 & 1);
  _Block_release(v3);
  id v6 = *(uint64_t (**)(void))(v8 + 8);
  return v6();
}

void sub_100E67178(void *a1, char *a2)
{
  id v3 = [a1 boardItems];
  if (!v3) {
    return;
  }
  id v4 = v3;
  type metadata accessor for CRLBoardItem(0);
  unint64_t v5 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v5 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v11 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v11)
    {
LABEL_4:
      id v6 = [*(id *)&a2[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interactiveCanvasController] layerHost];
      if (v6)
      {
        uint64_t v7 = v6;
        uint64_t v8 = swift_allocObject();
        *(void *)(v8 + 16) = a2;
        *(void *)(v8 + 24) = v5;
        v12[4] = sub_100E76C50;
        v12[5] = v8;
        v12[0] = _NSConcreteStackBlock;
        v12[1] = *(void *)"";
        v12[2] = sub_100679958;
        v12[3] = &unk_101530160;
        uint64_t v9 = _Block_copy(v12);
        double v10 = a2;
        swift_release();
        [v7 continueAsynchronousWorkOnMainThreadUsingBlock:v9];
        swift_unknownObjectRelease();
        _Block_release(v9);
        return;
      }
    }
  }
  else if (*(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_4;
  }

  swift_bridgeObjectRelease();
}

uint64_t sub_100E67320(uint64_t a1, unint64_t a2)
{
  sub_100E76448(a2);
  sub_100E3C6E8();
  sub_1005C360C(a2, 0, 0);

  return swift_release();
}

void sub_100E67378()
{
  uint64_t v1 = v0;
  sub_100E5D3EC();
  [*(id *)&v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interactiveCanvasController] endEditing];
  [v0 endDrawingModeIfNeeded];
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  [Strong dismissFindNavigator];

  sub_100E560EC();
  id v3 = *(void **)&v1[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_scenesPopoverState];
  swift_getKeyPath();
  swift_getKeyPath();
  id v4 = v3;
  unint64_t v5 = (void (*)(objc_class **, void))static Published.subscript.modify();
  *id v6 = !*v6;
  v5(&v35, 0);

  swift_release();
  swift_release();
  uint64_t v7 = *(void **)&v1[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_compactScenesNavigatorViewController];
  if (v7)
  {
    id v8 = v7;
    id v9 = [v1 presentedViewController];
    if (v9)
    {
      double v10 = v9;
      sub_10050BF48(0, (unint64_t *)&qword_1016745A0);
      id v11 = v8;
      id v12 = v10;
      LOBYTE(v10) = static NSObject.== infix(_:_:)();

      if (v10)
      {
        id v13 = *(void **)&v1[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_compactScenesPresenter];
        if (v13)
        {
          id v14 = v13;
          sub_1005E13AC(v11);
        }
LABEL_12:

        return;
      }
    }
  }
  id v15 = [v1 traitCollection];
  if ([v15 horizontalSizeClass] == (id)1)
  {

LABEL_10:
    uint64_t v17 = *(void **)&v1[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_compactScenesPresenter];
    if (!v17) {
      return;
    }
    id v11 = v17;
    sub_1005E13AC(v1);
    goto LABEL_12;
  }
  unsigned __int8 v16 = [self crl_phoneUI];

  if (v16) {
    goto LABEL_10;
  }
  uint64_t v18 = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_scenesNavigatorViewController;
  uint64_t v19 = *(void **)&v1[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_scenesNavigatorViewController];
  if (v19)
  {
    id v20 = [v19 view];
    if (v20)
    {
      id v11 = v20;
      NSString v21 = *(void **)&v1[v18];
      if (v21)
      {
        id v22 = v21;
        id v23 = sub_100D5ED8C();

        CGRect v24 = *(void **)&v1[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_canvasViewController];
        id v25 = [v24 miniFormatterPresenter];
        if (v25)
        {
          CGRect v26 = v25;
          if ([v25 isPresentingMiniFormatter]) {
            [v26 dismissMiniFormatter];
          }
          swift_unknownObjectRelease();
        }
        sub_1005057FC((uint64_t *)&unk_101676C10);
        uint64_t v27 = swift_allocObject();
        *(_OWORD *)(v27 + 16) = xmmword_101177E70;
        *(void *)(v27 + 32) = v11;
        unint64_t v35 = (objc_class *)v27;
        specialized Array._endMutation()();
        id v28 = v35;
        id v11 = v11;
        id v29 = [v24 passthroughViewsToAllowCanvasInteractionDuringPopoverPresentation];
        if (!v29)
        {
          __break(1u);
          return;
        }
        unint64_t v30 = v29;
        sub_10050BF48(0, (unint64_t *)&qword_1016725F0);
        unint64_t v31 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

        unint64_t v35 = v28;
        sub_1006E0E0C(v31);
        uint64_t v32 = v35;
        uint64_t v33 = *(void **)&v1[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_scenesPresenter];
        if (v33)
        {
          id v34 = v33;
          sub_1005E02A0(v1, (uint64_t)v23, v32);

          swift_bridgeObjectRelease();
        }
        else
        {

          swift_bridgeObjectRelease();
        }
      }
      goto LABEL_12;
    }
  }
}

uint64_t sub_100E67750(uint64_t a1, char a2)
{
  *(unsigned char *)(v3 + 464) = a2;
  *(void *)(v3 + 272) = a1;
  *(void *)(v3 + 280) = v2;
  type metadata accessor for CRLBoardCRDTData(0);
  *(void *)(v3 + 288) = swift_task_alloc();
  type metadata accessor for UUID();
  *(void *)(v3 + 296) = swift_task_alloc();
  type metadata accessor for CRLBoardIdentifier(0);
  *(void *)(v3 + 304) = swift_task_alloc();
  *(void *)(v3 + 312) = type metadata accessor for MainActor();
  *(void *)(v3 + 320) = static MainActor.shared.getter();
  uint64_t v5 = dispatch thunk of Actor.unownedExecutor.getter();
  *(void *)(v3 + 328) = v5;
  *(void *)(v3 + 336) = v4;
  return _swift_task_switch(sub_100E67874, v5, v4);
}

uint64_t sub_100E67874()
{
  uint64_t v1 = *(void **)(*(void *)(v0 + 280)
                + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interactiveCanvasController);
  uint64_t v2 = (char *)[v1 board];
  *(void *)(v0 + 344) = v2;
  if (!v2)
  {
    swift_release();
    if (qword_10166FAF8 != -1) {
      swift_once();
    }
    swift_beginAccess();
    uint64_t v38 = (void *)static OS_os_log.crlScenes;
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_10117E810;
    id v40 = v38;
    uint64_t v41 = UUID.uuidString.getter();
    uint64_t v43 = v42;
    *(void *)(inited + 56) = &type metadata for String;
    *(void *)(inited + 64) = sub_100528BE4();
    *(void *)(inited + 32) = v41;
    *(void *)(inited + 40) = v43;
    uint64_t v44 = static os_log_type_t.error.getter();
    sub_100BAC898((uint64_t)v40, (uint64_t)&_mh_execute_header, v44, (uint64_t)"Failed to generate thumbnail image for scene %{public} due to a nil board", 73, 2, inited);
    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();
    goto LABEL_20;
  }
  uint64_t v3 = v2;
  uint64_t v5 = *(void *)(v0 + 272);
  uint64_t v4 = *(void **)(v0 + 280);
  id v6 = [v4 traitCollection];
  id v7 = [v6 preferredContentSizeCategory];

  *(unsigned char *)(v0 + 465) = sub_1005E1C0C(v7) & 1;
  [v1 visibleUnscaledRect];
  *(double *)(v0 + 352) = sub_1000672D8(1, v8, v9, *(CGFloat *)(v5 + OBJC_IVAR____TtC8Freeform12CRLSceneInfo_savedUnscaledRect), *(CGFloat *)(v5 + OBJC_IVAR____TtC8Freeform12CRLSceneInfo_savedUnscaledRect + 8), *(CGFloat *)(v5 + OBJC_IVAR____TtC8Freeform12CRLSceneInfo_savedUnscaledRect + 16), *(CGFloat *)(v5 + OBJC_IVAR____TtC8Freeform12CRLSceneInfo_savedUnscaledRect + 24));
  *(void *)(v0 + 360) = v10;
  *(void *)(v0 + 368) = v11;
  *(void *)(v0 + 376) = v12;
  id v13 = (void (*)())[v4 view];
  if (!v13)
  {
    __break(1u);
    return _swift_task_switch(v13, v14, v15);
  }
  unsigned __int8 v16 = v13;
  id v17 = [v13 window];

  if (v17)
  {
    id v18 = [v17 windowScene];

    if (v18)
    {
      id v19 = [v18 delegate];
      *(void *)(v0 + 384) = v19;

      if (v19)
      {
        type metadata accessor for CRLiOSSceneDelegate();
        uint64_t v20 = swift_dynamicCastClass();
        *(void *)(v0 + 392) = v20;
        if (v20)
        {
          uint64_t v21 = *(void *)(v0 + 304);
          uint64_t v23 = *(void *)(v0 + 288);
          uint64_t v22 = *(void *)(v0 + 296);
          *(void *)(v0 + 400) = OBJC_IVAR____TtC8Freeform12CRLSceneInfo_sceneID;
          uint64_t v24 = OBJC_IVAR____TtC8Freeform8CRLBoard_data;
          uint64_t v25 = *(void *)&v3[OBJC_IVAR____TtC8Freeform8CRLBoard_data]
              + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
          swift_beginAccess();
          sub_100E77E88(v25, v23, type metadata accessor for CRLBoardCRDTData);
          swift_retain();
          swift_unknownObjectRetain();
          sub_1005057FC(&qword_101674550);
          CRRegister.wrappedValue.getter();
          sub_100E77EF0(v23, type metadata accessor for CRLBoardCRDTData);
          swift_release();
          CGRect v26 = (uint64_t *)(*(void *)&v3[v24] + OBJC_IVAR____TtC8Freeform12CRLBoardData_ownerName);
          uint64_t v28 = *v26;
          unint64_t v27 = v26[1];
          swift_bridgeObjectRetain();
          sub_100753370(v22, v28, v27, v21);
          *(void *)(v0 + 408) = static MainActor.shared.getter();
          uint64_t v29 = dispatch thunk of Actor.unownedExecutor.getter();
          uint64_t v15 = v30;
          *(void *)(v0 + 416) = v29;
          *(void *)(v0 + 424) = v30;
          id v13 = sub_100E67DEC;
          uint64_t v14 = v29;
          return _swift_task_switch(v13, v14, v15);
        }
        swift_unknownObjectRelease();
      }
    }
  }
  swift_release();
  uint64_t v31 = *(void *)(v0 + 272);
  sub_1005057FC((uint64_t *)&unk_101676C10);
  uint64_t v32 = swift_initStackObject();
  *(_OWORD *)(v32 + 16) = xmmword_101177E70;
  *(void *)(v32 + 32) = v31;
  unint64_t v51 = v32;
  specialized Array._endMutation()();
  uint64_t v33 = *(void **)(v0 + 272);
  if (v51 >> 62)
  {
    id v45 = v33;
    swift_bridgeObjectRetain();
    uint64_t v46 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v46) {
      goto LABEL_12;
    }
LABEL_18:
    unint64_t v37 = &_swiftEmptySetSingleton;
    goto LABEL_19;
  }
  uint64_t v34 = *(void *)((v51 & 0xFFFFFFFFFFFFFF8) + 0x10);
  id v35 = v33;
  if (!v34) {
    goto LABEL_18;
  }
LABEL_12:
  sub_10050BF28(v51);
  unint64_t v37 = v36;
LABEL_19:
  id v40 = *(id *)(v0 + 344);
  uint64_t v47 = *(void **)(v0 + 280);
  swift_bridgeObjectRelease();
  id v48 = v47;
  sub_100E70578((uint64_t)v37, (uint64_t)v48);

  swift_bridgeObjectRelease();
LABEL_20:

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v49 = *(uint64_t (**)(void))(v0 + 8);
  return v49(0);
}

void sub_100E67DEC()
{
  sub_100A708BC();
  *(void *)(v0 + 432) = v1;
  if (v1)
  {
    uint64_t v2 = *(void *)(v0 + 400);
    int v3 = *(unsigned __int8 *)(v0 + 465);
    uint64_t v4 = *(void *)(v0 + 272);
    uint64_t v5 = (void *)swift_task_alloc();
    *(void *)(v0 + 440) = v5;
    void *v5 = v0;
    v5[1] = sub_100E67EE8;
    if (v3) {
      double v6 = 75.0;
    }
    else {
      double v6 = 50.0;
    }
    double v7 = *(double *)(v0 + 368);
    double v8 = *(double *)(v0 + 376);
    double v9 = *(double *)(v0 + 352);
    double v10 = *(double *)(v0 + 360);
    uint64_t v11 = *(void *)(v0 + 304);
    char v12 = *(unsigned char *)(v0 + 464);
    sub_10061B830(v4 + v2, v11, v12, v9, v10, v7, v8, v6, v6);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_100E67EE8(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 448) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = *(void *)(v4 + 416);
    uint64_t v6 = *(void *)(v4 + 424);
    double v7 = sub_100E68224;
  }
  else
  {

    *(void *)(v4 + 456) = a1;
    uint64_t v5 = *(void *)(v4 + 416);
    uint64_t v6 = *(void *)(v4 + 424);
    double v7 = sub_100E68018;
  }
  return _swift_task_switch(v7, v5, v6);
}

uint64_t sub_100E68018()
{
  uint64_t v1 = v0[38];
  swift_release();
  sub_100E77EF0(v1, type metadata accessor for CRLBoardIdentifier);
  swift_unknownObjectRelease();
  uint64_t v2 = v0[41];
  uint64_t v3 = v0[42];
  return _swift_task_switch(sub_100E680A8, v2, v3);
}

uint64_t sub_100E680A8()
{
  uint64_t v1 = v0[57];
  swift_release();
  uint64_t v2 = (void *)v0[49];
  uint64_t v3 = v0[34];
  sub_1005057FC((uint64_t *)&unk_101676C10);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_101177E70;
  *(void *)(inited + 32) = v3;
  unint64_t v17 = inited;
  specialized Array._endMutation()();
  uint64_t v5 = (void *)v0[34];
  if (v17 >> 62)
  {
    id v10 = v5;
    swift_bridgeObjectRetain();
    uint64_t v11 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v11) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v6 = *(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10);
    id v7 = v5;
    if (v6)
    {
LABEL_3:
      sub_10050BF28(v17);
      uint64_t v9 = v8;
      goto LABEL_6;
    }
  }
  uint64_t v9 = &_swiftEmptySetSingleton;
LABEL_6:
  char v12 = (void *)v0[43];
  uint64_t v13 = (void *)v0[35];
  swift_bridgeObjectRelease();
  id v14 = v13;
  sub_100E70578((uint64_t)v9, (uint64_t)v14);

  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v15 = (uint64_t (*)(uint64_t))v0[1];
  return v15(v1);
}

uint64_t sub_100E68224()
{
  uint64_t v1 = (void *)v0[54];
  uint64_t v2 = v0[38];
  swift_release();

  sub_100E77EF0(v2, type metadata accessor for CRLBoardIdentifier);
  swift_unknownObjectRelease();
  uint64_t v3 = v0[41];
  uint64_t v4 = v0[42];
  return _swift_task_switch(sub_100E682C4, v3, v4);
}

uint64_t sub_100E682C4()
{
  swift_unknownObjectRelease();
  swift_release();
  if (qword_10166FAF8 != -1) {
    swift_once();
  }
  uint64_t v1 = *(void **)(v0 + 344);
  swift_beginAccess();
  uint64_t v2 = (void *)static OS_os_log.crlScenes;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117E810;
  id v4 = v2;
  uint64_t v5 = UUID.uuidString.getter();
  uint64_t v7 = v6;
  *(void *)(inited + 56) = &type metadata for String;
  *(void *)(inited + 64) = sub_100528BE4();
  *(void *)(inited + 32) = v5;
  *(void *)(inited + 40) = v7;
  uint64_t v8 = static os_log_type_t.error.getter();
  sub_100BAC898((uint64_t)v4, (uint64_t)&_mh_execute_header, v8, (uint64_t)"Failed to generate thumbnail image for scene %{public}", 54, 2, inited);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  swift_errorRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v9 = *(uint64_t (**)(void))(v0 + 8);
  return v9(0);
}

uint64_t sub_100E68488(void **a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_1005057FC((uint64_t *)&unk_101674520);
  __chkstk_darwin(v6 - 8, v7);
  uint64_t v9 = (char *)&v51 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for UUID();
  uint64_t v56 = *(void *)(v10 - 8);
  __chkstk_darwin(v10, v11);
  uint64_t v60 = (char *)&v51 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&double v15 = __chkstk_darwin(v13, v14).n128_u64[0];
  uint64_t v55 = (char *)&v51 - v16;
  unint64_t v17 = (char *)*a1;
  uint64_t v53 = a2;
  uint64_t v18 = *(void **)(a2 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interactiveCanvasController);
  [v18 visibleUnscaledRect:v15];
  id v52 = v17;
  double v21 = sub_1000672D8(1, v19, v20, *(CGFloat *)&v17[OBJC_IVAR____TtC8Freeform12CRLSceneInfo_savedUnscaledRect], *(CGFloat *)&v17[OBJC_IVAR____TtC8Freeform12CRLSceneInfo_savedUnscaledRect + 8], *(CGFloat *)&v17[OBJC_IVAR____TtC8Freeform12CRLSceneInfo_savedUnscaledRect + 16], *(CGFloat *)&v17[OBJC_IVAR____TtC8Freeform12CRLSceneInfo_savedUnscaledRect + 24]);
  double v23 = v22;
  double v25 = v24;
  double v27 = v26;
  id v28 = [v18 canvas];
  id v29 = [v28 layoutController];

  id v30 = [v29 layoutsInRect:1 deep:v21, v23, v25, v27];
  sub_10050BF48(0, (unint64_t *)&qword_101690720);
  unint64_t v31 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (!(v31 >> 62))
  {
    uint64_t v32 = *(void *)((v31 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    uint64_t v54 = v3;
    if (v32) {
      goto LABEL_3;
    }
LABEL_23:
    id v36 = _swiftEmptyArrayStorage;
LABEL_24:
    swift_bridgeObjectRelease_n();
    id v47 = v52;
    uint64_t v48 = sub_100CDCB64((uint64_t)v36);
    swift_bridgeObjectRelease();
    uint64_t v49 = (uint64_t *)(v53 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_sceneToContentDict);
    swift_beginAccess();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v62 = *v49;
    *uint64_t v49 = 0x8000000000000000;
    sub_1009790FC(v48, v47, isUniquelyReferenced_nonNull_native);
    *uint64_t v49 = v62;

    swift_bridgeObjectRelease();
    return swift_endAccess();
  }
  swift_bridgeObjectRetain();
  uint64_t result = _CocoaArrayWrapper.endIndex.getter();
  uint64_t v32 = result;
  uint64_t v54 = v3;
  if (!result) {
    goto LABEL_23;
  }
LABEL_3:
  if (v32 >= 1)
  {
    uint64_t v34 = 0;
    uint64_t v57 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v56 + 56);
    unint64_t v58 = v31 & 0xC000000000000001;
    id v35 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v56 + 48);
    id v36 = _swiftEmptyArrayStorage;
    unint64_t v37 = (void (**)(char *, uint64_t, uint64_t))(v56 + 32);
    unint64_t v59 = v31;
    id v61 = v9;
    do
    {
      if (v58) {
        id v38 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v38 = *(id *)(v31 + 8 * v34 + 32);
      }
      unint64_t v39 = v38;
      if ([v38 info])
      {
        type metadata accessor for CRLBoardItem(0);
        id v40 = (void *)swift_dynamicCastClass();
        if (v40)
        {
          (*(void (**)(void))((swift_isaMask & *v40) + 0x88))();
          uint64_t v41 = 0;
        }
        else
        {
          uint64_t v41 = 1;
        }
        swift_unknownObjectRelease();
      }
      else
      {
        uint64_t v41 = 1;
      }
      uint64_t v42 = (uint64_t)v61;
      (*v57)(v61, v41, 1, v10);

      if ((*v35)(v42, 1, v10) == 1)
      {
        sub_100522F00(v42, (uint64_t *)&unk_101674520);
      }
      else
      {
        uint64_t v43 = *v37;
        uint64_t v44 = v55;
        (*v37)(v55, v42, v10);
        v43(v60, (uint64_t)v44, v10);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          id v36 = (double *)sub_100F617D8(0, *((void *)v36 + 2) + 1, 1, (unint64_t)v36);
        }
        unint64_t v46 = *((void *)v36 + 2);
        unint64_t v45 = *((void *)v36 + 3);
        if (v46 >= v45 >> 1) {
          id v36 = (double *)sub_100F617D8(v45 > 1, v46 + 1, 1, (unint64_t)v36);
        }
        *((void *)v36 + 2) = v46 + 1;
        v43((char *)v36+ ((*(unsigned __int8 *)(v56 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v56 + 80))+ *(void *)(v56 + 72) * v46, (uint64_t)v60, v10);
      }
      ++v34;
      unint64_t v31 = v59;
    }
    while (v32 != v34);
    goto LABEL_24;
  }
  __break(1u);
  return result;
}

id sub_100E689EC()
{
  id v1 = [v0 traitCollection];
  if ([v1 horizontalSizeClass] == (id)1)
  {

    goto LABEL_4;
  }
  unsigned __int8 v2 = [self crl_phoneUI];

  if (v2)
  {
LABEL_4:
    id result = *(id *)&v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_compactScenesPresenter];
    if (!result) {
      return result;
    }
    return [result isBeingDismissed];
  }
  id result = *(id *)&v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_scenesPresenter];
  if (!result) {
    return result;
  }
  return [result isBeingDismissed];
}

void sub_100E68A9C(void *a1)
{
  uint64_t v2 = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_presentedSceneAlert;
  if (*(void *)&v1[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_presentedSceneAlert])
  {
    if (qword_10166FAF8 != -1) {
      swift_once();
    }
    swift_beginAccess();
    id v3 = (id)static OS_os_log.crlScenes;
    uint64_t v4 = static os_log_type_t.default.getter();
    sub_100BAC898((uint64_t)v3, (uint64_t)&_mh_execute_header, v4, (uint64_t)"Attempt to capture a scene while an alert was still presented.", 62, 2, (uint64_t)_swiftEmptyArrayStorage);
  }
  else
  {
    uint64_t v5 = v1;
    uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
    [Strong dismissFindNavigator];

    unsigned __int8 v8 = [self isReduceMotionEnabled];
    sub_100E531D4(v8 ^ 1, 0, 0);
    int v9 = sub_100E82D98();
    if (v9)
    {
      uint64_t v69 = v2;
      if (v9 == 1)
      {
        uint64_t v10 = self;
        id v11 = [v10 mainBundle];
        NSString v12 = String._bridgeToObjectiveC()();
        NSString v13 = String._bridgeToObjectiveC()();
        id v14 = [v11 localizedStringForKey:v12 value:v13 table:0];

        static String._unconditionallyBridgeFromObjectiveC(_:)();
        id v15 = [v10 mainBundle];
        NSString v16 = String._bridgeToObjectiveC()();
        NSString v17 = String._bridgeToObjectiveC()();
        id v18 = [v15 localizedStringForKey:v16 value:v17 table:0];

        static String._unconditionallyBridgeFromObjectiveC(_:)();
        NSString v19 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        NSString v20 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        id v21 = [self alertControllerWithTitle:v19 message:v20 preferredStyle:1];

        id v22 = [self mainBundle];
        NSString v23 = String._bridgeToObjectiveC()();
        NSString v37 = String._bridgeToObjectiveC()();
        id v38 = [v22 localizedStringForKey:v23 value:v37 table:0];

        static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v39 = swift_allocObject();
        *(void *)(v39 + 16) = v5;
        id v40 = v5;
        NSString v41 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        uint64_t v74 = sub_100E6D938;
        uint64_t v75 = v39;
        aBlock = _NSConcreteStackBlock;
        uint64_t v71 = *(void *)"";
        uint64_t v72 = sub_10051CE64;
        uint64_t v73 = &unk_10152FB58;
        uint64_t v42 = _Block_copy(&aBlock);
        swift_release();
        uint64_t v43 = self;
        id v44 = [v43 actionWithTitle:v41 style:0 handler:v42];
        _Block_release(v42);

        id v45 = [self mainBundle];
        NSString v46 = String._bridgeToObjectiveC()();
        NSString v55 = String._bridgeToObjectiveC()();
        id v56 = [v45 localizedStringForKey:v46 value:v55 table:0];

        static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v57 = swift_allocObject();
        *(void *)(v57 + 16) = v40;
        *(void *)(v57 + 24) = a1;
        id v58 = a1;
        unint64_t v59 = v40;
        NSString v60 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        uint64_t v74 = (void (*)())sub_100E6D990;
        uint64_t v75 = v57;
        aBlock = _NSConcreteStackBlock;
        uint64_t v71 = *(void *)"";
        uint64_t v72 = sub_10051CE64;
        uint64_t v73 = &unk_10152FBA8;
      }
      else
      {
        double v24 = self;
        id v25 = [v24 mainBundle];
        NSString v26 = String._bridgeToObjectiveC()();
        NSString v27 = String._bridgeToObjectiveC()();
        id v28 = [v25 localizedStringForKey:v26 value:v27 table:0];

        static String._unconditionallyBridgeFromObjectiveC(_:)();
        id v29 = [v24 mainBundle];
        NSString v30 = String._bridgeToObjectiveC()();
        NSString v31 = String._bridgeToObjectiveC()();
        id v32 = [v29 localizedStringForKey:v30 value:v31 table:0];

        static String._unconditionallyBridgeFromObjectiveC(_:)();
        NSString v33 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        NSString v34 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        id v21 = [self alertControllerWithTitle:v33 message:v34 preferredStyle:1];

        id v35 = [self mainBundle];
        NSString v36 = String._bridgeToObjectiveC()();
        NSString v47 = String._bridgeToObjectiveC()();
        id v48 = [v35 localizedStringForKey:v36 value:v47 table:0];

        static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v49 = swift_allocObject();
        *(void *)(v49 + 16) = v5;
        uint64_t v50 = v5;
        NSString v51 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        uint64_t v74 = sub_100E78178;
        uint64_t v75 = v49;
        aBlock = _NSConcreteStackBlock;
        uint64_t v71 = *(void *)"";
        uint64_t v72 = sub_10051CE64;
        uint64_t v73 = &unk_10152FBF8;
        id v52 = _Block_copy(&aBlock);
        swift_release();
        uint64_t v43 = self;
        id v44 = [v43 actionWithTitle:v51 style:0 handler:v52];
        _Block_release(v52);

        id v53 = [self mainBundle];
        NSString v54 = String._bridgeToObjectiveC()();
        NSString v62 = String._bridgeToObjectiveC()();
        id v63 = [v53 localizedStringForKey:v54 value:v62 table:0];

        static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v64 = swift_allocObject();
        *(void *)(v64 + 16) = v50;
        *(void *)(v64 + 24) = a1;
        id v65 = a1;
        unint64_t v59 = v50;
        NSString v60 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        uint64_t v74 = (void (*)())sub_100E6D990;
        uint64_t v75 = v64;
        aBlock = _NSConcreteStackBlock;
        uint64_t v71 = *(void *)"";
        uint64_t v72 = sub_10051CE64;
        uint64_t v73 = &unk_10152FC48;
      }
      id v61 = _Block_copy(&aBlock);
      swift_release();
      id v66 = [v43 actionWithTitle:v60 style:0 handler:v61];
      _Block_release(v61);

      [v21 addAction:v44];
      [v21 addAction:v66];
      [v21 setPreferredAction:v44];
      v67 = *(void **)&v5[v69];
      *(void *)&v5[v69] = v21;
      id v68 = v21;

      sub_100F2BCC8(v68);
      [v59 presentViewController:v68 animated:1 completion:0];
    }
    else
    {
      sub_100E69740(a1, v5);
    }
  }
}

void sub_100E69740(id a1, char *a2)
{
  uint64_t v4 = type metadata accessor for UUID();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v7 = __chkstk_darwin(v4, v6);
  int v9 = (char *)&v71 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7, v10);
  NSString v12 = (char *)&v71 - v11;
  id v13 = [a2 traitCollection];
  if ([v13 horizontalSizeClass] != (id)1)
  {
    unsigned int v14 = [self crl_phoneUI];

    if (a1) {
      goto LABEL_3;
    }
LABEL_7:
    UUID.init()();
    (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v12, v9, v4);
    [*(id *)&a2[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interactiveCanvasController] visibleUnscaledRect];
    double v38 = v37;
    double v40 = v39;
    double v42 = v41;
    double v44 = v43;
    id v45 = objc_allocWithZone((Class)type metadata accessor for CRLCommandCreateScene());
    NSString v46 = sub_100AB87E4((uint64_t)v12, v38, v40, v42, v44);
    uint64_t v47 = *(void *)&a2[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_editingCoordinator];
    uint64_t v48 = OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_commandController;
    id v49 = *(id *)(v47 + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_commandController);
    sub_10078F988(0);

    id v50 = *(id *)(v47 + v48);
    sub_10078BED8(v46, 0, 0, 4, 0);

    id v51 = *(id *)(v47 + v48);
    sub_10078FB90(0);

    id v52 = *(id *)(v47 + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard);
    id v53 = sub_100D0A33C((uint64_t)v9);

    if (v53)
    {
      unsigned int v72 = v14;
      uint64_t v54 = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_scenesPopoverState;
      NSString v55 = *(void **)&a2[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_scenesPopoverState];
      swift_getKeyPath();
      swift_getKeyPath();
      id v56 = v55;
      static Published.subscript.getter();

      swift_release();
      swift_release();
      sub_100E39D64((uint64_t)v53, v73, (uint64_t (*)(void))type metadata accessor for CRLSceneInfo);
      uint64_t v58 = v57;
      LOBYTE(v56) = v59;
      swift_bridgeObjectRelease();
      if ((v56 & 1) == 0)
      {
        id v71 = v46;
        NSString v60 = *(void **)&a2[v54];
        swift_getKeyPath();
        swift_getKeyPath();
        unint64_t v73 = (unint64_t)v53;
        id v61 = v53;
        id v62 = v60;
        static Published.subscript.setter();
        sub_100E41378();
        id v63 = &a2[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_currentSceneIndex];
        *(void *)id v63 = v58;
        v63[8] = 0;
        sub_100E69DBC(v72);

LABEL_14:
        (*(void (**)(char *, uint64_t))(v5 + 8))(v9, v4);
        return;
      }
    }
    if (qword_10166FAF8 != -1) {
      swift_once();
    }
    swift_beginAccess();
    uint64_t v64 = (void *)static OS_os_log.crlScenes;
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_10117E810;
    id v66 = v64;
    uint64_t v67 = UUID.uuidString.getter();
    uint64_t v69 = v68;
    *(void *)(inited + 56) = &type metadata for String;
    *(void *)(inited + 64) = sub_100528BE4();
    *(void *)(inited + 32) = v67;
    *(void *)(inited + 40) = v69;
    uint64_t v70 = static os_log_type_t.default.getter();
    sub_100BAC898((uint64_t)v66, (uint64_t)&_mh_execute_header, v70, (uint64_t)"Failed to create scene with UUID %{public}.", 43, 2, inited);
    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();

    goto LABEL_14;
  }

  unsigned int v14 = 1;
  if (!a1) {
    goto LABEL_7;
  }
LABEL_3:
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v12, (uint64_t)a1 + OBJC_IVAR____TtC8Freeform12CRLSceneInfo_sceneID, v4);
  id v15 = *(void **)&a2[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interactiveCanvasController];
  id v16 = a1;
  [v15 visibleUnscaledRect];
  double v18 = v17;
  double v20 = v19;
  double v22 = v21;
  double v24 = v23;
  id v25 = objc_allocWithZone((Class)type metadata accessor for CRLCommandRecaptureScene());
  NSString v26 = sub_10073FE6C((uint64_t)v12, v18, v20, v22, v24);
  id v27 = objc_retain(*(id *)(*(void *)&a2[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_editingCoordinator]
                          + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_commandController));
  sub_10078BED8(v26, 0, 0, 4, 0);

  uint64_t v28 = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_scenesPopoverState;
  id v29 = *(void **)&a2[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_scenesPopoverState];
  swift_getKeyPath();
  swift_getKeyPath();
  id v30 = v29;
  static Published.subscript.getter();

  swift_release();
  swift_release();
  sub_100E39D64((uint64_t)v16, v73, (uint64_t (*)(void))type metadata accessor for CRLSceneInfo);
  uint64_t v32 = v31;
  LOBYTE(v30) = v33;
  swift_bridgeObjectRelease();
  if ((v30 & 1) == 0)
  {
    NSString v34 = *(void **)&a2[v28];
    swift_getKeyPath();
    swift_getKeyPath();
    unint64_t v73 = (unint64_t)a1;
    id v16 = v16;
    id v35 = v34;
    static Published.subscript.setter();
    sub_100E41378();
    NSString v36 = &a2[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_currentSceneIndex];
    *(void *)NSString v36 = v32;
    v36[8] = 0;
    sub_100E69DBC(v14);
  }
}

void sub_100E69DBC(char a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1005057FC(&qword_101672BB0);
  __chkstk_darwin(v4 - 8, v5);
  uint64_t v7 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    uint64_t v8 = *(void **)&v2[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_compactScenesNavigatorViewController];
    if (v8)
    {
      id v9 = v8;
      id v10 = [v2 presentedViewController];
      if (!v10) {
        goto LABEL_9;
      }
      uint64_t v11 = v10;
      sub_10050BF48(0, (unint64_t *)&qword_1016745A0);
      NSString v12 = (char *)v9;
      id v13 = v11;
      LOBYTE(v11) = static NSObject.== infix(_:_:)();

      if ((v11 & 1) == 0)
      {
LABEL_9:
        uint64_t v28 = swift_allocObject();
        *(void *)(v28 + 16) = v9;
        id v29 = v9;
        sub_100E3AD00((uint64_t)sub_100E71A88, v28);
        swift_release();

        goto LABEL_10;
      }
      *(unsigned char *)(*(void *)&v12[OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController_scenesNavigatorState]
               + OBJC_IVAR____TtC8Freeform23CRLScenesNavigatorState_captureIsAnimating) = 1;
      unsigned __int8 v14 = [self isReduceMotionEnabled];
      uint64_t v15 = type metadata accessor for TaskPriority();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v7, 1, 1, v15);
      type metadata accessor for MainActor();
      id v16 = v12;
      uint64_t v17 = static MainActor.shared.getter();
      uint64_t v18 = swift_allocObject();
      *(void *)(v18 + 16) = v17;
      *(void *)(v18 + 24) = &protocol witness table for MainActor;
      *(void *)(v18 + 32) = v16;
      *(unsigned char *)(v18 + 40) = v14;
      sub_1005912D0((uint64_t)v7, (uint64_t)&unk_10169F9F8, v18);

      goto LABEL_8;
    }
  }
  id v19 = *(id *)&v2[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_scenesNavigatorState];
  sub_10080F0BC();

  double v20 = *(char **)&v2[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_scenesNavigatorViewController];
  if (v20)
  {
    *(unsigned char *)(*(void *)&v20[OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController_scenesNavigatorState]
             + OBJC_IVAR____TtC8Freeform23CRLScenesNavigatorState_captureIsAnimating) = 1;
    double v21 = self;
    double v22 = v20;
    unsigned __int8 v23 = [v21 isReduceMotionEnabled];
    uint64_t v24 = type metadata accessor for TaskPriority();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v7, 1, 1, v24);
    type metadata accessor for MainActor();
    id v25 = v22;
    uint64_t v26 = static MainActor.shared.getter();
    uint64_t v27 = swift_allocObject();
    *(void *)(v27 + 16) = v26;
    *(void *)(v27 + 24) = &protocol witness table for MainActor;
    *(void *)(v27 + 32) = v25;
    *(unsigned char *)(v27 + 40) = v23;
    sub_1005912D0((uint64_t)v7, (uint64_t)&unk_10169F9E8, v27);

LABEL_8:
    swift_release();
  }
LABEL_10:
  id v30 = *(void **)&v2[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interactiveCanvasController];
  id v31 = objc_retain(*(id *)(*(void *)&v2[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_editingCoordinator]
                          + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard));
  sub_100CFCD4C();

  sub_1005057FC(&qword_101673060);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v30 setInfosToDisplay:isa];
}

uint64_t sub_100E6A1BC(char *a1)
{
  uint64_t v2 = sub_1005057FC(&qword_101672BB0);
  __chkstk_darwin(v2 - 8, v3);
  uint64_t v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(unsigned char *)(*(void *)&a1[OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController_scenesNavigatorState]
           + OBJC_IVAR____TtC8Freeform23CRLScenesNavigatorState_captureIsAnimating) = 1;
  unsigned __int8 v6 = [self isReduceMotionEnabled];
  uint64_t v7 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v5, 1, 1, v7);
  type metadata accessor for MainActor();
  uint64_t v8 = a1;
  uint64_t v9 = static MainActor.shared.getter();
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = v9;
  *(void *)(v10 + 24) = &protocol witness table for MainActor;
  *(void *)(v10 + 32) = v8;
  *(unsigned char *)(v10 + 40) = v6;
  sub_1005912D0((uint64_t)v5, (uint64_t)&unk_10169FA00, v10);
  return swift_release();
}

void sub_100E6A324(char *a1)
{
  CGFloat v3 = *(double *)&a1[OBJC_IVAR____TtC8Freeform12CRLSceneInfo_savedUnscaledRect];
  CGFloat v4 = *(double *)&a1[OBJC_IVAR____TtC8Freeform12CRLSceneInfo_savedUnscaledRect + 8];
  CGFloat v5 = *(double *)&a1[OBJC_IVAR____TtC8Freeform12CRLSceneInfo_savedUnscaledRect + 16];
  CGFloat v6 = *(double *)&a1[OBJC_IVAR____TtC8Freeform12CRLSceneInfo_savedUnscaledRect + 24];
  uint64_t v7 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interactiveCanvasController);
  id v8 = [v7 editorController];
  if (v8)
  {
    uint64_t v9 = v8;
    id v10 = [v8 selectionPath];
  }
  else
  {
    id v10 = 0;
  }
  id v11 = [v7 layerHost];
  if (!v11)
  {
    id v12 = 0;
LABEL_9:
    char v13 = 0;
    goto LABEL_10;
  }
  id v12 = [v11 miniFormatterPresenter];
  swift_unknownObjectRelease();
  if (!v12 || ![v12 isPresentingMiniFormatter]) {
    goto LABEL_9;
  }
  [v12 dismissMiniFormatterWithAnimated:0];
  char v13 = 1;
LABEL_10:
  uint64_t v14 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = v14;
  *(void *)(v15 + 24) = a1;
  *(unsigned char *)(v15 + 32) = v13;
  *(void *)(v15 + 40) = v12;
  *(void *)(v15 + 48) = v10;
  id v16 = v10;
  swift_retain();
  uint64_t v17 = a1;
  swift_unknownObjectRetain();
  sub_1009AA2B0((uint64_t)sub_100E71C98, v15, v3, v4, v5, v6);
  swift_release();
  swift_release();
  swift_release();
  uint64_t v18 = *(void **)(*(void *)(v1 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_editingCoordinator)
                 + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_followCoordinator);
  v23[3] = &type metadata for CRLFeatureFlags;
  v23[4] = (id)sub_1005396A8();
  LOBYTE(v23[0]) = 12;
  id v19 = v18;
  char v20 = isFeatureEnabled(_:)();
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v23);
  if (v20)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    if (v23[0])
    {

      if (qword_10166FAE0 != -1) {
        swift_once();
      }
      swift_beginAccess();
      id v21 = (id)static OS_os_log.crlFollow;
      uint64_t v22 = static os_log_type_t.default.getter();
      sub_100BAC898((uint64_t)v21, (uint64_t)&_mh_execute_header, v22, (uint64_t)"Calling didEndFollowing because of the public endFollowSessionForLocalParticipant method was called", 99, 2, (uint64_t)_swiftEmptyArrayStorage);

      sub_1007ECCE4(1);
    }
  }
  swift_unknownObjectRelease();
}

void sub_100E6A650(char *a1)
{
  uint64_t v2 = v1;
  if ((sub_100E689EC() & 1) == 0)
  {
    unsigned __int8 v4 = [self isReduceMotionEnabled];
    sub_100E531D4(v4 ^ 1, 0, 0);
    uint64_t v5 = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_scenesPopoverState;
    CGFloat v6 = *(void **)&v1[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_scenesPopoverState];
    swift_getKeyPath();
    swift_getKeyPath();
    id v7 = v6;
    static Published.subscript.getter();

    swift_release();
    swift_release();
    if (!v19
      || (type metadata accessor for CRLSceneInfo(),
          id v8 = a1,
          id v9 = v19,
          char v10 = static NSObject.== infix(_:_:)(),
          v9,
          v9,
          v8,
          (v10 & 1) == 0))
    {
      id v11 = *(void **)&v2[v5];
      swift_getKeyPath();
      swift_getKeyPath();
      id v12 = v11;
      static Published.subscript.getter();

      swift_release();
      swift_release();
      sub_100E39D64((uint64_t)a1, (unint64_t)v19, (uint64_t (*)(void))type metadata accessor for CRLSceneInfo);
      uint64_t v14 = v13;
      LOBYTE(v12) = v15;
      swift_bridgeObjectRelease();
      if ((v12 & 1) == 0)
      {
        id v16 = &v2[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_currentSceneIndex];
        *(void *)id v16 = v14;
        v16[8] = 0;
        sub_100E6A324(a1);
      }
    }
    id v17 = [v2 traitCollection];
    if ([v17 horizontalSizeClass] == (id)1)
    {
    }
    else
    {
      unsigned __int8 v18 = [self crl_phoneUI];

      if ((v18 & 1) == 0) {
        return;
      }
    }
    sub_100E3AD00((uint64_t)SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:), 0);
  }
}

void sub_100E6A87C(uint64_t a1, void *a2, char a3, void *a4, uint64_t a5)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    char v10 = (char *)Strong;
    id v11 = *(void **)(Strong + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_scenesPopoverState);
    swift_getKeyPath();
    swift_getKeyPath();
    uint64_t v14 = a2;
    id v12 = a2;
    id v13 = v11;
    static Published.subscript.setter();
    sub_100E41378();
    if ((a3 & 1) != 0 && a4)
    {
      if (a5) {
        [a4 presentMiniFormatterForSelectionPath:a5, a2];
      }
    }
    [*(id *)&v10[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interactiveCanvasController] invalidateCollaboratorHUDControllers:v14];
    sub_100E6A980();
  }
}

void sub_100E6A980()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_scenesPopoverState);
  swift_getKeyPath();
  swift_getKeyPath();
  id v2 = v1;
  static Published.subscript.getter();

  swift_release();
  swift_release();
  if (v12)
  {
    uint64_t v4 = *(void *)&v12[OBJC_IVAR____TtC8Freeform12CRLSceneInfo_name];
    unint64_t v3 = *(void *)&v12[OBJC_IVAR____TtC8Freeform12CRLSceneInfo_name + 8];
    swift_bridgeObjectRetain();

    uint64_t v5 = HIBYTE(v3) & 0xF;
    if ((v3 & 0x2000000000000000) == 0) {
      uint64_t v5 = v4 & 0xFFFFFFFFFFFFLL;
    }
    if (v5)
    {
      id v6 = [self mainBundle];
      NSString v7 = String._bridgeToObjectiveC()();
      NSString v8 = String._bridgeToObjectiveC()();
      id v9 = [v6 localizedStringForKey:v7 value:v8 table:0];

      static String._unconditionallyBridgeFromObjectiveC(_:)();
      sub_1005057FC((uint64_t *)&unk_101672B40);
      uint64_t v10 = swift_allocObject();
      *(_OWORD *)(v10 + 16) = xmmword_10117E810;
      *(void *)(v10 + 56) = &type metadata for String;
      *(void *)(v10 + 64) = sub_100528BE4();
      *(void *)(v10 + 32) = v4;
      *(void *)(v10 + 40) = v3;
      static String.localizedStringWithFormat(_:_:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      LODWORD(v7) = UIAccessibilityAnnouncementNotification;
      NSString v11 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      UIAccessibilityPostNotification((UIAccessibilityNotifications)v7, v11);
    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }
}

void sub_100E6ABA4(void *a1, uint64_t a2, unint64_t a3)
{
  uint64_t v7 = type metadata accessor for CRLBoardScenesCRDTData(0);
  __chkstk_darwin(v7, v8);
  uint64_t v10 = (char *)v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = HIBYTE(a3) & 0xF;
  if ((a3 & 0x2000000000000000) == 0) {
    uint64_t v11 = a2 & 0xFFFFFFFFFFFFLL;
  }
  if (v11)
  {
    v23[0] = *(void *)(v3 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_editingCoordinator);
    id v12 = *(char **)(v23[0] + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard);
    uint64_t v13 = *(void *)&v12[OBJC_IVAR____TtC8Freeform8CRLBoard_data] + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
    swift_beginAccess();
    uint64_t v14 = type metadata accessor for CRLBoardCRDTData(0);
    sub_100E77E88(v13 + *(int *)(v14 + 36), (uint64_t)v10, type metadata accessor for CRLBoardScenesCRDTData);
    char v15 = v12;
    swift_retain();
    sub_1005057FC((uint64_t *)&unk_101699FC0);
    CRDictionary.subscript.getter();
    uint64_t v17 = v23[1];
    uint64_t v16 = v23[2];
    sub_100E77EF0((uint64_t)v10, type metadata accessor for CRLBoardScenesCRDTData);

    swift_release();
    if (v16)
    {
      if (v17 == a2 && v16 == a3)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        char v18 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        if ((v18 & 1) == 0)
        {
          id v19 = objc_allocWithZone((Class)type metadata accessor for CRLCommandSetSceneTitle());
          id v20 = a1;
          swift_bridgeObjectRetain();
          id v21 = sub_10102078C(v20, a2, a3);

          id v22 = *(id *)(v23[0] + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_commandController);
          sub_10078BED8(v21, 0, 0, 4, 0);
        }
      }
    }
  }
}

void sub_100E6AE00(void *a1)
{
  uint64_t v3 = sub_1005057FC((uint64_t *)&unk_101683E40);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3, v5);
  uint64_t v7 = &v21[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = *(char **)(*(void *)(v1 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_editingCoordinator)
                + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard);
  uint64_t v9 = *(void *)&v8[OBJC_IVAR____TtC8Freeform8CRLBoard_data] + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
  swift_beginAccess();
  uint64_t v10 = type metadata accessor for CRLBoardCRDTData(0);
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v4 + 16))(v7, v9 + *(int *)(v10 + 36), v3);
  uint64_t v11 = v8;
  id v12 = sub_1005C2550((uint64_t)v7, (uint64_t)v11);
  (*(void (**)(unsigned char *, uint64_t))(v4 + 8))(v7, v3);

  sub_100E39D64((uint64_t)a1, (unint64_t)v12, (uint64_t (*)(void))type metadata accessor for CRLSceneInfo);
  LOBYTE(v3) = v13;
  swift_bridgeObjectRelease();
  if (v3)
  {
    if (qword_10166FAF8 != -1) {
      swift_once();
    }
    swift_beginAccess();
    uint64_t v14 = (void *)static OS_os_log.crlScenes;
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_10117E810;
    id v16 = v14;
    uint64_t v17 = UUID.uuidString.getter();
    uint64_t v19 = v18;
    *(void *)(inited + 56) = &type metadata for String;
    *(void *)(inited + 64) = sub_100528BE4();
    *(void *)(inited + 32) = v17;
    *(void *)(inited + 40) = v19;
    uint64_t v20 = static os_log_type_t.default.getter();
    sub_100BAC898((uint64_t)v16, (uint64_t)&_mh_execute_header, v20, (uint64_t)"Can't recapture saved rect on a scene that doesn't exist. (Scene ID: %{public}@)", 80, 2, inited);
    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();
  }
  else
  {
    sub_100E68A9C(a1);
  }
}

uint64_t sub_100E6B0B8(unint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v53 = type metadata accessor for UUID();
  uint64_t v4 = *(void *)(v53 - 8);
  __chkstk_darwin(v53, v5);
  id v50 = (char *)&v50 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7, v8);
  uint64_t v10 = (char *)&v50 - v9;
  uint64_t v11 = sub_1005057FC((uint64_t *)&unk_101683E40);
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11, v13);
  char v15 = (char *)&v50 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v54 = *(void *)(v2 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_editingCoordinator);
  id v16 = *(char **)(v54 + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard);
  uint64_t v17 = *(void *)&v16[OBJC_IVAR____TtC8Freeform8CRLBoard_data] + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
  swift_beginAccess();
  uint64_t v18 = type metadata accessor for CRLBoardCRDTData(0);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v15, v17 + *(int *)(v18 + 36), v11);
  uint64_t v19 = v16;
  uint64_t v20 = sub_1005C2550((uint64_t)v15, (uint64_t)v19);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);

  swift_bridgeObjectRetain();
  id v21 = sub_100E70EC0(a1, (unint64_t)v20);
  swift_bridgeObjectRelease_n();
  id v22 = *(void **)(v2 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_scenesPopoverState);
  swift_getKeyPath();
  swift_getKeyPath();
  id v23 = v22;
  static Published.subscript.getter();

  swift_release();
  swift_release();
  unint64_t v24 = (unint64_t)v57;
  swift_bridgeObjectRetain();
  id v25 = sub_100E70C14(v24, a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1009CD428((uint64_t)v25);

  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v26 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v26 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v27 = _swiftEmptyArrayStorage;
  if (v26)
  {
    uint64_t v57 = _swiftEmptyArrayStorage;
    uint64_t result = sub_1006BB544(0, v26 & ~(v26 >> 63), 0);
    if (v26 < 0)
    {
      __break(1u);
      return result;
    }
    id v51 = v21;
    uint64_t v52 = v2;
    uint64_t v27 = v57;
    if ((a1 & 0xC000000000000001) != 0)
    {
      uint64_t v29 = 0;
      NSString v55 = (void (*)(char *, uint64_t, uint64_t))(v4 + 32);
      uint64_t v30 = v53;
      do
      {
        uint64_t v31 = specialized _ArrayBuffer._getElementSlowPath(_:)();
        (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v10, v31 + OBJC_IVAR____TtC8Freeform12CRLSceneInfo_sceneID, v30);
        swift_unknownObjectRelease();
        uint64_t v57 = v27;
        unint64_t v33 = *((void *)v27 + 2);
        unint64_t v32 = *((void *)v27 + 3);
        if (v33 >= v32 >> 1)
        {
          sub_1006BB544(v32 > 1, v33 + 1, 1);
          uint64_t v27 = v57;
        }
        ++v29;
        *((void *)v27 + 2) = v33 + 1;
        (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))((unint64_t)v27+ ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))+ *(void *)(v4 + 72) * v33, v10, v30);
      }
      while (v26 != v29);
    }
    else
    {
      NSString v34 = (void *)(a1 + 32);
      NSString v55 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
      id v35 = v50;
      uint64_t v36 = v53;
      do
      {
        v55(v35, *v34 + OBJC_IVAR____TtC8Freeform12CRLSceneInfo_sceneID, v36);
        uint64_t v57 = v27;
        unint64_t v38 = *((void *)v27 + 2);
        unint64_t v37 = *((void *)v27 + 3);
        if (v38 >= v37 >> 1)
        {
          sub_1006BB544(v37 > 1, v38 + 1, 1);
          uint64_t v27 = v57;
        }
        *((void *)v27 + 2) = v38 + 1;
        (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))((unint64_t)v27+ ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))+ *(void *)(v4 + 72) * v38, v35, v36);
        ++v34;
        --v26;
      }
      while (v26);
    }
    id v21 = v51;
    uint64_t v2 = v52;
  }
  double v39 = (objc_class *)type metadata accessor for CRLCommandDeleteScenes();
  double v40 = (char *)objc_allocWithZone(v39);
  *(void *)&v40[OBJC_IVAR____TtC8Freeform22CRLCommandDeleteScenes_sceneIDs] = v27;
  v56.receiver = v40;
  v56.super_class = v39;
  double v41 = [super init];
  id v42 = *(id *)(v54 + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_commandController);
  sub_10078BED8(v41, 0, 0, 4, 0);

  uint64_t v43 = *((void *)v21 + 2);
  if (v43)
  {
    uint64_t v44 = v2 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_currentSceneIndex;
    uint64_t v45 = *(void *)(v2 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_currentSceneIndex);
    char v46 = *(unsigned char *)(v2 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_currentSceneIndex + 8);
    uint64_t v47 = v21 + 5;
    do
    {
      if (v46)
      {
        char v46 = 1;
      }
      else
      {
        if ((*v47 & 1) == 0)
        {
          uint64_t v48 = *((void *)v47 - 1);
          char v46 = v48 >= v45;
          if (v48 < v45)
          {
            uint64_t v49 = v45 - 1;
            goto LABEL_27;
          }
          if (v48 == v45)
          {
            uint64_t v49 = 0;
LABEL_27:
            *(void *)uint64_t v44 = v49;
            *(unsigned char *)(v44 + 8) = v48 >= v45;
            uint64_t v45 = v49;
            goto LABEL_19;
          }
        }
        char v46 = 0;
      }
LABEL_19:
      v47 += 16;
      --v43;
    }
    while (v43);
  }

  return swift_bridgeObjectRelease();
}

void sub_100E6B6B0(unint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1005057FC((uint64_t *)&unk_101683E40);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4, v6);
  uint64_t v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = 0;
  uint64_t v10 = (unint64_t *)(v2 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_currentSceneIndex);
  if (*(unsigned char *)(v2 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_currentSceneIndex + 8)) {
    goto LABEL_8;
  }
  uint64_t v11 = *(char **)(*(void *)(v2 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_editingCoordinator)
                 + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard);
  uint64_t v12 = *(void *)&v11[OBJC_IVAR____TtC8Freeform8CRLBoard_data] + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
  swift_beginAccess();
  uint64_t v13 = type metadata accessor for CRLBoardCRDTData(0);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v8, v12 + *(int *)(v13 + 36), v4);
  uint64_t v14 = v11;
  char v15 = sub_1005C2550((uint64_t)v8, (uint64_t)v14);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);

  if (v10[1])
  {
LABEL_16:
    __break(1u);
    return;
  }
  unint64_t v16 = *v10;
  if (((unint64_t)v15 & 0xC000000000000001) != 0)
  {
    id v17 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_7;
  }
  if ((v16 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_15;
  }
  if (v16 >= *(void *)(((unint64_t)v15 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  id v17 = *(id *)&v15[v16 + 4];
LABEL_7:
  uint64_t v9 = v17;
  swift_bridgeObjectRelease();
LABEL_8:
  id v18 = *(id *)(v2 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_scenesPopoverState);
  uint64_t v19 = swift_bridgeObjectRetain();
  sub_1009CD428(v19);

  id v20 = objc_allocWithZone((Class)type metadata accessor for CRLCommandReorderScenes());
  uint64_t v21 = swift_bridgeObjectRetain();
  id v22 = sub_100F6E2E0(v21);
  id v23 = objc_retain(*(id *)(*(void *)(v2 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_editingCoordinator)
                          + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_commandController));
  sub_10078BED8(v22, 0, 0, 4, 0);

  if (v9)
  {
    id v24 = v9;
    sub_100E39D64((uint64_t)v24, a1, (uint64_t (*)(void))type metadata accessor for CRLSceneInfo);
    unint64_t v26 = v25;
    char v28 = v27;

    if ((v28 & 1) == 0)
    {
      *uint64_t v10 = v26;
      *((unsigned char *)v10 + 8) = 0;
    }
  }
  else
  {
  }
}

uint64_t sub_100E6B96C()
{
  uint64_t v1 = sub_1005057FC(&qword_101672BB0);
  __chkstk_darwin(v1 - 8, v2);
  uint64_t v4 = (char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1005057FC((uint64_t *)&unk_101683E40);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5, v7);
  uint64_t v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *(char **)(*(void *)&v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_editingCoordinator]
                 + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard);
  uint64_t v11 = *(void *)&v10[OBJC_IVAR____TtC8Freeform8CRLBoard_data] + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
  swift_beginAccess();
  uint64_t v12 = type metadata accessor for CRLBoardCRDTData(0);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v9, v11 + *(int *)(v12 + 36), v5);
  uint64_t v13 = v10;
  uint64_t v14 = sub_1005C2550((uint64_t)v9, (uint64_t)v13);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);

  [*(id *)&v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interactiveCanvasController] endEditing];
  uint64_t v15 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v4, 1, 1, v15);
  type metadata accessor for MainActor();
  unint64_t v16 = v0;
  swift_bridgeObjectRetain();
  uint64_t v17 = static MainActor.shared.getter();
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = v17;
  *(void *)(v18 + 24) = &protocol witness table for MainActor;
  *(void *)(v18 + 32) = v16;
  *(unsigned char *)(v18 + 40) = 1;
  *(void *)(v18 + 48) = v14;
  sub_1005912D0((uint64_t)v4, (uint64_t)&unk_10169FA50, v18);
  swift_bridgeObjectRelease();
  return swift_release();
}

void sub_100E6BC04(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1005057FC(&qword_101672BB0);
  __chkstk_darwin(v4 - 8, v5);
  uint64_t v7 = (char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_isExportingToPDF;
  if (v1[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_isExportingToPDF])
  {
    if (qword_10166F9C8 != -1) {
      swift_once();
    }
    swift_beginAccess();
    id v9 = (id)static OS_os_log.crlDefault;
    uint64_t v10 = static os_log_type_t.default.getter();
    sub_100BAC898((uint64_t)v9, (uint64_t)&_mh_execute_header, v10, (uint64_t)"Already exporting to PDF. Skipping.", 35, 2, (uint64_t)_swiftEmptyArrayStorage);

    return;
  }
  uint64_t v11 = *(void *)(*(void *)&v1[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_editingCoordinator]
                  + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_boardActor);
  swift_retain();
  id v40 = [v1 view];
  if (!v40)
  {
    __break(1u);
    goto LABEL_18;
  }
  id v12 = [v1 view];
  if (!v12)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  uint64_t v13 = v12;
  [v12 frame];
  uint64_t v15 = v14;
  uint64_t v17 = v16;
  uint64_t v19 = v18;
  uint64_t v21 = v20;

  id v22 = [v2 traitCollection];
  unsigned __int8 v23 = [v22 crl_isCompactWidth];

  if (v23)
  {
LABEL_11:
    if (qword_10166F9C8 != -1) {
      swift_once();
    }
    swift_beginAccess();
    id v33 = (id)static OS_os_log.crlDefault;
    uint64_t v34 = static os_log_type_t.default.getter();
    sub_100BAC898((uint64_t)v33, (uint64_t)&_mh_execute_header, v34, (uint64_t)"Exporting to PDF.", 17, 2, (uint64_t)_swiftEmptyArrayStorage);

    v2[v8] = 1;
    uint64_t v35 = type metadata accessor for TaskPriority();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 56))(v7, 1, 1, v35);
    type metadata accessor for MainActor();
    swift_retain();
    uint64_t v36 = v2;
    swift_bridgeObjectRetain();
    uint64_t v37 = static MainActor.shared.getter();
    unint64_t v38 = (void *)swift_allocObject();
    v38[2] = v37;
    v38[3] = &protocol witness table for MainActor;
    v38[4] = v36;
    v38[5] = v11;
    v38[6] = v40;
    v38[7] = v15;
    v38[8] = v17;
    v38[9] = v19;
    v38[10] = v21;
    v38[11] = a1;
    sub_1005912D0((uint64_t)v7, (uint64_t)&unk_10169FA48, (uint64_t)v38);
    swift_release();
    swift_release();
    return;
  }
  id v24 = *(void **)&v2[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_scenesNavigatorViewController];
  if (v24)
  {
    id v25 = v24;
    id v26 = [v25 view];
    if (v26)
    {
      char v27 = v26;

      id v28 = sub_100D5ED8C();
      [v28 frame];
      uint64_t v15 = v29;
      uint64_t v17 = v30;
      uint64_t v19 = v31;
      uint64_t v21 = v32;

      id v40 = v27;
      goto LABEL_11;
    }
LABEL_19:
    __break(1u);
    return;
  }
  swift_release();
  id v39 = v40;
}

uint64_t sub_100E6C014(double a1, double a2, double a3, double a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  *(void *)(v11 + 272) = a11;
  *(double *)(v11 + 256) = a3;
  *(double *)(v11 + 264) = a4;
  *(double *)(v11 + 240) = a1;
  *(double *)(v11 + 248) = a2;
  *(void *)(v11 + 224) = a9;
  *(void *)(v11 + 232) = a10;
  *(void *)(v11 + 216) = a8;
  *(void *)(v11 + 280) = type metadata accessor for MainActor();
  *(void *)(v11 + 288) = static MainActor.shared.getter();
  uint64_t v13 = dispatch thunk of Actor.unownedExecutor.getter();
  *(void *)(v11 + 296) = v13;
  *(void *)(v11 + 304) = v12;
  return _swift_task_switch(sub_100E6C0C0, v13, v12);
}

uint64_t sub_100E6C0C0()
{
  id v1 = sub_100E3C594();
  id v2 = [v1 mode];

  LODWORD(v1) = [v2 wantsToEndForNonPopoverPresentations];
  if (v1)
  {
    id v3 = sub_100E3C594();
    [v3 resetToDefaultModeAnimated:1];
  }
  v0[39] = static MainActor.shared.getter();
  uint64_t v5 = dispatch thunk of Actor.unownedExecutor.getter();
  v0[40] = v5;
  v0[41] = v4;
  return _swift_task_switch(sub_100E6C1B0, v5, v4);
}

uint64_t sub_100E6C1B0()
{
  uint64_t v1 = v0[27];
  uint64_t v2 = static MainActor.shared.getter();
  v0[42] = v2;
  uint64_t v3 = swift_task_alloc();
  v0[43] = v3;
  *(void *)(v3 + 16) = v1;
  *(unsigned char *)(v3 + 24) = 1;
  uint64_t v4 = (void *)swift_task_alloc();
  v0[44] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_100E6C2C0;
  return withCheckedContinuation<A>(isolation:function:_:)(v4, v2, &protocol witness table for MainActor, 0xD000000000000048, 0x800000010128FA20, sub_100E78198, v3, (char *)&type metadata for () + 8);
}

uint64_t sub_100E6C2C0()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_release();
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 328);
  uint64_t v3 = *(void *)(v1 + 320);
  return _swift_task_switch(sub_100E6C420, v3, v2);
}

uint64_t sub_100E6C420()
{
  swift_release();
  uint64_t v1 = *(void *)(v0 + 296);
  uint64_t v2 = *(void *)(v0 + 304);
  return _swift_task_switch(sub_100E6C484, v1, v2);
}

uint64_t sub_100E6C484()
{
  uint64_t v1 = (char *)*((void *)v0 + 27);
  id v2 = [v1 topMostViewController];
  *((void *)v0 + 45) = v2;
  [*(id *)&v1[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interactiveCanvasController] visibleUnscaledRect];
  double v4 = v3;
  double v6 = v5;
  double v8 = v7;
  double v10 = v9;
  uint64_t v20 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, double, double, double, double, double, double, double, double))((char *)&dword_101684120 + dword_101684120);
  uint64_t v11 = (void *)swift_task_alloc();
  *((void *)v0 + 46) = v11;
  void *v11 = v0;
  v11[1] = sub_100E6C5B0;
  uint64_t v12 = *((void *)v0 + 34);
  double v13 = v0[32];
  double v14 = v0[33];
  double v15 = v0[30];
  double v16 = v0[31];
  uint64_t v18 = *((void *)v0 + 28);
  uint64_t v17 = *((void *)v0 + 29);
  return v20(v18, (uint64_t)v2, v17, v12, v15, v16, v13, v14, v4, v6, v8, v10);
}

uint64_t sub_100E6C5B0()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 376) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 296);
    uint64_t v4 = *(void *)(v2 + 304);
    double v5 = sub_100E6C73C;
  }
  else
  {

    uint64_t v3 = *(void *)(v2 + 296);
    uint64_t v4 = *(void *)(v2 + 304);
    double v5 = sub_100E6C6CC;
  }
  return _swift_task_switch(v5, v3, v4);
}

uint64_t sub_100E6C6CC()
{
  swift_release();
  *(unsigned char *)(*(void *)(v0 + 216) + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_isExportingToPDF) = 0;
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100E6C73C()
{
  uint64_t v1 = (void *)v0[45];
  swift_release();

  if (qword_10166F9C8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v2 = (void *)static OS_os_log.crlDefault;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117D8C0;
  swift_getErrorValue();
  uint64_t v4 = v0[20];
  uint64_t v5 = v0[21];
  id v6 = v2;
  uint64_t v7 = Error.publicDescription.getter(v4, v5);
  uint64_t v9 = v8;
  *(void *)(inited + 56) = &type metadata for String;
  unint64_t v10 = sub_100528BE4();
  *(void *)(inited + 64) = v10;
  *(void *)(inited + 32) = v7;
  *(void *)(inited + 40) = v9;
  swift_getErrorValue();
  uint64_t v11 = Error.fullDescription.getter(v0[23]);
  *(void *)(inited + 96) = &type metadata for String;
  *(void *)(inited + 104) = v10;
  *(void *)(inited + 72) = v11;
  *(void *)(inited + 80) = v12;
  uint64_t v13 = static os_log_type_t.error.getter();
  sub_100BAC898((uint64_t)v6, (uint64_t)&_mh_execute_header, v13, (uint64_t)"Error retrieving immutable board or exporting to PDF: %{public}@ <%@>", 69, 2, inited);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  swift_errorRelease();
  *(unsigned char *)(v0[27] + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_isExportingToPDF) = 0;
  double v14 = (uint64_t (*)(void))v0[1];
  return v14();
}

void sub_100E6C93C(unint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_1005057FC(&qword_101672BB0);
  __chkstk_darwin(v6 - 8, v7);
  id v66 = (char *)&v53 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v65 = sub_1005057FC((uint64_t *)&unk_101683E40);
  uint64_t v9 = *(void *)(v65 - 8);
  __chkstk_darwin(v65, v10);
  uint64_t v64 = (char *)&v53 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100522D7C(a2, (uint64_t)v74);
  type metadata accessor for CRLBoard(0);
  if ((swift_dynamicCast() & 1) == 0) {
    return;
  }
  uint64_t v12 = v73;
  uint64_t v62 = *(void *)&v3[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_editingCoordinator];
  uint64_t v61 = OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard;
  id v13 = *(id *)(v62 + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard);
  id v14 = v12;
  char v15 = static NSObject.== infix(_:_:)();

  if ((v15 & 1) == 0) {
    return;
  }
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v16 = _CocoaArrayWrapper.endIndex.getter();
    if (v16) {
      goto LABEL_5;
    }
LABEL_27:
    swift_bridgeObjectRelease();
    return;
  }
  uint64_t v16 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v16) {
    goto LABEL_27;
  }
LABEL_5:
  if (v16 >= 1)
  {
    uint64_t v17 = 0;
    uint64_t v18 = 0;
    uint64_t v63 = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_scenesPopoverState;
    uint64_t v57 = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interactiveCanvasController;
    unint64_t v19 = a1 & 0xC000000000000001;
    NSString v55 = (void (**)(char *, uint64_t, uint64_t))(v9 + 16);
    uint64_t v54 = (void (**)(uint64_t, uint64_t))(v9 + 8);
    uint64_t v53 = (char *)&type metadata for () + 8;
    unint64_t v60 = a1;
    uint64_t v59 = v16;
    uint64_t v58 = v3;
    unint64_t v56 = a1 & 0xC000000000000001;
    while (1)
    {
      uint64_t v20 = v19
          ? (char *)specialized _ArrayBuffer._getElementSlowPath(_:)()
          : (char *)*(id *)(a1 + 8 * v17 + 32);
      id v68 = v20;
      uint64_t v21 = (uint64_t *)(*(void *)&v20[OBJC_IVAR____TtC8Freeform15CRLChangeRecord_details]
                      + OBJC_IVAR____TtC8Freeform14CRLPropertyMap_data);
      swift_beginAccess();
      uint64_t v22 = *v21;
      if (*(void *)(v22 + 16))
      {
        uint64_t v23 = sub_1009563E8();
        if (v24) {
          break;
        }
      }
      memset(v74, 0, 24);
      v74[3] = 1;
      sub_100522F00((uint64_t)v74, (uint64_t *)&unk_1016725E0);

LABEL_8:
      if (v16 == ++v17) {
        goto LABEL_27;
      }
    }
    sub_100522E9C(*(void *)(v22 + 56) + 32 * v23, (uint64_t)v74, &qword_101672BF0);
    sub_100522F00((uint64_t)v74, (uint64_t *)&unk_1016725E0);
    id v25 = *(void **)&v3[v63];
    id v26 = *(char **)(v62 + v61);
    uint64_t v27 = *(void *)&v26[OBJC_IVAR____TtC8Freeform8CRLBoard_data] + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
    swift_beginAccess();
    uint64_t v28 = type metadata accessor for CRLBoardCRDTData(0);
    uint64_t v29 = (uint64_t)v64;
    uint64_t v30 = v65;
    (*v55)(v64, v27 + *(int *)(v28 + 36), v65);
    uint64_t v31 = v26;
    id v32 = v25;
    id v33 = sub_1005C2550(v29, (uint64_t)v31);
    (*v54)(v29, v30);

    swift_getKeyPath();
    swift_getKeyPath();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    unint64_t v34 = v74[0];
    swift_getKeyPath();
    swift_getKeyPath();
    v74[0] = (uint64_t)v33;
    id v35 = v32;
    static Published.subscript.setter();
    swift_getKeyPath();
    swift_getKeyPath();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    LOBYTE(v32) = sub_1005BED3C(v34, v74[0]);
    swift_bridgeObjectRelease();
    if ((v32 & 1) == 0) {
      ObservableObjectPublisher.send()();
    }
    uint64_t v67 = v18;

    swift_bridgeObjectRelease();
    uint64_t v36 = v58;
    uint64_t v37 = sub_100E82AC8();

    if (!v37)
    {
      unint64_t v38 = *(void **)&v36[v63];
      swift_getKeyPath();
      swift_getKeyPath();
      v74[0] = 0;
      id v39 = v38;
      static Published.subscript.setter();
      sub_100E41378();
    }
    uint64_t v40 = type metadata accessor for TaskPriority();
    uint64_t v41 = *(void *)(v40 - 8);
    id v42 = v66;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v41 + 56))(v66, 1, 1, v40);
    type metadata accessor for MainActor();
    uint64_t v43 = v36;
    uint64_t v44 = v36;
    uint64_t v45 = (uint64_t)v42;
    char v46 = v44;
    uint64_t v47 = static MainActor.shared.getter();
    uint64_t v48 = (void *)swift_allocObject();
    v48[2] = v47;
    v48[3] = &protocol witness table for MainActor;
    v48[4] = v46;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v41 + 48))(v45, 1, v40) == 1)
    {
      sub_100522F00(v45, &qword_101672BB0);
      if (v48[2])
      {
LABEL_20:
        swift_getObjectType();
        swift_unknownObjectRetain();
        uint64_t v49 = dispatch thunk of Actor.unownedExecutor.getter();
        uint64_t v51 = v50;
        swift_unknownObjectRelease();
LABEL_23:
        a1 = v60;
        uint64_t v52 = swift_allocObject();
        *(void *)(v52 + 16) = &unk_10169FA60;
        *(void *)(v52 + 24) = v48;
        if (v51 | v49)
        {
          uint64_t v69 = 0;
          uint64_t v70 = 0;
          uint64_t v71 = v49;
          uint64_t v72 = v51;
        }
        unint64_t v19 = v56;
        swift_task_create();

        swift_release();
        uint64_t v3 = v43;
        uint64_t v16 = v59;
        uint64_t v18 = v67;
        goto LABEL_8;
      }
    }
    else
    {
      TaskPriority.rawValue.getter();
      (*(void (**)(uint64_t, uint64_t))(v41 + 8))(v45, v40);
      if (v48[2]) {
        goto LABEL_20;
      }
    }
    uint64_t v49 = 0;
    uint64_t v51 = 0;
    goto LABEL_23;
  }
  __break(1u);
}

uint64_t sub_100E6D0F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[6] = a4;
  type metadata accessor for MainActor();
  v4[7] = static MainActor.shared.getter();
  uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
  v4[8] = v6;
  v4[9] = v5;
  return _swift_task_switch(sub_100E6D188, v6, v5);
}

uint64_t sub_100E6D188()
{
  uint64_t v1 = (char *)v0[6];
  uint64_t v2 = (uint64_t *)&v1[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_sceneToContentDict];
  swift_beginAccess();
  uint64_t v3 = *v2;
  v0[10] = v3;
  swift_bridgeObjectRetain_n();
  sub_100C327CC(v3);
  uint64_t v5 = v4;
  uint64_t v6 = *(void **)&v1[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_scenesPopoverState];
  swift_getKeyPath();
  swift_getKeyPath();
  id v7 = v6;
  static Published.subscript.getter();
  swift_release();
  swift_release();

  uint64_t v8 = sub_100CDE98C(v0[5]);
  swift_bridgeObjectRelease();
  uint64_t v9 = sub_1010226D0(v8, v5);
  v0[11] = (unint64_t)v9;
  swift_bridgeObjectRelease();
  uint64_t v10 = v1;
  sub_100E70880((uint64_t)v9, (uint64_t)v10);

  uint64_t v11 = (void *)swift_task_alloc();
  v0[12] = (unint64_t)v11;
  void *v11 = v0;
  v11[1] = sub_100E6D324;
  return sub_100E49EEC((uint64_t)v9);
}

uint64_t sub_100E6D324()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  uint64_t v2 = *(void *)(v1 + 72);
  uint64_t v3 = *(void *)(v1 + 64);
  return _swift_task_switch(sub_100E6D468, v3, v2);
}

uint64_t sub_100E6D468()
{
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

double sub_100E6D5F0(uint64_t a1)
{
  uint64_t v3 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interactiveCanvasController);
  if (![v3 shouldPreventSyncingContentOffset])
  {
    id v5 = [v3 layerHost];
    if (v5)
    {
      id v6 = [v5 canvasLayer];
      swift_unknownObjectRelease();
      if (v6)
      {
        id v7 = [v6 superlayer];
        if (v7)
        {
          uint64_t v8 = v7;
          [v6 position];
          [v8 convertPoint:a1 toLayer:];
          double v4 = v9;
          uint64_t v11 = v10;

          uint64_t v12 = (double *)(v1 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_lastCanvasCenter);
          double *v12 = v4;
          *((void *)v12 + 1) = v11;
          return v4;
        }
      }
    }
    uint64_t v13 = (void *)(v1 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_lastCanvasCenter);
    void *v13 = 0;
    v13[1] = 0;
    return 0.0;
  }
  return *(double *)(v1 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_lastCanvasCenter);
}

uint64_t sub_100E6D8B0()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100E6D8E8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100E6D8F8()
{
  return swift_release();
}

uint64_t sub_100E6D900()
{
  return _swift_deallocObject(v0, 24, 7);
}

void sub_100E6D938()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_presentedSceneAlert);
  *(void *)(v1 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_presentedSceneAlert) = 0;
}

uint64_t sub_100E6D950()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100E6D994@<X0>(unsigned char *a1@<X8>)
{
  return sub_1006FF6A0(a1);
}

void sub_100E6D9A8()
{
}

uint64_t sub_100E6D9D0@<X0>(unsigned char *a1@<X8>)
{
  return sub_1006FF6A0(a1);
}

void sub_100E6D9E4()
{
}

uint64_t sub_100E6DA0C@<X0>(void *a1@<X8>)
{
  return sub_10070AC74(a1);
}

uint64_t sub_100E6DA20()
{
  uint64_t v0 = swift_bridgeObjectRetain();
  return sub_1009CD428(v0);
}

double sub_100E6DA4C@<D0>(double *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  double result = v3;
  *a1 = v3;
  return result;
}

uint64_t sub_100E6DACC(uint64_t a1, void **a2)
{
  uint64_t v2 = *a2;
  swift_getKeyPath();
  swift_getKeyPath();
  id v3 = v2;
  return static Published.subscript.setter();
}

uint64_t sub_100E6DB44@<X0>(void *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_100E6DBC4(void **a1, void **a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *a2;
  swift_getKeyPath();
  swift_getKeyPath();
  id v4 = v2;
  id v5 = v3;
  return static Published.subscript.setter();
}

uint64_t sub_100E6DC38@<X0>(unsigned char *a1@<X8>)
{
  return sub_1006FF6A0(a1);
}

uint64_t sub_100E6DC4C(uint64_t a1, void **a2)
{
  uint64_t v2 = *a2;
  swift_getKeyPath();
  swift_getKeyPath();
  id v3 = v2;
  return static Published.subscript.setter();
}

uint64_t sub_100E6DCBC@<X0>(unsigned char *a1@<X8>)
{
  return sub_1006FF6A0(a1);
}

void sub_100E6DCD0()
{
}

uint64_t sub_100E6DCF8(uint64_t a1, uint64_t a2, int *a3)
{
  id v6 = (uint64_t (*)(void))((char *)a3 + *a3);
  id v4 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v4;
  *id v4 = v3;
  v4[1] = sub_100528D08;
  return v6();
}

uint64_t sub_100E6DDC4(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  uint64_t v7 = (uint64_t (*)(void))((char *)a4 + *a4);
  id v5 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v5;
  void *v5 = v4;
  v5[1] = sub_100528D08;
  return v7();
}

uint64_t sub_100E6DE90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TaskPriority();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    TaskPriority.rawValue.getter();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(void *)(a3 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_3;
  }
  sub_100522F00(a1, &qword_101672BB0);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    dispatch thunk of Actor.unownedExecutor.getter();
    swift_unknownObjectRelease();
  }
LABEL_5:
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a2;
  *(void *)(v8 + 24) = a3;
  return swift_task_create();
}

uint64_t sub_100E6E03C(void *a1, void *a2, void *a3, unsigned char *a4)
{
  uint64_t v8 = (CGSize *)&a4[OBJC_IVAR____TtC8Freeform16CRLiOSPencilTray_lastRectangleObscuringCanvasScrollViewReportedToDelegate];
  CGSize size = CGRectNull.size;
  *uint64_t v8 = (CGSize)CGRectNull.origin;
  v8[1] = size;
  a4[OBJC_IVAR____TtC8Freeform16CRLiOSPencilTray_wasTearDownCalled] = 0;
  a4[OBJC_IVAR____TtC8Freeform16CRLiOSPencilTray_isInstalled] = 0;
  a4[OBJC_IVAR____TtC8Freeform16CRLiOSPencilTray_isObserving] = 0;
  a4[OBJC_IVAR____TtC8Freeform16CRLiOSPencilTray_isHidden] = 1;
  a4[OBJC_IVAR____TtC8Freeform16CRLiOSPencilTray_needsToUpdateFillAndStrokeColors] = 0;
  a4[OBJC_IVAR____TtC8Freeform16CRLiOSPencilTray_hasCommandGroupOpenForContinuousColorUpdates] = 0;
  *(void *)&a4[OBJC_IVAR____TtC8Freeform16CRLiOSPencilTray____lazy_storage___spiPicker] = 0;
  *(void *)&a4[OBJC_IVAR____TtC8Freeform16CRLiOSPencilTray____lazy_storage___pickerManager] = 1;
  *(void *)&a4[OBJC_IVAR____TtC8Freeform16CRLiOSPencilTray_subscriptions] = &_swiftEmptySetSingleton;
  *(void *)&a4[OBJC_IVAR____TtC8Freeform16CRLiOSPencilTray_observedInfos] = &_swiftEmptySetSingleton;
  a4[OBJC_IVAR____TtC8Freeform16CRLiOSPencilTray_updatingZOrderButtons] = 0;
  swift_unknownObjectUnownedInit();
  swift_unknownObjectUnownedInit();
  uint64_t v10 = a4;
  id v11 = [a2 layerHost];
  if (!v11) {
    goto LABEL_13;
  }
  uint64_t v12 = v11;
  if (([v11 respondsToSelector:"asiOSCVC"] & 1) == 0)
  {
    swift_unknownObjectRelease();
LABEL_13:
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"init(delegate:interactiveCanvasController:documentModeController:)", 66, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSPencilTray.swift", 86, 2, 148, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"init(delegate:interactiveCanvasController:documentModeController:)", 66, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSPencilTray.swift", 86, 2, 148);
LABEL_16:
    uint64_t result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
    return result;
  }
  id v13 = [v12 asiOSCVC];
  swift_unknownObjectRelease();
  id v14 = [a2 editorController];
  if (!v14)
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"init(delegate:interactiveCanvasController:documentModeController:)", 66, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSPencilTray.swift", 86, 2, 149, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"init(delegate:interactiveCanvasController:documentModeController:)", 66, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSPencilTray.swift", 86, 2, 149);

    goto LABEL_16;
  }
  char v15 = v14;
  uint64_t v37 = a1;
  id v16 = [a2 freehandDrawingToolkit];
  if (!v16)
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"init(delegate:interactiveCanvasController:documentModeController:)", 66, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSPencilTray.swift", 86, 2, 150, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"init(delegate:interactiveCanvasController:documentModeController:)", 66, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSPencilTray.swift", 86, 2, 150);

    goto LABEL_16;
  }
  uint64_t v17 = v16;
  swift_unknownObjectUnownedInit();
  swift_unknownObjectUnownedInit();
  uint64_t v18 = a3;
  swift_unknownObjectUnownedInit();
  id v19 = [v17 toolkitUIState];
  id v20 = [v19 currentLassoType];

  id v21 = [objc_allocWithZone((Class)CRLLassoSegmentedViewController) initWithLassoType:v20];
  *(void *)&v10[OBJC_IVAR____TtC8Freeform16CRLiOSPencilTray_lassoSegmentedViewController] = v21;
  id v22 = [objc_allocWithZone((Class)CRLiOSPencilTrayLassoEditingView) init];
  *(void *)&v10[OBJC_IVAR____TtC8Freeform16CRLiOSPencilTray_lassoEditingView] = v22;
  *(void *)&v10[OBJC_IVAR____TtC8Freeform16CRLiOSPencilTray_lassoEditingViewClippingWorkaround] = v22;
  id v23 = v22;

  v38.receiver = v10;
  v38.super_class = (Class)type metadata accessor for CRLiOSPencilTray();
  char v24 = (char *)[super init];
  sub_100D487CC();
  id v25 = (char *)sub_100D43BC0();
  if (v25)
  {
    id v26 = v25;
    id v27 = *(id *)&v25[OBJC_IVAR____TtC8Freeform29CRLiOSPencilTrayPickerManager_picker];
  }
  else
  {
    sub_100D43B08();
    id v27 = v28;
  }
  [v27 addObserver:v24];

  uint64_t v29 = (char *)sub_100D43BC0();
  if (v29)
  {
    uint64_t v30 = v29;
    id v31 = *(id *)&v29[OBJC_IVAR____TtC8Freeform29CRLiOSPencilTrayPickerManager_picker];
  }
  else
  {
    sub_100D43B08();
    id v31 = v32;
  }
  [v31 set_delegate:v24];

  id v33 = *(void **)&v24[OBJC_IVAR____TtC8Freeform16CRLiOSPencilTray_lassoSegmentedViewController];
  unint64_t v34 = v24;
  id v35 = v33;
  [v35 setDelegate:v34];

  return (uint64_t)v34;
}

uint64_t sub_100E6E5D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t), uint64_t a5, uint64_t a6, uint64_t (*a7)(uint64_t))
{
  uint64_t v11 = swift_unknownObjectWeakAssign();
  uint64_t v15 = a6;
  uint64_t v16 = a7(v11);
  uint64_t v12 = a1 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_currentlyPresentedTip;
  swift_beginAccess();
  sub_1006063BC((uint64_t)v14, v12, &qword_101674708);
  uint64_t result = swift_endAccess();
  if (a4) {
    return a4(result);
  }
  return result;
}

void sub_100E6E688(void *a1, void *a2, uint64_t a3)
{
  if (!a1)
  {
    sub_100E6EDF0(a2, a3, (uint64_t (*)(uint64_t *))sub_100E77F50, (uint64_t (*)(uint64_t *))sub_100E77F6C, (uint64_t)&unk_101530558, (uint64_t)sub_100E77F88, (uint64_t)&unk_101530570, 0.0);
    return;
  }
  uint64_t v6 = (void **)(a3 + OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_delayedControllers);
  swift_beginAccess();
  uint64_t v7 = *v6;
  swift_unknownObjectRetain();
  [v7 removeObject:a1];
  swift_beginAccess();
  swift_unknownObjectRetain();
  unint64_t v8 = swift_bridgeObjectRetain();
  unint64_t v9 = sub_100E71B1C(v8, (uint64_t)a1);
  char v11 = v10;
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  if ((v11 & 1) == 0)
  {
    swift_beginAccess();
    sub_100E871BC(v9);
    swift_endAccess();
    swift_unknownObjectRelease();
  }
  if (([a1 showing] & 1) != 0 || objc_msgSend(a1, "animating"))
  {
    id v12 = [a1 containerView];
    id v13 = [v12 superview];

    if (v13)
    {
      if (a1 != a2)
      {
        if ([a1 type])
        {
          swift_beginAccess();
          swift_unknownObjectRetain();
          unint64_t v14 = swift_bridgeObjectRetain();
          unint64_t v15 = sub_100E71B1C(v14, (uint64_t)a1);
          char v17 = v16;
          swift_bridgeObjectRelease();
          swift_unknownObjectRelease();
          if (v17)
          {
LABEL_17:
            id v19 = [a1 containerView];
            [v19 removeFromSuperview];

            sub_100E6EDF0(a2, a3, (uint64_t (*)(uint64_t *))sub_100E77F50, (uint64_t (*)(uint64_t *))sub_100E77F6C, (uint64_t)&unk_101530558, (uint64_t)sub_100E77F88, (uint64_t)&unk_101530570, 0.0);
            *(unsigned char *)(a3 + OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_needsLayout) = 1;
            sub_100E89F18();
            goto LABEL_18;
          }
          swift_beginAccess();
          sub_100E871BC(v15);
          swift_endAccess();
        }
        else
        {
          uint64_t v18 = *(void **)(a3 + OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_errorController);
          if (!v18 || v18 != a1) {
            goto LABEL_17;
          }
          *(void *)(a3 + OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_errorController) = 0;
        }
        swift_unknownObjectRelease();
        goto LABEL_17;
      }
    }
  }
  sub_100E6EDF0(a2, a3, (uint64_t (*)(uint64_t *))sub_100E77F50, (uint64_t (*)(uint64_t *))sub_100E77F6C, (uint64_t)&unk_101530558, (uint64_t)sub_100E77F88, (uint64_t)&unk_101530570, 0.0);
LABEL_18:
  swift_unknownObjectRelease();
}

void sub_100E6EA3C(void *a1, void *a2, uint64_t a3)
{
  if (!a1)
  {
    sub_100E6EDF0(a2, a3, (uint64_t (*)(uint64_t *))sub_100E77F50, (uint64_t (*)(uint64_t *))sub_100E77F6C, (uint64_t)&unk_1015304E0, (uint64_t)sub_100E77F88, (uint64_t)&unk_1015304F8, 0.0);
    return;
  }
  uint64_t v6 = (void **)(a3 + OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_delayedControllers);
  swift_beginAccess();
  uint64_t v7 = *v6;
  swift_unknownObjectRetain();
  [v7 removeObject:a1];
  swift_beginAccess();
  swift_unknownObjectRetain();
  unint64_t v8 = swift_bridgeObjectRetain();
  unint64_t v9 = sub_100E71B1C(v8, (uint64_t)a1);
  char v11 = v10;
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  if ((v11 & 1) == 0)
  {
    swift_beginAccess();
    sub_100E871BC(v9);
    swift_endAccess();
    swift_unknownObjectRelease();
  }
  if (([a1 showing] & 1) != 0 || objc_msgSend(a1, "animating"))
  {
    id v12 = [a1 containerView];
    id v13 = [v12 superview];

    if (v13)
    {
      if (a1 != a2)
      {
        if ([a1 type])
        {
          swift_beginAccess();
          swift_unknownObjectRetain();
          unint64_t v14 = swift_bridgeObjectRetain();
          unint64_t v15 = sub_100E71B1C(v14, (uint64_t)a1);
          char v17 = v16;
          swift_bridgeObjectRelease();
          swift_unknownObjectRelease();
          if (v17)
          {
LABEL_17:
            id v19 = [a1 containerView];
            [v19 removeFromSuperview];

            sub_100E6EDF0(a2, a3, (uint64_t (*)(uint64_t *))sub_100E77F50, (uint64_t (*)(uint64_t *))sub_100E77F6C, (uint64_t)&unk_1015304E0, (uint64_t)sub_100E77F88, (uint64_t)&unk_1015304F8, 0.0);
            *(unsigned char *)(a3 + OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_needsLayout) = 1;
            sub_100E89F18();
            goto LABEL_18;
          }
          swift_beginAccess();
          sub_100E871BC(v15);
          swift_endAccess();
        }
        else
        {
          uint64_t v18 = *(void **)(a3 + OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_errorController);
          if (!v18 || v18 != a1) {
            goto LABEL_17;
          }
          *(void *)(a3 + OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_errorController) = 0;
        }
        swift_unknownObjectRelease();
        goto LABEL_17;
      }
    }
  }
  sub_100E6EDF0(a2, a3, (uint64_t (*)(uint64_t *))sub_100E77F50, (uint64_t (*)(uint64_t *))sub_100E77F6C, (uint64_t)&unk_1015304E0, (uint64_t)sub_100E77F88, (uint64_t)&unk_1015304F8, 0.0);
LABEL_18:
  swift_unknownObjectRelease();
}

void sub_100E6EDF0(void *a1, uint64_t a2, uint64_t (*a3)(uint64_t *), uint64_t (*a4)(uint64_t *), uint64_t a5, uint64_t a6, uint64_t a7, double a8)
{
  uint64_t v69 = a6;
  uint64_t v70 = a7;
  uint64_t v68 = a5;
  v80 = a4;
  uint64_t v81 = a3;
  uint64_t v11 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v77 = *(void *)(v11 - 8);
  uint64_t v78 = v11;
  __chkstk_darwin(v11, v12);
  uint64_t v75 = (char *)&v66 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v76 = type metadata accessor for DispatchQoS();
  uint64_t v74 = *(void *)(v76 - 8);
  __chkstk_darwin(v76, v14);
  unint64_t v73 = (char *)&v66 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v79 = type metadata accessor for DispatchTime();
  uint64_t v72 = *(void *)(v79 - 8);
  __chkstk_darwin(v79, v16);
  uint64_t v67 = (char *)&v66 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18, v19);
  uint64_t v71 = (char *)&v66 - v20;
  if (qword_10166F9F8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  id v21 = (void *)static OS_os_log.crlStatusHUD;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117D8C0;
  v82[0] = a1;
  id v23 = v21;
  id v24 = a1;
  sub_1005057FC(&qword_10167AF48);
  sub_1005057FC(&qword_101672B50);
  swift_dynamicCast();
  id v25 = [v24 message];
  if (v25)
  {
    id v26 = v25;
    uint64_t v27 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v29 = v28;
  }
  else
  {
    uint64_t v27 = 0;
    unint64_t v29 = 0;
  }
  *(void *)(inited + 96) = &type metadata for String;
  *(void *)(inited + 104) = sub_100528BE4();
  if (v29) {
    uint64_t v30 = v27;
  }
  else {
    uint64_t v30 = 0;
  }
  unint64_t v31 = 0xE000000000000000;
  if (v29) {
    unint64_t v31 = v29;
  }
  *(void *)(inited + 72) = v30;
  *(void *)(inited + 80) = v31;
  uint64_t v32 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v23, (uint64_t)&_mh_execute_header, v32, (uint64_t)"show hudController=%{public}@ message=\"%@\"", 42, 2, inited);
  swift_setDeallocating();
  swift_arrayDestroy();

  uint64_t v33 = a2;
  unint64_t v34 = (id *)(a2 + OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_delayedControllers);
  swift_beginAccess();
  if ([*v34 containsObject:v24])
  {
    id v35 = (id)static OS_os_log.crlStatusHUD;
    uint64_t v36 = static os_log_type_t.default.getter();
    uint64_t v37 = "Trying to delay the same hud controller, just sticking with the old delay";
    uint64_t v38 = (uint64_t)v35;
    uint64_t v39 = 73;
LABEL_16:
    sub_100BAC898(v38, (uint64_t)&_mh_execute_header, v36, (uint64_t)v37, v39, 2, (uint64_t)_swiftEmptyArrayStorage);

    return;
  }
  uint64_t v40 = (unint64_t *)(a2 + OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_showingInfoControllers);
  uint64_t v41 = swift_beginAccess();
  unint64_t v42 = *v40;
  __chkstk_darwin(v41, v43);
  *(&v66 - 2) = (uint64_t)v24;
  swift_bridgeObjectRetain();
  sub_100E3C074(v81, (uint64_t)(&v66 - 4), v42);
  char v45 = v44;
  swift_bridgeObjectRelease();
  if ((v45 & 1) == 0) {
    goto LABEL_15;
  }
  char v46 = (unint64_t *)(a2 + OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_waitingInfoControllers);
  uint64_t v47 = swift_beginAccess();
  unint64_t v48 = *v46;
  __chkstk_darwin(v47, v49);
  *(&v66 - 2) = (uint64_t)v24;
  swift_bridgeObjectRetain();
  sub_100E3C074(v80, (uint64_t)(&v66 - 4), v48);
  char v51 = v50;
  swift_bridgeObjectRelease();
  if ((v51 & 1) == 0)
  {
LABEL_15:
    id v35 = (id)static OS_os_log.crlStatusHUD;
    uint64_t v36 = static os_log_type_t.default.getter();
    uint64_t v37 = "Ignoring attempt to show hud controller that has aleady been shown or is waiting to show.";
    uint64_t v38 = (uint64_t)v35;
    uint64_t v39 = 89;
    goto LABEL_16;
  }
  if (a8 != 0.0)
  {
    [*v34 addObject:v24];
    uint64_t v52 = v67;
    static DispatchTime.now()();
    uint64_t v53 = v71;
    + infix(_:_:)();
    uint64_t v81 = *(uint64_t (**)(uint64_t *))(v72 + 8);
    ((void (*)(char *, uint64_t))v81)(v52, v79);
    sub_10050BF48(0, (unint64_t *)&qword_1016725C0);
    v80 = (uint64_t (*)(uint64_t *))static OS_dispatch_queue.main.getter();
    uint64_t v54 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v55 = swift_allocObject();
    *(void *)(v55 + 16) = v54;
    *(void *)(v55 + 24) = v24;
    v82[4] = v69;
    v82[5] = v55;
    v82[0] = _NSConcreteStackBlock;
    v82[1] = *(void *)"";
    v82[2] = sub_100679958;
    v82[3] = v70;
    unint64_t v56 = _Block_copy(v82);
    swift_unknownObjectRetain();
    swift_release();
    uint64_t v57 = v73;
    static DispatchQoS.unspecified.getter();
    v82[0] = _swiftEmptyArrayStorage;
    sub_100E769FC((unint64_t *)&qword_1016747E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_1005057FC((uint64_t *)&unk_1016725D0);
    sub_100523288((unint64_t *)&qword_1016747F0, (uint64_t *)&unk_1016725D0);
    uint64_t v58 = v75;
    uint64_t v59 = v78;
    dispatch thunk of SetAlgebra.init<A>(_:)();
    unint64_t v60 = v80;
    OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
    _Block_release(v56);

    (*(void (**)(char *, uint64_t))(v77 + 8))(v58, v59);
    (*(void (**)(char *, uint64_t))(v74 + 8))(v57, v76);
    ((void (*)(char *, uint64_t))v81)(v53, v79);
    return;
  }
  if ([v24 type])
  {
    swift_beginAccess();
    swift_unknownObjectRetain();
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)((*v46 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v46 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
    swift_endAccess();
    goto LABEL_31;
  }
  uint64_t v61 = OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_errorController;
  id v62 = *(id *)(v33 + OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_errorController);
  if (v62)
  {
    if (v62 == v24)
    {
      if ([(id)swift_unknownObjectRetain() showing]) {
        [v24 setShowing:1];
      }
    }
    else
    {
      id v63 = [(id)swift_unknownObjectRetain() containerView];
      id v64 = [v63 superview];

      if (v64)
      {
        id v65 = [v62 containerView];
        [v65 removeFromSuperview];
        swift_unknownObjectRelease();

        *(unsigned char *)(v33 + OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_needsLayout) = 1;
        goto LABEL_30;
      }
    }
    swift_unknownObjectRelease();
  }
LABEL_30:
  *(void *)(v33 + v61) = v24;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
LABEL_31:
  sub_100E89F18();
}

char *sub_100E6F6EC(void *a1, void *a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, double a7)
{
  uint64_t v14 = objc_allocWithZone((Class)type metadata accessor for CRLPersistentFollowHUDController());
  uint64_t v15 = (char *)sub_100E74BF8((uint64_t)a1, a2, a3, (uint64_t)a4, v14);
  swift_getObjectType();
  swift_deallocPartialClassInstance();
  uint64_t v16 = (double *)&v15[OBJC_IVAR____TtC8Freeform32CRLPersistentFollowHUDController_canvasWidth];
  *uint64_t v16 = a7;
  *((unsigned char *)v16 + 8) = 0;
  uint64_t v17 = (uint64_t *)&v15[OBJC_IVAR____TtC8Freeform32CRLPersistentFollowHUDController_stopButtonClickedHandler];
  uint64_t v18 = *(void *)&v15[OBJC_IVAR____TtC8Freeform32CRLPersistentFollowHUDController_stopButtonClickedHandler];
  *uint64_t v17 = a5;
  v17[1] = a6;
  uint64_t v19 = v15;
  sub_1005173A0(a5);
  sub_1005174AC(v18);
  if ((v19[OBJC_IVAR____TtC8Freeform32CRLPersistentFollowHUDController_setupDone] & 1) == 0)
  {
    v19[OBJC_IVAR____TtC8Freeform32CRLPersistentFollowHUDController_setupDone] = 1;
    sub_100E38C68();
    uint64_t v20 = OBJC_IVAR____TtC8Freeform32CRLPersistentFollowHUDController_hudView;
    id v21 = *(id *)&v19[OBJC_IVAR____TtC8Freeform32CRLPersistentFollowHUDController_hudView];
    id v22 = sub_10091FFE8();
    [v21 addSubview:v22];

    [*(id *)&v19[OBJC_IVAR____TtC8Freeform32CRLPersistentFollowHUDController_containerView] addSubview:*(void *)&v19[v20]];
    sub_10091F170();
  }
  uint64_t v23 = sub_10091E328();
  uint64_t v25 = v24;
  sub_1005174AC(a5);

  swift_unknownObjectRelease();
  id v26 = (uint64_t *)&v19[OBJC_IVAR____TtC8Freeform32CRLPersistentFollowHUDController_accessibilityAnnouncement];
  *id v26 = v23;
  v26[1] = v25;
  swift_bridgeObjectRelease();
  return v19;
}

id sub_100E6F8E4(void *a1, void *a2, char *a3, double a4, double a5, double a6, double a7, double a8)
{
  swift_unknownObjectWeakInit();
  *(void *)&a3[OBJC_IVAR____TtC8Freeform28CRLFollowBorderHighlightView_defaultCornerRadius] = 0x4030000000000000;
  swift_unknownObjectWeakAssign();
  *(void *)&a3[OBJC_IVAR____TtC8Freeform28CRLFollowBorderHighlightView_color] = a2;
  *(double *)&a3[OBJC_IVAR____TtC8Freeform28CRLFollowBorderHighlightView_width] = a4;
  uint64_t v16 = (double *)&a3[OBJC_IVAR____TtC8Freeform28CRLFollowBorderHighlightView_canvasRect];
  *uint64_t v16 = a5;
  v16[1] = a6;
  v16[2] = a7;
  v16[3] = a8;
  v24.receiver = a3;
  v24.super_class = (Class)type metadata accessor for CRLFollowBorderHighlightView();
  id v17 = a2;
  [super initWithFrame:0.0, 0.0, 0.0, 0.0];
  uint64_t v19 = self;
  id v20 = v18;
  id v21 = [v19 clearColor];
  [v20 setBackgroundColor:v21];

  id v22 = v20;
  [v22 setUserInteractionEnabled:0];

  return v22;
}

char *sub_100E6FA5C(void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, double a6)
{
  uint64_t v12 = (char *)objc_allocWithZone((Class)type metadata accessor for CRLTransientRefollowHUDController());
  uint64_t v13 = (char *)sub_100E74FD4((uint64_t)a1, a2, a3, v12);
  swift_getObjectType();
  swift_deallocPartialClassInstance();
  uint64_t v14 = (double *)&v13[OBJC_IVAR____TtC8Freeform33CRLTransientRefollowHUDController_canvasWidth];
  double *v14 = a6;
  *((unsigned char *)v14 + 8) = 0;
  uint64_t v15 = (uint64_t *)&v13[OBJC_IVAR____TtC8Freeform33CRLTransientRefollowHUDController_refollowClickedHandler];
  uint64_t v16 = *(void *)&v13[OBJC_IVAR____TtC8Freeform33CRLTransientRefollowHUDController_refollowClickedHandler];
  *uint64_t v15 = a4;
  v15[1] = a5;
  id v17 = v13;
  sub_1005173A0(a4);
  sub_1005174AC(v16);
  if ((v17[OBJC_IVAR____TtC8Freeform33CRLTransientRefollowHUDController_setupDone] & 1) == 0)
  {
    v17[OBJC_IVAR____TtC8Freeform33CRLTransientRefollowHUDController_setupDone] = 1;
    sub_100E38C68();
    uint64_t v18 = OBJC_IVAR____TtC8Freeform33CRLTransientRefollowHUDController_hudView;
    id v19 = *(id *)&v17[OBJC_IVAR____TtC8Freeform33CRLTransientRefollowHUDController_hudView];
    id v20 = sub_1009D4710();
    [v19 addSubview:v20];

    [*(id *)&v17[OBJC_IVAR____TtC8Freeform33CRLTransientRefollowHUDController_containerView] addSubview:*(void *)&v17[v18]];
    sub_1009D391C();
  }
  id v21 = [self mainBundle];
  NSString v22 = String._bridgeToObjectiveC()();
  NSString v23 = String._bridgeToObjectiveC()();
  id v24 = [v21 localizedStringForKey:v22 value:v23 table:0];

  uint64_t v25 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v27 = v26;

  sub_1005174AC(a4);
  swift_unknownObjectRelease();
  unint64_t v28 = (uint64_t *)&v17[OBJC_IVAR____TtC8Freeform33CRLTransientRefollowHUDController_accessibilityAnnouncement];
  *unint64_t v28 = v25;
  v28[1] = v27;
  swift_bridgeObjectRelease();
  return v17;
}

char *sub_100E6FCDC(void *a1, void *a2, uint64_t a3, char a4, double a5)
{
  char v10 = objc_allocWithZone((Class)type metadata accessor for CRLTransientStartEndFollowHUDController());
  id v11 = a2;
  uint64_t v12 = (char *)sub_100E753D4((uint64_t)a1, a2, 0, a3, a4, v10);
  swift_getObjectType();
  swift_deallocPartialClassInstance();
  uint64_t v13 = (double *)&v12[OBJC_IVAR____TtC8Freeform39CRLTransientStartEndFollowHUDController_canvasWidth];
  double *v13 = a5;
  *((unsigned char *)v13 + 8) = 0;
  if (v12[OBJC_IVAR____TtC8Freeform39CRLTransientStartEndFollowHUDController_setupDone] == 1)
  {
    uint64_t v14 = v12;
  }
  else
  {
    v12[OBJC_IVAR____TtC8Freeform39CRLTransientStartEndFollowHUDController_setupDone] = 1;
    uint64_t v15 = v12;
    sub_100E38C68();
    uint64_t v16 = OBJC_IVAR____TtC8Freeform39CRLTransientStartEndFollowHUDController_hudView;
    id v17 = *(id *)&v15[OBJC_IVAR____TtC8Freeform39CRLTransientStartEndFollowHUDController_hudView];
    id v18 = sub_1007383FC();
    [v17 addSubview:v18];

    [*(id *)&v15[OBJC_IVAR____TtC8Freeform39CRLTransientStartEndFollowHUDController_containerView] addSubview:*(void *)&v15[v16]];
    sub_1007375FC();
  }
  id v19 = [objc_allocWithZone((Class)UITapGestureRecognizer) initWithTarget:v12 action:"touchedHUDWithSender:"];
  [v19 setNumberOfTapsRequired:1];
  [*(id *)&v12[OBJC_IVAR____TtC8Freeform39CRLTransientStartEndFollowHUDController_hudView] addGestureRecognizer:v19];

  uint64_t v20 = sub_100736F9C();
  uint64_t v22 = v21;

  swift_unknownObjectRelease();
  NSString v23 = (uint64_t *)&v12[OBJC_IVAR____TtC8Freeform39CRLTransientStartEndFollowHUDController_accessibilityAnnouncement];
  uint64_t *v23 = v20;
  v23[1] = v22;
  swift_bridgeObjectRelease();
  return v12;
}

char *sub_100E6FF04(void *a1, void *a2, uint64_t a3, char a4, double a5)
{
  char v10 = objc_allocWithZone((Class)type metadata accessor for CRLTransientStartEndFollowHUDController());
  id v11 = (char *)sub_100E753D4((uint64_t)a1, a2, 1, a3, a4, v10);
  swift_getObjectType();
  swift_deallocPartialClassInstance();
  uint64_t v12 = (double *)&v11[OBJC_IVAR____TtC8Freeform39CRLTransientStartEndFollowHUDController_canvasWidth];
  double *v12 = a5;
  *((unsigned char *)v12 + 8) = 0;
  if (v11[OBJC_IVAR____TtC8Freeform39CRLTransientStartEndFollowHUDController_setupDone] == 1)
  {
    uint64_t v13 = v11;
  }
  else
  {
    v11[OBJC_IVAR____TtC8Freeform39CRLTransientStartEndFollowHUDController_setupDone] = 1;
    uint64_t v14 = v11;
    sub_100E38C68();
    uint64_t v15 = OBJC_IVAR____TtC8Freeform39CRLTransientStartEndFollowHUDController_hudView;
    id v16 = *(id *)&v14[OBJC_IVAR____TtC8Freeform39CRLTransientStartEndFollowHUDController_hudView];
    id v17 = sub_1007383FC();
    [v16 addSubview:v17];

    [*(id *)&v14[OBJC_IVAR____TtC8Freeform39CRLTransientStartEndFollowHUDController_containerView] addSubview:*(void *)&v14[v15]];
    sub_1007375FC();
  }
  id v18 = [objc_allocWithZone((Class)UITapGestureRecognizer) initWithTarget:v11 action:"touchedHUDWithSender:"];
  [v18 setNumberOfTapsRequired:1];
  [*(id *)&v11[OBJC_IVAR____TtC8Freeform39CRLTransientStartEndFollowHUDController_hudView] addGestureRecognizer:v18];

  uint64_t v19 = sub_100736F9C();
  uint64_t v21 = v20;

  swift_unknownObjectRelease();
  uint64_t v22 = (uint64_t *)&v11[OBJC_IVAR____TtC8Freeform39CRLTransientStartEndFollowHUDController_accessibilityAnnouncement];
  uint64_t *v22 = v19;
  v22[1] = v21;
  swift_bridgeObjectRelease();
  return v11;
}

char *sub_100E70118(void *a1, uint64_t a2, unsigned char *a3)
{
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();
  *(void *)&a3[OBJC_IVAR____TtC8Freeform41CRLCollaboratorBaseStatusHUDController_mi_type] = 2;
  *(void *)&a3[OBJC_IVAR____TtC8Freeform41CRLCollaboratorBaseStatusHUDController_mi_minimumShowDuration] = 0x3FF0000000000000;
  *(void *)&a3[OBJC_IVAR____TtC8Freeform41CRLCollaboratorBaseStatusHUDController_mi_maximumShowDuration] = 0x4018000000000000;
  id v5 = &a3[OBJC_IVAR____TtC8Freeform41CRLCollaboratorBaseStatusHUDController_mi_timeStartedShowing];
  uint64_t v6 = type metadata accessor for Date();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v5, 1, 1, v6);
  *(void *)&a3[OBJC_IVAR____TtC8Freeform41CRLCollaboratorBaseStatusHUDController_mi_hideTimer] = 0;
  a3[OBJC_IVAR____TtC8Freeform41CRLCollaboratorBaseStatusHUDController_mi_shouldAutoHide] = 1;
  a3[OBJC_IVAR____TtC8Freeform41CRLCollaboratorBaseStatusHUDController_mi_showing] = 0;
  a3[OBJC_IVAR____TtC8Freeform41CRLCollaboratorBaseStatusHUDController_mi_animating] = 0;
  a3[OBJC_IVAR____TtC8Freeform41CRLCollaboratorBaseStatusHUDController_mi_hiding] = 0;
  uint64_t v7 = &a3[OBJC_IVAR____TtC8Freeform41CRLCollaboratorBaseStatusHUDController_mi_accessibilityAnnouncement];
  *uint64_t v7 = 0;
  v7[1] = 0;
  a3[OBJC_IVAR____TtC8Freeform41CRLCollaboratorBaseStatusHUDController_mi_swipable] = 1;
  *(void *)&a3[OBJC_IVAR____TtC8Freeform41CRLCollaboratorBaseStatusHUDController_mi_swipeGestureRecognizer] = 0;
  a3[OBJC_IVAR____TtC8Freeform41CRLCollaboratorBaseStatusHUDController_mi_hideOnTouch] = 1;
  a3[OBJC_IVAR____TtC8Freeform41CRLCollaboratorBaseStatusHUDController_mi_setupDone] = 0;
  *(void *)&a3[OBJC_IVAR____TtC8Freeform41CRLCollaboratorBaseStatusHUDController_mi_height] = 0x4045000000000000;
  *(void *)&a3[OBJC_IVAR____TtC8Freeform41CRLCollaboratorBaseStatusHUDController_mi_heightConstraint] = 0;
  *(void *)&a3[OBJC_IVAR____TtC8Freeform41CRLCollaboratorBaseStatusHUDController_mi_constraints] = _swiftEmptyArrayStorage;
  *(void *)&a3[OBJC_IVAR____TtC8Freeform41CRLCollaboratorBaseStatusHUDController_mi____lazy_storage____label] = 0;
  swift_unknownObjectWeakAssign();
  swift_unknownObjectWeakAssign();
  id v8 = objc_allocWithZone((Class)UIView);
  unint64_t v9 = a3;
  id v10 = [v8 initWithFrame:0.0, 0.0, 0.0, 0.0];
  *(void *)&v9[OBJC_IVAR____TtC8Freeform41CRLCollaboratorBaseStatusHUDController_mi_hudView] = v10;
  id v11 = [objc_allocWithZone((Class)UIView) initWithFrame:0.0, 0.0, 0.0, 0.0];
  *(void *)&v9[OBJC_IVAR____TtC8Freeform41CRLCollaboratorBaseStatusHUDController_mi_containerView] = v11;

  v15.receiver = v9;
  v15.super_class = (Class)type metadata accessor for CRLCollaboratorBaseStatusHUDController_mi();
  uint64_t v12 = (char *)[super init];
  sub_100735BB4((uint64_t)v12);
  id v13 = [objc_allocWithZone((Class)UITapGestureRecognizer) initWithTarget:v12 action:"touchedHUDWithSender:"];
  [v13 setNumberOfTapsRequired:1];
  [*(id *)&v12[OBJC_IVAR____TtC8Freeform41CRLCollaboratorBaseStatusHUDController_mi_hudView] addGestureRecognizer:v13];

  swift_unknownObjectRelease();
  return v12;
}

void sub_100E7043C(uint64_t a1)
{
  uint64_t v1 = *(void **)(a1 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_scrollView);
  id v2 = [self clearColor];
  [v1 setBackgroundColor:v2];
}

void sub_100E704B8()
{
}

uint64_t sub_100E704DC(uint64_t result)
{
  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    String.index(_:offsetBy:limitedBy:)();
    return String.subscript.getter();
  }
  return result;
}

void sub_100E70578(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    __CocoaSet.makeIterator()();
    type metadata accessor for CRLSceneInfo();
    sub_100E769FC(&qword_10169FA90, (void (*)(uint64_t))type metadata accessor for CRLSceneInfo);
    Set.Iterator.init(_cocoa:)();
    uint64_t v5 = v22;
    uint64_t v21 = v23;
    uint64_t v6 = v24;
    int64_t v7 = v25;
    unint64_t v8 = v26;
  }
  else
  {
    uint64_t v9 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v21 = a1 + 56;
    uint64_t v10 = ~v9;
    uint64_t v11 = -v9;
    if (v11 < 64) {
      uint64_t v12 = ~(-1 << v11);
    }
    else {
      uint64_t v12 = -1;
    }
    unint64_t v8 = v12 & *(void *)(a1 + 56);
    swift_bridgeObjectRetain();
    uint64_t v6 = v10;
    int64_t v7 = 0;
  }
  int64_t v20 = (unint64_t)(v6 + 64) >> 6;
  if ((v5 & 0x8000000000000000) == 0) {
    goto LABEL_11;
  }
LABEL_8:
  if (__CocoaSet.Iterator.next()())
  {
    type metadata accessor for CRLSceneInfo();
    swift_unknownObjectRetain();
    swift_dynamicCast();
    id v13 = v27;
    swift_unknownObjectRelease();
    int64_t v14 = v7;
    uint64_t v15 = v8;
    while (v13)
    {
      uint64_t v27 = v13;
      sub_100E68488(&v27, a2);

      if (v3) {
        break;
      }
      int64_t v7 = v14;
      unint64_t v8 = v15;
      if (v5 < 0) {
        goto LABEL_8;
      }
LABEL_11:
      if (v8)
      {
        uint64_t v15 = (v8 - 1) & v8;
        unint64_t v16 = __clz(__rbit64(v8)) | (v7 << 6);
        int64_t v14 = v7;
      }
      else
      {
        int64_t v14 = v7 + 1;
        if (__OFADD__(v7, 1))
        {
          __break(1u);
          return;
        }
        if (v14 >= v20) {
          break;
        }
        unint64_t v17 = *(void *)(v21 + 8 * v14);
        if (!v17)
        {
          int64_t v18 = v7 + 2;
          if (v7 + 2 >= v20) {
            break;
          }
          unint64_t v17 = *(void *)(v21 + 8 * v18);
          if (v17) {
            goto LABEL_22;
          }
          int64_t v18 = v7 + 3;
          if (v7 + 3 >= v20) {
            break;
          }
          unint64_t v17 = *(void *)(v21 + 8 * v18);
          if (v17) {
            goto LABEL_22;
          }
          int64_t v18 = v7 + 4;
          if (v7 + 4 >= v20) {
            break;
          }
          unint64_t v17 = *(void *)(v21 + 8 * v18);
          if (v17)
          {
LABEL_22:
            int64_t v14 = v18;
          }
          else
          {
            int64_t v14 = v7 + 5;
            if (v7 + 5 >= v20) {
              break;
            }
            unint64_t v17 = *(void *)(v21 + 8 * v14);
            if (!v17)
            {
              int64_t v19 = v7 + 6;
              while (v20 != v19)
              {
                unint64_t v17 = *(void *)(v21 + 8 * v19++);
                if (v17)
                {
                  int64_t v14 = v19 - 1;
                  goto LABEL_23;
                }
              }
              break;
            }
          }
        }
LABEL_23:
        uint64_t v15 = (v17 - 1) & v17;
        unint64_t v16 = __clz(__rbit64(v17)) + (v14 << 6);
      }
      id v13 = *(id *)(*(void *)(v5 + 48) + 8 * v16);
    }
  }
  sub_10052E1EC();
}

uint64_t sub_100E70880(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    __CocoaSet.makeIterator()();
    type metadata accessor for CRLSceneInfo();
    sub_100E769FC(&qword_10169FA90, (void (*)(uint64_t))type metadata accessor for CRLSceneInfo);
    uint64_t result = Set.Iterator.init(_cocoa:)();
    uint64_t v2 = v28;
    uint64_t v25 = v29;
    uint64_t v4 = v30;
    uint64_t v5 = v31;
    unint64_t v6 = v32;
  }
  else
  {
    uint64_t v7 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v25 = a1 + 56;
    uint64_t v8 = ~v7;
    uint64_t v9 = -v7;
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v6 = v10 & *(void *)(a1 + 56);
    uint64_t result = swift_bridgeObjectRetain();
    uint64_t v4 = v8;
    uint64_t v5 = 0;
  }
  int64_t v24 = (unint64_t)(v4 + 64) >> 6;
  while (v2 < 0)
  {
    if (!__CocoaSet.Iterator.next()()) {
      return sub_10052E1EC();
    }
    type metadata accessor for CRLSceneInfo();
    swift_unknownObjectRetain();
    swift_dynamicCast();
    id v14 = v27;
    swift_unknownObjectRelease();
    uint64_t v13 = v5;
    uint64_t v11 = v6;
    if (!v27) {
      return sub_10052E1EC();
    }
LABEL_33:
    int64_t v18 = (uint64_t *)(a2 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_sceneToContentDict);
    swift_beginAccess();
    swift_bridgeObjectRetain();
    unint64_t v19 = sub_1009577D4((uint64_t)v14);
    char v21 = v20;
    swift_bridgeObjectRelease();
    if (v21)
    {
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v23 = *v18;
      uint64_t v33 = *v18;
      uint64_t *v18 = 0x8000000000000000;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_100985408();
        uint64_t v23 = v33;
      }

      sub_100588C34(v19, v23);
      uint64_t *v18 = v23;
      swift_bridgeObjectRelease();
    }
    swift_endAccess();

    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v5 = v13;
    unint64_t v6 = v11;
  }
  if (v6)
  {
    uint64_t v11 = (v6 - 1) & v6;
    unint64_t v12 = __clz(__rbit64(v6)) | (v5 << 6);
    uint64_t v13 = v5;
LABEL_32:
    id v14 = *(id *)(*(void *)(v2 + 48) + 8 * v12);
    if (!v14) {
      return sub_10052E1EC();
    }
    goto LABEL_33;
  }
  int64_t v15 = v5 + 1;
  if (!__OFADD__(v5, 1))
  {
    if (v15 >= v24) {
      return sub_10052E1EC();
    }
    unint64_t v16 = *(void *)(v25 + 8 * v15);
    uint64_t v13 = v5 + 1;
    if (!v16)
    {
      uint64_t v13 = v5 + 2;
      if (v5 + 2 >= v24) {
        return sub_10052E1EC();
      }
      unint64_t v16 = *(void *)(v25 + 8 * v13);
      if (!v16)
      {
        uint64_t v13 = v5 + 3;
        if (v5 + 3 >= v24) {
          return sub_10052E1EC();
        }
        unint64_t v16 = *(void *)(v25 + 8 * v13);
        if (!v16)
        {
          uint64_t v13 = v5 + 4;
          if (v5 + 4 >= v24) {
            return sub_10052E1EC();
          }
          unint64_t v16 = *(void *)(v25 + 8 * v13);
          if (!v16)
          {
            uint64_t v13 = v5 + 5;
            if (v5 + 5 >= v24) {
              return sub_10052E1EC();
            }
            unint64_t v16 = *(void *)(v25 + 8 * v13);
            if (!v16)
            {
              uint64_t v17 = v5 + 6;
              while (v24 != v17)
              {
                unint64_t v16 = *(void *)(v25 + 8 * v17++);
                if (v16)
                {
                  uint64_t v13 = v17 - 1;
                  goto LABEL_31;
                }
              }
              return sub_10052E1EC();
            }
          }
        }
      }
    }
LABEL_31:
    uint64_t v11 = (v16 - 1) & v16;
    unint64_t v12 = __clz(__rbit64(v16)) + (v13 << 6);
    goto LABEL_32;
  }
  __break(1u);
  return result;
}

double *sub_100E70C14(unint64_t a1, unint64_t a2)
{
  uint64_t v3 = a1;
  uint64_t v27 = _swiftEmptyArrayStorage;
  if (a1 >> 62) {
    goto LABEL_39;
  }
  for (uint64_t i = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10); i; uint64_t i = _CocoaArrayWrapper.endIndex.getter())
  {
    unint64_t v5 = 0;
    unint64_t v6 = v3 & 0xC000000000000001;
    uint64_t v25 = v3 + 32;
    uint64_t v26 = v3 & 0xFFFFFFFFFFFFFF8;
    uint64_t v23 = i;
    unint64_t v24 = a2 & 0xC000000000000001;
    unint64_t v22 = v3 & 0xC000000000000001;
    while (1)
    {
      if (v6)
      {
        id v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        if (v5 >= *(void *)(v26 + 16)) {
          goto LABEL_36;
        }
        id v7 = *(id *)(v25 + 8 * v5);
      }
      uint64_t v8 = v7;
      if (__OFADD__(v5++, 1)) {
        goto LABEL_37;
      }
      if (a2 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
        if (!v10) {
          goto LABEL_16;
        }
      }
      else
      {
        uint64_t v10 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        if (!v10) {
          goto LABEL_16;
        }
      }
      id v11 = v24 ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)() : *(id *)(a2 + 32);
      unint64_t v12 = v11;
      uint64_t v3 = type metadata accessor for CRLSceneInfo();
      char v13 = static NSObject.== infix(_:_:)();

      if ((v13 & 1) == 0) {
        break;
      }

      swift_bridgeObjectRelease();
LABEL_5:
      if (v5 == i) {
        return v27;
      }
    }
    if (v10 == 1)
    {
LABEL_16:
      swift_bridgeObjectRelease();
LABEL_17:
      uint64_t v3 = (uint64_t)&v27;
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
      goto LABEL_5;
    }
    if (v24)
    {
      uint64_t v14 = 1;
      while (1)
      {
        specialized _ArrayBuffer._getElementSlowPath(_:)();
        uint64_t v15 = v14 + 1;
        if (__OFADD__(v14, 1)) {
          break;
        }
        char v16 = static NSObject.== infix(_:_:)();
        swift_unknownObjectRelease();
        if (v16) {
          goto LABEL_29;
        }
        ++v14;
        if (v15 == v10) {
          goto LABEL_28;
        }
      }
      __break(1u);
LABEL_36:
      __break(1u);
LABEL_37:
      __break(1u);
      goto LABEL_38;
    }
    uint64_t v17 = 5;
    while (1)
    {
      uint64_t v18 = v17 - 3;
      if (__OFADD__(v17 - 4, 1)) {
        break;
      }
      id v19 = *(id *)(a2 + 8 * v17);
      char v20 = static NSObject.== infix(_:_:)();

      if (v20)
      {
LABEL_29:

        swift_bridgeObjectRelease();
        unint64_t v6 = v22;
        uint64_t i = v23;
        goto LABEL_5;
      }
      ++v17;
      if (v18 == v10)
      {
LABEL_28:
        swift_bridgeObjectRelease();
        unint64_t v6 = v22;
        uint64_t i = v23;
        goto LABEL_17;
      }
    }
LABEL_38:
    __break(1u);
LABEL_39:
    ;
  }
  return _swiftEmptyArrayStorage;
}

double *sub_100E70EC0(unint64_t a1, unint64_t a2)
{
  unint64_t v2 = a1;
  if (a1 >> 62) {
    goto LABEL_40;
  }
  uint64_t v3 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
LABEL_3:
  uint64_t result = _swiftEmptyArrayStorage;
  if (v3)
  {
    uint64_t result = (double *)sub_1006BB864(0, v3 & ~(v3 >> 63), 0);
    if ((v3 & 0x8000000000000000) == 0)
    {
      uint64_t v5 = 0;
      uint64_t result = _swiftEmptyArrayStorage;
      unint64_t v19 = v2 + 32;
      unint64_t v25 = a2 & 0xC000000000000001;
      uint64_t v23 = (id *)(a2 + 32);
      unint64_t v21 = v2 & 0xC000000000000001;
      uint64_t v20 = v3;
      while (1)
      {
        if (v5 == v3)
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
LABEL_40:
          swift_bridgeObjectRetain();
          uint64_t v3 = _CocoaArrayWrapper.endIndex.getter();
          swift_bridgeObjectRelease();
          goto LABEL_3;
        }
        unint64_t v22 = result;
        if (v21) {
          id v6 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          id v6 = *(id *)(v19 + 8 * v5);
        }
        id v7 = v6;
        if (a2 >> 62)
        {
          swift_bridgeObjectRetain();
          uint64_t v8 = _CocoaArrayWrapper.endIndex.getter();
          swift_bridgeObjectRelease();
          if (!v8)
          {
LABEL_18:
            unint64_t v12 = 0;
            BOOL v13 = 1;
            goto LABEL_29;
          }
        }
        else
        {
          uint64_t v8 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
          if (!v8) {
            goto LABEL_18;
          }
        }
        if (v25)
        {
          id v9 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else
        {
          if (!*(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
            goto LABEL_39;
          }
          id v9 = *v23;
        }
        uint64_t v10 = v9;
        type metadata accessor for CRLSceneInfo();
        char v11 = static NSObject.== infix(_:_:)();

        if ((v11 & 1) == 0)
        {
          unint64_t v2 = 0;
          while (1)
          {
            unint64_t v12 = v2 + 1;
            if (__OFADD__(v2, 1)) {
              break;
            }
            BOOL v13 = v12 == v8;
            if (v12 == v8)
            {
              unint64_t v12 = 0;
              goto LABEL_29;
            }
            if (v25)
            {
              id v14 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
            }
            else
            {
              if ((v12 & 0x8000000000000000) != 0) {
                goto LABEL_36;
              }
              if (v12 >= *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
                goto LABEL_37;
              }
              id v14 = v23[v12];
            }
            uint64_t v15 = v14;
            char v16 = static NSObject.== infix(_:_:)();

            ++v2;
            if (v16) {
              goto LABEL_29;
            }
          }
          __break(1u);
LABEL_36:
          __break(1u);
LABEL_37:
          __break(1u);
          goto LABEL_38;
        }
        unint64_t v12 = 0;
        BOOL v13 = 0;
LABEL_29:

        uint64_t result = v22;
        unint64_t v2 = *((void *)v22 + 2);
        unint64_t v17 = *((void *)v22 + 3);
        if (v2 >= v17 >> 1)
        {
          sub_1006BB864(v17 > 1, v2 + 1, 1);
          uint64_t result = v22;
        }
        ++v5;
        *((void *)result + 2) = v2 + 1;
        uint64_t v18 = &result[2 * v2];
        *((void *)v18 + 4) = v12;
        *((unsigned char *)v18 + 40) = v13;
        uint64_t v3 = v20;
        if (v5 == v20) {
          return result;
        }
      }
    }
    __break(1u);
  }
  return result;
}

double *sub_100E7118C(uint64_t a1, uint64_t a2)
{
  uint64_t v85 = type metadata accessor for CRLBoardIdentifierStorage(0);
  __chkstk_darwin(v85, v4);
  v84 = (char *)v72 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for CRLBoardCRDTData(0);
  __chkstk_darwin(v6 - 8, v7);
  uint64_t v83 = (uint64_t)v72 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for UUID();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9, v11);
  v91 = (char *)v72 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13, v14);
  char v16 = (char *)v72 - v15;
  uint64_t v82 = type metadata accessor for CRLBoardPreviewImageCache.Item(0);
  uint64_t v81 = *(void *)(v82 - 8);
  __chkstk_darwin(v82, v17);
  uint64_t v90 = (uint64_t)v72 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v86 = a1 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0) {
    uint64_t v19 = __CocoaSet.count.getter();
  }
  else {
    uint64_t v19 = *(void *)(a1 + 16);
  }
  uint64_t result = _swiftEmptyArrayStorage;
  if (v19)
  {
    v96 = _swiftEmptyArrayStorage;
    sub_1006BBBE4(0, v19 & ~(v19 >> 63), 0);
    if (v86)
    {
      uint64_t result = (double *)__CocoaSet.startIndex.getter();
      unsigned __int8 v22 = 1;
    }
    else
    {
      uint64_t result = (double *)sub_1006678A4(a1);
      unsigned __int8 v22 = v23 & 1;
    }
    uint64_t v93 = (uint64_t)result;
    uint64_t v94 = v21;
    unsigned __int8 v95 = v22;
    if (v19 < 0)
    {
      __break(1u);
LABEL_32:
      __break(1u);
    }
    else
    {
      id v80 = *(id *)(a2 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interactiveCanvasController);
      uint64_t v79 = *(void *)(a2 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_editingCoordinator);
      uint64_t v78 = OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard;
      v89 = (void (**)(char *, char *, uint64_t))(v10 + 16);
      uint64_t v77 = CKCurrentUserDefaultName;
      uint64_t v76 = (void (**)(char *, uint64_t))(v10 + 8);
      uint64_t v75 = (void (**)(char *, char *, uint64_t))(v10 + 32);
      uint64_t v24 = a1 & 0xFFFFFFFFFFFFFF8;
      if (a1 < 0) {
        uint64_t v24 = a1;
      }
      v72[1] = v24;
      uint64_t v74 = a1;
      unint64_t v73 = v16;
      do
      {
        uint64_t v87 = v19;
        sub_100667628(v93, v94, v95, a1);
        id v35 = v34;
        [v80 visibleUnscaledRect];
        v88 = v35;
        double v38 = sub_1000672D8(1, v36, v37, *(CGFloat *)&v35[OBJC_IVAR____TtC8Freeform12CRLSceneInfo_savedUnscaledRect], *(CGFloat *)&v35[OBJC_IVAR____TtC8Freeform12CRLSceneInfo_savedUnscaledRect + 8], *(CGFloat *)&v35[OBJC_IVAR____TtC8Freeform12CRLSceneInfo_savedUnscaledRect + 16], *(CGFloat *)&v35[OBJC_IVAR____TtC8Freeform12CRLSceneInfo_savedUnscaledRect + 24]);
        uint64_t v40 = v39;
        uint64_t v42 = v41;
        uint64_t v44 = v43;
        char v45 = *(char **)(v79 + v78);
        uint64_t v46 = OBJC_IVAR____TtC8Freeform8CRLBoard_data;
        uint64_t v47 = *(void *)&v45[OBJC_IVAR____TtC8Freeform8CRLBoard_data]
            + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
        swift_beginAccess();
        uint64_t v48 = v47;
        uint64_t v49 = v83;
        sub_100E77E88(v48, v83, type metadata accessor for CRLBoardCRDTData);
        char v50 = v45;
        swift_retain();
        sub_1005057FC(&qword_101674550);
        CRRegister.wrappedValue.getter();
        sub_100E77EF0(v49, type metadata accessor for CRLBoardCRDTData);
        swift_release();
        char v51 = (uint64_t *)(*(void *)&v45[v46] + OBJC_IVAR____TtC8Freeform12CRLBoardData_ownerName);
        uint64_t v53 = *v51;
        unint64_t v52 = v51[1];
        uint64_t v54 = *v89;
        (*v89)(v91, v16, v9);
        BOOL v56 = v53 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v52 == v55;
        if (v56
          || (char v57 = _stringCompareWithSmolCheck(_:_:expecting:)(),
              swift_bridgeObjectRetain(),
              swift_bridgeObjectRelease(),
              (v57 & 1) != 0))
        {
          swift_bridgeObjectRelease();
          uint64_t v53 = 0;
          unint64_t v52 = 0xE000000000000000;
        }
        uint64_t v58 = sub_1005057FC(&qword_10169FA80);
        uint64_t v59 = v90;
        unint64_t v60 = (char *)(v90 + *(int *)(v58 + 48));
        uint64_t v61 = (double *)(v90 + *(int *)(v58 + 64));
        (*v76)(v16, v9);
        uint64_t v62 = v9;
        id v63 = v84;
        (*v75)(v84, v91, v62);
        id v64 = &v63[*(int *)(v85 + 20)];
        *(void *)id v64 = v53;
        *((void *)v64 + 1) = v52;
        uint64_t v65 = (uint64_t)v63;
        uint64_t v9 = v62;
        sub_100E771A8(v65, v59, type metadata accessor for CRLBoardIdentifierStorage);

        uint64_t v66 = v88;
        v54(v60, &v88[OBJC_IVAR____TtC8Freeform12CRLSceneInfo_sceneID], v62);
        *uint64_t v61 = v38;
        *((void *)v61 + 1) = v40;
        *((void *)v61 + 2) = v42;
        *((void *)v61 + 3) = v44;
        swift_storeEnumTagMultiPayload();

        uint64_t v67 = v96;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1006BBBE4(0, *((void *)v67 + 2) + 1, 1);
          uint64_t v67 = v96;
        }
        a1 = v74;
        unint64_t v69 = *((void *)v67 + 2);
        unint64_t v68 = *((void *)v67 + 3);
        if (v69 >= v68 >> 1)
        {
          sub_1006BBBE4(v68 > 1, v69 + 1, 1);
          uint64_t v67 = v96;
        }
        *((void *)v67 + 2) = v69 + 1;
        uint64_t result = (double *)sub_100E771A8(v90, (uint64_t)v67+ ((*(unsigned __int8 *)(v81 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v81 + 80))+ *(void *)(v81 + 72) * v69, type metadata accessor for CRLBoardPreviewImageCache.Item);
        if (v86)
        {
          if ((v95 & 1) == 0) {
            goto LABEL_32;
          }
          uint64_t v70 = __CocoaSet.Index.handleBitPattern.getter();
          uint64_t v33 = v87;
          if (v70) {
            swift_isUniquelyReferenced_nonNull_native();
          }
          sub_1005057FC(&qword_10169FA88);
          uint64_t v71 = (void (*)(char *, void))Set.Index._asCocoa.modify();
          __CocoaSet.formIndex(after:isUnique:)();
          v71(v92, 0);
        }
        else
        {
          uint64_t v25 = v93;
          uint64_t v26 = v94;
          char v27 = v95;
          uint64_t v28 = sub_100666C8C(v93, v94, v95, a1);
          uint64_t v30 = v29;
          char v32 = v31;
          sub_10056A4C4(v25, v26, v27);
          uint64_t v93 = v28;
          uint64_t v94 = v30;
          unsigned __int8 v95 = v32 & 1;
          uint64_t v33 = v87;
        }
        uint64_t v19 = v33 - 1;
        char v16 = v73;
      }
      while (v19);
      sub_10056A4C4(v93, v94, v95);
      return v96;
    }
  }
  return result;
}

void sub_100E71918()
{
  uint64_t v1 = *(char **)(v0 + 16);
  sub_100E69740(*(id *)(v0 + 24), v1);
  unint64_t v2 = *(void **)&v1[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_presentedSceneAlert];
  *(void *)&v1[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_presentedSceneAlert] = 0;
}

uint64_t sub_100E71960@<X0>(void *a1@<X8>)
{
  return sub_10070AC74(a1);
}

uint64_t sub_100E71988()
{
  uint64_t v0 = swift_bridgeObjectRetain();
  return sub_1009CD428(v0);
}

uint64_t sub_100E719BC()
{
  return sub_1007E7164(41);
}

uint64_t sub_100E719C4(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v6 = *(void *)(v1 + 32);
  char v7 = *(unsigned char *)(v1 + 40);
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_100528D08;
  return sub_100D6390C(a1, v4, v5, v6, v7);
}

uint64_t sub_100E71A88()
{
  return sub_100E6A1BC(*(char **)(v0 + 16));
}

uint64_t sub_100E71A90()
{
  return sub_1007E7164(41);
}

uint64_t sub_100E71A98()
{
  return sub_1007E7164(41);
}

void sub_100E71AA0(uint64_t a1)
{
  sub_100E52EE4(a1, *(void **)(v1 + 16), *(unsigned __int8 *)(v1 + 24));
}

uint64_t sub_100E71AB4@<X0>(unsigned char *a1@<X8>)
{
  return sub_1006FF6A0(a1);
}

void sub_100E71ADC()
{
}

uint64_t sub_100E71B04(unint64_t a1, uint64_t a2)
{
  return sub_100E71B1C(a1, a2);
}

uint64_t sub_100E71B1C(unint64_t a1, uint64_t a2)
{
  if (a1 >> 62) {
    goto LABEL_11;
  }
  uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t v5 = 0;
  if (v4)
  {
    while (1)
    {
      if ((a1 & 0xC000000000000001) != 0)
      {
        uint64_t v6 = specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        uint64_t v6 = *(void *)(a1 + 8 * v5 + 32);
        swift_unknownObjectRetain();
      }
      swift_unknownObjectRelease();
      if (v6 == a2) {
        break;
      }
      uint64_t v7 = v5 + 1;
      if (__OFADD__(v5, 1))
      {
        __break(1u);
LABEL_11:
        swift_bridgeObjectRetain();
        uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        uint64_t v5 = 0;
        if (!v4) {
          return v5;
        }
      }
      else
      {
        ++v5;
        if (v7 == v4) {
          return 0;
        }
      }
    }
  }
  return v5;
}

uint64_t sub_100E71C10()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100E71C48()
{
  swift_release();

  swift_unknownObjectRelease();

  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_100E71C98()
{
  return sub_100E777F0((uint64_t (*)(void, void, void, void, void))sub_100E6A87C);
}

uint64_t sub_100E71CB8@<X0>(unsigned char *a1@<X8>)
{
  return sub_1006FF6A0(a1);
}

uint64_t sub_100E71CE4()
{
  swift_unknownObjectRelease();

  swift_release();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 96, 7);
}

uint64_t sub_100E71D3C(uint64_t a1)
{
  uint64_t v4 = *((void *)v1 + 2);
  uint64_t v5 = *((void *)v1 + 3);
  uint64_t v6 = *((void *)v1 + 4);
  uint64_t v7 = *((void *)v1 + 5);
  uint64_t v8 = *((void *)v1 + 6);
  double v9 = v1[7];
  double v10 = v1[8];
  double v11 = v1[9];
  double v12 = v1[10];
  uint64_t v13 = *((void *)v1 + 11);
  uint64_t v14 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v14;
  void *v14 = v2;
  v14[1] = sub_100528D08;
  return sub_100E6C014(v9, v10, v11, v12, a1, v4, v5, v6, v7, v8, v13);
}

uint64_t sub_100E71E40(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v6 = *(void *)(v1 + 32);
  char v7 = *(unsigned char *)(v1 + 40);
  uint64_t v8 = *(void *)(v1 + 48);
  double v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  void *v9 = v2;
  v9[1] = sub_100528D08;
  return sub_100E57B88(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_100E71F0C@<X0>(void *a1@<X8>)
{
  return sub_10070AC74(a1);
}

BOOL sub_100E71F38(void *a1)
{
  return sub_100E8CFC4(a1, *(void *)(v1 + 16));
}

BOOL sub_100E71F58(void *a1)
{
  return sub_100E89F08(a1, *(void *)(v1 + 16));
}

void sub_100E71F7C()
{
  sub_100E87E14(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

void sub_100E71F84(void *a1)
{
  uint64_t v3 = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController__sharedPencilTray;
  uint64_t v4 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController__sharedPencilTray);
  if (!v4)
  {
    id v10 = sub_100E48CC8();
    uint64_t v11 = *(void **)(v1 + v3);
    *(void *)(v1 + v3) = v10;
    id v5 = v10;

    if (a1) {
      goto LABEL_3;
    }
LABEL_6:
    id v12 = v4;
    uint64_t v13 = (char *)sub_100D43BC0();
    if (v13)
    {
      uint64_t v14 = v13;
      id v17 = *(id *)&v13[OBJC_IVAR____TtC8Freeform29CRLiOSPencilTrayPickerManager_picker];
    }
    else
    {
      sub_100D43B08();
      id v17 = v16;
    }
    [v17 _disableTapInteractionWhenNotVisible];
    id v7 = v5;
    goto LABEL_12;
  }
  id v5 = *(id *)(v1 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController__sharedPencilTray);
  if (!a1) {
    goto LABEL_6;
  }
LABEL_3:
  id v6 = v4;
  id v7 = a1;
  sub_100D441F8();
  uint64_t v8 = (char *)sub_100D43BC0();
  if (v8)
  {
    double v9 = v8;
    id v17 = *(id *)&v8[OBJC_IVAR____TtC8Freeform29CRLiOSPencilTrayPickerManager_picker];
  }
  else
  {
    sub_100D43B08();
    id v17 = v15;
  }
  [v17 _enableTapInteractionForWindow:v7];

LABEL_12:
}

void sub_100E720B4()
{
  id v0 = sub_100E3CE10();
  [v0 invalidateSearchResults];

  id v1 = sub_100E3C594();
  id v2 = [v1 mode];

  sub_10050BF48(0, &qword_10169FD80);
  LODWORD(v1) = [v2 isKindOfClass:swift_getObjCClassFromMetadata()];

  if (v1)
  {
    id v3 = sub_100E3C594();
    [v3 resetToDefaultModeAnimated:1];
  }
}

void sub_100E72198()
{
  *(void *)&v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController____lazy_storage___editorController] = 0;
  swift_unknownObjectWeakInit();
  *(void *)&v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController____lazy_storage___documentModeController] = 0;
  *(void *)&v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController____lazy_storage___boardEditor] = 0;
  uint64_t v1 = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_selectionModelTranslator;
  *(void *)&v0[v1] = [objc_allocWithZone((Class)CRLSelectionModelTranslator) init];
  *(void *)&v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  *(void *)&v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController____lazy_storage___insertingHelper] = 0;
  *(void *)&v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_insertingCancellableToken] = 0;
  *(void *)&v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_traitChangeRegistration] = 0;
  v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_isSuppressingBottomToolTrayForPresentationController] = 0;
  v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_isExportingToPDF] = 0;
  v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_isTornDown] = 0;
  *(void *)&v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_undoAlertController] = 0;
  *(void *)&v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_progressTimer] = 0;
  *(void *)&v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_progressViewController] = 0;
  v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_boardHasSyncedAtLeastOnce] = 0;
  uint64_t v2 = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_cloudQuotaMessagingObserver;
  type metadata accessor for CRLCloudQuotaMessagingObserver();
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 24) = 0;
  swift_unknownObjectWeakInit();
  uint64_t v4 = (void *)ICQCurrentInAppMessageChangedNotification;
  *(void *)(v3 + 32) = 0;
  *(void *)(v3 + 40) = v4;
  *(_OWORD *)(v3 + 48) = 0u;
  *(_OWORD *)(v3 + 64) = 0u;
  *(void *)&v0[v2] = v3;
  *(void *)&v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interstitialUIController] = 0;
  id v5 = &v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_shareSyncAwaitTask];
  v5[1] = 0;
  v5[2] = 0;
  void *v5 = 0;
  *(void *)&v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_canvasBackgroundLayer] = 0;
  *(void *)&v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_canvasBackgroundView] = 0;
  *(void *)&v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_pencilKitCanvasViewController] = 0;
  *(void *)(v3 + 80) = 0x4122750000000000;
  *(void *)&v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_pencilKitCanvasView] = 0;
  id v6 = &v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_CRLUpdateInfoKey];
  strcpy(&v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_CRLUpdateInfoKey], "iOSUpdateInfo");
  *((_WORD *)v6 + 7) = -4864;
  id v7 = &v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_CRLUnsupportedDevicesKey];
  *id v7 = 0xD000000000000012;
  v7[1] = 0x800000010126E3B0;
  *(void *)&v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_subscriptions] = &_swiftEmptySetSingleton;
  uint64_t v8 = &v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_lastContentOffset];
  *uint64_t v8 = 0;
  v8[1] = 0;
  double v9 = &v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_lastCanvasCenter];
  void *v9 = 0;
  v9[1] = 0;
  id v10 = &v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_toolbarButtonState];
  *(_OWORD *)id v10 = 0u;
  *((_OWORD *)v10 + 1) = 0u;
  *(_DWORD *)(v10 + 31) = 0;
  *(void *)&v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController____lazy_storage___undoToolbarItem] = 0;
  *(void *)&v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController____lazy_storage___insertTextBoxToolbarItem] = 0;
  *(void *)&v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController____lazy_storage___insertAVMediaToolbarItem] = 0;
  *(void *)&v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController____lazy_storage___insertStickyNoteToolbarItem] = 0;
  *(void *)&v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController____lazy_storage___insertShapeToolbarItem] = 0;
  *(void *)&v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController____lazy_storage___togglePencilModeToolbarItem] = 0;
  *(void *)&v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController____lazy_storage___insertStencilToolbarItem] = 0;
  *(void *)&v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController____lazy_storage___shareToolbarItem] = 0;
  *(void *)&v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController____lazy_storage___boardViewControlsItem] = 0;
  *(void *)&v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController____lazy_storage___newBoardToolbarItem] = 0;
  *(void *)&v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController____lazy_storage___doneToolbarItem] = 0;
  *(void *)&v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController____lazy_storage___doneWithModeToolbarItem] = 0;
  *(void *)&v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController____lazy_storage___doneWithScenesNavigatorToolbarItem] = 0;
  *(void *)&v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController____lazy_storage___viewOnlyToolbarItem] = 0;
  *(void *)&v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController____lazy_storage___collaborationButtonItem] = 1;
  swift_unknownObjectWeakInit();
  *(void *)&v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_photoPickerLoadingProgress] = 0;
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();
  *(void *)&v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_gpHelper] = 0;
  *(void *)&v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_insertURLAlert] = 0;
  uint64_t v11 = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_scrollView;
  id v12 = objc_allocWithZone((Class)CRLScrollView);
  id v13 = v4;
  *(void *)&v0[v11] = [v12 init];
  *(void *)&v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_canvasScrollViewController] = 0;
  *(void *)&v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_bottomToolTray] = 0;
  uint64_t v14 = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_snapshotViewWrapper;
  *(void *)&v0[v14] = [objc_allocWithZone((Class)UIView) init];
  *(void *)&v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController____lazy_storage___snapshotHostingView] = 0;
  *(void *)&v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_canvasZoomControlViewController] = 0;
  *(void *)&v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_canvasZoomAndScenesContainerView] = 0;
  *(void *)&v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_boardControlsViewController] = 0;
  *(void *)&v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_connectorModeMessageViewController] = 0;
  uint64_t v15 = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_connectorModeMessageViewState;
  *(void *)&v0[v15] = [objc_allocWithZone((Class)type metadata accessor for CRLConnectorModeMessageViewState()) init];
  v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_skipNextToolbarUpdate] = 0;
  *(void *)&v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_scenesNavigatorViewController] = 0;
  *(void *)&v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_compactScenesNavigatorViewController] = 0;
  uint64_t v16 = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_scenesNavigatorState;
  *(void *)&v0[v16] = [objc_allocWithZone((Class)type metadata accessor for CRLScenesNavigatorState()) init];
  *(void *)&v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_scenesNavigationCrossfadeSnapshotLayers] = _swiftEmptyArrayStorage;
  uint64_t v17 = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_scenesPopoverState;
  *(void *)&v0[v17] = [objc_allocWithZone((Class)type metadata accessor for CRLScenesPopoverState()) init];
  *(void *)&v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_scenesPresenter] = 0;
  *(void *)&v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_compactScenesPresenter] = 0;
  uint64_t v18 = &v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_currentSceneIndex];
  *(void *)uint64_t v18 = 0;
  v18[8] = 1;
  uint64_t v19 = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_sceneToContentDict;
  *(void *)&v0[v19] = sub_100A3C944((uint64_t)_swiftEmptyArrayStorage);
  *(void *)&v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_presentedSceneAlert] = 0;
  swift_unknownObjectWeakInit();
  *(void *)&v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_findSession] = 0;
  *(void *)&v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController____lazy_storage___findReplaceController] = 0;
  *(void *)&v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_freehandDrawingHighlightManager] = 0;
  *(void *)&v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_keyboardTopEdgeLayoutGuideConstraint] = 0;
  *(void *)&v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_topUnobscuredRectLayoutGuideConstraint] = 0;
  *(void *)&v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_bottomUnobscuredRectLayoutGuideConstraint] = 0;
  *(void *)&v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_leadingUnobscuredRectLayoutGuideConstraint] = 0;
  *(void *)&v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_trailingUnobscuredRectLayoutGuideConstraint] = 0;
  v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_isChangingDocumentModeToHandwriting] = 0;
  uint64_t v20 = &v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_shapeLibrarySearchTerm];
  *uint64_t v20 = 0;
  v20[1] = 0;
  *(void *)&v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_tipObservation] = 0;
  swift_unknownObjectWeakInit();
  uint64_t v21 = &v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_currentlyPresentedTip];
  *(_OWORD *)uint64_t v21 = 0u;
  *((_OWORD *)v21 + 1) = 0u;
  *((void *)v21 + 4) = 0;
  *(void *)&v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_tipPresentationView] = 0;
  *(void *)&v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_mediaReplacer] = 0;
  *(void *)&v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController____lazy_storage___unobscuredRectLayout] = 0;
  *(void *)&v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController____lazy_storage___keyboardFrameLayoutGuide] = 0;
  v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_isClosing] = 0;
  v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_isClosed] = 0;
  *(void *)&v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_followHUD] = 0;
  *(void *)&v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_followBorderHighlightView] = 0;
  *(void *)&v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_appAnalyticsBoardTracker] = 0;
  *(void *)&v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_stateRestorationHelper] = 0;
  *(void *)&v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_viewScaleObservation] = 0;
  unsigned __int8 v22 = &v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_scrollObserver];
  _OWORD *v22 = 0u;
  v22[1] = 0u;
  *(void *)&v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController__sharedPencilTray] = 0;
  v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_didRestoreCanvasViewState] = 0;
  v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController__isCanvasDotGridEnabled] = 2;
  v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController__isConnectorModeEnabled] = 2;
  v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_isAnimatingToScene] = 0;
  char v23 = &v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_lastPrintContentDate];
  uint64_t v24 = type metadata accessor for Date();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v23, 1, 1, v24);

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

id sub_100E728BC(char a1, void *a2, void *a3, uint64_t a4, uint64_t a5, char *a6)
{
  id v10 = &a6[OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController_delegate];
  *(void *)&a6[OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();
  *(void *)&a6[OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController_scenesNavigatorStatePassthroughObserver] = 0;
  *(void *)&a6[OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController_notificationObservers] = _swiftEmptyDictionarySingleton;
  *(void *)&a6[OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController____lazy_storage___topCaptureSnapshotView] = 0;
  *(void *)&a6[OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController____lazy_storage___bottomCaptureSnapshotView] = 0;
  uint64_t v11 = OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController_floatingView;
  type metadata accessor for CRLShadowView();
  id v12 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  id v13 = a6;
  *(void *)&a6[v11] = [v12 init];
  uint64_t v14 = OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController_bezelView;
  *(void *)&v13[v14] = [objc_allocWithZone((Class)UIView) init];
  uint64_t v15 = OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController_drawerView;
  *(void *)&v13[v15] = [objc_allocWithZone((Class)UIView) init];
  uint64_t v16 = OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController_backdropView;
  *(void *)&v13[v16] = [objc_allocWithZone((Class)UIView) init];
  uint64_t v17 = OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController_leadingSeparatorView;
  *(void *)&v13[v17] = [objc_allocWithZone((Class)UIView) init];
  uint64_t v18 = OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController_trailingSeparatorView;
  *(void *)&v13[v18] = [objc_allocWithZone((Class)UIView) init];
  *(void *)&v13[OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController____lazy_storage___grabberButton] = 0;
  *(void *)&v13[OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController____lazy_storage___previousSceneButton] = 0;
  *(void *)&v13[OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController____lazy_storage___nextSceneButton] = 0;
  *(void *)&v13[OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController____lazy_storage___popoverButton] = 0;
  *(void *)&v13[OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController____lazy_storage___navigationButtons] = 0;
  *(void *)&v13[OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController____lazy_storage___drawerWidthConstraint] = 0;
  *(void *)&v13[OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController____lazy_storage___baseConstraints] = 0;
  *(void *)&v13[OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController____lazy_storage___grabberConstraints] = 0;
  *(void *)&v13[OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController____lazy_storage___noGrabberConstraints] = 0;
  *(void *)&v13[OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController____lazy_storage___floatsCenterAlignedConstraints] = 0;
  *(void *)&v13[OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController____lazy_storage___floatsTrailingAlignedConstraints] = 0;
  *(void *)&v13[OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController____lazy_storage___attachedToZoomControlConstraints] = 0;
  v13[OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController_useCompactFloatingStyle] = a1;
  *(void *)&v13[OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController_scenesNavigatorState] = a2;
  *(void *)&v13[OBJC_IVAR____TtC8Freeform32CRLScenesNavigatorViewController_scenesPopoverState] = a3;
  *((void *)v10 + 1) = &off_10152F9A8;
  swift_unknownObjectWeakAssign();
  swift_unknownObjectWeakAssign();
  id v19 = a2;
  id v20 = a3;

  v22.receiver = v13;
  v22.super_class = (Class)type metadata accessor for CRLScenesNavigatorViewController();
  return [super initWithNibName:0 bundle:0];
}

id sub_100E72B60(uint64_t a1, void *a2, void *a3, unsigned char *a4)
{
  id v7 = &a4[OBJC_IVAR____TtC8Freeform25CRLScenesViewController_i_scenesDelegate];
  *(void *)&a4[OBJC_IVAR____TtC8Freeform25CRLScenesViewController_i_scenesDelegate + 8] = 0;
  swift_unknownObjectWeakInit();
  a4[OBJC_IVAR____TtC8Freeform25CRLScenesViewController_i_isTornDown] = 0;
  uint64_t v16 = &off_10152F9A8;
  swift_unknownObjectWeakInit();
  type metadata accessor for CRLScenesPopoverState();
  sub_100E769FC(&qword_10169FB80, (void (*)(uint64_t))type metadata accessor for CRLScenesPopoverState);
  uint64_t v8 = a4;
  id v9 = a2;
  uint64_t v17 = ObservedObject.init(wrappedValue:)();
  uint64_t v18 = v10;
  id v11 = objc_allocWithZone((Class)sub_1005057FC((uint64_t *)&unk_10169FBA0));
  *(void *)&v8[OBJC_IVAR____TtC8Freeform25CRLScenesViewController_i_hostingController] = UIHostingController.init(rootView:)();
  *(void *)&v8[OBJC_IVAR____TtC8Freeform25CRLScenesViewController_i_scenesPopoverState] = v9;
  *(void *)&v8[OBJC_IVAR____TtC8Freeform25CRLScenesViewController_i_icc] = a3;
  *((void *)v7 + 1) = &off_10152F9A8;
  swift_unknownObjectWeakAssign();
  id v12 = v9;
  id v13 = a3;

  v15.receiver = v8;
  v15.super_class = (Class)type metadata accessor for CRLScenesViewController_i();
  return [super initWithNibName:0 bundle:0];
}

id sub_100E72CD8(uint64_t a1, void *a2, void *a3, unsigned char *a4)
{
  char v32 = a3;
  uint64_t v6 = type metadata accessor for EditMode();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6, v8);
  uint64_t v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11, v12);
  uint64_t v14 = (char *)&v32 - v13;
  uint64_t v15 = type metadata accessor for CRLCompactScenesListUI_i(0);
  uint64_t v16 = v15 - 8;
  __n128 v18 = __chkstk_darwin(v15, v17);
  id v20 = (void **)((char *)&v32 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  a4[OBJC_IVAR____TtC8Freeform32CRLCompactScenesViewController_i_isTornDown] = 0;
  (*(void (**)(char *, void, uint64_t, __n128))(v7 + 104))(v14, enum case for EditMode.inactive(_:), v6, v18);
  v20[1] = &off_10152F9A8;
  swift_unknownObjectWeakInit();
  v20[2] = 0x4074F00000000000;
  type metadata accessor for CRLScenesPopoverState();
  sub_100E769FC(&qword_10169FB80, (void (*)(uint64_t))type metadata accessor for CRLScenesPopoverState);
  uint64_t v21 = a4;
  id v22 = a2;
  v20[3] = ObservedObject.init(wrappedValue:)();
  v20[4] = v23;
  unint64_t v34 = &_swiftEmptySetSingleton;
  sub_1005057FC(&qword_10169FB88);
  State.init(wrappedValue:)();
  uint64_t v24 = *((void *)&v35 + 1);
  v20[5] = v35;
  v20[6] = v24;
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v10, v14, v6);
  State.init(wrappedValue:)();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v14, v6);
  uint64_t v25 = *(int *)(v16 + 44);
  unint64_t v34 = 0;
  sub_1005057FC(&qword_10169FB90);
  State.init(wrappedValue:)();
  *(_OWORD *)((char *)v20 + v25) = v35;
  id v26 = objc_allocWithZone((Class)sub_1005057FC(&qword_10169FB98));
  *(void *)&v21[OBJC_IVAR____TtC8Freeform32CRLCompactScenesViewController_i_hostingController] = UIHostingController.init(rootView:)();
  *(void *)&v21[OBJC_IVAR____TtC8Freeform32CRLCompactScenesViewController_i_scenesPopoverState] = v22;
  char v27 = v32;
  *(void *)&v21[OBJC_IVAR____TtC8Freeform32CRLCompactScenesViewController_i_icc] = v32;
  id v28 = v22;
  id v29 = v27;

  uint64_t v30 = (objc_class *)type metadata accessor for CRLCompactScenesViewController_i();
  v33.receiver = v21;
  v33.super_class = v30;
  return [super initWithNibName:0 bundle:0];
}

void sub_100E72FE8(void **a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t a5)
{
  uint64_t v65 = a5;
  uint64_t v67 = a4;
  uint64_t v8 = type metadata accessor for UUID();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8, v10);
  uint64_t v12 = (char *)&v65 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1005057FC((uint64_t *)&unk_101674520);
  __chkstk_darwin(v13 - 8, v14);
  uint64_t v16 = (char *)&v65 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = *(void *)(a2 + 56);
  uint64_t v72 = a2 + 56;
  __n128 v18 = (char *)*a1;
  uint64_t v19 = v12;
  uint64_t v20 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v21 = -1;
  if (v20 < 64) {
    uint64_t v21 = ~(-1 << v20);
  }
  unint64_t v22 = v21 & v17;
  uint64_t v76 = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_editingCoordinator;
  uint64_t v71 = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interactiveCanvasController;
  id v66 = v18;
  unint64_t v68 = (CGFloat *)&v18[OBJC_IVAR____TtC8Freeform12CRLSceneInfo_savedUnscaledRect];
  uint64_t v79 = v9;
  id v80 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
  uint64_t v77 = v9 + 48;
  uint64_t v78 = v9 + 16;
  uint64_t v75 = (void (**)(char *, char *, uint64_t))(v9 + 32);
  int64_t v73 = (unint64_t)(v20 + 63) >> 6;
  uint64_t v74 = (void (**)(char *, uint64_t))(v9 + 8);
  uint64_t v81 = a2;
  swift_bridgeObjectRetain();
  int64_t v23 = 0;
  unint64_t v69 = v12;
  uint64_t v70 = a3;
  while (v22)
  {
    unint64_t v24 = __clz(__rbit64(v22));
    v22 &= v22 - 1;
    unint64_t v25 = v24 | (v23 << 6);
LABEL_21:
    uint64_t v29 = v79;
    (*(void (**)(char *, unint64_t, uint64_t))(v79 + 16))(v16, *(void *)(v81 + 48) + *(void *)(v79 + 72) * v25, v8);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v29 + 56))(v16, 0, 1, v8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v16, 1, v8) == 1) {
      goto LABEL_28;
    }
    (*v75)(v19, v16, v8);
    id v30 = *(id *)(*(void *)(a3 + v76) + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard);
    char v31 = v19;
    Class isa = UUID._bridgeToObjectiveC()().super.isa;
    id v33 = [v30 getBoardItemForUUID:isa v65];

    if (v33)
    {
      unint64_t v34 = *(void **)(a3 + v71);
      id v35 = [v34 layoutForInfo:v33];
      if (v35)
      {
        double v36 = v35;
        [v35 frameForCullingInRoot];
        double v38 = v37;
        double v40 = v39;
        double v42 = v41;
        double v44 = v43;
        [v34 visibleUnscaledRect];
        double v47 = sub_1000672D8(1, v45, v46, *v68, v68[1], v68[2], v68[3]);
        if (sub_10006525C(v38, v40, v42, v44, v47, v48, v49, v50))
        {
          id v52 = v66;
          id v64 = v66;
          char v51 = v67;
          sub_100CBC3E4(v82, v64);

          (*v74)(v69, v8);
          swift_release();
          a3 = v70;
          goto LABEL_29;
        }
        uint64_t v19 = v69;
        (*v74)(v69, v8);

        a3 = v70;
      }
      else
      {
        uint64_t v19 = v69;
        (*v74)(v69, v8);

        a3 = v70;
      }
    }
    else
    {
      (*v74)(v31, v8);
      uint64_t v19 = v31;
    }
  }
  int64_t v26 = v23 + 1;
  if (__OFADD__(v23, 1))
  {
    __break(1u);
LABEL_38:
    __break(1u);
    return;
  }
  if (v26 >= v73) {
    goto LABEL_27;
  }
  unint64_t v27 = *(void *)(v72 + 8 * v26);
  ++v23;
  if (v27) {
    goto LABEL_20;
  }
  int64_t v23 = v26 + 1;
  if (v26 + 1 >= v73) {
    goto LABEL_27;
  }
  unint64_t v27 = *(void *)(v72 + 8 * v23);
  if (v27) {
    goto LABEL_20;
  }
  int64_t v23 = v26 + 2;
  if (v26 + 2 >= v73) {
    goto LABEL_27;
  }
  unint64_t v27 = *(void *)(v72 + 8 * v23);
  if (v27)
  {
LABEL_20:
    unint64_t v22 = (v27 - 1) & v27;
    unint64_t v25 = __clz(__rbit64(v27)) + (v23 << 6);
    goto LABEL_21;
  }
  int64_t v28 = v26 + 3;
  if (v28 < v73)
  {
    unint64_t v27 = *(void *)(v72 + 8 * v28);
    if (!v27)
    {
      while (1)
      {
        int64_t v23 = v28 + 1;
        if (__OFADD__(v28, 1)) {
          goto LABEL_38;
        }
        if (v23 >= v73) {
          goto LABEL_27;
        }
        unint64_t v27 = *(void *)(v72 + 8 * v23);
        ++v28;
        if (v27) {
          goto LABEL_20;
        }
      }
    }
    int64_t v23 = v28;
    goto LABEL_20;
  }
LABEL_27:
  (*v80)(v16, 1, 1, v8);
LABEL_28:
  swift_release();
  char v51 = v67;
  id v52 = v66;
LABEL_29:
  uint64_t v53 = *v51;
  swift_bridgeObjectRetain();
  char v54 = sub_1006E7B3C(v52, v53);
  swift_bridgeObjectRelease();
  if ((v54 & 1) == 0)
  {
    uint64_t v55 = (uint64_t *)(a3 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_sceneToContentDict);
    swift_beginAccess();
    uint64_t v56 = *v55;
    if (*(void *)(*v55 + 16))
    {
      id v57 = v52;
      swift_bridgeObjectRetain();
      unint64_t v58 = sub_1009577D4((uint64_t)v57);
      if (v59)
      {
        uint64_t v60 = *(void *)(*(void *)(v56 + 56) + 8 * v58);
        swift_bridgeObjectRetain();

        swift_bridgeObjectRelease();
        uint64_t v61 = swift_bridgeObjectRetain();
        uint64_t v62 = sub_100F261B0(v61, v60);
        swift_bridgeObjectRelease();
        uint64_t v63 = *(void *)(v62 + 16);
        swift_release();
        if (v63)
        {
          sub_100CBC3E4(&v83, v57);
        }
      }
      else
      {

        swift_bridgeObjectRelease();
      }
    }
  }
}

void sub_100E73654()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_canvasScrollViewController);
  if (v1)
  {
    id v2 = v1;
    id v3 = [v2 view];
    if (v3)
    {
      uint64_t v4 = v3;
      id v5 = [v3 safeAreaLayoutGuide];

      [v5 layoutFrame];
      double v7 = v6;
      double v9 = v8;
      double v11 = v10;
      double v13 = v12;

      id v14 = [v2 view];
      if (v14)
      {
        uint64_t v15 = v14;
        id v16 = [v14 superview];

        if (!v16)
        {
          sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"safeAreaLayoutFrame(for:)", 25, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSBoardViewController.swift", 95, 2, 2104, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
          sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"safeAreaLayoutFrame(for:)", 25, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSBoardViewController.swift", 95, 2, 2104);

          return;
        }
        id v17 = [v2 view];
        if (v17)
        {
          __n128 v18 = v17;
          id v19 = [v17 safeAreaLayoutGuide];

          id v20 = [v19 owningView];
          [v16 convertRect:v20 fromView:v7, v9, v11, v13];

          return;
        }
        goto LABEL_11;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
LABEL_11:
    __break(1u);
  }
}

void sub_100E738A4(void *a1)
{
  id v2 = v1;
  uint64_t v4 = sub_1005057FC(&qword_101672BB0);
  *(void *)&double v6 = __chkstk_darwin(v4 - 8, v5).n128_u64[0];
  double v8 = v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0) + 46;
  id v9 = [v1 traitCollection];
  if (*(void *)&v1[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_tipPresentationView])
  {
    uint64_t v10 = (uint64_t)&v1[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_currentlyPresentedTip];
    swift_beginAccess();
    sub_100522E9C(v10, (uint64_t)v40, &qword_101674708);
    if (v41)
    {
      sub_1005057FC(&qword_10169FC80);
      if (swift_dynamicCast())
      {
        sub_100E3B330(1, 0);
        sub_100E3B44C();
      }
    }
    else
    {
      sub_100522F00((uint64_t)v40, &qword_101674708);
    }
  }
  id v11 = [v9 horizontalSizeClass];
  if (v11 != [a1 horizontalSizeClass]) {
    goto LABEL_14;
  }
  double v12 = self;
  unsigned int v13 = [v12 crl_phoneUI];
  unsigned int v14 = [v9 crl_isCompactWidth];
  char v15 = v13 ^ 1;
  unsigned int v16 = (v13 ^ 1) & v14;
  if ((v15 & 1) == 0 && v14) {
    unsigned int v16 = [v9 crl_isCompactHeight] ^ 1;
  }
  unsigned int v17 = [v12 crl_phoneUI];
  unsigned int v18 = [a1 crl_isCompactWidth];
  if (v17)
  {
    if (!v18)
    {
      if (v16) {
        goto LABEL_14;
      }
LABEL_36:
      id v29 = v9;
      goto LABEL_37;
    }
    unsigned int v18 = [a1 crl_isCompactHeight] ^ 1;
  }
  if (v16 == v18) {
    goto LABEL_36;
  }
LABEL_14:
  id v19 = [v2 navigationItem];
  UINavigationItem.renameDelegate.setter();

  id v20 = [v2 navigationItem];
  sub_100E769FC(&qword_10169FC68, (void (*)(uint64_t))type metadata accessor for CRLiOSBoardViewController);
  swift_unknownObjectRetain();
  UINavigationItem.renameDelegate.setter();

  uint64_t v21 = *(void **)&v2[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interactiveCanvasController];
  sub_1005919EC(v9, (int)[v21 documentIsSharedReadOnly], (uint64_t)v43);
  sub_100591DC0(v43, 0);
  sub_1005393A8((uint64_t)v43);
  uint64_t v22 = (uint64_t)&v2[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_currentlyPresentedTip];
  swift_beginAccess();
  sub_100522E9C(v22, (uint64_t)v40, &qword_101674708);
  if (v41)
  {
    sub_1005057FC(&qword_10169FC80);
    if (swift_dynamicCast())
    {
      id v23 = [v2 navigationItem];
      id v24 = [v23 additionalOverflowItems];

      if (!v24) {
        sub_100E3B330(1, 1);
      }
    }
  }
  else
  {
    sub_100522F00((uint64_t)v40, &qword_101674708);
  }
  double v41 = &type metadata for CRLFeatureFlags;
  unint64_t v25 = sub_1005396A8();
  unint64_t v42 = v25;
  v40[0] = 17;
  char v26 = isFeatureEnabled(_:)();
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v40);
  if (v26) {
    sub_100E54A5C(v9);
  }
  else {
    sub_100E5589C(v9);
  }
  unint64_t v27 = (char *)[v21 editingCoordinator];
  if (v27)
  {
    int64_t v28 = v27;
    id v29 = *(id *)&v27[OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_followCoordinator];

    if (*((unsigned char *)v29 + OBJC_IVAR____TtC8Freeform20CRLFollowCoordinator_isFollowed) == 1)
    {
      id v29 = v29;
      sub_1007F1ED0(0, 1);
    }
  }
  else
  {
    id v29 = 0;
  }
  id v30 = [v9 horizontalSizeClass];
  if (v30 != [a1 horizontalSizeClass])
  {
    id v31 = sub_100E3C86C();
    char v32 = (void *)sub_100594AAC();
    [v31 setMenu:v32];
  }
  [v21 scrollToCurrentSelectionPathAfterLayoutWithOptions:257];
  if (*(void *)&v2[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_undoAlertController])
  {
    uint64_t v33 = type metadata accessor for TaskPriority();
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56))(v8, 1, 1, v33);
    type metadata accessor for MainActor();
    unint64_t v34 = v2;
    uint64_t v35 = static MainActor.shared.getter();
    double v36 = (void *)swift_allocObject();
    v36[2] = v35;
    v36[3] = &protocol witness table for MainActor;
    v36[4] = v34;
    sub_1005912D0((uint64_t)v8, (uint64_t)&unk_10169FC78, (uint64_t)v36);
    swift_release();
  }
  sub_1005B09AC();
  double v41 = &type metadata for CRLFeatureFlags;
  unint64_t v42 = v25;
  v40[0] = 0;
  char v37 = isFeatureEnabled(_:)();
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v40);
  if (v37)
  {
    [v21 documentIsSharedReadOnly];
    sub_1005C3F8C(v9);
  }
  double v41 = &type metadata for CRLFeatureFlags;
  unint64_t v42 = v25;
  v40[0] = 8;
  char v38 = isFeatureEnabled(_:)();
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v40);
  if (v38) {
    sub_100E561EC(v9);
  }

LABEL_37:
}

uint64_t sub_100E73EA8()
{
  id v1 = sub_100E3C82C();
  id v2 = [v1 button];

  unsigned int v3 = [v2 isHeld];
  uint64_t v4 = *(void **)&v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interactiveCanvasController];
  uint64_t result = (uint64_t)[v4 hasSelection];
  if (!v3 || (result & 1) == 0)
  {
    id v6 = [v0 presentedViewController];
    if (v6)
    {
      id v7 = v6;
      if (([v6 isBeingDismissed] & 1) == 0)
      {
        double v8 = (void *)swift_dynamicCastObjCProtocolConditional();
        if (!v8 || ![v8 staysOpenOnSelectionChange])
        {
          sub_10050BF48(0, &qword_10169FC50);
          if (![v7 isKindOfClass:swift_getObjCClassFromMetadata()])
          {
            type metadata accessor for ImagePlaygroundViewController();
            if (![v7 isKindOfClass:swift_getObjCClassFromMetadata()])
            {
              id v9 = sub_100E3C82C();
              id v10 = [v9 button];

              LODWORD(v9) = [v10 isHeld];
              if (!v9)
              {
                self;
                if (!swift_dynamicCastObjCClass()
                  || (id v11 = [v4 infosForCurrentSelectionPath],
                      uint64_t v12 = static Set._unconditionallyBridgeFromObjectiveC(_:)(),
                      v11,
                      uint64_t v13 = *(void *)(v12 + 16),
                      swift_bridgeObjectRelease(),
                      !v13))
                {
                  *(void *)uint64_t v22 = swift_getObjectType();
                  sub_1005057FC(&qword_10169FC58);
                  uint64_t v14 = String.init<A>(describing:)();
                  char v16 = sub_100ED5CE8(v14, v15, &off_101504F28);
                  swift_bridgeObjectRelease();
                  swift_arrayDestroy();
                  if ((v16 & 1) == 0)
                  {
                    if (qword_10166F9C8 != -1) {
                      swift_once();
                    }
                    swift_beginAccess();
                    unsigned int v17 = (void *)static OS_os_log.crlDefault;
                    sub_1005057FC((uint64_t *)&unk_101672B40);
                    uint64_t inited = swift_initStackObject();
                    *(_OWORD *)(inited + 16) = xmmword_10117E810;
                    *(void *)(inited + 56) = sub_10050BF48(0, (unint64_t *)&qword_1016745A0);
                    *(void *)(inited + 64) = sub_10062E0F4(&qword_10169FC60, (unint64_t *)&qword_1016745A0);
                    *(void *)(inited + 32) = v7;
                    id v19 = v17;
                    id v7 = v7;
                    uint64_t v20 = static os_log_type_t.default.getter();
                    sub_100BAC898((uint64_t)v19, (uint64_t)&_mh_execute_header, v20, (uint64_t)"Dismissing %@", 13, 2, inited);
                    swift_setDeallocating();
                    sub_1005057FC(&qword_101672B50);
                    swift_arrayDestroy();

                    [v7 dismissViewControllerAnimated:1 completion:0];
                  }
                }
              }
            }
          }
        }
      }
    }
    id v21 = [v0 traitCollection];
    sub_1005919EC(v21, (int)[v4 documentIsSharedReadOnly], (uint64_t)v22);
    sub_100591DC0(v22, 0);
    sub_1005393A8((uint64_t)v22);

    return sub_1005A6814();
  }
  return result;
}

double *sub_100E74294()
{
  if (qword_101670170 != -1) {
    swift_once();
  }
  uint64_t v0 = *(void *)(qword_10171CA38 + 16);
  if (v0)
  {
    id v1 = (double *)(qword_10171CA38 + 32);
    swift_bridgeObjectRetain();
    do
    {
      if ([objc_allocWithZone((Class)NSNumber) initWithDouble:*v1])
      {
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
      }
      ++v1;
      --v0;
    }
    while (v0);
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  return _swiftEmptyArrayStorage;
}

double *sub_100E743DC()
{
  id v1 = v0;
  id v2 = *(void **)&v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_scrollView];
  id v3 = [v2 superview];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = *(void **)&v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_bottomToolTray];
    if (v5)
    {
      if (([(id)swift_unknownObjectRetain() hidden] & 1) == 0)
      {
        [v5 rectangleObscuringCanvasScrollView];
        double x = v48.origin.x;
        double y = v48.origin.y;
        double width = v48.size.width;
        double height = v48.size.height;
        if (!CGRectIsNull(v48))
        {
          [v4 convertRect:v2 fromCoordinateSpace:x, y, width, height];
          id v14 = [self valueWithCGRect:v10, v11, v12, v13];
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
          if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          }
          specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized Array._endMutation()();
        }
      }
      swift_unknownObjectRelease();
    }
    uint64_t v15 = *(void **)&v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_canvasViewController];
    id v16 = [v15 miniFormatterPresenter];
    if (v16)
    {
      unsigned int v17 = [v16 isPresentingMiniFormatter];
      swift_unknownObjectRelease();
      if (v17)
      {
        id v18 = [v0 traitCollection];
        if (objc_msgSend(self, "crl_phoneUI"))
        {
        }
        else
        {
          unsigned __int8 v19 = [v18 crl_isCompactWidth];

          if ((v19 & 1) == 0) {
            goto LABEL_22;
          }
        }
        id v20 = [v15 presentedViewController];
        if (v20)
        {
          id v21 = v20;
          if (([v20 isBeingDismissed] & 1) == 0)
          {
            id v22 = [v21 view];
            if (v22)
            {
              id v23 = v22;
              [v22 bounds];
              [v23 convertRect:v2 toCoordinateSpace:];
              [v4 convertRect:v2 fromCoordinateSpace:];
              id v28 = [self valueWithCGRect:v24, v25, v26, v27];
              specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
              if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
                specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
              }
              specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
              specialized Array._endMutation()();
            }
          }
        }
      }
    }
LABEL_22:
    id v29 = [v15 miniFormatterPresenter];
    if (!v29) {
      goto LABEL_37;
    }
    unsigned int v30 = [v29 isPresentingMiniFormatter];
    swift_unknownObjectRelease();
    if (!v30) {
      goto LABEL_37;
    }
    id v31 = [v1 traitCollection];
    if (objc_msgSend(self, "crl_phoneUI"))
    {
    }
    else
    {
      unsigned __int8 v32 = [v31 crl_isCompactWidth];

      if ((v32 & 1) == 0) {
        goto LABEL_37;
      }
    }
    if ([v15 miniFormatterPresenter])
    {
      type metadata accessor for CRLiOSMiniFormatterPresenter();
      uint64_t v33 = swift_dynamicCastClass();
      if (v33)
      {
        unint64_t v34 = *(void **)(v33 + OBJC_IVAR____TtC8Freeform28CRLiOSMiniFormatterPresenter_miniFormatterVC);
        if (v34)
        {
          id v35 = [v34 view];
          if (v35)
          {
            double v36 = v35;
            [v35 bounds];
            [v36 convertRect:v2 toCoordinateSpace:];
            [v4 convertRect:v2 fromCoordinateSpace:];
            double v38 = v37;
            double v40 = v39;
            double v42 = v41;
            double v44 = v43;
            if ([*(id *)&v1[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interactiveCanvasController] connectorKnobsEnabled])
            {
              v49.origin.double x = v38;
              v49.origin.double y = v40;
              v49.size.double width = v42;
              v49.size.double height = v44;
              CGFloat v45 = CGRectGetWidth(v49);
              v50.origin.double x = v38;
              v50.origin.double y = v40;
              v50.size.double width = v42;
              v50.size.double height = v44;
              double v44 = CGRectGetHeight(v50) + 20.0;
              double v42 = v45;
              double v40 = v40 + -20.0;
            }
            id v46 = [self valueWithCGRect:v38, v40, v42, v44];
            specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
            if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
              specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
            }
            specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
            specialized Array._endMutation()();
            swift_unknownObjectRelease();

            goto LABEL_38;
          }
        }
      }
      swift_unknownObjectRelease();
    }
LABEL_37:
    double v36 = v4;
LABEL_38:

    return _swiftEmptyArrayStorage;
  }
  sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"rectanglesObscuringView(_:)", 27, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSBoardViewController.swift", 95, 2, 2043, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
  sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"rectanglesObscuringView(_:)", 27, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSBoardViewController.swift", 95, 2, 2043);
  return _swiftEmptyArrayStorage;
}

id sub_100E74A18()
{
  if ([*(id *)&v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_canvasViewController] isHandlingScribbleWriting])int v1 = 0; {
  else
  }
    int v1 = v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_isChangingDocumentModeToHandwriting] ^ 1;
  id result = [v0 view];
  if (result)
  {
    id v3 = result;
    id v4 = [result window];

    if (v4)
    {
      id v5 = [v0 traitCollection];
      unsigned int v6 = [v5 crl_isCompactWidth];

      return (id)(v6 & v1);
    }
    else
    {
      return 0;
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100E74AF8()
{
  unsigned int v1 = [self isReduceMotionEnabled];
  id v2 = *(void **)&v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_compactScenesNavigatorViewController];
  if (!v2) {
    return 0;
  }
  unsigned int v3 = v1;
  id v4 = v2;
  uint64_t v5 = (uint64_t)[v0 presentedViewController];
  if (v5)
  {
    sub_10050BF48(0, (unint64_t *)&qword_1016745A0);
    id v6 = v4;
    id v7 = (id)v5;
    char v8 = static NSObject.== infix(_:_:)();

    if (v8)
    {
      [v6 dismissViewControllerAnimated:v3 ^ 1 completion:0];
      uint64_t v5 = 1;
    }
    else
    {
      uint64_t v5 = 0;
    }
  }

  return v5;
}

id sub_100E74BF8(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, unsigned char *a5)
{
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();
  *(void *)&a5[OBJC_IVAR____TtC8Freeform32CRLPersistentFollowHUDController_type] = 0;
  swift_unknownObjectWeakInit();
  *(void *)&a5[OBJC_IVAR____TtC8Freeform32CRLPersistentFollowHUDController_minimumShowDuration] = 0;
  *(void *)&a5[OBJC_IVAR____TtC8Freeform32CRLPersistentFollowHUDController_maximumShowDuration] = 0;
  id v7 = &a5[OBJC_IVAR____TtC8Freeform32CRLPersistentFollowHUDController_timeStartedShowing];
  uint64_t v8 = type metadata accessor for Date();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v7, 1, 1, v8);
  *(void *)&a5[OBJC_IVAR____TtC8Freeform32CRLPersistentFollowHUDController_hideTimer] = 0;
  a5[OBJC_IVAR____TtC8Freeform32CRLPersistentFollowHUDController_showing] = 0;
  a5[OBJC_IVAR____TtC8Freeform32CRLPersistentFollowHUDController_animating] = 0;
  a5[OBJC_IVAR____TtC8Freeform32CRLPersistentFollowHUDController_hiding] = 0;
  id v9 = &a5[OBJC_IVAR____TtC8Freeform32CRLPersistentFollowHUDController_accessibilityAnnouncement];
  void *v9 = 0;
  v9[1] = 0;
  a5[OBJC_IVAR____TtC8Freeform32CRLPersistentFollowHUDController_swipable] = 0;
  *(void *)&a5[OBJC_IVAR____TtC8Freeform32CRLPersistentFollowHUDController_swipeGestureRecognizer] = 0;
  a5[OBJC_IVAR____TtC8Freeform32CRLPersistentFollowHUDController_hideOnTouch] = 0;
  a5[OBJC_IVAR____TtC8Freeform32CRLPersistentFollowHUDController_setupDone] = 0;
  *(void *)&a5[OBJC_IVAR____TtC8Freeform32CRLPersistentFollowHUDController_height] = 0x4045000000000000;
  *(void *)&a5[OBJC_IVAR____TtC8Freeform32CRLPersistentFollowHUDController_width] = 0;
  *(void *)&a5[OBJC_IVAR____TtC8Freeform32CRLPersistentFollowHUDController_heightConstraint] = 0;
  *(void *)&a5[OBJC_IVAR____TtC8Freeform32CRLPersistentFollowHUDController_constraints] = _swiftEmptyArrayStorage;
  swift_unknownObjectWeakInit();
  double v10 = &a5[OBJC_IVAR____TtC8Freeform32CRLPersistentFollowHUDController_stopButtonClickedHandler];
  *double v10 = 0;
  v10[1] = 0;
  double v11 = &a5[OBJC_IVAR____TtC8Freeform32CRLPersistentFollowHUDController_canvasWidth];
  *(void *)double v11 = 0;
  v11[8] = 1;
  *(void *)&a5[OBJC_IVAR____TtC8Freeform32CRLPersistentFollowHUDController____lazy_storage___participantColor] = 0;
  double v12 = (uint64_t *)&a5[OBJC_IVAR____TtC8Freeform32CRLPersistentFollowHUDController_stopFollowingString];
  double v13 = self;
  id v14 = a5;
  id v15 = [v13 mainBundle];
  NSString v16 = String._bridgeToObjectiveC()();
  NSString v17 = String._bridgeToObjectiveC()();
  id v18 = [v15 localizedStringForKey:v16 value:v17 table:0];

  uint64_t v19 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v21 = v20;

  uint64_t *v12 = v19;
  v12[1] = v21;
  *(void *)&v14[OBJC_IVAR____TtC8Freeform32CRLPersistentFollowHUDController____lazy_storage____label] = 0;
  swift_unknownObjectWeakAssign();
  *(void *)&v14[OBJC_IVAR____TtC8Freeform32CRLPersistentFollowHUDController_followingParticipant] = a2;
  swift_unknownObjectWeakAssign();
  id v22 = objc_allocWithZone((Class)UIView);
  id v23 = a2;
  id v24 = [v22 initWithFrame:0.0, 0.0, 0.0, 0.0];
  *(void *)&v14[OBJC_IVAR____TtC8Freeform32CRLPersistentFollowHUDController_hudView] = v24;
  id v25 = [objc_allocWithZone((Class)UIView) initWithFrame:0.0, 0.0, 0.0, 0.0];
  *(void *)&v14[OBJC_IVAR____TtC8Freeform32CRLPersistentFollowHUDController_containerView] = v25;
  swift_unknownObjectWeakAssign();

  v27.receiver = v14;
  v27.super_class = (Class)type metadata accessor for CRLPersistentFollowHUDController();
  return [super init];
}

id sub_100E74FD4(uint64_t a1, void *a2, uint64_t a3, char *a4)
{
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();
  *(void *)&a4[OBJC_IVAR____TtC8Freeform33CRLTransientRefollowHUDController_type] = 2;
  swift_unknownObjectWeakInit();
  *(void *)&a4[OBJC_IVAR____TtC8Freeform33CRLTransientRefollowHUDController_minimumShowDuration] = 0x3FF0000000000000;
  id v6 = self;
  id v7 = a4;
  unsigned int v8 = [v6 isVoiceOverOrSwitchControlEnabled];
  double v9 = 6.0;
  if (v8) {
    double v9 = 30.0;
  }
  *(double *)&v7[OBJC_IVAR____TtC8Freeform33CRLTransientRefollowHUDController_maximumShowDuration] = v9;
  double v10 = &v7[OBJC_IVAR____TtC8Freeform33CRLTransientRefollowHUDController_timeStartedShowing];
  uint64_t v11 = type metadata accessor for Date();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v10, 1, 1, v11);
  *(void *)&v7[OBJC_IVAR____TtC8Freeform33CRLTransientRefollowHUDController_hideTimer] = 0;
  v7[OBJC_IVAR____TtC8Freeform33CRLTransientRefollowHUDController_shouldAutoHide] = 1;
  v7[OBJC_IVAR____TtC8Freeform33CRLTransientRefollowHUDController_showing] = 0;
  v7[OBJC_IVAR____TtC8Freeform33CRLTransientRefollowHUDController_animating] = 0;
  v7[OBJC_IVAR____TtC8Freeform33CRLTransientRefollowHUDController_hiding] = 0;
  double v12 = &v7[OBJC_IVAR____TtC8Freeform33CRLTransientRefollowHUDController_accessibilityAnnouncement];
  *(void *)double v12 = 0;
  *((void *)v12 + 1) = 0;
  v7[OBJC_IVAR____TtC8Freeform33CRLTransientRefollowHUDController_swipable] = 1;
  *(void *)&v7[OBJC_IVAR____TtC8Freeform33CRLTransientRefollowHUDController_swipeGestureRecognizer] = 0;
  v7[OBJC_IVAR____TtC8Freeform33CRLTransientRefollowHUDController_hideOnTouch] = 1;
  v7[OBJC_IVAR____TtC8Freeform33CRLTransientRefollowHUDController_setupDone] = 0;
  *(void *)&v7[OBJC_IVAR____TtC8Freeform33CRLTransientRefollowHUDController_height] = 0x4045000000000000;
  *(void *)&v7[OBJC_IVAR____TtC8Freeform33CRLTransientRefollowHUDController_width] = 0;
  *(void *)&v7[OBJC_IVAR____TtC8Freeform33CRLTransientRefollowHUDController_heightConstraint] = 0;
  *(void *)&v7[OBJC_IVAR____TtC8Freeform33CRLTransientRefollowHUDController_constraints] = _swiftEmptyArrayStorage;
  double v13 = &v7[OBJC_IVAR____TtC8Freeform33CRLTransientRefollowHUDController_refollowClickedHandler];
  *(void *)double v13 = 0;
  *((void *)v13 + 1) = 0;
  id v14 = &v7[OBJC_IVAR____TtC8Freeform33CRLTransientRefollowHUDController_canvasWidth];
  *(void *)id v14 = 0;
  v14[8] = 1;
  *(void *)&v7[OBJC_IVAR____TtC8Freeform33CRLTransientRefollowHUDController____lazy_storage___participantColor] = 0;
  id v15 = (uint64_t *)&v7[OBJC_IVAR____TtC8Freeform33CRLTransientRefollowHUDController_resumeFollowingString];
  id v16 = [self mainBundle];
  NSString v17 = String._bridgeToObjectiveC()();
  NSString v18 = String._bridgeToObjectiveC()();
  id v19 = [v16 localizedStringForKey:v17 value:v18 table:0];

  uint64_t v20 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v22 = v21;

  *id v15 = v20;
  v15[1] = v22;
  *(void *)&v7[OBJC_IVAR____TtC8Freeform33CRLTransientRefollowHUDController____lazy_storage____label] = 0;
  swift_unknownObjectWeakAssign();
  *(void *)&v7[OBJC_IVAR____TtC8Freeform33CRLTransientRefollowHUDController_followingParticipant] = a2;
  swift_unknownObjectWeakAssign();
  id v23 = objc_allocWithZone((Class)UIView);
  id v24 = a2;
  id v25 = [v23 initWithFrame:0.0, 0.0, 0.0, 0.0];
  *(void *)&v7[OBJC_IVAR____TtC8Freeform33CRLTransientRefollowHUDController_hudView] = v25;
  id v26 = [objc_allocWithZone((Class)UIView) initWithFrame:0.0, 0.0, 0.0, 0.0];
  *(void *)&v7[OBJC_IVAR____TtC8Freeform33CRLTransientRefollowHUDController_containerView] = v26;

  v28.receiver = v7;
  v28.super_class = (Class)type metadata accessor for CRLTransientRefollowHUDController();
  return [super init];
}

id sub_100E753D4(uint64_t a1, void *a2, char a3, uint64_t a4, char a5, unsigned char *a6)
{
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();
  *(void *)&a6[OBJC_IVAR____TtC8Freeform39CRLTransientStartEndFollowHUDController_type] = 2;
  *(void *)&a6[OBJC_IVAR____TtC8Freeform39CRLTransientStartEndFollowHUDController_minimumShowDuration] = 0x3FF0000000000000;
  *(void *)&a6[OBJC_IVAR____TtC8Freeform39CRLTransientStartEndFollowHUDController_maximumShowDuration] = 0x4014000000000000;
  double v10 = &a6[OBJC_IVAR____TtC8Freeform39CRLTransientStartEndFollowHUDController_timeStartedShowing];
  uint64_t v11 = type metadata accessor for Date();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v10, 1, 1, v11);
  *(void *)&a6[OBJC_IVAR____TtC8Freeform39CRLTransientStartEndFollowHUDController_hideTimer] = 0;
  a6[OBJC_IVAR____TtC8Freeform39CRLTransientStartEndFollowHUDController_shouldAutoHide] = 1;
  a6[OBJC_IVAR____TtC8Freeform39CRLTransientStartEndFollowHUDController_showing] = 0;
  a6[OBJC_IVAR____TtC8Freeform39CRLTransientStartEndFollowHUDController_animating] = 0;
  a6[OBJC_IVAR____TtC8Freeform39CRLTransientStartEndFollowHUDController_hiding] = 0;
  double v12 = &a6[OBJC_IVAR____TtC8Freeform39CRLTransientStartEndFollowHUDController_accessibilityAnnouncement];
  void *v12 = 0;
  v12[1] = 0;
  a6[OBJC_IVAR____TtC8Freeform39CRLTransientStartEndFollowHUDController_swipable] = 1;
  *(void *)&a6[OBJC_IVAR____TtC8Freeform39CRLTransientStartEndFollowHUDController_swipeGestureRecognizer] = 0;
  a6[OBJC_IVAR____TtC8Freeform39CRLTransientStartEndFollowHUDController_hideOnTouch] = 0;
  a6[OBJC_IVAR____TtC8Freeform39CRLTransientStartEndFollowHUDController_setupDone] = 0;
  *(void *)&a6[OBJC_IVAR____TtC8Freeform39CRLTransientStartEndFollowHUDController_height] = 0x4045000000000000;
  *(void *)&a6[OBJC_IVAR____TtC8Freeform39CRLTransientStartEndFollowHUDController_width] = 0;
  *(void *)&a6[OBJC_IVAR____TtC8Freeform39CRLTransientStartEndFollowHUDController_heightConstraint] = 0;
  *(void *)&a6[OBJC_IVAR____TtC8Freeform39CRLTransientStartEndFollowHUDController_constraints] = _swiftEmptyArrayStorage;
  double v13 = &a6[OBJC_IVAR____TtC8Freeform39CRLTransientStartEndFollowHUDController_canvasWidth];
  *(void *)double v13 = 0;
  v13[8] = 1;
  uint64_t v14 = OBJC_IVAR____TtC8Freeform39CRLTransientStartEndFollowHUDController_isStartFollow;
  a6[OBJC_IVAR____TtC8Freeform39CRLTransientStartEndFollowHUDController_isStartFollow] = 0;
  *(void *)&a6[OBJC_IVAR____TtC8Freeform39CRLTransientStartEndFollowHUDController____lazy_storage____label] = 0;
  swift_unknownObjectWeakAssign();
  id v15 = &a6[OBJC_IVAR____TtC8Freeform39CRLTransientStartEndFollowHUDController_followingParticipantInfo];
  *(void *)id v15 = a2;
  a3 &= 1u;
  v15[8] = a3;
  swift_unknownObjectWeakAssign();
  a6[v14] = a5;
  id v16 = objc_allocWithZone((Class)UIView);
  NSString v17 = a6;
  sub_1007389A4(a2, a3);
  id v18 = [v16 initWithFrame:0.0, 0.0, 0.0, 0.0];
  *(void *)&v17[OBJC_IVAR____TtC8Freeform39CRLTransientStartEndFollowHUDController_hudView] = v18;
  id v19 = [objc_allocWithZone((Class)UIView) initWithFrame:0.0, 0.0, 0.0, 0.0];
  *(void *)&v17[OBJC_IVAR____TtC8Freeform39CRLTransientStartEndFollowHUDController_containerView] = v19;

  v21.receiver = v17;
  v21.super_class = (Class)type metadata accessor for CRLTransientStartEndFollowHUDController();
  return [super init];
}

void sub_100E756F0()
{
  id v1 = [v0 crl_windowWrapper];
  if (v1 && (id v2 = v1, v3 = [v1 newWrapperBeginningIgnoringUserInteractionSafely], v2, v3))
  {
    if (*(void *)(*(void *)&v0[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_editingCoordinator]
                   + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_suspendResumeCoordinator))
      sub_10074058C(0xD000000000000012, 0x800000010128FF80);
    else {
      __break(1u);
    }
  }
  else
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"beginModalOperation(withLocalizedMessage:progress:cancelHandler:)", 65, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSBoardViewController.swift", 95, 2, 2810, (uint64_t)"beginModalOperation is will not suspend collaboration when the modalOperationToken is nil, but it will still be safe to call endModalOperation in either case.", 158, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"beginModalOperation(withLocalizedMessage:progress:cancelHandler:)", 65, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSBoardViewController.swift", 95, 2, 2810);
  }
}

uint64_t sub_100E75830(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4, v6);
  unsigned int v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for DispatchQoS();
  uint64_t v9 = *(void *)(v18 - 8);
  __chkstk_darwin(v18, v10);
  double v12 = (char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10050BF48(0, (unint64_t *)&qword_1016725C0);
  double v13 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = a1;
  *(void *)(v14 + 24) = a2;
  aBlock[4] = sub_10093B9B4;
  aBlock[5] = v14;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = *(void *)"";
  aBlock[2] = sub_100679958;
  void aBlock[3] = &unk_1015302A0;
  id v15 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_100E769FC((unint64_t *)&qword_1016747E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_1005057FC((uint64_t *)&unk_1016725D0);
  sub_100523288((unint64_t *)&qword_1016747F0, (uint64_t *)&unk_1016725D0);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v15);

  (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v12, v18);
}

id sub_100E75B18(void *a1, void *a2)
{
  id v3 = v2;
  uint64_t v6 = *(void **)&v2[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_canvasViewController];
  [v6 setUpCommonGestureAllowedTouchTypes];
  id result = [v6 pencilMediator];
  if (!result)
  {
    __break(1u);
    return result;
  }
  [result setCurrentPencilModeType:[a1 pencilModeType]];
  swift_unknownObjectRelease();
  id v8 = [a1 pencilModeType];
  id v9 = sub_100E3C8CC();
  NSString v10 = String._bridgeToObjectiveC()();
  if (v8) {
    uint64_t v11 = &selRef_imageNamed_;
  }
  else {
    uint64_t v11 = &selRef_systemImageNamed_;
  }
  id v12 = [self *v11 v10];

  [v9 setImage:v12];
  if (v8)
  {
    double v13 = *(void **)(*(void *)&v3[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_editingCoordinator]
                   + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_followCoordinator);
    if (*((unsigned char *)v13 + OBJC_IVAR____TtC8Freeform20CRLFollowCoordinator_isFollowed) == 1)
    {
      id v14 = v13;
      sub_1007F1ED0(0, 1);
    }
    id v15 = sub_100E3C8CC();
    UIAccessibilityTraits v16 = UIAccessibilityTraitSelected;
    unint64_t v17 = (unint64_t)[v15 accessibilityTraits];
    if ((v16 & ~v17) != 0) {
      UIAccessibilityTraits v18 = v16;
    }
    else {
      UIAccessibilityTraits v18 = 0;
    }
    [v15 setAccessibilityTraits:v18 | v17];

    id v19 = sub_100E3C8CC();
    [v19 setAccessibilityHint:0];
  }
  else
  {
    id v20 = sub_100E3C8CC();
    UIAccessibilityTraits v21 = UIAccessibilityTraitSelected;
    unint64_t v22 = (unint64_t)[v20 accessibilityTraits];
    uint64_t v23 = -1;
    if ((v22 & v21) != 0) {
      uint64_t v23 = ~v21;
    }
    [v20 setAccessibilityTraits:v23 & v22];

    id v24 = sub_100E3C8CC();
    id v25 = [self mainBundle];
    NSString v26 = String._bridgeToObjectiveC()();
    NSString v27 = String._bridgeToObjectiveC()();
    id v28 = [v25 localizedStringForKey:v26 value:v27 table:0];

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    id v19 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v24 setAccessibilityHint:v19];
  }
  sub_1005C4558();
  unsigned int v29 = [a1 wantsDoneButtonInCompact];
  if (v29 != [a2 wantsDoneButtonInCompact])
  {
    id v30 = [v3 traitCollection];
    sub_1005919EC(v30, (int)[*(id *)&v3[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interactiveCanvasController] documentIsSharedReadOnly], (uint64_t)v35);
    sub_100591DC0(v35, 0);
    sub_1005393A8((uint64_t)v35);
  }
  uint64_t v31 = OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_bottomToolTray;
  unsigned __int8 v32 = *(void **)&v3[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_bottomToolTray];
  swift_unknownObjectRetain();
  id v33 = [a1 toolTray];
  *(void *)&v3[v31] = v33;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  if (sub_100E76C5C((unint64_t)v33, (unint64_t)v32))
  {
    if (!v33) {
      goto LABEL_29;
    }
  }
  else
  {
    if (v32)
    {
      if (([(id)swift_unknownObjectRetain() hidden] & 1) == 0) {
        [v32 setToolTrayHidden:1 animated:1];
      }
      [v32 uninstallToolTray];
      swift_unknownObjectRelease();
    }
    if (!v33) {
      goto LABEL_29;
    }
    [(id)swift_unknownObjectRetain() installToolTray];
    if ([v33 hidden]) {
      [v33 setToolTrayHidden:0 animated:1];
    }
    swift_unknownObjectRelease();
  }
  [a1 modeDidPresentBottomToolTray];
LABEL_29:
  unsigned int v34 = [a1 wantsToSuppressMultiselectionWithSingleBounds];
  if (v34 != [a2 wantsToSuppressMultiselectionWithSingleBounds]) {
    [*(id *)&v3[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interactiveCanvasController] updateMultiselectResizeInfoIfNeeded];
  }
  swift_unknownObjectRelease();
  id result = (id)swift_unknownObjectRelease();
  v3[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_isChangingDocumentModeToHandwriting] = 0;
  return result;
}

void sub_100E7605C(uint64_t *a1)
{
  id v3 = [*(id *)(v1 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interactiveCanvasController) canvas];
  id v4 = [v3 topLevelReps];
  sub_10050BF48(0, (unint64_t *)&qword_101678790);
  unint64_t v5 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v5 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v6) {
      goto LABEL_10;
    }
  }
  else
  {
    uint64_t v6 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v6) {
      goto LABEL_10;
    }
  }
  if (v6 < 1)
  {
    __break(1u);
    return;
  }
  uint64_t v7 = 0;
  uint64_t v8 = *a1;
  do
  {
    if ((v5 & 0xC000000000000001) != 0) {
      id v9 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v9 = *(id *)(v5 + 8 * v7 + 32);
    }
    NSString v10 = v9;
    ++v7;
    [v9 recursivelyPerformSelector:v8];
  }
  while (v6 != v7);
LABEL_10:

  swift_bridgeObjectRelease();
}

uint64_t sub_100E761B4()
{
  uint64_t result = *(void *)(v0 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_pencilKitCanvasViewController);
  if (!result)
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"pencilKitCanvasViewControllerForFreehandDrawingTools", 52, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSBoardViewController.swift", 95, 2, 3594, (uint64_t)"pencilKitCanvasViewController should be set up by the time pencilKitCanvasViewControllerForFreehandDrawingTools is called.", 122, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_100586FD4((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"pencilKitCanvasViewController should be set up by the time pencilKitCanvasViewControllerForFreehandDrawingTools is called.");
    sub_1005871AC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"pencilKitCanvasViewControllerForFreehandDrawingTools", 52, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Views/CRLiOSBoardViewController.swift", 95, 2, 3594);
    SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v2, v3);
    uint64_t result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
  return result;
}

id sub_100E762CC(uint64_t a1, SEL *a2)
{
  [*(id *)(v2 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interactiveCanvasController) *a2 a1];
  uint64_t v8 = &type metadata for CRLFeatureFlags;
  unint64_t v9 = sub_1005396A8();
  v7[0] = 14;
  char v5 = isFeatureEnabled(_:)();
  id result = (id)_s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v7);
  if (v5) {
    return [*(id *)(v2 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_freehandDrawingHighlightManager) *a2 a1];
  }
  return result;
}

uint64_t sub_100E76364(void *a1, uint64_t a2)
{
  id v4 = [a1 presentationStyle];
  if (!*(void *)(v2 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_undoAlertController))
  {
    id v5 = sub_100E3C594();
    id v6 = [v5 mode];

    LOBYTE(v5) = [v6 wantsToEndForNonPopoverPresentations];
    if ((v5 & 1) != 0 && (v4 != (id)7 && a2 != 7 || a2 != -1 && a2 != 7))
    {
      id v7 = sub_100E3C594();
      [v7 resetToDefaultModeAnimated:1];
    }
  }

  return sub_100E478BC((uint64_t)v4, a2);
}

uint64_t sub_100E76448(unint64_t a1)
{
  if (a1 >> 62)
  {
LABEL_29:
    swift_bridgeObjectRetain();
    uint64_t v2 = _CocoaArrayWrapper.endIndex.getter();
    if (v2) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v2)
    {
LABEL_3:
      uint64_t v33 = v2;
      uint64_t v3 = 4;
      do
      {
        if ((a1 & 0xC000000000000001) != 0) {
          id v5 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          id v5 = *(id *)(a1 + 8 * v3);
        }
        id v6 = v5;
        uint64_t v7 = v3 - 3;
        if (__OFADD__(v3 - 4, 1))
        {
          __break(1u);
          goto LABEL_29;
        }
        type metadata accessor for CRLImageItem();
        uint64_t v8 = swift_dynamicCastClass();
        if (v8)
        {
          uint64_t v9 = v8;
          if (*(void *)(v8 + OBJC_IVAR____TtC8Freeform12CRLBoardItem_transactionContext)
            || (uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong()) == 0)
          {
            id v10 = v6;
          }
          else
          {
            UIAccessibilityTraits v16 = Strong;
            char v17 = (*(uint64_t (**)(void *))((swift_isaMask & *Strong) + 0x2F0))(v6);

            if (v17) {
              goto LABEL_33;
            }
          }
          uint64_t v18 = OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData;
          id v19 = *(uint64_t (**)(uint64_t))(**(void **)(v9
                                                                + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData)
                                                  + 384);
          uint64_t v20 = swift_retain();
          UIAccessibilityTraits v21 = (void *)v19(v20);
          swift_release();
          if (v21)
          {

            id v4 = *(void (**)(void))(**(void **)(v9 + v18) + 392);
            swift_retain();
            v4(0);

            swift_release();
          }
          else
          {
          }
          uint64_t v2 = v33;
        }
        else
        {
          type metadata accessor for CRLMovieItem();
          uint64_t v11 = swift_dynamicCastClass();
          if (v11)
          {
            uint64_t v12 = v11;
            id v13 = v6;
            sub_100BE9DE4(1);
            if (*(void *)(v12 + OBJC_IVAR____TtC8Freeform12CRLBoardItem_transactionContext)
              || (unint64_t v22 = (void *)swift_unknownObjectWeakLoadStrong()) == 0)
            {
              id v14 = v13;
            }
            else
            {
              uint64_t v23 = v22;
              char v24 = (*(uint64_t (**)(id))((swift_isaMask & *v22) + 0x2F0))(v13);

              if (v24)
              {
LABEL_33:
                sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"_guardTransaction()", 19, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLTransactions/CRLTransactable.swift", 91, 2, 76, (uint64_t)"Attempting to mutate a CRLTransactable without a CRLTransactableContext set", 75, 2u, (uint64_t)_swiftEmptyArrayStorage);
                sub_100586FD4((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Attempting to mutate a CRLTransactable without a CRLTransactableContext set");
                sub_1005871AC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"_guardTransaction()", 19, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLTransactions/CRLTransactable.swift", 91, 2, 76);
                SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v31, v32);
                uint64_t result = _assertionFailure(_:_:file:line:flags:)();
                __break(1u);
                return result;
              }
            }
            uint64_t v25 = OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData;
            NSString v26 = *(uint64_t (**)(uint64_t))(**(void **)(v12
                                                                  + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData)
                                                    + 384);
            uint64_t v27 = swift_retain();
            id v28 = (void *)v26(v27);
            swift_release();
            if (v28)
            {

              unsigned int v29 = *(void (**)(void))(**(void **)(v12 + v25) + 392);
              swift_retain();
              v29(0);

              swift_release();
            }
            else
            {
            }
            uint64_t v2 = v33;
          }
          else
          {
          }
        }
        ++v3;
      }
      while (v7 != v2);
    }
  }

  return swift_bridgeObjectRelease();
}

id sub_100E768D0()
{
  id result = [*(id *)(v0 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_interactiveCanvasController) shouldPreventSyncingContentOffset];
  if (!result)
  {
    id result = [*(id *)(v0 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_scrollView) contentOffset];
    uint64_t v2 = (void *)(v0 + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_lastContentOffset);
    *uint64_t v2 = v3;
    v2[1] = v4;
  }
  return result;
}

uint64_t sub_100E76940()
{
  return sub_1007E7164(40);
}

uint64_t sub_100E76948(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_100528D08;
  return sub_100E6D0F0(a1, v4, v5, v6);
}

uint64_t sub_100E769FC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100E76A44()
{
  _Block_release(*(const void **)(v0 + 24));

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_100E76A8C()
{
  uint64_t v2 = v0[2];
  uint64_t v3 = v0[3];
  uint64_t v4 = v0[4];
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v5;
  void *v5 = v1;
  v5[1] = sub_100528D08;
  uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_10169FA98 + dword_10169FA98);
  return v6(v2, v3, v4);
}

uint64_t sub_100E76B48(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  void *v5 = v2;
  v5[1] = sub_100528D08;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_10169FAC8 + dword_10169FAC8);
  return v6(a1, v4);
}

void sub_100E76C00(uint64_t a1)
{
  sub_100E66B04(a1, *(char **)(v1 + 16));
}

void sub_100E76C08()
{
  sub_100E67178(*(void **)(v0 + 16), *(char **)(v0 + 24));
}

uint64_t sub_100E76C10()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100E76C50()
{
  return sub_100E67320(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_100E76C5C(unint64_t a1, unint64_t a2)
{
  unint64_t v3 = a1 | a2;
  id v4 = (id)a1;
  id v5 = (id)a2;
  if (v3) {
    uint64_t v6 = (uint64_t)[v4 isEqual:v5];
  }
  else {
    uint64_t v6 = 1;
  }

  return v6;
}

void sub_100E76CC4()
{
}

uint64_t sub_100E76CCC()
{
  return sub_100E77AC4(48);
}

uint64_t sub_100E76CD4()
{
  _Block_release(*(const void **)(v0 + 16));

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100E76D0C()
{
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 48)) {
    swift_release();
  }

  return _swift_deallocObject(v0, 72, 7);
}

void sub_100E76D6C(int a1)
{
  sub_100E5B364(a1, *(id *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48), *(void *)(v1 + 56), *(void **)(v1 + 64));
}

uint64_t sub_100E76D80()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

id sub_100E76DA8()
{
  return [*(id *)(v0 + 16) endIgnoringUserInteractionSafely];
}

void sub_100E76DBC()
{
  sub_100E5A3DC(*(void *)(v0 + 16), *(void **)(v0 + 24));
}

void sub_100E76DC8()
{
  sub_100E59EE4(*(void *)(v0 + 16));
}

uint64_t sub_100E76DD4()
{
  swift_release();
  swift_unknownObjectRelease();

  return _swift_deallocObject(v0, 32, 7);
}

void sub_100E76E40(uint64_t a1)
{
  sub_100E52CE8(a1, *(void **)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t sub_100E76E4C()
{
  return sub_100E775C0((void (*)(void))&_swift_release, (void (*)(void))&_swift_bridgeObjectRelease);
}

void sub_100E76E78(uint64_t a1)
{
  sub_100E5230C(a1, v1[2], v1[3], v1[4]);
}

void sub_100E76E84()
{
}

id sub_100E76E8C()
{
  return [*(id *)(*(void *)(v0 + 16) + OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_canvasViewController) presentViewController:*(void *)(v0 + 24) animated:1 completion:0];
}

uint64_t sub_100E76EBC()
{
  return sub_100E77AC4(49);
}

uint64_t sub_100E76EC4(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v6 = *(void *)(v1 + 32);
  uint64_t v7 = *(void *)(v1 + 40);
  char v8 = *(unsigned char *)(v1 + 48);
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  void *v9 = v2;
  v9[1] = sub_100528D08;
  return sub_100E4F060(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_100E76F8C()
{
  return sub_100E77AC4(49);
}

uint64_t sub_100E76F94(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v6 = *(void *)(v1 + 32);
  uint64_t v7 = *(void *)(v1 + 40);
  char v8 = *(unsigned char *)(v1 + 48);
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  void *v9 = v2;
  v9[1] = sub_100528D08;
  return sub_100E4E238(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_100E7705C()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 88, 7);
}

uint64_t sub_100E770B4(uint64_t a1)
{
  uint64_t v4 = v1[3];
  uint64_t v12 = v1[2];
  uint64_t v5 = v1[4];
  uint64_t v6 = v1[5];
  uint64_t v7 = v1[6];
  uint64_t v8 = v1[7];
  uint64_t v9 = v1[8];
  id v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  *id v10 = v2;
  v10[1] = sub_100528D08;
  return sub_100E4D2A4(a1, v12, v4, v5, v6, v7, v8, v9);
}

uint64_t sub_100E771A8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

id sub_100E77210()
{
  return [*(id *)(v0 + 16) dismissViewControllerAnimated:1 completion:0];
}

uint64_t sub_100E77228@<X0>(unsigned char *a1@<X8>)
{
  return sub_1006FF6A0(a1);
}

void sub_100E77250()
{
}

void sub_100E77278()
{
}

uint64_t sub_100E77284()
{
  return sub_1007E7164(40);
}

void sub_100E7728C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unint64_t a7, uint64_t a8, unint64_t a9, char a10)
{
  if (a10 != 2)
  {
    sub_1005FA2A0(a6, a7);
    sub_1005FA2A0(a8, a9);
  }
}

void sub_100E772F0()
{
  sub_100E484B8(*(void *)(v0 + 16), v0 + 24);
}

uint64_t sub_100E77300()
{
  swift_unknownObjectRelease();

  unint64_t v1 = *(void *)(v0 + 88);
  if (v1 >> 60 != 15) {
    sub_100510084(*(void *)(v0 + 80), v1);
  }
  unint64_t v2 = *(void *)(v0 + 104);
  if (v2 >> 60 != 15) {
    sub_100510084(*(void *)(v0 + 96), v2);
  }

  return _swift_deallocObject(v0, 113, 7);
}

void sub_100E77370()
{
}

void sub_100E77378()
{
}

void sub_100E77380()
{
}

void sub_100E77388()
{
}

uint64_t sub_100E77394()
{
  swift_unknownObjectRelease();

  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_100E773DC()
{
  return sub_1007E7164(40);
}

uint64_t sub_100E773E4(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_100528D08;
  return sub_100E4A610(a1, v4, v5, v6);
}

uint64_t sub_100E7749C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100E6E5D8(*(void *)(v3 + 16), *(void *)(v3 + 24), a3, *(uint64_t (**)(uint64_t))(v3 + 32), *(void *)(v3 + 40), (uint64_t)&type metadata for CRLTipConnectionLinesOnSelection, (uint64_t (*)(uint64_t))sub_1005C6E70);
}

uint64_t sub_100E774D8()
{
  return sub_1007E7164(40);
}

uint64_t sub_100E774E0(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_100528D08;
  return sub_100E49BF8(a1, v4, v5, v6);
}

uint64_t sub_100E77594()
{
  return sub_100E775C0((void (*)(void))&_swift_unknownObjectRelease, (void (*)(void))&_swift_release);
}

uint64_t sub_100E775C0(void (*a1)(void), void (*a2)(void))
{
  a1(*(void *)(v2 + 16));
  a2(*(void *)(v2 + 32));

  return _swift_deallocObject(v2, 40, 7);
}

uint64_t sub_100E77618(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_100528D08;
  return sub_1005B1C20(a1, v4, v5, v6);
}

uint64_t sub_100E776D0()
{
  swift_release();
  unint64_t v1 = v0[9];
  if (v1 >> 60 != 15) {
    sub_100510084(v0[8], v1);
  }
  unint64_t v2 = v0[11];
  if (v2 >> 60 != 15) {
    sub_100510084(v0[10], v2);
  }

  return _swift_deallocObject(v0, 97, 7);
}

uint64_t sub_100E77738(uint64_t a1)
{
  return a1;
}

uint64_t sub_100E77788()
{
  if (*(void *)(v0 + 40)) {
    swift_release();
  }

  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_100E777D8()
{
  return sub_100E777F0((uint64_t (*)(void, void, void, void, void))sub_100E477D4);
}

uint64_t sub_100E777F0(uint64_t (*a1)(void, void, void, void, void))
{
  return a1(*(void *)(v1 + 16), *(void *)(v1 + 24), *(unsigned __int8 *)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48));
}

uint64_t sub_100E77808@<X0>(unsigned char *a1@<X8>)
{
  return sub_1006FF6A0(a1);
}

void sub_100E77830()
{
}

uint64_t sub_100E77858()
{
  return sub_100E560EC();
}

const char *sub_100E7787C()
{
  return "viewScale";
}

id sub_100E77888@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = [*a1 viewScale];
  *a2 = v4;
  return result;
}

id sub_100E778BC(double *a1, id *a2)
{
  return [*a2 setViewScale:*a1];
}

void sub_100E778D0()
{
}

void sub_100E778D8()
{
}

uint64_t sub_100E778E0()
{
  return sub_1007E7164(40);
}

uint64_t sub_100E778E8()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = sub_100528D08;
  return sub_100E445FC();
}

uint64_t sub_100E7799C()
{
  return sub_1007E7164(40);
}

uint64_t sub_100E779A4(char *a1)
{
  return sub_100E43168(a1, *(void **)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t sub_100E779AC(uint64_t *a1)
{
  return sub_100E43934(a1, v1);
}

uint64_t sub_100E779B4()
{
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_100E779FC(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v6 = v1[5];
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_100528D08;
  return sub_100E43A5C(a1, v4, v5, v7, v6);
}

uint64_t sub_100E77ABC()
{
  return sub_100E77AC4(49);
}

uint64_t sub_100E77AC4(uint64_t a1)
{
  swift_unknownObjectRelease();

  return _swift_deallocObject(v1, a1, 7);
}

uint64_t sub_100E77B18(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v6 = *(void *)(v1 + 32);
  uint64_t v7 = *(void *)(v1 + 40);
  char v8 = *(unsigned char *)(v1 + 48);
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  void *v9 = v2;
  v9[1] = sub_100528D08;
  return sub_100E43290(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_100E77BE0()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 48) & ~v3;
  unint64_t v5 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  if (*(void *)(v0 + v5)) {
    swift_release();
  }

  return _swift_deallocObject(v0, v5 + 16, v3 | 7);
}

uint64_t sub_100E77CC4()
{
  unint64_t v1 = (*(unsigned __int8 *)(*(void *)(v0[2] - 8) + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v0[2] - 8) + 80);
  uint64_t v2 = (char *)v0 + ((*(void *)(*(void *)(v0[2] - 8) + 64) + v1 + 7) & 0xFFFFFFFFFFFFFFF8);
  return sub_100E5C020(v0[4], v0[5], (uint64_t)v0 + v1, *(uint64_t (**)(uint64_t))v2, *((void *)v2 + 1), v0[2], v0[3]);
}

uint64_t sub_100E77D38()
{
  return sub_100E5CAA8(*(void *)(v0 + 16), *(void *)(v0 + 24), *(uint64_t (**)(uint64_t))(v0 + 32));
}

uint64_t sub_100E77D44()
{
  return sub_100E5D348();
}

uint64_t sub_100E77D50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100E6E5D8(*(void *)(v3 + 16), *(void *)(v3 + 24), a3, *(uint64_t (**)(uint64_t))(v3 + 32), *(void *)(v3 + 40), (uint64_t)&type metadata for CRLTipScenesEntryPointCompact, (uint64_t (*)(uint64_t))sub_1005C7550);
}

uint64_t sub_100E77D90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100E6E5D8(*(void *)(v3 + 16), *(void *)(v3 + 24), a3, *(uint64_t (**)(uint64_t))(v3 + 32), *(void *)(v3 + 40), (uint64_t)&type metadata for CRLTipScenesEntryPointFull, (uint64_t (*)(uint64_t))sub_1005C75A4);
}

uint64_t sub_100E77DCC()
{
  return sub_1007E7164(40);
}

uint64_t sub_100E77DD4(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_100528D08;
  return sub_100E408A4(a1, v4, v5, v6);
}

uint64_t sub_100E77E88(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_100E77EF0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

BOOL sub_100E77F50(void *a1)
{
  return sub_100E71F38(a1);
}

BOOL sub_100E77F6C(void *a1)
{
  return sub_100E71F58(a1);
}

BOOL sub_100E781A4()
{
  if (*(void *)(v0[2] + 16)) {
    return 0;
  }
  if (*(void *)(v0[3] + 16)) {
    return 0;
  }
  if (*(void *)(v0[4] + 16)) {
    return 0;
  }
  return *(void *)(v0[5] + 16) == 0;
}

uint64_t sub_100E781F4()
{
  v1[129] = v0;
  sub_1005057FC(&qword_10169FE70);
  v1[130] = swift_task_alloc();
  v1[131] = swift_task_alloc();
  v1[132] = swift_task_alloc();
  v1[133] = swift_task_alloc();
  uint64_t v2 = type metadata accessor for CRLBoardAuxiliaryRealTimeChangeRecord();
  v1[134] = v2;
  v1[135] = *(void *)(v2 - 8);
  v1[136] = swift_task_alloc();
  v1[137] = swift_task_alloc();
  v1[138] = swift_task_alloc();
  v1[139] = swift_task_alloc();
  return _swift_task_switch(sub_100E78334, v0, 0);
}

uint64_t sub_100E78334()
{
  unint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 1120) = v1;
  void *v1 = v0;
  v1[1] = sub_100E783C8;
  return sub_100E9594C();
}

uint64_t sub_100E783C8(uint64_t a1)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 1032);
  *(void *)(*(void *)v1 + 1128) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_100E784E0, v2, 0);
}

uint64_t sub_100E784E0()
{
  uint64_t v1 = (void *)v0[141];
  uint64_t v2 = v1[2];
  uint64_t v3 = *(void *)(v2 + 16);
  if (!v3)
  {
    uint64_t v33 = v1[3];
    uint64_t v34 = *(void *)(v33 + 16);
    if (v34)
    {
      v148 = _swiftEmptyArrayStorage;
      goto LABEL_19;
    }
    if (!*(void *)(v1[4] + 16) && !*(void *)(v1[5] + 16))
    {
      if (qword_10166FBA0 != -1) {
        swift_once();
      }
      swift_beginAccess();
      id v130 = (id)static OS_os_log.realTimeSync;
      uint64_t v131 = static os_log_type_t.info.getter();
      sub_100BAC898((uint64_t)v130, (uint64_t)&_mh_execute_header, v131, (uint64_t)"No changes to send over real-time channel. Nothing to do", 56, 2, (uint64_t)_swiftEmptyArrayStorage);

      swift_release();
      v147 = _swiftEmptyArrayStorage;
      v149 = _swiftEmptyArrayStorage;
      v125 = _swiftEmptyArrayStorage;
      v154 = _swiftEmptyArrayStorage;
      goto LABEL_71;
    }
    id v64 = _swiftEmptyArrayStorage;
    uint64_t v63 = _swiftEmptyArrayStorage;
    goto LABEL_37;
  }
  uint64_t v4 = (uint64_t)(v0 + 58);
  uint64_t v145 = *(void *)(v0[129] + 128);
  uint64_t v5 = v2 + 32;
  v135 = (void (**)(uint64_t, uint64_t, uint64_t, void))(v0[135] + 56);
  uint64_t v142 = type metadata accessor for PropertyListEncoder();
  swift_bridgeObjectRetain();
  v148 = _swiftEmptyArrayStorage;
  do
  {
    uint64_t v150 = v3;
    v0[61] = v142;
    v0[62] = &off_101530FC0;
    v0[58] = v145;
    sub_1005498A4(v5, (uint64_t)(v0 + 68));
    uint64_t v9 = v0[71];
    uint64_t v10 = v0[72];
    sub_10050F848(v0 + 68, v9);
    uint64_t v11 = *(unsigned __int8 (**)(uint64_t, uint64_t))(v10 + 24);
    swift_retain();
    if (v11(v9, v10) != 5) {
      goto LABEL_4;
    }
    sub_1005498A4((uint64_t)(v0 + 68), (uint64_t)(v0 + 63));
    sub_1005057FC(&qword_10169FE80);
    int v12 = swift_dynamicCast();
    uint64_t v13 = *v135;
    if (!v12)
    {
      uint64_t v6 = v0[133];
      v13(v6, 1, 1, v0[134]);
      sub_100E7A590(v6);
LABEL_4:
      uint64_t v7 = v0[71];
      uint64_t v8 = v0[72];
      sub_10050F848(v0 + 68, v7);
      uint64_t v18 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 32))(v4, v7, v8);
      uint64_t v20 = v19;
      uint64_t v21 = v0[71];
      uint64_t v22 = v0[72];
      sub_10050F848(v0 + 68, v21);
      unsigned __int8 v23 = (*(uint64_t (**)(uint64_t, uint64_t))(v22 + 24))(v21, v22);
      _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v4);
      goto LABEL_9;
    }
    uint64_t v14 = v0[139];
    uint64_t v15 = v0[133];
    v13(v15, 0, 1, v0[134]);
    sub_100E7A5F0(v15, v14);
    uint64_t v16 = sub_100644C44();
    uint64_t v17 = v0[139];
    uint64_t v18 = v16;
    uint64_t v20 = v24;
    uint64_t v25 = v0[71];
    uint64_t v26 = v0[72];
    sub_10050F848(v0 + 68, v25);
    unsigned __int8 v23 = (*(uint64_t (**)(uint64_t, uint64_t))(v26 + 24))(v25, v26);
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)(v0 + 58));
    uint64_t v27 = v17;
    uint64_t v4 = (uint64_t)(v0 + 58);
    sub_100E7A654(v27);
LABEL_9:
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)(v0 + 68));
    if (swift_isUniquelyReferenced_nonNull_native()) {
      id v28 = v148;
    }
    else {
      id v28 = sub_100F6347C(0, *((void *)v148 + 2) + 1, 1, v148);
    }
    unint64_t v30 = *((void *)v28 + 2);
    unint64_t v29 = *((void *)v28 + 3);
    if (v30 >= v29 >> 1) {
      id v28 = sub_100F6347C((double *)(v29 > 1), v30 + 1, 1, v28);
    }
    *((void *)v28 + 2) = v30 + 1;
    v148 = v28;
    CKRecordID v31 = &v28[3 * v30];
    *((void *)v31 + 4) = v23;
    *((void *)v31 + 5) = v18;
    *((void *)v31 + 6) = v20;
    v5 += 40;
    --v3;
  }
  while (v150 != 1);
  uint64_t v32 = v0[141];
  swift_bridgeObjectRelease();
  uint64_t v33 = *(void *)(v32 + 24);
  uint64_t v34 = *(void *)(v33 + 16);
  if (v34)
  {
LABEL_19:
    uint64_t v35 = (uint64_t)(v0 + 48);
    uint64_t v143 = *(void *)(v0[129] + 128);
    uint64_t v36 = v33 + 32;
    v133 = (void (**)(uint64_t, uint64_t, uint64_t, void))(v0[135] + 56);
    uint64_t v139 = type metadata accessor for PropertyListEncoder();
    swift_bridgeObjectRetain();
    v146 = _swiftEmptyArrayStorage;
    while (1)
    {
      uint64_t v151 = v34;
      v0[51] = v139;
      v0[52] = &off_101530FC0;
      v0[48] = v143;
      sub_1005498A4(v36, (uint64_t)(v0 + 53));
      uint64_t v40 = v0[56];
      uint64_t v41 = v0[57];
      sub_10050F848(v0 + 53, v40);
      double v42 = *(unsigned __int8 (**)(uint64_t, uint64_t))(v41 + 24);
      swift_retain();
      if (v42(v40, v41) == 5)
      {
        sub_1005498A4((uint64_t)(v0 + 53), (uint64_t)(v0 + 38));
        sub_1005057FC(&qword_10169FE80);
        int v43 = swift_dynamicCast();
        double v44 = *v133;
        if (v43)
        {
          uint64_t v45 = v0[138];
          uint64_t v46 = v0[132];
          v44(v46, 0, 1, v0[134]);
          sub_100E7A5F0(v46, v45);
          uint64_t v47 = sub_100644C44();
          uint64_t v48 = v0[138];
          uint64_t v49 = v47;
          uint64_t v51 = v55;
          uint64_t v56 = v0[56];
          uint64_t v57 = v0[57];
          sub_10050F848(v0 + 53, v56);
          unsigned __int8 v54 = (*(uint64_t (**)(uint64_t, uint64_t))(v57 + 24))(v56, v57);
          _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)(v0 + 48));
          uint64_t v58 = v48;
          uint64_t v35 = (uint64_t)(v0 + 48);
          sub_100E7A654(v58);
          goto LABEL_26;
        }
        uint64_t v37 = v0[132];
        v44(v37, 1, 1, v0[134]);
        sub_100E7A590(v37);
      }
      uint64_t v38 = v0[56];
      uint64_t v39 = v0[57];
      sub_10050F848(v0 + 53, v38);
      uint64_t v49 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v39 + 32))(v35, v38, v39);
      uint64_t v51 = v50;
      uint64_t v52 = v0[56];
      uint64_t v53 = v0[57];
      sub_10050F848(v0 + 53, v52);
      unsigned __int8 v54 = (*(uint64_t (**)(uint64_t, uint64_t))(v53 + 24))(v52, v53);
      _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v35);
LABEL_26:
      _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)(v0 + 53));
      if (swift_isUniquelyReferenced_nonNull_native()) {
        char v59 = v146;
      }
      else {
        char v59 = sub_100F6347C(0, *((void *)v146 + 2) + 1, 1, v146);
      }
      unint64_t v61 = *((void *)v59 + 2);
      unint64_t v60 = *((void *)v59 + 3);
      if (v61 >= v60 >> 1) {
        char v59 = sub_100F6347C((double *)(v60 > 1), v61 + 1, 1, v59);
      }
      *((void *)v59 + 2) = v61 + 1;
      v146 = v59;
      uint64_t v62 = &v59[3 * v61];
      *((void *)v62 + 4) = v54;
      *((void *)v62 + 5) = v49;
      *((void *)v62 + 6) = v51;
      v36 += 40;
      --v34;
      if (v151 == 1)
      {
        swift_bridgeObjectRelease();
        uint64_t v63 = v146;
        id v64 = v148;
        goto LABEL_37;
      }
    }
  }
  uint64_t v63 = _swiftEmptyArrayStorage;
  id v64 = v148;
LABEL_37:
  uint64_t v65 = v0[141];
  uint64_t v66 = *(void *)(v65 + 32);
  uint64_t v67 = *(void *)(v66 + 16);
  v147 = v63;
  v149 = v64;
  if (v67)
  {
    uint64_t v137 = (uint64_t)(v0 + 78);
    uint64_t v152 = *(void *)(v0[129] + 128);
    uint64_t v68 = v66 + 32;
    v134 = (void (**)(uint64_t, uint64_t, uint64_t, void))(v0[135] + 56);
    uint64_t v140 = type metadata accessor for PropertyListEncoder();
    swift_bridgeObjectRetain();
    v144 = _swiftEmptyArrayStorage;
    while (1)
    {
      v0[81] = v140;
      v0[82] = &off_101530FC0;
      v0[78] = v152;
      sub_1005498A4(v68, (uint64_t)(v0 + 83));
      uint64_t v72 = v0[86];
      uint64_t v73 = v0[87];
      sub_10050F848(v0 + 83, v72);
      uint64_t v74 = *(unsigned __int8 (**)(uint64_t, uint64_t))(v73 + 24);
      swift_retain();
      if (v74(v72, v73) == 5)
      {
        sub_1005498A4((uint64_t)(v0 + 83), (uint64_t)(v0 + 43));
        sub_1005057FC(&qword_10169FE80);
        int v75 = swift_dynamicCast();
        uint64_t v76 = *v134;
        if (v75)
        {
          uint64_t v77 = v0[137];
          uint64_t v78 = v0[131];
          v76(v78, 0, 1, v0[134]);
          sub_100E7A5F0(v78, v77);
          uint64_t v79 = sub_100644C44();
          uint64_t v80 = v0[137];
          uint64_t v81 = v79;
          uint64_t v83 = v87;
          uint64_t v88 = v0[86];
          uint64_t v89 = v0[87];
          sub_10050F848(v0 + 83, v88);
          unsigned __int8 v86 = (*(uint64_t (**)(uint64_t, uint64_t))(v89 + 24))(v88, v89);
          _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v137);
          sub_100E7A654(v80);
          goto LABEL_45;
        }
        uint64_t v69 = v0[131];
        v76(v69, 1, 1, v0[134]);
        sub_100E7A590(v69);
      }
      uint64_t v70 = v0[86];
      uint64_t v71 = v0[87];
      sub_10050F848(v0 + 83, v70);
      uint64_t v81 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v71 + 32))(v137, v70, v71);
      uint64_t v83 = v82;
      uint64_t v84 = v0[86];
      uint64_t v85 = v0[87];
      sub_10050F848(v0 + 83, v84);
      unsigned __int8 v86 = (*(uint64_t (**)(uint64_t, uint64_t))(v85 + 24))(v84, v85);
      _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v137);
LABEL_45:
      _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)(v0 + 83));
      if (swift_isUniquelyReferenced_nonNull_native()) {
        uint64_t v90 = v144;
      }
      else {
        uint64_t v90 = sub_100F6347C(0, *((void *)v144 + 2) + 1, 1, v144);
      }
      unint64_t v92 = *((void *)v90 + 2);
      unint64_t v91 = *((void *)v90 + 3);
      if (v92 >= v91 >> 1) {
        uint64_t v90 = sub_100F6347C((double *)(v91 > 1), v92 + 1, 1, v90);
      }
      *((void *)v90 + 2) = v92 + 1;
      v144 = v90;
      uint64_t v93 = &v90[3 * v92];
      *((void *)v93 + 4) = v86;
      *((void *)v93 + 5) = v81;
      *((void *)v93 + 6) = v83;
      v68 += 40;
      if (!--v67)
      {
        swift_bridgeObjectRelease();
        uint64_t v65 = v0[141];
        uint64_t v63 = v147;
        id v64 = v149;
        goto LABEL_53;
      }
    }
  }
  v144 = _swiftEmptyArrayStorage;
LABEL_53:
  uint64_t v94 = *(void *)(v65 + 40);
  uint64_t v95 = *(void *)(v94 + 16);
  if (!v95)
  {
    v97 = _swiftEmptyArrayStorage;
    goto LABEL_68;
  }
  uint64_t v136 = (uint64_t)(v0 + 88);
  uint64_t v141 = *(void *)(v0[129] + 128);
  uint64_t v96 = v94 + 32;
  v132 = (void (**)(uint64_t, uint64_t, uint64_t, void))(v0[135] + 56);
  uint64_t v138 = type metadata accessor for PropertyListEncoder();
  swift_bridgeObjectRetain();
  v97 = _swiftEmptyArrayStorage;
  while (2)
  {
    v153 = v97;
    v0[91] = v138;
    v0[92] = &off_101530FC0;
    v0[88] = v141;
    sub_1005498A4(v96, (uint64_t)(v0 + 73));
    uint64_t v101 = v0[76];
    uint64_t v102 = v0[77];
    sub_10050F848(v0 + 73, v101);
    v103 = *(unsigned __int8 (**)(uint64_t, uint64_t))(v102 + 24);
    swift_retain();
    if (v103(v101, v102) != 5) {
      goto LABEL_56;
    }
    sub_1005498A4((uint64_t)(v0 + 73), (uint64_t)(v0 + 93));
    sub_1005057FC(&qword_10169FE80);
    int v104 = swift_dynamicCast();
    v105 = *v132;
    if (!v104)
    {
      uint64_t v98 = v0[130];
      v105(v98, 1, 1, v0[134]);
      sub_100E7A590(v98);
LABEL_56:
      uint64_t v99 = v0[76];
      uint64_t v100 = v0[77];
      sub_10050F848(v0 + 73, v99);
      uint64_t v110 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v100 + 32))(v136, v99, v100);
      uint64_t v112 = v111;
      uint64_t v113 = v0[76];
      uint64_t v114 = v0[77];
      sub_10050F848(v0 + 73, v113);
      unsigned __int8 v115 = (*(uint64_t (**)(uint64_t, uint64_t))(v114 + 24))(v113, v114);
      _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v136);
      v97 = v153;
      goto LABEL_61;
    }
    uint64_t v106 = v0[136];
    uint64_t v107 = v0[130];
    v105(v107, 0, 1, v0[134]);
    sub_100E7A5F0(v107, v106);
    uint64_t v108 = sub_100644C44();
    uint64_t v109 = v0[136];
    uint64_t v112 = v116;
    uint64_t v117 = v0[76];
    uint64_t v118 = v108;
    uint64_t v119 = v0[77];
    sub_10050F848(v0 + 73, v117);
    v120 = *(uint64_t (**)(uint64_t, uint64_t))(v119 + 24);
    uint64_t v121 = v119;
    uint64_t v110 = v118;
    v97 = v153;
    unsigned __int8 v115 = v120(v117, v121);
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v136);
    sub_100E7A654(v109);
LABEL_61:
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)(v0 + 73));
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      v97 = sub_100F6347C(0, *((void *)v97 + 2) + 1, 1, v97);
    }
    unint64_t v123 = *((void *)v97 + 2);
    unint64_t v122 = *((void *)v97 + 3);
    if (v123 >= v122 >> 1) {
      v97 = sub_100F6347C((double *)(v122 > 1), v123 + 1, 1, v97);
    }
    *((void *)v97 + 2) = v123 + 1;
    v124 = &v97[3 * v123];
    *((void *)v124 + 4) = v115;
    *((void *)v124 + 5) = v110;
    *((void *)v124 + 6) = v112;
    v96 += 40;
    if (--v95) {
      continue;
    }
    break;
  }
  swift_bridgeObjectRelease();
  uint64_t v63 = v147;
  id v64 = v149;
LABEL_68:
  if (*(unsigned char *)(v0[129] + 144) == 1)
  {
    swift_release();
    v125 = v144;
    v154 = v97;
  }
  else
  {
    sub_1006E38F0((uint64_t)v63);
    v147 = v64;
    swift_bridgeObjectRetain();
    uint64_t v126 = swift_bridgeObjectRetain();
    sub_1006E38F0(v126);
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v154 = v144;
    v125 = _swiftEmptyArrayStorage;
    v149 = _swiftEmptyArrayStorage;
  }
LABEL_71:
  sub_1005057FC(&qword_10169FE78);
  v127 = (void *)swift_allocObject();
  v127[2] = v149;
  v127[3] = v147;
  v127[4] = v125;
  v127[5] = v154;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  v128 = (uint64_t (*)(void *))v0[1];
  return v128(v127);
}

uint64_t sub_100E79978(uint64_t a1, uint64_t a2)
{
  v3[22] = a2;
  v3[23] = v2;
  v3[21] = a1;
  return _swift_task_switch(sub_100E7999C, v2, 0);
}

uint64_t sub_100E7999C()
{
  uint64_t v1 = _swiftEmptyArrayStorage;
  v0[20] = _swiftEmptyArrayStorage;
  uint64_t v2 = (double **)(v0 + 20);
  uint64_t v3 = *(void *)(v0[21] + 24);
  uint64_t v4 = *(void *)(v3 + 16);
  if (v4)
  {
    uint64_t v5 = v0 + 2;
    uint64_t v6 = v0 + 7;
    uint64_t v27 = (uint64_t)(v0 + 12);
    uint64_t v29 = *(void *)(v0[23] + 136);
    uint64_t v28 = type metadata accessor for PropertyListDecoder();
    swift_bridgeObjectRetain();
    unsigned __int8 v23 = v0 + 20;
    uint64_t v7 = (unint64_t *)(v3 + 48);
    uint64_t v24 = v0 + 7;
    uint64_t v25 = (uint64_t)(v0 + 2);
    do
    {
      unint64_t v8 = *(v7 - 2);
      uint64_t v9 = *(v7 - 1);
      unint64_t v10 = *v7;
      v0[10] = v28;
      v0[11] = &off_101530FD0;
      v0[7] = v29;
      sub_100510D4C(v9, v10);
      swift_retain();
      sub_100E79E58(v6, v8, v9, v10, v5);
      _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v6);
      sub_1005498A4((uint64_t)v5, v27);
      uint64_t v11 = *v2;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        uint64_t v11 = sub_100F635D8(0, *((void *)v11 + 2) + 1, 1, v11);
        *uint64_t v2 = v11;
      }
      unint64_t v13 = *((void *)v11 + 2);
      unint64_t v12 = *((void *)v11 + 3);
      if (v13 >= v12 >> 1) {
        *uint64_t v2 = sub_100F635D8((double *)(v12 > 1), v13 + 1, 1, v11);
      }
      uint64_t v14 = v0[15];
      uint64_t v26 = v0[16];
      uint64_t v15 = sub_1005231B4(v27, v14);
      uint64_t v16 = v0;
      uint64_t v17 = *(void *)(v14 - 8);
      uint64_t v18 = swift_task_alloc();
      uint64_t v19 = v15;
      uint64_t v2 = (double **)v23;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 16))(v18, v19, v14);
      uint64_t v0 = v16;
      sub_100667930(v13, v18, v23, v14, v26);
      _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v27);
      swift_task_dealloc();
      sub_100510084(v9, v10);
      uint64_t v5 = (uint64_t *)v25;
      _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v25);
      uint64_t v6 = v24;
      v7 += 3;
      --v4;
    }
    while (v4);
    swift_bridgeObjectRelease();
    uint64_t v1 = (double *)*v23;
  }
  v0[24] = v1;
  uint64_t v20 = (void *)swift_task_alloc();
  v0[25] = v20;
  *uint64_t v20 = v0;
  v20[1] = sub_100E79D18;
  uint64_t v21 = v0[22];
  return sub_100E95070((uint64_t)v1, v21);
}

uint64_t sub_100E79D18()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 184);
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return _swift_task_switch(sub_100E79E44, v1, 0);
}

uint64_t sub_100E79E44()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100E79E58@<X0>(void *a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, unint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  unsigned __int8 v10 = sub_100A5EAF4(a2);
  switch(v10)
  {
    case 1u:
      uint64_t v16 = a1[3];
      uint64_t v17 = a1[4];
      sub_10050F848(a1, v16);
      uint64_t v18 = type metadata accessor for CRLBoardItemRealTimeChangeRecord();
      uint64_t v38 = v5;
      uint64_t v36 = *(uint64_t (**)(uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v17 + 8);
      a5[3] = v18;
      uint64_t v19 = type metadata accessor for CRLBoardItemRealTimeChangeRecord;
      a5[4] = sub_100E7A548(&qword_1016816B8, (void (*)(uint64_t))type metadata accessor for CRLBoardItemRealTimeChangeRecord);
      uint64_t v20 = (unint64_t *)&unk_1016816C0;
      goto LABEL_8;
    case 2u:
      uint64_t v16 = a1[3];
      uint64_t v17 = a1[4];
      sub_10050F848(a1, v16);
      uint64_t v18 = type metadata accessor for CRLTombstoneBoardItemRealTimeChangeRecord();
      uint64_t v38 = v5;
      uint64_t v36 = *(uint64_t (**)(uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v17 + 8);
      a5[3] = v18;
      uint64_t v19 = type metadata accessor for CRLTombstoneBoardItemRealTimeChangeRecord;
      a5[4] = sub_100E7A548(&qword_1016816B0, (void (*)(uint64_t))type metadata accessor for CRLTombstoneBoardItemRealTimeChangeRecord);
      uint64_t v20 = &qword_101671E30;
      goto LABEL_8;
    case 3u:
      uint64_t v21 = a1[4];
      uint64_t v37 = a1[3];
      sub_10050F848(a1, v37);
      uint64_t v22 = type metadata accessor for CRLBoardAuxiliaryRealTimeChangeRecordLegacy();
      uint64_t v34 = *(uint64_t (**)(uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v21 + 8);
      a5[3] = v22;
      a5[4] = sub_100E7A548(&qword_1016816A0, (void (*)(uint64_t))type metadata accessor for CRLBoardAuxiliaryRealTimeChangeRecordLegacy);
      sub_1005767BC(a5);
      uint64_t v23 = sub_100E7A548(&qword_1016816A8, (void (*)(uint64_t))type metadata accessor for CRLBoardAuxiliaryRealTimeChangeRecordLegacy);
      uint64_t result = v34(v22, a3, a4, v22, v23, v37, v21);
      goto LABEL_9;
    case 4u:
      uint64_t v16 = a1[3];
      uint64_t v17 = a1[4];
      sub_10050F848(a1, v16);
      uint64_t v18 = type metadata accessor for CRLSharePlayRealTimeChangeRecord();
      uint64_t v38 = v5;
      uint64_t v36 = *(uint64_t (**)(uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v17 + 8);
      a5[3] = v18;
      uint64_t v19 = type metadata accessor for CRLSharePlayRealTimeChangeRecord;
      a5[4] = sub_100E7A548(&qword_101681690, (void (*)(uint64_t))type metadata accessor for CRLSharePlayRealTimeChangeRecord);
      uint64_t v20 = (unint64_t *)&unk_101681698;
LABEL_8:
      uint64_t v24 = sub_100E7A548(v20, (void (*)(uint64_t))v19);
      uint64_t v5 = v38;
      uint64_t result = v36(v18, a3, a4, v18, v24, v16, v17);
LABEL_9:
      if (v5) {
        goto LABEL_10;
      }
      return result;
    case 5u:
      a5[3] = type metadata accessor for CRLBoardAuxiliaryRealTimeChangeRecord();
      a5[4] = sub_100E7A548(&qword_101677D20, (void (*)(uint64_t))type metadata accessor for CRLBoardAuxiliaryRealTimeChangeRecord);
      uint64_t v32 = sub_1005767BC(a5);
      sub_100510D4C(a3, a4);
      uint64_t result = sub_100644668(a3, a4, (uint64_t)v32);
      if (!v5) {
        return result;
      }
      goto LABEL_10;
    case 6u:
      sub_1007DC5DC();
      swift_allocError();
      unsigned char *v33 = 0;
      return swift_willThrow();
    default:
      uint64_t v12 = a1[3];
      uint64_t v11 = a1[4];
      sub_10050F848(a1, v12);
      uint64_t v13 = type metadata accessor for CRLBoardRealTimeChangeRecord();
      uint64_t v35 = *(uint64_t (**)(uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 8);
      a5[3] = v13;
      a5[4] = sub_100E7A548(&qword_1016816C8, (void (*)(uint64_t))type metadata accessor for CRLBoardRealTimeChangeRecord);
      uint64_t v14 = sub_100E7A548(&qword_1016816D0, (void (*)(uint64_t))type metadata accessor for CRLBoardRealTimeChangeRecord);
      uint64_t result = v35(v13, a3, a4, v13, v14, v12, v11);
      if (!v5) {
        return result;
      }
LABEL_10:
      sub_1007DC630((uint64_t)a5);
      sub_1005057FC((uint64_t *)&unk_101672B40);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_10117DF40;
      *(void *)(inited + 56) = &type metadata for Int;
      *(void *)(inited + 64) = &protocol witness table for Int;
      *(void *)(inited + 32) = v10;
      swift_getErrorValue();
      uint64_t v26 = Error.fullDescription.getter(v41);
      uint64_t v28 = v27;
      *(void *)(inited + 96) = &type metadata for String;
      unint64_t v29 = sub_100528BE4();
      *(void *)(inited + 104) = v29;
      *(void *)(inited + 72) = v26;
      *(void *)(inited + 80) = v28;
      swift_getErrorValue();
      uint64_t v30 = Error.publicDescription.getter(v39, v40);
      *(void *)(inited + 136) = &type metadata for String;
      *(void *)(inited + 144) = v29;
      *(void *)(inited + 112) = v30;
      *(void *)(inited + 120) = v31;
      sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"createRealTimeChangeRecord(decoder:)", 36, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Sync/RealTime/CRLBoardRealTimeSyncDataSource.swift", 104, 2, 153, (uint64_t)"Failed to decode real time change record of payloadType %{public}d with error %@ %{public}@", 91, 2u, inited);
      sub_1005598CC(inited, (uint64_t)"createRealTimeChangeRecord(decoder:)", 36, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Sync/RealTime/CRLBoardRealTimeSyncDataSource.swift", 104, 2, 153);
      swift_setDeallocating();
      sub_1005057FC(&qword_101672B50);
      swift_arrayDestroy();
      return swift_willThrow();
  }
}

uint64_t sub_100E7A494()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  swift_defaultActor_destroy();

  return swift_defaultActor_deallocate();
}

uint64_t sub_100E7A4DC()
{
  return dispatch thunk of PropertyListEncoder.encode<A>(_:)();
}

uint64_t sub_100E7A500()
{
  return dispatch thunk of PropertyListDecoder.decode<A>(_:from:)();
}

uint64_t type metadata accessor for CRLBoardRealTimeSyncDataSource()
{
  return self;
}

uint64_t sub_100E7A548(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100E7A590(uint64_t a1)
{
  uint64_t v2 = sub_1005057FC(&qword_10169FE70);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100E7A5F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CRLBoardAuxiliaryRealTimeChangeRecord();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100E7A654(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for CRLBoardAuxiliaryRealTimeChangeRecord();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_100E7A6B4()
{
  unint64_t result = qword_10169FE88;
  if (!qword_10169FE88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10169FE88);
  }
  return result;
}

unint64_t sub_100E7A70C()
{
  unint64_t result = qword_10169FE90;
  if (!qword_10169FE90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10169FE90);
  }
  return result;
}

uint64_t sub_100E7A760()
{
  return *(void *)(swift_getOpaqueTypeConformance2() + 8);
}

uint64_t sub_100E7A794()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100E7A7B0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v70 = a1;
  uint64_t v1 = sub_1005057FC(&qword_101678470);
  __chkstk_darwin(v1 - 8, v2);
  id v64 = &v50[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v69 = type metadata accessor for InputConnectionBehavior();
  uint64_t v72 = *(void *)(v69 - 8);
  __chkstk_darwin(v69, v4);
  uint64_t v68 = &v50[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = sub_1005057FC(&qword_101673B38);
  __chkstk_darwin(v6 - 8, v7);
  uint64_t v63 = &v50[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v9, v10);
  uint64_t v66 = &v50[-v11];
  uint64_t v12 = sub_1005057FC(&qword_101691F20);
  __chkstk_darwin(v12 - 8, v13);
  uint64_t v65 = &v50[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v15 = sub_1005057FC(&qword_101673B40);
  __chkstk_darwin(v15 - 8, v16);
  uint64_t v18 = &v50[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v19 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v20 = *(void *)(v19 - 8);
  __chkstk_darwin(v19, v21);
  uint64_t v23 = &v50[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v24 = type metadata accessor for Locale();
  __chkstk_darwin(v24 - 8, v25);
  uint64_t v26 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v26 - 8, v27);
  uint64_t v67 = type metadata accessor for LocalizedStringResource();
  uint64_t v71 = *(void *)(v67 - 8);
  __chkstk_darwin(v67, v28);
  __chkstk_darwin(v29, v30);
  unint64_t v60 = &v50[-v31];
  uint64_t v62 = sub_1005057FC(&qword_101673B48);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t v32 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  uint64_t v34 = v20 + 104;
  uint64_t v33 = *(void (**)(unsigned char *, uint64_t, uint64_t))(v20 + 104);
  v33(v23, enum case for LocalizedStringResource.BundleDescription.main(_:), v19);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  unsigned int v51 = v32;
  uint64_t v52 = v19;
  v33(v23, v32, v19);
  uint64_t v54 = v34;
  uint64_t v53 = v33;
  uint64_t v55 = v18;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  uint64_t v35 = *(void (**)(unsigned char *, void, uint64_t, uint64_t))(v71 + 56);
  v71 += 56;
  unint64_t v61 = v35;
  v35(v18, 0, 1, v67);
  uint64_t v36 = type metadata accessor for CRLBoardEntity();
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v36 - 8) + 56))(v65, 1, 1, v36);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  v33(v23, v32, v19);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  uint64_t v37 = v66;
  IntentDialog.init(_:)();
  uint64_t v38 = type metadata accessor for IntentDialog();
  uint64_t v39 = *(void *)(v38 - 8);
  uint64_t v40 = *(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v39 + 56);
  uint64_t v59 = v39 + 56;
  uint64_t v58 = v40;
  v40(v37, 0, 1, v38);
  v40(v63, 1, 1, v38);
  unsigned int v56 = enum case for InputConnectionBehavior.default(_:);
  uint64_t v41 = *(void (**)(void))(v72 + 104);
  v72 += 104;
  uint64_t v57 = (void (*)(unsigned char *, void, uint64_t))v41;
  v41(v68);
  sub_100E7D958((unint64_t *)&qword_101673B60, (void (*)(uint64_t))type metadata accessor for CRLBoardEntity);
  double v42 = v55;
  *uint64_t v70 = IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:)();
  uint64_t v65 = (unsigned char *)sub_1005057FC(&qword_101678478);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t v43 = v51;
  uint64_t v44 = v52;
  uint64_t v45 = v53;
  v53(v23, v51, v52);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  v45(v23, v43, v44);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  v61(v42, 0, 1, v67);
  uint64_t v46 = type metadata accessor for AttributedString();
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 56))(v64, 1, 1, v46);
  v58(v66, 1, 1, v38);
  v57(v68, v56, v69);
  uint64_t v47 = IntentParameter<>.init(title:description:default:requestValueDialog:inputConnectionBehavior:)();
  uint64_t v48 = v70;
  v70[1] = v47;
  sub_1005057FC(&qword_101673B50);
  unint64_t v73 = 0xD00000000000001FLL;
  unint64_t v74 = 0x800000010123B260;
  AnyHashable.init<A>(_:)();
  type metadata accessor for AppDependencyManager();
  static AppDependencyManager.shared.getter();
  uint64_t result = AppDependency.__allocating_init(key:manager:)();
  v48[2] = result;
  v48[6] = (uint64_t)&type metadata for CRLBoardItemInsertionPerformer;
  v48[7] = (uint64_t)&off_101527730;
  return result;
}

uint64_t sub_100E7B164(uint64_t a1)
{
  v2[12] = a1;
  v2[13] = v1;
  sub_1005057FC(&qword_101678470);
  v2[14] = swift_task_alloc();
  v2[15] = type metadata accessor for CRLBoardEntity();
  v2[16] = swift_task_alloc();
  v2[17] = swift_task_alloc();
  uint64_t v3 = type metadata accessor for Logger();
  v2[18] = v3;
  v2[19] = *(void *)(v3 - 8);
  v2[20] = swift_task_alloc();
  return _swift_task_switch(sub_100E7B294, 0, 0);
}

uint64_t sub_100E7B294()
{
  if (qword_10166FB50 != -1) {
    swift_once();
  }
  swift_beginAccess();
  id v1 = (id)static OS_os_log.appIntents;
  Logger.init(_:)();
  IntentParameter.wrappedValue.getter();
  IntentParameter.wrappedValue.getter();
  AppDependency.wrappedValue.getter();
  v0[5] = &type metadata for CRLBoardLibraryProvidingDependency;
  v0[6] = &off_10152F800;
  uint64_t v6 = (char *)&dword_1016966C0 + dword_1016966C0;
  uint64_t v2 = (void *)swift_task_alloc();
  v0[21] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_100E7B3FC;
  uint64_t v3 = v0[17];
  uint64_t v4 = v0[14];
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, void *))v6)(7, v3, v4, v0 + 2);
}

uint64_t sub_100E7B3FC(void *a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 176) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = *(void *)(v4 + 136);
    sub_10065ABCC(*(void *)(v4 + 112));
    sub_1005F6324(v5);
    uint64_t v6 = sub_100E7B6B0;
  }
  else
  {
    uint64_t v7 = v4 + 16;
    uint64_t v8 = *(void *)(v4 + 136);
    uint64_t v9 = *(void *)(v4 + 112);

    sub_10065ABCC(v9);
    sub_1005F6324(v8);
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v7);
    uint64_t v6 = sub_100E7B558;
  }
  return _swift_task_switch(v6, 0, 0);
}

uint64_t sub_100E7B558()
{
  uint64_t v1 = v0[19];
  uint64_t v2 = v0[20];
  uint64_t v3 = v0[18];
  uint64_t v4 = v0[16];
  IntentParameter.wrappedValue.getter();
  v0[11] = IntentParameter.projectedValue.getter();
  sub_100E7D958((unint64_t *)&qword_101675F88, (void (*)(uint64_t))type metadata accessor for CRLBoardEntity);
  sub_1005F6380();
  static IntentResult.result<A, B>(value:opensIntent:)();
  swift_release();
  sub_1005F6324(v4);
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v2, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

uint64_t sub_100E7B6B0()
{
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)(v0 + 2));
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    uint64_t v4 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v3 = 138412290;
    swift_errorRetain();
    uint64_t v5 = _swift_stdlib_bridgeErrorToNSError();
    v0[10] = v5;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v4 = v5;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "Error inserting text: %@", v3, 0xCu);
    sub_1005057FC(&qword_101678028);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_errorRelease();
    swift_errorRelease();
  }
  uint64_t v7 = v0[19];
  uint64_t v6 = v0[20];
  uint64_t v8 = v0[18];
  type metadata accessor for _PrebuiltAppIntentError();
  sub_100E7D958((unint64_t *)&qword_101678490, (void (*)(uint64_t))&type metadata accessor for _PrebuiltAppIntentError);
  swift_allocError();
  static _UnrecoverableError.unknownError.getter();
  swift_willThrow();
  swift_errorRelease();
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v9 = (uint64_t (*)(void))v0[1];
  return v9();
}

uint64_t sub_100E7B924(uint64_t a1)
{
  return sub_100E7BDD8(a1, qword_10171CA08);
}

uint64_t sub_100E7B944()
{
  uint64_t v0 = sub_1005057FC(&qword_10169FF40);
  __chkstk_darwin(v0 - 8, v1);
  uint64_t v2 = sub_1005057FC(&qword_10169FF48);
  __chkstk_darwin(v2, v3);
  sub_100E7D904();
  ParameterSummaryString.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v4._object = (void *)0x80000001012917F0;
  v4._countAndFlagsBits = 0xD000000000000012;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v4);
  swift_getKeyPath();
  sub_1005057FC(&qword_10169FF50);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)();
  swift_release();
  v5._countAndFlagsBits = 544175136;
  v5._object = (void *)0xE400000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v5);
  swift_getKeyPath();
  sub_1005057FC(&qword_10169FF58);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)();
  swift_release();
  v6._countAndFlagsBits = 0;
  v6._object = (void *)0xE000000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v6);
  ParameterSummaryString.init(stringInterpolation:)();
  return IntentParameterSummary.init(_:table:)();
}

uint64_t sub_100E7BB34()
{
  return IntentParameter.wrappedValue.getter();
}

uint64_t sub_100E7BB58()
{
  IntentParameter.wrappedValue.getter();
  return v1;
}

uint64_t sub_100E7BB8C()
{
  return IntentParameter.projectedValue.getter();
}

uint64_t sub_100E7BBB0@<X0>(uint64_t a1@<X8>)
{
  return sub_100568398(&qword_101670160, (uint64_t)qword_10171CA08, a1);
}

uint64_t sub_100E7BBD8(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  void *v3 = v1;
  v3[1] = sub_100528488;
  return sub_100E7B164(a1);
}

uint64_t sub_100E7BC74(uint64_t a1)
{
  unint64_t v2 = sub_100E7D904();

  return static AppIntent.persistentIdentifier.getter(a1, v2);
}

unint64_t sub_100E7BCB4()
{
  unint64_t result = qword_10169FEA0;
  if (!qword_10169FEA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10169FEA0);
  }
  return result;
}

unint64_t sub_100E7BD0C()
{
  unint64_t result = qword_10169FEA8;
  if (!qword_10169FEA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10169FEA8);
  }
  return result;
}

uint64_t sub_100E7BD60()
{
  return *(void *)(swift_getOpaqueTypeConformance2() + 8);
}

uint64_t sub_100E7BD94()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100E7BDB0(uint64_t a1)
{
  return sub_100E7BDD8(a1, qword_10171CA20);
}

uint64_t sub_100E7BDD8(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3, v5);
  uint64_t v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for Locale();
  __chkstk_darwin(v8 - 8, v9);
  uint64_t v10 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v10 - 8, v11);
  uint64_t v12 = type metadata accessor for LocalizedStringResource();
  sub_100568B28(v12, a2);
  sub_100556B74(v12, (uint64_t)a2);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v7, enum case for LocalizedStringResource.BundleDescription.main(_:), v3);
  return LocalizedStringResource.init(_:table:locale:bundle:comment:)();
}

uint64_t sub_100E7BFCC@<X0>(uint64_t a1@<X8>)
{
  v20[1] = a1;
  uint64_t v1 = sub_1005057FC(&qword_10169FF08);
  __chkstk_darwin(v1 - 8, v2);
  uint64_t v3 = sub_1005057FC(&qword_10169FF10);
  __chkstk_darwin(v3, v4);
  uint64_t v5 = sub_1005057FC(&qword_10169FEF0);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5, v7);
  uint64_t v9 = (char *)v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10, v11);
  uint64_t v13 = (char *)v20 - v12;
  sub_100E7D82C();
  ParameterSummaryString.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v14._countAndFlagsBits = 0x20747265736E49;
  v14._object = (void *)0xE700000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v14);
  swift_getKeyPath();
  sub_1005057FC(&qword_10169FF18);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)();
  swift_release();
  v15._countAndFlagsBits = 544106784;
  v15._object = (void *)0xE400000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v15);
  swift_getKeyPath();
  sub_1005057FC(&qword_10169FF28);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)();
  swift_release();
  v16._countAndFlagsBits = 544108320;
  v16._object = (void *)0xE400000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v16);
  swift_getKeyPath();
  sub_1005057FC(&qword_10169FF20);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)();
  swift_release();
  v17._countAndFlagsBits = 0;
  v17._object = (void *)0xE000000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v17);
  ParameterSummaryString.init(stringInterpolation:)();
  IntentParameterSummary.init(_:table:)();
  sub_100523288(&qword_10169FEF8, &qword_10169FEF0);
  static ParameterSummaryBuilder.buildExpression<A>(_:)();
  uint64_t v18 = *(void (**)(char *, uint64_t))(v6 + 8);
  v18(v9, v5);
  static ParameterSummaryBuilder.buildBlock<A>(_:)();
  return ((uint64_t (*)(char *, uint64_t))v18)(v13, v5);
}

uint64_t sub_100E7C338@<X0>(uint64_t a1@<X8>)
{
  v19[1] = a1;
  uint64_t v1 = sub_1005057FC(&qword_10169FF08);
  __chkstk_darwin(v1 - 8, v2);
  uint64_t v3 = sub_1005057FC(&qword_10169FF10);
  __chkstk_darwin(v3, v4);
  uint64_t v5 = sub_1005057FC(&qword_10169FEF0);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5, v7);
  uint64_t v9 = (char *)v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10, v11);
  uint64_t v13 = (char *)v19 - v12;
  sub_100E7D82C();
  ParameterSummaryString.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v14._countAndFlagsBits = 0x20747265736E49;
  v14._object = (void *)0xE700000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v14);
  swift_getKeyPath();
  sub_1005057FC(&qword_10169FF18);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)();
  swift_release();
  v15._countAndFlagsBits = 544108320;
  v15._object = (void *)0xE400000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v15);
  swift_getKeyPath();
  sub_1005057FC(&qword_10169FF20);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)();
  swift_release();
  v16._countAndFlagsBits = 0;
  v16._object = (void *)0xE000000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v16);
  ParameterSummaryString.init(stringInterpolation:)();
  IntentParameterSummary.init(_:table:_:)();
  sub_100523288(&qword_10169FEF8, &qword_10169FEF0);
  static ParameterSummaryBuilder.buildExpression<A>(_:)();
  Swift::String v17 = *(void (**)(char *, uint64_t))(v6 + 8);
  v17(v9, v5);
  static ParameterSummaryBuilder.buildBlock<A>(_:)();
  return ((uint64_t (*)(char *, uint64_t))v17)(v13, v5);
}

uint64_t sub_100E7C66C()
{
  swift_getKeyPath();
  sub_100E7D82C();
  uint64_t v0 = static IntentParameterSummary.ParameterKeyPathsBuilder.buildExpression<A>(_:)();
  swift_release();
  sub_1005057FC((uint64_t *)&unk_101676C10);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_101177E70;
  *(void *)(v1 + 32) = v0;
  specialized Array._endMutation()();
  swift_retain();
  uint64_t v2 = static IntentParameterSummary.ParameterKeyPathsBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  swift_release();
  return v2;
}

uint64_t sub_100E7C734@<X0>(uint64_t a1@<X8>)
{
  return sub_100568398(&qword_101670168, (uint64_t)qword_10171CA20, a1);
}

uint64_t sub_100E7C758()
{
  uint64_t HasValueComparisonOperator = type metadata accessor for HasValueComparisonOperator();
  uint64_t v1 = *(void *)(HasValueComparisonOperator - 8);
  __chkstk_darwin(HasValueComparisonOperator, v2);
  uint64_t v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v4, enum case for HasValueComparisonOperator.hasAnyValue(_:), HasValueComparisonOperator);
  sub_1005057FC(&qword_10169FEF0);
  sub_100523288(&qword_10169FEF8, &qword_10169FEF0);
  sub_100523288(&qword_10169FF00, &qword_10169FEE0);
  return ParameterSummaryWhenCondition.init<A>(_:_:_:otherwise:)();
}

uint64_t sub_100E7C8F8(uint64_t a1)
{
  v2[3] = a1;
  v2[4] = type metadata accessor for CRLBoardEntity();
  uint64_t v3 = swift_task_alloc();
  uint64_t v4 = *v1;
  v2[5] = v3;
  v2[6] = v4;
  return _swift_task_switch(sub_100E7C990, 0, 0);
}

uint64_t sub_100E7C990()
{
  uint64_t v1 = v0[5];
  IntentParameter.wrappedValue.getter();
  v0[2] = IntentParameter.projectedValue.getter();
  sub_100E7D958((unint64_t *)&qword_101675F88, (void (*)(uint64_t))type metadata accessor for CRLBoardEntity);
  sub_1005F6380();
  static IntentResult.result<A, B>(value:opensIntent:)();
  swift_release();
  sub_1005F6324(v1);
  swift_task_dealloc();
  uint64_t v2 = (uint64_t (*)(void))v0[1];
  return v2();
}

char *sub_100E7CA94@<X0>(char **a1@<X8>)
{
  unint64_t result = sub_100E7CD20();
  *a1 = result;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  return result;
}

uint64_t sub_100E7CAC0(uint64_t a1)
{
  unint64_t v2 = sub_100E7D82C();

  return static AppIntent.persistentIdentifier.getter(a1, v2);
}

uint64_t destroy for CRLInsertTextToBoardIntent()
{
  swift_release();
  swift_release();
  swift_release();

  return swift_release();
}

void *initializeWithCopy for CRLInsertTextToBoardIntent(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

void *assignWithCopy for CRLInsertTextToBoardIntent(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  a1[3] = a2[3];
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *assignWithTake for CRLInsertTextToBoardIntent(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_release();
  swift_release();
  a1[1] = a2[1];
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for CRLInsertTextToBoardIntent()
{
  return &type metadata for CRLInsertTextToBoardIntent;
}

ValueMetadata *type metadata accessor for CRLAddTextToBoardIntent()
{
  return &type metadata for CRLAddTextToBoardIntent;
}

uint64_t sub_100E7CCA8()
{
  return sub_100523288(&qword_10169FEB8, &qword_10169FEC0);
}

uint64_t sub_100E7CCE4()
{
  return sub_100523288(&qword_10169FEC8, &qword_10169FED0);
}

char *sub_100E7CD20()
{
  uint64_t v0 = sub_1005057FC(&qword_101678470);
  __chkstk_darwin(v0 - 8, v1);
  unsigned int v56 = (char *)v51 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for InputConnectionBehavior();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v71 = v3;
  uint64_t v72 = v4;
  __chkstk_darwin(v3, v5);
  uint64_t v70 = (char *)v51 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1005057FC(&qword_101673B38);
  __chkstk_darwin(v7 - 8, v8);
  uint64_t v65 = (char *)v51 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10, v11);
  uint64_t v69 = (char *)v51 - v12;
  uint64_t v13 = sub_1005057FC(&qword_101691F20);
  __chkstk_darwin(v13 - 8, v14);
  uint64_t v55 = (char *)v51 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_1005057FC(&qword_101673B40);
  __chkstk_darwin(v16 - 8, v17);
  uint64_t v62 = (char *)v51 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v20 = *(void *)(v19 - 8);
  __chkstk_darwin(v19, v21);
  uint64_t v23 = (char *)v51 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = type metadata accessor for Locale();
  __chkstk_darwin(v24 - 8, v25);
  uint64_t v26 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v26 - 8, v27);
  uint64_t v28 = type metadata accessor for LocalizedStringResource();
  uint64_t v67 = v28;
  uint64_t v29 = *(void *)(v28 - 8);
  __chkstk_darwin(v28, v30);
  v51[1] = (char *)v51 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v53 = sub_1005057FC(&qword_101673B48);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t v32 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  uint64_t v33 = *(void (**)(char *, uint64_t, uint64_t))(v20 + 104);
  unsigned int v57 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  uint64_t v59 = v19;
  v33(v23, enum case for LocalizedStringResource.BundleDescription.main(_:), v19);
  uint64_t v58 = v33;
  uint64_t v60 = v20 + 104;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  v33(v23, v32, v19);
  uint64_t v34 = v62;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  uint64_t v35 = *(void (**)(char *, void, uint64_t, uint64_t))(v29 + 56);
  uint64_t v66 = v29 + 56;
  uint64_t v68 = v35;
  v35(v34, 0, 1, v28);
  uint64_t v36 = type metadata accessor for CRLBoardEntity();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v36 - 8) + 56))(v55, 1, 1, v36);
  uint64_t v37 = type metadata accessor for IntentDialog();
  uint64_t v61 = v37;
  uint64_t v38 = *(void *)(v37 - 8);
  uint64_t v39 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v38 + 56);
  uint64_t v52 = v39;
  uint64_t v63 = v38 + 56;
  v39(v69, 1, 1, v37);
  v39(v65, 1, 1, v37);
  unsigned int v54 = enum case for InputConnectionBehavior.default(_:);
  id v64 = *(void (**)(char *))(v72 + 104);
  v72 += 104;
  v64(v70);
  sub_100E7D958((unint64_t *)&qword_101673B60, (void (*)(uint64_t))type metadata accessor for CRLBoardEntity);
  uint64_t v55 = (char *)IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:)();
  sub_1005057FC(&qword_10169FED8);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t v40 = v57;
  uint64_t v41 = v59;
  double v42 = v58;
  v58(v23, v57, v59);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  v42(v23, v40, v41);
  uint64_t v43 = v62;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  v68(v43, 0, 1, v67);
  uint64_t v44 = type metadata accessor for AttributedString();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v44 - 8) + 56))(v56, 1, 1, v44);
  uint64_t v45 = v52;
  v52(v69, 1, 1, v61);
  ((void (*)(char *, void, uint64_t))v64)(v70, enum case for InputConnectionBehavior.connectToPreviousIntentResult(_:), v71);
  unsigned int v56 = (char *)IntentParameter<>.init(title:description:default:requestValueDialog:inputConnectionBehavior:)();
  uint64_t v53 = sub_1005057FC(&qword_10169FEE0);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t v46 = v57;
  uint64_t v47 = v59;
  uint64_t v48 = v58;
  v58(v23, v57, v59);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  v48(v23, v46, v47);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  v68(v43, 0, 1, v67);
  char v75 = 2;
  uint64_t v49 = v61;
  v45(v69, 1, 1, v61);
  v45(v65, 1, 1, v49);
  ((void (*)(char *, void, uint64_t))v64)(v70, v54, v71);
  sub_100B8EC30();
  IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:supportedValues:)();
  sub_1005057FC(&qword_101673B50);
  unint64_t v73 = 0xD00000000000001FLL;
  unint64_t v74 = 0x800000010123B260;
  AnyHashable.init<A>(_:)();
  type metadata accessor for AppDependencyManager();
  static AppDependencyManager.shared.getter();
  AppDependency.__allocating_init(key:manager:)();
  return v55;
}

unint64_t sub_100E7D82C()
{
  unint64_t result = qword_10169FEE8;
  if (!qword_10169FEE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10169FEE8);
  }
  return result;
}

uint64_t sub_100E7D880@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_100E7D8AC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_100E7D8D8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

unint64_t sub_100E7D904()
{
  unint64_t result = qword_10169FF30;
  if (!qword_10169FF30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_10169FF30);
  }
  return result;
}

uint64_t sub_100E7D958(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100E7D9A0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_100E7D9CC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

char *sub_100E7D9F8(void *a1, void *a2, void *a3, void *a4)
{
  *(void *)&v4[OBJC_IVAR____TtC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController_textBuilder] = 0;
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();
  *(void *)&v4[OBJC_IVAR____TtC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController_presentedNavigationController] = 0;
  v4[OBJC_IVAR____TtC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController_isPresentingTextFormatCardUI] = 0;
  *(void *)&v4[OBJC_IVAR____TtC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController_presentedAuxiliaryViewController] = 0;
  *(void *)&v4[OBJC_IVAR____TtC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController_toolbar] = 0;
  *(void *)&v4[OBJC_IVAR____TtC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController_auxiliaryPresentedBuilder] = 0;
  *(void *)&v4[OBJC_IVAR____TtC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController_inputViewStateAtLastReload] = 0;
  *(void *)&v4[OBJC_IVAR____TtC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController__leadingBarButtonGroups] = 0;
  *(void *)&v4[OBJC_IVAR____TtC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController__trailingBarButtonGroups] = 0;
  *(void *)&v4[OBJC_IVAR____TtC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController_icc] = a1;
  swift_unknownObjectWeakAssign();
  *(void *)&v4[OBJC_IVAR____TtC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController_editorController] = a3;
  swift_unknownObjectWeakAssign();
  v21.receiver = v4;
  v21.super_class = (Class)type metadata accessor for CRLiOSMiniFormatterTextEditingAccessoryViewController();
  id v9 = a1;
  id v10 = a3;
  id v11 = [super initWithNibName:0 bundle:0];
  id v12 = objc_allocWithZone((Class)CRLQuickInspectorElement);
  id v13 = v11;
  NSString v14 = String._bridgeToObjectiveC()();
  id v15 = [v12 initWithName:v14 image:0 type:2 options:16];

  objc_allocWithZone((Class)type metadata accessor for CRLiOSMiniFormatterTextBuilder());
  id v16 = v9;
  uint64_t v17 = (char *)v13;
  id v18 = sub_100564EFC((uint64_t)v13, (uint64_t)&off_101531108, (uint64_t)&off_101531150, v15, v10, v9, 0, 0, 0.0, 0, 0, 0, 0);

  uint64_t v19 = *(void **)&v17[OBJC_IVAR____TtC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController_textBuilder];
  *(void *)&v17[OBJC_IVAR____TtC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController_textBuilder] = v18;

  return v17;
}

void sub_100E7DD0C()
{
  id v1 = [v0 inputView];
  if (v1)
  {
    id v27 = v1;
    [v1 setAllowsSelfSizing:1];
    id v2 = [objc_allocWithZone((Class)UIToolbar) initWithFrame:0.0, 0.0, 0.0, 0.0];
    [v2 setTranslatesAutoresizingMaskIntoConstraints:0];
    sub_100E7E110();
    sub_10050BF48(0, (unint64_t *)&qword_101674470);
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v2 setItems:isa];

    id v4 = [self blackColor];
    [v2 setTintColor:v4];

    uint64_t v5 = OBJC_IVAR____TtC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController_toolbar;
    uint64_t v6 = *(void **)&v0[OBJC_IVAR____TtC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController_toolbar];
    *(void *)&v0[OBJC_IVAR____TtC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController_toolbar] = v2;

    uint64_t v7 = *(void **)&v0[v5];
    if (v7)
    {
      id v8 = v7;
      [v27 addSubview:v8];
      id v9 = self;
      sub_1005057FC((uint64_t *)&unk_101676C10);
      uint64_t v10 = swift_allocObject();
      *(_OWORD *)(v10 + 16) = xmmword_1011807A0;
      id v11 = [v27 leadingAnchor];
      id v12 = [v8 leadingAnchor];
      id v13 = [v11 constraintEqualToAnchor:v12];

      *(void *)(v10 + 32) = v13;
      id v14 = [v27 trailingAnchor];
      id v15 = [v8 trailingAnchor];
      id v16 = [v14 constraintEqualToAnchor:v15];

      *(void *)(v10 + 40) = v16;
      id v17 = [v27 topAnchor];
      id v18 = [v8 topAnchor];
      id v19 = [v17 constraintEqualToAnchor:v18];

      *(void *)(v10 + 48) = v19;
      id v20 = [v27 safeAreaLayoutGuide];
      id v21 = [v20 bottomAnchor];

      id v22 = [v8 bottomAnchor];
      id v23 = [v21 constraintEqualToAnchor:v22];

      *(void *)(v10 + 56) = v23;
      id v24 = [v8 heightAnchor];
      id v25 = [v24 constraintEqualToConstant:44.0];

      *(void *)(v10 + 64) = v25;
      specialized Array._endMutation()();
      sub_10050BF48(0, (unint64_t *)&qword_101674200);
      Class v26 = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      [v9 activateConstraints:v26];
    }
  }
}

id sub_100E7E110()
{
  uint64_t v1 = v0;
  sub_1005057FC((uint64_t *)&unk_101676C10);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1011BA660;
  *(void *)(v2 + 32) = [objc_allocWithZone((Class)UIBarButtonItem) initWithBarButtonSystemItem:5 target:0 action:0];
  *(void *)(v2 + 40) = sub_100E7E320();
  id result = [objc_allocWithZone((Class)UIBarButtonItem) initWithBarButtonSystemItem:5 target:0 action:0];
  *(void *)(v2 + 48) = result;
  uint64_t v4 = OBJC_IVAR____TtC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController_textBuilder;
  uint64_t v5 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController_textBuilder);
  if (!v5)
  {
    __break(1u);
    goto LABEL_6;
  }
  id v6 = v5;
  uint64_t v7 = sub_10055C488(1);

  id v8 = [objc_allocWithZone((Class)UIBarButtonItem) initWithCustomView:v7];
  *(void *)(v2 + 56) = v8;
  id result = [objc_allocWithZone((Class)UIBarButtonItem) initWithBarButtonSystemItem:5 target:0 action:0];
  *(void *)(v2 + 64) = result;
  id v9 = *(void **)(v1 + v4);
  if (!v9)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  id v10 = v9;
  id v11 = (void *)sub_10055FE30(1, 0, 1);

  id v12 = [objc_allocWithZone((Class)UIBarButtonItem) initWithCustomView:v11];
  *(void *)(v2 + 72) = v12;
  id result = [objc_allocWithZone((Class)UIBarButtonItem) initWithBarButtonSystemItem:5 target:0 action:0];
  *(void *)(v2 + 80) = result;
  id v13 = *(void **)(v1 + v4);
  if (v13)
  {
    id v14 = v13;
    sub_1005619B4(1, 0, 1);
    id v16 = v15;

    id v17 = [objc_allocWithZone((Class)UIBarButtonItem) initWithCustomView:v16];
    *(void *)(v2 + 88) = v17;
    *(void *)(v2 + 96) = [objc_allocWithZone((Class)UIBarButtonItem) initWithBarButtonSystemItem:5 target:0 action:0];
    specialized Array._endMutation()();
    return (id)v2;
  }
LABEL_7:
  __break(1u);
  return result;
}

Class sub_100E7E320()
{
  uint64_t v1 = v0;
  uint64_t v2 = self;
  id v3 = [v0 traitCollection];
  uint64_t v4 = (void *)UITraitCollection.modifyingTraits(_:)();

  id v5 = [v2 preferredFontForTextStyle:UIFontTextStyleBody compatibleWithTraitCollection:v4];
  id v6 = [self configurationWithFont:v5];

  NSString v7 = String._bridgeToObjectiveC()();
  id v8 = [self systemImageNamed:v7];

  if (v8)
  {
    id v9 = [v8 imageWithConfiguration:v6];
  }
  else
  {
    id v9 = 0;
  }
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong
    || (id v11 = (void *)Strong,
        id v12 = *(id *)(Strong + OBJC_IVAR____TtC8Freeform11CRLWPEditor_enclosingShape),
        v11,
        type metadata accessor for CRLWPStickyNoteItem(),
        uint64_t v13 = swift_dynamicCastClass(),
        v12,
        !v13))
  {
    sub_10050BF48(0, (unint64_t *)&qword_101674470);
    sub_10050BF48(0, (unint64_t *)&qword_101672600);
    uint64_t v26 = swift_allocObject();
    swift_unknownObjectWeakInit();
    id v14 = v9;
    v29.is_nil = UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
    v29.value.super.Class isa = (Class)v9;
    v31.value.super.super.Class isa = 0;
    Class isa = UIBarButtonItem.init(title:image:primaryAction:menu:)((Swift::String_optional)0, v29, v31, v32).super.super.isa;
    id v25 = [self labelColor:0:0:0:sub_100E81F6C:v26];
    [(objc_class *)isa setTintColor:v25];
    goto LABEL_9;
  }
  id v14 = [self buttonWithType:0];
  [v14 setPointerInteractionEnabled:1];
  [v14 setImage:v9 forState:0];
  Class result = (Class)[v14 setShowsMenuAsPrimaryAction:1];
  id v16 = *(char **)&v1[OBJC_IVAR____TtC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController_textBuilder];
  if (v16)
  {
    id v17 = *(void **)&v16[OBJC_IVAR____TtC8Freeform30CRLiOSMiniFormatterTextBuilder_textSizeManager];
    uint64_t v18 = *(void *)&v16[OBJC_IVAR____TtC8Freeform30CRLiOSMiniFormatterTextBuilder_textSizeManager + 8];
    sub_10050BF48(0, &qword_101673A80);
    id v19 = v16;
    UIMenuElementSize preferredElementSize = sub_100563E44(v17, v18);
    v20._countAndFlagsBits = 0;
    v20._object = (void *)0xE000000000000000;
    v30.value.super.Class isa = 0;
    v30.is_nil = 0;
    Class v21 = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v20, (Swift::String_optional)0, v30, 0, 0xFFFFFFFFFFFFFFFFLL, (UIMenuElementSize)preferredElementSize, v28).super.super.isa;

    [v14 setMenu:v21];
    [v14 setPreferredMenuElementOrder:2];
    id v22 = self;
    id v23 = [v22 labelColor];
    [v14 setTintColor:v23];

    Class isa = (Class)[objc_allocWithZone((Class)UIBarButtonItem) initWithCustomView:v14];
    id v25 = [v22 labelColor];
    [(objc_class *)isa setTintColor:v25];

    id v6 = v9;
LABEL_9:

    return isa;
  }
  __break(1u);
  return result;
}

uint64_t sub_100E7E798(uint64_t a1)
{
  sub_1005231B4(a1, *(void *)(a1 + 24));
  uint64_t v1 = UIContentSizeCategoryLarge;
  return UIMutableTraits.preferredContentSizeCategory.setter();
}

void sub_100E7E7EC(void *a1)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v3 = (void *)Strong;
    if ([a1 sender])
    {
      _bridgeAnyObjectToAny(_:)();
      swift_unknownObjectRelease();
    }
    else
    {
      memset(v7, 0, sizeof(v7));
    }
    sub_10052E248((uint64_t)v7, (uint64_t)v8);
    if (v9)
    {
      sub_10050BF48(0, (unint64_t *)&qword_101674470);
      if (swift_dynamicCast())
      {
        if ((objc_msgSend(self, "crl_padUI") & 1) == 0)
        {
          uint64_t v4 = swift_unknownObjectWeakLoadStrong();
          if (v4)
          {
            id v5 = (void *)v4;
            sub_100825FC8(0);
          }
        }
        sub_100E7E948(v6);
      }
      else
      {
      }
    }
    else
    {

      sub_100522F00((uint64_t)v8, &qword_101672BF0);
    }
  }
}

void sub_100E7E948(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = self;
  unsigned int v5 = [v4 crl_padUI];
  id v6 = objc_allocWithZone((Class)CRLQuickInspectorElement);
  NSString v7 = String._bridgeToObjectiveC()();
  id v8 = [v6 initWithName:v7 image:0 type:2 options:16];

  if (v5)
  {
    uint64_t v9 = *(void **)&v2[OBJC_IVAR____TtC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController_editorController];
    id v10 = *(void **)&v2[OBJC_IVAR____TtC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController_icc];
    objc_allocWithZone((Class)type metadata accessor for CRLiOSMiniFormatterTextBuilder());
    id v28 = v8;
    id v11 = v9;
    id v12 = v10;
    uint64_t v13 = v2;
    id v14 = sub_100564EFC((uint64_t)v2, (uint64_t)&off_101531108, (uint64_t)&off_101531150, v28, v11, v10, 1, 0, 46.0, 0, 0, 0, 1);

    id v15 = sub_10055AAC4();
    if (v15)
    {
      id v16 = v15;
      objc_allocWithZone((Class)type metadata accessor for CRLiOSMiniFormatterPopoverContainerViewController());
      v13;
      id v17 = v16;
      id v18 = v14;
      id v19 = sub_100656ADC(v17, v14, 0, 1, (uint64_t)v2, (uint64_t)&off_101531150, 0.0);
      sub_100E7ED78(v19, a1);

      id v14 = v18;
    }
  }
  else
  {
    if (objc_msgSend(v4, "crl_phoneUI")) {
      char v20 = [self crl_deviceIsLandscape];
    }
    else {
      char v20 = 0;
    }
    uint64_t v21 = swift_allocObject();
    *(void *)(v21 + 16) = v2;
    id v22 = *(void **)&v2[OBJC_IVAR____TtC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController_editorController];
    id v23 = *(void **)&v2[OBJC_IVAR____TtC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController_icc];
    objc_allocWithZone((Class)type metadata accessor for CRLiOSMiniFormatterTextBuilder());
    id v24 = v2;
    id v25 = v22;
    id v26 = v23;
    id v28 = sub_100564EFC((uint64_t)v2, (uint64_t)&off_101531108, (uint64_t)&off_101531150, v8, v25, v23, v20 ^ 1u, v20, 56.0, 1, (uint64_t)sub_100E827F4, v21, 0);

    swift_release();
    id v27 = sub_10055AAC4();
    if (!v27) {
      goto LABEL_10;
    }
    id v14 = v27;
    sub_100E7F17C(v27, v28);
  }

LABEL_10:
}

void sub_100E7EC6C(uint64_t a1)
{
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v3 = (void *)Strong;
    id v4 = sub_100B446A8();

    if (v4)
    {
      [v4 dismissViewControllerAnimated:1 completion:0];
    }
  }
  unsigned int v5 = *(void **)(a1 + OBJC_IVAR____TtC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController_editorController);
  if (type metadata accessor for CRLWPEditor()) {
    uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  }
  else {
    uint64_t ObjCClassFromMetadata = 0;
  }
  id v7 = [v5 mostSpecificCurrentEditorOfClass:ObjCClassFromMetadata];
  if (swift_dynamicCastClass())
  {
    swift_unknownObjectRetain();
    sub_100825FC8(1);
    swift_unknownObjectRelease();
  }
  swift_unknownObjectRelease();
  id v8 = *(void **)(a1
                + OBJC_IVAR____TtC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController_presentedNavigationController);
  *(void *)(a1
            + OBJC_IVAR____TtC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController_presentedNavigationController) = 0;

  *(unsigned char *)(a1
           + OBJC_IVAR____TtC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController_isPresentingTextFormatCardUI) = 0;
}

void sub_100E7ED78(void *a1, void *a2)
{
  unsigned int v5 = (void *)swift_allocObject();
  v5[2] = a1;
  v5[3] = v2;
  v5[4] = a2;
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  id v7 = a2;
  id v8 = v2;
  id v9 = a1;
  if (Strong && (id v10 = v9, v11 = sub_100B446A8(), Strong, v11))
  {
    id v12 = [v11 presentedViewController];

    if (v12)
    {
      uint64_t v13 = swift_allocObject();
      *(void *)(v13 + 16) = sub_100E81EF0;
      *(void *)(v13 + 24) = v5;
      aBlock[4] = sub_1006DAE04;
      aBlock[5] = v13;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = *(void *)"";
      aBlock[2] = sub_100679958;
      void aBlock[3] = &unk_101531488;
      id v14 = _Block_copy(aBlock);
      swift_retain();
      swift_release();
      [v11 dismissViewControllerAnimated:1 completion:v14];

      swift_release();
      _Block_release(v14);
    }
    else
    {
      id v18 = [objc_allocWithZone((Class)UINavigationController) initWithRootViewController:v10];
      [v18 setNavigationBarHidden:1 animated:0];
      [v18 setModalPresentationStyle:7];
      [v18 setDelegate:v8];
      id v15 = [v18 popoverPresentationController];
      if (v15)
      {
        id v17 = v15;
        [v15 setBarButtonItem:v7];
        [v17 setDelegate:v8];
        [v17 setPermittedArrowDirections:3];
        [v8 presentViewController:v18 animated:1 completion:0];

        swift_release();
        id v16 = v17;
      }
      else
      {

        swift_release();
        id v16 = v18;
      }
    }
  }
  else
  {
    swift_release();
  }
}

void sub_100E7F054(uint64_t a1, void *a2, uint64_t a3)
{
  id v8 = [objc_allocWithZone((Class)UINavigationController) initWithRootViewController:a1];
  [v8 setNavigationBarHidden:1 animated:0];
  [v8 setModalPresentationStyle:7];
  [v8 setDelegate:a2];
  id v5 = [v8 popoverPresentationController];
  if (v5)
  {
    id v6 = v5;
    [v5 setBarButtonItem:a3];
    [v6 setDelegate:a2];
    [v6 setPermittedArrowDirections:3];
    [a2 presentViewController:v8 animated:1 completion:0];

    id v7 = v6;
  }
  else
  {
    id v7 = v8;
  }
}

void sub_100E7F17C(void *a1, void *a2)
{
  id v5 = self;
  id v6 = a1;
  char v9 = 1;
  if (objc_msgSend(v5, "crl_padUI"))
  {
    id v7 = [v2 traitCollection];
    unsigned int v8 = [v7 crl_isCompactWidth];

    if (!v8) {
      char v9 = 0;
    }
  }
  if (!objc_msgSend(v5, "crl_padUI")
    || (id v10 = [v2 traitCollection],
        unsigned int v11 = objc_msgSend(v10, "crl_isCompactWidth"),
        v10,
        double v12 = 0.0,
        v11))
  {
    double v12 = 110.0;
  }
  objc_allocWithZone((Class)type metadata accessor for CRLiOSMiniFormatterPopoverContainerViewController());
  id v13 = v2;
  id v14 = a2;
  id v15 = sub_100656ADC(v6, a2, v9, 1, (uint64_t)v2, (uint64_t)&off_101531150, v12);
  id v27 = [objc_allocWithZone((Class)UINavigationController) initWithRootViewController:v15];
  [v27 setNavigationBarHidden:1 animated:0];
  [v27 setModalPresentationStyle:1];
  id v16 = [v27 presentationController];
  if (v16)
  {
    id v17 = v16;
    [v16 setDelegate:v13];
  }
  id v18 = [v27 sheetPresentationController];
  if (v18)
  {
    id v19 = v18;
    [v18 setPrefersEdgeAttachedInCompactHeight:1];
    [v19 setWidthFollowsPreferredContentSizeWhenEdgeAttached:1];
    sub_10050BF48(0, (unint64_t *)&qword_1016A0060);
    uint64_t v20 = swift_allocObject();
    *(void *)(v20 + 16) = v15;
    *(void *)(v20 + 24) = v13;
    id v21 = v13;
    id v22 = v15;
    id v23 = (void *)static UISheetPresentationControllerDetent.custom(identifier:resolver:)();
    swift_release();
    sub_1005057FC((uint64_t *)&unk_101676C10);
    uint64_t v24 = swift_allocObject();
    *(_OWORD *)(v24 + 16) = xmmword_101177E70;
    *(void *)(v24 + 32) = v23;
    specialized Array._endMutation()();
    id v25 = v23;
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v19 setDetents:isa];
  }
  *((unsigned char *)v13
  + OBJC_IVAR____TtC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController_isPresentingTextFormatCardUI) = 1;
  [v13 presentViewController:v27 animated:1 completion:0];
}

void sub_100E7F4BC(double a1, double a2, double a3, double a4)
{
  sub_100657F44(a1, a2, a3, a4);
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v5 = (void *)Strong;
    id v6 = sub_100B446A8();

    if (v6)
    {
      id v7 = [v6 view];

      if (v7)
      {
        id v8 = [v7 window];

        if (v8)
        {
          [v8 safeAreaInsets];
        }
      }
      else
      {
        __break(1u);
      }
    }
  }
}

void sub_100E7F59C(void *a1, void *a2, uint64_t a3)
{
  [a1 presentViewController:a2 animated:1 completion:0];
  self;
  uint64_t v5 = swift_dynamicCastObjCClass();
  if (v5)
  {
    id v7 = *(id *)(a3
               + OBJC_IVAR____TtC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController_presentedNavigationController);
    *(void *)(a3
              + OBJC_IVAR____TtC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController_presentedNavigationController) = v5;
    id v6 = a2;
  }
}

uint64_t sub_100E7F638(uint64_t a1, uint64_t (*a2)(void))
{
  id v4 = *(void **)(a1 + OBJC_IVAR____TtC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController_editorController);
  if (type metadata accessor for CRLWPEditor()) {
    uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  }
  else {
    uint64_t ObjCClassFromMetadata = 0;
  }
  id v6 = [v4 mostSpecificCurrentEditorOfClass:ObjCClassFromMetadata];
  if (swift_dynamicCastClass())
  {
    swift_unknownObjectRetain();
    sub_100825FC8(1);
    swift_unknownObjectRelease();
  }
  swift_unknownObjectRelease();
  id v7 = *(void **)(a1
                + OBJC_IVAR____TtC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController_presentedNavigationController);
  *(void *)(a1
            + OBJC_IVAR____TtC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController_presentedNavigationController) = 0;

  *(unsigned char *)(a1
           + OBJC_IVAR____TtC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController_isPresentingTextFormatCardUI) = 0;
  return a2();
}

id sub_100E7F814()
{
  return sub_100E7FEE0(type metadata accessor for CRLiOSMiniFormatterTextEditingAccessoryViewController);
}

uint64_t type metadata accessor for CRLiOSMiniFormatterTextEditingAccessoryViewController()
{
  return self;
}

uint64_t sub_100E7F93C(uint64_t result, uint64_t a2)
{
  id v3 = *(void **)(v2 + OBJC_IVAR____TtC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController_textBuilder);
  if (v3)
  {
    uint64_t v5 = result;
    sub_100522D7C(a2, (uint64_t)&v20);
    type metadata accessor for CRLShapeItem();
    id v6 = v3;
    if (swift_dynamicCast())
    {
      unint64_t v7 = sub_1005D1384();
      if (v7)
      {
        char v8 = sub_100ED5958((uint64_t)v19, v7);
        swift_bridgeObjectRelease();
        if (v8)
        {
          char v9 = *(char **)(v5 + OBJC_IVAR____TtC8Freeform15CRLChangeRecord_details);
          id v10 = &v9[OBJC_IVAR____TtC8Freeform14CRLPropertyMap_data];
          unsigned int v11 = v9;
          swift_beginAccess();
          uint64_t v12 = *(void *)v10;
          if (*(void *)(*(void *)v10 + 16))
          {
            uint64_t v13 = sub_1009563E8();
            if (v14) {
              goto LABEL_13;
            }
          }
          uint64_t v20 = 0;
          uint64_t v21 = 0;
          uint64_t v22 = 0;
          uint64_t v23 = 1;
          sub_100522F00((uint64_t)&v20, (uint64_t *)&unk_1016725E0);
          uint64_t v12 = *(void *)v10;
          if (*(void *)(*(void *)v10 + 16))
          {
            uint64_t v13 = sub_1009563E8();
            if (v15) {
              goto LABEL_13;
            }
          }
          uint64_t v20 = 0;
          uint64_t v21 = 0;
          uint64_t v22 = 0;
          uint64_t v23 = 1;
          sub_100522F00((uint64_t)&v20, (uint64_t *)&unk_1016725E0);
          uint64_t v12 = *(void *)v10;
          if (*(void *)(*(void *)v10 + 16))
          {
            uint64_t v13 = sub_1009563E8();
            if (v16) {
              goto LABEL_13;
            }
          }
          uint64_t v20 = 0;
          uint64_t v21 = 0;
          uint64_t v22 = 0;
          uint64_t v23 = 1;
          sub_100522F00((uint64_t)&v20, (uint64_t *)&unk_1016725E0);
          uint64_t v12 = *(void *)v10;
          if (*(void *)(*(void *)v10 + 16) && (uint64_t v13 = sub_1009563E8(), (v17 & 1) != 0))
          {
LABEL_13:
            sub_100557A70(*(void *)(v12 + 56) + 32 * v13, (uint64_t)&v20);
            sub_100522F00((uint64_t)&v20, (uint64_t *)&unk_1016725E0);

            char v18 = 1;
          }
          else
          {
            uint64_t v20 = 0;
            uint64_t v21 = 0;
            uint64_t v22 = 0;
            uint64_t v23 = 1;
            sub_100522F00((uint64_t)&v20, (uint64_t *)&unk_1016725E0);

            char v18 = 0;
          }
          return v18 & 1;
        }
      }
    }
    char v18 = sub_100520CB4(v5, a2);

    return v18 & 1;
  }
  __break(1u);
  return result;
}

BOOL sub_100E7FB8C(uint64_t a1)
{
  uint64_t v2 = v1;
  sub_100557A70(a1, (uint64_t)v24);
  if (!v25)
  {
    sub_100522F00((uint64_t)v24, &qword_101672BF0);
    return 0;
  }
  type metadata accessor for CRLiOSMiniFormatterTextEditingAccessoryViewController.CRLiOSMiniFormatterInputViewState();
  if ((swift_dynamicCast() & 1) == 0) {
    return 0;
  }
  id v3 = *(void **)(v1
                + OBJC_IVAR____TtCC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController33CRLiOSMiniFormatterInputViewState_font);
  if (v3)
  {
    id v4 = *(void **)&v23[OBJC_IVAR____TtCC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController33CRLiOSMiniFormatterInputViewState_font];
    id v5 = v3;
    if (v4)
    {
      sub_10050BF48(0, &qword_1016A0058);
      id v6 = v5;
      id v7 = v4;
      char v8 = static NSObject.== infix(_:_:)();

      if ((v8 & 1) == 0) {
        goto LABEL_46;
      }
      goto LABEL_9;
    }

    return 0;
  }
  if (*(void *)&v23[OBJC_IVAR____TtCC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController33CRLiOSMiniFormatterInputViewState_font])
  {
LABEL_46:

    return 0;
  }
LABEL_9:
  int v9 = *(unsigned __int8 *)(v2
                          + OBJC_IVAR____TtCC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController33CRLiOSMiniFormatterInputViewState_isBold);
  int v10 = v23[OBJC_IVAR____TtCC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController33CRLiOSMiniFormatterInputViewState_isBold];
  if (v9 == 2)
  {
    if (v10 != 2) {
      goto LABEL_46;
    }
  }
  else if (v10 == 2 || ((v9 ^ v10) & 1) != 0)
  {
    goto LABEL_46;
  }
  int v11 = *(unsigned __int8 *)(v2
                           + OBJC_IVAR____TtCC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController33CRLiOSMiniFormatterInputViewState_isItalic);
  int v12 = v23[OBJC_IVAR____TtCC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController33CRLiOSMiniFormatterInputViewState_isItalic];
  if (v11 == 2)
  {
    if (v12 != 2) {
      goto LABEL_46;
    }
  }
  else if (v12 == 2 || ((v11 ^ v12) & 1) != 0)
  {
    goto LABEL_46;
  }
  int v13 = *(unsigned __int8 *)(v2
                           + OBJC_IVAR____TtCC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController33CRLiOSMiniFormatterInputViewState_isUnderlined);
  int v14 = v23[OBJC_IVAR____TtCC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController33CRLiOSMiniFormatterInputViewState_isUnderlined];
  if (v13 == 2)
  {
    if (v14 != 2) {
      goto LABEL_46;
    }
  }
  else if (v14 == 2 || ((v13 ^ v14) & 1) != 0)
  {
    goto LABEL_46;
  }
  int v15 = *(unsigned __int8 *)(v2
                           + OBJC_IVAR____TtCC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController33CRLiOSMiniFormatterInputViewState_isStruckthrough);
  int v16 = v23[OBJC_IVAR____TtCC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController33CRLiOSMiniFormatterInputViewState_isStruckthrough];
  if (v15 == 2)
  {
    if (v16 != 2) {
      goto LABEL_46;
    }
  }
  else if (v16 == 2 || ((v15 ^ v16) & 1) != 0)
  {
    goto LABEL_46;
  }
  int v17 = v23[OBJC_IVAR____TtCC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController33CRLiOSMiniFormatterInputViewState_horizontalAlignment
                           + 8];
  if (*(unsigned char *)(v2
                + OBJC_IVAR____TtCC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController33CRLiOSMiniFormatterInputViewState_horizontalAlignment
                + 8) == 2)
  {
    if (v17 != 2) {
      goto LABEL_46;
    }
  }
  else if (v17 == 2 {
         || *(void *)(v2
  }
                      + OBJC_IVAR____TtCC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController33CRLiOSMiniFormatterInputViewState_horizontalAlignment) != *(void *)&v23[OBJC_IVAR____TtCC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController33CRLiOSMiniFormatterInputViewState_horizontalAlignment])
  {
    goto LABEL_46;
  }
  __int16 v18 = *(_WORD *)(v2
                 + OBJC_IVAR____TtCC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController33CRLiOSMiniFormatterInputViewState_listStyleType);
  __int16 v19 = *(_WORD *)&v23[OBJC_IVAR____TtCC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController33CRLiOSMiniFormatterInputViewState_listStyleType];

  if ((v19 & 0xFF00) == 0x200) {
    unsigned __int8 v20 = 4;
  }
  else {
    unsigned __int8 v20 = v19;
  }
  if ((v18 & 0xFF00) == 0x200 || v18 == 4) {
    return v20 == 4;
  }
  return v20 != 4 && v20 == v18;
}

id sub_100E7FEC8()
{
  return sub_100E7FEE0(type metadata accessor for CRLiOSMiniFormatterTextEditingAccessoryViewController.CRLiOSMiniFormatterInputViewState);
}

id sub_100E7FEE0(uint64_t (*a1)(void))
{
  v3.receiver = v1;
  v3.super_class = (Class)a1();
  return [super dealloc];
}

uint64_t type metadata accessor for CRLiOSMiniFormatterTextEditingAccessoryViewController.CRLiOSMiniFormatterInputViewState()
{
  return self;
}

uint64_t sub_100E7FF4C(uint64_t a1, uint64_t a2)
{
  return sub_100E7F93C(a1, a2) & 1;
}

uint64_t sub_100E7FF74()
{
  if (*(void *)(*v0 + OBJC_IVAR____TtC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController_textBuilder)) {
    return 1;
  }
  __break(1u);
  return result;
}

void sub_100E7FF94()
{
}

void sub_100E7FFB8(void *a1, void *a2)
{
  objc_super v3 = v2;
  id v4 = *(void **)&v2[OBJC_IVAR____TtC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController_presentedNavigationController];
  if (v4)
  {
    id v6 = *(void **)&v3[OBJC_IVAR____TtC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController_presentedAuxiliaryViewController];
    *(void *)&v3[OBJC_IVAR____TtC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController_presentedAuxiliaryViewController] = a1;
    id v7 = a1;
    id v35 = v4;

    char v8 = *(void **)&v3[OBJC_IVAR____TtC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController_auxiliaryPresentedBuilder];
    *(void *)&v3[OBJC_IVAR____TtC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController_auxiliaryPresentedBuilder] = a2;
    int v9 = a2;

    uint64_t Strong = (unsigned char *)swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      Strong[OBJC_IVAR____TtC8Freeform11CRLWPEditor_resignFirstResponderWhenKeyboardHides] = 0;
    }
    if (objc_msgSend(self, "crl_padUI"))
    {
      char v11 = (*(uint64_t (**)(void))((swift_isaMask & *v9) + 0x108))();
      if (v11) {
        uint64_t v12 = 1;
      }
      else {
        uint64_t v12 = 7;
      }
      [v7 setModalPresentationStyle:v12];
      id v13 = [v7 presentationController];
      if (v13)
      {
        int v14 = v13;
        [v13 setDelegate:v3];
      }
      if (v11) {
        goto LABEL_14;
      }
      id v15 = [v35 popoverPresentationController];
      if (v15)
      {
        int v16 = v15;
        id v17 = [v7 popoverPresentationController];
        if (v17)
        {
          __int16 v18 = v17;
          [v17 setDelegate:v3];
          id v19 = [v16 barButtonItem];
          [v18 setBarButtonItem:v19];

LABEL_14:
          uint64_t v20 = swift_allocObject();
          *(void *)(v20 + 16) = v3;
          *(void *)(v20 + 24) = v7;
          uint64_t v40 = sub_100E81E54;
          uint64_t v41 = v20;
          aBlock = _NSConcreteStackBlock;
          uint64_t v37 = *(void *)"";
          uint64_t v38 = sub_100679958;
          uint64_t v39 = &unk_1015312A8;
          uint64_t v21 = _Block_copy(&aBlock);
          id v22 = v7;
          uint64_t v23 = v3;
          swift_release();
          [v35 dismissViewControllerAnimated:1 completion:v21];

          _Block_release(v21);
          return;
        }
      }
    }
    else
    {
      [v7 setModalPresentationStyle:7];
      id v24 = [v7 popoverPresentationController];
      if (v24)
      {
        uint64_t v25 = v24;
        [v24 setPermittedArrowDirections:0];
      }
      id v26 = [v7 popoverPresentationController];
      if (v26)
      {
        id v27 = v26;
        id v28 = (id)swift_unknownObjectWeakLoadStrong();
        if (v28)
        {
          id v29 = sub_100B446A8();

          id v28 = [v29 view];
        }
        [v27 setSourceView:v28];
      }
      id v30 = [v7 popoverPresentationController];
      if (v30)
      {
        UIAction_optional v31 = v30;
        [v30 setDelegate:v3];
      }
      uint64_t v32 = swift_allocObject();
      *(void *)(v32 + 16) = v7;
      uint64_t v40 = sub_100E81E20;
      uint64_t v41 = v32;
      aBlock = _NSConcreteStackBlock;
      uint64_t v37 = *(void *)"";
      uint64_t v38 = sub_100679958;
      uint64_t v39 = &unk_101531258;
      uint64_t v33 = _Block_copy(&aBlock);
      id v34 = v7;
      swift_release();
      [v35 presentViewController:v34 animated:1 completion:v33];
      _Block_release(v33);
    }
  }
}

void sub_100E80444(uint64_t a1, void *a2)
{
  id v4 = *(void **)(a1 + OBJC_IVAR____TtC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController_editorController);
  if (type metadata accessor for CRLWPEditor()) {
    uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  }
  else {
    uint64_t ObjCClassFromMetadata = 0;
  }
  id v6 = [v4 mostSpecificCurrentEditorOfClass:ObjCClassFromMetadata];
  if (swift_dynamicCastClass())
  {
    swift_unknownObjectRetain();
    sub_100825FC8(1);
    swift_unknownObjectRelease();
  }
  swift_unknownObjectRelease();
  id v7 = *(void **)(a1
                + OBJC_IVAR____TtC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController_presentedNavigationController);
  *(void *)(a1
            + OBJC_IVAR____TtC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController_presentedNavigationController) = 0;

  *(unsigned char *)(a1
           + OBJC_IVAR____TtC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController_isPresentingTextFormatCardUI) = 0;
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    int v9 = (void *)Strong;
    id v10 = sub_100B446A8();

    if (v10)
    {
      uint64_t v11 = swift_allocObject();
      *(void *)(v11 + 16) = v10;
      *(void *)(v11 + 24) = a2;
      id v12 = a2;
      id v13 = v10;
      id v14 = [v13 presentedViewController];

      uint64_t v15 = swift_allocObject();
      if (v14)
      {
        *(void *)(v15 + 16) = sub_100E81E5C;
        *(void *)(v15 + 24) = v11;
        uint64_t v23 = sub_10093B9B4;
        uint64_t v24 = v15;
        id v19 = _NSConcreteStackBlock;
        uint64_t v20 = *(void *)"";
        uint64_t v21 = sub_100679958;
        id v22 = &unk_101531370;
        int v16 = _Block_copy(&v19);
        swift_retain();
        swift_release();
        [v13 dismissViewControllerAnimated:1 completion:v16];
        swift_release();

        _Block_release(v16);
      }
      else
      {
        *(void *)(v15 + 16) = v12;
        uint64_t v23 = sub_100E827E0;
        uint64_t v24 = v15;
        id v19 = _NSConcreteStackBlock;
        uint64_t v20 = *(void *)"";
        uint64_t v21 = sub_100679958;
        id v22 = &unk_101531320;
        id v17 = _Block_copy(&v19);
        id v18 = v12;
        swift_release();
        [v13 presentViewController:v18 animated:1 completion:v17];
        _Block_release(v17);
        swift_release();
      }
    }
  }
}

void sub_100E80724(void *a1, void *a2)
{
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = a2;
  v7[4] = sub_100E827E0;
  v7[5] = v4;
  v7[0] = _NSConcreteStackBlock;
  v7[1] = *(void *)"";
  _OWORD v7[2] = sub_100679958;
  v7[3] = &unk_1015313C0;
  id v5 = _Block_copy(v7);
  id v6 = a2;
  swift_release();
  [a1 presentViewController:v6 animated:1 completion:v5];
  _Block_release(v5);
}

uint64_t sub_100E8080C(void *a1)
{
  UIAccessibilityNotifications v1 = UIAccessibilityLayoutChangedNotification;
  id v2 = [a1 popoverPresentationController];
  objc_super v3 = v2;
  if (v2)
  {
    id v4 = [v2 sourceView];

    if (v4)
    {
      sub_10050BF48(0, (unint64_t *)&qword_1016725F0);
      objc_super v3 = (void *)_bridgeAnythingToObjectiveC<A>(_:)();
    }
    else
    {
      objc_super v3 = 0;
    }
  }
  UIAccessibilityPostNotification(v1, v3);
  return swift_unknownObjectRelease();
}

char *sub_100E808D4()
{
  uint64_t result = (char *)[*(id *)(v0 + OBJC_IVAR____TtC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController_icc) commandController];
  if (result)
  {
    id v2 = result;
    sub_10078F988(0);
    objc_super v3 = &v2[OBJC_IVAR____TtC8Freeform20CRLCommandController_openGroupDatas];
    swift_beginAccess();
    uint64_t v4 = *(void *)v3;
    if (*(void *)v3 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v5 = _CocoaArrayWrapper.endIndex.getter();
      if (v5)
      {
LABEL_4:
        unint64_t v6 = v5 - 1;
        if (!__OFSUB__(v5, 1))
        {
          if ((v4 & 0xC000000000000001) == 0)
          {
            if ((v6 & 0x8000000000000000) != 0)
            {
              __break(1u);
            }
            else if (v6 < *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10))
            {
              uint64_t v5 = *(void *)(v4 + 8 * v6 + 32);
              swift_retain();
LABEL_9:
              swift_bridgeObjectRelease();
              int v7 = *(unsigned __int8 *)(v5 + 16);
              if (v7 == 3 || v7 == 2 || v7 == 1) {
                goto LABEL_28;
              }
              objc_super v3 = *(char **)v3;
              if (!((unint64_t)v3 >> 62))
              {
                uint64_t v8 = *(void *)(((unint64_t)v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
                uint64_t result = (char *)swift_bridgeObjectRetain_n();
                if (v8)
                {
LABEL_14:
                  if (v8 < 1)
                  {
                    __break(1u);
                    return result;
                  }
                  uint64_t v9 = 0;
                  do
                  {
                    if (((unint64_t)v3 & 0xC000000000000001) != 0)
                    {
                      uint64_t v10 = specialized _ArrayBuffer._getElementSlowPath(_:)();
                    }
                    else
                    {
                      uint64_t v10 = *(void *)&v3[8 * v9 + 32];
                      swift_retain();
                    }
                    ++v9;
                    uint64_t v11 = *(id *)(v10 + 24);
                    sub_10078D41C(v11, 0);
                    swift_release();
                  }
                  while (v8 != v9);
                }
LABEL_27:
                swift_bridgeObjectRelease_n();
                *(unsigned char *)(v5 + 16) = 1;
LABEL_28:

                return (char *)swift_release();
              }
LABEL_26:
              swift_bridgeObjectRetain_n();
              uint64_t result = (char *)_CocoaArrayWrapper.endIndex.getter();
              uint64_t v8 = (uint64_t)result;
              if (result) {
                goto LABEL_14;
              }
              goto LABEL_27;
            }
            __break(1u);
            goto LABEL_26;
          }
LABEL_23:
          uint64_t v5 = specialized _ArrayBuffer._getElementSlowPath(_:)();
          goto LABEL_9;
        }
LABEL_22:
        __break(1u);
        goto LABEL_23;
      }
    }
    else
    {
      uint64_t v5 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v5) {
        goto LABEL_4;
      }
    }
    swift_bridgeObjectRelease();
    id v2 = "enableProgressiveEnqueuingInCurrentGroup() called without a group being open.";
    objc_super v3 = "enableProgressiveEnqueuingInCurrentGroup()";
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"enableProgressiveEnqueuingInCurrentGroup()", 42, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandController.swift", 92, 2, 680, (uint64_t)"enableProgressiveEnqueuingInCurrentGroup() called without a group being open.", 77, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_100586FD4((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"enableProgressiveEnqueuingInCurrentGroup() called without a group being open.");
    sub_1005871AC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"enableProgressiveEnqueuingInCurrentGroup()", 42, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandController.swift", 92, 2, 680);
    SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v12, v13);
    _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
    goto LABEL_22;
  }
  return result;
}

char *sub_100E80BCC()
{
  uint64_t result = (char *)[*(id *)(v0 + OBJC_IVAR____TtC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController_icc) commandController];
  if (result)
  {
    id v2 = result;
    objc_super v3 = &result[OBJC_IVAR____TtC8Freeform20CRLCommandController_openGroupDatas];
    swift_beginAccess();
    unint64_t v4 = *(void *)v3;
    if (v4 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v5 = _CocoaArrayWrapper.endIndex.getter();

      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v5 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    return (char *)(v5 > 0);
  }
  return result;
}

void sub_100E80C90(void *a1)
{
  if (![a1 isViewLoaded]) {
    return;
  }
  if (v1[OBJC_IVAR____TtC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController_isPresentingTextFormatCardUI] != 1) {
    goto LABEL_9;
  }
  id v2 = *(void **)&v1[OBJC_IVAR____TtC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController_presentedNavigationController];
  if (!v2) {
    goto LABEL_9;
  }
  id v3 = [v2 topViewController];
  if (!v3) {
    goto LABEL_9;
  }
  id v24 = v3;
  type metadata accessor for CRLiOSMiniFormatterPopoverContainerViewController();
  if (!swift_dynamicCastClass())
  {

LABEL_9:
    uint64_t v8 = *(void **)&v1[OBJC_IVAR____TtC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController_presentedNavigationController];
    if (!v8) {
      return;
    }
    id v24 = v8;
    sub_100657F44(v9, v10, v11, v12);
    [v24 setPreferredContentSize:];
    goto LABEL_11;
  }
  id v4 = objc_allocWithZone((Class)CRLQuickInspectorElement);
  NSString v5 = String._bridgeToObjectiveC()();
  id v6 = [v4 initWithName:v5 image:0 type:2 options:16];

  if (objc_msgSend(self, "crl_phoneUI")) {
    char v7 = [self crl_deviceIsLandscape];
  }
  else {
    char v7 = 0;
  }
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = v1;
  uint64_t v15 = *(void **)&v1[OBJC_IVAR____TtC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController_editorController];
  int v16 = *(void **)&v1[OBJC_IVAR____TtC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController_icc];
  objc_allocWithZone((Class)type metadata accessor for CRLiOSMiniFormatterTextBuilder());
  id v17 = v1;
  id v18 = v15;
  id v19 = v16;
  id v20 = sub_100564EFC((uint64_t)v1, (uint64_t)&off_101531108, (uint64_t)&off_101531150, v6, v18, v16, v7 ^ 1u, v7, 56.0, 1, (uint64_t)sub_100E81E9C, v14, 0);

  swift_release();
  id v21 = sub_10055AAC4();
  if (v21)
  {
    id v22 = v21;
    sub_1006580C8(v21, v20);
    if (*(void *)&v17[OBJC_IVAR____TtC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController_presentedAuxiliaryViewController])
    {
      uint64_t v23 = *(void **)&v17[OBJC_IVAR____TtC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController_auxiliaryPresentedBuilder];
      *(void *)&v17[OBJC_IVAR____TtC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController_auxiliaryPresentedBuilder] = v20;

      Swift::String v13 = v23;
      goto LABEL_12;
    }
  }
  else
  {
  }
LABEL_11:
  Swift::String v13 = v24;
LABEL_12:
}

void sub_100E80F70()
{
  uint64_t v1 = OBJC_IVAR____TtC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController_presentedNavigationController;
  id v2 = *(void **)(v0
                + OBJC_IVAR____TtC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController_presentedNavigationController);
  if (v2)
  {
    id v3 = [v2 topViewController];
    if (v3)
    {
      id v10 = v3;
      type metadata accessor for CRLiOSMiniFormatterPopoverContainerViewController();
      if (swift_dynamicCastClass())
      {
        id v4 = *(void **)(v0 + v1);
        if (v4)
        {
          id v5 = v4;
          sub_100657F44(v6, v7, v8, v9);
          [v5 setPreferredContentSize:];
        }
      }
    }
  }
}

void sub_100E81038()
{
}

id sub_100E81094(uint64_t a1)
{
  id result = *(id *)(v1
                 + OBJC_IVAR____TtC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController_presentedNavigationController);
  if (result) {
    return [result pushViewController:a1 animated:1];
  }
  return result;
}

void sub_100E810C4()
{
  uint64_t v1 = *(void **)(v0
                + OBJC_IVAR____TtC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController_presentedNavigationController);
  if (v1)
  {
    id v2 = v1;
    id v3 = [v2 popViewControllerAnimated:1];
  }
}

BOOL sub_100E81144()
{
  BOOL result = 1;
  if (objc_msgSend(self, "crl_padUI"))
  {
    id v1 = [v0 traitCollection];
    unsigned int v2 = [v1 crl_isCompactWidth];

    if (!v2) {
      return 0;
    }
  }
  return result;
}

double sub_100E811BC()
{
  if (!objc_msgSend(self, "crl_padUI")) {
    return 110.0;
  }
  id v1 = [v0 traitCollection];
  unsigned int v2 = [v1 crl_isCompactWidth];

  double result = 0.0;
  if (v2) {
    return 110.0;
  }
  return result;
}

void sub_100E8123C()
{
  id v1 = [*(id *)(v0 + OBJC_IVAR____TtC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController_icc) commandController];
  if (v1)
  {
    id v2 = v1;
    sub_10078FB90(0);
  }
}

double sub_100E812C0()
{
  if (qword_10166EDF0 != -1) {
    swift_once();
  }
  return *(double *)&qword_10171A278;
}

void sub_100E81310(void *a1)
{
}

uint64_t sub_100E81334()
{
  sub_1005057FC((uint64_t *)&unk_10168D9A0);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_10117D8C0;
  *(void *)(v0 + 32) = type metadata accessor for UITraitHorizontalSizeClass();
  *(void *)(v0 + 40) = &protocol witness table for UITraitHorizontalSizeClass;
  *(void *)(v0 + 48) = type metadata accessor for UITraitVerticalSizeClass();
  *(void *)(v0 + 56) = &protocol witness table for UITraitVerticalSizeClass;
  return v0;
}

void sub_100E813F4(void *a1)
{
  if (*(void *)(v1
                 + OBJC_IVAR____TtC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController_presentedAuxiliaryViewController))
  {
    id v6 = [a1 presentedViewController];
    sub_100E81B4C();
  }
  else
  {
    id v2 = *(void **)(v1
                  + OBJC_IVAR____TtC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController_editorController);
    if (type metadata accessor for CRLWPEditor()) {
      uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    }
    else {
      uint64_t ObjCClassFromMetadata = 0;
    }
    id v4 = [v2 mostSpecificCurrentEditorOfClass:ObjCClassFromMetadata];
    if (swift_dynamicCastClass())
    {
      swift_unknownObjectRetain();
      sub_100825FC8(1);
      swift_unknownObjectRelease();
    }
    swift_unknownObjectRelease();
    id v5 = *(void **)(v1
                  + OBJC_IVAR____TtC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController_presentedNavigationController);
    *(void *)(v1
              + OBJC_IVAR____TtC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController_presentedNavigationController) = 0;

    *(unsigned char *)(v1
             + OBJC_IVAR____TtC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController_isPresentingTextFormatCardUI) = 0;
  }
}

id sub_100E81640(uint64_t a1, uint64_t (**a2)(uint64_t, uint64_t))
{
  id v3 = &v2[OBJC_IVAR____TtCC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController33CRLiOSMiniFormatterInputViewState_font];
  *(void *)id v3 = 0;
  v3[8] = 0;
  uint64_t v4 = OBJC_IVAR____TtCC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController33CRLiOSMiniFormatterInputViewState_isBold;
  *(_WORD *)&v2[OBJC_IVAR____TtCC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController33CRLiOSMiniFormatterInputViewState_isBold] = 2;
  uint64_t v5 = OBJC_IVAR____TtCC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController33CRLiOSMiniFormatterInputViewState_isItalic;
  *(_WORD *)&v2[OBJC_IVAR____TtCC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController33CRLiOSMiniFormatterInputViewState_isItalic] = 2;
  uint64_t v6 = OBJC_IVAR____TtCC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController33CRLiOSMiniFormatterInputViewState_isUnderlined;
  *(_WORD *)&v2[OBJC_IVAR____TtCC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController33CRLiOSMiniFormatterInputViewState_isUnderlined] = 2;
  uint64_t v7 = OBJC_IVAR____TtCC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController33CRLiOSMiniFormatterInputViewState_isStruckthrough;
  *(_WORD *)&v2[OBJC_IVAR____TtCC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController33CRLiOSMiniFormatterInputViewState_isStruckthrough] = 2;
  double v8 = &v2[OBJC_IVAR____TtCC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController33CRLiOSMiniFormatterInputViewState_horizontalAlignment];
  *(void *)double v8 = 0;
  v8[8] = 2;
  uint64_t v9 = OBJC_IVAR____TtCC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController33CRLiOSMiniFormatterInputViewState_listStyleType;
  *(_WORD *)&v2[OBJC_IVAR____TtCC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController33CRLiOSMiniFormatterInputViewState_listStyleType] = 512;
  if (a1)
  {
    uint64_t v21 = v9;
    uint64_t v18 = v6;
    uint64_t v19 = v7;
    uint64_t ObjectType = swift_getObjectType();
    double v12 = a2[5];
    id v20 = v2;
    swift_unknownObjectRetain();
    uint64_t v13 = v12(ObjectType, (uint64_t)a2);
    uint64_t v14 = *(void **)v3;
    *(void *)id v3 = v13;
    v3[8] = v15;

    *(_WORD *)&v2[v4] = a2[9](ObjectType, (uint64_t)a2);
    *(_WORD *)&v2[v5] = a2[11](ObjectType, (uint64_t)a2);
    *(_WORD *)&v2[v18] = a2[13](ObjectType, (uint64_t)a2);
    *(_WORD *)&v2[v19] = a2[17](ObjectType, (uint64_t)a2);
    *(void *)double v8 = a2[25](ObjectType, (uint64_t)a2);
    v8[8] = v16;
    LOWORD(a2) = a2[34](ObjectType, (uint64_t)a2);
    swift_unknownObjectRelease();
    *(_WORD *)&v2[v21] = (_WORD)a2;
  }
  v22.receiver = v2;
  v22.super_class = (Class)type metadata accessor for CRLiOSMiniFormatterTextEditingAccessoryViewController.CRLiOSMiniFormatterInputViewState();
  return [super init];
}

void sub_100E81848()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1005057FC(&qword_101672BB0);
  __chkstk_darwin(v2 - 8, v3);
  uint64_t v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)(v0
            + OBJC_IVAR____TtC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController__leadingBarButtonGroups) = 0;
  swift_bridgeObjectRelease();
  *(void *)(v0
            + OBJC_IVAR____TtC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController__trailingBarButtonGroups) = 0;
  swift_bridgeObjectRelease();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong) {
    uint64_t v7 = (uint64_t (**)(uint64_t, uint64_t))&off_101516A40;
  }
  else {
    uint64_t v7 = 0;
  }
  id v8 = objc_allocWithZone((Class)type metadata accessor for CRLiOSMiniFormatterTextEditingAccessoryViewController.CRLiOSMiniFormatterInputViewState());
  id v9 = sub_100E81640((uint64_t)Strong, v7);

  uint64_t v10 = OBJC_IVAR____TtC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController_inputViewStateAtLastReload;
  if (!*(void *)(v1
                  + OBJC_IVAR____TtC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController_inputViewStateAtLastReload)
    || (objc_msgSend(v9, "isEqual:") & 1) == 0)
  {
    double v11 = (char *)[*(id *)(v1 + OBJC_IVAR____TtC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController_icc) textInputResponder];
    if (v11)
    {
      double v12 = v11;
      uint64_t v13 = OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_reloadInputViewsTask;
      if (*(void *)&v11[OBJC_IVAR____TtC8Freeform21CRLTextInputResponder_reloadInputViewsTask])
      {
        swift_retain();
        sub_1005057FC(&qword_101672BD0);
        Task.cancel()();
        swift_release();
      }
      uint64_t v14 = type metadata accessor for TaskPriority();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v5, 1, 1, v14);
      type metadata accessor for MainActor();
      char v15 = v12;
      uint64_t v16 = static MainActor.shared.getter();
      id v17 = (void *)swift_allocObject();
      v17[2] = v16;
      void v17[3] = &protocol witness table for MainActor;
      v17[4] = v15;
      *(void *)&v12[v13] = sub_1006D9138((uint64_t)v5, (uint64_t)&unk_1016838B0, (uint64_t)v17);

      swift_release();
    }
    uint64_t v18 = *(void **)(v1 + v10);
    *(void *)(v1 + v10) = v9;
    id v19 = v9;
  }
  id v20 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController_toolbar);
  if (v20)
  {
    id v21 = v20;
    sub_100E7E110();
    sub_10050BF48(0, (unint64_t *)&qword_101674470);
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v21 setItems:isa];
  }
}

uint64_t sub_100E81B0C()
{
  swift_unknownObjectRelease();

  return _swift_deallocObject(v0, 40, 7);
}

void sub_100E81B4C()
{
  uint64_t v1 = *(void **)(v0
                + OBJC_IVAR____TtC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController_presentedNavigationController);
  if (!v1) {
    goto LABEL_17;
  }
  id v2 = v1;
  id v3 = [v2 viewControllers];
  sub_10050BF48(0, (unint64_t *)&qword_1016745A0);
  unint64_t v4 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v4 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = _CocoaArrayWrapper.endIndex.getter();
    if (v5) {
      goto LABEL_4;
    }
  }
  else
  {
    uint64_t v5 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v5)
    {
LABEL_4:
      if (v5 < 1)
      {
        __break(1u);
        return;
      }
      id v17 = v2;
      for (uint64_t i = 0; i != v5; ++i)
      {
        if ((v4 & 0xC000000000000001) != 0) {
          id v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          id v7 = *(id *)(v4 + 8 * i + 32);
        }
        id v20 = v7;
        id v8 = v7;
        sub_1005057FC(&qword_1016787A8);
        if (swift_dynamicCast())
        {
          sub_10053974C(v18, (uint64_t)v21);
          uint64_t v9 = v22;
          uint64_t v10 = v23;
          sub_10050F848(v21, v22);
          (*(void (**)(void, void, uint64_t, uint64_t, uint64_t))(v10 + 48))(0, 0, 2, v9, v10);
          _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v21);
        }
        else
        {
          uint64_t v19 = 0;
          memset(v18, 0, sizeof(v18));
          sub_100522F00((uint64_t)v18, &qword_1016787B0);
        }
      }
      swift_bridgeObjectRelease();
      goto LABEL_16;
    }
  }

  swift_bridgeObjectRelease();
LABEL_16:
  swift_bridgeObjectRelease();
LABEL_17:
  uint64_t Strong = (unsigned char *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    Strong[OBJC_IVAR____TtC8Freeform11CRLWPEditor_resignFirstResponderWhenKeyboardHides] = 1;
  }
  double v12 = *(void **)(v0
                 + OBJC_IVAR____TtC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController_presentedAuxiliaryViewController);
  *(void *)(v0
            + OBJC_IVAR____TtC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController_presentedAuxiliaryViewController) = 0;

  uint64_t v13 = *(void **)(v0
                 + OBJC_IVAR____TtC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController_auxiliaryPresentedBuilder);
  *(void *)(v0
            + OBJC_IVAR____TtC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController_auxiliaryPresentedBuilder) = 0;

  id v14 = [*(id *)(v0 + OBJC_IVAR____TtC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController_icc) layerHost];
  if (v14)
  {
    char v15 = v14;
    if ([v14 respondsToSelector:"asiOSCVC"]) {
      id v16 = [v15 asiOSCVC];
    }
    else {
      id v16 = 0;
    }
    swift_unknownObjectRelease();
    [v16 becomeFirstResponderIfAppropriate];
  }
}

uint64_t sub_100E81E20()
{
  return sub_100E8080C(*(void **)(v0 + 16));
}

uint64_t sub_100E81E3C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100E81E4C()
{
  return swift_release();
}

void sub_100E81E54()
{
  sub_100E80444(*(void *)(v0 + 16), *(void **)(v0 + 24));
}

void sub_100E81E5C()
{
  sub_100E80724(*(void **)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_100E81E64()
{
  return _swift_deallocObject(v0, 24, 7);
}

void sub_100E81E9C()
{
  sub_100E7EC6C(*(void *)(v0 + 16));
}

uint64_t sub_100E81EA4()
{
  return _swift_deallocObject(v0, 32, 7);
}

void sub_100E81EE4(double a1, double a2, double a3, double a4)
{
}

void sub_100E81EF0()
{
  sub_100E7F054(*(void *)(v0 + 16), *(void **)(v0 + 24), *(void *)(v0 + 32));
}

uint64_t sub_100E81EFC()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100E81F34()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_100E81F6C(void *a1)
{
}

Class sub_100E81F74()
{
  uint64_t v1 = OBJC_IVAR____TtC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController__leadingBarButtonGroups;
  Class result = *(Class *)(v0
                    + OBJC_IVAR____TtC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController__leadingBarButtonGroups);
  if (!result)
  {
    uint64_t v3 = v0;
    sub_1005057FC((uint64_t *)&unk_101676C10);
    uint64_t v4 = swift_allocObject();
    *(_OWORD *)(v4 + 16) = xmmword_101177E70;
    uint64_t v5 = swift_allocObject();
    *(_OWORD *)(v5 + 16) = xmmword_10117DF50;
    Class result = sub_100E7E320();
    *(void *)(v5 + 32) = result;
    uint64_t v6 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController_textBuilder);
    if (v6)
    {
      id v7 = v6;
      id v8 = sub_10055C488(1);

      id v9 = [objc_allocWithZone((Class)UIBarButtonItem) initWithCustomView:v8];
      *(void *)(v5 + 40) = v9;
      specialized Array._endMutation()();
      id v10 = objc_allocWithZone((Class)UIBarButtonItemGroup);
      sub_10050BF48(0, (unint64_t *)&qword_101674470);
      Class isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      id v12 = [v10 initWithBarButtonItems:isa representativeItem:0];

      *(void *)(v4 + 32) = v12;
      specialized Array._endMutation()();
      *(void *)(v3 + v1) = v4;
      swift_bridgeObjectRelease();
      Class result = *(Class *)(v3 + v1);
      if (result) {
        return result;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
  }
  return result;
}

void sub_100E8210C()
{
  uint64_t v1 = OBJC_IVAR____TtC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController__trailingBarButtonGroups;
  if (!*(void *)(v0
                  + OBJC_IVAR____TtC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController__trailingBarButtonGroups))
  {
    uint64_t v2 = v0;
    sub_1005057FC((uint64_t *)&unk_101676C10);
    uint64_t v3 = swift_allocObject();
    *(_OWORD *)(v3 + 16) = xmmword_10117DF50;
    uint64_t v4 = OBJC_IVAR____TtC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController_textBuilder;
    uint64_t v5 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController_textBuilder);
    if (v5)
    {
      uint64_t v6 = v3;
      id v7 = v5;
      id v8 = (void *)sub_10055FE30(1, 0, 1);

      id v9 = [objc_allocWithZone((Class)UIBarButtonItem) initWithCustomView:v8];
      *(void *)(v6 + 32) = v9;
      id v10 = *(void **)(v2 + v4);
      if (v10)
      {
        id v11 = v10;
        sub_1005619B4(1, 0, 1);
        uint64_t v13 = v12;

        id v14 = [objc_allocWithZone((Class)UIBarButtonItem) initWithCustomView:v13];
        *(void *)(v6 + 40) = v14;
        specialized Array._endMutation()();
        uint64_t v15 = swift_allocObject();
        *(_OWORD *)(v15 + 16) = xmmword_101177E70;
        id v16 = objc_allocWithZone((Class)UIBarButtonItemGroup);
        sub_10050BF48(0, (unint64_t *)&qword_101674470);
        Class isa = Array._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease();
        id v18 = [v16 initWithBarButtonItems:isa representativeItem:0];

        *(void *)(v15 + 32) = v18;
        specialized Array._endMutation()();
        *(void *)(v2 + v1) = v15;
        swift_bridgeObjectRelease();
        if (*(void *)(v2 + v1)) {
          return;
        }
LABEL_8:
        __break(1u);
        return;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_8;
  }
}

void sub_100E822F0()
{
  *(void *)&v0[OBJC_IVAR____TtC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController_textBuilder] = 0;
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();
  *(void *)&v0[OBJC_IVAR____TtC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController_presentedNavigationController] = 0;
  v0[OBJC_IVAR____TtC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController_isPresentingTextFormatCardUI] = 0;
  *(void *)&v0[OBJC_IVAR____TtC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController_presentedAuxiliaryViewController] = 0;
  *(void *)&v0[OBJC_IVAR____TtC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController_toolbar] = 0;
  *(void *)&v0[OBJC_IVAR____TtC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController_auxiliaryPresentedBuilder] = 0;
  *(void *)&v0[OBJC_IVAR____TtC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController_inputViewStateAtLastReload] = 0;
  *(void *)&v0[OBJC_IVAR____TtC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController__leadingBarButtonGroups] = 0;
  *(void *)&v0[OBJC_IVAR____TtC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController__trailingBarButtonGroups] = 0;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

void sub_100E823E4(void *a1)
{
  uint64_t v2 = v1;
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v5 = (void *)Strong;
    id v6 = sub_100B446A8();

    if (v6)
    {
      id v7 = (void *)swift_allocObject();
      _OWORD v7[2] = v6;
      v7[3] = a1;
      v7[4] = v2;
      uint64_t v8 = OBJC_IVAR____TtC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController_presentedNavigationController;
      id v9 = *(void **)&v2[OBJC_IVAR____TtC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController_presentedNavigationController];
      if (v9)
      {
        id v10 = (void *)swift_allocObject();
        v10[2] = v2;
        v10[3] = sub_100E82750;
        v10[4] = v7;
        UIAction_optional v31 = sub_100E8279C;
        uint64_t v32 = v10;
        aBlock = _NSConcreteStackBlock;
        uint64_t v28 = *(void *)"";
        id v29 = sub_100679958;
        id v30 = &unk_1015315C8;
        id v11 = _Block_copy(&aBlock);
        id v12 = v2;
        id v13 = a1;
        id v14 = v6;
        id v15 = v9;
        swift_retain();
        swift_release();
        [v15 dismissViewControllerAnimated:1 completion:v11];
        swift_release();

        _Block_release(v11);
      }
      else
      {
        id v16 = v2;
        id v17 = a1;
        id v26 = v6;
        id v18 = [v26 presentedViewController];
        if (v18)
        {
          uint64_t v19 = v18;
          uint64_t v20 = swift_allocObject();
          *(void *)(v20 + 16) = sub_100E82750;
          *(void *)(v20 + 24) = v7;
          UIAction_optional v31 = sub_10093B9B4;
          uint64_t v32 = (void *)v20;
          aBlock = _NSConcreteStackBlock;
          uint64_t v28 = *(void *)"";
          id v29 = sub_100679958;
          id v30 = &unk_101531578;
          id v21 = _Block_copy(&aBlock);
          swift_retain();
          swift_release();
          [v19 dismissViewControllerAnimated:1 completion:v21];
          swift_release();

          _Block_release(v21);
        }
        else
        {
          [v26 presentViewController:v17 animated:1 completion:0];
          self;
          uint64_t v22 = swift_dynamicCastObjCClass();
          if (v22)
          {
            uint64_t v25 = *(void **)&v2[v8];
            *(void *)&v2[v8] = v22;
            id v23 = v17;
            swift_release();

            id v24 = v25;
          }
          else
          {
            swift_release();
            id v24 = v26;
          }
        }
      }
    }
  }
}

uint64_t sub_100E82714()
{
  _Block_release(*(const void **)(v0 + 16));

  return _swift_deallocObject(v0, 24, 7);
}

void sub_100E82750()
{
  sub_100E7F59C(*(void **)(v0 + 16), *(void **)(v0 + 24), *(void *)(v0 + 32));
}

uint64_t sub_100E8275C()
{
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_100E8279C()
{
  return sub_100E7F638(*(void *)(v0 + 16), *(uint64_t (**)(void))(v0 + 24));
}

uint64_t sub_100E82808(uint64_t a1)
{
  unint64_t v19 = (unint64_t)_swiftEmptyArrayStorage;
  uint64_t v2 = a1 + 56;
  uint64_t v3 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v4 = -1;
  if (v3 < 64) {
    uint64_t v4 = ~(-1 << v3);
  }
  unint64_t v5 = v4 & *(void *)(a1 + 56);
  int64_t v6 = (unint64_t)(v3 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v8 = 0;
  if (v5) {
    goto LABEL_26;
  }
LABEL_6:
  int64_t v9 = v8 + 1;
  if (!__OFADD__(v8, 1))
  {
    if (v9 < v6)
    {
      unint64_t v10 = *(void *)(v2 + 8 * v9);
      ++v8;
      if (v10) {
        goto LABEL_21;
      }
      int64_t v8 = v9 + 1;
      if (v9 + 1 >= v6) {
        goto LABEL_27;
      }
      unint64_t v10 = *(void *)(v2 + 8 * v8);
      if (v10) {
        goto LABEL_21;
      }
      int64_t v8 = v9 + 2;
      if (v9 + 2 >= v6) {
        goto LABEL_27;
      }
      unint64_t v10 = *(void *)(v2 + 8 * v8);
      if (v10) {
        goto LABEL_21;
      }
      int64_t v8 = v9 + 3;
      if (v9 + 3 >= v6) {
        goto LABEL_27;
      }
      unint64_t v10 = *(void *)(v2 + 8 * v8);
      if (v10)
      {
LABEL_21:
        unint64_t v5 = (v10 - 1) & v10;
        for (unint64_t i = __clz(__rbit64(v10)) + (v8 << 6); ; unint64_t i = v14 | (v8 << 6))
        {
          sub_10050BF84(*(void *)(a1 + 48) + 40 * i, (uint64_t)v17);
          v15[0] = v17[0];
          v15[1] = v17[1];
          uint64_t v16 = v18;
          v13.Class isa = AnyHashable._bridgeToObjectiveC()().isa;
          type metadata accessor for CRLShapeItem();
          if (swift_dynamicCastClass())
          {
            sub_10050BFE0((uint64_t)v15);
            specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
            if (*(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
              specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
            }
            specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
            uint64_t result = specialized Array._endMutation()();
            if (!v5) {
              goto LABEL_6;
            }
          }
          else
          {

            uint64_t result = sub_10050BFE0((uint64_t)v15);
            if (!v5) {
              goto LABEL_6;
            }
          }
LABEL_26:
          unint64_t v14 = __clz(__rbit64(v5));
          v5 &= v5 - 1;
        }
      }
      int64_t v11 = v9 + 4;
      if (v11 < v6)
      {
        unint64_t v10 = *(void *)(v2 + 8 * v11);
        if (v10)
        {
          int64_t v8 = v11;
          goto LABEL_21;
        }
        while (1)
        {
          int64_t v8 = v11 + 1;
          if (__OFADD__(v11, 1)) {
            goto LABEL_29;
          }
          if (v8 >= v6) {
            break;
          }
          unint64_t v10 = *(void *)(v2 + 8 * v8);
          ++v11;
          if (v10) {
            goto LABEL_21;
          }
        }
      }
    }
LABEL_27:
    swift_release();
    return v19;
  }
  __break(1u);
LABEL_29:
  __break(1u);
  return result;
}

id sub_100E82A24(uint64_t a1)
{
  id v6 = 0;
  id v2 = [v1 hitKnobAtPoint:a1 inputType:&v6 returningRep:];
  id v3 = v2;
  if (v2)
  {
    if (v6)
    {
      id v4 = v6;
    }
    else
    {

      return 0;
    }
  }
  return v3;
}

void *sub_100E82AC8()
{
  uint64_t v1 = sub_1005057FC((uint64_t *)&unk_101683E40);
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1, v3);
  unint64_t v5 = (char *)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v6 = (char *)[v0 board];
  if (v6)
  {
    id v7 = v6;
    uint64_t v8 = *(void *)&v6[OBJC_IVAR____TtC8Freeform8CRLBoard_data] + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
    swift_beginAccess();
    uint64_t v9 = type metadata accessor for CRLBoardCRDTData(0);
    (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v5, v8 + *(int *)(v9 + 36), v1);
    id v10 = v7;
    int64_t v11 = sub_1005C2550((uint64_t)v5, (uint64_t)v10);

    (*(void (**)(char *, uint64_t))(v2 + 8))(v5, v1);
    if ((unint64_t)v11 >> 62) {
      goto LABEL_15;
    }
    uint64_t v12 = *(void *)(((unint64_t)v11 & 0xFFFFFFFFFFFFFF8) + 0x10);
    while (v12)
    {
      uint64_t v13 = 4;
      while (1)
      {
        unint64_t v14 = ((unint64_t)v11 & 0xC000000000000001) != 0
            ? (char *)specialized _ArrayBuffer._getElementSlowPath(_:)()
            : (char *)*(id *)&v11[v13];
        id v15 = v14;
        uint64_t v16 = v13 - 3;
        if (__OFADD__(v13 - 4, 1)) {
          break;
        }
        double v18 = *(double *)&v14[OBJC_IVAR____TtC8Freeform12CRLSceneInfo_savedUnscaledRect + 16];
        double v17 = *(double *)&v14[OBJC_IVAR____TtC8Freeform12CRLSceneInfo_savedUnscaledRect + 24];
        double v19 = sub_100065738(*(CGFloat *)&v14[OBJC_IVAR____TtC8Freeform12CRLSceneInfo_savedUnscaledRect], *(CGFloat *)&v14[OBJC_IVAR____TtC8Freeform12CRLSceneInfo_savedUnscaledRect + 8], v18, v17);
        double v21 = v20;
        [v0 visibleUnscaledRect];
        double v26 = sub_100065738(v22, v23, v24, v25);
        BOOL v28 = sub_1000640C4(v19, v21, v26, v27, 40.0);
        [v0 visibleUnscaledRect];
        double v30 = v29;
        [v0 visibleUnscaledRect];
        if (v28)
        {
          double v32 = v31;
          if (sub_100E869E8(v30 / v18) || sub_100E869E8(v32 / v17))
          {
            swift_bridgeObjectRelease();
            return v15;
          }
        }

        ++v13;
        if (v16 == v12) {
          goto LABEL_16;
        }
      }
      __break(1u);
LABEL_15:
      swift_bridgeObjectRetain();
      uint64_t v12 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
LABEL_16:
    swift_bridgeObjectRelease();
  }
  return 0;
}

uint64_t sub_100E82D98()
{
  id v1 = [v0 layoutController];
  [v0 visibleUnscaledRect];
  id v2 = [v1 layoutsInRect:];

  sub_10050BF48(0, (unint64_t *)&qword_101690720);
  unint64_t v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  if (!v4) {
    return 2;
  }
  unint64_t v5 = sub_100E82AC8();

  return v5 != 0;
}

void CRLInteractiveCanvasController.anyConnectorKnobVisible.getter()
{
  id v1 = v0;
  id v2 = [v0 selectionModelTranslator];
  if (!v2) {
    return;
  }
  id v48 = v2;
  id v3 = [v0 editorController];
  if (!v3
    || (uint64_t v4 = v3, v5 = [v3 selectionPath], v4, !v5))
  {
LABEL_55:

    return;
  }
  uint64_t v43 = v5;
  id v6 = [v48 boardItemsForSelectionPath:v5];
  type metadata accessor for CRLBoardItem(0);
  sub_10060A334();
  uint64_t v7 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

  if ((v7 & 0xC000000000000001) != 0)
  {
    __CocoaSet.makeIterator()();
    Set.Iterator.init(_cocoa:)();
    uint64_t v7 = v52;
    uint64_t v46 = v53;
    uint64_t v8 = v54;
    uint64_t v9 = v55;
    unint64_t v10 = v56;
  }
  else
  {
    uint64_t v9 = 0;
    uint64_t v11 = -1 << *(unsigned char *)(v7 + 32);
    uint64_t v46 = v7 + 56;
    uint64_t v12 = ~v11;
    uint64_t v13 = -v11;
    if (v13 < 64) {
      uint64_t v14 = ~(-1 << v13);
    }
    else {
      uint64_t v14 = -1;
    }
    unint64_t v10 = v14 & *(void *)(v7 + 56);
    uint64_t v8 = v12;
  }
  int64_t v44 = (unint64_t)(v8 + 64) >> 6;
  uint64_t v45 = v1;
  uint64_t v47 = v7;
  while (1)
  {
    if (v7 < 0)
    {
      if (!__CocoaSet.Iterator.next()()) {
        goto LABEL_54;
      }
      swift_unknownObjectRetain();
      swift_dynamicCast();
      id v18 = v51;
      swift_unknownObjectRelease();
      uint64_t v17 = v9;
      uint64_t v15 = v10;
      if (!v51) {
        goto LABEL_54;
      }
    }
    else
    {
      if (v10)
      {
        uint64_t v15 = (v10 - 1) & v10;
        unint64_t v16 = __clz(__rbit64(v10)) | (v9 << 6);
        uint64_t v17 = v9;
      }
      else
      {
        int64_t v19 = v9 + 1;
        if (__OFADD__(v9, 1)) {
          goto LABEL_58;
        }
        if (v19 >= v44)
        {
LABEL_54:
          sub_10052E1EC();

          goto LABEL_55;
        }
        unint64_t v20 = *(void *)(v46 + 8 * v19);
        uint64_t v17 = v9 + 1;
        if (!v20)
        {
          uint64_t v17 = v9 + 2;
          if (v9 + 2 >= v44) {
            goto LABEL_54;
          }
          unint64_t v20 = *(void *)(v46 + 8 * v17);
          if (!v20)
          {
            uint64_t v17 = v9 + 3;
            if (v9 + 3 >= v44) {
              goto LABEL_54;
            }
            unint64_t v20 = *(void *)(v46 + 8 * v17);
            if (!v20)
            {
              uint64_t v17 = v9 + 4;
              if (v9 + 4 >= v44) {
                goto LABEL_54;
              }
              unint64_t v20 = *(void *)(v46 + 8 * v17);
              if (!v20)
              {
                uint64_t v21 = v9 + 5;
                do
                {
                  if (v44 == v21) {
                    goto LABEL_54;
                  }
                  unint64_t v20 = *(void *)(v46 + 8 * v21++);
                }
                while (!v20);
                uint64_t v17 = v21 - 1;
              }
            }
          }
        }
        uint64_t v15 = (v20 - 1) & v20;
        unint64_t v16 = __clz(__rbit64(v20)) + (v17 << 6);
      }
      id v18 = *(id *)(*(void *)(v7 + 48) + 8 * v16);
      if (!v18) {
        goto LABEL_54;
      }
    }
    id v22 = [v1 repForInfo:v18];
    if (v22) {
      break;
    }
    CGFloat v23 = v18;
LABEL_12:

    uint64_t v9 = v17;
    unint64_t v10 = v15;
  }
  CGFloat v23 = v22;
  id v24 = [v22 knobs];
  sub_10050BF48(0, &qword_1016787C0);
  unint64_t v25 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v49 = v15;
  uint64_t v50 = v18;
  if (!(v25 >> 62))
  {
    uint64_t v26 = *(void *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v26) {
      goto LABEL_37;
    }
    goto LABEL_11;
  }
  swift_bridgeObjectRetain();
  uint64_t v26 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (!v26)
  {
LABEL_11:

    swift_bridgeObjectRelease();
    id v1 = v45;
    uint64_t v7 = v47;
    uint64_t v15 = v49;
    goto LABEL_12;
  }
LABEL_37:
  uint64_t v27 = 4;
  while (1)
  {
    id v29 = (v25 & 0xC000000000000001) != 0
        ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)()
        : *(id *)(v25 + 8 * v27);
    BOOL v28 = v29;
    uint64_t v30 = v27 - 3;
    if (__OFADD__(v27 - 4, 1)) {
      break;
    }
    type metadata accessor for CRLConnectionLineKnob();
    uint64_t v31 = swift_dynamicCastClass();
    if (!v31) {
      goto LABEL_40;
    }
    double v32 = (void *)v31;
    id v33 = v28;
    id v34 = [v32 rep];
    BOOL v28 = v33;
    if (!v34) {
      goto LABEL_39;
    }
    id v35 = v34;
    id v36 = [v34 interactiveCanvasController];
    if (!v36)
    {

      BOOL v28 = v35;
LABEL_39:

LABEL_40:
      goto LABEL_41;
    }
    uint64_t v37 = v36;
    [v32 position];
    [v35 convertNaturalPointToUnscaledCanvas:];
    [v37 convertUnscaledToBoundsPoint:];
    CGFloat v39 = v38;
    CGFloat v41 = v40;
    [v37 visibleBoundsRect];
    v57.double x = v39;
    v57.double y = v41;
    BOOL v42 = CGRectContainsPoint(v58, v57);

    if (v42)
    {
      swift_bridgeObjectRelease();

      sub_10052E1EC();
      return;
    }
LABEL_41:
    ++v27;
    if (v30 == v26) {
      goto LABEL_11;
    }
  }
  __break(1u);
LABEL_58:
  __break(1u);
}

void sub_100E8342C()
{
  id v1 = v0;
  id v2 = [v0 selectionModelTranslator];
  if (!v2) {
    return;
  }
  id v39 = v2;
  id v3 = [v0 editorController];
  if (!v3
    || (uint64_t v4 = v3, v5 = [v3 selectionPath], v4, !v5))
  {

    return;
  }
  double v38 = v5;
  id v6 = [v39 boardItemsForSelectionPath:v5];
  type metadata accessor for CRLBoardItem(0);
  sub_10060A334();
  uint64_t v7 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

  if ((v7 & 0xC000000000000001) != 0)
  {
    __CocoaSet.makeIterator()();
    Set.Iterator.init(_cocoa:)();
    uint64_t v7 = v49;
    uint64_t v41 = v50;
    uint64_t v8 = v51;
    uint64_t v9 = v52;
    unint64_t v10 = v53;
  }
  else
  {
    uint64_t v9 = 0;
    uint64_t v11 = -1 << *(unsigned char *)(v7 + 32);
    uint64_t v41 = v7 + 56;
    uint64_t v8 = ~v11;
    uint64_t v12 = -v11;
    if (v12 < 64) {
      uint64_t v13 = ~(-1 << v12);
    }
    else {
      uint64_t v13 = -1;
    }
    unint64_t v10 = v13 & *(void *)(v7 + 56);
  }
  int64_t v40 = (unint64_t)(v8 + 64) >> 6;
  uint64_t v42 = v7;
  uint64_t v43 = v1;
  while (1)
  {
    if (v7 < 0)
    {
      if (!__CocoaSet.Iterator.next()()) {
        goto LABEL_69;
      }
      swift_unknownObjectRetain();
      swift_dynamicCast();
      id v17 = (id)v46[0];
      swift_unknownObjectRelease();
      uint64_t v14 = v9;
      uint64_t v15 = v10;
      if (!v17) {
        goto LABEL_69;
      }
    }
    else
    {
      if (v10)
      {
        uint64_t v15 = (v10 - 1) & v10;
        unint64_t v16 = __clz(__rbit64(v10)) | (v9 << 6);
        uint64_t v14 = v9;
      }
      else
      {
        int64_t v18 = v9 + 1;
        if (__OFADD__(v9, 1)) {
          goto LABEL_73;
        }
        if (v18 >= v40) {
          goto LABEL_69;
        }
        unint64_t v19 = *(void *)(v41 + 8 * v18);
        uint64_t v14 = v9 + 1;
        if (!v19)
        {
          uint64_t v14 = v9 + 2;
          if (v9 + 2 >= v40) {
            goto LABEL_69;
          }
          unint64_t v19 = *(void *)(v41 + 8 * v14);
          if (!v19)
          {
            uint64_t v14 = v9 + 3;
            if (v9 + 3 >= v40) {
              goto LABEL_69;
            }
            unint64_t v19 = *(void *)(v41 + 8 * v14);
            if (!v19)
            {
              uint64_t v14 = v9 + 4;
              if (v9 + 4 >= v40) {
                goto LABEL_69;
              }
              unint64_t v19 = *(void *)(v41 + 8 * v14);
              if (!v19)
              {
                uint64_t v20 = v9 + 5;
                while (v40 != v20)
                {
                  unint64_t v19 = *(void *)(v41 + 8 * v20++);
                  if (v19)
                  {
                    uint64_t v14 = v20 - 1;
                    goto LABEL_35;
                  }
                }
LABEL_69:
                sub_10052E1EC();

                return;
              }
            }
          }
        }
LABEL_35:
        uint64_t v15 = (v19 - 1) & v19;
        unint64_t v16 = __clz(__rbit64(v19)) + (v14 << 6);
      }
      id v17 = *(id *)(*(void *)(v7 + 48) + 8 * v16);
      if (!v17) {
        goto LABEL_69;
      }
    }
    id v21 = [v1 repForInfo:v17];
    if (v21) {
      break;
    }
    id v22 = v17;
LABEL_15:

    uint64_t v9 = v14;
    unint64_t v10 = v15;
  }
  id v22 = v21;
  uint64_t v44 = v15;
  uint64_t v45 = v14;
  id v23 = [v21 knobs];
  sub_10050BF48(0, &qword_1016787C0);
  unint64_t v24 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  v46[0] = _swiftEmptyArrayStorage;
  if (!(v24 >> 62))
  {
    uint64_t v25 = *(void *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v25) {
      goto LABEL_40;
    }
LABEL_54:
    swift_bridgeObjectRelease();
    unint64_t v29 = (unint64_t)_swiftEmptyArrayStorage;
    goto LABEL_55;
  }
  swift_bridgeObjectRetain();
  uint64_t v25 = _CocoaArrayWrapper.endIndex.getter();
  if (!v25) {
    goto LABEL_54;
  }
LABEL_40:
  if (v25 >= 1)
  {
    for (uint64_t i = 0; i != v25; ++i)
    {
      if ((v24 & 0xC000000000000001) != 0) {
        id v27 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v27 = *(id *)(v24 + 8 * i + 32);
      }
      BOOL v28 = v27;
      type metadata accessor for CRLConnectionLineKnob();
      if (swift_dynamicCastClass())
      {
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)((v46[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v46[0] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
      }
      else
      {
      }
    }
    swift_bridgeObjectRelease();
    unint64_t v29 = v46[0];
LABEL_55:
    swift_bridgeObjectRelease();
    if (v29 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v30 = _CocoaArrayWrapper.endIndex.getter();
      if (v30) {
        goto LABEL_57;
      }
    }
    else
    {
      uint64_t v30 = *(void *)((v29 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v30)
      {
LABEL_57:
        if (v30 < 1) {
          goto LABEL_72;
        }
        for (uint64_t j = 0; j != v30; ++j)
        {
          if ((v29 & 0xC000000000000001) != 0) {
            id v33 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else {
            id v33 = (char *)*(id *)(v29 + 8 * j + 32);
          }
          id v34 = v33;
          id v35 = *(void **)&v33[OBJC_IVAR____TtC8Freeform21CRLConnectionLineKnob_animatedLayer];
          if (v35)
          {
            id v36 = v35;
            sub_100BCEBB4(0, (uint64_t)v46);

            uint64_t v37 = v47;
            if (v47)
            {
              uint64_t v32 = v48;
              sub_10050F848(v46, v47);
              sub_100F5EFAC(0, 1, 1, 0, 0, 0, 0, v37, v32);
              _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v46);
            }
            else
            {
              sub_100522F00((uint64_t)v46, (uint64_t *)&unk_101683FE0);
            }
          }
        }
      }
    }

    swift_bridgeObjectRelease_n();
    uint64_t v7 = v42;
    id v1 = v43;
    uint64_t v15 = v44;
    uint64_t v14 = v45;
    goto LABEL_15;
  }
  __break(1u);
LABEL_72:
  __break(1u);
LABEL_73:
  __break(1u);
}

void *sub_100E83AC8()
{
  id v1 = (char *)[v0 board];
  id v2 = v1;
  if (v1)
  {
    id v3 = (char *)*(id *)&v1[OBJC_IVAR____TtC8Freeform8CRLBoard_rootContainer];

    uint64_t v4 = OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedOrderedItems;
    id v5 = *(double **)&v3[OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedOrderedItems];
    id v6 = v3;
    if (!v5)
    {
      sub_100846AB0();
      id v5 = *(double **)&v3[v4];
    }
    if (v5) {
      unint64_t v7 = (unint64_t)v5;
    }
    else {
      unint64_t v7 = (unint64_t)_swiftEmptyArrayStorage;
    }
    swift_bridgeObjectRetain();

    if (v7 >> 62) {
      goto LABEL_23;
    }
    unint64_t v8 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v8)
    {
      while (!__OFSUB__(v8--, 1))
      {
        if ((v7 & 0xC000000000000001) != 0)
        {
          id v10 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_15:
          uint64_t v11 = v10;
          id v2 = (void *)sub_100E83C44(v10);

          if (v2) {
            goto LABEL_18;
          }
          if (!v8) {
            goto LABEL_17;
          }
        }
        else
        {
          if ((v8 & 0x8000000000000000) != 0) {
            goto LABEL_21;
          }
          if (v8 < *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            id v10 = *(id *)(v7 + 32 + 8 * v8);
            goto LABEL_15;
          }
LABEL_22:
          __break(1u);
LABEL_23:
          swift_bridgeObjectRetain();
          unint64_t v8 = _CocoaArrayWrapper.endIndex.getter();
          swift_bridgeObjectRelease();
          if (!v8) {
            goto LABEL_17;
          }
        }
      }
      __break(1u);
LABEL_21:
      __break(1u);
      goto LABEL_22;
    }
LABEL_17:
    id v2 = 0;
LABEL_18:

    swift_bridgeObjectRelease();
  }
  return v2;
}

uint64_t sub_100E83C44(void *a1)
{
  id v2 = v1;
  type metadata accessor for CRLConnectionLineItem();
  uint64_t v4 = swift_dynamicCastClass();
  if (!v4)
  {
    type metadata accessor for CRLGroupItem();
    uint64_t v8 = swift_dynamicCastClass();
    if (!v8) {
      return 0;
    }
    uint64_t v9 = v8;
    type metadata accessor for CRLFreehandDrawingItem();
    uint64_t v7 = 0;
    if (swift_dynamicCastClass()) {
      return v7;
    }
    uint64_t v10 = OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedOrderedItems;
    uint64_t v11 = *(double **)(v9 + OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedOrderedItems);
    id v12 = a1;
    if (!v11)
    {
      sub_100846AB0();
      uint64_t v11 = *(double **)(v9 + v10);
    }
    if (v11) {
      unint64_t v13 = (unint64_t)v11;
    }
    else {
      unint64_t v13 = (unint64_t)_swiftEmptyArrayStorage;
    }
    if (v13 >> 62) {
      goto LABEL_29;
    }
    unint64_t v14 = *(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (!v14)
    {
LABEL_22:

      swift_bridgeObjectRelease();
      return 0;
    }
    while (1)
    {
      while (__OFSUB__(v14--, 1))
      {
        __break(1u);
LABEL_27:
        __break(1u);
LABEL_28:
        __break(1u);
LABEL_29:
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        unint64_t v14 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        if (!v14) {
          goto LABEL_22;
        }
      }
      if ((v13 & 0xC000000000000001) != 0)
      {
        id v16 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        goto LABEL_20;
      }
      if ((v14 & 0x8000000000000000) != 0) {
        goto LABEL_27;
      }
      if (v14 >= *(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        goto LABEL_28;
      }
      id v16 = *(id *)(v13 + 32 + 8 * v14);
LABEL_20:
      id v17 = v16;
      uint64_t v7 = sub_100E83C44();

      if (v7)
      {

        swift_bridgeObjectRelease();
        return v7;
      }
      if (!v14) {
        goto LABEL_22;
      }
    }
  }
  id v5 = [v2 layoutForInfo:v4];
  if (!v5) {
    return 0;
  }
  id v6 = v5;
  self;
  uint64_t v7 = swift_dynamicCastObjCClass();
  if (!v7) {

  }
  return v7;
}

void sub_100E83E34()
{
  id v1 = v0;
  uint64_t v102 = type metadata accessor for CRLBoard.RealTimeSessionInfo(0);
  uint64_t v2 = *(void *)(v102 - 8);
  __chkstk_darwin(v102, v3);
  uint64_t v95 = (uint64_t *)((char *)&v86 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v5 = type metadata accessor for Date();
  uint64_t v99 = *(void *)(v5 - 8);
  __chkstk_darwin(v5, v6);
  uint64_t v8 = (char *)&v86 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1005057FC((uint64_t *)&unk_101674520);
  __chkstk_darwin(v9 - 8, v10);
  id v12 = (char *)&v86 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13, v14);
  uint64_t v100 = (char *)&v86 - v15;
  uint64_t v97 = type metadata accessor for CRLCollaboratorCursor();
  __chkstk_darwin(v97, v16);
  int64_t v18 = (char *)&v86 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19, v20);
  uint64_t v98 = (char *)&v86 - v21;
  uint64_t v22 = type metadata accessor for UUID();
  uint64_t v23 = *(void *)(v22 - 8);
  __chkstk_darwin(v22, v24);
  uint64_t v26 = (char *)&v86 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v27, v28);
  uint64_t v101 = (uint64_t)&v86 - v29;
  uint64_t v30 = sub_1005057FC((uint64_t *)&unk_10169A1A0);
  __chkstk_darwin(v30 - 8, v31);
  uint64_t v96 = (uint64_t)&v86 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&double v35 = __chkstk_darwin(v33, v34).n128_u64[0];
  uint64_t v37 = (char *)&v86 - v36;
  double v38 = [v1 editingCoordinator];
  if (v38)
  {
    v103 = v38;
    id v93 = v1;
    id v39 = [v1 editorController];
    if (v39)
    {
      id v94 = v39;
      uint64_t v92 = v22;
      uint64_t v91 = v23;
      uint64_t v40 = *(void *)&v103[OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard]
          + OBJC_IVAR____TtC8Freeform8CRLBoard_realTimeSessionInfo;
      swift_beginAccess();
      sub_100522E9C(v40, (uint64_t)v37, (uint64_t *)&unk_10169A1A0);
      uint64_t v41 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48);
      uint64_t v90 = v2 + 48;
      LODWORD(v40) = v41(v37, 1, v102);
      sub_100522F00((uint64_t)v37, (uint64_t *)&unk_10169A1A0);
      if (v40 == 1)
      {

        return;
      }
      uint64_t v88 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v41;
      id v43 = [v94 selectionPath];
      id v44 = v93;
      id v45 = sub_100E848E8(v43);

      id v46 = objc_allocWithZone((Class)type metadata accessor for CRLPersistableSelectionPath(0));
      id v89 = v45;
      sub_10064A0DC(v89);
      uint64_t v48 = v47;
      uint64_t v49 = v101;
      sub_10081CB88(v101);
      uint64_t v86 = 0;
      id v87 = v48;
      uint64_t v50 = v91;
      uint64_t v51 = (uint64_t)v100;
      uint64_t v52 = v49;
      uint64_t v53 = v92;
      (*(void (**)(char *, uint64_t, uint64_t))(v91 + 16))(v100, v52, v92);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v50 + 56))(v51, 0, 1, v53);
      Date.init()();
      Date.timeIntervalSince1970.getter();
      uint64_t v55 = v54;
      uint64_t v56 = v5;
      uint64_t v57 = v51;
      (*(void (**)(char *, uint64_t))(v99 + 8))(v8, v56);
      sub_100522E9C(v51, (uint64_t)v12, (uint64_t *)&unk_101674520);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v50 + 48))(v12, 1, v53) == 1)
      {
        id v58 = v87;
        id v59 = v87;
        sub_100522F00((uint64_t)v12, (uint64_t *)&unk_101674520);
        sub_1005F7CE8();
        swift_allocError();
        *uint64_t v60 = 0;
        swift_willThrow();

        sub_100522F00(v51, (uint64_t *)&unk_101674520);
        (*(void (**)(uint64_t, uint64_t))(v50 + 8))(v101, v53);
        id v61 = v58;
        uint64_t v62 = v89;
      }
      else
      {
        uint64_t v65 = v50;
        uint64_t v66 = *(void (**)(char *, char *, uint64_t))(v50 + 32);
        v66(v26, v12, v53);
        id v67 = v87;
        sub_100522F00(v57, (uint64_t *)&unk_101674520);
        v66(v18, v26, v53);
        uint64_t v68 = v97;
        uint64_t v69 = (uint64_t)v98;
        *(void *)&v18[*(int *)(v97 + 24)] = v55;
        *(void *)&v18[*(int *)(v68 + 20)] = v67;
        sub_100E86C34((uint64_t)v18, v69, (uint64_t (*)(void))type metadata accessor for CRLCollaboratorCursor);
        uint64_t v70 = (char *)[v44 board];
        if (!v70)
        {
          __break(1u);
          return;
        }
        uint64_t v71 = v70;
        uint64_t v72 = (char *)*(id *)&v70[OBJC_IVAR____TtC8Freeform8CRLBoard_store];

        id v73 = *(id *)&v72[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore_crdtContext];
        uint64_t v74 = v86;
        uint64_t v75 = sub_1009DE544((uint64_t)v73);
        uint64_t v77 = v101;
        if (!v74)
        {
          uint64_t v78 = v75;
          unint64_t v79 = v76;

          sub_100510D4C(v78, v79);
          id v80 = [v93 board];
          if (v80)
          {
            uint64_t v81 = v80;
            uint64_t v82 = (uint64_t)v80 + OBJC_IVAR____TtC8Freeform8CRLBoard_realTimeSessionInfo;
            swift_beginAccess();
            uint64_t v83 = v96;
            sub_100522E9C(v82, v96, (uint64_t *)&unk_10169A1A0);

            if (v88(v83, 1, v102))
            {

              sub_100510084(v78, v79);
              sub_100510084(v78, v79);

              sub_100E86C9C(v69, (uint64_t (*)(void))type metadata accessor for CRLCollaboratorCursor);
              (*(void (**)(uint64_t, uint64_t))(v65 + 8))(v77, v92);
              sub_100522F00(v83, (uint64_t *)&unk_10169A1A0);
            }
            else
            {
              uint64_t v84 = v95;
              sub_100E86BCC(v83, (uint64_t)v95, type metadata accessor for CRLBoard.RealTimeSessionInfo);
              sub_100522F00(v83, (uint64_t *)&unk_10169A1A0);
              uint64_t v85 = *v84;
              swift_retain();
              sub_100E86C9C((uint64_t)v84, type metadata accessor for CRLBoard.RealTimeSessionInfo);
              sub_100510D4C(v78, v79);
              sub_100F28FE0(1, v78, v79, v85);
              swift_release();

              sub_100510084(v78, v79);
              sub_100510084(v78, v79);

              sub_100E86C9C(v69, (uint64_t (*)(void))type metadata accessor for CRLCollaboratorCursor);
              (*(void (**)(uint64_t, uint64_t))(v65 + 8))(v77, v92);
              sub_100510084(v78, v79);
            }
          }
          else
          {

            sub_100510084(v78, v79);
            sub_100510084(v78, v79);

            sub_100E86C9C(v69, (uint64_t (*)(void))type metadata accessor for CRLCollaboratorCursor);
            (*(void (**)(uint64_t, uint64_t))(v50 + 8))(v77, v92);
          }
          return;
        }

        sub_100E86C9C(v69, (uint64_t (*)(void))type metadata accessor for CRLCollaboratorCursor);
        (*(void (**)(uint64_t, uint64_t))(v50 + 8))(v77, v92);
        uint64_t v62 = v89;
        id v61 = v87;
      }
      if (qword_10166FBA0 != -1) {
        swift_once();
      }
      swift_beginAccess();
      id v63 = (id)static OS_os_log.realTimeSync;
      uint64_t v64 = static os_log_type_t.error.getter();
      sub_100BAC898((uint64_t)v63, (uint64_t)&_mh_execute_header, v64, (uint64_t)"Error sending selection to peers", 32, 2, (uint64_t)_swiftEmptyArrayStorage);

      swift_errorRelease();
    }
    else
    {
      id v42 = v103;
    }
  }
}

id sub_100E848E8(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v3 = &_swiftEmptySetSingleton;
  uint64_t v64 = &_swiftEmptySetSingleton;
  id v4 = [v1 selectionModelTranslator];
  if (v4)
  {
    uint64_t v5 = v4;
    id v6 = [v4 infosForSelectionPath:a1];

    uint64_t v3 = (unsigned char *)static Set._unconditionallyBridgeFromObjectiveC(_:)();
  }
  uint64_t v7 = swift_bridgeObjectRetain();
  uint64_t v9 = *(void *)(sub_100E866AC(v7, v8) + 16);
  id result = (id)swift_release();
  if (v9)
  {
    id v50 = v2;
    int64_t v11 = 0;
    id v12 = v3 + 56;
    uint64_t v13 = 1 << v3[32];
    if (v13 < 64) {
      uint64_t v14 = ~(-1 << v13);
    }
    else {
      uint64_t v14 = -1;
    }
    unint64_t v15 = v14 & *((void *)v3 + 7);
    int64_t v16 = (unint64_t)(v13 + 63) >> 6;
    uint64_t v17 = &selRef_invalidateSizedImageIfNeededForBakedMaskPathFromBlock_;
    int64_t v18 = &selRef_lineFragmentClosestToPoint_knobTag_;
    uint64_t v52 = v3 + 56;
    uint64_t v53 = v3;
    int64_t v51 = v16;
    if (v15) {
      goto LABEL_10;
    }
LABEL_11:
    int64_t v21 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
LABEL_62:
      __break(1u);
LABEL_63:
      __break(1u);
      return result;
    }
    if (v21 >= v16) {
      goto LABEL_56;
    }
    unint64_t v22 = *(void *)&v12[8 * v21];
    int64_t v23 = v11 + 1;
    if (!v22)
    {
      int64_t v23 = v11 + 2;
      if (v11 + 2 >= v16) {
        goto LABEL_56;
      }
      unint64_t v22 = *(void *)&v12[8 * v23];
      if (v22) {
        goto LABEL_24;
      }
      int64_t v23 = v11 + 3;
      if (v11 + 3 >= v16)
      {
LABEL_56:
        swift_release();
        id v46 = [v50 selectionModelTranslator];
        if (v46)
        {
          uint64_t v47 = v46;
          Class isa = Set._bridgeToObjectiveC()().super.isa;
          swift_bridgeObjectRelease();
          id v49 = [v47 selectionPathForInfos:isa];

          return v49;
        }
        goto LABEL_58;
      }
      unint64_t v22 = *(void *)&v12[8 * v23];
      if (!v22)
      {
        uint64_t v24 = v11 + 4;
        if (v11 + 4 < v16)
        {
          unint64_t v22 = *(void *)&v12[8 * v24];
          if (v22)
          {
            int64_t v23 = v11 + 4;
            goto LABEL_24;
          }
          while (1)
          {
            int64_t v23 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_63;
            }
            if (v23 >= v16) {
              goto LABEL_56;
            }
            unint64_t v22 = *(void *)&v12[8 * v23];
            ++v24;
            if (v22) {
              goto LABEL_24;
            }
          }
        }
        goto LABEL_56;
      }
    }
LABEL_24:
    unint64_t v15 = (v22 - 1) & v22;
    int64_t v57 = v23;
    for (unint64_t i = __clz(__rbit64(v22)) + (v23 << 6); ; unint64_t i = v19 | (v11 << 6))
    {
      sub_10050BF84(*((void *)v3 + 6) + 40 * i, (uint64_t)v62);
      v60[0] = v62[0];
      v60[1] = v62[1];
      uint64_t v61 = v63;
      Class v25 = AnyHashable._bridgeToObjectiveC()().isa;
      type metadata accessor for CRLFreehandDrawingShapeItem();
      uint64_t v26 = swift_dynamicCastClass();

      if (!v26) {
        goto LABEL_53;
      }
      type metadata accessor for CRLGroupSelection();
      id v27 = [a1 v18[316] swift_getObjCClassFromMetadata];
      if (!v27) {
        goto LABEL_53;
      }
      uint64_t v28 = v27;
      if (!swift_dynamicCastClass()) {
        break;
      }
      uint64_t v55 = v28;
      uint64_t v29 = sub_10092AACC();
      uint64_t v30 = (id *)v29;
      if ((unint64_t)v29 >> 62)
      {
        id result = (id)_CocoaArrayWrapper.endIndex.getter();
        if (!result)
        {
LABEL_51:

          swift_bridgeObjectRelease();
LABEL_52:
          int64_t v18 = &selRef_lineFragmentClosestToPoint_knobTag_;
LABEL_53:
          if (objc_msgSend(self, v17[212], 0))
          {
            sub_10050BF84((uint64_t)v60, (uint64_t)v58);
            sub_100CBC6D4((uint64_t)v59, (uint64_t)v58);
            sub_10050BFE0((uint64_t)v59);
          }
          id result = (id)sub_10050BFE0((uint64_t)v60);
          int64_t v11 = v57;
          if (!v15) {
            goto LABEL_11;
          }
          goto LABEL_10;
        }
      }
      else
      {
        id result = *(id *)(((unint64_t)v29 & 0xFFFFFFFFFFFFFF8) + 0x10);
        if (!result) {
          goto LABEL_51;
        }
      }
      if (((unint64_t)v30 & 0xC000000000000001) != 0)
      {
        id v31 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        if (!*(void *)(((unint64_t)v30 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          goto LABEL_62;
        }
        id v31 = v30[4];
      }
      uint64_t v32 = v31;
      swift_bridgeObjectRelease();
      type metadata accessor for CRLFreehandDrawingItem();
      if (!swift_dynamicCastClass())
      {

        uint64_t v17 = &selRef_invalidateSizedImageIfNeededForBakedMaskPathFromBlock_;
        goto LABEL_52;
      }
      uint64_t v54 = v32;
      uint64_t v33 = v64;
      uint64_t v34 = sub_10092AACC();
      double v35 = sub_100591094((unint64_t)v34);
      swift_bridgeObjectRelease();
      uint64_t v36 = *((void *)v35 + 2);
      if (v36)
      {
        uint64_t v37 = 0;
        double v38 = v35 + 4;
        do
        {
          sub_10050BF84((uint64_t)&v38[5 * v37], (uint64_t)v59);
          Swift::Int v40 = v33[5];
          swift_bridgeObjectRetain();
          Swift::Int v41 = AnyHashable._rawHashValue(seed:)(v40);
          uint64_t v42 = -1 << *((unsigned char *)v33 + 32);
          unint64_t v43 = v41 & ~v42;
          if ((*(void *)((char *)v33 + ((v43 >> 3) & 0xFFFFFFFFFFFFFF8) + 56) >> v43))
          {
            uint64_t v44 = ~v42;
            while (1)
            {
              sub_10050BF84(v33[6] + 40 * v43, (uint64_t)v58);
              char v45 = static AnyHashable.== infix(_:_:)();
              sub_10050BFE0((uint64_t)v58);
              if (v45) {
                break;
              }
              unint64_t v43 = (v43 + 1) & v44;
              if (((*(void *)((char *)v33 + ((v43 >> 3) & 0xFFFFFFFFFFFFFF8) + 56) >> v43) & 1) == 0) {
                goto LABEL_36;
              }
            }
          }
          else
          {
LABEL_36:
            swift_bridgeObjectRelease();
            char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            sub_10050BF84((uint64_t)v59, (uint64_t)v58);
            sub_100CCC768((Swift::Int)v58, v43, isUniquelyReferenced_nonNull_native);
          }
          swift_bridgeObjectRelease();
          sub_10050BFE0((uint64_t)v59);
          ++v37;
        }
        while (v37 != v36);
        swift_bridgeObjectRelease();
        id v12 = v52;
        uint64_t v3 = v53;
        int64_t v16 = v51;
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      uint64_t v17 = &selRef_invalidateSizedImageIfNeededForBakedMaskPathFromBlock_;
      int64_t v11 = v57;

      id result = (id)sub_10050BFE0((uint64_t)v60);
      uint64_t v64 = v33;
      int64_t v18 = &selRef_lineFragmentClosestToPoint_knobTag_;
      if (!v15) {
        goto LABEL_11;
      }
LABEL_10:
      unint64_t v19 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      int64_t v57 = v11;
    }

    goto LABEL_53;
  }
LABEL_58:
  swift_bridgeObjectRelease();

  return a1;
}

void sub_100E84EEC()
{
  uint64_t v67 = type metadata accessor for CRLRealTimeEnter(0);
  __chkstk_darwin(v67, v1);
  uint64_t v66 = (uint64_t *)((char *)&v61 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v3, v4);
  uint64_t v68 = (uint64_t)&v61 - v5;
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6, v8);
  uint64_t v69 = (char *)&v61 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10, v11);
  uint64_t v13 = (char *)&v61 - v12;
  uint64_t v14 = type metadata accessor for CRLBoard.RealTimeSessionInfo(0);
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14, v16);
  int64_t v18 = (uint64_t *)((char *)&v61 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v19 = sub_1005057FC((uint64_t *)&unk_10169A1A0);
  __chkstk_darwin(v19 - 8, v20);
  unint64_t v22 = (char *)&v61 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&double v25 = __chkstk_darwin(v23, v24).n128_u64[0];
  id v27 = (char *)&v61 - v26;
  uint64_t v28 = (char *)[v0 editingCoordinator:v25];
  if (!v28) {
    return;
  }
  uint64_t v29 = v28;
  uint64_t v63 = v6;
  uint64_t v64 = v13;
  uint64_t v62 = v7;
  uint64_t v65 = v18;
  uint64_t v30 = *(void *)&v28[OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard]
      + OBJC_IVAR____TtC8Freeform8CRLBoard_realTimeSessionInfo;
  swift_beginAccess();
  sub_100522E9C(v30, (uint64_t)v27, (uint64_t *)&unk_10169A1A0);
  id v31 = v29;
  uint64_t v32 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v15 + 48);
  LODWORD(v30) = v32(v27, 1, v14);
  sub_100522F00((uint64_t)v27, (uint64_t *)&unk_10169A1A0);
  if (v30 == 1)
  {

    return;
  }
  id v33 = [v0 board];
  if (!v33)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56))(v22, 1, 1, v14);
    goto LABEL_13;
  }
  uint64_t v34 = v33;
  uint64_t v35 = (uint64_t)v33 + OBJC_IVAR____TtC8Freeform8CRLBoard_realTimeSessionInfo;
  swift_beginAccess();
  sub_100522E9C(v35, (uint64_t)v22, (uint64_t *)&unk_10169A1A0);

  if (v32(v22, 1, v14) == 1)
  {
LABEL_13:

    sub_100522F00((uint64_t)v22, (uint64_t *)&unk_10169A1A0);
    return;
  }
  uint64_t v36 = v65;
  sub_100E86C34((uint64_t)v22, (uint64_t)v65, type metadata accessor for CRLBoard.RealTimeSessionInfo);
  uint64_t v37 = (char *)[v0 board];
  if (v37
    && (double v38 = v37,
        uint64_t v39 = *(void *)&v37[OBJC_IVAR____TtC8Freeform8CRLBoard_shareState],
        swift_retain(),
        v38,
        id v40 = [*(id *)(v39 + 16) currentUserParticipant],
        swift_release(),
        v40))
  {
    uint64_t v41 = (uint64_t)v64;
    sub_10081CB88((uint64_t)v64);
    uint64_t v61 = 0;
    id v44 = [v40 userIdentity];
    uint64_t v46 = v62;
    uint64_t v45 = v63;
    uint64_t v47 = v69;
    (*(void (**)(char *, uint64_t, uint64_t))(v62 + 16))(v69, v41, v63);
    Date.timeIntervalSince1970.getter();
    if (v44)
    {
      uint64_t v49 = v48;
      uint64_t v51 = (uint64_t)v66;
      id v50 = (int *)v67;
      *uint64_t v66 = v44;
      (*(void (**)(uint64_t, char *, uint64_t))(v46 + 32))(v51 + v50[5], v47, v45);
      *(void *)(v51 + v50[6]) = v49;
      *(unsigned char *)(v51 + v50[7]) = 1;
      uint64_t v52 = v68;
      sub_100E86C34(v51, v68, type metadata accessor for CRLRealTimeEnter);
      uint64_t v53 = v61;
      uint64_t v54 = sub_1008A93A8();
      if (!v53)
      {
        uint64_t v58 = v54;
        unint64_t v59 = v55;
        uint64_t v60 = *v36;
        sub_100510D4C(v54, v55);
        sub_100510D4C(v58, v59);
        swift_retain();
        sub_100F28FE0(2, v58, v59, v60);

        swift_release();
        sub_100510084(v58, v59);
        sub_100510084(v58, v59);
        sub_100E86C9C(v52, type metadata accessor for CRLRealTimeEnter);
        (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v41, v45);
        sub_100E86C9C((uint64_t)v36, type metadata accessor for CRLBoard.RealTimeSessionInfo);
        sub_100510084(v58, v59);
        return;
      }
      sub_100E86C9C(v52, type metadata accessor for CRLRealTimeEnter);
      (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v41, v45);
    }
    else
    {
      sub_1005F7CE8();
      swift_allocError();
      *uint64_t v56 = 0;
      swift_willThrow();
      int64_t v57 = *(void (**)(char *, uint64_t))(v46 + 8);
      v57(v47, v45);
      v57((char *)v41, v45);
    }
    if (qword_10166FBA0 != -1) {
      swift_once();
    }
    swift_beginAccess();
    id v42 = (id)static OS_os_log.realTimeSync;
    uint64_t v43 = static os_log_type_t.error.getter();
    sub_100BAC898((uint64_t)v42, (uint64_t)&_mh_execute_header, v43, (uint64_t)"Error sending Real Time Enter to peers", 38, 2, (uint64_t)_swiftEmptyArrayStorage);

    swift_errorRelease();
  }
  else
  {
  }
  sub_100E86C9C((uint64_t)v36, type metadata accessor for CRLBoard.RealTimeSessionInfo);
}

uint64_t sub_100E85664()
{
  id v1 = [v0 infosForCurrentSelectionPath];
  unint64_t v2 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

  unint64_t v3 = sub_100E82808(v2);
  unint64_t v4 = v3;
  if (v3 >> 62) {
    goto LABEL_20;
  }
  for (uint64_t i = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10); ; uint64_t i = _CocoaArrayWrapper.endIndex.getter())
  {
    uint64_t v6 = *(void *)(v2 + 16);
    swift_bridgeObjectRelease();
    if (i < v6) {
      break;
    }
    id v8 = v0;
    unint64_t v2 = (unint64_t)sub_100E86A14(v4, v8);
    swift_bridgeObjectRelease();

    if (v2 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v0 = (void *)_CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (!v0)
      {
LABEL_16:
        swift_bridgeObjectRelease();
        return 1;
      }
    }
    else
    {
      uint64_t v0 = *(void **)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (!v0) {
        goto LABEL_16;
      }
    }
    uint64_t v9 = 4;
    while (1)
    {
      unint64_t v4 = v9 - 4;
      id v10 = (v2 & 0xC000000000000001) != 0
          ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)()
          : *(id *)(v2 + 8 * v9);
      uint64_t v11 = v10;
      uint64_t v12 = (void *)(v9 - 3);
      if (__OFADD__(v4, 1)) {
        break;
      }
      if (([v10 isPathEditable] & 1) == 0)
      {
        swift_bridgeObjectRelease();

        return 0;
      }
      unsigned int v13 = [v11 isEditingPath];

      if (!v13) {
        goto LABEL_4;
      }
      ++v9;
      if (v12 == v0) {
        goto LABEL_16;
      }
    }
    __break(1u);
LABEL_20:
    ;
  }
LABEL_4:
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_100E85870(char *a1)
{
  uint64_t v81 = a1;
  uint64_t v2 = sub_1005057FC(&qword_101681D80);
  __chkstk_darwin(v2 - 8, v3);
  uint64_t v82 = (char *)&v73 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v78 = type metadata accessor for CRLStartOrEndFollow();
  uint64_t v77 = *(void *)(v78 - 8);
  __chkstk_darwin(v78, v5);
  uint64_t v75 = (char *)&v73 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7, v8);
  uint64_t v76 = (uint64_t)&v73 - v9;
  uint64_t v10 = sub_1005057FC((uint64_t *)&unk_101674520);
  __chkstk_darwin(v10 - 8, v11);
  id v80 = (char *)&v73 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13, v14);
  unint64_t v79 = (char *)&v73 - v15;
  __chkstk_darwin(v16, v17);
  uint64_t v85 = (char *)&v73 - v18;
  uint64_t v19 = type metadata accessor for UUID();
  uint64_t v84 = *(void *)(v19 - 8);
  __chkstk_darwin(v19, v20);
  uint64_t v83 = (char *)&v73 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_1005057FC((uint64_t *)&unk_10169A1A0);
  __chkstk_darwin(v22 - 8, v23);
  double v25 = (char *)&v73 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26, v27);
  uint64_t v29 = (char *)&v73 - v28;
  uint64_t v30 = type metadata accessor for CRLBoard.RealTimeSessionInfo(0);
  uint64_t v31 = *(void *)(v30 - 8);
  __chkstk_darwin(v30, v32);
  uint64_t v34 = (char *)&v73 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&double v37 = __chkstk_darwin(v35, v36).n128_u64[0];
  uint64_t v39 = (uint64_t *)((char *)&v73 - v38);
  id v40 = [v1 board:v37];
  if (!v40)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v31 + 56))(v29, 1, 1, v30);
    goto LABEL_9;
  }
  uint64_t v41 = v40;
  uint64_t v74 = v19;
  uint64_t v42 = (uint64_t)v40 + OBJC_IVAR____TtC8Freeform8CRLBoard_realTimeSessionInfo;
  swift_beginAccess();
  sub_100522E9C(v42, (uint64_t)v29, (uint64_t *)&unk_10169A1A0);

  uint64_t v43 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48);
  if (v43(v29, 1, v30) == 1)
  {
LABEL_9:
    id v50 = (uint64_t *)&unk_10169A1A0;
    uint64_t v51 = (uint64_t)v29;
    goto LABEL_10;
  }
  uint64_t v44 = (uint64_t)v29;
  uint64_t v45 = v39;
  sub_100E86C34(v44, (uint64_t)v39, type metadata accessor for CRLBoard.RealTimeSessionInfo);
  id v46 = [v1 board];
  uint64_t v47 = v85;
  if (!v46)
  {
LABEL_6:
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v84 + 56))(v47, 1, 1, v74);
LABEL_7:
    sub_100E86C9C((uint64_t)v39, type metadata accessor for CRLBoard.RealTimeSessionInfo);
    id v50 = (uint64_t *)&unk_101674520;
    uint64_t v51 = (uint64_t)v47;
LABEL_10:
    sub_100522F00(v51, v50);
    return 0;
  }
  uint64_t v48 = v46;
  uint64_t v49 = (uint64_t)v46 + OBJC_IVAR____TtC8Freeform8CRLBoard_realTimeSessionInfo;
  swift_beginAccess();
  sub_100522E9C(v49, (uint64_t)v25, (uint64_t *)&unk_10169A1A0);

  if (v43(v25, 1, v30))
  {
    sub_100522F00((uint64_t)v25, (uint64_t *)&unk_10169A1A0);
    goto LABEL_6;
  }
  sub_100E86BCC((uint64_t)v25, (uint64_t)v34, type metadata accessor for CRLBoard.RealTimeSessionInfo);
  sub_100522F00((uint64_t)v25, (uint64_t *)&unk_10169A1A0);
  swift_retain();
  sub_100E86C9C((uint64_t)v34, type metadata accessor for CRLBoard.RealTimeSessionInfo);
  uint64_t v54 = sub_100709868();
  swift_release();
  if (!v54) {
    goto LABEL_6;
  }
  uint64_t v55 = v84;
  uint64_t v56 = *(void (**)(char *, char *, uint64_t))(v84 + 16);
  uint64_t v57 = v74;
  v56(v47, &v54[OBJC_IVAR____TtC8Freeform23CRLCollaboratorPresence_presenceUUID], v74);

  uint64_t v58 = *(void (**)(char *, void, uint64_t, uint64_t))(v55 + 56);
  v58(v47, 0, 1, v57);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v55 + 48))(v47, 1, v57) == 1) {
    goto LABEL_7;
  }
  unint64_t v59 = v83;
  (*(void (**)(char *, char *, uint64_t))(v55 + 32))(v83, v47, v57);
  uint64_t v60 = (uint64_t)v79;
  v56(v79, v59, v57);
  v58((char *)v60, 0, 1, v57);
  uint64_t v61 = (uint64_t)v80;
  v56(v80, v81, v57);
  v58((char *)v61, 0, 1, v57);
  uint64_t v62 = v82;
  sub_100A08590(v60, v61, v82);
  uint64_t v63 = v77;
  uint64_t v64 = v78;
  (*(void (**)(char *, void, uint64_t, uint64_t))(v77 + 56))(v62, 0, 1, v78);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v63 + 48))(v62, 1, v64) != 1)
  {
    uint64_t v67 = v76;
    sub_100E86C34((uint64_t)v62, v76, (uint64_t (*)(void))type metadata accessor for CRLStartOrEndFollow);
    type metadata accessor for CRContext();
    uint64_t v87 = 0;
    memset(v86, 0, sizeof(v86));
    uint64_t v68 = (void *)static CRContext.newTransientContext(uniqueAssetManager:encryptionDelegate:)();
    sub_100522F00((uint64_t)v86, (uint64_t *)&unk_10169A780);
    uint64_t v69 = sub_100A08880();
    unint64_t v71 = v70;

    uint64_t v72 = *v45;
    sub_100510D4C(v69, v71);
    swift_retain();
    uint64_t v52 = 1;
    sub_100F28E04(6, v69, v71, 1, v72);
    swift_release();
    sub_100510084(v69, v71);
    sub_100E86C9C(v67, (uint64_t (*)(void))type metadata accessor for CRLStartOrEndFollow);
    (*(void (**)(char *, uint64_t))(v55 + 8))(v59, v57);
    sub_100E86C9C((uint64_t)v45, type metadata accessor for CRLBoard.RealTimeSessionInfo);
    sub_100510084(v69, v71);
    return v52;
  }
  sub_100522F00((uint64_t)v62, &qword_101681D80);
  if (qword_10166FAE0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  id v65 = (id)static OS_os_log.crlFollow;
  uint64_t v66 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v65, (uint64_t)&_mh_execute_header, v66, (uint64_t)"Unable to generate a CRLStartOrEndFollow object in sendViewportRequestMessage", 77, 2, (uint64_t)_swiftEmptyArrayStorage);

  (*(void (**)(char *, uint64_t))(v55 + 8))(v59, v57);
  sub_100E86C9C((uint64_t)v45, type metadata accessor for CRLBoard.RealTimeSessionInfo);
  return 0;
}

void sub_100E864D4(void *a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = *a3;
  id v7 = a1;
  if (v5 != -1) {
    swift_once();
  }
  uint64_t v6 = sub_1005057FC(&qword_10167A2C0);
  sub_100556B74(v6, a4);
  Tips.Event.sendDonation<>(_:)();
}

void sub_100E86698()
{
  qword_10171CA38 = (uint64_t)&off_101504F78;
}

uint64_t sub_100E866AC(uint64_t isStackAllocationSafe, uint64_t a2)
{
  uint64_t v3 = isStackAllocationSafe;
  char v4 = *(unsigned char *)(isStackAllocationSafe + 32);
  unint64_t v5 = (unint64_t)((1 << v4) + 63) >> 6;
  size_t v6 = 8 * v5;
  if ((v4 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    __chkstk_darwin(isStackAllocationSafe, a2);
    bzero((char *)&v10 - ((v6 + 15) & 0x3FFFFFFFFFFFFFF0), v6);
    uint64_t v7 = sub_100E86810((uint64_t)&v10 - ((v6 + 15) & 0x3FFFFFFFFFFFFFF0), v5, v3);
    swift_release();
    if (v2) {
      swift_willThrow();
    }
  }
  else
  {
    uint64_t v8 = (void *)swift_slowAlloc();
    bzero(v8, v6);
    uint64_t v7 = sub_100E86810((uint64_t)v8, v5, v3);
    swift_release();
    swift_slowDealloc();
  }
  return v7;
}

uint64_t sub_100E86810(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v19 = (unint64_t *)result;
  int64_t v4 = 0;
  uint64_t v5 = a3 + 56;
  uint64_t v6 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & *(void *)(a3 + 56);
  int64_t v9 = (unint64_t)(v6 + 63) >> 6;
  while (1)
  {
    if (v8)
    {
      unint64_t v10 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v11 = v10 | (v4 << 6);
      goto LABEL_5;
    }
    int64_t v14 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v14 >= v9) {
      goto LABEL_24;
    }
    unint64_t v15 = *(void *)(v5 + 8 * v14);
    ++v4;
    if (!v15)
    {
      int64_t v4 = v14 + 1;
      if (v14 + 1 >= v9) {
        goto LABEL_24;
      }
      unint64_t v15 = *(void *)(v5 + 8 * v4);
      if (!v15)
      {
        int64_t v4 = v14 + 2;
        if (v14 + 2 >= v9) {
          goto LABEL_24;
        }
        unint64_t v15 = *(void *)(v5 + 8 * v4);
        if (!v15) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v8 = (v15 - 1) & v15;
    unint64_t v11 = __clz(__rbit64(v15)) + (v4 << 6);
LABEL_5:
    sub_10050BF84(*(void *)(a3 + 48) + 40 * v11, (uint64_t)v20);
    Class isa = AnyHashable._bridgeToObjectiveC()().isa;
    type metadata accessor for CRLFreehandDrawingShapeItem();
    uint64_t v13 = swift_dynamicCastClass();

    id result = sub_10050BFE0((uint64_t)v20);
    if (v13)
    {
      *(unint64_t *)((char *)v19 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
      if (__OFADD__(v21++, 1))
      {
        __break(1u);
LABEL_24:
        swift_retain();
        return sub_10052CF74(v19, a2, v21, a3);
      }
    }
  }
  int64_t v16 = v14 + 3;
  if (v16 >= v9) {
    goto LABEL_24;
  }
  unint64_t v15 = *(void *)(v5 + 8 * v16);
  if (v15)
  {
    int64_t v4 = v16;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v4 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v4 >= v9) {
      goto LABEL_24;
    }
    unint64_t v15 = *(void *)(v5 + 8 * v4);
    ++v16;
    if (v15) {
      goto LABEL_20;
    }
  }
LABEL_26:
  __break(1u);
  return result;
}

BOOL sub_100E869E8(double a1)
{
  return fabs(a1 + -1.0) < 0.00999999978 || a1 == 1.0;
}

double *sub_100E86A14(unint64_t a1, void *a2)
{
  if (a1 >> 62) {
    goto LABEL_18;
  }
  uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v4; uint64_t v4 = _CocoaArrayWrapper.endIndex.getter())
  {
    uint64_t v5 = 4;
    while (1)
    {
      id v6 = (a1 & 0xC000000000000001) != 0
         ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)()
         : *(id *)(a1 + 8 * v5);
      uint64_t v7 = v6;
      uint64_t v8 = v5 - 3;
      if (__OFADD__(v5 - 4, 1)) {
        break;
      }
      id v9 = [a2 repForInfo:v6];
      if (v9)
      {
        unint64_t v10 = v9;
        self;
        uint64_t v11 = swift_dynamicCastObjCClass();

        if (v11)
        {
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
          if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          }
          specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized Array._endMutation()();
        }
        else
        {
        }
      }
      else
      {
      }
      ++v5;
      if (v8 == v4) {
        goto LABEL_19;
      }
    }
    __break(1u);
LABEL_18:
    swift_bridgeObjectRetain();
  }
LABEL_19:
  swift_bridgeObjectRelease();
  return _swiftEmptyArrayStorage;
}

uint64_t sub_100E86BCC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_100E86C34(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_100E86C9C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_100E86CFC(unint64_t a1)
{
  uint64_t v3 = *v1;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  uint64_t *v1 = v3;
  if (!isUniquelyReferenced_nonNull_bridgeObject || v3 < 0 || (v3 & 0x4000000000000000) != 0)
  {
    uint64_t v3 = sub_100F68540(v3);
    uint64_t *v1 = v3;
  }
  uint64_t v5 = v3 & 0xFFFFFFFFFFFFFF8;
  unint64_t v6 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v6 <= a1)
  {
    __break(1u);
  }
  else
  {
    unint64_t v7 = v6 - 1;
    uint64_t v8 = v6 - 1 - a1;
    if (v8 >= 0)
    {
      uint64_t v9 = v5 + 8 * a1;
      uint64_t v10 = *(void *)(v9 + 32);
      memmove((void *)(v9 + 32), (const void *)(v9 + 40), 8 * v8);
      *(void *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10) = v7;
      specialized Array._endMutation()();
      return v10;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100E86DE8@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t v5 = *v2;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    unint64_t v5 = sub_100F68658(v5);
  }
  unint64_t v6 = *(void *)(v5 + 16);
  if (v6 <= a1)
  {
    __break(1u);
    goto LABEL_15;
  }
  unint64_t v7 = v6 - 1;
  uint64_t v8 = type metadata accessor for UUID();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 72);
  unint64_t v11 = v5 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80)) + v10 * a1;
  uint64_t result = (*(uint64_t (**)(uint64_t, unint64_t, uint64_t))(v9 + 32))(a2, v11, v8);
  if ((uint64_t)(v7 - a1) < 0)
  {
LABEL_15:
    uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
    __break(1u);
    return result;
  }
  if (v10 > 0 || v11 >= v11 + v10 + v10 * (v7 - a1))
  {
    uint64_t result = swift_arrayInitWithTakeFrontToBack();
  }
  else if (v10)
  {
    uint64_t result = swift_arrayInitWithTakeBackToFront();
  }
  *(void *)(v5 + 16) = v7;
  *uint64_t v2 = v5;
  return result;
}

uint64_t sub_100E86F44@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t v5 = *v2;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    unint64_t v5 = sub_100F686C4(v5);
  }
  unint64_t v6 = *(void *)(v5 + 16);
  if (v6 <= a1)
  {
    __break(1u);
    goto LABEL_15;
  }
  unint64_t v7 = v6 - 1;
  uint64_t v8 = *(void *)(type metadata accessor for CRLBoardIdentifier(0) - 8);
  uint64_t v9 = *(void *)(v8 + 72);
  unint64_t v10 = v5 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80)) + v9 * a1;
  uint64_t result = sub_1005394E4(v10, a2);
  if ((uint64_t)(v7 - a1) < 0)
  {
LABEL_15:
    uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
    __break(1u);
    return result;
  }
  if (v9 > 0 || v10 >= v10 + v9 + v9 * (v7 - a1))
  {
    uint64_t result = swift_arrayInitWithTakeFrontToBack();
  }
  else if (v9)
  {
    uint64_t result = swift_arrayInitWithTakeBackToFront();
  }
  *(void *)(v5 + 16) = v7;
  *uint64_t v2 = v5;
  return result;
}

uint64_t sub_100E870B8(unint64_t a1)
{
  return sub_100E870D0(a1, sub_100F68540);
}

uint64_t sub_100E870D0(unint64_t a1, uint64_t (*a2)(uint64_t))
{
  uint64_t v5 = *v2;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *uint64_t v2 = v5;
  if (!isUniquelyReferenced_nonNull_bridgeObject || v5 < 0 || (v5 & 0x4000000000000000) != 0)
  {
    uint64_t v5 = a2(v5);
    *uint64_t v2 = v5;
  }
  uint64_t v7 = v5 & 0xFFFFFFFFFFFFFF8;
  unint64_t v8 = *(void *)(v7 + 16);
  if (v8 <= a1)
  {
    __break(1u);
  }
  else
  {
    unint64_t v9 = v8 - 1;
    uint64_t v10 = v8 - 1 - a1;
    if (v10 >= 0)
    {
      uint64_t v11 = v7 + 8 * a1;
      uint64_t v12 = *(void *)(v11 + 32);
      memmove((void *)(v11 + 32), (const void *)(v11 + 40), 8 * v10);
      *(void *)(v7 + 16) = v9;
      specialized Array._endMutation()();
      return v12;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100E871BC(unint64_t a1)
{
  uint64_t v3 = *v1;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  uint64_t *v1 = v3;
  if (!isUniquelyReferenced_nonNull_bridgeObject || v3 < 0 || (v3 & 0x4000000000000000) != 0)
  {
    uint64_t v3 = sub_100F68540(v3);
    uint64_t *v1 = v3;
  }
  uint64_t v5 = v3 & 0xFFFFFFFFFFFFFF8;
  unint64_t v6 = *(void *)(v5 + 16);
  if (v6 <= a1)
  {
    __break(1u);
  }
  else
  {
    unint64_t v7 = v6 - 1;
    uint64_t v8 = v6 - 1 - a1;
    if (v8 >= 0)
    {
      uint64_t v9 = v5 + 8 * a1;
      uint64_t v10 = *(void *)(v9 + 32);
      memmove((void *)(v9 + 32), (const void *)(v9 + 40), 8 * v8);
      *(void *)(v5 + 16) = v7;
      specialized Array._endMutation()();
      return v10;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t CRLStatusHUDManager.ready.getter()
{
  id v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_ready);
  swift_beginAccess();
  return *v1;
}

void CRLStatusHUDManager.ready.setter(char a1)
{
  uint64_t v3 = (unsigned char *)(v1 + OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_ready);
  swift_beginAccess();
  unsigned char *v3 = a1;
  if (a1) {
    sub_100E89F18();
  }
}

void (*CRLStatusHUDManager.ready.modify(void *a1))(void **a1, char a2)
{
  uint64_t v3 = malloc(0x28uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_ready;
  v3[3] = v1;
  v3[4] = v4;
  swift_beginAccess();
  return sub_100E87464;
}

void sub_100E87464(void **a1, char a2)
{
  uint64_t v3 = *a1;
  swift_endAccess();
  if ((a2 & 1) == 0 && *(unsigned char *)(v3[3] + v3[4]) == 1) {
    sub_100E89F18();
  }

  free(v3);
}

id CRLStatusHUDManager.delayedControllers.getter()
{
  uint64_t v1 = (void **)(v0 + OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_delayedControllers);
  swift_beginAccess();
  uint64_t v2 = *v1;

  return v2;
}

void CRLStatusHUDManager.delayedControllers.setter(void *a1)
{
  uint64_t v3 = (void **)(v1 + OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_delayedControllers);
  swift_beginAccess();
  uint64_t v4 = *v3;
  void *v3 = a1;
}

uint64_t (*CRLStatusHUDManager.delayedControllers.modify())()
{
  return j__swift_endAccess;
}

void *CRLStatusHUDManager.containerView.getter()
{
  uint64_t v1 = (void **)(v0 + OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_containerView);
  swift_beginAccess();
  uint64_t v2 = *v1;
  id v3 = v2;
  return v2;
}

void CRLStatusHUDManager.containerView.setter(void *a1)
{
  id v3 = (void **)(v1 + OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_containerView);
  swift_beginAccess();
  uint64_t v4 = *v3;
  void *v3 = a1;
  id v5 = a1;

  unint64_t v6 = (unsigned char *)(v1 + OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_ready);
  swift_beginAccess();
  if (*v6 == 1) {
    sub_100E89F18();
  }
}

void (*CRLStatusHUDManager.containerView.modify(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_100E878B0;
}

void sub_100E878B0(uint64_t a1, char a2)
{
  swift_endAccess();
  if ((a2 & 1) == 0)
  {
    uint64_t v4 = (unsigned char *)(*(void *)(a1 + 24) + OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_ready);
    swift_beginAccess();
    if (*v4 == 1) {
      sub_100E89F18();
    }
  }
}

uint64_t CRLStatusHUDManager.alwaysUseDarkAppearance.getter()
{
  uint64_t v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_alwaysUseDarkAppearance);
  swift_beginAccess();
  return *v1;
}

uint64_t CRLStatusHUDManager.alwaysUseDarkAppearance.setter(char a1)
{
  id v3 = (unsigned char *)(v1 + OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_alwaysUseDarkAppearance);
  uint64_t result = swift_beginAccess();
  unsigned char *v3 = a1;
  return result;
}

uint64_t (*CRLStatusHUDManager.alwaysUseDarkAppearance.modify())()
{
  return j_j__swift_endAccess;
}

void CRLStatusHUDManager.maxTextWidth.getter()
{
  uint64_t v1 = (id *)(v0 + OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_containerView);
  swift_beginAccess();
  if (*v1)
  {
    id v2 = [*v1 window];
    if (v2)
    {
      id v3 = v2;
      [v2 bounds];
      CGRectGetWidth(v4);
    }
  }
}

void CRLStatusHUDManager.maxHUDWidth.getter()
{
  uint64_t v1 = (id *)(v0 + OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_containerView);
  swift_beginAccess();
  if (*v1)
  {
    id v2 = [*v1 window];
    if (v2)
    {
      id v3 = v2;
      [v2 bounds];
      CGRectGetWidth(v4);
    }
  }
}

void CRLStatusHUDManager.show(hudController:)(void *a1)
{
  swift_getObjectType();

  sub_100E8C4F4(a1, v1);
}

void CRLStatusHUDManager.show(hudController:withDelay:)(void *a1, double a2)
{
  swift_getObjectType();

  sub_100E8C4FC(a1, v2, a2);
}

void sub_100E87E14(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    CGRect v4 = (void *)Strong;
    id v5 = (id *)(Strong + OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_delayedControllers);
    swift_beginAccess();
    if ([*v5 containsObject:a2])
    {
      [*v5 removeObject:a2];
      uint64_t ObjectType = swift_getObjectType();
      sub_100E8C4FC(a2, v4, ObjectType, 0.0);
    }
  }
}

void CRLStatusHUDManager.replace(_:with:)(void *a1, void *a2)
{
  swift_getObjectType();

  sub_100E8C1EC(a1, a2, v2);
}

void CRLStatusHUDManager.hide(hudController:)(void *a1)
{
  uint64_t v2 = v1;
  if (qword_10166F9F8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  CGRect v4 = (void *)static OS_os_log.crlStatusHUD;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10118E4B0;
  id v6 = v4;
  swift_unknownObjectRetain();
  sub_1005057FC(&qword_10167AF48);
  sub_1005057FC(&qword_101672B50);
  swift_dynamicCast();
  id v7 = [a1 message];
  if (v7)
  {
    uint64_t v8 = v7;
    uint64_t v9 = a1;
    uint64_t v10 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v12 = v11;
  }
  else
  {
    uint64_t v9 = a1;
    uint64_t v10 = 0;
    unint64_t v12 = 0;
  }
  *(void *)(inited + 96) = &type metadata for String;
  unint64_t v13 = sub_100528BE4();
  *(void *)(inited + 104) = v13;
  if (v12) {
    uint64_t v14 = v10;
  }
  else {
    uint64_t v14 = 0;
  }
  unint64_t v15 = 0xE000000000000000;
  if (v12) {
    unint64_t v15 = v12;
  }
  *(void *)(inited + 72) = v14;
  *(void *)(inited + 80) = v15;
  uint64_t v64 = v2;
  int64_t v16 = (unsigned char *)(v2 + OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_ready);
  swift_beginAccess();
  if (*v16) {
    uint64_t v17 = 1702195828;
  }
  else {
    uint64_t v17 = 0x65736C6166;
  }
  if (*v16) {
    unint64_t v18 = 0xE400000000000000;
  }
  else {
    unint64_t v18 = 0xE500000000000000;
  }
  *(void *)(inited + 136) = &type metadata for String;
  *(void *)(inited + 144) = v13;
  *(void *)(inited + 112) = v17;
  *(void *)(inited + 120) = v18;
  unsigned int v19 = [v9 showing];
  if (v19) {
    uint64_t v20 = 1702195828;
  }
  else {
    uint64_t v20 = 0x65736C6166;
  }
  if (v19) {
    unint64_t v21 = 0xE400000000000000;
  }
  else {
    unint64_t v21 = 0xE500000000000000;
  }
  *(void *)(inited + 176) = &type metadata for String;
  *(void *)(inited + 184) = v13;
  *(void *)(inited + 152) = v20;
  *(void *)(inited + 160) = v21;
  unsigned int v22 = [v9 animating];
  if (v22) {
    uint64_t v23 = 1702195828;
  }
  else {
    uint64_t v23 = 0x65736C6166;
  }
  *(void *)(inited + 216) = &type metadata for String;
  *(void *)(inited + 224) = v13;
  if (v22) {
    unint64_t v24 = 0xE400000000000000;
  }
  else {
    unint64_t v24 = 0xE500000000000000;
  }
  *(void *)(inited + 192) = v23;
  *(void *)(inited + 200) = v24;
  uint64_t v25 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v6, (uint64_t)&_mh_execute_header, v25, (uint64_t)"hide hudController=%{public}@, message=\"%@\", ready=%{public}@, showing=%{public}@, animating=%{public}@", 103, 2, inited);
  swift_setDeallocating();
  swift_arrayDestroy();

  if (*v16 == 1)
  {
    uint64_t v26 = v9;
    if (([v9 showing] & 1) != 0 || objc_msgSend(v9, "animating"))
    {
      uint64_t v27 = (void *)(v64 + OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_waitingToHideControllers);
      swift_beginAccess();
      swift_unknownObjectRetain();
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)((*v27 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v27 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
      swift_endAccess();
      sub_100E89F18();
    }
    else
    {
      swift_beginAccess();
      swift_unknownObjectRetain();
      unint64_t v35 = swift_bridgeObjectRetain();
      unint64_t v36 = sub_100E71B1C(v35, (uint64_t)v9);
      char v38 = v37;
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
      if ((v38 & 1) == 0)
      {
        swift_beginAccess();
        sub_100E871BC(v36);
        swift_endAccess();
        swift_unknownObjectRelease();
      }
      swift_beginAccess();
      swift_unknownObjectRetain();
      unint64_t v39 = swift_bridgeObjectRetain();
      unint64_t v40 = sub_100E71B1C(v39, (uint64_t)v9);
      char v42 = v41;
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
      if ((v42 & 1) == 0)
      {
        swift_beginAccess();
        sub_100E871BC(v40);
        swift_endAccess();
        swift_unknownObjectRelease();
      }
      uint64_t v43 = (id *)(v64 + OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_delayedControllers);
      swift_beginAccess();
      [*v43 removeObject:v26];
      id v44 = [v26 containerView];
      id v45 = [v44 superview];

      if (v45)
      {
        id v46 = (void *)static OS_os_log.crlStatusHUD;
        uint64_t v47 = swift_initStackObject();
        *(_OWORD *)(v47 + 16) = xmmword_10117E810;
        swift_unknownObjectRetain();
        id v48 = v46;
        swift_dynamicCast();
        uint64_t v49 = static os_log_type_t.error.getter();
        sub_100BAC898((uint64_t)v48, (uint64_t)&_mh_execute_header, v49, (uint64_t)"hudController=%{public}@ was not removed from the superview while hiding a controller that's not showing and not animating.", 123, 2, v47);
        swift_setDeallocating();
        swift_arrayDestroy();

        id v50 = [v26 containerView];
        [v50 removeFromSuperview];

        *(unsigned char *)(v64 + OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_needsLayout) = 1;
        sub_100E89F18();
      }
    }
  }
  else
  {
    uint64_t v28 = v9;
    if ([v9 type])
    {
      uint64_t v29 = (id *)(v64 + OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_delayedControllers);
      swift_beginAccess();
      if ([*v29 containsObject:v28])
      {
        [*v29 removeObject:v28];
      }
      else
      {
        swift_beginAccess();
        swift_unknownObjectRetain();
        unint64_t v31 = swift_bridgeObjectRetain();
        unint64_t v32 = sub_100E71B1C(v31, (uint64_t)v28);
        char v34 = v33;
        swift_bridgeObjectRelease();
        swift_unknownObjectRelease();
        if (v34)
        {
          uint64_t v51 = (void *)static OS_os_log.crlStatusHUD;
          uint64_t v52 = swift_initStackObject();
          *(_OWORD *)(v52 + 16) = xmmword_10117E810;
          swift_unknownObjectRetain();
          id v53 = v51;
          swift_dynamicCast();
          uint64_t v54 = static os_log_type_t.error.getter();
          sub_100BAC898((uint64_t)v53, (uint64_t)&_mh_execute_header, v54, (uint64_t)"hudController=%{public}@ was not found in the waiting controllers or delayed controllers while hiding.", 102, 2, v52);
          swift_setDeallocating();
          swift_arrayDestroy();
        }
        else
        {
          swift_beginAccess();
          sub_100E871BC(v32);
          swift_endAccess();
          swift_unknownObjectRelease();
        }
      }
    }
    else
    {
      uint64_t v30 = *(void **)(v64 + OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_errorController);
      if (v30)
      {
        if (v30 == v9)
        {
          *(void *)(v64 + OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_errorController) = 0;
          swift_unknownObjectRelease();
        }
      }
      else
      {
        id v55 = (id)static OS_os_log.crlStatusHUD;
        uint64_t v56 = static os_log_type_t.error.getter();
        sub_100BAC898((uint64_t)v55, (uint64_t)&_mh_execute_header, v56, (uint64_t)"errorController was not set as expected when trying to hide.", 60, 2, (uint64_t)_swiftEmptyArrayStorage);
      }
    }
    id v57 = [v28 containerView];
    id v58 = [v57 superview];

    if (v58)
    {
      unint64_t v59 = (void *)static OS_os_log.crlStatusHUD;
      uint64_t v60 = swift_initStackObject();
      *(_OWORD *)(v60 + 16) = xmmword_10117E810;
      swift_unknownObjectRetain();
      id v61 = v59;
      swift_dynamicCast();
      uint64_t v62 = static os_log_type_t.error.getter();
      sub_100BAC898((uint64_t)v61, (uint64_t)&_mh_execute_header, v62, (uint64_t)"hudController=%{public}@ was not removed from the superview while hiding and not ready.", 87, 2, v60);
      swift_setDeallocating();
      swift_arrayDestroy();

      id v63 = [v28 containerView];
      [v63 removeFromSuperview];

      sub_100E8ADC0();
    }
  }
}

Swift::Void __swiftcall CRLStatusHUDManager.hideAllControllers()()
{
  if (qword_10166F9F8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  id v1 = (id)static OS_os_log.crlStatusHUD;
  uint64_t v2 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v1, (uint64_t)&_mh_execute_header, v2, (uint64_t)"hideAllControllers", 18, 2, (uint64_t)_swiftEmptyArrayStorage);

  id v3 = (void *)(v0 + OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_waitingInfoControllers);
  swift_beginAccess();
  void *v3 = _swiftEmptyArrayStorage;
  swift_bridgeObjectRelease();
  CGRect v4 = (id *)(v0 + OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_delayedControllers);
  swift_beginAccess();
  [*v4 removeAllObjects];
  id v5 = (uint64_t *)(v0 + OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_showingInfoControllers);
  swift_beginAccess();
  uint64_t v6 = *v5;
  uint64_t v28 = v0;
  if ((unint64_t)*v5 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
  }
  else
  {
    uint64_t v7 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
  }
  if (v7)
  {
    if (v7 < 1)
    {
      __break(1u);
      goto LABEL_37;
    }
    for (uint64_t i = 0; i != v7; ++i)
    {
      if ((v6 & 0xC000000000000001) != 0)
      {
        uint64_t v9 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        uint64_t v9 = *(void **)(v6 + 8 * i + 32);
        swift_unknownObjectRetain();
      }
      id v10 = [v9 containerView];
      [v10 removeFromSuperview];

      if ([v9 showing]) {
        [v9 setShowing:0];
      }
      swift_unknownObjectRelease();
    }
  }
  swift_bridgeObjectRelease();
  uint64_t *v5 = (uint64_t)_swiftEmptyArrayStorage;
  swift_bridgeObjectRelease();
  uint64_t v11 = OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_errorController;
  unint64_t v12 = *(void **)(v28 + OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_errorController);
  if (v12)
  {
    id v13 = [(id)swift_unknownObjectRetain() containerView];
    [v13 removeFromSuperview];

    if ([v12 showing]) {
      [v12 setShowing:0];
    }
    swift_unknownObjectRelease();
  }
  *(void *)(v28 + v11) = 0;
  swift_unknownObjectRelease();
  uint64_t v14 = (uint64_t *)(v28 + OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_waitingToHideControllers);
  swift_beginAccess();
  uint64_t v15 = *v14;
  if ((unint64_t)*v14 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v16 = _CocoaArrayWrapper.endIndex.getter();
    if (v16)
    {
LABEL_20:
      if (v16 >= 1)
      {
        for (uint64_t j = 0; j != v16; ++j)
        {
          if ((v15 & 0xC000000000000001) != 0)
          {
            unint64_t v18 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else
          {
            unint64_t v18 = *(void **)(v15 + 8 * j + 32);
            swift_unknownObjectRetain();
          }
          id v19 = [v18 containerView];
          id v20 = [v19 superview];

          if (v20)
          {
            id v21 = [v18 containerView];
            [v21 removeFromSuperview];
            swift_unknownObjectRelease();
          }
          else
          {
            swift_unknownObjectRelease();
          }
        }
        goto LABEL_31;
      }
LABEL_37:
      __break(1u);
      return;
    }
  }
  else
  {
    uint64_t v16 = *(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v16) {
      goto LABEL_20;
    }
  }
LABEL_31:
  swift_bridgeObjectRelease();
  uint64_t *v14 = (uint64_t)_swiftEmptyArrayStorage;
  swift_bridgeObjectRelease();
  uint64_t v22 = OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_hidingController;
  uint64_t v23 = *(void **)(v28 + OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_hidingController);
  if (v23)
  {
    id v24 = [(id)swift_unknownObjectRetain() containerView];
    id v25 = [v24 superview];

    if (v25)
    {
      id v26 = [v23 containerView];
      [v26 removeFromSuperview];
      swift_unknownObjectRelease();
    }
    else
    {
      swift_unknownObjectRelease();
    }
  }
  *(void *)(v28 + v22) = 0;
  uint64_t v27 = swift_unknownObjectRelease();
  sub_100E8ADC0(v27);
}

Swift::Void __swiftcall CRLStatusHUDManager.updateForAppearance()()
{
  if (qword_10166F9F8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  id v1 = (id)static OS_os_log.crlStatusHUD;
  uint64_t v2 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v1, (uint64_t)&_mh_execute_header, v2, (uint64_t)"Updating HUDs for appearance", 28, 2, (uint64_t)_swiftEmptyArrayStorage);

  id v3 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_errorController);
  if (v3) {
    [v3 updateForAppearance];
  }
  CGRect v4 = (unint64_t *)(v0 + OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_showingInfoControllers);
  swift_beginAccess();
  unint64_t v14 = *v4;
  swift_beginAccess();
  id v5 = (void **)(v0 + OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_delayedControllers);
  swift_beginAccess();
  uint64_t v6 = *v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v7 = [v6 allObjects];
  sub_1005057FC(&qword_10167AF48);
  static Array._unconditionallyBridgeFromObjectiveC(_:)();

  id v13 = _swiftEmptyArrayStorage;
  swift_bridgeObjectRetain();
  sub_1006E3A4C(v14);
  unint64_t v8 = swift_bridgeObjectRetain();
  sub_1006E3A4C(v8);
  unint64_t v9 = swift_bridgeObjectRetain();
  sub_1006E3A4C(v9);
  sub_1005057FC(&qword_10167AF50);
  swift_arrayDestroy();
  if (!((unint64_t)_swiftEmptyArrayStorage >> 62))
  {
    uint64_t v10 = *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v10) {
      goto LABEL_7;
    }
LABEL_10:
    swift_bridgeObjectRelease();
    return;
  }
  swift_bridgeObjectRetain();
  uint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (!v10) {
    goto LABEL_10;
  }
LABEL_7:
  if (v10 >= 1)
  {
    for (uint64_t i = 0; i != v10; ++i)
    {
      double v12 = _swiftEmptyArrayStorage[i + 4];
      [*(id *)&v12 updateForAppearance:v13];
    }
    goto LABEL_10;
  }
  __break(1u);
}

void sub_100E89144(void *a1)
{
  if (qword_10166F9F8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v2 = (void *)static OS_os_log.crlStatusHUD;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117DF40;
  id v44 = v2;
  swift_unknownObjectRetain();
  uint64_t v4 = sub_1005057FC(&qword_10167AF48);
  sub_1005057FC(&qword_101672B50);
  swift_dynamicCast();
  uint64_t ObjectType = swift_getObjectType();
  unsigned int v5 = [a1 showing];
  unint64_t v6 = sub_100528BE4();
  unint64_t v7 = v6;
  if (v5) {
    uint64_t v8 = 1702195828;
  }
  else {
    uint64_t v8 = 0x65736C6166;
  }
  if (v5) {
    unint64_t v9 = 0xE400000000000000;
  }
  else {
    unint64_t v9 = 0xE500000000000000;
  }
  *(void *)(inited + 96) = &type metadata for String;
  *(void *)(inited + 104) = v6;
  *(void *)(inited + 72) = v8;
  *(void *)(inited + 80) = v9;
  unsigned int v10 = [a1 animating];
  if (v10) {
    uint64_t v11 = 1702195828;
  }
  else {
    uint64_t v11 = 0x65736C6166;
  }
  *(void *)(inited + 136) = &type metadata for String;
  *(void *)(inited + 144) = v7;
  if (v10) {
    unint64_t v12 = 0xE400000000000000;
  }
  else {
    unint64_t v12 = 0xE500000000000000;
  }
  *(void *)(inited + 112) = v11;
  *(void *)(inited + 120) = v12;
  uint64_t v13 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v44, (uint64_t)&_mh_execute_header, v13, (uint64_t)"remove hudController=%{public}@, showing=%{public}@, animating=%{public}@", 73, 2, inited);
  swift_setDeallocating();
  swift_arrayDestroy();

  if (([a1 showing] & 1) != 0 || objc_msgSend(a1, "animating"))
  {
    if ([a1 type]) {
      unint64_t v14 = sub_100E8CE88;
    }
    else {
      unint64_t v14 = sub_100E8CE90;
    }
    uint64_t v15 = swift_allocObject();
    *(void *)(v15 + 16) = v45;
    *(void *)&v45[OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_hidingController] = a1;
    swift_unknownObjectRetain();
    uint64_t v16 = v45;
    swift_unknownObjectRelease();
    swift_retain();
    sub_100516914(1, (uint64_t)v14, v15, ObjectType);
    swift_release_n();
  }
  else
  {
    swift_beginAccess();
    swift_unknownObjectRetain();
    unint64_t v17 = swift_bridgeObjectRetain();
    unint64_t v18 = sub_100E71B1C(v17, (uint64_t)a1);
    char v20 = v19;
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    if ((v20 & 1) == 0)
    {
      swift_beginAccess();
      sub_100E871BC(v18);
      swift_endAccess();
      swift_unknownObjectRelease();
    }
    swift_beginAccess();
    swift_unknownObjectRetain();
    unint64_t v21 = swift_bridgeObjectRetain();
    unint64_t v22 = sub_100E71B1C(v21, (uint64_t)a1);
    char v24 = v23;
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    if ((v24 & 1) == 0)
    {
      swift_beginAccess();
      sub_100E871BC(v22);
      swift_endAccess();
      swift_unknownObjectRelease();
    }
    id v25 = (id *)&v45[OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_delayedControllers];
    swift_beginAccess();
    [*v25 removeObject:a1];
    id v26 = [a1 containerView];
    id v27 = [v26 superview];

    if (v27)
    {
      uint64_t v43 = v25;
      uint64_t v28 = (void *)static OS_os_log.crlStatusHUD;
      uint64_t v29 = swift_initStackObject();
      *(_OWORD *)(v29 + 16) = xmmword_10117E810;
      swift_unknownObjectRetain();
      id v30 = v28;
      swift_dynamicCast();
      uint64_t v31 = static os_log_type_t.error.getter();
      sub_100BAC898((uint64_t)v30, (uint64_t)&_mh_execute_header, v31, (uint64_t)"hudController=%{public}@ was not removed from the superview while removing a controller that's not showing and not animating.", 125, 2, v29);
      swift_setDeallocating();
      swift_arrayDestroy();

      id v32 = [a1 containerView];
      [v32 removeFromSuperview];

      swift_unknownObjectRetain();
      unint64_t v33 = swift_bridgeObjectRetain();
      unint64_t v34 = sub_100E71B1C(v33, (uint64_t)a1);
      char v36 = v35;
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
      if ((v36 & 1) == 0)
      {
        swift_beginAccess();
        sub_100E871BC(v34);
        swift_endAccess();
        swift_unknownObjectRelease();
      }
      swift_unknownObjectRetain();
      unint64_t v37 = swift_bridgeObjectRetain();
      unint64_t v38 = sub_100E71B1C(v37, (uint64_t)a1);
      char v40 = v39;
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
      if ((v40 & 1) == 0)
      {
        swift_beginAccess();
        sub_100E871BC(v38);
        swift_endAccess();
        swift_unknownObjectRelease();
      }
      id v41 = [*v43 removeObject:a1];
      v45[OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_needsLayout] = 1;
      sub_100E89F18(v41);
    }
  }
}

uint64_t sub_100E89780(uint64_t a1, void *a2)
{
  uint64_t v4 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4, v6);
  uint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = type metadata accessor for DispatchQoS();
  uint64_t v9 = *(void *)(v19 - 8);
  __chkstk_darwin(v19, v10);
  unint64_t v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10050BF48(0, (unint64_t *)&qword_1016725C0);
  uint64_t v13 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = a1;
  *(void *)(v14 + 24) = a2;
  aBlock[4] = sub_100E8CE9C;
  aBlock[5] = v14;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = *(void *)"";
  aBlock[2] = sub_100679958;
  void aBlock[3] = &unk_101531688;
  uint64_t v15 = _Block_copy(aBlock);
  swift_unknownObjectRetain();
  id v16 = a2;
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_100522CDC();
  sub_1005057FC((uint64_t *)&unk_1016725D0);
  sub_10056B494();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v15);

  (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v12, v19);
}

uint64_t sub_100E89A18(void *a1, uint64_t a2)
{
  id v4 = [a1 containerView];
  [v4 removeFromSuperview];

  uint64_t v5 = *(void **)(a2 + OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_errorController);
  if (v5) {
    BOOL v6 = v5 == a1;
  }
  else {
    BOOL v6 = 0;
  }
  if (v6)
  {
    *(void *)(a2 + OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_errorController) = 0;
    swift_unknownObjectRelease();
  }
  *(void *)(a2 + OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_hidingController) = 0;
  uint64_t v7 = swift_unknownObjectRelease();
  *(unsigned char *)(a2 + OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_needsLayout) = 1;
  return sub_100E89F18(v7);
}

uint64_t sub_100E89AB8(uint64_t a1, char *a2)
{
  uint64_t v4 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v28 = *(void *)(v4 - 8);
  __chkstk_darwin(v4, v5);
  uint64_t v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for DispatchQoS();
  uint64_t v26 = *(void *)(v8 - 8);
  uint64_t v27 = v8;
  __chkstk_darwin(v8, v9);
  uint64_t v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  swift_unknownObjectRetain();
  unint64_t v12 = swift_bridgeObjectRetain();
  unint64_t v13 = sub_100E71B1C(v12, a1);
  char v15 = v14;
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  if ((v15 & 1) == 0)
  {
    swift_beginAccess();
    sub_100E871BC(v13);
    swift_endAccess();
    swift_unknownObjectRelease();
  }
  swift_beginAccess();
  swift_unknownObjectRetain();
  unint64_t v16 = swift_bridgeObjectRetain();
  unint64_t v17 = sub_100E71B1C(v16, a1);
  char v19 = v18;
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  if ((v19 & 1) == 0)
  {
    swift_beginAccess();
    sub_100E871BC(v17);
    swift_endAccess();
    swift_unknownObjectRelease();
  }
  char v20 = (id *)&a2[OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_delayedControllers];
  swift_beginAccess();
  [*v20 removeObject:a1];
  sub_10050BF48(0, (unint64_t *)&qword_1016725C0);
  unint64_t v21 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v22 = swift_allocObject();
  *(void *)(v22 + 16) = a1;
  *(void *)(v22 + 24) = a2;
  aBlock[4] = sub_100E8CF00;
  aBlock[5] = v22;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = *(void *)"";
  aBlock[2] = sub_100679958;
  void aBlock[3] = &unk_1015316D8;
  char v23 = _Block_copy(aBlock);
  swift_unknownObjectRetain();
  char v24 = a2;
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_100522CDC();
  sub_1005057FC((uint64_t *)&unk_1016725D0);
  sub_10056B494();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v23);

  (*(void (**)(char *, uint64_t))(v28 + 8))(v7, v4);
  return (*(uint64_t (**)(char *, uint64_t))(v26 + 8))(v11, v27);
}

uint64_t sub_100E89E98(void *a1, uint64_t a2)
{
  id v3 = [a1 containerView];
  [v3 removeFromSuperview];

  *(void *)(a2 + OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_hidingController) = 0;
  uint64_t v4 = swift_unknownObjectRelease();
  *(unsigned char *)(a2 + OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_needsLayout) = 1;
  return sub_100E89F18(v4);
}

BOOL sub_100E89F08(void *a1, uint64_t a2)
{
  return *a1 == a2;
}

void sub_100E89F18()
{
  uint64_t v5 = v0;
  uint64_t v6 = (void **)(v0 + OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_containerView);
  swift_beginAccess();
  uint64_t v7 = *v6;
  uint64_t v8 = (id **)&static OS_os_log.crlStatusHUD;
  if (!*v6)
  {
    if (qword_10166F9F8 != -1) {
      goto LABEL_112;
    }
    goto LABEL_26;
  }
  uint64_t v9 = (unsigned __int8 *)(v5 + OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_ready);
  swift_beginAccess();
  LODWORD(v10) = *v9;
  uint64_t v11 = qword_10166F9F8;
  id v12 = v7;
  if (v10 != 1)
  {
    if (v11 != -1) {
      swift_once();
    }
    swift_beginAccess();
    uint64_t v22 = (id *)(id)static OS_os_log.crlStatusHUD;
    uint64_t v24 = static os_log_type_t.default.getter();
    sub_100BAC898((uint64_t)v22, (uint64_t)&_mh_execute_header, v24, (uint64_t)"updateViews called before hud manager is ready.", 47, 2, (uint64_t)_swiftEmptyArrayStorage);

    goto LABEL_104;
  }
  if (v11 != -1) {
    swift_once();
  }
  swift_beginAccess();
  id v13 = (id)static OS_os_log.crlStatusHUD;
  uint64_t v14 = static os_log_type_t.debug.getter();
  sub_100BAC898((uint64_t)v13, (uint64_t)&_mh_execute_header, v14, (uint64_t)"updateViews", 11, 2, (uint64_t)_swiftEmptyArrayStorage);

  uint64_t v76 = OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_hidingController;
  if (*(void *)(v5 + OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_hidingController)) {
    goto LABEL_142;
  }
  char v15 = (uint64_t *)(v5 + OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_waitingToHideControllers);
  swift_beginAccess();
  if ((unint64_t)*v15 >> 62) {
    goto LABEL_124;
  }
  if (!*(void *)((*v15 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_142:
    do
    {
LABEL_18:
      char v19 = *(void **)(v5 + OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_errorController);
      if (v19)
      {
        uint64_t ObjectType = swift_getObjectType();
        if (([(id)swift_unknownObjectRetain() showing] & 1) != 0
          || ([v19 animating] & 1) != 0
          || (unint64_t v21 = *(void **)(v5 + v76)) != 0 && v19 == v21)
        {
          LOBYTE(v10) = 0;
          uint64_t v17 = 0;
        }
        else
        {
          swift_beginAccess();
          swift_unknownObjectRetain();
          unint64_t v57 = swift_bridgeObjectRetain();
          uint64_t v17 = 0;
          sub_100E71B1C(v57, (uint64_t)v19);
          char v59 = v58;
          swift_bridgeObjectRelease();
          swift_unknownObjectRelease();
          if (v59)
          {
            id v60 = [v12 superview];
            [v60 bringSubviewToFront:v12];

            id v61 = [v19 containerView];
            [v12 addSubview:v61];

            sub_100516914(0, 0, 0, ObjectType);
            id v62 = [v19 accessibilityAnnouncement];
            if (v62)
            {
              id v63 = v62;
              id v64 = [v19 hudView];
              id v65 = [v64 window];

              CRLAccessibilityPostAnnouncementNotification(v65, v63);
            }
            LOBYTE(v10) = 1;
          }
          else
          {
            LOBYTE(v10) = 0;
          }
        }
        swift_unknownObjectRelease();
      }
      else
      {
        LOBYTE(v10) = 0;
        uint64_t v17 = 0;
      }
      id v25 = (void *)(v5 + OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_showingInfoControllers);
      swift_beginAccess();
      uint64_t v69 = v25;
      unint64_t v26 = *v25;
      if (v26 >> 62)
      {
        swift_bridgeObjectRetain();
        char v15 = (uint64_t *)_CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
      }
      else
      {
        char v15 = *(uint64_t **)((v26 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
      uint64_t v1 = 5 - (void)v15;
      if (__OFSUB__(5, v15))
      {
        __break(1u);
      }
      else
      {
        char v15 = (uint64_t *)(v5 + OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_waitingInfoControllers);
        swift_beginAccess();
        uint64_t v73 = (id *)v12;
        if (!((unint64_t)*v15 >> 62))
        {
          id v12 = *(id *)((*v15 & 0xFFFFFFFFFFFFFF8) + 0x10);
          goto LABEL_36;
        }
      }
      swift_bridgeObjectRetain();
      id v12 = (id)_CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
LABEL_36:
      if ((uint64_t)v12 >= v1) {
        uint64_t v3 = v1;
      }
      else {
        uint64_t v3 = (uint64_t)v12;
      }
      if (v3 < 1) {
        goto LABEL_99;
      }
      char v70 = v10;
      uint64_t v10 = *v15;
      unint64_t v2 = (unint64_t)*v15 >> 62;
      if (v2)
      {
        swift_bridgeObjectRetain();
        if (_CocoaArrayWrapper.endIndex.getter() < 0) {
          goto LABEL_136;
        }
        swift_bridgeObjectRetain();
        uint64_t v27 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        if (v27 < v3)
        {
LABEL_118:
          __break(1u);
LABEL_119:
          id v12 = (id)v27;
          swift_bridgeObjectRetain_n();
          int64_t v4 = _CocoaArrayWrapper.endIndex.getter();
          swift_bridgeObjectRelease();
          if (v4 < v3) {
            goto LABEL_137;
          }
          swift_bridgeObjectRetain();
          uint64_t v17 = _CocoaArrayWrapper.endIndex.getter();
          swift_bridgeObjectRelease();
          if (v17 < v3) {
            goto LABEL_138;
          }
          swift_bridgeObjectRetain();
          uint64_t v66 = _CocoaArrayWrapper.endIndex.getter();
          swift_bridgeObjectRelease();
          if (v66 >= v4) {
            goto LABEL_139;
          }
          __break(1u);
          goto LABEL_123;
        }
      }
      else
      {
        uint64_t v27 = *(void *)((*v15 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        if (v27 < v3) {
          goto LABEL_118;
        }
      }
      if ((v10 & 0xC000000000000001) != 0)
      {
        for (i = 0; i != v3; id v12 = (id)i)
        {
          sub_1005057FC(&qword_10167AF48);
          _ArrayBuffer._typeCheckSlowPath(_:)(i++);
        }
      }
      if (v2)
      {
        swift_bridgeObjectRetain();
        _CocoaArrayWrapper.subscript.getter();
        uint64_t v75 = v29;
        uint64_t v27 = v30;
        uint64_t v71 = v31;
        swift_bridgeObjectRelease_n();
      }
      else
      {
        uint64_t v27 = 0;
        uint64_t v75 = (v10 & 0xFFFFFFFFFFFFFF8) + 32;
        uint64_t v71 = (2 * v3) | 1;
      }
      uint64_t v1 = *v15;
      unint64_t v2 = (unint64_t)*v15 >> 62;
      if (v2) {
        goto LABEL_119;
      }
      int64_t v4 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v4 >= v3)
      {
        swift_bridgeObjectRetain();
        goto LABEL_51;
      }
LABEL_123:
      __break(1u);
LABEL_124:
      swift_bridgeObjectRetain();
      uint64_t v67 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    while (!v67);
  }
  swift_beginAccess();
  uint64_t v16 = *v15;
  if (!((unint64_t)*v15 >> 62))
  {
    if (*(void *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_10;
    }
LABEL_129:
    __break(1u);
    goto LABEL_130;
  }
  swift_bridgeObjectRetain();
  uint64_t v68 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (!v68) {
    goto LABEL_129;
  }
LABEL_10:
  uint64_t v16 = *v15;
  if (!((unint64_t)*v15 >> 62))
  {
    uint64_t v17 = *(void *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v17) {
      goto LABEL_12;
    }
LABEL_131:
    __break(1u);
    goto LABEL_132;
  }
LABEL_130:
  swift_bridgeObjectRetain();
  uint64_t v17 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (!v17) {
    goto LABEL_131;
  }
LABEL_12:
  if ((v16 & 0xC000000000000001) != 0)
  {
LABEL_132:
    char v18 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_15;
  }
  if (!*(void *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    goto LABEL_135;
  }
  char v18 = *(void **)(v16 + 32);
  swift_unknownObjectRetain();
LABEL_15:
  uint64_t v17 = *v15;
  if ((unint64_t)*v15 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v10) {
      goto LABEL_17;
    }
  }
  else
  {
    uint64_t v10 = *(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v10)
    {
LABEL_17:
      sub_100F4E1C0(0, 1);
      swift_endAccess();
      sub_100E89144(v18);
      swift_unknownObjectRelease();
      goto LABEL_18;
    }
  }
  __break(1u);
LABEL_135:
  __break(1u);
LABEL_136:
  __break(1u);
LABEL_137:
  __break(1u);
LABEL_138:
  __break(1u);
LABEL_139:
  uint64_t v27 = (uint64_t)v12;
LABEL_51:
  uint64_t v74 = v27;
  if ((v1 & 0xC000000000000001) != 0 && v3 != v4)
  {
    if (v3 >= v4)
    {
      __break(1u);
      goto LABEL_126;
    }
    Swift::Int v32 = v3;
    do
    {
      sub_1005057FC(&qword_10167AF48);
      _ArrayBuffer._typeCheckSlowPath(_:)(v32++);
    }
    while (v4 != v32);
  }
  if (v2)
  {
    swift_bridgeObjectRetain();
    uint64_t v17 = _CocoaArrayWrapper.subscript.getter();
    uint64_t v27 = v33;
    uint64_t v3 = v34;
    int64_t v4 = v35;
    swift_bridgeObjectRelease_n();
    LOBYTE(v10) = v70;
    if (v4) {
      goto LABEL_62;
    }
  }
  else
  {
    uint64_t v17 = v1 & 0xFFFFFFFFFFFFFF8;
    uint64_t v27 = (v1 & 0xFFFFFFFFFFFFFF8) + 32;
    int64_t v4 = (2 * v4) | 1;
    LOBYTE(v10) = v70;
    if (v4)
    {
LABEL_62:
      type metadata accessor for __ContiguousArrayStorageBase();
      swift_unknownObjectRetain_n();
      unint64_t v38 = (double *)swift_dynamicCastClass();
      if (!v38)
      {
        swift_unknownObjectRelease();
        unint64_t v38 = _swiftEmptyArrayStorage;
      }
      uint64_t v39 = *((void *)v38 + 2);
      swift_release();
      if (!__OFSUB__((unint64_t)v4 >> 1, v3))
      {
        if (v39 == ((unint64_t)v4 >> 1) - v3)
        {
          char v36 = (double *)swift_dynamicCastClass();
          unint64_t v37 = v71;
          if (!v36)
          {
            swift_unknownObjectRelease();
            char v36 = _swiftEmptyArrayStorage;
          }
          goto LABEL_68;
        }
        goto LABEL_127;
      }
LABEL_126:
      __break(1u);
LABEL_127:
      swift_unknownObjectRelease();
    }
  }
  char v36 = sub_1006BB258(v17, v27, v3, v4);
  unint64_t v37 = v71;
LABEL_68:
  swift_unknownObjectRelease();
  *char v15 = (uint64_t)v36;
  swift_bridgeObjectRelease();
  int64_t v40 = v37 >> 1;
  uint64_t v41 = v74;
  if (v74 == v37 >> 1)
  {
LABEL_98:
    swift_unknownObjectRelease();
LABEL_99:
    uint64_t v22 = v73;
    int v56 = *(unsigned __int8 *)(v5 + OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_needsLayout);
    *(unsigned char *)(v5 + OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_needsLayout) = 0;
    if ((v10 & 1) != 0 || v56) {
LABEL_103:
    }
      sub_100E8ADC0();
    goto LABEL_104;
  }
  uint64_t v8 = (id **)(v5 + OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_waitingToHideControllers);
  swift_unknownObjectRetain();
  uint64_t v72 = v8;
  swift_beginAccess();
  if (v74 >= v40) {
    goto LABEL_111;
  }
  uint64_t v42 = v74;
  while (1)
  {
    uint64_t v43 = *(void **)(v75 + 8 * v42++);
    id v44 = *(void **)(v5 + v76);
    if (v44) {
      BOOL v45 = v43 == v44;
    }
    else {
      BOOL v45 = 0;
    }
    if (v45)
    {
LABEL_91:
      if (v42 == v40)
      {
        swift_unknownObjectRelease();
        LOBYTE(v10) = v70;
        goto LABEL_98;
      }
      goto LABEL_92;
    }
    uint64_t v8 = (id **)*v72;
    if (!((unint64_t)*v72 >> 62))
    {
      uint64_t v46 = *(void *)(((unint64_t)v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_unknownObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v47 = v5;
      if (v46) {
        break;
      }
      goto LABEL_84;
    }
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v46 = _CocoaArrayWrapper.endIndex.getter();
    uint64_t v47 = v5;
    if (v46) {
      break;
    }
LABEL_84:
    swift_bridgeObjectRelease();
    swift_beginAccess();
    swift_unknownObjectRetain();
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)((*v69 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v69 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
    swift_endAccess();
    uint64_t v51 = swift_getObjectType();
    id v52 = [v43 containerView];
    [v73 addSubview:v52];

    uint64_t v8 = (id **)v43;
    sub_100516914(0, 0, 0, v51);
    id v53 = [v43 accessibilityAnnouncement];
    uint64_t v5 = v47;
    if (v53)
    {
      uint64_t v54 = v53;
      uint64_t v8 = (id **)[v43 hudView];
      id v55 = [v8 window];

      CRLAccessibilityPostAnnouncementNotification(v55, v54);
    }
    swift_unknownObjectRelease();
    uint64_t v41 = v74;
    if (v42 == v40)
    {
      swift_unknownObjectRelease_n();
      *(unsigned char *)(v47 + OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_needsLayout) = 0;
      uint64_t v22 = v73;
      goto LABEL_103;
    }
    char v70 = 1;
LABEL_92:
    if (v42 < v41 || v42 >= v40) {
      goto LABEL_111;
    }
  }
  uint64_t v48 = 4;
  while (1)
  {
    if (((unint64_t)v8 & 0xC000000000000001) != 0)
    {
      uint64_t v49 = specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else
    {
      uint64_t v49 = (uint64_t)v8[v48];
      swift_unknownObjectRetain();
    }
    swift_unknownObjectRelease();
    if (v43 == (void *)v49)
    {
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v5 = v47;
      uint64_t v41 = v74;
      goto LABEL_91;
    }
    uint64_t v50 = v48 - 3;
    if (__OFADD__(v48 - 4, 1)) {
      break;
    }
    ++v48;
    if (v50 == v46) {
      goto LABEL_84;
    }
  }
  __break(1u);
LABEL_111:
  __break(1u);
LABEL_112:
  swift_once();
LABEL_26:
  swift_beginAccess();
  uint64_t v22 = *v8;
  uint64_t v23 = static os_log_type_t.error.getter();
  sub_100BAC898((uint64_t)v22, (uint64_t)&_mh_execute_header, v23, (uint64_t)"updateViews called before container view is setup.", 50, 2, (uint64_t)_swiftEmptyArrayStorage);
LABEL_104:
}

BOOL CRLStatusHUDManager.ContainerViewVerticalLayoutGravity.init(rawValue:)(uint64_t a1)
{
  return a1 && a1 == 1;
}

uint64_t CRLStatusHUDManager.containerViewVerticalLayoutGravity.getter()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_containerViewVerticalLayoutGravity;
  swift_beginAccess();
  return *(void *)v1;
}

uint64_t CRLStatusHUDManager.containerViewVerticalLayoutGravity.setter(uint64_t a1)
{
  uint64_t v3 = (void *)(v1 + OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_containerViewVerticalLayoutGravity);
  uint64_t result = swift_beginAccess();
  void *v3 = a1;
  return result;
}

uint64_t (*CRLStatusHUDManager.containerViewVerticalLayoutGravity.modify())()
{
  return j_j__swift_endAccess;
}

void sub_100E8ADC0()
{
  uint64_t v1 = v0;
  unint64_t v2 = (unint64_t *)&v0[OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_containerView];
  swift_beginAccess();
  v105 = (id *)v2;
  unint64_t v3 = *v2;
  if (!*v2)
  {
    if (qword_10166F9F8 != -1) {
      swift_once();
    }
    swift_beginAccess();
    id v25 = (id)static OS_os_log.crlStatusHUD;
    uint64_t v26 = static os_log_type_t.error.getter();
    sub_100BAC898((uint64_t)v25, (uint64_t)&_mh_execute_header, v26, (uint64_t)"updateLayout called before container view is setup.", 51, 2, (uint64_t)_swiftEmptyArrayStorage);

    return;
  }
  int64_t v4 = &v1[OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_constraints];
  swift_beginAccess();
  if (*(void *)v4 >> 62) {
    goto LABEL_84;
  }
  uint64_t v5 = *(void *)((*(void *)v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
  id v6 = (id)v3;
  id v97 = (id)v3;
  if (!v5) {
    goto LABEL_5;
  }
LABEL_4:
  uint64_t v7 = self;
  sub_10050BF48(0, (unint64_t *)&qword_101674200);
  swift_bridgeObjectRetain();
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v7 deactivateConstraints:isa];

LABEL_5:
  *(void *)int64_t v4 = _swiftEmptyArrayStorage;
  swift_bridgeObjectRelease();
  uint64_t v9 = OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_errorController;
  uint64_t v10 = &selRef_shouldHitTestWithFill;
  Class v11 = (Class)&OBJC_IVAR____TtCC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController33CRLiOSMiniFormatterInputViewState_isItalic;
  if (*(void *)&v1[OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_errorController]) {
    goto LABEL_6;
  }
  uint64_t v27 = &v1[OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_showingInfoControllers];
  swift_beginAccess();
  unint64_t v28 = *(void *)v27;
  if (v28 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v89 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v89) {
      goto LABEL_33;
    }
  }
  else if (!*(void *)((v28 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_33;
  }
  if (*(void *)&v1[v9])
  {
LABEL_6:
    v103 = (char *)v9;
    id v12 = [(id)swift_unknownObjectRetain() containerView];
    id v13 = [v12 superview];

    swift_unknownObjectRelease();
    LODWORD(v104) = v13 == 0;
  }
  else
  {
    v103 = (char *)v9;
    LODWORD(v104) = 0;
  }
  uint64_t v14 = (uint64_t *)&v1[OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_showingInfoControllers];
  swift_beginAccess();
  uint64_t v96 = v14;
  uint64_t v15 = *v14;
  uint64_t v106 = v1;
  if (!((unint64_t)*v14 >> 62))
  {
    uint64_t v16 = *(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (!v16) {
      goto LABEL_17;
    }
    goto LABEL_9;
  }
  swift_bridgeObjectRetain();
  uint64_t v16 = _CocoaArrayWrapper.endIndex.getter();
  if (v16)
  {
LABEL_9:
    unint64_t v3 = v15 & 0xC000000000000001;
    uint64_t v17 = 4;
    do
    {
      uint64_t v18 = v17 - 4;
      if (v3)
      {
        char v19 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
        uint64_t v20 = v17 - 3;
        if (__OFADD__(v18, 1)) {
          goto LABEL_82;
        }
      }
      else
      {
        char v19 = *(void **)(v15 + 8 * v17);
        swift_unknownObjectRetain();
        uint64_t v20 = v17 - 3;
        if (__OFADD__(v18, 1))
        {
LABEL_82:
          __break(1u);
LABEL_83:
          __break(1u);
LABEL_84:
          id v87 = (id)v3;
          swift_bridgeObjectRetain();
          uint64_t v88 = _CocoaArrayWrapper.endIndex.getter();
          swift_bridgeObjectRelease();
          id v97 = (id)v3;
          if (v88) {
            goto LABEL_4;
          }
          goto LABEL_5;
        }
      }
      Class v11 = (Class)[v19 containerView];
      uint64_t v1 = (char *)[(objc_class *)v11 superview];

      if (!v1)
      {
        swift_bridgeObjectRelease();
        if (qword_10166F9F8 != -1) {
          swift_once();
        }
        swift_beginAccess();
        uint64_t v29 = (void *)static OS_os_log.crlStatusHUD;
        sub_1005057FC((uint64_t *)&unk_101672B40);
        uint64_t inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = xmmword_10117E810;
        *(void *)&v108[0] = v19;
        id v31 = v29;
        swift_unknownObjectRetain();
        sub_1005057FC(&qword_10167AF48);
        sub_1005057FC(&qword_101672B50);
        swift_dynamicCast();
        uint64_t v32 = static os_log_type_t.error.getter();
        sub_100BAC898((uint64_t)v31, (uint64_t)&_mh_execute_header, v32, (uint64_t)"found orphaned hud controller, controller=%{public}@", 52, 2, inited);
        swift_unknownObjectRelease();
        swift_setDeallocating();
        swift_arrayDestroy();

LABEL_32:
        CRLStatusHUDManager.hideAllControllers()();
LABEL_33:

        return;
      }
      swift_unknownObjectRelease();
      ++v17;
    }
    while (v20 != v16);
  }
LABEL_17:
  swift_bridgeObjectRelease();
  if (v104) {
    goto LABEL_32;
  }
  unint64_t v21 = *(void **)&v103[(void)v106];
  unint64_t v3 = (unint64_t)&selRef_clearCache;
  if (v21)
  {
    if (([(id)swift_unknownObjectRetain() showing] & 1) != 0
      || [v21 animating])
    {
      id v22 = [v21 containerView];
      swift_unknownObjectRelease();
      uint64_t v23 = 0;
      uint64_t v24 = 1;
      goto LABEL_41;
    }
    swift_unknownObjectRelease();
  }
  uint64_t v33 = *v96;
  if ((unint64_t)*v96 >> 62)
  {
    swift_bridgeObjectRetain();
    if (!_CocoaArrayWrapper.endIndex.getter())
    {
LABEL_91:

      swift_bridgeObjectRelease();
      return;
    }
  }
  else
  {
    uint64_t v34 = *(void *)((v33 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (!v34) {
      goto LABEL_91;
    }
  }
  if ((v33 & 0xC000000000000001) != 0)
  {
    char v36 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  else
  {
    uint64_t v35 = *(void *)((v33 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v35)
    {
      __break(1u);
      goto LABEL_105;
    }
    char v36 = *(void **)(v33 + 32);
    swift_unknownObjectRetain();
  }
  swift_bridgeObjectRelease();
  id v22 = [v36 containerView];
  swift_unknownObjectRelease();
  uint64_t v24 = 0;
  uint64_t v23 = 1;
LABEL_41:
  id v37 = [v22 superview];

  if (!v37)
  {

    return;
  }
  uint64_t v94 = v24;
  sub_1005057FC(&qword_10167D450);
  uint64_t v38 = swift_initStackObject();
  *(_OWORD *)(v38 + 16) = xmmword_10117E800;
  *(void *)(v38 + 32) = 0x676E6963617073;
  *(void *)(v38 + 40) = 0xE700000000000000;
  id v39 = objc_allocWithZone((Class)NSNumber);
  LODWORD(v40) = 10.0;
  *(void *)(v38 + 48) = [v39 initWithFloat:v40];
  *(void *)(v38 + 56) = 0x676E6964646170;
  *(void *)(v38 + 64) = 0xE700000000000000;
  id v41 = objc_allocWithZone((Class)NSNumber);
  LODWORD(v42) = 20.0;
  *(void *)(v38 + 72) = [v41 initWithFloat:v42];
  *(void *)(v38 + 80) = 0xD00000000000001BLL;
  *(void *)(v38 + 88) = 0x8000000101292210;
  id v43 = objc_allocWithZone((Class)NSNumber);
  LODWORD(v44) = 16.0;
  *(void *)(v38 + 96) = [v43 initWithFloat:v44];
  *(void *)(v38 + 104) = 0xD00000000000001DLL;
  *(void *)(v38 + 112) = 0x8000000101292230;
  id v45 = objc_allocWithZone((Class)NSNumber);
  LODWORD(v46) = 16.0;
  *(void *)(v38 + 120) = [v45 initWithFloat:v46];
  unint64_t v104 = sub_100A38BCC(v38);
  id v47 = [v97 widthAnchor];
  if (*v105 && (id v48 = [*v105 window]) != 0)
  {
    uint64_t v49 = v48;
    [v48 bounds];
    double Width = CGRectGetWidth(v110);

    double v51 = 375.0;
    if (Width < 375.0) {
      double v51 = Width;
    }
  }
  else
  {
    double v51 = 375.0;
  }
  id v52 = [v47 constraintEqualToConstant:v51 + 40.0];

  swift_beginAccess();
  id v53 = v52;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)((*(void *)v4 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)v4 & 0xFFFFFFFFFFFFFF8)
                                                                              + 0x18) >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  id v93 = v53;
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  swift_endAccess();
  uint64_t v54 = (char *)self;
  NSString v55 = String._bridgeToObjectiveC()();
  sub_100ED2340(v104);
  uint64_t v10 = (char **)((char *)&type metadata for Any + 8);
  Class v11 = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  sub_1005057FC(&qword_10168B3D0);
  uint64_t v56 = swift_initStackObject();
  long long v101 = xmmword_10117E810;
  *(_OWORD *)(v56 + 16) = xmmword_10117E810;
  *(void *)(v56 + 32) = 0x77656956706F74;
  *(void *)(v56 + 40) = 0xE700000000000000;
  uint64_t v102 = sub_10050BF48(0, (unint64_t *)&qword_1016725F0);
  *(void *)(v56 + 72) = v102;
  *(void *)(v56 + 48) = v22;
  uint64_t v1 = (char *)v22;
  sub_100A39A60(v56);
  Class v57 = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  v103 = v54;
  id v58 = [v54 constraintsWithVisualFormat:v55 options:0 metrics:v11 views:v57];

  sub_10050BF48(0, (unint64_t *)&qword_101674200);
  unint64_t v59 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  swift_beginAccess();
  unint64_t v3 = (unint64_t)v4;
  sub_1006E0CA0(v59);
  swift_endAccess();
  uint64_t v33 = (uint64_t)&v106[OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_containerViewVerticalLayoutGravity];
  swift_beginAccess();
  uint64_t v100 = (uint64_t *)v33;
  uint64_t v35 = *(void *)v33;
  uint64_t v95 = v1;
  if (*(void *)v33)
  {
    if (v35 != 1) {
      goto LABEL_108;
    }
    id v60 = [v1 bottomAnchor];
    id v61 = [v97 bottomAnchor];
    id v62 = [v60 constraintEqualToAnchor:v61 constant:16.0];
  }
  else
  {
    id v60 = [v1 topAnchor];
    id v61 = [v97 topAnchor];
    id v62 = [v60 constraintEqualToAnchor:v61 constant:16.0];
  }
  id v63 = v62;

  swift_beginAccess();
  id v64 = v63;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)((*(void *)v4 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)v4 & 0xFFFFFFFFFFFFFF8)
                                                                              + 0x18) >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  unint64_t v3 = (unint64_t)v4;
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  swift_endAccess();

  uint64_t v33 = *v96;
  Class v11 = (Class)((unint64_t)*v96 >> 62);
  if (v11)
  {
    if (v33 < 0) {
      unint64_t v3 = *v96;
    }
    else {
      unint64_t v3 = v33 & 0xFFFFFFFFFFFFFF8;
    }
    uint64_t v90 = v1;
    swift_bridgeObjectRetain();
    uint64_t v91 = _CocoaArrayWrapper.endIndex.getter();
    if (v91 >= v23)
    {
      uint64_t v10 = (char **)v91;
      uint64_t v1 = (char *)v23;
      swift_bridgeObjectRetain();
      uint64_t v92 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (v92 >= v23)
      {
        swift_bridgeObjectRetain();
        unint64_t v3 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        if ((uint64_t)v3 < (uint64_t)v10)
        {
          __break(1u);
LABEL_99:
          __break(1u);
          goto LABEL_100;
        }
        goto LABEL_109;
      }
      goto LABEL_107;
    }
    goto LABEL_106;
  }
  uint64_t v10 = *(char ***)((v33 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if ((unint64_t)v10 < v23) {
    goto LABEL_99;
  }
  id v65 = v1;
  swift_bridgeObjectRetain();
  if ((v33 & 0xC000000000000001) != 0)
  {
    while ((char **)v23 != v10)
    {
      if (v23 < (uint64_t)v10)
      {
        unint64_t v3 = (unint64_t)&qword_10167AF48;
        Swift::Int v66 = v23;
        do
        {
          sub_1005057FC(&qword_10167AF48);
          _ArrayBuffer._typeCheckSlowPath(_:)(v66++);
        }
        while (v10 != (char **)v66);
        break;
      }
LABEL_105:
      __break(1u);
LABEL_106:
      __break(1u);
LABEL_107:
      __break(1u);
LABEL_108:
      v109[0] = v35;
      _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)();
      __break(1u);
LABEL_109:
      uint64_t v23 = (uint64_t)v1;
      if ((v33 & 0xC000000000000001) == 0) {
        break;
      }
    }
  }
  if (v11)
  {
    swift_bridgeObjectRetain();
    _CocoaArrayWrapper.subscript.getter();
    uint64_t v99 = v67;
    uint64_t v23 = v68;
    unint64_t v3 = v69;
    swift_bridgeObjectRelease_n();
    uint64_t v10 = (char **)(v3 >> 1);
  }
  else
  {
    uint64_t v99 = (v33 & 0xFFFFFFFFFFFFFF8) + 32;
  }
  uint64_t v56 = (uint64_t)v95;
  Class v11 = (Class)&selRef_clearCache;
  if ((char **)v23 != v10)
  {
    uint64_t v98 = v10;
    uint64_t v1 = v95;
    while (v23 < (uint64_t)v10)
    {
      uint64_t v33 = *(void *)(v99 + 8 * v23);
      uint64_t v73 = (char *)[(id)swift_unknownObjectRetain() *((SEL *)v11 + 258)];
      uint64_t v35 = *v100;
      v105 = (id *)v1;
      uint64_t v107 = v73;
      if (*v100 == 1)
      {
        id v74 = [v73 bottomAnchor];
        id v75 = [v1 topAnchor];
        id v76 = [v74 constraintEqualToAnchor:v75];
      }
      else
      {
        if (v35) {
          goto LABEL_108;
        }
        id v74 = [v73 topAnchor];
        id v75 = [v1 bottomAnchor];
        id v76 = [v74 constraintEqualToAnchor:v75];
      }
      id v77 = v76;

      swift_beginAccess();
      id v78 = v77;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)((*(void *)v4 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)v4 & 0xFFFFFFFFFFFFFF8)
                                                                                  + 0x18) >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
      swift_endAccess();

      NSString v79 = String._bridgeToObjectiveC()();
      sub_100ED2340(v104);
      Class v80 = Dictionary._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      uint64_t v81 = swift_initStackObject();
      *(_OWORD *)(v81 + 16) = v101;
      strcpy((char *)(v81 + 32), "containerView");
      *(_WORD *)(v81 + 46) = -4864;
      id v82 = [(id)v33 *((SEL *)v11 + 258)];
      *(void *)(v81 + 72) = v102;
      *(void *)(v81 + 48) = v82;
      sub_100A39A60(v81);
      ++v23;
      Class v83 = Dictionary._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      id v84 = [v103 constraintsWithVisualFormat:v79 options:0 metrics:v80 views:v83];

      Class v11 = (Class)&selRef_clearCache;
      uint64_t v85 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

      swift_beginAccess();
      unint64_t v86 = v85;
      unint64_t v3 = (unint64_t)v4;
      sub_1006E0CA0(v86);
      swift_endAccess();
      swift_unknownObjectRelease();

      uint64_t v56 = (uint64_t)v107;
      uint64_t v1 = v107;
      uint64_t v10 = v98;
      if (v98 == (char **)v23) {
        goto LABEL_67;
      }
    }
    goto LABEL_83;
  }
LABEL_67:
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  uint64_t v33 = *v96;
  if (!((unint64_t)*v96 >> 62))
  {
    uint64_t v70 = *(void *)((v33 & 0xFFFFFFFFFFFFFF8) + 0x10);
    goto LABEL_69;
  }
LABEL_100:
  swift_bridgeObjectRetain();
  uint64_t v70 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
LABEL_69:
  if (__OFADD__(v70, v94))
  {
    __break(1u);
  }
  else
  {
    v109[3] = v102;
    v109[0] = v97;
    memset(v108, 0, sizeof(v108));
    uint64_t v33 = (uint64_t)v97;
    id v71 = sub_1009D1E6C(v109, 8, 0, v108, 8, 1.0, (double)(v70 + v94) * 56.0 + 10.0 + 20.0);
    swift_beginAccess();
    uint64_t v23 = (uint64_t)v71;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)((*(void *)v4 & 0xFFFFFFFFFFFFFF8) + 0x10) < *(void *)((*(void *)v4 & 0xFFFFFFFFFFFFFF8)
                                                                               + 0x18) >> 1)
      goto LABEL_71;
  }
  specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
LABEL_71:
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  swift_endAccess();
  swift_bridgeObjectRetain();
  Class v72 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v103 activateConstraints:v72];
}

id CRLStatusHUDManager.init()()
{
  *(void *)&v0[OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_maxInfos] = 5;
  v0[OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_ready] = 0;
  uint64_t v1 = OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_delayedControllers;
  unint64_t v2 = self;
  unint64_t v3 = v0;
  *(void *)&v0[v1] = [v2 weakObjectsHashTable];
  *(void *)&v3[OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_containerView] = 0;
  v3[OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_alwaysUseDarkAppearance] = 0;
  *(void *)&v3[OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_errorController] = 0;
  *(void *)&v3[OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_showingInfoControllers] = _swiftEmptyArrayStorage;
  *(void *)&v3[OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_waitingInfoControllers] = _swiftEmptyArrayStorage;
  *(void *)&v3[OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_waitingToHideControllers] = _swiftEmptyArrayStorage;
  *(void *)&v3[OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_hidingController] = 0;
  *(void *)&v3[OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_constraints] = _swiftEmptyArrayStorage;
  v3[OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_needsLayout] = 0;
  *(void *)&v3[OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_containerViewVerticalLayoutGravity] = 0;

  v5.receiver = v3;
  v5.super_class = (Class)type metadata accessor for CRLStatusHUDManager();
  return [super init];
}

id CRLStatusHUDManager.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLStatusHUDManager();
  return [super dealloc];
}

void sub_100E8C1EC(void *a1, void *a2, uint64_t a3)
{
  if (a1)
  {
    id v6 = (void **)(a3 + OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_delayedControllers);
    swift_beginAccess();
    uint64_t v7 = *v6;
    swift_unknownObjectRetain();
    [v7 removeObject:a1];
    swift_beginAccess();
    swift_unknownObjectRetain();
    unint64_t v8 = swift_bridgeObjectRetain();
    unint64_t v9 = sub_100E71B04(v8, (uint64_t)a1);
    char v11 = v10;
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    if ((v11 & 1) == 0)
    {
      swift_beginAccess();
      sub_100E871BC(v9);
      swift_endAccess();
      swift_unknownObjectRelease();
    }
    if (([a1 showing] & 1) == 0 && !objc_msgSend(a1, "animating")
      || (id v12 = [a1 containerView],
          id v13 = [v12 superview],
          v13,
          v12,
          !v13)
      || a1 == a2)
    {
      sub_100E8C4FC(a2, a3, 0.0);
LABEL_20:
      swift_unknownObjectRelease();
      return;
    }
    if ([a1 type])
    {
      swift_beginAccess();
      swift_unknownObjectRetain();
      unint64_t v14 = swift_bridgeObjectRetain();
      unint64_t v15 = sub_100E71B04(v14, (uint64_t)a1);
      char v17 = v16;
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
      if (v17)
      {
LABEL_19:
        id v19 = [a1 containerView];
        [v19 removeFromSuperview];

        sub_100E8C4FC(a2, a3, 0.0);
        *(unsigned char *)(a3 + OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_needsLayout) = 1;
        sub_100E89F18();
        goto LABEL_20;
      }
      swift_beginAccess();
      sub_100E871BC(v15);
      swift_endAccess();
    }
    else
    {
      uint64_t v18 = *(void **)(a3 + OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_errorController);
      if (!v18 || v18 != a1) {
        goto LABEL_19;
      }
      *(void *)(a3 + OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_errorController) = 0;
    }
    swift_unknownObjectRelease();
    goto LABEL_19;
  }

  sub_100E8C4FC(a2, a3, 0.0);
}

void sub_100E8C4F4(void *a1, uint64_t a2)
{
}

void sub_100E8C4FC(void *a1, uint64_t a2, double a3)
{
  uint64_t v6 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v67 = *(void *)(v6 - 8);
  uint64_t v68 = v6;
  __chkstk_darwin(v6, v7);
  id v65 = (char *)&v60 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v66 = type metadata accessor for DispatchQoS();
  uint64_t v64 = *(void *)(v66 - 8);
  __chkstk_darwin(v66, v9);
  id v63 = (char *)&v60 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v69 = type metadata accessor for DispatchTime();
  uint64_t v62 = *(void *)(v69 - 8);
  __chkstk_darwin(v69, v11);
  id v60 = (char *)&v60 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13, v14);
  id v61 = (char *)&v60 - v15;
  if (qword_10166F9F8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  char v16 = (void *)static OS_os_log.crlStatusHUD;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117D8C0;
  v70[0] = a1;
  id v18 = v16;
  swift_unknownObjectRetain();
  sub_1005057FC(&qword_10167AF48);
  sub_1005057FC(&qword_101672B50);
  swift_dynamicCast();
  id v19 = [a1 message];
  if (v19)
  {
    uint64_t v20 = v19;
    uint64_t v21 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v23 = v22;
  }
  else
  {
    uint64_t v21 = 0;
    unint64_t v23 = 0;
  }
  *(void *)(inited + 96) = &type metadata for String;
  *(void *)(inited + 104) = sub_100528BE4();
  if (v23) {
    uint64_t v24 = v21;
  }
  else {
    uint64_t v24 = 0;
  }
  unint64_t v25 = 0xE000000000000000;
  if (v23) {
    unint64_t v25 = v23;
  }
  *(void *)(inited + 72) = v24;
  *(void *)(inited + 80) = v25;
  uint64_t v26 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v18, (uint64_t)&_mh_execute_header, v26, (uint64_t)"show hudController=%{public}@ message=\"%@\"", 42, 2, inited);
  swift_setDeallocating();
  swift_arrayDestroy();

  uint64_t v27 = a2;
  unint64_t v28 = (id *)(a2 + OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_delayedControllers);
  swift_beginAccess();
  if ([*v28 containsObject:a1])
  {
    id v29 = (id)static OS_os_log.crlStatusHUD;
    uint64_t v30 = static os_log_type_t.default.getter();
    id v31 = "Trying to delay the same hud controller, just sticking with the old delay";
    uint64_t v32 = (uint64_t)v29;
    uint64_t v33 = 73;
LABEL_16:
    sub_100BAC898(v32, (uint64_t)&_mh_execute_header, v30, (uint64_t)v31, v33, 2, (uint64_t)_swiftEmptyArrayStorage);

    return;
  }
  uint64_t v34 = (unint64_t *)(a2 + OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_showingInfoControllers);
  uint64_t v35 = swift_beginAccess();
  unint64_t v36 = *v34;
  __chkstk_darwin(v35, v37);
  *(&v60 - 2) = (char *)a1;
  swift_bridgeObjectRetain();
  sub_100E3C074((uint64_t (*)(uint64_t *))sub_100E8CFA0, (uint64_t)(&v60 - 4), v36);
  char v39 = v38;
  swift_bridgeObjectRelease();
  if ((v39 & 1) == 0) {
    goto LABEL_15;
  }
  double v40 = (unint64_t *)(a2 + OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_waitingInfoControllers);
  uint64_t v41 = swift_beginAccess();
  unint64_t v42 = *v40;
  __chkstk_darwin(v41, v43);
  *(&v60 - 2) = (char *)a1;
  swift_bridgeObjectRetain();
  sub_100E3C074((uint64_t (*)(uint64_t *))sub_100E8CF08, (uint64_t)(&v60 - 4), v42);
  char v45 = v44;
  swift_bridgeObjectRelease();
  if ((v45 & 1) == 0)
  {
LABEL_15:
    id v29 = (id)static OS_os_log.crlStatusHUD;
    uint64_t v30 = static os_log_type_t.default.getter();
    id v31 = "Ignoring attempt to show hud controller that has aleady been shown or is waiting to show.";
    uint64_t v32 = (uint64_t)v29;
    uint64_t v33 = 89;
    goto LABEL_16;
  }
  if (a3 != 0.0)
  {
    [*v28 addObject:a1];
    double v46 = v60;
    static DispatchTime.now()();
    id v47 = v61;
    + infix(_:_:)();
    uint64_t v62 = *(void *)(v62 + 8);
    ((void (*)(char *, uint64_t))v62)(v46, v69);
    sub_10050BF48(0, (unint64_t *)&qword_1016725C0);
    id v48 = (void *)static OS_dispatch_queue.main.getter();
    uint64_t v49 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v50 = swift_allocObject();
    *(void *)(v50 + 16) = v49;
    *(void *)(v50 + 24) = a1;
    v70[4] = sub_100E71F7C;
    v70[5] = v50;
    v70[0] = _NSConcreteStackBlock;
    v70[1] = *(void *)"";
    v70[2] = sub_100679958;
    v70[3] = &unk_101531750;
    double v51 = _Block_copy(v70);
    swift_unknownObjectRetain();
    swift_release();
    id v52 = v63;
    static DispatchQoS.unspecified.getter();
    v70[0] = _swiftEmptyArrayStorage;
    sub_100522CDC();
    sub_1005057FC((uint64_t *)&unk_1016725D0);
    sub_10056B494();
    id v53 = v65;
    uint64_t v54 = v68;
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
    _Block_release(v51);

    (*(void (**)(char *, uint64_t))(v67 + 8))(v53, v54);
    (*(void (**)(char *, uint64_t))(v64 + 8))(v52, v66);
    ((void (*)(char *, uint64_t))v62)(v47, v69);
    return;
  }
  if ([a1 type])
  {
    swift_beginAccess();
    swift_unknownObjectRetain();
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)((*v40 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v40 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
    swift_endAccess();
    goto LABEL_31;
  }
  uint64_t v55 = OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_errorController;
  uint64_t v56 = *(void **)(v27 + OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_errorController);
  if (v56)
  {
    if (v56 == a1)
    {
      if ([(id)swift_unknownObjectRetain() showing]) {
        [a1 setShowing:1];
      }
    }
    else
    {
      id v57 = [(id)swift_unknownObjectRetain() containerView];
      id v58 = [v57 superview];

      if (v58)
      {
        id v59 = [v56 containerView];
        [v59 removeFromSuperview];
        swift_unknownObjectRelease();

        *(unsigned char *)(v27 + OBJC_IVAR____TtC8Freeform19CRLStatusHUDManager_needsLayout) = 1;
        goto LABEL_30;
      }
    }
    swift_unknownObjectRelease();
  }
LABEL_30:
  *(void *)(v27 + v55) = a1;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
LABEL_31:
  sub_100E89F18();
}

uint64_t type metadata accessor for CRLStatusHUDManager()
{
  return self;
}

unint64_t sub_100E8CDEC()
{
  unint64_t result = qword_1016A00D0;
  if (!qword_1016A00D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A00D0);
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLStatusHUDManager.ContainerViewVerticalLayoutGravity()
{
  return &type metadata for CRLStatusHUDManager.ContainerViewVerticalLayoutGravity;
}

uint64_t sub_100E8CE50()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100E8CE88(uint64_t a1)
{
  return sub_100E89AB8(a1, *(char **)(v1 + 16));
}

uint64_t sub_100E8CE90(uint64_t a1)
{
  return sub_100E89780(a1, *(void **)(v1 + 16));
}

uint64_t sub_100E8CE9C()
{
  return sub_100E89A18(*(void **)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_100E8CEA4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100E8CEB4()
{
  return swift_release();
}

uint64_t sub_100E8CEC0()
{
  swift_unknownObjectRelease();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100E8CF00()
{
  return sub_100E89E98(*(void **)(v0 + 16), *(void *)(v0 + 24));
}

BOOL sub_100E8CF08(void *a1)
{
  return *a1 == *(void *)(v1 + 16);
}

uint64_t sub_100E8CF1C()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100E8CF54()
{
  swift_release();
  swift_unknownObjectRelease();

  return _swift_deallocObject(v0, 32, 7);
}

BOOL sub_100E8CFA0(void *a1)
{
  return sub_100E8CF08(a1);
}

BOOL sub_100E8CFC4(void *a1, uint64_t a2)
{
  return sub_100E89F08(a1, a2);
}

id sub_100E8CFE8(double a1)
{
  swift_unknownObjectWeakAssign();
  *(double *)&v1[OBJC_IVAR____TtC8Freeform24CRLCanvasBackgroundLayer_viewScale] = a1;
  if (v1[OBJC_IVAR____TtC8Freeform24CRLCanvasBackgroundLayer_enabled] == 1) {
    [v1 setNeedsLayout];
  }
  [v1 setMasksToBounds:1];
  unint64_t v3 = *(void **)&v1[OBJC_IVAR____TtC8Freeform21CRLCanvasDotGridLayer_innerReplicatorLayer];
  int64_t v4 = *(void **)&v1[OBJC_IVAR____TtC8Freeform21CRLCanvasDotGridLayer_imageTileLayer];
  [v3 addSublayer:v4];
  objc_super v5 = *(void **)&v1[OBJC_IVAR____TtC8Freeform21CRLCanvasDotGridLayer_outerReplicatorLayer];
  [v5 addSublayer:v3];
  [v1 addSublayer:v5];
  [v5 setDelegate:v1];
  [v3 setDelegate:v1];
  [v4 setDelegate:v1];
  [v5 setMasksToBounds:0];
  [v3 setMasksToBounds:0];

  return [v4 setMasksToBounds:0];
}

void sub_100E8D14C()
{
  double v1 = *(double *)(v0 + OBJC_IVAR____TtC8Freeform24CRLCanvasBackgroundLayer_viewScale);
  if ((*(unsigned char *)(v0 + OBJC_IVAR____TtC8Freeform24CRLCanvasBackgroundLayer_scalesWithCanvas) & 1) == 0)
  {
    long long v2 = *(_OWORD *)(v0 + OBJC_IVAR____TtC8Freeform24CRLCanvasBackgroundLayer_dynamicTransform + 16);
    v6[0] = *(_OWORD *)(v0 + OBJC_IVAR____TtC8Freeform24CRLCanvasBackgroundLayer_dynamicTransform);
    v6[1] = v2;
    v6[2] = *(_OWORD *)(v0 + OBJC_IVAR____TtC8Freeform24CRLCanvasBackgroundLayer_dynamicTransform + 32);
    double v1 = v1 * sub_10007F808((double *)v6);
  }
  if (v1 >= 0.1)
  {
    if (v1 < 0.25)
    {
      double v3 = sub_100407EDC(v1, 0.1, 0.25);
      double v4 = 1.0;
      double v5 = 2.0;
    }
    else
    {
      if (v1 < 1.0) {
        return;
      }
      if (v1 < 2.0)
      {
        double v3 = sub_100407EDC(v1, 1.0, 2.0);
        double v4 = 2.0;
        double v5 = 4.0;
      }
      else
      {
        if (v1 >= 4.0) {
          return;
        }
        double v3 = sub_100407EDC(v1, 2.0, 4.0);
        double v4 = 4.0;
        double v5 = 5.0;
      }
    }
    sub_100407E68(v4, v5, v3);
  }
}

void sub_100E8D39C()
{
  double v1 = *(double *)(v0 + OBJC_IVAR____TtC8Freeform24CRLCanvasBackgroundLayer_viewScale);
  if ((*(unsigned char *)(v0 + OBJC_IVAR____TtC8Freeform24CRLCanvasBackgroundLayer_scalesWithCanvas) & 1) == 0)
  {
    long long v2 = *(_OWORD *)(v0 + OBJC_IVAR____TtC8Freeform24CRLCanvasBackgroundLayer_dynamicTransform + 16);
    v7[0] = *(_OWORD *)(v0 + OBJC_IVAR____TtC8Freeform24CRLCanvasBackgroundLayer_dynamicTransform);
    v7[1] = v2;
    _OWORD v7[2] = *(_OWORD *)(v0 + OBJC_IVAR____TtC8Freeform24CRLCanvasBackgroundLayer_dynamicTransform + 32);
    double v1 = v1 * sub_10007F808((double *)v7);
  }
  if (v1 < 0.25) {
    return;
  }
  if (v1 < 0.5)
  {
    double v3 = sub_100407EDC(v1, 0.25, 0.5);
    double v4 = 0.1;
LABEL_10:
    sub_100407E68(v4, 0.15, v3);
    return;
  }
  if (v1 < 1.0)
  {
    double v5 = sub_100407EDC(v1, 0.5, 1.0);
    sub_100407E68(0.15, 0.25, v5);
    return;
  }
  if (v1 < 2.0)
  {
    double v6 = sub_100407EDC(v1, 1.0, 2.0);
    sub_100407E68(0.25, 0.2, v6);
    return;
  }
  if (v1 < 4.0)
  {
    double v3 = sub_100407EDC(v1, 2.0, 4.0);
    double v4 = 0.2;
    goto LABEL_10;
  }
}

void sub_100E8D624(uint64_t a1@<X8>)
{
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong)
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"dotGridImageStorage", 19, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCanvas/CRLCanvasDotGridLayer.swift", 91, 2, 135, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"dotGridImageStorage", 19, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCanvas/CRLCanvasDotGridLayer.swift", 91, 2, 135);
    goto LABEL_39;
  }
  double v4 = (void *)Strong;
  uint64_t v5 = OBJC_IVAR____TtC8Freeform24CRLCanvasBackgroundLayer_scalesWithCanvas;
  double v6 = *(double *)(v1 + OBJC_IVAR____TtC8Freeform24CRLCanvasBackgroundLayer_viewScale);
  if ((*(unsigned char *)(v1 + OBJC_IVAR____TtC8Freeform24CRLCanvasBackgroundLayer_scalesWithCanvas) & 1) == 0)
  {
    long long v7 = *(_OWORD *)(v1 + OBJC_IVAR____TtC8Freeform24CRLCanvasBackgroundLayer_dynamicTransform + 16);
    long long v37 = *(_OWORD *)(v1 + OBJC_IVAR____TtC8Freeform24CRLCanvasBackgroundLayer_dynamicTransform);
    long long v38 = v7;
    long long v39 = *(_OWORD *)(v1 + OBJC_IVAR____TtC8Freeform24CRLCanvasBackgroundLayer_dynamicTransform + 32);
    double v6 = v6 * sub_10007F808((double *)&v37);
  }
  double v8 = 0.0;
  if (sub_100895600(v6, 0.0))
  {
    swift_unknownObjectRelease();
    CGImageRef v9 = 0;
    uint64_t v10 = 0;
LABEL_40:
    double v14 = 0.0;
    double v15 = 0.0;
    goto LABEL_41;
  }
  [v4 contentsScaleForCanvasBackgroundLayer:v1];
  double v12 = v11;
  if (sub_100895600(v11, 0.0)) {
    double v12 = *(double *)(v1 + OBJC_IVAR____TtC8Freeform24CRLCanvasBackgroundLayer_lastValidContentsScaleFromDelegate);
  }
  else {
    *(double *)(v1 + OBJC_IVAR____TtC8Freeform24CRLCanvasBackgroundLayer_lastValidContentsScaleFromDelegate) = v12;
  }
  uint64_t v13 = v1 + OBJC_IVAR____TtC8Freeform21CRLCanvasDotGridLayer_dotGridImageStorageCache;
  CGImageRef v9 = *(CGImageRef *)(v1 + OBJC_IVAR____TtC8Freeform21CRLCanvasDotGridLayer_dotGridImageStorageCache + 16);
  if (v9)
  {
    double v8 = *(double *)v13;
    double v14 = *(double *)(v13 + 8);
    uint64_t v10 = *(void *)(v13 + 24);
    double v15 = *(double *)(v13 + 32);
    BOOL v16 = sub_100895600(*(double *)v13, v6);
    char v17 = v9;
    if (v16 && sub_100895600(v14, v12))
    {
      swift_unknownObjectRelease();
LABEL_41:
      *(double *)a1 = v8;
      *(double *)(a1 + 8) = v14;
      *(void *)(a1 + 16) = v9;
      *(void *)(a1 + 24) = v10;
      *(double *)(a1 + 32) = v15;
      return;
    }
  }
  double v18 = *(double *)(v1 + OBJC_IVAR____TtC8Freeform24CRLCanvasBackgroundLayer_viewScale);
  if ((*(unsigned char *)(v1 + v5) & 1) == 0)
  {
    long long v19 = *(_OWORD *)(v1 + OBJC_IVAR____TtC8Freeform24CRLCanvasBackgroundLayer_dynamicTransform + 16);
    long long v37 = *(_OWORD *)(v1 + OBJC_IVAR____TtC8Freeform24CRLCanvasBackgroundLayer_dynamicTransform);
    long long v38 = v19;
    long long v39 = *(_OWORD *)(v1 + OBJC_IVAR____TtC8Freeform24CRLCanvasBackgroundLayer_dynamicTransform + 32);
    double v18 = v18 * sub_10007F808((double *)&v37);
  }
  double v20 = v18 * 25.0;
  sub_100E8D14C();
  double v22 = v21;
  double v23 = 512.0;
  if (*(unsigned char *)(v1 + v5)) {
    double v23 = 1024.0;
  }
  double v24 = floor(v23 / v12 / v20);
  if ((*(void *)&v24 & 0x7FF0000000000000) == 0x7FF0000000000000 && (*(void *)&v24 & 0xFFFFFFFFFFFFFLL) != 0) {
    goto LABEL_38;
  }
  if ((*(void *)&v24 & 0x7FF0000000000000) == 0x7FF0000000000000) {
    goto LABEL_44;
  }
  if (v24 <= -9.22337204e18)
  {
LABEL_45:
    __break(1u);
    goto LABEL_46;
  }
  if (v24 >= 9.22337204e18)
  {
LABEL_46:
    __break(1u);
    goto LABEL_47;
  }
  double v26 = ceil(v12 * (v20 * (double)(uint64_t)v24));
  uint64_t v27 = sub_100455AA8(11, v26, v26);
  if (!v27)
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"dotGridImageStorage", 19, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCanvas/CRLCanvasDotGridLayer.swift", 91, 2, 181, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"dotGridImageStorage", 19, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCanvas/CRLCanvasDotGridLayer.swift", 91, 2, 181);
LABEL_38:
    swift_unknownObjectRelease();
    goto LABEL_39;
  }
  unint64_t v28 = v27;
  uint64_t v10 = (uint64_t)v24;
  CGContextSaveGState(v27);
  CGContextScaleCTM(v28, v12, v12);
  id v29 = [self blackColor];
  uint64_t v30 = (CGColor *)[v29 CGColor];

  CGContextSetFillColorWithColor(v28, v30);
  if (((uint64_t)v24 & 0x8000000000000000) == 0)
  {
    double v15 = floor(v20 * 0.5);
    if (v10)
    {
      uint64_t v31 = 0;
      while (v31 != v10)
      {
        uint64_t v32 = 0;
        do
        {
          uint64_t v33 = v32 + 1;
          v40.origin.double x = sub_10006402C(v15 + v20 * (double)v32, v15 + v20 * (double)v31, v22);
          CGContextFillEllipseInRect(v28, v40);
          uint64_t v32 = v33;
        }
        while (v10 != v33);
        if (++v31 == v10) {
          goto LABEL_35;
        }
      }
      __break(1u);
LABEL_44:
      __break(1u);
      goto LABEL_45;
    }
LABEL_35:
    CGContextRestoreGState(v28);
    CGImageRef Image = CGBitmapContextCreateImage(v28);
    if (Image)
    {
      CGImageRef v9 = Image;
      uint64_t v35 = *(void **)(v13 + 16);
      *(double *)uint64_t v13 = v6;
      *(double *)(v13 + 8) = v12;
      *(void *)(v13 + 16) = Image;
      *(void *)(v13 + 24) = v10;
      *(double *)(v13 + 32) = v15;
      unint64_t v36 = Image;

      swift_unknownObjectRelease();
      double v8 = v6;
      double v14 = v12;
      goto LABEL_41;
    }
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"dotGridImageStorage", 19, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCanvas/CRLCanvasDotGridLayer.swift", 91, 2, 210, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"dotGridImageStorage", 19, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCanvas/CRLCanvasDotGridLayer.swift", 91, 2, 210);
    swift_unknownObjectRelease();

LABEL_39:
    CGImageRef v9 = 0;
    uint64_t v10 = 0;
    double v8 = 0.0;
    goto LABEL_40;
  }
LABEL_47:
  __break(1u);
}

void sub_100E8DB9C()
{
  v69.receiver = v0;
  v69.super_class = (Class)type metadata accessor for CRLCanvasDotGridLayer();
  [super layoutSublayers];
  uint64_t v1 = self;
  [v1 begin];
  [v1 setDisableActions:1];
  long long v2 = *(void **)&v0[OBJC_IVAR____TtC8Freeform21CRLCanvasDotGridLayer_outerReplicatorLayer];
  [v2 setHidden:(v0[OBJC_IVAR____TtC8Freeform24CRLCanvasBackgroundLayer_enabled] & 1) == 0];
  sub_100E8D624((uint64_t)v70);
  double v3 = v71;
  uint64_t v4 = v72;
  double v5 = v73;
  sub_100E8EB88((uint64_t)v70, (uint64_t)v74);
  if (!v75)
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"layoutSublayers()", 17, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCanvas/CRLCanvasDotGridLayer.swift", 91, 2, 236, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    LOBYTE(v62) = 2;
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"layoutSublayers()", 17, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCanvas/CRLCanvasDotGridLayer.swift", 91, 2, 236);
    [*(id *)&v0[OBJC_IVAR____TtC8Freeform21CRLCanvasDotGridLayer_imageTileLayer] setContents:0];
LABEL_25:
    [v1 commit];
    return;
  }
  uint64_t v66 = v4;
  double v6 = *(void **)&v0[OBJC_IVAR____TtC8Freeform21CRLCanvasDotGridLayer_innerReplicatorLayer];
  long long v7 = *(void **)&v0[OBJC_IVAR____TtC8Freeform21CRLCanvasDotGridLayer_imageTileLayer];
  CGImageGetWidth(v3);
  CGImageGetHeight(v3);
  uint64_t v8 = OBJC_IVAR____TtC8Freeform24CRLCanvasBackgroundLayer_scalesWithCanvas;
  double v65 = v5;
  if (v0[OBJC_IVAR____TtC8Freeform24CRLCanvasBackgroundLayer_scalesWithCanvas] == 1)
  {
    [v0 bounds];
    double v13 = sub_100065858(v9, v10, v11, v12);
    double v14 = sub_100064680(0.0, 0.0, v13);
    long double y = v15;
    long double x = v14;
  }
  else
  {
    uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
    double v19 = 0.0;
    double v20 = 0.0;
    if (Strong)
    {
      [Strong originOffsetForCanvasBackgroundLayer:v0];
      double v20 = v21;
      double v19 = v22;
      swift_unknownObjectRelease();
    }
    double v23 = (void *)swift_unknownObjectWeakLoadStrong();
    double v24 = 0.0;
    if (v23)
    {
      [v23 contentOffsetForCanvasBackgroundLayer:v0];
      double v24 = v25;
      swift_unknownObjectRelease();
    }
    double v26 = sub_100064698(v20, v19, v24);
    double v27 = sub_100064680(0.0, 0.0, v26);
    CGFloat v29 = v28;
    uint64_t v30 = (void *)swift_unknownObjectWeakLoadStrong();
    double v31 = 0.0;
    if (v30)
    {
      [v30 canvasCenterInCanvasBackgroundLayer:v0];
      double v31 = v32;
      swift_unknownObjectRelease();
    }
    long long v63 = *(_OWORD *)&v0[OBJC_IVAR____TtC8Freeform24CRLCanvasBackgroundLayer_dynamicTransform + 16];
    long long v64 = *(_OWORD *)&v0[OBJC_IVAR____TtC8Freeform24CRLCanvasBackgroundLayer_dynamicTransform];
    CGFloat v33 = *(double *)&v0[OBJC_IVAR____TtC8Freeform24CRLCanvasBackgroundLayer_dynamicTransform + 32];
    CGFloat v34 = *(double *)&v0[OBJC_IVAR____TtC8Freeform24CRLCanvasBackgroundLayer_dynamicTransform + 40];
    double v35 = sub_100064680(0.0, 0.0, v31);
    *(_OWORD *)&v67.m11 = v64;
    *(_OWORD *)&v67.m13 = v63;
    v67.m21 = v33;
    v67.m22 = v34;
    sub_10007FCC0(&v67, &v68, v35, v36);
    *(_OWORD *)&v67.m11 = *(_OWORD *)&v68.a;
    *(_OWORD *)&v67.m13 = *(_OWORD *)&v68.c;
    *(_OWORD *)&v67.m21 = *(_OWORD *)&v68.tx;
    v77.long double x = v27;
    v77.long double y = v29;
    CGPoint v37 = CGPointApplyAffineTransform(v77, (CGAffineTransform *)&v67);
    long double x = v37.x;
    long double y = v37.y;
    double v14 = 0.0;
  }
  double v38 = *(double *)&v0[OBJC_IVAR____TtC8Freeform24CRLCanvasBackgroundLayer_viewScale];
  if (v0[v8])
  {
    double v39 = *(double *)&v0[OBJC_IVAR____TtC8Freeform24CRLCanvasBackgroundLayer_viewScale];
  }
  else
  {
    long long v40 = *(_OWORD *)&v0[OBJC_IVAR____TtC8Freeform24CRLCanvasBackgroundLayer_dynamicTransform + 16];
    *(_OWORD *)&v67.m11 = *(_OWORD *)&v0[OBJC_IVAR____TtC8Freeform24CRLCanvasBackgroundLayer_dynamicTransform];
    *(_OWORD *)&v67.m13 = v40;
    *(_OWORD *)&v67.m21 = *(_OWORD *)&v0[OBJC_IVAR____TtC8Freeform24CRLCanvasBackgroundLayer_dynamicTransform + 32];
    double v38 = v38 * sub_10007F808(&v67.m11);
    double v39 = *(double *)&v0[OBJC_IVAR____TtC8Freeform24CRLCanvasBackgroundLayer_viewScale];
    if ((v0[v8] & 1) == 0)
    {
      long long v41 = *(_OWORD *)&v0[OBJC_IVAR____TtC8Freeform24CRLCanvasBackgroundLayer_dynamicTransform + 16];
      *(_OWORD *)&v67.m11 = *(_OWORD *)&v0[OBJC_IVAR____TtC8Freeform24CRLCanvasBackgroundLayer_dynamicTransform];
      *(_OWORD *)&v67.m13 = v41;
      *(_OWORD *)&v67.m21 = *(_OWORD *)&v0[OBJC_IVAR____TtC8Freeform24CRLCanvasBackgroundLayer_dynamicTransform + 32];
      double v39 = v39 * sub_10007F808(&v67.m11);
    }
  }
  double v42 = fmod(x, v38 * 25.0) - v14 - v65;
  fmod(y, v39 * 25.0);
  Freeform::SyncEvent::FetchedRecordZoneChanges::Deletion v76 = SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v43, v44);
  [v2 setFrame:v76.recordType._object];
  [v2 bounds];
  [v6 setFrame:];
  [v6 bounds];
  [v7 setFrame:];
  [v0 bounds];
  double v49 = sub_100065928(v45, v46, v47, v48, v42);
  CGFloat v51 = v50;
  CGFloat v53 = v52;
  CGFloat v55 = v54;
  double v56 = *(double *)&v0[OBJC_IVAR____TtC8Freeform24CRLCanvasBackgroundLayer_viewScale];
  if ((v0[v8] & 1) == 0)
  {
    long long v57 = *(_OWORD *)&v0[OBJC_IVAR____TtC8Freeform24CRLCanvasBackgroundLayer_dynamicTransform + 16];
    *(_OWORD *)&v67.m11 = *(_OWORD *)&v0[OBJC_IVAR____TtC8Freeform24CRLCanvasBackgroundLayer_dynamicTransform];
    *(_OWORD *)&v67.m13 = v57;
    *(_OWORD *)&v67.m21 = *(_OWORD *)&v0[OBJC_IVAR____TtC8Freeform24CRLCanvasBackgroundLayer_dynamicTransform + 32];
    double v56 = v56 * sub_10007F808(&v67.m11);
  }
  double v58 = v56 * 25.0 * (double)v66;
  v78.origin.long double x = v49;
  v78.origin.long double y = v51;
  v78.size.double width = v53;
  v78.size.double height = v55;
  double v59 = ceil(CGRectGetHeight(v78) / v58);
  if ((~*(void *)&v59 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_27;
  }
  if (v59 <= -9.22337204e18)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  if (v59 >= 9.22337204e18)
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  [v2 setInstanceCount:(uint64_t)v59];
  CATransform3DMakeTranslation(&v67, 0.0, v58, 0.0);
  [v2 setInstanceTransform:&v67];
  v79.origin.long double x = v49;
  v79.origin.long double y = v51;
  v79.size.double width = v53;
  v79.size.double height = v55;
  double v60 = ceil(CGRectGetWidth(v79) / v58);
  if ((~*(void *)&v60 & 0x7FF0000000000000) == 0)
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  if (v60 <= -9.22337204e18)
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  if (v60 < 9.22337204e18)
  {
    [v6 setInstanceCount:(uint64_t)v60];
    CATransform3DMakeTranslation(&v67, v58, 0.0, 0.0);
    [v6 setInstanceTransform:&v67];
    sub_100E8D39C();
    *(float *)&double v61 = v61;
    [v7 setOpacity:v61];
    [v7 setContents:v3];
    sub_100E8EBF0((uint64_t)v70);
    goto LABEL_25;
  }
LABEL_31:
  __break(1u);
}

id sub_100E8E318()
{
  uint64_t v1 = OBJC_IVAR____TtC8Freeform21CRLCanvasDotGridLayer_outerReplicatorLayer;
  id v2 = objc_allocWithZone((Class)CAReplicatorLayer);
  double v3 = v0;
  *(void *)&v0[v1] = [v2 init];
  uint64_t v4 = OBJC_IVAR____TtC8Freeform21CRLCanvasDotGridLayer_innerReplicatorLayer;
  *(void *)&v3[v4] = [objc_allocWithZone((Class)CAReplicatorLayer) init];
  uint64_t v5 = OBJC_IVAR____TtC8Freeform21CRLCanvasDotGridLayer_imageTileLayer;
  *(void *)&v3[v5] = [objc_allocWithZone((Class)CALayer) init];
  double v6 = &v3[OBJC_IVAR____TtC8Freeform21CRLCanvasDotGridLayer_dotGridImageStorageCache];
  *((void *)v6 + 4) = 0;
  *(_OWORD *)double v6 = 0u;
  *((_OWORD *)v6 + 1) = 0u;

  v8.receiver = v3;
  v8.super_class = (Class)type metadata accessor for CRLCanvasDotGridLayer();
  return [super init];
}

id sub_100E8E410(void *a1)
{
  uint64_t v3 = OBJC_IVAR____TtC8Freeform21CRLCanvasDotGridLayer_outerReplicatorLayer;
  id v4 = objc_allocWithZone((Class)CAReplicatorLayer);
  uint64_t v5 = v1;
  *(void *)&v1[v3] = [v4 init];
  uint64_t v6 = OBJC_IVAR____TtC8Freeform21CRLCanvasDotGridLayer_innerReplicatorLayer;
  *(void *)&v5[v6] = [objc_allocWithZone((Class)CAReplicatorLayer) init];
  uint64_t v7 = OBJC_IVAR____TtC8Freeform21CRLCanvasDotGridLayer_imageTileLayer;
  *(void *)&v5[v7] = [objc_allocWithZone((Class)CALayer) init];
  objc_super v8 = &v5[OBJC_IVAR____TtC8Freeform21CRLCanvasDotGridLayer_dotGridImageStorageCache];
  *((void *)v8 + 4) = 0;
  *(_OWORD *)objc_super v8 = 0u;
  *((_OWORD *)v8 + 1) = 0u;

  sub_10050F848(a1, a1[3]);
  uint64_t v9 = _bridgeAnythingToObjectiveC<A>(_:)();
  v12.receiver = v5;
  v12.super_class = (Class)type metadata accessor for CRLCanvasDotGridLayer();
  [super initWithLayer:v9];
  swift_unknownObjectRelease();
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)a1);
  return v10;
}

id sub_100E8E57C(void *a1)
{
  uint64_t v3 = OBJC_IVAR____TtC8Freeform21CRLCanvasDotGridLayer_outerReplicatorLayer;
  id v4 = objc_allocWithZone((Class)CAReplicatorLayer);
  uint64_t v5 = v1;
  *(void *)&v1[v3] = [v4 init];
  uint64_t v6 = OBJC_IVAR____TtC8Freeform21CRLCanvasDotGridLayer_innerReplicatorLayer;
  *(void *)&v5[v6] = [objc_allocWithZone((Class)CAReplicatorLayer) init];
  uint64_t v7 = OBJC_IVAR____TtC8Freeform21CRLCanvasDotGridLayer_imageTileLayer;
  *(void *)&v5[v7] = [objc_allocWithZone((Class)CALayer) init];
  objc_super v8 = &v5[OBJC_IVAR____TtC8Freeform21CRLCanvasDotGridLayer_dotGridImageStorageCache];
  *((void *)v8 + 4) = 0;
  *(_OWORD *)objc_super v8 = 0u;
  *((_OWORD *)v8 + 1) = 0u;

  v11.receiver = v5;
  v11.super_class = (Class)type metadata accessor for CRLCanvasDotGridLayer();
  [super initWithCoder:a1];

  return v9;
}

void sub_100E8E698()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform21CRLCanvasDotGridLayer_dotGridImageStorageCache + 16);
}

id sub_100E8E6FC()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLCanvasDotGridLayer();
  return [super dealloc];
}

uint64_t type metadata accessor for CRLCanvasDotGridLayer()
{
  return self;
}

uint64_t initializeWithCopy for CRLCanvasDotGridLayerImageStorage(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v3 = *(void **)(a2 + 16);
  *(void *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  id v4 = v3;
  return a1;
}

void *assignWithCopy for CRLCanvasDotGridLayerImageStorage(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  id v4 = (void *)a2[2];
  uint64_t v5 = (void *)a1[2];
  a1[2] = v4;
  id v6 = v4;

  a1[3] = a2[3];
  a1[4] = a2[4];
  return a1;
}

uint64_t assignWithTake for CRLCanvasDotGridLayerImageStorage(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  id v4 = *(void **)(a1 + 16);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);

  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for CRLCanvasDotGridLayerImageStorage(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 40)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CRLCanvasDotGridLayerImageStorage(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 40) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLCanvasDotGridLayerImageStorage()
{
  return &type metadata for CRLCanvasDotGridLayerImageStorage;
}

unint64_t sub_100E8E958()
{
  unint64_t result = qword_1016A0148;
  if (!qword_1016A0148)
  {
    sub_100752EE0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A0148);
  }
  return result;
}

void *sub_100E8E9B0(double a1)
{
  uint64_t v3 = OBJC_IVAR____TtC8Freeform21CRLCanvasDotGridLayer_outerReplicatorLayer;
  id v4 = objc_allocWithZone((Class)CAReplicatorLayer);
  uint64_t v5 = v1;
  *(void *)&v1[v3] = [v4 init];
  uint64_t v6 = OBJC_IVAR____TtC8Freeform21CRLCanvasDotGridLayer_innerReplicatorLayer;
  *(void *)&v5[v6] = [objc_allocWithZone((Class)CAReplicatorLayer) init];
  uint64_t v7 = OBJC_IVAR____TtC8Freeform21CRLCanvasDotGridLayer_imageTileLayer;
  *(void *)&v5[v7] = [objc_allocWithZone((Class)CALayer) init];
  objc_super v8 = &v5[OBJC_IVAR____TtC8Freeform21CRLCanvasDotGridLayer_dotGridImageStorageCache];
  *((void *)v8 + 4) = 0;
  *(_OWORD *)objc_super v8 = 0u;
  *((_OWORD *)v8 + 1) = 0u;

  swift_unknownObjectWeakInit();
  *(void *)&v5[OBJC_IVAR____TtC8Freeform24CRLCanvasBackgroundLayer_viewScale] = 0x3FF0000000000000;
  v5[OBJC_IVAR____TtC8Freeform24CRLCanvasBackgroundLayer_enabled] = 0;
  id v9 = &v5[OBJC_IVAR____TtC8Freeform24CRLCanvasBackgroundLayer_dynamicTransform];
  *(void *)id v9 = 0x3FF0000000000000;
  *((void *)v9 + 1) = 0;
  *((void *)v9 + 2) = 0;
  *((void *)v9 + 3) = 0x3FF0000000000000;
  *((void *)v9 + 4) = 0;
  *((void *)v9 + 5) = 0;
  v5[OBJC_IVAR____TtC8Freeform24CRLCanvasBackgroundLayer_scalesWithCanvas] = 1;
  *(void *)&v5[OBJC_IVAR____TtC8Freeform24CRLCanvasBackgroundLayer_lastValidContentsScaleFromDelegate] = 0x3FF0000000000000;
  v15.receiver = v5;
  v15.super_class = (Class)type metadata accessor for CRLCanvasBackgroundLayer();
  id v10 = [super init];
  objc_super v11 = *(void (**)(uint64_t, double))((swift_isaMask & *v10) + 0x120);
  objc_super v12 = v10;
  uint64_t v13 = swift_unknownObjectRetain();
  v11(v13, a1);

  swift_unknownObjectRelease();
  return v12;
}

uint64_t sub_100E8EB88(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1005057FC(&qword_1016A0150);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100E8EBF0(uint64_t a1)
{
  return a1;
}

uint64_t *CRLColor.pencilTrayYellow.unsafeMutableAddressor()
{
  if (qword_101670188 != -1) {
    swift_once();
  }
  return &static CRLColor.pencilTrayYellow;
}

id sub_100E8EC68()
{
  id result = [objc_allocWithZone((Class)CRLColor) initWithRed:0.0823529412 green:0.494117647 blue:0.984313725 alpha:1.0];
  static CRLColor.pencilTrayBlue = (uint64_t)result;
  return result;
}

uint64_t *CRLColor.pencilTrayBlue.unsafeMutableAddressor()
{
  if (qword_101670178 != -1) {
    swift_once();
  }
  return &static CRLColor.pencilTrayBlue;
}

id static CRLColor.pencilTrayBlue.getter()
{
  return sub_1009520A0(&qword_101670178, (void **)&static CRLColor.pencilTrayBlue);
}

id sub_100E8ED50()
{
  id result = [objc_allocWithZone((Class)CRLColor) initWithRed:0.325490196 green:0.843137255 blue:0.411764706 alpha:1.0];
  static CRLColor.pencilTrayGreen = (uint64_t)result;
  return result;
}

uint64_t *CRLColor.pencilTrayGreen.unsafeMutableAddressor()
{
  if (qword_101670180 != -1) {
    swift_once();
  }
  return &static CRLColor.pencilTrayGreen;
}

id static CRLColor.pencilTrayGreen.getter()
{
  return sub_1009520A0(&qword_101670180, (void **)&static CRLColor.pencilTrayGreen);
}

id sub_100E8EE34()
{
  id result = [objc_allocWithZone((Class)CRLColor) initWithRed:0.996078431 green:0.815686275 blue:0.188235294 alpha:1.0];
  static CRLColor.pencilTrayYellow = (uint64_t)result;
  return result;
}

id static CRLColor.pencilTrayYellow.getter()
{
  return sub_1009520A0(&qword_101670188, (void **)&static CRLColor.pencilTrayYellow);
}

id sub_100E8EED0()
{
  id result = [objc_allocWithZone((Class)CRLColor) initWithRed:0.988235294 green:0.192156863 blue:0.258823529 alpha:1.0];
  static CRLColor.pencilTrayRed = (uint64_t)result;
  return result;
}

uint64_t *CRLColor.pencilTrayRed.unsafeMutableAddressor()
{
  if (qword_101670190 != -1) {
    swift_once();
  }
  return &static CRLColor.pencilTrayRed;
}

id static CRLColor.pencilTrayRed.getter()
{
  return sub_1009520A0(&qword_101670190, (void **)&static CRLColor.pencilTrayRed);
}

uint64_t sub_100E8EFB4()
{
  uint64_t v1 = sub_1005057FC((uint64_t *)&unk_101674160);
  __chkstk_darwin(v1 - 8, v2);
  uint64_t v25 = (uint64_t)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for CRLProto_Data(0);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4, v6);
  objc_super v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9, v10);
  objc_super v12 = (long long *)((char *)&v24 - v11);
  uint64_t v13 = type metadata accessor for CRLProto_RealTimeMessageContainer(0);
  __chkstk_darwin(v13, v14);
  BOOL v16 = (_DWORD *)((char *)&v24 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  UnknownStorage.init()();
  uint64_t v27 = v13;
  uint64_t v17 = (uint64_t)v16 + *(int *)(v13 + 24);
  double v18 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 56);
  v18(v17, 1, 1, v4);
  *BOOL v16 = *(unsigned __int8 *)(v0 + 16);
  long long v24 = xmmword_101180360;
  _OWORD *v12 = xmmword_101180360;
  UnknownStorage.init()();
  sub_1008A9D98(v17);
  sub_1005CC5B8((uint64_t)v12, v17);
  double v26 = v18;
  v18(v17, 0, 1, v4);
  uint64_t v19 = v25;
  uint64_t v21 = *(void *)(v0 + 24);
  unint64_t v20 = *(void *)(v0 + 32);
  sub_1005CC4F0(v17, v25);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v19, 1, v4) == 1)
  {
    *(_OWORD *)objc_super v8 = v24;
    sub_100510D4C(v21, v20);
    UnknownStorage.init()();
    sub_1008A9D98(v19);
  }
  else
  {
    sub_1005CC5B8(v19, (uint64_t)v8);
    sub_100510D4C(v21, v20);
  }
  sub_100510084(*(void *)v8, *((void *)v8 + 1));
  *(void *)objc_super v8 = v21;
  *((void *)v8 + 1) = v20;
  sub_1008A9D98(v17);
  sub_1005CC5B8((uint64_t)v8, v17);
  v26(v17, 0, 1, v4);
  sub_100E8F52C();
  uint64_t v22 = Message.serializedData(partial:)();
  sub_100E8F920((uint64_t)v16, type metadata accessor for CRLProto_RealTimeMessageContainer);
  return v22;
}

Swift::Int sub_100E8F2D0()
{
  Swift::UInt32 v1 = *v0;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(v1);
  return Hasher._finalize()();
}

void sub_100E8F318()
{
  Hasher._combine(_:)(*v0);
}

Swift::Int sub_100E8F344()
{
  Swift::UInt32 v1 = *v0;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(v1);
  return Hasher._finalize()();
}

int *sub_100E8F388@<X0>(int *result@<X0>, unsigned char *a2@<X8>)
{
  int v2 = *result;
  if (*result >= 3) {
    LOBYTE(v2) = 3;
  }
  *a2 = v2;
  return result;
}

void sub_100E8F3A0(_DWORD *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t type metadata accessor for CRLRealTimeMessageContainer()
{
  return self;
}

unsigned char *storeEnumTagSinglePayload for CRLRealTimeMessageContainer.MessageType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *id result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100E8F49CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *id result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLRealTimeMessageContainer.MessageType()
{
  return &type metadata for CRLRealTimeMessageContainer.MessageType;
}

unint64_t sub_100E8F4D8()
{
  unint64_t result = qword_1016A0200;
  if (!qword_1016A0200)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A0200);
  }
  return result;
}

unint64_t sub_100E8F52C()
{
  unint64_t result = qword_1016978F0;
  if (!qword_1016978F0)
  {
    type metadata accessor for CRLProto_RealTimeMessageContainer(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016978F0);
  }
  return result;
}

uint64_t sub_100E8F584(uint64_t a1, unint64_t a2)
{
  uint64_t v5 = sub_1005057FC((uint64_t *)&unk_101674160);
  __chkstk_darwin(v5 - 8, v6);
  objc_super v8 = &v23[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = type metadata accessor for CRLProto_Data(0);
  uint64_t v28 = *(void *)(v9 - 8);
  __chkstk_darwin(v9, v10);
  objc_super v12 = (uint64_t *)&v23[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v13 = type metadata accessor for BinaryDecodingOptions();
  __chkstk_darwin(v13 - 8, v14);
  uint64_t v15 = type metadata accessor for CRLProto_RealTimeMessageContainer(0);
  __chkstk_darwin(v15, v16);
  double v18 = (int *)&v23[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v27 = 0;
  long long v25 = 0u;
  long long v26 = 0u;
  sub_100510D4C(a1, a2);
  BinaryDecodingOptions.init()();
  sub_100E8F52C();
  Message.init(serializedData:extensions:partial:options:)();
  if (v2) {
    return sub_100510084(a1, a2);
  }
  uint64_t v20 = v28;
  if (*v18 >= 3)
  {
    sub_100E8F8CC();
    swift_allocError();
    swift_willThrow();
    sub_100510084(a1, a2);
    return sub_100E8F920((uint64_t)v18, type metadata accessor for CRLProto_RealTimeMessageContainer);
  }
  else
  {
    int v24 = *v18;
    sub_1005CC4F0((uint64_t)v18 + *(int *)(v15 + 24), (uint64_t)v8);
    if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v20 + 48))(v8, 1, v9) == 1)
    {
      *(_OWORD *)objc_super v12 = xmmword_101180360;
      UnknownStorage.init()();
      sub_1008A9D98((uint64_t)v8);
    }
    else
    {
      sub_1005CC5B8((uint64_t)v8, (uint64_t)v12);
    }
    sub_100510084(a1, a2);
    sub_100E8F920((uint64_t)v18, type metadata accessor for CRLProto_RealTimeMessageContainer);
    uint64_t v21 = *v12;
    unint64_t v22 = v12[1];
    sub_100510D4C(*v12, v22);
    sub_100E8F920((uint64_t)v12, type metadata accessor for CRLProto_Data);
    type metadata accessor for CRLRealTimeMessageContainer();
    uint64_t result = swift_allocObject();
    *(unsigned char *)(result + 16) = v24;
    *(void *)(result + 24) = v21;
    *(void *)(result + 32) = v22;
  }
  return result;
}

unint64_t sub_100E8F8CC()
{
  unint64_t result = qword_1016A0208;
  if (!qword_1016A0208)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A0208);
  }
  return result;
}

uint64_t sub_100E8F920(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unsigned char *storeEnumTagSinglePayload for CRLRealTimeMessageContainer.MessageError(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x100E8FA1CLL);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLRealTimeMessageContainer.MessageError()
{
  return &type metadata for CRLRealTimeMessageContainer.MessageError;
}

unint64_t sub_100E8FA58()
{
  unint64_t result = qword_1016A0210;
  if (!qword_1016A0210)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A0210);
  }
  return result;
}

uint64_t sub_100E8FAAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v33 = a1;
  uint64_t v5 = sub_1005057FC(&qword_1016801A8);
  __chkstk_darwin(v5 - 8, v6);
  double v31 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1005057FC((uint64_t *)&unk_10167BE90);
  __chkstk_darwin(v8 - 8, v9);
  double v32 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1005057FC((uint64_t *)&unk_1016836C0);
  uint64_t result = __chkstk_darwin(v11, v12);
  uint64_t v16 = (char *)&v27 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a3 >= 1)
  {
    uint64_t v28 = (void (**)(uint64_t, void, uint64_t, uint64_t))(v14 + 56);
    CGFloat v29 = (void (**)(char *, char *, uint64_t))(v14 + 16);
    uint64_t v30 = (uint64_t (**)(char *, uint64_t))(v14 + 8);
    uint64_t v17 = v33;
    do
    {
      uint64_t v34 = 0;
      uint64_t v35 = 0;
      sub_1005057FC((uint64_t *)&unk_10167BC20);
      uint64_t v18 = CRAttributedString.attributes(at:effectiveRange:)();
      __chkstk_darwin(v18, v19);
      *(&v27 - 4) = (uint64_t)&type metadata for CRLWPHyperlinkAttribute;
      *(&v27 - 3) = sub_10091989C();
      *(&v27 - 2) = v17;
      swift_getKeyPath();
      uint64_t v20 = type metadata accessor for CRLWPHyperlinkSmartFieldData(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v32, 1, 1, v20);
      sub_100913630();
      swift_retain();
      CRAttributedString.Attributes.subscript.setter();
      uint64_t v21 = v34 + v35;
      if (__OFADD__(v34, v35))
      {
        __break(1u);
LABEL_22:
        __break(1u);
LABEL_23:
        __break(1u);
LABEL_24:
        __break(1u);
LABEL_25:
        __break(1u);
LABEL_26:
        __break(1u);
      }
      uint64_t v22 = a2 + a3;
      if (__OFADD__(a2, a3)) {
        goto LABEL_22;
      }
      if (v21 >= v22) {
        uint64_t v23 = a2 + a3;
      }
      else {
        uint64_t v23 = v34 + v35;
      }
      if (v34 < a2 || v34 >= v22)
      {
        if (a2 < v34 || a2 >= v21) {
          return (*v30)(v16, v11);
        }
        uint64_t v24 = v23 - a2;
        if (__OFSUB__(v23, a2)) {
          goto LABEL_26;
        }
      }
      else
      {
        uint64_t v24 = v23 - v34;
        if (__OFSUB__(v23, v34)) {
          goto LABEL_25;
        }
      }
      uint64_t v25 = (uint64_t)v31;
      (*v29)(v31, v16, v11);
      (*v28)(v25, 0, 1, v11);
      CRAttributedString.setAttributes(_:range:)();
      sub_100522F00(v25, &qword_1016801A8);
      uint64_t result = (*v30)(v16, v11);
      BOOL v26 = __OFADD__(a2, v24);
      a2 += v24;
      if (v26) {
        goto LABEL_23;
      }
      BOOL v26 = __OFSUB__(a3, v24);
      a3 -= v24;
      if (v26) {
        goto LABEL_24;
      }
    }
    while (a3 > 0);
  }
  return result;
}

uint64_t sub_100E8FE78(void (**a1)(uint64_t, void, uint64_t, uint64_t), uint64_t a2, uint64_t a3)
{
  uint64_t v27 = a1;
  uint64_t v5 = sub_1005057FC(&qword_1016801A8);
  __chkstk_darwin(v5 - 8, v6);
  BOOL v26 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1005057FC((uint64_t *)&unk_1016836C0);
  uint64_t result = __chkstk_darwin(v8, v9);
  uint64_t v13 = (char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a3 >= 1)
  {
    uint64_t v23 = (void (**)(uint64_t, void, uint64_t, uint64_t))(v11 + 56);
    uint64_t v24 = (void (**)(char *, char *, uint64_t))(v11 + 16);
    uint64_t v25 = (uint64_t (**)(char *, uint64_t))(v11 + 8);
    uint64_t v14 = v27;
    do
    {
      uint64_t v28 = 0;
      uint64_t v29 = 0;
      sub_1005057FC((uint64_t *)&unk_10167BC20);
      uint64_t v15 = CRAttributedString.attributes(at:effectiveRange:)();
      __chkstk_darwin(v15, v16);
      *(&v23 - 4) = (void (**)(uint64_t, void, uint64_t, uint64_t))&type metadata for CRLWPUnderlineAttribute;
      *(&v23 - 3) = (void (**)(uint64_t, void, uint64_t, uint64_t))sub_10083E400();
      *(&v23 - 2) = v14;
      swift_getKeyPath();
      uint64_t v30 = 0;
      char v31 = -1;
      sub_1008431AC();
      swift_retain();
      CRAttributedString.Attributes.subscript.setter();
      uint64_t v17 = v28 + v29;
      if (__OFADD__(v28, v29))
      {
        __break(1u);
LABEL_22:
        __break(1u);
LABEL_23:
        __break(1u);
LABEL_24:
        __break(1u);
LABEL_25:
        __break(1u);
LABEL_26:
        __break(1u);
      }
      uint64_t v18 = a2 + a3;
      if (__OFADD__(a2, a3)) {
        goto LABEL_22;
      }
      if (v17 >= v18) {
        uint64_t v19 = a2 + a3;
      }
      else {
        uint64_t v19 = v28 + v29;
      }
      if (v28 < a2 || v28 >= v18)
      {
        if (a2 < v28 || a2 >= v17) {
          return (*v25)(v13, v8);
        }
        uint64_t v20 = v19 - a2;
        if (__OFSUB__(v19, a2)) {
          goto LABEL_26;
        }
      }
      else
      {
        uint64_t v20 = v19 - v28;
        if (__OFSUB__(v19, v28)) {
          goto LABEL_25;
        }
      }
      uint64_t v21 = (uint64_t)v26;
      (*v24)(v26, v13, v8);
      (*v23)(v21, 0, 1, v8);
      CRAttributedString.setAttributes(_:range:)();
      sub_100522F00(v21, &qword_1016801A8);
      uint64_t result = (*v25)(v13, v8);
      BOOL v22 = __OFADD__(a2, v20);
      a2 += v20;
      if (v22) {
        goto LABEL_23;
      }
      BOOL v22 = __OFSUB__(a3, v20);
      a3 -= v20;
      if (v22) {
        goto LABEL_24;
      }
    }
    while (a3 > 0);
  }
  return result;
}

uint64_t sub_100E901C0(void (**a1)(uint64_t, void, uint64_t, uint64_t), uint64_t a2, uint64_t a3, void (**a4)(uint64_t, void, uint64_t, uint64_t), uint64_t (*a5)(uint64_t), void (*a6)(void))
{
  uint64_t v33 = a5;
  uint64_t v34 = a6;
  char v31 = a1;
  double v32 = a4;
  uint64_t v8 = sub_1005057FC(&qword_1016801A8);
  __chkstk_darwin(v8 - 8, v9);
  uint64_t v30 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1005057FC((uint64_t *)&unk_1016836C0);
  uint64_t result = __chkstk_darwin(v11, v12);
  uint64_t v16 = (char *)&v27 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a3 >= 1)
  {
    uint64_t v27 = (void (**)(uint64_t, void, uint64_t, uint64_t))(v14 + 56);
    uint64_t v28 = (void (**)(char *, char *, uint64_t))(v14 + 16);
    uint64_t v29 = (uint64_t (**)(char *, uint64_t))(v14 + 8);
    uint64_t v17 = v31;
    do
    {
      uint64_t v35 = 0;
      uint64_t v36 = 0;
      sub_1005057FC((uint64_t *)&unk_10167BC20);
      uint64_t v18 = CRAttributedString.attributes(at:effectiveRange:)();
      uint64_t v20 = __chkstk_darwin(v18, v19);
      *(&v27 - 4) = v32;
      *(&v27 - 3) = (void (**)(uint64_t, void, uint64_t, uint64_t))v33(v20);
      *(&v27 - 2) = v17;
      swift_getKeyPath();
      char v37 = 2;
      v34();
      swift_retain();
      CRAttributedString.Attributes.subscript.setter();
      uint64_t v21 = v35 + v36;
      if (__OFADD__(v35, v36))
      {
        __break(1u);
LABEL_22:
        __break(1u);
LABEL_23:
        __break(1u);
LABEL_24:
        __break(1u);
LABEL_25:
        __break(1u);
LABEL_26:
        __break(1u);
      }
      uint64_t v22 = a2 + a3;
      if (__OFADD__(a2, a3)) {
        goto LABEL_22;
      }
      if (v21 >= v22) {
        uint64_t v23 = a2 + a3;
      }
      else {
        uint64_t v23 = v35 + v36;
      }
      if (v35 < a2 || v35 >= v22)
      {
        if (a2 < v35 || a2 >= v21) {
          return (*v29)(v16, v11);
        }
        uint64_t v24 = v23 - a2;
        if (__OFSUB__(v23, a2)) {
          goto LABEL_26;
        }
      }
      else
      {
        uint64_t v24 = v23 - v35;
        if (__OFSUB__(v23, v35)) {
          goto LABEL_25;
        }
      }
      uint64_t v25 = (uint64_t)v30;
      (*v28)(v30, v16, v11);
      (*v27)(v25, 0, 1, v11);
      CRAttributedString.setAttributes(_:range:)();
      sub_100522F00(v25, &qword_1016801A8);
      uint64_t result = (*v29)(v16, v11);
      BOOL v26 = __OFADD__(a2, v24);
      a2 += v24;
      if (v26) {
        goto LABEL_23;
      }
      BOOL v26 = __OFSUB__(a3, v24);
      a3 -= v24;
      if (v26) {
        goto LABEL_24;
      }
    }
    while (a3 > 0);
  }
  return result;
}

uint64_t sub_100E90514(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v28 = a1;
  uint64_t v5 = sub_1005057FC(&qword_1016801A8);
  __chkstk_darwin(v5 - 8, v6);
  uint64_t v27 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1005057FC((uint64_t *)&unk_1016836C0);
  uint64_t result = __chkstk_darwin(v8, v9);
  uint64_t v13 = (char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a3 >= 1)
  {
    uint64_t v24 = (void (**)(uint64_t, void, uint64_t, uint64_t))(v11 + 56);
    uint64_t v25 = (void (**)(char *, char *, uint64_t))(v11 + 16);
    BOOL v26 = (uint64_t (**)(char *, uint64_t))(v11 + 8);
    uint64_t v14 = v28;
    do
    {
      uint64_t v29 = 0;
      uint64_t v30 = 0;
      sub_1005057FC((uint64_t *)&unk_10167BC20);
      uint64_t v15 = CRAttributedString.attributes(at:effectiveRange:)();
      __chkstk_darwin(v15, v16);
      *(&v23 - 4) = (uint64_t)&type metadata for CRLWPFontSizeAttribute;
      *(&v23 - 3) = sub_10083E4FC();
      *(&v23 - 2) = v14;
      swift_getKeyPath();
      int v31 = 0;
      char v32 = 1;
      sub_10083E5B0();
      swift_retain();
      CRAttributedString.Attributes.subscript.setter();
      uint64_t v17 = v29 + v30;
      if (__OFADD__(v29, v30))
      {
        __break(1u);
LABEL_22:
        __break(1u);
LABEL_23:
        __break(1u);
LABEL_24:
        __break(1u);
LABEL_25:
        __break(1u);
LABEL_26:
        __break(1u);
      }
      uint64_t v18 = a2 + a3;
      if (__OFADD__(a2, a3)) {
        goto LABEL_22;
      }
      if (v17 >= v18) {
        uint64_t v19 = a2 + a3;
      }
      else {
        uint64_t v19 = v29 + v30;
      }
      if (v29 < a2 || v29 >= v18)
      {
        if (a2 < v29 || a2 >= v17) {
          return (*v26)(v13, v8);
        }
        uint64_t v20 = v19 - a2;
        if (__OFSUB__(v19, a2)) {
          goto LABEL_26;
        }
      }
      else
      {
        uint64_t v20 = v19 - v29;
        if (__OFSUB__(v19, v29)) {
          goto LABEL_25;
        }
      }
      uint64_t v21 = (uint64_t)v27;
      (*v25)(v27, v13, v8);
      (*v24)(v21, 0, 1, v8);
      CRAttributedString.setAttributes(_:range:)();
      sub_100522F00(v21, &qword_1016801A8);
      uint64_t result = (*v26)(v13, v8);
      BOOL v22 = __OFADD__(a2, v20);
      a2 += v20;
      if (v22) {
        goto LABEL_23;
      }
      BOOL v22 = __OFSUB__(a3, v20);
      a3 -= v20;
      if (v22) {
        goto LABEL_24;
      }
    }
    while (a3 > 0);
  }
  return result;
}

void sub_100E9085C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v27 = a1;
  uint64_t v5 = sub_1005057FC(&qword_1016801A8);
  __chkstk_darwin(v5 - 8, v6);
  BOOL v26 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1005057FC((uint64_t *)&unk_1016836C0);
  __chkstk_darwin(v8, v9);
  uint64_t v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a3 >= 1)
  {
    uint64_t v24 = (void (**)(char *, char *, uint64_t))(v10 + 16);
    uint64_t v23 = (void (**)(uint64_t, void, uint64_t, uint64_t))(v10 + 56);
    uint64_t v25 = (void (**)(char *, uint64_t))(v10 + 8);
    uint64_t v13 = v27;
    do
    {
      uint64_t v28 = 0;
      uint64_t v29 = 0;
      sub_1005057FC((uint64_t *)&unk_10167BC20);
      uint64_t v14 = CRAttributedString.attributes(at:effectiveRange:)();
      __chkstk_darwin(v14, v15);
      *(&v22 - 4) = (uint64_t)&type metadata for CRLWPCharacterFillAttribute;
      *(&v22 - 3) = sub_10083E34C();
      *(&v22 - 2) = v13;
      swift_getKeyPath();
      long long v35 = 0u;
      long long v36 = 0u;
      long long v33 = 0u;
      long long v34 = 0u;
      long long v31 = 0u;
      long long v32 = 0u;
      long long v30 = 0u;
      sub_100913244();
      swift_retain();
      CRAttributedString.Attributes.subscript.setter();
      uint64_t v16 = v28 + v29;
      if (__OFADD__(v28, v29))
      {
        __break(1u);
LABEL_22:
        __break(1u);
LABEL_23:
        __break(1u);
LABEL_24:
        __break(1u);
LABEL_25:
        __break(1u);
LABEL_26:
        __break(1u);
      }
      uint64_t v17 = a2 + a3;
      if (__OFADD__(a2, a3)) {
        goto LABEL_22;
      }
      if (v16 >= v17) {
        uint64_t v18 = a2 + a3;
      }
      else {
        uint64_t v18 = v28 + v29;
      }
      if (v28 < a2 || v28 >= v17)
      {
        if (a2 < v28 || a2 >= v16)
        {
          (*v25)(v12, v8);
          return;
        }
        uint64_t v19 = v18 - a2;
        if (__OFSUB__(v18, a2)) {
          goto LABEL_26;
        }
      }
      else
      {
        uint64_t v19 = v18 - v28;
        if (__OFSUB__(v18, v28)) {
          goto LABEL_25;
        }
      }
      uint64_t v20 = (uint64_t)v26;
      (*v24)(v26, v12, v8);
      (*v23)(v20, 0, 1, v8);
      CRAttributedString.setAttributes(_:range:)();
      sub_100522F00(v20, &qword_1016801A8);
      (*v25)(v12, v8);
      BOOL v21 = __OFADD__(a2, v19);
      a2 += v19;
      if (v21) {
        goto LABEL_23;
      }
      BOOL v21 = __OFSUB__(a3, v19);
      a3 -= v19;
      if (v21) {
        goto LABEL_24;
      }
    }
    while (a3 > 0);
  }
}

void sub_100E90BB8(void (**a1)(uint64_t, void, uint64_t, uint64_t), uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v51 = a5;
  uint64_t v52 = a6;
  int v50 = a3;
  uint64_t v48 = a2;
  double v49 = a1;
  uint64_t v7 = sub_1005057FC((uint64_t *)&unk_1016836C0);
  uint64_t v45 = *(void *)(v7 - 8);
  uint64_t v46 = v7;
  __chkstk_darwin(v7, v8);
  CGFloat v47 = (char *)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1005057FC((uint64_t *)&unk_10167BC20);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10, v12);
  uint64_t v14 = (char *)&v44 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for CRLWPShapeItemCRDTData(0);
  __chkstk_darwin(v15, v16);
  uint64_t v18 = (char *)&v44 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = type metadata accessor for CRLWPStorageCRDTData(0);
  __chkstk_darwin(v19 - 8, v20);
  uint64_t v22 = (char *)&v44 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = a4;
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v25 = (void *)Strong;
    swift_getObjectType();
    uint64_t v26 = swift_conformsToProtocol2();
    if (v26) {
      uint64_t v27 = v26;
    }
    else {
      uint64_t v27 = 0;
    }
    if (v26) {
      uint64_t v28 = v25;
    }
    else {
      uint64_t v28 = 0;
    }
    if (v28)
    {
      uint64_t ObjectType = swift_getObjectType();
      char v30 = sub_100FC1058(ObjectType, v27);

      if ((v30 & 1) == 0) {
        return;
      }
    }
    else
    {
    }
  }
  uint64_t v31 = *(void *)(v23 + OBJC_IVAR____TtC8Freeform12CRLWPStorage_shapeItemData);
  if (!v31)
  {
LABEL_30:
    __break(1u);
    return;
  }
  (*(void (**)(void))(*(void *)v31 + 760))();
  sub_1005D3C94((uint64_t)&v18[*(int *)(v15 + 20)], (uint64_t)v22);
  sub_1005D3CF8((uint64_t)v18, type metadata accessor for CRLWPShapeItemCRDTData);
  (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v14, v22, v10);
  sub_1005D3CF8((uint64_t)v22, type metadata accessor for CRLWPStorageCRDTData);
  uint64_t v32 = CRAttributedString.count.getter();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
  if (v32 >= (v51 & ~(v51 >> 63))) {
    uint64_t v33 = v51 & ~(v51 >> 63);
  }
  else {
    uint64_t v33 = v32;
  }
  if (v32 >= (v52 & ~(v52 >> 63))) {
    uint64_t v34 = v52 & ~(v52 >> 63);
  }
  else {
    uint64_t v34 = v32;
  }
  if (v34 < v33)
  {
    __break(1u);
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  unsigned __int8 v35 = v50;
  if ((_BYTE)v50 == 0xFF)
  {
    sub_100E92ADC(v49, v33, v34, &type metadata for CRLWPFontBoldAttribute, (uint64_t (*)(uint64_t))sub_10083E4A8, (void (*)(void))sub_100843254);
    return;
  }
  uint64_t v36 = v48;
  sub_100E93D2C(v48, v50 & 1);
  sub_1005D3BF8();
  uint64_t v37 = (uint64_t)v47;
  uint64_t v38 = CRAttributedString.Attributes.init()();
  __chkstk_darwin(v38, v39);
  *(&v44 - 4) = (uint64_t)&type metadata for CRLWPFontBoldAttribute;
  unint64_t v40 = sub_10083E4A8();
  long long v41 = v49;
  *(&v44 - 3) = v40;
  *(&v44 - 2) = (uint64_t)v41;
  swift_getKeyPath();
  if ((v35 & 1) == 0)
  {
    char v42 = v36 & 1;
    goto LABEL_26;
  }
  if (!*(void *)(v36 + 16)) {
    goto LABEL_29;
  }
  char v42 = *(unsigned char *)(v36 + 32);
LABEL_26:
  char v53 = v42;
  sub_100843254();
  swift_retain();
  uint64_t v43 = v46;
  CRAttributedString.Attributes.subscript.setter();
  sub_10090614C(v37, v33, v34);
  (*(void (**)(uint64_t, uint64_t))(v45 + 8))(v37, v43);
  sub_100E93D38(v36, v35);
}

void sub_100E91068(void (**a1)(uint64_t, void, uint64_t, uint64_t), uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v51 = a5;
  uint64_t v52 = a6;
  int v50 = a3;
  uint64_t v48 = a2;
  double v49 = a1;
  uint64_t v7 = sub_1005057FC((uint64_t *)&unk_1016836C0);
  uint64_t v45 = *(void *)(v7 - 8);
  uint64_t v46 = v7;
  __chkstk_darwin(v7, v8);
  CGFloat v47 = (char *)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1005057FC((uint64_t *)&unk_10167BC20);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10, v12);
  uint64_t v14 = (char *)&v44 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for CRLWPShapeItemCRDTData(0);
  __chkstk_darwin(v15, v16);
  uint64_t v18 = (char *)&v44 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = type metadata accessor for CRLWPStorageCRDTData(0);
  __chkstk_darwin(v19 - 8, v20);
  uint64_t v22 = (char *)&v44 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = a4;
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v25 = (void *)Strong;
    swift_getObjectType();
    uint64_t v26 = swift_conformsToProtocol2();
    if (v26) {
      uint64_t v27 = v26;
    }
    else {
      uint64_t v27 = 0;
    }
    if (v26) {
      uint64_t v28 = v25;
    }
    else {
      uint64_t v28 = 0;
    }
    if (v28)
    {
      uint64_t ObjectType = swift_getObjectType();
      char v30 = sub_100FC1058(ObjectType, v27);

      if ((v30 & 1) == 0) {
        return;
      }
    }
    else
    {
    }
  }
  uint64_t v31 = *(void *)(v23 + OBJC_IVAR____TtC8Freeform12CRLWPStorage_shapeItemData);
  if (!v31)
  {
LABEL_30:
    __break(1u);
    return;
  }
  (*(void (**)(void))(*(void *)v31 + 760))();
  sub_1005D3C94((uint64_t)&v18[*(int *)(v15 + 20)], (uint64_t)v22);
  sub_1005D3CF8((uint64_t)v18, type metadata accessor for CRLWPShapeItemCRDTData);
  (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v14, v22, v10);
  sub_1005D3CF8((uint64_t)v22, type metadata accessor for CRLWPStorageCRDTData);
  uint64_t v32 = CRAttributedString.count.getter();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
  if (v32 >= (v51 & ~(v51 >> 63))) {
    uint64_t v33 = v51 & ~(v51 >> 63);
  }
  else {
    uint64_t v33 = v32;
  }
  if (v32 >= (v52 & ~(v52 >> 63))) {
    uint64_t v34 = v52 & ~(v52 >> 63);
  }
  else {
    uint64_t v34 = v32;
  }
  if (v34 < v33)
  {
    __break(1u);
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  unsigned __int8 v35 = v50;
  if ((_BYTE)v50 == 0xFF)
  {
    sub_100E92ADC(v49, v33, v34, &type metadata for CRLWPFontItalicAttribute, (uint64_t (*)(uint64_t))sub_10083E454, (void (*)(void))sub_100843200);
    return;
  }
  uint64_t v36 = v48;
  sub_100E93D2C(v48, v50 & 1);
  sub_1005D3BF8();
  uint64_t v37 = (uint64_t)v47;
  uint64_t v38 = CRAttributedString.Attributes.init()();
  __chkstk_darwin(v38, v39);
  *(&v44 - 4) = (uint64_t)&type metadata for CRLWPFontItalicAttribute;
  unint64_t v40 = sub_10083E454();
  long long v41 = v49;
  *(&v44 - 3) = v40;
  *(&v44 - 2) = (uint64_t)v41;
  swift_getKeyPath();
  if ((v35 & 1) == 0)
  {
    char v42 = v36 & 1;
    goto LABEL_26;
  }
  if (!*(void *)(v36 + 16)) {
    goto LABEL_29;
  }
  char v42 = *(unsigned char *)(v36 + 32);
LABEL_26:
  char v53 = v42;
  sub_100843200();
  swift_retain();
  uint64_t v43 = v46;
  CRAttributedString.Attributes.subscript.setter();
  sub_10090614C(v37, v33, v34);
  (*(void (**)(uint64_t, uint64_t))(v45 + 8))(v37, v43);
  sub_100E93D38(v36, v35);
}

void sub_100E91518(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v49 = a5;
  uint64_t v50 = a6;
  int v48 = a3;
  uint64_t v46 = a2;
  uint64_t v47 = a1;
  uint64_t v7 = sub_1005057FC((uint64_t *)&unk_1016836C0);
  uint64_t v44 = *(void *)(v7 - 8);
  uint64_t v45 = v7;
  __chkstk_darwin(v7, v8);
  uint64_t v10 = (char *)&v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1005057FC((uint64_t *)&unk_10167BC20);
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11, v13);
  uint64_t v15 = (char *)&v43 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for CRLWPShapeItemCRDTData(0);
  __chkstk_darwin(v16, v17);
  uint64_t v19 = (char *)&v43 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = type metadata accessor for CRLWPStorageCRDTData(0);
  __chkstk_darwin(v20 - 8, v21);
  uint64_t v23 = (char *)&v43 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v51 = a4;
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v25 = (void *)Strong;
    swift_getObjectType();
    uint64_t v26 = swift_conformsToProtocol2();
    if (v26) {
      uint64_t v27 = v26;
    }
    else {
      uint64_t v27 = 0;
    }
    if (v26) {
      uint64_t v28 = v25;
    }
    else {
      uint64_t v28 = 0;
    }
    if (v28)
    {
      uint64_t ObjectType = swift_getObjectType();
      char v30 = sub_100FC1058(ObjectType, v27);

      if ((v30 & 1) == 0) {
        return;
      }
    }
    else
    {
    }
  }
  uint64_t v31 = *(void *)(v51 + OBJC_IVAR____TtC8Freeform12CRLWPStorage_shapeItemData);
  if (!v31)
  {
LABEL_30:
    __break(1u);
    return;
  }
  (*(void (**)(void))(*(void *)v31 + 760))();
  sub_1005D3C94((uint64_t)&v19[*(int *)(v16 + 20)], (uint64_t)v23);
  sub_1005D3CF8((uint64_t)v19, type metadata accessor for CRLWPShapeItemCRDTData);
  (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v15, v23, v11);
  sub_1005D3CF8((uint64_t)v23, type metadata accessor for CRLWPStorageCRDTData);
  uint64_t v32 = CRAttributedString.count.getter();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
  if (v32 >= (v49 & ~(v49 >> 63))) {
    uint64_t v33 = v49 & ~(v49 >> 63);
  }
  else {
    uint64_t v33 = v32;
  }
  if (v32 >= (v50 & ~(v50 >> 63))) {
    uint64_t v34 = v50 & ~(v50 >> 63);
  }
  else {
    uint64_t v34 = v32;
  }
  if (v34 < v33)
  {
    __break(1u);
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  unsigned __int8 v35 = v48;
  if ((_BYTE)v48 == 0xFF)
  {
    sub_100E92DC8(v47, v33, v34, (void (*)(void, void, void))sub_100E90514);
    return;
  }
  uint64_t v36 = v46;
  sub_100E93D2C(v46, v48 & 1);
  sub_1005D3BF8();
  uint64_t v37 = CRAttributedString.Attributes.init()();
  __chkstk_darwin(v37, v38);
  *(&v43 - 4) = (uint64_t)&type metadata for CRLWPFontSizeAttribute;
  unint64_t v39 = sub_10083E4FC();
  uint64_t v40 = v47;
  *(&v43 - 3) = v39;
  *(&v43 - 2) = v40;
  swift_getKeyPath();
  if ((v35 & 1) == 0)
  {
    int v41 = v36;
    goto LABEL_26;
  }
  if (!*(void *)(v36 + 16)) {
    goto LABEL_29;
  }
  int v41 = *(_DWORD *)(v36 + 32);
LABEL_26:
  int v52 = v41;
  char v53 = 0;
  sub_10083E5B0();
  swift_retain();
  uint64_t v42 = v45;
  CRAttributedString.Attributes.subscript.setter();
  sub_10090614C((uint64_t)v10, v33, v34);
  (*(void (**)(char *, uint64_t))(v44 + 8))(v10, v42);
  sub_100E93D38(v36, v35);
}

void sub_100E919A8(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v48 = a5;
  uint64_t v49 = a6;
  int v47 = a3;
  uint64_t v45 = a2;
  uint64_t v46 = a1;
  uint64_t v7 = sub_1005057FC((uint64_t *)&unk_1016836C0);
  uint64_t v43 = *(void *)(v7 - 8);
  uint64_t v44 = v7;
  __chkstk_darwin(v7, v8);
  uint64_t v10 = (char *)&v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1005057FC((uint64_t *)&unk_10167BC20);
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11, v13);
  uint64_t v15 = (char *)&v43 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for CRLWPShapeItemCRDTData(0);
  __chkstk_darwin(v16, v17);
  uint64_t v19 = (char *)&v43 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = type metadata accessor for CRLWPStorageCRDTData(0);
  __chkstk_darwin(v20 - 8, v21);
  uint64_t v23 = (char *)&v43 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = a4;
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v25 = (void *)Strong;
    swift_getObjectType();
    uint64_t v26 = swift_conformsToProtocol2();
    if (v26) {
      uint64_t v27 = v26;
    }
    else {
      uint64_t v27 = 0;
    }
    if (v26) {
      uint64_t v28 = v25;
    }
    else {
      uint64_t v28 = 0;
    }
    if (v28)
    {
      uint64_t ObjectType = swift_getObjectType();
      char v30 = sub_100FC1058(ObjectType, v27);

      if ((v30 & 1) == 0) {
        return;
      }
    }
    else
    {
    }
  }
  uint64_t v31 = *(void *)(v50 + OBJC_IVAR____TtC8Freeform12CRLWPStorage_shapeItemData);
  if (!v31)
  {
LABEL_29:
    __break(1u);
    return;
  }
  (*(void (**)(void))(*(void *)v31 + 760))();
  sub_1005D3C94((uint64_t)&v19[*(int *)(v16 + 20)], (uint64_t)v23);
  sub_1005D3CF8((uint64_t)v19, type metadata accessor for CRLWPShapeItemCRDTData);
  (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v15, v23, v11);
  sub_1005D3CF8((uint64_t)v23, type metadata accessor for CRLWPStorageCRDTData);
  uint64_t v32 = CRAttributedString.count.getter();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
  if (v32 >= (v48 & ~(v48 >> 63))) {
    uint64_t v33 = v48 & ~(v48 >> 63);
  }
  else {
    uint64_t v33 = v32;
  }
  if (v32 >= (v49 & ~(v49 >> 63))) {
    uint64_t v34 = v49 & ~(v49 >> 63);
  }
  else {
    uint64_t v34 = v32;
  }
  if (v34 < v33)
  {
    __break(1u);
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  unsigned __int8 v35 = v47;
  if ((_BYTE)v47 != 0xFF)
  {
    uint64_t v36 = v45;
    sub_100E93D2C(v45, v47 & 1);
    sub_1005D3BF8();
    uint64_t v37 = CRAttributedString.Attributes.init()();
    __chkstk_darwin(v37, v38);
    *(&v43 - 4) = (uint64_t)&type metadata for CRLWPUnderlineAttribute;
    unint64_t v39 = sub_10083E400();
    uint64_t v40 = v46;
    *(&v43 - 3) = v39;
    *(&v43 - 2) = v40;
    swift_getKeyPath();
    uint64_t v41 = v36;
    if ((v35 & 1) == 0)
    {
LABEL_24:
      uint64_t v51 = v41;
      char v52 = 0;
      sub_1008431AC();
      swift_retain();
      uint64_t v42 = v44;
      CRAttributedString.Attributes.subscript.setter();
      sub_10090614C((uint64_t)v10, v33, v34);
      (*(void (**)(char *, uint64_t))(v43 + 8))(v10, v42);
      sub_100E93D38(v36, v35);
      return;
    }
    if (*(void *)(v36 + 16))
    {
      uint64_t v41 = *(void *)(v36 + 32);
      goto LABEL_24;
    }
    goto LABEL_28;
  }
  sub_100E92DC8(v46, v33, v34, (void (*)(void, void, void))sub_100E8FE78);
}

void sub_100E91E34(uint64_t a1, void *a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v51 = a6;
  uint64_t v50 = a5;
  int v49 = a3;
  int v47 = a2;
  uint64_t v48 = a1;
  uint64_t v46 = sub_1005057FC((uint64_t *)&unk_1016836C0);
  uint64_t v45 = *(void *)(v46 - 8);
  __chkstk_darwin(v46, v7);
  uint64_t v9 = (char *)&v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1005057FC((uint64_t *)&unk_10167BC20);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10, v12);
  uint64_t v14 = (char *)&v44 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for CRLWPShapeItemCRDTData(0);
  __chkstk_darwin(v15, v16);
  uint64_t v18 = (char *)&v44 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = type metadata accessor for CRLWPStorageCRDTData(0);
  __chkstk_darwin(v19 - 8, v20);
  uint64_t v22 = (char *)&v44 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v52 = a4;
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v24 = (void *)Strong;
    swift_getObjectType();
    uint64_t v25 = swift_conformsToProtocol2();
    if (v25) {
      uint64_t v26 = v25;
    }
    else {
      uint64_t v26 = 0;
    }
    if (v25) {
      uint64_t v27 = v24;
    }
    else {
      uint64_t v27 = 0;
    }
    if (v27)
    {
      uint64_t ObjectType = swift_getObjectType();
      char v29 = sub_100FC1058(ObjectType, v26);

      if ((v29 & 1) == 0) {
        return;
      }
    }
    else
    {
    }
  }
  uint64_t v30 = *(void *)(v52 + OBJC_IVAR____TtC8Freeform12CRLWPStorage_shapeItemData);
  if (!v30)
  {
LABEL_34:
    __break(1u);
    return;
  }
  (*(void (**)(void))(*(void *)v30 + 760))();
  sub_1005D3C94((uint64_t)&v18[*(int *)(v15 + 20)], (uint64_t)v22);
  sub_1005D3CF8((uint64_t)v18, type metadata accessor for CRLWPShapeItemCRDTData);
  (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v14, v22, v10);
  sub_1005D3CF8((uint64_t)v22, type metadata accessor for CRLWPStorageCRDTData);
  uint64_t v31 = CRAttributedString.count.getter();
  uint64_t v33 = *(void (**)(char *, uint64_t))(v11 + 8);
  unsigned __int8 v32 = v11 + 8;
  v33(v14, v10);
  if (v31 >= (v50 & ~(v50 >> 63))) {
    uint64_t v34 = v50 & ~(v50 >> 63);
  }
  else {
    uint64_t v34 = v31;
  }
  if (v31 >= (v51 & ~(v51 >> 63))) {
    uint64_t v35 = v51 & ~(v51 >> 63);
  }
  else {
    uint64_t v35 = v31;
  }
  if (v35 < v34)
  {
    __break(1u);
    goto LABEL_32;
  }
  unsigned __int8 v32 = v49;
  if ((_BYTE)v49 == 0xFF)
  {
    sub_100E92DC8(v48, v34, v35, sub_100E9085C);
    return;
  }
  uint64_t v15 = (uint64_t)v47;
  sub_100E939BC(v47, v49 & 1);
  sub_1005D3BF8();
  uint64_t v36 = CRAttributedString.Attributes.init()();
  __chkstk_darwin(v36, v37);
  *(&v44 - 4) = (uint64_t)&type metadata for CRLWPCharacterFillAttribute;
  unint64_t v38 = sub_10083E34C();
  uint64_t v39 = v48;
  *(&v44 - 3) = v38;
  *(&v44 - 2) = v39;
  swift_getKeyPath();
  if ((v32 & 1) == 0)
  {
    sub_100E939A4((id)v15, v32);
    swift_retain();
    id v41 = (id)v15;
    goto LABEL_27;
  }
  if ((v15 & 0xC000000000000001) != 0)
  {
LABEL_32:
    sub_100E939A4((id)v15, v32);
    swift_retain();
    id v41 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    sub_100E93A18((void *)v15, v32);
    goto LABEL_27;
  }
  if (!*(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    __break(1u);
    goto LABEL_34;
  }
  uint64_t v40 = *(void **)(v15 + 32);
  swift_retain();
  id v41 = v40;
LABEL_27:
  sub_100F91F6C(v41, (uint64_t)&v62);
  uint64_t v42 = &_mh_execute_header;
  if (!v65) {
    uint64_t v42 = 0;
  }
  uint64_t v53 = v62;
  uint64_t v54 = v63;
  unint64_t v55 = (unint64_t)v42 | v64;
  long long v56 = v66;
  long long v57 = v67;
  long long v58 = v68;
  long long v59 = v69;
  uint64_t v60 = v70;
  long long v61 = v71;
  sub_100913244();
  uint64_t v43 = v46;
  CRAttributedString.Attributes.subscript.setter();
  sub_10090614C((uint64_t)v9, v34, v35);
  (*(void (**)(char *, uint64_t))(v45 + 8))(v9, v43);
  sub_100E93A18((void *)v15, v32);
}

void sub_100E923E8(uint64_t a1, void *a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v74 = a6;
  int v73 = a3;
  uint64_t v70 = a2;
  uint64_t v72 = a1;
  uint64_t v8 = sub_1005057FC(&qword_101672E90);
  __chkstk_darwin(v8 - 8, v9);
  uint64_t v71 = (uint64_t)&v67 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1005057FC((uint64_t *)&unk_10167BE90);
  __chkstk_darwin(v11 - 8, v12);
  uint64_t v14 = (char *)&v67 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1005057FC((uint64_t *)&unk_1016836C0);
  uint64_t v68 = *(void *)(v15 - 8);
  uint64_t v69 = v15;
  __chkstk_darwin(v15, v16);
  uint64_t v75 = (char *)&v67 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_1005057FC((uint64_t *)&unk_10167BC20);
  uint64_t v19 = *(void *)(v18 - 8);
  __chkstk_darwin(v18, v20);
  uint64_t v22 = (char *)&v67 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = type metadata accessor for CRLWPShapeItemCRDTData(0);
  __chkstk_darwin(v23, v24);
  uint64_t v26 = (char *)&v67 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = type metadata accessor for CRLWPStorageCRDTData(0);
  __chkstk_darwin(v27 - 8, v28);
  uint64_t v30 = (char *)&v67 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v76 = a4;
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    unsigned __int8 v32 = (void *)Strong;
    long long v67 = v14;
    uint64_t v33 = a5;
    swift_getObjectType();
    uint64_t v34 = swift_conformsToProtocol2();
    if (v34) {
      uint64_t v35 = v34;
    }
    else {
      uint64_t v35 = 0;
    }
    if (v34) {
      uint64_t v36 = v32;
    }
    else {
      uint64_t v36 = 0;
    }
    if (v36)
    {
      uint64_t ObjectType = swift_getObjectType();
      char v38 = sub_100FC1058(ObjectType, v35);

      a5 = v33;
      uint64_t v14 = v67;
      if ((v38 & 1) == 0) {
        return;
      }
    }
    else
    {

      a5 = v33;
      uint64_t v14 = v67;
    }
  }
  uint64_t v39 = *(void *)(v76 + OBJC_IVAR____TtC8Freeform12CRLWPStorage_shapeItemData);
  if (!v39) {
    goto LABEL_36;
  }
  (*(void (**)(void))(*(void *)v39 + 760))();
  sub_1005D3C94((uint64_t)&v26[*(int *)(v23 + 20)], (uint64_t)v30);
  sub_1005D3CF8((uint64_t)v26, type metadata accessor for CRLWPShapeItemCRDTData);
  (*(void (**)(char *, char *, uint64_t))(v19 + 16))(v22, v30, v18);
  sub_1005D3CF8((uint64_t)v30, type metadata accessor for CRLWPStorageCRDTData);
  uint64_t v40 = CRAttributedString.count.getter();
  (*(void (**)(char *, uint64_t))(v19 + 8))(v22, v18);
  if (v40 >= (a5 & ~(a5 >> 63))) {
    uint64_t v41 = a5 & ~(a5 >> 63);
  }
  else {
    uint64_t v41 = v40;
  }
  if (v40 >= (v74 & ~(v74 >> 63))) {
    uint64_t v42 = v74 & ~(v74 >> 63);
  }
  else {
    uint64_t v42 = v40;
  }
  if (v42 < v41)
  {
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
  unsigned __int8 v43 = v73;
  if ((_BYTE)v73 == 0xFF)
  {
    sub_100E92DC8(v72, v41, v42, (void (*)(void, void, void))sub_100E8FAAC);
    return;
  }
  uint64_t v44 = v70;
  sub_100E939BC(v70, v73 & 1);
  sub_1005D3BF8();
  uint64_t v45 = CRAttributedString.Attributes.init()();
  __chkstk_darwin(v45, v46);
  *(&v67 - 4) = (char *)&type metadata for CRLWPHyperlinkAttribute;
  unint64_t v47 = sub_10091989C();
  uint64_t v48 = v72;
  *(&v67 - 3) = (char *)v47;
  *(&v67 - 2) = (char *)v48;
  swift_getKeyPath();
  if ((v43 & 1) == 0)
  {
    sub_100E939BC(v44, 0);
    int v49 = v44;
    if (!v44) {
      goto LABEL_24;
    }
    goto LABEL_27;
  }
  if (!v44[2]) {
    goto LABEL_35;
  }
  int v49 = (void *)v44[4];
  id v50 = v49;
  if (v49)
  {
LABEL_27:
    swift_retain();
    id v52 = v49;
    id v53 = [v52 url];
    if (v53)
    {
      uint64_t v54 = v53;
      uint64_t v55 = v71;
      static URL._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v56 = type metadata accessor for URL();
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v56 - 8) + 56))(v55, 0, 1, v56);
    }
    else
    {
      uint64_t v57 = type metadata accessor for URL();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v57 - 8) + 56))(v71, 1, 1, v57);
    }
    id v58 = [v52 textAttributeUUIDString];
    if (v58)
    {
      long long v59 = v58;
      uint64_t v60 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v62 = v61;

      *(void *)uint64_t v14 = 0;
      v14[8] = 0;
      unsigned __int8 v63 = (int *)type metadata accessor for CRLWPHyperlinkSmartFieldData(0);
      sub_100602000(v71, (uint64_t)&v14[v63[5]]);
      unsigned int v64 = (uint64_t *)&v14[v63[6]];
      *unsigned int v64 = v60;
      v64[1] = v62;
      *(void *)&v14[v63[7]] = _swiftEmptyDictionarySingleton;
      (*(void (**)(char *, void, uint64_t, int *))(*((void *)v63 - 1) + 56))(v14, 0, 1, v63);

      goto LABEL_32;
    }
LABEL_37:
    __break(1u);
    return;
  }
LABEL_24:
  uint64_t v51 = type metadata accessor for CRLWPHyperlinkSmartFieldData(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v51 - 8) + 56))(v14, 1, 1, v51);
  swift_retain();
LABEL_32:
  sub_100913630();
  uint64_t v65 = v69;
  uint64_t v66 = (uint64_t)v75;
  CRAttributedString.Attributes.subscript.setter();
  sub_10090614C(v66, v41, v42);
  (*(void (**)(uint64_t, uint64_t))(v68 + 8))(v66, v65);
  sub_100E93A18(v44, v43);
}

void sub_100E92ADC(void (**a1)(uint64_t, void, uint64_t, uint64_t), uint64_t a2, uint64_t a3, void (**a4)(uint64_t, void, uint64_t, uint64_t), uint64_t (*a5)(uint64_t), void (*a6)(void))
{
  char v38 = a1;
  uint64_t v39 = a4;
  uint64_t v9 = v6;
  uint64_t v12 = type metadata accessor for CRLWPShapeItemCRDTData(0);
  __chkstk_darwin(v12, v13);
  uint64_t v15 = (char *)&v36 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for CRLWPStorageCRDTData(0);
  __chkstk_darwin(v16 - 8, v17);
  uint64_t v19 = (char *)&v36 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v21 = (void *)Strong;
    uint64_t v37 = v6;
    uint64_t v22 = a2;
    uint64_t v23 = a3;
    uint64_t v24 = a5;
    uint64_t v25 = a6;
    swift_getObjectType();
    uint64_t v26 = swift_conformsToProtocol2();
    if (v26) {
      uint64_t v27 = v26;
    }
    else {
      uint64_t v27 = 0;
    }
    if (v26) {
      uint64_t v28 = v21;
    }
    else {
      uint64_t v28 = 0;
    }
    if (v28)
    {
      uint64_t ObjectType = swift_getObjectType();
      char v30 = sub_100FC1058(ObjectType, v27);

      a6 = v25;
      a5 = v24;
      a3 = v23;
      a2 = v22;
      uint64_t v9 = v37;
      if ((v30 & 1) == 0) {
        return;
      }
    }
    else
    {

      a6 = v25;
      a5 = v24;
      a3 = v23;
      a2 = v22;
      uint64_t v9 = v37;
    }
  }
  uint64_t v31 = *(void *)(v9 + OBJC_IVAR____TtC8Freeform12CRLWPStorage_shapeItemData);
  if (!v31)
  {
LABEL_17:
    __break(1u);
    return;
  }
  BOOL v32 = __OFSUB__(a3, a2);
  uint64_t v33 = a3 - a2;
  if (v32)
  {
    __break(1u);
    goto LABEL_17;
  }
  (*(void (**)(void))(*(void *)v31 + 760))();
  sub_1005D3C94((uint64_t)&v15[*(int *)(v12 + 20)], (uint64_t)v19);
  swift_retain();
  sub_1005D3CF8((uint64_t)v15, type metadata accessor for CRLWPShapeItemCRDTData);
  sub_100E901C0(v38, a2, v33, v39, a5, a6);
  uint64_t v34 = (void (*)(unsigned char *, void))(*(uint64_t (**)(unsigned char *))(*(void *)v31 + 776))(v40);
  sub_10091A240((uint64_t)v19, v35 + *(int *)(v12 + 20));
  v34(v40, 0);
  sub_1005D3CF8((uint64_t)v19, type metadata accessor for CRLWPStorageCRDTData);
  swift_release();
  *(unsigned char *)(v9 + OBJC_IVAR____TtC8Freeform12CRLWPStorage__hasValidPresentationProperties) = 0;
}

void sub_100E92DB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

void sub_100E92DC8(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void, void, void))
{
  uint64_t v6 = v4;
  uint64_t v10 = type metadata accessor for CRLWPShapeItemCRDTData(0);
  __chkstk_darwin(v10, v11);
  uint64_t v13 = (char *)&v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for CRLWPStorageCRDTData(0);
  __chkstk_darwin(v14 - 8, v15);
  uint64_t v17 = (char *)&v34 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v19 = (void *)Strong;
    uint64_t v35 = v4;
    uint64_t v20 = a2;
    uint64_t v21 = a3;
    uint64_t v22 = a1;
    uint64_t v23 = a4;
    swift_getObjectType();
    uint64_t v24 = swift_conformsToProtocol2();
    if (v24) {
      uint64_t v25 = v24;
    }
    else {
      uint64_t v25 = 0;
    }
    if (v24) {
      uint64_t v26 = v19;
    }
    else {
      uint64_t v26 = 0;
    }
    if (v26)
    {
      uint64_t ObjectType = swift_getObjectType();
      char v28 = sub_100FC1058(ObjectType, v25);

      a4 = v23;
      a1 = v22;
      a3 = v21;
      a2 = v20;
      uint64_t v6 = v35;
      if ((v28 & 1) == 0) {
        return;
      }
    }
    else
    {

      a4 = v23;
      a1 = v22;
      a3 = v21;
      a2 = v20;
      uint64_t v6 = v35;
    }
  }
  uint64_t v29 = *(void *)(v6 + OBJC_IVAR____TtC8Freeform12CRLWPStorage_shapeItemData);
  if (!v29)
  {
LABEL_17:
    __break(1u);
    return;
  }
  BOOL v30 = __OFSUB__(a3, a2);
  uint64_t v31 = a3 - a2;
  if (v30)
  {
    __break(1u);
    goto LABEL_17;
  }
  (*(void (**)(void))(*(void *)v29 + 760))();
  sub_1005D3C94((uint64_t)&v13[*(int *)(v10 + 20)], (uint64_t)v17);
  swift_retain();
  sub_1005D3CF8((uint64_t)v13, type metadata accessor for CRLWPShapeItemCRDTData);
  a4(a1, a2, v31);
  BOOL v32 = (void (*)(unsigned char *, void))(*(uint64_t (**)(unsigned char *))(*(void *)v29 + 776))(v36);
  sub_10091A240((uint64_t)v17, v33 + *(int *)(v10 + 20));
  v32(v36, 0);
  sub_1005D3CF8((uint64_t)v17, type metadata accessor for CRLWPStorageCRDTData);
  swift_release();
  *(unsigned char *)(v6 + OBJC_IVAR____TtC8Freeform12CRLWPStorage__hasValidPresentationProperties) = 0;
}

void sub_100E93094(void *a1, uint64_t a2, int a3)
{
  uint64_t v5 = v3;
  int v52 = a3;
  uint64_t v8 = type metadata accessor for UUID();
  uint64_t v51 = *(void *)(v8 - 8);
  __chkstk_darwin(v8, v9);
  uint64_t v11 = (char *)&v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1005057FC(&qword_101672E90);
  __chkstk_darwin(v12 - 8, v13);
  uint64_t v15 = (char *)&v45 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  Class isa = UUID._bridgeToObjectiveC()().super.isa;
  id v17 = [a1 getBoardItemForUUID:isa];

  if (!v17) {
    goto LABEL_17;
  }
  type metadata accessor for CRLWPShapeItem();
  uint64_t v18 = swift_dynamicCastClass();
  if (!v18)
  {
LABEL_16:

LABEL_17:
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"commit(with:transaction:undoable:)", 34, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/Commands/CRLWPInsertHyperlinkCommand.swift", 102, 2, 25, (uint64_t)"Unable to retrieve board item", 29, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_100586FD4((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Unable to retrieve board item");
    sub_1005871AC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"commit(with:transaction:undoable:)", 34, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/Commands/CRLWPInsertHyperlinkCommand.swift", 102, 2, 25);
    SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v43, v44);
    _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
    return;
  }
  uint64_t v19 = v18;
  uint64_t v60 = a2;
  uint64_t v20 = *(void **)(v18 + OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage);
  if (!v20)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  uint64_t v22 = *(void *)(v5 + OBJC_IVAR____TtC8Freeform27CRLWPInsertHyperlinkCommand_range);
  uint64_t v21 = *(void *)(v5 + OBJC_IVAR____TtC8Freeform27CRLWPInsertHyperlinkCommand_range + 8);
  if (__OFSUB__(v21, v22))
  {
    __break(1u);
    goto LABEL_15;
  }
  if (v21 - v22 < 1)
  {
  }
  else
  {
    uint64_t v48 = v21 - v22;
    uint64_t v49 = v21;
    uint64_t v50 = v22;
    id v23 = v20;
    id v24 = v17;
    sub_10103405C(v19, (uint64_t)&off_101518040);
    if (v4)
    {
    }
    else
    {
      id v46 = v23;
      uint64_t v47 = 0;

      sub_1005F7C80(v5 + OBJC_IVAR____TtC8Freeform27CRLWPInsertHyperlinkCommand_url, (uint64_t)v15);
      UUID.init()();
      uint64_t v45 = UUID.uuidString.getter();
      (*(void (**)(char *, uint64_t))(v51 + 8))(v11, v8);
      uint64_t v25 = type metadata accessor for URL();
      uint64_t v26 = *(void *)(v25 - 8);
      char v28 = 0;
      uint64_t v29 = v24;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v15, 1, v25) != 1)
      {
        URL._bridgeToObjectiveC()(v27);
        char v28 = v30;
        (*(void (**)(char *, uint64_t))(v26 + 8))(v15, v25);
      }
      id v31 = objc_allocWithZone((Class)CRLWPHyperlinkField);
      NSString v32 = String._bridgeToObjectiveC()();
      NSString v33 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      uint64_t v34 = v31;
      uint64_t v35 = v50;
      id v36 = [v34 initWithURL:v28 range:v50 displayText:v48 uuidString:v32];

      uint64_t KeyPath = swift_getKeyPath();
      id v38 = v36;
      uint64_t v39 = v46;
      sub_10090059C(v35, v49, &v55);
      uint64_t v40 = v55;
      long long v58 = v56;
      uint64_t v59 = v57;
      long long v53 = v56;
      uint64_t v54 = v57;
      sub_100E93DA4((uint64_t)v36, 0, KeyPath, (void (*)(uint64_t, uint64_t))sub_100E939BC, (void (*)(uint64_t, uint64_t))sub_100E939A4, (void (*)(uint64_t, void))sub_10083E3A0, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_100E923E8);

      swift_release();
      sub_1006436E8((id *)&v58);
      id v41 = v29;
      uint64_t v42 = v47;
      sub_101023724(v19, (uint64_t)&off_101518040, v52);
      if (v42)
      {
      }
      else
      {
      }
    }
  }
}

uint64_t sub_100E9361C()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC8Freeform27CRLWPInsertHyperlinkCommand_boardItemID;
  uint64_t v2 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  return sub_100522F00(v0 + OBJC_IVAR____TtC8Freeform27CRLWPInsertHyperlinkCommand_url, &qword_101672E90);
}

id sub_100E93694()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLWPInsertHyperlinkCommand();
  return [super dealloc];
}

uint64_t sub_100E93748()
{
  return type metadata accessor for CRLWPInsertHyperlinkCommand();
}

uint64_t type metadata accessor for CRLWPInsertHyperlinkCommand()
{
  uint64_t result = qword_1016A0240;
  if (!qword_1016A0240) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_100E9379C()
{
  type metadata accessor for UUID();
  if (v0 <= 0x3F)
  {
    sub_100757DF8();
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

uint64_t sub_100E93870()
{
  id v0 = [self mainBundle];
  NSString v1 = String._bridgeToObjectiveC()();
  NSString v2 = String._bridgeToObjectiveC()();
  id v3 = [v0 localizedStringForKey:v1 value:v2 table:0];

  uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  return v4;
}

void sub_100E93950(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

id sub_100E939A4(id result, unsigned __int8 a2)
{
  if (a2 != 255) {
    return sub_100E939BC(result, a2 & 1);
  }
  return result;
}

id sub_100E939BC(void *a1, char a2)
{
  if (a2) {
    return (id)swift_bridgeObjectRetain();
  }
  else {
    return a1;
  }
}

uint64_t sub_100E939D0()
{
  return 24;
}

uint64_t sub_100E939DC()
{
  return swift_release();
}

uint64_t sub_100E939E4(uint64_t a1, uint64_t a2)
{
  *(void *)a2 = *(void *)a1;
  *(_OWORD *)(a2 + 8) = *(_OWORD *)(a1 + 8);
  return swift_retain();
}

__n128 sub_100E93A04(__n128 *a1, uint64_t a2)
{
  *(void *)a2 = a1[1].n128_u64[0];
  __n128 result = *a1;
  *(__n128 *)(a2 + 8) = *a1;
  return result;
}

void sub_100E93A18(void *a1, unsigned __int8 a2)
{
  if (a2 != 255) {
    sub_10083E3A0(a1, a2 & 1);
  }
}

uint64_t sub_100E93A30()
{
  return sub_1008F1B54();
}

uint64_t sub_100E93A38(uint64_t a1)
{
  swift_retain();
  sub_100918BCC(a1);

  return swift_release();
}

uint64_t sub_100E93A90()
{
  return 24;
}

void sub_100E93AA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

void sub_100E93AD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

void sub_100E93AFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

void sub_100E93B28(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

void sub_100E93B54(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t), void (*a5)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v7 = v5;
  uint64_t v11 = *v5;
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v13 = (void *)Strong;
    swift_getObjectType();
    uint64_t v14 = swift_conformsToProtocol2();
    if (v14) {
      uint64_t v15 = v14;
    }
    else {
      uint64_t v15 = 0;
    }
    if (v14) {
      uint64_t v16 = v13;
    }
    else {
      uint64_t v16 = 0;
    }
    if (v16)
    {
      uint64_t ObjectType = swift_getObjectType();
      char v18 = sub_100FC1058(ObjectType, v15);

      if ((v18 & 1) == 0) {
        return;
      }
    }
    else
    {
    }
  }
  if ((_BYTE)a2 != 0xFF)
  {
    if (a2)
    {
      a4(a1, 1);
      swift_bridgeObjectRelease();
      sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"subscript(dynamicMember:)", 25, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/CRLWPStorage.swift", 78, 2, 975, (uint64_t)"Should not set mixed value attributes.", 38, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"subscript(dynamicMember:)", 25, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/CRLWPStorage.swift", 78, 2, 975);
    }
    else
    {
      a4(a1, 0);
    }
  }
  uint64_t v19 = v7[1];
  uint64_t v20 = v7[2];

  a5(a3, a1, a2, v11, v19, v20);
}

uint64_t sub_100E93D2C(uint64_t a1, char a2)
{
  if (a2) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_100E93D38(uint64_t result, unsigned __int8 a2)
{
  if (a2 != 255) {
    return sub_1006F23FC(result, a2 & 1);
  }
  return result;
}

void sub_100E93D50(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

void sub_100E93DA4(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t), void (*a5)(uint64_t, uint64_t), void (*a6)(uint64_t, void), void (*a7)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v10 = v7;
  uint64_t v14 = *v7;
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v16 = (void *)Strong;
    uint64_t v17 = a3;
    swift_getObjectType();
    uint64_t v18 = swift_conformsToProtocol2();
    if (v18) {
      uint64_t v19 = v18;
    }
    else {
      uint64_t v19 = 0;
    }
    if (v18) {
      uint64_t v20 = v16;
    }
    else {
      uint64_t v20 = 0;
    }
    if (v20)
    {
      uint64_t ObjectType = swift_getObjectType();
      char v22 = sub_100FC1058(ObjectType, v19);

      a3 = v17;
      if ((v22 & 1) == 0) {
        return;
      }
    }
    else
    {

      a3 = v17;
    }
  }
  if ((_BYTE)a2 != 0xFF)
  {
    if (a2)
    {
      a4(a1, 1);
      swift_bridgeObjectRelease();
      sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"subscript(dynamicMember:)", 25, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/CRLWPStorage.swift", 78, 2, 975, (uint64_t)"Should not set mixed value attributes.", 38, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"subscript(dynamicMember:)", 25, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/CRLWPStorage.swift", 78, 2, 975);
    }
    else
    {
      a5(a1, a2);
      a6(a1, 0);
    }
  }
  uint64_t v23 = v10[1];
  uint64_t v24 = v10[2];

  a7(a3, a1, a2, v14, v23, v24);
}

uint64_t sub_100E93FB4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Participant();
  uint64_t v142 = *(void (***)(char *, uint64_t, uint64_t))(v2 - 8);
  uint64_t v143 = v2;
  __chkstk_darwin(v2, v3);
  uint64_t v5 = (char *)&v133 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6, v8);
  uint64_t v10 = (char *)&v133 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11, v12);
  uint64_t v140 = (char *)&v133 - v13;
  __chkstk_darwin(v14, v15);
  uint64_t v17 = (void (**)(char *, uint64_t, uint64_t))((char *)&v133 - v16);
  uint64_t v18 = sub_1005057FC((uint64_t *)&unk_101674520);
  __chkstk_darwin(v18 - 8, v19);
  uint64_t v141 = (char *)&v133 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = self;
  uint64_t v22 = a1;
  Participant.handle.getter();
  NSString v23 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  uint64_t v24 = (double *)[v21 normalizedHandleWithDestinationID:v23];

  uint64_t v145 = (void *)v6;
  if (!v24)
  {
    uint64_t v140 = v5;
    uint64_t v141 = v10;
    id v36 = v144;
    uint64_t v37 = (char *)(v144 + 4);
    swift_beginAccess();
    uint64_t v38 = v36[4];
    swift_bridgeObjectRetain();
    Participant.id.getter();
    LOBYTE(v36) = sub_1006E3E24((uint64_t)v17, v38);
    swift_bridgeObjectRelease();
    uint64_t v39 = *(void (**)(void (**)(char *, uint64_t, uint64_t), uint64_t))(v7 + 8);
    v144 = (void *)(v7 + 8);
    v39(v17, v6);
    if ((v36 & 1) == 0)
    {
      unint64_t v138 = (unint64_t)v37;
      uint64_t v139 = (void (*)(void (**)(char *, uint64_t, uint64_t), void *))v39;
      if (qword_10166FBA0 != -1) {
        swift_once();
      }
      swift_beginAccess();
      uint64_t v40 = (void *)static OS_os_log.realTimeSync;
      sub_1005057FC((uint64_t *)&unk_101672B40);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_10117D8C0;
      id v42 = v40;
      uint64_t v43 = Participant.handle.getter();
      uint64_t v45 = v44;
      *(void *)(inited + 56) = &type metadata for String;
      unint64_t v46 = sub_100528BE4();
      *(void *)(inited + 64) = v46;
      *(void *)(inited + 32) = v43;
      *(void *)(inited + 40) = v45;
      v142[2](v140, v22, v143);
      uint64_t v47 = String.init<A>(reflecting:)();
      *(void *)(inited + 96) = &type metadata for String;
      *(void *)(inited + 104) = v46;
      *(void *)(inited + 72) = v47;
      *(void *)(inited + 80) = v48;
      uint64_t v49 = static os_log_type_t.error.getter();
      sub_100BAC898((uint64_t)v42, (uint64_t)&_mh_execute_header, v49, (uint64_t)"Dropping changes from participant because we cannot generate TUHandle from Participant's handle: %@, participant: %@", 116, 2, inited);
      swift_setDeallocating();
      sub_1005057FC(&qword_101672B50);
      swift_arrayDestroy();

      uint64_t v50 = v141;
      Participant.id.getter();
      swift_beginAccess();
      sub_100CB4BC8((uint64_t)v17, v50);
      v139(v17, v145);
      swift_endAccess();
    }
    return 0;
  }
  uint64_t v142 = v17;
  uint64_t v143 = a1;
  uint64_t v25 = v144;
  uint64_t v26 = (void *)v144[2];
  if (!v26)
  {
    uint64_t v51 = v145;
    if (qword_10166FBA0 != -1) {
      swift_once();
    }
    swift_beginAccess();
    int v52 = (void *)static OS_os_log.realTimeSync;
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t v53 = swift_initStackObject();
    *(_OWORD *)(v53 + 16) = xmmword_10117E810;
    id v54 = v52;
    uint64_t v55 = (char *)v142;
    Participant.id.getter();
    uint64_t v56 = UUID.uuidString.getter();
    uint64_t v58 = v57;
    (*(void (**)(char *, void *))(v7 + 8))(v55, v51);
    *(void *)(v53 + 56) = &type metadata for String;
    *(void *)(v53 + 64) = sub_100528BE4();
    *(void *)(v53 + 32) = v56;
    *(void *)(v53 + 40) = v58;
    uint64_t v59 = static os_log_type_t.default.getter();
    sub_100BAC898((uint64_t)v54, (uint64_t)&_mh_execute_header, v59, (uint64_t)"RealTimeBoardChangeCoordinator has no CKShare to look up participant write permission. Participant UUID: %{public}@", 115, 2, v53);

    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();

    return 0;
  }
  swift_beginAccess();
  uint64_t v27 = v25[3];
  uint64_t v28 = *(void *)(v27 + 16);
  id v29 = v26;
  BOOL v30 = (void (*)(void (**)(char *, uint64_t, uint64_t), void *))v145;
  if (v28)
  {
    id v31 = v29;
    NSString v32 = v24;
    swift_bridgeObjectRetain();
    unint64_t v33 = sub_100956928((uint64_t)v32);
    if (v34)
    {
      uint64_t v35 = *(unsigned __int8 *)(*(void *)(v27 + 56) + v33);

      swift_bridgeObjectRelease();
      return v35;
    }

    swift_bridgeObjectRelease();
    id v29 = v31;
  }
  uint64_t v139 = (void (*)(void (**)(char *, uint64_t, uint64_t), void *))v29;
  uint64_t v137 = v25 + 3;
  uint64_t v60 = (char **)v142;
  Participant.id.getter();
  swift_beginAccess();
  uint64_t v61 = v141;
  sub_100D16510((uint64_t)v60, (uint64_t)v141);
  uint64_t v62 = *(void *)(v7 + 8);
  ((void (*)(char **, void))v62)(v60, v30);
  sub_100522F00((uint64_t)v61, (uint64_t *)&unk_101674520);
  swift_endAccess();
  if (qword_10166FBA0 != -1) {
    goto LABEL_28;
  }
  while (1)
  {
    swift_beginAccess();
    unsigned __int8 v63 = (void *)static OS_os_log.realTimeSync;
    v144 = (void *)sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t v64 = swift_initStackObject();
    long long v135 = xmmword_10117E810;
    *(_OWORD *)(v64 + 16) = xmmword_10117E810;
    id v65 = v63;
    Participant.id.getter();
    uint64_t v66 = UUID.uuidString.getter();
    uint64_t v68 = v67;
    uint64_t v141 = (char *)v62;
    ((void (*)(char **, void))v62)(v60, v30);
    *(void *)(v64 + 56) = &type metadata for String;
    unint64_t v138 = sub_100528BE4();
    *(void *)(v64 + 64) = v138;
    *(void *)(v64 + 32) = v66;
    *(void *)(v64 + 40) = v68;
    uint64_t v69 = static os_log_type_t.default.getter();
    sub_100BAC898((uint64_t)v65, (uint64_t)&_mh_execute_header, v69, (uint64_t)"Observed valid TUHandle from participant with UUID: %{public}@", 62, 2, v64);
    swift_setDeallocating();
    uint64_t v70 = sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();

    BOOL v30 = v139;
    id v71 = [v139 participants];
    sub_10050BF48(0, (unint64_t *)&qword_101693410);
    unint64_t v72 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    int v73 = v24;
    uint64_t v24 = sub_10070C6F4(v72, v73);
    swift_bridgeObjectRelease();

    uint64_t v136 = v70;
    if ((unint64_t)v24 >> 62) {
      break;
    }
    uint64_t v74 = *(void *)(((unint64_t)v24 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v74) {
      goto LABEL_32;
    }
    uint64_t v140 = (char *)v73;
    swift_bridgeObjectRetain();
LABEL_18:
    uint64_t v62 = 4;
    uint64_t v60 = &selRef_alignCenter_;
    while (1)
    {
      id v75 = ((unint64_t)v24 & 0xC000000000000001) != 0
          ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)()
          : *(id *)&v24[v62];
      uint64_t v76 = v75;
      uint64_t v77 = v62 - 3;
      if (__OFADD__(v62 - 4, 1)) {
        break;
      }
      if ([v75 permission] != (id)3)
      {
        swift_bridgeObjectRelease();
        uint64_t v92 = (void *)static OS_os_log.realTimeSync;
        uint64_t v93 = swift_initStackObject();
        *(_OWORD *)(v93 + 16) = xmmword_10117D8C0;
        id v134 = v92;
        uint64_t v94 = v142;
        Participant.id.getter();
        uint64_t v95 = UUID.uuidString.getter();
        uint64_t v97 = v96;
        ((void (*)(void (**)(char *, uint64_t, uint64_t), void *))v141)(v94, v145);
        unint64_t v98 = v138;
        *(void *)(v93 + 56) = &type metadata for String;
        *(void *)(v93 + 64) = v98;
        *(void *)(v93 + 32) = v95;
        *(void *)(v93 + 40) = v97;
        uint64_t v99 = Participant.handle.getter();
        *(void *)(v93 + 96) = &type metadata for String;
        *(void *)(v93 + 104) = v98;
        *(void *)(v93 + 72) = v99;
        *(void *)(v93 + 80) = v100;
        uint64_t v101 = static os_log_type_t.default.getter();
        id v102 = v134;
        sub_100BAC898((uint64_t)v134, (uint64_t)&_mh_execute_header, v101, (uint64_t)"Participant with UUID: %{public}@ and handle: %@ does not have write permission in the CKShare. Not allowing changes from this participant in real-time sync.", 157, 2, v93);
        swift_setDeallocating();
        swift_arrayDestroy();

        v103 = v137;
        swift_beginAccess();
        unint64_t v104 = v140;
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v146 = *v103;
        uint64_t *v103 = 0x8000000000000000;
        sub_100973E50(0, v104, isUniquelyReferenced_nonNull_native);
        uint64_t *v103 = v146;

        swift_bridgeObjectRelease();
        swift_endAccess();
        swift_bridgeObjectRelease();
        uint64_t v106 = (void *)static OS_os_log.realTimeSync;
        uint64_t v107 = swift_initStackObject();
        *(_OWORD *)(v107 + 16) = v135;
        *(void *)(v107 + 56) = sub_10050BF48(0, &qword_10167C510);
        *(void *)(v107 + 64) = sub_10070BBCC();
        *(void *)(v107 + 32) = v104;
        uint64_t v108 = v104;
        id v109 = v106;
        uint64_t v110 = static os_log_type_t.default.getter();
        sub_100BAC898((uint64_t)v109, (uint64_t)&_mh_execute_header, v110, (uint64_t)"GroupActivity Participant %@ more than one CKShare Participant and one of them does not have write access, so block all.", 120, 2, v107);

        swift_setDeallocating();
        swift_arrayDestroy();

        return 0;
      }

      ++v62;
      if (v77 == v74) {
        goto LABEL_25;
      }
    }
    __break(1u);
LABEL_28:
    swift_once();
  }
  swift_bridgeObjectRetain();
  uint64_t v111 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (v111 > 0)
  {
    uint64_t v140 = (char *)v73;
    swift_bridgeObjectRetain();
    uint64_t v74 = _CocoaArrayWrapper.endIndex.getter();
    if (!v74)
    {
LABEL_25:
      swift_bridgeObjectRelease_n();
      CGRect v78 = (void *)static OS_os_log.realTimeSync;
      uint64_t v79 = swift_initStackObject();
      *(_OWORD *)(v79 + 16) = xmmword_10117D8C0;
      id v80 = v78;
      uint64_t v81 = v142;
      Participant.id.getter();
      uint64_t v82 = UUID.uuidString.getter();
      uint64_t v84 = v83;
      ((void (*)(void (**)(char *, uint64_t, uint64_t), void *))v141)(v81, v145);
      unint64_t v85 = v138;
      *(void *)(v79 + 56) = &type metadata for String;
      *(void *)(v79 + 64) = v85;
      *(void *)(v79 + 32) = v82;
      *(void *)(v79 + 40) = v84;
      uint64_t v86 = Participant.handle.getter();
      *(void *)(v79 + 96) = &type metadata for String;
      *(void *)(v79 + 104) = v85;
      *(void *)(v79 + 72) = v86;
      *(void *)(v79 + 80) = v87;
      uint64_t v88 = static os_log_type_t.default.getter();
      sub_100BAC898((uint64_t)v80, (uint64_t)&_mh_execute_header, v88, (uint64_t)"Participant with UUID: %{public}@ and handle: %@ has write permission in the CKShare. Allowing changes from this participant in real-time sync.", 143, 2, v79);
      swift_setDeallocating();
      swift_arrayDestroy();

      uint64_t v89 = v137;
      swift_beginAccess();
      uint64_t v90 = v140;
      char v91 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v146 = *v89;
      *uint64_t v89 = 0x8000000000000000;
      uint64_t v35 = 1;
      sub_100973E50(1, v90, v91);
      *uint64_t v89 = v146;

      swift_bridgeObjectRelease();
      swift_endAccess();

      return v35;
    }
    goto LABEL_18;
  }
LABEL_32:
  swift_bridgeObjectRelease();
  uint64_t v112 = (void *)static OS_os_log.realTimeSync;
  uint64_t v113 = swift_initStackObject();
  *(_OWORD *)(v113 + 16) = xmmword_10117DF40;
  v144 = v112;
  uint64_t v114 = v140;
  Participant.id.getter();
  uint64_t v115 = UUID.uuidString.getter();
  uint64_t v117 = v116;
  ((void (*)(char *, void *))v141)(v114, v145);
  *(void *)(v113 + 32) = v115;
  unint64_t v118 = v138;
  *(void *)(v113 + 56) = &type metadata for String;
  *(void *)(v113 + 64) = v118;
  *(void *)(v113 + 40) = v117;
  uint64_t v119 = Participant.handle.getter();
  *(void *)(v113 + 96) = &type metadata for String;
  *(void *)(v113 + 104) = v118;
  *(void *)(v113 + 72) = v119;
  *(void *)(v113 + 80) = v120;
  id v121 = [v30 recordChangeTag];
  if (v121)
  {
    unint64_t v122 = v121;
    uint64_t v123 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v125 = v124;

    uint64_t v126 = (uint64_t *)(v113 + 112);
    *(void *)(v113 + 136) = &type metadata for String;
    *(void *)(v113 + 144) = v118;
    if (v125)
    {
      *uint64_t v126 = v123;
      v127 = v137;
      v128 = v144;
      goto LABEL_37;
    }
  }
  else
  {
    uint64_t v126 = (uint64_t *)(v113 + 112);
    *(void *)(v113 + 136) = &type metadata for String;
    *(void *)(v113 + 144) = v118;
  }
  v127 = v137;
  v128 = v144;
  *uint64_t v126 = 0;
  unint64_t v125 = 0xE000000000000000;
LABEL_37:
  *(void *)(v113 + 120) = v125;
  uint64_t v129 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v128, (uint64_t)&_mh_execute_header, v129, (uint64_t)"Cannot match participant with UUID: %{public}@ and handle: %@ to any CKShare(etag=%{public}@) participants. Not allowing changes from this participant in real-time sync.", 172, 2, v113);
  swift_setDeallocating();
  swift_arrayDestroy();

  swift_beginAccess();
  id v130 = v73;
  char v131 = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v146 = *v127;
  uint64_t *v127 = 0x8000000000000000;
  sub_100973E50(0, v130, v131);
  uint64_t *v127 = v146;

  swift_bridgeObjectRelease();
  swift_endAccess();

  return 0;
}

uint64_t sub_100E94E94()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for CRLChangeCoordinatorCachedShareState()
{
  return self;
}

uint64_t sub_100E94F00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 40) = a4;
  return _swift_task_switch(sub_100E94F20, a4, 0);
}

uint64_t sub_100E94F20()
{
  uint64_t v1 = *(void *)(v0 + 40);
  uint64_t v2 = (void *)(v1 + OBJC_IVAR____TtC8Freeform33CRLBoardRealTimeChangeCoordinator_queuedIncomingUpdates);
  swift_beginAccess();
  *uint64_t v2 = _swiftEmptyArrayStorage;
  swift_bridgeObjectRelease();
  return _swift_task_switch(sub_100E94FB8, v1, 0);
}

uint64_t sub_100E94FB8()
{
  uint64_t v1 = *(void *)(v0 + 40);
  uint64_t v2 = OBJC_IVAR____TtC8Freeform33CRLBoardRealTimeChangeCoordinator_pushCommandToCommandControllerTask;
  if (*(void *)(v1 + OBJC_IVAR____TtC8Freeform33CRLBoardRealTimeChangeCoordinator_pushCommandToCommandControllerTask))
  {
    swift_retain();
    Task.cancel()();
    swift_release();
  }
  *(void *)(v1 + v2) = 0;
  swift_release();
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t sub_100E95070(uint64_t a1, uint64_t a2)
{
  v3[18] = a2;
  v3[19] = v2;
  v3[17] = a1;
  uint64_t v4 = type metadata accessor for CRLBoardItemPeerSyncUpdate(0);
  v3[20] = v4;
  v3[21] = *(void *)(v4 - 8);
  v3[22] = swift_task_alloc();
  v3[23] = swift_task_alloc();
  v3[24] = swift_task_alloc();
  v3[25] = swift_task_alloc();
  v3[26] = sub_1005057FC(&qword_1016749F0);
  v3[27] = swift_task_alloc();
  v3[28] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for Participant();
  v3[29] = v5;
  v3[30] = *(void *)(v5 - 8);
  v3[31] = swift_task_alloc();
  return _swift_task_switch(sub_100E951FC, v2, 0);
}

uint64_t sub_100E951FC()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 256) = v1;
  void *v1 = v0;
  v1[1] = sub_100E952A0;
  uint64_t v2 = *(void *)(v0 + 136);
  return sub_100E9E01C(v2);
}

uint64_t sub_100E952A0(uint64_t a1)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 152);
  *(void *)(*(void *)v1 + 264) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_100E953B8, v2, 0);
}

uint64_t sub_100E953B8()
{
  unint64_t v1 = v0[33];
  if (!*(void *)(v1 + 16)) {
    goto LABEL_26;
  }
  uint64_t v3 = v0[29];
  uint64_t v2 = v0[30];
  uint64_t v4 = v0[28];
  sub_100522E9C(v0[18], v4, &qword_1016749F0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v4, 1, v3) == 1)
  {
    sub_100522F00(v0[28], &qword_1016749F0);
    goto LABEL_4;
  }
  uint64_t v34 = v0[19];
  (*(void (**)(void, void, void))(v0[30] + 32))(v0[31], v0[28], v0[29]);
  if (*(unsigned char *)(v34 + 136) == 1 && (uint64_t v35 = *(void **)(*(void *)(v0[19] + 128) + 16)) != 0)
  {
    id v36 = v35;
    id v37 = [v36 publicPermission];
    uint64_t v38 = v0[30];
    uint64_t v39 = v0[31];
    uint64_t v40 = v0[29];
    if (v37 == (id)3)
    {

      (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v39, v40);
    }
    else
    {
      char v43 = sub_100E93FB4(v0[31]);

      (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v39, v40);
      if ((v43 & 1) == 0)
      {
LABEL_4:
        if (qword_10166FBA0 != -1) {
          goto LABEL_33;
        }
        while (1)
        {
          uint64_t v5 = v0[27];
          uint64_t v6 = v0[18];
          swift_beginAccess();
          uint64_t v7 = (void *)static OS_os_log.realTimeSync;
          sub_1005057FC((uint64_t *)&unk_101672B40);
          uint64_t inited = swift_initStackObject();
          *(_OWORD *)(inited + 16) = xmmword_10117E810;
          sub_100522E9C(v6, v5, &qword_1016749F0);
          id v9 = v7;
          uint64_t v10 = String.init<A>(describing:)();
          uint64_t v12 = v11;
          *(void *)(inited + 56) = &type metadata for String;
          *(void *)(inited + 64) = sub_100528BE4();
          *(void *)(inited + 32) = v10;
          *(void *)(inited + 40) = v12;
          uint64_t v13 = static os_log_type_t.default.getter();
          sub_100BAC898((uint64_t)v9, (uint64_t)&_mh_execute_header, v13, (uint64_t)"Ignoring incoming model changes from participant with unverified write permissions, %@", 86, 2, inited);
          swift_setDeallocating();
          sub_1005057FC(&qword_101672B50);
          swift_arrayDestroy();

          uint64_t v49 = *(void *)(v1 + 16);
          if (!v49) {
            break;
          }
          unint64_t v48 = v1;
          unint64_t v1 = 0;
          uint64_t v15 = v0[23];
          uint64_t v14 = v0[24];
          uint64_t v16 = v0[21];
          uint64_t v44 = (unint64_t *)(v15 + 16);
          uint64_t v45 = (uint64_t *)(v15 + 8);
          unint64_t v46 = (unint64_t *)(v14 + 16);
          uint64_t v47 = (uint64_t *)(v14 + 8);
          while (v1 < *(void *)(v48 + 16))
          {
            uint64_t v19 = v0[24];
            uint64_t v18 = v0[25];
            unint64_t v20 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
            uint64_t v21 = *(void *)(v16 + 72);
            sub_100EA1E6C(v0[33] + v20 + v21 * v1, v18, type metadata accessor for CRLBoardItemPeerSyncUpdate);
            sub_100EA1E6C(v18, v19, type metadata accessor for CRLBoardItemPeerSyncUpdate);
            int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
            uint64_t v24 = v46;
            NSString v23 = v47;
            if (EnumCaseMultiPayload == 5
              || (uint64_t v25 = v0[25],
                  uint64_t v26 = v0[23],
                  sub_100EA1FC0(v0[24], type metadata accessor for CRLBoardItemPeerSyncUpdate),
                  sub_100EA1E6C(v25, v26, type metadata accessor for CRLBoardItemPeerSyncUpdate),
                  int v27 = swift_getEnumCaseMultiPayload(),
                  uint64_t v24 = v44,
                  NSString v23 = v45,
                  v27 == 4))
            {
              uint64_t v28 = v0[25];
              uint64_t v29 = v0[22];
              sub_100510084(*v23, *v24);
              sub_100EA1EF0(v28, v29, type metadata accessor for CRLBoardItemPeerSyncUpdate);
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                sub_1006BB844(0, *(void *)&_swiftEmptyArrayStorage[2] + 1, 1);
              }
              double v31 = _swiftEmptyArrayStorage[2];
              double v30 = _swiftEmptyArrayStorage[3];
              if (*(void *)&v31 >= *(void *)&v30 >> 1) {
                sub_1006BB844(*(void *)&v30 > 1uLL, *(void *)&v31 + 1, 1);
              }
              uint64_t v32 = v0[22];
              *(void *)&_swiftEmptyArrayStorage[2] = *(void *)&v31 + 1;
              sub_100EA1EF0(v32, (uint64_t)_swiftEmptyArrayStorage + v20 + *(void *)&v31 * v21, type metadata accessor for CRLBoardItemPeerSyncUpdate);
            }
            else
            {
              uint64_t v17 = v0[25];
              sub_100EA1FC0(v0[23], type metadata accessor for CRLBoardItemPeerSyncUpdate);
              sub_100EA1FC0(v17, type metadata accessor for CRLBoardItemPeerSyncUpdate);
            }
            if (v49 == ++v1) {
              goto LABEL_18;
            }
          }
          __break(1u);
LABEL_33:
          swift_once();
        }
LABEL_18:
        swift_bridgeObjectRelease();
        if (*(void *)&_swiftEmptyArrayStorage[2]) {
          goto LABEL_19;
        }
        goto LABEL_26;
      }
    }
  }
  else
  {
    (*(void (**)(void, void))(v0[30] + 8))(v0[31], v0[29]);
  }
  if (*(void *)(v0[33] + 16))
  {
LABEL_19:
    swift_beginAccess();
    uint64_t v33 = swift_bridgeObjectRetain();
    sub_1006E21B4(v33);
    swift_endAccess();
    swift_bridgeObjectRelease();
    sub_100E97A3C();
    goto LABEL_27;
  }
LABEL_26:
  swift_bridgeObjectRelease();
LABEL_27:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  id v41 = (uint64_t (*)(void))v0[1];
  return v41();
}

uint64_t sub_100E9594C()
{
  v1[99] = v0;
  sub_1005057FC((uint64_t *)&unk_101674520);
  v1[100] = swift_task_alloc();
  v1[101] = swift_task_alloc();
  uint64_t v2 = type metadata accessor for CRLBoardItemDeltaChange(0);
  v1[102] = v2;
  v1[103] = *(void *)(v2 - 8);
  v1[104] = swift_task_alloc();
  uint64_t v3 = type metadata accessor for UUID();
  v1[105] = v3;
  v1[106] = *(void *)(v3 - 8);
  v1[107] = swift_task_alloc();
  v1[108] = swift_task_alloc();
  type metadata accessor for CRLGloballyScopedBoardIdentifier(0);
  v1[109] = swift_task_alloc();
  v1[110] = swift_task_alloc();
  v1[111] = sub_1005057FC(&qword_1016A06C0);
  v1[112] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for CRLBoardPeerChangeSet(0);
  v1[113] = v4;
  v1[114] = *(void *)(v4 - 8);
  v1[115] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for CRLBoard.RealTimeSessionInfo(0);
  v1[116] = v5;
  v1[117] = *(void *)(v5 - 8);
  v1[118] = swift_task_alloc();
  sub_1005057FC((uint64_t *)&unk_10169A1A0);
  v1[119] = swift_task_alloc();
  return _swift_task_switch(sub_100E95C10, v0, 0);
}

uint64_t sub_100E95C10()
{
  v0[98] = _swiftEmptyArrayStorage;
  v0[97] = _swiftEmptyArrayStorage;
  v0[120] = type metadata accessor for MainActor();
  v0[121] = static MainActor.shared.getter();
  uint64_t v2 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_100E95CB8, v2, v1);
}

uint64_t sub_100E95CB8()
{
  uint64_t v1 = *(void *)(v0 + 792);
  swift_release();
  *(void *)(v0 + 976) = *(void *)(*(void *)(v1
                                                + OBJC_IVAR____TtC8Freeform33CRLBoardRealTimeChangeCoordinator_suspendResumeCoordinatorState)
                                    + 56);
  return _swift_task_switch(sub_100E95D38, v1, 0);
}

uint64_t sub_100E95D38()
{
  if ((uint64_t)v0[122] <= 0)
  {
    v0[123] = static MainActor.shared.getter();
    uint64_t v7 = dispatch thunk of Actor.unownedExecutor.getter();
    return _swift_task_switch(sub_100E95F70, v7, v6);
  }
  else
  {
    if (qword_10166FBA0 != -1) {
      swift_once();
    }
    swift_beginAccess();
    id v1 = (id)static OS_os_log.realTimeSync;
    uint64_t v2 = static os_log_type_t.debug.getter();
    sub_100BAC898((uint64_t)v1, (uint64_t)&_mh_execute_header, v2, (uint64_t)"Skipping creation of real time change record, outgoing is suspended", 67, 2, (uint64_t)_swiftEmptyArrayStorage);

    sub_1005057FC(&qword_1016A06C8);
    uint64_t v3 = (void *)swift_allocObject();
    v3[2] = _swiftEmptyArrayStorage;
    v3[3] = _swiftEmptyArrayStorage;
    v3[4] = _swiftEmptyArrayStorage;
    v3[5] = _swiftEmptyArrayStorage;
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v4 = (uint64_t (*)(void *))v0[1];
    return v4(v3);
  }
}

uint64_t sub_100E95F70()
{
  uint64_t v1 = *(void *)(v0 + 792);
  swift_release();
  *(void *)(v0 + 992) = *(void *)(v1 + 120);
  return _swift_task_switch(sub_100E95FE4, v1, 0);
}

uint64_t sub_100E95FE4()
{
  uint64_t v2 = v0;
  uint64_t v3 = v0[124];
  uint64_t v4 = v0[119];
  uint64_t v5 = v0[117];
  uint64_t v6 = v0[116];
  uint64_t v7 = v3 + OBJC_IVAR____TtC8Freeform8CRLBoard_realTimeSessionInfo;
  swift_beginAccess();
  sub_100522E9C(v7, v4, (uint64_t *)&unk_10169A1A0);
  int v8 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v4, 1, v6);
  uint64_t v9 = v2[119];
  if (v8)
  {
    uint64_t v10 = (uint64_t *)&unk_10169A1A0;
LABEL_5:
    sub_100522F00(v9, v10);
    uint64_t v19 = v2;
    unint64_t v20 = _swiftEmptyArrayStorage;
    v198 = _swiftEmptyArrayStorage;
    goto LABEL_6;
  }
  uint64_t v11 = (uint64_t *)v2[118];
  uint64_t v12 = v2[114];
  uint64_t v13 = v2[113];
  uint64_t v14 = v2[112];
  sub_100EA1E6C(v2[119], (uint64_t)v11, type metadata accessor for CRLBoard.RealTimeSessionInfo);
  sub_100522F00(v9, (uint64_t *)&unk_10169A1A0);
  uint64_t v15 = *v11;
  swift_retain();
  sub_100EA1FC0((uint64_t)v11, type metadata accessor for CRLBoard.RealTimeSessionInfo);
  uint64_t v16 = OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_accessQueue;
  OS_dispatch_queue.sync<A>(execute:)();
  uint64_t v18 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  uint64_t v17 = (int *)(v12 + 48);
  if (v18(v14, 1, v13) == 1)
  {
    uint64_t v9 = v2[112];
    swift_release();
    uint64_t v10 = (uint64_t *)&unk_1016A06C0;
    goto LABEL_5;
  }
  sub_100EA1EF0(v2[112], v2[115], type metadata accessor for CRLBoardPeerChangeSet);
  if (qword_10166FBA0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  id v24 = (id)static OS_os_log.realTimeSync;
  uint64_t v25 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v24, (uint64_t)&_mh_execute_header, v25, (uint64_t)"CRLBoardChangeSet clearChanges()", 32, 2, (uint64_t)_swiftEmptyArrayStorage);

  uint64_t v26 = v15;
  int v27 = *(NSObject **)(v15 + v16);
  uint64_t v28 = swift_allocObject();
  *(void *)(v28 + 16) = v15;
  *(void *)(v28 + 24) = 0;
  uint64_t v29 = swift_allocObject();
  *(void *)(v29 + 16) = sub_100D1C478;
  *(void *)(v29 + 24) = v28;
  v2[42] = sub_1006591F0;
  v2[43] = v29;
  v2[38] = _NSConcreteStackBlock;
  v2[39] = *(void *)"";
  v2[40] = sub_1006D9628;
  v2[41] = &unk_101531BC0;
  double v30 = _Block_copy(v2 + 38);
  uint64_t v31 = v2[43];
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v27, v30);
  _Block_release(v30);
  LOBYTE(v30) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  swift_release();
  if (v30)
  {
    __break(1u);
    goto LABEL_48;
  }
  uint64_t v32 = v2[115];
  uint64_t v33 = v2[113];
  sub_100EA1E6C(v2[99] + OBJC_IVAR____TtC8Freeform33CRLBoardRealTimeChangeCoordinator_globallyScopedBoardIdentifier, v2[110], type metadata accessor for CRLGloballyScopedBoardIdentifier);
  uint64_t v34 = *(void *)(v32 + *(int *)(v33 + 40));
  uint64_t v35 = *(void *)(v34 + 16);
  v206 = v2;
  if (v35)
  {
    id v36 = v2 + 44;
    uint64_t v37 = (uint64_t)(v2 + 49);
    uint64_t v194 = (uint64_t)(v2 + 54);
    uint64_t v192 = (uint64_t)(v2 + 74);
    v202 = v2 + 97;
    v199 = v2 + 98;
    uint64_t v29 = v34 + 32;
    swift_bridgeObjectRetain();
    v187 = v2 + 44;
    v190 = v2 + 49;
    do
    {
      uint64_t v45 = v2[110];
      sub_1005498A4(v29, (uint64_t)v36);
      uint64_t v46 = v2[47];
      uint64_t v47 = v2[48];
      sub_10050F848(v36, v46);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v47 + 8))(v45, v46, v47);
      uint64_t v48 = v2[47];
      uint64_t v49 = v2[48];
      sub_10050F848(v36, v48);
      if ((*(uint64_t (**)(uint64_t, uint64_t))(v49 + 16))(v48, v49))
      {
        sub_1005498A4(v37, v192);
        uint64_t v50 = (double *)*v199;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          uint64_t v50 = sub_100F635D8(0, *((void *)v50 + 2) + 1, 1, v50);
          uint64_t *v199 = (uint64_t)v50;
        }
        unint64_t v52 = *((void *)v50 + 2);
        unint64_t v51 = *((void *)v50 + 3);
        if (v52 >= v51 >> 1) {
          uint64_t *v199 = (uint64_t)sub_100F635D8((double *)(v51 > 1), v52 + 1, 1, v50);
        }
        uint64_t v53 = v2[77];
        uint64_t v54 = v2[78];
        uint64_t v55 = sub_1005231B4(v192, v53);
        uint64_t v56 = *(void *)(v53 - 8);
        uint64_t v57 = swift_task_alloc();
        uint64_t v58 = *(void (**)(uint64_t, uint64_t, uint64_t))(v56 + 16);
        uint64_t v1 = (double *)(v56 + 16);
        v58(v57, v55, v53);
        sub_100667930(v52, v57, v199, v53, v54);
        uint64_t v44 = v192;
        id v36 = v187;
      }
      else
      {
        sub_1005498A4(v37, v194);
        uint64_t v59 = (double *)*v202;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          uint64_t v59 = sub_100F635D8(0, *((void *)v59 + 2) + 1, 1, v59);
          uint64_t *v202 = (uint64_t)v59;
        }
        unint64_t v61 = *((void *)v59 + 2);
        unint64_t v60 = *((void *)v59 + 3);
        if (v61 >= v60 >> 1) {
          uint64_t *v202 = (uint64_t)sub_100F635D8((double *)(v60 > 1), v61 + 1, 1, v59);
        }
        uint64_t v38 = v2[57];
        uint64_t v39 = v2[58];
        uint64_t v40 = sub_1005231B4(v194, v38);
        uint64_t v41 = *(void *)(v38 - 8);
        uint64_t v42 = swift_task_alloc();
        char v43 = *(void (**)(uint64_t, uint64_t, uint64_t))(v41 + 16);
        uint64_t v1 = (double *)(v41 + 16);
        v43(v42, v40, v38);
        sub_100667930(v61, v42, v202, v38, v39);
        uint64_t v44 = v194;
        uint64_t v37 = (uint64_t)v190;
      }
      _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v44);
      swift_task_dealloc();
      _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v37);
      _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v36);
      v29 += 40;
      --v35;
      uint64_t v2 = v206;
    }
    while (v35);
    swift_bridgeObjectRelease();
  }
  uint64_t v62 = v2[115];
  uint64_t v17 = (int *)v2[113];
  unsigned __int8 v63 = (uint64_t *)(v62 + v17[6]);
  unint64_t v64 = v63[1];
  if (v64 >> 60 == 15) {
    goto LABEL_32;
  }
  v202 = v2 + 69;
  uint64_t v29 = *v63;
  uint64_t v65 = v2[109];
  sub_100EA1E6C(v2[110], v65, type metadata accessor for CRLGloballyScopedBoardIdentifier);
  uint64_t v66 = (uint64_t *)(v62 + v17[5]);
  uint64_t v67 = *v66;
  uint64_t v68 = v66[1];
  uint64_t v69 = v66[2];
  uint64_t v17 = (int *)type metadata accessor for CRLBoardRealTimeChangeRecord();
  uint64_t v31 = swift_allocObject();
  sub_100EA1E6C(v65, v31 + OBJC_IVAR____TtC8Freeform28CRLBoardRealTimeChangeRecord_boardIdentifier, type metadata accessor for CRLGloballyScopedBoardIdentifier);
  *(void *)(v31 + OBJC_IVAR____TtC8Freeform28CRLBoardRealTimeChangeRecord_minRequiredVersion) = v67;
  uint64_t v70 = v31 + OBJC_IVAR____TtC8Freeform28CRLBoardRealTimeChangeRecord_raw_minRequiredVersionForGoodEnoughFidelity;
  *(void *)uint64_t v70 = v68;
  *(unsigned char *)(v70 + 8) = 0;
  uint64_t v71 = v31 + OBJC_IVAR____TtC8Freeform28CRLBoardRealTimeChangeRecord_raw_minRequiredVersionForFullFidelity;
  *(void *)uint64_t v71 = v69;
  uint64_t v2 = v206;
  *(unsigned char *)(v71 + 8) = 0;
  *(_OWORD *)(v31 + OBJC_IVAR____TtC8Freeform28CRLBoardRealTimeChangeRecord_crdtData) = xmmword_101190880;
  unint64_t v72 = (uint64_t *)(v31 + OBJC_IVAR____TtC8Freeform28CRLBoardRealTimeChangeRecord_partialCRDTData);
  *unint64_t v72 = v29;
  v72[1] = v64;
  sub_100510D4C(v29, v64);
  sub_100510D4C(v29, v64);
  sub_100EA1FC0(v65, type metadata accessor for CRLGloballyScopedBoardIdentifier);
  uint64_t v1 = (double *)v206[98];
  swift_retain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    goto LABEL_72;
  }
  while (1)
  {
    unint64_t v74 = *((void *)v1 + 2);
    unint64_t v73 = *((void *)v1 + 3);
    if (v74 >= v73 >> 1) {
      uint64_t v1 = sub_100F635D8((double *)(v73 > 1), v74 + 1, 1, v1);
    }
    v2[72] = v17;
    v2[73] = sub_100EA2020(&qword_1016816C8, (void (*)(uint64_t))type metadata accessor for CRLBoardRealTimeChangeRecord);
    v2[69] = v31;
    *((void *)v1 + 2) = v74 + 1;
    sub_10053974C((long long *)v202, (uint64_t)&v1[5 * v74 + 4]);
    sub_100514260(v29, v64);
    swift_release();
    v2[98] = v1;
    uint64_t v62 = v2[115];
    uint64_t v17 = (int *)v2[113];
LABEL_32:
    uint64_t v31 = *(void *)(v62 + v17[8]);
    uint64_t v26 = 0;
    if ((unint64_t)v31 >> 62)
    {
LABEL_48:
      if (v31 < 0) {
        unint64_t v64 = v31;
      }
      else {
        unint64_t v64 = v31 & 0xFFFFFFFFFFFFFF8;
      }
      swift_bridgeObjectRetain();
      uint64_t v75 = _CocoaArrayWrapper.endIndex.getter();
      if (!v75) {
        goto LABEL_52;
      }
    }
    else
    {
      uint64_t v75 = *(void *)((v31 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (!v75) {
        goto LABEL_52;
      }
    }
    if (v75 >= 1) {
      break;
    }
    __break(1u);
LABEL_72:
    uint64_t v1 = sub_100F635D8(0, *((void *)v1 + 2) + 1, 1, v1);
  }
  uint64_t v76 = 0;
  v181 = (long long *)(v2 + 59);
  unint64_t v203 = v31 & 0xC000000000000001;
  v178 = (void (**)(uint64_t, uint64_t))(v2[106] + 8);
  uint64_t v184 = v31;
  uint64_t v195 = v75;
  do
  {
    if (v203)
    {
      unint64_t v85 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else
    {
      unint64_t v85 = *(void **)(v31 + 8 * v76 + 32);
      swift_retain();
    }
    sub_100E976A4(v85, v2[110]);
    if (v26)
    {
      uint64_t v77 = (void *)static OS_os_log.realTimeSync;
      sub_1005057FC((uint64_t *)&unk_101672B40);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_10117E810;
      swift_getErrorValue();
      id v79 = v77;
      uint64_t v80 = Error.localizedDescription.getter();
      uint64_t v82 = v81;
      *(void *)(inited + 56) = &type metadata for String;
      *(void *)(inited + 64) = sub_100528BE4();
      *(void *)(inited + 32) = v80;
      *(void *)(inited + 40) = v82;
      uint64_t v83 = static os_log_type_t.error.getter();
      sub_100BAC898((uint64_t)v79, (uint64_t)&_mh_execute_header, v83, (uint64_t)"Failed to serialize created board item data during real-time sync with error %@", 79, 2, inited);
      swift_release();
      swift_setDeallocating();
      sub_1005057FC(&qword_101672B50);
      swift_arrayDestroy();

      swift_errorRelease();
      uint64_t v84 = v195;
    }
    else
    {
      uint64_t v87 = v86;
      uint64_t v88 = v2[108];
      uint64_t v89 = v2[105];
      uint64_t v90 = (void *)static OS_os_log.realTimeSync;
      sub_1005057FC((uint64_t *)&unk_101672B40);
      uint64_t v91 = swift_initStackObject();
      *(_OWORD *)(v91 + 16) = xmmword_10117E810;
      uint64_t v92 = *(void (**)(void))(*v85 + 256);
      id v93 = v90;
      v92();
      uint64_t v94 = UUID.uuidString.getter();
      uint64_t v96 = v95;
      (*v178)(v88, v89);
      *(void *)(v91 + 56) = &type metadata for String;
      *(void *)(v91 + 64) = sub_100528BE4();
      *(void *)(v91 + 32) = v94;
      *(void *)(v91 + 40) = v96;
      uint64_t v97 = static os_log_type_t.default.getter();
      sub_100BAC898((uint64_t)v93, (uint64_t)&_mh_execute_header, v97, (uint64_t)"Creating real time change record to send: created board item %{public}@", 71, 2, v91);
      swift_setDeallocating();
      uint64_t v2 = v206;
      sub_1005057FC(&qword_101672B50);
      swift_arrayDestroy();

      unint64_t v98 = (double *)v206[98];
      swift_retain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v98 = sub_100F635D8(0, *((void *)v98 + 2) + 1, 1, v98);
      }
      uint64_t v84 = v195;
      unint64_t v100 = *((void *)v98 + 2);
      unint64_t v99 = *((void *)v98 + 3);
      uint64_t v31 = v184;
      if (v100 >= v99 >> 1) {
        unint64_t v98 = sub_100F635D8((double *)(v99 > 1), v100 + 1, 1, v98);
      }
      v206[62] = type metadata accessor for CRLBoardItemRealTimeChangeRecord();
      v206[63] = sub_100EA2020(&qword_1016816B8, (void (*)(uint64_t))type metadata accessor for CRLBoardItemRealTimeChangeRecord);
      v206[59] = v87;
      *((void *)v98 + 2) = v100 + 1;
      sub_10053974C(v181, (uint64_t)&v98[5 * v100 + 4]);
      swift_release();
      swift_release();
      v206[98] = v98;
    }
    uint64_t v26 = 0;
    ++v76;
  }
  while (v84 != v76);
LABEL_52:
  uint64_t v101 = v2[115];
  uint64_t v102 = v2[113];
  swift_bridgeObjectRelease();
  uint64_t v103 = *(void *)(v101 + *(int *)(v102 + 28));
  uint64_t v104 = *(void *)(v103 + 16);
  if (v104)
  {
    v179 = (long long *)(v2 + 79);
    uint64_t v105 = v2[106];
    uint64_t v106 = v2[103];
    v177 = (int *)v2[102];
    uint64_t v107 = v103 + ((*(unsigned __int8 *)(v106 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v106 + 80));
    v174 = (void (**)(uint64_t, uint64_t, uint64_t))(v105 + 16);
    uint64_t v175 = *(void *)(v106 + 72);
    v173 = (void (**)(uint64_t, uint64_t, uint64_t))(v105 + 32);
    swift_bridgeObjectRetain();
    do
    {
      uint64_t v204 = v104;
      uint64_t v108 = v2[110];
      uint64_t v109 = v2[109];
      uint64_t v110 = v2[108];
      uint64_t v111 = v2[105];
      uint64_t v112 = v2[104];
      uint64_t v113 = v2[101];
      uint64_t v191 = v113;
      uint64_t v200 = v107;
      sub_100EA1E6C(v107, v112, type metadata accessor for CRLBoardItemDeltaChange);
      sub_100EA1E6C(v108, v109, type metadata accessor for CRLGloballyScopedBoardIdentifier);
      (*v174)(v110, v112, v111);
      uint64_t v114 = (uint64_t *)(v112 + v177[6]);
      uint64_t v115 = *v114;
      uint64_t v182 = v114[1];
      uint64_t v185 = v114[2];
      uint64_t v188 = *(void *)(v112 + v177[7]);
      uint64_t v193 = *(void *)(v112 + v177[8]);
      sub_100522E9C(v112 + v177[5], v113, (uint64_t *)&unk_101674520);
      uint64_t v116 = v177[10];
      uint64_t v117 = (uint64_t *)(v112 + v177[9]);
      uint64_t v119 = *v117;
      unint64_t v118 = v117[1];
      uint64_t v121 = *(void *)(v112 + v116);
      unint64_t v120 = *(void *)(v112 + v116 + 8);
      uint64_t v196 = type metadata accessor for CRLBoardItemRealTimeChangeRecord();
      uint64_t v122 = swift_allocObject();
      sub_100EA1EF0(v109, v122 + OBJC_IVAR____TtC8Freeform32CRLBoardItemRealTimeChangeRecord_boardIdentifier, type metadata accessor for CRLGloballyScopedBoardIdentifier);
      (*v173)(v122 + OBJC_IVAR____TtC8Freeform32CRLBoardItemRealTimeChangeRecord_itemUUID, v110, v111);
      *(void *)(v122 + OBJC_IVAR____TtC8Freeform32CRLBoardItemRealTimeChangeRecord_minRequiredVersion) = v115;
      uint64_t v2 = v206;
      uint64_t v123 = v122
           + OBJC_IVAR____TtC8Freeform32CRLBoardItemRealTimeChangeRecord_raw_minRequiredVersionForGoodEnoughFidelity;
      *(void *)uint64_t v123 = v182;
      *(unsigned char *)(v123 + 8) = 0;
      uint64_t v124 = v122 + OBJC_IVAR____TtC8Freeform32CRLBoardItemRealTimeChangeRecord_raw_minRequiredVersionForFullFidelity;
      *(void *)uint64_t v124 = v185;
      *(unsigned char *)(v124 + 8) = 0;
      *(void *)(v122 + OBJC_IVAR____TtC8Freeform32CRLBoardItemRealTimeChangeRecord_objectOptions) = v188;
      uint64_t v125 = v122 + OBJC_IVAR____TtC8Freeform32CRLBoardItemRealTimeChangeRecord_parentContainerUUID;
      *(void *)(v122 + OBJC_IVAR____TtC8Freeform32CRLBoardItemRealTimeChangeRecord_itemTypeValue) = v193;
      sub_100A2A208(v191, v125);
      *(unsigned char *)(v122 + OBJC_IVAR____TtC8Freeform32CRLBoardItemRealTimeChangeRecord_itemCreated) = 0;
      *(_OWORD *)(v122 + OBJC_IVAR____TtC8Freeform32CRLBoardItemRealTimeChangeRecord_commonCRDTData) = xmmword_101190880;
      *(_OWORD *)(v122 + OBJC_IVAR____TtC8Freeform32CRLBoardItemRealTimeChangeRecord_specificCRDTData) = xmmword_101190880;
      uint64_t v126 = (uint64_t *)(v122 + OBJC_IVAR____TtC8Freeform32CRLBoardItemRealTimeChangeRecord_partialCommonCRDTData);
      *uint64_t v126 = v119;
      v126[1] = v118;
      v127 = (uint64_t *)(v122 + OBJC_IVAR____TtC8Freeform32CRLBoardItemRealTimeChangeRecord_partialSpecificCRDTData);
      uint64_t *v127 = v121;
      v127[1] = v120;
      v128 = (void *)static OS_os_log.realTimeSync;
      sub_1005057FC((uint64_t *)&unk_101672B40);
      uint64_t v129 = swift_initStackObject();
      *(_OWORD *)(v129 + 16) = xmmword_10117E810;
      sub_1005FA2A0(v119, v118);
      sub_1005FA2A0(v121, v120);
      id v130 = v128;
      uint64_t v131 = UUID.uuidString.getter();
      uint64_t v133 = v132;
      *(void *)(v129 + 56) = &type metadata for String;
      *(void *)(v129 + 64) = sub_100528BE4();
      *(void *)(v129 + 32) = v131;
      *(void *)(v129 + 40) = v133;
      uint64_t v134 = static os_log_type_t.default.getter();
      sub_100BAC898((uint64_t)v130, (uint64_t)&_mh_execute_header, v134, (uint64_t)"Creating real time change record to send: modified board item %{public}@", 72, 2, v129);
      swift_setDeallocating();
      sub_1005057FC(&qword_101672B50);
      swift_arrayDestroy();

      long long v135 = (double *)v206[98];
      swift_retain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        long long v135 = sub_100F635D8(0, *((void *)v135 + 2) + 1, 1, v135);
      }
      unint64_t v137 = *((void *)v135 + 2);
      unint64_t v136 = *((void *)v135 + 3);
      if (v137 >= v136 >> 1) {
        long long v135 = sub_100F635D8((double *)(v136 > 1), v137 + 1, 1, v135);
      }
      uint64_t v138 = v206[104];
      v206[82] = v196;
      v206[83] = sub_100EA2020(&qword_1016816B8, (void (*)(uint64_t))type metadata accessor for CRLBoardItemRealTimeChangeRecord);
      v206[79] = v122;
      *((void *)v135 + 2) = v137 + 1;
      sub_10053974C(v179, (uint64_t)&v135[5 * v137 + 4]);
      swift_release();
      v206[98] = v135;
      sub_100EA1FC0(v138, type metadata accessor for CRLBoardItemDeltaChange);
      uint64_t v107 = v200 + v175;
      uint64_t v104 = v204 - 1;
    }
    while (v204 != 1);
    swift_bridgeObjectRelease();
  }
  uint64_t v139 = *(void *)(v2[115] + *(int *)(v2[113] + 36));
  uint64_t v140 = *(void *)(v139 + 16);
  uint64_t v141 = v2[106];
  if (v140)
  {
    v189 = (long long *)(v2 + 64);
    v144 = *(void (**)(uint64_t, uint64_t, uint64_t))(v141 + 16);
    uint64_t v142 = v141 + 16;
    uint64_t v143 = v144;
    uint64_t v145 = v139 + ((*(unsigned __int8 *)(v142 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v142 + 64));
    uint64_t v183 = *(void *)(v142 + 56);
    v197 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v142 + 32);
    v180 = (void (**)(uint64_t, uint64_t))(v142 - 8);
    swift_bridgeObjectRetain();
    v201 = (void *)(v142 + 40);
    v186 = v144;
    uint64_t v146 = (void (**)(uint64_t, uint64_t, uint64_t))(v142 + 16);
    while (1)
    {
      uint64_t v147 = v2[105];
      uint64_t v148 = v2[100];
      v143(v148, v145, v147);
      v149 = (void (*)(uint64_t, void, uint64_t, uint64_t))*v201;
      ((void (*)(uint64_t, void, uint64_t, uint64_t))*v201)(v148, 0, 1, v147);
      if ((*v197)(v148, 1, v147) == 1) {
        break;
      }
      v176 = v149;
      uint64_t v205 = v140;
      uint64_t v150 = v2[110];
      uint64_t v151 = v2[109];
      uint64_t v152 = v206[108];
      uint64_t v153 = v206[107];
      uint64_t v154 = v206[105];
      uint64_t v155 = *v146;
      (*v146)(v153, v206[100], v154);
      sub_100EA1E6C(v150, v151, type metadata accessor for CRLGloballyScopedBoardIdentifier);
      v143(v152, v153, v154);
      uint64_t v156 = type metadata accessor for CRLTombstoneBoardItemRealTimeChangeRecord();
      uint64_t v157 = swift_allocObject();
      sub_100EA1EF0(v151, v157 + OBJC_IVAR____TtC8Freeform41CRLTombstoneBoardItemRealTimeChangeRecord_boardIdentifier, type metadata accessor for CRLGloballyScopedBoardIdentifier);
      v155(v157 + OBJC_IVAR____TtC8Freeform41CRLTombstoneBoardItemRealTimeChangeRecord_boardItemUUID, v152, v154);
      v158 = (void *)static OS_os_log.realTimeSync;
      sub_1005057FC((uint64_t *)&unk_101672B40);
      uint64_t v159 = swift_initStackObject();
      *(_OWORD *)(v159 + 16) = xmmword_10117E810;
      id v160 = v158;
      uint64_t v161 = UUID.uuidString.getter();
      uint64_t v163 = v162;
      *(void *)(v159 + 56) = &type metadata for String;
      *(void *)(v159 + 64) = sub_100528BE4();
      *(void *)(v159 + 32) = v161;
      *(void *)(v159 + 40) = v163;
      uint64_t v164 = static os_log_type_t.default.getter();
      sub_100BAC898((uint64_t)v160, (uint64_t)&_mh_execute_header, v164, (uint64_t)"Creating real time change record to send: deleted board item %{public}@", 71, 2, v159);
      swift_setDeallocating();
      sub_1005057FC(&qword_101672B50);
      uint64_t v2 = v206;
      swift_arrayDestroy();

      v165 = (double *)v206[98];
      swift_retain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        v165 = sub_100F635D8(0, *((void *)v165 + 2) + 1, 1, v165);
      }
      unint64_t v167 = *((void *)v165 + 2);
      unint64_t v166 = *((void *)v165 + 3);
      if (v167 >= v166 >> 1) {
        v165 = sub_100F635D8((double *)(v166 > 1), v167 + 1, 1, v165);
      }
      uint64_t v168 = v206[107];
      uint64_t v169 = v206[105];
      v206[67] = v156;
      v206[68] = sub_100EA2020(&qword_1016816B0, (void (*)(uint64_t))type metadata accessor for CRLTombstoneBoardItemRealTimeChangeRecord);
      v206[64] = v157;
      *((void *)v165 + 2) = v167 + 1;
      sub_10053974C(v189, (uint64_t)&v165[5 * v167 + 4]);
      swift_release();
      v206[98] = v165;
      (*v180)(v168, v169);
      uint64_t v143 = v186;
      v145 += v183;
      uint64_t v140 = v205 - 1;
      if (v205 == 1)
      {
        v176(v206[100], 1, 1, v206[105]);
        break;
      }
    }
  }
  else
  {
    v170 = *(void (**)(void, uint64_t, uint64_t, void))(v141 + 56);
    swift_bridgeObjectRetain();
    v170(v2[100], 1, 1, v2[105]);
  }
  uint64_t v171 = v2[115];
  uint64_t v172 = v2[110];
  swift_release();
  swift_bridgeObjectRelease();
  sub_100EA1FC0(v172, type metadata accessor for CRLGloballyScopedBoardIdentifier);
  sub_100EA1FC0(v171, type metadata accessor for CRLBoardPeerChangeSet);
  uint64_t v19 = v2;
  unint64_t v20 = (double *)v2[98];
  v198 = (double *)v19[97];
LABEL_6:
  sub_1005057FC(&qword_1016A06C8);
  uint64_t v21 = (void *)swift_allocObject();
  v21[2] = v20;
  void v21[3] = _swiftEmptyArrayStorage;
  v21[4] = v198;
  v21[5] = _swiftEmptyArrayStorage;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v22 = (uint64_t (*)(void *))v19[1];
  return v22(v21);
}

void sub_100E976A4(void *a1, uint64_t a2)
{
  uint64_t v4 = v2;
  uint64_t v46 = a2;
  uint64_t v6 = sub_1005057FC((uint64_t *)&unk_101674520);
  __chkstk_darwin(v6 - 8, v7);
  uint64_t v47 = (char *)&v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for UUID();
  __chkstk_darwin(v9 - 8, v10);
  uint64_t v12 = (char *)&v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for CRLGloballyScopedBoardIdentifier(0);
  __chkstk_darwin(v13 - 8, v14);
  uint64_t v16 = (char *)&v41 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = *(void *)(v4 + 120);
  uint64_t v18 = OBJC_IVAR____TtC8Freeform8CRLBoard_store;
  uint64_t v19 = *(uint64_t (**)(void))(*a1 + 456);
  id v20 = objc_retain(*(id *)(*(void *)(v17 + OBJC_IVAR____TtC8Freeform8CRLBoard_store)
                          + OBJC_IVAR____TtC8Freeform17CRLBoardDataStore_crdtContext));
  uint64_t v21 = v19();
  uint64_t v23 = v22;

  if (!v3)
  {
    uint64_t v44 = v23;
    uint64_t v45 = v21;
    char v43 = v16;
    id v24 = *(uint64_t (**)(void))(*a1 + 464);
    id v25 = *(id *)(*(void *)(v17 + v18) + OBJC_IVAR____TtC8Freeform17CRLBoardDataStore_crdtContext);
    uint64_t v26 = v24();
    uint64_t v28 = v27;

    uint64_t v29 = (uint64_t)v43;
    uint64_t v30 = sub_100EA1E6C(v46, (uint64_t)v43, type metadata accessor for CRLGloballyScopedBoardIdentifier);
    uint64_t v31 = *(uint64_t (**)(uint64_t))(*a1 + 256);
    uint64_t v46 = v28;
    uint64_t v32 = (uint64_t)v12;
    uint64_t v33 = v31(v30);
    uint64_t v35 = a1[4];
    uint64_t v34 = a1[5];
    uint64_t v36 = a1[3];
    uint64_t v41 = a1[2];
    uint64_t v42 = v34;
    uint64_t v37 = (*(uint64_t (**)(uint64_t))(*a1 + 408))(v33);
    if (v38) {
      uint64_t v39 = v37 + 2;
    }
    else {
      uint64_t v39 = v37;
    }
    uint64_t v40 = (uint64_t)v47;
    (*(void (**)(void))(*a1 + 264))();
    type metadata accessor for CRLBoardItemRealTimeChangeRecord();
    swift_allocObject();
    sub_100E0ED28(v29, v32, v36, v35, v42, v41, v39, v40, 1, v45, v44, v26, v46, 0, 0xF000000000000000, 0, 0xF000000000000000);
  }
}

void sub_100E97A3C()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC8Freeform33CRLBoardRealTimeChangeCoordinator_incomingSuspendedCache;
  if ((*(unsigned char *)(v0 + OBJC_IVAR____TtC8Freeform33CRLBoardRealTimeChangeCoordinator_incomingSuspendedCache + 24) != 1
     || (*(unsigned char *)v1 & 1) == 0)
    && !*(void *)(v0 + OBJC_IVAR____TtC8Freeform33CRLBoardRealTimeChangeCoordinator_pushCommandToCommandControllerTask))
  {
    if (*(unsigned char *)v1 == 1 && *(void *)(*(void *)(v1 + 8) + 16))
    {
      swift_beginAccess();
      swift_retain();
      uint64_t v2 = swift_bridgeObjectRetain();
      uint64_t v3 = sub_100EA09D0(v2, v0);
      swift_release();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v4 = (double **)(v0 + OBJC_IVAR____TtC8Freeform33CRLBoardRealTimeChangeCoordinator_queuedIncomingUpdates);
      swift_beginAccess();
      uint64_t v3 = *v4;
      swift_bridgeObjectRetain();
    }
    uint64_t v5 = (void *)(v0 + OBJC_IVAR____TtC8Freeform33CRLBoardRealTimeChangeCoordinator_queuedIncomingUpdates);
    swift_beginAccess();
    void *v5 = _swiftEmptyArrayStorage;
    swift_bridgeObjectRelease();
    if (*((void *)v3 + 2)) {
      sub_100E9B47C((uint64_t)v3);
    }
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_100E97B80(uint64_t a1, uint64_t a2)
{
  v390[1] = a2;
  uint64_t v3 = type metadata accessor for CRLGloballyScopedBoardIdentifier(0);
  __chkstk_darwin(v3 - 8, v4);
  uint64_t v395 = (uint64_t)v390 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1005057FC(&qword_101672BB0);
  __chkstk_darwin(v6 - 8, v7);
  v391 = (char *)v390 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v426 = type metadata accessor for CRLBoardItemDeltaChange(0);
  __chkstk_darwin(v426, v9);
  uint64_t v394 = (uint64_t)v390 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11, v12);
  uint64_t v447 = (uint64_t)v390 - v13;
  uint64_t v14 = type metadata accessor for CRLBoardCRDTData(0);
  __chkstk_darwin(v14 - 8, v15);
  uint64_t v421 = (uint64_t)v390 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_1005057FC((uint64_t *)&unk_101674520);
  __chkstk_darwin(v17 - 8, v18);
  v435 = (char *)v390 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20, v21);
  uint64_t v425 = (uint64_t)v390 - v22;
  __chkstk_darwin(v23, v24);
  v427 = (char *)v390 - v25;
  uint64_t v26 = sub_1005057FC(&qword_101699788);
  __chkstk_darwin(v26 - 8, v27);
  uint64_t v402 = (uint64_t)v390 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v29, v30);
  uint64_t v32 = (char *)v390 - v31;
  __chkstk_darwin(v33, v34);
  uint64_t v401 = (uint64_t)v390 - v35;
  unint64_t v36 = type metadata accessor for UUID();
  uint64_t v37 = *(void *)(v36 - 8);
  __chkstk_darwin(v36, v38);
  v436 = (char *)v390 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v40, v41);
  v424 = (char *)v390 - v42;
  __chkstk_darwin(v43, v44);
  v450 = (char *)v390 - v45;
  __chkstk_darwin(v46, v47);
  v457 = (void (**)(uint64_t, uint64_t, uint64_t, unint64_t))((char *)v390 - v48);
  __chkstk_darwin(v49, v50);
  v419 = (char *)v390 - v51;
  __chkstk_darwin(v52, v53);
  v420 = (char *)v390 - v54;
  __chkstk_darwin(v55, v56);
  v418 = (char *)v390 - v57;
  __chkstk_darwin(v58, v59);
  v408 = (char *)v390 - v60;
  __chkstk_darwin(v61, v62);
  uint64_t v417 = (uint64_t)v390 - v63;
  __chkstk_darwin(v64, v65);
  v403 = (char *)v390 - v66;
  __chkstk_darwin(v67, v68);
  v400 = (char *)v390 - v69;
  __chkstk_darwin(v70, v71);
  v452 = (char *)v390 - v72;
  __chkstk_darwin(v73, v74);
  v413 = (char *)v390 - v75;
  uint64_t v76 = type metadata accessor for CRLBoardItemPeerSyncUpdate(0);
  uint64_t v77 = *(void *)(v76 - 8);
  __chkstk_darwin(v76, v78);
  uint64_t v449 = (uint64_t)v390 - ((v79 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v80, v81);
  uint64_t v448 = (uint64_t)v390 - v82;
  __chkstk_darwin(v83, v84);
  v397 = (char *)v390 - v85;
  __chkstk_darwin(v86, v87);
  uint64_t v423 = (uint64_t)v390 - v88;
  __chkstk_darwin(v89, v90);
  uint64_t v422 = (uint64_t)v390 - v91;
  __chkstk_darwin(v92, v93);
  uint64_t v443 = (uint64_t)v390 - v94;
  __chkstk_darwin(v95, v96);
  v445 = (char *)v390 - v97;
  __chkstk_darwin(v98, v99);
  uint64_t v446 = (uint64_t)v390 - v100;
  __chkstk_darwin(v101, v102);
  v453 = (void *)((char *)v390 - v103);
  __chkstk_darwin(v104, v105);
  v440 = (void (**)(uint64_t, uint64_t, unint64_t))((char *)v390 - v106);
  __chkstk_darwin(v107, v108);
  uint64_t v110 = (char *)v390 - v109;
  __chkstk_darwin(v111, v112);
  v455 = (void (**)(uint64_t, unint64_t))((char *)v390 - v113);
  __chkstk_darwin(v114, v115);
  v434 = (double *)((char *)v390 - v116);
  __chkstk_darwin(v117, v118);
  uint64_t v410 = (uint64_t)v390 - v119;
  __chkstk_darwin(v120, v121);
  uint64_t v409 = (uint64_t)v390 - v122;
  __chkstk_darwin(v123, v124);
  uint64_t v412 = (uint64_t)v390 - v125;
  __chkstk_darwin(v126, v127);
  uint64_t v411 = (uint64_t)v390 - v128;
  __chkstk_darwin(v129, v130);
  v414 = (char *)v390 - v131;
  __chkstk_darwin(v132, v133);
  v458 = (double *)((char *)v390 - v134);
  long long v135 = _swiftEmptyArrayStorage;
  v467 = _swiftEmptyArrayStorage;
  v468 = _swiftEmptyArrayStorage;
  unint64_t v439 = sub_100A3C964((uint64_t)_swiftEmptyArrayStorage);
  unint64_t v136 = sub_100A3C964((uint64_t)_swiftEmptyArrayStorage);
  unint64_t v429 = v136;
  v466 = &_swiftEmptySetSingleton;
  uint64_t v138 = *(void *)(a1 + 16);
  unint64_t v459 = v36;
  uint64_t v456 = v76;
  uint64_t v405 = v37;
  uint64_t v393 = v77;
  unint64_t v444 = (unint64_t)v110;
  if (v138)
  {
    v392 = v32;
    unint64_t v433 = (*(unsigned __int8 *)(v77 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v77 + 80);
    uint64_t v139 = a1 + v433;
    v399 = (void (**)(char *, uint64_t, unint64_t))(v37 + 32);
    unint64_t v140 = *(void *)(v77 + 72);
    v432 = (void (**)(uint64_t, unint64_t))(v37 + 8);
    v416 = (id *)(v77 + 56);
    v406 = (void (**)(uint64_t, char *, unint64_t))(v37 + 16);
    v407 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v77 + 48);
    v390[2] = a1;
    swift_bridgeObjectRetain();
    uint64_t v141 = _swiftEmptyArrayStorage;
    long long v398 = xmmword_10117D8C0;
    v430 = _swiftEmptyArrayStorage;
    v431 = _swiftEmptyArrayStorage;
    uint64_t v143 = (uint64_t)v413;
    uint64_t v142 = (uint64_t)v414;
    unint64_t v454 = v140;
    while (2)
    {
      uint64_t v146 = v458;
      sub_100EA1E6C(v139, (uint64_t)v458, type metadata accessor for CRLBoardItemPeerSyncUpdate);
      sub_100EA1E6C((uint64_t)v146, v142, type metadata accessor for CRLBoardItemPeerSyncUpdate);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          sub_100EA1E6C((uint64_t)v458, v412, type metadata accessor for CRLBoardItemPeerSyncUpdate);
          if (swift_isUniquelyReferenced_nonNull_native()) {
            unint64_t v175 = (unint64_t)v431;
          }
          else {
            unint64_t v175 = sub_100F635A4(0, *((void *)v431 + 2) + 1, 1, (unint64_t)v431);
          }
          uint64_t v147 = v454;
          unint64_t v177 = *(void *)(v175 + 16);
          unint64_t v176 = *(void *)(v175 + 24);
          if (v177 >= v176 >> 1) {
            unint64_t v175 = sub_100F635A4(v176 > 1, v177 + 1, 1, v175);
          }
          *(void *)(v175 + 16) = v177 + 1;
          v431 = (double *)v175;
          sub_100EA1EF0(v412, v175 + v433 + v177 * v147, type metadata accessor for CRLBoardItemPeerSyncUpdate);
          sub_100EA1FC0((uint64_t)v458, type metadata accessor for CRLBoardItemPeerSyncUpdate);
          uint64_t v145 = (double *)v142;
          v144 = type metadata accessor for CRLBoardItemPeerSyncUpdate;
          goto LABEL_4;
        case 2u:
          uint64_t v150 = *(void **)v142;
          uint64_t v151 = (void (**)(void))(**(void **)v142 + 256);
          v441 = *v151;
          v442 = v150;
          v438 = (void (**)(char *, uint64_t, unint64_t))v151;
          v441();
          unint64_t v152 = v439;
          if (*(void *)(v439 + 16) && (unint64_t v153 = sub_100955FC8(v143), (v154 & 1) != 0))
          {
            uint64_t v155 = *(void *)(v152 + 56) + v153 * v454;
            uint64_t v156 = v401;
            sub_100EA1E6C(v155, v401, type metadata accessor for CRLBoardItemPeerSyncUpdate);
            uint64_t v157 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))*v416;
            uint64_t v158 = v156;
            uint64_t v159 = 0;
          }
          else
          {
            uint64_t v157 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))*v416;
            uint64_t v156 = v401;
            uint64_t v158 = v401;
            uint64_t v159 = 1;
          }
          v415 = v157;
          v157(v158, v159, 1, v76);
          v437 = *v432;
          v437(v143, v36);
          v404 = *v407;
          int v178 = v404(v156, 1, v76);
          uint64_t v179 = v156;
          int v180 = v178;
          uint64_t v181 = sub_100522F00(v179, &qword_101699788);
          uint64_t v182 = (uint64_t)v403;
          v428 = v141;
          if (v180 != 1)
          {
            if (qword_10166FBA0 != -1) {
              swift_once();
            }
            swift_beginAccess();
            uint64_t v183 = (void *)static OS_os_log.realTimeSync;
            sub_1005057FC((uint64_t *)&unk_101672B40);
            uint64_t inited = swift_initStackObject();
            *(_OWORD *)(inited + 16) = v398;
            id v396 = v183;
            uint64_t v185 = v452;
            v186 = v442;
            v441();
            uint64_t v187 = UUID.uuidString.getter();
            uint64_t v189 = v188;
            v437((uint64_t)v185, v459);
            *(void *)(inited + 56) = &type metadata for String;
            unint64_t v190 = sub_100528BE4();
            *(void *)(inited + 64) = v190;
            *(void *)(inited + 32) = v187;
            *(void *)(inited + 40) = v189;
            v462 = v186;
            type metadata accessor for CRLBoardItemData();
            swift_retain();
            uint64_t v191 = String.init<A>(describing:)();
            *(void *)(inited + 96) = &type metadata for String;
            *(void *)(inited + 104) = v190;
            *(void *)(inited + 72) = v191;
            *(void *)(inited + 80) = v192;
            uint64_t v193 = static os_log_type_t.default.getter();
            id v194 = v396;
            sub_100BAC898((uint64_t)v396, (uint64_t)&_mh_execute_header, v193, (uint64_t)"_processQueuedIncomingUpdatesIntoCommand: Created update found will removing existing delete in deletesThatAreNotReplacedByCreates %{public}@%{public}@", 151, 2, inited);
            swift_setDeallocating();
            sub_1005057FC(&qword_101672B50);
            swift_arrayDestroy();

            uint64_t v195 = (uint64_t)v400;
            v441();
            unint64_t v196 = v439;
            swift_bridgeObjectRetain();
            unint64_t v197 = sub_100955FC8(v195);
            LOBYTE(v187) = v198;
            swift_bridgeObjectRelease();
            if (v187)
            {
              int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
              v462 = (void *)v196;
              unint64_t v200 = v454;
              uint64_t v76 = v456;
              if (!isUniquelyReferenced_nonNull_native)
              {
                sub_1009856B4();
                unint64_t v196 = (unint64_t)v462;
              }
              unint64_t v201 = *(void *)(v196 + 48) + *(void *)(v405 + 72) * v197;
              unint64_t v36 = v459;
              v202 = v437;
              v437(v201, v459);
              uint64_t v203 = (uint64_t)v462;
              uint64_t v204 = v462[7] + v197 * v200;
              uint64_t v205 = (uint64_t)v392;
              sub_100EA1EF0(v204, (uint64_t)v392, type metadata accessor for CRLBoardItemPeerSyncUpdate);
              unint64_t v439 = v203;
              sub_10058C4EC(v197, v203);
              swift_bridgeObjectRelease();
              uint64_t v206 = 0;
            }
            else
            {
              uint64_t v206 = 1;
              unint64_t v36 = v459;
              uint64_t v205 = (uint64_t)v392;
              uint64_t v76 = v456;
              v202 = v437;
            }
            v415(v205, v206, 1, v76);
            v202((uint64_t)v400, v36);
            uint64_t v181 = sub_100522F00(v205, &qword_101699788);
            uint64_t v182 = (uint64_t)v403;
          }
          ((void (*)(uint64_t))v441)(v181);
          unint64_t v212 = v429;
          if (*(void *)(v429 + 16))
          {
            uint64_t v213 = v182;
            unint64_t v214 = sub_100955FC8(v182);
            if (v215)
            {
              sub_100EA1E6C(*(void *)(v212 + 56) + v214 * v454, v402, type metadata accessor for CRLBoardItemPeerSyncUpdate);
              uint64_t v216 = 0;
              goto LABEL_50;
            }
          }
          else
          {
            uint64_t v213 = v182;
          }
          uint64_t v216 = 1;
LABEL_50:
          v217 = v437;
          uint64_t v218 = v402;
          v415(v402, v216, 1, v76);
          v217(v213, v36);
          LODWORD(v217) = v404(v218, 1, v76);
          sub_100522F00(v218, &qword_101699788);
          if (v217 != 1)
          {
            if (qword_10166FBA0 != -1) {
              swift_once();
            }
            swift_beginAccess();
            v219 = (void *)static OS_os_log.realTimeSync;
            sub_1005057FC((uint64_t *)&unk_101672B40);
            uint64_t v220 = swift_initStackObject();
            *(_OWORD *)(v220 + 16) = v398;
            v415 = v219;
            v221 = v452;
            v222 = v442;
            v441();
            uint64_t v223 = UUID.uuidString.getter();
            uint64_t v225 = v224;
            unint64_t v226 = v459;
            v437((uint64_t)v221, v459);
            *(void *)(v220 + 56) = &type metadata for String;
            unint64_t v227 = sub_100528BE4();
            *(void *)(v220 + 64) = v227;
            *(void *)(v220 + 32) = v223;
            *(void *)(v220 + 40) = v225;
            unint64_t v36 = v226;
            v462 = v222;
            type metadata accessor for CRLBoardItemData();
            swift_retain();
            uint64_t v228 = String.init<A>(describing:)();
            *(void *)(v220 + 96) = &type metadata for String;
            *(void *)(v220 + 104) = v227;
            *(void *)(v220 + 72) = v228;
            *(void *)(v220 + 80) = v229;
            uint64_t v230 = static os_log_type_t.default.getter();
            v231 = v415;
            sub_100BAC898((uint64_t)v415, (uint64_t)&_mh_execute_header, v230, (uint64_t)"_processQueuedIncomingUpdatesIntoCommand: Newer created item will replace existing %{public}@%{public}@", 103, 2, v220);
            swift_setDeallocating();
            sub_1005057FC(&qword_101672B50);
            swift_arrayDestroy();

            uint64_t v76 = v456;
          }
          uint64_t v147 = v417;
          v441();
          sub_100EA1E6C((uint64_t)v458, v409, type metadata accessor for CRLBoardItemPeerSyncUpdate);
          v232 = (void *)v429;
          uint64_t v142 = swift_isUniquelyReferenced_nonNull_native();
          v462 = v232;
          unint64_t v234 = sub_100955FC8(v147);
          uint64_t v235 = v232[2];
          BOOL v236 = (v233 & 1) == 0;
          uint64_t v237 = v235 + v236;
          if (__OFADD__(v235, v236))
          {
            __break(1u);
LABEL_170:
            __break(1u);
LABEL_171:
            __break(1u);
LABEL_172:
            __break(1u);
LABEL_173:
            swift_once();
LABEL_146:
            swift_beginAccess();
            v349 = (char *)static OS_os_log.realTimeSync;
            sub_1005057FC((uint64_t *)&unk_101672B40);
            uint64_t v350 = swift_initStackObject();
            *(_OWORD *)(v350 + 16) = xmmword_10117E810;
            v453 = (void *)v350;
            int64_t v351 = *(void *)(v142 + 16);
            if (v351)
            {
              uint64_t v447 = v350 + 32;
              v452 = (char *)v147;
              v461 = _swiftEmptyArrayStorage;
              v450 = v349;
              v352 = v349;
              swift_bridgeObjectRetain();
              sub_1006BB504(0, v351, 0);
              unint64_t v353 = (*(unsigned __int8 *)(v393 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v393 + 80);
              uint64_t v446 = v142;
              uint64_t v354 = v142 + v353;
              v458 = *(double **)(v393 + 72);
              v457 = (void (**)(uint64_t, uint64_t, uint64_t, unint64_t))(v405 + 56);
              unint64_t v454 = v405 + 16;
              v355 = (unsigned int (**)(uint64_t, uint64_t, unint64_t))(v405 + 48);
              v455 = (void (**)(uint64_t, unint64_t))(v405 + 8);
              while (2)
              {
                uint64_t v356 = v448;
                sub_100EA1E6C(v354, v448, type metadata accessor for CRLBoardItemPeerSyncUpdate);
                sub_100EA1E6C(v356, v449, type metadata accessor for CRLBoardItemPeerSyncUpdate);
                switch(swift_getEnumCaseMultiPayload())
                {
                  case 1u:
                    uint64_t v360 = v394;
                    sub_100EA1EF0(v449, v394, type metadata accessor for CRLBoardItemDeltaChange);
                    (*(void (**)(uint64_t, uint64_t, unint64_t))v454)(v138, v360, v36);
                    v361 = type metadata accessor for CRLBoardItemDeltaChange;
                    goto LABEL_154;
                  case 2u:
                    (*(void (**)(void))(**(void **)v449 + 256))();
                    swift_release();
                    goto LABEL_155;
                  case 3u:
                    (*v457)(v138, 1, 1, v36);
                    sub_100EA1FC0(v449, type metadata accessor for CRLBoardItemPeerSyncUpdate);
                    goto LABEL_156;
                  case 4u:
                  case 5u:
                    sub_100510084(*(void *)(v449 + 8), *(void *)(v449 + 16));
                    (*v457)(v138, 1, 1, v36);
                    goto LABEL_156;
                  default:
                    uint64_t v357 = sub_1005057FC(&qword_1016A0650);
                    uint64_t v358 = v449;
                    sub_100510084(*(void *)(v449 + *(int *)(v357 + 48) + 24), *(void *)(v449 + *(int *)(v357 + 48) + 32));
                    uint64_t v359 = v358;
                    uint64_t v360 = v395;
                    sub_100EA1EF0(v359, v395, type metadata accessor for CRLGloballyScopedBoardIdentifier);
                    (*(void (**)(uint64_t, uint64_t, unint64_t))v454)(v138, v360, v36);
                    v361 = type metadata accessor for CRLGloballyScopedBoardIdentifier;
LABEL_154:
                    sub_100EA1FC0(v360, v361);
LABEL_155:
                    (*v457)(v138, 0, 1, v36);
LABEL_156:
                    if ((*v355)(v138, 1, v36) == 1)
                    {
                      sub_100522F00(v138, (uint64_t *)&unk_101674520);
                      uint64_t v362 = 0;
                      unint64_t v363 = 0xE000000000000000;
                    }
                    else
                    {
                      unint64_t v364 = v36;
                      uint64_t v362 = UUID.uuidString.getter();
                      unint64_t v363 = v365;
                      (*v455)(v138, v364);
                    }
                    sub_100EA1FC0(v448, type metadata accessor for CRLBoardItemPeerSyncUpdate);
                    v366 = v461;
                    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
                    {
                      sub_1006BB504(0, *((void *)v366 + 2) + 1, 1);
                      v366 = v461;
                    }
                    unint64_t v368 = *((void *)v366 + 2);
                    unint64_t v367 = *((void *)v366 + 3);
                    if (v368 >= v367 >> 1)
                    {
                      sub_1006BB504(v367 > 1, v368 + 1, 1);
                      v366 = v461;
                    }
                    *((void *)v366 + 2) = v368 + 1;
                    v369 = &v366[2 * v368];
                    *((void *)v369 + 4) = v362;
                    *((void *)v369 + 5) = v363;
                    v354 += (uint64_t)v458;
                    --v351;
                    uint64_t v138 = (uint64_t)v435;
                    unint64_t v36 = v459;
                    if (v351) {
                      continue;
                    }
                    swift_bridgeObjectRelease();
                    uint64_t v147 = (uint64_t)v452;
                    v349 = v450;
                    break;
                }
                break;
              }
            }
            else
            {
              v370 = v349;
              v366 = _swiftEmptyArrayStorage;
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v461 = v366;
            sub_1005057FC((uint64_t *)&unk_1016773F0);
            sub_100523288((unint64_t *)&qword_101672620, (uint64_t *)&unk_1016773F0);
            uint64_t v371 = BidirectionalCollection<>.joined(separator:)();
            uint64_t v373 = v372;
            swift_bridgeObjectRelease();
            v374 = v453;
            v453[7] = &type metadata for String;
            v374[8] = sub_100528BE4();
            v374[4] = v371;
            v374[5] = v373;
            uint64_t v375 = static os_log_type_t.default.getter();
            sub_100BAC898((uint64_t)v349, (uint64_t)&_mh_execute_header, v375, (uint64_t)"_processQueuedIncomingUpdatesIntoCommand, queueItems: %@", 56, 2, (uint64_t)v374);
            swift_setDeallocating();
            sub_1005057FC(&qword_101672B50);
            swift_arrayDestroy();

            uint64_t v376 = type metadata accessor for TaskPriority();
            uint64_t v377 = (uint64_t)v391;
            (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v376 - 8) + 56))(v391, 1, 1, v376);
            uint64_t v378 = swift_allocObject();
            swift_weakInit();
            v379 = v464;
            v380 = (void *)swift_allocObject();
            v380[2] = 0;
            v380[3] = 0;
            v380[4] = v378;
            v380[5] = v379;
            sub_100B109D8(v377, (uint64_t)&unk_1016A06B0, (uint64_t)v380);
            swift_release();
            sub_100522F00(v377, &qword_101672BB0);
            goto LABEL_168;
          }
          char v238 = v233;
          if (v232[3] >= v237)
          {
            uint64_t v147 = v454;
            if ((v142 & 1) == 0) {
              sub_1009856B4();
            }
          }
          else
          {
            sub_10096FE94(v237, v142);
            unint64_t v239 = sub_100955FC8(v417);
            uint64_t v147 = v454;
            if ((v238 & 1) != (v240 & 1)) {
              goto LABEL_179;
            }
            unint64_t v234 = v239;
          }
          uint64_t v142 = (uint64_t)v414;
          v241 = v462;
          if (v238)
          {
            unint64_t v429 = (unint64_t)v462;
            sub_100EA1E08(v409, v462[7] + v234 * v147);
          }
          else
          {
            v462[(v234 >> 6) + 8] |= 1 << v234;
            (*(void (**)(unint64_t, uint64_t, unint64_t))(v405 + 16))(v241[6] + *(void *)(v405 + 72) * v234, v417, v36);
            sub_100EA1EF0(v409, v241[7] + v234 * v147, type metadata accessor for CRLBoardItemPeerSyncUpdate);
            uint64_t v242 = v241[2];
            BOOL v209 = __OFADD__(v242, 1);
            uint64_t v243 = v242 + 1;
            if (v209) {
              goto LABEL_172;
            }
            v241[2] = v243;
            unint64_t v429 = (unint64_t)v462;
          }
          swift_bridgeObjectRelease();
          v437(v417, v36);
          swift_release();
          sub_100EA1FC0((uint64_t)v458, type metadata accessor for CRLBoardItemPeerSyncUpdate);
          uint64_t v141 = v428;
          uint64_t v143 = (uint64_t)v413;
LABEL_5:
          v139 += v147;
          if (--v138) {
            continue;
          }
          unint64_t v136 = swift_bridgeObjectRelease();
          long long v135 = v430;
          uint64_t v110 = (char *)v444;
          break;
        case 3u:
          uint64_t v147 = (uint64_t)v141;
          id v160 = v408;
          (*v399)(v408, v142, v36);
          uint64_t v161 = *v406;
          uint64_t v162 = (uint64_t)v418;
          (*v406)((uint64_t)v418, v160, v36);
          sub_100EA1E6C((uint64_t)v458, v410, type metadata accessor for CRLBoardItemPeerSyncUpdate);
          unint64_t v163 = v439;
          uint64_t v142 = swift_isUniquelyReferenced_nonNull_native();
          v462 = (void *)v163;
          unint64_t v36 = sub_100955FC8(v162);
          uint64_t v165 = *(void *)(v163 + 16);
          BOOL v166 = (v164 & 1) == 0;
          uint64_t v167 = v165 + v166;
          if (__OFADD__(v165, v166)) {
            goto LABEL_170;
          }
          char v168 = v164;
          if (*(void *)(v163 + 24) >= v167)
          {
            if ((v142 & 1) == 0) {
              sub_1009856B4();
            }
          }
          else
          {
            sub_10096FE94(v167, v142);
            unint64_t v169 = sub_100955FC8((uint64_t)v418);
            if ((v168 & 1) != (v170 & 1)) {
              goto LABEL_178;
            }
            unint64_t v36 = v169;
          }
          uint64_t v142 = (uint64_t)v414;
          uint64_t v207 = v462;
          if (v168)
          {
            unint64_t v439 = (unint64_t)v462;
            sub_100EA1E08(v410, v462[7] + v36 * v454);
          }
          else
          {
            v462[(v36 >> 6) + 8] |= 1 << v36;
            v161(v207[6] + *(void *)(v405 + 72) * v36, v418, v459);
            sub_100EA1EF0(v410, v207[7] + v36 * v454, type metadata accessor for CRLBoardItemPeerSyncUpdate);
            uint64_t v208 = v207[2];
            BOOL v209 = __OFADD__(v208, 1);
            uint64_t v210 = v208 + 1;
            if (v209) {
              goto LABEL_171;
            }
            v207[2] = v210;
            unint64_t v439 = (unint64_t)v462;
          }
          swift_bridgeObjectRelease();
          v211 = *v432;
          unint64_t v36 = v459;
          (*v432)((uint64_t)v418, v459);
          v211((uint64_t)v408, v36);
          sub_100EA1FC0((uint64_t)v458, type metadata accessor for CRLBoardItemPeerSyncUpdate);
          uint64_t v141 = (double *)v147;
          uint64_t v143 = (uint64_t)v413;
          uint64_t v147 = v454;
          goto LABEL_5;
        case 4u:
        case 5u:
          sub_100510084(*(void *)(v142 + 8), *(void *)(v142 + 16));
          sub_100EA1E6C((uint64_t)v458, (uint64_t)v434, type metadata accessor for CRLBoardItemPeerSyncUpdate);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v141 = (double *)sub_100F635A4(0, *((void *)v141 + 2) + 1, 1, (unint64_t)v141);
          }
          uint64_t v147 = v454;
          unint64_t v149 = *((void *)v141 + 2);
          unint64_t v148 = *((void *)v141 + 3);
          if (v149 >= v148 >> 1) {
            uint64_t v141 = (double *)sub_100F635A4(v148 > 1, v149 + 1, 1, (unint64_t)v141);
          }
          *((void *)v141 + 2) = v149 + 1;
          sub_100EA1EF0((uint64_t)v434, (uint64_t)v141 + v433 + v149 * v147, type metadata accessor for CRLBoardItemPeerSyncUpdate);
          v144 = type metadata accessor for CRLBoardItemPeerSyncUpdate;
          uint64_t v145 = v458;
          goto LABEL_4;
        default:
          uint64_t v171 = sub_1005057FC(&qword_1016A0650);
          sub_100510084(*(void *)(v142 + *(int *)(v171 + 48) + 24), *(void *)(v142 + *(int *)(v171 + 48) + 32));
          sub_100EA1E6C((uint64_t)v458, v411, type metadata accessor for CRLBoardItemPeerSyncUpdate);
          if (swift_isUniquelyReferenced_nonNull_native()) {
            unint64_t v172 = (unint64_t)v430;
          }
          else {
            unint64_t v172 = sub_100F635A4(0, *((void *)v430 + 2) + 1, 1, (unint64_t)v430);
          }
          uint64_t v147 = v454;
          unint64_t v174 = *(void *)(v172 + 16);
          unint64_t v173 = *(void *)(v172 + 24);
          if (v174 >= v173 >> 1) {
            unint64_t v172 = sub_100F635A4(v173 > 1, v174 + 1, 1, v172);
          }
          *(void *)(v172 + 16) = v174 + 1;
          v430 = (double *)v172;
          sub_100EA1EF0(v411, v172 + v433 + v174 * v147, type metadata accessor for CRLBoardItemPeerSyncUpdate);
          sub_100EA1FC0((uint64_t)v458, type metadata accessor for CRLBoardItemPeerSyncUpdate);
          v144 = type metadata accessor for CRLGloballyScopedBoardIdentifier;
          uint64_t v145 = (double *)v142;
LABEL_4:
          sub_100EA1FC0((uint64_t)v145, v144);
          unint64_t v36 = v459;
          goto LABEL_5;
      }
      break;
    }
  }
  else
  {
    uint64_t v141 = _swiftEmptyArrayStorage;
    v431 = _swiftEmptyArrayStorage;
  }
  __chkstk_darwin(v136, v137);
  uint64_t v244 = swift_bridgeObjectRetain();
  sub_100EA0734(v244, (void (*)(char *, uint64_t))sub_100EA1CF8);
  uint64_t v245 = swift_bridgeObjectRelease();
  __chkstk_darwin(v245, v246);
  uint64_t v247 = swift_bridgeObjectRetain();
  sub_100EA0734(v247, (void (*)(char *, uint64_t))sub_100EA1D00);
  swift_bridgeObjectRelease();
  uint64_t v248 = swift_bridgeObjectRetain();
  v249 = sub_100EA1264(v248);
  swift_bridgeObjectRelease_n();
  v468 = v249;
  v464 = _swiftEmptyArrayStorage;
  v465 = _swiftEmptyArrayStorage;
  swift_bridgeObjectRetain();
  v430 = v135;
  sub_1006E21B4((uint64_t)v135);
  uint64_t v250 = *((void *)v249 + 2);
  v428 = v141;
  if (!v250) {
    goto LABEL_92;
  }
  unint64_t v454 = (*(unsigned __int8 *)(v393 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v393 + 80);
  uint64_t v251 = (uint64_t)v249 + v454;
  v252 = *(void **)(v393 + 72);
  v441 = (void (*)(void))(v405 + 48);
  v442 = v252;
  v458 = (double *)(v405 + 8);
  v437 = (void (*)(uint64_t, unint64_t))(v405 + 16);
  v438 = (void (**)(char *, uint64_t, unint64_t))(v405 + 32);
  v434 = v249;
  swift_bridgeObjectRetain();
  uint64_t v253 = (uint64_t)v427;
  v254 = v455;
  do
  {
    sub_100EA1E6C(v251, (uint64_t)v254, type metadata accessor for CRLBoardItemPeerSyncUpdate);
    sub_100EA1E6C((uint64_t)v254, (uint64_t)v110, type metadata accessor for CRLBoardItemPeerSyncUpdate);
    if (swift_getEnumCaseMultiPayload() != 2)
    {
      sub_100EA1FC0((uint64_t)v110, type metadata accessor for CRLBoardItemPeerSyncUpdate);
      sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"_processQueuedIncomingUpdatesIntoCommand(_:_:)", 46, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Sync/RealTime/CRLBoardRealTimeChangeCoordinator.swift", 107, 2, 532, (uint64_t)"createdItems should only contain .createdItemDatas", 50, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_100586FD4((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"createdItems should only contain .createdItemDatas");
      v382 = _swiftEmptyArrayStorage;
      uint64_t v383 = 532;
      goto LABEL_177;
    }
    (*(void (**)(void))(**(void **)v110 + 264))();
    unint64_t v257 = v459;
    if ((*(unsigned int (**)(uint64_t, uint64_t, unint64_t))v441)(v253, 1, v459) == 1)
    {
      sub_100522F00(v253, (uint64_t *)&unk_101674520);
LABEL_76:
      sub_100EA1E6C((uint64_t)v254, (uint64_t)v453, type metadata accessor for CRLBoardItemPeerSyncUpdate);
      unint64_t v258 = (unint64_t)v464;
      char v259 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v110 = (char *)v444;
      if ((v259 & 1) == 0) {
        unint64_t v258 = sub_100F635A4(0, *(void *)(v258 + 16) + 1, 1, v258);
      }
      unint64_t v261 = *(void *)(v258 + 16);
      unint64_t v260 = *(void *)(v258 + 24);
      if (v261 >= v260 >> 1) {
        unint64_t v258 = sub_100F635A4(v260 > 1, v261 + 1, 1, v258);
      }
      *(void *)(v258 + 16) = v261 + 1;
      uint64_t v255 = v258 + v454 + v261 * (void)v442;
      v256 = v442;
      sub_100EA1EF0((uint64_t)v453, v255, type metadata accessor for CRLBoardItemPeerSyncUpdate);
      swift_release();
      v464 = (double *)v258;
      goto LABEL_72;
    }
    v262 = v420;
    (*v438)(v420, v253, v257);
    uint64_t v263 = *(void *)(v451 + 120);
    uint64_t v264 = *(void *)(v263 + OBJC_IVAR____TtC8Freeform8CRLBoard_data)
         + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
    swift_beginAccess();
    uint64_t v265 = v264;
    uint64_t v266 = v421;
    sub_100EA1E6C(v265, v421, type metadata accessor for CRLBoardCRDTData);
    swift_retain();
    sub_1005057FC(&qword_101674550);
    v267 = v452;
    CRRegister.wrappedValue.getter();
    sub_100EA1FC0(v266, type metadata accessor for CRLBoardCRDTData);
    swift_release();
    LOBYTE(v266) = static UUID.== infix(_:_:)();
    unint64_t v268 = v257;
    uint64_t v269 = (uint64_t)v262;
    v270 = *(void (**)(char *, unint64_t))v458;
    (*(void (**)(char *, unint64_t))v458)(v267, v268);
    if ((v266 & 1) != 0
      || (uint64_t v271 = v263 + OBJC_IVAR____TtC8Freeform8CRLBoard_objectUUIDMap,
          swift_beginAccess(),
          *(void *)(*(void *)v271 + 16))
      && (swift_bridgeObjectRetain(), sub_100955FC8(v269), char v273 = v272, swift_bridgeObjectRelease(), (v273 & 1) != 0))
    {
      v274 = v419;
      unint64_t v275 = v459;
      (*(void (**)(char *, uint64_t, unint64_t))v437)(v419, v269, v459);
      v270(v274, v275);
    }
    else
    {
      uint64_t v276 = (uint64_t)v419;
      unint64_t v277 = v459;
      (*(void (**)(char *, uint64_t, unint64_t))v437)(v419, v269, v459);
      uint64_t v278 = (uint64_t)v466;
      swift_bridgeObjectRetain();
      char v279 = sub_1006E3E24(v276, v278);
      swift_bridgeObjectRelease();
      v270((char *)v276, v277);
      if ((v279 & 1) == 0)
      {
        v270((char *)v269, v459);
        uint64_t v253 = (uint64_t)v427;
        v254 = v455;
        goto LABEL_76;
      }
    }
    sub_100EA1E6C((uint64_t)v455, (uint64_t)v440, type metadata accessor for CRLBoardItemPeerSyncUpdate);
    unint64_t v280 = (unint64_t)v465;
    char v281 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v253 = (uint64_t)v427;
    if ((v281 & 1) == 0) {
      unint64_t v280 = sub_100F635A4(0, *(void *)(v280 + 16) + 1, 1, v280);
    }
    unint64_t v283 = *(void *)(v280 + 16);
    unint64_t v282 = *(void *)(v280 + 24);
    if (v283 >= v282 >> 1) {
      unint64_t v280 = sub_100F635A4(v282 > 1, v283 + 1, 1, v280);
    }
    *(void *)(v280 + 16) = v283 + 1;
    uint64_t v284 = v280 + v454 + v283 * (void)v442;
    v256 = v442;
    sub_100EA1EF0((uint64_t)v440, v284, type metadata accessor for CRLBoardItemPeerSyncUpdate);
    swift_release();
    v465 = (double *)v280;
    v270((char *)v269, v459);
    uint64_t v110 = (char *)v444;
LABEL_72:
    v254 = v455;
    sub_100EA1FC0((uint64_t)v455, type metadata accessor for CRLBoardItemPeerSyncUpdate);
    v251 += (uint64_t)v256;
    --v250;
  }
  while (v250);
  swift_bridgeObjectRelease();
  uint64_t v141 = v428;
LABEL_92:
  unint64_t v285 = *((void *)v431 + 2);
  unint64_t v36 = v459;
  uint64_t v286 = v447;
  if (!v285) {
    goto LABEL_121;
  }
  unint64_t v444 = (*(unsigned __int8 *)(v393 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v393 + 80);
  uint64_t v287 = (uint64_t)v431 + v444;
  v288 = *(void **)(v393 + 72);
  v455 = (void (**)(uint64_t, unint64_t))(v405 + 16);
  v289 = (double *)(v405 + 8);
  v440 = (void (**)(uint64_t, uint64_t, unint64_t))(v405 + 32);
  v441 = (void (*)(void))(v405 + 48);
  swift_bridgeObjectRetain();
  uint64_t v290 = (uint64_t)v445;
  uint64_t v291 = v446;
  v442 = v288;
  v458 = v289;
  while (2)
  {
    unint64_t v454 = v285;
    v453 = (void *)v287;
    sub_100EA1E6C(v287, v291, type metadata accessor for CRLBoardItemPeerSyncUpdate);
    sub_100EA1E6C(v291, v290, type metadata accessor for CRLBoardItemPeerSyncUpdate);
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      sub_100EA1FC0(v290, type metadata accessor for CRLBoardItemPeerSyncUpdate);
      sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"_processQueuedIncomingUpdatesIntoCommand(_:_:)", 46, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Sync/RealTime/CRLBoardRealTimeChangeCoordinator.swift", 107, 2, 563, (uint64_t)"modifiedItems should only contain .modifiedItemDatas", 52, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_100586FD4((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"modifiedItems should only contain .modifiedItemDatas");
      v382 = _swiftEmptyArrayStorage;
      uint64_t v383 = 563;
      goto LABEL_177;
    }
    sub_100EA1EF0(v290, v286, type metadata accessor for CRLBoardItemDeltaChange);
    v293 = *v455;
    ((void (*)(void (**)(uint64_t, uint64_t, uint64_t, unint64_t), uint64_t, unint64_t))*v455)(v457, v286, v36);
    v294 = *(char **)(*(void *)(v451 + 120) + OBJC_IVAR____TtC8Freeform8CRLBoard_rootContainer);
    uint64_t v295 = v286;
    v296 = *(void (**)(uint64_t))(**(void **)&v294[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData]
                                          + 256);
    v297 = v294;
    uint64_t v298 = swift_retain();
    v299 = v452;
    v296(v298);
    unint64_t v36 = v459;
    swift_release();

    char v300 = static UUID.== infix(_:_:)();
    v301 = *(void (**)(uint64_t, unint64_t))v458;
    (*(void (**)(char *, unint64_t))v458)(v299, v36);
    if ((v300 & 1) == 0)
    {
      uint64_t v306 = v425;
      sub_100522E9C(v295 + *(int *)(v426 + 20), v425, (uint64_t *)&unk_101674520);
      if ((*(unsigned int (**)(uint64_t, uint64_t, unint64_t))v441)(v306, 1, v36) == 1)
      {
        sub_100522F00(v306, (uint64_t *)&unk_101674520);
        sub_1005057FC((uint64_t *)&unk_101672B40);
        uint64_t v384 = swift_initStackObject();
        *(_OWORD *)(v384 + 16) = xmmword_10117E810;
        uint64_t v385 = UUID.uuidString.getter();
        uint64_t v387 = v386;
        *(void *)(v384 + 56) = &type metadata for String;
        *(void *)(v384 + 64) = sub_100528BE4();
        *(void *)(v384 + 32) = v385;
        *(void *)(v384 + 40) = v387;
        sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"_processQueuedIncomingUpdatesIntoCommand(_:_:)", 46, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Sync/RealTime/CRLBoardRealTimeChangeCoordinator.swift", 107, 2, 549, (uint64_t)"Non-rootContainerItem board item missing parentContainerUUID, %@", 64, 2u, v384);
        sub_100586FD4(v384, (uint64_t)"Non-rootContainerItem board item missing parentContainerUUID, %@");
        v382 = (double *)v384;
        uint64_t v383 = 549;
LABEL_177:
        sub_1005871AC((uint64_t)v382, (uint64_t)"_processQueuedIncomingUpdatesIntoCommand(_:_:)", 46, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Sync/RealTime/CRLBoardRealTimeChangeCoordinator.swift", 107, 2, v383);
        SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v388, v389);
        _assertionFailure(_:_:file:line:flags:)();
        __break(1u);
LABEL_178:
        KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
        __break(1u);
LABEL_179:
        KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
        __break(1u);
        JUMPOUT(0x100E9AA10);
      }
      (*v440)((uint64_t)v450, v306, v36);
      v307 = v457;
      uint64_t v308 = sub_100CFBB94((uint64_t)v457);
      swift_unknownObjectRelease();
      uint64_t v309 = (uint64_t)v424;
      ((void (*)(char *, void (**)(uint64_t, uint64_t, uint64_t, unint64_t), unint64_t))v293)(v424, v307, v36);
      if (v308)
      {
        int v310 = 1;
      }
      else
      {
        uint64_t v311 = (uint64_t)v466;
        swift_bridgeObjectRetain();
        int v310 = sub_1006E3E24(v309, v311);
        swift_bridgeObjectRelease();
      }
      uint64_t v291 = v446;
      v301(v309, v36);
      uint64_t v312 = (uint64_t)v450;
      uint64_t v313 = sub_100CFBB94((uint64_t)v450);
      swift_unknownObjectRelease();
      uint64_t v314 = (uint64_t)v436;
      ((void (*)(char *, uint64_t, unint64_t))v293)(v436, v312, v36);
      if (v313)
      {
        v301(v314, v36);
        unint64_t v303 = v454;
        if (v310)
        {
LABEL_110:
          sub_100EA1E6C(v291, v422, type metadata accessor for CRLBoardItemPeerSyncUpdate);
          unint64_t v315 = (unint64_t)v465;
          char v316 = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v290 = (uint64_t)v445;
          if ((v316 & 1) == 0) {
            unint64_t v315 = sub_100F635A4(0, *(void *)(v315 + 16) + 1, 1, v315);
          }
          unint64_t v318 = *(void *)(v315 + 16);
          unint64_t v317 = *(void *)(v315 + 24);
          if (v318 >= v317 >> 1) {
            unint64_t v315 = sub_100F635A4(v317 > 1, v318 + 1, 1, v315);
          }
          *(void *)(v315 + 16) = v318 + 1;
          v292 = v442;
          sub_100EA1EF0(v422, v315 + v444 + v318 * (void)v442, type metadata accessor for CRLBoardItemPeerSyncUpdate);
          v465 = (double *)v315;
LABEL_95:
          v301((uint64_t)v450, v36);
          goto LABEL_96;
        }
      }
      else
      {
        uint64_t v319 = (uint64_t)v466;
        swift_bridgeObjectRetain();
        int v320 = sub_1006E3E24(v314, v319);
        swift_bridgeObjectRelease();
        v301((uint64_t)v436, v36);
        unint64_t v303 = v454;
        if (v310 & v320) {
          goto LABEL_110;
        }
      }
      sub_100EA1E6C(v291, v423, type metadata accessor for CRLBoardItemPeerSyncUpdate);
      unint64_t v321 = (unint64_t)v464;
      char v322 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v290 = (uint64_t)v445;
      if ((v322 & 1) == 0) {
        unint64_t v321 = sub_100F635A4(0, *(void *)(v321 + 16) + 1, 1, v321);
      }
      unint64_t v324 = *(void *)(v321 + 16);
      unint64_t v323 = *(void *)(v321 + 24);
      if (v324 >= v323 >> 1) {
        unint64_t v321 = sub_100F635A4(v323 > 1, v324 + 1, 1, v321);
      }
      *(void *)(v321 + 16) = v324 + 1;
      v292 = v442;
      sub_100EA1EF0(v423, v321 + v444 + v324 * (void)v442, type metadata accessor for CRLBoardItemPeerSyncUpdate);
      v464 = (double *)v321;
      goto LABEL_95;
    }
    uint64_t v291 = v446;
    sub_100EA1E6C(v446, v443, type metadata accessor for CRLBoardItemPeerSyncUpdate);
    unint64_t v302 = (unint64_t)v465;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v302 = sub_100F635A4(0, *(void *)(v302 + 16) + 1, 1, v302);
    }
    uint64_t v290 = (uint64_t)v445;
    unint64_t v303 = v454;
    unint64_t v305 = *(void *)(v302 + 16);
    unint64_t v304 = *(void *)(v302 + 24);
    if (v305 >= v304 >> 1) {
      unint64_t v302 = sub_100F635A4(v304 > 1, v305 + 1, 1, v302);
    }
    *(void *)(v302 + 16) = v305 + 1;
    v292 = v442;
    sub_100EA1EF0(v443, v302 + v444 + v305 * (void)v442, type metadata accessor for CRLBoardItemPeerSyncUpdate);
    v465 = (double *)v302;
LABEL_96:
    v301((uint64_t)v457, v36);
    uint64_t v286 = v447;
    sub_100EA1FC0(v447, type metadata accessor for CRLBoardItemDeltaChange);
    sub_100EA1FC0(v291, type metadata accessor for CRLBoardItemPeerSyncUpdate);
    uint64_t v287 = (uint64_t)v292 + (void)v453;
    unint64_t v285 = v303 - 1;
    if (v285) {
      continue;
    }
    break;
  }
  swift_bridgeObjectRelease();
  uint64_t v141 = v428;
LABEL_121:
  uint64_t v325 = swift_bridgeObjectRetain();
  sub_1006E21B4(v325);
  v326 = v465;
  if (*((void *)v465 + 2))
  {
    v327 = (objc_class *)type metadata accessor for CRLCommandApplyPeerSyncUpdates();
    v328 = (char *)objc_allocWithZone(v327);
    *(void *)&v328[OBJC_IVAR____TtC8Freeform30CRLCommandApplyPeerSyncUpdates_updates] = v326;
    v463.receiver = v328;
    v463.super_class = v327;
    swift_bridgeObjectRetain();
    uint64_t v147 = [super init];
    swift_bridgeObjectRetain();
    sub_1006E21B4((uint64_t)v141);
  }
  else
  {
    uint64_t v329 = *((void *)v141 + 2);
    if (v329)
    {
      uint64_t v330 = (uint64_t)v141
           + ((*(unsigned __int8 *)(v393 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v393 + 80));
      uint64_t v331 = *(void *)(v393 + 72);
      swift_bridgeObjectRetain();
      v332 = _swiftEmptyArrayStorage;
      v458 = _swiftEmptyArrayStorage;
      uint64_t v333 = (uint64_t)v397;
      do
      {
        sub_100EA1E6C(v330, v333, type metadata accessor for CRLBoardItemPeerSyncUpdate);
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
          case 3u:
            v335 = type metadata accessor for CRLBoardItemPeerSyncUpdate;
            goto LABEL_126;
          case 2u:
            swift_release();
            break;
          case 4u:
            char v336 = *(unsigned char *)v333;
            uint64_t v337 = *(void *)(v333 + 8);
            unint64_t v338 = *(void *)(v333 + 16);
            sub_100510D4C(v337, v338);
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              v332 = sub_100F65130(0, *((void *)v332 + 2) + 1, 1, v332);
            }
            unint64_t v340 = *((void *)v332 + 2);
            unint64_t v339 = *((void *)v332 + 3);
            if (v340 >= v339 >> 1) {
              v332 = sub_100F65130((double *)(v339 > 1), v340 + 1, 1, v332);
            }
            *((void *)v332 + 2) = v340 + 1;
            v341 = &v332[4 * v340];
            *((unsigned char *)v341 + 32) = v336;
            *((void *)v341 + 5) = v337;
            *((void *)v341 + 6) = v338;
            *((unsigned char *)v341 + 56) = 1;
            goto LABEL_141;
          case 5u:
            char v342 = *(unsigned char *)v333;
            uint64_t v337 = *(void *)(v333 + 8);
            unint64_t v338 = *(void *)(v333 + 16);
            sub_100510D4C(v337, v338);
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              v458 = sub_100F65008(0, *((void *)v458 + 2) + 1, 1, v458);
            }
            unint64_t v344 = *((void *)v458 + 2);
            unint64_t v343 = *((void *)v458 + 3);
            if (v344 >= v343 >> 1) {
              v458 = sub_100F65008((double *)(v343 > 1), v344 + 1, 1, v458);
            }
            v345 = v458;
            *((void *)v458 + 2) = v344 + 1;
            v346 = &v345[3 * v344];
            *((unsigned char *)v346 + 32) = v342;
            *((void *)v346 + 5) = v337;
            *((void *)v346 + 6) = v338;
LABEL_141:
            sub_100510084(v337, v338);
            uint64_t v333 = (uint64_t)v397;
            break;
          default:
            uint64_t v334 = sub_1005057FC(&qword_1016A0650);
            sub_100510084(*(void *)(v333 + *(int *)(v334 + 48) + 24), *(void *)(v333 + *(int *)(v334 + 48) + 32));
            v335 = type metadata accessor for CRLGloballyScopedBoardIdentifier;
LABEL_126:
            sub_100EA1FC0(v333, v335);
            break;
        }
        v330 += v331;
        --v329;
      }
      while (v329);
      swift_bridgeObjectRelease();
      v347 = (objc_class *)type metadata accessor for CRLCommandApplyBoardAuxiliaryPeerSyncUpdates();
      v348 = (char *)objc_allocWithZone(v347);
      swift_unknownObjectWeakInit();
      *(void *)&v348[OBJC_IVAR____TtC8Freeform44CRLCommandApplyBoardAuxiliaryPeerSyncUpdates_updates] = v332;
      *(void *)&v348[OBJC_IVAR____TtC8Freeform44CRLCommandApplyBoardAuxiliaryPeerSyncUpdates_legacyUpdates] = v458;
      swift_unknownObjectWeakAssign();
      v460.receiver = v348;
      v460.super_class = v347;
      uint64_t v147 = (uint64_t)[super init];
      unint64_t v36 = v459;
    }
    else
    {
      uint64_t v147 = 0;
    }
  }
  uint64_t v142 = (uint64_t)v464;
  uint64_t v138 = (uint64_t)v435;
  if (*((void *)v464 + 2))
  {
    if (qword_10166FBA0 == -1) {
      goto LABEL_146;
    }
    goto LABEL_173;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_168:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v147;
}

uint64_t sub_100E9AA58(uint64_t a1, uint64_t a2, unint64_t *a3)
{
  uint64_t v5 = type metadata accessor for CRLBoardItemPeerSyncUpdate(0);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5 - 8, v7);
  uint64_t v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100EA1E6C(a2, (uint64_t)v9, type metadata accessor for CRLBoardItemPeerSyncUpdate);
  unint64_t v10 = *a3;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a3 = v10;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    unint64_t v10 = sub_100F635A4(0, *(void *)(v10 + 16) + 1, 1, v10);
    *a3 = v10;
  }
  unint64_t v13 = *(void *)(v10 + 16);
  unint64_t v12 = *(void *)(v10 + 24);
  if (v13 >= v12 >> 1)
  {
    unint64_t v10 = sub_100F635A4(v12 > 1, v13 + 1, 1, v10);
    *a3 = v10;
  }
  *(void *)(v10 + 16) = v13 + 1;
  return sub_100EA1EF0((uint64_t)v9, v10+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(void *)(v6 + 72) * v13, type metadata accessor for CRLBoardItemPeerSyncUpdate);
}

uint64_t sub_100E9ABC4(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t a4)
{
  v25[0] = a1;
  v25[1] = a4;
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6, v8);
  unint64_t v10 = (char *)v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11, v12);
  uint64_t v14 = (char *)v25 - v13;
  uint64_t v15 = type metadata accessor for CRLBoardItemPeerSyncUpdate(0);
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15 - 8, v17);
  uint64_t v19 = (char *)v25 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100EA1E6C(a2, (uint64_t)v19, type metadata accessor for CRLBoardItemPeerSyncUpdate);
  unint64_t v20 = *a3;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a3 = v20;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    unint64_t v20 = sub_100F635A4(0, *(void *)(v20 + 16) + 1, 1, v20);
    *a3 = v20;
  }
  unint64_t v23 = *(void *)(v20 + 16);
  unint64_t v22 = *(void *)(v20 + 24);
  if (v23 >= v22 >> 1)
  {
    unint64_t v20 = sub_100F635A4(v22 > 1, v23 + 1, 1, v20);
    *a3 = v20;
  }
  *(void *)(v20 + 16) = v23 + 1;
  sub_100EA1EF0((uint64_t)v19, v20+ ((*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80))+ *(void *)(v16 + 72) * v23, type metadata accessor for CRLBoardItemPeerSyncUpdate);
  (*(void (**)(char *, void, uint64_t))(v7 + 16))(v10, v25[0], v6);
  sub_100CB4BC8((uint64_t)v14, v10);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v14, v6);
}

uint64_t sub_100E9AE28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[9] = a4;
  v5[10] = a5;
  v5[8] = a1;
  return _swift_task_switch(sub_100E9AE4C, 0, 0);
}

uint64_t sub_100E9AE4C()
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  *(void *)(v0 + 88) = Strong;
  if (Strong)
  {
    return _swift_task_switch(sub_100E9AF14, Strong, 0);
  }
  else
  {
    **(unsigned char **)(v0 + 64) = 1;
    uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
    return v2();
  }
}

uint64_t sub_100E9AF14()
{
  uint64_t v1 = *(void *)(v0 + 80);
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_100F4E4A4(0, 0, v1);
  swift_endAccess();
  swift_bridgeObjectRelease();
  swift_release();
  return _swift_task_switch(sub_100E9AFD4, 0, 0);
}

uint64_t sub_100E9AFD4()
{
  **(unsigned char **)(v0 + 64) = *(void *)(v0 + 88) == 0;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100E9AFFC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_100EA1E6C(a1, a2, type metadata accessor for CRLBoardItemPeerSyncUpdate);
  uint64_t v3 = type metadata accessor for CRLBoardItemPeerSyncUpdate(0);
  uint64_t v4 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56);

  return v4(a2, 0, 1, v3);
}

uint64_t sub_100E9B084@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_1005057FC((uint64_t *)&unk_101674520);
  __chkstk_darwin(v2 - 8, v3);
  uint64_t v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100EB4EE8((uint64_t)v5);
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6);
  if (result != 1) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v7 + 32))(a1, v5, v6);
  }
  __break(1u);
  return result;
}

uint64_t sub_100E9B184@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for CRLBoardItemDeltaChange(0);
  __chkstk_darwin(v4, v5);
  uint64_t v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for CRLBoardItemPeerSyncUpdate(0);
  __chkstk_darwin(v8, v9);
  uint64_t v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100EA1E6C(a1, (uint64_t)v11, type metadata accessor for CRLBoardItemPeerSyncUpdate);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_100EA1EF0((uint64_t)v11, (uint64_t)v7, type metadata accessor for CRLBoardItemDeltaChange);
      sub_100522E9C((uint64_t)&v7[*(int *)(v4 + 20)], a2, (uint64_t *)&unk_101674520);
      uint64_t v17 = type metadata accessor for CRLBoardItemDeltaChange;
      uint64_t v18 = (uint64_t)v7;
      return sub_100EA1FC0(v18, v17);
    case 2u:
      (*(void (**)(void))(**(void **)v11 + 264))();
      return swift_release();
    case 3u:
      uint64_t v19 = type metadata accessor for UUID();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(a2, 1, 1, v19);
      uint64_t v16 = type metadata accessor for CRLBoardItemPeerSyncUpdate;
      goto LABEL_7;
    case 4u:
    case 5u:
      sub_100EA1FC0((uint64_t)v11, type metadata accessor for CRLBoardItemPeerSyncUpdate);
      uint64_t v12 = type metadata accessor for UUID();
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(a2, 1, 1, v12);
    default:
      uint64_t v14 = sub_1005057FC(&qword_1016A0650);
      sub_100510084(*(void *)&v11[*(int *)(v14 + 48) + 24], *(void *)&v11[*(int *)(v14 + 48) + 32]);
      uint64_t v15 = type metadata accessor for UUID();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(a2, 1, 1, v15);
      uint64_t v16 = type metadata accessor for CRLGloballyScopedBoardIdentifier;
LABEL_7:
      uint64_t v17 = v16;
      uint64_t v18 = (uint64_t)v11;
      return sub_100EA1FC0(v18, v17);
  }
}

void sub_100E9B47C(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1005057FC(&qword_101672BB0);
  __chkstk_darwin(v4 - 8, v5);
  uint64_t v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = OBJC_IVAR____TtC8Freeform33CRLBoardRealTimeChangeCoordinator_pushCommandToCommandControllerTask;
  if (*(void *)(v1 + OBJC_IVAR____TtC8Freeform33CRLBoardRealTimeChangeCoordinator_pushCommandToCommandControllerTask))
  {
    swift_retain();
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"pushUpdatesToCommandController(_:)", 34, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Sync/RealTime/CRLBoardRealTimeChangeCoordinator.swift", 107, 2, 697, (uint64_t)"expected nil value, but non-nil found", 37, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"pushUpdatesToCommandController(_:)", 34, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Sync/RealTime/CRLBoardRealTimeChangeCoordinator.swift", 107, 2, 697);
    swift_release();
  }
  if (*(void *)(a1 + 16))
  {
    uint64_t v9 = type metadata accessor for TaskPriority();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v7, 1, 1, v9);
    uint64_t v10 = swift_allocObject();
    swift_weakInit();
    type metadata accessor for MainActor();
    swift_retain();
    swift_bridgeObjectRetain();
    uint64_t v11 = static MainActor.shared.getter();
    uint64_t v12 = (void *)swift_allocObject();
    v12[2] = v11;
    v12[3] = &protocol witness table for MainActor;
    v12[4] = v10;
    v12[5] = a1;
    swift_release();
    *(void *)(v2 + v8) = sub_1005912D0((uint64_t)v7, (uint64_t)&unk_1016A0660, (uint64_t)v12);
    swift_release();
  }
}

uint64_t sub_100E9B6B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[51] = a4;
  v5[52] = a5;
  type metadata accessor for CRLBoardItemDeltaChange(0);
  v5[53] = swift_task_alloc();
  type metadata accessor for CRLGloballyScopedBoardIdentifier(0);
  v5[54] = swift_task_alloc();
  sub_1005057FC((uint64_t *)&unk_101674520);
  v5[55] = swift_task_alloc();
  v5[56] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for CRLBoardItemPeerSyncUpdate(0);
  v5[57] = v6;
  v5[58] = *(void *)(v6 - 8);
  v5[59] = swift_task_alloc();
  v5[60] = swift_task_alloc();
  v5[61] = swift_task_alloc();
  v5[62] = swift_task_alloc();
  v5[63] = swift_task_alloc();
  sub_1005057FC(&qword_101672BB0);
  v5[64] = swift_task_alloc();
  type metadata accessor for MainActor();
  v5[65] = static MainActor.shared.getter();
  uint64_t v8 = dispatch thunk of Actor.unownedExecutor.getter();
  v5[66] = v8;
  v5[67] = v7;
  return _swift_task_switch(sub_100E9B8AC, v8, v7);
}

uint64_t sub_100E9B8AC()
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  *(void *)(v0 + 544) = Strong;
  if (!Strong)
  {
LABEL_90:
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v123 = *(uint64_t (**)(void))(v0 + 8);
    return v123();
  }
  uint64_t v2 = Strong;
  uint64_t v3 = swift_unknownObjectWeakLoadStrong();
  *(void *)(v0 + 552) = v3;
  if (!v3)
  {
    uint64_t v7 = *(void *)(v0 + 512);
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"pushUpdatesToCommandController(_:)", 34, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Sync/RealTime/CRLBoardRealTimeChangeCoordinator.swift", 107, 2, 709, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"pushUpdatesToCommandController(_:)", 34, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Sync/RealTime/CRLBoardRealTimeChangeCoordinator.swift", 107, 2, 709);
    swift_release();
    uint64_t v8 = type metadata accessor for TaskPriority();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v7, 1, 1, v8);
    uint64_t v9 = swift_allocObject();
    *(void *)(v9 + 16) = 0;
    *(void *)(v9 + 24) = 0;
    *(void *)(v9 + 32) = v2;
    *(unsigned char *)(v9 + 40) = 0;
    swift_retain();
    sub_100B107F4(v7, (uint64_t)&unk_1016A0670, v9);
    swift_release();
    sub_100522F00(v7, &qword_101672BB0);
    goto LABEL_90;
  }
  uint64_t v4 = v3;
  *(void *)(v0 + 376) = _swiftEmptyArrayStorage;
  *(void *)(v0 + 400) = _swiftEmptyArrayStorage;
  uint64_t v5 = *(void *)(v2 + OBJC_IVAR____TtC8Freeform33CRLBoardRealTimeChangeCoordinator_suspendResumeCoordinatorState);
  uint64_t v6 = *(void *)(v5 + 48);
  if (*(unsigned char *)(v5 + 40))
  {
    if (v6 <= 0)
    {
LABEL_45:
      uint64_t v55 = *(void *)(v0 + 416);
      swift_release();
      *(void *)(v0 + 400) = v55;
      swift_bridgeObjectRetain();
      goto LABEL_53;
    }
  }
  else if (v6 <= 0)
  {
    swift_beginAccess();
    if (!*(void *)(*(void *)(v5 + 72) + 16)) {
      goto LABEL_45;
    }
  }
  uint64_t v10 = *(void *)(v4 + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_suspendResumeCoordinator);
  if (!v10)
  {
    __break(1u);
    JUMPOUT(0x100E9CEB0);
  }
  *(void *)(v0 + 560) = *(void *)(v10 + 32);
  if (*(unsigned char *)(v10 + 40) == 1)
  {
    if (qword_10166FBA0 != -1) {
      swift_once();
    }
    uint64_t v11 = *(void *)(v0 + 416);
    swift_beginAccess();
    uint64_t v12 = (void *)static OS_os_log.realTimeSync;
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_10117E810;
    int64_t v13 = *(void *)(v11 + 16);
    if (v13)
    {
      uint64_t v129 = v2;
      uint64_t v132 = *(void *)(v0 + 496);
      uint64_t v14 = *(void *)(v0 + 464);
      uint64_t v15 = *(void *)(v0 + 416);
      uint64_t v126 = v12;
      id v16 = v12;
      sub_1006BB504(0, v13, 0);
      uint64_t v17 = v15 + ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80));
      uint64_t v18 = *(void *)(v14 + 72);
      do
      {
        uint64_t v19 = *(void *)(v0 + 496);
        uint64_t v20 = *(void *)(v0 + 504);
        sub_100EA1E6C(v17, v20, type metadata accessor for CRLBoardItemPeerSyncUpdate);
        sub_100EA1E6C(v20, v19, type metadata accessor for CRLBoardItemPeerSyncUpdate);
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
            uint64_t v29 = *(void *)(v0 + 448);
            uint64_t v30 = *(void *)(v0 + 424);
            sub_100EA1EF0(*(void *)(v0 + 496), v30, type metadata accessor for CRLBoardItemDeltaChange);
            uint64_t v22 = type metadata accessor for UUID();
            uint64_t v23 = *(void *)(v22 - 8);
            (*(void (**)(uint64_t, uint64_t, uint64_t))(v23 + 16))(v29, v30, v22);
            sub_100EA1FC0(v30, type metadata accessor for CRLBoardItemDeltaChange);
            (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v23 + 56))(v29, 0, 1, v22);
            break;
          case 2u:
            uint64_t v24 = *(void *)(v0 + 448);
            (*(void (**)(void))(***(void ***)(v0 + 496) + 256))();
            swift_release();
            uint64_t v22 = type metadata accessor for UUID();
            uint64_t v23 = *(void *)(v22 - 8);
            uint64_t v25 = v23;
            goto LABEL_20;
          case 3u:
            uint64_t v38 = *(void *)(v0 + 496);
            uint64_t v39 = *(void *)(v0 + 448);
            uint64_t v22 = type metadata accessor for UUID();
            uint64_t v23 = *(void *)(v22 - 8);
            (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v23 + 56))(v39, 1, 1, v22);
            sub_100EA1FC0(v38, type metadata accessor for CRLBoardItemPeerSyncUpdate);
            break;
          case 4u:
          case 5u:
            uint64_t v21 = *(void *)(v0 + 448);
            sub_100510084(*(void *)(v132 + 8), *(void *)(v132 + 16));
            uint64_t v22 = type metadata accessor for UUID();
            uint64_t v23 = *(void *)(v22 - 8);
            (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v23 + 56))(v21, 1, 1, v22);
            break;
          default:
            uint64_t v26 = *(void *)(v0 + 496);
            uint64_t v24 = *(void *)(v0 + 448);
            uint64_t v27 = *(void *)(v0 + 432);
            uint64_t v28 = sub_1005057FC(&qword_1016A0650);
            sub_100510084(*(void *)(v26 + *(int *)(v28 + 48) + 24), *(void *)(v26 + *(int *)(v28 + 48) + 32));
            sub_100EA1EF0(v26, v27, type metadata accessor for CRLGloballyScopedBoardIdentifier);
            uint64_t v22 = type metadata accessor for UUID();
            uint64_t v23 = *(void *)(v22 - 8);
            (*(void (**)(uint64_t, uint64_t, uint64_t))(v23 + 16))(v24, v27, v22);
            sub_100EA1FC0(v27, type metadata accessor for CRLGloballyScopedBoardIdentifier);
            uint64_t v25 = v23;
LABEL_20:
            (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v25 + 56))(v24, 0, 1, v22);
            break;
        }
        uint64_t v31 = *(void *)(v0 + 448);
        type metadata accessor for UUID();
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v23 + 48))(v31, 1, v22) == 1)
        {
          sub_100522F00(v31, (uint64_t *)&unk_101674520);
          uint64_t v32 = 0;
          unint64_t v33 = 0xE000000000000000;
        }
        else
        {
          uint64_t v32 = UUID.uuidString.getter();
          unint64_t v33 = v34;
          (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v31, v22);
        }
        sub_100EA1FC0(*(void *)(v0 + 504), type metadata accessor for CRLBoardItemPeerSyncUpdate);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          sub_1006BB504(0, *(void *)&_swiftEmptyArrayStorage[2] + 1, 1);
        }
        double v36 = _swiftEmptyArrayStorage[2];
        double v35 = _swiftEmptyArrayStorage[3];
        if (*(void *)&v36 >= *(void *)&v35 >> 1) {
          sub_1006BB504(*(void *)&v35 > 1uLL, *(void *)&v36 + 1, 1);
        }
        *(void *)&_swiftEmptyArrayStorage[2] = *(void *)&v36 + 1;
        uint64_t v37 = &_swiftEmptyArrayStorage[2 * *(void *)&v36];
        *((void *)v37 + 4) = v32;
        *((void *)v37 + 5) = v33;
        v17 += v18;
        --v13;
      }
      while (v13);
      uint64_t v12 = v126;
      uint64_t v2 = v129;
    }
    else
    {
      id v58 = v12;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(void *)(v0 + 392) = _swiftEmptyArrayStorage;
    sub_1005057FC((uint64_t *)&unk_1016773F0);
    sub_100523288((unint64_t *)&qword_101672620, (uint64_t *)&unk_1016773F0);
    uint64_t v59 = BidirectionalCollection<>.joined(separator:)();
    uint64_t v61 = v60;
    swift_bridgeObjectRelease();
    *(void *)(inited + 56) = &type metadata for String;
    *(void *)(inited + 64) = sub_100528BE4();
    *(void *)(inited + 32) = v59;
    *(void *)(inited + 40) = v61;
    uint64_t v62 = static os_log_type_t.default.getter();
    sub_100BAC898((uint64_t)v12, (uint64_t)&_mh_execute_header, v62, (uint64_t)"isIncomingSuspended, updates enqueued: %@", 41, 2, inited);
    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();

    uint64_t v56 = sub_100E9CEE0;
    uint64_t v57 = v2;
  }
  else
  {
    uint64_t v130 = v2;
    uint64_t v40 = *(void *)(v0 + 416);
    swift_retain();
    uint64_t v41 = sub_100EA19B0(v40, v10);
    uint64_t v43 = v42;
    swift_release();
    sub_1006E21B4((uint64_t)v41);
    sub_1006E21B4(v43);
    uint64_t v44 = *(void *)(v0 + 376);
    uint64_t v45 = *(void *)(v44 + 16);
    if (!v45)
    {
      swift_release();
      uint64_t v55 = *(void *)(v0 + 400);
LABEL_53:
      uint64_t v63 = *(void **)(v0 + 552);
      uint64_t v64 = *(void *)(v0 + 544);
      if (!*(void *)(v55 + 16))
      {
        uint64_t v83 = *(void *)(v0 + 512);
        swift_bridgeObjectRelease();

        swift_bridgeObjectRelease();
        uint64_t v84 = type metadata accessor for TaskPriority();
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v84 - 8) + 56))(v83, 1, 1, v84);
        uint64_t v85 = swift_allocObject();
        *(void *)(v85 + 16) = 0;
        *(void *)(v85 + 24) = 0;
        *(void *)(v85 + 32) = v64;
        *(unsigned char *)(v85 + 40) = 0;
        swift_retain();
        sub_100B107F4(v83, (uint64_t)&unk_1016A0688, v85);
        swift_release();
        uint64_t v82 = v83;
        goto LABEL_64;
      }
      uint64_t v65 = swift_bridgeObjectRetain();
      uint64_t v66 = (void *)sub_100E97B80(v65, (uint64_t)v63);
      swift_bridgeObjectRelease();
      if (!v66)
      {
        if (qword_10166FBA0 != -1) {
          swift_once();
        }
        swift_beginAccess();
        uint64_t v86 = (void *)static OS_os_log.realTimeSync;
        sub_1005057FC((uint64_t *)&unk_101672B40);
        uint64_t v87 = swift_initStackObject();
        *(_OWORD *)(v87 + 16) = xmmword_10117E810;
        uint64_t v127 = (void *)v87;
        int64_t v88 = *(void *)(v55 + 16);
        if (v88)
        {
          uint64_t v89 = *(void *)(v0 + 464);
          uint64_t v131 = *(void *)(v0 + 472);
          swift_bridgeObjectRetain();
          uint64_t v125 = v86;
          id v90 = v86;
          sub_1006BB504(0, v88, 0);
          uint64_t v91 = v55 + ((*(unsigned __int8 *)(v89 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v89 + 80));
          uint64_t v133 = *(void *)(v89 + 72);
          do
          {
            uint64_t v92 = *(void *)(v0 + 472);
            uint64_t v93 = *(void *)(v0 + 480);
            sub_100EA1E6C(v91, v93, type metadata accessor for CRLBoardItemPeerSyncUpdate);
            sub_100EA1E6C(v93, v92, type metadata accessor for CRLBoardItemPeerSyncUpdate);
            switch(swift_getEnumCaseMultiPayload())
            {
              case 1u:
                uint64_t v102 = *(void *)(v0 + 440);
                uint64_t v103 = *(void *)(v0 + 424);
                sub_100EA1EF0(*(void *)(v0 + 472), v103, type metadata accessor for CRLBoardItemDeltaChange);
                uint64_t v95 = type metadata accessor for UUID();
                uint64_t v96 = *(void *)(v95 - 8);
                (*(void (**)(uint64_t, uint64_t, uint64_t))(v96 + 16))(v102, v103, v95);
                sub_100EA1FC0(v103, type metadata accessor for CRLBoardItemDeltaChange);
                (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v96 + 56))(v102, 0, 1, v95);
                break;
              case 2u:
                uint64_t v98 = *(void *)(v0 + 440);
                (*(void (**)(void))(***(void ***)(v0 + 472) + 256))();
                swift_release();
                uint64_t v95 = type metadata accessor for UUID();
                uint64_t v96 = *(void *)(v95 - 8);
                uint64_t v101 = v96;
                goto LABEL_74;
              case 3u:
                uint64_t v111 = *(void *)(v0 + 472);
                uint64_t v112 = *(void *)(v0 + 440);
                uint64_t v95 = type metadata accessor for UUID();
                uint64_t v96 = *(void *)(v95 - 8);
                (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v96 + 56))(v112, 1, 1, v95);
                sub_100EA1FC0(v111, type metadata accessor for CRLBoardItemPeerSyncUpdate);
                break;
              case 4u:
              case 5u:
                uint64_t v94 = *(void *)(v0 + 440);
                sub_100510084(*(void *)(v131 + 8), *(void *)(v131 + 16));
                uint64_t v95 = type metadata accessor for UUID();
                uint64_t v96 = *(void *)(v95 - 8);
                (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v96 + 56))(v94, 1, 1, v95);
                break;
              default:
                uint64_t v97 = *(void *)(v0 + 472);
                uint64_t v99 = *(void *)(v0 + 432);
                uint64_t v98 = *(void *)(v0 + 440);
                uint64_t v100 = sub_1005057FC(&qword_1016A0650);
                sub_100510084(*(void *)(v97 + *(int *)(v100 + 48) + 24), *(void *)(v97 + *(int *)(v100 + 48) + 32));
                sub_100EA1EF0(v97, v99, type metadata accessor for CRLGloballyScopedBoardIdentifier);
                uint64_t v95 = type metadata accessor for UUID();
                uint64_t v96 = *(void *)(v95 - 8);
                (*(void (**)(uint64_t, uint64_t, uint64_t))(v96 + 16))(v98, v99, v95);
                sub_100EA1FC0(v99, type metadata accessor for CRLGloballyScopedBoardIdentifier);
                uint64_t v101 = v96;
LABEL_74:
                (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v101 + 56))(v98, 0, 1, v95);
                break;
            }
            uint64_t v104 = *(void *)(v0 + 440);
            type metadata accessor for UUID();
            if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v96 + 48))(v104, 1, v95) == 1)
            {
              sub_100522F00(v104, (uint64_t *)&unk_101674520);
              uint64_t v105 = 0;
              unint64_t v106 = 0xE000000000000000;
            }
            else
            {
              uint64_t v105 = UUID.uuidString.getter();
              unint64_t v106 = v107;
              (*(void (**)(uint64_t, uint64_t))(v96 + 8))(v104, v95);
            }
            sub_100EA1FC0(*(void *)(v0 + 480), type metadata accessor for CRLBoardItemPeerSyncUpdate);
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              sub_1006BB504(0, *(void *)&_swiftEmptyArrayStorage[2] + 1, 1);
            }
            double v109 = _swiftEmptyArrayStorage[2];
            double v108 = _swiftEmptyArrayStorage[3];
            if (*(void *)&v109 >= *(void *)&v108 >> 1) {
              sub_1006BB504(*(void *)&v108 > 1uLL, *(void *)&v109 + 1, 1);
            }
            *(void *)&_swiftEmptyArrayStorage[2] = *(void *)&v109 + 1;
            uint64_t v110 = &_swiftEmptyArrayStorage[2 * *(void *)&v109];
            *((void *)v110 + 4) = v105;
            *((void *)v110 + 5) = v106;
            v91 += v133;
            --v88;
          }
          while (v88);
          swift_bridgeObjectRelease();
          uint64_t v86 = v125;
        }
        else
        {
          id v113 = v86;
        }
        uint64_t v114 = *(void **)(v0 + 552);
        uint64_t v115 = *(void *)(v0 + 544);
        uint64_t v116 = *(void *)(v0 + 512);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        *(void *)(v0 + 384) = _swiftEmptyArrayStorage;
        sub_1005057FC((uint64_t *)&unk_1016773F0);
        sub_100523288((unint64_t *)&qword_101672620, (uint64_t *)&unk_1016773F0);
        uint64_t v117 = BidirectionalCollection<>.joined(separator:)();
        uint64_t v119 = v118;
        swift_bridgeObjectRelease();
        v127[7] = &type metadata for String;
        v127[8] = sub_100528BE4();
        v127[4] = v117;
        v127[5] = v119;
        uint64_t v120 = static os_log_type_t.default.getter();
        sub_100BAC898((uint64_t)v86, (uint64_t)&_mh_execute_header, v120, (uint64_t)"Processed into no command, updates skipped. Will be applied later: %@", 69, 2, (uint64_t)v127);

        swift_setDeallocating();
        sub_1005057FC(&qword_101672B50);
        swift_arrayDestroy();

        uint64_t v121 = type metadata accessor for TaskPriority();
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v121 - 8) + 56))(v116, 1, 1, v121);
        uint64_t v122 = swift_allocObject();
        *(void *)(v122 + 16) = 0;
        *(void *)(v122 + 24) = 0;
        *(void *)(v122 + 32) = v115;
        *(unsigned char *)(v122 + 40) = 0;
        swift_retain();
        sub_100B107F4(v116, (uint64_t)&unk_1016A0678, v122);
        swift_release();
        sub_100522F00(v116, &qword_101672BB0);
        goto LABEL_90;
      }
      uint64_t v67 = *(void *)(v0 + 552);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v68 = *(char **)(v67 + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_commandController);
      uint64_t v69 = (double **)&v68[OBJC_IVAR____TtC8Freeform20CRLCommandController_nonUserCommandQueue];
      swift_beginAccess();
      uint64_t v70 = *v69;
      uint64_t v71 = v68;
      id v72 = v66;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *uint64_t v69 = v70;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        uint64_t v70 = sub_100F62618(0, *((void *)v70 + 2) + 1, 1, v70);
        *uint64_t v69 = v70;
      }
      unint64_t v75 = *((void *)v70 + 2);
      unint64_t v74 = *((void *)v70 + 3);
      if (v75 >= v74 >> 1)
      {
        uint64_t v70 = sub_100F62618((double *)(v74 > 1), v75 + 1, 1, v70);
        *uint64_t v69 = v70;
      }
      *((void *)v70 + 2) = v75 + 1;
      uint64_t v76 = &v70[2 * v75];
      *((void *)v76 + 4) = v72;
      *((unsigned char *)v76 + 40) = 3;
      swift_endAccess();
      sub_10078F194();

      type metadata accessor for CRLCommandApplyPeerSyncUpdates();
      if (swift_dynamicCastClass())
      {
        unint64_t v77 = 17;
        if (qword_10166F2D0 == -1) {
          goto LABEL_61;
        }
      }
      else
      {
        type metadata accessor for CRLCommandApplyBoardAuxiliaryPeerSyncUpdates();
        if (!swift_dynamicCastClass()) {
          goto LABEL_62;
        }
        unint64_t v77 = 19;
        if (qword_10166F2D0 == -1)
        {
LABEL_61:
          CRLAnalyticsOSSignpostManager.endSignpostInterval(for:)(v77, 1);
LABEL_62:
          uint64_t v78 = *(void *)(v0 + 544);
          uint64_t v79 = *(void *)(v0 + 512);

          uint64_t v80 = type metadata accessor for TaskPriority();
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v80 - 8) + 56))(v79, 1, 1, v80);
          uint64_t v81 = swift_allocObject();
          *(void *)(v81 + 16) = 0;
          *(void *)(v81 + 24) = 0;
          *(void *)(v81 + 32) = v78;
          *(unsigned char *)(v81 + 40) = 1;
          swift_retain();
          sub_100B107F4(v79, (uint64_t)&unk_1016A0680, v81);
          swift_release();
          uint64_t v82 = v79;
LABEL_64:
          sub_100522F00(v82, &qword_101672BB0);
          goto LABEL_90;
        }
      }
      swift_once();
      goto LABEL_61;
    }
    uint64_t v46 = (long long *)(v0 + 160);
    uint64_t v47 = *(void *)(v0 + 464);
    uint64_t v48 = v44 + ((*(unsigned __int8 *)(v47 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v47 + 80));
    uint64_t v49 = *(void *)(v47 + 72);
    swift_bridgeObjectRetain();
    uint64_t v50 = _swiftEmptyArrayStorage;
    do
    {
      sub_100EA1E6C(v48, *(void *)(v0 + 488), type metadata accessor for CRLBoardItemPeerSyncUpdate);
      uint64_t v51 = sub_100EB45B4();
      if (v51)
      {
        *(void *)(v0 + 368) = v51;
        sub_1005057FC(&qword_1016A0690);
        sub_100523288(&qword_1016A0698, &qword_1016A0690);
        AnyHashable.init<A>(_:)();
      }
      else
      {
        *(void *)(v0 + 192) = 0;
        long long *v46 = 0u;
        *(_OWORD *)(v0 + 176) = 0u;
      }
      sub_100EA1FC0(*(void *)(v0 + 488), type metadata accessor for CRLBoardItemPeerSyncUpdate);
      if (*(void *)(v0 + 184))
      {
        long long v134 = *v46;
        long long v135 = *(_OWORD *)(v0 + 176);
        uint64_t v136 = *(void *)(v0 + 192);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v50 = sub_100F65260(0, *((void *)v50 + 2) + 1, 1, v50);
        }
        unint64_t v53 = *((void *)v50 + 2);
        unint64_t v52 = *((void *)v50 + 3);
        if (v53 >= v52 >> 1) {
          uint64_t v50 = sub_100F65260((double *)(v52 > 1), v53 + 1, 1, v50);
        }
        *((void *)v50 + 2) = v53 + 1;
        uint64_t v54 = &v50[5 * v53];
        *((void *)v54 + 8) = v136;
        *((_OWORD *)v54 + 2) = v134;
        *((_OWORD *)v54 + 3) = v135;
      }
      else
      {
        sub_100522F00(v0 + 160, &qword_10167B190);
      }
      v48 += v49;
      --v45;
    }
    while (v45);
    swift_bridgeObjectRelease();
    *(void *)(v0 + 568) = sub_100CDEB70((uint64_t)v50);
    swift_bridgeObjectRelease();
    uint64_t v56 = sub_100E9D148;
    uint64_t v57 = v130;
  }
  return _swift_task_switch(v56, v57, 0);
}

uint64_t sub_100E9CEE0()
{
  uint64_t v1 = v0[52];
  *(unsigned char *)(v0[68] + OBJC_IVAR____TtC8Freeform33CRLBoardRealTimeChangeCoordinator_incomingSuspendedCache) = 1;
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_100F4E4A4(0, 0, v1);
  swift_endAccess();
  swift_bridgeObjectRelease();
  uint64_t v2 = v0[67];
  uint64_t v3 = v0[66];
  return _swift_task_switch(sub_100E9CFAC, v3, v2);
}

uint64_t sub_100E9CFAC()
{
  uint64_t v1 = *(void *)(v0 + 544);
  uint64_t v2 = *(void *)(v0 + 512);

  swift_release();
  uint64_t v3 = type metadata accessor for TaskPriority();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56))(v2, 1, 1, v3);
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = 0;
  *(void *)(v4 + 24) = 0;
  *(void *)(v4 + 32) = v1;
  *(unsigned char *)(v4 + 40) = 0;
  swift_retain();
  sub_100B107F4(v2, (uint64_t)&unk_1016A06A0, v4);
  swift_release();
  sub_100522F00(v2, &qword_101672BB0);
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
  return v5();
}

uint64_t sub_100E9D148()
{
  uint64_t v1 = v0[71];
  uint64_t v2 = v0[70];
  uint64_t v3 = v0[68] + OBJC_IVAR____TtC8Freeform33CRLBoardRealTimeChangeCoordinator_incomingSuspendedCache;
  *(unsigned char *)uint64_t v3 = 1;
  *(void *)(v3 + 8) = v1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v3 + 16) = v2;
  *(unsigned char *)(v3 + 24) = 0;
  swift_bridgeObjectRelease();
  uint64_t v4 = v0[67];
  uint64_t v5 = v0[66];
  return _swift_task_switch(sub_100E9D1F8, v5, v4);
}

uint64_t sub_100E9D1F8()
{
  uint64_t v1 = v0[68];
  v0[72] = v0[47];
  swift_bridgeObjectRetain();
  return _swift_task_switch(sub_100E9D26C, v1, 0);
}

uint64_t sub_100E9D26C()
{
  uint64_t v1 = v0[72];
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_100F4E4A4(0, 0, v1);
  swift_endAccess();
  swift_bridgeObjectRelease_n();
  uint64_t v2 = v0[67];
  uint64_t v3 = v0[66];
  return _swift_task_switch(sub_100E9D32C, v3, v2);
}

uint64_t sub_100E9D32C()
{
  swift_release();
  uint64_t v1 = *(void *)(v0 + 400);
  uint64_t v2 = *(void **)(v0 + 552);
  uint64_t v3 = *(void *)(v0 + 544);
  if (*(void *)(v1 + 16))
  {
    uint64_t v4 = swift_bridgeObjectRetain();
    uint64_t v5 = (void *)sub_100E97B80(v4, (uint64_t)v2);
    swift_bridgeObjectRelease();
    if (v5)
    {
      uint64_t v6 = *(void *)(v0 + 552);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v7 = *(char **)(v6 + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_commandController);
      uint64_t v8 = (double **)&v7[OBJC_IVAR____TtC8Freeform20CRLCommandController_nonUserCommandQueue];
      swift_beginAccess();
      uint64_t v9 = *v8;
      uint64_t v10 = v7;
      id v11 = v5;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *uint64_t v8 = v9;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        uint64_t v9 = sub_100F62618(0, *((void *)v9 + 2) + 1, 1, v9);
        *uint64_t v8 = v9;
      }
      unint64_t v14 = *((void *)v9 + 2);
      unint64_t v13 = *((void *)v9 + 3);
      if (v14 >= v13 >> 1)
      {
        uint64_t v9 = sub_100F62618((double *)(v13 > 1), v14 + 1, 1, v9);
        *uint64_t v8 = v9;
      }
      *((void *)v9 + 2) = v14 + 1;
      uint64_t v15 = &v9[2 * v14];
      *((void *)v15 + 4) = v11;
      *((unsigned char *)v15 + 40) = 3;
      swift_endAccess();
      sub_10078F194();

      type metadata accessor for CRLCommandApplyPeerSyncUpdates();
      if (swift_dynamicCastClass())
      {
        unint64_t v16 = 17;
        if (qword_10166F2D0 == -1) {
          goto LABEL_9;
        }
      }
      else
      {
        type metadata accessor for CRLCommandApplyBoardAuxiliaryPeerSyncUpdates();
        if (!swift_dynamicCastClass()) {
          goto LABEL_10;
        }
        unint64_t v16 = 19;
        if (qword_10166F2D0 == -1)
        {
LABEL_9:
          CRLAnalyticsOSSignpostManager.endSignpostInterval(for:)(v16, 1);
LABEL_10:
          uint64_t v17 = *(void *)(v0 + 544);
          uint64_t v18 = *(void *)(v0 + 512);

          uint64_t v19 = type metadata accessor for TaskPriority();
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v18, 1, 1, v19);
          uint64_t v20 = swift_allocObject();
          *(void *)(v20 + 16) = 0;
          *(void *)(v20 + 24) = 0;
          *(void *)(v20 + 32) = v17;
          *(unsigned char *)(v20 + 40) = 1;
          swift_retain();
          uint64_t v21 = &unk_1016A0680;
          goto LABEL_37;
        }
      }
      swift_once();
      goto LABEL_9;
    }
    if (qword_10166FBA0 != -1) {
      swift_once();
    }
    swift_beginAccess();
    uint64_t v23 = (void *)static OS_os_log.realTimeSync;
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_10117E810;
    uint64_t v62 = (void *)inited;
    int64_t v25 = *(void *)(v1 + 16);
    if (v25)
    {
      uint64_t v26 = *(void *)(v0 + 464);
      uint64_t v63 = *(void *)(v0 + 472);
      swift_bridgeObjectRetain();
      uint64_t v61 = v23;
      id v27 = v23;
      sub_1006BB504(0, v25, 0);
      uint64_t v28 = v1 + ((*(unsigned __int8 *)(v26 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80));
      uint64_t v29 = *(void *)(v26 + 72);
      do
      {
        uint64_t v30 = *(void *)(v0 + 472);
        uint64_t v31 = *(void *)(v0 + 480);
        sub_100EA1E6C(v28, v31, type metadata accessor for CRLBoardItemPeerSyncUpdate);
        sub_100EA1E6C(v31, v30, type metadata accessor for CRLBoardItemPeerSyncUpdate);
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
            uint64_t v40 = *(void *)(v0 + 440);
            uint64_t v41 = *(void *)(v0 + 424);
            sub_100EA1EF0(*(void *)(v0 + 472), v41, type metadata accessor for CRLBoardItemDeltaChange);
            uint64_t v33 = type metadata accessor for UUID();
            uint64_t v34 = *(void *)(v33 - 8);
            (*(void (**)(uint64_t, uint64_t, uint64_t))(v34 + 16))(v40, v41, v33);
            sub_100EA1FC0(v41, type metadata accessor for CRLBoardItemDeltaChange);
            (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v34 + 56))(v40, 0, 1, v33);
            break;
          case 2u:
            uint64_t v36 = *(void *)(v0 + 440);
            (*(void (**)(void))(***(void ***)(v0 + 472) + 256))();
            swift_release();
            uint64_t v33 = type metadata accessor for UUID();
            uint64_t v34 = *(void *)(v33 - 8);
            uint64_t v39 = v34;
            goto LABEL_21;
          case 3u:
            uint64_t v49 = *(void *)(v0 + 472);
            uint64_t v50 = *(void *)(v0 + 440);
            uint64_t v33 = type metadata accessor for UUID();
            uint64_t v34 = *(void *)(v33 - 8);
            (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v34 + 56))(v50, 1, 1, v33);
            sub_100EA1FC0(v49, type metadata accessor for CRLBoardItemPeerSyncUpdate);
            break;
          case 4u:
          case 5u:
            uint64_t v32 = *(void *)(v0 + 440);
            sub_100510084(*(void *)(v63 + 8), *(void *)(v63 + 16));
            uint64_t v33 = type metadata accessor for UUID();
            uint64_t v34 = *(void *)(v33 - 8);
            (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v34 + 56))(v32, 1, 1, v33);
            break;
          default:
            uint64_t v35 = *(void *)(v0 + 472);
            uint64_t v37 = *(void *)(v0 + 432);
            uint64_t v36 = *(void *)(v0 + 440);
            uint64_t v38 = sub_1005057FC(&qword_1016A0650);
            sub_100510084(*(void *)(v35 + *(int *)(v38 + 48) + 24), *(void *)(v35 + *(int *)(v38 + 48) + 32));
            sub_100EA1EF0(v35, v37, type metadata accessor for CRLGloballyScopedBoardIdentifier);
            uint64_t v33 = type metadata accessor for UUID();
            uint64_t v34 = *(void *)(v33 - 8);
            (*(void (**)(uint64_t, uint64_t, uint64_t))(v34 + 16))(v36, v37, v33);
            sub_100EA1FC0(v37, type metadata accessor for CRLGloballyScopedBoardIdentifier);
            uint64_t v39 = v34;
LABEL_21:
            (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v39 + 56))(v36, 0, 1, v33);
            break;
        }
        uint64_t v42 = *(void *)(v0 + 440);
        type metadata accessor for UUID();
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v34 + 48))(v42, 1, v33) == 1)
        {
          sub_100522F00(v42, (uint64_t *)&unk_101674520);
          uint64_t v43 = 0;
          unint64_t v44 = 0xE000000000000000;
        }
        else
        {
          uint64_t v43 = UUID.uuidString.getter();
          unint64_t v44 = v45;
          (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v42, v33);
        }
        sub_100EA1FC0(*(void *)(v0 + 480), type metadata accessor for CRLBoardItemPeerSyncUpdate);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          sub_1006BB504(0, *(void *)&_swiftEmptyArrayStorage[2] + 1, 1);
        }
        double v47 = _swiftEmptyArrayStorage[2];
        double v46 = _swiftEmptyArrayStorage[3];
        if (*(void *)&v47 >= *(void *)&v46 >> 1) {
          sub_1006BB504(*(void *)&v46 > 1uLL, *(void *)&v47 + 1, 1);
        }
        *(void *)&_swiftEmptyArrayStorage[2] = *(void *)&v47 + 1;
        uint64_t v48 = &_swiftEmptyArrayStorage[2 * *(void *)&v47];
        *((void *)v48 + 4) = v43;
        *((void *)v48 + 5) = v44;
        v28 += v29;
        --v25;
      }
      while (v25);
      swift_bridgeObjectRelease();
      uint64_t v23 = v61;
    }
    else
    {
      id v51 = v23;
    }
    unint64_t v52 = *(void **)(v0 + 552);
    uint64_t v53 = *(void *)(v0 + 544);
    uint64_t v18 = *(void *)(v0 + 512);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(void *)(v0 + 384) = _swiftEmptyArrayStorage;
    sub_1005057FC((uint64_t *)&unk_1016773F0);
    sub_100523288((unint64_t *)&qword_101672620, (uint64_t *)&unk_1016773F0);
    uint64_t v54 = BidirectionalCollection<>.joined(separator:)();
    uint64_t v56 = v55;
    swift_bridgeObjectRelease();
    v62[7] = &type metadata for String;
    v62[8] = sub_100528BE4();
    v62[4] = v54;
    v62[5] = v56;
    uint64_t v57 = static os_log_type_t.default.getter();
    sub_100BAC898((uint64_t)v23, (uint64_t)&_mh_execute_header, v57, (uint64_t)"Processed into no command, updates skipped. Will be applied later: %@", 69, 2, (uint64_t)v62);

    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();

    uint64_t v58 = type metadata accessor for TaskPriority();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v58 - 8) + 56))(v18, 1, 1, v58);
    uint64_t v20 = swift_allocObject();
    *(void *)(v20 + 16) = 0;
    *(void *)(v20 + 24) = 0;
    *(void *)(v20 + 32) = v53;
    *(unsigned char *)(v20 + 40) = 0;
    swift_retain();
    uint64_t v21 = &unk_1016A0678;
  }
  else
  {
    uint64_t v18 = *(void *)(v0 + 512);
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    uint64_t v22 = type metadata accessor for TaskPriority();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v18, 1, 1, v22);
    uint64_t v20 = swift_allocObject();
    *(void *)(v20 + 16) = 0;
    *(void *)(v20 + 24) = 0;
    *(void *)(v20 + 32) = v3;
    *(unsigned char *)(v20 + 40) = 0;
    swift_retain();
    uint64_t v21 = &unk_1016A0688;
  }
LABEL_37:
  sub_100B107F4(v18, (uint64_t)v21, v20);
  swift_release();
  sub_100522F00(v18, &qword_101672BB0);
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v59 = *(uint64_t (**)(void))(v0 + 8);
  return v59();
}

uint64_t sub_100E9DE24()
{
  swift_unknownObjectWeakDestroy();

  swift_release();
  sub_100EA1FC0(v0 + OBJC_IVAR____TtC8Freeform33CRLBoardRealTimeChangeCoordinator_globallyScopedBoardIdentifier, type metadata accessor for CRLGloballyScopedBoardIdentifier);
  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_defaultActor_destroy();
  return v0;
}

uint64_t sub_100E9DED4()
{
  sub_100E9DE24();

  return swift_defaultActor_deallocate();
}

uint64_t sub_100E9DF00()
{
  return type metadata accessor for CRLBoardRealTimeChangeCoordinator(0);
}

uint64_t type metadata accessor for CRLBoardRealTimeChangeCoordinator(uint64_t a1)
{
  return sub_100512D5C(a1, (uint64_t *)&unk_1016A0398);
}

uint64_t sub_100E9DF28()
{
  uint64_t result = type metadata accessor for CRLBoardIdentifierStorage(319);
  if (v1 <= 0x3F) {
    return swift_updateClassMetadata2();
  }
  return result;
}

uint64_t sub_100E9E01C(uint64_t a1)
{
  v2[158] = v1;
  v2[157] = a1;
  v2[159] = type metadata accessor for CRLBoardAuxiliaryRealTimeChangeRecord();
  v2[160] = swift_task_alloc();
  v2[161] = swift_task_alloc();
  v2[162] = type metadata accessor for CRLBoardAuxiliaryRealTimeChangeRecordLegacy();
  v2[163] = swift_task_alloc();
  v2[164] = swift_task_alloc();
  sub_1005057FC((uint64_t *)&unk_101674520);
  v2[165] = swift_task_alloc();
  uint64_t v3 = type metadata accessor for UUID();
  v2[166] = v3;
  v2[167] = *(void *)(v3 - 8);
  v2[168] = swift_task_alloc();
  v2[169] = swift_task_alloc();
  v2[170] = type metadata accessor for CRLBoardItemDeltaChange(0);
  v2[171] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for CRLBoardItemPeerSyncUpdate(0);
  v2[172] = v4;
  v2[173] = *(void *)(v4 - 8);
  v2[174] = swift_task_alloc();
  v2[175] = swift_task_alloc();
  v2[176] = swift_task_alloc();
  v2[177] = swift_task_alloc();
  v2[178] = swift_task_alloc();
  v2[179] = swift_task_alloc();
  v2[180] = type metadata accessor for CRLGloballyScopedBoardIdentifier(0);
  v2[181] = swift_task_alloc();
  v2[182] = swift_task_alloc();
  v2[183] = swift_task_alloc();
  v2[184] = swift_task_alloc();
  v2[185] = swift_task_alloc();
  v2[186] = swift_task_alloc();
  v2[187] = swift_task_alloc();
  return _swift_task_switch(sub_100E9E2E8, v1, 0);
}

uint64_t sub_100E9E2E8()
{
  unint64_t v2 = *(void *)(v0[157] + 16);
  if (!v2)
  {
    uint64_t v218 = _swiftEmptyArrayStorage;
    goto LABEL_127;
  }
  uint64_t v3 = (uint64_t)(v0 + 113);
  uint64_t v4 = v0 + 118;
  uint64_t v204 = v0[174];
  uint64_t v208 = v0[175];
  uint64_t v215 = v0[173];
  v211 = (int *)v0[170];
  uint64_t v5 = v0[167];
  uint64_t v222 = v0[158]
       + OBJC_IVAR____TtCC8Freeform33CRLBoardRealTimeChangeCoordinator26CRLRealTimeChangeProcessor_globallyScopedBoardIdentifier;
  uint64_t v213 = (void (**)(uint64_t))(v5 + 16);
  uint64_t v210 = (void (**)(uint64_t, uint64_t))(v5 + 8);
  BOOL v209 = (void (**)(uint64_t, uint64_t, uint64_t))(v5 + 32);
  uint64_t v212 = v0[162];
  uint64_t v207 = v0[159];
  uint64_t v6 = swift_bridgeObjectRetain();
  char v214 = 0;
  char v219 = 0;
  unint64_t v7 = 0;
  unint64_t v216 = v2 - 1;
  uint64_t v217 = v6 + 32;
  uint64_t v218 = _swiftEmptyArrayStorage;
  unint64_t v220 = v2;
  uint64_t v221 = (uint64_t)(v0 + 113);
  unint64_t v227 = v0;
  uint64_t v223 = (uint64_t)(v0 + 118);
  while (2)
  {
    if (v7 <= v2) {
      unint64_t v8 = v2;
    }
    else {
      unint64_t v8 = v7;
    }
    unint64_t v224 = v8;
    uint64_t v9 = (uint64_t *)(v217 + 40 * v7);
    unint64_t v10 = v7;
    while (1)
    {
      if (v224 == v10)
      {
        __break(1u);
LABEL_134:
        swift_once();
LABEL_122:
        CRLAnalyticsOSSignpostManager.beginSignpostInterval(for:with:)(17, 1, (uint64_t)_swiftEmptyArrayStorage);
        if ((v1 & 1) == 0) {
          goto LABEL_127;
        }
        goto LABEL_123;
      }
      sub_1005498A4((uint64_t)v9, (uint64_t)v4);
      sub_1005498A4((uint64_t)v4, v3);
      sub_1005057FC(&qword_10169FE80);
      type metadata accessor for CRLBoardRealTimeChangeRecord();
      if (!swift_dynamicCast())
      {
        type metadata accessor for CRLBoardItemRealTimeChangeRecord();
        if (swift_dynamicCast())
        {
          uint64_t v0 = v227;
          uint64_t v30 = v227[184];
          uint64_t v31 = v227[183];
          uint64_t v225 = v227[154];
          uint64_t v32 = v225 + OBJC_IVAR____TtC8Freeform32CRLBoardItemRealTimeChangeRecord_boardIdentifier;
          char v33 = static UUID.== infix(_:_:)();
          unint64_t v1 = (unint64_t)type metadata accessor for CRLGloballyScopedBoardIdentifier;
          uint64_t v203 = v32;
          sub_100EA1E6C(v32, v30, type metadata accessor for CRLGloballyScopedBoardIdentifier);
          sub_100EA1E6C(v222, v31, type metadata accessor for CRLGloballyScopedBoardIdentifier);
          uint64_t v34 = v227[184];
          uint64_t v35 = v227[183];
          if (v33)
          {
            uint64_t v36 = *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20);
            uint64_t v37 = *(void *)(v34 + v36);
            uint64_t v38 = *(void *)(v34 + v36 + 8);
            uint64_t v39 = (void *)(v35 + v36);
            if (v37 == *v39 && v38 == v39[1])
            {
              sub_100EA1FC0(v35, type metadata accessor for CRLGloballyScopedBoardIdentifier);
              sub_100EA1FC0(v34, type metadata accessor for CRLGloballyScopedBoardIdentifier);
LABEL_57:
              if (qword_10166F2D0 != -1) {
                swift_once();
              }
              CRLAnalyticsOSSignpostManager.beginSignpostInterval(for:with:)(18, 1, (uint64_t)_swiftEmptyArrayStorage);
              uint64_t v77 = v225;
              unint64_t v206 = v10;
              if (*(unsigned char *)(v225 + OBJC_IVAR____TtC8Freeform32CRLBoardItemRealTimeChangeRecord_itemCreated) != 1)
              {
                if (*(void *)(v225 + OBJC_IVAR____TtC8Freeform32CRLBoardItemRealTimeChangeRecord_commonCRDTData + 8) >> 60 != 15
                  || *(void *)(v225 + OBJC_IVAR____TtC8Freeform32CRLBoardItemRealTimeChangeRecord_specificCRDTData + 8) >> 60 != 15)
                {
                  sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"applyChanges(_:)", 16, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Sync/RealTime/CRLBoardRealTimeChangeCoordinator.swift", 107, 2, 884, (uint64_t)"Attempting to merge non-delta itemChange with CRL_REALTIMESYNC_SEND_DELTAS enabled", 82, 2u, (uint64_t)_swiftEmptyArrayStorage);
                  uint64_t v77 = v225;
                  sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"applyChanges(_:)", 16, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Sync/RealTime/CRLBoardRealTimeChangeCoordinator.swift", 107, 2, 884);
                }
                uint64_t v202 = v227[177];
                uint64_t v103 = v227[171];
                uint64_t v104 = v227[169];
                uint64_t v105 = v227[166];
                uint64_t v106 = v227[165];
                (*v213)(v104);
                sub_100522E9C(v77 + OBJC_IVAR____TtC8Freeform32CRLBoardItemRealTimeChangeRecord_parentContainerUUID, v106, (uint64_t *)&unk_101674520);
                uint64_t v201 = *(void *)(v77 + OBJC_IVAR____TtC8Freeform32CRLBoardItemRealTimeChangeRecord_minRequiredVersion);
                uint64_t v107 = 0x2000400000000;
                if (!*(unsigned char *)(v77
                               + OBJC_IVAR____TtC8Freeform32CRLBoardItemRealTimeChangeRecord_raw_minRequiredVersionForGoodEnoughFidelity
                               + 8))
                  uint64_t v107 = *(void *)(v77
                                   + OBJC_IVAR____TtC8Freeform32CRLBoardItemRealTimeChangeRecord_raw_minRequiredVersionForGoodEnoughFidelity);
                uint64_t v200 = v107;
                if (*(unsigned char *)(v77
                              + OBJC_IVAR____TtC8Freeform32CRLBoardItemRealTimeChangeRecord_raw_minRequiredVersionForFullFidelity
                              + 8))
                  uint64_t v108 = 0x1000000000000;
                else {
                  uint64_t v108 = *(void *)(v77
                }
                                   + OBJC_IVAR____TtC8Freeform32CRLBoardItemRealTimeChangeRecord_raw_minRequiredVersionForFullFidelity);
                uint64_t v199 = *(void *)(v77 + OBJC_IVAR____TtC8Freeform32CRLBoardItemRealTimeChangeRecord_objectOptions);
                uint64_t v198 = *(void *)(v77 + OBJC_IVAR____TtC8Freeform32CRLBoardItemRealTimeChangeRecord_itemTypeValue);
                uint64_t v109 = *(void *)(v77
                                 + OBJC_IVAR____TtC8Freeform32CRLBoardItemRealTimeChangeRecord_partialCommonCRDTData);
                unint64_t v110 = *(void *)(v77
                                 + OBJC_IVAR____TtC8Freeform32CRLBoardItemRealTimeChangeRecord_partialCommonCRDTData
                                 + 8);
                uint64_t v111 = v77 + OBJC_IVAR____TtC8Freeform32CRLBoardItemRealTimeChangeRecord_partialSpecificCRDTData;
                uint64_t v112 = *(void *)(v77
                                 + OBJC_IVAR____TtC8Freeform32CRLBoardItemRealTimeChangeRecord_partialSpecificCRDTData);
                unint64_t v113 = *(void *)(v111 + 8);
                (*v209)(v103, v104, v105);
                sub_100A2A208(v106, v103 + v211[5]);
                uint64_t v114 = (void *)(v103 + v211[6]);
                *uint64_t v114 = v201;
                v114[1] = v200;
                v114[2] = v108;
                *(void *)(v103 + v211[7]) = v199;
                *(void *)(v103 + v211[8]) = v198;
                uint64_t v115 = (uint64_t *)(v103 + v211[9]);
                *uint64_t v115 = v109;
                v115[1] = v110;
                uint64_t v116 = (uint64_t *)(v103 + v211[10]);
                *uint64_t v116 = v112;
                v116[1] = v113;
                sub_100EA1E6C(v103, v202, type metadata accessor for CRLBoardItemDeltaChange);
                swift_storeEnumTagMultiPayload();
                sub_1005FA2A0(v109, v110);
                sub_1005FA2A0(v112, v113);
                if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                  uint64_t v218 = (double *)sub_100F635A4(0, *((void *)v218 + 2) + 1, 1, (unint64_t)v218);
                }
                unint64_t v118 = *((void *)v218 + 2);
                unint64_t v117 = *((void *)v218 + 3);
                if (v118 >= v117 >> 1) {
                  uint64_t v218 = (double *)sub_100F635A4(v117 > 1, v118 + 1, 1, (unint64_t)v218);
                }
                uint64_t v119 = v227[177];
                *((void *)v218 + 2) = v118 + 1;
                sub_100EA1EF0(v119, (uint64_t)v218+ ((*(unsigned __int8 *)(v215 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v215 + 80))+ *(void *)(v215 + 72) * v118, type metadata accessor for CRLBoardItemPeerSyncUpdate);
                if (qword_10166FBA0 != -1) {
                  swift_once();
                }
                uint64_t v120 = v227[185];
                uint64_t v121 = v227[171];
                swift_beginAccess();
                uint64_t v122 = (void *)static OS_os_log.realTimeSync;
                sub_1005057FC((uint64_t *)&unk_101672B40);
                uint64_t inited = swift_initStackObject();
                *(_OWORD *)(inited + 16) = xmmword_10117D8C0;
                sub_100EA1E6C(v203, v120, type metadata accessor for CRLGloballyScopedBoardIdentifier);
                id v124 = v122;
                uint64_t v125 = String.init<A>(describing:)();
                uint64_t v127 = v126;
                *(void *)(inited + 56) = &type metadata for String;
                unint64_t v128 = sub_100528BE4();
                *(void *)(inited + 64) = v128;
                *(void *)(inited + 32) = v125;
                *(void *)(inited + 40) = v127;
                uint64_t v129 = UUID.uuidString.getter();
                *(void *)(inited + 96) = &type metadata for String;
                *(void *)(inited + 104) = v128;
                *(void *)(inited + 72) = v129;
                *(void *)(inited + 80) = v130;
                uint64_t v131 = static os_log_type_t.default.getter();
                sub_100BAC898((uint64_t)v124, (uint64_t)&_mh_execute_header, v131, (uint64_t)"Received real-time board item data modification. Board: %@, item: %@", 68, 2, inited);
                swift_setDeallocating();
                sub_1005057FC(&qword_101672B50);
                swift_arrayDestroy();

                sub_100EA1FC0(v121, type metadata accessor for CRLBoardItemDeltaChange);
                goto LABEL_93;
              }
              uint64_t v78 = sub_100EA0D60(v225);
              if (v78)
              {
                *(void *)v227[178] = v78;
                swift_storeEnumTagMultiPayload();
                swift_retain();
                if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                  uint64_t v218 = (double *)sub_100F635A4(0, *((void *)v218 + 2) + 1, 1, (unint64_t)v218);
                }
                unint64_t v80 = *((void *)v218 + 2);
                unint64_t v79 = *((void *)v218 + 3);
                if (v80 >= v79 >> 1) {
                  uint64_t v218 = (double *)sub_100F635A4(v79 > 1, v80 + 1, 1, (unint64_t)v218);
                }
                uint64_t v81 = v227[178];
                *((void *)v218 + 2) = v80 + 1;
                sub_100EA1EF0(v81, (uint64_t)v218+ ((*(unsigned __int8 *)(v215 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v215 + 80))+ *(void *)(v215 + 72) * v80, type metadata accessor for CRLBoardItemPeerSyncUpdate);
                if (qword_10166FBA0 != -1) {
                  swift_once();
                }
                uint64_t v82 = v227[185];
                swift_beginAccess();
                uint64_t v83 = (void *)static OS_os_log.realTimeSync;
                sub_1005057FC((uint64_t *)&unk_101672B40);
                uint64_t v84 = swift_initStackObject();
                *(_OWORD *)(v84 + 16) = xmmword_10117D8C0;
                sub_100EA1E6C(v32, v82, type metadata accessor for CRLGloballyScopedBoardIdentifier);
                id v85 = v83;
                uint64_t v86 = String.init<A>(describing:)();
                uint64_t v88 = v87;
                *(void *)(v84 + 56) = &type metadata for String;
                unint64_t v89 = sub_100528BE4();
                *(void *)(v84 + 64) = v89;
                *(void *)(v84 + 32) = v86;
                *(void *)(v84 + 40) = v88;
                uint64_t v90 = UUID.uuidString.getter();
                *(void *)(v84 + 96) = &type metadata for String;
                *(void *)(v84 + 104) = v89;
                *(void *)(v84 + 72) = v90;
                *(void *)(v84 + 80) = v91;
                uint64_t v92 = static os_log_type_t.default.getter();
                sub_100BAC898((uint64_t)v85, (uint64_t)&_mh_execute_header, v92, (uint64_t)"Received real-time creation of board item. Board: %@, item: %@", 62, 2, v84);
                swift_setDeallocating();
                sub_1005057FC(&qword_101672B50);
                swift_arrayDestroy();

                swift_release();
LABEL_93:
                unint64_t v2 = v220;
                if (qword_10166FBA0 != -1) {
                  swift_once();
                }
                uint64_t v132 = v227[185];
                swift_beginAccess();
                uint64_t v133 = (void *)static OS_os_log.realTimeSync;
                sub_1005057FC((uint64_t *)&unk_101672B40);
                unint64_t v1 = swift_initStackObject();
                *(_OWORD *)(v1 + 16) = xmmword_10117D8C0;
                sub_100EA1E6C(v203, v132, type metadata accessor for CRLGloballyScopedBoardIdentifier);
                id v134 = v133;
                uint64_t v135 = String.init<A>(describing:)();
                uint64_t v137 = v136;
                *(void *)(v1 + 56) = &type metadata for String;
                unint64_t v138 = sub_100528BE4();
                *(void *)(v1 + 64) = v138;
                *(void *)(v1 + 32) = v135;
                *(void *)(v1 + 40) = v137;
                uint64_t v139 = UUID.uuidString.getter();
                *(void *)(v1 + 96) = &type metadata for String;
                *(void *)(v1 + 104) = v138;
                *(void *)(v1 + 72) = v139;
                *(void *)(v1 + 80) = v140;
                uint64_t v141 = static os_log_type_t.default.getter();
                sub_100BAC898((uint64_t)v134, (uint64_t)&_mh_execute_header, v141, (uint64_t)"Received real-time board item data. Board: %@, item: %@", 55, 2, v1);
                swift_setDeallocating();
                sub_1005057FC(&qword_101672B50);
                swift_arrayDestroy();

                swift_release();
                uint64_t v4 = (void *)v223;
                _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v223);
                uint64_t v3 = v221;
                unint64_t v10 = v206;
                goto LABEL_5;
              }
              if (qword_10166FBA0 != -1) {
                swift_once();
              }
              uint64_t v162 = v227;
              uint64_t v179 = v227[185];
              swift_beginAccess();
              int v180 = (void *)static OS_os_log.realTimeSync;
              sub_1005057FC((uint64_t *)&unk_101672B40);
              uint64_t v181 = swift_initStackObject();
              *(_OWORD *)(v181 + 16) = xmmword_10117DF40;
              sub_100EA1E6C(v32, v179, type metadata accessor for CRLGloballyScopedBoardIdentifier);
              id v182 = v180;
              uint64_t v183 = String.init<A>(describing:)();
              unint64_t v1 = v184;
              *(void *)(v181 + 56) = &type metadata for String;
              unint64_t v185 = sub_100528BE4();
              *(void *)(v181 + 64) = v185;
              *(void *)(v181 + 32) = v183;
              *(void *)(v181 + 40) = v1;
              uint64_t v186 = UUID.uuidString.getter();
              *(void *)(v181 + 96) = &type metadata for String;
              *(void *)(v181 + 104) = v185;
              *(void *)(v181 + 72) = v186;
              *(void *)(v181 + 80) = v187;
              uint64_t v188 = *(void *)(v225 + OBJC_IVAR____TtC8Freeform32CRLBoardItemRealTimeChangeRecord_itemTypeValue);
              *(void *)(v181 + 136) = &type metadata for Int;
              *(void *)(v181 + 144) = &protocol witness table for Int;
              *(void *)(v181 + 112) = v188;
              uint64_t v189 = static os_log_type_t.default.getter();
              sub_100BAC898((uint64_t)v182, (uint64_t)&_mh_execute_header, v189, (uint64_t)"Failed to decode a board item real-time change record. Board: %@, item uuid: %@, item type: %d", 94, 2, v181);
              swift_setDeallocating();
              sub_1005057FC(&qword_101672B50);
              swift_arrayDestroy();

              swift_release();
              uint64_t v4 = (void *)v223;
              _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v223);
              uint64_t v3 = v221;
LABEL_120:
              uint64_t v0 = v162;
              unint64_t v10 = v206;
              goto LABEL_5;
            }
            char v76 = _stringCompareWithSmolCheck(_:_:expecting:)();
            unint64_t v1 = (unint64_t)type metadata accessor for CRLGloballyScopedBoardIdentifier;
            sub_100EA1FC0(v35, type metadata accessor for CRLGloballyScopedBoardIdentifier);
            sub_100EA1FC0(v34, type metadata accessor for CRLGloballyScopedBoardIdentifier);
            if (v76) {
              goto LABEL_57;
            }
          }
          else
          {
            sub_100EA1FC0(v227[183], type metadata accessor for CRLGloballyScopedBoardIdentifier);
            sub_100EA1FC0(v34, type metadata accessor for CRLGloballyScopedBoardIdentifier);
          }
          uint64_t v4 = (void *)v223;
          _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v223);
          swift_release();
          goto LABEL_5;
        }
        type metadata accessor for CRLTombstoneBoardItemRealTimeChangeRecord();
        uint64_t v0 = v227;
        if (swift_dynamicCast())
        {
          unint64_t v205 = v10;
          uint64_t v56 = v227[182];
          uint64_t v57 = v227[181];
          uint64_t v58 = v227[153];
          uint64_t v59 = v58 + OBJC_IVAR____TtC8Freeform41CRLTombstoneBoardItemRealTimeChangeRecord_boardIdentifier;
          LOBYTE(v1) = static UUID.== infix(_:_:)();
          sub_100EA1E6C(v59, v56, type metadata accessor for CRLGloballyScopedBoardIdentifier);
          sub_100EA1E6C(v222, v57, type metadata accessor for CRLGloballyScopedBoardIdentifier);
          uint64_t v60 = v227[182];
          uint64_t v61 = v227[181];
          if (v1)
          {
            uint64_t v62 = *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20);
            uint64_t v63 = *(void *)(v60 + v62);
            uint64_t v64 = *(void *)(v60 + v62 + 8);
            uint64_t v65 = (void *)(v61 + v62);
            if (v63 == *v65 && v64 == v65[1])
            {
              sub_100EA1FC0(v61, type metadata accessor for CRLGloballyScopedBoardIdentifier);
              sub_100EA1FC0(v60, type metadata accessor for CRLGloballyScopedBoardIdentifier);
LABEL_97:
              if (qword_10166F2D0 != -1) {
                swift_once();
              }
              uint64_t v142 = v227[176];
              uint64_t v143 = v227[168];
              uint64_t v144 = v227[166];
              CRLAnalyticsOSSignpostManager.beginSignpostInterval(for:with:)(18, 1, (uint64_t)_swiftEmptyArrayStorage);
              uint64_t v145 = *v213;
              ((void (*)(uint64_t, uint64_t, uint64_t))*v213)(v143, v58 + OBJC_IVAR____TtC8Freeform41CRLTombstoneBoardItemRealTimeChangeRecord_boardItemUUID, v144);
              ((void (*)(uint64_t, uint64_t, uint64_t))v145)(v142, v143, v144);
              swift_storeEnumTagMultiPayload();
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                uint64_t v218 = (double *)sub_100F635A4(0, *((void *)v218 + 2) + 1, 1, (unint64_t)v218);
              }
              unint64_t v147 = *((void *)v218 + 2);
              unint64_t v146 = *((void *)v218 + 3);
              if (v147 >= v146 >> 1) {
                uint64_t v218 = (double *)sub_100F635A4(v146 > 1, v147 + 1, 1, (unint64_t)v218);
              }
              uint64_t v148 = v227[176];
              *((void *)v218 + 2) = v147 + 1;
              sub_100EA1EF0(v148, (uint64_t)v218+ ((*(unsigned __int8 *)(v215 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v215 + 80))+ *(void *)(v215 + 72) * v147, type metadata accessor for CRLBoardItemPeerSyncUpdate);
              if (qword_10166FBA0 != -1) {
                swift_once();
              }
              uint64_t v149 = v227[185];
              uint64_t v150 = v227[168];
              uint64_t v226 = v227[166];
              swift_beginAccess();
              uint64_t v151 = (void *)static OS_os_log.realTimeSync;
              sub_1005057FC((uint64_t *)&unk_101672B40);
              uint64_t v152 = swift_initStackObject();
              *(_OWORD *)(v152 + 16) = xmmword_10117D8C0;
              sub_100EA1E6C(v59, v149, type metadata accessor for CRLGloballyScopedBoardIdentifier);
              id v153 = v151;
              uint64_t v154 = String.init<A>(describing:)();
              unint64_t v1 = v155;
              *(void *)(v152 + 56) = &type metadata for String;
              unint64_t v156 = sub_100528BE4();
              *(void *)(v152 + 64) = v156;
              *(void *)(v152 + 32) = v154;
              *(void *)(v152 + 40) = v1;
              uint64_t v157 = UUID.uuidString.getter();
              *(void *)(v152 + 96) = &type metadata for String;
              *(void *)(v152 + 104) = v156;
              *(void *)(v152 + 72) = v157;
              *(void *)(v152 + 80) = v158;
              uint64_t v159 = static os_log_type_t.default.getter();
              sub_100BAC898((uint64_t)v153, (uint64_t)&_mh_execute_header, v159, (uint64_t)"Received real-time deletion of board item. Board: %@, item: %@", 62, 2, v152);
              swift_setDeallocating();
              sub_1005057FC(&qword_101672B50);
              swift_arrayDestroy();

              swift_release();
              (*v210)(v150, v226);
              uint64_t v4 = (void *)v223;
              _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v223);
              unint64_t v2 = v220;
              uint64_t v3 = v221;
              uint64_t v0 = v227;
              unint64_t v10 = v205;
              goto LABEL_5;
            }
            LOBYTE(v1) = _stringCompareWithSmolCheck(_:_:expecting:)();
            sub_100EA1FC0(v61, type metadata accessor for CRLGloballyScopedBoardIdentifier);
            sub_100EA1FC0(v60, type metadata accessor for CRLGloballyScopedBoardIdentifier);
            if (v1) {
              goto LABEL_97;
            }
          }
          else
          {
            sub_100EA1FC0(v227[181], type metadata accessor for CRLGloballyScopedBoardIdentifier);
            sub_100EA1FC0(v60, type metadata accessor for CRLGloballyScopedBoardIdentifier);
          }
          uint64_t v4 = (void *)v223;
          _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v223);
          swift_release();
          unint64_t v10 = v205;
          goto LABEL_5;
        }
        if (swift_dynamicCast())
        {
          uint64_t v66 = v227[163];
          sub_100EA1EF0(v227[164], v66, (uint64_t (*)(void))type metadata accessor for CRLBoardAuxiliaryRealTimeChangeRecordLegacy);
          unint64_t v1 = *(void *)(v66 + *(int *)(v212 + 20));
          if (v1 <= 4)
          {
            uint64_t v67 = v4;
            uint64_t v68 = (uint64_t *)(v227[163] + *(int *)(v212 + 24));
            uint64_t v70 = *v68;
            unint64_t v69 = v68[1];
            *(unsigned char *)v227[175] = v1;
            *(void *)(v208 + 8) = v70;
            *(void *)(v208 + 16) = v69;
            swift_storeEnumTagMultiPayload();
            sub_100510D4C(v70, v69);
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              uint64_t v218 = (double *)sub_100F635A4(0, *((void *)v218 + 2) + 1, 1, (unint64_t)v218);
            }
            unint64_t v72 = *((void *)v218 + 2);
            unint64_t v71 = *((void *)v218 + 3);
            if (v72 >= v71 >> 1) {
              uint64_t v218 = (double *)sub_100F635A4(v71 > 1, v72 + 1, 1, (unint64_t)v218);
            }
            uint64_t v73 = v227[175];
            uint64_t v74 = v227[163];
            *((void *)v218 + 2) = v72 + 1;
            sub_100EA1EF0(v73, (uint64_t)v218+ ((*(unsigned __int8 *)(v215 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v215 + 80))+ *(void *)(v215 + 72) * v72, type metadata accessor for CRLBoardItemPeerSyncUpdate);
            sub_100EA1FC0(v74, (uint64_t (*)(void))type metadata accessor for CRLBoardAuxiliaryRealTimeChangeRecordLegacy);
            uint64_t v4 = v67;
            uint64_t v75 = (uint64_t)v67;
LABEL_77:
            _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v75);
            char v214 = 1;
            goto LABEL_5;
          }
          unint64_t v206 = v10;
          uint64_t v160 = (uint64_t)v4;
          uint64_t v161 = v3;
          if (qword_10166FBA0 != -1) {
            swift_once();
          }
          uint64_t v162 = v227;
          uint64_t v163 = v227[163];
          swift_beginAccess();
          char v164 = (void *)static OS_os_log.realTimeSync;
          sub_1005057FC((uint64_t *)&unk_101672B40);
          uint64_t v165 = swift_initStackObject();
          *(_OWORD *)(v165 + 16) = xmmword_10117E810;
          v227[156] = v1;
          unint64_t v1 = v164;
          uint64_t v166 = dispatch thunk of CustomStringConvertible.description.getter();
          uint64_t v168 = v167;
          *(void *)(v165 + 56) = &type metadata for String;
          *(void *)(v165 + 64) = sub_100528BE4();
          *(void *)(v165 + 32) = v166;
          *(void *)(v165 + 40) = v168;
          uint64_t v169 = static os_log_type_t.default.getter();
          sub_100BAC898(v1, (uint64_t)&_mh_execute_header, v169, (uint64_t)"Unrecognized CRLBoardAuxiliaryRealTimeChangeType %@", 51, 2, v165);
          swift_setDeallocating();
          sub_1005057FC(&qword_101672B50);
          swift_arrayDestroy();

          char v170 = type metadata accessor for CRLBoardAuxiliaryRealTimeChangeRecordLegacy;
        }
        else
        {
          if (!swift_dynamicCast())
          {
            unint64_t v171 = v10;
            uint64_t v172 = (uint64_t)v4;
            if (qword_10166FBA0 != -1) {
              swift_once();
            }
            swift_beginAccess();
            unint64_t v173 = (void *)static OS_os_log.realTimeSync;
            sub_1005057FC((uint64_t *)&unk_101672B40);
            uint64_t v174 = swift_initStackObject();
            *(_OWORD *)(v174 + 16) = xmmword_10117E810;
            sub_10050F848(v4, v227[121]);
            swift_getDynamicType();
            id v175 = v173;
            uint64_t v176 = _typeName(_:qualified:)();
            unint64_t v1 = v177;
            *(void *)(v174 + 56) = &type metadata for String;
            *(void *)(v174 + 64) = sub_100528BE4();
            *(void *)(v174 + 32) = v176;
            uint64_t v4 = (void *)v172;
            *(void *)(v174 + 40) = v1;
            uint64_t v178 = static os_log_type_t.default.getter();
            sub_100BAC898((uint64_t)v175, (uint64_t)&_mh_execute_header, v178, (uint64_t)"Ignoring an unexpected record type %{public}@", 45, 2, v174);
            swift_setDeallocating();
            sub_1005057FC(&qword_101672B50);
            swift_arrayDestroy();

            _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v172);
            unint64_t v10 = v171;
            goto LABEL_5;
          }
          uint64_t v93 = v227[160];
          sub_100EA1EF0(v227[161], v93, (uint64_t (*)(void))type metadata accessor for CRLBoardAuxiliaryRealTimeChangeRecord);
          int v94 = *(_DWORD *)(v93 + *(int *)(v207 + 20));
          char v95 = v94 - 5;
          if ((v94 - 5) <= 0xB)
          {
            unint64_t v1 = (unint64_t)v4;
            uint64_t v96 = (uint64_t *)(v227[160] + *(int *)(v207 + 24));
            uint64_t v98 = *v96;
            unint64_t v97 = v96[1];
            *(unsigned char *)v227[174] = v95;
            *(void *)(v204 + 8) = v98;
            *(void *)(v204 + 16) = v97;
            swift_storeEnumTagMultiPayload();
            sub_100510D4C(v98, v97);
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              uint64_t v218 = (double *)sub_100F635A4(0, *((void *)v218 + 2) + 1, 1, (unint64_t)v218);
            }
            unint64_t v100 = *((void *)v218 + 2);
            unint64_t v99 = *((void *)v218 + 3);
            if (v100 >= v99 >> 1) {
              uint64_t v218 = (double *)sub_100F635A4(v99 > 1, v100 + 1, 1, (unint64_t)v218);
            }
            uint64_t v101 = v227[174];
            uint64_t v102 = v227[160];
            *((void *)v218 + 2) = v100 + 1;
            sub_100EA1EF0(v101, (uint64_t)v218+ ((*(unsigned __int8 *)(v215 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v215 + 80))+ *(void *)(v215 + 72) * v100, type metadata accessor for CRLBoardItemPeerSyncUpdate);
            sub_100EA1FC0(v102, (uint64_t (*)(void))type metadata accessor for CRLBoardAuxiliaryRealTimeChangeRecord);
            uint64_t v4 = (void *)v1;
            uint64_t v75 = v1;
            goto LABEL_77;
          }
          unint64_t v206 = v10;
          uint64_t v160 = (uint64_t)v4;
          uint64_t v161 = v3;
          if (qword_10166FBA0 != -1) {
            swift_once();
          }
          uint64_t v162 = v227;
          uint64_t v163 = v227[160];
          swift_beginAccess();
          unint64_t v190 = (void *)static OS_os_log.realTimeSync;
          sub_1005057FC((uint64_t *)&unk_101672B40);
          uint64_t v191 = swift_initStackObject();
          *(_OWORD *)(v191 + 16) = xmmword_10117E810;
          *((_DWORD *)v227 + 376) = v94;
          unint64_t v1 = v190;
          uint64_t v192 = dispatch thunk of CustomStringConvertible.description.getter();
          uint64_t v194 = v193;
          *(void *)(v191 + 56) = &type metadata for String;
          *(void *)(v191 + 64) = sub_100528BE4();
          *(void *)(v191 + 32) = v192;
          *(void *)(v191 + 40) = v194;
          uint64_t v195 = static os_log_type_t.default.getter();
          sub_100BAC898(v1, (uint64_t)&_mh_execute_header, v195, (uint64_t)"Unrecognized CRLBoardAuxiliaryRealTimeChangeType %@", 51, 2, v191);
          swift_setDeallocating();
          sub_1005057FC(&qword_101672B50);
          swift_arrayDestroy();

          char v170 = type metadata accessor for CRLBoardAuxiliaryRealTimeChangeRecord;
        }
        sub_100EA1FC0(v163, (uint64_t (*)(void))v170);
        uint64_t v4 = (void *)v160;
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v160);
        uint64_t v3 = v161;
        goto LABEL_120;
      }
      uint64_t v11 = v227[187];
      uint64_t v12 = v227[186];
      uint64_t v13 = v227[155];
      uint64_t v14 = v13 + OBJC_IVAR____TtC8Freeform28CRLBoardRealTimeChangeRecord_boardIdentifier;
      LOBYTE(v1) = static UUID.== infix(_:_:)();
      sub_100EA1E6C(v14, v11, type metadata accessor for CRLGloballyScopedBoardIdentifier);
      sub_100EA1E6C(v222, v12, type metadata accessor for CRLGloballyScopedBoardIdentifier);
      uint64_t v15 = v227[187];
      uint64_t v16 = v227[186];
      if ((v1 & 1) == 0) {
        break;
      }
      uint64_t v17 = *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20);
      uint64_t v18 = *(void *)(v15 + v17);
      uint64_t v19 = *(void *)(v15 + v17 + 8);
      uint64_t v20 = (void *)(v16 + v17);
      if (v18 == *v20 && v19 == v20[1])
      {
        sub_100EA1FC0(v16, type metadata accessor for CRLGloballyScopedBoardIdentifier);
        sub_100EA1FC0(v15, type metadata accessor for CRLGloballyScopedBoardIdentifier);
      }
      else
      {
        LOBYTE(v1) = _stringCompareWithSmolCheck(_:_:expecting:)();
        sub_100EA1FC0(v16, type metadata accessor for CRLGloballyScopedBoardIdentifier);
        sub_100EA1FC0(v15, type metadata accessor for CRLGloballyScopedBoardIdentifier);
        if ((v1 & 1) == 0) {
          goto LABEL_4;
        }
      }
      unint64_t v22 = *(void *)(v13 + OBJC_IVAR____TtC8Freeform28CRLBoardRealTimeChangeRecord_partialCRDTData + 8);
      if (v22 >> 60 != 15)
      {
        uint64_t v40 = *(void *)(v13 + OBJC_IVAR____TtC8Freeform28CRLBoardRealTimeChangeRecord_partialCRDTData);
        uint64_t v41 = v227[179];
        uint64_t v42 = *(void *)(v13 + OBJC_IVAR____TtC8Freeform28CRLBoardRealTimeChangeRecord_minRequiredVersion);
        if (*(unsigned char *)(v13
                      + OBJC_IVAR____TtC8Freeform28CRLBoardRealTimeChangeRecord_raw_minRequiredVersionForGoodEnoughFidelity
                      + 8))
          uint64_t v43 = 0x2000400000000;
        else {
          uint64_t v43 = *(void *)(v13
        }
                          + OBJC_IVAR____TtC8Freeform28CRLBoardRealTimeChangeRecord_raw_minRequiredVersionForGoodEnoughFidelity);
        if (*(unsigned char *)(v13
                      + OBJC_IVAR____TtC8Freeform28CRLBoardRealTimeChangeRecord_raw_minRequiredVersionForFullFidelity
                      + 8))
          uint64_t v44 = 0x1000000000000;
        else {
          uint64_t v44 = *(void *)(v13
        }
                          + OBJC_IVAR____TtC8Freeform28CRLBoardRealTimeChangeRecord_raw_minRequiredVersionForFullFidelity);
        unint64_t v45 = (void *)(v41 + *(int *)(sub_1005057FC(&qword_1016A0650) + 48));
        sub_100EA1E6C(v14, v41, type metadata accessor for CRLGloballyScopedBoardIdentifier);
        *unint64_t v45 = v42;
        v45[1] = v43;
        v45[2] = v44;
        v45[3] = v40;
        v45[4] = v22;
        swift_storeEnumTagMultiPayload();
        sub_100510D4C(v40, v22);
        sub_100510D4C(v40, v22);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v218 = (double *)sub_100F635A4(0, *((void *)v218 + 2) + 1, 1, (unint64_t)v218);
        }
        unint64_t v47 = *((void *)v218 + 2);
        unint64_t v46 = *((void *)v218 + 3);
        uint64_t v0 = v227;
        if (v47 >= v46 >> 1) {
          uint64_t v218 = (double *)sub_100F635A4(v46 > 1, v47 + 1, 1, (unint64_t)v218);
        }
        uint64_t v48 = v227[179];
        *((void *)v218 + 2) = v47 + 1;
        sub_100EA1EF0(v48, (uint64_t)v218+ ((*(unsigned __int8 *)(v215 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v215 + 80))+ *(void *)(v215 + 72) * v47, type metadata accessor for CRLBoardItemPeerSyncUpdate);
        if (qword_10166FBA0 != -1) {
          swift_once();
        }
        uint64_t v49 = v227[185];
        swift_beginAccess();
        uint64_t v50 = (void *)static OS_os_log.realTimeSync;
        sub_1005057FC((uint64_t *)&unk_101672B40);
        uint64_t v51 = swift_allocObject();
        *(_OWORD *)(v51 + 16) = xmmword_10117E810;
        sub_100EA1E6C(v14, v49, type metadata accessor for CRLGloballyScopedBoardIdentifier);
        id v52 = v50;
        unint64_t v1 = String.init<A>(describing:)();
        uint64_t v54 = v53;
        *(void *)(v51 + 56) = &type metadata for String;
        *(void *)(v51 + 64) = sub_100528BE4();
        *(void *)(v51 + 32) = v1;
        *(void *)(v51 + 40) = v54;
        uint64_t v55 = static os_log_type_t.default.getter();
        sub_100BAC898((uint64_t)v52, (uint64_t)&_mh_execute_header, v55, (uint64_t)"Received real-time board data. Board: %@", 40, 2, v51);
        swift_setDeallocating();
        sub_1005057FC(&qword_101672B50);
        LOBYTE(v1) = 1;
        swift_arrayDestroy();
        swift_deallocClassInstance();

        sub_100514260(v40, v22);
        swift_release();
        uint64_t v4 = (void *)v223;
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v223);
        char v219 = 1;
        unint64_t v2 = v220;
        uint64_t v3 = v221;
        goto LABEL_5;
      }
      if (qword_10166FBA0 != -1) {
        swift_once();
      }
      ++v10;
      uint64_t v23 = v227[185];
      uint64_t v0 = &static OS_os_log.realTimeSync;
      swift_beginAccess();
      uint64_t v24 = (void *)static OS_os_log.realTimeSync;
      sub_1005057FC((uint64_t *)&unk_101672B40);
      uint64_t v25 = swift_initStackObject();
      *(_OWORD *)(v25 + 16) = xmmword_10117E810;
      sub_100EA1E6C(v14, v23, type metadata accessor for CRLGloballyScopedBoardIdentifier);
      id v26 = v24;
      uint64_t v27 = String.init<A>(describing:)();
      unint64_t v1 = v28;
      *(void *)(v25 + 56) = &type metadata for String;
      *(void *)(v25 + 64) = sub_100528BE4();
      *(void *)(v25 + 32) = v27;
      *(void *)(v25 + 40) = v1;
      uint64_t v29 = static os_log_type_t.default.getter();
      sub_100BAC898((uint64_t)v26, (uint64_t)&_mh_execute_header, v29, (uint64_t)"Failed to receive partialCRDT for board change %@", 49, 2, v25);
      swift_setDeallocating();
      sub_1005057FC(&qword_101672B50);
      char v219 = 1;
      swift_arrayDestroy();

      swift_release();
      uint64_t v4 = (void *)v223;
      _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v223);
      uint64_t v3 = v221;
      _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v221);
      v9 += 5;
      unint64_t v2 = v220;
      if (v220 == v10)
      {
        uint64_t v0 = v227;
        swift_bridgeObjectRelease();
        goto LABEL_121;
      }
    }
    sub_100EA1FC0(v227[186], type metadata accessor for CRLGloballyScopedBoardIdentifier);
    sub_100EA1FC0(v15, type metadata accessor for CRLGloballyScopedBoardIdentifier);
LABEL_4:
    uint64_t v4 = (void *)v223;
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v223);
    swift_release();
    unint64_t v2 = v220;
    uint64_t v3 = v221;
    uint64_t v0 = v227;
LABEL_5:
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v3);
    unint64_t v7 = v10 + 1;
    if (v216 != v10) {
      continue;
    }
    break;
  }
  swift_bridgeObjectRelease();
  if (v219)
  {
LABEL_121:
    uint64_t v9 = &qword_10166F000;
    LOBYTE(v1) = v214;
    if (qword_10166F2D0 == -1) {
      goto LABEL_122;
    }
    goto LABEL_134;
  }
  uint64_t v9 = &qword_10166F000;
  if ((v214 & 1) == 0) {
    goto LABEL_127;
  }
LABEL_123:
  if (v9[90] != -1) {
    swift_once();
  }
  CRLAnalyticsOSSignpostManager.beginSignpostInterval(for:with:)(19, 1, (uint64_t)_swiftEmptyArrayStorage);
LABEL_127:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v196 = (uint64_t (*)(double *))v0[1];
  return v196(v218);
}

uint64_t sub_100EA03E8()
{
  sub_100EA1FC0(v0+ OBJC_IVAR____TtCC8Freeform33CRLBoardRealTimeChangeCoordinator26CRLRealTimeChangeProcessor_globallyScopedBoardIdentifier, type metadata accessor for CRLGloballyScopedBoardIdentifier);
  swift_defaultActor_destroy();

  return swift_defaultActor_deallocate();
}

uint64_t sub_100EA043C()
{
  return type metadata accessor for CRLBoardRealTimeChangeCoordinator.CRLRealTimeChangeProcessor(0);
}

uint64_t type metadata accessor for CRLBoardRealTimeChangeCoordinator.CRLRealTimeChangeProcessor(uint64_t a1)
{
  return sub_100512D5C(a1, (uint64_t *)&unk_1016A05A8);
}

uint64_t sub_100EA0464()
{
  uint64_t result = type metadata accessor for CRLBoardIdentifierStorage(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t initializeWithCopy for CRLBoardRealTimeChangeCoordinator.CRLIncomingSuspendedCache(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for CRLBoardRealTimeChangeCoordinator.CRLIncomingSuspendedCache(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 16) = v4;
  return a1;
}

uint64_t assignWithTake for CRLBoardRealTimeChangeCoordinator.CRLIncomingSuspendedCache(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  return a1;
}

uint64_t getEnumTagSinglePayload for CRLBoardRealTimeChangeCoordinator.CRLIncomingSuspendedCache(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 25)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CRLBoardRealTimeChangeCoordinator.CRLIncomingSuspendedCache(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(unsigned char *)(result + 24) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 25) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 25) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLBoardRealTimeChangeCoordinator.CRLIncomingSuspendedCache()
{
  return &type metadata for CRLBoardRealTimeChangeCoordinator.CRLIncomingSuspendedCache;
}

uint64_t sub_100EA068C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  *(unsigned char *)(v5 + 24) = a5;
  *(void *)(v5 + 16) = a4;
  return _swift_task_switch(sub_100EA06B0, a4, 0);
}

uint64_t sub_100EA06B0()
{
  int v1 = *(unsigned __int8 *)(v0 + 24);
  *(void *)(*(void *)(v0 + 16)
            + OBJC_IVAR____TtC8Freeform33CRLBoardRealTimeChangeCoordinator_pushCommandToCommandControllerTask) = 0;
  swift_release();
  if (v1 == 1) {
    sub_100E97A3C();
  }
  unint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_100EA0734(uint64_t a1, void (*a2)(char *, uint64_t))
{
  uint64_t v4 = sub_1005057FC(&qword_1016A06B8);
  __chkstk_darwin(v4, v5);
  unint64_t v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *(void *)(a1 + 64);
  uint64_t v25 = a1 + 64;
  uint64_t v9 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v10 = -1;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  unint64_t v11 = v10 & v8;
  int64_t v26 = (unint64_t)(v9 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v13 = 0;
  while (1)
  {
    if (v11)
    {
      unint64_t v14 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v15 = v14 | (v13 << 6);
      goto LABEL_5;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v21 >= v26) {
      return swift_release();
    }
    unint64_t v22 = *(void *)(v25 + 8 * v21);
    ++v13;
    if (!v22)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v26) {
        return swift_release();
      }
      unint64_t v22 = *(void *)(v25 + 8 * v13);
      if (!v22)
      {
        int64_t v13 = v21 + 2;
        if (v21 + 2 >= v26) {
          return swift_release();
        }
        unint64_t v22 = *(void *)(v25 + 8 * v13);
        if (!v22)
        {
          int64_t v13 = v21 + 3;
          if (v21 + 3 >= v26) {
            return swift_release();
          }
          unint64_t v22 = *(void *)(v25 + 8 * v13);
          if (!v22) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v11 = (v22 - 1) & v22;
    unint64_t v15 = __clz(__rbit64(v22)) + (v13 << 6);
LABEL_5:
    uint64_t v16 = *(void *)(a1 + 48);
    uint64_t v17 = type metadata accessor for UUID();
    (*(void (**)(char *, unint64_t, uint64_t))(*(void *)(v17 - 8) + 16))(v7, v16 + *(void *)(*(void *)(v17 - 8) + 72) * v15, v17);
    uint64_t v18 = *(void *)(a1 + 56);
    uint64_t v19 = v18 + *(void *)(*(void *)(type metadata accessor for CRLBoardItemPeerSyncUpdate(0) - 8) + 72) * v15;
    uint64_t v20 = (uint64_t)&v7[*(int *)(v4 + 48)];
    sub_100EA1E6C(v19, v20, type metadata accessor for CRLBoardItemPeerSyncUpdate);
    a2(v7, v20);
    uint64_t result = sub_100522F00((uint64_t)v7, &qword_1016A06B8);
  }
  int64_t v23 = v21 + 4;
  if (v23 >= v26) {
    return swift_release();
  }
  unint64_t v22 = *(void *)(v25 + 8 * v23);
  if (v22)
  {
    int64_t v13 = v23;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v13 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v13 >= v26) {
      return swift_release();
    }
    unint64_t v22 = *(void *)(v25 + 8 * v13);
    ++v23;
    if (v22) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

double *sub_100EA09D0(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for CRLBoardItemPeerSyncUpdate(0) - 8;
  __chkstk_darwin(v5, v6);
  uint64_t v29 = (char *)v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8, v9);
  uint64_t v12 = (char *)v28 - v11;
  uint64_t result = _swiftEmptyArrayStorage;
  uint64_t v37 = _swiftEmptyArrayStorage;
  uint64_t v14 = *(void *)(a1 + 16);
  if (v14)
  {
    v28[1] = v2;
    uint64_t v15 = 0;
    uint64_t v31 = a2 + OBJC_IVAR____TtC8Freeform33CRLBoardRealTimeChangeCoordinator_incomingSuspendedCache;
    uint64_t v16 = *(void *)(v10 + 72);
    unint64_t v32 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
    uint64_t v33 = a1 + v32;
    uint64_t v34 = v16;
    uint64_t v17 = _swiftEmptyArrayStorage;
    uint64_t v18 = (uint64_t)v29;
    uint64_t v30 = v14;
    do
    {
      sub_100EA1E6C(v33 + v34 * v15, (uint64_t)v12, type metadata accessor for CRLBoardItemPeerSyncUpdate);
      uint64_t v19 = sub_100EB45B4();
      if (v19)
      {
        uint64_t v20 = *(void *)(v31 + 8);
        v35[0] = v19;
        swift_bridgeObjectRetain();
        sub_1005057FC(&qword_1016A0690);
        sub_100523288(&qword_1016A0698, &qword_1016A0690);
        AnyHashable.init<A>(_:)();
        if (*(void *)(v20 + 16))
        {
          Swift::Int v21 = AnyHashable._rawHashValue(seed:)(*(void *)(v20 + 40));
          uint64_t v22 = -1 << *(unsigned char *)(v20 + 32);
          unint64_t v23 = v21 & ~v22;
          if ((*(void *)(v20 + 56 + ((v23 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v23))
          {
            uint64_t v24 = ~v22;
            do
            {
              sub_10050BF84(*(void *)(v20 + 48) + 40 * v23, (uint64_t)v35);
              char v25 = static AnyHashable.== infix(_:_:)();
              sub_10050BFE0((uint64_t)v35);
              if (v25)
              {
                swift_bridgeObjectRelease();
                sub_10050BFE0((uint64_t)v36);
                sub_100EA1FC0((uint64_t)v12, type metadata accessor for CRLBoardItemPeerSyncUpdate);
                uint64_t v18 = (uint64_t)v29;
                uint64_t v14 = v30;
                goto LABEL_4;
              }
              unint64_t v23 = (v23 + 1) & v24;
            }
            while (((*(void *)(v20 + 56 + ((v23 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v23) & 1) != 0);
            swift_bridgeObjectRelease();
            sub_10050BFE0((uint64_t)v36);
            uint64_t v18 = (uint64_t)v29;
          }
          else
          {
            swift_bridgeObjectRelease();
            sub_10050BFE0((uint64_t)v36);
          }
          uint64_t v14 = v30;
        }
        else
        {
          swift_bridgeObjectRelease();
          sub_10050BFE0((uint64_t)v36);
        }
      }
      sub_100EA1EF0((uint64_t)v12, v18, type metadata accessor for CRLBoardItemPeerSyncUpdate);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        sub_1006BB844(0, *((void *)v17 + 2) + 1, 1);
      }
      uint64_t v17 = v37;
      unint64_t v27 = *((void *)v37 + 2);
      unint64_t v26 = *((void *)v37 + 3);
      if (v27 >= v26 >> 1)
      {
        sub_1006BB844(v26 > 1, v27 + 1, 1);
        uint64_t v17 = v37;
      }
      *((void *)v17 + 2) = v27 + 1;
      sub_100EA1EF0(v18, (uint64_t)v17 + v32 + v27 * v34, type metadata accessor for CRLBoardItemPeerSyncUpdate);
LABEL_4:
      ++v15;
    }
    while (v15 != v14);
    return v37;
  }
  return result;
}

void *sub_100EA0D60(uint64_t a1)
{
  uint64_t v2 = sub_1008E0E9C(*(void *)(a1 + OBJC_IVAR____TtC8Freeform32CRLBoardItemRealTimeChangeRecord_itemTypeValue));
  char v4 = v3;
  if ((v3 & 0x100) != 0)
  {
    if (qword_10166FBA0 != -1) {
      swift_once();
    }
    swift_beginAccess();
    uint64_t v17 = (void *)static OS_os_log.realTimeSync;
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_10117E810;
    id v19 = v17;
    uint64_t v20 = String.init<A>(describing:)();
    uint64_t v22 = v21;
    *(void *)(inited + 56) = &type metadata for String;
    *(void *)(inited + 64) = sub_100528BE4();
    *(void *)(inited + 32) = v20;
    *(void *)(inited + 40) = v22;
    uint64_t v23 = static os_log_type_t.error.getter();
    sub_100BAC898((uint64_t)v19, (uint64_t)&_mh_execute_header, v23, (uint64_t)"Real-time change record does not contain a valid board item type: %@", 68, 2, inited);
    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();

    return 0;
  }
  unint64_t v5 = *(void *)(a1 + OBJC_IVAR____TtC8Freeform32CRLBoardItemRealTimeChangeRecord_commonCRDTData + 8);
  if (v5 >> 60 == 15) {
    return 0;
  }
  unint64_t v6 = *(void *)(a1 + OBJC_IVAR____TtC8Freeform32CRLBoardItemRealTimeChangeRecord_specificCRDTData + 8);
  if (v6 >> 60 == 15) {
    return 0;
  }
  uint64_t v7 = *(void *)(a1 + OBJC_IVAR____TtC8Freeform32CRLBoardItemRealTimeChangeRecord_commonCRDTData);
  uint64_t v8 = *(void *)(a1 + OBJC_IVAR____TtC8Freeform32CRLBoardItemRealTimeChangeRecord_minRequiredVersion);
  uint64_t v9 = *(void *)(a1 + OBJC_IVAR____TtC8Freeform32CRLBoardItemRealTimeChangeRecord_specificCRDTData);
  uint64_t v10 = (uint64_t *)(a1
                  + OBJC_IVAR____TtC8Freeform32CRLBoardItemRealTimeChangeRecord_raw_minRequiredVersionForGoodEnoughFidelity);
  if (*(unsigned char *)(a1
                + OBJC_IVAR____TtC8Freeform32CRLBoardItemRealTimeChangeRecord_raw_minRequiredVersionForGoodEnoughFidelity
                + 8))
    uint64_t v10 = &qword_101176F90;
  uint64_t v11 = *v10;
  uint64_t v12 = (uint64_t *)(a1
                  + OBJC_IVAR____TtC8Freeform32CRLBoardItemRealTimeChangeRecord_raw_minRequiredVersionForFullFidelity);
  if (*(unsigned char *)(a1
                + OBJC_IVAR____TtC8Freeform32CRLBoardItemRealTimeChangeRecord_raw_minRequiredVersionForFullFidelity
                + 8))
    uint64_t v12 = &qword_101176F70;
  uint64_t v13 = *v12;
  uint64_t v14 = *(void *)(a1 + OBJC_IVAR____TtC8Freeform32CRLBoardItemRealTimeChangeRecord_objectOptions);
  sub_1005FA2A0(v7, v5);
  sub_1005FA2A0(v9, v6);
  uint64_t v15 = sub_1009F10B0(v2, v4 & 1, v8, v11, v13, v14, v7, v5, v9, v6);
  sub_100514260(v9, v6);
  sub_100514260(v7, v5);
  return v15;
}

uint64_t sub_100EA0FF8()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100EA1034(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v6 = v1[5];
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_100528D08;
  return sub_100E9B6B8(a1, v4, v5, v7, v6);
}

uint64_t sub_100EA10F8()
{
  uint64_t v2 = *(void *)(v0 + 32);
  char v3 = *(unsigned char *)(v0 + 40);
  uint64_t v4 = swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  *(void *)uint64_t v4 = v1;
  *(unsigned char *)(v4 + 24) = v3;
  *(void *)(v4 + 8) = sub_100528D08;
  *(void *)(v4 + 16) = v2;
  return _swift_task_switch(sub_100EA06B0, v2, 0);
}

uint64_t sub_100EA11AC()
{
  uint64_t v2 = *(void *)(v0 + 32);
  char v3 = *(unsigned char *)(v0 + 40);
  uint64_t v4 = swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  *(void *)uint64_t v4 = v1;
  *(unsigned char *)(v4 + 24) = v3;
  *(void *)(v4 + 8) = sub_100528488;
  *(void *)(v4 + 16) = v2;
  return _swift_task_switch(sub_100EA06B0, v2, 0);
}

double *sub_100EA1264(uint64_t a1)
{
  uint64_t v2 = sub_1005057FC(&qword_101699788);
  __chkstk_darwin(v2 - 8, v3);
  uint64_t v5 = (char *)v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for CRLBoardItemPeerSyncUpdate(0);
  uint64_t v47 = *(void *)(v6 - 8);
  __chkstk_darwin(v6, v7);
  uint64_t v48 = (uint64_t)v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9, v10);
  uint64_t v12 = (char *)v40 - v11;
  __chkstk_darwin(v13, v14);
  uint64_t v16 = (char *)v40 - v15;
  if (*(void *)(a1 + 16) >= 2uLL)
  {
    unint64_t v17 = sub_100C352DC(a1, (void (*)(void))sub_100E9AFFC, 0, (void (*)(uint64_t))sub_100E9B084, 0, (void (*)(uint64_t))sub_100E9B184, 0);
    unint64_t v18 = v17;
    if (v17 >> 62) {
      goto LABEL_55;
    }
    uint64_t v19 = *(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v19)
    {
LABEL_56:
      swift_bridgeObjectRelease();
      return _swiftEmptyArrayStorage;
    }
LABEL_4:
    unint64_t v44 = v18 & 0xC000000000000001;
    uint64_t v41 = v18 & 0xFFFFFFFFFFFFFF8;
    unint64_t v42 = v18;
    v40[1] = v18 + 32;
    unint64_t v18 = 0;
    uint64_t v20 = (unsigned int (**)(char *, uint64_t, uint64_t))(v47 + 48);
    uint64_t v21 = &qword_101699788;
    uint64_t v49 = _swiftEmptyArrayStorage;
    uint64_t v43 = v19;
    while (1)
    {
      if (v44)
      {
        uint64_t v22 = specialized _ArrayBuffer._getElementSlowPath(_:)();
        BOOL v23 = __OFADD__(v18++, 1);
        if (v23) {
          goto LABEL_53;
        }
      }
      else
      {
        if (v18 >= *(void *)(v41 + 16)) {
          goto LABEL_54;
        }
        uint64_t v22 = swift_retain();
        BOOL v23 = __OFADD__(v18++, 1);
        if (v23) {
          goto LABEL_53;
        }
      }
      uint64_t v45 = v22;
      unint64_t v46 = v18;
      unint64_t v50 = (unint64_t)_swiftEmptyArrayStorage;
      swift_retain_n();
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)((v50 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v50 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
      unint64_t v18 = v50;
      if (!(v50 >> 62))
      {
        if (*(void *)((v50 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          goto LABEL_16;
        }
        goto LABEL_5;
      }
      swift_bridgeObjectRetain();
      uint64_t v38 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (v38) {
        break;
      }
LABEL_5:
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      unint64_t v18 = v46;
      if (v46 == v43)
      {
        swift_bridgeObjectRelease();
        return v49;
      }
    }
    while (1)
    {
LABEL_16:
      uint64_t v24 = v21;
      unint64_t v25 = v18 >> 62;
      if (v18 >> 62)
      {
        swift_bridgeObjectRetain();
        v40[0] = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        if (!v40[0])
        {
LABEL_49:
          __break(1u);
LABEL_50:
          __break(1u);
LABEL_51:
          __break(1u);
LABEL_52:
          __break(1u);
LABEL_53:
          __break(1u);
LABEL_54:
          __break(1u);
LABEL_55:
          uint64_t v19 = _CocoaArrayWrapper.endIndex.getter();
          if (!v19) {
            goto LABEL_56;
          }
          goto LABEL_4;
        }
        swift_bridgeObjectRetain();
        uint64_t v35 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        if (!v35) {
          goto LABEL_50;
        }
      }
      else if (!*(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        goto LABEL_49;
      }
      if ((v18 & 0xC000000000000001) != 0)
      {
        uint64_t v26 = specialized _ArrayBuffer._getElementSlowPath(_:)();
        if (!v25) {
          goto LABEL_21;
        }
      }
      else
      {
        if (!*(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          goto LABEL_51;
        }
        uint64_t v26 = *(void *)(v18 + 32);
        swift_retain();
        if (!v25)
        {
LABEL_21:
          if (!*(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
            goto LABEL_52;
          }
          goto LABEL_22;
        }
      }
      swift_bridgeObjectRetain();
      uint64_t v36 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (!v36) {
        goto LABEL_52;
      }
LABEL_22:
      sub_100F4D480(0, 1);
      uint64_t v21 = v24;
      sub_100522E9C(v26 + *(void *)(*(void *)v26 + 112), (uint64_t)v5, v24);
      if ((*v20)(v5, 1, v6) == 1)
      {
        sub_100522F00((uint64_t)v5, v24);
      }
      else
      {
        sub_100EA1EF0((uint64_t)v5, (uint64_t)v16, type metadata accessor for CRLBoardItemPeerSyncUpdate);
        sub_100EA1E6C((uint64_t)v16, (uint64_t)v12, type metadata accessor for CRLBoardItemPeerSyncUpdate);
        if (swift_getEnumCaseMultiPayload() == 2)
        {
          swift_release();
          sub_100EA1E6C((uint64_t)v16, v48, type metadata accessor for CRLBoardItemPeerSyncUpdate);
          unint64_t v27 = (unint64_t)v49;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            unint64_t v27 = sub_100F635A4(0, *(void *)(v27 + 16) + 1, 1, v27);
          }
          unint64_t v29 = *(void *)(v27 + 16);
          unint64_t v28 = *(void *)(v27 + 24);
          uint64_t v49 = (double *)v27;
          if (v29 >= v28 >> 1) {
            uint64_t v49 = (double *)sub_100F635A4(v28 > 1, v29 + 1, 1, (unint64_t)v49);
          }
          uint64_t v30 = v48;
          uint64_t v31 = v49;
          *((void *)v49 + 2) = v29 + 1;
          sub_100EA1EF0(v30, (uint64_t)v31+ ((*(unsigned __int8 *)(v47 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v47 + 80))+ *(void *)(v47 + 72) * v29, type metadata accessor for CRLBoardItemPeerSyncUpdate);
          sub_100EA1FC0((uint64_t)v16, type metadata accessor for CRLBoardItemPeerSyncUpdate);
          uint64_t v21 = v24;
          goto LABEL_34;
        }
        sub_100EA1FC0((uint64_t)v16, type metadata accessor for CRLBoardItemPeerSyncUpdate);
        sub_100EA1FC0((uint64_t)v12, type metadata accessor for CRLBoardItemPeerSyncUpdate);
      }
      if (qword_10166FBA0 != -1) {
        swift_once();
      }
      swift_beginAccess();
      id v32 = (id)static OS_os_log.realTimeSync;
      uint64_t v33 = static os_log_type_t.error.getter();
      sub_100BAC898((uint64_t)v32, (uint64_t)&_mh_execute_header, v33, (uint64_t)"_sortPeerSyncUpdateItemsCausally must only be fed .createdItemData CRLBoardItemPeerSyncUpdates", 94, 2, (uint64_t)_swiftEmptyArrayStorage);

LABEL_34:
      swift_beginAccess();
      unint64_t v34 = swift_bridgeObjectRetain();
      sub_1006E3C38(v34);
      swift_release();
      unint64_t v18 = v50;
      if (v50 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v37 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        if (!v37) {
          goto LABEL_5;
        }
      }
      else if (!*(void *)((v50 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        goto LABEL_5;
      }
    }
  }
  swift_bridgeObjectRetain();
  return (double *)a1;
}

double *sub_100EA19B0(uint64_t a1, uint64_t a2)
{
  v30[2] = a2;
  uint64_t v3 = type metadata accessor for CRLBoardItemPeerSyncUpdate(0) - 8;
  __chkstk_darwin(v3, v4);
  uint64_t v6 = (char *)v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7, v8);
  uint64_t v31 = (uint64_t)v30 - v9;
  __chkstk_darwin(v10, v11);
  uint64_t v14 = (char *)v30 - v13;
  uint64_t v15 = *(void *)(a1 + 16);
  if (!v15) {
    return _swiftEmptyArrayStorage;
  }
  unint64_t v16 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  uint64_t v17 = a1 + v16;
  uint64_t v18 = *(void *)(v12 + 72);
  v30[1] = a1;
  swift_bridgeObjectRetain();
  uint64_t v19 = _swiftEmptyArrayStorage;
  uint64_t v20 = _swiftEmptyArrayStorage;
  do
  {
    sub_100EA1E6C(v17, (uint64_t)v14, type metadata accessor for CRLBoardItemPeerSyncUpdate);
    BOOL v23 = sub_100EB45B4();
    if (v23 && (char v24 = sub_1007415C8((uint64_t)v23), swift_bridgeObjectRelease(), (v24 & 1) != 0))
    {
      sub_100EA1E6C((uint64_t)v14, v31, type metadata accessor for CRLBoardItemPeerSyncUpdate);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v19 = (double *)sub_100F635A4(0, *((void *)v19 + 2) + 1, 1, (unint64_t)v19);
      }
      unint64_t v26 = *((void *)v19 + 2);
      unint64_t v25 = *((void *)v19 + 3);
      unint64_t v27 = v26 + 1;
      if (v26 >= v25 >> 1)
      {
        uint64_t v21 = sub_100F635A4(v25 > 1, v26 + 1, 1, (unint64_t)v19);
        uint64_t v22 = v31;
        uint64_t v19 = (double *)v21;
      }
      else
      {
        uint64_t v21 = (uint64_t)v19;
        uint64_t v22 = v31;
      }
    }
    else
    {
      sub_100EA1E6C((uint64_t)v14, (uint64_t)v6, type metadata accessor for CRLBoardItemPeerSyncUpdate);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v20 = (double *)sub_100F635A4(0, *((void *)v20 + 2) + 1, 1, (unint64_t)v20);
      }
      unint64_t v26 = *((void *)v20 + 2);
      unint64_t v28 = *((void *)v20 + 3);
      unint64_t v27 = v26 + 1;
      if (v26 < v28 >> 1)
      {
        uint64_t v21 = (uint64_t)v20;
        uint64_t v22 = (uint64_t)v6;
      }
      else
      {
        uint64_t v21 = sub_100F635A4(v28 > 1, v26 + 1, 1, (unint64_t)v20);
        uint64_t v22 = (uint64_t)v6;
        uint64_t v20 = (double *)v21;
      }
    }
    *(void *)(v21 + 16) = v27;
    sub_100EA1EF0(v22, v21 + v16 + v26 * v18, type metadata accessor for CRLBoardItemPeerSyncUpdate);
    sub_100EA1FC0((uint64_t)v14, type metadata accessor for CRLBoardItemPeerSyncUpdate);
    v17 += v18;
    --v15;
  }
  while (v15);
  swift_bridgeObjectRelease();
  return v20;
}

uint64_t sub_100EA1CB8()
{
  swift_unknownObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 41, 7);
}

uint64_t sub_100EA1CF8(uint64_t a1, uint64_t a2)
{
  return sub_100E9AA58(a1, a2, *(unint64_t **)(v2 + 16));
}

uint64_t sub_100EA1D00(uint64_t a1, uint64_t a2)
{
  return sub_100E9ABC4(a1, a2, *(unint64_t **)(v2 + 16), *(void *)(v2 + 24));
}

uint64_t sub_100EA1D0C()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_100EA1D54(uint64_t a1)
{
  uint64_t v4 = swift_task_alloc();
  long long v5 = *(_OWORD *)(v1 + 32);
  *(void *)(v2 + 16) = v4;
  *(void *)uint64_t v4 = v2;
  *(void *)(v4 + 8) = sub_100528D08;
  *(_OWORD *)(v4 + 72) = v5;
  *(void *)(v4 + 64) = a1;
  return _swift_task_switch(sub_100E9AE4C, 0, 0);
}

uint64_t sub_100EA1E08(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CRLBoardItemPeerSyncUpdate(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_100EA1E6C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_100EA1ED4@<X0>(double *a1@<X8>)
{
  return sub_1006AFA9C(v1, a1);
}

uint64_t sub_100EA1EF0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_100EA1F58()
{
  swift_release();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100EA1F98()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100EA1FA8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100EA1FB8()
{
  return swift_release();
}

uint64_t sub_100EA1FC0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_100EA2020(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_100EA206C(void *a1, uint64_t a2, int a3)
{
  uint64_t v5 = v3;
  uint64_t v90 = (int *)type metadata accessor for CRLMaskInfoData();
  __chkstk_darwin(v90, v9);
  uint64_t v11 = &v78[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v12, v13);
  uint64_t v91 = &v78[-v14];
  Class isa = UUID._bridgeToObjectiveC()().super.isa;
  id v16 = [a1 getBoardItemForUUID:isa];

  if (!v16) {
    goto LABEL_13;
  }
  type metadata accessor for CRLImageItem();
  uint64_t v17 = swift_dynamicCastClass();
  if (!v17)
  {

LABEL_13:
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"commit(with:transaction:undoable:)", 34, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandReplaceImage.swift", 94, 2, 29, (uint64_t)"Unable to retrieve image item", 29, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_100586FD4((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Unable to retrieve image item");
    sub_1005871AC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"commit(with:transaction:undoable:)", 34, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandReplaceImage.swift", 94, 2, 29);
    SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v76, v77);
    _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
    return;
  }
  uint64_t v18 = v17;
  id v19 = v16;
  sub_10103405C(v18, (uint64_t)&off_101518040);

  if (v4)
  {
  }
  else
  {
    int v86 = a3;
    uint64_t v87 = a2;
    uint64_t v20 = OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData;
    uint64_t v21 = *(uint64_t (**)(uint64_t))(**(void **)(v18 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData)
                                            + 288);
    id v22 = v19;
    uint64_t v23 = swift_retain();
    char v24 = (void *)v21(v23);
    id v88 = v22;
    id v89 = v24;

    swift_release();
    unint64_t v25 = (void *)sub_100A3653C();
    uint64_t v81 = v20;
    uint64_t v82 = v11;
    uint64_t v83 = 0;
    uint64_t v84 = v5;
    if (v25)
    {
      id v26 = [v25 geometry];
    }
    else
    {
      unint64_t v27 = *(uint64_t (**)(uint64_t))(**(void **)(v18 + v20) + 288);
      uint64_t v28 = swift_retain();
      unint64_t v29 = (void *)v27(v28);
      swift_release();
      id v30 = v29;
      uint64_t v31 = v91;
      sub_100A04D58(v30, (uint64_t)v91);
      sub_100A061E8((uint64_t)v31, (uint64_t)v11);
      id v85 = objc_allocWithZone((Class)CRLMaskInfo);
      id v32 = &v11[v90[5]];
      float v33 = *(float *)v32;
      float v34 = *((float *)v32 + 1);
      float v35 = *((float *)v32 + 2);
      float v36 = *((float *)v32 + 3);
      float v37 = *((float *)v32 + 4);
      uint64_t v38 = v32[20];
      uint64_t v39 = v32[21];
      unsigned int v79 = v32[22];
      uint64_t v40 = v32[23];
      id v41 = objc_allocWithZone((Class)CRLCanvasInfoGeometry);
      id v80 = v88;
      id v42 = [v41 initWithPosition:v38 size:v39 widthValid:v79 heightValid:v40 horizontalFlip:v33 verticalFlip:v34 angle:v35];
      uint64_t v43 = sub_100AB0C00(v11);
      id v44 = [v85 initWithImageItem:v18 geometry:v42 pathSource:v43];

      sub_100EA2EDC((uint64_t)v11);
      sub_100EA2EDC((uint64_t)v31);
      id v26 = [v44 geometry];
    }
    id v45 = v89;
    [v89 mutableCopy];
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
    sub_1009DD894();
    swift_dynamicCast();
    unint64_t v46 = v92;
    [v26 mutableCopy];
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
    swift_dynamicCast();
    uint64_t v47 = v92;
    uint64_t v48 = v84;
    uint64_t v49 = *(void *)&v84[OBJC_IVAR____TtC8Freeform22CRLCommandReplaceImage_imageData];
    id v50 = v88;
    id v51 = v26;
    id v85 = v47;
    sub_100A36150(v46, v47, v49, v45, v26, v18);
    id v88 = v51;

    sub_100A2E25C(v49, *(void *)&v48[OBJC_IVAR____TtC8Freeform22CRLCommandReplaceImage_thumbnailData]);
    id v52 = v50;
    id v53 = v46;
    sub_10088AA40(v53);

    uint64_t v54 = (void *)sub_100A3653C();
    if (v54)
    {
      id v55 = v54;
    }
    else
    {
      uint64_t v56 = *(uint64_t (**)(uint64_t))(**(void **)(v18 + v81) + 288);
      uint64_t v57 = swift_retain();
      uint64_t v58 = (void *)v56(v57);
      swift_release();
      id v59 = v58;
      uint64_t v60 = v91;
      sub_100A04D58(v59, (uint64_t)v91);
      uint64_t v61 = v82;
      sub_100A061E8((uint64_t)v60, (uint64_t)v82);
      uint64_t v84 = (char *)objc_allocWithZone((Class)CRLMaskInfo);
      uint64_t v62 = &v61[v90[5]];
      float v63 = *(float *)v62;
      float v64 = *((float *)v62 + 1);
      float v65 = *((float *)v62 + 2);
      float v66 = *((float *)v62 + 3);
      float v67 = *((float *)v62 + 4);
      uint64_t v68 = v62[20];
      LODWORD(v81) = v62[21];
      LODWORD(v80) = v62[22];
      unsigned int v79 = v62[23];
      id v69 = objc_allocWithZone((Class)CRLCanvasInfoGeometry);
      uint64_t v90 = (int *)v52;
      id v70 = [v69 initWithPosition:v68 size:v81 widthValid:v80 heightValid:v79 horizontalFlip:v63 verticalFlip:v64 angle:v65];
      unint64_t v71 = sub_100AB0C00(v61);
      id v55 = [v84 initWithImageItem:v18 geometry:v70 pathSource:v71];

      sub_100EA2EDC((uint64_t)v61);
      sub_100EA2EDC((uint64_t)v60);
      uint64_t v54 = 0;
    }
    id v72 = v54;
    id v73 = v85;
    [v55 setGeometry:v85];
    id v74 = v55;
    sub_100A36B4C(v55);

    id v75 = v52;
    sub_101023724(v18, (uint64_t)&off_101518040, v86);
  }
}

id sub_100EA2864(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (char *)objc_allocWithZone(v3);
  uint64_t v8 = &v7[OBJC_IVAR____TtC8Freeform22CRLCommandReplaceImage_id];
  uint64_t v9 = type metadata accessor for UUID();
  uint64_t v10 = *(void *)(v9 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v8, a1, v9);
  *(void *)&v7[OBJC_IVAR____TtC8Freeform22CRLCommandReplaceImage_imageData] = a2;
  *(void *)&v7[OBJC_IVAR____TtC8Freeform22CRLCommandReplaceImage_thumbnailData] = a3;
  v13.receiver = v7;
  v13.super_class = v3;
  [super init];
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(a1, v9);
  return v11;
}

void sub_100EA2C8C()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC8Freeform22CRLCommandReplaceImage_id;
  uint64_t v2 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  uint64_t v3 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform22CRLCommandReplaceImage_thumbnailData);
}

id sub_100EA2D18()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLCommandReplaceImage();
  return [super dealloc];
}

uint64_t sub_100EA2DE0()
{
  return type metadata accessor for CRLCommandReplaceImage();
}

uint64_t type metadata accessor for CRLCommandReplaceImage()
{
  uint64_t result = qword_1016A06F8;
  if (!qword_1016A06F8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100EA2E34()
{
  uint64_t result = type metadata accessor for UUID();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_100EA2EDC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for CRLMaskInfoData();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void *sub_100EA2F38(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = (void *)a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_DWORD *)a1 = *(_DWORD *)a2;
    *(unsigned char *)(a1 + 4) = *((unsigned char *)a2 + 4);
    uint64_t v7 = *(int *)(a3 + 36);
    uint64_t v8 = a1 + v7;
    uint64_t v9 = (uint64_t)a2 + v7;
    *(unsigned char *)(a1 + v7) = *((unsigned char *)a2 + v7);
    uint64_t v10 = *(int *)(sub_1005057FC(&qword_101685C80) + 48);
    id v11 = (void *)(v8 + v10);
    uint64_t v12 = (const void *)(v9 + v10);
    uint64_t v13 = type metadata accessor for Date();
    uint64_t v14 = *(void *)(v13 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
    {
      uint64_t v15 = sub_1005057FC(&qword_101672EB0);
      memcpy(v11, v12, *(void *)(*(void *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v14 + 16))(v11, v12, v13);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
    }
    *(void *)((char *)v4 + *(int *)(a3 + 40)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 40));
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_100EA30E4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a1 + *(int *)(a2 + 36);
  uint64_t v3 = v2 + *(int *)(sub_1005057FC(&qword_101685C80) + 48);
  uint64_t v4 = type metadata accessor for Date();
  uint64_t v5 = *(void *)(v4 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
  }

  return swift_bridgeObjectRelease();
}

uint64_t sub_100EA31C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(unsigned char *)(a1 + 4) = *(unsigned char *)(a2 + 4);
  uint64_t v6 = *(int *)(a3 + 36);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  *(unsigned char *)(a1 + v6) = *(unsigned char *)(a2 + v6);
  uint64_t v9 = *(int *)(sub_1005057FC(&qword_101685C80) + 48);
  uint64_t v10 = (void *)(v7 + v9);
  id v11 = (const void *)(v8 + v9);
  uint64_t v12 = type metadata accessor for Date();
  uint64_t v13 = *(void *)(v12 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
  {
    uint64_t v14 = sub_1005057FC(&qword_101672EB0);
    memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v13 + 16))(v10, v11, v12);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  }
  *(void *)(a1 + *(int *)(a3 + 40)) = *(void *)(a2 + *(int *)(a3 + 40));
  swift_bridgeObjectRetain();
  return a1;
}

unsigned char *sub_100EA331C(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  uint64_t v6 = *(int *)(a3 + 36);
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  a1[v6] = a2[v6];
  uint64_t v9 = *(int *)(sub_1005057FC(&qword_101685C80) + 48);
  uint64_t v10 = &v7[v9];
  id v11 = &v8[v9];
  uint64_t v12 = type metadata accessor for Date();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v13 + 48);
  int v15 = v14(v10, 1, v12);
  int v16 = v14(v11, 1, v12);
  if (!v15)
  {
    if (!v16)
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v13 + 24))(v10, v11, v12);
      goto LABEL_7;
    }
    (*(void (**)(unsigned char *, uint64_t))(v13 + 8))(v10, v12);
    goto LABEL_6;
  }
  if (v16)
  {
LABEL_6:
    uint64_t v17 = sub_1005057FC(&qword_101672EB0);
    memcpy(v10, v11, *(void *)(*(void *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v13 + 16))(v10, v11, v12);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
LABEL_7:
  *(void *)&a1[*(int *)(a3 + 40)] = *(void *)&a2[*(int *)(a3 + 40)];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_100EA3500(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(unsigned char *)(a1 + 4) = *(unsigned char *)(a2 + 4);
  uint64_t v6 = *(int *)(a3 + 36);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  *(unsigned char *)(a1 + v6) = *(unsigned char *)(a2 + v6);
  uint64_t v9 = *(int *)(sub_1005057FC(&qword_101685C80) + 48);
  uint64_t v10 = (void *)(v7 + v9);
  id v11 = (const void *)(v8 + v9);
  uint64_t v12 = type metadata accessor for Date();
  uint64_t v13 = *(void *)(v12 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
  {
    uint64_t v14 = sub_1005057FC(&qword_101672EB0);
    memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v13 + 32))(v10, v11, v12);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  }
  *(void *)(a1 + *(int *)(a3 + 40)) = *(void *)(a2 + *(int *)(a3 + 40));
  return a1;
}

unsigned char *sub_100EA3658(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  uint64_t v6 = *(int *)(a3 + 36);
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  a1[v6] = a2[v6];
  uint64_t v9 = *(int *)(sub_1005057FC(&qword_101685C80) + 48);
  uint64_t v10 = &v7[v9];
  id v11 = &v8[v9];
  uint64_t v12 = type metadata accessor for Date();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v13 + 48);
  int v15 = v14(v10, 1, v12);
  int v16 = v14(v11, 1, v12);
  if (!v15)
  {
    if (!v16)
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v13 + 40))(v10, v11, v12);
      goto LABEL_7;
    }
    (*(void (**)(unsigned char *, uint64_t))(v13 + 8))(v10, v12);
    goto LABEL_6;
  }
  if (v16)
  {
LABEL_6:
    uint64_t v17 = sub_1005057FC(&qword_101672EB0);
    memcpy(v10, v11, *(void *)(*(void *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v13 + 32))(v10, v11, v12);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
LABEL_7:
  *(void *)&a1[*(int *)(a3 + 40)] = *(void *)&a2[*(int *)(a3 + 40)];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_100EA3834(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100EA3848);
}

uint64_t sub_100EA3848(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1005057FC(&qword_101685C80);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1 + *(int *)(a3 + 36);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v10(v9, a2, v8);
  }
  else
  {
    unint64_t v12 = *(void *)(a1 + *(int *)(a3 + 40));
    if (v12 >= 0xFFFFFFFF) {
      LODWORD(v12) = -1;
    }
    return (v12 + 1);
  }
}

uint64_t sub_100EA3910(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100EA3924);
}

uint64_t sub_100EA3924(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_1005057FC(&qword_101685C80);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = result;
    uint64_t v11 = a1 + *(int *)(a4 + 36);
    unint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v12(v11, a2, a2, v10);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 40)) = (a2 - 1);
  }
  return result;
}

uint64_t type metadata accessor for CRLZoneSyncResultScenarios()
{
  uint64_t result = qword_1016A0760;
  if (!qword_1016A0760) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_100EA3A34()
{
  uint64_t v2 = &unk_1011BAD90;
  uint64_t v3 = &unk_1011BAD90;
  uint64_t v4 = &unk_1011BAD90;
  uint64_t v5 = &unk_1011BAD90;
  uint64_t v6 = &unk_1011BAD90;
  sub_1005E873C();
  if (v0 <= 0x3F)
  {
    swift_getTupleTypeLayout2();
    uint64_t v7 = &v1;
    uint64_t v8 = (char *)&value witness table for Builtin.BridgeObject + 64;
    swift_initStructMetadata();
  }
}

uint64_t sub_100EA3B00(void *a1, uint64_t a2)
{
  uint64_t v4 = a1;
  v2[4] = _swiftEmptyArrayStorage;
  v2[5] = 0;
  v2[2] = a1;
  uint64_t v5 = *(void *)(a2 + 16);
  if (!v5)
  {
    id v27 = a1;
    swift_bridgeObjectRelease();
LABEL_18:
    v2[3] = _swiftEmptyDictionarySingleton;
    uint64_t v28 = sub_100EA3D90();

    swift_beginAccess();
    v2[4] = v28;
    swift_bridgeObjectRelease();
    return (uint64_t)v2;
  }
  id v6 = a1;
  uint64_t v7 = 0;
  while (1)
  {
    long long v32 = *(_OWORD *)(a2 + 16 * v7 + 32);
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v10 = *(void *)(*((void *)&v32 + 1) + 8);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t))(v10 + 8);
    swift_unknownObjectRetain();
    unint64_t v12 = (void *)v11(ObjectType, v10);
    swift_unknownObjectRetain();
    id v13 = v12;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v16 = sub_100956CAC((uint64_t)v13);
    uint64_t v17 = _swiftEmptyDictionarySingleton[2];
    BOOL v18 = (v15 & 1) == 0;
    uint64_t v19 = v17 + v18;
    if (__OFADD__(v17, v18)) {
      break;
    }
    char v20 = v15;
    if (_swiftEmptyDictionarySingleton[3] >= v19)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        if (v15) {
          goto LABEL_3;
        }
      }
      else
      {
        sub_100982204();
        if (v20) {
          goto LABEL_3;
        }
      }
    }
    else
    {
      sub_10096AE50(v19, isUniquelyReferenced_nonNull_native);
      unint64_t v21 = sub_100956CAC((uint64_t)v13);
      if ((v20 & 1) != (v22 & 1)) {
        goto LABEL_21;
      }
      unint64_t v16 = v21;
      if (v20)
      {
LABEL_3:
        uint64_t v8 = _swiftEmptyDictionarySingleton[7];
        swift_unknownObjectRelease();
        *(_OWORD *)(v8 + 16 * v16) = v32;
        goto LABEL_4;
      }
    }
    _swiftEmptyDictionarySingleton[(v16 >> 6) + 8] |= 1 << v16;
    *(void *)(_swiftEmptyDictionarySingleton[6] + 8 * v16) = v13;
    *(_OWORD *)(_swiftEmptyDictionarySingleton[7] + 16 * v16) = v32;
    uint64_t v23 = _swiftEmptyDictionarySingleton[2];
    BOOL v24 = __OFADD__(v23, 1);
    uint64_t v25 = v23 + 1;
    if (v24) {
      goto LABEL_20;
    }
    _swiftEmptyDictionarySingleton[2] = v25;
    id v26 = v13;
LABEL_4:
    ++v7;
    swift_unknownObjectRelease();

    swift_bridgeObjectRelease();
    if (v5 == v7)
    {
      swift_bridgeObjectRelease();
      uint64_t v2 = v31;
      uint64_t v4 = a1;
      goto LABEL_18;
    }
  }
  __break(1u);
LABEL_20:
  __break(1u);
LABEL_21:
  sub_10050BF48(0, &qword_10167BED0);
  uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

double *sub_100EA3D90()
{
  uint64_t v0 = swift_bridgeObjectRetain();
  unint64_t v1 = sub_100C33D20(v0, (void (*)(void **__return_ptr, id *))sub_100EA41C0, 0, (void (*)(void **__return_ptr, void *))sub_100EA41D0, 0, (void (*)(double **__return_ptr, void *))sub_100EA4230, 0);
  swift_bridgeObjectRelease();
  uint64_t v17 = _swiftEmptyArrayStorage;
  BOOL v18 = _swiftEmptyArrayStorage;
  unint64_t v16 = _swiftEmptyArrayStorage;
  if (v1 >> 62) {
    goto LABEL_41;
  }
  uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v2)
  {
LABEL_3:
    unint64_t v3 = 0;
    while (1)
    {
      if ((v1 & 0xC000000000000001) != 0)
      {
        specialized _ArrayBuffer._getElementSlowPath(_:)();
        BOOL v4 = __OFADD__(v3++, 1);
        if (v4) {
          goto LABEL_39;
        }
      }
      else
      {
        if (v3 >= *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          goto LABEL_40;
        }
        swift_retain();
        BOOL v4 = __OFADD__(v3++, 1);
        if (v4) {
          goto LABEL_39;
        }
      }
      swift_retain_n();
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
      if (!((unint64_t)_swiftEmptyArrayStorage >> 62))
      {
        if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          goto LABEL_15;
        }
        goto LABEL_4;
      }
      swift_bridgeObjectRetain();
      uint64_t v11 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (v11) {
        break;
      }
LABEL_4:
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      if (v3 == v2) {
        goto LABEL_42;
      }
    }
    while (1)
    {
LABEL_15:
      unint64_t v5 = (unint64_t)_swiftEmptyArrayStorage >> 62;
      if ((unint64_t)_swiftEmptyArrayStorage >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v15 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        if (!v15)
        {
LABEL_35:
          __break(1u);
LABEL_36:
          __break(1u);
LABEL_37:
          __break(1u);
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
LABEL_41:
          swift_bridgeObjectRetain();
          uint64_t v2 = _CocoaArrayWrapper.endIndex.getter();
          swift_bridgeObjectRelease();
          if (!v2) {
            break;
          }
          goto LABEL_3;
        }
        swift_bridgeObjectRetain();
        uint64_t v8 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        if (!v8) {
          goto LABEL_36;
        }
      }
      else if (!*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        goto LABEL_35;
      }
      if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000001) != 0)
      {
        uint64_t v6 = specialized _ArrayBuffer._getElementSlowPath(_:)();
        if (!v5) {
          goto LABEL_20;
        }
      }
      else
      {
        if (!*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          goto LABEL_37;
        }
        uint64_t v6 = *(void *)&_swiftEmptyArrayStorage[4];
        swift_retain();
        if (!v5)
        {
LABEL_20:
          if (!*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10)) {
            goto LABEL_38;
          }
          goto LABEL_21;
        }
      }
      swift_bridgeObjectRetain();
      uint64_t v9 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (!v9) {
        goto LABEL_38;
      }
LABEL_21:
      sub_100F4D468(0, 1);
      sub_100EA4290(v6, &v17, &v18, &v16);
      swift_beginAccess();
      unint64_t v7 = swift_bridgeObjectRetain();
      sub_1006E3374(v7);
      swift_release();
      if ((unint64_t)_swiftEmptyArrayStorage >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        if (!v10) {
          goto LABEL_4;
        }
      }
      else if (!*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        goto LABEL_4;
      }
    }
  }
LABEL_42:
  swift_bridgeObjectRelease();
  unint64_t v12 = swift_bridgeObjectRetain();
  sub_1006E3188(v12);
  unint64_t v13 = swift_bridgeObjectRetain();
  sub_1006E3188(v13);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v16;
}

uint64_t sub_100EA41C0@<X0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  *a2 = *(_OWORD *)(a1 + 8);
  return swift_unknownObjectRetain();
}

uint64_t sub_100EA41D0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 8);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)(v3 + 32) + 8))(ObjectType);
  *a2 = result;
  a2[1] = v6;
  return result;
}

uint64_t sub_100EA4230@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 8);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)(v3 + 32) + 16))(ObjectType);
  *a2 = result;
  a2[1] = v6;
  return result;
}

void sub_100EA4290(uint64_t a1, void *a2, void *a3, void *a4)
{
  if (*(void *)(a1 + 32))
  {
    uint64_t v7 = *(void *)(a1 + 40);
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v9 = *(void *)(v7 + 8);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t))(v9 + 8);
    swift_unknownObjectRetain();
    uint64_t v11 = (void *)v10(ObjectType, v9);
    uint64_t v12 = *(void *)(v7 + 24);
    if ((*(uint64_t (**)(uint64_t, uint64_t))(v12 + 16))(ObjectType, v12))
    {
      id v13 = v11;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)((*a2 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*a2 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
    }
    else
    {
      char v14 = (*(uint64_t (**)(uint64_t, uint64_t))(v12 + 8))(ObjectType, v12);
      id v15 = v11;
      if (v14)
      {
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)((*a3 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*a3 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
      }
      else
      {
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)((*a4 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*a4 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
      }
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
    swift_unknownObjectRelease();
  }
}

uint64_t sub_100EA4498()
{
  uint64_t v2 = v0;
  uint64_t v3 = (uint64_t *)(v0 + 32);
  swift_beginAccess();
  unint64_t v4 = *(void *)(v0 + 32);
  if (v4 >> 62) {
    goto LABEL_101;
  }
  if (!*(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    return 0;
  }
LABEL_3:
  char v65 = 0;
  unint64_t v64 = 0;
  for (Swift::Int i = (void *)&_mh_execute_header; ; Swift::Int i = (void *)&_mh_execute_header)
  {
    while (1)
    {
      if ((unint64_t)*v3 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v38 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        if (!v38) {
          goto LABEL_93;
        }
      }
      else if (!*(void *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        goto LABEL_93;
      }
      if ((unint64_t)_swiftEmptyArrayStorage >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v39 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        uint64_t v7 = v39 + 1;
        if (__OFADD__(v39, 1)) {
          goto LABEL_87;
        }
      }
      else
      {
        uint64_t v6 = *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
        uint64_t v7 = v6 + 1;
        if (__OFADD__(v6, 1)) {
          goto LABEL_87;
        }
      }
      if (v7 > 100) {
        goto LABEL_93;
      }
      uint64_t v8 = *v3;
      if ((*v3 & 0xC000000000000001) == 0) {
        break;
      }
      swift_bridgeObjectRetain();
      id v1 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      swift_bridgeObjectRelease();
      uint64_t v10 = *(void *)(v2 + 24);
      if (*(void *)(v10 + 16)) {
        goto LABEL_12;
      }
LABEL_29:
      sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"advanceToNextBatchForSaving(syncLogicProvider:)", 47, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Sync/CRLSyncRecordGroup.swift", 83, 2, 100, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"advanceToNextBatchForSaving(syncLogicProvider:)", 47, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Sync/CRLSyncRecordGroup.swift", 83, 2, 100);
      swift_beginAccess();
      if ((unint64_t)*v3 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v40 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        if (!v40) {
          goto LABEL_89;
        }
      }
      else if (!*(void *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        goto LABEL_89;
      }
      uint64_t v26 = *v3;
      if ((unint64_t)*v3 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v41 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        if (!v41) {
          goto LABEL_90;
        }
      }
      else if (!*(void *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        goto LABEL_90;
      }
      if ((v26 & 0xC000000000000001) != 0)
      {
        id v27 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        if (!*(void *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          goto LABEL_91;
        }
        id v27 = *(id *)(v26 + 32);
      }
      uint64_t v28 = v27;
      if ((unint64_t)*v3 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v42 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        if (!v42)
        {
LABEL_96:
          __break(1u);
LABEL_97:
          __break(1u);
LABEL_98:
          __break(1u);
LABEL_99:
          __break(1u);
LABEL_100:
          __break(1u);
LABEL_101:
          swift_bridgeObjectRetain();
          uint64_t v62 = _CocoaArrayWrapper.endIndex.getter();
          swift_bridgeObjectRelease();
          if (!v62) {
            return 0;
          }
          goto LABEL_3;
        }
      }
      else if (!*(void *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        goto LABEL_96;
      }
      sub_100F4DBA8(0, 1);
      swift_endAccess();
    }
    if (!*(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_88;
    }
    uint64_t v9 = *(void **)(v8 + 32);
    uint64_t v10 = *(void *)(v2 + 24);
    uint64_t v11 = *(void *)(v10 + 16);
    id v1 = v9;
    if (!v11) {
      goto LABEL_29;
    }
LABEL_12:
    id v1 = v1;
    unint64_t v12 = sub_100956CAC((uint64_t)v1);
    if ((v13 & 1) == 0)
    {

      goto LABEL_29;
    }
    char v14 = (uint64_t *)(*(void *)(v10 + 56) + 16 * v12);
    uint64_t v15 = *v14;
    uint64_t v16 = v14[1];
    swift_unknownObjectRetain();

    uint64_t v17 = (void *)sub_100D2D698(v15, v16);
    if (v17) {
      break;
    }
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"advanceToNextBatchForSaving(syncLogicProvider:)", 47, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Sync/CRLSyncRecordGroup.swift", 83, 2, 105, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"advanceToNextBatchForSaving(syncLogicProvider:)", 47, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Sync/CRLSyncRecordGroup.swift", 83, 2, 105);
    if (qword_10166FB88 != -1) {
      swift_once();
    }
    swift_beginAccess();
    BOOL v18 = (void *)static OS_os_log.dataSync;
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_10117E810;
    *(void *)(inited + 56) = sub_10050BF48(0, &qword_10167BED0);
    *(void *)(inited + 64) = sub_100EA50B4();
    *(void *)(inited + 32) = v1;
    id v1 = v1;
    id v20 = v18;
    uint64_t v21 = static os_log_type_t.error.getter();
    sub_100BAC898((uint64_t)v20, (uint64_t)&_mh_execute_header, v21, (uint64_t)"Failed to create cloud record from local record for ID %{public}@", 65, 2, inited);
    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();

    swift_beginAccess();
    if ((unint64_t)*v3 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v22 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v22 = *(void *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    if (!v22) {
      goto LABEL_97;
    }
    uint64_t v23 = *v3;
    if ((unint64_t)*v3 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v43 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (!v43) {
        goto LABEL_98;
      }
    }
    else if (!*(void *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      goto LABEL_98;
    }
    if ((v23 & 0xC000000000000001) != 0)
    {
      id v24 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else
    {
      if (!*(void *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        goto LABEL_99;
      }
      id v24 = *(id *)(v23 + 32);
    }
    uint64_t v25 = v24;
    if ((unint64_t)*v3 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v44 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (!v44) {
        goto LABEL_100;
      }
    }
    else if (!*(void *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      goto LABEL_100;
    }
    sub_100F4DBA8(0, 1);
    swift_endAccess();

LABEL_27:
    swift_unknownObjectRelease();
  }
  Swift::Int i = v17;
  unint64_t v29 = (unint64_t)[v17 size];
  if ((v29 & 0x8000000000000000) != 0) {
    goto LABEL_110;
  }
  BOOL v30 = __CFADD__(v29, v64);
  v64 += v29;
  if (!v30)
  {
    if (qword_10166F698 != -1) {
      swift_once();
    }
    unint64_t v31 = qword_10171B390;
    if ((unint64_t)_swiftEmptyArrayStorage >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v45 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (v45) {
        goto LABEL_45;
      }
    }
    else if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
LABEL_45:
      if (v31 < v64) {
        goto LABEL_92;
      }
    }
    uint64_t ObjectType = swift_getObjectType();
    char v33 = (*(uint64_t (**)(uint64_t, uint64_t))(v16 + 48))(ObjectType, v16);
    id v34 = i;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
    swift_beginAccess();
    if ((unint64_t)*v3 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v46 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (!v46) {
        goto LABEL_107;
      }
    }
    else if (!*(void *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      goto LABEL_107;
    }
    uint64_t v35 = *v3;
    if ((unint64_t)*v3 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v47 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (!v47) {
        goto LABEL_108;
      }
    }
    else if (!*(void *)((v35 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      goto LABEL_108;
    }
    if ((v35 & 0xC000000000000001) != 0)
    {
      id v36 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else
    {
      if (!*(void *)((v35 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        goto LABEL_109;
      }
      id v36 = *(id *)(v35 + 32);
    }
    float v37 = v36;
    if (!((unint64_t)*v3 >> 62))
    {
      Swift::Int i = *(void **)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (!i) {
        goto LABEL_86;
      }
      goto LABEL_57;
    }
    swift_bridgeObjectRetain();
    Swift::Int i = (void *)_CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (i)
    {
LABEL_57:
      v65 |= v33;
      sub_100F4DBA8(0, 1);
      swift_endAccess();

      goto LABEL_27;
    }
LABEL_86:
    __break(1u);
LABEL_87:
    __break(1u);
LABEL_88:
    __break(1u);
LABEL_89:
    __break(1u);
LABEL_90:
    __break(1u);
LABEL_91:
    __break(1u);
LABEL_92:

    swift_unknownObjectRelease();
LABEL_93:
    sub_10050BF48(0, (unint64_t *)&qword_101672E50);
    sub_10050BF48(0, (unint64_t *)&qword_101674210);
    v48._countAndFlagsBits = static String._unconditionallyBridgeFromObjectiveC(_:)();
    v48._object = v49;
    v50._countAndFlagsBits = 0x74654D6472616F42;
    v50._object = (void *)0xED00006174616461;
    Class isa = CKRecordZoneID.init(zoneName:ownerName:)(v50, v48).super.isa;
    char v52 = static NSObject.== infix(_:_:)();

    type metadata accessor for CRLSyncRecordSaveBatch();
    swift_allocObject();
    swift_retain();
    uint64_t v53 = sub_1009ED124((id *)_swiftEmptyArrayStorage, v2, v65 & 1, (v52 & 1) == 0);
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v54 = *(void *)(v2 + 40);
    BOOL v55 = __OFADD__(v54, 1);
    uint64_t v56 = v54 + 1;
    if (v55)
    {
      __break(1u);
    }
    else
    {
      *(void *)(v2 + 40) = v56;
      if (qword_10166FB88 == -1)
      {
LABEL_95:
        swift_beginAccess();
        uint64_t v57 = (void *)static OS_os_log.dataSync;
        sub_1005057FC((uint64_t *)&unk_101672B40);
        uint64_t v58 = swift_initStackObject();
        *(_OWORD *)(v58 + 16) = xmmword_10117E810;
        uint64_t v59 = *(void *)(v2 + 40);
        *(void *)(v58 + 56) = &type metadata for Int;
        *(void *)(v58 + 64) = &protocol witness table for Int;
        *(void *)(v58 + 32) = v59;
        id v60 = v57;
        uint64_t v61 = static os_log_type_t.default.getter();
        sub_100BAC898((uint64_t)v60, (uint64_t)&_mh_execute_header, v61, (uint64_t)"Formed new batch #%d for save task.", 35, 2, v58);
        swift_setDeallocating();
        sub_1005057FC(&qword_101672B50);
        swift_arrayDestroy();

        return v53;
      }
    }
    swift_once();
    goto LABEL_95;
  }
  __break(1u);
LABEL_107:
  __break(1u);
LABEL_108:
  __break(1u);
LABEL_109:
  __break(1u);
LABEL_110:
  uint64_t result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100EA5048()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for CRLSyncRecordGroup()
{
  return self;
}

unint64_t sub_100EA50B4()
{
  unint64_t result = qword_101685CC8;
  if (!qword_101685CC8)
  {
    sub_10050BF48(255, &qword_10167BED0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101685CC8);
  }
  return result;
}

uint64_t sub_100EA511C(uint64_t a1, uint64_t a2)
{
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v8 = a2;
  sub_100EAF9C8(a1, (uint64_t)sub_100CD6060, 0, isUniquelyReferenced_nonNull_native, (uint64_t)&v8);
  uint64_t v6 = v8;
  swift_bridgeObjectRelease();
  if (v2) {
    swift_bridgeObjectRelease();
  }
  return v6;
}

uint64_t sub_100EA51A8@<X0>(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v63 = a4;
  uint64_t v65 = a5;
  uint64_t v66 = a3;
  uint64_t v68 = a2;
  uint64_t v7 = sub_1005057FC(&qword_101693800);
  uint64_t v8 = v7 - 8;
  __chkstk_darwin(v7, v9);
  id v69 = (char *)&v54 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11, v12);
  char v14 = (char *)&v54 - v13;
  __chkstk_darwin(v15, v16);
  BOOL v18 = (char *)&v54 - v17;
  uint64_t v19 = type metadata accessor for CRLAssetData();
  uint64_t v20 = v19 - 8;
  uint64_t v57 = v19 - 8;
  __chkstk_darwin(v19, v21);
  unint64_t v64 = (char *)&v54 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23, v24);
  uint64_t v26 = (char *)&v54 - v25;
  uint64_t v62 = (char *)&v54 - v25;
  id v27 = &v18[*(int *)(v8 + 72)];
  uint64_t v67 = type metadata accessor for UUID();
  uint64_t v28 = *(void *)(v67 - 8);
  unint64_t v29 = *(void (**)(char *, char *, uint64_t))(v28 + 32);
  uint64_t v59 = v28;
  id v60 = v29;
  uint64_t v61 = v28 + 32;
  v29(v18, a1, v67);
  BOOL v30 = &v18[*(int *)(v8 + 56)];
  uint64_t v31 = (uint64_t)v18;
  uint64_t v32 = v68;
  *(void *)BOOL v30 = v68;
  *((void *)v30 + 1) = a3;
  uint64_t v55 = type metadata accessor for URL();
  uint64_t v33 = *(void *)(v55 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v33 + 32))(v27, v63, v55);
  uint64_t v63 = *(int *)(v20 + 32);
  *(void *)&v26[v63] = _swiftEmptyDictionarySingleton;
  uint64_t v34 = *(int *)(v8 + 56);
  uint64_t v35 = v14;
  uint64_t v56 = v14;
  id v36 = &v14[v34];
  uint64_t v58 = &v35[*(int *)(v8 + 72)];
  float v37 = v58;
  uint64_t v54 = *(void (**)(void))(v28 + 16);
  v54();
  uint64_t v38 = v66;
  *(void *)id v36 = v32;
  *((void *)v36 + 1) = v38;
  uint64_t v39 = *(void (**)(char *, char *, uint64_t))(v33 + 16);
  uint64_t v40 = v37;
  uint64_t v41 = v55;
  v39(v40, v27, v55);
  uint64_t v42 = &v69[*(int *)(v8 + 56)];
  uint64_t v43 = &v69[*(int *)(v8 + 72)];
  v54();
  uint64_t v44 = v66;
  *(void *)uint64_t v42 = v68;
  *((void *)v42 + 1) = v44;
  v39(v43, v27, v41);
  swift_bridgeObjectRetain();
  sub_100522F00(v31, &qword_101693800);
  uint64_t v45 = *(void *)v42;
  uint64_t v46 = *((void *)v42 + 1);
  uint64_t v47 = (uint64_t)v64;
  uint64_t v48 = v67;
  v60(v64, v56, v67);
  uint64_t v49 = v57;
  Swift::String v50 = (void *)(v47 + *(int *)(v57 + 28));
  *Swift::String v50 = v45;
  v50[1] = v46;
  *(void *)(v47 + *(int *)(v49 + 32)) = _swiftEmptyDictionarySingleton;
  id v51 = *(void (**)(char *, uint64_t))(v33 + 8);
  v51(v43, v41);
  (*(void (**)(char *, uint64_t))(v59 + 8))(v69, v48);
  v51(v58, v41);
  uint64_t v52 = (uint64_t)v62;
  swift_bridgeObjectRelease();
  sub_1008A7A50(v47, v52);
  sub_10077F98C(v52, v65);
  return sub_100671108(v52);
}

id sub_100EA5584(uint64_t a1)
{
  URL._bridgeToObjectiveC()(__stack_chk_guard);
  uint64_t v3 = v2;
  id v12 = 0;
  id v4 = [(id)swift_getObjCClassFromMetadata() fileHandleForReadingFromURL:v2 error:&v12];

  id v5 = v12;
  if (v4)
  {
    uint64_t v6 = type metadata accessor for URL();
    uint64_t v7 = *(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);
    id v8 = v5;
    v7(a1, v6);
  }
  else
  {
    id v9 = v12;
    _convertNSErrorToError(_:)();

    swift_willThrow();
    uint64_t v10 = type metadata accessor for URL();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(a1, v10);
  }
  return v4;
}

void sub_100EA56DC()
{
  uint64_t v1 = v0;
  uint64_t v2 = *(void *)(v0 + OBJC_IVAR____TtC8Freeform19CRLAssetFileManager_lock);
  uint64_t v3 = *(os_unfair_lock_s **)(v2 + 16);
  os_unfair_lock_lock(v3);
  uint64_t v4 = OBJC_IVAR____TtC8Freeform19CRLAssetFileManager_didEnsureAssetDirectory;
  if (*(unsigned char *)(v1 + OBJC_IVAR____TtC8Freeform19CRLAssetFileManager_didEnsureAssetDirectory))
  {
    id v5 = v3;
  }
  else
  {
    uint64_t v6 = self;
    id v7 = [v6 defaultManager];
    URL._bridgeToObjectiveC()((NSURL *)OBJC_IVAR____TtC8Freeform19CRLAssetFileManager_assetsDirectoryURL);
    id v9 = v8;
    id v20 = 0;
    unsigned int v10 = [v7 createDirectoryAtURL:v8 withIntermediateDirectories:1 attributes:0 error:&v20];

    id v11 = v20;
    if (!v10) {
      goto LABEL_6;
    }
    id v12 = v20;
    id v13 = [v6 defaultManager];
    URL._bridgeToObjectiveC()((NSURL *)OBJC_IVAR____TtC8Freeform19CRLAssetFileManager_deletedAssetsDirectoryURL);
    uint64_t v15 = v14;
    id v20 = 0;
    unsigned int v16 = [v13 createDirectoryAtURL:v14 withIntermediateDirectories:1 attributes:0 error:&v20];

    id v11 = v20;
    if (v16)
    {
      *(unsigned char *)(v1 + v4) = 1;
      uint64_t v17 = *(os_unfair_lock_s **)(v2 + 16);
      id v18 = v11;
      id v5 = v17;
    }
    else
    {
LABEL_6:
      id v19 = v11;
      _convertNSErrorToError(_:)();

      swift_willThrow();
      id v5 = *(os_unfair_lock_s **)(v2 + 16);
    }
  }
  os_unfair_lock_unlock(v5);
}

uint64_t sub_100EA58A4(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + OBJC_IVAR____TtC8Freeform33CRLBoardItemSyncLocalChangeRecord_itemData);
  if (v1)
  {
    uint64_t v2 = (*(uint64_t (**)(void))(*(void *)v1 + 408))();
    if ((v3 & 1) != 0 && v2 == 3)
    {
      uint64_t v4 = self;
      swift_retain();
      id v5 = [v4 standardUserDefaults];
      unsigned int v6 = [v5 BOOLForKey:@"CRLImageItemsRequireAssetDownloadForSendCopyUserDefault"];

      if (v6)
      {
        if (qword_10166FA90 != -1) {
          swift_once();
        }
        swift_beginAccess();
        id v8 = (id)static OS_os_log.crlSendACopy;
        uint64_t v9 = static os_log_type_t.default.getter();
        sub_100BAC898((uint64_t)v8, (uint64_t)&_mh_execute_header, v9, (uint64_t)"UserDefaults force checkIfAssetIsStillDownloading to be true for image item.", 76, 2, (uint64_t)_swiftEmptyArrayStorage);
        swift_release();

        goto LABEL_9;
      }
    }
    else
    {
      uint64_t v7 = swift_retain();
    }
    uint64_t v11 = (*(uint64_t (**)(uint64_t))(*(void *)v1 + 568))(v7);
    uint64_t v12 = (*(uint64_t (**)(void))(*(void *)v1 + 576))();
    uint64_t v13 = sub_100EA511C(v12, v11);
    __chkstk_darwin(v13, v14);
    char v10 = sub_100EB0BEC(v15, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100EB0BE4);
    swift_release();
    swift_bridgeObjectRelease();
    return v10 & 1;
  }
  sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"checkIfAssetIsStillDownloading(for:)", 36, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLAssetFileManager.swift", 91, 2, 69, (uint64_t)"Unexpected missing itemData for boardItemSyncLocalChangeRecord", 62, 2u, (uint64_t)_swiftEmptyArrayStorage);
  sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"checkIfAssetIsStillDownloading(for:)", 36, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLAssetFileManager.swift", 91, 2, 69);
LABEL_9:
  char v10 = 1;
  return v10 & 1;
}

BOOL sub_100EA5B88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = sub_1005057FC(&qword_101672E90);
  __chkstk_darwin(v4 - 8, v5);
  uint64_t v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1005057FC((uint64_t *)&unk_101674520);
  __chkstk_darwin(v8 - 8, v9);
  uint64_t v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for UUID();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12, v14);
  unsigned int v16 = (char *)&v20 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100522E9C(a3, (uint64_t)v11, (uint64_t *)&unk_101674520);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
  {
    sub_100522F00((uint64_t)v11, (uint64_t *)&unk_101674520);
    return 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v16, v11, v12);
    sub_100EA7CA0((uint64_t)v16, 0, 3, 0, 0, v7);
    (*(void (**)(char *, uint64_t))(v13 + 8))(v16, v12);
    uint64_t v18 = type metadata accessor for URL();
    BOOL v17 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v18 - 8) + 48))(v7, 1, v18) == 1;
    sub_100522F00((uint64_t)v7, &qword_101672E90);
  }
  return v17;
}

void sub_100EA5DD4(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(v2 + OBJC_IVAR____TtC8Freeform19CRLAssetFileManager_lock);
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v5 + 16));
  uint64_t v6 = (uint64_t *)(v2 + OBJC_IVAR____TtC8Freeform19CRLAssetFileManager_assetFileURLCache);
  swift_beginAccess();
  uint64_t v7 = *v6;
  if (*(void *)(v7 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v8 = sub_100955FC8(a1);
    if (v9)
    {
      unint64_t v10 = v8;
      uint64_t v11 = *(void *)(v7 + 56);
      uint64_t v12 = sub_1005057FC((uint64_t *)&unk_101684F90);
      uint64_t v13 = *(void *)(v12 - 8);
      sub_100522E9C(v11 + *(void *)(v13 + 72) * v10, a2, (uint64_t *)&unk_101684F90);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v13 + 56))(a2, 0, 1, v12);
    }
    else
    {
      uint64_t v15 = sub_1005057FC((uint64_t *)&unk_101684F90);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(a2, 1, 1, v15);
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v14 = sub_1005057FC((uint64_t *)&unk_101684F90);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(a2, 1, 1, v14);
  }
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v5 + 16));
}

void sub_100EA5F9C(uint64_t a1, char *a2, int a3)
{
  int v97 = a3;
  unint64_t v99 = a2;
  *(void *)&long long v100 = a1;
  uint64_t v96 = type metadata accessor for UUID();
  uint64_t v95 = *(void *)(v96 - 8);
  __chkstk_darwin(v96, v4);
  uint64_t v98 = (char *)&v84 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for URLResourceValues();
  uint64_t v88 = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6, v7);
  uint64_t v90 = (char *)&v84 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8, v10);
  id v89 = (char *)&v84 - v11;
  uint64_t v12 = sub_1005057FC((uint64_t *)&unk_101674170);
  uint64_t v14 = __chkstk_darwin(v12 - 8, v13);
  unsigned int v16 = (char *)&v84 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14, v17);
  id v19 = (char *)&v84 - v18;
  uint64_t v20 = sub_1005057FC(&qword_101684FA0);
  __chkstk_darwin(v20 - 8, v21);
  uint64_t v93 = (char *)&v84 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = type metadata accessor for URL();
  uint64_t v24 = *(void *)(v23 - 8);
  uint64_t v26 = __chkstk_darwin(v23, v25);
  uint64_t v28 = (char *)&v84 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = __chkstk_darwin(v26, v29);
  uint64_t v32 = (char *)&v84 - v31;
  __chkstk_darwin(v30, v33);
  int v94 = (char *)&v84 - v34;
  uint64_t v35 = *(void *)(v3 + OBJC_IVAR____TtC8Freeform19CRLAssetFileManager_lock);
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v35 + 16));
  id v36 = (uint64_t *)(v3 + OBJC_IVAR____TtC8Freeform19CRLAssetFileManager_assetFileURLCache);
  swift_beginAccess();
  uint64_t v37 = *v36;
  if (!*(void *)(*v36 + 16))
  {
    uint64_t v48 = sub_1005057FC((uint64_t *)&unk_101684F90);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v48 - 8) + 56))(v19, 1, 1, v48);
    uint64_t v49 = v100;
LABEL_7:
    sub_100522F00((uint64_t)v19, (uint64_t *)&unk_101674170);
    uint64_t v53 = (uint64_t)v98;
    (*(void (**)(char *, uint64_t, uint64_t))(v95 + 16))(v98, v49, v96);
    uint64_t v54 = sub_1005057FC((uint64_t *)&unk_101684F90);
    uint64_t v55 = *(int *)(v54 + 48);
    (*(void (**)(char *, char *, uint64_t))(v24 + 16))(v16, v99, v23);
    *(_DWORD *)&v16[v55] = v97;
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v54 - 8) + 56))(v16, 0, 1, v54);
    swift_beginAccess();
    sub_10057D748((uint64_t)v16, v53);
    swift_endAccess();
    goto LABEL_24;
  }
  uint64_t v86 = v6;
  swift_bridgeObjectRetain();
  unint64_t v38 = sub_100955FC8(v100);
  uint64_t v92 = v32;
  uint64_t v91 = v28;
  if (v39)
  {
    unint64_t v40 = v38;
    uint64_t v41 = v24;
    uint64_t v42 = *(void *)(v37 + 56);
    uint64_t v43 = sub_1005057FC((uint64_t *)&unk_101684F90);
    uint64_t v44 = *(void *)(v43 - 8);
    uint64_t v87 = v23;
    uint64_t v45 = v35;
    uint64_t v46 = v44;
    uint64_t v47 = v42 + *(void *)(v44 + 72) * v40;
    uint64_t v24 = v41;
    sub_100522E9C(v47, (uint64_t)v19, (uint64_t *)&unk_101684F90);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v46 + 56))(v19, 0, 1, v43);
    uint64_t v35 = v45;
    uint64_t v23 = v87;
  }
  else
  {
    uint64_t v50 = sub_1005057FC((uint64_t *)&unk_101684F90);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v50 - 8) + 56))(v19, 1, 1, v50);
  }
  swift_bridgeObjectRelease();
  uint64_t v51 = sub_1005057FC((uint64_t *)&unk_101684F90);
  int v52 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v51 - 8) + 48))(v19, 1, v51);
  uint64_t v49 = v100;
  if (v52 == 1) {
    goto LABEL_7;
  }
  uint64_t v85 = v35;
  uint64_t v56 = *(void (**)(char *, char *, uint64_t))(v24 + 32);
  uint64_t v57 = v93;
  v56(v93, v19, v23);
  uint64_t v58 = v94;
  v56(v94, v57, v23);
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t v59 = v24;
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117D8C0;
  uint64_t v61 = URL.path.getter();
  uint64_t v63 = v62;
  *(void *)(inited + 56) = &type metadata for String;
  unint64_t v64 = sub_100528BE4();
  *(void *)(inited + 64) = v64;
  *(void *)(inited + 32) = v61;
  *(void *)(inited + 40) = v63;
  uint64_t v65 = v99;
  uint64_t v66 = URL.path.getter();
  *(void *)(inited + 96) = &type metadata for String;
  *(void *)(inited + 104) = v64;
  *(void *)(inited + 72) = v66;
  *(void *)(inited + 80) = v67;
  LOBYTE(v61) = static URL.== infix(_:_:)();
  uint64_t v68 = *(void (**)(char *, char *, uint64_t))(v59 + 16);
  v68(v92, v58, v23);
  v68(v91, v65, v23);
  if (v61)
  {
    char v69 = 1;
    id v70 = v91;
  }
  else
  {
    uint64_t v87 = v23;
    sub_1005057FC(&qword_10167BF20);
    uint64_t v71 = swift_initStackObject();
    long long v100 = xmmword_10117E810;
    *(_OWORD *)(v71 + 16) = xmmword_10117E810;
    *(void *)(v71 + 32) = NSURLCanonicalPathKey;
    id v72 = NSURLCanonicalPathKey;
    sub_10050858C(v71);
    swift_setDeallocating();
    type metadata accessor for URLResourceKey(0);
    swift_arrayDestroy();
    id v73 = v89;
    URL.resourceValues(forKeys:)();
    swift_bridgeObjectRelease();
    uint64_t v74 = URLResourceValues.canonicalPath.getter();
    uint64_t v76 = v75;
    (*(void (**)(char *, uint64_t))(v88 + 8))(v73, v86);
    uint64_t v77 = swift_initStackObject();
    *(_OWORD *)(v77 + 16) = v100;
    *(void *)(v77 + 32) = v72;
    uint64_t v78 = v72;
    sub_10050858C(v77);
    swift_setDeallocating();
    swift_arrayDestroy();
    unsigned int v79 = v90;
    id v70 = v91;
    URL.resourceValues(forKeys:)();
    swift_bridgeObjectRelease();
    uint64_t v80 = URLResourceValues.canonicalPath.getter();
    uint64_t v82 = v81;
    (*(void (**)(char *, uint64_t))(v88 + 8))(v79, v86);
    if (v76)
    {
      uint64_t v23 = v87;
      if (v82)
      {
        if (v74 == v80 && v76 == v82)
        {
          swift_bridgeObjectRelease();
          char v69 = 1;
        }
        else
        {
          char v69 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
        }
      }
      else
      {
        char v69 = 0;
      }
    }
    else
    {
      uint64_t v23 = v87;
      if (!v82)
      {
        char v69 = 1;
        goto LABEL_21;
      }
      char v69 = 0;
    }
    swift_bridgeObjectRelease();
  }
LABEL_21:
  uint64_t v83 = *(void (**)(char *, uint64_t))(v59 + 8);
  v83(v92, v23);
  v83(v70, v23);
  if ((v69 & 1) == 0)
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"_updateCachedAssetFileURLEntryIfNotCached(for:assetFileURL:flags:)", 66, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLAssetFileManager.swift", 91, 2, 111, (uint64_t)"Asset file URL mutated unexpectedly. current=%@, new=%@", 55, 2u, inited);
    sub_1005598CC(inited, (uint64_t)"_updateCachedAssetFileURLEntryIfNotCached(for:assetFileURL:flags:)", 66, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLAssetFileManager.swift", 91, 2, 111);
  }
  swift_bridgeObjectRelease();
  v83(v94, v23);
  uint64_t v35 = v85;
LABEL_24:
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v35 + 16));
}

void sub_100EA6A00(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v58 = a2;
  unint64_t v59 = a3;
  uint64_t v5 = type metadata accessor for UUID();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5, v7);
  uint64_t v9 = (char *)&v50 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for URL();
  uint64_t v60 = *(void *)(v10 - 8);
  __chkstk_darwin(v10, v11);
  uint64_t v13 = (char *)&v50 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1005057FC((uint64_t *)&unk_101674170);
  __chkstk_darwin(v14 - 8, v15);
  uint64_t v56 = (char *)&v50 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17, v18);
  uint64_t v20 = (char *)&v50 - v19;
  uint64_t v21 = sub_1005057FC(&qword_101684FA0);
  __chkstk_darwin(v21, v22);
  uint64_t v24 = (char *)&v50 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v61 = *(void *)(v3 + OBJC_IVAR____TtC8Freeform19CRLAssetFileManager_lock);
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v61 + 16));
  uint64_t v57 = v3;
  uint64_t v25 = (void *)(v3 + OBJC_IVAR____TtC8Freeform19CRLAssetFileManager_assetFileURLCache);
  swift_beginAccess();
  uint64_t v55 = v25;
  uint64_t v26 = *v25;
  if (!*(void *)(v26 + 16))
  {
    uint64_t v37 = sub_1005057FC((uint64_t *)&unk_101684F90);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v37 - 8) + 56))(v20, 1, 1, v37);
LABEL_7:
    sub_100522F00((uint64_t)v20, (uint64_t *)&unk_101674170);
    goto LABEL_8;
  }
  uint64_t v52 = v6;
  swift_bridgeObjectRetain();
  unint64_t v27 = sub_100955FC8(a1);
  uint64_t v53 = v5;
  uint64_t v54 = a1;
  if (v28)
  {
    unint64_t v29 = v27;
    uint64_t v30 = v13;
    uint64_t v31 = v9;
    uint64_t v32 = *(void *)(v26 + 56);
    uint64_t v33 = sub_1005057FC((uint64_t *)&unk_101684F90);
    uint64_t v34 = *(void *)(v33 - 8);
    uint64_t v51 = v10;
    uint64_t v35 = v34;
    uint64_t v36 = v32 + *(void *)(v34 + 72) * v29;
    uint64_t v9 = v31;
    uint64_t v13 = v30;
    sub_100522E9C(v36, (uint64_t)v20, (uint64_t *)&unk_101684F90);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v35 + 56))(v20, 0, 1, v33);
    uint64_t v10 = v51;
  }
  else
  {
    uint64_t v38 = sub_1005057FC((uint64_t *)&unk_101684F90);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 56))(v20, 1, 1, v38);
  }
  swift_bridgeObjectRelease();
  uint64_t v39 = sub_1005057FC((uint64_t *)&unk_101684F90);
  uint64_t v40 = *(void *)(v39 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v40 + 48))(v20, 1, v39) == 1) {
    goto LABEL_7;
  }
  uint64_t v51 = v40;
  int v41 = *(_DWORD *)&v20[*(int *)(v39 + 48)];
  uint64_t v42 = *(int *)(v21 + 48);
  uint64_t v43 = v60;
  (*(void (**)(char *, char *, uint64_t))(v60 + 32))(v24, v20, v10);
  *(_DWORD *)&v24[v42] = v41;
  int v44 = *(_DWORD *)&v24[*(int *)(v21 + 48)];
  uint64_t v45 = *(void (**)(char *, uint64_t))(v43 + 8);
  v45(v24, v10);
  if ((v44 & 1) == 0)
  {
    uint64_t v46 = v43;
    uint64_t v47 = v54;
    sub_100EB02FC(v54, v58, v59);
    URL.appendingPathComponent(_:)();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t, uint64_t))(v52 + 16))(v9, v47, v53);
    uint64_t v48 = *(int *)(v39 + 48);
    uint64_t v49 = (uint64_t)v56;
    (*(void (**)(char *, char *, uint64_t))(v46 + 16))(v56, v13, v10);
    *(_DWORD *)(v49 + v48) = 1;
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v51 + 56))(v49, 0, 1, v39);
    swift_beginAccess();
    sub_10057D748(v49, (uint64_t)v9);
    swift_endAccess();
    v45(v13, v10);
  }
LABEL_8:
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v61 + 16));
}

uint64_t sub_100EA6F80(uint64_t a1, void *a2)
{
  uint64_t v5 = type metadata accessor for URL();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5, v7);
  uint64_t v9 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = a1;
  URL.path.getter();
  NSString v10 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  v42[0] = 0;
  uint64_t v11 = a2;
  id v12 = [a2 contentsOfDirectoryAtPath:v10 error:v42];

  id v13 = v42[0];
  if (v12)
  {
    uint64_t v14 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
    id v15 = v13;

    uint64_t v16 = *(void *)(v14 + 16);
    if (!v16) {
      return swift_bridgeObjectRelease();
    }
    uint64_t v37 = v2;
    uint64_t v36 = swift_bridgeObjectRetain();
    for (uint64_t i = v36 + 40; ; i += 16)
    {
      swift_bridgeObjectRetain();
      URL.appendingPathComponent(_:)();
      URL.path.getter();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
      NSString v18 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      v42[0] = 0;
      unsigned int v19 = [v11 removeItemAtPath:v18 error:v42, v36];

      id v20 = v42[0];
      if (!v19) {
        break;
      }
      swift_bridgeObjectRelease();
      if (!--v16) {
        return swift_bridgeObjectRelease_n();
      }
    }
    uint64_t v23 = v20;
    _convertNSErrorToError(_:)();

    swift_willThrow();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
  }
  else
  {
    id v22 = v42[0];
    _convertNSErrorToError(_:)();

    swift_willThrow();
  }
  uint64_t v37 = 0;
  if (qword_10166FB70 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v24 = (void *)static OS_os_log.boardStore;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117D8C0;
  swift_getErrorValue();
  uint64_t v26 = v40;
  uint64_t v27 = v41;
  id v28 = v24;
  uint64_t v29 = Error.publicDescription.getter(v26, v27);
  uint64_t v31 = v30;
  *(void *)(inited + 56) = &type metadata for String;
  unint64_t v32 = sub_100528BE4();
  *(void *)(inited + 64) = v32;
  *(void *)(inited + 32) = v29;
  *(void *)(inited + 40) = v31;
  swift_getErrorValue();
  uint64_t v33 = Error.fullDescription.getter(v39);
  *(void *)(inited + 96) = &type metadata for String;
  *(void *)(inited + 104) = v32;
  *(void *)(inited + 72) = v33;
  *(void *)(inited + 80) = v34;
  uint64_t v35 = static os_log_type_t.error.getter();
  sub_100BAC898((uint64_t)v28, (uint64_t)&_mh_execute_header, v35, (uint64_t)"Failed to remove all assets with error %{public}@ <%@>", 54, 2, inited);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  return swift_errorRelease();
}

uint64_t sub_100EA739C()
{
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v2 = (void *)result;
    __chkstk_darwin(result, v1);
    sub_1005057FC(&qword_1016A0988);
    OS_dispatch_queue.sync<A>(execute:)();

    return v3;
  }
  return result;
}

uint64_t sub_100EA75F0(uint64_t a1)
{
  *(void *)(v2 + 264) = a1;
  *(void *)(v2 + 272) = v1;
  return _swift_task_switch(sub_100EA7610, 0, 0);
}

uint64_t sub_100EA7610()
{
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  v0[35] = Strong;
  if (Strong)
  {
    uint64_t v2 = Strong;
    uint64_t v3 = v0[33];
    uint64_t v4 = swift_task_alloc();
    v0[36] = v4;
    *(void *)(v4 + 16) = v2;
    *(void *)(v4 + 24) = v3;
    uint64_t v5 = (void *)swift_task_alloc();
    v0[37] = v5;
    uint64_t v6 = sub_1005057FC(&qword_1016A0988);
    void *v5 = v0;
    v5[1] = sub_100EA7768;
    return withCheckedThrowingContinuation<A>(isolation:function:_:)(v0 + 30, 0, 0, 0xD000000000000021, 0x8000000101293E20, sub_100EB0BC0, v4, v6);
  }
  else
  {
    uint64_t v7 = (uint64_t (*)(void))v0[1];
    return v7();
  }
}

uint64_t sub_100EA7768()
{
  *(void *)(*(void *)v1 + 304) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_100EA78E8;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_100EA7884;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100EA7884()
{
  uint64_t v1 = *(void *)(v0 + 240);
  uint64_t v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v2(v1);
}

uint64_t sub_100EA78E8()
{
  uint64_t v1 = (void *)v0[35];
  swift_task_dealloc();

  if (qword_10166FB70 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v2 = (void *)static OS_os_log.boardStore;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117DF40;
  id v15 = v2;
  uint64_t v4 = UUID.uuidString.getter();
  uint64_t v6 = v5;
  *(void *)(inited + 56) = &type metadata for String;
  unint64_t v7 = sub_100528BE4();
  *(void *)(inited + 64) = v7;
  *(void *)(inited + 32) = v4;
  *(void *)(inited + 40) = v6;
  swift_getErrorValue();
  uint64_t v8 = Error.publicDescription.getter(v0[28], v0[29]);
  *(void *)(inited + 96) = &type metadata for String;
  *(void *)(inited + 104) = v7;
  *(void *)(inited + 72) = v8;
  *(void *)(inited + 80) = v9;
  swift_getErrorValue();
  uint64_t v10 = Error.fullDescription.getter(v0[22]);
  *(void *)(inited + 136) = &type metadata for String;
  *(void *)(inited + 144) = v7;
  *(void *)(inited + 112) = v10;
  *(void *)(inited + 120) = v11;
  uint64_t v12 = static os_log_type_t.error.getter();
  sub_100BAC898((uint64_t)v15, (uint64_t)&_mh_execute_header, v12, (uint64_t)"Failed to fetch the asset row for %@ with error %{public}@ <%@>", 63, 2, inited);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  swift_errorRelease();
  id v13 = (uint64_t (*)(void))v0[1];
  return v13(0);
}

uint64_t sub_100EA7AE0()
{
  uint64_t v0 = type metadata accessor for CocoaError.Code();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0, v2);
  uint64_t v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v5 = URL.checkResourceIsReachable()();
  if (v6)
  {
    swift_errorRetain();
    static CocoaError.fileNoSuchFile.getter();
    sub_100EB0770((unint64_t *)&unk_101674190, (void (*)(uint64_t))&type metadata accessor for CocoaError.Code);
    char v7 = static _ErrorCodeProtocol.~= infix(_:_:)();
    swift_errorRelease();
    uint64_t v8 = *(void (**)(char *, uint64_t))(v1 + 8);
    v8(v4, v0);
    if ((v7 & 1) != 0
      || (swift_errorRetain(),
          static CocoaError.fileReadNoSuchFile.getter(),
          char v9 = static _ErrorCodeProtocol.~= infix(_:_:)(),
          swift_errorRelease(),
          v8(v4, v0),
          (v9 & 1) != 0))
    {
      swift_errorRelease();
      char v5 = 0;
    }
    else
    {
      char v5 = swift_willThrow();
    }
  }
  return v5 & 1;
}

uint64_t sub_100EA7CA0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W3>, uint64_t (*a4)(uint64_t)@<X4>, uint64_t a5@<X5>, char *a6@<X8>)
{
  uint64_t v73 = a5;
  unsigned int v79 = a4;
  uint64_t v78 = a2;
  uint64_t v76 = type metadata accessor for UUID();
  uint64_t v75 = *(void *)(v76 - 8);
  __chkstk_darwin(v76, v9);
  uint64_t v77 = (char *)&v67 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v83 = sub_1005057FC((uint64_t *)&unk_101684F90);
  uint64_t v81 = *(void *)(v83 - 8);
  __chkstk_darwin(v83 - 8, v11);
  id v72 = (char *)&v67 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13, v14);
  uint64_t v71 = (char *)&v67 - v15;
  uint64_t v16 = sub_1005057FC((uint64_t *)&unk_101674170);
  __chkstk_darwin(v16 - 8, v17);
  uint64_t v74 = (char *)&v67 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19, v20);
  id v22 = (char *)&v67 - v21;
  __chkstk_darwin(v23, v24);
  uint64_t v26 = (char *)&v67 - v25;
  uint64_t v27 = sub_1005057FC(&qword_101684FA0);
  __chkstk_darwin(v27, v28);
  uint64_t v30 = (char *)&v67 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = type metadata accessor for URL();
  uint64_t v32 = *(void *)(v31 - 8);
  __chkstk_darwin(v31, v33);
  uint64_t v85 = (char *)&v67 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v35, v36);
  uint64_t v39 = (char *)&v67 - v38;
  uint64_t v84 = a1;
  int v80 = a3;
  uint64_t v82 = a6;
  if (a3)
  {
    unint64_t v70 = v37;
    sub_100EA5DD4(a1, (uint64_t)v26);
    uint64_t v40 = v83;
    uint64_t v41 = *(unsigned int (**)(void, void, void))(v81 + 48);
    if (v41(v26, 1, v83) == 1)
    {
      sub_100522F00((uint64_t)v26, (uint64_t *)&unk_101674170);
    }
    else
    {
      uint64_t v67 = v41;
      int v69 = *(_DWORD *)&v26[*(int *)(v40 + 48)];
      uint64_t v42 = *(int *)(v27 + 48);
      uint64_t v68 = v32;
      uint64_t v43 = *(void (**)(char *, char *, uint64_t))(v32 + 32);
      v43(v30, v26, v31);
      *(_DWORD *)&v30[v42] = v69;
      int v44 = *(_DWORD *)&v30[*(int *)(v27 + 48)];
      v43(v39, v30, v31);
      if ((v44 & 2) != 0)
      {
        uint64_t v66 = v68;
        if ((v44 & 4) != 0)
        {
          uint64_t v63 = v82;
          v43(v82, v39, v31);
          uint64_t v64 = 0;
          uint64_t v32 = v66;
        }
        else
        {
          uint64_t v32 = v68;
          (*(void (**)(char *, uint64_t))(v68 + 8))(v39, v31);
          uint64_t v64 = 1;
          uint64_t v63 = v82;
        }
        return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v32 + 56))(v63, v64, 1, v31);
      }
      uint64_t v32 = v68;
      (*(void (**)(char *, uint64_t))(v68 + 8))(v39, v31);
      uint64_t v41 = v67;
    }
    sub_100EA5DD4(v84, (uint64_t)v22);
    uint64_t v45 = v83;
    if (v41(v22, 1, v83) != 1)
    {
      uint64_t v52 = *(int *)(v45 + 48);
      uint64_t v53 = *(void (**)(char *, char *, uint64_t))(v32 + 32);
      uint64_t v54 = v71;
      v53(v71, v22, v31);
      int v51 = *(_DWORD *)&v22[v52];
      uint64_t v55 = v72;
      v53(v72, v54, v31);
      uint64_t v46 = v85;
      v53(v85, v55, v31);
      goto LABEL_18;
    }
    sub_100522F00((uint64_t)v22, (uint64_t *)&unk_101674170);
    a1 = v84;
    unint64_t v37 = v70;
  }
  if (!v37 && (v80 & 2) != 0)
  {
    uint64_t v46 = v85;
    uint64_t v47 = v79;
    if (v79)
    {
      swift_retain();
      uint64_t v48 = v47(a1);
      sub_1005174AC((uint64_t)v47);
      if (v48)
      {
LABEL_12:
        uint64_t v50 = *(void *)(v48 + OBJC_IVAR____TtC8Freeform19CRLAssetDatabaseRow_fileExtension);
        unint64_t v49 = *(void *)(v48 + OBJC_IVAR____TtC8Freeform19CRLAssetDatabaseRow_fileExtension + 8);
        swift_bridgeObjectRetain();
        int v51 = 1;
LABEL_17:
        uint64_t v56 = v84;
        sub_100EB02FC(v84, v50, v49);
        URL.appendingPathComponent(_:)();
        swift_bridgeObjectRelease();
        sub_100EA5F9C(v56, v46, v51);
        swift_release();
        swift_bridgeObjectRelease();
        goto LABEL_18;
      }
    }
    else
    {
      uint64_t v48 = sub_100EA739C();
      if (v48) {
        goto LABEL_12;
      }
    }
    int v51 = 0;
    uint64_t v50 = 0;
    unint64_t v49 = 0;
    goto LABEL_17;
  }
  sub_100EB02FC(a1, v78, v37);
  uint64_t v46 = v85;
  URL.appendingPathComponent(_:)();
  swift_bridgeObjectRelease();
  LOBYTE(v51) = 0;
LABEL_18:
  LOBYTE(v85) = sub_100EA7AE0() & 1;
  LODWORD(v85) = v85;
  if ((_BYTE)v85) {
    int v57 = 6;
  }
  else {
    int v57 = 2;
  }
  uint64_t v58 = *(os_unfair_lock_s **)(*(void *)(v86 + OBJC_IVAR____TtC8Freeform19CRLAssetFileManager_lock) + 16);
  os_unfair_lock_lock(v58);
  uint64_t v59 = (uint64_t)v77;
  (*(void (**)(char *, uint64_t, uint64_t))(v75 + 16))(v77, v84, v76);
  uint64_t v60 = v83;
  uint64_t v61 = *(int *)(v83 + 48);
  uint64_t v62 = (uint64_t)v74;
  (*(void (**)(char *, char *, uint64_t))(v32 + 16))(v74, v46, v31);
  *(_DWORD *)(v62 + v61) = v57 & 0xFFFFFFFE | v51 & 1;
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v81 + 56))(v62, 0, 1, v60);
  swift_beginAccess();
  sub_10057D748(v62, v59);
  swift_endAccess();
  os_unfair_lock_unlock(v58);
  uint64_t v63 = v82;
  if (v85)
  {
    (*(void (**)(char *, char *, uint64_t))(v32 + 32))(v82, v46, v31);
    uint64_t v64 = 0;
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v32 + 8))(v46, v31);
    uint64_t v64 = 1;
  }
  return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v32 + 56))(v63, v64, 1, v31);
}

uint64_t sub_100EA869C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  *(void *)(v6 + 304) = a4;
  *(void *)(v6 + 312) = v5;
  *(_DWORD *)(v6 + 464) = a5;
  *(void *)(v6 + 288) = a2;
  *(void *)(v6 + 296) = a3;
  *(void *)(v6 + 280) = a1;
  uint64_t v7 = type metadata accessor for UUID();
  *(void *)(v6 + 320) = v7;
  *(void *)(v6 + 328) = *(void *)(v7 - 8);
  *(void *)(v6 + 336) = swift_task_alloc();
  uint64_t v8 = sub_1005057FC((uint64_t *)&unk_101684F90);
  *(void *)(v6 + 344) = v8;
  *(void *)(v6 + 352) = *(void *)(v8 - 8);
  *(void *)(v6 + 360) = swift_task_alloc();
  *(void *)(v6 + 368) = swift_task_alloc();
  sub_1005057FC((uint64_t *)&unk_101674170);
  *(void *)(v6 + 376) = swift_task_alloc();
  *(void *)(v6 + 384) = swift_task_alloc();
  *(void *)(v6 + 392) = swift_task_alloc();
  *(void *)(v6 + 400) = sub_1005057FC(&qword_101684FA0);
  *(void *)(v6 + 408) = swift_task_alloc();
  uint64_t v9 = type metadata accessor for URL();
  *(void *)(v6 + 416) = v9;
  *(void *)(v6 + 424) = *(void *)(v9 - 8);
  *(void *)(v6 + 432) = swift_task_alloc();
  *(void *)(v6 + 440) = swift_task_alloc();
  return _swift_task_switch(sub_100EA88C4, 0, 0);
}

uint64_t sub_100EA88C4()
{
  int v1 = *(_DWORD *)(v0 + 464);
  if ((v1 & 1) == 0) {
    goto LABEL_8;
  }
  uint64_t v2 = *(void *)(v0 + 392);
  uint64_t v3 = *(void *)(v0 + 344);
  uint64_t v4 = *(void *)(v0 + 352);
  sub_100EA5DD4(*(void *)(v0 + 288), v2);
  uint64_t v5 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
  if (v5(v2, 1, v3) == 1)
  {
    sub_100522F00(*(void *)(v0 + 392), (uint64_t *)&unk_101674170);
LABEL_6:
    uint64_t v13 = *(void *)(v0 + 384);
    uint64_t v14 = *(void *)(v0 + 344);
    sub_100EA5DD4(*(void *)(v0 + 288), v13);
    if (v5(v13, 1, v14) != 1)
    {
      uint64_t v21 = *(void *)(v0 + 432);
      uint64_t v22 = *(void *)(v0 + 416);
      uint64_t v23 = *(void *)(v0 + 384);
      uint64_t v25 = *(void *)(v0 + 360);
      uint64_t v24 = *(void *)(v0 + 368);
      uint64_t v26 = *(int *)(*(void *)(v0 + 344) + 48);
      uint64_t v27 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 + 424) + 32);
      v27(v24, v23, v22);
      LODWORD(v23) = *(_DWORD *)(v23 + v26);
      v27(v25, v24, v22);
      v27(v21, v25, v22);
      int v18 = v23 & 1;
LABEL_18:
      char v28 = sub_100EA7AE0();
      uint64_t v29 = *(void *)(v0 + 424);
      uint64_t v45 = *(void *)(v0 + 416);
      uint64_t v30 = *(void *)(v0 + 376);
      uint64_t v32 = *(void *)(v0 + 344);
      uint64_t v31 = *(void *)(v0 + 352);
      uint64_t v34 = *(void *)(v0 + 328);
      uint64_t v33 = *(void *)(v0 + 336);
      uint64_t v35 = *(void *)(v0 + 320);
      uint64_t v46 = *(void *)(v0 + 432);
      uint64_t v36 = *(void *)(v0 + 288);
      int v49 = v28 & 1;
      if (v28) {
        int v37 = 6;
      }
      else {
        int v37 = 2;
      }
      int v38 = v37 | v18;
      lock = *(os_unfair_lock_s **)(*(void *)(*(void *)(v0 + 312)
                                              + OBJC_IVAR____TtC8Freeform19CRLAssetFileManager_lock)
                                  + 16);
      os_unfair_lock_lock(lock);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v34 + 16))(v33, v36, v35);
      uint64_t v39 = *(int *)(v32 + 48);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v29 + 16))(v30, v46, v45);
      *(_DWORD *)(v30 + v39) = v38;
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v31 + 56))(v30, 0, 1, v32);
      swift_beginAccess();
      sub_10057D748(v30, v33);
      swift_endAccess();
      os_unfair_lock_unlock(lock);
      if (v49)
      {
        uint64_t v40 = *(void *)(v0 + 424);
        uint64_t v41 = *(void *)(v0 + 416);
        uint64_t v42 = *(void *)(v0 + 280);
        (*(void (**)(uint64_t, void, uint64_t))(v40 + 32))(v42, *(void *)(v0 + 432), v41);
LABEL_28:
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v40 + 56))(v42, 0, 1, v41);
        goto LABEL_29;
      }
      uint64_t v40 = *(void *)(v0 + 424);
      uint64_t v41 = *(void *)(v0 + 416);
      uint64_t v42 = *(void *)(v0 + 280);
      (*(void (**)(void, uint64_t))(v40 + 8))(*(void *)(v0 + 432), v41);
      goto LABEL_24;
    }
    sub_100522F00(*(void *)(v0 + 384), (uint64_t *)&unk_101674170);
    int v1 = *(_DWORD *)(v0 + 464);
LABEL_8:
    unint64_t v15 = *(void *)(v0 + 304);
    int v16 = v1 & 2;
    if (v15) {
      BOOL v17 = 1;
    }
    else {
      BOOL v17 = v16 == 0;
    }
    if (!v17)
    {
      uint64_t v19 = (void *)swift_task_alloc();
      *(void *)(v0 + 448) = v19;
      *uint64_t v19 = v0;
      v19[1] = sub_100EA8F4C;
      uint64_t v20 = *(void *)(v0 + 312);
      v19[33] = *(void *)(v0 + 288);
      v19[34] = v20;
      return _swift_task_switch(sub_100EA7610, 0, 0);
    }
    sub_100EB02FC(*(void *)(v0 + 288), *(void *)(v0 + 296), v15);
    URL.appendingPathComponent(_:)();
    swift_bridgeObjectRelease();
    int v18 = 0;
    goto LABEL_18;
  }
  uint64_t v48 = *(void *)(v0 + 440);
  uint64_t v6 = *(void *)(v0 + 416);
  uint64_t v8 = *(void *)(v0 + 400);
  uint64_t v7 = *(void *)(v0 + 408);
  int v9 = *(_DWORD *)(*(void *)(v0 + 392) + *(int *)(*(void *)(v0 + 344) + 48));
  uint64_t v10 = *(int *)(v8 + 48);
  uint64_t v11 = *(void (**)(uint64_t))(*(void *)(v0 + 424) + 32);
  v11(v7);
  *(_DWORD *)(v7 + v10) = v9;
  int v12 = *(_DWORD *)(v7 + *(int *)(v8 + 48));
  ((void (*)(uint64_t, uint64_t, uint64_t))v11)(v48, v7, v6);
  if ((v12 & 2) == 0)
  {
    (*(void (**)(void, void))(*(void *)(v0 + 424) + 8))(*(void *)(v0 + 440), *(void *)(v0 + 416));
    goto LABEL_6;
  }
  uint64_t v41 = *(void *)(v0 + 416);
  uint64_t v40 = *(void *)(v0 + 424);
  uint64_t v42 = *(void *)(v0 + 280);
  if ((v12 & 4) != 0)
  {
    ((void (*)(void, void, void))v11)(*(void *)(v0 + 280), *(void *)(v0 + 440), *(void *)(v0 + 416));
    goto LABEL_28;
  }
  (*(void (**)(void, uint64_t))(v40 + 8))(*(void *)(v0 + 440), v41);
LABEL_24:
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v40 + 56))(v42, 1, 1, v41);
LABEL_29:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v43 = *(uint64_t (**)(void))(v0 + 8);
  return v43();
}

uint64_t sub_100EA8F4C(uint64_t a1)
{
  *(void *)(*(void *)v1 + 456) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_100EA904C, 0, 0);
}

uint64_t sub_100EA904C()
{
  uint64_t v1 = v0[57];
  if (v1)
  {
    uint64_t v3 = *(void *)(v1 + OBJC_IVAR____TtC8Freeform19CRLAssetDatabaseRow_fileExtension);
    unint64_t v2 = *(void *)(v1 + OBJC_IVAR____TtC8Freeform19CRLAssetDatabaseRow_fileExtension + 8);
    swift_bridgeObjectRetain();
    int v4 = 1;
  }
  else
  {
    int v4 = 0;
    uint64_t v3 = 0;
    unint64_t v2 = 0;
  }
  uint64_t v5 = (char *)v0[54];
  uint64_t v6 = v0[36];
  sub_100EB02FC(v6, v3, v2);
  URL.appendingPathComponent(_:)();
  swift_bridgeObjectRelease();
  sub_100EA5F9C(v6, v5, v4);
  swift_release();
  swift_bridgeObjectRelease();
  char v7 = sub_100EA7AE0();
  uint64_t v8 = v0[53];
  uint64_t v24 = v0[52];
  uint64_t v9 = v0[47];
  uint64_t v11 = v0[43];
  uint64_t v10 = v0[44];
  uint64_t v13 = v0[41];
  uint64_t v12 = v0[42];
  uint64_t v14 = v0[40];
  uint64_t v25 = v0[54];
  uint64_t v15 = v0[36];
  int v27 = v7 & 1;
  if (v7) {
    int v16 = 6;
  }
  else {
    int v16 = 2;
  }
  int v17 = v16 | v4;
  lock = *(os_unfair_lock_s **)(*(void *)(v0[39] + OBJC_IVAR____TtC8Freeform19CRLAssetFileManager_lock) + 16);
  os_unfair_lock_lock(lock);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 16))(v12, v15, v14);
  uint64_t v18 = *(int *)(v11 + 48);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v9, v25, v24);
  *(_DWORD *)(v9 + v18) = v17;
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v10 + 56))(v9, 0, 1, v11);
  swift_beginAccess();
  sub_10057D748(v9, v12);
  swift_endAccess();
  os_unfair_lock_unlock(lock);
  uint64_t v19 = v0[53];
  uint64_t v20 = v0[52];
  uint64_t v21 = v0[35];
  if (v27)
  {
    (*(void (**)(uint64_t, void, uint64_t))(v19 + 32))(v21, v0[54], v20);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v19 + 56))(v21, 0, 1, v20);
  }
  else
  {
    (*(void (**)(void, uint64_t))(v19 + 8))(v0[54], v20);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v19 + 56))(v21, 1, 1, v20);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v22 = (uint64_t (*)(void))v0[1];
  return v22();
}

uint64_t sub_100EA94C4(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, void (*a5)(char *), uint64_t a6)
{
  uint64_t v7 = v6;
  v61[1] = a6;
  uint64_t v62 = a5;
  uint64_t v63 = a3;
  unint64_t v64 = a4;
  v61[0] = a1;
  uint64_t v9 = type metadata accessor for URL();
  uint64_t v73 = *(void *)(v9 - 8);
  __chkstk_darwin(v9, v10);
  uint64_t v12 = (char *)v61 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13, v14);
  uint64_t v66 = (char *)v61 - v15;
  uint64_t v16 = sub_1005057FC(&qword_101672E90);
  __chkstk_darwin(v16 - 8, v17);
  uint64_t v67 = (uint64_t)v61 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19, v20);
  uint64_t v71 = (uint64_t)v61 - v21;
  uint64_t v22 = type metadata accessor for DispatchPredicate();
  uint64_t v23 = *(void *)(v22 - 8);
  __n128 v25 = __chkstk_darwin(v22, v24);
  int v27 = (void *)((char *)v61 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v28 = *(void **)(v7 + OBJC_IVAR____TtC8Freeform19CRLAssetFileManager_writeAssetFileQueue);
  *int v27 = v28;
  (*(void (**)(void *, void, uint64_t, __n128))(v23 + 104))(v27, enum case for DispatchPredicate.onQueue(_:), v22, v25);
  id v29 = v28;
  LOBYTE(v28) = _dispatchPreconditionTest(_:)();
  (*(void (**)(void *, uint64_t))(v23 + 8))(v27, v22);
  if (v28)
  {
    uint64_t v65 = v12;
    uint64_t v72 = v9;
    if (qword_10166FBD8 == -1) {
      goto LABEL_3;
    }
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  swift_beginAccess();
  uint64_t v30 = (void *)static OS_os_log.assetManagement;
  uint64_t v69 = sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117E810;
  id v32 = v30;
  uint64_t v33 = UUID.uuidString.getter();
  uint64_t v35 = v34;
  *(void *)(inited + 56) = &type metadata for String;
  unint64_t v36 = sub_100528BE4();
  *(void *)(inited + 64) = v36;
  *(void *)(inited + 32) = v33;
  *(void *)(inited + 40) = v35;
  uint64_t v37 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v32, (uint64_t)&_mh_execute_header, v37, (uint64_t)"CRLAssetFileManager _writeAssetFile() assetUUID: %@", 51, 2, inited);
  swift_setDeallocating();
  uint64_t v70 = sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  uint64_t v38 = v72;
  uint64_t v39 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v73 + 56);
  v39(v71, 1, 1, v72);
  uint64_t v40 = v68;
  sub_100EA56DC();
  if (v40)
  {
    uint64_t v41 = v71;
    uint64_t v47 = (void *)static OS_os_log.assetManagement;
    uint64_t v48 = swift_initStackObject();
    *(_OWORD *)(v48 + 16) = xmmword_10117D8C0;
    swift_getErrorValue();
    uint64_t v49 = v75;
    uint64_t v50 = v76;
    id v51 = v47;
    uint64_t v52 = Error.publicDescription.getter(v49, v50);
    *(void *)(v48 + 56) = &type metadata for String;
    *(void *)(v48 + 64) = v36;
    *(void *)(v48 + 32) = v52;
    *(void *)(v48 + 40) = v53;
    swift_getErrorValue();
    uint64_t v54 = Error.fullDescription.getter(v74);
    *(void *)(v48 + 96) = &type metadata for String;
    *(void *)(v48 + 104) = v36;
    *(void *)(v48 + 72) = v54;
    *(void *)(v48 + 80) = v55;
    uint64_t v56 = static os_log_type_t.error.getter();
    sub_100BAC898((uint64_t)v51, (uint64_t)&_mh_execute_header, v56, (uint64_t)"Failed to write asset file with error: %{public}@ <%@>", 54, 2, v48);
    swift_setDeallocating();
    swift_arrayDestroy();

    uint64_t v45 = v67;
    sub_100522E9C(v41, v67, &qword_101672E90);
    uint64_t v57 = v72;
    uint64_t v58 = v73;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v73 + 48))(v45, 1, v72) == 1)
    {
      sub_100522F00(v45, &qword_101672E90);
    }
    else
    {
      uint64_t v59 = v65;
      (*(void (**)(char *, uint64_t, uint64_t))(v58 + 32))(v65, v45, v57);
      uint64_t v45 = (uint64_t)[self defaultManager];
      sub_100EA9C94();

      (*(void (**)(char *, uint64_t))(v58 + 8))(v59, v57);
    }
    swift_willThrow();
    sub_100522F00(v41, &qword_101672E90);
  }
  else
  {
    uint64_t v68 = v39;
    sub_100EB02FC(a2, v63, v64);
    uint64_t v42 = v66;
    URL.appendingPathComponent(_:)();
    swift_bridgeObjectRelease();
    char v43 = sub_100EA7AE0();
    uint64_t v44 = v71;
    sub_100522F00(v71, &qword_101672E90);
    if (v43)
    {
      LOBYTE(v45) = 0;
      uint64_t v46 = v73;
    }
    else
    {
      uint64_t v46 = v73;
      (*(void (**)(uint64_t, char *, uint64_t))(v73 + 16))(v44, v42, v38);
      v68(v44, 0, 1, v38);
      v62(v42);
      sub_100522F00(v44, &qword_101672E90);
      LOBYTE(v45) = 1;
    }
    (*(void (**)(void, char *, uint64_t))(v46 + 32))(v61[0], v42, v38);
  }
  return v45 & 1;
}

id sub_100EA9C94()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for CocoaError.Code();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2, v4);
  uint64_t v6 = (NSURL *)((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = (char *)((char *)v27 - (char *)v6);
  URL._bridgeToObjectiveC()(v6);
  uint64_t v9 = v8;
  v28[0] = 0;
  LODWORD(v1) = [v1 removeItemAtURL:v8 error:v28];

  id v10 = v28[0];
  if (v1)
  {
    return v10;
  }
  else
  {
    v27[1] = v28[0];
    id v12 = v28[0];
    _convertNSErrorToError(_:)();

    swift_willThrow();
    swift_errorRetain();
    static CocoaError.fileNoSuchFile.getter();
    sub_100EB0770((unint64_t *)&unk_101674190, (void (*)(uint64_t))&type metadata accessor for CocoaError.Code);
    LOBYTE(v12) = static _ErrorCodeProtocol.~= infix(_:_:)();
    swift_errorRelease();
    uint64_t v13 = *(void (**)(char *, uint64_t))(v3 + 8);
    v13(v7, v2);
    if ((v12 & 1) == 0)
    {
      swift_errorRetain();
      static CocoaError.fileReadNoSuchFile.getter();
      char v14 = static _ErrorCodeProtocol.~= infix(_:_:)();
      swift_errorRelease();
      v13(v7, v2);
      if ((v14 & 1) == 0)
      {
        if (qword_10166FB70 != -1) {
          swift_once();
        }
        swift_beginAccess();
        uint64_t v15 = (void *)static OS_os_log.boardStore;
        sub_1005057FC((uint64_t *)&unk_101672B40);
        uint64_t inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = xmmword_10117DF40;
        id v17 = v15;
        uint64_t v18 = URL.path.getter();
        uint64_t v20 = v19;
        *(void *)(inited + 56) = &type metadata for String;
        unint64_t v21 = sub_100528BE4();
        *(void *)(inited + 64) = v21;
        *(void *)(inited + 32) = v18;
        *(void *)(inited + 40) = v20;
        swift_getErrorValue();
        uint64_t v22 = Error.publicDescription.getter(v27[7], v27[8]);
        *(void *)(inited + 96) = &type metadata for String;
        *(void *)(inited + 104) = v21;
        *(void *)(inited + 72) = v22;
        *(void *)(inited + 80) = v23;
        swift_getErrorValue();
        uint64_t v24 = Error.fullDescription.getter(v27[3]);
        *(void *)(inited + 136) = &type metadata for String;
        *(void *)(inited + 144) = v21;
        *(void *)(inited + 112) = v24;
        *(void *)(inited + 120) = v25;
        uint64_t v26 = static os_log_type_t.error.getter();
        sub_100BAC898((uint64_t)v17, (uint64_t)&_mh_execute_header, v26, (uint64_t)"Failed to remove item from disk. path=%@, error=%{public}@ <%@>", 63, 2, inited);
        swift_setDeallocating();
        sub_1005057FC(&qword_101672B50);
        swift_arrayDestroy();
      }
    }
    return (id)swift_errorRelease();
  }
}

uint64_t sub_100EAA054(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void (*a7)(uint64_t, char *, uint64_t), void (*a8)(char *, char *, uint64_t))
{
  uint64_t v9 = v8;
  uint64_t v112 = a7;
  unint64_t v113 = a8;
  uint64_t v110 = a5;
  uint64_t v111 = a6;
  uint64_t v14 = sub_1005057FC(&qword_101672BB0);
  __chkstk_darwin(v14 - 8, v15);
  uint64_t v101 = (char *)v92 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_1005057FC((uint64_t *)&unk_101674170);
  __chkstk_darwin(v17 - 8, v18);
  unint64_t v99 = (char *)v92 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_1005057FC(&qword_1016A09A8);
  __chkstk_darwin(v20, v21);
  uint64_t v23 = (char *)v92 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = type metadata accessor for URL();
  uint64_t v105 = *(void *)(v24 - 8);
  __chkstk_darwin(v24, v25);
  int v27 = (char *)v92 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v106 = type metadata accessor for UUID();
  uint64_t v109 = *(void *)(v106 - 8);
  __chkstk_darwin(v106, v28);
  uint64_t v102 = (char *)v92 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v100 = v29;
  __chkstk_darwin(v30, v31);
  uint64_t v107 = (char *)v92 - v32;
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v108 = Strong;
    uint64_t v104 = v27;
    uint64_t v97 = a1;
    uint64_t v98 = a2;
    uint64_t v103 = v24;
    NSString v34 = String._bridgeToObjectiveC()();
    uint64_t v35 = a4;
    id v36 = [v34 pathExtension];

    uint64_t v37 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v39 = v38;

    __chkstk_darwin(v40, v41);
    uint64_t v42 = v111;
    v92[-8] = v110;
    v92[-7] = v42;
    v92[-6] = v9;
    v92[-5] = v37;
    uint64_t v88 = v39;
    uint64_t v89 = (uint64_t)v112;
    __chkstk_darwin(v43, v44);
    uint64_t v90 = sub_100EB0AF4;
    uint64_t v91 = v45;
    uint64_t v46 = v114;
    OS_dispatch_queue.sync<A>(execute:)();
    if (v46)
    {

      return swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v96 = v9;
      uint64_t v110 = v35;
      uint64_t v111 = a3;
      uint64_t v49 = *(int *)(v20 + 48);
      uint64_t v114 = 0;
      uint64_t v50 = &v23[v49];
      LODWORD(v112) = v23[*(int *)(v20 + 64)];
      uint64_t v52 = v109 + 32;
      id v51 = *(void (**)(char *, char *, uint64_t))(v109 + 32);
      uint64_t v53 = v107;
      v51(v107, v23, v106);
      uint64_t v54 = v105;
      uint64_t v55 = v105 + 32;
      uint64_t v56 = *(uint64_t (**)(char *, char *, uint64_t))(v105 + 32);
      uint64_t v57 = v56(v104, v50, v103);
      unint64_t v113 = (void (*)(char *, char *, uint64_t))v92;
      __chkstk_darwin(v57, v58);
      uint64_t v88 = v59;
      uint64_t v89 = (uint64_t)v53;
      uint64_t v90 = (uint64_t (*)(uint64_t, uint64_t))v37;
      uint64_t v91 = v39;
      uint64_t v60 = v114;
      OS_dispatch_queue.sync<A>(execute:)();
      if (v60)
      {
        uint64_t v61 = v106;
        uint64_t v62 = v103;
        swift_bridgeObjectRelease();
        if (v112)
        {
          id v63 = [self defaultManager];
          unint64_t v64 = v104;
          sub_100EA9C94();

          swift_willThrow();
          (*(void (**)(char *, uint64_t))(v105 + 8))(v64, v62);
        }
        else
        {
          swift_willThrow();

          (*(void (**)(char *, uint64_t))(v105 + 8))(v104, v62);
        }
        return (*(uint64_t (**)(char *, uint64_t))(v109 + 8))(v107, v61);
      }
      else
      {
        uint64_t v93 = (void (*)(uint64_t, char *, uint64_t))v56;
        uint64_t v94 = v55;
        uint64_t v95 = v52;
        uint64_t v112 = (void (*)(uint64_t, char *, uint64_t))v51;
        uint64_t v114 = 0;
        swift_bridgeObjectRelease();
        uint64_t v65 = *(os_unfair_lock_s **)(*(void *)(v96 + OBJC_IVAR____TtC8Freeform19CRLAssetFileManager_lock) + 16);
        os_unfair_lock_lock(v65);
        uint64_t v66 = (uint64_t)v102;
        uint64_t v67 = v106;
        uint64_t v68 = v107;
        unint64_t v113 = *(void (**)(char *, char *, uint64_t))(v109 + 16);
        v92[1] = v109 + 16;
        v113(v102, v107, v106);
        uint64_t v69 = sub_1005057FC((uint64_t *)&unk_101684F90);
        uint64_t v70 = *(int *)(v69 + 48);
        uint64_t v71 = (uint64_t)v99;
        (*(void (**)(char *, char *, uint64_t))(v54 + 16))(v99, v104, v103);
        *(_DWORD *)(v71 + v70) = 7;
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v69 - 8) + 56))(v71, 0, 1, v69);
        swift_beginAccess();
        sub_10057D748(v71, v66);
        swift_endAccess();
        os_unfair_lock_unlock(v65);
        uint64_t v72 = v109;
        if (qword_10166FBD8 != -1) {
          swift_once();
        }
        swift_beginAccess();
        uint64_t v73 = (void *)static OS_os_log.assetManagement;
        sub_1005057FC((uint64_t *)&unk_101672B40);
        uint64_t inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = xmmword_10117E810;
        id v75 = v73;
        uint64_t v76 = UUID.uuidString.getter();
        uint64_t v78 = v77;
        *(void *)(inited + 56) = &type metadata for String;
        *(void *)(inited + 64) = sub_100528BE4();
        *(void *)(inited + 32) = v76;
        *(void *)(inited + 40) = v78;
        uint64_t v79 = static os_log_type_t.default.getter();
        sub_100BAC898((uint64_t)v75, (uint64_t)&_mh_execute_header, v79, (uint64_t)"CRLAssetFileManager _notifyAssetMaterialized() assetUUID: %@", 60, 2, inited);
        swift_setDeallocating();
        sub_1005057FC(&qword_101672B50);
        swift_arrayDestroy();

        uint64_t v80 = type metadata accessor for TaskPriority();
        uint64_t v81 = (uint64_t)v101;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v80 - 8) + 56))(v101, 1, 1, v80);
        uint64_t v82 = v102;
        v113(v102, v68, v67);
        unint64_t v83 = (*(unsigned __int8 *)(v72 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v72 + 80);
        uint64_t v84 = (void *)swift_allocObject();
        v84[2] = 0;
        v84[3] = 0;
        id v85 = v108;
        v84[4] = v108;
        uint64_t v86 = v112;
        v112((uint64_t)v84 + v83, v82, v67);
        id v87 = v85;
        sub_1005912D0(v81, (uint64_t)&unk_1016A09B0, (uint64_t)v84);
        swift_release();

        v86(v97, v68, v67);
        v93(v98, v104, v103);
        swift_bridgeObjectRetain();
        return v111;
      }
    }
  }
  else
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"_synchronouslySaveAsset(filename:assetUUIDProvider:assetPersistenceProvider:)", 77, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLAssetFileManager.swift", 91, 2, 364, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    LOBYTE(v90) = 2;
    uint64_t v88 = "invalid nil found when unwrapping value";
    uint64_t v89 = 39;
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"_synchronouslySaveAsset(filename:assetUUIDProvider:assetPersistenceProvider:)", 77, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLAssetFileManager.swift", 91, 2, 364);
    sub_100679060();
    swift_allocError();
    *uint64_t v48 = 0xD000000000000028;
    v48[1] = 0x8000000101274780;
    return swift_willThrow();
  }
}

uint64_t sub_100EAAA68(uint64_t a1, uint64_t a2, uint64_t (*a3)(void), uint64_t a4, uint64_t a5, uint64_t a6, unint64_t a7, void (*a8)(char *), uint64_t a9)
{
  char v15 = a3();
  if (!v9) {
    char v15 = sub_100EA94C4(a2, a1, a6, a7, a8, a9);
  }
  return v15 & 1;
}

uint64_t sub_100EAAB38@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100EAC4C8(a1, a2);
}

id sub_100EAAB50()
{
  return sub_100EAC7D4();
}

uint64_t sub_100EAAB9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void (*a7)(uint64_t *), uint64_t a8)
{
  uint64_t v43 = a7;
  uint64_t v44 = a8;
  uint64_t v38 = a5;
  uint64_t v39 = a6;
  uint64_t v37 = a1;
  uint64_t v12 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v42 = *(void *)(v12 - 8);
  __chkstk_darwin(v12, v13);
  char v15 = (char *)&v36 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for DispatchQoS();
  uint64_t v40 = *(void *)(v16 - 8);
  uint64_t v41 = v16;
  __chkstk_darwin(v16, v17);
  uint64_t v19 = (char *)&v36 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_1005057FC(&qword_1016937F0);
  __chkstk_darwin(v20, v21);
  uint64_t v23 = (uint64_t *)((char *)&v36 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v25 = (void *)Strong;
    uint64_t v36 = *(void *)&v8[OBJC_IVAR____TtC8Freeform19CRLAssetFileManager_writeAssetFileQueue];
    uint64_t v26 = (void *)swift_allocObject();
    v26[2] = a3;
    v26[3] = a4;
    v26[4] = v37;
    v26[5] = a2;
    uint64_t v27 = v38;
    uint64_t v28 = v39;
    v26[6] = v8;
    v26[7] = v27;
    v26[8] = v28;
    v26[9] = v25;
    uint64_t v29 = v44;
    v26[10] = v43;
    v26[11] = v29;
    aBlock[4] = sub_100B51AF8;
    aBlock[5] = v26;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = *(void *)"";
    aBlock[2] = sub_100679958;
    void aBlock[3] = &unk_101531D78;
    uint64_t v30 = _Block_copy(aBlock);
    swift_retain();
    swift_bridgeObjectRetain();
    uint64_t v31 = v8;
    swift_retain();
    id v32 = v25;
    swift_retain();
    static DispatchQoS.unspecified.getter();
    uint64_t v45 = _swiftEmptyArrayStorage;
    sub_100EB0770((unint64_t *)&qword_1016747E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_1005057FC((uint64_t *)&unk_1016725D0);
    sub_100636834((unint64_t *)&qword_1016747F0, (uint64_t *)&unk_1016725D0);
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v30);

    (*(void (**)(char *, uint64_t))(v42 + 8))(v15, v12);
    (*(void (**)(char *, uint64_t))(v40 + 8))(v19, v41);
    return swift_release();
  }
  else
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"_saveAsset(filename:assetUUIDProvider:assetPersistenceProvider:completion:)", 75, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLAssetFileManager.swift", 91, 2, 422, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"_saveAsset(filename:assetUUIDProvider:assetPersistenceProvider:completion:)", 75, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLAssetFileManager.swift", 91, 2, 422);
    sub_100679060();
    uint64_t v34 = swift_allocError();
    *uint64_t v35 = 0xD000000000000028;
    v35[1] = 0x8000000101274780;
    uint64_t *v23 = v34;
    swift_storeEnumTagMultiPayload();
    v43(v23);
    return sub_100522F00((uint64_t)v23, &qword_1016937F0);
  }
}

uint64_t sub_100EAB018(void (*a1)(__n128), uint64_t a2, uint64_t a3, uint64_t a4, void *a5, void (*a6)(char *), void (*a7)(char *, uint64_t, uint64_t), void *a8, uint64_t a9, uint64_t a10)
{
  id v63 = a8;
  uint64_t v67 = a7;
  uint64_t v66 = a6;
  uint64_t v69 = a5;
  uint64_t v71 = a4;
  uint64_t v70 = a3;
  uint64_t v74 = a1;
  uint64_t v76 = a10;
  uint64_t v75 = a9;
  uint64_t v73 = sub_1005057FC(&qword_1016937F0);
  __chkstk_darwin(v73, v10);
  uint64_t v72 = (uint64_t)&v58 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for URL();
  uint64_t v64 = *(void *)(v12 - 8);
  uint64_t v13 = *(void *)(v64 + 64);
  __chkstk_darwin(v12, v14);
  __chkstk_darwin(v15, v16);
  uint64_t v65 = (uint64_t)&v58 - v17;
  __chkstk_darwin(v18, v19);
  uint64_t v21 = (char *)&v58 - v20;
  uint64_t v22 = type metadata accessor for UUID();
  uint64_t v23 = *(void *)(v22 - 8);
  uint64_t v24 = *(void *)(v23 + 64);
  __chkstk_darwin(v22, v25);
  __n128 v28 = __chkstk_darwin(v26, v27);
  uint64_t v68 = (uint64_t)&v58 - v29;
  v74(v28);
  uint64_t v58 = (char *)&v58 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v74 = (void (*)(__n128))((char *)&v58 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v59 = v21;
  uint64_t v61 = v23;
  uint64_t v62 = v22;
  uint64_t v60 = v12;
  NSString v30 = String._bridgeToObjectiveC()();
  id v31 = [v30 pathExtension];

  uint64_t v32 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v34 = v33;

  swift_bridgeObjectRetain();
  uint64_t v35 = v65;
  uint64_t v36 = v68;
  uint64_t v37 = v69;
  LODWORD(v73) = sub_100EA94C4(v65, v68, v32, (unint64_t)v34, v66, (uint64_t)v67);
  swift_bridgeObjectRelease();
  uint64_t v38 = v64;
  uint64_t v67 = *(void (**)(char *, uint64_t, uint64_t))(v64 + 32);
  uint64_t v39 = v59;
  uint64_t v40 = v35;
  uint64_t v41 = v60;
  v67(v59, v40, v60);
  (*(void (**)(char *, uint64_t, uint64_t))(v61 + 16))(v58, v36, v62);
  (*(void (**)(void (*)(__n128), char *, uint64_t))(v38 + 16))(v74, v39, v41);
  uint64_t v42 = v61;
  uint64_t v43 = *(unsigned __int8 *)(v61 + 80);
  uint64_t v72 = v32;
  uint64_t v44 = (v43 + 24) & ~v43;
  unint64_t v45 = (v24 + *(unsigned __int8 *)(v38 + 80) + v44) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80);
  unint64_t v46 = (v13 + v45 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v47 = (v46 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v66 = v34;
  uint64_t v48 = swift_allocObject();
  *(void *)(v48 + 16) = v37;
  (*(void (**)(uint64_t, char *, uint64_t))(v42 + 32))(v48 + v44, v58, v62);
  uint64_t v49 = v60;
  v67((char *)(v48 + v45), (uint64_t)v74, v60);
  uint64_t v50 = (void *)(v48 + v46);
  uint64_t v51 = v71;
  *uint64_t v50 = v70;
  v50[1] = v51;
  uint64_t v52 = v63;
  *(void *)(v48 + v47) = v63;
  unint64_t v53 = v48 + ((v47 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v54 = v76;
  *(void *)unint64_t v53 = v75;
  *(void *)(v53 + 8) = v54;
  *(unsigned char *)(v53 + 16) = v73 & 1;
  id v55 = v37;
  swift_bridgeObjectRetain();
  id v56 = v52;
  swift_retain();
  sub_100C8F520(v36, v72, (uint64_t)v66, (uint64_t)sub_100EB09B4, v48);
  swift_release();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v64 + 8))(v59, v49);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v61 + 8))(v36, v62);
}

uint64_t sub_100EAB78C(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8, void (*a9)(uint64_t *), uint64_t a10, unsigned __int8 a11)
{
  uint64_t v96 = a8;
  uint64_t v98 = a6;
  uint64_t v99 = a7;
  uint64_t v101 = a10;
  uint64_t v102 = a9;
  uint64_t v100 = sub_1005057FC(&qword_1016937F0);
  __chkstk_darwin(v100, v16);
  uint64_t v18 = (void *)((char *)v87 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v19 = sub_1005057FC(&qword_101672BB0);
  __chkstk_darwin(v19 - 8, v20);
  uint64_t v95 = (char *)v87 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_1005057FC((uint64_t *)&unk_101674170);
  __chkstk_darwin(v22 - 8, v23);
  uint64_t v25 = (char *)v87 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = type metadata accessor for UUID();
  __chkstk_darwin(v26, v27);
  id v31 = (char *)v87 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v97 = a5;
  if (a2)
  {
    LODWORD(v99) = a11;
    swift_errorRetain();
    if (qword_10166FBD8 != -1) {
      swift_once();
    }
    swift_beginAccess();
    uint64_t v73 = (void *)static OS_os_log.assetManagement;
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_10117DF40;
    id v75 = v73;
    uint64_t v76 = UUID.uuidString.getter();
    uint64_t v78 = v77;
    *(void *)(inited + 56) = &type metadata for String;
    unint64_t v79 = sub_100528BE4();
    *(void *)(inited + 64) = v79;
    *(void *)(inited + 32) = v76;
    *(void *)(inited + 40) = v78;
    swift_getErrorValue();
    uint64_t v80 = Error.publicDescription.getter(v104, v105);
    *(void *)(inited + 96) = &type metadata for String;
    *(void *)(inited + 104) = v79;
    *(void *)(inited + 72) = v80;
    *(void *)(inited + 80) = v81;
    swift_getErrorValue();
    uint64_t v82 = Error.fullDescription.getter(v103);
    *(void *)(inited + 136) = &type metadata for String;
    *(void *)(inited + 144) = v79;
    *(void *)(inited + 112) = v82;
    *(void *)(inited + 120) = v83;
    uint64_t v84 = static os_log_type_t.error.getter();
    sub_100BAC898((uint64_t)v75, (uint64_t)&_mh_execute_header, v84, (uint64_t)"CRLAssetFileManager _saveAsset() assetUUID: %@ - saveAssetEntry FAILED %{public}@ <%@>", 86, 2, inited);
    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();

    if (v99)
    {
      id v85 = [self defaultManager];
      sub_100EA9C94();
    }
    uint64_t *v18 = a1;
    swift_storeEnumTagMultiPayload();
    swift_errorRetain();
    v102(v18);
    sub_100541074(a1, 1);
  }
  else
  {
    v87[1] = v30;
    uint64_t v90 = v18;
    uint64_t v32 = *(os_unfair_lock_s **)(*(void *)(a3 + OBJC_IVAR____TtC8Freeform19CRLAssetFileManager_lock) + 16);
    uint64_t v33 = v28;
    uint64_t v34 = v29;
    os_unfair_lock_lock(v32);
    v87[0] = v34;
    uint64_t v35 = *(void (**)(uint64_t *, uint64_t, uint64_t))(v34 + 16);
    uint64_t v92 = v34 + 16;
    uint64_t v93 = v33;
    uint64_t v91 = v35;
    v35((uint64_t *)v31, a4, v33);
    uint64_t v36 = sub_1005057FC((uint64_t *)&unk_101684F90);
    uint64_t v94 = a4;
    uint64_t v37 = v36;
    uint64_t v38 = a5;
    uint64_t v39 = *(int *)(v36 + 48);
    uint64_t v40 = type metadata accessor for URL();
    uint64_t v41 = *(void *)(v40 - 8);
    uint64_t v88 = *(void (**)(char *, uint64_t))(v41 + 16);
    uint64_t v89 = v40;
    v87[2] = v41 + 16;
    v88(v25, v38);
    *(_DWORD *)&v25[v39] = 7;
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v37 - 8) + 56))(v25, 0, 1, v37);
    swift_beginAccess();
    sub_10057D748((uint64_t)v25, (uint64_t)v31);
    swift_endAccess();
    os_unfair_lock_unlock(v32);
    if (qword_10166FBD8 != -1) {
      swift_once();
    }
    swift_beginAccess();
    uint64_t v42 = (void *)static OS_os_log.assetManagement;
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t v43 = swift_initStackObject();
    *(_OWORD *)(v43 + 16) = xmmword_10117D8C0;
    *(void *)(v43 + 56) = &type metadata for String;
    unint64_t v44 = sub_100528BE4();
    *(void *)(v43 + 64) = v44;
    uint64_t v45 = v99;
    *(void *)(v43 + 32) = v98;
    *(void *)(v43 + 40) = v45;
    id v46 = v42;
    swift_bridgeObjectRetain();
    uint64_t v47 = v94;
    uint64_t v48 = UUID.uuidString.getter();
    *(void *)(v43 + 96) = &type metadata for String;
    *(void *)(v43 + 104) = v44;
    *(void *)(v43 + 72) = v48;
    *(void *)(v43 + 80) = v49;
    uint64_t v50 = static os_log_type_t.info.getter();
    sub_100BAC898((uint64_t)v46, (uint64_t)&_mh_execute_header, v50, (uint64_t)"CRLAssetFileManager _saveAsset() SUCCESS filename: %@ assetUUID: %@", 67, 2, v43);
    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();

    uint64_t v51 = (void *)static OS_os_log.assetManagement;
    uint64_t v52 = swift_initStackObject();
    *(_OWORD *)(v52 + 16) = xmmword_10117E810;
    id v53 = v51;
    uint64_t v54 = UUID.uuidString.getter();
    *(void *)(v52 + 56) = &type metadata for String;
    *(void *)(v52 + 64) = v44;
    *(void *)(v52 + 32) = v54;
    *(void *)(v52 + 40) = v55;
    uint64_t v56 = static os_log_type_t.default.getter();
    sub_100BAC898((uint64_t)v53, (uint64_t)&_mh_execute_header, v56, (uint64_t)"CRLAssetFileManager _notifyAssetMaterialized() assetUUID: %@", 60, 2, v52);
    swift_setDeallocating();
    swift_arrayDestroy();

    uint64_t v57 = type metadata accessor for TaskPriority();
    uint64_t v58 = (uint64_t)v95;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v57 - 8) + 56))(v95, 1, 1, v57);
    uint64_t v59 = v47;
    uint64_t v60 = v93;
    uint64_t v61 = v91;
    v91((uint64_t *)v31, v59, v93);
    uint64_t v62 = v31;
    uint64_t v63 = v87[0];
    unint64_t v64 = (*(unsigned __int8 *)(v87[0] + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v87[0] + 80);
    uint64_t v65 = (char *)swift_allocObject();
    *((void *)v65 + 2) = 0;
    *((void *)v65 + 3) = 0;
    uint64_t v66 = v96;
    *((void *)v65 + 4) = v96;
    (*(void (**)(char *, char *, uint64_t))(v63 + 32))(&v65[v64], v62, v60);
    id v67 = v66;
    sub_1005912D0(v58, (uint64_t)&unk_1016A09A0, (uint64_t)v65);
    swift_release();
    uint64_t v68 = sub_1005057FC(&qword_101693800);
    uint64_t v69 = v90;
    uint64_t v70 = (uint64_t *)((char *)v90 + *(int *)(v68 + 48));
    uint64_t v71 = (char *)v90 + *(int *)(v68 + 64);
    v61(v90, v94, v60);
    uint64_t v18 = v69;
    uint64_t v72 = v99;
    *uint64_t v70 = v98;
    v70[1] = v72;
    ((void (*)(char *, uint64_t, uint64_t))v88)(v71, v97, v89);
    swift_storeEnumTagMultiPayload();
    swift_bridgeObjectRetain();
    v102(v18);
  }
  return sub_100522F00((uint64_t)v18, &qword_1016937F0);
}

uint64_t sub_100EABF8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = sub_1005057FC(&qword_1016A09B8);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  __n128 v13 = __chkstk_darwin(v9, v12);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v10 + 16))((char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v9, v13);
  unint64_t v14 = (*(unsigned __int8 *)(v10 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v15 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v15 + v14, (char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v9);
  sub_100EAC238(a3, a4, a5, (void (*)(uint64_t *))sub_100EB0F14, v15);
  return swift_release();
}

uint64_t sub_100EAC0EC(uint64_t a1)
{
  uint64_t v2 = sub_1005057FC(&qword_101693800);
  __chkstk_darwin(v2 - 8, v3);
  uint64_t v5 = (char *)v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1005057FC(&qword_1016937F0);
  __chkstk_darwin(v6, v7);
  uint64_t v9 = (void *)((char *)v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_100522E9C(a1, (uint64_t)v9, &qword_1016937F0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v11[1] = *v9;
    sub_1005057FC(&qword_1016A09B8);
    return CheckedContinuation.resume(throwing:)();
  }
  else
  {
    sub_10051B3EC((uint64_t)v9, (uint64_t)v5, &qword_101693800);
    sub_1005057FC(&qword_1016A09B8);
    return CheckedContinuation.resume(returning:)();
  }
}

uint64_t sub_100EAC238(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t *), uint64_t a5)
{
  uint64_t v35 = a5;
  uint64_t v34 = a4;
  uint64_t v8 = type metadata accessor for URL();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  __chkstk_darwin(v8, v11);
  uint64_t v32 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12, v13);
  uint64_t v15 = (char *)&v29 - v14;
  __n128 v18 = __chkstk_darwin(v16, v17);
  uint64_t v20 = (char *)&v29 - v19;
  uint64_t v30 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v9 + 16);
  v30((char *)&v29 - v19, a1, v8, v18);
  if (a3)
  {
    uint64_t v33 = a3;
    uint64_t v31 = a2;
  }
  else
  {
    uint64_t v31 = URL.lastPathComponent.getter();
    uint64_t v33 = v21;
  }
  uint64_t v22 = *(void (**)(char *, uint64_t))(v9 + 8);
  swift_bridgeObjectRetain();
  v22(v20, v8);
  uint64_t v23 = (void (*)(char *, uint64_t, uint64_t))v30;
  ((void (*)(char *, uint64_t, uint64_t))v30)(v15, a1, v8);
  unint64_t v24 = (*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v29 = swift_allocObject();
  uint64_t v25 = *(void (**)(unint64_t, char *, uint64_t))(v9 + 32);
  v25(v29 + v24, v15, v8);
  uint64_t v26 = v32;
  v23(v32, a1, v8);
  uint64_t v27 = swift_allocObject();
  v25(v27 + v24, v26, v8);
  sub_100EAAB9C(v31, v33, (uint64_t)sub_100EB0694, v29, (uint64_t)sub_100EB0704, v27, v34, v35);
  swift_release();
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_100EAC4C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v24 = a2;
  uint64_t v4 = type metadata accessor for SHA256();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4, v6);
  uint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for SHA256Digest();
  uint64_t v22 = *(void *)(v9 - 8);
  uint64_t v23 = v9;
  __chkstk_darwin(v9, v10);
  uint64_t v25 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for URL();
  uint64_t v13 = *(void *)(v12 - 8);
  __n128 v15 = __chkstk_darwin(v12, v14);
  uint64_t v17 = (char *)&v21 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v13 + 16))(v17, a1, v12, v15);
  sub_100EB0770((unint64_t *)&qword_101672020, (void (*)(uint64_t))&type metadata accessor for SHA256);
  dispatch thunk of HashFunction.init()();
  sub_100EAF508((uint64_t)v17);
  __n128 v18 = (void (**)(char *, uint64_t))(v5 + 8);
  if (v2)
  {
    (*v18)(v8, v4);
    return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v17, v12);
  }
  else
  {
    dispatch thunk of HashFunction.finalize()();
    (*v18)(v8, v4);
    type metadata accessor for UUID();
    uint64_t v20 = v25;
    SHA256Digest.withUnsafeBytes<A>(_:)();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v17, v12);
    return (*(uint64_t (**)(char *, uint64_t))(v22 + 8))(v20, v23);
  }
}

id sub_100EAC7D4()
{
  id v0 = [self defaultManager];
  URL._bridgeToObjectiveC()(v1);
  uint64_t v3 = v2;
  URL._bridgeToObjectiveC()(v4);
  uint64_t v6 = v5;
  id v10 = 0;
  unsigned int v7 = [v0 copyItemAtURL:v3 toURL:v5 error:&v10];

  if (v7) {
    return v10;
  }
  id v9 = v10;
  _convertNSErrorToError(_:)();

  return (id)swift_willThrow();
}

id sub_100EAC8DC(uint64_t a1, uint64_t a2, int a3, int a4)
{
  uint64_t v5 = v4;
  int v52 = a4;
  int v53 = a3;
  uint64_t v8 = type metadata accessor for URL();
  uint64_t v50 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8, v9);
  uint64_t v47 = (char *)&v45 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10, v12);
  uint64_t v51 = (char *)&v45 - v13;
  uint64_t v14 = type metadata accessor for CocoaError.Code();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14, v16);
  __n128 v18 = (NSURL *)((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = (char *)((char *)&v45 - (char *)v18);
  uint64_t v49 = a1;
  URL._bridgeToObjectiveC()(v18);
  uint64_t v21 = v20;
  uint64_t v46 = a2;
  URL._bridgeToObjectiveC()(v22);
  uint64_t v24 = v23;
  id v54 = 0;
  id v48 = v5;
  id v25 = [v5 moveItemAtURL:v21 toURL:v23 error:&v54];

  if (!v25)
  {
    uint64_t v45 = v8;
    id v27 = v54;
    _convertNSErrorToError(_:)();

    swift_willThrow();
    swift_errorRetain();
    static CocoaError.fileNoSuchFile.getter();
    sub_100EB0770((unint64_t *)&unk_101674190, (void (*)(uint64_t))&type metadata accessor for CocoaError.Code);
    char v28 = static _ErrorCodeProtocol.~= infix(_:_:)();
    swift_errorRelease();
    uint64_t v29 = *(void (**)(char *, uint64_t))(v15 + 8);
    v29(v19, v14);
    if ((v28 & 1) != 0
      || (swift_errorRetain(),
          static CocoaError.fileReadNoSuchFile.getter(),
          char v30 = static _ErrorCodeProtocol.~= infix(_:_:)(),
          swift_errorRelease(),
          v29(v19, v14),
          (v30 & 1) != 0))
    {
      if (v53)
      {
LABEL_6:
        swift_errorRelease();
        return v25;
      }
    }
    else
    {
      swift_errorRetain();
      static CocoaError.fileWriteFileExists.getter();
      char v31 = static _ErrorCodeProtocol.~= infix(_:_:)();
      swift_errorRelease();
      v29(v19, v14);
      if (v31)
      {
        if (v52) {
          goto LABEL_6;
        }
      }
      else
      {
        swift_errorRetain();
        static CocoaError.fileWriteUnknown.getter();
        char v32 = static _ErrorCodeProtocol.~= infix(_:_:)();
        swift_errorRelease();
        v29(v19, v14);
        if (v32)
        {
          uint64_t v34 = v50;
          uint64_t v33 = v51;
          uint64_t v35 = *(void (**)(char *, uint64_t, uint64_t))(v50 + 16);
          uint64_t v36 = v45;
          v35(v51, v49, v45);
          if (v53)
          {
            URL.path.getter();
            NSString v37 = String._bridgeToObjectiveC()();
            swift_bridgeObjectRelease();
            unsigned __int8 v38 = [v48 fileExistsAtPath:v37];

            uint64_t v39 = *(void (**)(char *, uint64_t))(v34 + 8);
            v39(v51, v36);
            if ((v38 & 1) == 0) {
              goto LABEL_6;
            }
          }
          else
          {
            uint64_t v39 = *(void (**)(char *, uint64_t))(v34 + 8);
            v39(v33, v36);
          }
          uint64_t v40 = v47;
          v35(v47, v46, v36);
          if (v52)
          {
            uint64_t v41 = v40;
            URL.path.getter();
            NSString v42 = String._bridgeToObjectiveC()();
            swift_bridgeObjectRelease();
            unsigned __int8 v43 = [v48 fileExistsAtPath:v42];

            v39(v41, v36);
            if (v43) {
              goto LABEL_6;
            }
          }
          else
          {
            v39(v40, v36);
          }
        }
      }
    }
    swift_willThrow();
    return v25;
  }
  id v26 = v54;
  return v25;
}

void sub_100EACDCC(uint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v84 = a3;
  uint64_t v83 = a2;
  uint64_t v85 = a1;
  uint64_t v4 = sub_1005057FC(&qword_101672BB0);
  __chkstk_darwin(v4 - 8, v5);
  uint64_t v81 = (char *)v70 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1005057FC((uint64_t *)&unk_101674170);
  __chkstk_darwin(v7 - 8, v8);
  uint64_t v10 = (char *)v70 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for UUID();
  uint64_t v82 = *(void *)(v11 - 8);
  uint64_t v12 = *(void *)(v82 + 64);
  __chkstk_darwin(v11, v13);
  uint64_t v14 = type metadata accessor for URL();
  uint64_t v86 = *(void *)(v14 - 8);
  uint64_t v16 = __chkstk_darwin(v14, v15);
  __n128 v18 = (char *)v70 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16, v19);
  uint64_t v21 = (char *)v70 - v20;
  uint64_t v22 = v87;
  sub_100EA56DC();
  if (!v22)
  {
    uint64_t v76 = v10;
    unint64_t v80 = 0;
    uint64_t v77 = v12;
    uint64_t v79 = (uint64_t)v70 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v78 = v11;
    uint64_t v87 = v14;
    uint64_t v23 = v85;
    UUID.uuidString.getter();
    URL.appendingPathComponent(_:)();
    swift_bridgeObjectRelease();
    sub_100EB02FC(v23, v83, v84);
    URL.appendingPathComponent(_:)();
    swift_bridgeObjectRelease();
    sub_100EA5F9C(v23, v18, 1);
    uint64_t v24 = (uint64_t)v18;
    uint64_t v83 = v3;
    if (qword_10166FBD8 != -1) {
      swift_once();
    }
    swift_beginAccess();
    id v25 = (void *)static OS_os_log.assetManagement;
    unint64_t v84 = sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t inited = swift_initStackObject();
    long long v75 = xmmword_10117E810;
    *(_OWORD *)(inited + 16) = xmmword_10117E810;
    id v27 = v25;
    uint64_t v28 = UUID.uuidString.getter();
    uint64_t v30 = v29;
    *(void *)(inited + 56) = &type metadata for String;
    unint64_t v31 = sub_100528BE4();
    *(void *)(inited + 64) = v31;
    *(void *)(inited + 32) = v28;
    *(void *)(inited + 40) = v30;
    uint64_t v32 = static os_log_type_t.default.getter();
    sub_100BAC898((uint64_t)v27, (uint64_t)&_mh_execute_header, v32, (uint64_t)"CRLAssetFileManager moveDeletedAssetFileToAssetsDirectory() assetUUID: %@", 73, 2, inited);
    swift_setDeallocating();
    uint64_t v33 = sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();

    id v34 = [self defaultManager];
    unint64_t v35 = v80;
    unsigned __int8 v36 = sub_100EAC8DC((uint64_t)v21, v24, 1, 1);
    NSString v37 = v21;
    uint64_t v38 = v23;
    uint64_t v39 = v37;
    uint64_t v40 = v24;
    if (!v35)
    {
      unsigned __int8 v41 = v36;
      unint64_t v80 = v31;

      if ((v41 & 1) == 0) {
        goto LABEL_9;
      }
      uint64_t v42 = v83;
      uint64_t Strong = swift_unknownObjectWeakLoadStrong();
      if (!Strong)
      {
        sub_100679060();
        swift_allocError();
        void *v67 = 0xD000000000000028;
        v67[1] = 0x8000000101274780;
        swift_willThrow();
        uint64_t v68 = *(void (**)(uint64_t, uint64_t))(v86 + 8);
        uint64_t v69 = v87;
        v68(v24, v87);
        v68((uint64_t)v39, v69);
        return;
      }
      unint64_t v44 = *(os_unfair_lock_s **)(*(void *)(v42 + OBJC_IVAR____TtC8Freeform19CRLAssetFileManager_lock) + 16);
      uint64_t v73 = (void *)Strong;
      os_unfair_lock_lock(v44);
      uint64_t v74 = v39;
      uint64_t v71 = *(void (**)(uint64_t, uint64_t, uint64_t))(v82 + 16);
      uint64_t v72 = v82 + 16;
      v71(v79, v38, v78);
      uint64_t v45 = sub_1005057FC((uint64_t *)&unk_101684F90);
      v70[1] = v33;
      uint64_t v46 = *(int *)(v45 + 48);
      uint64_t v47 = (uint64_t)v76;
      (*(void (**)(char *, uint64_t, uint64_t))(v86 + 16))(v76, v24, v87);
      *(_DWORD *)(v47 + v46) = 7;
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v45 - 8) + 56))(v47, 0, 1, v45);
      swift_beginAccess();
      uint64_t v48 = v47;
      uint64_t v49 = v79;
      sub_10057D748(v48, v79);
      swift_endAccess();
      os_unfair_lock_unlock(v44);
      uint64_t v50 = (void *)static OS_os_log.assetManagement;
      uint64_t v51 = swift_initStackObject();
      *(_OWORD *)(v51 + 16) = v75;
      id v52 = v50;
      uint64_t v53 = UUID.uuidString.getter();
      unint64_t v54 = v80;
      *(void *)(v51 + 56) = &type metadata for String;
      *(void *)(v51 + 64) = v54;
      *(void *)(v51 + 32) = v53;
      *(void *)(v51 + 40) = v55;
      uint64_t v56 = static os_log_type_t.default.getter();
      sub_100BAC898((uint64_t)v52, (uint64_t)&_mh_execute_header, v56, (uint64_t)"CRLAssetFileManager _notifyAssetMaterialized() assetUUID: %@", 60, 2, v51);
      swift_setDeallocating();
      swift_arrayDestroy();

      uint64_t v57 = type metadata accessor for TaskPriority();
      uint64_t v58 = (uint64_t)v81;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v57 - 8) + 56))(v81, 1, 1, v57);
      uint64_t v59 = v38;
      uint64_t v60 = v78;
      v71(v49, v59, v78);
      uint64_t v39 = v74;
      uint64_t v61 = v82;
      unint64_t v62 = (*(unsigned __int8 *)(v82 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v82 + 80);
      uint64_t v63 = (char *)swift_allocObject();
      *((void *)v63 + 2) = 0;
      *((void *)v63 + 3) = 0;
      unint64_t v64 = v73;
      *((void *)v63 + 4) = v73;
      (*(void (**)(char *, uint64_t, uint64_t))(v61 + 32))(&v63[v62], v79, v60);
      id v34 = v64;
      sub_1005912D0(v58, (uint64_t)&unk_1016A0998, (uint64_t)v63);
      swift_release();
    }

LABEL_9:
    uint64_t v65 = *(void (**)(uint64_t, uint64_t))(v86 + 8);
    uint64_t v66 = v87;
    v65(v40, v87);
    v65((uint64_t)v39, v66);
  }
}

uint64_t sub_100EAD604()
{
  uint64_t v1 = type metadata accessor for Date();
  uint64_t v50 = *(void *)(v1 - 8);
  uint64_t v51 = v1;
  __chkstk_darwin(v1, v2);
  uint64_t v4 = (char *)&v39 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = type metadata accessor for URL();
  uint64_t v42 = *(void (***)(char *, uint64_t))(v49 - 8);
  __chkstk_darwin(v49, v5);
  uint64_t v48 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for UUID();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7, v9);
  uint64_t v47 = (char *)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1005057FC((uint64_t *)&unk_101674520);
  __chkstk_darwin(v11 - 8, v12);
  uint64_t v14 = (char *)&v39 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for DispatchPredicate();
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15, v17);
  uint64_t v19 = (id *)((char *)&v39 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v20 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform19CRLAssetFileManager_purgeDeletedAssetsQueue);
  *uint64_t v19 = v20;
  (*(void (**)(void *, void, uint64_t))(v16 + 104))(v19, enum case for DispatchPredicate.onQueue(_:), v15);
  id v21 = v20;
  char v22 = _dispatchPreconditionTest(_:)();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v16 + 8))(v19, v15);
  if ((v22 & 1) == 0) {
    goto LABEL_29;
  }
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong)
  {
    static Date.distantFuture.getter();
    Date.timeIntervalSinceReferenceDate.getter();
    return (*(uint64_t (**)(char *, uint64_t))(v50 + 8))(v4, v51);
  }
  id v39 = (id)__chkstk_darwin(Strong, v25);
  *(&v39 - 2) = v39;
  *(&v39 - 1) = (id)0x40CC200000000000;
  sub_1005057FC(&qword_1016A0990);
  uint64_t result = OS_dispatch_queue.sync<A>(execute:)();
  int64_t v26 = 0;
  uint64_t v27 = *(void *)(v52 + 56);
  uint64_t v40 = v52 + 56;
  uint64_t v51 = v52;
  uint64_t v28 = 1 << *(unsigned char *)(v52 + 32);
  uint64_t v29 = -1;
  if (v28 < 64) {
    uint64_t v29 = ~(-1 << v28);
  }
  unint64_t v30 = v29 & v27;
  uint64_t v44 = v0 + OBJC_IVAR____TtC8Freeform19CRLAssetFileManager_deletedAssetsDirectoryURL;
  uint64_t v50 = v8 + 56;
  uint64_t v45 = v8 + 48;
  uint64_t v46 = v8 + 16;
  unsigned __int8 v43 = (void (**)(char *, char *, uint64_t))(v8 + 32);
  int64_t v41 = (unint64_t)(v28 + 63) >> 6;
  ++v42;
  unint64_t v31 = v47;
  uint64_t v32 = v48;
  if ((v29 & v27) == 0) {
    goto LABEL_7;
  }
LABEL_6:
  unint64_t v33 = __clz(__rbit64(v30));
  v30 &= v30 - 1;
  for (unint64_t i = v33 | (v26 << 6); ; unint64_t i = __clz(__rbit64(v36)) + (v26 << 6))
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v8 + 16))(v14, *(void *)(v51 + 48) + *(void *)(v8 + 72) * i, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v14, 0, 1, v7);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v14, 1, v7) == 1) {
      goto LABEL_26;
    }
    (*v43)(v31, v14, v7);
    UUID.uuidString.getter();
    URL.appendingPathComponent(_:)();
    swift_bridgeObjectRelease();
    id v38 = [self defaultManager];
    sub_100EA9C94();

    (*v42)(v32, v49);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v31, v7);
    if (v30) {
      goto LABEL_6;
    }
LABEL_7:
    int64_t v35 = v26 + 1;
    if (__OFADD__(v26, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v35 >= v41) {
      goto LABEL_25;
    }
    unint64_t v36 = *(void *)(v40 + 8 * v35);
    ++v26;
    if (!v36)
    {
      int64_t v26 = v35 + 1;
      if (v35 + 1 >= v41) {
        goto LABEL_25;
      }
      unint64_t v36 = *(void *)(v40 + 8 * v26);
      if (!v36)
      {
        int64_t v26 = v35 + 2;
        if (v35 + 2 >= v41) {
          goto LABEL_25;
        }
        unint64_t v36 = *(void *)(v40 + 8 * v26);
        if (!v36) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v30 = (v36 - 1) & v36;
  }
  int64_t v37 = v35 + 3;
  if (v37 >= v41)
  {
LABEL_25:
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))v50)(v14, 1, 1, v7);
LABEL_26:

    return swift_release();
  }
  unint64_t v36 = *(void *)(v40 + 8 * v37);
  if (v36)
  {
    int64_t v26 = v37;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v26 = v37 + 1;
    if (__OFADD__(v37, 1)) {
      break;
    }
    if (v26 >= v41) {
      goto LABEL_25;
    }
    unint64_t v36 = *(void *)(v40 + 8 * v26);
    ++v37;
    if (v36) {
      goto LABEL_20;
    }
  }
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_100EADC64()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for DispatchTime();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v5 = __chkstk_darwin(v2, v4);
  uint64_t v28 = (char *)v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5, v7);
  uint64_t v29 = (char *)v27 - v8;
  uint64_t v9 = type metadata accessor for DispatchWorkItemFlags();
  __chkstk_darwin(v9, v10);
  uint64_t v11 = type metadata accessor for DispatchPredicate();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11, v13);
  uint64_t v15 = (void *)((char *)v27 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v16 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform19CRLAssetFileManager_purgeDeletedAssetsQueue);
  *uint64_t v15 = v16;
  (*(void (**)(void *, void, uint64_t))(v12 + 104))(v15, enum case for DispatchPredicate.onQueue(_:), v11);
  id v17 = v16;
  char v18 = _dispatchPreconditionTest(_:)();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v12 + 8))(v15, v11);
  if ((v18 & 1) == 0)
  {
    __break(1u);
    goto LABEL_8;
  }
  v27[2] = v17;
  uint64_t v20 = OBJC_IVAR____TtC8Freeform19CRLAssetFileManager_purgeDeletedAssetsWorkItem;
  if (!*(void *)(v1 + OBJC_IVAR____TtC8Freeform19CRLAssetFileManager_purgeDeletedAssetsWorkItem)
    || (swift_retain(),
        char v21 = dispatch thunk of DispatchWorkItem.isCancelled.getter(),
        uint64_t result = swift_release(),
        (v21 & 1) != 0))
  {
    uint64_t v22 = swift_allocObject();
    swift_unknownObjectWeakInit();
    aBlock[4] = sub_100EB057C;
    aBlock[5] = v22;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = *(void *)"";
    aBlock[2] = sub_100679958;
    void aBlock[3] = &unk_101531CB0;
    v27[1] = _Block_copy(aBlock);
    unint64_t v30 = _swiftEmptyArrayStorage;
    sub_100EB0770((unint64_t *)&qword_1016747E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    swift_retain();
    sub_1005057FC((uint64_t *)&unk_1016725D0);
    sub_100636834((unint64_t *)&qword_1016747F0, (uint64_t *)&unk_1016725D0);
    dispatch thunk of SetAlgebra.init<A>(_:)();
    type metadata accessor for DispatchWorkItem();
    swift_allocObject();
    uint64_t v23 = DispatchWorkItem.init(flags:block:)();
    swift_release();
    swift_release();
    *(void *)(v1 + v20) = v23;
    swift_release();
    uint64_t v24 = v28;
    static DispatchTime.now()();
    uint64_t v25 = v29;
    + infix(_:_:)();
    int64_t v26 = *(uint64_t (**)(char *, uint64_t))(v3 + 8);
    uint64_t result = v26(v24, v2);
    if (*(void *)(v1 + v20))
    {
      swift_retain();
      OS_dispatch_queue.asyncAfter(deadline:execute:)();
      swift_release();
      return v26(v25, v2);
    }
LABEL_8:
    __break(1u);
  }
  return result;
}

void sub_100EAE0A0()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    *(void *)(Strong + OBJC_IVAR____TtC8Freeform19CRLAssetFileManager_purgeDeletedAssetsWorkItem) = 0;
    swift_release();
    uint64_t v2 = sub_100EAD604();
    if (v3 <= 14400.0) {
      sub_100EADC64(v2);
    }
  }
}

uint64_t sub_100EAE120()
{
  uint64_t v1 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1, v3);
  uint64_t v5 = (char *)v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for DispatchQoS();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6, v8);
  uint64_t v10 = (char *)v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15[0] = *(void *)&v0[OBJC_IVAR____TtC8Freeform19CRLAssetFileManager_purgeDeletedAssetsQueue];
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = v0;
  aBlock[4] = sub_100EB0504;
  aBlock[5] = v11;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = *(void *)"";
  aBlock[2] = sub_100679958;
  void aBlock[3] = &unk_101531C60;
  uint64_t v12 = _Block_copy(aBlock);
  uint64_t v13 = v0;
  static DispatchQoS.unspecified.getter();
  v15[1] = _swiftEmptyArrayStorage;
  sub_100EB0770((unint64_t *)&qword_1016747E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_1005057FC((uint64_t *)&unk_1016725D0);
  sub_100636834((unint64_t *)&qword_1016747F0, (uint64_t *)&unk_1016725D0);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v12);
  (*(void (**)(char *, uint64_t))(v2 + 8))(v5, v1);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  return swift_release();
}

uint64_t sub_100EAE3CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(void *)(v5 + 40) = a4;
  *(void *)(v5 + 48) = a5;
  return _swift_task_switch(sub_100EAE3EC, 0, 0);
}

uint64_t sub_100EAE3EC()
{
  uint64_t v1 = *(void *)(v0 + 40);
  uint64_t v2 = *(void *)(v1 + OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetDownloadManagerLock);
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v2 + 16));
  uint64_t v3 = OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetDownloadManager;
  uint64_t v4 = *(void *)(v1 + OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetDownloadManager);
  if (!v4)
  {
    uint64_t v5 = (char *)*(id *)(v0 + 40);
    uint64_t v4 = sub_100678E6C(v5);

    *(void *)(v1 + v3) = v4;
    swift_retain();
    swift_release();
  }
  *(void *)(v0 + 56) = v4;
  uint64_t v6 = *(os_unfair_lock_s **)(v2 + 16);
  swift_retain();
  os_unfair_lock_unlock(v6);
  return _swift_task_switch(sub_100EAE4D4, v4, 0);
}

uint64_t sub_100EAE4D4()
{
  uint64_t v1 = v0[7];
  swift_beginAccess();
  if (*(void *)(*(void *)(v1 + 272) + 16))
  {
    uint64_t v2 = v0[6];
    swift_bridgeObjectRetain();
    sub_100955FC8(v2);
    if (v3)
    {
      swift_retain();
      swift_bridgeObjectRelease();
      sub_100676450(0);
      swift_release();
    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }
  sub_100673EEC(v0[6]);
  swift_release();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_100EAE5B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  *(unsigned char *)(v7 + 104) = a6;
  *(void *)(v7 + 56) = a5;
  *(void *)(v7 + 64) = v6;
  *(void *)(v7 + 40) = a3;
  *(void *)(v7 + 48) = a4;
  *(void *)(v7 + 24) = a1;
  *(void *)(v7 + 32) = a2;
  return _swift_task_switch(sub_100EAE5DC, 0, 0);
}

uint64_t sub_100EAE5DC()
{
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  *(void *)(v0 + 72) = Strong;
  if (Strong)
  {
    uint64_t v2 = Strong;
    uint64_t v3 = *(void *)(v0 + 48);
    long long v10 = *(_OWORD *)(v0 + 32);
    uint64_t v4 = swift_task_alloc();
    *(void *)(v0 + 80) = v4;
    *(void *)(v4 + 16) = v2;
    *(_OWORD *)(v4 + 24) = v10;
    *(void *)(v4 + 40) = v3;
    uint64_t v5 = (void *)swift_task_alloc();
    *(void *)(v0 + 88) = v5;
    uint64_t v6 = sub_1005057FC(&qword_1016A0988);
    void *v5 = v0;
    v5[1] = sub_100EAE794;
    return withCheckedThrowingContinuation<A>(isolation:function:_:)(v0 + 16, 0, 0, 0xD000000000000036, 0x8000000101293B00, sub_100EB04C0, v4, v6);
  }
  else
  {
    sub_100679060();
    swift_allocError();
    *uint64_t v7 = 0xD000000000000028;
    v7[1] = 0x8000000101274780;
    swift_willThrow();
    uint64_t v8 = *(uint64_t (**)(void))(v0 + 8);
    return v8();
  }
}

uint64_t sub_100EAE794()
{
  *(void *)(*(void *)v1 + 96) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_100EAE9D4;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_100EAE8B0;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100EAE8B0()
{
  uint64_t v1 = *(void *)(v0 + 16);
  if (v1)
  {
    int v2 = *(unsigned __int8 *)(v0 + 104);
    uint64_t v3 = *(void *)(v0 + 56);
    uint64_t v5 = *(char **)(v0 + 24);
    uint64_t v4 = *(void *)(v0 + 32);
    uint64_t v6 = *(void *)(v1 + OBJC_IVAR____TtC8Freeform19CRLAssetDatabaseRow_fileExtension);
    uint64_t v7 = *(void (**)(char *, uint64_t, uint64_t))(v1
                                                         + OBJC_IVAR____TtC8Freeform19CRLAssetDatabaseRow_fileExtension
                                                         + 8);
    swift_bridgeObjectRetain();
    sub_100EAEA3C(v4, v6, v7, v3, v2, v5);

    swift_release();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v8 = *(void **)(v0 + 72);
    sub_100679060();
    swift_allocError();
    _OWORD *v9 = xmmword_101186D00;
    swift_willThrow();
  }
  long long v10 = *(uint64_t (**)(void))(v0 + 8);
  return v10();
}

uint64_t sub_100EAE9D4()
{
  uint64_t v1 = *(void **)(v0 + 72);
  swift_task_dealloc();

  int v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

void sub_100EAEA3C(uint64_t a1@<X0>, uint64_t a2@<X1>, void (*a3)(char *, uint64_t, uint64_t)@<X2>, uint64_t a4@<X3>, int a5@<W4>, char *a6@<X8>)
{
  uint64_t v8 = v6;
  int v58 = a5;
  uint64_t v60 = a3;
  uint64_t v61 = a4;
  uint64_t v59 = a2;
  uint64_t v63 = a1;
  unint64_t v62 = a6;
  uint64_t v9 = sub_1005057FC(&qword_101672BB0);
  __chkstk_darwin(v9 - 8, v10);
  uint64_t v12 = (char *)&v50 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1005057FC((uint64_t *)&unk_101674170);
  __chkstk_darwin(v13 - 8, v14);
  uint64_t v16 = (char *)&v50 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for UUID();
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = *(void *)(v18 + 64);
  __chkstk_darwin(v17, v20);
  sub_100EA56DC();
  if (!v7)
  {
    unint64_t v54 = v16;
    uint64_t v52 = v19;
    uint64_t v55 = (char *)&v50 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v56 = v18;
    uint64_t v57 = v17;
    uint64_t v53 = v12;
    uint64_t v21 = v63;
    sub_100EB02FC(v63, v59, (unint64_t)v60);
    uint64_t v22 = v62;
    URL.appendingPathComponent(_:)();
    swift_bridgeObjectRelease();
    sub_100EA5F9C(v21, v22, 1);
    id v23 = [self defaultManager];
    unsigned __int8 v24 = sub_100EAC8DC(v61, (uint64_t)v22, 0, 1);

    if (v24)
    {
      uint64_t v25 = *(os_unfair_lock_s **)(*(void *)(v8 + OBJC_IVAR____TtC8Freeform19CRLAssetFileManager_lock) + 16);
      os_unfair_lock_lock(v25);
      uint64_t v26 = (uint64_t)v55;
      uint64_t v60 = *(void (**)(char *, uint64_t, uint64_t))(v56 + 16);
      uint64_t v61 = v56 + 16;
      v60(v55, v21, v57);
      uint64_t v27 = sub_1005057FC((uint64_t *)&unk_101684F90);
      uint64_t v28 = *(int *)(v27 + 48);
      uint64_t v29 = type metadata accessor for URL();
      uint64_t v51 = *(void *)(v29 - 8);
      unint64_t v30 = *(void (**)(char *, char *))(v51 + 16);
      uint64_t v31 = (uint64_t)v54;
      uint64_t v59 = v29;
      v30(v54, v22);
      *(_DWORD *)(v31 + v28) = 7;
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v31, 0, 1, v27);
      swift_beginAccess();
      sub_10057D748(v31, v26);
      swift_endAccess();
      os_unfair_lock_unlock(v25);
      if (v58)
      {
        uint64_t Strong = swift_unknownObjectWeakLoadStrong();
        if (Strong)
        {
          unint64_t v33 = (void *)Strong;
          if (qword_10166FBD8 != -1) {
            swift_once();
          }
          swift_beginAccess();
          id v34 = (void *)static OS_os_log.assetManagement;
          sub_1005057FC((uint64_t *)&unk_101672B40);
          uint64_t inited = swift_initStackObject();
          *(_OWORD *)(inited + 16) = xmmword_10117E810;
          id v36 = v34;
          uint64_t v37 = UUID.uuidString.getter();
          uint64_t v39 = v38;
          *(void *)(inited + 56) = &type metadata for String;
          *(void *)(inited + 64) = sub_100528BE4();
          *(void *)(inited + 32) = v37;
          *(void *)(inited + 40) = v39;
          uint64_t v40 = static os_log_type_t.default.getter();
          sub_100BAC898((uint64_t)v36, (uint64_t)&_mh_execute_header, v40, (uint64_t)"CRLAssetFileManager _notifyAssetMaterialized() assetUUID: %@", 60, 2, inited);
          swift_setDeallocating();
          sub_1005057FC(&qword_101672B50);
          swift_arrayDestroy();

          uint64_t v41 = type metadata accessor for TaskPriority();
          uint64_t v42 = (uint64_t)v53;
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v41 - 8) + 56))(v53, 1, 1, v41);
          unsigned __int8 v43 = v55;
          uint64_t v44 = v57;
          v60(v55, v21, v57);
          uint64_t v45 = v56;
          unint64_t v46 = (*(unsigned __int8 *)(v56 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v56 + 80);
          uint64_t v47 = (char *)swift_allocObject();
          *((void *)v47 + 2) = 0;
          *((void *)v47 + 3) = 0;
          *((void *)v47 + 4) = v33;
          (*(void (**)(char *, char *, uint64_t))(v45 + 32))(&v47[v46], v43, v44);
          id v48 = v33;
          sub_1005912D0(v42, (uint64_t)&unk_1016A0980, (uint64_t)v47);
          swift_release();
        }
        else
        {
          sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"moveDownloadedAssetFile(for:fileExtension:temporaryAssetFileURL:notifyDownloadObservers:)", 89, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLAssetFileManager.swift", 91, 2, 686, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
          sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"moveDownloadedAssetFile(for:fileExtension:temporaryAssetFileURL:notifyDownloadObservers:)", 89, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLAssetFileManager.swift", 91, 2, 686);
          sub_100679060();
          swift_allocError();
          *uint64_t v49 = 0xD000000000000028;
          v49[1] = 0x8000000101274780;
          swift_willThrow();
          (*(void (**)(char *, uint64_t))(v51 + 8))(v22, v59);
        }
      }
    }
  }
}

id sub_100EAF120()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLAssetFileManager();
  return [super dealloc];
}

uint64_t sub_100EAF258()
{
  return type metadata accessor for CRLAssetFileManager();
}

uint64_t type metadata accessor for CRLAssetFileManager()
{
  uint64_t result = qword_1016A0930;
  if (!qword_1016A0930) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100EAF2AC()
{
  uint64_t result = type metadata accessor for URL();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLAssetFileManager.AssetFileURLCacheFlags()
{
  return &type metadata for CRLAssetFileManager.AssetFileURLCacheFlags;
}

unint64_t sub_100EAF3AC()
{
  unint64_t result = qword_1016A0958;
  if (!qword_1016A0958)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A0958);
  }
  return result;
}

unint64_t sub_100EAF404()
{
  unint64_t result = qword_1016A0960;
  if (!qword_1016A0960)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A0960);
  }
  return result;
}

unint64_t sub_100EAF45C()
{
  unint64_t result = qword_1016A0968;
  if (!qword_1016A0968)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A0968);
  }
  return result;
}

unint64_t sub_100EAF4B4()
{
  unint64_t result = qword_1016A0970;
  if (!qword_1016A0970)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_1016A0970);
  }
  return result;
}

void sub_100EAF508(uint64_t a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = type metadata accessor for URL();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5, v7);
  uint64_t v9 = (char *)v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10050BF48(0, (unint64_t *)&qword_101695098);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v9, a1, v5);
  id v10 = sub_100EA5584((uint64_t)v9);
  if (v2) {
    return;
  }
  uint64_t v11 = v10;
  uint64_t v12 = NSFileHandle.read(upToCount:)();
  unint64_t v14 = v13;
  *(void *)id v23 = v3;
  while (2)
  {
    if (v14 >> 60 == 15) {
      goto LABEL_3;
    }
    unint64_t v16 = v14 >> 62;
    switch(v14 >> 62)
    {
      case 1uLL:
        LODWORD(v17) = HIDWORD(v12) - v12;
        if (__OFSUB__(HIDWORD(v12), v12))
        {
          __break(1u);
LABEL_27:
          __break(1u);
LABEL_28:
          __break(1u);
LABEL_29:
          __break(1u);
LABEL_30:
          __break(1u);
LABEL_31:
          __break(1u);
        }
        uint64_t v17 = (int)v17;
LABEL_14:
        if (v17 >= 1)
        {
          if (!v16)
          {
            *(void *)&id v23[5] = v12;
            v23[9] = v14;
            char v24 = BYTE2(v14);
            char v25 = BYTE3(v14);
            char v26 = BYTE4(v14);
            char v27 = BYTE5(v14);
            type metadata accessor for SHA256();
            sub_100EB0770((unint64_t *)&qword_101672020, (void (*)(uint64_t))&type metadata accessor for SHA256);
LABEL_6:
            dispatch thunk of HashFunction.update(bufferPointer:)();
            goto LABEL_7;
          }
          if (v16 == 1)
          {
            if (v12 >> 32 < (int)v12) {
              goto LABEL_28;
            }
            sub_100510D4C(v12, v14);
            if (__DataStorage._bytes.getter() && __OFSUB__((int)v12, __DataStorage._offset.getter())) {
              goto LABEL_31;
            }
            __DataStorage._length.getter();
            type metadata accessor for SHA256();
            sub_100EB0770((unint64_t *)&qword_101672020, (void (*)(uint64_t))&type metadata accessor for SHA256);
            goto LABEL_6;
          }
          uint64_t v22 = *(void *)(v12 + 16);
          uint64_t v21 = *(void *)(v12 + 24);
          sub_1005FA2A0(v12, v14);
          swift_retain();
          swift_retain();
          if (__DataStorage._bytes.getter() && __OFSUB__(v22, __DataStorage._offset.getter())) {
            goto LABEL_30;
          }
          if (__OFSUB__(v21, v22)) {
            goto LABEL_29;
          }
          __DataStorage._length.getter();
          type metadata accessor for SHA256();
          sub_100EB0770((unint64_t *)&qword_101672020, (void (*)(uint64_t))&type metadata accessor for SHA256);
          dispatch thunk of HashFunction.update(bufferPointer:)();
          swift_release();
          swift_release();
LABEL_7:
          sub_100514260(v12, v14);
          sub_100514260(v12, v14);
          uint64_t v12 = NSFileHandle.read(upToCount:)();
          unint64_t v14 = v15;
          continue;
        }
LABEL_25:
        sub_100514260(v12, v14);
LABEL_3:
        [v11 closeFile:v23];

        return;
      case 2uLL:
        uint64_t v19 = *(void *)(v12 + 16);
        uint64_t v18 = *(void *)(v12 + 24);
        BOOL v20 = __OFSUB__(v18, v19);
        uint64_t v17 = v18 - v19;
        if (!v20) {
          goto LABEL_14;
        }
        goto LABEL_27;
      case 3uLL:
        goto LABEL_25;
      default:
        uint64_t v17 = BYTE6(v14);
        goto LABEL_14;
    }
  }
}

uint64_t sub_100EAF9C8(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  uint64_t v10 = sub_1005057FC((uint64_t *)&unk_101674520);
  uint64_t v63 = *(void *)(v10 - 8);
  __chkstk_darwin(v10 - 8, v11);
  uint64_t v55 = (uint64_t)v53 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13, v14);
  uint64_t v54 = (uint64_t)v53 - v15;
  __chkstk_darwin(v16, v17);
  uint64_t v19 = (char *)v53 - v18;
  uint64_t v20 = sub_1005057FC((uint64_t *)&unk_101684F70);
  __chkstk_darwin(v20 - 8, v21);
  id v23 = (void *)((char *)v53 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v24 = -1 << *(unsigned char *)(a1 + 32);
  uint64_t v25 = ~v24;
  uint64_t v26 = *(void *)(a1 + 64);
  uint64_t v27 = -v24;
  uint64_t v56 = a1;
  uint64_t v57 = a1 + 64;
  if (v27 < 64) {
    uint64_t v28 = ~(-1 << v27);
  }
  else {
    uint64_t v28 = -1;
  }
  uint64_t v58 = v25;
  uint64_t v59 = 0;
  uint64_t v60 = v28 & v26;
  uint64_t v61 = a2;
  uint64_t v62 = a3;
  v53[1] = a1;
  swift_bridgeObjectRetain();
  v53[0] = a3;
  swift_retain();
  sub_100F27C3C((uint64_t)v23);
  uint64_t v29 = sub_1005057FC(&qword_10169A0F0);
  for (int i = (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v29 - 8) + 48))(v23, 1, v29);
        ;
        int i = (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v29 - 8) + 48))(v23, 1, v29))
  {
    if (i == 1)
    {
      swift_release();
      swift_bridgeObjectRelease();
      sub_10052E1EC();
      return swift_release();
    }
    uint64_t v36 = *v23;
    uint64_t v35 = v23[1];
    uint64_t v37 = (uint64_t)v19;
    sub_10051B3EC((uint64_t)v23 + *(int *)(v29 + 48), (uint64_t)v19, (uint64_t *)&unk_101674520);
    uint64_t v38 = *(void **)a5;
    unint64_t v40 = sub_100955F50(v36, v35);
    uint64_t v41 = v38[2];
    BOOL v42 = (v39 & 1) == 0;
    uint64_t v43 = v41 + v42;
    if (__OFADD__(v41, v42)) {
      break;
    }
    char v44 = v39;
    if (v38[3] >= v43)
    {
      if (a4)
      {
        uint64_t v47 = *(void **)a5;
        if (v39) {
          goto LABEL_5;
        }
      }
      else
      {
        sub_10097CD24();
        uint64_t v47 = *(void **)a5;
        if (v44) {
          goto LABEL_5;
        }
      }
    }
    else
    {
      sub_1009609B8(v43, a4 & 1);
      unint64_t v45 = sub_100955F50(v36, v35);
      if ((v44 & 1) != (v46 & 1)) {
        goto LABEL_22;
      }
      unint64_t v40 = v45;
      uint64_t v47 = *(void **)a5;
      if (v44)
      {
LABEL_5:
        uint64_t v31 = v47[7];
        unint64_t v32 = *(void *)(v63 + 72) * v40;
        uint64_t v33 = v55;
        sub_100522E9C(v31 + v32, v55, (uint64_t *)&unk_101674520);
        uint64_t v34 = v54;
        sub_100522E9C(v33, v54, (uint64_t *)&unk_101674520);
        sub_100522F00(v33, (uint64_t *)&unk_101674520);
        uint64_t v19 = (char *)v37;
        sub_100522F00(v37, (uint64_t *)&unk_101674520);
        swift_bridgeObjectRelease();
        sub_10068EA54(v34, *(void *)(*(void *)a5 + 56) + v32);
        goto LABEL_6;
      }
    }
    v47[(v40 >> 6) + 8] |= 1 << v40;
    id v48 = (uint64_t *)(v47[6] + 16 * v40);
    *id v48 = v36;
    v48[1] = v35;
    uint64_t v19 = (char *)v37;
    sub_10051B3EC(v37, v47[7] + *(void *)(v63 + 72) * v40, (uint64_t *)&unk_101674520);
    uint64_t v49 = v47[2];
    BOOL v50 = __OFADD__(v49, 1);
    uint64_t v51 = v49 + 1;
    if (v50) {
      goto LABEL_21;
    }
    v47[2] = v51;
LABEL_6:
    sub_100F27C3C((uint64_t)v23);
    uint64_t v29 = sub_1005057FC(&qword_10169A0F0);
    a4 = 1;
  }
  __break(1u);
LABEL_21:
  __break(1u);
LABEL_22:
  uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

id sub_100EAFDE4(uint64_t a1)
{
  uint64_t v30 = a1;
  uint64_t v2 = type metadata accessor for URL();
  uint64_t v31 = *(void *)(v2 - 8);
  uint64_t v32 = v2;
  __chkstk_darwin(v2, v3);
  uint64_t v29 = (char *)v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
  uint64_t v5 = *(void *)(v33 - 8);
  __chkstk_darwin(v33, v6);
  uint64_t v27 = (char *)v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for OS_dispatch_queue.Attributes();
  __chkstk_darwin(v8, v9);
  uint64_t v10 = type metadata accessor for DispatchQoS();
  __chkstk_darwin(v10 - 8, v11);
  uint64_t v28 = &v1[OBJC_IVAR____TtC8Freeform19CRLAssetFileManager_store];
  swift_unknownObjectWeakInit();
  uint64_t v12 = OBJC_IVAR____TtC8Freeform19CRLAssetFileManager_lock;
  type metadata accessor for CRLUnfairLock();
  uint64_t v13 = swift_allocObject();
  uint64_t v14 = v1;
  uint64_t v15 = (_DWORD *)swift_slowAlloc();
  *uint64_t v15 = 0;
  *(void *)(v13 + 16) = v15;
  atomic_thread_fence(memory_order_acq_rel);
  *(void *)&v1[v12] = v13;
  v14[OBJC_IVAR____TtC8Freeform19CRLAssetFileManager_didEnsureAssetDirectory] = 0;
  *(void *)&v14[OBJC_IVAR____TtC8Freeform19CRLAssetFileManager_assetFileURLCache] = &_swiftEmptyDictionarySingleton;
  uint64_t v26 = OBJC_IVAR____TtC8Freeform19CRLAssetFileManager_writeAssetFileQueue;
  v25[4] = sub_10050BF48(0, (unint64_t *)&qword_1016725C0);
  static DispatchQoS.unspecified.getter();
  uint64_t v35 = _swiftEmptyArrayStorage;
  v25[3] = sub_100EB0770((unint64_t *)&qword_101676560, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
  void v25[2] = sub_1005057FC(&qword_101693440);
  sub_100636834((unint64_t *)&qword_101676568, &qword_101693440);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  uint64_t v16 = enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:);
  uint64_t v17 = v5 + 104;
  uint64_t v18 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 104);
  v25[1] = v17;
  uint64_t v19 = v27;
  v18(v27, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v33);
  *(void *)&v14[v26] = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
  *(void *)&v14[OBJC_IVAR____TtC8Freeform19CRLAssetFileManager__deletedAssetsTTL] = 0x40CC200000000000;
  *(void *)&v14[OBJC_IVAR____TtC8Freeform19CRLAssetFileManager__deletedAssetsTTLTolerance] = 0x4014000000000000;
  uint64_t v26 = OBJC_IVAR____TtC8Freeform19CRLAssetFileManager_purgeDeletedAssetsQueue;
  static DispatchQoS.unspecified.getter();
  uint64_t v35 = _swiftEmptyArrayStorage;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  v18(v19, v16, v33);
  *(void *)&v14[v26] = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
  *(void *)&v14[OBJC_IVAR____TtC8Freeform19CRLAssetFileManager_purgeDeletedAssetsWorkItem] = 0;
  swift_unknownObjectWeakAssign();
  uint64_t v20 = v29;
  URL.appendingPathComponent(_:isDirectory:)();
  uint64_t v21 = v32;
  uint64_t v22 = *(void (**)(char *, char *, uint64_t))(v31 + 32);
  v22(&v14[OBJC_IVAR____TtC8Freeform19CRLAssetFileManager_assetsDirectoryURL], v20, v32);
  URL.appendingPathComponent(_:isDirectory:)();
  v22(&v14[OBJC_IVAR____TtC8Freeform19CRLAssetFileManager_deletedAssetsDirectoryURL], v20, v21);

  id v23 = (objc_class *)type metadata accessor for CRLAssetFileManager();
  v34.receiver = v14;
  v34.super_class = v23;
  return [super init];
}

uint64_t sub_100EB02FC(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v5 = UUID.uuidString.getter();
  if (!a3) {
    return v5;
  }
  uint64_t v6 = HIBYTE(a3) & 0xF;
  if ((a3 & 0x2000000000000000) == 0) {
    uint64_t v6 = a2 & 0xFFFFFFFFFFFFLL;
  }
  if (!v6) {
    return v5;
  }
  NSString v7 = String._bridgeToObjectiveC()();
  NSString v8 = String._bridgeToObjectiveC()();
  id v9 = [v7 stringByAppendingPathExtension:v8];

  if (!v9) {
    return v5;
  }
  swift_bridgeObjectRelease();
  uint64_t v10 = static String._unconditionallyBridgeFromObjectiveC(_:)();

  return v10;
}

uint64_t sub_100EB03D8()
{
  uint64_t v2 = *(void *)(type metadata accessor for UUID() - 8);
  uint64_t v3 = *(void *)(v0 + 32);
  uint64_t v4 = v0 + ((*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v5;
  void *v5 = v1;
  v5[1] = sub_100528D08;
  id v5[5] = v3;
  v5[6] = v4;
  return _swift_task_switch(sub_100EAE3EC, 0, 0);
}

uint64_t sub_100EB04C0(uint64_t a1)
{
  return sub_100C905E4(a1, *(char **)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40));
}

uint64_t sub_100EB04CC()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100EB0504()
{
  return sub_100EADC64();
}

uint64_t sub_100EB052C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100EB053C()
{
  return swift_release();
}

uint64_t sub_100EB0544()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_100EB057C()
{
}

uint64_t sub_100EB0584@<X0>(unint64_t a1@<X8>)
{
  return sub_100C9C294(*(void *)(v1 + 16), a1, *(double *)(v1 + 24));
}

uint64_t sub_100EB05A8()
{
  uint64_t v2 = *(void *)(type metadata accessor for UUID() - 8);
  uint64_t v3 = *(void *)(v0 + 32);
  uint64_t v4 = v0 + ((*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v5;
  void *v5 = v1;
  v5[1] = sub_100528488;
  id v5[5] = v3;
  v5[6] = v4;
  return _swift_task_switch(sub_100EAE3EC, 0, 0);
}

uint64_t sub_100EB0694@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(type metadata accessor for URL() - 8);
  return sub_100EAC4C8(v1 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80)), a1);
}

id sub_100EB0704()
{
  return sub_100EAC7D4();
}

uint64_t sub_100EB0770(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100EB07B8()
{
  swift_release();
  swift_bridgeObjectRelease();

  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 96, 7);
}

uint64_t sub_100EB0818()
{
  uint64_t v1 = type metadata accessor for UUID();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = *(void *)(v2 + 64);
  uint64_t v6 = type metadata accessor for URL();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = (v4 + v5 + v8) & ~v8;
  uint64_t v10 = v3 | v8 | 7;
  unint64_t v11 = (((*(void *)(v7 + 64) + v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v13 = v10;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0 + v9, v6);
  swift_bridgeObjectRelease();

  swift_release();

  return _swift_deallocObject(v0, ((v11 + 15) & 0xFFFFFFFFFFFFFFF8) + 17, v13);
}

uint64_t sub_100EB09B4(uint64_t a1, char a2)
{
  char v4 = a2 & 1;
  uint64_t v5 = *(void *)(type metadata accessor for UUID() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = *(void *)(v5 + 64);
  uint64_t v8 = *(void *)(type metadata accessor for URL() - 8);
  unint64_t v9 = (v6 + v7 + *(unsigned __int8 *)(v8 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  unint64_t v10 = (*(void *)(v8 + 64) + v9 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v11 = (v10 + 23) & 0xFFFFFFFFFFFFFFF8;
  return sub_100EAB78C(a1, v4, *(void *)(v2 + 16), v2 + v6, v2 + v9, *(void *)(v2 + v10), *(void *)(v2 + v10 + 8), *(void **)(v2 + v11), *(void (**)(uint64_t *))(v2 + ((v11 + 15) & 0xFFFFFFFFFFFFFFF8)), *(void *)(v2 + ((v11 + 15) & 0xFFFFFFFFFFFFFFF8) + 8), *(unsigned char *)(v2 + ((v11 + 15) & 0xFFFFFFFFFFFFFFF8) + 16));
}

uint64_t sub_100EB0AF4(uint64_t a1, uint64_t a2)
{
  return sub_100EAAA68(a1, a2, *(uint64_t (**)(void))(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), *(void *)(v2 + 40), *(void *)(v2 + 48), *(void (**)(char *))(v2 + 56), *(void *)(v2 + 64)) & 1;
}

uint64_t sub_100EB0B2C@<X0>(uint64_t a1@<X8>)
{
  char v4 = *(uint64_t (**)(uint64_t, uint64_t))(v1 + 16);
  uint64_t v5 = sub_1005057FC(&qword_1016A09A8);
  uint64_t result = v4(a1, a1 + *(int *)(v5 + 48));
  if (!v2) {
    *(unsigned char *)(a1 + *(int *)(v5 + 64)) = result & 1;
  }
  return result;
}

void sub_100EB0B9C()
{
}

uint64_t sub_100EB0BC0(uint64_t a1)
{
  return sub_100C900F4(a1, *(char **)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_100EB0BC8@<X0>(uint64_t *a1@<X8>)
{
  return sub_100C8FACC(*(void *)(v1 + 24), a1);
}

BOOL sub_100EB0BE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100EA5B88(a1, a2, a3);
}

uint64_t sub_100EB0BEC(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v28 = a2;
  uint64_t v27 = sub_1005057FC((uint64_t *)&unk_101684FB0);
  __chkstk_darwin(v27, v3);
  uint64_t v5 = (uint64_t *)((char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = *(void *)(a1 + 64);
  uint64_t v25 = a1 + 64;
  uint64_t v7 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v8 = -1;
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  unint64_t v9 = v8 & v6;
  int64_t v26 = (unint64_t)(v7 + 63) >> 6;
  uint64_t v29 = a1;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v11 = 0;
  while (1)
  {
    if (v9)
    {
      unint64_t v12 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v13 = v12 | (v11 << 6);
      goto LABEL_5;
    }
    int64_t v20 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      break;
    }
    if (v20 >= v26) {
      goto LABEL_24;
    }
    unint64_t v21 = *(void *)(v25 + 8 * v20);
    ++v11;
    if (!v21)
    {
      int64_t v11 = v20 + 1;
      if (v20 + 1 >= v26) {
        goto LABEL_24;
      }
      unint64_t v21 = *(void *)(v25 + 8 * v11);
      if (!v21)
      {
        int64_t v11 = v20 + 2;
        if (v20 + 2 >= v26) {
          goto LABEL_24;
        }
        unint64_t v21 = *(void *)(v25 + 8 * v11);
        if (!v21)
        {
          int64_t v11 = v20 + 3;
          if (v20 + 3 >= v26) {
            goto LABEL_24;
          }
          unint64_t v21 = *(void *)(v25 + 8 * v11);
          if (!v21)
          {
            int64_t v22 = v20 + 4;
            if (v22 >= v26)
            {
LABEL_24:
              uint64_t v23 = 0;
              goto LABEL_25;
            }
            unint64_t v21 = *(void *)(v25 + 8 * v22);
            if (!v21)
            {
              while (1)
              {
                int64_t v11 = v22 + 1;
                if (__OFADD__(v22, 1)) {
                  goto LABEL_27;
                }
                if (v11 >= v26) {
                  goto LABEL_24;
                }
                unint64_t v21 = *(void *)(v25 + 8 * v11);
                ++v22;
                if (v21) {
                  goto LABEL_22;
                }
              }
            }
            int64_t v11 = v22;
          }
        }
      }
    }
LABEL_22:
    unint64_t v9 = (v21 - 1) & v21;
    unint64_t v13 = __clz(__rbit64(v21)) + (v11 << 6);
LABEL_5:
    uint64_t v14 = *(void *)(v29 + 56);
    uint64_t v15 = (uint64_t *)(*(void *)(v29 + 48) + 16 * v13);
    uint64_t v17 = *v15;
    uint64_t v16 = v15[1];
    uint64_t v18 = v14 + *(void *)(*(void *)(sub_1005057FC((uint64_t *)&unk_101674520) - 8) + 72) * v13;
    uint64_t v19 = (uint64_t)v5 + *(int *)(v27 + 48);
    sub_100522E9C(v18, v19, (uint64_t *)&unk_101674520);
    void *v5 = v17;
    v5[1] = v16;
    swift_bridgeObjectRetain();
    LOBYTE(v16) = v28(v17, v16, v19);
    uint64_t result = sub_100522F00((uint64_t)v5, (uint64_t *)&unk_101684FB0);
    if (v16)
    {
      uint64_t v23 = 1;
LABEL_25:
      swift_release();
      return v23;
    }
  }
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_100EB0E80()
{
  uint64_t v1 = sub_1005057FC(&qword_1016A09B8);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_100EB0F14(uint64_t a1)
{
  sub_1005057FC(&qword_1016A09B8);

  return sub_100EAC0EC(a1);
}

uint64_t sub_100EB0F98@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  char v2 = *(unsigned char *)(result + 6) & 0xF | 0x50;
  char v3 = *(unsigned char *)(result + 8) & 0x3F | 0x80;
  *(_DWORD *)a2 = *(_DWORD *)result;
  *(_WORD *)(a2 + 4) = *(_WORD *)(result + 4);
  *(unsigned char *)(a2 + 6) = v2;
  *(unsigned char *)(a2 + 7) = *(unsigned char *)(result + 7);
  *(unsigned char *)(a2 + 8) = v3;
  *(_DWORD *)(a2 + 9) = *(_DWORD *)(result + 9);
  *(_WORD *)(a2 + 13) = *(_WORD *)(result + 13);
  *(unsigned char *)(a2 + 15) = *(unsigned char *)(result + 15);
  return result;
}

uint64_t sub_100EB0FEC(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  uint64_t v4 = type metadata accessor for CRLBoardIdentifier(0);
  v3[5] = v4;
  v3[6] = *(void *)(v4 - 8);
  v3[7] = swift_task_alloc();
  v3[8] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for CRLBoardEntity();
  v3[9] = v5;
  v3[10] = *(void *)(v5 - 8);
  v3[11] = swift_task_alloc();
  v3[12] = type metadata accessor for MainActor();
  v3[13] = static MainActor.shared.getter();
  uint64_t v7 = dispatch thunk of Actor.unownedExecutor.getter();
  v3[14] = v7;
  v3[15] = v6;
  return _swift_task_switch(sub_100EB1154, v7, v6);
}

uint64_t sub_100EB1154()
{
  uint64_t v1 = *(void *)(v0 + 48);
  uint64_t v2 = *(void *)(v0 + 24);
  sub_1005057FC(&qword_10167ADD0);
  int v3 = *(_DWORD *)(v1 + 80);
  *(_DWORD *)(v0 + 184) = v3;
  unint64_t v4 = (v3 + 32) & ~(unint64_t)v3;
  uint64_t v5 = swift_allocObject();
  *(void *)(v0 + 128) = v5;
  *(_OWORD *)(v5 + 16) = xmmword_10117E810;
  sub_1006C2AF4(v2, v5 + v4, type metadata accessor for CRLBoardIdentifier);
  *(void *)(v0 + 136) = static MainActor.shared.getter();
  uint64_t v7 = dispatch thunk of Actor.unownedExecutor.getter();
  *(void *)(v0 + 144) = v7;
  *(void *)(v0 + 152) = v6;
  return _swift_task_switch(sub_100EB1250, v7, v6);
}

uint64_t sub_100EB1250(uint64_t (*a1)(), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(v3 + 32) + OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_entityStore);
  *(void *)(v3 + 160) = v4;
  if (v4)
  {
    swift_retain();
    a1 = sub_100EB12D8;
    a2 = v4;
    a3 = 0;
  }
  else
  {
    __break(1u);
  }
  return _swift_task_switch(a1, a2, a3);
}

uint64_t sub_100EB12D8()
{
  uint64_t v1 = v0[20];
  uint64_t v2 = v0[16];
  swift_retain();
  v0[21] = sub_100EB2328(v2, v1);
  v0[22] = 0;
  swift_release();
  swift_release();
  uint64_t v3 = v0[18];
  uint64_t v4 = v0[19];
  return _swift_task_switch(sub_100EB1388, v3, v4);
}

uint64_t sub_100EB1388()
{
  swift_release();
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  uint64_t v1 = *(void *)(v0 + 112);
  uint64_t v2 = *(void *)(v0 + 120);
  return _swift_task_switch(sub_100EB1430, v1, v2);
}

uint64_t sub_100EB1430()
{
  uint64_t v1 = v0[21];
  swift_release();
  uint64_t v2 = *(void *)(v1 + 16);
  if (!v2)
  {
LABEL_13:
    uint64_t v19 = 1;
    goto LABEL_16;
  }
  uint64_t v3 = v0[10];
  uint64_t v4 = v0[21] + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
  uint64_t v5 = *(void *)(v3 + 72);
  swift_bridgeObjectRetain();
  while (1)
  {
    uint64_t v6 = v0[11];
    uint64_t v8 = v0[7];
    uint64_t v7 = v0[8];
    uint64_t v9 = v0[3];
    sub_1006C2AF4(v4, v6, (uint64_t (*)(void))type metadata accessor for CRLBoardEntity);
    char v10 = static UUID.== infix(_:_:)();
    sub_1006C2AF4(v6, v7, type metadata accessor for CRLBoardIdentifier);
    sub_1006C2AF4(v9, v8, type metadata accessor for CRLBoardIdentifier);
    uint64_t v12 = v0[7];
    uint64_t v11 = v0[8];
    if ((v10 & 1) == 0)
    {
      sub_100EB229C(v0[7], type metadata accessor for CRLBoardIdentifier);
      sub_100EB229C(v11, type metadata accessor for CRLBoardIdentifier);
      goto LABEL_4;
    }
    uint64_t v13 = *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20);
    uint64_t v14 = *(void *)(v11 + v13);
    uint64_t v15 = *(void *)(v11 + v13 + 8);
    uint64_t v16 = (void *)(v12 + v13);
    if (v14 == *v16 && v15 == v16[1]) {
      break;
    }
    char v18 = _stringCompareWithSmolCheck(_:_:expecting:)();
    sub_100EB229C(v12, type metadata accessor for CRLBoardIdentifier);
    sub_100EB229C(v11, type metadata accessor for CRLBoardIdentifier);
    if (v18) {
      goto LABEL_15;
    }
LABEL_4:
    sub_100EB229C(v0[11], (uint64_t (*)(void))type metadata accessor for CRLBoardEntity);
    v4 += v5;
    if (!--v2)
    {
      swift_bridgeObjectRelease();
      goto LABEL_13;
    }
  }
  sub_100EB229C(v12, type metadata accessor for CRLBoardIdentifier);
  sub_100EB229C(v11, type metadata accessor for CRLBoardIdentifier);
LABEL_15:
  uint64_t v20 = v0[11];
  uint64_t v21 = v0[2];
  swift_bridgeObjectRelease();
  sub_100EB2234(v20, v21, (uint64_t (*)(void))type metadata accessor for CRLBoardEntity);
  uint64_t v19 = 0;
LABEL_16:
  (*(void (**)(void, uint64_t, uint64_t, void))(v0[10] + 56))(v0[2], v19, 1, v0[9]);
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  int64_t v22 = (uint64_t (*)(void))v0[1];
  return v22();
}

uint64_t sub_100EB16D0()
{
  swift_release();
  swift_release();
  uint64_t v1 = *(void *)(v0 + 112);
  uint64_t v2 = *(void *)(v0 + 120);
  return _swift_task_switch(sub_100EB1740, v1, v2);
}

uint64_t sub_100EB1740()
{
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100EB1820(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v6;
  *uint64_t v6 = v3;
  v6[1] = sub_100528488;
  return sub_100EB18D0(a1, v7, a3, (uint64_t)&off_101515668);
}

uint64_t sub_100EB18D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v5[5] = a4;
  v5[6] = v4;
  v5[3] = a1;
  v5[4] = a3;
  sub_1005057FC(&qword_101691F20);
  v5[7] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for CRLBoardEntity();
  v5[8] = v6;
  v5[9] = *(void *)(v6 - 8);
  v5[10] = swift_task_alloc();
  sub_1005057FC((uint64_t *)&unk_101676310);
  v5[11] = swift_task_alloc();
  type metadata accessor for CRLBoardIdentifier(0);
  v5[12] = swift_task_alloc();
  type metadata accessor for MainActor();
  v5[13] = static MainActor.shared.getter();
  uint64_t v8 = dispatch thunk of Actor.unownedExecutor.getter();
  v5[14] = v8;
  v5[15] = v7;
  return _swift_task_switch(sub_100EB1A54, v8, v7);
}

uint64_t sub_100EB1A54()
{
  uint64_t v1 = v0[11];
  (*(void (**)(void))(v0[5] + 24))(v0[4]);
  uint64_t v2 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48))(v1, 1, v2) == 1)
  {
    uint64_t v3 = v0[11];
    swift_release();
    sub_100522F00(v3, (uint64_t *)&unk_101676310);
LABEL_8:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v10 = (uint64_t (*)(void))v0[1];
    return v10();
  }
  uint64_t v4 = v0[11];
  if (swift_getEnumCaseMultiPayload() != 2)
  {
    swift_release();
    sub_100EB229C(v4, type metadata accessor for CRLBoardLibraryViewModel.Item);
    goto LABEL_8;
  }
  uint64_t v5 = v0[12];
  sub_1005057FC(&qword_101677100);
  swift_bridgeObjectRelease();
  sub_100EB2234(v4, v5, type metadata accessor for CRLBoardIdentifier);
  uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_1016A09D0 + dword_1016A09D0);
  uint64_t v6 = (void *)swift_task_alloc();
  v0[16] = v6;
  *uint64_t v6 = v0;
  v6[1] = sub_100EB1C70;
  uint64_t v7 = v0[12];
  uint64_t v8 = v0[7];
  return v11(v8, v7);
}

uint64_t sub_100EB1C70()
{
  uint64_t v2 = *v1;
  swift_task_dealloc();
  if (v0)
  {
    swift_errorRelease();
    uint64_t v3 = *(void *)(v2 + 112);
    uint64_t v4 = *(void *)(v2 + 120);
    uint64_t v5 = sub_100EB1F18;
  }
  else
  {
    uint64_t v3 = *(void *)(v2 + 112);
    uint64_t v4 = *(void *)(v2 + 120);
    uint64_t v5 = sub_100EB1D94;
  }
  return _swift_task_switch(v5, v3, v4);
}

uint64_t sub_100EB1D94()
{
  uint64_t v1 = v0[8];
  uint64_t v2 = v0[9];
  uint64_t v3 = v0[7];
  swift_release();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    uint64_t v4 = v0[7];
    sub_100EB229C(v0[12], type metadata accessor for CRLBoardIdentifier);
    sub_100522F00(v4, &qword_101691F20);
  }
  else
  {
    uint64_t v5 = v0[12];
    uint64_t v6 = v0[10];
    uint64_t v7 = v0[6];
    uint64_t v8 = v0[4];
    uint64_t v9 = v0[5];
    sub_100EB2234(v0[7], v6, (uint64_t (*)(void))type metadata accessor for CRLBoardEntity);
    v0[2] = v7;
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 + 8) + 16))(v6, v8);
    sub_100EB229C(v6, (uint64_t (*)(void))type metadata accessor for CRLBoardEntity);
    sub_100EB229C(v5, type metadata accessor for CRLBoardIdentifier);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v10 = (uint64_t (*)(void))v0[1];
  return v10();
}

uint64_t sub_100EB1F18()
{
  uint64_t v1 = v0[8];
  uint64_t v2 = v0[9];
  uint64_t v3 = v0[7];
  swift_release();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v2 + 56))(v3, 1, 1, v1);
  uint64_t v4 = v0[7];
  sub_100EB229C(v0[12], type metadata accessor for CRLBoardIdentifier);
  sub_100522F00(v4, &qword_101691F20);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

uint64_t sub_100EB2000(uint64_t a1)
{
  return sub_100EB202C(a1, (uint64_t)&off_101515668);
}

uint64_t sub_100EB202C(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(*(void *)(a2 + 8) + 32))();
}

uint64_t sub_100EB2070(uint64_t a1)
{
  return sub_100EB209C(a1, (uint64_t)&off_101515668);
}

uint64_t sub_100EB209C(uint64_t a1, uint64_t a2)
{
  (*(void (**)(void))(a2 + 312))();
  (*(void (**)(uint64_t, uint64_t))(a2 + 320))(a1, a2);
  (*(void (**)(uint64_t, uint64_t))(a2 + 328))(a1, a2);

  return AppEntityVisualState.init(isSelected:isHighlighted:isFocused:isDisabled:isEditing:isPrimary:)();
}

uint64_t sub_100EB2158(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v6;
  *uint64_t v6 = v3;
  v6[1] = sub_100528D08;
  return sub_100EB18D0(a1, v7, a3, (uint64_t)&off_10152AA10);
}

uint64_t sub_100EB2208(uint64_t a1)
{
  return sub_100EB202C(a1, (uint64_t)&off_10152AA10);
}

uint64_t sub_100EB2234(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_100EB229C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_100EB22FC(uint64_t a1)
{
  return sub_100EB209C(a1, (uint64_t)&off_10152AA10);
}

double *sub_100EB2328(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = sub_1005057FC(&qword_101691F20);
  __chkstk_darwin(v5 - 8, v6);
  uint64_t v8 = (char *)v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9, v10);
  uint64_t v50 = (uint64_t)v46 - v11;
  uint64_t v12 = type metadata accessor for CRLBoardEntity();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12, v14);
  uint64_t v49 = (uint64_t)v46 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16, v17);
  uint64_t v47 = (uint64_t)v46 - v18;
  uint64_t v19 = *(void *)(a1 + 16);
  if (!v19) {
    return _swiftEmptyArrayStorage;
  }
  v46[1] = v2;
  uint64_t v20 = *(void *)(type metadata accessor for CRLBoardIdentifier(0) - 8);
  uint64_t v21 = a1;
  uint64_t v22 = a1 + ((*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80));
  uint64_t v23 = (uint64_t *)(a2 + 120);
  uint64_t v48 = *(void *)(v20 + 72);
  uint64_t v53 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56);
  uint64_t v51 = v13;
  uint64_t v24 = (uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48);
  v46[2] = v21;
  swift_bridgeObjectRetain();
  uint64_t v52 = _swiftEmptyArrayStorage;
  do
  {
    swift_beginAccess();
    uint64_t v25 = *v23;
    if (*(void *)(*v23 + 16) && (unint64_t v26 = sub_1009563EC(v22), (v27 & 1) != 0))
    {
      uint64_t v28 = *(void *)(v25 + 56);
      uint64_t v29 = v51;
      sub_1006C2AF4(v28 + *(void *)(v51 + 72) * v26, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for CRLBoardEntity);
      uint64_t v30 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v29 + 56);
      v30(v8, 0, 1, v12);
    }
    else
    {
      uint64_t v30 = *v53;
      (*v53)(v8, 1, 1, v12);
    }
    swift_endAccess();
    uint64_t v31 = *v24;
    unsigned int v32 = (*v24)(v8, 1, v12);
    sub_100522F00((uint64_t)v8, &qword_101691F20);
    if (v32 == 1)
    {
      type metadata accessor for CRLBoardEntityStore.BoardEntityStoreError();
      sub_100EB2830();
      swift_allocError();
      sub_1006C2AF4(v22, v44, type metadata accessor for CRLBoardIdentifier);
      swift_storeEnumTagMultiPayload();
      swift_willThrow();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v52;
    }
    swift_beginAccess();
    uint64_t v33 = *v23;
    if (*(void *)(*v23 + 16) && (unint64_t v34 = sub_1009563EC(v22), (v35 & 1) != 0))
    {
      uint64_t v36 = *(void *)(v33 + 56);
      uint64_t v37 = v50;
      sub_1006C2AF4(v36 + *(void *)(v51 + 72) * v34, v50, (uint64_t (*)(void))type metadata accessor for CRLBoardEntity);
      uint64_t v38 = 0;
    }
    else
    {
      uint64_t v38 = 1;
      uint64_t v37 = v50;
    }
    v30((char *)v37, v38, 1, v12);
    swift_endAccess();
    if (v31((char *)v37, 1, v12) == 1)
    {
      sub_100522F00(v37, &qword_101691F20);
    }
    else
    {
      uint64_t v39 = v47;
      sub_100EB2234(v37, v47, (uint64_t (*)(void))type metadata accessor for CRLBoardEntity);
      sub_100EB2234(v39, v49, (uint64_t (*)(void))type metadata accessor for CRLBoardEntity);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v52 = (double *)sub_100F63250(0, *((void *)v52 + 2) + 1, 1, (unint64_t)v52);
      }
      unint64_t v41 = *((void *)v52 + 2);
      unint64_t v40 = *((void *)v52 + 3);
      if (v41 >= v40 >> 1) {
        uint64_t v52 = (double *)sub_100F63250(v40 > 1, v41 + 1, 1, (unint64_t)v52);
      }
      uint64_t v42 = v51;
      uint64_t v43 = v52;
      *((void *)v52 + 2) = v41 + 1;
      sub_100EB2234(v49, (uint64_t)v43+ ((*(unsigned __int8 *)(v42 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v42 + 80))+ *(void *)(v42 + 72) * v41, (uint64_t (*)(void))type metadata accessor for CRLBoardEntity);
    }
    v22 += v48;
    --v19;
  }
  while (v19);
  swift_bridgeObjectRelease();
  return v52;
}

unint64_t sub_100EB2830()
{
  unint64_t result = qword_1016A09D8;
  if (!qword_1016A09D8)
  {
    type metadata accessor for CRLBoardEntityStore.BoardEntityStoreError();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A09D8);
  }
  return result;
}

unint64_t sub_100EB2888(uint64_t a1)
{
  unint64_t result = sub_100DFA3F4();
  *(void *)(a1 + 16) = result;
  return result;
}

uint64_t sub_100EB28B0()
{
  return swift_initClassMetadata2();
}

uint64_t sub_100EB2900()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 80);
  uint64_t v3 = type metadata accessor for Ref();
  uint64_t v4 = *(void *)(v1 + 96);
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v6 = swift_getWitnessTable();
  long long v7 = *(_OWORD *)(v4 + 8);
  v20[0] = v2;
  v20[1] = v3;
  long long v21 = v7;
  uint64_t v22 = WitnessTable;
  uint64_t v23 = v6;
  uint64_t v8 = type metadata accessor for CRDictionary();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8, v10);
  uint64_t v12 = (char *)v20 - v11;
  swift_getWitnessTable();
  uint64_t v13 = type metadata accessor for Capsule();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13, v15);
  uint64_t v17 = (char *)v20 - v16;
  uint64_t v18 = (uint64_t)v0 + *(void *)(v1 + 120);
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v17, v18, v13);
  swift_getWitnessTable();
  Capsule<>.root.getter();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v17, v13);
  CRDictionary.makeIterator()();
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v12, v8);
}

uint64_t sub_100EB2BC0()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for CRLCRDTMap()
{
  return swift_getGenericMetadata();
}

uint64_t sub_100EB2C18()
{
  type metadata accessor for Ref();
  swift_getWitnessTable();
  swift_getWitnessTable();
  type metadata accessor for CRDictionary();
  swift_getWitnessTable();
  uint64_t result = type metadata accessor for Capsule();
  if (v1 <= 0x3F) {
    return swift_initClassMetadata2();
  }
  return result;
}

uint64_t sub_100EB2D70()
{
  swift_beginAccess();
  swift_beginAccess();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  type metadata accessor for CRLCRDTMapBucket();
  swift_getWitnessTable();
  char v0 = static Dictionary<>.== infix(_:_:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0 & 1;
}

uint64_t sub_100EB2E60()
{
  return sub_100EB2D70();
}

uint64_t sub_100EB2E70@<X0>(void *a1@<X8>)
{
  swift_beginAccess();
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v4 = -1;
  uint64_t v5 = *(void *)(v3 + 64);
  uint64_t v6 = -1 << *(unsigned char *)(v3 + 32);
  if (-v6 < 64) {
    uint64_t v4 = ~(-1 << -(char)v6);
  }
  *a1 = v3;
  a1[1] = v3 + 64;
  a1[2] = ~v6;
  a1[3] = 0;
  a1[4] = v4 & v5;
  return swift_bridgeObjectRetain();
}

uint64_t sub_100EB2EEC@<X0>(void *a1@<X8>)
{
  sub_100EB2E70(a1);

  return swift_release();
}

uint64_t sub_100EB2F24(uint64_t a1, uint64_t a2)
{
  return sub_100EB3644(a1, a2, (void (*)(void, _OWORD *))type metadata accessor for CRLCRDTMap);
}

uint64_t sub_100EB2F3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_100EB36BC(a1, a2, a3, a4, a5, (void (*)(void, _OWORD *))type metadata accessor for CRLCRDTMap);
}

uint64_t sub_100EB2F54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_100EB375C(a1, a2, a3, a4, a5, (void (*)(void, _OWORD *))type metadata accessor for CRLCRDTMap);
}

unsigned char *sub_100EB2F80@<X0>(unsigned char *result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = *result;
  return result;
}

uint64_t sub_100EB2F8C()
{
  uint64_t v1 = v0 + *(void *)(*(void *)v0 + 120);
  type metadata accessor for Ref();
  swift_getWitnessTable();
  swift_getWitnessTable();
  type metadata accessor for CRDictionary();
  swift_getWitnessTable();
  uint64_t v2 = type metadata accessor for Capsule();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t sub_100EB30F4()
{
  sub_100EB2F8C();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for CRLCRDTMapBucket()
{
  return swift_getGenericMetadata();
}

uint64_t sub_100EB3164(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 8)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_100EB31AC(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 8) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t type metadata accessor for CRLCRDTMapBucketIndexProvider()
{
  return sub_100568E70();
}

uint64_t sub_100EB3200()
{
  return swift_getWitnessTable();
}

uint64_t sub_100EB321C()
{
  return sub_100682A10();
}

uint64_t sub_100EB3234()
{
  return sub_10068C394();
}

uint64_t sub_100EB324C(void *a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(v2 + 80);
  uint64_t v6 = type metadata accessor for Ref();
  uint64_t v7 = *(void *)(v2 + 96);
  uint64_t v8 = *(void *)(v7 + 8);
  uint64_t v9 = *(void *)(v7 + 16);
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v41 = v5;
  uint64_t v42 = swift_getWitnessTable();
  uint64_t v44 = v5;
  uint64_t v45 = v6;
  uint64_t v46 = v8;
  uint64_t v47 = v9;
  uint64_t v43 = WitnessTable;
  uint64_t v48 = WitnessTable;
  uint64_t v49 = v42;
  uint64_t v11 = type metadata accessor for CRDictionary();
  uint64_t v39 = *(void *)(v11 - 8);
  __chkstk_darwin(v11, v12);
  uint64_t v38 = (char *)v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14, v15);
  uint64_t v37 = (char *)v36 - v16;
  swift_getWitnessTable();
  uint64_t v17 = type metadata accessor for Capsule();
  uint64_t v18 = *(void *)(v17 - 8);
  __chkstk_darwin(v17, v19);
  long long v21 = (char *)v36 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22, v23);
  uint64_t v25 = (char *)v36 - v24;
  uint64_t v26 = a1[2];
  uint64_t v40 = a2;
  if (v26 == *(void *)(a2 + 16))
  {
    char v27 = (char *)a1 + *(void *)(*a1 + 120);
    swift_beginAccess();
    v36[1] = v9;
    v36[2] = v8;
    v36[0] = v6;
    uint64_t v28 = *(void (**)(char *, char *, uint64_t))(v18 + 16);
    v28(v25, v27, v17);
    swift_getWitnessTable();
    uint64_t v29 = v37;
    Capsule<>.root.getter();
    uint64_t v30 = *(void (**)(char *, uint64_t))(v18 + 8);
    v30(v25, v17);
    uint64_t v31 = (char *)(v40 + *(void *)(*(void *)v40 + 120));
    swift_beginAccess();
    v28(v21, v31, v17);
    unsigned int v32 = v38;
    Capsule<>.root.getter();
    v30(v21, v17);
    char v33 = static CRDictionary.== infix(_:_:)();
    unint64_t v34 = *(void (**)(char *, uint64_t))(v39 + 8);
    v34(v32, v11);
    v34(v29, v11);
  }
  else
  {
    char v33 = 0;
  }
  return v33 & 1;
}

uint64_t sub_100EB35E8(void **a1, uint64_t *a2)
{
  return sub_100EB324C(*a1, *a2);
}

uint64_t sub_100EB35F4()
{
  sub_100EB2900();

  return swift_release();
}

uint64_t sub_100EB362C(uint64_t a1, uint64_t a2)
{
  return sub_100EB3644(a1, a2, (void (*)(void, _OWORD *))type metadata accessor for CRLCRDTMapBucket);
}

uint64_t sub_100EB3644(uint64_t a1, uint64_t a2, void (*a3)(void, _OWORD *))
{
  long long v3 = *(_OWORD *)(a1 + 96);
  v6[0] = *(_OWORD *)(a1 + 80);
  v6[1] = v3;
  a3(0, v6);
  uint64_t v4 = j___ss30_copySequenceToContiguousArrayys0dE0Vy7ElementQzGxSTRzlF();
  swift_release();
  return v4;
}

uint64_t sub_100EB36A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_100EB36BC(a1, a2, a3, a4, a5, (void (*)(void, _OWORD *))type metadata accessor for CRLCRDTMapBucket);
}

uint64_t sub_100EB36BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(void, _OWORD *))
{
  long long v6 = *(_OWORD *)(a4 + 96);
  v8[0] = *(_OWORD *)(a4 + 80);
  v8[1] = v6;
  a6(0, v8);
  return Sequence._copyContents(initializing:)();
}

uint64_t sub_100EB3730(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_100EB375C(a1, a2, a3, a4, a5, (void (*)(void, _OWORD *))type metadata accessor for CRLCRDTMapBucket);
}

uint64_t sub_100EB375C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(void, _OWORD *))
{
  long long v6 = *(_OWORD *)(a4 + 96);
  v8[0] = *(_OWORD *)(a4 + 80);
  v8[1] = v6;
  a6(0, v8);
  return Sequence.withContiguousStorageIfAvailable<A>(_:)();
}

uint64_t sub_100EB37E0()
{
  return swift_getOpaqueTypeConformance2();
}

unsigned char *sub_100EB3828(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x100EB38C4);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t type metadata accessor for CRLCRDTMapBucketIndexProvider.HashAlgorithm()
{
  return sub_100568E70();
}

uint64_t sub_100EB3904()
{
  return swift_getWitnessTable();
}

uint64_t sub_100EB396C()
{
  return swift_getWitnessTable();
}

uint64_t sub_100EB398C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9, uint64_t a10, uint64_t a11)
{
  uint64_t v18 = v11 + OBJC_IVAR____TtC8Freeform22CRLBoardItemSyncRecord_parentContainerUUID;
  uint64_t v19 = type metadata accessor for UUID();
  uint64_t v20 = *(void *)(v19 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v20 + 56))(v18, 1, 1, v19);
  *(_OWORD *)(v11 + OBJC_IVAR____TtC8Freeform22CRLBoardItemSyncRecord_syncData) = xmmword_101190880;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v20 + 32))(v11 + OBJC_IVAR____TtC8Freeform22CRLBoardItemSyncRecord_id, a1, v19);
  long long v21 = (void *)(v11 + OBJC_IVAR____TtC8Freeform22CRLBoardItemSyncRecord_minRequiredVersions);
  *long long v21 = a2;
  v21[1] = a3;
  v21[2] = a4;
  *(void *)(v11 + OBJC_IVAR____TtC8Freeform22CRLBoardItemSyncRecord_objectOptions) = a5;
  *(void *)(v11 + OBJC_IVAR____TtC8Freeform22CRLBoardItemSyncRecord_itemTypeValue) = a6;
  swift_beginAccess();
  sub_10068EA54(a7, v18);
  swift_endAccess();
  sub_1005394E4(a8, v11 + OBJC_IVAR____TtC8Freeform22CRLBoardItemSyncRecord_boardIdentifier);
  *(unsigned char *)(v11 + OBJC_IVAR____TtC8Freeform22CRLBoardItemSyncRecord_tombstoned) = a9;
  uint64_t v22 = (void *)(v11 + OBJC_IVAR____TtC8Freeform22CRLBoardItemSyncRecord_syncData);
  uint64_t v23 = *(void *)(v11 + OBJC_IVAR____TtC8Freeform22CRLBoardItemSyncRecord_syncData);
  unint64_t v24 = *(void *)(v11 + OBJC_IVAR____TtC8Freeform22CRLBoardItemSyncRecord_syncData + 8);
  void *v22 = a10;
  v22[1] = a11;
  sub_100514260(v23, v24);
  return v11;
}

uint64_t sub_100EB3B58()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC8Freeform22CRLBoardItemSyncRecord_id;
  uint64_t v2 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  sub_100510824(v0 + OBJC_IVAR____TtC8Freeform22CRLBoardItemSyncRecord_parentContainerUUID);
  sub_100510028(v0 + OBJC_IVAR____TtC8Freeform22CRLBoardItemSyncRecord_boardIdentifier);
  sub_100514260(*(void *)(v0 + OBJC_IVAR____TtC8Freeform22CRLBoardItemSyncRecord_syncData), *(void *)(v0 + OBJC_IVAR____TtC8Freeform22CRLBoardItemSyncRecord_syncData + 8));

  return swift_deallocClassInstance();
}

uint64_t sub_100EB3C2C()
{
  return type metadata accessor for CRLBoardItemSyncRecord(0);
}

uint64_t type metadata accessor for CRLBoardItemSyncRecord(uint64_t a1)
{
  return sub_100512D5C(a1, qword_1016A0C10);
}

void sub_100EB3C54()
{
  type metadata accessor for UUID();
  if (v0 <= 0x3F)
  {
    sub_100510764();
    if (v1 <= 0x3F)
    {
      type metadata accessor for CRLBoardIdentifierStorage(319);
      if (v2 <= 0x3F) {
        swift_updateClassMetadata2();
      }
    }
  }
}

uint64_t sub_100EB3D84()
{
  return *(void *)(*v0 + OBJC_IVAR____TtC8Freeform22CRLBoardItemSyncRecord_minRequiredVersions);
}

uint64_t sub_100EB3DA0()
{
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v0 + OBJC_IVAR____TtC8Freeform33CRLBoardItemSyncLocalChangeRecord_persistenceContext);
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t sub_100EB3DF0()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC8Freeform22CRLBoardItemSyncRecord_id;
  uint64_t v2 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  sub_100510824(v0 + OBJC_IVAR____TtC8Freeform22CRLBoardItemSyncRecord_parentContainerUUID);
  sub_100510028(v0 + OBJC_IVAR____TtC8Freeform22CRLBoardItemSyncRecord_boardIdentifier);
  sub_100514260(*(void *)(v0 + OBJC_IVAR____TtC8Freeform22CRLBoardItemSyncRecord_syncData), *(void *)(v0 + OBJC_IVAR____TtC8Freeform22CRLBoardItemSyncRecord_syncData + 8));
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v0 + OBJC_IVAR____TtC8Freeform33CRLBoardItemSyncLocalChangeRecord_persistenceContext);
  swift_release();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t sub_100EB3EF4()
{
  return type metadata accessor for CRLBoardItemSyncLocalChangeRecord(0);
}

uint64_t type metadata accessor for CRLBoardItemSyncLocalChangeRecord(uint64_t a1)
{
  return sub_100512D5C(a1, qword_1016A0D58);
}

uint64_t sub_100EB3F1C()
{
  return sub_100EB40FC();
}

uint64_t sub_100EB3F48()
{
  sub_100514260(*(void *)(v0 + OBJC_IVAR____TtC8Freeform28CRLBoardItemSyncRemoteRecord_commonCRDTData), *(void *)(v0 + OBJC_IVAR____TtC8Freeform28CRLBoardItemSyncRemoteRecord_commonCRDTData + 8));
  sub_100514260(*(void *)(v0 + OBJC_IVAR____TtC8Freeform28CRLBoardItemSyncRemoteRecord_specificCRDTData), *(void *)(v0 + OBJC_IVAR____TtC8Freeform28CRLBoardItemSyncRemoteRecord_specificCRDTData + 8));

  return swift_bridgeObjectRelease();
}

uint64_t sub_100EB3FA0()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC8Freeform22CRLBoardItemSyncRecord_id;
  uint64_t v2 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  sub_100510824(v0 + OBJC_IVAR____TtC8Freeform22CRLBoardItemSyncRecord_parentContainerUUID);
  sub_100510028(v0 + OBJC_IVAR____TtC8Freeform22CRLBoardItemSyncRecord_boardIdentifier);
  sub_100514260(*(void *)(v0 + OBJC_IVAR____TtC8Freeform22CRLBoardItemSyncRecord_syncData), *(void *)(v0 + OBJC_IVAR____TtC8Freeform22CRLBoardItemSyncRecord_syncData + 8));
  sub_100514260(*(void *)(v0 + OBJC_IVAR____TtC8Freeform28CRLBoardItemSyncRemoteRecord_commonCRDTData), *(void *)(v0 + OBJC_IVAR____TtC8Freeform28CRLBoardItemSyncRemoteRecord_commonCRDTData + 8));
  sub_100514260(*(void *)(v0 + OBJC_IVAR____TtC8Freeform28CRLBoardItemSyncRemoteRecord_specificCRDTData), *(void *)(v0 + OBJC_IVAR____TtC8Freeform28CRLBoardItemSyncRemoteRecord_specificCRDTData + 8));
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t sub_100EB40AC()
{
  return type metadata accessor for CRLBoardItemSyncRemoteRecord(0);
}

uint64_t type metadata accessor for CRLBoardItemSyncRemoteRecord(uint64_t a1)
{
  return sub_100512D5C(a1, qword_1016A0EF8);
}

uint64_t sub_100EB40D4()
{
  return sub_100EB40FC();
}

uint64_t sub_100EB40FC()
{
  return swift_updateClassMetadata2();
}

uint64_t sub_100EB413C()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC8Freeform38CRLBoardItemSyncRemoteRecordIdentifier_itemUUID;
  uint64_t v2 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  sub_100510028(v0 + OBJC_IVAR____TtC8Freeform38CRLBoardItemSyncRemoteRecordIdentifier_boardIdentifier);

  return swift_deallocClassInstance();
}

uint64_t sub_100EB41EC()
{
  return type metadata accessor for CRLBoardItemSyncRemoteRecordIdentifier(0);
}

uint64_t type metadata accessor for CRLBoardItemSyncRemoteRecordIdentifier(uint64_t a1)
{
  return sub_100512D5C(a1, qword_1016A10B0);
}

uint64_t sub_100EB4214()
{
  uint64_t result = type metadata accessor for UUID();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for CRLBoardIdentifierStorage(319);
    if (v2 <= 0x3F)
    {
      uint64_t result = swift_updateClassMetadata2();
      if (!result) {
        return 0;
      }
    }
  }
  return result;
}

uint64_t sub_100EB42E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unsigned __int8 a9, uint64_t a10, unint64_t a11, uint64_t a12, unint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  uint64_t v46 = a1;
  uint64_t v47 = a7;
  uint64_t v55 = a5;
  uint64_t v56 = a6;
  uint64_t v53 = a3;
  uint64_t v54 = a4;
  uint64_t v52 = a2;
  int v51 = a9;
  uint64_t v49 = a14;
  uint64_t v50 = a8;
  uint64_t v48 = a15;
  uint64_t v45 = a16;
  uint64_t v42 = a12;
  unint64_t v43 = a13;
  uint64_t v17 = type metadata accessor for CRLBoardIdentifier(0);
  __chkstk_darwin(v17 - 8, v18);
  uint64_t v44 = (uint64_t)&v42 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_1005057FC((uint64_t *)&unk_101674520);
  __chkstk_darwin(v20 - 8, v21);
  uint64_t v23 = (char *)&v42 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = type metadata accessor for UUID();
  uint64_t v25 = *(void *)(v24 - 8);
  __chkstk_darwin(v24, v26);
  uint64_t v28 = (char *)&v42 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = v16 + OBJC_IVAR____TtC8Freeform28CRLBoardItemSyncRemoteRecord_commonCRDTData;
  *(_OWORD *)uint64_t v29 = xmmword_101190880;
  uint64_t v30 = (uint64_t *)(v16 + OBJC_IVAR____TtC8Freeform28CRLBoardItemSyncRemoteRecord_specificCRDTData);
  *(_OWORD *)(v16 + OBJC_IVAR____TtC8Freeform28CRLBoardItemSyncRemoteRecord_specificCRDTData) = xmmword_101190880;
  *(void *)(v16 + OBJC_IVAR____TtC8Freeform28CRLBoardItemSyncRemoteRecord_assets) = _swiftEmptyDictionarySingleton;
  uint64_t v31 = *(void *)v29;
  unint64_t v32 = *(void *)(v29 + 8);
  *(void *)uint64_t v29 = a10;
  *(void *)(v29 + 8) = a11;
  swift_retain();
  sub_1005FA2A0(a10, a11);
  sub_100514260(v31, v32);
  uint64_t v33 = *v30;
  unint64_t v34 = v30[1];
  uint64_t v35 = v42;
  unint64_t v36 = v43;
  *uint64_t v30 = v42;
  v30[1] = v36;
  sub_1005FA2A0(v35, v36);
  sub_100514260(v33, v34);
  *(void *)(v16 + OBJC_IVAR____TtC8Freeform28CRLBoardItemSyncRemoteRecord_minRequiredVersionForSync) = v45;
  swift_release();
  uint64_t v37 = v46;
  (*(void (**)(char *, uint64_t, uint64_t))(v25 + 16))(v28, v46, v24);
  uint64_t v38 = v47;
  sub_1005107BC(v47, (uint64_t)v23);
  uint64_t v39 = v50;
  uint64_t v40 = v44;
  sub_100540CFC(v50, v44);
  sub_100EB398C((uint64_t)v28, v52, v53, v54, v55, v56, (uint64_t)v23, v40, v51, v49, v48);
  sub_100510028(v39);
  sub_100510824(v38);
  (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v37, v24);
  return v16;
}

unsigned char *sub_100EB45B4()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for CRLCommandBoardItemChangeContext(0);
  __chkstk_darwin(v2, v3);
  uint64_t v5 = (char *)&v55 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for CRLBoardItemDeltaChange(0);
  __chkstk_darwin(v6, v7);
  uint64_t v9 = (char *)&v55 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10, v11);
  uint64_t v13 = (char *)&v55 - v12;
  uint64_t v14 = type metadata accessor for CRLBoardItemPeerSyncUpdate(0);
  __chkstk_darwin(v14, v15);
  uint64_t v17 = (char *)&v55 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100EB9D10(v1, (uint64_t)v17, type metadata accessor for CRLBoardItemPeerSyncUpdate);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload != 1)
  {
    if (EnumCaseMultiPayload == 4)
    {
      sub_100510084(*((void *)v17 + 1), *((void *)v17 + 2));
      return 0;
    }
    uint64_t v22 = type metadata accessor for CRLBoardItemPeerSyncUpdate;
    uint64_t v23 = (uint64_t)v17;
LABEL_8:
    sub_100EB9D78(v23, v22);
    return 0;
  }
  sub_100EBB1D8((uint64_t)v17, (uint64_t)v13, type metadata accessor for CRLBoardItemDeltaChange);
  uint64_t v19 = &v13[*(int *)(v6 + 36)];
  unint64_t v20 = *((void *)v19 + 1);
  sub_100EB9D10((uint64_t)v13, (uint64_t)v9, type metadata accessor for CRLBoardItemDeltaChange);
  if (v20 >> 60 == 15)
  {
    unint64_t v21 = *(void *)&v9[*(int *)(v6 + 40) + 8];
    sub_100EB9D78((uint64_t)v9, type metadata accessor for CRLBoardItemDeltaChange);
    if (v21 >> 60 == 15)
    {
      uint64_t v22 = type metadata accessor for CRLBoardItemDeltaChange;
      uint64_t v23 = (uint64_t)v13;
      goto LABEL_8;
    }
  }
  else
  {
    sub_100EB9D78((uint64_t)v9, type metadata accessor for CRLBoardItemDeltaChange);
  }
  unint64_t v25 = *((void *)v19 + 1);
  uint64_t v24 = &_swiftEmptySetSingleton;
  if (v25 >> 60 != 15)
  {
    uint64_t v62 = v2;
    uint64_t v56 = (void (*)(uint64_t))type metadata accessor for CRLCommandBoardItemChangeContext;
    uint64_t v63 = sub_100EBB190(&qword_10169D8F0, (void (*)(uint64_t))type metadata accessor for CRLCommandBoardItemChangeContext);
    uint64_t v26 = sub_1005767BC(v61);
    uint64_t v27 = *(int *)(sub_1005057FC(&qword_10169D8F8) + 48);
    uint64_t v28 = type metadata accessor for UUID();
    uint64_t v29 = *(void *)(v28 - 8);
    (*(void (**)(uint64_t *, char *, uint64_t))(v29 + 16))(v26, v13, v28);
    *((unsigned char *)v26 + v27) = 0;
    uint64_t v30 = sub_10050F848(v61, v62);
    __n128 v31 = __chkstk_darwin(v30, v30);
    (*(void (**)(char *, __n128))(v33 + 16))((char *)&v55 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0), v31);
    sub_100EBB190(&qword_10169D900, v56);
    AnyHashable.init<A>(_:)();
    unint64_t v34 = sub_10050F848(v61, v62);
    sub_100EB9D10((uint64_t)v34, (uint64_t)v5, type metadata accessor for CRLCommandBoardItemChangeContext);
    (*(void (**)(char *, uint64_t))(v29 + 8))(v5, v28);
    *((void *)&v60 + 1) = 4;
    long long v65 = v58;
    long long v66 = v59;
    long long v67 = v60;
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v61);
    sub_10052E538((uint64_t)&v65, (uint64_t)v61);
    Hasher.init(_seed:)();
    swift_bridgeObjectRetain();
    AnyHashable.hash(into:)();
    Hasher._combine(_:)(v64);
    Swift::Int v35 = Hasher._finalize()();
    uint64_t v36 = -1 << *((unsigned char *)&_swiftEmptySetSingleton + 32);
    unint64_t v37 = v35 & ~v36;
    if ((*(void *)((char *)&_swiftEmptySetSingleton + ((v37 >> 3) & 0xFFFFFFFFFFFFFF8) + 56) >> v37))
    {
      uint64_t v38 = ~v36;
      while (1)
      {
        sub_10052E538(*((void *)&_swiftEmptySetSingleton + 6) + 48 * v37, (uint64_t)&v58);
        if ((static AnyHashable.== infix(_:_:)() & 1) != 0 && *((void *)&v60 + 1) == v64) {
          break;
        }
        sub_10058EF74((uint64_t)&v58);
        unint64_t v37 = (v37 + 1) & v38;
        if (((*(void *)((char *)&_swiftEmptySetSingleton + ((v37 >> 3) & 0xFFFFFFFFFFFFFF8) + 56) >> v37) & 1) == 0) {
          goto LABEL_18;
        }
      }
      sub_10058EF74((uint64_t)&v58);
      uint64_t v24 = &_swiftEmptySetSingleton;
    }
    else
    {
LABEL_18:
      swift_bridgeObjectRelease();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      sub_10052E538((uint64_t)v61, (uint64_t)&v58);
      uint64_t v57 = &_swiftEmptySetSingleton;
      sub_100CC7B24((Swift::Int)&v58, v37, isUniquelyReferenced_nonNull_native);
      uint64_t v24 = v57;
    }
    swift_bridgeObjectRelease();
    sub_10058EF74((uint64_t)v61);
    sub_10058EF74((uint64_t)&v65);
  }
  if (*(void *)&v13[*(int *)(v6 + 40) + 8] >> 60 != 15)
  {
    uint64_t v62 = v2;
    uint64_t v63 = sub_100EBB190(&qword_10169D8F0, (void (*)(uint64_t))type metadata accessor for CRLCommandBoardItemChangeContext);
    uint64_t v40 = sub_1005767BC(v61);
    uint64_t v41 = *(int *)(sub_1005057FC(&qword_10169D8F8) + 48);
    uint64_t v42 = type metadata accessor for UUID();
    uint64_t v43 = *(void *)(v42 - 8);
    (*(void (**)(uint64_t *, char *, uint64_t))(v43 + 16))(v40, v13, v42);
    *((unsigned char *)v40 + v41) = 1;
    uint64_t v44 = sub_10050F848(v61, v62);
    __n128 v45 = __chkstk_darwin(v44, v44);
    (*(void (**)(char *, __n128))(v47 + 16))((char *)&v55 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0), v45);
    sub_100EBB190(&qword_10169D900, (void (*)(uint64_t))type metadata accessor for CRLCommandBoardItemChangeContext);
    AnyHashable.init<A>(_:)();
    uint64_t v48 = sub_10050F848(v61, v62);
    sub_100EB9D10((uint64_t)v48, (uint64_t)v5, type metadata accessor for CRLCommandBoardItemChangeContext);
    (*(void (**)(char *, uint64_t))(v43 + 8))(v5, v42);
    *((void *)&v60 + 1) = 4;
    long long v65 = v58;
    long long v66 = v59;
    long long v67 = v60;
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v61);
    sub_10052E538((uint64_t)&v65, (uint64_t)v61);
    Hasher.init(_seed:)();
    swift_bridgeObjectRetain();
    AnyHashable.hash(into:)();
    Hasher._combine(_:)(v64);
    Swift::Int v49 = Hasher._finalize()();
    uint64_t v50 = -1 << v24[32];
    unint64_t v51 = v49 & ~v50;
    if ((*(void *)&v24[((v51 >> 3) & 0xFFFFFFFFFFFFFF8) + 56] >> v51))
    {
      uint64_t v52 = ~v50;
      while (1)
      {
        sub_10052E538(*((void *)v24 + 6) + 48 * v51, (uint64_t)&v58);
        if ((static AnyHashable.== infix(_:_:)() & 1) != 0 && *((void *)&v60 + 1) == v64) {
          break;
        }
        sub_10058EF74((uint64_t)&v58);
        unint64_t v51 = (v51 + 1) & v52;
        if (((*(void *)&v24[((v51 >> 3) & 0xFFFFFFFFFFFFFF8) + 56] >> v51) & 1) == 0) {
          goto LABEL_27;
        }
      }
      sub_10058EF74((uint64_t)&v58);
    }
    else
    {
LABEL_27:
      swift_bridgeObjectRelease();
      char v53 = swift_isUniquelyReferenced_nonNull_native();
      sub_10052E538((uint64_t)v61, (uint64_t)&v58);
      uint64_t v57 = v24;
      sub_100CC7B24((Swift::Int)&v58, v51, v53);
      uint64_t v24 = v57;
    }
    swift_bridgeObjectRelease();
    sub_10058EF74((uint64_t)v61);
    sub_10058EF74((uint64_t)&v65);
  }
  sub_100EB9D78((uint64_t)v13, type metadata accessor for CRLBoardItemDeltaChange);
  return v24;
}

uint64_t sub_100EB4EE8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for CRLBoardItemDeltaChange(0);
  __chkstk_darwin(v4 - 8, v5);
  uint64_t v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for CRLGloballyScopedBoardIdentifier(0);
  __chkstk_darwin(v8 - 8, v9);
  uint64_t v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for CRLBoardItemPeerSyncUpdate(0);
  __chkstk_darwin(v12, v13);
  uint64_t v15 = (uint64_t *)((char *)&v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_100EB9D10(v2, (uint64_t)v15, type metadata accessor for CRLBoardItemPeerSyncUpdate);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_100EBB1D8((uint64_t)v15, (uint64_t)v7, type metadata accessor for CRLBoardItemDeltaChange);
      uint64_t v21 = type metadata accessor for UUID();
      uint64_t v22 = *(void *)(v21 - 8);
      (*(void (**)(uint64_t, char *, uint64_t))(v22 + 16))(a1, v7, v21);
      sub_100EB9D78((uint64_t)v7, type metadata accessor for CRLBoardItemDeltaChange);
      uint64_t result = (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v22 + 56))(a1, 0, 1, v21);
      break;
    case 2u:
      (*(void (**)(void))(*(void *)*v15 + 256))();
      swift_release();
      uint64_t v23 = type metadata accessor for UUID();
      uint64_t result = (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(a1, 0, 1, v23);
      break;
    case 3u:
      uint64_t v24 = type metadata accessor for UUID();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(a1, 1, 1, v24);
      uint64_t result = sub_100EB9D78((uint64_t)v15, type metadata accessor for CRLBoardItemPeerSyncUpdate);
      break;
    case 4u:
    case 5u:
      sub_100510084(v15[1], v15[2]);
      uint64_t v16 = type metadata accessor for UUID();
      uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(a1, 1, 1, v16);
      break;
    default:
      uint64_t v18 = sub_1005057FC(&qword_1016A0650);
      sub_100510084(*(uint64_t *)((char *)v15 + *(int *)(v18 + 48) + 24), *(uint64_t *)((char *)v15 + *(int *)(v18 + 48) + 32));
      sub_100EBB1D8((uint64_t)v15, (uint64_t)v11, type metadata accessor for CRLGloballyScopedBoardIdentifier);
      uint64_t v19 = type metadata accessor for UUID();
      uint64_t v20 = *(void *)(v19 - 8);
      (*(void (**)(uint64_t, char *, uint64_t))(v20 + 16))(a1, v11, v19);
      sub_100EB9D78((uint64_t)v11, type metadata accessor for CRLGloballyScopedBoardIdentifier);
      uint64_t result = (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v20 + 56))(a1, 0, 1, v19);
      break;
  }
  return result;
}

void sub_100EB5300(char *a1, uint64_t a2, int a3)
{
  uint64_t v5 = v4;
  uint64_t v6 = v3;
  int v213 = a3;
  uint64_t v248 = a2;
  uint64_t v8 = sub_1005057FC((uint64_t *)&unk_101674520);
  __chkstk_darwin(v8 - 8, v9);
  unint64_t v227 = (char *)&v208 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11, v12);
  unint64_t v220 = (char *)&v208 - v13;
  uint64_t v223 = (int *)type metadata accessor for CRLBoardItemDeltaChange(0);
  __chkstk_darwin(v223, v14);
  uint64_t v16 = (char *)&v208 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for CRLBoardCRDTData(0);
  __chkstk_darwin(v17 - 8, v18);
  uint64_t v236 = (uint64_t)&v208 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = type metadata accessor for UUID();
  uint64_t v21 = *(void *)(v20 - 8);
  __chkstk_darwin(v20, v22);
  uint64_t v221 = (char *)&v208 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24, v25);
  char v233 = (char *)&v208 - v26;
  __chkstk_darwin(v27, v28);
  uint64_t v212 = (char *)&v208 - v29;
  __chkstk_darwin(v30, v31);
  char v219 = (char *)&v208 - v32;
  __chkstk_darwin(v33, v34);
  v232 = (char *)&v208 - v35;
  __chkstk_darwin(v36, v37);
  uint64_t v235 = (char *)&v208 - v38;
  uint64_t v39 = type metadata accessor for CRLBoardItemPeerSyncUpdate(0);
  __chkstk_darwin(v39, v40);
  uint64_t v43 = (uint64_t *)((char *)&v208 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v44 = *(void *)(v6 + OBJC_IVAR____TtC8Freeform30CRLCommandApplyPeerSyncUpdates_updates);
  uint64_t v242 = *(void *)(v44 + 16);
  if (!v242) {
    return;
  }
  uint64_t v234 = OBJC_IVAR____TtC8Freeform8CRLBoard_data;
  uint64_t v210 = OBJC_IVAR____TtC8Freeform8CRLBoard_store;
  __n128 v45 = &a1[OBJC_IVAR____TtC8Freeform8CRLBoard_objectUUIDMap];
  uint64_t v240 = v44 + ((*(unsigned __int8 *)(v41 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v41 + 80));
  uint64_t v241 = v41;
  swift_bridgeObjectRetain();
  unint64_t v216 = v45;
  swift_beginAccess();
  uint64_t v237 = v16;
  unint64_t v46 = 0;
  uint64_t v230 = (void (**)(char *, uint64_t, uint64_t))(v21 + 32);
  uint64_t v246 = (void (**)(char *, uint64_t))(v21 + 8);
  uint64_t v214 = v21 + 16;
  uint64_t v215 = v21;
  uint64_t v222 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v21 + 56);
  uint64_t v226 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v21 + 48);
  long long v231 = xmmword_10117E810;
  long long v224 = xmmword_10117DF40;
  uint64_t v247 = v20;
  uint64_t v238 = v44;
  uint64_t v239 = v39;
  uint64_t v243 = a1;
  uint64_t v244 = v43;
  uint64_t v47 = v39;
  while (2)
  {
    if (v46 >= *(void *)(v44 + 16))
    {
      __break(1u);
LABEL_91:
      __break(1u);
LABEL_92:
      sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"commit(with:transaction:undoable:)", 34, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandApplyPeerSyncUpdates.swift", 102, 2, 229, (uint64_t)"Unexpected boardAuxiliaryChange in CRLCommandApplyPeerChanges", 61, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_100586FD4((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Unexpected boardAuxiliaryChange in CRLCommandApplyPeerChanges");
      uint64_t v205 = 229;
LABEL_94:
      sub_1005871AC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"commit(with:transaction:undoable:)", 34, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandApplyPeerSyncUpdates.swift", 102, 2, v205);
      SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v206, v207);
      _assertionFailure(_:_:file:line:flags:)();
      __break(1u);
      JUMPOUT(0x100EB710CLL);
    }
    uint64_t v48 = v46++;
    sub_100EB9D10(v240 + *(void *)(v241 + 72) * v48, (uint64_t)v43, type metadata accessor for CRLBoardItemPeerSyncUpdate);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        unint64_t v245 = v46;
        sub_100EBB1D8((uint64_t)v43, (uint64_t)v237, type metadata accessor for CRLBoardItemDeltaChange);
        uint64_t v117 = *(void *)&a1[v234] + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
        swift_beginAccess();
        uint64_t v118 = v117;
        uint64_t v119 = v236;
        sub_100EB9D10(v118, v236, type metadata accessor for CRLBoardCRDTData);
        swift_retain();
        sub_1005057FC(&qword_101674550);
        uint64_t v120 = v235;
        CRRegister.wrappedValue.getter();
        sub_100EB9D78(v119, type metadata accessor for CRLBoardCRDTData);
        swift_release();
        LOBYTE(v119) = static UUID.== infix(_:_:)();
        uint64_t v121 = (void (*)(char *, uint64_t, uint64_t))a1;
        uint64_t v122 = *v246;
        (*v246)(v120, v247);
        if (v119)
        {
          swift_unknownObjectRetain();
          uint64_t v43 = v244;
          unint64_t v46 = v245;
          uint64_t v47 = v239;
        }
        else
        {
          uint64_t v123 = *(void *)v216;
          uint64_t v43 = v244;
          unint64_t v46 = v245;
          uint64_t v47 = v239;
          if (!*(void *)(*(void *)v216 + 16)) {
            goto LABEL_52;
          }
          swift_bridgeObjectRetain();
          unint64_t v124 = sub_100955FC8((uint64_t)v237);
          if ((v125 & 1) == 0)
          {
            swift_bridgeObjectRelease();
            goto LABEL_52;
          }
          uint64_t v121 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v123 + 56) + 16 * v124);
          swift_unknownObjectRetain();
          swift_bridgeObjectRelease();
        }
        type metadata accessor for CRLBoardItemBase(0);
        uint64_t v126 = (char *)swift_dynamicCastClass();
        if (!v126)
        {
          swift_unknownObjectRelease();
LABEL_52:
          if (qword_10166FBA0 != -1) {
            swift_once();
          }
          swift_beginAccess();
          id v128 = (id)static OS_os_log.realTimeSync;
          uint64_t v182 = static os_log_type_t.default.getter();
          sub_100BAC898((uint64_t)v128, (uint64_t)&_mh_execute_header, v182, (uint64_t)"Failed to apply modifiedItem from peer because it doesn't exist already", 71, 2, (uint64_t)_swiftEmptyArrayStorage);
          goto LABEL_55;
        }
        uint64_t v229 = v126;
        uint64_t v225 = (char *)OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData;
        unint64_t v127 = *(void *)(*(void *)&v126[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData] + 24);
        if (sub_1002094A4() < v127)
        {
          if (qword_10166FBA0 != -1) {
            swift_once();
          }
          swift_beginAccess();
          id v128 = (id)static OS_os_log.realTimeSync;
          uint64_t v129 = static os_log_type_t.default.getter();
          sub_100BAC898((uint64_t)v128, (uint64_t)&_mh_execute_header, v129, (uint64_t)"Ignoring modifiedItem from peer because item is unsupported", 59, 2, (uint64_t)_swiftEmptyArrayStorage);
          swift_unknownObjectRelease();
LABEL_55:

          sub_100EB9D78((uint64_t)v237, type metadata accessor for CRLBoardItemDeltaChange);
          uint64_t v44 = v238;
          a1 = v243;
LABEL_5:
          if (v46 == v242) {
            goto LABEL_88;
          }
          continue;
        }
        uint64_t v228 = v121;
        if (qword_10166FBD0 != -1) {
          swift_once();
        }
        swift_beginAccess();
        uint64_t v130 = (void *)static OS_os_log.boardItemLifecycle;
        sub_1005057FC((uint64_t *)&unk_101672B40);
        uint64_t inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = v224;
        uint64_t v217 = v130;
        uint64_t v132 = UUID.uuidString.getter();
        uint64_t v134 = v133;
        *(void *)(inited + 56) = &type metadata for String;
        v211 = (void (*)(void, void))sub_100528BE4();
        *(void *)(inited + 64) = v211;
        *(void *)(inited + 32) = v132;
        id v218 = (id)(inited + 32);
        *(void *)(inited + 40) = v134;
        swift_unknownObjectRetain();
        id v135 = [v229 description];
        uint64_t v136 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v138 = v137;
        swift_unknownObjectRelease();

        uint64_t v139 = v211;
        *(void *)(inited + 96) = &type metadata for String;
        *(void *)(inited + 104) = v139;
        *(void *)(inited + 72) = v136;
        *(void *)(inited + 80) = v138;
        uint64_t v140 = *(void *)&v243[v234] + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
        swift_beginAccess();
        uint64_t v141 = v140;
        uint64_t v142 = v236;
        sub_100EB9D10(v141, v236, type metadata accessor for CRLBoardCRDTData);
        swift_retain();
        uint64_t v143 = v235;
        CRRegister.wrappedValue.getter();
        sub_100EB9D78(v142, type metadata accessor for CRLBoardCRDTData);
        swift_release();
        uint64_t v144 = UUID.uuidString.getter();
        uint64_t v146 = v145;
        v122(v143, v247);
        *(void *)(inited + 136) = &type metadata for String;
        *(void *)(inited + 144) = v139;
        *(void *)(inited + 112) = v144;
        *(void *)(inited + 120) = v146;
        uint64_t v147 = static os_log_type_t.default.getter();
        uint64_t v148 = v217;
        sub_100BAC898((uint64_t)v217, (uint64_t)&_mh_execute_header, v147, (uint64_t)"🛬 CRLCommandApplyPeerSyncUpdates modifiedItemDelta for item %{public}@%{public}@. Board: %{public}@", 102, 0, inited);
        swift_setDeallocating();
        sub_1005057FC(&qword_101672B50);
        swift_arrayDestroy();

        id v149 = v229;
        sub_10103405C((uint64_t)v229, (uint64_t)&off_101518040);
        if (!v5)
        {
          uint64_t v150 = *(void *)&v225[(void)v149];
          uint64_t v151 = (uint64_t *)&v237[v223[9]];
          unint64_t v152 = v151[1];
          if (v152 >> 60 == 15)
          {
            swift_retain();
            a1 = v243;
            uint64_t v43 = v244;
            uint64_t v47 = v239;
            unint64_t v46 = v245;
            goto LABEL_58;
          }
          uint64_t v183 = *v151;
          unint64_t v184 = *(uint64_t (**)(uint64_t, unint64_t))(*(void *)v150 + 496);
          swift_retain();
          sub_1005FA2A0(v183, v152);
          char v185 = v184(v183, v152);
          uint64_t v47 = v239;
          unint64_t v46 = v245;
          char v186 = v185;
          sub_100514260(v183, v152);
          if ((v186 & 1) == 0) {
            goto LABEL_63;
          }
          a1 = v243;
          uint64_t v43 = v244;
LABEL_58:
          uint64_t v187 = &v237[v223[10]];
          unint64_t v188 = *((void *)v187 + 1);
          if (v188 >> 60 == 15)
          {
            uint64_t v44 = v238;
            goto LABEL_62;
          }
          uint64_t v189 = *(void *)v187;
          unint64_t v190 = *(uint64_t (**)(uint64_t, unint64_t))(*(void *)v150 + 512);
          sub_100510D4C(*(void *)v187, *((void *)v187 + 1));
          LOBYTE(v190) = v190(v189, v188);
          sub_100514260(v189, v188);
          if (v190)
          {
            uint64_t v44 = v238;
            a1 = v243;
            uint64_t v43 = v244;
LABEL_62:
            sub_10068307C(*(void *)&v237[v223[6]], *(void *)&v237[v223[6] + 8], *(void *)&v237[v223[6] + 16], *(void *)&v237[v223[7]]);
            swift_release();
          }
          else
          {
LABEL_63:
            swift_release();
            uint64_t v44 = v238;
            a1 = v243;
            uint64_t v43 = v244;
          }
          sub_101023724((uint64_t)v229, (uint64_t)&off_101518040, v213);
          sub_100EB9D78((uint64_t)v237, type metadata accessor for CRLBoardItemDeltaChange);
          swift_unknownObjectRelease();
          goto LABEL_5;
        }
        swift_unknownObjectRelease();
        sub_100EB9D78((uint64_t)v237, type metadata accessor for CRLBoardItemDeltaChange);
LABEL_88:
        swift_bridgeObjectRelease();
        return;
      case 2u:
        uint64_t v63 = v47;
        uint64_t v64 = *v43;
        (*(void (**)(void))(*(void *)v64 + 256))();
        Class isa = UUID._bridgeToObjectiveC()().super.isa;
        id v66 = [a1 getBoardItemForUUID:isa];

        if (v66) {
          goto LABEL_15;
        }
        uint64_t v229 = v5;
        uint64_t v67 = (uint64_t)v220;
        (*(void (**)(void))(*(void *)v64 + 264))();
        uint64_t v68 = v247;
        if ((*v226)(v67, 1, v247) == 1)
        {
          sub_100510824(v67);
          uint64_t v5 = v229;
LABEL_15:
          uint64_t v47 = v63;
          if (qword_10166FBA0 != -1) {
            swift_once();
          }
          swift_beginAccess();
          id v69 = (id)static OS_os_log.realTimeSync;
          uint64_t v70 = static os_log_type_t.default.getter();
          sub_100BAC898((uint64_t)v69, (uint64_t)&_mh_execute_header, v70, (uint64_t)"Failed to apply createdItem from peer because it exists already, or had a nil parentUUID", 88, 2, (uint64_t)_swiftEmptyArrayStorage);

          swift_release();
          (*v246)(v232, v247);
          uint64_t v43 = v244;
        }
        else
        {
          (*v230)(v219, v67, v68);
          Class v153 = UUID._bridgeToObjectiveC()().super.isa;
          uint64_t v154 = (void (*)(char *, uint64_t, uint64_t))[a1 getContainerItemForUUID:v153];

          if (v154)
          {
            unint64_t v155 = sub_1009F3230(v64, *(void **)&a1[v210]);
            if ((*(uint64_t (**)(void))((swift_isaMask & *v155) + 0x350))())
            {
              uint64_t v228 = v154;
              unint64_t v245 = v46;
              if (qword_10166FBD0 != -1) {
                swift_once();
              }
              swift_beginAccess();
              unint64_t v156 = (void *)static OS_os_log.boardItemLifecycle;
              sub_1005057FC((uint64_t *)&unk_101672B40);
              uint64_t v157 = swift_initStackObject();
              *(_OWORD *)(v157 + 16) = v224;
              uint64_t v158 = *(void (**)(void))((swift_isaMask & *v155) + 0x88);
              uint64_t v225 = v156;
              uint64_t v159 = v235;
              v158();
              uint64_t v160 = UUID.uuidString.getter();
              uint64_t v162 = v161;
              v211 = (void (*)(void, void))*v246;
              v211(v159, v247);
              *(void *)(v157 + 56) = &type metadata for String;
              unint64_t v163 = sub_100528BE4();
              *(void *)(v157 + 64) = v163;
              unint64_t v209 = v163;
              *(void *)(v157 + 32) = v160;
              id v218 = (id)(v157 + 32);
              *(void *)(v157 + 40) = v162;
              char v164 = v155;
              uint64_t v217 = v164;
              id v165 = [v164 description];
              uint64_t v166 = static String._unconditionallyBridgeFromObjectiveC(_:)();
              uint64_t v168 = v167;

              *(void *)(v157 + 96) = &type metadata for String;
              *(void *)(v157 + 104) = v163;
              *(void *)(v157 + 72) = v166;
              *(void *)(v157 + 80) = v168;
              a1 = v243;
              uint64_t v169 = *(void *)&v243[v234] + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
              swift_beginAccess();
              uint64_t v170 = v169;
              uint64_t v171 = v236;
              sub_100EB9D10(v170, v236, type metadata accessor for CRLBoardCRDTData);
              swift_retain();
              sub_1005057FC(&qword_101674550);
              uint64_t v172 = v212;
              CRRegister.wrappedValue.getter();
              sub_100EB9D78(v171, type metadata accessor for CRLBoardCRDTData);
              swift_release();
              uint64_t v173 = UUID.uuidString.getter();
              uint64_t v175 = v174;
              v211(v172, v247);
              unint64_t v176 = v209;
              *(void *)(v157 + 136) = &type metadata for String;
              *(void *)(v157 + 144) = v176;
              *(void *)(v157 + 112) = v173;
              *(void *)(v157 + 120) = v175;
              uint64_t v177 = static os_log_type_t.default.getter();
              id v178 = v225;
              sub_100BAC898((uint64_t)v225, (uint64_t)&_mh_execute_header, v177, (uint64_t)"🛬 🟢 CRLCommandApplyPeerSyncUpdates createdItemData for item %{public}@%{public}@. Board: %{public}@", 105, 0, v157);
              swift_setDeallocating();
              sub_1005057FC(&qword_101672B50);
              swift_arrayDestroy();

              uint64_t v179 = v217;
              int v180 = v228;
              sub_100849AA4(v217);
              [v180 _setParentItemUUIDWithItem:v179 parent:v180];
              uint64_t v181 = v179;
              sub_100EB9DD8((unint64_t)v181, 0, v248);

              swift_release();
              uint64_t v44 = v238;
              uint64_t v63 = v239;
              unint64_t v46 = v245;
            }
            else
            {
              if (qword_10166FBA0 != -1) {
                swift_once();
              }
              swift_beginAccess();
              id v198 = (id)static OS_os_log.realTimeSync;
              uint64_t v199 = static os_log_type_t.default.getter();
              sub_100BAC898((uint64_t)v198, (uint64_t)&_mh_execute_header, v199, (uint64_t)"Ignoring createdItem from peer because item is unsupported", 58, 2, (uint64_t)_swiftEmptyArrayStorage);

              swift_release();
              uint64_t v44 = v238;
            }
          }
          else
          {
            if (qword_10166FBA0 != -1) {
              swift_once();
            }
            swift_beginAccess();
            id v191 = (id)static OS_os_log.realTimeSync;
            uint64_t v192 = static os_log_type_t.default.getter();
            sub_100BAC898((uint64_t)v191, (uint64_t)&_mh_execute_header, v192, (uint64_t)"Failed to apply createdItem from peer because it its parent does not exist", 74, 2, (uint64_t)_swiftEmptyArrayStorage);

            swift_release();
          }
          uint64_t v200 = v247;
          uint64_t v201 = *v246;
          (*v246)(v219, v247);
          v201(v232, v200);
          uint64_t v43 = v244;
          uint64_t v47 = v63;
          uint64_t v5 = v229;
        }
        goto LABEL_5;
      case 3u:
        uint64_t v71 = v5;
        uint64_t v72 = v233;
        uint64_t v73 = v247;
        uint64_t v228 = *v230;
        v228(v233, (uint64_t)v43, v247);
        Class v74 = UUID._bridgeToObjectiveC()().super.isa;
        id v75 = [a1 getBoardItemForUUID:v74];

        if (v75)
        {
          uint64_t v76 = (char *)[v75 parentContainerItem];
          uint64_t v5 = v71;
          if (v76)
          {
            uint64_t v229 = v76;
            unint64_t v245 = v46;
            if (qword_10166FBD0 != -1) {
              swift_once();
            }
            swift_beginAccess();
            uint64_t v77 = (void *)static OS_os_log.boardItemLifecycle;
            sub_1005057FC((uint64_t *)&unk_101672B40);
            uint64_t v78 = swift_initStackObject();
            *(_OWORD *)(v78 + 16) = v224;
            id v218 = v77;
            uint64_t v79 = UUID.uuidString.getter();
            uint64_t v81 = v80;
            *(void *)(v78 + 56) = &type metadata for String;
            unint64_t v82 = sub_100528BE4();
            *(void *)(v78 + 64) = v82;
            *(void *)(v78 + 32) = v79;
            *(void *)(v78 + 40) = v81;
            id v83 = v75;
            id v84 = [v83 description];
            uint64_t v85 = static String._unconditionallyBridgeFromObjectiveC(_:)();
            uint64_t v87 = v86;
            uint64_t v217 = v83;

            *(void *)(v78 + 96) = &type metadata for String;
            *(void *)(v78 + 104) = v82;
            *(void *)(v78 + 72) = v85;
            *(void *)(v78 + 80) = v87;
            uint64_t v88 = *(void *)&v243[v234] + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
            swift_beginAccess();
            uint64_t v89 = v88;
            uint64_t v90 = v236;
            sub_100EB9D10(v89, v236, type metadata accessor for CRLBoardCRDTData);
            swift_retain();
            sub_1005057FC(&qword_101674550);
            uint64_t v91 = v235;
            CRRegister.wrappedValue.getter();
            sub_100EB9D78(v90, type metadata accessor for CRLBoardCRDTData);
            swift_release();
            uint64_t v92 = UUID.uuidString.getter();
            uint64_t v94 = v93;
            uint64_t v95 = v215;
            uint64_t v96 = v91;
            uint64_t v97 = v247;
            uint64_t v225 = *(char **)(v215 + 8);
            ((void (*)(char *, uint64_t))v225)(v96, v247);
            *(void *)(v78 + 136) = &type metadata for String;
            *(void *)(v78 + 144) = v82;
            *(void *)(v78 + 112) = v92;
            *(void *)(v78 + 120) = v94;
            uint64_t v98 = static os_log_type_t.default.getter();
            id v99 = v218;
            sub_100BAC898((uint64_t)v218, (uint64_t)&_mh_execute_header, v98, (uint64_t)"🛬 ⭕ CRLCommandApplyPeerSyncUpdates deletedBoardItem for item %{public}@%{public}@. Board: %{public}@", 105, 0, v78);
            swift_setDeallocating();
            sub_1005057FC(&qword_101672B50);
            uint64_t v100 = v233;
            swift_arrayDestroy();

            sub_1005057FC(&qword_10167AD08);
            unint64_t v101 = (*(unsigned __int8 *)(v95 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v95 + 80);
            uint64_t v102 = swift_allocObject();
            *(_OWORD *)(v102 + 16) = v231;
            unint64_t v103 = v102 + v101;
            uint64_t v104 = *(void (**)(unint64_t, char *, uint64_t))(v95 + 16);
            v104(v102 + v101, v100, v97);
            sub_10103405C((uint64_t)v229, (uint64_t)&off_101518040);
            if (v5)
            {
              swift_setDeallocating();
              swift_arrayDestroy();
              swift_deallocClassInstance();

              ((void (*)(char *, uint64_t))v225)(v100, v97);
              goto LABEL_88;
            }
            unint64_t v251 = (unint64_t)_swiftEmptyArrayStorage;
            uint64_t v105 = OBJC_IVAR____TtC8Freeform16CRLContainerItem_items;
            swift_bridgeObjectRetain();
            uint64_t v106 = v227;
            v104((unint64_t)v227, (char *)v103, v97);
            uint64_t v107 = *v222;
            (*v222)(v106, 0, 1, v97);
            unsigned int v108 = (*v226)((uint64_t)v106, 1, v97);
            uint64_t v109 = (uint64_t)v221;
            uint64_t v110 = v229;
            if (v108 == 1)
            {
LABEL_71:
              swift_bridgeObjectRelease();
              sub_10084C770(v102);
              unint64_t v193 = v251;
              if (v251 >> 62)
              {
                swift_bridgeObjectRetain();
                uint64_t v194 = _CocoaArrayWrapper.endIndex.getter();
                swift_bridgeObjectRelease();
                if (v194) {
                  goto LABEL_73;
                }
              }
              else
              {
                uint64_t v194 = *(void *)((v251 & 0xFFFFFFFFFFFFFF8) + 0x10);
                if (v194)
                {
LABEL_73:
                  if (v194 < 1) {
                    goto LABEL_91;
                  }
                  for (uint64_t i = 0; i != v194; ++i)
                  {
                    if ((v193 & 0xC000000000000001) != 0) {
                      unint64_t v196 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
                    }
                    else {
                      unint64_t v196 = *(id *)(v193 + 8 * i + 32);
                    }
                    unint64_t v197 = v196;
                    sub_101031278(v196, 1uLL, 0, v248);
                  }
                }
              }
              swift_bridgeObjectRelease();
              id v202 = v229;
              sub_101023724((uint64_t)v229, (uint64_t)&off_101518040, 2u);
              swift_setDeallocating();
              uint64_t v203 = v247;
              swift_arrayDestroy();
              swift_deallocClassInstance();
              ((void (*)(char *, uint64_t))v225)(v233, v203);

              uint64_t v44 = v238;
              uint64_t v47 = v239;
              a1 = v243;
              uint64_t v43 = v244;
              unint64_t v46 = v245;
              goto LABEL_5;
            }
            v228(v221, (uint64_t)v227, v247);
            uint64_t v111 = *(void *)&v110[v105];
            if (*(void *)(v111 + 16))
            {
              swift_bridgeObjectRetain();
              unint64_t v112 = sub_100955FC8(v109);
              if (v113)
              {
                id v114 = *(id *)(*(void *)(v111 + 56) + 8 * v112);
                swift_bridgeObjectRelease();
                ((void (*)(uint64_t, uint64_t))v225)(v109, v247);
                id v115 = v114;
                specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
                if (*(void *)((v251 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v251 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
                  specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
                }
                specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
                specialized Array._endMutation()();

                uint64_t v116 = v247;
                goto LABEL_70;
              }
              swift_bridgeObjectRelease();
            }
            uint64_t v116 = v247;
            ((void (*)(uint64_t, uint64_t))v225)(v109, v247);
LABEL_70:
            v107(v227, 1, 1, v116);
            goto LABEL_71;
          }
          (*v246)(v233, v247);

          uint64_t v43 = v244;
          uint64_t v47 = v239;
        }
        else
        {
          (*v246)(v72, v73);
          uint64_t v43 = v244;
          uint64_t v47 = v239;
          uint64_t v5 = v71;
        }
        uint64_t v44 = v238;
        goto LABEL_5;
      case 4u:
        goto LABEL_92;
      case 5u:
        sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"commit(with:transaction:undoable:)", 34, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandApplyPeerSyncUpdates.swift", 102, 2, 231, (uint64_t)"Unexpected boardAuxiliaryChangeLegacy in CRLCommandApplyPeerChanges", 67, 2u, (uint64_t)_swiftEmptyArrayStorage);
        sub_100586FD4((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Unexpected boardAuxiliaryChangeLegacy in CRLCommandApplyPeerChanges");
        uint64_t v205 = 231;
        goto LABEL_94;
      default:
        unint64_t v245 = v46;
        Swift::Int v49 = (char *)v43 + *(int *)(sub_1005057FC(&qword_1016A0650) + 48);
        long long v50 = *((_OWORD *)v49 + 1);
        v249[0] = *(_OWORD *)v49;
        v249[1] = v50;
        uint64_t v250 = *((void *)v49 + 4);
        uint64_t v51 = v247;
        if (qword_10166FBD0 != -1) {
          swift_once();
        }
        swift_beginAccess();
        uint64_t v52 = (void *)static OS_os_log.boardItemLifecycle;
        sub_1005057FC((uint64_t *)&unk_101672B40);
        uint64_t v53 = swift_initStackObject();
        *(_OWORD *)(v53 + 16) = v231;
        uint64_t v54 = *(void *)&v243[v234] + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
        swift_beginAccess();
        uint64_t v55 = v54;
        uint64_t v56 = v236;
        sub_100EB9D10(v55, v236, type metadata accessor for CRLBoardCRDTData);
        id v57 = v52;
        swift_retain();
        sub_1005057FC(&qword_101674550);
        long long v58 = v235;
        CRRegister.wrappedValue.getter();
        sub_100EB9D78(v56, type metadata accessor for CRLBoardCRDTData);
        swift_release();
        uint64_t v59 = UUID.uuidString.getter();
        uint64_t v61 = v60;
        (*v246)(v58, v51);
        *(void *)(v53 + 56) = &type metadata for String;
        *(void *)(v53 + 64) = sub_100528BE4();
        *(void *)(v53 + 32) = v59;
        *(void *)(v53 + 40) = v61;
        a1 = v243;
        uint64_t v62 = static os_log_type_t.default.getter();
        sub_100BAC898((uint64_t)v57, (uint64_t)&_mh_execute_header, v62, (uint64_t)"🛬 CRLCommandApplyPeerSyncUpdates boardDelta. Board: %{public}@", 65, 0, v53);
        swift_setDeallocating();
        sub_1005057FC(&qword_101672B50);
        swift_arrayDestroy();

        sub_10103405C((uint64_t)a1, (uint64_t)&off_10152A280);
        if (v5)
        {
          swift_bridgeObjectRelease();
          uint64_t v204 = (uint64_t)v244;
          sub_100EBB140((uint64_t)v249);
          sub_100EB9D78(v204, type metadata accessor for CRLGloballyScopedBoardIdentifier);
          return;
        }
        swift_retain();
        sub_101048BEC((uint64_t)v249);
        uint64_t v44 = v238;
        swift_release();
        sub_101023724((uint64_t)a1, (uint64_t)&off_10152A280, 2u);
        uint64_t v43 = v244;
        sub_100EBB140((uint64_t)v249);
        sub_100EB9D78((uint64_t)v43, type metadata accessor for CRLGloballyScopedBoardIdentifier);
        unint64_t v46 = v245;
        uint64_t v47 = v239;
        goto LABEL_5;
    }
  }
}

uint64_t sub_100EB7154()
{
  return swift_bridgeObjectRelease();
}

id sub_100EB7164()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLCommandApplyPeerSyncUpdates();
  return [super dealloc];
}

uint64_t type metadata accessor for CRLCommandApplyPeerSyncUpdates()
{
  return self;
}

char *sub_100EB71CC(char *a1, char *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = (char *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v17 = type metadata accessor for UUID();
        uint64_t v18 = *(void *)(v17 - 8);
        uint64_t v19 = *(void (**)(char *, char *, uint64_t))(v18 + 16);
        v19(a1, a2, v17);
        uint64_t v20 = (int *)type metadata accessor for CRLBoardItemDeltaChange(0);
        uint64_t v21 = v20[5];
        uint64_t v22 = &a1[v21];
        uint64_t v23 = &a2[v21];
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(&a2[v21], 1, v17))
        {
          uint64_t v24 = sub_1005057FC((uint64_t *)&unk_101674520);
          memcpy(v22, v23, *(void *)(*(void *)(v24 - 8) + 64));
        }
        else
        {
          v19(v22, v23, v17);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(v22, 0, 1, v17);
        }
        uint64_t v28 = v20[6];
        uint64_t v29 = &a1[v28];
        uint64_t v30 = &a2[v28];
        *(_OWORD *)uint64_t v29 = *(_OWORD *)v30;
        *((void *)v29 + 2) = *((void *)v30 + 2);
        *(void *)&a1[v20[7]] = *(void *)&a2[v20[7]];
        *(void *)&a1[v20[8]] = *(void *)&a2[v20[8]];
        uint64_t v31 = v20[9];
        uint64_t v32 = &a1[v31];
        uint64_t v33 = &a2[v31];
        unint64_t v34 = *((void *)v33 + 1);
        if (v34 >> 60 == 15)
        {
          *(_OWORD *)uint64_t v32 = *(_OWORD *)v33;
        }
        else
        {
          uint64_t v35 = *(void *)v33;
          sub_100510D4C(*(void *)v33, *((void *)v33 + 1));
          *(void *)uint64_t v32 = v35;
          *((void *)v32 + 1) = v34;
        }
        uint64_t v36 = v20[10];
        uint64_t v37 = &a1[v36];
        uint64_t v38 = &a2[v36];
        unint64_t v39 = *((void *)v38 + 1);
        if (v39 >> 60 == 15)
        {
          *(_OWORD *)uint64_t v37 = *(_OWORD *)v38;
        }
        else
        {
          uint64_t v40 = *(void *)v38;
          sub_100510D4C(*(void *)v38, *((void *)v38 + 1));
          *(void *)uint64_t v37 = v40;
          *((void *)v37 + 1) = v39;
        }
        break;
      case 2u:
        *(void *)a1 = *(void *)a2;
        swift_retain();
        break;
      case 3u:
        uint64_t v25 = type metadata accessor for UUID();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 16))(a1, a2, v25);
        break;
      case 4u:
      case 5u:
        *a1 = *a2;
        uint64_t v27 = *((void *)a2 + 1);
        unint64_t v26 = *((void *)a2 + 2);
        sub_100510D4C(v27, v26);
        *((void *)a1 + 1) = v27;
        *((void *)a1 + 2) = v26;
        break;
      default:
        uint64_t v6 = type metadata accessor for UUID();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
        uint64_t v7 = *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20);
        uint64_t v8 = &a1[v7];
        uint64_t v9 = &a2[v7];
        uint64_t v10 = *((void *)v9 + 1);
        *(void *)uint64_t v8 = *(void *)v9;
        *((void *)v8 + 1) = v10;
        swift_bridgeObjectRetain();
        uint64_t v11 = *(int *)(sub_1005057FC(&qword_1016A0650) + 48);
        uint64_t v12 = &a1[v11];
        uint64_t v13 = &a2[v11];
        *(_OWORD *)uint64_t v12 = *(_OWORD *)v13;
        uint64_t v14 = *((void *)v13 + 3);
        *((void *)v12 + 2) = *((void *)v13 + 2);
        unint64_t v15 = *((void *)v13 + 4);
        sub_100510D4C(v14, v15);
        *((void *)v12 + 3) = v14;
        *((void *)v12 + 4) = v15;
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t type metadata accessor for CRLBoardItemDeltaChange(uint64_t a1)
{
  return sub_100512D5C(a1, qword_1016A1270);
}

uint64_t sub_100EB7604(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
      uint64_t v5 = type metadata accessor for UUID();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a1, v5);
      type metadata accessor for CRLBoardIdentifierStorage(0);
      swift_bridgeObjectRelease();
      uint64_t v6 = a1 + *(int *)(sub_1005057FC(&qword_1016A0650) + 48);
      uint64_t v3 = *(void *)(v6 + 24);
      unint64_t v4 = *(void *)(v6 + 32);
      goto LABEL_17;
    case 1:
      uint64_t v7 = type metadata accessor for UUID();
      uint64_t v8 = *(void *)(v7 - 8);
      uint64_t v9 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
      v9(a1, v7);
      uint64_t v10 = (int *)type metadata accessor for CRLBoardItemDeltaChange(0);
      uint64_t v11 = a1 + v10[5];
      uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v11, 1, v7);
      if (!result) {
        uint64_t result = ((uint64_t (*)(uint64_t, uint64_t))v9)(v11, v7);
      }
      uint64_t v12 = (uint64_t *)(a1 + v10[9]);
      unint64_t v13 = v12[1];
      if (v13 >> 60 != 15) {
        uint64_t result = sub_100510084(*v12, v13);
      }
      uint64_t v14 = (uint64_t *)(a1 + v10[10]);
      unint64_t v4 = v14[1];
      if (v4 >> 60 == 15) {
        return result;
      }
      uint64_t v3 = *v14;
LABEL_17:
      return sub_100510084(v3, v4);
    case 2:
      return swift_release();
    case 3:
      uint64_t v15 = type metadata accessor for UUID();
      uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8);
      return v16(a1, v15);
    case 4:
    case 5:
      uint64_t v3 = *(void *)(a1 + 8);
      unint64_t v4 = *(void *)(a1 + 16);
      goto LABEL_17;
    default:
      return result;
  }
}

char *sub_100EB7894(char *a1, char *a2)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v14 = type metadata accessor for UUID();
      uint64_t v15 = *(void *)(v14 - 8);
      uint64_t v16 = *(void (**)(char *, char *, uint64_t))(v15 + 16);
      v16(a1, a2, v14);
      uint64_t v17 = (int *)type metadata accessor for CRLBoardItemDeltaChange(0);
      uint64_t v18 = v17[5];
      uint64_t v19 = &a1[v18];
      uint64_t v20 = &a2[v18];
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(&a2[v18], 1, v14))
      {
        uint64_t v21 = sub_1005057FC((uint64_t *)&unk_101674520);
        memcpy(v19, v20, *(void *)(*(void *)(v21 - 8) + 64));
      }
      else
      {
        v16(v19, v20, v14);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v19, 0, 1, v14);
      }
      uint64_t v25 = v17[6];
      unint64_t v26 = &a1[v25];
      uint64_t v27 = &a2[v25];
      *(_OWORD *)unint64_t v26 = *(_OWORD *)v27;
      *((void *)v26 + 2) = *((void *)v27 + 2);
      *(void *)&a1[v17[7]] = *(void *)&a2[v17[7]];
      *(void *)&a1[v17[8]] = *(void *)&a2[v17[8]];
      uint64_t v28 = v17[9];
      uint64_t v29 = &a1[v28];
      uint64_t v30 = &a2[v28];
      unint64_t v31 = *((void *)v30 + 1);
      if (v31 >> 60 == 15)
      {
        *(_OWORD *)uint64_t v29 = *(_OWORD *)v30;
      }
      else
      {
        uint64_t v32 = *(void *)v30;
        sub_100510D4C(*(void *)v30, *((void *)v30 + 1));
        *(void *)uint64_t v29 = v32;
        *((void *)v29 + 1) = v31;
      }
      uint64_t v33 = v17[10];
      unint64_t v34 = &a1[v33];
      uint64_t v35 = &a2[v33];
      unint64_t v36 = *((void *)v35 + 1);
      if (v36 >> 60 == 15)
      {
        *(_OWORD *)unint64_t v34 = *(_OWORD *)v35;
      }
      else
      {
        uint64_t v37 = *(void *)v35;
        sub_100510D4C(*(void *)v35, *((void *)v35 + 1));
        *(void *)unint64_t v34 = v37;
        *((void *)v34 + 1) = v36;
      }
      break;
    case 2u:
      *(void *)a1 = *(void *)a2;
      swift_retain();
      break;
    case 3u:
      uint64_t v22 = type metadata accessor for UUID();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 16))(a1, a2, v22);
      break;
    case 4u:
    case 5u:
      *a1 = *a2;
      uint64_t v24 = *((void *)a2 + 1);
      unint64_t v23 = *((void *)a2 + 2);
      sub_100510D4C(v24, v23);
      *((void *)a1 + 1) = v24;
      *((void *)a1 + 2) = v23;
      break;
    default:
      uint64_t v4 = type metadata accessor for UUID();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
      uint64_t v5 = *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20);
      uint64_t v6 = &a1[v5];
      uint64_t v7 = &a2[v5];
      uint64_t v8 = *((void *)v7 + 1);
      *(void *)uint64_t v6 = *(void *)v7;
      *((void *)v6 + 1) = v8;
      swift_bridgeObjectRetain();
      uint64_t v9 = *(int *)(sub_1005057FC(&qword_1016A0650) + 48);
      uint64_t v10 = &a1[v9];
      uint64_t v11 = &a2[v9];
      *(_OWORD *)uint64_t v10 = *(_OWORD *)v11;
      uint64_t v12 = *((void *)v11 + 3);
      *((void *)v10 + 2) = *((void *)v11 + 2);
      unint64_t v13 = *((void *)v11 + 4);
      sub_100510D4C(v12, v13);
      *((void *)v10 + 3) = v12;
      *((void *)v10 + 4) = v13;
      break;
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

char *sub_100EB7C5C(char *a1, char *a2)
{
  if (a1 != a2)
  {
    sub_100EB9D78((uint64_t)a1, type metadata accessor for CRLBoardItemPeerSyncUpdate);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v14 = type metadata accessor for UUID();
        uint64_t v15 = *(void *)(v14 - 8);
        uint64_t v16 = *(void (**)(char *, char *, uint64_t))(v15 + 16);
        v16(a1, a2, v14);
        uint64_t v17 = (int *)type metadata accessor for CRLBoardItemDeltaChange(0);
        uint64_t v18 = v17[5];
        uint64_t v19 = &a1[v18];
        uint64_t v20 = &a2[v18];
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(&a2[v18], 1, v14))
        {
          uint64_t v21 = sub_1005057FC((uint64_t *)&unk_101674520);
          memcpy(v19, v20, *(void *)(*(void *)(v21 - 8) + 64));
        }
        else
        {
          v16(v19, v20, v14);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v19, 0, 1, v14);
        }
        uint64_t v25 = v17[6];
        unint64_t v26 = &a1[v25];
        uint64_t v27 = &a2[v25];
        long long v28 = *(_OWORD *)v27;
        *((void *)v26 + 2) = *((void *)v27 + 2);
        *(_OWORD *)unint64_t v26 = v28;
        *(void *)&a1[v17[7]] = *(void *)&a2[v17[7]];
        *(void *)&a1[v17[8]] = *(void *)&a2[v17[8]];
        uint64_t v29 = v17[9];
        uint64_t v30 = &a1[v29];
        unint64_t v31 = &a2[v29];
        unint64_t v32 = *((void *)v31 + 1);
        if (v32 >> 60 == 15)
        {
          *(_OWORD *)uint64_t v30 = *(_OWORD *)v31;
        }
        else
        {
          uint64_t v33 = *(void *)v31;
          sub_100510D4C(*(void *)v31, *((void *)v31 + 1));
          *(void *)uint64_t v30 = v33;
          *((void *)v30 + 1) = v32;
        }
        uint64_t v34 = v17[10];
        uint64_t v35 = &a1[v34];
        unint64_t v36 = &a2[v34];
        unint64_t v37 = *((void *)v36 + 1);
        if (v37 >> 60 == 15)
        {
          *(_OWORD *)uint64_t v35 = *(_OWORD *)v36;
        }
        else
        {
          uint64_t v38 = *(void *)v36;
          sub_100510D4C(*(void *)v36, *((void *)v36 + 1));
          *(void *)uint64_t v35 = v38;
          *((void *)v35 + 1) = v37;
        }
        break;
      case 2u:
        *(void *)a1 = *(void *)a2;
        swift_retain();
        break;
      case 3u:
        uint64_t v22 = type metadata accessor for UUID();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 16))(a1, a2, v22);
        break;
      case 4u:
      case 5u:
        *a1 = *a2;
        uint64_t v24 = *((void *)a2 + 1);
        unint64_t v23 = *((void *)a2 + 2);
        sub_100510D4C(v24, v23);
        *((void *)a1 + 1) = v24;
        *((void *)a1 + 2) = v23;
        break;
      default:
        uint64_t v4 = type metadata accessor for UUID();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
        uint64_t v5 = *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20);
        uint64_t v6 = &a1[v5];
        uint64_t v7 = &a2[v5];
        *(void *)uint64_t v6 = *(void *)v7;
        *((void *)v6 + 1) = *((void *)v7 + 1);
        swift_bridgeObjectRetain();
        uint64_t v8 = *(int *)(sub_1005057FC(&qword_1016A0650) + 48);
        uint64_t v9 = &a1[v8];
        uint64_t v10 = &a2[v8];
        uint64_t v11 = *((void *)v10 + 2);
        *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
        *((void *)v9 + 2) = v11;
        uint64_t v12 = *((void *)v10 + 3);
        unint64_t v13 = *((void *)v10 + 4);
        sub_100510D4C(v12, v13);
        *((void *)v9 + 3) = v12;
        *((void *)v9 + 4) = v13;
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t type metadata accessor for CRLBoardItemPeerSyncUpdate(uint64_t a1)
{
  return sub_100512D5C(a1, qword_1016A11E0);
}

char *sub_100EB8070(char *a1, char *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 3:
      uint64_t v13 = type metadata accessor for UUID();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32))(a1, a2, v13);
      goto LABEL_11;
    case 1:
      uint64_t v14 = type metadata accessor for UUID();
      uint64_t v15 = *(void *)(v14 - 8);
      uint64_t v16 = *(void (**)(char *, char *, uint64_t))(v15 + 32);
      v16(a1, a2, v14);
      uint64_t v17 = (int *)type metadata accessor for CRLBoardItemDeltaChange(0);
      uint64_t v18 = v17[5];
      uint64_t v19 = &a1[v18];
      uint64_t v20 = &a2[v18];
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(&a2[v18], 1, v14))
      {
        uint64_t v21 = sub_1005057FC((uint64_t *)&unk_101674520);
        memcpy(v19, v20, *(void *)(*(void *)(v21 - 8) + 64));
      }
      else
      {
        v16(v19, v20, v14);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v19, 0, 1, v14);
      }
      uint64_t v22 = v17[6];
      unint64_t v23 = &a1[v22];
      uint64_t v24 = &a2[v22];
      *(_OWORD *)unint64_t v23 = *(_OWORD *)v24;
      *((void *)v23 + 2) = *((void *)v24 + 2);
      *(void *)&a1[v17[7]] = *(void *)&a2[v17[7]];
      *(void *)&a1[v17[8]] = *(void *)&a2[v17[8]];
      *(_OWORD *)&a1[v17[9]] = *(_OWORD *)&a2[v17[9]];
      *(_OWORD *)&a1[v17[10]] = *(_OWORD *)&a2[v17[10]];
      goto LABEL_11;
    case 0:
      uint64_t v7 = type metadata accessor for UUID();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      uint64_t v8 = type metadata accessor for CRLBoardIdentifierStorage(0);
      *(_OWORD *)&a1[*(int *)(v8 + 20)] = *(_OWORD *)&a2[*(int *)(v8 + 20)];
      uint64_t v9 = *(int *)(sub_1005057FC(&qword_1016A0650) + 48);
      uint64_t v10 = &a1[v9];
      uint64_t v11 = &a2[v9];
      long long v12 = *((_OWORD *)v11 + 1);
      *(_OWORD *)uint64_t v10 = *(_OWORD *)v11;
      *((_OWORD *)v10 + 1) = v12;
      *((void *)v10 + 4) = *((void *)v11 + 4);
LABEL_11:
      swift_storeEnumTagMultiPayload();
      return a1;
  }
  memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  return a1;
}

char *sub_100EB8340(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_100EB9D78((uint64_t)a1, type metadata accessor for CRLBoardItemPeerSyncUpdate);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    switch(EnumCaseMultiPayload)
    {
      case 3:
        uint64_t v13 = type metadata accessor for UUID();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32))(a1, a2, v13);
        goto LABEL_12;
      case 1:
        uint64_t v14 = type metadata accessor for UUID();
        uint64_t v15 = *(void *)(v14 - 8);
        uint64_t v16 = *(void (**)(char *, char *, uint64_t))(v15 + 32);
        v16(a1, a2, v14);
        uint64_t v17 = (int *)type metadata accessor for CRLBoardItemDeltaChange(0);
        uint64_t v18 = v17[5];
        uint64_t v19 = &a1[v18];
        uint64_t v20 = &a2[v18];
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(&a2[v18], 1, v14))
        {
          uint64_t v21 = sub_1005057FC((uint64_t *)&unk_101674520);
          memcpy(v19, v20, *(void *)(*(void *)(v21 - 8) + 64));
        }
        else
        {
          v16(v19, v20, v14);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v19, 0, 1, v14);
        }
        uint64_t v22 = v17[6];
        unint64_t v23 = &a1[v22];
        uint64_t v24 = &a2[v22];
        *(_OWORD *)unint64_t v23 = *(_OWORD *)v24;
        *((void *)v23 + 2) = *((void *)v24 + 2);
        *(void *)&a1[v17[7]] = *(void *)&a2[v17[7]];
        *(void *)&a1[v17[8]] = *(void *)&a2[v17[8]];
        *(_OWORD *)&a1[v17[9]] = *(_OWORD *)&a2[v17[9]];
        *(_OWORD *)&a1[v17[10]] = *(_OWORD *)&a2[v17[10]];
        goto LABEL_12;
      case 0:
        uint64_t v7 = type metadata accessor for UUID();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
        uint64_t v8 = type metadata accessor for CRLBoardIdentifierStorage(0);
        *(_OWORD *)&a1[*(int *)(v8 + 20)] = *(_OWORD *)&a2[*(int *)(v8 + 20)];
        uint64_t v9 = *(int *)(sub_1005057FC(&qword_1016A0650) + 48);
        uint64_t v10 = &a1[v9];
        uint64_t v11 = &a2[v9];
        long long v12 = *((_OWORD *)v11 + 1);
        *(_OWORD *)uint64_t v10 = *(_OWORD *)v11;
        *((_OWORD *)v10 + 1) = v12;
        *((void *)v10 + 4) = *((void *)v11 + 4);
LABEL_12:
        swift_storeEnumTagMultiPayload();
        return a1;
    }
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

uint64_t sub_100EB8634()
{
  uint64_t result = type metadata accessor for CRLBoardIdentifierStorage(319);
  if (v1 <= 0x3F)
  {
    swift_getTupleTypeLayout2();
    v4[4] = v4;
    uint64_t result = type metadata accessor for CRLBoardItemDeltaChange(319);
    if (v2 <= 0x3F)
    {
      v4[5] = *(void *)(result - 8) + 64;
      v4[6] = (char *)&value witness table for Builtin.NativeObject + 64;
      uint64_t result = type metadata accessor for UUID();
      if (v3 <= 0x3F)
      {
        v4[7] = *(void *)(result - 8) + 64;
        v4[8] = &unk_1011BB518;
        v4[9] = &unk_1011BB530;
        swift_initEnumMetadataMultiPayload();
        return 0;
      }
    }
  }
  return result;
}

char *sub_100EB8768(char *a1, char *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = (char *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for UUID();
    uint64_t v8 = *(void *)(v7 - 8);
    uint64_t v9 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
    v9(a1, a2, v7);
    uint64_t v10 = a3[5];
    uint64_t v11 = &a1[v10];
    long long v12 = &a2[v10];
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(&a2[v10], 1, v7))
    {
      uint64_t v13 = sub_1005057FC((uint64_t *)&unk_101674520);
      memcpy(v11, v12, *(void *)(*(void *)(v13 - 8) + 64));
    }
    else
    {
      v9(v11, v12, v7);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v11, 0, 1, v7);
    }
    uint64_t v15 = a3[6];
    uint64_t v16 = a3[7];
    uint64_t v17 = &a1[v15];
    uint64_t v18 = &a2[v15];
    *(_OWORD *)uint64_t v17 = *(_OWORD *)v18;
    *((void *)v17 + 2) = *((void *)v18 + 2);
    *(void *)&a1[v16] = *(void *)&a2[v16];
    uint64_t v19 = a3[9];
    *(void *)&a1[a3[8]] = *(void *)&a2[a3[8]];
    uint64_t v20 = &a1[v19];
    uint64_t v21 = (uint64_t *)&a2[v19];
    unint64_t v22 = *(void *)&a2[v19 + 8];
    if (v22 >> 60 == 15)
    {
      *(_OWORD *)uint64_t v20 = *(_OWORD *)v21;
    }
    else
    {
      uint64_t v23 = *v21;
      sub_100510D4C(*v21, v22);
      *(void *)uint64_t v20 = v23;
      *((void *)v20 + 1) = v22;
    }
    uint64_t v24 = a3[10];
    uint64_t v25 = &a1[v24];
    unint64_t v26 = &a2[v24];
    unint64_t v27 = *((void *)v26 + 1);
    if (v27 >> 60 == 15)
    {
      *(_OWORD *)uint64_t v25 = *(_OWORD *)v26;
    }
    else
    {
      uint64_t v28 = *(void *)v26;
      sub_100510D4C(*(void *)v26, *((void *)v26 + 1));
      *(void *)uint64_t v25 = v28;
      *((void *)v25 + 1) = v27;
    }
  }
  return a1;
}

uint64_t sub_100EB89AC(uint64_t a1, int *a2)
{
  uint64_t v4 = type metadata accessor for UUID();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  v6(a1, v4);
  uint64_t v7 = a1 + a2[5];
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v7, 1, v4);
  if (!result) {
    uint64_t result = ((uint64_t (*)(uint64_t, uint64_t))v6)(v7, v4);
  }
  uint64_t v9 = (uint64_t *)(a1 + a2[9]);
  unint64_t v10 = v9[1];
  if (v10 >> 60 != 15) {
    uint64_t result = sub_100510084(*v9, v10);
  }
  uint64_t v11 = (uint64_t *)(a1 + a2[10]);
  unint64_t v12 = v11[1];
  if (v12 >> 60 != 15)
  {
    uint64_t v13 = *v11;
    return sub_100510084(v13, v12);
  }
  return result;
}

uint64_t sub_100EB8AF0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16);
  v8(a1, a2, v6);
  uint64_t v9 = a3[5];
  unint64_t v10 = (void *)(a1 + v9);
  uint64_t v11 = (const void *)(a2 + v9);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a2 + v9, 1, v6))
  {
    uint64_t v12 = sub_1005057FC((uint64_t *)&unk_101674520);
    memcpy(v10, v11, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    v8((uint64_t)v10, (uint64_t)v11, v6);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(v10, 0, 1, v6);
  }
  uint64_t v13 = a3[6];
  uint64_t v14 = a3[7];
  uint64_t v15 = a1 + v13;
  uint64_t v16 = a2 + v13;
  *(_OWORD *)uint64_t v15 = *(_OWORD *)v16;
  *(void *)(v15 + 16) = *(void *)(v16 + 16);
  *(void *)(a1 + v14) = *(void *)(a2 + v14);
  uint64_t v17 = a3[9];
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  uint64_t v18 = a1 + v17;
  uint64_t v19 = (uint64_t *)(a2 + v17);
  unint64_t v20 = *(void *)(a2 + v17 + 8);
  if (v20 >> 60 == 15)
  {
    *(_OWORD *)uint64_t v18 = *(_OWORD *)v19;
  }
  else
  {
    uint64_t v21 = *v19;
    sub_100510D4C(*v19, v20);
    *(void *)uint64_t v18 = v21;
    *(void *)(v18 + 8) = v20;
  }
  uint64_t v22 = a3[10];
  uint64_t v23 = a1 + v22;
  uint64_t v24 = (uint64_t *)(a2 + v22);
  unint64_t v25 = v24[1];
  if (v25 >> 60 == 15)
  {
    *(_OWORD *)uint64_t v23 = *(_OWORD *)v24;
  }
  else
  {
    uint64_t v26 = *v24;
    sub_100510D4C(*v24, v24[1]);
    *(void *)uint64_t v23 = v26;
    *(void *)(v23 + 8) = v25;
  }
  return a1;
}

uint64_t sub_100EB8CE4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 24);
  v8(a1, a2, v6);
  unint64_t v36 = a3;
  uint64_t v37 = a1;
  uint64_t v9 = a3[5];
  unint64_t v10 = (void *)(a1 + v9);
  uint64_t v11 = (void *)(a2 + v9);
  uint64_t v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  int v13 = v12(v10, 1, v6);
  int v14 = v12(v11, 1, v6);
  if (v13)
  {
    if (!v14)
    {
      (*(void (**)(void *, void *, uint64_t))(v7 + 16))(v10, v11, v6);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(v10, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v14)
  {
    (*(void (**)(void *, uint64_t))(v7 + 8))(v10, v6);
LABEL_6:
    uint64_t v15 = sub_1005057FC((uint64_t *)&unk_101674520);
    memcpy(v10, v11, *(void *)(*(void *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  v8((uint64_t)v10, (uint64_t)v11, v6);
LABEL_7:
  uint64_t v16 = v36[6];
  uint64_t v17 = (void *)(v37 + v16);
  uint64_t v18 = (void *)(a2 + v16);
  *uint64_t v17 = *v18;
  v17[1] = v18[1];
  _OWORD v17[2] = v18[2];
  *(void *)(v37 + v36[7]) = *(void *)(a2 + v36[7]);
  *(void *)(v37 + v36[8]) = *(void *)(a2 + v36[8]);
  uint64_t v19 = v36[9];
  unint64_t v20 = (uint64_t *)(v37 + v19);
  uint64_t v21 = (uint64_t *)(a2 + v19);
  unint64_t v22 = *(void *)(a2 + v19 + 8);
  if (*(void *)(v37 + v19 + 8) >> 60 == 15)
  {
    if (v22 >> 60 != 15)
    {
      uint64_t v23 = *v21;
      sub_100510D4C(v23, v22);
      *unint64_t v20 = v23;
      v20[1] = v22;
      goto LABEL_14;
    }
    goto LABEL_12;
  }
  if (v22 >> 60 == 15)
  {
    sub_10060C134((uint64_t)v20);
LABEL_12:
    *(_OWORD *)unint64_t v20 = *(_OWORD *)v21;
    goto LABEL_14;
  }
  uint64_t v24 = *v21;
  sub_100510D4C(v24, v22);
  uint64_t v25 = *v20;
  unint64_t v26 = v20[1];
  *unint64_t v20 = v24;
  v20[1] = v22;
  sub_100510084(v25, v26);
LABEL_14:
  uint64_t v27 = v36[10];
  uint64_t v28 = (uint64_t *)(v37 + v27);
  uint64_t v29 = (uint64_t *)(a2 + v27);
  unint64_t v30 = *(void *)(a2 + v27 + 8);
  if (*(void *)(v37 + v27 + 8) >> 60 != 15)
  {
    if (v30 >> 60 != 15)
    {
      uint64_t v32 = *v29;
      sub_100510D4C(v32, v30);
      uint64_t v33 = *v28;
      unint64_t v34 = v28[1];
      *uint64_t v28 = v32;
      v28[1] = v30;
      sub_100510084(v33, v34);
      return v37;
    }
    sub_10060C134((uint64_t)v28);
    goto LABEL_19;
  }
  if (v30 >> 60 == 15)
  {
LABEL_19:
    *(_OWORD *)uint64_t v28 = *(_OWORD *)v29;
    return v37;
  }
  uint64_t v31 = *v29;
  sub_100510D4C(v31, v30);
  *uint64_t v28 = v31;
  v28[1] = v30;
  return v37;
}

char *sub_100EB8FE0(char *a1, char *a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 32);
  v8(a1, a2, v6);
  uint64_t v9 = a3[5];
  unint64_t v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(&a2[v9], 1, v6))
  {
    uint64_t v12 = sub_1005057FC((uint64_t *)&unk_101674520);
    memcpy(v10, v11, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    v8(v10, v11, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v10, 0, 1, v6);
  }
  uint64_t v13 = a3[6];
  uint64_t v14 = a3[7];
  uint64_t v15 = &a1[v13];
  uint64_t v16 = &a2[v13];
  *(_OWORD *)uint64_t v15 = *(_OWORD *)v16;
  *((void *)v15 + 2) = *((void *)v16 + 2);
  *(void *)&a1[v14] = *(void *)&a2[v14];
  uint64_t v17 = a3[9];
  *(void *)&a1[a3[8]] = *(void *)&a2[a3[8]];
  *(_OWORD *)&a1[v17] = *(_OWORD *)&a2[v17];
  *(_OWORD *)&a1[a3[10]] = *(_OWORD *)&a2[a3[10]];
  return a1;
}

uint64_t sub_100EB9174(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 40);
  v8(a1, a2, v6);
  uint64_t v9 = a3[5];
  unint64_t v10 = (const void *)(a2 + v9);
  uint64_t v11 = *(uint64_t (**)(void))(v7 + 48);
  uint64_t v32 = a3;
  uint64_t v33 = (void *)(a1 + v9);
  LODWORD(a3) = v11();
  int v12 = ((uint64_t (*)(const void *, uint64_t, uint64_t))v11)(v10, 1, v6);
  if (a3)
  {
    if (v12)
    {
      size_t v13 = *(void *)(*(void *)(sub_1005057FC((uint64_t *)&unk_101674520) - 8) + 64);
      uint64_t v14 = v33;
LABEL_6:
      memcpy(v14, v10, v13);
      goto LABEL_9;
    }
    (*(void (**)(void *, const void *, uint64_t))(v7 + 32))(v33, v10, v6);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(v33, 0, 1, v6);
  }
  else
  {
    if (v12)
    {
      (*(void (**)(void *, uint64_t))(v7 + 8))(v33, v6);
      size_t v13 = *(void *)(*(void *)(sub_1005057FC((uint64_t *)&unk_101674520) - 8) + 64);
      uint64_t v14 = v33;
      goto LABEL_6;
    }
    v8((uint64_t)v33, (uint64_t)v10, v6);
  }
LABEL_9:
  uint64_t v15 = v32[6];
  uint64_t v16 = v32[7];
  uint64_t v17 = a1 + v15;
  uint64_t v18 = a2 + v15;
  *(_OWORD *)uint64_t v17 = *(_OWORD *)v18;
  *(void *)(v17 + 16) = *(void *)(v18 + 16);
  *(void *)(a1 + v16) = *(void *)(a2 + v16);
  uint64_t v19 = v32[9];
  *(void *)(a1 + v32[8]) = *(void *)(a2 + v32[8]);
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  unint64_t v22 = *(void *)(a1 + v19 + 8);
  if (v22 >> 60 == 15)
  {
LABEL_12:
    *(_OWORD *)uint64_t v20 = *(_OWORD *)v21;
    goto LABEL_14;
  }
  unint64_t v23 = *(void *)(v21 + 8);
  if (v23 >> 60 == 15)
  {
    sub_10060C134(v20);
    goto LABEL_12;
  }
  uint64_t v24 = *(void *)v20;
  *(void *)uint64_t v20 = *(void *)v21;
  *(void *)(v20 + 8) = v23;
  sub_100510084(v24, v22);
LABEL_14:
  uint64_t v25 = v32[10];
  unint64_t v26 = (uint64_t *)(a1 + v25);
  uint64_t v27 = (uint64_t *)(a2 + v25);
  unint64_t v28 = *(void *)(a1 + v25 + 8);
  if (v28 >> 60 != 15)
  {
    unint64_t v29 = v27[1];
    if (v29 >> 60 != 15)
    {
      uint64_t v30 = *v26;
      *unint64_t v26 = *v27;
      v26[1] = v29;
      sub_100510084(v30, v28);
      return a1;
    }
    sub_10060C134((uint64_t)v26);
  }
  *(_OWORD *)unint64_t v26 = *(_OWORD *)v27;
  return a1;
}

uint64_t sub_100EB9428(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100EB943C);
}

uint64_t sub_100EB943C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
  }
  else
  {
    uint64_t v11 = sub_1005057FC((uint64_t *)&unk_101674520);
    uint64_t v12 = *(void *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) != a2)
    {
      uint64_t v14 = *(void *)(a1 + *(int *)(a3 + 36) + 8) >> 60;
      BOOL v15 = ((4 * v14) & 0xC) == 0;
      unsigned int v16 = ((4 * v14) & 0xC | (v14 >> 2)) ^ 0xF;
      if (v15) {
        return 0;
      }
      else {
        return v16;
      }
    }
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }

  return v9(v10, a2, v8);
}

uint64_t sub_100EB9560(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100EB9574);
}

uint64_t sub_100EB9574(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for UUID();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t result = sub_1005057FC((uint64_t *)&unk_101674520);
    uint64_t v14 = *(void *)(result - 8);
    if (*(_DWORD *)(v14 + 84) != a3)
    {
      BOOL v15 = (void *)(a1 + *(int *)(a4 + 36));
      *BOOL v15 = 0;
      v15[1] = (unint64_t)((~a2 >> 2) & 3 | (4 * ~a2)) << 60;
      return result;
    }
    uint64_t v10 = result;
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }

  return v11(v12, a2, a2, v10);
}

void sub_100EB9698()
{
  type metadata accessor for UUID();
  if (v0 <= 0x3F)
  {
    sub_100510764();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t destroy for CRLBoardDeltaChange(uint64_t a1)
{
  return sub_100510084(*(void *)(a1 + 24), *(void *)(a1 + 32));
}

uint64_t initializeWithCopy for CRLBoardDeltaChange(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v3 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  unint64_t v4 = *(void *)(a2 + 32);
  sub_100510D4C(v3, v4);
  *(void *)(a1 + 24) = v3;
  *(void *)(a1 + 32) = v4;
  return a1;
}

void *assignWithCopy for CRLBoardDeltaChange(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  uint64_t v3 = a2[3];
  unint64_t v4 = a2[4];
  sub_100510D4C(v3, v4);
  uint64_t v5 = a1[3];
  unint64_t v6 = a1[4];
  a1[3] = v3;
  a1[4] = v4;
  sub_100510084(v5, v6);
  return a1;
}

uint64_t assignWithTake for CRLBoardDeltaChange(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 32);
  uint64_t v4 = *(void *)(a1 + 24);
  unint64_t v5 = *(void *)(a1 + 32);
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(void *)(a1 + 32) = v3;
  sub_100510084(v4, v5);
  return a1;
}

uint64_t getEnumTagSinglePayload for CRLBoardDeltaChange(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xD && *(unsigned char *)(a1 + 40)) {
    return (*(_DWORD *)a1 + 13);
  }
  unsigned int v3 = (((*(void *)(a1 + 32) >> 60) >> 2) & 0xFFFFFFF3 | (4 * ((*(void *)(a1 + 32) >> 60) & 3))) ^ 0xF;
  if (v3 >= 0xC) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for CRLBoardDeltaChange(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xC)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)uint64_t result = a2 - 13;
    if (a3 >= 0xD) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if (a3 >= 0xD) {
      *(unsigned char *)(result + 40) = 0;
    }
    if (a2)
    {
      *(void *)(result + 24) = 0;
      *(void *)(result + 32) = (unint64_t)(((-a2 >> 2) & 3) - 4 * a2) << 60;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLBoardDeltaChange()
{
  return &type metadata for CRLBoardDeltaChange;
}

Swift::Int sub_100EB9940(uint64_t a1, uint64_t a2)
{
  __chkstk_darwin(a1 - 8, a2);
  uint64_t v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  Hasher.init(_seed:)();
  sub_100EB9D10(v2, (uint64_t)v4, type metadata accessor for CRLCommandBoardItemChangeContext);
  Swift::UInt v5 = v4[*(int *)(sub_1005057FC(&qword_10169D8F8) + 48)];
  Hasher._combine(_:)(0);
  uint64_t v6 = type metadata accessor for UUID();
  sub_100EBB190((unint64_t *)&qword_1016770E0, (void (*)(uint64_t))&type metadata accessor for UUID);
  dispatch thunk of Hashable.hash(into:)();
  Hasher._combine(_:)(v5);
  (*(void (**)(char *, uint64_t))(*(void *)(v6 - 8) + 8))(v4, v6);
  return Hasher._finalize()();
}

uint64_t sub_100EB9A88(uint64_t a1, uint64_t a2)
{
  __chkstk_darwin(a1, a2 - 8);
  uint64_t v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100EB9D10(v2, (uint64_t)v4, type metadata accessor for CRLCommandBoardItemChangeContext);
  Swift::UInt v5 = v4[*(int *)(sub_1005057FC(&qword_10169D8F8) + 48)];
  Hasher._combine(_:)(0);
  uint64_t v6 = type metadata accessor for UUID();
  sub_100EBB190((unint64_t *)&qword_1016770E0, (void (*)(uint64_t))&type metadata accessor for UUID);
  dispatch thunk of Hashable.hash(into:)();
  Hasher._combine(_:)(v5);
  return (*(uint64_t (**)(char *, uint64_t))(*(void *)(v6 - 8) + 8))(v4, v6);
}

Swift::Int sub_100EB9BC8(uint64_t a1, uint64_t a2)
{
  __chkstk_darwin(a1, a2 - 8);
  uint64_t v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  Hasher.init(_seed:)();
  sub_100EB9D10(v2, (uint64_t)v4, type metadata accessor for CRLCommandBoardItemChangeContext);
  Swift::UInt v5 = v4[*(int *)(sub_1005057FC(&qword_10169D8F8) + 48)];
  Hasher._combine(_:)(0);
  uint64_t v6 = type metadata accessor for UUID();
  sub_100EBB190((unint64_t *)&qword_1016770E0, (void (*)(uint64_t))&type metadata accessor for UUID);
  dispatch thunk of Hashable.hash(into:)();
  Hasher._combine(_:)(v5);
  (*(void (**)(char *, uint64_t))(*(void *)(v6 - 8) + 8))(v4, v6);
  return Hasher._finalize()();
}

uint64_t sub_100EB9D10(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_100EB9D78(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_100EB9DD8(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v9 = type metadata accessor for UUID();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v12 = __chkstk_darwin(v9, v11);
  __chkstk_darwin(v12, v13);
  if (*(unsigned char *)(a3 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_active) != 1)
  {
    __break(1u);
    goto LABEL_27;
  }
  uint64_t v43 = (uint64_t)&v41 - v14;
  uint64_t v44 = v15;
  if (a2 == 2)
  {
    if ((*(unsigned char *)(a3 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_undoable) & 1) == 0)
    {
LABEL_4:
      int v16 = 0;
      goto LABEL_7;
    }
  }
  else if ((a2 & 1) == 0)
  {
    goto LABEL_4;
  }
  int v16 = 1;
  *(unsigned char *)(a3 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_undoableAffectedItemSetNeedsUpdate) = 1;
LABEL_7:
  type metadata accessor for CRLTransactableHashableWrapper();
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = a1;
  *(void *)(v4 + 24) = &off_101518040;
  swift_beginAccess();
  uint64_t v5 = (double *)(id)a1;
  swift_retain();
  sub_100CB4EEC(v45, v4);
  swift_endAccess();
  swift_release();
  if (v16)
  {
    swift_beginAccess();
    swift_retain();
    sub_100CB4EEC(v45, v4);
    swift_endAccess();
    swift_release();
  }
  type metadata accessor for CRLContainerItem(0);
  uint64_t v17 = swift_dynamicCastClass();
  uint64_t v3 = _swiftEmptyArrayStorage;
  if (!v17)
  {
    type metadata accessor for CRLBoard(0);
    uint64_t v26 = swift_dynamicCastClass();
    if (v26)
    {
      uint64_t v27 = v26;
      unint64_t v28 = *(void **)(v26 + OBJC_IVAR____TtC8Freeform8CRLBoard_rootContainer);
      unint64_t v29 = v5;
      id v30 = v28;
      sub_100EBA9CC((unint64_t)v30, a2, a3);

      id v31 = *(id *)(v27 + OBJC_IVAR____TtC8Freeform8CRLBoard_alternateRootContainer);
      sub_100EBA9CC((unint64_t)v31, a2, a3);
    }
    goto LABEL_29;
  }
  uint64_t v18 = v17;
  uint64_t v42 = v10;
  uint64_t v19 = OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedOrderedItems;
  uint64_t v20 = *(double **)(v17 + OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedOrderedItems);
  uint64_t v41 = v5;
  if (!v20)
  {
    sub_100846AB0();
    uint64_t v20 = *(double **)(v18 + v19);
  }
  uint64_t v10 = v9;
  if (v20) {
    a1 = (unint64_t)v20;
  }
  else {
    a1 = (unint64_t)_swiftEmptyArrayStorage;
  }
  if (a1 >> 62)
  {
LABEL_27:
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v21 = _CocoaArrayWrapper.endIndex.getter();
    uint64_t result = swift_bridgeObjectRelease();
    if (v21) {
      goto LABEL_17;
    }
LABEL_28:

    swift_bridgeObjectRelease();
    uint64_t v9 = v10;
    uint64_t v10 = v42;
    goto LABEL_29;
  }
  uint64_t v21 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t result = swift_bridgeObjectRetain();
  if (!v21) {
    goto LABEL_28;
  }
LABEL_17:
  if (v21 < 1)
  {
    __break(1u);
    return result;
  }
  for (uint64_t i = 0; i != v21; ++i)
  {
    if ((a1 & 0xC000000000000001) != 0) {
      id v24 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v24 = *(id *)(a1 + 8 * i + 32);
    }
    uint64_t v25 = v24;
    sub_100EB9DD8(v24, a2, a3);
  }
  swift_bridgeObjectRelease();
  uint64_t v9 = v10;
  uint64_t v10 = v42;
  uint64_t v3 = _swiftEmptyArrayStorage;
LABEL_29:
  uint64_t v32 = (uint64_t *)(a3 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_deletedObjects);
  swift_beginAccess();
  uint64_t v33 = *v32;
  swift_bridgeObjectRetain();
  char v34 = sub_1006E4038(v4, v33);
  swift_bridgeObjectRelease();
  if (v34)
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"objectCreated(_:undoableModification:)", 38, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLTransactions/CRLTransactionContext.swift", 97, 2, 308, (uint64_t)"A created object should not be listed as a deleted object", 57, 2u, (uint64_t)v3);
    sub_1005598CC((uint64_t)v3, (uint64_t)"objectCreated(_:undoableModification:)", 38, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLTransactions/CRLTransactionContext.swift", 97, 2, 308);
  }
  uint64_t v35 = *(void *)(a3 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_transactableOwner + 8);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v37 = *(void (**)(double *, _UNKNOWN **, uint64_t, uint64_t))(v35 + 24);
  swift_unknownObjectRetain();
  v37(v5, &off_101518040, ObjectType, v35);
  uint64_t v38 = swift_unknownObjectRelease();
  if (*(unsigned char *)(a3 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_markingState) == 1)
  {
    unint64_t v39 = v44;
    (*(void (**)(uint64_t))((swift_isaMask & *(void *)v5) + 0x88))(v38);
    swift_beginAccess();
    uint64_t v40 = v43;
    sub_100CB4BC8(v43, v39);
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v40, v9);
    swift_endAccess();
  }
  return swift_release();
}

uint64_t sub_100EBA394(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v9 = type metadata accessor for CRLBoardCRDTData(0);
  __chkstk_darwin(v9 - 8, v10);
  uint64_t v12 = (char *)&v47 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for UUID();
  uint64_t v15 = __chkstk_darwin(v13, v14);
  __chkstk_darwin(v15, v16);
  if (*(unsigned char *)(a3 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_active) != 1)
  {
    __break(1u);
    goto LABEL_27;
  }
  long long v50 = v19;
  uint64_t v51 = v18;
  uint64_t v48 = v12;
  uint64_t v49 = (uint64_t)&v47 - v17;
  if (a2 == 2)
  {
    if ((*(unsigned char *)(a3 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_undoable) & 1) == 0)
    {
LABEL_4:
      int v20 = 0;
      goto LABEL_7;
    }
  }
  else if ((a2 & 1) == 0)
  {
    goto LABEL_4;
  }
  int v20 = 1;
  *(unsigned char *)(a3 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_undoableAffectedItemSetNeedsUpdate) = 1;
LABEL_7:
  type metadata accessor for CRLTransactableHashableWrapper();
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = a1;
  *(void *)(v4 + 24) = &off_10152A280;
  swift_beginAccess();
  uint64_t v5 = (double *)(id)a1;
  swift_retain();
  sub_100CB4EEC(v52, v4);
  swift_endAccess();
  swift_release();
  if (v20)
  {
    swift_beginAccess();
    swift_retain();
    sub_100CB4EEC(v52, v4);
    swift_endAccess();
    swift_release();
  }
  type metadata accessor for CRLContainerItem(0);
  uint64_t v21 = swift_dynamicCastClass();
  uint64_t v3 = _swiftEmptyArrayStorage;
  if (!v21)
  {
    type metadata accessor for CRLBoard(0);
    uint64_t v30 = swift_dynamicCastClass();
    if (v30)
    {
      uint64_t v31 = v30;
      uint64_t v32 = *(void **)(v30 + OBJC_IVAR____TtC8Freeform8CRLBoard_rootContainer);
      uint64_t v33 = v5;
      id v34 = v32;
      sub_100EBA9CC((unint64_t)v34, a2, a3);

      id v35 = *(id *)(v31 + OBJC_IVAR____TtC8Freeform8CRLBoard_alternateRootContainer);
      sub_100EBA9CC((unint64_t)v35, a2, a3);
    }
    goto LABEL_29;
  }
  uint64_t v22 = v21;
  uint64_t v23 = OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedOrderedItems;
  id v24 = *(double **)(v21 + OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedOrderedItems);
  uint64_t v47 = v5;
  if (!v24)
  {
    sub_100846AB0();
    id v24 = *(double **)(v22 + v23);
  }
  uint64_t v12 = (char *)v13;
  if (v24) {
    a1 = (unint64_t)v24;
  }
  else {
    a1 = (unint64_t)_swiftEmptyArrayStorage;
  }
  if (a1 >> 62)
  {
LABEL_27:
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v25 = _CocoaArrayWrapper.endIndex.getter();
    uint64_t result = swift_bridgeObjectRelease();
    if (v25) {
      goto LABEL_17;
    }
LABEL_28:

    swift_bridgeObjectRelease();
    uint64_t v13 = (uint64_t)v12;
    goto LABEL_29;
  }
  uint64_t v25 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t result = swift_bridgeObjectRetain();
  if (!v25) {
    goto LABEL_28;
  }
LABEL_17:
  if (v25 < 1)
  {
    __break(1u);
    return result;
  }
  for (uint64_t i = 0; i != v25; ++i)
  {
    if ((a1 & 0xC000000000000001) != 0) {
      id v28 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v28 = *(id *)(a1 + 8 * i + 32);
    }
    unint64_t v29 = v28;
    sub_100EB9DD8((unint64_t)v28, a2, a3);
  }
  swift_bridgeObjectRelease();
  uint64_t v13 = (uint64_t)v12;
  uint64_t v3 = _swiftEmptyArrayStorage;
LABEL_29:
  unint64_t v36 = (uint64_t *)(a3 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_deletedObjects);
  swift_beginAccess();
  uint64_t v37 = *v36;
  swift_bridgeObjectRetain();
  char v38 = sub_1006E4038(v4, v37);
  swift_bridgeObjectRelease();
  if (v38)
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"objectCreated(_:undoableModification:)", 38, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLTransactions/CRLTransactionContext.swift", 97, 2, 308, (uint64_t)"A created object should not be listed as a deleted object", 57, 2u, (uint64_t)v3);
    sub_1005598CC((uint64_t)v3, (uint64_t)"objectCreated(_:undoableModification:)", 38, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLTransactions/CRLTransactionContext.swift", 97, 2, 308);
  }
  uint64_t v39 = *(void *)(a3 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_transactableOwner + 8);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v41 = *(void (**)(double *, _UNKNOWN **, uint64_t, uint64_t))(v39 + 24);
  swift_unknownObjectRetain();
  v41(v5, &off_10152A280, ObjectType, v39);
  swift_unknownObjectRelease();
  if (*(unsigned char *)(a3 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_markingState) == 1)
  {
    uint64_t v42 = *(void *)((char *)v5 + OBJC_IVAR____TtC8Freeform8CRLBoard_data)
        + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
    swift_beginAccess();
    uint64_t v43 = v42;
    uint64_t v44 = (uint64_t)v48;
    sub_100EB9D10(v43, (uint64_t)v48, type metadata accessor for CRLBoardCRDTData);
    swift_retain();
    sub_1005057FC(&qword_101674550);
    __n128 v45 = v50;
    CRRegister.wrappedValue.getter();
    sub_100EB9D78(v44, type metadata accessor for CRLBoardCRDTData);
    swift_release();
    swift_beginAccess();
    uint64_t v46 = v49;
    sub_100CB4BC8(v49, v45);
    (*(void (**)(uint64_t, uint64_t))(v51 + 8))(v46, v13);
    swift_endAccess();
  }
  return swift_release();
}

uint64_t sub_100EBA9CC(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v8 = type metadata accessor for UUID();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v11 = __chkstk_darwin(v8, v10);
  __chkstk_darwin(v11, v12);
  uint64_t v15 = (char *)&v42 - v14;
  if (*(unsigned char *)(a3 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_active) != 1)
  {
    __break(1u);
    goto LABEL_26;
  }
  __n128 v45 = v13;
  if (a2 == 2)
  {
    if ((*(unsigned char *)(a3 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_undoable) & 1) == 0)
    {
LABEL_4:
      int v16 = 0;
      goto LABEL_7;
    }
  }
  else if ((a2 & 1) == 0)
  {
    goto LABEL_4;
  }
  int v16 = 1;
  *(unsigned char *)(a3 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_undoableAffectedItemSetNeedsUpdate) = 1;
LABEL_7:
  type metadata accessor for CRLTransactableHashableWrapper();
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = a1;
  *(void *)(v3 + 24) = &off_101518040;
  swift_beginAccess();
  uint64_t v4 = (double *)(id)a1;
  swift_retain();
  sub_100CB4EEC(v46, v3);
  swift_endAccess();
  swift_release();
  if (v16)
  {
    swift_beginAccess();
    swift_retain();
    sub_100CB4EEC(v46, v3);
    swift_endAccess();
    swift_release();
  }
  type metadata accessor for CRLContainerItem(0);
  uint64_t v17 = swift_dynamicCastClass();
  uint64_t v44 = v15;
  if (!v17)
  {
    type metadata accessor for CRLBoard(0);
    uint64_t v26 = swift_dynamicCastClass();
    if (v26)
    {
      uint64_t v27 = v26;
      id v28 = *(void **)(v26 + OBJC_IVAR____TtC8Freeform8CRLBoard_rootContainer);
      unint64_t v29 = v4;
      id v30 = v28;
      sub_100EBA9CC();

      id v31 = *(id *)(v27 + OBJC_IVAR____TtC8Freeform8CRLBoard_alternateRootContainer);
      sub_100EBA9CC();
    }
    goto LABEL_28;
  }
  uint64_t v18 = v17;
  uint64_t v43 = v9;
  uint64_t v19 = OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedOrderedItems;
  int v20 = *(double **)(v17 + OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedOrderedItems);
  uint64_t v42 = v4;
  if (!v20)
  {
    sub_100846AB0();
    int v20 = *(double **)(v18 + v19);
  }
  uint64_t v9 = v8;
  if (v20) {
    a1 = (unint64_t)v20;
  }
  else {
    a1 = (unint64_t)_swiftEmptyArrayStorage;
  }
  if (a1 >> 62)
  {
LABEL_26:
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v21 = _CocoaArrayWrapper.endIndex.getter();
    uint64_t result = swift_bridgeObjectRelease();
    if (v21) {
      goto LABEL_17;
    }
    goto LABEL_27;
  }
  uint64_t v21 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t result = swift_bridgeObjectRetain();
  if (v21)
  {
LABEL_17:
    if (v21 < 1)
    {
      __break(1u);
      return result;
    }
    for (uint64_t i = 0; i != v21; ++i)
    {
      if ((a1 & 0xC000000000000001) != 0) {
        id v24 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v24 = *(id *)(a1 + 8 * i + 32);
      }
      uint64_t v25 = v24;
      sub_100EB9DD8(v24, a2, a3);
    }
  }
LABEL_27:

  swift_bridgeObjectRelease();
  uint64_t v8 = v9;
  uint64_t v9 = v43;
LABEL_28:
  uint64_t v32 = (uint64_t *)(a3 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_deletedObjects);
  swift_beginAccess();
  uint64_t v33 = *v32;
  swift_bridgeObjectRetain();
  char v34 = sub_1006E4038(v3, v33);
  swift_bridgeObjectRelease();
  if (v34)
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"objectCreated(_:undoableModification:)", 38, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLTransactions/CRLTransactionContext.swift", 97, 2, 308, (uint64_t)"A created object should not be listed as a deleted object", 57, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"objectCreated(_:undoableModification:)", 38, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLTransactions/CRLTransactionContext.swift", 97, 2, 308);
  }
  uint64_t v35 = *(void *)(a3 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_transactableOwner + 8);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v37 = *(void (**)(double *, _UNKNOWN **, uint64_t, uint64_t))(v35 + 24);
  swift_unknownObjectRetain();
  v37(v4, &off_101518040, ObjectType, v35);
  swift_unknownObjectRelease();
  if (*(unsigned char *)(a3 + OBJC_IVAR____TtC8Freeform21CRLTransactionContext_markingState) == 1)
  {
    char v38 = *(void (**)(uint64_t))(**(void **)((char *)v4
                                                       + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData)
                                         + 256);
    uint64_t v39 = swift_retain();
    uint64_t v40 = v45;
    v38(v39);
    swift_release();
    swift_beginAccess();
    uint64_t v41 = (uint64_t)v44;
    sub_100CB4BC8((uint64_t)v44, v40);
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v41, v8);
    swift_endAccess();
  }
  return swift_release();
}

uint64_t sub_100EBAF7C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UUID();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4, v6);
  uint64_t v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1005057FC(&qword_1016A1350);
  __chkstk_darwin(v9 - 8, v10);
  uint64_t v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = (uint64_t)&v12[*(int *)(v13 + 56)];
  sub_100EB9D10(a1, (uint64_t)v12, type metadata accessor for CRLCommandBoardItemChangeContext);
  sub_100EB9D10(a2, v14, type metadata accessor for CRLCommandBoardItemChangeContext);
  uint64_t v15 = *(int *)(sub_1005057FC(&qword_10169D8F8) + 48);
  LODWORD(a1) = v12[v15];
  int v16 = *(unsigned __int8 *)(v14 + v15);
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v8, v12, v4);
  LODWORD(a2) = static UUID.== infix(_:_:)();
  uint64_t v17 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  v17(v14, v4);
  v17((uint64_t)v8, v4);
  return a2 & ~(a1 ^ v16) & 1;
}

uint64_t sub_100EBB140(uint64_t a1)
{
  return a1;
}

uint64_t type metadata accessor for CRLCommandBoardItemChangeContext(uint64_t a1)
{
  return sub_100512D5C(a1, (uint64_t *)&unk_1016A1330);
}

uint64_t sub_100EBB190(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100EBB1D8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

unsigned char *storeEnumTagSinglePayload for CRLCommandBoardItemChangeType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100EBB30CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLCommandBoardItemChangeType()
{
  return &type metadata for CRLCommandBoardItemChangeType;
}

void *sub_100EBB344(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (void *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = type metadata accessor for UUID();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    uint64_t v7 = sub_1005057FC(&qword_10169D8F8);
    *((unsigned char *)a1 + *(int *)(v7 + 48)) = *((unsigned char *)a2 + *(int *)(v7 + 48));
  }
  return a1;
}

uint64_t sub_100EBB40C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  uint64_t v5 = sub_1005057FC(&qword_10169D8F8);
  *(unsigned char *)(a1 + *(int *)(v5 + 48)) = *(unsigned char *)(a2 + *(int *)(v5 + 48));
  return a1;
}

uint64_t sub_100EBB488(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a1, a2, v4);
  uint64_t v5 = sub_1005057FC(&qword_10169D8F8);
  *(unsigned char *)(a1 + *(int *)(v5 + 48)) = *(unsigned char *)(a2 + *(int *)(v5 + 48));
  return a1;
}

uint64_t sub_100EBB504(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
  uint64_t v5 = sub_1005057FC(&qword_10169D8F8);
  *(unsigned char *)(a1 + *(int *)(v5 + 48)) = *(unsigned char *)(a2 + *(int *)(v5 + 48));
  return a1;
}

uint64_t sub_100EBB580(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a1, a2, v4);
  uint64_t v5 = sub_1005057FC(&qword_10169D8F8);
  *(unsigned char *)(a1 + *(int *)(v5 + 48)) = *(unsigned char *)(a2 + *(int *)(v5 + 48));
  return a1;
}

uint64_t sub_100EBB5FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1005057FC(&qword_10169D8F8);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t sub_100EBB66C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1005057FC(&qword_10169D8F8);
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);

  return v7(a1, a2, a3, v6);
}

uint64_t sub_100EBB6EC(uint64_t a1)
{
  uint64_t result = type metadata accessor for UUID();
  if (v3 <= 0x3F)
  {
    swift_getTupleTypeLayout2();
    swift_initEnumMetadataSingleCase();
    uint64_t result = 0;
    *(_DWORD *)(*(void *)(a1 - 8) + 84) = v4;
  }
  return result;
}

unint64_t sub_100EBB7AC()
{
  unint64_t result = qword_1016A1340;
  if (!qword_1016A1340)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A1340);
  }
  return result;
}

uint64_t sub_100EBB800()
{
  return sub_100EBB190(&qword_1016A1348, (void (*)(uint64_t))type metadata accessor for CRLCommandBoardItemChangeContext);
}

uint64_t sub_100EBB848(uint64_t a1)
{
  uint64_t result = sub_100EBB190(&qword_10169D900, (void (*)(uint64_t))type metadata accessor for CRLCommandBoardItemChangeContext);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t *sub_100EBB8A0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for UUID();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = *(int *)(a3 + 24);
    uint64_t v10 = (uint64_t *)((char *)a1 + v8);
    uint64_t v11 = (uint64_t *)((char *)a2 + v8);
    uint64_t v12 = v11[1];
    *uint64_t v10 = *v11;
    v10[1] = v12;
    *(uint64_t *)((char *)a1 + v9) = *(uint64_t *)((char *)a2 + v9);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_100EBB988(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_100EBBA0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = (void *)(a1 + v7);
  uint64_t v10 = (void *)(a2 + v7);
  uint64_t v11 = v10[1];
  void *v9 = *v10;
  v9[1] = v11;
  *(void *)(a1 + v8) = *(void *)(a2 + v8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_100EBBAA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  *uint64_t v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + *(int *)(a3 + 24)) = *(void *)(a2 + *(int *)(a3 + 24));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_100EBBB5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 24);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  return a1;
}

uint64_t sub_100EBBBE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (uint64_t *)(a2 + v7);
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  *uint64_t v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  *(void *)(a1 + *(int *)(a3 + 24)) = *(void *)(a2 + *(int *)(a3 + 24));
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_100EBBC80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100EBBC94);
}

uint64_t sub_100EBBC94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_100EBBD58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100EBBD6C);
}

uint64_t sub_100EBBD6C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for UUID();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  }
  return result;
}

uint64_t type metadata accessor for CRLAssetData()
{
  uint64_t result = qword_1016A13B0;
  if (!qword_1016A13B0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100EBBE78()
{
  uint64_t result = type metadata accessor for UUID();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_100EBBF1C(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_1005057FC(&qword_1016A1468);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5, v7);
  uint64_t v9 = &v12[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10050F848(a1, a1[3]);
  sub_100EBD198();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  char v15 = 0;
  type metadata accessor for UUID();
  sub_100EBD540(&qword_101671E70, (void (*)(uint64_t))&type metadata accessor for UUID);
  KeyedEncodingContainer.encode<A>(_:forKey:)();
  if (!v2)
  {
    uint64_t v10 = type metadata accessor for CRLAssetData();
    char v14 = 1;
    KeyedEncodingContainer.encode(_:forKey:)();
    uint64_t v13 = *(void *)(v3 + *(int *)(v10 + 24));
    v12[15] = 2;
    sub_1005057FC((uint64_t *)&unk_101687A40);
    sub_1005573B0();
    KeyedEncodingContainer.encode<A>(_:forKey:)();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v9, v5);
}

uint64_t sub_100EBC128@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v25 = a2;
  uint64_t v4 = type metadata accessor for UUID();
  uint64_t v27 = *(void *)(v4 - 8);
  __chkstk_darwin(v4, v5);
  id v28 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = sub_1005057FC(&qword_1016A1460);
  uint64_t v26 = *(void *)(v29 - 8);
  __chkstk_darwin(v29, v7);
  uint64_t v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for CRLAssetData();
  __chkstk_darwin(v10, v11);
  uint64_t v13 = (char *)&v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = *(int *)(v14 + 24);
  *(void *)&v13[v30] = _swiftEmptyDictionarySingleton;
  sub_10050F848(a1, a1[3]);
  sub_100EBD198();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v2)
  {
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)a1);
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v24 = v10;
    uint64_t v16 = v26;
    uint64_t v15 = v27;
    char v34 = 0;
    sub_100EBD540(&qword_101671E58, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v17 = v28;
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v13, v17, v4);
    char v33 = 1;
    uint64_t v18 = KeyedDecodingContainer.decode(_:forKey:)();
    uint64_t v19 = (uint64_t *)&v13[*(int *)(v24 + 20)];
    *uint64_t v19 = v18;
    v19[1] = v20;
    sub_1005057FC((uint64_t *)&unk_101687A40);
    char v32 = 2;
    sub_100557304();
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v9, v29);
    uint64_t v22 = v30;
    uint64_t v21 = v31;
    swift_bridgeObjectRelease();
    *(void *)&v13[v22] = v21;
    sub_10077F98C((uint64_t)v13, v25);
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)a1);
    return sub_100671108((uint64_t)v13);
  }
}

uint64_t sub_100EBC508()
{
  uint64_t v0 = sub_1005057FC((uint64_t *)&unk_101674520);
  __chkstk_darwin(v0 - 8, v1);
  uint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for UUID();
  sub_100568B28(v4, qword_10171CB50);
  uint64_t v5 = sub_100556B74(v4, (uint64_t)qword_10171CB50);
  UUID.init(uuidString:)();
  uint64_t v6 = *(void *)(v4 - 8);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 48))(v3, 1, v4);
  if (result != 1) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v6 + 32))(v5, v3, v4);
  }
  __break(1u);
  return result;
}

uint64_t sub_100EBC638@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100EBC128(a1, a2);
}

uint64_t sub_100EBC650(void *a1)
{
  return sub_100EBBF1C(a1);
}

Swift::Int sub_100EBC668(uint64_t a1)
{
  Hasher.init(_seed:)();
  type metadata accessor for UUID();
  sub_100EBD540((unint64_t *)&qword_1016770E0, (void (*)(uint64_t))&type metadata accessor for UUID);
  dispatch thunk of Hashable.hash(into:)();
  String.hash(into:)();
  sub_100AD82A0(v4, *(void *)(v1 + *(int *)(a1 + 24)));
  return Hasher._finalize()();
}

void sub_100EBC720(long long *a1, uint64_t a2)
{
  type metadata accessor for UUID();
  sub_100EBD540((unint64_t *)&qword_1016770E0, (void (*)(uint64_t))&type metadata accessor for UUID);
  dispatch thunk of Hashable.hash(into:)();
  String.hash(into:)();
  uint64_t v5 = *(void *)(v2 + *(int *)(a2 + 24));

  sub_100AD82A0(a1, v5);
}

Swift::Int sub_100EBC7CC(uint64_t a1, uint64_t a2)
{
  Hasher.init(_seed:)();
  type metadata accessor for UUID();
  sub_100EBD540((unint64_t *)&qword_1016770E0, (void (*)(uint64_t))&type metadata accessor for UUID);
  dispatch thunk of Hashable.hash(into:)();
  String.hash(into:)();
  sub_100AD82A0(v5, *(void *)(v2 + *(int *)(a2 + 24)));
  return Hasher._finalize()();
}

uint64_t sub_100EBC884()
{
  return sub_100EBD540(&qword_1016A13F0, (void (*)(uint64_t))type metadata accessor for CRLAssetData);
}

BOOL sub_100EBC8CC(char *a1, char *a2)
{
  return qword_1011BBB48[*a1] == qword_1011BBB48[*a2];
}

Swift::Int sub_100EBC8F0()
{
  uint64_t v1 = *v0;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(qword_1011BBB48[v1]);
  return Hasher._finalize()();
}

void sub_100EBC940()
{
  Hasher._combine(_:)(qword_1011BBB48[*v0]);
}

Swift::Int sub_100EBC978()
{
  uint64_t v1 = *v0;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(qword_1011BBB48[v1]);
  return Hasher._finalize()();
}

void sub_100EBC9C4(void *a1@<X8>)
{
  *a1 = qword_1011BBB48[*v1];
}

uint64_t sub_100EBC9DC()
{
  unint64_t v1 = 0x656D616E656C6966;
  if (*v0 != 1) {
    unint64_t v1 = 0xD000000000000010;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x4955557465737361;
  }
}

uint64_t sub_100EBCA40@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100EBD3E0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_100EBCA68()
{
  return qword_1011BBB48[*v0];
}

void sub_100EBCA80(void *a1@<X8>)
{
  *a1 = &off_101502B50;
}

uint64_t sub_100EBCA90(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_100EBD140();
  unint64_t v5 = sub_100EBD198();

  return static CodingKey<>.intCases.getter(a1, a2, v4, v5);
}

uint64_t sub_100EBCAE8(uint64_t a1)
{
  unint64_t v2 = sub_100EBD198();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100EBCB24(uint64_t a1)
{
  unint64_t v2 = sub_100EBD198();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100EBCB60(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100EBD540(&qword_1016A1458, (void (*)(uint64_t))type metadata accessor for CRLAssetData);

  return CRExtendableValueStruct.copy(renamingReferences:)(a1, a2, v4);
}

uint64_t sub_100EBCBE4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100EBD540(&qword_1016A1458, (void (*)(uint64_t))type metadata accessor for CRLAssetData);

  return CRExtendableValueStruct.copy(renamingReferences:)(a1, a2, v4);
}

uint64_t sub_100EBCC68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_100EBD540(&qword_1016A1408, (void (*)(uint64_t))type metadata accessor for CRLAssetData);
  uint64_t v7 = sub_100EBD540(&qword_1016A13F0, (void (*)(uint64_t))type metadata accessor for CRLAssetData);

  return CRValue<>.observableDifference(from:with:)(a1, a2, a3, v6, v7);
}

uint64_t sub_100EBCD34(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100EBD540(&qword_1016A1458, (void (*)(uint64_t))type metadata accessor for CRLAssetData);

  return CRExtendableValueStruct.visitReferences(_:)(a1, a2, v4);
}

uint64_t sub_100EBCDB0()
{
  return CRValueStruct.init(from:)();
}

uint64_t sub_100EBCE30()
{
  return CRValueStruct.encode(to:)();
}

uint64_t sub_100EBCEA8(uint64_t a1)
{
  uint64_t v2 = sub_100EBD540(&qword_1016A1450, (void (*)(uint64_t))type metadata accessor for CRLAssetData);

  return CRValueStruct.minEncodingVersion.getter(a1, v2);
}

uint64_t sub_100EBCF24()
{
  return sub_100EBD540(&qword_1016A13F8, (void (*)(uint64_t))type metadata accessor for CRLAssetData);
}

uint64_t sub_100EBCF6C()
{
  return sub_100EBD540(&qword_1016A1400, (void (*)(uint64_t))type metadata accessor for CRLAssetData);
}

uint64_t sub_100EBCFB4()
{
  return sub_100EBD540(&qword_1016A1408, (void (*)(uint64_t))type metadata accessor for CRLAssetData);
}

uint64_t sub_100EBCFFC()
{
  return sub_100EBD540(&qword_1016737A0, (void (*)(uint64_t))type metadata accessor for CRLAssetData);
}

uint64_t sub_100EBD044()
{
  return sub_100EBD540(&qword_1016737B0, (void (*)(uint64_t))type metadata accessor for CRLAssetData);
}

unint64_t sub_100EBD090()
{
  unint64_t result = qword_1016A1410;
  if (!qword_1016A1410)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A1410);
  }
  return result;
}

unint64_t sub_100EBD0E8()
{
  unint64_t result = qword_1016A1418;
  if (!qword_1016A1418)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A1418);
  }
  return result;
}

unint64_t sub_100EBD140()
{
  unint64_t result = qword_1016A1420;
  if (!qword_1016A1420)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A1420);
  }
  return result;
}

unint64_t sub_100EBD198()
{
  unint64_t result = qword_1016A1428;
  if (!qword_1016A1428)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A1428);
  }
  return result;
}

unint64_t sub_100EBD1F0()
{
  unint64_t result = qword_1016A1430;
  if (!qword_1016A1430)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A1430);
  }
  return result;
}

unint64_t sub_100EBD248()
{
  unint64_t result = qword_1016A1438;
  if (!qword_1016A1438)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A1438);
  }
  return result;
}

unint64_t sub_100EBD2A0()
{
  unint64_t result = qword_1016A1440;
  if (!qword_1016A1440)
  {
    sub_100522D34(&qword_1016A1448);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A1440);
  }
  return result;
}

uint64_t sub_100EBD2FC()
{
  return sub_100EBD540(&qword_1016A1450, (void (*)(uint64_t))type metadata accessor for CRLAssetData);
}

uint64_t sub_100EBD344(uint64_t a1, uint64_t a2)
{
  if ((static UUID.== infix(_:_:)() & 1) == 0) {
    return 0;
  }
  uint64_t v4 = type metadata accessor for CRLAssetData();
  uint64_t v5 = *(int *)(v4 + 20);
  uint64_t v6 = *(void *)(a1 + v5);
  uint64_t v7 = *(void *)(a1 + v5 + 8);
  uint64_t v8 = (void *)(a2 + v5);
  BOOL v9 = v6 == *v8 && v7 == v8[1];
  if (!v9 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
    return 0;
  }
  uint64_t v10 = *(int *)(v4 + 24);
  uint64_t v11 = *(void *)(a1 + v10);
  uint64_t v12 = *(void *)(a2 + v10);

  return sub_100ED60AC(v11, v12);
}

uint64_t sub_100EBD3E0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x4955557465737361 && a2 == 0xE900000000000044;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656D616E656C6966 && a2 == 0xE800000000000000 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x800000010123A720)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_100EBD540(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for CRLAssetData.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100EBD654);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLAssetData.CodingKeys()
{
  return &type metadata for CRLAssetData.CodingKeys;
}

unint64_t sub_100EBD690()
{
  unint64_t result = qword_1016A1470;
  if (!qword_1016A1470)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A1470);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for CRLiOSPencilHoverToolType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 8 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 8) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF8) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF7)
  {
    unsigned int v6 = ((a2 - 248) >> 8) + 1;
    *unint64_t result = a2 + 8;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100EBD7B0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 8;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLiOSPencilHoverToolType()
{
  return &type metadata for CRLiOSPencilHoverToolType;
}

unint64_t sub_100EBD7EC()
{
  unint64_t result = qword_1016A1478;
  if (!qword_1016A1478)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A1478);
  }
  return result;
}

void sub_100EBD840(void *a1)
{
  id v2 = [self labelColor];
  [a1 setTextColor:v2];
}

id sub_100EBD96C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLLabelView_mi();
  [super dealloc];
}

uint64_t type metadata accessor for CRLLabelView_mi()
{
  return self;
}

uint64_t sub_100EBD9C4()
{
  type metadata accessor for CRLLabelView_mi();
  id v0 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
  id v1 = [v0 traitCollection];
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = v0;
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = sub_100EBDC50;
  *(void *)(v3 + 24) = v2;
  v12[4] = sub_1006591F0;
  v12[5] = v3;
  v12[0] = _NSConcreteStackBlock;
  v12[1] = *(void *)"";
  v12[2] = sub_1006D9628;
  v12[3] = &unk_101532410;
  unsigned int v4 = _Block_copy(v12);
  id v5 = v0;
  swift_retain();
  swift_release();
  [v1 performAsCurrentTraitCollection:v4];

  _Block_release(v4);
  LOBYTE(v1) = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (v1)
  {
    __break(1u);
  }
  else
  {
    uint64_t v7 = self;
    id v8 = v5;
    id v9 = [v7 systemFontOfSize:13.0 weight:UIFontWeightRegular];
    [v8 setFont:v9];

    id v10 = v8;
    NSString v11 = String._bridgeToObjectiveC()();
    [v10 setText:v11];

    [v10 setNumberOfLines:3];
    swift_release();
    return (uint64_t)v10;
  }
  return result;
}

uint64_t sub_100EBDC18()
{
  return _swift_deallocObject(v0, 24, 7);
}

void sub_100EBDC50()
{
  sub_100EBD840(*(void **)(v0 + 16));
}

uint64_t sub_100EBDC58()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100EBDC68(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100EBDC78()
{
  return swift_release();
}

uint64_t destroy for CRLWPShapePresetData(uint64_t a1)
{
  if (*(void *)(a1 + 96))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*(void *)(a1 + 144))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    if (*(void *)(a1 + 200))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
  }
  if (*(void *)(a1 + 328))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (*(void *)(a1 + 424))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (*(void *)(a1 + 520))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (*(void *)(a1 + 576))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  int v2 = *(unsigned __int8 *)(a1 + 616);
  if (v2 != 255) {
    sub_10051ACA0(*(void *)(a1 + 600), *(void *)(a1 + 608), v2 & 1);
  }
  if (*(void *)(a1 + 760))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for CRLWPShapePresetData(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 96);
  if (v4)
  {
    *(void *)a1 = *(void *)a2;
    *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
    *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
    *(unsigned char *)(a1 + 20) = *(unsigned char *)(a2 + 20);
    *(void *)(a1 + 24) = *(void *)(a2 + 24);
    *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
    *(void *)(a1 + 36) = *(void *)(a2 + 36);
    *(_DWORD *)(a1 + 44) = *(_DWORD *)(a2 + 44);
    *(void *)(a1 + 48) = *(void *)(a2 + 48);
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
    *(void *)(a1 + 72) = *(void *)(a2 + 72);
    *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
    *(void *)(a1 + 88) = *(void *)(a2 + 88);
    *(void *)(a1 + 96) = v4;
    *(_DWORD *)(a1 + 104) = *(_DWORD *)(a2 + 104);
    *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
    *(void *)(a1 + 112) = *(void *)(a2 + 112);
    *(unsigned char *)(a1 + 136) = *(unsigned char *)(a2 + 136);
    *(void *)(a1 + 128) = *(void *)(a2 + 128);
    *(_DWORD *)(a1 + 140) = *(_DWORD *)(a2 + 140);
    unsigned int v6 = (_OWORD *)(a2 + 144);
    uint64_t v5 = *(void *)(a2 + 144);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v5)
    {
      *(void *)(a1 + 144) = v5;
      *(_DWORD *)(a1 + 152) = *(_DWORD *)(a2 + 152);
      *(void *)(a1 + 160) = *(void *)(a2 + 160);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      *(_OWORD *)(a1 + 144) = *v6;
      *(void *)(a1 + 160) = *(void *)(a2 + 160);
    }
    *(void *)(a1 + 168) = *(void *)(a2 + 168);
    *(unsigned char *)(a1 + 176) = *(unsigned char *)(a2 + 176);
    *(void *)(a1 + 184) = *(void *)(a2 + 184);
    uint64_t v14 = *(void *)(a2 + 200);
    swift_bridgeObjectRetain();
    if (v14)
    {
      *(void *)(a1 + 192) = *(void *)(a2 + 192);
      *(void *)(a1 + 200) = v14;
      *(_DWORD *)(a1 + 208) = *(_DWORD *)(a2 + 208);
      *(unsigned char *)(a1 + 212) = *(unsigned char *)(a2 + 212);
      *(void *)(a1 + 216) = *(void *)(a2 + 216);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v15 = *(_OWORD *)(a2 + 208);
      *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
      *(_OWORD *)(a1 + 208) = v15;
    }
    *(void *)(a1 + 224) = *(void *)(a2 + 224);
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v7 = *(_OWORD *)(a2 + 208);
    *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
    *(_OWORD *)(a1 + 208) = v7;
    *(void *)(a1 + 224) = *(void *)(a2 + 224);
    long long v8 = *(_OWORD *)(a2 + 144);
    *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
    *(_OWORD *)(a1 + 144) = v8;
    long long v9 = *(_OWORD *)(a2 + 176);
    *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
    *(_OWORD *)(a1 + 176) = v9;
    long long v10 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 80) = v10;
    long long v11 = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 112) = v11;
    long long v12 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v12;
    long long v13 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v13;
  }
  uint64_t v16 = (void *)(a1 + 232);
  uint64_t v17 = (void *)(a2 + 232);
  uint64_t v18 = *(void *)(a2 + 328);
  if (v18)
  {
    *uint64_t v16 = *v17;
    *(unsigned char *)(a1 + 240) = *(unsigned char *)(a2 + 240);
    *(_DWORD *)(a1 + 248) = *(_DWORD *)(a2 + 248);
    *(unsigned char *)(a1 + 252) = *(unsigned char *)(a2 + 252);
    *(void *)(a1 + 256) = *(void *)(a2 + 256);
    *(unsigned char *)(a1 + 264) = *(unsigned char *)(a2 + 264);
    *(_DWORD *)(a1 + 268) = *(_DWORD *)(a2 + 268);
    *(void *)(a1 + 272) = *(void *)(a2 + 272);
    *(void *)(a1 + 280) = *(void *)(a2 + 280);
    *(_OWORD *)(a1 + 288) = *(_OWORD *)(a2 + 288);
    *(void *)(a1 + 304) = *(void *)(a2 + 304);
    *(_DWORD *)(a1 + 312) = *(_DWORD *)(a2 + 312);
    *(void *)(a1 + 320) = *(void *)(a2 + 320);
    *(void *)(a1 + 328) = v18;
    *(void *)(a1 + 336) = *(void *)(a2 + 336);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v19 = *(_OWORD *)(a2 + 312);
    *(_OWORD *)(a1 + 296) = *(_OWORD *)(a2 + 296);
    *(_OWORD *)(a1 + 312) = v19;
    *(_OWORD *)(a1 + 328) = *(_OWORD *)(a2 + 328);
    long long v20 = *(_OWORD *)(a2 + 248);
    *(_OWORD *)uint64_t v16 = *(_OWORD *)v17;
    *(_OWORD *)(a1 + 248) = v20;
    long long v21 = *(_OWORD *)(a2 + 280);
    *(_OWORD *)(a1 + 264) = *(_OWORD *)(a2 + 264);
    *(_OWORD *)(a1 + 280) = v21;
  }
  uint64_t v22 = (_DWORD *)(a1 + 344);
  uint64_t v23 = (_DWORD *)(a2 + 344);
  uint64_t v24 = *(void *)(a2 + 424);
  if (v24)
  {
    _DWORD *v22 = *v23;
    *(unsigned char *)(a1 + 348) = *(unsigned char *)(a2 + 348);
    *(void *)(a1 + 352) = *(void *)(a2 + 352);
    *(unsigned char *)(a1 + 360) = *(unsigned char *)(a2 + 360);
    *(_DWORD *)(a1 + 364) = *(_DWORD *)(a2 + 364);
    *(void *)(a1 + 368) = *(void *)(a2 + 368);
    *(void *)(a1 + 376) = *(void *)(a2 + 376);
    *(_OWORD *)(a1 + 384) = *(_OWORD *)(a2 + 384);
    *(void *)(a1 + 400) = *(void *)(a2 + 400);
    *(_DWORD *)(a1 + 408) = *(_DWORD *)(a2 + 408);
    *(void *)(a1 + 416) = *(void *)(a2 + 416);
    *(void *)(a1 + 424) = v24;
    *(_OWORD *)(a1 + 432) = *(_OWORD *)(a2 + 432);
    *(_DWORD *)(a1 + 448) = *(_DWORD *)(a2 + 448);
    uint64_t v25 = *(void *)(a2 + 464);
    *(void *)(a1 + 456) = *(void *)(a2 + 456);
    *(void *)(a1 + 464) = v25;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v26 = *(_OWORD *)(a2 + 424);
    *(_OWORD *)(a1 + 408) = *(_OWORD *)(a2 + 408);
    *(_OWORD *)(a1 + 424) = v26;
    long long v27 = *(_OWORD *)(a2 + 456);
    *(_OWORD *)(a1 + 440) = *(_OWORD *)(a2 + 440);
    *(_OWORD *)(a1 + 456) = v27;
    long long v28 = *(_OWORD *)(a2 + 360);
    *(_OWORD *)uint64_t v22 = *(_OWORD *)v23;
    *(_OWORD *)(a1 + 360) = v28;
    long long v29 = *(_OWORD *)(a2 + 392);
    *(_OWORD *)(a1 + 376) = *(_OWORD *)(a2 + 376);
    *(_OWORD *)(a1 + 392) = v29;
  }
  *(unsigned char *)(a1 + 472) = *(unsigned char *)(a2 + 472);
  uint64_t v30 = *(void *)(a2 + 520);
  if (v30)
  {
    uint64_t v31 = *(void *)(a2 + 488);
    *(void *)(a1 + 480) = *(void *)(a2 + 480);
    *(void *)(a1 + 488) = v31;
    *(unsigned char *)(a1 + 496) = *(unsigned char *)(a2 + 496);
    *(void *)(a1 + 500) = *(void *)(a2 + 500);
    *(unsigned char *)(a1 + 508) = *(unsigned char *)(a2 + 508);
    *(void *)(a1 + 512) = *(void *)(a2 + 512);
    *(void *)(a1 + 520) = v30;
    *(void *)(a1 + 528) = *(void *)(a2 + 528);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v32 = *(void *)(a2 + 576);
    if (v32)
    {
LABEL_18:
      *(void *)(a1 + 536) = *(void *)(a2 + 536);
      *(void *)(a1 + 544) = *(void *)(a2 + 544);
      *(unsigned char *)(a1 + 552) = *(unsigned char *)(a2 + 552);
      *(void *)(a1 + 556) = *(void *)(a2 + 556);
      *(unsigned char *)(a1 + 564) = *(unsigned char *)(a2 + 564);
      *(void *)(a1 + 568) = *(void *)(a2 + 568);
      *(void *)(a1 + 576) = v32;
      *(void *)(a1 + 584) = *(void *)(a2 + 584);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_21;
    }
  }
  else
  {
    long long v33 = *(_OWORD *)(a2 + 496);
    *(_OWORD *)(a1 + 480) = *(_OWORD *)(a2 + 480);
    *(_OWORD *)(a1 + 496) = v33;
    *(_OWORD *)(a1 + 512) = *(_OWORD *)(a2 + 512);
    *(void *)(a1 + 528) = *(void *)(a2 + 528);
    uint64_t v32 = *(void *)(a2 + 576);
    if (v32) {
      goto LABEL_18;
    }
  }
  long long v34 = *(_OWORD *)(a2 + 552);
  *(_OWORD *)(a1 + 536) = *(_OWORD *)(a2 + 536);
  *(_OWORD *)(a1 + 552) = v34;
  *(_OWORD *)(a1 + 568) = *(_OWORD *)(a2 + 568);
  *(void *)(a1 + 584) = *(void *)(a2 + 584);
LABEL_21:
  *(void *)(a1 + 592) = *(void *)(a2 + 592);
  int v35 = *(unsigned __int8 *)(a2 + 616);
  swift_bridgeObjectRetain();
  if (v35 == 255)
  {
    *(_OWORD *)(a1 + 600) = *(_OWORD *)(a2 + 600);
    *(unsigned char *)(a1 + 616) = *(unsigned char *)(a2 + 616);
  }
  else
  {
    char v36 = v35 & 1;
    uint64_t v37 = *(void *)(a2 + 600);
    unint64_t v38 = *(void *)(a2 + 608);
    sub_10051B3C8(v37, v38, v36);
    *(void *)(a1 + 600) = v37;
    *(void *)(a1 + 608) = v38;
    *(unsigned char *)(a1 + 616) = v36;
  }
  *(_DWORD *)(a1 + 620) = *(_DWORD *)(a2 + 620);
  *(unsigned char *)(a1 + 624) = *(unsigned char *)(a2 + 624);
  *(_WORD *)(a1 + 625) = *(_WORD *)(a2 + 625);
  *(void *)(a1 + 632) = *(void *)(a2 + 632);
  *(unsigned char *)(a1 + 640) = *(unsigned char *)(a2 + 640);
  *(void *)(a1 + 648) = *(void *)(a2 + 648);
  *(unsigned char *)(a1 + 656) = *(unsigned char *)(a2 + 656);
  uint64_t v39 = (void *)(a1 + 664);
  uint64_t v40 = (void *)(a2 + 664);
  uint64_t v41 = *(void *)(a2 + 760);
  if (v41)
  {
    *uint64_t v39 = *v40;
    *(unsigned char *)(a1 + 672) = *(unsigned char *)(a2 + 672);
    *(_DWORD *)(a1 + 680) = *(_DWORD *)(a2 + 680);
    *(unsigned char *)(a1 + 684) = *(unsigned char *)(a2 + 684);
    *(void *)(a1 + 688) = *(void *)(a2 + 688);
    *(unsigned char *)(a1 + 696) = *(unsigned char *)(a2 + 696);
    *(_DWORD *)(a1 + 700) = *(_DWORD *)(a2 + 700);
    *(void *)(a1 + 704) = *(void *)(a2 + 704);
    *(void *)(a1 + 712) = *(void *)(a2 + 712);
    *(_OWORD *)(a1 + 720) = *(_OWORD *)(a2 + 720);
    *(void *)(a1 + 736) = *(void *)(a2 + 736);
    *(_DWORD *)(a1 + 744) = *(_DWORD *)(a2 + 744);
    *(void *)(a1 + 752) = *(void *)(a2 + 752);
    *(void *)(a1 + 760) = v41;
    *(void *)(a1 + 768) = *(void *)(a2 + 768);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v42 = *(_OWORD *)(a2 + 744);
    *(_OWORD *)(a1 + 728) = *(_OWORD *)(a2 + 728);
    *(_OWORD *)(a1 + 744) = v42;
    *(_OWORD *)(a1 + 760) = *(_OWORD *)(a2 + 760);
    long long v43 = *(_OWORD *)(a2 + 680);
    *(_OWORD *)uint64_t v39 = *(_OWORD *)v40;
    *(_OWORD *)(a1 + 680) = v43;
    long long v44 = *(_OWORD *)(a2 + 712);
    *(_OWORD *)(a1 + 696) = *(_OWORD *)(a2 + 696);
    *(_OWORD *)(a1 + 712) = v44;
  }
  *(void *)(a1 + 776) = *(void *)(a2 + 776);
  *(unsigned char *)(a1 + 784) = *(unsigned char *)(a2 + 784);
  *(void *)(a1 + 792) = *(void *)(a2 + 792);
  *(unsigned char *)(a1 + 800) = *(unsigned char *)(a2 + 800);
  *(void *)(a1 + 808) = *(void *)(a2 + 808);
  *(unsigned char *)(a1 + 816) = *(unsigned char *)(a2 + 816);
  *(unsigned char *)(a1 + 832) = *(unsigned char *)(a2 + 832);
  *(void *)(a1 + 824) = *(void *)(a2 + 824);
  *(void *)(a1 + 840) = *(void *)(a2 + 840);
  *(_DWORD *)(a1 + 848) = *(_DWORD *)(a2 + 848);
  *(unsigned char *)(a1 + 864) = *(unsigned char *)(a2 + 864);
  *(void *)(a1 + 856) = *(void *)(a2 + 856);
  *(void *)(a1 + 872) = *(void *)(a2 + 872);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for CRLWPShapePresetData(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = a2[12];
  if (*(void *)(a1 + 96))
  {
    if (v4)
    {
      uint64_t v5 = *a2;
      *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
      *(void *)a1 = v5;
      LODWORD(v5) = *((_DWORD *)a2 + 4);
      *(unsigned char *)(a1 + 20) = *((unsigned char *)a2 + 20);
      *(_DWORD *)(a1 + 16) = v5;
      uint64_t v6 = a2[3];
      *(unsigned char *)(a1 + 32) = *((unsigned char *)a2 + 32);
      *(void *)(a1 + 24) = v6;
      *(_DWORD *)(a1 + 36) = *((_DWORD *)a2 + 9);
      *(_DWORD *)(a1 + 40) = *((_DWORD *)a2 + 10);
      *(_DWORD *)(a1 + 44) = *((_DWORD *)a2 + 11);
      *(void *)(a1 + 48) = a2[6];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_DWORD *)(a1 + 56) = *((_DWORD *)a2 + 14);
      *(_DWORD *)(a1 + 60) = *((_DWORD *)a2 + 15);
      *(_DWORD *)(a1 + 64) = *((_DWORD *)a2 + 16);
      *(_DWORD *)(a1 + 68) = *((_DWORD *)a2 + 17);
      *(void *)(a1 + 72) = a2[9];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_DWORD *)(a1 + 80) = *((_DWORD *)a2 + 20);
      *(void *)(a1 + 88) = a2[11];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 96) = a2[12];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      long long v7 = (_OWORD *)(a1 + 144);
      uint64_t v8 = *(void *)(a1 + 144);
      *(_DWORD *)(a1 + 104) = *((_DWORD *)a2 + 26);
      uint64_t v9 = a2[14];
      *(unsigned char *)(a1 + 120) = *((unsigned char *)a2 + 120);
      *(void *)(a1 + 112) = v9;
      uint64_t v10 = a2[16];
      *(unsigned char *)(a1 + 136) = *((unsigned char *)a2 + 136);
      *(void *)(a1 + 128) = v10;
      *(_DWORD *)(a1 + 140) = *((_DWORD *)a2 + 35);
      long long v12 = a2 + 18;
      uint64_t v11 = a2[18];
      if (v8)
      {
        if (v11)
        {
          *(void *)(a1 + 144) = v11;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(_DWORD *)(a1 + 152) = *((_DWORD *)a2 + 38);
          *(void *)(a1 + 160) = a2[20];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
        }
        else
        {
          sub_100A19AFC(a1 + 144);
          uint64_t v41 = a2[20];
          *long long v7 = *v12;
          *(void *)(a1 + 160) = v41;
        }
      }
      else if (v11)
      {
        *(void *)(a1 + 144) = v11;
        *(_DWORD *)(a1 + 152) = *((_DWORD *)a2 + 38);
        *(void *)(a1 + 160) = a2[20];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        long long v46 = *v12;
        *(void *)(a1 + 160) = a2[20];
        *long long v7 = v46;
      }
      uint64_t v47 = a2[21];
      *(unsigned char *)(a1 + 176) = *((unsigned char *)a2 + 176);
      *(void *)(a1 + 168) = v47;
      *(void *)(a1 + 184) = a2[23];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v48 = (_OWORD *)(a1 + 192);
      uint64_t v49 = a2 + 24;
      uint64_t v50 = a2[25];
      if (*(void *)(a1 + 200))
      {
        if (v50)
        {
          *(void *)(a1 + 192) = a2[24];
          *(void *)(a1 + 200) = a2[25];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(_DWORD *)(a1 + 208) = *((_DWORD *)a2 + 52);
          *(unsigned char *)(a1 + 212) = *((unsigned char *)a2 + 212);
          *(void *)(a1 + 216) = a2[27];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
        }
        else
        {
          sub_100A19B30(a1 + 192);
          long long v51 = *((_OWORD *)a2 + 13);
          *uint64_t v48 = *v49;
          *(_OWORD *)(a1 + 208) = v51;
        }
      }
      else if (v50)
      {
        *(void *)(a1 + 192) = a2[24];
        *(void *)(a1 + 200) = a2[25];
        *(_DWORD *)(a1 + 208) = *((_DWORD *)a2 + 52);
        *(unsigned char *)(a1 + 212) = *((unsigned char *)a2 + 212);
        *(void *)(a1 + 216) = a2[27];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        long long v52 = *((_OWORD *)a2 + 13);
        *uint64_t v48 = *v49;
        *(_OWORD *)(a1 + 208) = v52;
      }
      *(void *)(a1 + 224) = a2[28];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_100B409D8(a1);
      long long v20 = *((_OWORD *)a2 + 1);
      long long v19 = *((_OWORD *)a2 + 2);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v20;
      *(_OWORD *)(a1 + 32) = v19;
      long long v21 = *((_OWORD *)a2 + 6);
      long long v23 = *((_OWORD *)a2 + 3);
      long long v22 = *((_OWORD *)a2 + 4);
      *(_OWORD *)(a1 + 80) = *((_OWORD *)a2 + 5);
      *(_OWORD *)(a1 + 96) = v21;
      *(_OWORD *)(a1 + 48) = v23;
      *(_OWORD *)(a1 + 64) = v22;
      long long v24 = *((_OWORD *)a2 + 10);
      long long v26 = *((_OWORD *)a2 + 7);
      long long v25 = *((_OWORD *)a2 + 8);
      *(_OWORD *)(a1 + 144) = *((_OWORD *)a2 + 9);
      *(_OWORD *)(a1 + 160) = v24;
      *(_OWORD *)(a1 + 112) = v26;
      *(_OWORD *)(a1 + 128) = v25;
      long long v28 = *((_OWORD *)a2 + 12);
      long long v27 = *((_OWORD *)a2 + 13);
      long long v29 = *((_OWORD *)a2 + 11);
      *(void *)(a1 + 224) = a2[28];
      *(_OWORD *)(a1 + 192) = v28;
      *(_OWORD *)(a1 + 208) = v27;
      *(_OWORD *)(a1 + 176) = v29;
    }
  }
  else if (v4)
  {
    uint64_t v13 = *a2;
    *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
    *(void *)a1 = v13;
    LODWORD(v13) = *((_DWORD *)a2 + 4);
    *(unsigned char *)(a1 + 20) = *((unsigned char *)a2 + 20);
    *(_DWORD *)(a1 + 16) = v13;
    uint64_t v14 = a2[3];
    *(unsigned char *)(a1 + 32) = *((unsigned char *)a2 + 32);
    *(void *)(a1 + 24) = v14;
    *(_DWORD *)(a1 + 36) = *((_DWORD *)a2 + 9);
    *(_DWORD *)(a1 + 40) = *((_DWORD *)a2 + 10);
    *(_DWORD *)(a1 + 44) = *((_DWORD *)a2 + 11);
    *(void *)(a1 + 48) = a2[6];
    *(_DWORD *)(a1 + 56) = *((_DWORD *)a2 + 14);
    *(_DWORD *)(a1 + 60) = *((_DWORD *)a2 + 15);
    *(_DWORD *)(a1 + 64) = *((_DWORD *)a2 + 16);
    *(_DWORD *)(a1 + 68) = *((_DWORD *)a2 + 17);
    *(void *)(a1 + 72) = a2[9];
    *(_DWORD *)(a1 + 80) = *((_DWORD *)a2 + 20);
    *(void *)(a1 + 88) = a2[11];
    *(void *)(a1 + 96) = a2[12];
    *(_DWORD *)(a1 + 104) = *((_DWORD *)a2 + 26);
    uint64_t v15 = a2[14];
    *(unsigned char *)(a1 + 120) = *((unsigned char *)a2 + 120);
    *(void *)(a1 + 112) = v15;
    uint64_t v16 = a2[16];
    *(unsigned char *)(a1 + 136) = *((unsigned char *)a2 + 136);
    *(void *)(a1 + 128) = v16;
    *(_DWORD *)(a1 + 140) = *((_DWORD *)a2 + 35);
    uint64_t v18 = (long long *)(a2 + 18);
    uint64_t v17 = a2[18];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v17)
    {
      *(void *)(a1 + 144) = v17;
      *(_DWORD *)(a1 + 152) = *((_DWORD *)a2 + 38);
      *(void *)(a1 + 160) = a2[20];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v42 = *v18;
      *(void *)(a1 + 160) = a2[20];
      *(_OWORD *)(a1 + 144) = v42;
    }
    uint64_t v43 = a2[21];
    *(unsigned char *)(a1 + 176) = *((unsigned char *)a2 + 176);
    *(void *)(a1 + 168) = v43;
    *(void *)(a1 + 184) = a2[23];
    uint64_t v44 = a2[25];
    swift_bridgeObjectRetain();
    if (v44)
    {
      *(void *)(a1 + 192) = a2[24];
      *(void *)(a1 + 200) = a2[25];
      *(_DWORD *)(a1 + 208) = *((_DWORD *)a2 + 52);
      *(unsigned char *)(a1 + 212) = *((unsigned char *)a2 + 212);
      *(void *)(a1 + 216) = a2[27];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v45 = *((_OWORD *)a2 + 13);
      *(_OWORD *)(a1 + 192) = *((_OWORD *)a2 + 12);
      *(_OWORD *)(a1 + 208) = v45;
    }
    *(void *)(a1 + 224) = a2[28];
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v30 = *(_OWORD *)a2;
    long long v31 = *((_OWORD *)a2 + 2);
    *(_OWORD *)(a1 + 16) = *((_OWORD *)a2 + 1);
    *(_OWORD *)(a1 + 32) = v31;
    *(_OWORD *)a1 = v30;
    long long v32 = *((_OWORD *)a2 + 3);
    long long v33 = *((_OWORD *)a2 + 4);
    long long v34 = *((_OWORD *)a2 + 6);
    *(_OWORD *)(a1 + 80) = *((_OWORD *)a2 + 5);
    *(_OWORD *)(a1 + 96) = v34;
    *(_OWORD *)(a1 + 48) = v32;
    *(_OWORD *)(a1 + 64) = v33;
    long long v35 = *((_OWORD *)a2 + 7);
    long long v36 = *((_OWORD *)a2 + 8);
    long long v37 = *((_OWORD *)a2 + 10);
    *(_OWORD *)(a1 + 144) = *((_OWORD *)a2 + 9);
    *(_OWORD *)(a1 + 160) = v37;
    *(_OWORD *)(a1 + 112) = v35;
    *(_OWORD *)(a1 + 128) = v36;
    long long v38 = *((_OWORD *)a2 + 11);
    long long v39 = *((_OWORD *)a2 + 12);
    long long v40 = *((_OWORD *)a2 + 13);
    *(void *)(a1 + 224) = a2[28];
    *(_OWORD *)(a1 + 192) = v39;
    *(_OWORD *)(a1 + 208) = v40;
    *(_OWORD *)(a1 + 176) = v38;
  }
  uint64_t v53 = (void *)(a1 + 232);
  uint64_t v54 = a2 + 29;
  uint64_t v55 = a2[41];
  if (*(void *)(a1 + 328))
  {
    if (v55)
    {
      uint64_t v56 = *v54;
      *(unsigned char *)(a1 + 240) = *((unsigned char *)a2 + 240);
      *uint64_t v53 = v56;
      LODWORD(v56) = *((_DWORD *)a2 + 62);
      *(unsigned char *)(a1 + 252) = *((unsigned char *)a2 + 252);
      *(_DWORD *)(a1 + 248) = v56;
      uint64_t v57 = a2[32];
      *(unsigned char *)(a1 + 264) = *((unsigned char *)a2 + 264);
      *(void *)(a1 + 256) = v57;
      *(_DWORD *)(a1 + 268) = *((_DWORD *)a2 + 67);
      *(_DWORD *)(a1 + 272) = *((_DWORD *)a2 + 68);
      *(_DWORD *)(a1 + 276) = *((_DWORD *)a2 + 69);
      *(void *)(a1 + 280) = a2[35];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_DWORD *)(a1 + 288) = *((_DWORD *)a2 + 72);
      *(_DWORD *)(a1 + 292) = *((_DWORD *)a2 + 73);
      *(_DWORD *)(a1 + 296) = *((_DWORD *)a2 + 74);
      *(_DWORD *)(a1 + 300) = *((_DWORD *)a2 + 75);
      *(void *)(a1 + 304) = a2[38];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_DWORD *)(a1 + 312) = *((_DWORD *)a2 + 78);
      *(void *)(a1 + 320) = a2[40];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 328) = a2[41];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 336) = a2[42];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1008EB164(a1 + 232);
      long long v61 = *(_OWORD *)(a2 + 31);
      long long v60 = *(_OWORD *)(a2 + 33);
      *(_OWORD *)uint64_t v53 = *(_OWORD *)v54;
      *(_OWORD *)(a1 + 248) = v61;
      *(_OWORD *)(a1 + 264) = v60;
      long long v62 = *(_OWORD *)(a2 + 41);
      long long v64 = *(_OWORD *)(a2 + 35);
      long long v63 = *(_OWORD *)(a2 + 37);
      *(_OWORD *)(a1 + 312) = *(_OWORD *)(a2 + 39);
      *(_OWORD *)(a1 + 328) = v62;
      *(_OWORD *)(a1 + 280) = v64;
      *(_OWORD *)(a1 + 296) = v63;
    }
  }
  else if (v55)
  {
    uint64_t v58 = *v54;
    *(unsigned char *)(a1 + 240) = *((unsigned char *)a2 + 240);
    *uint64_t v53 = v58;
    LODWORD(v58) = *((_DWORD *)a2 + 62);
    *(unsigned char *)(a1 + 252) = *((unsigned char *)a2 + 252);
    *(_DWORD *)(a1 + 248) = v58;
    uint64_t v59 = a2[32];
    *(unsigned char *)(a1 + 264) = *((unsigned char *)a2 + 264);
    *(void *)(a1 + 256) = v59;
    *(_DWORD *)(a1 + 268) = *((_DWORD *)a2 + 67);
    *(_DWORD *)(a1 + 272) = *((_DWORD *)a2 + 68);
    *(_DWORD *)(a1 + 276) = *((_DWORD *)a2 + 69);
    *(void *)(a1 + 280) = a2[35];
    *(_DWORD *)(a1 + 288) = *((_DWORD *)a2 + 72);
    *(_DWORD *)(a1 + 292) = *((_DWORD *)a2 + 73);
    *(_DWORD *)(a1 + 296) = *((_DWORD *)a2 + 74);
    *(_DWORD *)(a1 + 300) = *((_DWORD *)a2 + 75);
    *(void *)(a1 + 304) = a2[38];
    *(_DWORD *)(a1 + 312) = *((_DWORD *)a2 + 78);
    *(void *)(a1 + 320) = a2[40];
    *(void *)(a1 + 328) = a2[41];
    *(void *)(a1 + 336) = a2[42];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v65 = *(_OWORD *)v54;
    long long v66 = *(_OWORD *)(a2 + 33);
    *(_OWORD *)(a1 + 248) = *(_OWORD *)(a2 + 31);
    *(_OWORD *)(a1 + 264) = v66;
    *(_OWORD *)uint64_t v53 = v65;
    long long v67 = *(_OWORD *)(a2 + 35);
    long long v68 = *(_OWORD *)(a2 + 37);
    long long v69 = *(_OWORD *)(a2 + 41);
    *(_OWORD *)(a1 + 312) = *(_OWORD *)(a2 + 39);
    *(_OWORD *)(a1 + 328) = v69;
    *(_OWORD *)(a1 + 280) = v67;
    *(_OWORD *)(a1 + 296) = v68;
  }
  uint64_t v70 = (_DWORD *)(a1 + 344);
  uint64_t v71 = (int *)(a2 + 43);
  uint64_t v72 = a2[53];
  if (*(void *)(a1 + 424))
  {
    if (v72)
    {
      int v73 = *v71;
      *(unsigned char *)(a1 + 348) = *((unsigned char *)a2 + 348);
      *uint64_t v70 = v73;
      uint64_t v74 = a2[44];
      *(unsigned char *)(a1 + 360) = *((unsigned char *)a2 + 360);
      *(void *)(a1 + 352) = v74;
      *(_DWORD *)(a1 + 364) = *((_DWORD *)a2 + 91);
      *(_DWORD *)(a1 + 368) = *((_DWORD *)a2 + 92);
      *(_DWORD *)(a1 + 372) = *((_DWORD *)a2 + 93);
      *(void *)(a1 + 376) = a2[47];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_DWORD *)(a1 + 384) = *((_DWORD *)a2 + 96);
      *(_DWORD *)(a1 + 388) = *((_DWORD *)a2 + 97);
      *(_DWORD *)(a1 + 392) = *((_DWORD *)a2 + 98);
      *(_DWORD *)(a1 + 396) = *((_DWORD *)a2 + 99);
      *(void *)(a1 + 400) = a2[50];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_DWORD *)(a1 + 408) = *((_DWORD *)a2 + 102);
      *(void *)(a1 + 416) = a2[52];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 424) = a2[53];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_DWORD *)(a1 + 432) = *((_DWORD *)a2 + 108);
      *(_DWORD *)(a1 + 436) = *((_DWORD *)a2 + 109);
      *(_DWORD *)(a1 + 440) = *((_DWORD *)a2 + 110);
      *(_DWORD *)(a1 + 444) = *((_DWORD *)a2 + 111);
      *(_DWORD *)(a1 + 448) = *((_DWORD *)a2 + 112);
      *(void *)(a1 + 456) = a2[57];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 464) = a2[58];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_100B40A2C(a1 + 344);
      long long v77 = *(_OWORD *)(a2 + 49);
      long long v79 = *(_OWORD *)v71;
      long long v78 = *(_OWORD *)(a2 + 45);
      *(_OWORD *)(a1 + 376) = *(_OWORD *)(a2 + 47);
      *(_OWORD *)(a1 + 392) = v77;
      *(_OWORD *)uint64_t v70 = v79;
      *(_OWORD *)(a1 + 360) = v78;
      long long v80 = *(_OWORD *)(a2 + 57);
      long long v82 = *(_OWORD *)(a2 + 51);
      long long v81 = *(_OWORD *)(a2 + 53);
      *(_OWORD *)(a1 + 440) = *(_OWORD *)(a2 + 55);
      *(_OWORD *)(a1 + 456) = v80;
      *(_OWORD *)(a1 + 408) = v82;
      *(_OWORD *)(a1 + 424) = v81;
    }
  }
  else if (v72)
  {
    int v75 = *v71;
    *(unsigned char *)(a1 + 348) = *((unsigned char *)a2 + 348);
    *uint64_t v70 = v75;
    uint64_t v76 = a2[44];
    *(unsigned char *)(a1 + 360) = *((unsigned char *)a2 + 360);
    *(void *)(a1 + 352) = v76;
    *(_DWORD *)(a1 + 364) = *((_DWORD *)a2 + 91);
    *(_DWORD *)(a1 + 368) = *((_DWORD *)a2 + 92);
    *(_DWORD *)(a1 + 372) = *((_DWORD *)a2 + 93);
    *(void *)(a1 + 376) = a2[47];
    *(_DWORD *)(a1 + 384) = *((_DWORD *)a2 + 96);
    *(_DWORD *)(a1 + 388) = *((_DWORD *)a2 + 97);
    *(_DWORD *)(a1 + 392) = *((_DWORD *)a2 + 98);
    *(_DWORD *)(a1 + 396) = *((_DWORD *)a2 + 99);
    *(void *)(a1 + 400) = a2[50];
    *(_DWORD *)(a1 + 408) = *((_DWORD *)a2 + 102);
    *(void *)(a1 + 416) = a2[52];
    *(void *)(a1 + 424) = a2[53];
    *(_DWORD *)(a1 + 432) = *((_DWORD *)a2 + 108);
    *(_DWORD *)(a1 + 436) = *((_DWORD *)a2 + 109);
    *(_DWORD *)(a1 + 440) = *((_DWORD *)a2 + 110);
    *(_DWORD *)(a1 + 444) = *((_DWORD *)a2 + 111);
    *(_DWORD *)(a1 + 448) = *((_DWORD *)a2 + 112);
    *(void *)(a1 + 456) = a2[57];
    *(void *)(a1 + 464) = a2[58];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v83 = *(_OWORD *)v71;
    long long v84 = *(_OWORD *)(a2 + 45);
    long long v85 = *(_OWORD *)(a2 + 49);
    *(_OWORD *)(a1 + 376) = *(_OWORD *)(a2 + 47);
    *(_OWORD *)(a1 + 392) = v85;
    *(_OWORD *)uint64_t v70 = v83;
    *(_OWORD *)(a1 + 360) = v84;
    long long v86 = *(_OWORD *)(a2 + 51);
    long long v87 = *(_OWORD *)(a2 + 53);
    long long v88 = *(_OWORD *)(a2 + 57);
    *(_OWORD *)(a1 + 440) = *(_OWORD *)(a2 + 55);
    *(_OWORD *)(a1 + 456) = v88;
    *(_OWORD *)(a1 + 408) = v86;
    *(_OWORD *)(a1 + 424) = v87;
  }
  *(unsigned char *)(a1 + 472) = *((unsigned char *)a2 + 472);
  uint64_t v89 = (_OWORD *)(a1 + 480);
  uint64_t v90 = (long long *)(a2 + 60);
  uint64_t v91 = a2[65];
  if (*(void *)(a1 + 520))
  {
    if (v91)
    {
      *(void *)(a1 + 480) = a2[60];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v92 = a2[61];
      *(unsigned char *)(a1 + 496) = *((unsigned char *)a2 + 496);
      *(void *)(a1 + 488) = v92;
      *(_DWORD *)(a1 + 500) = *((_DWORD *)a2 + 125);
      *(_DWORD *)(a1 + 504) = *((_DWORD *)a2 + 126);
      *(unsigned char *)(a1 + 508) = *((unsigned char *)a2 + 508);
      *(void *)(a1 + 512) = a2[64];
      *(void *)(a1 + 520) = a2[65];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 528) = a2[66];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_100EBF468(a1 + 480);
      long long v95 = *((_OWORD *)a2 + 31);
      long long v94 = *((_OWORD *)a2 + 32);
      long long v96 = *v90;
      *(void *)(a1 + 528) = a2[66];
      *(_OWORD *)(a1 + 496) = v95;
      *(_OWORD *)(a1 + 512) = v94;
      *uint64_t v89 = v96;
    }
  }
  else if (v91)
  {
    *(void *)(a1 + 480) = a2[60];
    uint64_t v93 = a2[61];
    *(unsigned char *)(a1 + 496) = *((unsigned char *)a2 + 496);
    *(void *)(a1 + 488) = v93;
    *(void *)(a1 + 500) = *(uint64_t *)((char *)a2 + 500);
    *(unsigned char *)(a1 + 508) = *((unsigned char *)a2 + 508);
    *(void *)(a1 + 512) = a2[64];
    *(void *)(a1 + 520) = a2[65];
    *(void *)(a1 + 528) = a2[66];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v97 = *v90;
    long long v98 = *((_OWORD *)a2 + 31);
    long long v99 = *((_OWORD *)a2 + 32);
    *(void *)(a1 + 528) = a2[66];
    *(_OWORD *)(a1 + 496) = v98;
    *(_OWORD *)(a1 + 512) = v99;
    *uint64_t v89 = v97;
  }
  uint64_t v100 = (_OWORD *)(a1 + 536);
  unint64_t v101 = (long long *)(a2 + 67);
  uint64_t v102 = a2[72];
  if (*(void *)(a1 + 576))
  {
    if (v102)
    {
      *(void *)(a1 + 536) = a2[67];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v103 = a2[68];
      *(unsigned char *)(a1 + 552) = *((unsigned char *)a2 + 552);
      *(void *)(a1 + 544) = v103;
      *(_DWORD *)(a1 + 556) = *((_DWORD *)a2 + 139);
      *(_DWORD *)(a1 + 560) = *((_DWORD *)a2 + 140);
      *(unsigned char *)(a1 + 564) = *((unsigned char *)a2 + 564);
      *(void *)(a1 + 568) = a2[71];
      *(void *)(a1 + 576) = a2[72];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 584) = a2[73];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_100EBF468(a1 + 536);
      long long v106 = *(_OWORD *)(a2 + 69);
      long long v105 = *(_OWORD *)(a2 + 71);
      long long v107 = *v101;
      *(void *)(a1 + 584) = a2[73];
      *(_OWORD *)(a1 + 552) = v106;
      *(_OWORD *)(a1 + 568) = v105;
      *uint64_t v100 = v107;
    }
  }
  else if (v102)
  {
    *(void *)(a1 + 536) = a2[67];
    uint64_t v104 = a2[68];
    *(unsigned char *)(a1 + 552) = *((unsigned char *)a2 + 552);
    *(void *)(a1 + 544) = v104;
    *(void *)(a1 + 556) = *(uint64_t *)((char *)a2 + 556);
    *(unsigned char *)(a1 + 564) = *((unsigned char *)a2 + 564);
    *(void *)(a1 + 568) = a2[71];
    *(void *)(a1 + 576) = a2[72];
    *(void *)(a1 + 584) = a2[73];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v108 = *v101;
    long long v109 = *(_OWORD *)(a2 + 69);
    long long v110 = *(_OWORD *)(a2 + 71);
    *(void *)(a1 + 584) = a2[73];
    *(_OWORD *)(a1 + 552) = v109;
    *(_OWORD *)(a1 + 568) = v110;
    *uint64_t v100 = v108;
  }
  *(void *)(a1 + 592) = a2[74];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v111 = (long long *)(a1 + 600);
  unint64_t v112 = (long long *)(a2 + 75);
  int v113 = *((unsigned __int8 *)a2 + 616);
  if (*(unsigned __int8 *)(a1 + 616) == 255)
  {
    if (v113 == 255)
    {
      long long v115 = *v112;
      *(unsigned char *)(a1 + 616) = *((unsigned char *)a2 + 616);
      *uint64_t v111 = v115;
    }
    else
    {
      char v122 = v113 & 1;
      uint64_t v123 = a2[75];
      unint64_t v124 = a2[76];
      sub_10051B3C8(v123, v124, v113 & 1);
      *(void *)(a1 + 600) = v123;
      *(void *)(a1 + 608) = v124;
      *(unsigned char *)(a1 + 616) = v122;
    }
  }
  else if (v113 == 255)
  {
    sub_1008EB104(a1 + 600);
    char v114 = *((unsigned char *)a2 + 616);
    *uint64_t v111 = *v112;
    *(unsigned char *)(a1 + 616) = v114;
  }
  else
  {
    char v116 = v113 & 1;
    uint64_t v117 = a2[75];
    unint64_t v118 = a2[76];
    sub_10051B3C8(v117, v118, v113 & 1);
    uint64_t v119 = *(void *)(a1 + 600);
    unint64_t v120 = *(void *)(a1 + 608);
    char v121 = *(unsigned char *)(a1 + 616);
    *(void *)(a1 + 600) = v117;
    *(void *)(a1 + 608) = v118;
    *(unsigned char *)(a1 + 616) = v116;
    sub_10051ACA0(v119, v120, v121);
  }
  int v125 = *((_DWORD *)a2 + 155);
  *(unsigned char *)(a1 + 624) = *((unsigned char *)a2 + 624);
  *(_DWORD *)(a1 + 620) = v125;
  *(unsigned char *)(a1 + 625) = *((unsigned char *)a2 + 625);
  *(unsigned char *)(a1 + 626) = *((unsigned char *)a2 + 626);
  uint64_t v126 = a2[79];
  *(unsigned char *)(a1 + 640) = *((unsigned char *)a2 + 640);
  *(void *)(a1 + 632) = v126;
  uint64_t v127 = a2[81];
  *(unsigned char *)(a1 + 656) = *((unsigned char *)a2 + 656);
  *(void *)(a1 + 648) = v127;
  id v128 = (void *)(a1 + 664);
  uint64_t v129 = a2 + 83;
  uint64_t v130 = a2[95];
  if (*(void *)(a1 + 760))
  {
    if (v130)
    {
      uint64_t v131 = *v129;
      *(unsigned char *)(a1 + 672) = *((unsigned char *)a2 + 672);
      void *v128 = v131;
      LODWORD(v131) = *((_DWORD *)a2 + 170);
      *(unsigned char *)(a1 + 684) = *((unsigned char *)a2 + 684);
      *(_DWORD *)(a1 + 680) = v131;
      uint64_t v132 = a2[86];
      *(unsigned char *)(a1 + 696) = *((unsigned char *)a2 + 696);
      *(void *)(a1 + 688) = v132;
      *(_DWORD *)(a1 + 700) = *((_DWORD *)a2 + 175);
      *(_DWORD *)(a1 + 704) = *((_DWORD *)a2 + 176);
      *(_DWORD *)(a1 + 708) = *((_DWORD *)a2 + 177);
      *(void *)(a1 + 712) = a2[89];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_DWORD *)(a1 + 720) = *((_DWORD *)a2 + 180);
      *(_DWORD *)(a1 + 724) = *((_DWORD *)a2 + 181);
      *(_DWORD *)(a1 + 728) = *((_DWORD *)a2 + 182);
      *(_DWORD *)(a1 + 732) = *((_DWORD *)a2 + 183);
      *(void *)(a1 + 736) = a2[92];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_DWORD *)(a1 + 744) = *((_DWORD *)a2 + 186);
      *(void *)(a1 + 752) = a2[94];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 760) = a2[95];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 768) = a2[96];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1008EB164(a1 + 664);
      long long v136 = *(_OWORD *)(a2 + 85);
      long long v135 = *(_OWORD *)(a2 + 87);
      *(_OWORD *)id v128 = *(_OWORD *)v129;
      *(_OWORD *)(a1 + 680) = v136;
      *(_OWORD *)(a1 + 696) = v135;
      long long v137 = *(_OWORD *)(a2 + 95);
      long long v139 = *(_OWORD *)(a2 + 89);
      long long v138 = *(_OWORD *)(a2 + 91);
      *(_OWORD *)(a1 + 744) = *(_OWORD *)(a2 + 93);
      *(_OWORD *)(a1 + 760) = v137;
      *(_OWORD *)(a1 + 712) = v139;
      *(_OWORD *)(a1 + 728) = v138;
    }
  }
  else if (v130)
  {
    uint64_t v133 = *v129;
    *(unsigned char *)(a1 + 672) = *((unsigned char *)a2 + 672);
    void *v128 = v133;
    LODWORD(v133) = *((_DWORD *)a2 + 170);
    *(unsigned char *)(a1 + 684) = *((unsigned char *)a2 + 684);
    *(_DWORD *)(a1 + 680) = v133;
    uint64_t v134 = a2[86];
    *(unsigned char *)(a1 + 696) = *((unsigned char *)a2 + 696);
    *(void *)(a1 + 688) = v134;
    *(_DWORD *)(a1 + 700) = *((_DWORD *)a2 + 175);
    *(_DWORD *)(a1 + 704) = *((_DWORD *)a2 + 176);
    *(_DWORD *)(a1 + 708) = *((_DWORD *)a2 + 177);
    *(void *)(a1 + 712) = a2[89];
    *(_DWORD *)(a1 + 720) = *((_DWORD *)a2 + 180);
    *(_DWORD *)(a1 + 724) = *((_DWORD *)a2 + 181);
    *(_DWORD *)(a1 + 728) = *((_DWORD *)a2 + 182);
    *(_DWORD *)(a1 + 732) = *((_DWORD *)a2 + 183);
    *(void *)(a1 + 736) = a2[92];
    *(_DWORD *)(a1 + 744) = *((_DWORD *)a2 + 186);
    *(void *)(a1 + 752) = a2[94];
    *(void *)(a1 + 760) = a2[95];
    *(void *)(a1 + 768) = a2[96];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v140 = *(_OWORD *)v129;
    long long v141 = *(_OWORD *)(a2 + 87);
    *(_OWORD *)(a1 + 680) = *(_OWORD *)(a2 + 85);
    *(_OWORD *)(a1 + 696) = v141;
    *(_OWORD *)id v128 = v140;
    long long v142 = *(_OWORD *)(a2 + 89);
    long long v143 = *(_OWORD *)(a2 + 91);
    long long v144 = *(_OWORD *)(a2 + 95);
    *(_OWORD *)(a1 + 744) = *(_OWORD *)(a2 + 93);
    *(_OWORD *)(a1 + 760) = v144;
    *(_OWORD *)(a1 + 712) = v142;
    *(_OWORD *)(a1 + 728) = v143;
  }
  uint64_t v145 = a2[97];
  *(unsigned char *)(a1 + 784) = *((unsigned char *)a2 + 784);
  *(void *)(a1 + 776) = v145;
  uint64_t v146 = a2[99];
  *(unsigned char *)(a1 + 800) = *((unsigned char *)a2 + 800);
  *(void *)(a1 + 792) = v146;
  uint64_t v147 = a2[101];
  *(unsigned char *)(a1 + 816) = *((unsigned char *)a2 + 816);
  *(void *)(a1 + 808) = v147;
  uint64_t v148 = a2[103];
  *(unsigned char *)(a1 + 832) = *((unsigned char *)a2 + 832);
  *(void *)(a1 + 824) = v148;
  *(void *)(a1 + 840) = a2[105];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 848) = *((_DWORD *)a2 + 212);
  uint64_t v149 = a2[107];
  *(unsigned char *)(a1 + 864) = *((unsigned char *)a2 + 864);
  *(void *)(a1 + 856) = v149;
  *(void *)(a1 + 872) = a2[109];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_100EBF468(uint64_t a1)
{
  return a1;
}

void *initializeWithTake for CRLWPShapePresetData(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x370uLL);
}

uint64_t assignWithTake for CRLWPShapePresetData(uint64_t a1, uint64_t a2)
{
  if (!*(void *)(a1 + 96)) {
    goto LABEL_7;
  }
  if (!*(void *)(a2 + 96))
  {
    sub_100B409D8(a1);
LABEL_7:
    long long v6 = *(_OWORD *)(a2 + 208);
    *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
    *(_OWORD *)(a1 + 208) = v6;
    *(void *)(a1 + 224) = *(void *)(a2 + 224);
    long long v7 = *(_OWORD *)(a2 + 144);
    *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
    *(_OWORD *)(a1 + 144) = v7;
    long long v8 = *(_OWORD *)(a2 + 176);
    *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
    *(_OWORD *)(a1 + 176) = v8;
    long long v9 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 80) = v9;
    long long v10 = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 112) = v10;
    long long v11 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v11;
    long long v12 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v12;
    goto LABEL_16;
  }
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(unsigned char *)(a1 + 20) = *(unsigned char *)(a2 + 20);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 36) = *(void *)(a2 + 36);
  *(_DWORD *)(a1 + 44) = *(_DWORD *)(a2 + 44);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 144);
  uint64_t v5 = *(void *)(a1 + 144);
  *(_DWORD *)(a1 + 104) = *(_DWORD *)(a2 + 104);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(unsigned char *)(a1 + 136) = *(unsigned char *)(a2 + 136);
  *(_DWORD *)(a1 + 140) = *(_DWORD *)(a2 + 140);
  if (v5)
  {
    if (v4)
    {
      *(void *)(a1 + 144) = v4;
      swift_bridgeObjectRelease();
      *(_DWORD *)(a1 + 152) = *(_DWORD *)(a2 + 152);
      *(void *)(a1 + 160) = *(void *)(a2 + 160);
      swift_bridgeObjectRelease();
      goto LABEL_10;
    }
    sub_100A19AFC(a1 + 144);
  }
  *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
LABEL_10:
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  *(unsigned char *)(a1 + 176) = *(unsigned char *)(a2 + 176);
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  swift_bridgeObjectRelease();
  if (!*(void *)(a1 + 200))
  {
LABEL_14:
    long long v14 = *(_OWORD *)(a2 + 208);
    *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
    *(_OWORD *)(a1 + 208) = v14;
    goto LABEL_15;
  }
  uint64_t v13 = *(void *)(a2 + 200);
  if (!v13)
  {
    sub_100A19B30(a1 + 192);
    goto LABEL_14;
  }
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  *(void *)(a1 + 200) = v13;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 208) = *(_DWORD *)(a2 + 208);
  *(unsigned char *)(a1 + 212) = *(unsigned char *)(a2 + 212);
  *(void *)(a1 + 216) = *(void *)(a2 + 216);
  swift_bridgeObjectRelease();
LABEL_15:
  *(void *)(a1 + 224) = *(void *)(a2 + 224);
  swift_bridgeObjectRelease();
LABEL_16:
  uint64_t v15 = (void *)(a1 + 232);
  uint64_t v16 = (void *)(a2 + 232);
  if (*(void *)(a1 + 328))
  {
    if (*(void *)(a2 + 328))
    {
      *uint64_t v15 = *v16;
      *(unsigned char *)(a1 + 240) = *(unsigned char *)(a2 + 240);
      *(_DWORD *)(a1 + 248) = *(_DWORD *)(a2 + 248);
      *(unsigned char *)(a1 + 252) = *(unsigned char *)(a2 + 252);
      *(void *)(a1 + 256) = *(void *)(a2 + 256);
      *(unsigned char *)(a1 + 264) = *(unsigned char *)(a2 + 264);
      *(_DWORD *)(a1 + 268) = *(_DWORD *)(a2 + 268);
      *(void *)(a1 + 272) = *(void *)(a2 + 272);
      *(void *)(a1 + 280) = *(void *)(a2 + 280);
      swift_bridgeObjectRelease();
      *(_OWORD *)(a1 + 288) = *(_OWORD *)(a2 + 288);
      *(void *)(a1 + 304) = *(void *)(a2 + 304);
      swift_bridgeObjectRelease();
      *(_DWORD *)(a1 + 312) = *(_DWORD *)(a2 + 312);
      *(void *)(a1 + 320) = *(void *)(a2 + 320);
      swift_bridgeObjectRelease();
      *(void *)(a1 + 328) = *(void *)(a2 + 328);
      swift_bridgeObjectRelease();
      *(void *)(a1 + 336) = *(void *)(a2 + 336);
      swift_bridgeObjectRelease();
      goto LABEL_21;
    }
    sub_1008EB164(a1 + 232);
  }
  long long v17 = *(_OWORD *)(a2 + 312);
  *(_OWORD *)(a1 + 296) = *(_OWORD *)(a2 + 296);
  *(_OWORD *)(a1 + 312) = v17;
  *(_OWORD *)(a1 + 328) = *(_OWORD *)(a2 + 328);
  long long v18 = *(_OWORD *)(a2 + 248);
  *(_OWORD *)uint64_t v15 = *(_OWORD *)v16;
  *(_OWORD *)(a1 + 248) = v18;
  long long v19 = *(_OWORD *)(a2 + 280);
  *(_OWORD *)(a1 + 264) = *(_OWORD *)(a2 + 264);
  *(_OWORD *)(a1 + 280) = v19;
LABEL_21:
  long long v20 = (_DWORD *)(a1 + 344);
  long long v21 = (_DWORD *)(a2 + 344);
  if (*(void *)(a1 + 424))
  {
    if (*(void *)(a2 + 424))
    {
      *long long v20 = *v21;
      *(unsigned char *)(a1 + 348) = *(unsigned char *)(a2 + 348);
      *(void *)(a1 + 352) = *(void *)(a2 + 352);
      *(unsigned char *)(a1 + 360) = *(unsigned char *)(a2 + 360);
      *(_DWORD *)(a1 + 364) = *(_DWORD *)(a2 + 364);
      *(void *)(a1 + 368) = *(void *)(a2 + 368);
      *(void *)(a1 + 376) = *(void *)(a2 + 376);
      swift_bridgeObjectRelease();
      *(_OWORD *)(a1 + 384) = *(_OWORD *)(a2 + 384);
      *(void *)(a1 + 400) = *(void *)(a2 + 400);
      swift_bridgeObjectRelease();
      *(_DWORD *)(a1 + 408) = *(_DWORD *)(a2 + 408);
      *(void *)(a1 + 416) = *(void *)(a2 + 416);
      swift_bridgeObjectRelease();
      *(void *)(a1 + 424) = *(void *)(a2 + 424);
      swift_bridgeObjectRelease();
      *(_OWORD *)(a1 + 432) = *(_OWORD *)(a2 + 432);
      *(_DWORD *)(a1 + 448) = *(_DWORD *)(a2 + 448);
      *(void *)(a1 + 456) = *(void *)(a2 + 456);
      swift_bridgeObjectRelease();
      *(void *)(a1 + 464) = *(void *)(a2 + 464);
      swift_bridgeObjectRelease();
      goto LABEL_26;
    }
    sub_100B40A2C(a1 + 344);
  }
  long long v22 = *(_OWORD *)(a2 + 424);
  *(_OWORD *)(a1 + 408) = *(_OWORD *)(a2 + 408);
  *(_OWORD *)(a1 + 424) = v22;
  long long v23 = *(_OWORD *)(a2 + 456);
  *(_OWORD *)(a1 + 440) = *(_OWORD *)(a2 + 440);
  *(_OWORD *)(a1 + 456) = v23;
  long long v24 = *(_OWORD *)(a2 + 360);
  *(_OWORD *)long long v20 = *(_OWORD *)v21;
  *(_OWORD *)(a1 + 360) = v24;
  long long v25 = *(_OWORD *)(a2 + 392);
  *(_OWORD *)(a1 + 376) = *(_OWORD *)(a2 + 376);
  *(_OWORD *)(a1 + 392) = v25;
LABEL_26:
  *(unsigned char *)(a1 + 472) = *(unsigned char *)(a2 + 472);
  if (*(void *)(a1 + 520))
  {
    if (*(void *)(a2 + 520))
    {
      *(void *)(a1 + 480) = *(void *)(a2 + 480);
      swift_bridgeObjectRelease();
      *(void *)(a1 + 488) = *(void *)(a2 + 488);
      *(unsigned char *)(a1 + 496) = *(unsigned char *)(a2 + 496);
      *(_DWORD *)(a1 + 500) = *(_DWORD *)(a2 + 500);
      *(_DWORD *)(a1 + 504) = *(_DWORD *)(a2 + 504);
      *(unsigned char *)(a1 + 508) = *(unsigned char *)(a2 + 508);
      *(void *)(a1 + 512) = *(void *)(a2 + 512);
      *(void *)(a1 + 520) = *(void *)(a2 + 520);
      swift_bridgeObjectRelease();
      *(void *)(a1 + 528) = *(void *)(a2 + 528);
      swift_bridgeObjectRelease();
      goto LABEL_31;
    }
    sub_100EBF468(a1 + 480);
  }
  long long v26 = *(_OWORD *)(a2 + 496);
  *(_OWORD *)(a1 + 480) = *(_OWORD *)(a2 + 480);
  *(_OWORD *)(a1 + 496) = v26;
  *(_OWORD *)(a1 + 512) = *(_OWORD *)(a2 + 512);
  *(void *)(a1 + 528) = *(void *)(a2 + 528);
LABEL_31:
  if (*(void *)(a1 + 576))
  {
    if (*(void *)(a2 + 576))
    {
      *(void *)(a1 + 536) = *(void *)(a2 + 536);
      swift_bridgeObjectRelease();
      *(void *)(a1 + 544) = *(void *)(a2 + 544);
      *(unsigned char *)(a1 + 552) = *(unsigned char *)(a2 + 552);
      *(_DWORD *)(a1 + 556) = *(_DWORD *)(a2 + 556);
      *(_DWORD *)(a1 + 560) = *(_DWORD *)(a2 + 560);
      *(unsigned char *)(a1 + 564) = *(unsigned char *)(a2 + 564);
      *(void *)(a1 + 568) = *(void *)(a2 + 568);
      *(void *)(a1 + 576) = *(void *)(a2 + 576);
      swift_bridgeObjectRelease();
      *(void *)(a1 + 584) = *(void *)(a2 + 584);
      swift_bridgeObjectRelease();
      goto LABEL_36;
    }
    sub_100EBF468(a1 + 536);
  }
  long long v27 = *(_OWORD *)(a2 + 552);
  *(_OWORD *)(a1 + 536) = *(_OWORD *)(a2 + 536);
  *(_OWORD *)(a1 + 552) = v27;
  *(_OWORD *)(a1 + 568) = *(_OWORD *)(a2 + 568);
  *(void *)(a1 + 584) = *(void *)(a2 + 584);
LABEL_36:
  long long v28 = (_OWORD *)(a1 + 600);
  *(void *)(a1 + 592) = *(void *)(a2 + 592);
  swift_bridgeObjectRelease();
  long long v29 = (_OWORD *)(a2 + 600);
  int v30 = *(unsigned __int8 *)(a1 + 616);
  if (v30 == 255)
  {
LABEL_39:
    *long long v28 = *v29;
    *(unsigned char *)(a1 + 616) = *(unsigned char *)(a2 + 616);
    goto LABEL_41;
  }
  int v31 = *(unsigned __int8 *)(a2 + 616);
  if (v31 == 255)
  {
    sub_1008EB104(a1 + 600);
    goto LABEL_39;
  }
  uint64_t v32 = *(void *)(a1 + 600);
  unint64_t v33 = *(void *)(a1 + 608);
  *long long v28 = *v29;
  *(unsigned char *)(a1 + 616) = v31 & 1;
  sub_10051ACA0(v32, v33, v30 & 1);
LABEL_41:
  *(_DWORD *)(a1 + 620) = *(_DWORD *)(a2 + 620);
  *(unsigned char *)(a1 + 624) = *(unsigned char *)(a2 + 624);
  *(_WORD *)(a1 + 625) = *(_WORD *)(a2 + 625);
  *(void *)(a1 + 632) = *(void *)(a2 + 632);
  *(unsigned char *)(a1 + 640) = *(unsigned char *)(a2 + 640);
  *(void *)(a1 + 648) = *(void *)(a2 + 648);
  *(unsigned char *)(a1 + 656) = *(unsigned char *)(a2 + 656);
  long long v34 = (_OWORD *)(a1 + 664);
  long long v35 = (_OWORD *)(a2 + 664);
  if (!*(void *)(a1 + 760))
  {
LABEL_45:
    long long v36 = *(_OWORD *)(a2 + 744);
    *(_OWORD *)(a1 + 728) = *(_OWORD *)(a2 + 728);
    *(_OWORD *)(a1 + 744) = v36;
    *(_OWORD *)(a1 + 760) = *(_OWORD *)(a2 + 760);
    long long v37 = *(_OWORD *)(a2 + 680);
    *long long v34 = *v35;
    *(_OWORD *)(a1 + 680) = v37;
    long long v38 = *(_OWORD *)(a2 + 712);
    *(_OWORD *)(a1 + 696) = *(_OWORD *)(a2 + 696);
    *(_OWORD *)(a1 + 712) = v38;
    goto LABEL_46;
  }
  if (!*(void *)(a2 + 760))
  {
    sub_1008EB164(a1 + 664);
    goto LABEL_45;
  }
  *(void *)long long v34 = *(void *)v35;
  *(unsigned char *)(a1 + 672) = *(unsigned char *)(a2 + 672);
  *(_DWORD *)(a1 + 680) = *(_DWORD *)(a2 + 680);
  *(unsigned char *)(a1 + 684) = *(unsigned char *)(a2 + 684);
  *(void *)(a1 + 688) = *(void *)(a2 + 688);
  *(unsigned char *)(a1 + 696) = *(unsigned char *)(a2 + 696);
  *(_DWORD *)(a1 + 700) = *(_DWORD *)(a2 + 700);
  *(void *)(a1 + 704) = *(void *)(a2 + 704);
  *(void *)(a1 + 712) = *(void *)(a2 + 712);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 720) = *(_OWORD *)(a2 + 720);
  *(void *)(a1 + 736) = *(void *)(a2 + 736);
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 744) = *(_DWORD *)(a2 + 744);
  *(void *)(a1 + 752) = *(void *)(a2 + 752);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 760) = *(void *)(a2 + 760);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 768) = *(void *)(a2 + 768);
  swift_bridgeObjectRelease();
LABEL_46:
  *(void *)(a1 + 776) = *(void *)(a2 + 776);
  *(unsigned char *)(a1 + 784) = *(unsigned char *)(a2 + 784);
  *(void *)(a1 + 792) = *(void *)(a2 + 792);
  *(unsigned char *)(a1 + 800) = *(unsigned char *)(a2 + 800);
  *(void *)(a1 + 808) = *(void *)(a2 + 808);
  *(unsigned char *)(a1 + 816) = *(unsigned char *)(a2 + 816);
  *(unsigned char *)(a1 + 832) = *(unsigned char *)(a2 + 832);
  *(void *)(a1 + 824) = *(void *)(a2 + 824);
  *(void *)(a1 + 840) = *(void *)(a2 + 840);
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 848) = *(_DWORD *)(a2 + 848);
  *(void *)(a1 + 856) = *(void *)(a2 + 856);
  *(unsigned char *)(a1 + 864) = *(unsigned char *)(a2 + 864);
  *(void *)(a1 + 872) = *(void *)(a2 + 872);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for CRLWPShapePresetData(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 880)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 592);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CRLWPShapePresetData(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 872) = 0;
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 856) = 0u;
    *(_OWORD *)(result + 840) = 0u;
    *(_OWORD *)(result + 824) = 0u;
    *(_OWORD *)(result + 808) = 0u;
    *(_OWORD *)(result + 792) = 0u;
    *(_OWORD *)(result + 776) = 0u;
    *(_OWORD *)(result + 760) = 0u;
    *(_OWORD *)(result + 744) = 0u;
    *(_OWORD *)(result + 728) = 0u;
    *(_OWORD *)(result + 712) = 0u;
    *(_OWORD *)(result + 696) = 0u;
    *(_OWORD *)(result + 680) = 0u;
    *(_OWORD *)(result + 664) = 0u;
    *(_OWORD *)(result + 648) = 0u;
    *(_OWORD *)(result + 632) = 0u;
    *(_OWORD *)(result + 616) = 0u;
    *(_OWORD *)(result + 600) = 0u;
    *(_OWORD *)(result + 584) = 0u;
    *(_OWORD *)(result + 568) = 0u;
    *(_OWORD *)(result + 552) = 0u;
    *(_OWORD *)(result + 536) = 0u;
    *(_OWORD *)(result + 520) = 0u;
    *(_OWORD *)(result + 504) = 0u;
    *(_OWORD *)(result + 488) = 0u;
    *(_OWORD *)(result + 472) = 0u;
    *(_OWORD *)(result + 456) = 0u;
    *(_OWORD *)(result + 440) = 0u;
    *(_OWORD *)(result + 424) = 0u;
    *(_OWORD *)(result + 408) = 0u;
    *(_OWORD *)(result + 392) = 0u;
    *(_OWORD *)(result + 376) = 0u;
    *(_OWORD *)(result + 360) = 0u;
    *(_OWORD *)(result + 344) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 880) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 592) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 880) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLWPShapePresetData()
{
  return &type metadata for CRLWPShapePresetData;
}

id sub_100EBFD98()
{
  sub_10051B3EC(v0 + 344, (uint64_t)v9, (uint64_t *)&unk_101683E20);
  sub_10051B3EC((uint64_t)v9, (uint64_t)&v12, (uint64_t *)&unk_101683E20);
  if (sub_10068F2EC((uint64_t)&v12) == 1) {
    return 0;
  }
  long long v24 = v16;
  long long v25 = v17;
  v26[0] = v18;
  v26[1] = v19;
  long long v20 = v12;
  long long v21 = v13;
  long long v22 = v14;
  long long v23 = v15;
  sub_10050BF48(0, (unint64_t *)&qword_10168F9E0);
  v27[2] = v14;
  void v27[3] = v15;
  v27[4] = v16;
  uint64_t v28 = v17;
  v27[0] = v12;
  v27[1] = v13;
  v10[0] = v12;
  v10[1] = v13;
  v10[3] = v15;
  v10[4] = v16;
  v10[2] = v14;
  uint64_t v11 = v17;
  sub_10068F4F8((uint64_t)v27);
  unint64_t v2 = sub_1007B0B84((uint64_t)v10);
  double v3 = *((float *)&v25 + 2);
  double v4 = *((float *)&v25 + 3);
  double v5 = *(float *)v26;
  double v6 = *((float *)v26 + 1);
  sub_10051B3EC((uint64_t)v26 + 8, (uint64_t)v29, &qword_101679B98);
  sub_10051B3EC((uint64_t)v29, (uint64_t)&v30, &qword_101679B98);
  if (v31) {
    id v7 = [objc_allocWithZone((Class)CRLCurvedShadow) initWithOffset:v2 angle:1 radius:v4 curve:v3 opacity:v5 color:v30 enabled:v6];
  }
  else {
    id v7 = [objc_allocWithZone((Class)CRLDropShadow) initWithAngle:v2 offset:1 radius:v3 opacity:v4 color:v5 enabled:v6];
  }
  id v1 = v7;

  return v1;
}

unint64_t sub_100EBFF6C(char a1)
{
  unint64_t result = 0x7974536570616873;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x7365725074786574;
      break;
    case 2:
      unint64_t result = 0x65736E4974786574;
      break;
    case 3:
      unint64_t result = 0xD000000000000015;
      break;
    case 4:
      unint64_t result = 0xD000000000000010;
      break;
    default:
      return result;
  }
  return result;
}

BOOL sub_100EC003C(char *a1, char *a2)
{
  return qword_1011BC3C8[*a1] == qword_1011BC3C8[*a2];
}

Swift::Int sub_100EC0060()
{
  uint64_t v1 = *v0;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(qword_1011BC3C8[v1]);
  return Hasher._finalize()();
}

void sub_100EC00B0()
{
  Hasher._combine(_:)(qword_1011BC3C8[*v0]);
}

Swift::Int sub_100EC00E8()
{
  uint64_t v1 = *v0;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(qword_1011BC3C8[v1]);
  return Hasher._finalize()();
}

void sub_100EC0134(void *a1@<X8>)
{
  *a1 = qword_1011BC3C8[*v1];
}

unint64_t sub_100EC014C()
{
  return sub_100EBFF6C(*v0);
}

uint64_t sub_100EC0154@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100EC3504(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_100EC017C()
{
  return qword_1011BC3C8[*v0];
}

void sub_100EC0194(void *a1@<X8>)
{
  *a1 = &off_101503128;
}

uint64_t sub_100EC01A4(uint64_t a1, uint64_t a2)
{
  return sub_100EC0F48(a1, a2, (uint64_t (*)(void))sub_100EC0A8C, (uint64_t (*)(void))sub_100EC0AE4);
}

uint64_t sub_100EC01D0(uint64_t a1)
{
  unint64_t v2 = sub_100EC0AE4();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100EC020C(uint64_t a1)
{
  unint64_t v2 = sub_100EC0AE4();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100EC024C(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_1005057FC(&qword_1016A1528);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5, v7);
  long long v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10050F848(a1, a1[3]);
  sub_100EC0AE4();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  memcpy(v20, (const void *)v3, 0x258uLL);
  char v19 = 0;
  sub_100EC4048();
  KeyedEncodingContainer.encode<A>(_:forKey:)();
  if (!v2)
  {
    long long v10 = *(_OWORD *)(v3 + 808);
    v20[12] = *(_OWORD *)(v3 + 792);
    v20[13] = v10;
    v20[14] = *(_OWORD *)(v3 + 824);
    *(void *)&v20[15] = *(void *)(v3 + 840);
    long long v11 = *(_OWORD *)(v3 + 744);
    v20[8] = *(_OWORD *)(v3 + 728);
    v20[9] = v11;
    long long v12 = *(_OWORD *)(v3 + 776);
    v20[10] = *(_OWORD *)(v3 + 760);
    v20[11] = v12;
    long long v13 = *(_OWORD *)(v3 + 680);
    v20[4] = *(_OWORD *)(v3 + 664);
    v20[5] = v13;
    long long v14 = *(_OWORD *)(v3 + 712);
    v20[6] = *(_OWORD *)(v3 + 696);
    v20[7] = v14;
    long long v15 = *(_OWORD *)(v3 + 616);
    v20[0] = *(_OWORD *)(v3 + 600);
    v20[1] = v15;
    long long v16 = *(_OWORD *)(v3 + 648);
    void v20[2] = *(_OWORD *)(v3 + 632);
    v20[3] = v16;
    char v19 = 1;
    sub_1008ED868();
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    LOBYTE(v20[0]) = 2;
    KeyedEncodingContainer.encode(_:forKey:)();
    sub_10051B3EC(v3 + 856, (uint64_t)v21, (uint64_t *)&unk_1016892A0);
    sub_10051B3EC((uint64_t)v21, (uint64_t)v20, (uint64_t *)&unk_1016892A0);
    char v19 = 3;
    sub_1005057FC((uint64_t *)&unk_1016892A0);
    sub_100EC409C(&qword_1016A1538);
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    *(void *)&v20[0] = *(void *)(v3 + 872);
    char v19 = 4;
    sub_1005057FC((uint64_t *)&unk_101687A40);
    sub_1005573B0();
    KeyedEncodingContainer.encode<A>(_:forKey:)();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v5);
}

uint64_t sub_100EC0530()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_100EC0538(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 872) = a1;
  return result;
}

Freeform::SyncEvent::FetchedRecordZoneChanges::Deletion (__swiftcall *sub_100EC0564())(CKRecordID recordID, Swift::String recordType)
{
  return SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:);
}

uint64_t sub_100EC0584(void *__src, const void *a2)
{
  memcpy(v4, __src, sizeof(v4));
  memcpy(__dst, a2, sizeof(__dst));
  return sub_100EC0248(v4) & 1;
}

void *sub_100EC05DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t result = sub_100EC374C(a1, a2);
  if (!v3) {
    return memcpy(a3, v6, 0x370uLL);
  }
  return result;
}

uint64_t sub_100EC0630(void *a1)
{
  memcpy(v4, v1, sizeof(v4));
  return sub_100EC024C(a1);
}

uint64_t sub_100EC0684(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_100990F3C();

  return CRExtendableValueStruct.copy(renamingReferences:)(a1, a2, v4);
}

uint64_t sub_100EC06D8(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_100990F3C();

  return CRExtendableValueStruct.copy(renamingReferences:)(a1, a2, v4);
}

uint64_t sub_100EC072C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_1009F31DC();
  unint64_t v7 = sub_100EC4104();

  return CRValue<>.observableDifference(from:with:)(a1, a2, a3, v6, v7);
}

uint64_t sub_100EC079C(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_100990F3C();

  return CRExtendableValueStruct.visitReferences(_:)(a1, a2, v4);
}

uint64_t sub_100EC07E8()
{
  return CRValueStruct.init(from:)();
}

uint64_t sub_100EC0838()
{
  return CRValueStruct.encode(to:)();
}

uint64_t sub_100EC0880(uint64_t a1)
{
  unint64_t v2 = sub_100EC0C14();

  return CRValueStruct.minEncodingVersion.getter(a1, v2);
}

unint64_t sub_100EC08D0()
{
  unint64_t result = qword_1016A14A8;
  if (!qword_1016A14A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A14A8);
  }
  return result;
}

unint64_t sub_100EC092C()
{
  unint64_t result = qword_1016A14B0;
  if (!qword_1016A14B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A14B0);
  }
  return result;
}

unint64_t sub_100EC0984()
{
  unint64_t result = qword_1016A14B8;
  if (!qword_1016A14B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A14B8);
  }
  return result;
}

unint64_t sub_100EC09DC()
{
  unint64_t result = qword_1016A14C0;
  if (!qword_1016A14C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A14C0);
  }
  return result;
}

unint64_t sub_100EC0A34()
{
  unint64_t result = qword_1016A14C8;
  if (!qword_1016A14C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A14C8);
  }
  return result;
}

unint64_t sub_100EC0A8C()
{
  unint64_t result = qword_1016A14D0;
  if (!qword_1016A14D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A14D0);
  }
  return result;
}

unint64_t sub_100EC0AE4()
{
  unint64_t result = qword_1016A14D8;
  if (!qword_1016A14D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A14D8);
  }
  return result;
}

unint64_t sub_100EC0B3C()
{
  unint64_t result = qword_1016A14E0;
  if (!qword_1016A14E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A14E0);
  }
  return result;
}

unint64_t sub_100EC0B94()
{
  unint64_t result = qword_1016A14E8;
  if (!qword_1016A14E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A14E8);
  }
  return result;
}

uint64_t sub_100EC0BE8()
{
  return sub_1006BFA64(&qword_1016A14F0, &qword_1016A14F8);
}

unint64_t sub_100EC0C14()
{
  unint64_t result = qword_1016A1500;
  if (!qword_1016A1500)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A1500);
  }
  return result;
}

unint64_t sub_100EC0C6C()
{
  unint64_t result = qword_1016A1508;
  if (!qword_1016A1508)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A1508);
  }
  return result;
}

unint64_t sub_100EC0CC0(char a1)
{
  unint64_t result = 0x656B6F727473;
  switch(a1)
  {
    case 1:
      unint64_t result = 1819044198;
      break;
    case 2:
      unint64_t result = 0x776F64616873;
      break;
    case 3:
      unint64_t result = 0xD000000000000015;
      break;
    case 4:
      unint64_t result = 0x656E694C7466656CLL;
      break;
    case 5:
      unint64_t result = 0x6E694C7468676972;
      break;
    case 6:
      unint64_t result = 0xD000000000000010;
      break;
    default:
      return result;
  }
  return result;
}

BOOL sub_100EC0DB4(char *a1, char *a2)
{
  return qword_1011BC3F0[*a1] == qword_1011BC3F0[*a2];
}

Swift::Int sub_100EC0DD8()
{
  uint64_t v1 = *v0;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(qword_1011BC3F0[v1]);
  return Hasher._finalize()();
}

void sub_100EC0E28()
{
  Hasher._combine(_:)(qword_1011BC3F0[*v0]);
}

Swift::Int sub_100EC0E60()
{
  uint64_t v1 = *v0;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(qword_1011BC3F0[v1]);
  return Hasher._finalize()();
}

void sub_100EC0EAC(void *a1@<X8>)
{
  *a1 = qword_1011BC3F0[*v1];
}

unint64_t sub_100EC0EC4()
{
  return sub_100EC0CC0(*v0);
}

uint64_t sub_100EC0ECC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100EC5F18(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_100EC0EF4()
{
  return qword_1011BC3F0[*v0];
}

void sub_100EC0F0C(void *a1@<X8>)
{
  *a1 = &off_101502FB8;
}

uint64_t sub_100EC0F1C(uint64_t a1, uint64_t a2)
{
  return sub_100EC0F48(a1, a2, (uint64_t (*)(void))sub_100EC5C8C, (uint64_t (*)(void))sub_100EC5CE4);
}

uint64_t sub_100EC0F48(uint64_t a1, uint64_t a2, uint64_t (*a3)(void), uint64_t (*a4)(void))
{
  uint64_t v7 = a3();
  uint64_t v8 = a4();

  return static CodingKey<>.intCases.getter(a1, a2, v7, v8);
}

uint64_t sub_100EC0FB4(uint64_t a1)
{
  unint64_t v2 = sub_100EC5CE4();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100EC0FF0(uint64_t a1)
{
  unint64_t v2 = sub_100EC5CE4();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100EC1030(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_1005057FC(&qword_1016A15B0);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5, v7);
  long long v9 = (char *)&v12[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10050F848(a1, a1[3]);
  sub_100EC5CE4();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  sub_10051B3EC(v3, (uint64_t)v17, (uint64_t *)&unk_101685110);
  sub_10051B3EC((uint64_t)v17, (uint64_t)v12, (uint64_t *)&unk_101685110);
  char v18 = 0;
  sub_100A1D5EC();
  KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
  if (!v2)
  {
    sub_10051B3EC(v3 + 232, (uint64_t)v16, &qword_101686E98);
    sub_10051B3EC((uint64_t)v16, (uint64_t)v12, &qword_101686E98);
    char v18 = 1;
    sub_1008F0744();
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
    sub_10051B3EC(v3 + 344, (uint64_t)v15, (uint64_t *)&unk_101683E20);
    sub_10051B3EC((uint64_t)v15, (uint64_t)v12, (uint64_t *)&unk_101683E20);
    char v18 = 2;
    sub_10093C8F4();
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
    LOBYTE(v12[0]) = 3;
    KeyedEncodingContainer.encode(_:forKey:)();
    sub_10051B3EC(v3 + 480, (uint64_t)v14, &qword_10169EBC8);
    sub_10051B3EC((uint64_t)v14, (uint64_t)v12, &qword_10169EBC8);
    char v18 = 4;
    sub_10089CB58();
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
    sub_10051B3EC(v3 + 536, (uint64_t)v13, &qword_10169EBC8);
    sub_10051B3EC((uint64_t)v13, (uint64_t)v12, &qword_10169EBC8);
    char v18 = 5;
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
    v12[0] = *(void *)(v3 + 592);
    char v18 = 6;
    sub_1005057FC((uint64_t *)&unk_101687A40);
    sub_1005573B0();
    KeyedEncodingContainer.encode<A>(_:forKey:)();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v5);
}

uint64_t sub_100EC13A0()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_100EC13A8(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 592) = a1;
  return result;
}

Freeform::SyncEvent::FetchedRecordZoneChanges::Deletion (__swiftcall *sub_100EC13D4())(CKRecordID recordID, Swift::String recordType)
{
  return SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:);
}

uint64_t sub_100EC13F4(void *__src, const void *a2)
{
  memcpy(v4, __src, sizeof(v4));
  memcpy(__dst, a2, sizeof(__dst));
  return sub_100EC102C((uint64_t)v4, (uint64_t)__dst) & 1;
}

void *sub_100EC144C@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t result = sub_100EC6208(a1, __src);
  if (!v2) {
    return memcpy(a2, __src, 0x258uLL);
  }
  return result;
}

uint64_t sub_100EC14A0(void *a1)
{
  memcpy(__dst, v1, sizeof(__dst));
  return sub_100EC1030(a1);
}

uint64_t sub_100EC14F4(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_1009F2E58();

  return CRExtendableValueStruct.copy(renamingReferences:)(a1, a2, v4);
}

uint64_t sub_100EC1548(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_1009F2E58();

  return CRExtendableValueStruct.copy(renamingReferences:)(a1, a2, v4);
}

uint64_t sub_100EC159C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_1009F2FEC();
  unint64_t v7 = sub_100EC6E6C();

  return CRValue<>.observableDifference(from:with:)(a1, a2, a3, v6, v7);
}

uint64_t sub_100EC160C(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_1009F2E58();

  return CRExtendableValueStruct.visitReferences(_:)(a1, a2, v4);
}

uint64_t sub_100EC1658()
{
  return CRValueStruct.init(from:)();
}

uint64_t sub_100EC16A8()
{
  return CRValueStruct.encode(to:)();
}

uint64_t sub_100EC16F0(uint64_t a1)
{
  unint64_t v2 = sub_100EC5EC4();

  return CRValueStruct.minEncodingVersion.getter(a1, v2);
}

uint64_t sub_100EC173C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = a1;
  sub_10051B3EC(a1, (uint64_t)v201, (uint64_t *)&unk_101685110);
  sub_10051B3EC(a2, (uint64_t)v202, (uint64_t *)&unk_101685110);
  sub_10051B3EC((uint64_t)v201, (uint64_t)v203, (uint64_t *)&unk_101685110);
  if (sub_100556850((uint64_t)v203) == 1)
  {
    sub_10051B3EC((uint64_t)v202, (uint64_t)&v155, (uint64_t *)&unk_101685110);
    if (sub_100556850((uint64_t)&v155) == 1) {
      goto LABEL_7;
    }
LABEL_5:
    sub_10051B3EC((uint64_t)v201, (uint64_t)&v155, (uint64_t *)&unk_101685110);
    sub_10051B3EC((uint64_t)v202, (uint64_t)&v164, (uint64_t *)&unk_101685110);
    sub_100AA0D80(v201, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_10051A1EC);
    sub_100AA0D80(v202, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_10051A1EC);
    sub_100556868((uint64_t)&v155);
    goto LABEL_35;
  }
  sub_10051B3EC((uint64_t)v202, (uint64_t)&v155, (uint64_t *)&unk_101685110);
  if (sub_100556850((uint64_t)&v155) == 1) {
    goto LABEL_5;
  }
  sub_10051B3EC((uint64_t)v201, (uint64_t)v112, (uint64_t *)&unk_101685110);
  v197[11] = v112[11];
  v197[12] = v112[12];
  v197[13] = v112[13];
  v197[7] = v112[7];
  v197[8] = v112[8];
  v197[9] = v112[9];
  v197[10] = v112[10];
  v197[3] = v112[3];
  v197[4] = v112[4];
  v197[5] = v112[5];
  v197[6] = v112[6];
  v197[0] = v112[0];
  v197[1] = v112[1];
  uint64_t v198 = v113;
  v197[2] = v112[2];
  sub_10051B3EC((uint64_t)v202, (uint64_t)&v114, (uint64_t *)&unk_101685110);
  v199[11] = v125;
  v199[12] = v126;
  v199[13] = v127;
  v199[7] = v121;
  v199[8] = v122;
  v199[9] = v123;
  v199[10] = v124;
  v199[3] = v117;
  v199[4] = v118;
  v199[5] = v119;
  v199[6] = v120;
  v199[0] = v114;
  v199[1] = v115;
  uint64_t v200 = v128;
  v199[2] = v116;
  sub_100AA0D80(v201, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_10051A1EC);
  sub_100AA0D80(v202, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_10051A1EC);
  char v4 = sub_100A1D9DC((uint64_t)v197, (uint64_t)v199);
  sub_100AA0D80(v202, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_100519F40);
  sub_100AA0D80(v201, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_100519F40);
  if ((v4 & 1) == 0) {
    goto LABEL_35;
  }
LABEL_7:
  uint64_t v5 = *(void *)(v3 + 232);
  uint64_t v6 = *(void *)(v3 + 240);
  uint64_t v7 = *(void *)(v3 + 248);
  uint64_t v8 = *(void *)(v3 + 256);
  uint64_t v9 = *(void *)(v3 + 264);
  uint64_t v10 = *(void *)(v3 + 272);
  uint64_t v11 = *(void *)(v3 + 280);
  uint64_t v12 = *(void *)(v3 + 288);
  uint64_t v13 = *(void *)(v3 + 296);
  uint64_t v14 = *(void *)(v3 + 304);
  uint64_t v15 = *(void *)(v3 + 312);
  uint64_t v16 = *(void *)(v3 + 320);
  uint64_t v17 = *(void *)(v3 + 336);
  uint64_t v19 = *(void *)(a2 + 232);
  uint64_t v18 = *(void *)(a2 + 240);
  uint64_t v20 = *(void *)(a2 + 256);
  uint64_t v102 = *(void *)(a2 + 248);
  uint64_t v106 = *(void *)(v3 + 328);
  uint64_t v22 = *(void *)(a2 + 264);
  uint64_t v21 = *(void *)(a2 + 272);
  uint64_t v24 = *(void *)(a2 + 280);
  uint64_t v23 = *(void *)(a2 + 288);
  uint64_t v94 = *(void *)(a2 + 296);
  uint64_t v25 = *(void *)(a2 + 304);
  uint64_t v107 = *(void *)(a2 + 312);
  uint64_t v26 = *(void *)(a2 + 320);
  uint64_t v111 = *(void *)(a2 + 328);
  uint64_t v100 = *(void *)(a2 + 336);
  if (!v106)
  {
    if (!v111) {
      goto LABEL_16;
    }
LABEL_14:
    *(void *)&long long v155 = *(void *)(v3 + 232);
    *((void *)&v155 + 1) = v6;
    *(void *)&long long v156 = v7;
    *((void *)&v156 + 1) = v8;
    *(void *)&long long v157 = v9;
    *((void *)&v157 + 1) = v10;
    *(void *)&long long v158 = v11;
    *((void *)&v158 + 1) = v12;
    *(void *)&long long v159 = v13;
    *((void *)&v159 + 1) = v14;
    *(void *)&long long v160 = v15;
    *((void *)&v160 + 1) = v16;
    *(void *)&long long v161 = v106;
    *((void *)&v161 + 1) = v17;
    *(void *)&long long v162 = v19;
    *((void *)&v162 + 1) = v18;
    v163[0] = v102;
    v163[1] = v20;
    v163[2] = v22;
    v163[3] = v21;
    v163[4] = v24;
    v163[5] = v23;
    v163[6] = v94;
    v163[7] = v25;
    v163[8] = v107;
    v163[9] = v26;
    v163[10] = v111;
    v163[11] = v100;
    uint64_t v97 = v24;
    uint64_t v98 = v23;
    uint64_t v91 = v21;
    uint64_t v37 = v18;
    uint64_t v38 = v19;
    uint64_t v39 = v25;
    sub_10051B2E8(v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15, v16, v106);
    sub_10051B2E8(v38, v37, v102, v20, v22, v91, v97, v98, v94, v39, v107, v26, v111);
    sub_1008EE60C((uint64_t)&v155);
    goto LABEL_35;
  }
  if (!v111) {
    goto LABEL_14;
  }
  uint64_t v74 = v3;
  uint64_t v75 = a2;
  *(void *)&long long v155 = *(void *)(v3 + 232);
  uint64_t v27 = v23;
  BYTE8(v155) = v6 & 1;
  *(void *)&long long v114 = v19;
  BYTE8(v114) = v18 & 1;
  uint64_t v77 = v5;
  uint64_t v78 = v6;
  uint64_t v84 = v7;
  uint64_t v85 = v9;
  uint64_t v79 = v15;
  uint64_t v80 = v8;
  uint64_t v86 = v10;
  uint64_t v87 = v11;
  uint64_t v88 = v12;
  uint64_t v82 = v14;
  uint64_t v83 = v13;
  uint64_t v81 = v16;
  uint64_t v28 = v24;
  uint64_t v29 = v20;
  uint64_t v30 = v21;
  uint64_t v76 = v17;
  uint64_t v31 = v29;
  uint64_t v32 = v18;
  uint64_t v33 = v19;
  uint64_t v34 = v25;
  sub_10051B2E8(v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15, v16, v106);
  uint64_t v35 = v32;
  sub_10051B2E8(v33, v32, v102, v31, v22, v30, v28, v27, v94, v34, v107, v26, v111);
  sub_1008EE6D8();
  if ((static CRExtensible.== infix(_:_:)() & 1) == 0) {
    goto LABEL_19;
  }
  int v173 = v84;
  char v174 = BYTE4(v84) & 1;
  uint64_t v175 = v80;
  uint64_t v176 = v85;
  uint64_t v177 = v86;
  uint64_t v178 = v87;
  uint64_t v179 = v88;
  uint64_t v180 = v83;
  uint64_t v181 = v82;
  uint64_t v182 = v79;
  uint64_t v183 = v81;
  uint64_t v184 = v106;
  int v185 = v102;
  char v186 = BYTE4(v102) & 1;
  uint64_t v187 = v31;
  uint64_t v188 = v22;
  uint64_t v189 = v30;
  uint64_t v190 = v28;
  uint64_t v191 = v27;
  uint64_t v192 = v94;
  uint64_t v193 = v34;
  uint64_t v194 = v107;
  uint64_t v195 = v26;
  uint64_t v196 = v111;
  if ((sub_1007B049C(&v173, &v185) & 1) == 0)
  {
LABEL_19:
    sub_10051ABBC(v33, v32, v102, v31, v22, v30, v28, v27, v94, v34, v107, v26, v111);
    sub_10051ABBC(v77, v78, v84, v80, v85, v86, v87, v88, v83, v82, v79, v81, v106);
    goto LABEL_35;
  }
  char v36 = sub_100ED60AC(v76, v100);
  sub_10051ABBC(v33, v35, v102, v31, v22, v30, v28, v27, v94, v34, v107, v26, v111);
  sub_10051ABBC(v77, v78, v84, v80, v85, v86, v87, v88, v83, v82, v79, v81, v106);
  uint64_t v3 = v74;
  a2 = v75;
  if ((v36 & 1) == 0) {
    goto LABEL_35;
  }
LABEL_16:
  sub_10051B3EC(v3 + 344, (uint64_t)v153, (uint64_t *)&unk_101683E20);
  sub_10051B3EC(a2 + 344, (uint64_t)v154, (uint64_t *)&unk_101683E20);
  sub_10051B3EC((uint64_t)v153, (uint64_t)v112, (uint64_t *)&unk_101683E20);
  if (sub_10068F2EC((uint64_t)v112) == 1)
  {
    sub_10051B3EC((uint64_t)v154, (uint64_t)&v155, (uint64_t *)&unk_101683E20);
    if (sub_10068F2EC((uint64_t)&v155) == 1) {
      goto LABEL_23;
    }
LABEL_21:
    sub_10051B3EC((uint64_t)v153, (uint64_t)&v155, (uint64_t *)&unk_101683E20);
    sub_10051B3EC((uint64_t)v154, (uint64_t)v163, (uint64_t *)&unk_101683E20);
    sub_100EC257C(v153, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_10051A364);
    sub_100EC257C(v154, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_10051A364);
    sub_10068F304((uint64_t)&v155);
    goto LABEL_35;
  }
  sub_10051B3EC((uint64_t)v154, (uint64_t)v145, (uint64_t *)&unk_101683E20);
  if (sub_10068F2EC((uint64_t)v145) == 1) {
    goto LABEL_21;
  }
  sub_10051B3EC((uint64_t)v153, (uint64_t)&v129, (uint64_t *)&unk_101683E20);
  long long v118 = v133;
  long long v119 = v134;
  long long v120 = v135;
  long long v121 = v136;
  long long v114 = v129;
  long long v115 = v130;
  long long v116 = v131;
  long long v117 = v132;
  sub_10051B3EC((uint64_t)v154, (uint64_t)&v137, (uint64_t *)&unk_101683E20);
  long long v159 = v141;
  long long v160 = v142;
  long long v161 = v143;
  long long v162 = v144;
  long long v155 = v137;
  long long v156 = v138;
  long long v157 = v139;
  long long v158 = v140;
  sub_100EC257C(v153, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_10051A364);
  sub_100EC257C(v154, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_10051A364);
  char v40 = sub_10093D180((uint64_t)&v114, (uint64_t)&v155);
  sub_100EC257C(v154, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_10051A0B8);
  sub_100EC257C(v153, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_10051A0B8);
  if ((v40 & 1) == 0) {
    goto LABEL_35;
  }
LABEL_23:
  if ((*(unsigned __int8 *)(v3 + 472) ^ *(unsigned __int8 *)(a2 + 472))) {
    goto LABEL_35;
  }
  uint64_t v41 = *(void *)(v3 + 480);
  uint64_t v42 = *(void *)(v3 + 488);
  uint64_t v44 = *(void *)(v3 + 496);
  uint64_t v43 = *(void *)(v3 + 504);
  uint64_t v45 = *(void *)(v3 + 512);
  uint64_t v46 = *(void *)(v3 + 520);
  uint64_t v47 = *(void *)(v3 + 528);
  uint64_t v49 = *(void *)(a2 + 480);
  uint64_t v48 = *(void *)(a2 + 488);
  uint64_t v50 = *(void *)(a2 + 496);
  uint64_t v51 = *(void *)(a2 + 504);
  uint64_t v52 = *(void *)(a2 + 512);
  uint64_t v53 = *(void *)(a2 + 520);
  uint64_t v54 = *(void *)(a2 + 528);
  if (v46)
  {
    if (!v53) {
      goto LABEL_34;
    }
    *(void *)&long long v137 = *(void *)(v3 + 480);
    *((void *)&v137 + 1) = v42;
    LOBYTE(v138) = v44 & 1;
    *(void *)((char *)&v138 + 4) = __PAIR64__(v43, HIDWORD(v44));
    BYTE12(v138) = BYTE4(v43) & 1;
    *(void *)&long long v139 = v45;
    *((void *)&v139 + 1) = v46;
    *(void *)&long long v140 = v47;
    v145[0] = v49;
    v145[1] = v48;
    char v146 = v50 & 1;
    int v147 = HIDWORD(v50);
    int v148 = v51;
    char v149 = BYTE4(v51) & 1;
    uint64_t v150 = v52;
    uint64_t v151 = v53;
    uint64_t v152 = v54;
    uint64_t v108 = v48;
    uint64_t v95 = v44;
    uint64_t v55 = v44;
    uint64_t v56 = v50;
    uint64_t v57 = v43;
    uint64_t v89 = v45;
    uint64_t v92 = v43;
    uint64_t v58 = v51;
    uint64_t v59 = v46;
    uint64_t v60 = v53;
    sub_10051B364(v41, v42, v55, v57, v45, v59);
    sub_10051B364(v49, v108, v56, v58, v52, v60);
    char v103 = sub_10089CE74((uint64_t)&v137, (uint64_t)v145);
    sub_10051AC38(v49, v108, v56, v58, v52, v60);
    sub_10051AC38(v41, v42, v95, v92, v89, v59);
    if ((v103 & 1) == 0) {
      goto LABEL_35;
    }
  }
  else if (v53)
  {
    goto LABEL_34;
  }
  uint64_t v41 = *(void *)(v3 + 536);
  uint64_t v42 = *(void *)(v3 + 544);
  uint64_t v44 = *(void *)(v3 + 552);
  uint64_t v43 = *(void *)(v3 + 560);
  uint64_t v45 = *(void *)(v3 + 568);
  uint64_t v46 = *(void *)(v3 + 576);
  uint64_t v61 = *(void *)(v3 + 584);
  uint64_t v49 = *(void *)(a2 + 536);
  uint64_t v48 = *(void *)(a2 + 544);
  uint64_t v50 = *(void *)(a2 + 552);
  uint64_t v51 = *(void *)(a2 + 560);
  uint64_t v52 = *(void *)(a2 + 568);
  uint64_t v53 = *(void *)(a2 + 576);
  uint64_t v62 = *(void *)(a2 + 584);
  if (!v46)
  {
    if (!v53)
    {
LABEL_37:
      char v72 = sub_100ED60AC(*(void *)(v3 + 592), *(void *)(a2 + 592));
      return v72 & 1;
    }
    goto LABEL_34;
  }
  if (!v53)
  {
LABEL_34:
    uint64_t v110 = v48;
    uint64_t v69 = v41;
    uint64_t v70 = v48;
    uint64_t v99 = v50;
    uint64_t v101 = v53;
    uint64_t v105 = v41;
    uint64_t v71 = v45;
    sub_10051B364(v69, v42, v44, v43, v45, v46);
    sub_10051B364(v49, v70, v99, v51, v52, v101);
    sub_10051AC38(v105, v42, v44, v43, v71, v46);
    sub_10051AC38(v49, v110, v99, v51, v52, v101);
    goto LABEL_35;
  }
  v165[0] = *(void *)(v3 + 536);
  v165[1] = v42;
  char v166 = v44 & 1;
  int v167 = HIDWORD(v44);
  int v168 = v43;
  char v169 = BYTE4(v43) & 1;
  uint64_t v170 = v45;
  uint64_t v171 = v46;
  uint64_t v172 = v61;
  *(void *)&long long v129 = v49;
  *((void *)&v129 + 1) = v48;
  LOBYTE(v130) = v50 & 1;
  *(void *)((char *)&v130 + 4) = __PAIR64__(v51, HIDWORD(v50));
  BYTE12(v130) = BYTE4(v51) & 1;
  *(void *)&long long v131 = v52;
  *((void *)&v131 + 1) = v53;
  *(void *)&long long v132 = v62;
  uint64_t v109 = v48;
  uint64_t v96 = v44;
  uint64_t v63 = v44;
  uint64_t v64 = v50;
  uint64_t v65 = v43;
  uint64_t v90 = v45;
  uint64_t v93 = v43;
  uint64_t v66 = v51;
  uint64_t v67 = v46;
  uint64_t v68 = v53;
  sub_10051B364(v41, v42, v63, v65, v45, v67);
  sub_10051B364(v49, v109, v64, v66, v52, v68);
  char v104 = sub_10089CE74((uint64_t)v165, (uint64_t)&v129);
  sub_10051AC38(v49, v109, v64, v66, v52, v68);
  sub_10051AC38(v41, v42, v96, v93, v90, v67);
  if (v104) {
    goto LABEL_37;
  }
LABEL_35:
  char v72 = 0;
  return v72 & 1;
}

uint64_t sub_100EC23D0(char *__src, uint64_t a2)
{
  memcpy(__dst, __src, sizeof(__dst));
  memcpy(v28, (const void *)a2, sizeof(v28));
  if ((sub_100EC173C((uint64_t)__dst, (uint64_t)v28) & 1) == 0) {
    goto LABEL_6;
  }
  uint64_t v27 = *((void *)__src + 105);
  long long v4 = *(_OWORD *)(__src + 808);
  v26[12] = *(_OWORD *)(__src + 792);
  v26[13] = v4;
  v26[14] = *(_OWORD *)(__src + 824);
  long long v5 = *(_OWORD *)(__src + 744);
  v26[8] = *(_OWORD *)(__src + 728);
  v26[9] = v5;
  long long v6 = *(_OWORD *)(__src + 776);
  v26[10] = *(_OWORD *)(__src + 760);
  v26[11] = v6;
  long long v7 = *(_OWORD *)(__src + 680);
  v26[4] = *(_OWORD *)(__src + 664);
  v26[5] = v7;
  long long v8 = *(_OWORD *)(__src + 712);
  v26[6] = *(_OWORD *)(__src + 696);
  v26[7] = v8;
  long long v9 = *(_OWORD *)(__src + 616);
  v26[0] = *(_OWORD *)(__src + 600);
  v26[1] = v9;
  long long v10 = *(_OWORD *)(__src + 648);
  _OWORD v26[2] = *(_OWORD *)(__src + 632);
  v26[3] = v10;
  long long v11 = *(_OWORD *)(a2 + 808);
  v24[12] = *(_OWORD *)(a2 + 792);
  v24[13] = v11;
  v24[14] = *(_OWORD *)(a2 + 824);
  uint64_t v25 = *(void *)(a2 + 840);
  long long v12 = *(_OWORD *)(a2 + 744);
  v24[8] = *(_OWORD *)(a2 + 728);
  v24[9] = v12;
  long long v13 = *(_OWORD *)(a2 + 776);
  v24[10] = *(_OWORD *)(a2 + 760);
  v24[11] = v13;
  long long v14 = *(_OWORD *)(a2 + 680);
  v24[4] = *(_OWORD *)(a2 + 664);
  v24[5] = v14;
  long long v15 = *(_OWORD *)(a2 + 712);
  v24[6] = *(_OWORD *)(a2 + 696);
  v24[7] = v15;
  long long v16 = *(_OWORD *)(a2 + 616);
  v24[0] = *(_OWORD *)(a2 + 600);
  v24[1] = v16;
  long long v17 = *(_OWORD *)(a2 + 648);
  v24[2] = *(_OWORD *)(a2 + 632);
  v24[3] = v17;
  if ((sub_1008EDB84((uint64_t)v26, v24) & 1) == 0) {
    goto LABEL_6;
  }
  if (*((float *)__src + 212) == *(float *)(a2 + 848)
    && (sub_10051B3EC((uint64_t)(__src + 856), (uint64_t)v23, (uint64_t *)&unk_1016892A0),
        sub_10051B3EC((uint64_t)v23, (uint64_t)v21, (uint64_t *)&unk_1016892A0),
        sub_10051B3EC(a2 + 856, (uint64_t)v22, (uint64_t *)&unk_1016892A0),
        sub_10051B3EC((uint64_t)v22, (uint64_t)&v20, (uint64_t *)&unk_1016892A0),
        sub_1005DF574(),
        (static CRExtensible.== infix(_:_:)() & 1) != 0))
  {
    char v18 = sub_100ED60AC(*((void *)__src + 109), *(void *)(a2 + 872));
  }
  else
  {
LABEL_6:
    char v18 = 0;
  }
  return v18 & 1;
}

void *sub_100EC257C(void *a1, void (*a2)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))
{
  return a1;
}

void *sub_100EC25E0@<X0>(void *a1@<X0>, char a2@<W1>, void *a3@<X8>)
{
  uint64_t v105 = type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData(0);
  uint64_t v7 = __chkstk_darwin(v105, v6);
  long long v9 = (char *)&v98 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __chkstk_darwin(v7, v10);
  uint64_t v102 = (char *)&v98 - v12;
  uint64_t v14 = __chkstk_darwin(v11, v13);
  char v103 = (char *)&v98 - v15;
  uint64_t v17 = __chkstk_darwin(v14, v16);
  uint64_t v19 = (char *)&v98 - v18;
  *(void *)&v139[592] = &_swiftEmptyDictionarySingleton;
  uint64_t v20 = (void *)(*(uint64_t (**)(uint64_t))((swift_isaMask & *a1) + 0x420))(v17);
  char v104 = v9;
  if (v20)
  {
    sub_100A1F088(v20, (uint64_t)&v109);
    long long v136 = v121;
    long long v137 = v122;
    uint64_t v138 = v123;
    long long v132 = v117;
    long long v133 = v118;
    long long v134 = v119;
    long long v135 = v120;
    long long v128 = v113;
    long long v129 = v114;
    long long v130 = v115;
    long long v131 = v116;
    long long v124 = v109;
    long long v125 = v110;
    long long v126 = v111;
    long long v127 = v112;
    SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)((CKRecordID)&v124, v21);
  }
  else
  {
    sub_10051A3F4((uint64_t)&v124);
  }
  sub_10051B3EC((uint64_t)&v124, (uint64_t)v139, (uint64_t *)&unk_101685110);
  uint64_t v108 = &v139[328];
  uint64_t v22 = (void *)sub_100A9B204();
  if (v22)
  {
    sub_100F91F6C(v22, (uint64_t)&v140);
    uint64_t v23 = v148;
    long long v24 = v149;
    uint64_t v25 = &_mh_execute_header;
    if (!v143) {
      uint64_t v25 = 0;
    }
    *(void *)&v139[232] = v140;
    *(void *)&v139[240] = v141;
    *(void *)&v139[248] = (unint64_t)v25 | v142;
    *(_OWORD *)&v139[256] = v144;
    *(_OWORD *)&v139[272] = v145;
    *(_OWORD *)&v139[288] = v146;
    *(_OWORD *)&v139[304] = v147;
  }
  else
  {
    uint64_t v23 = 0;
    long long v24 = 0uLL;
    memset(&v139[232], 0, 88);
  }
  *(void *)&v139[320] = v23;
  *uint64_t v108 = v24;
  uint64_t v26 = *(uint64_t (**)(void))((swift_isaMask & *a1) + 0x4C0);
  uint64_t v106 = (swift_isaMask & *a1) + 1216;
  uint64_t v107 = v26;
  if ((v26() & 1) != 0
    || (uint64_t v27 = *(uint64_t (**)(uint64_t))(**(void **)((char *)a1
                                                              + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData)
                                                + 384),
        uint64_t v28 = swift_retain(),
        uint64_t v29 = (void *)v27(v28),
        swift_release(),
        !v29))
  {
    sub_10051A41C(&v124);
  }
  else
  {
    sub_10093D2D8(v29, (uint64_t)&v109);
    long long v128 = v113;
    long long v129 = v114;
    long long v130 = v115;
    long long v131 = v116;
    long long v124 = v109;
    long long v125 = v110;
    long long v126 = v111;
    long long v127 = v112;
    SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)((CKRecordID)&v124, v30);
  }
  uint64_t v31 = sub_10051B3EC((uint64_t)&v124, (uint64_t)&v139[344], (uint64_t *)&unk_101683E20);
  if ((a2 & 1) == 0
    || (uint64_t v32 = (void *)(*(uint64_t (**)(uint64_t))((swift_isaMask & *a1) + 0x478))(v31),
        id v33 = [v32 bezierPath],
        v32,
        LODWORD(v32) = [v33 isOpen],
        v33,
        !v32))
  {

    v139[472] = 0;
    long long v46 = 0uLL;
    memset(&v139[480], 0, 96);
    uint64_t v47 = &v139[321];
LABEL_23:
    *(_OWORD *)(v47 + 255) = v46;
    return memcpy(a3, v139, 0x258uLL);
  }
  v139[472] = 1;
  char v34 = (*(uint64_t (**)(void))((swift_isaMask & *a1) + 0x500))();
  char v35 = v107();
  if (v34)
  {
    uint64_t v101 = a3;
    if (v35) {
      goto LABEL_31;
    }
    uint64_t v36 = **(void **)((char *)a1 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
    uint64_t result = (void *)swift_conformsToProtocol2();
    if (result)
    {
      uint64_t v38 = result;
      uint64_t v39 = (void (*)(uint64_t, void *))result[2];
      swift_retain();
      v39(v36, v38);
      swift_release();
      sub_1005057FC((uint64_t *)&unk_10168A0D0);
      CRRegister.wrappedValue.getter();
      long long v40 = v124;
      uint64_t v42 = *((void *)&v125 + 1);
      uint64_t v41 = v125;
      long long v43 = v126;
      char v104 = (char *)v127;
      sub_100EC4158((uint64_t)v19, type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData);
      if (*((void *)&v43 + 1))
      {
        long long v124 = v40;
        LOBYTE(v125) = v41 & 1;
        *(void *)((char *)&v125 + 4) = __PAIR64__(v42, HIDWORD(v41));
        BYTE12(v125) = BYTE4(v42) & 1;
        long long v126 = v43;
        *(void *)&long long v127 = v104;
        sub_10050BF48(0, (unint64_t *)&qword_101672AC0);
        id v44 = sub_10089D008((uint64_t)&v124);
        sub_10051AC38(v40, *((uint64_t *)&v40 + 1), v41, v42, v43, *((uint64_t *)&v43 + 1));
        sub_10089D1B0(v44, (uint64_t)&v150);
        uint64_t v45 = &_mh_execute_header;
        if (!v154) {
          uint64_t v45 = 0;
        }
        *(_OWORD *)&v139[480] = v150;
        v139[496] = v151;
        *(_DWORD *)&v139[500] = v152;
        *(void *)&v139[504] = (unint64_t)v45 | v153;
        *(void *)&v139[512] = v155;
        v108[12] = v156;
        goto LABEL_32;
      }
LABEL_31:
      memset(&v139[480], 0, 56);
LABEL_32:
      if (v107())
      {
LABEL_45:

        memset(&v139[536], 0, 56);
        a3 = v101;
        return memcpy(a3, v139, 0x258uLL);
      }
      uint64_t v63 = **(void **)((char *)a1 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
      uint64_t result = (void *)swift_conformsToProtocol2();
      if (result)
      {
        uint64_t v64 = result;
        uint64_t v65 = (void (*)(uint64_t, void *))result[2];
        swift_retain();
        uint64_t v66 = (uint64_t)v103;
        v65(v63, v64);
        swift_release();
        sub_1005057FC((uint64_t *)&unk_10168A0D0);
        CRRegister.wrappedValue.getter();
        long long v67 = v109;
        uint64_t v69 = *((void *)&v110 + 1);
        uint64_t v68 = v110;
        long long v70 = v111;
        uint64_t v71 = v112;
        sub_100EC4158(v66, type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData);
        if (*((void *)&v70 + 1))
        {
          long long v109 = v67;
          LOBYTE(v110) = v68 & 1;
          *(void *)((char *)&v110 + 4) = __PAIR64__(v69, HIDWORD(v68));
          BYTE12(v110) = BYTE4(v69) & 1;
          long long v111 = v70;
          *(void *)&long long v112 = v71;
          sub_10050BF48(0, (unint64_t *)&qword_101672AC0);
          id v72 = sub_10089D008((uint64_t)&v109);
          sub_10051AC38(v67, *((uint64_t *)&v67 + 1), v68, v69, v70, *((uint64_t *)&v70 + 1));
          sub_10089D1B0(v72, (uint64_t)&v157);
          uint64_t v73 = v158;
          int v74 = v161;
          uint64_t v75 = v162;
          uint64_t v77 = v159;
          uint64_t v76 = v160;

          uint64_t v78 = &_mh_execute_header;
          if (!v74) {
            uint64_t v78 = 0;
          }
          v108[13] = v157;
          *(void *)&v139[552] = v73 | (v77 << 32);
          *(void *)&v139[560] = (unint64_t)v78 | v76;
          *(void *)&v139[568] = v75;
          *(_OWORD *)&v139[576] = v163;
          a3 = v101;
          return memcpy(a3, v139, 0x258uLL);
        }
        goto LABEL_45;
      }
      goto LABEL_49;
    }
    __break(1u);
LABEL_48:
    __break(1u);
LABEL_49:
    __break(1u);
    goto LABEL_50;
  }
  if (v35) {
    goto LABEL_38;
  }
  uint64_t v48 = **(void **)((char *)a1 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
  uint64_t result = (void *)swift_conformsToProtocol2();
  if (!result) {
    goto LABEL_48;
  }
  uint64_t v49 = result;
  uint64_t v50 = (void (*)(uint64_t, void *))result[2];
  swift_retain();
  uint64_t v51 = (uint64_t)v102;
  v50(v48, v49);
  swift_release();
  sub_1005057FC((uint64_t *)&unk_10168A0D0);
  CRRegister.wrappedValue.getter();
  long long v52 = v124;
  uint64_t v53 = *((void *)&v125 + 1);
  uint64_t v54 = v125;
  uint64_t v55 = *((void *)&v126 + 1);
  uint64_t v100 = v126;
  char v103 = (char *)v127;
  sub_100EC4158(v51, type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData);
  if (!v55)
  {
LABEL_38:
    memset(&v139[536], 0, 56);
  }
  else
  {
    uint64_t v99 = v52;
    long long v124 = v52;
    LOBYTE(v125) = v54 & 1;
    *(void *)((char *)&v125 + 4) = __PAIR64__(v53, HIDWORD(v54));
    uint64_t v56 = v53;
    BYTE12(v125) = BYTE4(v53) & 1;
    uint64_t v57 = v100;
    *(void *)&long long v126 = v100;
    *((void *)&v126 + 1) = v55;
    *(void *)&long long v127 = v103;
    sub_10050BF48(0, (unint64_t *)&qword_101672AC0);
    id v58 = sub_10089D008((uint64_t)&v124);
    sub_10051AC38(v99, *((uint64_t *)&v52 + 1), v54, v56, v57, v55);
    sub_10089D1B0(v58, (uint64_t)&v150);
    uint64_t v59 = v155;
    unint64_t v60 = v151 | ((unint64_t)v152 << 32);
    uint64_t v61 = &_mh_execute_header;
    if (!v154) {
      uint64_t v61 = 0;
    }
    unint64_t v62 = (unint64_t)v61 | v153;
    v108[13] = v150;
    *(void *)&v139[552] = v60;
    *(void *)&v139[560] = v62;
    *(void *)&v139[568] = v59;
    *(_OWORD *)&v139[576] = v156;
  }
  if (v107())
  {
LABEL_46:

    long long v46 = 0uLL;
    memset(&v139[496], 0, 40);
    uint64_t v47 = &v139[225];
    goto LABEL_23;
  }
  uint64_t v79 = **(void **)((char *)a1 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
  uint64_t result = (void *)swift_conformsToProtocol2();
  if (result)
  {
    uint64_t v80 = result;
    uint64_t v81 = (void (*)(uint64_t, void *))result[2];
    swift_retain();
    uint64_t v82 = (uint64_t)v104;
    v81(v79, v80);
    swift_release();
    sub_1005057FC((uint64_t *)&unk_10168A0D0);
    CRRegister.wrappedValue.getter();
    long long v83 = v109;
    uint64_t v85 = *((void *)&v110 + 1);
    uint64_t v84 = v110;
    uint64_t v86 = *((void *)&v111 + 1);
    uint64_t v107 = (uint64_t (*)(void))v111;
    uint64_t v87 = v112;
    sub_100EC4158(v82, type metadata accessor for CRLShapeItemCRDTData.ShapeStyleData);
    if (v86)
    {
      long long v109 = v83;
      uint64_t v106 = *((void *)&v83 + 1);
      LOBYTE(v110) = v84 & 1;
      *(void *)((char *)&v110 + 4) = __PAIR64__(v85, HIDWORD(v84));
      BYTE12(v110) = BYTE4(v85) & 1;
      uint64_t v88 = (uint64_t)v107;
      *(void *)&long long v111 = v107;
      *((void *)&v111 + 1) = v86;
      *(void *)&long long v112 = v87;
      sub_10050BF48(0, (unint64_t *)&qword_101672AC0);
      id v89 = sub_10089D008((uint64_t)&v109);
      sub_10051AC38(v83, v106, v84, v85, v88, v86);
      sub_10089D1B0(v89, (uint64_t)&v157);
      uint64_t v90 = v158;
      int v91 = v161;
      uint64_t v92 = v162;
      uint64_t v93 = a3;
      uint64_t v95 = v159;
      uint64_t v94 = v160;

      uint64_t v96 = &_mh_execute_header;
      if (!v91) {
        uint64_t v96 = 0;
      }
      unint64_t v97 = (unint64_t)v96 | v94;
      a3 = v93;
      *(_OWORD *)&v139[480] = v157;
      *(void *)&v139[496] = v90 | (v95 << 32);
      *(void *)&v139[504] = v97;
      *(void *)&v139[512] = v92;
      v108[12] = v163;
      return memcpy(a3, v139, 0x258uLL);
    }
    goto LABEL_46;
  }
LABEL_50:
  __break(1u);
  return result;
}

void *sub_100EC3284@<X0>(void *a1@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v6 = type metadata accessor for CRLWPShapeItemCRDTData(0);
  __chkstk_darwin(v6, v7);
  long long v9 = &v16[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v10 = a1;
  uint64_t result = sub_100EC25E0(v10, a2, v18);
  uint64_t v12 = *(void **)((char *)v10 + OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage);
  if (v12)
  {
    sub_1008EE72C((char *)v12, (uint64_t)v19);
    type metadata accessor for CRLWPShapeItemData(0);
    uint64_t v13 = *(void *)swift_dynamicCastClassUnconditional();
    (*(void (**)(void))(v13 + 760))();
    swift_retain();
    sub_1005057FC(&qword_101689320);
    CRRegister.wrappedValue.getter();
    int v14 = v17[0];
    sub_100EC4158((uint64_t)v9, type metadata accessor for CRLWPShapeItemCRDTData);
    swift_release();
    swift_dynamicCastClassUnconditional();
    swift_retain();
    uint64_t v15 = sub_1005DB5E0();

    swift_release();
    if ((unint64_t)(v15 - 1) >= 3) {
      uint64_t v15 = 0;
    }
    memcpy(v17, v18, 0x258uLL);
    *(_OWORD *)&v17[99] = v19[12];
    *(_OWORD *)&v17[101] = v19[13];
    *(_OWORD *)&v17[103] = v19[14];
    *(_OWORD *)&v17[91] = v19[8];
    *(_OWORD *)&v17[93] = v19[9];
    *(_OWORD *)&v17[95] = v19[10];
    *(_OWORD *)&v17[97] = v19[11];
    *(_OWORD *)&v17[83] = v19[4];
    *(_OWORD *)&v17[85] = v19[5];
    *(_OWORD *)&v17[87] = v19[6];
    *(_OWORD *)&v17[89] = v19[7];
    *(_OWORD *)&v17[75] = v19[0];
    *(_OWORD *)&v17[77] = v19[1];
    *(_OWORD *)&v17[79] = v19[2];
    *(_OWORD *)&v17[81] = v19[3];
    v17[105] = v20;
    v16[0] = 0;
    uint64_t result = memcpy((void *)a3, v17, 0x350uLL);
    *(_DWORD *)(a3 + 848) = v14;
    *(void *)(a3 + 856) = v15;
    *(unsigned char *)(a3 + 864) = v16[0];
    *(void *)(a3 + 872) = &_swiftEmptyDictionarySingleton;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100EC3504(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x7974536570616873 && a2 == 0xEA0000000000656CLL;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7365725074786574 && a2 == 0xEB00000000737465 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x65736E4974786574 && a2 == 0xE900000000000074 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x8000000101294670 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x800000010123A720)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v6) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

void *sub_100EC374C(uint64_t a1, uint64_t a2)
{
  __chkstk_darwin(a1, a2);
  long long v4 = v3;
  char v6 = v5;
  uint64_t v7 = sub_1005057FC(&qword_1016A1510);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7, v9);
  uint64_t v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = v4[3];
  uint64_t v22 = v4;
  sub_10050F848(v4, v12);
  sub_100EC0AE4();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v2)
  {
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v22);
    return (void *)swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v13 = v8;
    v64[607] = 0;
    sub_100EC3CF8();
    uint64_t v14 = v7;
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    memcpy(v64, v65, 0x258uLL);
    memcpy(v67, v65, 0x258uLL);
    char v47 = 1;
    sub_10089B968((uint64_t)v64);
    sub_1008ED810();
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    long long v43 = v60;
    long long v44 = v61;
    long long v45 = v62;
    long long v39 = v56;
    long long v40 = v57;
    long long v41 = v58;
    long long v42 = v59;
    long long v35 = v52;
    long long v36 = v53;
    long long v37 = v54;
    long long v38 = v55;
    long long v31 = v48;
    long long v32 = v49;
    long long v33 = v50;
    long long v34 = v51;
    *(_OWORD *)&v67[99] = v60;
    *(_OWORD *)&v67[101] = v61;
    *(_OWORD *)&v67[103] = v62;
    *(_OWORD *)&v67[91] = v56;
    *(_OWORD *)&v67[93] = v57;
    *(_OWORD *)&v67[95] = v58;
    *(_OWORD *)&v67[97] = v59;
    *(_OWORD *)&v67[83] = v52;
    *(_OWORD *)&v67[85] = v53;
    *(_OWORD *)&v67[87] = v54;
    *(_OWORD *)&v67[89] = v55;
    *(_OWORD *)&v67[75] = v48;
    *(_OWORD *)&v67[77] = v49;
    uint64_t v46 = v63;
    *(_OWORD *)&v67[79] = v50;
    *(_OWORD *)&v67[81] = v51;
    v67[105] = v63;
    LOBYTE(v24[0]) = 2;
    sub_1005DF3EC((uint64_t)&v31);
    KeyedDecodingContainer.decode(_:forKey:)();
    int v16 = v15;
    sub_1005057FC((uint64_t *)&unk_1016892A0);
    LOBYTE(v23[0]) = 3;
    sub_100EC409C(&qword_1016A1520);
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    uint64_t v21 = v24[0];
    char v17 = v24[1];
    char v66 = v24[1];
    sub_1005057FC((uint64_t *)&unk_101687A40);
    char v29 = 4;
    sub_100557304();
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v11, v14);
    uint64_t v18 = v30;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    memcpy(v23, v64, 0x258uLL);
    *(_OWORD *)&v23[99] = v43;
    *(_OWORD *)&v23[101] = v44;
    *(_OWORD *)&v23[103] = v45;
    *(_OWORD *)&v23[91] = v39;
    *(_OWORD *)&v23[93] = v40;
    *(_OWORD *)&v23[95] = v41;
    *(_OWORD *)&v23[97] = v42;
    *(_OWORD *)&v23[83] = v35;
    *(_OWORD *)&v23[85] = v36;
    *(_OWORD *)&v23[87] = v37;
    *(_OWORD *)&v23[89] = v38;
    *(_OWORD *)&v23[75] = v31;
    *(_OWORD *)&v23[77] = v32;
    *(_OWORD *)&v23[79] = v33;
    *(_OWORD *)&v23[81] = v34;
    v23[105] = v46;
    LODWORD(v23[106]) = v16;
    uint64_t v19 = v21;
    v23[107] = v21;
    LOBYTE(v23[108]) = v17;
    v23[109] = v18;
    sub_100EC3D4C((uint64_t)v23);
    swift_bridgeObjectRelease();
    sub_10089B210((uint64_t)&v31);
    sub_10089B748((uint64_t)v64);
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v22);
    memcpy(v24, v67, sizeof(v24));
    int v25 = v16;
    uint64_t v26 = v19;
    char v27 = v66;
    uint64_t v28 = v18;
    sub_10089B2D0((uint64_t)v24);
    return memcpy(v6, v23, 0x370uLL);
  }
}

unint64_t sub_100EC3CF8()
{
  unint64_t result = qword_1016A1518;
  if (!qword_1016A1518)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A1518);
  }
  return result;
}

uint64_t sub_100EC3D4C(uint64_t a1)
{
  uint64_t v30 = *(void *)(a1 + 240);
  uint64_t v31 = *(void *)(a1 + 232);
  uint64_t v28 = *(void *)(a1 + 256);
  uint64_t v29 = *(void *)(a1 + 248);
  uint64_t v26 = *(void *)(a1 + 272);
  uint64_t v27 = *(void *)(a1 + 264);
  uint64_t v24 = *(void *)(a1 + 288);
  uint64_t v25 = *(void *)(a1 + 280);
  long long v19 = *(_OWORD *)(a1 + 296);
  long long v17 = *(_OWORD *)(a1 + 312);
  uint64_t v16 = *(void *)(a1 + 328);
  uint64_t v45 = *(void *)(a1 + 352);
  uint64_t v46 = *(void *)(a1 + 344);
  uint64_t v43 = *(void *)(a1 + 368);
  uint64_t v44 = *(void *)(a1 + 360);
  uint64_t v41 = *(void *)(a1 + 384);
  uint64_t v42 = *(void *)(a1 + 376);
  uint64_t v39 = *(void *)(a1 + 400);
  uint64_t v40 = *(void *)(a1 + 392);
  long long v23 = *(_OWORD *)(a1 + 408);
  long long v21 = *(_OWORD *)(a1 + 424);
  long long v48 = *(_OWORD *)(a1 + 744);
  long long v49 = *(_OWORD *)(a1 + 728);
  uint64_t v3 = *(void *)(a1 + 480);
  uint64_t v2 = *(void *)(a1 + 488);
  uint64_t v5 = *(void *)(a1 + 496);
  uint64_t v4 = *(void *)(a1 + 504);
  uint64_t v6 = *(void *)(a1 + 512);
  uint64_t v7 = *(void *)(a1 + 520);
  uint64_t v8 = *(void *)(a1 + 536);
  uint64_t v9 = *(void *)(a1 + 544);
  uint64_t v11 = *(void *)(a1 + 552);
  uint64_t v12 = *(void *)(a1 + 560);
  uint64_t v13 = *(void *)(a1 + 568);
  uint64_t v14 = *(void *)(a1 + 576);
  uint64_t v18 = *(void *)(a1 + 600);
  unint64_t v20 = *(void *)(a1 + 608);
  uint64_t v32 = *(void *)(a1 + 664);
  uint64_t v33 = *(void *)(a1 + 672);
  uint64_t v34 = *(void *)(a1 + 680);
  uint64_t v35 = *(void *)(a1 + 688);
  uint64_t v36 = *(void *)(a1 + 696);
  uint64_t v37 = *(void *)(a1 + 704);
  uint64_t v38 = *(void *)(a1 + 712);
  uint64_t v47 = *(void *)(a1 + 720);
  uint64_t v22 = *(void *)(a1 + 760);
  unsigned __int8 v15 = *(unsigned char *)(a1 + 616);
  sub_10051A1EC(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(void *)(a1 + 136), *(void *)(a1 + 144),
    *(void *)(a1 + 152),
    *(void *)(a1 + 160),
    *(void *)(a1 + 168),
    *(void *)(a1 + 176),
    *(void *)(a1 + 184),
    *(void *)(a1 + 192),
    *(void *)(a1 + 200));
  sub_10051B2E8(v31, v30, v29, v28, v27, v26, v25, v24, v19, *((uint64_t *)&v19 + 1), v17, *((uint64_t *)&v17 + 1), v16);
  sub_10051A364(v46, v45, v44, v43, v42, v41, v40, v39, v23, *((uint64_t *)&v23 + 1), v21);
  sub_10051B364(v3, v2, v5, v4, v6, v7);
  sub_10051B364(v8, v9, v11, v12, v13, v14);
  swift_bridgeObjectRetain();
  sub_10051B3B0(v18, v20, v15);
  sub_10051B2E8(v32, v33, v34, v35, v36, v37, v38, v47, v49, *((uint64_t *)&v49 + 1), v48, *((uint64_t *)&v48 + 1), v22);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

unint64_t sub_100EC4048()
{
  unint64_t result = qword_1016A1530;
  if (!qword_1016A1530)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A1530);
  }
  return result;
}

uint64_t sub_100EC409C(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100522D34((uint64_t *)&unk_1016892A0);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100EC4104()
{
  unint64_t result = qword_1016A1540;
  if (!qword_1016A1540)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A1540);
  }
  return result;
}

uint64_t sub_100EC4158(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unsigned char *storeEnumTagSinglePayload for CRLWPShapePresetData.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100EC4284);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLWPShapePresetData.CodingKeys()
{
  return &type metadata for CRLWPShapePresetData.CodingKeys;
}

uint64_t destroy for CRLShapePresetData(void *a1)
{
  if (a1[12])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (a1[18])
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    if (a1[25])
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
  }
  if (a1[41])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (a1[53])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (a1[65])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (a1[72])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for CRLShapePresetData(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 96);
  if (v4)
  {
    *(void *)a1 = *(void *)a2;
    *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
    *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
    *(unsigned char *)(a1 + 20) = *(unsigned char *)(a2 + 20);
    *(void *)(a1 + 24) = *(void *)(a2 + 24);
    *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
    *(void *)(a1 + 36) = *(void *)(a2 + 36);
    *(_DWORD *)(a1 + 44) = *(_DWORD *)(a2 + 44);
    *(void *)(a1 + 48) = *(void *)(a2 + 48);
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
    *(void *)(a1 + 72) = *(void *)(a2 + 72);
    *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
    *(void *)(a1 + 88) = *(void *)(a2 + 88);
    *(void *)(a1 + 96) = v4;
    *(_DWORD *)(a1 + 104) = *(_DWORD *)(a2 + 104);
    *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
    *(void *)(a1 + 112) = *(void *)(a2 + 112);
    *(unsigned char *)(a1 + 136) = *(unsigned char *)(a2 + 136);
    *(void *)(a1 + 128) = *(void *)(a2 + 128);
    *(_DWORD *)(a1 + 140) = *(_DWORD *)(a2 + 140);
    unsigned int v6 = (_OWORD *)(a2 + 144);
    uint64_t v5 = *(void *)(a2 + 144);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v5)
    {
      *(void *)(a1 + 144) = v5;
      *(_DWORD *)(a1 + 152) = *(_DWORD *)(a2 + 152);
      *(void *)(a1 + 160) = *(void *)(a2 + 160);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      *(_OWORD *)(a1 + 144) = *v6;
      *(void *)(a1 + 160) = *(void *)(a2 + 160);
    }
    *(void *)(a1 + 168) = *(void *)(a2 + 168);
    *(unsigned char *)(a1 + 176) = *(unsigned char *)(a2 + 176);
    *(void *)(a1 + 184) = *(void *)(a2 + 184);
    uint64_t v14 = *(void *)(a2 + 200);
    swift_bridgeObjectRetain();
    if (v14)
    {
      *(void *)(a1 + 192) = *(void *)(a2 + 192);
      *(void *)(a1 + 200) = v14;
      *(_DWORD *)(a1 + 208) = *(_DWORD *)(a2 + 208);
      *(unsigned char *)(a1 + 212) = *(unsigned char *)(a2 + 212);
      *(void *)(a1 + 216) = *(void *)(a2 + 216);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v15 = *(_OWORD *)(a2 + 208);
      *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
      *(_OWORD *)(a1 + 208) = v15;
    }
    *(void *)(a1 + 224) = *(void *)(a2 + 224);
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v7 = *(_OWORD *)(a2 + 208);
    *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
    *(_OWORD *)(a1 + 208) = v7;
    *(void *)(a1 + 224) = *(void *)(a2 + 224);
    long long v8 = *(_OWORD *)(a2 + 144);
    *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
    *(_OWORD *)(a1 + 144) = v8;
    long long v9 = *(_OWORD *)(a2 + 176);
    *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
    *(_OWORD *)(a1 + 176) = v9;
    long long v10 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 80) = v10;
    long long v11 = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 112) = v11;
    long long v12 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v12;
    long long v13 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v13;
  }
  uint64_t v16 = (void *)(a1 + 232);
  long long v17 = (void *)(a2 + 232);
  uint64_t v18 = *(void *)(a2 + 328);
  if (v18)
  {
    *uint64_t v16 = *v17;
    *(unsigned char *)(a1 + 240) = *(unsigned char *)(a2 + 240);
    *(_DWORD *)(a1 + 248) = *(_DWORD *)(a2 + 248);
    *(unsigned char *)(a1 + 252) = *(unsigned char *)(a2 + 252);
    *(void *)(a1 + 256) = *(void *)(a2 + 256);
    *(unsigned char *)(a1 + 264) = *(unsigned char *)(a2 + 264);
    *(_DWORD *)(a1 + 268) = *(_DWORD *)(a2 + 268);
    *(void *)(a1 + 272) = *(void *)(a2 + 272);
    *(void *)(a1 + 280) = *(void *)(a2 + 280);
    *(_OWORD *)(a1 + 288) = *(_OWORD *)(a2 + 288);
    *(void *)(a1 + 304) = *(void *)(a2 + 304);
    *(_DWORD *)(a1 + 312) = *(_DWORD *)(a2 + 312);
    *(void *)(a1 + 320) = *(void *)(a2 + 320);
    *(void *)(a1 + 328) = v18;
    *(void *)(a1 + 336) = *(void *)(a2 + 336);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v19 = *(_OWORD *)(a2 + 312);
    *(_OWORD *)(a1 + 296) = *(_OWORD *)(a2 + 296);
    *(_OWORD *)(a1 + 312) = v19;
    *(_OWORD *)(a1 + 328) = *(_OWORD *)(a2 + 328);
    long long v20 = *(_OWORD *)(a2 + 248);
    *(_OWORD *)uint64_t v16 = *(_OWORD *)v17;
    *(_OWORD *)(a1 + 248) = v20;
    long long v21 = *(_OWORD *)(a2 + 280);
    *(_OWORD *)(a1 + 264) = *(_OWORD *)(a2 + 264);
    *(_OWORD *)(a1 + 280) = v21;
  }
  uint64_t v22 = (_DWORD *)(a1 + 344);
  long long v23 = (_DWORD *)(a2 + 344);
  uint64_t v24 = *(void *)(a2 + 424);
  if (v24)
  {
    _DWORD *v22 = *v23;
    *(unsigned char *)(a1 + 348) = *(unsigned char *)(a2 + 348);
    *(void *)(a1 + 352) = *(void *)(a2 + 352);
    *(unsigned char *)(a1 + 360) = *(unsigned char *)(a2 + 360);
    *(_DWORD *)(a1 + 364) = *(_DWORD *)(a2 + 364);
    *(void *)(a1 + 368) = *(void *)(a2 + 368);
    *(void *)(a1 + 376) = *(void *)(a2 + 376);
    *(_OWORD *)(a1 + 384) = *(_OWORD *)(a2 + 384);
    *(void *)(a1 + 400) = *(void *)(a2 + 400);
    *(_DWORD *)(a1 + 408) = *(_DWORD *)(a2 + 408);
    *(void *)(a1 + 416) = *(void *)(a2 + 416);
    *(void *)(a1 + 424) = v24;
    *(_OWORD *)(a1 + 432) = *(_OWORD *)(a2 + 432);
    *(_DWORD *)(a1 + 448) = *(_DWORD *)(a2 + 448);
    uint64_t v25 = *(void *)(a2 + 464);
    *(void *)(a1 + 456) = *(void *)(a2 + 456);
    *(void *)(a1 + 464) = v25;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v26 = *(_OWORD *)(a2 + 424);
    *(_OWORD *)(a1 + 408) = *(_OWORD *)(a2 + 408);
    *(_OWORD *)(a1 + 424) = v26;
    long long v27 = *(_OWORD *)(a2 + 456);
    *(_OWORD *)(a1 + 440) = *(_OWORD *)(a2 + 440);
    *(_OWORD *)(a1 + 456) = v27;
    long long v28 = *(_OWORD *)(a2 + 360);
    *(_OWORD *)uint64_t v22 = *(_OWORD *)v23;
    *(_OWORD *)(a1 + 360) = v28;
    long long v29 = *(_OWORD *)(a2 + 392);
    *(_OWORD *)(a1 + 376) = *(_OWORD *)(a2 + 376);
    *(_OWORD *)(a1 + 392) = v29;
  }
  *(unsigned char *)(a1 + 472) = *(unsigned char *)(a2 + 472);
  uint64_t v30 = *(void *)(a2 + 520);
  if (!v30)
  {
    long long v33 = *(_OWORD *)(a2 + 496);
    *(_OWORD *)(a1 + 480) = *(_OWORD *)(a2 + 480);
    *(_OWORD *)(a1 + 496) = v33;
    *(_OWORD *)(a1 + 512) = *(_OWORD *)(a2 + 512);
    *(void *)(a1 + 528) = *(void *)(a2 + 528);
    uint64_t v32 = *(void *)(a2 + 576);
    if (v32) {
      goto LABEL_18;
    }
LABEL_20:
    long long v34 = *(_OWORD *)(a2 + 552);
    *(_OWORD *)(a1 + 536) = *(_OWORD *)(a2 + 536);
    *(_OWORD *)(a1 + 552) = v34;
    *(_OWORD *)(a1 + 568) = *(_OWORD *)(a2 + 568);
    *(void *)(a1 + 584) = *(void *)(a2 + 584);
    goto LABEL_21;
  }
  uint64_t v31 = *(void *)(a2 + 488);
  *(void *)(a1 + 480) = *(void *)(a2 + 480);
  *(void *)(a1 + 488) = v31;
  *(unsigned char *)(a1 + 496) = *(unsigned char *)(a2 + 496);
  *(void *)(a1 + 500) = *(void *)(a2 + 500);
  *(unsigned char *)(a1 + 508) = *(unsigned char *)(a2 + 508);
  *(void *)(a1 + 512) = *(void *)(a2 + 512);
  *(void *)(a1 + 520) = v30;
  *(void *)(a1 + 528) = *(void *)(a2 + 528);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v32 = *(void *)(a2 + 576);
  if (!v32) {
    goto LABEL_20;
  }
LABEL_18:
  *(void *)(a1 + 536) = *(void *)(a2 + 536);
  *(void *)(a1 + 544) = *(void *)(a2 + 544);
  *(unsigned char *)(a1 + 552) = *(unsigned char *)(a2 + 552);
  *(void *)(a1 + 556) = *(void *)(a2 + 556);
  *(unsigned char *)(a1 + 564) = *(unsigned char *)(a2 + 564);
  *(void *)(a1 + 568) = *(void *)(a2 + 568);
  *(void *)(a1 + 576) = v32;
  *(void *)(a1 + 584) = *(void *)(a2 + 584);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
LABEL_21:
  *(void *)(a1 + 592) = *(void *)(a2 + 592);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for CRLShapePresetData(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = a2[12];
  if (*(void *)(a1 + 96))
  {
    if (v4)
    {
      uint64_t v5 = *a2;
      *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
      *(void *)a1 = v5;
      LODWORD(v5) = *((_DWORD *)a2 + 4);
      *(unsigned char *)(a1 + 20) = *((unsigned char *)a2 + 20);
      *(_DWORD *)(a1 + 16) = v5;
      uint64_t v6 = a2[3];
      *(unsigned char *)(a1 + 32) = *((unsigned char *)a2 + 32);
      *(void *)(a1 + 24) = v6;
      *(_DWORD *)(a1 + 36) = *((_DWORD *)a2 + 9);
      *(_DWORD *)(a1 + 40) = *((_DWORD *)a2 + 10);
      *(_DWORD *)(a1 + 44) = *((_DWORD *)a2 + 11);
      *(void *)(a1 + 48) = a2[6];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_DWORD *)(a1 + 56) = *((_DWORD *)a2 + 14);
      *(_DWORD *)(a1 + 60) = *((_DWORD *)a2 + 15);
      *(_DWORD *)(a1 + 64) = *((_DWORD *)a2 + 16);
      *(_DWORD *)(a1 + 68) = *((_DWORD *)a2 + 17);
      *(void *)(a1 + 72) = a2[9];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_DWORD *)(a1 + 80) = *((_DWORD *)a2 + 20);
      *(void *)(a1 + 88) = a2[11];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 96) = a2[12];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      long long v7 = (_OWORD *)(a1 + 144);
      uint64_t v8 = *(void *)(a1 + 144);
      *(_DWORD *)(a1 + 104) = *((_DWORD *)a2 + 26);
      uint64_t v9 = a2[14];
      *(unsigned char *)(a1 + 120) = *((unsigned char *)a2 + 120);
      *(void *)(a1 + 112) = v9;
      uint64_t v10 = a2[16];
      *(unsigned char *)(a1 + 136) = *((unsigned char *)a2 + 136);
      *(void *)(a1 + 128) = v10;
      *(_DWORD *)(a1 + 140) = *((_DWORD *)a2 + 35);
      long long v12 = a2 + 18;
      uint64_t v11 = a2[18];
      if (v8)
      {
        if (v11)
        {
          *(void *)(a1 + 144) = v11;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(_DWORD *)(a1 + 152) = *((_DWORD *)a2 + 38);
          *(void *)(a1 + 160) = a2[20];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
        }
        else
        {
          sub_100A19AFC(a1 + 144);
          uint64_t v41 = a2[20];
          *long long v7 = *v12;
          *(void *)(a1 + 160) = v41;
        }
      }
      else if (v11)
      {
        *(void *)(a1 + 144) = v11;
        *(_DWORD *)(a1 + 152) = *((_DWORD *)a2 + 38);
        *(void *)(a1 + 160) = a2[20];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        long long v46 = *v12;
        *(void *)(a1 + 160) = a2[20];
        *long long v7 = v46;
      }
      uint64_t v47 = a2[21];
      *(unsigned char *)(a1 + 176) = *((unsigned char *)a2 + 176);
      *(void *)(a1 + 168) = v47;
      *(void *)(a1 + 184) = a2[23];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      long long v48 = (_OWORD *)(a1 + 192);
      long long v49 = a2 + 24;
      uint64_t v50 = a2[25];
      if (*(void *)(a1 + 200))
      {
        if (v50)
        {
          *(void *)(a1 + 192) = a2[24];
          *(void *)(a1 + 200) = a2[25];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(_DWORD *)(a1 + 208) = *((_DWORD *)a2 + 52);
          *(unsigned char *)(a1 + 212) = *((unsigned char *)a2 + 212);
          *(void *)(a1 + 216) = a2[27];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
        }
        else
        {
          sub_100A19B30(a1 + 192);
          long long v51 = *((_OWORD *)a2 + 13);
          *long long v48 = *v49;
          *(_OWORD *)(a1 + 208) = v51;
        }
      }
      else if (v50)
      {
        *(void *)(a1 + 192) = a2[24];
        *(void *)(a1 + 200) = a2[25];
        *(_DWORD *)(a1 + 208) = *((_DWORD *)a2 + 52);
        *(unsigned char *)(a1 + 212) = *((unsigned char *)a2 + 212);
        *(void *)(a1 + 216) = a2[27];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        long long v52 = *((_OWORD *)a2 + 13);
        *long long v48 = *v49;
        *(_OWORD *)(a1 + 208) = v52;
      }
      *(void *)(a1 + 224) = a2[28];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_100B409D8(a1);
      long long v20 = *((_OWORD *)a2 + 1);
      long long v19 = *((_OWORD *)a2 + 2);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v20;
      *(_OWORD *)(a1 + 32) = v19;
      long long v21 = *((_OWORD *)a2 + 6);
      long long v23 = *((_OWORD *)a2 + 3);
      long long v22 = *((_OWORD *)a2 + 4);
      *(_OWORD *)(a1 + 80) = *((_OWORD *)a2 + 5);
      *(_OWORD *)(a1 + 96) = v21;
      *(_OWORD *)(a1 + 48) = v23;
      *(_OWORD *)(a1 + 64) = v22;
      long long v24 = *((_OWORD *)a2 + 10);
      long long v26 = *((_OWORD *)a2 + 7);
      long long v25 = *((_OWORD *)a2 + 8);
      *(_OWORD *)(a1 + 144) = *((_OWORD *)a2 + 9);
      *(_OWORD *)(a1 + 160) = v24;
      *(_OWORD *)(a1 + 112) = v26;
      *(_OWORD *)(a1 + 128) = v25;
      long long v28 = *((_OWORD *)a2 + 12);
      long long v27 = *((_OWORD *)a2 + 13);
      long long v29 = *((_OWORD *)a2 + 11);
      *(void *)(a1 + 224) = a2[28];
      *(_OWORD *)(a1 + 192) = v28;
      *(_OWORD *)(a1 + 208) = v27;
      *(_OWORD *)(a1 + 176) = v29;
    }
  }
  else if (v4)
  {
    uint64_t v13 = *a2;
    *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
    *(void *)a1 = v13;
    LODWORD(v13) = *((_DWORD *)a2 + 4);
    *(unsigned char *)(a1 + 20) = *((unsigned char *)a2 + 20);
    *(_DWORD *)(a1 + 16) = v13;
    uint64_t v14 = a2[3];
    *(unsigned char *)(a1 + 32) = *((unsigned char *)a2 + 32);
    *(void *)(a1 + 24) = v14;
    *(_DWORD *)(a1 + 36) = *((_DWORD *)a2 + 9);
    *(_DWORD *)(a1 + 40) = *((_DWORD *)a2 + 10);
    *(_DWORD *)(a1 + 44) = *((_DWORD *)a2 + 11);
    *(void *)(a1 + 48) = a2[6];
    *(_DWORD *)(a1 + 56) = *((_DWORD *)a2 + 14);
    *(_DWORD *)(a1 + 60) = *((_DWORD *)a2 + 15);
    *(_DWORD *)(a1 + 64) = *((_DWORD *)a2 + 16);
    *(_DWORD *)(a1 + 68) = *((_DWORD *)a2 + 17);
    *(void *)(a1 + 72) = a2[9];
    *(_DWORD *)(a1 + 80) = *((_DWORD *)a2 + 20);
    *(void *)(a1 + 88) = a2[11];
    *(void *)(a1 + 96) = a2[12];
    *(_DWORD *)(a1 + 104) = *((_DWORD *)a2 + 26);
    uint64_t v15 = a2[14];
    *(unsigned char *)(a1 + 120) = *((unsigned char *)a2 + 120);
    *(void *)(a1 + 112) = v15;
    uint64_t v16 = a2[16];
    *(unsigned char *)(a1 + 136) = *((unsigned char *)a2 + 136);
    *(void *)(a1 + 128) = v16;
    *(_DWORD *)(a1 + 140) = *((_DWORD *)a2 + 35);
    uint64_t v18 = (long long *)(a2 + 18);
    uint64_t v17 = a2[18];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v17)
    {
      *(void *)(a1 + 144) = v17;
      *(_DWORD *)(a1 + 152) = *((_DWORD *)a2 + 38);
      *(void *)(a1 + 160) = a2[20];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v42 = *v18;
      *(void *)(a1 + 160) = a2[20];
      *(_OWORD *)(a1 + 144) = v42;
    }
    uint64_t v43 = a2[21];
    *(unsigned char *)(a1 + 176) = *((unsigned char *)a2 + 176);
    *(void *)(a1 + 168) = v43;
    *(void *)(a1 + 184) = a2[23];
    uint64_t v44 = a2[25];
    swift_bridgeObjectRetain();
    if (v44)
    {
      *(void *)(a1 + 192) = a2[24];
      *(void *)(a1 + 200) = a2[25];
      *(_DWORD *)(a1 + 208) = *((_DWORD *)a2 + 52);
      *(unsigned char *)(a1 + 212) = *((unsigned char *)a2 + 212);
      *(void *)(a1 + 216) = a2[27];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v45 = *((_OWORD *)a2 + 13);
      *(_OWORD *)(a1 + 192) = *((_OWORD *)a2 + 12);
      *(_OWORD *)(a1 + 208) = v45;
    }
    *(void *)(a1 + 224) = a2[28];
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v30 = *(_OWORD *)a2;
    long long v31 = *((_OWORD *)a2 + 2);
    *(_OWORD *)(a1 + 16) = *((_OWORD *)a2 + 1);
    *(_OWORD *)(a1 + 32) = v31;
    *(_OWORD *)a1 = v30;
    long long v32 = *((_OWORD *)a2 + 3);
    long long v33 = *((_OWORD *)a2 + 4);
    long long v34 = *((_OWORD *)a2 + 6);
    *(_OWORD *)(a1 + 80) = *((_OWORD *)a2 + 5);
    *(_OWORD *)(a1 + 96) = v34;
    *(_OWORD *)(a1 + 48) = v32;
    *(_OWORD *)(a1 + 64) = v33;
    long long v35 = *((_OWORD *)a2 + 7);
    long long v36 = *((_OWORD *)a2 + 8);
    long long v37 = *((_OWORD *)a2 + 10);
    *(_OWORD *)(a1 + 144) = *((_OWORD *)a2 + 9);
    *(_OWORD *)(a1 + 160) = v37;
    *(_OWORD *)(a1 + 112) = v35;
    *(_OWORD *)(a1 + 128) = v36;
    long long v38 = *((_OWORD *)a2 + 11);
    long long v39 = *((_OWORD *)a2 + 12);
    long long v40 = *((_OWORD *)a2 + 13);
    *(void *)(a1 + 224) = a2[28];
    *(_OWORD *)(a1 + 192) = v39;
    *(_OWORD *)(a1 + 208) = v40;
    *(_OWORD *)(a1 + 176) = v38;
  }
  long long v53 = (void *)(a1 + 232);
  long long v54 = a2 + 29;
  uint64_t v55 = a2[41];
  if (*(void *)(a1 + 328))
  {
    if (v55)
    {
      uint64_t v56 = *v54;
      *(unsigned char *)(a1 + 240) = *((unsigned char *)a2 + 240);
      *long long v53 = v56;
      LODWORD(v56) = *((_DWORD *)a2 + 62);
      *(unsigned char *)(a1 + 252) = *((unsigned char *)a2 + 252);
      *(_DWORD *)(a1 + 248) = v56;
      uint64_t v57 = a2[32];
      *(unsigned char *)(a1 + 264) = *((unsigned char *)a2 + 264);
      *(void *)(a1 + 256) = v57;
      *(_DWORD *)(a1 + 268) = *((_DWORD *)a2 + 67);
      *(_DWORD *)(a1 + 272) = *((_DWORD *)a2 + 68);
      *(_DWORD *)(a1 + 276) = *((_DWORD *)a2 + 69);
      *(void *)(a1 + 280) = a2[35];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_DWORD *)(a1 + 288) = *((_DWORD *)a2 + 72);
      *(_DWORD *)(a1 + 292) = *((_DWORD *)a2 + 73);
      *(_DWORD *)(a1 + 296) = *((_DWORD *)a2 + 74);
      *(_DWORD *)(a1 + 300) = *((_DWORD *)a2 + 75);
      *(void *)(a1 + 304) = a2[38];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_DWORD *)(a1 + 312) = *((_DWORD *)a2 + 78);
      *(void *)(a1 + 320) = a2[40];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 328) = a2[41];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 336) = a2[42];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1008EB164(a1 + 232);
      long long v61 = *(_OWORD *)(a2 + 31);
      long long v60 = *(_OWORD *)(a2 + 33);
      *(_OWORD *)long long v53 = *(_OWORD *)v54;
      *(_OWORD *)(a1 + 248) = v61;
      *(_OWORD *)(a1 + 264) = v60;
      long long v62 = *(_OWORD *)(a2 + 41);
      long long v64 = *(_OWORD *)(a2 + 35);
      long long v63 = *(_OWORD *)(a2 + 37);
      *(_OWORD *)(a1 + 312) = *(_OWORD *)(a2 + 39);
      *(_OWORD *)(a1 + 328) = v62;
      *(_OWORD *)(a1 + 280) = v64;
      *(_OWORD *)(a1 + 296) = v63;
    }
  }
  else if (v55)
  {
    uint64_t v58 = *v54;
    *(unsigned char *)(a1 + 240) = *((unsigned char *)a2 + 240);
    *long long v53 = v58;
    LODWORD(v58) = *((_DWORD *)a2 + 62);
    *(unsigned char *)(a1 + 252) = *((unsigned char *)a2 + 252);
    *(_DWORD *)(a1 + 248) = v58;
    uint64_t v59 = a2[32];
    *(unsigned char *)(a1 + 264) = *((unsigned char *)a2 + 264);
    *(void *)(a1 + 256) = v59;
    *(_DWORD *)(a1 + 268) = *((_DWORD *)a2 + 67);
    *(_DWORD *)(a1 + 272) = *((_DWORD *)a2 + 68);
    *(_DWORD *)(a1 + 276) = *((_DWORD *)a2 + 69);
    *(void *)(a1 + 280) = a2[35];
    *(_DWORD *)(a1 + 288) = *((_DWORD *)a2 + 72);
    *(_DWORD *)(a1 + 292) = *((_DWORD *)a2 + 73);
    *(_DWORD *)(a1 + 296) = *((_DWORD *)a2 + 74);
    *(_DWORD *)(a1 + 300) = *((_DWORD *)a2 + 75);
    *(void *)(a1 + 304) = a2[38];
    *(_DWORD *)(a1 + 312) = *((_DWORD *)a2 + 78);
    *(void *)(a1 + 320) = a2[40];
    *(void *)(a1 + 328) = a2[41];
    *(void *)(a1 + 336) = a2[42];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v65 = *(_OWORD *)v54;
    long long v66 = *(_OWORD *)(a2 + 33);
    *(_OWORD *)(a1 + 248) = *(_OWORD *)(a2 + 31);
    *(_OWORD *)(a1 + 264) = v66;
    *(_OWORD *)long long v53 = v65;
    long long v67 = *(_OWORD *)(a2 + 35);
    long long v68 = *(_OWORD *)(a2 + 37);
    long long v69 = *(_OWORD *)(a2 + 41);
    *(_OWORD *)(a1 + 312) = *(_OWORD *)(a2 + 39);
    *(_OWORD *)(a1 + 328) = v69;
    *(_OWORD *)(a1 + 280) = v67;
    *(_OWORD *)(a1 + 296) = v68;
  }
  long long v70 = (_DWORD *)(a1 + 344);
  uint64_t v71 = (int *)(a2 + 43);
  uint64_t v72 = a2[53];
  if (*(void *)(a1 + 424))
  {
    if (v72)
    {
      int v73 = *v71;
      *(unsigned char *)(a1 + 348) = *((unsigned char *)a2 + 348);
      *long long v70 = v73;
      uint64_t v74 = a2[44];
      *(unsigned char *)(a1 + 360) = *((unsigned char *)a2 + 360);
      *(void *)(a1 + 352) = v74;
      *(_DWORD *)(a1 + 364) = *((_DWORD *)a2 + 91);
      *(_DWORD *)(a1 + 368) = *((_DWORD *)a2 + 92);
      *(_DWORD *)(a1 + 372) = *((_DWORD *)a2 + 93);
      *(void *)(a1 + 376) = a2[47];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_DWORD *)(a1 + 384) = *((_DWORD *)a2 + 96);
      *(_DWORD *)(a1 + 388) = *((_DWORD *)a2 + 97);
      *(_DWORD *)(a1 + 392) = *((_DWORD *)a2 + 98);
      *(_DWORD *)(a1 + 396) = *((_DWORD *)a2 + 99);
      *(void *)(a1 + 400) = a2[50];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_DWORD *)(a1 + 408) = *((_DWORD *)a2 + 102);
      *(void *)(a1 + 416) = a2[52];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 424) = a2[53];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_DWORD *)(a1 + 432) = *((_DWORD *)a2 + 108);
      *(_DWORD *)(a1 + 436) = *((_DWORD *)a2 + 109);
      *(_DWORD *)(a1 + 440) = *((_DWORD *)a2 + 110);
      *(_DWORD *)(a1 + 444) = *((_DWORD *)a2 + 111);
      *(_DWORD *)(a1 + 448) = *((_DWORD *)a2 + 112);
      *(void *)(a1 + 456) = a2[57];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 464) = a2[58];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_100B40A2C(a1 + 344);
      long long v77 = *(_OWORD *)(a2 + 49);
      long long v79 = *(_OWORD *)v71;
      long long v78 = *(_OWORD *)(a2 + 45);
      *(_OWORD *)(a1 + 376) = *(_OWORD *)(a2 + 47);
      *(_OWORD *)(a1 + 392) = v77;
      *(_OWORD *)long long v70 = v79;
      *(_OWORD *)(a1 + 360) = v78;
      long long v80 = *(_OWORD *)(a2 + 57);
      long long v82 = *(_OWORD *)(a2 + 51);
      long long v81 = *(_OWORD *)(a2 + 53);
      *(_OWORD *)(a1 + 440) = *(_OWORD *)(a2 + 55);
      *(_OWORD *)(a1 + 456) = v80;
      *(_OWORD *)(a1 + 408) = v82;
      *(_OWORD *)(a1 + 424) = v81;
    }
  }
  else if (v72)
  {
    int v75 = *v71;
    *(unsigned char *)(a1 + 348) = *((unsigned char *)a2 + 348);
    *long long v70 = v75;
    uint64_t v76 = a2[44];
    *(unsigned char *)(a1 + 360) = *((unsigned char *)a2 + 360);
    *(void *)(a1 + 352) = v76;
    *(_DWORD *)(a1 + 364) = *((_DWORD *)a2 + 91);
    *(_DWORD *)(a1 + 368) = *((_DWORD *)a2 + 92);
    *(_DWORD *)(a1 + 372) = *((_DWORD *)a2 + 93);
    *(void *)(a1 + 376) = a2[47];
    *(_DWORD *)(a1 + 384) = *((_DWORD *)a2 + 96);
    *(_DWORD *)(a1 + 388) = *((_DWORD *)a2 + 97);
    *(_DWORD *)(a1 + 392) = *((_DWORD *)a2 + 98);
    *(_DWORD *)(a1 + 396) = *((_DWORD *)a2 + 99);
    *(void *)(a1 + 400) = a2[50];
    *(_DWORD *)(a1 + 408) = *((_DWORD *)a2 + 102);
    *(void *)(a1 + 416) = a2[52];
    *(void *)(a1 + 424) = a2[53];
    *(_DWORD *)(a1 + 432) = *((_DWORD *)a2 + 108);
    *(_DWORD *)(a1 + 436) = *((_DWORD *)a2 + 109);
    *(_DWORD *)(a1 + 440) = *((_DWORD *)a2 + 110);
    *(_DWORD *)(a1 + 444) = *((_DWORD *)a2 + 111);
    *(_DWORD *)(a1 + 448) = *((_DWORD *)a2 + 112);
    *(void *)(a1 + 456) = a2[57];
    *(void *)(a1 + 464) = a2[58];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v83 = *(_OWORD *)v71;
    long long v84 = *(_OWORD *)(a2 + 45);
    long long v85 = *(_OWORD *)(a2 + 49);
    *(_OWORD *)(a1 + 376) = *(_OWORD *)(a2 + 47);
    *(_OWORD *)(a1 + 392) = v85;
    *(_OWORD *)long long v70 = v83;
    *(_OWORD *)(a1 + 360) = v84;
    long long v86 = *(_OWORD *)(a2 + 51);
    long long v87 = *(_OWORD *)(a2 + 53);
    long long v88 = *(_OWORD *)(a2 + 57);
    *(_OWORD *)(a1 + 440) = *(_OWORD *)(a2 + 55);
    *(_OWORD *)(a1 + 456) = v88;
    *(_OWORD *)(a1 + 408) = v86;
    *(_OWORD *)(a1 + 424) = v87;
  }
  *(unsigned char *)(a1 + 472) = *((unsigned char *)a2 + 472);
  id v89 = (_OWORD *)(a1 + 480);
  uint64_t v90 = (long long *)(a2 + 60);
  uint64_t v91 = a2[65];
  if (*(void *)(a1 + 520))
  {
    if (v91)
    {
      *(void *)(a1 + 480) = a2[60];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v92 = a2[61];
      *(unsigned char *)(a1 + 496) = *((unsigned char *)a2 + 496);
      *(void *)(a1 + 488) = v92;
      *(_DWORD *)(a1 + 500) = *((_DWORD *)a2 + 125);
      *(_DWORD *)(a1 + 504) = *((_DWORD *)a2 + 126);
      *(unsigned char *)(a1 + 508) = *((unsigned char *)a2 + 508);
      *(void *)(a1 + 512) = a2[64];
      *(void *)(a1 + 520) = a2[65];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 528) = a2[66];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_100EBF468(a1 + 480);
      long long v95 = *((_OWORD *)a2 + 31);
      long long v94 = *((_OWORD *)a2 + 32);
      long long v96 = *v90;
      *(void *)(a1 + 528) = a2[66];
      *(_OWORD *)(a1 + 496) = v95;
      *(_OWORD *)(a1 + 512) = v94;
      *id v89 = v96;
    }
  }
  else if (v91)
  {
    *(void *)(a1 + 480) = a2[60];
    uint64_t v93 = a2[61];
    *(unsigned char *)(a1 + 496) = *((unsigned char *)a2 + 496);
    *(void *)(a1 + 488) = v93;
    *(void *)(a1 + 500) = *(uint64_t *)((char *)a2 + 500);
    *(unsigned char *)(a1 + 508) = *((unsigned char *)a2 + 508);
    *(void *)(a1 + 512) = a2[64];
    *(void *)(a1 + 520) = a2[65];
    *(void *)(a1 + 528) = a2[66];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v97 = *v90;
    long long v98 = *((_OWORD *)a2 + 31);
    long long v99 = *((_OWORD *)a2 + 32);
    *(void *)(a1 + 528) = a2[66];
    *(_OWORD *)(a1 + 496) = v98;
    *(_OWORD *)(a1 + 512) = v99;
    *id v89 = v97;
  }
  uint64_t v100 = (_OWORD *)(a1 + 536);
  uint64_t v101 = (long long *)(a2 + 67);
  uint64_t v102 = a2[72];
  if (*(void *)(a1 + 576))
  {
    if (v102)
    {
      *(void *)(a1 + 536) = a2[67];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v103 = a2[68];
      *(unsigned char *)(a1 + 552) = *((unsigned char *)a2 + 552);
      *(void *)(a1 + 544) = v103;
      *(_DWORD *)(a1 + 556) = *((_DWORD *)a2 + 139);
      *(_DWORD *)(a1 + 560) = *((_DWORD *)a2 + 140);
      *(unsigned char *)(a1 + 564) = *((unsigned char *)a2 + 564);
      *(void *)(a1 + 568) = a2[71];
      *(void *)(a1 + 576) = a2[72];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 584) = a2[73];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_100EBF468(a1 + 536);
      long long v106 = *(_OWORD *)(a2 + 69);
      long long v105 = *(_OWORD *)(a2 + 71);
      long long v107 = *v101;
      *(void *)(a1 + 584) = a2[73];
      *(_OWORD *)(a1 + 552) = v106;
      *(_OWORD *)(a1 + 568) = v105;
      *uint64_t v100 = v107;
    }
  }
  else if (v102)
  {
    *(void *)(a1 + 536) = a2[67];
    uint64_t v104 = a2[68];
    *(unsigned char *)(a1 + 552) = *((unsigned char *)a2 + 552);
    *(void *)(a1 + 544) = v104;
    *(void *)(a1 + 556) = *(uint64_t *)((char *)a2 + 556);
    *(unsigned char *)(a1 + 564) = *((unsigned char *)a2 + 564);
    *(void *)(a1 + 568) = a2[71];
    *(void *)(a1 + 576) = a2[72];
    *(void *)(a1 + 584) = a2[73];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v108 = *v101;
    long long v109 = *(_OWORD *)(a2 + 69);
    long long v110 = *(_OWORD *)(a2 + 71);
    *(void *)(a1 + 584) = a2[73];
    *(_OWORD *)(a1 + 552) = v109;
    *(_OWORD *)(a1 + 568) = v110;
    *uint64_t v100 = v108;
  }
  *(void *)(a1 + 592) = a2[74];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *initializeWithTake for CRLShapePresetData(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x258uLL);
}

uint64_t assignWithTake for CRLShapePresetData(uint64_t a1, uint64_t a2)
{
  if (!*(void *)(a1 + 96)) {
    goto LABEL_7;
  }
  if (!*(void *)(a2 + 96))
  {
    sub_100B409D8(a1);
LABEL_7:
    long long v6 = *(_OWORD *)(a2 + 208);
    *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
    *(_OWORD *)(a1 + 208) = v6;
    *(void *)(a1 + 224) = *(void *)(a2 + 224);
    long long v7 = *(_OWORD *)(a2 + 144);
    *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
    *(_OWORD *)(a1 + 144) = v7;
    long long v8 = *(_OWORD *)(a2 + 176);
    *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
    *(_OWORD *)(a1 + 176) = v8;
    long long v9 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 80) = v9;
    long long v10 = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 112) = v10;
    long long v11 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v11;
    long long v12 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v12;
    goto LABEL_16;
  }
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(unsigned char *)(a1 + 20) = *(unsigned char *)(a2 + 20);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 36) = *(void *)(a2 + 36);
  *(_DWORD *)(a1 + 44) = *(_DWORD *)(a2 + 44);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 144);
  uint64_t v5 = *(void *)(a1 + 144);
  *(_DWORD *)(a1 + 104) = *(_DWORD *)(a2 + 104);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(unsigned char *)(a1 + 136) = *(unsigned char *)(a2 + 136);
  *(_DWORD *)(a1 + 140) = *(_DWORD *)(a2 + 140);
  if (v5)
  {
    if (v4)
    {
      *(void *)(a1 + 144) = v4;
      swift_bridgeObjectRelease();
      *(_DWORD *)(a1 + 152) = *(_DWORD *)(a2 + 152);
      *(void *)(a1 + 160) = *(void *)(a2 + 160);
      swift_bridgeObjectRelease();
      goto LABEL_10;
    }
    sub_100A19AFC(a1 + 144);
  }
  *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
LABEL_10:
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  *(unsigned char *)(a1 + 176) = *(unsigned char *)(a2 + 176);
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  swift_bridgeObjectRelease();
  if (!*(void *)(a1 + 200))
  {
LABEL_14:
    long long v14 = *(_OWORD *)(a2 + 208);
    *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
    *(_OWORD *)(a1 + 208) = v14;
    goto LABEL_15;
  }
  uint64_t v13 = *(void *)(a2 + 200);
  if (!v13)
  {
    sub_100A19B30(a1 + 192);
    goto LABEL_14;
  }
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  *(void *)(a1 + 200) = v13;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 208) = *(_DWORD *)(a2 + 208);
  *(unsigned char *)(a1 + 212) = *(unsigned char *)(a2 + 212);
  *(void *)(a1 + 216) = *(void *)(a2 + 216);
  swift_bridgeObjectRelease();
LABEL_15:
  *(void *)(a1 + 224) = *(void *)(a2 + 224);
  swift_bridgeObjectRelease();
LABEL_16:
  uint64_t v15 = (void *)(a1 + 232);
  uint64_t v16 = (void *)(a2 + 232);
  if (*(void *)(a1 + 328))
  {
    if (*(void *)(a2 + 328))
    {
      *uint64_t v15 = *v16;
      *(unsigned char *)(a1 + 240) = *(unsigned char *)(a2 + 240);
      *(_DWORD *)(a1 + 248) = *(_DWORD *)(a2 + 248);
      *(unsigned char *)(a1 + 252) = *(unsigned char *)(a2 + 252);
      *(void *)(a1 + 256) = *(void *)(a2 + 256);
      *(unsigned char *)(a1 + 264) = *(unsigned char *)(a2 + 264);
      *(_DWORD *)(a1 + 268) = *(_DWORD *)(a2 + 268);
      *(void *)(a1 + 272) = *(void *)(a2 + 272);
      *(void *)(a1 + 280) = *(void *)(a2 + 280);
      swift_bridgeObjectRelease();
      *(_OWORD *)(a1 + 288) = *(_OWORD *)(a2 + 288);
      *(void *)(a1 + 304) = *(void *)(a2 + 304);
      swift_bridgeObjectRelease();
      *(_DWORD *)(a1 + 312) = *(_DWORD *)(a2 + 312);
      *(void *)(a1 + 320) = *(void *)(a2 + 320);
      swift_bridgeObjectRelease();
      *(void *)(a1 + 328) = *(void *)(a2 + 328);
      swift_bridgeObjectRelease();
      *(void *)(a1 + 336) = *(void *)(a2 + 336);
      swift_bridgeObjectRelease();
      goto LABEL_21;
    }
    sub_1008EB164(a1 + 232);
  }
  long long v17 = *(_OWORD *)(a2 + 312);
  *(_OWORD *)(a1 + 296) = *(_OWORD *)(a2 + 296);
  *(_OWORD *)(a1 + 312) = v17;
  *(_OWORD *)(a1 + 328) = *(_OWORD *)(a2 + 328);
  long long v18 = *(_OWORD *)(a2 + 248);
  *(_OWORD *)uint64_t v15 = *(_OWORD *)v16;
  *(_OWORD *)(a1 + 248) = v18;
  long long v19 = *(_OWORD *)(a2 + 280);
  *(_OWORD *)(a1 + 264) = *(_OWORD *)(a2 + 264);
  *(_OWORD *)(a1 + 280) = v19;
LABEL_21:
  long long v20 = (_DWORD *)(a1 + 344);
  long long v21 = (_DWORD *)(a2 + 344);
  if (*(void *)(a1 + 424))
  {
    if (*(void *)(a2 + 424))
    {
      *long long v20 = *v21;
      *(unsigned char *)(a1 + 348) = *(unsigned char *)(a2 + 348);
      *(void *)(a1 + 352) = *(void *)(a2 + 352);
      *(unsigned char *)(a1 + 360) = *(unsigned char *)(a2 + 360);
      *(_DWORD *)(a1 + 364) = *(_DWORD *)(a2 + 364);
      *(void *)(a1 + 368) = *(void *)(a2 + 368);
      *(void *)(a1 + 376) = *(void *)(a2 + 376);
      swift_bridgeObjectRelease();
      *(_OWORD *)(a1 + 384) = *(_OWORD *)(a2 + 384);
      *(void *)(a1 + 400) = *(void *)(a2 + 400);
      swift_bridgeObjectRelease();
      *(_DWORD *)(a1 + 408) = *(_DWORD *)(a2 + 408);
      *(void *)(a1 + 416) = *(void *)(a2 + 416);
      swift_bridgeObjectRelease();
      *(void *)(a1 + 424) = *(void *)(a2 + 424);
      swift_bridgeObjectRelease();
      *(_OWORD *)(a1 + 432) = *(_OWORD *)(a2 + 432);
      *(_DWORD *)(a1 + 448) = *(_DWORD *)(a2 + 448);
      *(void *)(a1 + 456) = *(void *)(a2 + 456);
      swift_bridgeObjectRelease();
      *(void *)(a1 + 464) = *(void *)(a2 + 464);
      swift_bridgeObjectRelease();
      goto LABEL_26;
    }
    sub_100B40A2C(a1 + 344);
  }
  long long v22 = *(_OWORD *)(a2 + 424);
  *(_OWORD *)(a1 + 408) = *(_OWORD *)(a2 + 408);
  *(_OWORD *)(a1 + 424) = v22;
  long long v23 = *(_OWORD *)(a2 + 456);
  *(_OWORD *)(a1 + 440) = *(_OWORD *)(a2 + 440);
  *(_OWORD *)(a1 + 456) = v23;
  long long v24 = *(_OWORD *)(a2 + 360);
  *(_OWORD *)long long v20 = *(_OWORD *)v21;
  *(_OWORD *)(a1 + 360) = v24;
  long long v25 = *(_OWORD *)(a2 + 392);
  *(_OWORD *)(a1 + 376) = *(_OWORD *)(a2 + 376);
  *(_OWORD *)(a1 + 392) = v25;
LABEL_26:
  *(unsigned char *)(a1 + 472) = *(unsigned char *)(a2 + 472);
  if (*(void *)(a1 + 520))
  {
    if (*(void *)(a2 + 520))
    {
      *(void *)(a1 + 480) = *(void *)(a2 + 480);
      swift_bridgeObjectRelease();
      *(void *)(a1 + 488) = *(void *)(a2 + 488);
      *(unsigned char *)(a1 + 496) = *(unsigned char *)(a2 + 496);
      *(_DWORD *)(a1 + 500) = *(_DWORD *)(a2 + 500);
      *(_DWORD *)(a1 + 504) = *(_DWORD *)(a2 + 504);
      *(unsigned char *)(a1 + 508) = *(unsigned char *)(a2 + 508);
      *(void *)(a1 + 512) = *(void *)(a2 + 512);
      *(void *)(a1 + 520) = *(void *)(a2 + 520);
      swift_bridgeObjectRelease();
      *(void *)(a1 + 528) = *(void *)(a2 + 528);
      swift_bridgeObjectRelease();
      goto LABEL_31;
    }
    sub_100EBF468(a1 + 480);
  }
  long long v26 = *(_OWORD *)(a2 + 496);
  *(_OWORD *)(a1 + 480) = *(_OWORD *)(a2 + 480);
  *(_OWORD *)(a1 + 496) = v26;
  *(_OWORD *)(a1 + 512) = *(_OWORD *)(a2 + 512);
  *(void *)(a1 + 528) = *(void *)(a2 + 528);
LABEL_31:
  if (!*(void *)(a1 + 576))
  {
LABEL_35:
    long long v27 = *(_OWORD *)(a2 + 552);
    *(_OWORD *)(a1 + 536) = *(_OWORD *)(a2 + 536);
    *(_OWORD *)(a1 + 552) = v27;
    *(_OWORD *)(a1 + 568) = *(_OWORD *)(a2 + 568);
    *(void *)(a1 + 584) = *(void *)(a2 + 584);
    goto LABEL_36;
  }
  if (!*(void *)(a2 + 576))
  {
    sub_100EBF468(a1 + 536);
    goto LABEL_35;
  }
  *(void *)(a1 + 536) = *(void *)(a2 + 536);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 544) = *(void *)(a2 + 544);
  *(unsigned char *)(a1 + 552) = *(unsigned char *)(a2 + 552);
  *(_DWORD *)(a1 + 556) = *(_DWORD *)(a2 + 556);
  *(_DWORD *)(a1 + 560) = *(_DWORD *)(a2 + 560);
  *(unsigned char *)(a1 + 564) = *(unsigned char *)(a2 + 564);
  *(void *)(a1 + 568) = *(void *)(a2 + 568);
  *(void *)(a1 + 576) = *(void *)(a2 + 576);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 584) = *(void *)(a2 + 584);
  swift_bridgeObjectRelease();
LABEL_36:
  *(void *)(a1 + 592) = *(void *)(a2 + 592);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for CRLShapePresetData(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 600)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 592);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CRLShapePresetData(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 584) = 0u;
    *(_OWORD *)(result + 568) = 0u;
    *(_OWORD *)(result + 552) = 0u;
    *(_OWORD *)(result + 536) = 0u;
    *(_OWORD *)(result + 520) = 0u;
    *(_OWORD *)(result + 504) = 0u;
    *(_OWORD *)(result + 488) = 0u;
    *(_OWORD *)(result + 472) = 0u;
    *(_OWORD *)(result + 456) = 0u;
    *(_OWORD *)(result + 440) = 0u;
    *(_OWORD *)(result + 424) = 0u;
    *(_OWORD *)(result + 408) = 0u;
    *(_OWORD *)(result + 392) = 0u;
    *(_OWORD *)(result + 376) = 0u;
    *(_OWORD *)(result + 360) = 0u;
    *(_OWORD *)(result + 344) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 600) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 592) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 600) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLShapePresetData()
{
  return &type metadata for CRLShapePresetData;
}

unint64_t sub_100EC5B78()
{
  unint64_t result = qword_1016A1548;
  if (!qword_1016A1548)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A1548);
  }
  return result;
}

unint64_t sub_100EC5BDC()
{
  unint64_t result = qword_1016A1550;
  if (!qword_1016A1550)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A1550);
  }
  return result;
}

unint64_t sub_100EC5C34()
{
  unint64_t result = qword_1016A1558;
  if (!qword_1016A1558)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A1558);
  }
  return result;
}

unint64_t sub_100EC5C8C()
{
  unint64_t result = qword_1016A1560;
  if (!qword_1016A1560)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A1560);
  }
  return result;
}

unint64_t sub_100EC5CE4()
{
  unint64_t result = qword_1016A1568;
  if (!qword_1016A1568)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A1568);
  }
  return result;
}

unint64_t sub_100EC5D3C()
{
  unint64_t result = qword_1016A1570;
  if (!qword_1016A1570)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A1570);
  }
  return result;
}

unint64_t sub_100EC5D94()
{
  unint64_t result = qword_1016A1578;
  if (!qword_1016A1578)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A1578);
  }
  return result;
}

uint64_t sub_100EC5DE8()
{
  return sub_1006BFA64(&qword_1016A1580, &qword_1016A1588);
}

unint64_t sub_100EC5E14()
{
  unint64_t result = qword_1016A1590;
  if (!qword_1016A1590)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A1590);
  }
  return result;
}

unint64_t sub_100EC5E6C()
{
  unint64_t result = qword_1016A1598;
  if (!qword_1016A1598)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A1598);
  }
  return result;
}

unint64_t sub_100EC5EC4()
{
  unint64_t result = qword_1016A15A0;
  if (!qword_1016A15A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A15A0);
  }
  return result;
}

uint64_t sub_100EC5F18(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x656B6F727473 && a2 == 0xE600000000000000;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1819044198 && a2 == 0xE400000000000000 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x776F64616873 && a2 == 0xE600000000000000 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x8000000101294690 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x656E694C7466656CLL && a2 == 0xEB00000000646E45 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6E694C7468676972 && a2 == 0xEC000000646E4565 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x800000010123A720)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v6) {
      return 6;
    }
    else {
      return 7;
    }
  }
}

void *sub_100EC6208@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = sub_1005057FC(&qword_1016A15A8);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5, v7);
  long long v9 = (char *)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v77[74] = _swiftEmptyDictionarySingleton;
  uint64_t v10 = a1[3];
  long long v70 = a1;
  sub_10050F848(a1, v10);
  sub_100EC5CE4();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v2)
  {
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v70);
    return (void *)swift_bridgeObjectRelease();
  }
  else
  {
    long long v68 = a2;
    uint64_t v69 = v6;
    char v81 = 0;
    sub_100A1D594();
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
    sub_10051B3EC((uint64_t)&v76, (uint64_t)v75, (uint64_t *)&unk_101685110);
    sub_10051B3EC((uint64_t)v75, (uint64_t)v77, (uint64_t *)&unk_101685110);
    LOBYTE(v71[0]) = 1;
    sub_100AA0D80(v75, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_10051A1EC);
    sub_1008F0438();
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
    uint64_t v11 = v72[0];
    uint64_t v12 = v72[11];
    uint64_t v13 = v72[12];
    uint64_t v14 = v72[13];
    v77[29] = v72[0];
    v77[30] = v72[1];
    v77[31] = v72[2];
    v77[32] = v72[3];
    v77[33] = v72[4];
    v77[34] = v72[5];
    v77[35] = v72[6];
    v77[36] = v72[7];
    v77[37] = v72[8];
    v77[38] = v72[9];
    v77[39] = v72[10];
    v77[40] = v72[11];
    v77[41] = v72[12];
    v77[42] = v72[13];
    char v80 = 2;
    uint64_t v58 = v72[10];
    uint64_t v59 = v72[9];
    uint64_t v60 = v72[8];
    uint64_t v61 = v72[1];
    uint64_t v62 = v72[2];
    uint64_t v63 = v72[3];
    uint64_t v64 = v72[4];
    uint64_t v66 = v72[5];
    uint64_t v67 = v72[6];
    uint64_t v65 = v72[7];
    sub_10051B2E8(v72[0], v72[1], v72[2], v72[3], v72[4], v72[5], v72[6], v72[7], v72[8], v72[9], v72[10], v72[11], v72[12]);
    sub_10093C89C();
    uint64_t v57 = 0;
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
    uint64_t v53 = v14;
    uint64_t v54 = v13;
    uint64_t v55 = v12;
    uint64_t v56 = v11;
    sub_10051B3EC((uint64_t)&v74, (uint64_t)v73, (uint64_t *)&unk_101683E20);
    sub_10051B3EC((uint64_t)v73, (uint64_t)&v77[43], (uint64_t *)&unk_101683E20);
    LOBYTE(v72[0]) = 3;
    sub_100EC257C(v73, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_10051A364);
    char v15 = KeyedDecodingContainer.decode(_:forKey:)();
    LODWORD(v14) = v15 & 1;
    LOBYTE(v77[59]) = v15 & 1;
    LOBYTE(v71[0]) = 4;
    sub_10089CB00();
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
    int v78 = v14;
    uint64_t v16 = v72[4];
    uint64_t v17 = v72[5];
    uint64_t v18 = v72[6];
    v77[60] = v72[0];
    v77[61] = v72[1];
    v77[62] = v72[2];
    v77[63] = v72[3];
    v77[64] = v72[4];
    v77[65] = v72[5];
    v77[66] = v72[6];
    LOBYTE(v71[0]) = 5;
    uint64_t v49 = v72[0];
    uint64_t v50 = v72[1];
    uint64_t v51 = v72[2];
    uint64_t v52 = v72[3];
    sub_10051B364(v72[0], v72[1], v72[2], v72[3], v72[4], v72[5]);
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
    uint64_t v45 = v18;
    uint64_t v46 = v16;
    uint64_t v47 = v17;
    uint64_t v19 = v72[0];
    uint64_t v20 = v72[1];
    uint64_t v21 = v72[2];
    uint64_t v22 = v72[3];
    uint64_t v48 = v72[4];
    uint64_t v42 = v72[5];
    uint64_t v43 = v72[6];
    v77[67] = v72[0];
    v77[68] = v72[1];
    v77[69] = v72[2];
    v77[70] = v72[3];
    v77[71] = v72[4];
    v77[72] = v72[5];
    v77[73] = v72[6];
    uint64_t v44 = sub_1005057FC((uint64_t *)&unk_101687A40);
    char v79 = 6;
    uint64_t v38 = v19;
    uint64_t v39 = v20;
    uint64_t v23 = v20;
    uint64_t v24 = v48;
    uint64_t v40 = v21;
    uint64_t v41 = v22;
    uint64_t v25 = v21;
    uint64_t v26 = v22;
    uint64_t v27 = v42;
    uint64_t v28 = v43;
    sub_10051B364(v19, v23, v25, v26, v48, v42);
    sub_100557304();
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    (*(void (**)(char *, uint64_t))(v69 + 8))(v9, v5);
    uint64_t v29 = v72[75];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v77[74] = v29;
    sub_10051B3EC((uint64_t)v75, (uint64_t)v71, (uint64_t *)&unk_101685110);
    v71[29] = v56;
    v71[30] = v61;
    v71[31] = v62;
    v71[32] = v63;
    v71[33] = v64;
    v71[34] = v66;
    v71[35] = v67;
    v71[36] = v65;
    v71[37] = v60;
    v71[38] = v59;
    v71[39] = v58;
    v71[40] = v55;
    v71[41] = v54;
    v71[42] = v53;
    sub_10051B3EC((uint64_t)v73, (uint64_t)&v71[43], (uint64_t *)&unk_101683E20);
    LOBYTE(v71[59]) = v78;
    v71[60] = v49;
    v71[61] = v50;
    v71[62] = v51;
    v71[63] = v52;
    uint64_t v30 = v24;
    v71[64] = v46;
    uint64_t v31 = v27;
    uint64_t v32 = v38;
    uint64_t v33 = v39;
    v71[65] = v47;
    uint64_t v34 = v28;
    uint64_t v36 = v40;
    uint64_t v35 = v41;
    v71[66] = v45;
    v71[67] = v38;
    v71[68] = v39;
    v71[69] = v40;
    v71[70] = v41;
    v71[71] = v30;
    v71[72] = v31;
    v71[73] = v34;
    v71[74] = v29;
    sub_10089B968((uint64_t)v71);
    swift_bridgeObjectRelease();
    sub_10051AC38(v32, v33, v36, v35, v48, v31);
    sub_10051AC38(v49, v50, v51, v52, v46, v47);
    sub_100EC257C(v73, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_10051A0B8);
    sub_10051ABBC(v56, v61, v62, v63, v64, v66, v67, v65, v60, v59, v58, v55, v54);
    sub_100AA0D80(v75, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_100519F40);
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v70);
    memcpy(v72, v77, 0x258uLL);
    sub_10089B748((uint64_t)v72);
    return memcpy(v68, v71, 0x258uLL);
  }
}

unint64_t sub_100EC6E6C()
{
  unint64_t result = qword_1016A15B8;
  if (!qword_1016A15B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A15B8);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for CRLShapePresetData.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *unint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100EC6F8CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLShapePresetData.CodingKeys()
{
  return &type metadata for CRLShapePresetData.CodingKeys;
}

unint64_t sub_100EC6FC8()
{
  unint64_t result = qword_1016A15C0;
  if (!qword_1016A15C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A15C0);
  }
  return result;
}

uint64_t sub_100EC701C()
{
  sub_100510028(v0 + OBJC_IVAR____TtC8Freeform23CRLBoardShareSyncRecord_boardIdentifier);

  return swift_deallocClassInstance();
}

uint64_t sub_100EC7090()
{
  return type metadata accessor for CRLBoardShareSyncRecord(0);
}

uint64_t type metadata accessor for CRLBoardShareSyncRecord(uint64_t a1)
{
  return sub_100512D5C(a1, qword_1016A15F0);
}

uint64_t sub_100EC70B8()
{
  uint64_t result = type metadata accessor for CRLBoardIdentifierStorage(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_100EC7158()
{
  return type metadata accessor for CRLBoardShareSyncLocalChangeRecord(0);
}

uint64_t type metadata accessor for CRLBoardShareSyncLocalChangeRecord(uint64_t a1)
{
  return sub_100512D5C(a1, qword_1016A16A8);
}

uint64_t sub_100EC7180()
{
  return swift_updateClassMetadata2();
}

uint64_t sub_100EC71C4()
{
  return type metadata accessor for CRLBoardShareSyncRemoteRecord(0);
}

uint64_t type metadata accessor for CRLBoardShareSyncRemoteRecord(uint64_t a1)
{
  return sub_100512D5C(a1, qword_1016A1788);
}

uint64_t sub_100EC71EC()
{
  return swift_updateClassMetadata2();
}

uint64_t sub_100EC7224()
{
  sub_100510028(v0 + OBJC_IVAR____TtC8Freeform39CRLBoardShareSyncRemoteRecordIdentifier_boardIdentifier);

  return swift_deallocClassInstance();
}

uint64_t sub_100EC7288()
{
  return type metadata accessor for CRLBoardShareSyncRemoteRecordIdentifier(0);
}

uint64_t type metadata accessor for CRLBoardShareSyncRemoteRecordIdentifier(uint64_t a1)
{
  return sub_100512D5C(a1, qword_1016A1840);
}

uint64_t sub_100EC72B0()
{
  uint64_t v0 = sub_1005057FC((uint64_t *)&unk_101674160);
  __chkstk_darwin(v0 - 8, v1);
  int v3 = (char *)&v25 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for CRLProto_Data(0);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4, v6);
  uint64_t v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9, v10);
  uint64_t v12 = (long long *)((char *)&v25 - v11);
  uint64_t v13 = type metadata accessor for CRLProto_BoardItemIdentifier(0);
  __chkstk_darwin(v13, v14);
  uint64_t v16 = (char *)&v25 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  UnknownStorage.init()();
  uint64_t v27 = v13;
  uint64_t v17 = (uint64_t)&v16[*(int *)(v13 + 20)];
  uint64_t v18 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 56);
  v18(v17, 1, 1, v4);
  long long v25 = xmmword_101180360;
  _OWORD *v12 = xmmword_101180360;
  UnknownStorage.init()();
  sub_1008A9D98(v17);
  sub_1005CC5B8((uint64_t)v12, v17);
  uint64_t v26 = v18;
  v18(v17, 0, 1, v4);
  uint64_t v19 = (uint64_t)v3;
  uint64_t v20 = UUID.crl_data()();
  uint64_t v22 = v21;
  sub_1005CC4F0(v17, v19);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v19, 1, v4) == 1)
  {
    *(_OWORD *)uint64_t v8 = v25;
    UnknownStorage.init()();
    sub_1008A9D98(v19);
  }
  else
  {
    sub_1005CC5B8(v19, (uint64_t)v8);
  }
  sub_100510084(*(void *)v8, *((void *)v8 + 1));
  *(void *)uint64_t v8 = v20;
  *((void *)v8 + 1) = v22;
  sub_1008A9D98(v17);
  sub_1005CC5B8((uint64_t)v8, v17);
  v26(v17, 0, 1, v4);
  sub_100EC759C();
  uint64_t v23 = Message.serializedData(partial:)();
  sub_100EC75F4((uint64_t)v16);
  return v23;
}

unint64_t sub_100EC759C()
{
  unint64_t result = qword_101673FA0;
  if (!qword_101673FA0)
  {
    type metadata accessor for CRLProto_BoardItemIdentifier(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101673FA0);
  }
  return result;
}

uint64_t sub_100EC75F4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for CRLProto_BoardItemIdentifier(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100EC7650(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100EC7664);
}

uint64_t sub_100EC7664(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UUID();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t sub_100EC76D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100EC76E4);
}

uint64_t sub_100EC76E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UUID();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

uint64_t type metadata accessor for CRLServerSyncedPeerAddedItemEvent()
{
  uint64_t result = qword_1016A1920;
  if (!qword_1016A1920) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100EC77B4(char a1)
{
  if (a1)
  {
    char v3 = sub_100CEB290();
    uint64_t v4 = self;
    if (objc_msgSend(v4, "crl_iPadDevice"))
    {
      if (v3)
      {
LABEL_5:
        id v1 = [self mainBundle];
LABEL_8:
        NSString v2 = String._bridgeToObjectiveC()();
        goto LABEL_9;
      }
    }
    else if (v3)
    {
      goto LABEL_5;
    }
    [v4 crl_iPadDevice];
    id v1 = [self mainBundle];
    goto LABEL_8;
  }
  id v1 = [self mainBundle];
  NSString v2 = String._bridgeToObjectiveC()();
LABEL_9:
  NSString v5 = String._bridgeToObjectiveC()();
  id v6 = [v1 localizedStringForKey:v2 value:v5 table:0];

  uint64_t v7 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  return v7;
}

id sub_100EC79D4(char a1)
{
  NSString v2 = self;
  char v3 = v2;
  if (a1)
  {
    id v9 = [v2 preferredFontForTextStyle:UIFontTextStyleCaption1];
    return v9;
  }
  else
  {
    id v4 = [v2 preferredFontForTextStyle:UIFontTextStyleFootnote];
    id v5 = [v4 fontDescriptor];
    id v6 = [v5 fontDescriptorWithSymbolicTraits:2];

    if (v6)
    {
      [v4 pointSize];
      id v7 = [v3 fontWithDescriptor:v6];

      return v7;
    }
    else
    {
      return v4;
    }
  }
}

id sub_100EC7AF0(char a1)
{
  if (a1)
  {
    id v3 = [self currentTraitCollection];
    id v4 = [v3 accessibilityContrast];

    id v1 = self;
    NSString v2 = &selRef_grayColor;
    if (v4 == (id)1) {
      NSString v2 = &selRef_darkGrayColor;
    }
  }
  else
  {
    id v1 = self;
    NSString v2 = &selRef_darkGrayColor;
  }
  id v5 = [v1 *v2];

  return v5;
}

unint64_t sub_100EC7BA0(char a1)
{
  char v1 = a1 & 1;
  sub_1005057FC((uint64_t *)&unk_101687FB0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117DF40;
  *(void *)(inited + 32) = NSFontAttributeName;
  id v3 = NSFontAttributeName;
  id v4 = sub_100EC79D4(v1);
  unint64_t v5 = sub_100515BB8();
  *(void *)(inited + 40) = v4;
  *(void *)(inited + 64) = v5;
  *(void *)(inited + 72) = NSForegroundColorAttributeName;
  id v6 = NSForegroundColorAttributeName;
  id v7 = sub_100EC7AF0(v1);
  id v8 = [v7 CGColor];

  type metadata accessor for CGColor(0);
  uint64_t v10 = v9;
  *(void *)(inited + 80) = v8;
  *(void *)(inited + 104) = v9;
  *(void *)(inited + 112) = NSBackgroundColorAttributeName;
  uint64_t v11 = self;
  uint64_t v12 = NSBackgroundColorAttributeName;
  id v13 = [v11 clearColor];
  id v14 = [v13 CGColor];

  *(void *)(inited + 144) = v10;
  *(void *)(inited + 120) = v14;
  return sub_100A38A68(inited);
}

void sub_100EC7CDC(CGContext *a1)
{
  NSString v2 = v1;
  uint64_t v4 = type metadata accessor for CGPathFillRule();
  uint64_t v5 = *(void *)(v4 - 8);
  *(void *)&double v7 = __chkstk_darwin(v4, v6).n128_u64[0];
  uint64_t v9 = (char *)&v59 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v10 = [v2 layout:v7];
  [v10 boundsForStandardKnobs];
  double v12 = v11;
  double v14 = v13;
  double v16 = v15;
  double v18 = v17;

  id v64 = [objc_allocWithZone((Class)CRLColor) initWithRed:0.819607843 green:0.819607843 blue:0.839215686 alpha:1.0];
  id v19 = [self bezierPathWithContinuousCornerRoundedRect:v12 cornerRadius:v14 v16, v18, 10.0];
  id v20 = [v19 CGPath];

  if (v20)
  {
    double v60 = v18;
    id v62 = v20;
    CGContextAddPath(a1, (CGPathRef)v20);
    (*(void (**)(char *, void, uint64_t))(v5 + 104))(v9, enum case for CGPathFillRule.winding(_:), v4);
    CGContextRef.clip(using:)();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v9, v4);
    uint64_t v21 = (CGColor *)[v64 CGColor];
    CGContextSetFillColorWithColor(a1, v21);

    [v2 naturalBounds];
    uint64_t v61 = a1;
    CGContextFillRect(a1, v66);
    double v63 = *(double *)&v2[OBJC_IVAR____TtC8Freeform13CRLUnknownRep_sidePadding]
        + *(double *)&v2[OBJC_IVAR____TtC8Freeform13CRLUnknownRep_sidePadding];
    double v22 = v16 - v63;
    id v23 = [self mainBundle];
    NSString v24 = String._bridgeToObjectiveC()();
    NSString v25 = String._bridgeToObjectiveC()();
    id v26 = [v23 localizedStringForKey:v24 value:v25 table:0];

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    sub_100EC7BA0(0);
    id v27 = objc_allocWithZone((Class)NSAttributedString);
    NSString v28 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    type metadata accessor for Key(0);
    sub_100515BF8();
    Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    CFAttributedStringRef v30 = (const __CFAttributedString *)[v27 initWithString:v28 attributes:isa];

    uint64_t v31 = CTLineCreateWithAttributedString(v30);
    CGRect BoundsWithOptions = CTLineGetBoundsWithOptions(v31, 0);
    CGFloat x = BoundsWithOptions.origin.x;
    CGFloat y = BoundsWithOptions.origin.y;
    CGFloat width = BoundsWithOptions.size.width;
    CGFloat height = BoundsWithOptions.size.height;
    double v36 = CGRectGetWidth(BoundsWithOptions);
    v68.origin.CGFloat x = x;
    v68.origin.CGFloat y = y;
    v68.size.CGFloat width = width;
    v68.size.CGFloat height = height;
    double v37 = CGRectGetHeight(v68);

    if (v22 >= v36) {
      double v38 = v37;
    }
    else {
      double v38 = v37 + v37;
    }
    sub_100EC77B4(1);
    sub_100EC7BA0(1);
    id v39 = objc_allocWithZone((Class)NSAttributedString);
    NSString v40 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    Class v41 = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    CFAttributedStringRef v42 = (const __CFAttributedString *)[v39 initWithString:v40 attributes:v41];

    uint64_t v43 = CTLineCreateWithAttributedString(v42);
    CGRect v69 = CTLineGetBoundsWithOptions(v43, 0);
    CGFloat v44 = v69.origin.x;
    CGFloat v45 = v69.origin.y;
    CGFloat v46 = v69.size.width;
    CGFloat v47 = v69.size.height;
    double v48 = CGRectGetWidth(v69);
    v70.origin.CGFloat x = v44;
    v70.origin.CGFloat y = v45;
    v70.size.CGFloat width = v46;
    v70.size.CGFloat height = v47;
    double v49 = CGRectGetHeight(v70);

    if (v22 >= v48) {
      double v50 = v49;
    }
    else {
      double v50 = v49 + v49;
    }
    double v51 = *(double *)&v2[OBJC_IVAR____TtC8Freeform13CRLUnknownRep_topPadding];
    sub_100EC77B4(1);
    sub_100EC7BA0(1);
    id v52 = objc_allocWithZone((Class)NSAttributedString);
    NSString v53 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    Class v54 = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    CFAttributedStringRef v55 = (const __CFAttributedString *)[v52 initWithString:v53 attributes:v54];

    uint64_t v56 = CTLineCreateWithAttributedString(v55);
    CGRect v71 = CTLineGetBoundsWithOptions(v56, 0);
    double v57 = CGRectGetWidth(v71);

    if (v63 + v57 > v16 || v38 + v50 + v51 + v51 > v60 || v16 / (v63 + v57) > 3.0) {
      sub_100EC8B24(v61);
    }
    else {
      sub_100EC879C(v61);
    }
  }
  else
  {
    id v58 = v64;
  }
}

void sub_100EC84A0(char a1, char a2, CGContext *a3, CGFloat a4, double a5)
{
  uint64_t v6 = v5;
  char v11 = a1 & 1;
  id v12 = [v6 layout];
  [v12 boundsForStandardKnobs];
  CGFloat v14 = v13;
  CGFloat v16 = v15;
  CGFloat v18 = v17;
  CGFloat v20 = v19;

  double v21 = *(double *)&v6[OBJC_IVAR____TtC8Freeform13CRLUnknownRep_sidePadding];
  double v22 = sub_100065738(v14, v16, v18, v20) + (v18 - (v21 + v21)) * -0.5;
  CGContextSaveGState(a3);
  id v33 = [objc_allocWithZone((Class)CATextLayer) init];
  id v23 = sub_100EC79D4(v11);
  [v33 setFont:v23];

  id v24 = sub_100EC79D4(v11);
  [v24 pointSize];
  double v26 = v25;

  [v33 setFontSize:v26];
  id v27 = sub_100EC7AF0(v11);
  id v28 = [v27 CGColor];

  [v33 setForegroundColor:v28];
  sub_100EC77B4(v11);
  sub_100EC7BA0(v11);
  id v29 = objc_allocWithZone((Class)NSAttributedString);
  NSString v30 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_100515BF8();
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v32 = [v29 initWithString:v30 attributes:isa];

  [v33 setString:v32];
  CGContextTranslateCTM(a3, v21, a4);
  [v33 setWrapped:a2 & 1];
  [v33 setTruncationMode:kCATruncationEnd];
  [v33 setAlignmentMode:kCAAlignmentCenter];
  [v33 setBounds:v22, a4, v18 - (v21 + v21), a5];
  [v33 drawInContext:a3];
  CGContextRestoreGState(a3);
}

void sub_100EC879C(CGContext *a1)
{
  id v2 = [v1 layout];
  [v2 boundsForStandardKnobs];
  CGFloat v41 = v4;
  CGFloat v42 = v3;
  double v6 = v5;
  CGFloat v40 = v7;

  double v8 = v6
     - (*(double *)&v1[OBJC_IVAR____TtC8Freeform13CRLUnknownRep_sidePadding]
      + *(double *)&v1[OBJC_IVAR____TtC8Freeform13CRLUnknownRep_sidePadding]);
  id v9 = [self mainBundle];
  NSString v10 = String._bridgeToObjectiveC()();
  NSString v11 = String._bridgeToObjectiveC()();
  id v12 = [v9 localizedStringForKey:v10 value:v11 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  sub_100EC7BA0(0);
  id v13 = objc_allocWithZone((Class)NSAttributedString);
  NSString v14 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_100515BF8();
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  CFAttributedStringRef v16 = (const __CFAttributedString *)[v13 initWithString:v14 attributes:isa];

  double v17 = CTLineCreateWithAttributedString(v16);
  CGRect BoundsWithOptions = CTLineGetBoundsWithOptions(v17, 0);
  CGFloat x = BoundsWithOptions.origin.x;
  CGFloat y = BoundsWithOptions.origin.y;
  CGFloat width = BoundsWithOptions.size.width;
  CGFloat height = BoundsWithOptions.size.height;
  double v22 = CGRectGetWidth(BoundsWithOptions);
  v46.origin.CGFloat x = x;
  v46.origin.CGFloat y = y;
  v46.size.CGFloat width = width;
  v46.size.CGFloat height = height;
  double v23 = CGRectGetHeight(v46);

  char v24 = v8 < v22;
  if (v8 < v22) {
    double v23 = v23 + v23;
  }
  sub_100EC77B4(1);
  sub_100EC7BA0(1);
  id v25 = objc_allocWithZone((Class)NSAttributedString);
  NSString v26 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  Class v27 = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  CFAttributedStringRef v28 = (const __CFAttributedString *)[v25 initWithString:v26 attributes:v27];

  id v29 = CTLineCreateWithAttributedString(v28);
  CGRect v47 = CTLineGetBoundsWithOptions(v29, 0);
  CGFloat v30 = v47.origin.x;
  CGFloat v31 = v47.origin.y;
  CGFloat v32 = v47.size.width;
  CGFloat v33 = v47.size.height;
  double v34 = CGRectGetWidth(v47);
  v48.origin.CGFloat x = v30;
  v48.origin.CGFloat y = v31;
  v48.size.CGFloat width = v32;
  v48.size.CGFloat height = v33;
  double v35 = CGRectGetHeight(v48);

  char v36 = v8 < v34;
  if (v8 < v34) {
    double v35 = v35 + v35;
  }
  sub_100065738(v42, v41, v6, v40);
  CGFloat v38 = v37 + (v23 + v35) * -0.5;
  double v39 = v23 + v38;
  sub_100EC84A0(0, v24, a1, v38, v23);

  sub_100EC84A0(1, v36, a1, v39, v35);
}

void sub_100EC8B24(CGContext *a1)
{
  id v2 = v1;
  [v2 boundsForStandardKnobs];
  CGFloat v5 = v4;
  CGFloat v7 = v6;
  CGFloat v9 = v8;
  CGFloat v11 = v10;
  id v12 = self;
  id v13 = [v12 configurationWithPointSize:4 weight:28.0];
  id v14 = [self darkGrayColor];
  id v41 = v13;
  NSString v15 = String._bridgeToObjectiveC()();
  CFAttributedStringRef v16 = self;
  id v17 = [v16 systemImageNamed:v15 withConfiguration:v41];

  if (!v17)
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"drawUnsupportedSymbol(in:)", 26, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLUnknownRep.swift", 84, 2, 244, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"drawUnsupportedSymbol(in:)", 26, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLUnknownRep.swift", 84, 2, 244);
LABEL_9:

    CGFloat v33 = v41;
    goto LABEL_20;
  }
  id v18 = v17;
  id v19 = [v2 canvas];
  if (!v19)
  {

    goto LABEL_9;
  }
  CGFloat v20 = v19;
  [v19 contentsScale];
  double v22 = v21;

  [v18 size];
  double v25 = sub_1000646A4(v23, v24, v22);
  CGFloat v27 = v25;
  CGFloat v28 = v26;
  if (v26 < v25) {
    double v25 = v26;
  }
  id v29 = [v12 configurationWithPointSize:4 weight:v25];
  NSString v30 = String._bridgeToObjectiveC()();
  id v31 = [v16 systemImageNamed:v30 withConfiguration:v29];

  if (v31)
  {
    id v32 = [v31 imageWithTintColor:v14];
  }
  else
  {

    id v32 = 0;
  }
  v43.CGFloat width = v27;
  v43.CGFloat height = v28;
  UIGraphicsBeginImageContextWithOptions(v43, 0, v22);
  double v34 = UIGraphicsGetCurrentContext();
  if (!v34)
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"drawUnsupportedSymbol(in:)", 26, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLUnknownRep.swift", 84, 2, 253, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"drawUnsupportedSymbol(in:)", 26, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLUnknownRep.swift", 84, 2, 253);

LABEL_18:
    goto LABEL_19;
  }
  double v35 = v34;
  if (v32) {
    [v32 drawInRect:sub_100064070()];
  }
  char v36 = CGBitmapContextCreateImage(v35);
  UIGraphicsEndImageContext();
  if (!v36)
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"drawUnsupportedSymbol(in:)", 26, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLUnknownRep.swift", 84, 2, 261, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"drawUnsupportedSymbol(in:)", 26, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLUnknownRep.swift", 84, 2, 261);

    goto LABEL_18;
  }
  CGContextTranslateCTM(a1, 0.0, v11);
  CGContextScaleCTM(a1, 1.0, -1.0);
  [v18 size];
  double v38 = v37;
  double v39 = sub_100065738(v5, v7, v9, v11);
  sub_10006402C(v39, v40, v38);
  CGContextRef.draw(_:in:byTiling:)();

LABEL_19:
  CGFloat v33 = v32;
LABEL_20:
}

id sub_100EC90F8()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLUnknownRep();
  return [super dealloc];
}

uint64_t type metadata accessor for CRLUnknownRep()
{
  return self;
}

uint64_t sub_100EC9150()
{
  id v0 = [self mainBundle];
  NSString v1 = String._bridgeToObjectiveC()();
  NSString v2 = String._bridgeToObjectiveC()();
  id v3 = [v0 localizedStringForKey:v1 value:v2 table:0];

  uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  return v4;
}

uint64_t sub_100EC9254(char a1)
{
  char v2 = sub_100CEB290();
  id v3 = self;
  unsigned int v4 = [v3 crl_iPadDevice];
  if ((a1 & 1) == 0)
  {
    if (v4)
    {
      if (v2) {
        goto LABEL_11;
      }
    }
    else if (v2)
    {
LABEL_11:
      id v5 = [self mainBundle];
LABEL_13:
      NSString v6 = String._bridgeToObjectiveC()();
      goto LABEL_14;
    }
LABEL_12:
    [v3 crl_iPadDevice];
    id v5 = [self mainBundle];
    goto LABEL_13;
  }
  if (v4)
  {
    if (v2) {
      goto LABEL_11;
    }
    goto LABEL_12;
  }
  if ((v2 & 1) == 0) {
    goto LABEL_12;
  }
  id v5 = [self mainBundle];
  NSString v6 = String._bridgeToObjectiveC()();
LABEL_14:
  NSString v7 = String._bridgeToObjectiveC()();
  id v8 = [v5 localizedStringForKey:v6 value:v7 table:0];

  uint64_t v9 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  return v9;
}

void sub_100EC94E0(uint64_t a1, char a2)
{
  sub_100EC9150();
  char v3 = sub_100CEB290();
  sub_100EC9254(a2);
  NSString v4 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  NSString v5 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v6 = [self alertControllerWithTitle:v4 message:v5 preferredStyle:1];

  NSString v7 = self;
  id v8 = [v7 mainBundle];
  if (v3)
  {
    NSString v9 = String._bridgeToObjectiveC()();
    NSString v10 = String._bridgeToObjectiveC()();
    id v11 = [v8 localizedStringForKey:v9 value:v10 table:0];

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    NSString v12 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    v28[4] = sub_100A92694;
    void v28[5] = 0;
    v28[0] = _NSConcreteStackBlock;
    v28[1] = *(void *)"";
    void v28[2] = sub_10051CE64;
    id v28[3] = &unk_101532688;
    id v13 = _Block_copy(v28);
    swift_release();
    id v14 = self;
    id v15 = [v14 actionWithTitle:v12 style:0 handler:v13];
    _Block_release(v13);

    id v16 = [v7 mainBundle];
    NSString v17 = String._bridgeToObjectiveC()();
    NSString v18 = String._bridgeToObjectiveC()();
    id v19 = [v16 localizedStringForKey:v17 value:v18 table:0];

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    NSString v20 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v21 = [v14 actionWithTitle:v20 style:1 handler:0];

    [v6 addAction:v15];
    [v6 addAction:v21];
  }
  else
  {
    NSString v22 = String._bridgeToObjectiveC()();
    NSString v23 = String._bridgeToObjectiveC()();
    id v24 = [v8 localizedStringForKey:v22 value:v23 table:0];

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    NSString v25 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v26 = [self actionWithTitle:v25 style:0 handler:0];

    [v6 addAction:v26];
  }
  self;
  CGFloat v27 = (void *)swift_dynamicCastObjCClass();
  if (v27) {
    [v27 presentViewController:v6 animated:1 completion:0];
  }
  sub_100F2BCC8(v6);
}

uint64_t sub_100EC994C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100EC995C()
{
  return swift_release();
}

uint64_t sub_100EC9964(uint64_t a1, uint64_t a2, uint64_t a3, double a4)
{
  uint64_t v8 = sub_1005057FC(&qword_101672BB0);
  __chkstk_darwin(v8 - 8, v9);
  id v11 = (char *)v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100522E9C(a1, (uint64_t)v11, &qword_101672BB0);
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = 0;
  *(void *)(v12 + 24) = 0;
  *(double *)(v12 + 32) = a4;
  *(void *)(v12 + 40) = a2;
  *(void *)(v12 + 48) = a3;
  uint64_t v13 = type metadata accessor for TaskPriority();
  uint64_t v14 = *(void *)(v13 - 8);
  int v15 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48))(v11, 1, v13);
  swift_retain();
  if (v15 == 1)
  {
    sub_100522F00((uint64_t)v11, &qword_101672BB0);
  }
  else
  {
    TaskPriority.rawValue.getter();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v11, v13);
    if (*(void *)(v12 + 16))
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v16 = dispatch thunk of Actor.unownedExecutor.getter();
      uint64_t v18 = v17;
      swift_unknownObjectRelease();
      if (v18 | v16)
      {
        v20[0] = 0;
        v20[1] = 0;
        void v20[2] = v16;
        v20[3] = v18;
      }
    }
  }
  return swift_task_create();
}

uint64_t sub_100EC9B94(char *a1, char *a2)
{
  return sub_10094E3A8(*a1, *a2);
}

Swift::Int sub_100EC9BA0()
{
  return Hasher._finalize()();
}

uint64_t sub_100EC9C18()
{
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_100EC9C7C()
{
  return Hasher._finalize()();
}

uint64_t sub_100EC9CF0@<X0>(Swift::String *a1@<X0>, char *a2@<X8>)
{
  Swift::Int v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_101505010, *a1);
  uint64_t result = swift_bridgeObjectRelease();
  if (v3 == 1) {
    char v5 = 1;
  }
  else {
    char v5 = 2;
  }
  if (!v3) {
    char v5 = 0;
  }
  *a2 = v5;
  return result;
}

void sub_100EC9D50(uint64_t *a1@<X8>)
{
  uint64_t v2 = 1702257011;
  if (*v1) {
    uint64_t v2 = 0x6863746566;
  }
  unint64_t v3 = 0xE400000000000000;
  if (*v1) {
    unint64_t v3 = 0xE500000000000000;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_100EC9D84()
{
  uint64_t v1 = 0x6E69747563657865;
  if (*v0 != 2) {
    uint64_t v1 = 0x656C756465686373;
  }
  if (*v0 == 1) {
    return 0x676E69646E6570;
  }
  else {
    return v1;
  }
}

double sub_100EC9DEC(uint64_t a1)
{
  return (double)a1 * (double)a1;
}

uint64_t sub_100EC9DF8()
{
  uint64_t v1 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1, v3);
  char v5 = (char *)v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for DispatchQoS();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6, v8);
  uint64_t v10 = (char *)v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13[0] = *(void *)(v0 + 56);
  aBlock[4] = sub_100ED1DD0;
  uint64_t v15 = v0;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = *(void *)"";
  aBlock[2] = sub_100679958;
  void aBlock[3] = &unk_101532A48;
  id v11 = _Block_copy(aBlock);
  swift_retain();
  static DispatchQoS.unspecified.getter();
  v13[1] = _swiftEmptyArrayStorage;
  sub_100522CDC();
  sub_1005057FC((uint64_t *)&unk_1016725D0);
  sub_100523288((unint64_t *)&qword_1016747F0, (uint64_t *)&unk_1016725D0);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v11);
  (*(void (**)(char *, uint64_t))(v2 + 8))(v5, v1);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  return swift_release();
}

void sub_100ECA06C()
{
}

uint64_t sub_100ECA1F4(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3, v5);
  uint64_t v7 = (char *)v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = type metadata accessor for DispatchQoS();
  uint64_t v8 = *(void *)(v21 - 8);
  __chkstk_darwin(v21, v9);
  id v11 = (char *)v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for CRLSyncActivity(0);
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(void *)(v13 + 64);
  __chkstk_darwin(v12 - 8, v15);
  v20[1] = *(void *)(v1 + 56);
  sub_100ED0FC0(a1, (uint64_t)v20 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for CRLSyncActivity);
  unint64_t v16 = (*(unsigned __int8 *)(v13 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = v1;
  sub_100ED1030((uint64_t)v20 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), v17 + v16, type metadata accessor for CRLSyncActivity);
  aBlock[4] = sub_100ED102C;
  void aBlock[5] = v17;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = *(void *)"";
  aBlock[2] = sub_100679958;
  void aBlock[3] = &unk_101532A20;
  uint64_t v18 = _Block_copy(aBlock);
  swift_retain();
  static DispatchQoS.unspecified.getter();
  NSString v22 = _swiftEmptyArrayStorage;
  sub_100522CDC();
  sub_1005057FC((uint64_t *)&unk_1016725D0);
  sub_100523288((unint64_t *)&qword_1016747F0, (uint64_t *)&unk_1016725D0);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v18);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v21);
  return swift_release();
}

uint64_t sub_100ECA544(uint64_t a1, char *a2)
{
  return sub_100ECAC5C(a2);
}

uint64_t sub_100ECA714(char a1, char a2)
{
  char v4 = a1 & 1;
  uint64_t v5 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5, v7);
  uint64_t v9 = (char *)v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for DispatchQoS();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10, v12);
  uint64_t v14 = (char *)v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18[0] = *(void *)(v2 + 56);
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = v2;
  *(unsigned char *)(v15 + 24) = v4;
  *(unsigned char *)(v15 + 25) = a2;
  aBlock[4] = sub_100ED1C08;
  void aBlock[5] = v15;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = *(void *)"";
  aBlock[2] = sub_100679958;
  void aBlock[3] = &unk_1015329D0;
  unint64_t v16 = _Block_copy(aBlock);
  swift_retain();
  static DispatchQoS.unspecified.getter();
  v18[1] = _swiftEmptyArrayStorage;
  sub_100522CDC();
  sub_1005057FC((uint64_t *)&unk_1016725D0);
  sub_100523288((unint64_t *)&qword_1016747F0, (uint64_t *)&unk_1016725D0);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v16);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
  return swift_release();
}

uint64_t sub_100ECA9B0(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = v3;
  char v7 = a3 & 1;
  uint64_t v8 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8, v10);
  uint64_t v12 = (char *)v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for DispatchQoS();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13, v15);
  uint64_t v17 = (char *)v21 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21[0] = *(void *)(v4 + 56);
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = v4;
  *(void *)(v18 + 24) = a1;
  *(void *)(v18 + 32) = a2;
  *(unsigned char *)(v18 + 40) = v7;
  aBlock[4] = sub_100ED1BA0;
  void aBlock[5] = v18;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = *(void *)"";
  aBlock[2] = sub_100679958;
  void aBlock[3] = &unk_101532980;
  id v19 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  static DispatchQoS.unspecified.getter();
  v21[1] = _swiftEmptyArrayStorage;
  sub_100522CDC();
  sub_1005057FC((uint64_t *)&unk_1016725D0);
  sub_100523288((unint64_t *)&qword_1016747F0, (uint64_t *)&unk_1016725D0);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v19);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
  (*(void (**)(char *, uint64_t))(v14 + 8))(v17, v13);
  return swift_release();
}

uint64_t sub_100ECAC5C(char *a1)
{
  uint64_t v250 = a1;
  uint64_t v2 = sub_1005057FC(&qword_101672BB0);
  __chkstk_darwin(v2 - 8, v3);
  uint64_t v236 = (char *)&v224 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for Date();
  uint64_t v237 = *(void *)(v5 - 8);
  uint64_t v238 = v5;
  __chkstk_darwin(v5, v6);
  uint64_t v234 = (char *)&v224 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1005057FC(&qword_101672EB0);
  __chkstk_darwin(v8 - 8, v9);
  char v233 = (char *)&v224 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11, v12);
  uint64_t v14 = (char *)&v224 - v13;
  __chkstk_darwin(v15, v16);
  uint64_t v232 = (uint64_t)&v224 - v17;
  uint64_t v18 = sub_1005057FC(&qword_1016741F0);
  __chkstk_darwin(v18 - 8, v19);
  uint64_t v21 = (char *)&v224 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22, v23);
  uint64_t v240 = (uint64_t *)((char *)&v224 - v24);
  uint64_t v25 = type metadata accessor for CRLSyncScheduledActivity(0);
  uint64_t v26 = *(void *)(v25 - 8);
  uint64_t v243 = v25;
  uint64_t v244 = v26;
  __chkstk_darwin(v25, v27);
  uint64_t v235 = (char *)&v224 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v29, v30);
  uint64_t v241 = (uint64_t)&v224 - v31;
  uint64_t v242 = (int *)type metadata accessor for CRLSyncActivity(0);
  __chkstk_darwin(v242, v32);
  uint64_t v231 = (uint64_t)&v224 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v34, v35);
  uint64_t v246 = (uint64_t)&v224 - v36;
  uint64_t v37 = type metadata accessor for DispatchPredicate();
  uint64_t v38 = *(void *)(v37 - 8);
  __n128 v40 = __chkstk_darwin(v37, v39);
  CGFloat v42 = (uint64_t *)((char *)&v224 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0));
  CGSize v43 = *(void **)(v1 + 56);
  *CGFloat v42 = v43;
  (*(void (**)(void *, void, uint64_t, __n128))(v38 + 104))(v42, enum case for DispatchPredicate.onQueue(_:), v37, v40);
  id v44 = v43;
  char v45 = _dispatchPreconditionTest(_:)();
  (*(void (**)(void *, uint64_t))(v38 + 8))(v42, v37);
  if (v45)
  {
    uint64_t v230 = v14;
    uint64_t v239 = v21;
    if (qword_10166FB88 == -1) {
      goto LABEL_3;
    }
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  unint64_t v46 = 0xEC00000065706F63;
  uint64_t v47 = 0x5320646572616853;
  swift_beginAccess();
  CGRect v48 = (void *)static OS_os_log.dataSync;
  uint64_t v249 = sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  double v50 = (void *)inited;
  long long v247 = xmmword_10117D8C0;
  *(_OWORD *)(inited + 16) = xmmword_10117D8C0;
  if (!*(unsigned char *)(v1 + 64))
  {
    uint64_t v47 = 0x2065746176697250;
    unint64_t v46 = 0xED000065706F6353;
  }
  uint64_t v51 = v1;
  *(void *)(inited + 56) = &type metadata for String;
  unint64_t v52 = sub_100528BE4();
  v50[4] = v47;
  v50[8] = v52;
  v50[5] = v46;
  char v53 = *v250;
  if (*v250) {
    uint64_t v54 = 0x6863746566;
  }
  else {
    uint64_t v54 = 1702257011;
  }
  if (*v250) {
    unint64_t v55 = 0xE500000000000000;
  }
  else {
    unint64_t v55 = 0xE400000000000000;
  }
  unsigned char v50[12] = &type metadata for String;
  v50[13] = v52;
  uint64_t v56 = v1;
  unint64_t v248 = v52;
  v50[9] = v54;
  v50[10] = v55;
  id v57 = v48;
  uint64_t v58 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v57, (uint64_t)&_mh_execute_header, v58, (uint64_t)"<%{public}@> Activity:%{public}@ Scheduling", 43, 2, (uint64_t)v50);
  swift_setDeallocating();
  uint64_t v59 = sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  swift_beginAccess();
  uint64_t v60 = *(void *)(v1 + 104);
  if (*(void *)(v60 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v61 = sub_1009571B8(v53);
    if (v62)
    {
      uint64_t v229 = v59;
      long long v228 = *(_OWORD *)(*(void *)(v60 + 56) + 16 * v61);
      swift_retain();
      swift_bridgeObjectRelease();
      uint64_t v227 = swift_allocObject();
      *(_OWORD *)(v227 + 16) = v228;
      double v63 = v250;
      uint64_t v64 = v246;
      sub_100ED0FC0((uint64_t)v250, v246, type metadata accessor for CRLSyncActivity);
      int v65 = *v63;
      uint64_t v66 = v51 + 112;
      swift_beginAccess();
      uint64_t v67 = *(void *)(v56 + 112);
      uint64_t v68 = *(void *)(v67 + 16);
      LODWORD(v228) = v65;
      if (v68)
      {
        swift_bridgeObjectRetain();
        unint64_t v69 = sub_1009571B8(v65);
        uint64_t v71 = v243;
        uint64_t v70 = v244;
        if (v72)
        {
          int v73 = (uint64_t (*)(void, void, void))v240;
          sub_100ED0FC0(*(void *)(v67 + 56) + *(void *)(v244 + 72) * v69, (uint64_t)v240, type metadata accessor for CRLSyncScheduledActivity);
          uint64_t v74 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v70 + 56);
          int v75 = v73;
          uint64_t v76 = 0;
        }
        else
        {
          uint64_t v74 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v244 + 56);
          int v73 = (uint64_t (*)(void, void, void))v240;
          int v75 = (uint64_t (*)(void, void, void))v240;
          uint64_t v76 = 1;
        }
        uint64_t v226 = v74;
        v74((uint64_t)v75, v76, 1, v71);
        swift_bridgeObjectRelease();
        BOOL v80 = (*(unsigned int (**)(void, uint64_t, uint64_t))(v70 + 48))(v73, 1, v71) == 1;
        uint64_t v92 = v73;
        if (!v80)
        {
          uint64_t v94 = v241;
          sub_100ED1030((uint64_t)v73, v241, type metadata accessor for CRLSyncScheduledActivity);
          uint64_t v95 = *(void *)(v94 + *(int *)(v71 + 20));
          if (v95 == 1)
          {
            long long v106 = (void *)static OS_os_log.dataSync;
            uint64_t v107 = swift_initStackObject();
            uint64_t v108 = v107;
            *(_OWORD *)(v107 + 16) = v247;
            uint64_t v109 = 0x5320646572616853;
            if (!*(unsigned char *)(v56 + 64)) {
              uint64_t v109 = 0x2065746176697250;
            }
            unint64_t v110 = 0xED000065706F6353;
            if (*(unsigned char *)(v56 + 64)) {
              unint64_t v110 = 0xEC00000065706F63;
            }
            unint64_t v111 = v248;
            *(void *)(v107 + 56) = &type metadata for String;
            *(void *)(v107 + 64) = v111;
            *(void *)(v107 + 32) = v109;
            *(void *)(v107 + 40) = v110;
            int v112 = v228;
            uint64_t v113 = 0x6863746566;
            if (!v228) {
              uint64_t v113 = 1702257011;
            }
            unint64_t v114 = 0xE400000000000000;
            if (v228) {
              unint64_t v114 = 0xE500000000000000;
            }
            *(void *)(v107 + 96) = &type metadata for String;
            *(void *)(v107 + 104) = v111;
            *(void *)(v107 + 72) = v113;
            *(void *)(v107 + 80) = v114;
            id v115 = v106;
            uint64_t v116 = static os_log_type_t.default.getter();
            sub_100BAC898((uint64_t)v115, (uint64_t)&_mh_execute_header, v116, (uint64_t)"<%{public}@> Activity:%{public}@ already pending, new activity replacing existing", 81, 2, v108);
            swift_setDeallocating();
            swift_arrayDestroy();

            long long v117 = v242;
            uint64_t v118 = v242[7];
            long long v119 = (void *)(v241 + v118);
            if ((*(unsigned char *)(v241 + v118 + 8) & 1) == 0)
            {
              uint64_t v120 = v246 + v118;
              if (*(unsigned char *)(v120 + 8) == 1)
              {
                *(void *)uint64_t v120 = *v119;
                *(unsigned char *)(v120 + 8) = 0;
              }
              int v112 = v228;
            }
            uint64_t v93 = v250;
          }
          else
          {
            if (v95 == 2)
            {
              long long v96 = (void *)static OS_os_log.dataSync;
              uint64_t v97 = swift_allocObject();
              uint64_t v98 = v97;
              *(_OWORD *)(v97 + 16) = v247;
              uint64_t v99 = 0x5320646572616853;
              if (!*(unsigned char *)(v56 + 64)) {
                uint64_t v99 = 0x2065746176697250;
              }
              unint64_t v100 = 0xED000065706F6353;
              if (*(unsigned char *)(v56 + 64)) {
                unint64_t v100 = 0xEC00000065706F63;
              }
              unint64_t v101 = v248;
              *(void *)(v97 + 56) = &type metadata for String;
              *(void *)(v97 + 64) = v101;
              *(void *)(v97 + 32) = v99;
              *(void *)(v97 + 40) = v100;
              uint64_t v102 = 0x6863746566;
              if (!v228) {
                uint64_t v102 = 1702257011;
              }
              unint64_t v103 = 0xE400000000000000;
              if (v228) {
                unint64_t v103 = 0xE500000000000000;
              }
              *(void *)(v97 + 96) = &type metadata for String;
              *(void *)(v97 + 104) = v101;
              *(void *)(v97 + 72) = v102;
              *(void *)(v97 + 80) = v103;
              id v104 = v96;
              uint64_t v105 = static os_log_type_t.default.getter();
              sub_100BAC898((uint64_t)v104, (uint64_t)&_mh_execute_header, v105, (uint64_t)"<%{public}@> Activity:%{public}@ already executing, not scheduling again", 72, 2, v98);
              swift_setDeallocating();
              swift_arrayDestroy();
              swift_deallocClassInstance();

LABEL_39:
              swift_release();
              sub_100ED1098(v241, type metadata accessor for CRLSyncScheduledActivity);
              uint64_t v64 = v246;
              return sub_100ED1098(v64, type metadata accessor for CRLSyncActivity);
            }
            uint64_t v225 = v56 + 112;
            uint64_t v121 = v231;
            sub_100ED0FC0(v241, v231, type metadata accessor for CRLSyncActivity);
            long long v122 = v242;
            uint64_t v123 = v121 + v242[5];
            uint64_t v124 = v232;
            sub_10051B3EC(v123, v232, &qword_101672EB0);
            uint64_t v125 = v238;
            uint64_t v240 = *(void **)(v237 + 48);
            int v126 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v240)(v124, 1, v238);
            swift_retain();
            sub_100522F00(v124, &qword_101672EB0);
            if (v126 != 1)
            {
              uint64_t v127 = (uint64_t)v230;
              sub_100522E9C(v246 + v122[5], (uint64_t)v230, &qword_101672EB0);
              int v128 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v240)(v127, 1, v125);
              sub_100522F00(v127, &qword_101672EB0);
              if (v128 == 1)
              {
                long long v129 = (void *)static OS_os_log.dataSync;
                uint64_t v130 = swift_allocObject();
                uint64_t v131 = v130;
                *(_OWORD *)(v130 + 16) = v247;
                uint64_t v132 = 0x5320646572616853;
                if (!*(unsigned char *)(v56 + 64)) {
                  uint64_t v132 = 0x2065746176697250;
                }
                unint64_t v133 = 0xED000065706F6353;
                if (*(unsigned char *)(v56 + 64)) {
                  unint64_t v133 = 0xEC00000065706F63;
                }
                *(void *)(v130 + 32) = v132;
                unint64_t v134 = v248;
                *(void *)(v130 + 56) = &type metadata for String;
                *(void *)(v130 + 64) = v134;
                *(void *)(v130 + 40) = v133;
                uint64_t v135 = 0x6863746566;
                if (!*v250) {
                  uint64_t v135 = 1702257011;
                }
                unint64_t v136 = 0xE400000000000000;
                if (*v250) {
                  unint64_t v136 = 0xE500000000000000;
                }
                *(void *)(v130 + 96) = &type metadata for String;
                *(void *)(v130 + 104) = v134;
                *(void *)(v130 + 72) = v135;
                *(void *)(v130 + 80) = v136;
                id v137 = v129;
                uint64_t v138 = static os_log_type_t.default.getter();
                sub_100BAC898((uint64_t)v137, (uint64_t)&_mh_execute_header, v138, (uint64_t)"<%{public}@> Activity:%{public}@ already scheduled, new activity does not contain earliestStartDate, not scheduling again", 121, 2, v131);
                swift_setDeallocating();
                swift_arrayDestroy();
                swift_deallocClassInstance();

                sub_100ED14A4(v95);
                goto LABEL_39;
              }
            }
            uint64_t v139 = v122[7];
            uint64_t v140 = (void *)(v241 + v139);
            if ((*(unsigned char *)(v241 + v139 + 8) & 1) == 0)
            {
              uint64_t v141 = v246 + v139;
              if (*(unsigned char *)(v141 + 8) == 1)
              {
                *(void *)uint64_t v141 = *v140;
                *(unsigned char *)(v141 + 8) = 0;
              }
            }
            unsigned int v142 = (void *)static OS_os_log.dataSync;
            uint64_t v143 = swift_initStackObject();
            uint64_t v144 = v143;
            *(_OWORD *)(v143 + 16) = v247;
            uint64_t v145 = 0x5320646572616853;
            if (!*(unsigned char *)(v56 + 64)) {
              uint64_t v145 = 0x2065746176697250;
            }
            unint64_t v146 = 0xED000065706F6353;
            if (*(unsigned char *)(v56 + 64)) {
              unint64_t v146 = 0xEC00000065706F63;
            }
            *(void *)(v143 + 32) = v145;
            unint64_t v147 = v248;
            *(void *)(v143 + 56) = &type metadata for String;
            *(void *)(v143 + 64) = v147;
            *(void *)(v143 + 40) = v146;
            int v112 = *v250;
            uint64_t v148 = 0x6863746566;
            if (!*v250) {
              uint64_t v148 = 1702257011;
            }
            unint64_t v149 = 0xE400000000000000;
            if (*v250) {
              unint64_t v149 = 0xE500000000000000;
            }
            *(void *)(v143 + 96) = &type metadata for String;
            *(void *)(v143 + 104) = v147;
            *(void *)(v143 + 72) = v148;
            *(void *)(v143 + 80) = v149;
            id v150 = v142;
            uint64_t v151 = static os_log_type_t.default.getter();
            sub_100BAC898((uint64_t)v150, (uint64_t)&_mh_execute_header, v151, (uint64_t)"<%{public}@> Activity:%{public}@ Cancelling existing", 52, 2, v144);
            swift_setDeallocating();
            swift_arrayDestroy();

            if (v95)
            {
              swift_retain();
              sub_1005057FC(&qword_101672BD0);
              Task.cancel()();
              sub_100ED14A4(v95);
              sub_100ED14A4(v95);
            }
            uint64_t v93 = v250;
            long long v117 = v242;
            uint64_t v66 = v225;
          }
          unsigned int v152 = *(void **)(v241 + *(int *)(v71 + 24));
          unsigned int v153 = (uint64_t *)(v246 + v117[7]);
          char v154 = *((unsigned char *)v153 + 8);
          uint64_t v240 = v152;
          if ((v154 & 1) == 0)
          {
            uint64_t v155 = *v153;
            if (*v153 < (uint64_t)v152)
            {
              long long v156 = (void *)static OS_os_log.dataSync;
              uint64_t v157 = swift_allocObject();
              uint64_t v158 = v157;
              *(_OWORD *)(v157 + 16) = xmmword_10117DF40;
              uint64_t v159 = 0x5320646572616853;
              if (!*(unsigned char *)(v56 + 64)) {
                uint64_t v159 = 0x2065746176697250;
              }
              unint64_t v160 = 0xED000065706F6353;
              if (*(unsigned char *)(v56 + 64)) {
                unint64_t v160 = 0xEC00000065706F63;
              }
              *(void *)(v157 + 32) = v159;
              unint64_t v161 = v248;
              *(void *)(v157 + 56) = &type metadata for String;
              *(void *)(v157 + 64) = v161;
              *(void *)(v157 + 40) = v160;
              uint64_t v162 = 0x6863746566;
              if (!v112) {
                uint64_t v162 = 1702257011;
              }
              unint64_t v163 = 0xE400000000000000;
              if (v112) {
                unint64_t v163 = 0xE500000000000000;
              }
              *(void *)(v157 + 96) = &type metadata for String;
              *(void *)(v157 + 104) = v161;
              *(void *)(v157 + 72) = v162;
              *(void *)(v157 + 80) = v163;
              *(void *)(v157 + 136) = &type metadata for Int;
              *(void *)(v157 + 144) = &protocol witness table for Int;
              *(void *)(v157 + 112) = v155;
              id v164 = v156;
              uint64_t v165 = static os_log_type_t.default.getter();
              sub_100BAC898((uint64_t)v164, (uint64_t)&_mh_execute_header, v165, (uint64_t)"<%{public}@> Activity:%{public}@ reached max retry attempts: %d but we do not care. Schedule it again!", 102, 2, v158);
              swift_setDeallocating();
              swift_arrayDestroy();
              swift_deallocClassInstance();

              uint64_t v93 = v250;
            }
          }
          sub_100ED1098(v241, type metadata accessor for CRLSyncScheduledActivity);
          uint64_t v64 = v246;
LABEL_90:
          sub_100522E9C(v56 + 16, (uint64_t)&v251, &qword_1016791E0);
          if (v252)
          {
            sub_10053974C(&v251, (uint64_t)v253);
            sub_10050F848(v253, v253[3]);
            type metadata accessor for SCNetworkReachabilityFlags(0);
            uint64_t v166 = v245;
            OS_dispatch_queue.sync<A>(execute:)();
            uint64_t v245 = v166;
            if ((v251 & 2) == 0)
            {
              uint64_t v167 = (uint64_t)v239;
              sub_100ED0FC0(v64, (uint64_t)v239, type metadata accessor for CRLSyncActivity);
              *(void *)(v167 + *(int *)(v71 + 20)) = 1;
              *(void *)(v167 + *(int *)(v71 + 24)) = v240;
              v226(v167, 0, 1, v71);
              swift_beginAccess();
              sub_10057F344(v167, v228);
              swift_endAccess();
              int v168 = (void *)static OS_os_log.dataSync;
              uint64_t v169 = swift_initStackObject();
              uint64_t v170 = v169;
              *(_OWORD *)(v169 + 16) = v247;
              uint64_t v171 = 0x5320646572616853;
              if (!*(unsigned char *)(v56 + 64)) {
                uint64_t v171 = 0x2065746176697250;
              }
              unint64_t v172 = 0xED000065706F6353;
              if (*(unsigned char *)(v56 + 64)) {
                unint64_t v172 = 0xEC00000065706F63;
              }
              *(void *)(v169 + 32) = v171;
              unint64_t v173 = v248;
              *(void *)(v169 + 56) = &type metadata for String;
              *(void *)(v169 + 64) = v173;
              *(void *)(v169 + 40) = v172;
              uint64_t v174 = 0x6863746566;
              if (!*v93) {
                uint64_t v174 = 1702257011;
              }
              unint64_t v175 = 0xE400000000000000;
              if (*v93) {
                unint64_t v175 = 0xE500000000000000;
              }
              *(void *)(v169 + 96) = &type metadata for String;
              *(void *)(v169 + 104) = v173;
              *(void *)(v169 + 72) = v174;
              *(void *)(v169 + 80) = v175;
              id v176 = v168;
              uint64_t v177 = static os_log_type_t.default.getter();
              sub_100BAC898((uint64_t)v176, (uint64_t)&_mh_execute_header, v177, (uint64_t)"<%{public}@> Activity:%{public}@ Network unreachable while trying to schedule activity. Will retry later", 104, 2, v170);
              swift_release();
              swift_setDeallocating();
              swift_arrayDestroy();

              _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v253);
              return sub_100ED1098(v64, type metadata accessor for CRLSyncActivity);
            }
            _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v253);
          }
          else
          {
            sub_100522F00((uint64_t)&v251, &qword_1016791E0);
          }
          uint64_t v225 = v66;
          uint64_t v178 = v242[8];
          if (*(unsigned char *)(v64 + v178) == 1)
          {
            uint64_t v179 = (void *)static OS_os_log.dataSync;
            uint64_t v180 = swift_initStackObject();
            uint64_t v181 = v180;
            *(_OWORD *)(v180 + 16) = v247;
            uint64_t v182 = 0x5320646572616853;
            if (!*(unsigned char *)(v56 + 64)) {
              uint64_t v182 = 0x2065746176697250;
            }
            unint64_t v183 = 0xED000065706F6353;
            if (*(unsigned char *)(v56 + 64)) {
              unint64_t v183 = 0xEC00000065706F63;
            }
            *(void *)(v180 + 32) = v182;
            unint64_t v184 = v248;
            *(void *)(v180 + 56) = &type metadata for String;
            *(void *)(v180 + 64) = v184;
            *(void *)(v180 + 40) = v183;
            uint64_t v185 = 0x6863746566;
            if (!*v250) {
              uint64_t v185 = 1702257011;
            }
            unint64_t v186 = 0xE400000000000000;
            if (*v250) {
              unint64_t v186 = 0xE500000000000000;
            }
            *(void *)(v180 + 96) = &type metadata for String;
            *(void *)(v180 + 104) = v184;
            *(void *)(v180 + 72) = v185;
            *(void *)(v180 + 80) = v186;
            id v187 = v179;
            uint64_t v188 = static os_log_type_t.default.getter();
            sub_100BAC898((uint64_t)v187, (uint64_t)&_mh_execute_header, v188, (uint64_t)"<%{public}@> Activity:%{public}@ Bypassing any throttling", 57, 2, v181);
            swift_setDeallocating();
            swift_arrayDestroy();

            *(unsigned char *)(v64 + v178) = 0;
            double v189 = 0.0;
          }
          else
          {
            uint64_t v190 = v64 + v242[5];
            uint64_t v191 = *(double (**)(uint64_t))(v56 + 72);
            swift_retain();
            sub_100ED16A8((uint64_t)v240, v190, v191);
            double v193 = v192;
            swift_release();
            double v189 = v193 + *(double *)(v56 + 96);
            unint64_t v184 = v248;
          }
          uint64_t v194 = v234;
          Date.init()();
          uint64_t v195 = (uint64_t)v233;
          Date.advanced(by:)();
          uint64_t v196 = v237;
          unint64_t v197 = v194;
          uint64_t v198 = v238;
          (*(void (**)(char *, uint64_t))(v237 + 8))(v197, v238);
          (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v196 + 56))(v195, 0, 1, v198);
          uint64_t v199 = v242;
          sub_1005E8B94(v195, v64 + v242[5]);
          uint64_t v200 = (void *)static OS_os_log.dataSync;
          uint64_t v201 = swift_initStackObject();
          uint64_t v202 = v201;
          *(_OWORD *)(v201 + 16) = xmmword_10118E4B0;
          uint64_t v203 = 0x5320646572616853;
          if (!*(unsigned char *)(v56 + 64)) {
            uint64_t v203 = 0x2065746176697250;
          }
          unint64_t v204 = 0xED000065706F6353;
          if (*(unsigned char *)(v56 + 64)) {
            unint64_t v204 = 0xEC00000065706F63;
          }
          *(void *)(v201 + 56) = &type metadata for String;
          *(void *)(v201 + 64) = v184;
          *(void *)(v201 + 32) = v203;
          *(void *)(v201 + 40) = v204;
          uint64_t v205 = v250;
          uint64_t v206 = 0x6863746566;
          if (!*v250) {
            uint64_t v206 = 1702257011;
          }
          unint64_t v207 = 0xE400000000000000;
          if (*v250) {
            unint64_t v207 = 0xE500000000000000;
          }
          *(void *)(v201 + 96) = &type metadata for String;
          *(void *)(v201 + 104) = v184;
          *(void *)(v201 + 72) = v206;
          *(void *)(v201 + 80) = v207;
          *(void *)(v201 + 136) = &type metadata for Double;
          *(void *)(v201 + 144) = &protocol witness table for Double;
          *(double *)(v201 + 112) = v189;
          *(void *)(v201 + 176) = &type metadata for Int;
          *(void *)(v201 + 184) = &protocol witness table for Int;
          *(void *)(v201 + 152) = v240;
          uint64_t v208 = v64 + v199[7];
          uint64_t v209 = *(void *)v208;
          LODWORD(v208) = *(unsigned __int8 *)(v208 + 8);
          *(void *)(v201 + 216) = &type metadata for Int;
          *(void *)(v201 + 224) = &protocol witness table for Int;
          if (v208) {
            uint64_t v210 = -1;
          }
          else {
            uint64_t v210 = v209;
          }
          *(void *)(v201 + 192) = v210;
          id v211 = v200;
          uint64_t v212 = static os_log_type_t.default.getter();
          sub_100BAC898((uint64_t)v211, (uint64_t)&_mh_execute_header, v212, (uint64_t)"<%{public}@> Activity:%{public}@ Scheduling after %.2f seconds, retries:%d maxRetries:%d", 88, 2, v202);
          swift_setDeallocating();
          swift_arrayDestroy();

          uint64_t v213 = v205[v199[6]];
          uint64_t v214 = v243;
          uint64_t v215 = (uint64_t)v236;
          switch(v213)
          {
            case 1:
              static TaskPriority.background.getter();
              break;
            case 2:
              static TaskPriority.utility.getter();
              break;
            case 3:
              TaskPriority.init(rawValue:)();
              break;
            case 4:
              static TaskPriority.high.getter();
              break;
            case 5:
              static TaskPriority.userInitiated.getter();
              break;
            default:
              static TaskPriority.low.getter();
              break;
          }
          uint64_t v216 = type metadata accessor for TaskPriority();
          (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v216 - 8) + 56))(v215, 0, 1, v216);
          uint64_t v217 = swift_allocObject();
          swift_weakInit();
          uint64_t v218 = swift_allocObject();
          *(void *)(v218 + 16) = v217;
          *(unsigned char *)(v218 + 24) = v228;
          uint64_t v219 = v227;
          *(void *)(v218 + 32) = &unk_1016A1C98;
          *(void *)(v218 + 40) = v219;
          swift_retain();
          uint64_t v220 = sub_100EC9964(v215, (uint64_t)&unk_1016A1CA8, v218, v189);
          swift_release();
          sub_100522F00(v215, &qword_101672BB0);
          uint64_t v221 = v246;
          uint64_t v222 = v235;
          sub_100ED0FC0(v246, (uint64_t)v235, type metadata accessor for CRLSyncActivity);
          *(void *)&v222[*(int *)(v214 + 20)] = v220;
          uint64_t v223 = (uint64_t)v239;
          *(void *)&v222[*(int *)(v214 + 24)] = v240;
          LOBYTE(v217) = *v222;
          sub_100ED0FC0((uint64_t)v222, v223, type metadata accessor for CRLSyncScheduledActivity);
          v226(v223, 0, 1, v214);
          swift_beginAccess();
          swift_retain();
          sub_10057F344(v223, v217);
          swift_endAccess();
          swift_release();
          uint64_t v64 = v221;
          swift_release();
          sub_100ED1098((uint64_t)v222, type metadata accessor for CRLSyncScheduledActivity);
          return sub_100ED1098(v64, type metadata accessor for CRLSyncActivity);
        }
        uint64_t v241 = v56;
        long long v88 = v63;
        uint64_t v89 = v66;
        uint64_t v91 = v71;
        uint64_t v64 = v246;
        uint64_t v90 = v92;
      }
      else
      {
        uint64_t v241 = v56;
        long long v88 = v63;
        uint64_t v89 = v66;
        uint64_t v90 = (uint64_t (*)(void, void, void))v240;
        uint64_t v91 = v243;
        uint64_t v226 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v244 + 56);
        ((void (*)(void *, uint64_t, uint64_t))v226)(v240, 1, 1);
      }
      sub_100522F00((uint64_t)v90, &qword_1016741F0);
      uint64_t v240 = 0;
      uint64_t v71 = v91;
      uint64_t v66 = v89;
      uint64_t v93 = v88;
      uint64_t v56 = v241;
      goto LABEL_90;
    }
    swift_bridgeObjectRelease();
  }
  long long v77 = (void *)static OS_os_log.dataSync;
  uint64_t v78 = swift_initStackObject();
  uint64_t v79 = v78;
  *(_OWORD *)(v78 + 16) = v247;
  BOOL v80 = *(unsigned char *)(v56 + 64) == 0;
  uint64_t v81 = 0x5320646572616853;
  if (!*(unsigned char *)(v56 + 64)) {
    uint64_t v81 = 0x2065746176697250;
  }
  *(void *)(v78 + 32) = v81;
  unint64_t v82 = 0xED000065706F6353;
  if (!v80) {
    unint64_t v82 = 0xEC00000065706F63;
  }
  unint64_t v83 = v248;
  *(void *)(v78 + 56) = &type metadata for String;
  *(void *)(v78 + 64) = v83;
  *(void *)(v78 + 40) = v82;
  *(void *)(v78 + 96) = &type metadata for String;
  *(void *)(v78 + 104) = v83;
  *(void *)(v78 + 72) = v54;
  *(void *)(v78 + 80) = v55;
  id v84 = v77;
  uint64_t v85 = static os_log_type_t.error.getter();
  sub_100BAC898((uint64_t)v84, (uint64_t)&_mh_execute_header, v85, (uint64_t)"<%{public}@> Activity:%{public}@ Attempting to schedule without a registered handler", 84, 2, v79);
  swift_setDeallocating();
  swift_arrayDestroy();

  sub_100ED15A8();
  swift_allocError();
  *long long v86 = 0;
  return swift_willThrow();
}

uint64_t sub_100ECC580(int *a1)
{
  uint64_t v4 = (uint64_t (*)(void))((char *)a1 + *a1);
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_100528D08;
  return v4();
}

uint64_t sub_100ECC64C(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  *(void *)(v5 + 104) = a4;
  *(void *)(v5 + 112) = a5;
  *(unsigned char *)(v5 + 192) = a3;
  *(void *)(v5 + 96) = a2;
  uint64_t v6 = type metadata accessor for DispatchWorkItemFlags();
  *(void *)(v5 + 120) = v6;
  *(void *)(v5 + 128) = *(void *)(v6 - 8);
  *(void *)(v5 + 136) = swift_task_alloc();
  uint64_t v7 = type metadata accessor for DispatchQoS();
  *(void *)(v5 + 144) = v7;
  *(void *)(v5 + 152) = *(void *)(v7 - 8);
  *(void *)(v5 + 160) = swift_task_alloc();
  return _swift_task_switch(sub_100ECC770, 0, 0);
}

uint64_t sub_100ECC770()
{
  if ((static Task<>.isCancelled.getter() & 1) != 0
    || (swift_beginAccess(), uint64_t Strong = swift_weakLoadStrong(), (*(void *)(v0 + 168) = Strong) == 0))
  {
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v12 = *(uint64_t (**)(void))(v0 + 8);
    return v12();
  }
  else
  {
    uint64_t v2 = Strong;
    uint64_t v3 = *(void *)(v0 + 160);
    uint64_t v4 = *(void *)(v0 + 136);
    uint64_t v13 = *(void *)(v0 + 152);
    uint64_t v14 = *(void *)(v0 + 144);
    uint64_t v5 = *(void *)(v0 + 120);
    uint64_t v6 = *(void *)(v0 + 128);
    uint64_t v15 = *(int **)(v0 + 104);
    char v7 = *(unsigned char *)(v0 + 192) & 1;
    uint64_t v8 = swift_allocObject();
    *(void *)(v8 + 16) = v2;
    *(unsigned char *)(v8 + 24) = v7;
    *(void *)(v0 + 48) = sub_100ED1B30;
    *(void *)(v0 + 56) = v8;
    *(void *)(v0 + 16) = _NSConcreteStackBlock;
    *(void *)(v0 + 24) = *(void *)"";
    *(void *)(v0 + 32) = sub_100679958;
    *(void *)(v0 + 40) = &unk_101532930;
    uint64_t v9 = _Block_copy((const void *)(v0 + 16));
    swift_retain();
    static DispatchQoS.unspecified.getter();
    *(void *)(v0 + 88) = _swiftEmptyArrayStorage;
    sub_100522CDC();
    sub_1005057FC((uint64_t *)&unk_1016725D0);
    sub_100523288((unint64_t *)&qword_1016747F0, (uint64_t *)&unk_1016725D0);
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v9);
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v3, v14);
    swift_release();
    uint64_t v16 = (uint64_t (*)(void))((char *)v15 + *v15);
    uint64_t v10 = (void *)swift_task_alloc();
    *(void *)(v0 + 176) = v10;
    *uint64_t v10 = v0;
    v10[1] = sub_100ECCA6C;
    return v16();
  }
}

uint64_t sub_100ECCA6C()
{
  *(void *)(*(void *)v1 + 184) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_100ECCBF8;
  }
  else {
    uint64_t v2 = sub_100ECCB80;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100ECCB80()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100ECCBF8()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

void sub_100ECCC70(int a1, char a2)
{
  uint64_t v5 = sub_1005057FC(&qword_1016741F0);
  __chkstk_darwin(v5 - 8, v6);
  uint64_t v8 = &v27[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = type metadata accessor for DispatchPredicate();
  uint64_t v10 = *(void *)(v9 - 8);
  __n128 v12 = __chkstk_darwin(v9, v11);
  uint64_t v14 = &v27[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v15 = *(void **)(v2 + 56);
  void *v14 = v15;
  (*(void (**)(void *, void, uint64_t, __n128))(v10 + 104))(v14, enum case for DispatchPredicate.onQueue(_:), v9, v12);
  id v16 = v15;
  LOBYTE(v15) = _dispatchPreconditionTest(_:)();
  (*(void (**)(void *, uint64_t))(v10 + 8))(v14, v9);
  if ((v15 & 1) == 0)
  {
    __break(1u);
LABEL_17:
    swift_once();
    goto LABEL_4;
  }
  a1 &= 1u;
  if ((a2 & 1) == 0)
  {
    sub_100ECD390((char *)1, a1);
    return;
  }
  if (qword_10166FB88 != -1) {
    goto LABEL_17;
  }
LABEL_4:
  swift_beginAccess();
  uint64_t v17 = (void *)static OS_os_log.dataSync;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  uint64_t v19 = (void *)inited;
  *(_OWORD *)(inited + 16) = xmmword_10117D8C0;
  if (*(unsigned char *)(v2 + 64)) {
    uint64_t v20 = 0x5320646572616853;
  }
  else {
    uint64_t v20 = 0x2065746176697250;
  }
  if (*(unsigned char *)(v2 + 64)) {
    unint64_t v21 = 0xEC00000065706F63;
  }
  else {
    unint64_t v21 = 0xED000065706F6353;
  }
  *(void *)(inited + 56) = &type metadata for String;
  unint64_t v22 = sub_100528BE4();
  v19[4] = v20;
  v19[5] = v21;
  uint64_t v23 = 1702257011;
  if (a1) {
    uint64_t v23 = 0x6863746566;
  }
  unint64_t v24 = 0xE500000000000000;
  v19[12] = &type metadata for String;
  v19[13] = v22;
  if (!a1) {
    unint64_t v24 = 0xE400000000000000;
  }
  v19[8] = v22;
  v19[9] = v23;
  v19[10] = v24;
  id v25 = v17;
  uint64_t v26 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v25, (uint64_t)&_mh_execute_header, v26, (uint64_t)"<%{public}@> Activity:%{public}@ Completed", 42, 2, (uint64_t)v19);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  swift_beginAccess();
  sub_10095D914(a1, (uint64_t)v8);
  sub_100522F00((uint64_t)v8, &qword_1016741F0);
  swift_endAccess();
}

uint64_t sub_100ECCF9C(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = type metadata accessor for DispatchPredicate();
  uint64_t v9 = *(void *)(v8 - 8);
  __n128 v11 = __chkstk_darwin(v8, v10);
  uint64_t v13 = (uint64_t *)((char *)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v14 = *(void **)(v4 + 56);
  void *v13 = v14;
  (*(void (**)(void *, void, uint64_t, __n128))(v9 + 104))(v13, enum case for DispatchPredicate.onQueue(_:), v8, v11);
  id v15 = v14;
  LOBYTE(v14) = _dispatchPreconditionTest(_:)();
  (*(void (**)(void *, uint64_t))(v9 + 8))(v13, v8);
  if (v14)
  {
    if (qword_10166FB88 == -1) {
      goto LABEL_3;
    }
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  swift_beginAccess();
  id v16 = (void *)static OS_os_log.dataSync;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  uint64_t v18 = (void *)inited;
  *(_OWORD *)(inited + 16) = xmmword_10117D8C0;
  if (*(unsigned char *)(v4 + 64)) {
    uint64_t v19 = 0x5320646572616853;
  }
  else {
    uint64_t v19 = 0x2065746176697250;
  }
  if (*(unsigned char *)(v4 + 64)) {
    unint64_t v20 = 0xEC00000065706F63;
  }
  else {
    unint64_t v20 = 0xED000065706F6353;
  }
  *(void *)(inited + 56) = &type metadata for String;
  unint64_t v21 = sub_100528BE4();
  v18[4] = v19;
  v18[5] = v20;
  int v22 = a3 & 1;
  uint64_t v23 = 1702257011;
  if (v22) {
    uint64_t v23 = 0x6863746566;
  }
  unint64_t v24 = 0xE500000000000000;
  v18[12] = &type metadata for String;
  v18[13] = v21;
  if (!v22) {
    unint64_t v24 = 0xE400000000000000;
  }
  v18[8] = v21;
  v18[9] = v23;
  v18[10] = v24;
  id v25 = v16;
  uint64_t v26 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v25, (uint64_t)&_mh_execute_header, v26, (uint64_t)"<%{public}@> Activity:%{public}@ Registering handler", 52, 2, (uint64_t)v18);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  uint64_t v27 = swift_allocObject();
  *(void *)(v27 + 16) = a1;
  *(void *)(v27 + 24) = a2;
  swift_beginAccess();
  swift_retain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v30 = *(void *)(v4 + 104);
  *(void *)(v4 + 104) = 0x8000000000000000;
  sub_100979314((uint64_t)&unk_1016A1C80, v27, v22, isUniquelyReferenced_nonNull_native);
  *(void *)(v4 + 104) = v30;
  swift_bridgeObjectRelease();
  return swift_endAccess();
}

uint64_t sub_100ECD2C4(uint64_t a1, int *a2)
{
  uint64_t v5 = (uint64_t (*)(void))((char *)a2 + *a2);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v3;
  void *v3 = v2;
  v3[1] = sub_100528488;
  return v5();
}

void sub_100ECD390(char *a1, char a2)
{
  unint64_t v3 = v2;
  uint64_t v107 = a1;
  uint64_t v5 = sub_1005057FC(&qword_1016741F0);
  __chkstk_darwin(v5 - 8, v6);
  uint64_t v106 = (uint64_t)&v101 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8, v9);
  __n128 v11 = (char *)&v101 - v10;
  uint64_t v12 = type metadata accessor for CRLSyncScheduledActivity(0);
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12, v14);
  uint64_t v108 = (uint64_t)&v101 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16, v17);
  uint64_t v109 = (uint64_t)&v101 - v18;
  uint64_t v19 = type metadata accessor for DispatchPredicate();
  uint64_t v20 = *(void *)(v19 - 8);
  __n128 v22 = __chkstk_darwin(v19, v21);
  unint64_t v24 = (uint64_t *)((char *)&v101 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0));
  id v25 = *(void **)(v3 + 56);
  void *v24 = v25;
  (*(void (**)(void *, void, uint64_t, __n128))(v20 + 104))(v24, enum case for DispatchPredicate.onQueue(_:), v19, v22);
  id v26 = v25;
  LOBYTE(v25) = _dispatchPreconditionTest(_:)();
  (*(void (**)(void *, uint64_t))(v20 + 8))(v24, v19);
  if ((v25 & 1) == 0)
  {
    __break(1u);
    goto LABEL_92;
  }
  LODWORD(v19) = a2 & 1;
  swift_beginAccess();
  uint64_t v27 = *(void *)(v3 + 112);
  if (!*(void *)(v27 + 16))
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v11, 1, 1, v12);
    goto LABEL_8;
  }
  swift_bridgeObjectRetain();
  unint64_t v28 = sub_1009571B8(v19);
  if (v29)
  {
    sub_100ED0FC0(*(void *)(v27 + 56) + *(void *)(v13 + 72) * v28, (uint64_t)v11, type metadata accessor for CRLSyncScheduledActivity);
    uint64_t v30 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56);
    v30(v11, 0, 1, v12);
  }
  else
  {
    uint64_t v30 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56);
    v30(v11, 1, 1, v12);
  }
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) != 1)
  {
    uint64_t v41 = v109;
    sub_100ED1030((uint64_t)v11, v109, type metadata accessor for CRLSyncScheduledActivity);
    uint64_t v42 = v108;
    sub_100ED0FC0(v41, v108, type metadata accessor for CRLSyncScheduledActivity);
    uint64_t v43 = *(int *)(v12 + 20);
    uint64_t v44 = *(void *)(v42 + v43);
    if (v44 == 2)
    {
      if (v107 != (char *)1)
      {
LABEL_89:
        sub_100ED1098(v109, type metadata accessor for CRLSyncScheduledActivity);
        uint64_t v57 = v42;
LABEL_90:
        sub_100ED1098(v57, type metadata accessor for CRLSyncScheduledActivity);
        return;
      }
      uint64_t v103 = *(int *)(v12 + 20);
      uint64_t v104 = 2;
      uint64_t v105 = v30;
      if (qword_10166FB88 != -1) {
        swift_once();
      }
      swift_beginAccess();
      uint64_t v107 = (char *)static OS_os_log.dataSync;
      sub_1005057FC((uint64_t *)&unk_101672B40);
      uint64_t inited = swift_initStackObject();
      uint64_t v59 = (void *)inited;
      *(_OWORD *)(inited + 16) = xmmword_10117D8C0;
      if (*(unsigned char *)(v3 + 64)) {
        uint64_t v60 = 0x5320646572616853;
      }
      else {
        uint64_t v60 = 0x2065746176697250;
      }
      if (*(unsigned char *)(v3 + 64)) {
        unint64_t v61 = 0xEC00000065706F63;
      }
      else {
        unint64_t v61 = 0xED000065706F6353;
      }
      *(void *)(inited + 56) = &type metadata for String;
      unint64_t v62 = sub_100528BE4();
      v59[4] = v60;
      v59[5] = v61;
      uint64_t v63 = 1702257011;
      if (v19) {
        uint64_t v63 = 0x6863746566;
      }
      unint64_t v64 = 0xE500000000000000;
      v59[12] = &type metadata for String;
      v59[13] = v62;
      if (!v19) {
        unint64_t v64 = 0xE400000000000000;
      }
      v59[8] = v62;
      v59[9] = v63;
      v59[10] = v64;
      int v65 = v107;
      uint64_t v66 = static os_log_type_t.default.getter();
      sub_100BAC898((uint64_t)v65, (uint64_t)&_mh_execute_header, v66, (uint64_t)"<%{public}@> Activity:%{public}@ Executing --> Pending", 54, 2, (uint64_t)v59);
      swift_setDeallocating();
      sub_1005057FC(&qword_101672B50);
      swift_arrayDestroy();

      uint64_t v67 = 1;
      uint64_t v42 = v108;
    }
    else
    {
      uint64_t v105 = v30;
      if (v44 == 1)
      {
        uint64_t v42 = 0xED000065706F6353;
        uint64_t v45 = 0x5320646572616853;
        uint64_t v46 = 0x2065746176697250;
        if ((unint64_t)(v107 - 1) < 2)
        {
          unint64_t v47 = 0xED000065706F6353;
          if (qword_10166FB88 != -1) {
            swift_once();
          }
          swift_beginAccess();
          CGRect v48 = (void *)static OS_os_log.dataSync;
          sub_1005057FC((uint64_t *)&unk_101672B40);
          uint64_t v49 = swift_initStackObject();
          double v50 = (void *)v49;
          *(_OWORD *)(v49 + 16) = xmmword_10117D8C0;
          if (*(unsigned char *)(v3 + 64)) {
            uint64_t v51 = 0x5320646572616853;
          }
          else {
            uint64_t v51 = 0x2065746176697250;
          }
          if (*(unsigned char *)(v3 + 64)) {
            unint64_t v47 = 0xEC00000065706F63;
          }
          *(void *)(v49 + 56) = &type metadata for String;
          unint64_t v52 = sub_100528BE4();
          v50[4] = v51;
          v50[5] = v47;
          uint64_t v53 = 0x6863746566;
          if (!v19) {
            uint64_t v53 = 1702257011;
          }
          unint64_t v54 = 0xE500000000000000;
          unsigned char v50[12] = &type metadata for String;
          v50[13] = v52;
          if (!v19) {
            unint64_t v54 = 0xE400000000000000;
          }
          v50[8] = v52;
          v50[9] = v53;
          v50[10] = v54;
          id v55 = v48;
          uint64_t v56 = static os_log_type_t.default.getter();
          sub_100BAC898((uint64_t)v55, (uint64_t)&_mh_execute_header, v56, (uint64_t)"<%{public}@> Activity:%{public}@ Attempting invalid update from pending to scheduled", 84, 2, (uint64_t)v50);
          swift_setDeallocating();
          sub_1005057FC(&qword_101672B50);
          swift_arrayDestroy();

          sub_100ED1098(v109, type metadata accessor for CRLSyncScheduledActivity);
          uint64_t v57 = v108;
          goto LABEL_90;
        }
        uint64_t v103 = v43;
        uint64_t v104 = 1;
        if (qword_10166FB88 == -1) {
          goto LABEL_63;
        }
        goto LABEL_94;
      }
      uint64_t v103 = v43;
      uint64_t v104 = v44;
      uint64_t v68 = 0x2065746176697250;
      uint64_t v69 = qword_10166FB88;
      swift_retain();
      if (v107 != (char *)2)
      {
        if (v69 != -1) {
          swift_once();
        }
        swift_beginAccess();
        uint64_t v103 = static OS_os_log.dataSync;
        sub_1005057FC((uint64_t *)&unk_101672B40);
        uint64_t v88 = swift_initStackObject();
        uint64_t v89 = (void *)v88;
        *(_OWORD *)(v88 + 16) = xmmword_10117DF40;
        if (*(unsigned char *)(v3 + 64)) {
          uint64_t v90 = 0x5320646572616853;
        }
        else {
          uint64_t v90 = 0x2065746176697250;
        }
        if (*(unsigned char *)(v3 + 64)) {
          unint64_t v91 = 0xEC00000065706F63;
        }
        else {
          unint64_t v91 = 0xED000065706F6353;
        }
        *(void *)(v88 + 56) = &type metadata for String;
        unint64_t v92 = sub_100528BE4();
        v89[4] = v90;
        v89[5] = v91;
        uint64_t v93 = 0x6863746566;
        if (!v19) {
          uint64_t v93 = 1702257011;
        }
        unint64_t v94 = 0xE500000000000000;
        v89[12] = &type metadata for String;
        v89[13] = v92;
        if (!v19) {
          unint64_t v94 = 0xE400000000000000;
        }
        v89[8] = v92;
        v89[9] = v93;
        v89[10] = v94;
        uint64_t v95 = 0x656C756465686373;
        if (v107 == (char *)1) {
          uint64_t v95 = 0x676E69646E6570;
        }
        unint64_t v96 = 0xE900000000000064;
        if (v107 == (char *)1) {
          unint64_t v96 = 0xE700000000000000;
        }
        v89[17] = &type metadata for String;
        v89[18] = v92;
        v89[14] = v95;
        v89[15] = v96;
        id v97 = (id)v103;
        uint64_t v98 = static os_log_type_t.default.getter();
        sub_100BAC898((uint64_t)v97, (uint64_t)&_mh_execute_header, v98, (uint64_t)"<%{public}@> Activity:%{public}@ Attempting Invalid state update, bailing... Scheduled --> <%{public}@>", 103, 2, (uint64_t)v89);
        swift_setDeallocating();
        sub_1005057FC(&qword_101672B50);
        swift_arrayDestroy();

        uint64_t v42 = v108;
        goto LABEL_88;
      }
      if (v69 != -1) {
        swift_once();
      }
      swift_beginAccess();
      uint64_t v107 = (char *)static OS_os_log.dataSync;
      sub_1005057FC((uint64_t *)&unk_101672B40);
      uint64_t v70 = swift_initStackObject();
      uint64_t v71 = (void *)v70;
      *(_OWORD *)(v70 + 16) = xmmword_10117D8C0;
      if (*(unsigned char *)(v3 + 64))
      {
        uint64_t v68 = 0x5320646572616853;
        unint64_t v3 = 0xEC00000065706F63;
      }
      else
      {
        unint64_t v3 = 0xED000065706F6353;
      }
      *(void *)(v70 + 56) = &type metadata for String;
      unint64_t v72 = sub_100528BE4();
      v71[4] = v68;
      uint64_t v45 = (uint64_t)(v71 + 4);
      v71[5] = v3;
      uint64_t v73 = 0x6863746566;
      if (!v19) {
        uint64_t v73 = 1702257011;
      }
      unint64_t v74 = 0xE500000000000000;
      v71[12] = &type metadata for String;
      v71[13] = v72;
      if (!v19) {
        unint64_t v74 = 0xE400000000000000;
      }
      v71[8] = v72;
      v71[9] = v73;
      v71[10] = v74;
      uint64_t v46 = v107;
      uint64_t v75 = static os_log_type_t.default.getter();
      sub_100BAC898(v46, (uint64_t)&_mh_execute_header, v75, (uint64_t)"<%{public}@> Activity:%{public}@ Scheduled --> Executing", 56, 2, (uint64_t)v71);
      swift_setDeallocating();
      sub_1005057FC(&qword_101672B50);
      swift_arrayDestroy();

      sub_100ED14A4(v104);
      uint64_t v76 = *(int *)(v12 + 24);
      uint64_t v42 = v108;
      uint64_t v77 = *(void *)(v108 + v76);
      BOOL v78 = __OFADD__(v77, 1);
      uint64_t v79 = v77 + 1;
      if (v78)
      {
        __break(1u);
LABEL_94:
        swift_once();
LABEL_63:
        swift_beginAccess();
        id v102 = (id)static OS_os_log.dataSync;
        sub_1005057FC((uint64_t *)&unk_101672B40);
        uint64_t v80 = swift_initStackObject();
        uint64_t v81 = (void *)v80;
        *(_OWORD *)(v80 + 16) = xmmword_10117D8C0;
        if (*(unsigned char *)(v3 + 64))
        {
          uint64_t v46 = v45;
          unint64_t v82 = 0xEC00000065706F63;
        }
        else
        {
          unint64_t v82 = v42;
        }
        *(void *)(v80 + 56) = &type metadata for String;
        unint64_t v83 = sub_100528BE4();
        v81[4] = v46;
        v81[5] = v82;
        uint64_t v84 = 0x6863746566;
        if (!v19) {
          uint64_t v84 = 1702257011;
        }
        unint64_t v85 = 0xE500000000000000;
        v81[12] = &type metadata for String;
        v81[13] = v83;
        if (!v19) {
          unint64_t v85 = 0xE400000000000000;
        }
        v81[8] = v83;
        v81[9] = v84;
        v81[10] = v85;
        id v86 = v102;
        uint64_t v87 = static os_log_type_t.default.getter();
        sub_100BAC898((uint64_t)v86, (uint64_t)&_mh_execute_header, v87, (uint64_t)"<%{public}@> Activity:%{public}@ Pending --> Scheduled", 54, 2, (uint64_t)v81);
        swift_setDeallocating();
        sub_1005057FC(&qword_101672B50);
        swift_arrayDestroy();

        uint64_t v42 = v108;
        *(void *)(v108 + v103) = v107;
        swift_retain();
        goto LABEL_88;
      }
      *(void *)(v108 + v76) = v79;
      uint64_t v67 = 2;
    }
    *(void *)(v42 + v103) = v67;
LABEL_88:
    unint64_t v100 = v105;
    uint64_t v99 = v106;
    sub_100ED0FC0(v42, v106, type metadata accessor for CRLSyncScheduledActivity);
    v100((char *)v99, 0, 1, v12);
    swift_beginAccess();
    sub_10057F344(v99, v19);
    swift_endAccess();
    sub_100ED14A4(v104);
    goto LABEL_89;
  }
LABEL_8:
  sub_100522F00((uint64_t)v11, &qword_1016741F0);
  if (qword_10166FB88 != -1) {
LABEL_92:
  }
    swift_once();
  swift_beginAccess();
  uint64_t v31 = (void *)static OS_os_log.dataSync;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t v32 = swift_initStackObject();
  uint64_t v33 = (void *)v32;
  *(_OWORD *)(v32 + 16) = xmmword_10117D8C0;
  if (*(unsigned char *)(v3 + 64)) {
    uint64_t v34 = 0x5320646572616853;
  }
  else {
    uint64_t v34 = 0x2065746176697250;
  }
  if (*(unsigned char *)(v3 + 64)) {
    unint64_t v35 = 0xEC00000065706F63;
  }
  else {
    unint64_t v35 = 0xED000065706F6353;
  }
  *(void *)(v32 + 56) = &type metadata for String;
  unint64_t v36 = sub_100528BE4();
  v33[4] = v34;
  v33[5] = v35;
  uint64_t v37 = 1702257011;
  if (v19) {
    uint64_t v37 = 0x6863746566;
  }
  unint64_t v38 = 0xE500000000000000;
  v33[12] = &type metadata for String;
  v33[13] = v36;
  if (!v19) {
    unint64_t v38 = 0xE400000000000000;
  }
  v33[8] = v36;
  v33[9] = v37;
  v33[10] = v38;
  id v39 = v31;
  uint64_t v40 = static os_log_type_t.error.getter();
  sub_100BAC898((uint64_t)v39, (uint64_t)&_mh_execute_header, v40, (uint64_t)"<%{public}@> Activity:%{public}@ Attempting to update activity state for non-existent activity", 94, 2, (uint64_t)v33);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();
}

uint64_t sub_100ECE13C()
{
  uint64_t v71 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v69 = *(void *)(v71 - 8);
  __chkstk_darwin(v71, v1);
  uint64_t v70 = (char *)&v66 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v78 = type metadata accessor for DispatchQoS();
  uint64_t v68 = *(void *)(v78 - 8);
  __chkstk_darwin(v78, v3);
  uint64_t v79 = (char *)&v66 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for CRLSyncActivity(0);
  unint64_t v74 = *(void **)(v5 - 8);
  __chkstk_darwin(v5 - 8, v6);
  uint64_t v77 = (uint64_t)&v66 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8, v9);
  unint64_t v85 = (char *)&v66 - v10;
  uint64_t v67 = v11;
  __chkstk_darwin(v12, v13);
  uint64_t v82 = (uint64_t)&v66 - v14;
  uint64_t v83 = type metadata accessor for CRLSyncScheduledActivity(0);
  uint64_t v80 = *(void *)(v83 - 8);
  __chkstk_darwin(v83, v15);
  uint64_t v17 = (char *)&v66 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_1005057FC(&qword_1016A1C68);
  __chkstk_darwin(v18 - 8, v19);
  uint64_t v21 = (char *)&v66 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22, v23);
  id v25 = (char *)&v66 - v24;
  uint64_t v26 = type metadata accessor for DispatchPredicate();
  uint64_t v27 = *(void *)(v26 - 8);
  __n128 v29 = __chkstk_darwin(v26, v28);
  uint64_t v31 = (char **)((char *)&v66 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v32 = *(void **)(v0 + 56);
  void *v31 = v32;
  (*(void (**)(void *, void, uint64_t, __n128))(v27 + 104))(v31, enum case for DispatchPredicate.onQueue(_:), v26, v29);
  id v76 = v32;
  LOBYTE(v32) = _dispatchPreconditionTest(_:)();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v27 + 8))(v31, v26);
  if (v32)
  {
    swift_beginAccess();
    uint64_t v75 = v0;
    uint64_t v34 = *(void *)(v0 + 112);
    uint64_t v35 = *(void *)(v34 + 64);
    unint64_t v72 = (void (**)(char *, uint64_t))(v34 + 64);
    uint64_t v36 = 1 << *(unsigned char *)(v34 + 32);
    uint64_t v37 = -1;
    if (v36 < 64) {
      uint64_t v37 = ~(-1 << v36);
    }
    unint64_t v38 = v37 & v35;
    uint64_t v73 = (void (**)(char *, uint64_t))((unint64_t)(v36 + 63) >> 6);
    uint64_t v66 = (char *)v73 - 1;
    uint64_t v81 = v34;
    uint64_t result = swift_bridgeObjectRetain();
    uint64_t v39 = 0;
    uint64_t v84 = _swiftEmptyArrayStorage;
    uint64_t v40 = (uint64_t)v85;
    while (!v38)
    {
      uint64_t v47 = v39 + 1;
      if (__OFADD__(v39, 1))
      {
        __break(1u);
        goto LABEL_39;
      }
      if (v47 < (uint64_t)v73)
      {
        unint64_t v48 = (unint64_t)v72[v47];
        if (v48) {
          goto LABEL_13;
        }
        uint64_t v49 = v39 + 2;
        ++v39;
        if (v47 + 1 < (uint64_t)v73)
        {
          unint64_t v48 = (unint64_t)v72[v49];
          if (v48) {
            goto LABEL_16;
          }
          uint64_t v39 = v47 + 1;
          if (v47 + 2 < (uint64_t)v73)
          {
            unint64_t v48 = (unint64_t)v72[v47 + 2];
            if (v48)
            {
              v47 += 2;
              goto LABEL_13;
            }
            uint64_t v49 = v47 + 3;
            uint64_t v39 = v47 + 2;
            if (v47 + 3 < (uint64_t)v73)
            {
              unint64_t v48 = (unint64_t)v72[v49];
              if (!v48)
              {
                while (1)
                {
                  uint64_t v47 = v49 + 1;
                  if (__OFADD__(v49, 1)) {
                    goto LABEL_40;
                  }
                  if (v47 >= (uint64_t)v73)
                  {
                    uint64_t v39 = (uint64_t)v66;
                    goto LABEL_27;
                  }
                  unint64_t v48 = (unint64_t)v72[v47];
                  ++v49;
                  if (v48) {
                    goto LABEL_13;
                  }
                }
              }
LABEL_16:
              uint64_t v47 = v49;
LABEL_13:
              unint64_t v38 = (v48 - 1) & v48;
              unint64_t v43 = __clz(__rbit64(v48)) + (v47 << 6);
              uint64_t v39 = v47;
LABEL_9:
              uint64_t v44 = *(void *)(v81 + 56);
              *uint64_t v21 = *(unsigned char *)(*(void *)(v81 + 48) + v43);
              uint64_t v45 = v44 + *(void *)(v80 + 72) * v43;
              uint64_t v46 = sub_1005057FC(&qword_1016A1C70);
              sub_100ED0FC0(v45, (uint64_t)&v21[*(int *)(v46 + 48)], type metadata accessor for CRLSyncScheduledActivity);
              (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(*(void *)(v46 - 8) + 56))(v21, 0, 1, v46);
              uint64_t v40 = (uint64_t)v85;
              goto LABEL_28;
            }
          }
        }
      }
LABEL_27:
      uint64_t v50 = sub_1005057FC(&qword_1016A1C70);
      (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v50 - 8) + 56))(v21, 1, 1, v50);
      unint64_t v38 = 0;
LABEL_28:
      sub_10051B3EC((uint64_t)v21, (uint64_t)v25, &qword_1016A1C68);
      uint64_t v51 = sub_1005057FC(&qword_1016A1C70);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v51 - 8) + 48))(v25, 1, v51) == 1)
      {
        swift_release();
        uint64_t v55 = *((void *)v84 + 2);
        if (v55)
        {
          uint64_t v56 = *((unsigned __int8 *)v74 + 80);
          uint64_t v57 = (uint64_t)v84 + ((v56 + 32) & ~v56);
          uint64_t v83 = v74[9];
          uint64_t v81 = ((v56 + 24) & ~v56) + v67;
          uint64_t v82 = (v56 + 24) & ~v56;
          uint64_t v80 = v56 | 7;
          unint64_t v74 = v88;
          uint64_t v73 = (void (**)(char *, uint64_t))(v69 + 8);
          unint64_t v72 = (void (**)(char *, uint64_t))(v68 + 8);
          uint64_t v58 = v71;
          uint64_t v59 = v70;
          do
          {
            sub_100ED0FC0(v57, v40, type metadata accessor for CRLSyncActivity);
            uint64_t v60 = v40;
            uint64_t v61 = v77;
            sub_100ED0FC0(v60, v77, type metadata accessor for CRLSyncActivity);
            uint64_t v62 = swift_allocObject();
            *(void *)(v62 + 16) = v75;
            sub_100ED1030(v61, v62 + v82, type metadata accessor for CRLSyncActivity);
            v88[2] = sub_100ED102C;
            v88[3] = v62;
            aBlock[0] = _NSConcreteStackBlock;
            aBlock[1] = *(void *)"";
            v88[0] = sub_100679958;
            v88[1] = &unk_101532840;
            uint64_t v63 = _Block_copy(aBlock);
            swift_retain();
            static DispatchQoS.unspecified.getter();
            id v86 = _swiftEmptyArrayStorage;
            sub_100522CDC();
            sub_1005057FC((uint64_t *)&unk_1016725D0);
            sub_100523288((unint64_t *)&qword_1016747F0, (uint64_t *)&unk_1016725D0);
            unint64_t v64 = v79;
            dispatch thunk of SetAlgebra.init<A>(_:)();
            OS_dispatch_queue.async(group:qos:flags:execute:)();
            int v65 = v63;
            uint64_t v40 = (uint64_t)v85;
            _Block_release(v65);
            (*v73)(v59, v58);
            (*v72)(v64, v78);
            swift_release();
            sub_100ED1098(v40, type metadata accessor for CRLSyncActivity);
            v57 += v83;
            --v55;
          }
          while (v55);
        }
        return swift_bridgeObjectRelease();
      }
      sub_100ED1030((uint64_t)&v25[*(int *)(v51 + 48)], (uint64_t)v17, type metadata accessor for CRLSyncScheduledActivity);
      if (*(void *)&v17[*(int *)(v83 + 20)] == 1)
      {
        sub_100ED0FC0((uint64_t)v17, v82, type metadata accessor for CRLSyncActivity);
        unint64_t v52 = (unint64_t)v84;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v52 = sub_100F65384(0, *(void *)(v52 + 16) + 1, 1, v52);
        }
        unint64_t v54 = *(void *)(v52 + 16);
        unint64_t v53 = *(void *)(v52 + 24);
        uint64_t v84 = (double *)v52;
        if (v54 >= v53 >> 1) {
          uint64_t v84 = (double *)sub_100F65384(v53 > 1, v54 + 1, 1, (unint64_t)v84);
        }
        uint64_t v41 = v84;
        *((void *)v84 + 2) = v54 + 1;
        sub_100ED1030(v82, (uint64_t)v41+ ((*((unsigned __int8 *)v74 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v74 + 80))+ v74[9] * v54, type metadata accessor for CRLSyncActivity);
        uint64_t v40 = (uint64_t)v85;
      }
      uint64_t result = sub_100ED1098((uint64_t)v17, type metadata accessor for CRLSyncScheduledActivity);
    }
    unint64_t v42 = __clz(__rbit64(v38));
    v38 &= v38 - 1;
    unint64_t v43 = v42 | (v39 << 6);
    goto LABEL_9;
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
  return result;
}

void sub_100ECEBC4()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for DispatchPredicate();
  uint64_t v3 = *(void *)(v2 - 8);
  __n128 v5 = __chkstk_darwin(v2, v4);
  uint64_t v7 = (uint64_t *)((char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = *(void **)(v1 + 56);
  *uint64_t v7 = v8;
  (*(void (**)(void *, void, uint64_t, __n128))(v3 + 104))(v7, enum case for DispatchPredicate.onQueue(_:), v2, v5);
  id v9 = v8;
  LOBYTE(v8) = _dispatchPreconditionTest(_:)();
  (*(void (**)(void *, uint64_t))(v3 + 8))(v7, v2);
  if ((v8 & 1) == 0)
  {
    __break(1u);
LABEL_13:
    swift_once();
    goto LABEL_5;
  }
  sub_100522E9C(v1 + 16, (uint64_t)&v18, &qword_1016791E0);
  if (v19)
  {
    sub_10053974C(&v18, (uint64_t)v20);
    sub_10050F848(v20, v21);
    sub_1005057FC(&qword_1016791E8);
    OS_dispatch_queue.sync<A>(execute:)();
    swift_allocObject();
    swift_weakInit();
    sub_100523288(&qword_1016791F0, &qword_1016791E8);
    Publisher<>.sink(receiveValue:)();
    swift_release();
    swift_release();
    swift_beginAccess();
    AnyCancellable.store(in:)();
    swift_endAccess();
    swift_release();
    sub_10050F848(v20, v21);
    OS_dispatch_queue.sync<A>(execute:)();
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v20);
    return;
  }
  sub_100522F00((uint64_t)&v18, &qword_1016791E0);
  if (qword_10166FB88 != -1) {
    goto LABEL_13;
  }
LABEL_5:
  swift_beginAccess();
  uint64_t v10 = (void *)static OS_os_log.dataSync;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  uint64_t v12 = inited;
  *(_OWORD *)(inited + 16) = xmmword_10117E810;
  if (*(unsigned char *)(v1 + 64)) {
    uint64_t v13 = 0x5320646572616853;
  }
  else {
    uint64_t v13 = 0x2065746176697250;
  }
  if (*(unsigned char *)(v1 + 64)) {
    unint64_t v14 = 0xEC00000065706F63;
  }
  else {
    unint64_t v14 = 0xED000065706F6353;
  }
  *(void *)(inited + 56) = &type metadata for String;
  *(void *)(inited + 64) = sub_100528BE4();
  *(void *)(v12 + 32) = v13;
  *(void *)(v12 + 40) = v14;
  id v15 = v10;
  uint64_t v16 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v15, (uint64_t)&_mh_execute_header, v16, (uint64_t)"<%{public}@> Failed to setup reachability listener. Will execute jobs without it", 80, 2, v12);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();
}

uint64_t sub_100ECEFA4(unsigned __int8 *a1)
{
  uint64_t v2 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2, v4);
  uint64_t v6 = (char *)v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for DispatchQoS();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7, v9);
  uint64_t v11 = (char *)v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v12 = *a1;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    if (v12)
    {
      v15[1] = *(void *)(result + 56);
      aBlock[4] = sub_100ED0FA4;
      void aBlock[5] = result;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = *(void *)"";
      void aBlock[2] = sub_100679958;
      void aBlock[3] = &unk_1015327F0;
      v15[0] = _Block_copy(aBlock);
      swift_retain();
      static DispatchQoS.unspecified.getter();
      void v15[2] = _swiftEmptyArrayStorage;
      sub_100522CDC();
      sub_1005057FC((uint64_t *)&unk_1016725D0);
      sub_100523288((unint64_t *)&qword_1016747F0, (uint64_t *)&unk_1016725D0);
      dispatch thunk of SetAlgebra.init<A>(_:)();
      unint64_t v14 = (const void *)v15[0];
      OS_dispatch_queue.async(group:qos:flags:execute:)();
      _Block_release(v14);
      (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
      (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
      swift_release();
    }
    return swift_release();
  }
  return result;
}

uint64_t sub_100ECF260()
{
  uint64_t v1 = type metadata accessor for DispatchPredicate();
  uint64_t v2 = *(void *)(v1 - 8);
  __n128 v4 = __chkstk_darwin(v1, v3);
  uint64_t v6 = (uint64_t *)((char *)v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = *(void **)(v0 + 56);
  *uint64_t v6 = v7;
  (*(void (**)(void *, void, uint64_t, __n128))(v2 + 104))(v6, enum case for DispatchPredicate.onQueue(_:), v1, v4);
  id v8 = v7;
  LOBYTE(v7) = _dispatchPreconditionTest(_:)();
  (*(void (**)(void *, uint64_t))(v2 + 8))(v6, v1);
  if (v7) {
    return sub_100ECE13C();
  }
  __break(1u);
  swift_once();
  swift_beginAccess();
  uint64_t v10 = (void *)static OS_os_log.dataSync;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  int v12 = (void *)inited;
  *(_OWORD *)(inited + 16) = xmmword_10117DF40;
  BOOL v13 = *(unsigned char *)(v0 + 64) == 0;
  if (*(unsigned char *)(v0 + 64)) {
    uint64_t v14 = 0x5320646572616853;
  }
  else {
    uint64_t v14 = 0x2065746176697250;
  }
  if (v13) {
    unint64_t v15 = 0xED000065706F6353;
  }
  else {
    unint64_t v15 = 0xEC00000065706F63;
  }
  *(void *)(inited + 56) = &type metadata for String;
  unint64_t v16 = sub_100528BE4();
  v12[8] = v16;
  v12[4] = v14;
  v12[5] = v15;
  swift_getErrorValue();
  uint64_t v17 = v25[6];
  uint64_t v18 = v25[7];
  id v19 = v10;
  uint64_t v20 = Error.publicDescription.getter(v17, v18);
  v12[12] = &type metadata for String;
  v12[13] = v16;
  v12[9] = v20;
  v12[10] = v21;
  swift_getErrorValue();
  uint64_t v22 = Error.fullDescription.getter(v25[2]);
  v12[17] = &type metadata for String;
  v12[18] = v16;
  v12[14] = v22;
  v12[15] = v23;
  uint64_t v24 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v19, (uint64_t)&_mh_execute_header, v24, (uint64_t)"<%{public}@> Failed to schedule pending activities after network connected. Error:\"<%{public}@> <%@>\"", 101, 2, (uint64_t)v12);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  return swift_errorRelease();
}

uint64_t sub_100ECF540()
{
  sub_100522F00(v0 + 16, &qword_1016791E0);

  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for CRLSyncScheduler()
{
  return self;
}

void *sub_100ECF5CC(unsigned char *a1, void *a2, uint64_t a3)
{
  __n128 v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *__n128 v4 = *a2;
    __n128 v4 = (void *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *a1 = *(unsigned char *)a2;
    uint64_t v7 = (int *)type metadata accessor for CRLSyncActivity(0);
    uint64_t v8 = v7[5];
    uint64_t v9 = (char *)v4 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = type metadata accessor for Date();
    uint64_t v12 = *(void *)(v11 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
    {
      uint64_t v13 = sub_1005057FC(&qword_101672EB0);
      memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    *((unsigned char *)v4 + v7[6]) = *((unsigned char *)a2 + v7[6]);
    uint64_t v15 = v7[7];
    unint64_t v16 = (char *)v4 + v15;
    uint64_t v17 = (char *)a2 + v15;
    *(void *)unint64_t v16 = *(void *)v17;
    v16[8] = v17[8];
    *((unsigned char *)v4 + v7[8]) = *((unsigned char *)a2 + v7[8]);
    uint64_t v18 = *(int *)(a3 + 20);
    uint64_t v19 = *(void *)((char *)a2 + v18);
    if ((unint64_t)(v19 - 1) >= 2) {
      uint64_t v19 = swift_retain();
    }
    *(void *)((char *)v4 + v18) = v19;
    *(void *)((char *)v4 + *(int *)(a3 + 24)) = *(void *)((char *)a2 + *(int *)(a3 + 24));
  }
  return v4;
}

uint64_t type metadata accessor for CRLSyncActivity(uint64_t a1)
{
  return sub_100512D5C(a1, qword_1016A1C18);
}

uint64_t sub_100ECF7C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = a1 + *(int *)(type metadata accessor for CRLSyncActivity(0) + 20);
  uint64_t v5 = type metadata accessor for Date();
  uint64_t v6 = *(void *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  }
  uint64_t result = *(void *)(a1 + *(int *)(a2 + 20));
  if ((unint64_t)(result - 1) >= 2)
  {
    return swift_release();
  }
  return result;
}

unsigned char *sub_100ECF8B8(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = (int *)type metadata accessor for CRLSyncActivity(0);
  uint64_t v7 = v6[5];
  uint64_t v8 = &a1[v7];
  uint64_t v9 = &a2[v7];
  uint64_t v10 = type metadata accessor for Date();
  uint64_t v11 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    uint64_t v12 = sub_1005057FC(&qword_101672EB0);
    memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v11 + 16))(v8, v9, v10);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  a1[v6[6]] = a2[v6[6]];
  uint64_t v13 = v6[7];
  uint64_t v14 = &a1[v13];
  uint64_t v15 = &a2[v13];
  *(void *)uint64_t v14 = *(void *)v15;
  v14[8] = v15[8];
  a1[v6[8]] = a2[v6[8]];
  uint64_t v16 = *(int *)(a3 + 20);
  uint64_t v17 = *(void *)&a2[v16];
  if ((unint64_t)(v17 - 1) >= 2) {
    uint64_t v17 = swift_retain();
  }
  *(void *)&a1[v16] = v17;
  *(void *)&a1[*(int *)(a3 + 24)] = *(void *)&a2[*(int *)(a3 + 24)];
  return a1;
}

unsigned char *sub_100ECFA44(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v5 = (int *)type metadata accessor for CRLSyncActivity(0);
  uint64_t v6 = v5[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = type metadata accessor for Date();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(unsigned char *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    uint64_t v14 = sub_1005057FC(&qword_101672EB0);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v10 + 24))(v7, v8, v9);
LABEL_7:
  a1[v5[6]] = a2[v5[6]];
  uint64_t v15 = v5[7];
  uint64_t v16 = &a1[v15];
  uint64_t v17 = &a2[v15];
  uint64_t v18 = *(void *)v17;
  v16[8] = v17[8];
  *(void *)uint64_t v16 = v18;
  a1[v5[8]] = a2[v5[8]];
  uint64_t v19 = *(int *)(a3 + 20);
  uint64_t v20 = &a1[v19];
  uint64_t v21 = *(void *)&a2[v19];
  unint64_t v22 = v21 - 1;
  if ((unint64_t)(*(void *)&a1[v19] - 1) >= 2)
  {
    if (v22 >= 2)
    {
      *uint64_t v20 = v21;
      swift_retain();
      swift_release();
    }
    else
    {
      sub_100522F00((uint64_t)&a1[v19], &qword_1016A1B20);
      *uint64_t v20 = *(void *)&a2[v19];
    }
  }
  else
  {
    *uint64_t v20 = v21;
    if (v22 >= 2) {
      swift_retain();
    }
  }
  *(void *)&a1[*(int *)(a3 + 24)] = *(void *)&a2[*(int *)(a3 + 24)];
  return a1;
}

unsigned char *sub_100ECFC94(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = (int *)type metadata accessor for CRLSyncActivity(0);
  uint64_t v7 = v6[5];
  uint64_t v8 = &a1[v7];
  uint64_t v9 = &a2[v7];
  uint64_t v10 = type metadata accessor for Date();
  uint64_t v11 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    uint64_t v12 = sub_1005057FC(&qword_101672EB0);
    memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v11 + 32))(v8, v9, v10);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  a1[v6[6]] = a2[v6[6]];
  uint64_t v13 = v6[7];
  uint64_t v14 = &a1[v13];
  uint64_t v15 = &a2[v13];
  *(void *)uint64_t v14 = *(void *)v15;
  v14[8] = v15[8];
  a1[v6[8]] = a2[v6[8]];
  uint64_t v16 = *(int *)(a3 + 24);
  *(void *)&a1[*(int *)(a3 + 20)] = *(void *)&a2[*(int *)(a3 + 20)];
  *(void *)&a1[v16] = *(void *)&a2[v16];
  return a1;
}

unsigned char *sub_100ECFE0C(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v5 = (int *)type metadata accessor for CRLSyncActivity(0);
  uint64_t v6 = v5[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = type metadata accessor for Date();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v10 + 32))(v7, v8, v9);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(unsigned char *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    uint64_t v14 = sub_1005057FC(&qword_101672EB0);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v10 + 40))(v7, v8, v9);
LABEL_7:
  a1[v5[6]] = a2[v5[6]];
  uint64_t v15 = v5[7];
  uint64_t v16 = &a1[v15];
  uint64_t v17 = &a2[v15];
  *(void *)uint64_t v16 = *(void *)v17;
  v16[8] = v17[8];
  a1[v5[8]] = a2[v5[8]];
  uint64_t v18 = *(int *)(a3 + 20);
  uint64_t v19 = &a1[v18];
  uint64_t v20 = *(void *)&a2[v18];
  if ((unint64_t)(*(void *)&a1[v18] - 1) >= 2)
  {
    if ((unint64_t)(v20 - 1) >= 2)
    {
      *uint64_t v19 = v20;
      swift_release();
      goto LABEL_12;
    }
    sub_100522F00((uint64_t)&a1[v18], &qword_1016A1B20);
    uint64_t v20 = *(void *)&a2[v18];
  }
  *uint64_t v19 = v20;
LABEL_12:
  *(void *)&a1[*(int *)(a3 + 24)] = *(void *)&a2[*(int *)(a3 + 24)];
  return a1;
}

uint64_t sub_100ED0038(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100ED004C);
}

uint64_t sub_100ED004C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for CRLSyncActivity(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    int v11 = v10 - 1;
    if (v11 < 0) {
      int v11 = -1;
    }
    if (v11 >= 2) {
      return (v11 - 1);
    }
    else {
      return 0;
    }
  }
}

uint64_t sub_100ED0120(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100ED0134);
}

uint64_t sub_100ED0134(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for CRLSyncActivity(0);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 + 2);
  }
  return result;
}

uint64_t type metadata accessor for CRLSyncScheduledActivity(uint64_t a1)
{
  return sub_100512D5C(a1, qword_1016A1B80);
}

uint64_t sub_100ED0210()
{
  uint64_t result = type metadata accessor for CRLSyncActivity(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void *sub_100ED02B4(unsigned char *a1, void *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *a1 = *(unsigned char *)a2;
    uint64_t v7 = a3[5];
    uint64_t v8 = &a1[v7];
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = type metadata accessor for Date();
    uint64_t v11 = *(void *)(v10 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
    {
      uint64_t v12 = sub_1005057FC(&qword_101672EB0);
      memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(unsigned char *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
    }
    uint64_t v14 = a3[7];
    *((unsigned char *)v4 + a3[6]) = *((unsigned char *)a2 + a3[6]);
    uint64_t v15 = (char *)v4 + v14;
    uint64_t v16 = (char *)a2 + v14;
    *(void *)uint64_t v15 = *(void *)v16;
    v15[8] = v16[8];
    *((unsigned char *)v4 + a3[8]) = *((unsigned char *)a2 + a3[8]);
  }
  return v4;
}

uint64_t sub_100ED0458(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a1 + *(int *)(a2 + 20);
  uint64_t v3 = type metadata accessor for Date();
  uint64_t v6 = *(void *)(v3 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v2, 1, v3);
  if (!result)
  {
    int v5 = *(uint64_t (**)(uint64_t, uint64_t))(v6 + 8);
    return v5(v2, v3);
  }
  return result;
}

unsigned char *sub_100ED052C(unsigned char *a1, unsigned char *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = type metadata accessor for Date();
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    uint64_t v11 = sub_1005057FC(&qword_101672EB0);
    memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v10 + 16))(v7, v8, v9);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  uint64_t v12 = a3[7];
  a1[a3[6]] = a2[a3[6]];
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  *(void *)uint64_t v13 = *(void *)v14;
  v13[8] = v14[8];
  a1[a3[8]] = a2[a3[8]];
  return a1;
}

unsigned char *sub_100ED0680(unsigned char *a1, unsigned char *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = type metadata accessor for Date();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v10 + 24))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(unsigned char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    uint64_t v14 = sub_1005057FC(&qword_101672EB0);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  a1[a3[6]] = a2[a3[6]];
  uint64_t v15 = a3[7];
  uint64_t v16 = &a1[v15];
  uint64_t v17 = &a2[v15];
  uint64_t v18 = *(void *)v17;
  v16[8] = v17[8];
  *(void *)uint64_t v16 = v18;
  a1[a3[8]] = a2[a3[8]];
  return a1;
}

unsigned char *sub_100ED083C(unsigned char *a1, unsigned char *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = type metadata accessor for Date();
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    uint64_t v11 = sub_1005057FC(&qword_101672EB0);
    memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  uint64_t v12 = a3[7];
  a1[a3[6]] = a2[a3[6]];
  int v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  *(void *)int v13 = *(void *)v14;
  v13[8] = v14[8];
  a1[a3[8]] = a2[a3[8]];
  return a1;
}

unsigned char *sub_100ED0990(unsigned char *a1, unsigned char *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = type metadata accessor for Date();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v10 + 40))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(unsigned char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    uint64_t v14 = sub_1005057FC(&qword_101672EB0);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v10 + 32))(v7, v8, v9);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  uint64_t v15 = a3[7];
  a1[a3[6]] = a2[a3[6]];
  uint64_t v16 = &a1[v15];
  uint64_t v17 = &a2[v15];
  *(void *)uint64_t v16 = *(void *)v17;
  v16[8] = v17[8];
  a1[a3[8]] = a2[a3[8]];
  return a1;
}

uint64_t sub_100ED0B48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100ED0B5C);
}

uint64_t sub_100ED0B5C(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 254)
  {
    unsigned int v4 = *a1;
    if (v4 >= 2) {
      return v4 - 1;
    }
    else {
      return 0;
    }
  }
  else
  {
    uint64_t v8 = sub_1005057FC(&qword_101672EB0);
    uint64_t v9 = *(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = &a1[*(int *)(a3 + 20)];
    return v9(v11, a2, v10);
  }
}

uint64_t sub_100ED0C08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100ED0C1C);
}

unsigned char *sub_100ED0C1C(unsigned char *result, uint64_t a2, int a3, uint64_t a4)
{
  int v5 = result;
  if (a3 == 254)
  {
    *uint64_t result = a2 + 1;
  }
  else
  {
    uint64_t v7 = sub_1005057FC(&qword_101672EB0);
    uint64_t v8 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = &v5[*(int *)(a4 + 20)];
    return (unsigned char *)v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_100ED0CC4()
{
  sub_1005E873C();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t initializeWithCopy for CRLSyncSchedulerConfiguration(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for CRLSyncSchedulerConfiguration(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v4;
  swift_retain();
  swift_release();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  return a1;
}

uint64_t assignWithTake for CRLSyncSchedulerConfiguration(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_release();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  return a1;
}

uint64_t getEnumTagSinglePayload for CRLSyncSchedulerConfiguration(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 40)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CRLSyncSchedulerConfiguration(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 40) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLSyncSchedulerConfiguration()
{
  return &type metadata for CRLSyncSchedulerConfiguration;
}

ValueMetadata *type metadata accessor for CRLSyncActivityIdentifier()
{
  return &type metadata for CRLSyncActivityIdentifier;
}

unint64_t sub_100ED0F10()
{
  unint64_t result = qword_1016A1C60;
  if (!qword_1016A1C60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A1C60);
  }
  return result;
}

uint64_t sub_100ED0F64()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100ED0F9C(unsigned __int8 *a1)
{
  return sub_100ECEFA4(a1);
}

uint64_t sub_100ED0FA8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100ED0FB8()
{
  return swift_release();
}

uint64_t sub_100ED0FC0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_100ED1030(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_100ED1098(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_100ED10F8(uint64_t a1, double a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  *(void *)(v6 + 32) = a5;
  *(void *)(v6 + 40) = a6;
  *(double *)(v6 + 24) = a2;
  *(void *)(v6 + 16) = a1;
  return _swift_task_switch(sub_100ED1120, 0, 0);
}

uint64_t sub_100ED1120(unint64_t a1)
{
  double v2 = *(double *)(v1 + 24) * 1000000000.0;
  if ((~*(void *)&v2 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_8;
  }
  if (v2 <= -1.0)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  if (v2 >= 1.84467441e19)
  {
LABEL_9:
    __break(1u);
    return static Task<>.sleep(nanoseconds:)(a1);
  }
  unint64_t v3 = (unint64_t)v2;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 48) = v4;
  *uint64_t v4 = v1;
  v4[1] = sub_100ED1204;
  a1 = v3;
  return static Task<>.sleep(nanoseconds:)(a1);
}

uint64_t sub_100ED1204()
{
  double v2 = (void *)*v1;
  unint64_t v3 = (void *)*v1;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v4 = (uint64_t (*)(void))v3[1];
    return v4();
  }
  else
  {
    uint64_t v8 = (uint64_t (*)(uint64_t))(v2[4] + *(int *)v2[4]);
    uint64_t v6 = (void *)swift_task_alloc();
    v2[7] = v6;
    *uint64_t v6 = v3;
    v6[1] = sub_100ED13B0;
    uint64_t v7 = v2[2];
    return v8(v7);
  }
}

uint64_t sub_100ED13B0()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_100ED14A4(uint64_t result)
{
  if ((unint64_t)(result - 1) >= 2) {
    return swift_release();
  }
  return result;
}

uint64_t sub_100ED14B8()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100ED14F0(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  void *v5 = v2;
  v5[1] = sub_100528D08;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_1016A1C78 + dword_1016A1C78);
  return v6(a1, v4);
}

unint64_t sub_100ED15A8()
{
  unint64_t result = qword_1016A1C88;
  if (!qword_1016A1C88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A1C88);
  }
  return result;
}

uint64_t sub_100ED15FC()
{
  uint64_t v2 = *(int **)(v0 + 16);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  void *v3 = v1;
  v3[1] = sub_100528D08;
  uint64_t v4 = (uint64_t (*)(int *))((char *)&dword_1016A1C90 + dword_1016A1C90);
  return v4(v2);
}

void sub_100ED16A8(uint64_t a1, uint64_t a2, double (*a3)(uint64_t))
{
  uint64_t v6 = sub_1005057FC(&qword_101672EB0);
  __chkstk_darwin(v6 - 8, v7);
  uint64_t v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for Date();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10, v12);
  uint64_t v14 = (char *)&v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15, v16);
  uint64_t v18 = (char *)&v20 - v17;
  sub_100522E9C(a2, (uint64_t)v9, &qword_101672EB0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
  {
    sub_100522F00((uint64_t)v9, &qword_101672EB0);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v18, v9, v10);
    static Date.now.getter();
    Date.timeIntervalSince(_:)();
    uint64_t v19 = *(void (**)(char *, uint64_t))(v11 + 8);
    v19(v14, v10);
    v19(v18, v10);
  }
  a3(a1);
}

uint64_t sub_100ED18D4()
{
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_100ED1914(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  char v5 = *(unsigned char *)(v1 + 24);
  uint64_t v7 = *(void *)(v1 + 32);
  uint64_t v6 = *(void *)(v1 + 40);
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_100528488;
  return sub_100ECC64C(a1, v4, v5, v7, v6);
}

uint64_t sub_100ED19D8()
{
  return sub_100A5A91C();
}

uint64_t sub_100ED19F4()
{
  swift_unknownObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_100ED1A34(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 32);
  uint64_t v5 = swift_task_alloc();
  long long v6 = *(_OWORD *)(v1 + 40);
  *(void *)(v2 + 16) = v5;
  *(void *)uint64_t v5 = v2;
  *(void *)(v5 + 8) = sub_100528D08;
  *(_OWORD *)(v5 + 32) = v6;
  *(void *)(v5 + 24) = v4;
  *(void *)(v5 + 16) = a1;
  return _swift_task_switch(sub_100ED1120, 0, 0);
}

uint64_t sub_100ED1AF8()
{
  swift_release();

  return _swift_deallocObject(v0, 25, 7);
}

void sub_100ED1B30()
{
  sub_100ECD390((char *)2, *(unsigned char *)(v0 + 24));
}

uint64_t sub_100ED1B60()
{
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 41, 7);
}

uint64_t sub_100ED1BA0()
{
  return sub_100ECCF9C(*(void *)(v0 + 24), *(void *)(v0 + 32), *(unsigned char *)(v0 + 40));
}

uint64_t sub_100ED1BD0()
{
  swift_release();

  return _swift_deallocObject(v0, 26, 7);
}

void sub_100ED1C08()
{
  sub_100ECCC70(*(unsigned __int8 *)(v0 + 24), *(unsigned char *)(v0 + 25));
}

uint64_t sub_100ED1C3C()
{
  uint64_t v1 = (int *)(type metadata accessor for CRLSyncActivity(0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 24) & ~v2;
  uint64_t v4 = *(void *)(*(void *)v1 + 64);
  swift_release();
  uint64_t v5 = v0 + v1[7] + v3;
  uint64_t v6 = type metadata accessor for Date();
  uint64_t v7 = *(void *)(v6 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6)) {
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  }

  return _swift_deallocObject(v0, v3 + v4, v2 | 7);
}

uint64_t sub_100ED1D6C()
{
  uint64_t v1 = *(void *)(type metadata accessor for CRLSyncActivity(0) - 8);
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = (char *)(v0 + ((*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80)));

  return sub_100ECA544(v2, v3);
}

void sub_100ED1DD0()
{
}

unsigned char *_s8Freeform25CRLSyncActivityIdentifierOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100ED1EA4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLSyncSchedulerError()
{
  return &type metadata for CRLSyncSchedulerError;
}

unint64_t destroy for CRLSyncActivityScheduleState(unint64_t *a1)
{
  unint64_t result = *a1;
  int v2 = -1;
  if (result < 0xFFFFFFFF) {
    int v2 = result;
  }
  if (v2 - 1 < 0) {
    return swift_release();
  }
  return result;
}

uint64_t *_s8Freeform28CRLSyncActivityScheduleStateOwCP_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  LODWORD(v4) = -1;
  if ((unint64_t)*a2 < 0xFFFFFFFF) {
    uint64_t v4 = *a2;
  }
  if ((int)v4 - 1 < 0) {
    uint64_t v3 = swift_retain();
  }
  *a1 = v3;
  return a1;
}

uint64_t *assignWithCopy for CRLSyncActivityScheduleState(uint64_t *a1, uint64_t *a2)
{
  LODWORD(v3) = -1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v4) = -1;
  }
  else {
    uint64_t v4 = *a1;
  }
  int v5 = v4 - 1;
  uint64_t v6 = *a2;
  if ((unint64_t)*a2 < 0xFFFFFFFF) {
    uint64_t v3 = *a2;
  }
  int v7 = v3 - 1;
  if (v5 < 0)
  {
    if (v7 < 0)
    {
      *a1 = v6;
      swift_retain();
      swift_release();
    }
    else
    {
      swift_release();
      *a1 = *a2;
    }
  }
  else
  {
    *a1 = v6;
    if (v7 < 0) {
      swift_retain();
    }
  }
  return a1;
}

unint64_t *assignWithTake for CRLSyncActivityScheduleState(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3 = *a1;
  int v4 = -1;
  if (v3 < 0xFFFFFFFF) {
    int v4 = v3;
  }
  unint64_t v5 = *a2;
  if (v4 - 1 < 0)
  {
    LODWORD(v6) = -1;
    if (v5 < 0xFFFFFFFF) {
      unint64_t v6 = *a2;
    }
    if ((int)v6 - 1 < 0)
    {
      *a1 = v5;
      swift_release();
      return a1;
    }
    swift_release();
  }
  *a1 = v5;
  return a1;
}

uint64_t getEnumTagSinglePayload for CRLSyncActivityScheduleState(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFD && *((unsigned char *)a1 + 8)) {
    return (*(_DWORD *)a1 + 2147483645);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  unsigned int v5 = v4 + 1;
  unsigned int v6 = v4 - 1;
  if (v5 >= 3) {
    return v6;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for CRLSyncActivityScheduleState(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 >= 0x7FFFFFFD)
  {
    *(void *)unint64_t result = 0;
    *(_DWORD *)unint64_t result = a2 - 2147483645;
    if (a3 >= 0x7FFFFFFD) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFD) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2) {
      *(void *)unint64_t result = a2 + 2;
    }
  }
  return result;
}

uint64_t sub_100ED20FC(uint64_t *a1)
{
  uint64_t v1 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  int v2 = v1 - 1;
  if (v2 < 0) {
    int v2 = -1;
  }
  return (v2 + 1);
}

void *sub_100ED2120(void *result, unsigned int a2)
{
  if (a2 > 0x7FFFFFFE)
  {
    a2 -= 0x7FFFFFFF;
    goto LABEL_5;
  }
  if (a2) {
LABEL_5:
  }
    *unint64_t result = a2;
  return result;
}

ValueMetadata *type metadata accessor for CRLSyncActivityScheduleState()
{
  return &type metadata for CRLSyncActivityScheduleState;
}

unsigned char *storeEnumTagSinglePayload for CRLSyncActivityPriority(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *unint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100ED2224);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLSyncActivityPriority()
{
  return &type metadata for CRLSyncActivityPriority;
}

unint64_t sub_100ED2260()
{
  unint64_t result = qword_1016A1CC0;
  if (!qword_1016A1CC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A1CC0);
  }
  return result;
}

unint64_t sub_100ED22B8()
{
  unint64_t result = qword_1016A1CC8;
  if (!qword_1016A1CC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016A1CC8);
  }
  return result;
}

unint64_t sub_100ED2340(uint64_t a1)
{
  return sub_100ED2368(a1, (unint64_t *)&qword_101684330);
}

unint64_t sub_100ED2354(uint64_t a1)
{
  return sub_100ED2368(a1, (unint64_t *)&qword_1016725F0);
}

unint64_t sub_100ED2368(uint64_t a1, unint64_t *a2)
{
  uint64_t v2 = a1;
  if (*(void *)(a1 + 16))
  {
    sub_1005057FC(&qword_101685CE8);
    int v3 = (void *)static _DictionaryStorage.allocate(capacity:)();
  }
  else
  {
    int v3 = _swiftEmptyDictionarySingleton;
  }
  uint64_t v35 = v2 + 64;
  uint64_t v4 = -1 << *(unsigned char *)(v2 + 32);
  if (-v4 < 64) {
    uint64_t v5 = ~(-1 << -(char)v4);
  }
  else {
    uint64_t v5 = -1;
  }
  unint64_t v6 = v5 & *(void *)(v2 + 64);
  int64_t v34 = (unint64_t)(63 - v4) >> 6;
  int v7 = &v40;
  uint64_t v8 = &v42;
  unint64_t result = swift_bridgeObjectRetain();
  int64_t i = 0;
  uint64_t v11 = (char *)&type metadata for Any + 8;
  if (v6) {
    goto LABEL_10;
  }
LABEL_11:
  int64_t v21 = i + 1;
  if (__OFADD__(i, 1)) {
    goto LABEL_35;
  }
  if (v21 >= v34) {
    goto LABEL_32;
  }
  unint64_t v22 = *(void *)(v35 + 8 * v21);
  int64_t v23 = i + 1;
  if (!v22)
  {
    int64_t v23 = i + 2;
    if (i + 2 >= v34) {
      goto LABEL_32;
    }
    unint64_t v22 = *(void *)(v35 + 8 * v23);
    if (!v22)
    {
      int64_t v23 = i + 3;
      if (i + 3 >= v34) {
        goto LABEL_32;
      }
      unint64_t v22 = *(void *)(v35 + 8 * v23);
      if (!v22)
      {
        int64_t v23 = i + 4;
        if (i + 4 >= v34) {
          goto LABEL_32;
        }
        unint64_t v22 = *(void *)(v35 + 8 * v23);
        if (!v22)
        {
          int64_t v24 = i + 5;
          if (i + 5 < v34)
          {
            unint64_t v22 = *(void *)(v35 + 8 * v24);
            if (v22)
            {
              int64_t v23 = i + 5;
              goto LABEL_26;
            }
            while (1)
            {
              int64_t v23 = v24 + 1;
              if (__OFADD__(v24, 1)) {
                goto LABEL_36;
              }
              if (v23 >= v34) {
                break;
              }
              unint64_t v22 = *(void *)(v35 + 8 * v23);
              ++v24;
              if (v22) {
                goto LABEL_26;
              }
            }
          }
LABEL_32:
          sub_10052E1EC();
          return (unint64_t)v3;
        }
      }
    }
  }
LABEL_26:
  unint64_t v6 = (v22 - 1) & v22;
  unint64_t v20 = __clz(__rbit64(v22)) + (v23 << 6);
  for (i = v23; ; unint64_t v20 = v19 | (i << 6))
  {
    id v25 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v20);
    uint64_t v26 = *(void **)(*(void *)(v2 + 56) + 8 * v20);
    uint64_t v38 = *v25;
    uint64_t v39 = v25[1];
    sub_10050BF48(0, a2);
    swift_bridgeObjectRetain();
    id v27 = v26;
    swift_dynamicCast();
    sub_100575CE8(v7, v8);
    sub_100575CE8(v8, v43);
    sub_100575CE8(v43, &v41);
    unint64_t result = sub_100955F50(v38, v39);
    unint64_t v28 = result;
    if (v29)
    {
      unint64_t v36 = v6;
      uint64_t v12 = v8;
      uint64_t v13 = v7;
      uint64_t v14 = v2;
      int64_t v15 = i;
      uint64_t v16 = v11;
      uint64_t v17 = (uint64_t *)(v3[6] + 16 * result);
      swift_bridgeObjectRelease();
      *uint64_t v17 = v38;
      v17[1] = v39;
      uint64_t v11 = v16;
      int64_t i = v15;
      uint64_t v2 = v14;
      int v7 = v13;
      uint64_t v8 = v12;
      unint64_t v6 = v36;
      uint64_t v18 = (_OWORD *)(v3[7] + 32 * v28);
      _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v18);
      unint64_t result = (unint64_t)sub_100575CE8(&v41, v18);
      if (!v36) {
        goto LABEL_11;
      }
      goto LABEL_10;
    }
    if (v3[2] >= v3[3]) {
      break;
    }
    *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v30 = (uint64_t *)(v3[6] + 16 * result);
    *uint64_t v30 = v38;
    v30[1] = v39;
    unint64_t result = (unint64_t)sub_100575CE8(&v41, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v31 = v3[2];
    BOOL v32 = __OFADD__(v31, 1);
    uint64_t v33 = v31 + 1;
    if (v32) {
      goto LABEL_34;
    }
    v3[2] = v33;
    if (!v6) {
      goto LABEL_11;
    }
LABEL_10:
    unint64_t v19 = __clz(__rbit64(v6));
    v6 &= v6 - 1;
  }
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

void *sub_100ED26C8(uint64_t a1)
{
  if (*(void *)(a1 + 16))
  {
    sub_1005057FC(&qword_101688FE8);
    uint64_t v2 = (void *)static _DictionaryStorage.allocate(capacity:)();
  }
  else
  {
    uint64_t v2 = _swiftEmptyDictionarySingleton;
  }
  uint64_t v27 = a1 + 64;
  uint64_t v3 = -1 << *(unsigned char *)(a1 + 32);
  if (-v3 < 64) {
    uint64_t v4 = ~(-1 << -(char)v3);
  }
  else {
    uint64_t v4 = -1;
  }
  unint64_t v5 = v4 & *(void *)(a1 + 64);
  int64_t v26 = (unint64_t)(63 - v3) >> 6;
  unint64_t v6 = v2 + 8;
  swift_bridgeObjectRetain();
  swift_retain();
  int64_t v7 = 0;
  while (1)
  {
    if (v5)
    {
      unint64_t v9 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      unint64_t v10 = v9 | (v7 << 6);
      goto LABEL_28;
    }
    int64_t v11 = v7 + 1;
    if (__OFADD__(v7, 1)) {
      goto LABEL_38;
    }
    if (v11 >= v26) {
      break;
    }
    unint64_t v12 = *(void *)(v27 + 8 * v11);
    int64_t v13 = v7 + 1;
    if (!v12)
    {
      int64_t v13 = v7 + 2;
      if (v7 + 2 >= v26) {
        break;
      }
      unint64_t v12 = *(void *)(v27 + 8 * v13);
      if (!v12)
      {
        int64_t v13 = v7 + 3;
        if (v7 + 3 >= v26) {
          break;
        }
        unint64_t v12 = *(void *)(v27 + 8 * v13);
        if (!v12)
        {
          int64_t v13 = v7 + 4;
          if (v7 + 4 >= v26) {
            break;
          }
          unint64_t v12 = *(void *)(v27 + 8 * v13);
          if (!v12)
          {
            int64_t v14 = v7 + 5;
            if (v7 + 5 >= v26) {
              break;
            }
            unint64_t v12 = *(void *)(v27 + 8 * v14);
            if (!v12)
            {
              while (1)
              {
                int64_t v13 = v14 + 1;
                if (__OFADD__(v14, 1)) {
                  goto LABEL_39;
                }
                if (v13 >= v26) {
                  goto LABEL_37;
                }
                unint64_t v12 = *(void *)(v27 + 8 * v13);
                ++v14;
                if (v12) {
                  goto LABEL_27;
                }
              }
            }
            int64_t v13 = v7 + 5;
          }
        }
      }
    }
LABEL_27:
    unint64_t v5 = (v12 - 1) & v12;
    unint64_t v10 = __clz(__rbit64(v12)) + (v13 << 6);
    int64_t v7 = v13;
LABEL_28:
    char v15 = *(unsigned char *)(*(void *)(a1 + 48) + v10);
    sub_100522D7C(*(void *)(a1 + 56) + 32 * v10, (uint64_t)v34 + 8);
    LOBYTE(v34[0]) = v15;
    v32[0] = v34[0];
    v32[1] = v34[1];
    uint64_t v33 = v35;
    v30[0] = v15;
    sub_100575CE8((_OWORD *)((char *)v32 + 8), v29);
    sub_1005057FC(&qword_101672BF0);
    swift_dynamicCast();
    char v16 = v30[0];
    sub_10051B3EC((uint64_t)&v31, (uint64_t)v28, &qword_101672BF0);
    sub_10051B3EC((uint64_t)v28, (uint64_t)v30, &qword_101672BF0);
    sub_10051B3EC((uint64_t)v30, (uint64_t)v29, &qword_101672BF0);
    Hasher.init(_seed:)();
    String.hash(into:)();
    swift_bridgeObjectRelease();
    Swift::Int v17 = Hasher._finalize()();
    uint64_t v18 = -1 << *((unsigned char *)v2 + 32);
    unint64_t v19 = v17 & ~v18;
    unint64_t v20 = v19 >> 6;
    if (((-1 << v19) & ~v6[v19 >> 6]) != 0)
    {
      unint64_t v8 = __clz(__rbit64((-1 << v19) & ~v6[v19 >> 6])) | v19 & 0x7FFFFFFFFFFFFFC0;
      goto LABEL_9;
    }
    char v21 = 0;
    unint64_t v22 = (unint64_t)(63 - v18) >> 6;
    do
    {
      if (++v20 == v22 && (v21 & 1) != 0)
      {
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        JUMPOUT(0x100ED2B90);
      }
      BOOL v23 = v20 == v22;
      if (v20 == v22) {
        unint64_t v20 = 0;
      }
      v21 |= v23;
      uint64_t v24 = v6[v20];
    }
    while (v24 == -1);
    unint64_t v8 = __clz(__rbit64(~v24)) + (v20 << 6);
LABEL_9:
    *(void *)((char *)v6 + ((v8 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v8;
    *(unsigned char *)(v2[6] + v8) = v16;
    sub_10051B3EC((uint64_t)v29, v2[7] + 32 * v8, &qword_101672BF0);
    ++v2[2];
  }
LABEL_37:
  swift_release();
  sub_10052E1EC();
  return v2;
}

uint64_t sub_100ED2BB8(uint64_t a1)
{
  if (*(void *)(a1 + 16))
  {
    sub_1005057FC(&qword_101688F98);
    uint64_t v2 = (void *)static _DictionaryStorage.allocate(capacity:)();
  }
  else
  {
    uint64_t v2 = &_swiftEmptyDictionarySingleton;
  }
  uint64_t v28 = a1 + 64;
  uint64_t v3 = -1 << *(unsigned char *)(a1 + 32);
  if (-v3 < 64) {
    uint64_t v4 = ~(-1 << -(char)v3);
  }
  else {
    uint64_t v4 = -1;
  }
  unint64_t v5 = v4 & *(void *)(a1 + 64);
  int64_t v27 = (unint64_t)(63 - v3) >> 6;
  unint64_t v6 = (char *)(v2 + 8);
  swift_bridgeObjectRetain();
  uint64_t result = swift_retain();
  int64_t v8 = 0;
  while (1)
  {
    if (v5)
    {
      unint64_t v11 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      unint64_t v12 = v11 | (v8 << 6);
      goto LABEL_28;
    }
    int64_t v13 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v13 >= v27) {
      goto LABEL_37;
    }
    unint64_t v14 = *(void *)(v28 + 8 * v13);
    int64_t v15 = v8 + 1;
    if (!v14)
    {
      int64_t v15 = v8 + 2;
      if (v8 + 2 >= v27) {
        goto LABEL_37;
      }
      unint64_t v14 = *(void *)(v28 + 8 * v15);
      if (!v14)
      {
        int64_t v15 = v8 + 3;
        if (v8 + 3 >= v27) {
          goto LABEL_37;
        }
        unint64_t v14 = *(void *)(v28 + 8 * v15);
        if (!v14)
        {
          int64_t v15 = v8 + 4;
          if (v8 + 4 >= v27) {
            goto LABEL_37;
          }
          unint64_t v14 = *(void *)(v28 + 8 * v15);
          if (!v14) {
            break;
          }
        }
      }
    }
LABEL_27:
    unint64_t v5 = (v14 - 1) & v14;
    unint64_t v12 = __clz(__rbit64(v14)) + (v15 << 6);
    int64_t v8 = v15;
LABEL_28:
    Swift::Int v17 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v12);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    sub_100522D7C(*(void *)(a1 + 56) + 32 * v12, (uint64_t)v40);
    *(void *)&long long v39 = v19;
    *((void *)&v39 + 1) = v18;
    v37[2] = v39;
    v38[0] = v40[0];
    v38[1] = v40[1];
    *(void *)&v37[0] = v19;
    *((void *)&v37[0] + 1) = v18;
    swift_bridgeObjectRetain();
    swift_dynamicCast();
    sub_100575CE8(v38, v32);
    long long v33 = v29;
    long long v34 = v30;
    uint64_t v35 = v31;
    sub_100575CE8(v32, v36);
    long long v29 = v33;
    long long v30 = v34;
    uint64_t v31 = v35;
    sub_100575CE8(v36, v37);
    sub_100575CE8(v37, &v33);
    uint64_t result = AnyHashable._rawHashValue(seed:)(v2[5]);
    uint64_t v20 = -1 << *((unsigned char *)v2 + 32);
    unint64_t v21 = result & ~v20;
    unint64_t v22 = v21 >> 6;
    if (((-1 << v21) & ~*(void *)&v6[8 * (v21 >> 6)]) != 0)
    {
      unint64_t v9 = __clz(__rbit64((-1 << v21) & ~*(void *)&v6[8 * (v21 >> 6)])) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v23 = 0;
      unint64_t v24 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        BOOL v25 = v22 == v24;
        if (v22 == v24) {
          unint64_t v22 = 0;
        }
        v23 |= v25;
        uint64_t v26 = *(void *)&v6[8 * v22];
      }
      while (v26 == -1);
      unint64_t v9 = __clz(__rbit64(~v26)) + (v22 << 6);
    }
    *(void *)&v6[(v9 >> 3) & 0x1FFFFFFFFFFFFFF8] |= 1 << v9;
    uint64_t v10 = v2[6] + 40 * v9;
    *(_OWORD *)uint64_t v10 = v29;
    *(_OWORD *)(v10 + 16) = v30;
    *(void *)(v10 + 32) = v31;
    uint64_t result = (uint64_t)sub_100575CE8(&v33, (_OWORD *)(v2[7] + 32 * v9));
    ++v2[2];
  }
  int64_t v16 = v8 + 5;
  if (v8 + 5 >= v27)
  {
LABEL_37:
    swift_release();
    sub_10052E1EC();
    return (uint64_t)v2;
  }
  unint64_t v14 = *(void *)(v28 + 8 * v16);
  if (v14)
  {
    int64_t v15 = v8 + 5;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v15 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v15 >= v27) {
      goto LABEL_37;
    }
    unint64_t v14 = *(void *)(v28 + 8 * v15);
    ++v16;
    if (v14) {
      goto LABEL_27;
    }
  }
LABEL_39:
  __break(1u);
  return result;
}

uint64_t sub_100ED2F80(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for UUID();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2, v4);
  unint64_t v53 = (char *)&v44 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v52 = sub_1005057FC(&qword_10169A750);
  __chkstk_darwin(v52, v6);
  int64_t v8 = (uint64_t *)((char *)&v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v9, v10);
  unint64_t v12 = (char *)&v44 - v11;
  uint64_t v54 = a1;
  if (*(void *)(a1 + 16))
  {
    sub_1005057FC(&qword_101688F98);
    int64_t v13 = (void *)static _DictionaryStorage.allocate(capacity:)();
  }
  else
  {
    int64_t v13 = _swiftEmptyDictionarySingleton;
  }
  uint64_t v14 = *(void *)(v54 + 64);
  uint64_t v46 = v54 + 64;
  uint64_t v15 = -1 << *(unsigned char *)(v54 + 32);
  if (-v15 < 64) {
    uint64_t v16 = ~(-1 << -(char)v15);
  }
  else {
    uint64_t v16 = -1;
  }
  unint64_t v17 = v16 & v14;
  uint64_t v44 = -1 << *(unsigned char *)(v54 + 32);
  int64_t v45 = (unint64_t)(63 - v15) >> 6;
  uint64_t v51 = v3 + 16;
  uint64_t v50 = &v59;
  uint64_t v49 = v3 + 32;
  unint64_t v48 = &v63;
  uint64_t v18 = v13 + 8;
  swift_bridgeObjectRetain();
  uint64_t result = swift_retain();
  int64_t v55 = 0;
  uint64_t v47 = (char *)&type metadata for Any + 8;
  while (1)
  {
    if (v17)
    {
      unint64_t v22 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      unint64_t v23 = v22 | (v55 << 6);
      goto LABEL_28;
    }
    int64_t v24 = v55 + 1;
    if (__OFADD__(v55, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v24 >= v45) {
      goto LABEL_37;
    }
    unint64_t v25 = *(void *)(v46 + 8 * v24);
    int64_t v26 = v55 + 1;
    if (!v25)
    {
      int64_t v26 = v55 + 2;
      if (v55 + 2 >= v45) {
        goto LABEL_37;
      }
      unint64_t v25 = *(void *)(v46 + 8 * v26);
      if (!v25)
      {
        int64_t v26 = v55 + 3;
        if (v55 + 3 >= v45) {
          goto LABEL_37;
        }
        unint64_t v25 = *(void *)(v46 + 8 * v26);
        if (!v25)
        {
          int64_t v26 = v55 + 4;
          if (v55 + 4 >= v45) {
            goto LABEL_37;
          }
          unint64_t v25 = *(void *)(v46 + 8 * v26);
          if (!v25) {
            break;
          }
        }
      }
    }
LABEL_27:
    unint64_t v17 = (v25 - 1) & v25;
    unint64_t v23 = __clz(__rbit64(v25)) + (v26 << 6);
    int64_t v55 = v26;
LABEL_28:
    uint64_t v28 = (uint64_t *)(*(void *)(v54 + 48) + 16 * v23);
    uint64_t v30 = *v28;
    uint64_t v29 = v28[1];
    uint64_t v31 = v52;
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(&v12[*(int *)(v52 + 48)], *(void *)(v54 + 56) + *(void *)(v3 + 72) * v23, v2);
    *(void *)unint64_t v12 = v30;
    *((void *)v12 + 1) = v29;
    sub_10051B3EC((uint64_t)v12, (uint64_t)v8, &qword_10169A750);
    BOOL v32 = (char *)v8 + *(int *)(v31 + 48);
    uint64_t v33 = v8[1];
    *(void *)&long long v64 = *v8;
    *((void *)&v64 + 1) = v33;
    swift_bridgeObjectRetain();
    swift_dynamicCast();
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v53, v32, v2);
    long long v34 = v50;
    swift_dynamicCast();
    long long v60 = v56;
    long long v61 = v57;
    uint64_t v62 = v58;
    uint64_t v35 = v34;
    unint64_t v36 = v48;
    sub_100575CE8(v35, v48);
    long long v56 = v60;
    long long v57 = v61;
    uint64_t v58 = v62;
    sub_100575CE8(v36, &v64);
    sub_100575CE8(&v64, &v60);
    uint64_t result = AnyHashable._rawHashValue(seed:)(v13[5]);
    uint64_t v37 = -1 << *((unsigned char *)v13 + 32);
    unint64_t v38 = result & ~v37;
    unint64_t v39 = v38 >> 6;
    if (((-1 << v38) & ~v18[v38 >> 6]) != 0)
    {
      unint64_t v20 = __clz(__rbit64((-1 << v38) & ~v18[v38 >> 6])) | v38 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v40 = 0;
      unint64_t v41 = (unint64_t)(63 - v37) >> 6;
      do
      {
        if (++v39 == v41 && (v40 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        BOOL v42 = v39 == v41;
        if (v39 == v41) {
          unint64_t v39 = 0;
        }
        v40 |= v42;
        uint64_t v43 = v18[v39];
      }
      while (v43 == -1);
      unint64_t v20 = __clz(__rbit64(~v43)) + (v39 << 6);
    }
    *(void *)((char *)v18 + ((v20 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v20;
    uint64_t v21 = v13[6] + 40 * v20;
    *(_OWORD *)uint64_t v21 = v56;
    *(_OWORD *)(v21 + 16) = v57;
    *(void *)(v21 + 32) = v58;
    uint64_t result = (uint64_t)sub_100575CE8(&v60, (_OWORD *)(v13[7] + 32 * v20));
    ++v13[2];
  }
  int64_t v27 = v55 + 5;
  if (v55 + 5 >= v45)
  {
LABEL_37:
    swift_release();
    sub_10052E1EC();
    return (uint64_t)v13;
  }
  unint64_t v25 = *(void *)(v46 + 8 * v27);
  if (v25)
  {
    int64_t v26 = v55 + 5;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v26 = v27 + 1;
    if (__OFADD__(v27, 1)) {
      break;
    }
    if (v26 >= v45) {
      goto LABEL_37;
    }
    unint64_t v25 = *(void *)(v46 + 8 * v26);
    ++v27;
    if (v25) {
      goto LABEL_27;
    }
  }
LABEL_39:
  __break(1u);
  return result;
}

unint64_t sub_100ED356C(uint64_t a1)
{
  uint64_t v1 = a1;
  if (*(void *)(a1 + 16))
  {
    sub_1005057FC(&qword_101685CE8);
    uint64_t v2 = (void *)static _DictionaryStorage.allocate(capacity:)();
  }
  else
  {
    uint64_t v2 = _swiftEmptyDictionarySingleton;
  }
  uint64_t v32 = v1 + 64;
  uint64_t v3 = -1 << *(unsigned char *)(v1 + 32);
  if (-v3 < 64) {
    uint64_t v4 = ~(-1 << -(char)v3);
  }
  else {
    uint64_t v4 = -1;
  }
  unint64_t v5 = v4 & *(void *)(v1 + 64);
  int64_t v31 = (unint64_t)(63 - v3) >> 6;
  uint64_t v6 = &v37;
  uint64_t v7 = &v39;
  unint64_t result = swift_bridgeObjectRetain();
  int64_t i = 0;
  uint64_t v10 = (uint64_t *)&unk_1016850E0;
  uint64_t v11 = (char *)&type metadata for Any + 8;
  if (v5) {
    goto LABEL_10;
  }
LABEL_11:
  int64_t v20 = i + 1;
  if (__OFADD__(i, 1)) {
    goto LABEL_35;
  }
  if (v20 >= v31) {
    goto LABEL_32;
  }
  unint64_t v21 = *(void *)(v32 + 8 * v20);
  int64_t v22 = i + 1;
  if (!v21)
  {
    int64_t v22 = i + 2;
    if (i + 2 >= v31) {
      goto LABEL_32;
    }
    unint64_t v21 = *(void *)(v32 + 8 * v22);
    if (!v21)
    {
      int64_t v22 = i + 3;
      if (i + 3 >= v31) {
        goto LABEL_32;
      }
      unint64_t v21 = *(void *)(v32 + 8 * v22);
      if (!v21)
      {
        int64_t v22 = i + 4;
        if (i + 4 >= v31) {
          goto LABEL_32;
        }
        unint64_t v21 = *(void *)(v32 + 8 * v22);
        if (!v21)
        {
          int64_t v23 = i + 5;
          if (i + 5 < v31)
          {
            unint64_t v21 = *(void *)(v32 + 8 * v23);
            if (v21)
            {
              int64_t v22 = i + 5;
              goto LABEL_26;
            }
            while (1)
            {
              int64_t v22 = v23 + 1;
              if (__OFADD__(v23, 1)) {
                goto LABEL_36;
              }
              if (v22 >= v31) {
                break;
              }
              unint64_t v21 = *(void *)(v32 + 8 * v22);
              ++v23;
              if (v21) {
                goto LABEL_26;
              }
            }
          }
LABEL_32:
          sub_10052E1EC();
          return (unint64_t)v2;
        }
      }
    }
  }
LABEL_26:
  uint64_t v34 = (v21 - 1) & v21;
  unint64_t v19 = __clz(__rbit64(v21)) + (v22 << 6);
  for (i = v22; ; unint64_t v19 = __clz(__rbit64(v5)) | (i << 6))
  {
    int64_t v24 = (uint64_t *)(*(void *)(v1 + 48) + 16 * v19);
    uint64_t v35 = *v24;
    uint64_t v36 = v24[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1005057FC(v10);
    swift_dynamicCast();
    sub_100575CE8(v6, v7);
    sub_100575CE8(v7, v40);
    sub_100575CE8(v40, &v38);
    unint64_t result = sub_100955F50(v35, v36);
    unint64_t v25 = result;
    if (v26)
    {
      int64_t v33 = i;
      unint64_t v12 = v7;
      int64_t v13 = v6;
      uint64_t v14 = v1;
      uint64_t v15 = v11;
      uint64_t v16 = v10;
      unint64_t v17 = (uint64_t *)(v2[6] + 16 * result);
      swift_bridgeObjectRelease();
      *unint64_t v17 = v35;
      v17[1] = v36;
      uint64_t v10 = v16;
      uint64_t v11 = v15;
      uint64_t v1 = v14;
      uint64_t v6 = v13;
      uint64_t v7 = v12;
      int64_t i = v33;
      uint64_t v18 = (_OWORD *)(v2[7] + 32 * v25);
      _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v18);
      unint64_t result = (unint64_t)sub_100575CE8(&v38, v18);
      unint64_t v5 = v34;
      if (!v34) {
        goto LABEL_11;
      }
      goto LABEL_10;
    }
    if (v2[2] >= v2[3]) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    int64_t v27 = (uint64_t *)(v2[6] + 16 * result);
    *int64_t v27 = v35;
    v27[1] = v36;
    unint64_t result = (unint64_t)sub_100575CE8(&v38, (_OWORD *)(v2[7] + 32 * result));
    uint64_t v28 = v2[2];
    BOOL v29 = __OFADD__(v28, 1);
    uint64_t v30 = v28 + 1;
    if (v29) {
      goto LABEL_34;
    }
    v2[2] = v30;
    unint64_t v5 = v34;
    if (!v34) {
      goto LABEL_11;
    }
LABEL_10:
    uint64_t v34 = (v5 - 1) & v5;
  }
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

uint64_t sub_100ED38D8(uint64_t a1)
{
  if (*(void *)(a1 + 16))
  {
    sub_1005057FC(&qword_101688F98);
    uint64_t v2 = (void *)static _DictionaryStorage.allocate(capacity:)();
  }
  else
  {
    uint64_t v2 = _swiftEmptyDictionarySingleton;
  }
  uint64_t v27 = a1 + 64;
  uint64_t v3 = -1 << *(unsigned char *)(a1 + 32);
  if (-v3 < 64) {
    uint64_t v4 = ~(-1 << -(char)v3);
  }
  else {
    uint64_t v4 = -1;
  }
  unint64_t v5 = v4 & *(void *)(a1 + 64);
  int64_t v26 = (unint64_t)(63 - v3) >> 6;
  uint64_t v6 = v2 + 8;
  swift_bridgeObjectRetain();
  uint64_t result = swift_retain();
  int64_t v8 = 0;
  while (1)
  {
    if (v5)
    {
      unint64_t v11 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      unint64_t v12 = v11 | (v8 << 6);
      goto LABEL_28;
    }
    int64_t v13 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v13 >= v26) {
      goto LABEL_37;
    }
    unint64_t v14 = *(void *)(v27 + 8 * v13);
    int64_t v15 = v8 + 1;
    if (!v14)
    {
      int64_t v15 = v8 + 2;
      if (v8 + 2 >= v26) {
        goto LABEL_37;
      }
      unint64_t v14 = *(void *)(v27 + 8 * v15);
      if (!v14)
      {
        int64_t v15 = v8 + 3;
        if (v8 + 3 >= v26) {
          goto LABEL_37;
        }
        unint64_t v14 = *(void *)(v27 + 8 * v15);
        if (!v14)
        {
          int64_t v15 = v8 + 4;
          if (v8 + 4 >= v26) {
            goto LABEL_37;
          }
          unint64_t v14 = *(void *)(v27 + 8 * v15);
          if (!v14) {
            break;
          }
        }
      }
    }
LABEL_27:
    unint64_t v5 = (v14 - 1) & v14;
    unint64_t v12 = __clz(__rbit64(v14)) + (v15 << 6);
    int64_t v8 = v15;
LABEL_28:
    *(void *)&v36[0] = *(void *)(*(void *)(a1 + 48) + 8 * v12);
    unint64_t v17 = *(void **)&v36[0];
    type metadata accessor for Name(0);
    id v18 = v17;
    swift_bridgeObjectRetain();
    swift_dynamicCast();
    sub_1005057FC((uint64_t *)&unk_10167C2B0);
    swift_dynamicCast();
    long long v32 = v28;
    long long v33 = v29;
    uint64_t v34 = v30;
    sub_100575CE8(&v31, v35);
    long long v28 = v32;
    long long v29 = v33;
    uint64_t v30 = v34;
    sub_100575CE8(v35, v36);
    sub_100575CE8(v36, &v32);
    uint64_t result = AnyHashable._rawHashValue(seed:)(v2[5]);
    uint64_t v19 = -1 << *((unsigned char *)v2 + 32);
    unint64_t v20 = result & ~v19;
    unint64_t v21 = v20 >> 6;
    if (((-1 << v20) & ~v6[v20 >> 6]) != 0)
    {
      unint64_t v9 = __clz(__rbit64((-1 << v20) & ~v6[v20 >> 6])) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v22 = 0;
      unint64_t v23 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v23 && (v22 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        BOOL v24 = v21 == v23;
        if (v21 == v23) {
          unint64_t v21 = 0;
        }
        v22 |= v24;
        uint64_t v25 = v6[v21];
      }
      while (v25 == -1);
      unint64_t v9 = __clz(__rbit64(~v25)) + (v21 << 6);
    }
    *(void *)((char *)v6 + ((v9 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v9;
    uint64_t v10 = v2[6] + 40 * v9;
    *(_OWORD *)uint64_t v10 = v28;
    *(_OWORD *)(v10 + 16) = v29;
    *(void *)(v10 + 32) = v30;
    uint64_t result = (uint64_t)sub_100575CE8(&v32, (_OWORD *)(v2[7] + 32 * v9));
    ++v2[2];
  }
  int64_t v16 = v8 + 5;
  if (v8 + 5 >= v26)
  {
LABEL_37:
    swift_release();
    sub_10052E1EC();
    return (uint64_t)v2;
  }
  unint64_t v14 = *(void *)(v27 + 8 * v16);
  if (v14)
  {
    int64_t v15 = v8 + 5;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v15 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v15 >= v26) {
      goto LABEL_37;
    }
    unint64_t v14 = *(void *)(v27 + 8 * v15);
    ++v16;
    if (v14) {
      goto LABEL_27;
    }
  }
LABEL_39:
  __break(1u);
  return result;
}

uint64_t sub_100ED3CA0(uint64_t a1, char a2)
{
  *(unsigned char *)(v3 + 168) = a2;
  *(void *)(v3 + 48) = a1;
  *(void *)(v3 + 56) = v2;
  type metadata accessor for MainActor();
  *(void *)(v3 + 64) = static MainActor.shared.getter();
  uint64_t v5 = dispatch thunk of Actor.unownedExecutor.getter();
  *(void *)(v3 + 72) = v5;
  *(void *)(v3 + 80) = v4;
  return _swift_task_switch(sub_100ED3D3C, v5, v4);
}

uint64_t sub_100ED3D3C()
{
  if ((*(unsigned char *)(v0 + 168) & 1) == 0)
  {
    uint64_t v1 = (uint64_t *)(*(void *)(v0 + 56) + OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_boardInfos);
    swift_beginAccess();
    uint64_t v2 = *v1;
    if (*(void *)(v2 + 16))
    {
      unint64_t v3 = sub_1009563EC(*(void *)(v0 + 48));
      if (v4)
      {
        uint64_t v5 = *(void *)(*(void *)(v2 + 56) + 8 * v3);
        swift_endAccess();
        swift_retain();
        swift_release();
        uint64_t v6 = (char *)objc_retain(*(id *)(*(void *)(v5 + 16)
                                       + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard));
        swift_release();
        uint64_t v7 = *(void *)&v6[OBJC_IVAR____TtC8Freeform8CRLBoard_shareState];
        swift_retain();

        int64_t v8 = *(void **)(v7 + 16);
        id v9 = v8;
        swift_release();
        uint64_t v10 = *(uint64_t (**)(void *))(v0 + 8);
        return v10(v8);
      }
    }
    swift_endAccess();
  }
  *(void *)(v0 + 88) = *(void *)(*(void *)(v0 + 56) + OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_store);
  return _swift_task_switch(sub_100ED3EB8, 0, 0);
}

uint64_t sub_100ED3EB8()
{
  uint64_t v1 = v0[11];
  uint64_t v2 = v0[6];
  uint64_t v3 = swift_task_alloc();
  v0[12] = v3;
  *(void *)(v3 + 16) = v1;
  *(void *)(v3 + 24) = v2;
  char v4 = (void *)swift_task_alloc();
  v0[13] = v4;
  uint64_t v5 = sub_1005057FC(&qword_101699928);
  *char v4 = v0;
  v4[1] = sub_100ED3FC0;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v0 + 5, 0, 0, 0xD000000000000017, 0x8000000101296500, sub_100F35A98, v3, v5);
}

uint64_t sub_100ED3FC0()
{
  *(void *)(*(void *)v1 + 112) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_100ED41E8;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_100ED40DC;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100ED40DC()
{
  v0[15] = v0[5];
  return _swift_task_switch(sub_100ED40FC, v0[9], v0[10]);
}

uint64_t sub_100ED40FC()
{
  if (v0[15])
  {
    swift_release();
    uint64_t v1 = v0[15];
    uint64_t v2 = (uint64_t (*)(uint64_t))v0[1];
    return v2(v1);
  }
  else
  {
    uint64_t v4 = (void *)swift_task_alloc();
    v0[16] = v4;
    *uint64_t v4 = v0;
    v4[1] = sub_100ED42B0;
    uint64_t v5 = v0[6];
    return sub_100F836B4(v5);
  }
}

uint64_t sub_100ED41E8()
{
  swift_task_dealloc();
  uint64_t v1 = *(void *)(v0 + 72);
  uint64_t v2 = *(void *)(v0 + 80);
  return _swift_task_switch(sub_100ED424C, v1, v2);
}

uint64_t sub_100ED424C()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100ED42B0(uint64_t a1)
{
  uint64_t v3 = *v2;
  uint64_t v4 = *v2;
  *(void *)(v4 + 136) = a1;
  *(void *)(v4 + 144) = v1;
  swift_task_dealloc();
  uint64_t v5 = *(void *)(v3 + 80);
  uint64_t v6 = *(void *)(v3 + 72);
  if (v1) {
    uint64_t v7 = sub_100ED4664;
  }
  else {
    uint64_t v7 = sub_100ED43F4;
  }
  return _swift_task_switch(v7, v6, v5);
}

uint64_t sub_100ED43F4()
{
  uint64_t v1 = (void *)v0[17];
  if (v1)
  {
    id v2 = v1;
    uint64_t v3 = (void *)swift_task_alloc();
    v0[19] = v3;
    void *v3 = v0;
    v3[1] = sub_100ED44E0;
    uint64_t v4 = v0[17];
    uint64_t v5 = v0[6];
    return sub_100ED4738(v5, v4, 1);
  }
  else
  {
    swift_release();
    uint64_t v7 = (uint64_t (*)(void))v0[1];
    return v7(0);
  }
}

uint64_t sub_100ED44E0()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 160) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 72);
    uint64_t v4 = *(void *)(v2 + 80);
    uint64_t v5 = sub_100ED46C8;
  }
  else
  {

    uint64_t v3 = *(void *)(v2 + 72);
    uint64_t v4 = *(void *)(v2 + 80);
    uint64_t v5 = sub_100ED45FC;
  }
  return _swift_task_switch(v5, v3, v4);
}

uint64_t sub_100ED45FC()
{
  swift_release();
  uint64_t v1 = *(void *)(v0 + 136);
  uint64_t v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v2(v1);
}

uint64_t sub_100ED4664()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100ED46C8()
{
  uint64_t v1 = *(void **)(v0 + 136);

  swift_release();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_100ED4738(uint64_t a1, uint64_t a2, char a3)
{
  *(void *)(v4 + 160) = a2;
  *(void *)(v4 + 168) = v3;
  *(unsigned char *)(v4 + 216) = a3;
  *(void *)(v4 + 152) = a1;
  type metadata accessor for MainActor();
  *(void *)(v4 + 176) = static MainActor.shared.getter();
  uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
  *(void *)(v4 + 184) = v6;
  *(void *)(v4 + 192) = v5;
  return _swift_task_switch(sub_100ED47D8, v6, v5);
}

uint64_t sub_100ED47D8()
{
  if (qword_10166FBE0 != -1) {
    swift_once();
  }
  uint64_t v1 = *(void *)(v0 + 160);
  swift_beginAccess();
  uint64_t v2 = (void *)static OS_os_log.shareState;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  uint64_t v4 = inited;
  *(_OWORD *)(inited + 16) = xmmword_10117E810;
  uint64_t v5 = inited + 32;
  uint64_t v6 = *(void **)(v0 + 160);
  if (v1)
  {
    *(void *)(v0 + 112) = sub_10050BF48(0, &qword_101672C00);
    *(void *)(v0 + 120) = sub_10062E0F4((unint64_t *)&qword_101682FE0, &qword_101672C00);
    *(void *)(v0 + 88) = v6;
    sub_10053974C((long long *)(v0 + 88), v5);
  }
  else
  {
    *(void *)(inited + 56) = &type metadata for String;
    *(void *)(inited + 64) = sub_100528BE4();
    *(void *)(v4 + 32) = 7104878;
    *(void *)(v4 + 40) = 0xE300000000000000;
  }
  id v7 = v2;
  id v8 = v6;
  uint64_t v9 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v7, (uint64_t)&_mh_execute_header, v9, (uint64_t)"Trying to update saved share with: %@", 37, 2, v4);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  if (v1)
  {
    id v10 = [v8 containerID];

    if (!v10)
    {
      sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"crl_checkForNilContainerID()", 28, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Sync/CRLCloudKitShareNameHelper.swift", 91, 2, 165, (uint64_t)"The containerID of a share should never be nil. This can prevent fast sync from starting.", 89, 2u, (uint64_t)_swiftEmptyArrayStorage);
      LOBYTE(v16) = 2;
      sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"crl_checkForNilContainerID()", 28, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Sync/CRLCloudKitShareNameHelper.swift", 91, 2, 165);
      [self logFullBacktrace:@"The containerID of a share should never be nil. This can prevent fast sync from starting." 89 v16];
    }
  }
  unint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v0 + 200) = v11;
  void *v11 = v0;
  v11[1] = sub_100ED4ADC;
  uint64_t v12 = *(void *)(v0 + 160);
  char v13 = *(unsigned char *)(v0 + 216);
  uint64_t v14 = *(void *)(v0 + 152);
  return sub_100EEFFDC(v14, v12, v13);
}

uint64_t sub_100ED4ADC()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 208) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 192);
  uint64_t v4 = *(void *)(v2 + 184);
  if (v0) {
    uint64_t v5 = sub_100ED4C7C;
  }
  else {
    uint64_t v5 = sub_100ED4C18;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_100ED4C18()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100ED4C7C()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100ED4CE0(uint64_t a1)
{
  uint64_t v1 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    __CocoaSet.makeIterator()();
    type metadata accessor for AnyCancellable();
    sub_100F359B0(&qword_101677490, (void (*)(uint64_t))&type metadata accessor for AnyCancellable);
    uint64_t result = Set.Iterator.init(_cocoa:)();
    uint64_t v1 = v18;
    uint64_t v17 = v19;
    uint64_t v3 = v20;
    uint64_t v4 = v21;
    unint64_t v5 = v22;
  }
  else
  {
    uint64_t v6 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v17 = a1 + 56;
    uint64_t v3 = ~v6;
    uint64_t v7 = -v6;
    if (v7 < 64) {
      uint64_t v8 = ~(-1 << v7);
    }
    else {
      uint64_t v8 = -1;
    }
    unint64_t v5 = v8 & *(void *)(a1 + 56);
    uint64_t result = swift_bridgeObjectRetain();
    uint64_t v4 = 0;
  }
  int64_t v9 = (unint64_t)(v3 + 64) >> 6;
  if (v1 < 0) {
    goto LABEL_10;
  }
  while (1)
  {
    if (v5)
    {
      uint64_t v10 = (v5 - 1) & v5;
      unint64_t v11 = __clz(__rbit64(v5)) | (v4 << 6);
      uint64_t v12 = v4;
      goto LABEL_29;
    }
    int64_t v13 = v4 + 1;
    if (__OFADD__(v4, 1)) {
      break;
    }
    if (v13 >= v9) {
      return sub_10052E1EC();
    }
    unint64_t v14 = *(void *)(v17 + 8 * v13);
    uint64_t v12 = v4 + 1;
    if (!v14)
    {
      uint64_t v12 = v4 + 2;
      if (v4 + 2 >= v9) {
        return sub_10052E1EC();
      }
      unint64_t v14 = *(void *)(v17 + 8 * v12);
      if (!v14)
      {
        uint64_t v12 = v4 + 3;
        if (v4 + 3 >= v9) {
          return sub_10052E1EC();
        }
        unint64_t v14 = *(void *)(v17 + 8 * v12);
        if (!v14)
        {
          uint64_t v12 = v4 + 4;
          if (v4 + 4 >= v9) {
            return sub_10052E1EC();
          }
          unint64_t v14 = *(void *)(v17 + 8 * v12);
          if (!v14)
          {
            uint64_t v12 = v4 + 5;
            if (v4 + 5 >= v9) {
              return sub_10052E1EC();
            }
            unint64_t v14 = *(void *)(v17 + 8 * v12);
            if (!v14)
            {
              uint64_t v15 = v4 + 6;
              while (v9 != v15)
              {
                unint64_t v14 = *(void *)(v17 + 8 * v15++);
                if (v14)
                {
                  uint64_t v12 = v15 - 1;
                  goto LABEL_28;
                }
              }
              return sub_10052E1EC();
            }
          }
        }
      }
    }
LABEL_28:
    uint64_t v10 = (v14 - 1) & v14;
    unint64_t v11 = __clz(__rbit64(v14)) + (v12 << 6);
LABEL_29:
    uint64_t v16 = *(void *)(*(void *)(v1 + 48) + 8 * v11);
    swift_retain();
    if (!v16) {
      return sub_10052E1EC();
    }
    while (1)
    {
      AnyCancellable.cancel()();
      uint64_t result = swift_release();
      uint64_t v4 = v12;
      unint64_t v5 = v10;
      if ((v1 & 0x8000000000000000) == 0) {
        break;
      }
LABEL_10:
      if (__CocoaSet.Iterator.next()())
      {
        type metadata accessor for AnyCancellable();
        swift_unknownObjectRetain();
        swift_dynamicCast();
        swift_unknownObjectRelease();
        uint64_t v12 = v4;
        uint64_t v10 = v5;
        if (v23) {
          continue;
        }
      }
      return sub_10052E1EC();
    }
  }
  __break(1u);
  return result;
}

void *sub_100ED4F9C(uint64_t (*a1)(id *), uint64_t a2, unint64_t a3)
{
  return sub_100ED54F0(a1, a2, a3);
}

void sub_100ED4FB4(uint64_t (*a1)(id *), uint64_t a2, uint64_t a3)
{
  uint64_t v6 = a3 + 64;
  uint64_t v7 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v8 = -1;
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  unint64_t v9 = v8 & *(void *)(a3 + 64);
  int64_t v21 = (unint64_t)(v7 + 63) >> 6;
  swift_bridgeObjectRetain();
  int64_t v10 = 0;
  if (!v9) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v11 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  for (unint64_t i = v11 | (v10 << 6); ; unint64_t i = __clz(__rbit64(v14)) + (v10 << 6))
  {
    uint64_t v16 = 8 * i;
    uint64_t v17 = *(void **)(*(void *)(a3 + 56) + v16);
    v20[0] = *(id *)(*(void *)(a3 + 48) + v16);
    v20[1] = v17;
    id v18 = v20[0];
    swift_bridgeObjectRetain();
    char v19 = a1(v20);
    if (v3)
    {
      swift_release();
      swift_bridgeObjectRelease();

      return;
    }
    if (v19)
    {
LABEL_27:
      swift_release();
      return;
    }
    swift_bridgeObjectRelease();

    if (v9) {
      goto LABEL_4;
    }
LABEL_5:
    if (__OFADD__(v10++, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v10 >= v21) {
      goto LABEL_27;
    }
    unint64_t v14 = *(void *)(v6 + 8 * v10);
    if (!v14) {
      break;
    }
LABEL_17:
    unint64_t v9 = (v14 - 1) & v14;
  }
  int64_t v15 = v10 + 1;
  if (v10 + 1 >= v21) {
    goto LABEL_27;
  }
  unint64_t v14 = *(void *)(v6 + 8 * v15);
  if (v14) {
    goto LABEL_16;
  }
  int64_t v15 = v10 + 2;
  if (v10 + 2 >= v21) {
    goto LABEL_27;
  }
  unint64_t v14 = *(void *)(v6 + 8 * v15);
  if (v14) {
    goto LABEL_16;
  }
  int64_t v15 = v10 + 3;
  if (v10 + 3 >= v21) {
    goto LABEL_27;
  }
  unint64_t v14 = *(void *)(v6 + 8 * v15);
  if (v14) {
    goto LABEL_16;
  }
  int64_t v15 = v10 + 4;
  if (v10 + 4 >= v21) {
    goto LABEL_27;
  }
  unint64_t v14 = *(void *)(v6 + 8 * v15);
  if (v14)
  {
LABEL_16:
    int64_t v10 = v15;
    goto LABEL_17;
  }
  while (1)
  {
    int64_t v10 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v10 >= v21) {
      goto LABEL_27;
    }
    unint64_t v14 = *(void *)(v6 + 8 * v10);
    ++v15;
    if (v14) {
      goto LABEL_17;
    }
  }
LABEL_30:
  __break(1u);
}

uint64_t sub_100ED51B8(uint64_t (*a1)(uint64_t *), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v5 = a3;
  if ((a3 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    __CocoaSet.makeIterator()();
    _s8ItemDataCMa();
    sub_100F359B0((unint64_t *)&qword_101696EB8, (void (*)(uint64_t))_s8ItemDataCMa);
    uint64_t result = Set.Iterator.init(_cocoa:)();
    uint64_t v5 = v25;
    uint64_t v24 = v26;
    uint64_t v8 = v27;
    int64_t v9 = v28;
    unint64_t v10 = v29;
  }
  else
  {
    uint64_t v11 = -1 << *(unsigned char *)(a3 + 32);
    uint64_t v24 = a3 + 56;
    uint64_t v12 = ~v11;
    uint64_t v13 = -v11;
    if (v13 < 64) {
      uint64_t v14 = ~(-1 << v13);
    }
    else {
      uint64_t v14 = -1;
    }
    unint64_t v10 = v14 & *(void *)(a3 + 56);
    uint64_t result = swift_bridgeObjectRetain();
    uint64_t v8 = v12;
    int64_t v9 = 0;
  }
  int64_t v23 = (unint64_t)(v8 + 64) >> 6;
  if ((v5 & 0x8000000000000000) == 0) {
    goto LABEL_11;
  }
LABEL_8:
  if (__CocoaSet.Iterator.next()())
  {
    _s8ItemDataCMa();
    swift_unknownObjectRetain();
    swift_dynamicCast();
    uint64_t v15 = v30;
    swift_unknownObjectRelease();
    int64_t v16 = v9;
    uint64_t v17 = v10;
    while (v15)
    {
      uint64_t v30 = v15;
      char v21 = a1(&v30);
      if (v4)
      {
        swift_release();
LABEL_36:
        sub_10052E1EC();
        return v15;
      }
      if (v21) {
        goto LABEL_36;
      }
      uint64_t result = swift_release();
      int64_t v9 = v16;
      unint64_t v10 = v17;
      if (v5 < 0) {
        goto LABEL_8;
      }
LABEL_11:
      if (v10)
      {
        uint64_t v17 = (v10 - 1) & v10;
        unint64_t v18 = __clz(__rbit64(v10)) | (v9 << 6);
        int64_t v16 = v9;
      }
      else
      {
        int64_t v16 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
          __break(1u);
          return result;
        }
        if (v16 >= v23) {
          break;
        }
        unint64_t v19 = *(void *)(v24 + 8 * v16);
        if (!v19)
        {
          int64_t v20 = v9 + 2;
          if (v9 + 2 >= v23) {
            break;
          }
          unint64_t v19 = *(void *)(v24 + 8 * v20);
          if (v19) {
            goto LABEL_22;
          }
          int64_t v20 = v9 + 3;
          if (v9 + 3 >= v23) {
            break;
          }
          unint64_t v19 = *(void *)(v24 + 8 * v20);
          if (v19) {
            goto LABEL_22;
          }
          int64_t v20 = v9 + 4;
          if (v9 + 4 >= v23) {
            break;
          }
          unint64_t v19 = *(void *)(v24 + 8 * v20);
          if (v19)
          {
LABEL_22:
            int64_t v16 = v20;
          }
          else
          {
            int64_t v16 = v9 + 5;
            if (v9 + 5 >= v23) {
              break;
            }
            unint64_t v19 = *(void *)(v24 + 8 * v16);
            if (!v19)
            {
              int64_t v22 = v9 + 6;
              while (v23 != v22)
              {
                unint64_t v19 = *(void *)(v24 + 8 * v22++);
                if (v19)
                {
                  int64_t v16 = v22 - 1;
                  goto LABEL_23;
                }
              }
              break;
            }
          }
        }
LABEL_23:
        uint64_t v17 = (v19 - 1) & v19;
        unint64_t v18 = __clz(__rbit64(v19)) + (v16 << 6);
      }
      uint64_t v15 = *(void *)(*(void *)(v5 + 48) + 8 * v18);
      swift_retain();
    }
  }
  sub_10052E1EC();
  return 0;
}

void *sub_100ED54F0(uint64_t (*a1)(id *), uint64_t a2, unint64_t a3)
{
  if (a3 >> 62) {
    goto LABEL_16;
  }
  uint64_t v6 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v6; uint64_t v6 = _CocoaArrayWrapper.endIndex.getter())
  {
    uint64_t v7 = 4;
    while (1)
    {
      id v8 = (a3 & 0xC000000000000001) != 0
         ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)()
         : *(id *)(a3 + 8 * v7);
      int64_t v9 = v8;
      uint64_t v10 = v7 - 3;
      if (__OFADD__(v7 - 4, 1)) {
        break;
      }
      id v13 = v8;
      char v11 = a1(&v13);
      if (v3)
      {
        swift_bridgeObjectRelease();

        return v9;
      }
      if (v11)
      {
        swift_bridgeObjectRelease();
        return v9;
      }

      ++v7;
      if (v10 == v6) {
        goto LABEL_11;
      }
    }
    __break(1u);
LABEL_16:
    swift_bridgeObjectRetain();
  }
LABEL_11:
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_100ED5618@<X0>(uint64_t (*a1)(char *)@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v31 = a3;
  uint64_t v30 = type metadata accessor for CRLSELibraryViewModel.Item(0);
  uint64_t v6 = *(void *)(v30 - 8);
  __chkstk_darwin(v30, v7);
  int64_t v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10, v11);
  id v13 = (char *)&v29 - v12;
  uint64_t v14 = *(void *)(a2 + 56);
  uint64_t v32 = a2 + 56;
  uint64_t v15 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v16 = -1;
  if (v15 < 64) {
    uint64_t v16 = ~(-1 << v15);
  }
  unint64_t v17 = v16 & v14;
  int64_t v33 = (unint64_t)(v15 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v19 = 0;
  if (!v17) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v20 = __clz(__rbit64(v17));
  v17 &= v17 - 1;
  for (unint64_t i = v20 | (v19 << 6); ; unint64_t i = __clz(__rbit64(v23)) + (v19 << 6))
  {
    sub_100F38118(*(void *)(a2 + 48) + *(void *)(v6 + 72) * i, (uint64_t)v13, type metadata accessor for CRLSELibraryViewModel.Item);
    sub_100F37878((uint64_t)v13, (uint64_t)v9, type metadata accessor for CRLSELibraryViewModel.Item);
    char v25 = a1(v9);
    if (v3)
    {
      sub_100F38180((uint64_t)v9, type metadata accessor for CRLSELibraryViewModel.Item);
      return swift_release();
    }
    if (v25)
    {
      swift_release();
      uint64_t v26 = v31;
      sub_100F37878((uint64_t)v9, v31, type metadata accessor for CRLSELibraryViewModel.Item);
      uint64_t v27 = 0;
      uint64_t v28 = v30;
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(v26, v27, 1, v28);
    }
    uint64_t result = sub_100F38180((uint64_t)v9, type metadata accessor for CRLSELibraryViewModel.Item);
    if (v17) {
      goto LABEL_4;
    }
LABEL_5:
    if (__OFADD__(v19++, 1)) {
      break;
    }
    if (v19 >= v33) {
      goto LABEL_28;
    }
    unint64_t v23 = *(void *)(v32 + 8 * v19);
    if (!v23)
    {
      int64_t v24 = v19 + 1;
      if (v19 + 1 >= v33) {
        goto LABEL_28;
      }
      unint64_t v23 = *(void *)(v32 + 8 * v24);
      if (v23) {
        goto LABEL_16;
      }
      int64_t v24 = v19 + 2;
      if (v19 + 2 >= v33) {
        goto LABEL_28;
      }
      unint64_t v23 = *(void *)(v32 + 8 * v24);
      if (v23) {
        goto LABEL_16;
      }
      int64_t v24 = v19 + 3;
      if (v19 + 3 >= v33) {
        goto LABEL_28;
      }
      unint64_t v23 = *(void *)(v32 + 8 * v24);
      if (v23)
      {
LABEL_16:
        int64_t v19 = v24;
        goto LABEL_17;
      }
      int64_t v24 = v19 + 4;
      if (v19 + 4 < v33)
      {
        unint64_t v23 = *(void *)(v32 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v19 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_31;
            }
            if (v19 >= v33) {
              goto LABEL_28;
            }
            unint64_t v23 = *(void *)(v32 + 8 * v19);
            ++v24;
            if (v23) {
              goto LABEL_17;
            }
          }
        }
        goto LABEL_16;
      }
LABEL_28:
      uint64_t v28 = v30;
      uint64_t v26 = v31;
      swift_release();
      uint64_t v27 = 1;
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(v26, v27, 1, v28);
    }
LABEL_17:
    unint64_t v17 = (v23 - 1) & v23;
  }
  __break(1u);
LABEL_31:
  __break(1u);
  return result;
}

uint64_t sub_100ED5958(uint64_t a1, unint64_t a2)
{
  return sub_100ED5988(a1, a2, (uint64_t (*)(void))type metadata accessor for CRLShapeItem);
}

uint64_t sub_100ED5970(uint64_t a1, unint64_t a2)
{
  return sub_100ED5988(a1, a2, type metadata accessor for CRLBoardItem);
}

uint64_t sub_100ED5988(uint64_t a1, unint64_t a2, uint64_t (*a3)(void))
{
  if (a2 >> 62) {
    goto LABEL_20;
  }
  uint64_t v5 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v5; uint64_t v5 = _CocoaArrayWrapper.endIndex.getter())
  {
    unint64_t v6 = a2 & 0xC000000000000001;
    if ((a2 & 0xC000000000000001) == 0)
    {
      id v7 = *(id *)(a2 + 32);
      goto LABEL_5;
    }
    while (1)
    {
      id v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_5:
      uint64_t v8 = v7;
      a3 = (uint64_t (*)(void))a3(0);
      char v9 = static NSObject.== infix(_:_:)();

      if (v9)
      {
LABEL_6:
        swift_bridgeObjectRelease();
        return 1;
      }
      if (v5 == 1) {
        goto LABEL_18;
      }
      if (v6) {
        break;
      }
      unint64_t v6 = 5;
      while (1)
      {
        unint64_t v14 = v6 - 3;
        if (__OFADD__(v6 - 4, 1)) {
          break;
        }
        id v15 = *(id *)(a2 + 8 * v6);
        char v16 = static NSObject.== infix(_:_:)();

        if (v16) {
          goto LABEL_6;
        }
        ++v6;
        if (v14 == v5) {
          goto LABEL_18;
        }
      }
      __break(1u);
    }
    uint64_t v11 = 1;
    while (1)
    {
      specialized _ArrayBuffer._getElementSlowPath(_:)();
      uint64_t v12 = v11 + 1;
      if (__OFADD__(v11, 1)) {
        break;
      }
      char v13 = static NSObject.== infix(_:_:)();
      swift_unknownObjectRelease();
      if (v13) {
        goto LABEL_6;
      }
      ++v11;
      if (v12 == v5) {
        goto LABEL_18;
      }
    }
    __break(1u);
LABEL_20:
    swift_bridgeObjectRetain();
  }
LABEL_18:
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_100ED5B08(uint64_t a1, unint64_t a2)
{
  return sub_100ED5988(a1, a2, type metadata accessor for CRLCollaborationParticipant);
}

uint64_t sub_100ED5B20(uint64_t a1, unint64_t a2)
{
  return sub_100ED5B34(a1, a2, (uint64_t)&qword_1016745A0);
}

uint64_t sub_100ED5B34(uint64_t a1, unint64_t a2, uint64_t a3)
{
  if (a2 >> 62) {
    goto LABEL_20;
  }
  uint64_t v5 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v5; uint64_t v5 = _CocoaArrayWrapper.endIndex.getter())
  {
    unint64_t v6 = a2 & 0xC000000000000001;
    if ((a2 & 0xC000000000000001) == 0)
    {
      id v7 = *(id *)(a2 + 32);
      goto LABEL_5;
    }
    while (1)
    {
      id v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_5:
      uint64_t v8 = v7;
      sub_10050BF48(0, (unint64_t *)a3);
      a3 = static NSObject.== infix(_:_:)();

      if (a3)
      {
LABEL_6:
        swift_bridgeObjectRelease();
        return 1;
      }
      if (v5 == 1) {
        goto LABEL_18;
      }
      if (v6) {
        break;
      }
      unint64_t v6 = 5;
      while (1)
      {
        unint64_t v12 = v6 - 3;
        if (__OFADD__(v6 - 4, 1)) {
          break;
        }
        a3 = (uint64_t)*(id *)(a2 + 8 * v6);
        char v13 = static NSObject.== infix(_:_:)();

        if (v13) {
          goto LABEL_6;
        }
        ++v6;
        if (v12 == v5) {
          goto LABEL_18;
        }
      }
      __break(1u);
    }
    a3 = 1;
    while (1)
    {
      specialized _ArrayBuffer._getElementSlowPath(_:)();
      uint64_t v10 = a3 + 1;
      if (__OFADD__(a3, 1)) {
        break;
      }
      char v11 = static NSObject.== infix(_:_:)();
      swift_unknownObjectRelease();
      if (v11) {
        goto LABEL_6;
      }
      ++a3;
      if (v10 == v5) {
        goto LABEL_18;
      }
    }
    __break(1u);
LABEL_20:
    swift_bridgeObjectRetain();
  }
LABEL_18:
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_100ED5CBC(uint64_t a1, unint64_t a2)
{
  return sub_100ED5988(a1, a2, (uint64_t (*)(void))type metadata accessor for CRLTextSelectionRect);
}

uint64_t sub_100ED5CD4(uint64_t a1, unint64_t a2)
{
  return sub_100ED5B34(a1, a2, (uint64_t)&unk_1016885E0);
}

uint64_t sub_100ED5CE8(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3 = a3[2];
  if (!v3) {
    return 0;
  }
  if (a3[4] == a1 && a3[5] == a2) {
    return 1;
  }
  uint64_t result = _stringCompareWithSmolCheck(_:_:expecting:)();
  if (result) {
    return 1;
  }
  if (v3 == 1) {
    return 0;
  }
  char v9 = a3 + 7;
  for (uint64_t i = 1; ; ++i)
  {
    uint64_t v11 = i + 1;
    if (__OFADD__(i, 1)) {
      break;
    }
    BOOL v12 = *(v9 - 1) == a1 && *v9 == a2;
    if (v12 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
      return 1;
    }
    uint64_t result = 0;
    v9 += 2;
    if (v11 == v3) {
      return result;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_100ED5DB0(uint64_t a1, unint64_t a2)
{
  return sub_100ED5B34(a1, a2, (uint64_t)&qword_1016787C0);
}

uint64_t sub_100ED5DC4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CRLBoardIdentifier(0) - 8;
  __chkstk_darwin(v4, v5);
  id v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8, v9);
  uint64_t v11 = (char *)&v29 - v10;
  __chkstk_darwin(v12, v13);
  char v16 = (char *)&v29 - v15;
  uint64_t v17 = *(void *)(a2 + 16);
  if (!v17) {
    return 0;
  }
  uint64_t v18 = a2 + ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80));
  uint64_t v19 = *(void *)(v14 + 72);
  swift_bridgeObjectRetain();
  while (1)
  {
    sub_100F38118(v18, (uint64_t)v16, type metadata accessor for CRLBoardIdentifier);
    char v20 = static UUID.== infix(_:_:)();
    sub_100F38118((uint64_t)v16, (uint64_t)v11, type metadata accessor for CRLBoardIdentifier);
    sub_100F38118(a1, (uint64_t)v7, type metadata accessor for CRLBoardIdentifier);
    if ((v20 & 1) == 0)
    {
      sub_100F38180((uint64_t)v7, type metadata accessor for CRLBoardIdentifier);
      sub_100F38180((uint64_t)v11, type metadata accessor for CRLBoardIdentifier);
      sub_100F38180((uint64_t)v16, type metadata accessor for CRLBoardIdentifier);
      goto LABEL_4;
    }
    uint64_t v21 = *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20);
    uint64_t v22 = *(void *)&v11[v21];
    uint64_t v23 = *(void *)&v11[v21 + 8];
    int64_t v24 = &v7[v21];
    if (v22 == *(void *)v24 && v23 == *((void *)v24 + 1)) {
      break;
    }
    char v26 = _stringCompareWithSmolCheck(_:_:expecting:)();
    sub_100F38180((uint64_t)v7, type metadata accessor for CRLBoardIdentifier);
    sub_100F38180((uint64_t)v11, type metadata accessor for CRLBoardIdentifier);
    sub_100F38180((uint64_t)v16, type metadata accessor for CRLBoardIdentifier);
    if (v26) {
      goto LABEL_15;
    }
LABEL_4:
    v18 += v19;
    if (!--v17)
    {
      uint64_t v27 = 0;
      goto LABEL_16;
    }
  }
  sub_100F38180((uint64_t)v7, type metadata accessor for CRLBoardIdentifier);
  sub_100F38180((uint64_t)v11, type metadata accessor for CRLBoardIdentifier);
  sub_100F38180((uint64_t)v16, type metadata accessor for CRLBoardIdentifier);
LABEL_15:
  uint64_t v27 = 1;
LABEL_16:
  swift_bridgeObjectRelease();
  return v27;
}

BOOL sub_100ED604C(BOOL result, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 16);
  if (!v2) {
    return 0;
  }
  int v3 = result;
  if (*(unsigned char *)(a2 + 32) == result) {
    return 1;
  }
  if (v2 == 1) {
    return 0;
  }
  for (uint64_t i = 33; ; ++i)
  {
    uint64_t v5 = i - 31;
    if (__OFADD__(i - 32, 1)) {
      break;
    }
    int v6 = *(unsigned __int8 *)(a2 + i);
    uint64_t result = v6 == v3;
    if (v6 == v3 || v5 == v2) {
      return result;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_100ED60AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AnyCRValue();
  uint64_t v62 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4, v5);
  uint64_t v58 = (char *)&v51 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6, v8);
  uint64_t v10 = (char *)&v51 - v9;
  uint64_t v11 = sub_1005057FC(&qword_101690110);
  uint64_t v13 = __chkstk_darwin(v11 - 8, v12);
  uint64_t v15 = (char *)&v51 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = __chkstk_darwin(v13, v16);
  uint64_t v19 = (int64_t *)((char *)&v51 - v18);
  if (a1 == a2) {
    return 1;
  }
  if (*(void *)(a1 + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  long long v57 = v10;
  uint64_t v59 = a2;
  int64_t v60 = 0;
  uint64_t v54 = a1;
  uint64_t v22 = *(void *)(a1 + 64);
  uint64_t v21 = a1 + 64;
  uint64_t v20 = v22;
  uint64_t v23 = 1 << *(unsigned char *)(v21 - 32);
  uint64_t v24 = -1;
  if (v23 < 64) {
    uint64_t v24 = ~(-1 << v23);
  }
  unint64_t v25 = v24 & v20;
  uint64_t v61 = v62 + 16;
  int64_t v55 = (void (**)(char *, char *, uint64_t))(v62 + 32);
  long long v56 = (void (**)(char *, uint64_t))(v62 + 8);
  uint64_t v52 = v21;
  int64_t v53 = (unint64_t)(v23 + 63) >> 6;
  int64_t v51 = v53 - 1;
  char v26 = (uint64_t *)&unk_101690118;
  while (1)
  {
    if (v25)
    {
      unint64_t v27 = __clz(__rbit64(v25));
      v25 &= v25 - 1;
      unint64_t v28 = v27 | (v60 << 6);
      uint64_t v29 = v57;
LABEL_8:
      uint64_t v30 = *(void *)(*(void *)(v54 + 48) + 8 * v28);
      uint64_t v31 = v62;
      unint64_t v32 = *(void *)(v54 + 56) + *(void *)(v62 + 72) * v28;
      uint64_t v33 = sub_1005057FC(v26);
      (*(void (**)(char *, unint64_t, uint64_t))(v31 + 16))(&v15[*(int *)(v33 + 48)], v32, v4);
      *(void *)uint64_t v15 = v30;
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56))(v15, 0, 1, v33);
      uint64_t v34 = v59;
      goto LABEL_27;
    }
    int64_t v35 = v60 + 1;
    uint64_t v29 = v57;
    if (__OFADD__(v60, 1))
    {
      __break(1u);
      goto LABEL_36;
    }
    uint64_t v34 = v59;
    if (v35 < v53)
    {
      unint64_t v36 = *(void *)(v52 + 8 * v35);
      if (v36) {
        goto LABEL_12;
      }
      int64_t v37 = v60 + 2;
      ++v60;
      if (v35 + 1 < v53)
      {
        unint64_t v36 = *(void *)(v52 + 8 * v37);
        if (v36) {
          goto LABEL_15;
        }
        int64_t v60 = v35 + 1;
        if (v35 + 2 < v53)
        {
          unint64_t v36 = *(void *)(v52 + 8 * (v35 + 2));
          if (v36)
          {
            v35 += 2;
            goto LABEL_12;
          }
          int64_t v37 = v35 + 3;
          int64_t v60 = v35 + 2;
          if (v35 + 3 < v53) {
            break;
          }
        }
      }
    }
LABEL_26:
    uint64_t v38 = sub_1005057FC(v26);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 56))(v15, 1, 1, v38);
    unint64_t v25 = 0;
LABEL_27:
    sub_10051B3EC((uint64_t)v15, (uint64_t)v19, &qword_101690110);
    uint64_t v39 = sub_1005057FC(v26);
    int v40 = (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v39 - 8) + 48))(v19, 1, v39);
    BOOL v41 = v40 == 1;
    if (v40 == 1) {
      return v41;
    }
    BOOL v42 = (char *)v19 + *(int *)(v39 + 48);
    uint64_t v43 = *v19;
    (*v55)(v29, v42, v4);
    unint64_t v44 = sub_100955F14(v43);
    if ((v45 & 1) == 0)
    {
      (*v56)(v29, v4);
      return 0;
    }
    uint64_t v46 = v62;
    uint64_t v47 = v26;
    unint64_t v48 = v58;
    (*(void (**)(char *, unint64_t, uint64_t))(v62 + 16))(v58, *(void *)(v34 + 56) + *(void *)(v62 + 72) * v44, v4);
    sub_100F359B0(&qword_1016A2318, (void (*)(uint64_t))&type metadata accessor for AnyCRValue);
    char v49 = dispatch thunk of static Equatable.== infix(_:_:)();
    uint64_t v50 = *(void (**)(char *, uint64_t))(v46 + 8);
    v50(v48, v4);
    uint64_t result = ((uint64_t (*)(char *, uint64_t))v50)(v29, v4);
    char v26 = v47;
    if ((v49 & 1) == 0) {
      return v41;
    }
  }
  unint64_t v36 = *(void *)(v52 + 8 * v37);
  if (v36)
  {
LABEL_15:
    int64_t v35 = v37;
LABEL_12:
    unint64_t v25 = (v36 - 1) & v36;
    unint64_t v28 = __clz(__rbit64(v36)) + (v35 << 6);
    int64_t v60 = v35;
    goto LABEL_8;
  }
  while (1)
  {
    int64_t v35 = v37 + 1;
    if (__OFADD__(v37, 1)) {
      break;
    }
    if (v35 >= v53)
    {
      int64_t v60 = v51;
      goto LABEL_26;
    }
    unint64_t v36 = *(void *)(v52 + 8 * v35);
    ++v37;
    if (v36) {
      goto LABEL_12;
    }
  }
LABEL_36:
  __break(1u);
  return result;
}

uint64_t sub_100ED65D8(uint64_t result, uint64_t a2)
{
  if (result == a2) {
    return 1;
  }
  uint64_t v3 = result;
  if (*(void *)(result + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v4 = 0;
  uint64_t v5 = result + 64;
  uint64_t v6 = 1 << *(unsigned char *)(result + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & *(void *)(result + 64);
  int64_t v9 = (unint64_t)(v6 + 63) >> 6;
  while (v8)
  {
    unint64_t v10 = __clz(__rbit64(v8));
    v8 &= v8 - 1;
    unint64_t v11 = v10 | (v4 << 6);
LABEL_23:
    uint64_t v15 = (uint64_t *)(*(void *)(v3 + 48) + 16 * v11);
    uint64_t v16 = *v15;
    uint64_t v17 = v15[1];
    unint64_t v18 = *(void *)(*(void *)(v3 + 56) + 8 * v11);
    swift_bridgeObjectRetain();
    unint64_t v19 = sub_100955F50(v16, v17);
    char v21 = v20;
    uint64_t result = swift_bridgeObjectRelease();
    if ((v21 & 1) == 0) {
      return 0;
    }
    uint64_t v22 = *(void *)(*(void *)(a2 + 56) + 8 * v19);
    if (v22 == 2)
    {
      if (v18 != 2) {
        return 0;
      }
    }
    else
    {
      if (v18 == 2) {
        return 0;
      }
      BOOL v23 = (v18 & 1) == ((v22 & 1) == 0) || ((v18 >> 8) & 1) == ((v22 & 0x100) == 0);
      BOOL v24 = v23 || ((v18 >> 16) & 1) == ((v22 & 0x10000) == 0);
      BOOL v25 = v24 || ((v18 >> 24) & 1) == ((v22 & 0x1000000) == 0);
      if (v25 || *((float *)&v22 + 1) != *((float *)&v18 + 1)) {
        return 0;
      }
    }
  }
  int64_t v12 = v4 + 1;
  if (__OFADD__(v4, 1))
  {
    __break(1u);
    goto LABEL_42;
  }
  if (v12 >= v9) {
    return 1;
  }
  unint64_t v13 = *(void *)(v5 + 8 * v12);
  ++v4;
  if (v13) {
    goto LABEL_22;
  }
  int64_t v4 = v12 + 1;
  if (v12 + 1 >= v9) {
    return 1;
  }
  unint64_t v13 = *(void *)(v5 + 8 * v4);
  if (v13) {
    goto LABEL_22;
  }
  int64_t v4 = v12 + 2;
  if (v12 + 2 >= v9) {
    return 1;
  }
  unint64_t v13 = *(void *)(v5 + 8 * v4);
  if (v13)
  {
LABEL_22:
    unint64_t v8 = (v13 - 1) & v13;
    unint64_t v11 = __clz(__rbit64(v13)) + (v4 << 6);
    goto LABEL_23;
  }
  int64_t v14 = v12 + 3;
  if (v14 >= v9) {
    return 1;
  }
  unint64_t v13 = *(void *)(v5 + 8 * v14);
  if (v13)
  {
    int64_t v4 = v14;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v4 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v4 >= v9) {
      return 1;
    }
    unint64_t v13 = *(void *)(v5 + 8 * v4);
    ++v14;
    if (v13) {
      goto LABEL_22;
    }
  }
LABEL_42:
  __break(1u);
  return result;
}

uint64_t sub_100ED67F0(uint64_t result, uint64_t a2)
{
  if (result == a2) {
    return 1;
  }
  uint64_t v3 = result;
  if (*(void *)(result + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v4 = 0;
  uint64_t v5 = result + 64;
  uint64_t v6 = 1 << *(unsigned char *)(result + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & *(void *)(result + 64);
  int64_t v27 = (unint64_t)(v6 + 63) >> 6;
  while (1)
  {
    if (v8)
    {
      unint64_t v9 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v10 = v9 | (v4 << 6);
      goto LABEL_23;
    }
    int64_t v11 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_34;
    }
    if (v11 >= v27) {
      return 1;
    }
    unint64_t v12 = *(void *)(v5 + 8 * v11);
    ++v4;
    if (!v12)
    {
      int64_t v4 = v11 + 1;
      if (v11 + 1 >= v27) {
        return 1;
      }
      unint64_t v12 = *(void *)(v5 + 8 * v4);
      if (!v12)
      {
        int64_t v4 = v11 + 2;
        if (v11 + 2 >= v27) {
          return 1;
        }
        unint64_t v12 = *(void *)(v5 + 8 * v4);
        if (!v12) {
          break;
        }
      }
    }
LABEL_22:
    unint64_t v8 = (v12 - 1) & v12;
    unint64_t v10 = __clz(__rbit64(v12)) + (v4 << 6);
LABEL_23:
    uint64_t v14 = 16 * v10;
    uint64_t v15 = (uint64_t *)(*(void *)(v3 + 48) + v14);
    uint64_t v16 = *v15;
    uint64_t v17 = v15[1];
    unint64_t v18 = (uint64_t *)(*(void *)(v3 + 56) + v14);
    uint64_t v20 = *v18;
    uint64_t v19 = v18[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v21 = sub_100955F50(v16, v17);
    char v23 = v22;
    swift_bridgeObjectRelease();
    if ((v23 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      return 0;
    }
    BOOL v24 = (void *)(*(void *)(a2 + 56) + 16 * v21);
    if (*v24 == v20 && v24[1] == v19)
    {
      uint64_t result = swift_bridgeObjectRelease();
    }
    else
    {
      char v26 = _stringCompareWithSmolCheck(_:_:expecting:)();
      uint64_t result = swift_bridgeObjectRelease();
      if ((v26 & 1) == 0) {
        return 0;
      }
    }
  }
  int64_t v13 = v11 + 3;
  if (v13 >= v27) {
    return 1;
  }
  unint64_t v12 = *(void *)(v5 + 8 * v13);
  if (v12)
  {
    int64_t v4 = v13;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v4 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      break;
    }
    if (v4 >= v27) {
      return 1;
    }
    unint64_t v12 = *(void *)(v5 + 8 * v4);
    ++v13;
    if (v12) {
      goto LABEL_22;
    }
  }
LABEL_34:
  __break(1u);
  return result;
}

uint64_t sub_100ED69F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CRLBoardViewModelMetadata.ShareMetadata(0);
  uint64_t v53 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4 - 8, v5);
  unint64_t v8 = (char *)&v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6, v9);
  int64_t v11 = (char *)&v46 - v10;
  uint64_t v12 = type metadata accessor for CRLBoardIdentifier(0);
  uint64_t v51 = *(void *)(v12 - 8);
  __chkstk_darwin(v12 - 8, v13);
  uint64_t v15 = (char *)&v46 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_1005057FC(&qword_1016A22F0);
  uint64_t v18 = __chkstk_darwin(v16 - 8, v17);
  uint64_t v20 = (char *)&v46 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = __chkstk_darwin(v18, v21);
  BOOL v24 = (char *)&v46 - v23;
  if (a1 == a2) {
    return 1;
  }
  if (*(void *)(a1 + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v52 = 0;
  uint64_t v50 = a1;
  uint64_t v25 = *(void *)(a1 + 64);
  uint64_t v48 = a1 + 64;
  uint64_t v26 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v27 = -1;
  if (v26 < 64) {
    uint64_t v27 = ~(-1 << v26);
  }
  unint64_t v28 = v27 & v25;
  int64_t v49 = (unint64_t)(v26 + 63) >> 6;
  int64_t v47 = v49 - 1;
  while (1)
  {
    if (v28)
    {
      unint64_t v29 = __clz(__rbit64(v28));
      v28 &= v28 - 1;
      unint64_t v30 = v29 | (v52 << 6);
LABEL_8:
      uint64_t v31 = v50;
      sub_100F38118(*(void *)(v50 + 48) + *(void *)(v51 + 72) * v30, (uint64_t)v20, type metadata accessor for CRLBoardIdentifier);
      uint64_t v32 = *(void *)(v31 + 56) + *(void *)(v53 + 72) * v30;
      uint64_t v33 = sub_1005057FC(&qword_1016A22F8);
      sub_100F38118(v32, (uint64_t)&v20[*(int *)(v33 + 48)], type metadata accessor for CRLBoardViewModelMetadata.ShareMetadata);
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56))(v20, 0, 1, v33);
      goto LABEL_30;
    }
    int64_t v34 = v52 + 1;
    if (__OFADD__(v52, 1))
    {
      __break(1u);
      goto LABEL_39;
    }
    if (v34 < v49)
    {
      unint64_t v35 = *(void *)(v48 + 8 * v34);
      if (v35) {
        goto LABEL_12;
      }
      int64_t v36 = v52 + 2;
      ++v52;
      if (v34 + 1 < v49)
      {
        unint64_t v35 = *(void *)(v48 + 8 * v36);
        if (v35) {
          goto LABEL_15;
        }
        int64_t v52 = v34 + 1;
        if (v34 + 2 < v49)
        {
          unint64_t v35 = *(void *)(v48 + 8 * (v34 + 2));
          if (v35)
          {
            v34 += 2;
            goto LABEL_12;
          }
          int64_t v52 = v34 + 2;
          if (v34 + 3 < v49)
          {
            unint64_t v35 = *(void *)(v48 + 8 * (v34 + 3));
            if (v35)
            {
              v34 += 3;
              goto LABEL_12;
            }
            int64_t v36 = v34 + 4;
            int64_t v52 = v34 + 3;
            if (v34 + 4 < v49) {
              break;
            }
          }
        }
      }
    }
LABEL_29:
    uint64_t v37 = sub_1005057FC(&qword_1016A22F8);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v37 - 8) + 56))(v20, 1, 1, v37);
    unint64_t v28 = 0;
LABEL_30:
    sub_10051B3EC((uint64_t)v20, (uint64_t)v24, &qword_1016A22F0);
    uint64_t v38 = sub_1005057FC(&qword_1016A22F8);
    int v39 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v38 - 8) + 48))(v24, 1, v38);
    BOOL v40 = v39 == 1;
    if (v39 == 1) {
      return v40;
    }
    uint64_t v41 = (uint64_t)&v24[*(int *)(v38 + 48)];
    sub_100F37878((uint64_t)v24, (uint64_t)v15, type metadata accessor for CRLBoardIdentifier);
    sub_100F37878(v41, (uint64_t)v11, type metadata accessor for CRLBoardViewModelMetadata.ShareMetadata);
    unint64_t v42 = sub_1009563EC((uint64_t)v15);
    char v44 = v43;
    sub_100F38180((uint64_t)v15, type metadata accessor for CRLBoardIdentifier);
    if ((v44 & 1) == 0)
    {
      sub_100F38180((uint64_t)v11, type metadata accessor for CRLBoardViewModelMetadata.ShareMetadata);
      return 0;
    }
    sub_100F38118(*(void *)(a2 + 56) + *(void *)(v53 + 72) * v42, (uint64_t)v8, type metadata accessor for CRLBoardViewModelMetadata.ShareMetadata);
    char v45 = sub_100DC57B4((uint64_t)v8, (uint64_t)v11);
    sub_100F38180((uint64_t)v8, type metadata accessor for CRLBoardViewModelMetadata.ShareMetadata);
    uint64_t result = sub_100F38180((uint64_t)v11, type metadata accessor for CRLBoardViewModelMetadata.ShareMetadata);
    if ((v45 & 1) == 0) {
      return v40;
    }
  }
  unint64_t v35 = *(void *)(v48 + 8 * v36);
  if (v35)
  {
LABEL_15:
    int64_t v34 = v36;
LABEL_12:
    unint64_t v28 = (v35 - 1) & v35;
    unint64_t v30 = __clz(__rbit64(v35)) + (v34 << 6);
    int64_t v52 = v34;
    goto LABEL_8;
  }
  while (1)
  {
    int64_t v34 = v36 + 1;
    if (__OFADD__(v36, 1)) {
      break;
    }
    if (v34 >= v49)
    {
      int64_t v52 = v47;
      goto LABEL_29;
    }
    unint64_t v35 = *(void *)(v48 + 8 * v34);
    ++v36;
    if (v35) {
      goto LABEL_12;
    }
  }
LABEL_39:
  __break(1u);
  return result;
}

uint64_t sub_100ED6FA4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CRLBoardCRDTData(0);
  uint64_t v6 = __chkstk_darwin(v4 - 8, v5);
  uint64_t v65 = (uint64_t)&v59 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6, v8);
  uint64_t v66 = (uint64_t)&v59 - v9;
  uint64_t v10 = type metadata accessor for UUID();
  uint64_t v70 = *(void *)(v10 - 8);
  __chkstk_darwin(v10, v11);
  uint64_t v71 = (char *)&v59 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1005057FC(&qword_1016A23F0);
  uint64_t v15 = __chkstk_darwin(v13 - 8, v14);
  uint64_t v17 = (char *)&v59 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = __chkstk_darwin(v15, v18);
  uint64_t v21 = (char *)&v59 - v20;
  uint64_t v72 = a1;
  uint64_t v75 = a2;
  if (a1 == a2) {
    return 1;
  }
  if (*(void *)(v72 + 16) != *(void *)(v75 + 16)) {
    return 0;
  }
  int64_t v69 = 0;
  uint64_t v22 = *(void *)(v72 + 64);
  uint64_t v61 = v72 + 64;
  uint64_t v23 = 1 << *(unsigned char *)(v72 + 32);
  uint64_t v24 = -1;
  if (v23 < 64) {
    uint64_t v24 = ~(-1 << v23);
  }
  unint64_t v25 = v24 & v22;
  uint64_t v64 = v70 + 16;
  uint64_t v26 = (void (**)(char *, char *, uint64_t))(v70 + 32);
  uint64_t v27 = (void (**)(uint64_t, uint64_t))(v70 + 8);
  int64_t v62 = (unint64_t)(v23 + 63) >> 6;
  int64_t v60 = v62 - 1;
  uint64_t v67 = v17;
  uint64_t v68 = v10;
  uint64_t v63 = (void (**)(uint64_t, uint64_t))(v70 + 8);
  while (v25)
  {
    uint64_t v73 = (v25 - 1) & v25;
    unint64_t v28 = __clz(__rbit64(v25)) | (v69 << 6);
LABEL_8:
    uint64_t v29 = v72;
    (*(void (**)(char *, unint64_t, uint64_t))(v70 + 16))(v17, *(void *)(v72 + 48) + *(void *)(v70 + 72) * v28, v10);
    uint64_t v30 = *(void *)(v29 + 56);
    uint64_t v31 = sub_1005057FC(&qword_10169A270);
    *(void *)&v17[*(int *)(v31 + 48)] = *(void *)(v30 + 8 * v28);
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56))(v17, 0, 1, v31);
    swift_retain();
LABEL_30:
    sub_10051B3EC((uint64_t)v17, (uint64_t)v21, &qword_1016A23F0);
    uint64_t v36 = sub_1005057FC(&qword_10169A270);
    int v37 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v36 - 8) + 48))(v21, 1, v36);
    BOOL v74 = v37 == 1;
    if (v37 == 1) {
      return v74;
    }
    uint64_t v38 = *(int *)(v36 + 48);
    uint64_t v39 = (uint64_t)v71;
    (*v26)(v71, v21, v10);
    uint64_t v40 = *(void *)&v21[v38];
    unint64_t v41 = sub_100955FC8(v39);
    char v43 = v42;
    (*v27)(v39, v10);
    if ((v43 & 1) == 0) {
      goto LABEL_42;
    }
    uint64_t v44 = *(void *)(*(void *)(v75 + 56) + 8 * v41);
    swift_retain();
    if ((static UUID.== infix(_:_:)() & 1) == 0) {
      goto LABEL_41;
    }
    uint64_t v45 = *(void *)(v44 + OBJC_IVAR____TtC8Freeform19CRLTransactableData_data);
    uint64_t v46 = *(void *)(v40 + OBJC_IVAR____TtC8Freeform19CRLTransactableData_data);
    if (v45 < 0)
    {
      if ((v46 & 0x8000000000000000) == 0)
      {
LABEL_41:
        swift_release();
LABEL_42:
        swift_release();
        return 0;
      }
      long long v57 = *(uint64_t (**)(uint64_t))(*(void *)(v45 & 0x7FFFFFFFFFFFFFFFLL) + 448);
      swift_retain();
      uint64_t v58 = swift_retain();
      LOBYTE(v57) = v57(v58);
      swift_release();
      swift_release();
      swift_release();
      uint64_t result = swift_release();
      uint64_t v17 = v67;
      uint64_t v10 = v68;
      unint64_t v25 = v73;
      if ((v57 & 1) == 0) {
        return v74;
      }
    }
    else
    {
      if (v46 < 0) {
        goto LABEL_41;
      }
      uint64_t v47 = v45 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
      swift_beginAccess();
      uint64_t v48 = v66;
      sub_100F38118(v47, v66, type metadata accessor for CRLBoardCRDTData);
      uint64_t v49 = v46 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
      swift_beginAccess();
      uint64_t v50 = v49;
      uint64_t v51 = v26;
      int64_t v52 = v21;
      uint64_t v53 = v65;
      sub_100F38118(v50, v65, type metadata accessor for CRLBoardCRDTData);
      swift_retain();
      swift_retain();
      char v54 = sub_101056788(v48, v53);
      uint64_t v55 = v53;
      uint64_t v21 = v52;
      uint64_t v26 = v51;
      sub_100F38180(v55, type metadata accessor for CRLBoardCRDTData);
      uint64_t v56 = v48;
      uint64_t v27 = v63;
      sub_100F38180(v56, type metadata accessor for CRLBoardCRDTData);
      swift_release();
      swift_release();
      swift_release();
      uint64_t result = swift_release();
      uint64_t v17 = v67;
      uint64_t v10 = v68;
      unint64_t v25 = v73;
      if ((v54 & 1) == 0) {
        return v74;
      }
    }
  }
  int64_t v32 = v69 + 1;
  if (__OFADD__(v69, 1))
  {
    __break(1u);
    goto LABEL_46;
  }
  if (v32 >= v62)
  {
LABEL_29:
    uint64_t v35 = sub_1005057FC(&qword_10169A270);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 56))(v17, 1, 1, v35);
    uint64_t v73 = 0;
    goto LABEL_30;
  }
  unint64_t v33 = *(void *)(v61 + 8 * v32);
  if (v33)
  {
LABEL_12:
    uint64_t v73 = (v33 - 1) & v33;
    unint64_t v28 = __clz(__rbit64(v33)) + (v32 << 6);
    int64_t v69 = v32;
    goto LABEL_8;
  }
  int64_t v34 = v69 + 2;
  ++v69;
  if (v32 + 1 >= v62) {
    goto LABEL_29;
  }
  unint64_t v33 = *(void *)(v61 + 8 * v34);
  if (v33) {
    goto LABEL_15;
  }
  int64_t v69 = v32 + 1;
  if (v32 + 2 >= v62) {
    goto LABEL_29;
  }
  unint64_t v33 = *(void *)(v61 + 8 * (v32 + 2));
  if (v33)
  {
    v32 += 2;
    goto LABEL_12;
  }
  int64_t v69 = v32 + 2;
  if (v32 + 3 >= v62) {
    goto LABEL_29;
  }
  unint64_t v33 = *(void *)(v61 + 8 * (v32 + 3));
  if (v33)
  {
    v32 += 3;
    goto LABEL_12;
  }
  int64_t v34 = v32 + 4;
  int64_t v69 = v32 + 3;
  if (v32 + 4 >= v62) {
    goto LABEL_29;
  }
  unint64_t v33 = *(void *)(v61 + 8 * v34);
  if (v33)
  {
LABEL_15:
    int64_t v32 = v34;
    goto LABEL_12;
  }
  while (1)
  {
    int64_t v32 = v34 + 1;
    if (__OFADD__(v34, 1)) {
      break;
    }
    if (v32 >= v62)
    {
      int64_t v69 = v60;
      goto LABEL_29;
    }
    unint64_t v33 = *(void *)(v61 + 8 * v32);
    ++v34;
    if (v33) {
      goto LABEL_12;
    }
  }
LABEL_46:
  __break(1u);
  return result;
}

uint64_t sub_100ED76B4(uint64_t result, uint64_t a2)
{
  if (result == a2) {
    return 1;
  }
  uint64_t v3 = result;
  if (*(void *)(result + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v4 = 0;
  uint64_t v5 = result + 64;
  uint64_t v6 = 1 << *(unsigned char *)(result + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & *(void *)(result + 64);
  int64_t v9 = (unint64_t)(v6 + 63) >> 6;
  while (1)
  {
    if (v8)
    {
      unint64_t v10 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v11 = v10 | (v4 << 6);
      goto LABEL_25;
    }
    int64_t v12 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_36;
    }
    if (v12 >= v9) {
      return 1;
    }
    unint64_t v13 = *(void *)(v5 + 8 * v12);
    ++v4;
    if (!v13)
    {
      int64_t v4 = v12 + 1;
      if (v12 + 1 >= v9) {
        return 1;
      }
      unint64_t v13 = *(void *)(v5 + 8 * v4);
      if (!v13)
      {
        int64_t v4 = v12 + 2;
        if (v12 + 2 >= v9) {
          return 1;
        }
        unint64_t v13 = *(void *)(v5 + 8 * v4);
        if (!v13)
        {
          int64_t v4 = v12 + 3;
          if (v12 + 3 >= v9) {
            return 1;
          }
          unint64_t v13 = *(void *)(v5 + 8 * v4);
          if (!v13) {
            break;
          }
        }
      }
    }
LABEL_24:
    unint64_t v8 = (v13 - 1) & v13;
    unint64_t v11 = __clz(__rbit64(v13)) + (v4 << 6);
LABEL_25:
    uint64_t v15 = (uint64_t *)(*(void *)(v3 + 56) + 16 * v11);
    uint64_t v17 = *v15;
    uint64_t v16 = v15[1];
    swift_bridgeObjectRetain();
    uint64_t v18 = sub_100987CC0();
    if ((v19 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      return 0;
    }
    uint64_t v20 = (void *)(*(void *)(a2 + 56) + 16 * v18);
    if (*v20 == v17 && v20[1] == v16)
    {
      uint64_t result = swift_bridgeObjectRelease();
    }
    else
    {
      char v22 = _stringCompareWithSmolCheck(_:_:expecting:)();
      uint64_t result = swift_bridgeObjectRelease();
      if ((v22 & 1) == 0) {
        return 0;
      }
    }
  }
  int64_t v14 = v12 + 4;
  if (v14 >= v9) {
    return 1;
  }
  unint64_t v13 = *(void *)(v5 + 8 * v14);
  if (v13)
  {
    int64_t v4 = v14;
    goto LABEL_24;
  }
  while (1)
  {
    int64_t v4 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v4 >= v9) {
      return 1;
    }
    unint64_t v13 = *(void *)(v5 + 8 * v4);
    ++v14;
    if (v13) {
      goto LABEL_24;
    }
  }
LABEL_36:
  __break(1u);
  return result;
}

uint64_t sub_100ED787C(uint64_t a1)
{
  v2[14] = a1;
  v2[15] = v1;
  type metadata accessor for MainActor();
  v2[16] = static MainActor.shared.getter();
  uint64_t v4 = dispatch thunk of Actor.unownedExecutor.getter();
  v2[17] = v4;
  v2[18] = v3;
  return _swift_task_switch(sub_100ED7914, v4, v3);
}

uint64_t sub_100ED7914()
{
  uint64_t v1 = v0[14];
  uint64_t v2 = (void *)(v1 + *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20));
  if (*v2) {
    BOOL v3 = 0;
  }
  else {
    BOOL v3 = v2[1] == 0xE000000000000000;
  }
  if (v3 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    v0[19] = *(void *)(v0[15] + OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_store);
    return _swift_task_switch(sub_100ED7A00, 0, 0);
  }
  else
  {
    swift_release();
    uint64_t v4 = (uint64_t (*)(void))v0[1];
    return v4(0);
  }
}

uint64_t sub_100ED7A00()
{
  uint64_t v1 = v0[19];
  uint64_t v2 = v0[14];
  uint64_t v3 = swift_task_alloc();
  v0[20] = v3;
  *(void *)(v3 + 16) = v1;
  *(void *)(v3 + 24) = v2;
  uint64_t v4 = (void *)swift_task_alloc();
  v0[21] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_100ED7B00;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v0 + 23, 0, 0, 0xD000000000000039, 0x8000000101296520, sub_100F35AA0, v3, &type metadata for Bool);
}

uint64_t sub_100ED7B00()
{
  *(void *)(*(void *)v1 + 176) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_100ED7D1C;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_100ED7C1C;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100ED7C1C()
{
  *(unsigned char *)(v0 + 185) = *(unsigned char *)(v0 + 184);
  return _swift_task_switch(sub_100ED7C3C, *(void *)(v0 + 136), *(void *)(v0 + 144));
}

uint64_t sub_100ED7C3C()
{
  uint64_t v1 = *(unsigned __int8 *)(v0 + 185);
  swift_release();
  if ((v1 & 1) == 0)
  {
    id v2 = [self defaultCenter];
    if (qword_1016701A8 != -1) {
      swift_once();
    }
    [v2 postNotificationName:qword_10171CB90 object:*(void *)(v0 + 120)];
  }
  uint64_t v3 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v3(v1);
}

uint64_t sub_100ED7D1C()
{
  swift_task_dealloc();
  uint64_t v1 = *(void *)(v0 + 136);
  uint64_t v2 = *(void *)(v0 + 144);
  return _swift_task_switch(sub_100ED7D80, v1, v2);
}

uint64_t sub_100ED7D80()
{
  swift_release();
  if (qword_10166FA60 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v1 = (void *)static OS_os_log.crlBoardLibrary;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117E810;
  id v3 = v1;
  uint64_t v4 = UUID.uuidString.getter();
  uint64_t v6 = v5;
  *(void *)(inited + 56) = &type metadata for String;
  *(void *)(inited + 64) = sub_100528BE4();
  *(void *)(inited + 32) = v4;
  *(void *)(inited + 40) = v6;
  uint64_t v7 = static os_log_type_t.error.getter();
  sub_100BAC898((uint64_t)v3, (uint64_t)&_mh_execute_header, v7, (uint64_t)"Failed to check fetchBoardExistsAndHasSyncedAtLeastOnce for %{public}@", 70, 2, inited);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  swift_errorRelease();
  unint64_t v8 = *(uint64_t (**)(void))(v0 + 8);
  return v8(0);
}

uint64_t sub_100ED7F04@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2;
  uint64_t v7 = sub_1005057FC((uint64_t *)&unk_1016741E0);
  __chkstk_darwin(v7 - 8, v8);
  uint64_t v77 = (uint64_t)&v70 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v78 = type metadata accessor for CRLBoardCRDTData(0);
  __chkstk_darwin(v78, v10);
  int64_t v12 = (char *)&v70 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v76 = type metadata accessor for Date();
  uint64_t v75 = *(void *)(v76 - 8);
  uint64_t v14 = __chkstk_darwin(v76, v13);
  uint64_t v79 = (char *)&v70 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __chkstk_darwin(v14, v16);
  uint64_t v80 = (char *)&v70 - v18;
  __chkstk_darwin(v17, v19);
  uint64_t v81 = (char *)&v70 - v20;
  uint64_t v21 = (int *)type metadata accessor for CRLBoardViewModelMetadata(0);
  uint64_t v22 = *((void *)v21 - 1);
  __chkstk_darwin(v21, v23);
  unint64_t v25 = (char *)&v70 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = (uint64_t *)(v2 + OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_storeBoardMetadata);
  swift_beginAccess();
  uint64_t v27 = *v26;
  if (*(void *)(v27 + 16) && (unint64_t v28 = sub_1009563EC(a1), (v29 & 1) != 0))
  {
    sub_100F38118(*(void *)(v27 + 56) + *(void *)(v22 + 72) * v28, (uint64_t)v25, type metadata accessor for CRLBoardViewModelMetadata);
    sub_100F37878((uint64_t)v25, a2, type metadata accessor for CRLBoardViewModelMetadata);
    return swift_endAccess();
  }
  else
  {
    swift_endAccess();
    uint64_t v31 = (uint64_t *)(v4 + OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_boardInfos);
    swift_beginAccess();
    uint64_t v32 = *v31;
    if (*(void *)(*v31 + 16) && (unint64_t v33 = sub_1009563EC(a1), (v34 & 1) != 0))
    {
      uint64_t v72 = (unsigned char *)a2;
      uint64_t v73 = v3;
      uint64_t v35 = *(void *)(*(void *)(v32 + 56) + 8 * v33);
      swift_endAccess();
      uint64_t v36 = qword_10166FA60;
      uint64_t v74 = v35;
      swift_retain();
      if (v36 != -1) {
        swift_once();
      }
      swift_beginAccess();
      int v37 = (void *)static OS_os_log.crlBoardLibrary;
      sub_1005057FC((uint64_t *)&unk_101672B40);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_10117E810;
      id v39 = v37;
      uint64_t v40 = UUID.uuidString.getter();
      uint64_t v42 = v41;
      *(void *)(inited + 56) = &type metadata for String;
      *(void *)(inited + 64) = sub_100528BE4();
      *(void *)(inited + 32) = v40;
      *(void *)(inited + 40) = v42;
      uint64_t v43 = static os_log_type_t.debug.getter();
      sub_100BAC898((uint64_t)v39, (uint64_t)&_mh_execute_header, v43, (uint64_t)"No metadata in snapshot; returning metadata for open board with identifier: %@",
        78,
        2,
        inited);
      swift_setDeallocating();
      sub_1005057FC(&qword_101672B50);
      swift_arrayDestroy();

      uint64_t v44 = *(void *)(*(void *)(*(void *)(v74 + 16) + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard)
                      + OBJC_IVAR____TtC8Freeform8CRLBoard_data);
      uint64_t v45 = v44 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
      swift_beginAccess();
      sub_100F38118(v45, (uint64_t)v12, type metadata accessor for CRLBoardCRDTData);
      uint64_t v71 = v44;
      swift_retain();
      sub_1005057FC(&qword_101691F28);
      CRMaxRegister.wrappedValue.getter();
      sub_100F38180((uint64_t)v12, type metadata accessor for CRLBoardCRDTData);
      Date.init(timeIntervalSinceReferenceDate:)();
      sub_100F38118(v45, (uint64_t)v12, type metadata accessor for CRLBoardCRDTData);
      type metadata accessor for CRLSharedBoardMetadataCRDTData(0);
      sub_1005057FC(&qword_10168B6F0);
      CRRegister.wrappedValue.getter();
      sub_100F38180((uint64_t)v12, type metadata accessor for CRLBoardCRDTData);
      uint64_t v46 = Date.init(timeIntervalSinceReferenceDate:)();
      unint64_t v47 = *(void *)(*(void *)(v4 + OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_sharedHighlightController)
                      + OBJC_IVAR____TtC8Freeform28CRLSharedHighlightController_sharedHighlights);
      __chkstk_darwin(v46, v48);
      uint64_t v69 = a1;
      swift_bridgeObjectRetain();
      uint64_t v49 = sub_100ED54F0((uint64_t (*)(id *))sub_1007E7080, (uint64_t)v68, v47);
      swift_bridgeObjectRelease();
      if (v49) {

      }
      sub_100F38118(v45, (uint64_t)v12, type metadata accessor for CRLBoardCRDTData);
      sub_1005057FC((uint64_t *)&unk_101689310);
      CRRegister.wrappedValue.getter();
      LODWORD(v78) = v82;
      sub_100F38180((uint64_t)v12, type metadata accessor for CRLBoardCRDTData);
      uint64_t v50 = v75;
      uint64_t v51 = v76;
      (*(void (**)(char *, char *, uint64_t))(v75 + 16))(v79, v81, v76);
      int64_t v52 = *(void **)(*(void *)(*(void *)(*(void *)(v74 + 16)
                                             + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard)
                                 + OBJC_IVAR____TtC8Freeform8CRLBoard_shareState)
                     + 16);
      if (v52)
      {
        id v53 = v52;
        uint64_t v54 = v77;
        sub_100DC4FC8(v53, v77);
        uint64_t v55 = type metadata accessor for CRLBoardViewModelMetadata.ShareMetadata(0);
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v55 - 8) + 56))(v54, 0, 1, v55);
      }
      else
      {
        uint64_t v61 = type metadata accessor for CRLBoardViewModelMetadata.ShareMetadata(0);
        uint64_t v54 = v77;
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v61 - 8) + 56))(v77, 1, 1, v61);
      }
      BOOL v62 = v49 != 0;
      unint64_t v63 = *(void *)(v71 + 24);
      swift_retain();
      unint64_t v64 = sub_1002094A4();
      swift_release_n();
      swift_release();
      LOBYTE(v64) = v64 < v63;
      (*(void (**)(char *, uint64_t))(v50 + 8))(v81, v51);
      uint64_t v65 = v72;
      *uint64_t v72 = v78;
      v65[1] = 0;
      uint64_t v66 = *(void (**)(unsigned char *, char *, uint64_t))(v50 + 32);
      v66(&v65[v21[6]], v79, v51);
      sub_10051B3EC(v54, (uint64_t)&v65[v21[7]], (uint64_t *)&unk_1016741E0);
      v65[v21[8]] = 0;
      v65[v21[9]] = v62;
      v65[v21[10]] = v64;
      uint64_t v67 = &v65[v21[11]];
      *(void *)uint64_t v67 = 0;
      v67[8] = 1;
      v65[v21[12]] = 1;
      v65[v21[13]] = 1;
      v65[v21[14]] = 0;
      v65[v21[15]] = 0;
      return ((uint64_t (*)(unsigned char *, char *, uint64_t))v66)(&v65[v21[16]], v80, v51);
    }
    else
    {
      swift_endAccess();
      sub_1005057FC((uint64_t *)&unk_101672B40);
      uint64_t v56 = swift_initStackObject();
      *(_OWORD *)(v56 + 16) = xmmword_10117E810;
      uint64_t v57 = UUID.uuidString.getter();
      uint64_t v59 = v58;
      *(void *)(v56 + 56) = &type metadata for String;
      *(void *)(v56 + 64) = sub_100528BE4();
      *(void *)(v56 + 32) = v57;
      *(void *)(v56 + 40) = v59;
      sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"boardMetadata(for:)", 19, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLBoardLibrary.swift", 87, 2, 1085, (uint64_t)"No metadata for board identifier: %@", 36, 2u, v56);
      LOBYTE(v69) = 2;
      v68[0] = "No metadata for board identifier: %@";
      v68[1] = 36;
      sub_1005598CC(v56, (uint64_t)"boardMetadata(for:)", 19, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLBoardLibrary.swift", 87, 2, 1085);
      [self logFullBacktrace];
      swift_setDeallocating();
      sub_1005057FC(&qword_101672B50);
      swift_arrayDestroy();
      sub_1006DAC0C();
      swift_allocError();
      *int64_t v60 = 0;
      return swift_willThrow();
    }
  }
}

uint64_t sub_100ED8914(uint64_t result, uint64_t a2)
{
  uint64_t v2 = result;
  uint64_t v19 = a2;
  if ((result & 0xC000000000000001) != 0)
  {
    __CocoaSet.makeIterator()();
    type metadata accessor for CRLTransactableHashableWrapper();
    sub_100F359B0((unint64_t *)&qword_10169A0A0, (void (*)(uint64_t))type metadata accessor for CRLTransactableHashableWrapper);
    uint64_t result = Set.Iterator.init(_cocoa:)();
    uint64_t v2 = v20;
    uint64_t v17 = v21;
    uint64_t v3 = v22;
    uint64_t v4 = v23;
    unint64_t v5 = v24;
  }
  else
  {
    uint64_t v4 = 0;
    uint64_t v6 = -1 << *(unsigned char *)(result + 32);
    uint64_t v17 = result + 56;
    uint64_t v3 = ~v6;
    uint64_t v7 = -v6;
    if (v7 < 64) {
      uint64_t v8 = ~(-1 << v7);
    }
    else {
      uint64_t v8 = -1;
    }
    unint64_t v5 = v8 & *(void *)(result + 56);
  }
  int64_t v9 = (unint64_t)(v3 + 64) >> 6;
  if (v2 < 0) {
    goto LABEL_10;
  }
  while (1)
  {
    if (v5)
    {
      uint64_t v10 = (v5 - 1) & v5;
      unint64_t v11 = __clz(__rbit64(v5)) | (v4 << 6);
      uint64_t v12 = v4;
      goto LABEL_29;
    }
    int64_t v14 = v4 + 1;
    if (__OFADD__(v4, 1)) {
      break;
    }
    if (v14 >= v9) {
      goto LABEL_32;
    }
    unint64_t v15 = *(void *)(v17 + 8 * v14);
    uint64_t v12 = v4 + 1;
    if (!v15)
    {
      uint64_t v12 = v4 + 2;
      if (v4 + 2 >= v9) {
        goto LABEL_32;
      }
      unint64_t v15 = *(void *)(v17 + 8 * v12);
      if (!v15)
      {
        uint64_t v12 = v4 + 3;
        if (v4 + 3 >= v9) {
          goto LABEL_32;
        }
        unint64_t v15 = *(void *)(v17 + 8 * v12);
        if (!v15)
        {
          uint64_t v12 = v4 + 4;
          if (v4 + 4 >= v9) {
            goto LABEL_32;
          }
          unint64_t v15 = *(void *)(v17 + 8 * v12);
          if (!v15)
          {
            uint64_t v12 = v4 + 5;
            if (v4 + 5 >= v9) {
              goto LABEL_32;
            }
            unint64_t v15 = *(void *)(v17 + 8 * v12);
            if (!v15)
            {
              uint64_t v16 = v4 + 6;
              while (v9 != v16)
              {
                unint64_t v15 = *(void *)(v17 + 8 * v16++);
                if (v15)
                {
                  uint64_t v12 = v16 - 1;
                  goto LABEL_28;
                }
              }
LABEL_32:
              sub_10052E1EC();
              return v19;
            }
          }
        }
      }
    }
LABEL_28:
    uint64_t v10 = (v15 - 1) & v15;
    unint64_t v11 = __clz(__rbit64(v15)) + (v12 << 6);
LABEL_29:
    uint64_t v13 = *(void *)(*(void *)(v2 + 48) + 8 * v11);
    swift_retain();
    if (!v13) {
      goto LABEL_32;
    }
    while (1)
    {
      sub_100CB4EEC(&v18, v13);
      uint64_t result = swift_release();
      uint64_t v4 = v12;
      unint64_t v5 = v10;
      if ((v2 & 0x8000000000000000) == 0) {
        break;
      }
LABEL_10:
      if (__CocoaSet.Iterator.next()())
      {
        type metadata accessor for CRLTransactableHashableWrapper();
        swift_unknownObjectRetain();
        swift_dynamicCast();
        uint64_t v13 = v18;
        swift_unknownObjectRelease();
        uint64_t v12 = v4;
        uint64_t v10 = v5;
        if (v13) {
          continue;
        }
      }
      goto LABEL_32;
    }
  }
  __break(1u);
  return result;
}

void sub_100ED8BC4(unint64_t a1, void *a2)
{
}

uint64_t sub_100ED8C0C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UUID();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v7 = __chkstk_darwin(v4, v6);
  int64_t v9 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7, v10);
  uint64_t v12 = (char *)&v30 - v11;
  uint64_t v13 = sub_1005057FC((uint64_t *)&unk_101674520);
  uint64_t result = __chkstk_darwin(v13 - 8, v14);
  uint64_t v17 = (char *)&v30 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v18 = 0;
  uint64_t v36 = a1;
  uint64_t v37 = a2;
  uint64_t v21 = *(void *)(a1 + 56);
  uint64_t v20 = a1 + 56;
  uint64_t v19 = v21;
  uint64_t v22 = 1 << *(unsigned char *)(v20 - 24);
  uint64_t v23 = -1;
  if (v22 < 64) {
    uint64_t v23 = ~(-1 << v22);
  }
  unint64_t v24 = v23 & v19;
  uint64_t v31 = v20;
  int64_t v32 = (unint64_t)(v22 + 63) >> 6;
  uint64_t v34 = v5 + 16;
  uint64_t v35 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56);
  uint64_t v33 = v5 + 48;
  if ((v23 & v19) == 0) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v25 = __clz(__rbit64(v24));
  v24 &= v24 - 1;
  for (unint64_t i = v25 | (v18 << 6); ; unint64_t i = __clz(__rbit64(v28)) + (v18 << 6))
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v5 + 16))(v17, *(void *)(v36 + 48) + *(void *)(v5 + 72) * i, v4);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v5 + 56))(v17, 0, 1, v4);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v17, 1, v4) == 1) {
      goto LABEL_25;
    }
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v9, v17, v4);
    sub_100CB4BC8((uint64_t)v12, v9);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v12, v4);
    if (v24) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v27 = v18 + 1;
    if (__OFADD__(v18, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v27 >= v32) {
      goto LABEL_24;
    }
    unint64_t v28 = *(void *)(v31 + 8 * v27);
    ++v18;
    if (!v28)
    {
      int64_t v18 = v27 + 1;
      if (v27 + 1 >= v32) {
        goto LABEL_24;
      }
      unint64_t v28 = *(void *)(v31 + 8 * v18);
      if (!v28)
      {
        int64_t v18 = v27 + 2;
        if (v27 + 2 >= v32) {
          goto LABEL_24;
        }
        unint64_t v28 = *(void *)(v31 + 8 * v18);
        if (!v28)
        {
          int64_t v18 = v27 + 3;
          if (v27 + 3 >= v32) {
            goto LABEL_24;
          }
          unint64_t v28 = *(void *)(v31 + 8 * v18);
          if (!v28) {
            break;
          }
        }
      }
    }
LABEL_20:
    unint64_t v24 = (v28 - 1) & v28;
  }
  int64_t v29 = v27 + 4;
  if (v29 >= v32)
  {
LABEL_24:
    (*v35)(v17, 1, 1, v4);
LABEL_25:
    swift_release();
    return v37;
  }
  unint64_t v28 = *(void *)(v31 + 8 * v29);
  if (v28)
  {
    int64_t v18 = v29;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v18 = v29 + 1;
    if (__OFADD__(v29, 1)) {
      break;
    }
    if (v18 >= v32) {
      goto LABEL_24;
    }
    unint64_t v28 = *(void *)(v31 + 8 * v18);
    ++v29;
    if (v28) {
      goto LABEL_20;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_100ED8F78(uint64_t result, uint64_t a2)
{
  uint64_t v2 = result;
  int64_t v3 = 0;
  uint64_t v18 = a2;
  uint64_t v4 = result + 56;
  uint64_t v5 = 1 << *(unsigned char *)(result + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(result + 56);
  int64_t v8 = (unint64_t)(v5 + 63) >> 6;
  while (1)
  {
    if (v7)
    {
      unint64_t v9 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v10 = v9 | (v3 << 6);
      goto LABEL_5;
    }
    int64_t v14 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v14 >= v8) {
      goto LABEL_23;
    }
    unint64_t v15 = *(void *)(v4 + 8 * v14);
    ++v3;
    if (!v15)
    {
      int64_t v3 = v14 + 1;
      if (v14 + 1 >= v8) {
        goto LABEL_23;
      }
      unint64_t v15 = *(void *)(v4 + 8 * v3);
      if (!v15)
      {
        int64_t v3 = v14 + 2;
        if (v14 + 2 >= v8) {
          goto LABEL_23;
        }
        unint64_t v15 = *(void *)(v4 + 8 * v3);
        if (!v15)
        {
          int64_t v3 = v14 + 3;
          if (v14 + 3 >= v8) {
            goto LABEL_23;
          }
          unint64_t v15 = *(void *)(v4 + 8 * v3);
          if (!v15) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v7 = (v15 - 1) & v15;
    unint64_t v10 = __clz(__rbit64(v15)) + (v3 << 6);
LABEL_5:
    uint64_t v11 = (Swift::Int *)(*(void *)(v2 + 48) + 16 * v10);
    Swift::Int v12 = *v11;
    Swift::Int v13 = v11[1];
    swift_bridgeObjectRetain();
    sub_100CB8180(&v17, v12, v13);
    uint64_t result = swift_bridgeObjectRelease();
  }
  int64_t v16 = v14 + 4;
  if (v16 >= v8)
  {
LABEL_23:
    swift_release();
    return v18;
  }
  unint64_t v15 = *(void *)(v4 + 8 * v16);
  if (v15)
  {
    int64_t v3 = v16;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v3 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v3 >= v8) {
      goto LABEL_23;
    }
    unint64_t v15 = *(void *)(v4 + 8 * v3);
    ++v16;
    if (v15) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_100ED90F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CRLBoardIdentifier(0);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v7 = __chkstk_darwin(v4 - 8, v6);
  unint64_t v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __chkstk_darwin(v7, v10);
  Swift::Int v13 = (char *)&v29 - v12;
  uint64_t result = __chkstk_darwin(v11, v14);
  Swift::Int v17 = (char *)&v29 - v16;
  int64_t v18 = 0;
  uint64_t v30 = a2;
  uint64_t v19 = a1 + 56;
  uint64_t v20 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v21 = -1;
  if (v20 < 64) {
    uint64_t v21 = ~(-1 << v20);
  }
  unint64_t v22 = v21 & *(void *)(a1 + 56);
  int64_t v23 = (unint64_t)(v20 + 63) >> 6;
  while (1)
  {
    if (v22)
    {
      unint64_t v24 = __clz(__rbit64(v22));
      v22 &= v22 - 1;
      unint64_t v25 = v24 | (v18 << 6);
      goto LABEL_5;
    }
    int64_t v26 = v18 + 1;
    if (__OFADD__(v18, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v26 >= v23) {
      goto LABEL_23;
    }
    unint64_t v27 = *(void *)(v19 + 8 * v26);
    ++v18;
    if (!v27)
    {
      int64_t v18 = v26 + 1;
      if (v26 + 1 >= v23) {
        goto LABEL_23;
      }
      unint64_t v27 = *(void *)(v19 + 8 * v18);
      if (!v27)
      {
        int64_t v18 = v26 + 2;
        if (v26 + 2 >= v23) {
          goto LABEL_23;
        }
        unint64_t v27 = *(void *)(v19 + 8 * v18);
        if (!v27)
        {
          int64_t v18 = v26 + 3;
          if (v26 + 3 >= v23) {
            goto LABEL_23;
          }
          unint64_t v27 = *(void *)(v19 + 8 * v18);
          if (!v27) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v22 = (v27 - 1) & v27;
    unint64_t v25 = __clz(__rbit64(v27)) + (v18 << 6);
LABEL_5:
    sub_100F38118(*(void *)(a1 + 48) + *(void *)(v5 + 72) * v25, (uint64_t)v17, type metadata accessor for CRLBoardIdentifier);
    sub_100F37878((uint64_t)v17, (uint64_t)v9, type metadata accessor for CRLBoardIdentifier);
    sub_100CB7090((uint64_t)v13, (uint64_t)v9);
    uint64_t result = sub_100F38180((uint64_t)v13, type metadata accessor for CRLBoardIdentifier);
  }
  int64_t v28 = v26 + 4;
  if (v28 >= v23)
  {
LABEL_23:
    swift_release();
    return v30;
  }
  unint64_t v27 = *(void *)(v19 + 8 * v28);
  if (v27)
  {
    int64_t v18 = v28;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v18 = v28 + 1;
    if (__OFADD__(v28, 1)) {
      break;
    }
    if (v18 >= v23) {
      goto LABEL_23;
    }
    unint64_t v27 = *(void *)(v19 + 8 * v18);
    ++v28;
    if (v27) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

void sub_100ED9378(unint64_t a1, void *a2)
{
}

void sub_100ED93C0(unint64_t a1, void *a2, void (*a3)(void), unint64_t *a4, void (*a5)(uint64_t), void (*a6)(id *, id))
{
  unint64_t v7 = a1;
  v27[1] = a2;
  if ((a1 & 0xC000000000000001) != 0)
  {
    __CocoaSet.makeIterator()();
    a3(0);
    sub_100F359B0(a4, a5);
    Set.Iterator.init(_cocoa:)();
    unint64_t v7 = (unint64_t)v27[2];
    int64_t v26 = v27[3];
    uint64_t v11 = (uint64_t)v27[4];
    id v12 = v27[5];
    unint64_t v13 = (unint64_t)v27[6];
  }
  else
  {
    id v12 = 0;
    uint64_t v14 = -1 << *(unsigned char *)(a1 + 32);
    int64_t v26 = (void *)(a1 + 56);
    uint64_t v11 = ~v14;
    uint64_t v15 = -v14;
    if (v15 < 64) {
      uint64_t v16 = ~(-1 << v15);
    }
    else {
      uint64_t v16 = -1;
    }
    unint64_t v13 = v16 & *(void *)(a1 + 56);
  }
  int64_t v17 = (unint64_t)(v11 + 64) >> 6;
  if ((v7 & 0x8000000000000000) != 0) {
    goto LABEL_10;
  }
  while (1)
  {
    if (v13)
    {
      uint64_t v18 = (v13 - 1) & v13;
      unint64_t v19 = __clz(__rbit64(v13)) | ((void)v12 << 6);
      uint64_t v20 = (char *)v12;
      goto LABEL_29;
    }
    uint64_t v22 = (uint64_t)v12 + 1;
    if (__OFADD__(v12, 1)) {
      break;
    }
    if (v22 >= v17) {
      goto LABEL_32;
    }
    unint64_t v23 = v26[v22];
    uint64_t v20 = (char *)v12 + 1;
    if (!v23)
    {
      uint64_t v20 = (char *)v12 + 2;
      if ((uint64_t)v12 + 2 >= v17) {
        goto LABEL_32;
      }
      unint64_t v23 = v26[(void)v20];
      if (!v23)
      {
        uint64_t v20 = (char *)v12 + 3;
        if ((uint64_t)v12 + 3 >= v17) {
          goto LABEL_32;
        }
        unint64_t v23 = v26[(void)v20];
        if (!v23)
        {
          uint64_t v20 = (char *)v12 + 4;
          if ((uint64_t)v12 + 4 >= v17) {
            goto LABEL_32;
          }
          unint64_t v23 = v26[(void)v20];
          if (!v23)
          {
            uint64_t v20 = (char *)v12 + 5;
            if ((uint64_t)v12 + 5 >= v17) {
              goto LABEL_32;
            }
            unint64_t v23 = v26[(void)v20];
            if (!v23)
            {
              unint64_t v24 = (char *)v12 + 6;
              while ((char *)v17 != v24)
              {
                unint64_t v23 = v26[(void)v24++];
                if (v23)
                {
                  uint64_t v20 = v24 - 1;
                  goto LABEL_28;
                }
              }
LABEL_32:
              sub_10052E1EC();
              return;
            }
          }
        }
      }
    }
LABEL_28:
    uint64_t v18 = (v23 - 1) & v23;
    unint64_t v19 = __clz(__rbit64(v23)) + ((void)v20 << 6);
LABEL_29:
    id v21 = *(id *)(*(void *)(v7 + 48) + 8 * v19);
    if (!v21) {
      goto LABEL_32;
    }
    while (1)
    {
      a6(v27, v21);

      id v12 = v20;
      unint64_t v13 = v18;
      if ((v7 & 0x8000000000000000) == 0) {
        break;
      }
LABEL_10:
      if (__CocoaSet.Iterator.next()())
      {
        a3(0);
        swift_unknownObjectRetain();
        swift_dynamicCast();
        id v21 = v27[0];
        swift_unknownObjectRelease();
        uint64_t v20 = (char *)v12;
        uint64_t v18 = v13;
        if (v21) {
          continue;
        }
      }
      goto LABEL_32;
    }
  }
  __break(1u);
}

void sub_100ED9688(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s17CategoryViewModelVMa();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4 - 8, v6);
  uint64_t v8 = (char *)v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9, v10);
  id v12 = (char *)v28 - v11;
  __chkstk_darwin(v13, v14);
  uint64_t v16 = (char *)v28 - v15;
  int64_t v17 = 0;
  v28[1] = a2;
  uint64_t v18 = a1 + 56;
  uint64_t v19 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v20 = -1;
  if (v19 < 64) {
    uint64_t v20 = ~(-1 << v19);
  }
  unint64_t v21 = v20 & *(void *)(a1 + 56);
  int64_t v22 = (unint64_t)(v19 + 63) >> 6;
  while (1)
  {
    if (v21)
    {
      unint64_t v23 = __clz(__rbit64(v21));
      v21 &= v21 - 1;
      unint64_t v24 = v23 | (v17 << 6);
      goto LABEL_5;
    }
    int64_t v25 = v17 + 1;
    if (__OFADD__(v17, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v25 >= v22) {
      goto LABEL_23;
    }
    unint64_t v26 = *(void *)(v18 + 8 * v25);
    ++v17;
    if (!v26)
    {
      int64_t v17 = v25 + 1;
      if (v25 + 1 >= v22) {
        goto LABEL_23;
      }
      unint64_t v26 = *(void *)(v18 + 8 * v17);
      if (!v26)
      {
        int64_t v17 = v25 + 2;
        if (v25 + 2 >= v22) {
          goto LABEL_23;
        }
        unint64_t v26 = *(void *)(v18 + 8 * v17);
        if (!v26)
        {
          int64_t v17 = v25 + 3;
          if (v25 + 3 >= v22) {
            goto LABEL_23;
          }
          unint64_t v26 = *(void *)(v18 + 8 * v17);
          if (!v26) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v21 = (v26 - 1) & v26;
    unint64_t v24 = __clz(__rbit64(v26)) + (v17 << 6);
LABEL_5:
    sub_100F38118(*(void *)(a1 + 48) + *(void *)(v5 + 72) * v24, (uint64_t)v16, (uint64_t (*)(void))_s17CategoryViewModelVMa);
    sub_100F37878((uint64_t)v16, (uint64_t)v8, (uint64_t (*)(void))_s17CategoryViewModelVMa);
    sub_100CBA2CC((uint64_t)v12, (uint64_t)v8);
    sub_100F38180((uint64_t)v12, (uint64_t (*)(void))_s17CategoryViewModelVMa);
  }
  int64_t v27 = v25 + 4;
  if (v27 >= v22)
  {
LABEL_23:
    swift_release();
    return;
  }
  unint64_t v26 = *(void *)(v18 + 8 * v27);
  if (v26)
  {
    int64_t v17 = v27;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v17 = v27 + 1;
    if (__OFADD__(v27, 1)) {
      break;
    }
    if (v17 >= v22) {
      goto LABEL_23;
    }
    unint64_t v26 = *(void *)(v18 + 8 * v17);
    ++v27;
    if (v26) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
}

uint64_t sub_100ED9908()
{
  v1[19] = v0;
  type metadata accessor for MainActor();
  v1[20] = static MainActor.shared.getter();
  uint64_t v3 = dispatch thunk of Actor.unownedExecutor.getter();
  v1[21] = v3;
  v1[22] = v2;
  return _swift_task_switch(sub_100ED99A0, v3, v2);
}

uint64_t sub_100ED99A0()
{
  uint64_t v1 = *(void *)(v0 + 152);
  if ((*(unsigned char *)(v1 + OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_didStartUpdating) & 1) != 0
    || (*(unsigned char *)(v1 + OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_didCallStartUpdating) & 1) != 0)
  {
    swift_release();
    uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
    return v2();
  }
  else
  {
    *(unsigned char *)(v1 + OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_didCallStartUpdating) = 1;
    *(void *)(v0 + 136) = [self standardUserDefaults];
    swift_getKeyPath();
    swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v4 = _KeyValueCodingAndObserving.observe<A>(_:options:changeHandler:)();
    swift_release();
    swift_release();

    uint64_t v5 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_userDataDeletionRequestObserver);
    *(void *)(v1 + OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_userDataDeletionRequestObserver) = v4;

    uint64_t v6 = (void *)swift_task_alloc();
    *(void *)(v0 + 184) = v6;
    *uint64_t v6 = v0;
    v6[1] = sub_100ED9B64;
    return sub_100EF524C();
  }
}

uint64_t sub_100ED9B64()
{
  uint64_t v2 = (void *)*v1;
  v2[24] = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = v2[21];
    uint64_t v4 = v2[22];
    return _swift_task_switch(sub_100ED9EB0, v3, v4);
  }
  else
  {
    uint64_t v5 = (void *)swift_task_alloc();
    v2[25] = v5;
    void *v5 = v2;
    v5[1] = sub_100ED9CD8;
    return sub_100F34038((uint64_t)&_swiftEmptySetSingleton);
  }
}

uint64_t sub_100ED9CD8()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 176);
  uint64_t v3 = *(void *)(v1 + 168);
  return _swift_task_switch(sub_100ED9DF8, v3, v2);
}

uint64_t sub_100ED9DF8()
{
  uint64_t v1 = *(void *)(v0 + 152);
  swift_release();
  sub_100EF5F1C();
  uint64_t v2 = *(void **)(*(void *)(v1 + OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_sharedHighlightController)
                + OBJC_IVAR____TtC8Freeform28CRLSharedHighlightController_highlightObservers);
  if (([v2 containsObject:v1] & 1) == 0) {
    [v2 addObject:*(void *)(v0 + 152)];
  }
  sub_100EF2C8C();
  sub_100EEE8B4();
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t sub_100ED9EB0()
{
  if (qword_10166F9D8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v1 = (void *)static OS_os_log.crlError;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117E810;
  swift_getErrorValue();
  id v3 = v1;
  uint64_t v4 = Error.localizedDescription.getter();
  uint64_t v6 = v5;
  *(void *)(inited + 56) = &type metadata for String;
  *(void *)(inited + 64) = sub_100528BE4();
  *(void *)(inited + 32) = v4;
  *(void *)(inited + 40) = v6;
  uint64_t v7 = static os_log_type_t.error.getter();
  sub_100BAC898((uint64_t)v3, (uint64_t)&_mh_execute_header, v7, (uint64_t)"Failed to mark all existing boards as not discardable: %@", 57, 2, inited);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  swift_errorRelease();
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v0 + 200) = v8;
  *uint64_t v8 = v0;
  v8[1] = sub_100ED9CD8;
  return sub_100F34038((uint64_t)&_swiftEmptySetSingleton);
}

uint64_t sub_100EDA098(uint64_t a1)
{
  v2[44] = a1;
  v2[45] = v1;
  v2[46] = type metadata accessor for MainActor();
  v2[47] = static MainActor.shared.getter();
  uint64_t v4 = (void *)swift_task_alloc();
  v2[48] = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_100EDA15C;
  return sub_100ED3CA0(a1, 1);
}

uint64_t sub_100EDA15C(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(*v2 + 392) = a1;
  swift_task_dealloc();
  if (v1)
  {
    swift_errorRelease();
    uint64_t v4 = dispatch thunk of Actor.unownedExecutor.getter();
    uint64_t v6 = v5;
    uint64_t v7 = sub_100EDA9E8;
    uint64_t v8 = v4;
    uint64_t v9 = v6;
  }
  else
  {
    uint64_t v10 = dispatch thunk of Actor.unownedExecutor.getter();
    uint64_t v9 = v11;
    *(void *)(v3 + 400) = v10;
    *(void *)(v3 + 408) = v11;
    uint64_t v7 = sub_100EDA300;
    uint64_t v8 = v10;
  }
  return _swift_task_switch(v7, v8, v9);
}

uint64_t sub_100EDA300()
{
  uint64_t v1 = *(void **)(v0 + 392);
  if (v1)
  {
    id v2 = [*(id *)(v0 + 392) participants];
    sub_10050BF48(0, (unint64_t *)&qword_101693410);
    unint64_t v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    if (v3 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease();
    if (v4 == 1 && [v1 publicPermission] == (id)1)
    {
      if (qword_10166FBE0 != -1) {
        swift_once();
      }
      swift_beginAccess();
      uint64_t v5 = (void *)static OS_os_log.shareState;
      *(void *)(v0 + 416) = sub_1005057FC((uint64_t *)&unk_101672B40);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_10117E810;
      id v7 = v5;
      uint64_t v8 = UUID.uuidString.getter();
      uint64_t v10 = v9;
      *(void *)(inited + 56) = &type metadata for String;
      unint64_t v11 = sub_100528BE4();
      *(void *)(v0 + 424) = v11;
      *(void *)(inited + 64) = v11;
      *(void *)(inited + 32) = v8;
      *(void *)(inited + 40) = v10;
      uint64_t v12 = static os_log_type_t.default.getter();
      sub_100BAC898((uint64_t)v7, (uint64_t)&_mh_execute_header, v12, (uint64_t)"There are no participants. Deleting the share for board with UUID: %@.", 70, 2, inited);
      swift_setDeallocating();
      *(void *)(v0 + 432) = sub_1005057FC(&qword_101672B50);
      swift_arrayDestroy();

      uint64_t v13 = (void *)swift_task_alloc();
      *(void *)(v0 + 440) = v13;
      void *v13 = v0;
      v13[1] = sub_100EDA6D0;
      uint64_t v14 = *(void *)(v0 + 352);
      return sub_100F8498C(v14);
    }

    swift_release();
  }
  else
  {
    swift_release();
    if (qword_10166FBE0 != -1) {
      swift_once();
    }
    swift_beginAccess();
    uint64_t v16 = (void *)static OS_os_log.shareState;
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t v17 = swift_initStackObject();
    *(_OWORD *)(v17 + 16) = xmmword_10117E810;
    id v18 = v16;
    uint64_t v19 = UUID.uuidString.getter();
    uint64_t v21 = v20;
    *(void *)(v17 + 56) = &type metadata for String;
    *(void *)(v17 + 64) = sub_100528BE4();
    *(void *)(v17 + 32) = v19;
    *(void *)(v17 + 40) = v21;
    uint64_t v22 = static os_log_type_t.default.getter();
    sub_100BAC898((uint64_t)v18, (uint64_t)&_mh_execute_header, v22, (uint64_t)"No share found for board with UUID: %@.", 39, 2, v17);
    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();
  }
  unint64_t v23 = *(uint64_t (**)(void))(v0 + 8);
  return v23();
}

uint64_t sub_100EDA6D0()
{
  id v2 = (void *)*v1;
  v2[56] = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = v2[50];
    uint64_t v4 = v2[51];
    return _swift_task_switch(sub_100EDAB5C, v3, v4);
  }
  else
  {
    uint64_t v5 = (void *)swift_task_alloc();
    v2[57] = v5;
    void *v5 = v2;
    v5[1] = sub_100EDA844;
    uint64_t v6 = v2[44];
    return sub_100ED4738(v6, 0, 1);
  }
}

uint64_t sub_100EDA844()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 464) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 408);
  uint64_t v4 = *(void *)(v2 + 400);
  if (v0) {
    uint64_t v5 = sub_100EDACC8;
  }
  else {
    uint64_t v5 = sub_100EDA980;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_100EDA980()
{
  uint64_t v1 = *(void **)(v0 + 392);
  swift_release();

  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_100EDA9E8()
{
  swift_release();
  if (qword_10166FBE0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v1 = (void *)static OS_os_log.shareState;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117E810;
  id v3 = v1;
  uint64_t v4 = UUID.uuidString.getter();
  uint64_t v6 = v5;
  *(void *)(inited + 56) = &type metadata for String;
  *(void *)(inited + 64) = sub_100528BE4();
  *(void *)(inited + 32) = v4;
  *(void *)(inited + 40) = v6;
  uint64_t v7 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v3, (uint64_t)&_mh_execute_header, v7, (uint64_t)"No share found for board with UUID: %@.", 39, 2, inited);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  uint64_t v8 = *(uint64_t (**)(void))(v0 + 8);
  return v8();
}

uint64_t sub_100EDAB5C()
{
  uint64_t v1 = v0[53];
  uint64_t v12 = (void *)v0[49];
  swift_release();
  uint64_t v2 = (void *)static OS_os_log.shareState;
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117D8C0;
  id v4 = v2;
  uint64_t v5 = UUID.uuidString.getter();
  *(void *)(inited + 56) = &type metadata for String;
  *(void *)(inited + 64) = v1;
  *(void *)(inited + 32) = v5;
  *(void *)(inited + 40) = v6;
  swift_getErrorValue();
  uint64_t v7 = Error.localizedDescription.getter();
  *(void *)(inited + 96) = &type metadata for String;
  *(void *)(inited + 104) = v1;
  *(void *)(inited + 72) = v7;
  *(void *)(inited + 80) = v8;
  uint64_t v9 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v4, (uint64_t)&_mh_execute_header, v9, (uint64_t)"Unsharing board failed. Board UUID: %@. Error: %@.", 50, 2, inited);

  swift_setDeallocating();
  swift_arrayDestroy();

  swift_errorRelease();
  uint64_t v10 = (uint64_t (*)(void))v0[1];
  return v10();
}

uint64_t sub_100EDACC8()
{
  uint64_t v1 = v0[53];
  uint64_t v12 = (void *)v0[49];
  swift_release();
  uint64_t v2 = (void *)static OS_os_log.shareState;
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117D8C0;
  id v4 = v2;
  uint64_t v5 = UUID.uuidString.getter();
  *(void *)(inited + 56) = &type metadata for String;
  *(void *)(inited + 64) = v1;
  *(void *)(inited + 32) = v5;
  *(void *)(inited + 40) = v6;
  swift_getErrorValue();
  uint64_t v7 = Error.localizedDescription.getter();
  *(void *)(inited + 96) = &type metadata for String;
  *(void *)(inited + 104) = v1;
  *(void *)(inited + 72) = v7;
  *(void *)(inited + 80) = v8;
  uint64_t v9 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v4, (uint64_t)&_mh_execute_header, v9, (uint64_t)"Unsharing board failed. Board UUID: %@. Error: %@.", 50, 2, inited);

  swift_setDeallocating();
  swift_arrayDestroy();

  swift_errorRelease();
  uint64_t v10 = (uint64_t (*)(void))v0[1];
  return v10();
}

void sub_100EDAE34()
{
  id v0 = [self standardUserDefaults];
  OS_dispatch_queue.sync<A>(execute:)();
  Class isa = Bool._bridgeToObjectiveC()().super.super.isa;
  [v0 setValue:isa forKey:@"CRLUserHasDataUserDefault"];

  Class v2 = Bool._bridgeToObjectiveC()().super.super.isa;
  [v0 setValue:v2 forKey:@"CRLUserHasUnsyncedDataUserDefault"];
}

void sub_100EDB078()
{
  swift_retain();
  sub_1005057FC(&qword_10167BA20);
  OS_dispatch_queue.sync<A>(execute:)();
  swift_release();
  if (v16 == 1)
  {
    swift_errorRetain();
    if (qword_10166FA60 != -1) {
      swift_once();
    }
    swift_beginAccess();
    id v0 = (void *)static OS_os_log.crlBoardLibrary;
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_10117D8C0;
    swift_getErrorValue();
    id v2 = v0;
    uint64_t v3 = Error.publicDescription.getter(v13, v14);
    uint64_t v5 = v4;
    *(void *)(inited + 56) = &type metadata for String;
    unint64_t v6 = sub_100528BE4();
    *(void *)(inited + 64) = v6;
    *(void *)(inited + 32) = v3;
    *(void *)(inited + 40) = v5;
    swift_getErrorValue();
    uint64_t v7 = Error.fullDescription.getter(v12);
    *(void *)(inited + 96) = &type metadata for String;
    *(void *)(inited + 104) = v6;
    *(void *)(inited + 72) = v7;
    *(void *)(inited + 80) = v8;
    uint64_t v9 = static os_log_type_t.error.getter();
    sub_100BAC898((uint64_t)v2, (uint64_t)&_mh_execute_header, v9, (uint64_t)"Failed to clean up board load marks for app termination. Error: %{public}@ %@", 77, 2, inited);
    sub_100541074(v15, 1);
    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();

    sub_100541074(v15, 1);
  }
  else
  {
    if (qword_10166FA60 != -1) {
      swift_once();
    }
    swift_beginAccess();
    id v10 = (id)static OS_os_log.crlBoardLibrary;
    uint64_t v11 = static os_log_type_t.default.getter();
    sub_100BAC898((uint64_t)v10, (uint64_t)&_mh_execute_header, v11, (uint64_t)"Successfully cleaned up board load marks for app termination.", 61, 2, (uint64_t)_swiftEmptyArrayStorage);
  }
}

uint64_t sub_100EDB324(uint64_t a1)
{
  v2[2] = a1;
  v2[3] = v1;
  type metadata accessor for MainActor();
  v2[4] = static MainActor.shared.getter();
  uint64_t v4 = dispatch thunk of Actor.unownedExecutor.getter();
  v2[5] = v4;
  v2[6] = v3;
  return _swift_task_switch(sub_100EDB3BC, v4, v3);
}

uint64_t sub_100EDB3BC()
{
  uint64_t v1 = *(void *)(v0[3] + OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_boardShareController);
  v0[7] = v1;
  unint64_t v2 = swift_bridgeObjectRetain();
  uint64_t v3 = sub_1008E97DC(v2);
  swift_bridgeObjectRelease();
  if (*(void *)(v3 + 16) && (unint64_t v4 = sub_1009563EC(v0[2]), (v5 & 1) != 0))
  {
    uint64_t v6 = (uint64_t *)(*(void *)(v3 + 56) + 16 * v4);
    uint64_t v7 = *v6;
    uint64_t v8 = v6[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    id v9 = [self mainBundle];
    NSString v10 = String._bridgeToObjectiveC()();
    NSString v11 = String._bridgeToObjectiveC()();
    id v12 = [v9 localizedStringForKey:v10 value:v11 table:0];

    uint64_t v7 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v8 = v13;
  }
  v0[8] = v7;
  v0[9] = v8;
  return _swift_task_switch(sub_100EDB548, v1, 0);
}

uint64_t sub_100EDB548()
{
  uint64_t v1 = v0[9];
  Class v2 = sub_100D3EC2C(v0[2]);
  v0[10] = (uint64_t)v2;
  uint64_t v3 = (void *)swift_task_alloc();
  v0[11] = (uint64_t)v3;
  void *v3 = v0;
  v3[1] = sub_100EDB60C;
  uint64_t v4 = v0[8];
  return sub_100749A00((uint64_t)v2, v4, v1, 0, 0xF000000000000000);
}

uint64_t sub_100EDB60C(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 96) = a1;
  *(void *)(v3 + 104) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v4 = *(void *)(v3 + 56);
    char v5 = sub_100EDB968;
  }
  else
  {
    uint64_t v6 = *(void *)(v3 + 56);

    char v5 = sub_100EDB734;
    uint64_t v4 = v6;
  }
  return _swift_task_switch(v5, v4, 0);
}

uint64_t sub_100EDB734()
{
  uint64_t v1 = (void *)v0[12];
  swift_bridgeObjectRelease();
  id v2 = v1;
  uint64_t v3 = (void *)swift_task_alloc();
  v0[14] = v3;
  void *v3 = v0;
  v3[1] = sub_100EDB7EC;
  uint64_t v4 = v0[2];
  return sub_100ED4738(v4, (uint64_t)v1, 1);
}

uint64_t sub_100EDB7EC()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 120) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 40);
    uint64_t v4 = *(void *)(v2 + 48);
    return _swift_task_switch(sub_100EDBBC0, v3, v4);
  }
  else
  {

    char v5 = (void *)swift_task_alloc();
    *(void *)(v2 + 128) = v5;
    void *v5 = v2;
    v5[1] = sub_100EDBA38;
    return sub_100F34038((uint64_t)&_swiftEmptySetSingleton);
  }
}

uint64_t sub_100EDB968()
{
  swift_bridgeObjectRelease();
  uint64_t v1 = *(void *)(v0 + 40);
  uint64_t v2 = *(void *)(v0 + 48);
  return _swift_task_switch(sub_100EDB9D4, v1, v2);
}

uint64_t sub_100EDB9D4()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100EDBA38()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 48);
  uint64_t v3 = *(void *)(v1 + 40);
  return _swift_task_switch(sub_100EDBB58, v3, v2);
}

uint64_t sub_100EDBB58()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(uint64_t))(v0 + 8);
  uint64_t v2 = *(void *)(v0 + 96);
  return v1(v2);
}

uint64_t sub_100EDBBC0()
{
  uint64_t v1 = *(void **)(v0 + 96);

  swift_release();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_100EDBC30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, char a6)
{
  *(void *)(v7 + 184) = a4;
  *(void *)(v7 + 192) = v6;
  *(unsigned char *)(v7 + 249) = a6;
  *(unsigned char *)(v7 + 248) = a5;
  *(void *)(v7 + 168) = a2;
  *(void *)(v7 + 176) = a3;
  *(void *)(v7 + 160) = a1;
  type metadata accessor for MainActor();
  *(void *)(v7 + 200) = static MainActor.shared.getter();
  uint64_t v9 = dispatch thunk of Actor.unownedExecutor.getter();
  *(void *)(v7 + 208) = v9;
  *(void *)(v7 + 216) = v8;
  return _swift_task_switch(sub_100EDBCD8, v9, v8);
}

uint64_t sub_100EDBCD8()
{
  if (qword_10166FA60 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v1 = (void *)static OS_os_log.crlBoardLibrary;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117E810;
  id v3 = v1;
  uint64_t v4 = UUID.uuidString.getter();
  uint64_t v6 = v5;
  *(void *)(inited + 56) = &type metadata for String;
  *(void *)(inited + 64) = sub_100528BE4();
  *(void *)(inited + 32) = v4;
  *(void *)(inited + 40) = v6;
  uint64_t v7 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v3, (uint64_t)&_mh_execute_header, v7, (uint64_t)"Creating new board with Board UUID (%@).", 40, 2, inited);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v0 + 224) = v8;
  *uint64_t v8 = v0;
  v8[1] = sub_100EDBE8C;
  uint64_t v9 = *(void *)(v0 + 184);
  char v10 = *(unsigned char *)(v0 + 249);
  uint64_t v11 = *(void *)(v0 + 168);
  uint64_t v12 = *(void *)(v0 + 176);
  uint64_t v13 = *(void *)(v0 + 160);
  return sub_100EED748(v13, v11, v12, v9, v10);
}

uint64_t sub_100EDBE8C(uint64_t a1)
{
  uint64_t v3 = *v2;
  uint64_t v4 = *v2;
  *(void *)(v4 + 232) = a1;
  *(void *)(v4 + 240) = v1;
  swift_task_dealloc();
  uint64_t v5 = *(void *)(v3 + 216);
  uint64_t v6 = *(void *)(v3 + 208);
  if (v1) {
    uint64_t v7 = sub_100EDC238;
  }
  else {
    uint64_t v7 = sub_100EDBFD0;
  }
  return _swift_task_switch(v7, v6, v5);
}

uint64_t sub_100EDBFD0()
{
  int v1 = *(unsigned __int8 *)(v0 + 248);
  swift_release();
  if (v1 == 1)
  {
    uint64_t v2 = *(void *)(v0 + 240);
    sub_10073F2AC(*(char **)(v0 + 232));
    if (v2)
    {
      id v4 = (id)static OS_os_log.crlBoardLibrary;
      uint64_t v5 = static os_log_type_t.error.getter();
      sub_100BAC898((uint64_t)v4, (uint64_t)&_mh_execute_header, v5, (uint64_t)"Loading demo contents failed", 28, 2, (uint64_t)_swiftEmptyArrayStorage);

      swift_errorRelease();
    }
    else
    {
      uint64_t v6 = v3;
      uint64_t v7 = *(char **)(v0 + 232);
      [v7 fixUp];
      uint64_t v8 = *(void *)&v7[OBJC_IVAR____TtC8Freeform8CRLBoard_pendingChanges];
      uint64_t v9 = *(NSObject **)(v8 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_accessQueue);
      uint64_t v10 = swift_allocObject();
      *(void *)(v10 + 16) = v6;
      *(void *)(v10 + 24) = v8;
      uint64_t v11 = swift_allocObject();
      *(void *)(v11 + 16) = sub_1006DADEC;
      *(void *)(v11 + 24) = v10;
      *(void *)(v0 + 120) = sub_100659320;
      *(void *)(v0 + 128) = v11;
      *(void *)(v0 + 88) = _NSConcreteStackBlock;
      *(void *)(v0 + 96) = *(void *)"";
      *(void *)(v0 + 104) = sub_1006D9628;
      *(void *)(v0 + 112) = &unk_101533678;
      uint64_t v12 = _Block_copy((const void *)(v0 + 88));
      swift_retain_n();
      swift_retain();
      swift_retain();
      swift_release();
      dispatch_sync(v9, v12);
      _Block_release(v12);
      LOBYTE(v9) = swift_isEscapingClosureAtFileLocation();
      swift_release();
      swift_release();
      uint64_t result = swift_release();
      if (v9)
      {
        __break(1u);
        return result;
      }
      [*(id *)(v0 + 232) savePendingChanges];
      swift_release();
    }
  }
  uint64_t v14 = *(uint64_t (**)(uint64_t))(v0 + 8);
  uint64_t v15 = *(void *)(v0 + 232);
  return v14(v15);
}

uint64_t sub_100EDC238()
{
  swift_release();
  int v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100EDC29C(uint64_t a1)
{
  type metadata accessor for CRLBoardCRDTData(0);
  v1[24] = swift_task_alloc();
  uint64_t v3 = type metadata accessor for UUID();
  v1[25] = v3;
  v1[26] = *(void *)(v3 - 8);
  v1[27] = swift_task_alloc();
  type metadata accessor for CRLBoardIdentifier(0);
  v1[28] = swift_task_alloc();
  v1[29] = type metadata accessor for MainActor();
  v1[30] = static MainActor.shared.getter();
  id v4 = (void *)swift_task_alloc();
  v1[31] = v4;
  *id v4 = v1;
  v4[1] = sub_100EDC40C;
  return sub_100EEBCCC(a1);
}

uint64_t sub_100EDC40C(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 256) = a1;
  *(void *)(v3 + 264) = v1;
  swift_task_dealloc();
  uint64_t v5 = dispatch thunk of Actor.unownedExecutor.getter();
  if (v1) {
    uint64_t v6 = sub_100EDC994;
  }
  else {
    uint64_t v6 = sub_100EDC56C;
  }
  return _swift_task_switch(v6, v5, v4);
}

uint64_t sub_100EDC56C()
{
  id receiver = v0[16].receiver;
  swift_release();
  uint64_t v2 = (void *)*((void *)receiver + 2);
  uint64_t v3 = (objc_class *)type metadata accessor for CRLBoardLibraryHeadlessController();
  uint64_t v4 = (char *)objc_allocWithZone(v3);
  *(int64x2_t *)&v4[OBJC_IVAR____TtC8Freeform33CRLBoardLibraryHeadlessController_offset] = vdupq_n_s64(0x4049000000000000uLL);
  *(void *)&v4[OBJC_IVAR____TtC8Freeform33CRLBoardLibraryHeadlessController_editingCoordinator] = v2;
  id v5 = objc_allocWithZone((Class)CRLCanvas);
  id v6 = v2;
  uint64_t v7 = v4;
  id v8 = [v5 init];
  *(void *)&v7[OBJC_IVAR____TtC8Freeform33CRLBoardLibraryHeadlessController_canvas] = v8;

  v0[11].id receiver = v7;
  v0[11].uint64_t super_class = v3;
  id v9 = [super init];

  [*((id *)receiver + 4) addObject:v9];
  if (qword_10166FA60 != -1) {
    swift_once();
  }
  uint64_t super_class = (uint64_t)v0[13].super_class;
  uint64_t v11 = (void (**)(uint64_t, uint64_t, Class))v0[13].receiver;
  uint64_t v32 = (uint64_t)v0[14].receiver;
  Class v33 = v0[12].super_class;
  uint64_t v36 = (uint64_t)v0[12].receiver;
  swift_beginAccess();
  uint64_t v12 = (void *)static OS_os_log.crlBoardLibrary;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117D8C0;
  id v34 = v12;
  id v35 = v9;
  id v14 = [v35 description];
  uint64_t v15 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v17 = v16;

  *(void *)(inited + 56) = &type metadata for String;
  unint64_t v31 = sub_100528BE4();
  *(void *)(inited + 64) = v31;
  *(void *)(inited + 32) = v15;
  *(void *)(inited + 40) = v17;
  id v18 = *(char **)(*((void *)receiver + 2) + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard);
  uint64_t v19 = OBJC_IVAR____TtC8Freeform8CRLBoard_data;
  uint64_t v20 = *(void *)&v18[OBJC_IVAR____TtC8Freeform8CRLBoard_data] + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
  swift_beginAccess();
  sub_100F38118(v20, v36, type metadata accessor for CRLBoardCRDTData);
  uint64_t v21 = v18;
  swift_retain();
  sub_1005057FC(&qword_101674550);
  CRRegister.wrappedValue.getter();
  sub_100F38180(v36, type metadata accessor for CRLBoardCRDTData);
  swift_release();
  uint64_t v22 = (uint64_t *)(*(void *)&v18[v19] + OBJC_IVAR____TtC8Freeform12CRLBoardData_ownerName);
  uint64_t v23 = *v22;
  unint64_t v24 = v22[1];
  swift_bridgeObjectRetain();
  sub_100753370(super_class, v23, v24, v32);

  v11[2](super_class, v32, v33);
  sub_100F38180(v32, type metadata accessor for CRLBoardIdentifier);
  uint64_t v25 = UUID.uuidString.getter();
  uint64_t v27 = v26;
  ((void (*)(uint64_t, Class))v11[1])(super_class, v33);
  *(void *)(inited + 96) = &type metadata for String;
  *(void *)(inited + 104) = v31;
  *(void *)(inited + 72) = v25;
  *(void *)(inited + 80) = v27;
  uint64_t v28 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v34, (uint64_t)&_mh_execute_header, v28, (uint64_t)"Created headless controller %@ for identifier: %{public}@", 57, 2, inited);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v29 = (uint64_t (*)(id))v0->super_class;
  return v29(v35);
}

uint64_t sub_100EDC994()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100EDCA20(char *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for CRLBoardCRDTData(0);
  __chkstk_darwin(v4 - 8, v5);
  uint64_t v7 = (char *)&v68 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for UUID();
  __chkstk_darwin(v8 - 8, v9);
  uint64_t v11 = (char *)&v68 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for CRLBoardIdentifier(0);
  __chkstk_darwin(v12 - 8, v13);
  uint64_t v15 = (char *)&v68 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v74 = a1;
  uint64_t v16 = *(char **)(*(void *)&a1[OBJC_IVAR____TtC8Freeform33CRLBoardLibraryHeadlessController_editingCoordinator]
                 + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard);
  uint64_t v17 = OBJC_IVAR____TtC8Freeform8CRLBoard_data;
  uint64_t v18 = *(void *)&v16[OBJC_IVAR____TtC8Freeform8CRLBoard_data] + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
  swift_beginAccess();
  sub_100F38118(v18, (uint64_t)v7, type metadata accessor for CRLBoardCRDTData);
  uint64_t v19 = v16;
  swift_retain();
  sub_1005057FC(&qword_101674550);
  CRRegister.wrappedValue.getter();
  sub_100F38180((uint64_t)v7, type metadata accessor for CRLBoardCRDTData);
  swift_release();
  uint64_t v20 = (uint64_t *)(*(void *)&v16[v17] + OBJC_IVAR____TtC8Freeform12CRLBoardData_ownerName);
  uint64_t v22 = *v20;
  unint64_t v21 = v20[1];
  swift_bridgeObjectRetain();
  sub_100753370((uint64_t)v11, v22, v21, (uint64_t)v15);
  uint64_t v23 = (uint64_t *)(v2 + OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_boardInfos);
  swift_beginAccess();
  uint64_t v24 = *v23;
  if (!*(void *)(v24 + 16) || (unint64_t v25 = sub_1009563EC((uint64_t)v15), (v26 & 1) == 0))
  {
    swift_endAccess();
    sub_1006DAC0C();
    swift_allocError();
    *uint64_t v54 = 0;
    swift_willThrow();
LABEL_15:

    return sub_100F38180((uint64_t)v15, type metadata accessor for CRLBoardIdentifier);
  }
  uint64_t v73 = v15;
  uint64_t v27 = *(void *)(*(void *)(v24 + 56) + 8 * v25);
  swift_endAccess();
  uint64_t v28 = *(void **)(v27 + 32);
  swift_retain();
  uint64_t v29 = v28;
  uint64_t v30 = v74;
  if (![v29 containsObject:v74])
  {
    sub_1006DAC0C();
    swift_allocError();
    *uint64_t v55 = 3;
    swift_willThrow();
    swift_release();

    uint64_t v19 = v29;
    uint64_t v15 = v73;
    goto LABEL_15;
  }
  uint64_t v72 = v19;
  [v29 removeObject:v30];
  [*(id *)&v30[OBJC_IVAR____TtC8Freeform33CRLBoardLibraryHeadlessController_canvas] teardown];
  id v31 = *(id *)(v27 + 24);
  id v32 = [v31 allObjects];
  type metadata accessor for CRLiOSBoardViewController();
  unint64_t v33 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v33 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v34 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v34 = *(void *)((v33 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  if (v34) {
    goto LABEL_10;
  }
  id v35 = [v29 allObjects];
  type metadata accessor for CRLBoardLibraryHeadlessController();
  unint64_t v36 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v36 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v37 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v37 = *(void *)((v36 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  if (v37)
  {
LABEL_10:
    uint64_t v70 = v29;
    id v71 = (id)v27;
    if (qword_10166FA60 != -1) {
      swift_once();
    }
    swift_beginAccess();
    uint64_t v38 = (void *)static OS_os_log.crlBoardLibrary;
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_10117E800;
    uint64_t v40 = v30;
    uint64_t v74 = v38;
    id v41 = [v40 description];
    uint64_t v42 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v44 = v43;

    *(void *)(inited + 56) = &type metadata for String;
    unint64_t v45 = sub_100528BE4();
    *(void *)(inited + 64) = v45;
    *(void *)(inited + 32) = v42;
    *(void *)(inited + 40) = v44;
    uint64_t v46 = v70;
    id v47 = [v70 count];
    *(void *)(inited + 96) = &type metadata for Int;
    *(void *)(inited + 104) = &protocol witness table for Int;
    *(void *)(inited + 72) = v47;
    id v48 = [v31 count];
    *(void *)(inited + 136) = &type metadata for Int;
    *(void *)(inited + 144) = &protocol witness table for Int;
    *(void *)(inited + 112) = v48;
    uint64_t v49 = (uint64_t)v73;
    uint64_t v50 = UUID.uuidString.getter();
    *(void *)(inited + 176) = &type metadata for String;
    *(void *)(inited + 184) = v45;
    *(void *)(inited + 152) = v50;
    *(void *)(inited + 160) = v51;
    uint64_t v52 = static os_log_type_t.default.getter();
    uint64_t v29 = v74;
    sub_100BAC898((uint64_t)v74, (uint64_t)&_mh_execute_header, v52, (uint64_t)"Removing %@, %li headless controllers, %li view controllers remain before tearing down BoardInfo for %{public}@", 111, 2, inited);

    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();
    swift_release();
  }
  else
  {
    id v71 = v31;
    if (qword_10166FA60 != -1) {
      swift_once();
    }
    swift_beginAccess();
    uint64_t v56 = (void *)static OS_os_log.crlBoardLibrary;
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t v57 = swift_initStackObject();
    *(_OWORD *)(v57 + 16) = xmmword_10117D8C0;
    uint64_t v70 = v56;
    uint64_t v58 = v30;
    id v59 = [v58 description];
    uint64_t v60 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v69 = v61;

    *(void *)(v57 + 56) = &type metadata for String;
    unint64_t v62 = sub_100528BE4();
    *(void *)(v57 + 64) = v62;
    *(void *)(v57 + 32) = v60;
    uint64_t v74 = (char *)(v57 + 32);
    *(void *)(v57 + 40) = v69;
    uint64_t v63 = (uint64_t)v73;
    uint64_t v64 = UUID.uuidString.getter();
    *(void *)(v57 + 96) = &type metadata for String;
    *(void *)(v57 + 104) = v62;
    *(void *)(v57 + 72) = v64;
    *(void *)(v57 + 80) = v65;
    uint64_t v66 = static os_log_type_t.default.getter();
    uint64_t v67 = v70;
    sub_100BAC898((uint64_t)v70, (uint64_t)&_mh_execute_header, v66, (uint64_t)"Tearing down BoardInfo after removing %@ for %{public}@", 55, 2, v57);
    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();

    sub_100EED08C(v27);
    uint64_t v49 = v63;
    swift_release();
  }
  return sub_100F38180(v49, type metadata accessor for CRLBoardIdentifier);
}

uint64_t sub_100EDD1C4(uint64_t a1, uint64_t a2)
{
  v3[18] = a2;
  v3[19] = v2;
  v3[17] = a1;
  type metadata accessor for MainActor();
  v3[20] = static MainActor.shared.getter();
  uint64_t v5 = dispatch thunk of Actor.unownedExecutor.getter();
  v3[21] = v5;
  v3[22] = v4;
  return _swift_task_switch(sub_100EDD260, v5, v4);
}

uint64_t sub_100EDD260()
{
  uint64_t v1 = v0[18];
  unint64_t v2 = *(void *)(*(void *)(v0[19] + OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_sharedHighlightController)
                 + OBJC_IVAR____TtC8Freeform28CRLSharedHighlightController_sharedHighlights);
  uint64_t v3 = swift_task_alloc();
  *(void *)(v3 + 16) = v1;
  swift_bridgeObjectRetain();
  uint64_t v4 = sub_100ED54F0((uint64_t (*)(id *))sub_1007E7080, v3, v2);
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  if (v4)
  {
    if ((*((unsigned char *)v4 + OBJC_IVAR____TtC8Freeform18CRLSharedHighlight_accepted) & 1) == 0) {
      sub_10053D730(v4);
    }
  }
  uint64_t v5 = (void *)swift_task_alloc();
  v0[23] = v5;
  void *v5 = v0;
  v5[1] = sub_100EDD398;
  uint64_t v6 = v0[18];
  return sub_100EEF868(v6);
}

uint64_t sub_100EDD398(char a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 192) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = *(void *)(v4 + 168);
    uint64_t v6 = *(void *)(v4 + 176);
    uint64_t v7 = sub_100EDD8E8;
  }
  else
  {
    *(unsigned char *)(v4 + 224) = a1 & 1;
    uint64_t v5 = *(void *)(v4 + 168);
    uint64_t v6 = *(void *)(v4 + 176);
    uint64_t v7 = sub_100EDD4C0;
  }
  return _swift_task_switch(v7, v5, v6);
}

uint64_t sub_100EDD4C0()
{
  if (*(unsigned char *)(v0 + 224) == 1)
  {
    swift_release();
    if (qword_10166FBE0 != -1) {
      swift_once();
    }
    swift_beginAccess();
    id v1 = (id)static OS_os_log.shareState;
    uint64_t v2 = static os_log_type_t.default.getter();
    sub_100BAC898((uint64_t)v1, (uint64_t)&_mh_execute_header, v2, (uint64_t)"Found an existing board.", 24, 2, (uint64_t)_swiftEmptyArrayStorage);

    uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
    return v3(0);
  }
  else
  {
    if (qword_10166FBE0 != -1) {
      swift_once();
    }
    swift_beginAccess();
    uint64_t v5 = (void *)static OS_os_log.shareState;
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_10117E810;
    id v7 = v5;
    uint64_t v8 = UUID.uuidString.getter();
    uint64_t v10 = v9;
    *(void *)(inited + 56) = &type metadata for String;
    *(void *)(inited + 64) = sub_100528BE4();
    *(void *)(inited + 32) = v8;
    *(void *)(inited + 40) = v10;
    uint64_t v11 = static os_log_type_t.default.getter();
    sub_100BAC898((uint64_t)v7, (uint64_t)&_mh_execute_header, v11, (uint64_t)"Accepting shared board with UUID: %@.", 37, 2, inited);
    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();

    uint64_t v12 = (void *)swift_task_alloc();
    *(void *)(v0 + 200) = v12;
    void *v12 = v0;
    v12[1] = sub_100EDD754;
    uint64_t v13 = *(void *)(v0 + 136);
    return sub_100F84698(v13);
  }
}

uint64_t sub_100EDD754(uint64_t a1)
{
  uint64_t v4 = *(void **)v2;
  *(void *)(*(void *)v2 + 208) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = v4[21];
    uint64_t v6 = v4[22];
    id v7 = sub_100EDD94C;
  }
  else
  {
    v4[27] = a1;
    uint64_t v5 = v4[21];
    uint64_t v6 = v4[22];
    id v7 = sub_100EDD87C;
  }
  return _swift_task_switch(v7, v5, v6);
}

uint64_t sub_100EDD87C()
{
  uint64_t v1 = *(void *)(v0 + 216);
  swift_release();
  uint64_t v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v2(v1);
}

uint64_t sub_100EDD8E8()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100EDD94C()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

void sub_100EDD9B0(char *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for CRLBoardCRDTData(0);
  __chkstk_darwin(v4 - 8, v5);
  id v7 = (char *)&v71 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for UUID();
  __chkstk_darwin(v8 - 8, v9);
  uint64_t v11 = (char *)&v71 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for CRLBoardIdentifier(0);
  __chkstk_darwin(v12 - 8, v13);
  uint64_t v15 = (char *)&v71 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v77 = a1;
  uint64_t v16 = *(char **)(*(void *)&a1[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_editingCoordinator]
                 + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard);
  uint64_t v17 = OBJC_IVAR____TtC8Freeform8CRLBoard_data;
  uint64_t v18 = *(void *)&v16[OBJC_IVAR____TtC8Freeform8CRLBoard_data] + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
  swift_beginAccess();
  sub_100F38118(v18, (uint64_t)v7, type metadata accessor for CRLBoardCRDTData);
  uint64_t v19 = v16;
  swift_retain();
  sub_1005057FC(&qword_101674550);
  CRRegister.wrappedValue.getter();
  sub_100F38180((uint64_t)v7, type metadata accessor for CRLBoardCRDTData);
  swift_release();
  uint64_t v20 = *(void *)&v16[v17];
  uint64_t v21 = (uint64_t)v15;
  uint64_t v22 = (uint64_t *)(v20 + OBJC_IVAR____TtC8Freeform12CRLBoardData_ownerName);
  uint64_t v24 = *v22;
  unint64_t v23 = v22[1];
  swift_bridgeObjectRetain();
  sub_100753370((uint64_t)v11, v24, v23, (uint64_t)v15);
  unint64_t v25 = (uint64_t *)(v2 + OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_boardInfos);
  swift_beginAccess();
  uint64_t v26 = *v25;
  if (!*(void *)(v26 + 16) || (unint64_t v27 = sub_1009563EC((uint64_t)v15), (v28 & 1) == 0))
  {
    swift_endAccess();
    sub_1006DAC0C();
    swift_allocError();
    *uint64_t v58 = 0;
    swift_willThrow();
LABEL_17:

    sub_100F38180(v21, type metadata accessor for CRLBoardIdentifier);
    return;
  }
  uint64_t v29 = *(id **)(*(void *)(v26 + 56) + 8 * v27);
  swift_endAccess();
  uint64_t v30 = self;
  swift_retain();
  id v31 = [v30 sharedApplication];
  id v32 = [v31 delegate];

  if (!v32)
  {
    __break(1u);
    goto LABEL_25;
  }
  type metadata accessor for CRLiOSAppDelegate();
  uint64_t v33 = *(void *)(swift_dynamicCastClassUnconditional()
                  + OBJC_IVAR____TtC8Freeform17CRLiOSAppDelegate_sharedBoardThumbnailManager);
  swift_retain();
  swift_unknownObjectRelease();
  id v34 = v77;
  if (!v33)
  {
LABEL_25:
    __break(1u);
    return;
  }
  sub_100FD12F8((uint64_t)v15);
  swift_release();
  id v35 = (char *)v29[3];
  if (![v35 containsObject:v34])
  {
    sub_1006DAC0C();
    swift_allocError();
    *id v59 = 2;
    swift_willThrow();
    swift_release();

    uint64_t v19 = v35;
    goto LABEL_17;
  }
  uint64_t v75 = v19;
  [v35 removeObject:v34];
  id v76 = v29[4];
  id v36 = [v35 allObjects];
  type metadata accessor for CRLiOSBoardViewController();
  unint64_t v37 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v37 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v38 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v38 = *(void *)((v37 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  if (v38) {
    goto LABEL_12;
  }
  id v39 = [v76 allObjects];
  type metadata accessor for CRLBoardLibraryHeadlessController();
  unint64_t v40 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v40 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v41 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v41 = *(void *)((v40 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  if (v41)
  {
LABEL_12:
    uint64_t v73 = v21;
    uint64_t v74 = v29;
    if (qword_10166FA60 != -1) {
      swift_once();
    }
    swift_beginAccess();
    uint64_t v42 = (void *)static OS_os_log.crlBoardLibrary;
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_10117E800;
    id v44 = v34;
    id v77 = v42;
    id v45 = [v44 description];
    uint64_t v46 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v48 = v47;

    *(void *)(inited + 56) = &type metadata for String;
    unint64_t v49 = sub_100528BE4();
    *(void *)(inited + 64) = v49;
    *(void *)(inited + 32) = v46;
    *(void *)(inited + 40) = v48;
    id v50 = [v35 count];
    *(void *)(inited + 96) = &type metadata for Int;
    *(void *)(inited + 104) = &protocol witness table for Int;
    *(void *)(inited + 72) = v50;
    id v51 = v76;
    id v52 = [v76 count];
    *(void *)(inited + 136) = &type metadata for Int;
    *(void *)(inited + 144) = &protocol witness table for Int;
    *(void *)(inited + 112) = v52;
    uint64_t v53 = v73;
    uint64_t v54 = UUID.uuidString.getter();
    *(void *)(inited + 176) = &type metadata for String;
    *(void *)(inited + 184) = v49;
    *(void *)(inited + 152) = v54;
    *(void *)(inited + 160) = v55;
    uint64_t v56 = static os_log_type_t.default.getter();
    id v57 = v77;
    sub_100BAC898((uint64_t)v77, (uint64_t)&_mh_execute_header, v56, (uint64_t)"Removing %@, %li view controllers, %li headless controllers remain before tearing down BoardInfo for %{public}@", 111, 2, inited);

    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();
    swift_release();
  }
  else
  {
    uint64_t v74 = (id *)v35;
    if (qword_10166FA60 != -1) {
      swift_once();
    }
    swift_beginAccess();
    uint64_t v60 = (void *)static OS_os_log.crlBoardLibrary;
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t v61 = swift_initStackObject();
    *(_OWORD *)(v61 + 16) = xmmword_10117D8C0;
    id v62 = v60;
    id v63 = v34;
    id v64 = [v63 description];
    uint64_t v65 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v72 = v66;
    uint64_t v73 = v65;

    *(void *)(v61 + 56) = &type metadata for String;
    unint64_t v67 = sub_100528BE4();
    *(void *)(v61 + 64) = v67;
    *(void *)(v61 + 32) = v73;
    id v77 = (id)(v61 + 32);
    *(void *)(v61 + 40) = v72;
    uint64_t v68 = UUID.uuidString.getter();
    *(void *)(v61 + 96) = &type metadata for String;
    *(void *)(v61 + 104) = v67;
    *(void *)(v61 + 72) = v68;
    *(void *)(v61 + 80) = v69;
    uint64_t v70 = static os_log_type_t.default.getter();
    sub_100BAC898((uint64_t)v62, (uint64_t)&_mh_execute_header, v70, (uint64_t)"Tearing down BoardInfo after removing %@ for %{public}@", 55, 2, v61);
    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();

    sub_100EED08C((uint64_t)v29);
    uint64_t v53 = v21;
    swift_release();

    id v57 = v76;
  }

  sub_100F38180(v53, type metadata accessor for CRLBoardIdentifier);
}

uint64_t sub_100EDE1E8@<X0>(int64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X8>)
{
  int64_t v4 = v3;
  int v130 = a2;
  uint64_t v139 = a3;
  uint64_t v146 = 0;
  uint64_t v140 = type metadata accessor for URLQueryItem();
  uint64_t v135 = *(void *)(v140 - 8);
  __chkstk_darwin(v140, v6);
  id v137 = (char *)v120 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1005057FC(&qword_10167BF38);
  __chkstk_darwin(v8 - 8, v9);
  int v128 = (char *)v120 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1005057FC(&qword_10167BF28);
  __chkstk_darwin(v11 - 8, v12);
  uint64_t v143 = (char *)v120 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v145 = type metadata accessor for URLComponents();
  uint64_t v151 = *(void *)(v145 - 8);
  __chkstk_darwin(v145, v14);
  uint64_t v144 = (char *)v120 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_1005057FC((uint64_t *)&unk_1016741E0);
  __chkstk_darwin(v16 - 8, v17);
  uint64_t v19 = (char *)v120 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_1005057FC(&qword_101672E90);
  __chkstk_darwin(v20 - 8, v21);
  uint64_t v153 = (uint64_t)v120 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v154 = type metadata accessor for CRLBoardViewModelMetadata(0);
  uint64_t v147 = *(void *)(v154 - 8);
  __chkstk_darwin(v154, v23);
  uint64_t v129 = (uint64_t)v120 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25, v26);
  unsigned int v142 = (char *)v120 - v27;
  uint64_t v28 = sub_1005057FC(&qword_1016A22D8);
  __chkstk_darwin(v28 - 8, v29);
  id v31 = (char *)v120 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v32, v33);
  id v35 = (char *)v120 - v34;
  uint64_t v36 = sub_1005057FC((uint64_t *)&unk_1016741D0);
  __chkstk_darwin(v36 - 8, v37);
  id v39 = (char *)v120 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = sub_1005057FC(&qword_101672C30);
  __chkstk_darwin(v40 - 8, v41);
  uint64_t v43 = (char *)v120 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = type metadata accessor for CRLBoardIdentifier(0);
  uint64_t v45 = *(void *)(v44 - 8);
  __chkstk_darwin(v44, v46);
  id v150 = (char *)v120 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v48, v49);
  id v51 = (char *)v120 - v50;
  int64_t v155 = a1;
  sub_1006F4C78((uint64_t)v43);
  uint64_t v152 = v45;
  id v52 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v45 + 48);
  uint64_t v138 = v44;
  if (v52(v43, 1, v44) == 1)
  {
    int64_t v149 = v4;
    sub_100522F00((uint64_t)v43, &qword_101672C30);
    uint64_t v54 = v146;
    uint64_t v53 = v147;
  }
  else
  {
    sub_100F37878((uint64_t)v43, (uint64_t)v51, type metadata accessor for CRLBoardIdentifier);
    int64_t v55 = v4;
    uint64_t v56 = v146;
    sub_100ED7F04((uint64_t)v51, (uint64_t)v39);
    if (!v56)
    {
      (*(void (**)(char *, void, uint64_t, uint64_t))(v147 + 56))(v39, 0, 1, v154);
      sub_100522F00((uint64_t)v39, (uint64_t *)&unk_1016741D0);
      uint64_t v118 = (uint64_t)v51;
      goto LABEL_95;
    }
    int64_t v149 = v55;
    swift_errorRelease();
    uint64_t v53 = v147;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v147 + 56))(v39, 1, 1, v154);
    sub_100F38180((uint64_t)v51, type metadata accessor for CRLBoardIdentifier);
    sub_100522F00((uint64_t)v39, (uint64_t *)&unk_1016741D0);
    uint64_t v54 = 0;
  }
  uint64_t v57 = sub_1006F5D00();
  uint64_t v58 = (uint64_t)v142;
  uint64_t v59 = (uint64_t)v150;
  uint64_t v136 = v60;
  if (!v60) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v152 + 56))(v139, 1, 1, v138);
  }
  uint64_t v146 = v54;
  uint64_t v126 = v57;
  int64_t v61 = v149 + OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_storeBoardMetadata;
  swift_beginAccess();
  uint64_t v62 = *(void *)v61;
  uint64_t v63 = *(void *)(*(void *)v61 + 64);
  uint64_t v148 = *(void *)v61 + 64;
  uint64_t v64 = 1 << *(unsigned char *)(v62 + 32);
  uint64_t v65 = -1;
  if (v64 < 64) {
    uint64_t v65 = ~(-1 << v64);
  }
  unint64_t v66 = v65 & v63;
  uint64_t v141 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v151 + 48);
  unint64_t v134 = (void (**)(char *, uint64_t, uint64_t))(v151 + 32);
  unint64_t v133 = (void (**)(char *, uint64_t))(v151 + 8);
  uint64_t v131 = v135 + 16;
  uint64_t v132 = (void (**)(char *, uint64_t))(v135 + 8);
  long long v122 = (void (**)(char *, char *, uint64_t))(v135 + 32);
  uint64_t v124 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v135 + 56);
  uint64_t v123 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v135 + 48);
  int64_t v149 = (unint64_t)(v64 + 63) >> 6;
  int64_t v121 = v149 - 1;
  uint64_t v151 = v62;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v68 = 0;
  if (!v66) {
    goto LABEL_11;
  }
LABEL_9:
  unint64_t v69 = __clz(__rbit64(v66));
  v66 &= v66 - 1;
  int64_t v155 = v68;
  unint64_t v70 = v69 | (v68 << 6);
  while (2)
  {
    uint64_t v71 = v151;
    sub_100F38118(*(void *)(v151 + 48) + *(void *)(v152 + 72) * v70, (uint64_t)v31, type metadata accessor for CRLBoardIdentifier);
    uint64_t v72 = *(void *)(v71 + 56) + *(void *)(v53 + 72) * v70;
    uint64_t v73 = sub_1005057FC(&qword_1016A22C8);
    sub_100F38118(v72, (uint64_t)&v31[*(int *)(v73 + 48)], type metadata accessor for CRLBoardViewModelMetadata);
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v73 - 8) + 56))(v31, 0, 1, v73);
    while (1)
    {
      sub_10051B3EC((uint64_t)v31, (uint64_t)v35, &qword_1016A22D8);
      uint64_t v77 = sub_1005057FC(&qword_1016A22C8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v77 - 8) + 48))(v35, 1, v77) == 1)
      {
        swift_bridgeObjectRelease();
        swift_release();
        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v152 + 56))(v139, 1, 1, v138);
      }
      uint64_t v78 = (uint64_t)&v35[*(int *)(v77 + 48)];
      sub_100F37878((uint64_t)v35, v59, type metadata accessor for CRLBoardIdentifier);
      sub_100F37878(v78, v58, type metadata accessor for CRLBoardViewModelMetadata);
      sub_100522E9C(v58 + *(int *)(v154 + 28), (uint64_t)v19, (uint64_t *)&unk_1016741E0);
      uint64_t v79 = type metadata accessor for CRLBoardViewModelMetadata.ShareMetadata(0);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v79 - 8) + 48))(v19, 1, v79) == 1)
      {
        sub_100522F00((uint64_t)v19, (uint64_t *)&unk_1016741E0);
        goto LABEL_71;
      }
      uint64_t v80 = (uint64_t)&v19[*(int *)(v79 + 28)];
      uint64_t v81 = v153;
      sub_100522E9C(v80, v153, &qword_101672E90);
      sub_100F38180((uint64_t)v19, type metadata accessor for CRLBoardViewModelMetadata.ShareMetadata);
      uint64_t v82 = type metadata accessor for URL();
      uint64_t v83 = *(void *)(v82 - 8);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v83 + 48))(v81, 1, v82) == 1)
      {
        sub_100522F00(v81, &qword_101672E90);
        goto LABEL_70;
      }
      uint64_t v84 = URL.scheme.getter();
      if (v85)
      {
        if (v84 == 0x7370747468 && v85 == 0xE500000000000000)
        {
          swift_bridgeObjectRelease();
LABEL_33:
          uint64_t v87 = v153;
          uint64_t v158 = URL.path.getter();
          uint64_t v159 = v88;
          uint64_t v156 = 0x726F66656572662FLL;
          unint64_t v157 = 0xEA00000000002F6DLL;
          sub_10052E310();
          char v89 = StringProtocol.contains<A>(_:)();
          swift_bridgeObjectRelease();
          if ((v89 & 1) == 0
            || (URL.lastPathComponent.getter(), uint64_t v90 = String.count.getter(), swift_bridgeObjectRelease(), v90 < 16))
          {
            (*(void (**)(uint64_t, uint64_t))(v83 + 8))(v87, v82);
            uint64_t v53 = v147;
            goto LABEL_70;
          }
          uint64_t v96 = URL.lastPathComponent.getter();
          uint64_t v98 = v97;
          goto LABEL_43;
        }
        char v86 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        if (v86) {
          goto LABEL_33;
        }
      }
      uint64_t v91 = (uint64_t)v143;
      URLComponents.init(url:resolvingAgainstBaseURL:)();
      uint64_t v92 = v145;
      if ((*v141)(v91, 1, v145) == 1)
      {
        sub_100522F00(v91, &qword_10167BF28);
        goto LABEL_69;
      }
      uint64_t v93 = v144;
      (*v134)(v144, v91, v92);
      uint64_t v94 = URLComponents.scheme.getter();
      if (!v95)
      {
        (*v133)(v93, v92);
        goto LABEL_68;
      }
      if (v94 == 0x6D726F6665657266 && v95 == 0xE800000000000000)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        char v99 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        if ((v99 & 1) == 0) {
          goto LABEL_67;
        }
      }
      unint64_t v100 = v144;
      uint64_t v101 = URLComponents.host.getter();
      if (!v102)
      {
LABEL_66:
        (*v133)(v100, v145);
        goto LABEL_68;
      }
      if (v101 == 0x6472616F62 && v102 == 0xE500000000000000)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        char v106 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        if ((v106 & 1) == 0)
        {
LABEL_67:
          (*v133)(v144, v145);
          goto LABEL_68;
        }
      }
      unint64_t v100 = v144;
      uint64_t v107 = URLComponents.queryItems.getter();
      if (!v107) {
        goto LABEL_66;
      }
      uint64_t v108 = *(void *)(v107 + 16);
      uint64_t v109 = v140;
      v120[1] = v107;
      if (v108)
      {
        unint64_t v110 = v107 + ((*(unsigned __int8 *)(v135 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v135 + 80));
        uint64_t v125 = *(void *)(v135 + 72);
        uint64_t v127 = *(void (**)(char *, unint64_t, uint64_t))(v135 + 16);
        swift_bridgeObjectRetain();
        unint64_t v111 = v137;
        while (1)
        {
          v127(v111, v110, v109);
          if (URLQueryItem.name.getter() == 0x54676E6972616873 && v112 == 0xEC0000006E656B6FLL)
          {
            swift_bridgeObjectRelease();
            uint64_t v109 = v140;
            goto LABEL_83;
          }
          char v113 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          if (v113) {
            break;
          }
          unint64_t v111 = v137;
          uint64_t v109 = v140;
          (*v132)(v137, v140);
          v110 += v125;
          if (!--v108)
          {
            swift_bridgeObjectRelease();
            goto LABEL_65;
          }
        }
        uint64_t v109 = v140;
        unint64_t v111 = v137;
LABEL_83:
        swift_bridgeObjectRelease();
        uint64_t v115 = (uint64_t)v128;
        (*v122)(v128, v111, v109);
        uint64_t v114 = 0;
      }
      else
      {
LABEL_65:
        uint64_t v114 = 1;
        uint64_t v115 = (uint64_t)v128;
      }
      (*v124)(v115, v114, 1, v109);
      swift_bridgeObjectRelease();
      if ((*v123)(v115, 1, v109) == 1)
      {
        (*v133)(v144, v145);
        sub_100522F00(v115, &qword_10167BF38);
LABEL_88:
        uint64_t v53 = v147;
LABEL_68:
        uint64_t v58 = (uint64_t)v142;
LABEL_69:
        (*(void (**)(uint64_t, uint64_t))(v83 + 8))(v153, v82);
LABEL_70:
        uint64_t v59 = (uint64_t)v150;
        goto LABEL_71;
      }
      uint64_t v116 = v109;
      uint64_t v96 = URLQueryItem.value.getter();
      uint64_t v98 = v117;
      (*v133)(v144, v145);
      (*v132)((char *)v115, v116);
      if (!v98) {
        goto LABEL_88;
      }
      uint64_t v87 = v153;
      uint64_t v58 = (uint64_t)v142;
LABEL_43:
      (*(void (**)(uint64_t, uint64_t))(v83 + 8))(v87, v82);
      if (v96 == v126 && v136 == v98)
      {
        swift_bridgeObjectRelease();
        uint64_t v59 = (uint64_t)v150;
LABEL_53:
        uint64_t v104 = v129;
        sub_100F37878(v58, v129, type metadata accessor for CRLBoardViewModelMetadata);
        if (v130)
        {
          swift_bridgeObjectRelease();
          sub_100F38180(v104, type metadata accessor for CRLBoardViewModelMetadata);
          swift_release();
        }
        else
        {
          char v105 = *(unsigned char *)(v104 + *(int *)(v154 + 32));
          sub_100F38180(v104, type metadata accessor for CRLBoardViewModelMetadata);
          uint64_t v53 = v147;
          if (v105) {
            goto LABEL_72;
          }
          swift_release();
          swift_bridgeObjectRelease();
        }
        uint64_t v118 = v59;
LABEL_95:
        uint64_t v119 = v139;
        sub_100F37878(v118, v139, type metadata accessor for CRLBoardIdentifier);
        return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v152 + 56))(v119, 0, 1, v138);
      }
      char v103 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      uint64_t v59 = (uint64_t)v150;
      if (v103) {
        goto LABEL_53;
      }
      uint64_t v53 = v147;
LABEL_71:
      sub_100F38180(v58, type metadata accessor for CRLBoardViewModelMetadata);
LABEL_72:
      uint64_t result = sub_100F38180(v59, type metadata accessor for CRLBoardIdentifier);
      int64_t v68 = v155;
      if (v66) {
        goto LABEL_9;
      }
LABEL_11:
      int64_t v74 = v68 + 1;
      if (__OFADD__(v68, 1))
      {
        __break(1u);
        goto LABEL_99;
      }
      if (v74 >= v149)
      {
LABEL_21:
        int64_t v155 = v68;
        goto LABEL_22;
      }
      unint64_t v75 = *(void *)(v148 + 8 * v74);
      if (v75) {
        goto LABEL_14;
      }
      v68 += 2;
      if (v74 + 1 < v149) {
        break;
      }
LABEL_91:
      int64_t v155 = v74;
LABEL_22:
      uint64_t v76 = sub_1005057FC(&qword_1016A22C8);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v76 - 8) + 56))(v31, 1, 1, v76);
      unint64_t v66 = 0;
    }
    unint64_t v75 = *(void *)(v148 + 8 * v68);
    if (v75) {
      goto LABEL_17;
    }
    if (v74 + 2 >= v149) {
      goto LABEL_21;
    }
    unint64_t v75 = *(void *)(v148 + 8 * (v74 + 2));
    if (v75)
    {
      v74 += 2;
      goto LABEL_14;
    }
    int64_t v68 = v74 + 3;
    if (v74 + 3 >= v149)
    {
      int64_t v155 = v74 + 2;
      goto LABEL_22;
    }
    unint64_t v75 = *(void *)(v148 + 8 * v68);
    if (v75)
    {
LABEL_17:
      int64_t v74 = v68;
LABEL_14:
      unint64_t v66 = (v75 - 1) & v75;
      unint64_t v70 = __clz(__rbit64(v75)) + (v74 << 6);
      int64_t v155 = v74;
      continue;
    }
    break;
  }
  while (1)
  {
    int64_t v74 = v68 + 1;
    if (__OFADD__(v68, 1)) {
      break;
    }
    if (v74 >= v149)
    {
      int64_t v74 = v121;
      goto LABEL_91;
    }
    unint64_t v75 = *(void *)(v148 + 8 * v74);
    ++v68;
    if (v75) {
      goto LABEL_14;
    }
  }
LABEL_99:
  __break(1u);
  return result;
}

void sub_100EDF4A8(char *a1, uint64_t a2)
{
  uint64_t v77 = a2;
  uint64_t v3 = type metadata accessor for CRLBoardLibraryViewModel.Folder(0);
  __chkstk_darwin(v3 - 8, v4);
  uint64_t v66 = (uint64_t)v65 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for CRLBoardCRDTData(0);
  __chkstk_darwin(v6, v7);
  uint64_t v9 = (char *)v65 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v69 = (void *)type metadata accessor for UUID();
  uint64_t v10 = *(v69 - 1);
  __chkstk_darwin(v69, v11);
  uint64_t v13 = (char *)v65 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for CRLBoardIdentifier(0);
  __chkstk_darwin(v14 - 8, v15);
  uint64_t v17 = (char *)v65 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = OBJC_IVAR____TtC8Freeform8CRLBoard_data;
  uint64_t v19 = *(void *)&a1[OBJC_IVAR____TtC8Freeform8CRLBoard_data] + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
  swift_beginAccess();
  sub_100F38118(v19, (uint64_t)v9, type metadata accessor for CRLBoardCRDTData);
  swift_retain();
  sub_1005057FC(&qword_101674550);
  CRRegister.wrappedValue.getter();
  sub_100F38180((uint64_t)v9, type metadata accessor for CRLBoardCRDTData);
  swift_release();
  int64_t v68 = a1;
  uint64_t v20 = (uint64_t *)(*(void *)&a1[v18] + OBJC_IVAR____TtC8Freeform12CRLBoardData_ownerName);
  uint64_t v22 = *v20;
  unint64_t v21 = v20[1];
  swift_bridgeObjectRetain();
  sub_100753370((uint64_t)v13, v22, v21, (uint64_t)v17);
  uint64_t v23 = &v17[*(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20)];
  if (*(void *)v23) {
    BOOL v24 = 0;
  }
  else {
    BOOL v24 = *((void *)v23 + 1) == 0xE000000000000000;
  }
  if (v24)
  {
    sub_100F38180((uint64_t)v17, type metadata accessor for CRLBoardIdentifier);
  }
  else
  {
    char v25 = _stringCompareWithSmolCheck(_:_:expecting:)();
    sub_100F38180((uint64_t)v17, type metadata accessor for CRLBoardIdentifier);
    if ((v25 & 1) == 0)
    {
      if (qword_10166FA60 != -1) {
        swift_once();
      }
      swift_beginAccess();
      id v26 = (id)static OS_os_log.crlBoardLibrary;
      uint64_t v27 = static os_log_type_t.default.getter();
      sub_100BAC898((uint64_t)v26, (uint64_t)&_mh_execute_header, v27, (uint64_t)"Import board from file failed because .boardIdentifierMustBeOwnerForCreation", 76, 2, (uint64_t)_swiftEmptyArrayStorage);

      sub_1006DAC0C();
      swift_allocError();
      char v29 = 5;
      goto LABEL_14;
    }
  }
  v65[1] = v6;
  uint64_t v30 = v70;
  unint64_t v31 = *(void *)(v70 + OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_storeHierarchySnapshot);
  swift_bridgeObjectRetain();
  uint64_t v32 = v77;
  uint64_t v33 = sub_100DD59E0((uint64_t)v13);
  __chkstk_darwin(v33, v34);
  uint64_t v64 = v13;
  id v35 = (void *)sub_1008E81F4(1, (uint64_t (*)(id))sub_100DBFAAC, (uint64_t)v63, v31);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, void *))(v10 + 8))(v13, v69);
  if (!v35)
  {
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_10117E810;
    uint64_t v47 = v66;
    sub_100F38118(v32, v66, type metadata accessor for CRLBoardLibraryViewModel.Folder);
    uint64_t v48 = sub_100DD4C48();
    uint64_t v50 = v49;
    sub_100F38180(v47, type metadata accessor for CRLBoardLibraryViewModel.Folder);
    *(void *)(inited + 56) = &type metadata for String;
    *(void *)(inited + 64) = sub_100528BE4();
    *(void *)(inited + 32) = v48;
    *(void *)(inited + 40) = v50;
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"addImportedBoard(board:in:)", 27, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLBoardLibrary.swift", 87, 2, 1535, (uint64_t)"Folder not found: %@", 20, 2u, inited);
    LOBYTE(v64) = 2;
    v63[0] = "Folder not found: %@";
    v63[1] = 20;
    sub_1005598CC(inited, (uint64_t)"addImportedBoard(board:in:)", 27, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLBoardLibrary.swift", 87, 2, 1535);
    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();
    sub_1006DAC0C();
    swift_allocError();
    char v29 = 1;
LABEL_14:
    *uint64_t v28 = v29;
    swift_willThrow();
    return;
  }
  unint64_t v69 = v35;
  uint64_t v36 = *(void **)(v30 + OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_store);
  uint64_t v37 = v68;
  uint64_t v38 = *(void *)&v68[v18] + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
  swift_beginAccess();
  sub_100F38118(v38, (uint64_t)v9, type metadata accessor for CRLBoardCRDTData);
  uint64_t v39 = v32;
  id v40 = v36;
  sub_1005057FC(&qword_101674450);
  CRRegister.wrappedValue.getter();
  uint64_t v41 = (uint64_t)aBlock;
  uint64_t v42 = v72;
  sub_100F38180((uint64_t)v9, type metadata accessor for CRLBoardCRDTData);
  uint64_t v43 = v67;
  uint64_t v44 = sub_1006F7638(v41, v42, v39, 0, (uint64_t)v40, 0);
  if (v43)
  {

    swift_bridgeObjectRelease();
LABEL_19:

    return;
  }
  uint64_t v51 = v44;
  uint64_t v52 = v45;
  swift_bridgeObjectRelease();
  if (qword_10166FA60 != -1) {
    swift_once();
  }
  swift_beginAccess();
  id v53 = (id)static OS_os_log.crlBoardLibrary;
  uint64_t v54 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v53, (uint64_t)&_mh_execute_header, v54, (uint64_t)"Import board from file will save to database.", 45, 2, (uint64_t)_swiftEmptyArrayStorage);

  sub_100F359B0((unint64_t *)&qword_10167BA48, (void (*)(uint64_t))type metadata accessor for CRLBoard);
  swift_unknownObjectRetain();
  UUID.init()();
  type metadata accessor for CRLTransactionContext(0);
  uint64_t v55 = swift_allocObject();
  uint64_t v56 = sub_1007940B4((uint64_t)v37, 0, 1, (uint64_t)v13, 1, v55);
  sub_100EBA394((unint64_t)v37, 2, v56);
  sub_100CFE010(v51, v52);
  uint64_t v57 = swift_bridgeObjectRelease();
  (*(void (**)(uint64_t))(*(void *)v56 + 720))(v57);
  swift_release();
  [v37 fixUp];
  uint64_t v58 = *(void *)&v37[OBJC_IVAR____TtC8Freeform8CRLBoard_pendingChanges];
  uint64_t v59 = *(NSObject **)(v58 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_accessQueue);
  uint64_t v60 = swift_allocObject();
  *(void *)(v60 + 16) = v56;
  *(void *)(v60 + 24) = v58;
  uint64_t v61 = swift_allocObject();
  *(void *)(v61 + 16) = sub_100797448;
  *(void *)(v61 + 24) = v60;
  unint64_t v75 = sub_100659320;
  uint64_t v76 = v61;
  aBlock = _NSConcreteStackBlock;
  uint64_t v72 = *(void *)"";
  uint64_t v73 = sub_1006D9628;
  int64_t v74 = &unk_101533848;
  uint64_t v62 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v59, v62);
  _Block_release(v62);
  LOBYTE(v58) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  swift_release();
  if ((v58 & 1) == 0)
  {
    [v37 savePendingChanges];

    swift_release();
    goto LABEL_19;
  }
  __break(1u);
}

uint64_t sub_100EDFE94(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  *(unsigned char *)(v5 + 384) = a4;
  *(void *)(v5 + 184) = a3;
  *(void *)(v5 + 192) = v4;
  *(void *)(v5 + 168) = a1;
  *(void *)(v5 + 176) = a2;
  *(void *)(v5 + 200) = type metadata accessor for CRLBoardCRDTData(0);
  *(void *)(v5 + 208) = swift_task_alloc();
  uint64_t v6 = type metadata accessor for CRLBoardIdentifier(0);
  *(void *)(v5 + 216) = v6;
  *(void *)(v5 + 224) = *(void *)(v6 - 8);
  *(void *)(v5 + 232) = swift_task_alloc();
  sub_1005057FC(&qword_101672C30);
  *(void *)(v5 + 240) = swift_task_alloc();
  type metadata accessor for MainActor();
  *(void *)(v5 + 248) = static MainActor.shared.getter();
  uint64_t v8 = dispatch thunk of Actor.unownedExecutor.getter();
  *(void *)(v5 + 256) = v8;
  *(void *)(v5 + 264) = v7;
  return _swift_task_switch(sub_100EDFFF0, v8, v7);
}

uint64_t sub_100EDFFF0()
{
  uint64_t v1 = *(void **)(v0 + 240);
  uint64_t v2 = *(void *)(v0 + 216);
  uint64_t v3 = *(void *)(v0 + 224);
  int v4 = *(unsigned __int8 *)(v0 + 384);
  uint64_t v5 = *(void *)(v0 + 184);
  uint64_t v6 = *(void *)(v0 + 168);
  uint64_t v7 = *(void *)(v0 + 176);
  uint64_t v8 = *(void **)(*(void *)(v0 + 192) + OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_store);
  *(void *)(v0 + 272) = v8;
  sub_100F38118(v6, (uint64_t)v1, type metadata accessor for CRLBoardIdentifier);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v3 + 56))(v1, 0, 1, v2);
  uint64_t v9 = v8;
  *(void *)(v0 + 280) = sub_1006F7E58(v7, v5, v4, v1, v9);
  *(void *)(v0 + 288) = v10;
  uint64_t v13 = *(void *)(v0 + 192);
  sub_100522F00(*(void *)(v0 + 240), &qword_101672C30);
  uint64_t v14 = (uint64_t *)(v13 + OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_boardInfos);
  swift_beginAccess();
  uint64_t v15 = *v14;
  if (*(void *)(v15 + 16) && (unint64_t v16 = sub_1009563EC(*(void *)(v0 + 168)), (v17 & 1) != 0))
  {
    uint64_t v18 = *(void *)(*(void *)(v15 + 56) + 8 * v16);
    swift_endAccess();
    uint64_t v19 = *(char **)(v18 + 16);
    *(void *)(v0 + 320) = v19;
    uint64_t v20 = OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard;
    unint64_t v21 = *(void **)(*(void *)(*(void *)&v19[OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard]
                               + OBJC_IVAR____TtC8Freeform8CRLBoard_shareState)
                   + 16);
    uint64_t v22 = v19;
    if (v21)
    {
      swift_retain();
      id v23 = v21;
      id v24 = [v23 currentUserParticipant];
      if (v24)
      {
        char v25 = v24;
        id v26 = [v24 permission];

        swift_release();
        if (v26 == (id)2) {
          goto LABEL_10;
        }
      }
      else
      {
        id v33 = [v23 publicPermission];

        swift_release();
        if (v33 == (id)2)
        {
LABEL_10:
          uint64_t v27 = *(void **)(v0 + 272);
          swift_release();
          swift_bridgeObjectRelease();
          sub_100F37568();
          swift_allocError();
          swift_willThrow();

          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          uint64_t v11 = *(uint64_t (**)(void))(v0 + 8);
          return v11();
        }
      }
    }
    uint64_t v60 = v22;
    uint64_t v34 = *(void *)(v0 + 280);
    uint64_t v35 = *(void *)(v0 + 288);
    uint64_t v36 = *(void *)(v0 + 208);
    uint64_t v37 = *(char **)&v19[v20];
    uint64_t v38 = *(void *)&v37[OBJC_IVAR____TtC8Freeform8CRLBoard_data] + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
    swift_beginAccess();
    sub_100F38118(v38, v36, type metadata accessor for CRLBoardCRDTData);
    uint64_t v39 = v37;
    sub_1005057FC(&qword_101674450);
    CRRegister.wrappedValue.getter();
    uint64_t v40 = *(void *)(v0 + 120);
    uint64_t v41 = *(void *)(v0 + 128);
    *(void *)(v0 + 328) = v40;
    *(void *)(v0 + 336) = v41;
    sub_100F38180(v36, type metadata accessor for CRLBoardCRDTData);

    if ((v40 != v34 || v41 != v35) && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
    {
      uint64_t v43 = *(void *)(v0 + 280);
      uint64_t v42 = *(void *)(v0 + 288);
      uint64_t v44 = *(void **)(v0 + 272);
      id v45 = objc_allocWithZone((Class)type metadata accessor for CRLCommandSetBoardTitle());
      id v46 = v44;
      swift_bridgeObjectRetain();
      uint64_t v47 = sub_100F88604(v43, v42, v46, 0);
      uint64_t v48 = *(char **)&v60[OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_commandController];
      uint64_t v49 = (double **)&v48[OBJC_IVAR____TtC8Freeform20CRLCommandController_nonUserCommandQueue];
      swift_beginAccess();
      uint64_t v50 = *v49;
      uint64_t v51 = v48;
      uint64_t v52 = v47;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *uint64_t v49 = v50;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        uint64_t v50 = sub_100F62618(0, *((void *)v50 + 2) + 1, 1, v50);
        *uint64_t v49 = v50;
      }
      unint64_t v55 = *((void *)v50 + 2);
      unint64_t v54 = *((void *)v50 + 3);
      if (v55 >= v54 >> 1)
      {
        uint64_t v50 = sub_100F62618((double *)(v54 > 1), v55 + 1, 1, v50);
        *uint64_t v49 = v50;
      }
      *((void *)v50 + 2) = v55 + 1;
      uint64_t v56 = &v50[2 * v55];
      *((void *)v56 + 4) = v52;
      *((unsigned char *)v56 + 40) = 1;
      swift_endAccess();
      sub_10078F194();

      [*(id *)&v19[v20] savePendingChanges];
    }
    uint64_t v57 = (void *)swift_task_alloc();
    *(void *)(v0 + 344) = v57;
    *uint64_t v57 = v0;
    v57[1] = sub_100EE0C4C;
    uint64_t v58 = *(void *)(v0 + 168);
    return sub_100ED3CA0(v58, 0);
  }
  else
  {
    uint64_t v28 = *(void *)(v0 + 232);
    uint64_t v29 = *(void *)(v0 + 168);
    swift_endAccess();
    sub_100F38118(v29, v28, type metadata accessor for CRLBoardIdentifier);
    uint64_t v59 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_101682FB8 + dword_101682FB8);
    uint64_t v30 = v9;
    unint64_t v31 = (void *)swift_task_alloc();
    *(void *)(v0 + 296) = v31;
    void *v31 = v0;
    v31[1] = sub_100EE0638;
    uint64_t v32 = *(void *)(v0 + 232);
    return v59(v32, (uint64_t)v30, 0);
  }
}

uint64_t sub_100EE0638(uint64_t a1)
{
  int v4 = *(void **)v2;
  *(void *)(*(void *)v2 + 304) = v1;
  swift_task_dealloc();
  if (v1)
  {
    swift_bridgeObjectRelease();
    uint64_t v5 = v4[32];
    uint64_t v6 = v4[33];
    uint64_t v7 = sub_100EE0BB8;
  }
  else
  {
    v4[39] = a1;
    uint64_t v5 = v4[32];
    uint64_t v6 = v4[33];
    uint64_t v7 = sub_100EE0764;
  }
  return _swift_task_switch(v7, v5, v6);
}

uint64_t sub_100EE0764()
{
  uint64_t v1 = v0[38];
  uint64_t v2 = (char *)v0[39];
  v0[40] = v2;
  uint64_t v3 = OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard;
  int v4 = *(void **)(*(void *)(*(void *)&v2[OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard]
                            + OBJC_IVAR____TtC8Freeform8CRLBoard_shareState)
                + 16);
  if (v4)
  {
    swift_retain();
    id v5 = v4;
    id v6 = [v5 currentUserParticipant];
    if (v6)
    {
      uint64_t v7 = v6;
      id v8 = [v6 permission];

      swift_release();
      if (v8 == (id)2)
      {
LABEL_4:
        uint64_t v9 = (void *)v0[34];
        swift_release();
        swift_bridgeObjectRelease();
        sub_100F37568();
        swift_allocError();
        swift_willThrow();

LABEL_11:
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        char v25 = (uint64_t (*)(void))v0[1];
        return v25();
      }
    }
    else
    {
      id v10 = [v5 publicPermission];

      swift_release();
      if (v10 == (id)2) {
        goto LABEL_4;
      }
    }
  }
  uint64_t v11 = v0[35];
  uint64_t v12 = v0[36];
  uint64_t v13 = v0[26];
  uint64_t v39 = v3;
  uint64_t v14 = *(char **)&v2[v3];
  uint64_t v15 = *(void *)&v14[OBJC_IVAR____TtC8Freeform8CRLBoard_data] + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
  swift_beginAccess();
  sub_100F38118(v15, v13, type metadata accessor for CRLBoardCRDTData);
  unint64_t v16 = v14;
  sub_1005057FC(&qword_101674450);
  CRRegister.wrappedValue.getter();
  uint64_t v18 = v0[15];
  uint64_t v17 = v0[16];
  v0[41] = v18;
  v0[42] = v17;
  sub_100F38180(v13, type metadata accessor for CRLBoardCRDTData);

  if ((v18 != v11 || v17 != v12) && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
  {
    uint64_t v20 = v0[35];
    uint64_t v19 = v0[36];
    unint64_t v21 = (void *)v0[34];
    objc_allocWithZone((Class)type metadata accessor for CRLCommandSetBoardTitle());
    id v22 = v21;
    swift_bridgeObjectRetain();
    id v23 = sub_100F88604(v20, v19, v22, 0);
    if (v1)
    {
      id v24 = (void *)v0[34];

      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_11;
    }
    uint64_t v27 = v23;
    uint64_t v28 = *(char **)&v2[OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_commandController];
    uint64_t v29 = (double **)&v28[OBJC_IVAR____TtC8Freeform20CRLCommandController_nonUserCommandQueue];
    swift_beginAccess();
    uint64_t v30 = *v29;
    unint64_t v31 = v28;
    uint64_t v32 = v27;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    id *v29 = v30;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      uint64_t v30 = sub_100F62618(0, *((void *)v30 + 2) + 1, 1, v30);
      id *v29 = v30;
    }
    unint64_t v35 = *((void *)v30 + 2);
    unint64_t v34 = *((void *)v30 + 3);
    if (v35 >= v34 >> 1)
    {
      uint64_t v30 = sub_100F62618((double *)(v34 > 1), v35 + 1, 1, v30);
      id *v29 = v30;
    }
    *((void *)v30 + 2) = v35 + 1;
    uint64_t v36 = &v30[2 * v35];
    *((void *)v36 + 4) = v32;
    *((unsigned char *)v36 + 40) = 1;
    swift_endAccess();
    sub_10078F194();

    [*(id *)&v2[v39] savePendingChanges];
  }
  uint64_t v37 = (void *)swift_task_alloc();
  v0[43] = v37;
  void *v37 = v0;
  v37[1] = sub_100EE0C4C;
  uint64_t v38 = v0[21];
  return sub_100ED3CA0(v38, 0);
}

uint64_t sub_100EE0BB8()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100EE0C4C(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(*v2 + 352) = a1;
  swift_task_dealloc();
  if (v1)
  {
    swift_bridgeObjectRelease();
    swift_errorRelease();
    uint64_t v4 = *(void *)(v3 + 256);
    uint64_t v5 = *(void *)(v3 + 264);
    id v6 = sub_100EE1268;
  }
  else
  {
    uint64_t v4 = *(void *)(v3 + 256);
    uint64_t v5 = *(void *)(v3 + 264);
    id v6 = sub_100EE0D7C;
  }
  return _swift_task_switch(v6, v4, v5);
}

uint64_t sub_100EE0D7C()
{
  uint64_t v1 = *(void **)(v0 + 352);
  if (!v1)
  {
    id v6 = *(void **)(v0 + 320);
    uint64_t v7 = *(void **)(v0 + 272);
    swift_release();

    swift_bridgeObjectRelease();
LABEL_16:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8);
    uint64_t v16 = *(void *)(v0 + 328);
    uint64_t v17 = *(void *)(v0 + 336);
    return v15(v16, v17);
  }
  id v2 = v1;
  static CKShare.SystemFieldKey.title.getter();
  uint64_t v3 = CKRecord.subscript.getter();
  swift_bridgeObjectRelease();

  if (v3)
  {
    *(void *)(v0 + 160) = v3;
    sub_1005057FC((uint64_t *)&unk_101672F30);
    if (swift_dynamicCast())
    {
      if (*(void *)(v0 + 280) == *(void *)(v0 + 136) && *(void *)(v0 + 288) == *(void *)(v0 + 144))
      {
        uint64_t v4 = *(void **)(v0 + 320);
        uint64_t v5 = *(void **)(v0 + 272);
        swift_bridgeObjectRelease();
LABEL_10:

        swift_release();
        swift_bridgeObjectRelease();
        goto LABEL_16;
      }
      char v8 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if (v8)
      {
        uint64_t v4 = *(void **)(v0 + 320);
        uint64_t v5 = *(void **)(v0 + 272);
        goto LABEL_10;
      }
    }
  }
  [v2 copy];
  _bridgeAnyObjectToAny(_:)();
  swift_unknownObjectRelease();
  sub_10050BF48(0, &qword_101672C00);
  if ((swift_dynamicCast() & 1) == 0)
  {
    uint64_t v14 = *(void **)(v0 + 272);

    swift_release();
    swift_bridgeObjectRelease();

    goto LABEL_16;
  }
  uint64_t v9 = *(void **)(v0 + 152);
  *(void *)(v0 + 360) = v9;
  static CKShare.SystemFieldKey.title.getter();
  CKRecordKeyValueSetting.subscript.setter();
  id v10 = v9;
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v0 + 368) = v11;
  void *v11 = v0;
  v11[1] = sub_100EE1078;
  uint64_t v12 = *(void *)(v0 + 168);
  return sub_100ED4738(v12, (uint64_t)v9, 1);
}

uint64_t sub_100EE1078()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 376) = v0;
  swift_task_dealloc();

  if (v0)
  {
    swift_bridgeObjectRelease();
    uint64_t v3 = *(void *)(v2 + 256);
    uint64_t v4 = *(void *)(v2 + 264);
    uint64_t v5 = sub_100EE12FC;
  }
  else
  {
    uint64_t v3 = *(void *)(v2 + 256);
    uint64_t v4 = *(void *)(v2 + 264);
    uint64_t v5 = sub_100EE11BC;
  }
  return _swift_task_switch(v5, v3, v4);
}

uint64_t sub_100EE11BC()
{
  uint64_t v2 = *(void **)(v0 + 352);
  uint64_t v1 = *(void **)(v0 + 360);
  uint64_t v3 = *(void **)(v0 + 272);

  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8);
  uint64_t v5 = *(void *)(v0 + 328);
  uint64_t v6 = *(void *)(v0 + 336);
  return v4(v5, v6);
}

uint64_t sub_100EE1268()
{
  uint64_t v1 = (void *)v0[40];
  uint64_t v2 = (void *)v0[34];
  swift_release();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = (uint64_t (*)(uint64_t, uint64_t))v0[1];
  uint64_t v4 = v0[41];
  uint64_t v5 = v0[42];
  return v3(v4, v5);
}

uint64_t sub_100EE12FC()
{
  uint64_t v2 = *(void **)(v0 + 352);
  uint64_t v1 = *(void **)(v0 + 360);
  uint64_t v3 = *(void **)(v0 + 272);

  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_100EE13A4(uint64_t a1)
{
  v2[2] = a1;
  v2[3] = v1;
  type metadata accessor for MainActor();
  v2[4] = static MainActor.shared.getter();
  uint64_t v4 = dispatch thunk of Actor.unownedExecutor.getter();
  v2[5] = v4;
  v2[6] = v3;
  return _swift_task_switch(sub_100EE143C, v4, v3);
}

uint64_t sub_100EE143C()
{
  *(void *)(v0 + 56) = *(void *)(*(void *)(v0 + 24) + OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_store);
  return _swift_task_switch(sub_100EE146C, 0, 0);
}

uint64_t sub_100EE146C()
{
  uint64_t v1 = v0[7];
  uint64_t v2 = v0[2];
  uint64_t v3 = swift_task_alloc();
  v0[8] = v3;
  *(void *)(v3 + 16) = v1;
  *(void *)(v3 + 24) = v2;
  uint64_t v4 = (void *)swift_task_alloc();
  v0[9] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_100EE156C;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v4, 0, 0, 0x726F766146746573, 0xEF293A5F28657469, sub_100F377A8, v3, (char *)&type metadata for () + 8);
}

uint64_t sub_100EE156C()
{
  *(void *)(*(void *)v1 + 80) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_100EE16A0;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_100EE1688;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100EE1688()
{
  return _swift_task_switch(sub_1007683BC, *(void *)(v0 + 40), *(void *)(v0 + 48));
}

uint64_t sub_100EE16A0()
{
  swift_task_dealloc();
  uint64_t v1 = *(void *)(v0 + 40);
  uint64_t v2 = *(void *)(v0 + 48);
  return _swift_task_switch(sub_10061C6DC, v1, v2);
}

uint64_t sub_100EE1704(uint64_t a1)
{
  v2[2] = a1;
  v2[3] = v1;
  type metadata accessor for MainActor();
  v2[4] = static MainActor.shared.getter();
  uint64_t v4 = dispatch thunk of Actor.unownedExecutor.getter();
  v2[5] = v4;
  v2[6] = v3;
  return _swift_task_switch(sub_100EE179C, v4, v3);
}

uint64_t sub_100EE179C()
{
  *(void *)(v0 + 56) = *(void *)(*(void *)(v0 + 24) + OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_store);
  return _swift_task_switch(sub_100EE17CC, 0, 0);
}

uint64_t sub_100EE17CC()
{
  uint64_t v1 = v0[7];
  uint64_t v2 = v0[2];
  uint64_t v3 = swift_task_alloc();
  v0[8] = v3;
  *(void *)(v3 + 16) = v1;
  *(void *)(v3 + 24) = v2;
  uint64_t v4 = (void *)swift_task_alloc();
  v0[9] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_100EE18C4;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v4, 0, 0, 0xD00000000000001BLL, 0x8000000101297820, sub_100F37558, v3, (char *)&type metadata for () + 8);
}

uint64_t sub_100EE18C4()
{
  *(void *)(*(void *)v1 + 80) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_100EE19F8;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_100EE19E0;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100EE19E0()
{
  return _swift_task_switch(sub_10076EE4C, *(void *)(v0 + 40), *(void *)(v0 + 48));
}

uint64_t sub_100EE19F8()
{
  swift_task_dealloc();
  uint64_t v1 = *(void *)(v0 + 40);
  uint64_t v2 = *(void *)(v0 + 48);
  return _swift_task_switch(sub_100F38994, v1, v2);
}

uint64_t sub_100EE1A5C(uint64_t a1)
{
  v2[2] = a1;
  v2[3] = v1;
  type metadata accessor for MainActor();
  v2[4] = static MainActor.shared.getter();
  uint64_t v4 = dispatch thunk of Actor.unownedExecutor.getter();
  v2[5] = v4;
  v2[6] = v3;
  return _swift_task_switch(sub_100EE1AF4, v4, v3);
}

uint64_t sub_100EE1AF4()
{
  *(void *)(v0 + 56) = *(void *)(*(void *)(v0 + 24) + OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_store);
  return _swift_task_switch(sub_100EE1B24, 0, 0);
}

uint64_t sub_100EE1B24()
{
  uint64_t v1 = v0[7];
  uint64_t v2 = v0[2];
  uint64_t v3 = swift_task_alloc();
  v0[8] = v3;
  *(void *)(v3 + 16) = v1;
  *(void *)(v3 + 24) = v2;
  uint64_t v4 = (void *)swift_task_alloc();
  v0[9] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_100EE18C4;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v4, 0, 0, 0xD00000000000001BLL, 0x8000000101297800, sub_100F37550, v3, (char *)&type metadata for () + 8);
}

uint64_t sub_100EE1C1C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, char a5)
{
  *(unsigned char *)(v6 + 137) = a5;
  *(unsigned char *)(v6 + 136) = a4;
  *(void *)(v6 + 32) = a3;
  *(void *)(v6 + 40) = v5;
  *(void *)(v6 + 16) = a1;
  *(void *)(v6 + 24) = a2;
  type metadata accessor for UUID();
  *(void *)(v6 + 48) = swift_task_alloc();
  type metadata accessor for CRLBoardIdentifier(0);
  *(void *)(v6 + 56) = swift_task_alloc();
  type metadata accessor for MainActor();
  *(void *)(v6 + 64) = static MainActor.shared.getter();
  uint64_t v8 = dispatch thunk of Actor.unownedExecutor.getter();
  *(void *)(v6 + 72) = v8;
  *(void *)(v6 + 80) = v7;
  return _swift_task_switch(sub_100EE1D18, v8, v7);
}

uint64_t sub_100EE1D18()
{
  uint64_t v1 = *(void *)(v0 + 48);
  uint64_t v2 = *(void *)(v0 + 56);
  UUID.init()();
  sub_100753370(v1, 0, 0xE000000000000000, v2);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 88) = v3;
  void *v3 = v0;
  v3[1] = sub_100EE1DDC;
  uint64_t v4 = *(void *)(v0 + 56);
  char v5 = *(unsigned char *)(v0 + 137);
  char v6 = *(unsigned char *)(v0 + 136);
  uint64_t v7 = *(void *)(v0 + 32);
  uint64_t v8 = *(void *)(v0 + 16);
  uint64_t v9 = *(void *)(v0 + 24);
  return sub_100EDBC30(v4, v8, v9, v7, v6, v5);
}

uint64_t sub_100EE1DDC(void *a1)
{
  uint64_t v4 = (void *)*v2;
  v4[12] = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = v4[9];
    uint64_t v6 = v4[10];
    return _swift_task_switch(sub_100EE227C, v5, v6);
  }
  else
  {

    uint64_t v7 = (void *)swift_task_alloc();
    v4[13] = v7;
    *uint64_t v7 = v4;
    v7[1] = sub_100EE1F64;
    return sub_100F34038((uint64_t)&_swiftEmptySetSingleton);
  }
}

uint64_t sub_100EE1F64()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *v0;
  swift_task_dealloc();
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 112) = v3;
  void *v3 = v2;
  v3[1] = sub_100EE20BC;
  uint64_t v4 = *(void *)(v1 + 56);
  return sub_100EEC738(v4);
}

uint64_t sub_100EE20BC(uint64_t a1)
{
  uint64_t v4 = *(void **)v2;
  *(void *)(*(void *)v2 + 120) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = v4[9];
    uint64_t v6 = v4[10];
    uint64_t v7 = sub_100EE2318;
  }
  else
  {
    v4[16] = a1;
    uint64_t v5 = v4[9];
    uint64_t v6 = v4[10];
    uint64_t v7 = sub_100EE21E4;
  }
  return _swift_task_switch(v7, v5, v6);
}

uint64_t sub_100EE21E4()
{
  uint64_t v1 = v0[7];
  swift_release();
  sub_100F38180(v1, type metadata accessor for CRLBoardIdentifier);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = (uint64_t (*)(uint64_t))v0[1];
  uint64_t v3 = v0[16];
  return v2(v3);
}

uint64_t sub_100EE227C()
{
  uint64_t v1 = *(void *)(v0 + 56);
  swift_release();
  sub_100F38180(v1, type metadata accessor for CRLBoardIdentifier);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_100EE2318()
{
  uint64_t v1 = *(void *)(v0 + 56);
  swift_release();
  sub_100F38180(v1, type metadata accessor for CRLBoardIdentifier);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_100EE23B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[5] = a3;
  v4[6] = v3;
  v4[3] = a1;
  long long v4[4] = a2;
  v4[7] = swift_getObjectType();
  type metadata accessor for MainActor();
  v4[8] = static MainActor.shared.getter();
  uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
  v4[9] = v6;
  void v4[10] = v5;
  return _swift_task_switch(sub_100EE245C, v6, v5);
}

uint64_t sub_100EE245C()
{
  uint64_t v5 = v0;
  uint64_t v1 = (void *)v0[6];
  v4[3] = v0[7];
  long long v4[4] = &off_101532E40;
  v4[0] = v1;
  type metadata accessor for CRLBoardSearchHelper();
  swift_allocObject();
  id v2 = v1;
  v0[11] = sub_1007A0CB0((uint64_t)v4);
  return _swift_task_switch(sub_100EE2500, 0, 0);
}

uint64_t sub_100EE2500()
{
  uint64_t v1 = *(void *)(v0 + 88);
  uint64_t v2 = *(void *)(v0 + 40);
  long long v7 = *(_OWORD *)(v0 + 24);
  uint64_t v3 = swift_task_alloc();
  *(void *)(v0 + 96) = v3;
  *(void *)(v3 + 16) = v1;
  *(_OWORD *)(v3 + 24) = v7;
  *(void *)(v3 + 40) = v2;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 104) = v4;
  uint64_t v5 = sub_1005057FC(&qword_1016A2610);
  *uint64_t v4 = v0;
  v4[1] = sub_100EE2624;
  return withCheckedContinuation<A>(isolation:function:_:)(v0 + 16, 0, 0, 0xD000000000000024, 0x80000001012988D0, sub_100F38464, v3, v5);
}

uint64_t sub_100EE2624()
{
  swift_task_dealloc();
  swift_task_dealloc();
  return _swift_task_switch(sub_100EE273C, 0, 0);
}

uint64_t sub_100EE273C()
{
  swift_release();
  v0[14] = v0[2];
  uint64_t v1 = v0[9];
  uint64_t v2 = v0[10];
  return _swift_task_switch(sub_100EE27A8, v1, v2);
}

uint64_t sub_100EE27A8()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(uint64_t))(v0 + 8);
  uint64_t v2 = *(void *)(v0 + 112);
  return v1(v2);
}

uint64_t sub_100EE280C(uint64_t a1)
{
  v2[135] = v1;
  v2[134] = a1;
  uint64_t v3 = type metadata accessor for UUID();
  v2[136] = v3;
  v2[137] = *(void *)(v3 - 8);
  v2[138] = swift_task_alloc();
  sub_1005057FC(&qword_10169B550);
  v2[139] = swift_task_alloc();
  v2[140] = swift_task_alloc();
  v2[141] = *(void *)(type metadata accessor for CRLBoardIdentifier(0) - 8);
  v2[142] = swift_task_alloc();
  v2[143] = swift_task_alloc();
  v2[144] = swift_task_alloc();
  v2[145] = type metadata accessor for MainActor();
  v2[146] = static MainActor.shared.getter();
  uint64_t v5 = dispatch thunk of Actor.unownedExecutor.getter();
  v2[147] = v5;
  v2[148] = v4;
  return _swift_task_switch(sub_100EE29C0, v5, v4);
}

uint64_t sub_100EE29C0()
{
  uint64_t v1 = v0[134];
  int64_t v2 = *(void *)(v1 + 16);
  uint64_t v3 = _swiftEmptyArrayStorage;
  if (v2)
  {
    uint64_t v33 = v0[141];
    sub_1006BB504(0, v2, 0);
    uint64_t v0 = v36;
    uint64_t v4 = sub_100F27B80(v1);
    uint64_t v6 = v5;
    char v8 = v7 & 1;
    uint64_t v34 = v1;
    uint64_t v35 = v1 + 56;
    while ((v4 & 0x8000000000000000) == 0 && v4 < 1 << *(unsigned char *)(v1 + 32))
    {
      if (((*(void *)(v35 + (((unint64_t)v4 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v4) & 1) == 0) {
        goto LABEL_18;
      }
      if (*(_DWORD *)(v1 + 36) != v6) {
        goto LABEL_19;
      }
      uint64_t v9 = v0[144];
      uint64_t v10 = v0[143];
      sub_100F38118(*(void *)(v1 + 48) + *(void *)(v33 + 72) * v4, v9, type metadata accessor for CRLBoardIdentifier);
      sub_100F37878(v9, v10, type metadata accessor for CRLBoardIdentifier);
      uint64_t v11 = UUID.uuidString.getter();
      uint64_t v13 = v12;
      sub_100F38180(v10, type metadata accessor for CRLBoardIdentifier);
      uint64_t v3 = (double *)v37;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1006BB504(0, *(void *)(v37 + 16) + 1, 1);
        uint64_t v3 = (double *)v37;
      }
      unint64_t v15 = *((void *)v3 + 2);
      unint64_t v14 = *((void *)v3 + 3);
      uint64_t v0 = v36;
      if (v15 >= v14 >> 1)
      {
        sub_1006BB504(v14 > 1, v15 + 1, 1);
        uint64_t v0 = v36;
        uint64_t v3 = (double *)v37;
      }
      uint64_t v16 = v0[134];
      *((void *)v3 + 2) = v15 + 1;
      uint64_t v17 = &v3[2 * v15];
      *((void *)v17 + 4) = v11;
      *((void *)v17 + 5) = v13;
      uint64_t v18 = sub_100666C8C(v4, v6, v8 & 1, v16);
      uint64_t v4 = v18;
      uint64_t v6 = v19;
      char v8 = v20 & 1;
      --v2;
      uint64_t v1 = v34;
      if (!v2)
      {
        sub_10056A4C4(v18, v19, v20 & 1);
        goto LABEL_13;
      }
    }
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
  }
  else
  {
LABEL_13:
    if (qword_10166FA60 == -1) {
      goto LABEL_14;
    }
  }
  swift_once();
LABEL_14:
  swift_beginAccess();
  unint64_t v21 = (void *)static OS_os_log.crlBoardLibrary;
  v0[149] = sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117D8C0;
  uint64_t v23 = *((void *)v3 + 2);
  *(void *)(inited + 56) = &type metadata for Int;
  *(void *)(inited + 64) = &protocol witness table for Int;
  *(void *)(inited + 32) = v23;
  v0[132] = v3;
  id v24 = v21;
  sub_1005057FC((uint64_t *)&unk_1016773F0);
  sub_100523288((unint64_t *)&qword_101672620, (uint64_t *)&unk_1016773F0);
  uint64_t v25 = BidirectionalCollection<>.joined(separator:)();
  uint64_t v27 = v26;
  swift_bridgeObjectRelease();
  *(void *)(inited + 96) = &type metadata for String;
  unint64_t v28 = sub_100528BE4();
  v0[150] = v28;
  *(void *)(inited + 104) = v28;
  *(void *)(inited + 72) = v25;
  *(void *)(inited + 80) = v27;
  uint64_t v29 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v24, (uint64_t)&_mh_execute_header, v29, (uint64_t)"Deleting %d board(s): %@", 24, 2, inited);
  swift_setDeallocating();
  v0[151] = sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  sub_100EF7EC4();
  v0[129] = &_swiftEmptySetSingleton;
  v0[127] = &_swiftEmptySetSingleton;
  v0[130] = &_swiftEmptySetSingleton;
  v0[152] = static MainActor.shared.getter();
  uint64_t v31 = dispatch thunk of Actor.unownedExecutor.getter();
  v0[153] = v31;
  v0[154] = v30;
  return _swift_task_switch(sub_100EE2DE4, v31, v30);
}

uint64_t sub_100EE2DE4()
{
  uint64_t v1 = sub_1005057FC(&qword_10169B558);
  long long v7 = *(_OWORD *)(v0 + 1072);
  uint64_t v2 = static MainActor.shared.getter();
  *(void *)(v0 + 1240) = v2;
  uint64_t v3 = swift_task_alloc();
  *(void *)(v0 + 1248) = v3;
  *(_OWORD *)(v3 + 16) = v7;
  uint64_t v4 = sub_1005057FC(&qword_10169B568);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v0 + 1256) = v5;
  void *v5 = v0;
  v5[1] = sub_100EE2F18;
  return withTaskGroup<A, B>(of:returning:isolation:body:)(v0 + 1048, v1, v4, v2, &protocol witness table for MainActor, &unk_10169B560, v3, v1);
}

uint64_t sub_100EE2F18()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_release();
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 1232);
  uint64_t v3 = *(void *)(v1 + 1224);
  return _swift_task_switch(sub_100EE3078, v3, v2);
}

uint64_t sub_100EE3078()
{
  swift_release();
  v0[158] = v0[131];
  uint64_t v1 = v0[148];
  uint64_t v2 = v0[147];
  return _swift_task_switch(sub_100EE30E8, v2, v1);
}

uint64_t sub_100EE30E8()
{
  int64_t v1 = 0;
  uint64_t v2 = *(void *)(v0 + 1264);
  char v3 = *(unsigned char *)(v2 + 32);
  *(unsigned char *)(v0 + 1608) = v3;
  uint64_t v4 = 1 << v3;
  uint64_t v5 = *(void *)(v2 + 64);
  if (v4 < 64) {
    uint64_t v6 = ~(-1 << v4);
  }
  else {
    uint64_t v6 = -1;
  }
  unint64_t v7 = v6 & v5;
  *(void *)(v0 + 1272) = OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_isNetworkReachable;
  *(void *)(v0 + 1280) = OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_boardShareController;
  *(void *)(v0 + 1288) = NSInternalInconsistencyException;
  while (1)
  {
    if (v7)
    {
      uint64_t v18 = (v7 - 1) & v7;
      unint64_t v19 = __clz(__rbit64(v7)) | (v1 << 6);
      uint64_t v20 = *(void *)(v0 + 1264);
LABEL_9:
      uint64_t v21 = *(void *)(v0 + 1112);
      sub_100F38118(*(void *)(v20 + 48) + *(void *)(*(void *)(v0 + 1128) + 72) * v19, v21, type metadata accessor for CRLBoardIdentifier);
      uint64_t v22 = *(void *)(v20 + 56);
      uint64_t v23 = sub_1005057FC(&qword_10169B570);
      *(unsigned char *)(v21 + *(int *)(v23 + 48)) = *(unsigned char *)(v22 + v19);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v21, 0, 1, v23);
      goto LABEL_28;
    }
    int64_t v24 = v1 + 1;
    if (__OFADD__(v1, 1))
    {
      __break(1u);
LABEL_45:
      __break(1u);
      JUMPOUT(0x100EE3A28);
    }
    int64_t v25 = (unint64_t)((1 << *(unsigned char *)(v0 + 1608)) + 63) >> 6;
    if (v24 < v25)
    {
      uint64_t v20 = *(void *)(v0 + 1264);
      uint64_t v26 = v20 + 64;
      unint64_t v27 = *(void *)(v20 + 64 + 8 * v24);
      if (v27) {
        goto LABEL_13;
      }
      int64_t v28 = v1 + 2;
      ++v1;
      if (v24 + 1 < v25)
      {
        unint64_t v27 = *(void *)(v26 + 8 * v28);
        if (v27) {
          goto LABEL_16;
        }
        int64_t v1 = v24 + 1;
        if (v24 + 2 < v25)
        {
          unint64_t v27 = *(void *)(v26 + 8 * (v24 + 2));
          if (v27)
          {
            v24 += 2;
            goto LABEL_13;
          }
          int64_t v28 = v24 + 3;
          int64_t v1 = v24 + 2;
          if (v24 + 3 < v25)
          {
            unint64_t v27 = *(void *)(v26 + 8 * v28);
            if (v27)
            {
LABEL_16:
              int64_t v24 = v28;
LABEL_13:
              uint64_t v18 = (v27 - 1) & v27;
              unint64_t v19 = __clz(__rbit64(v27)) + (v24 << 6);
              int64_t v1 = v24;
              goto LABEL_9;
            }
            while (1)
            {
              int64_t v24 = v28 + 1;
              if (__OFADD__(v28, 1)) {
                goto LABEL_45;
              }
              if (v24 >= v25) {
                break;
              }
              unint64_t v27 = *(void *)(v26 + 8 * v24);
              ++v28;
              if (v27) {
                goto LABEL_13;
              }
            }
            int64_t v1 = v25 - 1;
          }
        }
      }
    }
    uint64_t v29 = *(void *)(v0 + 1112);
    uint64_t v30 = sub_1005057FC(&qword_10169B570);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(v29, 1, 1, v30);
    uint64_t v18 = 0;
LABEL_28:
    *(void *)(v0 + 1304) = v18;
    *(void *)(v0 + 1296) = v1;
    uint64_t v31 = *(void *)(v0 + 1120);
    sub_10051B3EC(*(void *)(v0 + 1112), v31, &qword_10169B550);
    uint64_t v32 = sub_1005057FC(&qword_10169B570);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 48))(v31, 1, v32) == 1) {
      break;
    }
    uint64_t v33 = *(void *)(v0 + 1120);
    uint64_t v34 = *(unsigned __int8 *)(v33 + *(int *)(v32 + 48));
    sub_100F37878(v33, *(void *)(v0 + 1136), type metadata accessor for CRLBoardIdentifier);
    switch(v34)
    {
      case 2:
        uint64_t v62 = *(void *)(v0 + 1152);
        uint64_t v63 = *(void *)(v0 + 1144);
        sub_100F38118(*(void *)(v0 + 1136), v63, type metadata accessor for CRLBoardIdentifier);
        sub_100CB7090(v62, v63);
        sub_100F38180(v62, type metadata accessor for CRLBoardIdentifier);
        *(void *)(v0 + 1312) = static MainActor.shared.getter();
        uint64_t v64 = dispatch thunk of Actor.unownedExecutor.getter();
        uint64_t v61 = v65;
        *(void *)(v0 + 1320) = v64;
        *(void *)(v0 + 1328) = v65;
        uint64_t v66 = sub_100EE3A3C;
        goto LABEL_39;
      case 3:
        uint64_t v67 = *(void *)(v0 + 1152);
        uint64_t v68 = *(void *)(v0 + 1144);
        sub_100F38118(*(void *)(v0 + 1136), v68, type metadata accessor for CRLBoardIdentifier);
        sub_100CB7090(v67, v68);
        sub_100F38180(v67, type metadata accessor for CRLBoardIdentifier);
        *(void *)(v0 + 1408) = static MainActor.shared.getter();
        uint64_t v64 = dispatch thunk of Actor.unownedExecutor.getter();
        uint64_t v61 = v69;
        *(void *)(v0 + 1416) = v64;
        *(void *)(v0 + 1424) = v69;
        uint64_t v66 = sub_100EE5650;
LABEL_39:
        uint64_t v52 = v66;
        uint64_t v60 = v64;
        goto LABEL_40;
      case 4:
        uint64_t v72 = *(void *)(v0 + 1200);
        uint64_t v73 = *(void **)(v0 + 1288);
        sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"deleteBoards(boardIdentifiers:)", 31, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLBoardLibrary.swift", 87, 2, 1346, (uint64_t)"Do not call method", 18, 2u, (uint64_t)_swiftEmptyArrayStorage);
        LOBYTE(v71) = 2;
        sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"deleteBoards(boardIdentifiers:)", 31, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLBoardLibrary.swift", 87, 2, 1346);
        uint64_t v35 = swift_allocObject();
        *(_OWORD *)(v35 + 16) = xmmword_10117D8C0;
        id v36 = v73;
        uint64_t v37 = StaticString.description.getter();
        *(void *)(v35 + 56) = &type metadata for String;
        *(void *)(v35 + 64) = v72;
        *(void *)(v35 + 32) = v37;
        *(void *)(v35 + 40) = v38;
        uint64_t v39 = StaticString.description.getter();
        *(void *)(v35 + 96) = &type metadata for String;
        *(void *)(v35 + 104) = v72;
        *(void *)(v35 + 72) = v39;
        *(void *)(v35 + 80) = v40;
        String.init(format:_:)();
        id v41 = objc_allocWithZone((Class)NSException);
        NSString v42 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        id v43 = [v41 initWithName:v36 reason:v42 userInfo:0 Do not call method:18 v71];

        [v43 raise];
        goto LABEL_6;
      default:
        uint64_t v8 = *(void *)(v0 + 1200);
        uint64_t v9 = *(void *)(v0 + 1152);
        uint64_t v10 = *(void *)(v0 + 1144);
        uint64_t v11 = *(void *)(v0 + 1136);
        uint64_t v12 = (void *)static OS_os_log.crlBoardLibrary;
        uint64_t inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = xmmword_10117E810;
        id v14 = v12;
        uint64_t v15 = UUID.uuidString.getter();
        *(void *)(inited + 56) = &type metadata for String;
        *(void *)(inited + 64) = v8;
        *(void *)(inited + 32) = v15;
        *(void *)(inited + 40) = v16;
        uint64_t v17 = static os_log_type_t.default.getter();
        sub_100BAC898((uint64_t)v14, (uint64_t)&_mh_execute_header, v17, (uint64_t)"Local deletion for: %{public}@", 30, 2, inited);
        swift_setDeallocating();
        swift_arrayDestroy();

        sub_100F38118(v11, v10, type metadata accessor for CRLBoardIdentifier);
        sub_100CB7090(v9, v10);
        sub_100F38180(v9, type metadata accessor for CRLBoardIdentifier);
LABEL_6:
        sub_100F38180(*(void *)(v0 + 1136), type metadata accessor for CRLBoardIdentifier);
        unint64_t v7 = *(void *)(v0 + 1304);
        int64_t v1 = *(void *)(v0 + 1296);
        break;
    }
  }
  swift_release();
  uint64_t v44 = *(void *)(v0 + 1032);
  *(void *)(v0 + 1456) = v44;
  uint64_t v45 = *(void *)(v44 + 16);
  if (v45)
  {
    uint64_t v46 = *(void *)(v0 + 1080);
    uint64_t v47 = (void *)static OS_os_log.crlBoardLibrary;
    uint64_t v48 = swift_initStackObject();
    *(_OWORD *)(v48 + 16) = xmmword_10117E810;
    *(void *)(v48 + 56) = &type metadata for Int;
    *(void *)(v48 + 64) = &protocol witness table for Int;
    *(void *)(v48 + 32) = v45;
    id v49 = v47;
    uint64_t v50 = static os_log_type_t.default.getter();
    sub_100BAC898((uint64_t)v49, (uint64_t)&_mh_execute_header, v50, (uint64_t)"Encountered error while deleting %d board(s). Adding them to the list of boards to retry deletion.", 98, 2, v48);
    swift_setDeallocating();
    swift_arrayDestroy();

    *(void *)(v0 + 1464) = *(void *)(v46 + OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_store);
    uint64_t v51 = sub_100EE6EE8;
    goto LABEL_33;
  }
  uint64_t v74 = *(void *)(v0 + 1072);
  swift_bridgeObjectRetain();
  uint64_t v53 = swift_bridgeObjectRetain();
  sub_101029A98(v53);
  swift_bridgeObjectRelease();
  *(void *)(v0 + 1496) = v74;
  uint64_t v54 = *(void *)(v74 + 16);
  if (v54)
  {
    uint64_t v55 = *(void *)(v0 + 1080);
    uint64_t v56 = (void *)static OS_os_log.crlBoardLibrary;
    uint64_t v57 = swift_initStackObject();
    *(_OWORD *)(v57 + 16) = xmmword_10117E810;
    *(void *)(v57 + 56) = &type metadata for Int;
    *(void *)(v57 + 64) = &protocol witness table for Int;
    *(void *)(v57 + 32) = v54;
    id v58 = v56;
    uint64_t v59 = static os_log_type_t.default.getter();
    sub_100BAC898((uint64_t)v58, (uint64_t)&_mh_execute_header, v59, (uint64_t)"Successfully deleted %d boards", 30, 2, v57);
    swift_setDeallocating();
    swift_arrayDestroy();

    *(void *)(v0 + 1504) = *(void *)(v55 + OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_store);
    uint64_t v52 = sub_100EE7494;
  }
  else
  {
    swift_bridgeObjectRelease();
    *(void *)(v0 + 1536) = *(void *)(*(void *)(v0 + 1080) + OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_store);
    *(void *)(v0 + 1544) = *(void *)(v0 + 1016);
    uint64_t v51 = sub_100EE78E8;
LABEL_33:
    swift_bridgeObjectRetain();
    uint64_t v52 = v51;
  }
  uint64_t v60 = 0;
  uint64_t v61 = 0;
LABEL_40:
  return _swift_task_switch(v52, v60, v61);
}

uint64_t sub_100EE3A3C()
{
  if (*(unsigned char *)(v0[135] + v0[159]) == 1)
  {
    v0[167] = static MainActor.shared.getter();
    v0[168] = static MainActor.shared.getter();
    uint64_t v1 = dispatch thunk of Actor.unownedExecutor.getter();
    uint64_t v3 = v2;
    v0[169] = v1;
    v0[170] = v2;
    uint64_t v4 = sub_100EE3B0C;
    uint64_t v5 = v1;
  }
  else
  {
    swift_release();
    uint64_t v3 = v0[148];
    uint64_t v5 = v0[147];
    uint64_t v4 = sub_100F38904;
  }
  return _swift_task_switch(v4, v5, v3);
}

uint64_t sub_100EE3B0C()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 1368) = v1;
  void *v1 = v0;
  v1[1] = sub_100EE3BAC;
  uint64_t v2 = *(void *)(v0 + 1136);
  return sub_100F8498C(v2);
}

uint64_t sub_100EE3BAC()
{
  uint64_t v2 = (void *)*v1;
  v2[172] = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = v2[170];
    uint64_t v4 = v2[169];
    return _swift_task_switch(sub_100EE3E64, v4, v3);
  }
  else
  {
    uint64_t v5 = (void *)swift_task_alloc();
    v2[173] = v5;
    void *v5 = v2;
    v5[1] = sub_100EE3D28;
    uint64_t v6 = v2[142];
    return sub_100EEFFDC(v6, 0, 1);
  }
}

uint64_t sub_100EE3D28()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 1392) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 1360);
  uint64_t v4 = *(void *)(v2 + 1352);
  if (v0) {
    uint64_t v5 = sub_100EE49D4;
  }
  else {
    uint64_t v5 = sub_100EE3EF4;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_100EE3E64()
{
  *(void *)(v0 + 1400) = *(void *)(v0 + 1376);
  swift_release();
  uint64_t v2 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_100EE4A64, v2, v1);
}

uint64_t sub_100EE3EF4()
{
  swift_release();
  uint64_t v1 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_100EE3F7C, v1, v0);
}

uint64_t sub_100EE3F7C()
{
  swift_release();
  uint64_t v1 = *(void *)(v0 + 1328);
  uint64_t v2 = *(void *)(v0 + 1320);
  return _swift_task_switch(sub_100EE3FE4, v2, v1);
}

uint64_t sub_100EE3FE4()
{
  swift_release();
  uint64_t v1 = *(void *)(v0 + 1184);
  uint64_t v2 = *(void *)(v0 + 1176);
  return _swift_task_switch(sub_100EE404C, v2, v1);
}

uint64_t sub_100EE404C()
{
  uint64_t v1 = *(void *)(v0 + 1200);
  uint64_t v2 = (void *)static OS_os_log.crlBoardLibrary;
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117E810;
  id v4 = v2;
  uint64_t v5 = UUID.uuidString.getter();
  *(void *)(inited + 56) = &type metadata for String;
  *(void *)(inited + 64) = v1;
  *(void *)(inited + 32) = v5;
  *(void *)(inited + 40) = v6;
  uint64_t v7 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v4, (uint64_t)&_mh_execute_header, v7, (uint64_t)"Owned share deletion for: %{public}@", 36, 2, inited);
  swift_setDeallocating();
  swift_arrayDestroy();

  while (2)
  {
    sub_100F38180(*(void *)(v0 + 1136), type metadata accessor for CRLBoardIdentifier);
    unint64_t v18 = *(void *)(v0 + 1304);
    int64_t v19 = *(void *)(v0 + 1296);
    if (v18)
    {
      uint64_t v20 = (v18 - 1) & v18;
      unint64_t v21 = __clz(__rbit64(v18)) | (v19 << 6);
      uint64_t v22 = *(void *)(v0 + 1264);
LABEL_5:
      uint64_t v23 = *(void *)(v0 + 1112);
      sub_100F38118(*(void *)(v22 + 48) + *(void *)(*(void *)(v0 + 1128) + 72) * v21, v23, type metadata accessor for CRLBoardIdentifier);
      uint64_t v24 = *(void *)(v22 + 56);
      uint64_t v25 = sub_1005057FC(&qword_10169B570);
      *(unsigned char *)(v23 + *(int *)(v25 + 48)) = *(unsigned char *)(v24 + v21);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v23, 0, 1, v25);
      goto LABEL_24;
    }
    int64_t v26 = v19 + 1;
    if (__OFADD__(v19, 1))
    {
      __break(1u);
LABEL_41:
      __break(1u);
      JUMPOUT(0x100EE49C0);
    }
    int64_t v27 = (unint64_t)((1 << *(unsigned char *)(v0 + 1608)) + 63) >> 6;
    if (v26 < v27)
    {
      uint64_t v22 = *(void *)(v0 + 1264);
      uint64_t v28 = v22 + 64;
      unint64_t v29 = *(void *)(v22 + 64 + 8 * v26);
      if (v29)
      {
LABEL_9:
        uint64_t v20 = (v29 - 1) & v29;
        unint64_t v21 = __clz(__rbit64(v29)) + (v26 << 6);
        int64_t v19 = v26;
        goto LABEL_5;
      }
      int64_t v30 = v19 + 2;
      ++v19;
      if (v26 + 1 < v27)
      {
        unint64_t v29 = *(void *)(v28 + 8 * v30);
        if (v29)
        {
LABEL_12:
          int64_t v26 = v30;
          goto LABEL_9;
        }
        int64_t v19 = v26 + 1;
        if (v26 + 2 < v27)
        {
          unint64_t v29 = *(void *)(v28 + 8 * (v26 + 2));
          if (v29)
          {
            v26 += 2;
            goto LABEL_9;
          }
          int64_t v30 = v26 + 3;
          int64_t v19 = v26 + 2;
          if (v26 + 3 < v27)
          {
            unint64_t v29 = *(void *)(v28 + 8 * v30);
            if (v29) {
              goto LABEL_12;
            }
            while (1)
            {
              int64_t v26 = v30 + 1;
              if (__OFADD__(v30, 1)) {
                goto LABEL_41;
              }
              if (v26 >= v27) {
                break;
              }
              unint64_t v29 = *(void *)(v28 + 8 * v26);
              ++v30;
              if (v29) {
                goto LABEL_9;
              }
            }
            int64_t v19 = v27 - 1;
          }
        }
      }
    }
    uint64_t v31 = *(void *)(v0 + 1112);
    uint64_t v32 = sub_1005057FC(&qword_10169B570);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56))(v31, 1, 1, v32);
    uint64_t v20 = 0;
LABEL_24:
    *(void *)(v0 + 1304) = v20;
    *(void *)(v0 + 1296) = v19;
    uint64_t v33 = *(void *)(v0 + 1120);
    sub_10051B3EC(*(void *)(v0 + 1112), v33, &qword_10169B550);
    uint64_t v34 = sub_1005057FC(&qword_10169B570);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 48))(v33, 1, v34) != 1)
    {
      uint64_t v35 = *(void *)(v0 + 1120);
      uint64_t v36 = *(unsigned __int8 *)(v35 + *(int *)(v34 + 48));
      sub_100F37878(v35, *(void *)(v0 + 1136), type metadata accessor for CRLBoardIdentifier);
      switch(v36)
      {
        case 2:
          uint64_t v65 = *(void *)(v0 + 1152);
          uint64_t v66 = *(void *)(v0 + 1144);
          sub_100F38118(*(void *)(v0 + 1136), v66, type metadata accessor for CRLBoardIdentifier);
          sub_100CB7090(v65, v66);
          sub_100F38180(v65, type metadata accessor for CRLBoardIdentifier);
          *(void *)(v0 + 1312) = static MainActor.shared.getter();
          uint64_t v67 = dispatch thunk of Actor.unownedExecutor.getter();
          uint64_t v64 = v68;
          *(void *)(v0 + 1320) = v67;
          *(void *)(v0 + 1328) = v68;
          uint64_t v69 = sub_100EE3A3C;
          goto LABEL_35;
        case 3:
          uint64_t v70 = *(void *)(v0 + 1152);
          uint64_t v71 = *(void *)(v0 + 1144);
          sub_100F38118(*(void *)(v0 + 1136), v71, type metadata accessor for CRLBoardIdentifier);
          sub_100CB7090(v70, v71);
          sub_100F38180(v70, type metadata accessor for CRLBoardIdentifier);
          *(void *)(v0 + 1408) = static MainActor.shared.getter();
          uint64_t v67 = dispatch thunk of Actor.unownedExecutor.getter();
          uint64_t v64 = v72;
          *(void *)(v0 + 1416) = v67;
          *(void *)(v0 + 1424) = v72;
          uint64_t v69 = sub_100EE5650;
LABEL_35:
          uint64_t v55 = v69;
          uint64_t v63 = v67;
          goto LABEL_36;
        case 4:
          uint64_t v75 = *(void **)(v0 + 1288);
          uint64_t v37 = *(void *)(v0 + 1200);
          sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"deleteBoards(boardIdentifiers:)", 31, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLBoardLibrary.swift", 87, 2, 1346, (uint64_t)"Do not call method", 18, 2u, (uint64_t)_swiftEmptyArrayStorage);
          LOBYTE(v74) = 2;
          sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"deleteBoards(boardIdentifiers:)", 31, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLBoardLibrary.swift", 87, 2, 1346);
          uint64_t v38 = swift_allocObject();
          *(_OWORD *)(v38 + 16) = xmmword_10117D8C0;
          id v39 = v75;
          uint64_t v40 = StaticString.description.getter();
          *(void *)(v38 + 56) = &type metadata for String;
          *(void *)(v38 + 64) = v37;
          *(void *)(v38 + 32) = v40;
          *(void *)(v38 + 40) = v41;
          uint64_t v42 = StaticString.description.getter();
          *(void *)(v38 + 96) = &type metadata for String;
          *(void *)(v38 + 104) = v37;
          *(void *)(v38 + 72) = v42;
          *(void *)(v38 + 80) = v43;
          String.init(format:_:)();
          id v44 = objc_allocWithZone((Class)NSException);
          NSString v45 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease();
          id v46 = [v44 initWithName:v39 reason:v45 userInfo:0 "Do not call method" 18 v74];

          [v46 raise];
          continue;
        default:
          uint64_t v8 = *(void *)(v0 + 1200);
          uint64_t v9 = *(void *)(v0 + 1152);
          uint64_t v10 = *(void *)(v0 + 1144);
          uint64_t v11 = *(void *)(v0 + 1136);
          uint64_t v12 = (void *)static OS_os_log.crlBoardLibrary;
          uint64_t v13 = swift_initStackObject();
          *(_OWORD *)(v13 + 16) = xmmword_10117E810;
          id v14 = v12;
          uint64_t v15 = UUID.uuidString.getter();
          *(void *)(v13 + 56) = &type metadata for String;
          *(void *)(v13 + 64) = v8;
          *(void *)(v13 + 32) = v15;
          *(void *)(v13 + 40) = v16;
          uint64_t v17 = static os_log_type_t.default.getter();
          sub_100BAC898((uint64_t)v14, (uint64_t)&_mh_execute_header, v17, (uint64_t)"Local deletion for: %{public}@", 30, 2, v13);
          swift_setDeallocating();
          swift_arrayDestroy();

          sub_100F38118(v11, v10, type metadata accessor for CRLBoardIdentifier);
          sub_100CB7090(v9, v10);
          sub_100F38180(v9, type metadata accessor for CRLBoardIdentifier);
          continue;
      }
    }
    break;
  }
  swift_release();
  uint64_t v47 = *(void *)(v0 + 1032);
  *(void *)(v0 + 1456) = v47;
  uint64_t v48 = *(void *)(v47 + 16);
  if (v48)
  {
    uint64_t v49 = *(void *)(v0 + 1080);
    uint64_t v50 = (void *)static OS_os_log.crlBoardLibrary;
    uint64_t v51 = swift_initStackObject();
    *(_OWORD *)(v51 + 16) = xmmword_10117E810;
    *(void *)(v51 + 56) = &type metadata for Int;
    *(void *)(v51 + 64) = &protocol witness table for Int;
    *(void *)(v51 + 32) = v48;
    id v52 = v50;
    uint64_t v53 = static os_log_type_t.default.getter();
    sub_100BAC898((uint64_t)v52, (uint64_t)&_mh_execute_header, v53, (uint64_t)"Encountered error while deleting %d board(s). Adding them to the list of boards to retry deletion.", 98, 2, v51);
    swift_setDeallocating();
    swift_arrayDestroy();

    *(void *)(v0 + 1464) = *(void *)(v49 + OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_store);
    uint64_t v54 = sub_100EE6EE8;
  }
  else
  {
    uint64_t v76 = *(void *)(v0 + 1072);
    swift_bridgeObjectRetain();
    uint64_t v56 = swift_bridgeObjectRetain();
    sub_101029A98(v56);
    swift_bridgeObjectRelease();
    *(void *)(v0 + 1496) = v76;
    uint64_t v57 = *(void *)(v76 + 16);
    if (v57)
    {
      uint64_t v58 = *(void *)(v0 + 1080);
      uint64_t v59 = (void *)static OS_os_log.crlBoardLibrary;
      uint64_t v60 = swift_initStackObject();
      *(_OWORD *)(v60 + 16) = xmmword_10117E810;
      *(void *)(v60 + 56) = &type metadata for Int;
      *(void *)(v60 + 64) = &protocol witness table for Int;
      *(void *)(v60 + 32) = v57;
      id v61 = v59;
      uint64_t v62 = static os_log_type_t.default.getter();
      sub_100BAC898((uint64_t)v61, (uint64_t)&_mh_execute_header, v62, (uint64_t)"Successfully deleted %d boards", 30, 2, v60);
      swift_setDeallocating();
      swift_arrayDestroy();

      *(void *)(v0 + 1504) = *(void *)(v58 + OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_store);
      uint64_t v55 = sub_100EE7494;
      goto LABEL_32;
    }
    swift_bridgeObjectRelease();
    *(void *)(v0 + 1536) = *(void *)(*(void *)(v0 + 1080) + OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_store);
    *(void *)(v0 + 1544) = *(void *)(v0 + 1016);
    uint64_t v54 = sub_100EE78E8;
  }
  swift_bridgeObjectRetain();
  uint64_t v55 = v54;
LABEL_32:
  uint64_t v63 = 0;
  uint64_t v64 = 0;
LABEL_36:
  return _swift_task_switch(v55, v63, v64);
}

uint64_t sub_100EE49D4()
{
  *(void *)(v0 + 1400) = *(void *)(v0 + 1392);
  swift_release();
  uint64_t v2 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_100EE4A64, v2, v1);
}

uint64_t sub_100EE4A64()
{
  swift_release();
  uint64_t v1 = *(void *)(v0 + 1328);
  uint64_t v2 = *(void *)(v0 + 1320);
  return _swift_task_switch(sub_100EE4ACC, v2, v1);
}

uint64_t sub_100EE4ACC()
{
  swift_release();
  if (qword_10166FBE0 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[150];
  swift_beginAccess();
  uint64_t v2 = (void *)static OS_os_log.shareState;
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117E810;
  swift_getErrorValue();
  id v4 = v2;
  uint64_t v5 = Error.localizedDescription.getter();
  *(void *)(inited + 56) = &type metadata for String;
  *(void *)(inited + 64) = v1;
  *(void *)(inited + 32) = v5;
  *(void *)(inited + 40) = v6;
  uint64_t v7 = static os_log_type_t.error.getter();
  sub_100BAC898((uint64_t)v4, (uint64_t)&_mh_execute_header, v7, (uint64_t)"Unable to unshare board before deleting due to error, will reattempt again later %@", 83, 2, inited);
  swift_errorRelease();
  swift_setDeallocating();
  swift_arrayDestroy();

  uint64_t v8 = v0[148];
  uint64_t v9 = v0[147];
  return _swift_task_switch(sub_100EE4C6C, v9, v8);
}

uint64_t sub_100EE4C6C()
{
  uint64_t v1 = *(void *)(v0 + 1200);
  uint64_t v2 = *(void *)(v0 + 1152);
  uint64_t v3 = *(void *)(v0 + 1144);
  uint64_t v4 = *(void *)(v0 + 1136);
  uint64_t v5 = (void *)static OS_os_log.crlBoardLibrary;
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117E810;
  id v7 = v5;
  uint64_t v8 = UUID.uuidString.getter();
  *(void *)(inited + 56) = &type metadata for String;
  *(void *)(inited + 64) = v1;
  *(void *)(inited + 32) = v8;
  *(void *)(inited + 40) = v9;
  uint64_t v10 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v7, (uint64_t)&_mh_execute_header, v10, (uint64_t)"Owned share deletion failed, retrying: %{public}@", 49, 2, inited);
  swift_setDeallocating();
  swift_arrayDestroy();

  sub_100F38118(v4, v3, type metadata accessor for CRLBoardIdentifier);
  sub_100CB7090(v2, v3);
  sub_100F38180(v2, type metadata accessor for CRLBoardIdentifier);
  while (2)
  {
    sub_100F38180(*(void *)(v0 + 1136), type metadata accessor for CRLBoardIdentifier);
    unint64_t v21 = *(void *)(v0 + 1304);
    int64_t v22 = *(void *)(v0 + 1296);
    if (v21)
    {
      uint64_t v23 = (v21 - 1) & v21;
      unint64_t v24 = __clz(__rbit64(v21)) | (v22 << 6);
      uint64_t v25 = *(void *)(v0 + 1264);
LABEL_5:
      uint64_t v26 = *(void *)(v0 + 1112);
      sub_100F38118(*(void *)(v25 + 48) + *(void *)(*(void *)(v0 + 1128) + 72) * v24, v26, type metadata accessor for CRLBoardIdentifier);
      uint64_t v27 = *(void *)(v25 + 56);
      uint64_t v28 = sub_1005057FC(&qword_10169B570);
      *(unsigned char *)(v26 + *(int *)(v28 + 48)) = *(unsigned char *)(v27 + v24);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v26, 0, 1, v28);
      goto LABEL_24;
    }
    int64_t v29 = v22 + 1;
    if (__OFADD__(v22, 1))
    {
      __break(1u);
LABEL_41:
      __break(1u);
      JUMPOUT(0x100EE563CLL);
    }
    int64_t v30 = (unint64_t)((1 << *(unsigned char *)(v0 + 1608)) + 63) >> 6;
    if (v29 < v30)
    {
      uint64_t v25 = *(void *)(v0 + 1264);
      uint64_t v31 = v25 + 64;
      unint64_t v32 = *(void *)(v25 + 64 + 8 * v29);
      if (v32)
      {
LABEL_9:
        uint64_t v23 = (v32 - 1) & v32;
        unint64_t v24 = __clz(__rbit64(v32)) + (v29 << 6);
        int64_t v22 = v29;
        goto LABEL_5;
      }
      int64_t v33 = v22 + 2;
      ++v22;
      if (v29 + 1 < v30)
      {
        unint64_t v32 = *(void *)(v31 + 8 * v33);
        if (v32)
        {
LABEL_12:
          int64_t v29 = v33;
          goto LABEL_9;
        }
        int64_t v22 = v29 + 1;
        if (v29 + 2 < v30)
        {
          unint64_t v32 = *(void *)(v31 + 8 * (v29 + 2));
          if (v32)
          {
            v29 += 2;
            goto LABEL_9;
          }
          int64_t v33 = v29 + 3;
          int64_t v22 = v29 + 2;
          if (v29 + 3 < v30)
          {
            unint64_t v32 = *(void *)(v31 + 8 * v33);
            if (v32) {
              goto LABEL_12;
            }
            while (1)
            {
              int64_t v29 = v33 + 1;
              if (__OFADD__(v33, 1)) {
                goto LABEL_41;
              }
              if (v29 >= v30) {
                break;
              }
              unint64_t v32 = *(void *)(v31 + 8 * v29);
              ++v33;
              if (v32) {
                goto LABEL_9;
              }
            }
            int64_t v22 = v30 - 1;
          }
        }
      }
    }
    uint64_t v34 = *(void *)(v0 + 1112);
    uint64_t v35 = sub_1005057FC(&qword_10169B570);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 56))(v34, 1, 1, v35);
    uint64_t v23 = 0;
LABEL_24:
    *(void *)(v0 + 1304) = v23;
    *(void *)(v0 + 1296) = v22;
    uint64_t v36 = *(void *)(v0 + 1120);
    sub_10051B3EC(*(void *)(v0 + 1112), v36, &qword_10169B550);
    uint64_t v37 = sub_1005057FC(&qword_10169B570);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v37 - 8) + 48))(v36, 1, v37) != 1)
    {
      uint64_t v38 = *(void *)(v0 + 1120);
      uint64_t v39 = *(unsigned __int8 *)(v38 + *(int *)(v37 + 48));
      sub_100F37878(v38, *(void *)(v0 + 1136), type metadata accessor for CRLBoardIdentifier);
      switch(v39)
      {
        case 2:
          uint64_t v68 = *(void *)(v0 + 1152);
          uint64_t v69 = *(void *)(v0 + 1144);
          sub_100F38118(*(void *)(v0 + 1136), v69, type metadata accessor for CRLBoardIdentifier);
          sub_100CB7090(v68, v69);
          sub_100F38180(v68, type metadata accessor for CRLBoardIdentifier);
          *(void *)(v0 + 1312) = static MainActor.shared.getter();
          uint64_t v70 = dispatch thunk of Actor.unownedExecutor.getter();
          uint64_t v67 = v71;
          *(void *)(v0 + 1320) = v70;
          *(void *)(v0 + 1328) = v71;
          uint64_t v72 = sub_100EE3A3C;
          goto LABEL_35;
        case 3:
          uint64_t v73 = *(void *)(v0 + 1152);
          uint64_t v74 = *(void *)(v0 + 1144);
          sub_100F38118(*(void *)(v0 + 1136), v74, type metadata accessor for CRLBoardIdentifier);
          sub_100CB7090(v73, v74);
          sub_100F38180(v73, type metadata accessor for CRLBoardIdentifier);
          *(void *)(v0 + 1408) = static MainActor.shared.getter();
          uint64_t v70 = dispatch thunk of Actor.unownedExecutor.getter();
          uint64_t v67 = v75;
          *(void *)(v0 + 1416) = v70;
          *(void *)(v0 + 1424) = v75;
          uint64_t v72 = sub_100EE5650;
LABEL_35:
          uint64_t v58 = v72;
          uint64_t v66 = v70;
          goto LABEL_36;
        case 4:
          uint64_t v78 = *(void **)(v0 + 1288);
          uint64_t v40 = *(void *)(v0 + 1200);
          sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"deleteBoards(boardIdentifiers:)", 31, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLBoardLibrary.swift", 87, 2, 1346, (uint64_t)"Do not call method", 18, 2u, (uint64_t)_swiftEmptyArrayStorage);
          LOBYTE(v77) = 2;
          sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"deleteBoards(boardIdentifiers:)", 31, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLBoardLibrary.swift", 87, 2, 1346);
          uint64_t v41 = swift_allocObject();
          *(_OWORD *)(v41 + 16) = xmmword_10117D8C0;
          id v42 = v78;
          uint64_t v43 = StaticString.description.getter();
          *(void *)(v41 + 56) = &type metadata for String;
          *(void *)(v41 + 64) = v40;
          *(void *)(v41 + 32) = v43;
          *(void *)(v41 + 40) = v44;
          uint64_t v45 = StaticString.description.getter();
          *(void *)(v41 + 96) = &type metadata for String;
          *(void *)(v41 + 104) = v40;
          *(void *)(v41 + 72) = v45;
          *(void *)(v41 + 80) = v46;
          String.init(format:_:)();
          id v47 = objc_allocWithZone((Class)NSException);
          NSString v48 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease();
          id v49 = [v47 initWithName:v42 reason:v48 userInfo:0 "Do not call method" 18 v77];

          [v49 raise];
          continue;
        default:
          uint64_t v11 = *(void *)(v0 + 1200);
          uint64_t v12 = *(void *)(v0 + 1152);
          uint64_t v13 = *(void *)(v0 + 1144);
          uint64_t v14 = *(void *)(v0 + 1136);
          uint64_t v15 = (void *)static OS_os_log.crlBoardLibrary;
          uint64_t v16 = swift_initStackObject();
          *(_OWORD *)(v16 + 16) = xmmword_10117E810;
          id v17 = v15;
          uint64_t v18 = UUID.uuidString.getter();
          *(void *)(v16 + 56) = &type metadata for String;
          *(void *)(v16 + 64) = v11;
          *(void *)(v16 + 32) = v18;
          *(void *)(v16 + 40) = v19;
          uint64_t v20 = static os_log_type_t.default.getter();
          sub_100BAC898((uint64_t)v17, (uint64_t)&_mh_execute_header, v20, (uint64_t)"Local deletion for: %{public}@", 30, 2, v16);
          swift_setDeallocating();
          swift_arrayDestroy();

          sub_100F38118(v14, v13, type metadata accessor for CRLBoardIdentifier);
          sub_100CB7090(v12, v13);
          sub_100F38180(v12, type metadata accessor for CRLBoardIdentifier);
          continue;
      }
    }
    break;
  }
  swift_release();
  uint64_t v50 = *(void *)(v0 + 1032);
  *(void *)(v0 + 1456) = v50;
  uint64_t v51 = *(void *)(v50 + 16);
  if (v51)
  {
    uint64_t v52 = *(void *)(v0 + 1080);
    uint64_t v53 = (void *)static OS_os_log.crlBoardLibrary;
    uint64_t v54 = swift_initStackObject();
    *(_OWORD *)(v54 + 16) = xmmword_10117E810;
    *(void *)(v54 + 56) = &type metadata for Int;
    *(void *)(v54 + 64) = &protocol witness table for Int;
    *(void *)(v54 + 32) = v51;
    id v55 = v53;
    uint64_t v56 = static os_log_type_t.default.getter();
    sub_100BAC898((uint64_t)v55, (uint64_t)&_mh_execute_header, v56, (uint64_t)"Encountered error while deleting %d board(s). Adding them to the list of boards to retry deletion.", 98, 2, v54);
    swift_setDeallocating();
    swift_arrayDestroy();

    *(void *)(v0 + 1464) = *(void *)(v52 + OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_store);
    uint64_t v57 = sub_100EE6EE8;
  }
  else
  {
    uint64_t v79 = *(void *)(v0 + 1072);
    swift_bridgeObjectRetain();
    uint64_t v59 = swift_bridgeObjectRetain();
    sub_101029A98(v59);
    swift_bridgeObjectRelease();
    *(void *)(v0 + 1496) = v79;
    uint64_t v60 = *(void *)(v79 + 16);
    if (v60)
    {
      uint64_t v61 = *(void *)(v0 + 1080);
      uint64_t v62 = (void *)static OS_os_log.crlBoardLibrary;
      uint64_t v63 = swift_initStackObject();
      *(_OWORD *)(v63 + 16) = xmmword_10117E810;
      *(void *)(v63 + 56) = &type metadata for Int;
      *(void *)(v63 + 64) = &protocol witness table for Int;
      *(void *)(v63 + 32) = v60;
      id v64 = v62;
      uint64_t v65 = static os_log_type_t.default.getter();
      sub_100BAC898((uint64_t)v64, (uint64_t)&_mh_execute_header, v65, (uint64_t)"Successfully deleted %d boards", 30, 2, v63);
      swift_setDeallocating();
      swift_arrayDestroy();

      *(void *)(v0 + 1504) = *(void *)(v61 + OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_store);
      uint64_t v58 = sub_100EE7494;
      goto LABEL_32;
    }
    swift_bridgeObjectRelease();
    *(void *)(v0 + 1536) = *(void *)(*(void *)(v0 + 1080) + OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_store);
    *(void *)(v0 + 1544) = *(void *)(v0 + 1016);
    uint64_t v57 = sub_100EE78E8;
  }
  swift_bridgeObjectRetain();
  uint64_t v58 = v57;
LABEL_32:
  uint64_t v66 = 0;
  uint64_t v67 = 0;
LABEL_36:
  return _swift_task_switch(v58, v66, v67);
}

uint64_t sub_100EE5650()
{
  if (*(unsigned char *)(v0[135] + v0[159]) == 1)
  {
    v0[179] = static MainActor.shared.getter();
    uint64_t v1 = (void *)swift_task_alloc();
    v0[180] = v1;
    void *v1 = v0;
    v1[1] = sub_100EE5748;
    uint64_t v2 = v0[142];
    return sub_100EF7778(v2);
  }
  else
  {
    swift_release();
    uint64_t v4 = v0[148];
    uint64_t v5 = v0[147];
    return _swift_task_switch(sub_100F38908, v5, v4);
  }
}

uint64_t sub_100EE5748()
{
  *(void *)(*(void *)v1 + 1448) = v0;
  swift_task_dealloc();
  uint64_t v3 = dispatch thunk of Actor.unownedExecutor.getter();
  if (v0) {
    uint64_t v4 = sub_100EE62FC;
  }
  else {
    uint64_t v4 = sub_100EE58A4;
  }
  return _swift_task_switch(v4, v3, v2);
}

uint64_t sub_100EE58A4()
{
  swift_release();
  uint64_t v1 = *(void *)(v0 + 1424);
  uint64_t v2 = *(void *)(v0 + 1416);
  return _swift_task_switch(sub_100EE590C, v2, v1);
}

uint64_t sub_100EE590C()
{
  swift_release();
  uint64_t v1 = *(void *)(v0 + 1184);
  uint64_t v2 = *(void *)(v0 + 1176);
  return _swift_task_switch(sub_100EE5974, v2, v1);
}

uint64_t sub_100EE5974()
{
  uint64_t v1 = *(void *)(v0 + 1200);
  uint64_t v2 = (void *)static OS_os_log.crlBoardLibrary;
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117E810;
  id v4 = v2;
  uint64_t v5 = UUID.uuidString.getter();
  *(void *)(inited + 56) = &type metadata for String;
  *(void *)(inited + 64) = v1;
  *(void *)(inited + 32) = v5;
  *(void *)(inited + 40) = v6;
  uint64_t v7 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v4, (uint64_t)&_mh_execute_header, v7, (uint64_t)"Joined share deletion for: %{public}@", 37, 2, inited);
  swift_setDeallocating();
  swift_arrayDestroy();

  while (2)
  {
    sub_100F38180(*(void *)(v0 + 1136), type metadata accessor for CRLBoardIdentifier);
    unint64_t v18 = *(void *)(v0 + 1304);
    int64_t v19 = *(void *)(v0 + 1296);
    if (v18)
    {
      uint64_t v20 = (v18 - 1) & v18;
      unint64_t v21 = __clz(__rbit64(v18)) | (v19 << 6);
      uint64_t v22 = *(void *)(v0 + 1264);
LABEL_5:
      uint64_t v23 = *(void *)(v0 + 1112);
      sub_100F38118(*(void *)(v22 + 48) + *(void *)(*(void *)(v0 + 1128) + 72) * v21, v23, type metadata accessor for CRLBoardIdentifier);
      uint64_t v24 = *(void *)(v22 + 56);
      uint64_t v25 = sub_1005057FC(&qword_10169B570);
      *(unsigned char *)(v23 + *(int *)(v25 + 48)) = *(unsigned char *)(v24 + v21);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v23, 0, 1, v25);
      goto LABEL_24;
    }
    int64_t v26 = v19 + 1;
    if (__OFADD__(v19, 1))
    {
      __break(1u);
LABEL_41:
      __break(1u);
      JUMPOUT(0x100EE62E8);
    }
    int64_t v27 = (unint64_t)((1 << *(unsigned char *)(v0 + 1608)) + 63) >> 6;
    if (v26 < v27)
    {
      uint64_t v22 = *(void *)(v0 + 1264);
      uint64_t v28 = v22 + 64;
      unint64_t v29 = *(void *)(v22 + 64 + 8 * v26);
      if (v29)
      {
LABEL_9:
        uint64_t v20 = (v29 - 1) & v29;
        unint64_t v21 = __clz(__rbit64(v29)) + (v26 << 6);
        int64_t v19 = v26;
        goto LABEL_5;
      }
      int64_t v30 = v19 + 2;
      ++v19;
      if (v26 + 1 < v27)
      {
        unint64_t v29 = *(void *)(v28 + 8 * v30);
        if (v29)
        {
LABEL_12:
          int64_t v26 = v30;
          goto LABEL_9;
        }
        int64_t v19 = v26 + 1;
        if (v26 + 2 < v27)
        {
          unint64_t v29 = *(void *)(v28 + 8 * (v26 + 2));
          if (v29)
          {
            v26 += 2;
            goto LABEL_9;
          }
          int64_t v30 = v26 + 3;
          int64_t v19 = v26 + 2;
          if (v26 + 3 < v27)
          {
            unint64_t v29 = *(void *)(v28 + 8 * v30);
            if (v29) {
              goto LABEL_12;
            }
            while (1)
            {
              int64_t v26 = v30 + 1;
              if (__OFADD__(v30, 1)) {
                goto LABEL_41;
              }
              if (v26 >= v27) {
                break;
              }
              unint64_t v29 = *(void *)(v28 + 8 * v26);
              ++v30;
              if (v29) {
                goto LABEL_9;
              }
            }
            int64_t v19 = v27 - 1;
          }
        }
      }
    }
    uint64_t v31 = *(void *)(v0 + 1112);
    uint64_t v32 = sub_1005057FC(&qword_10169B570);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56))(v31, 1, 1, v32);
    uint64_t v20 = 0;
LABEL_24:
    *(void *)(v0 + 1304) = v20;
    *(void *)(v0 + 1296) = v19;
    uint64_t v33 = *(void *)(v0 + 1120);
    sub_10051B3EC(*(void *)(v0 + 1112), v33, &qword_10169B550);
    uint64_t v34 = sub_1005057FC(&qword_10169B570);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 48))(v33, 1, v34) != 1)
    {
      uint64_t v35 = *(void *)(v0 + 1120);
      uint64_t v36 = *(unsigned __int8 *)(v35 + *(int *)(v34 + 48));
      sub_100F37878(v35, *(void *)(v0 + 1136), type metadata accessor for CRLBoardIdentifier);
      switch(v36)
      {
        case 2:
          uint64_t v65 = *(void *)(v0 + 1152);
          uint64_t v66 = *(void *)(v0 + 1144);
          sub_100F38118(*(void *)(v0 + 1136), v66, type metadata accessor for CRLBoardIdentifier);
          sub_100CB7090(v65, v66);
          sub_100F38180(v65, type metadata accessor for CRLBoardIdentifier);
          *(void *)(v0 + 1312) = static MainActor.shared.getter();
          uint64_t v67 = dispatch thunk of Actor.unownedExecutor.getter();
          uint64_t v64 = v68;
          *(void *)(v0 + 1320) = v67;
          *(void *)(v0 + 1328) = v68;
          uint64_t v69 = sub_100EE3A3C;
          goto LABEL_35;
        case 3:
          uint64_t v70 = *(void *)(v0 + 1152);
          uint64_t v71 = *(void *)(v0 + 1144);
          sub_100F38118(*(void *)(v0 + 1136), v71, type metadata accessor for CRLBoardIdentifier);
          sub_100CB7090(v70, v71);
          sub_100F38180(v70, type metadata accessor for CRLBoardIdentifier);
          *(void *)(v0 + 1408) = static MainActor.shared.getter();
          uint64_t v67 = dispatch thunk of Actor.unownedExecutor.getter();
          uint64_t v64 = v72;
          *(void *)(v0 + 1416) = v67;
          *(void *)(v0 + 1424) = v72;
          uint64_t v69 = sub_100EE5650;
LABEL_35:
          id v55 = v69;
          uint64_t v63 = v67;
          goto LABEL_36;
        case 4:
          uint64_t v75 = *(void **)(v0 + 1288);
          uint64_t v37 = *(void *)(v0 + 1200);
          sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"deleteBoards(boardIdentifiers:)", 31, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLBoardLibrary.swift", 87, 2, 1346, (uint64_t)"Do not call method", 18, 2u, (uint64_t)_swiftEmptyArrayStorage);
          LOBYTE(v74) = 2;
          sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"deleteBoards(boardIdentifiers:)", 31, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLBoardLibrary.swift", 87, 2, 1346);
          uint64_t v38 = swift_allocObject();
          *(_OWORD *)(v38 + 16) = xmmword_10117D8C0;
          id v39 = v75;
          uint64_t v40 = StaticString.description.getter();
          *(void *)(v38 + 56) = &type metadata for String;
          *(void *)(v38 + 64) = v37;
          *(void *)(v38 + 32) = v40;
          *(void *)(v38 + 40) = v41;
          uint64_t v42 = StaticString.description.getter();
          *(void *)(v38 + 96) = &type metadata for String;
          *(void *)(v38 + 104) = v37;
          *(void *)(v38 + 72) = v42;
          *(void *)(v38 + 80) = v43;
          String.init(format:_:)();
          id v44 = objc_allocWithZone((Class)NSException);
          NSString v45 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease();
          id v46 = [v44 initWithName:v39 reason:v45 userInfo:0 description:@"Do not call method" code:18 userInfo:v74];

          [v46 raise];
          continue;
        default:
          uint64_t v8 = *(void *)(v0 + 1200);
          uint64_t v9 = *(void *)(v0 + 1152);
          uint64_t v10 = *(void *)(v0 + 1144);
          uint64_t v11 = *(void *)(v0 + 1136);
          uint64_t v12 = (void *)static OS_os_log.crlBoardLibrary;
          uint64_t v13 = swift_initStackObject();
          *(_OWORD *)(v13 + 16) = xmmword_10117E810;
          id v14 = v12;
          uint64_t v15 = UUID.uuidString.getter();
          *(void *)(v13 + 56) = &type metadata for String;
          *(void *)(v13 + 64) = v8;
          *(void *)(v13 + 32) = v15;
          *(void *)(v13 + 40) = v16;
          uint64_t v17 = static os_log_type_t.default.getter();
          sub_100BAC898((uint64_t)v14, (uint64_t)&_mh_execute_header, v17, (uint64_t)"Local deletion for: %{public}@", 30, 2, v13);
          swift_setDeallocating();
          swift_arrayDestroy();

          sub_100F38118(v11, v10, type metadata accessor for CRLBoardIdentifier);
          sub_100CB7090(v9, v10);
          sub_100F38180(v9, type metadata accessor for CRLBoardIdentifier);
          continue;
      }
    }
    break;
  }
  swift_release();
  uint64_t v47 = *(void *)(v0 + 1032);
  *(void *)(v0 + 1456) = v47;
  uint64_t v48 = *(void *)(v47 + 16);
  if (v48)
  {
    uint64_t v49 = *(void *)(v0 + 1080);
    uint64_t v50 = (void *)static OS_os_log.crlBoardLibrary;
    uint64_t v51 = swift_initStackObject();
    *(_OWORD *)(v51 + 16) = xmmword_10117E810;
    *(void *)(v51 + 56) = &type metadata for Int;
    *(void *)(v51 + 64) = &protocol witness table for Int;
    *(void *)(v51 + 32) = v48;
    id v52 = v50;
    uint64_t v53 = static os_log_type_t.default.getter();
    sub_100BAC898((uint64_t)v52, (uint64_t)&_mh_execute_header, v53, (uint64_t)"Encountered error while deleting %d board(s). Adding them to the list of boards to retry deletion.", 98, 2, v51);
    swift_setDeallocating();
    swift_arrayDestroy();

    *(void *)(v0 + 1464) = *(void *)(v49 + OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_store);
    uint64_t v54 = sub_100EE6EE8;
  }
  else
  {
    uint64_t v76 = *(void *)(v0 + 1072);
    swift_bridgeObjectRetain();
    uint64_t v56 = swift_bridgeObjectRetain();
    sub_101029A98(v56);
    swift_bridgeObjectRelease();
    *(void *)(v0 + 1496) = v76;
    uint64_t v57 = *(void *)(v76 + 16);
    if (v57)
    {
      uint64_t v58 = *(void *)(v0 + 1080);
      uint64_t v59 = (void *)static OS_os_log.crlBoardLibrary;
      uint64_t v60 = swift_initStackObject();
      *(_OWORD *)(v60 + 16) = xmmword_10117E810;
      *(void *)(v60 + 56) = &type metadata for Int;
      *(void *)(v60 + 64) = &protocol witness table for Int;
      *(void *)(v60 + 32) = v57;
      id v61 = v59;
      uint64_t v62 = static os_log_type_t.default.getter();
      sub_100BAC898((uint64_t)v61, (uint64_t)&_mh_execute_header, v62, (uint64_t)"Successfully deleted %d boards", 30, 2, v60);
      swift_setDeallocating();
      swift_arrayDestroy();

      *(void *)(v0 + 1504) = *(void *)(v58 + OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_store);
      id v55 = sub_100EE7494;
      goto LABEL_32;
    }
    swift_bridgeObjectRelease();
    *(void *)(v0 + 1536) = *(void *)(*(void *)(v0 + 1080) + OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_store);
    *(void *)(v0 + 1544) = *(void *)(v0 + 1016);
    uint64_t v54 = sub_100EE78E8;
  }
  swift_bridgeObjectRetain();
  id v55 = v54;
LABEL_32:
  uint64_t v63 = 0;
  uint64_t v64 = 0;
LABEL_36:
  return _swift_task_switch(v55, v63, v64);
}

uint64_t sub_100EE62FC()
{
  swift_release();
  uint64_t v1 = *(void *)(v0 + 1424);
  uint64_t v2 = *(void *)(v0 + 1416);
  return _swift_task_switch(sub_100EE6364, v2, v1);
}

uint64_t sub_100EE6364()
{
  swift_release();
  if (qword_10166FBE0 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[150];
  swift_beginAccess();
  uint64_t v2 = (void *)static OS_os_log.shareState;
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117E810;
  swift_getErrorValue();
  id v4 = v2;
  uint64_t v5 = Error.localizedDescription.getter();
  *(void *)(inited + 56) = &type metadata for String;
  *(void *)(inited + 64) = v1;
  *(void *)(inited + 32) = v5;
  *(void *)(inited + 40) = v6;
  uint64_t v7 = static os_log_type_t.error.getter();
  sub_100BAC898((uint64_t)v4, (uint64_t)&_mh_execute_header, v7, (uint64_t)"Unable to unshare board before deleting due to error, will reattempt again later %@", 83, 2, inited);
  swift_errorRelease();
  swift_setDeallocating();
  swift_arrayDestroy();

  uint64_t v8 = v0[148];
  uint64_t v9 = v0[147];
  return _swift_task_switch(sub_100EE6504, v9, v8);
}

uint64_t sub_100EE6504()
{
  uint64_t v1 = *(void *)(v0 + 1200);
  uint64_t v2 = *(void *)(v0 + 1152);
  uint64_t v3 = *(void *)(v0 + 1144);
  uint64_t v4 = *(void *)(v0 + 1136);
  uint64_t v5 = (void *)static OS_os_log.crlBoardLibrary;
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117E810;
  id v7 = v5;
  uint64_t v8 = UUID.uuidString.getter();
  *(void *)(inited + 56) = &type metadata for String;
  *(void *)(inited + 64) = v1;
  *(void *)(inited + 32) = v8;
  *(void *)(inited + 40) = v9;
  uint64_t v10 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v7, (uint64_t)&_mh_execute_header, v10, (uint64_t)"Joined share deletion failed, retrying: %{public}@", 50, 2, inited);
  swift_setDeallocating();
  swift_arrayDestroy();

  sub_100F38118(v4, v3, type metadata accessor for CRLBoardIdentifier);
  sub_100CB7090(v2, v3);
  sub_100F38180(v2, type metadata accessor for CRLBoardIdentifier);
  while (2)
  {
    sub_100F38180(*(void *)(v0 + 1136), type metadata accessor for CRLBoardIdentifier);
    unint64_t v21 = *(void *)(v0 + 1304);
    int64_t v22 = *(void *)(v0 + 1296);
    if (v21)
    {
      uint64_t v23 = (v21 - 1) & v21;
      unint64_t v24 = __clz(__rbit64(v21)) | (v22 << 6);
      uint64_t v25 = *(void *)(v0 + 1264);
LABEL_5:
      uint64_t v26 = *(void *)(v0 + 1112);
      sub_100F38118(*(void *)(v25 + 48) + *(void *)(*(void *)(v0 + 1128) + 72) * v24, v26, type metadata accessor for CRLBoardIdentifier);
      uint64_t v27 = *(void *)(v25 + 56);
      uint64_t v28 = sub_1005057FC(&qword_10169B570);
      *(unsigned char *)(v26 + *(int *)(v28 + 48)) = *(unsigned char *)(v27 + v24);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v26, 0, 1, v28);
      goto LABEL_24;
    }
    int64_t v29 = v22 + 1;
    if (__OFADD__(v22, 1))
    {
      __break(1u);
LABEL_41:
      __break(1u);
      JUMPOUT(0x100EE6ED4);
    }
    int64_t v30 = (unint64_t)((1 << *(unsigned char *)(v0 + 1608)) + 63) >> 6;
    if (v29 < v30)
    {
      uint64_t v25 = *(void *)(v0 + 1264);
      uint64_t v31 = v25 + 64;
      unint64_t v32 = *(void *)(v25 + 64 + 8 * v29);
      if (v32)
      {
LABEL_9:
        uint64_t v23 = (v32 - 1) & v32;
        unint64_t v24 = __clz(__rbit64(v32)) + (v29 << 6);
        int64_t v22 = v29;
        goto LABEL_5;
      }
      int64_t v33 = v22 + 2;
      ++v22;
      if (v29 + 1 < v30)
      {
        unint64_t v32 = *(void *)(v31 + 8 * v33);
        if (v32)
        {
LABEL_12:
          int64_t v29 = v33;
          goto LABEL_9;
        }
        int64_t v22 = v29 + 1;
        if (v29 + 2 < v30)
        {
          unint64_t v32 = *(void *)(v31 + 8 * (v29 + 2));
          if (v32)
          {
            v29 += 2;
            goto LABEL_9;
          }
          int64_t v33 = v29 + 3;
          int64_t v22 = v29 + 2;
          if (v29 + 3 < v30)
          {
            unint64_t v32 = *(void *)(v31 + 8 * v33);
            if (v32) {
              goto LABEL_12;
            }
            while (1)
            {
              int64_t v29 = v33 + 1;
              if (__OFADD__(v33, 1)) {
                goto LABEL_41;
              }
              if (v29 >= v30) {
                break;
              }
              unint64_t v32 = *(void *)(v31 + 8 * v29);
              ++v33;
              if (v32) {
                goto LABEL_9;
              }
            }
            int64_t v22 = v30 - 1;
          }
        }
      }
    }
    uint64_t v34 = *(void *)(v0 + 1112);
    uint64_t v35 = sub_1005057FC(&qword_10169B570);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 56))(v34, 1, 1, v35);
    uint64_t v23 = 0;
LABEL_24:
    *(void *)(v0 + 1304) = v23;
    *(void *)(v0 + 1296) = v22;
    uint64_t v36 = *(void *)(v0 + 1120);
    sub_10051B3EC(*(void *)(v0 + 1112), v36, &qword_10169B550);
    uint64_t v37 = sub_1005057FC(&qword_10169B570);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v37 - 8) + 48))(v36, 1, v37) != 1)
    {
      uint64_t v38 = *(void *)(v0 + 1120);
      uint64_t v39 = *(unsigned __int8 *)(v38 + *(int *)(v37 + 48));
      sub_100F37878(v38, *(void *)(v0 + 1136), type metadata accessor for CRLBoardIdentifier);
      switch(v39)
      {
        case 2:
          uint64_t v68 = *(void *)(v0 + 1152);
          uint64_t v69 = *(void *)(v0 + 1144);
          sub_100F38118(*(void *)(v0 + 1136), v69, type metadata accessor for CRLBoardIdentifier);
          sub_100CB7090(v68, v69);
          sub_100F38180(v68, type metadata accessor for CRLBoardIdentifier);
          *(void *)(v0 + 1312) = static MainActor.shared.getter();
          uint64_t v70 = dispatch thunk of Actor.unownedExecutor.getter();
          uint64_t v67 = v71;
          *(void *)(v0 + 1320) = v70;
          *(void *)(v0 + 1328) = v71;
          uint64_t v72 = sub_100EE3A3C;
          goto LABEL_35;
        case 3:
          uint64_t v73 = *(void *)(v0 + 1152);
          uint64_t v74 = *(void *)(v0 + 1144);
          sub_100F38118(*(void *)(v0 + 1136), v74, type metadata accessor for CRLBoardIdentifier);
          sub_100CB7090(v73, v74);
          sub_100F38180(v73, type metadata accessor for CRLBoardIdentifier);
          *(void *)(v0 + 1408) = static MainActor.shared.getter();
          uint64_t v70 = dispatch thunk of Actor.unownedExecutor.getter();
          uint64_t v67 = v75;
          *(void *)(v0 + 1416) = v70;
          *(void *)(v0 + 1424) = v75;
          uint64_t v72 = sub_100EE5650;
LABEL_35:
          uint64_t v58 = v72;
          uint64_t v66 = v70;
          goto LABEL_36;
        case 4:
          uint64_t v78 = *(void **)(v0 + 1288);
          uint64_t v40 = *(void *)(v0 + 1200);
          sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"deleteBoards(boardIdentifiers:)", 31, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLBoardLibrary.swift", 87, 2, 1346, (uint64_t)"Do not call method", 18, 2u, (uint64_t)_swiftEmptyArrayStorage);
          LOBYTE(v77) = 2;
          sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"deleteBoards(boardIdentifiers:)", 31, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLBoardLibrary.swift", 87, 2, 1346);
          uint64_t v41 = swift_allocObject();
          *(_OWORD *)(v41 + 16) = xmmword_10117D8C0;
          id v42 = v78;
          uint64_t v43 = StaticString.description.getter();
          *(void *)(v41 + 56) = &type metadata for String;
          *(void *)(v41 + 64) = v40;
          *(void *)(v41 + 32) = v43;
          *(void *)(v41 + 40) = v44;
          uint64_t v45 = StaticString.description.getter();
          *(void *)(v41 + 96) = &type metadata for String;
          *(void *)(v41 + 104) = v40;
          *(void *)(v41 + 72) = v45;
          *(void *)(v41 + 80) = v46;
          String.init(format:_:)();
          id v47 = objc_allocWithZone((Class)NSException);
          NSString v48 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease();
          id v49 = [v47 initWithName:v42 reason:v48 userInfo:0 "Do not call method" 18 v77];

          [v49 raise];
          continue;
        default:
          uint64_t v11 = *(void *)(v0 + 1200);
          uint64_t v12 = *(void *)(v0 + 1152);
          uint64_t v13 = *(void *)(v0 + 1144);
          uint64_t v14 = *(void *)(v0 + 1136);
          uint64_t v15 = (void *)static OS_os_log.crlBoardLibrary;
          uint64_t v16 = swift_initStackObject();
          *(_OWORD *)(v16 + 16) = xmmword_10117E810;
          id v17 = v15;
          uint64_t v18 = UUID.uuidString.getter();
          *(void *)(v16 + 56) = &type metadata for String;
          *(void *)(v16 + 64) = v11;
          *(void *)(v16 + 32) = v18;
          *(void *)(v16 + 40) = v19;
          uint64_t v20 = static os_log_type_t.default.getter();
          sub_100BAC898((uint64_t)v17, (uint64_t)&_mh_execute_header, v20, (uint64_t)"Local deletion for: %{public}@", 30, 2, v16);
          swift_setDeallocating();
          swift_arrayDestroy();

          sub_100F38118(v14, v13, type metadata accessor for CRLBoardIdentifier);
          sub_100CB7090(v12, v13);
          sub_100F38180(v12, type metadata accessor for CRLBoardIdentifier);
          continue;
      }
    }
    break;
  }
  swift_release();
  uint64_t v50 = *(void *)(v0 + 1032);
  *(void *)(v0 + 1456) = v50;
  uint64_t v51 = *(void *)(v50 + 16);
  if (v51)
  {
    uint64_t v52 = *(void *)(v0 + 1080);
    uint64_t v53 = (void *)static OS_os_log.crlBoardLibrary;
    uint64_t v54 = swift_initStackObject();
    *(_OWORD *)(v54 + 16) = xmmword_10117E810;
    *(void *)(v54 + 56) = &type metadata for Int;
    *(void *)(v54 + 64) = &protocol witness table for Int;
    *(void *)(v54 + 32) = v51;
    id v55 = v53;
    uint64_t v56 = static os_log_type_t.default.getter();
    sub_100BAC898((uint64_t)v55, (uint64_t)&_mh_execute_header, v56, (uint64_t)"Encountered error while deleting %d board(s). Adding them to the list of boards to retry deletion.", 98, 2, v54);
    swift_setDeallocating();
    swift_arrayDestroy();

    *(void *)(v0 + 1464) = *(void *)(v52 + OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_store);
    uint64_t v57 = sub_100EE6EE8;
  }
  else
  {
    uint64_t v79 = *(void *)(v0 + 1072);
    swift_bridgeObjectRetain();
    uint64_t v59 = swift_bridgeObjectRetain();
    sub_101029A98(v59);
    swift_bridgeObjectRelease();
    *(void *)(v0 + 1496) = v79;
    uint64_t v60 = *(void *)(v79 + 16);
    if (v60)
    {
      uint64_t v61 = *(void *)(v0 + 1080);
      uint64_t v62 = (void *)static OS_os_log.crlBoardLibrary;
      uint64_t v63 = swift_initStackObject();
      *(_OWORD *)(v63 + 16) = xmmword_10117E810;
      *(void *)(v63 + 56) = &type metadata for Int;
      *(void *)(v63 + 64) = &protocol witness table for Int;
      *(void *)(v63 + 32) = v60;
      id v64 = v62;
      uint64_t v65 = static os_log_type_t.default.getter();
      sub_100BAC898((uint64_t)v64, (uint64_t)&_mh_execute_header, v65, (uint64_t)"Successfully deleted %d boards", 30, 2, v63);
      swift_setDeallocating();
      swift_arrayDestroy();

      *(void *)(v0 + 1504) = *(void *)(v61 + OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_store);
      uint64_t v58 = sub_100EE7494;
      goto LABEL_32;
    }
    swift_bridgeObjectRelease();
    *(void *)(v0 + 1536) = *(void *)(*(void *)(v0 + 1080) + OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_store);
    *(void *)(v0 + 1544) = *(void *)(v0 + 1016);
    uint64_t v57 = sub_100EE78E8;
  }
  swift_bridgeObjectRetain();
  uint64_t v58 = v57;
LABEL_32:
  uint64_t v66 = 0;
  uint64_t v67 = 0;
LABEL_36:
  return _swift_task_switch(v58, v66, v67);
}

uint64_t sub_100EE6EE8()
{
  uint64_t v1 = (int8x16_t *)swift_task_alloc();
  v0[92].i64[0] = (uint64_t)v1;
  v1[1] = vextq_s8(v0[91], v0[91], 8uLL);
  uint64_t v2 = (void *)swift_task_alloc();
  v0[92].i64[1] = (uint64_t)v2;
  *uint64_t v2 = v0;
  v2[1] = sub_100EE6FD8;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v2, 0, 0, 0xD000000000000021, 0x8000000101297980, sub_100F375CC, v1, (char *)&type metadata for () + 8);
}

uint64_t sub_100EE6FD8()
{
  *(void *)(*(void *)v1 + 1488) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_100EE70F4;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_100EE7250;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100EE70F4()
{
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v1 = *(void *)(v0 + 1184);
  uint64_t v2 = *(void *)(v0 + 1176);
  return _swift_task_switch(sub_100EE7180, v2, v1);
}

uint64_t sub_100EE7180()
{
  swift_release();
  sub_100F0F760();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100EE7250()
{
  swift_bridgeObjectRelease();
  uint64_t v1 = *(void *)(v0 + 1184);
  uint64_t v2 = *(void *)(v0 + 1176);
  return _swift_task_switch(sub_100EE72B8, v2, v1);
}

uint64_t sub_100EE72B8()
{
  uint64_t v1 = v0[134];
  uint64_t v2 = v0[129];
  if (*(void *)(v2 + 16) <= *(void *)(v1 + 16) >> 3)
  {
    uint64_t v13 = (void *)v0[134];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_101029A98(v2);
    swift_bridgeObjectRelease();
    uint64_t v4 = v13;
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = swift_bridgeObjectRetain();
    uint64_t v4 = sub_10102BCC8(v3, v1);
    swift_bridgeObjectRelease();
  }
  v0[187] = v4;
  uint64_t v5 = v4[2];
  if (v5)
  {
    uint64_t v6 = v0[135];
    id v7 = (void *)static OS_os_log.crlBoardLibrary;
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_10117E810;
    *(void *)(inited + 56) = &type metadata for Int;
    *(void *)(inited + 64) = &protocol witness table for Int;
    *(void *)(inited + 32) = v5;
    id v9 = v7;
    uint64_t v10 = static os_log_type_t.default.getter();
    sub_100BAC898((uint64_t)v9, (uint64_t)&_mh_execute_header, v10, (uint64_t)"Successfully deleted %d boards", 30, 2, inited);
    swift_setDeallocating();
    swift_arrayDestroy();

    v0[188] = *(void *)(v6 + OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_store);
    uint64_t v11 = sub_100EE7494;
  }
  else
  {
    swift_bridgeObjectRelease();
    v0[192] = *(void *)(v0[135] + OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_store);
    v0[193] = v0[127];
    swift_bridgeObjectRetain();
    uint64_t v11 = sub_100EE78E8;
  }
  return _swift_task_switch(v11, 0, 0);
}

uint64_t sub_100EE7494()
{
  uint64_t v1 = swift_task_alloc();
  *(void *)(v0 + 1512) = v1;
  *(_OWORD *)(v1 + 16) = *(_OWORD *)(v0 + 1496);
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 1520) = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_100EE7584;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v2, 0, 0, 0xD000000000000026, 0x80000001012979D0, sub_100F375D4, v1, (char *)&type metadata for () + 8);
}

uint64_t sub_100EE7584()
{
  *(void *)(*(void *)v1 + 1528) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_100EE778C;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_100EE76A0;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100EE76A0()
{
  swift_bridgeObjectRelease();
  uint64_t v1 = *(void *)(v0 + 1184);
  uint64_t v2 = *(void *)(v0 + 1176);
  return _swift_task_switch(sub_100EE7708, v2, v1);
}

uint64_t sub_100EE7708()
{
  v0[192] = *(void *)(v0[135] + OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_store);
  v0[193] = v0[127];
  swift_bridgeObjectRetain();
  return _swift_task_switch(sub_100EE78E8, 0, 0);
}

uint64_t sub_100EE778C()
{
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v1 = *(void *)(v0 + 1184);
  uint64_t v2 = *(void *)(v0 + 1176);
  return _swift_task_switch(sub_100EE7818, v2, v1);
}

uint64_t sub_100EE7818()
{
  swift_release();
  sub_100F0F760();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100EE78E8()
{
  uint64_t v1 = swift_task_alloc();
  *(void *)(v0 + 1552) = v1;
  *(_OWORD *)(v1 + 16) = *(_OWORD *)(v0 + 1536);
  *(unsigned char *)(v1 + 32) = 1;
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 1560) = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_100EE79DC;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v2, 0, 0, 0xD000000000000034, 0x8000000101297A00, sub_100F375DC, v1, (char *)&type metadata for () + 8);
}

uint64_t sub_100EE79DC()
{
  *(void *)(*(void *)v1 + 1568) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_100EE7DE4;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_100EE7AF8;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100EE7AF8()
{
  swift_bridgeObjectRelease();
  uint64_t v1 = *(void *)(v0 + 1184);
  uint64_t v2 = *(void *)(v0 + 1176);
  return _swift_task_switch(sub_100EE7B60, v2, v1);
}

uint64_t sub_100EE7B60()
{
  *(void *)(v0 + 1576) = *(void *)(v0 + 1040);
  swift_bridgeObjectRetain();
  return _swift_task_switch(sub_100EE7BD0, 0, 0);
}

uint64_t sub_100EE7BD0()
{
  uint64_t v1 = v0[197];
  uint64_t v2 = v0[192];
  uint64_t v3 = swift_task_alloc();
  v0[198] = v3;
  *(void *)(v3 + 16) = v2;
  *(void *)(v3 + 24) = v1;
  uint64_t v4 = (void *)swift_task_alloc();
  v0[199] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_100EE7CC8;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v4, 0, 0, 0xD00000000000002ALL, 0x8000000101297A40, sub_100F375E8, v3, (char *)&type metadata for () + 8);
}

uint64_t sub_100EE7CC8()
{
  *(void *)(*(void *)v1 + 1600) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_100EE83F4;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_100EE7F40;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100EE7DE4()
{
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v1 = *(void *)(v0 + 1184);
  uint64_t v2 = *(void *)(v0 + 1176);
  return _swift_task_switch(sub_100EE7E70, v2, v1);
}

uint64_t sub_100EE7E70()
{
  swift_release();
  sub_100F0F760();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100EE7F40()
{
  swift_bridgeObjectRelease();
  uint64_t v1 = *(void *)(v0 + 1184);
  uint64_t v2 = *(void *)(v0 + 1176);
  return _swift_task_switch(sub_100EE7FA8, v2, v1);
}

uint64_t sub_100EE7FA8()
{
  unint64_t v32 = v0;
  uint64_t v1 = v0[134];
  swift_release();
  int64_t v2 = *(void *)(v1 + 16);
  uint64_t v3 = _swiftEmptyArrayStorage;
  if (v2)
  {
    uint64_t v4 = v0[137];
    uint64_t v5 = (_DWORD *)v0[134];
    uint64_t v31 = _swiftEmptyArrayStorage;
    uint64_t v3 = (double *)&v31;
    sub_1006BB544(0, v2, 0);
    uint64_t v6 = sub_100F27B80((uint64_t)v5);
    uint64_t v8 = v7;
    char v10 = v9 & 1;
    uint64_t v30 = v4;
    int64_t v29 = (void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16);
    while ((v6 & 0x8000000000000000) == 0 && v6 < 1 << *((unsigned char *)v5 + 32))
    {
      if (((*(void *)((char *)v5 + (((unint64_t)v6 >> 3) & 0x1FFFFFFFFFFFFFF8) + 56) >> v6) & 1) == 0) {
        goto LABEL_18;
      }
      if (v5[9] != v8) {
        goto LABEL_19;
      }
      uint64_t v11 = v0[144];
      uint64_t v12 = v0[143];
      uint64_t v13 = v0[138];
      uint64_t v14 = v0[136];
      sub_100F38118(*((void *)v5 + 6) + *(void *)(v0[141] + 72) * v6, v11, type metadata accessor for CRLBoardIdentifier);
      sub_100F37878(v11, v12, type metadata accessor for CRLBoardIdentifier);
      (*v29)(v13, v12, v14);
      sub_100F38180(v12, type metadata accessor for CRLBoardIdentifier);
      uint64_t v3 = v31;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1006BB544(0, *((void *)v3 + 2) + 1, 1);
        uint64_t v3 = v31;
      }
      unint64_t v16 = *((void *)v3 + 2);
      unint64_t v15 = *((void *)v3 + 3);
      if (v16 >= v15 >> 1)
      {
        sub_1006BB544(v15 > 1, v16 + 1, 1);
        uint64_t v3 = v31;
      }
      uint64_t v17 = v0[138];
      uint64_t v18 = v0[136];
      uint64_t v19 = v0[134];
      *((void *)v3 + 2) = v16 + 1;
      (*(void (**)(unint64_t, uint64_t, uint64_t))(v30 + 32))((unint64_t)v3+ ((*(unsigned __int8 *)(v30 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80))+ *(void *)(v30 + 72) * v16, v17, v18);
      uint64_t v31 = v3;
      uint64_t v20 = sub_100666C8C(v6, v8, v10 & 1, v19);
      uint64_t v6 = v20;
      uint64_t v8 = v21;
      char v10 = v22 & 1;
      if (!--v2)
      {
        sub_10056A4C4(v20, v21, v22 & 1);
        goto LABEL_13;
      }
    }
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
  }
  else
  {
LABEL_13:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v5 = [self defaultCenter];
    if (qword_1016701B8 == -1) {
      goto LABEL_14;
    }
  }
  swift_once();
LABEL_14:
  uint64_t v23 = v0[135];
  uint64_t v24 = qword_10171CBA0;
  sub_1005057FC(&qword_101677430);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117E810;
  v0[125] = 0xD000000000000019;
  v0[126] = 0x8000000101297A70;
  AnyHashable.init<A>(_:)();
  *(void *)(inited + 96) = &type metadata for CRLDeletedBoardsModel;
  *(void *)(inited + 72) = v3;
  sub_100A393A8(inited);
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v5 postNotificationName:v24 object:v23 userInfo:isa];

  sub_100F0F760();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v27 = (uint64_t (*)(void))v0[1];
  return v27();
}

uint64_t sub_100EE83F4()
{
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v1 = *(void *)(v0 + 1184);
  uint64_t v2 = *(void *)(v0 + 1176);
  return _swift_task_switch(sub_100EE8480, v2, v1);
}

uint64_t sub_100EE8480()
{
  swift_release();
  sub_100F0F760();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100EE8550(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for CRLBoardIdentifier(0);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  __chkstk_darwin(v3 - 8, v6);
  uint64_t v7 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1005057FC(&qword_101672BB0);
  __chkstk_darwin(v8 - 8, v9);
  uint64_t v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10166FBA0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  id v12 = (id)static OS_os_log.realTimeSync;
  uint64_t v13 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v12, (uint64_t)&_mh_execute_header, v13, (uint64_t)"activateOpportunisticRealTimeCollaboration(boardIdentifier:) attempting to start opportunistic real-time collaboration.", 119, 2, (uint64_t)_swiftEmptyArrayStorage);

  uint64_t v14 = sub_100EEBC0C(a1);
  if ((unint64_t)v14 >> 62) {
    uint64_t v15 = _CocoaArrayWrapper.endIndex.getter();
  }
  else {
    uint64_t v15 = *(void *)(((unint64_t)v14 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  if (!v15)
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"activateOpportunisticRealTimeCollaboration(boardIdentifier:)", 60, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLBoardLibrary.swift", 87, 2, 1895, (uint64_t)"Collaboration can only be started on a board that is already open", 65, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"activateOpportunisticRealTimeCollaboration(boardIdentifier:)", 60, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLBoardLibrary.swift", 87, 2, 1895);
  }
  uint64_t v16 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v11, 1, 1, v16);
  sub_100F38118(a1, (uint64_t)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for CRLBoardIdentifier);
  type metadata accessor for MainActor();
  id v17 = v1;
  uint64_t v18 = static MainActor.shared.getter();
  unint64_t v19 = (*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v20 = (void *)swift_allocObject();
  id v20[2] = v18;
  void v20[3] = &protocol witness table for MainActor;
  void v20[4] = v17;
  sub_100F37878((uint64_t)v7, (uint64_t)v20 + v19, type metadata accessor for CRLBoardIdentifier);
  sub_1006D9104((uint64_t)v11, (uint64_t)&unk_1016A2390, (uint64_t)v20);
  return swift_release();
}

uint64_t sub_100EE88B0(uint64_t a1)
{
  v2[2] = a1;
  v2[3] = v1;
  type metadata accessor for MainActor();
  v2[4] = static MainActor.shared.getter();
  uint64_t v4 = dispatch thunk of Actor.unownedExecutor.getter();
  v2[5] = v4;
  v2[6] = v3;
  return _swift_task_switch(sub_100EE8948, v4, v3);
}

uint64_t sub_100EE8948()
{
  *(void *)(v0 + 56) = *(void *)(*(void *)(v0 + 24) + OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_store);
  return _swift_task_switch(sub_100EE8978, 0, 0);
}

uint64_t sub_100EE8978()
{
  uint64_t v1 = v0[7];
  uint64_t v2 = v0[2];
  uint64_t v3 = swift_task_alloc();
  v0[8] = v3;
  *(void *)(v3 + 16) = v1;
  *(void *)(v3 + 24) = v2;
  uint64_t v4 = (void *)swift_task_alloc();
  v0[9] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_100EE18C4;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v4, 0, 0, 0xD00000000000001ALL, 0x8000000101297870, sub_100F37560, v3, (char *)&type metadata for () + 8);
}

NSString sub_100EE8A70()
{
  NSString result = String._bridgeToObjectiveC()();
  qword_10171CB88 = (uint64_t)result;
  return result;
}

NSString sub_100EE8AA8()
{
  NSString result = String._bridgeToObjectiveC()();
  qword_10171CB90 = (uint64_t)result;
  return result;
}

NSString sub_100EE8AE0()
{
  NSString result = String._bridgeToObjectiveC()();
  qword_10171CB98 = (uint64_t)result;
  return result;
}

NSString sub_100EE8B18()
{
  NSString result = String._bridgeToObjectiveC()();
  qword_10171CBA0 = (uint64_t)result;
  return result;
}

char *sub_100EE8B50(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v7 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  __chkstk_darwin(v7, v8);
  uint64_t v93 = (char *)&v80 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10, v11);
  uint64_t v13 = (char *)&v80 - v12;
  uint64_t v14 = OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_storeBoardMetadata;
  uint64_t v15 = v3;
  *(void *)&v3[v14] = sub_100A3A370((uint64_t)_swiftEmptyArrayStorage);
  *(void *)&v15[OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_entityStore] = 0;
  *(void *)&v15[OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_storeFolderBoardCount] = 0;
  uint64_t v16 = OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_sharedHighlightController;
  *(void *)&v15[v16] = [objc_allocWithZone((Class)type metadata accessor for CRLSharedHighlightController()) init];
  *(void *)&v15[OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_cloudKitObserver] = 0;
  *(void *)&v15[OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_cloudKitRecordObserver] = 0;
  *(void *)&v15[OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_userDataDeletionRequestObserver] = 0;
  *(void *)&v15[OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_databaseSyncObserver] = 0;
  id v17 = &v15[OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_networkReachabilityListener];
  *(_OWORD *)id v17 = 0u;
  *((_OWORD *)v17 + 1) = 0u;
  *((void *)v17 + 4) = 0;
  *(void *)&v15[OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_networkReachabilityListenerSubscriptionSet] = &_swiftEmptySetSingleton;
  v15[OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_isNetworkReachable] = 0;
  *(void *)&v15[OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_pauseSnapshotUpdateCount] = 0;
  *(void *)&v15[OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_pendingUpdateOptions] = 0;
  *(void *)&v15[OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_pendingChangedBoards] = &_swiftEmptySetSingleton;
  *(void *)&v15[OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_snapshotUpdateInterval] = 0x4000000000000000;
  *(void *)&v15[OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_realTimeCollaborationDelegate + 8] = 0;
  swift_unknownObjectWeakInit();
  v15[OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_didStartUpdating] = 0;
  v15[OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_didCallStartUpdating] = 0;
  *(void *)&v15[OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_appAnalyticsApplicationTracker] = 0;
  *(void *)&v15[OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_snapshot] = _swiftEmptyArrayStorage;
  *(void *)&v15[OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_maxRecentlyDeleted] = -1;
  *(void *)&v15[OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_maxRecents] = 30;
  uint64_t v18 = OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_boardInfos;
  *(void *)&v15[v18] = sub_100A3AD60((uint64_t)_swiftEmptyArrayStorage);
  uint64_t v19 = OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_shareErrorObservers;
  *(void *)&v15[v19] = [self weakObjectsHashTable];
  *(void *)&v15[OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_store] = a1;
  *(void *)&v15[OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_boardShareController] = a2;
  *(void *)&v15[OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_syncPriorityProvider] = a3;
  type metadata accessor for CRLOpportunisticGroupSessionManager(0);
  swift_allocObject();
  id v82 = a1;
  uint64_t v83 = a2;
  swift_retain();
  uint64_t v84 = a3;
  swift_retain();
  *(void *)&v15[OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_opportunisticGroupSessionManager] = sub_100B1E5F0();
  unsigned char *v13 = 0;
  swift_storeEnumTagMultiPayload();
  uint64_t v20 = (objc_class *)type metadata accessor for CRLBoardLibraryViewModelItemNode();
  uint64_t v21 = (char *)objc_allocWithZone(v20);
  *(void *)&v21[OBJC_IVAR____TtC8Freeform32CRLBoardLibraryViewModelItemNode_children] = _swiftEmptyArrayStorage;
  uint64_t v91 = type metadata accessor for CRLBoardLibraryViewModel.Item;
  sub_100F38118((uint64_t)v13, (uint64_t)&v21[OBJC_IVAR____TtC8Freeform32CRLBoardLibraryViewModelItemNode_item], type metadata accessor for CRLBoardLibraryViewModel.Item);
  v105.id receiver = v21;
  v105.uint64_t super_class = v20;
  uint64_t v85 = (uint64_t (*)(uint64_t))[v105 init];
  char v89 = type metadata accessor for CRLBoardLibraryViewModel.Item;
  sub_100F38180((uint64_t)v13, type metadata accessor for CRLBoardLibraryViewModel.Item);
  uint64_t v92 = sub_1005057FC((uint64_t *)&unk_101676C10);
  uint64_t v22 = swift_allocObject();
  *(_OWORD *)(v22 + 16) = xmmword_10117FBE0;
  uint64_t v87 = (unsigned char *)v22;
  unint64_t v95 = sub_1005057FC(&qword_101670F30);
  uint64_t v23 = *(void *)(v95 - 8);
  uint64_t v24 = *(void (**)(unsigned char *, uint64_t, uint64_t, unint64_t))(v23 + 56);
  uint64_t v25 = v23 + 56;
  v24(v13, 1, 5, v95);
  uint64_t v88 = v25;
  uint64_t v90 = v24;
  uint64_t v94 = v7;
  swift_storeEnumTagMultiPayload();
  uint64_t v26 = (char *)objc_allocWithZone(v20);
  *(void *)&v26[OBJC_IVAR____TtC8Freeform32CRLBoardLibraryViewModelItemNode_children] = _swiftEmptyArrayStorage;
  uint64_t v27 = v91;
  sub_100F38118((uint64_t)v13, (uint64_t)&v26[OBJC_IVAR____TtC8Freeform32CRLBoardLibraryViewModelItemNode_item], v91);
  v104.id receiver = v26;
  v104.uint64_t super_class = v20;
  [super init];
  int64_t v29 = v89;
  sub_100F38180((uint64_t)v13, v89);
  *(void *)(v22 + 32) = v28;
  unint64_t v30 = v95;
  v24(v13, 2, 5, v95);
  swift_storeEnumTagMultiPayload();
  uint64_t v31 = (char *)objc_allocWithZone(v20);
  *(void *)&v31[OBJC_IVAR____TtC8Freeform32CRLBoardLibraryViewModelItemNode_children] = _swiftEmptyArrayStorage;
  unint64_t v32 = v27;
  sub_100F38118((uint64_t)v13, (uint64_t)&v31[OBJC_IVAR____TtC8Freeform32CRLBoardLibraryViewModelItemNode_item], v27);
  v103.id receiver = v31;
  v103.uint64_t super_class = v20;
  [super init];
  uint64_t v34 = v29;
  sub_100F38180((uint64_t)v13, v29);
  uint64_t v35 = v87;
  *((void *)v87 + 5) = v33;
  uint64_t v36 = v90;
  v90(v13, 4, 5, v30);
  swift_storeEnumTagMultiPayload();
  uint64_t v37 = (char *)objc_allocWithZone(v20);
  *(void *)&v37[OBJC_IVAR____TtC8Freeform32CRLBoardLibraryViewModelItemNode_children] = _swiftEmptyArrayStorage;
  sub_100F38118((uint64_t)v13, (uint64_t)&v37[OBJC_IVAR____TtC8Freeform32CRLBoardLibraryViewModelItemNode_item], v32);
  v102.id receiver = v37;
  v102.uint64_t super_class = v20;
  id v38 = [super init];
  sub_100F38180((uint64_t)v13, v29);
  *((void *)v35 + 6) = v38;
  v36(v13, 3, 5, v95);
  uint64_t v39 = v85;
  swift_storeEnumTagMultiPayload();
  uint64_t v40 = (char *)objc_allocWithZone(v20);
  *(void *)&v40[OBJC_IVAR____TtC8Freeform32CRLBoardLibraryViewModelItemNode_children] = _swiftEmptyArrayStorage;
  sub_100F38118((uint64_t)v13, (uint64_t)&v40[OBJC_IVAR____TtC8Freeform32CRLBoardLibraryViewModelItemNode_item], v32);
  v101.id receiver = v40;
  v101.uint64_t super_class = v20;
  id v41 = [super init];
  uint64_t v90 = (void (*)(unsigned char *, uint64_t, uint64_t, unint64_t))v13;
  sub_100F38180((uint64_t)v13, v34);
  *((void *)v35 + 7) = v41;
  v96[0] = v35;
  specialized Array._endMutation()();
  char v89 = (uint64_t (*)(uint64_t))v20;
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v39 setChildren:isa];

  uint64_t v43 = swift_allocObject();
  *(_OWORD *)(v43 + 16) = xmmword_101177E70;
  *(void *)(v43 + 32) = v39;
  v96[0] = v43;
  specialized Array._endMutation()();
  unint64_t v44 = v96[0];
  uint64_t v80 = v15;
  *(void *)&v15[OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_storeHierarchySnapshot] = v96[0];
  uint64_t v45 = swift_allocObject();
  uint64_t v92 = v45;
  *(unsigned char *)(v45 + 16) = 0;
  uint64_t v46 = (unsigned char *)(v45 + 16);
  v96[0] = _swiftEmptyArrayStorage;
  if (v44 >> 62)
  {
LABEL_32:
    swift_bridgeObjectRetain_n();
    uint64_t v79 = v39;
    id v47 = (uint64_t (*)(uint64_t))_CocoaArrayWrapper.endIndex.getter();
  }
  else
  {
    id v47 = *(uint64_t (**)(uint64_t))((v44 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain_n();
    NSString v48 = v39;
  }
  uint64_t v49 = (uint64_t)v93;
  uint64_t v91 = v47;
  if (v47)
  {
    unint64_t v95 = v44 & 0xC000000000000001;
    swift_beginAccess();
    uint64_t v86 = v49 + 8;
    uint64_t v50 = 4;
    uint64_t v39 = v91;
    uint64_t v88 = v44;
    uint64_t v87 = v46;
    while (1)
    {
      if (v95) {
        id v51 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v51 = *(id *)(v44 + 8 * v50);
      }
      uint64_t v52 = v51;
      uint64_t v53 = (uint64_t (*)(uint64_t))(v50 - 3);
      if (__OFADD__(v50 - 4, 1))
      {
        __break(1u);
        goto LABEL_32;
      }
      if (*v46 != 1)
      {
        uint64_t v54 = (uint64_t)v51 + OBJC_IVAR____TtC8Freeform32CRLBoardLibraryViewModelItemNode_item;
        sub_100F38118((uint64_t)v51 + OBJC_IVAR____TtC8Freeform32CRLBoardLibraryViewModelItemNode_item, v49, type metadata accessor for CRLBoardLibraryViewModel.Item);
        if (swift_getEnumCaseMultiPayload() != 2)
        {
          sub_100F38180(v49, type metadata accessor for CRLBoardLibraryViewModel.Item);
          id v55 = (void (*)(void, void, void, void))v90;
          sub_100F38118(v54, (uint64_t)v90, type metadata accessor for CRLBoardLibraryViewModel.Item);
          uint64_t v56 = (objc_class *)v89;
          uint64_t v57 = (char *)objc_allocWithZone((Class)v89);
          *(void *)&v57[OBJC_IVAR____TtC8Freeform32CRLBoardLibraryViewModelItemNode_children] = _swiftEmptyArrayStorage;
          sub_100F38118((uint64_t)v55, (uint64_t)&v57[OBJC_IVAR____TtC8Freeform32CRLBoardLibraryViewModelItemNode_item], type metadata accessor for CRLBoardLibraryViewModel.Item);
          v100.id receiver = v57;
          v100.uint64_t super_class = v56;
          id v58 = [super init];
          sub_100F38180((uint64_t)v55, type metadata accessor for CRLBoardLibraryViewModel.Item);
          id v59 = [v52 children];
          unint64_t v60 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

          sub_100F29514(v60, v92, (uint64_t (*)(void, void))sub_1008E92D4, 0);
          swift_bridgeObjectRelease();
          Class v61 = Array._bridgeToObjectiveC()().super.isa;
          swift_bridgeObjectRelease();
          [v58 setChildren:v61];

          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
          if (*(void *)((v96[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v96[0] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          }
          specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized Array._endMutation()();
          uint64_t v49 = (uint64_t)v93;
          unint64_t v44 = v88;
          uint64_t v46 = v87;
          uint64_t v39 = v91;
          goto LABEL_7;
        }
        sub_1005057FC(&qword_101677100);
        swift_bridgeObjectRelease();
        sub_100F38180(v49, type metadata accessor for CRLBoardIdentifier);
      }

LABEL_7:
      ++v50;
      if (v53 == v39)
      {
        swift_bridgeObjectRelease();
        uint64_t v62 = (double *)v96[0];
        uint64_t v39 = v85;
        goto LABEL_19;
      }
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v62 = _swiftEmptyArrayStorage;
LABEL_19:
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v63 = v80;
  *(void *)&v80[OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_storeFolderHierarchySnapshot] = v62;

  v99.id receiver = v63;
  v99.uint64_t super_class = ObjectType;
  id v64 = [super init];
  type metadata accessor for CRLBoardEntityStore();
  uint64_t v65 = swift_allocObject();
  uint64_t v66 = (char *)v64;
  swift_defaultActor_initialize();
  swift_unknownObjectWeakInit();
  *(void *)(v65 + 120) = sub_100A3AD24((uint64_t)_swiftEmptyArrayStorage);
  swift_unknownObjectWeakAssign();
  *(void *)&v66[OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_entityStore] = v65;
  swift_release();
  sub_100EE999C();
  if (qword_10166FA60 != -1) {
    swift_once();
  }
  swift_beginAccess();
  id v67 = (id)static OS_os_log.crlBoardLibrary;
  uint64_t v68 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v67, (uint64_t)&_mh_execute_header, v68, (uint64_t)"CRLBoardLibrary: Initializing and registering synced app model.", 63, 2, (uint64_t)_swiftEmptyArrayStorage);

  *(void *)(*(void *)&v66[OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_opportunisticGroupSessionManager] + 32) = &off_101532D18;
  swift_unknownObjectWeakAssign();
  uint64_t v97 = &type metadata for CRLFeatureFlags;
  unint64_t v69 = sub_1005396A8();
  unint64_t v98 = v69;
  LOBYTE(v96[0]) = 12;
  char v70 = isFeatureEnabled(_:)();
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v96);
  if (v70)
  {
    if (qword_10166FAE0 != -1) {
      swift_once();
    }
    swift_beginAccess();
    id v71 = (id)static OS_os_log.crlFollow;
    uint64_t v72 = static os_log_type_t.default.getter();
    sub_100BAC898((uint64_t)v71, (uint64_t)&_mh_execute_header, v72, (uint64_t)"Follow feature flag is enabled.", 31, 2, (uint64_t)_swiftEmptyArrayStorage);
  }
  uint64_t v97 = &type metadata for CRLFeatureFlags;
  unint64_t v98 = v69;
  LOBYTE(v96[0]) = 1;
  char v73 = isFeatureEnabled(_:)();
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v96);
  if (v73)
  {
    type metadata accessor for CRLAASApplicationTracker();
    uint64_t v74 = swift_allocObject();
    *(void *)&long long v75 = -1;
    *((void *)&v75 + 1) = -1;
    *(_OWORD *)(v74 + 16) = v75;
    *(_OWORD *)(v74 + 32) = v75;
    *(void *)(v74 + 48) = -1;
    *(void *)(v74 + 56) = 0;
    if (qword_10166EDC8 != -1) {
      swift_once();
    }
    uint64_t v76 = static AASApplicationManager.shared;
    uint64_t v77 = swift_retain();
    sub_100F29198(v77, v76);

    swift_release();
    swift_release();
    swift_release();
    *(void *)&v66[OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_appAnalyticsApplicationTracker] = v74;
  }
  else
  {

    swift_release();
  }
  swift_release();
  return v66;
}

uint64_t sub_100EE999C()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1005057FC((uint64_t *)&unk_1016741D0);
  __chkstk_darwin(v2 - 8, v3);
  uint64_t v5 = (char *)v59 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for CRLBoardViewModelMetadata(0);
  unint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6, v8);
  uint64_t v65 = (char *)v59 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for CRLBoardIdentifier(0);
  __chkstk_darwin(v10 - 8, v11);
  id v67 = (char *)v59 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v72 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  uint64_t v14 = __chkstk_darwin(v72, v13);
  char v70 = (char *)v59 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14, v16);
  uint64_t v18 = (char *)v59 - v17;
  uint64_t v19 = type metadata accessor for CRLBoardLibraryViewModel.Folder(0);
  uint64_t v21 = __chkstk_darwin(v19 - 8, v20);
  uint64_t v63 = (uint64_t)v59 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21, v23);
  uint64_t v62 = (uint64_t)v59 - v24;
  unint64_t v25 = *(void *)(v0 + OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_storeHierarchySnapshot);
  swift_bridgeObjectRetain();
  unint64_t v26 = sub_100A3A5C8((uint64_t)_swiftEmptyArrayStorage);
  unint64_t v74 = v25;
  unint64_t v60 = v26;
  if (v25 >> 62) {
    goto LABEL_52;
  }
  uint64_t v27 = *(void *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v27)
  {
    do
    {
      unint64_t v28 = v25;
      unint64_t v25 = 0;
      uint64_t v68 = (void (**)(char *, void, uint64_t, uint64_t))(v7 + 56);
      unint64_t v69 = v70 + 8;
      int64_t v29 = &selRef_beginHandwritingModeIfNeeded;
      id v64 = (double *)v60;
      v59[1] = v28;
      unint64_t v7 = v28;
      Class v61 = v18;
      while (1)
      {
        unint64_t v30 = v7 >> 62;
        if (!(v7 >> 62)) {
          break;
        }
        unint64_t v32 = v29;
        swift_bridgeObjectRetain();
        uint64_t v33 = _CocoaArrayWrapper.endIndex.getter();
        uint64_t result = swift_bridgeObjectRelease();
        if (!v33)
        {
          __break(1u);
          return result;
        }
        swift_bridgeObjectRetain();
        uint64_t v35 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        int64_t v29 = v32;
        if (!v35) {
          goto LABEL_48;
        }
LABEL_6:
        if ((v7 & 0xC000000000000001) != 0)
        {
          id v66 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          if (!v30) {
            goto LABEL_9;
          }
        }
        else
        {
          if (!*(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
            goto LABEL_49;
          }
          id v66 = *(id *)(v7 + 32);
          if (!v30)
          {
LABEL_9:
            uint64_t v31 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
            goto LABEL_15;
          }
        }
        swift_bridgeObjectRetain();
        uint64_t v31 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
LABEL_15:
        if (!v31) {
          goto LABEL_50;
        }
        sub_100F4CA70(0, 1);
        id v36 = v66;
        id v37 = [v66 v29[498]];
        type metadata accessor for CRLBoardLibraryViewModelItemNode();
        id v38 = v29;
        unint64_t v39 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

        sub_100F49364(0, 0, v39);
        sub_100F38118((uint64_t)v36 + OBJC_IVAR____TtC8Freeform32CRLBoardLibraryViewModelItemNode_item, (uint64_t)v18, type metadata accessor for CRLBoardLibraryViewModel.Item);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          uint64_t v40 = v62;
          sub_100F37878((uint64_t)v18, v62, type metadata accessor for CRLBoardLibraryViewModel.Folder);
          sub_100F38118(v40, v63, type metadata accessor for CRLBoardLibraryViewModel.Folder);
          id v41 = [v36 v38[498]];
          unint64_t v42 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

          char v73 = _swiftEmptyArrayStorage;
          if (v42 >> 62)
          {
            swift_bridgeObjectRetain();
            uint64_t v43 = _CocoaArrayWrapper.endIndex.getter();
            swift_bridgeObjectRelease();
          }
          else
          {
            uint64_t v43 = *(void *)((v42 & 0xFFFFFFFFFFFFFF8) + 0x10);
          }
          unint64_t v7 = (unint64_t)v67;
          uint64_t v44 = (uint64_t)v70;
          if (v43)
          {
            if (v43 < 1) {
              goto LABEL_51;
            }
            uint64_t v45 = 0;
            unint64_t v71 = v42 & 0xC000000000000001;
            unint64_t v46 = v42;
            do
            {
              if (v71) {
                id v47 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
              }
              else {
                id v47 = *(id *)(v42 + 8 * v45 + 32);
              }
              NSString v48 = v47;
              sub_100F38118((uint64_t)v47 + OBJC_IVAR____TtC8Freeform32CRLBoardLibraryViewModelItemNode_item, v44, type metadata accessor for CRLBoardLibraryViewModel.Item);
              if (swift_getEnumCaseMultiPayload() == 2)
              {
                sub_1005057FC(&qword_101677100);
                swift_bridgeObjectRelease();
                sub_100F37878(v44, v7, type metadata accessor for CRLBoardIdentifier);
                sub_100ED7F04(v7, (uint64_t)v5);
                (*v68)(v5, 0, 1, v6);
                uint64_t v49 = v65;
                sub_100F37878((uint64_t)v5, (uint64_t)v65, type metadata accessor for CRLBoardViewModelMetadata);
                char v50 = *v49;
                uint64_t v51 = (uint64_t)v49;
                unint64_t v7 = (unint64_t)v67;
                sub_100F38180(v51, type metadata accessor for CRLBoardViewModelMetadata);
                sub_100F38180(v7, type metadata accessor for CRLBoardIdentifier);
                if (v50)
                {
                }
                else
                {
                  specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
                  specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
                  unint64_t v7 = (unint64_t)v67;
                  specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
                  specialized ContiguousArray._endMutation()();
                }
                uint64_t v44 = (uint64_t)v70;
              }
              else
              {
                sub_100F38180(v44, type metadata accessor for CRLBoardLibraryViewModel.Item);
              }
              ++v45;
              unint64_t v42 = v46;
            }
            while (v43 != v45);
            swift_bridgeObjectRelease();
            unint64_t v52 = (unint64_t)v73;
            uint64_t v18 = v61;
            if (((unint64_t)v73 & 0x8000000000000000) != 0)
            {
LABEL_45:
              swift_bridgeObjectRetain();
              uint64_t v53 = _CocoaArrayWrapper.endIndex.getter();
              swift_release();
              goto LABEL_38;
            }
          }
          else
          {
            swift_bridgeObjectRelease();
            unint64_t v52 = (unint64_t)_swiftEmptyArrayStorage;
            if (((unint64_t)_swiftEmptyArrayStorage & 0x8000000000000000) != 0) {
              goto LABEL_45;
            }
          }
          if ((v52 & 0x4000000000000000) != 0) {
            goto LABEL_45;
          }
          uint64_t v53 = *(void *)(v52 + 16);
LABEL_38:
          swift_release();
          uint64_t v54 = v64;
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          char v73 = v54;
          uint64_t v56 = v63;
          sub_1009750A0(v53, v63, isUniquelyReferenced_nonNull_native);
          id v64 = v73;
          swift_bridgeObjectRelease();
          sub_100F38180(v56, type metadata accessor for CRLBoardLibraryViewModel.Folder);
          sub_100F38180(v62, type metadata accessor for CRLBoardLibraryViewModel.Folder);
          int64_t v29 = &selRef_beginHandwritingModeIfNeeded;
          goto LABEL_39;
        }
        sub_100F38180((uint64_t)v18, type metadata accessor for CRLBoardLibraryViewModel.Item);
        int64_t v29 = v38;
LABEL_39:

        unint64_t v7 = v74;
        if (v74 >> 62)
        {
          swift_bridgeObjectRetain();
          uint64_t v57 = _CocoaArrayWrapper.endIndex.getter();
          swift_bridgeObjectRelease();
          if (!v57)
          {
LABEL_46:
            swift_bridgeObjectRelease();
            unint64_t v58 = (unint64_t)v64;
            goto LABEL_54;
          }
        }
        else if (!*(void *)((v74 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          goto LABEL_46;
        }
      }
      if (*(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        goto LABEL_6;
      }
      __break(1u);
LABEL_48:
      __break(1u);
LABEL_49:
      __break(1u);
LABEL_50:
      __break(1u);
LABEL_51:
      __break(1u);
LABEL_52:
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    while (_CocoaArrayWrapper.endIndex.getter());
  }
  swift_bridgeObjectRelease();
  unint64_t v58 = v60;
LABEL_54:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(void *)(v1 + OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_storeFolderBoardCount) = v58;
  uint64_t result = swift_bridgeObjectRelease();
  if (*(void *)(v1 + OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_appAnalyticsApplicationTracker))
  {
    swift_retain();
    sub_1008E6BAC(v1);
    return swift_release();
  }
  return result;
}

id sub_100EEA2C4()
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  sub_100EEA30C();
  v3.id receiver = v0;
  v3.uint64_t super_class = ObjectType;
  return [super dealloc];
}

void sub_100EEA30C()
{
  id v1 = [self defaultCenter];
  id v3 = v1;
  if (qword_10166FE00 != -1)
  {
    swift_once();
    id v1 = v3;
  }
  uint64_t v2 = *(void *)(v0 + OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_store);
  [v1 removeObserver:v0 name:qword_10171C2F8 object:v2];
  if (qword_10166FE08 != -1) {
    swift_once();
  }
  [v3 removeObserver:v0 name:qword_10171C300 object:v2];
  if (qword_10166FE10 != -1) {
    swift_once();
  }
  [v3 removeObserver:v0 name:qword_10171C308 object:v2];
  if (qword_10166FE18 != -1) {
    swift_once();
  }
  [v3 removeObserver:v0 name:qword_10171C310 object:v2];
  if (qword_10166FE20 != -1) {
    swift_once();
  }
  [v3 removeObserver:v0 name:qword_10171C318 object:v2];
}

uint64_t sub_100EEA6E8()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_networkReachabilityListener;
  swift_beginAccess();
  sub_100522E9C(v1, (uint64_t)&v5, &qword_1016791E0);
  if (!*((void *)&v6 + 1)) {
    return sub_100522F00((uint64_t)&v5, &qword_1016791E0);
  }
  sub_10053974C(&v5, (uint64_t)v8);
  sub_10050F848(v8, v8[3]);
  OS_dispatch_queue.sync<A>(execute:)();
  uint64_t v2 = (void *)(v0 + OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_networkReachabilityListenerSubscriptionSet);
  swift_beginAccess();
  uint64_t v3 = swift_bridgeObjectRetain();
  sub_100ED4CE0(v3);
  swift_bridgeObjectRelease();
  *uint64_t v2 = &_swiftEmptySetSingleton;
  swift_bridgeObjectRelease();
  uint64_t v7 = 0;
  long long v5 = 0u;
  long long v6 = 0u;
  swift_beginAccess();
  sub_1006063BC((uint64_t)&v5, v1, &qword_1016791E0);
  swift_endAccess();
  return _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v8);
}

uint64_t sub_100EEA8DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, char a6, uint64_t a7)
{
  *(unsigned char *)(v7 + 386) = a6;
  *(unsigned char *)(v7 + 385) = a5;
  *(void *)(v7 + 192) = a4;
  *(void *)(v7 + 200) = a7;
  sub_1005057FC((uint64_t *)&unk_1016741D0);
  *(void *)(v7 + 208) = swift_task_alloc();
  uint64_t v8 = type metadata accessor for CRLBoardViewModelMetadata(0);
  *(void *)(v7 + 216) = v8;
  *(void *)(v7 + 224) = *(void *)(v8 - 8);
  *(void *)(v7 + 232) = swift_task_alloc();
  type metadata accessor for CRLBoardCRDTData(0);
  *(void *)(v7 + 240) = swift_task_alloc();
  type metadata accessor for UUID();
  *(void *)(v7 + 248) = swift_task_alloc();
  uint64_t v9 = *(void *)(type metadata accessor for CRLBoardIdentifier(0) - 8);
  *(void *)(v7 + 256) = v9;
  *(void *)(v7 + 264) = *(void *)(v9 + 64);
  *(void *)(v7 + 272) = swift_task_alloc();
  *(void *)(v7 + 280) = swift_task_alloc();
  *(void *)(v7 + 288) = swift_task_alloc();
  type metadata accessor for MainActor();
  *(void *)(v7 + 296) = static MainActor.shared.getter();
  uint64_t v11 = dispatch thunk of Actor.unownedExecutor.getter();
  *(void *)(v7 + 304) = v11;
  *(void *)(v7 + 312) = v10;
  return _swift_task_switch(sub_100EEAADC, v11, v10);
}

uint64_t sub_100EEAADC()
{
  uint64_t v1 = *(void *)(v0 + 288);
  uint64_t v2 = *(void *)(v0 + 240);
  uint64_t v3 = *(void *)(v0 + 248);
  uint64_t v4 = *(void *)(v0 + 192);
  uint64_t v5 = OBJC_IVAR____TtC8Freeform8CRLBoard_data;
  uint64_t v6 = *(void *)(v4 + OBJC_IVAR____TtC8Freeform8CRLBoard_data) + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
  swift_beginAccess();
  sub_100F38118(v6, v2, type metadata accessor for CRLBoardCRDTData);
  swift_retain();
  *(void *)(v0 + 320) = sub_1005057FC(&qword_101674550);
  CRRegister.wrappedValue.getter();
  sub_100F38180(v2, type metadata accessor for CRLBoardCRDTData);
  swift_release();
  uint64_t v7 = (uint64_t *)(*(void *)(v4 + v5) + OBJC_IVAR____TtC8Freeform12CRLBoardData_ownerName);
  uint64_t v8 = *v7;
  unint64_t v9 = v7[1];
  swift_bridgeObjectRetain();
  sub_100753370(v3, v8, v9, v1);
  uint64_t v10 = *(void **)(*(void *)(v4 + OBJC_IVAR____TtC8Freeform8CRLBoard_shareState) + 16);
  *(void *)(v0 + 328) = v10;
  if (v10)
  {
    id v11 = [v10 currentUserParticipant];
    int v12 = *(unsigned __int8 *)(v0 + 385);
    if (v11)
    {
      uint64_t v13 = v11;
      id v14 = [v11 role];

      BOOL v15 = 0;
      if (v14 == (id)1) {
        char v16 = 1;
      }
      else {
        char v16 = v12;
      }
      if (!v12 || v14 == (id)1) {
        goto LABEL_27;
      }
    }
    else if (!*(unsigned char *)(v0 + 385))
    {
      BOOL v15 = 0;
      char v16 = 0;
      goto LABEL_27;
    }
    int v30 = *(unsigned __int8 *)(v0 + 386);
    char v16 = 0;
    BOOL v15 = v30 == 2 || (v30 & 1) == 0;
LABEL_27:
    *(unsigned char *)(v0 + 388) = v16;
    *(unsigned char *)(v0 + 387) = v15;
    uint64_t v31 = *(void **)(v0 + 192);
    *(void *)(v0 + 16) = v0;
    *(void *)(v0 + 56) = v0 + 384;
    *(void *)(v0 + 24) = sub_100EEB0C8;
    uint64_t v32 = swift_continuation_init();
    *(void *)(v0 + 80) = _NSConcreteStackBlock;
    *(void *)(v0 + 88) = 0x40000000;
    *(void *)(v0 + 96) = sub_100A93014;
    *(void *)(v0 + 104) = &unk_101533048;
    *(void *)(v0 + 112) = v32;
    [v31 hasUnsyncedChangesWithCompletionHandler:v0 + 80];
    return _swift_continuation_await(v0 + 16);
  }
  uint64_t v17 = sub_100EEBC0C(*(void *)(v0 + 288));
  *(void *)(v0 + 336) = v17;
  if (!((unint64_t)v17 >> 62))
  {
    uint64_t v18 = *(void *)(((unint64_t)v17 & 0xFFFFFFFFFFFFFF8) + 0x10);
    *(void *)(v0 + 344) = v18;
    if (v18) {
      goto LABEL_11;
    }
LABEL_36:
    uint64_t v35 = *(void *)(v0 + 288);
    swift_release();
    swift_bridgeObjectRelease();
    sub_100F38180(v35, type metadata accessor for CRLBoardIdentifier);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    id v36 = *(uint64_t (**)(void))(v0 + 8);
    return v36();
  }
LABEL_35:
  uint64_t v34 = _CocoaArrayWrapper.endIndex.getter();
  *(void *)(v0 + 344) = v34;
  if (!v34) {
    goto LABEL_36;
  }
LABEL_11:
  unint64_t v19 = 0;
  while (1)
  {
    uint64_t v21 = *(void *)(v0 + 336);
    if ((v21 & 0xC000000000000001) != 0)
    {
      id v22 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else
    {
      if (v19 >= *(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        goto LABEL_34;
      }
      id v22 = *(id *)(v21 + 8 * v19 + 32);
    }
    uint64_t v23 = v22;
    unint64_t v24 = v19 + 1;
    *(void *)(v0 + 352) = v22;
    *(void *)(v0 + 360) = v19 + 1;
    if (__OFADD__(v19, 1))
    {
      __break(1u);
LABEL_34:
      __break(1u);
      goto LABEL_35;
    }
    if (qword_10166FA60 != -1) {
      swift_once();
    }
    swift_beginAccess();
    id v25 = (id)static OS_os_log.crlBoardLibrary;
    uint64_t v26 = static os_log_type_t.default.getter();
    sub_100BAC898((uint64_t)v25, (uint64_t)&_mh_execute_header, v26, (uint64_t)"Close view controller because the board has been deleted or removed.", 68, 2, (uint64_t)_swiftEmptyArrayStorage);

    sub_100ED7F04(*(void *)(v0 + 288), *(void *)(v0 + 208));
    *(void *)(v0 + 368) = 0;
    uint64_t v27 = *(void *)(v0 + 232);
    uint64_t v29 = *(void *)(v0 + 208);
    uint64_t v28 = *(void *)(v0 + 216);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v0 + 224) + 56))(v29, 0, 1, v28);
    sub_100F37878(v29, v27, type metadata accessor for CRLBoardViewModelMetadata);
    LODWORD(v28) = *(unsigned __int8 *)(v27 + *(int *)(v28 + 40));
    sub_100F38180(v27, type metadata accessor for CRLBoardViewModelMetadata);
    if (v28 == 1) {
      break;
    }
    uint64_t v20 = *(void *)(v0 + 344);
    sub_100E500C4(*(void *)(v0 + 288));

    ++v19;
    if (v24 == v20) {
      goto LABEL_36;
    }
  }
  sub_100E3E52C();
  uint64_t v33 = (void *)swift_task_alloc();
  *(void *)(v0 + 376) = v33;
  void *v33 = v0;
  v33[1] = sub_100EEB78C;
  return sub_100E4BF58();
}

uint64_t sub_100EEB0C8()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 312);
  uint64_t v2 = *(void *)(*(void *)v0 + 304);
  return _swift_task_switch(sub_100EEB1D0, v2, v1);
}

uint64_t sub_100EEB1D0()
{
  if (*(unsigned char *)(v0 + 384)) {
    char v1 = *(unsigned char *)(v0 + 388) ^ 1 | *(unsigned char *)(v0 + 387);
  }
  else {
    char v1 = *(unsigned char *)(v0 + 387);
  }
  uint64_t v2 = sub_100EEBC0C(*(void *)(v0 + 288));
  *(void *)(v0 + 336) = v2;
  if (!((unint64_t)v2 >> 62))
  {
    uint64_t v3 = *(void *)(((unint64_t)v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    *(void *)(v0 + 344) = v3;
    if (v3) {
      goto LABEL_6;
    }
LABEL_25:
    uint64_t v32 = *(void *)(v0 + 288);
    swift_release();
    swift_bridgeObjectRelease();
    sub_100F38180(v32, type metadata accessor for CRLBoardIdentifier);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v33 = *(uint64_t (**)(void))(v0 + 8);
    return v33();
  }
LABEL_24:
  uint64_t v31 = _CocoaArrayWrapper.endIndex.getter();
  *(void *)(v0 + 344) = v31;
  if (!v31) {
    goto LABEL_25;
  }
LABEL_6:
  unint64_t v4 = 0;
  uint64_t v5 = &qword_10166F000;
  while (1)
  {
    while (1)
    {
      uint64_t v19 = *(void *)(v0 + 336);
      if ((v19 & 0xC000000000000001) != 0)
      {
        uint64_t v20 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        if (v4 >= *(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          goto LABEL_23;
        }
        uint64_t v20 = (char *)*(id *)(v19 + 8 * v4 + 32);
      }
      uint64_t v21 = v20;
      BOOL v22 = __OFADD__(v4++, 1);
      *(void *)(v0 + 352) = v20;
      *(void *)(v0 + 360) = v4;
      if (v22)
      {
        __break(1u);
LABEL_23:
        __break(1u);
        goto LABEL_24;
      }
      if (v5[332] != -1) {
        swift_once();
      }
      swift_beginAccess();
      id v23 = (id)static OS_os_log.crlBoardLibrary;
      uint64_t v24 = static os_log_type_t.default.getter();
      sub_100BAC898((uint64_t)v23, (uint64_t)&_mh_execute_header, v24, (uint64_t)"Close view controller because the board has been deleted or removed.", 68, 2, (uint64_t)_swiftEmptyArrayStorage);

      if ((v1 & 1) == 0) {
        break;
      }
      uint64_t v34 = *(void *)(v0 + 280);
      uint64_t v35 = *(void *)(v0 + 272);
      uint64_t v6 = *(void *)(v0 + 248);
      uint64_t v36 = *(void *)(v0 + 256);
      uint64_t v7 = *(char **)(*(void *)&v21[OBJC_IVAR____TtC8Freeform25CRLiOSBoardViewController_editingCoordinator]
                    + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard);
      uint64_t v8 = *(void *)(v0 + 240);
      uint64_t v9 = OBJC_IVAR____TtC8Freeform8CRLBoard_data;
      uint64_t v10 = *(void *)&v7[OBJC_IVAR____TtC8Freeform8CRLBoard_data] + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
      swift_beginAccess();
      sub_100F38118(v10, v8, type metadata accessor for CRLBoardCRDTData);
      id v11 = v7;
      swift_retain();
      CRRegister.wrappedValue.getter();
      sub_100F38180(v8, type metadata accessor for CRLBoardCRDTData);
      swift_release();
      int v12 = (uint64_t *)(*(void *)&v7[v9] + OBJC_IVAR____TtC8Freeform12CRLBoardData_ownerName);
      uint64_t v13 = *v12;
      unint64_t v14 = v12[1];
      swift_bridgeObjectRetain();
      uint64_t v15 = v6;
      uint64_t v5 = &qword_10166F000;
      sub_100753370(v15, v13, v14, v34);

      sub_100F38118(v34, v35, type metadata accessor for CRLBoardIdentifier);
      unint64_t v16 = (*(unsigned __int8 *)(v36 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80);
      uint64_t v17 = swift_allocObject();
      *(void *)(v17 + 16) = v21;
      sub_100F37878(v35, v17 + v16, type metadata accessor for CRLBoardIdentifier);
      uint64_t v18 = v21;
      sub_100E50694((uint64_t)sub_100F35ED8, v17);
      swift_release();
      sub_100F38180(v34, type metadata accessor for CRLBoardIdentifier);

      char v1 = 0;
      unint64_t v4 = *(void *)(v0 + 360);
      if (v4 == *(void *)(v0 + 344)) {
        goto LABEL_25;
      }
    }
    sub_100ED7F04(*(void *)(v0 + 288), *(void *)(v0 + 208));
    *(void *)(v0 + 368) = 0;
    uint64_t v25 = *(void *)(v0 + 232);
    uint64_t v27 = *(void *)(v0 + 208);
    uint64_t v26 = *(void *)(v0 + 216);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v0 + 224) + 56))(v27, 0, 1, v26);
    sub_100F37878(v27, v25, type metadata accessor for CRLBoardViewModelMetadata);
    LODWORD(v26) = *(unsigned __int8 *)(v25 + *(int *)(v26 + 40));
    sub_100F38180(v25, type metadata accessor for CRLBoardViewModelMetadata);
    if (v26 == 1) {
      break;
    }
    uint64_t v28 = *(void *)(v0 + 344);
    sub_100E500C4(*(void *)(v0 + 288));

    char v1 = 0;
    if (v4 == v28) {
      goto LABEL_25;
    }
  }
  sub_100E3E52C();
  uint64_t v29 = (void *)swift_task_alloc();
  *(void *)(v0 + 376) = v29;
  void *v29 = v0;
  v29[1] = sub_100EEB78C;
  return sub_100E4BF58();
}

uint64_t sub_100EEB78C()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 312);
  uint64_t v3 = *(void *)(v1 + 304);
  return _swift_task_switch(sub_100EEB8AC, v3, v2);
}

void sub_100EEB8AC()
{
  unint64_t v1 = *(void *)(v0 + 360);
  if (v1 == *(void *)(v0 + 344))
  {
LABEL_2:
    uint64_t v2 = *(void *)(v0 + 288);
    swift_release();
    swift_bridgeObjectRelease();
    sub_100F38180(v2, type metadata accessor for CRLBoardIdentifier);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v3 = *(void (**)(void))(v0 + 8);
    v3();
    return;
  }
  uint64_t v4 = *(void *)(v0 + 368);
  while (1)
  {
    uint64_t v9 = *(void *)(v0 + 336);
    if ((v9 & 0xC000000000000001) != 0)
    {
      id v10 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else
    {
      if (v1 >= *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        goto LABEL_21;
      }
      id v10 = *(id *)(v9 + 8 * v1 + 32);
    }
    id v11 = v10;
    unint64_t v12 = v1 + 1;
    *(void *)(v0 + 352) = v10;
    *(void *)(v0 + 360) = v1 + 1;
    if (__OFADD__(v1, 1))
    {
      __break(1u);
LABEL_21:
      __break(1u);
      return;
    }
    if (qword_10166FA60 != -1) {
      swift_once();
    }
    swift_beginAccess();
    id v13 = (id)static OS_os_log.crlBoardLibrary;
    uint64_t v14 = static os_log_type_t.default.getter();
    sub_100BAC898((uint64_t)v13, (uint64_t)&_mh_execute_header, v14, (uint64_t)"Close view controller because the board has been deleted or removed.", 68, 2, (uint64_t)_swiftEmptyArrayStorage);

    sub_100ED7F04(*(void *)(v0 + 288), *(void *)(v0 + 208));
    *(void *)(v0 + 368) = v4;
    if (!v4) {
      break;
    }
    uint64_t v5 = *(void *)(v0 + 216);
    uint64_t v6 = *(void *)(v0 + 224);
    uint64_t v7 = *(void *)(v0 + 208);
    swift_errorRelease();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(v7, 1, 1, v5);
    sub_100522F00(v7, (uint64_t *)&unk_1016741D0);
LABEL_7:
    uint64_t v8 = *(void *)(v0 + 344);
    sub_100E500C4(*(void *)(v0 + 288));

    uint64_t v4 = 0;
    ++v1;
    if (v12 == v8) {
      goto LABEL_2;
    }
  }
  uint64_t v15 = *(void *)(v0 + 232);
  uint64_t v17 = *(void *)(v0 + 208);
  uint64_t v16 = *(void *)(v0 + 216);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v0 + 224) + 56))(v17, 0, 1, v16);
  sub_100F37878(v17, v15, type metadata accessor for CRLBoardViewModelMetadata);
  LODWORD(v16) = *(unsigned __int8 *)(v15 + *(int *)(v16 + 40));
  sub_100F38180(v15, type metadata accessor for CRLBoardViewModelMetadata);
  if (v16 != 1) {
    goto LABEL_7;
  }
  sub_100E3E52C();
  uint64_t v18 = (void *)swift_task_alloc();
  *(void *)(v0 + 376) = v18;
  void *v18 = v0;
  v18[1] = sub_100EEB78C;
  sub_100E4BF58();
}

double *sub_100EEBC0C(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(v1 + OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_boardInfos);
  swift_beginAccess();
  uint64_t v4 = *v3;
  if (*(void *)(v4 + 16) && (unint64_t v5 = sub_1009563EC(a1), (v6 & 1) != 0))
  {
    uint64_t v7 = *(void *)(*(void *)(v4 + 56) + 8 * v5);
    swift_endAccess();
    id v8 = [*(id *)(v7 + 24) allObjects];
    type metadata accessor for CRLiOSBoardViewController();
    uint64_t v9 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
  }
  else
  {
    swift_endAccess();
    return _swiftEmptyArrayStorage;
  }
  return (double *)v9;
}

uint64_t sub_100EEBCCC(uint64_t a1)
{
  v2[17] = a1;
  v2[18] = v1;
  type metadata accessor for MainActor();
  v2[19] = static MainActor.shared.getter();
  uint64_t v4 = dispatch thunk of Actor.unownedExecutor.getter();
  v2[20] = v4;
  v2[21] = v3;
  return _swift_task_switch(sub_100EEBD64, v4, v3);
}

uint64_t sub_100EEBD64()
{
  uint64_t v1 = (uint64_t *)(v0[18] + OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_boardInfos);
  swift_beginAccess();
  uint64_t v2 = *v1;
  if (*(void *)(v2 + 16) && (unint64_t v3 = sub_1009563EC(v0[17]), (v4 & 1) != 0))
  {
    uint64_t v5 = *(void *)(*(void *)(v2 + 56) + 8 * v3);
    swift_endAccess();
    swift_retain();
    swift_release();
    if (qword_10166FA60 != -1) {
      swift_once();
    }
    swift_beginAccess();
    uint64_t v6 = (void *)static OS_os_log.crlBoardLibrary;
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_10117E810;
    id v8 = v6;
    uint64_t v9 = UUID.uuidString.getter();
    uint64_t v11 = v10;
    *(void *)(inited + 56) = &type metadata for String;
    *(void *)(inited + 64) = sub_100528BE4();
    *(void *)(inited + 32) = v9;
    *(void *)(inited + 40) = v11;
    uint64_t v12 = static os_log_type_t.default.getter();
    sub_100BAC898((uint64_t)v8, (uint64_t)&_mh_execute_header, v12, (uint64_t)"Reusing existing BoardInfo for identifier: %{public}@", 53, 2, inited);
    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();

    id v13 = (uint64_t (*)(uint64_t))v0[1];
    return v13(v5);
  }
  else
  {
    swift_endAccess();
    uint64_t v15 = (void *)swift_task_alloc();
    v0[22] = v15;
    *uint64_t v15 = v0;
    v15[1] = sub_100EEBFB8;
    uint64_t v16 = v0[17];
    return sub_100EEC738(v16);
  }
}

uint64_t sub_100EEBFB8(uint64_t a1)
{
  char v4 = *(void **)v2;
  *(void *)(*(void *)v2 + 184) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = v4[20];
    uint64_t v6 = v4[21];
    uint64_t v7 = sub_100EEC148;
  }
  else
  {
    v4[24] = a1;
    uint64_t v5 = v4[20];
    uint64_t v6 = v4[21];
    uint64_t v7 = sub_100EEC0E0;
  }
  return _swift_task_switch(v7, v5, v6);
}

uint64_t sub_100EEC0E0()
{
  swift_release();
  uint64_t v1 = *(void *)(v0 + 192);
  uint64_t v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v2(v1);
}

uint64_t sub_100EEC148()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

char *sub_100EEC1AC(uint64_t a1, void *a2)
{
  uint64_t v4 = type metadata accessor for CRLBoardCRDTData(0);
  __chkstk_darwin(v4 - 8, v5);
  uint64_t v52 = (uint64_t)&v51 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = type metadata accessor for UUID();
  uint64_t v54 = *(void *)(v55 - 8);
  __chkstk_darwin(v55, v7);
  uint64_t v9 = (char *)&v51 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for CRLBoardIdentifier(0);
  __chkstk_darwin(v10 - 8, v11);
  uint64_t v53 = (uint64_t)&v51 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v13 = *(void **)(a1 + 16);
  id v14 = objc_allocWithZone((Class)CRLInteractiveCanvasController);
  uint64_t v15 = v13;
  id v16 = a2;
  id v17 = [v14 init];
  id v18 = [objc_allocWithZone((Class)CRLiOSCanvasViewController) init];
  id v19 = objc_allocWithZone((Class)type metadata accessor for CRLiOSBoardViewController());
  uint64_t v20 = sub_100E3D328(v15, v16, v17, v18);
  [*(id *)(*(void *)&v15[OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_selectionDispatcher]+ OBJC_IVAR____TtC8Freeform22CRLSelectionDispatcher_receivers) addObject:v20];
  uint64_t v21 = *(void **)(a1 + 24);
  [v21 addObject:v20];
  if ((uint64_t)[v21 count] >= 2)
  {
    BOOL v22 = self;
    NSString v23 = String._bridgeToObjectiveC()();
    _s8Freeform23CRLAnalyticsFeatureUsedC14featurePayload3forSDySSSo8NSObjectCGAA0bC4NameO_tFZ_0(0);
    sub_10050BF48(0, (unint64_t *)&qword_101672E50);
    Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v22 sendEventInDomain:v23 lazily:1 eventPayload:isa];
  }
  if (qword_10166FA60 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v25 = (void *)static OS_os_log.crlBoardLibrary;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117D8C0;
  id v51 = v25;
  uint64_t v27 = v20;
  id v28 = [v27 description];
  uint64_t v29 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v31 = v30;

  *(void *)(inited + 56) = &type metadata for String;
  unint64_t v32 = sub_100528BE4();
  *(void *)(inited + 64) = v32;
  *(void *)(inited + 32) = v29;
  *(void *)(inited + 40) = v31;
  uint64_t v33 = *(char **)&v15[OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard];
  uint64_t v34 = OBJC_IVAR____TtC8Freeform8CRLBoard_data;
  uint64_t v35 = *(void *)&v33[OBJC_IVAR____TtC8Freeform8CRLBoard_data] + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
  swift_beginAccess();
  uint64_t v36 = v35;
  uint64_t v37 = v52;
  sub_100F38118(v36, v52, type metadata accessor for CRLBoardCRDTData);
  uint64_t v38 = v33;
  swift_retain();
  sub_1005057FC(&qword_101674550);
  CRRegister.wrappedValue.getter();
  sub_100F38180(v37, type metadata accessor for CRLBoardCRDTData);
  swift_release();
  unint64_t v39 = (uint64_t *)(*(void *)&v33[v34] + OBJC_IVAR____TtC8Freeform12CRLBoardData_ownerName);
  uint64_t v40 = *v39;
  unint64_t v41 = v39[1];
  swift_bridgeObjectRetain();
  uint64_t v42 = v53;
  sub_100753370((uint64_t)v9, v40, v41, v53);

  uint64_t v43 = v54;
  uint64_t v44 = v55;
  (*(void (**)(char *, uint64_t, uint64_t))(v54 + 16))(v9, v42, v55);
  sub_100F38180(v42, type metadata accessor for CRLBoardIdentifier);
  uint64_t v45 = UUID.uuidString.getter();
  uint64_t v47 = v46;
  (*(void (**)(char *, uint64_t))(v43 + 8))(v9, v44);
  *(void *)(inited + 96) = &type metadata for String;
  *(void *)(inited + 104) = v32;
  *(void *)(inited + 72) = v45;
  *(void *)(inited + 80) = v47;
  uint64_t v48 = static os_log_type_t.default.getter();
  id v49 = v51;
  sub_100BAC898((uint64_t)v51, (uint64_t)&_mh_execute_header, v48, (uint64_t)"Created view controller %@ for identifier: %{public}@", 53, 2, inited);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  return v27;
}

uint64_t sub_100EEC738(uint64_t a1)
{
  v2[23] = a1;
  v2[24] = v1;
  type metadata accessor for CRLBoardIdentifier(0);
  v2[25] = swift_task_alloc();
  v2[26] = swift_task_alloc();
  type metadata accessor for MainActor();
  v2[27] = static MainActor.shared.getter();
  uint64_t v4 = dispatch thunk of Actor.unownedExecutor.getter();
  v2[28] = v4;
  v2[29] = v3;
  return _swift_task_switch(sub_100EEC80C, v4, v3);
}

uint64_t sub_100EEC80C()
{
  uint64_t v1 = v0[24];
  uint64_t v2 = OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_boardInfos;
  v0[30] = OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_boardInfos;
  uint64_t v3 = v1 + v2;
  swift_beginAccess();
  if (*(void *)(*(void *)v3 + 16))
  {
    sub_1009563EC(v0[23]);
    char v5 = v4;
    swift_endAccess();
    if (v5)
    {
      sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"makeBoardInfo(for:)", 19, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLBoardLibrary.swift", 87, 2, 2737, (uint64_t)"Duplicate boardIdentifier.", 26, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"makeBoardInfo(for:)", 19, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLBoardLibrary.swift", 87, 2, 2737);
    }
  }
  else
  {
    swift_endAccess();
  }
  uint64_t v6 = v0[24];
  sub_100F38118(v0[23], v0[26], type metadata accessor for CRLBoardIdentifier);
  uint64_t v7 = *(void **)(v6 + OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_store);
  uint64_t v8 = *(void *)(v6 + OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_syncPriorityProvider);
  type metadata accessor for CRLBoardLibrary.BoardInfo();
  swift_allocObject();
  id v9 = v7;
  swift_retain();
  uint64_t v10 = (void *)swift_task_alloc();
  v0[31] = (uint64_t)v10;
  *uint64_t v10 = v0;
  v10[1] = sub_100EECA0C;
  uint64_t v11 = v0[26];
  return sub_100F006A0(v11, (uint64_t)v9, v8);
}

uint64_t sub_100EECA0C(uint64_t a1)
{
  uint64_t v3 = *v2;
  uint64_t v4 = *v2;
  *(void *)(v4 + 256) = a1;
  *(void *)(v4 + 264) = v1;
  swift_task_dealloc();
  uint64_t v5 = *(void *)(v3 + 232);
  uint64_t v6 = *(void *)(v3 + 224);
  if (v1) {
    uint64_t v7 = sub_100EECE78;
  }
  else {
    uint64_t v7 = sub_100EECB50;
  }
  return _swift_task_switch(v7, v6, v5);
}

uint64_t sub_100EECB50()
{
  uint64_t v1 = (uint64_t *)(v0[24] + v0[30]);
  swift_beginAccess();
  uint64_t v2 = *v1;
  if (*(void *)(v2 + 16) && (unint64_t v3 = sub_1009563EC(v0[23]), (v4 & 1) != 0))
  {
    uint64_t v5 = *(void *)(*(void *)(v2 + 56) + 8 * v3);
    swift_endAccess();
    swift_retain();
    swift_release();
    if (qword_10166FA60 != -1) {
      swift_once();
    }
    swift_beginAccess();
    uint64_t v6 = (void *)static OS_os_log.crlBoardLibrary;
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_10117E810;
    id v8 = v6;
    uint64_t v9 = UUID.uuidString.getter();
    uint64_t v11 = v10;
    *(void *)(inited + 56) = &type metadata for String;
    *(void *)(inited + 64) = sub_100528BE4();
    *(void *)(inited + 32) = v9;
    *(void *)(inited + 40) = v11;
    uint64_t v12 = static os_log_type_t.default.getter();
    sub_100BAC898((uint64_t)v8, (uint64_t)&_mh_execute_header, v12, (uint64_t)"Dropping BoardInfo to reuse recently created BoardInfo for identifier: %{public}@", 81, 2, inited);
    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();

    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v13 = (uint64_t (*)(uint64_t))v0[1];
    return v13(v5);
  }
  else
  {
    uint64_t v15 = v0[32];
    uint64_t v16 = v0[25];
    uint64_t v17 = v0[23];
    id v18 = (uint64_t *)(v0[24] + v0[30]);
    swift_endAccess();
    sub_100F38118(v17, v16, type metadata accessor for CRLBoardIdentifier);
    swift_beginAccess();
    swift_retain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v21 = *v18;
    uint64_t *v18 = 0x8000000000000000;
    sub_10097469C(v15, v16, isUniquelyReferenced_nonNull_native);
    uint64_t *v18 = v21;
    swift_bridgeObjectRelease();
    sub_100F38180(v16, type metadata accessor for CRLBoardIdentifier);
    swift_endAccess();
    uint64_t v20 = (void *)swift_task_alloc();
    v0[34] = v20;
    *uint64_t v20 = v0;
    v20[1] = sub_100EECEF0;
    return sub_100F00FAC();
  }
}

uint64_t sub_100EECE78()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100EECEF0()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 232);
  uint64_t v3 = *(void *)(v1 + 224);
  return _swift_task_switch(sub_100EED010, v3, v2);
}

uint64_t sub_100EED010()
{
  swift_release();
  uint64_t v1 = *(void *)(v0 + 256);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v2(v1);
}

uint64_t sub_100EED08C(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1005057FC(&qword_101672BB0);
  __chkstk_darwin(v4 - 8, v5);
  char v70 = (char *)&v63 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for CRLBoardCRDTData(0);
  __chkstk_darwin(v7 - 8, v8);
  uint64_t v10 = (char *)&v63 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for UUID();
  __chkstk_darwin(v11 - 8, v12);
  id v14 = (char *)&v63 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for CRLBoardIdentifier(0);
  uint64_t v67 = *(void *)(v15 - 8);
  uint64_t v16 = *(void *)(v67 + 64);
  uint64_t v18 = __chkstk_darwin(v15 - 8, v17);
  uint64_t v68 = (uint64_t)&v63 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18, v19);
  uint64_t v21 = (char *)&v63 - v20;
  uint64_t v71 = a1;
  uint64_t v22 = *(char **)(*(void *)(a1 + 16) + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard);
  uint64_t v23 = OBJC_IVAR____TtC8Freeform8CRLBoard_data;
  uint64_t v24 = *(void *)&v22[OBJC_IVAR____TtC8Freeform8CRLBoard_data] + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
  swift_beginAccess();
  sub_100F38118(v24, (uint64_t)v10, type metadata accessor for CRLBoardCRDTData);
  unint64_t v69 = v22;
  swift_retain();
  sub_1005057FC(&qword_101674550);
  CRRegister.wrappedValue.getter();
  sub_100F38180((uint64_t)v10, type metadata accessor for CRLBoardCRDTData);
  swift_release();
  uint64_t v25 = (uint64_t *)(*(void *)&v22[v23] + OBJC_IVAR____TtC8Freeform12CRLBoardData_ownerName);
  uint64_t v26 = *v25;
  unint64_t v27 = v25[1];
  swift_bridgeObjectRetain();
  uint64_t v28 = (uint64_t)v14;
  uint64_t v29 = v2;
  sub_100753370(v28, v26, v27, (uint64_t)v21);
  uint64_t v30 = *(char **)&v2[OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_store];
  uint64_t v31 = *(void *)&v30[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetManagerLock];
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v31 + 16));
  uint64_t v32 = OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetManager;
  uint64_t v33 = *(void **)&v30[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetManager];
  if (v33)
  {
    id v34 = *(id *)&v30[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetManager];
  }
  else
  {
    Class v66 = (Class)type metadata accessor for CRLAssetManager();
    uint64_t v35 = (char *)objc_allocWithZone(v66);
    uint64_t v65 = &v35[OBJC_IVAR____TtC8Freeform15CRLAssetManager_store];
    swift_unknownObjectWeakInit();
    uint64_t v36 = v29;
    uint64_t v37 = OBJC_IVAR____TtC8Freeform15CRLAssetManager_lock;
    type metadata accessor for CRLUnfairLock();
    uint64_t v38 = swift_allocObject();
    id v64 = v30;
    unint64_t v39 = v35;
    uint64_t v40 = (_DWORD *)swift_slowAlloc();
    *uint64_t v40 = 0;
    *(void *)(v38 + 16) = v40;
    atomic_thread_fence(memory_order_acq_rel);
    *(void *)&v35[v37] = v38;
    uint64_t v29 = v36;
    *(void *)&v39[OBJC_IVAR____TtC8Freeform15CRLAssetManager_assets] = _swiftEmptyDictionarySingleton;
    uint64_t v41 = OBJC_IVAR____TtC8Freeform15CRLAssetManager_owners;
    *(void *)&v39[v41] = [self mapTableWithKeyOptions:517 valueOptions:0];
    *(void *)&v39[OBJC_IVAR____TtC8Freeform15CRLAssetManager_garbageCollectionWorkItem] = 0;
    uint64_t v42 = v64;
    swift_unknownObjectWeakAssign();

    v72.id receiver = v39;
    v72.uint64_t super_class = v66;
    [super init];

    uint64_t v44 = *(void **)&v30[v32];
    *(void *)&v30[v32] = v43;
    id v34 = v43;

    uint64_t v33 = 0;
  }
  uint64_t v45 = *(os_unfair_lock_s **)(v31 + 16);
  id v46 = v33;
  os_unfair_lock_unlock(v45);
  uint64_t v47 = v69;
  sub_100AE4640((uint64_t)v69);

  if (qword_10166FA60 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v48 = (void *)static OS_os_log.crlBoardLibrary;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117E810;
  id v50 = v48;
  uint64_t v51 = UUID.uuidString.getter();
  uint64_t v53 = v52;
  *(void *)(inited + 56) = &type metadata for String;
  *(void *)(inited + 64) = sub_100528BE4();
  *(void *)(inited + 32) = v51;
  *(void *)(inited + 40) = v53;
  uint64_t v54 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v50, (uint64_t)&_mh_execute_header, v54, (uint64_t)"deactivateOpportunisticRealTimeCollaboration() for %{public}@", 61, 2, inited);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  uint64_t v55 = type metadata accessor for TaskPriority();
  uint64_t v56 = (uint64_t)v70;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v55 - 8) + 56))(v70, 1, 1, v55);
  uint64_t v57 = v68;
  sub_100F38118((uint64_t)v21, v68, type metadata accessor for CRLBoardIdentifier);
  type metadata accessor for MainActor();
  id v58 = v29;
  uint64_t v59 = static MainActor.shared.getter();
  unint64_t v60 = (*(unsigned __int8 *)(v67 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v67 + 80);
  Class v61 = (void *)swift_allocObject();
  void v61[2] = v59;
  uint64_t v61[3] = &protocol witness table for MainActor;
  v61[4] = v58;
  sub_100F37878(v57, (uint64_t)v61 + v60, type metadata accessor for CRLBoardIdentifier);
  sub_1006D9104(v56, (uint64_t)&unk_1016A2310, (uint64_t)v61);
  swift_release();
  sub_100F0BA70();
  sub_100F05168();
  swift_beginAccess();
  sub_10095BEE8((uint64_t)v21);
  swift_endAccess();

  swift_release();
  return sub_100F38180((uint64_t)v21, type metadata accessor for CRLBoardIdentifier);
}

uint64_t sub_100EED748(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  *(void *)(v6 + 312) = a4;
  *(void *)(v6 + 320) = v5;
  *(unsigned char *)(v6 + 457) = a5;
  *(void *)(v6 + 296) = a2;
  *(void *)(v6 + 304) = a3;
  *(void *)(v6 + 288) = a1;
  uint64_t v7 = *(void *)(type metadata accessor for CRLBoardIdentifier(0) - 8);
  *(void *)(v6 + 328) = v7;
  *(void *)(v6 + 336) = *(void *)(v7 + 64);
  *(void *)(v6 + 344) = swift_task_alloc();
  type metadata accessor for CRLBoardLibraryViewModel.Folder(0);
  *(void *)(v6 + 352) = swift_task_alloc();
  uint64_t v8 = type metadata accessor for UUID();
  *(void *)(v6 + 360) = v8;
  *(void *)(v6 + 368) = *(void *)(v8 - 8);
  *(void *)(v6 + 376) = swift_task_alloc();
  type metadata accessor for MainActor();
  *(void *)(v6 + 384) = static MainActor.shared.getter();
  uint64_t v10 = dispatch thunk of Actor.unownedExecutor.getter();
  *(void *)(v6 + 392) = v10;
  *(void *)(v6 + 400) = v9;
  return _swift_task_switch(sub_100EED8D4, v10, v9);
}

uint64_t sub_100EED8D4()
{
  uint64_t v1 = v0[36];
  uint64_t v2 = (void *)(v1 + *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20));
  if (*v2) {
    BOOL v3 = 0;
  }
  else {
    BOOL v3 = v2[1] == 0xE000000000000000;
  }
  if (v3 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    uint64_t v5 = v0[46];
    uint64_t v4 = v0[47];
    uint64_t v6 = v0[45];
    uint64_t v7 = v0[40];
    uint64_t v8 = OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_storeHierarchySnapshot;
    unint64_t v9 = *(void *)(v7 + OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_storeHierarchySnapshot);
    swift_bridgeObjectRetain();
    sub_100DD59E0(v4);
    uint64_t v10 = swift_task_alloc();
    *(void *)(v10 + 16) = v4;
    uint64_t v11 = sub_1008E81F4(1, (uint64_t (*)(id))sub_100DBD0D0, v10, v9);
    v0[51] = v11;
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
    if (v11)
    {
      uint64_t v12 = v0[44];
      uint64_t v14 = v0[39];
      uint64_t v13 = v0[40];
      uint64_t v15 = v0[37];
      uint64_t v16 = v0[38];
      unint64_t v17 = *(void *)(v7 + v8);
      uint64_t v18 = sub_1005057FC(&qword_101670F30);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v12, 1, 5, v18);
      uint64_t v19 = swift_task_alloc();
      *(void *)(v19 + 16) = v12;
      swift_bridgeObjectRetain();
      uint64_t v20 = (void *)sub_1008E81F4(1, (uint64_t (*)(id))sub_100F38910, v19, v17);
      swift_bridgeObjectRelease();
      swift_task_dealloc();
      sub_100F38180(v12, type metadata accessor for CRLBoardLibraryViewModel.Folder);
      uint64_t v21 = (void *)sub_100EF8A84(v20);
      v0[52] = v21;

      uint64_t v22 = *(void **)(v13 + OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_store);
      v0[53] = v22;
      id v23 = v22;
      uint64_t v24 = sub_1006F7638(v16, v14, v15, 0, (uint64_t)v23, v21);
      uint64_t v62 = sub_100D1C4B8(v23, v0[36], v24, v33);
      v0[54] = v62;
      swift_bridgeObjectRelease();
      id v34 = [self defaultCenter];
      id v60 = v34;
      if (qword_10166F7C0 != -1) {
        swift_once();
      }
      uint64_t v35 = v0[43];
      uint64_t v37 = v0[40];
      uint64_t v36 = v0[41];
      char v61 = *((unsigned char *)v0 + 457);
      uint64_t v38 = v0[36];
      uint64_t v58 = qword_10171B688;
      uint64_t v59 = v0[47];
      uint64_t v39 = swift_allocObject();
      swift_unknownObjectWeakInit();
      sub_100F38118(v38, v35, type metadata accessor for CRLBoardIdentifier);
      unint64_t v40 = (*(unsigned __int8 *)(v36 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80);
      uint64_t v41 = swift_allocObject();
      *(void *)(v41 + 16) = v39;
      sub_100F37878(v35, v41 + v40, type metadata accessor for CRLBoardIdentifier);
      v0[23] = sub_100F37488;
      v0[24] = v41;
      v0[19] = _NSConcreteStackBlock;
      v0[20] = *(void *)"";
      v0[21] = sub_1005E5680;
      v0[22] = &unk_1015336F0;
      uint64_t v42 = _Block_copy(v0 + 19);
      swift_release();
      id v43 = [v60 addObserverForName:v58 object:0 queue:0 usingBlock:v42];
      _Block_release(v42);

      *(void *)(v37 + OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_databaseSyncObserver) = v43;
      swift_unknownObjectRelease();
      uint64_t v44 = v62;
      UUID.init()();
      type metadata accessor for CRLTransactionContext(0);
      uint64_t v45 = swift_allocObject();
      uint64_t v46 = sub_1007940B4((uint64_t)v44, 0, 1, v59, (v61 & 1) == 0, v45);
      v0[55] = v46;
      uint64_t v47 = v44;
      sub_100EBA394((unint64_t)v47, 2, v46);

      (*(void (**)(void))(*(void *)v46 + 720))();
      swift_release();
      [v47 fixUp];
      uint64_t v50 = *(void *)&v47[OBJC_IVAR____TtC8Freeform8CRLBoard_pendingChanges];
      uint64_t v51 = *(NSObject **)(v50 + OBJC_IVAR____TtC8Freeform17CRLBoardChangeSet_accessQueue);
      uint64_t v52 = swift_allocObject();
      *(void *)(v52 + 16) = v46;
      *(void *)(v52 + 24) = v50;
      uint64_t v53 = swift_allocObject();
      *(void *)(v53 + 16) = sub_100797448;
      *(void *)(v53 + 24) = v52;
      v0[29] = sub_100659320;
      v0[30] = v53;
      v0[25] = _NSConcreteStackBlock;
      v0[26] = *(void *)"";
      v0[27] = sub_1006D9628;
      v0[28] = &unk_101533768;
      uint64_t v54 = _Block_copy(v0 + 25);
      swift_retain_n();
      swift_retain();
      swift_retain();
      swift_release();
      dispatch_sync(v51, v54);
      _Block_release(v54);
      char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
      swift_release();
      swift_release();
      uint64_t v56 = swift_release();
      if (isEscapingClosureAtFileLocation)
      {
        __break(1u);
      }
      else
      {
        v0[2] = v0;
        v0[7] = v0 + 57;
        v0[3] = sub_100EEE21C;
        uint64_t v57 = swift_continuation_init();
        v0[31] = _NSConcreteStackBlock;
        v0[32] = 0x40000000;
        v0[33] = sub_100EFD13C;
        v0[34] = &unk_101533790;
        v0[35] = v57;
        [v47 asyncSavePendingChangesWithCompletionHandler:v0 + 31];
        uint64_t v56 = (uint64_t)(v0 + 2);
      }
      return _swift_continuation_await(v56);
    }
    uint64_t v25 = v0[44];
    uint64_t v26 = v0[37];
    swift_release();
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_10117E810;
    sub_100F38118(v26, v25, type metadata accessor for CRLBoardLibraryViewModel.Folder);
    uint64_t v28 = sub_100DD4C48();
    uint64_t v30 = v29;
    sub_100F38180(v25, type metadata accessor for CRLBoardLibraryViewModel.Folder);
    *(void *)(inited + 56) = &type metadata for String;
    *(void *)(inited + 64) = sub_100528BE4();
    *(void *)(inited + 32) = v28;
    *(void *)(inited + 40) = v30;
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"addNewBoard(boardIdentifier:in:title:isDiscardable:)", 52, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLBoardLibrary.swift", 87, 2, 2766, (uint64_t)"Folder not found: %@", 20, 2u, inited);
    sub_1005598CC(inited, (uint64_t)"addNewBoard(boardIdentifier:in:title:isDiscardable:)", 52, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLBoardLibrary.swift", 87, 2, 2766);
    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();
    sub_1006DAC0C();
    swift_allocError();
    unsigned char *v31 = 1;
  }
  else
  {
    swift_release();
    sub_1006DAC0C();
    swift_allocError();
    unsigned char *v32 = 5;
  }
  swift_willThrow();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v48 = (uint64_t (*)(void))v0[1];
  return v48();
}

uint64_t sub_100EEE21C()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 48);
  *(void *)(*v0 + 448) = v2;
  uint64_t v3 = *(void *)(v1 + 400);
  uint64_t v4 = *(void *)(v1 + 392);
  if (v2) {
    uint64_t v5 = sub_100EEE410;
  }
  else {
    uint64_t v5 = sub_100EEE34C;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_100EEE34C()
{
  uint64_t v1 = *(void **)(v0 + 408);

  swift_release();
  swift_release();
  swift_bridgeObjectRelease();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  uint64_t v3 = *(void *)(v0 + 432);
  return v2(v3);
}

uint64_t sub_100EEE410()
{
  uint64_t v2 = (void *)v0[53];
  uint64_t v1 = (void *)v0[54];
  uint64_t v3 = (void *)v0[51];
  swift_release();
  swift_willThrow();

  swift_release();
  swift_bridgeObjectRelease();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_100EEE4D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1005057FC(&qword_101682E08);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  __chkstk_darwin(v4, v7);
  uint64_t v8 = (char *)v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v11 = __chkstk_darwin(v9, v10);
  uint64_t v13 = (char *)v25 - v12;
  uint64_t v14 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v5 + 16);
  v14((char *)v25 - v12, a1, v4, v11);
  ((void (*)(char *, char *, uint64_t))v14)(v8, v13, v4);
  unint64_t v15 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v16 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v16 + v15, v13, v4);
  if (*(unsigned char *)(a2 + OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_didStartUpdating) == 1)
  {
    CheckedContinuation.resume(returning:)();
    swift_release();
  }
  else
  {
    id v17 = [self defaultCenter];
    uint64_t v18 = swift_allocObject();
    *(void *)(v18 + 16) = 0;
    v25[1] = v18 + 16;
    if (qword_1016700C0 != -1) {
      swift_once();
    }
    v25[0] = qword_10171C6C8;
    id v19 = [self mainQueue];
    uint64_t v20 = (void *)swift_allocObject();
    id v20[2] = v18;
    void v20[3] = v17;
    void v20[4] = sub_100867F18;
    v20[5] = v16;
    aBlock[4] = sub_10062E80C;
    void aBlock[5] = v20;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = *(void *)"";
    void aBlock[2] = sub_1005E5680;
    void aBlock[3] = &unk_101532EC8;
    uint64_t v21 = _Block_copy(aBlock);
    swift_retain();
    id v22 = v17;
    swift_retain();
    swift_release();
    id v23 = [v22 addObserverForName:v25[0] object:a2 queue:v19 usingBlock:v21];

    _Block_release(v21);
    swift_beginAccess();
    *(void *)(v18 + 16) = v23;
    swift_release();
    swift_release();
    swift_unknownObjectRelease();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v4);
}

uint64_t sub_100EEE844(uint64_t a1, uint64_t a2, void *a3, uint64_t (*a4)(id))
{
  id v7 = (id)swift_beginAccess();
  if (*(void *)(a2 + 16)) {
    [a3 removeObserver:];
  }
  return a4(v7);
}

void sub_100EEE8B4()
{
  uint64_t v1 = v0;
  *(void *)&address.sa_data[6] = 0;
  *(void *)address.sa_data = 0;
  *(_WORD *)&address.sa_len = 528;
  SCNetworkReachabilityRef v2 = SCNetworkReachabilityCreateWithAddress(0, &address);
  if (v2)
  {
    SCNetworkReachabilityRef v3 = v2;
    uint64_t v4 = type metadata accessor for CRLNetworkReachabilityListener();
    swift_allocObject();
    uint64_t v5 = sub_100A59D64(v3);
    v16[3] = v4;
    v16[4] = &off_10151F648;
    v16[0] = v5;
    uint64_t v6 = v1 + OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_networkReachabilityListener;
    swift_beginAccess();
    sub_1006063BC((uint64_t)v16, v6, &qword_1016791E0);
    swift_endAccess();
  }
  else
  {
    if (qword_10166FA30 != -1) {
      swift_once();
    }
    swift_beginAccess();
    id v7 = (id)static OS_os_log.crlNetworkReachability;
    uint64_t v8 = static os_log_type_t.error.getter();
    sub_100BAC898((uint64_t)v7, (uint64_t)&_mh_execute_header, v8, (uint64_t)"Failed to create network rechability for zero address.", 54, 2, (uint64_t)_swiftEmptyArrayStorage);

    sub_10067900C();
    swift_allocError();
    unsigned char *v9 = 0;
    swift_willThrow();
    if (qword_10166FA60 != -1) {
      swift_once();
    }
    swift_beginAccess();
    uint64_t v10 = (void *)static OS_os_log.crlBoardLibrary;
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_10117E810;
    id v12 = v10;
    uint64_t v13 = _convertErrorToNSError(_:)();
    *(void *)(inited + 56) = sub_10050BF48(0, (unint64_t *)&qword_10168D3C0);
    *(void *)(inited + 64) = sub_10062E0F4((unint64_t *)&qword_10169ABB0, (unint64_t *)&qword_10168D3C0);
    *(void *)(inited + 32) = v13;
    uint64_t v14 = static os_log_type_t.error.getter();
    sub_100BAC898((uint64_t)v12, (uint64_t)&_mh_execute_header, v14, (uint64_t)"Failed to set-up network reachability listener. Error: %@", 57, 2, inited);
    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();

    swift_errorRelease();
  }
  sub_100EEEBC4();
}

void sub_100EEEBC4()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_networkReachabilityListener;
  swift_beginAccess();
  sub_100522E9C(v1, (uint64_t)&v4, &qword_1016791E0);
  if (v5)
  {
    sub_10053974C(&v4, (uint64_t)v6);
    sub_10050F848(v6, v7);
    sub_1005057FC(&qword_1016791E8);
    OS_dispatch_queue.sync<A>(execute:)();
    swift_allocObject();
    swift_unknownObjectWeakInit();
    sub_100523288(&qword_1016791F0, &qword_1016791E8);
    Publisher<>.sink(receiveValue:)();
    swift_release();
    swift_release();
    swift_beginAccess();
    AnyCancellable.store(in:)();
    swift_endAccess();
    swift_release();
    sub_10050F848(v6, v7);
    OS_dispatch_queue.sync<A>(execute:)();
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v6);
  }
  else
  {
    sub_100522F00((uint64_t)&v4, &qword_1016791E0);
    if (qword_10166FA60 != -1) {
      swift_once();
    }
    swift_beginAccess();
    id v2 = (id)static OS_os_log.crlBoardLibrary;
    uint64_t v3 = static os_log_type_t.error.getter();
    sub_100BAC898((uint64_t)v2, (uint64_t)&_mh_execute_header, v3, (uint64_t)"networkReachabilityListener not set-up, will not get the listeners", 66, 2, (uint64_t)_swiftEmptyArrayStorage);
  }
}

void sub_100EEEED0(unsigned __int8 *a1)
{
  uint64_t v2 = sub_1005057FC(&qword_101672BB0);
  __chkstk_darwin(v2 - 8, v3);
  uint64_t v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v6 = *a1;
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v8 = (unsigned __int8 *)Strong;
    if (v6)
    {
      uint64_t v9 = type metadata accessor for TaskPriority();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v5, 1, 1, v9);
      type metadata accessor for MainActor();
      uint64_t v10 = v8;
      uint64_t v11 = static MainActor.shared.getter();
      id v12 = (void *)swift_allocObject();
      v12[2] = v11;
      v12[3] = &protocol witness table for MainActor;
      v12[4] = v10;
      sub_1006D9104((uint64_t)v5, (uint64_t)&unk_1016A2588, (uint64_t)v12);
      swift_release();
    }
    if (qword_10166FA60 != -1) {
      swift_once();
    }
    swift_beginAccess();
    uint64_t v13 = (void *)static OS_os_log.crlBoardLibrary;
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_10117E810;
    uint64_t v25 = 0;
    unint64_t v26 = 0xE000000000000000;
    if (v6) {
      uint64_t v15 = 1702195828;
    }
    else {
      uint64_t v15 = 0x65736C6166;
    }
    if (v6) {
      uint64_t v16 = (void *)0xE400000000000000;
    }
    else {
      uint64_t v16 = (void *)0xE500000000000000;
    }
    id v17 = v13;
    v18._countAndFlagsBits = v15;
    v18._object = v16;
    String.append(_:)(v18);
    swift_bridgeObjectRelease();
    uint64_t v19 = v25;
    unint64_t v20 = v26;
    *(void *)(inited + 56) = &type metadata for String;
    *(void *)(inited + 64) = sub_100528BE4();
    *(void *)(inited + 32) = v19;
    *(void *)(inited + 40) = v20;
    uint64_t v21 = static os_log_type_t.info.getter();
    sub_100BAC898((uint64_t)v17, (uint64_t)&_mh_execute_header, v21, (uint64_t)"networkReachabilityListener update isReachable: %{public}@", 58, 2, inited);
    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();

    int v22 = v8[OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_isNetworkReachable];
    v8[OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_isNetworkReachable] = v6;
    if (v6 == v22)
    {
      id v23 = v8;
    }
    else
    {
      id v23 = (unsigned __int8 *)[self defaultCenter];
      if (qword_1016701B0 != -1) {
        swift_once();
      }
      [v23 postNotificationName:qword_10171CB98 object:v8];
    }
  }
}

uint64_t sub_100EEF204(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[3] = a4;
  type metadata accessor for MainActor();
  long long v4[4] = static MainActor.shared.getter();
  uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
  void v4[5] = v6;
  v4[6] = v5;
  return _swift_task_switch(sub_100EEF29C, v6, v5);
}

uint64_t sub_100EEF29C()
{
  *(void *)(v0 + 56) = *(void *)(*(void *)(v0 + 24) + OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_store);
  return _swift_task_switch(sub_100EEF2CC, 0, 0);
}

uint64_t sub_100EEF2CC()
{
  uint64_t v1 = v0[7];
  uint64_t v2 = swift_task_alloc();
  v0[8] = v2;
  *(void *)(v2 + 16) = v1;
  uint64_t v3 = (void *)swift_task_alloc();
  v0[9] = v3;
  uint64_t v4 = sub_1005057FC(&qword_101677400);
  void *v3 = v0;
  v3[1] = sub_100EEF3D0;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v0 + 2, 0, 0, 0xD000000000000021, 0x8000000101298350, sub_100F37A04, v2, v4);
}

uint64_t sub_100EEF3D0()
{
  *(void *)(*(void *)v1 + 80) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_100EEF6C4;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_100EEF4EC;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100EEF4EC()
{
  uint64_t v1 = v0[2];
  v0[11] = v1;
  uint64_t v2 = (void *)swift_task_alloc();
  v0[12] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_100EEF588;
  return sub_100EE280C(v1);
}

uint64_t sub_100EEF588()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 104) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 48);
  uint64_t v4 = *(void *)(v2 + 40);
  if (v0) {
    uint64_t v5 = sub_100EEF7FC;
  }
  else {
    uint64_t v5 = sub_100EEF78C;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_100EEF6C4()
{
  swift_task_dealloc();
  uint64_t v1 = *(void *)(v0 + 40);
  uint64_t v2 = *(void *)(v0 + 48);
  return _swift_task_switch(sub_100EEF728, v1, v2);
}

uint64_t sub_100EEF728()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100EEF78C()
{
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100EEF7FC()
{
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100EEF868(uint64_t a1)
{
  v2[28] = a1;
  v2[29] = v1;
  v2[30] = *(void *)(type metadata accessor for CRLBoardIdentifier(0) - 8);
  v2[31] = swift_task_alloc();
  type metadata accessor for MainActor();
  v2[32] = static MainActor.shared.getter();
  uint64_t v4 = dispatch thunk of Actor.unownedExecutor.getter();
  v2[33] = v4;
  v2[34] = v3;
  return _swift_task_switch(sub_100EEF958, v4, v3);
}

uint64_t sub_100EEF958()
{
  uint64_t v1 = v0[30];
  uint64_t v2 = v0[31];
  uint64_t v3 = v0[29];
  sub_100F38118(v0[28], v2, type metadata accessor for CRLBoardIdentifier);
  sub_1005057FC(&qword_10167ADD0);
  unint64_t v4 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v5 = swift_allocObject();
  v0[35] = v5;
  *(_OWORD *)(v5 + 16) = xmmword_10117E810;
  sub_100F37878(v2, v5 + v4, type metadata accessor for CRLBoardIdentifier);
  v0[36] = *(void *)(v3 + OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_store);
  return _swift_task_switch(sub_100EEFA4C, 0, 0);
}

uint64_t sub_100EEFA4C()
{
  uint64_t v2 = v0[35];
  uint64_t v1 = v0[36];
  uint64_t v3 = swift_task_alloc();
  v0[37] = v3;
  *(void *)(v3 + 16) = v1;
  *(void *)(v3 + 24) = v2;
  *(void *)(v3 + 32) = 0;
  *(unsigned char *)(v3 + 40) = 0;
  unint64_t v4 = (void *)swift_task_alloc();
  v0[38] = v4;
  uint64_t v5 = type metadata accessor for CRLBoardDatabaseFetchResult();
  *unint64_t v4 = v0;
  v4[1] = sub_100EEFB54;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v0 + 27, 0, 0, 0x3A5F286863746566, 0xE900000000000029, sub_100F38918, v3, v5);
}

uint64_t sub_100EEFB54()
{
  *(void *)(*(void *)v1 + 312) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_100EEFEFC;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_100EEFC70;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100EEFC70()
{
  swift_bridgeObjectRelease();
  v0[40] = v0[27];
  uint64_t v1 = v0[33];
  uint64_t v2 = v0[34];
  return _swift_task_switch(sub_100EEFCDC, v1, v2);
}

uint64_t sub_100EEFCDC()
{
  uint64_t v1 = v0[40];
  uint64_t v2 = v0[28];
  swift_release();
  swift_beginAccess();
  uint64_t v3 = *(void *)(v1 + 16);
  swift_bridgeObjectRetain();
  sub_100950B44(v2, v3, (uint64_t)(v0 + 16));
  swift_bridgeObjectRelease();
  sub_100F377E0((uint64_t)(v0 + 16));
  sub_10051B3EC((uint64_t)(v0 + 16), (uint64_t)(v0 + 11), &qword_10169A200);
  uint64_t v4 = v0[11];
  if (v4)
  {
    swift_release();
  }
  else
  {
    if (qword_10166FA60 != -1) {
      swift_once();
    }
    swift_beginAccess();
    uint64_t v5 = (void *)static OS_os_log.crlBoardLibrary;
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_10117E810;
    id v7 = v5;
    uint64_t v8 = UUID.uuidString.getter();
    uint64_t v10 = v9;
    *(void *)(inited + 56) = &type metadata for String;
    *(void *)(inited + 64) = sub_100528BE4();
    *(void *)(inited + 32) = v8;
    *(void *)(inited + 40) = v10;
    uint64_t v11 = static os_log_type_t.error.getter();
    sub_100BAC898((uint64_t)v7, (uint64_t)&_mh_execute_header, v11, (uint64_t)"board identifier not found: %@", 30, 2, inited);
    swift_release();
    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();
  }
  swift_task_dealloc();
  id v12 = (uint64_t (*)(BOOL))v0[1];
  return v12(v4 != 0);
}

uint64_t sub_100EEFEFC()
{
  swift_task_dealloc();
  uint64_t v1 = *(void *)(v0 + 264);
  uint64_t v2 = *(void *)(v0 + 272);
  return _swift_task_switch(sub_100EEFF60, v1, v2);
}

uint64_t sub_100EEFF60()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1(0);
}

uint64_t sub_100EEFFDC(uint64_t a1, uint64_t a2, char a3)
{
  *(void *)(v4 + 560) = v3;
  *(unsigned char *)(v4 + 688) = a3;
  *(void *)(v4 + 552) = a2;
  *(void *)(v4 + 544) = a1;
  uint64_t v5 = type metadata accessor for CRLBoard.RealTimeSessionInfo(0);
  *(void *)(v4 + 568) = v5;
  *(void *)(v4 + 576) = *(void *)(v5 - 8);
  *(void *)(v4 + 584) = swift_task_alloc();
  sub_1005057FC((uint64_t *)&unk_10169A1A0);
  *(void *)(v4 + 592) = swift_task_alloc();
  type metadata accessor for MainActor();
  *(void *)(v4 + 600) = static MainActor.shared.getter();
  uint64_t v7 = dispatch thunk of Actor.unownedExecutor.getter();
  *(void *)(v4 + 608) = v7;
  *(void *)(v4 + 616) = v6;
  return _swift_task_switch(sub_100EF0110, v7, v6);
}

uint64_t sub_100EF0110()
{
  uint64_t v71 = v0;
  uint64_t v1 = (uint64_t *)(*(void *)(v0 + 560) + OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_boardInfos);
  swift_beginAccess();
  uint64_t v2 = *v1;
  if (!*(void *)(v2 + 16) || (unint64_t v3 = sub_1009563EC(*(void *)(v0 + 544)), (v4 & 1) == 0))
  {
    swift_endAccess();
LABEL_25:
    *(void *)(v0 + 648) = *(void *)(*(void *)(v0 + 560) + OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_store);
    return _swift_task_switch(sub_100EF0D30, 0, 0);
  }
  uint64_t v5 = *(void *)(v0 + 552);
  uint64_t v6 = *(void *)(*(void *)(v2 + 56) + 8 * v3);
  swift_endAccess();
  uint64_t v7 = *(void **)(*(void *)(v6 + 16) + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard);
  *(void *)(v0 + 624) = v7;
  uint64_t v8 = &qword_10166F000;
  uint64_t v9 = &property descriptor for StatusHUDType.rawValue;
  uint64_t v68 = v7;
  uint64_t v69 = v5;
  if (!v5)
  {
    id v34 = v7;
    goto LABEL_29;
  }
  id v10 = *(id *)(v0 + 552);
  uint64_t v67 = v7;
  static CKShare.SystemFieldKey.title.getter();
  uint64_t v11 = CKRecord.subscript.getter();
  swift_bridgeObjectRelease();

  swift_unknownObjectRelease();
  if (v11) {
    goto LABEL_14;
  }
  id v12 = *(void **)(*(void *)&v67[OBJC_IVAR____TtC8Freeform8CRLBoard_shareState] + 16);
  if (!v12) {
    goto LABEL_14;
  }
  id v13 = v12;
  static CKShare.SystemFieldKey.title.getter();
  id v14 = (id)CKRecord.subscript.getter();
  swift_bridgeObjectRelease();

  if (!v14) {
    goto LABEL_13;
  }
  id v66 = v13;
  id v15 = v10;
  static CKShare.SystemFieldKey.title.getter();
  swift_unknownObjectRetain();
  CKRecord.subscript.setter();

  if (qword_10166FBE0 != -1) {
    goto LABEL_60;
  }
  while (1)
  {
    swift_beginAccess();
    uint64_t v16 = (void *)static OS_os_log.shareState;
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_10117E810;
    *(void *)(v0 + 536) = v14;
    swift_unknownObjectRetain();
    id v65 = v16;
    sub_1005057FC((uint64_t *)&unk_101672F30);
    unsigned __int8 v18 = swift_dynamicCast();
    uint64_t v19 = *(void *)(v0 + 504);
    unint64_t v20 = *(void *)(v0 + 512);
    *(void *)(inited + 56) = &type metadata for String;
    *(void *)(inited + 64) = sub_100528BE4();
    uint64_t v21 = 7104878;
    if ((v18 & (v20 != 0)) != 0) {
      uint64_t v21 = v19;
    }
    unint64_t v22 = 0xE300000000000000;
    if ((v18 & (v20 != 0)) != 0) {
      unint64_t v22 = v20;
    }
    *(void *)(inited + 32) = v21;
    *(void *)(inited + 40) = v22;
    uint64_t v23 = static os_log_type_t.default.getter();
    sub_100BAC898((uint64_t)v65, (uint64_t)&_mh_execute_header, v23, (uint64_t)"New share did not contain a title, using previous title: %@", 59, 2, inited);
    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();

    swift_unknownObjectRelease();
    id v13 = v66;
LABEL_13:

    uint64_t v5 = v69;
LABEL_14:

    id v24 = v10;
    static CKShare.SystemFieldKey.thumbnailImageData.getter();
    uint64_t v25 = CKRecord.subscript.getter();
    swift_bridgeObjectRelease();

    swift_unknownObjectRelease();
    if (!v25)
    {
      unint64_t v26 = *(void **)(*(void *)&v67[OBJC_IVAR____TtC8Freeform8CRLBoard_shareState] + 16);
      if (v26)
      {
        id v27 = v26;
        static CKShare.SystemFieldKey.thumbnailImageData.getter();
        uint64_t v28 = CKRecord.subscript.getter();
        swift_bridgeObjectRelease();

        if (v28)
        {
          id v66 = (id)(v0 + 480);
          id v29 = v24;
          static CKShare.SystemFieldKey.thumbnailImageData.getter();
          swift_unknownObjectRetain();
          CKRecord.subscript.setter();

          if (qword_10166FBE0 != -1) {
            swift_once();
          }
          swift_beginAccess();
          id v30 = (id)static OS_os_log.shareState;
          uint64_t v31 = static os_log_type_t.default.getter();
          sub_100BAC898((uint64_t)v30, (uint64_t)&_mh_execute_header, v31, (uint64_t)"New share did not contain a thumbnail, using previous thumbnail", 63, 2, (uint64_t)_swiftEmptyArrayStorage);

          swift_unknownObjectRelease();
          uint64_t v5 = v69;
        }
      }
    }

    id v32 = v24;
    static CKShare.SystemFieldKey.shareType.getter();
    uint64_t v33 = CKRecord.subscript.getter();
    swift_bridgeObjectRelease();

    swift_unknownObjectRelease();
    if (v33 || (uint64_t v56 = *(void **)(*(void *)&v67[OBJC_IVAR____TtC8Freeform8CRLBoard_shareState] + 16)) == 0)
    {

LABEL_23:
      uint64_t v9 = (_OWORD *)&property descriptor for StatusHUDType.rawValue;
      uint64_t v8 = &qword_10166F000;
      goto LABEL_29;
    }
    id v57 = v56;
    static CKShare.SystemFieldKey.shareType.getter();
    uint64_t v58 = CKRecord.subscript.getter();
    swift_bridgeObjectRelease();

    if (!v58)
    {

      uint64_t v5 = v69;
      goto LABEL_23;
    }
    id v59 = v32;
    static CKShare.SystemFieldKey.shareType.getter();
    swift_unknownObjectRetain();
    CKRecord.subscript.setter();

    uint64_t v8 = &qword_10166F000;
    if (qword_10166FBE0 != -1) {
      swift_once();
    }
    swift_beginAccess();
    id v60 = (id)static OS_os_log.shareState;
    uint64_t v61 = static os_log_type_t.default.getter();
    sub_100BAC898((uint64_t)v60, (uint64_t)&_mh_execute_header, v61, (uint64_t)"New share did not contain a share type, using previous share type", 65, 2, (uint64_t)_swiftEmptyArrayStorage);

    swift_unknownObjectRelease();
    uint64_t v5 = v69;
    uint64_t v9 = (_OWORD *)&property descriptor for StatusHUDType.rawValue;
LABEL_29:
    uint64_t v67 = (char *)(v0 + 432);
    if (v8[380] != -1) {
      swift_once();
    }
    swift_beginAccess();
    uint64_t v35 = (void *)static OS_os_log.shareState;
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t v36 = swift_initStackObject();
    uint64_t v37 = v36;
    *(_OWORD *)(v36 + 16) = v9[129];
    uint64_t v38 = v36 + 32;
    uint64_t v39 = *(void **)(v0 + 552);
    if (v5)
    {
      *(void *)(v0 + 296) = sub_10050BF48(0, &qword_101672C00);
      *(void *)(v0 + 304) = sub_10062E0F4((unint64_t *)&qword_101682FE0, &qword_101672C00);
      *(void *)(v0 + 272) = v39;
      sub_10053974C((long long *)(v0 + 272), v38);
    }
    else
    {
      *(void *)(v36 + 56) = &type metadata for String;
      *(void *)(v36 + 64) = sub_100528BE4();
      *(void *)(v37 + 32) = 7104878;
      *(void *)(v37 + 40) = 0xE300000000000000;
    }
    uint64_t v40 = *(void *)(v0 + 592);
    uint64_t v41 = *(void *)(v0 + 576);
    id v10 = *(id *)(v0 + 568);
    uint64_t v42 = *(void **)(v0 + 552);
    id v14 = v35;
    id v43 = v39;
    uint64_t v44 = static os_log_type_t.default.getter();
    sub_100BAC898((uint64_t)v14, (uint64_t)&_mh_execute_header, v44, (uint64_t)"Updating board share state for new share: %@", 44, 2, v37);
    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();

    swift_retain();
    sub_100F8570C(v42);
    swift_release();
    uint64_t v45 = (uint64_t)v68 + OBJC_IVAR____TtC8Freeform8CRLBoard_realTimeSessionInfo;
    swift_beginAccess();
    sub_100522E9C(v45, v40, (uint64_t *)&unk_10169A1A0);
    int v46 = (*(uint64_t (**)(uint64_t, uint64_t, id))(v41 + 48))(v40, 1, v10);
    uint64_t v47 = *(void *)(v0 + 592);
    if (v46)
    {
      sub_100522F00(*(void *)(v0 + 592), (uint64_t *)&unk_10169A1A0);
      if (v69) {
        goto LABEL_55;
      }
LABEL_58:

      goto LABEL_25;
    }
    uint64_t v48 = *(void *)(v0 + 584);
    sub_100F38118(*(void *)(v0 + 592), v48, type metadata accessor for CRLBoard.RealTimeSessionInfo);
    sub_100522F00(v47, (uint64_t *)&unk_10169A1A0);
    swift_retain();
    sub_100F38180(v48, type metadata accessor for CRLBoard.RealTimeSessionInfo);
    if (!v69)
    {
      swift_release();
      goto LABEL_58;
    }
    id v49 = v43;
    id v50 = [v49 participants];
    sub_10050BF48(0, (unint64_t *)&qword_101693410);
    unint64_t v51 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    if (v51 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v52 = _CocoaArrayWrapper.endIndex.getter();
      if (!v52) {
        goto LABEL_54;
      }
    }
    else
    {
      uint64_t v52 = *(void *)((v51 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (!v52) {
        goto LABEL_54;
      }
    }
    if (v52 >= 1) {
      break;
    }
    __break(1u);
LABEL_60:
    swift_once();
  }
  uint64_t v53 = 0;
  do
  {
    if ((v51 & 0xC000000000000001) != 0) {
      id v54 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v54 = *(id *)(v51 + 8 * v53 + 32);
    }
    uint64_t v55 = v54;
    ++v53;
    char v70 = v54;
    sub_100709368(&v70);
  }
  while (v52 != v53);
LABEL_54:
  swift_release();
  swift_bridgeObjectRelease_n();

LABEL_55:
  uint64_t v62 = (void *)swift_task_alloc();
  *(void *)(v0 + 632) = v62;
  *uint64_t v62 = v0;
  v62[1] = sub_100EF0B78;
  uint64_t v63 = *(void *)(v0 + 544);
  return sub_100EF14A4(v63);
}

uint64_t sub_100EF0B78()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 640) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 616);
  uint64_t v4 = *(void *)(v2 + 608);
  if (v0) {
    uint64_t v5 = sub_100EF1414;
  }
  else {
    uint64_t v5 = sub_100EF0CB4;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_100EF0CB4()
{
  *(void *)(v0 + 648) = *(void *)(*(void *)(v0 + 560) + OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_store);
  return _swift_task_switch(sub_100EF0D30, 0, 0);
}

uint64_t sub_100EF0D30()
{
  uint64_t v1 = *(void *)(v0 + 648);
  char v2 = *(unsigned char *)(v0 + 688);
  uint64_t v3 = *(void *)(v0 + 552);
  uint64_t v4 = *(void *)(v0 + 544);
  uint64_t v5 = swift_task_alloc();
  *(void *)(v0 + 656) = v5;
  *(void *)(v5 + 16) = v1;
  *(void *)(v5 + 24) = v4;
  *(void *)(v5 + 32) = v3;
  *(unsigned char *)(v5 + 40) = v2;
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v0 + 664) = v6;
  uint64_t v7 = sub_1005057FC(&qword_101699928);
  *uint64_t v6 = v0;
  v6[1] = sub_100EF0E50;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v0 + 528, 0, 0, 0xD000000000000033, 0x8000000101295DA0, sub_100F2BFC0, v5, v7);
}

uint64_t sub_100EF0E50()
{
  *(void *)(*(void *)v1 + 672) = v0;
  swift_task_dealloc();
  if (v0)
  {
    char v2 = sub_100EF1010;
  }
  else
  {
    swift_task_dealloc();
    char v2 = sub_100EF0F6C;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100EF0F6C()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 680) = v1;
  void *v1 = v0;
  v1[1] = sub_100EF1278;
  return sub_100EF1EDC(2, (uint64_t)&_swiftEmptySetSingleton);
}

uint64_t sub_100EF1010()
{
  swift_task_dealloc();
  uint64_t v1 = *(void *)(v0 + 616);
  uint64_t v2 = *(void *)(v0 + 608);
  return _swift_task_switch(sub_100EF1078, v2, v1);
}

uint64_t sub_100EF1078()
{
  if (qword_10166FBE0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v1 = (void *)static OS_os_log.shareState;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117D8C0;
  id v3 = v1;
  uint64_t v4 = UUID.description.getter();
  uint64_t v6 = v5;
  *(void *)(inited + 56) = &type metadata for String;
  unint64_t v7 = sub_100528BE4();
  *(void *)(inited + 64) = v7;
  *(void *)(inited + 32) = v4;
  *(void *)(inited + 40) = v6;
  swift_getErrorValue();
  uint64_t v8 = Error.localizedDescription.getter();
  *(void *)(inited + 96) = &type metadata for String;
  *(void *)(inited + 104) = v7;
  *(void *)(inited + 72) = v8;
  *(void *)(inited + 80) = v9;
  uint64_t v10 = static os_log_type_t.error.getter();
  sub_100BAC898((uint64_t)v3, (uint64_t)&_mh_execute_header, v10, (uint64_t)"Unable to update CKShare for board %@ with error %@", 51, 2, inited);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  swift_errorRelease();
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v0 + 680) = v11;
  void *v11 = v0;
  v11[1] = sub_100EF1278;
  return sub_100EF1EDC(2, (uint64_t)&_swiftEmptySetSingleton);
}

uint64_t sub_100EF1278()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 616);
  uint64_t v3 = *(void *)(v1 + 608);
  return _swift_task_switch(sub_100EF1398, v3, v2);
}

uint64_t sub_100EF1398()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100EF1414()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100EF14A4(uint64_t a1)
{
  v2[21] = a1;
  v2[22] = v1;
  type metadata accessor for CRLBoardIdentifier(0);
  v2[23] = swift_task_alloc();
  type metadata accessor for MainActor();
  v2[24] = static MainActor.shared.getter();
  uint64_t v4 = dispatch thunk of Actor.unownedExecutor.getter();
  v2[25] = v4;
  v2[26] = v3;
  return _swift_task_switch(sub_100EF1568, v4, v3);
}

uint64_t sub_100EF1568()
{
  uint64_t v1 = (uint64_t *)(v0[22] + OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_boardInfos);
  swift_beginAccess();
  uint64_t v2 = *v1;
  if (*(void *)(v2 + 16) && (unint64_t v3 = sub_1009563EC(v0[21]), (v4 & 1) != 0))
  {
    uint64_t v5 = *(void *)(*(void *)(v2 + 56) + 8 * v3);
    swift_endAccess();
    uint64_t v6 = *(char **)(v5 + 16);
    v0[30] = v6;
    unint64_t v7 = *(void **)&v6[OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_commandController];
    uint64_t v8 = (objc_class *)type metadata accessor for CRLCommandDirtyBoard();
    uint64_t v28 = v6;
    id v9 = objc_allocWithZone(v8);
    uint64_t v10 = v7;
    id v11 = [v9 init];
    id v12 = (double **)&v10[OBJC_IVAR____TtC8Freeform20CRLCommandController_nonUserCommandQueue];
    swift_beginAccess();
    uint64_t v13 = *v12;
    id v14 = v11;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    void *v12 = v13;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      uint64_t v13 = sub_100F62618(0, *((void *)v13 + 2) + 1, 1, v13);
      void *v12 = v13;
    }
    unint64_t v17 = *((void *)v13 + 2);
    unint64_t v16 = *((void *)v13 + 3);
    if (v17 >= v16 >> 1)
    {
      uint64_t v13 = sub_100F62618((double *)(v16 > 1), v17 + 1, 1, v13);
      void *v12 = v13;
    }
    *((void *)v13 + 2) = v17 + 1;
    unsigned __int8 v18 = &v13[2 * v17];
    *((void *)v18 + 4) = v14;
    *((unsigned char *)v18 + 40) = 1;
    swift_endAccess();
    sub_10078F194();

    uint64_t v19 = *(void **)&v28[OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard];
    v0[31] = v19;
    v0[2] = v0;
    v0[7] = v0 + 33;
    v0[3] = sub_100EF1CA0;
    uint64_t v20 = swift_continuation_init();
    v0[10] = _NSConcreteStackBlock;
    v0[11] = 0x40000000;
    v0[12] = sub_100EFD13C;
    v0[13] = &unk_101532EF0;
    v0[14] = v20;
    [v19 asyncSavePendingChangesWithCompletionHandler:v0 + 10];
    return _swift_continuation_await(v0 + 2);
  }
  else
  {
    uint64_t v22 = v0[22];
    uint64_t v21 = v0[23];
    uint64_t v23 = v0[21];
    swift_endAccess();
    sub_100F38118(v23, v21, type metadata accessor for CRLBoardIdentifier);
    id v29 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_101682FB8 + dword_101682FB8);
    id v24 = *(id *)(v22 + OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_store);
    uint64_t v25 = (void *)swift_task_alloc();
    v0[27] = v25;
    void *v25 = v0;
    v25[1] = sub_100EF18D8;
    uint64_t v26 = v0[23];
    return v29(v26, (uint64_t)v24, 0);
  }
}

uint64_t sub_100EF18D8(uint64_t a1)
{
  char v4 = *(void **)v2;
  *(void *)(*(void *)v2 + 224) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = v4[25];
    uint64_t v6 = v4[26];
    unint64_t v7 = sub_100EF1C34;
  }
  else
  {
    v4[29] = a1;
    uint64_t v5 = v4[25];
    uint64_t v6 = v4[26];
    unint64_t v7 = sub_100EF1A00;
  }
  return _swift_task_switch(v7, v5, v6);
}

uint64_t sub_100EF1A00()
{
  uint64_t v1 = v0[29];
  v0[30] = v1;
  uint64_t v16 = v1;
  uint64_t v2 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_commandController);
  id v3 = objc_allocWithZone((Class)type metadata accessor for CRLCommandDirtyBoard());
  char v4 = v2;
  id v5 = [v3 init];
  uint64_t v6 = (double **)&v4[OBJC_IVAR____TtC8Freeform20CRLCommandController_nonUserCommandQueue];
  swift_beginAccess();
  unint64_t v7 = *v6;
  id v8 = v5;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *uint64_t v6 = v7;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    unint64_t v7 = sub_100F62618(0, *((void *)v7 + 2) + 1, 1, v7);
    *uint64_t v6 = v7;
  }
  unint64_t v11 = *((void *)v7 + 2);
  unint64_t v10 = *((void *)v7 + 3);
  if (v11 >= v10 >> 1)
  {
    unint64_t v7 = sub_100F62618((double *)(v10 > 1), v11 + 1, 1, v7);
    *uint64_t v6 = v7;
  }
  *((void *)v7 + 2) = v11 + 1;
  id v12 = &v7[2 * v11];
  *((void *)v12 + 4) = v8;
  *((unsigned char *)v12 + 40) = 1;
  swift_endAccess();
  sub_10078F194();

  uint64_t v13 = *(void **)(v16 + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard);
  v0[31] = v13;
  v0[2] = v0;
  v0[7] = v0 + 33;
  v0[3] = sub_100EF1CA0;
  uint64_t v14 = swift_continuation_init();
  v0[10] = _NSConcreteStackBlock;
  v0[11] = 0x40000000;
  v0[12] = sub_100EFD13C;
  v0[13] = &unk_101532EF0;
  v0[14] = v14;
  [v13 asyncSavePendingChangesWithCompletionHandler:v0 + 10];
  return _swift_continuation_await(v0 + 2);
}

uint64_t sub_100EF1C34()
{
  swift_release();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100EF1CA0()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 48);
  *(void *)(*v0 + 256) = v2;
  uint64_t v3 = *(void *)(v1 + 208);
  uint64_t v4 = *(void *)(v1 + 200);
  if (v2) {
    id v5 = sub_100EF1E54;
  }
  else {
    id v5 = sub_100EF1DD0;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_100EF1DD0()
{
  uint64_t v1 = *(void **)(v0 + 248);

  swift_release();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_100EF1E54()
{
  uint64_t v1 = (void *)v0[31];
  uint64_t v2 = (void *)v0[30];
  swift_release();
  swift_willThrow();

  swift_task_dealloc();
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t sub_100EF1EDC(uint64_t a1, uint64_t a2)
{
  v3[12] = a2;
  v3[13] = v2;
  v3[11] = a1;
  sub_1005057FC(&qword_101672BB0);
  v3[14] = swift_task_alloc();
  v3[15] = type metadata accessor for MainActor();
  v3[16] = static MainActor.shared.getter();
  uint64_t v5 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_100EF1FAC, v5, v4);
}

uint64_t sub_100EF1FAC()
{
  uint64_t v1 = v0[11];
  swift_release();
  if (v1)
  {
    uint64_t v2 = (char *)v0[13];
    if (*(void *)&v2[OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_pauseSnapshotUpdateCount])
    {
      if (qword_10166FA60 != -1)
      {
        swift_once();
        uint64_t v2 = (char *)v0[13];
      }
      uint64_t v3 = v0[11];
      swift_beginAccess();
      id v4 = (id)static OS_os_log.crlBoardLibrary;
      uint64_t v5 = static os_log_type_t.default.getter();
      sub_100BAC898((uint64_t)v4, (uint64_t)&_mh_execute_header, v5, (uint64_t)"Skipping snapshot update because we're paused.", 46, 2, (uint64_t)_swiftEmptyArrayStorage);

      *(void *)&v2[OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_pendingUpdateOptions] |= v3;
      swift_beginAccess();
      uint64_t v6 = swift_bridgeObjectRetain();
      sub_10057C8B4(v6);
      swift_endAccess();
    }
    else
    {
      if (qword_10166FA60 != -1)
      {
        swift_once();
        uint64_t v2 = (char *)v0[13];
      }
      uint64_t v7 = v0[14];
      uint64_t v9 = v0[11];
      uint64_t v8 = v0[12];
      swift_beginAccess();
      id v10 = (id)static OS_os_log.crlBoardLibrary;
      uint64_t v11 = static os_log_type_t.default.getter();
      sub_100BAC898((uint64_t)v10, (uint64_t)&_mh_execute_header, v11, (uint64_t)"Requesting rate-limited snapshot update", 39, 2, (uint64_t)_swiftEmptyArrayStorage);

      sub_100EF7EC4();
      uint64_t v12 = type metadata accessor for TaskPriority();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v7, 1, 1, v12);
      uint64_t v13 = v2;
      swift_bridgeObjectRetain();
      uint64_t v14 = static MainActor.shared.getter();
      id v15 = (void *)swift_allocObject();
      void v15[2] = v14;
      void v15[3] = &protocol witness table for MainActor;
      void v15[4] = v13;
      uint64_t v15[5] = v9;
      v15[6] = v8;
      sub_1006D9104(v7, (uint64_t)&unk_1016A2260, (uint64_t)v15);
      swift_release();
    }
  }
  else
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"updateStoreSnapshot(options:changedBoards:)", 43, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLBoardLibrary.swift", 87, 2, 2955, (uint64_t)"Nothing to update", 17, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"updateStoreSnapshot(options:changedBoards:)", 43, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLBoardLibrary.swift", 87, 2, 2955);
  }
  swift_task_dealloc();
  uint64_t v16 = (uint64_t (*)(void))v0[1];
  return v16();
}

void *sub_100EF2300()
{
  uint64_t v75 = type metadata accessor for CRLBoardIdentifierStorage(0);
  __chkstk_darwin(v75, v1);
  unint64_t v74 = (char *)v65 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for CRLBoardCRDTData(0);
  __chkstk_darwin(v3 - 8, v4);
  uint64_t v6 = (char *)v65 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for UUID();
  uint64_t v69 = *(void (***)(char *, char *, uint64_t))(v7 - 8);
  __chkstk_darwin(v7, v8);
  id v10 = (char *)v65 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11, v12);
  uint64_t v14 = (char *)v65 - v13;
  uint64_t v15 = type metadata accessor for CRLBoardIdentifier(0);
  uint64_t v67 = *(void *)(v15 - 8);
  __chkstk_darwin(v15, v16);
  uint64_t v18 = (char *)v65 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19, v20);
  uint64_t v22 = (char *)v65 - v21;
  __chkstk_darwin(v23, v24);
  uint64_t v26 = (char *)v65 - v25;
  uint64_t v80 = *(void *)(v0 + OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_store);
  sub_1005057FC(&qword_10167BF58);
  OS_dispatch_queue.sync<A>(execute:)();
  uint64_t v78 = v26;
  char v73 = v22;
  v65[1] = v15;
  uint64_t v79 = v14;
  uint64_t v29 = *(void *)(v82 + 16);
  if (v29)
  {
    uint64_t v76 = v10;
    uint64_t v77 = v7;
    uint64_t v72 = v69 + 2;
    char v70 = (void (**)(char *, uint64_t))(v69 + 1);
    uint64_t v71 = CKCurrentUserDefaultName;
    v69 += 4;
    uint64_t v30 = _swiftEmptyDictionarySingleton;
    uint64_t v66 = swift_bridgeObjectRetain();
    uint64_t v31 = (void **)(v66 + 40);
    uint64_t v68 = v6;
    while (1)
    {
      uint64_t v35 = (uint64_t)*(v31 - 1);
      id v34 = *v31;
      uint64_t v36 = v35 + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
      swift_beginAccess();
      sub_100F38118(v36, (uint64_t)v6, type metadata accessor for CRLBoardCRDTData);
      sub_1005057FC(&qword_101674550);
      uint64_t v37 = v79;
      CRRegister.wrappedValue.getter();
      sub_100F38180((uint64_t)v6, type metadata accessor for CRLBoardCRDTData);
      uint64_t v39 = *(void *)(v35 + OBJC_IVAR____TtC8Freeform12CRLBoardData_ownerName);
      unint64_t v38 = *(void *)(v35 + OBJC_IVAR____TtC8Freeform12CRLBoardData_ownerName + 8);
      (*v72)(v76, v37, v77);
      BOOL v41 = v39 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v38 == v40;
      if (v41
        || (char v42 = _stringCompareWithSmolCheck(_:_:expecting:)(),
            swift_bridgeObjectRetain(),
            swift_bridgeObjectRelease(),
            (v42 & 1) != 0))
      {
        swift_bridgeObjectRelease();
        uint64_t v39 = 0;
        unint64_t v38 = 0xE000000000000000;
      }
      uint64_t v43 = v77;
      (*v70)(v79, v77);
      uint64_t v44 = (uint64_t)v74;
      (*v69)(v74, v76, v43);
      uint64_t v45 = (void *)(v44 + *(int *)(v75 + 20));
      *uint64_t v45 = v39;
      v45[1] = v38;
      uint64_t v46 = (uint64_t)v73;
      sub_100F37878(v44, (uint64_t)v73, type metadata accessor for CRLBoardIdentifierStorage);
      uint64_t v47 = v46;
      uint64_t v48 = (uint64_t)v78;
      sub_100F37878(v47, (uint64_t)v78, type metadata accessor for CRLBoardIdentifier);
      sub_100F38118(v48, (uint64_t)v18, type metadata accessor for CRLBoardIdentifier);
      id v49 = v34;
      swift_retain();
      int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v81 = v30;
      unint64_t v52 = sub_1009563EC((uint64_t)v18);
      uint64_t v53 = v30[2];
      BOOL v54 = (v51 & 1) == 0;
      uint64_t v55 = v53 + v54;
      if (__OFADD__(v53, v54))
      {
        __break(1u);
LABEL_24:
        __break(1u);
        swift_once();
        swift_beginAccess();
        id v27 = (id)static OS_os_log.crlBoardLibrary;
        uint64_t v28 = static os_log_type_t.error.getter();
        sub_100BAC898((uint64_t)v27, (uint64_t)&_mh_execute_header, v28, (uint64_t)"Failed to lookup existing board data in the store", 49, 2, (uint64_t)_swiftEmptyArrayStorage);

        swift_errorRelease();
        return (void *)sub_100A3CBC0((uint64_t)_swiftEmptyArrayStorage);
      }
      char v56 = v51;
      if (v30[3] >= v55)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
          sub_100985AFC();
        }
      }
      else
      {
        sub_1009705D0(v55, isUniquelyReferenced_nonNull_native);
        unint64_t v57 = sub_1009563EC((uint64_t)v18);
        if ((v56 & 1) != (v58 & 1))
        {
          uint64_t result = (void *)KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
          __break(1u);
          return result;
        }
        unint64_t v52 = v57;
      }
      uint64_t v59 = (uint64_t)v78;
      uint64_t v30 = v81;
      if (v56)
      {
        id v32 = (void *)(v81[7] + 16 * v52);
        uint64_t v33 = (void *)v32[1];
        swift_release();

        void *v32 = v35;
        v32[1] = v34;
      }
      else
      {
        v81[(v52 >> 6) + 8] |= 1 << v52;
        sub_100F38118((uint64_t)v18, v30[6] + *(void *)(v67 + 72) * v52, type metadata accessor for CRLBoardIdentifier);
        id v60 = (void *)(v30[7] + 16 * v52);
        *id v60 = v35;
        v60[1] = v34;
        uint64_t v61 = v30[2];
        BOOL v62 = __OFADD__(v61, 1);
        uint64_t v63 = v61 + 1;
        if (v62) {
          goto LABEL_24;
        }
        v30[2] = v63;
      }
      v31 += 2;
      swift_bridgeObjectRelease();
      sub_100F38180((uint64_t)v18, type metadata accessor for CRLBoardIdentifier);
      sub_100F38180(v59, type metadata accessor for CRLBoardIdentifier);
      --v29;
      uint64_t v6 = v68;
      if (!v29)
      {
        swift_bridgeObjectRelease_n();
        return v30;
      }
    }
  }
  swift_bridgeObjectRelease();
  return _swiftEmptyDictionarySingleton;
}

void *sub_100EF29FC(uint64_t a1)
{
  uint64_t v3 = sub_100EF2300();
  if (v3[2] && (unint64_t v4 = sub_1009563EC(a1), (v5 & 1) != 0))
  {
    uint64_t v6 = v3[7] + 16 * v4;
    uint64_t v7 = *(void *)v6;
    id v8 = *(id *)(v6 + 8);
    swift_retain();
  }
  else
  {
    uint64_t v7 = 0;
  }
  uint64_t v9 = swift_bridgeObjectRelease();
  unint64_t v10 = *(void *)(*(void *)(v1 + OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_sharedHighlightController)
                  + OBJC_IVAR____TtC8Freeform28CRLSharedHighlightController_sharedHighlights);
  __chkstk_darwin(v9, v11);
  v14[2] = a1;
  swift_bridgeObjectRetain();
  uint64_t v12 = sub_100ED54F0((uint64_t (*)(id *))sub_100DBFA74, (uint64_t)v14, v10);
  swift_bridgeObjectRelease();
  if (v7) {
    swift_release();
  }
  return v12;
}

void sub_100EF2B34(uint64_t a1, uint64_t a2)
{
  id v4 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v2
                                                             + OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_shareErrorObservers), "allObjects"));
  sub_1005057FC(&qword_1016A25C0);
  unint64_t v5 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v5 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v6) {
      goto LABEL_10;
    }
  }
  else
  {
    uint64_t v6 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v6) {
      goto LABEL_10;
    }
  }
  if (v6 < 1)
  {
    __break(1u);
    return;
  }
  uint64_t v7 = 0;
  do
  {
    if ((v5 & 0xC000000000000001) != 0)
    {
      id v8 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else
    {
      id v8 = *(void **)(v5 + 8 * v7 + 32);
      swift_unknownObjectRetain();
    }
    ++v7;
    uint64_t v9 = (void *)_convertErrorToNSError(_:)();
    [v8 shareFailedWithError:v9 recordID:a2];
    swift_unknownObjectRelease();
  }
  while (v6 != v7);
LABEL_10:

  swift_bridgeObjectRelease();
}

void sub_100EF2C8C()
{
  uint64_t v1 = v0;
  uint64_t v2 = *(void **)(*(void *)(*(void *)(v0 + OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_boardShareController) + 112)
                + 112);
  id v3 = objc_allocWithZone((Class)CKSystemSharingUIObserver);
  id v4 = v2;
  id v5 = [v3 initWithContainer:v4];
  swift_allocObject();
  swift_unknownObjectWeakInit();
  swift_retain();
  CKSystemSharingUIObserver.systemSharingUIDidSaveShareBlock.setter();
  swift_release();
  swift_allocObject();
  swift_unknownObjectWeakInit();
  swift_retain();
  CKSystemSharingUIObserver.systemSharingUIDidStopSharingBlock.setter();
  swift_release();
  uint64_t v6 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_cloudKitObserver);
  *(void *)(v1 + OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_cloudKitObserver) = v5;
  id v7 = v5;

  sub_10050BF48(0, &qword_1016A2590);
  id v8 = v4;
  static CKRecord.SystemType.share.getter();
  uint64_t v9 = (void *)CKRecordObserver.init(container:recordType:)();
  uint64_t v10 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v13[4] = sub_100F37ABC;
  v13[5] = v10;
  v13[0] = _NSConcreteStackBlock;
  v13[1] = *(void *)"";
  void v13[2] = sub_10051CE64;
  v13[3] = &unk_101533898;
  uint64_t v11 = _Block_copy(v13);
  swift_release();
  [v9 registerWithBlock:v11];

  _Block_release(v11);
  uint64_t v12 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_cloudKitRecordObserver);
  *(void *)(v1 + OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_cloudKitRecordObserver) = v9;
}

void sub_100EF2ECC(uint64_t a1, void *a2, char a3, void *a4)
{
  uint64_t v7 = sub_1005057FC(&qword_101672BB0);
  __chkstk_darwin(v7 - 8, v8);
  uint64_t v10 = (char *)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1005057FC(&qword_101672C30);
  __chkstk_darwin(v11 - 8, v12);
  uint64_t v14 = (char *)&v44 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for CRLBoardIdentifier(0);
  uint64_t v46 = *(void *)(v15 - 8);
  uint64_t v16 = *(void *)(v46 + 64);
  __chkstk_darwin(v15, v17);
  uint64_t v18 = (char *)&v44 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19, v20);
  uint64_t v22 = (char *)&v44 - v21;
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v24 = (void *)Strong;
    if (a3)
    {
      id v27 = self;
      swift_errorRetain();
      id v28 = [v27 defaultCenter];
      if (qword_1016701A0 != -1) {
        swift_once();
      }
      [v28 postNotificationName:qword_10171CB88 object:v24];

      if (qword_10166FBE0 != -1) {
        swift_once();
      }
      swift_beginAccess();
      uint64_t v29 = (void *)static OS_os_log.shareState;
      sub_1005057FC((uint64_t *)&unk_101672B40);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_10117E810;
      *(void *)(inited + 56) = sub_10050BF48(0, &qword_10167BED0);
      *(void *)(inited + 64) = sub_10062E0F4((unint64_t *)&qword_101685CC8, &qword_10167BED0);
      *(void *)(inited + 32) = a4;
      id v31 = v29;
      id v32 = a4;
      uint64_t v33 = static os_log_type_t.default.getter();
      sub_100BAC898((uint64_t)v31, (uint64_t)&_mh_execute_header, v33, (uint64_t)"Share UI failed to save. recordID: %@", 37, 2, inited);
      swift_setDeallocating();
      sub_1005057FC(&qword_101672B50);
      swift_arrayDestroy();

      sub_100EF2B34((uint64_t)a2, (uint64_t)v32);
      sub_100541080(a2, 1);
    }
    else
    {
      id v45 = a2;
      id v25 = [v45 recordID];
      id v26 = [v25 zoneID];

      sub_100D29C10((uint64_t)v14);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v46 + 48))(v14, 1, v15) == 1)
      {
        sub_100541080(a2, 0);

        sub_100522F00((uint64_t)v14, &qword_101672C30);
      }
      else
      {
        sub_100F37878((uint64_t)v14, (uint64_t)v22, type metadata accessor for CRLBoardIdentifier);
        if (qword_10166FBE0 != -1) {
          swift_once();
        }
        swift_beginAccess();
        id v34 = (void *)static OS_os_log.shareState;
        sub_1005057FC((uint64_t *)&unk_101672B40);
        uint64_t v35 = swift_initStackObject();
        *(_OWORD *)(v35 + 16) = xmmword_10117E810;
        *(void *)(v35 + 56) = sub_10050BF48(0, &qword_101672C00);
        *(void *)(v35 + 64) = sub_10062E0F4((unint64_t *)&qword_101682FE0, &qword_101672C00);
        *(void *)(v35 + 32) = v45;
        sub_100626B48(a2, 0);
        id v36 = v34;
        uint64_t v37 = static os_log_type_t.default.getter();
        sub_100BAC898((uint64_t)v36, (uint64_t)&_mh_execute_header, v37, (uint64_t)"Share UI saved successfully. share: %@", 38, 2, v35);
        swift_setDeallocating();
        sub_1005057FC(&qword_101672B50);
        swift_arrayDestroy();

        uint64_t v38 = type metadata accessor for TaskPriority();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 56))(v10, 1, 1, v38);
        sub_100F38118((uint64_t)v22, (uint64_t)v18, type metadata accessor for CRLBoardIdentifier);
        type metadata accessor for MainActor();
        sub_100626B48(a2, 0);
        id v39 = v24;
        uint64_t v40 = static MainActor.shared.getter();
        unint64_t v41 = (*(unsigned __int8 *)(v46 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v46 + 80);
        unint64_t v42 = (v16 + v41 + 7) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v43 = (void *)swift_allocObject();
        _OWORD v43[2] = v40;
        v43[3] = &protocol witness table for MainActor;
        v43[4] = v39;
        sub_100F37878((uint64_t)v18, (uint64_t)v43 + v41, type metadata accessor for CRLBoardIdentifier);
        *(void *)((char *)v43 + v42) = v45;
        sub_1006D9104((uint64_t)v10, (uint64_t)&unk_1016A25D0, (uint64_t)v43);
        swift_release();
        sub_100541080(a2, 0);

        sub_100F38180((uint64_t)v22, type metadata accessor for CRLBoardIdentifier);
      }
    }
  }
}

uint64_t sub_100EF3598(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _OWORD v6[2] = type metadata accessor for MainActor();
  void v6[3] = static MainActor.shared.getter();
  uint64_t v9 = (void *)swift_task_alloc();
  v6[4] = v9;
  void *v9 = v6;
  v9[1] = sub_100766CCC;
  return sub_100ED4738(a5, a6, 0);
}

uint64_t sub_100EF3660(void *a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void (*a8)(uint64_t, uint64_t))
{
  id v31 = a8;
  uint64_t v28 = a6;
  uint64_t v29 = a7;
  int v27 = a3;
  uint64_t v10 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v33 = *(void *)(v10 - 8);
  __chkstk_darwin(v10, v11);
  uint64_t v13 = &v26[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v32 = type metadata accessor for DispatchQoS();
  uint64_t v14 = *(void *)(v32 - 8);
  __chkstk_darwin(v32, v15);
  uint64_t v17 = &v26[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10050BF48(0, (unint64_t *)&qword_1016725C0);
  uint64_t v30 = static OS_dispatch_queue.main.getter();
  uint64_t v18 = swift_allocObject();
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  swift_unknownObjectWeakInit();

  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = v18;
  *(void *)(v20 + 24) = a2;
  uint64_t v21 = v27 & 1;
  *(unsigned char *)(v20 + 32) = v21;
  *(void *)(v20 + 40) = a1;
  aBlock[4] = v28;
  void aBlock[5] = v20;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = *(void *)"";
  void aBlock[2] = sub_100679958;
  void aBlock[3] = v29;
  uint64_t v22 = _Block_copy(aBlock);
  swift_retain();
  v31(a2, v21);
  id v23 = a1;
  static DispatchQoS.unspecified.getter();
  id v34 = _swiftEmptyArrayStorage;
  sub_100F359B0((unint64_t *)&qword_1016747E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_1005057FC((uint64_t *)&unk_1016725D0);
  sub_100523288((unint64_t *)&qword_1016747F0, (uint64_t *)&unk_1016725D0);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  uint64_t v24 = (void *)v30;
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v22);

  (*(void (**)(unsigned char *, uint64_t))(v33 + 8))(v13, v10);
  (*(void (**)(unsigned char *, uint64_t))(v14 + 8))(v17, v32);
  swift_release();
  return swift_release();
}

uint64_t sub_100EF39CC(uint64_t a1, uint64_t a2, char a3, void *a4)
{
  uint64_t v7 = sub_1005057FC(&qword_101672BB0);
  __chkstk_darwin(v7 - 8, v8);
  uint64_t v10 = (char *)&v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1005057FC(&qword_101672C30);
  __chkstk_darwin(v11 - 8, v12);
  uint64_t v14 = (char *)&v41 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for CRLBoardIdentifier(0);
  uint64_t v41 = *(void *)(v15 - 8);
  uint64_t v16 = *(void *)(v41 + 64);
  __chkstk_darwin(v15, v17);
  uint64_t v18 = (char *)&v41 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19, v20);
  uint64_t v22 = (char *)&v41 - v21;
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v24 = (void *)result;
    if (a3)
    {
      swift_errorRetain();
      if (qword_10166FBE0 != -1) {
        swift_once();
      }
      swift_beginAccess();
      id v26 = (void *)static OS_os_log.shareState;
      sub_1005057FC((uint64_t *)&unk_101672B40);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_10117E810;
      *(void *)(inited + 56) = sub_10050BF48(0, &qword_10167BED0);
      *(void *)(inited + 64) = sub_10062E0F4((unint64_t *)&qword_101685CC8, &qword_10167BED0);
      *(void *)(inited + 32) = a4;
      id v28 = a4;
      id v29 = v26;
      uint64_t v30 = static os_log_type_t.default.getter();
      sub_100BAC898((uint64_t)v29, (uint64_t)&_mh_execute_header, v30, (uint64_t)"Share UI failed to stop. recordID: %@", 37, 2, inited);
      swift_setDeallocating();
      sub_1005057FC(&qword_101672B50);
      swift_arrayDestroy();

      sub_100EF2B34(a2, (uint64_t)v28);
      return sub_100541074(a2, 1);
    }
    else
    {
      id v25 = [a4 zoneID];
      sub_100D29C10((uint64_t)v14);

      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v41 + 48))(v14, 1, v15) == 1)
      {

        return sub_100522F00((uint64_t)v14, &qword_101672C30);
      }
      else
      {
        sub_100F37878((uint64_t)v14, (uint64_t)v22, type metadata accessor for CRLBoardIdentifier);
        if (qword_10166FBE0 != -1) {
          swift_once();
        }
        swift_beginAccess();
        id v31 = (void *)static OS_os_log.shareState;
        sub_1005057FC((uint64_t *)&unk_101672B40);
        uint64_t v32 = swift_initStackObject();
        *(_OWORD *)(v32 + 16) = xmmword_10117E810;
        *(void *)(v32 + 56) = sub_10050BF48(0, &qword_10167BED0);
        *(void *)(v32 + 64) = sub_10062E0F4((unint64_t *)&qword_101685CC8, &qword_10167BED0);
        *(void *)(v32 + 32) = a4;
        id v33 = v31;
        id v34 = a4;
        uint64_t v35 = static os_log_type_t.default.getter();
        sub_100BAC898((uint64_t)v33, (uint64_t)&_mh_execute_header, v35, (uint64_t)"Share UI stopped successfully. recordID: %@", 43, 2, v32);
        swift_setDeallocating();
        sub_1005057FC(&qword_101672B50);
        swift_arrayDestroy();

        uint64_t v36 = type metadata accessor for TaskPriority();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v36 - 8) + 56))(v10, 1, 1, v36);
        sub_100F38118((uint64_t)v22, (uint64_t)v18, type metadata accessor for CRLBoardIdentifier);
        type metadata accessor for MainActor();
        id v37 = v24;
        uint64_t v38 = static MainActor.shared.getter();
        unint64_t v39 = (*(unsigned __int8 *)(v41 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v41 + 80);
        uint64_t v40 = (void *)swift_allocObject();
        _OWORD v40[2] = v38;
        v40[3] = &protocol witness table for MainActor;
        v40[4] = v37;
        sub_100F37878((uint64_t)v18, (uint64_t)v40 + v39, type metadata accessor for CRLBoardIdentifier);
        sub_1006D9104((uint64_t)v10, (uint64_t)&unk_1016A25B8, (uint64_t)v40);

        swift_release();
        return sub_100F38180((uint64_t)v22, type metadata accessor for CRLBoardIdentifier);
      }
    }
  }
  return result;
}

uint64_t sub_100EF3FB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[2] = type metadata accessor for MainActor();
  v5[3] = static MainActor.shared.getter();
  uint64_t v7 = (void *)swift_task_alloc();
  long long v5[4] = v7;
  *uint64_t v7 = v5;
  v7[1] = sub_100765B7C;
  return sub_100ED4738(a5, 0, 1);
}

void sub_100EF4074(uint64_t a1)
{
  uint64_t v2 = sub_1005057FC(&qword_101672BB0);
  __chkstk_darwin(v2 - 8, v3);
  unint64_t v157 = (char *)&v140 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1005057FC(&qword_101672C30);
  __chkstk_darwin(v5 - 8, v6);
  uint64_t v8 = (char *)&v140 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for CRLBoardIdentifier(0);
  uint64_t v160 = *(void *)(v9 - 8);
  uint64_t v10 = *(void *)(v160 + 64);
  __chkstk_darwin(v9, v11);
  uint64_t v156 = (uint64_t)&v140 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12, v13);
  uint64_t v15 = (char *)&v140 - v14;
  uint64_t v16 = type metadata accessor for CKRecordChange.ChangeType();
  uint64_t v17 = *(void **)(v16 - 8);
  __chkstk_darwin(v16, v18);
  uint64_t v158 = (id *)((char *)&v140 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v20, v21);
  uint64_t v159 = (id *)((char *)&v140 - v22);
  __chkstk_darwin(v23, v24);
  id v26 = (void **)((char *)&v140 - v25);
  swift_beginAccess();
  uint64_t Strong = (char *)swift_unknownObjectWeakLoadStrong();
  if (!Strong) {
    return;
  }
  unint64_t v161 = Strong;
  uint64_t v154 = a1;
  int64_t v155 = v15;
  CKRecordChange.changeType.getter();
  id v28 = (uint64_t (*)(void **, uint64_t))v17[11];
  int v29 = v28(v26, v16);
  if (v29 == enum case for CKRecordChange.ChangeType.fetch(_:)
    || v29 == enum case for CKRecordChange.ChangeType.modify(_:))
  {
    int v153 = enum case for CKRecordChange.ChangeType.modify(_:);
    int v150 = enum case for CKRecordChange.ChangeType.fetch(_:);
    uint64_t v151 = (void (*)(void **, uint64_t))v17[12];
    uint64_t v152 = v17 + 12;
    v151(v26, v16);
    id v31 = *v26;
    self;
    uint64_t v32 = swift_dynamicCastObjCClass();
    if (!v32)
    {

      return;
    }
    id v33 = (void *)v32;
    uint64_t v148 = v16;
    id v34 = v31;
    id v149 = v33;
    id v35 = [v33 recordID];
    id v36 = [v35 zoneID];

    sub_100D29C10((uint64_t)v8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v160 + 48))(v8, 1, v9) == 1)
    {

      sub_100522F00((uint64_t)v8, &qword_101672C30);
      return;
    }
    uint64_t v41 = (uint64_t)v8;
    uint64_t v42 = (uint64_t)v155;
    sub_100F37878(v41, (uint64_t)v155, type metadata accessor for CRLBoardIdentifier);
    uint64_t v43 = &v161[OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_boardInfos];
    swift_beginAccess();
    uint64_t v44 = *(void *)v43;
    if (!*(void *)(v44 + 16) || (unint64_t v45 = sub_1009563EC(v42), (v46 & 1) == 0))
    {
      swift_endAccess();

      uint64_t v62 = v42;
LABEL_26:
      sub_100F38180(v62, type metadata accessor for CRLBoardIdentifier);
      return;
    }
    uint64_t v47 = *(void *)(*(void *)(v44 + 56) + 8 * v45);
    swift_endAccess();
    uint64_t v48 = *(char **)(*(void *)(v47 + 16) + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard);
    id v49 = *(void **)(*(void *)&v48[OBJC_IVAR____TtC8Freeform8CRLBoard_shareState] + 16);
    if (!v49)
    {
      uint64_t v63 = v48;
      sub_100F38180((uint64_t)v155, type metadata accessor for CRLBoardIdentifier);

      return;
    }
    uint64_t v141 = v28;
    uint64_t v50 = qword_10166FBE0;
    uint64_t v143 = v48;
    id v51 = v49;
    if (v50 != -1) {
      swift_once();
    }
    swift_beginAccess();
    unint64_t v52 = (void *)static OS_os_log.shareState;
    uint64_t v146 = sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t inited = swift_initStackObject();
    long long v144 = xmmword_10117E810;
    *(_OWORD *)(inited + 16) = xmmword_10117E810;
    id v142 = (id)sub_10050BF48(0, &qword_101672C00);
    *(void *)(inited + 56) = v142;
    uint64_t v140 = sub_10062E0F4((unint64_t *)&qword_101682FE0, &qword_101672C00);
    *(void *)(inited + 64) = v140;
    *(void *)(inited + 32) = v51;
    id v54 = v51;
    id v55 = v52;
    uint64_t v56 = static os_log_type_t.default.getter();
    sub_100BAC898((uint64_t)v55, (uint64_t)&_mh_execute_header, v56, (uint64_t)"Record observer saw change for open board with existing share: %@", 65, 2, inited);
    swift_setDeallocating();
    uint64_t v147 = sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();

    id v145 = v54;
    id v57 = [v54 recordChangeTag];
    if (v57)
    {
      char v58 = v57;
      uint64_t v59 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v61 = v60;
    }
    else
    {
      uint64_t v59 = 0;
      uint64_t v61 = 0;
    }
    id v64 = [v149 recordChangeTag];
    if (v64)
    {
      id v65 = v64;
      uint64_t v66 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v68 = v67;

      if (v61)
      {
        id v69 = v149;
        if (v68)
        {
          if (v59 == v66 && v61 == v68)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
LABEL_53:
            sub_100F38180((uint64_t)v155, type metadata accessor for CRLBoardIdentifier);

            return;
          }
          char v118 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v118) {
            goto LABEL_53;
          }
LABEL_40:
          char v70 = (void *)static OS_os_log.shareState;
          uint64_t v71 = swift_initStackObject();
          *(_OWORD *)(v71 + 16) = v144;
          uint64_t v72 = v140;
          *(void *)(v71 + 56) = v142;
          *(void *)(v71 + 64) = v72;
          *(void *)(v71 + 32) = v69;
          id v142 = v34;
          id v73 = v70;
          uint64_t v74 = static os_log_type_t.default.getter();
          sub_100BAC898((uint64_t)v73, (uint64_t)&_mh_execute_header, v74, (uint64_t)"Record observer saw change to in memory share. Forcing fetch. Share: %@", 71, 2, v71);
          swift_setDeallocating();
          swift_arrayDestroy();

          uint64_t v75 = v159;
          CKRecordChange.changeType.getter();
          uint64_t v76 = v148;
          uint64_t v77 = v141;
          int v78 = v141(v75, v148);
          if (v78 == v153)
          {
            v151(v75, v76);

            id v79 = [self defaultCenter];
            if (qword_1016701A0 != -1) {
              swift_once();
            }
            uint64_t v80 = v161;
            [v79 postNotificationName:qword_10171CB88 object:v161];

            uint64_t v81 = (void *)static OS_os_log.shareState;
            uint64_t v82 = swift_initStackObject();
            *(_OWORD *)(v82 + 16) = v144;
            *(void *)(v82 + 56) = sub_10050BF48(0, (unint64_t *)&qword_10167C060);
            *(void *)(v82 + 64) = sub_10062E0F4(&qword_1016A2598, (unint64_t *)&qword_10167C060);
            id v83 = v142;
            *(void *)(v82 + 32) = v142;
            id v84 = v81;
            uint64_t v85 = static os_log_type_t.default.getter();
            sub_100BAC898((uint64_t)v84, (uint64_t)&_mh_execute_header, v85, (uint64_t)"Record observer saw share modification: %@", 42, 2, v82);
            swift_setDeallocating();
            swift_arrayDestroy();

            uint64_t v62 = (uint64_t)v155;
            goto LABEL_26;
          }
          uint64_t v86 = v75;
          uint64_t v87 = (void (*)(id *, uint64_t))v17[1];
          v87(v86, v76);
          uint64_t v88 = v158;
          CKRecordChange.changeType.getter();
          int v89 = v77(v88, v76);
          if (v89 != v150)
          {
            sub_100F38180((uint64_t)v155, type metadata accessor for CRLBoardIdentifier);

            id v117 = v142;
            v87(v88, v76);
            return;
          }
          v151(v88, v76);

          uint64_t v90 = (void *)static OS_os_log.shareState;
          uint64_t v91 = swift_initStackObject();
          *(_OWORD *)(v91 + 16) = v144;
          *(void *)(v91 + 56) = sub_10050BF48(0, (unint64_t *)&qword_10167C060);
          *(void *)(v91 + 64) = sub_10062E0F4(&qword_1016A2598, (unint64_t *)&qword_10167C060);
          *(void *)(v91 + 32) = v142;
          id v92 = v90;
          uint64_t v93 = static os_log_type_t.default.getter();
          sub_100BAC898((uint64_t)v92, (uint64_t)&_mh_execute_header, v93, (uint64_t)"Record observer saw share fetch: %@", 35, 2, v91);
          swift_setDeallocating();
          swift_arrayDestroy();

          id v94 = [v69 recordChangeTag];
          if (v94)
          {
            unint64_t v95 = v94;
            uint64_t v96 = static String._unconditionallyBridgeFromObjectiveC(_:)();
            uint64_t v98 = v97;

            id v99 = [v145 recordChangeTag];
            if (v99)
            {
              objc_super v100 = v99;
              uint64_t v101 = static String._unconditionallyBridgeFromObjectiveC(_:)();
              uint64_t v103 = v102;

              if (v101 != v96 || v103 != v98) && (_stringCompareWithSmolCheck(_:_:expecting:)())
              {
                objc_super v104 = (void *)static OS_os_log.shareState;
                uint64_t v105 = swift_initStackObject();
                *(_OWORD *)(v105 + 16) = xmmword_10117D8C0;
                *(void *)(v105 + 56) = &type metadata for String;
                unint64_t v106 = sub_100528BE4();
                *(void *)(v105 + 32) = v96;
                *(void *)(v105 + 40) = v98;
                *(void *)(v105 + 96) = &type metadata for String;
                *(void *)(v105 + 104) = v106;
                *(void *)(v105 + 64) = v106;
                *(void *)(v105 + 72) = v101;
                *(void *)(v105 + 80) = v103;
                id v107 = v104;
                uint64_t v108 = static os_log_type_t.default.getter();
                sub_100BAC898((uint64_t)v107, (uint64_t)&_mh_execute_header, v108, (uint64_t)"Updating board's CKShare because change tag is newer. existing etag:%{public}@ > new etag:%{public}@", 100, 2, v105);
                swift_setDeallocating();
                swift_arrayDestroy();

                uint64_t v109 = type metadata accessor for TaskPriority();
                uint64_t v110 = (uint64_t)v157;
                (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v109 - 8) + 56))(v157, 1, 1, v109);
                uint64_t v112 = (uint64_t)v155;
                uint64_t v111 = v156;
                sub_100F38118((uint64_t)v155, v156, type metadata accessor for CRLBoardIdentifier);
                type metadata accessor for MainActor();
                uint64_t v159 = (id *)v142;
                char v113 = v161;
                uint64_t v114 = static MainActor.shared.getter();
                unint64_t v115 = (*(unsigned __int8 *)(v160 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v160 + 80);
                uint64_t v116 = (void *)swift_allocObject();
                v116[2] = v114;
                v116[3] = &protocol witness table for MainActor;
                v116[4] = v113;
                sub_100F37878(v111, (uint64_t)v116 + v115, type metadata accessor for CRLBoardIdentifier);
                *(void *)((char *)v116 + ((v10 + v115 + 7) & 0xFFFFFFFFFFFFFFF8)) = v149;
                sub_1006D9104(v110, (uint64_t)&unk_1016A25A8, (uint64_t)v116);

                swift_release();
                uint64_t v62 = v112;
                goto LABEL_26;
              }
              swift_bridgeObjectRelease();
            }
            swift_bridgeObjectRelease();
          }
          uint64_t v119 = (void *)static OS_os_log.shareState;
          uint64_t v120 = swift_initStackObject();
          *(_OWORD *)(v120 + 16) = xmmword_10117D8C0;
          id v121 = v119;
          id v122 = v145;
          id v123 = [v145 recordChangeTag];
          if (v123)
          {
            uint64_t v124 = v123;
            uint64_t v125 = static String._unconditionallyBridgeFromObjectiveC(_:)();
            unint64_t v127 = v126;
          }
          else
          {
            uint64_t v125 = 0;
            unint64_t v127 = 0;
          }
          *(void *)(v120 + 56) = &type metadata for String;
          unint64_t v128 = sub_100528BE4();
          *(void *)(v120 + 64) = v128;
          if (v127) {
            uint64_t v129 = v125;
          }
          else {
            uint64_t v129 = 0;
          }
          unint64_t v130 = 0xE000000000000000;
          if (v127) {
            unint64_t v130 = v127;
          }
          *(void *)(v120 + 32) = v129;
          *(void *)(v120 + 40) = v130;
          id v131 = [v69 recordChangeTag];
          if (v131)
          {
            uint64_t v132 = v131;
            uint64_t v133 = static String._unconditionallyBridgeFromObjectiveC(_:)();
            unint64_t v135 = v134;

            uint64_t v136 = (uint64_t *)(v120 + 72);
            *(void *)(v120 + 96) = &type metadata for String;
            *(void *)(v120 + 104) = v128;
            if (v135)
            {
              *uint64_t v136 = v133;
              uint64_t v137 = (uint64_t)v155;
              uint64_t v138 = v143;
LABEL_69:
              *(void *)(v120 + 80) = v135;
              uint64_t v139 = static os_log_type_t.default.getter();
              sub_100BAC898((uint64_t)v121, (uint64_t)&_mh_execute_header, v139, (uint64_t)"Not updating board's CKShare because existing etag:%{public}@ <= new etag:%{public}@", 84, 2, v120);
              swift_setDeallocating();
              swift_arrayDestroy();

              uint64_t v62 = v137;
              goto LABEL_26;
            }
          }
          else
          {
            uint64_t v136 = (uint64_t *)(v120 + 72);
            *(void *)(v120 + 96) = &type metadata for String;
            *(void *)(v120 + 104) = v128;
          }
          uint64_t v137 = (uint64_t)v155;
          uint64_t v138 = v143;
          *uint64_t v136 = 0;
          unint64_t v135 = 0xE000000000000000;
          goto LABEL_69;
        }
      }
      else
      {
        id v69 = v149;
        if (!v68) {
          goto LABEL_53;
        }
      }
    }
    else
    {
      id v69 = v149;
      if (!v61) {
        goto LABEL_53;
      }
    }
    swift_bridgeObjectRelease();
    goto LABEL_40;
  }
  if (v29 == enum case for CKRecordChange.ChangeType.delete(_:))
  {
    if (qword_10166FBE0 != -1) {
      swift_once();
    }
    swift_beginAccess();
    id v37 = (id)static OS_os_log.shareState;
    uint64_t v38 = static os_log_type_t.default.getter();
    sub_100BAC898((uint64_t)v37, (uint64_t)&_mh_execute_header, v38, (uint64_t)"Record observer saw delete", 26, 2, (uint64_t)_swiftEmptyArrayStorage);
  }
  else
  {
    if (qword_10166FBE0 != -1) {
      swift_once();
    }
    swift_beginAccess();
    id v39 = (id)static OS_os_log.shareState;
    uint64_t v40 = static os_log_type_t.error.getter();
    sub_100BAC898((uint64_t)v39, (uint64_t)&_mh_execute_header, v40, (uint64_t)"Record observer saw unknown record change type.", 47, 2, (uint64_t)_swiftEmptyArrayStorage);

    ((void (*)(void **, uint64_t))v17[1])(v26, v16);
  }
}

uint64_t sub_100EF5130(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _OWORD v6[2] = type metadata accessor for MainActor();
  void v6[3] = static MainActor.shared.getter();
  uint64_t v9 = (void *)swift_task_alloc();
  v6[4] = v9;
  void *v9 = v6;
  v9[1] = sub_100765B7C;
  return sub_100ED4738(a5, a6, 0);
}

uint64_t type metadata accessor for CRLBoardLibrary()
{
  return self;
}

uint64_t sub_100EF524C()
{
  v1[15] = v0;
  v1[16] = *(void *)(type metadata accessor for CRLBoardIdentifier(0) - 8);
  v1[17] = swift_task_alloc();
  v1[18] = swift_task_alloc();
  type metadata accessor for MainActor();
  v1[19] = static MainActor.shared.getter();
  uint64_t v3 = dispatch thunk of Actor.unownedExecutor.getter();
  v1[20] = v3;
  v1[21] = v2;
  return _swift_task_switch(sub_100EF534C, v3, v2);
}

uint64_t sub_100EF534C()
{
  *(void *)(v0 + 176) = *(void *)(*(void *)(v0 + 120) + OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_store);
  return _swift_task_switch(sub_100EF537C, 0, 0);
}

uint64_t sub_100EF537C()
{
  uint64_t v1 = v0[22];
  uint64_t v2 = swift_task_alloc();
  v0[23] = v2;
  *(void *)(v2 + 16) = v1;
  uint64_t v3 = (void *)swift_task_alloc();
  v0[24] = v3;
  uint64_t v4 = sub_1005057FC(&qword_101677400);
  void *v3 = v0;
  v3[1] = sub_100EF5480;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v0 + 14, 0, 0, 0xD000000000000022, 0x8000000101296450, sub_100F38914, v2, v4);
}

uint64_t sub_100EF5480()
{
  *(void *)(*(void *)v1 + 200) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_100EF5914;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_100EF559C;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100EF559C()
{
  v0[26] = v0[14];
  return _swift_task_switch(sub_100EF55BC, v0[20], v0[21]);
}

uint64_t sub_100EF55BC()
{
  uint64_t v1 = *(void *)(v0 + 208);
  uint64_t v2 = *(void *)(v0 + 128);
  char v3 = *(unsigned char *)(v1 + 32);
  *(unsigned char *)(v0 + 248) = v3;
  uint64_t v4 = -1;
  uint64_t v5 = -1 << v3;
  if (-v5 < 64) {
    uint64_t v4 = ~(-1 << -(char)v5);
  }
  unint64_t v6 = v4 & *(void *)(v1 + 56);
  if (v6)
  {
    uint64_t v7 = 0;
    unint64_t v8 = __clz(__rbit64(v6));
    uint64_t v9 = (v6 - 1) & v6;
LABEL_5:
    *(void *)(v0 + 216) = v7;
    *(void *)(v0 + 224) = v9;
    uint64_t v10 = *(void *)(v0 + 136);
    uint64_t v11 = *(void *)(v0 + 144);
    sub_100F38118(*(void *)(v1 + 48) + *(void *)(v2 + 72) * v8, v11, type metadata accessor for CRLBoardIdentifier);
    sub_100F37878(v11, v10, type metadata accessor for CRLBoardIdentifier);
    if (qword_10166FA60 != -1) {
      swift_once();
    }
    swift_beginAccess();
    uint64_t v12 = (void *)static OS_os_log.crlBoardLibrary;
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_10117E810;
    id v14 = v12;
    uint64_t v15 = UUID.uuidString.getter();
    uint64_t v17 = v16;
    *(void *)(inited + 56) = &type metadata for String;
    *(void *)(inited + 64) = sub_100528BE4();
    *(void *)(inited + 32) = v15;
    *(void *)(inited + 40) = v17;
    uint64_t v18 = static os_log_type_t.default.getter();
    sub_100BAC898((uint64_t)v14, (uint64_t)&_mh_execute_header, v18, (uint64_t)"Found discardable board %{public}@, marking as not discardable", 62, 2, inited);
    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();

    uint64_t v19 = (void *)swift_task_alloc();
    *(void *)(v0 + 232) = v19;
    *uint64_t v19 = v0;
    v19[1] = sub_100EF59EC;
    uint64_t v20 = *(void *)(v0 + 136);
    return sub_100EF14A4(v20);
  }
  unint64_t v22 = 63 - v5;
  if (v22 > 0x7F)
  {
    unint64_t v23 = *(void *)(v1 + 64);
    if (v23)
    {
      uint64_t v7 = 1;
LABEL_13:
      uint64_t v9 = (v23 - 1) & v23;
      unint64_t v8 = __clz(__rbit64(v23)) + (v7 << 6);
      goto LABEL_5;
    }
    if (v22 >= 0xC0)
    {
      unint64_t v23 = *(void *)(v1 + 72);
      if (v23)
      {
        uint64_t v7 = 2;
        goto LABEL_13;
      }
      if (v22 >= 0x100)
      {
        unint64_t v23 = *(void *)(v1 + 80);
        if (v23)
        {
          uint64_t v7 = 3;
          goto LABEL_13;
        }
        if (v22 >= 0x140)
        {
          unint64_t v23 = *(void *)(v1 + 88);
          if (v23)
          {
            uint64_t v7 = 4;
            goto LABEL_13;
          }
          uint64_t v24 = 0;
          uint64_t v25 = v22 >> 6;
          if (v25 <= 5) {
            uint64_t v25 = 5;
          }
          uint64_t v26 = v25 - 5;
          while (v26 != v24)
          {
            unint64_t v23 = *(void *)(v1 + 96 + 8 * v24++);
            if (v23)
            {
              uint64_t v7 = v24 + 4;
              goto LABEL_13;
            }
          }
        }
      }
    }
  }
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  int v27 = *(uint64_t (**)(void))(v0 + 8);
  return v27();
}

uint64_t sub_100EF5914()
{
  swift_task_dealloc();
  uint64_t v1 = *(void *)(v0 + 160);
  uint64_t v2 = *(void *)(v0 + 168);
  return _swift_task_switch(sub_100EF5978, v1, v2);
}

uint64_t sub_100EF5978()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100EF59EC()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 240) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 168);
  uint64_t v4 = *(void *)(v2 + 160);
  if (v0) {
    uint64_t v5 = sub_100EF5E7C;
  }
  else {
    uint64_t v5 = sub_100EF5B28;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_100EF5B28()
{
  uint64_t result = sub_100F38180(*(void *)(v0 + 136), type metadata accessor for CRLBoardIdentifier);
  int64_t v2 = *(void *)(v0 + 216);
  unint64_t v3 = *(void *)(v0 + 224);
  if (v3)
  {
    uint64_t v4 = (v3 - 1) & v3;
    unint64_t v5 = __clz(__rbit64(v3)) | (v2 << 6);
    uint64_t result = *(void *)(v0 + 208);
LABEL_3:
    *(void *)(v0 + 216) = v2;
    *(void *)(v0 + 224) = v4;
    uint64_t v6 = *(void *)(v0 + 136);
    uint64_t v7 = *(void *)(v0 + 144);
    sub_100F38118(*(void *)(result + 48) + *(void *)(*(void *)(v0 + 128) + 72) * v5, v7, type metadata accessor for CRLBoardIdentifier);
    sub_100F37878(v7, v6, type metadata accessor for CRLBoardIdentifier);
    if (qword_10166FA60 != -1) {
      swift_once();
    }
    swift_beginAccess();
    unint64_t v8 = (void *)static OS_os_log.crlBoardLibrary;
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_10117E810;
    id v10 = v8;
    uint64_t v11 = UUID.uuidString.getter();
    uint64_t v13 = v12;
    *(void *)(inited + 56) = &type metadata for String;
    *(void *)(inited + 64) = sub_100528BE4();
    *(void *)(inited + 32) = v11;
    *(void *)(inited + 40) = v13;
    uint64_t v14 = static os_log_type_t.default.getter();
    sub_100BAC898((uint64_t)v10, (uint64_t)&_mh_execute_header, v14, (uint64_t)"Found discardable board %{public}@, marking as not discardable", 62, 2, inited);
    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();

    uint64_t v15 = (void *)swift_task_alloc();
    *(void *)(v0 + 232) = v15;
    *uint64_t v15 = v0;
    v15[1] = sub_100EF59EC;
    uint64_t v16 = *(void *)(v0 + 136);
    return sub_100EF14A4(v16);
  }
  int64_t v17 = v2 + 1;
  if (__OFADD__(v2, 1))
  {
    __break(1u);
    goto LABEL_26;
  }
  int64_t v18 = (unint64_t)((1 << *(unsigned char *)(v0 + 248)) + 63) >> 6;
  uint64_t result = *(void *)(v0 + 208);
  if (v17 < v18)
  {
    uint64_t v19 = result + 56;
    unint64_t v20 = *(void *)(result + 56 + 8 * v17);
    ++v2;
    if (v20)
    {
LABEL_11:
      uint64_t v4 = (v20 - 1) & v20;
      unint64_t v5 = __clz(__rbit64(v20)) + (v2 << 6);
      goto LABEL_3;
    }
    int64_t v2 = v17 + 1;
    if (v17 + 1 < v18)
    {
      unint64_t v20 = *(void *)(v19 + 8 * v2);
      if (v20) {
        goto LABEL_11;
      }
      int64_t v2 = v17 + 2;
      if (v17 + 2 < v18)
      {
        unint64_t v20 = *(void *)(v19 + 8 * v2);
        if (v20) {
          goto LABEL_11;
        }
        int64_t v21 = v17 + 3;
        if (v21 < v18)
        {
          unint64_t v20 = *(void *)(v19 + 8 * v21);
          if (v20)
          {
            int64_t v2 = v21;
            goto LABEL_11;
          }
          while (1)
          {
            int64_t v2 = v21 + 1;
            if (__OFADD__(v21, 1)) {
              break;
            }
            if (v2 >= v18) {
              goto LABEL_22;
            }
            unint64_t v20 = *(void *)(v19 + 8 * v2);
            ++v21;
            if (v20) {
              goto LABEL_11;
            }
          }
LABEL_26:
          __break(1u);
          return result;
        }
      }
    }
  }
LABEL_22:
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v22 = *(uint64_t (**)(void))(v0 + 8);
  return v22();
}

uint64_t sub_100EF5E7C()
{
  uint64_t v1 = *(void *)(v0 + 136);
  swift_release();
  sub_100F38180(v1, type metadata accessor for CRLBoardIdentifier);
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  int64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

void sub_100EF5F1C()
{
  id v1 = [self defaultCenter];
  id v3 = v1;
  if (qword_10166FE00 != -1)
  {
    swift_once();
    id v1 = v3;
  }
  uint64_t v2 = *(void *)(v0 + OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_store);
  [v1 addObserver:v0 selector:"updateStoreSnapshotForHierarchyNotification:" name:qword_10171C2F8 object:v2];
  if (qword_10166FE08 != -1) {
    swift_once();
  }
  [v3 addObserver:v0 selector:"updateBoardMetadataForNotification:" name:qword_10171C300 object:v2];
  if (qword_10166FE10 != -1) {
    swift_once();
  }
  [v3 addObserver:v0 selector:"updateBoardMetadataForNotification:" name:qword_10171C308 object:v2];
  if (qword_10166FE18 != -1) {
    swift_once();
  }
  [v3 addObserver:v0 selector:"updateBoardMetadataForNotification:" name:qword_10171C310 object:v2];
  if (qword_10166FE20 != -1) {
    swift_once();
  }
  [v3 addObserver:v0 selector:"updateBoardMetadataForNotification:" name:qword_10171C318 object:v2];
  if (qword_10166FE28 != -1) {
    swift_once();
  }
  [v3 addObserver:v0 selector:"updateBoardMetadataForNotification:" name:qword_10171C320 object:v2];
}

uint64_t sub_100EF6180(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[12] = a3;
  v4[13] = a4;
  void v4[10] = a1;
  v4[11] = a2;
  uint64_t v5 = sub_1005057FC(&qword_10169B558);
  v4[14] = v5;
  v4[15] = *(void *)(v5 - 8);
  v4[16] = swift_task_alloc();
  v4[17] = swift_task_alloc();
  v4[18] = swift_task_alloc();
  sub_1005057FC(&qword_1016A24D8);
  v4[19] = swift_task_alloc();
  uint64_t v6 = sub_1005057FC(&qword_1016A24E0);
  v4[20] = v6;
  v4[21] = *(void *)(v6 - 8);
  v4[22] = swift_task_alloc();
  sub_1005057FC(&qword_101672BB0);
  v4[23] = swift_task_alloc();
  v4[24] = swift_task_alloc();
  uint64_t v7 = type metadata accessor for CRLBoardIdentifier(0);
  v4[25] = v7;
  uint64_t v8 = *(void *)(v7 - 8);
  v4[26] = v8;
  v4[27] = *(void *)(v8 + 64);
  v4[28] = swift_task_alloc();
  v4[29] = swift_task_alloc();
  v4[30] = type metadata accessor for MainActor();
  v4[31] = static MainActor.shared.getter();
  uint64_t v10 = dispatch thunk of Actor.unownedExecutor.getter();
  v4[32] = v10;
  v4[33] = v9;
  return _swift_task_switch(sub_100EF63E0, v10, v9);
}

uint64_t sub_100EF63E0()
{
  uint64_t v39 = *(void *)(v0 + 208);
  uint64_t v1 = *(void *)(v0 + 96);
  sub_100F359B0(&qword_10167D0C8, (void (*)(uint64_t))type metadata accessor for CRLBoardIdentifier);
  uint64_t v35 = Dictionary.init(minimumCapacity:)();
  uint64_t v36 = v1 + 56;
  uint64_t v2 = -1;
  uint64_t v3 = -1 << *(unsigned char *)(v1 + 32);
  if (-v3 < 64) {
    uint64_t v2 = ~(-1 << -(char)v3);
  }
  unint64_t v4 = v2 & *(void *)(v1 + 56);
  int64_t v37 = (unint64_t)(63 - v3) >> 6;
  uint64_t v38 = v1;
  uint64_t v5 = swift_bridgeObjectRetain();
  int64_t v9 = 0;
  while (1)
  {
    if (v4)
    {
      uint64_t v40 = (v4 - 1) & v4;
      int64_t v41 = v9;
      unint64_t v11 = __clz(__rbit64(v4)) | (v9 << 6);
      goto LABEL_21;
    }
    int64_t v12 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
LABEL_33:
      __break(1u);
      return TaskGroup.Iterator.next(isolation:)(v5, v6, v7, v8);
    }
    if (v12 >= v37) {
      goto LABEL_29;
    }
    unint64_t v13 = *(void *)(v36 + 8 * v12);
    int64_t v14 = v9 + 1;
    if (!v13)
    {
      int64_t v14 = v9 + 2;
      if (v9 + 2 >= v37) {
        goto LABEL_29;
      }
      unint64_t v13 = *(void *)(v36 + 8 * v14);
      if (!v13)
      {
        int64_t v14 = v9 + 3;
        if (v9 + 3 >= v37) {
          goto LABEL_29;
        }
        unint64_t v13 = *(void *)(v36 + 8 * v14);
        if (!v13) {
          break;
        }
      }
    }
LABEL_20:
    uint64_t v40 = (v13 - 1) & v13;
    int64_t v41 = v14;
    unint64_t v11 = __clz(__rbit64(v13)) + (v14 << 6);
LABEL_21:
    uint64_t v16 = *(void *)(v0 + 224);
    uint64_t v17 = *(void *)(v0 + 232);
    uint64_t v18 = *(void *)(v0 + 192);
    uint64_t v42 = *(void *)(v0 + 184);
    uint64_t v19 = *(void **)(v0 + 104);
    sub_100F38118(*(void *)(v38 + 48) + *(void *)(v39 + 72) * v11, v17, type metadata accessor for CRLBoardIdentifier);
    uint64_t v20 = type metadata accessor for TaskPriority();
    uint64_t v21 = *(void *)(v20 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v21 + 56))(v18, 1, 1, v20);
    sub_100F37878(v17, v16, type metadata accessor for CRLBoardIdentifier);
    unint64_t v22 = (*(unsigned __int8 *)(v39 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v39 + 80);
    uint64_t v23 = (void *)swift_allocObject();
    v23[2] = 0;
    void v23[3] = 0;
    v23[4] = v19;
    sub_100F37878(v16, (uint64_t)v23 + v22, type metadata accessor for CRLBoardIdentifier);
    sub_100522E9C(v18, v42, &qword_101672BB0);
    LODWORD(v18) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v21 + 48))(v42, 1, v20);
    id v24 = v19;
    uint64_t v25 = *(void *)(v0 + 184);
    if (v18 == 1)
    {
      sub_100522F00(*(void *)(v0 + 184), &qword_101672BB0);
    }
    else
    {
      TaskPriority.rawValue.getter();
      (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v25, v20);
    }
    unint64_t v4 = v40;
    int64_t v9 = v41;
    if (v23[2])
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v26 = dispatch thunk of Actor.unownedExecutor.getter();
      uint64_t v28 = v27;
      swift_unknownObjectRelease();
    }
    else
    {
      uint64_t v26 = 0;
      uint64_t v28 = 0;
    }
    uint64_t v29 = **(void **)(v0 + 88);
    uint64_t v30 = swift_allocObject();
    *(void *)(v30 + 16) = &unk_1016A24F0;
    *(void *)(v30 + 24) = v23;
    uint64_t v31 = v28 | v26;
    if (v28 | v26)
    {
      uint64_t v31 = v0 + 16;
      *(void *)(v0 + 16) = 0;
      *(void *)(v0 + 24) = 0;
      *(void *)(v0 + 32) = v26;
      *(void *)(v0 + 40) = v28;
    }
    uint64_t v10 = *(void *)(v0 + 192);
    *(void *)(v0 + 48) = 1;
    *(void *)(v0 + 56) = v31;
    *(void *)(v0 + 64) = v29;
    swift_task_create();
    swift_release();
    uint64_t v5 = sub_100522F00(v10, &qword_101672BB0);
  }
  uint64_t v15 = v9 + 4;
  if (v9 + 4 < v37)
  {
    unint64_t v13 = *(void *)(v36 + 8 * v15);
    if (!v13)
    {
      while (1)
      {
        int64_t v14 = v15 + 1;
        if (__OFADD__(v15, 1)) {
          goto LABEL_33;
        }
        if (v14 >= v37) {
          goto LABEL_29;
        }
        unint64_t v13 = *(void *)(v36 + 8 * v14);
        ++v15;
        if (v13) {
          goto LABEL_20;
        }
      }
    }
    int64_t v14 = v9 + 4;
    goto LABEL_20;
  }
LABEL_29:
  swift_release();
  TaskGroup.makeAsyncIterator()();
  *(void *)(v0 + 272) = v35;
  uint64_t v32 = static MainActor.shared.getter();
  *(void *)(v0 + 280) = v32;
  id v33 = (void *)swift_task_alloc();
  *(void *)(v0 + 288) = v33;
  void *v33 = v0;
  v33[1] = sub_100EF68F0;
  uint64_t v5 = *(void *)(v0 + 152);
  uint64_t v8 = *(void *)(v0 + 160);
  uint64_t v7 = &protocol witness table for MainActor;
  uint64_t v6 = v32;
  return TaskGroup.Iterator.next(isolation:)(v5, v6, v7, v8);
}

uint64_t sub_100EF68F0()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_release();
  uint64_t v2 = *(void *)(v1 + 264);
  uint64_t v3 = *(void *)(v1 + 256);
  return _swift_task_switch(sub_100EF6A34, v3, v2);
}

uint64_t sub_100EF6A34()
{
  uint64_t v1 = v0[19];
  uint64_t v2 = v0[14];
  int v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0[15] + 48))(v1, 1, v2);
  uint64_t v4 = v0[34];
  if (v3 == 1)
  {
    uint64_t v5 = (void *)v0[10];
    (*(void (**)(void, void))(v0[21] + 8))(v0[22], v0[20]);
    swift_release();
    void *v5 = v4;
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v6 = (uint64_t (*)(void))v0[1];
    return v6();
  }
  uint64_t v9 = v0[17];
  uint64_t v8 = v0[18];
  uint64_t v10 = v0[16];
  uint64_t v11 = *(int *)(v2 + 48);
  char v12 = *(unsigned char *)(v1 + v11);
  sub_100F37878(v1, v8, type metadata accessor for CRLBoardIdentifier);
  *(unsigned char *)(v8 + v11) = v12;
  uint64_t v13 = *(int *)(v2 + 48);
  sub_100F38118(v8, v9, type metadata accessor for CRLBoardIdentifier);
  *(unsigned char *)(v9 + v13) = v12;
  uint64_t v14 = *(int *)(v2 + 48);
  sub_100F38118(v8, v10, type metadata accessor for CRLBoardIdentifier);
  *(unsigned char *)(v10 + v14) = v12;
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v0[9] = v4;
  unint64_t v19 = sub_1009563EC(v9);
  uint64_t v20 = *(void *)(v4 + 16);
  BOOL v21 = (v16 & 1) == 0;
  uint64_t v22 = v20 + v21;
  if (__OFADD__(v20, v21))
  {
    __break(1u);
    goto LABEL_22;
  }
  char v23 = v16;
  if (*(void *)(v0[34] + 24) >= v22)
  {
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      sub_100985D98();
    }
    goto LABEL_14;
  }
  uint64_t v24 = v0[17];
  sub_100970A44(v22, isUniquelyReferenced_nonNull_native);
  unint64_t v25 = sub_1009563EC(v24);
  if ((v23 & 1) == (v26 & 1))
  {
    unint64_t v19 = v25;
LABEL_14:
    uint64_t v27 = (void *)v0[9];
    if (v23)
    {
      *(unsigned char *)(v27[7] + v19) = v12;
      goto LABEL_18;
    }
    uint64_t v28 = v0[26];
    uint64_t v29 = v0[17];
    v27[(v19 >> 6) + 8] |= 1 << v19;
    uint64_t v22 = sub_100F38118(v29, v27[6] + *(void *)(v28 + 72) * v19, type metadata accessor for CRLBoardIdentifier);
    *(unsigned char *)(v27[7] + v19) = v12;
    uint64_t v30 = v27[2];
    BOOL v31 = __OFADD__(v30, 1);
    uint64_t v32 = v30 + 1;
    if (!v31)
    {
      v27[2] = v32;
LABEL_18:
      uint64_t v33 = v0[17];
      uint64_t v34 = v0[18];
      uint64_t v35 = v0[16];
      swift_bridgeObjectRelease();
      sub_100F38180(v33, type metadata accessor for CRLBoardIdentifier);
      sub_100522F00(v34, &qword_10169B558);
      sub_100F38180(v35, type metadata accessor for CRLBoardIdentifier);
      v0[34] = v27;
      uint64_t v36 = static MainActor.shared.getter();
      v0[35] = v36;
      int64_t v37 = (void *)swift_task_alloc();
      v0[36] = v37;
      void *v37 = v0;
      v37[1] = sub_100EF68F0;
      uint64_t v22 = v0[19];
      uint64_t v18 = v0[20];
      uint64_t v17 = &protocol witness table for MainActor;
      uint64_t v16 = v36;
      return TaskGroup.Iterator.next(isolation:)(v22, v16, v17, v18);
    }
LABEL_22:
    __break(1u);
    return TaskGroup.Iterator.next(isolation:)(v22, v16, v17, v18);
  }
  return KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
}

uint64_t sub_100EF6E10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[2] = a1;
  v5[3] = a5;
  uint64_t v7 = (void *)swift_task_alloc();
  long long v5[4] = v7;
  *uint64_t v7 = v5;
  v7[1] = sub_100EF6EB0;
  return sub_100EF704C(a5);
}

uint64_t sub_100EF6EB0(char a1)
{
  *(unsigned char *)(*(void *)v1 + 40) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_100EF6FB0, 0, 0);
}

uint64_t sub_100EF6FB0()
{
  char v1 = *(unsigned char *)(v0 + 40);
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = *(void *)(v0 + 24);
  uint64_t v4 = *(int *)(sub_1005057FC(&qword_10169B558) + 48);
  sub_100F38118(v3, v2, type metadata accessor for CRLBoardIdentifier);
  *(unsigned char *)(v2 + v4) = v1;
  uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
  return v5();
}

uint64_t sub_100EF704C(uint64_t a1)
{
  v2[30] = a1;
  v2[31] = v1;
  sub_1005057FC((uint64_t *)&unk_1016741E0);
  v2[32] = swift_task_alloc();
  v2[33] = type metadata accessor for CRLBoardViewModelMetadata(0);
  v2[34] = swift_task_alloc();
  type metadata accessor for MainActor();
  v2[35] = static MainActor.shared.getter();
  uint64_t v4 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_100EF7144, v4, v3);
}

uint64_t sub_100EF7144()
{
  uint64_t v1 = v0[30];
  swift_release();
  uint64_t v2 = (void *)(v1 + *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20));
  if (*v2) {
    BOOL v3 = 0;
  }
  else {
    BOOL v3 = v2[1] == 0xE000000000000000;
  }
  if (!v3 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
  {
    uint64_t v8 = 3;
    goto LABEL_15;
  }
  sub_100ED7F04(v0[30], v0[34]);
  uint64_t v4 = v0[32];
  sub_100522E9C(v0[34] + *(int *)(v0[33] + 28), v4, (uint64_t *)&unk_1016741E0);
  uint64_t v5 = type metadata accessor for CRLBoardViewModelMetadata.ShareMetadata(0);
  int v6 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v4, 1, v5);
  uint64_t v7 = (id *)v0[32];
  if (v6 == 1)
  {
    sub_100522F00(v0[32], (uint64_t *)&unk_1016741E0);
    goto LABEL_12;
  }
  id v9 = *v7;
  uint64_t v10 = (char *)*v7;
  sub_100F38180((uint64_t)v7, type metadata accessor for CRLBoardViewModelMetadata.ShareMetadata);
  if (!v9)
  {
LABEL_12:
    sub_100F38180(v0[34], type metadata accessor for CRLBoardViewModelMetadata);
    char v12 = self;
    id v13 = [v12 standardUserDefaults];
    unsigned __int8 v14 = [v13 BOOLForKey:@"CRLDidShowDeleteConfirmationAlert"];

    if (v14)
    {
      uint64_t v8 = 0;
    }
    else
    {
      id v15 = [v12 standardUserDefaults];
      uint64_t v8 = 1;
      [v15 setBool:1 forKey:@"CRLDidShowDeleteConfirmationAlert"];
    }
    goto LABEL_15;
  }
  id v11 = *(id *)&v10[OBJC_IVAR____TtC8Freeform27CRLCollaborationParticipant_ckShareParticipant];

  if ([v11 role] == (id)1)
  {
    sub_100F38180(v0[34], type metadata accessor for CRLBoardViewModelMetadata);

    uint64_t v8 = 2;
  }
  else
  {
    if (qword_10166FBE0 != -1) {
      swift_once();
    }
    uint64_t v18 = v0[34];
    swift_beginAccess();
    unint64_t v19 = (void *)static OS_os_log.shareState;
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_10117E810;
    *(void *)(inited + 56) = &type metadata for String;
    *(void *)(inited + 64) = sub_100528BE4();
    *(void *)(inited + 32) = 0;
    *(void *)(inited + 40) = 0xE000000000000000;
    id v21 = v19;
    uint64_t v22 = static os_log_type_t.error.getter();
    sub_100BAC898((uint64_t)v21, (uint64_t)&_mh_execute_header, v22, (uint64_t)"Board identifier says we're the owner but existing share metadata does not: %@", 78, 2, inited);

    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();

    sub_100F38180(v18, type metadata accessor for CRLBoardViewModelMetadata);
    uint64_t v8 = 3;
  }
LABEL_15:
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v16 = (uint64_t (*)(uint64_t))v0[1];
  return v16(v8);
}

uint64_t sub_100EF7778(uint64_t a1)
{
  v2[14] = a1;
  v2[15] = v1;
  v2[16] = type metadata accessor for MainActor();
  v2[17] = static MainActor.shared.getter();
  uint64_t v4 = (void *)swift_task_alloc();
  v2[18] = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_100EF783C;
  return sub_100ED3CA0(a1, 0);
}

uint64_t sub_100EF783C(uint64_t a1)
{
  BOOL v3 = (void *)*v2;
  v3[19] = a1;
  v3[20] = v1;
  swift_task_dealloc();
  uint64_t v5 = dispatch thunk of Actor.unownedExecutor.getter();
  v3[21] = v5;
  v3[22] = v4;
  if (v1) {
    uint64_t v6 = sub_100EF7DF4;
  }
  else {
    uint64_t v6 = sub_100EF79A0;
  }
  return _swift_task_switch(v6, v5, v4);
}

uint64_t sub_100EF79A0()
{
  uint64_t v1 = v0[19];
  if (v1)
  {
    uint64_t v2 = v0[14];
    unint64_t v3 = *(void *)(*(void *)(v0[15] + OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_sharedHighlightController)
                   + OBJC_IVAR____TtC8Freeform28CRLSharedHighlightController_sharedHighlights);
    uint64_t v4 = swift_task_alloc();
    *(void *)(v4 + 16) = v2;
    swift_bridgeObjectRetain();
    uint64_t v5 = sub_100ED54F0((uint64_t (*)(id *))sub_100DBFA74, v4, v3);
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    if (v5)
    {
      if (*((unsigned char *)v5 + OBJC_IVAR____TtC8Freeform18CRLSharedHighlight_accepted) == 1) {
        sub_10053D730(v5);
      }
    }
    uint64_t v6 = (void *)swift_task_alloc();
    v0[23] = v6;
    *uint64_t v6 = v0;
    v6[1] = sub_100EF7C4C;
    uint64_t v7 = v0[14];
    return sub_100F8515C(v7, v1);
  }
  else
  {
    swift_release();
    if (qword_10166FBE0 != -1) {
      swift_once();
    }
    swift_beginAccess();
    id v9 = (void *)static OS_os_log.shareState;
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_10117E810;
    id v11 = v9;
    uint64_t v12 = UUID.uuidString.getter();
    uint64_t v14 = v13;
    *(void *)(inited + 56) = &type metadata for String;
    *(void *)(inited + 64) = sub_100528BE4();
    *(void *)(inited + 32) = v12;
    *(void *)(inited + 40) = v14;
    uint64_t v15 = static os_log_type_t.error.getter();
    sub_100BAC898((uint64_t)v11, (uint64_t)&_mh_execute_header, v15, (uint64_t)"No CKShare for shared-to-me board: %{public}@", 45, 2, inited);
    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();

    uint64_t v16 = (uint64_t (*)(void))v0[1];
    return v16();
  }
}

uint64_t sub_100EF7C4C()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 192) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 176);
  uint64_t v4 = *(void *)(v2 + 168);
  if (v0) {
    uint64_t v5 = sub_100EF7E58;
  }
  else {
    uint64_t v5 = sub_100EF7D88;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_100EF7D88()
{
  uint64_t v1 = *(void **)(v0 + 152);
  swift_release();

  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_100EF7DF4()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100EF7E58()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

void sub_100EF7EC4()
{
  uint64_t v1 = OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_pauseSnapshotUpdateCount;
  uint64_t v2 = *(void *)(v0 + OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_pauseSnapshotUpdateCount);
  BOOL v3 = __OFADD__(v2, 1);
  uint64_t v4 = v2 + 1;
  if (v3)
  {
    __break(1u);
    goto LABEL_10;
  }
  *(void *)(v0 + OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_pauseSnapshotUpdateCount) = v4;
  if (v4 == 1)
  {
    if (qword_10166FA60 == -1)
    {
LABEL_4:
      swift_beginAccess();
      id v5 = (id)static OS_os_log.crlBoardLibrary;
      uint64_t v6 = static os_log_type_t.default.getter();
      sub_100BAC898((uint64_t)v5, (uint64_t)&_mh_execute_header, v6, (uint64_t)"Pausing snapshot updates", 24, 2, (uint64_t)_swiftEmptyArrayStorage);
      goto LABEL_8;
    }
LABEL_10:
    swift_once();
    goto LABEL_4;
  }
  if (qword_10166FA60 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v7 = (void *)static OS_os_log.crlBoardLibrary;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117E810;
  uint64_t v9 = *(void *)(v0 + v1);
  *(void *)(inited + 56) = &type metadata for Int;
  *(void *)(inited + 64) = &protocol witness table for Int;
  *(void *)(inited + 32) = v9;
  id v5 = v7;
  uint64_t v10 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v5, (uint64_t)&_mh_execute_header, v10, (uint64_t)"Snapshot update pause counter incremented to: %d", 48, 2, inited);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();
LABEL_8:
}

uint64_t sub_100EF8088(uint64_t a1)
{
  v2[2] = a1;
  v2[3] = v1;
  type metadata accessor for MainActor();
  v2[4] = static MainActor.shared.getter();
  uint64_t v4 = dispatch thunk of Actor.unownedExecutor.getter();
  v2[5] = v4;
  v2[6] = v3;
  return _swift_task_switch(sub_100EF8120, v4, v3);
}

uint64_t sub_100EF8120()
{
  *(void *)(v0 + 56) = *(void *)(*(void *)(v0 + 24) + OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_store);
  return _swift_task_switch(sub_100EF8150, 0, 0);
}

uint64_t sub_100EF8150()
{
  uint64_t v1 = v0[7];
  uint64_t v2 = v0[2];
  uint64_t v3 = swift_task_alloc();
  v0[8] = v3;
  *(void *)(v3 + 16) = v1;
  *(void *)(v3 + 24) = v2;
  uint64_t v4 = (void *)swift_task_alloc();
  v0[9] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_100EF8248;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v4, 0, 0, 0xD000000000000026, 0x8000000101297890, sub_100F375BC, v3, (char *)&type metadata for () + 8);
}

uint64_t sub_100EF8248()
{
  *(void *)(*(void *)v1 + 80) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_100EEF6C4;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_100EF8364;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100EF8364()
{
  return _swift_task_switch(sub_100EF8380, 0, 0);
}

uint64_t sub_100EF8380()
{
  uint64_t v1 = v0[7];
  uint64_t v2 = v0[2];
  uint64_t v3 = swift_task_alloc();
  v0[11] = v3;
  *(void *)(v3 + 16) = v2;
  *(void *)(v3 + 24) = v1;
  uint64_t v4 = (void *)swift_task_alloc();
  v0[12] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_100EF8478;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v4, 0, 0, 0xD00000000000002BLL, 0x80000001012978C0, sub_100F375C4, v3, (char *)&type metadata for () + 8);
}

uint64_t sub_100EF8478()
{
  *(void *)(*(void *)v1 + 104) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_100EF8594;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_100EE1688;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100EF8594()
{
  swift_task_dealloc();
  uint64_t v1 = *(void *)(v0 + 40);
  uint64_t v2 = *(void *)(v0 + 48);
  return _swift_task_switch(sub_100EDB9D4, v1, v2);
}

uint64_t sub_100EF85F8(uint64_t a1)
{
  v2[5] = a1;
  v2[6] = v1;
  type metadata accessor for MainActor();
  v2[7] = static MainActor.shared.getter();
  uint64_t v4 = dispatch thunk of Actor.unownedExecutor.getter();
  v2[8] = v4;
  v2[9] = v3;
  return _swift_task_switch(sub_100EF8690, v4, v3);
}

uint64_t sub_100EF8690()
{
  if (qword_10166FA60 != -1) {
    swift_once();
  }
  uint64_t v1 = *(void *)(v0 + 48);
  swift_beginAccess();
  id v2 = (id)static OS_os_log.crlBoardLibrary;
  uint64_t v3 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v2, (uint64_t)&_mh_execute_header, v3, (uint64_t)"Called hideFromRecentlyDeleted in board library", 47, 2, (uint64_t)_swiftEmptyArrayStorage);

  *(void *)(v0 + 80) = *(void *)(v1 + OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_store);
  return _swift_task_switch(sub_100EF8790, 0, 0);
}

uint64_t sub_100EF8790()
{
  uint64_t v1 = v0[10];
  uint64_t v2 = v0[5];
  uint64_t v3 = swift_task_alloc();
  v0[11] = v3;
  *(void *)(v3 + 16) = v1;
  *(void *)(v3 + 24) = v2;
  uint64_t v4 = (void *)swift_task_alloc();
  v0[12] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_100EF8888;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v4, 0, 0, 0xD000000000000035, 0x8000000101297DF0, sub_100F377B0, v3, (char *)&type metadata for () + 8);
}

uint64_t sub_100EF8888()
{
  *(void *)(*(void *)v1 + 104) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_100EF8A20;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_100EF89A4;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100EF89A4()
{
  return _swift_task_switch(sub_100EF89BC, *(void *)(v0 + 64), *(void *)(v0 + 72));
}

uint64_t sub_100EF89BC()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100EF8A20()
{
  swift_task_dealloc();
  uint64_t v1 = *(void *)(v0 + 64);
  uint64_t v2 = *(void *)(v0 + 72);
  return _swift_task_switch(sub_100AF3D3C, v1, v2);
}

uint64_t sub_100EF8A84(void *a1)
{
  uint64_t v51 = type metadata accessor for CRLBoardCRDTData(0);
  __chkstk_darwin(v51, v3);
  uint64_t v5 = (char *)&v47 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for CRLBoardLibraryViewModel.Folder(0);
  __chkstk_darwin(v6 - 8, v7);
  id v49 = (char *)&v47 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  __chkstk_darwin(v50, v9);
  id v11 = (char *)&v47 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a1) {
    return (uint64_t)a1;
  }
  id v12 = a1;
  id v13 = [v12 children];
  type metadata accessor for CRLBoardLibraryViewModelItemNode();
  unint64_t v14 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  unint64_t v52 = (char *)&_swiftEmptySetSingleton;
  if (v14 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = _CocoaArrayWrapper.endIndex.getter();
    uint64_t v15 = result;
    id v48 = v12;
    if (result) {
      goto LABEL_4;
    }
  }
  else
  {
    uint64_t v15 = *(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    id v48 = v12;
    if (v15)
    {
LABEL_4:
      if (v15 < 1) {
        goto LABEL_47;
      }
      uint64_t v47 = v1;
      uint64_t v17 = 0;
      do
      {
        if ((v14 & 0xC000000000000001) != 0) {
          id v23 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          id v23 = *(id *)(v14 + 8 * v17 + 32);
        }
        uint64_t v24 = v23;
        sub_100F38118((uint64_t)v23 + OBJC_IVAR____TtC8Freeform32CRLBoardLibraryViewModelItemNode_item, (uint64_t)v11, type metadata accessor for CRLBoardLibraryViewModel.Item);
        int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        if (EnumCaseMultiPayload)
        {
          if (EnumCaseMultiPayload == 1)
          {
            uint64_t v26 = (uint64_t)v49;
            sub_100F37878((uint64_t)v11, (uint64_t)v49, type metadata accessor for CRLBoardLibraryViewModel.Folder);
            Swift::Int v19 = sub_100DD4C48();
            Swift::Int v20 = v27;
            id v21 = type metadata accessor for CRLBoardLibraryViewModel.Folder;
            uint64_t v22 = v26;
          }
          else
          {
            uint64_t v18 = (Swift::Int *)&v11[*(int *)(sub_1005057FC(&qword_101677100) + 48)];
            Swift::Int v19 = *v18;
            Swift::Int v20 = v18[1];
            id v21 = type metadata accessor for CRLBoardIdentifier;
            uint64_t v22 = (uint64_t)v11;
          }
          sub_100F38180(v22, v21);
        }
        else
        {
          Swift::Int v19 = sub_100DD8CAC();
          Swift::Int v20 = v28;
        }
        ++v17;
        sub_100CB8180(&v55, v19, v20);

        swift_bridgeObjectRelease();
      }
      while (v15 != v17);
      swift_bridgeObjectRelease_n();
      id v49 = v52;
      uint64_t v1 = v47;
      goto LABEL_19;
    }
  }
  swift_bridgeObjectRelease_n();
  id v49 = (char *)&_swiftEmptySetSingleton;
LABEL_19:
  uint64_t v29 = (uint64_t *)(v1 + OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_boardInfos);
  swift_beginAccess();
  uint64_t v30 = *v29;
  id v54 = &_swiftEmptySetSingleton;
  uint64_t v31 = *(void *)(v30 + 64);
  uint64_t v50 = v30 + 64;
  uint64_t v32 = 1 << *(unsigned char *)(v30 + 32);
  uint64_t v33 = -1;
  if (v32 < 64) {
    uint64_t v33 = ~(-1 << v32);
  }
  unint64_t v34 = v33 & v31;
  int64_t v35 = (unint64_t)(v32 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain_n();
  int64_t v36 = 0;
  while (1)
  {
    if (v34)
    {
      unint64_t v37 = __clz(__rbit64(v34));
      v34 &= v34 - 1;
      unint64_t v38 = v37 | (v36 << 6);
      goto LABEL_23;
    }
    int64_t v44 = v36 + 1;
    if (__OFADD__(v36, 1))
    {
      __break(1u);
      goto LABEL_46;
    }
    if (v44 >= v35) {
      goto LABEL_43;
    }
    unint64_t v45 = *(void *)(v50 + 8 * v44);
    ++v36;
    if (!v45)
    {
      int64_t v36 = v44 + 1;
      if (v44 + 1 >= v35) {
        goto LABEL_43;
      }
      unint64_t v45 = *(void *)(v50 + 8 * v36);
      if (!v45)
      {
        int64_t v36 = v44 + 2;
        if (v44 + 2 >= v35) {
          goto LABEL_43;
        }
        unint64_t v45 = *(void *)(v50 + 8 * v36);
        if (!v45)
        {
          int64_t v36 = v44 + 3;
          if (v44 + 3 >= v35) {
            goto LABEL_43;
          }
          unint64_t v45 = *(void *)(v50 + 8 * v36);
          if (!v45)
          {
            int64_t v36 = v44 + 4;
            if (v44 + 4 >= v35) {
              goto LABEL_43;
            }
            unint64_t v45 = *(void *)(v50 + 8 * v36);
            if (!v45) {
              break;
            }
          }
        }
      }
    }
LABEL_42:
    unint64_t v34 = (v45 - 1) & v45;
    unint64_t v38 = __clz(__rbit64(v45)) + (v36 << 6);
LABEL_23:
    uint64_t v39 = *(char **)(*(void *)(*(void *)(*(void *)(v30 + 56) + 8 * v38) + 16)
                   + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard);
    uint64_t v40 = *(void *)&v39[OBJC_IVAR____TtC8Freeform8CRLBoard_data] + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
    swift_beginAccess();
    sub_100F38118(v40, (uint64_t)v5, type metadata accessor for CRLBoardCRDTData);
    swift_retain();
    int64_t v41 = v39;
    sub_1005057FC(&qword_101674450);
    CRRegister.wrappedValue.getter();
    Swift::Int v42 = v53[0];
    Swift::Int v43 = v53[1];
    sub_100F38180((uint64_t)v5, type metadata accessor for CRLBoardCRDTData);

    sub_100CB8180(v53, v42, v43);
    swift_release();
    uint64_t result = swift_bridgeObjectRelease();
  }
  int64_t v46 = v44 + 5;
  if (v46 >= v35)
  {
LABEL_43:
    swift_release();
    swift_bridgeObjectRelease();
    a1 = (void *)sub_100ED8F78((uint64_t)v54, (uint64_t)v49);

    return (uint64_t)a1;
  }
  unint64_t v45 = *(void *)(v50 + 8 * v46);
  if (v45)
  {
    int64_t v36 = v46;
    goto LABEL_42;
  }
  while (1)
  {
    int64_t v36 = v46 + 1;
    if (__OFADD__(v46, 1)) {
      break;
    }
    if (v36 >= v35) {
      goto LABEL_43;
    }
    unint64_t v45 = *(void *)(v50 + 8 * v36);
    ++v46;
    if (v45) {
      goto LABEL_42;
    }
  }
LABEL_46:
  __break(1u);
LABEL_47:
  __break(1u);
  return result;
}

uint64_t sub_100EF904C(uint64_t a1, uint64_t a2, char a3, char a4)
{
  *(void *)(v5 + 504) = a2;
  *(void *)(v5 + 512) = v4;
  *(unsigned char *)(v5 + 1073) = a4;
  *(unsigned char *)(v5 + 1072) = a3;
  *(void *)(v5 + 496) = a1;
  *(void *)(v5 + 520) = type metadata accessor for CRLBoardIdentifierAndValue(0);
  *(void *)(v5 + 528) = swift_task_alloc();
  *(void *)(v5 + 536) = swift_task_alloc();
  uint64_t v6 = type metadata accessor for CRLBoardViewModelMetadata(0);
  *(void *)(v5 + 544) = v6;
  *(void *)(v5 + 552) = *(void *)(v6 - 8);
  *(void *)(v5 + 560) = swift_task_alloc();
  sub_1005057FC((uint64_t *)&unk_1016741D0);
  *(void *)(v5 + 568) = swift_task_alloc();
  *(void *)(v5 + 576) = swift_task_alloc();
  *(void *)(v5 + 584) = swift_task_alloc();
  type metadata accessor for CRLBoardLibraryViewModel.Folder(0);
  *(void *)(v5 + 592) = swift_task_alloc();
  *(void *)(v5 + 600) = type metadata accessor for CRLBoardIdentifierStorage(0);
  *(void *)(v5 + 608) = swift_task_alloc();
  *(void *)(v5 + 616) = type metadata accessor for CRLBoardCRDTData(0);
  *(void *)(v5 + 624) = swift_task_alloc();
  *(void *)(v5 + 632) = *(void *)(type metadata accessor for CRLBoardIdentifier(0) - 8);
  *(void *)(v5 + 640) = swift_task_alloc();
  *(void *)(v5 + 648) = swift_task_alloc();
  *(void *)(v5 + 656) = swift_task_alloc();
  *(void *)(v5 + 664) = swift_task_alloc();
  *(void *)(v5 + 672) = swift_task_alloc();
  *(void *)(v5 + 680) = swift_task_alloc();
  uint64_t v7 = type metadata accessor for UUID();
  *(void *)(v5 + 688) = v7;
  *(void *)(v5 + 696) = *(void *)(v7 - 8);
  *(void *)(v5 + 704) = swift_task_alloc();
  *(void *)(v5 + 712) = swift_task_alloc();
  *(void *)(v5 + 720) = swift_task_alloc();
  *(void *)(v5 + 728) = type metadata accessor for MainActor();
  *(void *)(v5 + 736) = static MainActor.shared.getter();
  uint64_t v9 = dispatch thunk of Actor.unownedExecutor.getter();
  *(void *)(v5 + 744) = v9;
  *(void *)(v5 + 752) = v8;
  return _swift_task_switch(sub_100EF937C, v9, v8);
}

uint64_t sub_100EF937C()
{
  uint64_t v1 = v0[90];
  uint64_t v2 = v0[87];
  uint64_t v3 = v0[86];
  uint64_t v4 = v0[64];
  uint64_t v5 = OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_storeHierarchySnapshot;
  unint64_t v6 = *(void *)(v4 + OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_storeHierarchySnapshot);
  swift_bridgeObjectRetain();
  sub_100DD59E0(v1);
  uint64_t v7 = swift_task_alloc();
  *(void *)(v7 + 16) = v1;
  uint64_t v8 = sub_1008E81F4(1, (uint64_t (*)(id))sub_100DBFAAC, v7, v6);
  v0[95] = v8;
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v114 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
  v114(v1, v3);
  if (v8)
  {
    unint64_t v9 = v0[62];
    uint64_t v105 = v4;
    unint64_t v106 = v9 >> 62;
    uint64_t v104 = v5;
    if (v9 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v10 = *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    unint64_t v115 = v0;
    unint64_t v107 = v9;
    if (v10)
    {
      uint64_t v11 = sub_1006BB504(0, v10 & ~(v10 >> 63), 0);
      if (v10 < 0)
      {
        __break(1u);
        return _swift_task_switch(v11, v12, v13);
      }
      uint64_t v14 = 0;
      uint64_t v15 = v0[87];
      uint64_t v112 = v0[75];
      unint64_t v111 = v9 & 0xC000000000000001;
      uint64_t v108 = v0[62] + 32;
      uint64_t v16 = (void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16);
      uint64_t v109 = (void (**)(uint64_t, uint64_t, uint64_t))(v15 + 32);
      uint64_t v113 = v10;
      uint64_t v110 = (void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16);
      do
      {
        uint64_t v118 = v14;
        if (v111)
        {
          uint64_t v17 = v115;
          uint64_t v18 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else
        {
          uint64_t v18 = (char *)*(id *)(v108 + 8 * v14);
          uint64_t v17 = v115;
        }
        uint64_t v19 = v17[89];
        uint64_t v20 = v17[88];
        uint64_t v21 = v17[86];
        uint64_t v22 = v17[78];
        uint64_t v23 = OBJC_IVAR____TtC8Freeform8CRLBoard_data;
        uint64_t v24 = *(void *)&v18[OBJC_IVAR____TtC8Freeform8CRLBoard_data]
            + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
        swift_beginAccess();
        sub_100F38118(v24, v22, type metadata accessor for CRLBoardCRDTData);
        swift_retain();
        sub_1005057FC(&qword_101674550);
        CRRegister.wrappedValue.getter();
        sub_100F38180(v22, type metadata accessor for CRLBoardCRDTData);
        swift_release();
        unint64_t v25 = (uint64_t *)(*(void *)&v18[v23] + OBJC_IVAR____TtC8Freeform12CRLBoardData_ownerName);
        uint64_t v27 = *v25;
        unint64_t v26 = v25[1];
        uint64_t v116 = *v16;
        (*v16)(v20, v19, v21);
        BOOL v29 = v27 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v26 == v28;
        if (v29
          || (char v30 = _stringCompareWithSmolCheck(_:_:expecting:)(),
              swift_bridgeObjectRetain(),
              swift_bridgeObjectRelease(),
              (v30 & 1) != 0))
        {
          swift_bridgeObjectRelease();
          uint64_t v27 = 0;
          unint64_t v26 = 0xE000000000000000;
        }
        uint64_t v31 = v17[90];
        uint64_t v32 = v17[89];
        uint64_t v33 = v17[88];
        uint64_t v34 = v17[86];
        uint64_t v35 = v17[85];
        uint64_t v36 = v17[84];
        uint64_t v37 = v17[76];
        v114(v32, v34);
        (*v109)(v37, v33, v34);
        unint64_t v38 = (void *)(v37 + *(int *)(v112 + 20));
        *unint64_t v38 = v27;
        v38[1] = v26;
        sub_100F37878(v37, v36, type metadata accessor for CRLBoardIdentifierStorage);
        sub_100F37878(v36, v35, type metadata accessor for CRLBoardIdentifier);
        uint64_t v16 = v110;
        v116(v31, v35, v34);
        sub_100F38180(v35, type metadata accessor for CRLBoardIdentifier);
        uint64_t v39 = UUID.uuidString.getter();
        uint64_t v41 = v40;
        v114(v31, v34);

        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          sub_1006BB504(0, *(void *)&_swiftEmptyArrayStorage[2] + 1, 1);
        }
        double v43 = _swiftEmptyArrayStorage[2];
        double v42 = _swiftEmptyArrayStorage[3];
        if (*(void *)&v43 >= *(void *)&v42 >> 1) {
          sub_1006BB504(*(void *)&v42 > 1uLL, *(void *)&v43 + 1, 1);
        }
        uint64_t v14 = v118 + 1;
        *(void *)&_swiftEmptyArrayStorage[2] = *(void *)&v43 + 1;
        int64_t v44 = &_swiftEmptyArrayStorage[2 * *(void *)&v43];
        *((void *)v44 + 4) = v39;
        *((void *)v44 + 5) = v41;
      }
      while (v113 != v118 + 1);
    }
    if (qword_10166FA60 != -1) {
      swift_once();
    }
    uint64_t v45 = v115[74];
    swift_beginAccess();
    int64_t v46 = (void *)static OS_os_log.crlBoardLibrary;
    v115[96] = sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_10117D8C0;
    double v48 = _swiftEmptyArrayStorage[2];
    *(void *)(inited + 56) = &type metadata for Int;
    *(void *)(inited + 64) = &protocol witness table for Int;
    *(double *)(inited + 32) = v48;
    v115[55] = _swiftEmptyArrayStorage;
    id v49 = v46;
    sub_1005057FC((uint64_t *)&unk_1016773F0);
    sub_100523288((unint64_t *)&qword_101672620, (uint64_t *)&unk_1016773F0);
    uint64_t v50 = BidirectionalCollection<>.joined(separator:)();
    uint64_t v52 = v51;
    swift_bridgeObjectRelease();
    *(void *)(inited + 96) = &type metadata for String;
    unint64_t v53 = sub_100528BE4();
    v115[97] = v53;
    *(void *)(inited + 104) = v53;
    *(void *)(inited + 72) = v50;
    *(void *)(inited + 80) = v52;
    uint64_t v54 = static os_log_type_t.default.getter();
    sub_100BAC898((uint64_t)v49, (uint64_t)&_mh_execute_header, v54, (uint64_t)"Duplicating %d board(s): %@", 27, 2, inited);
    swift_setDeallocating();
    v115[98] = sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();

    sub_100EF7EC4();
    v115[59] = &_swiftEmptySetSingleton;
    v115[60] = &_swiftEmptySetSingleton;
    v115[57] = &_swiftEmptySetSingleton;
    v115[58] = &_swiftEmptySetSingleton;
    v115[61] = &_swiftEmptySetSingleton;
    unint64_t v55 = *(void *)(v105 + v104);
    uint64_t v56 = sub_1005057FC(&qword_101670F30);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v56 - 8) + 56))(v45, 1, 5, v56);
    uint64_t v57 = swift_task_alloc();
    *(void *)(v57 + 16) = v45;
    swift_bridgeObjectRetain();
    char v58 = (void *)sub_1008E81F4(1, (uint64_t (*)(id))sub_100F38910, v57, v55);
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    sub_100F38180(v45, type metadata accessor for CRLBoardLibraryViewModel.Folder);
    uint64_t v59 = sub_100EF8A84(v58);

    v115[56] = v59;
    if (v106)
    {
      swift_bridgeObjectRetain();
      uint64_t v60 = _CocoaArrayWrapper.endIndex.getter();
    }
    else
    {
      uint64_t v60 = *(void *)((v107 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
    }
    v115[99] = v60;
    if (v60)
    {
      uint64_t v68 = (unsigned __int8 *)(v115 + 134);
      uint64_t v69 = v115[62];
      v115[100] = OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_store;
      v115[101] = _swiftEmptyArrayStorage;
      if ((v69 & 0xC000000000000001) != 0) {
        char v70 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        char v70 = (char *)*(id *)(v69 + 32);
      }
      id v73 = v70;
      v115[102] = v70;
      v115[103] = 1;
      int v74 = *v68;
      uint64_t v75 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v115[69] + 56);
      v75(v115[73], 1, 1, v115[68]);
      if (v74 == 1)
      {
        uint64_t v76 = v115[90];
        uint64_t v77 = v115[83];
        uint64_t v78 = v115[78];
        uint64_t v117 = v115[72];
        uint64_t v79 = OBJC_IVAR____TtC8Freeform8CRLBoard_data;
        uint64_t v80 = *(void *)&v73[OBJC_IVAR____TtC8Freeform8CRLBoard_data]
            + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
        swift_beginAccess();
        sub_100F38118(v80, v78, type metadata accessor for CRLBoardCRDTData);
        uint64_t v81 = v73;
        swift_retain();
        sub_1005057FC(&qword_101674550);
        CRRegister.wrappedValue.getter();
        sub_100F38180(v78, type metadata accessor for CRLBoardCRDTData);
        swift_release();
        uint64_t v82 = (uint64_t *)(*(void *)&v73[v79] + OBJC_IVAR____TtC8Freeform12CRLBoardData_ownerName);
        uint64_t v83 = *v82;
        unint64_t v84 = v82[1];
        swift_bridgeObjectRetain();
        sub_100753370(v76, v83, v84, v77);

        sub_100ED7F04(v77, v117);
        uint64_t v85 = v115[73];
        uint64_t v86 = v115[72];
        uint64_t v87 = v115[68];
        sub_100F38180(v115[83], type metadata accessor for CRLBoardIdentifier);
        sub_100522F00(v85, (uint64_t *)&unk_1016741D0);
        v75(v86, 0, 1, v87);
        sub_10051B3EC(v86, v85, (uint64_t *)&unk_1016741D0);
        uint64_t v68 = (unsigned __int8 *)(v115 + 134);
      }
      uint64_t v88 = v115[78];
      unsigned __int8 v89 = v68[1];
      uint64_t v119 = v115[63];
      uint64_t v90 = *(void **)&v73[OBJC_IVAR____TtC8Freeform8CRLBoard_store];
      v115[104] = v90;
      uint64_t v91 = (void *)v115[56];
      v115[105] = v91;
      uint64_t v92 = *(void *)&v73[OBJC_IVAR____TtC8Freeform8CRLBoard_data] + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
      swift_beginAccess();
      sub_100F38118(v92, v88, type metadata accessor for CRLBoardCRDTData);
      swift_bridgeObjectRetain();
      uint64_t v93 = v73;
      id v94 = v90;
      sub_1005057FC(&qword_101674450);
      CRRegister.wrappedValue.getter();
      uint64_t v95 = v115[53];
      uint64_t v96 = v115[54];
      sub_100F38180(v88, type metadata accessor for CRLBoardCRDTData);

      v115[106] = sub_1006F7638(v95, v96, v119, (v89 & 1) == 0, (uint64_t)v94, v91);
      v115[107] = v97;
      uint64_t v99 = v115[90];
      uint64_t v100 = v115[82];
      swift_bridgeObjectRelease();
      UUID.init()();
      sub_100753370(v99, 0, 0xE000000000000000, v100);
      v115[108] = static MainActor.shared.getter();
      uint64_t v101 = dispatch thunk of Actor.unownedExecutor.getter();
      uint64_t v103 = v101;
      uint64_t v13 = v102;
      v115[109] = v101;
      v115[110] = v102;
      uint64_t v11 = (uint64_t)sub_100EFA29C;
      uint64_t v12 = v103;
      return _swift_task_switch(v11, v12, v13);
    }
    swift_bridgeObjectRelease();
    v115[119] = _swiftEmptyArrayStorage;
    v115[118] = &_swiftEmptySetSingleton;
    uint64_t v71 = (void *)swift_task_alloc();
    v115[120] = v71;
    *uint64_t v71 = v115;
    v71[1] = sub_100EFB87C;
    return sub_100EE13A4((uint64_t)&_swiftEmptySetSingleton);
  }
  else
  {
    uint64_t v61 = v0[74];
    uint64_t v62 = v0[63];
    swift_release();
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t v63 = swift_initStackObject();
    *(_OWORD *)(v63 + 16) = xmmword_10117E810;
    sub_100F38118(v62, v61, type metadata accessor for CRLBoardLibraryViewModel.Folder);
    uint64_t v64 = sub_100DD4C48();
    uint64_t v66 = v65;
    sub_100F38180(v61, type metadata accessor for CRLBoardLibraryViewModel.Folder);
    *(void *)(v63 + 56) = &type metadata for String;
    *(void *)(v63 + 64) = sub_100528BE4();
    *(void *)(v63 + 32) = v64;
    *(void *)(v63 + 40) = v66;
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"_duplicateBoards(_:in:duplicateMetadata:isForSendACopy:)", 56, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLBoardLibrary.swift", 87, 2, 1447, (uint64_t)"Folder not found: %@", 20, 2u, v63);
    sub_1005598CC(v63, (uint64_t)"_duplicateBoards(_:in:duplicateMetadata:isForSendACopy:)", 56, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLBoardLibrary.swift", 87, 2, 1447);
    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();
    sub_1006DAC0C();
    swift_allocError();
    unsigned char *v67 = 1;
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v98 = (uint64_t (*)(void))v0[1];
    return v98();
  }
}

uint64_t sub_100EFA29C()
{
  uint64_t v1 = v0[97];
  uint64_t v2 = (void *)static OS_os_log.crlBoardLibrary;
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117E810;
  id v4 = v2;
  uint64_t v5 = UUID.uuidString.getter();
  *(void *)(inited + 56) = &type metadata for String;
  *(void *)(inited + 64) = v1;
  *(void *)(inited + 32) = v5;
  *(void *)(inited + 40) = v6;
  uint64_t v7 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v4, (uint64_t)&_mh_execute_header, v7, (uint64_t)"Creating new board with Board UUID (%@).", 40, 2, inited);
  swift_setDeallocating();
  swift_arrayDestroy();

  uint64_t v8 = (void *)swift_task_alloc();
  v0[111] = v8;
  *uint64_t v8 = v0;
  v8[1] = sub_100EFA3F0;
  uint64_t v9 = v0[107];
  uint64_t v10 = v0[106];
  uint64_t v11 = v0[82];
  uint64_t v12 = v0[63];
  return sub_100EED748(v11, v12, v10, v9, 0);
}

uint64_t sub_100EFA3F0(uint64_t a1)
{
  id v4 = *(void **)v2;
  *(void *)(*(void *)v2 + 896) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = v4[110];
    uint64_t v6 = v4[109];
    uint64_t v7 = sub_100EFA520;
  }
  else
  {
    v4[113] = a1;
    uint64_t v5 = v4[110];
    uint64_t v6 = v4[109];
    uint64_t v7 = sub_100EFA7B8;
  }
  return _swift_task_switch(v7, v6, v5);
}

uint64_t sub_100EFA520()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v1 = *(void *)(v0 + 752);
  uint64_t v2 = *(void *)(v0 + 744);
  return _swift_task_switch(sub_100EFA5DC, v2, v1);
}

uint64_t sub_100EFA5DC()
{
  uint64_t v1 = *(void **)(v0 + 816);
  uint64_t v2 = *(void **)(v0 + 760);
  uint64_t v3 = *(void *)(v0 + 656);
  uint64_t v4 = *(void *)(v0 + 584);

  swift_release();
  swift_bridgeObjectRelease();
  sub_100F38180(v3, type metadata accessor for CRLBoardIdentifier);
  sub_100522F00(v4, (uint64_t *)&unk_1016741D0);
  swift_bridgeObjectRelease();
  sub_100F0F760();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
  return v5();
}

uint64_t sub_100EFA7B8()
{
  uint64_t v1 = (void *)v0[113];
  swift_release();

  uint64_t v2 = v0[94];
  uint64_t v3 = v0[93];
  return _swift_task_switch(sub_100EFA828, v3, v2);
}

uint64_t sub_100EFA828()
{
  if (*(unsigned char *)(v0 + 1072) == 1)
  {
    uint64_t v1 = *(void *)(v0 + 568);
    uint64_t v2 = *(void *)(v0 + 552);
    uint64_t v3 = *(void *)(v0 + 544);
    sub_100522E9C(*(void *)(v0 + 584), v1, (uint64_t *)&unk_1016741D0);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v1, 1, v3) == 1)
    {
      sub_100522F00(*(void *)(v0 + 568), (uint64_t *)&unk_1016741D0);
    }
    else
    {
      uint64_t v4 = *(void *)(v0 + 656);
      uint64_t v5 = *(void *)(v0 + 560);
      uint64_t v6 = *(int **)(v0 + 544);
      uint64_t v7 = *(void *)(v0 + 536);
      uint64_t v8 = *(void *)(v0 + 528);
      uint64_t v9 = *(void *)(v0 + 520);
      sub_100F37878(*(void *)(v0 + 568), v5, type metadata accessor for CRLBoardViewModelMetadata);
      sub_100F38118(v4, v8, type metadata accessor for CRLBoardIdentifier);
      *(unsigned char *)(v8 + *(int *)(v9 + 20)) = *(unsigned char *)(v5 + 1);
      sub_100CB9858(v7, v8);
      sub_100F38180(v7, type metadata accessor for CRLBoardIdentifierAndValue);
      sub_100F38118(v4, v8, type metadata accessor for CRLBoardIdentifier);
      *(unsigned char *)(v8 + *(int *)(v9 + 20)) = *(unsigned char *)(v5 + v6[13]);
      sub_100CB9858(v7, v8);
      sub_100F38180(v7, type metadata accessor for CRLBoardIdentifierAndValue);
      sub_100F38118(v4, v8, type metadata accessor for CRLBoardIdentifier);
      *(unsigned char *)(v8 + *(int *)(v9 + 20)) = *(unsigned char *)(v5 + v6[14]);
      sub_100CB9858(v7, v8);
      sub_100F38180(v7, type metadata accessor for CRLBoardIdentifierAndValue);
      sub_100F38118(v4, v8, type metadata accessor for CRLBoardIdentifier);
      *(unsigned char *)(v8 + *(int *)(v9 + 20)) = *(unsigned char *)(v5 + v6[15]);
      sub_100CB9858(v7, v8);
      sub_100F38180(v7, type metadata accessor for CRLBoardIdentifierAndValue);
      sub_100F38118(v4, v8, type metadata accessor for CRLBoardIdentifier);
      *(unsigned char *)(v8 + *(int *)(v9 + 20)) = *(unsigned char *)(v5 + v6[12]);
      sub_100CB9858(v7, v8);
      sub_100F38180(v7, type metadata accessor for CRLBoardIdentifierAndValue);
      sub_100F38180(v5, type metadata accessor for CRLBoardViewModelMetadata);
    }
  }
  uint64_t v10 = *(void **)(v0 + 816);
  uint64_t v11 = *(void *)(v0 + 800);
  uint64_t v12 = *(void *)(v0 + 656);
  uint64_t v13 = *(void *)(v0 + 648);
  uint64_t v14 = *(void *)(v0 + 512);
  uint64_t v15 = (objc_class *)type metadata accessor for CRLCommandDuplicateBoard();
  uint64_t v16 = (char *)objc_allocWithZone(v15);
  *(void *)&v16[OBJC_IVAR____TtC8Freeform24CRLCommandDuplicateBoard_boardToDuplicate] = v10;
  *(void *)(v0 + 392) = v16;
  *(void *)(v0 + 400) = v15;
  id v17 = v10;
  *(void *)(v0 + 912) = [v0 initWith];
  sub_100F38118(v12, v13, type metadata accessor for CRLBoardIdentifier);
  uint64_t v22 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_101682FB8 + dword_101682FB8);
  id v18 = *(id *)(v14 + v11);
  uint64_t v19 = (void *)swift_task_alloc();
  *(void *)(v0 + 920) = v19;
  *uint64_t v19 = v0;
  v19[1] = sub_100EFABA4;
  uint64_t v20 = *(void *)(v0 + 648);
  return v22(v20, (uint64_t)v18, 0);
}

uint64_t sub_100EFABA4(uint64_t a1)
{
  uint64_t v3 = (void *)*v2;
  v3[116] = a1;
  v3[117] = v1;
  swift_task_dealloc();
  if (v1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v4 = v3[94];
    uint64_t v5 = v3[93];
    uint64_t v6 = sub_100EFB698;
  }
  else
  {
    uint64_t v4 = v3[94];
    uint64_t v5 = v3[93];
    uint64_t v6 = sub_100EFAD14;
  }
  return _swift_task_switch(v6, v5, v4);
}

uint64_t sub_100EFAD14()
{
  uint64_t v1 = *(void **)(v0 + 912);
  uint64_t v2 = *(char **)(*(void *)(v0 + 928) + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_commandController);
  uint64_t v3 = (double **)&v2[OBJC_IVAR____TtC8Freeform20CRLCommandController_nonUserCommandQueue];
  swift_beginAccess();
  uint64_t v4 = *v3;
  uint64_t v5 = v2;
  id v6 = v1;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  void *v3 = v4;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    uint64_t v4 = sub_100F62618(0, *((void *)v4 + 2) + 1, 1, v4);
    void *v3 = v4;
  }
  unint64_t v9 = *((void *)v4 + 2);
  unint64_t v8 = *((void *)v4 + 3);
  if (v9 >= v8 >> 1)
  {
    uint64_t v4 = sub_100F62618((double *)(v8 > 1), v9 + 1, 1, v4);
    void *v3 = v4;
  }
  uint64_t v10 = *(void *)(v0 + 928);
  uint64_t v11 = *(void *)(v0 + 912);
  uint64_t v12 = *(void *)(v0 + 656);
  uint64_t v13 = *(void *)(v0 + 640);
  *((void *)v4 + 2) = v9 + 1;
  uint64_t v14 = &v4[2 * v9];
  *((void *)v14 + 4) = v11;
  *((unsigned char *)v14 + 40) = 1;
  swift_endAccess();
  sub_10078F194();

  [*(id *)(v10 + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard) savePendingChanges];
  sub_100F38118(v12, v13, type metadata accessor for CRLBoardIdentifier);
  char v15 = swift_isUniquelyReferenced_nonNull_native();
  unint64_t v16 = *(void *)(v0 + 808);
  if ((v15 & 1) == 0) {
    unint64_t v16 = sub_100F632EC(0, *(void *)(v16 + 16) + 1, 1, v16);
  }
  unint64_t v18 = *(void *)(v16 + 16);
  unint64_t v17 = *(void *)(v16 + 24);
  if (v18 >= v17 >> 1) {
    unint64_t v16 = sub_100F632EC(v17 > 1, v18 + 1, 1, v16);
  }
  uint64_t v19 = *(void *)(v0 + 640);
  uint64_t v20 = *(void *)(v0 + 632);
  *(void *)(v16 + 16) = v18 + 1;
  unint64_t v78 = v16;
  sub_100F37878(v19, v16+ ((*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80))+ *(void *)(v20 + 72) * v18, type metadata accessor for CRLBoardIdentifier);
  uint64_t v21 = *(void **)(v0 + 928);
  uint64_t v22 = *(void **)(v0 + 912);
  if (*(void *)(v0 + 448))
  {
    uint64_t v23 = *(void **)(v0 + 832);
    uint64_t v24 = *(void **)(v0 + 816);
    uint64_t v25 = *(void *)(v0 + 656);
    uint64_t v26 = *(void *)(v0 + 584);
    sub_100CB8180((Swift::Int *)(v0 + 408), *(void *)(v0 + 848), *(void *)(v0 + 856));

    swift_bridgeObjectRelease();
    sub_100F38180(v25, type metadata accessor for CRLBoardIdentifier);
    sub_100522F00(v26, (uint64_t *)&unk_1016741D0);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v27 = *(void **)(v0 + 816);
    uint64_t v28 = *(void *)(v0 + 656);
    uint64_t v29 = *(void *)(v0 + 584);

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_100F38180(v28, type metadata accessor for CRLBoardIdentifier);
    sub_100522F00(v29, (uint64_t *)&unk_1016741D0);
  }
  uint64_t v30 = *(void *)(v0 + 824);
  if (v30 == *(void *)(v0 + 792))
  {
    swift_bridgeObjectRelease();
    uint64_t v31 = *(void *)(v0 + 480);
    *(void *)(v0 + 952) = v78;
    *(void *)(v0 + 944) = v31;
    uint64_t v32 = (void *)swift_task_alloc();
    *(void *)(v0 + 960) = v32;
    void *v32 = v0;
    v32[1] = sub_100EFB87C;
    return sub_100EE13A4(v31);
  }
  uint64_t v34 = *(void *)(v0 + 936);
  *(void *)(v0 + 808) = v78;
  uint64_t v35 = *(void *)(v0 + 496);
  if ((v35 & 0xC000000000000001) != 0) {
    uint64_t v36 = (uint64_t (*)())specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  else {
    uint64_t v36 = (uint64_t (*)())*(id *)(v35 + 8 * v30 + 32);
  }
  uint64_t v39 = v36;
  *(void *)(v0 + 816) = v36;
  *(void *)(v0 + 824) = v30 + 1;
  if (__OFADD__(v30, 1))
  {
    __break(1u);
    return _swift_task_switch(v36, v37, v38);
  }
  uint64_t v40 = v0 + 1072;
  int v41 = *(unsigned __int8 *)(v0 + 1072);
  double v42 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v0 + 552) + 56);
  v42(*(void *)(v0 + 584), 1, 1, *(void *)(v0 + 544));
  if (v41 != 1)
  {
LABEL_24:
    uint64_t v59 = *(void *)(v0 + 624);
    char v60 = *(unsigned char *)(v40 + 1);
    uint64_t v77 = *(void *)(v0 + 504);
    uint64_t v61 = *(void **)((char *)v39 + OBJC_IVAR____TtC8Freeform8CRLBoard_store);
    *(void *)(v0 + 832) = v61;
    uint64_t v62 = *(void **)(v0 + 448);
    *(void *)(v0 + 840) = v62;
    uint64_t v63 = *(void *)((char *)v39 + OBJC_IVAR____TtC8Freeform8CRLBoard_data)
        + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
    swift_beginAccess();
    sub_100F38118(v63, v59, type metadata accessor for CRLBoardCRDTData);
    swift_bridgeObjectRetain();
    uint64_t v64 = v39;
    id v65 = v61;
    sub_1005057FC(&qword_101674450);
    CRRegister.wrappedValue.getter();
    uint64_t v66 = *(void *)(v0 + 424);
    uint64_t v67 = *(void *)(v0 + 432);
    sub_100F38180(v59, type metadata accessor for CRLBoardCRDTData);

    *(void *)(v0 + 848) = sub_1006F7638(v66, v67, v77, (v60 & 1) == 0, (uint64_t)v65, v62);
    *(void *)(v0 + 856) = v68;
    if (v34)
    {
      unint64_t v53 = *(void **)(v0 + 760);
      uint64_t v69 = *(void *)(v0 + 584);
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
      swift_release();

      sub_100522F00(v69, (uint64_t *)&unk_1016741D0);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_26;
    }
    uint64_t v71 = *(void *)(v0 + 720);
    uint64_t v72 = *(void *)(v0 + 656);
    swift_bridgeObjectRelease();
    UUID.init()();
    sub_100753370(v71, 0, 0xE000000000000000, v72);
    *(void *)(v0 + 864) = static MainActor.shared.getter();
    uint64_t v73 = dispatch thunk of Actor.unownedExecutor.getter();
    uint64_t v38 = v74;
    *(void *)(v0 + 872) = v73;
    *(void *)(v0 + 880) = v74;
    uint64_t v36 = sub_100EFA29C;
    uint64_t v37 = v73;
    return _swift_task_switch(v36, v37, v38);
  }
  uint64_t v75 = v42;
  uint64_t v43 = *(void *)(v0 + 720);
  uint64_t v44 = *(void *)(v0 + 664);
  uint64_t v45 = *(void *)(v0 + 624);
  uint64_t v76 = *(void *)(v0 + 576);
  uint64_t v46 = v34;
  uint64_t v47 = OBJC_IVAR____TtC8Freeform8CRLBoard_data;
  uint64_t v48 = *(void *)((char *)v39 + OBJC_IVAR____TtC8Freeform8CRLBoard_data)
      + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
  swift_beginAccess();
  sub_100F38118(v48, v45, type metadata accessor for CRLBoardCRDTData);
  id v49 = v39;
  swift_retain();
  sub_1005057FC(&qword_101674550);
  CRRegister.wrappedValue.getter();
  sub_100F38180(v45, type metadata accessor for CRLBoardCRDTData);
  swift_release();
  uint64_t v50 = (uint64_t *)(*(void *)((char *)v39 + v47) + OBJC_IVAR____TtC8Freeform12CRLBoardData_ownerName);
  uint64_t v51 = *v50;
  unint64_t v52 = v50[1];
  swift_bridgeObjectRetain();
  sub_100753370(v43, v51, v52, v44);

  sub_100ED7F04(v44, v76);
  if (!v46)
  {
    uint64_t v56 = *(void *)(v0 + 584);
    uint64_t v57 = *(void *)(v0 + 576);
    uint64_t v58 = *(void *)(v0 + 544);
    sub_100F38180(*(void *)(v0 + 664), type metadata accessor for CRLBoardIdentifier);
    sub_100522F00(v56, (uint64_t *)&unk_1016741D0);
    v75(v57, 0, 1, v58);
    sub_10051B3EC(v57, v56, (uint64_t *)&unk_1016741D0);
    uint64_t v34 = 0;
    uint64_t v40 = v0 + 1072;
    goto LABEL_24;
  }
  unint64_t v53 = *(void **)(v0 + 760);
  uint64_t v54 = *(void *)(v0 + 664);
  uint64_t v55 = *(void *)(v0 + 584);
  swift_release();

  sub_100F38180(v54, type metadata accessor for CRLBoardIdentifier);
  sub_100522F00(v55, (uint64_t *)&unk_1016741D0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_26:
  sub_100F0F760();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  char v70 = *(uint64_t (**)(void))(v0 + 8);
  return v70();
}